<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26129.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">curl_open</name><parameter_list pos:start="1:21" pos:end="1:75">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">filename</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:74"><decl pos:start="1:66" pos:end="1:74"><type pos:start="1:66" pos:end="1:74"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:74">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:19">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVCURLState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">CURLState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:20">state</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="14:0"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">double</name></type> <name pos:start="9:12" pos:end="9:12">d</name></decl>;</decl_stmt>



    <cpp:define pos:start="13:5" pos:end="13:35">#<cpp:directive pos:start="13:6" pos:end="13:11">define</cpp:directive> <cpp:macro pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:21">RA_OPTSTR</name></cpp:macro> <cpp:value pos:start="13:23" pos:end="13:35">":readahead="</cpp:value></cpp:define>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:8">char</name> <modifier pos:start="15:10" pos:end="15:10">*</modifier></type><name pos:start="15:11" pos:end="15:14">file</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:13"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:12">ra</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:22">ra_val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:24"><decl pos:start="21:5" pos:end="21:23"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:19">parse_state</name> <init pos:start="21:21" pos:end="21:23">= <expr pos:start="21:23" pos:end="21:23"><literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="25:26"><decl pos:start="25:5" pos:end="25:25"><type pos:start="25:5" pos:end="25:14"><specifier pos:start="25:5" pos:end="25:10">static</specifier> <name pos:start="25:12" pos:end="25:14">int</name></type> <name pos:start="25:16" pos:end="25:21">inited</name> <init pos:start="25:23" pos:end="25:25">= <expr pos:start="25:25" pos:end="25:25"><literal type="number" pos:start="25:25" pos:end="25:25">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:8">file</name> <operator pos:start="29:10" pos:end="29:10">=</operator> <call pos:start="29:12" pos:end="29:27"><name pos:start="29:12" pos:end="29:17">strdup</name><argument_list pos:start="29:18" pos:end="29:27">(<argument pos:start="29:19" pos:end="29:26"><expr pos:start="29:19" pos:end="29:26"><name pos:start="29:19" pos:end="29:26">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:40"><expr pos:start="31:5" pos:end="31:39"><name pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:5">s</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:21">readahead_size</name></name> <operator pos:start="31:23" pos:end="31:23">=</operator> <name pos:start="31:25" pos:end="31:39">READ_AHEAD_SIZE</name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:61">/* Parse a trailing ":readahead=#:" param, if present. */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:33"><expr pos:start="37:5" pos:end="37:32"><name pos:start="37:5" pos:end="37:6">ra</name> <operator pos:start="37:8" pos:end="37:8">=</operator> <name pos:start="37:10" pos:end="37:13">file</name> <operator pos:start="37:15" pos:end="37:15">+</operator> <call pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:22">strlen</name><argument_list pos:start="37:23" pos:end="37:28">(<argument pos:start="37:24" pos:end="37:27"><expr pos:start="37:24" pos:end="37:27"><name pos:start="37:24" pos:end="37:27">file</name></expr></argument>)</argument_list></call> <operator pos:start="37:30" pos:end="37:30">-</operator> <literal type="number" pos:start="37:32" pos:end="37:32">1</literal></expr>;</expr_stmt>

    <while pos:start="39:5" pos:end="83:5">while <condition pos:start="39:11" pos:end="39:22">(<expr pos:start="39:12" pos:end="39:21"><name pos:start="39:12" pos:end="39:13">ra</name> <operator pos:start="39:15" pos:end="39:16">&gt;=</operator> <name pos:start="39:18" pos:end="39:21">file</name></expr>)</condition> <block pos:start="39:24" pos:end="83:5">{<block_content pos:start="41:9" pos:end="81:13">

        <if_stmt pos:start="41:9" pos:end="79:9"><if pos:start="41:9" pos:end="51:9">if <condition pos:start="41:12" pos:end="41:29">(<expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:23">parse_state</name> <operator pos:start="41:25" pos:end="41:26">==</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>)</condition> <block pos:start="41:31" pos:end="51:9">{<block_content pos:start="43:13" pos:end="49:22">

            <if_stmt pos:start="43:13" pos:end="49:22"><if pos:start="43:13" pos:end="45:30">if <condition pos:start="43:16" pos:end="43:27">(<expr pos:start="43:17" pos:end="43:26"><operator pos:start="43:17" pos:end="43:17">*</operator><name pos:start="43:18" pos:end="43:19">ra</name> <operator pos:start="43:21" pos:end="43:22">==</operator> <literal type="char" pos:start="43:24" pos:end="43:26">':'</literal></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:30"><block_content pos:start="45:17" pos:end="45:30">

                <expr_stmt pos:start="45:17" pos:end="45:30"><expr pos:start="45:17" pos:end="45:29"><name pos:start="45:17" pos:end="45:27">parse_state</name><operator pos:start="45:28" pos:end="45:29">++</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="47:13" pos:end="49:22">else<block type="pseudo" pos:start="49:17" pos:end="49:22"><block_content pos:start="49:17" pos:end="49:22">

                <break pos:start="49:17" pos:end="49:22">break;</break></block_content></block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="51:11" pos:end="79:9">else if <condition pos:start="51:19" pos:end="51:36">(<expr pos:start="51:20" pos:end="51:35"><name pos:start="51:20" pos:end="51:30">parse_state</name> <operator pos:start="51:32" pos:end="51:33">==</operator> <literal type="number" pos:start="51:35" pos:end="51:35">1</literal></expr>)</condition> <block pos:start="51:38" pos:end="79:9">{<block_content pos:start="53:13" pos:end="77:13">

            <if_stmt pos:start="53:13" pos:end="77:13"><if pos:start="53:13" pos:end="77:13">if <condition pos:start="53:16" pos:end="53:39">(<expr pos:start="53:17" pos:end="53:38"><operator pos:start="53:17" pos:end="53:17">*</operator><name pos:start="53:18" pos:end="53:19">ra</name> <operator pos:start="53:21" pos:end="53:21">&gt;</operator> <literal type="char" pos:start="53:23" pos:end="53:25">'9'</literal> <operator pos:start="53:27" pos:end="53:28">||</operator> <operator pos:start="53:30" pos:end="53:30">*</operator><name pos:start="53:31" pos:end="53:32">ra</name> <operator pos:start="53:34" pos:end="53:34">&lt;</operator> <literal type="char" pos:start="53:36" pos:end="53:38">'0'</literal></expr>)</condition> <block pos:start="53:41" pos:end="77:13">{<block_content pos:start="55:17" pos:end="75:17">

                <decl_stmt pos:start="55:17" pos:end="55:61"><decl pos:start="55:17" pos:end="55:60"><type pos:start="55:17" pos:end="55:22"><name pos:start="55:17" pos:end="55:20">char</name> <modifier pos:start="55:22" pos:end="55:22">*</modifier></type><name pos:start="55:23" pos:end="55:31">opt_start</name> <init pos:start="55:33" pos:end="55:60">= <expr pos:start="55:35" pos:end="55:60"><name pos:start="55:35" pos:end="55:36">ra</name> <operator pos:start="55:38" pos:end="55:38">-</operator> <call pos:start="55:40" pos:end="55:56"><name pos:start="55:40" pos:end="55:45">strlen</name><argument_list pos:start="55:46" pos:end="55:56">(<argument pos:start="55:47" pos:end="55:55"><expr pos:start="55:47" pos:end="55:55"><name pos:start="55:47" pos:end="55:55">RA_OPTSTR</name></expr></argument>)</argument_list></call> <operator pos:start="55:58" pos:end="55:58">+</operator> <literal type="number" pos:start="55:60" pos:end="55:60">1</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="57:17" pos:end="75:17"><if pos:start="57:17" pos:end="71:17">if <condition pos:start="57:20" pos:end="59:74">(<expr pos:start="57:21" pos:end="59:73"><name pos:start="57:21" pos:end="57:29">opt_start</name> <operator pos:start="57:31" pos:end="57:31">&gt;</operator> <name pos:start="57:33" pos:end="57:36">file</name> <operator pos:start="57:38" pos:end="57:39">&amp;&amp;</operator>

                    <call pos:start="59:21" pos:end="59:68"><name pos:start="59:21" pos:end="59:27">strncmp</name><argument_list pos:start="59:28" pos:end="59:68">(<argument pos:start="59:29" pos:end="59:37"><expr pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:37">opt_start</name></expr></argument>, <argument pos:start="59:40" pos:end="59:48"><expr pos:start="59:40" pos:end="59:48"><name pos:start="59:40" pos:end="59:48">RA_OPTSTR</name></expr></argument>, <argument pos:start="59:51" pos:end="59:67"><expr pos:start="59:51" pos:end="59:67"><call pos:start="59:51" pos:end="59:67"><name pos:start="59:51" pos:end="59:56">strlen</name><argument_list pos:start="59:57" pos:end="59:67">(<argument pos:start="59:58" pos:end="59:66"><expr pos:start="59:58" pos:end="59:66"><name pos:start="59:58" pos:end="59:66">RA_OPTSTR</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call> <operator pos:start="59:70" pos:end="59:71">==</operator> <literal type="number" pos:start="59:73" pos:end="59:73">0</literal></expr>)</condition> <block pos:start="59:76" pos:end="71:17">{<block_content pos:start="61:21" pos:end="69:26">

                    <expr_stmt pos:start="61:21" pos:end="61:36"><expr pos:start="61:21" pos:end="61:35"><name pos:start="61:21" pos:end="61:26">ra_val</name> <operator pos:start="61:28" pos:end="61:28">=</operator> <name pos:start="61:30" pos:end="61:31">ra</name> <operator pos:start="61:33" pos:end="61:33">+</operator> <literal type="number" pos:start="61:35" pos:end="61:35">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="63:21" pos:end="63:48"><expr pos:start="63:21" pos:end="63:47"><name pos:start="63:21" pos:end="63:22">ra</name> <operator pos:start="63:24" pos:end="63:25">-=</operator> <call pos:start="63:27" pos:end="63:43"><name pos:start="63:27" pos:end="63:32">strlen</name><argument_list pos:start="63:33" pos:end="63:43">(<argument pos:start="63:34" pos:end="63:42"><expr pos:start="63:34" pos:end="63:42"><name pos:start="63:34" pos:end="63:42">RA_OPTSTR</name></expr></argument>)</argument_list></call> <operator pos:start="63:45" pos:end="63:45">-</operator> <literal type="number" pos:start="63:47" pos:end="63:47">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="65:21" pos:end="65:31"><expr pos:start="65:21" pos:end="65:30"><operator pos:start="65:21" pos:end="65:21">*</operator><name pos:start="65:22" pos:end="65:23">ra</name> <operator pos:start="65:25" pos:end="65:25">=</operator> <literal type="char" pos:start="65:27" pos:end="65:30">'\0'</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="67:21" pos:end="67:53"><expr pos:start="67:21" pos:end="67:52"><name pos:start="67:21" pos:end="67:37"><name pos:start="67:21" pos:end="67:21">s</name><operator pos:start="67:22" pos:end="67:23">-&gt;</operator><name pos:start="67:24" pos:end="67:37">readahead_size</name></name> <operator pos:start="67:39" pos:end="67:39">=</operator> <call pos:start="67:41" pos:end="67:52"><name pos:start="67:41" pos:end="67:44">atoi</name><argument_list pos:start="67:45" pos:end="67:52">(<argument pos:start="67:46" pos:end="67:51"><expr pos:start="67:46" pos:end="67:51"><name pos:start="67:46" pos:end="67:51">ra_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="69:21" pos:end="69:26">break;</break>

                </block_content>}</block></if> <else pos:start="71:19" pos:end="75:17">else <block pos:start="71:24" pos:end="75:17">{<block_content pos:start="73:21" pos:end="73:26">

                    <break pos:start="73:21" pos:end="73:26">break;</break>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:13"><expr pos:start="81:9" pos:end="81:12"><name pos:start="81:9" pos:end="81:10">ra</name><operator pos:start="81:11" pos:end="81:12">--</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:41">(<expr pos:start="87:9" pos:end="87:40"><operator pos:start="87:9" pos:end="87:9">(</operator><name pos:start="87:10" pos:end="87:26"><name pos:start="87:10" pos:end="87:10">s</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:26">readahead_size</name></name> <operator pos:start="87:28" pos:end="87:28">&amp;</operator> <literal type="number" pos:start="87:30" pos:end="87:34">0x1ff</literal><operator pos:start="87:35" pos:end="87:35">)</operator> <operator pos:start="87:37" pos:end="87:38">!=</operator> <literal type="number" pos:start="87:40" pos:end="87:40">0</literal></expr>)</condition> <block pos:start="87:43" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:25">

        <expr_stmt pos:start="89:9" pos:end="91:35"><expr pos:start="89:9" pos:end="91:34"><call pos:start="89:9" pos:end="91:34"><name pos:start="89:9" pos:end="89:15">fprintf</name><argument_list pos:start="89:16" pos:end="91:34">(<argument pos:start="89:17" pos:end="89:22"><expr pos:start="89:17" pos:end="89:22"><name pos:start="89:17" pos:end="89:22">stderr</name></expr></argument>, <argument pos:start="89:25" pos:end="89:76"><expr pos:start="89:25" pos:end="89:76"><literal type="string" pos:start="89:25" pos:end="89:76">"HTTP_READAHEAD_SIZE %Zd is not a multiple of 512\n"</literal></expr></argument>,

                <argument pos:start="91:17" pos:end="91:33"><expr pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:17">s</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:33">readahead_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="93:9" pos:end="93:25">goto <name pos:start="93:14" pos:end="93:24">out_noclean</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><operator pos:start="99:9" pos:end="99:9">!</operator><name pos:start="99:10" pos:end="99:15">inited</name></expr>)</condition> <block pos:start="99:18" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:19">

        <expr_stmt pos:start="101:9" pos:end="101:42"><expr pos:start="101:9" pos:end="101:41"><call pos:start="101:9" pos:end="101:41"><name pos:start="101:9" pos:end="101:24">curl_global_init</name><argument_list pos:start="101:25" pos:end="101:41">(<argument pos:start="101:26" pos:end="101:40"><expr pos:start="101:26" pos:end="101:40"><name pos:start="101:26" pos:end="101:40">CURL_GLOBAL_ALL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:19"><expr pos:start="103:9" pos:end="103:18"><name pos:start="103:9" pos:end="103:14">inited</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <literal type="number" pos:start="103:18" pos:end="103:18">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:40"><expr pos:start="109:5" pos:end="109:39"><call pos:start="109:5" pos:end="109:39"><name pos:start="109:5" pos:end="109:11">DPRINTF</name><argument_list pos:start="109:12" pos:end="109:39">(<argument pos:start="109:13" pos:end="109:32"><expr pos:start="109:13" pos:end="109:32"><literal type="string" pos:start="109:13" pos:end="109:32">"CURL: Opening %s\n"</literal></expr></argument>, <argument pos:start="109:35" pos:end="109:38"><expr pos:start="109:35" pos:end="109:38"><name pos:start="109:35" pos:end="109:38">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:18"><expr pos:start="111:5" pos:end="111:17"><name pos:start="111:5" pos:end="111:10"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:10">url</name></name> <operator pos:start="111:12" pos:end="111:12">=</operator> <name pos:start="111:14" pos:end="111:17">file</name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:31"><expr pos:start="113:5" pos:end="113:30"><name pos:start="113:5" pos:end="113:9">state</name> <operator pos:start="113:11" pos:end="113:11">=</operator> <call pos:start="113:13" pos:end="113:30"><name pos:start="113:13" pos:end="113:27">curl_init_state</name><argument_list pos:start="113:28" pos:end="113:30">(<argument pos:start="113:29" pos:end="113:29"><expr pos:start="113:29" pos:end="113:29"><name pos:start="113:29" pos:end="113:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="115:5" pos:end="117:25"><if pos:start="115:5" pos:end="117:25">if <condition pos:start="115:8" pos:end="115:15">(<expr pos:start="115:9" pos:end="115:14"><operator pos:start="115:9" pos:end="115:9">!</operator><name pos:start="115:10" pos:end="115:14">state</name></expr>)</condition><block type="pseudo" pos:start="117:9" pos:end="117:25"><block_content pos:start="117:9" pos:end="117:25">

        <goto pos:start="117:9" pos:end="117:25">goto <name pos:start="117:14" pos:end="117:24">out_noclean</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="121:5" pos:end="121:20">// Get file size</comment>



    <expr_stmt pos:start="125:5" pos:end="125:53"><expr pos:start="125:5" pos:end="125:52"><call pos:start="125:5" pos:end="125:52"><name pos:start="125:5" pos:end="125:20">curl_easy_setopt</name><argument_list pos:start="125:21" pos:end="125:52">(<argument pos:start="125:22" pos:end="125:32"><expr pos:start="125:22" pos:end="125:32"><name pos:start="125:22" pos:end="125:32"><name pos:start="125:22" pos:end="125:26">state</name><operator pos:start="125:27" pos:end="125:28">-&gt;</operator><name pos:start="125:29" pos:end="125:32">curl</name></name></expr></argument>, <argument pos:start="125:35" pos:end="125:48"><expr pos:start="125:35" pos:end="125:48"><name pos:start="125:35" pos:end="125:48">CURLOPT_NOBODY</name></expr></argument>, <argument pos:start="125:51" pos:end="125:51"><expr pos:start="125:51" pos:end="125:51"><literal type="number" pos:start="125:51" pos:end="125:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:79"><expr pos:start="127:5" pos:end="127:78"><call pos:start="127:5" pos:end="127:78"><name pos:start="127:5" pos:end="127:20">curl_easy_setopt</name><argument_list pos:start="127:21" pos:end="127:78">(<argument pos:start="127:22" pos:end="127:32"><expr pos:start="127:22" pos:end="127:32"><name pos:start="127:22" pos:end="127:32"><name pos:start="127:22" pos:end="127:26">state</name><operator pos:start="127:27" pos:end="127:28">-&gt;</operator><name pos:start="127:29" pos:end="127:32">curl</name></name></expr></argument>, <argument pos:start="127:35" pos:end="127:55"><expr pos:start="127:35" pos:end="127:55"><name pos:start="127:35" pos:end="127:55">CURLOPT_WRITEFUNCTION</name></expr></argument>, <argument pos:start="127:58" pos:end="127:77"><expr pos:start="127:58" pos:end="127:77"><operator pos:start="127:58" pos:end="127:58">(</operator><name pos:start="127:59" pos:end="127:62">void</name> <operator pos:start="127:64" pos:end="127:64">*</operator><operator pos:start="127:65" pos:end="127:65">)</operator><name pos:start="127:66" pos:end="127:77">curl_size_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="131:17"><if pos:start="129:5" pos:end="131:17">if <condition pos:start="129:8" pos:end="129:39">(<expr pos:start="129:9" pos:end="129:38"><call pos:start="129:9" pos:end="129:38"><name pos:start="129:9" pos:end="129:25">curl_easy_perform</name><argument_list pos:start="129:26" pos:end="129:38">(<argument pos:start="129:27" pos:end="129:37"><expr pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:37"><name pos:start="129:27" pos:end="129:31">state</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:37">curl</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="131:9" pos:end="131:17"><block_content pos:start="131:9" pos:end="131:17">

        <goto pos:start="131:9" pos:end="131:17">goto <name pos:start="131:14" pos:end="131:16">out</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:73"><expr pos:start="133:5" pos:end="133:72"><call pos:start="133:5" pos:end="133:72"><name pos:start="133:5" pos:end="133:21">curl_easy_getinfo</name><argument_list pos:start="133:22" pos:end="133:72">(<argument pos:start="133:23" pos:end="133:33"><expr pos:start="133:23" pos:end="133:33"><name pos:start="133:23" pos:end="133:33"><name pos:start="133:23" pos:end="133:27">state</name><operator pos:start="133:28" pos:end="133:29">-&gt;</operator><name pos:start="133:30" pos:end="133:33">curl</name></name></expr></argument>, <argument pos:start="133:36" pos:end="133:67"><expr pos:start="133:36" pos:end="133:67"><name pos:start="133:36" pos:end="133:67">CURLINFO_CONTENT_LENGTH_DOWNLOAD</name></expr></argument>, <argument pos:start="133:70" pos:end="133:71"><expr pos:start="133:70" pos:end="133:71"><operator pos:start="133:70" pos:end="133:70">&amp;</operator><name pos:start="133:71" pos:end="133:71">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:79"><expr pos:start="135:5" pos:end="135:78"><call pos:start="135:5" pos:end="135:78"><name pos:start="135:5" pos:end="135:20">curl_easy_setopt</name><argument_list pos:start="135:21" pos:end="135:78">(<argument pos:start="135:22" pos:end="135:32"><expr pos:start="135:22" pos:end="135:32"><name pos:start="135:22" pos:end="135:32"><name pos:start="135:22" pos:end="135:26">state</name><operator pos:start="135:27" pos:end="135:28">-&gt;</operator><name pos:start="135:29" pos:end="135:32">curl</name></name></expr></argument>, <argument pos:start="135:35" pos:end="135:55"><expr pos:start="135:35" pos:end="135:55"><name pos:start="135:35" pos:end="135:55">CURLOPT_WRITEFUNCTION</name></expr></argument>, <argument pos:start="135:58" pos:end="135:77"><expr pos:start="135:58" pos:end="135:77"><operator pos:start="135:58" pos:end="135:58">(</operator><name pos:start="135:59" pos:end="135:62">void</name> <operator pos:start="135:64" pos:end="135:64">*</operator><operator pos:start="135:65" pos:end="135:65">)</operator><name pos:start="135:66" pos:end="135:77">curl_read_cb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:53"><expr pos:start="137:5" pos:end="137:52"><call pos:start="137:5" pos:end="137:52"><name pos:start="137:5" pos:end="137:20">curl_easy_setopt</name><argument_list pos:start="137:21" pos:end="137:52">(<argument pos:start="137:22" pos:end="137:32"><expr pos:start="137:22" pos:end="137:32"><name pos:start="137:22" pos:end="137:32"><name pos:start="137:22" pos:end="137:26">state</name><operator pos:start="137:27" pos:end="137:28">-&gt;</operator><name pos:start="137:29" pos:end="137:32">curl</name></name></expr></argument>, <argument pos:start="137:35" pos:end="137:48"><expr pos:start="137:35" pos:end="137:48"><name pos:start="137:35" pos:end="137:48">CURLOPT_NOBODY</name></expr></argument>, <argument pos:start="137:51" pos:end="137:51"><expr pos:start="137:51" pos:end="137:51"><literal type="number" pos:start="137:51" pos:end="137:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="139:5" pos:end="145:17"><if pos:start="139:5" pos:end="141:27">if <condition pos:start="139:8" pos:end="139:10">(<expr pos:start="139:9" pos:end="139:9"><name pos:start="139:9" pos:end="139:9">d</name></expr>)</condition><block type="pseudo" pos:start="141:9" pos:end="141:27"><block_content pos:start="141:9" pos:end="141:27">

        <expr_stmt pos:start="141:9" pos:end="141:27"><expr pos:start="141:9" pos:end="141:26"><name pos:start="141:9" pos:end="141:14"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:14">len</name></name> <operator pos:start="141:16" pos:end="141:16">=</operator> <operator pos:start="141:18" pos:end="141:18">(</operator><name pos:start="141:19" pos:end="141:24">size_t</name><operator pos:start="141:25" pos:end="141:25">)</operator><name pos:start="141:26" pos:end="141:26">d</name></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="143:5" pos:end="145:17">else if<condition pos:start="143:12" pos:end="143:20">(<expr pos:start="143:13" pos:end="143:19"><operator pos:start="143:13" pos:end="143:13">!</operator><name pos:start="143:14" pos:end="143:19"><name pos:start="143:14" pos:end="143:14">s</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:19">len</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:17"><block_content pos:start="145:9" pos:end="145:17">

        <goto pos:start="145:9" pos:end="145:17">goto <name pos:start="145:14" pos:end="145:16">out</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:54"><expr pos:start="147:5" pos:end="147:53"><call pos:start="147:5" pos:end="147:53"><name pos:start="147:5" pos:end="147:11">DPRINTF</name><argument_list pos:start="147:12" pos:end="147:53">(<argument pos:start="147:13" pos:end="147:33"><expr pos:start="147:13" pos:end="147:33"><literal type="string" pos:start="147:13" pos:end="147:33">"CURL: Size = %lld\n"</literal></expr></argument>, <argument pos:start="147:36" pos:end="147:52"><expr pos:start="147:36" pos:end="147:52"><operator pos:start="147:36" pos:end="147:36">(</operator><name pos:start="147:37" pos:end="147:40">long</name> <name pos:start="147:42" pos:end="147:45">long</name><operator pos:start="147:46" pos:end="147:46">)</operator><name pos:start="147:47" pos:end="147:52"><name pos:start="147:47" pos:end="147:47">s</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:52">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><call pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:20">curl_clean_state</name><argument_list pos:start="151:21" pos:end="151:27">(<argument pos:start="151:22" pos:end="151:26"><expr pos:start="151:22" pos:end="151:26"><name pos:start="151:22" pos:end="151:26">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="153:5" pos:end="153:35"><expr pos:start="153:5" pos:end="153:34"><call pos:start="153:5" pos:end="153:34"><name pos:start="153:5" pos:end="153:21">curl_easy_cleanup</name><argument_list pos:start="153:22" pos:end="153:34">(<argument pos:start="153:23" pos:end="153:33"><expr pos:start="153:23" pos:end="153:33"><name pos:start="153:23" pos:end="153:33"><name pos:start="153:23" pos:end="153:27">state</name><operator pos:start="153:28" pos:end="153:29">-&gt;</operator><name pos:start="153:30" pos:end="153:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="155:5" pos:end="155:23"><expr pos:start="155:5" pos:end="155:22"><name pos:start="155:5" pos:end="155:15"><name pos:start="155:5" pos:end="155:9">state</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:15">curl</name></name> <operator pos:start="155:17" pos:end="155:17">=</operator> <name pos:start="155:19" pos:end="155:22">NULL</name></expr>;</expr_stmt>



    <comment type="line" pos:start="159:5" pos:end="159:57">// Now we know the file exists and its size, so let's</comment>

    <comment type="line" pos:start="161:5" pos:end="161:38">// initialize the multi interface!</comment>



    <expr_stmt pos:start="165:5" pos:end="165:33"><expr pos:start="165:5" pos:end="165:32"><name pos:start="165:5" pos:end="165:12"><name pos:start="165:5" pos:end="165:5">s</name><operator pos:start="165:6" pos:end="165:7">-&gt;</operator><name pos:start="165:8" pos:end="165:12">multi</name></name> <operator pos:start="165:14" pos:end="165:14">=</operator> <call pos:start="165:16" pos:end="165:32"><name pos:start="165:16" pos:end="165:30">curl_multi_init</name><argument_list pos:start="165:31" pos:end="165:32">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="167:5" pos:end="167:57"><expr pos:start="167:5" pos:end="167:56"><call pos:start="167:5" pos:end="167:56"><name pos:start="167:5" pos:end="167:21">curl_multi_setopt</name><argument_list pos:start="167:22" pos:end="167:56">( <argument pos:start="167:24" pos:end="167:31"><expr pos:start="167:24" pos:end="167:31"><name pos:start="167:24" pos:end="167:31"><name pos:start="167:24" pos:end="167:24">s</name><operator pos:start="167:25" pos:end="167:26">-&gt;</operator><name pos:start="167:27" pos:end="167:31">multi</name></name></expr></argument>, <argument pos:start="167:34" pos:end="167:52"><expr pos:start="167:34" pos:end="167:52"><name pos:start="167:34" pos:end="167:52">CURLMOPT_SOCKETDATA</name></expr></argument>, <argument pos:start="167:55" pos:end="167:55"><expr pos:start="167:55" pos:end="167:55"><name pos:start="167:55" pos:end="167:55">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

    <expr_stmt pos:start="169:5" pos:end="169:73"><expr pos:start="169:5" pos:end="169:72"><call pos:start="169:5" pos:end="169:72"><name pos:start="169:5" pos:end="169:21">curl_multi_setopt</name><argument_list pos:start="169:22" pos:end="169:72">( <argument pos:start="169:24" pos:end="169:31"><expr pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:31"><name pos:start="169:24" pos:end="169:24">s</name><operator pos:start="169:25" pos:end="169:26">-&gt;</operator><name pos:start="169:27" pos:end="169:31">multi</name></name></expr></argument>, <argument pos:start="169:34" pos:end="169:56"><expr pos:start="169:34" pos:end="169:56"><name pos:start="169:34" pos:end="169:56">CURLMOPT_SOCKETFUNCTION</name></expr></argument>, <argument pos:start="169:59" pos:end="169:70"><expr pos:start="169:59" pos:end="169:70"><name pos:start="169:59" pos:end="169:70">curl_sock_cb</name></expr></argument> )</argument_list></call></expr>;</expr_stmt> 

    <expr_stmt pos:start="171:5" pos:end="171:21"><expr pos:start="171:5" pos:end="171:20"><call pos:start="171:5" pos:end="171:20"><name pos:start="171:5" pos:end="171:17">curl_multi_do</name><argument_list pos:start="171:18" pos:end="171:20">(<argument pos:start="171:19" pos:end="171:19"><expr pos:start="171:19" pos:end="171:19"><name pos:start="171:19" pos:end="171:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>



<label pos:start="179:1" pos:end="179:4"><name pos:start="179:1" pos:end="179:3">out</name>:</label>

    <expr_stmt pos:start="181:5" pos:end="181:69"><expr pos:start="181:5" pos:end="181:68"><call pos:start="181:5" pos:end="181:68"><name pos:start="181:5" pos:end="181:11">fprintf</name><argument_list pos:start="181:12" pos:end="181:68">(<argument pos:start="181:13" pos:end="181:18"><expr pos:start="181:13" pos:end="181:18"><name pos:start="181:13" pos:end="181:18">stderr</name></expr></argument>, <argument pos:start="181:21" pos:end="181:52"><expr pos:start="181:21" pos:end="181:52"><literal type="string" pos:start="181:21" pos:end="181:52">"CURL: Error opening file: %s\n"</literal></expr></argument>, <argument pos:start="181:55" pos:end="181:67"><expr pos:start="181:55" pos:end="181:67"><name pos:start="181:55" pos:end="181:67"><name pos:start="181:55" pos:end="181:59">state</name><operator pos:start="181:60" pos:end="181:61">-&gt;</operator><name pos:start="181:62" pos:end="181:67">errmsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:35"><expr pos:start="183:5" pos:end="183:34"><call pos:start="183:5" pos:end="183:34"><name pos:start="183:5" pos:end="183:21">curl_easy_cleanup</name><argument_list pos:start="183:22" pos:end="183:34">(<argument pos:start="183:23" pos:end="183:33"><expr pos:start="183:23" pos:end="183:33"><name pos:start="183:23" pos:end="183:33"><name pos:start="183:23" pos:end="183:27">state</name><operator pos:start="183:28" pos:end="183:29">-&gt;</operator><name pos:start="183:30" pos:end="183:33">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:23"><expr pos:start="185:5" pos:end="185:22"><name pos:start="185:5" pos:end="185:15"><name pos:start="185:5" pos:end="185:9">state</name><operator pos:start="185:10" pos:end="185:11">-&gt;</operator><name pos:start="185:12" pos:end="185:15">curl</name></name> <operator pos:start="185:17" pos:end="185:17">=</operator> <name pos:start="185:19" pos:end="185:22">NULL</name></expr>;</expr_stmt>

<label pos:start="187:1" pos:end="187:12"><name pos:start="187:1" pos:end="187:11">out_noclean</name>:</label>

    <expr_stmt pos:start="189:5" pos:end="189:20"><expr pos:start="189:5" pos:end="189:19"><call pos:start="189:5" pos:end="189:19"><name pos:start="189:5" pos:end="189:13">qemu_free</name><argument_list pos:start="189:14" pos:end="189:19">(<argument pos:start="189:15" pos:end="189:18"><expr pos:start="189:15" pos:end="189:18"><name pos:start="189:15" pos:end="189:18">file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="191:5" pos:end="191:19">return <expr pos:start="191:12" pos:end="191:18"><operator pos:start="191:12" pos:end="191:12">-</operator><name pos:start="191:13" pos:end="191:18">EINVAL</name></expr>;</return>

</block_content>}</block></function>
</unit>
