<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14534.c" pos:tabs="8"><function pos:start="1:1" pos:end="3365:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:38">translate_one</name> <parameter_list pos:start="1:40" pos:end="1:73">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:52">DisasContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ctx</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:72"><decl pos:start="1:60" pos:end="1:72"><type pos:start="1:60" pos:end="1:72"><name pos:start="1:60" pos:end="1:67">uint32_t</name></type> <name pos:start="1:69" pos:end="1:72">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="3365:1">{<block_content pos:start="5:5" pos:end="3363:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:20">palcode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int32_t</name></type> <name pos:start="7:13" pos:end="7:18">disp21</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:21" pos:end="7:26">disp16</name></decl>, <decl pos:start="7:29" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:11"/><name pos:start="7:29" pos:end="7:34">disp12</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:24"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:17">fn11</name></decl>, <decl pos:start="9:20" pos:end="9:23"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:20" pos:end="9:23">fn16</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:56"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:15">opc</name></decl>, <decl pos:start="11:18" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:19">ra</name></decl>, <decl pos:start="11:22" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:22" pos:end="11:23">rb</name></decl>, <decl pos:start="11:26" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:26" pos:end="11:27">rc</name></decl>, <decl pos:start="11:30" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:30" pos:end="11:32">sbz</name></decl>, <decl pos:start="11:35" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:35" pos:end="11:38">fpfn</name></decl>, <decl pos:start="11:41" pos:end="11:43"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:41" pos:end="11:43">fn7</name></decl>, <decl pos:start="11:46" pos:end="11:48"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:46" pos:end="11:48">fn2</name></decl>, <decl pos:start="11:51" pos:end="11:55"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:51" pos:end="11:55">islit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:15">lit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:39">/* Decode all instruction fields */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:21"><expr pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:7">opc</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <name pos:start="21:11" pos:end="21:14">insn</name> <operator pos:start="21:16" pos:end="21:17">&gt;&gt;</operator> <literal type="number" pos:start="21:19" pos:end="21:20">26</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:6">ra</name> <operator pos:start="23:8" pos:end="23:8">=</operator> <operator pos:start="23:10" pos:end="23:10">(</operator><name pos:start="23:11" pos:end="23:14">insn</name> <operator pos:start="23:16" pos:end="23:17">&gt;&gt;</operator> <literal type="number" pos:start="23:19" pos:end="23:20">21</literal><operator pos:start="23:21" pos:end="23:21">)</operator> <operator pos:start="23:23" pos:end="23:23">&amp;</operator> <literal type="number" pos:start="23:25" pos:end="23:28">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:6">rb</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <operator pos:start="25:10" pos:end="25:10">(</operator><name pos:start="25:11" pos:end="25:14">insn</name> <operator pos:start="25:16" pos:end="25:17">&gt;&gt;</operator> <literal type="number" pos:start="25:19" pos:end="25:20">16</literal><operator pos:start="25:21" pos:end="25:21">)</operator> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <literal type="number" pos:start="25:25" pos:end="25:28">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:21"><expr pos:start="27:5" pos:end="27:20"><name pos:start="27:5" pos:end="27:6">rc</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <name pos:start="27:10" pos:end="27:13">insn</name> <operator pos:start="27:15" pos:end="27:15">&amp;</operator> <literal type="number" pos:start="27:17" pos:end="27:20">0x1F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:7">sbz</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <operator pos:start="29:11" pos:end="29:11">(</operator><name pos:start="29:12" pos:end="29:15">insn</name> <operator pos:start="29:17" pos:end="29:18">&gt;&gt;</operator> <literal type="number" pos:start="29:20" pos:end="29:21">13</literal><operator pos:start="29:22" pos:end="29:22">)</operator> <operator pos:start="29:24" pos:end="29:24">&amp;</operator> <literal type="number" pos:start="29:26" pos:end="29:29">0x07</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:29"><expr pos:start="31:5" pos:end="31:28"><name pos:start="31:5" pos:end="31:9">islit</name> <operator pos:start="31:11" pos:end="31:11">=</operator> <operator pos:start="31:13" pos:end="31:13">(</operator><name pos:start="31:14" pos:end="31:17">insn</name> <operator pos:start="31:19" pos:end="31:20">&gt;&gt;</operator> <literal type="number" pos:start="31:22" pos:end="31:23">12</literal><operator pos:start="31:24" pos:end="31:24">)</operator> <operator pos:start="31:26" pos:end="31:26">&amp;</operator> <literal type="number" pos:start="31:28" pos:end="31:28">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="41:34"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:27">(<expr pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:10">rb</name> <operator pos:start="33:12" pos:end="33:13">==</operator> <literal type="number" pos:start="33:15" pos:end="33:16">31</literal> <operator pos:start="33:18" pos:end="33:19">&amp;&amp;</operator> <operator pos:start="33:21" pos:end="33:21">!</operator><name pos:start="33:22" pos:end="33:26">islit</name></expr>)</condition> <block pos:start="33:29" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:16">

        <expr_stmt pos:start="35:9" pos:end="35:18"><expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:13">islit</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:16"><expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:11">lit</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="41:34">else<block type="pseudo" pos:start="41:9" pos:end="41:34"><block_content pos:start="41:9" pos:end="41:34">

        <expr_stmt pos:start="41:9" pos:end="41:34"><expr pos:start="41:9" pos:end="41:33"><name pos:start="41:9" pos:end="41:11">lit</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">(</operator><name pos:start="41:16" pos:end="41:19">insn</name> <operator pos:start="41:21" pos:end="41:22">&gt;&gt;</operator> <literal type="number" pos:start="41:24" pos:end="41:25">13</literal><operator pos:start="41:26" pos:end="41:26">)</operator> <operator pos:start="41:28" pos:end="41:28">&amp;</operator> <literal type="number" pos:start="41:30" pos:end="41:33">0xFF</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:11">palcode</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:18">insn</name> <operator pos:start="43:20" pos:end="43:20">&amp;</operator> <literal type="number" pos:start="43:22" pos:end="43:31">0x03FFFFFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:58"><expr pos:start="45:5" pos:end="45:57"><name pos:start="45:5" pos:end="45:10">disp21</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <operator pos:start="45:14" pos:end="45:14">(</operator><operator pos:start="45:15" pos:end="45:15">(</operator><name pos:start="45:16" pos:end="45:22">int32_t</name><operator pos:start="45:23" pos:end="45:23">)</operator><operator pos:start="45:24" pos:end="45:24">(</operator><operator pos:start="45:25" pos:end="45:25">(</operator><name pos:start="45:26" pos:end="45:29">insn</name> <operator pos:start="45:31" pos:end="45:31">&amp;</operator> <literal type="number" pos:start="45:33" pos:end="45:42">0x001FFFFF</literal><operator pos:start="45:43" pos:end="45:43">)</operator> <operator pos:start="45:45" pos:end="45:46">&lt;&lt;</operator> <literal type="number" pos:start="45:48" pos:end="45:49">11</literal><operator pos:start="45:50" pos:end="45:50">)</operator><operator pos:start="45:51" pos:end="45:51">)</operator> <operator pos:start="45:53" pos:end="45:54">&gt;&gt;</operator> <literal type="number" pos:start="45:56" pos:end="45:57">11</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:42"><expr pos:start="47:5" pos:end="47:41"><name pos:start="47:5" pos:end="47:10">disp16</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <operator pos:start="47:14" pos:end="47:14">(</operator><name pos:start="47:15" pos:end="47:21">int16_t</name><operator pos:start="47:22" pos:end="47:22">)</operator><operator pos:start="47:23" pos:end="47:23">(</operator><name pos:start="47:24" pos:end="47:27">insn</name> <operator pos:start="47:29" pos:end="47:29">&amp;</operator> <literal type="number" pos:start="47:31" pos:end="47:40">0x0000FFFF</literal><operator pos:start="47:41" pos:end="47:41">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:56"><expr pos:start="49:5" pos:end="49:55"><name pos:start="49:5" pos:end="49:10">disp12</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:21">int32_t</name><operator pos:start="49:22" pos:end="49:22">)</operator><operator pos:start="49:23" pos:end="49:23">(</operator><operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:28">insn</name> <operator pos:start="49:30" pos:end="49:30">&amp;</operator> <literal type="number" pos:start="49:32" pos:end="49:41">0x00000FFF</literal><operator pos:start="49:42" pos:end="49:42">)</operator> <operator pos:start="49:44" pos:end="49:45">&lt;&lt;</operator> <literal type="number" pos:start="49:47" pos:end="49:48">20</literal><operator pos:start="49:49" pos:end="49:49">)</operator> <operator pos:start="49:51" pos:end="49:52">&gt;&gt;</operator> <literal type="number" pos:start="49:54" pos:end="49:55">20</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:29"><expr pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:8">fn16</name> <operator pos:start="51:10" pos:end="51:10">=</operator> <name pos:start="51:12" pos:end="51:15">insn</name> <operator pos:start="51:17" pos:end="51:17">&amp;</operator> <literal type="number" pos:start="51:19" pos:end="51:28">0x0000FFFF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:36"><expr pos:start="53:5" pos:end="53:35"><name pos:start="53:5" pos:end="53:8">fn11</name> <operator pos:start="53:10" pos:end="53:10">=</operator> <operator pos:start="53:12" pos:end="53:12">(</operator><name pos:start="53:13" pos:end="53:16">insn</name> <operator pos:start="53:18" pos:end="53:19">&gt;&gt;</operator> <literal type="number" pos:start="53:21" pos:end="53:21">5</literal><operator pos:start="53:22" pos:end="53:22">)</operator> <operator pos:start="53:24" pos:end="53:24">&amp;</operator> <literal type="number" pos:start="53:26" pos:end="53:35">0x000007FF</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:23"><expr pos:start="55:5" pos:end="55:22"><name pos:start="55:5" pos:end="55:8">fpfn</name> <operator pos:start="55:10" pos:end="55:10">=</operator> <name pos:start="55:12" pos:end="55:15">fn11</name> <operator pos:start="55:17" pos:end="55:17">&amp;</operator> <literal type="number" pos:start="55:19" pos:end="55:22">0x3F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:7">fn7</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <operator pos:start="57:11" pos:end="57:11">(</operator><name pos:start="57:12" pos:end="57:15">insn</name> <operator pos:start="57:17" pos:end="57:18">&gt;&gt;</operator> <literal type="number" pos:start="57:20" pos:end="57:20">5</literal><operator pos:start="57:21" pos:end="57:21">)</operator> <operator pos:start="57:23" pos:end="57:23">&amp;</operator> <literal type="number" pos:start="57:25" pos:end="57:34">0x0000007F</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:35"><expr pos:start="59:5" pos:end="59:34"><name pos:start="59:5" pos:end="59:7">fn2</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <operator pos:start="59:11" pos:end="59:11">(</operator><name pos:start="59:12" pos:end="59:15">insn</name> <operator pos:start="59:17" pos:end="59:18">&gt;&gt;</operator> <literal type="number" pos:start="59:20" pos:end="59:20">5</literal><operator pos:start="59:21" pos:end="59:21">)</operator> <operator pos:start="59:23" pos:end="59:23">&amp;</operator> <literal type="number" pos:start="59:25" pos:end="59:34">0x00000003</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:12"><expr pos:start="61:5" pos:end="61:11"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="65:39"><expr pos:start="63:5" pos:end="65:38"><call pos:start="63:5" pos:end="65:38"><name pos:start="63:5" pos:end="63:13">LOG_DISAS</name><argument_list pos:start="63:14" pos:end="65:38">(<argument pos:start="63:15" pos:end="63:56"><expr pos:start="63:15" pos:end="63:56"><literal type="string" pos:start="63:15" pos:end="63:56">"opc %02x ra %d rb %d rc %d disp16 %04x\n"</literal></expr></argument>,

              <argument pos:start="65:15" pos:end="65:17"><expr pos:start="65:15" pos:end="65:17"><name pos:start="65:15" pos:end="65:17">opc</name></expr></argument>, <argument pos:start="65:20" pos:end="65:21"><expr pos:start="65:20" pos:end="65:21"><name pos:start="65:20" pos:end="65:21">ra</name></expr></argument>, <argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">rb</name></expr></argument>, <argument pos:start="65:28" pos:end="65:29"><expr pos:start="65:28" pos:end="65:29"><name pos:start="65:28" pos:end="65:29">rc</name></expr></argument>, <argument pos:start="65:32" pos:end="65:37"><expr pos:start="65:32" pos:end="65:37"><name pos:start="65:32" pos:end="65:37">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="67:5" pos:end="3359:5">switch <condition pos:start="67:12" pos:end="67:16">(<expr pos:start="67:13" pos:end="67:15"><name pos:start="67:13" pos:end="67:15">opc</name></expr>)</condition> <block pos:start="67:18" pos:end="3359:5">{<block_content pos:start="69:5" pos:end="3357:14">

    <case pos:start="69:5" pos:end="69:14">case <expr pos:start="69:10" pos:end="69:13"><literal type="number" pos:start="69:10" pos:end="69:13">0x00</literal></expr>:</case>

        <comment type="block" pos:start="71:9" pos:end="71:22">/* CALL_PAL */</comment>

        <if_stmt pos:start="73:9" pos:end="101:9"><if pos:start="73:9" pos:end="81:9">if <condition pos:start="73:12" pos:end="73:46">(<expr pos:start="73:13" pos:end="73:45"><name pos:start="73:13" pos:end="73:19">palcode</name> <operator pos:start="73:21" pos:end="73:22">&gt;=</operator> <literal type="number" pos:start="73:24" pos:end="73:27">0x80</literal> <operator pos:start="73:29" pos:end="73:30">&amp;&amp;</operator> <name pos:start="73:32" pos:end="73:38">palcode</name> <operator pos:start="73:40" pos:end="73:40">&lt;</operator> <literal type="number" pos:start="73:42" pos:end="73:45">0xC0</literal></expr>)</condition> <block pos:start="73:48" pos:end="81:9">{<block_content pos:start="77:13" pos:end="80:0">

            <comment type="block" pos:start="75:13" pos:end="75:39">/* Unprivileged PAL call */</comment>

            <expr_stmt pos:start="77:13" pos:end="80:0"><expr pos:start="77:13" pos:end="77:69"><call pos:start="77:13" pos:end="77:69"><name pos:start="77:13" pos:end="77:20">gen_excp</name><argument_list pos:start="77:21" pos:end="77:69">(<argument pos:start="77:22" pos:end="77:24"><expr pos:start="77:22" pos:end="77:24"><name pos:start="77:22" pos:end="77:24">ctx</name></expr></argument>, <argument pos:start="77:27" pos:end="77:65"><expr pos:start="77:27" pos:end="77:65"><name pos:start="77:27" pos:end="77:39">EXCP_CALL_PAL</name> <operator pos:start="77:41" pos:end="77:41">+</operator> <operator pos:start="77:43" pos:end="77:43">(</operator><operator pos:start="77:44" pos:end="77:44">(</operator><name pos:start="77:45" pos:end="77:51">palcode</name> <operator pos:start="77:53" pos:end="77:53">&amp;</operator> <literal type="number" pos:start="77:55" pos:end="77:58">0x1F</literal><operator pos:start="77:59" pos:end="77:59">)</operator> <operator pos:start="77:61" pos:end="77:62">&lt;&lt;</operator> <literal type="number" pos:start="77:64" pos:end="77:64">6</literal><operator pos:start="77:65" pos:end="77:65">)</operator></expr></argument>, <argument pos:start="77:68" pos:end="77:68"><expr pos:start="77:68" pos:end="77:68"><literal type="number" pos:start="77:68" pos:end="77:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="79:1" pos:end="79:31">#<cpp:directive pos:start="79:2" pos:end="79:3">if</cpp:directive> <expr pos:start="79:5" pos:end="79:31"><operator pos:start="79:5" pos:end="79:5">!</operator><call pos:start="79:6" pos:end="79:31"><name pos:start="79:6" pos:end="79:12">defined</name> <argument_list pos:start="79:14" pos:end="79:31">(<argument pos:start="79:15" pos:end="79:30"><expr pos:start="79:15" pos:end="79:30"><name pos:start="79:15" pos:end="79:30">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        </block_content>}</block></if> <if type="elseif" pos:start="81:11" pos:end="95:9">else if <condition pos:start="81:19" pos:end="81:34">(<expr pos:start="81:20" pos:end="81:33"><name pos:start="81:20" pos:end="81:26">palcode</name> <operator pos:start="81:28" pos:end="81:28">&lt;</operator> <literal type="number" pos:start="81:30" pos:end="81:33">0x40</literal></expr>)</condition> <block pos:start="81:36" pos:end="95:9">{<block_content pos:start="85:13" pos:end="94:0">

            <comment type="block" pos:start="83:13" pos:end="83:37">/* Privileged PAL code */</comment>

            <if_stmt pos:start="85:13" pos:end="94:0"><if pos:start="85:13" pos:end="87:33">if <condition pos:start="85:16" pos:end="85:33">(<expr pos:start="85:17" pos:end="85:32"><name pos:start="85:17" pos:end="85:28"><name pos:start="85:17" pos:end="85:19">ctx</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:28">mem_idx</name></name> <operator pos:start="85:30" pos:end="85:30">&amp;</operator> <literal type="number" pos:start="85:32" pos:end="85:32">1</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:33"><block_content pos:start="87:17" pos:end="87:33">

                <goto pos:start="87:17" pos:end="87:33">goto <name pos:start="87:22" pos:end="87:32">invalid_opc</name>;</goto></block_content></block></if>

            <else pos:start="89:13" pos:end="94:0">else<block type="pseudo" pos:start="91:17" pos:end="94:0"><block_content pos:start="91:17" pos:end="94:0">

                <expr_stmt pos:start="91:17" pos:end="94:0"><expr pos:start="91:17" pos:end="91:74"><call pos:start="91:17" pos:end="91:74"><name pos:start="91:17" pos:end="91:24">gen_excp</name><argument_list pos:start="91:25" pos:end="91:74">(<argument pos:start="91:26" pos:end="91:28"><expr pos:start="91:26" pos:end="91:28"><name pos:start="91:26" pos:end="91:28">ctx</name></expr></argument>, <argument pos:start="91:31" pos:end="91:70"><expr pos:start="91:31" pos:end="91:70"><name pos:start="91:31" pos:end="91:44">EXCP_CALL_PALP</name> <operator pos:start="91:46" pos:end="91:46">+</operator> <operator pos:start="91:48" pos:end="91:48">(</operator><operator pos:start="91:49" pos:end="91:49">(</operator><name pos:start="91:50" pos:end="91:56">palcode</name> <operator pos:start="91:58" pos:end="91:58">&amp;</operator> <literal type="number" pos:start="91:60" pos:end="91:63">0x3F</literal><operator pos:start="91:64" pos:end="91:64">)</operator> <operator pos:start="91:66" pos:end="91:67">&lt;&lt;</operator> <literal type="number" pos:start="91:69" pos:end="91:69">6</literal><operator pos:start="91:70" pos:end="91:70">)</operator></expr></argument>, <argument pos:start="91:73" pos:end="91:73"><expr pos:start="91:73" pos:end="91:73"><literal type="number" pos:start="91:73" pos:end="91:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:endif pos:start="93:1" pos:end="93:6">#<cpp:directive pos:start="93:2" pos:end="93:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="95:11" pos:end="101:9">else <block pos:start="95:16" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:29">

            <comment type="block" pos:start="97:13" pos:end="97:34">/* Invalid PAL call */</comment>

            <goto pos:start="99:13" pos:end="99:29">goto <name pos:start="99:18" pos:end="99:28">invalid_opc</name>;</goto>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:16"><expr pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:11">ret</name> <operator pos:start="103:13" pos:end="103:13">=</operator> <literal type="number" pos:start="103:15" pos:end="103:15">3</literal></expr>;</expr_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:14">case <expr pos:start="107:10" pos:end="107:13"><literal type="number" pos:start="107:10" pos:end="107:13">0x01</literal></expr>:</case>

        <comment type="block" pos:start="109:9" pos:end="109:19">/* OPC01 */</comment>

        <goto pos:start="111:9" pos:end="111:25">goto <name pos:start="111:14" pos:end="111:24">invalid_opc</name>;</goto>

    <case pos:start="113:5" pos:end="113:14">case <expr pos:start="113:10" pos:end="113:13"><literal type="number" pos:start="113:10" pos:end="113:13">0x02</literal></expr>:</case>

        <comment type="block" pos:start="115:9" pos:end="115:19">/* OPC02 */</comment>

        <goto pos:start="117:9" pos:end="117:25">goto <name pos:start="117:14" pos:end="117:24">invalid_opc</name>;</goto>

    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x03</literal></expr>:</case>

        <comment type="block" pos:start="121:9" pos:end="121:19">/* OPC03 */</comment>

        <goto pos:start="123:9" pos:end="123:25">goto <name pos:start="123:14" pos:end="123:24">invalid_opc</name>;</goto>

    <case pos:start="125:5" pos:end="125:14">case <expr pos:start="125:10" pos:end="125:13"><literal type="number" pos:start="125:10" pos:end="125:13">0x04</literal></expr>:</case>

        <comment type="block" pos:start="127:9" pos:end="127:19">/* OPC04 */</comment>

        <goto pos:start="129:9" pos:end="129:25">goto <name pos:start="129:14" pos:end="129:24">invalid_opc</name>;</goto>

    <case pos:start="131:5" pos:end="131:14">case <expr pos:start="131:10" pos:end="131:13"><literal type="number" pos:start="131:10" pos:end="131:13">0x05</literal></expr>:</case>

        <comment type="block" pos:start="133:9" pos:end="133:19">/* OPC05 */</comment>

        <goto pos:start="135:9" pos:end="135:25">goto <name pos:start="135:14" pos:end="135:24">invalid_opc</name>;</goto>

    <case pos:start="137:5" pos:end="137:14">case <expr pos:start="137:10" pos:end="137:13"><literal type="number" pos:start="137:10" pos:end="137:13">0x06</literal></expr>:</case>

        <comment type="block" pos:start="139:9" pos:end="139:19">/* OPC06 */</comment>

        <goto pos:start="141:9" pos:end="141:25">goto <name pos:start="141:14" pos:end="141:24">invalid_opc</name>;</goto>

    <case pos:start="143:5" pos:end="143:14">case <expr pos:start="143:10" pos:end="143:13"><literal type="number" pos:start="143:10" pos:end="143:13">0x07</literal></expr>:</case>

        <comment type="block" pos:start="145:9" pos:end="145:19">/* OPC07 */</comment>

        <goto pos:start="147:9" pos:end="147:25">goto <name pos:start="147:14" pos:end="147:24">invalid_opc</name>;</goto>

    <case pos:start="149:5" pos:end="149:14">case <expr pos:start="149:10" pos:end="149:13"><literal type="number" pos:start="149:10" pos:end="149:13">0x08</literal></expr>:</case>

        <comment type="block" pos:start="151:9" pos:end="151:17">/* LDA */</comment>

        <if_stmt pos:start="153:9" pos:end="163:9"><if pos:start="153:9" pos:end="163:9">if <condition pos:start="153:12" pos:end="153:29">(<expr pos:start="153:13" pos:end="153:28"><call pos:start="153:13" pos:end="153:28"><name pos:start="153:13" pos:end="153:18">likely</name><argument_list pos:start="153:19" pos:end="153:28">(<argument pos:start="153:20" pos:end="153:27"><expr pos:start="153:20" pos:end="153:27"><name pos:start="153:20" pos:end="153:21">ra</name> <operator pos:start="153:23" pos:end="153:24">!=</operator> <literal type="number" pos:start="153:26" pos:end="153:27">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="153:31" pos:end="163:9">{<block_content pos:start="155:13" pos:end="161:53">

            <if_stmt pos:start="155:13" pos:end="161:53"><if pos:start="155:13" pos:end="157:65">if <condition pos:start="155:16" pos:end="155:25">(<expr pos:start="155:17" pos:end="155:24"><name pos:start="155:17" pos:end="155:18">rb</name> <operator pos:start="155:20" pos:end="155:21">!=</operator> <literal type="number" pos:start="155:23" pos:end="155:24">31</literal></expr>)</condition><block type="pseudo" pos:start="157:17" pos:end="157:65"><block_content pos:start="157:17" pos:end="157:65">

                <expr_stmt pos:start="157:17" pos:end="157:65"><expr pos:start="157:17" pos:end="157:64"><call pos:start="157:17" pos:end="157:64"><name pos:start="157:17" pos:end="157:32">tcg_gen_addi_i64</name><argument_list pos:start="157:33" pos:end="157:64">(<argument pos:start="157:34" pos:end="157:43"><expr pos:start="157:34" pos:end="157:43"><name pos:start="157:34" pos:end="157:43"><name pos:start="157:34" pos:end="157:39">cpu_ir</name><index pos:start="157:40" pos:end="157:43">[<expr pos:start="157:41" pos:end="157:42"><name pos:start="157:41" pos:end="157:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="157:46" pos:end="157:55"><expr pos:start="157:46" pos:end="157:55"><name pos:start="157:46" pos:end="157:55"><name pos:start="157:46" pos:end="157:51">cpu_ir</name><index pos:start="157:52" pos:end="157:55">[<expr pos:start="157:53" pos:end="157:54"><name pos:start="157:53" pos:end="157:54">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="157:58" pos:end="157:63"><expr pos:start="157:58" pos:end="157:63"><name pos:start="157:58" pos:end="157:63">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="159:13" pos:end="161:53">else<block type="pseudo" pos:start="161:17" pos:end="161:53"><block_content pos:start="161:17" pos:end="161:53">

                <expr_stmt pos:start="161:17" pos:end="161:53"><expr pos:start="161:17" pos:end="161:52"><call pos:start="161:17" pos:end="161:52"><name pos:start="161:17" pos:end="161:32">tcg_gen_movi_i64</name><argument_list pos:start="161:33" pos:end="161:52">(<argument pos:start="161:34" pos:end="161:43"><expr pos:start="161:34" pos:end="161:43"><name pos:start="161:34" pos:end="161:43"><name pos:start="161:34" pos:end="161:39">cpu_ir</name><index pos:start="161:40" pos:end="161:43">[<expr pos:start="161:41" pos:end="161:42"><name pos:start="161:41" pos:end="161:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="161:46" pos:end="161:51"><expr pos:start="161:46" pos:end="161:51"><name pos:start="161:46" pos:end="161:51">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>

    <case pos:start="167:5" pos:end="167:14">case <expr pos:start="167:10" pos:end="167:13"><literal type="number" pos:start="167:10" pos:end="167:13">0x09</literal></expr>:</case>

        <comment type="block" pos:start="169:9" pos:end="169:18">/* LDAH */</comment>

        <if_stmt pos:start="171:9" pos:end="181:9"><if pos:start="171:9" pos:end="181:9">if <condition pos:start="171:12" pos:end="171:29">(<expr pos:start="171:13" pos:end="171:28"><call pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:18">likely</name><argument_list pos:start="171:19" pos:end="171:28">(<argument pos:start="171:20" pos:end="171:27"><expr pos:start="171:20" pos:end="171:27"><name pos:start="171:20" pos:end="171:21">ra</name> <operator pos:start="171:23" pos:end="171:24">!=</operator> <literal type="number" pos:start="171:26" pos:end="171:27">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:31" pos:end="181:9">{<block_content pos:start="173:13" pos:end="179:59">

            <if_stmt pos:start="173:13" pos:end="179:59"><if pos:start="173:13" pos:end="175:71">if <condition pos:start="173:16" pos:end="173:25">(<expr pos:start="173:17" pos:end="173:24"><name pos:start="173:17" pos:end="173:18">rb</name> <operator pos:start="173:20" pos:end="173:21">!=</operator> <literal type="number" pos:start="173:23" pos:end="173:24">31</literal></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:71"><block_content pos:start="175:17" pos:end="175:71">

                <expr_stmt pos:start="175:17" pos:end="175:71"><expr pos:start="175:17" pos:end="175:70"><call pos:start="175:17" pos:end="175:70"><name pos:start="175:17" pos:end="175:32">tcg_gen_addi_i64</name><argument_list pos:start="175:33" pos:end="175:70">(<argument pos:start="175:34" pos:end="175:43"><expr pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:43"><name pos:start="175:34" pos:end="175:39">cpu_ir</name><index pos:start="175:40" pos:end="175:43">[<expr pos:start="175:41" pos:end="175:42"><name pos:start="175:41" pos:end="175:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="175:46" pos:end="175:55"><expr pos:start="175:46" pos:end="175:55"><name pos:start="175:46" pos:end="175:55"><name pos:start="175:46" pos:end="175:51">cpu_ir</name><index pos:start="175:52" pos:end="175:55">[<expr pos:start="175:53" pos:end="175:54"><name pos:start="175:53" pos:end="175:54">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="175:58" pos:end="175:69"><expr pos:start="175:58" pos:end="175:69"><name pos:start="175:58" pos:end="175:63">disp16</name> <operator pos:start="175:65" pos:end="175:66">&lt;&lt;</operator> <literal type="number" pos:start="175:68" pos:end="175:69">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="177:13" pos:end="179:59">else<block type="pseudo" pos:start="179:17" pos:end="179:59"><block_content pos:start="179:17" pos:end="179:59">

                <expr_stmt pos:start="179:17" pos:end="179:59"><expr pos:start="179:17" pos:end="179:58"><call pos:start="179:17" pos:end="179:58"><name pos:start="179:17" pos:end="179:32">tcg_gen_movi_i64</name><argument_list pos:start="179:33" pos:end="179:58">(<argument pos:start="179:34" pos:end="179:43"><expr pos:start="179:34" pos:end="179:43"><name pos:start="179:34" pos:end="179:43"><name pos:start="179:34" pos:end="179:39">cpu_ir</name><index pos:start="179:40" pos:end="179:43">[<expr pos:start="179:41" pos:end="179:42"><name pos:start="179:41" pos:end="179:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="179:46" pos:end="179:57"><expr pos:start="179:46" pos:end="179:57"><name pos:start="179:46" pos:end="179:51">disp16</name> <operator pos:start="179:53" pos:end="179:54">&lt;&lt;</operator> <literal type="number" pos:start="179:56" pos:end="179:57">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="183:9" pos:end="183:14">break;</break>

    <case pos:start="185:5" pos:end="185:14">case <expr pos:start="185:10" pos:end="185:13"><literal type="number" pos:start="185:10" pos:end="185:13">0x0A</literal></expr>:</case>

        <comment type="block" pos:start="187:9" pos:end="187:18">/* LDBU */</comment>

        <if_stmt pos:start="189:9" pos:end="191:29"><if pos:start="189:9" pos:end="191:29">if <condition pos:start="189:12" pos:end="189:38">(<expr pos:start="189:13" pos:end="189:37"><operator pos:start="189:13" pos:end="189:13">!</operator><operator pos:start="189:14" pos:end="189:14">(</operator><name pos:start="189:15" pos:end="189:24"><name pos:start="189:15" pos:end="189:17">ctx</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:24">amask</name></name> <operator pos:start="189:26" pos:end="189:26">&amp;</operator> <name pos:start="189:28" pos:end="189:36">AMASK_BWX</name><operator pos:start="189:37" pos:end="189:37">)</operator></expr>)</condition><block type="pseudo" pos:start="191:13" pos:end="191:29"><block_content pos:start="191:13" pos:end="191:29">

            <goto pos:start="191:13" pos:end="191:29">goto <name pos:start="191:18" pos:end="191:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:68"><expr pos:start="193:9" pos:end="193:67"><call pos:start="193:9" pos:end="193:67"><name pos:start="193:9" pos:end="193:20">gen_load_mem</name><argument_list pos:start="193:21" pos:end="193:67">(<argument pos:start="193:22" pos:end="193:24"><expr pos:start="193:22" pos:end="193:24"><name pos:start="193:22" pos:end="193:24">ctx</name></expr></argument>, <argument pos:start="193:27" pos:end="193:44"><expr pos:start="193:27" pos:end="193:44"><operator pos:start="193:27" pos:end="193:27">&amp;</operator><name pos:start="193:28" pos:end="193:44">tcg_gen_qemu_ld8u</name></expr></argument>, <argument pos:start="193:47" pos:end="193:48"><expr pos:start="193:47" pos:end="193:48"><name pos:start="193:47" pos:end="193:48">ra</name></expr></argument>, <argument pos:start="193:51" pos:end="193:52"><expr pos:start="193:51" pos:end="193:52"><name pos:start="193:51" pos:end="193:52">rb</name></expr></argument>, <argument pos:start="193:55" pos:end="193:60"><expr pos:start="193:55" pos:end="193:60"><name pos:start="193:55" pos:end="193:60">disp16</name></expr></argument>, <argument pos:start="193:63" pos:end="193:63"><expr pos:start="193:63" pos:end="193:63"><literal type="number" pos:start="193:63" pos:end="193:63">0</literal></expr></argument>, <argument pos:start="193:66" pos:end="193:66"><expr pos:start="193:66" pos:end="193:66"><literal type="number" pos:start="193:66" pos:end="193:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="195:9" pos:end="195:14">break;</break>

    <case pos:start="197:5" pos:end="197:14">case <expr pos:start="197:10" pos:end="197:13"><literal type="number" pos:start="197:10" pos:end="197:13">0x0B</literal></expr>:</case>

        <comment type="block" pos:start="199:9" pos:end="199:19">/* LDQ_U */</comment>

        <expr_stmt pos:start="201:9" pos:end="201:68"><expr pos:start="201:9" pos:end="201:67"><call pos:start="201:9" pos:end="201:67"><name pos:start="201:9" pos:end="201:20">gen_load_mem</name><argument_list pos:start="201:21" pos:end="201:67">(<argument pos:start="201:22" pos:end="201:24"><expr pos:start="201:22" pos:end="201:24"><name pos:start="201:22" pos:end="201:24">ctx</name></expr></argument>, <argument pos:start="201:27" pos:end="201:44"><expr pos:start="201:27" pos:end="201:44"><operator pos:start="201:27" pos:end="201:27">&amp;</operator><name pos:start="201:28" pos:end="201:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="201:47" pos:end="201:48"><expr pos:start="201:47" pos:end="201:48"><name pos:start="201:47" pos:end="201:48">ra</name></expr></argument>, <argument pos:start="201:51" pos:end="201:52"><expr pos:start="201:51" pos:end="201:52"><name pos:start="201:51" pos:end="201:52">rb</name></expr></argument>, <argument pos:start="201:55" pos:end="201:60"><expr pos:start="201:55" pos:end="201:60"><name pos:start="201:55" pos:end="201:60">disp16</name></expr></argument>, <argument pos:start="201:63" pos:end="201:63"><expr pos:start="201:63" pos:end="201:63"><literal type="number" pos:start="201:63" pos:end="201:63">0</literal></expr></argument>, <argument pos:start="201:66" pos:end="201:66"><expr pos:start="201:66" pos:end="201:66"><literal type="number" pos:start="201:66" pos:end="201:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="203:9" pos:end="203:14">break;</break>

    <case pos:start="205:5" pos:end="205:14">case <expr pos:start="205:10" pos:end="205:13"><literal type="number" pos:start="205:10" pos:end="205:13">0x0C</literal></expr>:</case>

        <comment type="block" pos:start="207:9" pos:end="207:18">/* LDWU */</comment>

        <if_stmt pos:start="209:9" pos:end="211:29"><if pos:start="209:9" pos:end="211:29">if <condition pos:start="209:12" pos:end="209:38">(<expr pos:start="209:13" pos:end="209:37"><operator pos:start="209:13" pos:end="209:13">!</operator><operator pos:start="209:14" pos:end="209:14">(</operator><name pos:start="209:15" pos:end="209:24"><name pos:start="209:15" pos:end="209:17">ctx</name><operator pos:start="209:18" pos:end="209:19">-&gt;</operator><name pos:start="209:20" pos:end="209:24">amask</name></name> <operator pos:start="209:26" pos:end="209:26">&amp;</operator> <name pos:start="209:28" pos:end="209:36">AMASK_BWX</name><operator pos:start="209:37" pos:end="209:37">)</operator></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:29"><block_content pos:start="211:13" pos:end="211:29">

            <goto pos:start="211:13" pos:end="211:29">goto <name pos:start="211:18" pos:end="211:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:69"><expr pos:start="213:9" pos:end="213:68"><call pos:start="213:9" pos:end="213:68"><name pos:start="213:9" pos:end="213:20">gen_load_mem</name><argument_list pos:start="213:21" pos:end="213:68">(<argument pos:start="213:22" pos:end="213:24"><expr pos:start="213:22" pos:end="213:24"><name pos:start="213:22" pos:end="213:24">ctx</name></expr></argument>, <argument pos:start="213:27" pos:end="213:45"><expr pos:start="213:27" pos:end="213:45"><operator pos:start="213:27" pos:end="213:27">&amp;</operator><name pos:start="213:28" pos:end="213:45">tcg_gen_qemu_ld16u</name></expr></argument>, <argument pos:start="213:48" pos:end="213:49"><expr pos:start="213:48" pos:end="213:49"><name pos:start="213:48" pos:end="213:49">ra</name></expr></argument>, <argument pos:start="213:52" pos:end="213:53"><expr pos:start="213:52" pos:end="213:53"><name pos:start="213:52" pos:end="213:53">rb</name></expr></argument>, <argument pos:start="213:56" pos:end="213:61"><expr pos:start="213:56" pos:end="213:61"><name pos:start="213:56" pos:end="213:61">disp16</name></expr></argument>, <argument pos:start="213:64" pos:end="213:64"><expr pos:start="213:64" pos:end="213:64"><literal type="number" pos:start="213:64" pos:end="213:64">0</literal></expr></argument>, <argument pos:start="213:67" pos:end="213:67"><expr pos:start="213:67" pos:end="213:67"><literal type="number" pos:start="213:67" pos:end="213:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>

    <case pos:start="217:5" pos:end="217:14">case <expr pos:start="217:10" pos:end="217:13"><literal type="number" pos:start="217:10" pos:end="217:13">0x0D</literal></expr>:</case>

        <comment type="block" pos:start="219:9" pos:end="219:17">/* STW */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:72"><expr pos:start="221:9" pos:end="221:71"><call pos:start="221:9" pos:end="221:71"><name pos:start="221:9" pos:end="221:21">gen_store_mem</name><argument_list pos:start="221:22" pos:end="221:71">(<argument pos:start="221:23" pos:end="221:25"><expr pos:start="221:23" pos:end="221:25"><name pos:start="221:23" pos:end="221:25">ctx</name></expr></argument>, <argument pos:start="221:28" pos:end="221:45"><expr pos:start="221:28" pos:end="221:45"><operator pos:start="221:28" pos:end="221:28">&amp;</operator><name pos:start="221:29" pos:end="221:45">tcg_gen_qemu_st16</name></expr></argument>, <argument pos:start="221:48" pos:end="221:49"><expr pos:start="221:48" pos:end="221:49"><name pos:start="221:48" pos:end="221:49">ra</name></expr></argument>, <argument pos:start="221:52" pos:end="221:53"><expr pos:start="221:52" pos:end="221:53"><name pos:start="221:52" pos:end="221:53">rb</name></expr></argument>, <argument pos:start="221:56" pos:end="221:61"><expr pos:start="221:56" pos:end="221:61"><name pos:start="221:56" pos:end="221:61">disp16</name></expr></argument>, <argument pos:start="221:64" pos:end="221:64"><expr pos:start="221:64" pos:end="221:64"><literal type="number" pos:start="221:64" pos:end="221:64">0</literal></expr></argument>, <argument pos:start="221:67" pos:end="221:67"><expr pos:start="221:67" pos:end="221:67"><literal type="number" pos:start="221:67" pos:end="221:67">0</literal></expr></argument>, <argument pos:start="221:70" pos:end="221:70"><expr pos:start="221:70" pos:end="221:70"><literal type="number" pos:start="221:70" pos:end="221:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>

    <case pos:start="225:5" pos:end="225:14">case <expr pos:start="225:10" pos:end="225:13"><literal type="number" pos:start="225:10" pos:end="225:13">0x0E</literal></expr>:</case>

        <comment type="block" pos:start="227:9" pos:end="227:17">/* STB */</comment>

        <expr_stmt pos:start="229:9" pos:end="229:71"><expr pos:start="229:9" pos:end="229:70"><call pos:start="229:9" pos:end="229:70"><name pos:start="229:9" pos:end="229:21">gen_store_mem</name><argument_list pos:start="229:22" pos:end="229:70">(<argument pos:start="229:23" pos:end="229:25"><expr pos:start="229:23" pos:end="229:25"><name pos:start="229:23" pos:end="229:25">ctx</name></expr></argument>, <argument pos:start="229:28" pos:end="229:44"><expr pos:start="229:28" pos:end="229:44"><operator pos:start="229:28" pos:end="229:28">&amp;</operator><name pos:start="229:29" pos:end="229:44">tcg_gen_qemu_st8</name></expr></argument>, <argument pos:start="229:47" pos:end="229:48"><expr pos:start="229:47" pos:end="229:48"><name pos:start="229:47" pos:end="229:48">ra</name></expr></argument>, <argument pos:start="229:51" pos:end="229:52"><expr pos:start="229:51" pos:end="229:52"><name pos:start="229:51" pos:end="229:52">rb</name></expr></argument>, <argument pos:start="229:55" pos:end="229:60"><expr pos:start="229:55" pos:end="229:60"><name pos:start="229:55" pos:end="229:60">disp16</name></expr></argument>, <argument pos:start="229:63" pos:end="229:63"><expr pos:start="229:63" pos:end="229:63"><literal type="number" pos:start="229:63" pos:end="229:63">0</literal></expr></argument>, <argument pos:start="229:66" pos:end="229:66"><expr pos:start="229:66" pos:end="229:66"><literal type="number" pos:start="229:66" pos:end="229:66">0</literal></expr></argument>, <argument pos:start="229:69" pos:end="229:69"><expr pos:start="229:69" pos:end="229:69"><literal type="number" pos:start="229:69" pos:end="229:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>

    <case pos:start="233:5" pos:end="233:14">case <expr pos:start="233:10" pos:end="233:13"><literal type="number" pos:start="233:10" pos:end="233:13">0x0F</literal></expr>:</case>

        <comment type="block" pos:start="235:9" pos:end="235:19">/* STQ_U */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:72"><expr pos:start="237:9" pos:end="237:71"><call pos:start="237:9" pos:end="237:71"><name pos:start="237:9" pos:end="237:21">gen_store_mem</name><argument_list pos:start="237:22" pos:end="237:71">(<argument pos:start="237:23" pos:end="237:25"><expr pos:start="237:23" pos:end="237:25"><name pos:start="237:23" pos:end="237:25">ctx</name></expr></argument>, <argument pos:start="237:28" pos:end="237:45"><expr pos:start="237:28" pos:end="237:45"><operator pos:start="237:28" pos:end="237:28">&amp;</operator><name pos:start="237:29" pos:end="237:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="237:48" pos:end="237:49"><expr pos:start="237:48" pos:end="237:49"><name pos:start="237:48" pos:end="237:49">ra</name></expr></argument>, <argument pos:start="237:52" pos:end="237:53"><expr pos:start="237:52" pos:end="237:53"><name pos:start="237:52" pos:end="237:53">rb</name></expr></argument>, <argument pos:start="237:56" pos:end="237:61"><expr pos:start="237:56" pos:end="237:61"><name pos:start="237:56" pos:end="237:61">disp16</name></expr></argument>, <argument pos:start="237:64" pos:end="237:64"><expr pos:start="237:64" pos:end="237:64"><literal type="number" pos:start="237:64" pos:end="237:64">0</literal></expr></argument>, <argument pos:start="237:67" pos:end="237:67"><expr pos:start="237:67" pos:end="237:67"><literal type="number" pos:start="237:67" pos:end="237:67">1</literal></expr></argument>, <argument pos:start="237:70" pos:end="237:70"><expr pos:start="237:70" pos:end="237:70"><literal type="number" pos:start="237:70" pos:end="237:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>

    <case pos:start="241:5" pos:end="241:14">case <expr pos:start="241:10" pos:end="241:13"><literal type="number" pos:start="241:10" pos:end="241:13">0x10</literal></expr>:</case>

        <switch pos:start="243:9" pos:end="787:9">switch <condition pos:start="243:16" pos:end="243:20">(<expr pos:start="243:17" pos:end="243:19"><name pos:start="243:17" pos:end="243:19">fn7</name></expr>)</condition> <block pos:start="243:22" pos:end="787:9">{<block_content pos:start="245:9" pos:end="785:29">

        <case pos:start="245:9" pos:end="245:18">case <expr pos:start="245:14" pos:end="245:17"><literal type="number" pos:start="245:14" pos:end="245:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="247:13" pos:end="247:22">/* ADDL */</comment>

            <if_stmt pos:start="249:13" pos:end="279:13"><if pos:start="249:13" pos:end="279:13">if <condition pos:start="249:16" pos:end="249:33">(<expr pos:start="249:17" pos:end="249:32"><call pos:start="249:17" pos:end="249:32"><name pos:start="249:17" pos:end="249:22">likely</name><argument_list pos:start="249:23" pos:end="249:32">(<argument pos:start="249:24" pos:end="249:31"><expr pos:start="249:24" pos:end="249:31"><name pos:start="249:24" pos:end="249:25">rc</name> <operator pos:start="249:27" pos:end="249:28">!=</operator> <literal type="number" pos:start="249:30" pos:end="249:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="249:35" pos:end="279:13">{<block_content pos:start="251:17" pos:end="277:17">

                <if_stmt pos:start="251:17" pos:end="277:17"><if pos:start="251:17" pos:end="267:17">if <condition pos:start="251:20" pos:end="251:29">(<expr pos:start="251:21" pos:end="251:28"><name pos:start="251:21" pos:end="251:22">ra</name> <operator pos:start="251:24" pos:end="251:25">!=</operator> <literal type="number" pos:start="251:27" pos:end="251:28">31</literal></expr>)</condition> <block pos:start="251:31" pos:end="267:17">{<block_content pos:start="253:21" pos:end="265:21">

                    <if_stmt pos:start="253:21" pos:end="265:21"><if pos:start="253:21" pos:end="259:21">if <condition pos:start="253:24" pos:end="253:30">(<expr pos:start="253:25" pos:end="253:29"><name pos:start="253:25" pos:end="253:29">islit</name></expr>)</condition> <block pos:start="253:32" pos:end="259:21">{<block_content pos:start="255:25" pos:end="257:67">

                        <expr_stmt pos:start="255:25" pos:end="255:70"><expr pos:start="255:25" pos:end="255:69"><call pos:start="255:25" pos:end="255:69"><name pos:start="255:25" pos:end="255:40">tcg_gen_addi_i64</name><argument_list pos:start="255:41" pos:end="255:69">(<argument pos:start="255:42" pos:end="255:51"><expr pos:start="255:42" pos:end="255:51"><name pos:start="255:42" pos:end="255:51"><name pos:start="255:42" pos:end="255:47">cpu_ir</name><index pos:start="255:48" pos:end="255:51">[<expr pos:start="255:49" pos:end="255:50"><name pos:start="255:49" pos:end="255:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="255:54" pos:end="255:63"><expr pos:start="255:54" pos:end="255:63"><name pos:start="255:54" pos:end="255:63"><name pos:start="255:54" pos:end="255:59">cpu_ir</name><index pos:start="255:60" pos:end="255:63">[<expr pos:start="255:61" pos:end="255:62"><name pos:start="255:61" pos:end="255:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="255:66" pos:end="255:68"><expr pos:start="255:66" pos:end="255:68"><name pos:start="255:66" pos:end="255:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="257:25" pos:end="257:67"><expr pos:start="257:25" pos:end="257:66"><call pos:start="257:25" pos:end="257:66"><name pos:start="257:25" pos:end="257:42">tcg_gen_ext32s_i64</name><argument_list pos:start="257:43" pos:end="257:66">(<argument pos:start="257:44" pos:end="257:53"><expr pos:start="257:44" pos:end="257:53"><name pos:start="257:44" pos:end="257:53"><name pos:start="257:44" pos:end="257:49">cpu_ir</name><index pos:start="257:50" pos:end="257:53">[<expr pos:start="257:51" pos:end="257:52"><name pos:start="257:51" pos:end="257:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="257:56" pos:end="257:65"><expr pos:start="257:56" pos:end="257:65"><name pos:start="257:56" pos:end="257:65"><name pos:start="257:56" pos:end="257:61">cpu_ir</name><index pos:start="257:62" pos:end="257:65">[<expr pos:start="257:63" pos:end="257:64"><name pos:start="257:63" pos:end="257:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="259:23" pos:end="265:21">else <block pos:start="259:28" pos:end="265:21">{<block_content pos:start="261:25" pos:end="263:67">

                        <expr_stmt pos:start="261:25" pos:end="261:76"><expr pos:start="261:25" pos:end="261:75"><call pos:start="261:25" pos:end="261:75"><name pos:start="261:25" pos:end="261:39">tcg_gen_add_i64</name><argument_list pos:start="261:40" pos:end="261:75">(<argument pos:start="261:41" pos:end="261:50"><expr pos:start="261:41" pos:end="261:50"><name pos:start="261:41" pos:end="261:50"><name pos:start="261:41" pos:end="261:46">cpu_ir</name><index pos:start="261:47" pos:end="261:50">[<expr pos:start="261:48" pos:end="261:49"><name pos:start="261:48" pos:end="261:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="261:53" pos:end="261:62"><expr pos:start="261:53" pos:end="261:62"><name pos:start="261:53" pos:end="261:62"><name pos:start="261:53" pos:end="261:58">cpu_ir</name><index pos:start="261:59" pos:end="261:62">[<expr pos:start="261:60" pos:end="261:61"><name pos:start="261:60" pos:end="261:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="261:65" pos:end="261:74"><expr pos:start="261:65" pos:end="261:74"><name pos:start="261:65" pos:end="261:74"><name pos:start="261:65" pos:end="261:70">cpu_ir</name><index pos:start="261:71" pos:end="261:74">[<expr pos:start="261:72" pos:end="261:73"><name pos:start="261:72" pos:end="261:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="263:25" pos:end="263:67"><expr pos:start="263:25" pos:end="263:66"><call pos:start="263:25" pos:end="263:66"><name pos:start="263:25" pos:end="263:42">tcg_gen_ext32s_i64</name><argument_list pos:start="263:43" pos:end="263:66">(<argument pos:start="263:44" pos:end="263:53"><expr pos:start="263:44" pos:end="263:53"><name pos:start="263:44" pos:end="263:53"><name pos:start="263:44" pos:end="263:49">cpu_ir</name><index pos:start="263:50" pos:end="263:53">[<expr pos:start="263:51" pos:end="263:52"><name pos:start="263:51" pos:end="263:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="263:56" pos:end="263:65"><expr pos:start="263:56" pos:end="263:65"><name pos:start="263:56" pos:end="263:65"><name pos:start="263:56" pos:end="263:61">cpu_ir</name><index pos:start="263:62" pos:end="263:65">[<expr pos:start="263:63" pos:end="263:64"><name pos:start="263:63" pos:end="263:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="267:19" pos:end="277:17">else <block pos:start="267:24" pos:end="277:17">{<block_content pos:start="269:21" pos:end="275:67">

                    <if_stmt pos:start="269:21" pos:end="275:67"><if pos:start="269:21" pos:end="271:58">if <condition pos:start="269:24" pos:end="269:30">(<expr pos:start="269:25" pos:end="269:29"><name pos:start="269:25" pos:end="269:29">islit</name></expr>)</condition><block type="pseudo" pos:start="271:25" pos:end="271:58"><block_content pos:start="271:25" pos:end="271:58">

                        <expr_stmt pos:start="271:25" pos:end="271:58"><expr pos:start="271:25" pos:end="271:57"><call pos:start="271:25" pos:end="271:57"><name pos:start="271:25" pos:end="271:40">tcg_gen_movi_i64</name><argument_list pos:start="271:41" pos:end="271:57">(<argument pos:start="271:42" pos:end="271:51"><expr pos:start="271:42" pos:end="271:51"><name pos:start="271:42" pos:end="271:51"><name pos:start="271:42" pos:end="271:47">cpu_ir</name><index pos:start="271:48" pos:end="271:51">[<expr pos:start="271:49" pos:end="271:50"><name pos:start="271:49" pos:end="271:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="271:54" pos:end="271:56"><expr pos:start="271:54" pos:end="271:56"><name pos:start="271:54" pos:end="271:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="273:21" pos:end="275:67">else<block type="pseudo" pos:start="275:25" pos:end="275:67"><block_content pos:start="275:25" pos:end="275:67">

                        <expr_stmt pos:start="275:25" pos:end="275:67"><expr pos:start="275:25" pos:end="275:66"><call pos:start="275:25" pos:end="275:66"><name pos:start="275:25" pos:end="275:42">tcg_gen_ext32s_i64</name><argument_list pos:start="275:43" pos:end="275:66">(<argument pos:start="275:44" pos:end="275:53"><expr pos:start="275:44" pos:end="275:53"><name pos:start="275:44" pos:end="275:53"><name pos:start="275:44" pos:end="275:49">cpu_ir</name><index pos:start="275:50" pos:end="275:53">[<expr pos:start="275:51" pos:end="275:52"><name pos:start="275:51" pos:end="275:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="275:56" pos:end="275:65"><expr pos:start="275:56" pos:end="275:65"><name pos:start="275:56" pos:end="275:65"><name pos:start="275:56" pos:end="275:61">cpu_ir</name><index pos:start="275:62" pos:end="275:65">[<expr pos:start="275:63" pos:end="275:64"><name pos:start="275:63" pos:end="275:64">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="281:13" pos:end="281:18">break;</break>

        <case pos:start="283:9" pos:end="283:18">case <expr pos:start="283:14" pos:end="283:17"><literal type="number" pos:start="283:14" pos:end="283:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="285:13" pos:end="285:24">/* S4ADDL */</comment>

            <if_stmt pos:start="287:13" pos:end="319:13"><if pos:start="287:13" pos:end="319:13">if <condition pos:start="287:16" pos:end="287:33">(<expr pos:start="287:17" pos:end="287:32"><call pos:start="287:17" pos:end="287:32"><name pos:start="287:17" pos:end="287:22">likely</name><argument_list pos:start="287:23" pos:end="287:32">(<argument pos:start="287:24" pos:end="287:31"><expr pos:start="287:24" pos:end="287:31"><name pos:start="287:24" pos:end="287:25">rc</name> <operator pos:start="287:27" pos:end="287:28">!=</operator> <literal type="number" pos:start="287:30" pos:end="287:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="287:35" pos:end="319:13">{<block_content pos:start="289:17" pos:end="317:17">

                <if_stmt pos:start="289:17" pos:end="317:17"><if pos:start="289:17" pos:end="307:17">if <condition pos:start="289:20" pos:end="289:29">(<expr pos:start="289:21" pos:end="289:28"><name pos:start="289:21" pos:end="289:22">ra</name> <operator pos:start="289:24" pos:end="289:25">!=</operator> <literal type="number" pos:start="289:27" pos:end="289:28">31</literal></expr>)</condition> <block pos:start="289:31" pos:end="307:17">{<block_content pos:start="291:21" pos:end="305:39">

                    <decl_stmt pos:start="291:21" pos:end="291:46"><decl pos:start="291:21" pos:end="291:45"><type pos:start="291:21" pos:end="291:24"><name pos:start="291:21" pos:end="291:24">TCGv</name></type> <name pos:start="291:26" pos:end="291:28">tmp</name> <init pos:start="291:30" pos:end="291:45">= <expr pos:start="291:32" pos:end="291:45"><call pos:start="291:32" pos:end="291:45"><name pos:start="291:32" pos:end="291:43">tcg_temp_new</name><argument_list pos:start="291:44" pos:end="291:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="293:21" pos:end="293:57"><expr pos:start="293:21" pos:end="293:56"><call pos:start="293:21" pos:end="293:56"><name pos:start="293:21" pos:end="293:36">tcg_gen_shli_i64</name><argument_list pos:start="293:37" pos:end="293:56">(<argument pos:start="293:38" pos:end="293:40"><expr pos:start="293:38" pos:end="293:40"><name pos:start="293:38" pos:end="293:40">tmp</name></expr></argument>, <argument pos:start="293:43" pos:end="293:52"><expr pos:start="293:43" pos:end="293:52"><name pos:start="293:43" pos:end="293:52"><name pos:start="293:43" pos:end="293:48">cpu_ir</name><index pos:start="293:49" pos:end="293:52">[<expr pos:start="293:50" pos:end="293:51"><name pos:start="293:50" pos:end="293:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="293:55" pos:end="293:55"><expr pos:start="293:55" pos:end="293:55"><literal type="number" pos:start="293:55" pos:end="293:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="295:21" pos:end="301:62"><if pos:start="295:21" pos:end="297:56">if <condition pos:start="295:24" pos:end="295:30">(<expr pos:start="295:25" pos:end="295:29"><name pos:start="295:25" pos:end="295:29">islit</name></expr>)</condition><block type="pseudo" pos:start="297:25" pos:end="297:56"><block_content pos:start="297:25" pos:end="297:56">

                        <expr_stmt pos:start="297:25" pos:end="297:56"><expr pos:start="297:25" pos:end="297:55"><call pos:start="297:25" pos:end="297:55"><name pos:start="297:25" pos:end="297:40">tcg_gen_addi_i64</name><argument_list pos:start="297:41" pos:end="297:55">(<argument pos:start="297:42" pos:end="297:44"><expr pos:start="297:42" pos:end="297:44"><name pos:start="297:42" pos:end="297:44">tmp</name></expr></argument>, <argument pos:start="297:47" pos:end="297:49"><expr pos:start="297:47" pos:end="297:49"><name pos:start="297:47" pos:end="297:49">tmp</name></expr></argument>, <argument pos:start="297:52" pos:end="297:54"><expr pos:start="297:52" pos:end="297:54"><name pos:start="297:52" pos:end="297:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="299:21" pos:end="301:62">else<block type="pseudo" pos:start="301:25" pos:end="301:62"><block_content pos:start="301:25" pos:end="301:62">

                        <expr_stmt pos:start="301:25" pos:end="301:62"><expr pos:start="301:25" pos:end="301:61"><call pos:start="301:25" pos:end="301:61"><name pos:start="301:25" pos:end="301:39">tcg_gen_add_i64</name><argument_list pos:start="301:40" pos:end="301:61">(<argument pos:start="301:41" pos:end="301:43"><expr pos:start="301:41" pos:end="301:43"><name pos:start="301:41" pos:end="301:43">tmp</name></expr></argument>, <argument pos:start="301:46" pos:end="301:48"><expr pos:start="301:46" pos:end="301:48"><name pos:start="301:46" pos:end="301:48">tmp</name></expr></argument>, <argument pos:start="301:51" pos:end="301:60"><expr pos:start="301:51" pos:end="301:60"><name pos:start="301:51" pos:end="301:60"><name pos:start="301:51" pos:end="301:56">cpu_ir</name><index pos:start="301:57" pos:end="301:60">[<expr pos:start="301:58" pos:end="301:59"><name pos:start="301:58" pos:end="301:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="303:21" pos:end="303:56"><expr pos:start="303:21" pos:end="303:55"><call pos:start="303:21" pos:end="303:55"><name pos:start="303:21" pos:end="303:38">tcg_gen_ext32s_i64</name><argument_list pos:start="303:39" pos:end="303:55">(<argument pos:start="303:40" pos:end="303:49"><expr pos:start="303:40" pos:end="303:49"><name pos:start="303:40" pos:end="303:49"><name pos:start="303:40" pos:end="303:45">cpu_ir</name><index pos:start="303:46" pos:end="303:49">[<expr pos:start="303:47" pos:end="303:48"><name pos:start="303:47" pos:end="303:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="303:52" pos:end="303:54"><expr pos:start="303:52" pos:end="303:54"><name pos:start="303:52" pos:end="303:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="305:21" pos:end="305:39"><expr pos:start="305:21" pos:end="305:38"><call pos:start="305:21" pos:end="305:38"><name pos:start="305:21" pos:end="305:33">tcg_temp_free</name><argument_list pos:start="305:34" pos:end="305:38">(<argument pos:start="305:35" pos:end="305:37"><expr pos:start="305:35" pos:end="305:37"><name pos:start="305:35" pos:end="305:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="307:19" pos:end="317:17">else <block pos:start="307:24" pos:end="317:17">{<block_content pos:start="309:21" pos:end="315:67">

                    <if_stmt pos:start="309:21" pos:end="315:67"><if pos:start="309:21" pos:end="311:58">if <condition pos:start="309:24" pos:end="309:30">(<expr pos:start="309:25" pos:end="309:29"><name pos:start="309:25" pos:end="309:29">islit</name></expr>)</condition><block type="pseudo" pos:start="311:25" pos:end="311:58"><block_content pos:start="311:25" pos:end="311:58">

                        <expr_stmt pos:start="311:25" pos:end="311:58"><expr pos:start="311:25" pos:end="311:57"><call pos:start="311:25" pos:end="311:57"><name pos:start="311:25" pos:end="311:40">tcg_gen_movi_i64</name><argument_list pos:start="311:41" pos:end="311:57">(<argument pos:start="311:42" pos:end="311:51"><expr pos:start="311:42" pos:end="311:51"><name pos:start="311:42" pos:end="311:51"><name pos:start="311:42" pos:end="311:47">cpu_ir</name><index pos:start="311:48" pos:end="311:51">[<expr pos:start="311:49" pos:end="311:50"><name pos:start="311:49" pos:end="311:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="311:54" pos:end="311:56"><expr pos:start="311:54" pos:end="311:56"><name pos:start="311:54" pos:end="311:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="313:21" pos:end="315:67">else<block type="pseudo" pos:start="315:25" pos:end="315:67"><block_content pos:start="315:25" pos:end="315:67">

                        <expr_stmt pos:start="315:25" pos:end="315:67"><expr pos:start="315:25" pos:end="315:66"><call pos:start="315:25" pos:end="315:66"><name pos:start="315:25" pos:end="315:42">tcg_gen_ext32s_i64</name><argument_list pos:start="315:43" pos:end="315:66">(<argument pos:start="315:44" pos:end="315:53"><expr pos:start="315:44" pos:end="315:53"><name pos:start="315:44" pos:end="315:53"><name pos:start="315:44" pos:end="315:49">cpu_ir</name><index pos:start="315:50" pos:end="315:53">[<expr pos:start="315:51" pos:end="315:52"><name pos:start="315:51" pos:end="315:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="315:56" pos:end="315:65"><expr pos:start="315:56" pos:end="315:65"><name pos:start="315:56" pos:end="315:65"><name pos:start="315:56" pos:end="315:61">cpu_ir</name><index pos:start="315:62" pos:end="315:65">[<expr pos:start="315:63" pos:end="315:64"><name pos:start="315:63" pos:end="315:64">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="321:13" pos:end="321:18">break;</break>

        <case pos:start="323:9" pos:end="323:18">case <expr pos:start="323:14" pos:end="323:17"><literal type="number" pos:start="323:14" pos:end="323:17">0x09</literal></expr>:</case>

            <comment type="block" pos:start="325:13" pos:end="325:22">/* SUBL */</comment>

            <if_stmt pos:start="327:13" pos:end="491:13"><if pos:start="327:13" pos:end="491:13">if <condition pos:start="327:16" pos:end="327:33">(<expr pos:start="327:17" pos:end="327:32"><call pos:start="327:17" pos:end="327:32"><name pos:start="327:17" pos:end="327:22">likely</name><argument_list pos:start="327:23" pos:end="327:32">(<argument pos:start="327:24" pos:end="327:31"><expr pos:start="327:24" pos:end="327:31"><name pos:start="327:24" pos:end="327:25">rc</name> <operator pos:start="327:27" pos:end="327:28">!=</operator> <literal type="number" pos:start="327:30" pos:end="327:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="327:35" pos:end="491:13">{<block_content pos:start="329:17" pos:end="489:17">

                <if_stmt pos:start="329:17" pos:end="355:13"><if pos:start="329:17" pos:end="341:17">if <condition pos:start="329:20" pos:end="329:29">(<expr pos:start="329:21" pos:end="329:28"><name pos:start="329:21" pos:end="329:22">ra</name> <operator pos:start="329:24" pos:end="329:25">!=</operator> <literal type="number" pos:start="329:27" pos:end="329:28">31</literal></expr>)</condition> <block pos:start="329:31" pos:end="341:17">{<block_content pos:start="331:21" pos:end="339:63">

                    <if_stmt pos:start="331:21" pos:end="337:76"><if pos:start="331:21" pos:end="333:70">if <condition pos:start="331:24" pos:end="331:30">(<expr pos:start="331:25" pos:end="331:29"><name pos:start="331:25" pos:end="331:29">islit</name></expr>)</condition><block type="pseudo" pos:start="333:25" pos:end="333:70"><block_content pos:start="333:25" pos:end="333:70">

                        <expr_stmt pos:start="333:25" pos:end="333:70"><expr pos:start="333:25" pos:end="333:69"><call pos:start="333:25" pos:end="333:69"><name pos:start="333:25" pos:end="333:40">tcg_gen_subi_i64</name><argument_list pos:start="333:41" pos:end="333:69">(<argument pos:start="333:42" pos:end="333:51"><expr pos:start="333:42" pos:end="333:51"><name pos:start="333:42" pos:end="333:51"><name pos:start="333:42" pos:end="333:47">cpu_ir</name><index pos:start="333:48" pos:end="333:51">[<expr pos:start="333:49" pos:end="333:50"><name pos:start="333:49" pos:end="333:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="333:54" pos:end="333:63"><expr pos:start="333:54" pos:end="333:63"><name pos:start="333:54" pos:end="333:63"><name pos:start="333:54" pos:end="333:59">cpu_ir</name><index pos:start="333:60" pos:end="333:63">[<expr pos:start="333:61" pos:end="333:62"><name pos:start="333:61" pos:end="333:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="333:66" pos:end="333:68"><expr pos:start="333:66" pos:end="333:68"><name pos:start="333:66" pos:end="333:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="335:21" pos:end="337:76">else<block type="pseudo" pos:start="337:25" pos:end="337:76"><block_content pos:start="337:25" pos:end="337:76">

                        <expr_stmt pos:start="337:25" pos:end="337:76"><expr pos:start="337:25" pos:end="337:75"><call pos:start="337:25" pos:end="337:75"><name pos:start="337:25" pos:end="337:39">tcg_gen_sub_i64</name><argument_list pos:start="337:40" pos:end="337:75">(<argument pos:start="337:41" pos:end="337:50"><expr pos:start="337:41" pos:end="337:50"><name pos:start="337:41" pos:end="337:50"><name pos:start="337:41" pos:end="337:46">cpu_ir</name><index pos:start="337:47" pos:end="337:50">[<expr pos:start="337:48" pos:end="337:49"><name pos:start="337:48" pos:end="337:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="337:53" pos:end="337:62"><expr pos:start="337:53" pos:end="337:62"><name pos:start="337:53" pos:end="337:62"><name pos:start="337:53" pos:end="337:58">cpu_ir</name><index pos:start="337:59" pos:end="337:62">[<expr pos:start="337:60" pos:end="337:61"><name pos:start="337:60" pos:end="337:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="337:65" pos:end="337:74"><expr pos:start="337:65" pos:end="337:74"><name pos:start="337:65" pos:end="337:74"><name pos:start="337:65" pos:end="337:70">cpu_ir</name><index pos:start="337:71" pos:end="337:74">[<expr pos:start="337:72" pos:end="337:73"><name pos:start="337:72" pos:end="337:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="339:21" pos:end="339:63"><expr pos:start="339:21" pos:end="339:62"><call pos:start="339:21" pos:end="339:62"><name pos:start="339:21" pos:end="339:38">tcg_gen_ext32s_i64</name><argument_list pos:start="339:39" pos:end="339:62">(<argument pos:start="339:40" pos:end="339:49"><expr pos:start="339:40" pos:end="339:49"><name pos:start="339:40" pos:end="339:49"><name pos:start="339:40" pos:end="339:45">cpu_ir</name><index pos:start="339:46" pos:end="339:49">[<expr pos:start="339:47" pos:end="339:48"><name pos:start="339:47" pos:end="339:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="339:52" pos:end="339:61"><expr pos:start="339:52" pos:end="339:61"><name pos:start="339:52" pos:end="339:61"><name pos:start="339:52" pos:end="339:57">cpu_ir</name><index pos:start="339:58" pos:end="339:61">[<expr pos:start="339:59" pos:end="339:60"><name pos:start="339:59" pos:end="339:60">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="341:19" pos:end="355:13">else <block pos:start="341:24" pos:end="355:13">{<block_content pos:start="343:21" pos:end="353:17">

                    <if_stmt pos:start="343:21" pos:end="353:17"><if pos:start="343:21" pos:end="345:59">if <condition pos:start="343:24" pos:end="343:30">(<expr pos:start="343:25" pos:end="343:29"><name pos:start="343:25" pos:end="343:29">islit</name></expr>)</condition><block type="pseudo" pos:start="345:25" pos:end="345:59"><block_content pos:start="345:25" pos:end="345:59">

                        <expr_stmt pos:start="345:25" pos:end="345:59"><expr pos:start="345:25" pos:end="345:58"><call pos:start="345:25" pos:end="345:58"><name pos:start="345:25" pos:end="345:40">tcg_gen_movi_i64</name><argument_list pos:start="345:41" pos:end="345:58">(<argument pos:start="345:42" pos:end="345:51"><expr pos:start="345:42" pos:end="345:51"><name pos:start="345:42" pos:end="345:51"><name pos:start="345:42" pos:end="345:47">cpu_ir</name><index pos:start="345:48" pos:end="345:51">[<expr pos:start="345:49" pos:end="345:50"><name pos:start="345:49" pos:end="345:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="345:54" pos:end="345:57"><expr pos:start="345:54" pos:end="345:57"><operator pos:start="345:54" pos:end="345:54">-</operator><name pos:start="345:55" pos:end="345:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="347:21" pos:end="353:17">else <block pos:start="347:26" pos:end="353:17">{<block_content pos:start="349:25" pos:end="351:67">

                        <expr_stmt pos:start="349:25" pos:end="349:64"><expr pos:start="349:25" pos:end="349:63"><call pos:start="349:25" pos:end="349:63"><name pos:start="349:25" pos:end="349:39">tcg_gen_neg_i64</name><argument_list pos:start="349:40" pos:end="349:63">(<argument pos:start="349:41" pos:end="349:50"><expr pos:start="349:41" pos:end="349:50"><name pos:start="349:41" pos:end="349:50"><name pos:start="349:41" pos:end="349:46">cpu_ir</name><index pos:start="349:47" pos:end="349:50">[<expr pos:start="349:48" pos:end="349:49"><name pos:start="349:48" pos:end="349:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="349:53" pos:end="349:62"><expr pos:start="349:53" pos:end="349:62"><name pos:start="349:53" pos:end="349:62"><name pos:start="349:53" pos:end="349:58">cpu_ir</name><index pos:start="349:59" pos:end="349:62">[<expr pos:start="349:60" pos:end="349:61"><name pos:start="349:60" pos:end="349:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="351:25" pos:end="351:67"><expr pos:start="351:25" pos:end="351:66"><call pos:start="351:25" pos:end="351:66"><name pos:start="351:25" pos:end="351:42">tcg_gen_ext32s_i64</name><argument_list pos:start="351:43" pos:end="351:66">(<argument pos:start="351:44" pos:end="351:53"><expr pos:start="351:44" pos:end="351:53"><name pos:start="351:44" pos:end="351:53"><name pos:start="351:44" pos:end="351:49">cpu_ir</name><index pos:start="351:50" pos:end="351:53">[<expr pos:start="351:51" pos:end="351:52"><name pos:start="351:51" pos:end="351:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="351:56" pos:end="351:65"><expr pos:start="351:56" pos:end="351:65"><name pos:start="351:56" pos:end="351:65"><name pos:start="351:56" pos:end="351:61">cpu_ir</name><index pos:start="351:62" pos:end="351:65">[<expr pos:start="351:63" pos:end="351:64"><name pos:start="351:63" pos:end="351:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="357:13" pos:end="357:18">break;</break>

        <case pos:start="359:9" pos:end="359:18">case <expr pos:start="359:14" pos:end="359:17"><literal type="number" pos:start="359:14" pos:end="359:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="361:13" pos:end="361:24">/* S4SUBL */</comment>

            <if_stmt pos:start="363:13" pos:end="399:13"><if pos:start="363:13" pos:end="399:13">if <condition pos:start="363:16" pos:end="363:33">(<expr pos:start="363:17" pos:end="363:32"><call pos:start="363:17" pos:end="363:32"><name pos:start="363:17" pos:end="363:22">likely</name><argument_list pos:start="363:23" pos:end="363:32">(<argument pos:start="363:24" pos:end="363:31"><expr pos:start="363:24" pos:end="363:31"><name pos:start="363:24" pos:end="363:25">rc</name> <operator pos:start="363:27" pos:end="363:28">!=</operator> <literal type="number" pos:start="363:30" pos:end="363:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="363:35" pos:end="399:13">{<block_content pos:start="365:17" pos:end="397:17">

                <if_stmt pos:start="365:17" pos:end="397:17"><if pos:start="365:17" pos:end="383:17">if <condition pos:start="365:20" pos:end="365:29">(<expr pos:start="365:21" pos:end="365:28"><name pos:start="365:21" pos:end="365:22">ra</name> <operator pos:start="365:24" pos:end="365:25">!=</operator> <literal type="number" pos:start="365:27" pos:end="365:28">31</literal></expr>)</condition> <block pos:start="365:31" pos:end="383:17">{<block_content pos:start="367:21" pos:end="381:39">

                    <decl_stmt pos:start="367:21" pos:end="367:46"><decl pos:start="367:21" pos:end="367:45"><type pos:start="367:21" pos:end="367:24"><name pos:start="367:21" pos:end="367:24">TCGv</name></type> <name pos:start="367:26" pos:end="367:28">tmp</name> <init pos:start="367:30" pos:end="367:45">= <expr pos:start="367:32" pos:end="367:45"><call pos:start="367:32" pos:end="367:45"><name pos:start="367:32" pos:end="367:43">tcg_temp_new</name><argument_list pos:start="367:44" pos:end="367:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="369:21" pos:end="369:57"><expr pos:start="369:21" pos:end="369:56"><call pos:start="369:21" pos:end="369:56"><name pos:start="369:21" pos:end="369:36">tcg_gen_shli_i64</name><argument_list pos:start="369:37" pos:end="369:56">(<argument pos:start="369:38" pos:end="369:40"><expr pos:start="369:38" pos:end="369:40"><name pos:start="369:38" pos:end="369:40">tmp</name></expr></argument>, <argument pos:start="369:43" pos:end="369:52"><expr pos:start="369:43" pos:end="369:52"><name pos:start="369:43" pos:end="369:52"><name pos:start="369:43" pos:end="369:48">cpu_ir</name><index pos:start="369:49" pos:end="369:52">[<expr pos:start="369:50" pos:end="369:51"><name pos:start="369:50" pos:end="369:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="369:55" pos:end="369:55"><expr pos:start="369:55" pos:end="369:55"><literal type="number" pos:start="369:55" pos:end="369:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="371:21" pos:end="377:62"><if pos:start="371:21" pos:end="373:56">if <condition pos:start="371:24" pos:end="371:30">(<expr pos:start="371:25" pos:end="371:29"><name pos:start="371:25" pos:end="371:29">islit</name></expr>)</condition><block type="pseudo" pos:start="373:25" pos:end="373:56"><block_content pos:start="373:25" pos:end="373:56">

                        <expr_stmt pos:start="373:25" pos:end="373:56"><expr pos:start="373:25" pos:end="373:55"><call pos:start="373:25" pos:end="373:55"><name pos:start="373:25" pos:end="373:40">tcg_gen_subi_i64</name><argument_list pos:start="373:41" pos:end="373:55">(<argument pos:start="373:42" pos:end="373:44"><expr pos:start="373:42" pos:end="373:44"><name pos:start="373:42" pos:end="373:44">tmp</name></expr></argument>, <argument pos:start="373:47" pos:end="373:49"><expr pos:start="373:47" pos:end="373:49"><name pos:start="373:47" pos:end="373:49">tmp</name></expr></argument>, <argument pos:start="373:52" pos:end="373:54"><expr pos:start="373:52" pos:end="373:54"><name pos:start="373:52" pos:end="373:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="375:21" pos:end="377:62">else<block type="pseudo" pos:start="377:25" pos:end="377:62"><block_content pos:start="377:25" pos:end="377:62">

                        <expr_stmt pos:start="377:25" pos:end="377:62"><expr pos:start="377:25" pos:end="377:61"><call pos:start="377:25" pos:end="377:61"><name pos:start="377:25" pos:end="377:39">tcg_gen_sub_i64</name><argument_list pos:start="377:40" pos:end="377:61">(<argument pos:start="377:41" pos:end="377:43"><expr pos:start="377:41" pos:end="377:43"><name pos:start="377:41" pos:end="377:43">tmp</name></expr></argument>, <argument pos:start="377:46" pos:end="377:48"><expr pos:start="377:46" pos:end="377:48"><name pos:start="377:46" pos:end="377:48">tmp</name></expr></argument>, <argument pos:start="377:51" pos:end="377:60"><expr pos:start="377:51" pos:end="377:60"><name pos:start="377:51" pos:end="377:60"><name pos:start="377:51" pos:end="377:56">cpu_ir</name><index pos:start="377:57" pos:end="377:60">[<expr pos:start="377:58" pos:end="377:59"><name pos:start="377:58" pos:end="377:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="379:21" pos:end="379:56"><expr pos:start="379:21" pos:end="379:55"><call pos:start="379:21" pos:end="379:55"><name pos:start="379:21" pos:end="379:38">tcg_gen_ext32s_i64</name><argument_list pos:start="379:39" pos:end="379:55">(<argument pos:start="379:40" pos:end="379:49"><expr pos:start="379:40" pos:end="379:49"><name pos:start="379:40" pos:end="379:49"><name pos:start="379:40" pos:end="379:45">cpu_ir</name><index pos:start="379:46" pos:end="379:49">[<expr pos:start="379:47" pos:end="379:48"><name pos:start="379:47" pos:end="379:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="379:52" pos:end="379:54"><expr pos:start="379:52" pos:end="379:54"><name pos:start="379:52" pos:end="379:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="381:21" pos:end="381:39"><expr pos:start="381:21" pos:end="381:38"><call pos:start="381:21" pos:end="381:38"><name pos:start="381:21" pos:end="381:33">tcg_temp_free</name><argument_list pos:start="381:34" pos:end="381:38">(<argument pos:start="381:35" pos:end="381:37"><expr pos:start="381:35" pos:end="381:37"><name pos:start="381:35" pos:end="381:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="383:19" pos:end="397:17">else <block pos:start="383:24" pos:end="397:17">{<block_content pos:start="385:21" pos:end="395:21">

                    <if_stmt pos:start="385:21" pos:end="395:21"><if pos:start="385:21" pos:end="387:59">if <condition pos:start="385:24" pos:end="385:30">(<expr pos:start="385:25" pos:end="385:29"><name pos:start="385:25" pos:end="385:29">islit</name></expr>)</condition><block type="pseudo" pos:start="387:25" pos:end="387:59"><block_content pos:start="387:25" pos:end="387:59">

                        <expr_stmt pos:start="387:25" pos:end="387:59"><expr pos:start="387:25" pos:end="387:58"><call pos:start="387:25" pos:end="387:58"><name pos:start="387:25" pos:end="387:40">tcg_gen_movi_i64</name><argument_list pos:start="387:41" pos:end="387:58">(<argument pos:start="387:42" pos:end="387:51"><expr pos:start="387:42" pos:end="387:51"><name pos:start="387:42" pos:end="387:51"><name pos:start="387:42" pos:end="387:47">cpu_ir</name><index pos:start="387:48" pos:end="387:51">[<expr pos:start="387:49" pos:end="387:50"><name pos:start="387:49" pos:end="387:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="387:54" pos:end="387:57"><expr pos:start="387:54" pos:end="387:57"><operator pos:start="387:54" pos:end="387:54">-</operator><name pos:start="387:55" pos:end="387:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="389:21" pos:end="395:21">else <block pos:start="389:26" pos:end="395:21">{<block_content pos:start="391:25" pos:end="393:67">

                        <expr_stmt pos:start="391:25" pos:end="391:64"><expr pos:start="391:25" pos:end="391:63"><call pos:start="391:25" pos:end="391:63"><name pos:start="391:25" pos:end="391:39">tcg_gen_neg_i64</name><argument_list pos:start="391:40" pos:end="391:63">(<argument pos:start="391:41" pos:end="391:50"><expr pos:start="391:41" pos:end="391:50"><name pos:start="391:41" pos:end="391:50"><name pos:start="391:41" pos:end="391:46">cpu_ir</name><index pos:start="391:47" pos:end="391:50">[<expr pos:start="391:48" pos:end="391:49"><name pos:start="391:48" pos:end="391:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="391:53" pos:end="391:62"><expr pos:start="391:53" pos:end="391:62"><name pos:start="391:53" pos:end="391:62"><name pos:start="391:53" pos:end="391:58">cpu_ir</name><index pos:start="391:59" pos:end="391:62">[<expr pos:start="391:60" pos:end="391:61"><name pos:start="391:60" pos:end="391:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="393:25" pos:end="393:67"><expr pos:start="393:25" pos:end="393:66"><call pos:start="393:25" pos:end="393:66"><name pos:start="393:25" pos:end="393:42">tcg_gen_ext32s_i64</name><argument_list pos:start="393:43" pos:end="393:66">(<argument pos:start="393:44" pos:end="393:53"><expr pos:start="393:44" pos:end="393:53"><name pos:start="393:44" pos:end="393:53"><name pos:start="393:44" pos:end="393:49">cpu_ir</name><index pos:start="393:50" pos:end="393:53">[<expr pos:start="393:51" pos:end="393:52"><name pos:start="393:51" pos:end="393:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="393:56" pos:end="393:65"><expr pos:start="393:56" pos:end="393:65"><name pos:start="393:56" pos:end="393:65"><name pos:start="393:56" pos:end="393:61">cpu_ir</name><index pos:start="393:62" pos:end="393:65">[<expr pos:start="393:63" pos:end="393:64"><name pos:start="393:63" pos:end="393:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="401:13" pos:end="401:18">break;</break>

        <case pos:start="403:9" pos:end="403:18">case <expr pos:start="403:14" pos:end="403:17"><literal type="number" pos:start="403:14" pos:end="403:17">0x0F</literal></expr>:</case>

            <comment type="block" pos:start="405:13" pos:end="405:24">/* CMPBGE */</comment>

            <expr_stmt pos:start="407:13" pos:end="407:47"><expr pos:start="407:13" pos:end="407:46"><call pos:start="407:13" pos:end="407:46"><name pos:start="407:13" pos:end="407:22">gen_cmpbge</name><argument_list pos:start="407:23" pos:end="407:46">(<argument pos:start="407:24" pos:end="407:25"><expr pos:start="407:24" pos:end="407:25"><name pos:start="407:24" pos:end="407:25">ra</name></expr></argument>, <argument pos:start="407:28" pos:end="407:29"><expr pos:start="407:28" pos:end="407:29"><name pos:start="407:28" pos:end="407:29">rb</name></expr></argument>, <argument pos:start="407:32" pos:end="407:33"><expr pos:start="407:32" pos:end="407:33"><name pos:start="407:32" pos:end="407:33">rc</name></expr></argument>, <argument pos:start="407:36" pos:end="407:40"><expr pos:start="407:36" pos:end="407:40"><name pos:start="407:36" pos:end="407:40">islit</name></expr></argument>, <argument pos:start="407:43" pos:end="407:45"><expr pos:start="407:43" pos:end="407:45"><name pos:start="407:43" pos:end="407:45">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="409:13" pos:end="409:18">break;</break>

        <case pos:start="411:9" pos:end="411:18">case <expr pos:start="411:14" pos:end="411:17"><literal type="number" pos:start="411:14" pos:end="411:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="413:13" pos:end="413:24">/* S8ADDL */</comment>

            <if_stmt pos:start="415:13" pos:end="447:13"><if pos:start="415:13" pos:end="447:13">if <condition pos:start="415:16" pos:end="415:33">(<expr pos:start="415:17" pos:end="415:32"><call pos:start="415:17" pos:end="415:32"><name pos:start="415:17" pos:end="415:22">likely</name><argument_list pos:start="415:23" pos:end="415:32">(<argument pos:start="415:24" pos:end="415:31"><expr pos:start="415:24" pos:end="415:31"><name pos:start="415:24" pos:end="415:25">rc</name> <operator pos:start="415:27" pos:end="415:28">!=</operator> <literal type="number" pos:start="415:30" pos:end="415:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="415:35" pos:end="447:13">{<block_content pos:start="417:17" pos:end="445:17">

                <if_stmt pos:start="417:17" pos:end="445:17"><if pos:start="417:17" pos:end="435:17">if <condition pos:start="417:20" pos:end="417:29">(<expr pos:start="417:21" pos:end="417:28"><name pos:start="417:21" pos:end="417:22">ra</name> <operator pos:start="417:24" pos:end="417:25">!=</operator> <literal type="number" pos:start="417:27" pos:end="417:28">31</literal></expr>)</condition> <block pos:start="417:31" pos:end="435:17">{<block_content pos:start="419:21" pos:end="433:39">

                    <decl_stmt pos:start="419:21" pos:end="419:46"><decl pos:start="419:21" pos:end="419:45"><type pos:start="419:21" pos:end="419:24"><name pos:start="419:21" pos:end="419:24">TCGv</name></type> <name pos:start="419:26" pos:end="419:28">tmp</name> <init pos:start="419:30" pos:end="419:45">= <expr pos:start="419:32" pos:end="419:45"><call pos:start="419:32" pos:end="419:45"><name pos:start="419:32" pos:end="419:43">tcg_temp_new</name><argument_list pos:start="419:44" pos:end="419:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="421:21" pos:end="421:57"><expr pos:start="421:21" pos:end="421:56"><call pos:start="421:21" pos:end="421:56"><name pos:start="421:21" pos:end="421:36">tcg_gen_shli_i64</name><argument_list pos:start="421:37" pos:end="421:56">(<argument pos:start="421:38" pos:end="421:40"><expr pos:start="421:38" pos:end="421:40"><name pos:start="421:38" pos:end="421:40">tmp</name></expr></argument>, <argument pos:start="421:43" pos:end="421:52"><expr pos:start="421:43" pos:end="421:52"><name pos:start="421:43" pos:end="421:52"><name pos:start="421:43" pos:end="421:48">cpu_ir</name><index pos:start="421:49" pos:end="421:52">[<expr pos:start="421:50" pos:end="421:51"><name pos:start="421:50" pos:end="421:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="421:55" pos:end="421:55"><expr pos:start="421:55" pos:end="421:55"><literal type="number" pos:start="421:55" pos:end="421:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="423:21" pos:end="429:62"><if pos:start="423:21" pos:end="425:56">if <condition pos:start="423:24" pos:end="423:30">(<expr pos:start="423:25" pos:end="423:29"><name pos:start="423:25" pos:end="423:29">islit</name></expr>)</condition><block type="pseudo" pos:start="425:25" pos:end="425:56"><block_content pos:start="425:25" pos:end="425:56">

                        <expr_stmt pos:start="425:25" pos:end="425:56"><expr pos:start="425:25" pos:end="425:55"><call pos:start="425:25" pos:end="425:55"><name pos:start="425:25" pos:end="425:40">tcg_gen_addi_i64</name><argument_list pos:start="425:41" pos:end="425:55">(<argument pos:start="425:42" pos:end="425:44"><expr pos:start="425:42" pos:end="425:44"><name pos:start="425:42" pos:end="425:44">tmp</name></expr></argument>, <argument pos:start="425:47" pos:end="425:49"><expr pos:start="425:47" pos:end="425:49"><name pos:start="425:47" pos:end="425:49">tmp</name></expr></argument>, <argument pos:start="425:52" pos:end="425:54"><expr pos:start="425:52" pos:end="425:54"><name pos:start="425:52" pos:end="425:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="427:21" pos:end="429:62">else<block type="pseudo" pos:start="429:25" pos:end="429:62"><block_content pos:start="429:25" pos:end="429:62">

                        <expr_stmt pos:start="429:25" pos:end="429:62"><expr pos:start="429:25" pos:end="429:61"><call pos:start="429:25" pos:end="429:61"><name pos:start="429:25" pos:end="429:39">tcg_gen_add_i64</name><argument_list pos:start="429:40" pos:end="429:61">(<argument pos:start="429:41" pos:end="429:43"><expr pos:start="429:41" pos:end="429:43"><name pos:start="429:41" pos:end="429:43">tmp</name></expr></argument>, <argument pos:start="429:46" pos:end="429:48"><expr pos:start="429:46" pos:end="429:48"><name pos:start="429:46" pos:end="429:48">tmp</name></expr></argument>, <argument pos:start="429:51" pos:end="429:60"><expr pos:start="429:51" pos:end="429:60"><name pos:start="429:51" pos:end="429:60"><name pos:start="429:51" pos:end="429:56">cpu_ir</name><index pos:start="429:57" pos:end="429:60">[<expr pos:start="429:58" pos:end="429:59"><name pos:start="429:58" pos:end="429:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="431:21" pos:end="431:56"><expr pos:start="431:21" pos:end="431:55"><call pos:start="431:21" pos:end="431:55"><name pos:start="431:21" pos:end="431:38">tcg_gen_ext32s_i64</name><argument_list pos:start="431:39" pos:end="431:55">(<argument pos:start="431:40" pos:end="431:49"><expr pos:start="431:40" pos:end="431:49"><name pos:start="431:40" pos:end="431:49"><name pos:start="431:40" pos:end="431:45">cpu_ir</name><index pos:start="431:46" pos:end="431:49">[<expr pos:start="431:47" pos:end="431:48"><name pos:start="431:47" pos:end="431:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="431:52" pos:end="431:54"><expr pos:start="431:52" pos:end="431:54"><name pos:start="431:52" pos:end="431:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="433:21" pos:end="433:39"><expr pos:start="433:21" pos:end="433:38"><call pos:start="433:21" pos:end="433:38"><name pos:start="433:21" pos:end="433:33">tcg_temp_free</name><argument_list pos:start="433:34" pos:end="433:38">(<argument pos:start="433:35" pos:end="433:37"><expr pos:start="433:35" pos:end="433:37"><name pos:start="433:35" pos:end="433:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="435:19" pos:end="445:17">else <block pos:start="435:24" pos:end="445:17">{<block_content pos:start="437:21" pos:end="443:67">

                    <if_stmt pos:start="437:21" pos:end="443:67"><if pos:start="437:21" pos:end="439:58">if <condition pos:start="437:24" pos:end="437:30">(<expr pos:start="437:25" pos:end="437:29"><name pos:start="437:25" pos:end="437:29">islit</name></expr>)</condition><block type="pseudo" pos:start="439:25" pos:end="439:58"><block_content pos:start="439:25" pos:end="439:58">

                        <expr_stmt pos:start="439:25" pos:end="439:58"><expr pos:start="439:25" pos:end="439:57"><call pos:start="439:25" pos:end="439:57"><name pos:start="439:25" pos:end="439:40">tcg_gen_movi_i64</name><argument_list pos:start="439:41" pos:end="439:57">(<argument pos:start="439:42" pos:end="439:51"><expr pos:start="439:42" pos:end="439:51"><name pos:start="439:42" pos:end="439:51"><name pos:start="439:42" pos:end="439:47">cpu_ir</name><index pos:start="439:48" pos:end="439:51">[<expr pos:start="439:49" pos:end="439:50"><name pos:start="439:49" pos:end="439:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="439:54" pos:end="439:56"><expr pos:start="439:54" pos:end="439:56"><name pos:start="439:54" pos:end="439:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="441:21" pos:end="443:67">else<block type="pseudo" pos:start="443:25" pos:end="443:67"><block_content pos:start="443:25" pos:end="443:67">

                        <expr_stmt pos:start="443:25" pos:end="443:67"><expr pos:start="443:25" pos:end="443:66"><call pos:start="443:25" pos:end="443:66"><name pos:start="443:25" pos:end="443:42">tcg_gen_ext32s_i64</name><argument_list pos:start="443:43" pos:end="443:66">(<argument pos:start="443:44" pos:end="443:53"><expr pos:start="443:44" pos:end="443:53"><name pos:start="443:44" pos:end="443:53"><name pos:start="443:44" pos:end="443:49">cpu_ir</name><index pos:start="443:50" pos:end="443:53">[<expr pos:start="443:51" pos:end="443:52"><name pos:start="443:51" pos:end="443:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="443:56" pos:end="443:65"><expr pos:start="443:56" pos:end="443:65"><name pos:start="443:56" pos:end="443:65"><name pos:start="443:56" pos:end="443:61">cpu_ir</name><index pos:start="443:62" pos:end="443:65">[<expr pos:start="443:63" pos:end="443:64"><name pos:start="443:63" pos:end="443:64">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="449:13" pos:end="449:18">break;</break>

        <case pos:start="451:9" pos:end="451:18">case <expr pos:start="451:14" pos:end="451:17"><literal type="number" pos:start="451:14" pos:end="451:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="453:13" pos:end="453:24">/* S8SUBL */</comment>

            <if_stmt pos:start="455:13" pos:end="489:17"><if pos:start="455:13" pos:end="489:17">if <condition pos:start="455:16" pos:end="455:33">(<expr pos:start="455:17" pos:end="455:32"><call pos:start="455:17" pos:end="455:32"><name pos:start="455:17" pos:end="455:22">likely</name><argument_list pos:start="455:23" pos:end="455:32">(<argument pos:start="455:24" pos:end="455:31"><expr pos:start="455:24" pos:end="455:31"><name pos:start="455:24" pos:end="455:25">rc</name> <operator pos:start="455:27" pos:end="455:28">!=</operator> <literal type="number" pos:start="455:30" pos:end="455:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="455:35" pos:end="489:17">{<block_content pos:start="457:17" pos:end="487:21">

                <if_stmt pos:start="457:17" pos:end="487:21"><if pos:start="457:17" pos:end="475:17">if <condition pos:start="457:20" pos:end="457:29">(<expr pos:start="457:21" pos:end="457:28"><name pos:start="457:21" pos:end="457:22">ra</name> <operator pos:start="457:24" pos:end="457:25">!=</operator> <literal type="number" pos:start="457:27" pos:end="457:28">31</literal></expr>)</condition> <block pos:start="457:31" pos:end="475:17">{<block_content pos:start="459:21" pos:end="473:39">

                    <decl_stmt pos:start="459:21" pos:end="459:46"><decl pos:start="459:21" pos:end="459:45"><type pos:start="459:21" pos:end="459:24"><name pos:start="459:21" pos:end="459:24">TCGv</name></type> <name pos:start="459:26" pos:end="459:28">tmp</name> <init pos:start="459:30" pos:end="459:45">= <expr pos:start="459:32" pos:end="459:45"><call pos:start="459:32" pos:end="459:45"><name pos:start="459:32" pos:end="459:43">tcg_temp_new</name><argument_list pos:start="459:44" pos:end="459:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="461:21" pos:end="461:57"><expr pos:start="461:21" pos:end="461:56"><call pos:start="461:21" pos:end="461:56"><name pos:start="461:21" pos:end="461:36">tcg_gen_shli_i64</name><argument_list pos:start="461:37" pos:end="461:56">(<argument pos:start="461:38" pos:end="461:40"><expr pos:start="461:38" pos:end="461:40"><name pos:start="461:38" pos:end="461:40">tmp</name></expr></argument>, <argument pos:start="461:43" pos:end="461:52"><expr pos:start="461:43" pos:end="461:52"><name pos:start="461:43" pos:end="461:52"><name pos:start="461:43" pos:end="461:48">cpu_ir</name><index pos:start="461:49" pos:end="461:52">[<expr pos:start="461:50" pos:end="461:51"><name pos:start="461:50" pos:end="461:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="461:55" pos:end="461:55"><expr pos:start="461:55" pos:end="461:55"><literal type="number" pos:start="461:55" pos:end="461:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="463:21" pos:end="469:61"><if pos:start="463:21" pos:end="465:56">if <condition pos:start="463:24" pos:end="463:30">(<expr pos:start="463:25" pos:end="463:29"><name pos:start="463:25" pos:end="463:29">islit</name></expr>)</condition><block type="pseudo" pos:start="465:25" pos:end="465:56"><block_content pos:start="465:25" pos:end="465:56">

                        <expr_stmt pos:start="465:25" pos:end="465:56"><expr pos:start="465:25" pos:end="465:55"><call pos:start="465:25" pos:end="465:55"><name pos:start="465:25" pos:end="465:40">tcg_gen_subi_i64</name><argument_list pos:start="465:41" pos:end="465:55">(<argument pos:start="465:42" pos:end="465:44"><expr pos:start="465:42" pos:end="465:44"><name pos:start="465:42" pos:end="465:44">tmp</name></expr></argument>, <argument pos:start="465:47" pos:end="465:49"><expr pos:start="465:47" pos:end="465:49"><name pos:start="465:47" pos:end="465:49">tmp</name></expr></argument>, <argument pos:start="465:52" pos:end="465:54"><expr pos:start="465:52" pos:end="465:54"><name pos:start="465:52" pos:end="465:54">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="467:21" pos:end="469:61">else<block type="pseudo" pos:start="469:24" pos:end="469:61"><block_content pos:start="469:24" pos:end="469:61">

                       <expr_stmt pos:start="469:24" pos:end="469:61"><expr pos:start="469:24" pos:end="469:60"><call pos:start="469:24" pos:end="469:60"><name pos:start="469:24" pos:end="469:38">tcg_gen_sub_i64</name><argument_list pos:start="469:39" pos:end="469:60">(<argument pos:start="469:40" pos:end="469:42"><expr pos:start="469:40" pos:end="469:42"><name pos:start="469:40" pos:end="469:42">tmp</name></expr></argument>, <argument pos:start="469:45" pos:end="469:47"><expr pos:start="469:45" pos:end="469:47"><name pos:start="469:45" pos:end="469:47">tmp</name></expr></argument>, <argument pos:start="469:50" pos:end="469:59"><expr pos:start="469:50" pos:end="469:59"><name pos:start="469:50" pos:end="469:59"><name pos:start="469:50" pos:end="469:55">cpu_ir</name><index pos:start="469:56" pos:end="469:59">[<expr pos:start="469:57" pos:end="469:58"><name pos:start="469:57" pos:end="469:58">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="471:21" pos:end="471:56"><expr pos:start="471:21" pos:end="471:55"><call pos:start="471:21" pos:end="471:55"><name pos:start="471:21" pos:end="471:38">tcg_gen_ext32s_i64</name><argument_list pos:start="471:39" pos:end="471:55">(<argument pos:start="471:40" pos:end="471:49"><expr pos:start="471:40" pos:end="471:49"><name pos:start="471:40" pos:end="471:49"><name pos:start="471:40" pos:end="471:45">cpu_ir</name><index pos:start="471:46" pos:end="471:49">[<expr pos:start="471:47" pos:end="471:48"><name pos:start="471:47" pos:end="471:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="471:52" pos:end="471:54"><expr pos:start="471:52" pos:end="471:54"><name pos:start="471:52" pos:end="471:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="473:21" pos:end="473:39"><expr pos:start="473:21" pos:end="473:38"><call pos:start="473:21" pos:end="473:38"><name pos:start="473:21" pos:end="473:33">tcg_temp_free</name><argument_list pos:start="473:34" pos:end="473:38">(<argument pos:start="473:35" pos:end="473:37"><expr pos:start="473:35" pos:end="473:37"><name pos:start="473:35" pos:end="473:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="475:19" pos:end="487:21">else <block pos:start="475:24" pos:end="487:21">{<block_content pos:start="477:21" pos:end="485:67">

                    <if_stmt pos:start="477:21" pos:end="483:64"><if pos:start="477:21" pos:end="479:59">if <condition pos:start="477:24" pos:end="477:30">(<expr pos:start="477:25" pos:end="477:29"><name pos:start="477:25" pos:end="477:29">islit</name></expr>)</condition><block type="pseudo" pos:start="479:25" pos:end="479:59"><block_content pos:start="479:25" pos:end="479:59">

                        <expr_stmt pos:start="479:25" pos:end="479:59"><expr pos:start="479:25" pos:end="479:58"><call pos:start="479:25" pos:end="479:58"><name pos:start="479:25" pos:end="479:40">tcg_gen_movi_i64</name><argument_list pos:start="479:41" pos:end="479:58">(<argument pos:start="479:42" pos:end="479:51"><expr pos:start="479:42" pos:end="479:51"><name pos:start="479:42" pos:end="479:51"><name pos:start="479:42" pos:end="479:47">cpu_ir</name><index pos:start="479:48" pos:end="479:51">[<expr pos:start="479:49" pos:end="479:50"><name pos:start="479:49" pos:end="479:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="479:54" pos:end="479:57"><expr pos:start="479:54" pos:end="479:57"><operator pos:start="479:54" pos:end="479:54">-</operator><name pos:start="479:55" pos:end="479:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="481:21" pos:end="483:64">else<block type="pseudo" pos:start="483:25" pos:end="483:64"><block_content pos:start="483:25" pos:end="483:64">

                        <expr_stmt pos:start="483:25" pos:end="483:64"><expr pos:start="483:25" pos:end="483:63"><call pos:start="483:25" pos:end="483:63"><name pos:start="483:25" pos:end="483:39">tcg_gen_neg_i64</name><argument_list pos:start="483:40" pos:end="483:63">(<argument pos:start="483:41" pos:end="483:50"><expr pos:start="483:41" pos:end="483:50"><name pos:start="483:41" pos:end="483:50"><name pos:start="483:41" pos:end="483:46">cpu_ir</name><index pos:start="483:47" pos:end="483:50">[<expr pos:start="483:48" pos:end="483:49"><name pos:start="483:48" pos:end="483:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="483:53" pos:end="483:62"><expr pos:start="483:53" pos:end="483:62"><name pos:start="483:53" pos:end="483:62"><name pos:start="483:53" pos:end="483:58">cpu_ir</name><index pos:start="483:59" pos:end="483:62">[<expr pos:start="483:60" pos:end="483:61"><name pos:start="483:60" pos:end="483:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="485:25" pos:end="485:67"><expr pos:start="485:25" pos:end="485:66"><call pos:start="485:25" pos:end="485:66"><name pos:start="485:25" pos:end="485:42">tcg_gen_ext32s_i64</name><argument_list pos:start="485:43" pos:end="485:66">(<argument pos:start="485:44" pos:end="485:53"><expr pos:start="485:44" pos:end="485:53"><name pos:start="485:44" pos:end="485:53"><name pos:start="485:44" pos:end="485:49">cpu_ir</name><index pos:start="485:50" pos:end="485:53">[<expr pos:start="485:51" pos:end="485:52"><name pos:start="485:51" pos:end="485:52">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="485:56" pos:end="485:65"><expr pos:start="485:56" pos:end="485:65"><name pos:start="485:56" pos:end="485:65"><name pos:start="485:56" pos:end="485:61">cpu_ir</name><index pos:start="485:62" pos:end="485:65">[<expr pos:start="485:63" pos:end="485:64"><name pos:start="485:63" pos:end="485:64">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="493:13" pos:end="493:18">break;</break>

        <case pos:start="495:9" pos:end="495:18">case <expr pos:start="495:14" pos:end="495:17"><literal type="number" pos:start="495:14" pos:end="495:17">0x1D</literal></expr>:</case>

            <comment type="block" pos:start="497:13" pos:end="497:24">/* CMPULT */</comment>

            <expr_stmt pos:start="499:13" pos:end="499:58"><expr pos:start="499:13" pos:end="499:57"><call pos:start="499:13" pos:end="499:57"><name pos:start="499:13" pos:end="499:19">gen_cmp</name><argument_list pos:start="499:20" pos:end="499:57">(<argument pos:start="499:21" pos:end="499:32"><expr pos:start="499:21" pos:end="499:32"><name pos:start="499:21" pos:end="499:32">TCG_COND_LTU</name></expr></argument>, <argument pos:start="499:35" pos:end="499:36"><expr pos:start="499:35" pos:end="499:36"><name pos:start="499:35" pos:end="499:36">ra</name></expr></argument>, <argument pos:start="499:39" pos:end="499:40"><expr pos:start="499:39" pos:end="499:40"><name pos:start="499:39" pos:end="499:40">rb</name></expr></argument>, <argument pos:start="499:43" pos:end="499:44"><expr pos:start="499:43" pos:end="499:44"><name pos:start="499:43" pos:end="499:44">rc</name></expr></argument>, <argument pos:start="499:47" pos:end="499:51"><expr pos:start="499:47" pos:end="499:51"><name pos:start="499:47" pos:end="499:51">islit</name></expr></argument>, <argument pos:start="499:54" pos:end="499:56"><expr pos:start="499:54" pos:end="499:56"><name pos:start="499:54" pos:end="499:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="501:13" pos:end="501:18">break;</break>

        <case pos:start="503:9" pos:end="503:18">case <expr pos:start="503:14" pos:end="503:17"><literal type="number" pos:start="503:14" pos:end="503:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="505:13" pos:end="505:22">/* ADDQ */</comment>

            <if_stmt pos:start="507:13" pos:end="531:13"><if pos:start="507:13" pos:end="531:13">if <condition pos:start="507:16" pos:end="507:33">(<expr pos:start="507:17" pos:end="507:32"><call pos:start="507:17" pos:end="507:32"><name pos:start="507:17" pos:end="507:22">likely</name><argument_list pos:start="507:23" pos:end="507:32">(<argument pos:start="507:24" pos:end="507:31"><expr pos:start="507:24" pos:end="507:31"><name pos:start="507:24" pos:end="507:25">rc</name> <operator pos:start="507:27" pos:end="507:28">!=</operator> <literal type="number" pos:start="507:30" pos:end="507:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="507:35" pos:end="531:13">{<block_content pos:start="509:17" pos:end="529:17">

                <if_stmt pos:start="509:17" pos:end="529:17"><if pos:start="509:17" pos:end="519:17">if <condition pos:start="509:20" pos:end="509:29">(<expr pos:start="509:21" pos:end="509:28"><name pos:start="509:21" pos:end="509:22">ra</name> <operator pos:start="509:24" pos:end="509:25">!=</operator> <literal type="number" pos:start="509:27" pos:end="509:28">31</literal></expr>)</condition> <block pos:start="509:31" pos:end="519:17">{<block_content pos:start="511:21" pos:end="517:76">

                    <if_stmt pos:start="511:21" pos:end="517:76"><if pos:start="511:21" pos:end="513:70">if <condition pos:start="511:24" pos:end="511:30">(<expr pos:start="511:25" pos:end="511:29"><name pos:start="511:25" pos:end="511:29">islit</name></expr>)</condition><block type="pseudo" pos:start="513:25" pos:end="513:70"><block_content pos:start="513:25" pos:end="513:70">

                        <expr_stmt pos:start="513:25" pos:end="513:70"><expr pos:start="513:25" pos:end="513:69"><call pos:start="513:25" pos:end="513:69"><name pos:start="513:25" pos:end="513:40">tcg_gen_addi_i64</name><argument_list pos:start="513:41" pos:end="513:69">(<argument pos:start="513:42" pos:end="513:51"><expr pos:start="513:42" pos:end="513:51"><name pos:start="513:42" pos:end="513:51"><name pos:start="513:42" pos:end="513:47">cpu_ir</name><index pos:start="513:48" pos:end="513:51">[<expr pos:start="513:49" pos:end="513:50"><name pos:start="513:49" pos:end="513:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="513:54" pos:end="513:63"><expr pos:start="513:54" pos:end="513:63"><name pos:start="513:54" pos:end="513:63"><name pos:start="513:54" pos:end="513:59">cpu_ir</name><index pos:start="513:60" pos:end="513:63">[<expr pos:start="513:61" pos:end="513:62"><name pos:start="513:61" pos:end="513:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="513:66" pos:end="513:68"><expr pos:start="513:66" pos:end="513:68"><name pos:start="513:66" pos:end="513:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="515:21" pos:end="517:76">else<block type="pseudo" pos:start="517:25" pos:end="517:76"><block_content pos:start="517:25" pos:end="517:76">

                        <expr_stmt pos:start="517:25" pos:end="517:76"><expr pos:start="517:25" pos:end="517:75"><call pos:start="517:25" pos:end="517:75"><name pos:start="517:25" pos:end="517:39">tcg_gen_add_i64</name><argument_list pos:start="517:40" pos:end="517:75">(<argument pos:start="517:41" pos:end="517:50"><expr pos:start="517:41" pos:end="517:50"><name pos:start="517:41" pos:end="517:50"><name pos:start="517:41" pos:end="517:46">cpu_ir</name><index pos:start="517:47" pos:end="517:50">[<expr pos:start="517:48" pos:end="517:49"><name pos:start="517:48" pos:end="517:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="517:53" pos:end="517:62"><expr pos:start="517:53" pos:end="517:62"><name pos:start="517:53" pos:end="517:62"><name pos:start="517:53" pos:end="517:58">cpu_ir</name><index pos:start="517:59" pos:end="517:62">[<expr pos:start="517:60" pos:end="517:61"><name pos:start="517:60" pos:end="517:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="517:65" pos:end="517:74"><expr pos:start="517:65" pos:end="517:74"><name pos:start="517:65" pos:end="517:74"><name pos:start="517:65" pos:end="517:70">cpu_ir</name><index pos:start="517:71" pos:end="517:74">[<expr pos:start="517:72" pos:end="517:73"><name pos:start="517:72" pos:end="517:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="519:19" pos:end="529:17">else <block pos:start="519:24" pos:end="529:17">{<block_content pos:start="521:21" pos:end="527:64">

                    <if_stmt pos:start="521:21" pos:end="527:64"><if pos:start="521:21" pos:end="523:58">if <condition pos:start="521:24" pos:end="521:30">(<expr pos:start="521:25" pos:end="521:29"><name pos:start="521:25" pos:end="521:29">islit</name></expr>)</condition><block type="pseudo" pos:start="523:25" pos:end="523:58"><block_content pos:start="523:25" pos:end="523:58">

                        <expr_stmt pos:start="523:25" pos:end="523:58"><expr pos:start="523:25" pos:end="523:57"><call pos:start="523:25" pos:end="523:57"><name pos:start="523:25" pos:end="523:40">tcg_gen_movi_i64</name><argument_list pos:start="523:41" pos:end="523:57">(<argument pos:start="523:42" pos:end="523:51"><expr pos:start="523:42" pos:end="523:51"><name pos:start="523:42" pos:end="523:51"><name pos:start="523:42" pos:end="523:47">cpu_ir</name><index pos:start="523:48" pos:end="523:51">[<expr pos:start="523:49" pos:end="523:50"><name pos:start="523:49" pos:end="523:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="523:54" pos:end="523:56"><expr pos:start="523:54" pos:end="523:56"><name pos:start="523:54" pos:end="523:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="525:21" pos:end="527:64">else<block type="pseudo" pos:start="527:25" pos:end="527:64"><block_content pos:start="527:25" pos:end="527:64">

                        <expr_stmt pos:start="527:25" pos:end="527:64"><expr pos:start="527:25" pos:end="527:63"><call pos:start="527:25" pos:end="527:63"><name pos:start="527:25" pos:end="527:39">tcg_gen_mov_i64</name><argument_list pos:start="527:40" pos:end="527:63">(<argument pos:start="527:41" pos:end="527:50"><expr pos:start="527:41" pos:end="527:50"><name pos:start="527:41" pos:end="527:50"><name pos:start="527:41" pos:end="527:46">cpu_ir</name><index pos:start="527:47" pos:end="527:50">[<expr pos:start="527:48" pos:end="527:49"><name pos:start="527:48" pos:end="527:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="527:53" pos:end="527:62"><expr pos:start="527:53" pos:end="527:62"><name pos:start="527:53" pos:end="527:62"><name pos:start="527:53" pos:end="527:58">cpu_ir</name><index pos:start="527:59" pos:end="527:62">[<expr pos:start="527:60" pos:end="527:61"><name pos:start="527:60" pos:end="527:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="533:13" pos:end="533:18">break;</break>

        <case pos:start="535:9" pos:end="535:18">case <expr pos:start="535:14" pos:end="535:17"><literal type="number" pos:start="535:14" pos:end="535:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="537:13" pos:end="537:24">/* S4ADDQ */</comment>

            <if_stmt pos:start="539:13" pos:end="569:13"><if pos:start="539:13" pos:end="569:13">if <condition pos:start="539:16" pos:end="539:33">(<expr pos:start="539:17" pos:end="539:32"><call pos:start="539:17" pos:end="539:32"><name pos:start="539:17" pos:end="539:22">likely</name><argument_list pos:start="539:23" pos:end="539:32">(<argument pos:start="539:24" pos:end="539:31"><expr pos:start="539:24" pos:end="539:31"><name pos:start="539:24" pos:end="539:25">rc</name> <operator pos:start="539:27" pos:end="539:28">!=</operator> <literal type="number" pos:start="539:30" pos:end="539:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="539:35" pos:end="569:13">{<block_content pos:start="541:17" pos:end="567:17">

                <if_stmt pos:start="541:17" pos:end="567:17"><if pos:start="541:17" pos:end="557:17">if <condition pos:start="541:20" pos:end="541:29">(<expr pos:start="541:21" pos:end="541:28"><name pos:start="541:21" pos:end="541:22">ra</name> <operator pos:start="541:24" pos:end="541:25">!=</operator> <literal type="number" pos:start="541:27" pos:end="541:28">31</literal></expr>)</condition> <block pos:start="541:31" pos:end="557:17">{<block_content pos:start="543:21" pos:end="555:39">

                    <decl_stmt pos:start="543:21" pos:end="543:46"><decl pos:start="543:21" pos:end="543:45"><type pos:start="543:21" pos:end="543:24"><name pos:start="543:21" pos:end="543:24">TCGv</name></type> <name pos:start="543:26" pos:end="543:28">tmp</name> <init pos:start="543:30" pos:end="543:45">= <expr pos:start="543:32" pos:end="543:45"><call pos:start="543:32" pos:end="543:45"><name pos:start="543:32" pos:end="543:43">tcg_temp_new</name><argument_list pos:start="543:44" pos:end="543:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="545:21" pos:end="545:57"><expr pos:start="545:21" pos:end="545:56"><call pos:start="545:21" pos:end="545:56"><name pos:start="545:21" pos:end="545:36">tcg_gen_shli_i64</name><argument_list pos:start="545:37" pos:end="545:56">(<argument pos:start="545:38" pos:end="545:40"><expr pos:start="545:38" pos:end="545:40"><name pos:start="545:38" pos:end="545:40">tmp</name></expr></argument>, <argument pos:start="545:43" pos:end="545:52"><expr pos:start="545:43" pos:end="545:52"><name pos:start="545:43" pos:end="545:52"><name pos:start="545:43" pos:end="545:48">cpu_ir</name><index pos:start="545:49" pos:end="545:52">[<expr pos:start="545:50" pos:end="545:51"><name pos:start="545:50" pos:end="545:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="545:55" pos:end="545:55"><expr pos:start="545:55" pos:end="545:55"><literal type="number" pos:start="545:55" pos:end="545:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="547:21" pos:end="553:69"><if pos:start="547:21" pos:end="549:63">if <condition pos:start="547:24" pos:end="547:30">(<expr pos:start="547:25" pos:end="547:29"><name pos:start="547:25" pos:end="547:29">islit</name></expr>)</condition><block type="pseudo" pos:start="549:25" pos:end="549:63"><block_content pos:start="549:25" pos:end="549:63">

                        <expr_stmt pos:start="549:25" pos:end="549:63"><expr pos:start="549:25" pos:end="549:62"><call pos:start="549:25" pos:end="549:62"><name pos:start="549:25" pos:end="549:40">tcg_gen_addi_i64</name><argument_list pos:start="549:41" pos:end="549:62">(<argument pos:start="549:42" pos:end="549:51"><expr pos:start="549:42" pos:end="549:51"><name pos:start="549:42" pos:end="549:51"><name pos:start="549:42" pos:end="549:47">cpu_ir</name><index pos:start="549:48" pos:end="549:51">[<expr pos:start="549:49" pos:end="549:50"><name pos:start="549:49" pos:end="549:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="549:54" pos:end="549:56"><expr pos:start="549:54" pos:end="549:56"><name pos:start="549:54" pos:end="549:56">tmp</name></expr></argument>, <argument pos:start="549:59" pos:end="549:61"><expr pos:start="549:59" pos:end="549:61"><name pos:start="549:59" pos:end="549:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="551:21" pos:end="553:69">else<block type="pseudo" pos:start="553:25" pos:end="553:69"><block_content pos:start="553:25" pos:end="553:69">

                        <expr_stmt pos:start="553:25" pos:end="553:69"><expr pos:start="553:25" pos:end="553:68"><call pos:start="553:25" pos:end="553:68"><name pos:start="553:25" pos:end="553:39">tcg_gen_add_i64</name><argument_list pos:start="553:40" pos:end="553:68">(<argument pos:start="553:41" pos:end="553:50"><expr pos:start="553:41" pos:end="553:50"><name pos:start="553:41" pos:end="553:50"><name pos:start="553:41" pos:end="553:46">cpu_ir</name><index pos:start="553:47" pos:end="553:50">[<expr pos:start="553:48" pos:end="553:49"><name pos:start="553:48" pos:end="553:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="553:53" pos:end="553:55"><expr pos:start="553:53" pos:end="553:55"><name pos:start="553:53" pos:end="553:55">tmp</name></expr></argument>, <argument pos:start="553:58" pos:end="553:67"><expr pos:start="553:58" pos:end="553:67"><name pos:start="553:58" pos:end="553:67"><name pos:start="553:58" pos:end="553:63">cpu_ir</name><index pos:start="553:64" pos:end="553:67">[<expr pos:start="553:65" pos:end="553:66"><name pos:start="553:65" pos:end="553:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="555:21" pos:end="555:39"><expr pos:start="555:21" pos:end="555:38"><call pos:start="555:21" pos:end="555:38"><name pos:start="555:21" pos:end="555:33">tcg_temp_free</name><argument_list pos:start="555:34" pos:end="555:38">(<argument pos:start="555:35" pos:end="555:37"><expr pos:start="555:35" pos:end="555:37"><name pos:start="555:35" pos:end="555:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="557:19" pos:end="567:17">else <block pos:start="557:24" pos:end="567:17">{<block_content pos:start="559:21" pos:end="565:64">

                    <if_stmt pos:start="559:21" pos:end="565:64"><if pos:start="559:21" pos:end="561:58">if <condition pos:start="559:24" pos:end="559:30">(<expr pos:start="559:25" pos:end="559:29"><name pos:start="559:25" pos:end="559:29">islit</name></expr>)</condition><block type="pseudo" pos:start="561:25" pos:end="561:58"><block_content pos:start="561:25" pos:end="561:58">

                        <expr_stmt pos:start="561:25" pos:end="561:58"><expr pos:start="561:25" pos:end="561:57"><call pos:start="561:25" pos:end="561:57"><name pos:start="561:25" pos:end="561:40">tcg_gen_movi_i64</name><argument_list pos:start="561:41" pos:end="561:57">(<argument pos:start="561:42" pos:end="561:51"><expr pos:start="561:42" pos:end="561:51"><name pos:start="561:42" pos:end="561:51"><name pos:start="561:42" pos:end="561:47">cpu_ir</name><index pos:start="561:48" pos:end="561:51">[<expr pos:start="561:49" pos:end="561:50"><name pos:start="561:49" pos:end="561:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="561:54" pos:end="561:56"><expr pos:start="561:54" pos:end="561:56"><name pos:start="561:54" pos:end="561:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="563:21" pos:end="565:64">else<block type="pseudo" pos:start="565:25" pos:end="565:64"><block_content pos:start="565:25" pos:end="565:64">

                        <expr_stmt pos:start="565:25" pos:end="565:64"><expr pos:start="565:25" pos:end="565:63"><call pos:start="565:25" pos:end="565:63"><name pos:start="565:25" pos:end="565:39">tcg_gen_mov_i64</name><argument_list pos:start="565:40" pos:end="565:63">(<argument pos:start="565:41" pos:end="565:50"><expr pos:start="565:41" pos:end="565:50"><name pos:start="565:41" pos:end="565:50"><name pos:start="565:41" pos:end="565:46">cpu_ir</name><index pos:start="565:47" pos:end="565:50">[<expr pos:start="565:48" pos:end="565:49"><name pos:start="565:48" pos:end="565:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="565:53" pos:end="565:62"><expr pos:start="565:53" pos:end="565:62"><name pos:start="565:53" pos:end="565:62"><name pos:start="565:53" pos:end="565:58">cpu_ir</name><index pos:start="565:59" pos:end="565:62">[<expr pos:start="565:60" pos:end="565:61"><name pos:start="565:60" pos:end="565:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="571:13" pos:end="571:18">break;</break>

        <case pos:start="573:9" pos:end="573:18">case <expr pos:start="573:14" pos:end="573:17"><literal type="number" pos:start="573:14" pos:end="573:17">0x29</literal></expr>:</case>

            <comment type="block" pos:start="575:13" pos:end="575:22">/* SUBQ */</comment>

            <if_stmt pos:start="577:13" pos:end="601:13"><if pos:start="577:13" pos:end="601:13">if <condition pos:start="577:16" pos:end="577:33">(<expr pos:start="577:17" pos:end="577:32"><call pos:start="577:17" pos:end="577:32"><name pos:start="577:17" pos:end="577:22">likely</name><argument_list pos:start="577:23" pos:end="577:32">(<argument pos:start="577:24" pos:end="577:31"><expr pos:start="577:24" pos:end="577:31"><name pos:start="577:24" pos:end="577:25">rc</name> <operator pos:start="577:27" pos:end="577:28">!=</operator> <literal type="number" pos:start="577:30" pos:end="577:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="577:35" pos:end="601:13">{<block_content pos:start="579:17" pos:end="599:17">

                <if_stmt pos:start="579:17" pos:end="599:17"><if pos:start="579:17" pos:end="589:17">if <condition pos:start="579:20" pos:end="579:29">(<expr pos:start="579:21" pos:end="579:28"><name pos:start="579:21" pos:end="579:22">ra</name> <operator pos:start="579:24" pos:end="579:25">!=</operator> <literal type="number" pos:start="579:27" pos:end="579:28">31</literal></expr>)</condition> <block pos:start="579:31" pos:end="589:17">{<block_content pos:start="581:21" pos:end="587:76">

                    <if_stmt pos:start="581:21" pos:end="587:76"><if pos:start="581:21" pos:end="583:70">if <condition pos:start="581:24" pos:end="581:30">(<expr pos:start="581:25" pos:end="581:29"><name pos:start="581:25" pos:end="581:29">islit</name></expr>)</condition><block type="pseudo" pos:start="583:25" pos:end="583:70"><block_content pos:start="583:25" pos:end="583:70">

                        <expr_stmt pos:start="583:25" pos:end="583:70"><expr pos:start="583:25" pos:end="583:69"><call pos:start="583:25" pos:end="583:69"><name pos:start="583:25" pos:end="583:40">tcg_gen_subi_i64</name><argument_list pos:start="583:41" pos:end="583:69">(<argument pos:start="583:42" pos:end="583:51"><expr pos:start="583:42" pos:end="583:51"><name pos:start="583:42" pos:end="583:51"><name pos:start="583:42" pos:end="583:47">cpu_ir</name><index pos:start="583:48" pos:end="583:51">[<expr pos:start="583:49" pos:end="583:50"><name pos:start="583:49" pos:end="583:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="583:54" pos:end="583:63"><expr pos:start="583:54" pos:end="583:63"><name pos:start="583:54" pos:end="583:63"><name pos:start="583:54" pos:end="583:59">cpu_ir</name><index pos:start="583:60" pos:end="583:63">[<expr pos:start="583:61" pos:end="583:62"><name pos:start="583:61" pos:end="583:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="583:66" pos:end="583:68"><expr pos:start="583:66" pos:end="583:68"><name pos:start="583:66" pos:end="583:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="585:21" pos:end="587:76">else<block type="pseudo" pos:start="587:25" pos:end="587:76"><block_content pos:start="587:25" pos:end="587:76">

                        <expr_stmt pos:start="587:25" pos:end="587:76"><expr pos:start="587:25" pos:end="587:75"><call pos:start="587:25" pos:end="587:75"><name pos:start="587:25" pos:end="587:39">tcg_gen_sub_i64</name><argument_list pos:start="587:40" pos:end="587:75">(<argument pos:start="587:41" pos:end="587:50"><expr pos:start="587:41" pos:end="587:50"><name pos:start="587:41" pos:end="587:50"><name pos:start="587:41" pos:end="587:46">cpu_ir</name><index pos:start="587:47" pos:end="587:50">[<expr pos:start="587:48" pos:end="587:49"><name pos:start="587:48" pos:end="587:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="587:53" pos:end="587:62"><expr pos:start="587:53" pos:end="587:62"><name pos:start="587:53" pos:end="587:62"><name pos:start="587:53" pos:end="587:58">cpu_ir</name><index pos:start="587:59" pos:end="587:62">[<expr pos:start="587:60" pos:end="587:61"><name pos:start="587:60" pos:end="587:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="587:65" pos:end="587:74"><expr pos:start="587:65" pos:end="587:74"><name pos:start="587:65" pos:end="587:74"><name pos:start="587:65" pos:end="587:70">cpu_ir</name><index pos:start="587:71" pos:end="587:74">[<expr pos:start="587:72" pos:end="587:73"><name pos:start="587:72" pos:end="587:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="589:19" pos:end="599:17">else <block pos:start="589:24" pos:end="599:17">{<block_content pos:start="591:21" pos:end="597:64">

                    <if_stmt pos:start="591:21" pos:end="597:64"><if pos:start="591:21" pos:end="593:59">if <condition pos:start="591:24" pos:end="591:30">(<expr pos:start="591:25" pos:end="591:29"><name pos:start="591:25" pos:end="591:29">islit</name></expr>)</condition><block type="pseudo" pos:start="593:25" pos:end="593:59"><block_content pos:start="593:25" pos:end="593:59">

                        <expr_stmt pos:start="593:25" pos:end="593:59"><expr pos:start="593:25" pos:end="593:58"><call pos:start="593:25" pos:end="593:58"><name pos:start="593:25" pos:end="593:40">tcg_gen_movi_i64</name><argument_list pos:start="593:41" pos:end="593:58">(<argument pos:start="593:42" pos:end="593:51"><expr pos:start="593:42" pos:end="593:51"><name pos:start="593:42" pos:end="593:51"><name pos:start="593:42" pos:end="593:47">cpu_ir</name><index pos:start="593:48" pos:end="593:51">[<expr pos:start="593:49" pos:end="593:50"><name pos:start="593:49" pos:end="593:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="593:54" pos:end="593:57"><expr pos:start="593:54" pos:end="593:57"><operator pos:start="593:54" pos:end="593:54">-</operator><name pos:start="593:55" pos:end="593:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="595:21" pos:end="597:64">else<block type="pseudo" pos:start="597:25" pos:end="597:64"><block_content pos:start="597:25" pos:end="597:64">

                        <expr_stmt pos:start="597:25" pos:end="597:64"><expr pos:start="597:25" pos:end="597:63"><call pos:start="597:25" pos:end="597:63"><name pos:start="597:25" pos:end="597:39">tcg_gen_neg_i64</name><argument_list pos:start="597:40" pos:end="597:63">(<argument pos:start="597:41" pos:end="597:50"><expr pos:start="597:41" pos:end="597:50"><name pos:start="597:41" pos:end="597:50"><name pos:start="597:41" pos:end="597:46">cpu_ir</name><index pos:start="597:47" pos:end="597:50">[<expr pos:start="597:48" pos:end="597:49"><name pos:start="597:48" pos:end="597:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="597:53" pos:end="597:62"><expr pos:start="597:53" pos:end="597:62"><name pos:start="597:53" pos:end="597:62"><name pos:start="597:53" pos:end="597:58">cpu_ir</name><index pos:start="597:59" pos:end="597:62">[<expr pos:start="597:60" pos:end="597:61"><name pos:start="597:60" pos:end="597:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="603:13" pos:end="603:18">break;</break>

        <case pos:start="605:9" pos:end="605:18">case <expr pos:start="605:14" pos:end="605:17"><literal type="number" pos:start="605:14" pos:end="605:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="607:13" pos:end="607:24">/* S4SUBQ */</comment>

            <if_stmt pos:start="609:13" pos:end="639:13"><if pos:start="609:13" pos:end="639:13">if <condition pos:start="609:16" pos:end="609:33">(<expr pos:start="609:17" pos:end="609:32"><call pos:start="609:17" pos:end="609:32"><name pos:start="609:17" pos:end="609:22">likely</name><argument_list pos:start="609:23" pos:end="609:32">(<argument pos:start="609:24" pos:end="609:31"><expr pos:start="609:24" pos:end="609:31"><name pos:start="609:24" pos:end="609:25">rc</name> <operator pos:start="609:27" pos:end="609:28">!=</operator> <literal type="number" pos:start="609:30" pos:end="609:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="609:35" pos:end="639:13">{<block_content pos:start="611:17" pos:end="637:17">

                <if_stmt pos:start="611:17" pos:end="637:17"><if pos:start="611:17" pos:end="627:17">if <condition pos:start="611:20" pos:end="611:29">(<expr pos:start="611:21" pos:end="611:28"><name pos:start="611:21" pos:end="611:22">ra</name> <operator pos:start="611:24" pos:end="611:25">!=</operator> <literal type="number" pos:start="611:27" pos:end="611:28">31</literal></expr>)</condition> <block pos:start="611:31" pos:end="627:17">{<block_content pos:start="613:21" pos:end="625:39">

                    <decl_stmt pos:start="613:21" pos:end="613:46"><decl pos:start="613:21" pos:end="613:45"><type pos:start="613:21" pos:end="613:24"><name pos:start="613:21" pos:end="613:24">TCGv</name></type> <name pos:start="613:26" pos:end="613:28">tmp</name> <init pos:start="613:30" pos:end="613:45">= <expr pos:start="613:32" pos:end="613:45"><call pos:start="613:32" pos:end="613:45"><name pos:start="613:32" pos:end="613:43">tcg_temp_new</name><argument_list pos:start="613:44" pos:end="613:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="615:21" pos:end="615:57"><expr pos:start="615:21" pos:end="615:56"><call pos:start="615:21" pos:end="615:56"><name pos:start="615:21" pos:end="615:36">tcg_gen_shli_i64</name><argument_list pos:start="615:37" pos:end="615:56">(<argument pos:start="615:38" pos:end="615:40"><expr pos:start="615:38" pos:end="615:40"><name pos:start="615:38" pos:end="615:40">tmp</name></expr></argument>, <argument pos:start="615:43" pos:end="615:52"><expr pos:start="615:43" pos:end="615:52"><name pos:start="615:43" pos:end="615:52"><name pos:start="615:43" pos:end="615:48">cpu_ir</name><index pos:start="615:49" pos:end="615:52">[<expr pos:start="615:50" pos:end="615:51"><name pos:start="615:50" pos:end="615:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="615:55" pos:end="615:55"><expr pos:start="615:55" pos:end="615:55"><literal type="number" pos:start="615:55" pos:end="615:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="617:21" pos:end="623:69"><if pos:start="617:21" pos:end="619:63">if <condition pos:start="617:24" pos:end="617:30">(<expr pos:start="617:25" pos:end="617:29"><name pos:start="617:25" pos:end="617:29">islit</name></expr>)</condition><block type="pseudo" pos:start="619:25" pos:end="619:63"><block_content pos:start="619:25" pos:end="619:63">

                        <expr_stmt pos:start="619:25" pos:end="619:63"><expr pos:start="619:25" pos:end="619:62"><call pos:start="619:25" pos:end="619:62"><name pos:start="619:25" pos:end="619:40">tcg_gen_subi_i64</name><argument_list pos:start="619:41" pos:end="619:62">(<argument pos:start="619:42" pos:end="619:51"><expr pos:start="619:42" pos:end="619:51"><name pos:start="619:42" pos:end="619:51"><name pos:start="619:42" pos:end="619:47">cpu_ir</name><index pos:start="619:48" pos:end="619:51">[<expr pos:start="619:49" pos:end="619:50"><name pos:start="619:49" pos:end="619:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="619:54" pos:end="619:56"><expr pos:start="619:54" pos:end="619:56"><name pos:start="619:54" pos:end="619:56">tmp</name></expr></argument>, <argument pos:start="619:59" pos:end="619:61"><expr pos:start="619:59" pos:end="619:61"><name pos:start="619:59" pos:end="619:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="621:21" pos:end="623:69">else<block type="pseudo" pos:start="623:25" pos:end="623:69"><block_content pos:start="623:25" pos:end="623:69">

                        <expr_stmt pos:start="623:25" pos:end="623:69"><expr pos:start="623:25" pos:end="623:68"><call pos:start="623:25" pos:end="623:68"><name pos:start="623:25" pos:end="623:39">tcg_gen_sub_i64</name><argument_list pos:start="623:40" pos:end="623:68">(<argument pos:start="623:41" pos:end="623:50"><expr pos:start="623:41" pos:end="623:50"><name pos:start="623:41" pos:end="623:50"><name pos:start="623:41" pos:end="623:46">cpu_ir</name><index pos:start="623:47" pos:end="623:50">[<expr pos:start="623:48" pos:end="623:49"><name pos:start="623:48" pos:end="623:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="623:53" pos:end="623:55"><expr pos:start="623:53" pos:end="623:55"><name pos:start="623:53" pos:end="623:55">tmp</name></expr></argument>, <argument pos:start="623:58" pos:end="623:67"><expr pos:start="623:58" pos:end="623:67"><name pos:start="623:58" pos:end="623:67"><name pos:start="623:58" pos:end="623:63">cpu_ir</name><index pos:start="623:64" pos:end="623:67">[<expr pos:start="623:65" pos:end="623:66"><name pos:start="623:65" pos:end="623:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="625:21" pos:end="625:39"><expr pos:start="625:21" pos:end="625:38"><call pos:start="625:21" pos:end="625:38"><name pos:start="625:21" pos:end="625:33">tcg_temp_free</name><argument_list pos:start="625:34" pos:end="625:38">(<argument pos:start="625:35" pos:end="625:37"><expr pos:start="625:35" pos:end="625:37"><name pos:start="625:35" pos:end="625:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="627:19" pos:end="637:17">else <block pos:start="627:24" pos:end="637:17">{<block_content pos:start="629:21" pos:end="635:64">

                    <if_stmt pos:start="629:21" pos:end="635:64"><if pos:start="629:21" pos:end="631:59">if <condition pos:start="629:24" pos:end="629:30">(<expr pos:start="629:25" pos:end="629:29"><name pos:start="629:25" pos:end="629:29">islit</name></expr>)</condition><block type="pseudo" pos:start="631:25" pos:end="631:59"><block_content pos:start="631:25" pos:end="631:59">

                        <expr_stmt pos:start="631:25" pos:end="631:59"><expr pos:start="631:25" pos:end="631:58"><call pos:start="631:25" pos:end="631:58"><name pos:start="631:25" pos:end="631:40">tcg_gen_movi_i64</name><argument_list pos:start="631:41" pos:end="631:58">(<argument pos:start="631:42" pos:end="631:51"><expr pos:start="631:42" pos:end="631:51"><name pos:start="631:42" pos:end="631:51"><name pos:start="631:42" pos:end="631:47">cpu_ir</name><index pos:start="631:48" pos:end="631:51">[<expr pos:start="631:49" pos:end="631:50"><name pos:start="631:49" pos:end="631:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="631:54" pos:end="631:57"><expr pos:start="631:54" pos:end="631:57"><operator pos:start="631:54" pos:end="631:54">-</operator><name pos:start="631:55" pos:end="631:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="633:21" pos:end="635:64">else<block type="pseudo" pos:start="635:25" pos:end="635:64"><block_content pos:start="635:25" pos:end="635:64">

                        <expr_stmt pos:start="635:25" pos:end="635:64"><expr pos:start="635:25" pos:end="635:63"><call pos:start="635:25" pos:end="635:63"><name pos:start="635:25" pos:end="635:39">tcg_gen_neg_i64</name><argument_list pos:start="635:40" pos:end="635:63">(<argument pos:start="635:41" pos:end="635:50"><expr pos:start="635:41" pos:end="635:50"><name pos:start="635:41" pos:end="635:50"><name pos:start="635:41" pos:end="635:46">cpu_ir</name><index pos:start="635:47" pos:end="635:50">[<expr pos:start="635:48" pos:end="635:49"><name pos:start="635:48" pos:end="635:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="635:53" pos:end="635:62"><expr pos:start="635:53" pos:end="635:62"><name pos:start="635:53" pos:end="635:62"><name pos:start="635:53" pos:end="635:58">cpu_ir</name><index pos:start="635:59" pos:end="635:62">[<expr pos:start="635:60" pos:end="635:61"><name pos:start="635:60" pos:end="635:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="641:13" pos:end="641:18">break;</break>

        <case pos:start="643:9" pos:end="643:18">case <expr pos:start="643:14" pos:end="643:17"><literal type="number" pos:start="643:14" pos:end="643:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="645:13" pos:end="645:23">/* CMPEQ */</comment>

            <expr_stmt pos:start="647:13" pos:end="647:57"><expr pos:start="647:13" pos:end="647:56"><call pos:start="647:13" pos:end="647:56"><name pos:start="647:13" pos:end="647:19">gen_cmp</name><argument_list pos:start="647:20" pos:end="647:56">(<argument pos:start="647:21" pos:end="647:31"><expr pos:start="647:21" pos:end="647:31"><name pos:start="647:21" pos:end="647:31">TCG_COND_EQ</name></expr></argument>, <argument pos:start="647:34" pos:end="647:35"><expr pos:start="647:34" pos:end="647:35"><name pos:start="647:34" pos:end="647:35">ra</name></expr></argument>, <argument pos:start="647:38" pos:end="647:39"><expr pos:start="647:38" pos:end="647:39"><name pos:start="647:38" pos:end="647:39">rb</name></expr></argument>, <argument pos:start="647:42" pos:end="647:43"><expr pos:start="647:42" pos:end="647:43"><name pos:start="647:42" pos:end="647:43">rc</name></expr></argument>, <argument pos:start="647:46" pos:end="647:50"><expr pos:start="647:46" pos:end="647:50"><name pos:start="647:46" pos:end="647:50">islit</name></expr></argument>, <argument pos:start="647:53" pos:end="647:55"><expr pos:start="647:53" pos:end="647:55"><name pos:start="647:53" pos:end="647:55">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:18">case <expr pos:start="651:14" pos:end="651:17"><literal type="number" pos:start="651:14" pos:end="651:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="653:13" pos:end="653:24">/* S8ADDQ */</comment>

            <if_stmt pos:start="655:13" pos:end="685:13"><if pos:start="655:13" pos:end="685:13">if <condition pos:start="655:16" pos:end="655:33">(<expr pos:start="655:17" pos:end="655:32"><call pos:start="655:17" pos:end="655:32"><name pos:start="655:17" pos:end="655:22">likely</name><argument_list pos:start="655:23" pos:end="655:32">(<argument pos:start="655:24" pos:end="655:31"><expr pos:start="655:24" pos:end="655:31"><name pos:start="655:24" pos:end="655:25">rc</name> <operator pos:start="655:27" pos:end="655:28">!=</operator> <literal type="number" pos:start="655:30" pos:end="655:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="655:35" pos:end="685:13">{<block_content pos:start="657:17" pos:end="683:17">

                <if_stmt pos:start="657:17" pos:end="683:17"><if pos:start="657:17" pos:end="673:17">if <condition pos:start="657:20" pos:end="657:29">(<expr pos:start="657:21" pos:end="657:28"><name pos:start="657:21" pos:end="657:22">ra</name> <operator pos:start="657:24" pos:end="657:25">!=</operator> <literal type="number" pos:start="657:27" pos:end="657:28">31</literal></expr>)</condition> <block pos:start="657:31" pos:end="673:17">{<block_content pos:start="659:21" pos:end="671:39">

                    <decl_stmt pos:start="659:21" pos:end="659:46"><decl pos:start="659:21" pos:end="659:45"><type pos:start="659:21" pos:end="659:24"><name pos:start="659:21" pos:end="659:24">TCGv</name></type> <name pos:start="659:26" pos:end="659:28">tmp</name> <init pos:start="659:30" pos:end="659:45">= <expr pos:start="659:32" pos:end="659:45"><call pos:start="659:32" pos:end="659:45"><name pos:start="659:32" pos:end="659:43">tcg_temp_new</name><argument_list pos:start="659:44" pos:end="659:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="661:21" pos:end="661:57"><expr pos:start="661:21" pos:end="661:56"><call pos:start="661:21" pos:end="661:56"><name pos:start="661:21" pos:end="661:36">tcg_gen_shli_i64</name><argument_list pos:start="661:37" pos:end="661:56">(<argument pos:start="661:38" pos:end="661:40"><expr pos:start="661:38" pos:end="661:40"><name pos:start="661:38" pos:end="661:40">tmp</name></expr></argument>, <argument pos:start="661:43" pos:end="661:52"><expr pos:start="661:43" pos:end="661:52"><name pos:start="661:43" pos:end="661:52"><name pos:start="661:43" pos:end="661:48">cpu_ir</name><index pos:start="661:49" pos:end="661:52">[<expr pos:start="661:50" pos:end="661:51"><name pos:start="661:50" pos:end="661:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="661:55" pos:end="661:55"><expr pos:start="661:55" pos:end="661:55"><literal type="number" pos:start="661:55" pos:end="661:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="663:21" pos:end="669:69"><if pos:start="663:21" pos:end="665:63">if <condition pos:start="663:24" pos:end="663:30">(<expr pos:start="663:25" pos:end="663:29"><name pos:start="663:25" pos:end="663:29">islit</name></expr>)</condition><block type="pseudo" pos:start="665:25" pos:end="665:63"><block_content pos:start="665:25" pos:end="665:63">

                        <expr_stmt pos:start="665:25" pos:end="665:63"><expr pos:start="665:25" pos:end="665:62"><call pos:start="665:25" pos:end="665:62"><name pos:start="665:25" pos:end="665:40">tcg_gen_addi_i64</name><argument_list pos:start="665:41" pos:end="665:62">(<argument pos:start="665:42" pos:end="665:51"><expr pos:start="665:42" pos:end="665:51"><name pos:start="665:42" pos:end="665:51"><name pos:start="665:42" pos:end="665:47">cpu_ir</name><index pos:start="665:48" pos:end="665:51">[<expr pos:start="665:49" pos:end="665:50"><name pos:start="665:49" pos:end="665:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="665:54" pos:end="665:56"><expr pos:start="665:54" pos:end="665:56"><name pos:start="665:54" pos:end="665:56">tmp</name></expr></argument>, <argument pos:start="665:59" pos:end="665:61"><expr pos:start="665:59" pos:end="665:61"><name pos:start="665:59" pos:end="665:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="667:21" pos:end="669:69">else<block type="pseudo" pos:start="669:25" pos:end="669:69"><block_content pos:start="669:25" pos:end="669:69">

                        <expr_stmt pos:start="669:25" pos:end="669:69"><expr pos:start="669:25" pos:end="669:68"><call pos:start="669:25" pos:end="669:68"><name pos:start="669:25" pos:end="669:39">tcg_gen_add_i64</name><argument_list pos:start="669:40" pos:end="669:68">(<argument pos:start="669:41" pos:end="669:50"><expr pos:start="669:41" pos:end="669:50"><name pos:start="669:41" pos:end="669:50"><name pos:start="669:41" pos:end="669:46">cpu_ir</name><index pos:start="669:47" pos:end="669:50">[<expr pos:start="669:48" pos:end="669:49"><name pos:start="669:48" pos:end="669:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="669:53" pos:end="669:55"><expr pos:start="669:53" pos:end="669:55"><name pos:start="669:53" pos:end="669:55">tmp</name></expr></argument>, <argument pos:start="669:58" pos:end="669:67"><expr pos:start="669:58" pos:end="669:67"><name pos:start="669:58" pos:end="669:67"><name pos:start="669:58" pos:end="669:63">cpu_ir</name><index pos:start="669:64" pos:end="669:67">[<expr pos:start="669:65" pos:end="669:66"><name pos:start="669:65" pos:end="669:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="671:21" pos:end="671:39"><expr pos:start="671:21" pos:end="671:38"><call pos:start="671:21" pos:end="671:38"><name pos:start="671:21" pos:end="671:33">tcg_temp_free</name><argument_list pos:start="671:34" pos:end="671:38">(<argument pos:start="671:35" pos:end="671:37"><expr pos:start="671:35" pos:end="671:37"><name pos:start="671:35" pos:end="671:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="673:19" pos:end="683:17">else <block pos:start="673:24" pos:end="683:17">{<block_content pos:start="675:21" pos:end="681:64">

                    <if_stmt pos:start="675:21" pos:end="681:64"><if pos:start="675:21" pos:end="677:58">if <condition pos:start="675:24" pos:end="675:30">(<expr pos:start="675:25" pos:end="675:29"><name pos:start="675:25" pos:end="675:29">islit</name></expr>)</condition><block type="pseudo" pos:start="677:25" pos:end="677:58"><block_content pos:start="677:25" pos:end="677:58">

                        <expr_stmt pos:start="677:25" pos:end="677:58"><expr pos:start="677:25" pos:end="677:57"><call pos:start="677:25" pos:end="677:57"><name pos:start="677:25" pos:end="677:40">tcg_gen_movi_i64</name><argument_list pos:start="677:41" pos:end="677:57">(<argument pos:start="677:42" pos:end="677:51"><expr pos:start="677:42" pos:end="677:51"><name pos:start="677:42" pos:end="677:51"><name pos:start="677:42" pos:end="677:47">cpu_ir</name><index pos:start="677:48" pos:end="677:51">[<expr pos:start="677:49" pos:end="677:50"><name pos:start="677:49" pos:end="677:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="677:54" pos:end="677:56"><expr pos:start="677:54" pos:end="677:56"><name pos:start="677:54" pos:end="677:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="679:21" pos:end="681:64">else<block type="pseudo" pos:start="681:25" pos:end="681:64"><block_content pos:start="681:25" pos:end="681:64">

                        <expr_stmt pos:start="681:25" pos:end="681:64"><expr pos:start="681:25" pos:end="681:63"><call pos:start="681:25" pos:end="681:63"><name pos:start="681:25" pos:end="681:39">tcg_gen_mov_i64</name><argument_list pos:start="681:40" pos:end="681:63">(<argument pos:start="681:41" pos:end="681:50"><expr pos:start="681:41" pos:end="681:50"><name pos:start="681:41" pos:end="681:50"><name pos:start="681:41" pos:end="681:46">cpu_ir</name><index pos:start="681:47" pos:end="681:50">[<expr pos:start="681:48" pos:end="681:49"><name pos:start="681:48" pos:end="681:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="681:53" pos:end="681:62"><expr pos:start="681:53" pos:end="681:62"><name pos:start="681:53" pos:end="681:62"><name pos:start="681:53" pos:end="681:58">cpu_ir</name><index pos:start="681:59" pos:end="681:62">[<expr pos:start="681:60" pos:end="681:61"><name pos:start="681:60" pos:end="681:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="687:13" pos:end="687:18">break;</break>

        <case pos:start="689:9" pos:end="689:18">case <expr pos:start="689:14" pos:end="689:17"><literal type="number" pos:start="689:14" pos:end="689:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="691:13" pos:end="691:24">/* S8SUBQ */</comment>

            <if_stmt pos:start="693:13" pos:end="723:13"><if pos:start="693:13" pos:end="723:13">if <condition pos:start="693:16" pos:end="693:33">(<expr pos:start="693:17" pos:end="693:32"><call pos:start="693:17" pos:end="693:32"><name pos:start="693:17" pos:end="693:22">likely</name><argument_list pos:start="693:23" pos:end="693:32">(<argument pos:start="693:24" pos:end="693:31"><expr pos:start="693:24" pos:end="693:31"><name pos:start="693:24" pos:end="693:25">rc</name> <operator pos:start="693:27" pos:end="693:28">!=</operator> <literal type="number" pos:start="693:30" pos:end="693:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="693:35" pos:end="723:13">{<block_content pos:start="695:17" pos:end="721:17">

                <if_stmt pos:start="695:17" pos:end="721:17"><if pos:start="695:17" pos:end="711:17">if <condition pos:start="695:20" pos:end="695:29">(<expr pos:start="695:21" pos:end="695:28"><name pos:start="695:21" pos:end="695:22">ra</name> <operator pos:start="695:24" pos:end="695:25">!=</operator> <literal type="number" pos:start="695:27" pos:end="695:28">31</literal></expr>)</condition> <block pos:start="695:31" pos:end="711:17">{<block_content pos:start="697:21" pos:end="709:39">

                    <decl_stmt pos:start="697:21" pos:end="697:46"><decl pos:start="697:21" pos:end="697:45"><type pos:start="697:21" pos:end="697:24"><name pos:start="697:21" pos:end="697:24">TCGv</name></type> <name pos:start="697:26" pos:end="697:28">tmp</name> <init pos:start="697:30" pos:end="697:45">= <expr pos:start="697:32" pos:end="697:45"><call pos:start="697:32" pos:end="697:45"><name pos:start="697:32" pos:end="697:43">tcg_temp_new</name><argument_list pos:start="697:44" pos:end="697:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="699:21" pos:end="699:57"><expr pos:start="699:21" pos:end="699:56"><call pos:start="699:21" pos:end="699:56"><name pos:start="699:21" pos:end="699:36">tcg_gen_shli_i64</name><argument_list pos:start="699:37" pos:end="699:56">(<argument pos:start="699:38" pos:end="699:40"><expr pos:start="699:38" pos:end="699:40"><name pos:start="699:38" pos:end="699:40">tmp</name></expr></argument>, <argument pos:start="699:43" pos:end="699:52"><expr pos:start="699:43" pos:end="699:52"><name pos:start="699:43" pos:end="699:52"><name pos:start="699:43" pos:end="699:48">cpu_ir</name><index pos:start="699:49" pos:end="699:52">[<expr pos:start="699:50" pos:end="699:51"><name pos:start="699:50" pos:end="699:51">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="699:55" pos:end="699:55"><expr pos:start="699:55" pos:end="699:55"><literal type="number" pos:start="699:55" pos:end="699:55">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="701:21" pos:end="707:69"><if pos:start="701:21" pos:end="703:63">if <condition pos:start="701:24" pos:end="701:30">(<expr pos:start="701:25" pos:end="701:29"><name pos:start="701:25" pos:end="701:29">islit</name></expr>)</condition><block type="pseudo" pos:start="703:25" pos:end="703:63"><block_content pos:start="703:25" pos:end="703:63">

                        <expr_stmt pos:start="703:25" pos:end="703:63"><expr pos:start="703:25" pos:end="703:62"><call pos:start="703:25" pos:end="703:62"><name pos:start="703:25" pos:end="703:40">tcg_gen_subi_i64</name><argument_list pos:start="703:41" pos:end="703:62">(<argument pos:start="703:42" pos:end="703:51"><expr pos:start="703:42" pos:end="703:51"><name pos:start="703:42" pos:end="703:51"><name pos:start="703:42" pos:end="703:47">cpu_ir</name><index pos:start="703:48" pos:end="703:51">[<expr pos:start="703:49" pos:end="703:50"><name pos:start="703:49" pos:end="703:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="703:54" pos:end="703:56"><expr pos:start="703:54" pos:end="703:56"><name pos:start="703:54" pos:end="703:56">tmp</name></expr></argument>, <argument pos:start="703:59" pos:end="703:61"><expr pos:start="703:59" pos:end="703:61"><name pos:start="703:59" pos:end="703:61">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="705:21" pos:end="707:69">else<block type="pseudo" pos:start="707:25" pos:end="707:69"><block_content pos:start="707:25" pos:end="707:69">

                        <expr_stmt pos:start="707:25" pos:end="707:69"><expr pos:start="707:25" pos:end="707:68"><call pos:start="707:25" pos:end="707:68"><name pos:start="707:25" pos:end="707:39">tcg_gen_sub_i64</name><argument_list pos:start="707:40" pos:end="707:68">(<argument pos:start="707:41" pos:end="707:50"><expr pos:start="707:41" pos:end="707:50"><name pos:start="707:41" pos:end="707:50"><name pos:start="707:41" pos:end="707:46">cpu_ir</name><index pos:start="707:47" pos:end="707:50">[<expr pos:start="707:48" pos:end="707:49"><name pos:start="707:48" pos:end="707:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="707:53" pos:end="707:55"><expr pos:start="707:53" pos:end="707:55"><name pos:start="707:53" pos:end="707:55">tmp</name></expr></argument>, <argument pos:start="707:58" pos:end="707:67"><expr pos:start="707:58" pos:end="707:67"><name pos:start="707:58" pos:end="707:67"><name pos:start="707:58" pos:end="707:63">cpu_ir</name><index pos:start="707:64" pos:end="707:67">[<expr pos:start="707:65" pos:end="707:66"><name pos:start="707:65" pos:end="707:66">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="709:21" pos:end="709:39"><expr pos:start="709:21" pos:end="709:38"><call pos:start="709:21" pos:end="709:38"><name pos:start="709:21" pos:end="709:33">tcg_temp_free</name><argument_list pos:start="709:34" pos:end="709:38">(<argument pos:start="709:35" pos:end="709:37"><expr pos:start="709:35" pos:end="709:37"><name pos:start="709:35" pos:end="709:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="711:19" pos:end="721:17">else <block pos:start="711:24" pos:end="721:17">{<block_content pos:start="713:21" pos:end="719:64">

                    <if_stmt pos:start="713:21" pos:end="719:64"><if pos:start="713:21" pos:end="715:59">if <condition pos:start="713:24" pos:end="713:30">(<expr pos:start="713:25" pos:end="713:29"><name pos:start="713:25" pos:end="713:29">islit</name></expr>)</condition><block type="pseudo" pos:start="715:25" pos:end="715:59"><block_content pos:start="715:25" pos:end="715:59">

                        <expr_stmt pos:start="715:25" pos:end="715:59"><expr pos:start="715:25" pos:end="715:58"><call pos:start="715:25" pos:end="715:58"><name pos:start="715:25" pos:end="715:40">tcg_gen_movi_i64</name><argument_list pos:start="715:41" pos:end="715:58">(<argument pos:start="715:42" pos:end="715:51"><expr pos:start="715:42" pos:end="715:51"><name pos:start="715:42" pos:end="715:51"><name pos:start="715:42" pos:end="715:47">cpu_ir</name><index pos:start="715:48" pos:end="715:51">[<expr pos:start="715:49" pos:end="715:50"><name pos:start="715:49" pos:end="715:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="715:54" pos:end="715:57"><expr pos:start="715:54" pos:end="715:57"><operator pos:start="715:54" pos:end="715:54">-</operator><name pos:start="715:55" pos:end="715:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="717:21" pos:end="719:64">else<block type="pseudo" pos:start="719:25" pos:end="719:64"><block_content pos:start="719:25" pos:end="719:64">

                        <expr_stmt pos:start="719:25" pos:end="719:64"><expr pos:start="719:25" pos:end="719:63"><call pos:start="719:25" pos:end="719:63"><name pos:start="719:25" pos:end="719:39">tcg_gen_neg_i64</name><argument_list pos:start="719:40" pos:end="719:63">(<argument pos:start="719:41" pos:end="719:50"><expr pos:start="719:41" pos:end="719:50"><name pos:start="719:41" pos:end="719:50"><name pos:start="719:41" pos:end="719:46">cpu_ir</name><index pos:start="719:47" pos:end="719:50">[<expr pos:start="719:48" pos:end="719:49"><name pos:start="719:48" pos:end="719:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="719:53" pos:end="719:62"><expr pos:start="719:53" pos:end="719:62"><name pos:start="719:53" pos:end="719:62"><name pos:start="719:53" pos:end="719:58">cpu_ir</name><index pos:start="719:59" pos:end="719:62">[<expr pos:start="719:60" pos:end="719:61"><name pos:start="719:60" pos:end="719:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="725:13" pos:end="725:18">break;</break>

        <case pos:start="727:9" pos:end="727:18">case <expr pos:start="727:14" pos:end="727:17"><literal type="number" pos:start="727:14" pos:end="727:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="729:13" pos:end="729:24">/* CMPULE */</comment>

            <expr_stmt pos:start="731:13" pos:end="731:58"><expr pos:start="731:13" pos:end="731:57"><call pos:start="731:13" pos:end="731:57"><name pos:start="731:13" pos:end="731:19">gen_cmp</name><argument_list pos:start="731:20" pos:end="731:57">(<argument pos:start="731:21" pos:end="731:32"><expr pos:start="731:21" pos:end="731:32"><name pos:start="731:21" pos:end="731:32">TCG_COND_LEU</name></expr></argument>, <argument pos:start="731:35" pos:end="731:36"><expr pos:start="731:35" pos:end="731:36"><name pos:start="731:35" pos:end="731:36">ra</name></expr></argument>, <argument pos:start="731:39" pos:end="731:40"><expr pos:start="731:39" pos:end="731:40"><name pos:start="731:39" pos:end="731:40">rb</name></expr></argument>, <argument pos:start="731:43" pos:end="731:44"><expr pos:start="731:43" pos:end="731:44"><name pos:start="731:43" pos:end="731:44">rc</name></expr></argument>, <argument pos:start="731:47" pos:end="731:51"><expr pos:start="731:47" pos:end="731:51"><name pos:start="731:47" pos:end="731:51">islit</name></expr></argument>, <argument pos:start="731:54" pos:end="731:56"><expr pos:start="731:54" pos:end="731:56"><name pos:start="731:54" pos:end="731:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="733:13" pos:end="733:18">break;</break>

        <case pos:start="735:9" pos:end="735:18">case <expr pos:start="735:14" pos:end="735:17"><literal type="number" pos:start="735:14" pos:end="735:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="737:13" pos:end="737:24">/* ADDL/V */</comment>

            <expr_stmt pos:start="739:13" pos:end="739:46"><expr pos:start="739:13" pos:end="739:45"><call pos:start="739:13" pos:end="739:45"><name pos:start="739:13" pos:end="739:21">gen_addlv</name><argument_list pos:start="739:22" pos:end="739:45">(<argument pos:start="739:23" pos:end="739:24"><expr pos:start="739:23" pos:end="739:24"><name pos:start="739:23" pos:end="739:24">ra</name></expr></argument>, <argument pos:start="739:27" pos:end="739:28"><expr pos:start="739:27" pos:end="739:28"><name pos:start="739:27" pos:end="739:28">rb</name></expr></argument>, <argument pos:start="739:31" pos:end="739:32"><expr pos:start="739:31" pos:end="739:32"><name pos:start="739:31" pos:end="739:32">rc</name></expr></argument>, <argument pos:start="739:35" pos:end="739:39"><expr pos:start="739:35" pos:end="739:39"><name pos:start="739:35" pos:end="739:39">islit</name></expr></argument>, <argument pos:start="739:42" pos:end="739:44"><expr pos:start="739:42" pos:end="739:44"><name pos:start="739:42" pos:end="739:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="741:13" pos:end="741:18">break;</break>

        <case pos:start="743:9" pos:end="743:18">case <expr pos:start="743:14" pos:end="743:17"><literal type="number" pos:start="743:14" pos:end="743:17">0x49</literal></expr>:</case>

            <comment type="block" pos:start="745:13" pos:end="745:24">/* SUBL/V */</comment>

            <expr_stmt pos:start="747:13" pos:end="747:46"><expr pos:start="747:13" pos:end="747:45"><call pos:start="747:13" pos:end="747:45"><name pos:start="747:13" pos:end="747:21">gen_sublv</name><argument_list pos:start="747:22" pos:end="747:45">(<argument pos:start="747:23" pos:end="747:24"><expr pos:start="747:23" pos:end="747:24"><name pos:start="747:23" pos:end="747:24">ra</name></expr></argument>, <argument pos:start="747:27" pos:end="747:28"><expr pos:start="747:27" pos:end="747:28"><name pos:start="747:27" pos:end="747:28">rb</name></expr></argument>, <argument pos:start="747:31" pos:end="747:32"><expr pos:start="747:31" pos:end="747:32"><name pos:start="747:31" pos:end="747:32">rc</name></expr></argument>, <argument pos:start="747:35" pos:end="747:39"><expr pos:start="747:35" pos:end="747:39"><name pos:start="747:35" pos:end="747:39">islit</name></expr></argument>, <argument pos:start="747:42" pos:end="747:44"><expr pos:start="747:42" pos:end="747:44"><name pos:start="747:42" pos:end="747:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="749:13" pos:end="749:18">break;</break>

        <case pos:start="751:9" pos:end="751:18">case <expr pos:start="751:14" pos:end="751:17"><literal type="number" pos:start="751:14" pos:end="751:17">0x4D</literal></expr>:</case>

            <comment type="block" pos:start="753:13" pos:end="753:23">/* CMPLT */</comment>

            <expr_stmt pos:start="755:13" pos:end="755:57"><expr pos:start="755:13" pos:end="755:56"><call pos:start="755:13" pos:end="755:56"><name pos:start="755:13" pos:end="755:19">gen_cmp</name><argument_list pos:start="755:20" pos:end="755:56">(<argument pos:start="755:21" pos:end="755:31"><expr pos:start="755:21" pos:end="755:31"><name pos:start="755:21" pos:end="755:31">TCG_COND_LT</name></expr></argument>, <argument pos:start="755:34" pos:end="755:35"><expr pos:start="755:34" pos:end="755:35"><name pos:start="755:34" pos:end="755:35">ra</name></expr></argument>, <argument pos:start="755:38" pos:end="755:39"><expr pos:start="755:38" pos:end="755:39"><name pos:start="755:38" pos:end="755:39">rb</name></expr></argument>, <argument pos:start="755:42" pos:end="755:43"><expr pos:start="755:42" pos:end="755:43"><name pos:start="755:42" pos:end="755:43">rc</name></expr></argument>, <argument pos:start="755:46" pos:end="755:50"><expr pos:start="755:46" pos:end="755:50"><name pos:start="755:46" pos:end="755:50">islit</name></expr></argument>, <argument pos:start="755:53" pos:end="755:55"><expr pos:start="755:53" pos:end="755:55"><name pos:start="755:53" pos:end="755:55">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        <case pos:start="759:9" pos:end="759:18">case <expr pos:start="759:14" pos:end="759:17"><literal type="number" pos:start="759:14" pos:end="759:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="761:13" pos:end="761:24">/* ADDQ/V */</comment>

            <expr_stmt pos:start="763:13" pos:end="763:46"><expr pos:start="763:13" pos:end="763:45"><call pos:start="763:13" pos:end="763:45"><name pos:start="763:13" pos:end="763:21">gen_addqv</name><argument_list pos:start="763:22" pos:end="763:45">(<argument pos:start="763:23" pos:end="763:24"><expr pos:start="763:23" pos:end="763:24"><name pos:start="763:23" pos:end="763:24">ra</name></expr></argument>, <argument pos:start="763:27" pos:end="763:28"><expr pos:start="763:27" pos:end="763:28"><name pos:start="763:27" pos:end="763:28">rb</name></expr></argument>, <argument pos:start="763:31" pos:end="763:32"><expr pos:start="763:31" pos:end="763:32"><name pos:start="763:31" pos:end="763:32">rc</name></expr></argument>, <argument pos:start="763:35" pos:end="763:39"><expr pos:start="763:35" pos:end="763:39"><name pos:start="763:35" pos:end="763:39">islit</name></expr></argument>, <argument pos:start="763:42" pos:end="763:44"><expr pos:start="763:42" pos:end="763:44"><name pos:start="763:42" pos:end="763:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="765:13" pos:end="765:18">break;</break>

        <case pos:start="767:9" pos:end="767:18">case <expr pos:start="767:14" pos:end="767:17"><literal type="number" pos:start="767:14" pos:end="767:17">0x69</literal></expr>:</case>

            <comment type="block" pos:start="769:13" pos:end="769:24">/* SUBQ/V */</comment>

            <expr_stmt pos:start="771:13" pos:end="771:46"><expr pos:start="771:13" pos:end="771:45"><call pos:start="771:13" pos:end="771:45"><name pos:start="771:13" pos:end="771:21">gen_subqv</name><argument_list pos:start="771:22" pos:end="771:45">(<argument pos:start="771:23" pos:end="771:24"><expr pos:start="771:23" pos:end="771:24"><name pos:start="771:23" pos:end="771:24">ra</name></expr></argument>, <argument pos:start="771:27" pos:end="771:28"><expr pos:start="771:27" pos:end="771:28"><name pos:start="771:27" pos:end="771:28">rb</name></expr></argument>, <argument pos:start="771:31" pos:end="771:32"><expr pos:start="771:31" pos:end="771:32"><name pos:start="771:31" pos:end="771:32">rc</name></expr></argument>, <argument pos:start="771:35" pos:end="771:39"><expr pos:start="771:35" pos:end="771:39"><name pos:start="771:35" pos:end="771:39">islit</name></expr></argument>, <argument pos:start="771:42" pos:end="771:44"><expr pos:start="771:42" pos:end="771:44"><name pos:start="771:42" pos:end="771:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="773:13" pos:end="773:18">break;</break>

        <case pos:start="775:9" pos:end="775:18">case <expr pos:start="775:14" pos:end="775:17"><literal type="number" pos:start="775:14" pos:end="775:17">0x6D</literal></expr>:</case>

            <comment type="block" pos:start="777:13" pos:end="777:23">/* CMPLE */</comment>

            <expr_stmt pos:start="779:13" pos:end="779:57"><expr pos:start="779:13" pos:end="779:56"><call pos:start="779:13" pos:end="779:56"><name pos:start="779:13" pos:end="779:19">gen_cmp</name><argument_list pos:start="779:20" pos:end="779:56">(<argument pos:start="779:21" pos:end="779:31"><expr pos:start="779:21" pos:end="779:31"><name pos:start="779:21" pos:end="779:31">TCG_COND_LE</name></expr></argument>, <argument pos:start="779:34" pos:end="779:35"><expr pos:start="779:34" pos:end="779:35"><name pos:start="779:34" pos:end="779:35">ra</name></expr></argument>, <argument pos:start="779:38" pos:end="779:39"><expr pos:start="779:38" pos:end="779:39"><name pos:start="779:38" pos:end="779:39">rb</name></expr></argument>, <argument pos:start="779:42" pos:end="779:43"><expr pos:start="779:42" pos:end="779:43"><name pos:start="779:42" pos:end="779:43">rc</name></expr></argument>, <argument pos:start="779:46" pos:end="779:50"><expr pos:start="779:46" pos:end="779:50"><name pos:start="779:46" pos:end="779:50">islit</name></expr></argument>, <argument pos:start="779:53" pos:end="779:55"><expr pos:start="779:53" pos:end="779:55"><name pos:start="779:53" pos:end="779:55">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="781:13" pos:end="781:18">break;</break>

        <default pos:start="783:9" pos:end="783:16">default:</default>

            <goto pos:start="785:13" pos:end="785:29">goto <name pos:start="785:18" pos:end="785:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="789:9" pos:end="789:14">break;</break>

    <case pos:start="791:5" pos:end="791:14">case <expr pos:start="791:10" pos:end="791:13"><literal type="number" pos:start="791:10" pos:end="791:13">0x11</literal></expr>:</case>

        <switch pos:start="793:9" pos:end="1065:9">switch <condition pos:start="793:16" pos:end="793:20">(<expr pos:start="793:17" pos:end="793:19"><name pos:start="793:17" pos:end="793:19">fn7</name></expr>)</condition> <block pos:start="793:22" pos:end="1065:9">{<block_content pos:start="795:9" pos:end="1063:29">

        <case pos:start="795:9" pos:end="795:18">case <expr pos:start="795:14" pos:end="795:17"><literal type="number" pos:start="795:14" pos:end="795:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="797:13" pos:end="797:21">/* AND */</comment>

            <if_stmt pos:start="799:13" pos:end="813:13"><if pos:start="799:13" pos:end="813:13">if <condition pos:start="799:16" pos:end="799:33">(<expr pos:start="799:17" pos:end="799:32"><call pos:start="799:17" pos:end="799:32"><name pos:start="799:17" pos:end="799:22">likely</name><argument_list pos:start="799:23" pos:end="799:32">(<argument pos:start="799:24" pos:end="799:31"><expr pos:start="799:24" pos:end="799:31"><name pos:start="799:24" pos:end="799:25">rc</name> <operator pos:start="799:27" pos:end="799:28">!=</operator> <literal type="number" pos:start="799:30" pos:end="799:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="799:35" pos:end="813:13">{<block_content pos:start="801:17" pos:end="811:72">

                <if_stmt pos:start="801:17" pos:end="811:72"><if pos:start="801:17" pos:end="803:52">if <condition pos:start="801:20" pos:end="801:29">(<expr pos:start="801:21" pos:end="801:28"><name pos:start="801:21" pos:end="801:22">ra</name> <operator pos:start="801:24" pos:end="801:25">==</operator> <literal type="number" pos:start="801:27" pos:end="801:28">31</literal></expr>)</condition><block type="pseudo" pos:start="803:21" pos:end="803:52"><block_content pos:start="803:21" pos:end="803:52">

                    <expr_stmt pos:start="803:21" pos:end="803:52"><expr pos:start="803:21" pos:end="803:51"><call pos:start="803:21" pos:end="803:51"><name pos:start="803:21" pos:end="803:36">tcg_gen_movi_i64</name><argument_list pos:start="803:37" pos:end="803:51">(<argument pos:start="803:38" pos:end="803:47"><expr pos:start="803:38" pos:end="803:47"><name pos:start="803:38" pos:end="803:47"><name pos:start="803:38" pos:end="803:43">cpu_ir</name><index pos:start="803:44" pos:end="803:47">[<expr pos:start="803:45" pos:end="803:46"><name pos:start="803:45" pos:end="803:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="803:50" pos:end="803:50"><expr pos:start="803:50" pos:end="803:50"><literal type="number" pos:start="803:50" pos:end="803:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="805:17" pos:end="807:66">else if <condition pos:start="805:25" pos:end="805:31">(<expr pos:start="805:26" pos:end="805:30"><name pos:start="805:26" pos:end="805:30">islit</name></expr>)</condition><block type="pseudo" pos:start="807:21" pos:end="807:66"><block_content pos:start="807:21" pos:end="807:66">

                    <expr_stmt pos:start="807:21" pos:end="807:66"><expr pos:start="807:21" pos:end="807:65"><call pos:start="807:21" pos:end="807:65"><name pos:start="807:21" pos:end="807:36">tcg_gen_andi_i64</name><argument_list pos:start="807:37" pos:end="807:65">(<argument pos:start="807:38" pos:end="807:47"><expr pos:start="807:38" pos:end="807:47"><name pos:start="807:38" pos:end="807:47"><name pos:start="807:38" pos:end="807:43">cpu_ir</name><index pos:start="807:44" pos:end="807:47">[<expr pos:start="807:45" pos:end="807:46"><name pos:start="807:45" pos:end="807:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="807:50" pos:end="807:59"><expr pos:start="807:50" pos:end="807:59"><name pos:start="807:50" pos:end="807:59"><name pos:start="807:50" pos:end="807:55">cpu_ir</name><index pos:start="807:56" pos:end="807:59">[<expr pos:start="807:57" pos:end="807:58"><name pos:start="807:57" pos:end="807:58">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="807:62" pos:end="807:64"><expr pos:start="807:62" pos:end="807:64"><name pos:start="807:62" pos:end="807:64">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="809:17" pos:end="811:72">else<block type="pseudo" pos:start="811:21" pos:end="811:72"><block_content pos:start="811:21" pos:end="811:72">

                    <expr_stmt pos:start="811:21" pos:end="811:72"><expr pos:start="811:21" pos:end="811:71"><call pos:start="811:21" pos:end="811:71"><name pos:start="811:21" pos:end="811:35">tcg_gen_and_i64</name><argument_list pos:start="811:36" pos:end="811:71">(<argument pos:start="811:37" pos:end="811:46"><expr pos:start="811:37" pos:end="811:46"><name pos:start="811:37" pos:end="811:46"><name pos:start="811:37" pos:end="811:42">cpu_ir</name><index pos:start="811:43" pos:end="811:46">[<expr pos:start="811:44" pos:end="811:45"><name pos:start="811:44" pos:end="811:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="811:49" pos:end="811:58"><expr pos:start="811:49" pos:end="811:58"><name pos:start="811:49" pos:end="811:58"><name pos:start="811:49" pos:end="811:54">cpu_ir</name><index pos:start="811:55" pos:end="811:58">[<expr pos:start="811:56" pos:end="811:57"><name pos:start="811:56" pos:end="811:57">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="811:61" pos:end="811:70"><expr pos:start="811:61" pos:end="811:70"><name pos:start="811:61" pos:end="811:70"><name pos:start="811:61" pos:end="811:66">cpu_ir</name><index pos:start="811:67" pos:end="811:70">[<expr pos:start="811:68" pos:end="811:69"><name pos:start="811:68" pos:end="811:69">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="815:13" pos:end="815:18">break;</break>

        <case pos:start="817:9" pos:end="817:18">case <expr pos:start="817:14" pos:end="817:17"><literal type="number" pos:start="817:14" pos:end="817:17">0x08</literal></expr>:</case>

            <comment type="block" pos:start="819:13" pos:end="819:21">/* BIC */</comment>

            <if_stmt pos:start="821:13" pos:end="837:13"><if pos:start="821:13" pos:end="837:13">if <condition pos:start="821:16" pos:end="821:33">(<expr pos:start="821:17" pos:end="821:32"><call pos:start="821:17" pos:end="821:32"><name pos:start="821:17" pos:end="821:22">likely</name><argument_list pos:start="821:23" pos:end="821:32">(<argument pos:start="821:24" pos:end="821:31"><expr pos:start="821:24" pos:end="821:31"><name pos:start="821:24" pos:end="821:25">rc</name> <operator pos:start="821:27" pos:end="821:28">!=</operator> <literal type="number" pos:start="821:30" pos:end="821:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="821:35" pos:end="837:13">{<block_content pos:start="823:17" pos:end="835:52">

                <if_stmt pos:start="823:17" pos:end="835:52"><if pos:start="823:17" pos:end="833:17">if <condition pos:start="823:20" pos:end="823:29">(<expr pos:start="823:21" pos:end="823:28"><name pos:start="823:21" pos:end="823:22">ra</name> <operator pos:start="823:24" pos:end="823:25">!=</operator> <literal type="number" pos:start="823:27" pos:end="823:28">31</literal></expr>)</condition> <block pos:start="823:31" pos:end="833:17">{<block_content pos:start="825:21" pos:end="831:77">

                    <if_stmt pos:start="825:21" pos:end="831:77"><if pos:start="825:21" pos:end="827:71">if <condition pos:start="825:24" pos:end="825:30">(<expr pos:start="825:25" pos:end="825:29"><name pos:start="825:25" pos:end="825:29">islit</name></expr>)</condition><block type="pseudo" pos:start="827:25" pos:end="827:71"><block_content pos:start="827:25" pos:end="827:71">

                        <expr_stmt pos:start="827:25" pos:end="827:71"><expr pos:start="827:25" pos:end="827:70"><call pos:start="827:25" pos:end="827:70"><name pos:start="827:25" pos:end="827:40">tcg_gen_andi_i64</name><argument_list pos:start="827:41" pos:end="827:70">(<argument pos:start="827:42" pos:end="827:51"><expr pos:start="827:42" pos:end="827:51"><name pos:start="827:42" pos:end="827:51"><name pos:start="827:42" pos:end="827:47">cpu_ir</name><index pos:start="827:48" pos:end="827:51">[<expr pos:start="827:49" pos:end="827:50"><name pos:start="827:49" pos:end="827:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="827:54" pos:end="827:63"><expr pos:start="827:54" pos:end="827:63"><name pos:start="827:54" pos:end="827:63"><name pos:start="827:54" pos:end="827:59">cpu_ir</name><index pos:start="827:60" pos:end="827:63">[<expr pos:start="827:61" pos:end="827:62"><name pos:start="827:61" pos:end="827:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="827:66" pos:end="827:69"><expr pos:start="827:66" pos:end="827:69"><operator pos:start="827:66" pos:end="827:66">~</operator><name pos:start="827:67" pos:end="827:69">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="829:21" pos:end="831:77">else<block type="pseudo" pos:start="831:25" pos:end="831:77"><block_content pos:start="831:25" pos:end="831:77">

                        <expr_stmt pos:start="831:25" pos:end="831:77"><expr pos:start="831:25" pos:end="831:76"><call pos:start="831:25" pos:end="831:76"><name pos:start="831:25" pos:end="831:40">tcg_gen_andc_i64</name><argument_list pos:start="831:41" pos:end="831:76">(<argument pos:start="831:42" pos:end="831:51"><expr pos:start="831:42" pos:end="831:51"><name pos:start="831:42" pos:end="831:51"><name pos:start="831:42" pos:end="831:47">cpu_ir</name><index pos:start="831:48" pos:end="831:51">[<expr pos:start="831:49" pos:end="831:50"><name pos:start="831:49" pos:end="831:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="831:54" pos:end="831:63"><expr pos:start="831:54" pos:end="831:63"><name pos:start="831:54" pos:end="831:63"><name pos:start="831:54" pos:end="831:59">cpu_ir</name><index pos:start="831:60" pos:end="831:63">[<expr pos:start="831:61" pos:end="831:62"><name pos:start="831:61" pos:end="831:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="831:66" pos:end="831:75"><expr pos:start="831:66" pos:end="831:75"><name pos:start="831:66" pos:end="831:75"><name pos:start="831:66" pos:end="831:71">cpu_ir</name><index pos:start="831:72" pos:end="831:75">[<expr pos:start="831:73" pos:end="831:74"><name pos:start="831:73" pos:end="831:74">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="833:19" pos:end="835:52">else<block type="pseudo" pos:start="835:21" pos:end="835:52"><block_content pos:start="835:21" pos:end="835:52">

                    <expr_stmt pos:start="835:21" pos:end="835:52"><expr pos:start="835:21" pos:end="835:51"><call pos:start="835:21" pos:end="835:51"><name pos:start="835:21" pos:end="835:36">tcg_gen_movi_i64</name><argument_list pos:start="835:37" pos:end="835:51">(<argument pos:start="835:38" pos:end="835:47"><expr pos:start="835:38" pos:end="835:47"><name pos:start="835:38" pos:end="835:47"><name pos:start="835:38" pos:end="835:43">cpu_ir</name><index pos:start="835:44" pos:end="835:47">[<expr pos:start="835:45" pos:end="835:46"><name pos:start="835:45" pos:end="835:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="835:50" pos:end="835:50"><expr pos:start="835:50" pos:end="835:50"><literal type="number" pos:start="835:50" pos:end="835:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="839:13" pos:end="839:18">break;</break>

        <case pos:start="841:9" pos:end="841:18">case <expr pos:start="841:14" pos:end="841:17"><literal type="number" pos:start="841:14" pos:end="841:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="843:13" pos:end="843:25">/* CMOVLBS */</comment>

            <expr_stmt pos:start="845:13" pos:end="845:61"><expr pos:start="845:13" pos:end="845:60"><call pos:start="845:13" pos:end="845:60"><name pos:start="845:13" pos:end="845:20">gen_cmov</name><argument_list pos:start="845:21" pos:end="845:60">(<argument pos:start="845:22" pos:end="845:32"><expr pos:start="845:22" pos:end="845:32"><name pos:start="845:22" pos:end="845:32">TCG_COND_EQ</name></expr></argument>, <argument pos:start="845:35" pos:end="845:36"><expr pos:start="845:35" pos:end="845:36"><name pos:start="845:35" pos:end="845:36">ra</name></expr></argument>, <argument pos:start="845:39" pos:end="845:40"><expr pos:start="845:39" pos:end="845:40"><name pos:start="845:39" pos:end="845:40">rb</name></expr></argument>, <argument pos:start="845:43" pos:end="845:44"><expr pos:start="845:43" pos:end="845:44"><name pos:start="845:43" pos:end="845:44">rc</name></expr></argument>, <argument pos:start="845:47" pos:end="845:51"><expr pos:start="845:47" pos:end="845:51"><name pos:start="845:47" pos:end="845:51">islit</name></expr></argument>, <argument pos:start="845:54" pos:end="845:56"><expr pos:start="845:54" pos:end="845:56"><name pos:start="845:54" pos:end="845:56">lit</name></expr></argument>, <argument pos:start="845:59" pos:end="845:59"><expr pos:start="845:59" pos:end="845:59"><literal type="number" pos:start="845:59" pos:end="845:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="847:13" pos:end="847:18">break;</break>

        <case pos:start="849:9" pos:end="849:18">case <expr pos:start="849:14" pos:end="849:17"><literal type="number" pos:start="849:14" pos:end="849:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="851:13" pos:end="851:25">/* CMOVLBC */</comment>

            <expr_stmt pos:start="853:13" pos:end="853:61"><expr pos:start="853:13" pos:end="853:60"><call pos:start="853:13" pos:end="853:60"><name pos:start="853:13" pos:end="853:20">gen_cmov</name><argument_list pos:start="853:21" pos:end="853:60">(<argument pos:start="853:22" pos:end="853:32"><expr pos:start="853:22" pos:end="853:32"><name pos:start="853:22" pos:end="853:32">TCG_COND_NE</name></expr></argument>, <argument pos:start="853:35" pos:end="853:36"><expr pos:start="853:35" pos:end="853:36"><name pos:start="853:35" pos:end="853:36">ra</name></expr></argument>, <argument pos:start="853:39" pos:end="853:40"><expr pos:start="853:39" pos:end="853:40"><name pos:start="853:39" pos:end="853:40">rb</name></expr></argument>, <argument pos:start="853:43" pos:end="853:44"><expr pos:start="853:43" pos:end="853:44"><name pos:start="853:43" pos:end="853:44">rc</name></expr></argument>, <argument pos:start="853:47" pos:end="853:51"><expr pos:start="853:47" pos:end="853:51"><name pos:start="853:47" pos:end="853:51">islit</name></expr></argument>, <argument pos:start="853:54" pos:end="853:56"><expr pos:start="853:54" pos:end="853:56"><name pos:start="853:54" pos:end="853:56">lit</name></expr></argument>, <argument pos:start="853:59" pos:end="853:59"><expr pos:start="853:59" pos:end="853:59"><literal type="number" pos:start="853:59" pos:end="853:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="855:13" pos:end="855:18">break;</break>

        <case pos:start="857:9" pos:end="857:18">case <expr pos:start="857:14" pos:end="857:17"><literal type="number" pos:start="857:14" pos:end="857:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="859:13" pos:end="859:21">/* BIS */</comment>

            <if_stmt pos:start="861:13" pos:end="885:13"><if pos:start="861:13" pos:end="885:13">if <condition pos:start="861:16" pos:end="861:33">(<expr pos:start="861:17" pos:end="861:32"><call pos:start="861:17" pos:end="861:32"><name pos:start="861:17" pos:end="861:22">likely</name><argument_list pos:start="861:23" pos:end="861:32">(<argument pos:start="861:24" pos:end="861:31"><expr pos:start="861:24" pos:end="861:31"><name pos:start="861:24" pos:end="861:25">rc</name> <operator pos:start="861:27" pos:end="861:28">!=</operator> <literal type="number" pos:start="861:30" pos:end="861:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="861:35" pos:end="885:13">{<block_content pos:start="863:17" pos:end="883:17">

                <if_stmt pos:start="863:17" pos:end="883:17"><if pos:start="863:17" pos:end="873:17">if <condition pos:start="863:20" pos:end="863:29">(<expr pos:start="863:21" pos:end="863:28"><name pos:start="863:21" pos:end="863:22">ra</name> <operator pos:start="863:24" pos:end="863:25">!=</operator> <literal type="number" pos:start="863:27" pos:end="863:28">31</literal></expr>)</condition> <block pos:start="863:31" pos:end="873:17">{<block_content pos:start="865:21" pos:end="871:75">

                    <if_stmt pos:start="865:21" pos:end="871:75"><if pos:start="865:21" pos:end="867:69">if <condition pos:start="865:24" pos:end="865:30">(<expr pos:start="865:25" pos:end="865:29"><name pos:start="865:25" pos:end="865:29">islit</name></expr>)</condition><block type="pseudo" pos:start="867:25" pos:end="867:69"><block_content pos:start="867:25" pos:end="867:69">

                        <expr_stmt pos:start="867:25" pos:end="867:69"><expr pos:start="867:25" pos:end="867:68"><call pos:start="867:25" pos:end="867:68"><name pos:start="867:25" pos:end="867:39">tcg_gen_ori_i64</name><argument_list pos:start="867:40" pos:end="867:68">(<argument pos:start="867:41" pos:end="867:50"><expr pos:start="867:41" pos:end="867:50"><name pos:start="867:41" pos:end="867:50"><name pos:start="867:41" pos:end="867:46">cpu_ir</name><index pos:start="867:47" pos:end="867:50">[<expr pos:start="867:48" pos:end="867:49"><name pos:start="867:48" pos:end="867:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="867:53" pos:end="867:62"><expr pos:start="867:53" pos:end="867:62"><name pos:start="867:53" pos:end="867:62"><name pos:start="867:53" pos:end="867:58">cpu_ir</name><index pos:start="867:59" pos:end="867:62">[<expr pos:start="867:60" pos:end="867:61"><name pos:start="867:60" pos:end="867:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="867:65" pos:end="867:67"><expr pos:start="867:65" pos:end="867:67"><name pos:start="867:65" pos:end="867:67">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="869:21" pos:end="871:75">else<block type="pseudo" pos:start="871:25" pos:end="871:75"><block_content pos:start="871:25" pos:end="871:75">

                        <expr_stmt pos:start="871:25" pos:end="871:75"><expr pos:start="871:25" pos:end="871:74"><call pos:start="871:25" pos:end="871:74"><name pos:start="871:25" pos:end="871:38">tcg_gen_or_i64</name><argument_list pos:start="871:39" pos:end="871:74">(<argument pos:start="871:40" pos:end="871:49"><expr pos:start="871:40" pos:end="871:49"><name pos:start="871:40" pos:end="871:49"><name pos:start="871:40" pos:end="871:45">cpu_ir</name><index pos:start="871:46" pos:end="871:49">[<expr pos:start="871:47" pos:end="871:48"><name pos:start="871:47" pos:end="871:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="871:52" pos:end="871:61"><expr pos:start="871:52" pos:end="871:61"><name pos:start="871:52" pos:end="871:61"><name pos:start="871:52" pos:end="871:57">cpu_ir</name><index pos:start="871:58" pos:end="871:61">[<expr pos:start="871:59" pos:end="871:60"><name pos:start="871:59" pos:end="871:60">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="871:64" pos:end="871:73"><expr pos:start="871:64" pos:end="871:73"><name pos:start="871:64" pos:end="871:73"><name pos:start="871:64" pos:end="871:69">cpu_ir</name><index pos:start="871:70" pos:end="871:73">[<expr pos:start="871:71" pos:end="871:72"><name pos:start="871:71" pos:end="871:72">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="873:19" pos:end="883:17">else <block pos:start="873:24" pos:end="883:17">{<block_content pos:start="875:21" pos:end="881:64">

                    <if_stmt pos:start="875:21" pos:end="881:64"><if pos:start="875:21" pos:end="877:58">if <condition pos:start="875:24" pos:end="875:30">(<expr pos:start="875:25" pos:end="875:29"><name pos:start="875:25" pos:end="875:29">islit</name></expr>)</condition><block type="pseudo" pos:start="877:25" pos:end="877:58"><block_content pos:start="877:25" pos:end="877:58">

                        <expr_stmt pos:start="877:25" pos:end="877:58"><expr pos:start="877:25" pos:end="877:57"><call pos:start="877:25" pos:end="877:57"><name pos:start="877:25" pos:end="877:40">tcg_gen_movi_i64</name><argument_list pos:start="877:41" pos:end="877:57">(<argument pos:start="877:42" pos:end="877:51"><expr pos:start="877:42" pos:end="877:51"><name pos:start="877:42" pos:end="877:51"><name pos:start="877:42" pos:end="877:47">cpu_ir</name><index pos:start="877:48" pos:end="877:51">[<expr pos:start="877:49" pos:end="877:50"><name pos:start="877:49" pos:end="877:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="877:54" pos:end="877:56"><expr pos:start="877:54" pos:end="877:56"><name pos:start="877:54" pos:end="877:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="879:21" pos:end="881:64">else<block type="pseudo" pos:start="881:25" pos:end="881:64"><block_content pos:start="881:25" pos:end="881:64">

                        <expr_stmt pos:start="881:25" pos:end="881:64"><expr pos:start="881:25" pos:end="881:63"><call pos:start="881:25" pos:end="881:63"><name pos:start="881:25" pos:end="881:39">tcg_gen_mov_i64</name><argument_list pos:start="881:40" pos:end="881:63">(<argument pos:start="881:41" pos:end="881:50"><expr pos:start="881:41" pos:end="881:50"><name pos:start="881:41" pos:end="881:50"><name pos:start="881:41" pos:end="881:46">cpu_ir</name><index pos:start="881:47" pos:end="881:50">[<expr pos:start="881:48" pos:end="881:49"><name pos:start="881:48" pos:end="881:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="881:53" pos:end="881:62"><expr pos:start="881:53" pos:end="881:62"><name pos:start="881:53" pos:end="881:62"><name pos:start="881:53" pos:end="881:58">cpu_ir</name><index pos:start="881:59" pos:end="881:62">[<expr pos:start="881:60" pos:end="881:61"><name pos:start="881:60" pos:end="881:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="887:13" pos:end="887:18">break;</break>

        <case pos:start="889:9" pos:end="889:18">case <expr pos:start="889:14" pos:end="889:17"><literal type="number" pos:start="889:14" pos:end="889:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="891:13" pos:end="891:24">/* CMOVEQ */</comment>

            <expr_stmt pos:start="893:13" pos:end="893:61"><expr pos:start="893:13" pos:end="893:60"><call pos:start="893:13" pos:end="893:60"><name pos:start="893:13" pos:end="893:20">gen_cmov</name><argument_list pos:start="893:21" pos:end="893:60">(<argument pos:start="893:22" pos:end="893:32"><expr pos:start="893:22" pos:end="893:32"><name pos:start="893:22" pos:end="893:32">TCG_COND_NE</name></expr></argument>, <argument pos:start="893:35" pos:end="893:36"><expr pos:start="893:35" pos:end="893:36"><name pos:start="893:35" pos:end="893:36">ra</name></expr></argument>, <argument pos:start="893:39" pos:end="893:40"><expr pos:start="893:39" pos:end="893:40"><name pos:start="893:39" pos:end="893:40">rb</name></expr></argument>, <argument pos:start="893:43" pos:end="893:44"><expr pos:start="893:43" pos:end="893:44"><name pos:start="893:43" pos:end="893:44">rc</name></expr></argument>, <argument pos:start="893:47" pos:end="893:51"><expr pos:start="893:47" pos:end="893:51"><name pos:start="893:47" pos:end="893:51">islit</name></expr></argument>, <argument pos:start="893:54" pos:end="893:56"><expr pos:start="893:54" pos:end="893:56"><name pos:start="893:54" pos:end="893:56">lit</name></expr></argument>, <argument pos:start="893:59" pos:end="893:59"><expr pos:start="893:59" pos:end="893:59"><literal type="number" pos:start="893:59" pos:end="893:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="895:13" pos:end="895:18">break;</break>

        <case pos:start="897:9" pos:end="897:18">case <expr pos:start="897:14" pos:end="897:17"><literal type="number" pos:start="897:14" pos:end="897:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="899:13" pos:end="899:24">/* CMOVNE */</comment>

            <expr_stmt pos:start="901:13" pos:end="901:61"><expr pos:start="901:13" pos:end="901:60"><call pos:start="901:13" pos:end="901:60"><name pos:start="901:13" pos:end="901:20">gen_cmov</name><argument_list pos:start="901:21" pos:end="901:60">(<argument pos:start="901:22" pos:end="901:32"><expr pos:start="901:22" pos:end="901:32"><name pos:start="901:22" pos:end="901:32">TCG_COND_EQ</name></expr></argument>, <argument pos:start="901:35" pos:end="901:36"><expr pos:start="901:35" pos:end="901:36"><name pos:start="901:35" pos:end="901:36">ra</name></expr></argument>, <argument pos:start="901:39" pos:end="901:40"><expr pos:start="901:39" pos:end="901:40"><name pos:start="901:39" pos:end="901:40">rb</name></expr></argument>, <argument pos:start="901:43" pos:end="901:44"><expr pos:start="901:43" pos:end="901:44"><name pos:start="901:43" pos:end="901:44">rc</name></expr></argument>, <argument pos:start="901:47" pos:end="901:51"><expr pos:start="901:47" pos:end="901:51"><name pos:start="901:47" pos:end="901:51">islit</name></expr></argument>, <argument pos:start="901:54" pos:end="901:56"><expr pos:start="901:54" pos:end="901:56"><name pos:start="901:54" pos:end="901:56">lit</name></expr></argument>, <argument pos:start="901:59" pos:end="901:59"><expr pos:start="901:59" pos:end="901:59"><literal type="number" pos:start="901:59" pos:end="901:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="903:13" pos:end="903:18">break;</break>

        <case pos:start="905:9" pos:end="905:18">case <expr pos:start="905:14" pos:end="905:17"><literal type="number" pos:start="905:14" pos:end="905:17">0x28</literal></expr>:</case>

            <comment type="block" pos:start="907:13" pos:end="907:23">/* ORNOT */</comment>

            <if_stmt pos:start="909:13" pos:end="933:13"><if pos:start="909:13" pos:end="933:13">if <condition pos:start="909:16" pos:end="909:33">(<expr pos:start="909:17" pos:end="909:32"><call pos:start="909:17" pos:end="909:32"><name pos:start="909:17" pos:end="909:22">likely</name><argument_list pos:start="909:23" pos:end="909:32">(<argument pos:start="909:24" pos:end="909:31"><expr pos:start="909:24" pos:end="909:31"><name pos:start="909:24" pos:end="909:25">rc</name> <operator pos:start="909:27" pos:end="909:28">!=</operator> <literal type="number" pos:start="909:30" pos:end="909:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="909:35" pos:end="933:13">{<block_content pos:start="911:17" pos:end="931:17">

                <if_stmt pos:start="911:17" pos:end="931:17"><if pos:start="911:17" pos:end="921:17">if <condition pos:start="911:20" pos:end="911:29">(<expr pos:start="911:21" pos:end="911:28"><name pos:start="911:21" pos:end="911:22">ra</name> <operator pos:start="911:24" pos:end="911:25">!=</operator> <literal type="number" pos:start="911:27" pos:end="911:28">31</literal></expr>)</condition> <block pos:start="911:31" pos:end="921:17">{<block_content pos:start="913:21" pos:end="919:76">

                    <if_stmt pos:start="913:21" pos:end="919:76"><if pos:start="913:21" pos:end="915:70">if <condition pos:start="913:24" pos:end="913:30">(<expr pos:start="913:25" pos:end="913:29"><name pos:start="913:25" pos:end="913:29">islit</name></expr>)</condition><block type="pseudo" pos:start="915:25" pos:end="915:70"><block_content pos:start="915:25" pos:end="915:70">

                        <expr_stmt pos:start="915:25" pos:end="915:70"><expr pos:start="915:25" pos:end="915:69"><call pos:start="915:25" pos:end="915:69"><name pos:start="915:25" pos:end="915:39">tcg_gen_ori_i64</name><argument_list pos:start="915:40" pos:end="915:69">(<argument pos:start="915:41" pos:end="915:50"><expr pos:start="915:41" pos:end="915:50"><name pos:start="915:41" pos:end="915:50"><name pos:start="915:41" pos:end="915:46">cpu_ir</name><index pos:start="915:47" pos:end="915:50">[<expr pos:start="915:48" pos:end="915:49"><name pos:start="915:48" pos:end="915:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="915:53" pos:end="915:62"><expr pos:start="915:53" pos:end="915:62"><name pos:start="915:53" pos:end="915:62"><name pos:start="915:53" pos:end="915:58">cpu_ir</name><index pos:start="915:59" pos:end="915:62">[<expr pos:start="915:60" pos:end="915:61"><name pos:start="915:60" pos:end="915:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="915:65" pos:end="915:68"><expr pos:start="915:65" pos:end="915:68"><operator pos:start="915:65" pos:end="915:65">~</operator><name pos:start="915:66" pos:end="915:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="917:21" pos:end="919:76">else<block type="pseudo" pos:start="919:25" pos:end="919:76"><block_content pos:start="919:25" pos:end="919:76">

                        <expr_stmt pos:start="919:25" pos:end="919:76"><expr pos:start="919:25" pos:end="919:75"><call pos:start="919:25" pos:end="919:75"><name pos:start="919:25" pos:end="919:39">tcg_gen_orc_i64</name><argument_list pos:start="919:40" pos:end="919:75">(<argument pos:start="919:41" pos:end="919:50"><expr pos:start="919:41" pos:end="919:50"><name pos:start="919:41" pos:end="919:50"><name pos:start="919:41" pos:end="919:46">cpu_ir</name><index pos:start="919:47" pos:end="919:50">[<expr pos:start="919:48" pos:end="919:49"><name pos:start="919:48" pos:end="919:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="919:53" pos:end="919:62"><expr pos:start="919:53" pos:end="919:62"><name pos:start="919:53" pos:end="919:62"><name pos:start="919:53" pos:end="919:58">cpu_ir</name><index pos:start="919:59" pos:end="919:62">[<expr pos:start="919:60" pos:end="919:61"><name pos:start="919:60" pos:end="919:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="919:65" pos:end="919:74"><expr pos:start="919:65" pos:end="919:74"><name pos:start="919:65" pos:end="919:74"><name pos:start="919:65" pos:end="919:70">cpu_ir</name><index pos:start="919:71" pos:end="919:74">[<expr pos:start="919:72" pos:end="919:73"><name pos:start="919:72" pos:end="919:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="921:19" pos:end="931:17">else <block pos:start="921:24" pos:end="931:17">{<block_content pos:start="923:21" pos:end="929:64">

                    <if_stmt pos:start="923:21" pos:end="929:64"><if pos:start="923:21" pos:end="925:59">if <condition pos:start="923:24" pos:end="923:30">(<expr pos:start="923:25" pos:end="923:29"><name pos:start="923:25" pos:end="923:29">islit</name></expr>)</condition><block type="pseudo" pos:start="925:25" pos:end="925:59"><block_content pos:start="925:25" pos:end="925:59">

                        <expr_stmt pos:start="925:25" pos:end="925:59"><expr pos:start="925:25" pos:end="925:58"><call pos:start="925:25" pos:end="925:58"><name pos:start="925:25" pos:end="925:40">tcg_gen_movi_i64</name><argument_list pos:start="925:41" pos:end="925:58">(<argument pos:start="925:42" pos:end="925:51"><expr pos:start="925:42" pos:end="925:51"><name pos:start="925:42" pos:end="925:51"><name pos:start="925:42" pos:end="925:47">cpu_ir</name><index pos:start="925:48" pos:end="925:51">[<expr pos:start="925:49" pos:end="925:50"><name pos:start="925:49" pos:end="925:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="925:54" pos:end="925:57"><expr pos:start="925:54" pos:end="925:57"><operator pos:start="925:54" pos:end="925:54">~</operator><name pos:start="925:55" pos:end="925:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="927:21" pos:end="929:64">else<block type="pseudo" pos:start="929:25" pos:end="929:64"><block_content pos:start="929:25" pos:end="929:64">

                        <expr_stmt pos:start="929:25" pos:end="929:64"><expr pos:start="929:25" pos:end="929:63"><call pos:start="929:25" pos:end="929:63"><name pos:start="929:25" pos:end="929:39">tcg_gen_not_i64</name><argument_list pos:start="929:40" pos:end="929:63">(<argument pos:start="929:41" pos:end="929:50"><expr pos:start="929:41" pos:end="929:50"><name pos:start="929:41" pos:end="929:50"><name pos:start="929:41" pos:end="929:46">cpu_ir</name><index pos:start="929:47" pos:end="929:50">[<expr pos:start="929:48" pos:end="929:49"><name pos:start="929:48" pos:end="929:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="929:53" pos:end="929:62"><expr pos:start="929:53" pos:end="929:62"><name pos:start="929:53" pos:end="929:62"><name pos:start="929:53" pos:end="929:58">cpu_ir</name><index pos:start="929:59" pos:end="929:62">[<expr pos:start="929:60" pos:end="929:61"><name pos:start="929:60" pos:end="929:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="935:13" pos:end="935:18">break;</break>

        <case pos:start="937:9" pos:end="937:18">case <expr pos:start="937:14" pos:end="937:17"><literal type="number" pos:start="937:14" pos:end="937:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="939:13" pos:end="939:21">/* XOR */</comment>

            <if_stmt pos:start="941:13" pos:end="965:13"><if pos:start="941:13" pos:end="965:13">if <condition pos:start="941:16" pos:end="941:33">(<expr pos:start="941:17" pos:end="941:32"><call pos:start="941:17" pos:end="941:32"><name pos:start="941:17" pos:end="941:22">likely</name><argument_list pos:start="941:23" pos:end="941:32">(<argument pos:start="941:24" pos:end="941:31"><expr pos:start="941:24" pos:end="941:31"><name pos:start="941:24" pos:end="941:25">rc</name> <operator pos:start="941:27" pos:end="941:28">!=</operator> <literal type="number" pos:start="941:30" pos:end="941:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="941:35" pos:end="965:13">{<block_content pos:start="943:17" pos:end="963:17">

                <if_stmt pos:start="943:17" pos:end="963:17"><if pos:start="943:17" pos:end="953:17">if <condition pos:start="943:20" pos:end="943:29">(<expr pos:start="943:21" pos:end="943:28"><name pos:start="943:21" pos:end="943:22">ra</name> <operator pos:start="943:24" pos:end="943:25">!=</operator> <literal type="number" pos:start="943:27" pos:end="943:28">31</literal></expr>)</condition> <block pos:start="943:31" pos:end="953:17">{<block_content pos:start="945:21" pos:end="951:76">

                    <if_stmt pos:start="945:21" pos:end="951:76"><if pos:start="945:21" pos:end="947:70">if <condition pos:start="945:24" pos:end="945:30">(<expr pos:start="945:25" pos:end="945:29"><name pos:start="945:25" pos:end="945:29">islit</name></expr>)</condition><block type="pseudo" pos:start="947:25" pos:end="947:70"><block_content pos:start="947:25" pos:end="947:70">

                        <expr_stmt pos:start="947:25" pos:end="947:70"><expr pos:start="947:25" pos:end="947:69"><call pos:start="947:25" pos:end="947:69"><name pos:start="947:25" pos:end="947:40">tcg_gen_xori_i64</name><argument_list pos:start="947:41" pos:end="947:69">(<argument pos:start="947:42" pos:end="947:51"><expr pos:start="947:42" pos:end="947:51"><name pos:start="947:42" pos:end="947:51"><name pos:start="947:42" pos:end="947:47">cpu_ir</name><index pos:start="947:48" pos:end="947:51">[<expr pos:start="947:49" pos:end="947:50"><name pos:start="947:49" pos:end="947:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="947:54" pos:end="947:63"><expr pos:start="947:54" pos:end="947:63"><name pos:start="947:54" pos:end="947:63"><name pos:start="947:54" pos:end="947:59">cpu_ir</name><index pos:start="947:60" pos:end="947:63">[<expr pos:start="947:61" pos:end="947:62"><name pos:start="947:61" pos:end="947:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="947:66" pos:end="947:68"><expr pos:start="947:66" pos:end="947:68"><name pos:start="947:66" pos:end="947:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="949:21" pos:end="951:76">else<block type="pseudo" pos:start="951:25" pos:end="951:76"><block_content pos:start="951:25" pos:end="951:76">

                        <expr_stmt pos:start="951:25" pos:end="951:76"><expr pos:start="951:25" pos:end="951:75"><call pos:start="951:25" pos:end="951:75"><name pos:start="951:25" pos:end="951:39">tcg_gen_xor_i64</name><argument_list pos:start="951:40" pos:end="951:75">(<argument pos:start="951:41" pos:end="951:50"><expr pos:start="951:41" pos:end="951:50"><name pos:start="951:41" pos:end="951:50"><name pos:start="951:41" pos:end="951:46">cpu_ir</name><index pos:start="951:47" pos:end="951:50">[<expr pos:start="951:48" pos:end="951:49"><name pos:start="951:48" pos:end="951:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="951:53" pos:end="951:62"><expr pos:start="951:53" pos:end="951:62"><name pos:start="951:53" pos:end="951:62"><name pos:start="951:53" pos:end="951:58">cpu_ir</name><index pos:start="951:59" pos:end="951:62">[<expr pos:start="951:60" pos:end="951:61"><name pos:start="951:60" pos:end="951:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="951:65" pos:end="951:74"><expr pos:start="951:65" pos:end="951:74"><name pos:start="951:65" pos:end="951:74"><name pos:start="951:65" pos:end="951:70">cpu_ir</name><index pos:start="951:71" pos:end="951:74">[<expr pos:start="951:72" pos:end="951:73"><name pos:start="951:72" pos:end="951:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="953:19" pos:end="963:17">else <block pos:start="953:24" pos:end="963:17">{<block_content pos:start="955:21" pos:end="961:64">

                    <if_stmt pos:start="955:21" pos:end="961:64"><if pos:start="955:21" pos:end="957:58">if <condition pos:start="955:24" pos:end="955:30">(<expr pos:start="955:25" pos:end="955:29"><name pos:start="955:25" pos:end="955:29">islit</name></expr>)</condition><block type="pseudo" pos:start="957:25" pos:end="957:58"><block_content pos:start="957:25" pos:end="957:58">

                        <expr_stmt pos:start="957:25" pos:end="957:58"><expr pos:start="957:25" pos:end="957:57"><call pos:start="957:25" pos:end="957:57"><name pos:start="957:25" pos:end="957:40">tcg_gen_movi_i64</name><argument_list pos:start="957:41" pos:end="957:57">(<argument pos:start="957:42" pos:end="957:51"><expr pos:start="957:42" pos:end="957:51"><name pos:start="957:42" pos:end="957:51"><name pos:start="957:42" pos:end="957:47">cpu_ir</name><index pos:start="957:48" pos:end="957:51">[<expr pos:start="957:49" pos:end="957:50"><name pos:start="957:49" pos:end="957:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="957:54" pos:end="957:56"><expr pos:start="957:54" pos:end="957:56"><name pos:start="957:54" pos:end="957:56">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="959:21" pos:end="961:64">else<block type="pseudo" pos:start="961:25" pos:end="961:64"><block_content pos:start="961:25" pos:end="961:64">

                        <expr_stmt pos:start="961:25" pos:end="961:64"><expr pos:start="961:25" pos:end="961:63"><call pos:start="961:25" pos:end="961:63"><name pos:start="961:25" pos:end="961:39">tcg_gen_mov_i64</name><argument_list pos:start="961:40" pos:end="961:63">(<argument pos:start="961:41" pos:end="961:50"><expr pos:start="961:41" pos:end="961:50"><name pos:start="961:41" pos:end="961:50"><name pos:start="961:41" pos:end="961:46">cpu_ir</name><index pos:start="961:47" pos:end="961:50">[<expr pos:start="961:48" pos:end="961:49"><name pos:start="961:48" pos:end="961:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="961:53" pos:end="961:62"><expr pos:start="961:53" pos:end="961:62"><name pos:start="961:53" pos:end="961:62"><name pos:start="961:53" pos:end="961:58">cpu_ir</name><index pos:start="961:59" pos:end="961:62">[<expr pos:start="961:60" pos:end="961:61"><name pos:start="961:60" pos:end="961:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="967:13" pos:end="967:18">break;</break>

        <case pos:start="969:9" pos:end="969:18">case <expr pos:start="969:14" pos:end="969:17"><literal type="number" pos:start="969:14" pos:end="969:17">0x44</literal></expr>:</case>

            <comment type="block" pos:start="971:13" pos:end="971:24">/* CMOVLT */</comment>

            <expr_stmt pos:start="973:13" pos:end="973:61"><expr pos:start="973:13" pos:end="973:60"><call pos:start="973:13" pos:end="973:60"><name pos:start="973:13" pos:end="973:20">gen_cmov</name><argument_list pos:start="973:21" pos:end="973:60">(<argument pos:start="973:22" pos:end="973:32"><expr pos:start="973:22" pos:end="973:32"><name pos:start="973:22" pos:end="973:32">TCG_COND_GE</name></expr></argument>, <argument pos:start="973:35" pos:end="973:36"><expr pos:start="973:35" pos:end="973:36"><name pos:start="973:35" pos:end="973:36">ra</name></expr></argument>, <argument pos:start="973:39" pos:end="973:40"><expr pos:start="973:39" pos:end="973:40"><name pos:start="973:39" pos:end="973:40">rb</name></expr></argument>, <argument pos:start="973:43" pos:end="973:44"><expr pos:start="973:43" pos:end="973:44"><name pos:start="973:43" pos:end="973:44">rc</name></expr></argument>, <argument pos:start="973:47" pos:end="973:51"><expr pos:start="973:47" pos:end="973:51"><name pos:start="973:47" pos:end="973:51">islit</name></expr></argument>, <argument pos:start="973:54" pos:end="973:56"><expr pos:start="973:54" pos:end="973:56"><name pos:start="973:54" pos:end="973:56">lit</name></expr></argument>, <argument pos:start="973:59" pos:end="973:59"><expr pos:start="973:59" pos:end="973:59"><literal type="number" pos:start="973:59" pos:end="973:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="975:13" pos:end="975:18">break;</break>

        <case pos:start="977:9" pos:end="977:18">case <expr pos:start="977:14" pos:end="977:17"><literal type="number" pos:start="977:14" pos:end="977:17">0x46</literal></expr>:</case>

            <comment type="block" pos:start="979:13" pos:end="979:24">/* CMOVGE */</comment>

            <expr_stmt pos:start="981:13" pos:end="981:61"><expr pos:start="981:13" pos:end="981:60"><call pos:start="981:13" pos:end="981:60"><name pos:start="981:13" pos:end="981:20">gen_cmov</name><argument_list pos:start="981:21" pos:end="981:60">(<argument pos:start="981:22" pos:end="981:32"><expr pos:start="981:22" pos:end="981:32"><name pos:start="981:22" pos:end="981:32">TCG_COND_LT</name></expr></argument>, <argument pos:start="981:35" pos:end="981:36"><expr pos:start="981:35" pos:end="981:36"><name pos:start="981:35" pos:end="981:36">ra</name></expr></argument>, <argument pos:start="981:39" pos:end="981:40"><expr pos:start="981:39" pos:end="981:40"><name pos:start="981:39" pos:end="981:40">rb</name></expr></argument>, <argument pos:start="981:43" pos:end="981:44"><expr pos:start="981:43" pos:end="981:44"><name pos:start="981:43" pos:end="981:44">rc</name></expr></argument>, <argument pos:start="981:47" pos:end="981:51"><expr pos:start="981:47" pos:end="981:51"><name pos:start="981:47" pos:end="981:51">islit</name></expr></argument>, <argument pos:start="981:54" pos:end="981:56"><expr pos:start="981:54" pos:end="981:56"><name pos:start="981:54" pos:end="981:56">lit</name></expr></argument>, <argument pos:start="981:59" pos:end="981:59"><expr pos:start="981:59" pos:end="981:59"><literal type="number" pos:start="981:59" pos:end="981:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="983:13" pos:end="983:18">break;</break>

        <case pos:start="985:9" pos:end="985:18">case <expr pos:start="985:14" pos:end="985:17"><literal type="number" pos:start="985:14" pos:end="985:17">0x48</literal></expr>:</case>

            <comment type="block" pos:start="987:13" pos:end="987:21">/* EQV */</comment>

            <if_stmt pos:start="989:13" pos:end="1013:13"><if pos:start="989:13" pos:end="1013:13">if <condition pos:start="989:16" pos:end="989:33">(<expr pos:start="989:17" pos:end="989:32"><call pos:start="989:17" pos:end="989:32"><name pos:start="989:17" pos:end="989:22">likely</name><argument_list pos:start="989:23" pos:end="989:32">(<argument pos:start="989:24" pos:end="989:31"><expr pos:start="989:24" pos:end="989:31"><name pos:start="989:24" pos:end="989:25">rc</name> <operator pos:start="989:27" pos:end="989:28">!=</operator> <literal type="number" pos:start="989:30" pos:end="989:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="989:35" pos:end="1013:13">{<block_content pos:start="991:17" pos:end="1011:17">

                <if_stmt pos:start="991:17" pos:end="1011:17"><if pos:start="991:17" pos:end="1001:17">if <condition pos:start="991:20" pos:end="991:29">(<expr pos:start="991:21" pos:end="991:28"><name pos:start="991:21" pos:end="991:22">ra</name> <operator pos:start="991:24" pos:end="991:25">!=</operator> <literal type="number" pos:start="991:27" pos:end="991:28">31</literal></expr>)</condition> <block pos:start="991:31" pos:end="1001:17">{<block_content pos:start="993:21" pos:end="999:76">

                    <if_stmt pos:start="993:21" pos:end="999:76"><if pos:start="993:21" pos:end="995:71">if <condition pos:start="993:24" pos:end="993:30">(<expr pos:start="993:25" pos:end="993:29"><name pos:start="993:25" pos:end="993:29">islit</name></expr>)</condition><block type="pseudo" pos:start="995:25" pos:end="995:71"><block_content pos:start="995:25" pos:end="995:71">

                        <expr_stmt pos:start="995:25" pos:end="995:71"><expr pos:start="995:25" pos:end="995:70"><call pos:start="995:25" pos:end="995:70"><name pos:start="995:25" pos:end="995:40">tcg_gen_xori_i64</name><argument_list pos:start="995:41" pos:end="995:70">(<argument pos:start="995:42" pos:end="995:51"><expr pos:start="995:42" pos:end="995:51"><name pos:start="995:42" pos:end="995:51"><name pos:start="995:42" pos:end="995:47">cpu_ir</name><index pos:start="995:48" pos:end="995:51">[<expr pos:start="995:49" pos:end="995:50"><name pos:start="995:49" pos:end="995:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="995:54" pos:end="995:63"><expr pos:start="995:54" pos:end="995:63"><name pos:start="995:54" pos:end="995:63"><name pos:start="995:54" pos:end="995:59">cpu_ir</name><index pos:start="995:60" pos:end="995:63">[<expr pos:start="995:61" pos:end="995:62"><name pos:start="995:61" pos:end="995:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="995:66" pos:end="995:69"><expr pos:start="995:66" pos:end="995:69"><operator pos:start="995:66" pos:end="995:66">~</operator><name pos:start="995:67" pos:end="995:69">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="997:21" pos:end="999:76">else<block type="pseudo" pos:start="999:25" pos:end="999:76"><block_content pos:start="999:25" pos:end="999:76">

                        <expr_stmt pos:start="999:25" pos:end="999:76"><expr pos:start="999:25" pos:end="999:75"><call pos:start="999:25" pos:end="999:75"><name pos:start="999:25" pos:end="999:39">tcg_gen_eqv_i64</name><argument_list pos:start="999:40" pos:end="999:75">(<argument pos:start="999:41" pos:end="999:50"><expr pos:start="999:41" pos:end="999:50"><name pos:start="999:41" pos:end="999:50"><name pos:start="999:41" pos:end="999:46">cpu_ir</name><index pos:start="999:47" pos:end="999:50">[<expr pos:start="999:48" pos:end="999:49"><name pos:start="999:48" pos:end="999:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="999:53" pos:end="999:62"><expr pos:start="999:53" pos:end="999:62"><name pos:start="999:53" pos:end="999:62"><name pos:start="999:53" pos:end="999:58">cpu_ir</name><index pos:start="999:59" pos:end="999:62">[<expr pos:start="999:60" pos:end="999:61"><name pos:start="999:60" pos:end="999:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="999:65" pos:end="999:74"><expr pos:start="999:65" pos:end="999:74"><name pos:start="999:65" pos:end="999:74"><name pos:start="999:65" pos:end="999:70">cpu_ir</name><index pos:start="999:71" pos:end="999:74">[<expr pos:start="999:72" pos:end="999:73"><name pos:start="999:72" pos:end="999:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1001:19" pos:end="1011:17">else <block pos:start="1001:24" pos:end="1011:17">{<block_content pos:start="1003:21" pos:end="1009:64">

                    <if_stmt pos:start="1003:21" pos:end="1009:64"><if pos:start="1003:21" pos:end="1005:59">if <condition pos:start="1003:24" pos:end="1003:30">(<expr pos:start="1003:25" pos:end="1003:29"><name pos:start="1003:25" pos:end="1003:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1005:25" pos:end="1005:59"><block_content pos:start="1005:25" pos:end="1005:59">

                        <expr_stmt pos:start="1005:25" pos:end="1005:59"><expr pos:start="1005:25" pos:end="1005:58"><call pos:start="1005:25" pos:end="1005:58"><name pos:start="1005:25" pos:end="1005:40">tcg_gen_movi_i64</name><argument_list pos:start="1005:41" pos:end="1005:58">(<argument pos:start="1005:42" pos:end="1005:51"><expr pos:start="1005:42" pos:end="1005:51"><name pos:start="1005:42" pos:end="1005:51"><name pos:start="1005:42" pos:end="1005:47">cpu_ir</name><index pos:start="1005:48" pos:end="1005:51">[<expr pos:start="1005:49" pos:end="1005:50"><name pos:start="1005:49" pos:end="1005:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1005:54" pos:end="1005:57"><expr pos:start="1005:54" pos:end="1005:57"><operator pos:start="1005:54" pos:end="1005:54">~</operator><name pos:start="1005:55" pos:end="1005:57">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1007:21" pos:end="1009:64">else<block type="pseudo" pos:start="1009:25" pos:end="1009:64"><block_content pos:start="1009:25" pos:end="1009:64">

                        <expr_stmt pos:start="1009:25" pos:end="1009:64"><expr pos:start="1009:25" pos:end="1009:63"><call pos:start="1009:25" pos:end="1009:63"><name pos:start="1009:25" pos:end="1009:39">tcg_gen_not_i64</name><argument_list pos:start="1009:40" pos:end="1009:63">(<argument pos:start="1009:41" pos:end="1009:50"><expr pos:start="1009:41" pos:end="1009:50"><name pos:start="1009:41" pos:end="1009:50"><name pos:start="1009:41" pos:end="1009:46">cpu_ir</name><index pos:start="1009:47" pos:end="1009:50">[<expr pos:start="1009:48" pos:end="1009:49"><name pos:start="1009:48" pos:end="1009:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1009:53" pos:end="1009:62"><expr pos:start="1009:53" pos:end="1009:62"><name pos:start="1009:53" pos:end="1009:62"><name pos:start="1009:53" pos:end="1009:58">cpu_ir</name><index pos:start="1009:59" pos:end="1009:62">[<expr pos:start="1009:60" pos:end="1009:61"><name pos:start="1009:60" pos:end="1009:61">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1015:13" pos:end="1015:18">break;</break>

        <case pos:start="1017:9" pos:end="1017:18">case <expr pos:start="1017:14" pos:end="1017:17"><literal type="number" pos:start="1017:14" pos:end="1017:17">0x61</literal></expr>:</case>

            <comment type="block" pos:start="1019:13" pos:end="1019:23">/* AMASK */</comment>

            <if_stmt pos:start="1021:13" pos:end="1031:13"><if pos:start="1021:13" pos:end="1031:13">if <condition pos:start="1021:16" pos:end="1021:33">(<expr pos:start="1021:17" pos:end="1021:32"><call pos:start="1021:17" pos:end="1021:32"><name pos:start="1021:17" pos:end="1021:22">likely</name><argument_list pos:start="1021:23" pos:end="1021:32">(<argument pos:start="1021:24" pos:end="1021:31"><expr pos:start="1021:24" pos:end="1021:31"><name pos:start="1021:24" pos:end="1021:25">rc</name> <operator pos:start="1021:27" pos:end="1021:28">!=</operator> <literal type="number" pos:start="1021:30" pos:end="1021:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1021:35" pos:end="1031:13">{<block_content pos:start="1023:17" pos:end="1029:61">

                <if_stmt pos:start="1023:17" pos:end="1029:61"><if pos:start="1023:17" pos:end="1025:68">if <condition pos:start="1023:20" pos:end="1023:26">(<expr pos:start="1023:21" pos:end="1023:25"><name pos:start="1023:21" pos:end="1023:25">islit</name></expr>)</condition><block type="pseudo" pos:start="1025:21" pos:end="1025:68"><block_content pos:start="1025:21" pos:end="1025:68">

                    <expr_stmt pos:start="1025:21" pos:end="1025:68"><expr pos:start="1025:21" pos:end="1025:67"><call pos:start="1025:21" pos:end="1025:67"><name pos:start="1025:21" pos:end="1025:36">tcg_gen_movi_i64</name><argument_list pos:start="1025:37" pos:end="1025:67">(<argument pos:start="1025:38" pos:end="1025:47"><expr pos:start="1025:38" pos:end="1025:47"><name pos:start="1025:38" pos:end="1025:47"><name pos:start="1025:38" pos:end="1025:43">cpu_ir</name><index pos:start="1025:44" pos:end="1025:47">[<expr pos:start="1025:45" pos:end="1025:46"><name pos:start="1025:45" pos:end="1025:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1025:50" pos:end="1025:66"><expr pos:start="1025:50" pos:end="1025:66"><call pos:start="1025:50" pos:end="1025:66"><name pos:start="1025:50" pos:end="1025:61">helper_amask</name><argument_list pos:start="1025:62" pos:end="1025:66">(<argument pos:start="1025:63" pos:end="1025:65"><expr pos:start="1025:63" pos:end="1025:65"><name pos:start="1025:63" pos:end="1025:65">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1027:17" pos:end="1029:61">else<block type="pseudo" pos:start="1029:21" pos:end="1029:61"><block_content pos:start="1029:21" pos:end="1029:61">

                    <expr_stmt pos:start="1029:21" pos:end="1029:61"><expr pos:start="1029:21" pos:end="1029:60"><call pos:start="1029:21" pos:end="1029:60"><name pos:start="1029:21" pos:end="1029:36">gen_helper_amask</name><argument_list pos:start="1029:37" pos:end="1029:60">(<argument pos:start="1029:38" pos:end="1029:47"><expr pos:start="1029:38" pos:end="1029:47"><name pos:start="1029:38" pos:end="1029:47"><name pos:start="1029:38" pos:end="1029:43">cpu_ir</name><index pos:start="1029:44" pos:end="1029:47">[<expr pos:start="1029:45" pos:end="1029:46"><name pos:start="1029:45" pos:end="1029:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1029:50" pos:end="1029:59"><expr pos:start="1029:50" pos:end="1029:59"><name pos:start="1029:50" pos:end="1029:59"><name pos:start="1029:50" pos:end="1029:55">cpu_ir</name><index pos:start="1029:56" pos:end="1029:59">[<expr pos:start="1029:57" pos:end="1029:58"><name pos:start="1029:57" pos:end="1029:58">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1033:13" pos:end="1033:18">break;</break>

        <case pos:start="1035:9" pos:end="1035:18">case <expr pos:start="1035:14" pos:end="1035:17"><literal type="number" pos:start="1035:14" pos:end="1035:17">0x64</literal></expr>:</case>

            <comment type="block" pos:start="1037:13" pos:end="1037:24">/* CMOVLE */</comment>

            <expr_stmt pos:start="1039:13" pos:end="1039:61"><expr pos:start="1039:13" pos:end="1039:60"><call pos:start="1039:13" pos:end="1039:60"><name pos:start="1039:13" pos:end="1039:20">gen_cmov</name><argument_list pos:start="1039:21" pos:end="1039:60">(<argument pos:start="1039:22" pos:end="1039:32"><expr pos:start="1039:22" pos:end="1039:32"><name pos:start="1039:22" pos:end="1039:32">TCG_COND_GT</name></expr></argument>, <argument pos:start="1039:35" pos:end="1039:36"><expr pos:start="1039:35" pos:end="1039:36"><name pos:start="1039:35" pos:end="1039:36">ra</name></expr></argument>, <argument pos:start="1039:39" pos:end="1039:40"><expr pos:start="1039:39" pos:end="1039:40"><name pos:start="1039:39" pos:end="1039:40">rb</name></expr></argument>, <argument pos:start="1039:43" pos:end="1039:44"><expr pos:start="1039:43" pos:end="1039:44"><name pos:start="1039:43" pos:end="1039:44">rc</name></expr></argument>, <argument pos:start="1039:47" pos:end="1039:51"><expr pos:start="1039:47" pos:end="1039:51"><name pos:start="1039:47" pos:end="1039:51">islit</name></expr></argument>, <argument pos:start="1039:54" pos:end="1039:56"><expr pos:start="1039:54" pos:end="1039:56"><name pos:start="1039:54" pos:end="1039:56">lit</name></expr></argument>, <argument pos:start="1039:59" pos:end="1039:59"><expr pos:start="1039:59" pos:end="1039:59"><literal type="number" pos:start="1039:59" pos:end="1039:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1041:13" pos:end="1041:18">break;</break>

        <case pos:start="1043:9" pos:end="1043:18">case <expr pos:start="1043:14" pos:end="1043:17"><literal type="number" pos:start="1043:14" pos:end="1043:17">0x66</literal></expr>:</case>

            <comment type="block" pos:start="1045:13" pos:end="1045:24">/* CMOVGT */</comment>

            <expr_stmt pos:start="1047:13" pos:end="1047:61"><expr pos:start="1047:13" pos:end="1047:60"><call pos:start="1047:13" pos:end="1047:60"><name pos:start="1047:13" pos:end="1047:20">gen_cmov</name><argument_list pos:start="1047:21" pos:end="1047:60">(<argument pos:start="1047:22" pos:end="1047:32"><expr pos:start="1047:22" pos:end="1047:32"><name pos:start="1047:22" pos:end="1047:32">TCG_COND_LE</name></expr></argument>, <argument pos:start="1047:35" pos:end="1047:36"><expr pos:start="1047:35" pos:end="1047:36"><name pos:start="1047:35" pos:end="1047:36">ra</name></expr></argument>, <argument pos:start="1047:39" pos:end="1047:40"><expr pos:start="1047:39" pos:end="1047:40"><name pos:start="1047:39" pos:end="1047:40">rb</name></expr></argument>, <argument pos:start="1047:43" pos:end="1047:44"><expr pos:start="1047:43" pos:end="1047:44"><name pos:start="1047:43" pos:end="1047:44">rc</name></expr></argument>, <argument pos:start="1047:47" pos:end="1047:51"><expr pos:start="1047:47" pos:end="1047:51"><name pos:start="1047:47" pos:end="1047:51">islit</name></expr></argument>, <argument pos:start="1047:54" pos:end="1047:56"><expr pos:start="1047:54" pos:end="1047:56"><name pos:start="1047:54" pos:end="1047:56">lit</name></expr></argument>, <argument pos:start="1047:59" pos:end="1047:59"><expr pos:start="1047:59" pos:end="1047:59"><literal type="number" pos:start="1047:59" pos:end="1047:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1049:13" pos:end="1049:18">break;</break>

        <case pos:start="1051:9" pos:end="1051:18">case <expr pos:start="1051:14" pos:end="1051:17"><literal type="number" pos:start="1051:14" pos:end="1051:17">0x6C</literal></expr>:</case>

            <comment type="block" pos:start="1053:13" pos:end="1053:25">/* IMPLVER */</comment>

            <if_stmt pos:start="1055:13" pos:end="1057:52"><if pos:start="1055:13" pos:end="1057:52">if <condition pos:start="1055:16" pos:end="1055:25">(<expr pos:start="1055:17" pos:end="1055:24"><name pos:start="1055:17" pos:end="1055:18">rc</name> <operator pos:start="1055:20" pos:end="1055:21">!=</operator> <literal type="number" pos:start="1055:23" pos:end="1055:24">31</literal></expr>)</condition><block type="pseudo" pos:start="1057:17" pos:end="1057:52"><block_content pos:start="1057:17" pos:end="1057:52">

                <expr_stmt pos:start="1057:17" pos:end="1057:52"><expr pos:start="1057:17" pos:end="1057:51"><call pos:start="1057:17" pos:end="1057:51"><name pos:start="1057:17" pos:end="1057:39">gen_helper_load_implver</name><argument_list pos:start="1057:40" pos:end="1057:51">(<argument pos:start="1057:41" pos:end="1057:50"><expr pos:start="1057:41" pos:end="1057:50"><name pos:start="1057:41" pos:end="1057:50"><name pos:start="1057:41" pos:end="1057:46">cpu_ir</name><index pos:start="1057:47" pos:end="1057:50">[<expr pos:start="1057:48" pos:end="1057:49"><name pos:start="1057:48" pos:end="1057:49">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="1059:13" pos:end="1059:18">break;</break>

        <default pos:start="1061:9" pos:end="1061:16">default:</default>

            <goto pos:start="1063:13" pos:end="1063:29">goto <name pos:start="1063:18" pos:end="1063:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1067:9" pos:end="1067:14">break;</break>

    <case pos:start="1069:5" pos:end="1069:14">case <expr pos:start="1069:10" pos:end="1069:13"><literal type="number" pos:start="1069:10" pos:end="1069:13">0x12</literal></expr>:</case>

        <switch pos:start="1071:9" pos:end="1357:9">switch <condition pos:start="1071:16" pos:end="1071:20">(<expr pos:start="1071:17" pos:end="1071:19"><name pos:start="1071:17" pos:end="1071:19">fn7</name></expr>)</condition> <block pos:start="1071:22" pos:end="1357:9">{<block_content pos:start="1073:9" pos:end="1355:29">

        <case pos:start="1073:9" pos:end="1073:18">case <expr pos:start="1073:14" pos:end="1073:17"><literal type="number" pos:start="1073:14" pos:end="1073:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1075:13" pos:end="1075:23">/* MSKBL */</comment>

            <expr_stmt pos:start="1077:13" pos:end="1077:46"><expr pos:start="1077:13" pos:end="1077:45"><call pos:start="1077:13" pos:end="1077:45"><name pos:start="1077:13" pos:end="1077:21">gen_mskbl</name><argument_list pos:start="1077:22" pos:end="1077:45">(<argument pos:start="1077:23" pos:end="1077:24"><expr pos:start="1077:23" pos:end="1077:24"><name pos:start="1077:23" pos:end="1077:24">ra</name></expr></argument>, <argument pos:start="1077:27" pos:end="1077:28"><expr pos:start="1077:27" pos:end="1077:28"><name pos:start="1077:27" pos:end="1077:28">rb</name></expr></argument>, <argument pos:start="1077:31" pos:end="1077:32"><expr pos:start="1077:31" pos:end="1077:32"><name pos:start="1077:31" pos:end="1077:32">rc</name></expr></argument>, <argument pos:start="1077:35" pos:end="1077:39"><expr pos:start="1077:35" pos:end="1077:39"><name pos:start="1077:35" pos:end="1077:39">islit</name></expr></argument>, <argument pos:start="1077:42" pos:end="1077:44"><expr pos:start="1077:42" pos:end="1077:44"><name pos:start="1077:42" pos:end="1077:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1079:13" pos:end="1079:18">break;</break>

        <case pos:start="1081:9" pos:end="1081:18">case <expr pos:start="1081:14" pos:end="1081:17"><literal type="number" pos:start="1081:14" pos:end="1081:17">0x06</literal></expr>:</case>

            <comment type="block" pos:start="1083:13" pos:end="1083:23">/* EXTBL */</comment>

            <expr_stmt pos:start="1085:13" pos:end="1085:66"><expr pos:start="1085:13" pos:end="1085:65"><call pos:start="1085:13" pos:end="1085:65"><name pos:start="1085:13" pos:end="1085:21">gen_ext_l</name><argument_list pos:start="1085:22" pos:end="1085:65">(<argument pos:start="1085:23" pos:end="1085:40"><expr pos:start="1085:23" pos:end="1085:40"><operator pos:start="1085:23" pos:end="1085:23">&amp;</operator><name pos:start="1085:24" pos:end="1085:40">tcg_gen_ext8u_i64</name></expr></argument>, <argument pos:start="1085:43" pos:end="1085:44"><expr pos:start="1085:43" pos:end="1085:44"><name pos:start="1085:43" pos:end="1085:44">ra</name></expr></argument>, <argument pos:start="1085:47" pos:end="1085:48"><expr pos:start="1085:47" pos:end="1085:48"><name pos:start="1085:47" pos:end="1085:48">rb</name></expr></argument>, <argument pos:start="1085:51" pos:end="1085:52"><expr pos:start="1085:51" pos:end="1085:52"><name pos:start="1085:51" pos:end="1085:52">rc</name></expr></argument>, <argument pos:start="1085:55" pos:end="1085:59"><expr pos:start="1085:55" pos:end="1085:59"><name pos:start="1085:55" pos:end="1085:59">islit</name></expr></argument>, <argument pos:start="1085:62" pos:end="1085:64"><expr pos:start="1085:62" pos:end="1085:64"><name pos:start="1085:62" pos:end="1085:64">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1087:13" pos:end="1087:18">break;</break>

        <case pos:start="1089:9" pos:end="1089:18">case <expr pos:start="1089:14" pos:end="1089:17"><literal type="number" pos:start="1089:14" pos:end="1089:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="1091:13" pos:end="1091:23">/* INSBL */</comment>

            <expr_stmt pos:start="1093:13" pos:end="1093:46"><expr pos:start="1093:13" pos:end="1093:45"><call pos:start="1093:13" pos:end="1093:45"><name pos:start="1093:13" pos:end="1093:21">gen_insbl</name><argument_list pos:start="1093:22" pos:end="1093:45">(<argument pos:start="1093:23" pos:end="1093:24"><expr pos:start="1093:23" pos:end="1093:24"><name pos:start="1093:23" pos:end="1093:24">ra</name></expr></argument>, <argument pos:start="1093:27" pos:end="1093:28"><expr pos:start="1093:27" pos:end="1093:28"><name pos:start="1093:27" pos:end="1093:28">rb</name></expr></argument>, <argument pos:start="1093:31" pos:end="1093:32"><expr pos:start="1093:31" pos:end="1093:32"><name pos:start="1093:31" pos:end="1093:32">rc</name></expr></argument>, <argument pos:start="1093:35" pos:end="1093:39"><expr pos:start="1093:35" pos:end="1093:39"><name pos:start="1093:35" pos:end="1093:39">islit</name></expr></argument>, <argument pos:start="1093:42" pos:end="1093:44"><expr pos:start="1093:42" pos:end="1093:44"><name pos:start="1093:42" pos:end="1093:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1095:13" pos:end="1095:18">break;</break>

        <case pos:start="1097:9" pos:end="1097:18">case <expr pos:start="1097:14" pos:end="1097:17"><literal type="number" pos:start="1097:14" pos:end="1097:17">0x12</literal></expr>:</case>

            <comment type="block" pos:start="1099:13" pos:end="1099:23">/* MSKWL */</comment>

            <expr_stmt pos:start="1101:13" pos:end="1101:46"><expr pos:start="1101:13" pos:end="1101:45"><call pos:start="1101:13" pos:end="1101:45"><name pos:start="1101:13" pos:end="1101:21">gen_mskwl</name><argument_list pos:start="1101:22" pos:end="1101:45">(<argument pos:start="1101:23" pos:end="1101:24"><expr pos:start="1101:23" pos:end="1101:24"><name pos:start="1101:23" pos:end="1101:24">ra</name></expr></argument>, <argument pos:start="1101:27" pos:end="1101:28"><expr pos:start="1101:27" pos:end="1101:28"><name pos:start="1101:27" pos:end="1101:28">rb</name></expr></argument>, <argument pos:start="1101:31" pos:end="1101:32"><expr pos:start="1101:31" pos:end="1101:32"><name pos:start="1101:31" pos:end="1101:32">rc</name></expr></argument>, <argument pos:start="1101:35" pos:end="1101:39"><expr pos:start="1101:35" pos:end="1101:39"><name pos:start="1101:35" pos:end="1101:39">islit</name></expr></argument>, <argument pos:start="1101:42" pos:end="1101:44"><expr pos:start="1101:42" pos:end="1101:44"><name pos:start="1101:42" pos:end="1101:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1103:13" pos:end="1103:18">break;</break>

        <case pos:start="1105:9" pos:end="1105:18">case <expr pos:start="1105:14" pos:end="1105:17"><literal type="number" pos:start="1105:14" pos:end="1105:17">0x16</literal></expr>:</case>

            <comment type="block" pos:start="1107:13" pos:end="1107:23">/* EXTWL */</comment>

            <expr_stmt pos:start="1109:13" pos:end="1109:67"><expr pos:start="1109:13" pos:end="1109:66"><call pos:start="1109:13" pos:end="1109:66"><name pos:start="1109:13" pos:end="1109:21">gen_ext_l</name><argument_list pos:start="1109:22" pos:end="1109:66">(<argument pos:start="1109:23" pos:end="1109:41"><expr pos:start="1109:23" pos:end="1109:41"><operator pos:start="1109:23" pos:end="1109:23">&amp;</operator><name pos:start="1109:24" pos:end="1109:41">tcg_gen_ext16u_i64</name></expr></argument>, <argument pos:start="1109:44" pos:end="1109:45"><expr pos:start="1109:44" pos:end="1109:45"><name pos:start="1109:44" pos:end="1109:45">ra</name></expr></argument>, <argument pos:start="1109:48" pos:end="1109:49"><expr pos:start="1109:48" pos:end="1109:49"><name pos:start="1109:48" pos:end="1109:49">rb</name></expr></argument>, <argument pos:start="1109:52" pos:end="1109:53"><expr pos:start="1109:52" pos:end="1109:53"><name pos:start="1109:52" pos:end="1109:53">rc</name></expr></argument>, <argument pos:start="1109:56" pos:end="1109:60"><expr pos:start="1109:56" pos:end="1109:60"><name pos:start="1109:56" pos:end="1109:60">islit</name></expr></argument>, <argument pos:start="1109:63" pos:end="1109:65"><expr pos:start="1109:63" pos:end="1109:65"><name pos:start="1109:63" pos:end="1109:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1111:13" pos:end="1111:18">break;</break>

        <case pos:start="1113:9" pos:end="1113:18">case <expr pos:start="1113:14" pos:end="1113:17"><literal type="number" pos:start="1113:14" pos:end="1113:17">0x1B</literal></expr>:</case>

            <comment type="block" pos:start="1115:13" pos:end="1115:23">/* INSWL */</comment>

            <expr_stmt pos:start="1117:13" pos:end="1117:46"><expr pos:start="1117:13" pos:end="1117:45"><call pos:start="1117:13" pos:end="1117:45"><name pos:start="1117:13" pos:end="1117:21">gen_inswl</name><argument_list pos:start="1117:22" pos:end="1117:45">(<argument pos:start="1117:23" pos:end="1117:24"><expr pos:start="1117:23" pos:end="1117:24"><name pos:start="1117:23" pos:end="1117:24">ra</name></expr></argument>, <argument pos:start="1117:27" pos:end="1117:28"><expr pos:start="1117:27" pos:end="1117:28"><name pos:start="1117:27" pos:end="1117:28">rb</name></expr></argument>, <argument pos:start="1117:31" pos:end="1117:32"><expr pos:start="1117:31" pos:end="1117:32"><name pos:start="1117:31" pos:end="1117:32">rc</name></expr></argument>, <argument pos:start="1117:35" pos:end="1117:39"><expr pos:start="1117:35" pos:end="1117:39"><name pos:start="1117:35" pos:end="1117:39">islit</name></expr></argument>, <argument pos:start="1117:42" pos:end="1117:44"><expr pos:start="1117:42" pos:end="1117:44"><name pos:start="1117:42" pos:end="1117:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1119:13" pos:end="1119:18">break;</break>

        <case pos:start="1121:9" pos:end="1121:18">case <expr pos:start="1121:14" pos:end="1121:17"><literal type="number" pos:start="1121:14" pos:end="1121:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1123:13" pos:end="1123:23">/* MSKLL */</comment>

            <expr_stmt pos:start="1125:13" pos:end="1125:46"><expr pos:start="1125:13" pos:end="1125:45"><call pos:start="1125:13" pos:end="1125:45"><name pos:start="1125:13" pos:end="1125:21">gen_mskll</name><argument_list pos:start="1125:22" pos:end="1125:45">(<argument pos:start="1125:23" pos:end="1125:24"><expr pos:start="1125:23" pos:end="1125:24"><name pos:start="1125:23" pos:end="1125:24">ra</name></expr></argument>, <argument pos:start="1125:27" pos:end="1125:28"><expr pos:start="1125:27" pos:end="1125:28"><name pos:start="1125:27" pos:end="1125:28">rb</name></expr></argument>, <argument pos:start="1125:31" pos:end="1125:32"><expr pos:start="1125:31" pos:end="1125:32"><name pos:start="1125:31" pos:end="1125:32">rc</name></expr></argument>, <argument pos:start="1125:35" pos:end="1125:39"><expr pos:start="1125:35" pos:end="1125:39"><name pos:start="1125:35" pos:end="1125:39">islit</name></expr></argument>, <argument pos:start="1125:42" pos:end="1125:44"><expr pos:start="1125:42" pos:end="1125:44"><name pos:start="1125:42" pos:end="1125:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1127:13" pos:end="1127:18">break;</break>

        <case pos:start="1129:9" pos:end="1129:18">case <expr pos:start="1129:14" pos:end="1129:17"><literal type="number" pos:start="1129:14" pos:end="1129:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1131:13" pos:end="1131:23">/* EXTLL */</comment>

            <expr_stmt pos:start="1133:13" pos:end="1133:67"><expr pos:start="1133:13" pos:end="1133:66"><call pos:start="1133:13" pos:end="1133:66"><name pos:start="1133:13" pos:end="1133:21">gen_ext_l</name><argument_list pos:start="1133:22" pos:end="1133:66">(<argument pos:start="1133:23" pos:end="1133:41"><expr pos:start="1133:23" pos:end="1133:41"><operator pos:start="1133:23" pos:end="1133:23">&amp;</operator><name pos:start="1133:24" pos:end="1133:41">tcg_gen_ext32u_i64</name></expr></argument>, <argument pos:start="1133:44" pos:end="1133:45"><expr pos:start="1133:44" pos:end="1133:45"><name pos:start="1133:44" pos:end="1133:45">ra</name></expr></argument>, <argument pos:start="1133:48" pos:end="1133:49"><expr pos:start="1133:48" pos:end="1133:49"><name pos:start="1133:48" pos:end="1133:49">rb</name></expr></argument>, <argument pos:start="1133:52" pos:end="1133:53"><expr pos:start="1133:52" pos:end="1133:53"><name pos:start="1133:52" pos:end="1133:53">rc</name></expr></argument>, <argument pos:start="1133:56" pos:end="1133:60"><expr pos:start="1133:56" pos:end="1133:60"><name pos:start="1133:56" pos:end="1133:60">islit</name></expr></argument>, <argument pos:start="1133:63" pos:end="1133:65"><expr pos:start="1133:63" pos:end="1133:65"><name pos:start="1133:63" pos:end="1133:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1135:13" pos:end="1135:18">break;</break>

        <case pos:start="1137:9" pos:end="1137:18">case <expr pos:start="1137:14" pos:end="1137:17"><literal type="number" pos:start="1137:14" pos:end="1137:17">0x2B</literal></expr>:</case>

            <comment type="block" pos:start="1139:13" pos:end="1139:23">/* INSLL */</comment>

            <expr_stmt pos:start="1141:13" pos:end="1141:46"><expr pos:start="1141:13" pos:end="1141:45"><call pos:start="1141:13" pos:end="1141:45"><name pos:start="1141:13" pos:end="1141:21">gen_insll</name><argument_list pos:start="1141:22" pos:end="1141:45">(<argument pos:start="1141:23" pos:end="1141:24"><expr pos:start="1141:23" pos:end="1141:24"><name pos:start="1141:23" pos:end="1141:24">ra</name></expr></argument>, <argument pos:start="1141:27" pos:end="1141:28"><expr pos:start="1141:27" pos:end="1141:28"><name pos:start="1141:27" pos:end="1141:28">rb</name></expr></argument>, <argument pos:start="1141:31" pos:end="1141:32"><expr pos:start="1141:31" pos:end="1141:32"><name pos:start="1141:31" pos:end="1141:32">rc</name></expr></argument>, <argument pos:start="1141:35" pos:end="1141:39"><expr pos:start="1141:35" pos:end="1141:39"><name pos:start="1141:35" pos:end="1141:39">islit</name></expr></argument>, <argument pos:start="1141:42" pos:end="1141:44"><expr pos:start="1141:42" pos:end="1141:44"><name pos:start="1141:42" pos:end="1141:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1143:13" pos:end="1143:18">break;</break>

        <case pos:start="1145:9" pos:end="1145:18">case <expr pos:start="1145:14" pos:end="1145:17"><literal type="number" pos:start="1145:14" pos:end="1145:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="1147:13" pos:end="1147:21">/* ZAP */</comment>

            <expr_stmt pos:start="1149:13" pos:end="1149:44"><expr pos:start="1149:13" pos:end="1149:43"><call pos:start="1149:13" pos:end="1149:43"><name pos:start="1149:13" pos:end="1149:19">gen_zap</name><argument_list pos:start="1149:20" pos:end="1149:43">(<argument pos:start="1149:21" pos:end="1149:22"><expr pos:start="1149:21" pos:end="1149:22"><name pos:start="1149:21" pos:end="1149:22">ra</name></expr></argument>, <argument pos:start="1149:25" pos:end="1149:26"><expr pos:start="1149:25" pos:end="1149:26"><name pos:start="1149:25" pos:end="1149:26">rb</name></expr></argument>, <argument pos:start="1149:29" pos:end="1149:30"><expr pos:start="1149:29" pos:end="1149:30"><name pos:start="1149:29" pos:end="1149:30">rc</name></expr></argument>, <argument pos:start="1149:33" pos:end="1149:37"><expr pos:start="1149:33" pos:end="1149:37"><name pos:start="1149:33" pos:end="1149:37">islit</name></expr></argument>, <argument pos:start="1149:40" pos:end="1149:42"><expr pos:start="1149:40" pos:end="1149:42"><name pos:start="1149:40" pos:end="1149:42">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1151:13" pos:end="1151:18">break;</break>

        <case pos:start="1153:9" pos:end="1153:18">case <expr pos:start="1153:14" pos:end="1153:17"><literal type="number" pos:start="1153:14" pos:end="1153:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="1155:13" pos:end="1155:24">/* ZAPNOT */</comment>

            <expr_stmt pos:start="1157:13" pos:end="1157:47"><expr pos:start="1157:13" pos:end="1157:46"><call pos:start="1157:13" pos:end="1157:46"><name pos:start="1157:13" pos:end="1157:22">gen_zapnot</name><argument_list pos:start="1157:23" pos:end="1157:46">(<argument pos:start="1157:24" pos:end="1157:25"><expr pos:start="1157:24" pos:end="1157:25"><name pos:start="1157:24" pos:end="1157:25">ra</name></expr></argument>, <argument pos:start="1157:28" pos:end="1157:29"><expr pos:start="1157:28" pos:end="1157:29"><name pos:start="1157:28" pos:end="1157:29">rb</name></expr></argument>, <argument pos:start="1157:32" pos:end="1157:33"><expr pos:start="1157:32" pos:end="1157:33"><name pos:start="1157:32" pos:end="1157:33">rc</name></expr></argument>, <argument pos:start="1157:36" pos:end="1157:40"><expr pos:start="1157:36" pos:end="1157:40"><name pos:start="1157:36" pos:end="1157:40">islit</name></expr></argument>, <argument pos:start="1157:43" pos:end="1157:45"><expr pos:start="1157:43" pos:end="1157:45"><name pos:start="1157:43" pos:end="1157:45">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1159:13" pos:end="1159:18">break;</break>

        <case pos:start="1161:9" pos:end="1161:18">case <expr pos:start="1161:14" pos:end="1161:17"><literal type="number" pos:start="1161:14" pos:end="1161:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="1163:13" pos:end="1163:23">/* MSKQL */</comment>

            <expr_stmt pos:start="1165:13" pos:end="1165:46"><expr pos:start="1165:13" pos:end="1165:45"><call pos:start="1165:13" pos:end="1165:45"><name pos:start="1165:13" pos:end="1165:21">gen_mskql</name><argument_list pos:start="1165:22" pos:end="1165:45">(<argument pos:start="1165:23" pos:end="1165:24"><expr pos:start="1165:23" pos:end="1165:24"><name pos:start="1165:23" pos:end="1165:24">ra</name></expr></argument>, <argument pos:start="1165:27" pos:end="1165:28"><expr pos:start="1165:27" pos:end="1165:28"><name pos:start="1165:27" pos:end="1165:28">rb</name></expr></argument>, <argument pos:start="1165:31" pos:end="1165:32"><expr pos:start="1165:31" pos:end="1165:32"><name pos:start="1165:31" pos:end="1165:32">rc</name></expr></argument>, <argument pos:start="1165:35" pos:end="1165:39"><expr pos:start="1165:35" pos:end="1165:39"><name pos:start="1165:35" pos:end="1165:39">islit</name></expr></argument>, <argument pos:start="1165:42" pos:end="1165:44"><expr pos:start="1165:42" pos:end="1165:44"><name pos:start="1165:42" pos:end="1165:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1167:13" pos:end="1167:18">break;</break>

        <case pos:start="1169:9" pos:end="1169:18">case <expr pos:start="1169:14" pos:end="1169:17"><literal type="number" pos:start="1169:14" pos:end="1169:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="1171:13" pos:end="1171:21">/* SRL */</comment>

            <if_stmt pos:start="1173:13" pos:end="1197:13"><if pos:start="1173:13" pos:end="1197:13">if <condition pos:start="1173:16" pos:end="1173:33">(<expr pos:start="1173:17" pos:end="1173:32"><call pos:start="1173:17" pos:end="1173:32"><name pos:start="1173:17" pos:end="1173:22">likely</name><argument_list pos:start="1173:23" pos:end="1173:32">(<argument pos:start="1173:24" pos:end="1173:31"><expr pos:start="1173:24" pos:end="1173:31"><name pos:start="1173:24" pos:end="1173:25">rc</name> <operator pos:start="1173:27" pos:end="1173:28">!=</operator> <literal type="number" pos:start="1173:30" pos:end="1173:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1173:35" pos:end="1197:13">{<block_content pos:start="1175:17" pos:end="1195:52">

                <if_stmt pos:start="1175:17" pos:end="1195:52"><if pos:start="1175:17" pos:end="1193:17">if <condition pos:start="1175:20" pos:end="1175:29">(<expr pos:start="1175:21" pos:end="1175:28"><name pos:start="1175:21" pos:end="1175:22">ra</name> <operator pos:start="1175:24" pos:end="1175:25">!=</operator> <literal type="number" pos:start="1175:27" pos:end="1175:28">31</literal></expr>)</condition> <block pos:start="1175:31" pos:end="1193:17">{<block_content pos:start="1177:21" pos:end="1191:21">

                    <if_stmt pos:start="1177:21" pos:end="1191:21"><if pos:start="1177:21" pos:end="1179:77">if <condition pos:start="1177:24" pos:end="1177:30">(<expr pos:start="1177:25" pos:end="1177:29"><name pos:start="1177:25" pos:end="1177:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1179:25" pos:end="1179:77"><block_content pos:start="1179:25" pos:end="1179:77">

                        <expr_stmt pos:start="1179:25" pos:end="1179:77"><expr pos:start="1179:25" pos:end="1179:76"><call pos:start="1179:25" pos:end="1179:76"><name pos:start="1179:25" pos:end="1179:40">tcg_gen_shri_i64</name><argument_list pos:start="1179:41" pos:end="1179:76">(<argument pos:start="1179:42" pos:end="1179:51"><expr pos:start="1179:42" pos:end="1179:51"><name pos:start="1179:42" pos:end="1179:51"><name pos:start="1179:42" pos:end="1179:47">cpu_ir</name><index pos:start="1179:48" pos:end="1179:51">[<expr pos:start="1179:49" pos:end="1179:50"><name pos:start="1179:49" pos:end="1179:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1179:54" pos:end="1179:63"><expr pos:start="1179:54" pos:end="1179:63"><name pos:start="1179:54" pos:end="1179:63"><name pos:start="1179:54" pos:end="1179:59">cpu_ir</name><index pos:start="1179:60" pos:end="1179:63">[<expr pos:start="1179:61" pos:end="1179:62"><name pos:start="1179:61" pos:end="1179:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1179:66" pos:end="1179:75"><expr pos:start="1179:66" pos:end="1179:75"><name pos:start="1179:66" pos:end="1179:68">lit</name> <operator pos:start="1179:70" pos:end="1179:70">&amp;</operator> <literal type="number" pos:start="1179:72" pos:end="1179:75">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1181:21" pos:end="1191:21">else <block pos:start="1181:26" pos:end="1191:21">{<block_content pos:start="1183:25" pos:end="1189:45">

                        <decl_stmt pos:start="1183:25" pos:end="1183:52"><decl pos:start="1183:25" pos:end="1183:51"><type pos:start="1183:25" pos:end="1183:28"><name pos:start="1183:25" pos:end="1183:28">TCGv</name></type> <name pos:start="1183:30" pos:end="1183:34">shift</name> <init pos:start="1183:36" pos:end="1183:51">= <expr pos:start="1183:38" pos:end="1183:51"><call pos:start="1183:38" pos:end="1183:51"><name pos:start="1183:38" pos:end="1183:49">tcg_temp_new</name><argument_list pos:start="1183:50" pos:end="1183:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1185:25" pos:end="1185:66"><expr pos:start="1185:25" pos:end="1185:65"><call pos:start="1185:25" pos:end="1185:65"><name pos:start="1185:25" pos:end="1185:40">tcg_gen_andi_i64</name><argument_list pos:start="1185:41" pos:end="1185:65">(<argument pos:start="1185:42" pos:end="1185:46"><expr pos:start="1185:42" pos:end="1185:46"><name pos:start="1185:42" pos:end="1185:46">shift</name></expr></argument>, <argument pos:start="1185:49" pos:end="1185:58"><expr pos:start="1185:49" pos:end="1185:58"><name pos:start="1185:49" pos:end="1185:58"><name pos:start="1185:49" pos:end="1185:54">cpu_ir</name><index pos:start="1185:55" pos:end="1185:58">[<expr pos:start="1185:56" pos:end="1185:57"><name pos:start="1185:56" pos:end="1185:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="1185:61" pos:end="1185:64"><expr pos:start="1185:61" pos:end="1185:64"><literal type="number" pos:start="1185:61" pos:end="1185:64">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1187:25" pos:end="1187:71"><expr pos:start="1187:25" pos:end="1187:70"><call pos:start="1187:25" pos:end="1187:70"><name pos:start="1187:25" pos:end="1187:39">tcg_gen_shr_i64</name><argument_list pos:start="1187:40" pos:end="1187:70">(<argument pos:start="1187:41" pos:end="1187:50"><expr pos:start="1187:41" pos:end="1187:50"><name pos:start="1187:41" pos:end="1187:50"><name pos:start="1187:41" pos:end="1187:46">cpu_ir</name><index pos:start="1187:47" pos:end="1187:50">[<expr pos:start="1187:48" pos:end="1187:49"><name pos:start="1187:48" pos:end="1187:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1187:53" pos:end="1187:62"><expr pos:start="1187:53" pos:end="1187:62"><name pos:start="1187:53" pos:end="1187:62"><name pos:start="1187:53" pos:end="1187:58">cpu_ir</name><index pos:start="1187:59" pos:end="1187:62">[<expr pos:start="1187:60" pos:end="1187:61"><name pos:start="1187:60" pos:end="1187:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1187:65" pos:end="1187:69"><expr pos:start="1187:65" pos:end="1187:69"><name pos:start="1187:65" pos:end="1187:69">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1189:25" pos:end="1189:45"><expr pos:start="1189:25" pos:end="1189:44"><call pos:start="1189:25" pos:end="1189:44"><name pos:start="1189:25" pos:end="1189:37">tcg_temp_free</name><argument_list pos:start="1189:38" pos:end="1189:44">(<argument pos:start="1189:39" pos:end="1189:43"><expr pos:start="1189:39" pos:end="1189:43"><name pos:start="1189:39" pos:end="1189:43">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1193:19" pos:end="1195:52">else<block type="pseudo" pos:start="1195:21" pos:end="1195:52"><block_content pos:start="1195:21" pos:end="1195:52">

                    <expr_stmt pos:start="1195:21" pos:end="1195:52"><expr pos:start="1195:21" pos:end="1195:51"><call pos:start="1195:21" pos:end="1195:51"><name pos:start="1195:21" pos:end="1195:36">tcg_gen_movi_i64</name><argument_list pos:start="1195:37" pos:end="1195:51">(<argument pos:start="1195:38" pos:end="1195:47"><expr pos:start="1195:38" pos:end="1195:47"><name pos:start="1195:38" pos:end="1195:47"><name pos:start="1195:38" pos:end="1195:43">cpu_ir</name><index pos:start="1195:44" pos:end="1195:47">[<expr pos:start="1195:45" pos:end="1195:46"><name pos:start="1195:45" pos:end="1195:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1195:50" pos:end="1195:50"><expr pos:start="1195:50" pos:end="1195:50"><literal type="number" pos:start="1195:50" pos:end="1195:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1199:13" pos:end="1199:18">break;</break>

        <case pos:start="1201:9" pos:end="1201:18">case <expr pos:start="1201:14" pos:end="1201:17"><literal type="number" pos:start="1201:14" pos:end="1201:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="1203:13" pos:end="1203:23">/* EXTQL */</comment>

            <expr_stmt pos:start="1205:13" pos:end="1205:52"><expr pos:start="1205:13" pos:end="1205:51"><call pos:start="1205:13" pos:end="1205:51"><name pos:start="1205:13" pos:end="1205:21">gen_ext_l</name><argument_list pos:start="1205:22" pos:end="1205:51">(<argument pos:start="1205:23" pos:end="1205:26"><expr pos:start="1205:23" pos:end="1205:26"><name pos:start="1205:23" pos:end="1205:26">NULL</name></expr></argument>, <argument pos:start="1205:29" pos:end="1205:30"><expr pos:start="1205:29" pos:end="1205:30"><name pos:start="1205:29" pos:end="1205:30">ra</name></expr></argument>, <argument pos:start="1205:33" pos:end="1205:34"><expr pos:start="1205:33" pos:end="1205:34"><name pos:start="1205:33" pos:end="1205:34">rb</name></expr></argument>, <argument pos:start="1205:37" pos:end="1205:38"><expr pos:start="1205:37" pos:end="1205:38"><name pos:start="1205:37" pos:end="1205:38">rc</name></expr></argument>, <argument pos:start="1205:41" pos:end="1205:45"><expr pos:start="1205:41" pos:end="1205:45"><name pos:start="1205:41" pos:end="1205:45">islit</name></expr></argument>, <argument pos:start="1205:48" pos:end="1205:50"><expr pos:start="1205:48" pos:end="1205:50"><name pos:start="1205:48" pos:end="1205:50">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1207:13" pos:end="1207:18">break;</break>

        <case pos:start="1209:9" pos:end="1209:18">case <expr pos:start="1209:14" pos:end="1209:17"><literal type="number" pos:start="1209:14" pos:end="1209:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="1211:13" pos:end="1211:21">/* SLL */</comment>

            <if_stmt pos:start="1213:13" pos:end="1237:13"><if pos:start="1213:13" pos:end="1237:13">if <condition pos:start="1213:16" pos:end="1213:33">(<expr pos:start="1213:17" pos:end="1213:32"><call pos:start="1213:17" pos:end="1213:32"><name pos:start="1213:17" pos:end="1213:22">likely</name><argument_list pos:start="1213:23" pos:end="1213:32">(<argument pos:start="1213:24" pos:end="1213:31"><expr pos:start="1213:24" pos:end="1213:31"><name pos:start="1213:24" pos:end="1213:25">rc</name> <operator pos:start="1213:27" pos:end="1213:28">!=</operator> <literal type="number" pos:start="1213:30" pos:end="1213:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1213:35" pos:end="1237:13">{<block_content pos:start="1215:17" pos:end="1235:52">

                <if_stmt pos:start="1215:17" pos:end="1235:52"><if pos:start="1215:17" pos:end="1233:17">if <condition pos:start="1215:20" pos:end="1215:29">(<expr pos:start="1215:21" pos:end="1215:28"><name pos:start="1215:21" pos:end="1215:22">ra</name> <operator pos:start="1215:24" pos:end="1215:25">!=</operator> <literal type="number" pos:start="1215:27" pos:end="1215:28">31</literal></expr>)</condition> <block pos:start="1215:31" pos:end="1233:17">{<block_content pos:start="1217:21" pos:end="1231:21">

                    <if_stmt pos:start="1217:21" pos:end="1231:21"><if pos:start="1217:21" pos:end="1219:77">if <condition pos:start="1217:24" pos:end="1217:30">(<expr pos:start="1217:25" pos:end="1217:29"><name pos:start="1217:25" pos:end="1217:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1219:25" pos:end="1219:77"><block_content pos:start="1219:25" pos:end="1219:77">

                        <expr_stmt pos:start="1219:25" pos:end="1219:77"><expr pos:start="1219:25" pos:end="1219:76"><call pos:start="1219:25" pos:end="1219:76"><name pos:start="1219:25" pos:end="1219:40">tcg_gen_shli_i64</name><argument_list pos:start="1219:41" pos:end="1219:76">(<argument pos:start="1219:42" pos:end="1219:51"><expr pos:start="1219:42" pos:end="1219:51"><name pos:start="1219:42" pos:end="1219:51"><name pos:start="1219:42" pos:end="1219:47">cpu_ir</name><index pos:start="1219:48" pos:end="1219:51">[<expr pos:start="1219:49" pos:end="1219:50"><name pos:start="1219:49" pos:end="1219:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1219:54" pos:end="1219:63"><expr pos:start="1219:54" pos:end="1219:63"><name pos:start="1219:54" pos:end="1219:63"><name pos:start="1219:54" pos:end="1219:59">cpu_ir</name><index pos:start="1219:60" pos:end="1219:63">[<expr pos:start="1219:61" pos:end="1219:62"><name pos:start="1219:61" pos:end="1219:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1219:66" pos:end="1219:75"><expr pos:start="1219:66" pos:end="1219:75"><name pos:start="1219:66" pos:end="1219:68">lit</name> <operator pos:start="1219:70" pos:end="1219:70">&amp;</operator> <literal type="number" pos:start="1219:72" pos:end="1219:75">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1221:21" pos:end="1231:21">else <block pos:start="1221:26" pos:end="1231:21">{<block_content pos:start="1223:25" pos:end="1229:45">

                        <decl_stmt pos:start="1223:25" pos:end="1223:52"><decl pos:start="1223:25" pos:end="1223:51"><type pos:start="1223:25" pos:end="1223:28"><name pos:start="1223:25" pos:end="1223:28">TCGv</name></type> <name pos:start="1223:30" pos:end="1223:34">shift</name> <init pos:start="1223:36" pos:end="1223:51">= <expr pos:start="1223:38" pos:end="1223:51"><call pos:start="1223:38" pos:end="1223:51"><name pos:start="1223:38" pos:end="1223:49">tcg_temp_new</name><argument_list pos:start="1223:50" pos:end="1223:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1225:25" pos:end="1225:66"><expr pos:start="1225:25" pos:end="1225:65"><call pos:start="1225:25" pos:end="1225:65"><name pos:start="1225:25" pos:end="1225:40">tcg_gen_andi_i64</name><argument_list pos:start="1225:41" pos:end="1225:65">(<argument pos:start="1225:42" pos:end="1225:46"><expr pos:start="1225:42" pos:end="1225:46"><name pos:start="1225:42" pos:end="1225:46">shift</name></expr></argument>, <argument pos:start="1225:49" pos:end="1225:58"><expr pos:start="1225:49" pos:end="1225:58"><name pos:start="1225:49" pos:end="1225:58"><name pos:start="1225:49" pos:end="1225:54">cpu_ir</name><index pos:start="1225:55" pos:end="1225:58">[<expr pos:start="1225:56" pos:end="1225:57"><name pos:start="1225:56" pos:end="1225:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="1225:61" pos:end="1225:64"><expr pos:start="1225:61" pos:end="1225:64"><literal type="number" pos:start="1225:61" pos:end="1225:64">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1227:25" pos:end="1227:71"><expr pos:start="1227:25" pos:end="1227:70"><call pos:start="1227:25" pos:end="1227:70"><name pos:start="1227:25" pos:end="1227:39">tcg_gen_shl_i64</name><argument_list pos:start="1227:40" pos:end="1227:70">(<argument pos:start="1227:41" pos:end="1227:50"><expr pos:start="1227:41" pos:end="1227:50"><name pos:start="1227:41" pos:end="1227:50"><name pos:start="1227:41" pos:end="1227:46">cpu_ir</name><index pos:start="1227:47" pos:end="1227:50">[<expr pos:start="1227:48" pos:end="1227:49"><name pos:start="1227:48" pos:end="1227:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1227:53" pos:end="1227:62"><expr pos:start="1227:53" pos:end="1227:62"><name pos:start="1227:53" pos:end="1227:62"><name pos:start="1227:53" pos:end="1227:58">cpu_ir</name><index pos:start="1227:59" pos:end="1227:62">[<expr pos:start="1227:60" pos:end="1227:61"><name pos:start="1227:60" pos:end="1227:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1227:65" pos:end="1227:69"><expr pos:start="1227:65" pos:end="1227:69"><name pos:start="1227:65" pos:end="1227:69">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1229:25" pos:end="1229:45"><expr pos:start="1229:25" pos:end="1229:44"><call pos:start="1229:25" pos:end="1229:44"><name pos:start="1229:25" pos:end="1229:37">tcg_temp_free</name><argument_list pos:start="1229:38" pos:end="1229:44">(<argument pos:start="1229:39" pos:end="1229:43"><expr pos:start="1229:39" pos:end="1229:43"><name pos:start="1229:39" pos:end="1229:43">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1233:19" pos:end="1235:52">else<block type="pseudo" pos:start="1235:21" pos:end="1235:52"><block_content pos:start="1235:21" pos:end="1235:52">

                    <expr_stmt pos:start="1235:21" pos:end="1235:52"><expr pos:start="1235:21" pos:end="1235:51"><call pos:start="1235:21" pos:end="1235:51"><name pos:start="1235:21" pos:end="1235:36">tcg_gen_movi_i64</name><argument_list pos:start="1235:37" pos:end="1235:51">(<argument pos:start="1235:38" pos:end="1235:47"><expr pos:start="1235:38" pos:end="1235:47"><name pos:start="1235:38" pos:end="1235:47"><name pos:start="1235:38" pos:end="1235:43">cpu_ir</name><index pos:start="1235:44" pos:end="1235:47">[<expr pos:start="1235:45" pos:end="1235:46"><name pos:start="1235:45" pos:end="1235:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1235:50" pos:end="1235:50"><expr pos:start="1235:50" pos:end="1235:50"><literal type="number" pos:start="1235:50" pos:end="1235:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1239:13" pos:end="1239:18">break;</break>

        <case pos:start="1241:9" pos:end="1241:18">case <expr pos:start="1241:14" pos:end="1241:17"><literal type="number" pos:start="1241:14" pos:end="1241:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="1243:13" pos:end="1243:23">/* INSQL */</comment>

            <expr_stmt pos:start="1245:13" pos:end="1245:46"><expr pos:start="1245:13" pos:end="1245:45"><call pos:start="1245:13" pos:end="1245:45"><name pos:start="1245:13" pos:end="1245:21">gen_insql</name><argument_list pos:start="1245:22" pos:end="1245:45">(<argument pos:start="1245:23" pos:end="1245:24"><expr pos:start="1245:23" pos:end="1245:24"><name pos:start="1245:23" pos:end="1245:24">ra</name></expr></argument>, <argument pos:start="1245:27" pos:end="1245:28"><expr pos:start="1245:27" pos:end="1245:28"><name pos:start="1245:27" pos:end="1245:28">rb</name></expr></argument>, <argument pos:start="1245:31" pos:end="1245:32"><expr pos:start="1245:31" pos:end="1245:32"><name pos:start="1245:31" pos:end="1245:32">rc</name></expr></argument>, <argument pos:start="1245:35" pos:end="1245:39"><expr pos:start="1245:35" pos:end="1245:39"><name pos:start="1245:35" pos:end="1245:39">islit</name></expr></argument>, <argument pos:start="1245:42" pos:end="1245:44"><expr pos:start="1245:42" pos:end="1245:44"><name pos:start="1245:42" pos:end="1245:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1247:13" pos:end="1247:18">break;</break>

        <case pos:start="1249:9" pos:end="1249:18">case <expr pos:start="1249:14" pos:end="1249:17"><literal type="number" pos:start="1249:14" pos:end="1249:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1251:13" pos:end="1251:21">/* SRA */</comment>

            <if_stmt pos:start="1253:13" pos:end="1277:13"><if pos:start="1253:13" pos:end="1277:13">if <condition pos:start="1253:16" pos:end="1253:33">(<expr pos:start="1253:17" pos:end="1253:32"><call pos:start="1253:17" pos:end="1253:32"><name pos:start="1253:17" pos:end="1253:22">likely</name><argument_list pos:start="1253:23" pos:end="1253:32">(<argument pos:start="1253:24" pos:end="1253:31"><expr pos:start="1253:24" pos:end="1253:31"><name pos:start="1253:24" pos:end="1253:25">rc</name> <operator pos:start="1253:27" pos:end="1253:28">!=</operator> <literal type="number" pos:start="1253:30" pos:end="1253:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1253:35" pos:end="1277:13">{<block_content pos:start="1255:17" pos:end="1275:52">

                <if_stmt pos:start="1255:17" pos:end="1275:52"><if pos:start="1255:17" pos:end="1273:17">if <condition pos:start="1255:20" pos:end="1255:29">(<expr pos:start="1255:21" pos:end="1255:28"><name pos:start="1255:21" pos:end="1255:22">ra</name> <operator pos:start="1255:24" pos:end="1255:25">!=</operator> <literal type="number" pos:start="1255:27" pos:end="1255:28">31</literal></expr>)</condition> <block pos:start="1255:31" pos:end="1273:17">{<block_content pos:start="1257:21" pos:end="1271:21">

                    <if_stmt pos:start="1257:21" pos:end="1271:21"><if pos:start="1257:21" pos:end="1259:77">if <condition pos:start="1257:24" pos:end="1257:30">(<expr pos:start="1257:25" pos:end="1257:29"><name pos:start="1257:25" pos:end="1257:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1259:25" pos:end="1259:77"><block_content pos:start="1259:25" pos:end="1259:77">

                        <expr_stmt pos:start="1259:25" pos:end="1259:77"><expr pos:start="1259:25" pos:end="1259:76"><call pos:start="1259:25" pos:end="1259:76"><name pos:start="1259:25" pos:end="1259:40">tcg_gen_sari_i64</name><argument_list pos:start="1259:41" pos:end="1259:76">(<argument pos:start="1259:42" pos:end="1259:51"><expr pos:start="1259:42" pos:end="1259:51"><name pos:start="1259:42" pos:end="1259:51"><name pos:start="1259:42" pos:end="1259:47">cpu_ir</name><index pos:start="1259:48" pos:end="1259:51">[<expr pos:start="1259:49" pos:end="1259:50"><name pos:start="1259:49" pos:end="1259:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1259:54" pos:end="1259:63"><expr pos:start="1259:54" pos:end="1259:63"><name pos:start="1259:54" pos:end="1259:63"><name pos:start="1259:54" pos:end="1259:59">cpu_ir</name><index pos:start="1259:60" pos:end="1259:63">[<expr pos:start="1259:61" pos:end="1259:62"><name pos:start="1259:61" pos:end="1259:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1259:66" pos:end="1259:75"><expr pos:start="1259:66" pos:end="1259:75"><name pos:start="1259:66" pos:end="1259:68">lit</name> <operator pos:start="1259:70" pos:end="1259:70">&amp;</operator> <literal type="number" pos:start="1259:72" pos:end="1259:75">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1261:21" pos:end="1271:21">else <block pos:start="1261:26" pos:end="1271:21">{<block_content pos:start="1263:25" pos:end="1269:45">

                        <decl_stmt pos:start="1263:25" pos:end="1263:52"><decl pos:start="1263:25" pos:end="1263:51"><type pos:start="1263:25" pos:end="1263:28"><name pos:start="1263:25" pos:end="1263:28">TCGv</name></type> <name pos:start="1263:30" pos:end="1263:34">shift</name> <init pos:start="1263:36" pos:end="1263:51">= <expr pos:start="1263:38" pos:end="1263:51"><call pos:start="1263:38" pos:end="1263:51"><name pos:start="1263:38" pos:end="1263:49">tcg_temp_new</name><argument_list pos:start="1263:50" pos:end="1263:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="1265:25" pos:end="1265:66"><expr pos:start="1265:25" pos:end="1265:65"><call pos:start="1265:25" pos:end="1265:65"><name pos:start="1265:25" pos:end="1265:40">tcg_gen_andi_i64</name><argument_list pos:start="1265:41" pos:end="1265:65">(<argument pos:start="1265:42" pos:end="1265:46"><expr pos:start="1265:42" pos:end="1265:46"><name pos:start="1265:42" pos:end="1265:46">shift</name></expr></argument>, <argument pos:start="1265:49" pos:end="1265:58"><expr pos:start="1265:49" pos:end="1265:58"><name pos:start="1265:49" pos:end="1265:58"><name pos:start="1265:49" pos:end="1265:54">cpu_ir</name><index pos:start="1265:55" pos:end="1265:58">[<expr pos:start="1265:56" pos:end="1265:57"><name pos:start="1265:56" pos:end="1265:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="1265:61" pos:end="1265:64"><expr pos:start="1265:61" pos:end="1265:64"><literal type="number" pos:start="1265:61" pos:end="1265:64">0x3f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1267:25" pos:end="1267:71"><expr pos:start="1267:25" pos:end="1267:70"><call pos:start="1267:25" pos:end="1267:70"><name pos:start="1267:25" pos:end="1267:39">tcg_gen_sar_i64</name><argument_list pos:start="1267:40" pos:end="1267:70">(<argument pos:start="1267:41" pos:end="1267:50"><expr pos:start="1267:41" pos:end="1267:50"><name pos:start="1267:41" pos:end="1267:50"><name pos:start="1267:41" pos:end="1267:46">cpu_ir</name><index pos:start="1267:47" pos:end="1267:50">[<expr pos:start="1267:48" pos:end="1267:49"><name pos:start="1267:48" pos:end="1267:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1267:53" pos:end="1267:62"><expr pos:start="1267:53" pos:end="1267:62"><name pos:start="1267:53" pos:end="1267:62"><name pos:start="1267:53" pos:end="1267:58">cpu_ir</name><index pos:start="1267:59" pos:end="1267:62">[<expr pos:start="1267:60" pos:end="1267:61"><name pos:start="1267:60" pos:end="1267:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1267:65" pos:end="1267:69"><expr pos:start="1267:65" pos:end="1267:69"><name pos:start="1267:65" pos:end="1267:69">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1269:25" pos:end="1269:45"><expr pos:start="1269:25" pos:end="1269:44"><call pos:start="1269:25" pos:end="1269:44"><name pos:start="1269:25" pos:end="1269:37">tcg_temp_free</name><argument_list pos:start="1269:38" pos:end="1269:44">(<argument pos:start="1269:39" pos:end="1269:43"><expr pos:start="1269:39" pos:end="1269:43"><name pos:start="1269:39" pos:end="1269:43">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="1273:19" pos:end="1275:52">else<block type="pseudo" pos:start="1275:21" pos:end="1275:52"><block_content pos:start="1275:21" pos:end="1275:52">

                    <expr_stmt pos:start="1275:21" pos:end="1275:52"><expr pos:start="1275:21" pos:end="1275:51"><call pos:start="1275:21" pos:end="1275:51"><name pos:start="1275:21" pos:end="1275:36">tcg_gen_movi_i64</name><argument_list pos:start="1275:37" pos:end="1275:51">(<argument pos:start="1275:38" pos:end="1275:47"><expr pos:start="1275:38" pos:end="1275:47"><name pos:start="1275:38" pos:end="1275:47"><name pos:start="1275:38" pos:end="1275:43">cpu_ir</name><index pos:start="1275:44" pos:end="1275:47">[<expr pos:start="1275:45" pos:end="1275:46"><name pos:start="1275:45" pos:end="1275:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1275:50" pos:end="1275:50"><expr pos:start="1275:50" pos:end="1275:50"><literal type="number" pos:start="1275:50" pos:end="1275:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1279:13" pos:end="1279:18">break;</break>

        <case pos:start="1281:9" pos:end="1281:18">case <expr pos:start="1281:14" pos:end="1281:17"><literal type="number" pos:start="1281:14" pos:end="1281:17">0x52</literal></expr>:</case>

            <comment type="block" pos:start="1283:13" pos:end="1283:23">/* MSKWH */</comment>

            <expr_stmt pos:start="1285:13" pos:end="1285:46"><expr pos:start="1285:13" pos:end="1285:45"><call pos:start="1285:13" pos:end="1285:45"><name pos:start="1285:13" pos:end="1285:21">gen_mskwh</name><argument_list pos:start="1285:22" pos:end="1285:45">(<argument pos:start="1285:23" pos:end="1285:24"><expr pos:start="1285:23" pos:end="1285:24"><name pos:start="1285:23" pos:end="1285:24">ra</name></expr></argument>, <argument pos:start="1285:27" pos:end="1285:28"><expr pos:start="1285:27" pos:end="1285:28"><name pos:start="1285:27" pos:end="1285:28">rb</name></expr></argument>, <argument pos:start="1285:31" pos:end="1285:32"><expr pos:start="1285:31" pos:end="1285:32"><name pos:start="1285:31" pos:end="1285:32">rc</name></expr></argument>, <argument pos:start="1285:35" pos:end="1285:39"><expr pos:start="1285:35" pos:end="1285:39"><name pos:start="1285:35" pos:end="1285:39">islit</name></expr></argument>, <argument pos:start="1285:42" pos:end="1285:44"><expr pos:start="1285:42" pos:end="1285:44"><name pos:start="1285:42" pos:end="1285:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1287:13" pos:end="1287:18">break;</break>

        <case pos:start="1289:9" pos:end="1289:18">case <expr pos:start="1289:14" pos:end="1289:17"><literal type="number" pos:start="1289:14" pos:end="1289:17">0x57</literal></expr>:</case>

            <comment type="block" pos:start="1291:13" pos:end="1291:23">/* INSWH */</comment>

            <expr_stmt pos:start="1293:13" pos:end="1293:46"><expr pos:start="1293:13" pos:end="1293:45"><call pos:start="1293:13" pos:end="1293:45"><name pos:start="1293:13" pos:end="1293:21">gen_inswh</name><argument_list pos:start="1293:22" pos:end="1293:45">(<argument pos:start="1293:23" pos:end="1293:24"><expr pos:start="1293:23" pos:end="1293:24"><name pos:start="1293:23" pos:end="1293:24">ra</name></expr></argument>, <argument pos:start="1293:27" pos:end="1293:28"><expr pos:start="1293:27" pos:end="1293:28"><name pos:start="1293:27" pos:end="1293:28">rb</name></expr></argument>, <argument pos:start="1293:31" pos:end="1293:32"><expr pos:start="1293:31" pos:end="1293:32"><name pos:start="1293:31" pos:end="1293:32">rc</name></expr></argument>, <argument pos:start="1293:35" pos:end="1293:39"><expr pos:start="1293:35" pos:end="1293:39"><name pos:start="1293:35" pos:end="1293:39">islit</name></expr></argument>, <argument pos:start="1293:42" pos:end="1293:44"><expr pos:start="1293:42" pos:end="1293:44"><name pos:start="1293:42" pos:end="1293:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1295:13" pos:end="1295:18">break;</break>

        <case pos:start="1297:9" pos:end="1297:18">case <expr pos:start="1297:14" pos:end="1297:17"><literal type="number" pos:start="1297:14" pos:end="1297:17">0x5A</literal></expr>:</case>

            <comment type="block" pos:start="1299:13" pos:end="1299:23">/* EXTWH */</comment>

            <expr_stmt pos:start="1301:13" pos:end="1301:67"><expr pos:start="1301:13" pos:end="1301:66"><call pos:start="1301:13" pos:end="1301:66"><name pos:start="1301:13" pos:end="1301:21">gen_ext_h</name><argument_list pos:start="1301:22" pos:end="1301:66">(<argument pos:start="1301:23" pos:end="1301:41"><expr pos:start="1301:23" pos:end="1301:41"><operator pos:start="1301:23" pos:end="1301:23">&amp;</operator><name pos:start="1301:24" pos:end="1301:41">tcg_gen_ext16u_i64</name></expr></argument>, <argument pos:start="1301:44" pos:end="1301:45"><expr pos:start="1301:44" pos:end="1301:45"><name pos:start="1301:44" pos:end="1301:45">ra</name></expr></argument>, <argument pos:start="1301:48" pos:end="1301:49"><expr pos:start="1301:48" pos:end="1301:49"><name pos:start="1301:48" pos:end="1301:49">rb</name></expr></argument>, <argument pos:start="1301:52" pos:end="1301:53"><expr pos:start="1301:52" pos:end="1301:53"><name pos:start="1301:52" pos:end="1301:53">rc</name></expr></argument>, <argument pos:start="1301:56" pos:end="1301:60"><expr pos:start="1301:56" pos:end="1301:60"><name pos:start="1301:56" pos:end="1301:60">islit</name></expr></argument>, <argument pos:start="1301:63" pos:end="1301:65"><expr pos:start="1301:63" pos:end="1301:65"><name pos:start="1301:63" pos:end="1301:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1303:13" pos:end="1303:18">break;</break>

        <case pos:start="1305:9" pos:end="1305:18">case <expr pos:start="1305:14" pos:end="1305:17"><literal type="number" pos:start="1305:14" pos:end="1305:17">0x62</literal></expr>:</case>

            <comment type="block" pos:start="1307:13" pos:end="1307:23">/* MSKLH */</comment>

            <expr_stmt pos:start="1309:13" pos:end="1309:46"><expr pos:start="1309:13" pos:end="1309:45"><call pos:start="1309:13" pos:end="1309:45"><name pos:start="1309:13" pos:end="1309:21">gen_msklh</name><argument_list pos:start="1309:22" pos:end="1309:45">(<argument pos:start="1309:23" pos:end="1309:24"><expr pos:start="1309:23" pos:end="1309:24"><name pos:start="1309:23" pos:end="1309:24">ra</name></expr></argument>, <argument pos:start="1309:27" pos:end="1309:28"><expr pos:start="1309:27" pos:end="1309:28"><name pos:start="1309:27" pos:end="1309:28">rb</name></expr></argument>, <argument pos:start="1309:31" pos:end="1309:32"><expr pos:start="1309:31" pos:end="1309:32"><name pos:start="1309:31" pos:end="1309:32">rc</name></expr></argument>, <argument pos:start="1309:35" pos:end="1309:39"><expr pos:start="1309:35" pos:end="1309:39"><name pos:start="1309:35" pos:end="1309:39">islit</name></expr></argument>, <argument pos:start="1309:42" pos:end="1309:44"><expr pos:start="1309:42" pos:end="1309:44"><name pos:start="1309:42" pos:end="1309:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1311:13" pos:end="1311:18">break;</break>

        <case pos:start="1313:9" pos:end="1313:18">case <expr pos:start="1313:14" pos:end="1313:17"><literal type="number" pos:start="1313:14" pos:end="1313:17">0x67</literal></expr>:</case>

            <comment type="block" pos:start="1315:13" pos:end="1315:23">/* INSLH */</comment>

            <expr_stmt pos:start="1317:13" pos:end="1317:46"><expr pos:start="1317:13" pos:end="1317:45"><call pos:start="1317:13" pos:end="1317:45"><name pos:start="1317:13" pos:end="1317:21">gen_inslh</name><argument_list pos:start="1317:22" pos:end="1317:45">(<argument pos:start="1317:23" pos:end="1317:24"><expr pos:start="1317:23" pos:end="1317:24"><name pos:start="1317:23" pos:end="1317:24">ra</name></expr></argument>, <argument pos:start="1317:27" pos:end="1317:28"><expr pos:start="1317:27" pos:end="1317:28"><name pos:start="1317:27" pos:end="1317:28">rb</name></expr></argument>, <argument pos:start="1317:31" pos:end="1317:32"><expr pos:start="1317:31" pos:end="1317:32"><name pos:start="1317:31" pos:end="1317:32">rc</name></expr></argument>, <argument pos:start="1317:35" pos:end="1317:39"><expr pos:start="1317:35" pos:end="1317:39"><name pos:start="1317:35" pos:end="1317:39">islit</name></expr></argument>, <argument pos:start="1317:42" pos:end="1317:44"><expr pos:start="1317:42" pos:end="1317:44"><name pos:start="1317:42" pos:end="1317:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1319:13" pos:end="1319:18">break;</break>

        <case pos:start="1321:9" pos:end="1321:18">case <expr pos:start="1321:14" pos:end="1321:17"><literal type="number" pos:start="1321:14" pos:end="1321:17">0x6A</literal></expr>:</case>

            <comment type="block" pos:start="1323:13" pos:end="1323:23">/* EXTLH */</comment>

            <expr_stmt pos:start="1325:13" pos:end="1325:67"><expr pos:start="1325:13" pos:end="1325:66"><call pos:start="1325:13" pos:end="1325:66"><name pos:start="1325:13" pos:end="1325:21">gen_ext_h</name><argument_list pos:start="1325:22" pos:end="1325:66">(<argument pos:start="1325:23" pos:end="1325:41"><expr pos:start="1325:23" pos:end="1325:41"><operator pos:start="1325:23" pos:end="1325:23">&amp;</operator><name pos:start="1325:24" pos:end="1325:41">tcg_gen_ext16u_i64</name></expr></argument>, <argument pos:start="1325:44" pos:end="1325:45"><expr pos:start="1325:44" pos:end="1325:45"><name pos:start="1325:44" pos:end="1325:45">ra</name></expr></argument>, <argument pos:start="1325:48" pos:end="1325:49"><expr pos:start="1325:48" pos:end="1325:49"><name pos:start="1325:48" pos:end="1325:49">rb</name></expr></argument>, <argument pos:start="1325:52" pos:end="1325:53"><expr pos:start="1325:52" pos:end="1325:53"><name pos:start="1325:52" pos:end="1325:53">rc</name></expr></argument>, <argument pos:start="1325:56" pos:end="1325:60"><expr pos:start="1325:56" pos:end="1325:60"><name pos:start="1325:56" pos:end="1325:60">islit</name></expr></argument>, <argument pos:start="1325:63" pos:end="1325:65"><expr pos:start="1325:63" pos:end="1325:65"><name pos:start="1325:63" pos:end="1325:65">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1327:13" pos:end="1327:18">break;</break>

        <case pos:start="1329:9" pos:end="1329:18">case <expr pos:start="1329:14" pos:end="1329:17"><literal type="number" pos:start="1329:14" pos:end="1329:17">0x72</literal></expr>:</case>

            <comment type="block" pos:start="1331:13" pos:end="1331:23">/* MSKQH */</comment>

            <expr_stmt pos:start="1333:13" pos:end="1333:46"><expr pos:start="1333:13" pos:end="1333:45"><call pos:start="1333:13" pos:end="1333:45"><name pos:start="1333:13" pos:end="1333:21">gen_mskqh</name><argument_list pos:start="1333:22" pos:end="1333:45">(<argument pos:start="1333:23" pos:end="1333:24"><expr pos:start="1333:23" pos:end="1333:24"><name pos:start="1333:23" pos:end="1333:24">ra</name></expr></argument>, <argument pos:start="1333:27" pos:end="1333:28"><expr pos:start="1333:27" pos:end="1333:28"><name pos:start="1333:27" pos:end="1333:28">rb</name></expr></argument>, <argument pos:start="1333:31" pos:end="1333:32"><expr pos:start="1333:31" pos:end="1333:32"><name pos:start="1333:31" pos:end="1333:32">rc</name></expr></argument>, <argument pos:start="1333:35" pos:end="1333:39"><expr pos:start="1333:35" pos:end="1333:39"><name pos:start="1333:35" pos:end="1333:39">islit</name></expr></argument>, <argument pos:start="1333:42" pos:end="1333:44"><expr pos:start="1333:42" pos:end="1333:44"><name pos:start="1333:42" pos:end="1333:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1335:13" pos:end="1335:18">break;</break>

        <case pos:start="1337:9" pos:end="1337:18">case <expr pos:start="1337:14" pos:end="1337:17"><literal type="number" pos:start="1337:14" pos:end="1337:17">0x77</literal></expr>:</case>

            <comment type="block" pos:start="1339:13" pos:end="1339:23">/* INSQH */</comment>

            <expr_stmt pos:start="1341:13" pos:end="1341:46"><expr pos:start="1341:13" pos:end="1341:45"><call pos:start="1341:13" pos:end="1341:45"><name pos:start="1341:13" pos:end="1341:21">gen_insqh</name><argument_list pos:start="1341:22" pos:end="1341:45">(<argument pos:start="1341:23" pos:end="1341:24"><expr pos:start="1341:23" pos:end="1341:24"><name pos:start="1341:23" pos:end="1341:24">ra</name></expr></argument>, <argument pos:start="1341:27" pos:end="1341:28"><expr pos:start="1341:27" pos:end="1341:28"><name pos:start="1341:27" pos:end="1341:28">rb</name></expr></argument>, <argument pos:start="1341:31" pos:end="1341:32"><expr pos:start="1341:31" pos:end="1341:32"><name pos:start="1341:31" pos:end="1341:32">rc</name></expr></argument>, <argument pos:start="1341:35" pos:end="1341:39"><expr pos:start="1341:35" pos:end="1341:39"><name pos:start="1341:35" pos:end="1341:39">islit</name></expr></argument>, <argument pos:start="1341:42" pos:end="1341:44"><expr pos:start="1341:42" pos:end="1341:44"><name pos:start="1341:42" pos:end="1341:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1343:13" pos:end="1343:18">break;</break>

        <case pos:start="1345:9" pos:end="1345:18">case <expr pos:start="1345:14" pos:end="1345:17"><literal type="number" pos:start="1345:14" pos:end="1345:17">0x7A</literal></expr>:</case>

            <comment type="block" pos:start="1347:13" pos:end="1347:23">/* EXTQH */</comment>

            <expr_stmt pos:start="1349:13" pos:end="1349:52"><expr pos:start="1349:13" pos:end="1349:51"><call pos:start="1349:13" pos:end="1349:51"><name pos:start="1349:13" pos:end="1349:21">gen_ext_h</name><argument_list pos:start="1349:22" pos:end="1349:51">(<argument pos:start="1349:23" pos:end="1349:26"><expr pos:start="1349:23" pos:end="1349:26"><name pos:start="1349:23" pos:end="1349:26">NULL</name></expr></argument>, <argument pos:start="1349:29" pos:end="1349:30"><expr pos:start="1349:29" pos:end="1349:30"><name pos:start="1349:29" pos:end="1349:30">ra</name></expr></argument>, <argument pos:start="1349:33" pos:end="1349:34"><expr pos:start="1349:33" pos:end="1349:34"><name pos:start="1349:33" pos:end="1349:34">rb</name></expr></argument>, <argument pos:start="1349:37" pos:end="1349:38"><expr pos:start="1349:37" pos:end="1349:38"><name pos:start="1349:37" pos:end="1349:38">rc</name></expr></argument>, <argument pos:start="1349:41" pos:end="1349:45"><expr pos:start="1349:41" pos:end="1349:45"><name pos:start="1349:41" pos:end="1349:45">islit</name></expr></argument>, <argument pos:start="1349:48" pos:end="1349:50"><expr pos:start="1349:48" pos:end="1349:50"><name pos:start="1349:48" pos:end="1349:50">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1351:13" pos:end="1351:18">break;</break>

        <default pos:start="1353:9" pos:end="1353:16">default:</default>

            <goto pos:start="1355:13" pos:end="1355:29">goto <name pos:start="1355:18" pos:end="1355:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1359:9" pos:end="1359:14">break;</break>

    <case pos:start="1361:5" pos:end="1361:14">case <expr pos:start="1361:10" pos:end="1361:13"><literal type="number" pos:start="1361:10" pos:end="1361:13">0x13</literal></expr>:</case>

        <switch pos:start="1363:9" pos:end="1443:9">switch <condition pos:start="1363:16" pos:end="1363:20">(<expr pos:start="1363:17" pos:end="1363:19"><name pos:start="1363:17" pos:end="1363:19">fn7</name></expr>)</condition> <block pos:start="1363:22" pos:end="1443:9">{<block_content pos:start="1365:9" pos:end="1441:29">

        <case pos:start="1365:9" pos:end="1365:18">case <expr pos:start="1365:14" pos:end="1365:17"><literal type="number" pos:start="1365:14" pos:end="1365:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1367:13" pos:end="1367:22">/* MULL */</comment>

            <if_stmt pos:start="1369:13" pos:end="1389:13"><if pos:start="1369:13" pos:end="1389:13">if <condition pos:start="1369:16" pos:end="1369:33">(<expr pos:start="1369:17" pos:end="1369:32"><call pos:start="1369:17" pos:end="1369:32"><name pos:start="1369:17" pos:end="1369:22">likely</name><argument_list pos:start="1369:23" pos:end="1369:32">(<argument pos:start="1369:24" pos:end="1369:31"><expr pos:start="1369:24" pos:end="1369:31"><name pos:start="1369:24" pos:end="1369:25">rc</name> <operator pos:start="1369:27" pos:end="1369:28">!=</operator> <literal type="number" pos:start="1369:30" pos:end="1369:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1369:35" pos:end="1389:13">{<block_content pos:start="1371:17" pos:end="1387:17">

                <if_stmt pos:start="1371:17" pos:end="1387:17"><if pos:start="1371:17" pos:end="1373:52">if <condition pos:start="1371:20" pos:end="1371:29">(<expr pos:start="1371:21" pos:end="1371:28"><name pos:start="1371:21" pos:end="1371:22">ra</name> <operator pos:start="1371:24" pos:end="1371:25">==</operator> <literal type="number" pos:start="1371:27" pos:end="1371:28">31</literal></expr>)</condition><block type="pseudo" pos:start="1373:21" pos:end="1373:52"><block_content pos:start="1373:21" pos:end="1373:52">

                    <expr_stmt pos:start="1373:21" pos:end="1373:52"><expr pos:start="1373:21" pos:end="1373:51"><call pos:start="1373:21" pos:end="1373:51"><name pos:start="1373:21" pos:end="1373:36">tcg_gen_movi_i64</name><argument_list pos:start="1373:37" pos:end="1373:51">(<argument pos:start="1373:38" pos:end="1373:47"><expr pos:start="1373:38" pos:end="1373:47"><name pos:start="1373:38" pos:end="1373:47"><name pos:start="1373:38" pos:end="1373:43">cpu_ir</name><index pos:start="1373:44" pos:end="1373:47">[<expr pos:start="1373:45" pos:end="1373:46"><name pos:start="1373:45" pos:end="1373:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1373:50" pos:end="1373:50"><expr pos:start="1373:50" pos:end="1373:50"><literal type="number" pos:start="1373:50" pos:end="1373:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1375:17" pos:end="1387:17">else <block pos:start="1375:22" pos:end="1387:17">{<block_content pos:start="1377:21" pos:end="1385:63">

                    <if_stmt pos:start="1377:21" pos:end="1383:76"><if pos:start="1377:21" pos:end="1379:70">if <condition pos:start="1377:24" pos:end="1377:30">(<expr pos:start="1377:25" pos:end="1377:29"><name pos:start="1377:25" pos:end="1377:29">islit</name></expr>)</condition><block type="pseudo" pos:start="1379:25" pos:end="1379:70"><block_content pos:start="1379:25" pos:end="1379:70">

                        <expr_stmt pos:start="1379:25" pos:end="1379:70"><expr pos:start="1379:25" pos:end="1379:69"><call pos:start="1379:25" pos:end="1379:69"><name pos:start="1379:25" pos:end="1379:40">tcg_gen_muli_i64</name><argument_list pos:start="1379:41" pos:end="1379:69">(<argument pos:start="1379:42" pos:end="1379:51"><expr pos:start="1379:42" pos:end="1379:51"><name pos:start="1379:42" pos:end="1379:51"><name pos:start="1379:42" pos:end="1379:47">cpu_ir</name><index pos:start="1379:48" pos:end="1379:51">[<expr pos:start="1379:49" pos:end="1379:50"><name pos:start="1379:49" pos:end="1379:50">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1379:54" pos:end="1379:63"><expr pos:start="1379:54" pos:end="1379:63"><name pos:start="1379:54" pos:end="1379:63"><name pos:start="1379:54" pos:end="1379:59">cpu_ir</name><index pos:start="1379:60" pos:end="1379:63">[<expr pos:start="1379:61" pos:end="1379:62"><name pos:start="1379:61" pos:end="1379:62">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1379:66" pos:end="1379:68"><expr pos:start="1379:66" pos:end="1379:68"><name pos:start="1379:66" pos:end="1379:68">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="1381:21" pos:end="1383:76">else<block type="pseudo" pos:start="1383:25" pos:end="1383:76"><block_content pos:start="1383:25" pos:end="1383:76">

                        <expr_stmt pos:start="1383:25" pos:end="1383:76"><expr pos:start="1383:25" pos:end="1383:75"><call pos:start="1383:25" pos:end="1383:75"><name pos:start="1383:25" pos:end="1383:39">tcg_gen_mul_i64</name><argument_list pos:start="1383:40" pos:end="1383:75">(<argument pos:start="1383:41" pos:end="1383:50"><expr pos:start="1383:41" pos:end="1383:50"><name pos:start="1383:41" pos:end="1383:50"><name pos:start="1383:41" pos:end="1383:46">cpu_ir</name><index pos:start="1383:47" pos:end="1383:50">[<expr pos:start="1383:48" pos:end="1383:49"><name pos:start="1383:48" pos:end="1383:49">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1383:53" pos:end="1383:62"><expr pos:start="1383:53" pos:end="1383:62"><name pos:start="1383:53" pos:end="1383:62"><name pos:start="1383:53" pos:end="1383:58">cpu_ir</name><index pos:start="1383:59" pos:end="1383:62">[<expr pos:start="1383:60" pos:end="1383:61"><name pos:start="1383:60" pos:end="1383:61">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1383:65" pos:end="1383:74"><expr pos:start="1383:65" pos:end="1383:74"><name pos:start="1383:65" pos:end="1383:74"><name pos:start="1383:65" pos:end="1383:70">cpu_ir</name><index pos:start="1383:71" pos:end="1383:74">[<expr pos:start="1383:72" pos:end="1383:73"><name pos:start="1383:72" pos:end="1383:73">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="1385:21" pos:end="1385:63"><expr pos:start="1385:21" pos:end="1385:62"><call pos:start="1385:21" pos:end="1385:62"><name pos:start="1385:21" pos:end="1385:38">tcg_gen_ext32s_i64</name><argument_list pos:start="1385:39" pos:end="1385:62">(<argument pos:start="1385:40" pos:end="1385:49"><expr pos:start="1385:40" pos:end="1385:49"><name pos:start="1385:40" pos:end="1385:49"><name pos:start="1385:40" pos:end="1385:45">cpu_ir</name><index pos:start="1385:46" pos:end="1385:49">[<expr pos:start="1385:47" pos:end="1385:48"><name pos:start="1385:47" pos:end="1385:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1385:52" pos:end="1385:61"><expr pos:start="1385:52" pos:end="1385:61"><name pos:start="1385:52" pos:end="1385:61"><name pos:start="1385:52" pos:end="1385:57">cpu_ir</name><index pos:start="1385:58" pos:end="1385:61">[<expr pos:start="1385:59" pos:end="1385:60"><name pos:start="1385:59" pos:end="1385:60">rc</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1391:13" pos:end="1391:18">break;</break>

        <case pos:start="1393:9" pos:end="1393:18">case <expr pos:start="1393:14" pos:end="1393:17"><literal type="number" pos:start="1393:14" pos:end="1393:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1395:13" pos:end="1395:22">/* MULQ */</comment>

            <if_stmt pos:start="1397:13" pos:end="1411:13"><if pos:start="1397:13" pos:end="1411:13">if <condition pos:start="1397:16" pos:end="1397:33">(<expr pos:start="1397:17" pos:end="1397:32"><call pos:start="1397:17" pos:end="1397:32"><name pos:start="1397:17" pos:end="1397:22">likely</name><argument_list pos:start="1397:23" pos:end="1397:32">(<argument pos:start="1397:24" pos:end="1397:31"><expr pos:start="1397:24" pos:end="1397:31"><name pos:start="1397:24" pos:end="1397:25">rc</name> <operator pos:start="1397:27" pos:end="1397:28">!=</operator> <literal type="number" pos:start="1397:30" pos:end="1397:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1397:35" pos:end="1411:13">{<block_content pos:start="1399:17" pos:end="1409:72">

                <if_stmt pos:start="1399:17" pos:end="1409:72"><if pos:start="1399:17" pos:end="1401:52">if <condition pos:start="1399:20" pos:end="1399:29">(<expr pos:start="1399:21" pos:end="1399:28"><name pos:start="1399:21" pos:end="1399:22">ra</name> <operator pos:start="1399:24" pos:end="1399:25">==</operator> <literal type="number" pos:start="1399:27" pos:end="1399:28">31</literal></expr>)</condition><block type="pseudo" pos:start="1401:21" pos:end="1401:52"><block_content pos:start="1401:21" pos:end="1401:52">

                    <expr_stmt pos:start="1401:21" pos:end="1401:52"><expr pos:start="1401:21" pos:end="1401:51"><call pos:start="1401:21" pos:end="1401:51"><name pos:start="1401:21" pos:end="1401:36">tcg_gen_movi_i64</name><argument_list pos:start="1401:37" pos:end="1401:51">(<argument pos:start="1401:38" pos:end="1401:47"><expr pos:start="1401:38" pos:end="1401:47"><name pos:start="1401:38" pos:end="1401:47"><name pos:start="1401:38" pos:end="1401:43">cpu_ir</name><index pos:start="1401:44" pos:end="1401:47">[<expr pos:start="1401:45" pos:end="1401:46"><name pos:start="1401:45" pos:end="1401:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1401:50" pos:end="1401:50"><expr pos:start="1401:50" pos:end="1401:50"><literal type="number" pos:start="1401:50" pos:end="1401:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="1403:17" pos:end="1405:66">else if <condition pos:start="1403:25" pos:end="1403:31">(<expr pos:start="1403:26" pos:end="1403:30"><name pos:start="1403:26" pos:end="1403:30">islit</name></expr>)</condition><block type="pseudo" pos:start="1405:21" pos:end="1405:66"><block_content pos:start="1405:21" pos:end="1405:66">

                    <expr_stmt pos:start="1405:21" pos:end="1405:66"><expr pos:start="1405:21" pos:end="1405:65"><call pos:start="1405:21" pos:end="1405:65"><name pos:start="1405:21" pos:end="1405:36">tcg_gen_muli_i64</name><argument_list pos:start="1405:37" pos:end="1405:65">(<argument pos:start="1405:38" pos:end="1405:47"><expr pos:start="1405:38" pos:end="1405:47"><name pos:start="1405:38" pos:end="1405:47"><name pos:start="1405:38" pos:end="1405:43">cpu_ir</name><index pos:start="1405:44" pos:end="1405:47">[<expr pos:start="1405:45" pos:end="1405:46"><name pos:start="1405:45" pos:end="1405:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1405:50" pos:end="1405:59"><expr pos:start="1405:50" pos:end="1405:59"><name pos:start="1405:50" pos:end="1405:59"><name pos:start="1405:50" pos:end="1405:55">cpu_ir</name><index pos:start="1405:56" pos:end="1405:59">[<expr pos:start="1405:57" pos:end="1405:58"><name pos:start="1405:57" pos:end="1405:58">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1405:62" pos:end="1405:64"><expr pos:start="1405:62" pos:end="1405:64"><name pos:start="1405:62" pos:end="1405:64">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1407:17" pos:end="1409:72">else<block type="pseudo" pos:start="1409:21" pos:end="1409:72"><block_content pos:start="1409:21" pos:end="1409:72">

                    <expr_stmt pos:start="1409:21" pos:end="1409:72"><expr pos:start="1409:21" pos:end="1409:71"><call pos:start="1409:21" pos:end="1409:71"><name pos:start="1409:21" pos:end="1409:35">tcg_gen_mul_i64</name><argument_list pos:start="1409:36" pos:end="1409:71">(<argument pos:start="1409:37" pos:end="1409:46"><expr pos:start="1409:37" pos:end="1409:46"><name pos:start="1409:37" pos:end="1409:46"><name pos:start="1409:37" pos:end="1409:42">cpu_ir</name><index pos:start="1409:43" pos:end="1409:46">[<expr pos:start="1409:44" pos:end="1409:45"><name pos:start="1409:44" pos:end="1409:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1409:49" pos:end="1409:58"><expr pos:start="1409:49" pos:end="1409:58"><name pos:start="1409:49" pos:end="1409:58"><name pos:start="1409:49" pos:end="1409:54">cpu_ir</name><index pos:start="1409:55" pos:end="1409:58">[<expr pos:start="1409:56" pos:end="1409:57"><name pos:start="1409:56" pos:end="1409:57">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="1409:61" pos:end="1409:70"><expr pos:start="1409:61" pos:end="1409:70"><name pos:start="1409:61" pos:end="1409:70"><name pos:start="1409:61" pos:end="1409:66">cpu_ir</name><index pos:start="1409:67" pos:end="1409:70">[<expr pos:start="1409:68" pos:end="1409:69"><name pos:start="1409:68" pos:end="1409:69">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1413:13" pos:end="1413:18">break;</break>

        <case pos:start="1415:9" pos:end="1415:18">case <expr pos:start="1415:14" pos:end="1415:17"><literal type="number" pos:start="1415:14" pos:end="1415:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="1417:13" pos:end="1417:23">/* UMULH */</comment>

            <expr_stmt pos:start="1419:13" pos:end="1419:46"><expr pos:start="1419:13" pos:end="1419:45"><call pos:start="1419:13" pos:end="1419:45"><name pos:start="1419:13" pos:end="1419:21">gen_umulh</name><argument_list pos:start="1419:22" pos:end="1419:45">(<argument pos:start="1419:23" pos:end="1419:24"><expr pos:start="1419:23" pos:end="1419:24"><name pos:start="1419:23" pos:end="1419:24">ra</name></expr></argument>, <argument pos:start="1419:27" pos:end="1419:28"><expr pos:start="1419:27" pos:end="1419:28"><name pos:start="1419:27" pos:end="1419:28">rb</name></expr></argument>, <argument pos:start="1419:31" pos:end="1419:32"><expr pos:start="1419:31" pos:end="1419:32"><name pos:start="1419:31" pos:end="1419:32">rc</name></expr></argument>, <argument pos:start="1419:35" pos:end="1419:39"><expr pos:start="1419:35" pos:end="1419:39"><name pos:start="1419:35" pos:end="1419:39">islit</name></expr></argument>, <argument pos:start="1419:42" pos:end="1419:44"><expr pos:start="1419:42" pos:end="1419:44"><name pos:start="1419:42" pos:end="1419:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1421:13" pos:end="1421:18">break;</break>

        <case pos:start="1423:9" pos:end="1423:18">case <expr pos:start="1423:14" pos:end="1423:17"><literal type="number" pos:start="1423:14" pos:end="1423:17">0x40</literal></expr>:</case>

            <comment type="block" pos:start="1425:13" pos:end="1425:24">/* MULL/V */</comment>

            <expr_stmt pos:start="1427:13" pos:end="1427:46"><expr pos:start="1427:13" pos:end="1427:45"><call pos:start="1427:13" pos:end="1427:45"><name pos:start="1427:13" pos:end="1427:21">gen_mullv</name><argument_list pos:start="1427:22" pos:end="1427:45">(<argument pos:start="1427:23" pos:end="1427:24"><expr pos:start="1427:23" pos:end="1427:24"><name pos:start="1427:23" pos:end="1427:24">ra</name></expr></argument>, <argument pos:start="1427:27" pos:end="1427:28"><expr pos:start="1427:27" pos:end="1427:28"><name pos:start="1427:27" pos:end="1427:28">rb</name></expr></argument>, <argument pos:start="1427:31" pos:end="1427:32"><expr pos:start="1427:31" pos:end="1427:32"><name pos:start="1427:31" pos:end="1427:32">rc</name></expr></argument>, <argument pos:start="1427:35" pos:end="1427:39"><expr pos:start="1427:35" pos:end="1427:39"><name pos:start="1427:35" pos:end="1427:39">islit</name></expr></argument>, <argument pos:start="1427:42" pos:end="1427:44"><expr pos:start="1427:42" pos:end="1427:44"><name pos:start="1427:42" pos:end="1427:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1429:13" pos:end="1429:18">break;</break>

        <case pos:start="1431:9" pos:end="1431:18">case <expr pos:start="1431:14" pos:end="1431:17"><literal type="number" pos:start="1431:14" pos:end="1431:17">0x60</literal></expr>:</case>

            <comment type="block" pos:start="1433:13" pos:end="1433:24">/* MULQ/V */</comment>

            <expr_stmt pos:start="1435:13" pos:end="1435:46"><expr pos:start="1435:13" pos:end="1435:45"><call pos:start="1435:13" pos:end="1435:45"><name pos:start="1435:13" pos:end="1435:21">gen_mulqv</name><argument_list pos:start="1435:22" pos:end="1435:45">(<argument pos:start="1435:23" pos:end="1435:24"><expr pos:start="1435:23" pos:end="1435:24"><name pos:start="1435:23" pos:end="1435:24">ra</name></expr></argument>, <argument pos:start="1435:27" pos:end="1435:28"><expr pos:start="1435:27" pos:end="1435:28"><name pos:start="1435:27" pos:end="1435:28">rb</name></expr></argument>, <argument pos:start="1435:31" pos:end="1435:32"><expr pos:start="1435:31" pos:end="1435:32"><name pos:start="1435:31" pos:end="1435:32">rc</name></expr></argument>, <argument pos:start="1435:35" pos:end="1435:39"><expr pos:start="1435:35" pos:end="1435:39"><name pos:start="1435:35" pos:end="1435:39">islit</name></expr></argument>, <argument pos:start="1435:42" pos:end="1435:44"><expr pos:start="1435:42" pos:end="1435:44"><name pos:start="1435:42" pos:end="1435:44">lit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1437:13" pos:end="1437:18">break;</break>

        <default pos:start="1439:9" pos:end="1439:16">default:</default>

            <goto pos:start="1441:13" pos:end="1441:29">goto <name pos:start="1441:18" pos:end="1441:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1445:9" pos:end="1445:14">break;</break>

    <case pos:start="1447:5" pos:end="1447:14">case <expr pos:start="1447:10" pos:end="1447:13"><literal type="number" pos:start="1447:10" pos:end="1447:13">0x14</literal></expr>:</case>

        <switch pos:start="1449:9" pos:end="1581:9">switch <condition pos:start="1449:16" pos:end="1449:21">(<expr pos:start="1449:17" pos:end="1449:20"><name pos:start="1449:17" pos:end="1449:20">fpfn</name></expr>)</condition> <block pos:start="1449:23" pos:end="1581:9">{<block_content pos:start="1451:9" pos:end="1579:29"> <comment type="block" pos:start="1449:25" pos:end="1449:40">/* f11 &amp; 0x3F */</comment>

        <case pos:start="1451:9" pos:end="1451:18">case <expr pos:start="1451:14" pos:end="1451:17"><literal type="number" pos:start="1451:14" pos:end="1451:17">0x04</literal></expr>:</case>

            <comment type="block" pos:start="1453:13" pos:end="1453:23">/* ITOFS */</comment>

            <if_stmt pos:start="1455:13" pos:end="1457:33"><if pos:start="1455:13" pos:end="1457:33">if <condition pos:start="1455:16" pos:end="1455:42">(<expr pos:start="1455:17" pos:end="1455:41"><operator pos:start="1455:17" pos:end="1455:17">!</operator><operator pos:start="1455:18" pos:end="1455:18">(</operator><name pos:start="1455:19" pos:end="1455:28"><name pos:start="1455:19" pos:end="1455:21">ctx</name><operator pos:start="1455:22" pos:end="1455:23">-&gt;</operator><name pos:start="1455:24" pos:end="1455:28">amask</name></name> <operator pos:start="1455:30" pos:end="1455:30">&amp;</operator> <name pos:start="1455:32" pos:end="1455:40">AMASK_FIX</name><operator pos:start="1455:41" pos:end="1455:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1457:17" pos:end="1457:33"><block_content pos:start="1457:17" pos:end="1457:33">

                <goto pos:start="1457:17" pos:end="1457:33">goto <name pos:start="1457:22" pos:end="1457:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1459:13" pos:end="1475:13"><if pos:start="1459:13" pos:end="1475:13">if <condition pos:start="1459:16" pos:end="1459:33">(<expr pos:start="1459:17" pos:end="1459:32"><call pos:start="1459:17" pos:end="1459:32"><name pos:start="1459:17" pos:end="1459:22">likely</name><argument_list pos:start="1459:23" pos:end="1459:32">(<argument pos:start="1459:24" pos:end="1459:31"><expr pos:start="1459:24" pos:end="1459:31"><name pos:start="1459:24" pos:end="1459:25">rc</name> <operator pos:start="1459:27" pos:end="1459:28">!=</operator> <literal type="number" pos:start="1459:30" pos:end="1459:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1459:35" pos:end="1475:13">{<block_content pos:start="1461:17" pos:end="1473:53">

                <if_stmt pos:start="1461:17" pos:end="1473:53"><if pos:start="1461:17" pos:end="1471:17">if <condition pos:start="1461:20" pos:end="1461:29">(<expr pos:start="1461:21" pos:end="1461:28"><name pos:start="1461:21" pos:end="1461:22">ra</name> <operator pos:start="1461:24" pos:end="1461:25">!=</operator> <literal type="number" pos:start="1461:27" pos:end="1461:28">31</literal></expr>)</condition> <block pos:start="1461:31" pos:end="1471:17">{<block_content pos:start="1463:21" pos:end="1469:43">

                    <decl_stmt pos:start="1463:21" pos:end="1463:54"><decl pos:start="1463:21" pos:end="1463:53"><type pos:start="1463:21" pos:end="1463:28"><name pos:start="1463:21" pos:end="1463:28">TCGv_i32</name></type> <name pos:start="1463:30" pos:end="1463:32">tmp</name> <init pos:start="1463:34" pos:end="1463:53">= <expr pos:start="1463:36" pos:end="1463:53"><call pos:start="1463:36" pos:end="1463:53"><name pos:start="1463:36" pos:end="1463:51">tcg_temp_new_i32</name><argument_list pos:start="1463:52" pos:end="1463:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1465:21" pos:end="1465:59"><expr pos:start="1465:21" pos:end="1465:58"><call pos:start="1465:21" pos:end="1465:58"><name pos:start="1465:21" pos:end="1465:41">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1465:42" pos:end="1465:58">(<argument pos:start="1465:43" pos:end="1465:45"><expr pos:start="1465:43" pos:end="1465:45"><name pos:start="1465:43" pos:end="1465:45">tmp</name></expr></argument>, <argument pos:start="1465:48" pos:end="1465:57"><expr pos:start="1465:48" pos:end="1465:57"><name pos:start="1465:48" pos:end="1465:57"><name pos:start="1465:48" pos:end="1465:53">cpu_ir</name><index pos:start="1465:54" pos:end="1465:57">[<expr pos:start="1465:55" pos:end="1465:56"><name pos:start="1465:55" pos:end="1465:56">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1467:21" pos:end="1467:61"><expr pos:start="1467:21" pos:end="1467:60"><call pos:start="1467:21" pos:end="1467:60"><name pos:start="1467:21" pos:end="1467:42">gen_helper_memory_to_s</name><argument_list pos:start="1467:43" pos:end="1467:60">(<argument pos:start="1467:44" pos:end="1467:54"><expr pos:start="1467:44" pos:end="1467:54"><name pos:start="1467:44" pos:end="1467:54"><name pos:start="1467:44" pos:end="1467:50">cpu_fir</name><index pos:start="1467:51" pos:end="1467:54">[<expr pos:start="1467:52" pos:end="1467:53"><name pos:start="1467:52" pos:end="1467:53">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1467:57" pos:end="1467:59"><expr pos:start="1467:57" pos:end="1467:59"><name pos:start="1467:57" pos:end="1467:59">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1469:21" pos:end="1469:43"><expr pos:start="1469:21" pos:end="1469:42"><call pos:start="1469:21" pos:end="1469:42"><name pos:start="1469:21" pos:end="1469:37">tcg_temp_free_i32</name><argument_list pos:start="1469:38" pos:end="1469:42">(<argument pos:start="1469:39" pos:end="1469:41"><expr pos:start="1469:39" pos:end="1469:41"><name pos:start="1469:39" pos:end="1469:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1471:19" pos:end="1473:53">else<block type="pseudo" pos:start="1473:21" pos:end="1473:53"><block_content pos:start="1473:21" pos:end="1473:53">

                    <expr_stmt pos:start="1473:21" pos:end="1473:53"><expr pos:start="1473:21" pos:end="1473:52"><call pos:start="1473:21" pos:end="1473:52"><name pos:start="1473:21" pos:end="1473:36">tcg_gen_movi_i64</name><argument_list pos:start="1473:37" pos:end="1473:52">(<argument pos:start="1473:38" pos:end="1473:48"><expr pos:start="1473:38" pos:end="1473:48"><name pos:start="1473:38" pos:end="1473:48"><name pos:start="1473:38" pos:end="1473:44">cpu_fir</name><index pos:start="1473:45" pos:end="1473:48">[<expr pos:start="1473:46" pos:end="1473:47"><name pos:start="1473:46" pos:end="1473:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1473:51" pos:end="1473:51"><expr pos:start="1473:51" pos:end="1473:51"><literal type="number" pos:start="1473:51" pos:end="1473:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1477:13" pos:end="1477:18">break;</break>

        <case pos:start="1479:9" pos:end="1479:18">case <expr pos:start="1479:14" pos:end="1479:17"><literal type="number" pos:start="1479:14" pos:end="1479:17">0x0A</literal></expr>:</case>

            <comment type="block" pos:start="1481:13" pos:end="1481:23">/* SQRTF */</comment>

            <if_stmt pos:start="1483:13" pos:end="1485:33"><if pos:start="1483:13" pos:end="1485:33">if <condition pos:start="1483:16" pos:end="1483:42">(<expr pos:start="1483:17" pos:end="1483:41"><operator pos:start="1483:17" pos:end="1483:17">!</operator><operator pos:start="1483:18" pos:end="1483:18">(</operator><name pos:start="1483:19" pos:end="1483:28"><name pos:start="1483:19" pos:end="1483:21">ctx</name><operator pos:start="1483:22" pos:end="1483:23">-&gt;</operator><name pos:start="1483:24" pos:end="1483:28">amask</name></name> <operator pos:start="1483:30" pos:end="1483:30">&amp;</operator> <name pos:start="1483:32" pos:end="1483:40">AMASK_FIX</name><operator pos:start="1483:41" pos:end="1483:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1485:17" pos:end="1485:33"><block_content pos:start="1485:17" pos:end="1485:33">

                <goto pos:start="1485:17" pos:end="1485:33">goto <name pos:start="1485:22" pos:end="1485:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1487:13" pos:end="1487:31"><expr pos:start="1487:13" pos:end="1487:30"><call pos:start="1487:13" pos:end="1487:30"><name pos:start="1487:13" pos:end="1487:22">gen_fsqrtf</name><argument_list pos:start="1487:23" pos:end="1487:30">(<argument pos:start="1487:24" pos:end="1487:25"><expr pos:start="1487:24" pos:end="1487:25"><name pos:start="1487:24" pos:end="1487:25">rb</name></expr></argument>, <argument pos:start="1487:28" pos:end="1487:29"><expr pos:start="1487:28" pos:end="1487:29"><name pos:start="1487:28" pos:end="1487:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1489:13" pos:end="1489:18">break;</break>

        <case pos:start="1491:9" pos:end="1491:18">case <expr pos:start="1491:14" pos:end="1491:17"><literal type="number" pos:start="1491:14" pos:end="1491:17">0x0B</literal></expr>:</case>

            <comment type="block" pos:start="1493:13" pos:end="1493:23">/* SQRTS */</comment>

            <if_stmt pos:start="1495:13" pos:end="1497:33"><if pos:start="1495:13" pos:end="1497:33">if <condition pos:start="1495:16" pos:end="1495:42">(<expr pos:start="1495:17" pos:end="1495:41"><operator pos:start="1495:17" pos:end="1495:17">!</operator><operator pos:start="1495:18" pos:end="1495:18">(</operator><name pos:start="1495:19" pos:end="1495:28"><name pos:start="1495:19" pos:end="1495:21">ctx</name><operator pos:start="1495:22" pos:end="1495:23">-&gt;</operator><name pos:start="1495:24" pos:end="1495:28">amask</name></name> <operator pos:start="1495:30" pos:end="1495:30">&amp;</operator> <name pos:start="1495:32" pos:end="1495:40">AMASK_FIX</name><operator pos:start="1495:41" pos:end="1495:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1497:17" pos:end="1497:33"><block_content pos:start="1497:17" pos:end="1497:33">

                <goto pos:start="1497:17" pos:end="1497:33">goto <name pos:start="1497:22" pos:end="1497:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1499:13" pos:end="1499:31"><expr pos:start="1499:13" pos:end="1499:30"><call pos:start="1499:13" pos:end="1499:30"><name pos:start="1499:13" pos:end="1499:22">gen_fsqrts</name><argument_list pos:start="1499:23" pos:end="1499:30">(<argument pos:start="1499:24" pos:end="1499:25"><expr pos:start="1499:24" pos:end="1499:25"><name pos:start="1499:24" pos:end="1499:25">rb</name></expr></argument>, <argument pos:start="1499:28" pos:end="1499:29"><expr pos:start="1499:28" pos:end="1499:29"><name pos:start="1499:28" pos:end="1499:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1501:13" pos:end="1501:18">break;</break>

        <case pos:start="1503:9" pos:end="1503:18">case <expr pos:start="1503:14" pos:end="1503:17"><literal type="number" pos:start="1503:14" pos:end="1503:17">0x14</literal></expr>:</case>

            <comment type="block" pos:start="1505:13" pos:end="1505:23">/* ITOFF */</comment>

            <if_stmt pos:start="1507:13" pos:end="1509:33"><if pos:start="1507:13" pos:end="1509:33">if <condition pos:start="1507:16" pos:end="1507:42">(<expr pos:start="1507:17" pos:end="1507:41"><operator pos:start="1507:17" pos:end="1507:17">!</operator><operator pos:start="1507:18" pos:end="1507:18">(</operator><name pos:start="1507:19" pos:end="1507:28"><name pos:start="1507:19" pos:end="1507:21">ctx</name><operator pos:start="1507:22" pos:end="1507:23">-&gt;</operator><name pos:start="1507:24" pos:end="1507:28">amask</name></name> <operator pos:start="1507:30" pos:end="1507:30">&amp;</operator> <name pos:start="1507:32" pos:end="1507:40">AMASK_FIX</name><operator pos:start="1507:41" pos:end="1507:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1509:17" pos:end="1509:33"><block_content pos:start="1509:17" pos:end="1509:33">

                <goto pos:start="1509:17" pos:end="1509:33">goto <name pos:start="1509:22" pos:end="1509:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1511:13" pos:end="1527:13"><if pos:start="1511:13" pos:end="1527:13">if <condition pos:start="1511:16" pos:end="1511:33">(<expr pos:start="1511:17" pos:end="1511:32"><call pos:start="1511:17" pos:end="1511:32"><name pos:start="1511:17" pos:end="1511:22">likely</name><argument_list pos:start="1511:23" pos:end="1511:32">(<argument pos:start="1511:24" pos:end="1511:31"><expr pos:start="1511:24" pos:end="1511:31"><name pos:start="1511:24" pos:end="1511:25">rc</name> <operator pos:start="1511:27" pos:end="1511:28">!=</operator> <literal type="number" pos:start="1511:30" pos:end="1511:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1511:35" pos:end="1527:13">{<block_content pos:start="1513:17" pos:end="1525:53">

                <if_stmt pos:start="1513:17" pos:end="1525:53"><if pos:start="1513:17" pos:end="1523:17">if <condition pos:start="1513:20" pos:end="1513:29">(<expr pos:start="1513:21" pos:end="1513:28"><name pos:start="1513:21" pos:end="1513:22">ra</name> <operator pos:start="1513:24" pos:end="1513:25">!=</operator> <literal type="number" pos:start="1513:27" pos:end="1513:28">31</literal></expr>)</condition> <block pos:start="1513:31" pos:end="1523:17">{<block_content pos:start="1515:21" pos:end="1521:43">

                    <decl_stmt pos:start="1515:21" pos:end="1515:54"><decl pos:start="1515:21" pos:end="1515:53"><type pos:start="1515:21" pos:end="1515:28"><name pos:start="1515:21" pos:end="1515:28">TCGv_i32</name></type> <name pos:start="1515:30" pos:end="1515:32">tmp</name> <init pos:start="1515:34" pos:end="1515:53">= <expr pos:start="1515:36" pos:end="1515:53"><call pos:start="1515:36" pos:end="1515:53"><name pos:start="1515:36" pos:end="1515:51">tcg_temp_new_i32</name><argument_list pos:start="1515:52" pos:end="1515:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="1517:21" pos:end="1517:59"><expr pos:start="1517:21" pos:end="1517:58"><call pos:start="1517:21" pos:end="1517:58"><name pos:start="1517:21" pos:end="1517:41">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1517:42" pos:end="1517:58">(<argument pos:start="1517:43" pos:end="1517:45"><expr pos:start="1517:43" pos:end="1517:45"><name pos:start="1517:43" pos:end="1517:45">tmp</name></expr></argument>, <argument pos:start="1517:48" pos:end="1517:57"><expr pos:start="1517:48" pos:end="1517:57"><name pos:start="1517:48" pos:end="1517:57"><name pos:start="1517:48" pos:end="1517:53">cpu_ir</name><index pos:start="1517:54" pos:end="1517:57">[<expr pos:start="1517:55" pos:end="1517:56"><name pos:start="1517:55" pos:end="1517:56">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1519:21" pos:end="1519:61"><expr pos:start="1519:21" pos:end="1519:60"><call pos:start="1519:21" pos:end="1519:60"><name pos:start="1519:21" pos:end="1519:42">gen_helper_memory_to_f</name><argument_list pos:start="1519:43" pos:end="1519:60">(<argument pos:start="1519:44" pos:end="1519:54"><expr pos:start="1519:44" pos:end="1519:54"><name pos:start="1519:44" pos:end="1519:54"><name pos:start="1519:44" pos:end="1519:50">cpu_fir</name><index pos:start="1519:51" pos:end="1519:54">[<expr pos:start="1519:52" pos:end="1519:53"><name pos:start="1519:52" pos:end="1519:53">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1519:57" pos:end="1519:59"><expr pos:start="1519:57" pos:end="1519:59"><name pos:start="1519:57" pos:end="1519:59">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1521:21" pos:end="1521:43"><expr pos:start="1521:21" pos:end="1521:42"><call pos:start="1521:21" pos:end="1521:42"><name pos:start="1521:21" pos:end="1521:37">tcg_temp_free_i32</name><argument_list pos:start="1521:38" pos:end="1521:42">(<argument pos:start="1521:39" pos:end="1521:41"><expr pos:start="1521:39" pos:end="1521:41"><name pos:start="1521:39" pos:end="1521:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1523:19" pos:end="1525:53">else<block type="pseudo" pos:start="1525:21" pos:end="1525:53"><block_content pos:start="1525:21" pos:end="1525:53">

                    <expr_stmt pos:start="1525:21" pos:end="1525:53"><expr pos:start="1525:21" pos:end="1525:52"><call pos:start="1525:21" pos:end="1525:52"><name pos:start="1525:21" pos:end="1525:36">tcg_gen_movi_i64</name><argument_list pos:start="1525:37" pos:end="1525:52">(<argument pos:start="1525:38" pos:end="1525:48"><expr pos:start="1525:38" pos:end="1525:48"><name pos:start="1525:38" pos:end="1525:48"><name pos:start="1525:38" pos:end="1525:44">cpu_fir</name><index pos:start="1525:45" pos:end="1525:48">[<expr pos:start="1525:46" pos:end="1525:47"><name pos:start="1525:46" pos:end="1525:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1525:51" pos:end="1525:51"><expr pos:start="1525:51" pos:end="1525:51"><literal type="number" pos:start="1525:51" pos:end="1525:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1529:13" pos:end="1529:18">break;</break>

        <case pos:start="1531:9" pos:end="1531:18">case <expr pos:start="1531:14" pos:end="1531:17"><literal type="number" pos:start="1531:14" pos:end="1531:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1533:13" pos:end="1533:23">/* ITOFT */</comment>

            <if_stmt pos:start="1535:13" pos:end="1537:33"><if pos:start="1535:13" pos:end="1537:33">if <condition pos:start="1535:16" pos:end="1535:42">(<expr pos:start="1535:17" pos:end="1535:41"><operator pos:start="1535:17" pos:end="1535:17">!</operator><operator pos:start="1535:18" pos:end="1535:18">(</operator><name pos:start="1535:19" pos:end="1535:28"><name pos:start="1535:19" pos:end="1535:21">ctx</name><operator pos:start="1535:22" pos:end="1535:23">-&gt;</operator><name pos:start="1535:24" pos:end="1535:28">amask</name></name> <operator pos:start="1535:30" pos:end="1535:30">&amp;</operator> <name pos:start="1535:32" pos:end="1535:40">AMASK_FIX</name><operator pos:start="1535:41" pos:end="1535:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1537:17" pos:end="1537:33"><block_content pos:start="1537:17" pos:end="1537:33">

                <goto pos:start="1537:17" pos:end="1537:33">goto <name pos:start="1537:22" pos:end="1537:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1539:13" pos:end="1549:13"><if pos:start="1539:13" pos:end="1549:13">if <condition pos:start="1539:16" pos:end="1539:33">(<expr pos:start="1539:17" pos:end="1539:32"><call pos:start="1539:17" pos:end="1539:32"><name pos:start="1539:17" pos:end="1539:22">likely</name><argument_list pos:start="1539:23" pos:end="1539:32">(<argument pos:start="1539:24" pos:end="1539:31"><expr pos:start="1539:24" pos:end="1539:31"><name pos:start="1539:24" pos:end="1539:25">rc</name> <operator pos:start="1539:27" pos:end="1539:28">!=</operator> <literal type="number" pos:start="1539:30" pos:end="1539:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1539:35" pos:end="1549:13">{<block_content pos:start="1541:17" pos:end="1547:53">

                <if_stmt pos:start="1541:17" pos:end="1547:53"><if pos:start="1541:17" pos:end="1543:61">if <condition pos:start="1541:20" pos:end="1541:29">(<expr pos:start="1541:21" pos:end="1541:28"><name pos:start="1541:21" pos:end="1541:22">ra</name> <operator pos:start="1541:24" pos:end="1541:25">!=</operator> <literal type="number" pos:start="1541:27" pos:end="1541:28">31</literal></expr>)</condition><block type="pseudo" pos:start="1543:21" pos:end="1543:61"><block_content pos:start="1543:21" pos:end="1543:61">

                    <expr_stmt pos:start="1543:21" pos:end="1543:61"><expr pos:start="1543:21" pos:end="1543:60"><call pos:start="1543:21" pos:end="1543:60"><name pos:start="1543:21" pos:end="1543:35">tcg_gen_mov_i64</name><argument_list pos:start="1543:36" pos:end="1543:60">(<argument pos:start="1543:37" pos:end="1543:47"><expr pos:start="1543:37" pos:end="1543:47"><name pos:start="1543:37" pos:end="1543:47"><name pos:start="1543:37" pos:end="1543:43">cpu_fir</name><index pos:start="1543:44" pos:end="1543:47">[<expr pos:start="1543:45" pos:end="1543:46"><name pos:start="1543:45" pos:end="1543:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1543:50" pos:end="1543:59"><expr pos:start="1543:50" pos:end="1543:59"><name pos:start="1543:50" pos:end="1543:59"><name pos:start="1543:50" pos:end="1543:55">cpu_ir</name><index pos:start="1543:56" pos:end="1543:59">[<expr pos:start="1543:57" pos:end="1543:58"><name pos:start="1543:57" pos:end="1543:58">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1545:17" pos:end="1547:53">else<block type="pseudo" pos:start="1547:21" pos:end="1547:53"><block_content pos:start="1547:21" pos:end="1547:53">

                    <expr_stmt pos:start="1547:21" pos:end="1547:53"><expr pos:start="1547:21" pos:end="1547:52"><call pos:start="1547:21" pos:end="1547:52"><name pos:start="1547:21" pos:end="1547:36">tcg_gen_movi_i64</name><argument_list pos:start="1547:37" pos:end="1547:52">(<argument pos:start="1547:38" pos:end="1547:48"><expr pos:start="1547:38" pos:end="1547:48"><name pos:start="1547:38" pos:end="1547:48"><name pos:start="1547:38" pos:end="1547:44">cpu_fir</name><index pos:start="1547:45" pos:end="1547:48">[<expr pos:start="1547:46" pos:end="1547:47"><name pos:start="1547:46" pos:end="1547:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1547:51" pos:end="1547:51"><expr pos:start="1547:51" pos:end="1547:51"><literal type="number" pos:start="1547:51" pos:end="1547:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1551:13" pos:end="1551:18">break;</break>

        <case pos:start="1553:9" pos:end="1553:18">case <expr pos:start="1553:14" pos:end="1553:17"><literal type="number" pos:start="1553:14" pos:end="1553:17">0x2A</literal></expr>:</case>

            <comment type="block" pos:start="1555:13" pos:end="1555:23">/* SQRTG */</comment>

            <if_stmt pos:start="1557:13" pos:end="1559:33"><if pos:start="1557:13" pos:end="1559:33">if <condition pos:start="1557:16" pos:end="1557:42">(<expr pos:start="1557:17" pos:end="1557:41"><operator pos:start="1557:17" pos:end="1557:17">!</operator><operator pos:start="1557:18" pos:end="1557:18">(</operator><name pos:start="1557:19" pos:end="1557:28"><name pos:start="1557:19" pos:end="1557:21">ctx</name><operator pos:start="1557:22" pos:end="1557:23">-&gt;</operator><name pos:start="1557:24" pos:end="1557:28">amask</name></name> <operator pos:start="1557:30" pos:end="1557:30">&amp;</operator> <name pos:start="1557:32" pos:end="1557:40">AMASK_FIX</name><operator pos:start="1557:41" pos:end="1557:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1559:17" pos:end="1559:33"><block_content pos:start="1559:17" pos:end="1559:33">

                <goto pos:start="1559:17" pos:end="1559:33">goto <name pos:start="1559:22" pos:end="1559:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1561:13" pos:end="1561:31"><expr pos:start="1561:13" pos:end="1561:30"><call pos:start="1561:13" pos:end="1561:30"><name pos:start="1561:13" pos:end="1561:22">gen_fsqrtg</name><argument_list pos:start="1561:23" pos:end="1561:30">(<argument pos:start="1561:24" pos:end="1561:25"><expr pos:start="1561:24" pos:end="1561:25"><name pos:start="1561:24" pos:end="1561:25">rb</name></expr></argument>, <argument pos:start="1561:28" pos:end="1561:29"><expr pos:start="1561:28" pos:end="1561:29"><name pos:start="1561:28" pos:end="1561:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1563:13" pos:end="1563:18">break;</break>

        <case pos:start="1565:9" pos:end="1565:19">case <expr pos:start="1565:14" pos:end="1565:18"><literal type="number" pos:start="1565:14" pos:end="1565:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1567:13" pos:end="1567:23">/* SQRTT */</comment>

            <if_stmt pos:start="1569:13" pos:end="1571:33"><if pos:start="1569:13" pos:end="1571:33">if <condition pos:start="1569:16" pos:end="1569:42">(<expr pos:start="1569:17" pos:end="1569:41"><operator pos:start="1569:17" pos:end="1569:17">!</operator><operator pos:start="1569:18" pos:end="1569:18">(</operator><name pos:start="1569:19" pos:end="1569:28"><name pos:start="1569:19" pos:end="1569:21">ctx</name><operator pos:start="1569:22" pos:end="1569:23">-&gt;</operator><name pos:start="1569:24" pos:end="1569:28">amask</name></name> <operator pos:start="1569:30" pos:end="1569:30">&amp;</operator> <name pos:start="1569:32" pos:end="1569:40">AMASK_FIX</name><operator pos:start="1569:41" pos:end="1569:41">)</operator></expr>)</condition><block type="pseudo" pos:start="1571:17" pos:end="1571:33"><block_content pos:start="1571:17" pos:end="1571:33">

                <goto pos:start="1571:17" pos:end="1571:33">goto <name pos:start="1571:22" pos:end="1571:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="1573:13" pos:end="1573:31"><expr pos:start="1573:13" pos:end="1573:30"><call pos:start="1573:13" pos:end="1573:30"><name pos:start="1573:13" pos:end="1573:22">gen_fsqrtt</name><argument_list pos:start="1573:23" pos:end="1573:30">(<argument pos:start="1573:24" pos:end="1573:25"><expr pos:start="1573:24" pos:end="1573:25"><name pos:start="1573:24" pos:end="1573:25">rb</name></expr></argument>, <argument pos:start="1573:28" pos:end="1573:29"><expr pos:start="1573:28" pos:end="1573:29"><name pos:start="1573:28" pos:end="1573:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1575:13" pos:end="1575:18">break;</break>

        <default pos:start="1577:9" pos:end="1577:16">default:</default>

            <goto pos:start="1579:13" pos:end="1579:29">goto <name pos:start="1579:18" pos:end="1579:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1583:9" pos:end="1583:14">break;</break>

    <case pos:start="1585:5" pos:end="1585:14">case <expr pos:start="1585:10" pos:end="1585:13"><literal type="number" pos:start="1585:10" pos:end="1585:13">0x15</literal></expr>:</case>

        <comment type="block" pos:start="1587:9" pos:end="1587:32">/* VAX floating point */</comment>

        <comment type="block" pos:start="1589:9" pos:end="1589:57">/* XXX: rounding mode and trap are ignored (!) */</comment>

        <switch pos:start="1591:9" pos:end="1749:9">switch <condition pos:start="1591:16" pos:end="1591:21">(<expr pos:start="1591:17" pos:end="1591:20"><name pos:start="1591:17" pos:end="1591:20">fpfn</name></expr>)</condition> <block pos:start="1591:23" pos:end="1749:9">{<block_content pos:start="1593:9" pos:end="1747:29"> <comment type="block" pos:start="1591:25" pos:end="1591:40">/* f11 &amp; 0x3F */</comment>

        <case pos:start="1593:9" pos:end="1593:18">case <expr pos:start="1593:14" pos:end="1593:17"><literal type="number" pos:start="1593:14" pos:end="1593:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1595:13" pos:end="1595:22">/* ADDF */</comment>

            <expr_stmt pos:start="1597:13" pos:end="1597:34"><expr pos:start="1597:13" pos:end="1597:33"><call pos:start="1597:13" pos:end="1597:33"><name pos:start="1597:13" pos:end="1597:21">gen_faddf</name><argument_list pos:start="1597:22" pos:end="1597:33">(<argument pos:start="1597:23" pos:end="1597:24"><expr pos:start="1597:23" pos:end="1597:24"><name pos:start="1597:23" pos:end="1597:24">ra</name></expr></argument>, <argument pos:start="1597:27" pos:end="1597:28"><expr pos:start="1597:27" pos:end="1597:28"><name pos:start="1597:27" pos:end="1597:28">rb</name></expr></argument>, <argument pos:start="1597:31" pos:end="1597:32"><expr pos:start="1597:31" pos:end="1597:32"><name pos:start="1597:31" pos:end="1597:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1599:13" pos:end="1599:18">break;</break>

        <case pos:start="1601:9" pos:end="1601:18">case <expr pos:start="1601:14" pos:end="1601:17"><literal type="number" pos:start="1601:14" pos:end="1601:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1603:13" pos:end="1603:22">/* SUBF */</comment>

            <expr_stmt pos:start="1605:13" pos:end="1605:34"><expr pos:start="1605:13" pos:end="1605:33"><call pos:start="1605:13" pos:end="1605:33"><name pos:start="1605:13" pos:end="1605:21">gen_fsubf</name><argument_list pos:start="1605:22" pos:end="1605:33">(<argument pos:start="1605:23" pos:end="1605:24"><expr pos:start="1605:23" pos:end="1605:24"><name pos:start="1605:23" pos:end="1605:24">ra</name></expr></argument>, <argument pos:start="1605:27" pos:end="1605:28"><expr pos:start="1605:27" pos:end="1605:28"><name pos:start="1605:27" pos:end="1605:28">rb</name></expr></argument>, <argument pos:start="1605:31" pos:end="1605:32"><expr pos:start="1605:31" pos:end="1605:32"><name pos:start="1605:31" pos:end="1605:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1607:13" pos:end="1607:18">break;</break>

        <case pos:start="1609:9" pos:end="1609:18">case <expr pos:start="1609:14" pos:end="1609:17"><literal type="number" pos:start="1609:14" pos:end="1609:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1611:13" pos:end="1611:22">/* MULF */</comment>

            <expr_stmt pos:start="1613:13" pos:end="1613:34"><expr pos:start="1613:13" pos:end="1613:33"><call pos:start="1613:13" pos:end="1613:33"><name pos:start="1613:13" pos:end="1613:21">gen_fmulf</name><argument_list pos:start="1613:22" pos:end="1613:33">(<argument pos:start="1613:23" pos:end="1613:24"><expr pos:start="1613:23" pos:end="1613:24"><name pos:start="1613:23" pos:end="1613:24">ra</name></expr></argument>, <argument pos:start="1613:27" pos:end="1613:28"><expr pos:start="1613:27" pos:end="1613:28"><name pos:start="1613:27" pos:end="1613:28">rb</name></expr></argument>, <argument pos:start="1613:31" pos:end="1613:32"><expr pos:start="1613:31" pos:end="1613:32"><name pos:start="1613:31" pos:end="1613:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1615:13" pos:end="1615:18">break;</break>

        <case pos:start="1617:9" pos:end="1617:18">case <expr pos:start="1617:14" pos:end="1617:17"><literal type="number" pos:start="1617:14" pos:end="1617:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1619:13" pos:end="1619:22">/* DIVF */</comment>

            <expr_stmt pos:start="1621:13" pos:end="1621:34"><expr pos:start="1621:13" pos:end="1621:33"><call pos:start="1621:13" pos:end="1621:33"><name pos:start="1621:13" pos:end="1621:21">gen_fdivf</name><argument_list pos:start="1621:22" pos:end="1621:33">(<argument pos:start="1621:23" pos:end="1621:24"><expr pos:start="1621:23" pos:end="1621:24"><name pos:start="1621:23" pos:end="1621:24">ra</name></expr></argument>, <argument pos:start="1621:27" pos:end="1621:28"><expr pos:start="1621:27" pos:end="1621:28"><name pos:start="1621:27" pos:end="1621:28">rb</name></expr></argument>, <argument pos:start="1621:31" pos:end="1621:32"><expr pos:start="1621:31" pos:end="1621:32"><name pos:start="1621:31" pos:end="1621:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1623:13" pos:end="1623:18">break;</break>

        <case pos:start="1625:9" pos:end="1634:0">case <expr pos:start="1625:14" pos:end="1625:17"><literal type="number" pos:start="1625:14" pos:end="1625:17">0x1E</literal></expr>:</case>

            <comment type="block" pos:start="1627:13" pos:end="1627:23">/* CVTDG */</comment>

<cpp:if pos:start="1629:1" pos:end="1629:5">#<cpp:directive pos:start="1629:2" pos:end="1629:3">if</cpp:directive> <expr pos:start="1629:5" pos:end="1629:5"><literal type="number" pos:start="1629:5" pos:end="1629:5">0</literal></expr></cpp:if> <comment type="line" pos:start="1629:7" pos:end="1629:13">// TODO</comment>

            gen_fcvtdg(rb, rc);

<cpp:else pos:start="1633:1" pos:end="1633:5">#<cpp:directive pos:start="1633:2" pos:end="1633:5">else</cpp:directive></cpp:else>

            <goto pos:start="1635:13" pos:end="1638:0">goto <name pos:start="1635:18" pos:end="1635:28">invalid_opc</name>;</goto>

<cpp:endif pos:start="1637:1" pos:end="1637:6">#<cpp:directive pos:start="1637:2" pos:end="1637:6">endif</cpp:directive></cpp:endif>

            <break pos:start="1639:13" pos:end="1639:18">break;</break>

        <case pos:start="1641:9" pos:end="1641:18">case <expr pos:start="1641:14" pos:end="1641:17"><literal type="number" pos:start="1641:14" pos:end="1641:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1643:13" pos:end="1643:22">/* ADDG */</comment>

            <expr_stmt pos:start="1645:13" pos:end="1645:34"><expr pos:start="1645:13" pos:end="1645:33"><call pos:start="1645:13" pos:end="1645:33"><name pos:start="1645:13" pos:end="1645:21">gen_faddg</name><argument_list pos:start="1645:22" pos:end="1645:33">(<argument pos:start="1645:23" pos:end="1645:24"><expr pos:start="1645:23" pos:end="1645:24"><name pos:start="1645:23" pos:end="1645:24">ra</name></expr></argument>, <argument pos:start="1645:27" pos:end="1645:28"><expr pos:start="1645:27" pos:end="1645:28"><name pos:start="1645:27" pos:end="1645:28">rb</name></expr></argument>, <argument pos:start="1645:31" pos:end="1645:32"><expr pos:start="1645:31" pos:end="1645:32"><name pos:start="1645:31" pos:end="1645:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1647:13" pos:end="1647:18">break;</break>

        <case pos:start="1649:9" pos:end="1649:18">case <expr pos:start="1649:14" pos:end="1649:17"><literal type="number" pos:start="1649:14" pos:end="1649:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1651:13" pos:end="1651:22">/* SUBG */</comment>

            <expr_stmt pos:start="1653:13" pos:end="1653:34"><expr pos:start="1653:13" pos:end="1653:33"><call pos:start="1653:13" pos:end="1653:33"><name pos:start="1653:13" pos:end="1653:21">gen_fsubg</name><argument_list pos:start="1653:22" pos:end="1653:33">(<argument pos:start="1653:23" pos:end="1653:24"><expr pos:start="1653:23" pos:end="1653:24"><name pos:start="1653:23" pos:end="1653:24">ra</name></expr></argument>, <argument pos:start="1653:27" pos:end="1653:28"><expr pos:start="1653:27" pos:end="1653:28"><name pos:start="1653:27" pos:end="1653:28">rb</name></expr></argument>, <argument pos:start="1653:31" pos:end="1653:32"><expr pos:start="1653:31" pos:end="1653:32"><name pos:start="1653:31" pos:end="1653:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1655:13" pos:end="1655:18">break;</break>

        <case pos:start="1657:9" pos:end="1657:18">case <expr pos:start="1657:14" pos:end="1657:17"><literal type="number" pos:start="1657:14" pos:end="1657:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1659:13" pos:end="1659:22">/* MULG */</comment>

            <expr_stmt pos:start="1661:13" pos:end="1661:34"><expr pos:start="1661:13" pos:end="1661:33"><call pos:start="1661:13" pos:end="1661:33"><name pos:start="1661:13" pos:end="1661:21">gen_fmulg</name><argument_list pos:start="1661:22" pos:end="1661:33">(<argument pos:start="1661:23" pos:end="1661:24"><expr pos:start="1661:23" pos:end="1661:24"><name pos:start="1661:23" pos:end="1661:24">ra</name></expr></argument>, <argument pos:start="1661:27" pos:end="1661:28"><expr pos:start="1661:27" pos:end="1661:28"><name pos:start="1661:27" pos:end="1661:28">rb</name></expr></argument>, <argument pos:start="1661:31" pos:end="1661:32"><expr pos:start="1661:31" pos:end="1661:32"><name pos:start="1661:31" pos:end="1661:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1663:13" pos:end="1663:18">break;</break>

        <case pos:start="1665:9" pos:end="1665:18">case <expr pos:start="1665:14" pos:end="1665:17"><literal type="number" pos:start="1665:14" pos:end="1665:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1667:13" pos:end="1667:22">/* DIVG */</comment>

            <expr_stmt pos:start="1669:13" pos:end="1669:34"><expr pos:start="1669:13" pos:end="1669:33"><call pos:start="1669:13" pos:end="1669:33"><name pos:start="1669:13" pos:end="1669:21">gen_fdivg</name><argument_list pos:start="1669:22" pos:end="1669:33">(<argument pos:start="1669:23" pos:end="1669:24"><expr pos:start="1669:23" pos:end="1669:24"><name pos:start="1669:23" pos:end="1669:24">ra</name></expr></argument>, <argument pos:start="1669:27" pos:end="1669:28"><expr pos:start="1669:27" pos:end="1669:28"><name pos:start="1669:27" pos:end="1669:28">rb</name></expr></argument>, <argument pos:start="1669:31" pos:end="1669:32"><expr pos:start="1669:31" pos:end="1669:32"><name pos:start="1669:31" pos:end="1669:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1671:13" pos:end="1671:18">break;</break>

        <case pos:start="1673:9" pos:end="1673:18">case <expr pos:start="1673:14" pos:end="1673:17"><literal type="number" pos:start="1673:14" pos:end="1673:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1675:13" pos:end="1675:24">/* CMPGEQ */</comment>

            <expr_stmt pos:start="1677:13" pos:end="1677:36"><expr pos:start="1677:13" pos:end="1677:35"><call pos:start="1677:13" pos:end="1677:35"><name pos:start="1677:13" pos:end="1677:23">gen_fcmpgeq</name><argument_list pos:start="1677:24" pos:end="1677:35">(<argument pos:start="1677:25" pos:end="1677:26"><expr pos:start="1677:25" pos:end="1677:26"><name pos:start="1677:25" pos:end="1677:26">ra</name></expr></argument>, <argument pos:start="1677:29" pos:end="1677:30"><expr pos:start="1677:29" pos:end="1677:30"><name pos:start="1677:29" pos:end="1677:30">rb</name></expr></argument>, <argument pos:start="1677:33" pos:end="1677:34"><expr pos:start="1677:33" pos:end="1677:34"><name pos:start="1677:33" pos:end="1677:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1679:13" pos:end="1679:18">break;</break>

        <case pos:start="1681:9" pos:end="1681:18">case <expr pos:start="1681:14" pos:end="1681:17"><literal type="number" pos:start="1681:14" pos:end="1681:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1683:13" pos:end="1683:24">/* CMPGLT */</comment>

            <expr_stmt pos:start="1685:13" pos:end="1685:36"><expr pos:start="1685:13" pos:end="1685:35"><call pos:start="1685:13" pos:end="1685:35"><name pos:start="1685:13" pos:end="1685:23">gen_fcmpglt</name><argument_list pos:start="1685:24" pos:end="1685:35">(<argument pos:start="1685:25" pos:end="1685:26"><expr pos:start="1685:25" pos:end="1685:26"><name pos:start="1685:25" pos:end="1685:26">ra</name></expr></argument>, <argument pos:start="1685:29" pos:end="1685:30"><expr pos:start="1685:29" pos:end="1685:30"><name pos:start="1685:29" pos:end="1685:30">rb</name></expr></argument>, <argument pos:start="1685:33" pos:end="1685:34"><expr pos:start="1685:33" pos:end="1685:34"><name pos:start="1685:33" pos:end="1685:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1687:13" pos:end="1687:18">break;</break>

        <case pos:start="1689:9" pos:end="1689:18">case <expr pos:start="1689:14" pos:end="1689:17"><literal type="number" pos:start="1689:14" pos:end="1689:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1691:13" pos:end="1691:24">/* CMPGLE */</comment>

            <expr_stmt pos:start="1693:13" pos:end="1693:36"><expr pos:start="1693:13" pos:end="1693:35"><call pos:start="1693:13" pos:end="1693:35"><name pos:start="1693:13" pos:end="1693:23">gen_fcmpgle</name><argument_list pos:start="1693:24" pos:end="1693:35">(<argument pos:start="1693:25" pos:end="1693:26"><expr pos:start="1693:25" pos:end="1693:26"><name pos:start="1693:25" pos:end="1693:26">ra</name></expr></argument>, <argument pos:start="1693:29" pos:end="1693:30"><expr pos:start="1693:29" pos:end="1693:30"><name pos:start="1693:29" pos:end="1693:30">rb</name></expr></argument>, <argument pos:start="1693:33" pos:end="1693:34"><expr pos:start="1693:33" pos:end="1693:34"><name pos:start="1693:33" pos:end="1693:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1695:13" pos:end="1695:18">break;</break>

        <case pos:start="1697:9" pos:end="1697:18">case <expr pos:start="1697:14" pos:end="1697:17"><literal type="number" pos:start="1697:14" pos:end="1697:17">0x2C</literal></expr>:</case>

            <comment type="block" pos:start="1699:13" pos:end="1699:23">/* CVTGF */</comment>

            <expr_stmt pos:start="1701:13" pos:end="1701:31"><expr pos:start="1701:13" pos:end="1701:30"><call pos:start="1701:13" pos:end="1701:30"><name pos:start="1701:13" pos:end="1701:22">gen_fcvtgf</name><argument_list pos:start="1701:23" pos:end="1701:30">(<argument pos:start="1701:24" pos:end="1701:25"><expr pos:start="1701:24" pos:end="1701:25"><name pos:start="1701:24" pos:end="1701:25">rb</name></expr></argument>, <argument pos:start="1701:28" pos:end="1701:29"><expr pos:start="1701:28" pos:end="1701:29"><name pos:start="1701:28" pos:end="1701:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1703:13" pos:end="1703:18">break;</break>

        <case pos:start="1705:9" pos:end="1714:0">case <expr pos:start="1705:14" pos:end="1705:17"><literal type="number" pos:start="1705:14" pos:end="1705:17">0x2D</literal></expr>:</case>

            <comment type="block" pos:start="1707:13" pos:end="1707:23">/* CVTGD */</comment>

<cpp:if pos:start="1709:1" pos:end="1709:5">#<cpp:directive pos:start="1709:2" pos:end="1709:3">if</cpp:directive> <expr pos:start="1709:5" pos:end="1709:5"><literal type="number" pos:start="1709:5" pos:end="1709:5">0</literal></expr></cpp:if> <comment type="line" pos:start="1709:7" pos:end="1709:13">// TODO</comment>

            gen_fcvtgd(rb, rc);

<cpp:else pos:start="1713:1" pos:end="1713:5">#<cpp:directive pos:start="1713:2" pos:end="1713:5">else</cpp:directive></cpp:else>

            <goto pos:start="1715:13" pos:end="1718:0">goto <name pos:start="1715:18" pos:end="1715:28">invalid_opc</name>;</goto>

<cpp:endif pos:start="1717:1" pos:end="1717:6">#<cpp:directive pos:start="1717:2" pos:end="1717:6">endif</cpp:directive></cpp:endif>

            <break pos:start="1719:13" pos:end="1719:18">break;</break>

        <case pos:start="1721:9" pos:end="1721:18">case <expr pos:start="1721:14" pos:end="1721:17"><literal type="number" pos:start="1721:14" pos:end="1721:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1723:13" pos:end="1723:23">/* CVTGQ */</comment>

            <expr_stmt pos:start="1725:13" pos:end="1725:31"><expr pos:start="1725:13" pos:end="1725:30"><call pos:start="1725:13" pos:end="1725:30"><name pos:start="1725:13" pos:end="1725:22">gen_fcvtgq</name><argument_list pos:start="1725:23" pos:end="1725:30">(<argument pos:start="1725:24" pos:end="1725:25"><expr pos:start="1725:24" pos:end="1725:25"><name pos:start="1725:24" pos:end="1725:25">rb</name></expr></argument>, <argument pos:start="1725:28" pos:end="1725:29"><expr pos:start="1725:28" pos:end="1725:29"><name pos:start="1725:28" pos:end="1725:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1727:13" pos:end="1727:18">break;</break>

        <case pos:start="1729:9" pos:end="1729:18">case <expr pos:start="1729:14" pos:end="1729:17"><literal type="number" pos:start="1729:14" pos:end="1729:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1731:13" pos:end="1731:23">/* CVTQF */</comment>

            <expr_stmt pos:start="1733:13" pos:end="1733:31"><expr pos:start="1733:13" pos:end="1733:30"><call pos:start="1733:13" pos:end="1733:30"><name pos:start="1733:13" pos:end="1733:22">gen_fcvtqf</name><argument_list pos:start="1733:23" pos:end="1733:30">(<argument pos:start="1733:24" pos:end="1733:25"><expr pos:start="1733:24" pos:end="1733:25"><name pos:start="1733:24" pos:end="1733:25">rb</name></expr></argument>, <argument pos:start="1733:28" pos:end="1733:29"><expr pos:start="1733:28" pos:end="1733:29"><name pos:start="1733:28" pos:end="1733:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1735:13" pos:end="1735:18">break;</break>

        <case pos:start="1737:9" pos:end="1737:18">case <expr pos:start="1737:14" pos:end="1737:17"><literal type="number" pos:start="1737:14" pos:end="1737:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1739:13" pos:end="1739:23">/* CVTQG */</comment>

            <expr_stmt pos:start="1741:13" pos:end="1741:31"><expr pos:start="1741:13" pos:end="1741:30"><call pos:start="1741:13" pos:end="1741:30"><name pos:start="1741:13" pos:end="1741:22">gen_fcvtqg</name><argument_list pos:start="1741:23" pos:end="1741:30">(<argument pos:start="1741:24" pos:end="1741:25"><expr pos:start="1741:24" pos:end="1741:25"><name pos:start="1741:24" pos:end="1741:25">rb</name></expr></argument>, <argument pos:start="1741:28" pos:end="1741:29"><expr pos:start="1741:28" pos:end="1741:29"><name pos:start="1741:28" pos:end="1741:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1743:13" pos:end="1743:18">break;</break>

        <default pos:start="1745:9" pos:end="1745:16">default:</default>

            <goto pos:start="1747:13" pos:end="1747:29">goto <name pos:start="1747:18" pos:end="1747:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1751:9" pos:end="1751:14">break;</break>

    <case pos:start="1753:5" pos:end="1753:14">case <expr pos:start="1753:10" pos:end="1753:13"><literal type="number" pos:start="1753:10" pos:end="1753:13">0x16</literal></expr>:</case>

        <comment type="block" pos:start="1755:9" pos:end="1755:33">/* IEEE floating-point */</comment>

        <comment type="block" pos:start="1757:9" pos:end="1757:58">/* XXX: rounding mode and traps are ignored (!) */</comment>

        <switch pos:start="1759:9" pos:end="1905:9">switch <condition pos:start="1759:16" pos:end="1759:21">(<expr pos:start="1759:17" pos:end="1759:20"><name pos:start="1759:17" pos:end="1759:20">fpfn</name></expr>)</condition> <block pos:start="1759:23" pos:end="1905:9">{<block_content pos:start="1761:9" pos:end="1903:29"> <comment type="block" pos:start="1759:25" pos:end="1759:40">/* f11 &amp; 0x3F */</comment>

        <case pos:start="1761:9" pos:end="1761:18">case <expr pos:start="1761:14" pos:end="1761:17"><literal type="number" pos:start="1761:14" pos:end="1761:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="1763:13" pos:end="1763:22">/* ADDS */</comment>

            <expr_stmt pos:start="1765:13" pos:end="1765:34"><expr pos:start="1765:13" pos:end="1765:33"><call pos:start="1765:13" pos:end="1765:33"><name pos:start="1765:13" pos:end="1765:21">gen_fadds</name><argument_list pos:start="1765:22" pos:end="1765:33">(<argument pos:start="1765:23" pos:end="1765:24"><expr pos:start="1765:23" pos:end="1765:24"><name pos:start="1765:23" pos:end="1765:24">ra</name></expr></argument>, <argument pos:start="1765:27" pos:end="1765:28"><expr pos:start="1765:27" pos:end="1765:28"><name pos:start="1765:27" pos:end="1765:28">rb</name></expr></argument>, <argument pos:start="1765:31" pos:end="1765:32"><expr pos:start="1765:31" pos:end="1765:32"><name pos:start="1765:31" pos:end="1765:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1767:13" pos:end="1767:18">break;</break>

        <case pos:start="1769:9" pos:end="1769:18">case <expr pos:start="1769:14" pos:end="1769:17"><literal type="number" pos:start="1769:14" pos:end="1769:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="1771:13" pos:end="1771:22">/* SUBS */</comment>

            <expr_stmt pos:start="1773:13" pos:end="1773:34"><expr pos:start="1773:13" pos:end="1773:33"><call pos:start="1773:13" pos:end="1773:33"><name pos:start="1773:13" pos:end="1773:21">gen_fsubs</name><argument_list pos:start="1773:22" pos:end="1773:33">(<argument pos:start="1773:23" pos:end="1773:24"><expr pos:start="1773:23" pos:end="1773:24"><name pos:start="1773:23" pos:end="1773:24">ra</name></expr></argument>, <argument pos:start="1773:27" pos:end="1773:28"><expr pos:start="1773:27" pos:end="1773:28"><name pos:start="1773:27" pos:end="1773:28">rb</name></expr></argument>, <argument pos:start="1773:31" pos:end="1773:32"><expr pos:start="1773:31" pos:end="1773:32"><name pos:start="1773:31" pos:end="1773:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1775:13" pos:end="1775:18">break;</break>

        <case pos:start="1777:9" pos:end="1777:18">case <expr pos:start="1777:14" pos:end="1777:17"><literal type="number" pos:start="1777:14" pos:end="1777:17">0x02</literal></expr>:</case>

            <comment type="block" pos:start="1779:13" pos:end="1779:22">/* MULS */</comment>

            <expr_stmt pos:start="1781:13" pos:end="1781:34"><expr pos:start="1781:13" pos:end="1781:33"><call pos:start="1781:13" pos:end="1781:33"><name pos:start="1781:13" pos:end="1781:21">gen_fmuls</name><argument_list pos:start="1781:22" pos:end="1781:33">(<argument pos:start="1781:23" pos:end="1781:24"><expr pos:start="1781:23" pos:end="1781:24"><name pos:start="1781:23" pos:end="1781:24">ra</name></expr></argument>, <argument pos:start="1781:27" pos:end="1781:28"><expr pos:start="1781:27" pos:end="1781:28"><name pos:start="1781:27" pos:end="1781:28">rb</name></expr></argument>, <argument pos:start="1781:31" pos:end="1781:32"><expr pos:start="1781:31" pos:end="1781:32"><name pos:start="1781:31" pos:end="1781:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1783:13" pos:end="1783:18">break;</break>

        <case pos:start="1785:9" pos:end="1785:18">case <expr pos:start="1785:14" pos:end="1785:17"><literal type="number" pos:start="1785:14" pos:end="1785:17">0x03</literal></expr>:</case>

            <comment type="block" pos:start="1787:13" pos:end="1787:22">/* DIVS */</comment>

            <expr_stmt pos:start="1789:13" pos:end="1789:34"><expr pos:start="1789:13" pos:end="1789:33"><call pos:start="1789:13" pos:end="1789:33"><name pos:start="1789:13" pos:end="1789:21">gen_fdivs</name><argument_list pos:start="1789:22" pos:end="1789:33">(<argument pos:start="1789:23" pos:end="1789:24"><expr pos:start="1789:23" pos:end="1789:24"><name pos:start="1789:23" pos:end="1789:24">ra</name></expr></argument>, <argument pos:start="1789:27" pos:end="1789:28"><expr pos:start="1789:27" pos:end="1789:28"><name pos:start="1789:27" pos:end="1789:28">rb</name></expr></argument>, <argument pos:start="1789:31" pos:end="1789:32"><expr pos:start="1789:31" pos:end="1789:32"><name pos:start="1789:31" pos:end="1789:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1791:13" pos:end="1791:18">break;</break>

        <case pos:start="1793:9" pos:end="1793:18">case <expr pos:start="1793:14" pos:end="1793:17"><literal type="number" pos:start="1793:14" pos:end="1793:17">0x20</literal></expr>:</case>

            <comment type="block" pos:start="1795:13" pos:end="1795:22">/* ADDT */</comment>

            <expr_stmt pos:start="1797:13" pos:end="1797:34"><expr pos:start="1797:13" pos:end="1797:33"><call pos:start="1797:13" pos:end="1797:33"><name pos:start="1797:13" pos:end="1797:21">gen_faddt</name><argument_list pos:start="1797:22" pos:end="1797:33">(<argument pos:start="1797:23" pos:end="1797:24"><expr pos:start="1797:23" pos:end="1797:24"><name pos:start="1797:23" pos:end="1797:24">ra</name></expr></argument>, <argument pos:start="1797:27" pos:end="1797:28"><expr pos:start="1797:27" pos:end="1797:28"><name pos:start="1797:27" pos:end="1797:28">rb</name></expr></argument>, <argument pos:start="1797:31" pos:end="1797:32"><expr pos:start="1797:31" pos:end="1797:32"><name pos:start="1797:31" pos:end="1797:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1799:13" pos:end="1799:18">break;</break>

        <case pos:start="1801:9" pos:end="1801:18">case <expr pos:start="1801:14" pos:end="1801:17"><literal type="number" pos:start="1801:14" pos:end="1801:17">0x21</literal></expr>:</case>

            <comment type="block" pos:start="1803:13" pos:end="1803:22">/* SUBT */</comment>

            <expr_stmt pos:start="1805:13" pos:end="1805:34"><expr pos:start="1805:13" pos:end="1805:33"><call pos:start="1805:13" pos:end="1805:33"><name pos:start="1805:13" pos:end="1805:21">gen_fsubt</name><argument_list pos:start="1805:22" pos:end="1805:33">(<argument pos:start="1805:23" pos:end="1805:24"><expr pos:start="1805:23" pos:end="1805:24"><name pos:start="1805:23" pos:end="1805:24">ra</name></expr></argument>, <argument pos:start="1805:27" pos:end="1805:28"><expr pos:start="1805:27" pos:end="1805:28"><name pos:start="1805:27" pos:end="1805:28">rb</name></expr></argument>, <argument pos:start="1805:31" pos:end="1805:32"><expr pos:start="1805:31" pos:end="1805:32"><name pos:start="1805:31" pos:end="1805:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1807:13" pos:end="1807:18">break;</break>

        <case pos:start="1809:9" pos:end="1809:18">case <expr pos:start="1809:14" pos:end="1809:17"><literal type="number" pos:start="1809:14" pos:end="1809:17">0x22</literal></expr>:</case>

            <comment type="block" pos:start="1811:13" pos:end="1811:22">/* MULT */</comment>

            <expr_stmt pos:start="1813:13" pos:end="1813:34"><expr pos:start="1813:13" pos:end="1813:33"><call pos:start="1813:13" pos:end="1813:33"><name pos:start="1813:13" pos:end="1813:21">gen_fmult</name><argument_list pos:start="1813:22" pos:end="1813:33">(<argument pos:start="1813:23" pos:end="1813:24"><expr pos:start="1813:23" pos:end="1813:24"><name pos:start="1813:23" pos:end="1813:24">ra</name></expr></argument>, <argument pos:start="1813:27" pos:end="1813:28"><expr pos:start="1813:27" pos:end="1813:28"><name pos:start="1813:27" pos:end="1813:28">rb</name></expr></argument>, <argument pos:start="1813:31" pos:end="1813:32"><expr pos:start="1813:31" pos:end="1813:32"><name pos:start="1813:31" pos:end="1813:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1815:13" pos:end="1815:18">break;</break>

        <case pos:start="1817:9" pos:end="1817:18">case <expr pos:start="1817:14" pos:end="1817:17"><literal type="number" pos:start="1817:14" pos:end="1817:17">0x23</literal></expr>:</case>

            <comment type="block" pos:start="1819:13" pos:end="1819:22">/* DIVT */</comment>

            <expr_stmt pos:start="1821:13" pos:end="1821:34"><expr pos:start="1821:13" pos:end="1821:33"><call pos:start="1821:13" pos:end="1821:33"><name pos:start="1821:13" pos:end="1821:21">gen_fdivt</name><argument_list pos:start="1821:22" pos:end="1821:33">(<argument pos:start="1821:23" pos:end="1821:24"><expr pos:start="1821:23" pos:end="1821:24"><name pos:start="1821:23" pos:end="1821:24">ra</name></expr></argument>, <argument pos:start="1821:27" pos:end="1821:28"><expr pos:start="1821:27" pos:end="1821:28"><name pos:start="1821:27" pos:end="1821:28">rb</name></expr></argument>, <argument pos:start="1821:31" pos:end="1821:32"><expr pos:start="1821:31" pos:end="1821:32"><name pos:start="1821:31" pos:end="1821:32">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1823:13" pos:end="1823:18">break;</break>

        <case pos:start="1825:9" pos:end="1825:18">case <expr pos:start="1825:14" pos:end="1825:17"><literal type="number" pos:start="1825:14" pos:end="1825:17">0x24</literal></expr>:</case>

            <comment type="block" pos:start="1827:13" pos:end="1827:24">/* CMPTUN */</comment>

            <expr_stmt pos:start="1829:13" pos:end="1829:36"><expr pos:start="1829:13" pos:end="1829:35"><call pos:start="1829:13" pos:end="1829:35"><name pos:start="1829:13" pos:end="1829:23">gen_fcmptun</name><argument_list pos:start="1829:24" pos:end="1829:35">(<argument pos:start="1829:25" pos:end="1829:26"><expr pos:start="1829:25" pos:end="1829:26"><name pos:start="1829:25" pos:end="1829:26">ra</name></expr></argument>, <argument pos:start="1829:29" pos:end="1829:30"><expr pos:start="1829:29" pos:end="1829:30"><name pos:start="1829:29" pos:end="1829:30">rb</name></expr></argument>, <argument pos:start="1829:33" pos:end="1829:34"><expr pos:start="1829:33" pos:end="1829:34"><name pos:start="1829:33" pos:end="1829:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1831:13" pos:end="1831:18">break;</break>

        <case pos:start="1833:9" pos:end="1833:18">case <expr pos:start="1833:14" pos:end="1833:17"><literal type="number" pos:start="1833:14" pos:end="1833:17">0x25</literal></expr>:</case>

            <comment type="block" pos:start="1835:13" pos:end="1835:24">/* CMPTEQ */</comment>

            <expr_stmt pos:start="1837:13" pos:end="1837:36"><expr pos:start="1837:13" pos:end="1837:35"><call pos:start="1837:13" pos:end="1837:35"><name pos:start="1837:13" pos:end="1837:23">gen_fcmpteq</name><argument_list pos:start="1837:24" pos:end="1837:35">(<argument pos:start="1837:25" pos:end="1837:26"><expr pos:start="1837:25" pos:end="1837:26"><name pos:start="1837:25" pos:end="1837:26">ra</name></expr></argument>, <argument pos:start="1837:29" pos:end="1837:30"><expr pos:start="1837:29" pos:end="1837:30"><name pos:start="1837:29" pos:end="1837:30">rb</name></expr></argument>, <argument pos:start="1837:33" pos:end="1837:34"><expr pos:start="1837:33" pos:end="1837:34"><name pos:start="1837:33" pos:end="1837:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1839:13" pos:end="1839:18">break;</break>

        <case pos:start="1841:9" pos:end="1841:18">case <expr pos:start="1841:14" pos:end="1841:17"><literal type="number" pos:start="1841:14" pos:end="1841:17">0x26</literal></expr>:</case>

            <comment type="block" pos:start="1843:13" pos:end="1843:24">/* CMPTLT */</comment>

            <expr_stmt pos:start="1845:13" pos:end="1845:36"><expr pos:start="1845:13" pos:end="1845:35"><call pos:start="1845:13" pos:end="1845:35"><name pos:start="1845:13" pos:end="1845:23">gen_fcmptlt</name><argument_list pos:start="1845:24" pos:end="1845:35">(<argument pos:start="1845:25" pos:end="1845:26"><expr pos:start="1845:25" pos:end="1845:26"><name pos:start="1845:25" pos:end="1845:26">ra</name></expr></argument>, <argument pos:start="1845:29" pos:end="1845:30"><expr pos:start="1845:29" pos:end="1845:30"><name pos:start="1845:29" pos:end="1845:30">rb</name></expr></argument>, <argument pos:start="1845:33" pos:end="1845:34"><expr pos:start="1845:33" pos:end="1845:34"><name pos:start="1845:33" pos:end="1845:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1847:13" pos:end="1847:18">break;</break>

        <case pos:start="1849:9" pos:end="1849:18">case <expr pos:start="1849:14" pos:end="1849:17"><literal type="number" pos:start="1849:14" pos:end="1849:17">0x27</literal></expr>:</case>

            <comment type="block" pos:start="1851:13" pos:end="1851:24">/* CMPTLE */</comment>

            <expr_stmt pos:start="1853:13" pos:end="1853:36"><expr pos:start="1853:13" pos:end="1853:35"><call pos:start="1853:13" pos:end="1853:35"><name pos:start="1853:13" pos:end="1853:23">gen_fcmptle</name><argument_list pos:start="1853:24" pos:end="1853:35">(<argument pos:start="1853:25" pos:end="1853:26"><expr pos:start="1853:25" pos:end="1853:26"><name pos:start="1853:25" pos:end="1853:26">ra</name></expr></argument>, <argument pos:start="1853:29" pos:end="1853:30"><expr pos:start="1853:29" pos:end="1853:30"><name pos:start="1853:29" pos:end="1853:30">rb</name></expr></argument>, <argument pos:start="1853:33" pos:end="1853:34"><expr pos:start="1853:33" pos:end="1853:34"><name pos:start="1853:33" pos:end="1853:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1855:13" pos:end="1855:18">break;</break>

        <case pos:start="1857:9" pos:end="1857:18">case <expr pos:start="1857:14" pos:end="1857:17"><literal type="number" pos:start="1857:14" pos:end="1857:17">0x2C</literal></expr>:</case>

            <comment type="block" pos:start="1859:13" pos:end="1859:32">/* XXX: incorrect */</comment>

            <if_stmt pos:start="1861:13" pos:end="1873:13"><if pos:start="1861:13" pos:end="1867:13">if <condition pos:start="1861:16" pos:end="1861:47">(<expr pos:start="1861:17" pos:end="1861:46"><name pos:start="1861:17" pos:end="1861:20">fn11</name> <operator pos:start="1861:22" pos:end="1861:23">==</operator> <literal type="number" pos:start="1861:25" pos:end="1861:29">0x2AC</literal> <operator pos:start="1861:31" pos:end="1861:32">||</operator> <name pos:start="1861:34" pos:end="1861:37">fn11</name> <operator pos:start="1861:39" pos:end="1861:40">==</operator> <literal type="number" pos:start="1861:42" pos:end="1861:46">0x6AC</literal></expr>)</condition> <block pos:start="1861:49" pos:end="1867:13">{<block_content pos:start="1865:17" pos:end="1865:35">

                <comment type="block" pos:start="1863:17" pos:end="1863:27">/* CVTST */</comment>

                <expr_stmt pos:start="1865:17" pos:end="1865:35"><expr pos:start="1865:17" pos:end="1865:34"><call pos:start="1865:17" pos:end="1865:34"><name pos:start="1865:17" pos:end="1865:26">gen_fcvtst</name><argument_list pos:start="1865:27" pos:end="1865:34">(<argument pos:start="1865:28" pos:end="1865:29"><expr pos:start="1865:28" pos:end="1865:29"><name pos:start="1865:28" pos:end="1865:29">rb</name></expr></argument>, <argument pos:start="1865:32" pos:end="1865:33"><expr pos:start="1865:32" pos:end="1865:33"><name pos:start="1865:32" pos:end="1865:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1867:15" pos:end="1873:13">else <block pos:start="1867:20" pos:end="1873:13">{<block_content pos:start="1871:17" pos:end="1871:35">

                <comment type="block" pos:start="1869:17" pos:end="1869:27">/* CVTTS */</comment>

                <expr_stmt pos:start="1871:17" pos:end="1871:35"><expr pos:start="1871:17" pos:end="1871:34"><call pos:start="1871:17" pos:end="1871:34"><name pos:start="1871:17" pos:end="1871:26">gen_fcvtts</name><argument_list pos:start="1871:27" pos:end="1871:34">(<argument pos:start="1871:28" pos:end="1871:29"><expr pos:start="1871:28" pos:end="1871:29"><name pos:start="1871:28" pos:end="1871:29">rb</name></expr></argument>, <argument pos:start="1871:32" pos:end="1871:33"><expr pos:start="1871:32" pos:end="1871:33"><name pos:start="1871:32" pos:end="1871:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1875:13" pos:end="1875:18">break;</break>

        <case pos:start="1877:9" pos:end="1877:18">case <expr pos:start="1877:14" pos:end="1877:17"><literal type="number" pos:start="1877:14" pos:end="1877:17">0x2F</literal></expr>:</case>

            <comment type="block" pos:start="1879:13" pos:end="1879:23">/* CVTTQ */</comment>

            <expr_stmt pos:start="1881:13" pos:end="1881:31"><expr pos:start="1881:13" pos:end="1881:30"><call pos:start="1881:13" pos:end="1881:30"><name pos:start="1881:13" pos:end="1881:22">gen_fcvttq</name><argument_list pos:start="1881:23" pos:end="1881:30">(<argument pos:start="1881:24" pos:end="1881:25"><expr pos:start="1881:24" pos:end="1881:25"><name pos:start="1881:24" pos:end="1881:25">rb</name></expr></argument>, <argument pos:start="1881:28" pos:end="1881:29"><expr pos:start="1881:28" pos:end="1881:29"><name pos:start="1881:28" pos:end="1881:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1883:13" pos:end="1883:18">break;</break>

        <case pos:start="1885:9" pos:end="1885:18">case <expr pos:start="1885:14" pos:end="1885:17"><literal type="number" pos:start="1885:14" pos:end="1885:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="1887:13" pos:end="1887:23">/* CVTQS */</comment>

            <expr_stmt pos:start="1889:13" pos:end="1889:31"><expr pos:start="1889:13" pos:end="1889:30"><call pos:start="1889:13" pos:end="1889:30"><name pos:start="1889:13" pos:end="1889:22">gen_fcvtqs</name><argument_list pos:start="1889:23" pos:end="1889:30">(<argument pos:start="1889:24" pos:end="1889:25"><expr pos:start="1889:24" pos:end="1889:25"><name pos:start="1889:24" pos:end="1889:25">rb</name></expr></argument>, <argument pos:start="1889:28" pos:end="1889:29"><expr pos:start="1889:28" pos:end="1889:29"><name pos:start="1889:28" pos:end="1889:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1891:13" pos:end="1891:18">break;</break>

        <case pos:start="1893:9" pos:end="1893:18">case <expr pos:start="1893:14" pos:end="1893:17"><literal type="number" pos:start="1893:14" pos:end="1893:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="1895:13" pos:end="1895:23">/* CVTQT */</comment>

            <expr_stmt pos:start="1897:13" pos:end="1897:31"><expr pos:start="1897:13" pos:end="1897:30"><call pos:start="1897:13" pos:end="1897:30"><name pos:start="1897:13" pos:end="1897:22">gen_fcvtqt</name><argument_list pos:start="1897:23" pos:end="1897:30">(<argument pos:start="1897:24" pos:end="1897:25"><expr pos:start="1897:24" pos:end="1897:25"><name pos:start="1897:24" pos:end="1897:25">rb</name></expr></argument>, <argument pos:start="1897:28" pos:end="1897:29"><expr pos:start="1897:28" pos:end="1897:29"><name pos:start="1897:28" pos:end="1897:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1899:13" pos:end="1899:18">break;</break>

        <default pos:start="1901:9" pos:end="1901:16">default:</default>

            <goto pos:start="1903:13" pos:end="1903:29">goto <name pos:start="1903:18" pos:end="1903:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="1907:9" pos:end="1907:14">break;</break>

    <case pos:start="1909:5" pos:end="1909:14">case <expr pos:start="1909:10" pos:end="1909:13"><literal type="number" pos:start="1909:10" pos:end="1909:13">0x17</literal></expr>:</case>

        <switch pos:start="1911:9" pos:end="2063:9">switch <condition pos:start="1911:16" pos:end="1911:21">(<expr pos:start="1911:17" pos:end="1911:20"><name pos:start="1911:17" pos:end="1911:20">fn11</name></expr>)</condition> <block pos:start="1911:23" pos:end="2063:9">{<block_content pos:start="1913:9" pos:end="2061:29">

        <case pos:start="1913:9" pos:end="1913:19">case <expr pos:start="1913:14" pos:end="1913:18"><literal type="number" pos:start="1913:14" pos:end="1913:18">0x010</literal></expr>:</case>

            <comment type="block" pos:start="1915:13" pos:end="1915:23">/* CVTLQ */</comment>

            <expr_stmt pos:start="1917:13" pos:end="1917:31"><expr pos:start="1917:13" pos:end="1917:30"><call pos:start="1917:13" pos:end="1917:30"><name pos:start="1917:13" pos:end="1917:22">gen_fcvtlq</name><argument_list pos:start="1917:23" pos:end="1917:30">(<argument pos:start="1917:24" pos:end="1917:25"><expr pos:start="1917:24" pos:end="1917:25"><name pos:start="1917:24" pos:end="1917:25">rb</name></expr></argument>, <argument pos:start="1917:28" pos:end="1917:29"><expr pos:start="1917:28" pos:end="1917:29"><name pos:start="1917:28" pos:end="1917:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1919:13" pos:end="1919:18">break;</break>

        <case pos:start="1921:9" pos:end="1921:19">case <expr pos:start="1921:14" pos:end="1921:18"><literal type="number" pos:start="1921:14" pos:end="1921:18">0x020</literal></expr>:</case>

            <if_stmt pos:start="1923:13" pos:end="1937:13"><if pos:start="1923:13" pos:end="1937:13">if <condition pos:start="1923:16" pos:end="1923:33">(<expr pos:start="1923:17" pos:end="1923:32"><call pos:start="1923:17" pos:end="1923:32"><name pos:start="1923:17" pos:end="1923:22">likely</name><argument_list pos:start="1923:23" pos:end="1923:32">(<argument pos:start="1923:24" pos:end="1923:31"><expr pos:start="1923:24" pos:end="1923:31"><name pos:start="1923:24" pos:end="1923:25">rc</name> <operator pos:start="1923:27" pos:end="1923:28">!=</operator> <literal type="number" pos:start="1923:30" pos:end="1923:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1923:35" pos:end="1937:13">{<block_content pos:start="1925:17" pos:end="1935:42">

                <if_stmt pos:start="1925:17" pos:end="1935:42"><if pos:start="1925:17" pos:end="1929:62">if <condition pos:start="1925:20" pos:end="1925:29">(<expr pos:start="1925:21" pos:end="1925:28"><name pos:start="1925:21" pos:end="1925:22">ra</name> <operator pos:start="1925:24" pos:end="1925:25">==</operator> <name pos:start="1925:27" pos:end="1925:28">rb</name></expr>)</condition><block type="pseudo" pos:start="1929:21" pos:end="1929:62"><block_content pos:start="1929:21" pos:end="1929:62">

                    <comment type="block" pos:start="1927:21" pos:end="1927:30">/* FMOV */</comment>

                    <expr_stmt pos:start="1929:21" pos:end="1929:62"><expr pos:start="1929:21" pos:end="1929:61"><call pos:start="1929:21" pos:end="1929:61"><name pos:start="1929:21" pos:end="1929:35">tcg_gen_mov_i64</name><argument_list pos:start="1929:36" pos:end="1929:61">(<argument pos:start="1929:37" pos:end="1929:47"><expr pos:start="1929:37" pos:end="1929:47"><name pos:start="1929:37" pos:end="1929:47"><name pos:start="1929:37" pos:end="1929:43">cpu_fir</name><index pos:start="1929:44" pos:end="1929:47">[<expr pos:start="1929:45" pos:end="1929:46"><name pos:start="1929:45" pos:end="1929:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="1929:50" pos:end="1929:60"><expr pos:start="1929:50" pos:end="1929:60"><name pos:start="1929:50" pos:end="1929:60"><name pos:start="1929:50" pos:end="1929:56">cpu_fir</name><index pos:start="1929:57" pos:end="1929:60">[<expr pos:start="1929:58" pos:end="1929:59"><name pos:start="1929:58" pos:end="1929:59">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1931:17" pos:end="1935:42">else<block type="pseudo" pos:start="1935:21" pos:end="1935:42"><block_content pos:start="1935:21" pos:end="1935:42">

                    <comment type="block" pos:start="1933:21" pos:end="1933:30">/* CPYS */</comment>

                    <expr_stmt pos:start="1935:21" pos:end="1935:42"><expr pos:start="1935:21" pos:end="1935:41"><call pos:start="1935:21" pos:end="1935:41"><name pos:start="1935:21" pos:end="1935:29">gen_fcpys</name><argument_list pos:start="1935:30" pos:end="1935:41">(<argument pos:start="1935:31" pos:end="1935:32"><expr pos:start="1935:31" pos:end="1935:32"><name pos:start="1935:31" pos:end="1935:32">ra</name></expr></argument>, <argument pos:start="1935:35" pos:end="1935:36"><expr pos:start="1935:35" pos:end="1935:36"><name pos:start="1935:35" pos:end="1935:36">rb</name></expr></argument>, <argument pos:start="1935:39" pos:end="1935:40"><expr pos:start="1935:39" pos:end="1935:40"><name pos:start="1935:39" pos:end="1935:40">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="1939:13" pos:end="1939:18">break;</break>

        <case pos:start="1941:9" pos:end="1941:19">case <expr pos:start="1941:14" pos:end="1941:18"><literal type="number" pos:start="1941:14" pos:end="1941:18">0x021</literal></expr>:</case>

            <comment type="block" pos:start="1943:13" pos:end="1943:23">/* CPYSN */</comment>

            <expr_stmt pos:start="1945:13" pos:end="1945:35"><expr pos:start="1945:13" pos:end="1945:34"><call pos:start="1945:13" pos:end="1945:34"><name pos:start="1945:13" pos:end="1945:22">gen_fcpysn</name><argument_list pos:start="1945:23" pos:end="1945:34">(<argument pos:start="1945:24" pos:end="1945:25"><expr pos:start="1945:24" pos:end="1945:25"><name pos:start="1945:24" pos:end="1945:25">ra</name></expr></argument>, <argument pos:start="1945:28" pos:end="1945:29"><expr pos:start="1945:28" pos:end="1945:29"><name pos:start="1945:28" pos:end="1945:29">rb</name></expr></argument>, <argument pos:start="1945:32" pos:end="1945:33"><expr pos:start="1945:32" pos:end="1945:33"><name pos:start="1945:32" pos:end="1945:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1947:13" pos:end="1947:18">break;</break>

        <case pos:start="1949:9" pos:end="1949:19">case <expr pos:start="1949:14" pos:end="1949:18"><literal type="number" pos:start="1949:14" pos:end="1949:18">0x022</literal></expr>:</case>

            <comment type="block" pos:start="1951:13" pos:end="1951:23">/* CPYSE */</comment>

            <expr_stmt pos:start="1953:13" pos:end="1953:35"><expr pos:start="1953:13" pos:end="1953:34"><call pos:start="1953:13" pos:end="1953:34"><name pos:start="1953:13" pos:end="1953:22">gen_fcpyse</name><argument_list pos:start="1953:23" pos:end="1953:34">(<argument pos:start="1953:24" pos:end="1953:25"><expr pos:start="1953:24" pos:end="1953:25"><name pos:start="1953:24" pos:end="1953:25">ra</name></expr></argument>, <argument pos:start="1953:28" pos:end="1953:29"><expr pos:start="1953:28" pos:end="1953:29"><name pos:start="1953:28" pos:end="1953:29">rb</name></expr></argument>, <argument pos:start="1953:32" pos:end="1953:33"><expr pos:start="1953:32" pos:end="1953:33"><name pos:start="1953:32" pos:end="1953:33">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1955:13" pos:end="1955:18">break;</break>

        <case pos:start="1957:9" pos:end="1957:19">case <expr pos:start="1957:14" pos:end="1957:18"><literal type="number" pos:start="1957:14" pos:end="1957:18">0x024</literal></expr>:</case>

            <comment type="block" pos:start="1959:13" pos:end="1959:25">/* MT_FPCR */</comment>

            <if_stmt pos:start="1961:13" pos:end="1973:13"><if pos:start="1961:13" pos:end="1963:51">if <condition pos:start="1961:16" pos:end="1961:33">(<expr pos:start="1961:17" pos:end="1961:32"><call pos:start="1961:17" pos:end="1961:32"><name pos:start="1961:17" pos:end="1961:22">likely</name><argument_list pos:start="1961:23" pos:end="1961:32">(<argument pos:start="1961:24" pos:end="1961:31"><expr pos:start="1961:24" pos:end="1961:31"><name pos:start="1961:24" pos:end="1961:25">ra</name> <operator pos:start="1961:27" pos:end="1961:28">!=</operator> <literal type="number" pos:start="1961:30" pos:end="1961:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1963:17" pos:end="1963:51"><block_content pos:start="1963:17" pos:end="1963:51">

                <expr_stmt pos:start="1963:17" pos:end="1963:51"><expr pos:start="1963:17" pos:end="1963:50"><call pos:start="1963:17" pos:end="1963:50"><name pos:start="1963:17" pos:end="1963:37">gen_helper_store_fpcr</name><argument_list pos:start="1963:38" pos:end="1963:50">(<argument pos:start="1963:39" pos:end="1963:49"><expr pos:start="1963:39" pos:end="1963:49"><name pos:start="1963:39" pos:end="1963:49"><name pos:start="1963:39" pos:end="1963:45">cpu_fir</name><index pos:start="1963:46" pos:end="1963:49">[<expr pos:start="1963:47" pos:end="1963:48"><name pos:start="1963:47" pos:end="1963:48">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1965:13" pos:end="1973:13">else <block pos:start="1965:18" pos:end="1973:13">{<block_content pos:start="1967:17" pos:end="1971:35">

                <decl_stmt pos:start="1967:17" pos:end="1967:44"><decl pos:start="1967:17" pos:end="1967:43"><type pos:start="1967:17" pos:end="1967:20"><name pos:start="1967:17" pos:end="1967:20">TCGv</name></type> <name pos:start="1967:22" pos:end="1967:24">tmp</name> <init pos:start="1967:26" pos:end="1967:43">= <expr pos:start="1967:28" pos:end="1967:43"><call pos:start="1967:28" pos:end="1967:43"><name pos:start="1967:28" pos:end="1967:40">tcg_const_i64</name><argument_list pos:start="1967:41" pos:end="1967:43">(<argument pos:start="1967:42" pos:end="1967:42"><expr pos:start="1967:42" pos:end="1967:42"><literal type="number" pos:start="1967:42" pos:end="1967:42">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="1969:17" pos:end="1969:43"><expr pos:start="1969:17" pos:end="1969:42"><call pos:start="1969:17" pos:end="1969:42"><name pos:start="1969:17" pos:end="1969:37">gen_helper_store_fpcr</name><argument_list pos:start="1969:38" pos:end="1969:42">(<argument pos:start="1969:39" pos:end="1969:41"><expr pos:start="1969:39" pos:end="1969:41"><name pos:start="1969:39" pos:end="1969:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1971:17" pos:end="1971:35"><expr pos:start="1971:17" pos:end="1971:34"><call pos:start="1971:17" pos:end="1971:34"><name pos:start="1971:17" pos:end="1971:29">tcg_temp_free</name><argument_list pos:start="1971:30" pos:end="1971:34">(<argument pos:start="1971:31" pos:end="1971:33"><expr pos:start="1971:31" pos:end="1971:33"><name pos:start="1971:31" pos:end="1971:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1975:13" pos:end="1975:18">break;</break>

        <case pos:start="1977:9" pos:end="1977:19">case <expr pos:start="1977:14" pos:end="1977:18"><literal type="number" pos:start="1977:14" pos:end="1977:18">0x025</literal></expr>:</case>

            <comment type="block" pos:start="1979:13" pos:end="1979:25">/* MF_FPCR */</comment>

            <if_stmt pos:start="1981:13" pos:end="1983:50"><if pos:start="1981:13" pos:end="1983:50">if <condition pos:start="1981:16" pos:end="1981:33">(<expr pos:start="1981:17" pos:end="1981:32"><call pos:start="1981:17" pos:end="1981:32"><name pos:start="1981:17" pos:end="1981:22">likely</name><argument_list pos:start="1981:23" pos:end="1981:32">(<argument pos:start="1981:24" pos:end="1981:31"><expr pos:start="1981:24" pos:end="1981:31"><name pos:start="1981:24" pos:end="1981:25">ra</name> <operator pos:start="1981:27" pos:end="1981:28">!=</operator> <literal type="number" pos:start="1981:30" pos:end="1981:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1983:17" pos:end="1983:50"><block_content pos:start="1983:17" pos:end="1983:50">

                <expr_stmt pos:start="1983:17" pos:end="1983:50"><expr pos:start="1983:17" pos:end="1983:49"><call pos:start="1983:17" pos:end="1983:49"><name pos:start="1983:17" pos:end="1983:36">gen_helper_load_fpcr</name><argument_list pos:start="1983:37" pos:end="1983:49">(<argument pos:start="1983:38" pos:end="1983:48"><expr pos:start="1983:38" pos:end="1983:48"><name pos:start="1983:38" pos:end="1983:48"><name pos:start="1983:38" pos:end="1983:44">cpu_fir</name><index pos:start="1983:45" pos:end="1983:48">[<expr pos:start="1983:46" pos:end="1983:47"><name pos:start="1983:46" pos:end="1983:47">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="1985:13" pos:end="1985:18">break;</break>

        <case pos:start="1987:9" pos:end="1987:19">case <expr pos:start="1987:14" pos:end="1987:18"><literal type="number" pos:start="1987:14" pos:end="1987:18">0x02A</literal></expr>:</case>

            <comment type="block" pos:start="1989:13" pos:end="1989:25">/* FCMOVEQ */</comment>

            <expr_stmt pos:start="1991:13" pos:end="1991:36"><expr pos:start="1991:13" pos:end="1991:35"><call pos:start="1991:13" pos:end="1991:35"><name pos:start="1991:13" pos:end="1991:23">gen_fcmpfeq</name><argument_list pos:start="1991:24" pos:end="1991:35">(<argument pos:start="1991:25" pos:end="1991:26"><expr pos:start="1991:25" pos:end="1991:26"><name pos:start="1991:25" pos:end="1991:26">ra</name></expr></argument>, <argument pos:start="1991:29" pos:end="1991:30"><expr pos:start="1991:29" pos:end="1991:30"><name pos:start="1991:29" pos:end="1991:30">rb</name></expr></argument>, <argument pos:start="1991:33" pos:end="1991:34"><expr pos:start="1991:33" pos:end="1991:34"><name pos:start="1991:33" pos:end="1991:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1993:13" pos:end="1993:18">break;</break>

        <case pos:start="1995:9" pos:end="1995:19">case <expr pos:start="1995:14" pos:end="1995:18"><literal type="number" pos:start="1995:14" pos:end="1995:18">0x02B</literal></expr>:</case>

            <comment type="block" pos:start="1997:13" pos:end="1997:25">/* FCMOVNE */</comment>

            <expr_stmt pos:start="1999:13" pos:end="1999:36"><expr pos:start="1999:13" pos:end="1999:35"><call pos:start="1999:13" pos:end="1999:35"><name pos:start="1999:13" pos:end="1999:23">gen_fcmpfne</name><argument_list pos:start="1999:24" pos:end="1999:35">(<argument pos:start="1999:25" pos:end="1999:26"><expr pos:start="1999:25" pos:end="1999:26"><name pos:start="1999:25" pos:end="1999:26">ra</name></expr></argument>, <argument pos:start="1999:29" pos:end="1999:30"><expr pos:start="1999:29" pos:end="1999:30"><name pos:start="1999:29" pos:end="1999:30">rb</name></expr></argument>, <argument pos:start="1999:33" pos:end="1999:34"><expr pos:start="1999:33" pos:end="1999:34"><name pos:start="1999:33" pos:end="1999:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2001:13" pos:end="2001:18">break;</break>

        <case pos:start="2003:9" pos:end="2003:19">case <expr pos:start="2003:14" pos:end="2003:18"><literal type="number" pos:start="2003:14" pos:end="2003:18">0x02C</literal></expr>:</case>

            <comment type="block" pos:start="2005:13" pos:end="2005:25">/* FCMOVLT */</comment>

            <expr_stmt pos:start="2007:13" pos:end="2007:36"><expr pos:start="2007:13" pos:end="2007:35"><call pos:start="2007:13" pos:end="2007:35"><name pos:start="2007:13" pos:end="2007:23">gen_fcmpflt</name><argument_list pos:start="2007:24" pos:end="2007:35">(<argument pos:start="2007:25" pos:end="2007:26"><expr pos:start="2007:25" pos:end="2007:26"><name pos:start="2007:25" pos:end="2007:26">ra</name></expr></argument>, <argument pos:start="2007:29" pos:end="2007:30"><expr pos:start="2007:29" pos:end="2007:30"><name pos:start="2007:29" pos:end="2007:30">rb</name></expr></argument>, <argument pos:start="2007:33" pos:end="2007:34"><expr pos:start="2007:33" pos:end="2007:34"><name pos:start="2007:33" pos:end="2007:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2009:13" pos:end="2009:18">break;</break>

        <case pos:start="2011:9" pos:end="2011:19">case <expr pos:start="2011:14" pos:end="2011:18"><literal type="number" pos:start="2011:14" pos:end="2011:18">0x02D</literal></expr>:</case>

            <comment type="block" pos:start="2013:13" pos:end="2013:25">/* FCMOVGE */</comment>

            <expr_stmt pos:start="2015:13" pos:end="2015:36"><expr pos:start="2015:13" pos:end="2015:35"><call pos:start="2015:13" pos:end="2015:35"><name pos:start="2015:13" pos:end="2015:23">gen_fcmpfge</name><argument_list pos:start="2015:24" pos:end="2015:35">(<argument pos:start="2015:25" pos:end="2015:26"><expr pos:start="2015:25" pos:end="2015:26"><name pos:start="2015:25" pos:end="2015:26">ra</name></expr></argument>, <argument pos:start="2015:29" pos:end="2015:30"><expr pos:start="2015:29" pos:end="2015:30"><name pos:start="2015:29" pos:end="2015:30">rb</name></expr></argument>, <argument pos:start="2015:33" pos:end="2015:34"><expr pos:start="2015:33" pos:end="2015:34"><name pos:start="2015:33" pos:end="2015:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2017:13" pos:end="2017:18">break;</break>

        <case pos:start="2019:9" pos:end="2019:19">case <expr pos:start="2019:14" pos:end="2019:18"><literal type="number" pos:start="2019:14" pos:end="2019:18">0x02E</literal></expr>:</case>

            <comment type="block" pos:start="2021:13" pos:end="2021:25">/* FCMOVLE */</comment>

            <expr_stmt pos:start="2023:13" pos:end="2023:36"><expr pos:start="2023:13" pos:end="2023:35"><call pos:start="2023:13" pos:end="2023:35"><name pos:start="2023:13" pos:end="2023:23">gen_fcmpfle</name><argument_list pos:start="2023:24" pos:end="2023:35">(<argument pos:start="2023:25" pos:end="2023:26"><expr pos:start="2023:25" pos:end="2023:26"><name pos:start="2023:25" pos:end="2023:26">ra</name></expr></argument>, <argument pos:start="2023:29" pos:end="2023:30"><expr pos:start="2023:29" pos:end="2023:30"><name pos:start="2023:29" pos:end="2023:30">rb</name></expr></argument>, <argument pos:start="2023:33" pos:end="2023:34"><expr pos:start="2023:33" pos:end="2023:34"><name pos:start="2023:33" pos:end="2023:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2025:13" pos:end="2025:18">break;</break>

        <case pos:start="2027:9" pos:end="2027:19">case <expr pos:start="2027:14" pos:end="2027:18"><literal type="number" pos:start="2027:14" pos:end="2027:18">0x02F</literal></expr>:</case>

            <comment type="block" pos:start="2029:13" pos:end="2029:25">/* FCMOVGT */</comment>

            <expr_stmt pos:start="2031:13" pos:end="2031:36"><expr pos:start="2031:13" pos:end="2031:35"><call pos:start="2031:13" pos:end="2031:35"><name pos:start="2031:13" pos:end="2031:23">gen_fcmpfgt</name><argument_list pos:start="2031:24" pos:end="2031:35">(<argument pos:start="2031:25" pos:end="2031:26"><expr pos:start="2031:25" pos:end="2031:26"><name pos:start="2031:25" pos:end="2031:26">ra</name></expr></argument>, <argument pos:start="2031:29" pos:end="2031:30"><expr pos:start="2031:29" pos:end="2031:30"><name pos:start="2031:29" pos:end="2031:30">rb</name></expr></argument>, <argument pos:start="2031:33" pos:end="2031:34"><expr pos:start="2031:33" pos:end="2031:34"><name pos:start="2031:33" pos:end="2031:34">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2033:13" pos:end="2033:18">break;</break>

        <case pos:start="2035:9" pos:end="2035:19">case <expr pos:start="2035:14" pos:end="2035:18"><literal type="number" pos:start="2035:14" pos:end="2035:18">0x030</literal></expr>:</case>

            <comment type="block" pos:start="2037:13" pos:end="2037:23">/* CVTQL */</comment>

            <expr_stmt pos:start="2039:13" pos:end="2039:31"><expr pos:start="2039:13" pos:end="2039:30"><call pos:start="2039:13" pos:end="2039:30"><name pos:start="2039:13" pos:end="2039:22">gen_fcvtql</name><argument_list pos:start="2039:23" pos:end="2039:30">(<argument pos:start="2039:24" pos:end="2039:25"><expr pos:start="2039:24" pos:end="2039:25"><name pos:start="2039:24" pos:end="2039:25">rb</name></expr></argument>, <argument pos:start="2039:28" pos:end="2039:29"><expr pos:start="2039:28" pos:end="2039:29"><name pos:start="2039:28" pos:end="2039:29">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2041:13" pos:end="2041:18">break;</break>

        <case pos:start="2043:9" pos:end="2043:19">case <expr pos:start="2043:14" pos:end="2043:18"><literal type="number" pos:start="2043:14" pos:end="2043:18">0x130</literal></expr>:</case>

            <comment type="block" pos:start="2045:13" pos:end="2045:25">/* CVTQL/V */</comment>

            <expr_stmt pos:start="2047:13" pos:end="2047:32"><expr pos:start="2047:13" pos:end="2047:31"><call pos:start="2047:13" pos:end="2047:31"><name pos:start="2047:13" pos:end="2047:23">gen_fcvtqlv</name><argument_list pos:start="2047:24" pos:end="2047:31">(<argument pos:start="2047:25" pos:end="2047:26"><expr pos:start="2047:25" pos:end="2047:26"><name pos:start="2047:25" pos:end="2047:26">rb</name></expr></argument>, <argument pos:start="2047:29" pos:end="2047:30"><expr pos:start="2047:29" pos:end="2047:30"><name pos:start="2047:29" pos:end="2047:30">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2049:13" pos:end="2049:18">break;</break>

        <case pos:start="2051:9" pos:end="2051:19">case <expr pos:start="2051:14" pos:end="2051:18"><literal type="number" pos:start="2051:14" pos:end="2051:18">0x530</literal></expr>:</case>

            <comment type="block" pos:start="2053:13" pos:end="2053:26">/* CVTQL/SV */</comment>

            <expr_stmt pos:start="2055:13" pos:end="2055:33"><expr pos:start="2055:13" pos:end="2055:32"><call pos:start="2055:13" pos:end="2055:32"><name pos:start="2055:13" pos:end="2055:24">gen_fcvtqlsv</name><argument_list pos:start="2055:25" pos:end="2055:32">(<argument pos:start="2055:26" pos:end="2055:27"><expr pos:start="2055:26" pos:end="2055:27"><name pos:start="2055:26" pos:end="2055:27">rb</name></expr></argument>, <argument pos:start="2055:30" pos:end="2055:31"><expr pos:start="2055:30" pos:end="2055:31"><name pos:start="2055:30" pos:end="2055:31">rc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2057:13" pos:end="2057:18">break;</break>

        <default pos:start="2059:9" pos:end="2059:16">default:</default>

            <goto pos:start="2061:13" pos:end="2061:29">goto <name pos:start="2061:18" pos:end="2061:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2065:9" pos:end="2065:14">break;</break>

    <case pos:start="2067:5" pos:end="2067:14">case <expr pos:start="2067:10" pos:end="2067:13"><literal type="number" pos:start="2067:10" pos:end="2067:13">0x18</literal></expr>:</case>

        <switch pos:start="2069:9" pos:end="2183:9">switch <condition pos:start="2069:16" pos:end="2069:33">(<expr pos:start="2069:17" pos:end="2069:32"><operator pos:start="2069:17" pos:end="2069:17">(</operator><name pos:start="2069:18" pos:end="2069:25">uint16_t</name><operator pos:start="2069:26" pos:end="2069:26">)</operator><name pos:start="2069:27" pos:end="2069:32">disp16</name></expr>)</condition> <block pos:start="2069:35" pos:end="2183:9">{<block_content pos:start="2071:9" pos:end="2181:29">

        <case pos:start="2071:9" pos:end="2071:20">case <expr pos:start="2071:14" pos:end="2071:19"><literal type="number" pos:start="2071:14" pos:end="2071:19">0x0000</literal></expr>:</case>

            <comment type="block" pos:start="2073:13" pos:end="2073:23">/* TRAPB */</comment>

            <comment type="block" pos:start="2075:13" pos:end="2075:54">/* No-op. Just exit from the current tb */</comment>

            <expr_stmt pos:start="2077:13" pos:end="2077:20"><expr pos:start="2077:13" pos:end="2077:19"><name pos:start="2077:13" pos:end="2077:15">ret</name> <operator pos:start="2077:17" pos:end="2077:17">=</operator> <literal type="number" pos:start="2077:19" pos:end="2077:19">2</literal></expr>;</expr_stmt>

            <break pos:start="2079:13" pos:end="2079:18">break;</break>

        <case pos:start="2081:9" pos:end="2081:20">case <expr pos:start="2081:14" pos:end="2081:19"><literal type="number" pos:start="2081:14" pos:end="2081:19">0x0400</literal></expr>:</case>

            <comment type="block" pos:start="2083:13" pos:end="2083:22">/* EXCB */</comment>

            <comment type="block" pos:start="2085:13" pos:end="2085:54">/* No-op. Just exit from the current tb */</comment>

            <expr_stmt pos:start="2087:13" pos:end="2087:20"><expr pos:start="2087:13" pos:end="2087:19"><name pos:start="2087:13" pos:end="2087:15">ret</name> <operator pos:start="2087:17" pos:end="2087:17">=</operator> <literal type="number" pos:start="2087:19" pos:end="2087:19">2</literal></expr>;</expr_stmt>

            <break pos:start="2089:13" pos:end="2089:18">break;</break>

        <case pos:start="2091:9" pos:end="2091:20">case <expr pos:start="2091:14" pos:end="2091:19"><literal type="number" pos:start="2091:14" pos:end="2091:19">0x4000</literal></expr>:</case>

            <comment type="block" pos:start="2093:13" pos:end="2093:20">/* MB */</comment>

            <comment type="block" pos:start="2095:13" pos:end="2095:23">/* No-op */</comment>

            <break pos:start="2097:13" pos:end="2097:18">break;</break>

        <case pos:start="2099:9" pos:end="2099:20">case <expr pos:start="2099:14" pos:end="2099:19"><literal type="number" pos:start="2099:14" pos:end="2099:19">0x4400</literal></expr>:</case>

            <comment type="block" pos:start="2101:13" pos:end="2101:21">/* WMB */</comment>

            <comment type="block" pos:start="2103:13" pos:end="2103:23">/* No-op */</comment>

            <break pos:start="2105:13" pos:end="2105:18">break;</break>

        <case pos:start="2107:9" pos:end="2107:20">case <expr pos:start="2107:14" pos:end="2107:19"><literal type="number" pos:start="2107:14" pos:end="2107:19">0x8000</literal></expr>:</case>

            <comment type="block" pos:start="2109:13" pos:end="2109:23">/* FETCH */</comment>

            <comment type="block" pos:start="2111:13" pos:end="2111:23">/* No-op */</comment>

            <break pos:start="2113:13" pos:end="2113:18">break;</break>

        <case pos:start="2115:9" pos:end="2115:20">case <expr pos:start="2115:14" pos:end="2115:19"><literal type="number" pos:start="2115:14" pos:end="2115:19">0xA000</literal></expr>:</case>

            <comment type="block" pos:start="2117:13" pos:end="2117:25">/* FETCH_M */</comment>

            <comment type="block" pos:start="2119:13" pos:end="2119:23">/* No-op */</comment>

            <break pos:start="2121:13" pos:end="2121:18">break;</break>

        <case pos:start="2123:9" pos:end="2123:20">case <expr pos:start="2123:14" pos:end="2123:19"><literal type="number" pos:start="2123:14" pos:end="2123:19">0xC000</literal></expr>:</case>

            <comment type="block" pos:start="2125:13" pos:end="2125:22">/* RPCC */</comment>

            <if_stmt pos:start="2127:13" pos:end="2129:48"><if pos:start="2127:13" pos:end="2129:48">if <condition pos:start="2127:16" pos:end="2127:25">(<expr pos:start="2127:17" pos:end="2127:24"><name pos:start="2127:17" pos:end="2127:18">ra</name> <operator pos:start="2127:20" pos:end="2127:21">!=</operator> <literal type="number" pos:start="2127:23" pos:end="2127:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2129:17" pos:end="2129:48"><block_content pos:start="2129:17" pos:end="2129:48">

                <expr_stmt pos:start="2129:17" pos:end="2129:48"><expr pos:start="2129:17" pos:end="2129:47"><call pos:start="2129:17" pos:end="2129:47"><name pos:start="2129:17" pos:end="2129:35">gen_helper_load_pcc</name><argument_list pos:start="2129:36" pos:end="2129:47">(<argument pos:start="2129:37" pos:end="2129:46"><expr pos:start="2129:37" pos:end="2129:46"><name pos:start="2129:37" pos:end="2129:46"><name pos:start="2129:37" pos:end="2129:42">cpu_ir</name><index pos:start="2129:43" pos:end="2129:46">[<expr pos:start="2129:44" pos:end="2129:45"><name pos:start="2129:44" pos:end="2129:45">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="2131:13" pos:end="2131:18">break;</break>

        <case pos:start="2133:9" pos:end="2133:20">case <expr pos:start="2133:14" pos:end="2133:19"><literal type="number" pos:start="2133:14" pos:end="2133:19">0xE000</literal></expr>:</case>

            <comment type="block" pos:start="2135:13" pos:end="2135:20">/* RC */</comment>

            <if_stmt pos:start="2137:13" pos:end="2139:42"><if pos:start="2137:13" pos:end="2139:42">if <condition pos:start="2137:16" pos:end="2137:25">(<expr pos:start="2137:17" pos:end="2137:24"><name pos:start="2137:17" pos:end="2137:18">ra</name> <operator pos:start="2137:20" pos:end="2137:21">!=</operator> <literal type="number" pos:start="2137:23" pos:end="2137:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2139:17" pos:end="2139:42"><block_content pos:start="2139:17" pos:end="2139:42">

                <expr_stmt pos:start="2139:17" pos:end="2139:42"><expr pos:start="2139:17" pos:end="2139:41"><call pos:start="2139:17" pos:end="2139:41"><name pos:start="2139:17" pos:end="2139:29">gen_helper_rc</name><argument_list pos:start="2139:30" pos:end="2139:41">(<argument pos:start="2139:31" pos:end="2139:40"><expr pos:start="2139:31" pos:end="2139:40"><name pos:start="2139:31" pos:end="2139:40"><name pos:start="2139:31" pos:end="2139:36">cpu_ir</name><index pos:start="2139:37" pos:end="2139:40">[<expr pos:start="2139:38" pos:end="2139:39"><name pos:start="2139:38" pos:end="2139:39">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="2141:13" pos:end="2141:18">break;</break>

        <case pos:start="2143:9" pos:end="2154:0">case <expr pos:start="2143:14" pos:end="2143:19"><literal type="number" pos:start="2143:14" pos:end="2143:19">0xE800</literal></expr>:</case>

            <comment type="block" pos:start="2145:13" pos:end="2145:21">/* ECB */</comment>

            <comment type="block" pos:start="2147:13" pos:end="2147:57">/* XXX: TODO: evict tb cache at address rb */</comment>

<cpp:if pos:start="2149:1" pos:end="2149:5">#<cpp:directive pos:start="2149:2" pos:end="2149:3">if</cpp:directive> <expr pos:start="2149:5" pos:end="2149:5"><literal type="number" pos:start="2149:5" pos:end="2149:5">0</literal></expr></cpp:if>

            ret = 2;

<cpp:else pos:start="2153:1" pos:end="2153:5">#<cpp:directive pos:start="2153:2" pos:end="2153:5">else</cpp:directive></cpp:else>

            <goto pos:start="2155:13" pos:end="2158:0">goto <name pos:start="2155:18" pos:end="2155:28">invalid_opc</name>;</goto>

<cpp:endif pos:start="2157:1" pos:end="2157:6">#<cpp:directive pos:start="2157:2" pos:end="2157:6">endif</cpp:directive></cpp:endif>

            <break pos:start="2159:13" pos:end="2159:18">break;</break>

        <case pos:start="2161:9" pos:end="2161:20">case <expr pos:start="2161:14" pos:end="2161:19"><literal type="number" pos:start="2161:14" pos:end="2161:19">0xF000</literal></expr>:</case>

            <comment type="block" pos:start="2163:13" pos:end="2163:20">/* RS */</comment>

            <if_stmt pos:start="2165:13" pos:end="2167:42"><if pos:start="2165:13" pos:end="2167:42">if <condition pos:start="2165:16" pos:end="2165:25">(<expr pos:start="2165:17" pos:end="2165:24"><name pos:start="2165:17" pos:end="2165:18">ra</name> <operator pos:start="2165:20" pos:end="2165:21">!=</operator> <literal type="number" pos:start="2165:23" pos:end="2165:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2167:17" pos:end="2167:42"><block_content pos:start="2167:17" pos:end="2167:42">

                <expr_stmt pos:start="2167:17" pos:end="2167:42"><expr pos:start="2167:17" pos:end="2167:41"><call pos:start="2167:17" pos:end="2167:41"><name pos:start="2167:17" pos:end="2167:29">gen_helper_rs</name><argument_list pos:start="2167:30" pos:end="2167:41">(<argument pos:start="2167:31" pos:end="2167:40"><expr pos:start="2167:31" pos:end="2167:40"><name pos:start="2167:31" pos:end="2167:40"><name pos:start="2167:31" pos:end="2167:36">cpu_ir</name><index pos:start="2167:37" pos:end="2167:40">[<expr pos:start="2167:38" pos:end="2167:39"><name pos:start="2167:38" pos:end="2167:39">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="2169:13" pos:end="2169:18">break;</break>

        <case pos:start="2171:9" pos:end="2171:20">case <expr pos:start="2171:14" pos:end="2171:19"><literal type="number" pos:start="2171:14" pos:end="2171:19">0xF800</literal></expr>:</case>

            <comment type="block" pos:start="2173:13" pos:end="2173:22">/* WH64 */</comment>

            <comment type="block" pos:start="2175:13" pos:end="2175:23">/* No-op */</comment>

            <break pos:start="2177:13" pos:end="2177:18">break;</break>

        <default pos:start="2179:9" pos:end="2179:16">default:</default>

            <goto pos:start="2181:13" pos:end="2181:29">goto <name pos:start="2181:18" pos:end="2181:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2185:9" pos:end="2185:14">break;</break>

    <case pos:start="2187:5" pos:end="2192:0">case <expr pos:start="2187:10" pos:end="2187:13"><literal type="number" pos:start="2187:10" pos:end="2187:13">0x19</literal></expr>:</case>

        <comment type="block" pos:start="2189:9" pos:end="2189:31">/* HW_MFPR (PALcode) */</comment>

<cpp:if pos:start="2191:1" pos:end="2191:30">#<cpp:directive pos:start="2191:2" pos:end="2191:3">if</cpp:directive> <expr pos:start="2191:5" pos:end="2191:30"><call pos:start="2191:5" pos:end="2191:30"><name pos:start="2191:5" pos:end="2191:11">defined</name> <argument_list pos:start="2191:13" pos:end="2191:30">(<argument pos:start="2191:14" pos:end="2191:29"><expr pos:start="2191:14" pos:end="2191:29"><name pos:start="2191:14" pos:end="2191:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2193:9" pos:end="2196:0">goto <name pos:start="2193:14" pos:end="2193:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2195:1" pos:end="2195:5">#<cpp:directive pos:start="2195:2" pos:end="2195:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2197:9" pos:end="2199:29"><if pos:start="2197:9" pos:end="2199:29">if <condition pos:start="2197:12" pos:end="2197:27">(<expr pos:start="2197:13" pos:end="2197:26"><operator pos:start="2197:13" pos:end="2197:13">!</operator><name pos:start="2197:14" pos:end="2197:26"><name pos:start="2197:14" pos:end="2197:16">ctx</name><operator pos:start="2197:17" pos:end="2197:18">-&gt;</operator><name pos:start="2197:19" pos:end="2197:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2199:13" pos:end="2199:29"><block_content pos:start="2199:13" pos:end="2199:29">

            <goto pos:start="2199:13" pos:end="2199:29">goto <name pos:start="2199:18" pos:end="2199:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="2201:9" pos:end="2209:9"><if pos:start="2201:9" pos:end="2209:9">if <condition pos:start="2201:12" pos:end="2201:21">(<expr pos:start="2201:13" pos:end="2201:20"><name pos:start="2201:13" pos:end="2201:14">ra</name> <operator pos:start="2201:16" pos:end="2201:17">!=</operator> <literal type="number" pos:start="2201:19" pos:end="2201:20">31</literal></expr>)</condition> <block pos:start="2201:23" pos:end="2209:9">{<block_content pos:start="2203:13" pos:end="2207:31">

            <decl_stmt pos:start="2203:13" pos:end="2203:50"><decl pos:start="2203:13" pos:end="2203:49"><type pos:start="2203:13" pos:end="2203:16"><name pos:start="2203:13" pos:end="2203:16">TCGv</name></type> <name pos:start="2203:18" pos:end="2203:20">tmp</name> <init pos:start="2203:22" pos:end="2203:49">= <expr pos:start="2203:24" pos:end="2203:49"><call pos:start="2203:24" pos:end="2203:49"><name pos:start="2203:24" pos:end="2203:36">tcg_const_i32</name><argument_list pos:start="2203:37" pos:end="2203:49">(<argument pos:start="2203:38" pos:end="2203:48"><expr pos:start="2203:38" pos:end="2203:48"><name pos:start="2203:38" pos:end="2203:41">insn</name> <operator pos:start="2203:43" pos:end="2203:43">&amp;</operator> <literal type="number" pos:start="2203:45" pos:end="2203:48">0xFF</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="2205:13" pos:end="2205:57"><expr pos:start="2205:13" pos:end="2205:56"><call pos:start="2205:13" pos:end="2205:56"><name pos:start="2205:13" pos:end="2205:27">gen_helper_mfpr</name><argument_list pos:start="2205:28" pos:end="2205:56">(<argument pos:start="2205:29" pos:end="2205:38"><expr pos:start="2205:29" pos:end="2205:38"><name pos:start="2205:29" pos:end="2205:38"><name pos:start="2205:29" pos:end="2205:34">cpu_ir</name><index pos:start="2205:35" pos:end="2205:38">[<expr pos:start="2205:36" pos:end="2205:37"><name pos:start="2205:36" pos:end="2205:37">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2205:41" pos:end="2205:43"><expr pos:start="2205:41" pos:end="2205:43"><name pos:start="2205:41" pos:end="2205:43">tmp</name></expr></argument>, <argument pos:start="2205:46" pos:end="2205:55"><expr pos:start="2205:46" pos:end="2205:55"><name pos:start="2205:46" pos:end="2205:55"><name pos:start="2205:46" pos:end="2205:51">cpu_ir</name><index pos:start="2205:52" pos:end="2205:55">[<expr pos:start="2205:53" pos:end="2205:54"><name pos:start="2205:53" pos:end="2205:54">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2207:13" pos:end="2207:31"><expr pos:start="2207:13" pos:end="2207:30"><call pos:start="2207:13" pos:end="2207:30"><name pos:start="2207:13" pos:end="2207:25">tcg_temp_free</name><argument_list pos:start="2207:26" pos:end="2207:30">(<argument pos:start="2207:27" pos:end="2207:29"><expr pos:start="2207:27" pos:end="2207:29"><name pos:start="2207:27" pos:end="2207:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="2211:9" pos:end="2214:0">break;</break>

<cpp:endif pos:start="2213:1" pos:end="2213:6">#<cpp:directive pos:start="2213:2" pos:end="2213:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2215:5" pos:end="2215:14">case <expr pos:start="2215:10" pos:end="2215:13"><literal type="number" pos:start="2215:10" pos:end="2215:13">0x1A</literal></expr>:</case>

        <if_stmt pos:start="2217:9" pos:end="2223:40"><if pos:start="2217:9" pos:end="2219:53">if <condition pos:start="2217:12" pos:end="2217:21">(<expr pos:start="2217:13" pos:end="2217:20"><name pos:start="2217:13" pos:end="2217:14">rb</name> <operator pos:start="2217:16" pos:end="2217:17">!=</operator> <literal type="number" pos:start="2217:19" pos:end="2217:20">31</literal></expr>)</condition><block type="pseudo" pos:start="2219:13" pos:end="2219:53"><block_content pos:start="2219:13" pos:end="2219:53">

            <expr_stmt pos:start="2219:13" pos:end="2219:53"><expr pos:start="2219:13" pos:end="2219:52"><call pos:start="2219:13" pos:end="2219:52"><name pos:start="2219:13" pos:end="2219:28">tcg_gen_andi_i64</name><argument_list pos:start="2219:29" pos:end="2219:52">(<argument pos:start="2219:30" pos:end="2219:35"><expr pos:start="2219:30" pos:end="2219:35"><name pos:start="2219:30" pos:end="2219:35">cpu_pc</name></expr></argument>, <argument pos:start="2219:38" pos:end="2219:47"><expr pos:start="2219:38" pos:end="2219:47"><name pos:start="2219:38" pos:end="2219:47"><name pos:start="2219:38" pos:end="2219:43">cpu_ir</name><index pos:start="2219:44" pos:end="2219:47">[<expr pos:start="2219:45" pos:end="2219:46"><name pos:start="2219:45" pos:end="2219:46">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2219:50" pos:end="2219:51"><expr pos:start="2219:50" pos:end="2219:51"><operator pos:start="2219:50" pos:end="2219:50">~</operator><literal type="number" pos:start="2219:51" pos:end="2219:51">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="2221:9" pos:end="2223:40">else<block type="pseudo" pos:start="2223:13" pos:end="2223:40"><block_content pos:start="2223:13" pos:end="2223:40">

            <expr_stmt pos:start="2223:13" pos:end="2223:40"><expr pos:start="2223:13" pos:end="2223:39"><call pos:start="2223:13" pos:end="2223:39"><name pos:start="2223:13" pos:end="2223:28">tcg_gen_movi_i64</name><argument_list pos:start="2223:29" pos:end="2223:39">(<argument pos:start="2223:30" pos:end="2223:35"><expr pos:start="2223:30" pos:end="2223:35"><name pos:start="2223:30" pos:end="2223:35">cpu_pc</name></expr></argument>, <argument pos:start="2223:38" pos:end="2223:38"><expr pos:start="2223:38" pos:end="2223:38"><literal type="number" pos:start="2223:38" pos:end="2223:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="2225:9" pos:end="2227:50"><if pos:start="2225:9" pos:end="2227:50">if <condition pos:start="2225:12" pos:end="2225:21">(<expr pos:start="2225:13" pos:end="2225:20"><name pos:start="2225:13" pos:end="2225:14">ra</name> <operator pos:start="2225:16" pos:end="2225:17">!=</operator> <literal type="number" pos:start="2225:19" pos:end="2225:20">31</literal></expr>)</condition><block type="pseudo" pos:start="2227:13" pos:end="2227:50"><block_content pos:start="2227:13" pos:end="2227:50">

            <expr_stmt pos:start="2227:13" pos:end="2227:50"><expr pos:start="2227:13" pos:end="2227:49"><call pos:start="2227:13" pos:end="2227:49"><name pos:start="2227:13" pos:end="2227:28">tcg_gen_movi_i64</name><argument_list pos:start="2227:29" pos:end="2227:49">(<argument pos:start="2227:30" pos:end="2227:39"><expr pos:start="2227:30" pos:end="2227:39"><name pos:start="2227:30" pos:end="2227:39"><name pos:start="2227:30" pos:end="2227:35">cpu_ir</name><index pos:start="2227:36" pos:end="2227:39">[<expr pos:start="2227:37" pos:end="2227:38"><name pos:start="2227:37" pos:end="2227:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2227:42" pos:end="2227:48"><expr pos:start="2227:42" pos:end="2227:48"><name pos:start="2227:42" pos:end="2227:48"><name pos:start="2227:42" pos:end="2227:44">ctx</name><operator pos:start="2227:45" pos:end="2227:46">-&gt;</operator><name pos:start="2227:47" pos:end="2227:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <comment type="block" pos:start="2229:9" pos:end="2229:72">/* Those four jumps only differ by the branch prediction hint */</comment>

        <switch pos:start="2231:9" pos:end="2257:9">switch <condition pos:start="2231:16" pos:end="2231:20">(<expr pos:start="2231:17" pos:end="2231:19"><name pos:start="2231:17" pos:end="2231:19">fn2</name></expr>)</condition> <block pos:start="2231:22" pos:end="2257:9">{<block_content pos:start="2233:9" pos:end="2255:18">

        <case pos:start="2233:9" pos:end="2233:17">case <expr pos:start="2233:14" pos:end="2233:16"><literal type="number" pos:start="2233:14" pos:end="2233:16">0x0</literal></expr>:</case>

            <comment type="block" pos:start="2235:13" pos:end="2235:21">/* JMP */</comment>

            <break pos:start="2237:13" pos:end="2237:18">break;</break>

        <case pos:start="2239:9" pos:end="2239:17">case <expr pos:start="2239:14" pos:end="2239:16"><literal type="number" pos:start="2239:14" pos:end="2239:16">0x1</literal></expr>:</case>

            <comment type="block" pos:start="2241:13" pos:end="2241:21">/* JSR */</comment>

            <break pos:start="2243:13" pos:end="2243:18">break;</break>

        <case pos:start="2245:9" pos:end="2245:17">case <expr pos:start="2245:14" pos:end="2245:16"><literal type="number" pos:start="2245:14" pos:end="2245:16">0x2</literal></expr>:</case>

            <comment type="block" pos:start="2247:13" pos:end="2247:21">/* RET */</comment>

            <break pos:start="2249:13" pos:end="2249:18">break;</break>

        <case pos:start="2251:9" pos:end="2251:17">case <expr pos:start="2251:14" pos:end="2251:16"><literal type="number" pos:start="2251:14" pos:end="2251:16">0x3</literal></expr>:</case>

            <comment type="block" pos:start="2253:13" pos:end="2253:31">/* JSR_COROUTINE */</comment>

            <break pos:start="2255:13" pos:end="2255:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="2259:9" pos:end="2259:16"><expr pos:start="2259:9" pos:end="2259:15"><name pos:start="2259:9" pos:end="2259:11">ret</name> <operator pos:start="2259:13" pos:end="2259:13">=</operator> <literal type="number" pos:start="2259:15" pos:end="2259:15">1</literal></expr>;</expr_stmt>

        <break pos:start="2261:9" pos:end="2261:14">break;</break>

    <case pos:start="2263:5" pos:end="2268:0">case <expr pos:start="2263:10" pos:end="2263:13"><literal type="number" pos:start="2263:10" pos:end="2263:13">0x1B</literal></expr>:</case>

        <comment type="block" pos:start="2265:9" pos:end="2265:29">/* HW_LD (PALcode) */</comment>

<cpp:if pos:start="2267:1" pos:end="2267:30">#<cpp:directive pos:start="2267:2" pos:end="2267:3">if</cpp:directive> <expr pos:start="2267:5" pos:end="2267:30"><call pos:start="2267:5" pos:end="2267:30"><name pos:start="2267:5" pos:end="2267:11">defined</name> <argument_list pos:start="2267:13" pos:end="2267:30">(<argument pos:start="2267:14" pos:end="2267:29"><expr pos:start="2267:14" pos:end="2267:29"><name pos:start="2267:14" pos:end="2267:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2269:9" pos:end="2272:0">goto <name pos:start="2269:14" pos:end="2269:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2271:1" pos:end="2271:5">#<cpp:directive pos:start="2271:2" pos:end="2271:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2273:9" pos:end="2275:29"><if pos:start="2273:9" pos:end="2275:29">if <condition pos:start="2273:12" pos:end="2273:27">(<expr pos:start="2273:13" pos:end="2273:26"><operator pos:start="2273:13" pos:end="2273:13">!</operator><name pos:start="2273:14" pos:end="2273:26"><name pos:start="2273:14" pos:end="2273:16">ctx</name><operator pos:start="2273:17" pos:end="2273:18">-&gt;</operator><name pos:start="2273:19" pos:end="2273:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2275:13" pos:end="2275:29"><block_content pos:start="2275:13" pos:end="2275:29">

            <goto pos:start="2275:13" pos:end="2275:29">goto <name pos:start="2275:18" pos:end="2275:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="2277:9" pos:end="2451:9"><if pos:start="2277:9" pos:end="2451:9">if <condition pos:start="2277:12" pos:end="2277:21">(<expr pos:start="2277:13" pos:end="2277:20"><name pos:start="2277:13" pos:end="2277:14">ra</name> <operator pos:start="2277:16" pos:end="2277:17">!=</operator> <literal type="number" pos:start="2277:19" pos:end="2277:20">31</literal></expr>)</condition> <block pos:start="2277:23" pos:end="2451:9">{<block_content pos:start="2279:13" pos:end="2449:32">

            <decl_stmt pos:start="2279:13" pos:end="2279:39"><decl pos:start="2279:13" pos:end="2279:38"><type pos:start="2279:13" pos:end="2279:16"><name pos:start="2279:13" pos:end="2279:16">TCGv</name></type> <name pos:start="2279:18" pos:end="2279:21">addr</name> <init pos:start="2279:23" pos:end="2279:38">= <expr pos:start="2279:25" pos:end="2279:38"><call pos:start="2279:25" pos:end="2279:38"><name pos:start="2279:25" pos:end="2279:36">tcg_temp_new</name><argument_list pos:start="2279:37" pos:end="2279:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="2281:13" pos:end="2287:47"><if pos:start="2281:13" pos:end="2283:59">if <condition pos:start="2281:16" pos:end="2281:25">(<expr pos:start="2281:17" pos:end="2281:24"><name pos:start="2281:17" pos:end="2281:18">rb</name> <operator pos:start="2281:20" pos:end="2281:21">!=</operator> <literal type="number" pos:start="2281:23" pos:end="2281:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2283:17" pos:end="2283:59"><block_content pos:start="2283:17" pos:end="2283:59">

                <expr_stmt pos:start="2283:17" pos:end="2283:59"><expr pos:start="2283:17" pos:end="2283:58"><call pos:start="2283:17" pos:end="2283:58"><name pos:start="2283:17" pos:end="2283:32">tcg_gen_addi_i64</name><argument_list pos:start="2283:33" pos:end="2283:58">(<argument pos:start="2283:34" pos:end="2283:37"><expr pos:start="2283:34" pos:end="2283:37"><name pos:start="2283:34" pos:end="2283:37">addr</name></expr></argument>, <argument pos:start="2283:40" pos:end="2283:49"><expr pos:start="2283:40" pos:end="2283:49"><name pos:start="2283:40" pos:end="2283:49"><name pos:start="2283:40" pos:end="2283:45">cpu_ir</name><index pos:start="2283:46" pos:end="2283:49">[<expr pos:start="2283:47" pos:end="2283:48"><name pos:start="2283:47" pos:end="2283:48">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2283:52" pos:end="2283:57"><expr pos:start="2283:52" pos:end="2283:57"><name pos:start="2283:52" pos:end="2283:57">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2285:13" pos:end="2287:47">else<block type="pseudo" pos:start="2287:17" pos:end="2287:47"><block_content pos:start="2287:17" pos:end="2287:47">

                <expr_stmt pos:start="2287:17" pos:end="2287:47"><expr pos:start="2287:17" pos:end="2287:46"><call pos:start="2287:17" pos:end="2287:46"><name pos:start="2287:17" pos:end="2287:32">tcg_gen_movi_i64</name><argument_list pos:start="2287:33" pos:end="2287:46">(<argument pos:start="2287:34" pos:end="2287:37"><expr pos:start="2287:34" pos:end="2287:37"><name pos:start="2287:34" pos:end="2287:37">addr</name></expr></argument>, <argument pos:start="2287:40" pos:end="2287:45"><expr pos:start="2287:40" pos:end="2287:45"><name pos:start="2287:40" pos:end="2287:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <switch pos:start="2289:13" pos:end="2447:13">switch <condition pos:start="2289:20" pos:end="2289:39">(<expr pos:start="2289:21" pos:end="2289:38"><operator pos:start="2289:21" pos:end="2289:21">(</operator><name pos:start="2289:22" pos:end="2289:25">insn</name> <operator pos:start="2289:27" pos:end="2289:28">&gt;&gt;</operator> <literal type="number" pos:start="2289:30" pos:end="2289:31">12</literal><operator pos:start="2289:32" pos:end="2289:32">)</operator> <operator pos:start="2289:34" pos:end="2289:34">&amp;</operator> <literal type="number" pos:start="2289:36" pos:end="2289:38">0xF</literal></expr>)</condition> <block pos:start="2289:41" pos:end="2447:13">{<block_content pos:start="2291:13" pos:end="2445:22">

            <case pos:start="2291:13" pos:end="2291:21">case <expr pos:start="2291:18" pos:end="2291:20"><literal type="number" pos:start="2291:18" pos:end="2291:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="2293:17" pos:end="2293:46">/* Longword physical access */</comment>

                <expr_stmt pos:start="2295:17" pos:end="2295:53"><expr pos:start="2295:17" pos:end="2295:52"><call pos:start="2295:17" pos:end="2295:52"><name pos:start="2295:17" pos:end="2295:34">gen_helper_ldl_raw</name><argument_list pos:start="2295:35" pos:end="2295:52">(<argument pos:start="2295:36" pos:end="2295:45"><expr pos:start="2295:36" pos:end="2295:45"><name pos:start="2295:36" pos:end="2295:45"><name pos:start="2295:36" pos:end="2295:41">cpu_ir</name><index pos:start="2295:42" pos:end="2295:45">[<expr pos:start="2295:43" pos:end="2295:44"><name pos:start="2295:43" pos:end="2295:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2295:48" pos:end="2295:51"><expr pos:start="2295:48" pos:end="2295:51"><name pos:start="2295:48" pos:end="2295:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2297:17" pos:end="2297:22">break;</break>

            <case pos:start="2299:13" pos:end="2299:21">case <expr pos:start="2299:18" pos:end="2299:20"><literal type="number" pos:start="2299:18" pos:end="2299:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2301:17" pos:end="2301:46">/* Quadword physical access */</comment>

                <expr_stmt pos:start="2303:17" pos:end="2303:53"><expr pos:start="2303:17" pos:end="2303:52"><call pos:start="2303:17" pos:end="2303:52"><name pos:start="2303:17" pos:end="2303:34">gen_helper_ldq_raw</name><argument_list pos:start="2303:35" pos:end="2303:52">(<argument pos:start="2303:36" pos:end="2303:45"><expr pos:start="2303:36" pos:end="2303:45"><name pos:start="2303:36" pos:end="2303:45"><name pos:start="2303:36" pos:end="2303:41">cpu_ir</name><index pos:start="2303:42" pos:end="2303:45">[<expr pos:start="2303:43" pos:end="2303:44"><name pos:start="2303:43" pos:end="2303:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2303:48" pos:end="2303:51"><expr pos:start="2303:48" pos:end="2303:51"><name pos:start="2303:48" pos:end="2303:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2305:17" pos:end="2305:22">break;</break>

            <case pos:start="2307:13" pos:end="2307:21">case <expr pos:start="2307:18" pos:end="2307:20"><literal type="number" pos:start="2307:18" pos:end="2307:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2309:17" pos:end="2309:56">/* Longword physical access with lock */</comment>

                <expr_stmt pos:start="2311:17" pos:end="2311:55"><expr pos:start="2311:17" pos:end="2311:54"><call pos:start="2311:17" pos:end="2311:54"><name pos:start="2311:17" pos:end="2311:36">gen_helper_ldl_l_raw</name><argument_list pos:start="2311:37" pos:end="2311:54">(<argument pos:start="2311:38" pos:end="2311:47"><expr pos:start="2311:38" pos:end="2311:47"><name pos:start="2311:38" pos:end="2311:47"><name pos:start="2311:38" pos:end="2311:43">cpu_ir</name><index pos:start="2311:44" pos:end="2311:47">[<expr pos:start="2311:45" pos:end="2311:46"><name pos:start="2311:45" pos:end="2311:46">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2311:50" pos:end="2311:53"><expr pos:start="2311:50" pos:end="2311:53"><name pos:start="2311:50" pos:end="2311:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2313:17" pos:end="2313:22">break;</break>

            <case pos:start="2315:13" pos:end="2315:21">case <expr pos:start="2315:18" pos:end="2315:20"><literal type="number" pos:start="2315:18" pos:end="2315:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2317:17" pos:end="2317:56">/* Quadword physical access with lock */</comment>

                <expr_stmt pos:start="2319:17" pos:end="2319:55"><expr pos:start="2319:17" pos:end="2319:54"><call pos:start="2319:17" pos:end="2319:54"><name pos:start="2319:17" pos:end="2319:36">gen_helper_ldq_l_raw</name><argument_list pos:start="2319:37" pos:end="2319:54">(<argument pos:start="2319:38" pos:end="2319:47"><expr pos:start="2319:38" pos:end="2319:47"><name pos:start="2319:38" pos:end="2319:47"><name pos:start="2319:38" pos:end="2319:43">cpu_ir</name><index pos:start="2319:44" pos:end="2319:47">[<expr pos:start="2319:45" pos:end="2319:46"><name pos:start="2319:45" pos:end="2319:46">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2319:50" pos:end="2319:53"><expr pos:start="2319:50" pos:end="2319:53"><name pos:start="2319:50" pos:end="2319:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2321:17" pos:end="2321:22">break;</break>

            <case pos:start="2323:13" pos:end="2323:21">case <expr pos:start="2323:18" pos:end="2323:20"><literal type="number" pos:start="2323:18" pos:end="2323:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2325:17" pos:end="2325:48">/* Longword virtual PTE fetch */</comment>

                <expr_stmt pos:start="2327:17" pos:end="2327:56"><expr pos:start="2327:17" pos:end="2327:55"><call pos:start="2327:17" pos:end="2327:55"><name pos:start="2327:17" pos:end="2327:37">gen_helper_ldl_kernel</name><argument_list pos:start="2327:38" pos:end="2327:55">(<argument pos:start="2327:39" pos:end="2327:48"><expr pos:start="2327:39" pos:end="2327:48"><name pos:start="2327:39" pos:end="2327:48"><name pos:start="2327:39" pos:end="2327:44">cpu_ir</name><index pos:start="2327:45" pos:end="2327:48">[<expr pos:start="2327:46" pos:end="2327:47"><name pos:start="2327:46" pos:end="2327:47">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2327:51" pos:end="2327:54"><expr pos:start="2327:51" pos:end="2327:54"><name pos:start="2327:51" pos:end="2327:54">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2329:17" pos:end="2329:22">break;</break>

            <case pos:start="2331:13" pos:end="2331:21">case <expr pos:start="2331:18" pos:end="2331:20"><literal type="number" pos:start="2331:18" pos:end="2331:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="2333:17" pos:end="2333:48">/* Quadword virtual PTE fetch */</comment>

                <expr_stmt pos:start="2335:17" pos:end="2335:56"><expr pos:start="2335:17" pos:end="2335:55"><call pos:start="2335:17" pos:end="2335:55"><name pos:start="2335:17" pos:end="2335:37">gen_helper_ldq_kernel</name><argument_list pos:start="2335:38" pos:end="2335:55">(<argument pos:start="2335:39" pos:end="2335:48"><expr pos:start="2335:39" pos:end="2335:48"><name pos:start="2335:39" pos:end="2335:48"><name pos:start="2335:39" pos:end="2335:44">cpu_ir</name><index pos:start="2335:45" pos:end="2335:48">[<expr pos:start="2335:46" pos:end="2335:47"><name pos:start="2335:46" pos:end="2335:47">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2335:51" pos:end="2335:54"><expr pos:start="2335:51" pos:end="2335:54"><name pos:start="2335:51" pos:end="2335:54">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2337:17" pos:end="2337:22">break;</break>

            <case pos:start="2339:13" pos:end="2339:21">case <expr pos:start="2339:18" pos:end="2339:20"><literal type="number" pos:start="2339:18" pos:end="2339:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="2341:17" pos:end="2341:36">/* Incpu_ir[ra]id */</comment>

                <goto pos:start="2343:17" pos:end="2343:40">goto <name pos:start="2343:22" pos:end="2343:33"><name pos:start="2343:22" pos:end="2343:29">incpu_ir</name><index pos:start="2343:30" pos:end="2343:33">[<expr pos:start="2343:31" pos:end="2343:32"><name pos:start="2343:31" pos:end="2343:32">ra</name></expr>]</index></name><name pos:start="2343:34" pos:end="2343:39">id_opc</name>;</goto>

            <case pos:start="2345:13" pos:end="2345:21">case <expr pos:start="2345:18" pos:end="2345:20"><literal type="number" pos:start="2345:18" pos:end="2345:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="2347:17" pos:end="2347:36">/* Incpu_ir[ra]id */</comment>

                <goto pos:start="2349:17" pos:end="2349:40">goto <name pos:start="2349:22" pos:end="2349:33"><name pos:start="2349:22" pos:end="2349:29">incpu_ir</name><index pos:start="2349:30" pos:end="2349:33">[<expr pos:start="2349:31" pos:end="2349:32"><name pos:start="2349:31" pos:end="2349:32">ra</name></expr>]</index></name><name pos:start="2349:34" pos:end="2349:39">id_opc</name>;</goto>

            <case pos:start="2351:13" pos:end="2351:21">case <expr pos:start="2351:18" pos:end="2351:20"><literal type="number" pos:start="2351:18" pos:end="2351:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="2353:17" pos:end="2353:45">/* Longword virtual access */</comment>

                <expr_stmt pos:start="2355:17" pos:end="2355:55"><expr pos:start="2355:17" pos:end="2355:54"><call pos:start="2355:17" pos:end="2355:54"><name pos:start="2355:17" pos:end="2355:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="2355:43" pos:end="2355:54">(<argument pos:start="2355:44" pos:end="2355:47"><expr pos:start="2355:44" pos:end="2355:47"><name pos:start="2355:44" pos:end="2355:47">addr</name></expr></argument>, <argument pos:start="2355:50" pos:end="2355:53"><expr pos:start="2355:50" pos:end="2355:53"><name pos:start="2355:50" pos:end="2355:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2357:17" pos:end="2357:53"><expr pos:start="2357:17" pos:end="2357:52"><call pos:start="2357:17" pos:end="2357:52"><name pos:start="2357:17" pos:end="2357:34">gen_helper_ldl_raw</name><argument_list pos:start="2357:35" pos:end="2357:52">(<argument pos:start="2357:36" pos:end="2357:45"><expr pos:start="2357:36" pos:end="2357:45"><name pos:start="2357:36" pos:end="2357:45"><name pos:start="2357:36" pos:end="2357:41">cpu_ir</name><index pos:start="2357:42" pos:end="2357:45">[<expr pos:start="2357:43" pos:end="2357:44"><name pos:start="2357:43" pos:end="2357:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2357:48" pos:end="2357:51"><expr pos:start="2357:48" pos:end="2357:51"><name pos:start="2357:48" pos:end="2357:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2359:17" pos:end="2359:22">break;</break>

            <case pos:start="2361:13" pos:end="2361:21">case <expr pos:start="2361:18" pos:end="2361:20"><literal type="number" pos:start="2361:18" pos:end="2361:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="2363:17" pos:end="2363:45">/* Quadword virtual access */</comment>

                <expr_stmt pos:start="2365:17" pos:end="2365:55"><expr pos:start="2365:17" pos:end="2365:54"><call pos:start="2365:17" pos:end="2365:54"><name pos:start="2365:17" pos:end="2365:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="2365:43" pos:end="2365:54">(<argument pos:start="2365:44" pos:end="2365:47"><expr pos:start="2365:44" pos:end="2365:47"><name pos:start="2365:44" pos:end="2365:47">addr</name></expr></argument>, <argument pos:start="2365:50" pos:end="2365:53"><expr pos:start="2365:50" pos:end="2365:53"><name pos:start="2365:50" pos:end="2365:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2367:17" pos:end="2367:53"><expr pos:start="2367:17" pos:end="2367:52"><call pos:start="2367:17" pos:end="2367:52"><name pos:start="2367:17" pos:end="2367:34">gen_helper_ldq_raw</name><argument_list pos:start="2367:35" pos:end="2367:52">(<argument pos:start="2367:36" pos:end="2367:45"><expr pos:start="2367:36" pos:end="2367:45"><name pos:start="2367:36" pos:end="2367:45"><name pos:start="2367:36" pos:end="2367:41">cpu_ir</name><index pos:start="2367:42" pos:end="2367:45">[<expr pos:start="2367:43" pos:end="2367:44"><name pos:start="2367:43" pos:end="2367:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2367:48" pos:end="2367:51"><expr pos:start="2367:48" pos:end="2367:51"><name pos:start="2367:48" pos:end="2367:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2369:17" pos:end="2369:22">break;</break>

            <case pos:start="2371:13" pos:end="2371:21">case <expr pos:start="2371:18" pos:end="2371:20"><literal type="number" pos:start="2371:18" pos:end="2371:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="2373:17" pos:end="2373:67">/* Longword virtual access with protection check */</comment>

                <expr_stmt pos:start="2375:17" pos:end="2375:65"><expr pos:start="2375:17" pos:end="2375:64"><call pos:start="2375:17" pos:end="2375:64"><name pos:start="2375:17" pos:end="2375:34">tcg_gen_qemu_ld32s</name><argument_list pos:start="2375:35" pos:end="2375:64">(<argument pos:start="2375:36" pos:end="2375:45"><expr pos:start="2375:36" pos:end="2375:45"><name pos:start="2375:36" pos:end="2375:45"><name pos:start="2375:36" pos:end="2375:41">cpu_ir</name><index pos:start="2375:42" pos:end="2375:45">[<expr pos:start="2375:43" pos:end="2375:44"><name pos:start="2375:43" pos:end="2375:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2375:48" pos:end="2375:51"><expr pos:start="2375:48" pos:end="2375:51"><name pos:start="2375:48" pos:end="2375:51">addr</name></expr></argument>, <argument pos:start="2375:54" pos:end="2375:63"><expr pos:start="2375:54" pos:end="2375:63"><name pos:start="2375:54" pos:end="2375:63"><name pos:start="2375:54" pos:end="2375:56">ctx</name><operator pos:start="2375:57" pos:end="2375:58">-&gt;</operator><name pos:start="2375:59" pos:end="2375:63">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2377:17" pos:end="2377:22">break;</break>

            <case pos:start="2379:13" pos:end="2379:21">case <expr pos:start="2379:18" pos:end="2379:20"><literal type="number" pos:start="2379:18" pos:end="2379:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="2381:17" pos:end="2381:67">/* Quadword virtual access with protection check */</comment>

                <expr_stmt pos:start="2383:17" pos:end="2383:64"><expr pos:start="2383:17" pos:end="2383:63"><call pos:start="2383:17" pos:end="2383:63"><name pos:start="2383:17" pos:end="2383:33">tcg_gen_qemu_ld64</name><argument_list pos:start="2383:34" pos:end="2383:63">(<argument pos:start="2383:35" pos:end="2383:44"><expr pos:start="2383:35" pos:end="2383:44"><name pos:start="2383:35" pos:end="2383:44"><name pos:start="2383:35" pos:end="2383:40">cpu_ir</name><index pos:start="2383:41" pos:end="2383:44">[<expr pos:start="2383:42" pos:end="2383:43"><name pos:start="2383:42" pos:end="2383:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2383:47" pos:end="2383:50"><expr pos:start="2383:47" pos:end="2383:50"><name pos:start="2383:47" pos:end="2383:50">addr</name></expr></argument>, <argument pos:start="2383:53" pos:end="2383:62"><expr pos:start="2383:53" pos:end="2383:62"><name pos:start="2383:53" pos:end="2383:62"><name pos:start="2383:53" pos:end="2383:55">ctx</name><operator pos:start="2383:56" pos:end="2383:57">-&gt;</operator><name pos:start="2383:58" pos:end="2383:62">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2385:17" pos:end="2385:22">break;</break>

            <case pos:start="2387:13" pos:end="2387:21">case <expr pos:start="2387:18" pos:end="2387:20"><literal type="number" pos:start="2387:18" pos:end="2387:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="2389:17" pos:end="2389:71">/* Longword virtual access with altenate access mode */</comment>

                <expr_stmt pos:start="2391:17" pos:end="2391:42"><expr pos:start="2391:17" pos:end="2391:41"><call pos:start="2391:17" pos:end="2391:41"><name pos:start="2391:17" pos:end="2391:39">gen_helper_set_alt_mode</name><argument_list pos:start="2391:40" pos:end="2391:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2393:17" pos:end="2393:55"><expr pos:start="2393:17" pos:end="2393:54"><call pos:start="2393:17" pos:end="2393:54"><name pos:start="2393:17" pos:end="2393:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="2393:43" pos:end="2393:54">(<argument pos:start="2393:44" pos:end="2393:47"><expr pos:start="2393:44" pos:end="2393:47"><name pos:start="2393:44" pos:end="2393:47">addr</name></expr></argument>, <argument pos:start="2393:50" pos:end="2393:53"><expr pos:start="2393:50" pos:end="2393:53"><name pos:start="2393:50" pos:end="2393:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2395:17" pos:end="2395:53"><expr pos:start="2395:17" pos:end="2395:52"><call pos:start="2395:17" pos:end="2395:52"><name pos:start="2395:17" pos:end="2395:34">gen_helper_ldl_raw</name><argument_list pos:start="2395:35" pos:end="2395:52">(<argument pos:start="2395:36" pos:end="2395:45"><expr pos:start="2395:36" pos:end="2395:45"><name pos:start="2395:36" pos:end="2395:45"><name pos:start="2395:36" pos:end="2395:41">cpu_ir</name><index pos:start="2395:42" pos:end="2395:45">[<expr pos:start="2395:43" pos:end="2395:44"><name pos:start="2395:43" pos:end="2395:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2395:48" pos:end="2395:51"><expr pos:start="2395:48" pos:end="2395:51"><name pos:start="2395:48" pos:end="2395:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2397:17" pos:end="2397:42"><expr pos:start="2397:17" pos:end="2397:41"><call pos:start="2397:17" pos:end="2397:41"><name pos:start="2397:17" pos:end="2397:39">gen_helper_restore_mode</name><argument_list pos:start="2397:40" pos:end="2397:41">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2399:17" pos:end="2399:22">break;</break>

            <case pos:start="2401:13" pos:end="2401:21">case <expr pos:start="2401:18" pos:end="2401:20"><literal type="number" pos:start="2401:18" pos:end="2401:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="2403:17" pos:end="2403:71">/* Quadword virtual access with altenate access mode */</comment>

                <expr_stmt pos:start="2405:17" pos:end="2405:42"><expr pos:start="2405:17" pos:end="2405:41"><call pos:start="2405:17" pos:end="2405:41"><name pos:start="2405:17" pos:end="2405:39">gen_helper_set_alt_mode</name><argument_list pos:start="2405:40" pos:end="2405:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2407:17" pos:end="2407:55"><expr pos:start="2407:17" pos:end="2407:54"><call pos:start="2407:17" pos:end="2407:54"><name pos:start="2407:17" pos:end="2407:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="2407:43" pos:end="2407:54">(<argument pos:start="2407:44" pos:end="2407:47"><expr pos:start="2407:44" pos:end="2407:47"><name pos:start="2407:44" pos:end="2407:47">addr</name></expr></argument>, <argument pos:start="2407:50" pos:end="2407:53"><expr pos:start="2407:50" pos:end="2407:53"><name pos:start="2407:50" pos:end="2407:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2409:17" pos:end="2409:53"><expr pos:start="2409:17" pos:end="2409:52"><call pos:start="2409:17" pos:end="2409:52"><name pos:start="2409:17" pos:end="2409:34">gen_helper_ldq_raw</name><argument_list pos:start="2409:35" pos:end="2409:52">(<argument pos:start="2409:36" pos:end="2409:45"><expr pos:start="2409:36" pos:end="2409:45"><name pos:start="2409:36" pos:end="2409:45"><name pos:start="2409:36" pos:end="2409:41">cpu_ir</name><index pos:start="2409:42" pos:end="2409:45">[<expr pos:start="2409:43" pos:end="2409:44"><name pos:start="2409:43" pos:end="2409:44">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2409:48" pos:end="2409:51"><expr pos:start="2409:48" pos:end="2409:51"><name pos:start="2409:48" pos:end="2409:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2411:17" pos:end="2411:42"><expr pos:start="2411:17" pos:end="2411:41"><call pos:start="2411:17" pos:end="2411:41"><name pos:start="2411:17" pos:end="2411:39">gen_helper_restore_mode</name><argument_list pos:start="2411:40" pos:end="2411:41">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2413:17" pos:end="2413:22">break;</break>

            <case pos:start="2415:13" pos:end="2415:21">case <expr pos:start="2415:18" pos:end="2415:20"><literal type="number" pos:start="2415:18" pos:end="2415:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="2417:17" pos:end="2421:19">/* Longword virtual access with alternate access mode and

                 * protection checks

                 */</comment>

                <expr_stmt pos:start="2423:17" pos:end="2423:42"><expr pos:start="2423:17" pos:end="2423:41"><call pos:start="2423:17" pos:end="2423:41"><name pos:start="2423:17" pos:end="2423:39">gen_helper_set_alt_mode</name><argument_list pos:start="2423:40" pos:end="2423:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2425:17" pos:end="2425:54"><expr pos:start="2425:17" pos:end="2425:53"><call pos:start="2425:17" pos:end="2425:53"><name pos:start="2425:17" pos:end="2425:35">gen_helper_ldl_data</name><argument_list pos:start="2425:36" pos:end="2425:53">(<argument pos:start="2425:37" pos:end="2425:46"><expr pos:start="2425:37" pos:end="2425:46"><name pos:start="2425:37" pos:end="2425:46"><name pos:start="2425:37" pos:end="2425:42">cpu_ir</name><index pos:start="2425:43" pos:end="2425:46">[<expr pos:start="2425:44" pos:end="2425:45"><name pos:start="2425:44" pos:end="2425:45">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2425:49" pos:end="2425:52"><expr pos:start="2425:49" pos:end="2425:52"><name pos:start="2425:49" pos:end="2425:52">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2427:17" pos:end="2427:42"><expr pos:start="2427:17" pos:end="2427:41"><call pos:start="2427:17" pos:end="2427:41"><name pos:start="2427:17" pos:end="2427:39">gen_helper_restore_mode</name><argument_list pos:start="2427:40" pos:end="2427:41">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2429:17" pos:end="2429:22">break;</break>

            <case pos:start="2431:13" pos:end="2431:21">case <expr pos:start="2431:18" pos:end="2431:20"><literal type="number" pos:start="2431:18" pos:end="2431:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="2433:17" pos:end="2437:19">/* Quadword virtual access with alternate access mode and

                 * protection checks

                 */</comment>

                <expr_stmt pos:start="2439:17" pos:end="2439:42"><expr pos:start="2439:17" pos:end="2439:41"><call pos:start="2439:17" pos:end="2439:41"><name pos:start="2439:17" pos:end="2439:39">gen_helper_set_alt_mode</name><argument_list pos:start="2439:40" pos:end="2439:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2441:17" pos:end="2441:54"><expr pos:start="2441:17" pos:end="2441:53"><call pos:start="2441:17" pos:end="2441:53"><name pos:start="2441:17" pos:end="2441:35">gen_helper_ldq_data</name><argument_list pos:start="2441:36" pos:end="2441:53">(<argument pos:start="2441:37" pos:end="2441:46"><expr pos:start="2441:37" pos:end="2441:46"><name pos:start="2441:37" pos:end="2441:46"><name pos:start="2441:37" pos:end="2441:42">cpu_ir</name><index pos:start="2441:43" pos:end="2441:46">[<expr pos:start="2441:44" pos:end="2441:45"><name pos:start="2441:44" pos:end="2441:45">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="2441:49" pos:end="2441:52"><expr pos:start="2441:49" pos:end="2441:52"><name pos:start="2441:49" pos:end="2441:52">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2443:17" pos:end="2443:42"><expr pos:start="2443:17" pos:end="2443:41"><call pos:start="2443:17" pos:end="2443:41"><name pos:start="2443:17" pos:end="2443:39">gen_helper_restore_mode</name><argument_list pos:start="2443:40" pos:end="2443:41">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2445:17" pos:end="2445:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="2449:13" pos:end="2449:32"><expr pos:start="2449:13" pos:end="2449:31"><call pos:start="2449:13" pos:end="2449:31"><name pos:start="2449:13" pos:end="2449:25">tcg_temp_free</name><argument_list pos:start="2449:26" pos:end="2449:31">(<argument pos:start="2449:27" pos:end="2449:30"><expr pos:start="2449:27" pos:end="2449:30"><name pos:start="2449:27" pos:end="2449:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="2453:9" pos:end="2456:0">break;</break>

<cpp:endif pos:start="2455:1" pos:end="2455:6">#<cpp:directive pos:start="2455:2" pos:end="2455:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2457:5" pos:end="2457:14">case <expr pos:start="2457:10" pos:end="2457:13"><literal type="number" pos:start="2457:10" pos:end="2457:13">0x1C</literal></expr>:</case>

        <switch pos:start="2459:9" pos:end="2813:9">switch <condition pos:start="2459:16" pos:end="2459:20">(<expr pos:start="2459:17" pos:end="2459:19"><name pos:start="2459:17" pos:end="2459:19">fn7</name></expr>)</condition> <block pos:start="2459:22" pos:end="2813:9">{<block_content pos:start="2461:9" pos:end="2811:29">

        <case pos:start="2461:9" pos:end="2461:18">case <expr pos:start="2461:14" pos:end="2461:17"><literal type="number" pos:start="2461:14" pos:end="2461:17">0x00</literal></expr>:</case>

            <comment type="block" pos:start="2463:13" pos:end="2463:23">/* SEXTB */</comment>

            <if_stmt pos:start="2465:13" pos:end="2467:33"><if pos:start="2465:13" pos:end="2467:33">if <condition pos:start="2465:16" pos:end="2465:42">(<expr pos:start="2465:17" pos:end="2465:41"><operator pos:start="2465:17" pos:end="2465:17">!</operator><operator pos:start="2465:18" pos:end="2465:18">(</operator><name pos:start="2465:19" pos:end="2465:28"><name pos:start="2465:19" pos:end="2465:21">ctx</name><operator pos:start="2465:22" pos:end="2465:23">-&gt;</operator><name pos:start="2465:24" pos:end="2465:28">amask</name></name> <operator pos:start="2465:30" pos:end="2465:30">&amp;</operator> <name pos:start="2465:32" pos:end="2465:40">AMASK_BWX</name><operator pos:start="2465:41" pos:end="2465:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2467:17" pos:end="2467:33"><block_content pos:start="2467:17" pos:end="2467:33">

                <goto pos:start="2467:17" pos:end="2467:33">goto <name pos:start="2467:22" pos:end="2467:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2469:13" pos:end="2479:13"><if pos:start="2469:13" pos:end="2479:13">if <condition pos:start="2469:16" pos:end="2469:33">(<expr pos:start="2469:17" pos:end="2469:32"><call pos:start="2469:17" pos:end="2469:32"><name pos:start="2469:17" pos:end="2469:22">likely</name><argument_list pos:start="2469:23" pos:end="2469:32">(<argument pos:start="2469:24" pos:end="2469:31"><expr pos:start="2469:24" pos:end="2469:31"><name pos:start="2469:24" pos:end="2469:25">rc</name> <operator pos:start="2469:27" pos:end="2469:28">!=</operator> <literal type="number" pos:start="2469:30" pos:end="2469:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2469:35" pos:end="2479:13">{<block_content pos:start="2471:17" pos:end="2477:62">

                <if_stmt pos:start="2471:17" pos:end="2477:62"><if pos:start="2471:17" pos:end="2473:73">if <condition pos:start="2471:20" pos:end="2471:26">(<expr pos:start="2471:21" pos:end="2471:25"><name pos:start="2471:21" pos:end="2471:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2473:21" pos:end="2473:73"><block_content pos:start="2473:21" pos:end="2473:73">

                    <expr_stmt pos:start="2473:21" pos:end="2473:73"><expr pos:start="2473:21" pos:end="2473:72"><call pos:start="2473:21" pos:end="2473:72"><name pos:start="2473:21" pos:end="2473:36">tcg_gen_movi_i64</name><argument_list pos:start="2473:37" pos:end="2473:72">(<argument pos:start="2473:38" pos:end="2473:47"><expr pos:start="2473:38" pos:end="2473:47"><name pos:start="2473:38" pos:end="2473:47"><name pos:start="2473:38" pos:end="2473:43">cpu_ir</name><index pos:start="2473:44" pos:end="2473:47">[<expr pos:start="2473:45" pos:end="2473:46"><name pos:start="2473:45" pos:end="2473:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2473:50" pos:end="2473:71"><expr pos:start="2473:50" pos:end="2473:71"><operator pos:start="2473:50" pos:end="2473:50">(</operator><name pos:start="2473:51" pos:end="2473:57">int64_t</name><operator pos:start="2473:58" pos:end="2473:58">)</operator><operator pos:start="2473:59" pos:end="2473:59">(</operator><operator pos:start="2473:60" pos:end="2473:60">(</operator><name pos:start="2473:61" pos:end="2473:66">int8_t</name><operator pos:start="2473:67" pos:end="2473:67">)</operator><name pos:start="2473:68" pos:end="2473:70">lit</name><operator pos:start="2473:71" pos:end="2473:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2475:17" pos:end="2477:62">else<block type="pseudo" pos:start="2477:21" pos:end="2477:62"><block_content pos:start="2477:21" pos:end="2477:62">

                    <expr_stmt pos:start="2477:21" pos:end="2477:62"><expr pos:start="2477:21" pos:end="2477:61"><call pos:start="2477:21" pos:end="2477:61"><name pos:start="2477:21" pos:end="2477:37">tcg_gen_ext8s_i64</name><argument_list pos:start="2477:38" pos:end="2477:61">(<argument pos:start="2477:39" pos:end="2477:48"><expr pos:start="2477:39" pos:end="2477:48"><name pos:start="2477:39" pos:end="2477:48"><name pos:start="2477:39" pos:end="2477:44">cpu_ir</name><index pos:start="2477:45" pos:end="2477:48">[<expr pos:start="2477:46" pos:end="2477:47"><name pos:start="2477:46" pos:end="2477:47">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2477:51" pos:end="2477:60"><expr pos:start="2477:51" pos:end="2477:60"><name pos:start="2477:51" pos:end="2477:60"><name pos:start="2477:51" pos:end="2477:56">cpu_ir</name><index pos:start="2477:57" pos:end="2477:60">[<expr pos:start="2477:58" pos:end="2477:59"><name pos:start="2477:58" pos:end="2477:59">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2481:13" pos:end="2481:18">break;</break>

        <case pos:start="2483:9" pos:end="2483:18">case <expr pos:start="2483:14" pos:end="2483:17"><literal type="number" pos:start="2483:14" pos:end="2483:17">0x01</literal></expr>:</case>

            <comment type="block" pos:start="2485:13" pos:end="2485:23">/* SEXTW */</comment>

            <if_stmt pos:start="2487:13" pos:end="2489:33"><if pos:start="2487:13" pos:end="2489:33">if <condition pos:start="2487:16" pos:end="2487:42">(<expr pos:start="2487:17" pos:end="2487:41"><operator pos:start="2487:17" pos:end="2487:17">!</operator><operator pos:start="2487:18" pos:end="2487:18">(</operator><name pos:start="2487:19" pos:end="2487:28"><name pos:start="2487:19" pos:end="2487:21">ctx</name><operator pos:start="2487:22" pos:end="2487:23">-&gt;</operator><name pos:start="2487:24" pos:end="2487:28">amask</name></name> <operator pos:start="2487:30" pos:end="2487:30">&amp;</operator> <name pos:start="2487:32" pos:end="2487:40">AMASK_BWX</name><operator pos:start="2487:41" pos:end="2487:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2489:17" pos:end="2489:33"><block_content pos:start="2489:17" pos:end="2489:33">

                <goto pos:start="2489:17" pos:end="2489:33">goto <name pos:start="2489:22" pos:end="2489:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2491:13" pos:end="2501:13"><if pos:start="2491:13" pos:end="2501:13">if <condition pos:start="2491:16" pos:end="2491:33">(<expr pos:start="2491:17" pos:end="2491:32"><call pos:start="2491:17" pos:end="2491:32"><name pos:start="2491:17" pos:end="2491:22">likely</name><argument_list pos:start="2491:23" pos:end="2491:32">(<argument pos:start="2491:24" pos:end="2491:31"><expr pos:start="2491:24" pos:end="2491:31"><name pos:start="2491:24" pos:end="2491:25">rc</name> <operator pos:start="2491:27" pos:end="2491:28">!=</operator> <literal type="number" pos:start="2491:30" pos:end="2491:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2491:35" pos:end="2501:13">{<block_content pos:start="2493:17" pos:end="2499:63">

                <if_stmt pos:start="2493:17" pos:end="2499:63"><if pos:start="2493:17" pos:end="2495:74">if <condition pos:start="2493:20" pos:end="2493:26">(<expr pos:start="2493:21" pos:end="2493:25"><name pos:start="2493:21" pos:end="2493:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2495:21" pos:end="2495:74"><block_content pos:start="2495:21" pos:end="2495:74">

                    <expr_stmt pos:start="2495:21" pos:end="2495:74"><expr pos:start="2495:21" pos:end="2495:73"><call pos:start="2495:21" pos:end="2495:73"><name pos:start="2495:21" pos:end="2495:36">tcg_gen_movi_i64</name><argument_list pos:start="2495:37" pos:end="2495:73">(<argument pos:start="2495:38" pos:end="2495:47"><expr pos:start="2495:38" pos:end="2495:47"><name pos:start="2495:38" pos:end="2495:47"><name pos:start="2495:38" pos:end="2495:43">cpu_ir</name><index pos:start="2495:44" pos:end="2495:47">[<expr pos:start="2495:45" pos:end="2495:46"><name pos:start="2495:45" pos:end="2495:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2495:50" pos:end="2495:72"><expr pos:start="2495:50" pos:end="2495:72"><operator pos:start="2495:50" pos:end="2495:50">(</operator><name pos:start="2495:51" pos:end="2495:57">int64_t</name><operator pos:start="2495:58" pos:end="2495:58">)</operator><operator pos:start="2495:59" pos:end="2495:59">(</operator><operator pos:start="2495:60" pos:end="2495:60">(</operator><name pos:start="2495:61" pos:end="2495:67">int16_t</name><operator pos:start="2495:68" pos:end="2495:68">)</operator><name pos:start="2495:69" pos:end="2495:71">lit</name><operator pos:start="2495:72" pos:end="2495:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2497:17" pos:end="2499:63">else<block type="pseudo" pos:start="2499:21" pos:end="2499:63"><block_content pos:start="2499:21" pos:end="2499:63">

                    <expr_stmt pos:start="2499:21" pos:end="2499:63"><expr pos:start="2499:21" pos:end="2499:62"><call pos:start="2499:21" pos:end="2499:62"><name pos:start="2499:21" pos:end="2499:38">tcg_gen_ext16s_i64</name><argument_list pos:start="2499:39" pos:end="2499:62">(<argument pos:start="2499:40" pos:end="2499:49"><expr pos:start="2499:40" pos:end="2499:49"><name pos:start="2499:40" pos:end="2499:49"><name pos:start="2499:40" pos:end="2499:45">cpu_ir</name><index pos:start="2499:46" pos:end="2499:49">[<expr pos:start="2499:47" pos:end="2499:48"><name pos:start="2499:47" pos:end="2499:48">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2499:52" pos:end="2499:61"><expr pos:start="2499:52" pos:end="2499:61"><name pos:start="2499:52" pos:end="2499:61"><name pos:start="2499:52" pos:end="2499:57">cpu_ir</name><index pos:start="2499:58" pos:end="2499:61">[<expr pos:start="2499:59" pos:end="2499:60"><name pos:start="2499:59" pos:end="2499:60">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2503:13" pos:end="2503:18">break;</break>

        <case pos:start="2505:9" pos:end="2505:18">case <expr pos:start="2505:14" pos:end="2505:17"><literal type="number" pos:start="2505:14" pos:end="2505:17">0x30</literal></expr>:</case>

            <comment type="block" pos:start="2507:13" pos:end="2507:23">/* CTPOP */</comment>

            <if_stmt pos:start="2509:13" pos:end="2511:33"><if pos:start="2509:13" pos:end="2511:33">if <condition pos:start="2509:16" pos:end="2509:42">(<expr pos:start="2509:17" pos:end="2509:41"><operator pos:start="2509:17" pos:end="2509:17">!</operator><operator pos:start="2509:18" pos:end="2509:18">(</operator><name pos:start="2509:19" pos:end="2509:28"><name pos:start="2509:19" pos:end="2509:21">ctx</name><operator pos:start="2509:22" pos:end="2509:23">-&gt;</operator><name pos:start="2509:24" pos:end="2509:28">amask</name></name> <operator pos:start="2509:30" pos:end="2509:30">&amp;</operator> <name pos:start="2509:32" pos:end="2509:40">AMASK_CIX</name><operator pos:start="2509:41" pos:end="2509:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2511:17" pos:end="2511:33"><block_content pos:start="2511:17" pos:end="2511:33">

                <goto pos:start="2511:17" pos:end="2511:33">goto <name pos:start="2511:22" pos:end="2511:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2513:13" pos:end="2523:13"><if pos:start="2513:13" pos:end="2523:13">if <condition pos:start="2513:16" pos:end="2513:33">(<expr pos:start="2513:17" pos:end="2513:32"><call pos:start="2513:17" pos:end="2513:32"><name pos:start="2513:17" pos:end="2513:22">likely</name><argument_list pos:start="2513:23" pos:end="2513:32">(<argument pos:start="2513:24" pos:end="2513:31"><expr pos:start="2513:24" pos:end="2513:31"><name pos:start="2513:24" pos:end="2513:25">rc</name> <operator pos:start="2513:27" pos:end="2513:28">!=</operator> <literal type="number" pos:start="2513:30" pos:end="2513:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2513:35" pos:end="2523:13">{<block_content pos:start="2515:17" pos:end="2521:61">

                <if_stmt pos:start="2515:17" pos:end="2521:61"><if pos:start="2515:17" pos:end="2517:63">if <condition pos:start="2515:20" pos:end="2515:26">(<expr pos:start="2515:21" pos:end="2515:25"><name pos:start="2515:21" pos:end="2515:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2517:21" pos:end="2517:63"><block_content pos:start="2517:21" pos:end="2517:63">

                    <expr_stmt pos:start="2517:21" pos:end="2517:63"><expr pos:start="2517:21" pos:end="2517:62"><call pos:start="2517:21" pos:end="2517:62"><name pos:start="2517:21" pos:end="2517:36">tcg_gen_movi_i64</name><argument_list pos:start="2517:37" pos:end="2517:62">(<argument pos:start="2517:38" pos:end="2517:47"><expr pos:start="2517:38" pos:end="2517:47"><name pos:start="2517:38" pos:end="2517:47"><name pos:start="2517:38" pos:end="2517:43">cpu_ir</name><index pos:start="2517:44" pos:end="2517:47">[<expr pos:start="2517:45" pos:end="2517:46"><name pos:start="2517:45" pos:end="2517:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2517:50" pos:end="2517:61"><expr pos:start="2517:50" pos:end="2517:61"><call pos:start="2517:50" pos:end="2517:61"><name pos:start="2517:50" pos:end="2517:56">ctpop64</name><argument_list pos:start="2517:57" pos:end="2517:61">(<argument pos:start="2517:58" pos:end="2517:60"><expr pos:start="2517:58" pos:end="2517:60"><name pos:start="2517:58" pos:end="2517:60">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2519:17" pos:end="2521:61">else<block type="pseudo" pos:start="2521:21" pos:end="2521:61"><block_content pos:start="2521:21" pos:end="2521:61">

                    <expr_stmt pos:start="2521:21" pos:end="2521:61"><expr pos:start="2521:21" pos:end="2521:60"><call pos:start="2521:21" pos:end="2521:60"><name pos:start="2521:21" pos:end="2521:36">gen_helper_ctpop</name><argument_list pos:start="2521:37" pos:end="2521:60">(<argument pos:start="2521:38" pos:end="2521:47"><expr pos:start="2521:38" pos:end="2521:47"><name pos:start="2521:38" pos:end="2521:47"><name pos:start="2521:38" pos:end="2521:43">cpu_ir</name><index pos:start="2521:44" pos:end="2521:47">[<expr pos:start="2521:45" pos:end="2521:46"><name pos:start="2521:45" pos:end="2521:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2521:50" pos:end="2521:59"><expr pos:start="2521:50" pos:end="2521:59"><name pos:start="2521:50" pos:end="2521:59"><name pos:start="2521:50" pos:end="2521:55">cpu_ir</name><index pos:start="2521:56" pos:end="2521:59">[<expr pos:start="2521:57" pos:end="2521:58"><name pos:start="2521:57" pos:end="2521:58">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2525:13" pos:end="2525:18">break;</break>

        <case pos:start="2527:9" pos:end="2527:18">case <expr pos:start="2527:14" pos:end="2527:17"><literal type="number" pos:start="2527:14" pos:end="2527:17">0x31</literal></expr>:</case>

            <comment type="block" pos:start="2529:13" pos:end="2529:22">/* PERR */</comment>

            <if_stmt pos:start="2531:13" pos:end="2533:33"><if pos:start="2531:13" pos:end="2533:33">if <condition pos:start="2531:16" pos:end="2531:42">(<expr pos:start="2531:17" pos:end="2531:41"><operator pos:start="2531:17" pos:end="2531:17">!</operator><operator pos:start="2531:18" pos:end="2531:18">(</operator><name pos:start="2531:19" pos:end="2531:28"><name pos:start="2531:19" pos:end="2531:21">ctx</name><operator pos:start="2531:22" pos:end="2531:23">-&gt;</operator><name pos:start="2531:24" pos:end="2531:28">amask</name></name> <operator pos:start="2531:30" pos:end="2531:30">&amp;</operator> <name pos:start="2531:32" pos:end="2531:40">AMASK_MVI</name><operator pos:start="2531:41" pos:end="2531:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2533:17" pos:end="2533:33"><block_content pos:start="2533:17" pos:end="2533:33">

                <goto pos:start="2533:17" pos:end="2533:33">goto <name pos:start="2533:22" pos:end="2533:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2535:13" pos:end="2535:27">/* XXX: TODO */</comment>

            <goto pos:start="2537:13" pos:end="2537:29">goto <name pos:start="2537:18" pos:end="2537:28">invalid_opc</name>;</goto>

            <break pos:start="2539:13" pos:end="2539:18">break;</break>

        <case pos:start="2541:9" pos:end="2541:18">case <expr pos:start="2541:14" pos:end="2541:17"><literal type="number" pos:start="2541:14" pos:end="2541:17">0x32</literal></expr>:</case>

            <comment type="block" pos:start="2543:13" pos:end="2543:22">/* CTLZ */</comment>

            <if_stmt pos:start="2545:13" pos:end="2547:33"><if pos:start="2545:13" pos:end="2547:33">if <condition pos:start="2545:16" pos:end="2545:42">(<expr pos:start="2545:17" pos:end="2545:41"><operator pos:start="2545:17" pos:end="2545:17">!</operator><operator pos:start="2545:18" pos:end="2545:18">(</operator><name pos:start="2545:19" pos:end="2545:28"><name pos:start="2545:19" pos:end="2545:21">ctx</name><operator pos:start="2545:22" pos:end="2545:23">-&gt;</operator><name pos:start="2545:24" pos:end="2545:28">amask</name></name> <operator pos:start="2545:30" pos:end="2545:30">&amp;</operator> <name pos:start="2545:32" pos:end="2545:40">AMASK_CIX</name><operator pos:start="2545:41" pos:end="2545:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2547:17" pos:end="2547:33"><block_content pos:start="2547:17" pos:end="2547:33">

                <goto pos:start="2547:17" pos:end="2547:33">goto <name pos:start="2547:22" pos:end="2547:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2549:13" pos:end="2559:13"><if pos:start="2549:13" pos:end="2559:13">if <condition pos:start="2549:16" pos:end="2549:33">(<expr pos:start="2549:17" pos:end="2549:32"><call pos:start="2549:17" pos:end="2549:32"><name pos:start="2549:17" pos:end="2549:22">likely</name><argument_list pos:start="2549:23" pos:end="2549:32">(<argument pos:start="2549:24" pos:end="2549:31"><expr pos:start="2549:24" pos:end="2549:31"><name pos:start="2549:24" pos:end="2549:25">rc</name> <operator pos:start="2549:27" pos:end="2549:28">!=</operator> <literal type="number" pos:start="2549:30" pos:end="2549:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2549:35" pos:end="2559:13">{<block_content pos:start="2551:17" pos:end="2557:60">

                <if_stmt pos:start="2551:17" pos:end="2557:60"><if pos:start="2551:17" pos:end="2553:61">if <condition pos:start="2551:20" pos:end="2551:26">(<expr pos:start="2551:21" pos:end="2551:25"><name pos:start="2551:21" pos:end="2551:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2553:21" pos:end="2553:61"><block_content pos:start="2553:21" pos:end="2553:61">

                    <expr_stmt pos:start="2553:21" pos:end="2553:61"><expr pos:start="2553:21" pos:end="2553:60"><call pos:start="2553:21" pos:end="2553:60"><name pos:start="2553:21" pos:end="2553:36">tcg_gen_movi_i64</name><argument_list pos:start="2553:37" pos:end="2553:60">(<argument pos:start="2553:38" pos:end="2553:47"><expr pos:start="2553:38" pos:end="2553:47"><name pos:start="2553:38" pos:end="2553:47"><name pos:start="2553:38" pos:end="2553:43">cpu_ir</name><index pos:start="2553:44" pos:end="2553:47">[<expr pos:start="2553:45" pos:end="2553:46"><name pos:start="2553:45" pos:end="2553:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2553:50" pos:end="2553:59"><expr pos:start="2553:50" pos:end="2553:59"><call pos:start="2553:50" pos:end="2553:59"><name pos:start="2553:50" pos:end="2553:54">clz64</name><argument_list pos:start="2553:55" pos:end="2553:59">(<argument pos:start="2553:56" pos:end="2553:58"><expr pos:start="2553:56" pos:end="2553:58"><name pos:start="2553:56" pos:end="2553:58">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2555:17" pos:end="2557:60">else<block type="pseudo" pos:start="2557:21" pos:end="2557:60"><block_content pos:start="2557:21" pos:end="2557:60">

                    <expr_stmt pos:start="2557:21" pos:end="2557:60"><expr pos:start="2557:21" pos:end="2557:59"><call pos:start="2557:21" pos:end="2557:59"><name pos:start="2557:21" pos:end="2557:35">gen_helper_ctlz</name><argument_list pos:start="2557:36" pos:end="2557:59">(<argument pos:start="2557:37" pos:end="2557:46"><expr pos:start="2557:37" pos:end="2557:46"><name pos:start="2557:37" pos:end="2557:46"><name pos:start="2557:37" pos:end="2557:42">cpu_ir</name><index pos:start="2557:43" pos:end="2557:46">[<expr pos:start="2557:44" pos:end="2557:45"><name pos:start="2557:44" pos:end="2557:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2557:49" pos:end="2557:58"><expr pos:start="2557:49" pos:end="2557:58"><name pos:start="2557:49" pos:end="2557:58"><name pos:start="2557:49" pos:end="2557:54">cpu_ir</name><index pos:start="2557:55" pos:end="2557:58">[<expr pos:start="2557:56" pos:end="2557:57"><name pos:start="2557:56" pos:end="2557:57">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2561:13" pos:end="2561:18">break;</break>

        <case pos:start="2563:9" pos:end="2563:18">case <expr pos:start="2563:14" pos:end="2563:17"><literal type="number" pos:start="2563:14" pos:end="2563:17">0x33</literal></expr>:</case>

            <comment type="block" pos:start="2565:13" pos:end="2565:22">/* CTTZ */</comment>

            <if_stmt pos:start="2567:13" pos:end="2569:33"><if pos:start="2567:13" pos:end="2569:33">if <condition pos:start="2567:16" pos:end="2567:42">(<expr pos:start="2567:17" pos:end="2567:41"><operator pos:start="2567:17" pos:end="2567:17">!</operator><operator pos:start="2567:18" pos:end="2567:18">(</operator><name pos:start="2567:19" pos:end="2567:28"><name pos:start="2567:19" pos:end="2567:21">ctx</name><operator pos:start="2567:22" pos:end="2567:23">-&gt;</operator><name pos:start="2567:24" pos:end="2567:28">amask</name></name> <operator pos:start="2567:30" pos:end="2567:30">&amp;</operator> <name pos:start="2567:32" pos:end="2567:40">AMASK_CIX</name><operator pos:start="2567:41" pos:end="2567:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2569:17" pos:end="2569:33"><block_content pos:start="2569:17" pos:end="2569:33">

                <goto pos:start="2569:17" pos:end="2569:33">goto <name pos:start="2569:22" pos:end="2569:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2571:13" pos:end="2581:13"><if pos:start="2571:13" pos:end="2581:13">if <condition pos:start="2571:16" pos:end="2571:33">(<expr pos:start="2571:17" pos:end="2571:32"><call pos:start="2571:17" pos:end="2571:32"><name pos:start="2571:17" pos:end="2571:22">likely</name><argument_list pos:start="2571:23" pos:end="2571:32">(<argument pos:start="2571:24" pos:end="2571:31"><expr pos:start="2571:24" pos:end="2571:31"><name pos:start="2571:24" pos:end="2571:25">rc</name> <operator pos:start="2571:27" pos:end="2571:28">!=</operator> <literal type="number" pos:start="2571:30" pos:end="2571:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2571:35" pos:end="2581:13">{<block_content pos:start="2573:17" pos:end="2579:60">

                <if_stmt pos:start="2573:17" pos:end="2579:60"><if pos:start="2573:17" pos:end="2575:61">if <condition pos:start="2573:20" pos:end="2573:26">(<expr pos:start="2573:21" pos:end="2573:25"><name pos:start="2573:21" pos:end="2573:25">islit</name></expr>)</condition><block type="pseudo" pos:start="2575:21" pos:end="2575:61"><block_content pos:start="2575:21" pos:end="2575:61">

                    <expr_stmt pos:start="2575:21" pos:end="2575:61"><expr pos:start="2575:21" pos:end="2575:60"><call pos:start="2575:21" pos:end="2575:60"><name pos:start="2575:21" pos:end="2575:36">tcg_gen_movi_i64</name><argument_list pos:start="2575:37" pos:end="2575:60">(<argument pos:start="2575:38" pos:end="2575:47"><expr pos:start="2575:38" pos:end="2575:47"><name pos:start="2575:38" pos:end="2575:47"><name pos:start="2575:38" pos:end="2575:43">cpu_ir</name><index pos:start="2575:44" pos:end="2575:47">[<expr pos:start="2575:45" pos:end="2575:46"><name pos:start="2575:45" pos:end="2575:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2575:50" pos:end="2575:59"><expr pos:start="2575:50" pos:end="2575:59"><call pos:start="2575:50" pos:end="2575:59"><name pos:start="2575:50" pos:end="2575:54">ctz64</name><argument_list pos:start="2575:55" pos:end="2575:59">(<argument pos:start="2575:56" pos:end="2575:58"><expr pos:start="2575:56" pos:end="2575:58"><name pos:start="2575:56" pos:end="2575:58">lit</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2577:17" pos:end="2579:60">else<block type="pseudo" pos:start="2579:21" pos:end="2579:60"><block_content pos:start="2579:21" pos:end="2579:60">

                    <expr_stmt pos:start="2579:21" pos:end="2579:60"><expr pos:start="2579:21" pos:end="2579:59"><call pos:start="2579:21" pos:end="2579:59"><name pos:start="2579:21" pos:end="2579:35">gen_helper_cttz</name><argument_list pos:start="2579:36" pos:end="2579:59">(<argument pos:start="2579:37" pos:end="2579:46"><expr pos:start="2579:37" pos:end="2579:46"><name pos:start="2579:37" pos:end="2579:46"><name pos:start="2579:37" pos:end="2579:42">cpu_ir</name><index pos:start="2579:43" pos:end="2579:46">[<expr pos:start="2579:44" pos:end="2579:45"><name pos:start="2579:44" pos:end="2579:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2579:49" pos:end="2579:58"><expr pos:start="2579:49" pos:end="2579:58"><name pos:start="2579:49" pos:end="2579:58"><name pos:start="2579:49" pos:end="2579:54">cpu_ir</name><index pos:start="2579:55" pos:end="2579:58">[<expr pos:start="2579:56" pos:end="2579:57"><name pos:start="2579:56" pos:end="2579:57">rb</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2583:13" pos:end="2583:18">break;</break>

        <case pos:start="2585:9" pos:end="2585:18">case <expr pos:start="2585:14" pos:end="2585:17"><literal type="number" pos:start="2585:14" pos:end="2585:17">0x34</literal></expr>:</case>

            <comment type="block" pos:start="2587:13" pos:end="2587:24">/* UNPKBW */</comment>

            <if_stmt pos:start="2589:13" pos:end="2591:33"><if pos:start="2589:13" pos:end="2591:33">if <condition pos:start="2589:16" pos:end="2589:42">(<expr pos:start="2589:17" pos:end="2589:41"><operator pos:start="2589:17" pos:end="2589:17">!</operator><operator pos:start="2589:18" pos:end="2589:18">(</operator><name pos:start="2589:19" pos:end="2589:28"><name pos:start="2589:19" pos:end="2589:21">ctx</name><operator pos:start="2589:22" pos:end="2589:23">-&gt;</operator><name pos:start="2589:24" pos:end="2589:28">amask</name></name> <operator pos:start="2589:30" pos:end="2589:30">&amp;</operator> <name pos:start="2589:32" pos:end="2589:40">AMASK_MVI</name><operator pos:start="2589:41" pos:end="2589:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2591:17" pos:end="2591:33"><block_content pos:start="2591:17" pos:end="2591:33">

                <goto pos:start="2591:17" pos:end="2591:33">goto <name pos:start="2591:22" pos:end="2591:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2593:13" pos:end="2593:27">/* XXX: TODO */</comment>

            <goto pos:start="2595:13" pos:end="2595:29">goto <name pos:start="2595:18" pos:end="2595:28">invalid_opc</name>;</goto>

            <break pos:start="2597:13" pos:end="2597:18">break;</break>

        <case pos:start="2599:9" pos:end="2599:18">case <expr pos:start="2599:14" pos:end="2599:17"><literal type="number" pos:start="2599:14" pos:end="2599:17">0x35</literal></expr>:</case>

            <comment type="block" pos:start="2601:13" pos:end="2601:24">/* UNPKWL */</comment>

            <if_stmt pos:start="2603:13" pos:end="2605:33"><if pos:start="2603:13" pos:end="2605:33">if <condition pos:start="2603:16" pos:end="2603:42">(<expr pos:start="2603:17" pos:end="2603:41"><operator pos:start="2603:17" pos:end="2603:17">!</operator><operator pos:start="2603:18" pos:end="2603:18">(</operator><name pos:start="2603:19" pos:end="2603:28"><name pos:start="2603:19" pos:end="2603:21">ctx</name><operator pos:start="2603:22" pos:end="2603:23">-&gt;</operator><name pos:start="2603:24" pos:end="2603:28">amask</name></name> <operator pos:start="2603:30" pos:end="2603:30">&amp;</operator> <name pos:start="2603:32" pos:end="2603:40">AMASK_MVI</name><operator pos:start="2603:41" pos:end="2603:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2605:17" pos:end="2605:33"><block_content pos:start="2605:17" pos:end="2605:33">

                <goto pos:start="2605:17" pos:end="2605:33">goto <name pos:start="2605:22" pos:end="2605:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2607:13" pos:end="2607:27">/* XXX: TODO */</comment>

            <goto pos:start="2609:13" pos:end="2609:29">goto <name pos:start="2609:18" pos:end="2609:28">invalid_opc</name>;</goto>

            <break pos:start="2611:13" pos:end="2611:18">break;</break>

        <case pos:start="2613:9" pos:end="2613:18">case <expr pos:start="2613:14" pos:end="2613:17"><literal type="number" pos:start="2613:14" pos:end="2613:17">0x36</literal></expr>:</case>

            <comment type="block" pos:start="2615:13" pos:end="2615:22">/* PKWB */</comment>

            <if_stmt pos:start="2617:13" pos:end="2619:33"><if pos:start="2617:13" pos:end="2619:33">if <condition pos:start="2617:16" pos:end="2617:42">(<expr pos:start="2617:17" pos:end="2617:41"><operator pos:start="2617:17" pos:end="2617:17">!</operator><operator pos:start="2617:18" pos:end="2617:18">(</operator><name pos:start="2617:19" pos:end="2617:28"><name pos:start="2617:19" pos:end="2617:21">ctx</name><operator pos:start="2617:22" pos:end="2617:23">-&gt;</operator><name pos:start="2617:24" pos:end="2617:28">amask</name></name> <operator pos:start="2617:30" pos:end="2617:30">&amp;</operator> <name pos:start="2617:32" pos:end="2617:40">AMASK_MVI</name><operator pos:start="2617:41" pos:end="2617:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2619:17" pos:end="2619:33"><block_content pos:start="2619:17" pos:end="2619:33">

                <goto pos:start="2619:17" pos:end="2619:33">goto <name pos:start="2619:22" pos:end="2619:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2621:13" pos:end="2621:27">/* XXX: TODO */</comment>

            <goto pos:start="2623:13" pos:end="2623:29">goto <name pos:start="2623:18" pos:end="2623:28">invalid_opc</name>;</goto>

            <break pos:start="2625:13" pos:end="2625:18">break;</break>

        <case pos:start="2627:9" pos:end="2627:18">case <expr pos:start="2627:14" pos:end="2627:17"><literal type="number" pos:start="2627:14" pos:end="2627:17">0x37</literal></expr>:</case>

            <comment type="block" pos:start="2629:13" pos:end="2629:22">/* PKLB */</comment>

            <if_stmt pos:start="2631:13" pos:end="2633:33"><if pos:start="2631:13" pos:end="2633:33">if <condition pos:start="2631:16" pos:end="2631:42">(<expr pos:start="2631:17" pos:end="2631:41"><operator pos:start="2631:17" pos:end="2631:17">!</operator><operator pos:start="2631:18" pos:end="2631:18">(</operator><name pos:start="2631:19" pos:end="2631:28"><name pos:start="2631:19" pos:end="2631:21">ctx</name><operator pos:start="2631:22" pos:end="2631:23">-&gt;</operator><name pos:start="2631:24" pos:end="2631:28">amask</name></name> <operator pos:start="2631:30" pos:end="2631:30">&amp;</operator> <name pos:start="2631:32" pos:end="2631:40">AMASK_MVI</name><operator pos:start="2631:41" pos:end="2631:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2633:17" pos:end="2633:33"><block_content pos:start="2633:17" pos:end="2633:33">

                <goto pos:start="2633:17" pos:end="2633:33">goto <name pos:start="2633:22" pos:end="2633:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2635:13" pos:end="2635:27">/* XXX: TODO */</comment>

            <goto pos:start="2637:13" pos:end="2637:29">goto <name pos:start="2637:18" pos:end="2637:28">invalid_opc</name>;</goto>

            <break pos:start="2639:13" pos:end="2639:18">break;</break>

        <case pos:start="2641:9" pos:end="2641:18">case <expr pos:start="2641:14" pos:end="2641:17"><literal type="number" pos:start="2641:14" pos:end="2641:17">0x38</literal></expr>:</case>

            <comment type="block" pos:start="2643:13" pos:end="2643:24">/* MINSB8 */</comment>

            <if_stmt pos:start="2645:13" pos:end="2647:33"><if pos:start="2645:13" pos:end="2647:33">if <condition pos:start="2645:16" pos:end="2645:42">(<expr pos:start="2645:17" pos:end="2645:41"><operator pos:start="2645:17" pos:end="2645:17">!</operator><operator pos:start="2645:18" pos:end="2645:18">(</operator><name pos:start="2645:19" pos:end="2645:28"><name pos:start="2645:19" pos:end="2645:21">ctx</name><operator pos:start="2645:22" pos:end="2645:23">-&gt;</operator><name pos:start="2645:24" pos:end="2645:28">amask</name></name> <operator pos:start="2645:30" pos:end="2645:30">&amp;</operator> <name pos:start="2645:32" pos:end="2645:40">AMASK_MVI</name><operator pos:start="2645:41" pos:end="2645:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2647:17" pos:end="2647:33"><block_content pos:start="2647:17" pos:end="2647:33">

                <goto pos:start="2647:17" pos:end="2647:33">goto <name pos:start="2647:22" pos:end="2647:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2649:13" pos:end="2649:27">/* XXX: TODO */</comment>

            <goto pos:start="2651:13" pos:end="2651:29">goto <name pos:start="2651:18" pos:end="2651:28">invalid_opc</name>;</goto>

            <break pos:start="2653:13" pos:end="2653:18">break;</break>

        <case pos:start="2655:9" pos:end="2655:18">case <expr pos:start="2655:14" pos:end="2655:17"><literal type="number" pos:start="2655:14" pos:end="2655:17">0x39</literal></expr>:</case>

            <comment type="block" pos:start="2657:13" pos:end="2657:24">/* MINSW4 */</comment>

            <if_stmt pos:start="2659:13" pos:end="2661:33"><if pos:start="2659:13" pos:end="2661:33">if <condition pos:start="2659:16" pos:end="2659:42">(<expr pos:start="2659:17" pos:end="2659:41"><operator pos:start="2659:17" pos:end="2659:17">!</operator><operator pos:start="2659:18" pos:end="2659:18">(</operator><name pos:start="2659:19" pos:end="2659:28"><name pos:start="2659:19" pos:end="2659:21">ctx</name><operator pos:start="2659:22" pos:end="2659:23">-&gt;</operator><name pos:start="2659:24" pos:end="2659:28">amask</name></name> <operator pos:start="2659:30" pos:end="2659:30">&amp;</operator> <name pos:start="2659:32" pos:end="2659:40">AMASK_MVI</name><operator pos:start="2659:41" pos:end="2659:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2661:17" pos:end="2661:33"><block_content pos:start="2661:17" pos:end="2661:33">

                <goto pos:start="2661:17" pos:end="2661:33">goto <name pos:start="2661:22" pos:end="2661:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2663:13" pos:end="2663:27">/* XXX: TODO */</comment>

            <goto pos:start="2665:13" pos:end="2665:29">goto <name pos:start="2665:18" pos:end="2665:28">invalid_opc</name>;</goto>

            <break pos:start="2667:13" pos:end="2667:18">break;</break>

        <case pos:start="2669:9" pos:end="2669:18">case <expr pos:start="2669:14" pos:end="2669:17"><literal type="number" pos:start="2669:14" pos:end="2669:17">0x3A</literal></expr>:</case>

            <comment type="block" pos:start="2671:13" pos:end="2671:24">/* MINUB8 */</comment>

            <if_stmt pos:start="2673:13" pos:end="2675:33"><if pos:start="2673:13" pos:end="2675:33">if <condition pos:start="2673:16" pos:end="2673:42">(<expr pos:start="2673:17" pos:end="2673:41"><operator pos:start="2673:17" pos:end="2673:17">!</operator><operator pos:start="2673:18" pos:end="2673:18">(</operator><name pos:start="2673:19" pos:end="2673:28"><name pos:start="2673:19" pos:end="2673:21">ctx</name><operator pos:start="2673:22" pos:end="2673:23">-&gt;</operator><name pos:start="2673:24" pos:end="2673:28">amask</name></name> <operator pos:start="2673:30" pos:end="2673:30">&amp;</operator> <name pos:start="2673:32" pos:end="2673:40">AMASK_MVI</name><operator pos:start="2673:41" pos:end="2673:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2675:17" pos:end="2675:33"><block_content pos:start="2675:17" pos:end="2675:33">

                <goto pos:start="2675:17" pos:end="2675:33">goto <name pos:start="2675:22" pos:end="2675:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2677:13" pos:end="2677:27">/* XXX: TODO */</comment>

            <goto pos:start="2679:13" pos:end="2679:29">goto <name pos:start="2679:18" pos:end="2679:28">invalid_opc</name>;</goto>

            <break pos:start="2681:13" pos:end="2681:18">break;</break>

        <case pos:start="2683:9" pos:end="2683:18">case <expr pos:start="2683:14" pos:end="2683:17"><literal type="number" pos:start="2683:14" pos:end="2683:17">0x3B</literal></expr>:</case>

            <comment type="block" pos:start="2685:13" pos:end="2685:24">/* MINUW4 */</comment>

            <if_stmt pos:start="2687:13" pos:end="2689:33"><if pos:start="2687:13" pos:end="2689:33">if <condition pos:start="2687:16" pos:end="2687:42">(<expr pos:start="2687:17" pos:end="2687:41"><operator pos:start="2687:17" pos:end="2687:17">!</operator><operator pos:start="2687:18" pos:end="2687:18">(</operator><name pos:start="2687:19" pos:end="2687:28"><name pos:start="2687:19" pos:end="2687:21">ctx</name><operator pos:start="2687:22" pos:end="2687:23">-&gt;</operator><name pos:start="2687:24" pos:end="2687:28">amask</name></name> <operator pos:start="2687:30" pos:end="2687:30">&amp;</operator> <name pos:start="2687:32" pos:end="2687:40">AMASK_MVI</name><operator pos:start="2687:41" pos:end="2687:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2689:17" pos:end="2689:33"><block_content pos:start="2689:17" pos:end="2689:33">

                <goto pos:start="2689:17" pos:end="2689:33">goto <name pos:start="2689:22" pos:end="2689:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2691:13" pos:end="2691:27">/* XXX: TODO */</comment>

            <goto pos:start="2693:13" pos:end="2693:29">goto <name pos:start="2693:18" pos:end="2693:28">invalid_opc</name>;</goto>

            <break pos:start="2695:13" pos:end="2695:18">break;</break>

        <case pos:start="2697:9" pos:end="2697:18">case <expr pos:start="2697:14" pos:end="2697:17"><literal type="number" pos:start="2697:14" pos:end="2697:17">0x3C</literal></expr>:</case>

            <comment type="block" pos:start="2699:13" pos:end="2699:24">/* MAXUB8 */</comment>

            <if_stmt pos:start="2701:13" pos:end="2703:33"><if pos:start="2701:13" pos:end="2703:33">if <condition pos:start="2701:16" pos:end="2701:42">(<expr pos:start="2701:17" pos:end="2701:41"><operator pos:start="2701:17" pos:end="2701:17">!</operator><operator pos:start="2701:18" pos:end="2701:18">(</operator><name pos:start="2701:19" pos:end="2701:28"><name pos:start="2701:19" pos:end="2701:21">ctx</name><operator pos:start="2701:22" pos:end="2701:23">-&gt;</operator><name pos:start="2701:24" pos:end="2701:28">amask</name></name> <operator pos:start="2701:30" pos:end="2701:30">&amp;</operator> <name pos:start="2701:32" pos:end="2701:40">AMASK_MVI</name><operator pos:start="2701:41" pos:end="2701:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2703:17" pos:end="2703:33"><block_content pos:start="2703:17" pos:end="2703:33">

                <goto pos:start="2703:17" pos:end="2703:33">goto <name pos:start="2703:22" pos:end="2703:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2705:13" pos:end="2705:27">/* XXX: TODO */</comment>

            <goto pos:start="2707:13" pos:end="2707:29">goto <name pos:start="2707:18" pos:end="2707:28">invalid_opc</name>;</goto>

            <break pos:start="2709:13" pos:end="2709:18">break;</break>

        <case pos:start="2711:9" pos:end="2711:18">case <expr pos:start="2711:14" pos:end="2711:17"><literal type="number" pos:start="2711:14" pos:end="2711:17">0x3D</literal></expr>:</case>

            <comment type="block" pos:start="2713:13" pos:end="2713:24">/* MAXUW4 */</comment>

            <if_stmt pos:start="2715:13" pos:end="2717:33"><if pos:start="2715:13" pos:end="2717:33">if <condition pos:start="2715:16" pos:end="2715:42">(<expr pos:start="2715:17" pos:end="2715:41"><operator pos:start="2715:17" pos:end="2715:17">!</operator><operator pos:start="2715:18" pos:end="2715:18">(</operator><name pos:start="2715:19" pos:end="2715:28"><name pos:start="2715:19" pos:end="2715:21">ctx</name><operator pos:start="2715:22" pos:end="2715:23">-&gt;</operator><name pos:start="2715:24" pos:end="2715:28">amask</name></name> <operator pos:start="2715:30" pos:end="2715:30">&amp;</operator> <name pos:start="2715:32" pos:end="2715:40">AMASK_MVI</name><operator pos:start="2715:41" pos:end="2715:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2717:17" pos:end="2717:33"><block_content pos:start="2717:17" pos:end="2717:33">

                <goto pos:start="2717:17" pos:end="2717:33">goto <name pos:start="2717:22" pos:end="2717:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2719:13" pos:end="2719:27">/* XXX: TODO */</comment>

            <goto pos:start="2721:13" pos:end="2721:29">goto <name pos:start="2721:18" pos:end="2721:28">invalid_opc</name>;</goto>

            <break pos:start="2723:13" pos:end="2723:18">break;</break>

        <case pos:start="2725:9" pos:end="2725:18">case <expr pos:start="2725:14" pos:end="2725:17"><literal type="number" pos:start="2725:14" pos:end="2725:17">0x3E</literal></expr>:</case>

            <comment type="block" pos:start="2727:13" pos:end="2727:24">/* MAXSB8 */</comment>

            <if_stmt pos:start="2729:13" pos:end="2731:33"><if pos:start="2729:13" pos:end="2731:33">if <condition pos:start="2729:16" pos:end="2729:42">(<expr pos:start="2729:17" pos:end="2729:41"><operator pos:start="2729:17" pos:end="2729:17">!</operator><operator pos:start="2729:18" pos:end="2729:18">(</operator><name pos:start="2729:19" pos:end="2729:28"><name pos:start="2729:19" pos:end="2729:21">ctx</name><operator pos:start="2729:22" pos:end="2729:23">-&gt;</operator><name pos:start="2729:24" pos:end="2729:28">amask</name></name> <operator pos:start="2729:30" pos:end="2729:30">&amp;</operator> <name pos:start="2729:32" pos:end="2729:40">AMASK_MVI</name><operator pos:start="2729:41" pos:end="2729:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2731:17" pos:end="2731:33"><block_content pos:start="2731:17" pos:end="2731:33">

                <goto pos:start="2731:17" pos:end="2731:33">goto <name pos:start="2731:22" pos:end="2731:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2733:13" pos:end="2733:27">/* XXX: TODO */</comment>

            <goto pos:start="2735:13" pos:end="2735:29">goto <name pos:start="2735:18" pos:end="2735:28">invalid_opc</name>;</goto>

            <break pos:start="2737:13" pos:end="2737:18">break;</break>

        <case pos:start="2739:9" pos:end="2739:18">case <expr pos:start="2739:14" pos:end="2739:17"><literal type="number" pos:start="2739:14" pos:end="2739:17">0x3F</literal></expr>:</case>

            <comment type="block" pos:start="2741:13" pos:end="2741:24">/* MAXSW4 */</comment>

            <if_stmt pos:start="2743:13" pos:end="2745:33"><if pos:start="2743:13" pos:end="2745:33">if <condition pos:start="2743:16" pos:end="2743:42">(<expr pos:start="2743:17" pos:end="2743:41"><operator pos:start="2743:17" pos:end="2743:17">!</operator><operator pos:start="2743:18" pos:end="2743:18">(</operator><name pos:start="2743:19" pos:end="2743:28"><name pos:start="2743:19" pos:end="2743:21">ctx</name><operator pos:start="2743:22" pos:end="2743:23">-&gt;</operator><name pos:start="2743:24" pos:end="2743:28">amask</name></name> <operator pos:start="2743:30" pos:end="2743:30">&amp;</operator> <name pos:start="2743:32" pos:end="2743:40">AMASK_MVI</name><operator pos:start="2743:41" pos:end="2743:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2745:17" pos:end="2745:33"><block_content pos:start="2745:17" pos:end="2745:33">

                <goto pos:start="2745:17" pos:end="2745:33">goto <name pos:start="2745:22" pos:end="2745:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <comment type="block" pos:start="2747:13" pos:end="2747:27">/* XXX: TODO */</comment>

            <goto pos:start="2749:13" pos:end="2749:29">goto <name pos:start="2749:18" pos:end="2749:28">invalid_opc</name>;</goto>

            <break pos:start="2751:13" pos:end="2751:18">break;</break>

        <case pos:start="2753:9" pos:end="2753:18">case <expr pos:start="2753:14" pos:end="2753:17"><literal type="number" pos:start="2753:14" pos:end="2753:17">0x70</literal></expr>:</case>

            <comment type="block" pos:start="2755:13" pos:end="2755:23">/* FTOIT */</comment>

            <if_stmt pos:start="2757:13" pos:end="2759:33"><if pos:start="2757:13" pos:end="2759:33">if <condition pos:start="2757:16" pos:end="2757:42">(<expr pos:start="2757:17" pos:end="2757:41"><operator pos:start="2757:17" pos:end="2757:17">!</operator><operator pos:start="2757:18" pos:end="2757:18">(</operator><name pos:start="2757:19" pos:end="2757:28"><name pos:start="2757:19" pos:end="2757:21">ctx</name><operator pos:start="2757:22" pos:end="2757:23">-&gt;</operator><name pos:start="2757:24" pos:end="2757:28">amask</name></name> <operator pos:start="2757:30" pos:end="2757:30">&amp;</operator> <name pos:start="2757:32" pos:end="2757:40">AMASK_FIX</name><operator pos:start="2757:41" pos:end="2757:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2759:17" pos:end="2759:33"><block_content pos:start="2759:17" pos:end="2759:33">

                <goto pos:start="2759:17" pos:end="2759:33">goto <name pos:start="2759:22" pos:end="2759:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2761:13" pos:end="2771:13"><if pos:start="2761:13" pos:end="2771:13">if <condition pos:start="2761:16" pos:end="2761:33">(<expr pos:start="2761:17" pos:end="2761:32"><call pos:start="2761:17" pos:end="2761:32"><name pos:start="2761:17" pos:end="2761:22">likely</name><argument_list pos:start="2761:23" pos:end="2761:32">(<argument pos:start="2761:24" pos:end="2761:31"><expr pos:start="2761:24" pos:end="2761:31"><name pos:start="2761:24" pos:end="2761:25">rc</name> <operator pos:start="2761:27" pos:end="2761:28">!=</operator> <literal type="number" pos:start="2761:30" pos:end="2761:31">31</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="2761:35" pos:end="2771:13">{<block_content pos:start="2763:17" pos:end="2769:52">

                <if_stmt pos:start="2763:17" pos:end="2769:52"><if pos:start="2763:17" pos:end="2765:61">if <condition pos:start="2763:20" pos:end="2763:29">(<expr pos:start="2763:21" pos:end="2763:28"><name pos:start="2763:21" pos:end="2763:22">ra</name> <operator pos:start="2763:24" pos:end="2763:25">!=</operator> <literal type="number" pos:start="2763:27" pos:end="2763:28">31</literal></expr>)</condition><block type="pseudo" pos:start="2765:21" pos:end="2765:61"><block_content pos:start="2765:21" pos:end="2765:61">

                    <expr_stmt pos:start="2765:21" pos:end="2765:61"><expr pos:start="2765:21" pos:end="2765:60"><call pos:start="2765:21" pos:end="2765:60"><name pos:start="2765:21" pos:end="2765:35">tcg_gen_mov_i64</name><argument_list pos:start="2765:36" pos:end="2765:60">(<argument pos:start="2765:37" pos:end="2765:46"><expr pos:start="2765:37" pos:end="2765:46"><name pos:start="2765:37" pos:end="2765:46"><name pos:start="2765:37" pos:end="2765:42">cpu_ir</name><index pos:start="2765:43" pos:end="2765:46">[<expr pos:start="2765:44" pos:end="2765:45"><name pos:start="2765:44" pos:end="2765:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2765:49" pos:end="2765:59"><expr pos:start="2765:49" pos:end="2765:59"><name pos:start="2765:49" pos:end="2765:59"><name pos:start="2765:49" pos:end="2765:55">cpu_fir</name><index pos:start="2765:56" pos:end="2765:59">[<expr pos:start="2765:57" pos:end="2765:58"><name pos:start="2765:57" pos:end="2765:58">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2767:17" pos:end="2769:52">else<block type="pseudo" pos:start="2769:21" pos:end="2769:52"><block_content pos:start="2769:21" pos:end="2769:52">

                    <expr_stmt pos:start="2769:21" pos:end="2769:52"><expr pos:start="2769:21" pos:end="2769:51"><call pos:start="2769:21" pos:end="2769:51"><name pos:start="2769:21" pos:end="2769:36">tcg_gen_movi_i64</name><argument_list pos:start="2769:37" pos:end="2769:51">(<argument pos:start="2769:38" pos:end="2769:47"><expr pos:start="2769:38" pos:end="2769:47"><name pos:start="2769:38" pos:end="2769:47"><name pos:start="2769:38" pos:end="2769:43">cpu_ir</name><index pos:start="2769:44" pos:end="2769:47">[<expr pos:start="2769:45" pos:end="2769:46"><name pos:start="2769:45" pos:end="2769:46">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2769:50" pos:end="2769:50"><expr pos:start="2769:50" pos:end="2769:50"><literal type="number" pos:start="2769:50" pos:end="2769:50">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2773:13" pos:end="2773:18">break;</break>

        <case pos:start="2775:9" pos:end="2775:18">case <expr pos:start="2775:14" pos:end="2775:17"><literal type="number" pos:start="2775:14" pos:end="2775:17">0x78</literal></expr>:</case>

            <comment type="block" pos:start="2777:13" pos:end="2777:23">/* FTOIS */</comment>

            <if_stmt pos:start="2779:13" pos:end="2781:33"><if pos:start="2779:13" pos:end="2781:33">if <condition pos:start="2779:16" pos:end="2779:42">(<expr pos:start="2779:17" pos:end="2779:41"><operator pos:start="2779:17" pos:end="2779:17">!</operator><operator pos:start="2779:18" pos:end="2779:18">(</operator><name pos:start="2779:19" pos:end="2779:28"><name pos:start="2779:19" pos:end="2779:21">ctx</name><operator pos:start="2779:22" pos:end="2779:23">-&gt;</operator><name pos:start="2779:24" pos:end="2779:28">amask</name></name> <operator pos:start="2779:30" pos:end="2779:30">&amp;</operator> <name pos:start="2779:32" pos:end="2779:40">AMASK_FIX</name><operator pos:start="2779:41" pos:end="2779:41">)</operator></expr>)</condition><block type="pseudo" pos:start="2781:17" pos:end="2781:33"><block_content pos:start="2781:17" pos:end="2781:33">

                <goto pos:start="2781:17" pos:end="2781:33">goto <name pos:start="2781:22" pos:end="2781:32">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="2783:13" pos:end="2805:13"><if pos:start="2783:13" pos:end="2805:13">if <condition pos:start="2783:16" pos:end="2783:25">(<expr pos:start="2783:17" pos:end="2783:24"><name pos:start="2783:17" pos:end="2783:18">rc</name> <operator pos:start="2783:20" pos:end="2783:21">!=</operator> <literal type="number" pos:start="2783:23" pos:end="2783:24">31</literal></expr>)</condition> <block pos:start="2783:27" pos:end="2805:13">{<block_content pos:start="2785:17" pos:end="2803:40">

                <decl_stmt pos:start="2785:17" pos:end="2785:51"><decl pos:start="2785:17" pos:end="2785:50"><type pos:start="2785:17" pos:end="2785:24"><name pos:start="2785:17" pos:end="2785:24">TCGv_i32</name></type> <name pos:start="2785:26" pos:end="2785:29">tmp1</name> <init pos:start="2785:31" pos:end="2785:50">= <expr pos:start="2785:33" pos:end="2785:50"><call pos:start="2785:33" pos:end="2785:50"><name pos:start="2785:33" pos:end="2785:48">tcg_temp_new_i32</name><argument_list pos:start="2785:49" pos:end="2785:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="2787:17" pos:end="2799:17"><if pos:start="2787:17" pos:end="2789:62">if <condition pos:start="2787:20" pos:end="2787:29">(<expr pos:start="2787:21" pos:end="2787:28"><name pos:start="2787:21" pos:end="2787:22">ra</name> <operator pos:start="2787:24" pos:end="2787:25">!=</operator> <literal type="number" pos:start="2787:27" pos:end="2787:28">31</literal></expr>)</condition><block type="pseudo" pos:start="2789:21" pos:end="2789:62"><block_content pos:start="2789:21" pos:end="2789:62">

                    <expr_stmt pos:start="2789:21" pos:end="2789:62"><expr pos:start="2789:21" pos:end="2789:61"><call pos:start="2789:21" pos:end="2789:61"><name pos:start="2789:21" pos:end="2789:42">gen_helper_s_to_memory</name><argument_list pos:start="2789:43" pos:end="2789:61">(<argument pos:start="2789:44" pos:end="2789:47"><expr pos:start="2789:44" pos:end="2789:47"><name pos:start="2789:44" pos:end="2789:47">tmp1</name></expr></argument>, <argument pos:start="2789:50" pos:end="2789:60"><expr pos:start="2789:50" pos:end="2789:60"><name pos:start="2789:50" pos:end="2789:60"><name pos:start="2789:50" pos:end="2789:56">cpu_fir</name><index pos:start="2789:57" pos:end="2789:60">[<expr pos:start="2789:58" pos:end="2789:59"><name pos:start="2789:58" pos:end="2789:59">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2791:17" pos:end="2799:17">else <block pos:start="2791:22" pos:end="2799:17">{<block_content pos:start="2793:21" pos:end="2797:40">

                    <decl_stmt pos:start="2793:21" pos:end="2793:49"><decl pos:start="2793:21" pos:end="2793:48"><type pos:start="2793:21" pos:end="2793:24"><name pos:start="2793:21" pos:end="2793:24">TCGv</name></type> <name pos:start="2793:26" pos:end="2793:29">tmp2</name> <init pos:start="2793:31" pos:end="2793:48">= <expr pos:start="2793:33" pos:end="2793:48"><call pos:start="2793:33" pos:end="2793:48"><name pos:start="2793:33" pos:end="2793:45">tcg_const_i64</name><argument_list pos:start="2793:46" pos:end="2793:48">(<argument pos:start="2793:47" pos:end="2793:47"><expr pos:start="2793:47" pos:end="2793:47"><literal type="number" pos:start="2793:47" pos:end="2793:47">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="2795:21" pos:end="2795:55"><expr pos:start="2795:21" pos:end="2795:54"><call pos:start="2795:21" pos:end="2795:54"><name pos:start="2795:21" pos:end="2795:42">gen_helper_s_to_memory</name><argument_list pos:start="2795:43" pos:end="2795:54">(<argument pos:start="2795:44" pos:end="2795:47"><expr pos:start="2795:44" pos:end="2795:47"><name pos:start="2795:44" pos:end="2795:47">tmp1</name></expr></argument>, <argument pos:start="2795:50" pos:end="2795:53"><expr pos:start="2795:50" pos:end="2795:53"><name pos:start="2795:50" pos:end="2795:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2797:21" pos:end="2797:40"><expr pos:start="2797:21" pos:end="2797:39"><call pos:start="2797:21" pos:end="2797:39"><name pos:start="2797:21" pos:end="2797:33">tcg_temp_free</name><argument_list pos:start="2797:34" pos:end="2797:39">(<argument pos:start="2797:35" pos:end="2797:38"><expr pos:start="2797:35" pos:end="2797:38"><name pos:start="2797:35" pos:end="2797:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2801:17" pos:end="2801:54"><expr pos:start="2801:17" pos:end="2801:53"><call pos:start="2801:17" pos:end="2801:53"><name pos:start="2801:17" pos:end="2801:35">tcg_gen_ext_i32_i64</name><argument_list pos:start="2801:36" pos:end="2801:53">(<argument pos:start="2801:37" pos:end="2801:46"><expr pos:start="2801:37" pos:end="2801:46"><name pos:start="2801:37" pos:end="2801:46"><name pos:start="2801:37" pos:end="2801:42">cpu_ir</name><index pos:start="2801:43" pos:end="2801:46">[<expr pos:start="2801:44" pos:end="2801:45"><name pos:start="2801:44" pos:end="2801:45">rc</name></expr>]</index></name></expr></argument>, <argument pos:start="2801:49" pos:end="2801:52"><expr pos:start="2801:49" pos:end="2801:52"><name pos:start="2801:49" pos:end="2801:52">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2803:17" pos:end="2803:40"><expr pos:start="2803:17" pos:end="2803:39"><call pos:start="2803:17" pos:end="2803:39"><name pos:start="2803:17" pos:end="2803:33">tcg_temp_free_i32</name><argument_list pos:start="2803:34" pos:end="2803:39">(<argument pos:start="2803:35" pos:end="2803:38"><expr pos:start="2803:35" pos:end="2803:38"><name pos:start="2803:35" pos:end="2803:38">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2807:13" pos:end="2807:18">break;</break>

        <default pos:start="2809:9" pos:end="2809:16">default:</default>

            <goto pos:start="2811:13" pos:end="2811:29">goto <name pos:start="2811:18" pos:end="2811:28">invalid_opc</name>;</goto>

        </block_content>}</block></switch>

        <break pos:start="2815:9" pos:end="2815:14">break;</break>

    <case pos:start="2817:5" pos:end="2822:0">case <expr pos:start="2817:10" pos:end="2817:13"><literal type="number" pos:start="2817:10" pos:end="2817:13">0x1D</literal></expr>:</case>

        <comment type="block" pos:start="2819:9" pos:end="2819:31">/* HW_MTPR (PALcode) */</comment>

<cpp:if pos:start="2821:1" pos:end="2821:30">#<cpp:directive pos:start="2821:2" pos:end="2821:3">if</cpp:directive> <expr pos:start="2821:5" pos:end="2821:30"><call pos:start="2821:5" pos:end="2821:30"><name pos:start="2821:5" pos:end="2821:11">defined</name> <argument_list pos:start="2821:13" pos:end="2821:30">(<argument pos:start="2821:14" pos:end="2821:29"><expr pos:start="2821:14" pos:end="2821:29"><name pos:start="2821:14" pos:end="2821:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2823:9" pos:end="2826:0">goto <name pos:start="2823:14" pos:end="2823:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2825:1" pos:end="2825:5">#<cpp:directive pos:start="2825:2" pos:end="2825:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2827:9" pos:end="2853:9"><if pos:start="2827:9" pos:end="2829:29">if <condition pos:start="2827:12" pos:end="2827:27">(<expr pos:start="2827:13" pos:end="2827:26"><operator pos:start="2827:13" pos:end="2827:13">!</operator><name pos:start="2827:14" pos:end="2827:26"><name pos:start="2827:14" pos:end="2827:16">ctx</name><operator pos:start="2827:17" pos:end="2827:18">-&gt;</operator><name pos:start="2827:19" pos:end="2827:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2829:13" pos:end="2829:29"><block_content pos:start="2829:13" pos:end="2829:29">

            <goto pos:start="2829:13" pos:end="2829:29">goto <name pos:start="2829:18" pos:end="2829:28">invalid_opc</name>;</goto></block_content></block></if>

        <else pos:start="2831:9" pos:end="2853:9">else <block pos:start="2831:14" pos:end="2853:9">{<block_content pos:start="2833:13" pos:end="2851:20">

            <decl_stmt pos:start="2833:13" pos:end="2833:51"><decl pos:start="2833:13" pos:end="2833:50"><type pos:start="2833:13" pos:end="2833:16"><name pos:start="2833:13" pos:end="2833:16">TCGv</name></type> <name pos:start="2833:18" pos:end="2833:21">tmp1</name> <init pos:start="2833:23" pos:end="2833:50">= <expr pos:start="2833:25" pos:end="2833:50"><call pos:start="2833:25" pos:end="2833:50"><name pos:start="2833:25" pos:end="2833:37">tcg_const_i32</name><argument_list pos:start="2833:38" pos:end="2833:50">(<argument pos:start="2833:39" pos:end="2833:49"><expr pos:start="2833:39" pos:end="2833:49"><name pos:start="2833:39" pos:end="2833:42">insn</name> <operator pos:start="2833:44" pos:end="2833:44">&amp;</operator> <literal type="number" pos:start="2833:46" pos:end="2833:49">0xFF</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="2835:13" pos:end="2847:13"><if pos:start="2835:13" pos:end="2837:50">if <condition pos:start="2835:16" pos:end="2835:25">(<expr pos:start="2835:17" pos:end="2835:24"><name pos:start="2835:17" pos:end="2835:18">ra</name> <operator pos:start="2835:20" pos:end="2835:21">!=</operator> <literal type="number" pos:start="2835:23" pos:end="2835:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2837:17" pos:end="2837:50"><block_content pos:start="2837:17" pos:end="2837:50">

                <expr_stmt pos:start="2837:17" pos:end="2837:50"><expr pos:start="2837:17" pos:end="2837:49"><call pos:start="2837:17" pos:end="2837:49"><name pos:start="2837:17" pos:end="2837:31">gen_helper_mtpr</name><argument_list pos:start="2837:32" pos:end="2837:49">(<argument pos:start="2837:33" pos:end="2837:36"><expr pos:start="2837:33" pos:end="2837:36"><name pos:start="2837:33" pos:end="2837:36">tmp1</name></expr></argument>, <argument pos:start="2837:39" pos:end="2837:48"><expr pos:start="2837:39" pos:end="2837:48"><name pos:start="2837:39" pos:end="2837:48"><name pos:start="2837:39" pos:end="2837:44">cpu_ir</name><index pos:start="2837:45" pos:end="2837:48">[<expr pos:start="2837:46" pos:end="2837:47"><name pos:start="2837:46" pos:end="2837:47">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2839:13" pos:end="2847:13">else <block pos:start="2839:18" pos:end="2847:13">{<block_content pos:start="2841:17" pos:end="2845:36">

                <decl_stmt pos:start="2841:17" pos:end="2841:45"><decl pos:start="2841:17" pos:end="2841:44"><type pos:start="2841:17" pos:end="2841:20"><name pos:start="2841:17" pos:end="2841:20">TCGv</name></type> <name pos:start="2841:22" pos:end="2841:25">tmp2</name> <init pos:start="2841:27" pos:end="2841:44">= <expr pos:start="2841:29" pos:end="2841:44"><call pos:start="2841:29" pos:end="2841:44"><name pos:start="2841:29" pos:end="2841:41">tcg_const_i64</name><argument_list pos:start="2841:42" pos:end="2841:44">(<argument pos:start="2841:43" pos:end="2841:43"><expr pos:start="2841:43" pos:end="2841:43"><literal type="number" pos:start="2841:43" pos:end="2841:43">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="2843:17" pos:end="2843:44"><expr pos:start="2843:17" pos:end="2843:43"><call pos:start="2843:17" pos:end="2843:43"><name pos:start="2843:17" pos:end="2843:31">gen_helper_mtpr</name><argument_list pos:start="2843:32" pos:end="2843:43">(<argument pos:start="2843:33" pos:end="2843:36"><expr pos:start="2843:33" pos:end="2843:36"><name pos:start="2843:33" pos:end="2843:36">tmp1</name></expr></argument>, <argument pos:start="2843:39" pos:end="2843:42"><expr pos:start="2843:39" pos:end="2843:42"><name pos:start="2843:39" pos:end="2843:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2845:17" pos:end="2845:36"><expr pos:start="2845:17" pos:end="2845:35"><call pos:start="2845:17" pos:end="2845:35"><name pos:start="2845:17" pos:end="2845:29">tcg_temp_free</name><argument_list pos:start="2845:30" pos:end="2845:35">(<argument pos:start="2845:31" pos:end="2845:34"><expr pos:start="2845:31" pos:end="2845:34"><name pos:start="2845:31" pos:end="2845:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="2849:13" pos:end="2849:32"><expr pos:start="2849:13" pos:end="2849:31"><call pos:start="2849:13" pos:end="2849:31"><name pos:start="2849:13" pos:end="2849:25">tcg_temp_free</name><argument_list pos:start="2849:26" pos:end="2849:31">(<argument pos:start="2849:27" pos:end="2849:30"><expr pos:start="2849:27" pos:end="2849:30"><name pos:start="2849:27" pos:end="2849:30">tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2851:13" pos:end="2851:20"><expr pos:start="2851:13" pos:end="2851:19"><name pos:start="2851:13" pos:end="2851:15">ret</name> <operator pos:start="2851:17" pos:end="2851:17">=</operator> <literal type="number" pos:start="2851:19" pos:end="2851:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="2855:9" pos:end="2858:0">break;</break>

<cpp:endif pos:start="2857:1" pos:end="2857:6">#<cpp:directive pos:start="2857:2" pos:end="2857:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2859:5" pos:end="2864:0">case <expr pos:start="2859:10" pos:end="2859:13"><literal type="number" pos:start="2859:10" pos:end="2859:13">0x1E</literal></expr>:</case>

        <comment type="block" pos:start="2861:9" pos:end="2861:30">/* HW_REI (PALcode) */</comment>

<cpp:if pos:start="2863:1" pos:end="2863:30">#<cpp:directive pos:start="2863:2" pos:end="2863:3">if</cpp:directive> <expr pos:start="2863:5" pos:end="2863:30"><call pos:start="2863:5" pos:end="2863:30"><name pos:start="2863:5" pos:end="2863:11">defined</name> <argument_list pos:start="2863:13" pos:end="2863:30">(<argument pos:start="2863:14" pos:end="2863:29"><expr pos:start="2863:14" pos:end="2863:29"><name pos:start="2863:14" pos:end="2863:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2865:9" pos:end="2868:0">goto <name pos:start="2865:14" pos:end="2865:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2867:1" pos:end="2867:5">#<cpp:directive pos:start="2867:2" pos:end="2867:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2869:9" pos:end="2871:29"><if pos:start="2869:9" pos:end="2871:29">if <condition pos:start="2869:12" pos:end="2869:27">(<expr pos:start="2869:13" pos:end="2869:26"><operator pos:start="2869:13" pos:end="2869:13">!</operator><name pos:start="2869:14" pos:end="2869:26"><name pos:start="2869:14" pos:end="2869:16">ctx</name><operator pos:start="2869:17" pos:end="2869:18">-&gt;</operator><name pos:start="2869:19" pos:end="2869:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2871:13" pos:end="2871:29"><block_content pos:start="2871:13" pos:end="2871:29">

            <goto pos:start="2871:13" pos:end="2871:29">goto <name pos:start="2871:18" pos:end="2871:28">invalid_opc</name>;</goto></block_content></block></if></if_stmt>

        <if_stmt pos:start="2873:9" pos:end="2899:9"><if pos:start="2873:9" pos:end="2879:9">if <condition pos:start="2873:12" pos:end="2873:21">(<expr pos:start="2873:13" pos:end="2873:20"><name pos:start="2873:13" pos:end="2873:14">rb</name> <operator pos:start="2873:16" pos:end="2873:17">==</operator> <literal type="number" pos:start="2873:19" pos:end="2873:20">31</literal></expr>)</condition> <block pos:start="2873:23" pos:end="2879:9">{<block_content pos:start="2877:13" pos:end="2877:32">

            <comment type="block" pos:start="2875:13" pos:end="2875:29">/* "Old" alpha */</comment>

            <expr_stmt pos:start="2877:13" pos:end="2877:32"><expr pos:start="2877:13" pos:end="2877:31"><call pos:start="2877:13" pos:end="2877:31"><name pos:start="2877:13" pos:end="2877:29">gen_helper_hw_rei</name><argument_list pos:start="2877:30" pos:end="2877:31">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2879:11" pos:end="2899:9">else <block pos:start="2879:16" pos:end="2899:9">{<block_content pos:start="2881:13" pos:end="2897:31">

            <decl_stmt pos:start="2881:13" pos:end="2881:21"><decl pos:start="2881:13" pos:end="2881:20"><type pos:start="2881:13" pos:end="2881:16"><name pos:start="2881:13" pos:end="2881:16">TCGv</name></type> <name pos:start="2881:18" pos:end="2881:20">tmp</name></decl>;</decl_stmt>



            <if_stmt pos:start="2885:13" pos:end="2893:65"><if pos:start="2885:13" pos:end="2891:13">if <condition pos:start="2885:16" pos:end="2885:25">(<expr pos:start="2885:17" pos:end="2885:24"><name pos:start="2885:17" pos:end="2885:18">ra</name> <operator pos:start="2885:20" pos:end="2885:21">!=</operator> <literal type="number" pos:start="2885:23" pos:end="2885:24">31</literal></expr>)</condition> <block pos:start="2885:27" pos:end="2891:13">{<block_content pos:start="2887:17" pos:end="2889:81">

                <expr_stmt pos:start="2887:17" pos:end="2887:37"><expr pos:start="2887:17" pos:end="2887:36"><name pos:start="2887:17" pos:end="2887:19">tmp</name> <operator pos:start="2887:21" pos:end="2887:21">=</operator> <call pos:start="2887:23" pos:end="2887:36"><name pos:start="2887:23" pos:end="2887:34">tcg_temp_new</name><argument_list pos:start="2887:35" pos:end="2887:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2889:17" pos:end="2889:81"><expr pos:start="2889:17" pos:end="2889:80"><call pos:start="2889:17" pos:end="2889:80"><name pos:start="2889:17" pos:end="2889:32">tcg_gen_addi_i64</name><argument_list pos:start="2889:33" pos:end="2889:80">(<argument pos:start="2889:34" pos:end="2889:36"><expr pos:start="2889:34" pos:end="2889:36"><name pos:start="2889:34" pos:end="2889:36">tmp</name></expr></argument>, <argument pos:start="2889:39" pos:end="2889:48"><expr pos:start="2889:39" pos:end="2889:48"><name pos:start="2889:39" pos:end="2889:48"><name pos:start="2889:39" pos:end="2889:44">cpu_ir</name><index pos:start="2889:45" pos:end="2889:48">[<expr pos:start="2889:46" pos:end="2889:47"><name pos:start="2889:46" pos:end="2889:47">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2889:51" pos:end="2889:79"><expr pos:start="2889:51" pos:end="2889:79"><operator pos:start="2889:51" pos:end="2889:51">(</operator><operator pos:start="2889:52" pos:end="2889:52">(</operator><operator pos:start="2889:53" pos:end="2889:53">(</operator><name pos:start="2889:54" pos:end="2889:60">int64_t</name><operator pos:start="2889:61" pos:end="2889:61">)</operator><name pos:start="2889:62" pos:end="2889:65">insn</name> <operator pos:start="2889:67" pos:end="2889:68">&lt;&lt;</operator> <literal type="number" pos:start="2889:70" pos:end="2889:71">51</literal><operator pos:start="2889:72" pos:end="2889:72">)</operator> <operator pos:start="2889:74" pos:end="2889:75">&gt;&gt;</operator> <literal type="number" pos:start="2889:77" pos:end="2889:78">51</literal><operator pos:start="2889:79" pos:end="2889:79">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2891:15" pos:end="2893:65">else<block type="pseudo" pos:start="2893:17" pos:end="2893:65"><block_content pos:start="2893:17" pos:end="2893:65">

                <expr_stmt pos:start="2893:17" pos:end="2893:65"><expr pos:start="2893:17" pos:end="2893:64"><name pos:start="2893:17" pos:end="2893:19">tmp</name> <operator pos:start="2893:21" pos:end="2893:21">=</operator> <call pos:start="2893:23" pos:end="2893:64"><name pos:start="2893:23" pos:end="2893:35">tcg_const_i64</name><argument_list pos:start="2893:36" pos:end="2893:64">(<argument pos:start="2893:37" pos:end="2893:63"><expr pos:start="2893:37" pos:end="2893:63"><operator pos:start="2893:37" pos:end="2893:37">(</operator><operator pos:start="2893:38" pos:end="2893:38">(</operator><name pos:start="2893:39" pos:end="2893:45">int64_t</name><operator pos:start="2893:46" pos:end="2893:46">)</operator><name pos:start="2893:47" pos:end="2893:50">insn</name> <operator pos:start="2893:52" pos:end="2893:53">&lt;&lt;</operator> <literal type="number" pos:start="2893:55" pos:end="2893:56">51</literal><operator pos:start="2893:57" pos:end="2893:57">)</operator> <operator pos:start="2893:59" pos:end="2893:60">&gt;&gt;</operator> <literal type="number" pos:start="2893:62" pos:end="2893:63">51</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="2895:13" pos:end="2895:35"><expr pos:start="2895:13" pos:end="2895:34"><call pos:start="2895:13" pos:end="2895:34"><name pos:start="2895:13" pos:end="2895:29">gen_helper_hw_ret</name><argument_list pos:start="2895:30" pos:end="2895:34">(<argument pos:start="2895:31" pos:end="2895:33"><expr pos:start="2895:31" pos:end="2895:33"><name pos:start="2895:31" pos:end="2895:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2897:13" pos:end="2897:31"><expr pos:start="2897:13" pos:end="2897:30"><call pos:start="2897:13" pos:end="2897:30"><name pos:start="2897:13" pos:end="2897:25">tcg_temp_free</name><argument_list pos:start="2897:26" pos:end="2897:30">(<argument pos:start="2897:27" pos:end="2897:29"><expr pos:start="2897:27" pos:end="2897:29"><name pos:start="2897:27" pos:end="2897:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="2901:9" pos:end="2901:16"><expr pos:start="2901:9" pos:end="2901:15"><name pos:start="2901:9" pos:end="2901:11">ret</name> <operator pos:start="2901:13" pos:end="2901:13">=</operator> <literal type="number" pos:start="2901:15" pos:end="2901:15">2</literal></expr>;</expr_stmt>

        <break pos:start="2903:9" pos:end="2906:0">break;</break>

<cpp:endif pos:start="2905:1" pos:end="2905:6">#<cpp:directive pos:start="2905:2" pos:end="2905:6">endif</cpp:directive></cpp:endif>

    <case pos:start="2907:5" pos:end="2912:0">case <expr pos:start="2907:10" pos:end="2907:13"><literal type="number" pos:start="2907:10" pos:end="2907:13">0x1F</literal></expr>:</case>

        <comment type="block" pos:start="2909:9" pos:end="2909:29">/* HW_ST (PALcode) */</comment>

<cpp:if pos:start="2911:1" pos:end="2911:30">#<cpp:directive pos:start="2911:2" pos:end="2911:3">if</cpp:directive> <expr pos:start="2911:5" pos:end="2911:30"><call pos:start="2911:5" pos:end="2911:30"><name pos:start="2911:5" pos:end="2911:11">defined</name> <argument_list pos:start="2911:13" pos:end="2911:30">(<argument pos:start="2911:14" pos:end="2911:29"><expr pos:start="2911:14" pos:end="2911:29"><name pos:start="2911:14" pos:end="2911:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

        <goto pos:start="2913:9" pos:end="2916:0">goto <name pos:start="2913:14" pos:end="2913:24">invalid_opc</name>;</goto>

<cpp:else pos:start="2915:1" pos:end="2915:5">#<cpp:directive pos:start="2915:2" pos:end="2915:5">else</cpp:directive></cpp:else>

        <if_stmt pos:start="2917:9" pos:end="3085:9"><if pos:start="2917:9" pos:end="2919:29">if <condition pos:start="2917:12" pos:end="2917:27">(<expr pos:start="2917:13" pos:end="2917:26"><operator pos:start="2917:13" pos:end="2917:13">!</operator><name pos:start="2917:14" pos:end="2917:26"><name pos:start="2917:14" pos:end="2917:16">ctx</name><operator pos:start="2917:17" pos:end="2917:18">-&gt;</operator><name pos:start="2917:19" pos:end="2917:26">pal_mode</name></name></expr>)</condition><block type="pseudo" pos:start="2919:13" pos:end="2919:29"><block_content pos:start="2919:13" pos:end="2919:29">

            <goto pos:start="2919:13" pos:end="2919:29">goto <name pos:start="2919:18" pos:end="2919:28">invalid_opc</name>;</goto></block_content></block></if>

        <else pos:start="2921:9" pos:end="3085:9">else <block pos:start="2921:14" pos:end="3085:9">{<block_content pos:start="2923:13" pos:end="3083:32">

            <decl_stmt pos:start="2923:13" pos:end="2923:27"><decl pos:start="2923:13" pos:end="2923:21"><type pos:start="2923:13" pos:end="2923:16"><name pos:start="2923:13" pos:end="2923:16">TCGv</name></type> <name pos:start="2923:18" pos:end="2923:21">addr</name></decl>, <decl pos:start="2923:24" pos:end="2923:26"><type ref="prev" pos:start="2923:13" pos:end="2923:16"/><name pos:start="2923:24" pos:end="2923:26">val</name></decl>;</decl_stmt>

            <expr_stmt pos:start="2925:13" pos:end="2925:34"><expr pos:start="2925:13" pos:end="2925:33"><name pos:start="2925:13" pos:end="2925:16">addr</name> <operator pos:start="2925:18" pos:end="2925:18">=</operator> <call pos:start="2925:20" pos:end="2925:33"><name pos:start="2925:20" pos:end="2925:31">tcg_temp_new</name><argument_list pos:start="2925:32" pos:end="2925:33">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="2927:13" pos:end="2933:47"><if pos:start="2927:13" pos:end="2929:59">if <condition pos:start="2927:16" pos:end="2927:25">(<expr pos:start="2927:17" pos:end="2927:24"><name pos:start="2927:17" pos:end="2927:18">rb</name> <operator pos:start="2927:20" pos:end="2927:21">!=</operator> <literal type="number" pos:start="2927:23" pos:end="2927:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2929:17" pos:end="2929:59"><block_content pos:start="2929:17" pos:end="2929:59">

                <expr_stmt pos:start="2929:17" pos:end="2929:59"><expr pos:start="2929:17" pos:end="2929:58"><call pos:start="2929:17" pos:end="2929:58"><name pos:start="2929:17" pos:end="2929:32">tcg_gen_addi_i64</name><argument_list pos:start="2929:33" pos:end="2929:58">(<argument pos:start="2929:34" pos:end="2929:37"><expr pos:start="2929:34" pos:end="2929:37"><name pos:start="2929:34" pos:end="2929:37">addr</name></expr></argument>, <argument pos:start="2929:40" pos:end="2929:49"><expr pos:start="2929:40" pos:end="2929:49"><name pos:start="2929:40" pos:end="2929:49"><name pos:start="2929:40" pos:end="2929:45">cpu_ir</name><index pos:start="2929:46" pos:end="2929:49">[<expr pos:start="2929:47" pos:end="2929:48"><name pos:start="2929:47" pos:end="2929:48">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="2929:52" pos:end="2929:57"><expr pos:start="2929:52" pos:end="2929:57"><name pos:start="2929:52" pos:end="2929:57">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2931:13" pos:end="2933:47">else<block type="pseudo" pos:start="2933:17" pos:end="2933:47"><block_content pos:start="2933:17" pos:end="2933:47">

                <expr_stmt pos:start="2933:17" pos:end="2933:47"><expr pos:start="2933:17" pos:end="2933:46"><call pos:start="2933:17" pos:end="2933:46"><name pos:start="2933:17" pos:end="2933:32">tcg_gen_movi_i64</name><argument_list pos:start="2933:33" pos:end="2933:46">(<argument pos:start="2933:34" pos:end="2933:37"><expr pos:start="2933:34" pos:end="2933:37"><name pos:start="2933:34" pos:end="2933:37">addr</name></expr></argument>, <argument pos:start="2933:40" pos:end="2933:45"><expr pos:start="2933:40" pos:end="2933:45"><name pos:start="2933:40" pos:end="2933:45">disp12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="2935:13" pos:end="2945:13"><if pos:start="2935:13" pos:end="2937:33">if <condition pos:start="2935:16" pos:end="2935:25">(<expr pos:start="2935:17" pos:end="2935:24"><name pos:start="2935:17" pos:end="2935:18">ra</name> <operator pos:start="2935:20" pos:end="2935:21">!=</operator> <literal type="number" pos:start="2935:23" pos:end="2935:24">31</literal></expr>)</condition><block type="pseudo" pos:start="2937:17" pos:end="2937:33"><block_content pos:start="2937:17" pos:end="2937:33">

                <expr_stmt pos:start="2937:17" pos:end="2937:33"><expr pos:start="2937:17" pos:end="2937:32"><name pos:start="2937:17" pos:end="2937:19">val</name> <operator pos:start="2937:21" pos:end="2937:21">=</operator> <name pos:start="2937:23" pos:end="2937:32"><name pos:start="2937:23" pos:end="2937:28">cpu_ir</name><index pos:start="2937:29" pos:end="2937:32">[<expr pos:start="2937:30" pos:end="2937:31"><name pos:start="2937:30" pos:end="2937:31">ra</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="2939:13" pos:end="2945:13">else <block pos:start="2939:18" pos:end="2945:13">{<block_content pos:start="2941:17" pos:end="2943:41">

                <expr_stmt pos:start="2941:17" pos:end="2941:37"><expr pos:start="2941:17" pos:end="2941:36"><name pos:start="2941:17" pos:end="2941:19">val</name> <operator pos:start="2941:21" pos:end="2941:21">=</operator> <call pos:start="2941:23" pos:end="2941:36"><name pos:start="2941:23" pos:end="2941:34">tcg_temp_new</name><argument_list pos:start="2941:35" pos:end="2941:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2943:17" pos:end="2943:41"><expr pos:start="2943:17" pos:end="2943:40"><call pos:start="2943:17" pos:end="2943:40"><name pos:start="2943:17" pos:end="2943:32">tcg_gen_movi_i64</name><argument_list pos:start="2943:33" pos:end="2943:40">(<argument pos:start="2943:34" pos:end="2943:36"><expr pos:start="2943:34" pos:end="2943:36"><name pos:start="2943:34" pos:end="2943:36">val</name></expr></argument>, <argument pos:start="2943:39" pos:end="2943:39"><expr pos:start="2943:39" pos:end="2943:39"><literal type="number" pos:start="2943:39" pos:end="2943:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <switch pos:start="2947:13" pos:end="3077:13">switch <condition pos:start="2947:20" pos:end="2947:39">(<expr pos:start="2947:21" pos:end="2947:38"><operator pos:start="2947:21" pos:end="2947:21">(</operator><name pos:start="2947:22" pos:end="2947:25">insn</name> <operator pos:start="2947:27" pos:end="2947:28">&gt;&gt;</operator> <literal type="number" pos:start="2947:30" pos:end="2947:31">12</literal><operator pos:start="2947:32" pos:end="2947:32">)</operator> <operator pos:start="2947:34" pos:end="2947:34">&amp;</operator> <literal type="number" pos:start="2947:36" pos:end="2947:38">0xF</literal></expr>)</condition> <block pos:start="2947:41" pos:end="3077:13">{<block_content pos:start="2949:13" pos:end="3075:33">

            <case pos:start="2949:13" pos:end="2949:21">case <expr pos:start="2949:18" pos:end="2949:20"><literal type="number" pos:start="2949:18" pos:end="2949:20">0x0</literal></expr>:</case>

                <comment type="block" pos:start="2951:17" pos:end="2951:46">/* Longword physical access */</comment>

                <expr_stmt pos:start="2953:17" pos:end="2953:46"><expr pos:start="2953:17" pos:end="2953:45"><call pos:start="2953:17" pos:end="2953:45"><name pos:start="2953:17" pos:end="2953:34">gen_helper_stl_raw</name><argument_list pos:start="2953:35" pos:end="2953:45">(<argument pos:start="2953:36" pos:end="2953:38"><expr pos:start="2953:36" pos:end="2953:38"><name pos:start="2953:36" pos:end="2953:38">val</name></expr></argument>, <argument pos:start="2953:41" pos:end="2953:44"><expr pos:start="2953:41" pos:end="2953:44"><name pos:start="2953:41" pos:end="2953:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2955:17" pos:end="2955:22">break;</break>

            <case pos:start="2957:13" pos:end="2957:21">case <expr pos:start="2957:18" pos:end="2957:20"><literal type="number" pos:start="2957:18" pos:end="2957:20">0x1</literal></expr>:</case>

                <comment type="block" pos:start="2959:17" pos:end="2959:46">/* Quadword physical access */</comment>

                <expr_stmt pos:start="2961:17" pos:end="2961:46"><expr pos:start="2961:17" pos:end="2961:45"><call pos:start="2961:17" pos:end="2961:45"><name pos:start="2961:17" pos:end="2961:34">gen_helper_stq_raw</name><argument_list pos:start="2961:35" pos:end="2961:45">(<argument pos:start="2961:36" pos:end="2961:38"><expr pos:start="2961:36" pos:end="2961:38"><name pos:start="2961:36" pos:end="2961:38">val</name></expr></argument>, <argument pos:start="2961:41" pos:end="2961:44"><expr pos:start="2961:41" pos:end="2961:44"><name pos:start="2961:41" pos:end="2961:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2963:17" pos:end="2963:22">break;</break>

            <case pos:start="2965:13" pos:end="2965:21">case <expr pos:start="2965:18" pos:end="2965:20"><literal type="number" pos:start="2965:18" pos:end="2965:20">0x2</literal></expr>:</case>

                <comment type="block" pos:start="2967:17" pos:end="2967:56">/* Longword physical access with lock */</comment>

                <expr_stmt pos:start="2969:17" pos:end="2969:53"><expr pos:start="2969:17" pos:end="2969:52"><call pos:start="2969:17" pos:end="2969:52"><name pos:start="2969:17" pos:end="2969:36">gen_helper_stl_c_raw</name><argument_list pos:start="2969:37" pos:end="2969:52">(<argument pos:start="2969:38" pos:end="2969:40"><expr pos:start="2969:38" pos:end="2969:40"><name pos:start="2969:38" pos:end="2969:40">val</name></expr></argument>, <argument pos:start="2969:43" pos:end="2969:45"><expr pos:start="2969:43" pos:end="2969:45"><name pos:start="2969:43" pos:end="2969:45">val</name></expr></argument>, <argument pos:start="2969:48" pos:end="2969:51"><expr pos:start="2969:48" pos:end="2969:51"><name pos:start="2969:48" pos:end="2969:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2971:17" pos:end="2971:22">break;</break>

            <case pos:start="2973:13" pos:end="2973:21">case <expr pos:start="2973:18" pos:end="2973:20"><literal type="number" pos:start="2973:18" pos:end="2973:20">0x3</literal></expr>:</case>

                <comment type="block" pos:start="2975:17" pos:end="2975:56">/* Quadword physical access with lock */</comment>

                <expr_stmt pos:start="2977:17" pos:end="2977:53"><expr pos:start="2977:17" pos:end="2977:52"><call pos:start="2977:17" pos:end="2977:52"><name pos:start="2977:17" pos:end="2977:36">gen_helper_stq_c_raw</name><argument_list pos:start="2977:37" pos:end="2977:52">(<argument pos:start="2977:38" pos:end="2977:40"><expr pos:start="2977:38" pos:end="2977:40"><name pos:start="2977:38" pos:end="2977:40">val</name></expr></argument>, <argument pos:start="2977:43" pos:end="2977:45"><expr pos:start="2977:43" pos:end="2977:45"><name pos:start="2977:43" pos:end="2977:45">val</name></expr></argument>, <argument pos:start="2977:48" pos:end="2977:51"><expr pos:start="2977:48" pos:end="2977:51"><name pos:start="2977:48" pos:end="2977:51">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2979:17" pos:end="2979:22">break;</break>

            <case pos:start="2981:13" pos:end="2981:21">case <expr pos:start="2981:18" pos:end="2981:20"><literal type="number" pos:start="2981:18" pos:end="2981:20">0x4</literal></expr>:</case>

                <comment type="block" pos:start="2983:17" pos:end="2983:45">/* Longword virtual access */</comment>

                <expr_stmt pos:start="2985:17" pos:end="2985:55"><expr pos:start="2985:17" pos:end="2985:54"><call pos:start="2985:17" pos:end="2985:54"><name pos:start="2985:17" pos:end="2985:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="2985:43" pos:end="2985:54">(<argument pos:start="2985:44" pos:end="2985:47"><expr pos:start="2985:44" pos:end="2985:47"><name pos:start="2985:44" pos:end="2985:47">addr</name></expr></argument>, <argument pos:start="2985:50" pos:end="2985:53"><expr pos:start="2985:50" pos:end="2985:53"><name pos:start="2985:50" pos:end="2985:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2987:17" pos:end="2987:46"><expr pos:start="2987:17" pos:end="2987:45"><call pos:start="2987:17" pos:end="2987:45"><name pos:start="2987:17" pos:end="2987:34">gen_helper_stl_raw</name><argument_list pos:start="2987:35" pos:end="2987:45">(<argument pos:start="2987:36" pos:end="2987:38"><expr pos:start="2987:36" pos:end="2987:38"><name pos:start="2987:36" pos:end="2987:38">val</name></expr></argument>, <argument pos:start="2987:41" pos:end="2987:44"><expr pos:start="2987:41" pos:end="2987:44"><name pos:start="2987:41" pos:end="2987:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2989:17" pos:end="2989:22">break;</break>

            <case pos:start="2991:13" pos:end="2991:21">case <expr pos:start="2991:18" pos:end="2991:20"><literal type="number" pos:start="2991:18" pos:end="2991:20">0x5</literal></expr>:</case>

                <comment type="block" pos:start="2993:17" pos:end="2993:45">/* Quadword virtual access */</comment>

                <expr_stmt pos:start="2995:17" pos:end="2995:55"><expr pos:start="2995:17" pos:end="2995:54"><call pos:start="2995:17" pos:end="2995:54"><name pos:start="2995:17" pos:end="2995:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="2995:43" pos:end="2995:54">(<argument pos:start="2995:44" pos:end="2995:47"><expr pos:start="2995:44" pos:end="2995:47"><name pos:start="2995:44" pos:end="2995:47">addr</name></expr></argument>, <argument pos:start="2995:50" pos:end="2995:53"><expr pos:start="2995:50" pos:end="2995:53"><name pos:start="2995:50" pos:end="2995:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2997:17" pos:end="2997:46"><expr pos:start="2997:17" pos:end="2997:45"><call pos:start="2997:17" pos:end="2997:45"><name pos:start="2997:17" pos:end="2997:34">gen_helper_stq_raw</name><argument_list pos:start="2997:35" pos:end="2997:45">(<argument pos:start="2997:36" pos:end="2997:38"><expr pos:start="2997:36" pos:end="2997:38"><name pos:start="2997:36" pos:end="2997:38">val</name></expr></argument>, <argument pos:start="2997:41" pos:end="2997:44"><expr pos:start="2997:41" pos:end="2997:44"><name pos:start="2997:41" pos:end="2997:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="2999:17" pos:end="2999:22">break;</break>

            <case pos:start="3001:13" pos:end="3001:21">case <expr pos:start="3001:18" pos:end="3001:20"><literal type="number" pos:start="3001:18" pos:end="3001:20">0x6</literal></expr>:</case>

                <comment type="block" pos:start="3003:17" pos:end="3003:29">/* Invalid */</comment>

                <goto pos:start="3005:17" pos:end="3005:33">goto <name pos:start="3005:22" pos:end="3005:32">invalid_opc</name>;</goto>

            <case pos:start="3007:13" pos:end="3007:21">case <expr pos:start="3007:18" pos:end="3007:20"><literal type="number" pos:start="3007:18" pos:end="3007:20">0x7</literal></expr>:</case>

                <comment type="block" pos:start="3009:17" pos:end="3009:29">/* Invalid */</comment>

                <goto pos:start="3011:17" pos:end="3011:33">goto <name pos:start="3011:22" pos:end="3011:32">invalid_opc</name>;</goto>

            <case pos:start="3013:13" pos:end="3013:21">case <expr pos:start="3013:18" pos:end="3013:20"><literal type="number" pos:start="3013:18" pos:end="3013:20">0x8</literal></expr>:</case>

                <comment type="block" pos:start="3015:17" pos:end="3015:29">/* Invalid */</comment>

                <goto pos:start="3017:17" pos:end="3017:33">goto <name pos:start="3017:22" pos:end="3017:32">invalid_opc</name>;</goto>

            <case pos:start="3019:13" pos:end="3019:21">case <expr pos:start="3019:18" pos:end="3019:20"><literal type="number" pos:start="3019:18" pos:end="3019:20">0x9</literal></expr>:</case>

                <comment type="block" pos:start="3021:17" pos:end="3021:29">/* Invalid */</comment>

                <goto pos:start="3023:17" pos:end="3023:33">goto <name pos:start="3023:22" pos:end="3023:32">invalid_opc</name>;</goto>

            <case pos:start="3025:13" pos:end="3025:21">case <expr pos:start="3025:18" pos:end="3025:20"><literal type="number" pos:start="3025:18" pos:end="3025:20">0xA</literal></expr>:</case>

                <comment type="block" pos:start="3027:17" pos:end="3027:29">/* Invalid */</comment>

                <goto pos:start="3029:17" pos:end="3029:33">goto <name pos:start="3029:22" pos:end="3029:32">invalid_opc</name>;</goto>

            <case pos:start="3031:13" pos:end="3031:21">case <expr pos:start="3031:18" pos:end="3031:20"><literal type="number" pos:start="3031:18" pos:end="3031:20">0xB</literal></expr>:</case>

                <comment type="block" pos:start="3033:17" pos:end="3033:29">/* Invalid */</comment>

                <goto pos:start="3035:17" pos:end="3035:33">goto <name pos:start="3035:22" pos:end="3035:32">invalid_opc</name>;</goto>

            <case pos:start="3037:13" pos:end="3037:21">case <expr pos:start="3037:18" pos:end="3037:20"><literal type="number" pos:start="3037:18" pos:end="3037:20">0xC</literal></expr>:</case>

                <comment type="block" pos:start="3039:17" pos:end="3039:72">/* Longword virtual access with alternate access mode */</comment>

                <expr_stmt pos:start="3041:17" pos:end="3041:42"><expr pos:start="3041:17" pos:end="3041:41"><call pos:start="3041:17" pos:end="3041:41"><name pos:start="3041:17" pos:end="3041:39">gen_helper_set_alt_mode</name><argument_list pos:start="3041:40" pos:end="3041:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3043:17" pos:end="3043:55"><expr pos:start="3043:17" pos:end="3043:54"><call pos:start="3043:17" pos:end="3043:54"><name pos:start="3043:17" pos:end="3043:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="3043:43" pos:end="3043:54">(<argument pos:start="3043:44" pos:end="3043:47"><expr pos:start="3043:44" pos:end="3043:47"><name pos:start="3043:44" pos:end="3043:47">addr</name></expr></argument>, <argument pos:start="3043:50" pos:end="3043:53"><expr pos:start="3043:50" pos:end="3043:53"><name pos:start="3043:50" pos:end="3043:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3045:17" pos:end="3045:46"><expr pos:start="3045:17" pos:end="3045:45"><call pos:start="3045:17" pos:end="3045:45"><name pos:start="3045:17" pos:end="3045:34">gen_helper_stl_raw</name><argument_list pos:start="3045:35" pos:end="3045:45">(<argument pos:start="3045:36" pos:end="3045:38"><expr pos:start="3045:36" pos:end="3045:38"><name pos:start="3045:36" pos:end="3045:38">val</name></expr></argument>, <argument pos:start="3045:41" pos:end="3045:44"><expr pos:start="3045:41" pos:end="3045:44"><name pos:start="3045:41" pos:end="3045:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3047:17" pos:end="3047:42"><expr pos:start="3047:17" pos:end="3047:41"><call pos:start="3047:17" pos:end="3047:41"><name pos:start="3047:17" pos:end="3047:39">gen_helper_restore_mode</name><argument_list pos:start="3047:40" pos:end="3047:41">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3049:17" pos:end="3049:22">break;</break>

            <case pos:start="3051:13" pos:end="3051:21">case <expr pos:start="3051:18" pos:end="3051:20"><literal type="number" pos:start="3051:18" pos:end="3051:20">0xD</literal></expr>:</case>

                <comment type="block" pos:start="3053:17" pos:end="3053:72">/* Quadword virtual access with alternate access mode */</comment>

                <expr_stmt pos:start="3055:17" pos:end="3055:42"><expr pos:start="3055:17" pos:end="3055:41"><call pos:start="3055:17" pos:end="3055:41"><name pos:start="3055:17" pos:end="3055:39">gen_helper_set_alt_mode</name><argument_list pos:start="3055:40" pos:end="3055:41">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3057:17" pos:end="3057:55"><expr pos:start="3057:17" pos:end="3057:54"><call pos:start="3057:17" pos:end="3057:54"><name pos:start="3057:17" pos:end="3057:42">gen_helper_st_virt_to_phys</name><argument_list pos:start="3057:43" pos:end="3057:54">(<argument pos:start="3057:44" pos:end="3057:47"><expr pos:start="3057:44" pos:end="3057:47"><name pos:start="3057:44" pos:end="3057:47">addr</name></expr></argument>, <argument pos:start="3057:50" pos:end="3057:53"><expr pos:start="3057:50" pos:end="3057:53"><name pos:start="3057:50" pos:end="3057:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3059:17" pos:end="3059:46"><expr pos:start="3059:17" pos:end="3059:45"><call pos:start="3059:17" pos:end="3059:45"><name pos:start="3059:17" pos:end="3059:34">gen_helper_stl_raw</name><argument_list pos:start="3059:35" pos:end="3059:45">(<argument pos:start="3059:36" pos:end="3059:38"><expr pos:start="3059:36" pos:end="3059:38"><name pos:start="3059:36" pos:end="3059:38">val</name></expr></argument>, <argument pos:start="3059:41" pos:end="3059:44"><expr pos:start="3059:41" pos:end="3059:44"><name pos:start="3059:41" pos:end="3059:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="3061:17" pos:end="3061:42"><expr pos:start="3061:17" pos:end="3061:41"><call pos:start="3061:17" pos:end="3061:41"><name pos:start="3061:17" pos:end="3061:39">gen_helper_restore_mode</name><argument_list pos:start="3061:40" pos:end="3061:41">()</argument_list></call></expr>;</expr_stmt>

                <break pos:start="3063:17" pos:end="3063:22">break;</break>

            <case pos:start="3065:13" pos:end="3065:21">case <expr pos:start="3065:18" pos:end="3065:20"><literal type="number" pos:start="3065:18" pos:end="3065:20">0xE</literal></expr>:</case>

                <comment type="block" pos:start="3067:17" pos:end="3067:29">/* Invalid */</comment>

                <goto pos:start="3069:17" pos:end="3069:33">goto <name pos:start="3069:22" pos:end="3069:32">invalid_opc</name>;</goto>

            <case pos:start="3071:13" pos:end="3071:21">case <expr pos:start="3071:18" pos:end="3071:20"><literal type="number" pos:start="3071:18" pos:end="3071:20">0xF</literal></expr>:</case>

                <comment type="block" pos:start="3073:17" pos:end="3073:29">/* Invalid */</comment>

                <goto pos:start="3075:17" pos:end="3075:33">goto <name pos:start="3075:22" pos:end="3075:32">invalid_opc</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="3079:13" pos:end="3081:35"><if pos:start="3079:13" pos:end="3081:35">if <condition pos:start="3079:16" pos:end="3079:25">(<expr pos:start="3079:17" pos:end="3079:24"><name pos:start="3079:17" pos:end="3079:18">ra</name> <operator pos:start="3079:20" pos:end="3079:21">==</operator> <literal type="number" pos:start="3079:23" pos:end="3079:24">31</literal></expr>)</condition><block type="pseudo" pos:start="3081:17" pos:end="3081:35"><block_content pos:start="3081:17" pos:end="3081:35">

                <expr_stmt pos:start="3081:17" pos:end="3081:35"><expr pos:start="3081:17" pos:end="3081:34"><call pos:start="3081:17" pos:end="3081:34"><name pos:start="3081:17" pos:end="3081:29">tcg_temp_free</name><argument_list pos:start="3081:30" pos:end="3081:34">(<argument pos:start="3081:31" pos:end="3081:33"><expr pos:start="3081:31" pos:end="3081:33"><name pos:start="3081:31" pos:end="3081:33">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="3083:13" pos:end="3083:32"><expr pos:start="3083:13" pos:end="3083:31"><call pos:start="3083:13" pos:end="3083:31"><name pos:start="3083:13" pos:end="3083:25">tcg_temp_free</name><argument_list pos:start="3083:26" pos:end="3083:31">(<argument pos:start="3083:27" pos:end="3083:30"><expr pos:start="3083:27" pos:end="3083:30"><name pos:start="3083:27" pos:end="3083:30">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="3087:9" pos:end="3090:0">break;</break>

<cpp:endif pos:start="3089:1" pos:end="3089:6">#<cpp:directive pos:start="3089:2" pos:end="3089:6">endif</cpp:directive></cpp:endif>

    <case pos:start="3091:5" pos:end="3091:14">case <expr pos:start="3091:10" pos:end="3091:13"><literal type="number" pos:start="3091:10" pos:end="3091:13">0x20</literal></expr>:</case>

        <comment type="block" pos:start="3093:9" pos:end="3093:17">/* LDF */</comment>

        <expr_stmt pos:start="3095:9" pos:end="3095:63"><expr pos:start="3095:9" pos:end="3095:62"><call pos:start="3095:9" pos:end="3095:62"><name pos:start="3095:9" pos:end="3095:20">gen_load_mem</name><argument_list pos:start="3095:21" pos:end="3095:62">(<argument pos:start="3095:22" pos:end="3095:24"><expr pos:start="3095:22" pos:end="3095:24"><name pos:start="3095:22" pos:end="3095:24">ctx</name></expr></argument>, <argument pos:start="3095:27" pos:end="3095:39"><expr pos:start="3095:27" pos:end="3095:39"><operator pos:start="3095:27" pos:end="3095:27">&amp;</operator><name pos:start="3095:28" pos:end="3095:39">gen_qemu_ldf</name></expr></argument>, <argument pos:start="3095:42" pos:end="3095:43"><expr pos:start="3095:42" pos:end="3095:43"><name pos:start="3095:42" pos:end="3095:43">ra</name></expr></argument>, <argument pos:start="3095:46" pos:end="3095:47"><expr pos:start="3095:46" pos:end="3095:47"><name pos:start="3095:46" pos:end="3095:47">rb</name></expr></argument>, <argument pos:start="3095:50" pos:end="3095:55"><expr pos:start="3095:50" pos:end="3095:55"><name pos:start="3095:50" pos:end="3095:55">disp16</name></expr></argument>, <argument pos:start="3095:58" pos:end="3095:58"><expr pos:start="3095:58" pos:end="3095:58"><literal type="number" pos:start="3095:58" pos:end="3095:58">1</literal></expr></argument>, <argument pos:start="3095:61" pos:end="3095:61"><expr pos:start="3095:61" pos:end="3095:61"><literal type="number" pos:start="3095:61" pos:end="3095:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3097:9" pos:end="3097:14">break;</break>

    <case pos:start="3099:5" pos:end="3099:14">case <expr pos:start="3099:10" pos:end="3099:13"><literal type="number" pos:start="3099:10" pos:end="3099:13">0x21</literal></expr>:</case>

        <comment type="block" pos:start="3101:9" pos:end="3101:17">/* LDG */</comment>

        <expr_stmt pos:start="3103:9" pos:end="3103:63"><expr pos:start="3103:9" pos:end="3103:62"><call pos:start="3103:9" pos:end="3103:62"><name pos:start="3103:9" pos:end="3103:20">gen_load_mem</name><argument_list pos:start="3103:21" pos:end="3103:62">(<argument pos:start="3103:22" pos:end="3103:24"><expr pos:start="3103:22" pos:end="3103:24"><name pos:start="3103:22" pos:end="3103:24">ctx</name></expr></argument>, <argument pos:start="3103:27" pos:end="3103:39"><expr pos:start="3103:27" pos:end="3103:39"><operator pos:start="3103:27" pos:end="3103:27">&amp;</operator><name pos:start="3103:28" pos:end="3103:39">gen_qemu_ldg</name></expr></argument>, <argument pos:start="3103:42" pos:end="3103:43"><expr pos:start="3103:42" pos:end="3103:43"><name pos:start="3103:42" pos:end="3103:43">ra</name></expr></argument>, <argument pos:start="3103:46" pos:end="3103:47"><expr pos:start="3103:46" pos:end="3103:47"><name pos:start="3103:46" pos:end="3103:47">rb</name></expr></argument>, <argument pos:start="3103:50" pos:end="3103:55"><expr pos:start="3103:50" pos:end="3103:55"><name pos:start="3103:50" pos:end="3103:55">disp16</name></expr></argument>, <argument pos:start="3103:58" pos:end="3103:58"><expr pos:start="3103:58" pos:end="3103:58"><literal type="number" pos:start="3103:58" pos:end="3103:58">1</literal></expr></argument>, <argument pos:start="3103:61" pos:end="3103:61"><expr pos:start="3103:61" pos:end="3103:61"><literal type="number" pos:start="3103:61" pos:end="3103:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3105:9" pos:end="3105:14">break;</break>

    <case pos:start="3107:5" pos:end="3107:14">case <expr pos:start="3107:10" pos:end="3107:13"><literal type="number" pos:start="3107:10" pos:end="3107:13">0x22</literal></expr>:</case>

        <comment type="block" pos:start="3109:9" pos:end="3109:17">/* LDS */</comment>

        <expr_stmt pos:start="3111:9" pos:end="3111:63"><expr pos:start="3111:9" pos:end="3111:62"><call pos:start="3111:9" pos:end="3111:62"><name pos:start="3111:9" pos:end="3111:20">gen_load_mem</name><argument_list pos:start="3111:21" pos:end="3111:62">(<argument pos:start="3111:22" pos:end="3111:24"><expr pos:start="3111:22" pos:end="3111:24"><name pos:start="3111:22" pos:end="3111:24">ctx</name></expr></argument>, <argument pos:start="3111:27" pos:end="3111:39"><expr pos:start="3111:27" pos:end="3111:39"><operator pos:start="3111:27" pos:end="3111:27">&amp;</operator><name pos:start="3111:28" pos:end="3111:39">gen_qemu_lds</name></expr></argument>, <argument pos:start="3111:42" pos:end="3111:43"><expr pos:start="3111:42" pos:end="3111:43"><name pos:start="3111:42" pos:end="3111:43">ra</name></expr></argument>, <argument pos:start="3111:46" pos:end="3111:47"><expr pos:start="3111:46" pos:end="3111:47"><name pos:start="3111:46" pos:end="3111:47">rb</name></expr></argument>, <argument pos:start="3111:50" pos:end="3111:55"><expr pos:start="3111:50" pos:end="3111:55"><name pos:start="3111:50" pos:end="3111:55">disp16</name></expr></argument>, <argument pos:start="3111:58" pos:end="3111:58"><expr pos:start="3111:58" pos:end="3111:58"><literal type="number" pos:start="3111:58" pos:end="3111:58">1</literal></expr></argument>, <argument pos:start="3111:61" pos:end="3111:61"><expr pos:start="3111:61" pos:end="3111:61"><literal type="number" pos:start="3111:61" pos:end="3111:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3113:9" pos:end="3113:14">break;</break>

    <case pos:start="3115:5" pos:end="3115:14">case <expr pos:start="3115:10" pos:end="3115:13"><literal type="number" pos:start="3115:10" pos:end="3115:13">0x23</literal></expr>:</case>

        <comment type="block" pos:start="3117:9" pos:end="3117:17">/* LDT */</comment>

        <expr_stmt pos:start="3119:9" pos:end="3119:68"><expr pos:start="3119:9" pos:end="3119:67"><call pos:start="3119:9" pos:end="3119:67"><name pos:start="3119:9" pos:end="3119:20">gen_load_mem</name><argument_list pos:start="3119:21" pos:end="3119:67">(<argument pos:start="3119:22" pos:end="3119:24"><expr pos:start="3119:22" pos:end="3119:24"><name pos:start="3119:22" pos:end="3119:24">ctx</name></expr></argument>, <argument pos:start="3119:27" pos:end="3119:44"><expr pos:start="3119:27" pos:end="3119:44"><operator pos:start="3119:27" pos:end="3119:27">&amp;</operator><name pos:start="3119:28" pos:end="3119:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="3119:47" pos:end="3119:48"><expr pos:start="3119:47" pos:end="3119:48"><name pos:start="3119:47" pos:end="3119:48">ra</name></expr></argument>, <argument pos:start="3119:51" pos:end="3119:52"><expr pos:start="3119:51" pos:end="3119:52"><name pos:start="3119:51" pos:end="3119:52">rb</name></expr></argument>, <argument pos:start="3119:55" pos:end="3119:60"><expr pos:start="3119:55" pos:end="3119:60"><name pos:start="3119:55" pos:end="3119:60">disp16</name></expr></argument>, <argument pos:start="3119:63" pos:end="3119:63"><expr pos:start="3119:63" pos:end="3119:63"><literal type="number" pos:start="3119:63" pos:end="3119:63">1</literal></expr></argument>, <argument pos:start="3119:66" pos:end="3119:66"><expr pos:start="3119:66" pos:end="3119:66"><literal type="number" pos:start="3119:66" pos:end="3119:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3121:9" pos:end="3121:14">break;</break>

    <case pos:start="3123:5" pos:end="3123:14">case <expr pos:start="3123:10" pos:end="3123:13"><literal type="number" pos:start="3123:10" pos:end="3123:13">0x24</literal></expr>:</case>

        <comment type="block" pos:start="3125:9" pos:end="3125:17">/* STF */</comment>

        <expr_stmt pos:start="3127:9" pos:end="3127:67"><expr pos:start="3127:9" pos:end="3127:66"><call pos:start="3127:9" pos:end="3127:66"><name pos:start="3127:9" pos:end="3127:21">gen_store_mem</name><argument_list pos:start="3127:22" pos:end="3127:66">(<argument pos:start="3127:23" pos:end="3127:25"><expr pos:start="3127:23" pos:end="3127:25"><name pos:start="3127:23" pos:end="3127:25">ctx</name></expr></argument>, <argument pos:start="3127:28" pos:end="3127:40"><expr pos:start="3127:28" pos:end="3127:40"><operator pos:start="3127:28" pos:end="3127:28">&amp;</operator><name pos:start="3127:29" pos:end="3127:40">gen_qemu_stf</name></expr></argument>, <argument pos:start="3127:43" pos:end="3127:44"><expr pos:start="3127:43" pos:end="3127:44"><name pos:start="3127:43" pos:end="3127:44">ra</name></expr></argument>, <argument pos:start="3127:47" pos:end="3127:48"><expr pos:start="3127:47" pos:end="3127:48"><name pos:start="3127:47" pos:end="3127:48">rb</name></expr></argument>, <argument pos:start="3127:51" pos:end="3127:56"><expr pos:start="3127:51" pos:end="3127:56"><name pos:start="3127:51" pos:end="3127:56">disp16</name></expr></argument>, <argument pos:start="3127:59" pos:end="3127:59"><expr pos:start="3127:59" pos:end="3127:59"><literal type="number" pos:start="3127:59" pos:end="3127:59">1</literal></expr></argument>, <argument pos:start="3127:62" pos:end="3127:62"><expr pos:start="3127:62" pos:end="3127:62"><literal type="number" pos:start="3127:62" pos:end="3127:62">0</literal></expr></argument>, <argument pos:start="3127:65" pos:end="3127:65"><expr pos:start="3127:65" pos:end="3127:65"><literal type="number" pos:start="3127:65" pos:end="3127:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3129:9" pos:end="3129:14">break;</break>

    <case pos:start="3131:5" pos:end="3131:14">case <expr pos:start="3131:10" pos:end="3131:13"><literal type="number" pos:start="3131:10" pos:end="3131:13">0x25</literal></expr>:</case>

        <comment type="block" pos:start="3133:9" pos:end="3133:17">/* STG */</comment>

        <expr_stmt pos:start="3135:9" pos:end="3135:67"><expr pos:start="3135:9" pos:end="3135:66"><call pos:start="3135:9" pos:end="3135:66"><name pos:start="3135:9" pos:end="3135:21">gen_store_mem</name><argument_list pos:start="3135:22" pos:end="3135:66">(<argument pos:start="3135:23" pos:end="3135:25"><expr pos:start="3135:23" pos:end="3135:25"><name pos:start="3135:23" pos:end="3135:25">ctx</name></expr></argument>, <argument pos:start="3135:28" pos:end="3135:40"><expr pos:start="3135:28" pos:end="3135:40"><operator pos:start="3135:28" pos:end="3135:28">&amp;</operator><name pos:start="3135:29" pos:end="3135:40">gen_qemu_stg</name></expr></argument>, <argument pos:start="3135:43" pos:end="3135:44"><expr pos:start="3135:43" pos:end="3135:44"><name pos:start="3135:43" pos:end="3135:44">ra</name></expr></argument>, <argument pos:start="3135:47" pos:end="3135:48"><expr pos:start="3135:47" pos:end="3135:48"><name pos:start="3135:47" pos:end="3135:48">rb</name></expr></argument>, <argument pos:start="3135:51" pos:end="3135:56"><expr pos:start="3135:51" pos:end="3135:56"><name pos:start="3135:51" pos:end="3135:56">disp16</name></expr></argument>, <argument pos:start="3135:59" pos:end="3135:59"><expr pos:start="3135:59" pos:end="3135:59"><literal type="number" pos:start="3135:59" pos:end="3135:59">1</literal></expr></argument>, <argument pos:start="3135:62" pos:end="3135:62"><expr pos:start="3135:62" pos:end="3135:62"><literal type="number" pos:start="3135:62" pos:end="3135:62">0</literal></expr></argument>, <argument pos:start="3135:65" pos:end="3135:65"><expr pos:start="3135:65" pos:end="3135:65"><literal type="number" pos:start="3135:65" pos:end="3135:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3137:9" pos:end="3137:14">break;</break>

    <case pos:start="3139:5" pos:end="3139:14">case <expr pos:start="3139:10" pos:end="3139:13"><literal type="number" pos:start="3139:10" pos:end="3139:13">0x26</literal></expr>:</case>

        <comment type="block" pos:start="3141:9" pos:end="3141:17">/* STS */</comment>

        <expr_stmt pos:start="3143:9" pos:end="3143:67"><expr pos:start="3143:9" pos:end="3143:66"><call pos:start="3143:9" pos:end="3143:66"><name pos:start="3143:9" pos:end="3143:21">gen_store_mem</name><argument_list pos:start="3143:22" pos:end="3143:66">(<argument pos:start="3143:23" pos:end="3143:25"><expr pos:start="3143:23" pos:end="3143:25"><name pos:start="3143:23" pos:end="3143:25">ctx</name></expr></argument>, <argument pos:start="3143:28" pos:end="3143:40"><expr pos:start="3143:28" pos:end="3143:40"><operator pos:start="3143:28" pos:end="3143:28">&amp;</operator><name pos:start="3143:29" pos:end="3143:40">gen_qemu_sts</name></expr></argument>, <argument pos:start="3143:43" pos:end="3143:44"><expr pos:start="3143:43" pos:end="3143:44"><name pos:start="3143:43" pos:end="3143:44">ra</name></expr></argument>, <argument pos:start="3143:47" pos:end="3143:48"><expr pos:start="3143:47" pos:end="3143:48"><name pos:start="3143:47" pos:end="3143:48">rb</name></expr></argument>, <argument pos:start="3143:51" pos:end="3143:56"><expr pos:start="3143:51" pos:end="3143:56"><name pos:start="3143:51" pos:end="3143:56">disp16</name></expr></argument>, <argument pos:start="3143:59" pos:end="3143:59"><expr pos:start="3143:59" pos:end="3143:59"><literal type="number" pos:start="3143:59" pos:end="3143:59">1</literal></expr></argument>, <argument pos:start="3143:62" pos:end="3143:62"><expr pos:start="3143:62" pos:end="3143:62"><literal type="number" pos:start="3143:62" pos:end="3143:62">0</literal></expr></argument>, <argument pos:start="3143:65" pos:end="3143:65"><expr pos:start="3143:65" pos:end="3143:65"><literal type="number" pos:start="3143:65" pos:end="3143:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3145:9" pos:end="3145:14">break;</break>

    <case pos:start="3147:5" pos:end="3147:14">case <expr pos:start="3147:10" pos:end="3147:13"><literal type="number" pos:start="3147:10" pos:end="3147:13">0x27</literal></expr>:</case>

        <comment type="block" pos:start="3149:9" pos:end="3149:17">/* STT */</comment>

        <expr_stmt pos:start="3151:9" pos:end="3151:72"><expr pos:start="3151:9" pos:end="3151:71"><call pos:start="3151:9" pos:end="3151:71"><name pos:start="3151:9" pos:end="3151:21">gen_store_mem</name><argument_list pos:start="3151:22" pos:end="3151:71">(<argument pos:start="3151:23" pos:end="3151:25"><expr pos:start="3151:23" pos:end="3151:25"><name pos:start="3151:23" pos:end="3151:25">ctx</name></expr></argument>, <argument pos:start="3151:28" pos:end="3151:45"><expr pos:start="3151:28" pos:end="3151:45"><operator pos:start="3151:28" pos:end="3151:28">&amp;</operator><name pos:start="3151:29" pos:end="3151:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="3151:48" pos:end="3151:49"><expr pos:start="3151:48" pos:end="3151:49"><name pos:start="3151:48" pos:end="3151:49">ra</name></expr></argument>, <argument pos:start="3151:52" pos:end="3151:53"><expr pos:start="3151:52" pos:end="3151:53"><name pos:start="3151:52" pos:end="3151:53">rb</name></expr></argument>, <argument pos:start="3151:56" pos:end="3151:61"><expr pos:start="3151:56" pos:end="3151:61"><name pos:start="3151:56" pos:end="3151:61">disp16</name></expr></argument>, <argument pos:start="3151:64" pos:end="3151:64"><expr pos:start="3151:64" pos:end="3151:64"><literal type="number" pos:start="3151:64" pos:end="3151:64">1</literal></expr></argument>, <argument pos:start="3151:67" pos:end="3151:67"><expr pos:start="3151:67" pos:end="3151:67"><literal type="number" pos:start="3151:67" pos:end="3151:67">0</literal></expr></argument>, <argument pos:start="3151:70" pos:end="3151:70"><expr pos:start="3151:70" pos:end="3151:70"><literal type="number" pos:start="3151:70" pos:end="3151:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3153:9" pos:end="3153:14">break;</break>

    <case pos:start="3155:5" pos:end="3155:14">case <expr pos:start="3155:10" pos:end="3155:13"><literal type="number" pos:start="3155:10" pos:end="3155:13">0x28</literal></expr>:</case>

        <comment type="block" pos:start="3157:9" pos:end="3157:17">/* LDL */</comment>

        <expr_stmt pos:start="3159:9" pos:end="3159:69"><expr pos:start="3159:9" pos:end="3159:68"><call pos:start="3159:9" pos:end="3159:68"><name pos:start="3159:9" pos:end="3159:20">gen_load_mem</name><argument_list pos:start="3159:21" pos:end="3159:68">(<argument pos:start="3159:22" pos:end="3159:24"><expr pos:start="3159:22" pos:end="3159:24"><name pos:start="3159:22" pos:end="3159:24">ctx</name></expr></argument>, <argument pos:start="3159:27" pos:end="3159:45"><expr pos:start="3159:27" pos:end="3159:45"><operator pos:start="3159:27" pos:end="3159:27">&amp;</operator><name pos:start="3159:28" pos:end="3159:45">tcg_gen_qemu_ld32s</name></expr></argument>, <argument pos:start="3159:48" pos:end="3159:49"><expr pos:start="3159:48" pos:end="3159:49"><name pos:start="3159:48" pos:end="3159:49">ra</name></expr></argument>, <argument pos:start="3159:52" pos:end="3159:53"><expr pos:start="3159:52" pos:end="3159:53"><name pos:start="3159:52" pos:end="3159:53">rb</name></expr></argument>, <argument pos:start="3159:56" pos:end="3159:61"><expr pos:start="3159:56" pos:end="3159:61"><name pos:start="3159:56" pos:end="3159:61">disp16</name></expr></argument>, <argument pos:start="3159:64" pos:end="3159:64"><expr pos:start="3159:64" pos:end="3159:64"><literal type="number" pos:start="3159:64" pos:end="3159:64">0</literal></expr></argument>, <argument pos:start="3159:67" pos:end="3159:67"><expr pos:start="3159:67" pos:end="3159:67"><literal type="number" pos:start="3159:67" pos:end="3159:67">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3161:9" pos:end="3161:14">break;</break>

    <case pos:start="3163:5" pos:end="3163:14">case <expr pos:start="3163:10" pos:end="3163:13"><literal type="number" pos:start="3163:10" pos:end="3163:13">0x29</literal></expr>:</case>

        <comment type="block" pos:start="3165:9" pos:end="3165:17">/* LDQ */</comment>

        <expr_stmt pos:start="3167:9" pos:end="3167:68"><expr pos:start="3167:9" pos:end="3167:67"><call pos:start="3167:9" pos:end="3167:67"><name pos:start="3167:9" pos:end="3167:20">gen_load_mem</name><argument_list pos:start="3167:21" pos:end="3167:67">(<argument pos:start="3167:22" pos:end="3167:24"><expr pos:start="3167:22" pos:end="3167:24"><name pos:start="3167:22" pos:end="3167:24">ctx</name></expr></argument>, <argument pos:start="3167:27" pos:end="3167:44"><expr pos:start="3167:27" pos:end="3167:44"><operator pos:start="3167:27" pos:end="3167:27">&amp;</operator><name pos:start="3167:28" pos:end="3167:44">tcg_gen_qemu_ld64</name></expr></argument>, <argument pos:start="3167:47" pos:end="3167:48"><expr pos:start="3167:47" pos:end="3167:48"><name pos:start="3167:47" pos:end="3167:48">ra</name></expr></argument>, <argument pos:start="3167:51" pos:end="3167:52"><expr pos:start="3167:51" pos:end="3167:52"><name pos:start="3167:51" pos:end="3167:52">rb</name></expr></argument>, <argument pos:start="3167:55" pos:end="3167:60"><expr pos:start="3167:55" pos:end="3167:60"><name pos:start="3167:55" pos:end="3167:60">disp16</name></expr></argument>, <argument pos:start="3167:63" pos:end="3167:63"><expr pos:start="3167:63" pos:end="3167:63"><literal type="number" pos:start="3167:63" pos:end="3167:63">0</literal></expr></argument>, <argument pos:start="3167:66" pos:end="3167:66"><expr pos:start="3167:66" pos:end="3167:66"><literal type="number" pos:start="3167:66" pos:end="3167:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3169:9" pos:end="3169:14">break;</break>

    <case pos:start="3171:5" pos:end="3171:14">case <expr pos:start="3171:10" pos:end="3171:13"><literal type="number" pos:start="3171:10" pos:end="3171:13">0x2A</literal></expr>:</case>

        <comment type="block" pos:start="3173:9" pos:end="3173:19">/* LDL_L */</comment>

        <expr_stmt pos:start="3175:9" pos:end="3175:65"><expr pos:start="3175:9" pos:end="3175:64"><call pos:start="3175:9" pos:end="3175:64"><name pos:start="3175:9" pos:end="3175:20">gen_load_mem</name><argument_list pos:start="3175:21" pos:end="3175:64">(<argument pos:start="3175:22" pos:end="3175:24"><expr pos:start="3175:22" pos:end="3175:24"><name pos:start="3175:22" pos:end="3175:24">ctx</name></expr></argument>, <argument pos:start="3175:27" pos:end="3175:41"><expr pos:start="3175:27" pos:end="3175:41"><operator pos:start="3175:27" pos:end="3175:27">&amp;</operator><name pos:start="3175:28" pos:end="3175:41">gen_qemu_ldl_l</name></expr></argument>, <argument pos:start="3175:44" pos:end="3175:45"><expr pos:start="3175:44" pos:end="3175:45"><name pos:start="3175:44" pos:end="3175:45">ra</name></expr></argument>, <argument pos:start="3175:48" pos:end="3175:49"><expr pos:start="3175:48" pos:end="3175:49"><name pos:start="3175:48" pos:end="3175:49">rb</name></expr></argument>, <argument pos:start="3175:52" pos:end="3175:57"><expr pos:start="3175:52" pos:end="3175:57"><name pos:start="3175:52" pos:end="3175:57">disp16</name></expr></argument>, <argument pos:start="3175:60" pos:end="3175:60"><expr pos:start="3175:60" pos:end="3175:60"><literal type="number" pos:start="3175:60" pos:end="3175:60">0</literal></expr></argument>, <argument pos:start="3175:63" pos:end="3175:63"><expr pos:start="3175:63" pos:end="3175:63"><literal type="number" pos:start="3175:63" pos:end="3175:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3177:9" pos:end="3177:14">break;</break>

    <case pos:start="3179:5" pos:end="3179:14">case <expr pos:start="3179:10" pos:end="3179:13"><literal type="number" pos:start="3179:10" pos:end="3179:13">0x2B</literal></expr>:</case>

        <comment type="block" pos:start="3181:9" pos:end="3181:19">/* LDQ_L */</comment>

        <expr_stmt pos:start="3183:9" pos:end="3183:65"><expr pos:start="3183:9" pos:end="3183:64"><call pos:start="3183:9" pos:end="3183:64"><name pos:start="3183:9" pos:end="3183:20">gen_load_mem</name><argument_list pos:start="3183:21" pos:end="3183:64">(<argument pos:start="3183:22" pos:end="3183:24"><expr pos:start="3183:22" pos:end="3183:24"><name pos:start="3183:22" pos:end="3183:24">ctx</name></expr></argument>, <argument pos:start="3183:27" pos:end="3183:41"><expr pos:start="3183:27" pos:end="3183:41"><operator pos:start="3183:27" pos:end="3183:27">&amp;</operator><name pos:start="3183:28" pos:end="3183:41">gen_qemu_ldq_l</name></expr></argument>, <argument pos:start="3183:44" pos:end="3183:45"><expr pos:start="3183:44" pos:end="3183:45"><name pos:start="3183:44" pos:end="3183:45">ra</name></expr></argument>, <argument pos:start="3183:48" pos:end="3183:49"><expr pos:start="3183:48" pos:end="3183:49"><name pos:start="3183:48" pos:end="3183:49">rb</name></expr></argument>, <argument pos:start="3183:52" pos:end="3183:57"><expr pos:start="3183:52" pos:end="3183:57"><name pos:start="3183:52" pos:end="3183:57">disp16</name></expr></argument>, <argument pos:start="3183:60" pos:end="3183:60"><expr pos:start="3183:60" pos:end="3183:60"><literal type="number" pos:start="3183:60" pos:end="3183:60">0</literal></expr></argument>, <argument pos:start="3183:63" pos:end="3183:63"><expr pos:start="3183:63" pos:end="3183:63"><literal type="number" pos:start="3183:63" pos:end="3183:63">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3185:9" pos:end="3185:14">break;</break>

    <case pos:start="3187:5" pos:end="3187:14">case <expr pos:start="3187:10" pos:end="3187:13"><literal type="number" pos:start="3187:10" pos:end="3187:13">0x2C</literal></expr>:</case>

        <comment type="block" pos:start="3189:9" pos:end="3189:17">/* STL */</comment>

        <expr_stmt pos:start="3191:9" pos:end="3191:72"><expr pos:start="3191:9" pos:end="3191:71"><call pos:start="3191:9" pos:end="3191:71"><name pos:start="3191:9" pos:end="3191:21">gen_store_mem</name><argument_list pos:start="3191:22" pos:end="3191:71">(<argument pos:start="3191:23" pos:end="3191:25"><expr pos:start="3191:23" pos:end="3191:25"><name pos:start="3191:23" pos:end="3191:25">ctx</name></expr></argument>, <argument pos:start="3191:28" pos:end="3191:45"><expr pos:start="3191:28" pos:end="3191:45"><operator pos:start="3191:28" pos:end="3191:28">&amp;</operator><name pos:start="3191:29" pos:end="3191:45">tcg_gen_qemu_st32</name></expr></argument>, <argument pos:start="3191:48" pos:end="3191:49"><expr pos:start="3191:48" pos:end="3191:49"><name pos:start="3191:48" pos:end="3191:49">ra</name></expr></argument>, <argument pos:start="3191:52" pos:end="3191:53"><expr pos:start="3191:52" pos:end="3191:53"><name pos:start="3191:52" pos:end="3191:53">rb</name></expr></argument>, <argument pos:start="3191:56" pos:end="3191:61"><expr pos:start="3191:56" pos:end="3191:61"><name pos:start="3191:56" pos:end="3191:61">disp16</name></expr></argument>, <argument pos:start="3191:64" pos:end="3191:64"><expr pos:start="3191:64" pos:end="3191:64"><literal type="number" pos:start="3191:64" pos:end="3191:64">0</literal></expr></argument>, <argument pos:start="3191:67" pos:end="3191:67"><expr pos:start="3191:67" pos:end="3191:67"><literal type="number" pos:start="3191:67" pos:end="3191:67">0</literal></expr></argument>, <argument pos:start="3191:70" pos:end="3191:70"><expr pos:start="3191:70" pos:end="3191:70"><literal type="number" pos:start="3191:70" pos:end="3191:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3193:9" pos:end="3193:14">break;</break>

    <case pos:start="3195:5" pos:end="3195:14">case <expr pos:start="3195:10" pos:end="3195:13"><literal type="number" pos:start="3195:10" pos:end="3195:13">0x2D</literal></expr>:</case>

        <comment type="block" pos:start="3197:9" pos:end="3197:17">/* STQ */</comment>

        <expr_stmt pos:start="3199:9" pos:end="3199:72"><expr pos:start="3199:9" pos:end="3199:71"><call pos:start="3199:9" pos:end="3199:71"><name pos:start="3199:9" pos:end="3199:21">gen_store_mem</name><argument_list pos:start="3199:22" pos:end="3199:71">(<argument pos:start="3199:23" pos:end="3199:25"><expr pos:start="3199:23" pos:end="3199:25"><name pos:start="3199:23" pos:end="3199:25">ctx</name></expr></argument>, <argument pos:start="3199:28" pos:end="3199:45"><expr pos:start="3199:28" pos:end="3199:45"><operator pos:start="3199:28" pos:end="3199:28">&amp;</operator><name pos:start="3199:29" pos:end="3199:45">tcg_gen_qemu_st64</name></expr></argument>, <argument pos:start="3199:48" pos:end="3199:49"><expr pos:start="3199:48" pos:end="3199:49"><name pos:start="3199:48" pos:end="3199:49">ra</name></expr></argument>, <argument pos:start="3199:52" pos:end="3199:53"><expr pos:start="3199:52" pos:end="3199:53"><name pos:start="3199:52" pos:end="3199:53">rb</name></expr></argument>, <argument pos:start="3199:56" pos:end="3199:61"><expr pos:start="3199:56" pos:end="3199:61"><name pos:start="3199:56" pos:end="3199:61">disp16</name></expr></argument>, <argument pos:start="3199:64" pos:end="3199:64"><expr pos:start="3199:64" pos:end="3199:64"><literal type="number" pos:start="3199:64" pos:end="3199:64">0</literal></expr></argument>, <argument pos:start="3199:67" pos:end="3199:67"><expr pos:start="3199:67" pos:end="3199:67"><literal type="number" pos:start="3199:67" pos:end="3199:67">0</literal></expr></argument>, <argument pos:start="3199:70" pos:end="3199:70"><expr pos:start="3199:70" pos:end="3199:70"><literal type="number" pos:start="3199:70" pos:end="3199:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3201:9" pos:end="3201:14">break;</break>

    <case pos:start="3203:5" pos:end="3203:14">case <expr pos:start="3203:10" pos:end="3203:13"><literal type="number" pos:start="3203:10" pos:end="3203:13">0x2E</literal></expr>:</case>

        <comment type="block" pos:start="3205:9" pos:end="3205:19">/* STL_C */</comment>

        <expr_stmt pos:start="3207:9" pos:end="3207:69"><expr pos:start="3207:9" pos:end="3207:68"><call pos:start="3207:9" pos:end="3207:68"><name pos:start="3207:9" pos:end="3207:21">gen_store_mem</name><argument_list pos:start="3207:22" pos:end="3207:68">(<argument pos:start="3207:23" pos:end="3207:25"><expr pos:start="3207:23" pos:end="3207:25"><name pos:start="3207:23" pos:end="3207:25">ctx</name></expr></argument>, <argument pos:start="3207:28" pos:end="3207:42"><expr pos:start="3207:28" pos:end="3207:42"><operator pos:start="3207:28" pos:end="3207:28">&amp;</operator><name pos:start="3207:29" pos:end="3207:42">gen_qemu_stl_c</name></expr></argument>, <argument pos:start="3207:45" pos:end="3207:46"><expr pos:start="3207:45" pos:end="3207:46"><name pos:start="3207:45" pos:end="3207:46">ra</name></expr></argument>, <argument pos:start="3207:49" pos:end="3207:50"><expr pos:start="3207:49" pos:end="3207:50"><name pos:start="3207:49" pos:end="3207:50">rb</name></expr></argument>, <argument pos:start="3207:53" pos:end="3207:58"><expr pos:start="3207:53" pos:end="3207:58"><name pos:start="3207:53" pos:end="3207:58">disp16</name></expr></argument>, <argument pos:start="3207:61" pos:end="3207:61"><expr pos:start="3207:61" pos:end="3207:61"><literal type="number" pos:start="3207:61" pos:end="3207:61">0</literal></expr></argument>, <argument pos:start="3207:64" pos:end="3207:64"><expr pos:start="3207:64" pos:end="3207:64"><literal type="number" pos:start="3207:64" pos:end="3207:64">0</literal></expr></argument>, <argument pos:start="3207:67" pos:end="3207:67"><expr pos:start="3207:67" pos:end="3207:67"><literal type="number" pos:start="3207:67" pos:end="3207:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3209:9" pos:end="3209:14">break;</break>

    <case pos:start="3211:5" pos:end="3211:14">case <expr pos:start="3211:10" pos:end="3211:13"><literal type="number" pos:start="3211:10" pos:end="3211:13">0x2F</literal></expr>:</case>

        <comment type="block" pos:start="3213:9" pos:end="3213:19">/* STQ_C */</comment>

        <expr_stmt pos:start="3215:9" pos:end="3215:69"><expr pos:start="3215:9" pos:end="3215:68"><call pos:start="3215:9" pos:end="3215:68"><name pos:start="3215:9" pos:end="3215:21">gen_store_mem</name><argument_list pos:start="3215:22" pos:end="3215:68">(<argument pos:start="3215:23" pos:end="3215:25"><expr pos:start="3215:23" pos:end="3215:25"><name pos:start="3215:23" pos:end="3215:25">ctx</name></expr></argument>, <argument pos:start="3215:28" pos:end="3215:42"><expr pos:start="3215:28" pos:end="3215:42"><operator pos:start="3215:28" pos:end="3215:28">&amp;</operator><name pos:start="3215:29" pos:end="3215:42">gen_qemu_stq_c</name></expr></argument>, <argument pos:start="3215:45" pos:end="3215:46"><expr pos:start="3215:45" pos:end="3215:46"><name pos:start="3215:45" pos:end="3215:46">ra</name></expr></argument>, <argument pos:start="3215:49" pos:end="3215:50"><expr pos:start="3215:49" pos:end="3215:50"><name pos:start="3215:49" pos:end="3215:50">rb</name></expr></argument>, <argument pos:start="3215:53" pos:end="3215:58"><expr pos:start="3215:53" pos:end="3215:58"><name pos:start="3215:53" pos:end="3215:58">disp16</name></expr></argument>, <argument pos:start="3215:61" pos:end="3215:61"><expr pos:start="3215:61" pos:end="3215:61"><literal type="number" pos:start="3215:61" pos:end="3215:61">0</literal></expr></argument>, <argument pos:start="3215:64" pos:end="3215:64"><expr pos:start="3215:64" pos:end="3215:64"><literal type="number" pos:start="3215:64" pos:end="3215:64">0</literal></expr></argument>, <argument pos:start="3215:67" pos:end="3215:67"><expr pos:start="3215:67" pos:end="3215:67"><literal type="number" pos:start="3215:67" pos:end="3215:67">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="3217:9" pos:end="3217:14">break;</break>

    <case pos:start="3219:5" pos:end="3219:14">case <expr pos:start="3219:10" pos:end="3219:13"><literal type="number" pos:start="3219:10" pos:end="3219:13">0x30</literal></expr>:</case>

        <comment type="block" pos:start="3221:9" pos:end="3221:16">/* BR */</comment>

        <if_stmt pos:start="3223:9" pos:end="3225:50"><if pos:start="3223:9" pos:end="3225:50">if <condition pos:start="3223:12" pos:end="3223:21">(<expr pos:start="3223:13" pos:end="3223:20"><name pos:start="3223:13" pos:end="3223:14">ra</name> <operator pos:start="3223:16" pos:end="3223:17">!=</operator> <literal type="number" pos:start="3223:19" pos:end="3223:20">31</literal></expr>)</condition><block type="pseudo" pos:start="3225:13" pos:end="3225:50"><block_content pos:start="3225:13" pos:end="3225:50">

            <expr_stmt pos:start="3225:13" pos:end="3225:50"><expr pos:start="3225:13" pos:end="3225:49"><call pos:start="3225:13" pos:end="3225:49"><name pos:start="3225:13" pos:end="3225:28">tcg_gen_movi_i64</name><argument_list pos:start="3225:29" pos:end="3225:49">(<argument pos:start="3225:30" pos:end="3225:39"><expr pos:start="3225:30" pos:end="3225:39"><name pos:start="3225:30" pos:end="3225:39"><name pos:start="3225:30" pos:end="3225:35">cpu_ir</name><index pos:start="3225:36" pos:end="3225:39">[<expr pos:start="3225:37" pos:end="3225:38"><name pos:start="3225:37" pos:end="3225:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="3225:42" pos:end="3225:48"><expr pos:start="3225:42" pos:end="3225:48"><name pos:start="3225:42" pos:end="3225:48"><name pos:start="3225:42" pos:end="3225:44">ctx</name><operator pos:start="3225:45" pos:end="3225:46">-&gt;</operator><name pos:start="3225:47" pos:end="3225:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3227:9" pos:end="3227:67"><expr pos:start="3227:9" pos:end="3227:66"><call pos:start="3227:9" pos:end="3227:66"><name pos:start="3227:9" pos:end="3227:24">tcg_gen_movi_i64</name><argument_list pos:start="3227:25" pos:end="3227:66">(<argument pos:start="3227:26" pos:end="3227:31"><expr pos:start="3227:26" pos:end="3227:31"><name pos:start="3227:26" pos:end="3227:31">cpu_pc</name></expr></argument>, <argument pos:start="3227:34" pos:end="3227:65"><expr pos:start="3227:34" pos:end="3227:65"><name pos:start="3227:34" pos:end="3227:40"><name pos:start="3227:34" pos:end="3227:36">ctx</name><operator pos:start="3227:37" pos:end="3227:38">-&gt;</operator><name pos:start="3227:39" pos:end="3227:40">pc</name></name> <operator pos:start="3227:42" pos:end="3227:42">+</operator> <operator pos:start="3227:44" pos:end="3227:44">(</operator><name pos:start="3227:45" pos:end="3227:51">int64_t</name><operator pos:start="3227:52" pos:end="3227:52">)</operator><operator pos:start="3227:53" pos:end="3227:53">(</operator><name pos:start="3227:54" pos:end="3227:59">disp21</name> <operator pos:start="3227:61" pos:end="3227:62">&lt;&lt;</operator> <literal type="number" pos:start="3227:64" pos:end="3227:64">2</literal><operator pos:start="3227:65" pos:end="3227:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3229:9" pos:end="3229:16"><expr pos:start="3229:9" pos:end="3229:15"><name pos:start="3229:9" pos:end="3229:11">ret</name> <operator pos:start="3229:13" pos:end="3229:13">=</operator> <literal type="number" pos:start="3229:15" pos:end="3229:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3231:9" pos:end="3231:14">break;</break>

    <case pos:start="3233:5" pos:end="3233:14">case <expr pos:start="3233:10" pos:end="3233:13"><literal type="number" pos:start="3233:10" pos:end="3233:13">0x31</literal></expr>:</case> <comment type="block" pos:start="3233:16" pos:end="3233:25">/* FBEQ */</comment>

    <case pos:start="3235:5" pos:end="3235:14">case <expr pos:start="3235:10" pos:end="3235:13"><literal type="number" pos:start="3235:10" pos:end="3235:13">0x32</literal></expr>:</case> <comment type="block" pos:start="3235:16" pos:end="3235:25">/* FBLT */</comment>

    <case pos:start="3237:5" pos:end="3237:14">case <expr pos:start="3237:10" pos:end="3237:13"><literal type="number" pos:start="3237:10" pos:end="3237:13">0x33</literal></expr>:</case> <comment type="block" pos:start="3237:16" pos:end="3237:25">/* FBLE */</comment>

        <expr_stmt pos:start="3239:9" pos:end="3239:41"><expr pos:start="3239:9" pos:end="3239:40"><call pos:start="3239:9" pos:end="3239:40"><name pos:start="3239:9" pos:end="3239:18">gen_fbcond</name><argument_list pos:start="3239:19" pos:end="3239:40">(<argument pos:start="3239:20" pos:end="3239:22"><expr pos:start="3239:20" pos:end="3239:22"><name pos:start="3239:20" pos:end="3239:22">ctx</name></expr></argument>, <argument pos:start="3239:25" pos:end="3239:27"><expr pos:start="3239:25" pos:end="3239:27"><name pos:start="3239:25" pos:end="3239:27">opc</name></expr></argument>, <argument pos:start="3239:30" pos:end="3239:31"><expr pos:start="3239:30" pos:end="3239:31"><name pos:start="3239:30" pos:end="3239:31">ra</name></expr></argument>, <argument pos:start="3239:34" pos:end="3239:39"><expr pos:start="3239:34" pos:end="3239:39"><name pos:start="3239:34" pos:end="3239:39">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3241:9" pos:end="3241:16"><expr pos:start="3241:9" pos:end="3241:15"><name pos:start="3241:9" pos:end="3241:11">ret</name> <operator pos:start="3241:13" pos:end="3241:13">=</operator> <literal type="number" pos:start="3241:15" pos:end="3241:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3243:9" pos:end="3243:14">break;</break>

    <case pos:start="3245:5" pos:end="3245:14">case <expr pos:start="3245:10" pos:end="3245:13"><literal type="number" pos:start="3245:10" pos:end="3245:13">0x34</literal></expr>:</case>

        <comment type="block" pos:start="3247:9" pos:end="3247:17">/* BSR */</comment>

        <if_stmt pos:start="3249:9" pos:end="3251:50"><if pos:start="3249:9" pos:end="3251:50">if <condition pos:start="3249:12" pos:end="3249:21">(<expr pos:start="3249:13" pos:end="3249:20"><name pos:start="3249:13" pos:end="3249:14">ra</name> <operator pos:start="3249:16" pos:end="3249:17">!=</operator> <literal type="number" pos:start="3249:19" pos:end="3249:20">31</literal></expr>)</condition><block type="pseudo" pos:start="3251:13" pos:end="3251:50"><block_content pos:start="3251:13" pos:end="3251:50">

            <expr_stmt pos:start="3251:13" pos:end="3251:50"><expr pos:start="3251:13" pos:end="3251:49"><call pos:start="3251:13" pos:end="3251:49"><name pos:start="3251:13" pos:end="3251:28">tcg_gen_movi_i64</name><argument_list pos:start="3251:29" pos:end="3251:49">(<argument pos:start="3251:30" pos:end="3251:39"><expr pos:start="3251:30" pos:end="3251:39"><name pos:start="3251:30" pos:end="3251:39"><name pos:start="3251:30" pos:end="3251:35">cpu_ir</name><index pos:start="3251:36" pos:end="3251:39">[<expr pos:start="3251:37" pos:end="3251:38"><name pos:start="3251:37" pos:end="3251:38">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="3251:42" pos:end="3251:48"><expr pos:start="3251:42" pos:end="3251:48"><name pos:start="3251:42" pos:end="3251:48"><name pos:start="3251:42" pos:end="3251:44">ctx</name><operator pos:start="3251:45" pos:end="3251:46">-&gt;</operator><name pos:start="3251:47" pos:end="3251:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="3253:9" pos:end="3253:67"><expr pos:start="3253:9" pos:end="3253:66"><call pos:start="3253:9" pos:end="3253:66"><name pos:start="3253:9" pos:end="3253:24">tcg_gen_movi_i64</name><argument_list pos:start="3253:25" pos:end="3253:66">(<argument pos:start="3253:26" pos:end="3253:31"><expr pos:start="3253:26" pos:end="3253:31"><name pos:start="3253:26" pos:end="3253:31">cpu_pc</name></expr></argument>, <argument pos:start="3253:34" pos:end="3253:65"><expr pos:start="3253:34" pos:end="3253:65"><name pos:start="3253:34" pos:end="3253:40"><name pos:start="3253:34" pos:end="3253:36">ctx</name><operator pos:start="3253:37" pos:end="3253:38">-&gt;</operator><name pos:start="3253:39" pos:end="3253:40">pc</name></name> <operator pos:start="3253:42" pos:end="3253:42">+</operator> <operator pos:start="3253:44" pos:end="3253:44">(</operator><name pos:start="3253:45" pos:end="3253:51">int64_t</name><operator pos:start="3253:52" pos:end="3253:52">)</operator><operator pos:start="3253:53" pos:end="3253:53">(</operator><name pos:start="3253:54" pos:end="3253:59">disp21</name> <operator pos:start="3253:61" pos:end="3253:62">&lt;&lt;</operator> <literal type="number" pos:start="3253:64" pos:end="3253:64">2</literal><operator pos:start="3253:65" pos:end="3253:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3255:9" pos:end="3255:16"><expr pos:start="3255:9" pos:end="3255:15"><name pos:start="3255:9" pos:end="3255:11">ret</name> <operator pos:start="3255:13" pos:end="3255:13">=</operator> <literal type="number" pos:start="3255:15" pos:end="3255:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3257:9" pos:end="3257:14">break;</break>

    <case pos:start="3259:5" pos:end="3259:14">case <expr pos:start="3259:10" pos:end="3259:13"><literal type="number" pos:start="3259:10" pos:end="3259:13">0x35</literal></expr>:</case> <comment type="block" pos:start="3259:16" pos:end="3259:25">/* FBNE */</comment>

    <case pos:start="3261:5" pos:end="3261:14">case <expr pos:start="3261:10" pos:end="3261:13"><literal type="number" pos:start="3261:10" pos:end="3261:13">0x36</literal></expr>:</case> <comment type="block" pos:start="3261:16" pos:end="3261:25">/* FBGE */</comment>

    <case pos:start="3263:5" pos:end="3263:14">case <expr pos:start="3263:10" pos:end="3263:13"><literal type="number" pos:start="3263:10" pos:end="3263:13">0x37</literal></expr>:</case> <comment type="block" pos:start="3263:16" pos:end="3263:25">/* FBGT */</comment>

        <expr_stmt pos:start="3265:9" pos:end="3265:41"><expr pos:start="3265:9" pos:end="3265:40"><call pos:start="3265:9" pos:end="3265:40"><name pos:start="3265:9" pos:end="3265:18">gen_fbcond</name><argument_list pos:start="3265:19" pos:end="3265:40">(<argument pos:start="3265:20" pos:end="3265:22"><expr pos:start="3265:20" pos:end="3265:22"><name pos:start="3265:20" pos:end="3265:22">ctx</name></expr></argument>, <argument pos:start="3265:25" pos:end="3265:27"><expr pos:start="3265:25" pos:end="3265:27"><name pos:start="3265:25" pos:end="3265:27">opc</name></expr></argument>, <argument pos:start="3265:30" pos:end="3265:31"><expr pos:start="3265:30" pos:end="3265:31"><name pos:start="3265:30" pos:end="3265:31">ra</name></expr></argument>, <argument pos:start="3265:34" pos:end="3265:39"><expr pos:start="3265:34" pos:end="3265:39"><name pos:start="3265:34" pos:end="3265:39">disp16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3267:9" pos:end="3267:16"><expr pos:start="3267:9" pos:end="3267:15"><name pos:start="3267:9" pos:end="3267:11">ret</name> <operator pos:start="3267:13" pos:end="3267:13">=</operator> <literal type="number" pos:start="3267:15" pos:end="3267:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3269:9" pos:end="3269:14">break;</break>

    <case pos:start="3271:5" pos:end="3271:14">case <expr pos:start="3271:10" pos:end="3271:13"><literal type="number" pos:start="3271:10" pos:end="3271:13">0x38</literal></expr>:</case>

        <comment type="block" pos:start="3273:9" pos:end="3273:18">/* BLBC */</comment>

        <expr_stmt pos:start="3275:9" pos:end="3275:51"><expr pos:start="3275:9" pos:end="3275:50"><call pos:start="3275:9" pos:end="3275:50"><name pos:start="3275:9" pos:end="3275:17">gen_bcond</name><argument_list pos:start="3275:18" pos:end="3275:50">(<argument pos:start="3275:19" pos:end="3275:21"><expr pos:start="3275:19" pos:end="3275:21"><name pos:start="3275:19" pos:end="3275:21">ctx</name></expr></argument>, <argument pos:start="3275:24" pos:end="3275:34"><expr pos:start="3275:24" pos:end="3275:34"><name pos:start="3275:24" pos:end="3275:34">TCG_COND_EQ</name></expr></argument>, <argument pos:start="3275:37" pos:end="3275:38"><expr pos:start="3275:37" pos:end="3275:38"><name pos:start="3275:37" pos:end="3275:38">ra</name></expr></argument>, <argument pos:start="3275:41" pos:end="3275:46"><expr pos:start="3275:41" pos:end="3275:46"><name pos:start="3275:41" pos:end="3275:46">disp21</name></expr></argument>, <argument pos:start="3275:49" pos:end="3275:49"><expr pos:start="3275:49" pos:end="3275:49"><literal type="number" pos:start="3275:49" pos:end="3275:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3277:9" pos:end="3277:16"><expr pos:start="3277:9" pos:end="3277:15"><name pos:start="3277:9" pos:end="3277:11">ret</name> <operator pos:start="3277:13" pos:end="3277:13">=</operator> <literal type="number" pos:start="3277:15" pos:end="3277:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3279:9" pos:end="3279:14">break;</break>

    <case pos:start="3281:5" pos:end="3281:14">case <expr pos:start="3281:10" pos:end="3281:13"><literal type="number" pos:start="3281:10" pos:end="3281:13">0x39</literal></expr>:</case>

        <comment type="block" pos:start="3283:9" pos:end="3283:17">/* BEQ */</comment>

        <expr_stmt pos:start="3285:9" pos:end="3285:51"><expr pos:start="3285:9" pos:end="3285:50"><call pos:start="3285:9" pos:end="3285:50"><name pos:start="3285:9" pos:end="3285:17">gen_bcond</name><argument_list pos:start="3285:18" pos:end="3285:50">(<argument pos:start="3285:19" pos:end="3285:21"><expr pos:start="3285:19" pos:end="3285:21"><name pos:start="3285:19" pos:end="3285:21">ctx</name></expr></argument>, <argument pos:start="3285:24" pos:end="3285:34"><expr pos:start="3285:24" pos:end="3285:34"><name pos:start="3285:24" pos:end="3285:34">TCG_COND_EQ</name></expr></argument>, <argument pos:start="3285:37" pos:end="3285:38"><expr pos:start="3285:37" pos:end="3285:38"><name pos:start="3285:37" pos:end="3285:38">ra</name></expr></argument>, <argument pos:start="3285:41" pos:end="3285:46"><expr pos:start="3285:41" pos:end="3285:46"><name pos:start="3285:41" pos:end="3285:46">disp21</name></expr></argument>, <argument pos:start="3285:49" pos:end="3285:49"><expr pos:start="3285:49" pos:end="3285:49"><literal type="number" pos:start="3285:49" pos:end="3285:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3287:9" pos:end="3287:16"><expr pos:start="3287:9" pos:end="3287:15"><name pos:start="3287:9" pos:end="3287:11">ret</name> <operator pos:start="3287:13" pos:end="3287:13">=</operator> <literal type="number" pos:start="3287:15" pos:end="3287:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3289:9" pos:end="3289:14">break;</break>

    <case pos:start="3291:5" pos:end="3291:14">case <expr pos:start="3291:10" pos:end="3291:13"><literal type="number" pos:start="3291:10" pos:end="3291:13">0x3A</literal></expr>:</case>

        <comment type="block" pos:start="3293:9" pos:end="3293:17">/* BLT */</comment>

        <expr_stmt pos:start="3295:9" pos:end="3295:51"><expr pos:start="3295:9" pos:end="3295:50"><call pos:start="3295:9" pos:end="3295:50"><name pos:start="3295:9" pos:end="3295:17">gen_bcond</name><argument_list pos:start="3295:18" pos:end="3295:50">(<argument pos:start="3295:19" pos:end="3295:21"><expr pos:start="3295:19" pos:end="3295:21"><name pos:start="3295:19" pos:end="3295:21">ctx</name></expr></argument>, <argument pos:start="3295:24" pos:end="3295:34"><expr pos:start="3295:24" pos:end="3295:34"><name pos:start="3295:24" pos:end="3295:34">TCG_COND_LT</name></expr></argument>, <argument pos:start="3295:37" pos:end="3295:38"><expr pos:start="3295:37" pos:end="3295:38"><name pos:start="3295:37" pos:end="3295:38">ra</name></expr></argument>, <argument pos:start="3295:41" pos:end="3295:46"><expr pos:start="3295:41" pos:end="3295:46"><name pos:start="3295:41" pos:end="3295:46">disp21</name></expr></argument>, <argument pos:start="3295:49" pos:end="3295:49"><expr pos:start="3295:49" pos:end="3295:49"><literal type="number" pos:start="3295:49" pos:end="3295:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3297:9" pos:end="3297:16"><expr pos:start="3297:9" pos:end="3297:15"><name pos:start="3297:9" pos:end="3297:11">ret</name> <operator pos:start="3297:13" pos:end="3297:13">=</operator> <literal type="number" pos:start="3297:15" pos:end="3297:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3299:9" pos:end="3299:14">break;</break>

    <case pos:start="3301:5" pos:end="3301:14">case <expr pos:start="3301:10" pos:end="3301:13"><literal type="number" pos:start="3301:10" pos:end="3301:13">0x3B</literal></expr>:</case>

        <comment type="block" pos:start="3303:9" pos:end="3303:17">/* BLE */</comment>

        <expr_stmt pos:start="3305:9" pos:end="3305:51"><expr pos:start="3305:9" pos:end="3305:50"><call pos:start="3305:9" pos:end="3305:50"><name pos:start="3305:9" pos:end="3305:17">gen_bcond</name><argument_list pos:start="3305:18" pos:end="3305:50">(<argument pos:start="3305:19" pos:end="3305:21"><expr pos:start="3305:19" pos:end="3305:21"><name pos:start="3305:19" pos:end="3305:21">ctx</name></expr></argument>, <argument pos:start="3305:24" pos:end="3305:34"><expr pos:start="3305:24" pos:end="3305:34"><name pos:start="3305:24" pos:end="3305:34">TCG_COND_LE</name></expr></argument>, <argument pos:start="3305:37" pos:end="3305:38"><expr pos:start="3305:37" pos:end="3305:38"><name pos:start="3305:37" pos:end="3305:38">ra</name></expr></argument>, <argument pos:start="3305:41" pos:end="3305:46"><expr pos:start="3305:41" pos:end="3305:46"><name pos:start="3305:41" pos:end="3305:46">disp21</name></expr></argument>, <argument pos:start="3305:49" pos:end="3305:49"><expr pos:start="3305:49" pos:end="3305:49"><literal type="number" pos:start="3305:49" pos:end="3305:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3307:9" pos:end="3307:16"><expr pos:start="3307:9" pos:end="3307:15"><name pos:start="3307:9" pos:end="3307:11">ret</name> <operator pos:start="3307:13" pos:end="3307:13">=</operator> <literal type="number" pos:start="3307:15" pos:end="3307:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3309:9" pos:end="3309:14">break;</break>

    <case pos:start="3311:5" pos:end="3311:14">case <expr pos:start="3311:10" pos:end="3311:13"><literal type="number" pos:start="3311:10" pos:end="3311:13">0x3C</literal></expr>:</case>

        <comment type="block" pos:start="3313:9" pos:end="3313:18">/* BLBS */</comment>

        <expr_stmt pos:start="3315:9" pos:end="3315:51"><expr pos:start="3315:9" pos:end="3315:50"><call pos:start="3315:9" pos:end="3315:50"><name pos:start="3315:9" pos:end="3315:17">gen_bcond</name><argument_list pos:start="3315:18" pos:end="3315:50">(<argument pos:start="3315:19" pos:end="3315:21"><expr pos:start="3315:19" pos:end="3315:21"><name pos:start="3315:19" pos:end="3315:21">ctx</name></expr></argument>, <argument pos:start="3315:24" pos:end="3315:34"><expr pos:start="3315:24" pos:end="3315:34"><name pos:start="3315:24" pos:end="3315:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="3315:37" pos:end="3315:38"><expr pos:start="3315:37" pos:end="3315:38"><name pos:start="3315:37" pos:end="3315:38">ra</name></expr></argument>, <argument pos:start="3315:41" pos:end="3315:46"><expr pos:start="3315:41" pos:end="3315:46"><name pos:start="3315:41" pos:end="3315:46">disp21</name></expr></argument>, <argument pos:start="3315:49" pos:end="3315:49"><expr pos:start="3315:49" pos:end="3315:49"><literal type="number" pos:start="3315:49" pos:end="3315:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3317:9" pos:end="3317:16"><expr pos:start="3317:9" pos:end="3317:15"><name pos:start="3317:9" pos:end="3317:11">ret</name> <operator pos:start="3317:13" pos:end="3317:13">=</operator> <literal type="number" pos:start="3317:15" pos:end="3317:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3319:9" pos:end="3319:14">break;</break>

    <case pos:start="3321:5" pos:end="3321:14">case <expr pos:start="3321:10" pos:end="3321:13"><literal type="number" pos:start="3321:10" pos:end="3321:13">0x3D</literal></expr>:</case>

        <comment type="block" pos:start="3323:9" pos:end="3323:17">/* BNE */</comment>

        <expr_stmt pos:start="3325:9" pos:end="3325:51"><expr pos:start="3325:9" pos:end="3325:50"><call pos:start="3325:9" pos:end="3325:50"><name pos:start="3325:9" pos:end="3325:17">gen_bcond</name><argument_list pos:start="3325:18" pos:end="3325:50">(<argument pos:start="3325:19" pos:end="3325:21"><expr pos:start="3325:19" pos:end="3325:21"><name pos:start="3325:19" pos:end="3325:21">ctx</name></expr></argument>, <argument pos:start="3325:24" pos:end="3325:34"><expr pos:start="3325:24" pos:end="3325:34"><name pos:start="3325:24" pos:end="3325:34">TCG_COND_NE</name></expr></argument>, <argument pos:start="3325:37" pos:end="3325:38"><expr pos:start="3325:37" pos:end="3325:38"><name pos:start="3325:37" pos:end="3325:38">ra</name></expr></argument>, <argument pos:start="3325:41" pos:end="3325:46"><expr pos:start="3325:41" pos:end="3325:46"><name pos:start="3325:41" pos:end="3325:46">disp21</name></expr></argument>, <argument pos:start="3325:49" pos:end="3325:49"><expr pos:start="3325:49" pos:end="3325:49"><literal type="number" pos:start="3325:49" pos:end="3325:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3327:9" pos:end="3327:16"><expr pos:start="3327:9" pos:end="3327:15"><name pos:start="3327:9" pos:end="3327:11">ret</name> <operator pos:start="3327:13" pos:end="3327:13">=</operator> <literal type="number" pos:start="3327:15" pos:end="3327:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3329:9" pos:end="3329:14">break;</break>

    <case pos:start="3331:5" pos:end="3331:14">case <expr pos:start="3331:10" pos:end="3331:13"><literal type="number" pos:start="3331:10" pos:end="3331:13">0x3E</literal></expr>:</case>

        <comment type="block" pos:start="3333:9" pos:end="3333:17">/* BGE */</comment>

        <expr_stmt pos:start="3335:9" pos:end="3335:51"><expr pos:start="3335:9" pos:end="3335:50"><call pos:start="3335:9" pos:end="3335:50"><name pos:start="3335:9" pos:end="3335:17">gen_bcond</name><argument_list pos:start="3335:18" pos:end="3335:50">(<argument pos:start="3335:19" pos:end="3335:21"><expr pos:start="3335:19" pos:end="3335:21"><name pos:start="3335:19" pos:end="3335:21">ctx</name></expr></argument>, <argument pos:start="3335:24" pos:end="3335:34"><expr pos:start="3335:24" pos:end="3335:34"><name pos:start="3335:24" pos:end="3335:34">TCG_COND_GE</name></expr></argument>, <argument pos:start="3335:37" pos:end="3335:38"><expr pos:start="3335:37" pos:end="3335:38"><name pos:start="3335:37" pos:end="3335:38">ra</name></expr></argument>, <argument pos:start="3335:41" pos:end="3335:46"><expr pos:start="3335:41" pos:end="3335:46"><name pos:start="3335:41" pos:end="3335:46">disp21</name></expr></argument>, <argument pos:start="3335:49" pos:end="3335:49"><expr pos:start="3335:49" pos:end="3335:49"><literal type="number" pos:start="3335:49" pos:end="3335:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3337:9" pos:end="3337:16"><expr pos:start="3337:9" pos:end="3337:15"><name pos:start="3337:9" pos:end="3337:11">ret</name> <operator pos:start="3337:13" pos:end="3337:13">=</operator> <literal type="number" pos:start="3337:15" pos:end="3337:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3339:9" pos:end="3339:14">break;</break>

    <case pos:start="3341:5" pos:end="3341:14">case <expr pos:start="3341:10" pos:end="3341:13"><literal type="number" pos:start="3341:10" pos:end="3341:13">0x3F</literal></expr>:</case>

        <comment type="block" pos:start="3343:9" pos:end="3343:17">/* BGT */</comment>

        <expr_stmt pos:start="3345:9" pos:end="3345:51"><expr pos:start="3345:9" pos:end="3345:50"><call pos:start="3345:9" pos:end="3345:50"><name pos:start="3345:9" pos:end="3345:17">gen_bcond</name><argument_list pos:start="3345:18" pos:end="3345:50">(<argument pos:start="3345:19" pos:end="3345:21"><expr pos:start="3345:19" pos:end="3345:21"><name pos:start="3345:19" pos:end="3345:21">ctx</name></expr></argument>, <argument pos:start="3345:24" pos:end="3345:34"><expr pos:start="3345:24" pos:end="3345:34"><name pos:start="3345:24" pos:end="3345:34">TCG_COND_GT</name></expr></argument>, <argument pos:start="3345:37" pos:end="3345:38"><expr pos:start="3345:37" pos:end="3345:38"><name pos:start="3345:37" pos:end="3345:38">ra</name></expr></argument>, <argument pos:start="3345:41" pos:end="3345:46"><expr pos:start="3345:41" pos:end="3345:46"><name pos:start="3345:41" pos:end="3345:46">disp21</name></expr></argument>, <argument pos:start="3345:49" pos:end="3345:49"><expr pos:start="3345:49" pos:end="3345:49"><literal type="number" pos:start="3345:49" pos:end="3345:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3347:9" pos:end="3347:16"><expr pos:start="3347:9" pos:end="3347:15"><name pos:start="3347:9" pos:end="3347:11">ret</name> <operator pos:start="3347:13" pos:end="3347:13">=</operator> <literal type="number" pos:start="3347:15" pos:end="3347:15">1</literal></expr>;</expr_stmt>

        <break pos:start="3349:9" pos:end="3349:14">break;</break>

    <label pos:start="3351:5" pos:end="3351:16"><name pos:start="3351:5" pos:end="3351:15">invalid_opc</name>:</label>

        <expr_stmt pos:start="3353:9" pos:end="3353:25"><expr pos:start="3353:9" pos:end="3353:24"><call pos:start="3353:9" pos:end="3353:24"><name pos:start="3353:9" pos:end="3353:19">gen_invalid</name><argument_list pos:start="3353:20" pos:end="3353:24">(<argument pos:start="3353:21" pos:end="3353:23"><expr pos:start="3353:21" pos:end="3353:23"><name pos:start="3353:21" pos:end="3353:23">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="3355:9" pos:end="3355:16"><expr pos:start="3355:9" pos:end="3355:15"><name pos:start="3355:9" pos:end="3355:11">ret</name> <operator pos:start="3355:13" pos:end="3355:13">=</operator> <literal type="number" pos:start="3355:15" pos:end="3355:15">3</literal></expr>;</expr_stmt>

        <break pos:start="3357:9" pos:end="3357:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="3363:5" pos:end="3363:15">return <expr pos:start="3363:12" pos:end="3363:14"><name pos:start="3363:12" pos:end="3363:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
