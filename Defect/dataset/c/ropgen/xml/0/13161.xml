<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13161.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:25">fdt_build_clock_node</name><parameter_list pos:start="1:26" pos:end="5:48">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:40">host_fdt</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:46">void</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:57">guest_fdt</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:46"><decl pos:start="3:26" pos:end="3:46"><type pos:start="3:26" pos:end="3:46"><name pos:start="3:26" pos:end="3:33">uint32_t</name></type> <name pos:start="3:35" pos:end="3:46">host_phandle</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:47"><decl pos:start="5:26" pos:end="5:47"><type pos:start="5:26" pos:end="5:47"><name pos:start="5:26" pos:end="5:33">uint32_t</name></type> <name pos:start="5:35" pos:end="5:47">guest_phandle</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="91:1">{<block_content pos:start="9:5" pos:end="89:22">

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:19">node_path</name> <init pos:start="9:21" pos:end="9:26">= <expr pos:start="9:23" pos:end="9:26"><name pos:start="9:23" pos:end="9:26">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:18">nodename</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">void</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:17">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:50"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>, <decl pos:start="15:14" pos:end="15:24"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:24">node_offset</name></decl>, <decl pos:start="15:27" pos:end="15:34"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:27" pos:end="15:34">prop_len</name></decl>, <decl pos:start="15:37" pos:end="15:49"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:37" pos:end="15:44">path_len</name> <init pos:start="15:46" pos:end="15:49">= <expr pos:start="15:48" pos:end="15:49"><literal type="number" pos:start="15:48" pos:end="15:49">16</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:69"><expr pos:start="19:5" pos:end="19:68"><name pos:start="19:5" pos:end="19:15">node_offset</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <call pos:start="19:19" pos:end="19:68"><name pos:start="19:19" pos:end="19:44">fdt_node_offset_by_phandle</name><argument_list pos:start="19:45" pos:end="19:68">(<argument pos:start="19:46" pos:end="19:53"><expr pos:start="19:46" pos:end="19:53"><name pos:start="19:46" pos:end="19:53">host_fdt</name></expr></argument>, <argument pos:start="19:56" pos:end="19:67"><expr pos:start="19:56" pos:end="19:67"><name pos:start="19:56" pos:end="19:67">host_phandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:19">node_offset</name> <operator pos:start="21:21" pos:end="21:22">&lt;=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>)</condition> <block pos:start="21:27" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:33">

        <expr_stmt pos:start="23:9" pos:end="27:33"><expr pos:start="23:9" pos:end="27:32"><call pos:start="23:9" pos:end="27:32"><name pos:start="23:9" pos:end="23:18">error_setg</name><argument_list pos:start="23:19" pos:end="27:32">(<argument pos:start="23:20" pos:end="23:31"><expr pos:start="23:20" pos:end="23:31"><operator pos:start="23:20" pos:end="23:20">&amp;</operator><name pos:start="23:21" pos:end="23:31">error_fatal</name></expr></argument>,

                   <argument pos:start="25:20" pos:end="25:75"><expr pos:start="25:20" pos:end="25:75"><literal type="string" pos:start="25:20" pos:end="25:75">"not able to locate clock handle %d in host device tree"</literal></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:31"><expr pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:31">host_phandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:13">node_path</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:34"><name pos:start="31:17" pos:end="31:24">g_malloc</name><argument_list pos:start="31:25" pos:end="31:34">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33">path_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="33:5" pos:end="41:5">while <condition pos:start="33:11" pos:end="35:32">(<expr pos:start="33:12" pos:end="35:31"><operator pos:start="33:12" pos:end="33:12">(</operator><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:17">=</operator> <call pos:start="33:19" pos:end="33:74"><name pos:start="33:19" pos:end="33:30">fdt_get_path</name><argument_list pos:start="33:31" pos:end="33:74">(<argument pos:start="33:32" pos:end="33:39"><expr pos:start="33:32" pos:end="33:39"><name pos:start="33:32" pos:end="33:39">host_fdt</name></expr></argument>, <argument pos:start="33:42" pos:end="33:52"><expr pos:start="33:42" pos:end="33:52"><name pos:start="33:42" pos:end="33:52">node_offset</name></expr></argument>, <argument pos:start="33:55" pos:end="33:63"><expr pos:start="33:55" pos:end="33:63"><name pos:start="33:55" pos:end="33:63">node_path</name></expr></argument>, <argument pos:start="33:66" pos:end="33:73"><expr pos:start="33:66" pos:end="33:73"><name pos:start="33:66" pos:end="33:73">path_len</name></expr></argument>)</argument_list></call><operator pos:start="33:75" pos:end="33:75">)</operator>

            <operator pos:start="35:13" pos:end="35:14">==</operator> <operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:31">FDT_ERR_NOSPACE</name></expr>)</condition> <block pos:start="35:34" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:51">

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:16">path_len</name> <operator pos:start="37:18" pos:end="37:19">+=</operator> <literal type="number" pos:start="37:21" pos:end="37:22">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:51"><expr pos:start="39:9" pos:end="39:50"><name pos:start="39:9" pos:end="39:17">node_path</name> <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:50"><name pos:start="39:21" pos:end="39:29">g_realloc</name><argument_list pos:start="39:30" pos:end="39:50">(<argument pos:start="39:31" pos:end="39:39"><expr pos:start="39:31" pos:end="39:39"><name pos:start="39:31" pos:end="39:39">node_path</name></expr></argument>, <argument pos:start="39:42" pos:end="39:49"><expr pos:start="39:42" pos:end="39:49"><name pos:start="39:42" pos:end="39:49">path_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:16">(<expr pos:start="43:9" pos:end="43:15"><name pos:start="43:9" pos:end="43:11">ret</name> <operator pos:start="43:13" pos:end="43:13">&lt;</operator> <literal type="number" pos:start="43:15" pos:end="43:15">0</literal></expr>)</condition> <block pos:start="43:18" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:33">

        <expr_stmt pos:start="45:9" pos:end="49:33"><expr pos:start="45:9" pos:end="49:32"><call pos:start="45:9" pos:end="49:32"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="49:32">(<argument pos:start="45:20" pos:end="45:31"><expr pos:start="45:20" pos:end="45:31"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:31">error_fatal</name></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:71"><expr pos:start="47:20" pos:end="47:71"><literal type="string" pos:start="47:20" pos:end="47:71">"not able to retrieve node path for clock handle %d"</literal></expr></argument>,

                   <argument pos:start="49:20" pos:end="49:31"><expr pos:start="49:20" pos:end="49:31"><name pos:start="49:20" pos:end="49:31">host_phandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="57:39"><expr pos:start="55:5" pos:end="57:38"><name pos:start="55:5" pos:end="55:5">r</name> <operator pos:start="55:7" pos:end="55:7">=</operator> <call pos:start="55:9" pos:end="57:38"><name pos:start="55:9" pos:end="55:24">qemu_fdt_getprop</name><argument_list pos:start="55:25" pos:end="57:38">(<argument pos:start="55:26" pos:end="55:33"><expr pos:start="55:26" pos:end="55:33"><name pos:start="55:26" pos:end="55:33">host_fdt</name></expr></argument>, <argument pos:start="55:36" pos:end="55:44"><expr pos:start="55:36" pos:end="55:44"><name pos:start="55:36" pos:end="55:44">node_path</name></expr></argument>, <argument pos:start="55:47" pos:end="55:58"><expr pos:start="55:47" pos:end="55:58"><literal type="string" pos:start="55:47" pos:end="55:58">"compatible"</literal></expr></argument>, <argument pos:start="55:61" pos:end="55:69"><expr pos:start="55:61" pos:end="55:69"><operator pos:start="55:61" pos:end="55:61">&amp;</operator><name pos:start="55:62" pos:end="55:69">prop_len</name></expr></argument>,

                         <argument pos:start="57:26" pos:end="57:37"><expr pos:start="57:26" pos:end="57:37"><operator pos:start="57:26" pos:end="57:26">&amp;</operator><name pos:start="57:27" pos:end="57:37">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:33">(<expr pos:start="59:9" pos:end="59:32"><call pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:14">strcmp</name><argument_list pos:start="59:15" pos:end="59:32">(<argument pos:start="59:16" pos:end="59:16"><expr pos:start="59:16" pos:end="59:16"><name pos:start="59:16" pos:end="59:16">r</name></expr></argument>, <argument pos:start="59:19" pos:end="59:31"><expr pos:start="59:19" pos:end="59:31"><literal type="string" pos:start="59:19" pos:end="59:31">"fixed-clock"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:35" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:73">

        <expr_stmt pos:start="61:9" pos:end="63:73"><expr pos:start="61:9" pos:end="63:72"><call pos:start="61:9" pos:end="63:72"><name pos:start="61:9" pos:end="61:18">error_setg</name><argument_list pos:start="61:19" pos:end="63:72">(<argument pos:start="61:20" pos:end="61:31"><expr pos:start="61:20" pos:end="61:31"><operator pos:start="61:20" pos:end="61:20">&amp;</operator><name pos:start="61:21" pos:end="61:31">error_fatal</name></expr></argument>,

                   <argument pos:start="63:20" pos:end="63:57"><expr pos:start="63:20" pos:end="63:57"><literal type="string" pos:start="63:20" pos:end="63:57">"clock handle %d is not a fixed clock"</literal></expr></argument>, <argument pos:start="63:60" pos:end="63:71"><expr pos:start="63:60" pos:end="63:71"><name pos:start="63:60" pos:end="63:71">host_phandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:39"><expr pos:start="69:5" pos:end="69:38"><name pos:start="69:5" pos:end="69:12">nodename</name> <operator pos:start="69:14" pos:end="69:14">=</operator> <call pos:start="69:16" pos:end="69:38"><name pos:start="69:16" pos:end="69:22">strrchr</name><argument_list pos:start="69:23" pos:end="69:38">(<argument pos:start="69:24" pos:end="69:32"><expr pos:start="69:24" pos:end="69:32"><name pos:start="69:24" pos:end="69:32">node_path</name></expr></argument>, <argument pos:start="69:35" pos:end="69:37"><expr pos:start="69:35" pos:end="69:37"><literal type="char" pos:start="69:35" pos:end="69:37">'/'</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:46"><expr pos:start="71:5" pos:end="71:45"><call pos:start="71:5" pos:end="71:45"><name pos:start="71:5" pos:end="71:24">qemu_fdt_add_subnode</name><argument_list pos:start="71:25" pos:end="71:45">(<argument pos:start="71:26" pos:end="71:34"><expr pos:start="71:26" pos:end="71:34"><name pos:start="71:26" pos:end="71:34">guest_fdt</name></expr></argument>, <argument pos:start="71:37" pos:end="71:44"><expr pos:start="71:37" pos:end="71:44"><name pos:start="71:37" pos:end="71:44">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="81:51"><expr pos:start="75:5" pos:end="81:50"><call pos:start="75:5" pos:end="81:50"><name pos:start="75:5" pos:end="75:29">copy_properties_from_host</name><argument_list pos:start="75:30" pos:end="81:50">(<argument pos:start="75:31" pos:end="75:53"><expr pos:start="75:31" pos:end="75:53"><name pos:start="75:31" pos:end="75:53">clock_copied_properties</name></expr></argument>,

                              <argument pos:start="77:31" pos:end="77:65"><expr pos:start="77:31" pos:end="77:65"><call pos:start="77:31" pos:end="77:65"><name pos:start="77:31" pos:end="77:40">ARRAY_SIZE</name><argument_list pos:start="77:41" pos:end="77:65">(<argument pos:start="77:42" pos:end="77:64"><expr pos:start="77:42" pos:end="77:64"><name pos:start="77:42" pos:end="77:64">clock_copied_properties</name></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="79:31" pos:end="79:38"><expr pos:start="79:31" pos:end="79:38"><name pos:start="79:31" pos:end="79:38">host_fdt</name></expr></argument>, <argument pos:start="79:41" pos:end="79:49"><expr pos:start="79:41" pos:end="79:49"><name pos:start="79:41" pos:end="79:49">guest_fdt</name></expr></argument>,

                              <argument pos:start="81:31" pos:end="81:39"><expr pos:start="81:31" pos:end="81:39"><name pos:start="81:31" pos:end="81:39">node_path</name></expr></argument>, <argument pos:start="81:42" pos:end="81:49"><expr pos:start="81:42" pos:end="81:49"><name pos:start="81:42" pos:end="81:49">nodename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:73"><expr pos:start="85:5" pos:end="85:72"><call pos:start="85:5" pos:end="85:72"><name pos:start="85:5" pos:end="85:25">qemu_fdt_setprop_cell</name><argument_list pos:start="85:26" pos:end="85:72">(<argument pos:start="85:27" pos:end="85:35"><expr pos:start="85:27" pos:end="85:35"><name pos:start="85:27" pos:end="85:35">guest_fdt</name></expr></argument>, <argument pos:start="85:38" pos:end="85:45"><expr pos:start="85:38" pos:end="85:45"><name pos:start="85:38" pos:end="85:45">nodename</name></expr></argument>, <argument pos:start="85:48" pos:end="85:56"><expr pos:start="85:48" pos:end="85:56"><literal type="string" pos:start="85:48" pos:end="85:56">"phandle"</literal></expr></argument>, <argument pos:start="85:59" pos:end="85:71"><expr pos:start="85:59" pos:end="85:71"><name pos:start="85:59" pos:end="85:71">guest_phandle</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:22"><expr pos:start="89:5" pos:end="89:21"><call pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:10">g_free</name><argument_list pos:start="89:11" pos:end="89:21">(<argument pos:start="89:12" pos:end="89:20"><expr pos:start="89:12" pos:end="89:20"><name pos:start="89:12" pos:end="89:20">node_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
