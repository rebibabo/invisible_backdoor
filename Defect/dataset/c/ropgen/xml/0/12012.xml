<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12012.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">mov_read_trun</name><parameter_list pos:start="1:25" pos:end="1:72">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:35">MOVContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">c</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">ByteIOContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">pb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">MOVAtom</name></type> <name pos:start="1:68" pos:end="1:71">atom</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">MOVFragment</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:21">frag</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:36"><name pos:start="5:26" pos:end="5:26">c</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:36">fragment</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name> <init pos:start="7:18" pos:end="7:23">= <expr pos:start="7:20" pos:end="7:23"><name pos:start="7:20" pos:end="7:23">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">MOVStreamContext</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">sc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint64_t</name></type> <name pos:start="11:14" pos:end="11:19">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">dts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:19">data_offset</name> <init pos:start="15:21" pos:end="15:23">= <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:55"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">unsigned</name></type> <name pos:start="17:14" pos:end="17:20">entries</name></decl>, <decl pos:start="17:23" pos:end="17:54"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:23" pos:end="17:40">first_sample_flags</name> <init pos:start="17:42" pos:end="17:54">= <expr pos:start="17:44" pos:end="17:54"><name pos:start="17:44" pos:end="17:54"><name pos:start="17:44" pos:end="17:47">frag</name><operator pos:start="17:48" pos:end="17:49">-&gt;</operator><name pos:start="17:50" pos:end="17:54">flags</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:13"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">flags</name></decl>, <decl pos:start="19:16" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:16" pos:end="19:23">distance</name></decl>, <decl pos:start="19:26" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:26" pos:end="19:26">i</name></decl>;</decl_stmt>



    <for pos:start="23:5" pos:end="33:5">for <control pos:start="23:9" pos:end="23:43">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">i</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:38"><expr pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:17">i</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:37"><name pos:start="23:21" pos:end="23:21">c</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:25">fc</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:37">nb_streams</name></name></expr>;</condition> <incr pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:40">i</name><operator pos:start="23:41" pos:end="23:42">++</operator></expr></incr>)</control> <block pos:start="23:45" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:9">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:52">(<expr pos:start="25:13" pos:end="25:51"><name pos:start="25:13" pos:end="25:29"><name pos:start="25:13" pos:end="25:13">c</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:17">fc</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:26">streams</name><index pos:start="25:27" pos:end="25:29">[<expr pos:start="25:28" pos:end="25:28"><name pos:start="25:28" pos:end="25:28">i</name></expr>]</index></name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:33">id</name> <operator pos:start="25:35" pos:end="25:36">==</operator> <name pos:start="25:38" pos:end="25:51"><name pos:start="25:38" pos:end="25:41">frag</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:51">track_id</name></name></expr>)</condition> <block pos:start="25:54" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:18">

            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:14">st</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <name pos:start="27:18" pos:end="27:34"><name pos:start="27:18" pos:end="27:18">c</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:22">fc</name><operator pos:start="27:23" pos:end="27:24">-&gt;</operator><name pos:start="27:25" pos:end="27:31">streams</name><index pos:start="27:32" pos:end="27:34">[<expr pos:start="27:33" pos:end="27:33"><name pos:start="27:33" pos:end="27:33">i</name></expr>]</index></name></expr>;</expr_stmt>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:12">(<expr pos:start="35:9" pos:end="35:11"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:11">st</name></expr>)</condition> <block pos:start="35:14" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:18">

        <expr_stmt pos:start="37:9" pos:end="37:98"><expr pos:start="37:9" pos:end="37:97"><call pos:start="37:9" pos:end="37:97"><name pos:start="37:9" pos:end="37:14">av_log</name><argument_list pos:start="37:15" pos:end="37:97">(<argument pos:start="37:16" pos:end="37:20"><expr pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:20"><name pos:start="37:16" pos:end="37:16">c</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:20">fc</name></name></expr></argument>, <argument pos:start="37:23" pos:end="37:34"><expr pos:start="37:23" pos:end="37:34"><name pos:start="37:23" pos:end="37:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="37:37" pos:end="37:80"><expr pos:start="37:37" pos:end="37:80"><literal type="string" pos:start="37:37" pos:end="37:80">"could not find corresponding track id %d\n"</literal></expr></argument>, <argument pos:start="37:83" pos:end="37:96"><expr pos:start="37:83" pos:end="37:96"><name pos:start="37:83" pos:end="37:96"><name pos:start="37:83" pos:end="37:86">frag</name><operator pos:start="37:87" pos:end="37:88">-&gt;</operator><name pos:start="37:89" pos:end="37:96">track_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:23"><expr pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:6">sc</name> <operator pos:start="43:8" pos:end="43:8">=</operator> <name pos:start="43:10" pos:end="43:22"><name pos:start="43:10" pos:end="43:11">st</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">priv_data</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="47:17"><if pos:start="45:5" pos:end="47:17">if <condition pos:start="45:8" pos:end="45:48">(<expr pos:start="45:9" pos:end="45:47"><name pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:10">sc</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:28">pseudo_stream_id</name></name><operator pos:start="45:29" pos:end="45:29">+</operator><literal type="number" pos:start="45:30" pos:end="45:30">1</literal> <operator pos:start="45:32" pos:end="45:33">!=</operator> <name pos:start="45:35" pos:end="45:47"><name pos:start="45:35" pos:end="45:38">frag</name><operator pos:start="45:39" pos:end="45:40">-&gt;</operator><name pos:start="45:41" pos:end="45:47">stsd_id</name></name></expr>)</condition><block type="pseudo" pos:start="47:9" pos:end="47:17"><block_content pos:start="47:9" pos:end="47:17">

        <return pos:start="47:9" pos:end="47:17">return <expr pos:start="47:16" pos:end="47:16"><literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:17"><expr pos:start="49:5" pos:end="49:16"><call pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:12">get_byte</name><argument_list pos:start="49:13" pos:end="49:16">(<argument pos:start="49:14" pos:end="49:15"><expr pos:start="49:14" pos:end="49:15"><name pos:start="49:14" pos:end="49:15">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:19" pos:end="49:31">/* version */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:25"><expr pos:start="51:5" pos:end="51:24"><name pos:start="51:5" pos:end="51:9">flags</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:24"><name pos:start="51:13" pos:end="51:20">get_be24</name><argument_list pos:start="51:21" pos:end="51:24">(<argument pos:start="51:22" pos:end="51:23"><expr pos:start="51:22" pos:end="51:23"><name pos:start="51:22" pos:end="51:23">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:27"><expr pos:start="53:5" pos:end="53:26"><name pos:start="53:5" pos:end="53:11">entries</name> <operator pos:start="53:13" pos:end="53:13">=</operator> <call pos:start="53:15" pos:end="53:26"><name pos:start="53:15" pos:end="53:22">get_be32</name><argument_list pos:start="53:23" pos:end="53:26">(<argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><name pos:start="53:24" pos:end="53:25">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:62"><expr pos:start="55:5" pos:end="55:61"><call pos:start="55:5" pos:end="55:61"><name pos:start="55:5" pos:end="55:11">dprintf</name><argument_list pos:start="55:12" pos:end="55:61">(<argument pos:start="55:13" pos:end="55:17"><expr pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:13">c</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:17">fc</name></name></expr></argument>, <argument pos:start="55:20" pos:end="55:44"><expr pos:start="55:20" pos:end="55:44"><literal type="string" pos:start="55:20" pos:end="55:44">"flags 0x%x entries %d\n"</literal></expr></argument>, <argument pos:start="55:47" pos:end="55:51"><expr pos:start="55:47" pos:end="55:51"><name pos:start="55:47" pos:end="55:51">flags</name></expr></argument>, <argument pos:start="55:54" pos:end="55:60"><expr pos:start="55:54" pos:end="55:60"><name pos:start="55:54" pos:end="55:60">entries</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="57:57"><if pos:start="57:5" pos:end="57:57">if <condition pos:start="57:8" pos:end="57:22">(<expr pos:start="57:9" pos:end="57:21"><name pos:start="57:9" pos:end="57:13">flags</name> <operator pos:start="57:15" pos:end="57:15">&amp;</operator> <literal type="number" pos:start="57:17" pos:end="57:21">0x001</literal></expr>)</condition><block type="pseudo" pos:start="57:24" pos:end="57:57"><block_content pos:start="57:24" pos:end="57:57"> <expr_stmt pos:start="57:24" pos:end="57:57"><expr pos:start="57:24" pos:end="57:56"><name pos:start="57:24" pos:end="57:34">data_offset</name>        <operator pos:start="57:43" pos:end="57:43">=</operator> <call pos:start="57:45" pos:end="57:56"><name pos:start="57:45" pos:end="57:52">get_be32</name><argument_list pos:start="57:53" pos:end="57:56">(<argument pos:start="57:54" pos:end="57:55"><expr pos:start="57:54" pos:end="57:55"><name pos:start="57:54" pos:end="57:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="59:5" pos:end="59:57"><if pos:start="59:5" pos:end="59:57">if <condition pos:start="59:8" pos:end="59:22">(<expr pos:start="59:9" pos:end="59:21"><name pos:start="59:9" pos:end="59:13">flags</name> <operator pos:start="59:15" pos:end="59:15">&amp;</operator> <literal type="number" pos:start="59:17" pos:end="59:21">0x004</literal></expr>)</condition><block type="pseudo" pos:start="59:24" pos:end="59:57"><block_content pos:start="59:24" pos:end="59:57"> <expr_stmt pos:start="59:24" pos:end="59:57"><expr pos:start="59:24" pos:end="59:56"><name pos:start="59:24" pos:end="59:41">first_sample_flags</name> <operator pos:start="59:43" pos:end="59:43">=</operator> <call pos:start="59:45" pos:end="59:56"><name pos:start="59:45" pos:end="59:52">get_be32</name><argument_list pos:start="59:53" pos:end="59:56">(<argument pos:start="59:54" pos:end="59:55"><expr pos:start="59:54" pos:end="59:55"><name pos:start="59:54" pos:end="59:55">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="61:5" pos:end="79:5"><if pos:start="61:5" pos:end="79:5">if <condition pos:start="61:8" pos:end="61:22">(<expr pos:start="61:9" pos:end="61:21"><name pos:start="61:9" pos:end="61:13">flags</name> <operator pos:start="61:15" pos:end="61:15">&amp;</operator> <literal type="number" pos:start="61:17" pos:end="61:21">0x800</literal></expr>)</condition> <block pos:start="61:24" pos:end="79:5">{<block_content pos:start="63:9" pos:end="77:34">

        <decl_stmt pos:start="63:9" pos:end="63:27"><decl pos:start="63:9" pos:end="63:26"><type pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:15">MOVStts</name> <modifier pos:start="63:17" pos:end="63:17">*</modifier></type><name pos:start="63:18" pos:end="63:26">ctts_data</name></decl>;</decl_stmt>

        <if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:80">(<expr pos:start="65:13" pos:end="65:79"><operator pos:start="65:13" pos:end="65:13">(</operator><name pos:start="65:14" pos:end="65:21">uint64_t</name><operator pos:start="65:22" pos:end="65:22">)</operator><name pos:start="65:23" pos:end="65:29">entries</name><operator pos:start="65:30" pos:end="65:30">+</operator><name pos:start="65:31" pos:end="65:44"><name pos:start="65:31" pos:end="65:32">sc</name><operator pos:start="65:33" pos:end="65:34">-&gt;</operator><name pos:start="65:35" pos:end="65:44">ctts_count</name></name> <operator pos:start="65:46" pos:end="65:47">&gt;=</operator> <name pos:start="65:49" pos:end="65:56">UINT_MAX</name><operator pos:start="65:57" pos:end="65:57">/</operator><sizeof pos:start="65:58" pos:end="65:79">sizeof<argument_list pos:start="65:64" pos:end="65:79">(<argument pos:start="65:65" pos:end="65:78"><expr pos:start="65:65" pos:end="65:78"><operator pos:start="65:65" pos:end="65:65">*</operator><name pos:start="65:66" pos:end="65:78"><name pos:start="65:66" pos:end="65:67">sc</name><operator pos:start="65:68" pos:end="65:69">-&gt;</operator><name pos:start="65:70" pos:end="65:78">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

            <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><operator pos:start="67:20" pos:end="67:20">-</operator><literal type="number" pos:start="67:21" pos:end="67:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:80"><expr pos:start="69:9" pos:end="71:79"><name pos:start="69:9" pos:end="69:17">ctts_data</name> <operator pos:start="69:19" pos:end="69:19">=</operator> <call pos:start="69:21" pos:end="71:79"><name pos:start="69:21" pos:end="69:30">av_realloc</name><argument_list pos:start="69:31" pos:end="71:79">(<argument pos:start="69:32" pos:end="69:44"><expr pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:44"><name pos:start="69:32" pos:end="69:33">sc</name><operator pos:start="69:34" pos:end="69:35">-&gt;</operator><name pos:start="69:36" pos:end="69:44">ctts_data</name></name></expr></argument>,

                               <argument pos:start="71:32" pos:end="71:78"><expr pos:start="71:32" pos:end="71:78"><operator pos:start="71:32" pos:end="71:32">(</operator><name pos:start="71:33" pos:end="71:39">entries</name><operator pos:start="71:40" pos:end="71:40">+</operator><name pos:start="71:41" pos:end="71:54"><name pos:start="71:41" pos:end="71:42">sc</name><operator pos:start="71:43" pos:end="71:44">-&gt;</operator><name pos:start="71:45" pos:end="71:54">ctts_count</name></name><operator pos:start="71:55" pos:end="71:55">)</operator><operator pos:start="71:56" pos:end="71:56">*</operator><sizeof pos:start="71:57" pos:end="71:78">sizeof<argument_list pos:start="71:63" pos:end="71:78">(<argument pos:start="71:64" pos:end="71:77"><expr pos:start="71:64" pos:end="71:77"><operator pos:start="71:64" pos:end="71:64">*</operator><name pos:start="71:65" pos:end="71:77"><name pos:start="71:65" pos:end="71:66">sc</name><operator pos:start="71:67" pos:end="71:68">-&gt;</operator><name pos:start="71:69" pos:end="71:77">ctts_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="75:35"><if pos:start="73:9" pos:end="75:35">if <condition pos:start="73:12" pos:end="73:23">(<expr pos:start="73:13" pos:end="73:22"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:22">ctts_data</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:35"><block_content pos:start="75:13" pos:end="75:35">

            <return pos:start="75:13" pos:end="75:35">return <expr pos:start="75:20" pos:end="75:34"><call pos:start="75:20" pos:end="75:34"><name pos:start="75:20" pos:end="75:26">AVERROR</name><argument_list pos:start="75:27" pos:end="75:34">(<argument pos:start="75:28" pos:end="75:33"><expr pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:21"><name pos:start="77:9" pos:end="77:10">sc</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:21">ctts_data</name></name> <operator pos:start="77:23" pos:end="77:23">=</operator> <name pos:start="77:25" pos:end="77:33">ctts_data</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:7">dts</name> <operator pos:start="81:9" pos:end="81:9">=</operator> <name pos:start="81:11" pos:end="81:22"><name pos:start="81:11" pos:end="81:12">st</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:22">duration</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:50"><expr pos:start="83:5" pos:end="83:49"><name pos:start="83:5" pos:end="83:10">offset</name> <operator pos:start="83:12" pos:end="83:12">=</operator> <name pos:start="83:14" pos:end="83:35"><name pos:start="83:14" pos:end="83:17">frag</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:35">base_data_offset</name></name> <operator pos:start="83:37" pos:end="83:37">+</operator> <name pos:start="83:39" pos:end="83:49">data_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:17"><expr pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:12">distance</name> <operator pos:start="85:14" pos:end="85:14">=</operator> <literal type="number" pos:start="85:16" pos:end="85:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:68"><expr pos:start="87:5" pos:end="87:67"><call pos:start="87:5" pos:end="87:67"><name pos:start="87:5" pos:end="87:11">dprintf</name><argument_list pos:start="87:12" pos:end="87:67">(<argument pos:start="87:13" pos:end="87:17"><expr pos:start="87:13" pos:end="87:17"><name pos:start="87:13" pos:end="87:17"><name pos:start="87:13" pos:end="87:13">c</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:17">fc</name></name></expr></argument>, <argument pos:start="87:20" pos:end="87:46"><expr pos:start="87:20" pos:end="87:46"><literal type="string" pos:start="87:20" pos:end="87:46">"first sample flags 0x%x\n"</literal></expr></argument>, <argument pos:start="87:49" pos:end="87:66"><expr pos:start="87:49" pos:end="87:66"><name pos:start="87:49" pos:end="87:66">first_sample_flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="89:5" pos:end="141:5">for <control pos:start="89:9" pos:end="89:33">(<init pos:start="89:10" pos:end="89:15"><expr pos:start="89:10" pos:end="89:14"><name pos:start="89:10" pos:end="89:10">i</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <literal type="number" pos:start="89:14" pos:end="89:14">0</literal></expr>;</init> <condition pos:start="89:17" pos:end="89:28"><expr pos:start="89:17" pos:end="89:27"><name pos:start="89:17" pos:end="89:17">i</name> <operator pos:start="89:19" pos:end="89:19">&lt;</operator> <name pos:start="89:21" pos:end="89:27">entries</name></expr>;</condition> <incr pos:start="89:30" pos:end="89:32"><expr pos:start="89:30" pos:end="89:32"><name pos:start="89:30" pos:end="89:30">i</name><operator pos:start="89:31" pos:end="89:32">++</operator></expr></incr>)</control> <block pos:start="89:35" pos:end="141:5">{<block_content pos:start="91:9" pos:end="139:30">

        <decl_stmt pos:start="91:9" pos:end="91:42"><decl pos:start="91:9" pos:end="91:41"><type pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:16">unsigned</name></type> <name pos:start="91:18" pos:end="91:28">sample_size</name> <init pos:start="91:30" pos:end="91:41">= <expr pos:start="91:32" pos:end="91:41"><name pos:start="91:32" pos:end="91:41"><name pos:start="91:32" pos:end="91:35">frag</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:41">size</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="93:9" pos:end="93:64"><decl pos:start="93:9" pos:end="93:63"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:24">sample_flags</name> <init pos:start="93:26" pos:end="93:63">= <expr pos:start="93:28" pos:end="93:63"><ternary pos:start="93:28" pos:end="93:63"><condition pos:start="93:28" pos:end="93:30"><expr pos:start="93:28" pos:end="93:28"><name pos:start="93:28" pos:end="93:28">i</name></expr> ?</condition><then pos:start="93:32" pos:end="93:42"> <expr pos:start="93:32" pos:end="93:42"><name pos:start="93:32" pos:end="93:42"><name pos:start="93:32" pos:end="93:35">frag</name><operator pos:start="93:36" pos:end="93:37">-&gt;</operator><name pos:start="93:38" pos:end="93:42">flags</name></name></expr> </then><else pos:start="93:44" pos:end="93:63">: <expr pos:start="93:46" pos:end="93:63"><name pos:start="93:46" pos:end="93:63">first_sample_flags</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:50"><decl pos:start="95:9" pos:end="95:49"><type pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:16">unsigned</name></type> <name pos:start="95:18" pos:end="95:32">sample_duration</name> <init pos:start="95:34" pos:end="95:49">= <expr pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:49"><name pos:start="95:36" pos:end="95:39">frag</name><operator pos:start="95:40" pos:end="95:41">-&gt;</operator><name pos:start="95:42" pos:end="95:49">duration</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:21"><decl pos:start="97:9" pos:end="97:20"><type pos:start="97:9" pos:end="97:11"><name pos:start="97:9" pos:end="97:11">int</name></type> <name pos:start="97:13" pos:end="97:20">keyframe</name></decl>;</decl_stmt>



        <if_stmt pos:start="101:9" pos:end="101:58"><if pos:start="101:9" pos:end="101:58">if <condition pos:start="101:12" pos:end="101:26">(<expr pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:17">flags</name> <operator pos:start="101:19" pos:end="101:19">&amp;</operator> <literal type="number" pos:start="101:21" pos:end="101:25">0x100</literal></expr>)</condition><block type="pseudo" pos:start="101:28" pos:end="101:58"><block_content pos:start="101:28" pos:end="101:58"> <expr_stmt pos:start="101:28" pos:end="101:58"><expr pos:start="101:28" pos:end="101:57"><name pos:start="101:28" pos:end="101:42">sample_duration</name> <operator pos:start="101:44" pos:end="101:44">=</operator> <call pos:start="101:46" pos:end="101:57"><name pos:start="101:46" pos:end="101:53">get_be32</name><argument_list pos:start="101:54" pos:end="101:57">(<argument pos:start="101:55" pos:end="101:56"><expr pos:start="101:55" pos:end="101:56"><name pos:start="101:55" pos:end="101:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="103:9" pos:end="103:58"><if pos:start="103:9" pos:end="103:58">if <condition pos:start="103:12" pos:end="103:26">(<expr pos:start="103:13" pos:end="103:25"><name pos:start="103:13" pos:end="103:17">flags</name> <operator pos:start="103:19" pos:end="103:19">&amp;</operator> <literal type="number" pos:start="103:21" pos:end="103:25">0x200</literal></expr>)</condition><block type="pseudo" pos:start="103:28" pos:end="103:58"><block_content pos:start="103:28" pos:end="103:58"> <expr_stmt pos:start="103:28" pos:end="103:58"><expr pos:start="103:28" pos:end="103:57"><name pos:start="103:28" pos:end="103:38">sample_size</name>     <operator pos:start="103:44" pos:end="103:44">=</operator> <call pos:start="103:46" pos:end="103:57"><name pos:start="103:46" pos:end="103:53">get_be32</name><argument_list pos:start="103:54" pos:end="103:57">(<argument pos:start="103:55" pos:end="103:56"><expr pos:start="103:55" pos:end="103:56"><name pos:start="103:55" pos:end="103:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="105:58"><if pos:start="105:9" pos:end="105:58">if <condition pos:start="105:12" pos:end="105:26">(<expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:17">flags</name> <operator pos:start="105:19" pos:end="105:19">&amp;</operator> <literal type="number" pos:start="105:21" pos:end="105:25">0x400</literal></expr>)</condition><block type="pseudo" pos:start="105:28" pos:end="105:58"><block_content pos:start="105:28" pos:end="105:58"> <expr_stmt pos:start="105:28" pos:end="105:58"><expr pos:start="105:28" pos:end="105:57"><name pos:start="105:28" pos:end="105:39">sample_flags</name>    <operator pos:start="105:44" pos:end="105:44">=</operator> <call pos:start="105:46" pos:end="105:57"><name pos:start="105:46" pos:end="105:53">get_be32</name><argument_list pos:start="105:54" pos:end="105:57">(<argument pos:start="105:55" pos:end="105:56"><expr pos:start="105:55" pos:end="105:56"><name pos:start="105:55" pos:end="105:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="115:9"><if pos:start="107:9" pos:end="115:9">if <condition pos:start="107:12" pos:end="107:26">(<expr pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:17">flags</name> <operator pos:start="107:19" pos:end="107:19">&amp;</operator> <literal type="number" pos:start="107:21" pos:end="107:25">0x800</literal></expr>)</condition> <block pos:start="107:28" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:29">

            <expr_stmt pos:start="109:13" pos:end="109:52"><expr pos:start="109:13" pos:end="109:51"><name pos:start="109:13" pos:end="109:41"><name pos:start="109:13" pos:end="109:14">sc</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:25">ctts_data</name><index pos:start="109:26" pos:end="109:41">[<expr pos:start="109:27" pos:end="109:40"><name pos:start="109:27" pos:end="109:40"><name pos:start="109:27" pos:end="109:28">sc</name><operator pos:start="109:29" pos:end="109:30">-&gt;</operator><name pos:start="109:31" pos:end="109:40">ctts_count</name></name></expr>]</index></name><operator pos:start="109:42" pos:end="109:42">.</operator><name pos:start="109:43" pos:end="109:47">count</name> <operator pos:start="109:49" pos:end="109:49">=</operator> <literal type="number" pos:start="109:51" pos:end="109:51">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:66"><expr pos:start="111:13" pos:end="111:65"><name pos:start="111:13" pos:end="111:41"><name pos:start="111:13" pos:end="111:14">sc</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:25">ctts_data</name><index pos:start="111:26" pos:end="111:41">[<expr pos:start="111:27" pos:end="111:40"><name pos:start="111:27" pos:end="111:40"><name pos:start="111:27" pos:end="111:28">sc</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:40">ctts_count</name></name></expr>]</index></name><operator pos:start="111:42" pos:end="111:42">.</operator><name pos:start="111:43" pos:end="111:50">duration</name> <operator pos:start="111:52" pos:end="111:52">=</operator> <call pos:start="111:54" pos:end="111:65"><name pos:start="111:54" pos:end="111:61">get_be32</name><argument_list pos:start="111:62" pos:end="111:65">(<argument pos:start="111:63" pos:end="111:64"><expr pos:start="111:63" pos:end="111:64"><name pos:start="111:63" pos:end="111:64">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:29"><expr pos:start="113:13" pos:end="113:28"><name pos:start="113:13" pos:end="113:26"><name pos:start="113:13" pos:end="113:14">sc</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:26">ctts_count</name></name><operator pos:start="113:27" pos:end="113:28">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="117:9" pos:end="121:25"><if pos:start="117:9" pos:end="121:25">if <condition pos:start="117:12" pos:end="119:81">(<expr pos:start="117:13" pos:end="119:80"><operator pos:start="117:13" pos:end="117:13">(</operator><name pos:start="117:14" pos:end="117:21">keyframe</name> <operator pos:start="117:23" pos:end="117:23">=</operator> <name pos:start="117:25" pos:end="117:45"><name pos:start="117:25" pos:end="117:26">st</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:33">codec</name><operator pos:start="117:34" pos:end="117:35">-&gt;</operator><name pos:start="117:36" pos:end="117:45">codec_type</name></name> <operator pos:start="117:47" pos:end="117:48">==</operator> <name pos:start="117:50" pos:end="117:65">CODEC_TYPE_AUDIO</name> <operator pos:start="117:67" pos:end="117:68">||</operator>

             <operator pos:start="119:14" pos:end="119:14">(</operator><name pos:start="119:15" pos:end="119:19">flags</name> <operator pos:start="119:21" pos:end="119:21">&amp;</operator> <literal type="number" pos:start="119:23" pos:end="119:27">0x004</literal> <operator pos:start="119:29" pos:end="119:30">&amp;&amp;</operator> <operator pos:start="119:32" pos:end="119:32">!</operator><name pos:start="119:33" pos:end="119:33">i</name> <operator pos:start="119:35" pos:end="119:36">&amp;&amp;</operator> <operator pos:start="119:38" pos:end="119:38">!</operator><name pos:start="119:39" pos:end="119:50">sample_flags</name><operator pos:start="119:51" pos:end="119:51">)</operator> <operator pos:start="119:53" pos:end="119:54">||</operator> <name pos:start="119:56" pos:end="119:67">sample_flags</name> <operator pos:start="119:69" pos:end="119:69">&amp;</operator> <literal type="number" pos:start="119:71" pos:end="119:79">0x2000000</literal><operator pos:start="119:80" pos:end="119:80">)</operator></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:25"><block_content pos:start="121:13" pos:end="121:25">

            <expr_stmt pos:start="121:13" pos:end="121:25"><expr pos:start="121:13" pos:end="121:24"><name pos:start="121:13" pos:end="121:20">distance</name> <operator pos:start="121:22" pos:end="121:22">=</operator> <literal type="number" pos:start="121:24" pos:end="121:24">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="125:60"><expr pos:start="123:9" pos:end="125:59"><call pos:start="123:9" pos:end="125:59"><name pos:start="123:9" pos:end="123:26">av_add_index_entry</name><argument_list pos:start="123:27" pos:end="125:59">(<argument pos:start="123:28" pos:end="123:29"><expr pos:start="123:28" pos:end="123:29"><name pos:start="123:28" pos:end="123:29">st</name></expr></argument>, <argument pos:start="123:32" pos:end="123:37"><expr pos:start="123:32" pos:end="123:37"><name pos:start="123:32" pos:end="123:37">offset</name></expr></argument>, <argument pos:start="123:40" pos:end="123:42"><expr pos:start="123:40" pos:end="123:42"><name pos:start="123:40" pos:end="123:42">dts</name></expr></argument>, <argument pos:start="123:45" pos:end="123:55"><expr pos:start="123:45" pos:end="123:55"><name pos:start="123:45" pos:end="123:55">sample_size</name></expr></argument>, <argument pos:start="123:58" pos:end="123:65"><expr pos:start="123:58" pos:end="123:65"><name pos:start="123:58" pos:end="123:65">distance</name></expr></argument>,

                           <argument pos:start="125:28" pos:end="125:58"><expr pos:start="125:28" pos:end="125:58"><ternary pos:start="125:28" pos:end="125:58"><condition pos:start="125:28" pos:end="125:37"><expr pos:start="125:28" pos:end="125:35"><name pos:start="125:28" pos:end="125:35">keyframe</name></expr> ?</condition><then pos:start="125:39" pos:end="125:54"> <expr pos:start="125:39" pos:end="125:54"><name pos:start="125:39" pos:end="125:54">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="125:56" pos:end="125:58">: <expr pos:start="125:58" pos:end="125:58"><literal type="number" pos:start="125:58" pos:end="125:58">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="131:62"><expr pos:start="127:9" pos:end="131:61"><call pos:start="127:9" pos:end="131:61"><name pos:start="127:9" pos:end="127:15">dprintf</name><argument_list pos:start="127:16" pos:end="131:61">(<argument pos:start="127:17" pos:end="127:21"><expr pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:21"><name pos:start="127:17" pos:end="127:17">c</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:21">fc</name></name></expr></argument>, <argument pos:start="127:24" pos:end="129:53"><expr pos:start="127:24" pos:end="129:53"><literal type="string" pos:start="127:24" pos:end="127:63">"AVIndex stream %d, sample %d, offset %"</literal><name pos:start="127:64" pos:end="127:69">PRIx64</name><literal type="string" pos:start="127:70" pos:end="127:78">", dts %"</literal><name pos:start="127:79" pos:end="127:84">PRId64</name><literal type="string" pos:start="127:85" pos:end="127:88">", "</literal>

                <literal type="string" pos:start="129:17" pos:end="129:53">"size %d, distance %d, keyframe %d\n"</literal></expr></argument>, <argument pos:start="129:56" pos:end="129:64"><expr pos:start="129:56" pos:end="129:64"><name pos:start="129:56" pos:end="129:64"><name pos:start="129:56" pos:end="129:57">st</name><operator pos:start="129:58" pos:end="129:59">-&gt;</operator><name pos:start="129:60" pos:end="129:64">index</name></name></expr></argument>, <argument pos:start="129:67" pos:end="129:84"><expr pos:start="129:67" pos:end="129:84"><name pos:start="129:67" pos:end="129:82"><name pos:start="129:67" pos:end="129:68">sc</name><operator pos:start="129:69" pos:end="129:70">-&gt;</operator><name pos:start="129:71" pos:end="129:82">sample_count</name></name><operator pos:start="129:83" pos:end="129:83">+</operator><name pos:start="129:84" pos:end="129:84">i</name></expr></argument>,

                <argument pos:start="131:17" pos:end="131:22"><expr pos:start="131:17" pos:end="131:22"><name pos:start="131:17" pos:end="131:22">offset</name></expr></argument>, <argument pos:start="131:25" pos:end="131:27"><expr pos:start="131:25" pos:end="131:27"><name pos:start="131:25" pos:end="131:27">dts</name></expr></argument>, <argument pos:start="131:30" pos:end="131:40"><expr pos:start="131:30" pos:end="131:40"><name pos:start="131:30" pos:end="131:40">sample_size</name></expr></argument>, <argument pos:start="131:43" pos:end="131:50"><expr pos:start="131:43" pos:end="131:50"><name pos:start="131:43" pos:end="131:50">distance</name></expr></argument>, <argument pos:start="131:53" pos:end="131:60"><expr pos:start="131:53" pos:end="131:60"><name pos:start="131:53" pos:end="131:60">keyframe</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:19"><expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:16">distance</name><operator pos:start="133:17" pos:end="133:18">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:53"><expr pos:start="135:9" pos:end="135:52"><call pos:start="135:9" pos:end="135:52"><name pos:start="135:9" pos:end="135:14">assert</name><argument_list pos:start="135:15" pos:end="135:52">(<argument pos:start="135:16" pos:end="135:51"><expr pos:start="135:16" pos:end="135:51"><name pos:start="135:16" pos:end="135:30">sample_duration</name> <operator pos:start="135:32" pos:end="135:32">%</operator> <name pos:start="135:34" pos:end="135:46"><name pos:start="135:34" pos:end="135:35">sc</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:46">time_rate</name></name> <operator pos:start="135:48" pos:end="135:49">==</operator> <literal type="number" pos:start="135:51" pos:end="135:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:47"><expr pos:start="137:9" pos:end="137:46"><name pos:start="137:9" pos:end="137:11">dts</name> <operator pos:start="137:13" pos:end="137:14">+=</operator> <name pos:start="137:16" pos:end="137:30">sample_duration</name> <operator pos:start="137:32" pos:end="137:32">/</operator> <name pos:start="137:34" pos:end="137:46"><name pos:start="137:34" pos:end="137:35">sc</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:46">time_rate</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:14">offset</name> <operator pos:start="139:16" pos:end="139:17">+=</operator> <name pos:start="139:19" pos:end="139:29">sample_size</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="143:5" pos:end="143:31"><expr pos:start="143:5" pos:end="143:30"><name pos:start="143:5" pos:end="143:21"><name pos:start="143:5" pos:end="143:8">frag</name><operator pos:start="143:9" pos:end="143:10">-&gt;</operator><name pos:start="143:11" pos:end="143:21">moof_offset</name></name> <operator pos:start="143:23" pos:end="143:23">=</operator> <name pos:start="143:25" pos:end="143:30">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:44"><expr pos:start="145:5" pos:end="145:43"><name pos:start="145:5" pos:end="145:20"><name pos:start="145:5" pos:end="145:6">sc</name><operator pos:start="145:7" pos:end="145:8">-&gt;</operator><name pos:start="145:9" pos:end="145:20">sample_count</name></name> <operator pos:start="145:22" pos:end="145:22">=</operator> <name pos:start="145:24" pos:end="145:43"><name pos:start="145:24" pos:end="145:25">st</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:43">nb_index_entries</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:23"><expr pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:16"><name pos:start="147:5" pos:end="147:6">st</name><operator pos:start="147:7" pos:end="147:8">-&gt;</operator><name pos:start="147:9" pos:end="147:16">duration</name></name> <operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:22">dts</name></expr>;</expr_stmt>

    <return pos:start="149:5" pos:end="149:13">return <expr pos:start="149:12" pos:end="149:12"><literal type="number" pos:start="149:12" pos:end="149:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
