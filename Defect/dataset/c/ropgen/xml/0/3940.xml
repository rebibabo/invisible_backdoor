<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3940.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:16"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">KVMSlot</name> <modifier pos:start="1:16" pos:end="1:16">*</modifier></type><name pos:start="1:17" pos:end="1:30">kvm_alloc_slot</name><parameter_list pos:start="1:31" pos:end="1:43">(<parameter pos:start="1:32" pos:end="1:42"><decl pos:start="1:32" pos:end="1:42"><type pos:start="1:32" pos:end="1:41"><name pos:start="1:32" pos:end="1:39">KVMState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:12">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="21:5">for <control pos:start="9:9" pos:end="9:46">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">i</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:41"><expr pos:start="9:17" pos:end="9:40"><name pos:start="9:17" pos:end="9:17">i</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <call pos:start="9:21" pos:end="9:40"><name pos:start="9:21" pos:end="9:30">ARRAY_SIZE</name><argument_list pos:start="9:31" pos:end="9:40">(<argument pos:start="9:32" pos:end="9:39"><expr pos:start="9:32" pos:end="9:39"><name pos:start="9:32" pos:end="9:39"><name pos:start="9:32" pos:end="9:32">s</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:39">slots</name></name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="9:43" pos:end="9:45"><expr pos:start="9:43" pos:end="9:45"><name pos:start="9:43" pos:end="9:43">i</name><operator pos:start="9:44" pos:end="9:45">++</operator></expr></incr>)</control> <block pos:start="9:48" pos:end="21:5">{<block_content pos:start="13:9" pos:end="19:32">

        <comment type="block" pos:start="11:9" pos:end="11:38">/* KVM private memory slots */</comment>

        <if_stmt pos:start="13:9" pos:end="15:21"><if pos:start="13:9" pos:end="15:21">if <condition pos:start="13:12" pos:end="13:29">(<expr pos:start="13:13" pos:end="13:28"><name pos:start="13:13" pos:end="13:13">i</name> <operator pos:start="13:15" pos:end="13:16">&gt;=</operator> <literal type="number" pos:start="13:18" pos:end="13:18">8</literal> <operator pos:start="13:20" pos:end="13:21">&amp;&amp;</operator> <name pos:start="13:23" pos:end="13:23">i</name> <operator pos:start="13:25" pos:end="13:25">&lt;</operator> <literal type="number" pos:start="13:27" pos:end="13:28">12</literal></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:21"><block_content pos:start="15:13" pos:end="15:21">

            <continue pos:start="15:13" pos:end="15:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="19:32"><if pos:start="17:9" pos:end="19:32">if <condition pos:start="17:12" pos:end="17:41">(<expr pos:start="17:13" pos:end="17:40"><name pos:start="17:13" pos:end="17:23"><name pos:start="17:13" pos:end="17:13">s</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">slots</name><index pos:start="17:21" pos:end="17:23">[<expr pos:start="17:22" pos:end="17:22"><name pos:start="17:22" pos:end="17:22">i</name></expr>]</index></name><operator pos:start="17:24" pos:end="17:24">.</operator><name pos:start="17:25" pos:end="17:35">memory_size</name> <operator pos:start="17:37" pos:end="17:38">==</operator> <literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:32"><block_content pos:start="19:13" pos:end="19:32">

            <return pos:start="19:13" pos:end="19:32">return <expr pos:start="19:20" pos:end="19:31"><operator pos:start="19:20" pos:end="19:20">&amp;</operator><name pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:28">slots</name><index pos:start="19:29" pos:end="19:31">[<expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">i</name></expr>]</index></name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="25:5" pos:end="25:62"><expr pos:start="25:5" pos:end="25:61"><call pos:start="25:5" pos:end="25:61"><name pos:start="25:5" pos:end="25:11">fprintf</name><argument_list pos:start="25:12" pos:end="25:61">(<argument pos:start="25:13" pos:end="25:18"><expr pos:start="25:13" pos:end="25:18"><name pos:start="25:13" pos:end="25:18">stderr</name></expr></argument>, <argument pos:start="25:21" pos:end="25:50"><expr pos:start="25:21" pos:end="25:50"><literal type="string" pos:start="25:21" pos:end="25:50">"%s: no free slot available\n"</literal></expr></argument>, <argument pos:start="25:53" pos:end="25:60"><expr pos:start="25:53" pos:end="25:60"><name pos:start="25:53" pos:end="25:60">__func__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:12"><expr pos:start="27:5" pos:end="27:11"><call pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:9">abort</name><argument_list pos:start="27:10" pos:end="27:11">()</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
