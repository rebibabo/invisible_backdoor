<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2070.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">BusState</name> <modifier pos:start="1:17" pos:end="1:17">*</modifier></type><name pos:start="1:18" pos:end="1:36">qbus_find_recursive</name><parameter_list pos:start="1:37" pos:end="3:57">(<parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:45">BusState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:50">bus</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:62">char</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">name</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:56"><decl pos:start="3:38" pos:end="3:56"><type pos:start="3:38" pos:end="3:56"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:50">BusInfo</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier></type><name pos:start="3:53" pos:end="3:56">info</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="53:1">{<block_content pos:start="7:5" pos:end="51:16">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">BusState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:19">child</name></decl>, <decl pos:start="9:22" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:14"><modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">match</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:47">(<expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:12">name</name> <operator pos:start="15:14" pos:end="15:15">&amp;&amp;</operator> <operator pos:start="15:17" pos:end="15:17">(</operator><call pos:start="15:18" pos:end="15:40"><name pos:start="15:18" pos:end="15:23">strcmp</name><argument_list pos:start="15:24" pos:end="15:40">(<argument pos:start="15:25" pos:end="15:33"><expr pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:33"><name pos:start="15:25" pos:end="15:27">bus</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:33">name</name></name></expr></argument>, <argument pos:start="15:36" pos:end="15:39"><expr pos:start="15:36" pos:end="15:39"><name pos:start="15:36" pos:end="15:39">name</name></expr></argument>)</argument_list></call> <operator pos:start="15:42" pos:end="15:43">!=</operator> <literal type="number" pos:start="15:45" pos:end="15:45">0</literal><operator pos:start="15:46" pos:end="15:46">)</operator></expr>)</condition> <block pos:start="15:49" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:18">

        <expr_stmt pos:start="17:9" pos:end="17:18"><expr pos:start="17:9" pos:end="17:17"><name pos:start="17:9" pos:end="17:13">match</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:36">(<expr pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:12">info</name> <operator pos:start="21:14" pos:end="21:15">&amp;&amp;</operator> <operator pos:start="21:17" pos:end="21:17">(</operator><name pos:start="21:18" pos:end="21:26"><name pos:start="21:18" pos:end="21:20">bus</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:26">info</name></name> <operator pos:start="21:28" pos:end="21:29">!=</operator> <name pos:start="21:31" pos:end="21:34">info</name><operator pos:start="21:35" pos:end="21:35">)</operator></expr>)</condition> <block pos:start="21:38" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:18">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:13">match</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <literal type="number" pos:start="23:17" pos:end="23:17">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:14">(<expr pos:start="27:9" pos:end="27:13"><name pos:start="27:9" pos:end="27:13">match</name></expr>)</condition> <block pos:start="27:16" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">bus</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <macro pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:16">LIST_FOREACH</name><argument_list pos:start="35:17" pos:end="35:46">(<argument pos:start="35:18" pos:end="35:20">dev</argument>, <argument pos:start="35:23" pos:end="35:36">&amp;bus-&gt;children</argument>, <argument pos:start="35:39" pos:end="35:45">sibling</argument>)</argument_list></macro> <block pos:start="35:48" pos:end="49:5">{<block_content pos:start="37:9" pos:end="47:9">

        <macro pos:start="37:9" pos:end="37:53"><name pos:start="37:9" pos:end="37:20">LIST_FOREACH</name><argument_list pos:start="37:21" pos:end="37:53">(<argument pos:start="37:22" pos:end="37:26">child</argument>, <argument pos:start="37:29" pos:end="37:43">&amp;dev-&gt;child_bus</argument>, <argument pos:start="37:46" pos:end="37:52">sibling</argument>)</argument_list></macro> <block pos:start="37:55" pos:end="47:9">{<block_content pos:start="39:13" pos:end="45:13">

            <expr_stmt pos:start="39:13" pos:end="39:57"><expr pos:start="39:13" pos:end="39:56"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">=</operator> <call pos:start="39:19" pos:end="39:56"><name pos:start="39:19" pos:end="39:37">qbus_find_recursive</name><argument_list pos:start="39:38" pos:end="39:56">(<argument pos:start="39:39" pos:end="39:43"><expr pos:start="39:39" pos:end="39:43"><name pos:start="39:39" pos:end="39:43">child</name></expr></argument>, <argument pos:start="39:46" pos:end="39:49"><expr pos:start="39:46" pos:end="39:49"><name pos:start="39:46" pos:end="39:49">name</name></expr></argument>, <argument pos:start="39:52" pos:end="39:55"><expr pos:start="39:52" pos:end="39:55"><name pos:start="39:52" pos:end="39:55">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="41:13" pos:end="45:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:20">(<expr pos:start="41:17" pos:end="41:19"><name pos:start="41:17" pos:end="41:19">ret</name></expr>)</condition> <block pos:start="41:22" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:27">

                <return pos:start="43:17" pos:end="43:27">return <expr pos:start="43:24" pos:end="43:26"><name pos:start="43:24" pos:end="43:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

    </block_content>}</block>

    <return pos:start="51:5" pos:end="51:16">return <expr pos:start="51:12" pos:end="51:15"><name pos:start="51:12" pos:end="51:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
