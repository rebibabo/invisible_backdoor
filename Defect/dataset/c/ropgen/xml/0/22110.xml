<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22110.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">oss_open</name> <parameter_list pos:start="1:21" pos:end="3:54">(<parameter pos:start="1:22" pos:end="1:27"><decl pos:start="1:22" pos:end="1:27"><type pos:start="1:22" pos:end="1:27"><name pos:start="1:22" pos:end="1:24">int</name></type> <name pos:start="1:26" pos:end="1:27">in</name></decl></parameter>, <parameter pos:start="1:30" pos:end="1:51"><decl pos:start="1:30" pos:end="1:51"><type pos:start="1:30" pos:end="1:51"><name pos:start="1:30" pos:end="1:46"><name pos:start="1:30" pos:end="1:35">struct</name> <name pos:start="1:37" pos:end="1:46">oss_params</name></name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">req</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:43"><decl pos:start="3:22" pos:end="3:43"><type pos:start="3:22" pos:end="3:43"><name pos:start="3:22" pos:end="3:38"><name pos:start="3:22" pos:end="3:27">struct</name> <name pos:start="3:29" pos:end="3:38">oss_params</name></name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:43">obt</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:53"><decl pos:start="3:46" pos:end="3:53"><type pos:start="3:46" pos:end="3:53"><name pos:start="3:46" pos:end="3:48">int</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">pfd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="177:1">{<block_content pos:start="7:5" pos:end="175:14">

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">fd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:14">oflags</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">mmmmssss</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:18">audio_buf_info</name></type> <name pos:start="13:20" pos:end="13:25">abinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">fmt</name></decl>, <decl pos:start="15:14" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:17">freq</name></decl>, <decl pos:start="15:20" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:28">nchannels</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:66"><decl pos:start="17:5" pos:end="17:65"><type pos:start="17:5" pos:end="17:16"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:14">char</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">dspname</name> <init pos:start="17:25" pos:end="17:65">= <expr pos:start="17:27" pos:end="17:65"><ternary pos:start="17:27" pos:end="17:65"><condition pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:28"><name pos:start="17:27" pos:end="17:28">in</name></expr> ?</condition><then pos:start="17:32" pos:end="17:46"> <expr pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:46"><name pos:start="17:32" pos:end="17:35">conf</name><operator pos:start="17:36" pos:end="17:36">.</operator><name pos:start="17:37" pos:end="17:46">devpath_in</name></name></expr> </then><else pos:start="17:48" pos:end="17:65">: <expr pos:start="17:50" pos:end="17:65"><name pos:start="17:50" pos:end="17:65"><name pos:start="17:50" pos:end="17:53">conf</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:65">devpath_out</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:41"><decl pos:start="19:5" pos:end="19:40"><type pos:start="19:5" pos:end="19:16"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:14">char</name> <modifier pos:start="19:16" pos:end="19:16">*</modifier></type><name pos:start="19:17" pos:end="19:19">typ</name> <init pos:start="19:21" pos:end="19:40">= <expr pos:start="19:23" pos:end="19:40"><ternary pos:start="19:23" pos:end="19:40"><condition pos:start="19:23" pos:end="19:26"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">in</name></expr> ?</condition><then pos:start="19:28" pos:end="19:32"> <expr pos:start="19:28" pos:end="19:32"><literal type="string" pos:start="19:28" pos:end="19:32">"ADC"</literal></expr> </then><else pos:start="19:34" pos:end="19:40">: <expr pos:start="19:36" pos:end="19:40"><literal type="string" pos:start="19:36" pos:end="19:40">"DAC"</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:53">/* Kludge needed to have working mmap on Linux */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:65"><expr pos:start="25:5" pos:end="25:64"><name pos:start="25:5" pos:end="25:10">oflags</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <ternary pos:start="25:14" pos:end="25:64"><condition pos:start="25:14" pos:end="25:28"><expr pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:17">conf</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:26">try_mmap</name></name></expr> ?</condition><then pos:start="25:30" pos:end="25:35"> <expr pos:start="25:30" pos:end="25:35"><name pos:start="25:30" pos:end="25:35">O_RDWR</name></expr> </then><else pos:start="25:37" pos:end="25:64">: <expr pos:start="25:39" pos:end="25:64"><operator pos:start="25:39" pos:end="25:39">(</operator><ternary pos:start="25:40" pos:end="25:63"><condition pos:start="25:40" pos:end="25:43"><expr pos:start="25:40" pos:end="25:41"><name pos:start="25:40" pos:end="25:41">in</name></expr> ?</condition><then pos:start="25:45" pos:end="25:52"> <expr pos:start="25:45" pos:end="25:52"><name pos:start="25:45" pos:end="25:52">O_RDONLY</name></expr> </then><else pos:start="25:54" pos:end="25:63">: <expr pos:start="25:56" pos:end="25:63"><name pos:start="25:56" pos:end="25:63">O_WRONLY</name></expr></else></ternary><operator pos:start="25:64" pos:end="25:64">)</operator></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:6">fd</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:44"><name pos:start="27:10" pos:end="27:13">open</name> <argument_list pos:start="27:15" pos:end="27:44">(<argument pos:start="27:16" pos:end="27:22"><expr pos:start="27:16" pos:end="27:22"><name pos:start="27:16" pos:end="27:22">dspname</name></expr></argument>, <argument pos:start="27:25" pos:end="27:43"><expr pos:start="27:25" pos:end="27:43"><name pos:start="27:25" pos:end="27:30">oflags</name> <operator pos:start="27:32" pos:end="27:32">|</operator> <name pos:start="27:34" pos:end="27:43">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><operator pos:start="29:9" pos:end="29:9">-</operator><literal type="number" pos:start="29:10" pos:end="29:10">1</literal> <operator pos:start="29:12" pos:end="29:13">==</operator> <name pos:start="29:15" pos:end="29:16">fd</name></expr>)</condition> <block pos:start="29:19" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:67"><expr pos:start="31:9" pos:end="31:66"><call pos:start="31:9" pos:end="31:66"><name pos:start="31:9" pos:end="31:19">oss_logerr2</name> <argument_list pos:start="31:21" pos:end="31:66">(<argument pos:start="31:22" pos:end="31:26"><expr pos:start="31:22" pos:end="31:26"><name pos:start="31:22" pos:end="31:26">errno</name></expr></argument>, <argument pos:start="31:29" pos:end="31:31"><expr pos:start="31:29" pos:end="31:31"><name pos:start="31:29" pos:end="31:31">typ</name></expr></argument>, <argument pos:start="31:34" pos:end="31:56"><expr pos:start="31:34" pos:end="31:56"><literal type="string" pos:start="31:34" pos:end="31:56">"Failed to open `%s'\n"</literal></expr></argument>, <argument pos:start="31:59" pos:end="31:65"><expr pos:start="31:59" pos:end="31:65"><name pos:start="31:59" pos:end="31:65">dspname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:21"><expr pos:start="39:5" pos:end="39:20"><name pos:start="39:5" pos:end="39:8">freq</name> <operator pos:start="39:10" pos:end="39:10">=</operator> <name pos:start="39:12" pos:end="39:20"><name pos:start="39:12" pos:end="39:14">req</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">freq</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:13">nchannels</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <name pos:start="41:17" pos:end="41:30"><name pos:start="41:17" pos:end="41:19">req</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:30">nchannels</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:7">fmt</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <name pos:start="43:11" pos:end="43:18"><name pos:start="43:11" pos:end="43:13">req</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:18">fmt</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:48">(<expr pos:start="47:9" pos:end="47:47"><call pos:start="47:9" pos:end="47:47"><name pos:start="47:9" pos:end="47:13">ioctl</name> <argument_list pos:start="47:15" pos:end="47:47">(<argument pos:start="47:16" pos:end="47:17"><expr pos:start="47:16" pos:end="47:17"><name pos:start="47:16" pos:end="47:17">fd</name></expr></argument>, <argument pos:start="47:20" pos:end="47:40"><expr pos:start="47:20" pos:end="47:40"><name pos:start="47:20" pos:end="47:40">SNDCTL_DSP_SAMPLESIZE</name></expr></argument>, <argument pos:start="47:43" pos:end="47:46"><expr pos:start="47:43" pos:end="47:46"><operator pos:start="47:43" pos:end="47:43">&amp;</operator><name pos:start="47:44" pos:end="47:46">fmt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="47:50" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:17">

        <expr_stmt pos:start="49:9" pos:end="49:77"><expr pos:start="49:9" pos:end="49:76"><call pos:start="49:9" pos:end="49:76"><name pos:start="49:9" pos:end="49:19">oss_logerr2</name> <argument_list pos:start="49:21" pos:end="49:76">(<argument pos:start="49:22" pos:end="49:26"><expr pos:start="49:22" pos:end="49:26"><name pos:start="49:22" pos:end="49:26">errno</name></expr></argument>, <argument pos:start="49:29" pos:end="49:31"><expr pos:start="49:29" pos:end="49:31"><name pos:start="49:29" pos:end="49:31">typ</name></expr></argument>, <argument pos:start="49:34" pos:end="49:65"><expr pos:start="49:34" pos:end="49:65"><literal type="string" pos:start="49:34" pos:end="49:65">"Failed to set sample size %d\n"</literal></expr></argument>, <argument pos:start="49:68" pos:end="49:75"><expr pos:start="49:68" pos:end="49:75"><name pos:start="49:68" pos:end="49:75"><name pos:start="49:68" pos:end="49:70">req</name><operator pos:start="49:71" pos:end="49:72">-&gt;</operator><name pos:start="49:73" pos:end="49:75">fmt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:17">goto <name pos:start="51:14" pos:end="51:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="65:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:52">(<expr pos:start="57:9" pos:end="57:51"><call pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:13">ioctl</name> <argument_list pos:start="57:15" pos:end="57:51">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">fd</name></expr></argument>, <argument pos:start="57:20" pos:end="57:38"><expr pos:start="57:20" pos:end="57:38"><name pos:start="57:20" pos:end="57:38">SNDCTL_DSP_CHANNELS</name></expr></argument>, <argument pos:start="57:41" pos:end="57:50"><expr pos:start="57:41" pos:end="57:50"><operator pos:start="57:41" pos:end="57:41">&amp;</operator><name pos:start="57:42" pos:end="57:50">nchannels</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:54" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:17">

        <expr_stmt pos:start="59:9" pos:end="61:37"><expr pos:start="59:9" pos:end="61:36"><call pos:start="59:9" pos:end="61:36"><name pos:start="59:9" pos:end="59:19">oss_logerr2</name> <argument_list pos:start="59:21" pos:end="61:36">(<argument pos:start="59:22" pos:end="59:26"><expr pos:start="59:22" pos:end="59:26"><name pos:start="59:22" pos:end="59:26">errno</name></expr></argument>, <argument pos:start="59:29" pos:end="59:31"><expr pos:start="59:29" pos:end="59:31"><name pos:start="59:29" pos:end="59:31">typ</name></expr></argument>, <argument pos:start="59:34" pos:end="59:72"><expr pos:start="59:34" pos:end="59:72"><literal type="string" pos:start="59:34" pos:end="59:72">"Failed to set number of channels %d\n"</literal></expr></argument>,

                     <argument pos:start="61:22" pos:end="61:35"><expr pos:start="61:22" pos:end="61:35"><name pos:start="61:22" pos:end="61:35"><name pos:start="61:22" pos:end="61:24">req</name><operator pos:start="61:25" pos:end="61:26">-&gt;</operator><name pos:start="61:27" pos:end="61:35">nchannels</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="63:9" pos:end="63:17">goto <name pos:start="63:14" pos:end="63:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:44">(<expr pos:start="69:9" pos:end="69:43"><call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:13">ioctl</name> <argument_list pos:start="69:15" pos:end="69:43">(<argument pos:start="69:16" pos:end="69:17"><expr pos:start="69:16" pos:end="69:17"><name pos:start="69:16" pos:end="69:17">fd</name></expr></argument>, <argument pos:start="69:20" pos:end="69:35"><expr pos:start="69:20" pos:end="69:35"><name pos:start="69:20" pos:end="69:35">SNDCTL_DSP_SPEED</name></expr></argument>, <argument pos:start="69:38" pos:end="69:42"><expr pos:start="69:38" pos:end="69:42"><operator pos:start="69:38" pos:end="69:38">&amp;</operator><name pos:start="69:39" pos:end="69:42">freq</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="69:46" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:17">

        <expr_stmt pos:start="71:9" pos:end="71:76"><expr pos:start="71:9" pos:end="71:75"><call pos:start="71:9" pos:end="71:75"><name pos:start="71:9" pos:end="71:19">oss_logerr2</name> <argument_list pos:start="71:21" pos:end="71:75">(<argument pos:start="71:22" pos:end="71:26"><expr pos:start="71:22" pos:end="71:26"><name pos:start="71:22" pos:end="71:26">errno</name></expr></argument>, <argument pos:start="71:29" pos:end="71:31"><expr pos:start="71:29" pos:end="71:31"><name pos:start="71:29" pos:end="71:31">typ</name></expr></argument>, <argument pos:start="71:34" pos:end="71:63"><expr pos:start="71:34" pos:end="71:63"><literal type="string" pos:start="71:34" pos:end="71:63">"Failed to set frequency %d\n"</literal></expr></argument>, <argument pos:start="71:66" pos:end="71:74"><expr pos:start="71:66" pos:end="71:74"><name pos:start="71:66" pos:end="71:74"><name pos:start="71:66" pos:end="71:68">req</name><operator pos:start="71:69" pos:end="71:70">-&gt;</operator><name pos:start="71:71" pos:end="71:74">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:46">(<expr pos:start="79:9" pos:end="79:45"><call pos:start="79:9" pos:end="79:45"><name pos:start="79:9" pos:end="79:13">ioctl</name> <argument_list pos:start="79:15" pos:end="79:45">(<argument pos:start="79:16" pos:end="79:17"><expr pos:start="79:16" pos:end="79:17"><name pos:start="79:16" pos:end="79:17">fd</name></expr></argument>, <argument pos:start="79:20" pos:end="79:38"><expr pos:start="79:20" pos:end="79:38"><name pos:start="79:20" pos:end="79:38">SNDCTL_DSP_NONBLOCK</name></expr></argument>, <argument pos:start="79:41" pos:end="79:44"><expr pos:start="79:41" pos:end="79:44"><name pos:start="79:41" pos:end="79:44">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:48" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:17">

        <expr_stmt pos:start="81:9" pos:end="81:70"><expr pos:start="81:9" pos:end="81:69"><call pos:start="81:9" pos:end="81:69"><name pos:start="81:9" pos:end="81:19">oss_logerr2</name> <argument_list pos:start="81:21" pos:end="81:69">(<argument pos:start="81:22" pos:end="81:26"><expr pos:start="81:22" pos:end="81:26"><name pos:start="81:22" pos:end="81:26">errno</name></expr></argument>, <argument pos:start="81:29" pos:end="81:31"><expr pos:start="81:29" pos:end="81:31"><name pos:start="81:29" pos:end="81:31">typ</name></expr></argument>, <argument pos:start="81:34" pos:end="81:68"><expr pos:start="81:34" pos:end="81:68"><literal type="string" pos:start="81:34" pos:end="81:68">"Failed to set non-blocking mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="83:9" pos:end="83:17">goto <name pos:start="83:14" pos:end="83:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:59"><expr pos:start="89:5" pos:end="89:58"><name pos:start="89:5" pos:end="89:12">mmmmssss</name> <operator pos:start="89:14" pos:end="89:14">=</operator> <operator pos:start="89:16" pos:end="89:16">(</operator><name pos:start="89:17" pos:end="89:27"><name pos:start="89:17" pos:end="89:19">req</name><operator pos:start="89:20" pos:end="89:21">-&gt;</operator><name pos:start="89:22" pos:end="89:27">nfrags</name></name> <operator pos:start="89:29" pos:end="89:30">&lt;&lt;</operator> <literal type="number" pos:start="89:32" pos:end="89:33">16</literal><operator pos:start="89:34" pos:end="89:34">)</operator> <operator pos:start="89:36" pos:end="89:36">|</operator> <call pos:start="89:38" pos:end="89:58"><name pos:start="89:38" pos:end="89:42">ctz32</name> <argument_list pos:start="89:44" pos:end="89:58">(<argument pos:start="89:45" pos:end="89:57"><expr pos:start="89:45" pos:end="89:57"><name pos:start="89:45" pos:end="89:57"><name pos:start="89:45" pos:end="89:47">req</name><operator pos:start="89:48" pos:end="89:49">-&gt;</operator><name pos:start="89:50" pos:end="89:57">fragsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="99:5"><if pos:start="91:5" pos:end="99:5">if <condition pos:start="91:8" pos:end="91:54">(<expr pos:start="91:9" pos:end="91:53"><call pos:start="91:9" pos:end="91:53"><name pos:start="91:9" pos:end="91:13">ioctl</name> <argument_list pos:start="91:15" pos:end="91:53">(<argument pos:start="91:16" pos:end="91:17"><expr pos:start="91:16" pos:end="91:17"><name pos:start="91:16" pos:end="91:17">fd</name></expr></argument>, <argument pos:start="91:20" pos:end="91:41"><expr pos:start="91:20" pos:end="91:41"><name pos:start="91:20" pos:end="91:41">SNDCTL_DSP_SETFRAGMENT</name></expr></argument>, <argument pos:start="91:44" pos:end="91:52"><expr pos:start="91:44" pos:end="91:52"><operator pos:start="91:44" pos:end="91:44">&amp;</operator><name pos:start="91:45" pos:end="91:52">mmmmssss</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="91:56" pos:end="99:5">{<block_content pos:start="93:9" pos:end="97:17">

        <expr_stmt pos:start="93:9" pos:end="95:49"><expr pos:start="93:9" pos:end="95:48"><call pos:start="93:9" pos:end="95:48"><name pos:start="93:9" pos:end="93:19">oss_logerr2</name> <argument_list pos:start="93:21" pos:end="95:48">(<argument pos:start="93:22" pos:end="93:26"><expr pos:start="93:22" pos:end="93:26"><name pos:start="93:22" pos:end="93:26">errno</name></expr></argument>, <argument pos:start="93:29" pos:end="93:31"><expr pos:start="93:29" pos:end="93:31"><name pos:start="93:29" pos:end="93:31">typ</name></expr></argument>, <argument pos:start="93:34" pos:end="93:73"><expr pos:start="93:34" pos:end="93:73"><literal type="string" pos:start="93:34" pos:end="93:73">"Failed to set buffer length (%d, %d)\n"</literal></expr></argument>,

                     <argument pos:start="95:22" pos:end="95:32"><expr pos:start="95:22" pos:end="95:32"><name pos:start="95:22" pos:end="95:32"><name pos:start="95:22" pos:end="95:24">req</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:32">nfrags</name></name></expr></argument>, <argument pos:start="95:35" pos:end="95:47"><expr pos:start="95:35" pos:end="95:47"><name pos:start="95:35" pos:end="95:47"><name pos:start="95:35" pos:end="95:37">req</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:47">fragsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:17">goto <name pos:start="97:14" pos:end="97:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="103:5" pos:end="109:5"><if pos:start="103:5" pos:end="109:5">if <condition pos:start="103:8" pos:end="103:78">(<expr pos:start="103:9" pos:end="103:77"><call pos:start="103:9" pos:end="103:77"><name pos:start="103:9" pos:end="103:13">ioctl</name> <argument_list pos:start="103:15" pos:end="103:77">(<argument pos:start="103:16" pos:end="103:17"><expr pos:start="103:16" pos:end="103:17"><name pos:start="103:16" pos:end="103:17">fd</name></expr></argument>, <argument pos:start="103:20" pos:end="103:67"><expr pos:start="103:20" pos:end="103:67"><ternary pos:start="103:20" pos:end="103:67"><condition pos:start="103:20" pos:end="103:23"><expr pos:start="103:20" pos:end="103:21"><name pos:start="103:20" pos:end="103:21">in</name></expr> ?</condition><then pos:start="103:25" pos:end="103:44"> <expr pos:start="103:25" pos:end="103:44"><name pos:start="103:25" pos:end="103:44">SNDCTL_DSP_GETISPACE</name></expr> </then><else pos:start="103:46" pos:end="103:67">: <expr pos:start="103:48" pos:end="103:67"><name pos:start="103:48" pos:end="103:67">SNDCTL_DSP_GETOSPACE</name></expr></else></ternary></expr></argument>, <argument pos:start="103:70" pos:end="103:76"><expr pos:start="103:70" pos:end="103:76"><operator pos:start="103:70" pos:end="103:70">&amp;</operator><name pos:start="103:71" pos:end="103:76">abinfo</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:80" pos:end="109:5">{<block_content pos:start="105:9" pos:end="107:17">

        <expr_stmt pos:start="105:9" pos:end="105:66"><expr pos:start="105:9" pos:end="105:65"><call pos:start="105:9" pos:end="105:65"><name pos:start="105:9" pos:end="105:19">oss_logerr2</name> <argument_list pos:start="105:21" pos:end="105:65">(<argument pos:start="105:22" pos:end="105:26"><expr pos:start="105:22" pos:end="105:26"><name pos:start="105:22" pos:end="105:26">errno</name></expr></argument>, <argument pos:start="105:29" pos:end="105:31"><expr pos:start="105:29" pos:end="105:31"><name pos:start="105:29" pos:end="105:31">typ</name></expr></argument>, <argument pos:start="105:34" pos:end="105:64"><expr pos:start="105:34" pos:end="105:64"><literal type="string" pos:start="105:34" pos:end="105:64">"Failed to get buffer length\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="107:9" pos:end="107:17">goto <name pos:start="107:14" pos:end="107:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="113:5" pos:end="121:5"><if pos:start="113:5" pos:end="121:5">if <condition pos:start="113:8" pos:end="113:47">(<expr pos:start="113:9" pos:end="113:46"><operator pos:start="113:9" pos:end="113:9">!</operator><name pos:start="113:10" pos:end="113:26"><name pos:start="113:10" pos:end="113:15">abinfo</name><operator pos:start="113:16" pos:end="113:16">.</operator><name pos:start="113:17" pos:end="113:26">fragstotal</name></name> <operator pos:start="113:28" pos:end="113:29">||</operator> <operator pos:start="113:31" pos:end="113:31">!</operator><name pos:start="113:32" pos:end="113:46"><name pos:start="113:32" pos:end="113:37">abinfo</name><operator pos:start="113:38" pos:end="113:38">.</operator><name pos:start="113:39" pos:end="113:46">fragsize</name></name></expr>)</condition> <block pos:start="113:49" pos:end="121:5">{<block_content pos:start="115:9" pos:end="119:17">

        <expr_stmt pos:start="115:9" pos:end="117:58"><expr pos:start="115:9" pos:end="117:57"><call pos:start="115:9" pos:end="117:57"><name pos:start="115:9" pos:end="115:15">AUD_log</name> <argument_list pos:start="115:17" pos:end="117:57">(<argument pos:start="115:18" pos:end="115:26"><expr pos:start="115:18" pos:end="115:26"><name pos:start="115:18" pos:end="115:26">AUDIO_CAP</name></expr></argument>, <argument pos:start="115:29" pos:end="115:80"><expr pos:start="115:29" pos:end="115:80"><literal type="string" pos:start="115:29" pos:end="115:80">"Returned bogus buffer information(%d, %d) for %s\n"</literal></expr></argument>,

                 <argument pos:start="117:18" pos:end="117:34"><expr pos:start="117:18" pos:end="117:34"><name pos:start="117:18" pos:end="117:34"><name pos:start="117:18" pos:end="117:23">abinfo</name><operator pos:start="117:24" pos:end="117:24">.</operator><name pos:start="117:25" pos:end="117:34">fragstotal</name></name></expr></argument>, <argument pos:start="117:37" pos:end="117:51"><expr pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:51"><name pos:start="117:37" pos:end="117:42">abinfo</name><operator pos:start="117:43" pos:end="117:43">.</operator><name pos:start="117:44" pos:end="117:51">fragsize</name></name></expr></argument>, <argument pos:start="117:54" pos:end="117:56"><expr pos:start="117:54" pos:end="117:56"><name pos:start="117:54" pos:end="117:56">typ</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:17">goto <name pos:start="119:14" pos:end="119:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:19"><expr pos:start="125:5" pos:end="125:18"><name pos:start="125:5" pos:end="125:12"><name pos:start="125:5" pos:end="125:7">obt</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:12">fmt</name></name> <operator pos:start="125:14" pos:end="125:14">=</operator> <name pos:start="125:16" pos:end="125:18">fmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:31"><expr pos:start="127:5" pos:end="127:30"><name pos:start="127:5" pos:end="127:18"><name pos:start="127:5" pos:end="127:7">obt</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:18">nchannels</name></name> <operator pos:start="127:20" pos:end="127:20">=</operator> <name pos:start="127:22" pos:end="127:30">nchannels</name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:21"><expr pos:start="129:5" pos:end="129:20"><name pos:start="129:5" pos:end="129:13"><name pos:start="129:5" pos:end="129:7">obt</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:13">freq</name></name> <operator pos:start="129:15" pos:end="129:15">=</operator> <name pos:start="129:17" pos:end="129:20">freq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:36"><expr pos:start="131:5" pos:end="131:35"><name pos:start="131:5" pos:end="131:15"><name pos:start="131:5" pos:end="131:7">obt</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:15">nfrags</name></name> <operator pos:start="131:17" pos:end="131:17">=</operator> <name pos:start="131:19" pos:end="131:35"><name pos:start="131:19" pos:end="131:24">abinfo</name><operator pos:start="131:25" pos:end="131:25">.</operator><name pos:start="131:26" pos:end="131:35">fragstotal</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:36"><expr pos:start="133:5" pos:end="133:35"><name pos:start="133:5" pos:end="133:17"><name pos:start="133:5" pos:end="133:7">obt</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:17">fragsize</name></name> <operator pos:start="133:19" pos:end="133:19">=</operator> <name pos:start="133:21" pos:end="133:35"><name pos:start="133:21" pos:end="133:26">abinfo</name><operator pos:start="133:27" pos:end="133:27">.</operator><name pos:start="133:28" pos:end="133:35">fragsize</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="140:0"><expr pos:start="135:5" pos:end="135:13"><operator pos:start="135:5" pos:end="135:5">*</operator><name pos:start="135:6" pos:end="135:8">pfd</name> <operator pos:start="135:10" pos:end="135:10">=</operator> <name pos:start="135:12" pos:end="135:13">fd</name></expr>;</expr_stmt>



<cpp:ifdef pos:start="139:1" pos:end="139:23">#<cpp:directive pos:start="139:2" pos:end="139:6">ifdef</cpp:directive> <name pos:start="139:8" pos:end="139:23">DEBUG_MISMATCHES</name></cpp:ifdef>

    <if_stmt pos:start="141:5" pos:end="162:0"><if pos:start="141:5" pos:end="162:0">if <condition pos:start="141:8" pos:end="149:37">(<expr pos:start="141:9" pos:end="149:36"><operator pos:start="141:9" pos:end="141:9">(</operator><name pos:start="141:10" pos:end="141:17"><name pos:start="141:10" pos:end="141:12">req</name><operator pos:start="141:13" pos:end="141:14">-&gt;</operator><name pos:start="141:15" pos:end="141:17">fmt</name></name> <operator pos:start="141:19" pos:end="141:20">!=</operator> <name pos:start="141:22" pos:end="141:29"><name pos:start="141:22" pos:end="141:24">obt</name><operator pos:start="141:25" pos:end="141:26">-&gt;</operator><name pos:start="141:27" pos:end="141:29">fmt</name></name><operator pos:start="141:30" pos:end="141:30">)</operator> <operator pos:start="141:32" pos:end="141:33">||</operator>

        <operator pos:start="143:9" pos:end="143:9">(</operator><name pos:start="143:10" pos:end="143:23"><name pos:start="143:10" pos:end="143:12">req</name><operator pos:start="143:13" pos:end="143:14">-&gt;</operator><name pos:start="143:15" pos:end="143:23">nchannels</name></name> <operator pos:start="143:25" pos:end="143:26">!=</operator> <name pos:start="143:28" pos:end="143:41"><name pos:start="143:28" pos:end="143:30">obt</name><operator pos:start="143:31" pos:end="143:32">-&gt;</operator><name pos:start="143:33" pos:end="143:41">nchannels</name></name><operator pos:start="143:42" pos:end="143:42">)</operator> <operator pos:start="143:44" pos:end="143:45">||</operator>

        <operator pos:start="145:9" pos:end="145:9">(</operator><name pos:start="145:10" pos:end="145:18"><name pos:start="145:10" pos:end="145:12">req</name><operator pos:start="145:13" pos:end="145:14">-&gt;</operator><name pos:start="145:15" pos:end="145:18">freq</name></name> <operator pos:start="145:20" pos:end="145:21">!=</operator> <name pos:start="145:23" pos:end="145:31"><name pos:start="145:23" pos:end="145:25">obt</name><operator pos:start="145:26" pos:end="145:27">-&gt;</operator><name pos:start="145:28" pos:end="145:31">freq</name></name><operator pos:start="145:32" pos:end="145:32">)</operator> <operator pos:start="145:34" pos:end="145:35">||</operator>

        <operator pos:start="147:9" pos:end="147:9">(</operator><name pos:start="147:10" pos:end="147:22"><name pos:start="147:10" pos:end="147:12">req</name><operator pos:start="147:13" pos:end="147:14">-&gt;</operator><name pos:start="147:15" pos:end="147:22">fragsize</name></name> <operator pos:start="147:24" pos:end="147:25">!=</operator> <name pos:start="147:27" pos:end="147:39"><name pos:start="147:27" pos:end="147:29">obt</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:39">fragsize</name></name><operator pos:start="147:40" pos:end="147:40">)</operator> <operator pos:start="147:42" pos:end="147:43">||</operator>

        <operator pos:start="149:9" pos:end="149:9">(</operator><name pos:start="149:10" pos:end="149:20"><name pos:start="149:10" pos:end="149:12">req</name><operator pos:start="149:13" pos:end="149:14">-&gt;</operator><name pos:start="149:15" pos:end="149:20">nfrags</name></name> <operator pos:start="149:22" pos:end="149:23">!=</operator> <name pos:start="149:25" pos:end="149:35"><name pos:start="149:25" pos:end="149:27">obt</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:35">nfrags</name></name><operator pos:start="149:36" pos:end="149:36">)</operator></expr>)</condition> <block pos:start="149:39" pos:end="162:0">{<block_content pos:start="151:9" pos:end="153:33">

        <expr_stmt pos:start="151:9" pos:end="151:46"><expr pos:start="151:9" pos:end="151:45"><call pos:start="151:9" pos:end="151:45"><name pos:start="151:9" pos:end="151:13">dolog</name> <argument_list pos:start="151:15" pos:end="151:45">(<argument pos:start="151:16" pos:end="151:44"><expr pos:start="151:16" pos:end="151:44"><literal type="string" pos:start="151:16" pos:end="151:44">"Audio parameters mismatch\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:33"><expr pos:start="153:9" pos:end="153:32"><call pos:start="153:9" pos:end="153:32"><name pos:start="153:9" pos:end="153:21">oss_dump_info</name> <argument_list pos:start="153:23" pos:end="153:32">(<argument pos:start="153:24" pos:end="153:26"><expr pos:start="153:24" pos:end="153:26"><name pos:start="153:24" pos:end="153:26">req</name></expr></argument>, <argument pos:start="153:29" pos:end="153:31"><expr pos:start="153:29" pos:end="153:31"><name pos:start="153:29" pos:end="153:31">obt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="157:1" pos:end="157:6">#<cpp:directive pos:start="157:2" pos:end="157:6">endif</cpp:directive></cpp:endif>



<cpp:ifdef pos:start="161:1" pos:end="161:12">#<cpp:directive pos:start="161:2" pos:end="161:6">ifdef</cpp:directive> <name pos:start="161:8" pos:end="161:12">DEBUG</name></cpp:ifdef>

    <expr_stmt pos:start="163:5" pos:end="166:0"><expr pos:start="163:5" pos:end="163:28"><call pos:start="163:5" pos:end="163:28"><name pos:start="163:5" pos:end="163:17">oss_dump_info</name> <argument_list pos:start="163:19" pos:end="163:28">(<argument pos:start="163:20" pos:end="163:22"><expr pos:start="163:20" pos:end="163:22"><name pos:start="163:20" pos:end="163:22">req</name></expr></argument>, <argument pos:start="163:25" pos:end="163:27"><expr pos:start="163:25" pos:end="163:27"><name pos:start="163:25" pos:end="163:27">obt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="165:1" pos:end="165:6">#<cpp:directive pos:start="165:2" pos:end="165:6">endif</cpp:directive></cpp:endif>

    <return pos:start="167:5" pos:end="167:13">return <expr pos:start="167:12" pos:end="167:12"><literal type="number" pos:start="167:12" pos:end="167:12">0</literal></expr>;</return>



 <label pos:start="171:2" pos:end="171:5"><name pos:start="171:2" pos:end="171:4">err</name>:</label>

    <expr_stmt pos:start="173:5" pos:end="173:25"><expr pos:start="173:5" pos:end="173:24"><call pos:start="173:5" pos:end="173:24"><name pos:start="173:5" pos:end="173:18">oss_anal_close</name> <argument_list pos:start="173:20" pos:end="173:24">(<argument pos:start="173:21" pos:end="173:23"><expr pos:start="173:21" pos:end="173:23"><operator pos:start="173:21" pos:end="173:21">&amp;</operator><name pos:start="173:22" pos:end="173:23">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="175:5" pos:end="175:14">return <expr pos:start="175:12" pos:end="175:13"><operator pos:start="175:12" pos:end="175:12">-</operator><literal type="number" pos:start="175:13" pos:end="175:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
