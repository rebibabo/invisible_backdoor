<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23468.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:39">decode_vui_parameters</name><parameter_list pos:start="1:40" pos:end="3:49">(<parameter pos:start="1:41" pos:end="1:57"><decl pos:start="1:41" pos:end="1:57"><type pos:start="1:41" pos:end="1:57"><name pos:start="1:41" pos:end="1:53">GetBitContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">gb</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:80"><decl pos:start="1:60" pos:end="1:80"><type pos:start="1:60" pos:end="1:80"><name pos:start="1:60" pos:end="1:73">AVCodecContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:80">avctx</name></decl></parameter>,

                                        <parameter pos:start="3:41" pos:end="3:48"><decl pos:start="3:41" pos:end="3:48"><type pos:start="3:41" pos:end="3:48"><name pos:start="3:41" pos:end="3:43">SPS</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">sps</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="221:1">{<block_content pos:start="7:5" pos:end="219:13">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:38">aspect_ratio_info_present_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:33">aspect_ratio_idc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:51"><expr pos:start="13:5" pos:end="13:50"><name pos:start="13:5" pos:end="13:34">aspect_ratio_info_present_flag</name> <operator pos:start="13:36" pos:end="13:36">=</operator> <call pos:start="13:38" pos:end="13:50"><name pos:start="13:38" pos:end="13:46">get_bits1</name><argument_list pos:start="13:47" pos:end="13:50">(<argument pos:start="13:48" pos:end="13:49"><expr pos:start="13:48" pos:end="13:49"><name pos:start="13:48" pos:end="13:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="45:5"><if pos:start="17:5" pos:end="39:5">if <condition pos:start="17:8" pos:end="17:39">(<expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:38">aspect_ratio_info_present_flag</name></expr>)</condition> <block pos:start="17:41" pos:end="39:5">{<block_content pos:start="19:9" pos:end="37:9">

        <expr_stmt pos:start="19:9" pos:end="19:43"><expr pos:start="19:9" pos:end="19:42"><name pos:start="19:9" pos:end="19:24">aspect_ratio_idc</name> <operator pos:start="19:26" pos:end="19:26">=</operator> <call pos:start="19:28" pos:end="19:42"><name pos:start="19:28" pos:end="19:35">get_bits</name><argument_list pos:start="19:36" pos:end="19:42">(<argument pos:start="19:37" pos:end="19:38"><expr pos:start="19:37" pos:end="19:38"><name pos:start="19:37" pos:end="19:38">gb</name></expr></argument>, <argument pos:start="19:41" pos:end="19:41"><expr pos:start="19:41" pos:end="19:41"><literal type="number" pos:start="19:41" pos:end="19:41">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="37:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:45">(<expr pos:start="21:13" pos:end="21:44"><name pos:start="21:13" pos:end="21:28">aspect_ratio_idc</name> <operator pos:start="21:30" pos:end="21:31">==</operator> <name pos:start="21:33" pos:end="21:44">EXTENDED_SAR</name></expr>)</condition> <block pos:start="21:47" pos:end="27:9">{<block_content pos:start="23:13" pos:end="25:44">

            <expr_stmt pos:start="23:13" pos:end="23:44"><expr pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:15">sps</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">sar</name><operator pos:start="23:21" pos:end="23:21">.</operator><name pos:start="23:22" pos:end="23:24">num</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:43"><name pos:start="23:28" pos:end="23:35">get_bits</name><argument_list pos:start="23:36" pos:end="23:43">(<argument pos:start="23:37" pos:end="23:38"><expr pos:start="23:37" pos:end="23:38"><name pos:start="23:37" pos:end="23:38">gb</name></expr></argument>, <argument pos:start="23:41" pos:end="23:42"><expr pos:start="23:41" pos:end="23:42"><literal type="number" pos:start="23:41" pos:end="23:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:44"><expr pos:start="25:13" pos:end="25:43"><name pos:start="25:13" pos:end="25:24"><name pos:start="25:13" pos:end="25:15">sps</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:20">sar</name><operator pos:start="25:21" pos:end="25:21">.</operator><name pos:start="25:22" pos:end="25:24">den</name></name> <operator pos:start="25:26" pos:end="25:26">=</operator> <call pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:35">get_bits</name><argument_list pos:start="25:36" pos:end="25:43">(<argument pos:start="25:37" pos:end="25:38"><expr pos:start="25:37" pos:end="25:38"><name pos:start="25:37" pos:end="25:38">gb</name></expr></argument>, <argument pos:start="25:41" pos:end="25:42"><expr pos:start="25:41" pos:end="25:42"><literal type="number" pos:start="25:41" pos:end="25:42">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="27:11" pos:end="31:9">else if <condition pos:start="27:19" pos:end="27:67">(<expr pos:start="27:20" pos:end="27:66"><name pos:start="27:20" pos:end="27:35">aspect_ratio_idc</name> <operator pos:start="27:37" pos:end="27:37">&lt;</operator> <call pos:start="27:39" pos:end="27:66"><name pos:start="27:39" pos:end="27:52">FF_ARRAY_ELEMS</name><argument_list pos:start="27:53" pos:end="27:66">(<argument pos:start="27:54" pos:end="27:65"><expr pos:start="27:54" pos:end="27:65"><name pos:start="27:54" pos:end="27:65">pixel_aspect</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="27:69" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:54">

            <expr_stmt pos:start="29:13" pos:end="29:54"><expr pos:start="29:13" pos:end="29:53"><name pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">sps</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:20">sar</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <name pos:start="29:24" pos:end="29:53"><name pos:start="29:24" pos:end="29:35">pixel_aspect</name><index pos:start="29:36" pos:end="29:53">[<expr pos:start="29:37" pos:end="29:52"><name pos:start="29:37" pos:end="29:52">aspect_ratio_idc</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="37:9">else <block pos:start="31:16" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:39">

            <expr_stmt pos:start="33:13" pos:end="33:66"><expr pos:start="33:13" pos:end="33:65"><call pos:start="33:13" pos:end="33:65"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:65">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">avctx</name></expr></argument>, <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:41" pos:end="33:64"><expr pos:start="33:41" pos:end="33:64"><literal type="string" pos:start="33:41" pos:end="33:64">"illegal aspect ratio\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:39">return <expr pos:start="35:20" pos:end="35:38"><name pos:start="35:20" pos:end="35:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="39:7" pos:end="45:5">else <block pos:start="39:12" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:25">

        <expr_stmt pos:start="41:9" pos:end="43:25"><expr pos:start="41:9" pos:end="43:24"><name pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:11">sps</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">sar</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:20">num</name></name> <operator pos:start="41:22" pos:end="41:22">=</operator>

        <name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:11">sps</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">sar</name><operator pos:start="43:17" pos:end="43:17">.</operator><name pos:start="43:18" pos:end="43:20">den</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <literal type="number" pos:start="43:24" pos:end="43:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="49:5" pos:end="51:22"><if pos:start="49:5" pos:end="51:22">if <condition pos:start="49:8" pos:end="49:22">(<expr pos:start="49:9" pos:end="49:21"><call pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:17">get_bits1</name><argument_list pos:start="49:18" pos:end="49:21">(<argument pos:start="49:19" pos:end="49:20"><expr pos:start="49:19" pos:end="49:20"><name pos:start="49:19" pos:end="49:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:22"><block_content pos:start="51:9" pos:end="51:22">      <comment type="block" pos:start="49:29" pos:end="49:60">/* overscan_info_present_flag */</comment>

        <expr_stmt pos:start="51:9" pos:end="51:22"><expr pos:start="51:9" pos:end="51:21"><call pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:17">get_bits1</name><argument_list pos:start="51:18" pos:end="51:21">(<argument pos:start="51:19" pos:end="51:20"><expr pos:start="51:19" pos:end="51:20"><name pos:start="51:19" pos:end="51:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>      <comment type="block" pos:start="51:29" pos:end="51:59">/* overscan_appropriate_flag */</comment>



    <expr_stmt pos:start="55:5" pos:end="55:56"><expr pos:start="55:5" pos:end="55:55"><name pos:start="55:5" pos:end="55:39"><name pos:start="55:5" pos:end="55:7">sps</name><operator pos:start="55:8" pos:end="55:9">-&gt;</operator><name pos:start="55:10" pos:end="55:39">video_signal_type_present_flag</name></name> <operator pos:start="55:41" pos:end="55:41">=</operator> <call pos:start="55:43" pos:end="55:55"><name pos:start="55:43" pos:end="55:51">get_bits1</name><argument_list pos:start="55:52" pos:end="55:55">(<argument pos:start="55:53" pos:end="55:54"><expr pos:start="55:53" pos:end="55:54"><name pos:start="55:53" pos:end="55:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="89:5"><if pos:start="57:5" pos:end="89:5">if <condition pos:start="57:8" pos:end="57:44">(<expr pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:43"><name pos:start="57:9" pos:end="57:11">sps</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:43">video_signal_type_present_flag</name></name></expr>)</condition> <block pos:start="57:46" pos:end="89:5">{<block_content pos:start="59:9" pos:end="87:9">

        <expr_stmt pos:start="59:9" pos:end="59:24"><expr pos:start="59:9" pos:end="59:23"><call pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:16">get_bits</name><argument_list pos:start="59:17" pos:end="59:23">(<argument pos:start="59:18" pos:end="59:19"><expr pos:start="59:18" pos:end="59:19"><name pos:start="59:18" pos:end="59:19">gb</name></expr></argument>, <argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>                 <comment type="block" pos:start="59:42" pos:end="59:59">/* video_format */</comment>

        <expr_stmt pos:start="61:9" pos:end="61:40"><expr pos:start="61:9" pos:end="61:39"><name pos:start="61:9" pos:end="61:23"><name pos:start="61:9" pos:end="61:11">sps</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:23">full_range</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <call pos:start="61:27" pos:end="61:39"><name pos:start="61:27" pos:end="61:35">get_bits1</name><argument_list pos:start="61:36" pos:end="61:39">(<argument pos:start="61:37" pos:end="61:38"><expr pos:start="61:37" pos:end="61:38"><name pos:start="61:37" pos:end="61:38">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:42" pos:end="61:68">/* video_full_range_flag */</comment>



        <expr_stmt pos:start="65:9" pos:end="65:61"><expr pos:start="65:9" pos:end="65:60"><name pos:start="65:9" pos:end="65:44"><name pos:start="65:9" pos:end="65:11">sps</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:44">colour_description_present_flag</name></name> <operator pos:start="65:46" pos:end="65:46">=</operator> <call pos:start="65:48" pos:end="65:60"><name pos:start="65:48" pos:end="65:56">get_bits1</name><argument_list pos:start="65:57" pos:end="65:60">(<argument pos:start="65:58" pos:end="65:59"><expr pos:start="65:58" pos:end="65:59"><name pos:start="65:58" pos:end="65:59">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="67:9" pos:end="87:9"><if pos:start="67:9" pos:end="87:9">if <condition pos:start="67:12" pos:end="67:49">(<expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:15">sps</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:48">colour_description_present_flag</name></name></expr>)</condition> <block pos:start="67:51" pos:end="87:9">{<block_content pos:start="69:13" pos:end="85:56">

            <expr_stmt pos:start="69:13" pos:end="69:51"><expr pos:start="69:13" pos:end="69:50"><name pos:start="69:13" pos:end="69:32"><name pos:start="69:13" pos:end="69:15">sps</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:32">color_primaries</name></name> <operator pos:start="69:34" pos:end="69:34">=</operator> <call pos:start="69:36" pos:end="69:50"><name pos:start="69:36" pos:end="69:43">get_bits</name><argument_list pos:start="69:44" pos:end="69:50">(<argument pos:start="69:45" pos:end="69:46"><expr pos:start="69:45" pos:end="69:46"><name pos:start="69:45" pos:end="69:46">gb</name></expr></argument>, <argument pos:start="69:49" pos:end="69:49"><expr pos:start="69:49" pos:end="69:49"><literal type="number" pos:start="69:49" pos:end="69:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:53" pos:end="69:74">/* colour_primaries */</comment>

            <expr_stmt pos:start="71:13" pos:end="71:51"><expr pos:start="71:13" pos:end="71:50"><name pos:start="71:13" pos:end="71:26"><name pos:start="71:13" pos:end="71:15">sps</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:26">color_trc</name></name>       <operator pos:start="71:34" pos:end="71:34">=</operator> <call pos:start="71:36" pos:end="71:50"><name pos:start="71:36" pos:end="71:43">get_bits</name><argument_list pos:start="71:44" pos:end="71:50">(<argument pos:start="71:45" pos:end="71:46"><expr pos:start="71:45" pos:end="71:46"><name pos:start="71:45" pos:end="71:46">gb</name></expr></argument>, <argument pos:start="71:49" pos:end="71:49"><expr pos:start="71:49" pos:end="71:49"><literal type="number" pos:start="71:49" pos:end="71:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:53" pos:end="71:82">/* transfer_characteristics */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:51"><expr pos:start="73:13" pos:end="73:50"><name pos:start="73:13" pos:end="73:27"><name pos:start="73:13" pos:end="73:15">sps</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:27">colorspace</name></name>      <operator pos:start="73:34" pos:end="73:34">=</operator> <call pos:start="73:36" pos:end="73:50"><name pos:start="73:36" pos:end="73:43">get_bits</name><argument_list pos:start="73:44" pos:end="73:50">(<argument pos:start="73:45" pos:end="73:46"><expr pos:start="73:45" pos:end="73:46"><name pos:start="73:45" pos:end="73:46">gb</name></expr></argument>, <argument pos:start="73:49" pos:end="73:49"><expr pos:start="73:49" pos:end="73:49"><literal type="number" pos:start="73:49" pos:end="73:49">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:53" pos:end="73:77">/* matrix_coefficients */</comment>

            <if_stmt pos:start="75:13" pos:end="77:61"><if pos:start="75:13" pos:end="77:61">if <condition pos:start="75:16" pos:end="75:53">(<expr pos:start="75:17" pos:end="75:52"><name pos:start="75:17" pos:end="75:36"><name pos:start="75:17" pos:end="75:19">sps</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:36">color_primaries</name></name> <operator pos:start="75:38" pos:end="75:39">&gt;=</operator> <name pos:start="75:41" pos:end="75:52">AVCOL_PRI_NB</name></expr>)</condition><block type="pseudo" pos:start="77:17" pos:end="77:61"><block_content pos:start="77:17" pos:end="77:61">

                <expr_stmt pos:start="77:17" pos:end="77:61"><expr pos:start="77:17" pos:end="77:60"><name pos:start="77:17" pos:end="77:36"><name pos:start="77:17" pos:end="77:19">sps</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:36">color_primaries</name></name> <operator pos:start="77:38" pos:end="77:38">=</operator> <name pos:start="77:40" pos:end="77:60">AVCOL_PRI_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="79:13" pos:end="81:55"><if pos:start="79:13" pos:end="81:55">if <condition pos:start="79:16" pos:end="79:47">(<expr pos:start="79:17" pos:end="79:46"><name pos:start="79:17" pos:end="79:30"><name pos:start="79:17" pos:end="79:19">sps</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:30">color_trc</name></name> <operator pos:start="79:32" pos:end="79:33">&gt;=</operator> <name pos:start="79:35" pos:end="79:46">AVCOL_TRC_NB</name></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:55"><block_content pos:start="81:17" pos:end="81:55">

                <expr_stmt pos:start="81:17" pos:end="81:55"><expr pos:start="81:17" pos:end="81:54"><name pos:start="81:17" pos:end="81:30"><name pos:start="81:17" pos:end="81:19">sps</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:30">color_trc</name></name> <operator pos:start="81:32" pos:end="81:32">=</operator> <name pos:start="81:34" pos:end="81:54">AVCOL_TRC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="83:13" pos:end="85:56"><if pos:start="83:13" pos:end="85:56">if <condition pos:start="83:16" pos:end="83:48">(<expr pos:start="83:17" pos:end="83:47"><name pos:start="83:17" pos:end="83:31"><name pos:start="83:17" pos:end="83:19">sps</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:31">colorspace</name></name> <operator pos:start="83:33" pos:end="83:34">&gt;=</operator> <name pos:start="83:36" pos:end="83:47">AVCOL_SPC_NB</name></expr>)</condition><block type="pseudo" pos:start="85:17" pos:end="85:56"><block_content pos:start="85:17" pos:end="85:56">

                <expr_stmt pos:start="85:17" pos:end="85:56"><expr pos:start="85:17" pos:end="85:55"><name pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:19">sps</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:31">colorspace</name></name> <operator pos:start="85:33" pos:end="85:33">=</operator> <name pos:start="85:35" pos:end="85:55">AVCOL_SPC_UNSPECIFIED</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="93:5" pos:end="93:43">/* chroma_location_info_present_flag */</comment>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:22">(<expr pos:start="95:9" pos:end="95:21"><call pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:17">get_bits1</name><argument_list pos:start="95:18" pos:end="95:21">(<argument pos:start="95:19" pos:end="95:20"><expr pos:start="95:19" pos:end="95:20"><name pos:start="95:19" pos:end="95:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:24" pos:end="103:5">{<block_content pos:start="99:9" pos:end="101:26">

        <comment type="block" pos:start="97:9" pos:end="97:51">/* chroma_sample_location_type_top_field */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:62"><expr pos:start="99:9" pos:end="99:61"><name pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:37">chroma_sample_location</name></name> <operator pos:start="99:39" pos:end="99:39">=</operator> <call pos:start="99:41" pos:end="99:57"><name pos:start="99:41" pos:end="99:53">get_ue_golomb</name><argument_list pos:start="99:54" pos:end="99:57">(<argument pos:start="99:55" pos:end="99:56"><expr pos:start="99:55" pos:end="99:56"><name pos:start="99:55" pos:end="99:56">gb</name></expr></argument>)</argument_list></call> <operator pos:start="99:59" pos:end="99:59">+</operator> <literal type="number" pos:start="99:61" pos:end="99:61">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:26"><expr pos:start="101:9" pos:end="101:25"><call pos:start="101:9" pos:end="101:25"><name pos:start="101:9" pos:end="101:21">get_ue_golomb</name><argument_list pos:start="101:22" pos:end="101:25">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="block" pos:start="101:29" pos:end="101:74">/* chroma_sample_location_type_bottom_field */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:50"><expr pos:start="107:5" pos:end="107:49"><name pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:7">sps</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:33">timing_info_present_flag</name></name> <operator pos:start="107:35" pos:end="107:35">=</operator> <call pos:start="107:37" pos:end="107:49"><name pos:start="107:37" pos:end="107:45">get_bits1</name><argument_list pos:start="107:46" pos:end="107:49">(<argument pos:start="107:47" pos:end="107:48"><expr pos:start="107:47" pos:end="107:48"><name pos:start="107:47" pos:end="107:48">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="129:5"><if pos:start="109:5" pos:end="129:5">if <condition pos:start="109:8" pos:end="109:38">(<expr pos:start="109:9" pos:end="109:37"><name pos:start="109:9" pos:end="109:37"><name pos:start="109:9" pos:end="109:11">sps</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:37">timing_info_present_flag</name></name></expr>)</condition> <block pos:start="109:40" pos:end="129:5">{<block_content pos:start="111:9" pos:end="127:51">

        <expr_stmt pos:start="111:9" pos:end="111:55"><expr pos:start="111:9" pos:end="111:54"><name pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:11">sps</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:30">num_units_in_tick</name></name> <operator pos:start="111:32" pos:end="111:32">=</operator> <call pos:start="111:34" pos:end="111:54"><name pos:start="111:34" pos:end="111:46">get_bits_long</name><argument_list pos:start="111:47" pos:end="111:54">(<argument pos:start="111:48" pos:end="111:49"><expr pos:start="111:48" pos:end="111:49"><name pos:start="111:48" pos:end="111:49">gb</name></expr></argument>, <argument pos:start="111:52" pos:end="111:53"><expr pos:start="111:52" pos:end="111:53"><literal type="number" pos:start="111:52" pos:end="111:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:55"><expr pos:start="113:9" pos:end="113:54"><name pos:start="113:9" pos:end="113:23"><name pos:start="113:9" pos:end="113:11">sps</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:23">time_scale</name></name>        <operator pos:start="113:32" pos:end="113:32">=</operator> <call pos:start="113:34" pos:end="113:54"><name pos:start="113:34" pos:end="113:46">get_bits_long</name><argument_list pos:start="113:47" pos:end="113:54">(<argument pos:start="113:48" pos:end="113:49"><expr pos:start="113:48" pos:end="113:49"><name pos:start="113:48" pos:end="113:49">gb</name></expr></argument>, <argument pos:start="113:52" pos:end="113:53"><expr pos:start="113:52" pos:end="113:53"><literal type="number" pos:start="113:52" pos:end="113:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="125:9"><if pos:start="115:9" pos:end="125:9">if <condition pos:start="115:12" pos:end="115:56">(<expr pos:start="115:13" pos:end="115:55"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:35"><name pos:start="115:14" pos:end="115:16">sps</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:35">num_units_in_tick</name></name> <operator pos:start="115:37" pos:end="115:38">||</operator> <operator pos:start="115:40" pos:end="115:40">!</operator><name pos:start="115:41" pos:end="115:55"><name pos:start="115:41" pos:end="115:43">sps</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:55">time_scale</name></name></expr>)</condition> <block pos:start="115:58" pos:end="125:9">{<block_content pos:start="117:13" pos:end="123:39">

            <expr_stmt pos:start="117:13" pos:end="121:60"><expr pos:start="117:13" pos:end="121:59"><call pos:start="117:13" pos:end="121:59"><name pos:start="117:13" pos:end="117:18">av_log</name><argument_list pos:start="117:19" pos:end="121:59">(<argument pos:start="117:20" pos:end="117:24"><expr pos:start="117:20" pos:end="117:24"><name pos:start="117:20" pos:end="117:24">avctx</name></expr></argument>, <argument pos:start="117:27" pos:end="117:38"><expr pos:start="117:27" pos:end="117:38"><name pos:start="117:27" pos:end="117:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="119:20" pos:end="119:96"><expr pos:start="119:20" pos:end="119:96"><literal type="string" pos:start="119:20" pos:end="119:75">"time_scale/num_units_in_tick invalid or unsupported (%"</literal><name pos:start="119:76" pos:end="119:81">PRIu32</name><literal type="string" pos:start="119:82" pos:end="119:85">"/%"</literal><name pos:start="119:86" pos:end="119:91">PRIu32</name><literal type="string" pos:start="119:92" pos:end="119:96">")\n"</literal></expr></argument>,

                   <argument pos:start="121:20" pos:end="121:34"><expr pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:22">sps</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:34">time_scale</name></name></expr></argument>, <argument pos:start="121:37" pos:end="121:58"><expr pos:start="121:37" pos:end="121:58"><name pos:start="121:37" pos:end="121:58"><name pos:start="121:37" pos:end="121:39">sps</name><operator pos:start="121:40" pos:end="121:41">-&gt;</operator><name pos:start="121:42" pos:end="121:58">num_units_in_tick</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="123:13" pos:end="123:39">return <expr pos:start="123:20" pos:end="123:38"><name pos:start="123:20" pos:end="123:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:51"><expr pos:start="127:9" pos:end="127:50"><name pos:start="127:9" pos:end="127:34"><name pos:start="127:9" pos:end="127:11">sps</name><operator pos:start="127:12" pos:end="127:13">-&gt;</operator><name pos:start="127:14" pos:end="127:34">fixed_frame_rate_flag</name></name> <operator pos:start="127:36" pos:end="127:36">=</operator> <call pos:start="127:38" pos:end="127:50"><name pos:start="127:38" pos:end="127:46">get_bits1</name><argument_list pos:start="127:47" pos:end="127:50">(<argument pos:start="127:48" pos:end="127:49"><expr pos:start="127:48" pos:end="127:49"><name pos:start="127:48" pos:end="127:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:57"><expr pos:start="133:5" pos:end="133:56"><name pos:start="133:5" pos:end="133:40"><name pos:start="133:5" pos:end="133:7">sps</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:40">nal_hrd_parameters_present_flag</name></name> <operator pos:start="133:42" pos:end="133:42">=</operator> <call pos:start="133:44" pos:end="133:56"><name pos:start="133:44" pos:end="133:52">get_bits1</name><argument_list pos:start="133:53" pos:end="133:56">(<argument pos:start="133:54" pos:end="133:55"><expr pos:start="133:54" pos:end="133:55"><name pos:start="133:54" pos:end="133:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="135:5" pos:end="139:39"><if pos:start="135:5" pos:end="139:39">if <condition pos:start="135:8" pos:end="135:45">(<expr pos:start="135:9" pos:end="135:44"><name pos:start="135:9" pos:end="135:44"><name pos:start="135:9" pos:end="135:11">sps</name><operator pos:start="135:12" pos:end="135:13">-&gt;</operator><name pos:start="135:14" pos:end="135:44">nal_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="137:9" pos:end="139:39"><block_content pos:start="137:9" pos:end="139:39">

        <if_stmt pos:start="137:9" pos:end="139:39"><if pos:start="137:9" pos:end="139:39">if <condition pos:start="137:12" pos:end="137:54">(<expr pos:start="137:13" pos:end="137:53"><call pos:start="137:13" pos:end="137:49"><name pos:start="137:13" pos:end="137:33">decode_hrd_parameters</name><argument_list pos:start="137:34" pos:end="137:49">(<argument pos:start="137:35" pos:end="137:36"><expr pos:start="137:35" pos:end="137:36"><name pos:start="137:35" pos:end="137:36">gb</name></expr></argument>, <argument pos:start="137:39" pos:end="137:43"><expr pos:start="137:39" pos:end="137:43"><name pos:start="137:39" pos:end="137:43">avctx</name></expr></argument>, <argument pos:start="137:46" pos:end="137:48"><expr pos:start="137:46" pos:end="137:48"><name pos:start="137:46" pos:end="137:48">sps</name></expr></argument>)</argument_list></call> <operator pos:start="137:51" pos:end="137:51">&lt;</operator> <literal type="number" pos:start="137:53" pos:end="137:53">0</literal></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:39"><block_content pos:start="139:13" pos:end="139:39">

            <return pos:start="139:13" pos:end="139:39">return <expr pos:start="139:20" pos:end="139:38"><name pos:start="139:20" pos:end="139:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:57"><expr pos:start="141:5" pos:end="141:56"><name pos:start="141:5" pos:end="141:40"><name pos:start="141:5" pos:end="141:7">sps</name><operator pos:start="141:8" pos:end="141:9">-&gt;</operator><name pos:start="141:10" pos:end="141:40">vcl_hrd_parameters_present_flag</name></name> <operator pos:start="141:42" pos:end="141:42">=</operator> <call pos:start="141:44" pos:end="141:56"><name pos:start="141:44" pos:end="141:52">get_bits1</name><argument_list pos:start="141:53" pos:end="141:56">(<argument pos:start="141:54" pos:end="141:55"><expr pos:start="141:54" pos:end="141:55"><name pos:start="141:54" pos:end="141:55">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="143:5" pos:end="147:39"><if pos:start="143:5" pos:end="147:39">if <condition pos:start="143:8" pos:end="143:45">(<expr pos:start="143:9" pos:end="143:44"><name pos:start="143:9" pos:end="143:44"><name pos:start="143:9" pos:end="143:11">sps</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:44">vcl_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="147:39"><block_content pos:start="145:9" pos:end="147:39">

        <if_stmt pos:start="145:9" pos:end="147:39"><if pos:start="145:9" pos:end="147:39">if <condition pos:start="145:12" pos:end="145:54">(<expr pos:start="145:13" pos:end="145:53"><call pos:start="145:13" pos:end="145:49"><name pos:start="145:13" pos:end="145:33">decode_hrd_parameters</name><argument_list pos:start="145:34" pos:end="145:49">(<argument pos:start="145:35" pos:end="145:36"><expr pos:start="145:35" pos:end="145:36"><name pos:start="145:35" pos:end="145:36">gb</name></expr></argument>, <argument pos:start="145:39" pos:end="145:43"><expr pos:start="145:39" pos:end="145:43"><name pos:start="145:39" pos:end="145:43">avctx</name></expr></argument>, <argument pos:start="145:46" pos:end="145:48"><expr pos:start="145:46" pos:end="145:48"><name pos:start="145:46" pos:end="145:48">sps</name></expr></argument>)</argument_list></call> <operator pos:start="145:51" pos:end="145:51">&lt;</operator> <literal type="number" pos:start="145:53" pos:end="145:53">0</literal></expr>)</condition><block type="pseudo" pos:start="147:13" pos:end="147:39"><block_content pos:start="147:13" pos:end="147:39">

            <return pos:start="147:13" pos:end="147:39">return <expr pos:start="147:20" pos:end="147:38"><name pos:start="147:20" pos:end="147:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="153:22"><if pos:start="149:5" pos:end="153:22">if <condition pos:start="149:8" pos:end="151:45">(<expr pos:start="149:9" pos:end="151:44"><name pos:start="149:9" pos:end="149:44"><name pos:start="149:9" pos:end="149:11">sps</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:44">nal_hrd_parameters_present_flag</name></name> <operator pos:start="149:46" pos:end="149:47">||</operator>

        <name pos:start="151:9" pos:end="151:44"><name pos:start="151:9" pos:end="151:11">sps</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:44">vcl_hrd_parameters_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:22"><block_content pos:start="153:9" pos:end="153:22">

        <expr_stmt pos:start="153:9" pos:end="153:22"><expr pos:start="153:9" pos:end="153:21"><call pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:17">get_bits1</name><argument_list pos:start="153:18" pos:end="153:21">(<argument pos:start="153:19" pos:end="153:20"><expr pos:start="153:19" pos:end="153:20"><name pos:start="153:19" pos:end="153:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>     <comment type="block" pos:start="153:28" pos:end="153:51">/* low_delay_hrd_flag */</comment>

    <expr_stmt pos:start="155:5" pos:end="155:49"><expr pos:start="155:5" pos:end="155:48"><name pos:start="155:5" pos:end="155:32"><name pos:start="155:5" pos:end="155:7">sps</name><operator pos:start="155:8" pos:end="155:9">-&gt;</operator><name pos:start="155:10" pos:end="155:32">pic_struct_present_flag</name></name> <operator pos:start="155:34" pos:end="155:34">=</operator> <call pos:start="155:36" pos:end="155:48"><name pos:start="155:36" pos:end="155:44">get_bits1</name><argument_list pos:start="155:45" pos:end="155:48">(<argument pos:start="155:46" pos:end="155:47"><expr pos:start="155:46" pos:end="155:47"><name pos:start="155:46" pos:end="155:47">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:52"><expr pos:start="159:5" pos:end="159:51"><name pos:start="159:5" pos:end="159:35"><name pos:start="159:5" pos:end="159:7">sps</name><operator pos:start="159:8" pos:end="159:9">-&gt;</operator><name pos:start="159:10" pos:end="159:35">bitstream_restriction_flag</name></name> <operator pos:start="159:37" pos:end="159:37">=</operator> <call pos:start="159:39" pos:end="159:51"><name pos:start="159:39" pos:end="159:47">get_bits1</name><argument_list pos:start="159:48" pos:end="159:51">(<argument pos:start="159:49" pos:end="159:50"><expr pos:start="159:49" pos:end="159:50"><name pos:start="159:49" pos:end="159:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="161:5" pos:end="205:5"><if pos:start="161:5" pos:end="205:5">if <condition pos:start="161:8" pos:end="161:40">(<expr pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:39"><name pos:start="161:9" pos:end="161:11">sps</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:39">bitstream_restriction_flag</name></name></expr>)</condition> <block pos:start="161:42" pos:end="205:5">{<block_content pos:start="163:9" pos:end="203:9">

        <expr_stmt pos:start="163:9" pos:end="163:22"><expr pos:start="163:9" pos:end="163:21"><call pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:17">get_bits1</name><argument_list pos:start="163:18" pos:end="163:21">(<argument pos:start="163:19" pos:end="163:20"><expr pos:start="163:19" pos:end="163:20"><name pos:start="163:19" pos:end="163:20">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="block" pos:start="163:28" pos:end="163:72">/* motion_vectors_over_pic_boundaries_flag */</comment>

        <expr_stmt pos:start="165:9" pos:end="165:26"><expr pos:start="165:9" pos:end="165:25"><call pos:start="165:9" pos:end="165:25"><name pos:start="165:9" pos:end="165:21">get_ue_golomb</name><argument_list pos:start="165:22" pos:end="165:25">(<argument pos:start="165:23" pos:end="165:24"><expr pos:start="165:23" pos:end="165:24"><name pos:start="165:23" pos:end="165:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="165:28" pos:end="165:56">/* max_bytes_per_pic_denom */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:26"><expr pos:start="167:9" pos:end="167:25"><call pos:start="167:9" pos:end="167:25"><name pos:start="167:9" pos:end="167:21">get_ue_golomb</name><argument_list pos:start="167:22" pos:end="167:25">(<argument pos:start="167:23" pos:end="167:24"><expr pos:start="167:23" pos:end="167:24"><name pos:start="167:23" pos:end="167:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="167:28" pos:end="167:54">/* max_bits_per_mb_denom */</comment>

        <expr_stmt pos:start="169:9" pos:end="169:26"><expr pos:start="169:9" pos:end="169:25"><call pos:start="169:9" pos:end="169:25"><name pos:start="169:9" pos:end="169:21">get_ue_golomb</name><argument_list pos:start="169:22" pos:end="169:25">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="169:28" pos:end="169:62">/* log2_max_mv_length_horizontal */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:26"><expr pos:start="171:9" pos:end="171:25"><call pos:start="171:9" pos:end="171:25"><name pos:start="171:9" pos:end="171:21">get_ue_golomb</name><argument_list pos:start="171:22" pos:end="171:25">(<argument pos:start="171:23" pos:end="171:24"><expr pos:start="171:23" pos:end="171:24"><name pos:start="171:23" pos:end="171:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="171:28" pos:end="171:60">/* log2_max_mv_length_vertical */</comment>

        <expr_stmt pos:start="173:9" pos:end="173:52"><expr pos:start="173:9" pos:end="173:51"><name pos:start="173:9" pos:end="173:31"><name pos:start="173:9" pos:end="173:11">sps</name><operator pos:start="173:12" pos:end="173:13">-&gt;</operator><name pos:start="173:14" pos:end="173:31">num_reorder_frames</name></name> <operator pos:start="173:33" pos:end="173:33">=</operator> <call pos:start="173:35" pos:end="173:51"><name pos:start="173:35" pos:end="173:47">get_ue_golomb</name><argument_list pos:start="173:48" pos:end="173:51">(<argument pos:start="173:49" pos:end="173:50"><expr pos:start="173:49" pos:end="173:50"><name pos:start="173:49" pos:end="173:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:26"><expr pos:start="175:9" pos:end="175:25"><call pos:start="175:9" pos:end="175:25"><name pos:start="175:9" pos:end="175:21">get_ue_golomb</name><argument_list pos:start="175:22" pos:end="175:25">(<argument pos:start="175:23" pos:end="175:24"><expr pos:start="175:23" pos:end="175:24"><name pos:start="175:23" pos:end="175:24">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="175:28" pos:end="175:54">/*max_dec_frame_buffering*/</comment>



        <if_stmt pos:start="179:9" pos:end="185:9"><if pos:start="179:9" pos:end="185:9">if <condition pos:start="179:12" pos:end="179:34">(<expr pos:start="179:13" pos:end="179:33"><call pos:start="179:13" pos:end="179:29"><name pos:start="179:13" pos:end="179:25">get_bits_left</name><argument_list pos:start="179:26" pos:end="179:29">(<argument pos:start="179:27" pos:end="179:28"><expr pos:start="179:27" pos:end="179:28"><name pos:start="179:27" pos:end="179:28">gb</name></expr></argument>)</argument_list></call> <operator pos:start="179:31" pos:end="179:31">&lt;</operator> <literal type="number" pos:start="179:33" pos:end="179:33">0</literal></expr>)</condition> <block pos:start="179:36" pos:end="185:9">{<block_content pos:start="181:13" pos:end="183:48">

            <expr_stmt pos:start="181:13" pos:end="181:48"><expr pos:start="181:13" pos:end="181:47"><name pos:start="181:13" pos:end="181:35"><name pos:start="181:13" pos:end="181:15">sps</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:35">num_reorder_frames</name></name>         <operator pos:start="181:45" pos:end="181:45">=</operator> <literal type="number" pos:start="181:47" pos:end="181:47">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:48"><expr pos:start="183:13" pos:end="183:47"><name pos:start="183:13" pos:end="183:43"><name pos:start="183:13" pos:end="183:15">sps</name><operator pos:start="183:16" pos:end="183:17">-&gt;</operator><name pos:start="183:18" pos:end="183:43">bitstream_restriction_flag</name></name> <operator pos:start="183:45" pos:end="183:45">=</operator> <literal type="number" pos:start="183:47" pos:end="183:47">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="189:9" pos:end="203:9"><if pos:start="189:9" pos:end="203:9">if <condition pos:start="189:12" pos:end="191:74">(<expr pos:start="189:13" pos:end="189:41"><name pos:start="189:13" pos:end="189:35"><name pos:start="189:13" pos:end="189:15">sps</name><operator pos:start="189:16" pos:end="189:17">-&gt;</operator><name pos:start="189:18" pos:end="189:35">num_reorder_frames</name></name> <operator pos:start="189:37" pos:end="189:37">&gt;</operator> <literal type="number" pos:start="189:39" pos:end="189:41">16U</literal></expr>

            <comment type="block" pos:start="191:13" pos:end="191:73">/* max_dec_frame_buffering || max_dec_frame_buffering &gt; 16 */</comment>)</condition> <block pos:start="191:76" pos:end="203:9">{<block_content pos:start="193:13" pos:end="201:39">

            <expr_stmt pos:start="193:13" pos:end="197:44"><expr pos:start="193:13" pos:end="197:43"><call pos:start="193:13" pos:end="197:43"><name pos:start="193:13" pos:end="193:18">av_log</name><argument_list pos:start="193:19" pos:end="197:43">(<argument pos:start="193:20" pos:end="193:24"><expr pos:start="193:20" pos:end="193:24"><name pos:start="193:20" pos:end="193:24">avctx</name></expr></argument>, <argument pos:start="193:27" pos:end="193:38"><expr pos:start="193:27" pos:end="193:38"><name pos:start="193:27" pos:end="193:38">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="195:20" pos:end="195:61"><expr pos:start="195:20" pos:end="195:61"><literal type="string" pos:start="195:20" pos:end="195:61">"Clipping illegal num_reorder_frames %d\n"</literal></expr></argument>,

                   <argument pos:start="197:20" pos:end="197:42"><expr pos:start="197:20" pos:end="197:42"><name pos:start="197:20" pos:end="197:42"><name pos:start="197:20" pos:end="197:22">sps</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:42">num_reorder_frames</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:41"><expr pos:start="199:13" pos:end="199:40"><name pos:start="199:13" pos:end="199:35"><name pos:start="199:13" pos:end="199:15">sps</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:35">num_reorder_frames</name></name> <operator pos:start="199:37" pos:end="199:37">=</operator> <literal type="number" pos:start="199:39" pos:end="199:40">16</literal></expr>;</expr_stmt>

            <return pos:start="201:13" pos:end="201:39">return <expr pos:start="201:20" pos:end="201:38"><name pos:start="201:20" pos:end="201:38">AVERROR_INVALIDDATA</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="207:5" pos:end="215:5"><if pos:start="207:5" pos:end="215:5">if <condition pos:start="207:8" pos:end="207:30">(<expr pos:start="207:9" pos:end="207:29"><call pos:start="207:9" pos:end="207:25"><name pos:start="207:9" pos:end="207:21">get_bits_left</name><argument_list pos:start="207:22" pos:end="207:25">(<argument pos:start="207:23" pos:end="207:24"><expr pos:start="207:23" pos:end="207:24"><name pos:start="207:23" pos:end="207:24">gb</name></expr></argument>)</argument_list></call> <operator pos:start="207:27" pos:end="207:27">&lt;</operator> <literal type="number" pos:start="207:29" pos:end="207:29">0</literal></expr>)</condition> <block pos:start="207:32" pos:end="215:5">{<block_content pos:start="209:9" pos:end="213:35">

        <expr_stmt pos:start="209:9" pos:end="211:64"><expr pos:start="209:9" pos:end="211:63"><call pos:start="209:9" pos:end="211:63"><name pos:start="209:9" pos:end="209:14">av_log</name><argument_list pos:start="209:15" pos:end="211:63">(<argument pos:start="209:16" pos:end="209:20"><expr pos:start="209:16" pos:end="209:20"><name pos:start="209:16" pos:end="209:20">avctx</name></expr></argument>, <argument pos:start="209:23" pos:end="209:34"><expr pos:start="209:23" pos:end="209:34"><name pos:start="209:23" pos:end="209:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="211:16" pos:end="211:42"><expr pos:start="211:16" pos:end="211:42"><literal type="string" pos:start="211:16" pos:end="211:42">"Overread VUI by %d bits\n"</literal></expr></argument>, <argument pos:start="211:45" pos:end="211:62"><expr pos:start="211:45" pos:end="211:62"><operator pos:start="211:45" pos:end="211:45">-</operator><call pos:start="211:46" pos:end="211:62"><name pos:start="211:46" pos:end="211:58">get_bits_left</name><argument_list pos:start="211:59" pos:end="211:62">(<argument pos:start="211:60" pos:end="211:61"><expr pos:start="211:60" pos:end="211:61"><name pos:start="211:60" pos:end="211:61">gb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="213:9" pos:end="213:35">return <expr pos:start="213:16" pos:end="213:34"><name pos:start="213:16" pos:end="213:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="219:5" pos:end="219:13">return <expr pos:start="219:12" pos:end="219:12"><literal type="number" pos:start="219:12" pos:end="219:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
