<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/228.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">http_proxy_open</name><parameter_list pos:start="1:27" pos:end="1:69">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:37">URLContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">h</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><specifier pos:start="1:43" pos:end="1:47">const</specifier> <name pos:start="1:49" pos:end="1:52">char</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">uri</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:68"><decl pos:start="1:60" pos:end="1:68"><type pos:start="1:60" pos:end="1:68"><name pos:start="1:60" pos:end="1:62">int</name></type> <name pos:start="1:64" pos:end="1:68">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:15">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">HTTPContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:23"><name pos:start="7:10" pos:end="7:17">hostname</name><index pos:start="7:18" pos:end="7:23">[<expr pos:start="7:19" pos:end="7:22"><literal type="number" pos:start="7:19" pos:end="7:22">1024</literal></expr>]</index></name></decl>, <decl pos:start="7:26" pos:end="7:38"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:32">hoststr</name><index pos:start="7:33" pos:end="7:38">[<expr pos:start="7:34" pos:end="7:37"><literal type="number" pos:start="7:34" pos:end="7:37">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:19"><name pos:start="9:10" pos:end="9:13">auth</name><index pos:start="9:14" pos:end="9:19">[<expr pos:start="9:15" pos:end="9:18"><literal type="number" pos:start="9:15" pos:end="9:18">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:22" pos:end="9:34"><type ref="prev" pos:start="9:5" pos:end="9:8"/><name pos:start="9:22" pos:end="9:34"><name pos:start="9:22" pos:end="9:28">pathbuf</name><index pos:start="9:29" pos:end="9:34">[<expr pos:start="9:30" pos:end="9:33"><literal type="number" pos:start="9:30" pos:end="9:33">1024</literal></expr>]</index></name></decl>, <decl pos:start="9:37" pos:end="9:41"><type ref="prev" pos:start="9:5" pos:end="9:8"><modifier pos:start="9:37" pos:end="9:37">*</modifier></type><name pos:start="9:38" pos:end="9:41">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:23"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:23"><name pos:start="11:10" pos:end="11:18">lower_url</name><index pos:start="11:19" pos:end="11:23">[<expr pos:start="11:20" pos:end="11:22"><literal type="number" pos:start="11:20" pos:end="11:22">100</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">port</name></decl>, <decl pos:start="13:15" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:15" pos:end="13:17">ret</name> <init pos:start="13:19" pos:end="13:21">= <expr pos:start="13:21" pos:end="13:21"><literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr></init></decl>, <decl pos:start="13:24" pos:end="13:35"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:24" pos:end="13:31">attempts</name> <init pos:start="13:33" pos:end="13:35">= <expr pos:start="13:35" pos:end="13:35"><literal type="number" pos:start="13:35" pos:end="13:35">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">HTTPAuthType</name></type> <name pos:start="15:18" pos:end="15:30">cur_auth_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:17">authstr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:16"><decl pos:start="19:5" pos:end="19:15"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:15">new_loc</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:18"><name pos:start="23:5" pos:end="23:5">h</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:18">is_streamed</name></name> <operator pos:start="23:20" pos:end="23:20">=</operator> <literal type="number" pos:start="23:22" pos:end="23:22">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="29:48"><expr pos:start="27:5" pos:end="29:47"><call pos:start="27:5" pos:end="29:47"><name pos:start="27:5" pos:end="27:16">av_url_split</name><argument_list pos:start="27:17" pos:end="29:47">(<argument pos:start="27:18" pos:end="27:21"><expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">NULL</name></expr></argument>, <argument pos:start="27:24" pos:end="27:24"><expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr></argument>, <argument pos:start="27:27" pos:end="27:30"><expr pos:start="27:27" pos:end="27:30"><name pos:start="27:27" pos:end="27:30">auth</name></expr></argument>, <argument pos:start="27:33" pos:end="27:44"><expr pos:start="27:33" pos:end="27:44"><sizeof pos:start="27:33" pos:end="27:44">sizeof<argument_list pos:start="27:39" pos:end="27:44">(<argument pos:start="27:40" pos:end="27:43"><expr pos:start="27:40" pos:end="27:43"><name pos:start="27:40" pos:end="27:43">auth</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:47" pos:end="27:54"><expr pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:54">hostname</name></expr></argument>, <argument pos:start="27:57" pos:end="27:72"><expr pos:start="27:57" pos:end="27:72"><sizeof pos:start="27:57" pos:end="27:72">sizeof<argument_list pos:start="27:63" pos:end="27:72">(<argument pos:start="27:64" pos:end="27:71"><expr pos:start="27:64" pos:end="27:71"><name pos:start="27:64" pos:end="27:71">hostname</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="27:75" pos:end="27:79"><expr pos:start="27:75" pos:end="27:79"><operator pos:start="27:75" pos:end="27:75">&amp;</operator><name pos:start="27:76" pos:end="27:79">port</name></expr></argument>,

                 <argument pos:start="29:18" pos:end="29:24"><expr pos:start="29:18" pos:end="29:24"><name pos:start="29:18" pos:end="29:24">pathbuf</name></expr></argument>, <argument pos:start="29:27" pos:end="29:41"><expr pos:start="29:27" pos:end="29:41"><sizeof pos:start="29:27" pos:end="29:41">sizeof<argument_list pos:start="29:33" pos:end="29:41">(<argument pos:start="29:34" pos:end="29:40"><expr pos:start="29:34" pos:end="29:40"><name pos:start="29:34" pos:end="29:40">pathbuf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:44" pos:end="29:46"><expr pos:start="29:44" pos:end="29:46"><name pos:start="29:44" pos:end="29:46">uri</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:76"><expr pos:start="31:5" pos:end="31:75"><call pos:start="31:5" pos:end="31:75"><name pos:start="31:5" pos:end="31:15">ff_url_join</name><argument_list pos:start="31:16" pos:end="31:75">(<argument pos:start="31:17" pos:end="31:23"><expr pos:start="31:17" pos:end="31:23"><name pos:start="31:17" pos:end="31:23">hoststr</name></expr></argument>, <argument pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:40"><sizeof pos:start="31:26" pos:end="31:40">sizeof<argument_list pos:start="31:32" pos:end="31:40">(<argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><name pos:start="31:33" pos:end="31:39">hoststr</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="31:43" pos:end="31:46"><expr pos:start="31:43" pos:end="31:46"><name pos:start="31:43" pos:end="31:46">NULL</name></expr></argument>, <argument pos:start="31:49" pos:end="31:52"><expr pos:start="31:49" pos:end="31:52"><name pos:start="31:49" pos:end="31:52">NULL</name></expr></argument>, <argument pos:start="31:55" pos:end="31:62"><expr pos:start="31:55" pos:end="31:62"><name pos:start="31:55" pos:end="31:62">hostname</name></expr></argument>, <argument pos:start="31:65" pos:end="31:68"><expr pos:start="31:65" pos:end="31:68"><name pos:start="31:65" pos:end="31:68">port</name></expr></argument>, <argument pos:start="31:71" pos:end="31:74"><expr pos:start="31:71" pos:end="31:74"><name pos:start="31:71" pos:end="31:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:8">path</name> <operator pos:start="33:10" pos:end="33:10">=</operator> <name pos:start="33:12" pos:end="33:18">pathbuf</name></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="37:15"><if pos:start="35:5" pos:end="37:15">if <condition pos:start="35:8" pos:end="35:21">(<expr pos:start="35:9" pos:end="35:20"><operator pos:start="35:9" pos:end="35:9">*</operator><name pos:start="35:10" pos:end="35:13">path</name> <operator pos:start="35:15" pos:end="35:16">==</operator> <literal type="char" pos:start="35:18" pos:end="35:20">'/'</literal></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:15"><block_content pos:start="37:9" pos:end="37:15">

        <expr_stmt pos:start="37:9" pos:end="37:15"><expr pos:start="37:9" pos:end="37:14"><name pos:start="37:9" pos:end="37:12">path</name><operator pos:start="37:13" pos:end="37:14">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:22"><expr pos:start="41:5" pos:end="43:21"><call pos:start="41:5" pos:end="43:21"><name pos:start="41:5" pos:end="41:15">ff_url_join</name><argument_list pos:start="41:16" pos:end="43:21">(<argument pos:start="41:17" pos:end="41:25"><expr pos:start="41:17" pos:end="41:25"><name pos:start="41:17" pos:end="41:25">lower_url</name></expr></argument>, <argument pos:start="41:28" pos:end="41:44"><expr pos:start="41:28" pos:end="41:44"><sizeof pos:start="41:28" pos:end="41:44">sizeof<argument_list pos:start="41:34" pos:end="41:44">(<argument pos:start="41:35" pos:end="41:43"><expr pos:start="41:35" pos:end="41:43"><name pos:start="41:35" pos:end="41:43">lower_url</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="41:47" pos:end="41:51"><expr pos:start="41:47" pos:end="41:51"><literal type="string" pos:start="41:47" pos:end="41:51">"tcp"</literal></expr></argument>, <argument pos:start="41:54" pos:end="41:57"><expr pos:start="41:54" pos:end="41:57"><name pos:start="41:54" pos:end="41:57">NULL</name></expr></argument>, <argument pos:start="41:60" pos:end="41:67"><expr pos:start="41:60" pos:end="41:67"><name pos:start="41:60" pos:end="41:67">hostname</name></expr></argument>, <argument pos:start="41:70" pos:end="41:73"><expr pos:start="41:70" pos:end="41:73"><name pos:start="41:70" pos:end="41:73">port</name></expr></argument>,

                <argument pos:start="43:17" pos:end="43:20"><expr pos:start="43:17" pos:end="43:20"><name pos:start="43:17" pos:end="43:20">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="45:1" pos:end="45:5"><name pos:start="45:1" pos:end="45:4">redo</name>:</label>

    <expr_stmt pos:start="47:5" pos:end="49:51"><expr pos:start="47:5" pos:end="49:50"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="49:50"><name pos:start="47:11" pos:end="47:20">ffurl_open</name><argument_list pos:start="47:21" pos:end="49:50">(<argument pos:start="47:22" pos:end="47:27"><expr pos:start="47:22" pos:end="47:27"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:27"><name pos:start="47:23" pos:end="47:23">s</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:27">hd</name></name></expr></argument>, <argument pos:start="47:30" pos:end="47:38"><expr pos:start="47:30" pos:end="47:38"><name pos:start="47:30" pos:end="47:38">lower_url</name></expr></argument>, <argument pos:start="47:41" pos:end="47:60"><expr pos:start="47:41" pos:end="47:60"><name pos:start="47:41" pos:end="47:60">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                     <argument pos:start="49:22" pos:end="49:43"><expr pos:start="49:22" pos:end="49:43"><operator pos:start="49:22" pos:end="49:22">&amp;</operator><name pos:start="49:23" pos:end="49:43"><name pos:start="49:23" pos:end="49:23">h</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:43">interrupt_callback</name></name></expr></argument>, <argument pos:start="49:46" pos:end="49:49"><expr pos:start="49:46" pos:end="49:49"><name pos:start="49:46" pos:end="49:49">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="53:19"><if pos:start="51:5" pos:end="53:19">if <condition pos:start="51:8" pos:end="51:16">(<expr pos:start="51:9" pos:end="51:15"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">&lt;</operator> <literal type="number" pos:start="51:15" pos:end="51:15">0</literal></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:19"><block_content pos:start="53:9" pos:end="53:19">

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="59:60"><expr pos:start="57:5" pos:end="59:59"><name pos:start="57:5" pos:end="57:11">authstr</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <call pos:start="57:15" pos:end="59:59"><name pos:start="57:15" pos:end="57:42">ff_http_auth_create_response</name><argument_list pos:start="57:43" pos:end="59:59">(<argument pos:start="57:44" pos:end="57:63"><expr pos:start="57:44" pos:end="57:63"><operator pos:start="57:44" pos:end="57:44">&amp;</operator><name pos:start="57:45" pos:end="57:63"><name pos:start="57:45" pos:end="57:45">s</name><operator pos:start="57:46" pos:end="57:47">-&gt;</operator><name pos:start="57:48" pos:end="57:63">proxy_auth_state</name></name></expr></argument>, <argument pos:start="57:66" pos:end="57:69"><expr pos:start="57:66" pos:end="57:69"><name pos:start="57:66" pos:end="57:69">auth</name></expr></argument>,

                                           <argument pos:start="59:44" pos:end="59:47"><expr pos:start="59:44" pos:end="59:47"><name pos:start="59:44" pos:end="59:47">path</name></expr></argument>, <argument pos:start="59:50" pos:end="59:58"><expr pos:start="59:50" pos:end="59:58"><literal type="string" pos:start="59:50" pos:end="59:58">"CONNECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="77:62"><expr pos:start="61:5" pos:end="77:61"><call pos:start="61:5" pos:end="77:61"><name pos:start="61:5" pos:end="61:12">snprintf</name><argument_list pos:start="61:13" pos:end="77:61">(<argument pos:start="61:14" pos:end="61:22"><expr pos:start="61:14" pos:end="61:22"><name pos:start="61:14" pos:end="61:22"><name pos:start="61:14" pos:end="61:14">s</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:22">buffer</name></name></expr></argument>, <argument pos:start="61:25" pos:end="61:41"><expr pos:start="61:25" pos:end="61:41"><sizeof pos:start="61:25" pos:end="61:41">sizeof<argument_list pos:start="61:31" pos:end="61:41">(<argument pos:start="61:32" pos:end="61:40"><expr pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:32">s</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:40">buffer</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="63:14" pos:end="71:19"><expr pos:start="63:14" pos:end="71:19"><literal type="string" pos:start="63:14" pos:end="63:38">"CONNECT %s HTTP/1.1\r\n"</literal>

             <literal type="string" pos:start="65:14" pos:end="65:27">"Host: %s\r\n"</literal>

             <literal type="string" pos:start="67:14" pos:end="67:36">"Connection: close\r\n"</literal>

             <literal type="string" pos:start="69:14" pos:end="69:19">"%s%s"</literal>

             <literal type="string" pos:start="71:14" pos:end="71:19">"\r\n"</literal></expr></argument>,

             <argument pos:start="73:14" pos:end="73:17"><expr pos:start="73:14" pos:end="73:17"><name pos:start="73:14" pos:end="73:17">path</name></expr></argument>,

             <argument pos:start="75:14" pos:end="75:20"><expr pos:start="75:14" pos:end="75:20"><name pos:start="75:14" pos:end="75:20">hoststr</name></expr></argument>,

             <argument pos:start="77:14" pos:end="77:36"><expr pos:start="77:14" pos:end="77:36"><ternary pos:start="77:14" pos:end="77:36"><condition pos:start="77:14" pos:end="77:22"><expr pos:start="77:14" pos:end="77:20"><name pos:start="77:14" pos:end="77:20">authstr</name></expr> ?</condition><then pos:start="77:24" pos:end="77:31"> <expr pos:start="77:24" pos:end="77:31"><literal type="string" pos:start="77:24" pos:end="77:31">"Proxy-"</literal></expr> </then><else pos:start="77:33" pos:end="77:36">: <expr pos:start="77:35" pos:end="77:36"><literal type="string" pos:start="77:35" pos:end="77:36">""</literal></expr></else></ternary></expr></argument>, <argument pos:start="77:39" pos:end="77:60"><expr pos:start="77:39" pos:end="77:60"><ternary pos:start="77:39" pos:end="77:60"><condition pos:start="77:39" pos:end="77:47"><expr pos:start="77:39" pos:end="77:45"><name pos:start="77:39" pos:end="77:45">authstr</name></expr> ?</condition><then pos:start="77:49" pos:end="77:55"> <expr pos:start="77:49" pos:end="77:55"><name pos:start="77:49" pos:end="77:55">authstr</name></expr> </then><else pos:start="77:57" pos:end="77:60">: <expr pos:start="77:59" pos:end="77:60"><literal type="string" pos:start="77:59" pos:end="77:60">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:23"><expr pos:start="79:5" pos:end="79:22"><call pos:start="79:5" pos:end="79:22"><name pos:start="79:5" pos:end="79:12">av_freep</name><argument_list pos:start="79:13" pos:end="79:22">(<argument pos:start="79:14" pos:end="79:21"><expr pos:start="79:14" pos:end="79:21"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:21">authstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="83:5" pos:end="85:18"><if pos:start="83:5" pos:end="85:18">if <condition pos:start="83:8" pos:end="83:69">(<expr pos:start="83:9" pos:end="83:68"><operator pos:start="83:9" pos:end="83:9">(</operator><name pos:start="83:10" pos:end="83:12">ret</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <call pos:start="83:16" pos:end="83:63"><name pos:start="83:16" pos:end="83:26">ffurl_write</name><argument_list pos:start="83:27" pos:end="83:63">(<argument pos:start="83:28" pos:end="83:32"><expr pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:32"><name pos:start="83:28" pos:end="83:28">s</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:32">hd</name></name></expr></argument>, <argument pos:start="83:35" pos:end="83:43"><expr pos:start="83:35" pos:end="83:43"><name pos:start="83:35" pos:end="83:43"><name pos:start="83:35" pos:end="83:35">s</name><operator pos:start="83:36" pos:end="83:37">-&gt;</operator><name pos:start="83:38" pos:end="83:43">buffer</name></name></expr></argument>, <argument pos:start="83:46" pos:end="83:62"><expr pos:start="83:46" pos:end="83:62"><call pos:start="83:46" pos:end="83:62"><name pos:start="83:46" pos:end="83:51">strlen</name><argument_list pos:start="83:52" pos:end="83:62">(<argument pos:start="83:53" pos:end="83:61"><expr pos:start="83:53" pos:end="83:61"><name pos:start="83:53" pos:end="83:61"><name pos:start="83:53" pos:end="83:53">s</name><operator pos:start="83:54" pos:end="83:55">-&gt;</operator><name pos:start="83:56" pos:end="83:61">buffer</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call><operator pos:start="83:64" pos:end="83:64">)</operator> <operator pos:start="83:66" pos:end="83:66">&lt;</operator> <literal type="number" pos:start="83:68" pos:end="83:68">0</literal></expr>)</condition><block type="pseudo" pos:start="85:9" pos:end="85:18"><block_content pos:start="85:9" pos:end="85:18">

        <goto pos:start="85:9" pos:end="85:18">goto <name pos:start="85:14" pos:end="85:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:27"><expr pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:14"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:14">buf_ptr</name></name> <operator pos:start="89:16" pos:end="89:16">=</operator> <name pos:start="89:18" pos:end="89:26"><name pos:start="89:18" pos:end="89:18">s</name><operator pos:start="89:19" pos:end="89:20">-&gt;</operator><name pos:start="89:21" pos:end="89:26">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:27"><expr pos:start="91:5" pos:end="91:26"><name pos:start="91:5" pos:end="91:14"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:14">buf_end</name></name> <operator pos:start="91:16" pos:end="91:16">=</operator> <name pos:start="91:18" pos:end="91:26"><name pos:start="91:18" pos:end="91:18">s</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:26">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:22"><expr pos:start="93:5" pos:end="93:21"><name pos:start="93:5" pos:end="93:17"><name pos:start="93:5" pos:end="93:5">s</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:17">line_count</name></name> <operator pos:start="93:19" pos:end="93:19">=</operator> <literal type="number" pos:start="93:21" pos:end="93:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:21"><expr pos:start="95:5" pos:end="95:20"><name pos:start="95:5" pos:end="95:15"><name pos:start="95:5" pos:end="95:5">s</name><operator pos:start="95:6" pos:end="95:7">-&gt;</operator><name pos:start="95:8" pos:end="95:15">filesize</name></name> <operator pos:start="95:17" pos:end="95:17">=</operator> <operator pos:start="95:19" pos:end="95:19">-</operator><literal type="number" pos:start="95:20" pos:end="95:20">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:50"><expr pos:start="97:5" pos:end="97:49"><name pos:start="97:5" pos:end="97:17">cur_auth_type</name> <operator pos:start="97:19" pos:end="97:19">=</operator> <name pos:start="97:21" pos:end="97:49"><name pos:start="97:21" pos:end="97:21">s</name><operator pos:start="97:22" pos:end="97:23">-&gt;</operator><name pos:start="97:24" pos:end="97:39">proxy_auth_state</name><operator pos:start="97:40" pos:end="97:40">.</operator><name pos:start="97:41" pos:end="97:49">auth_type</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="101:5" pos:end="117:7">/* Note: This uses buffering, potentially reading more than the

     * HTTP header. If tunneling a protocol where the server starts

     * the conversation, we might buffer part of that here, too.

     * Reading that requires using the proper ffurl_read() function

     * on this URLContext, not using the fd directly (as the tls

     * protocol does). This shouldn't be an issue for tls though,

     * since the client starts the conversation there, so there

     * is no extra data that we might buffer up here.

     */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:40"><expr pos:start="119:5" pos:end="119:39"><name pos:start="119:5" pos:end="119:7">ret</name> <operator pos:start="119:9" pos:end="119:9">=</operator> <call pos:start="119:11" pos:end="119:39"><name pos:start="119:11" pos:end="119:26">http_read_header</name><argument_list pos:start="119:27" pos:end="119:39">(<argument pos:start="119:28" pos:end="119:28"><expr pos:start="119:28" pos:end="119:28"><name pos:start="119:28" pos:end="119:28">h</name></expr></argument>, <argument pos:start="119:31" pos:end="119:38"><expr pos:start="119:31" pos:end="119:38"><operator pos:start="119:31" pos:end="119:31">&amp;</operator><name pos:start="119:32" pos:end="119:38">new_loc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="123:18"><if pos:start="121:5" pos:end="123:18">if <condition pos:start="121:8" pos:end="121:16">(<expr pos:start="121:9" pos:end="121:15"><name pos:start="121:9" pos:end="121:11">ret</name> <operator pos:start="121:13" pos:end="121:13">&lt;</operator> <literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>)</condition><block type="pseudo" pos:start="123:9" pos:end="123:18"><block_content pos:start="123:9" pos:end="123:18">

        <goto pos:start="123:9" pos:end="123:18">goto <name pos:start="123:14" pos:end="123:17">fail</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:15"><expr pos:start="127:5" pos:end="127:14"><name pos:start="127:5" pos:end="127:12">attempts</name><operator pos:start="127:13" pos:end="127:14">++</operator></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="139:5"><if pos:start="129:5" pos:end="139:5">if <condition pos:start="129:8" pos:end="133:72">(<expr pos:start="129:9" pos:end="133:71"><name pos:start="129:9" pos:end="129:20"><name pos:start="129:9" pos:end="129:9">s</name><operator pos:start="129:10" pos:end="129:11">-&gt;</operator><name pos:start="129:12" pos:end="129:20">http_code</name></name> <operator pos:start="129:22" pos:end="129:23">==</operator> <literal type="number" pos:start="129:25" pos:end="129:27">407</literal> <operator pos:start="129:29" pos:end="129:30">&amp;&amp;</operator>

        <operator pos:start="131:9" pos:end="131:9">(</operator><name pos:start="131:10" pos:end="131:22">cur_auth_type</name> <operator pos:start="131:24" pos:end="131:25">==</operator> <name pos:start="131:27" pos:end="131:40">HTTP_AUTH_NONE</name> <operator pos:start="131:42" pos:end="131:43">||</operator> <name pos:start="131:45" pos:end="131:69"><name pos:start="131:45" pos:end="131:45">s</name><operator pos:start="131:46" pos:end="131:47">-&gt;</operator><name pos:start="131:48" pos:end="131:63">proxy_auth_state</name><operator pos:start="131:64" pos:end="131:64">.</operator><name pos:start="131:65" pos:end="131:69">stale</name></name><operator pos:start="131:70" pos:end="131:70">)</operator> <operator pos:start="131:72" pos:end="131:73">&amp;&amp;</operator>

        <name pos:start="133:9" pos:end="133:37"><name pos:start="133:9" pos:end="133:9">s</name><operator pos:start="133:10" pos:end="133:11">-&gt;</operator><name pos:start="133:12" pos:end="133:27">proxy_auth_state</name><operator pos:start="133:28" pos:end="133:28">.</operator><name pos:start="133:29" pos:end="133:37">auth_type</name></name> <operator pos:start="133:39" pos:end="133:40">!=</operator> <name pos:start="133:42" pos:end="133:55">HTTP_AUTH_NONE</name> <operator pos:start="133:57" pos:end="133:58">&amp;&amp;</operator> <name pos:start="133:60" pos:end="133:67">attempts</name> <operator pos:start="133:69" pos:end="133:69">&lt;</operator> <literal type="number" pos:start="133:71" pos:end="133:71">2</literal></expr>)</condition> <block pos:start="133:74" pos:end="139:5">{<block_content pos:start="135:9" pos:end="137:18">

        <expr_stmt pos:start="135:9" pos:end="135:29"><expr pos:start="135:9" pos:end="135:28"><call pos:start="135:9" pos:end="135:28"><name pos:start="135:9" pos:end="135:20">ffurl_closep</name><argument_list pos:start="135:21" pos:end="135:28">(<argument pos:start="135:22" pos:end="135:27"><expr pos:start="135:22" pos:end="135:27"><operator pos:start="135:22" pos:end="135:22">&amp;</operator><name pos:start="135:23" pos:end="135:27"><name pos:start="135:23" pos:end="135:23">s</name><operator pos:start="135:24" pos:end="135:25">-&gt;</operator><name pos:start="135:26" pos:end="135:27">hd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="137:9" pos:end="137:18">goto <name pos:start="137:14" pos:end="137:17">redo</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="143:5" pos:end="145:17"><if pos:start="143:5" pos:end="145:17">if <condition pos:start="143:8" pos:end="143:27">(<expr pos:start="143:9" pos:end="143:26"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:20">http_code</name></name> <operator pos:start="143:22" pos:end="143:22">&lt;</operator> <literal type="number" pos:start="143:24" pos:end="143:26">400</literal></expr>)</condition><block type="pseudo" pos:start="145:9" pos:end="145:17"><block_content pos:start="145:9" pos:end="145:17">

        <return pos:start="145:9" pos:end="145:17">return <expr pos:start="145:16" pos:end="145:16"><literal type="number" pos:start="145:16" pos:end="145:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:23"><expr pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:7">ret</name> <operator pos:start="147:9" pos:end="147:9">=</operator> <call pos:start="147:11" pos:end="147:22"><name pos:start="147:11" pos:end="147:17">AVERROR</name><argument_list pos:start="147:18" pos:end="147:22">(<argument pos:start="147:19" pos:end="147:21"><expr pos:start="147:19" pos:end="147:21"><name pos:start="147:19" pos:end="147:21">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="151:1" pos:end="151:5"><name pos:start="151:1" pos:end="151:4">fail</name>:</label>

    <expr_stmt pos:start="153:5" pos:end="153:24"><expr pos:start="153:5" pos:end="153:23"><call pos:start="153:5" pos:end="153:23"><name pos:start="153:5" pos:end="153:20">http_proxy_close</name><argument_list pos:start="153:21" pos:end="153:23">(<argument pos:start="153:22" pos:end="153:22"><expr pos:start="153:22" pos:end="153:22"><name pos:start="153:22" pos:end="153:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
