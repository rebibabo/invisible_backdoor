<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22160.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">apic_reset_common</name><parameter_list pos:start="1:30" pos:end="1:45">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:41">DeviceState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:5">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:67"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">APICCommonState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:22">s</name> <init pos:start="5:24" pos:end="5:67">= <expr pos:start="5:26" pos:end="5:67"><call pos:start="5:26" pos:end="5:67"><name pos:start="5:26" pos:end="5:34">DO_UPCAST</name><argument_list pos:start="5:35" pos:end="5:67">(<argument pos:start="5:36" pos:end="5:50"><expr pos:start="5:36" pos:end="5:50"><name pos:start="5:36" pos:end="5:50">APICCommonState</name></expr></argument>, <argument pos:start="5:53" pos:end="5:63"><expr pos:start="5:53" pos:end="5:63"><name pos:start="5:53" pos:end="5:63"><name pos:start="5:53" pos:end="5:58">busdev</name><operator pos:start="5:59" pos:end="5:59">.</operator><name pos:start="5:60" pos:end="5:63">qdev</name></name></expr></argument>, <argument pos:start="5:66" pos:end="5:66"><expr pos:start="5:66" pos:end="5:66"><name pos:start="5:66" pos:end="5:66">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:53"><decl pos:start="7:5" pos:end="7:52"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">APICCommonClass</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:25">info</name> <init pos:start="7:27" pos:end="7:52">= <expr pos:start="7:29" pos:end="7:52"><call pos:start="7:29" pos:end="7:52"><name pos:start="7:29" pos:end="7:49">APIC_COMMON_GET_CLASS</name><argument_list pos:start="7:50" pos:end="7:52">(<argument pos:start="7:51" pos:end="7:51"><expr pos:start="7:51" pos:end="7:51"><name pos:start="7:51" pos:end="7:51">s</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:12">bsp</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:7">bsp</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:32"><name pos:start="13:11" pos:end="13:20">cpu_is_bsp</name><argument_list pos:start="13:21" pos:end="13:32">(<argument pos:start="13:22" pos:end="13:31"><expr pos:start="13:22" pos:end="13:31"><name pos:start="13:22" pos:end="13:31"><name pos:start="13:22" pos:end="13:22">s</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:31">cpu_env</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:69"><expr pos:start="15:5" pos:end="17:68"><name pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:15">apicbase</name></name> <operator pos:start="15:17" pos:end="15:17">=</operator> <literal type="number" pos:start="15:19" pos:end="15:28">0xfee00000</literal> <operator pos:start="15:30" pos:end="15:30">|</operator>

        <operator pos:start="17:9" pos:end="17:9">(</operator><ternary pos:start="17:10" pos:end="17:40"><condition pos:start="17:10" pos:end="17:14"><expr pos:start="17:10" pos:end="17:12"><name pos:start="17:10" pos:end="17:12">bsp</name></expr> ?</condition><then pos:start="17:16" pos:end="17:36"> <expr pos:start="17:16" pos:end="17:36"><name pos:start="17:16" pos:end="17:36">MSR_IA32_APICBASE_BSP</name></expr> </then><else pos:start="17:38" pos:end="17:40">: <expr pos:start="17:40" pos:end="17:40"><literal type="number" pos:start="17:40" pos:end="17:40">0</literal></expr></else></ternary><operator pos:start="17:41" pos:end="17:41">)</operator> <operator pos:start="17:43" pos:end="17:43">|</operator> <name pos:start="17:45" pos:end="17:68">MSR_IA32_APICBASE_ENABLE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:23"><expr pos:start="21:5" pos:end="21:22"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:18">vapic_paddr</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <literal type="number" pos:start="21:22" pos:end="21:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:27"><name pos:start="23:5" pos:end="23:8">info</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:27">vapic_base_update</name></name><argument_list pos:start="23:28" pos:end="23:30">(<argument pos:start="23:29" pos:end="23:29"><expr pos:start="23:29" pos:end="23:29"><name pos:start="23:29" pos:end="23:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:23"><expr pos:start="27:5" pos:end="27:22"><call pos:start="27:5" pos:end="27:22"><name pos:start="27:5" pos:end="27:19">apic_init_reset</name><argument_list pos:start="27:20" pos:end="27:22">(<argument pos:start="27:21" pos:end="27:21"><expr pos:start="27:21" pos:end="27:21"><name pos:start="27:21" pos:end="27:21">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:12">(<expr pos:start="31:9" pos:end="31:11"><name pos:start="31:9" pos:end="31:11">bsp</name></expr>)</condition> <block pos:start="31:14" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:39">

        <comment type="block" pos:start="33:9" pos:end="41:11">/*

         * LINT0 delivery mode on CPU #0 is set to ExtInt at initialization

         * time typically by BIOS, so PIC interrupt can be delivered to the

         * processor when local APIC is enabled.

         */</comment>

        <expr_stmt pos:start="43:9" pos:end="43:39"><expr pos:start="43:9" pos:end="43:38"><name pos:start="43:9" pos:end="43:30"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:14">lvt</name><index pos:start="43:15" pos:end="43:30">[<expr pos:start="43:16" pos:end="43:29"><name pos:start="43:16" pos:end="43:29">APIC_LVT_LINT0</name></expr>]</index></name> <operator pos:start="43:32" pos:end="43:32">=</operator> <literal type="number" pos:start="43:34" pos:end="43:38">0x700</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
