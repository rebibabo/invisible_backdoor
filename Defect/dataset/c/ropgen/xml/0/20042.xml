<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20042.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:33">parse_nal_units</name><parameter_list pos:start="1:34" pos:end="3:55">(<parameter pos:start="1:35" pos:end="1:57"><decl pos:start="1:35" pos:end="1:57"><type pos:start="1:35" pos:end="1:57"><name pos:start="1:35" pos:end="1:54">AVCodecParserContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:80"><decl pos:start="1:60" pos:end="1:80"><type pos:start="1:60" pos:end="1:80"><name pos:start="1:60" pos:end="1:73">AVCodecContext</name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:80">avctx</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:40"><decl pos:start="3:23" pos:end="3:40"><type pos:start="3:23" pos:end="3:40"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:35">uint8_t</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:40">buf</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:54"><decl pos:start="3:43" pos:end="3:54"><type pos:start="3:43" pos:end="3:54"><name pos:start="3:43" pos:end="3:45">int</name></type> <name pos:start="3:47" pos:end="3:54">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="343:1">{<block_content pos:start="7:5" pos:end="341:14">

    <decl_stmt pos:start="7:5" pos:end="7:63"><decl pos:start="7:5" pos:end="7:62"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:15">HEVCContext</name>   <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">h</name>  <init pos:start="7:23" pos:end="7:62">= <expr pos:start="7:25" pos:end="7:62"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><operator pos:start="7:26" pos:end="7:26">(</operator><operator pos:start="7:27" pos:end="7:27">(</operator><name pos:start="7:28" pos:end="7:43">HEVCParseContext</name> <operator pos:start="7:45" pos:end="7:45">*</operator><operator pos:start="7:46" pos:end="7:46">)</operator><name pos:start="7:47" pos:end="7:58"><name pos:start="7:47" pos:end="7:47">s</name><operator pos:start="7:48" pos:end="7:49">-&gt;</operator><name pos:start="7:50" pos:end="7:58">priv_data</name></name><operator pos:start="7:59" pos:end="7:59">)</operator><operator pos:start="7:60" pos:end="7:61">-&gt;</operator><name pos:start="7:62" pos:end="7:62">h</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">GetBitContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">gb</name> <init pos:start="9:23" pos:end="9:38">= <expr pos:start="9:25" pos:end="9:38"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:38"><name pos:start="9:26" pos:end="9:26">h</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:34">HEVClc</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:38">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:15">SliceHeader</name>   <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">sh</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">h</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">sh</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">buf_end</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:32">buf</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">state</name> <init pos:start="15:15" pos:end="15:18">= <expr pos:start="15:17" pos:end="15:18"><operator pos:start="15:17" pos:end="15:17">-</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></init></decl>, <decl pos:start="15:21" pos:end="15:21"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:21">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:11">HEVCNAL</name> <modifier pos:start="17:13" pos:end="17:13">*</modifier></type><name pos:start="17:14" pos:end="17:16">nal</name></decl>;</decl_stmt>



    <comment type="block" pos:start="21:5" pos:end="21:38">/* set some sane default values */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">pict_type</name></name>         <operator pos:start="23:26" pos:end="23:26">=</operator> <name pos:start="23:28" pos:end="23:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:29"><expr pos:start="25:5" pos:end="25:28"><name pos:start="25:5" pos:end="25:16"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:16">key_frame</name></name>         <operator pos:start="25:26" pos:end="25:26">=</operator> <literal type="number" pos:start="25:28" pos:end="25:28">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:56"><expr pos:start="27:5" pos:end="27:55"><name pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:24">picture_structure</name></name> <operator pos:start="27:26" pos:end="27:26">=</operator> <name pos:start="27:28" pos:end="27:55">AV_PICTURE_STRUCTURE_UNKNOWN</name></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:21"><expr pos:start="31:5" pos:end="31:20"><name pos:start="31:5" pos:end="31:12"><name pos:start="31:5" pos:end="31:5">h</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:12">avctx</name></name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:20">avctx</name></expr>;</expr_stmt>



    <if_stmt pos:start="35:5" pos:end="37:17"><if pos:start="35:5" pos:end="37:17">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:17">buf_size</name></expr>)</condition><block type="pseudo" pos:start="37:9" pos:end="37:17"><block_content pos:start="37:9" pos:end="37:17">

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="55:5"><if pos:start="41:5" pos:end="55:5">if <condition pos:start="41:8" pos:end="41:30">(<expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:9">h</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:25">nals_allocated</name></name> <operator pos:start="41:27" pos:end="41:27">&lt;</operator> <literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>)</condition> <block pos:start="41:32" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:30">

        <decl_stmt pos:start="43:9" pos:end="43:66"><decl pos:start="43:9" pos:end="43:65"><type pos:start="43:9" pos:end="43:17"><name pos:start="43:9" pos:end="43:15">HEVCNAL</name> <modifier pos:start="43:17" pos:end="43:17">*</modifier></type><name pos:start="43:18" pos:end="43:20">tmp</name> <init pos:start="43:22" pos:end="43:65">= <expr pos:start="43:24" pos:end="43:65"><call pos:start="43:24" pos:end="43:65"><name pos:start="43:24" pos:end="43:39">av_realloc_array</name><argument_list pos:start="43:40" pos:end="43:65">(<argument pos:start="43:41" pos:end="43:47"><expr pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:47"><name pos:start="43:41" pos:end="43:41">h</name><operator pos:start="43:42" pos:end="43:43">-&gt;</operator><name pos:start="43:44" pos:end="43:47">nals</name></name></expr></argument>, <argument pos:start="43:50" pos:end="43:50"><expr pos:start="43:50" pos:end="43:50"><literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr></argument>, <argument pos:start="43:53" pos:end="43:64"><expr pos:start="43:53" pos:end="43:64"><sizeof pos:start="43:53" pos:end="43:64">sizeof<argument_list pos:start="43:59" pos:end="43:64">(<argument pos:start="43:60" pos:end="43:63"><expr pos:start="43:60" pos:end="43:63"><operator pos:start="43:60" pos:end="43:60">*</operator><name pos:start="43:61" pos:end="43:63">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="45:9" pos:end="47:35"><if pos:start="45:9" pos:end="47:35">if <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:16">tmp</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:35"><block_content pos:start="47:13" pos:end="47:35">

            <return pos:start="47:13" pos:end="47:35">return <expr pos:start="47:20" pos:end="47:34"><call pos:start="47:20" pos:end="47:34"><name pos:start="47:20" pos:end="47:26">AVERROR</name><argument_list pos:start="47:27" pos:end="47:34">(<argument pos:start="47:28" pos:end="47:33"><expr pos:start="47:28" pos:end="47:33"><name pos:start="47:28" pos:end="47:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:9">h</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:15">nals</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:21">tmp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><call pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:14">memset</name><argument_list pos:start="51:15" pos:end="51:40">(<argument pos:start="51:16" pos:end="51:22"><expr pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:22"><name pos:start="51:16" pos:end="51:16">h</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:22">nals</name></name></expr></argument>, <argument pos:start="51:25" pos:end="51:25"><expr pos:start="51:25" pos:end="51:25"><literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr></argument>, <argument pos:start="51:28" pos:end="51:39"><expr pos:start="51:28" pos:end="51:39"><sizeof pos:start="51:28" pos:end="51:39">sizeof<argument_list pos:start="51:34" pos:end="51:39">(<argument pos:start="51:35" pos:end="51:38"><expr pos:start="51:35" pos:end="51:38"><operator pos:start="51:35" pos:end="51:35">*</operator><name pos:start="51:36" pos:end="51:38">tmp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:30"><expr pos:start="53:9" pos:end="53:29"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">h</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">nals_allocated</name></name> <operator pos:start="53:27" pos:end="53:27">=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:22"><expr pos:start="59:5" pos:end="59:21"><name pos:start="59:5" pos:end="59:7">nal</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <operator pos:start="59:11" pos:end="59:11">&amp;</operator><name pos:start="59:12" pos:end="59:21"><name pos:start="59:12" pos:end="59:12">h</name><operator pos:start="59:13" pos:end="59:14">-&gt;</operator><name pos:start="59:15" pos:end="59:18">nals</name><index pos:start="59:19" pos:end="59:21">[<expr pos:start="59:20" pos:end="59:20"><literal type="number" pos:start="59:20" pos:end="59:20">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <for pos:start="63:5" pos:end="335:5">for <control pos:start="63:9" pos:end="63:12">(<init pos:start="63:10" pos:end="63:10">;</init><condition pos:start="63:11" pos:end="63:11">;</condition><incr/>)</control> <block pos:start="63:14" pos:end="335:5">{<block_content pos:start="65:9" pos:end="333:24">

        <decl_stmt pos:start="65:9" pos:end="65:33"><decl pos:start="65:9" pos:end="65:22"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:22">src_length</name></decl>, <decl pos:start="65:25" pos:end="65:32"><type ref="prev" pos:start="65:9" pos:end="65:11"/><name pos:start="65:25" pos:end="65:32">consumed</name></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:59"><expr pos:start="67:9" pos:end="67:58"><name pos:start="67:9" pos:end="67:11">buf</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:58"><name pos:start="67:15" pos:end="67:36">avpriv_find_start_code</name><argument_list pos:start="67:37" pos:end="67:58">(<argument pos:start="67:38" pos:end="67:40"><expr pos:start="67:38" pos:end="67:40"><name pos:start="67:38" pos:end="67:40">buf</name></expr></argument>, <argument pos:start="67:43" pos:end="67:49"><expr pos:start="67:43" pos:end="67:49"><name pos:start="67:43" pos:end="67:49">buf_end</name></expr></argument>, <argument pos:start="67:52" pos:end="67:57"><expr pos:start="67:52" pos:end="67:57"><operator pos:start="67:52" pos:end="67:52">&amp;</operator><name pos:start="67:53" pos:end="67:57">state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:18"><if pos:start="69:9" pos:end="71:18">if <condition pos:start="69:12" pos:end="69:33">(<expr pos:start="69:13" pos:end="69:32"><operator pos:start="69:13" pos:end="69:14">--</operator><name pos:start="69:15" pos:end="69:17">buf</name> <operator pos:start="69:19" pos:end="69:19">+</operator> <literal type="number" pos:start="69:21" pos:end="69:21">2</literal> <operator pos:start="69:23" pos:end="69:24">&gt;=</operator> <name pos:start="69:26" pos:end="69:32">buf_end</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:18"><block_content pos:start="71:13" pos:end="71:18">

            <break pos:start="71:13" pos:end="71:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:35"><expr pos:start="73:9" pos:end="73:34"><name pos:start="73:9" pos:end="73:18">src_length</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <name pos:start="73:22" pos:end="73:28">buf_end</name> <operator pos:start="73:30" pos:end="73:30">-</operator> <name pos:start="73:32" pos:end="73:34">buf</name></expr>;</expr_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:24"><name pos:start="77:9" pos:end="77:9">h</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:24">nal_unit_type</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <operator pos:start="77:28" pos:end="77:28">(</operator><operator pos:start="77:29" pos:end="77:29">*</operator><name pos:start="77:30" pos:end="77:32">buf</name> <operator pos:start="77:34" pos:end="77:35">&gt;&gt;</operator> <literal type="number" pos:start="77:37" pos:end="77:37">1</literal><operator pos:start="77:38" pos:end="77:38">)</operator> <operator pos:start="77:40" pos:end="77:40">&amp;</operator> <literal type="number" pos:start="77:42" pos:end="77:45">0x3f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:51"><expr pos:start="79:9" pos:end="79:50"><name pos:start="79:9" pos:end="79:22"><name pos:start="79:9" pos:end="79:9">h</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:22">temporal_id</name></name>   <operator pos:start="79:26" pos:end="79:26">=</operator> <operator pos:start="79:28" pos:end="79:28">(</operator><operator pos:start="79:29" pos:end="79:29">*</operator><operator pos:start="79:30" pos:end="79:30">(</operator><name pos:start="79:31" pos:end="79:33">buf</name> <operator pos:start="79:35" pos:end="79:35">+</operator> <literal type="number" pos:start="79:37" pos:end="79:37">1</literal><operator pos:start="79:38" pos:end="79:38">)</operator> <operator pos:start="79:40" pos:end="79:40">&amp;</operator> <literal type="number" pos:start="79:42" pos:end="79:45">0x07</literal><operator pos:start="79:46" pos:end="79:46">)</operator> <operator pos:start="79:48" pos:end="79:48">-</operator> <literal type="number" pos:start="79:50" pos:end="79:50">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="89:9">if <condition pos:start="81:12" pos:end="81:44">(<expr pos:start="81:13" pos:end="81:43"><name pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:13">h</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:28">nal_unit_type</name></name> <operator pos:start="81:30" pos:end="81:31">&lt;=</operator> <name pos:start="81:33" pos:end="81:43">NAL_CRA_NUT</name></expr>)</condition> <block pos:start="81:46" pos:end="89:9">{<block_content pos:start="85:13" pos:end="87:32">

            <comment type="line" pos:start="83:13" pos:end="83:79">// Do not walk the whole buffer just to decode slice segment header</comment>

            <if_stmt pos:start="85:13" pos:end="87:32"><if pos:start="85:13" pos:end="87:32">if <condition pos:start="85:16" pos:end="85:32">(<expr pos:start="85:17" pos:end="85:31"><name pos:start="85:17" pos:end="85:26">src_length</name> <operator pos:start="85:28" pos:end="85:28">&gt;</operator> <literal type="number" pos:start="85:30" pos:end="85:31">20</literal></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:32"><block_content pos:start="87:17" pos:end="87:32">

                <expr_stmt pos:start="87:17" pos:end="87:32"><expr pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:26">src_length</name> <operator pos:start="87:28" pos:end="87:28">=</operator> <literal type="number" pos:start="87:30" pos:end="87:31">20</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="93:9" pos:end="93:65"><expr pos:start="93:9" pos:end="93:64"><name pos:start="93:9" pos:end="93:16">consumed</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <call pos:start="93:20" pos:end="93:64"><name pos:start="93:20" pos:end="93:39">ff_hevc_extract_rbsp</name><argument_list pos:start="93:40" pos:end="93:64">(<argument pos:start="93:41" pos:end="93:41"><expr pos:start="93:41" pos:end="93:41"><name pos:start="93:41" pos:end="93:41">h</name></expr></argument>, <argument pos:start="93:44" pos:end="93:46"><expr pos:start="93:44" pos:end="93:46"><name pos:start="93:44" pos:end="93:46">buf</name></expr></argument>, <argument pos:start="93:49" pos:end="93:58"><expr pos:start="93:49" pos:end="93:58"><name pos:start="93:49" pos:end="93:58">src_length</name></expr></argument>, <argument pos:start="93:61" pos:end="93:63"><expr pos:start="93:61" pos:end="93:63"><name pos:start="93:61" pos:end="93:63">nal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:28"><if pos:start="95:9" pos:end="97:28">if <condition pos:start="95:12" pos:end="95:25">(<expr pos:start="95:13" pos:end="95:24"><name pos:start="95:13" pos:end="95:20">consumed</name> <operator pos:start="95:22" pos:end="95:22">&lt;</operator> <literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:28"><block_content pos:start="97:13" pos:end="97:28">

            <return pos:start="97:13" pos:end="97:28">return <expr pos:start="97:20" pos:end="97:27"><name pos:start="97:20" pos:end="97:27">consumed</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="101:9" pos:end="101:53"><expr pos:start="101:9" pos:end="101:52"><call pos:start="101:9" pos:end="101:52"><name pos:start="101:9" pos:end="101:22">init_get_bits8</name><argument_list pos:start="101:23" pos:end="101:52">(<argument pos:start="101:24" pos:end="101:25"><expr pos:start="101:24" pos:end="101:25"><name pos:start="101:24" pos:end="101:25">gb</name></expr></argument>, <argument pos:start="101:28" pos:end="101:40"><expr pos:start="101:28" pos:end="101:40"><name pos:start="101:28" pos:end="101:36"><name pos:start="101:28" pos:end="101:30">nal</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:36">data</name></name> <operator pos:start="101:38" pos:end="101:38">+</operator> <literal type="number" pos:start="101:40" pos:end="101:40">2</literal></expr></argument>, <argument pos:start="101:43" pos:end="101:51"><expr pos:start="101:43" pos:end="101:51"><name pos:start="101:43" pos:end="101:51"><name pos:start="101:43" pos:end="101:45">nal</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:51">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="103:9" pos:end="331:9">switch <condition pos:start="103:16" pos:end="103:33">(<expr pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:32"><name pos:start="103:17" pos:end="103:17">h</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:32">nal_unit_type</name></name></expr>)</condition> <block pos:start="103:35" pos:end="331:9">{<block_content pos:start="105:9" pos:end="329:21">

        <case pos:start="105:9" pos:end="105:21">case <expr pos:start="105:14" pos:end="105:20"><name pos:start="105:14" pos:end="105:20">NAL_VPS</name></expr>:</case>

            <expr_stmt pos:start="107:13" pos:end="107:38"><expr pos:start="107:13" pos:end="107:37"><call pos:start="107:13" pos:end="107:37"><name pos:start="107:13" pos:end="107:34">ff_hevc_decode_nal_vps</name><argument_list pos:start="107:35" pos:end="107:37">(<argument pos:start="107:36" pos:end="107:36"><expr pos:start="107:36" pos:end="107:36"><name pos:start="107:36" pos:end="107:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        <case pos:start="111:9" pos:end="111:21">case <expr pos:start="111:14" pos:end="111:20"><name pos:start="111:14" pos:end="111:20">NAL_SPS</name></expr>:</case>

            <expr_stmt pos:start="113:13" pos:end="113:38"><expr pos:start="113:13" pos:end="113:37"><call pos:start="113:13" pos:end="113:37"><name pos:start="113:13" pos:end="113:34">ff_hevc_decode_nal_sps</name><argument_list pos:start="113:35" pos:end="113:37">(<argument pos:start="113:36" pos:end="113:36"><expr pos:start="113:36" pos:end="113:36"><name pos:start="113:36" pos:end="113:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        <case pos:start="117:9" pos:end="117:21">case <expr pos:start="117:14" pos:end="117:20"><name pos:start="117:14" pos:end="117:20">NAL_PPS</name></expr>:</case>

            <expr_stmt pos:start="119:13" pos:end="119:38"><expr pos:start="119:13" pos:end="119:37"><call pos:start="119:13" pos:end="119:37"><name pos:start="119:13" pos:end="119:34">ff_hevc_decode_nal_pps</name><argument_list pos:start="119:35" pos:end="119:37">(<argument pos:start="119:36" pos:end="119:36"><expr pos:start="119:36" pos:end="119:36"><name pos:start="119:36" pos:end="119:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        <case pos:start="123:9" pos:end="123:28">case <expr pos:start="123:14" pos:end="123:27"><name pos:start="123:14" pos:end="123:27">NAL_SEI_PREFIX</name></expr>:</case>

        <case pos:start="125:9" pos:end="125:28">case <expr pos:start="125:14" pos:end="125:27"><name pos:start="125:14" pos:end="125:27">NAL_SEI_SUFFIX</name></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:38"><expr pos:start="127:13" pos:end="127:37"><call pos:start="127:13" pos:end="127:37"><name pos:start="127:13" pos:end="127:34">ff_hevc_decode_nal_sei</name><argument_list pos:start="127:35" pos:end="127:37">(<argument pos:start="127:36" pos:end="127:36"><expr pos:start="127:36" pos:end="127:36"><name pos:start="127:36" pos:end="127:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:25">case <expr pos:start="131:14" pos:end="131:24"><name pos:start="131:14" pos:end="131:24">NAL_TRAIL_N</name></expr>:</case>

        <case pos:start="133:9" pos:end="133:25">case <expr pos:start="133:14" pos:end="133:24"><name pos:start="133:14" pos:end="133:24">NAL_TRAIL_R</name></expr>:</case>

        <case pos:start="135:9" pos:end="135:23">case <expr pos:start="135:14" pos:end="135:22"><name pos:start="135:14" pos:end="135:22">NAL_TSA_N</name></expr>:</case>

        <case pos:start="137:9" pos:end="137:23">case <expr pos:start="137:14" pos:end="137:22"><name pos:start="137:14" pos:end="137:22">NAL_TSA_R</name></expr>:</case>

        <case pos:start="139:9" pos:end="139:24">case <expr pos:start="139:14" pos:end="139:23"><name pos:start="139:14" pos:end="139:23">NAL_STSA_N</name></expr>:</case>

        <case pos:start="141:9" pos:end="141:24">case <expr pos:start="141:14" pos:end="141:23"><name pos:start="141:14" pos:end="141:23">NAL_STSA_R</name></expr>:</case>

        <case pos:start="143:9" pos:end="143:24">case <expr pos:start="143:14" pos:end="143:23"><name pos:start="143:14" pos:end="143:23">NAL_RADL_N</name></expr>:</case>

        <case pos:start="145:9" pos:end="145:24">case <expr pos:start="145:14" pos:end="145:23"><name pos:start="145:14" pos:end="145:23">NAL_RADL_R</name></expr>:</case>

        <case pos:start="147:9" pos:end="147:24">case <expr pos:start="147:14" pos:end="147:23"><name pos:start="147:14" pos:end="147:23">NAL_RASL_N</name></expr>:</case>

        <case pos:start="149:9" pos:end="149:24">case <expr pos:start="149:14" pos:end="149:23"><name pos:start="149:14" pos:end="149:23">NAL_RASL_R</name></expr>:</case>

        <case pos:start="151:9" pos:end="151:26">case <expr pos:start="151:14" pos:end="151:25"><name pos:start="151:14" pos:end="151:25">NAL_BLA_W_LP</name></expr>:</case>

        <case pos:start="153:9" pos:end="153:28">case <expr pos:start="153:14" pos:end="153:27"><name pos:start="153:14" pos:end="153:27">NAL_BLA_W_RADL</name></expr>:</case>

        <case pos:start="155:9" pos:end="155:26">case <expr pos:start="155:14" pos:end="155:25"><name pos:start="155:14" pos:end="155:25">NAL_BLA_N_LP</name></expr>:</case>

        <case pos:start="157:9" pos:end="157:28">case <expr pos:start="157:14" pos:end="157:27"><name pos:start="157:14" pos:end="157:27">NAL_IDR_W_RADL</name></expr>:</case>

        <case pos:start="159:9" pos:end="159:26">case <expr pos:start="159:14" pos:end="159:25"><name pos:start="159:14" pos:end="159:25">NAL_IDR_N_LP</name></expr>:</case>

        <case pos:start="161:9" pos:end="161:25">case <expr pos:start="161:14" pos:end="161:24"><name pos:start="161:14" pos:end="161:24">NAL_CRA_NUT</name></expr>:</case>

            <expr_stmt pos:start="163:13" pos:end="163:56"><expr pos:start="163:13" pos:end="163:55"><name pos:start="163:13" pos:end="163:39"><name pos:start="163:13" pos:end="163:14">sh</name><operator pos:start="163:15" pos:end="163:16">-&gt;</operator><name pos:start="163:17" pos:end="163:39">first_slice_in_pic_flag</name></name> <operator pos:start="163:41" pos:end="163:41">=</operator> <call pos:start="163:43" pos:end="163:55"><name pos:start="163:43" pos:end="163:51">get_bits1</name><argument_list pos:start="163:52" pos:end="163:55">(<argument pos:start="163:53" pos:end="163:54"><expr pos:start="163:53" pos:end="163:54"><name pos:start="163:53" pos:end="163:54">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:53"><expr pos:start="165:13" pos:end="165:52"><name pos:start="165:13" pos:end="165:32"><name pos:start="165:13" pos:end="165:13">s</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:32">picture_structure</name></name> <operator pos:start="165:34" pos:end="165:34">=</operator> <name pos:start="165:36" pos:end="165:52"><name pos:start="165:36" pos:end="165:36">h</name><operator pos:start="165:37" pos:end="165:38">-&gt;</operator><name pos:start="165:39" pos:end="165:52">picture_struct</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:47"><expr pos:start="167:13" pos:end="167:46"><name pos:start="167:13" pos:end="167:26"><name pos:start="167:13" pos:end="167:13">s</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:26">field_order</name></name> <operator pos:start="167:28" pos:end="167:28">=</operator> <name pos:start="167:30" pos:end="167:46"><name pos:start="167:30" pos:end="167:30">h</name><operator pos:start="167:31" pos:end="167:32">-&gt;</operator><name pos:start="167:33" pos:end="167:46">picture_struct</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="171:13" pos:end="177:13"><if pos:start="171:13" pos:end="177:13">if <condition pos:start="171:16" pos:end="171:27">(<expr pos:start="171:17" pos:end="171:26"><call pos:start="171:17" pos:end="171:26"><name pos:start="171:17" pos:end="171:23">IS_IRAP</name><argument_list pos:start="171:24" pos:end="171:26">(<argument pos:start="171:25" pos:end="171:25"><expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:29" pos:end="177:13">{<block_content pos:start="173:17" pos:end="175:65">

                <expr_stmt pos:start="173:17" pos:end="173:33"><expr pos:start="173:17" pos:end="173:32"><name pos:start="173:17" pos:end="173:28"><name pos:start="173:17" pos:end="173:17">s</name><operator pos:start="173:18" pos:end="173:19">-&gt;</operator><name pos:start="173:20" pos:end="173:28">key_frame</name></name> <operator pos:start="173:30" pos:end="173:30">=</operator> <literal type="number" pos:start="173:32" pos:end="173:32">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:65"><expr pos:start="175:17" pos:end="175:64"><name pos:start="175:17" pos:end="175:48"><name pos:start="175:17" pos:end="175:18">sh</name><operator pos:start="175:19" pos:end="175:20">-&gt;</operator><name pos:start="175:21" pos:end="175:48">no_output_of_prior_pics_flag</name></name> <operator pos:start="175:50" pos:end="175:50">=</operator> <call pos:start="175:52" pos:end="175:64"><name pos:start="175:52" pos:end="175:60">get_bits1</name><argument_list pos:start="175:61" pos:end="175:64">(<argument pos:start="175:62" pos:end="175:63"><expr pos:start="175:62" pos:end="175:63"><name pos:start="175:62" pos:end="175:63">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="181:13" pos:end="181:43"><expr pos:start="181:13" pos:end="181:42"><name pos:start="181:13" pos:end="181:22"><name pos:start="181:13" pos:end="181:14">sh</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:22">pps_id</name></name> <operator pos:start="181:24" pos:end="181:24">=</operator> <call pos:start="181:26" pos:end="181:42"><name pos:start="181:26" pos:end="181:38">get_ue_golomb</name><argument_list pos:start="181:39" pos:end="181:42">(<argument pos:start="181:40" pos:end="181:41"><expr pos:start="181:40" pos:end="181:41"><name pos:start="181:40" pos:end="181:41">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="183:13" pos:end="189:13"><if pos:start="183:13" pos:end="189:13">if <condition pos:start="183:16" pos:end="183:72">(<expr pos:start="183:17" pos:end="183:71"><name pos:start="183:17" pos:end="183:26"><name pos:start="183:17" pos:end="183:18">sh</name><operator pos:start="183:19" pos:end="183:20">-&gt;</operator><name pos:start="183:21" pos:end="183:26">pps_id</name></name> <operator pos:start="183:28" pos:end="183:29">&gt;=</operator> <name pos:start="183:31" pos:end="183:43">MAX_PPS_COUNT</name> <operator pos:start="183:45" pos:end="183:46">||</operator> <operator pos:start="183:48" pos:end="183:48">!</operator><name pos:start="183:49" pos:end="183:71"><name pos:start="183:49" pos:end="183:49">h</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:59">pps_list</name><index pos:start="183:60" pos:end="183:71">[<expr pos:start="183:61" pos:end="183:70"><name pos:start="183:61" pos:end="183:70"><name pos:start="183:61" pos:end="183:62">sh</name><operator pos:start="183:63" pos:end="183:64">-&gt;</operator><name pos:start="183:65" pos:end="183:70">pps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="183:74" pos:end="189:13">{<block_content pos:start="185:17" pos:end="187:43">

                <expr_stmt pos:start="185:17" pos:end="185:88"><expr pos:start="185:17" pos:end="185:87"><call pos:start="185:17" pos:end="185:87"><name pos:start="185:17" pos:end="185:22">av_log</name><argument_list pos:start="185:23" pos:end="185:87">(<argument pos:start="185:24" pos:end="185:31"><expr pos:start="185:24" pos:end="185:31"><name pos:start="185:24" pos:end="185:31"><name pos:start="185:24" pos:end="185:24">h</name><operator pos:start="185:25" pos:end="185:26">-&gt;</operator><name pos:start="185:27" pos:end="185:31">avctx</name></name></expr></argument>, <argument pos:start="185:34" pos:end="185:45"><expr pos:start="185:34" pos:end="185:45"><name pos:start="185:34" pos:end="185:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="185:48" pos:end="185:74"><expr pos:start="185:48" pos:end="185:74"><literal type="string" pos:start="185:48" pos:end="185:74">"PPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="185:77" pos:end="185:86"><expr pos:start="185:77" pos:end="185:86"><name pos:start="185:77" pos:end="185:86"><name pos:start="185:77" pos:end="185:78">sh</name><operator pos:start="185:79" pos:end="185:80">-&gt;</operator><name pos:start="185:81" pos:end="185:86">pps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="187:17" pos:end="187:43">return <expr pos:start="187:24" pos:end="187:42"><name pos:start="187:24" pos:end="187:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:61"><expr pos:start="191:13" pos:end="191:60"><name pos:start="191:13" pos:end="191:18"><name pos:start="191:13" pos:end="191:13">h</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:18">pps</name></name> <operator pos:start="191:20" pos:end="191:20">=</operator> <operator pos:start="191:22" pos:end="191:22">(</operator><name pos:start="191:23" pos:end="191:29">HEVCPPS</name><operator pos:start="191:30" pos:end="191:30">*</operator><operator pos:start="191:31" pos:end="191:31">)</operator><name pos:start="191:32" pos:end="191:54"><name pos:start="191:32" pos:end="191:32">h</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:42">pps_list</name><index pos:start="191:43" pos:end="191:54">[<expr pos:start="191:44" pos:end="191:53"><name pos:start="191:44" pos:end="191:53"><name pos:start="191:44" pos:end="191:45">sh</name><operator pos:start="191:46" pos:end="191:47">-&gt;</operator><name pos:start="191:48" pos:end="191:53">pps_id</name></name></expr>]</index></name><operator pos:start="191:55" pos:end="191:56">-&gt;</operator><name pos:start="191:57" pos:end="191:60">data</name></expr>;</expr_stmt>



            <if_stmt pos:start="195:13" pos:end="201:13"><if pos:start="195:13" pos:end="201:13">if <condition pos:start="195:16" pos:end="195:80">(<expr pos:start="195:17" pos:end="195:79"><name pos:start="195:17" pos:end="195:30"><name pos:start="195:17" pos:end="195:17">h</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:22">pps</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:30">sps_id</name></name> <operator pos:start="195:32" pos:end="195:33">&gt;=</operator> <name pos:start="195:35" pos:end="195:47">MAX_SPS_COUNT</name> <operator pos:start="195:49" pos:end="195:50">||</operator> <operator pos:start="195:52" pos:end="195:52">!</operator><name pos:start="195:53" pos:end="195:79"><name pos:start="195:53" pos:end="195:53">h</name><operator pos:start="195:54" pos:end="195:55">-&gt;</operator><name pos:start="195:56" pos:end="195:63">sps_list</name><index pos:start="195:64" pos:end="195:79">[<expr pos:start="195:65" pos:end="195:78"><name pos:start="195:65" pos:end="195:78"><name pos:start="195:65" pos:end="195:65">h</name><operator pos:start="195:66" pos:end="195:67">-&gt;</operator><name pos:start="195:68" pos:end="195:70">pps</name><operator pos:start="195:71" pos:end="195:72">-&gt;</operator><name pos:start="195:73" pos:end="195:78">sps_id</name></name></expr>]</index></name></expr>)</condition> <block pos:start="195:82" pos:end="201:13">{<block_content pos:start="197:17" pos:end="199:43">

                <expr_stmt pos:start="197:17" pos:end="197:92"><expr pos:start="197:17" pos:end="197:91"><call pos:start="197:17" pos:end="197:91"><name pos:start="197:17" pos:end="197:22">av_log</name><argument_list pos:start="197:23" pos:end="197:91">(<argument pos:start="197:24" pos:end="197:31"><expr pos:start="197:24" pos:end="197:31"><name pos:start="197:24" pos:end="197:31"><name pos:start="197:24" pos:end="197:24">h</name><operator pos:start="197:25" pos:end="197:26">-&gt;</operator><name pos:start="197:27" pos:end="197:31">avctx</name></name></expr></argument>, <argument pos:start="197:34" pos:end="197:45"><expr pos:start="197:34" pos:end="197:45"><name pos:start="197:34" pos:end="197:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="197:48" pos:end="197:74"><expr pos:start="197:48" pos:end="197:74"><literal type="string" pos:start="197:48" pos:end="197:74">"SPS id out of range: %d\n"</literal></expr></argument>, <argument pos:start="197:77" pos:end="197:90"><expr pos:start="197:77" pos:end="197:90"><name pos:start="197:77" pos:end="197:90"><name pos:start="197:77" pos:end="197:77">h</name><operator pos:start="197:78" pos:end="197:79">-&gt;</operator><name pos:start="197:80" pos:end="197:82">pps</name><operator pos:start="197:83" pos:end="197:84">-&gt;</operator><name pos:start="197:85" pos:end="197:90">sps_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="199:17" pos:end="199:43">return <expr pos:start="199:24" pos:end="199:42"><name pos:start="199:24" pos:end="199:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="203:13" pos:end="209:13"><if pos:start="203:13" pos:end="209:13">if <condition pos:start="203:16" pos:end="203:70">(<expr pos:start="203:17" pos:end="203:69"><name pos:start="203:17" pos:end="203:22"><name pos:start="203:17" pos:end="203:17">h</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:22">sps</name></name> <operator pos:start="203:24" pos:end="203:25">!=</operator> <operator pos:start="203:27" pos:end="203:27">(</operator><name pos:start="203:28" pos:end="203:34">HEVCSPS</name><operator pos:start="203:35" pos:end="203:35">*</operator><operator pos:start="203:36" pos:end="203:36">)</operator><name pos:start="203:37" pos:end="203:63"><name pos:start="203:37" pos:end="203:37">h</name><operator pos:start="203:38" pos:end="203:39">-&gt;</operator><name pos:start="203:40" pos:end="203:47">sps_list</name><index pos:start="203:48" pos:end="203:63">[<expr pos:start="203:49" pos:end="203:62"><name pos:start="203:49" pos:end="203:62"><name pos:start="203:49" pos:end="203:49">h</name><operator pos:start="203:50" pos:end="203:51">-&gt;</operator><name pos:start="203:52" pos:end="203:54">pps</name><operator pos:start="203:55" pos:end="203:56">-&gt;</operator><name pos:start="203:57" pos:end="203:62">sps_id</name></name></expr>]</index></name><operator pos:start="203:64" pos:end="203:65">-&gt;</operator><name pos:start="203:66" pos:end="203:69">data</name></expr>)</condition> <block pos:start="203:72" pos:end="209:13">{<block_content pos:start="205:17" pos:end="207:69">

                <expr_stmt pos:start="205:17" pos:end="205:69"><expr pos:start="205:17" pos:end="205:68"><name pos:start="205:17" pos:end="205:22"><name pos:start="205:17" pos:end="205:17">h</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:22">sps</name></name> <operator pos:start="205:24" pos:end="205:24">=</operator> <operator pos:start="205:26" pos:end="205:26">(</operator><name pos:start="205:27" pos:end="205:33">HEVCSPS</name><operator pos:start="205:34" pos:end="205:34">*</operator><operator pos:start="205:35" pos:end="205:35">)</operator><name pos:start="205:36" pos:end="205:62"><name pos:start="205:36" pos:end="205:36">h</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:46">sps_list</name><index pos:start="205:47" pos:end="205:62">[<expr pos:start="205:48" pos:end="205:61"><name pos:start="205:48" pos:end="205:61"><name pos:start="205:48" pos:end="205:48">h</name><operator pos:start="205:49" pos:end="205:50">-&gt;</operator><name pos:start="205:51" pos:end="205:53">pps</name><operator pos:start="205:54" pos:end="205:55">-&gt;</operator><name pos:start="205:56" pos:end="205:61">sps_id</name></name></expr>]</index></name><operator pos:start="205:63" pos:end="205:64">-&gt;</operator><name pos:start="205:65" pos:end="205:68">data</name></expr>;</expr_stmt>

                <expr_stmt pos:start="207:17" pos:end="207:69"><expr pos:start="207:17" pos:end="207:68"><name pos:start="207:17" pos:end="207:22"><name pos:start="207:17" pos:end="207:17">h</name><operator pos:start="207:18" pos:end="207:19">-&gt;</operator><name pos:start="207:20" pos:end="207:22">vps</name></name> <operator pos:start="207:24" pos:end="207:24">=</operator> <operator pos:start="207:26" pos:end="207:26">(</operator><name pos:start="207:27" pos:end="207:33">HEVCVPS</name><operator pos:start="207:34" pos:end="207:34">*</operator><operator pos:start="207:35" pos:end="207:35">)</operator><name pos:start="207:36" pos:end="207:62"><name pos:start="207:36" pos:end="207:36">h</name><operator pos:start="207:37" pos:end="207:38">-&gt;</operator><name pos:start="207:39" pos:end="207:46">vps_list</name><index pos:start="207:47" pos:end="207:62">[<expr pos:start="207:48" pos:end="207:61"><name pos:start="207:48" pos:end="207:61"><name pos:start="207:48" pos:end="207:48">h</name><operator pos:start="207:49" pos:end="207:50">-&gt;</operator><name pos:start="207:51" pos:end="207:53">sps</name><operator pos:start="207:54" pos:end="207:55">-&gt;</operator><name pos:start="207:56" pos:end="207:61">vps_id</name></name></expr>]</index></name><operator pos:start="207:63" pos:end="207:64">-&gt;</operator><name pos:start="207:65" pos:end="207:68">data</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="213:13" pos:end="247:53"><if pos:start="213:13" pos:end="245:13">if <condition pos:start="213:16" pos:end="213:45">(<expr pos:start="213:17" pos:end="213:44"><operator pos:start="213:17" pos:end="213:17">!</operator><name pos:start="213:18" pos:end="213:44"><name pos:start="213:18" pos:end="213:19">sh</name><operator pos:start="213:20" pos:end="213:21">-&gt;</operator><name pos:start="213:22" pos:end="213:44">first_slice_in_pic_flag</name></name></expr>)</condition> <block pos:start="213:47" pos:end="245:13">{<block_content pos:start="215:17" pos:end="243:17">

                <decl_stmt pos:start="215:17" pos:end="215:41"><decl pos:start="215:17" pos:end="215:40"><type pos:start="215:17" pos:end="215:19"><name pos:start="215:17" pos:end="215:19">int</name></type> <name pos:start="215:21" pos:end="215:40">slice_address_length</name></decl>;</decl_stmt>



                <if_stmt pos:start="219:17" pos:end="225:57"><if pos:start="219:17" pos:end="221:69">if <condition pos:start="219:20" pos:end="219:66">(<expr pos:start="219:21" pos:end="219:65"><name pos:start="219:21" pos:end="219:65"><name pos:start="219:21" pos:end="219:21">h</name><operator pos:start="219:22" pos:end="219:23">-&gt;</operator><name pos:start="219:24" pos:end="219:26">pps</name><operator pos:start="219:27" pos:end="219:28">-&gt;</operator><name pos:start="219:29" pos:end="219:65">dependent_slice_segments_enabled_flag</name></name></expr>)</condition><block type="pseudo" pos:start="221:21" pos:end="221:69"><block_content pos:start="221:21" pos:end="221:69">

                    <expr_stmt pos:start="221:21" pos:end="221:69"><expr pos:start="221:21" pos:end="221:68"><name pos:start="221:21" pos:end="221:52"><name pos:start="221:21" pos:end="221:22">sh</name><operator pos:start="221:23" pos:end="221:24">-&gt;</operator><name pos:start="221:25" pos:end="221:52">dependent_slice_segment_flag</name></name> <operator pos:start="221:54" pos:end="221:54">=</operator> <call pos:start="221:56" pos:end="221:68"><name pos:start="221:56" pos:end="221:64">get_bits1</name><argument_list pos:start="221:65" pos:end="221:68">(<argument pos:start="221:66" pos:end="221:67"><expr pos:start="221:66" pos:end="221:67"><name pos:start="221:66" pos:end="221:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="223:17" pos:end="225:57">else<block type="pseudo" pos:start="225:21" pos:end="225:57"><block_content pos:start="225:21" pos:end="225:57">

                    <expr_stmt pos:start="225:21" pos:end="225:57"><expr pos:start="225:21" pos:end="225:56"><name pos:start="225:21" pos:end="225:52"><name pos:start="225:21" pos:end="225:22">sh</name><operator pos:start="225:23" pos:end="225:24">-&gt;</operator><name pos:start="225:25" pos:end="225:52">dependent_slice_segment_flag</name></name> <operator pos:start="225:54" pos:end="225:54">=</operator> <literal type="number" pos:start="225:56" pos:end="225:56">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="229:17" pos:end="231:74"><expr pos:start="229:17" pos:end="231:73"><name pos:start="229:17" pos:end="229:36">slice_address_length</name> <operator pos:start="229:38" pos:end="229:38">=</operator> <call pos:start="229:40" pos:end="231:73"><name pos:start="229:40" pos:end="229:53">av_ceil_log2_c</name><argument_list pos:start="229:54" pos:end="231:73">(<argument pos:start="229:55" pos:end="231:72"><expr pos:start="229:55" pos:end="231:72"><name pos:start="229:55" pos:end="229:71"><name pos:start="229:55" pos:end="229:55">h</name><operator pos:start="229:56" pos:end="229:57">-&gt;</operator><name pos:start="229:58" pos:end="229:60">sps</name><operator pos:start="229:61" pos:end="229:62">-&gt;</operator><name pos:start="229:63" pos:end="229:71">ctb_width</name></name> <operator pos:start="229:73" pos:end="229:73">*</operator>

                                                      <name pos:start="231:55" pos:end="231:72"><name pos:start="231:55" pos:end="231:55">h</name><operator pos:start="231:56" pos:end="231:57">-&gt;</operator><name pos:start="231:58" pos:end="231:60">sps</name><operator pos:start="231:61" pos:end="231:62">-&gt;</operator><name pos:start="231:63" pos:end="231:72">ctb_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:76"><expr pos:start="233:17" pos:end="233:75"><name pos:start="233:17" pos:end="233:38"><name pos:start="233:17" pos:end="233:18">sh</name><operator pos:start="233:19" pos:end="233:20">-&gt;</operator><name pos:start="233:21" pos:end="233:38">slice_segment_addr</name></name> <operator pos:start="233:40" pos:end="233:40">=</operator> <call pos:start="233:42" pos:end="233:75"><name pos:start="233:42" pos:end="233:49">get_bits</name><argument_list pos:start="233:50" pos:end="233:75">(<argument pos:start="233:51" pos:end="233:52"><expr pos:start="233:51" pos:end="233:52"><name pos:start="233:51" pos:end="233:52">gb</name></expr></argument>, <argument pos:start="233:55" pos:end="233:74"><expr pos:start="233:55" pos:end="233:74"><name pos:start="233:55" pos:end="233:74">slice_address_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="235:17" pos:end="243:17"><if pos:start="235:17" pos:end="243:17">if <condition pos:start="235:20" pos:end="235:85">(<expr pos:start="235:21" pos:end="235:84"><name pos:start="235:21" pos:end="235:42"><name pos:start="235:21" pos:end="235:22">sh</name><operator pos:start="235:23" pos:end="235:24">-&gt;</operator><name pos:start="235:25" pos:end="235:42">slice_segment_addr</name></name> <operator pos:start="235:44" pos:end="235:45">&gt;=</operator> <name pos:start="235:47" pos:end="235:63"><name pos:start="235:47" pos:end="235:47">h</name><operator pos:start="235:48" pos:end="235:49">-&gt;</operator><name pos:start="235:50" pos:end="235:52">sps</name><operator pos:start="235:53" pos:end="235:54">-&gt;</operator><name pos:start="235:55" pos:end="235:63">ctb_width</name></name> <operator pos:start="235:65" pos:end="235:65">*</operator> <name pos:start="235:67" pos:end="235:84"><name pos:start="235:67" pos:end="235:67">h</name><operator pos:start="235:68" pos:end="235:69">-&gt;</operator><name pos:start="235:70" pos:end="235:72">sps</name><operator pos:start="235:73" pos:end="235:74">-&gt;</operator><name pos:start="235:75" pos:end="235:84">ctb_height</name></name></expr>)</condition> <block pos:start="235:87" pos:end="243:17">{<block_content pos:start="237:21" pos:end="241:47">

                    <expr_stmt pos:start="237:21" pos:end="239:51"><expr pos:start="237:21" pos:end="239:50"><call pos:start="237:21" pos:end="239:50"><name pos:start="237:21" pos:end="237:26">av_log</name><argument_list pos:start="237:27" pos:end="239:50">(<argument pos:start="237:28" pos:end="237:35"><expr pos:start="237:28" pos:end="237:35"><name pos:start="237:28" pos:end="237:35"><name pos:start="237:28" pos:end="237:28">h</name><operator pos:start="237:29" pos:end="237:30">-&gt;</operator><name pos:start="237:31" pos:end="237:35">avctx</name></name></expr></argument>, <argument pos:start="237:38" pos:end="237:49"><expr pos:start="237:38" pos:end="237:49"><name pos:start="237:38" pos:end="237:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="237:52" pos:end="237:89"><expr pos:start="237:52" pos:end="237:89"><literal type="string" pos:start="237:52" pos:end="237:89">"Invalid slice segment address: %u.\n"</literal></expr></argument>,

                           <argument pos:start="239:28" pos:end="239:49"><expr pos:start="239:28" pos:end="239:49"><name pos:start="239:28" pos:end="239:49"><name pos:start="239:28" pos:end="239:29">sh</name><operator pos:start="239:30" pos:end="239:31">-&gt;</operator><name pos:start="239:32" pos:end="239:49">slice_segment_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="241:21" pos:end="241:47">return <expr pos:start="241:28" pos:end="241:46"><name pos:start="241:28" pos:end="241:46">AVERROR_INVALIDDATA</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="245:15" pos:end="247:53">else<block type="pseudo" pos:start="247:17" pos:end="247:53"><block_content pos:start="247:17" pos:end="247:53">

                <expr_stmt pos:start="247:17" pos:end="247:53"><expr pos:start="247:17" pos:end="247:52"><name pos:start="247:17" pos:end="247:48"><name pos:start="247:17" pos:end="247:18">sh</name><operator pos:start="247:19" pos:end="247:20">-&gt;</operator><name pos:start="247:21" pos:end="247:48">dependent_slice_segment_flag</name></name> <operator pos:start="247:50" pos:end="247:50">=</operator> <literal type="number" pos:start="247:52" pos:end="247:52">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="251:13" pos:end="253:22"><if pos:start="251:13" pos:end="253:22">if <condition pos:start="251:16" pos:end="251:49">(<expr pos:start="251:17" pos:end="251:48"><name pos:start="251:17" pos:end="251:48"><name pos:start="251:17" pos:end="251:18">sh</name><operator pos:start="251:19" pos:end="251:20">-&gt;</operator><name pos:start="251:21" pos:end="251:48">dependent_slice_segment_flag</name></name></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:22"><block_content pos:start="253:17" pos:end="253:22">

                <break pos:start="253:17" pos:end="253:22">break;</break></block_content></block></if></if_stmt>



            <for pos:start="257:13" pos:end="259:33">for <control pos:start="257:17" pos:end="257:69">(<init pos:start="257:18" pos:end="257:23"><expr pos:start="257:18" pos:end="257:22"><name pos:start="257:18" pos:end="257:18">i</name> <operator pos:start="257:20" pos:end="257:20">=</operator> <literal type="number" pos:start="257:22" pos:end="257:22">0</literal></expr>;</init> <condition pos:start="257:25" pos:end="257:64"><expr pos:start="257:25" pos:end="257:63"><name pos:start="257:25" pos:end="257:25">i</name> <operator pos:start="257:27" pos:end="257:27">&lt;</operator> <name pos:start="257:29" pos:end="257:63"><name pos:start="257:29" pos:end="257:29">h</name><operator pos:start="257:30" pos:end="257:31">-&gt;</operator><name pos:start="257:32" pos:end="257:34">pps</name><operator pos:start="257:35" pos:end="257:36">-&gt;</operator><name pos:start="257:37" pos:end="257:63">num_extra_slice_header_bits</name></name></expr>;</condition> <incr pos:start="257:66" pos:end="257:68"><expr pos:start="257:66" pos:end="257:68"><name pos:start="257:66" pos:end="257:66">i</name><operator pos:start="257:67" pos:end="257:68">++</operator></expr></incr>)</control><block type="pseudo" pos:start="259:17" pos:end="259:33"><block_content pos:start="259:17" pos:end="259:33">

                <expr_stmt pos:start="259:17" pos:end="259:33"><expr pos:start="259:17" pos:end="259:32"><call pos:start="259:17" pos:end="259:32"><name pos:start="259:17" pos:end="259:25">skip_bits</name><argument_list pos:start="259:26" pos:end="259:32">(<argument pos:start="259:27" pos:end="259:28"><expr pos:start="259:27" pos:end="259:28"><name pos:start="259:27" pos:end="259:28">gb</name></expr></argument>, <argument pos:start="259:31" pos:end="259:31"><expr pos:start="259:31" pos:end="259:31"><literal type="number" pos:start="259:31" pos:end="259:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for> <comment type="line" pos:start="259:35" pos:end="259:71">// slice_reserved_undetermined_flag[]</comment>



            <expr_stmt pos:start="263:13" pos:end="263:47"><expr pos:start="263:13" pos:end="263:46"><name pos:start="263:13" pos:end="263:26"><name pos:start="263:13" pos:end="263:14">sh</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:26">slice_type</name></name> <operator pos:start="263:28" pos:end="263:28">=</operator> <call pos:start="263:30" pos:end="263:46"><name pos:start="263:30" pos:end="263:42">get_ue_golomb</name><argument_list pos:start="263:43" pos:end="263:46">(<argument pos:start="263:44" pos:end="263:45"><expr pos:start="263:44" pos:end="263:45"><name pos:start="263:44" pos:end="263:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="265:13" pos:end="275:13"><if pos:start="265:13" pos:end="275:13">if <condition pos:start="265:16" pos:end="267:45">(<expr pos:start="265:17" pos:end="267:44"><operator pos:start="265:17" pos:end="265:17">!</operator><operator pos:start="265:18" pos:end="265:18">(</operator><name pos:start="265:19" pos:end="265:32"><name pos:start="265:19" pos:end="265:20">sh</name><operator pos:start="265:21" pos:end="265:22">-&gt;</operator><name pos:start="265:23" pos:end="265:32">slice_type</name></name> <operator pos:start="265:34" pos:end="265:35">==</operator> <name pos:start="265:37" pos:end="265:43">I_SLICE</name> <operator pos:start="265:45" pos:end="265:46">||</operator> <name pos:start="265:48" pos:end="265:61"><name pos:start="265:48" pos:end="265:49">sh</name><operator pos:start="265:50" pos:end="265:51">-&gt;</operator><name pos:start="265:52" pos:end="265:61">slice_type</name></name> <operator pos:start="265:63" pos:end="265:64">==</operator> <name pos:start="265:66" pos:end="265:72">P_SLICE</name> <operator pos:start="265:74" pos:end="265:75">||</operator>

                  <name pos:start="267:19" pos:end="267:32"><name pos:start="267:19" pos:end="267:20">sh</name><operator pos:start="267:21" pos:end="267:22">-&gt;</operator><name pos:start="267:23" pos:end="267:32">slice_type</name></name> <operator pos:start="267:34" pos:end="267:35">==</operator> <name pos:start="267:37" pos:end="267:43">B_SLICE</name><operator pos:start="267:44" pos:end="267:44">)</operator></expr>)</condition> <block pos:start="267:47" pos:end="275:13">{<block_content pos:start="269:17" pos:end="273:43">

                <expr_stmt pos:start="269:17" pos:end="271:39"><expr pos:start="269:17" pos:end="271:38"><call pos:start="269:17" pos:end="271:38"><name pos:start="269:17" pos:end="269:22">av_log</name><argument_list pos:start="269:23" pos:end="271:38">(<argument pos:start="269:24" pos:end="269:31"><expr pos:start="269:24" pos:end="269:31"><name pos:start="269:24" pos:end="269:31"><name pos:start="269:24" pos:end="269:24">h</name><operator pos:start="269:25" pos:end="269:26">-&gt;</operator><name pos:start="269:27" pos:end="269:31">avctx</name></name></expr></argument>, <argument pos:start="269:34" pos:end="269:45"><expr pos:start="269:34" pos:end="269:45"><name pos:start="269:34" pos:end="269:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="269:48" pos:end="269:74"><expr pos:start="269:48" pos:end="269:74"><literal type="string" pos:start="269:48" pos:end="269:74">"Unknown slice type: %d.\n"</literal></expr></argument>,

                       <argument pos:start="271:24" pos:end="271:37"><expr pos:start="271:24" pos:end="271:37"><name pos:start="271:24" pos:end="271:37"><name pos:start="271:24" pos:end="271:25">sh</name><operator pos:start="271:26" pos:end="271:27">-&gt;</operator><name pos:start="271:28" pos:end="271:37">slice_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="273:17" pos:end="273:43">return <expr pos:start="273:24" pos:end="273:42"><name pos:start="273:24" pos:end="273:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="277:13" pos:end="281:73"><expr pos:start="277:13" pos:end="281:72"><name pos:start="277:13" pos:end="277:24"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:24">pict_type</name></name> <operator pos:start="277:26" pos:end="277:26">=</operator> <ternary pos:start="277:28" pos:end="281:72"><condition pos:start="277:28" pos:end="277:54"><expr pos:start="277:28" pos:end="277:52"><name pos:start="277:28" pos:end="277:41"><name pos:start="277:28" pos:end="277:29">sh</name><operator pos:start="277:30" pos:end="277:31">-&gt;</operator><name pos:start="277:32" pos:end="277:41">slice_type</name></name> <operator pos:start="277:43" pos:end="277:44">==</operator> <name pos:start="277:46" pos:end="277:52">B_SLICE</name></expr> ?</condition><then pos:start="277:56" pos:end="277:72"> <expr pos:start="277:56" pos:end="277:72"><name pos:start="277:56" pos:end="277:72">AV_PICTURE_TYPE_B</name></expr> </then><else pos:start="277:74" pos:end="281:72">:

                           <expr pos:start="279:28" pos:end="281:72"><ternary pos:start="279:28" pos:end="281:72"><condition pos:start="279:28" pos:end="279:54"><expr pos:start="279:28" pos:end="279:52"><name pos:start="279:28" pos:end="279:41"><name pos:start="279:28" pos:end="279:29">sh</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:41">slice_type</name></name> <operator pos:start="279:43" pos:end="279:44">==</operator> <name pos:start="279:46" pos:end="279:52">P_SLICE</name></expr> ?</condition><then pos:start="279:56" pos:end="279:72"> <expr pos:start="279:56" pos:end="279:72"><name pos:start="279:56" pos:end="279:72">AV_PICTURE_TYPE_P</name></expr> </then><else pos:start="279:74" pos:end="281:72">:

                                                       <expr pos:start="281:56" pos:end="281:72"><name pos:start="281:56" pos:end="281:72">AV_PICTURE_TYPE_I</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



            <if_stmt pos:start="285:13" pos:end="287:52"><if pos:start="285:13" pos:end="287:52">if <condition pos:start="285:16" pos:end="285:49">(<expr pos:start="285:17" pos:end="285:48"><name pos:start="285:17" pos:end="285:48"><name pos:start="285:17" pos:end="285:17">h</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:22">pps</name><operator pos:start="285:23" pos:end="285:24">-&gt;</operator><name pos:start="285:25" pos:end="285:48">output_flag_present_flag</name></name></expr>)</condition><block type="pseudo" pos:start="287:17" pos:end="287:52"><block_content pos:start="287:17" pos:end="287:52">

                <expr_stmt pos:start="287:17" pos:end="287:52"><expr pos:start="287:17" pos:end="287:51"><name pos:start="287:17" pos:end="287:35"><name pos:start="287:17" pos:end="287:18">sh</name><operator pos:start="287:19" pos:end="287:20">-&gt;</operator><name pos:start="287:21" pos:end="287:35">pic_output_flag</name></name> <operator pos:start="287:37" pos:end="287:37">=</operator> <call pos:start="287:39" pos:end="287:51"><name pos:start="287:39" pos:end="287:47">get_bits1</name><argument_list pos:start="287:48" pos:end="287:51">(<argument pos:start="287:49" pos:end="287:50"><expr pos:start="287:49" pos:end="287:50"><name pos:start="287:49" pos:end="287:50">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="291:13" pos:end="293:54"><if pos:start="291:13" pos:end="293:54">if <condition pos:start="291:16" pos:end="291:51">(<expr pos:start="291:17" pos:end="291:50"><name pos:start="291:17" pos:end="291:50"><name pos:start="291:17" pos:end="291:17">h</name><operator pos:start="291:18" pos:end="291:19">-&gt;</operator><name pos:start="291:20" pos:end="291:22">sps</name><operator pos:start="291:23" pos:end="291:24">-&gt;</operator><name pos:start="291:25" pos:end="291:50">separate_colour_plane_flag</name></name></expr>)</condition><block type="pseudo" pos:start="293:17" pos:end="293:54"><block_content pos:start="293:17" pos:end="293:54">

                <expr_stmt pos:start="293:17" pos:end="293:54"><expr pos:start="293:17" pos:end="293:53"><name pos:start="293:17" pos:end="293:35"><name pos:start="293:17" pos:end="293:18">sh</name><operator pos:start="293:19" pos:end="293:20">-&gt;</operator><name pos:start="293:21" pos:end="293:35">colour_plane_id</name></name> <operator pos:start="293:37" pos:end="293:37">=</operator> <call pos:start="293:39" pos:end="293:53"><name pos:start="293:39" pos:end="293:46">get_bits</name><argument_list pos:start="293:47" pos:end="293:53">(<argument pos:start="293:48" pos:end="293:49"><expr pos:start="293:48" pos:end="293:49"><name pos:start="293:48" pos:end="293:49">gb</name></expr></argument>, <argument pos:start="293:52" pos:end="293:52"><expr pos:start="293:52" pos:end="293:52"><literal type="number" pos:start="293:52" pos:end="293:52">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="297:13" pos:end="305:54"><if pos:start="297:13" pos:end="303:13">if <condition pos:start="297:16" pos:end="297:27">(<expr pos:start="297:17" pos:end="297:26"><operator pos:start="297:17" pos:end="297:17">!</operator><call pos:start="297:18" pos:end="297:26"><name pos:start="297:18" pos:end="297:23">IS_IDR</name><argument_list pos:start="297:24" pos:end="297:26">(<argument pos:start="297:25" pos:end="297:25"><expr pos:start="297:25" pos:end="297:25"><name pos:start="297:25" pos:end="297:25">h</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="297:29" pos:end="303:13">{<block_content pos:start="299:17" pos:end="301:98">

                <expr_stmt pos:start="299:17" pos:end="299:79"><expr pos:start="299:17" pos:end="299:78"><name pos:start="299:17" pos:end="299:37"><name pos:start="299:17" pos:end="299:18">sh</name><operator pos:start="299:19" pos:end="299:20">-&gt;</operator><name pos:start="299:21" pos:end="299:37">pic_order_cnt_lsb</name></name> <operator pos:start="299:39" pos:end="299:39">=</operator> <call pos:start="299:41" pos:end="299:78"><name pos:start="299:41" pos:end="299:48">get_bits</name><argument_list pos:start="299:49" pos:end="299:78">(<argument pos:start="299:50" pos:end="299:51"><expr pos:start="299:50" pos:end="299:51"><name pos:start="299:50" pos:end="299:51">gb</name></expr></argument>, <argument pos:start="299:54" pos:end="299:77"><expr pos:start="299:54" pos:end="299:77"><name pos:start="299:54" pos:end="299:77"><name pos:start="299:54" pos:end="299:54">h</name><operator pos:start="299:55" pos:end="299:56">-&gt;</operator><name pos:start="299:57" pos:end="299:59">sps</name><operator pos:start="299:60" pos:end="299:61">-&gt;</operator><name pos:start="299:62" pos:end="299:77">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:98"><expr pos:start="301:17" pos:end="301:97"><name pos:start="301:17" pos:end="301:40"><name pos:start="301:17" pos:end="301:17">s</name><operator pos:start="301:18" pos:end="301:19">-&gt;</operator><name pos:start="301:20" pos:end="301:40">output_picture_number</name></name> <operator pos:start="301:42" pos:end="301:42">=</operator> <name pos:start="301:44" pos:end="301:49"><name pos:start="301:44" pos:end="301:44">h</name><operator pos:start="301:45" pos:end="301:46">-&gt;</operator><name pos:start="301:47" pos:end="301:49">poc</name></name> <operator pos:start="301:51" pos:end="301:51">=</operator> <call pos:start="301:53" pos:end="301:97"><name pos:start="301:53" pos:end="301:71">ff_hevc_compute_poc</name><argument_list pos:start="301:72" pos:end="301:97">(<argument pos:start="301:73" pos:end="301:73"><expr pos:start="301:73" pos:end="301:73"><name pos:start="301:73" pos:end="301:73">h</name></expr></argument>, <argument pos:start="301:76" pos:end="301:96"><expr pos:start="301:76" pos:end="301:96"><name pos:start="301:76" pos:end="301:96"><name pos:start="301:76" pos:end="301:77">sh</name><operator pos:start="301:78" pos:end="301:79">-&gt;</operator><name pos:start="301:80" pos:end="301:96">pic_order_cnt_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="303:15" pos:end="305:54">else<block type="pseudo" pos:start="305:17" pos:end="305:54"><block_content pos:start="305:17" pos:end="305:54">

                <expr_stmt pos:start="305:17" pos:end="305:54"><expr pos:start="305:17" pos:end="305:53"><name pos:start="305:17" pos:end="305:40"><name pos:start="305:17" pos:end="305:17">s</name><operator pos:start="305:18" pos:end="305:19">-&gt;</operator><name pos:start="305:20" pos:end="305:40">output_picture_number</name></name> <operator pos:start="305:42" pos:end="305:42">=</operator> <name pos:start="305:44" pos:end="305:49"><name pos:start="305:44" pos:end="305:44">h</name><operator pos:start="305:45" pos:end="305:46">-&gt;</operator><name pos:start="305:47" pos:end="305:49">poc</name></name> <operator pos:start="305:51" pos:end="305:51">=</operator> <literal type="number" pos:start="305:53" pos:end="305:53">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="309:13" pos:end="325:36"><if pos:start="309:13" pos:end="325:36">if <condition pos:start="309:16" pos:end="323:47">(<expr pos:start="309:17" pos:end="323:46"><name pos:start="309:17" pos:end="309:30"><name pos:start="309:17" pos:end="309:17">h</name><operator pos:start="309:18" pos:end="309:19">-&gt;</operator><name pos:start="309:20" pos:end="309:30">temporal_id</name></name> <operator pos:start="309:32" pos:end="309:33">==</operator> <literal type="number" pos:start="309:35" pos:end="309:35">0</literal> <operator pos:start="309:37" pos:end="309:38">&amp;&amp;</operator>

                <name pos:start="311:17" pos:end="311:32"><name pos:start="311:17" pos:end="311:17">h</name><operator pos:start="311:18" pos:end="311:19">-&gt;</operator><name pos:start="311:20" pos:end="311:32">nal_unit_type</name></name> <operator pos:start="311:34" pos:end="311:35">!=</operator> <name pos:start="311:37" pos:end="311:47">NAL_TRAIL_N</name> <operator pos:start="311:49" pos:end="311:50">&amp;&amp;</operator>

                <name pos:start="313:17" pos:end="313:32"><name pos:start="313:17" pos:end="313:17">h</name><operator pos:start="313:18" pos:end="313:19">-&gt;</operator><name pos:start="313:20" pos:end="313:32">nal_unit_type</name></name> <operator pos:start="313:34" pos:end="313:35">!=</operator> <name pos:start="313:37" pos:end="313:45">NAL_TSA_N</name> <operator pos:start="313:47" pos:end="313:48">&amp;&amp;</operator>

                <name pos:start="315:17" pos:end="315:32"><name pos:start="315:17" pos:end="315:17">h</name><operator pos:start="315:18" pos:end="315:19">-&gt;</operator><name pos:start="315:20" pos:end="315:32">nal_unit_type</name></name> <operator pos:start="315:34" pos:end="315:35">!=</operator> <name pos:start="315:37" pos:end="315:46">NAL_STSA_N</name> <operator pos:start="315:48" pos:end="315:49">&amp;&amp;</operator>

                <name pos:start="317:17" pos:end="317:32"><name pos:start="317:17" pos:end="317:17">h</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:32">nal_unit_type</name></name> <operator pos:start="317:34" pos:end="317:35">!=</operator> <name pos:start="317:37" pos:end="317:46">NAL_RADL_N</name> <operator pos:start="317:48" pos:end="317:49">&amp;&amp;</operator>

                <name pos:start="319:17" pos:end="319:32"><name pos:start="319:17" pos:end="319:17">h</name><operator pos:start="319:18" pos:end="319:19">-&gt;</operator><name pos:start="319:20" pos:end="319:32">nal_unit_type</name></name> <operator pos:start="319:34" pos:end="319:35">!=</operator> <name pos:start="319:37" pos:end="319:46">NAL_RASL_N</name> <operator pos:start="319:48" pos:end="319:49">&amp;&amp;</operator>

                <name pos:start="321:17" pos:end="321:32"><name pos:start="321:17" pos:end="321:17">h</name><operator pos:start="321:18" pos:end="321:19">-&gt;</operator><name pos:start="321:20" pos:end="321:32">nal_unit_type</name></name> <operator pos:start="321:34" pos:end="321:35">!=</operator> <name pos:start="321:37" pos:end="321:46">NAL_RADL_R</name> <operator pos:start="321:48" pos:end="321:49">&amp;&amp;</operator>

                <name pos:start="323:17" pos:end="323:32"><name pos:start="323:17" pos:end="323:17">h</name><operator pos:start="323:18" pos:end="323:19">-&gt;</operator><name pos:start="323:20" pos:end="323:32">nal_unit_type</name></name> <operator pos:start="323:34" pos:end="323:35">!=</operator> <name pos:start="323:37" pos:end="323:46">NAL_RASL_R</name></expr>)</condition><block type="pseudo" pos:start="325:17" pos:end="325:36"><block_content pos:start="325:17" pos:end="325:36">

                <expr_stmt pos:start="325:17" pos:end="325:36"><expr pos:start="325:17" pos:end="325:35"><name pos:start="325:17" pos:end="325:26"><name pos:start="325:17" pos:end="325:17">h</name><operator pos:start="325:18" pos:end="325:19">-&gt;</operator><name pos:start="325:20" pos:end="325:26">pocTid0</name></name> <operator pos:start="325:28" pos:end="325:28">=</operator> <name pos:start="325:30" pos:end="325:35"><name pos:start="325:30" pos:end="325:30">h</name><operator pos:start="325:31" pos:end="325:32">-&gt;</operator><name pos:start="325:33" pos:end="325:35">poc</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <return pos:start="329:13" pos:end="329:21">return <expr pos:start="329:20" pos:end="329:20"><literal type="number" pos:start="329:20" pos:end="329:20">0</literal></expr>;</return> <comment type="block" pos:start="329:23" pos:end="329:56">/* no need to evaluate the rest */</comment>

        </block_content>}</block></switch>

        <expr_stmt pos:start="333:9" pos:end="333:24"><expr pos:start="333:9" pos:end="333:23"><name pos:start="333:9" pos:end="333:11">buf</name> <operator pos:start="333:13" pos:end="333:14">+=</operator> <name pos:start="333:16" pos:end="333:23">consumed</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="337:5" pos:end="337:32">/* didn't find a picture! */</comment>

    <expr_stmt pos:start="339:5" pos:end="339:71"><expr pos:start="339:5" pos:end="339:70"><call pos:start="339:5" pos:end="339:70"><name pos:start="339:5" pos:end="339:10">av_log</name><argument_list pos:start="339:11" pos:end="339:70">(<argument pos:start="339:12" pos:end="339:19"><expr pos:start="339:12" pos:end="339:19"><name pos:start="339:12" pos:end="339:19"><name pos:start="339:12" pos:end="339:12">h</name><operator pos:start="339:13" pos:end="339:14">-&gt;</operator><name pos:start="339:15" pos:end="339:19">avctx</name></name></expr></argument>, <argument pos:start="339:22" pos:end="339:33"><expr pos:start="339:22" pos:end="339:33"><name pos:start="339:22" pos:end="339:33">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="339:36" pos:end="339:69"><expr pos:start="339:36" pos:end="339:69"><literal type="string" pos:start="339:36" pos:end="339:69">"missing picture in access unit\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="341:5" pos:end="341:14">return <expr pos:start="341:12" pos:end="341:13"><operator pos:start="341:12" pos:end="341:12">-</operator><literal type="number" pos:start="341:13" pos:end="341:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
