<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15464.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">decode_cabac_mb_type</name><parameter_list pos:start="1:32" pos:end="1:49">( <parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:46"><name pos:start="1:34" pos:end="1:44">H264Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">h</name></decl></parameter> )</parameter_list> <block pos:start="1:51" pos:end="111:1">{<block_content pos:start="3:5" pos:end="109:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="109:5"><if pos:start="7:5" pos:end="11:5">if<condition pos:start="7:7" pos:end="7:33">( <expr pos:start="7:9" pos:end="7:31"><name pos:start="7:9" pos:end="7:21"><name pos:start="7:9" pos:end="7:9">h</name><operator pos:start="7:10" pos:end="7:11">-&gt;</operator><name pos:start="7:12" pos:end="7:21">slice_type</name></name> <operator pos:start="7:23" pos:end="7:24">==</operator> <name pos:start="7:26" pos:end="7:31">I_TYPE</name></expr> )</condition> <block pos:start="7:35" pos:end="11:5">{<block_content pos:start="9:9" pos:end="9:51">

        <return pos:start="9:9" pos:end="9:51">return <expr pos:start="9:16" pos:end="9:50"><call pos:start="9:16" pos:end="9:50"><name pos:start="9:16" pos:end="9:41">decode_cabac_intra_mb_type</name><argument_list pos:start="9:42" pos:end="9:50">(<argument pos:start="9:43" pos:end="9:43"><expr pos:start="9:43" pos:end="9:43"><name pos:start="9:43" pos:end="9:43">h</name></expr></argument>, <argument pos:start="9:46" pos:end="9:46"><expr pos:start="9:46" pos:end="9:46"><literal type="number" pos:start="9:46" pos:end="9:46">3</literal></expr></argument>, <argument pos:start="9:49" pos:end="9:49"><expr pos:start="9:49" pos:end="9:49"><literal type="number" pos:start="9:49" pos:end="9:49">1</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="11:7" pos:end="37:5">else if<condition pos:start="11:14" pos:end="11:40">( <expr pos:start="11:16" pos:end="11:38"><name pos:start="11:16" pos:end="11:28"><name pos:start="11:16" pos:end="11:16">h</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:28">slice_type</name></name> <operator pos:start="11:30" pos:end="11:31">==</operator> <name pos:start="11:33" pos:end="11:38">P_TYPE</name></expr> )</condition> <block pos:start="11:42" pos:end="37:5">{<block_content pos:start="13:9" pos:end="35:9">

        <if_stmt pos:start="13:9" pos:end="35:9"><if pos:start="13:9" pos:end="31:9">if<condition pos:start="13:11" pos:end="13:62">( <expr pos:start="13:13" pos:end="13:60"><call pos:start="13:13" pos:end="13:55"><name pos:start="13:13" pos:end="13:21">get_cabac</name><argument_list pos:start="13:22" pos:end="13:55">( <argument pos:start="13:24" pos:end="13:32"><expr pos:start="13:24" pos:end="13:32"><operator pos:start="13:24" pos:end="13:24">&amp;</operator><name pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:25">h</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:32">cabac</name></name></expr></argument>, <argument pos:start="13:35" pos:end="13:53"><expr pos:start="13:35" pos:end="13:53"><operator pos:start="13:35" pos:end="13:35">&amp;</operator><name pos:start="13:36" pos:end="13:53"><name pos:start="13:36" pos:end="13:36">h</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:49">cabac_state</name><index pos:start="13:50" pos:end="13:53">[<expr pos:start="13:51" pos:end="13:52"><literal type="number" pos:start="13:51" pos:end="13:52">14</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="13:57" pos:end="13:58">==</operator> <literal type="number" pos:start="13:60" pos:end="13:60">0</literal></expr> )</condition> <block pos:start="13:64" pos:end="31:9">{<block_content pos:start="17:13" pos:end="29:13">

            <comment type="block" pos:start="15:13" pos:end="15:24">/* P-type */</comment>

            <if_stmt pos:start="17:13" pos:end="29:13"><if pos:start="17:13" pos:end="23:13">if<condition pos:start="17:15" pos:end="17:66">( <expr pos:start="17:17" pos:end="17:64"><call pos:start="17:17" pos:end="17:59"><name pos:start="17:17" pos:end="17:25">get_cabac</name><argument_list pos:start="17:26" pos:end="17:59">( <argument pos:start="17:28" pos:end="17:36"><expr pos:start="17:28" pos:end="17:36"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:36"><name pos:start="17:29" pos:end="17:29">h</name><operator pos:start="17:30" pos:end="17:31">-&gt;</operator><name pos:start="17:32" pos:end="17:36">cabac</name></name></expr></argument>, <argument pos:start="17:39" pos:end="17:57"><expr pos:start="17:39" pos:end="17:57"><operator pos:start="17:39" pos:end="17:39">&amp;</operator><name pos:start="17:40" pos:end="17:57"><name pos:start="17:40" pos:end="17:40">h</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:53">cabac_state</name><index pos:start="17:54" pos:end="17:57">[<expr pos:start="17:55" pos:end="17:56"><literal type="number" pos:start="17:55" pos:end="17:56">15</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="17:61" pos:end="17:62">==</operator> <literal type="number" pos:start="17:64" pos:end="17:64">0</literal></expr> )</condition> <block pos:start="17:68" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:71">

                <comment type="block" pos:start="19:17" pos:end="19:40">/* P_L0_D16x16, P_8x8 */</comment>

                <return pos:start="21:17" pos:end="21:71">return <expr pos:start="21:24" pos:end="21:70"><literal type="number" pos:start="21:24" pos:end="21:24">3</literal> <operator pos:start="21:26" pos:end="21:26">*</operator> <call pos:start="21:28" pos:end="21:70"><name pos:start="21:28" pos:end="21:36">get_cabac</name><argument_list pos:start="21:37" pos:end="21:70">( <argument pos:start="21:39" pos:end="21:47"><expr pos:start="21:39" pos:end="21:47"><operator pos:start="21:39" pos:end="21:39">&amp;</operator><name pos:start="21:40" pos:end="21:47"><name pos:start="21:40" pos:end="21:40">h</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:47">cabac</name></name></expr></argument>, <argument pos:start="21:50" pos:end="21:68"><expr pos:start="21:50" pos:end="21:68"><operator pos:start="21:50" pos:end="21:50">&amp;</operator><name pos:start="21:51" pos:end="21:68"><name pos:start="21:51" pos:end="21:51">h</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:64">cabac_state</name><index pos:start="21:65" pos:end="21:68">[<expr pos:start="21:66" pos:end="21:67"><literal type="number" pos:start="21:66" pos:end="21:67">16</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</return>

            </block_content>}</block></if> <else pos:start="23:15" pos:end="29:13">else <block pos:start="23:20" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:71">

                <comment type="block" pos:start="25:17" pos:end="25:44">/* P_L0_D8x16, P_L0_D16x8 */</comment>

                <return pos:start="27:17" pos:end="27:71">return <expr pos:start="27:24" pos:end="27:70"><literal type="number" pos:start="27:24" pos:end="27:26">2</literal> <operator pos:start="27:26" pos:end="27:26">-</operator> <call pos:start="27:28" pos:end="27:70"><name pos:start="27:28" pos:end="27:36">get_cabac</name><argument_list pos:start="27:37" pos:end="27:70">( <argument pos:start="27:39" pos:end="27:47"><expr pos:start="27:39" pos:end="27:47"><operator pos:start="27:39" pos:end="27:39">&amp;</operator><name pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:40">h</name><operator pos:start="27:41" pos:end="27:42">-&gt;</operator><name pos:start="27:43" pos:end="27:47">cabac</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:68"><expr pos:start="27:50" pos:end="27:68"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:68"><name pos:start="27:51" pos:end="27:51">h</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:64">cabac_state</name><index pos:start="27:65" pos:end="27:68">[<expr pos:start="27:66" pos:end="27:67"><literal type="number" pos:start="27:66" pos:end="27:67">17</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:60">

            <return pos:start="33:13" pos:end="33:60">return <expr pos:start="33:20" pos:end="33:59"><call pos:start="33:20" pos:end="33:55"><name pos:start="33:20" pos:end="33:45">decode_cabac_intra_mb_type</name><argument_list pos:start="33:46" pos:end="33:55">(<argument pos:start="33:47" pos:end="33:47"><expr pos:start="33:47" pos:end="33:47"><name pos:start="33:47" pos:end="33:47">h</name></expr></argument>, <argument pos:start="33:50" pos:end="33:51"><expr pos:start="33:50" pos:end="33:51"><literal type="number" pos:start="33:50" pos:end="33:51">17</literal></expr></argument>, <argument pos:start="33:54" pos:end="33:54"><expr pos:start="33:54" pos:end="33:54"><literal type="number" pos:start="33:54" pos:end="33:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="33:57" pos:end="33:57">+</operator> <literal type="number" pos:start="33:59" pos:end="33:59">5</literal></expr>;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="37:7" pos:end="103:5">else if<condition pos:start="37:14" pos:end="37:40">( <expr pos:start="37:16" pos:end="37:38"><name pos:start="37:16" pos:end="37:28"><name pos:start="37:16" pos:end="37:16">h</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:28">slice_type</name></name> <operator pos:start="37:30" pos:end="37:31">==</operator> <name pos:start="37:33" pos:end="37:38">B_TYPE</name></expr> )</condition> <block pos:start="37:42" pos:end="103:5">{<block_content pos:start="39:9" pos:end="101:24">

        <decl_stmt pos:start="39:9" pos:end="39:44"><decl pos:start="39:9" pos:end="39:43"><type pos:start="39:9" pos:end="39:17"><specifier pos:start="39:9" pos:end="39:13">const</specifier> <name pos:start="39:15" pos:end="39:17">int</name></type> <name pos:start="39:19" pos:end="39:24">mba_xy</name> <init pos:start="39:26" pos:end="39:43">= <expr pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:43"><name pos:start="39:28" pos:end="39:28">h</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:40">left_mb_xy</name><index pos:start="39:41" pos:end="39:43">[<expr pos:start="39:42" pos:end="39:42"><literal type="number" pos:start="39:42" pos:end="39:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:40"><decl pos:start="41:9" pos:end="41:39"><type pos:start="41:9" pos:end="41:17"><specifier pos:start="41:9" pos:end="41:13">const</specifier> <name pos:start="41:15" pos:end="41:17">int</name></type> <name pos:start="41:19" pos:end="41:24">mbb_xy</name> <init pos:start="41:26" pos:end="41:39">= <expr pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:39"><name pos:start="41:28" pos:end="41:28">h</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:39">top_mb_xy</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:20"><decl pos:start="43:9" pos:end="43:19"><type pos:start="43:9" pos:end="43:11"><name pos:start="43:9" pos:end="43:11">int</name></type> <name pos:start="43:13" pos:end="43:15">ctx</name> <init pos:start="43:17" pos:end="43:19">= <expr pos:start="43:19" pos:end="43:19"><literal type="number" pos:start="43:19" pos:end="43:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:17"><decl pos:start="45:9" pos:end="45:16"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:16">bits</name></decl>;</decl_stmt>



        <if_stmt pos:start="49:9" pos:end="51:18"><if pos:start="49:9" pos:end="51:18">if<condition pos:start="49:11" pos:end="49:104">( <expr pos:start="49:13" pos:end="49:102"><name pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:13">h</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:26">slice_table</name><index pos:start="49:27" pos:end="49:34">[<expr pos:start="49:28" pos:end="49:33"><name pos:start="49:28" pos:end="49:33">mba_xy</name></expr>]</index></name> <operator pos:start="49:36" pos:end="49:37">==</operator> <name pos:start="49:39" pos:end="49:50"><name pos:start="49:39" pos:end="49:39">h</name><operator pos:start="49:40" pos:end="49:41">-&gt;</operator><name pos:start="49:42" pos:end="49:50">slice_num</name></name> <operator pos:start="49:52" pos:end="49:53">&amp;&amp;</operator> <operator pos:start="49:55" pos:end="49:55">!</operator><call pos:start="49:56" pos:end="49:102"><name pos:start="49:56" pos:end="49:64">IS_DIRECT</name><argument_list pos:start="49:65" pos:end="49:102">( <argument pos:start="49:67" pos:end="49:100"><expr pos:start="49:67" pos:end="49:100"><name pos:start="49:67" pos:end="49:100"><name pos:start="49:67" pos:end="49:67">s</name><operator pos:start="49:68" pos:end="49:69">-&gt;</operator><name pos:start="49:70" pos:end="49:84">current_picture</name><operator pos:start="49:85" pos:end="49:85">.</operator><name pos:start="49:86" pos:end="49:92">mb_type</name><index pos:start="49:93" pos:end="49:100">[<expr pos:start="49:94" pos:end="49:99"><name pos:start="49:94" pos:end="49:99">mba_xy</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="51:13" pos:end="51:18"><block_content pos:start="51:13" pos:end="51:18">

            <expr_stmt pos:start="51:13" pos:end="51:18"><expr pos:start="51:13" pos:end="51:17"><name pos:start="51:13" pos:end="51:15">ctx</name><operator pos:start="51:16" pos:end="51:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="53:9" pos:end="55:18"><if pos:start="53:9" pos:end="55:18">if<condition pos:start="53:11" pos:end="53:104">( <expr pos:start="53:13" pos:end="53:102"><name pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:13">h</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:26">slice_table</name><index pos:start="53:27" pos:end="53:34">[<expr pos:start="53:28" pos:end="53:33"><name pos:start="53:28" pos:end="53:33">mbb_xy</name></expr>]</index></name> <operator pos:start="53:36" pos:end="53:37">==</operator> <name pos:start="53:39" pos:end="53:50"><name pos:start="53:39" pos:end="53:39">h</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:50">slice_num</name></name> <operator pos:start="53:52" pos:end="53:53">&amp;&amp;</operator> <operator pos:start="53:55" pos:end="53:55">!</operator><call pos:start="53:56" pos:end="53:102"><name pos:start="53:56" pos:end="53:64">IS_DIRECT</name><argument_list pos:start="53:65" pos:end="53:102">( <argument pos:start="53:67" pos:end="53:100"><expr pos:start="53:67" pos:end="53:100"><name pos:start="53:67" pos:end="53:100"><name pos:start="53:67" pos:end="53:67">s</name><operator pos:start="53:68" pos:end="53:69">-&gt;</operator><name pos:start="53:70" pos:end="53:84">current_picture</name><operator pos:start="53:85" pos:end="53:85">.</operator><name pos:start="53:86" pos:end="53:92">mb_type</name><index pos:start="53:93" pos:end="53:100">[<expr pos:start="53:94" pos:end="53:99"><name pos:start="53:94" pos:end="53:99">mbb_xy</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="55:13" pos:end="55:18"><block_content pos:start="55:13" pos:end="55:18">

            <expr_stmt pos:start="55:13" pos:end="55:18"><expr pos:start="55:13" pos:end="55:17"><name pos:start="55:13" pos:end="55:15">ctx</name><operator pos:start="55:16" pos:end="55:17">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="59:9" pos:end="61:21"><if pos:start="59:9" pos:end="61:21">if<condition pos:start="59:11" pos:end="59:62">( <expr pos:start="59:13" pos:end="59:60"><operator pos:start="59:13" pos:end="59:13">!</operator><call pos:start="59:14" pos:end="59:60"><name pos:start="59:14" pos:end="59:22">get_cabac</name><argument_list pos:start="59:23" pos:end="59:60">( <argument pos:start="59:25" pos:end="59:33"><expr pos:start="59:25" pos:end="59:33"><operator pos:start="59:25" pos:end="59:25">&amp;</operator><name pos:start="59:26" pos:end="59:33"><name pos:start="59:26" pos:end="59:26">h</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:33">cabac</name></name></expr></argument>, <argument pos:start="59:36" pos:end="59:58"><expr pos:start="59:36" pos:end="59:58"><operator pos:start="59:36" pos:end="59:36">&amp;</operator><name pos:start="59:37" pos:end="59:58"><name pos:start="59:37" pos:end="59:37">h</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:50">cabac_state</name><index pos:start="59:51" pos:end="59:58">[<expr pos:start="59:52" pos:end="59:57"><literal type="number" pos:start="59:52" pos:end="59:54">27</literal><operator pos:start="59:54" pos:end="59:54">+</operator><name pos:start="59:55" pos:end="59:57">ctx</name></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition><block type="pseudo" pos:start="61:13" pos:end="61:21"><block_content pos:start="61:13" pos:end="61:21">

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="61:23" pos:end="61:42">/* B_Direct_16x16 */</comment>



        <if_stmt pos:start="65:9" pos:end="69:9"><if pos:start="65:9" pos:end="69:9">if<condition pos:start="65:11" pos:end="65:60">( <expr pos:start="65:13" pos:end="65:58"><operator pos:start="65:13" pos:end="65:13">!</operator><call pos:start="65:14" pos:end="65:58"><name pos:start="65:14" pos:end="65:22">get_cabac</name><argument_list pos:start="65:23" pos:end="65:58">( <argument pos:start="65:25" pos:end="65:33"><expr pos:start="65:25" pos:end="65:33"><operator pos:start="65:25" pos:end="65:25">&amp;</operator><name pos:start="65:26" pos:end="65:33"><name pos:start="65:26" pos:end="65:26">h</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:33">cabac</name></name></expr></argument>, <argument pos:start="65:36" pos:end="65:56"><expr pos:start="65:36" pos:end="65:56"><operator pos:start="65:36" pos:end="65:36">&amp;</operator><name pos:start="65:37" pos:end="65:56"><name pos:start="65:37" pos:end="65:37">h</name><operator pos:start="65:38" pos:end="65:39">-&gt;</operator><name pos:start="65:40" pos:end="65:50">cabac_state</name><index pos:start="65:51" pos:end="65:56">[<expr pos:start="65:52" pos:end="65:55"><literal type="number" pos:start="65:52" pos:end="65:54">27</literal><operator pos:start="65:54" pos:end="65:54">+</operator><literal type="number" pos:start="65:55" pos:end="65:55">3</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr> )</condition> <block pos:start="65:62" pos:end="69:9">{<block_content pos:start="67:13" pos:end="67:69">

            <return pos:start="67:13" pos:end="67:69">return <expr pos:start="67:20" pos:end="67:68"><literal type="number" pos:start="67:20" pos:end="67:22">1</literal> <operator pos:start="67:22" pos:end="67:22">+</operator> <call pos:start="67:24" pos:end="67:68"><name pos:start="67:24" pos:end="67:32">get_cabac</name><argument_list pos:start="67:33" pos:end="67:68">( <argument pos:start="67:35" pos:end="67:43"><expr pos:start="67:35" pos:end="67:43"><operator pos:start="67:35" pos:end="67:35">&amp;</operator><name pos:start="67:36" pos:end="67:43"><name pos:start="67:36" pos:end="67:36">h</name><operator pos:start="67:37" pos:end="67:38">-&gt;</operator><name pos:start="67:39" pos:end="67:43">cabac</name></name></expr></argument>, <argument pos:start="67:46" pos:end="67:66"><expr pos:start="67:46" pos:end="67:66"><operator pos:start="67:46" pos:end="67:46">&amp;</operator><name pos:start="67:47" pos:end="67:66"><name pos:start="67:47" pos:end="67:47">h</name><operator pos:start="67:48" pos:end="67:49">-&gt;</operator><name pos:start="67:50" pos:end="67:60">cabac_state</name><index pos:start="67:61" pos:end="67:66">[<expr pos:start="67:62" pos:end="67:65"><literal type="number" pos:start="67:62" pos:end="67:64">27</literal><operator pos:start="67:64" pos:end="67:64">+</operator><literal type="number" pos:start="67:65" pos:end="67:65">5</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</return> <comment type="block" pos:start="67:71" pos:end="67:89">/* B_L[01]_16x16 */</comment>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:66"><expr pos:start="73:9" pos:end="73:65"><name pos:start="73:9" pos:end="73:12">bits</name> <operator pos:start="73:14" pos:end="73:14">=</operator> <call pos:start="73:16" pos:end="73:60"><name pos:start="73:16" pos:end="73:24">get_cabac</name><argument_list pos:start="73:25" pos:end="73:60">( <argument pos:start="73:27" pos:end="73:35"><expr pos:start="73:27" pos:end="73:35"><operator pos:start="73:27" pos:end="73:27">&amp;</operator><name pos:start="73:28" pos:end="73:35"><name pos:start="73:28" pos:end="73:28">h</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:35">cabac</name></name></expr></argument>, <argument pos:start="73:38" pos:end="73:58"><expr pos:start="73:38" pos:end="73:58"><operator pos:start="73:38" pos:end="73:38">&amp;</operator><name pos:start="73:39" pos:end="73:58"><name pos:start="73:39" pos:end="73:39">h</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:52">cabac_state</name><index pos:start="73:53" pos:end="73:58">[<expr pos:start="73:54" pos:end="73:57"><literal type="number" pos:start="73:54" pos:end="73:56">27</literal><operator pos:start="73:56" pos:end="73:56">+</operator><literal type="number" pos:start="73:57" pos:end="73:57">4</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="73:62" pos:end="73:63">&lt;&lt;</operator> <literal type="number" pos:start="73:65" pos:end="73:65">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:66"><expr pos:start="75:9" pos:end="75:65"><name pos:start="75:9" pos:end="75:12">bits</name><operator pos:start="75:13" pos:end="75:14">|=</operator> <call pos:start="75:16" pos:end="75:60"><name pos:start="75:16" pos:end="75:24">get_cabac</name><argument_list pos:start="75:25" pos:end="75:60">( <argument pos:start="75:27" pos:end="75:35"><expr pos:start="75:27" pos:end="75:35"><operator pos:start="75:27" pos:end="75:27">&amp;</operator><name pos:start="75:28" pos:end="75:35"><name pos:start="75:28" pos:end="75:28">h</name><operator pos:start="75:29" pos:end="75:30">-&gt;</operator><name pos:start="75:31" pos:end="75:35">cabac</name></name></expr></argument>, <argument pos:start="75:38" pos:end="75:58"><expr pos:start="75:38" pos:end="75:58"><operator pos:start="75:38" pos:end="75:38">&amp;</operator><name pos:start="75:39" pos:end="75:58"><name pos:start="75:39" pos:end="75:39">h</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:52">cabac_state</name><index pos:start="75:53" pos:end="75:58">[<expr pos:start="75:54" pos:end="75:57"><literal type="number" pos:start="75:54" pos:end="75:56">27</literal><operator pos:start="75:56" pos:end="75:56">+</operator><literal type="number" pos:start="75:57" pos:end="75:57">5</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="75:62" pos:end="75:63">&lt;&lt;</operator> <literal type="number" pos:start="75:65" pos:end="75:65">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:66"><expr pos:start="77:9" pos:end="77:65"><name pos:start="77:9" pos:end="77:12">bits</name><operator pos:start="77:13" pos:end="77:14">|=</operator> <call pos:start="77:16" pos:end="77:60"><name pos:start="77:16" pos:end="77:24">get_cabac</name><argument_list pos:start="77:25" pos:end="77:60">( <argument pos:start="77:27" pos:end="77:35"><expr pos:start="77:27" pos:end="77:35"><operator pos:start="77:27" pos:end="77:27">&amp;</operator><name pos:start="77:28" pos:end="77:35"><name pos:start="77:28" pos:end="77:28">h</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:35">cabac</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:58"><expr pos:start="77:38" pos:end="77:58"><operator pos:start="77:38" pos:end="77:38">&amp;</operator><name pos:start="77:39" pos:end="77:58"><name pos:start="77:39" pos:end="77:39">h</name><operator pos:start="77:40" pos:end="77:41">-&gt;</operator><name pos:start="77:42" pos:end="77:52">cabac_state</name><index pos:start="77:53" pos:end="77:58">[<expr pos:start="77:54" pos:end="77:57"><literal type="number" pos:start="77:54" pos:end="77:56">27</literal><operator pos:start="77:56" pos:end="77:56">+</operator><literal type="number" pos:start="77:57" pos:end="77:57">5</literal></expr>]</index></name></expr></argument> )</argument_list></call> <operator pos:start="77:62" pos:end="77:63">&lt;&lt;</operator> <literal type="number" pos:start="77:65" pos:end="77:65">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:61"><expr pos:start="79:9" pos:end="79:60"><name pos:start="79:9" pos:end="79:12">bits</name><operator pos:start="79:13" pos:end="79:14">|=</operator> <call pos:start="79:16" pos:end="79:60"><name pos:start="79:16" pos:end="79:24">get_cabac</name><argument_list pos:start="79:25" pos:end="79:60">( <argument pos:start="79:27" pos:end="79:35"><expr pos:start="79:27" pos:end="79:35"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:35"><name pos:start="79:28" pos:end="79:28">h</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:35">cabac</name></name></expr></argument>, <argument pos:start="79:38" pos:end="79:58"><expr pos:start="79:38" pos:end="79:58"><operator pos:start="79:38" pos:end="79:38">&amp;</operator><name pos:start="79:39" pos:end="79:58"><name pos:start="79:39" pos:end="79:39">h</name><operator pos:start="79:40" pos:end="79:41">-&gt;</operator><name pos:start="79:42" pos:end="79:52">cabac_state</name><index pos:start="79:53" pos:end="79:58">[<expr pos:start="79:54" pos:end="79:57"><literal type="number" pos:start="79:54" pos:end="79:56">27</literal><operator pos:start="79:56" pos:end="79:56">+</operator><literal type="number" pos:start="79:57" pos:end="79:57">5</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="81:9" pos:end="95:22"><if pos:start="81:9" pos:end="83:28">if<condition pos:start="81:11" pos:end="81:22">( <expr pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:16">bits</name> <operator pos:start="81:18" pos:end="81:18">&lt;</operator> <literal type="number" pos:start="81:20" pos:end="81:20">8</literal></expr> )</condition><block type="pseudo" pos:start="83:13" pos:end="83:28"><block_content pos:start="83:13" pos:end="83:28">

            <return pos:start="83:13" pos:end="83:28">return <expr pos:start="83:20" pos:end="83:27"><name pos:start="83:20" pos:end="83:23">bits</name> <operator pos:start="83:25" pos:end="83:25">+</operator> <literal type="number" pos:start="83:27" pos:end="83:27">3</literal></expr>;</return></block_content></block></if> <comment type="block" pos:start="83:30" pos:end="83:66">/* B_Bi_16x16 through B_L1_L0_16x8 */</comment>

        <if type="elseif" pos:start="85:9" pos:end="89:9">else if<condition pos:start="85:16" pos:end="85:29">( <expr pos:start="85:18" pos:end="85:27"><name pos:start="85:18" pos:end="85:21">bits</name> <operator pos:start="85:23" pos:end="85:24">==</operator> <literal type="number" pos:start="85:26" pos:end="85:27">13</literal></expr> )</condition> <block pos:start="85:31" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:61">

            <return pos:start="87:13" pos:end="87:61">return <expr pos:start="87:20" pos:end="87:60"><call pos:start="87:20" pos:end="87:55"><name pos:start="87:20" pos:end="87:45">decode_cabac_intra_mb_type</name><argument_list pos:start="87:46" pos:end="87:55">(<argument pos:start="87:47" pos:end="87:47"><expr pos:start="87:47" pos:end="87:47"><name pos:start="87:47" pos:end="87:47">h</name></expr></argument>, <argument pos:start="87:50" pos:end="87:51"><expr pos:start="87:50" pos:end="87:51"><literal type="number" pos:start="87:50" pos:end="87:51">32</literal></expr></argument>, <argument pos:start="87:54" pos:end="87:54"><expr pos:start="87:54" pos:end="87:54"><literal type="number" pos:start="87:54" pos:end="87:54">0</literal></expr></argument>)</argument_list></call> <operator pos:start="87:57" pos:end="87:57">+</operator> <literal type="number" pos:start="87:59" pos:end="87:60">23</literal></expr>;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="89:11" pos:end="91:22">else if<condition pos:start="89:18" pos:end="89:31">( <expr pos:start="89:20" pos:end="89:29"><name pos:start="89:20" pos:end="89:23">bits</name> <operator pos:start="89:25" pos:end="89:26">==</operator> <literal type="number" pos:start="89:28" pos:end="89:29">14</literal></expr> )</condition><block type="pseudo" pos:start="91:13" pos:end="91:22"><block_content pos:start="91:13" pos:end="91:22">

            <return pos:start="91:13" pos:end="91:22">return <expr pos:start="91:20" pos:end="91:21"><literal type="number" pos:start="91:20" pos:end="91:21">11</literal></expr>;</return></block_content></block></if> <comment type="block" pos:start="91:24" pos:end="91:41">/* B_L1_L0_8x16 */</comment>

        <if type="elseif" pos:start="93:9" pos:end="95:22">else if<condition pos:start="93:16" pos:end="93:29">( <expr pos:start="93:18" pos:end="93:27"><name pos:start="93:18" pos:end="93:21">bits</name> <operator pos:start="93:23" pos:end="93:24">==</operator> <literal type="number" pos:start="93:26" pos:end="93:27">15</literal></expr> )</condition><block type="pseudo" pos:start="95:13" pos:end="95:22"><block_content pos:start="95:13" pos:end="95:22">

            <return pos:start="95:13" pos:end="95:22">return <expr pos:start="95:20" pos:end="95:21"><literal type="number" pos:start="95:20" pos:end="95:21">22</literal></expr>;</return></block_content></block></if></if_stmt> <comment type="block" pos:start="95:24" pos:end="95:34">/* B_8x8 */</comment>



        <expr_stmt pos:start="99:9" pos:end="99:74"><expr pos:start="99:9" pos:end="99:73"><name pos:start="99:9" pos:end="99:12">bits</name><operator pos:start="99:13" pos:end="99:13">=</operator> <operator pos:start="99:15" pos:end="99:15">(</operator> <name pos:start="99:17" pos:end="99:20">bits</name><operator pos:start="99:21" pos:end="99:22">&lt;&lt;</operator><literal type="number" pos:start="99:23" pos:end="99:23">1</literal> <operator pos:start="99:25" pos:end="99:25">)</operator> <operator pos:start="99:27" pos:end="99:27">|</operator> <call pos:start="99:29" pos:end="99:73"><name pos:start="99:29" pos:end="99:37">get_cabac</name><argument_list pos:start="99:38" pos:end="99:73">( <argument pos:start="99:40" pos:end="99:48"><expr pos:start="99:40" pos:end="99:48"><operator pos:start="99:40" pos:end="99:40">&amp;</operator><name pos:start="99:41" pos:end="99:48"><name pos:start="99:41" pos:end="99:41">h</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:48">cabac</name></name></expr></argument>, <argument pos:start="99:51" pos:end="99:71"><expr pos:start="99:51" pos:end="99:71"><operator pos:start="99:51" pos:end="99:51">&amp;</operator><name pos:start="99:52" pos:end="99:71"><name pos:start="99:52" pos:end="99:52">h</name><operator pos:start="99:53" pos:end="99:54">-&gt;</operator><name pos:start="99:55" pos:end="99:65">cabac_state</name><index pos:start="99:66" pos:end="99:71">[<expr pos:start="99:67" pos:end="99:70"><literal type="number" pos:start="99:67" pos:end="99:69">27</literal><operator pos:start="99:69" pos:end="99:69">+</operator><literal type="number" pos:start="99:70" pos:end="99:70">5</literal></expr>]</index></name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:24">return <expr pos:start="101:16" pos:end="101:23"><name pos:start="101:16" pos:end="101:19">bits</name> <operator pos:start="101:21" pos:end="101:21">-</operator> <literal type="number" pos:start="101:23" pos:end="101:23">4</literal></expr>;</return> <comment type="block" pos:start="101:26" pos:end="101:58">/* B_L0_Bi_* through B_Bi_Bi_* */</comment>

    </block_content>}</block></if> <else pos:start="103:7" pos:end="109:5">else <block pos:start="103:12" pos:end="109:5">{<block_content pos:start="107:9" pos:end="107:18">

        <comment type="block" pos:start="105:9" pos:end="105:32">/* TODO SI/SP frames? */</comment>

        <return pos:start="107:9" pos:end="107:18">return <expr pos:start="107:16" pos:end="107:17"><operator pos:start="107:16" pos:end="107:16">-</operator><literal type="number" pos:start="107:17" pos:end="107:17">1</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
