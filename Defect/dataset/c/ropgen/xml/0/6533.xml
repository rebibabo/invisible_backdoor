<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6533.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">cpu_dump_state</name> <parameter_list pos:start="1:21" pos:end="5:31">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">CPUState</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:34">env</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:43"><decl pos:start="1:37" pos:end="1:43"><type pos:start="1:37" pos:end="1:43"><name pos:start="1:37" pos:end="1:40">FILE</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">f</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:70"><function_decl pos:start="3:22" pos:end="3:70"><type pos:start="3:22" pos:end="3:24"><name pos:start="3:22" pos:end="3:24">int</name></type> (<modifier pos:start="3:27" pos:end="3:27">*</modifier><name pos:start="3:28" pos:end="3:38">cpu_fprintf</name>)<parameter_list pos:start="3:40" pos:end="3:70">(<parameter pos:start="3:41" pos:end="3:47"><decl pos:start="3:41" pos:end="3:47"><type pos:start="3:41" pos:end="3:47"><name pos:start="3:41" pos:end="3:44">FILE</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:47">f</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:64"><decl pos:start="3:50" pos:end="3:64"><type pos:start="3:50" pos:end="3:64"><specifier pos:start="3:50" pos:end="3:54">const</specifier> <name pos:start="3:56" pos:end="3:59">char</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:64">fmt</name></decl></parameter>, <parameter pos:start="3:67" pos:end="3:69"><decl pos:start="3:67" pos:end="3:69"><type pos:start="3:67" pos:end="3:69"><modifier pos:start="3:67" pos:end="3:69">...</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:30"><decl pos:start="5:22" pos:end="5:30"><type pos:start="5:22" pos:end="5:30"><name pos:start="5:22" pos:end="5:24">int</name></type> <name pos:start="5:26" pos:end="5:30">flags</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="125:1">{<block_content pos:start="15:5" pos:end="124:0">

<cpp:define pos:start="9:1" pos:end="9:15">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:12"><name pos:start="9:9" pos:end="9:12">RGPL</name></cpp:macro>  <cpp:value pos:start="9:15" pos:end="9:15">4</cpp:value></cpp:define>

<cpp:define pos:start="11:1" pos:end="11:15">#<cpp:directive pos:start="11:2" pos:end="11:7">define</cpp:directive> <cpp:macro pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">RFPL</name></cpp:macro>  <cpp:value pos:start="11:15" pos:end="11:15">4</cpp:value></cpp:define>



    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="21:55"><expr pos:start="19:5" pos:end="21:54"><call pos:start="19:5" pos:end="21:54"><name pos:start="19:5" pos:end="19:15">cpu_fprintf</name><argument_list pos:start="19:16" pos:end="21:54">(<argument pos:start="19:17" pos:end="19:17"><expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">f</name></expr></argument>, <argument pos:start="19:20" pos:end="19:74"><expr pos:start="19:20" pos:end="19:74"><literal type="string" pos:start="19:20" pos:end="19:25">"NIP "</literal> <name pos:start="19:27" pos:end="19:31">ADDRX</name> <literal type="string" pos:start="19:33" pos:end="19:40">"   LR "</literal> <name pos:start="19:42" pos:end="19:46">ADDRX</name> <literal type="string" pos:start="19:48" pos:end="19:54">" CTR "</literal> <name pos:start="19:56" pos:end="19:60">ADDRX</name> <literal type="string" pos:start="19:62" pos:end="19:74">" XER %08x\n"</literal></expr></argument>,

                <argument pos:start="21:17" pos:end="21:24"><expr pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:24"><name pos:start="21:17" pos:end="21:19">env</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:24">nip</name></name></expr></argument>, <argument pos:start="21:27" pos:end="21:33"><expr pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:33"><name pos:start="21:27" pos:end="21:29">env</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:33">lr</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:43"><expr pos:start="21:36" pos:end="21:43"><name pos:start="21:36" pos:end="21:43"><name pos:start="21:36" pos:end="21:38">env</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:43">ctr</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:53"><expr pos:start="21:46" pos:end="21:53"><name pos:start="21:46" pos:end="21:53"><name pos:start="21:46" pos:end="21:48">env</name><operator pos:start="21:49" pos:end="21:50">-&gt;</operator><name pos:start="21:51" pos:end="21:53">xer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="28:0"><expr pos:start="23:5" pos:end="25:72"><call pos:start="23:5" pos:end="25:72"><name pos:start="23:5" pos:end="23:15">cpu_fprintf</name><argument_list pos:start="23:16" pos:end="25:72">(<argument pos:start="23:17" pos:end="23:17"><expr pos:start="23:17" pos:end="23:17"><name pos:start="23:17" pos:end="23:17">f</name></expr></argument>, <argument pos:start="23:20" pos:end="23:72"><expr pos:start="23:20" pos:end="23:72"><literal type="string" pos:start="23:20" pos:end="23:25">"MSR "</literal> <name pos:start="23:27" pos:end="23:31">ADDRX</name> <literal type="string" pos:start="23:33" pos:end="23:40">" HID0 "</literal> <name pos:start="23:42" pos:end="23:46">ADDRX</name> <literal type="string" pos:start="23:48" pos:end="23:54">"  HF "</literal> <name pos:start="23:56" pos:end="23:60">ADDRX</name> <literal type="string" pos:start="23:62" pos:end="23:72">" idx %d\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:24"><expr pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:24"><name pos:start="25:17" pos:end="25:19">env</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:24">msr</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:44"><expr pos:start="25:27" pos:end="25:44"><name pos:start="25:27" pos:end="25:44"><name pos:start="25:27" pos:end="25:29">env</name><operator pos:start="25:30" pos:end="25:31">-&gt;</operator><name pos:start="25:32" pos:end="25:34">spr</name><index pos:start="25:35" pos:end="25:44">[<expr pos:start="25:36" pos:end="25:43"><name pos:start="25:36" pos:end="25:43">SPR_HID0</name></expr>]</index></name></expr></argument>, <argument pos:start="25:47" pos:end="25:57"><expr pos:start="25:47" pos:end="25:57"><name pos:start="25:47" pos:end="25:57"><name pos:start="25:47" pos:end="25:49">env</name><operator pos:start="25:50" pos:end="25:51">-&gt;</operator><name pos:start="25:52" pos:end="25:57">hflags</name></name></expr></argument>, <argument pos:start="25:60" pos:end="25:71"><expr pos:start="25:60" pos:end="25:71"><name pos:start="25:60" pos:end="25:71"><name pos:start="25:60" pos:end="25:62">env</name><operator pos:start="25:63" pos:end="25:64">-&gt;</operator><name pos:start="25:65" pos:end="25:71">mmu_idx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="27:1" pos:end="27:27">#<cpp:directive pos:start="27:2" pos:end="27:3">if</cpp:directive> <expr pos:start="27:5" pos:end="27:27"><operator pos:start="27:5" pos:end="27:5">!</operator><call pos:start="27:6" pos:end="27:27"><name pos:start="27:6" pos:end="27:12">defined</name><argument_list pos:start="27:13" pos:end="27:27">(<argument pos:start="27:14" pos:end="27:26"><expr pos:start="27:14" pos:end="27:26"><name pos:start="27:14" pos:end="27:26">NO_TIMER_DUMP</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="29:5" pos:end="50:0"><expr pos:start="29:5" pos:end="47:17"><call pos:start="29:5" pos:end="47:17"><name pos:start="29:5" pos:end="29:15">cpu_fprintf</name><argument_list pos:start="29:16" pos:end="47:17">(<argument pos:start="29:17" pos:end="29:17"><expr pos:start="29:17" pos:end="29:17"><name pos:start="29:17" pos:end="29:17">f</name></expr></argument>, <argument pos:start="29:20" pos:end="37:20"><expr pos:start="29:20" pos:end="37:20"><literal type="string" pos:start="29:20" pos:end="32:0">"TB %08x %08x "</literal>

<cpp:if pos:start="31:1" pos:end="31:30">#<cpp:directive pos:start="31:2" pos:end="31:3">if</cpp:directive> <expr pos:start="31:5" pos:end="31:30"><operator pos:start="31:5" pos:end="31:5">!</operator><call pos:start="31:6" pos:end="31:30"><name pos:start="31:6" pos:end="31:12">defined</name><argument_list pos:start="31:13" pos:end="31:30">(<argument pos:start="31:14" pos:end="31:29"><expr pos:start="31:14" pos:end="31:29"><name pos:start="31:14" pos:end="31:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                <literal type="string" pos:start="33:17" pos:end="36:0">"DECR %08x"</literal>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

                <literal type="string" pos:start="37:17" pos:end="37:20">"\n"</literal></expr></argument>,

                <argument pos:start="39:17" pos:end="39:37"><expr pos:start="39:17" pos:end="39:37"><call pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:32">cpu_ppc_load_tbu</name><argument_list pos:start="39:33" pos:end="39:37">(<argument pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:36">env</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:40" pos:end="42:0"><expr pos:start="39:40" pos:end="42:0"><call pos:start="39:40" pos:end="42:0"><name pos:start="39:40" pos:end="39:55">cpu_ppc_load_tbl</name><argument_list pos:start="39:56" pos:end="42:0">(<argument pos:start="39:57" pos:end="39:59"><expr pos:start="39:57" pos:end="39:59"><name pos:start="39:57" pos:end="39:59">env</name></expr></argument>)</argument_list></call></expr></argument>

<cpp:if pos:start="41:1" pos:end="41:30">#<cpp:directive pos:start="41:2" pos:end="41:3">if</cpp:directive> <expr pos:start="41:5" pos:end="41:30"><operator pos:start="41:5" pos:end="41:5">!</operator><call pos:start="41:6" pos:end="41:30"><name pos:start="41:6" pos:end="41:12">defined</name><argument_list pos:start="41:13" pos:end="41:30">(<argument pos:start="41:14" pos:end="41:29"><expr pos:start="41:14" pos:end="41:29"><name pos:start="41:14" pos:end="41:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

                , <argument pos:start="43:19" pos:end="46:0"><expr pos:start="43:19" pos:end="46:0"><call pos:start="43:19" pos:end="46:0"><name pos:start="43:19" pos:end="43:35">cpu_ppc_load_decr</name><argument_list pos:start="43:36" pos:end="46:0">(<argument pos:start="43:37" pos:end="43:39"><expr pos:start="43:37" pos:end="43:39"><name pos:start="43:37" pos:end="43:39">env</name></expr></argument>)</argument_list></call></expr></argument>

<cpp:endif pos:start="45:1" pos:end="45:6">#<cpp:directive pos:start="45:2" pos:end="45:6">endif</cpp:directive></cpp:endif>

                )</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="49:1" pos:end="49:6">#<cpp:directive pos:start="49:2" pos:end="49:6">endif</cpp:directive></cpp:endif>

    <for pos:start="51:5" pos:end="63:5">for <control pos:start="51:9" pos:end="51:28">(<init pos:start="51:10" pos:end="51:15"><expr pos:start="51:10" pos:end="51:14"><name pos:start="51:10" pos:end="51:10">i</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <literal type="number" pos:start="51:14" pos:end="51:14">0</literal></expr>;</init> <condition pos:start="51:17" pos:end="51:23"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:17">i</name> <operator pos:start="51:19" pos:end="51:19">&lt;</operator> <literal type="number" pos:start="51:21" pos:end="51:22">32</literal></expr>;</condition> <incr pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:25">i</name><operator pos:start="51:26" pos:end="51:27">++</operator></expr></incr>)</control> <block pos:start="51:30" pos:end="63:5">{<block_content pos:start="53:9" pos:end="61:33">

        <if_stmt pos:start="53:9" pos:end="55:41"><if pos:start="53:9" pos:end="55:41">if <condition pos:start="53:12" pos:end="53:34">(<expr pos:start="53:13" pos:end="53:33"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:14">i</name> <operator pos:start="53:16" pos:end="53:16">&amp;</operator> <operator pos:start="53:18" pos:end="53:18">(</operator><name pos:start="53:19" pos:end="53:22">RGPL</name> <operator pos:start="53:24" pos:end="53:24">-</operator> <literal type="number" pos:start="53:26" pos:end="53:26">1</literal><operator pos:start="53:27" pos:end="53:27">)</operator><operator pos:start="53:28" pos:end="53:28">)</operator> <operator pos:start="53:30" pos:end="53:31">==</operator> <literal type="number" pos:start="53:33" pos:end="53:33">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:41"><block_content pos:start="55:13" pos:end="55:41">

            <expr_stmt pos:start="55:13" pos:end="55:41"><expr pos:start="55:13" pos:end="55:40"><call pos:start="55:13" pos:end="55:40"><name pos:start="55:13" pos:end="55:23">cpu_fprintf</name><argument_list pos:start="55:24" pos:end="55:40">(<argument pos:start="55:25" pos:end="55:25"><expr pos:start="55:25" pos:end="55:25"><name pos:start="55:25" pos:end="55:25">f</name></expr></argument>, <argument pos:start="55:28" pos:end="55:36"><expr pos:start="55:28" pos:end="55:36"><literal type="string" pos:start="55:28" pos:end="55:36">"GPR%02d"</literal></expr></argument>, <argument pos:start="55:39" pos:end="55:39"><expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:55"><expr pos:start="57:9" pos:end="57:54"><call pos:start="57:9" pos:end="57:54"><name pos:start="57:9" pos:end="57:19">cpu_fprintf</name><argument_list pos:start="57:20" pos:end="57:54">(<argument pos:start="57:21" pos:end="57:21"><expr pos:start="57:21" pos:end="57:21"><name pos:start="57:21" pos:end="57:21">f</name></expr></argument>, <argument pos:start="57:24" pos:end="57:31"><expr pos:start="57:24" pos:end="57:31"><literal type="string" pos:start="57:24" pos:end="57:26">" "</literal> <name pos:start="57:28" pos:end="57:31">REGX</name></expr></argument>, <argument pos:start="57:34" pos:end="57:53"><expr pos:start="57:34" pos:end="57:53"><call pos:start="57:34" pos:end="57:53"><name pos:start="57:34" pos:end="57:45">ppc_dump_gpr</name><argument_list pos:start="57:46" pos:end="57:53">(<argument pos:start="57:47" pos:end="57:49"><expr pos:start="57:47" pos:end="57:49"><name pos:start="57:47" pos:end="57:49">env</name></expr></argument>, <argument pos:start="57:52" pos:end="57:52"><expr pos:start="57:52" pos:end="57:52"><name pos:start="57:52" pos:end="57:52">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="61:33"><if pos:start="59:9" pos:end="61:33">if <condition pos:start="59:12" pos:end="59:43">(<expr pos:start="59:13" pos:end="59:42"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:14">i</name> <operator pos:start="59:16" pos:end="59:16">&amp;</operator> <operator pos:start="59:18" pos:end="59:18">(</operator><name pos:start="59:19" pos:end="59:22">RGPL</name> <operator pos:start="59:24" pos:end="59:24">-</operator> <literal type="number" pos:start="59:26" pos:end="59:26">1</literal><operator pos:start="59:27" pos:end="59:27">)</operator><operator pos:start="59:28" pos:end="59:28">)</operator> <operator pos:start="59:30" pos:end="59:31">==</operator> <operator pos:start="59:33" pos:end="59:33">(</operator><name pos:start="59:34" pos:end="59:37">RGPL</name> <operator pos:start="59:39" pos:end="59:39">-</operator> <literal type="number" pos:start="59:41" pos:end="59:41">1</literal><operator pos:start="59:42" pos:end="59:42">)</operator></expr>)</condition><block type="pseudo" pos:start="61:13" pos:end="61:33"><block_content pos:start="61:13" pos:end="61:33">

            <expr_stmt pos:start="61:13" pos:end="61:33"><expr pos:start="61:13" pos:end="61:32"><call pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:23">cpu_fprintf</name><argument_list pos:start="61:24" pos:end="61:32">(<argument pos:start="61:25" pos:end="61:25"><expr pos:start="61:25" pos:end="61:25"><name pos:start="61:25" pos:end="61:25">f</name></expr></argument>, <argument pos:start="61:28" pos:end="61:31"><expr pos:start="61:28" pos:end="61:31"><literal type="string" pos:start="61:28" pos:end="61:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="65:5" pos:end="65:26"><expr pos:start="65:5" pos:end="65:25"><call pos:start="65:5" pos:end="65:25"><name pos:start="65:5" pos:end="65:15">cpu_fprintf</name><argument_list pos:start="65:16" pos:end="65:25">(<argument pos:start="65:17" pos:end="65:17"><expr pos:start="65:17" pos:end="65:17"><name pos:start="65:17" pos:end="65:17">f</name></expr></argument>, <argument pos:start="65:20" pos:end="65:24"><expr pos:start="65:20" pos:end="65:24"><literal type="string" pos:start="65:20" pos:end="65:24">"CR "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="69:44">for <control pos:start="67:9" pos:end="67:27">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <literal type="number" pos:start="67:21" pos:end="67:21">8</literal></expr>;</condition> <incr pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:24">i</name><operator pos:start="67:25" pos:end="67:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="69:44"><block_content pos:start="69:9" pos:end="69:44">

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><call pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:19">cpu_fprintf</name><argument_list pos:start="69:20" pos:end="69:43">(<argument pos:start="69:21" pos:end="69:21"><expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">f</name></expr></argument>, <argument pos:start="69:24" pos:end="69:29"><expr pos:start="69:24" pos:end="69:29"><literal type="string" pos:start="69:24" pos:end="69:29">"%01x"</literal></expr></argument>, <argument pos:start="69:32" pos:end="69:42"><expr pos:start="69:32" pos:end="69:42"><name pos:start="69:32" pos:end="69:42"><name pos:start="69:32" pos:end="69:34">env</name><operator pos:start="69:35" pos:end="69:36">-&gt;</operator><name pos:start="69:37" pos:end="69:39">crf</name><index pos:start="69:40" pos:end="69:42">[<expr pos:start="69:41" pos:end="69:41"><name pos:start="69:41" pos:end="69:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><call pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:15">cpu_fprintf</name><argument_list pos:start="71:16" pos:end="71:25">(<argument pos:start="71:17" pos:end="71:17"><expr pos:start="71:17" pos:end="71:17"><name pos:start="71:17" pos:end="71:17">f</name></expr></argument>, <argument pos:start="71:20" pos:end="71:24"><expr pos:start="71:20" pos:end="71:24"><literal type="string" pos:start="71:20" pos:end="71:24">"  ["</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="91:5">for <control pos:start="73:9" pos:end="73:27">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:22"><expr pos:start="73:17" pos:end="73:21"><name pos:start="73:17" pos:end="73:17">i</name> <operator pos:start="73:19" pos:end="73:19">&lt;</operator> <literal type="number" pos:start="73:21" pos:end="73:21">8</literal></expr>;</condition> <incr pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:24">i</name><operator pos:start="73:25" pos:end="73:26">++</operator></expr></incr>)</control> <block pos:start="73:29" pos:end="91:5">{<block_content pos:start="75:9" pos:end="89:67">

        <decl_stmt pos:start="75:9" pos:end="75:21"><decl pos:start="75:9" pos:end="75:20"><type pos:start="75:9" pos:end="75:12"><name pos:start="75:9" pos:end="75:12">char</name></type> <name pos:start="75:14" pos:end="75:14">a</name> <init pos:start="75:16" pos:end="75:20">= <expr pos:start="75:18" pos:end="75:20"><literal type="char" pos:start="75:18" pos:end="75:20">'-'</literal></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="77:9" pos:end="87:20"><if pos:start="77:9" pos:end="79:20">if <condition pos:start="77:12" pos:end="77:31">(<expr pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:23"><name pos:start="77:13" pos:end="77:15">env</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:20">crf</name><index pos:start="77:21" pos:end="77:23">[<expr pos:start="77:22" pos:end="77:22"><name pos:start="77:22" pos:end="77:22">i</name></expr>]</index></name> <operator pos:start="77:25" pos:end="77:25">&amp;</operator> <literal type="number" pos:start="77:27" pos:end="77:30">0x08</literal></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:20"><block_content pos:start="79:13" pos:end="79:20">

            <expr_stmt pos:start="79:13" pos:end="79:20"><expr pos:start="79:13" pos:end="79:19"><name pos:start="79:13" pos:end="79:13">a</name> <operator pos:start="79:15" pos:end="79:15">=</operator> <literal type="char" pos:start="79:17" pos:end="79:19">'L'</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="81:9" pos:end="83:20">else if <condition pos:start="81:17" pos:end="81:36">(<expr pos:start="81:18" pos:end="81:35"><name pos:start="81:18" pos:end="81:28"><name pos:start="81:18" pos:end="81:20">env</name><operator pos:start="81:21" pos:end="81:22">-&gt;</operator><name pos:start="81:23" pos:end="81:25">crf</name><index pos:start="81:26" pos:end="81:28">[<expr pos:start="81:27" pos:end="81:27"><name pos:start="81:27" pos:end="81:27">i</name></expr>]</index></name> <operator pos:start="81:30" pos:end="81:30">&amp;</operator> <literal type="number" pos:start="81:32" pos:end="81:35">0x04</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:20"><block_content pos:start="83:13" pos:end="83:20">

            <expr_stmt pos:start="83:13" pos:end="83:20"><expr pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:13">a</name> <operator pos:start="83:15" pos:end="83:15">=</operator> <literal type="char" pos:start="83:17" pos:end="83:19">'G'</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="85:9" pos:end="87:20">else if <condition pos:start="85:17" pos:end="85:36">(<expr pos:start="85:18" pos:end="85:35"><name pos:start="85:18" pos:end="85:28"><name pos:start="85:18" pos:end="85:20">env</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:25">crf</name><index pos:start="85:26" pos:end="85:28">[<expr pos:start="85:27" pos:end="85:27"><name pos:start="85:27" pos:end="85:27">i</name></expr>]</index></name> <operator pos:start="85:30" pos:end="85:30">&amp;</operator> <literal type="number" pos:start="85:32" pos:end="85:35">0x02</literal></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:20"><block_content pos:start="87:13" pos:end="87:20">

            <expr_stmt pos:start="87:13" pos:end="87:20"><expr pos:start="87:13" pos:end="87:19"><name pos:start="87:13" pos:end="87:13">a</name> <operator pos:start="87:15" pos:end="87:15">=</operator> <literal type="char" pos:start="87:17" pos:end="87:19">'E'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:67"><expr pos:start="89:9" pos:end="89:66"><call pos:start="89:9" pos:end="89:66"><name pos:start="89:9" pos:end="89:19">cpu_fprintf</name><argument_list pos:start="89:20" pos:end="89:66">(<argument pos:start="89:21" pos:end="89:21"><expr pos:start="89:21" pos:end="89:21"><name pos:start="89:21" pos:end="89:21">f</name></expr></argument>, <argument pos:start="89:24" pos:end="89:30"><expr pos:start="89:24" pos:end="89:30"><literal type="string" pos:start="89:24" pos:end="89:30">" %c%c"</literal></expr></argument>, <argument pos:start="89:33" pos:end="89:33"><expr pos:start="89:33" pos:end="89:33"><name pos:start="89:33" pos:end="89:33">a</name></expr></argument>, <argument pos:start="89:36" pos:end="89:65"><expr pos:start="89:36" pos:end="89:65"><ternary pos:start="89:36" pos:end="89:65"><condition pos:start="89:36" pos:end="89:55"><expr pos:start="89:36" pos:end="89:53"><name pos:start="89:36" pos:end="89:46"><name pos:start="89:36" pos:end="89:38">env</name><operator pos:start="89:39" pos:end="89:40">-&gt;</operator><name pos:start="89:41" pos:end="89:43">crf</name><index pos:start="89:44" pos:end="89:46">[<expr pos:start="89:45" pos:end="89:45"><name pos:start="89:45" pos:end="89:45">i</name></expr>]</index></name> <operator pos:start="89:48" pos:end="89:48">&amp;</operator> <literal type="number" pos:start="89:50" pos:end="89:53">0x01</literal></expr> ?</condition><then pos:start="89:57" pos:end="89:59"> <expr pos:start="89:57" pos:end="89:59"><literal type="char" pos:start="89:57" pos:end="89:59">'O'</literal></expr> </then><else pos:start="89:61" pos:end="89:65">: <expr pos:start="89:63" pos:end="89:65"><literal type="char" pos:start="89:63" pos:end="89:65">' '</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="93:5" pos:end="93:67"><expr pos:start="93:5" pos:end="93:66"><call pos:start="93:5" pos:end="93:66"><name pos:start="93:5" pos:end="93:15">cpu_fprintf</name><argument_list pos:start="93:16" pos:end="93:66">(<argument pos:start="93:17" pos:end="93:17"><expr pos:start="93:17" pos:end="93:17"><name pos:start="93:17" pos:end="93:17">f</name></expr></argument>, <argument pos:start="93:20" pos:end="93:51"><expr pos:start="93:20" pos:end="93:51"><literal type="string" pos:start="93:20" pos:end="93:40">" ]             RES "</literal> <name pos:start="93:42" pos:end="93:46">ADDRX</name> <literal type="string" pos:start="93:48" pos:end="93:51">"\n"</literal></expr></argument>, <argument pos:start="93:54" pos:end="93:65"><expr pos:start="93:54" pos:end="93:65"><name pos:start="93:54" pos:end="93:65"><name pos:start="93:54" pos:end="93:56">env</name><operator pos:start="93:57" pos:end="93:58">-&gt;</operator><name pos:start="93:59" pos:end="93:65">reserve</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="95:5" pos:end="107:5">for <control pos:start="95:9" pos:end="95:28">(<init pos:start="95:10" pos:end="95:15"><expr pos:start="95:10" pos:end="95:14"><name pos:start="95:10" pos:end="95:10">i</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <literal type="number" pos:start="95:14" pos:end="95:14">0</literal></expr>;</init> <condition pos:start="95:17" pos:end="95:23"><expr pos:start="95:17" pos:end="95:22"><name pos:start="95:17" pos:end="95:17">i</name> <operator pos:start="95:19" pos:end="95:19">&lt;</operator> <literal type="number" pos:start="95:21" pos:end="95:22">32</literal></expr>;</condition> <incr pos:start="95:25" pos:end="95:27"><expr pos:start="95:25" pos:end="95:27"><name pos:start="95:25" pos:end="95:25">i</name><operator pos:start="95:26" pos:end="95:27">++</operator></expr></incr>)</control> <block pos:start="95:30" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:33">

        <if_stmt pos:start="97:9" pos:end="99:41"><if pos:start="97:9" pos:end="99:41">if <condition pos:start="97:12" pos:end="97:34">(<expr pos:start="97:13" pos:end="97:33"><operator pos:start="97:13" pos:end="97:13">(</operator><name pos:start="97:14" pos:end="97:14">i</name> <operator pos:start="97:16" pos:end="97:16">&amp;</operator> <operator pos:start="97:18" pos:end="97:18">(</operator><name pos:start="97:19" pos:end="97:22">RFPL</name> <operator pos:start="97:24" pos:end="97:24">-</operator> <literal type="number" pos:start="97:26" pos:end="97:26">1</literal><operator pos:start="97:27" pos:end="97:27">)</operator><operator pos:start="97:28" pos:end="97:28">)</operator> <operator pos:start="97:30" pos:end="97:31">==</operator> <literal type="number" pos:start="97:33" pos:end="97:33">0</literal></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:41"><block_content pos:start="99:13" pos:end="99:41">

            <expr_stmt pos:start="99:13" pos:end="99:41"><expr pos:start="99:13" pos:end="99:40"><call pos:start="99:13" pos:end="99:40"><name pos:start="99:13" pos:end="99:23">cpu_fprintf</name><argument_list pos:start="99:24" pos:end="99:40">(<argument pos:start="99:25" pos:end="99:25"><expr pos:start="99:25" pos:end="99:25"><name pos:start="99:25" pos:end="99:25">f</name></expr></argument>, <argument pos:start="99:28" pos:end="99:36"><expr pos:start="99:28" pos:end="99:36"><literal type="string" pos:start="99:28" pos:end="99:36">"FPR%02d"</literal></expr></argument>, <argument pos:start="99:39" pos:end="99:39"><expr pos:start="99:39" pos:end="99:39"><name pos:start="99:39" pos:end="99:39">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:68"><expr pos:start="101:9" pos:end="101:67"><call pos:start="101:9" pos:end="101:67"><name pos:start="101:9" pos:end="101:19">cpu_fprintf</name><argument_list pos:start="101:20" pos:end="101:67">(<argument pos:start="101:21" pos:end="101:21"><expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">f</name></expr></argument>, <argument pos:start="101:24" pos:end="101:37"><expr pos:start="101:24" pos:end="101:37"><literal type="string" pos:start="101:24" pos:end="101:30">" %016"</literal> <name pos:start="101:32" pos:end="101:37">PRIx64</name></expr></argument>, <argument pos:start="101:40" pos:end="101:66"><expr pos:start="101:40" pos:end="101:66"><operator pos:start="101:40" pos:end="101:40">*</operator><operator pos:start="101:41" pos:end="101:41">(</operator><operator pos:start="101:42" pos:end="101:42">(</operator><name pos:start="101:43" pos:end="101:50">uint64_t</name> <operator pos:start="101:52" pos:end="101:52">*</operator><operator pos:start="101:53" pos:end="101:53">)</operator><operator pos:start="101:54" pos:end="101:54">&amp;</operator><name pos:start="101:55" pos:end="101:65"><name pos:start="101:55" pos:end="101:57">env</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:62">fpr</name><index pos:start="101:63" pos:end="101:65">[<expr pos:start="101:64" pos:end="101:64"><name pos:start="101:64" pos:end="101:64">i</name></expr>]</index></name><operator pos:start="101:66" pos:end="101:66">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:33"><if pos:start="103:9" pos:end="105:33">if <condition pos:start="103:12" pos:end="103:43">(<expr pos:start="103:13" pos:end="103:42"><operator pos:start="103:13" pos:end="103:13">(</operator><name pos:start="103:14" pos:end="103:14">i</name> <operator pos:start="103:16" pos:end="103:16">&amp;</operator> <operator pos:start="103:18" pos:end="103:18">(</operator><name pos:start="103:19" pos:end="103:22">RFPL</name> <operator pos:start="103:24" pos:end="103:24">-</operator> <literal type="number" pos:start="103:26" pos:end="103:26">1</literal><operator pos:start="103:27" pos:end="103:27">)</operator><operator pos:start="103:28" pos:end="103:28">)</operator> <operator pos:start="103:30" pos:end="103:31">==</operator> <operator pos:start="103:33" pos:end="103:33">(</operator><name pos:start="103:34" pos:end="103:37">RFPL</name> <operator pos:start="103:39" pos:end="103:39">-</operator> <literal type="number" pos:start="103:41" pos:end="103:41">1</literal><operator pos:start="103:42" pos:end="103:42">)</operator></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:33"><block_content pos:start="105:13" pos:end="105:33">

            <expr_stmt pos:start="105:13" pos:end="105:33"><expr pos:start="105:13" pos:end="105:32"><call pos:start="105:13" pos:end="105:32"><name pos:start="105:13" pos:end="105:23">cpu_fprintf</name><argument_list pos:start="105:24" pos:end="105:32">(<argument pos:start="105:25" pos:end="105:25"><expr pos:start="105:25" pos:end="105:25"><name pos:start="105:25" pos:end="105:25">f</name></expr></argument>, <argument pos:start="105:28" pos:end="105:31"><expr pos:start="105:28" pos:end="105:31"><literal type="string" pos:start="105:28" pos:end="105:31">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="109:5" pos:end="112:0"><expr pos:start="109:5" pos:end="109:46"><call pos:start="109:5" pos:end="109:46"><name pos:start="109:5" pos:end="109:15">cpu_fprintf</name><argument_list pos:start="109:16" pos:end="109:46">(<argument pos:start="109:17" pos:end="109:17"><expr pos:start="109:17" pos:end="109:17"><name pos:start="109:17" pos:end="109:17">f</name></expr></argument>, <argument pos:start="109:20" pos:end="109:33"><expr pos:start="109:20" pos:end="109:33"><literal type="string" pos:start="109:20" pos:end="109:33">"FPSCR %08x\n"</literal></expr></argument>, <argument pos:start="109:36" pos:end="109:45"><expr pos:start="109:36" pos:end="109:45"><name pos:start="109:36" pos:end="109:45"><name pos:start="109:36" pos:end="109:38">env</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:45">fpscr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="111:1" pos:end="111:30">#<cpp:directive pos:start="111:2" pos:end="111:3">if</cpp:directive> <expr pos:start="111:5" pos:end="111:30"><operator pos:start="111:5" pos:end="111:5">!</operator><call pos:start="111:6" pos:end="111:30"><name pos:start="111:6" pos:end="111:12">defined</name><argument_list pos:start="111:13" pos:end="111:30">(<argument pos:start="111:14" pos:end="111:29"><expr pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:29">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="113:5" pos:end="124:0"><expr pos:start="113:5" pos:end="115:66"><call pos:start="113:5" pos:end="115:66"><name pos:start="113:5" pos:end="113:15">cpu_fprintf</name><argument_list pos:start="113:16" pos:end="115:66">(<argument pos:start="113:17" pos:end="113:17"><expr pos:start="113:17" pos:end="113:17"><name pos:start="113:17" pos:end="113:17">f</name></expr></argument>, <argument pos:start="113:20" pos:end="113:67"><expr pos:start="113:20" pos:end="113:67"><literal type="string" pos:start="113:20" pos:end="113:26">"SRR0 "</literal> <name pos:start="113:28" pos:end="113:32">ADDRX</name> <literal type="string" pos:start="113:34" pos:end="113:41">" SRR1 "</literal> <name pos:start="113:43" pos:end="113:47">ADDRX</name> <literal type="string" pos:start="113:49" pos:end="113:56">" SDR1 "</literal> <name pos:start="113:58" pos:end="113:62">ADDRX</name> <literal type="string" pos:start="113:64" pos:end="113:67">"\n"</literal></expr></argument>,

                <argument pos:start="115:17" pos:end="115:34"><expr pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:34"><name pos:start="115:17" pos:end="115:19">env</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:24">spr</name><index pos:start="115:25" pos:end="115:34">[<expr pos:start="115:26" pos:end="115:33"><name pos:start="115:26" pos:end="115:33">SPR_SRR0</name></expr>]</index></name></expr></argument>, <argument pos:start="115:37" pos:end="115:54"><expr pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:54"><name pos:start="115:37" pos:end="115:39">env</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:44">spr</name><index pos:start="115:45" pos:end="115:54">[<expr pos:start="115:46" pos:end="115:53"><name pos:start="115:46" pos:end="115:53">SPR_SRR1</name></expr>]</index></name></expr></argument>, <argument pos:start="115:57" pos:end="115:65"><expr pos:start="115:57" pos:end="115:65"><name pos:start="115:57" pos:end="115:65"><name pos:start="115:57" pos:end="115:59">env</name><operator pos:start="115:60" pos:end="115:61">-&gt;</operator><name pos:start="115:62" pos:end="115:65">sdr1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="117:1" pos:end="117:6">#<cpp:directive pos:start="117:2" pos:end="117:6">endif</cpp:directive></cpp:endif>



<cpp:undef pos:start="121:1" pos:end="121:11">#<cpp:directive pos:start="121:2" pos:end="121:6">undef</cpp:directive> <name pos:start="121:8" pos:end="121:11">RGPL</name></cpp:undef>

<cpp:undef pos:start="123:1" pos:end="123:11">#<cpp:directive pos:start="123:2" pos:end="123:6">undef</cpp:directive> <name pos:start="123:8" pos:end="123:11">RFPL</name></cpp:undef>

</block_content>}</block></function>
</unit>
