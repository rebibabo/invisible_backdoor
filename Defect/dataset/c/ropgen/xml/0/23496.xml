<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23496.c" pos:tabs="8"><function pos:start="1:1" pos:end="813:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">virtio_ccw_cb</name><parameter_list pos:start="1:25" pos:end="1:49">(<parameter pos:start="1:26" pos:end="1:38"><decl pos:start="1:26" pos:end="1:38"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:33">SubchDev</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">sch</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:44">CCW1</name></type> <name pos:start="1:46" pos:end="1:48">ccw</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="813:1">{<block_content pos:start="5:5" pos:end="811:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:17">VirtioRevInfo</name></type> <name pos:start="7:19" pos:end="7:25">revinfo</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:18">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18">VirtioFeatDesc</name></type> <name pos:start="11:20" pos:end="11:27">features</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">void</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:16">config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">hwaddr</name></type> <name pos:start="15:12" pos:end="15:21">indicators</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:17">VqConfigBlock</name></type> <name pos:start="17:19" pos:end="17:27">vq_config</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:19">VirtioCcwDevice</name> <modifier pos:start="19:21" pos:end="19:21">*</modifier></type><name pos:start="19:22" pos:end="19:24">dev</name> <init pos:start="19:26" pos:end="19:43">= <expr pos:start="19:28" pos:end="19:43"><name pos:start="19:28" pos:end="19:43"><name pos:start="19:28" pos:end="19:30">sch</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:43">driver_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:50"><decl pos:start="21:5" pos:end="21:49"><type pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:16">VirtIODevice</name> <modifier pos:start="21:18" pos:end="21:18">*</modifier></type><name pos:start="21:19" pos:end="21:22">vdev</name> <init pos:start="21:24" pos:end="21:49">= <expr pos:start="21:26" pos:end="21:49"><call pos:start="21:26" pos:end="21:49"><name pos:start="21:26" pos:end="21:44">virtio_ccw_get_vdev</name><argument_list pos:start="21:45" pos:end="21:49">(<argument pos:start="21:46" pos:end="21:48"><expr pos:start="21:46" pos:end="21:48"><name pos:start="21:46" pos:end="21:48">sch</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">bool</name></type> <name pos:start="23:10" pos:end="23:18">check_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:12"><decl pos:start="25:5" pos:end="25:11"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:18"><decl pos:start="27:5" pos:end="27:17"><type pos:start="27:5" pos:end="27:10"><name pos:start="27:5" pos:end="27:10">hwaddr</name></type> <name pos:start="27:12" pos:end="27:17">hw_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:31"><decl pos:start="29:5" pos:end="29:30"><type pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:21">VirtioThinintInfo</name> <modifier pos:start="29:23" pos:end="29:23">*</modifier></type><name pos:start="29:24" pos:end="29:30">thinint</name></decl>;</decl_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:13">(<expr pos:start="33:9" pos:end="33:12"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:12">dev</name></expr>)</condition> <block pos:start="33:15" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <return pos:start="35:9" pos:end="35:23">return <expr pos:start="35:16" pos:end="35:22"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:49"><expr pos:start="41:5" pos:end="43:48"><call pos:start="41:5" pos:end="43:48"><name pos:start="41:5" pos:end="41:34">trace_virtio_ccw_interpret_ccw</name><argument_list pos:start="41:35" pos:end="43:48">(<argument pos:start="41:36" pos:end="41:45"><expr pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:45"><name pos:start="41:36" pos:end="41:38">sch</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:45">cssid</name></name></expr></argument>, <argument pos:start="41:48" pos:end="41:56"><expr pos:start="41:48" pos:end="41:56"><name pos:start="41:48" pos:end="41:56"><name pos:start="41:48" pos:end="41:50">sch</name><operator pos:start="41:51" pos:end="41:52">-&gt;</operator><name pos:start="41:53" pos:end="41:56">ssid</name></name></expr></argument>, <argument pos:start="41:59" pos:end="41:68"><expr pos:start="41:59" pos:end="41:68"><name pos:start="41:59" pos:end="41:68"><name pos:start="41:59" pos:end="41:61">sch</name><operator pos:start="41:62" pos:end="41:63">-&gt;</operator><name pos:start="41:64" pos:end="41:68">schid</name></name></expr></argument>,

                                   <argument pos:start="43:36" pos:end="43:47"><expr pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:38">ccw</name><operator pos:start="43:39" pos:end="43:39">.</operator><name pos:start="43:40" pos:end="43:47">cmd_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:76"><expr pos:start="45:5" pos:end="45:75"><name pos:start="45:5" pos:end="45:13">check_len</name> <operator pos:start="45:15" pos:end="45:15">=</operator> <operator pos:start="45:17" pos:end="45:17">!</operator><operator pos:start="45:18" pos:end="45:18">(</operator><operator pos:start="45:19" pos:end="45:19">(</operator><name pos:start="45:20" pos:end="45:28"><name pos:start="45:20" pos:end="45:22">ccw</name><operator pos:start="45:23" pos:end="45:23">.</operator><name pos:start="45:24" pos:end="45:28">flags</name></name> <operator pos:start="45:30" pos:end="45:30">&amp;</operator> <name pos:start="45:32" pos:end="45:43">CCW_FLAG_SLI</name><operator pos:start="45:44" pos:end="45:44">)</operator> <operator pos:start="45:46" pos:end="45:47">&amp;&amp;</operator> <operator pos:start="45:49" pos:end="45:49">!</operator><operator pos:start="45:50" pos:end="45:50">(</operator><name pos:start="45:51" pos:end="45:59"><name pos:start="45:51" pos:end="45:53">ccw</name><operator pos:start="45:54" pos:end="45:54">.</operator><name pos:start="45:55" pos:end="45:59">flags</name></name> <operator pos:start="45:61" pos:end="45:61">&amp;</operator> <name pos:start="45:63" pos:end="45:73">CCW_FLAG_DC</name><operator pos:start="45:74" pos:end="45:74">)</operator><operator pos:start="45:75" pos:end="45:75">)</operator></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="63:5"><if pos:start="49:5" pos:end="63:5">if <condition pos:start="49:8" pos:end="51:47">(<expr pos:start="49:9" pos:end="51:46"><name pos:start="49:9" pos:end="49:29"><name pos:start="49:9" pos:end="49:11">dev</name><operator pos:start="49:12" pos:end="49:13">-&gt;</operator><name pos:start="49:14" pos:end="49:29">force_revision_1</name></name> <operator pos:start="49:31" pos:end="49:32">&amp;&amp;</operator> <name pos:start="49:34" pos:end="49:46"><name pos:start="49:34" pos:end="49:36">dev</name><operator pos:start="49:37" pos:end="49:38">-&gt;</operator><name pos:start="49:39" pos:end="49:46">revision</name></name> <operator pos:start="49:48" pos:end="49:48">&lt;</operator> <literal type="number" pos:start="49:50" pos:end="49:50">0</literal> <operator pos:start="49:52" pos:end="49:53">&amp;&amp;</operator>

        <name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:11">ccw</name><operator pos:start="51:12" pos:end="51:12">.</operator><name pos:start="51:13" pos:end="51:20">cmd_code</name></name> <operator pos:start="51:22" pos:end="51:23">!=</operator> <name pos:start="51:25" pos:end="51:46">CCW_CMD_SET_VIRTIO_REV</name></expr>)</condition> <block pos:start="51:49" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:23">

        <comment type="block" pos:start="53:9" pos:end="59:11">/*

         * virtio-1 drivers must start with negotiating to a revision &gt;= 1,

         * so post a command reject for all other commands

         */</comment>

        <return pos:start="61:9" pos:end="61:23">return <expr pos:start="61:16" pos:end="61:22"><operator pos:start="61:16" pos:end="61:16">-</operator><name pos:start="61:17" pos:end="61:22">ENOSYS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="67:5" pos:end="67:30">/* Look at the command. */</comment>

    <switch pos:start="69:5" pos:end="809:5">switch <condition pos:start="69:12" pos:end="69:25">(<expr pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:15">ccw</name><operator pos:start="69:16" pos:end="69:16">.</operator><name pos:start="69:17" pos:end="69:24">cmd_code</name></name></expr>)</condition> <block pos:start="69:27" pos:end="809:5">{<block_content pos:start="71:5" pos:end="807:14">

    <case pos:start="71:5" pos:end="71:24">case <expr pos:start="71:10" pos:end="71:23"><name pos:start="71:10" pos:end="71:23">CCW_CMD_SET_VQ</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:79"><expr pos:start="73:9" pos:end="73:78"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:78"><name pos:start="73:15" pos:end="73:38">virtio_ccw_handle_set_vq</name><argument_list pos:start="73:39" pos:end="73:78">(<argument pos:start="73:40" pos:end="73:42"><expr pos:start="73:40" pos:end="73:42"><name pos:start="73:40" pos:end="73:42">sch</name></expr></argument>, <argument pos:start="73:45" pos:end="73:47"><expr pos:start="73:45" pos:end="73:47"><name pos:start="73:45" pos:end="73:47">ccw</name></expr></argument>, <argument pos:start="73:50" pos:end="73:58"><expr pos:start="73:50" pos:end="73:58"><name pos:start="73:50" pos:end="73:58">check_len</name></expr></argument>, <argument pos:start="73:61" pos:end="73:77"><expr pos:start="73:61" pos:end="73:77"><name pos:start="73:61" pos:end="73:73"><name pos:start="73:61" pos:end="73:63">dev</name><operator pos:start="73:64" pos:end="73:65">-&gt;</operator><name pos:start="73:66" pos:end="73:73">revision</name></name> <operator pos:start="73:75" pos:end="73:75">&lt;</operator> <literal type="number" pos:start="73:77" pos:end="73:77">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:28">case <expr pos:start="77:10" pos:end="77:27"><name pos:start="77:10" pos:end="77:27">CCW_CMD_VDEV_RESET</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:43"><expr pos:start="79:9" pos:end="79:42"><call pos:start="79:9" pos:end="79:42"><name pos:start="79:9" pos:end="79:31">virtio_ccw_reset_virtio</name><argument_list pos:start="79:32" pos:end="79:42">(<argument pos:start="79:33" pos:end="79:35"><expr pos:start="79:33" pos:end="79:35"><name pos:start="79:33" pos:end="79:35">dev</name></expr></argument>, <argument pos:start="79:38" pos:end="79:41"><expr pos:start="79:38" pos:end="79:41"><name pos:start="79:38" pos:end="79:41">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:16"><expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>;</expr_stmt>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:27">case <expr pos:start="85:10" pos:end="85:26"><name pos:start="85:10" pos:end="85:26">CCW_CMD_READ_FEAT</name></expr>:</case>

        <if_stmt pos:start="87:9" pos:end="105:9"><if pos:start="87:9" pos:end="97:9">if <condition pos:start="87:12" pos:end="87:22">(<expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:21">check_len</name></expr>)</condition> <block pos:start="87:24" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:13">

            <if_stmt pos:start="89:13" pos:end="95:13"><if pos:start="89:13" pos:end="95:13">if <condition pos:start="89:16" pos:end="89:46">(<expr pos:start="89:17" pos:end="89:45"><name pos:start="89:17" pos:end="89:25"><name pos:start="89:17" pos:end="89:19">ccw</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:25">count</name></name> <operator pos:start="89:27" pos:end="89:28">!=</operator> <sizeof pos:start="89:30" pos:end="89:45">sizeof<argument_list pos:start="89:36" pos:end="89:45">(<argument pos:start="89:37" pos:end="89:44"><expr pos:start="89:37" pos:end="89:44"><name pos:start="89:37" pos:end="89:44">features</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="89:48" pos:end="95:13">{<block_content pos:start="91:17" pos:end="93:22">

                <expr_stmt pos:start="91:17" pos:end="91:30"><expr pos:start="91:17" pos:end="91:29"><name pos:start="91:17" pos:end="91:19">ret</name> <operator pos:start="91:21" pos:end="91:21">=</operator> <operator pos:start="91:23" pos:end="91:23">-</operator><name pos:start="91:24" pos:end="91:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="93:17" pos:end="93:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="97:11" pos:end="105:9">else if <condition pos:start="97:19" pos:end="97:48">(<expr pos:start="97:20" pos:end="97:47"><name pos:start="97:20" pos:end="97:28"><name pos:start="97:20" pos:end="97:22">ccw</name><operator pos:start="97:23" pos:end="97:23">.</operator><name pos:start="97:24" pos:end="97:28">count</name></name> <operator pos:start="97:30" pos:end="97:30">&lt;</operator> <sizeof pos:start="97:32" pos:end="97:47">sizeof<argument_list pos:start="97:38" pos:end="97:47">(<argument pos:start="97:39" pos:end="97:46"><expr pos:start="97:39" pos:end="97:46"><name pos:start="97:39" pos:end="97:46">features</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="97:50" pos:end="105:9">{<block_content pos:start="101:13" pos:end="103:18">

            <comment type="block" pos:start="99:13" pos:end="99:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:26"><expr pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:15">ret</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <operator pos:start="101:19" pos:end="101:19">-</operator><name pos:start="101:20" pos:end="101:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="173:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:21">(<expr pos:start="107:13" pos:end="107:20"><operator pos:start="107:13" pos:end="107:13">!</operator><name pos:start="107:14" pos:end="107:20"><name pos:start="107:14" pos:end="107:16">ccw</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:20">cda</name></name></expr>)</condition> <block pos:start="107:23" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:26">

            <expr_stmt pos:start="109:13" pos:end="109:26"><expr pos:start="109:13" pos:end="109:25"><name pos:start="109:13" pos:end="109:15">ret</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <operator pos:start="109:19" pos:end="109:19">-</operator><name pos:start="109:20" pos:end="109:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="173:9">else <block pos:start="111:16" pos:end="173:9">{<block_content pos:start="113:13" pos:end="171:20">

            <decl_stmt pos:start="113:13" pos:end="113:67"><decl pos:start="113:13" pos:end="113:66"><type pos:start="113:13" pos:end="113:31"><name pos:start="113:13" pos:end="113:29">VirtioDeviceClass</name> <modifier pos:start="113:31" pos:end="113:31">*</modifier></type><name pos:start="113:32" pos:end="113:34">vdc</name> <init pos:start="113:36" pos:end="113:66">= <expr pos:start="113:38" pos:end="113:66"><call pos:start="113:38" pos:end="113:66"><name pos:start="113:38" pos:end="113:60">VIRTIO_DEVICE_GET_CLASS</name><argument_list pos:start="113:61" pos:end="113:66">(<argument pos:start="113:62" pos:end="113:65"><expr pos:start="113:62" pos:end="113:65"><name pos:start="113:62" pos:end="113:65">vdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="117:13" pos:end="125:54"><expr pos:start="117:13" pos:end="125:53"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:20">features</name><operator pos:start="117:21" pos:end="117:21">.</operator><name pos:start="117:22" pos:end="117:26">index</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <call pos:start="117:30" pos:end="125:53"><name pos:start="117:30" pos:end="117:47">address_space_ldub</name><argument_list pos:start="117:48" pos:end="125:53">(<argument pos:start="117:49" pos:end="117:69"><expr pos:start="117:49" pos:end="117:69"><operator pos:start="117:49" pos:end="117:49">&amp;</operator><name pos:start="117:50" pos:end="117:69">address_space_memory</name></expr></argument>,

                                                <argument pos:start="119:49" pos:end="121:75"><expr pos:start="119:49" pos:end="121:75"><name pos:start="119:49" pos:end="119:55"><name pos:start="119:49" pos:end="119:51">ccw</name><operator pos:start="119:52" pos:end="119:52">.</operator><name pos:start="119:53" pos:end="119:55">cda</name></name>

                                                <operator pos:start="121:49" pos:end="121:49">+</operator> <sizeof pos:start="121:51" pos:end="121:75">sizeof<argument_list pos:start="121:57" pos:end="121:75">(<argument pos:start="121:58" pos:end="121:74"><expr pos:start="121:58" pos:end="121:74"><name pos:start="121:58" pos:end="121:74"><name pos:start="121:58" pos:end="121:65">features</name><operator pos:start="121:66" pos:end="121:66">.</operator><name pos:start="121:67" pos:end="121:74">features</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                                <argument pos:start="123:49" pos:end="123:70"><expr pos:start="123:49" pos:end="123:70"><name pos:start="123:49" pos:end="123:70">MEMTXATTRS_UNSPECIFIED</name></expr></argument>,

                                                <argument pos:start="125:49" pos:end="125:52"><expr pos:start="125:49" pos:end="125:52"><name pos:start="125:49" pos:end="125:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="161:13"><if pos:start="127:13" pos:end="143:13">if <condition pos:start="127:16" pos:end="127:36">(<expr pos:start="127:17" pos:end="127:35"><name pos:start="127:17" pos:end="127:30"><name pos:start="127:17" pos:end="127:24">features</name><operator pos:start="127:25" pos:end="127:25">.</operator><name pos:start="127:26" pos:end="127:30">index</name></name> <operator pos:start="127:32" pos:end="127:33">==</operator> <literal type="number" pos:start="127:35" pos:end="127:35">0</literal></expr>)</condition> <block pos:start="127:38" pos:end="143:13">{<block_content pos:start="129:17" pos:end="141:17">

                <if_stmt pos:start="129:17" pos:end="141:17"><if pos:start="129:17" pos:end="137:17">if <condition pos:start="129:20" pos:end="129:39">(<expr pos:start="129:21" pos:end="129:38"><name pos:start="129:21" pos:end="129:33"><name pos:start="129:21" pos:end="129:23">dev</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:33">revision</name></name> <operator pos:start="129:35" pos:end="129:36">&gt;=</operator> <literal type="number" pos:start="129:38" pos:end="129:38">1</literal></expr>)</condition> <block pos:start="129:41" pos:end="137:17">{<block_content pos:start="133:21" pos:end="135:70">

                    <comment type="block" pos:start="131:21" pos:end="131:73">/* Don't offer legacy features for modern devices. */</comment>

                    <expr_stmt pos:start="133:21" pos:end="135:70"><expr pos:start="133:21" pos:end="135:69"><name pos:start="133:21" pos:end="133:37"><name pos:start="133:21" pos:end="133:28">features</name><operator pos:start="133:29" pos:end="133:29">.</operator><name pos:start="133:30" pos:end="133:37">features</name></name> <operator pos:start="133:39" pos:end="133:39">=</operator> <operator pos:start="133:41" pos:end="133:41">(</operator><name pos:start="133:42" pos:end="133:49">uint32_t</name><operator pos:start="133:50" pos:end="133:50">)</operator>

                        <operator pos:start="135:25" pos:end="135:25">(</operator><name pos:start="135:26" pos:end="135:44"><name pos:start="135:26" pos:end="135:29">vdev</name><operator pos:start="135:30" pos:end="135:31">-&gt;</operator><name pos:start="135:32" pos:end="135:44">host_features</name></name> <operator pos:start="135:46" pos:end="135:46">&amp;</operator> <operator pos:start="135:48" pos:end="135:48">~</operator><name pos:start="135:49" pos:end="135:68"><name pos:start="135:49" pos:end="135:51">vdc</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:68">legacy_features</name></name><operator pos:start="135:69" pos:end="135:69">)</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="137:19" pos:end="141:17">else <block pos:start="137:24" pos:end="141:17">{<block_content pos:start="139:21" pos:end="139:70">

                    <expr_stmt pos:start="139:21" pos:end="139:70"><expr pos:start="139:21" pos:end="139:69"><name pos:start="139:21" pos:end="139:37"><name pos:start="139:21" pos:end="139:28">features</name><operator pos:start="139:29" pos:end="139:29">.</operator><name pos:start="139:30" pos:end="139:37">features</name></name> <operator pos:start="139:39" pos:end="139:39">=</operator> <operator pos:start="139:41" pos:end="139:41">(</operator><name pos:start="139:42" pos:end="139:49">uint32_t</name><operator pos:start="139:50" pos:end="139:50">)</operator><name pos:start="139:51" pos:end="139:69"><name pos:start="139:51" pos:end="139:54">vdev</name><operator pos:start="139:55" pos:end="139:56">-&gt;</operator><name pos:start="139:57" pos:end="139:69">host_features</name></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="143:15" pos:end="155:13">else if <condition pos:start="143:23" pos:end="143:69">(<expr pos:start="143:24" pos:end="143:68"><operator pos:start="143:24" pos:end="143:24">(</operator><name pos:start="143:25" pos:end="143:38"><name pos:start="143:25" pos:end="143:32">features</name><operator pos:start="143:33" pos:end="143:33">.</operator><name pos:start="143:34" pos:end="143:38">index</name></name> <operator pos:start="143:40" pos:end="143:41">==</operator> <literal type="number" pos:start="143:43" pos:end="143:43">1</literal><operator pos:start="143:44" pos:end="143:44">)</operator> <operator pos:start="143:46" pos:end="143:47">&amp;&amp;</operator> <operator pos:start="143:49" pos:end="143:49">(</operator><name pos:start="143:50" pos:end="143:62"><name pos:start="143:50" pos:end="143:52">dev</name><operator pos:start="143:53" pos:end="143:54">-&gt;</operator><name pos:start="143:55" pos:end="143:62">revision</name></name> <operator pos:start="143:64" pos:end="143:65">&gt;=</operator> <literal type="number" pos:start="143:67" pos:end="143:67">1</literal><operator pos:start="143:68" pos:end="143:68">)</operator></expr>)</condition> <block pos:start="143:71" pos:end="155:13">{<block_content pos:start="153:17" pos:end="153:74">

                <comment type="block" pos:start="145:17" pos:end="151:19">/*

                 * Only offer feature bits beyond 31 if the guest has

                 * negotiated at least revision 1.

                 */</comment>

                <expr_stmt pos:start="153:17" pos:end="153:74"><expr pos:start="153:17" pos:end="153:73"><name pos:start="153:17" pos:end="153:33"><name pos:start="153:17" pos:end="153:24">features</name><operator pos:start="153:25" pos:end="153:25">.</operator><name pos:start="153:26" pos:end="153:33">features</name></name> <operator pos:start="153:35" pos:end="153:35">=</operator> <operator pos:start="153:37" pos:end="153:37">(</operator><name pos:start="153:38" pos:end="153:45">uint32_t</name><operator pos:start="153:46" pos:end="153:46">)</operator><operator pos:start="153:47" pos:end="153:47">(</operator><name pos:start="153:48" pos:end="153:66"><name pos:start="153:48" pos:end="153:51">vdev</name><operator pos:start="153:52" pos:end="153:53">-&gt;</operator><name pos:start="153:54" pos:end="153:66">host_features</name></name> <operator pos:start="153:68" pos:end="153:69">&gt;&gt;</operator> <literal type="number" pos:start="153:71" pos:end="153:72">32</literal><operator pos:start="153:73" pos:end="153:73">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="155:15" pos:end="161:13">else <block pos:start="155:20" pos:end="161:13">{<block_content pos:start="159:17" pos:end="159:38">

                <comment type="block" pos:start="157:17" pos:end="157:76">/* Return zeroes if the guest supports more feature bits. */</comment>

                <expr_stmt pos:start="159:17" pos:end="159:38"><expr pos:start="159:17" pos:end="159:37"><name pos:start="159:17" pos:end="159:33"><name pos:start="159:17" pos:end="159:24">features</name><operator pos:start="159:25" pos:end="159:25">.</operator><name pos:start="159:26" pos:end="159:33">features</name></name> <operator pos:start="159:35" pos:end="159:35">=</operator> <literal type="number" pos:start="159:37" pos:end="159:37">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="163:13" pos:end="167:39"><expr pos:start="163:13" pos:end="167:38"><call pos:start="163:13" pos:end="167:38"><name pos:start="163:13" pos:end="163:32">address_space_stl_le</name><argument_list pos:start="163:33" pos:end="167:38">(<argument pos:start="163:34" pos:end="163:54"><expr pos:start="163:34" pos:end="163:54"><operator pos:start="163:34" pos:end="163:34">&amp;</operator><name pos:start="163:35" pos:end="163:54">address_space_memory</name></expr></argument>, <argument pos:start="163:57" pos:end="163:63"><expr pos:start="163:57" pos:end="163:63"><name pos:start="163:57" pos:end="163:63"><name pos:start="163:57" pos:end="163:59">ccw</name><operator pos:start="163:60" pos:end="163:60">.</operator><name pos:start="163:61" pos:end="163:63">cda</name></name></expr></argument>,

                                 <argument pos:start="165:34" pos:end="165:50"><expr pos:start="165:34" pos:end="165:50"><name pos:start="165:34" pos:end="165:50"><name pos:start="165:34" pos:end="165:41">features</name><operator pos:start="165:42" pos:end="165:42">.</operator><name pos:start="165:43" pos:end="165:50">features</name></name></expr></argument>, <argument pos:start="165:53" pos:end="165:74"><expr pos:start="165:53" pos:end="165:74"><name pos:start="165:53" pos:end="165:74">MEMTXATTRS_UNSPECIFIED</name></expr></argument>,

                                 <argument pos:start="167:34" pos:end="167:37"><expr pos:start="167:34" pos:end="167:37"><name pos:start="167:34" pos:end="167:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:71"><expr pos:start="169:13" pos:end="169:70"><name pos:start="169:13" pos:end="169:39"><name pos:start="169:13" pos:end="169:15">sch</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:28">curr_status</name><operator pos:start="169:29" pos:end="169:29">.</operator><name pos:start="169:30" pos:end="169:33">scsw</name><operator pos:start="169:34" pos:end="169:34">.</operator><name pos:start="169:35" pos:end="169:39">count</name></name> <operator pos:start="169:41" pos:end="169:41">=</operator> <name pos:start="169:43" pos:end="169:51"><name pos:start="169:43" pos:end="169:45">ccw</name><operator pos:start="169:46" pos:end="169:46">.</operator><name pos:start="169:47" pos:end="169:51">count</name></name> <operator pos:start="169:53" pos:end="169:53">-</operator> <sizeof pos:start="169:55" pos:end="169:70">sizeof<argument_list pos:start="169:61" pos:end="169:70">(<argument pos:start="169:62" pos:end="169:69"><expr pos:start="169:62" pos:end="169:69"><name pos:start="169:62" pos:end="169:69">features</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:20"><expr pos:start="171:13" pos:end="171:19"><name pos:start="171:13" pos:end="171:15">ret</name> <operator pos:start="171:17" pos:end="171:17">=</operator> <literal type="number" pos:start="171:19" pos:end="171:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:28">case <expr pos:start="177:10" pos:end="177:27"><name pos:start="177:10" pos:end="177:27">CCW_CMD_WRITE_FEAT</name></expr>:</case>

        <if_stmt pos:start="179:9" pos:end="197:9"><if pos:start="179:9" pos:end="189:9">if <condition pos:start="179:12" pos:end="179:22">(<expr pos:start="179:13" pos:end="179:21"><name pos:start="179:13" pos:end="179:21">check_len</name></expr>)</condition> <block pos:start="179:24" pos:end="189:9">{<block_content pos:start="181:13" pos:end="187:13">

            <if_stmt pos:start="181:13" pos:end="187:13"><if pos:start="181:13" pos:end="187:13">if <condition pos:start="181:16" pos:end="181:46">(<expr pos:start="181:17" pos:end="181:45"><name pos:start="181:17" pos:end="181:25"><name pos:start="181:17" pos:end="181:19">ccw</name><operator pos:start="181:20" pos:end="181:20">.</operator><name pos:start="181:21" pos:end="181:25">count</name></name> <operator pos:start="181:27" pos:end="181:28">!=</operator> <sizeof pos:start="181:30" pos:end="181:45">sizeof<argument_list pos:start="181:36" pos:end="181:45">(<argument pos:start="181:37" pos:end="181:44"><expr pos:start="181:37" pos:end="181:44"><name pos:start="181:37" pos:end="181:44">features</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="181:48" pos:end="187:13">{<block_content pos:start="183:17" pos:end="185:22">

                <expr_stmt pos:start="183:17" pos:end="183:30"><expr pos:start="183:17" pos:end="183:29"><name pos:start="183:17" pos:end="183:19">ret</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <operator pos:start="183:23" pos:end="183:23">-</operator><name pos:start="183:24" pos:end="183:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="185:17" pos:end="185:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="189:11" pos:end="197:9">else if <condition pos:start="189:19" pos:end="189:48">(<expr pos:start="189:20" pos:end="189:47"><name pos:start="189:20" pos:end="189:28"><name pos:start="189:20" pos:end="189:22">ccw</name><operator pos:start="189:23" pos:end="189:23">.</operator><name pos:start="189:24" pos:end="189:28">count</name></name> <operator pos:start="189:30" pos:end="189:30">&lt;</operator> <sizeof pos:start="189:32" pos:end="189:47">sizeof<argument_list pos:start="189:38" pos:end="189:47">(<argument pos:start="189:39" pos:end="189:46"><expr pos:start="189:39" pos:end="189:46"><name pos:start="189:39" pos:end="189:46">features</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="189:50" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:18">

            <comment type="block" pos:start="191:13" pos:end="191:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="193:13" pos:end="193:26"><expr pos:start="193:13" pos:end="193:25"><name pos:start="193:13" pos:end="193:15">ret</name> <operator pos:start="193:17" pos:end="193:17">=</operator> <operator pos:start="193:19" pos:end="193:19">-</operator><name pos:start="193:20" pos:end="193:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="275:9"><if pos:start="199:9" pos:end="203:9">if <condition pos:start="199:12" pos:end="199:21">(<expr pos:start="199:13" pos:end="199:20"><operator pos:start="199:13" pos:end="199:13">!</operator><name pos:start="199:14" pos:end="199:20"><name pos:start="199:14" pos:end="199:16">ccw</name><operator pos:start="199:17" pos:end="199:17">.</operator><name pos:start="199:18" pos:end="199:20">cda</name></name></expr>)</condition> <block pos:start="199:23" pos:end="203:9">{<block_content pos:start="201:13" pos:end="201:26">

            <expr_stmt pos:start="201:13" pos:end="201:26"><expr pos:start="201:13" pos:end="201:25"><name pos:start="201:13" pos:end="201:15">ret</name> <operator pos:start="201:17" pos:end="201:17">=</operator> <operator pos:start="201:19" pos:end="201:19">-</operator><name pos:start="201:20" pos:end="201:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="203:11" pos:end="275:9">else <block pos:start="203:16" pos:end="275:9">{<block_content pos:start="205:13" pos:end="273:20">

            <expr_stmt pos:start="205:13" pos:end="213:54"><expr pos:start="205:13" pos:end="213:53"><name pos:start="205:13" pos:end="205:26"><name pos:start="205:13" pos:end="205:20">features</name><operator pos:start="205:21" pos:end="205:21">.</operator><name pos:start="205:22" pos:end="205:26">index</name></name> <operator pos:start="205:28" pos:end="205:28">=</operator> <call pos:start="205:30" pos:end="213:53"><name pos:start="205:30" pos:end="205:47">address_space_ldub</name><argument_list pos:start="205:48" pos:end="213:53">(<argument pos:start="205:49" pos:end="205:69"><expr pos:start="205:49" pos:end="205:69"><operator pos:start="205:49" pos:end="205:49">&amp;</operator><name pos:start="205:50" pos:end="205:69">address_space_memory</name></expr></argument>,

                                                <argument pos:start="207:49" pos:end="209:75"><expr pos:start="207:49" pos:end="209:75"><name pos:start="207:49" pos:end="207:55"><name pos:start="207:49" pos:end="207:51">ccw</name><operator pos:start="207:52" pos:end="207:52">.</operator><name pos:start="207:53" pos:end="207:55">cda</name></name>

                                                <operator pos:start="209:49" pos:end="209:49">+</operator> <sizeof pos:start="209:51" pos:end="209:75">sizeof<argument_list pos:start="209:57" pos:end="209:75">(<argument pos:start="209:58" pos:end="209:74"><expr pos:start="209:58" pos:end="209:74"><name pos:start="209:58" pos:end="209:74"><name pos:start="209:58" pos:end="209:65">features</name><operator pos:start="209:66" pos:end="209:66">.</operator><name pos:start="209:67" pos:end="209:74">features</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                                <argument pos:start="211:49" pos:end="211:70"><expr pos:start="211:49" pos:end="211:70"><name pos:start="211:49" pos:end="211:70">MEMTXATTRS_UNSPECIFIED</name></expr></argument>,

                                                <argument pos:start="213:49" pos:end="213:52"><expr pos:start="213:49" pos:end="213:52"><name pos:start="213:49" pos:end="213:52">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="221:59"><expr pos:start="215:13" pos:end="221:58"><name pos:start="215:13" pos:end="215:29"><name pos:start="215:13" pos:end="215:20">features</name><operator pos:start="215:21" pos:end="215:21">.</operator><name pos:start="215:22" pos:end="215:29">features</name></name> <operator pos:start="215:31" pos:end="215:31">=</operator> <call pos:start="215:33" pos:end="221:58"><name pos:start="215:33" pos:end="215:52">address_space_ldl_le</name><argument_list pos:start="215:53" pos:end="221:58">(<argument pos:start="215:54" pos:end="215:74"><expr pos:start="215:54" pos:end="215:74"><operator pos:start="215:54" pos:end="215:54">&amp;</operator><name pos:start="215:55" pos:end="215:74">address_space_memory</name></expr></argument>,

                                                     <argument pos:start="217:54" pos:end="217:60"><expr pos:start="217:54" pos:end="217:60"><name pos:start="217:54" pos:end="217:60"><name pos:start="217:54" pos:end="217:56">ccw</name><operator pos:start="217:57" pos:end="217:57">.</operator><name pos:start="217:58" pos:end="217:60">cda</name></name></expr></argument>,

                                                     <argument pos:start="219:54" pos:end="219:75"><expr pos:start="219:54" pos:end="219:75"><name pos:start="219:54" pos:end="219:75">MEMTXATTRS_UNSPECIFIED</name></expr></argument>,

                                                     <argument pos:start="221:54" pos:end="221:57"><expr pos:start="221:54" pos:end="221:57"><name pos:start="221:54" pos:end="221:57">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="269:13"><if pos:start="223:13" pos:end="231:13">if <condition pos:start="223:16" pos:end="223:36">(<expr pos:start="223:17" pos:end="223:35"><name pos:start="223:17" pos:end="223:30"><name pos:start="223:17" pos:end="223:24">features</name><operator pos:start="223:25" pos:end="223:25">.</operator><name pos:start="223:26" pos:end="223:30">index</name></name> <operator pos:start="223:32" pos:end="223:33">==</operator> <literal type="number" pos:start="223:35" pos:end="223:35">0</literal></expr>)</condition> <block pos:start="223:38" pos:end="231:13">{<block_content pos:start="225:17" pos:end="229:55">

                <expr_stmt pos:start="225:17" pos:end="229:55"><expr pos:start="225:17" pos:end="229:54"><call pos:start="225:17" pos:end="229:54"><name pos:start="225:17" pos:end="225:35">virtio_set_features</name><argument_list pos:start="225:36" pos:end="229:54">(<argument pos:start="225:37" pos:end="225:40"><expr pos:start="225:37" pos:end="225:40"><name pos:start="225:37" pos:end="225:40">vdev</name></expr></argument>,

                                    <argument pos:start="227:37" pos:end="229:53"><expr pos:start="227:37" pos:end="229:53"><operator pos:start="227:37" pos:end="227:37">(</operator><name pos:start="227:38" pos:end="227:57"><name pos:start="227:38" pos:end="227:41">vdev</name><operator pos:start="227:42" pos:end="227:43">-&gt;</operator><name pos:start="227:44" pos:end="227:57">guest_features</name></name> <operator pos:start="227:59" pos:end="227:59">&amp;</operator> <literal type="number" pos:start="227:61" pos:end="227:81">0xffffffff00000000ULL</literal><operator pos:start="227:82" pos:end="227:82">)</operator> <operator pos:start="227:84" pos:end="227:84">|</operator>

                                    <name pos:start="229:37" pos:end="229:53"><name pos:start="229:37" pos:end="229:44">features</name><operator pos:start="229:45" pos:end="229:45">.</operator><name pos:start="229:46" pos:end="229:53">features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="231:15" pos:end="249:13">else if <condition pos:start="231:23" pos:end="231:69">(<expr pos:start="231:24" pos:end="231:68"><operator pos:start="231:24" pos:end="231:24">(</operator><name pos:start="231:25" pos:end="231:38"><name pos:start="231:25" pos:end="231:32">features</name><operator pos:start="231:33" pos:end="231:33">.</operator><name pos:start="231:34" pos:end="231:38">index</name></name> <operator pos:start="231:40" pos:end="231:41">==</operator> <literal type="number" pos:start="231:43" pos:end="231:43">1</literal><operator pos:start="231:44" pos:end="231:44">)</operator> <operator pos:start="231:46" pos:end="231:47">&amp;&amp;</operator> <operator pos:start="231:49" pos:end="231:49">(</operator><name pos:start="231:50" pos:end="231:62"><name pos:start="231:50" pos:end="231:52">dev</name><operator pos:start="231:53" pos:end="231:54">-&gt;</operator><name pos:start="231:55" pos:end="231:62">revision</name></name> <operator pos:start="231:64" pos:end="231:65">&gt;=</operator> <literal type="number" pos:start="231:67" pos:end="231:67">1</literal><operator pos:start="231:68" pos:end="231:68">)</operator></expr>)</condition> <block pos:start="231:71" pos:end="249:13">{<block_content pos:start="243:17" pos:end="247:73">

                <comment type="block" pos:start="233:17" pos:end="241:19">/*

                 * If the guest did not negotiate at least revision 1,

                 * we did not offer it any feature bits beyond 31. Such a

                 * guest passing us any bit here is therefore buggy.

                 */</comment>

                <expr_stmt pos:start="243:17" pos:end="247:73"><expr pos:start="243:17" pos:end="247:72"><call pos:start="243:17" pos:end="247:72"><name pos:start="243:17" pos:end="243:35">virtio_set_features</name><argument_list pos:start="243:36" pos:end="247:72">(<argument pos:start="243:37" pos:end="243:40"><expr pos:start="243:37" pos:end="243:40"><name pos:start="243:37" pos:end="243:40">vdev</name></expr></argument>,

                                    <argument pos:start="245:37" pos:end="247:71"><expr pos:start="245:37" pos:end="247:71"><operator pos:start="245:37" pos:end="245:37">(</operator><name pos:start="245:38" pos:end="245:57"><name pos:start="245:38" pos:end="245:41">vdev</name><operator pos:start="245:42" pos:end="245:43">-&gt;</operator><name pos:start="245:44" pos:end="245:57">guest_features</name></name> <operator pos:start="245:59" pos:end="245:59">&amp;</operator> <literal type="number" pos:start="245:61" pos:end="245:81">0x00000000ffffffffULL</literal><operator pos:start="245:82" pos:end="245:82">)</operator> <operator pos:start="245:84" pos:end="245:84">|</operator>

                                    <operator pos:start="247:37" pos:end="247:37">(</operator><operator pos:start="247:38" pos:end="247:38">(</operator><name pos:start="247:39" pos:end="247:46">uint64_t</name><operator pos:start="247:47" pos:end="247:47">)</operator><name pos:start="247:48" pos:end="247:64"><name pos:start="247:48" pos:end="247:55">features</name><operator pos:start="247:56" pos:end="247:56">.</operator><name pos:start="247:57" pos:end="247:64">features</name></name> <operator pos:start="247:66" pos:end="247:67">&lt;&lt;</operator> <literal type="number" pos:start="247:69" pos:end="247:70">32</literal><operator pos:start="247:71" pos:end="247:71">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="249:15" pos:end="269:13">else <block pos:start="249:20" pos:end="269:13">{<block_content pos:start="259:17" pos:end="267:17">

                <comment type="block" pos:start="251:17" pos:end="257:19">/*

                 * If the guest supports more feature bits, assert that it

                 * passes us zeroes for those we don't support.

                 */</comment>

                <if_stmt pos:start="259:17" pos:end="267:17"><if pos:start="259:17" pos:end="267:17">if <condition pos:start="259:20" pos:end="259:38">(<expr pos:start="259:21" pos:end="259:37"><name pos:start="259:21" pos:end="259:37"><name pos:start="259:21" pos:end="259:28">features</name><operator pos:start="259:29" pos:end="259:29">.</operator><name pos:start="259:30" pos:end="259:37">features</name></name></expr>)</condition> <block pos:start="259:40" pos:end="267:17">{<block_content pos:start="261:21" pos:end="263:63">

                    <expr_stmt pos:start="261:21" pos:end="263:63"><expr pos:start="261:21" pos:end="263:62"><call pos:start="261:21" pos:end="263:62"><name pos:start="261:21" pos:end="261:27">fprintf</name><argument_list pos:start="261:28" pos:end="263:62">(<argument pos:start="261:29" pos:end="261:34"><expr pos:start="261:29" pos:end="261:34"><name pos:start="261:29" pos:end="261:34">stderr</name></expr></argument>, <argument pos:start="261:37" pos:end="261:79"><expr pos:start="261:37" pos:end="261:79"><literal type="string" pos:start="261:37" pos:end="261:79">"Guest bug: features[%i]=%x (expected 0)\n"</literal></expr></argument>,

                            <argument pos:start="263:29" pos:end="263:42"><expr pos:start="263:29" pos:end="263:42"><name pos:start="263:29" pos:end="263:42"><name pos:start="263:29" pos:end="263:36">features</name><operator pos:start="263:37" pos:end="263:37">.</operator><name pos:start="263:38" pos:end="263:42">index</name></name></expr></argument>, <argument pos:start="263:45" pos:end="263:61"><expr pos:start="263:45" pos:end="263:61"><name pos:start="263:45" pos:end="263:61"><name pos:start="263:45" pos:end="263:52">features</name><operator pos:start="263:53" pos:end="263:53">.</operator><name pos:start="263:54" pos:end="263:61">features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <comment type="block" pos:start="265:21" pos:end="265:52">/* XXX: do a unit check here? */</comment>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:71"><expr pos:start="271:13" pos:end="271:70"><name pos:start="271:13" pos:end="271:39"><name pos:start="271:13" pos:end="271:15">sch</name><operator pos:start="271:16" pos:end="271:17">-&gt;</operator><name pos:start="271:18" pos:end="271:28">curr_status</name><operator pos:start="271:29" pos:end="271:29">.</operator><name pos:start="271:30" pos:end="271:33">scsw</name><operator pos:start="271:34" pos:end="271:34">.</operator><name pos:start="271:35" pos:end="271:39">count</name></name> <operator pos:start="271:41" pos:end="271:41">=</operator> <name pos:start="271:43" pos:end="271:51"><name pos:start="271:43" pos:end="271:45">ccw</name><operator pos:start="271:46" pos:end="271:46">.</operator><name pos:start="271:47" pos:end="271:51">count</name></name> <operator pos:start="271:53" pos:end="271:53">-</operator> <sizeof pos:start="271:55" pos:end="271:70">sizeof<argument_list pos:start="271:61" pos:end="271:70">(<argument pos:start="271:62" pos:end="271:69"><expr pos:start="271:62" pos:end="271:69"><name pos:start="271:62" pos:end="271:69">features</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:20"><expr pos:start="273:13" pos:end="273:19"><name pos:start="273:13" pos:end="273:15">ret</name> <operator pos:start="273:17" pos:end="273:17">=</operator> <literal type="number" pos:start="273:19" pos:end="273:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    <case pos:start="279:5" pos:end="279:27">case <expr pos:start="279:10" pos:end="279:26"><name pos:start="279:10" pos:end="279:26">CCW_CMD_READ_CONF</name></expr>:</case>

        <if_stmt pos:start="281:9" pos:end="291:9"><if pos:start="281:9" pos:end="291:9">if <condition pos:start="281:12" pos:end="281:22">(<expr pos:start="281:13" pos:end="281:21"><name pos:start="281:13" pos:end="281:21">check_len</name></expr>)</condition> <block pos:start="281:24" pos:end="291:9">{<block_content pos:start="283:13" pos:end="289:13">

            <if_stmt pos:start="283:13" pos:end="289:13"><if pos:start="283:13" pos:end="289:13">if <condition pos:start="283:16" pos:end="283:45">(<expr pos:start="283:17" pos:end="283:44"><name pos:start="283:17" pos:end="283:25"><name pos:start="283:17" pos:end="283:19">ccw</name><operator pos:start="283:20" pos:end="283:20">.</operator><name pos:start="283:21" pos:end="283:25">count</name></name> <operator pos:start="283:27" pos:end="283:27">&gt;</operator> <name pos:start="283:29" pos:end="283:44"><name pos:start="283:29" pos:end="283:32">vdev</name><operator pos:start="283:33" pos:end="283:34">-&gt;</operator><name pos:start="283:35" pos:end="283:44">config_len</name></name></expr>)</condition> <block pos:start="283:47" pos:end="289:13">{<block_content pos:start="285:17" pos:end="287:22">

                <expr_stmt pos:start="285:17" pos:end="285:30"><expr pos:start="285:17" pos:end="285:29"><name pos:start="285:17" pos:end="285:19">ret</name> <operator pos:start="285:21" pos:end="285:21">=</operator> <operator pos:start="285:23" pos:end="285:23">-</operator><name pos:start="285:24" pos:end="285:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="287:17" pos:end="287:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:47"><expr pos:start="293:9" pos:end="293:46"><name pos:start="293:9" pos:end="293:11">len</name> <operator pos:start="293:13" pos:end="293:13">=</operator> <call pos:start="293:15" pos:end="293:46"><name pos:start="293:15" pos:end="293:17">MIN</name><argument_list pos:start="293:18" pos:end="293:46">(<argument pos:start="293:19" pos:end="293:27"><expr pos:start="293:19" pos:end="293:27"><name pos:start="293:19" pos:end="293:27"><name pos:start="293:19" pos:end="293:21">ccw</name><operator pos:start="293:22" pos:end="293:22">.</operator><name pos:start="293:23" pos:end="293:27">count</name></name></expr></argument>, <argument pos:start="293:30" pos:end="293:45"><expr pos:start="293:30" pos:end="293:45"><name pos:start="293:30" pos:end="293:45"><name pos:start="293:30" pos:end="293:33">vdev</name><operator pos:start="293:34" pos:end="293:35">-&gt;</operator><name pos:start="293:36" pos:end="293:45">config_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="295:9" pos:end="309:9"><if pos:start="295:9" pos:end="299:9">if <condition pos:start="295:12" pos:end="295:21">(<expr pos:start="295:13" pos:end="295:20"><operator pos:start="295:13" pos:end="295:13">!</operator><name pos:start="295:14" pos:end="295:20"><name pos:start="295:14" pos:end="295:16">ccw</name><operator pos:start="295:17" pos:end="295:17">.</operator><name pos:start="295:18" pos:end="295:20">cda</name></name></expr>)</condition> <block pos:start="295:23" pos:end="299:9">{<block_content pos:start="297:13" pos:end="297:26">

            <expr_stmt pos:start="297:13" pos:end="297:26"><expr pos:start="297:13" pos:end="297:25"><name pos:start="297:13" pos:end="297:15">ret</name> <operator pos:start="297:17" pos:end="297:17">=</operator> <operator pos:start="297:19" pos:end="297:19">-</operator><name pos:start="297:20" pos:end="297:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="299:11" pos:end="309:9">else <block pos:start="299:16" pos:end="309:9">{<block_content pos:start="301:13" pos:end="307:20">

            <expr_stmt pos:start="301:13" pos:end="301:64"><expr pos:start="301:13" pos:end="301:63"><call pos:start="301:13" pos:end="301:63"><name pos:start="301:13" pos:end="301:38">virtio_bus_get_vdev_config</name><argument_list pos:start="301:39" pos:end="301:63">(<argument pos:start="301:40" pos:end="301:48"><expr pos:start="301:40" pos:end="301:48"><operator pos:start="301:40" pos:end="301:40">&amp;</operator><name pos:start="301:41" pos:end="301:48"><name pos:start="301:41" pos:end="301:43">dev</name><operator pos:start="301:44" pos:end="301:45">-&gt;</operator><name pos:start="301:46" pos:end="301:48">bus</name></name></expr></argument>, <argument pos:start="301:51" pos:end="301:62"><expr pos:start="301:51" pos:end="301:62"><name pos:start="301:51" pos:end="301:62"><name pos:start="301:51" pos:end="301:54">vdev</name><operator pos:start="301:55" pos:end="301:56">-&gt;</operator><name pos:start="301:57" pos:end="301:62">config</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:66"><expr pos:start="303:13" pos:end="303:65"><call pos:start="303:13" pos:end="303:65"><name pos:start="303:13" pos:end="303:37">cpu_physical_memory_write</name><argument_list pos:start="303:38" pos:end="303:65">(<argument pos:start="303:39" pos:end="303:45"><expr pos:start="303:39" pos:end="303:45"><name pos:start="303:39" pos:end="303:45"><name pos:start="303:39" pos:end="303:41">ccw</name><operator pos:start="303:42" pos:end="303:42">.</operator><name pos:start="303:43" pos:end="303:45">cda</name></name></expr></argument>, <argument pos:start="303:48" pos:end="303:59"><expr pos:start="303:48" pos:end="303:59"><name pos:start="303:48" pos:end="303:59"><name pos:start="303:48" pos:end="303:51">vdev</name><operator pos:start="303:52" pos:end="303:53">-&gt;</operator><name pos:start="303:54" pos:end="303:59">config</name></name></expr></argument>, <argument pos:start="303:62" pos:end="303:64"><expr pos:start="303:62" pos:end="303:64"><name pos:start="303:62" pos:end="303:64">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:58"><expr pos:start="305:13" pos:end="305:57"><name pos:start="305:13" pos:end="305:39"><name pos:start="305:13" pos:end="305:15">sch</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:28">curr_status</name><operator pos:start="305:29" pos:end="305:29">.</operator><name pos:start="305:30" pos:end="305:33">scsw</name><operator pos:start="305:34" pos:end="305:34">.</operator><name pos:start="305:35" pos:end="305:39">count</name></name> <operator pos:start="305:41" pos:end="305:41">=</operator> <name pos:start="305:43" pos:end="305:51"><name pos:start="305:43" pos:end="305:45">ccw</name><operator pos:start="305:46" pos:end="305:46">.</operator><name pos:start="305:47" pos:end="305:51">count</name></name> <operator pos:start="305:53" pos:end="305:53">-</operator> <name pos:start="305:55" pos:end="305:57">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="307:13" pos:end="307:20"><expr pos:start="307:13" pos:end="307:19"><name pos:start="307:13" pos:end="307:15">ret</name> <operator pos:start="307:17" pos:end="307:17">=</operator> <literal type="number" pos:start="307:19" pos:end="307:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="311:9" pos:end="311:14">break;</break>

    <case pos:start="313:5" pos:end="313:28">case <expr pos:start="313:10" pos:end="313:27"><name pos:start="313:10" pos:end="313:27">CCW_CMD_WRITE_CONF</name></expr>:</case>

        <if_stmt pos:start="315:9" pos:end="325:9"><if pos:start="315:9" pos:end="325:9">if <condition pos:start="315:12" pos:end="315:22">(<expr pos:start="315:13" pos:end="315:21"><name pos:start="315:13" pos:end="315:21">check_len</name></expr>)</condition> <block pos:start="315:24" pos:end="325:9">{<block_content pos:start="317:13" pos:end="323:13">

            <if_stmt pos:start="317:13" pos:end="323:13"><if pos:start="317:13" pos:end="323:13">if <condition pos:start="317:16" pos:end="317:45">(<expr pos:start="317:17" pos:end="317:44"><name pos:start="317:17" pos:end="317:25"><name pos:start="317:17" pos:end="317:19">ccw</name><operator pos:start="317:20" pos:end="317:20">.</operator><name pos:start="317:21" pos:end="317:25">count</name></name> <operator pos:start="317:27" pos:end="317:27">&gt;</operator> <name pos:start="317:29" pos:end="317:44"><name pos:start="317:29" pos:end="317:32">vdev</name><operator pos:start="317:33" pos:end="317:34">-&gt;</operator><name pos:start="317:35" pos:end="317:44">config_len</name></name></expr>)</condition> <block pos:start="317:47" pos:end="323:13">{<block_content pos:start="319:17" pos:end="321:22">

                <expr_stmt pos:start="319:17" pos:end="319:30"><expr pos:start="319:17" pos:end="319:29"><name pos:start="319:17" pos:end="319:19">ret</name> <operator pos:start="319:21" pos:end="319:21">=</operator> <operator pos:start="319:23" pos:end="319:23">-</operator><name pos:start="319:24" pos:end="319:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="321:17" pos:end="321:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:47"><expr pos:start="327:9" pos:end="327:46"><name pos:start="327:9" pos:end="327:11">len</name> <operator pos:start="327:13" pos:end="327:13">=</operator> <call pos:start="327:15" pos:end="327:46"><name pos:start="327:15" pos:end="327:17">MIN</name><argument_list pos:start="327:18" pos:end="327:46">(<argument pos:start="327:19" pos:end="327:27"><expr pos:start="327:19" pos:end="327:27"><name pos:start="327:19" pos:end="327:27"><name pos:start="327:19" pos:end="327:21">ccw</name><operator pos:start="327:22" pos:end="327:22">.</operator><name pos:start="327:23" pos:end="327:27">count</name></name></expr></argument>, <argument pos:start="327:30" pos:end="327:45"><expr pos:start="327:30" pos:end="327:45"><name pos:start="327:30" pos:end="327:45"><name pos:start="327:30" pos:end="327:33">vdev</name><operator pos:start="327:34" pos:end="327:35">-&gt;</operator><name pos:start="327:36" pos:end="327:45">config_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="329:9" pos:end="329:21"><expr pos:start="329:9" pos:end="329:20"><name pos:start="329:9" pos:end="329:14">hw_len</name> <operator pos:start="329:16" pos:end="329:16">=</operator> <name pos:start="329:18" pos:end="329:20">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="331:9" pos:end="359:9"><if pos:start="331:9" pos:end="335:9">if <condition pos:start="331:12" pos:end="331:21">(<expr pos:start="331:13" pos:end="331:20"><operator pos:start="331:13" pos:end="331:13">!</operator><name pos:start="331:14" pos:end="331:20"><name pos:start="331:14" pos:end="331:16">ccw</name><operator pos:start="331:17" pos:end="331:17">.</operator><name pos:start="331:18" pos:end="331:20">cda</name></name></expr>)</condition> <block pos:start="331:23" pos:end="335:9">{<block_content pos:start="333:13" pos:end="333:26">

            <expr_stmt pos:start="333:13" pos:end="333:26"><expr pos:start="333:13" pos:end="333:25"><name pos:start="333:13" pos:end="333:15">ret</name> <operator pos:start="333:17" pos:end="333:17">=</operator> <operator pos:start="333:19" pos:end="333:19">-</operator><name pos:start="333:20" pos:end="333:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="335:11" pos:end="359:9">else <block pos:start="335:16" pos:end="359:9">{<block_content pos:start="337:13" pos:end="357:13">

            <expr_stmt pos:start="337:13" pos:end="337:66"><expr pos:start="337:13" pos:end="337:65"><name pos:start="337:13" pos:end="337:18">config</name> <operator pos:start="337:20" pos:end="337:20">=</operator> <call pos:start="337:22" pos:end="337:65"><name pos:start="337:22" pos:end="337:44">cpu_physical_memory_map</name><argument_list pos:start="337:45" pos:end="337:65">(<argument pos:start="337:46" pos:end="337:52"><expr pos:start="337:46" pos:end="337:52"><name pos:start="337:46" pos:end="337:52"><name pos:start="337:46" pos:end="337:48">ccw</name><operator pos:start="337:49" pos:end="337:49">.</operator><name pos:start="337:50" pos:end="337:52">cda</name></name></expr></argument>, <argument pos:start="337:55" pos:end="337:61"><expr pos:start="337:55" pos:end="337:61"><operator pos:start="337:55" pos:end="337:55">&amp;</operator><name pos:start="337:56" pos:end="337:61">hw_len</name></expr></argument>, <argument pos:start="337:64" pos:end="337:64"><expr pos:start="337:64" pos:end="337:64"><literal type="number" pos:start="337:64" pos:end="337:64">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="339:13" pos:end="357:13"><if pos:start="339:13" pos:end="343:13">if <condition pos:start="339:16" pos:end="339:24">(<expr pos:start="339:17" pos:end="339:23"><operator pos:start="339:17" pos:end="339:17">!</operator><name pos:start="339:18" pos:end="339:23">config</name></expr>)</condition> <block pos:start="339:26" pos:end="343:13">{<block_content pos:start="341:17" pos:end="341:30">

                <expr_stmt pos:start="341:17" pos:end="341:30"><expr pos:start="341:17" pos:end="341:29"><name pos:start="341:17" pos:end="341:19">ret</name> <operator pos:start="341:21" pos:end="341:21">=</operator> <operator pos:start="341:23" pos:end="341:23">-</operator><name pos:start="341:24" pos:end="341:29">EFAULT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="343:15" pos:end="357:13">else <block pos:start="343:20" pos:end="357:13">{<block_content pos:start="345:17" pos:end="355:24">

                <expr_stmt pos:start="345:17" pos:end="345:29"><expr pos:start="345:17" pos:end="345:28"><name pos:start="345:17" pos:end="345:19">len</name> <operator pos:start="345:21" pos:end="345:21">=</operator> <name pos:start="345:23" pos:end="345:28">hw_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="347:17" pos:end="347:50"><expr pos:start="347:17" pos:end="347:49"><call pos:start="347:17" pos:end="347:49"><name pos:start="347:17" pos:end="347:22">memcpy</name><argument_list pos:start="347:23" pos:end="347:49">(<argument pos:start="347:24" pos:end="347:35"><expr pos:start="347:24" pos:end="347:35"><name pos:start="347:24" pos:end="347:35"><name pos:start="347:24" pos:end="347:27">vdev</name><operator pos:start="347:28" pos:end="347:29">-&gt;</operator><name pos:start="347:30" pos:end="347:35">config</name></name></expr></argument>, <argument pos:start="347:38" pos:end="347:43"><expr pos:start="347:38" pos:end="347:43"><name pos:start="347:38" pos:end="347:43">config</name></expr></argument>, <argument pos:start="347:46" pos:end="347:48"><expr pos:start="347:46" pos:end="347:48"><name pos:start="347:46" pos:end="347:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="349:17" pos:end="349:69"><expr pos:start="349:17" pos:end="349:68"><call pos:start="349:17" pos:end="349:68"><name pos:start="349:17" pos:end="349:41">cpu_physical_memory_unmap</name><argument_list pos:start="349:42" pos:end="349:68">(<argument pos:start="349:43" pos:end="349:48"><expr pos:start="349:43" pos:end="349:48"><name pos:start="349:43" pos:end="349:48">config</name></expr></argument>, <argument pos:start="349:51" pos:end="349:56"><expr pos:start="349:51" pos:end="349:56"><name pos:start="349:51" pos:end="349:56">hw_len</name></expr></argument>, <argument pos:start="349:59" pos:end="349:59"><expr pos:start="349:59" pos:end="349:59"><literal type="number" pos:start="349:59" pos:end="349:59">0</literal></expr></argument>, <argument pos:start="349:62" pos:end="349:67"><expr pos:start="349:62" pos:end="349:67"><name pos:start="349:62" pos:end="349:67">hw_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="351:17" pos:end="351:68"><expr pos:start="351:17" pos:end="351:67"><call pos:start="351:17" pos:end="351:67"><name pos:start="351:17" pos:end="351:42">virtio_bus_set_vdev_config</name><argument_list pos:start="351:43" pos:end="351:67">(<argument pos:start="351:44" pos:end="351:52"><expr pos:start="351:44" pos:end="351:52"><operator pos:start="351:44" pos:end="351:44">&amp;</operator><name pos:start="351:45" pos:end="351:52"><name pos:start="351:45" pos:end="351:47">dev</name><operator pos:start="351:48" pos:end="351:49">-&gt;</operator><name pos:start="351:50" pos:end="351:52">bus</name></name></expr></argument>, <argument pos:start="351:55" pos:end="351:66"><expr pos:start="351:55" pos:end="351:66"><name pos:start="351:55" pos:end="351:66"><name pos:start="351:55" pos:end="351:58">vdev</name><operator pos:start="351:59" pos:end="351:60">-&gt;</operator><name pos:start="351:61" pos:end="351:66">config</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="353:17" pos:end="353:62"><expr pos:start="353:17" pos:end="353:61"><name pos:start="353:17" pos:end="353:43"><name pos:start="353:17" pos:end="353:19">sch</name><operator pos:start="353:20" pos:end="353:21">-&gt;</operator><name pos:start="353:22" pos:end="353:32">curr_status</name><operator pos:start="353:33" pos:end="353:33">.</operator><name pos:start="353:34" pos:end="353:37">scsw</name><operator pos:start="353:38" pos:end="353:38">.</operator><name pos:start="353:39" pos:end="353:43">count</name></name> <operator pos:start="353:45" pos:end="353:45">=</operator> <name pos:start="353:47" pos:end="353:55"><name pos:start="353:47" pos:end="353:49">ccw</name><operator pos:start="353:50" pos:end="353:50">.</operator><name pos:start="353:51" pos:end="353:55">count</name></name> <operator pos:start="353:57" pos:end="353:57">-</operator> <name pos:start="353:59" pos:end="353:61">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:24"><expr pos:start="355:17" pos:end="355:23"><name pos:start="355:17" pos:end="355:19">ret</name> <operator pos:start="355:21" pos:end="355:21">=</operator> <literal type="number" pos:start="355:23" pos:end="355:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="361:9" pos:end="361:14">break;</break>

    <case pos:start="363:5" pos:end="363:29">case <expr pos:start="363:10" pos:end="363:28"><name pos:start="363:10" pos:end="363:28">CCW_CMD_READ_STATUS</name></expr>:</case>

        <if_stmt pos:start="365:9" pos:end="383:9"><if pos:start="365:9" pos:end="375:9">if <condition pos:start="365:12" pos:end="365:22">(<expr pos:start="365:13" pos:end="365:21"><name pos:start="365:13" pos:end="365:21">check_len</name></expr>)</condition> <block pos:start="365:24" pos:end="375:9">{<block_content pos:start="367:13" pos:end="373:13">

            <if_stmt pos:start="367:13" pos:end="373:13"><if pos:start="367:13" pos:end="373:13">if <condition pos:start="367:16" pos:end="367:44">(<expr pos:start="367:17" pos:end="367:43"><name pos:start="367:17" pos:end="367:25"><name pos:start="367:17" pos:end="367:19">ccw</name><operator pos:start="367:20" pos:end="367:20">.</operator><name pos:start="367:21" pos:end="367:25">count</name></name> <operator pos:start="367:27" pos:end="367:28">!=</operator> <sizeof pos:start="367:30" pos:end="367:43">sizeof<argument_list pos:start="367:36" pos:end="367:43">(<argument pos:start="367:37" pos:end="367:42"><expr pos:start="367:37" pos:end="367:42"><name pos:start="367:37" pos:end="367:42">status</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="367:46" pos:end="373:13">{<block_content pos:start="369:17" pos:end="371:22">

                <expr_stmt pos:start="369:17" pos:end="369:30"><expr pos:start="369:17" pos:end="369:29"><name pos:start="369:17" pos:end="369:19">ret</name> <operator pos:start="369:21" pos:end="369:21">=</operator> <operator pos:start="369:23" pos:end="369:23">-</operator><name pos:start="369:24" pos:end="369:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="371:17" pos:end="371:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="375:11" pos:end="383:9">else if <condition pos:start="375:19" pos:end="375:46">(<expr pos:start="375:20" pos:end="375:45"><name pos:start="375:20" pos:end="375:28"><name pos:start="375:20" pos:end="375:22">ccw</name><operator pos:start="375:23" pos:end="375:23">.</operator><name pos:start="375:24" pos:end="375:28">count</name></name> <operator pos:start="375:30" pos:end="375:30">&lt;</operator> <sizeof pos:start="375:32" pos:end="375:45">sizeof<argument_list pos:start="375:38" pos:end="375:45">(<argument pos:start="375:39" pos:end="375:44"><expr pos:start="375:39" pos:end="375:44"><name pos:start="375:39" pos:end="375:44">status</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="375:48" pos:end="383:9">{<block_content pos:start="379:13" pos:end="381:18">

            <comment type="block" pos:start="377:13" pos:end="377:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="379:13" pos:end="379:26"><expr pos:start="379:13" pos:end="379:25"><name pos:start="379:13" pos:end="379:15">ret</name> <operator pos:start="379:17" pos:end="379:17">=</operator> <operator pos:start="379:19" pos:end="379:19">-</operator><name pos:start="379:20" pos:end="379:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="381:13" pos:end="381:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="385:9" pos:end="399:9"><if pos:start="385:9" pos:end="389:9">if <condition pos:start="385:12" pos:end="385:21">(<expr pos:start="385:13" pos:end="385:20"><operator pos:start="385:13" pos:end="385:13">!</operator><name pos:start="385:14" pos:end="385:20"><name pos:start="385:14" pos:end="385:16">ccw</name><operator pos:start="385:17" pos:end="385:17">.</operator><name pos:start="385:18" pos:end="385:20">cda</name></name></expr>)</condition> <block pos:start="385:23" pos:end="389:9">{<block_content pos:start="387:13" pos:end="387:26">

            <expr_stmt pos:start="387:13" pos:end="387:26"><expr pos:start="387:13" pos:end="387:25"><name pos:start="387:13" pos:end="387:15">ret</name> <operator pos:start="387:17" pos:end="387:17">=</operator> <operator pos:start="387:19" pos:end="387:19">-</operator><name pos:start="387:20" pos:end="387:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="389:11" pos:end="399:9">else <block pos:start="389:16" pos:end="399:9">{<block_content pos:start="391:13" pos:end="397:20">

            <expr_stmt pos:start="391:13" pos:end="393:70"><expr pos:start="391:13" pos:end="393:69"><call pos:start="391:13" pos:end="393:69"><name pos:start="391:13" pos:end="391:29">address_space_stb</name><argument_list pos:start="391:30" pos:end="393:69">(<argument pos:start="391:31" pos:end="391:51"><expr pos:start="391:31" pos:end="391:51"><operator pos:start="391:31" pos:end="391:31">&amp;</operator><name pos:start="391:32" pos:end="391:51">address_space_memory</name></expr></argument>, <argument pos:start="391:54" pos:end="391:60"><expr pos:start="391:54" pos:end="391:60"><name pos:start="391:54" pos:end="391:60"><name pos:start="391:54" pos:end="391:56">ccw</name><operator pos:start="391:57" pos:end="391:57">.</operator><name pos:start="391:58" pos:end="391:60">cda</name></name></expr></argument>, <argument pos:start="391:63" pos:end="391:74"><expr pos:start="391:63" pos:end="391:74"><name pos:start="391:63" pos:end="391:74"><name pos:start="391:63" pos:end="391:66">vdev</name><operator pos:start="391:67" pos:end="391:68">-&gt;</operator><name pos:start="391:69" pos:end="391:74">status</name></name></expr></argument>,

                                        <argument pos:start="393:41" pos:end="393:62"><expr pos:start="393:41" pos:end="393:62"><name pos:start="393:41" pos:end="393:62">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="393:65" pos:end="393:68"><expr pos:start="393:65" pos:end="393:68"><name pos:start="393:65" pos:end="393:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="395:75"><expr pos:start="395:13" pos:end="395:74"><name pos:start="395:13" pos:end="395:39"><name pos:start="395:13" pos:end="395:15">sch</name><operator pos:start="395:16" pos:end="395:17">-&gt;</operator><name pos:start="395:18" pos:end="395:28">curr_status</name><operator pos:start="395:29" pos:end="395:29">.</operator><name pos:start="395:30" pos:end="395:33">scsw</name><operator pos:start="395:34" pos:end="395:34">.</operator><name pos:start="395:35" pos:end="395:39">count</name></name> <operator pos:start="395:41" pos:end="395:41">=</operator> <name pos:start="395:43" pos:end="395:51"><name pos:start="395:43" pos:end="395:45">ccw</name><operator pos:start="395:46" pos:end="395:46">.</operator><name pos:start="395:47" pos:end="395:51">count</name></name> <operator pos:start="395:53" pos:end="395:53">-</operator> <sizeof pos:start="395:55" pos:end="395:74">sizeof<argument_list pos:start="395:61" pos:end="395:74">(<argument pos:start="395:62" pos:end="395:73"><expr pos:start="395:62" pos:end="395:73"><name pos:start="395:62" pos:end="395:73"><name pos:start="395:62" pos:end="395:65">vdev</name><operator pos:start="395:66" pos:end="395:67">-&gt;</operator><name pos:start="395:68" pos:end="395:73">status</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt><empty_stmt pos:start="395:76" pos:end="395:76">;</empty_stmt>

            <expr_stmt pos:start="397:13" pos:end="397:20"><expr pos:start="397:13" pos:end="397:19"><name pos:start="397:13" pos:end="397:15">ret</name> <operator pos:start="397:17" pos:end="397:17">=</operator> <literal type="number" pos:start="397:19" pos:end="397:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="401:9" pos:end="401:14">break;</break>

    <case pos:start="403:5" pos:end="403:30">case <expr pos:start="403:10" pos:end="403:29"><name pos:start="403:10" pos:end="403:29">CCW_CMD_WRITE_STATUS</name></expr>:</case>

        <if_stmt pos:start="405:9" pos:end="423:9"><if pos:start="405:9" pos:end="415:9">if <condition pos:start="405:12" pos:end="405:22">(<expr pos:start="405:13" pos:end="405:21"><name pos:start="405:13" pos:end="405:21">check_len</name></expr>)</condition> <block pos:start="405:24" pos:end="415:9">{<block_content pos:start="407:13" pos:end="413:13">

            <if_stmt pos:start="407:13" pos:end="413:13"><if pos:start="407:13" pos:end="413:13">if <condition pos:start="407:16" pos:end="407:44">(<expr pos:start="407:17" pos:end="407:43"><name pos:start="407:17" pos:end="407:25"><name pos:start="407:17" pos:end="407:19">ccw</name><operator pos:start="407:20" pos:end="407:20">.</operator><name pos:start="407:21" pos:end="407:25">count</name></name> <operator pos:start="407:27" pos:end="407:28">!=</operator> <sizeof pos:start="407:30" pos:end="407:43">sizeof<argument_list pos:start="407:36" pos:end="407:43">(<argument pos:start="407:37" pos:end="407:42"><expr pos:start="407:37" pos:end="407:42"><name pos:start="407:37" pos:end="407:42">status</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="407:46" pos:end="413:13">{<block_content pos:start="409:17" pos:end="411:22">

                <expr_stmt pos:start="409:17" pos:end="409:30"><expr pos:start="409:17" pos:end="409:29"><name pos:start="409:17" pos:end="409:19">ret</name> <operator pos:start="409:21" pos:end="409:21">=</operator> <operator pos:start="409:23" pos:end="409:23">-</operator><name pos:start="409:24" pos:end="409:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="411:17" pos:end="411:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="415:11" pos:end="423:9">else if <condition pos:start="415:19" pos:end="415:46">(<expr pos:start="415:20" pos:end="415:45"><name pos:start="415:20" pos:end="415:28"><name pos:start="415:20" pos:end="415:22">ccw</name><operator pos:start="415:23" pos:end="415:23">.</operator><name pos:start="415:24" pos:end="415:28">count</name></name> <operator pos:start="415:30" pos:end="415:30">&lt;</operator> <sizeof pos:start="415:32" pos:end="415:45">sizeof<argument_list pos:start="415:38" pos:end="415:45">(<argument pos:start="415:39" pos:end="415:44"><expr pos:start="415:39" pos:end="415:44"><name pos:start="415:39" pos:end="415:44">status</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="415:48" pos:end="423:9">{<block_content pos:start="419:13" pos:end="421:18">

            <comment type="block" pos:start="417:13" pos:end="417:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="419:13" pos:end="419:26"><expr pos:start="419:13" pos:end="419:25"><name pos:start="419:13" pos:end="419:15">ret</name> <operator pos:start="419:17" pos:end="419:17">=</operator> <operator pos:start="419:19" pos:end="419:19">-</operator><name pos:start="419:20" pos:end="419:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="421:13" pos:end="421:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="425:9" pos:end="467:9"><if pos:start="425:9" pos:end="429:9">if <condition pos:start="425:12" pos:end="425:21">(<expr pos:start="425:13" pos:end="425:20"><operator pos:start="425:13" pos:end="425:13">!</operator><name pos:start="425:14" pos:end="425:20"><name pos:start="425:14" pos:end="425:16">ccw</name><operator pos:start="425:17" pos:end="425:17">.</operator><name pos:start="425:18" pos:end="425:20">cda</name></name></expr>)</condition> <block pos:start="425:23" pos:end="429:9">{<block_content pos:start="427:13" pos:end="427:26">

            <expr_stmt pos:start="427:13" pos:end="427:26"><expr pos:start="427:13" pos:end="427:25"><name pos:start="427:13" pos:end="427:15">ret</name> <operator pos:start="427:17" pos:end="427:17">=</operator> <operator pos:start="427:19" pos:end="427:19">-</operator><name pos:start="427:20" pos:end="427:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="429:11" pos:end="467:9">else <block pos:start="429:16" pos:end="467:9">{<block_content pos:start="431:13" pos:end="465:13">

            <expr_stmt pos:start="431:13" pos:end="433:70"><expr pos:start="431:13" pos:end="433:69"><name pos:start="431:13" pos:end="431:18">status</name> <operator pos:start="431:20" pos:end="431:20">=</operator> <call pos:start="431:22" pos:end="433:69"><name pos:start="431:22" pos:end="431:39">address_space_ldub</name><argument_list pos:start="431:40" pos:end="433:69">(<argument pos:start="431:41" pos:end="431:61"><expr pos:start="431:41" pos:end="431:61"><operator pos:start="431:41" pos:end="431:41">&amp;</operator><name pos:start="431:42" pos:end="431:61">address_space_memory</name></expr></argument>, <argument pos:start="431:64" pos:end="431:70"><expr pos:start="431:64" pos:end="431:70"><name pos:start="431:64" pos:end="431:70"><name pos:start="431:64" pos:end="431:66">ccw</name><operator pos:start="431:67" pos:end="431:67">.</operator><name pos:start="431:68" pos:end="431:70">cda</name></name></expr></argument>,

                                        <argument pos:start="433:41" pos:end="433:62"><expr pos:start="433:41" pos:end="433:62"><name pos:start="433:41" pos:end="433:62">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="433:65" pos:end="433:68"><expr pos:start="433:65" pos:end="433:68"><name pos:start="433:65" pos:end="433:68">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="435:13" pos:end="439:13"><if pos:start="435:13" pos:end="439:13">if <condition pos:start="435:16" pos:end="435:54">(<expr pos:start="435:17" pos:end="435:53"><operator pos:start="435:17" pos:end="435:17">!</operator><operator pos:start="435:18" pos:end="435:18">(</operator><name pos:start="435:19" pos:end="435:24">status</name> <operator pos:start="435:26" pos:end="435:26">&amp;</operator> <name pos:start="435:28" pos:end="435:52">VIRTIO_CONFIG_S_DRIVER_OK</name><operator pos:start="435:53" pos:end="435:53">)</operator></expr>)</condition> <block pos:start="435:56" pos:end="439:13">{<block_content pos:start="437:17" pos:end="437:47">

                <expr_stmt pos:start="437:17" pos:end="437:47"><expr pos:start="437:17" pos:end="437:46"><call pos:start="437:17" pos:end="437:46"><name pos:start="437:17" pos:end="437:41">virtio_ccw_stop_ioeventfd</name><argument_list pos:start="437:42" pos:end="437:46">(<argument pos:start="437:43" pos:end="437:45"><expr pos:start="437:43" pos:end="437:45"><name pos:start="437:43" pos:end="437:45">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="441:13" pos:end="465:13"><if pos:start="441:13" pos:end="459:13">if <condition pos:start="441:16" pos:end="441:53">(<expr pos:start="441:17" pos:end="441:52"><call pos:start="441:17" pos:end="441:47"><name pos:start="441:17" pos:end="441:33">virtio_set_status</name><argument_list pos:start="441:34" pos:end="441:47">(<argument pos:start="441:35" pos:end="441:38"><expr pos:start="441:35" pos:end="441:38"><name pos:start="441:35" pos:end="441:38">vdev</name></expr></argument>, <argument pos:start="441:41" pos:end="441:46"><expr pos:start="441:41" pos:end="441:46"><name pos:start="441:41" pos:end="441:46">status</name></expr></argument>)</argument_list></call> <operator pos:start="441:49" pos:end="441:50">==</operator> <literal type="number" pos:start="441:52" pos:end="441:52">0</literal></expr>)</condition> <block pos:start="441:55" pos:end="459:13">{<block_content pos:start="443:17" pos:end="457:24">

                <if_stmt pos:start="443:17" pos:end="447:17"><if pos:start="443:17" pos:end="447:17">if <condition pos:start="443:20" pos:end="443:38">(<expr pos:start="443:21" pos:end="443:37"><name pos:start="443:21" pos:end="443:32"><name pos:start="443:21" pos:end="443:24">vdev</name><operator pos:start="443:25" pos:end="443:26">-&gt;</operator><name pos:start="443:27" pos:end="443:32">status</name></name> <operator pos:start="443:34" pos:end="443:35">==</operator> <literal type="number" pos:start="443:37" pos:end="443:37">0</literal></expr>)</condition> <block pos:start="443:40" pos:end="447:17">{<block_content pos:start="445:21" pos:end="445:55">

                    <expr_stmt pos:start="445:21" pos:end="445:55"><expr pos:start="445:21" pos:end="445:54"><call pos:start="445:21" pos:end="445:54"><name pos:start="445:21" pos:end="445:43">virtio_ccw_reset_virtio</name><argument_list pos:start="445:44" pos:end="445:54">(<argument pos:start="445:45" pos:end="445:47"><expr pos:start="445:45" pos:end="445:47"><name pos:start="445:45" pos:end="445:47">dev</name></expr></argument>, <argument pos:start="445:50" pos:end="445:53"><expr pos:start="445:50" pos:end="445:53"><name pos:start="445:50" pos:end="445:53">vdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="449:17" pos:end="453:17"><if pos:start="449:17" pos:end="453:17">if <condition pos:start="449:20" pos:end="449:55">(<expr pos:start="449:21" pos:end="449:54"><name pos:start="449:21" pos:end="449:26">status</name> <operator pos:start="449:28" pos:end="449:28">&amp;</operator> <name pos:start="449:30" pos:end="449:54">VIRTIO_CONFIG_S_DRIVER_OK</name></expr>)</condition> <block pos:start="449:57" pos:end="453:17">{<block_content pos:start="451:21" pos:end="451:52">

                    <expr_stmt pos:start="451:21" pos:end="451:52"><expr pos:start="451:21" pos:end="451:51"><call pos:start="451:21" pos:end="451:51"><name pos:start="451:21" pos:end="451:46">virtio_ccw_start_ioeventfd</name><argument_list pos:start="451:47" pos:end="451:51">(<argument pos:start="451:48" pos:end="451:50"><expr pos:start="451:48" pos:end="451:50"><name pos:start="451:48" pos:end="451:50">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="455:17" pos:end="455:73"><expr pos:start="455:17" pos:end="455:72"><name pos:start="455:17" pos:end="455:43"><name pos:start="455:17" pos:end="455:19">sch</name><operator pos:start="455:20" pos:end="455:21">-&gt;</operator><name pos:start="455:22" pos:end="455:32">curr_status</name><operator pos:start="455:33" pos:end="455:33">.</operator><name pos:start="455:34" pos:end="455:37">scsw</name><operator pos:start="455:38" pos:end="455:38">.</operator><name pos:start="455:39" pos:end="455:43">count</name></name> <operator pos:start="455:45" pos:end="455:45">=</operator> <name pos:start="455:47" pos:end="455:55"><name pos:start="455:47" pos:end="455:49">ccw</name><operator pos:start="455:50" pos:end="455:50">.</operator><name pos:start="455:51" pos:end="455:55">count</name></name> <operator pos:start="455:57" pos:end="455:57">-</operator> <sizeof pos:start="455:59" pos:end="455:72">sizeof<argument_list pos:start="455:65" pos:end="455:72">(<argument pos:start="455:66" pos:end="455:71"><expr pos:start="455:66" pos:end="455:71"><name pos:start="455:66" pos:end="455:71">status</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

                <expr_stmt pos:start="457:17" pos:end="457:24"><expr pos:start="457:17" pos:end="457:23"><name pos:start="457:17" pos:end="457:19">ret</name> <operator pos:start="457:21" pos:end="457:21">=</operator> <literal type="number" pos:start="457:23" pos:end="457:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="459:15" pos:end="465:13">else <block pos:start="459:20" pos:end="465:13">{<block_content pos:start="463:17" pos:end="463:30">

                <comment type="block" pos:start="461:17" pos:end="461:47">/* Trigger a command reject. */</comment>

                <expr_stmt pos:start="463:17" pos:end="463:30"><expr pos:start="463:17" pos:end="463:29"><name pos:start="463:17" pos:end="463:19">ret</name> <operator pos:start="463:21" pos:end="463:21">=</operator> <operator pos:start="463:23" pos:end="463:23">-</operator><name pos:start="463:24" pos:end="463:29">ENOSYS</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="469:9" pos:end="469:14">break;</break>

    <case pos:start="471:5" pos:end="471:25">case <expr pos:start="471:10" pos:end="471:24"><name pos:start="471:10" pos:end="471:24">CCW_CMD_SET_IND</name></expr>:</case>

        <if_stmt pos:start="473:9" pos:end="491:9"><if pos:start="473:9" pos:end="483:9">if <condition pos:start="473:12" pos:end="473:22">(<expr pos:start="473:13" pos:end="473:21"><name pos:start="473:13" pos:end="473:21">check_len</name></expr>)</condition> <block pos:start="473:24" pos:end="483:9">{<block_content pos:start="475:13" pos:end="481:13">

            <if_stmt pos:start="475:13" pos:end="481:13"><if pos:start="475:13" pos:end="481:13">if <condition pos:start="475:16" pos:end="475:48">(<expr pos:start="475:17" pos:end="475:47"><name pos:start="475:17" pos:end="475:25"><name pos:start="475:17" pos:end="475:19">ccw</name><operator pos:start="475:20" pos:end="475:20">.</operator><name pos:start="475:21" pos:end="475:25">count</name></name> <operator pos:start="475:27" pos:end="475:28">!=</operator> <sizeof pos:start="475:30" pos:end="475:47">sizeof<argument_list pos:start="475:36" pos:end="475:47">(<argument pos:start="475:37" pos:end="475:46"><expr pos:start="475:37" pos:end="475:46"><name pos:start="475:37" pos:end="475:46">indicators</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="475:50" pos:end="481:13">{<block_content pos:start="477:17" pos:end="479:22">

                <expr_stmt pos:start="477:17" pos:end="477:30"><expr pos:start="477:17" pos:end="477:29"><name pos:start="477:17" pos:end="477:19">ret</name> <operator pos:start="477:21" pos:end="477:21">=</operator> <operator pos:start="477:23" pos:end="477:23">-</operator><name pos:start="477:24" pos:end="477:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="479:17" pos:end="479:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="483:11" pos:end="491:9">else if <condition pos:start="483:19" pos:end="483:50">(<expr pos:start="483:20" pos:end="483:49"><name pos:start="483:20" pos:end="483:28"><name pos:start="483:20" pos:end="483:22">ccw</name><operator pos:start="483:23" pos:end="483:23">.</operator><name pos:start="483:24" pos:end="483:28">count</name></name> <operator pos:start="483:30" pos:end="483:30">&lt;</operator> <sizeof pos:start="483:32" pos:end="483:49">sizeof<argument_list pos:start="483:38" pos:end="483:49">(<argument pos:start="483:39" pos:end="483:48"><expr pos:start="483:39" pos:end="483:48"><name pos:start="483:39" pos:end="483:48">indicators</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="483:52" pos:end="491:9">{<block_content pos:start="487:13" pos:end="489:18">

            <comment type="block" pos:start="485:13" pos:end="485:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="487:13" pos:end="487:26"><expr pos:start="487:13" pos:end="487:25"><name pos:start="487:13" pos:end="487:15">ret</name> <operator pos:start="487:17" pos:end="487:17">=</operator> <operator pos:start="487:19" pos:end="487:19">-</operator><name pos:start="487:20" pos:end="487:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="489:13" pos:end="489:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="493:9" pos:end="501:9"><if pos:start="493:9" pos:end="501:9">if <condition pos:start="493:12" pos:end="493:32">(<expr pos:start="493:13" pos:end="493:31"><name pos:start="493:13" pos:end="493:31"><name pos:start="493:13" pos:end="493:15">sch</name><operator pos:start="493:16" pos:end="493:17">-&gt;</operator><name pos:start="493:18" pos:end="493:31">thinint_active</name></name></expr>)</condition> <block pos:start="493:34" pos:end="501:9">{<block_content pos:start="497:13" pos:end="499:18">

            <comment type="block" pos:start="495:13" pos:end="495:43">/* Trigger a command reject. */</comment>

            <expr_stmt pos:start="497:13" pos:end="497:26"><expr pos:start="497:13" pos:end="497:25"><name pos:start="497:13" pos:end="497:15">ret</name> <operator pos:start="497:17" pos:end="497:17">=</operator> <operator pos:start="497:19" pos:end="497:19">-</operator><name pos:start="497:20" pos:end="497:25">ENOSYS</name></expr>;</expr_stmt>

            <break pos:start="499:13" pos:end="499:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="503:9" pos:end="511:9"><if pos:start="503:9" pos:end="511:9">if <condition pos:start="503:12" pos:end="503:68">(<expr pos:start="503:13" pos:end="503:67"><call pos:start="503:13" pos:end="503:39"><name pos:start="503:13" pos:end="503:33">virtio_get_num_queues</name><argument_list pos:start="503:34" pos:end="503:39">(<argument pos:start="503:35" pos:end="503:38"><expr pos:start="503:35" pos:end="503:38"><name pos:start="503:35" pos:end="503:38">vdev</name></expr></argument>)</argument_list></call> <operator pos:start="503:41" pos:end="503:41">&gt;</operator> <name pos:start="503:43" pos:end="503:67">NR_CLASSIC_INDICATOR_BITS</name></expr>)</condition> <block pos:start="503:70" pos:end="511:9">{<block_content pos:start="507:13" pos:end="509:18">

            <comment type="block" pos:start="505:13" pos:end="505:70">/* More queues than indicator bits --&gt; trigger a reject */</comment>

            <expr_stmt pos:start="507:13" pos:end="507:26"><expr pos:start="507:13" pos:end="507:25"><name pos:start="507:13" pos:end="507:15">ret</name> <operator pos:start="507:17" pos:end="507:17">=</operator> <operator pos:start="507:19" pos:end="507:19">-</operator><name pos:start="507:20" pos:end="507:25">ENOSYS</name></expr>;</expr_stmt>

            <break pos:start="509:13" pos:end="509:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="513:9" pos:end="529:9"><if pos:start="513:9" pos:end="517:9">if <condition pos:start="513:12" pos:end="513:21">(<expr pos:start="513:13" pos:end="513:20"><operator pos:start="513:13" pos:end="513:13">!</operator><name pos:start="513:14" pos:end="513:20"><name pos:start="513:14" pos:end="513:16">ccw</name><operator pos:start="513:17" pos:end="513:17">.</operator><name pos:start="513:18" pos:end="513:20">cda</name></name></expr>)</condition> <block pos:start="513:23" pos:end="517:9">{<block_content pos:start="515:13" pos:end="515:26">

            <expr_stmt pos:start="515:13" pos:end="515:26"><expr pos:start="515:13" pos:end="515:25"><name pos:start="515:13" pos:end="515:15">ret</name> <operator pos:start="515:17" pos:end="515:17">=</operator> <operator pos:start="515:19" pos:end="515:19">-</operator><name pos:start="515:20" pos:end="515:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="517:11" pos:end="529:9">else <block pos:start="517:16" pos:end="529:9">{<block_content pos:start="519:13" pos:end="527:20">

            <expr_stmt pos:start="519:13" pos:end="521:76"><expr pos:start="519:13" pos:end="521:75"><name pos:start="519:13" pos:end="519:22">indicators</name> <operator pos:start="519:24" pos:end="519:24">=</operator> <call pos:start="519:26" pos:end="521:75"><name pos:start="519:26" pos:end="519:45">address_space_ldq_be</name><argument_list pos:start="519:46" pos:end="521:75">(<argument pos:start="519:47" pos:end="519:67"><expr pos:start="519:47" pos:end="519:67"><operator pos:start="519:47" pos:end="519:47">&amp;</operator><name pos:start="519:48" pos:end="519:67">address_space_memory</name></expr></argument>, <argument pos:start="519:70" pos:end="519:76"><expr pos:start="519:70" pos:end="519:76"><name pos:start="519:70" pos:end="519:76"><name pos:start="519:70" pos:end="519:72">ccw</name><operator pos:start="519:73" pos:end="519:73">.</operator><name pos:start="519:74" pos:end="519:76">cda</name></name></expr></argument>,

                                              <argument pos:start="521:47" pos:end="521:68"><expr pos:start="521:47" pos:end="521:68"><name pos:start="521:47" pos:end="521:68">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="521:71" pos:end="521:74"><expr pos:start="521:71" pos:end="521:74"><name pos:start="521:71" pos:end="521:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="523:13" pos:end="523:74"><expr pos:start="523:13" pos:end="523:73"><name pos:start="523:13" pos:end="523:27"><name pos:start="523:13" pos:end="523:15">dev</name><operator pos:start="523:16" pos:end="523:17">-&gt;</operator><name pos:start="523:18" pos:end="523:27">indicators</name></name> <operator pos:start="523:29" pos:end="523:29">=</operator> <call pos:start="523:31" pos:end="523:73"><name pos:start="523:31" pos:end="523:43">get_indicator</name><argument_list pos:start="523:44" pos:end="523:73">(<argument pos:start="523:45" pos:end="523:54"><expr pos:start="523:45" pos:end="523:54"><name pos:start="523:45" pos:end="523:54">indicators</name></expr></argument>, <argument pos:start="523:57" pos:end="523:72"><expr pos:start="523:57" pos:end="523:72"><sizeof pos:start="523:57" pos:end="523:72">sizeof<argument_list pos:start="523:63" pos:end="523:72">(<argument pos:start="523:64" pos:end="523:71"><expr pos:start="523:64" pos:end="523:71"><name pos:start="523:64" pos:end="523:71">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="525:13" pos:end="525:73"><expr pos:start="525:13" pos:end="525:72"><name pos:start="525:13" pos:end="525:39"><name pos:start="525:13" pos:end="525:15">sch</name><operator pos:start="525:16" pos:end="525:17">-&gt;</operator><name pos:start="525:18" pos:end="525:28">curr_status</name><operator pos:start="525:29" pos:end="525:29">.</operator><name pos:start="525:30" pos:end="525:33">scsw</name><operator pos:start="525:34" pos:end="525:34">.</operator><name pos:start="525:35" pos:end="525:39">count</name></name> <operator pos:start="525:41" pos:end="525:41">=</operator> <name pos:start="525:43" pos:end="525:51"><name pos:start="525:43" pos:end="525:45">ccw</name><operator pos:start="525:46" pos:end="525:46">.</operator><name pos:start="525:47" pos:end="525:51">count</name></name> <operator pos:start="525:53" pos:end="525:53">-</operator> <sizeof pos:start="525:55" pos:end="525:72">sizeof<argument_list pos:start="525:61" pos:end="525:72">(<argument pos:start="525:62" pos:end="525:71"><expr pos:start="525:62" pos:end="525:71"><name pos:start="525:62" pos:end="525:71">indicators</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="527:13" pos:end="527:20"><expr pos:start="527:13" pos:end="527:19"><name pos:start="527:13" pos:end="527:15">ret</name> <operator pos:start="527:17" pos:end="527:17">=</operator> <literal type="number" pos:start="527:19" pos:end="527:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="531:9" pos:end="531:14">break;</break>

    <case pos:start="533:5" pos:end="533:30">case <expr pos:start="533:10" pos:end="533:29"><name pos:start="533:10" pos:end="533:29">CCW_CMD_SET_CONF_IND</name></expr>:</case>

        <if_stmt pos:start="535:9" pos:end="553:9"><if pos:start="535:9" pos:end="545:9">if <condition pos:start="535:12" pos:end="535:22">(<expr pos:start="535:13" pos:end="535:21"><name pos:start="535:13" pos:end="535:21">check_len</name></expr>)</condition> <block pos:start="535:24" pos:end="545:9">{<block_content pos:start="537:13" pos:end="543:13">

            <if_stmt pos:start="537:13" pos:end="543:13"><if pos:start="537:13" pos:end="543:13">if <condition pos:start="537:16" pos:end="537:48">(<expr pos:start="537:17" pos:end="537:47"><name pos:start="537:17" pos:end="537:25"><name pos:start="537:17" pos:end="537:19">ccw</name><operator pos:start="537:20" pos:end="537:20">.</operator><name pos:start="537:21" pos:end="537:25">count</name></name> <operator pos:start="537:27" pos:end="537:28">!=</operator> <sizeof pos:start="537:30" pos:end="537:47">sizeof<argument_list pos:start="537:36" pos:end="537:47">(<argument pos:start="537:37" pos:end="537:46"><expr pos:start="537:37" pos:end="537:46"><name pos:start="537:37" pos:end="537:46">indicators</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="537:50" pos:end="543:13">{<block_content pos:start="539:17" pos:end="541:22">

                <expr_stmt pos:start="539:17" pos:end="539:30"><expr pos:start="539:17" pos:end="539:29"><name pos:start="539:17" pos:end="539:19">ret</name> <operator pos:start="539:21" pos:end="539:21">=</operator> <operator pos:start="539:23" pos:end="539:23">-</operator><name pos:start="539:24" pos:end="539:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="541:17" pos:end="541:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="545:11" pos:end="553:9">else if <condition pos:start="545:19" pos:end="545:50">(<expr pos:start="545:20" pos:end="545:49"><name pos:start="545:20" pos:end="545:28"><name pos:start="545:20" pos:end="545:22">ccw</name><operator pos:start="545:23" pos:end="545:23">.</operator><name pos:start="545:24" pos:end="545:28">count</name></name> <operator pos:start="545:30" pos:end="545:30">&lt;</operator> <sizeof pos:start="545:32" pos:end="545:49">sizeof<argument_list pos:start="545:38" pos:end="545:49">(<argument pos:start="545:39" pos:end="545:48"><expr pos:start="545:39" pos:end="545:48"><name pos:start="545:39" pos:end="545:48">indicators</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="545:52" pos:end="553:9">{<block_content pos:start="549:13" pos:end="551:18">

            <comment type="block" pos:start="547:13" pos:end="547:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="549:13" pos:end="549:26"><expr pos:start="549:13" pos:end="549:25"><name pos:start="549:13" pos:end="549:15">ret</name> <operator pos:start="549:17" pos:end="549:17">=</operator> <operator pos:start="549:19" pos:end="549:19">-</operator><name pos:start="549:20" pos:end="549:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="551:13" pos:end="551:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="555:9" pos:end="571:9"><if pos:start="555:9" pos:end="559:9">if <condition pos:start="555:12" pos:end="555:21">(<expr pos:start="555:13" pos:end="555:20"><operator pos:start="555:13" pos:end="555:13">!</operator><name pos:start="555:14" pos:end="555:20"><name pos:start="555:14" pos:end="555:16">ccw</name><operator pos:start="555:17" pos:end="555:17">.</operator><name pos:start="555:18" pos:end="555:20">cda</name></name></expr>)</condition> <block pos:start="555:23" pos:end="559:9">{<block_content pos:start="557:13" pos:end="557:26">

            <expr_stmt pos:start="557:13" pos:end="557:26"><expr pos:start="557:13" pos:end="557:25"><name pos:start="557:13" pos:end="557:15">ret</name> <operator pos:start="557:17" pos:end="557:17">=</operator> <operator pos:start="557:19" pos:end="557:19">-</operator><name pos:start="557:20" pos:end="557:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="559:11" pos:end="571:9">else <block pos:start="559:16" pos:end="571:9">{<block_content pos:start="561:13" pos:end="569:20">

            <expr_stmt pos:start="561:13" pos:end="563:76"><expr pos:start="561:13" pos:end="563:75"><name pos:start="561:13" pos:end="561:22">indicators</name> <operator pos:start="561:24" pos:end="561:24">=</operator> <call pos:start="561:26" pos:end="563:75"><name pos:start="561:26" pos:end="561:45">address_space_ldq_be</name><argument_list pos:start="561:46" pos:end="563:75">(<argument pos:start="561:47" pos:end="561:67"><expr pos:start="561:47" pos:end="561:67"><operator pos:start="561:47" pos:end="561:47">&amp;</operator><name pos:start="561:48" pos:end="561:67">address_space_memory</name></expr></argument>, <argument pos:start="561:70" pos:end="561:76"><expr pos:start="561:70" pos:end="561:76"><name pos:start="561:70" pos:end="561:76"><name pos:start="561:70" pos:end="561:72">ccw</name><operator pos:start="561:73" pos:end="561:73">.</operator><name pos:start="561:74" pos:end="561:76">cda</name></name></expr></argument>,

                                              <argument pos:start="563:47" pos:end="563:68"><expr pos:start="563:47" pos:end="563:68"><name pos:start="563:47" pos:end="563:68">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="563:71" pos:end="563:74"><expr pos:start="563:71" pos:end="563:74"><name pos:start="563:71" pos:end="563:74">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="565:13" pos:end="565:75"><expr pos:start="565:13" pos:end="565:74"><name pos:start="565:13" pos:end="565:28"><name pos:start="565:13" pos:end="565:15">dev</name><operator pos:start="565:16" pos:end="565:17">-&gt;</operator><name pos:start="565:18" pos:end="565:28">indicators2</name></name> <operator pos:start="565:30" pos:end="565:30">=</operator> <call pos:start="565:32" pos:end="565:74"><name pos:start="565:32" pos:end="565:44">get_indicator</name><argument_list pos:start="565:45" pos:end="565:74">(<argument pos:start="565:46" pos:end="565:55"><expr pos:start="565:46" pos:end="565:55"><name pos:start="565:46" pos:end="565:55">indicators</name></expr></argument>, <argument pos:start="565:58" pos:end="565:73"><expr pos:start="565:58" pos:end="565:73"><sizeof pos:start="565:58" pos:end="565:73">sizeof<argument_list pos:start="565:64" pos:end="565:73">(<argument pos:start="565:65" pos:end="565:72"><expr pos:start="565:65" pos:end="565:72"><name pos:start="565:65" pos:end="565:72">uint64_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="567:13" pos:end="567:73"><expr pos:start="567:13" pos:end="567:72"><name pos:start="567:13" pos:end="567:39"><name pos:start="567:13" pos:end="567:15">sch</name><operator pos:start="567:16" pos:end="567:17">-&gt;</operator><name pos:start="567:18" pos:end="567:28">curr_status</name><operator pos:start="567:29" pos:end="567:29">.</operator><name pos:start="567:30" pos:end="567:33">scsw</name><operator pos:start="567:34" pos:end="567:34">.</operator><name pos:start="567:35" pos:end="567:39">count</name></name> <operator pos:start="567:41" pos:end="567:41">=</operator> <name pos:start="567:43" pos:end="567:51"><name pos:start="567:43" pos:end="567:45">ccw</name><operator pos:start="567:46" pos:end="567:46">.</operator><name pos:start="567:47" pos:end="567:51">count</name></name> <operator pos:start="567:53" pos:end="567:53">-</operator> <sizeof pos:start="567:55" pos:end="567:72">sizeof<argument_list pos:start="567:61" pos:end="567:72">(<argument pos:start="567:62" pos:end="567:71"><expr pos:start="567:62" pos:end="567:71"><name pos:start="567:62" pos:end="567:71">indicators</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="569:20"><expr pos:start="569:13" pos:end="569:19"><name pos:start="569:13" pos:end="569:15">ret</name> <operator pos:start="569:17" pos:end="569:17">=</operator> <literal type="number" pos:start="569:19" pos:end="569:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="573:9" pos:end="573:14">break;</break>

    <case pos:start="575:5" pos:end="575:30">case <expr pos:start="575:10" pos:end="575:29"><name pos:start="575:10" pos:end="575:29">CCW_CMD_READ_VQ_CONF</name></expr>:</case>

        <if_stmt pos:start="577:9" pos:end="595:9"><if pos:start="577:9" pos:end="587:9">if <condition pos:start="577:12" pos:end="577:22">(<expr pos:start="577:13" pos:end="577:21"><name pos:start="577:13" pos:end="577:21">check_len</name></expr>)</condition> <block pos:start="577:24" pos:end="587:9">{<block_content pos:start="579:13" pos:end="585:13">

            <if_stmt pos:start="579:13" pos:end="585:13"><if pos:start="579:13" pos:end="585:13">if <condition pos:start="579:16" pos:end="579:47">(<expr pos:start="579:17" pos:end="579:46"><name pos:start="579:17" pos:end="579:25"><name pos:start="579:17" pos:end="579:19">ccw</name><operator pos:start="579:20" pos:end="579:20">.</operator><name pos:start="579:21" pos:end="579:25">count</name></name> <operator pos:start="579:27" pos:end="579:28">!=</operator> <sizeof pos:start="579:30" pos:end="579:46">sizeof<argument_list pos:start="579:36" pos:end="579:46">(<argument pos:start="579:37" pos:end="579:45"><expr pos:start="579:37" pos:end="579:45"><name pos:start="579:37" pos:end="579:45">vq_config</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="579:49" pos:end="585:13">{<block_content pos:start="581:17" pos:end="583:22">

                <expr_stmt pos:start="581:17" pos:end="581:30"><expr pos:start="581:17" pos:end="581:29"><name pos:start="581:17" pos:end="581:19">ret</name> <operator pos:start="581:21" pos:end="581:21">=</operator> <operator pos:start="581:23" pos:end="581:23">-</operator><name pos:start="581:24" pos:end="581:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="583:17" pos:end="583:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="587:11" pos:end="595:9">else if <condition pos:start="587:19" pos:end="587:49">(<expr pos:start="587:20" pos:end="587:48"><name pos:start="587:20" pos:end="587:28"><name pos:start="587:20" pos:end="587:22">ccw</name><operator pos:start="587:23" pos:end="587:23">.</operator><name pos:start="587:24" pos:end="587:28">count</name></name> <operator pos:start="587:30" pos:end="587:30">&lt;</operator> <sizeof pos:start="587:32" pos:end="587:48">sizeof<argument_list pos:start="587:38" pos:end="587:48">(<argument pos:start="587:39" pos:end="587:47"><expr pos:start="587:39" pos:end="587:47"><name pos:start="587:39" pos:end="587:47">vq_config</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="587:51" pos:end="595:9">{<block_content pos:start="591:13" pos:end="593:18">

            <comment type="block" pos:start="589:13" pos:end="589:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="591:13" pos:end="591:26"><expr pos:start="591:13" pos:end="591:25"><name pos:start="591:13" pos:end="591:15">ret</name> <operator pos:start="591:17" pos:end="591:17">=</operator> <operator pos:start="591:19" pos:end="591:19">-</operator><name pos:start="591:20" pos:end="591:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="593:13" pos:end="593:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="597:9" pos:end="637:9"><if pos:start="597:9" pos:end="601:9">if <condition pos:start="597:12" pos:end="597:21">(<expr pos:start="597:13" pos:end="597:20"><operator pos:start="597:13" pos:end="597:13">!</operator><name pos:start="597:14" pos:end="597:20"><name pos:start="597:14" pos:end="597:16">ccw</name><operator pos:start="597:17" pos:end="597:17">.</operator><name pos:start="597:18" pos:end="597:20">cda</name></name></expr>)</condition> <block pos:start="597:23" pos:end="601:9">{<block_content pos:start="599:13" pos:end="599:26">

            <expr_stmt pos:start="599:13" pos:end="599:26"><expr pos:start="599:13" pos:end="599:25"><name pos:start="599:13" pos:end="599:15">ret</name> <operator pos:start="599:17" pos:end="599:17">=</operator> <operator pos:start="599:19" pos:end="599:19">-</operator><name pos:start="599:20" pos:end="599:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="601:11" pos:end="637:9">else <block pos:start="601:16" pos:end="637:9">{<block_content pos:start="603:13" pos:end="635:20">

            <expr_stmt pos:start="603:13" pos:end="609:58"><expr pos:start="603:13" pos:end="609:57"><name pos:start="603:13" pos:end="603:27"><name pos:start="603:13" pos:end="603:21">vq_config</name><operator pos:start="603:22" pos:end="603:22">.</operator><name pos:start="603:23" pos:end="603:27">index</name></name> <operator pos:start="603:29" pos:end="603:29">=</operator> <call pos:start="603:31" pos:end="609:57"><name pos:start="603:31" pos:end="603:51">address_space_lduw_be</name><argument_list pos:start="603:52" pos:end="609:57">(<argument pos:start="603:53" pos:end="603:73"><expr pos:start="603:53" pos:end="603:73"><operator pos:start="603:53" pos:end="603:53">&amp;</operator><name pos:start="603:54" pos:end="603:73">address_space_memory</name></expr></argument>,

                                                    <argument pos:start="605:53" pos:end="605:59"><expr pos:start="605:53" pos:end="605:59"><name pos:start="605:53" pos:end="605:59"><name pos:start="605:53" pos:end="605:55">ccw</name><operator pos:start="605:56" pos:end="605:56">.</operator><name pos:start="605:57" pos:end="605:59">cda</name></name></expr></argument>,

                                                    <argument pos:start="607:53" pos:end="607:74"><expr pos:start="607:53" pos:end="607:74"><name pos:start="607:53" pos:end="607:74">MEMTXATTRS_UNSPECIFIED</name></expr></argument>,

                                                    <argument pos:start="609:53" pos:end="609:56"><expr pos:start="609:53" pos:end="609:56"><name pos:start="609:53" pos:end="609:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="611:13" pos:end="617:13"><if pos:start="611:13" pos:end="617:13">if <condition pos:start="611:16" pos:end="611:52">(<expr pos:start="611:17" pos:end="611:51"><name pos:start="611:17" pos:end="611:31"><name pos:start="611:17" pos:end="611:25">vq_config</name><operator pos:start="611:26" pos:end="611:26">.</operator><name pos:start="611:27" pos:end="611:31">index</name></name> <operator pos:start="611:33" pos:end="611:34">&gt;=</operator> <name pos:start="611:36" pos:end="611:51">VIRTIO_QUEUE_MAX</name></expr>)</condition> <block pos:start="611:54" pos:end="617:13">{<block_content pos:start="613:17" pos:end="615:22">

                <expr_stmt pos:start="613:17" pos:end="613:30"><expr pos:start="613:17" pos:end="613:29"><name pos:start="613:17" pos:end="613:19">ret</name> <operator pos:start="613:21" pos:end="613:21">=</operator> <operator pos:start="613:23" pos:end="613:23">-</operator><name pos:start="613:24" pos:end="613:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="615:17" pos:end="615:22">break;</break>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="619:13" pos:end="621:70"><expr pos:start="619:13" pos:end="621:69"><name pos:start="619:13" pos:end="619:29"><name pos:start="619:13" pos:end="619:21">vq_config</name><operator pos:start="619:22" pos:end="619:22">.</operator><name pos:start="619:23" pos:end="619:29">num_max</name></name> <operator pos:start="619:31" pos:end="619:31">=</operator> <call pos:start="619:33" pos:end="621:69"><name pos:start="619:33" pos:end="619:52">virtio_queue_get_num</name><argument_list pos:start="619:53" pos:end="621:69">(<argument pos:start="619:54" pos:end="619:57"><expr pos:start="619:54" pos:end="619:57"><name pos:start="619:54" pos:end="619:57">vdev</name></expr></argument>,

                                                     <argument pos:start="621:54" pos:end="621:68"><expr pos:start="621:54" pos:end="621:68"><name pos:start="621:54" pos:end="621:68"><name pos:start="621:54" pos:end="621:62">vq_config</name><operator pos:start="621:63" pos:end="621:63">.</operator><name pos:start="621:64" pos:end="621:68">index</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="623:13" pos:end="631:39"><expr pos:start="623:13" pos:end="631:38"><call pos:start="623:13" pos:end="631:38"><name pos:start="623:13" pos:end="623:32">address_space_stw_be</name><argument_list pos:start="623:33" pos:end="631:38">(<argument pos:start="623:34" pos:end="623:54"><expr pos:start="623:34" pos:end="623:54"><operator pos:start="623:34" pos:end="623:34">&amp;</operator><name pos:start="623:35" pos:end="623:54">address_space_memory</name></expr></argument>,

                                 <argument pos:start="625:34" pos:end="625:66"><expr pos:start="625:34" pos:end="625:66"><name pos:start="625:34" pos:end="625:40"><name pos:start="625:34" pos:end="625:36">ccw</name><operator pos:start="625:37" pos:end="625:37">.</operator><name pos:start="625:38" pos:end="625:40">cda</name></name> <operator pos:start="625:42" pos:end="625:42">+</operator> <sizeof pos:start="625:44" pos:end="625:66">sizeof<argument_list pos:start="625:50" pos:end="625:66">(<argument pos:start="625:51" pos:end="625:65"><expr pos:start="625:51" pos:end="625:65"><name pos:start="625:51" pos:end="625:65"><name pos:start="625:51" pos:end="625:59">vq_config</name><operator pos:start="625:60" pos:end="625:60">.</operator><name pos:start="625:61" pos:end="625:65">index</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                 <argument pos:start="627:34" pos:end="627:50"><expr pos:start="627:34" pos:end="627:50"><name pos:start="627:34" pos:end="627:50"><name pos:start="627:34" pos:end="627:42">vq_config</name><operator pos:start="627:43" pos:end="627:43">.</operator><name pos:start="627:44" pos:end="627:50">num_max</name></name></expr></argument>,

                                 <argument pos:start="629:34" pos:end="629:55"><expr pos:start="629:34" pos:end="629:55"><name pos:start="629:34" pos:end="629:55">MEMTXATTRS_UNSPECIFIED</name></expr></argument>,

                                 <argument pos:start="631:34" pos:end="631:37"><expr pos:start="631:34" pos:end="631:37"><name pos:start="631:34" pos:end="631:37">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="633:13" pos:end="633:72"><expr pos:start="633:13" pos:end="633:71"><name pos:start="633:13" pos:end="633:39"><name pos:start="633:13" pos:end="633:15">sch</name><operator pos:start="633:16" pos:end="633:17">-&gt;</operator><name pos:start="633:18" pos:end="633:28">curr_status</name><operator pos:start="633:29" pos:end="633:29">.</operator><name pos:start="633:30" pos:end="633:33">scsw</name><operator pos:start="633:34" pos:end="633:34">.</operator><name pos:start="633:35" pos:end="633:39">count</name></name> <operator pos:start="633:41" pos:end="633:41">=</operator> <name pos:start="633:43" pos:end="633:51"><name pos:start="633:43" pos:end="633:45">ccw</name><operator pos:start="633:46" pos:end="633:46">.</operator><name pos:start="633:47" pos:end="633:51">count</name></name> <operator pos:start="633:53" pos:end="633:53">-</operator> <sizeof pos:start="633:55" pos:end="633:71">sizeof<argument_list pos:start="633:61" pos:end="633:71">(<argument pos:start="633:62" pos:end="633:70"><expr pos:start="633:62" pos:end="633:70"><name pos:start="633:62" pos:end="633:70">vq_config</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="635:13" pos:end="635:20"><expr pos:start="635:13" pos:end="635:19"><name pos:start="635:13" pos:end="635:15">ret</name> <operator pos:start="635:17" pos:end="635:17">=</operator> <literal type="number" pos:start="635:19" pos:end="635:19">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="639:9" pos:end="639:14">break;</break>

    <case pos:start="641:5" pos:end="641:33">case <expr pos:start="641:10" pos:end="641:32"><name pos:start="641:10" pos:end="641:32">CCW_CMD_SET_IND_ADAPTER</name></expr>:</case>

        <if_stmt pos:start="643:9" pos:end="661:9"><if pos:start="643:9" pos:end="653:9">if <condition pos:start="643:12" pos:end="643:22">(<expr pos:start="643:13" pos:end="643:21"><name pos:start="643:13" pos:end="643:21">check_len</name></expr>)</condition> <block pos:start="643:24" pos:end="653:9">{<block_content pos:start="645:13" pos:end="651:13">

            <if_stmt pos:start="645:13" pos:end="651:13"><if pos:start="645:13" pos:end="651:13">if <condition pos:start="645:16" pos:end="645:46">(<expr pos:start="645:17" pos:end="645:45"><name pos:start="645:17" pos:end="645:25"><name pos:start="645:17" pos:end="645:19">ccw</name><operator pos:start="645:20" pos:end="645:20">.</operator><name pos:start="645:21" pos:end="645:25">count</name></name> <operator pos:start="645:27" pos:end="645:28">!=</operator> <sizeof pos:start="645:30" pos:end="645:45">sizeof<argument_list pos:start="645:36" pos:end="645:45">(<argument pos:start="645:37" pos:end="645:44"><expr pos:start="645:37" pos:end="645:44"><operator pos:start="645:37" pos:end="645:37">*</operator><name pos:start="645:38" pos:end="645:44">thinint</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="645:48" pos:end="651:13">{<block_content pos:start="647:17" pos:end="649:22">

                <expr_stmt pos:start="647:17" pos:end="647:30"><expr pos:start="647:17" pos:end="647:29"><name pos:start="647:17" pos:end="647:19">ret</name> <operator pos:start="647:21" pos:end="647:21">=</operator> <operator pos:start="647:23" pos:end="647:23">-</operator><name pos:start="647:24" pos:end="647:29">EINVAL</name></expr>;</expr_stmt>

                <break pos:start="649:17" pos:end="649:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="653:11" pos:end="661:9">else if <condition pos:start="653:19" pos:end="653:48">(<expr pos:start="653:20" pos:end="653:47"><name pos:start="653:20" pos:end="653:28"><name pos:start="653:20" pos:end="653:22">ccw</name><operator pos:start="653:23" pos:end="653:23">.</operator><name pos:start="653:24" pos:end="653:28">count</name></name> <operator pos:start="653:30" pos:end="653:30">&lt;</operator> <sizeof pos:start="653:32" pos:end="653:47">sizeof<argument_list pos:start="653:38" pos:end="653:47">(<argument pos:start="653:39" pos:end="653:46"><expr pos:start="653:39" pos:end="653:46"><operator pos:start="653:39" pos:end="653:39">*</operator><name pos:start="653:40" pos:end="653:46">thinint</name></expr></argument>)</argument_list></sizeof></expr>)</condition> <block pos:start="653:50" pos:end="661:9">{<block_content pos:start="657:13" pos:end="659:18">

            <comment type="block" pos:start="655:13" pos:end="655:40">/* Can't execute command. */</comment>

            <expr_stmt pos:start="657:13" pos:end="657:26"><expr pos:start="657:13" pos:end="657:25"><name pos:start="657:13" pos:end="657:15">ret</name> <operator pos:start="657:17" pos:end="657:17">=</operator> <operator pos:start="657:19" pos:end="657:19">-</operator><name pos:start="657:20" pos:end="657:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="659:13" pos:end="659:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:31"><expr pos:start="663:9" pos:end="663:30"><name pos:start="663:9" pos:end="663:11">len</name> <operator pos:start="663:13" pos:end="663:13">=</operator> <sizeof pos:start="663:15" pos:end="663:30">sizeof<argument_list pos:start="663:21" pos:end="663:30">(<argument pos:start="663:22" pos:end="663:29"><expr pos:start="663:22" pos:end="663:29"><operator pos:start="663:22" pos:end="663:22">*</operator><name pos:start="663:23" pos:end="663:29">thinint</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:21"><expr pos:start="665:9" pos:end="665:20"><name pos:start="665:9" pos:end="665:14">hw_len</name> <operator pos:start="665:16" pos:end="665:16">=</operator> <name pos:start="665:18" pos:end="665:20">len</name></expr>;</expr_stmt>

        <if_stmt pos:start="667:9" pos:end="729:9"><if pos:start="667:9" pos:end="671:9">if <condition pos:start="667:12" pos:end="667:21">(<expr pos:start="667:13" pos:end="667:20"><operator pos:start="667:13" pos:end="667:13">!</operator><name pos:start="667:14" pos:end="667:20"><name pos:start="667:14" pos:end="667:16">ccw</name><operator pos:start="667:17" pos:end="667:17">.</operator><name pos:start="667:18" pos:end="667:20">cda</name></name></expr>)</condition> <block pos:start="667:23" pos:end="671:9">{<block_content pos:start="669:13" pos:end="669:26">

            <expr_stmt pos:start="669:13" pos:end="669:26"><expr pos:start="669:13" pos:end="669:25"><name pos:start="669:13" pos:end="669:15">ret</name> <operator pos:start="669:17" pos:end="669:17">=</operator> <operator pos:start="669:19" pos:end="669:19">-</operator><name pos:start="669:20" pos:end="669:25">EFAULT</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="671:11" pos:end="677:9">else if <condition pos:start="671:19" pos:end="671:59">(<expr pos:start="671:20" pos:end="671:58"><name pos:start="671:20" pos:end="671:34"><name pos:start="671:20" pos:end="671:22">dev</name><operator pos:start="671:23" pos:end="671:24">-&gt;</operator><name pos:start="671:25" pos:end="671:34">indicators</name></name> <operator pos:start="671:36" pos:end="671:37">&amp;&amp;</operator> <operator pos:start="671:39" pos:end="671:39">!</operator><name pos:start="671:40" pos:end="671:58"><name pos:start="671:40" pos:end="671:42">sch</name><operator pos:start="671:43" pos:end="671:44">-&gt;</operator><name pos:start="671:45" pos:end="671:58">thinint_active</name></name></expr>)</condition> <block pos:start="671:61" pos:end="677:9">{<block_content pos:start="675:13" pos:end="675:26">

            <comment type="block" pos:start="673:13" pos:end="673:43">/* Trigger a command reject. */</comment>

            <expr_stmt pos:start="675:13" pos:end="675:26"><expr pos:start="675:13" pos:end="675:25"><name pos:start="675:13" pos:end="675:15">ret</name> <operator pos:start="675:17" pos:end="675:17">=</operator> <operator pos:start="675:19" pos:end="675:19">-</operator><name pos:start="675:20" pos:end="675:25">ENOSYS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="677:11" pos:end="729:9">else <block pos:start="677:16" pos:end="729:9">{<block_content pos:start="679:13" pos:end="727:13">

            <expr_stmt pos:start="679:13" pos:end="679:67"><expr pos:start="679:13" pos:end="679:66"><name pos:start="679:13" pos:end="679:19">thinint</name> <operator pos:start="679:21" pos:end="679:21">=</operator> <call pos:start="679:23" pos:end="679:66"><name pos:start="679:23" pos:end="679:45">cpu_physical_memory_map</name><argument_list pos:start="679:46" pos:end="679:66">(<argument pos:start="679:47" pos:end="679:53"><expr pos:start="679:47" pos:end="679:53"><name pos:start="679:47" pos:end="679:53"><name pos:start="679:47" pos:end="679:49">ccw</name><operator pos:start="679:50" pos:end="679:50">.</operator><name pos:start="679:51" pos:end="679:53">cda</name></name></expr></argument>, <argument pos:start="679:56" pos:end="679:62"><expr pos:start="679:56" pos:end="679:62"><operator pos:start="679:56" pos:end="679:56">&amp;</operator><name pos:start="679:57" pos:end="679:62">hw_len</name></expr></argument>, <argument pos:start="679:65" pos:end="679:65"><expr pos:start="679:65" pos:end="679:65"><literal type="number" pos:start="679:65" pos:end="679:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="681:13" pos:end="727:13"><if pos:start="681:13" pos:end="685:13">if <condition pos:start="681:16" pos:end="681:25">(<expr pos:start="681:17" pos:end="681:24"><operator pos:start="681:17" pos:end="681:17">!</operator><name pos:start="681:18" pos:end="681:24">thinint</name></expr>)</condition> <block pos:start="681:27" pos:end="685:13">{<block_content pos:start="683:17" pos:end="683:30">

                <expr_stmt pos:start="683:17" pos:end="683:30"><expr pos:start="683:17" pos:end="683:29"><name pos:start="683:17" pos:end="683:19">ret</name> <operator pos:start="683:21" pos:end="683:21">=</operator> <operator pos:start="683:23" pos:end="683:23">-</operator><name pos:start="683:24" pos:end="683:29">EFAULT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="685:15" pos:end="727:13">else <block pos:start="685:20" pos:end="727:13">{<block_content pos:start="687:17" pos:end="725:24">

                <decl_stmt pos:start="687:17" pos:end="687:63"><decl pos:start="687:17" pos:end="687:62"><type pos:start="687:17" pos:end="687:24"><name pos:start="687:17" pos:end="687:24">uint64_t</name></type> <name pos:start="687:26" pos:end="687:32">ind_bit</name> <init pos:start="687:34" pos:end="687:62">= <expr pos:start="687:36" pos:end="687:62"><call pos:start="687:36" pos:end="687:62"><name pos:start="687:36" pos:end="687:43">ldq_be_p</name><argument_list pos:start="687:44" pos:end="687:62">(<argument pos:start="687:45" pos:end="687:61"><expr pos:start="687:45" pos:end="687:61"><operator pos:start="687:45" pos:end="687:45">&amp;</operator><name pos:start="687:46" pos:end="687:61"><name pos:start="687:46" pos:end="687:52">thinint</name><operator pos:start="687:53" pos:end="687:54">-&gt;</operator><name pos:start="687:55" pos:end="687:61">ind_bit</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="691:17" pos:end="691:29"><expr pos:start="691:17" pos:end="691:28"><name pos:start="691:17" pos:end="691:19">len</name> <operator pos:start="691:21" pos:end="691:21">=</operator> <name pos:start="691:23" pos:end="691:28">hw_len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="693:17" pos:end="697:51"><expr pos:start="693:17" pos:end="697:50"><name pos:start="693:17" pos:end="693:38"><name pos:start="693:17" pos:end="693:19">dev</name><operator pos:start="693:20" pos:end="693:21">-&gt;</operator><name pos:start="693:22" pos:end="693:38">summary_indicator</name></name> <operator pos:start="693:40" pos:end="693:40">=</operator>

                    <call pos:start="695:21" pos:end="697:50"><name pos:start="695:21" pos:end="695:33">get_indicator</name><argument_list pos:start="695:34" pos:end="697:50">(<argument pos:start="695:35" pos:end="695:71"><expr pos:start="695:35" pos:end="695:71"><call pos:start="695:35" pos:end="695:71"><name pos:start="695:35" pos:end="695:42">ldq_be_p</name><argument_list pos:start="695:43" pos:end="695:71">(<argument pos:start="695:44" pos:end="695:70"><expr pos:start="695:44" pos:end="695:70"><operator pos:start="695:44" pos:end="695:44">&amp;</operator><name pos:start="695:45" pos:end="695:70"><name pos:start="695:45" pos:end="695:51">thinint</name><operator pos:start="695:52" pos:end="695:53">-&gt;</operator><name pos:start="695:54" pos:end="695:70">summary_indicator</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="697:35" pos:end="697:49"><expr pos:start="697:35" pos:end="697:49"><sizeof pos:start="697:35" pos:end="697:49">sizeof<argument_list pos:start="697:41" pos:end="697:49">(<argument pos:start="697:42" pos:end="697:48"><expr pos:start="697:42" pos:end="697:48"><name pos:start="697:42" pos:end="697:48">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="699:17" pos:end="703:51"><expr pos:start="699:17" pos:end="703:50"><name pos:start="699:17" pos:end="699:31"><name pos:start="699:17" pos:end="699:19">dev</name><operator pos:start="699:20" pos:end="699:21">-&gt;</operator><name pos:start="699:22" pos:end="699:31">indicators</name></name> <operator pos:start="699:33" pos:end="699:33">=</operator>

                    <call pos:start="701:21" pos:end="703:50"><name pos:start="701:21" pos:end="701:33">get_indicator</name><argument_list pos:start="701:34" pos:end="703:50">(<argument pos:start="701:35" pos:end="701:70"><expr pos:start="701:35" pos:end="701:70"><call pos:start="701:35" pos:end="701:70"><name pos:start="701:35" pos:end="701:42">ldq_be_p</name><argument_list pos:start="701:43" pos:end="701:70">(<argument pos:start="701:44" pos:end="701:69"><expr pos:start="701:44" pos:end="701:69"><operator pos:start="701:44" pos:end="701:44">&amp;</operator><name pos:start="701:45" pos:end="701:69"><name pos:start="701:45" pos:end="701:51">thinint</name><operator pos:start="701:52" pos:end="701:53">-&gt;</operator><name pos:start="701:54" pos:end="701:69">device_indicator</name></name></expr></argument>)</argument_list></call></expr></argument>,

                                  <argument pos:start="703:35" pos:end="703:49"><expr pos:start="703:35" pos:end="703:49"><name pos:start="703:35" pos:end="703:41">ind_bit</name> <operator pos:start="703:43" pos:end="703:43">/</operator> <literal type="number" pos:start="703:45" pos:end="703:47">8</literal> <operator pos:start="703:47" pos:end="703:47">+</operator> <literal type="number" pos:start="703:49" pos:end="703:49">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="705:17" pos:end="705:48"><expr pos:start="705:17" pos:end="705:47"><name pos:start="705:17" pos:end="705:32"><name pos:start="705:17" pos:end="705:19">dev</name><operator pos:start="705:20" pos:end="705:21">-&gt;</operator><name pos:start="705:22" pos:end="705:32">thinint_isc</name></name> <operator pos:start="705:34" pos:end="705:34">=</operator> <name pos:start="705:36" pos:end="705:47"><name pos:start="705:36" pos:end="705:42">thinint</name><operator pos:start="705:43" pos:end="705:44">-&gt;</operator><name pos:start="705:45" pos:end="705:47">isc</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="707:17" pos:end="707:57"><expr pos:start="707:17" pos:end="707:56"><name pos:start="707:17" pos:end="707:46"><name pos:start="707:17" pos:end="707:19">dev</name><operator pos:start="707:20" pos:end="707:21">-&gt;</operator><name pos:start="707:22" pos:end="707:27">routes</name><operator pos:start="707:28" pos:end="707:28">.</operator><name pos:start="707:29" pos:end="707:35">adapter</name><operator pos:start="707:36" pos:end="707:36">.</operator><name pos:start="707:37" pos:end="707:46">ind_offset</name></name> <operator pos:start="707:48" pos:end="707:48">=</operator> <name pos:start="707:50" pos:end="707:56">ind_bit</name></expr>;</expr_stmt>

                <expr_stmt pos:start="709:17" pos:end="709:55"><expr pos:start="709:17" pos:end="709:54"><name pos:start="709:17" pos:end="709:50"><name pos:start="709:17" pos:end="709:19">dev</name><operator pos:start="709:20" pos:end="709:21">-&gt;</operator><name pos:start="709:22" pos:end="709:27">routes</name><operator pos:start="709:28" pos:end="709:28">.</operator><name pos:start="709:29" pos:end="709:35">adapter</name><operator pos:start="709:36" pos:end="709:36">.</operator><name pos:start="709:37" pos:end="709:50">summary_offset</name></name> <operator pos:start="709:52" pos:end="709:52">=</operator> <literal type="number" pos:start="709:54" pos:end="709:54">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="711:17" pos:end="711:70"><expr pos:start="711:17" pos:end="711:69"><call pos:start="711:17" pos:end="711:69"><name pos:start="711:17" pos:end="711:41">cpu_physical_memory_unmap</name><argument_list pos:start="711:42" pos:end="711:69">(<argument pos:start="711:43" pos:end="711:49"><expr pos:start="711:43" pos:end="711:49"><name pos:start="711:43" pos:end="711:49">thinint</name></expr></argument>, <argument pos:start="711:52" pos:end="711:57"><expr pos:start="711:52" pos:end="711:57"><name pos:start="711:52" pos:end="711:57">hw_len</name></expr></argument>, <argument pos:start="711:60" pos:end="711:60"><expr pos:start="711:60" pos:end="711:60"><literal type="number" pos:start="711:60" pos:end="711:60">0</literal></expr></argument>, <argument pos:start="711:63" pos:end="711:68"><expr pos:start="711:63" pos:end="711:68"><name pos:start="711:63" pos:end="711:68">hw_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="713:17" pos:end="717:67"><expr pos:start="713:17" pos:end="717:66"><name pos:start="713:17" pos:end="713:46"><name pos:start="713:17" pos:end="713:19">dev</name><operator pos:start="713:20" pos:end="713:21">-&gt;</operator><name pos:start="713:22" pos:end="713:27">routes</name><operator pos:start="713:28" pos:end="713:28">.</operator><name pos:start="713:29" pos:end="713:35">adapter</name><operator pos:start="713:36" pos:end="713:36">.</operator><name pos:start="713:37" pos:end="713:46">adapter_id</name></name> <operator pos:start="713:48" pos:end="713:48">=</operator> <call pos:start="713:50" pos:end="717:66"><name pos:start="713:50" pos:end="713:67">css_get_adapter_id</name><argument_list pos:start="713:68" pos:end="717:66">(

                                                 <argument pos:start="715:50" pos:end="715:70"><expr pos:start="715:50" pos:end="715:70"><name pos:start="715:50" pos:end="715:70">CSS_IO_ADAPTER_VIRTIO</name></expr></argument>,

                                                 <argument pos:start="717:50" pos:end="717:65"><expr pos:start="717:50" pos:end="717:65"><name pos:start="717:50" pos:end="717:65"><name pos:start="717:50" pos:end="717:52">dev</name><operator pos:start="717:53" pos:end="717:54">-&gt;</operator><name pos:start="717:55" pos:end="717:65">thinint_isc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="719:17" pos:end="721:73"><expr pos:start="719:17" pos:end="721:72"><name pos:start="719:17" pos:end="719:35"><name pos:start="719:17" pos:end="719:19">sch</name><operator pos:start="719:20" pos:end="719:21">-&gt;</operator><name pos:start="719:22" pos:end="719:35">thinint_active</name></name> <operator pos:start="719:37" pos:end="719:37">=</operator> <operator pos:start="719:39" pos:end="719:39">(</operator><operator pos:start="719:40" pos:end="719:40">(</operator><name pos:start="719:41" pos:end="719:55"><name pos:start="719:41" pos:end="719:43">dev</name><operator pos:start="719:44" pos:end="719:45">-&gt;</operator><name pos:start="719:46" pos:end="719:55">indicators</name></name> <operator pos:start="719:57" pos:end="719:58">!=</operator> <name pos:start="719:60" pos:end="719:63">NULL</name><operator pos:start="719:64" pos:end="719:64">)</operator> <operator pos:start="719:66" pos:end="719:67">&amp;&amp;</operator>

                                       <operator pos:start="721:40" pos:end="721:40">(</operator><name pos:start="721:41" pos:end="721:62"><name pos:start="721:41" pos:end="721:43">dev</name><operator pos:start="721:44" pos:end="721:45">-&gt;</operator><name pos:start="721:46" pos:end="721:62">summary_indicator</name></name> <operator pos:start="721:64" pos:end="721:65">!=</operator> <name pos:start="721:67" pos:end="721:70">NULL</name><operator pos:start="721:71" pos:end="721:71">)</operator><operator pos:start="721:72" pos:end="721:72">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="723:17" pos:end="723:62"><expr pos:start="723:17" pos:end="723:61"><name pos:start="723:17" pos:end="723:43"><name pos:start="723:17" pos:end="723:19">sch</name><operator pos:start="723:20" pos:end="723:21">-&gt;</operator><name pos:start="723:22" pos:end="723:32">curr_status</name><operator pos:start="723:33" pos:end="723:33">.</operator><name pos:start="723:34" pos:end="723:37">scsw</name><operator pos:start="723:38" pos:end="723:38">.</operator><name pos:start="723:39" pos:end="723:43">count</name></name> <operator pos:start="723:45" pos:end="723:45">=</operator> <name pos:start="723:47" pos:end="723:55"><name pos:start="723:47" pos:end="723:49">ccw</name><operator pos:start="723:50" pos:end="723:50">.</operator><name pos:start="723:51" pos:end="723:55">count</name></name> <operator pos:start="723:57" pos:end="723:57">-</operator> <name pos:start="723:59" pos:end="723:61">len</name></expr>;</expr_stmt>

                <expr_stmt pos:start="725:17" pos:end="725:24"><expr pos:start="725:17" pos:end="725:23"><name pos:start="725:17" pos:end="725:19">ret</name> <operator pos:start="725:21" pos:end="725:21">=</operator> <literal type="number" pos:start="725:23" pos:end="725:23">0</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="731:9" pos:end="731:14">break;</break>

    <case pos:start="733:5" pos:end="733:32">case <expr pos:start="733:10" pos:end="733:31"><name pos:start="733:10" pos:end="733:31">CCW_CMD_SET_VIRTIO_REV</name></expr>:</case>

        <expr_stmt pos:start="735:9" pos:end="735:30"><expr pos:start="735:9" pos:end="735:29"><name pos:start="735:9" pos:end="735:11">len</name> <operator pos:start="735:13" pos:end="735:13">=</operator> <sizeof pos:start="735:15" pos:end="735:29">sizeof<argument_list pos:start="735:21" pos:end="735:29">(<argument pos:start="735:22" pos:end="735:28"><expr pos:start="735:22" pos:end="735:28"><name pos:start="735:22" pos:end="735:28">revinfo</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <if_stmt pos:start="737:9" pos:end="743:9"><if pos:start="737:9" pos:end="743:9">if <condition pos:start="737:12" pos:end="737:28">(<expr pos:start="737:13" pos:end="737:27"><name pos:start="737:13" pos:end="737:21"><name pos:start="737:13" pos:end="737:15">ccw</name><operator pos:start="737:16" pos:end="737:16">.</operator><name pos:start="737:17" pos:end="737:21">count</name></name> <operator pos:start="737:23" pos:end="737:23">&lt;</operator> <name pos:start="737:25" pos:end="737:27">len</name></expr>)</condition> <block pos:start="737:30" pos:end="743:9">{<block_content pos:start="739:13" pos:end="741:18">

            <expr_stmt pos:start="739:13" pos:end="739:26"><expr pos:start="739:13" pos:end="739:25"><name pos:start="739:13" pos:end="739:15">ret</name> <operator pos:start="739:17" pos:end="739:17">=</operator> <operator pos:start="739:19" pos:end="739:19">-</operator><name pos:start="739:20" pos:end="739:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="741:13" pos:end="741:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="745:9" pos:end="751:9"><if pos:start="745:9" pos:end="751:9">if <condition pos:start="745:12" pos:end="745:21">(<expr pos:start="745:13" pos:end="745:20"><operator pos:start="745:13" pos:end="745:13">!</operator><name pos:start="745:14" pos:end="745:20"><name pos:start="745:14" pos:end="745:16">ccw</name><operator pos:start="745:17" pos:end="745:17">.</operator><name pos:start="745:18" pos:end="745:20">cda</name></name></expr>)</condition> <block pos:start="745:23" pos:end="751:9">{<block_content pos:start="747:13" pos:end="749:18">

            <expr_stmt pos:start="747:13" pos:end="747:26"><expr pos:start="747:13" pos:end="747:25"><name pos:start="747:13" pos:end="747:15">ret</name> <operator pos:start="747:17" pos:end="747:17">=</operator> <operator pos:start="747:19" pos:end="747:19">-</operator><name pos:start="747:20" pos:end="747:25">EFAULT</name></expr>;</expr_stmt>

            <break pos:start="749:13" pos:end="749:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="753:9" pos:end="757:64"><expr pos:start="753:9" pos:end="757:63"><name pos:start="753:9" pos:end="753:24"><name pos:start="753:9" pos:end="753:15">revinfo</name><operator pos:start="753:16" pos:end="753:16">.</operator><name pos:start="753:17" pos:end="753:24">revision</name></name> <operator pos:start="753:26" pos:end="753:26">=</operator>

            <call pos:start="755:13" pos:end="757:63"><name pos:start="755:13" pos:end="755:33">address_space_lduw_be</name><argument_list pos:start="755:34" pos:end="757:63">(<argument pos:start="755:35" pos:end="755:55"><expr pos:start="755:35" pos:end="755:55"><operator pos:start="755:35" pos:end="755:35">&amp;</operator><name pos:start="755:36" pos:end="755:55">address_space_memory</name></expr></argument>, <argument pos:start="755:58" pos:end="755:64"><expr pos:start="755:58" pos:end="755:64"><name pos:start="755:58" pos:end="755:64"><name pos:start="755:58" pos:end="755:60">ccw</name><operator pos:start="755:61" pos:end="755:61">.</operator><name pos:start="755:62" pos:end="755:64">cda</name></name></expr></argument>,

                                  <argument pos:start="757:35" pos:end="757:56"><expr pos:start="757:35" pos:end="757:56"><name pos:start="757:35" pos:end="757:56">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="757:59" pos:end="757:62"><expr pos:start="757:59" pos:end="757:62"><name pos:start="757:59" pos:end="757:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="759:9" pos:end="765:64"><expr pos:start="759:9" pos:end="765:63"><name pos:start="759:9" pos:end="759:22"><name pos:start="759:9" pos:end="759:15">revinfo</name><operator pos:start="759:16" pos:end="759:16">.</operator><name pos:start="759:17" pos:end="759:22">length</name></name> <operator pos:start="759:24" pos:end="759:24">=</operator>

            <call pos:start="761:13" pos:end="765:63"><name pos:start="761:13" pos:end="761:33">address_space_lduw_be</name><argument_list pos:start="761:34" pos:end="765:63">(<argument pos:start="761:35" pos:end="761:55"><expr pos:start="761:35" pos:end="761:55"><operator pos:start="761:35" pos:end="761:35">&amp;</operator><name pos:start="761:36" pos:end="761:55">address_space_memory</name></expr></argument>,

                                  <argument pos:start="763:35" pos:end="763:68"><expr pos:start="763:35" pos:end="763:68"><name pos:start="763:35" pos:end="763:41"><name pos:start="763:35" pos:end="763:37">ccw</name><operator pos:start="763:38" pos:end="763:38">.</operator><name pos:start="763:39" pos:end="763:41">cda</name></name> <operator pos:start="763:43" pos:end="763:43">+</operator> <sizeof pos:start="763:45" pos:end="763:68">sizeof<argument_list pos:start="763:51" pos:end="763:68">(<argument pos:start="763:52" pos:end="763:67"><expr pos:start="763:52" pos:end="763:67"><name pos:start="763:52" pos:end="763:67"><name pos:start="763:52" pos:end="763:58">revinfo</name><operator pos:start="763:59" pos:end="763:59">.</operator><name pos:start="763:60" pos:end="763:67">revision</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

                                  <argument pos:start="765:35" pos:end="765:56"><expr pos:start="765:35" pos:end="765:56"><name pos:start="765:35" pos:end="765:56">MEMTXATTRS_UNSPECIFIED</name></expr></argument>, <argument pos:start="765:59" pos:end="765:62"><expr pos:start="765:59" pos:end="765:62"><name pos:start="765:59" pos:end="765:62">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="767:9" pos:end="775:9"><if pos:start="767:9" pos:end="775:9">if <condition pos:start="767:12" pos:end="769:60">(<expr pos:start="767:13" pos:end="769:59"><name pos:start="767:13" pos:end="767:21"><name pos:start="767:13" pos:end="767:15">ccw</name><operator pos:start="767:16" pos:end="767:16">.</operator><name pos:start="767:17" pos:end="767:21">count</name></name> <operator pos:start="767:23" pos:end="767:23">&lt;</operator> <name pos:start="767:25" pos:end="767:27">len</name> <operator pos:start="767:29" pos:end="767:29">+</operator> <name pos:start="767:31" pos:end="767:44"><name pos:start="767:31" pos:end="767:37">revinfo</name><operator pos:start="767:38" pos:end="767:38">.</operator><name pos:start="767:39" pos:end="767:44">length</name></name> <operator pos:start="767:46" pos:end="767:47">||</operator>

            <operator pos:start="769:13" pos:end="769:13">(</operator><name pos:start="769:14" pos:end="769:22">check_len</name> <operator pos:start="769:24" pos:end="769:25">&amp;&amp;</operator> <name pos:start="769:27" pos:end="769:35"><name pos:start="769:27" pos:end="769:29">ccw</name><operator pos:start="769:30" pos:end="769:30">.</operator><name pos:start="769:31" pos:end="769:35">count</name></name> <operator pos:start="769:37" pos:end="769:37">&gt;</operator> <name pos:start="769:39" pos:end="769:41">len</name> <operator pos:start="769:43" pos:end="769:43">+</operator> <name pos:start="769:45" pos:end="769:58"><name pos:start="769:45" pos:end="769:51">revinfo</name><operator pos:start="769:52" pos:end="769:52">.</operator><name pos:start="769:53" pos:end="769:58">length</name></name><operator pos:start="769:59" pos:end="769:59">)</operator></expr>)</condition> <block pos:start="769:62" pos:end="775:9">{<block_content pos:start="771:13" pos:end="773:18">

            <expr_stmt pos:start="771:13" pos:end="771:26"><expr pos:start="771:13" pos:end="771:25"><name pos:start="771:13" pos:end="771:15">ret</name> <operator pos:start="771:17" pos:end="771:17">=</operator> <operator pos:start="771:19" pos:end="771:19">-</operator><name pos:start="771:20" pos:end="771:25">EINVAL</name></expr>;</expr_stmt>

            <break pos:start="773:13" pos:end="773:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="777:9" pos:end="783:11">/*

         * Once we start to support revisions with additional data, we'll

         * need to fetch it here. Nothing to do for now, though.

         */</comment>

        <if_stmt pos:start="785:9" pos:end="795:9"><if pos:start="785:9" pos:end="795:9">if <condition pos:start="785:12" pos:end="789:57">(<expr pos:start="785:13" pos:end="789:56"><name pos:start="785:13" pos:end="785:25"><name pos:start="785:13" pos:end="785:15">dev</name><operator pos:start="785:16" pos:end="785:17">-&gt;</operator><name pos:start="785:18" pos:end="785:25">revision</name></name> <operator pos:start="785:27" pos:end="785:28">&gt;=</operator> <literal type="number" pos:start="785:30" pos:end="785:30">0</literal> <operator pos:start="785:32" pos:end="785:33">||</operator>

            <name pos:start="787:13" pos:end="787:28"><name pos:start="787:13" pos:end="787:19">revinfo</name><operator pos:start="787:20" pos:end="787:20">.</operator><name pos:start="787:21" pos:end="787:28">revision</name></name> <operator pos:start="787:30" pos:end="787:30">&gt;</operator> <call pos:start="787:32" pos:end="787:54"><name pos:start="787:32" pos:end="787:49">virtio_ccw_rev_max</name><argument_list pos:start="787:50" pos:end="787:54">(<argument pos:start="787:51" pos:end="787:53"><expr pos:start="787:51" pos:end="787:53"><name pos:start="787:51" pos:end="787:53">dev</name></expr></argument>)</argument_list></call> <operator pos:start="787:56" pos:end="787:57">||</operator>

            <operator pos:start="789:13" pos:end="789:13">(</operator><name pos:start="789:14" pos:end="789:34"><name pos:start="789:14" pos:end="789:16">dev</name><operator pos:start="789:17" pos:end="789:18">-&gt;</operator><name pos:start="789:19" pos:end="789:34">force_revision_1</name></name> <operator pos:start="789:36" pos:end="789:37">&amp;&amp;</operator> <operator pos:start="789:39" pos:end="789:39">!</operator><name pos:start="789:40" pos:end="789:55"><name pos:start="789:40" pos:end="789:46">revinfo</name><operator pos:start="789:47" pos:end="789:47">.</operator><name pos:start="789:48" pos:end="789:55">revision</name></name><operator pos:start="789:56" pos:end="789:56">)</operator></expr>)</condition> <block pos:start="789:59" pos:end="795:9">{<block_content pos:start="791:13" pos:end="793:18">

            <expr_stmt pos:start="791:13" pos:end="791:26"><expr pos:start="791:13" pos:end="791:25"><name pos:start="791:13" pos:end="791:15">ret</name> <operator pos:start="791:17" pos:end="791:17">=</operator> <operator pos:start="791:19" pos:end="791:19">-</operator><name pos:start="791:20" pos:end="791:25">ENOSYS</name></expr>;</expr_stmt>

            <break pos:start="793:13" pos:end="793:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="797:9" pos:end="797:16"><expr pos:start="797:9" pos:end="797:15"><name pos:start="797:9" pos:end="797:11">ret</name> <operator pos:start="797:13" pos:end="797:13">=</operator> <literal type="number" pos:start="797:15" pos:end="797:15">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="799:9" pos:end="799:41"><expr pos:start="799:9" pos:end="799:40"><name pos:start="799:9" pos:end="799:21"><name pos:start="799:9" pos:end="799:11">dev</name><operator pos:start="799:12" pos:end="799:13">-&gt;</operator><name pos:start="799:14" pos:end="799:21">revision</name></name> <operator pos:start="799:23" pos:end="799:23">=</operator> <name pos:start="799:25" pos:end="799:40"><name pos:start="799:25" pos:end="799:31">revinfo</name><operator pos:start="799:32" pos:end="799:32">.</operator><name pos:start="799:33" pos:end="799:40">revision</name></name></expr>;</expr_stmt>

        <break pos:start="801:9" pos:end="801:14">break;</break>

    <default pos:start="803:5" pos:end="803:12">default:</default>

        <expr_stmt pos:start="805:9" pos:end="805:22"><expr pos:start="805:9" pos:end="805:21"><name pos:start="805:9" pos:end="805:11">ret</name> <operator pos:start="805:13" pos:end="805:13">=</operator> <operator pos:start="805:15" pos:end="805:15">-</operator><name pos:start="805:16" pos:end="805:21">ENOSYS</name></expr>;</expr_stmt>

        <break pos:start="807:9" pos:end="807:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="811:5" pos:end="811:15">return <expr pos:start="811:12" pos:end="811:14"><name pos:start="811:12" pos:end="811:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
