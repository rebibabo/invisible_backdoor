<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1159.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">raw_eject</name><parameter_list pos:start="1:21" pos:end="1:58">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:41"><name pos:start="1:22" pos:end="1:37">BlockDriverState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:41">bs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:57"><decl pos:start="1:44" pos:end="1:57"><type pos:start="1:44" pos:end="1:57"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:57">eject_flag</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVRawState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>



    <switch pos:start="9:5" pos:end="65:5">switch<condition pos:start="9:11" pos:end="9:19">(<expr pos:start="9:12" pos:end="9:18"><name pos:start="9:12" pos:end="9:18"><name pos:start="9:12" pos:end="9:12">s</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:18">type</name></name></expr>)</condition> <block pos:start="9:21" pos:end="65:5">{<block_content pos:start="11:5" pos:end="63:24">

    <case pos:start="11:5" pos:end="11:18">case <expr pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:17">FTYPE_CD</name></expr>:</case>

        <if_stmt pos:start="13:9" pos:end="25:9"><if pos:start="13:9" pos:end="19:9">if <condition pos:start="13:12" pos:end="13:23">(<expr pos:start="13:13" pos:end="13:22"><name pos:start="13:13" pos:end="13:22">eject_flag</name></expr>)</condition> <block pos:start="13:25" pos:end="19:9">{<block_content pos:start="15:13" pos:end="17:37">

            <if_stmt pos:start="15:13" pos:end="17:37"><if pos:start="15:13" pos:end="17:37">if <condition pos:start="15:16" pos:end="15:52">(<expr pos:start="15:17" pos:end="15:51"><call pos:start="15:17" pos:end="15:47"><name pos:start="15:17" pos:end="15:21">ioctl</name> <argument_list pos:start="15:23" pos:end="15:47">(<argument pos:start="15:24" pos:end="15:28"><expr pos:start="15:24" pos:end="15:28"><name pos:start="15:24" pos:end="15:28"><name pos:start="15:24" pos:end="15:24">s</name><operator pos:start="15:25" pos:end="15:26">-&gt;</operator><name pos:start="15:27" pos:end="15:28">fd</name></name></expr></argument>, <argument pos:start="15:31" pos:end="15:40"><expr pos:start="15:31" pos:end="15:40"><name pos:start="15:31" pos:end="15:40">CDROMEJECT</name></expr></argument>, <argument pos:start="15:43" pos:end="15:46"><expr pos:start="15:43" pos:end="15:46"><name pos:start="15:43" pos:end="15:46">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="15:49" pos:end="15:49">&lt;</operator> <literal type="number" pos:start="15:51" pos:end="15:51">0</literal></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:37"><block_content pos:start="17:17" pos:end="17:37">

                <expr_stmt pos:start="17:17" pos:end="17:37"><expr pos:start="17:17" pos:end="17:36"><call pos:start="17:17" pos:end="17:36"><name pos:start="17:17" pos:end="17:22">perror</name><argument_list pos:start="17:23" pos:end="17:36">(<argument pos:start="17:24" pos:end="17:35"><expr pos:start="17:24" pos:end="17:35"><literal type="string" pos:start="17:24" pos:end="17:35">"CDROMEJECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="25:9">else <block pos:start="19:16" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:37">

            <if_stmt pos:start="21:13" pos:end="23:37"><if pos:start="21:13" pos:end="23:37">if <condition pos:start="21:16" pos:end="21:56">(<expr pos:start="21:17" pos:end="21:55"><call pos:start="21:17" pos:end="21:51"><name pos:start="21:17" pos:end="21:21">ioctl</name> <argument_list pos:start="21:23" pos:end="21:51">(<argument pos:start="21:24" pos:end="21:28"><expr pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:28"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">fd</name></name></expr></argument>, <argument pos:start="21:31" pos:end="21:44"><expr pos:start="21:31" pos:end="21:44"><name pos:start="21:31" pos:end="21:44">CDROMCLOSETRAY</name></expr></argument>, <argument pos:start="21:47" pos:end="21:50"><expr pos:start="21:47" pos:end="21:50"><name pos:start="21:47" pos:end="21:50">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="21:53" pos:end="21:53">&lt;</operator> <literal type="number" pos:start="21:55" pos:end="21:55">0</literal></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:37"><block_content pos:start="23:17" pos:end="23:37">

                <expr_stmt pos:start="23:17" pos:end="23:37"><expr pos:start="23:17" pos:end="23:36"><call pos:start="23:17" pos:end="23:36"><name pos:start="23:17" pos:end="23:22">perror</name><argument_list pos:start="23:23" pos:end="23:36">(<argument pos:start="23:24" pos:end="23:35"><expr pos:start="23:24" pos:end="23:35"><literal type="string" pos:start="23:24" pos:end="23:35">"CDROMEJECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="27:9" pos:end="27:14">break;</break>

    <case pos:start="29:5" pos:end="29:18">case <expr pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:17">FTYPE_FD</name></expr>:</case>

        <block pos:start="31:9" pos:end="57:9">{<block_content pos:start="33:13" pos:end="55:13">

            <decl_stmt pos:start="33:13" pos:end="33:19"><decl pos:start="33:13" pos:end="33:18"><type pos:start="33:13" pos:end="33:15"><name pos:start="33:13" pos:end="33:15">int</name></type> <name pos:start="33:17" pos:end="33:18">fd</name></decl>;</decl_stmt>

            <if_stmt pos:start="35:13" pos:end="43:13"><if pos:start="35:13" pos:end="43:13">if <condition pos:start="35:16" pos:end="35:27">(<expr pos:start="35:17" pos:end="35:26"><name pos:start="35:17" pos:end="35:21"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:21">fd</name></name> <operator pos:start="35:23" pos:end="35:24">&gt;=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>)</condition> <block pos:start="35:29" pos:end="43:13">{<block_content pos:start="37:17" pos:end="41:37">

                <expr_stmt pos:start="37:17" pos:end="37:29"><expr pos:start="37:17" pos:end="37:28"><call pos:start="37:17" pos:end="37:28"><name pos:start="37:17" pos:end="37:21">close</name><argument_list pos:start="37:22" pos:end="37:28">(<argument pos:start="37:23" pos:end="37:27"><expr pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:27"><name pos:start="37:23" pos:end="37:23">s</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:27">fd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:27"><expr pos:start="39:17" pos:end="39:26"><name pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:17">s</name><operator pos:start="39:18" pos:end="39:19">-&gt;</operator><name pos:start="39:20" pos:end="39:21">fd</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <operator pos:start="39:25" pos:end="39:25">-</operator><literal type="number" pos:start="39:26" pos:end="39:26">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:37"><expr pos:start="41:17" pos:end="41:36"><call pos:start="41:17" pos:end="41:36"><name pos:start="41:17" pos:end="41:33">raw_close_fd_pool</name><argument_list pos:start="41:34" pos:end="41:36">(<argument pos:start="41:35" pos:end="41:35"><expr pos:start="41:35" pos:end="41:35"><name pos:start="41:35" pos:end="41:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:67"><expr pos:start="45:13" pos:end="45:66"><name pos:start="45:13" pos:end="45:14">fd</name> <operator pos:start="45:16" pos:end="45:16">=</operator> <call pos:start="45:18" pos:end="45:66"><name pos:start="45:18" pos:end="45:21">open</name><argument_list pos:start="45:22" pos:end="45:66">(<argument pos:start="45:23" pos:end="45:34"><expr pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:34"><name pos:start="45:23" pos:end="45:24">bs</name><operator pos:start="45:25" pos:end="45:26">-&gt;</operator><name pos:start="45:27" pos:end="45:34">filename</name></name></expr></argument>, <argument pos:start="45:37" pos:end="45:65"><expr pos:start="45:37" pos:end="45:65"><name pos:start="45:37" pos:end="45:52"><name pos:start="45:37" pos:end="45:37">s</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:52">fd_open_flags</name></name> <operator pos:start="45:54" pos:end="45:54">|</operator> <name pos:start="45:56" pos:end="45:65">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="47:13" pos:end="55:13"><if pos:start="47:13" pos:end="55:13">if <condition pos:start="47:16" pos:end="47:24">(<expr pos:start="47:17" pos:end="47:23"><name pos:start="47:17" pos:end="47:18">fd</name> <operator pos:start="47:20" pos:end="47:21">&gt;=</operator> <literal type="number" pos:start="47:23" pos:end="47:23">0</literal></expr>)</condition> <block pos:start="47:26" pos:end="55:13">{<block_content pos:start="49:17" pos:end="53:26">

                <if_stmt pos:start="49:17" pos:end="51:38"><if pos:start="49:17" pos:end="51:38">if <condition pos:start="49:20" pos:end="49:46">(<expr pos:start="49:21" pos:end="49:45"><call pos:start="49:21" pos:end="49:41"><name pos:start="49:21" pos:end="49:25">ioctl</name><argument_list pos:start="49:26" pos:end="49:41">(<argument pos:start="49:27" pos:end="49:28"><expr pos:start="49:27" pos:end="49:28"><name pos:start="49:27" pos:end="49:28">fd</name></expr></argument>, <argument pos:start="49:31" pos:end="49:37"><expr pos:start="49:31" pos:end="49:37"><name pos:start="49:31" pos:end="49:37">FDEJECT</name></expr></argument>, <argument pos:start="49:40" pos:end="49:40"><expr pos:start="49:40" pos:end="49:40"><literal type="number" pos:start="49:40" pos:end="49:40">0</literal></expr></argument>)</argument_list></call> <operator pos:start="49:43" pos:end="49:43">&lt;</operator> <literal type="number" pos:start="49:45" pos:end="49:45">0</literal></expr>)</condition><block type="pseudo" pos:start="51:21" pos:end="51:38"><block_content pos:start="51:21" pos:end="51:38">

                    <expr_stmt pos:start="51:21" pos:end="51:38"><expr pos:start="51:21" pos:end="51:37"><call pos:start="51:21" pos:end="51:37"><name pos:start="51:21" pos:end="51:26">perror</name><argument_list pos:start="51:27" pos:end="51:37">(<argument pos:start="51:28" pos:end="51:36"><expr pos:start="51:28" pos:end="51:36"><literal type="string" pos:start="51:28" pos:end="51:36">"FDEJECT"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:26"><expr pos:start="53:17" pos:end="53:25"><call pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:21">close</name><argument_list pos:start="53:22" pos:end="53:25">(<argument pos:start="53:23" pos:end="53:24"><expr pos:start="53:23" pos:end="53:24"><name pos:start="53:23" pos:end="53:24">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <default pos:start="61:5" pos:end="61:12">default:</default>

        <return pos:start="63:9" pos:end="63:24">return <expr pos:start="63:16" pos:end="63:23"><operator pos:start="63:16" pos:end="63:16">-</operator><name pos:start="63:17" pos:end="63:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></switch>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
