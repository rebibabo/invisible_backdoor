<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25326.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:32">net_socket_connected</name><parameter_list pos:start="1:33" pos:end="1:66">(<parameter pos:start="1:34" pos:end="1:39"><decl pos:start="1:34" pos:end="1:39"><type pos:start="1:34" pos:end="1:39"><name pos:start="1:34" pos:end="1:36">int</name></type> <name pos:start="1:38" pos:end="1:39">fd</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:46">Error</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">err</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:57">void</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:65">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:32">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">socket_connect_data</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:26">c</name> <init pos:start="5:28" pos:end="5:35">= <expr pos:start="5:30" pos:end="5:35"><name pos:start="5:30" pos:end="5:35">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">NetSocketState</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:21">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">addr_str</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:9">Error</name> <modifier pos:start="11:11" pos:end="11:11">*</modifier></type><name pos:start="11:12" pos:end="11:22">local_error</name> <init pos:start="11:24" pos:end="11:29">= <expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:64"><expr pos:start="15:5" pos:end="15:63"><name pos:start="15:5" pos:end="15:12">addr_str</name> <operator pos:start="15:14" pos:end="15:14">=</operator> <call pos:start="15:16" pos:end="15:63"><name pos:start="15:16" pos:end="15:39">socket_address_to_string</name><argument_list pos:start="15:40" pos:end="15:63">(<argument pos:start="15:41" pos:end="15:48"><expr pos:start="15:41" pos:end="15:48"><name pos:start="15:41" pos:end="15:48"><name pos:start="15:41" pos:end="15:41">c</name><operator pos:start="15:42" pos:end="15:43">-&gt;</operator><name pos:start="15:44" pos:end="15:48">saddr</name></name></expr></argument>, <argument pos:start="15:51" pos:end="15:62"><expr pos:start="15:51" pos:end="15:62"><operator pos:start="15:51" pos:end="15:51">&amp;</operator><name pos:start="15:52" pos:end="15:62">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:25">(<expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:16">addr_str</name> <operator pos:start="17:18" pos:end="17:19">==</operator> <name pos:start="17:21" pos:end="17:24">NULL</name></expr>)</condition> <block pos:start="17:27" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:17">

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:24">error_report_err</name><argument_list pos:start="19:25" pos:end="19:37">(<argument pos:start="19:26" pos:end="19:36"><expr pos:start="19:26" pos:end="19:36"><name pos:start="19:26" pos:end="19:36">local_error</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:24"><expr pos:start="21:9" pos:end="21:23"><call pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:19">closesocket</name><argument_list pos:start="21:20" pos:end="21:23">(<argument pos:start="21:21" pos:end="21:22"><expr pos:start="21:21" pos:end="21:22"><name pos:start="21:21" pos:end="21:22">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:65"><expr pos:start="29:5" pos:end="29:64"><name pos:start="29:5" pos:end="29:5">s</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:64"><name pos:start="29:9" pos:end="29:26">net_socket_fd_init</name><argument_list pos:start="29:27" pos:end="29:64">(<argument pos:start="29:28" pos:end="29:34"><expr pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:34"><name pos:start="29:28" pos:end="29:28">c</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:34">peer</name></name></expr></argument>, <argument pos:start="29:37" pos:end="29:44"><expr pos:start="29:37" pos:end="29:44"><name pos:start="29:37" pos:end="29:44"><name pos:start="29:37" pos:end="29:37">c</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:44">model</name></name></expr></argument>, <argument pos:start="29:47" pos:end="29:53"><expr pos:start="29:47" pos:end="29:53"><name pos:start="29:47" pos:end="29:53"><name pos:start="29:47" pos:end="29:47">c</name><operator pos:start="29:48" pos:end="29:49">-&gt;</operator><name pos:start="29:50" pos:end="29:53">name</name></name></expr></argument>, <argument pos:start="29:56" pos:end="29:57"><expr pos:start="29:56" pos:end="29:57"><name pos:start="29:56" pos:end="29:57">fd</name></expr></argument>, <argument pos:start="29:60" pos:end="29:63"><expr pos:start="29:60" pos:end="29:63"><name pos:start="29:60" pos:end="29:63">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:11">(<expr pos:start="31:9" pos:end="31:10"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:10">s</name></expr>)</condition> <block pos:start="31:13" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:17">

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:19">closesocket</name><argument_list pos:start="33:20" pos:end="33:23">(<argument pos:start="33:21" pos:end="33:22"><expr pos:start="33:21" pos:end="33:22"><name pos:start="33:21" pos:end="33:22">fd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="35:9" pos:end="35:17">goto <name pos:start="35:14" pos:end="35:16">end</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="43:48"><expr pos:start="41:5" pos:end="43:47"><call pos:start="41:5" pos:end="43:47"><name pos:start="41:5" pos:end="41:12">snprintf</name><argument_list pos:start="41:13" pos:end="43:47">(<argument pos:start="41:14" pos:end="41:27"><expr pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:27"><name pos:start="41:14" pos:end="41:14">s</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:18">nc</name><operator pos:start="41:19" pos:end="41:19">.</operator><name pos:start="41:20" pos:end="41:27">info_str</name></name></expr></argument>, <argument pos:start="41:30" pos:end="41:51"><expr pos:start="41:30" pos:end="41:51"><sizeof pos:start="41:30" pos:end="41:51">sizeof<argument_list pos:start="41:36" pos:end="41:51">(<argument pos:start="41:37" pos:end="41:50"><expr pos:start="41:37" pos:end="41:50"><name pos:start="41:37" pos:end="41:50"><name pos:start="41:37" pos:end="41:37">s</name><operator pos:start="41:38" pos:end="41:39">-&gt;</operator><name pos:start="41:40" pos:end="41:41">nc</name><operator pos:start="41:42" pos:end="41:42">.</operator><name pos:start="41:43" pos:end="41:50">info_str</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

             <argument pos:start="43:14" pos:end="43:36"><expr pos:start="43:14" pos:end="43:36"><literal type="string" pos:start="43:14" pos:end="43:36">"socket: connect to %s"</literal></expr></argument>, <argument pos:start="43:39" pos:end="43:46"><expr pos:start="43:39" pos:end="43:46"><name pos:start="43:39" pos:end="43:46">addr_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="47:1" pos:end="47:4"><name pos:start="47:1" pos:end="47:3">end</name>:</label>

    <expr_stmt pos:start="49:5" pos:end="49:21"><expr pos:start="49:5" pos:end="49:20"><call pos:start="49:5" pos:end="49:20"><name pos:start="49:5" pos:end="49:10">g_free</name><argument_list pos:start="49:11" pos:end="49:20">(<argument pos:start="49:12" pos:end="49:19"><expr pos:start="49:12" pos:end="49:19"><name pos:start="49:12" pos:end="49:19">addr_str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:32"><expr pos:start="51:5" pos:end="51:31"><call pos:start="51:5" pos:end="51:31"><name pos:start="51:5" pos:end="51:28">socket_connect_data_free</name><argument_list pos:start="51:29" pos:end="51:31">(<argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
