<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21856.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">spapr_dt_rtas</name><parameter_list pos:start="1:26" pos:end="1:62">(<parameter pos:start="1:27" pos:end="1:50"><decl pos:start="1:27" pos:end="1:50"><type pos:start="1:27" pos:end="1:50"><name pos:start="1:27" pos:end="1:43">sPAPRMachineState</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">spapr</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:61"><decl pos:start="1:53" pos:end="1:61"><type pos:start="1:53" pos:end="1:61"><name pos:start="1:53" pos:end="1:56">void</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">fdt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:36">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">rtas</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:47"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">GString</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">hypertas</name> <init pos:start="7:23" pos:end="7:47">= <expr pos:start="7:25" pos:end="7:47"><call pos:start="7:25" pos:end="7:47"><name pos:start="7:25" pos:end="7:42">g_string_sized_new</name><argument_list pos:start="7:43" pos:end="7:47">(<argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><literal type="number" pos:start="7:44" pos:end="7:46">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:53"><decl pos:start="9:5" pos:end="9:52"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">GString</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:26">qemu_hypertas</name> <init pos:start="9:28" pos:end="9:52">= <expr pos:start="9:30" pos:end="9:52"><call pos:start="9:30" pos:end="9:52"><name pos:start="9:30" pos:end="9:47">g_string_sized_new</name><argument_list pos:start="9:48" pos:end="9:52">(<argument pos:start="9:49" pos:end="9:51"><expr pos:start="9:49" pos:end="9:51"><literal type="number" pos:start="9:49" pos:end="9:51">256</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:66"><decl pos:start="11:5" pos:end="11:65"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:24"><name pos:start="11:14" pos:end="11:22">refpoints</name><index pos:start="11:23" pos:end="11:24">[]</index></name> <init pos:start="11:26" pos:end="11:65">= <expr pos:start="11:28" pos:end="11:65"><block pos:start="11:28" pos:end="11:65">{ <expr pos:start="11:30" pos:end="11:45"><call pos:start="11:30" pos:end="11:45"><name pos:start="11:30" pos:end="11:40">cpu_to_be32</name><argument_list pos:start="11:41" pos:end="11:45">(<argument pos:start="11:42" pos:end="11:44"><expr pos:start="11:42" pos:end="11:44"><literal type="number" pos:start="11:42" pos:end="11:44">0x4</literal></expr></argument>)</argument_list></call></expr>, <macro pos:start="11:48" pos:end="11:63"><name pos:start="11:48" pos:end="11:58">cpu_to_be32</name><argument_list pos:start="11:59" pos:end="11:63">(<argument pos:start="11:60" pos:end="11:62"><literal type="number" pos:start="11:60" pos:end="11:62">0x4</literal></argument>)</argument_list></macro> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="15:54"><decl pos:start="13:5" pos:end="15:53"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:29">max_hotplug_addr</name> <init pos:start="13:31" pos:end="15:53">= <expr pos:start="13:33" pos:end="15:53"><name pos:start="13:33" pos:end="13:58"><name pos:start="13:33" pos:end="13:37">spapr</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:53">hotplug_memory</name><operator pos:start="13:54" pos:end="13:54">.</operator><name pos:start="13:55" pos:end="13:58">base</name></name> <operator pos:start="13:60" pos:end="13:60">+</operator>

        <call pos:start="15:9" pos:end="15:53"><name pos:start="15:9" pos:end="15:26">memory_region_size</name><argument_list pos:start="15:27" pos:end="15:53">(<argument pos:start="15:28" pos:end="15:52"><expr pos:start="15:28" pos:end="15:52"><operator pos:start="15:28" pos:end="15:28">&amp;</operator><name pos:start="15:29" pos:end="15:52"><name pos:start="15:29" pos:end="15:33">spapr</name><operator pos:start="15:34" pos:end="15:35">-&gt;</operator><name pos:start="15:36" pos:end="15:49">hotplug_memory</name><operator pos:start="15:50" pos:end="15:50">.</operator><name pos:start="15:51" pos:end="15:52">mr</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="27:6"><decl pos:start="17:5" pos:end="27:5"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:28"><name pos:start="17:14" pos:end="17:26">lrdr_capacity</name><index pos:start="17:27" pos:end="17:28">[]</index></name> <init pos:start="17:30" pos:end="27:5">= <expr pos:start="17:32" pos:end="27:5"><block pos:start="17:32" pos:end="27:5">{

        <expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:19">cpu_to_be32</name><argument_list pos:start="19:20" pos:end="19:43">(<argument pos:start="19:21" pos:end="19:42"><expr pos:start="19:21" pos:end="19:42"><name pos:start="19:21" pos:end="19:36">max_hotplug_addr</name> <operator pos:start="19:38" pos:end="19:39">&gt;&gt;</operator> <literal type="number" pos:start="19:41" pos:end="19:42">32</literal></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="21:9" pos:end="21:50"><call pos:start="21:9" pos:end="21:50"><name pos:start="21:9" pos:end="21:19">cpu_to_be32</name><argument_list pos:start="21:20" pos:end="21:50">(<argument pos:start="21:21" pos:end="21:49"><expr pos:start="21:21" pos:end="21:49"><name pos:start="21:21" pos:end="21:36">max_hotplug_addr</name> <operator pos:start="21:38" pos:end="21:38">&amp;</operator> <literal type="number" pos:start="21:40" pos:end="21:49">0xffffffff</literal></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="23:9" pos:end="23:9"><literal type="number" pos:start="23:9" pos:end="23:9">0</literal></expr>, <expr pos:start="23:12" pos:end="23:47"><call pos:start="23:12" pos:end="23:47"><name pos:start="23:12" pos:end="23:22">cpu_to_be32</name><argument_list pos:start="23:23" pos:end="23:47">(<argument pos:start="23:24" pos:end="23:46"><expr pos:start="23:24" pos:end="23:46"><name pos:start="23:24" pos:end="23:46">SPAPR_MEMORY_BLOCK_SIZE</name></expr></argument>)</argument_list></call></expr>,

        <expr pos:start="25:9" pos:end="25:43"><call pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:19">cpu_to_be32</name><argument_list pos:start="25:20" pos:end="25:43">(<argument pos:start="25:21" pos:end="25:42"><expr pos:start="25:21" pos:end="25:42"><name pos:start="25:21" pos:end="25:28">max_cpus</name> <operator pos:start="25:30" pos:end="25:30">/</operator> <name pos:start="25:32" pos:end="25:42">smp_threads</name></expr></argument>)</argument_list></call></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:49"><expr pos:start="31:5" pos:end="31:48"><call pos:start="31:5" pos:end="31:48"><name pos:start="31:5" pos:end="31:8">_FDT</name><argument_list pos:start="31:9" pos:end="31:48">(<argument pos:start="31:10" pos:end="31:47"><expr pos:start="31:10" pos:end="31:47"><name pos:start="31:10" pos:end="31:13">rtas</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:47"><name pos:start="31:17" pos:end="31:31">fdt_add_subnode</name><argument_list pos:start="31:32" pos:end="31:47">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">fdt</name></expr></argument>, <argument pos:start="31:38" pos:end="31:38"><expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">0</literal></expr></argument>, <argument pos:start="31:41" pos:end="31:46"><expr pos:start="31:41" pos:end="31:46"><literal type="string" pos:start="31:41" pos:end="31:46">"rtas"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:18">/* hypertas */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><call pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:11">add_str</name><argument_list pos:start="37:12" pos:end="37:34">(<argument pos:start="37:13" pos:end="37:20"><expr pos:start="37:13" pos:end="37:20"><name pos:start="37:13" pos:end="37:20">hypertas</name></expr></argument>, <argument pos:start="37:23" pos:end="37:33"><expr pos:start="37:23" pos:end="37:33"><literal type="string" pos:start="37:23" pos:end="37:33">"hcall-pft"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><call pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:11">add_str</name><argument_list pos:start="39:12" pos:end="39:35">(<argument pos:start="39:13" pos:end="39:20"><expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:20">hypertas</name></expr></argument>, <argument pos:start="39:23" pos:end="39:34"><expr pos:start="39:23" pos:end="39:34"><literal type="string" pos:start="39:23" pos:end="39:34">"hcall-term"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:36"><expr pos:start="41:5" pos:end="41:35"><call pos:start="41:5" pos:end="41:35"><name pos:start="41:5" pos:end="41:11">add_str</name><argument_list pos:start="41:12" pos:end="41:35">(<argument pos:start="41:13" pos:end="41:20"><expr pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:20">hypertas</name></expr></argument>, <argument pos:start="41:23" pos:end="41:34"><expr pos:start="41:23" pos:end="41:34"><literal type="string" pos:start="41:23" pos:end="41:34">"hcall-dabr"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><call pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:11">add_str</name><argument_list pos:start="43:12" pos:end="43:40">(<argument pos:start="43:13" pos:end="43:20"><expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:20">hypertas</name></expr></argument>, <argument pos:start="43:23" pos:end="43:39"><expr pos:start="43:23" pos:end="43:39"><literal type="string" pos:start="43:23" pos:end="43:39">"hcall-interrupt"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><call pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:11">add_str</name><argument_list pos:start="45:12" pos:end="45:34">(<argument pos:start="45:13" pos:end="45:20"><expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:20">hypertas</name></expr></argument>, <argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><literal type="string" pos:start="45:23" pos:end="45:33">"hcall-tce"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:35"><expr pos:start="47:5" pos:end="47:34"><call pos:start="47:5" pos:end="47:34"><name pos:start="47:5" pos:end="47:11">add_str</name><argument_list pos:start="47:12" pos:end="47:34">(<argument pos:start="47:13" pos:end="47:20"><expr pos:start="47:13" pos:end="47:20"><name pos:start="47:13" pos:end="47:20">hypertas</name></expr></argument>, <argument pos:start="47:23" pos:end="47:33"><expr pos:start="47:23" pos:end="47:33"><literal type="string" pos:start="47:23" pos:end="47:33">"hcall-vio"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><call pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:11">add_str</name><argument_list pos:start="49:12" pos:end="49:37">(<argument pos:start="49:13" pos:end="49:20"><expr pos:start="49:13" pos:end="49:20"><name pos:start="49:13" pos:end="49:20">hypertas</name></expr></argument>, <argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><literal type="string" pos:start="49:23" pos:end="49:36">"hcall-splpar"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:36"><expr pos:start="51:5" pos:end="51:35"><call pos:start="51:5" pos:end="51:35"><name pos:start="51:5" pos:end="51:11">add_str</name><argument_list pos:start="51:12" pos:end="51:35">(<argument pos:start="51:13" pos:end="51:20"><expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:20">hypertas</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><literal type="string" pos:start="51:23" pos:end="51:34">"hcall-bulk"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:40"><expr pos:start="53:5" pos:end="53:39"><call pos:start="53:5" pos:end="53:39"><name pos:start="53:5" pos:end="53:11">add_str</name><argument_list pos:start="53:12" pos:end="53:39">(<argument pos:start="53:13" pos:end="53:20"><expr pos:start="53:13" pos:end="53:20"><name pos:start="53:13" pos:end="53:20">hypertas</name></expr></argument>, <argument pos:start="53:23" pos:end="53:38"><expr pos:start="53:23" pos:end="53:38"><literal type="string" pos:start="53:23" pos:end="53:38">"hcall-set-mode"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><call pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:11">add_str</name><argument_list pos:start="55:12" pos:end="55:36">(<argument pos:start="55:13" pos:end="55:20"><expr pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:20">hypertas</name></expr></argument>, <argument pos:start="55:23" pos:end="55:35"><expr pos:start="55:23" pos:end="55:35"><literal type="string" pos:start="55:23" pos:end="55:35">"hcall-sprg0"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><call pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:11">add_str</name><argument_list pos:start="57:12" pos:end="57:35">(<argument pos:start="57:13" pos:end="57:20"><expr pos:start="57:13" pos:end="57:20"><name pos:start="57:13" pos:end="57:20">hypertas</name></expr></argument>, <argument pos:start="57:23" pos:end="57:34"><expr pos:start="57:23" pos:end="57:34"><literal type="string" pos:start="57:23" pos:end="57:34">"hcall-copy"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:37"><expr pos:start="59:5" pos:end="59:36"><call pos:start="59:5" pos:end="59:36"><name pos:start="59:5" pos:end="59:11">add_str</name><argument_list pos:start="59:12" pos:end="59:36">(<argument pos:start="59:13" pos:end="59:20"><expr pos:start="59:13" pos:end="59:20"><name pos:start="59:13" pos:end="59:20">hypertas</name></expr></argument>, <argument pos:start="59:23" pos:end="59:35"><expr pos:start="59:23" pos:end="59:35"><literal type="string" pos:start="59:23" pos:end="59:35">"hcall-debug"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:43"><expr pos:start="61:5" pos:end="61:42"><call pos:start="61:5" pos:end="61:42"><name pos:start="61:5" pos:end="61:11">add_str</name><argument_list pos:start="61:12" pos:end="61:42">(<argument pos:start="61:13" pos:end="61:25"><expr pos:start="61:13" pos:end="61:25"><name pos:start="61:13" pos:end="61:25">qemu_hypertas</name></expr></argument>, <argument pos:start="61:28" pos:end="61:41"><expr pos:start="61:28" pos:end="61:41"><literal type="string" pos:start="61:28" pos:end="61:41">"hcall-memop1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="65:5" pos:end="69:5"><if pos:start="65:5" pos:end="69:5">if <condition pos:start="65:8" pos:end="65:54">(<expr pos:start="65:9" pos:end="65:53"><operator pos:start="65:9" pos:end="65:9">!</operator><call pos:start="65:10" pos:end="65:22"><name pos:start="65:10" pos:end="65:20">kvm_enabled</name><argument_list pos:start="65:21" pos:end="65:22">()</argument_list></call> <operator pos:start="65:24" pos:end="65:25">||</operator> <call pos:start="65:27" pos:end="65:53"><name pos:start="65:27" pos:end="65:51">kvmppc_spapr_use_multitce</name><argument_list pos:start="65:52" pos:end="65:53">()</argument_list></call></expr>)</condition> <block pos:start="65:56" pos:end="69:5">{<block_content pos:start="67:9" pos:end="67:45">

        <expr_stmt pos:start="67:9" pos:end="67:45"><expr pos:start="67:9" pos:end="67:44"><call pos:start="67:9" pos:end="67:44"><name pos:start="67:9" pos:end="67:15">add_str</name><argument_list pos:start="67:16" pos:end="67:44">(<argument pos:start="67:17" pos:end="67:24"><expr pos:start="67:17" pos:end="67:24"><name pos:start="67:17" pos:end="67:24">hypertas</name></expr></argument>, <argument pos:start="67:27" pos:end="67:43"><expr pos:start="67:27" pos:end="67:43"><literal type="string" pos:start="67:27" pos:end="67:43">"hcall-multi-tce"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="73:5" pos:end="77:5"><if pos:start="73:5" pos:end="77:5">if <condition pos:start="73:8" pos:end="73:55">(<expr pos:start="73:9" pos:end="73:54"><name pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:13">spapr</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">resize_hpt</name></name> <operator pos:start="73:27" pos:end="73:28">!=</operator> <name pos:start="73:30" pos:end="73:54">SPAPR_RESIZE_HPT_DISABLED</name></expr>)</condition> <block pos:start="73:57" pos:end="77:5">{<block_content pos:start="75:9" pos:end="75:46">

        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><call pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:15">add_str</name><argument_list pos:start="75:16" pos:end="75:45">(<argument pos:start="75:17" pos:end="75:24"><expr pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:24">hypertas</name></expr></argument>, <argument pos:start="75:27" pos:end="75:44"><expr pos:start="75:27" pos:end="75:44"><literal type="string" pos:start="75:27" pos:end="75:44">"hcall-hpt-resize"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="81:5" pos:end="83:52"><expr pos:start="81:5" pos:end="83:51"><call pos:start="81:5" pos:end="83:51"><name pos:start="81:5" pos:end="81:8">_FDT</name><argument_list pos:start="81:9" pos:end="83:51">(<argument pos:start="81:10" pos:end="83:50"><expr pos:start="81:10" pos:end="83:50"><call pos:start="81:10" pos:end="83:50"><name pos:start="81:10" pos:end="81:20">fdt_setprop</name><argument_list pos:start="81:21" pos:end="83:50">(<argument pos:start="81:22" pos:end="81:24"><expr pos:start="81:22" pos:end="81:24"><name pos:start="81:22" pos:end="81:24">fdt</name></expr></argument>, <argument pos:start="81:27" pos:end="81:30"><expr pos:start="81:27" pos:end="81:30"><name pos:start="81:27" pos:end="81:30">rtas</name></expr></argument>, <argument pos:start="81:33" pos:end="81:56"><expr pos:start="81:33" pos:end="81:56"><literal type="string" pos:start="81:33" pos:end="81:56">"ibm,hypertas-functions"</literal></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:34"><expr pos:start="83:22" pos:end="83:34"><name pos:start="83:22" pos:end="83:34"><name pos:start="83:22" pos:end="83:29">hypertas</name><operator pos:start="83:30" pos:end="83:31">-&gt;</operator><name pos:start="83:32" pos:end="83:34">str</name></name></expr></argument>, <argument pos:start="83:37" pos:end="83:49"><expr pos:start="83:37" pos:end="83:49"><name pos:start="83:37" pos:end="83:49"><name pos:start="83:37" pos:end="83:44">hypertas</name><operator pos:start="83:45" pos:end="83:46">-&gt;</operator><name pos:start="83:47" pos:end="83:49">len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:34"><expr pos:start="85:5" pos:end="85:33"><call pos:start="85:5" pos:end="85:33"><name pos:start="85:5" pos:end="85:17">g_string_free</name><argument_list pos:start="85:18" pos:end="85:33">(<argument pos:start="85:19" pos:end="85:26"><expr pos:start="85:19" pos:end="85:26"><name pos:start="85:19" pos:end="85:26">hypertas</name></expr></argument>, <argument pos:start="85:29" pos:end="85:32"><expr pos:start="85:29" pos:end="85:32"><name pos:start="85:29" pos:end="85:32">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="89:62"><expr pos:start="87:5" pos:end="89:61"><call pos:start="87:5" pos:end="89:61"><name pos:start="87:5" pos:end="87:8">_FDT</name><argument_list pos:start="87:9" pos:end="89:61">(<argument pos:start="87:10" pos:end="89:60"><expr pos:start="87:10" pos:end="89:60"><call pos:start="87:10" pos:end="89:60"><name pos:start="87:10" pos:end="87:20">fdt_setprop</name><argument_list pos:start="87:21" pos:end="89:60">(<argument pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><name pos:start="87:22" pos:end="87:24">fdt</name></expr></argument>, <argument pos:start="87:27" pos:end="87:30"><expr pos:start="87:27" pos:end="87:30"><name pos:start="87:27" pos:end="87:30">rtas</name></expr></argument>, <argument pos:start="87:33" pos:end="87:57"><expr pos:start="87:33" pos:end="87:57"><literal type="string" pos:start="87:33" pos:end="87:57">"qemu,hypertas-functions"</literal></expr></argument>,

                     <argument pos:start="89:22" pos:end="89:39"><expr pos:start="89:22" pos:end="89:39"><name pos:start="89:22" pos:end="89:39"><name pos:start="89:22" pos:end="89:34">qemu_hypertas</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:39">str</name></name></expr></argument>, <argument pos:start="89:42" pos:end="89:59"><expr pos:start="89:42" pos:end="89:59"><name pos:start="89:42" pos:end="89:59"><name pos:start="89:42" pos:end="89:54">qemu_hypertas</name><operator pos:start="89:55" pos:end="89:56">-&gt;</operator><name pos:start="89:57" pos:end="89:59">len</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:39"><expr pos:start="91:5" pos:end="91:38"><call pos:start="91:5" pos:end="91:38"><name pos:start="91:5" pos:end="91:17">g_string_free</name><argument_list pos:start="91:18" pos:end="91:38">(<argument pos:start="91:19" pos:end="91:31"><expr pos:start="91:19" pos:end="91:31"><name pos:start="91:19" pos:end="91:31">qemu_hypertas</name></expr></argument>, <argument pos:start="91:34" pos:end="91:37"><expr pos:start="91:34" pos:end="91:37"><name pos:start="91:34" pos:end="91:37">TRUE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="97:52"><expr pos:start="95:5" pos:end="97:51"><call pos:start="95:5" pos:end="97:51"><name pos:start="95:5" pos:end="95:8">_FDT</name><argument_list pos:start="95:9" pos:end="97:51">(<argument pos:start="95:10" pos:end="97:50"><expr pos:start="95:10" pos:end="97:50"><call pos:start="95:10" pos:end="97:50"><name pos:start="95:10" pos:end="95:20">fdt_setprop</name><argument_list pos:start="95:21" pos:end="97:50">(<argument pos:start="95:22" pos:end="95:24"><expr pos:start="95:22" pos:end="95:24"><name pos:start="95:22" pos:end="95:24">fdt</name></expr></argument>, <argument pos:start="95:27" pos:end="95:30"><expr pos:start="95:27" pos:end="95:30"><name pos:start="95:27" pos:end="95:30">rtas</name></expr></argument>, <argument pos:start="95:33" pos:end="95:68"><expr pos:start="95:33" pos:end="95:68"><literal type="string" pos:start="95:33" pos:end="95:68">"ibm,associativity-reference-points"</literal></expr></argument>,

                     <argument pos:start="97:22" pos:end="97:30"><expr pos:start="97:22" pos:end="97:30"><name pos:start="97:22" pos:end="97:30">refpoints</name></expr></argument>, <argument pos:start="97:33" pos:end="97:49"><expr pos:start="97:33" pos:end="97:49"><sizeof pos:start="97:33" pos:end="97:49">sizeof<argument_list pos:start="97:39" pos:end="97:49">(<argument pos:start="97:40" pos:end="97:48"><expr pos:start="97:40" pos:end="97:48"><name pos:start="97:40" pos:end="97:48">refpoints</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="103:47"><expr pos:start="101:5" pos:end="103:46"><call pos:start="101:5" pos:end="103:46"><name pos:start="101:5" pos:end="101:8">_FDT</name><argument_list pos:start="101:9" pos:end="103:46">(<argument pos:start="101:10" pos:end="103:45"><expr pos:start="101:10" pos:end="103:45"><call pos:start="101:10" pos:end="103:45"><name pos:start="101:10" pos:end="101:25">fdt_setprop_cell</name><argument_list pos:start="101:26" pos:end="103:45">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">fdt</name></expr></argument>, <argument pos:start="101:32" pos:end="101:35"><expr pos:start="101:32" pos:end="101:35"><name pos:start="101:32" pos:end="101:35">rtas</name></expr></argument>, <argument pos:start="101:38" pos:end="101:57"><expr pos:start="101:38" pos:end="101:57"><literal type="string" pos:start="101:38" pos:end="101:57">"rtas-error-log-max"</literal></expr></argument>,

                          <argument pos:start="103:27" pos:end="103:44"><expr pos:start="103:27" pos:end="103:44"><name pos:start="103:27" pos:end="103:44">RTAS_ERROR_LOG_MAX</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="107:49"><expr pos:start="105:5" pos:end="107:48"><call pos:start="105:5" pos:end="107:48"><name pos:start="105:5" pos:end="105:8">_FDT</name><argument_list pos:start="105:9" pos:end="107:48">(<argument pos:start="105:10" pos:end="107:47"><expr pos:start="105:10" pos:end="107:47"><call pos:start="105:10" pos:end="107:47"><name pos:start="105:10" pos:end="105:25">fdt_setprop_cell</name><argument_list pos:start="105:26" pos:end="107:47">(<argument pos:start="105:27" pos:end="105:29"><expr pos:start="105:27" pos:end="105:29"><name pos:start="105:27" pos:end="105:29">fdt</name></expr></argument>, <argument pos:start="105:32" pos:end="105:35"><expr pos:start="105:32" pos:end="105:35"><name pos:start="105:32" pos:end="105:35">rtas</name></expr></argument>, <argument pos:start="105:38" pos:end="105:59"><expr pos:start="105:38" pos:end="105:59"><literal type="string" pos:start="105:38" pos:end="105:59">"rtas-event-scan-rate"</literal></expr></argument>,

                          <argument pos:start="107:27" pos:end="107:46"><expr pos:start="107:27" pos:end="107:46"><name pos:start="107:27" pos:end="107:46">RTAS_EVENT_SCAN_RATE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="111:5" pos:end="115:5"><if pos:start="111:5" pos:end="115:5">if <condition pos:start="111:8" pos:end="111:22">(<expr pos:start="111:9" pos:end="111:21"><name pos:start="111:9" pos:end="111:21">msi_nonbroken</name></expr>)</condition> <block pos:start="111:24" pos:end="115:5">{<block_content pos:start="113:9" pos:end="113:73">

        <expr_stmt pos:start="113:9" pos:end="113:73"><expr pos:start="113:9" pos:end="113:72"><call pos:start="113:9" pos:end="113:72"><name pos:start="113:9" pos:end="113:12">_FDT</name><argument_list pos:start="113:13" pos:end="113:72">(<argument pos:start="113:14" pos:end="113:71"><expr pos:start="113:14" pos:end="113:71"><call pos:start="113:14" pos:end="113:71"><name pos:start="113:14" pos:end="113:24">fdt_setprop</name><argument_list pos:start="113:25" pos:end="113:71">(<argument pos:start="113:26" pos:end="113:28"><expr pos:start="113:26" pos:end="113:28"><name pos:start="113:26" pos:end="113:28">fdt</name></expr></argument>, <argument pos:start="113:31" pos:end="113:34"><expr pos:start="113:31" pos:end="113:34"><name pos:start="113:31" pos:end="113:34">rtas</name></expr></argument>, <argument pos:start="113:37" pos:end="113:61"><expr pos:start="113:37" pos:end="113:61"><literal type="string" pos:start="113:37" pos:end="113:61">"ibm,change-msix-capable"</literal></expr></argument>, <argument pos:start="113:64" pos:end="113:67"><expr pos:start="113:64" pos:end="113:67"><name pos:start="113:64" pos:end="113:67">NULL</name></expr></argument>, <argument pos:start="113:70" pos:end="113:70"><expr pos:start="113:70" pos:end="113:70"><literal type="number" pos:start="113:70" pos:end="113:70">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="119:5" pos:end="131:7">/*

     * According to PAPR, rtas ibm,os-term does not guarantee a return

     * back to the guest cpu.

     *

     * While an additional ibm,extended-os-term property indicates

     * that rtas call return will always occur. Set this property.

     */</comment>

    <expr_stmt pos:start="133:5" pos:end="133:66"><expr pos:start="133:5" pos:end="133:65"><call pos:start="133:5" pos:end="133:65"><name pos:start="133:5" pos:end="133:8">_FDT</name><argument_list pos:start="133:9" pos:end="133:65">(<argument pos:start="133:10" pos:end="133:64"><expr pos:start="133:10" pos:end="133:64"><call pos:start="133:10" pos:end="133:64"><name pos:start="133:10" pos:end="133:20">fdt_setprop</name><argument_list pos:start="133:21" pos:end="133:64">(<argument pos:start="133:22" pos:end="133:24"><expr pos:start="133:22" pos:end="133:24"><name pos:start="133:22" pos:end="133:24">fdt</name></expr></argument>, <argument pos:start="133:27" pos:end="133:30"><expr pos:start="133:27" pos:end="133:30"><name pos:start="133:27" pos:end="133:30">rtas</name></expr></argument>, <argument pos:start="133:33" pos:end="133:54"><expr pos:start="133:33" pos:end="133:54"><literal type="string" pos:start="133:33" pos:end="133:54">"ibm,extended-os-term"</literal></expr></argument>, <argument pos:start="133:57" pos:end="133:60"><expr pos:start="133:57" pos:end="133:60"><name pos:start="133:57" pos:end="133:60">NULL</name></expr></argument>, <argument pos:start="133:63" pos:end="133:63"><expr pos:start="133:63" pos:end="133:63"><literal type="number" pos:start="133:63" pos:end="133:63">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="139:60"><expr pos:start="137:5" pos:end="139:59"><call pos:start="137:5" pos:end="139:59"><name pos:start="137:5" pos:end="137:8">_FDT</name><argument_list pos:start="137:9" pos:end="139:59">(<argument pos:start="137:10" pos:end="139:58"><expr pos:start="137:10" pos:end="139:58"><call pos:start="137:10" pos:end="139:58"><name pos:start="137:10" pos:end="137:20">fdt_setprop</name><argument_list pos:start="137:21" pos:end="139:58">(<argument pos:start="137:22" pos:end="137:24"><expr pos:start="137:22" pos:end="137:24"><name pos:start="137:22" pos:end="137:24">fdt</name></expr></argument>, <argument pos:start="137:27" pos:end="137:30"><expr pos:start="137:27" pos:end="137:30"><name pos:start="137:27" pos:end="137:30">rtas</name></expr></argument>, <argument pos:start="137:33" pos:end="137:51"><expr pos:start="137:33" pos:end="137:51"><literal type="string" pos:start="137:33" pos:end="137:51">"ibm,lrdr-capacity"</literal></expr></argument>,

                     <argument pos:start="139:22" pos:end="139:34"><expr pos:start="139:22" pos:end="139:34"><name pos:start="139:22" pos:end="139:34">lrdr_capacity</name></expr></argument>, <argument pos:start="139:37" pos:end="139:57"><expr pos:start="139:37" pos:end="139:57"><sizeof pos:start="139:37" pos:end="139:57">sizeof<argument_list pos:start="139:43" pos:end="139:57">(<argument pos:start="139:44" pos:end="139:56"><expr pos:start="139:44" pos:end="139:56"><name pos:start="139:44" pos:end="139:56">lrdr_capacity</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:36"><expr pos:start="143:5" pos:end="143:35"><call pos:start="143:5" pos:end="143:35"><name pos:start="143:5" pos:end="143:24">spapr_dt_rtas_tokens</name><argument_list pos:start="143:25" pos:end="143:35">(<argument pos:start="143:26" pos:end="143:28"><expr pos:start="143:26" pos:end="143:28"><name pos:start="143:26" pos:end="143:28">fdt</name></expr></argument>, <argument pos:start="143:31" pos:end="143:34"><expr pos:start="143:31" pos:end="143:34"><name pos:start="143:31" pos:end="143:34">rtas</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
