<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18169.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">rtsp_cmd_describe</name><parameter_list pos:start="1:30" pos:end="1:62">(<parameter pos:start="1:31" pos:end="1:44"><decl pos:start="1:31" pos:end="1:44"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:41">HTTPContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">c</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:61"><specifier pos:start="1:47" pos:end="1:51">const</specifier> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">url</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="83:1">{<block_content pos:start="5:5" pos:end="81:47">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">FFStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:20">stream</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:20"><name pos:start="7:10" pos:end="7:14">path1</name><index pos:start="7:15" pos:end="7:20">[<expr pos:start="7:16" pos:end="7:19"><literal type="number" pos:start="7:16" pos:end="7:19">1024</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:20">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:20">content</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">content_length</name></decl>, <decl pos:start="13:25" pos:end="13:27"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:27">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:31"><decl pos:start="15:5" pos:end="15:30"><type pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:10">struct</name> <name pos:start="15:12" pos:end="15:22">sockaddr_in</name></name></type> <name pos:start="15:24" pos:end="15:30">my_addr</name></decl>;</decl_stmt>

    

    <comment type="block" pos:start="19:5" pos:end="19:33">/* find which url is asked */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><call pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:13">url_split</name><argument_list pos:start="21:14" pos:end="21:64">(<argument pos:start="21:15" pos:end="21:18"><expr pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:18">NULL</name></expr></argument>, <argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><literal type="number" pos:start="21:21" pos:end="21:21">0</literal></expr></argument>, <argument pos:start="21:24" pos:end="21:27"><expr pos:start="21:24" pos:end="21:27"><name pos:start="21:24" pos:end="21:27">NULL</name></expr></argument>, <argument pos:start="21:30" pos:end="21:30"><expr pos:start="21:30" pos:end="21:30"><literal type="number" pos:start="21:30" pos:end="21:30">0</literal></expr></argument>, <argument pos:start="21:33" pos:end="21:36"><expr pos:start="21:33" pos:end="21:36"><name pos:start="21:33" pos:end="21:36">NULL</name></expr></argument>, <argument pos:start="21:39" pos:end="21:43"><expr pos:start="21:39" pos:end="21:43"><name pos:start="21:39" pos:end="21:43">path1</name></expr></argument>, <argument pos:start="21:46" pos:end="21:58"><expr pos:start="21:46" pos:end="21:58"><sizeof pos:start="21:46" pos:end="21:58">sizeof<argument_list pos:start="21:52" pos:end="21:58">(<argument pos:start="21:53" pos:end="21:57"><expr pos:start="21:53" pos:end="21:57"><name pos:start="21:53" pos:end="21:57">path1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="21:61" pos:end="21:63"><expr pos:start="21:61" pos:end="21:63"><name pos:start="21:61" pos:end="21:63">url</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:8">path</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <name pos:start="23:12" pos:end="23:16">path1</name></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:15"><if pos:start="25:5" pos:end="27:15">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:13">path</name> <operator pos:start="25:15" pos:end="25:16">==</operator> <literal type="char" pos:start="25:18" pos:end="25:20">'/'</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:15"><block_content pos:start="27:9" pos:end="27:15">

        <expr_stmt pos:start="27:9" pos:end="27:15"><expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:12">path</name><operator pos:start="27:13" pos:end="27:14">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <for pos:start="31:5" pos:end="41:5">for<control pos:start="31:8" pos:end="31:69">(<init pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:14">stream</name> <operator pos:start="31:16" pos:end="31:16">=</operator> <name pos:start="31:18" pos:end="31:29">first_stream</name></expr>;</init> <condition pos:start="31:32" pos:end="31:46"><expr pos:start="31:32" pos:end="31:45"><name pos:start="31:32" pos:end="31:37">stream</name> <operator pos:start="31:39" pos:end="31:40">!=</operator> <name pos:start="31:42" pos:end="31:45">NULL</name></expr>;</condition> <incr pos:start="31:48" pos:end="31:68"><expr pos:start="31:48" pos:end="31:68"><name pos:start="31:48" pos:end="31:53">stream</name> <operator pos:start="31:55" pos:end="31:55">=</operator> <name pos:start="31:57" pos:end="31:68"><name pos:start="31:57" pos:end="31:62">stream</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:68">next</name></name></expr></incr>)</control> <block pos:start="31:71" pos:end="41:5">{<block_content pos:start="33:9" pos:end="39:9">

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="35:44">(<expr pos:start="33:13" pos:end="35:43"><operator pos:start="33:13" pos:end="33:13">!</operator><name pos:start="33:14" pos:end="33:28"><name pos:start="33:14" pos:end="33:19">stream</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:28">is_feed</name></name> <operator pos:start="33:30" pos:end="33:31">&amp;&amp;</operator> <name pos:start="33:33" pos:end="33:43"><name pos:start="33:33" pos:end="33:38">stream</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">fmt</name></name> <operator pos:start="33:45" pos:end="33:46">==</operator> <operator pos:start="33:48" pos:end="33:48">&amp;</operator><name pos:start="33:49" pos:end="33:55">rtp_mux</name> <operator pos:start="33:57" pos:end="33:58">&amp;&amp;</operator>

            <operator pos:start="35:13" pos:end="35:13">!</operator><call pos:start="35:14" pos:end="35:43"><name pos:start="35:14" pos:end="35:19">strcmp</name><argument_list pos:start="35:20" pos:end="35:43">(<argument pos:start="35:21" pos:end="35:24"><expr pos:start="35:21" pos:end="35:24"><name pos:start="35:21" pos:end="35:24">path</name></expr></argument>, <argument pos:start="35:27" pos:end="35:42"><expr pos:start="35:27" pos:end="35:42"><name pos:start="35:27" pos:end="35:42"><name pos:start="35:27" pos:end="35:32">stream</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:42">filename</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:46" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

            <goto pos:start="37:13" pos:end="37:23">goto <name pos:start="37:18" pos:end="37:22">found</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="43:5" pos:end="43:25">/* no stream found */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:45"><expr pos:start="45:5" pos:end="45:44"><call pos:start="45:5" pos:end="45:44"><name pos:start="45:5" pos:end="45:20">rtsp_reply_error</name><argument_list pos:start="45:21" pos:end="45:44">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">c</name></expr></argument>, <argument pos:start="45:25" pos:end="45:43"><expr pos:start="45:25" pos:end="45:43"><name pos:start="45:25" pos:end="45:43">RTSP_STATUS_SERVICE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:47" pos:end="45:70">/* XXX: right error ? */</comment>

    <return pos:start="47:5" pos:end="47:11">return;</return>



 <label pos:start="51:2" pos:end="51:7"><name pos:start="51:2" pos:end="51:6">found</name>:</label>

    <comment type="block" pos:start="53:5" pos:end="53:53">/* prepare the media description in sdp format */</comment>



    <comment type="block" pos:start="57:5" pos:end="57:25">/* get the host IP */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:26"><expr pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:7">len</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <sizeof pos:start="59:11" pos:end="59:25">sizeof<argument_list pos:start="59:17" pos:end="59:25">(<argument pos:start="59:18" pos:end="59:24"><expr pos:start="59:18" pos:end="59:24"><name pos:start="59:18" pos:end="59:24">my_addr</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:58"><expr pos:start="61:5" pos:end="61:57"><call pos:start="61:5" pos:end="61:57"><name pos:start="61:5" pos:end="61:15">getsockname</name><argument_list pos:start="61:16" pos:end="61:57">(<argument pos:start="61:17" pos:end="61:21"><expr pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:17">c</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:21">fd</name></name></expr></argument>, <argument pos:start="61:24" pos:end="61:50"><expr pos:start="61:24" pos:end="61:50"><operator pos:start="61:24" pos:end="61:24">(</operator>struct <name pos:start="61:32" pos:end="61:39">sockaddr</name> <operator pos:start="61:41" pos:end="61:41">*</operator><operator pos:start="61:42" pos:end="61:42">)</operator><operator pos:start="61:43" pos:end="61:43">&amp;</operator><name pos:start="61:44" pos:end="61:50">my_addr</name></expr></argument>, <argument pos:start="61:53" pos:end="61:56"><expr pos:start="61:53" pos:end="61:56"><operator pos:start="61:53" pos:end="61:53">&amp;</operator><name pos:start="61:54" pos:end="61:56">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:81"><expr pos:start="63:5" pos:end="63:80"><name pos:start="63:5" pos:end="63:18">content_length</name> <operator pos:start="63:20" pos:end="63:20">=</operator> <call pos:start="63:22" pos:end="63:80"><name pos:start="63:22" pos:end="63:44">prepare_sdp_description</name><argument_list pos:start="63:45" pos:end="63:80">(<argument pos:start="63:46" pos:end="63:51"><expr pos:start="63:46" pos:end="63:51"><name pos:start="63:46" pos:end="63:51">stream</name></expr></argument>, <argument pos:start="63:54" pos:end="63:61"><expr pos:start="63:54" pos:end="63:61"><operator pos:start="63:54" pos:end="63:54">&amp;</operator><name pos:start="63:55" pos:end="63:61">content</name></expr></argument>, <argument pos:start="63:64" pos:end="63:79"><expr pos:start="63:64" pos:end="63:79"><name pos:start="63:64" pos:end="63:79"><name pos:start="63:64" pos:end="63:70">my_addr</name><operator pos:start="63:71" pos:end="63:71">.</operator><name pos:start="63:72" pos:end="63:79">sin_addr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="71:5"><if pos:start="65:5" pos:end="71:5">if <condition pos:start="65:8" pos:end="65:27">(<expr pos:start="65:9" pos:end="65:26"><name pos:start="65:9" pos:end="65:22">content_length</name> <operator pos:start="65:24" pos:end="65:24">&lt;</operator> <literal type="number" pos:start="65:26" pos:end="65:26">0</literal></expr>)</condition> <block pos:start="65:29" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:15">

        <expr_stmt pos:start="67:9" pos:end="67:50"><expr pos:start="67:9" pos:end="67:49"><call pos:start="67:9" pos:end="67:49"><name pos:start="67:9" pos:end="67:24">rtsp_reply_error</name><argument_list pos:start="67:25" pos:end="67:49">(<argument pos:start="67:26" pos:end="67:26"><expr pos:start="67:26" pos:end="67:26"><name pos:start="67:26" pos:end="67:26">c</name></expr></argument>, <argument pos:start="67:29" pos:end="67:48"><expr pos:start="67:29" pos:end="67:48"><name pos:start="67:29" pos:end="67:48">RTSP_STATUS_INTERNAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:41"><expr pos:start="73:5" pos:end="73:40"><call pos:start="73:5" pos:end="73:40"><name pos:start="73:5" pos:end="73:21">rtsp_reply_header</name><argument_list pos:start="73:22" pos:end="73:40">(<argument pos:start="73:23" pos:end="73:23"><expr pos:start="73:23" pos:end="73:23"><name pos:start="73:23" pos:end="73:23">c</name></expr></argument>, <argument pos:start="73:26" pos:end="73:39"><expr pos:start="73:26" pos:end="73:39"><name pos:start="73:26" pos:end="73:39">RTSP_STATUS_OK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:60"><expr pos:start="75:5" pos:end="75:59"><call pos:start="75:5" pos:end="75:59"><name pos:start="75:5" pos:end="75:15">url_fprintf</name><argument_list pos:start="75:16" pos:end="75:59">(<argument pos:start="75:17" pos:end="75:21"><expr pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:21"><name pos:start="75:17" pos:end="75:17">c</name><operator pos:start="75:18" pos:end="75:19">-&gt;</operator><name pos:start="75:20" pos:end="75:21">pb</name></name></expr></argument>, <argument pos:start="75:24" pos:end="75:58"><expr pos:start="75:24" pos:end="75:58"><literal type="string" pos:start="75:24" pos:end="75:58">"Content-Type: application/sdp\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:65"><expr pos:start="77:5" pos:end="77:64"><call pos:start="77:5" pos:end="77:64"><name pos:start="77:5" pos:end="77:15">url_fprintf</name><argument_list pos:start="77:16" pos:end="77:64">(<argument pos:start="77:17" pos:end="77:21"><expr pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:21"><name pos:start="77:17" pos:end="77:17">c</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:21">pb</name></name></expr></argument>, <argument pos:start="77:24" pos:end="77:47"><expr pos:start="77:24" pos:end="77:47"><literal type="string" pos:start="77:24" pos:end="77:47">"Content-Length: %d\r\n"</literal></expr></argument>, <argument pos:start="77:50" pos:end="77:63"><expr pos:start="77:50" pos:end="77:63"><name pos:start="77:50" pos:end="77:63">content_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:31"><expr pos:start="79:5" pos:end="79:30"><call pos:start="79:5" pos:end="79:30"><name pos:start="79:5" pos:end="79:15">url_fprintf</name><argument_list pos:start="79:16" pos:end="79:30">(<argument pos:start="79:17" pos:end="79:21"><expr pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:21"><name pos:start="79:17" pos:end="79:17">c</name><operator pos:start="79:18" pos:end="79:19">-&gt;</operator><name pos:start="79:20" pos:end="79:21">pb</name></name></expr></argument>, <argument pos:start="79:24" pos:end="79:29"><expr pos:start="79:24" pos:end="79:29"><literal type="string" pos:start="79:24" pos:end="79:29">"\r\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:47"><expr pos:start="81:5" pos:end="81:46"><call pos:start="81:5" pos:end="81:46"><name pos:start="81:5" pos:end="81:14">put_buffer</name><argument_list pos:start="81:15" pos:end="81:46">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:16">c</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:20">pb</name></name></expr></argument>, <argument pos:start="81:23" pos:end="81:29"><expr pos:start="81:23" pos:end="81:29"><name pos:start="81:23" pos:end="81:29">content</name></expr></argument>, <argument pos:start="81:32" pos:end="81:45"><expr pos:start="81:32" pos:end="81:45"><name pos:start="81:32" pos:end="81:45">content_length</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
