<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8279.c" pos:tabs="8"><function pos:start="1:1" pos:end="271:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">ffv1_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:61">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:37">AVFrame</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">pict</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:60"><decl pos:start="3:46" pos:end="3:60"><type pos:start="3:46" pos:end="3:60"><name pos:start="3:46" pos:end="3:48">int</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:60">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="271:1">{<block_content pos:start="7:5" pos:end="269:13">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">FFV1Context</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:18">f</name>      <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:14">RangeCoder</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier><specifier pos:start="9:17" pos:end="9:21">const</specifier></type> <name pos:start="9:23" pos:end="9:23">c</name> <init pos:start="9:25" pos:end="9:49">= <expr pos:start="9:27" pos:end="9:49"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:28">f</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:43">slice_context</name><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr>]</index></name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:49">c</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">used_count</name>      <init pos:start="11:25" pos:end="11:27">= <expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:30"><decl pos:start="13:5" pos:end="13:29"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:20">keystate</name>    <init pos:start="13:25" pos:end="13:29">= <expr pos:start="13:27" pos:end="13:29"><literal type="number" pos:start="13:27" pos:end="13:29">128</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:18">buf_p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:15"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:14"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:5">f</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:12">frame</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:19">pict</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if <condition pos:start="25:8" pos:end="29:60">(<expr pos:start="25:9" pos:end="29:59"><operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="29:54"><name pos:start="25:16" pos:end="25:30">ff_alloc_packet</name><argument_list pos:start="25:31" pos:end="29:54">(<argument pos:start="25:32" pos:end="25:34"><expr pos:start="25:32" pos:end="25:34"><name pos:start="25:32" pos:end="25:34">pkt</name></expr></argument>, <argument pos:start="25:37" pos:end="29:53"><expr pos:start="25:37" pos:end="29:53"><name pos:start="25:37" pos:end="25:48"><name pos:start="25:37" pos:end="25:41">avctx</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:48">width</name></name> <operator pos:start="25:50" pos:end="25:50">*</operator> <name pos:start="25:52" pos:end="25:64"><name pos:start="25:52" pos:end="25:56">avctx</name><operator pos:start="25:57" pos:end="25:58">-&gt;</operator><name pos:start="25:59" pos:end="25:64">height</name></name> <operator pos:start="25:66" pos:end="25:66">*</operator>

                             <operator pos:start="27:30" pos:end="27:30">(</operator><operator pos:start="27:31" pos:end="27:31">(</operator><literal type="number" pos:start="27:32" pos:end="27:32">8</literal> <operator pos:start="27:34" pos:end="27:34">*</operator> <literal type="number" pos:start="27:36" pos:end="27:38">2</literal> <operator pos:start="27:38" pos:end="27:38">+</operator> <literal type="number" pos:start="27:40" pos:end="27:42">1</literal> <operator pos:start="27:42" pos:end="27:42">+</operator> <literal type="number" pos:start="27:44" pos:end="27:44">1</literal><operator pos:start="27:45" pos:end="27:45">)</operator> <operator pos:start="27:47" pos:end="27:47">*</operator> <literal type="number" pos:start="27:49" pos:end="27:49">4</literal><operator pos:start="27:50" pos:end="27:50">)</operator> <operator pos:start="27:52" pos:end="27:52">/</operator> <literal type="number" pos:start="27:54" pos:end="27:56">8</literal> <operator pos:start="27:56" pos:end="27:56">+</operator>

                             <name pos:start="29:30" pos:end="29:53">AV_INPUT_BUFFER_MIN_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="29:55" pos:end="29:55">)</operator> <operator pos:start="29:57" pos:end="29:57">&lt;</operator> <literal type="number" pos:start="29:59" pos:end="29:59">0</literal></expr>)</condition> <block pos:start="29:62" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:19">

        <expr_stmt pos:start="31:9" pos:end="31:70"><expr pos:start="31:9" pos:end="31:69"><call pos:start="31:9" pos:end="31:69"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:69">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">avctx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:68"><expr pos:start="31:37" pos:end="31:68"><literal type="string" pos:start="31:37" pos:end="31:68">"Error getting output packet.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:51"><expr pos:start="39:5" pos:end="39:50"><call pos:start="39:5" pos:end="39:50"><name pos:start="39:5" pos:end="39:25">ff_init_range_encoder</name><argument_list pos:start="39:26" pos:end="39:50">(<argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">c</name></expr></argument>, <argument pos:start="39:30" pos:end="39:38"><expr pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:38"><name pos:start="39:30" pos:end="39:32">pkt</name><operator pos:start="39:33" pos:end="39:34">-&gt;</operator><name pos:start="39:35" pos:end="39:38">data</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:49"><expr pos:start="39:41" pos:end="39:49"><name pos:start="39:41" pos:end="39:49"><name pos:start="39:41" pos:end="39:43">pkt</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:49">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:56"><expr pos:start="41:5" pos:end="41:55"><call pos:start="41:5" pos:end="41:55"><name pos:start="41:5" pos:end="41:23">ff_build_rac_states</name><argument_list pos:start="41:24" pos:end="41:55">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">c</name></expr></argument>, <argument pos:start="41:28" pos:end="41:45"><expr pos:start="41:28" pos:end="41:45"><literal type="number" pos:start="41:28" pos:end="41:31">0.05</literal> <operator pos:start="41:33" pos:end="41:33">*</operator> <operator pos:start="41:35" pos:end="41:35">(</operator><literal type="number" pos:start="41:36" pos:end="41:38">1LL</literal> <operator pos:start="41:40" pos:end="41:41">&lt;&lt;</operator> <literal type="number" pos:start="41:43" pos:end="41:44">32</literal><operator pos:start="41:45" pos:end="41:45">)</operator></expr></argument>, <argument pos:start="41:48" pos:end="41:54"><expr pos:start="41:48" pos:end="41:54"><literal type="number" pos:start="41:48" pos:end="41:52">256</literal> <operator pos:start="41:52" pos:end="41:52">-</operator> <literal type="number" pos:start="41:54" pos:end="41:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="61:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="45:73">(<expr pos:start="45:9" pos:end="45:72"><name pos:start="45:9" pos:end="45:23"><name pos:start="45:9" pos:end="45:13">avctx</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:23">gop_size</name></name> <operator pos:start="45:25" pos:end="45:26">==</operator> <literal type="number" pos:start="45:28" pos:end="45:28">0</literal> <operator pos:start="45:30" pos:end="45:31">||</operator> <name pos:start="45:33" pos:end="45:49"><name pos:start="45:33" pos:end="45:33">f</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:49">picture_number</name></name> <operator pos:start="45:51" pos:end="45:51">%</operator> <name pos:start="45:53" pos:end="45:67"><name pos:start="45:53" pos:end="45:57">avctx</name><operator pos:start="45:58" pos:end="45:59">-&gt;</operator><name pos:start="45:60" pos:end="45:67">gop_size</name></name> <operator pos:start="45:69" pos:end="45:70">==</operator> <literal type="number" pos:start="45:72" pos:end="45:72">0</literal></expr>)</condition> <block pos:start="45:75" pos:end="55:5">{<block_content pos:start="47:9" pos:end="53:24">

        <expr_stmt pos:start="47:9" pos:end="47:33"><expr pos:start="47:9" pos:end="47:32"><call pos:start="47:9" pos:end="47:32"><name pos:start="47:9" pos:end="47:15">put_rac</name><argument_list pos:start="47:16" pos:end="47:32">(<argument pos:start="47:17" pos:end="47:17"><expr pos:start="47:17" pos:end="47:17"><name pos:start="47:17" pos:end="47:17">c</name></expr></argument>, <argument pos:start="47:20" pos:end="47:28"><expr pos:start="47:20" pos:end="47:28"><operator pos:start="47:20" pos:end="47:20">&amp;</operator><name pos:start="47:21" pos:end="47:28">keystate</name></expr></argument>, <argument pos:start="47:31" pos:end="47:31"><expr pos:start="47:31" pos:end="47:31"><literal type="number" pos:start="47:31" pos:end="47:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">f</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:20">key_frame</name></name> <operator pos:start="49:22" pos:end="49:22">=</operator> <literal type="number" pos:start="49:24" pos:end="49:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:23"><expr pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:9">f</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:20">gob_count</name></name><operator pos:start="51:21" pos:end="51:22">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:24"><expr pos:start="53:9" pos:end="53:23"><call pos:start="53:9" pos:end="53:23"><name pos:start="53:9" pos:end="53:20">write_header</name><argument_list pos:start="53:21" pos:end="53:23">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="61:5">else <block pos:start="55:12" pos:end="61:5">{<block_content pos:start="57:9" pos:end="59:25">

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><call pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:15">put_rac</name><argument_list pos:start="57:16" pos:end="57:32">(<argument pos:start="57:17" pos:end="57:17"><expr pos:start="57:17" pos:end="57:17"><name pos:start="57:17" pos:end="57:17">c</name></expr></argument>, <argument pos:start="57:20" pos:end="57:28"><expr pos:start="57:20" pos:end="57:28"><operator pos:start="57:20" pos:end="57:20">&amp;</operator><name pos:start="57:21" pos:end="57:28">keystate</name></expr></argument>, <argument pos:start="57:31" pos:end="57:31"><expr pos:start="57:31" pos:end="57:31"><literal type="number" pos:start="57:31" pos:end="57:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:25"><expr pos:start="59:9" pos:end="59:24"><name pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:9">f</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:20">key_frame</name></name> <operator pos:start="59:22" pos:end="59:22">=</operator> <literal type="number" pos:start="59:24" pos:end="59:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="65:5" pos:end="77:5"><if pos:start="65:5" pos:end="77:5">if <condition pos:start="65:8" pos:end="65:18">(<expr pos:start="65:9" pos:end="65:17"><name pos:start="65:9" pos:end="65:13"><name pos:start="65:9" pos:end="65:9">f</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:13">ac</name></name> <operator pos:start="65:15" pos:end="65:15">&gt;</operator> <literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>)</condition> <block pos:start="65:20" pos:end="77:5">{<block_content pos:start="67:9" pos:end="75:9">

        <decl_stmt pos:start="67:9" pos:end="67:14"><decl pos:start="67:9" pos:end="67:13"><type pos:start="67:9" pos:end="67:11"><name pos:start="67:9" pos:end="67:11">int</name></type> <name pos:start="67:13" pos:end="67:13">i</name></decl>;</decl_stmt>

        <for pos:start="69:9" pos:end="75:9">for <control pos:start="69:13" pos:end="69:33">(<init pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:18"><name pos:start="69:14" pos:end="69:14">i</name> <operator pos:start="69:16" pos:end="69:16">=</operator> <literal type="number" pos:start="69:18" pos:end="69:18">1</literal></expr>;</init> <condition pos:start="69:21" pos:end="69:28"><expr pos:start="69:21" pos:end="69:27"><name pos:start="69:21" pos:end="69:21">i</name> <operator pos:start="69:23" pos:end="69:23">&lt;</operator> <literal type="number" pos:start="69:25" pos:end="69:27">256</literal></expr>;</condition> <incr pos:start="69:30" pos:end="69:32"><expr pos:start="69:30" pos:end="69:32"><name pos:start="69:30" pos:end="69:30">i</name><operator pos:start="69:31" pos:end="69:32">++</operator></expr></incr>)</control> <block pos:start="69:35" pos:end="75:9">{<block_content pos:start="71:13" pos:end="73:59">

            <expr_stmt pos:start="71:13" pos:end="71:60"><expr pos:start="71:13" pos:end="71:59"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:13">c</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:24">one_state</name><index pos:start="71:25" pos:end="71:27">[<expr pos:start="71:26" pos:end="71:26"><name pos:start="71:26" pos:end="71:26">i</name></expr>]</index></name>        <operator pos:start="71:36" pos:end="71:36">=</operator> <name pos:start="71:38" pos:end="71:59"><name pos:start="71:38" pos:end="71:38">f</name><operator pos:start="71:39" pos:end="71:40">-&gt;</operator><name pos:start="71:41" pos:end="71:56">state_transition</name><index pos:start="71:57" pos:end="71:59">[<expr pos:start="71:58" pos:end="71:58"><name pos:start="71:58" pos:end="71:58">i</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:59"><expr pos:start="73:13" pos:end="73:58"><name pos:start="73:13" pos:end="73:34"><name pos:start="73:13" pos:end="73:13">c</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:25">zero_state</name><index pos:start="73:26" pos:end="73:34">[<expr pos:start="73:27" pos:end="73:33"><literal type="number" pos:start="73:27" pos:end="73:29">256</literal> <operator pos:start="73:31" pos:end="73:31">-</operator> <name pos:start="73:33" pos:end="73:33">i</name></expr>]</index></name> <operator pos:start="73:36" pos:end="73:36">=</operator> <literal type="number" pos:start="73:38" pos:end="73:42">256</literal> <operator pos:start="73:42" pos:end="73:42">-</operator> <name pos:start="73:44" pos:end="73:58"><name pos:start="73:44" pos:end="73:44">c</name><operator pos:start="73:45" pos:end="73:46">-&gt;</operator><name pos:start="73:47" pos:end="73:55">one_state</name><index pos:start="73:56" pos:end="73:58">[<expr pos:start="73:57" pos:end="73:57"><name pos:start="73:57" pos:end="73:57">i</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <for pos:start="81:5" pos:end="93:5">for <control pos:start="81:9" pos:end="81:40">(<init pos:start="81:10" pos:end="81:15"><expr pos:start="81:10" pos:end="81:14"><name pos:start="81:10" pos:end="81:10">i</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <literal type="number" pos:start="81:14" pos:end="81:14">1</literal></expr>;</init> <condition pos:start="81:17" pos:end="81:35"><expr pos:start="81:17" pos:end="81:34"><name pos:start="81:17" pos:end="81:17">i</name> <operator pos:start="81:19" pos:end="81:19">&lt;</operator> <name pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:21">f</name><operator pos:start="81:22" pos:end="81:23">-&gt;</operator><name pos:start="81:24" pos:end="81:34">slice_count</name></name></expr>;</condition> <incr pos:start="81:37" pos:end="81:39"><expr pos:start="81:37" pos:end="81:39"><name pos:start="81:37" pos:end="81:37">i</name><operator pos:start="81:38" pos:end="81:39">++</operator></expr></incr>)</control> <block pos:start="81:42" pos:end="93:5">{<block_content pos:start="83:9" pos:end="91:50">

        <decl_stmt pos:start="83:9" pos:end="83:46"><decl pos:start="83:9" pos:end="83:45"><type pos:start="83:9" pos:end="83:21"><name pos:start="83:9" pos:end="83:19">FFV1Context</name> <modifier pos:start="83:21" pos:end="83:21">*</modifier></type><name pos:start="83:22" pos:end="83:23">fs</name> <init pos:start="83:25" pos:end="83:45">= <expr pos:start="83:27" pos:end="83:45"><name pos:start="83:27" pos:end="83:45"><name pos:start="83:27" pos:end="83:27">f</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:42">slice_context</name><index pos:start="83:43" pos:end="83:45">[<expr pos:start="83:44" pos:end="83:44"><name pos:start="83:44" pos:end="83:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="85:9" pos:end="87:81"><decl pos:start="85:9" pos:end="87:80"><type pos:start="85:9" pos:end="85:17"><name pos:start="85:9" pos:end="85:15">uint8_t</name> <modifier pos:start="85:17" pos:end="85:17">*</modifier></type><name pos:start="85:18" pos:end="85:22">start</name>  <init pos:start="85:25" pos:end="87:80">= <expr pos:start="85:27" pos:end="87:80"><name pos:start="85:27" pos:end="85:35"><name pos:start="85:27" pos:end="85:29">pkt</name><operator pos:start="85:30" pos:end="85:31">-&gt;</operator><name pos:start="85:32" pos:end="85:35">data</name></name> <operator pos:start="85:37" pos:end="85:37">+</operator>

                          <operator pos:start="87:27" pos:end="87:27">(</operator><name pos:start="87:28" pos:end="87:36"><name pos:start="87:28" pos:end="87:30">pkt</name><operator pos:start="87:31" pos:end="87:32">-&gt;</operator><name pos:start="87:33" pos:end="87:36">size</name></name> <operator pos:start="87:38" pos:end="87:38">-</operator> <name pos:start="87:40" pos:end="87:49">used_count</name><operator pos:start="87:50" pos:end="87:50">)</operator> <operator pos:start="87:52" pos:end="87:52">*</operator> <operator pos:start="87:54" pos:end="87:54">(</operator><name pos:start="87:55" pos:end="87:61">int64_t</name><operator pos:start="87:62" pos:end="87:62">)</operator><name pos:start="87:63" pos:end="87:63">i</name> <operator pos:start="87:65" pos:end="87:65">/</operator> <name pos:start="87:67" pos:end="87:80"><name pos:start="87:67" pos:end="87:67">f</name><operator pos:start="87:68" pos:end="87:69">-&gt;</operator><name pos:start="87:70" pos:end="87:80">slice_count</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="89:9" pos:end="89:45"><decl pos:start="89:9" pos:end="89:44"><type pos:start="89:9" pos:end="89:11"><name pos:start="89:9" pos:end="89:11">int</name></type> <name pos:start="89:13" pos:end="89:15">len</name> <init pos:start="89:17" pos:end="89:44">= <expr pos:start="89:19" pos:end="89:44"><name pos:start="89:19" pos:end="89:27"><name pos:start="89:19" pos:end="89:21">pkt</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:27">size</name></name> <operator pos:start="89:29" pos:end="89:29">/</operator> <name pos:start="89:31" pos:end="89:44"><name pos:start="89:31" pos:end="89:31">f</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:44">slice_count</name></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:50"><expr pos:start="91:9" pos:end="91:49"><call pos:start="91:9" pos:end="91:49"><name pos:start="91:9" pos:end="91:29">ff_init_range_encoder</name><argument_list pos:start="91:30" pos:end="91:49">(<argument pos:start="91:31" pos:end="91:36"><expr pos:start="91:31" pos:end="91:36"><operator pos:start="91:31" pos:end="91:31">&amp;</operator><name pos:start="91:32" pos:end="91:36"><name pos:start="91:32" pos:end="91:33">fs</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:36">c</name></name></expr></argument>, <argument pos:start="91:39" pos:end="91:43"><expr pos:start="91:39" pos:end="91:43"><name pos:start="91:39" pos:end="91:43">start</name></expr></argument>, <argument pos:start="91:46" pos:end="91:48"><expr pos:start="91:46" pos:end="91:48"><name pos:start="91:46" pos:end="91:48">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="95:5" pos:end="97:51"><expr pos:start="95:5" pos:end="97:50"><call pos:start="95:5" pos:end="97:50"><name pos:start="95:5" pos:end="95:18"><name pos:start="95:5" pos:end="95:9">avctx</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:18">execute</name></name><argument_list pos:start="95:19" pos:end="97:50">(<argument pos:start="95:20" pos:end="95:24"><expr pos:start="95:20" pos:end="95:24"><name pos:start="95:20" pos:end="95:24">avctx</name></expr></argument>, <argument pos:start="95:27" pos:end="95:38"><expr pos:start="95:27" pos:end="95:38"><name pos:start="95:27" pos:end="95:38">encode_slice</name></expr></argument>, <argument pos:start="95:41" pos:end="95:60"><expr pos:start="95:41" pos:end="95:60"><operator pos:start="95:41" pos:end="95:41">&amp;</operator><name pos:start="95:42" pos:end="95:60"><name pos:start="95:42" pos:end="95:42">f</name><operator pos:start="95:43" pos:end="95:44">-&gt;</operator><name pos:start="95:45" pos:end="95:57">slice_context</name><index pos:start="95:58" pos:end="95:60">[<expr pos:start="95:59" pos:end="95:59"><literal type="number" pos:start="95:59" pos:end="95:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="95:63" pos:end="95:66"><expr pos:start="95:63" pos:end="95:66"><name pos:start="95:63" pos:end="95:66">NULL</name></expr></argument>,

                   <argument pos:start="97:20" pos:end="97:33"><expr pos:start="97:20" pos:end="97:33"><name pos:start="97:20" pos:end="97:33"><name pos:start="97:20" pos:end="97:20">f</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:33">slice_count</name></name></expr></argument>, <argument pos:start="97:36" pos:end="97:49"><expr pos:start="97:36" pos:end="97:49"><sizeof pos:start="97:36" pos:end="97:49">sizeof<argument_list pos:start="97:42" pos:end="97:49">(<argument pos:start="97:43" pos:end="97:48"><expr pos:start="97:43" pos:end="97:48"><name pos:start="97:43" pos:end="97:46">void</name> <operator pos:start="97:48" pos:end="97:48">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:22"><expr pos:start="101:5" pos:end="101:21"><name pos:start="101:5" pos:end="101:9">buf_p</name> <operator pos:start="101:11" pos:end="101:11">=</operator> <name pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:15">pkt</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:21">data</name></name></expr>;</expr_stmt>

    <for pos:start="103:5" pos:end="157:5">for <control pos:start="103:9" pos:end="103:40">(<init pos:start="103:10" pos:end="103:15"><expr pos:start="103:10" pos:end="103:14"><name pos:start="103:10" pos:end="103:10">i</name> <operator pos:start="103:12" pos:end="103:12">=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>;</init> <condition pos:start="103:17" pos:end="103:35"><expr pos:start="103:17" pos:end="103:34"><name pos:start="103:17" pos:end="103:17">i</name> <operator pos:start="103:19" pos:end="103:19">&lt;</operator> <name pos:start="103:21" pos:end="103:34"><name pos:start="103:21" pos:end="103:21">f</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:34">slice_count</name></name></expr>;</condition> <incr pos:start="103:37" pos:end="103:39"><expr pos:start="103:37" pos:end="103:39"><name pos:start="103:37" pos:end="103:37">i</name><operator pos:start="103:38" pos:end="103:39">++</operator></expr></incr>)</control> <block pos:start="103:42" pos:end="157:5">{<block_content pos:start="105:9" pos:end="155:23">

        <decl_stmt pos:start="105:9" pos:end="105:46"><decl pos:start="105:9" pos:end="105:45"><type pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:19">FFV1Context</name> <modifier pos:start="105:21" pos:end="105:21">*</modifier></type><name pos:start="105:22" pos:end="105:23">fs</name> <init pos:start="105:25" pos:end="105:45">= <expr pos:start="105:27" pos:end="105:45"><name pos:start="105:27" pos:end="105:45"><name pos:start="105:27" pos:end="105:27">f</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:42">slice_context</name><index pos:start="105:43" pos:end="105:45">[<expr pos:start="105:44" pos:end="105:44"><name pos:start="105:44" pos:end="105:44">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="107:9" pos:end="107:18"><decl pos:start="107:9" pos:end="107:17"><type pos:start="107:9" pos:end="107:11"><name pos:start="107:9" pos:end="107:11">int</name></type> <name pos:start="107:13" pos:end="107:17">bytes</name></decl>;</decl_stmt>



        <if_stmt pos:start="111:9" pos:end="125:9"><if pos:start="111:9" pos:end="119:9">if <condition pos:start="111:12" pos:end="111:19">(<expr pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:14">fs</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:18">ac</name></name></expr>)</condition> <block pos:start="111:21" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:45">

            <decl_stmt pos:start="113:13" pos:end="113:32"><decl pos:start="113:13" pos:end="113:31"><type pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:19">uint8_t</name></type> <name pos:start="113:21" pos:end="113:25">state</name> <init pos:start="113:27" pos:end="113:31">= <expr pos:start="113:29" pos:end="113:31"><literal type="number" pos:start="113:29" pos:end="113:31">129</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:39"><expr pos:start="115:13" pos:end="115:38"><call pos:start="115:13" pos:end="115:38"><name pos:start="115:13" pos:end="115:19">put_rac</name><argument_list pos:start="115:20" pos:end="115:38">(<argument pos:start="115:21" pos:end="115:26"><expr pos:start="115:21" pos:end="115:26"><operator pos:start="115:21" pos:end="115:21">&amp;</operator><name pos:start="115:22" pos:end="115:26"><name pos:start="115:22" pos:end="115:23">fs</name><operator pos:start="115:24" pos:end="115:25">-&gt;</operator><name pos:start="115:26" pos:end="115:26">c</name></name></expr></argument>, <argument pos:start="115:29" pos:end="115:34"><expr pos:start="115:29" pos:end="115:34"><operator pos:start="115:29" pos:end="115:29">&amp;</operator><name pos:start="115:30" pos:end="115:34">state</name></expr></argument>, <argument pos:start="115:37" pos:end="115:37"><expr pos:start="115:37" pos:end="115:37"><literal type="number" pos:start="115:37" pos:end="115:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:45"><expr pos:start="117:13" pos:end="117:44"><name pos:start="117:13" pos:end="117:17">bytes</name> <operator pos:start="117:19" pos:end="117:19">=</operator> <call pos:start="117:21" pos:end="117:44"><name pos:start="117:21" pos:end="117:36">ff_rac_terminate</name><argument_list pos:start="117:37" pos:end="117:44">(<argument pos:start="117:38" pos:end="117:43"><expr pos:start="117:38" pos:end="117:43"><operator pos:start="117:38" pos:end="117:38">&amp;</operator><name pos:start="117:39" pos:end="117:43"><name pos:start="117:39" pos:end="117:40">fs</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:43">c</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="125:9">else <block pos:start="119:16" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:74">

            <expr_stmt pos:start="121:13" pos:end="121:36"><expr pos:start="121:13" pos:end="121:35"><call pos:start="121:13" pos:end="121:35"><name pos:start="121:13" pos:end="121:26">flush_put_bits</name><argument_list pos:start="121:27" pos:end="121:35">(<argument pos:start="121:28" pos:end="121:34"><expr pos:start="121:28" pos:end="121:34"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:34"><name pos:start="121:29" pos:end="121:30">fs</name><operator pos:start="121:31" pos:end="121:32">-&gt;</operator><name pos:start="121:33" pos:end="121:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="121:38" pos:end="121:60">// FIXME: nicer padding</comment>

            <expr_stmt pos:start="123:13" pos:end="123:74"><expr pos:start="123:13" pos:end="123:73"><name pos:start="123:13" pos:end="123:17">bytes</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:37"><name pos:start="123:21" pos:end="123:22">fs</name><operator pos:start="123:23" pos:end="123:24">-&gt;</operator><name pos:start="123:25" pos:end="123:37">ac_byte_count</name></name> <operator pos:start="123:39" pos:end="123:39">+</operator> <operator pos:start="123:41" pos:end="123:41">(</operator><call pos:start="123:42" pos:end="123:64"><name pos:start="123:42" pos:end="123:55">put_bits_count</name><argument_list pos:start="123:56" pos:end="123:64">(<argument pos:start="123:57" pos:end="123:63"><expr pos:start="123:57" pos:end="123:63"><operator pos:start="123:57" pos:end="123:57">&amp;</operator><name pos:start="123:58" pos:end="123:63"><name pos:start="123:58" pos:end="123:59">fs</name><operator pos:start="123:60" pos:end="123:61">-&gt;</operator><name pos:start="123:62" pos:end="123:63">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="123:66" pos:end="123:66">+</operator> <literal type="number" pos:start="123:68" pos:end="123:68">7</literal><operator pos:start="123:69" pos:end="123:69">)</operator> <operator pos:start="123:71" pos:end="123:71">/</operator> <literal type="number" pos:start="123:73" pos:end="123:73">8</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="127:9" pos:end="139:9"><if pos:start="127:9" pos:end="139:9">if <condition pos:start="127:12" pos:end="127:36">(<expr pos:start="127:13" pos:end="127:35"><name pos:start="127:13" pos:end="127:13">i</name> <operator pos:start="127:15" pos:end="127:15">&gt;</operator> <literal type="number" pos:start="127:17" pos:end="127:17">0</literal> <operator pos:start="127:19" pos:end="127:20">||</operator> <name pos:start="127:22" pos:end="127:31"><name pos:start="127:22" pos:end="127:22">f</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:31">version</name></name> <operator pos:start="127:33" pos:end="127:33">&gt;</operator> <literal type="number" pos:start="127:35" pos:end="127:35">2</literal></expr>)</condition> <block pos:start="127:38" pos:end="139:9">{<block_content pos:start="129:13" pos:end="137:23">

            <expr_stmt pos:start="129:13" pos:end="129:59"><expr pos:start="129:13" pos:end="129:58"><call pos:start="129:13" pos:end="129:58"><name pos:start="129:13" pos:end="129:22">av_assert0</name><argument_list pos:start="129:23" pos:end="129:58">(<argument pos:start="129:24" pos:end="129:57"><expr pos:start="129:24" pos:end="129:57"><name pos:start="129:24" pos:end="129:28">bytes</name> <operator pos:start="129:30" pos:end="129:30">&lt;</operator> <name pos:start="129:32" pos:end="129:40"><name pos:start="129:32" pos:end="129:34">pkt</name><operator pos:start="129:35" pos:end="129:36">-&gt;</operator><name pos:start="129:37" pos:end="129:40">size</name></name> <operator pos:start="129:42" pos:end="129:42">/</operator> <name pos:start="129:44" pos:end="129:57"><name pos:start="129:44" pos:end="129:44">f</name><operator pos:start="129:45" pos:end="129:46">-&gt;</operator><name pos:start="129:47" pos:end="129:57">slice_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:58"><expr pos:start="131:13" pos:end="131:57"><call pos:start="131:13" pos:end="131:57"><name pos:start="131:13" pos:end="131:19">memmove</name><argument_list pos:start="131:20" pos:end="131:57">(<argument pos:start="131:21" pos:end="131:25"><expr pos:start="131:21" pos:end="131:25"><name pos:start="131:21" pos:end="131:25">buf_p</name></expr></argument>, <argument pos:start="131:28" pos:end="131:49"><expr pos:start="131:28" pos:end="131:49"><name pos:start="131:28" pos:end="131:49"><name pos:start="131:28" pos:end="131:29">fs</name><operator pos:start="131:30" pos:end="131:31">-&gt;</operator><name pos:start="131:32" pos:end="131:32">c</name><operator pos:start="131:33" pos:end="131:33">.</operator><name pos:start="131:34" pos:end="131:49">bytestream_start</name></name></expr></argument>, <argument pos:start="131:52" pos:end="131:56"><expr pos:start="131:52" pos:end="131:56"><name pos:start="131:52" pos:end="131:56">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:42"><expr pos:start="133:13" pos:end="133:41"><call pos:start="133:13" pos:end="133:41"><name pos:start="133:13" pos:end="133:22">av_assert0</name><argument_list pos:start="133:23" pos:end="133:41">(<argument pos:start="133:24" pos:end="133:40"><expr pos:start="133:24" pos:end="133:40"><name pos:start="133:24" pos:end="133:28">bytes</name> <operator pos:start="133:30" pos:end="133:30">&lt;</operator> <operator pos:start="133:32" pos:end="133:32">(</operator><literal type="number" pos:start="133:33" pos:end="133:33">1</literal> <operator pos:start="133:35" pos:end="133:36">&lt;&lt;</operator> <literal type="number" pos:start="133:38" pos:end="133:39">24</literal><operator pos:start="133:40" pos:end="133:40">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="135:13" pos:end="135:42"><expr pos:start="135:13" pos:end="135:41"><call pos:start="135:13" pos:end="135:41"><name pos:start="135:13" pos:end="135:19">AV_WB24</name><argument_list pos:start="135:20" pos:end="135:41">(<argument pos:start="135:21" pos:end="135:33"><expr pos:start="135:21" pos:end="135:33"><name pos:start="135:21" pos:end="135:25">buf_p</name> <operator pos:start="135:27" pos:end="135:27">+</operator> <name pos:start="135:29" pos:end="135:33">bytes</name></expr></argument>, <argument pos:start="135:36" pos:end="135:40"><expr pos:start="135:36" pos:end="135:40"><name pos:start="135:36" pos:end="135:40">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="137:13" pos:end="137:23"><expr pos:start="137:13" pos:end="137:22"><name pos:start="137:13" pos:end="137:17">bytes</name> <operator pos:start="137:19" pos:end="137:20">+=</operator> <literal type="number" pos:start="137:22" pos:end="137:22">3</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="141:9" pos:end="153:9"><if pos:start="141:9" pos:end="153:9">if <condition pos:start="141:12" pos:end="141:18">(<expr pos:start="141:13" pos:end="141:17"><name pos:start="141:13" pos:end="141:17"><name pos:start="141:13" pos:end="141:13">f</name><operator pos:start="141:14" pos:end="141:15">-&gt;</operator><name pos:start="141:16" pos:end="141:17">ec</name></name></expr>)</condition> <block pos:start="141:20" pos:end="153:9">{<block_content pos:start="143:13" pos:end="151:23">

            <decl_stmt pos:start="143:13" pos:end="143:23"><decl pos:start="143:13" pos:end="143:22"><type pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:20">unsigned</name></type> <name pos:start="143:22" pos:end="143:22">v</name></decl>;</decl_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:31"><expr pos:start="145:13" pos:end="145:30"><name pos:start="145:13" pos:end="145:26"><name pos:start="145:13" pos:end="145:17">buf_p</name><index pos:start="145:18" pos:end="145:26">[<expr pos:start="145:19" pos:end="145:25"><name pos:start="145:19" pos:end="145:23">bytes</name><operator pos:start="145:24" pos:end="145:25">++</operator></expr>]</index></name> <operator pos:start="145:28" pos:end="145:28">=</operator> <literal type="number" pos:start="145:30" pos:end="145:30">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:74"><expr pos:start="147:13" pos:end="147:73"><name pos:start="147:13" pos:end="147:13">v</name> <operator pos:start="147:15" pos:end="147:15">=</operator> <call pos:start="147:17" pos:end="147:73"><name pos:start="147:17" pos:end="147:22">av_crc</name><argument_list pos:start="147:23" pos:end="147:73">(<argument pos:start="147:24" pos:end="147:55"><expr pos:start="147:24" pos:end="147:55"><call pos:start="147:24" pos:end="147:55"><name pos:start="147:24" pos:end="147:39">av_crc_get_table</name><argument_list pos:start="147:40" pos:end="147:55">(<argument pos:start="147:41" pos:end="147:54"><expr pos:start="147:41" pos:end="147:54"><name pos:start="147:41" pos:end="147:54">AV_CRC_32_IEEE</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="147:58" pos:end="147:58"><expr pos:start="147:58" pos:end="147:58"><literal type="number" pos:start="147:58" pos:end="147:58">0</literal></expr></argument>, <argument pos:start="147:61" pos:end="147:65"><expr pos:start="147:61" pos:end="147:65"><name pos:start="147:61" pos:end="147:65">buf_p</name></expr></argument>, <argument pos:start="147:68" pos:end="147:72"><expr pos:start="147:68" pos:end="147:72"><name pos:start="147:68" pos:end="147:72">bytes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:38"><expr pos:start="149:13" pos:end="149:37"><call pos:start="149:13" pos:end="149:37"><name pos:start="149:13" pos:end="149:19">AV_WL32</name><argument_list pos:start="149:20" pos:end="149:37">(<argument pos:start="149:21" pos:end="149:33"><expr pos:start="149:21" pos:end="149:33"><name pos:start="149:21" pos:end="149:25">buf_p</name> <operator pos:start="149:27" pos:end="149:27">+</operator> <name pos:start="149:29" pos:end="149:33">bytes</name></expr></argument>, <argument pos:start="149:36" pos:end="149:36"><expr pos:start="149:36" pos:end="149:36"><name pos:start="149:36" pos:end="149:36">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:23"><expr pos:start="151:13" pos:end="151:22"><name pos:start="151:13" pos:end="151:17">bytes</name> <operator pos:start="151:19" pos:end="151:20">+=</operator> <literal type="number" pos:start="151:22" pos:end="151:22">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:23"><expr pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:13">buf_p</name> <operator pos:start="155:15" pos:end="155:16">+=</operator> <name pos:start="155:18" pos:end="155:22">bytes</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="161:5" pos:end="248:0"><if pos:start="161:5" pos:end="241:5">if <condition pos:start="161:8" pos:end="161:78">(<expr pos:start="161:9" pos:end="161:77"><operator pos:start="161:9" pos:end="161:9">(</operator><name pos:start="161:10" pos:end="161:21"><name pos:start="161:10" pos:end="161:14">avctx</name><operator pos:start="161:15" pos:end="161:16">-&gt;</operator><name pos:start="161:17" pos:end="161:21">flags</name></name> <operator pos:start="161:23" pos:end="161:23">&amp;</operator> <name pos:start="161:25" pos:end="161:43">AV_CODEC_FLAG_PASS1</name><operator pos:start="161:44" pos:end="161:44">)</operator> <operator pos:start="161:46" pos:end="161:47">&amp;&amp;</operator> <operator pos:start="161:49" pos:end="161:49">(</operator><name pos:start="161:50" pos:end="161:66"><name pos:start="161:50" pos:end="161:50">f</name><operator pos:start="161:51" pos:end="161:52">-&gt;</operator><name pos:start="161:53" pos:end="161:66">picture_number</name></name> <operator pos:start="161:68" pos:end="161:68">&amp;</operator> <literal type="number" pos:start="161:70" pos:end="161:71">31</literal><operator pos:start="161:72" pos:end="161:72">)</operator> <operator pos:start="161:74" pos:end="161:75">==</operator> <literal type="number" pos:start="161:77" pos:end="161:77">0</literal></expr>)</condition> <block pos:start="161:80" pos:end="241:5">{<block_content pos:start="163:9" pos:end="239:51">

        <decl_stmt pos:start="163:9" pos:end="163:20"><decl pos:start="163:9" pos:end="163:13"><type pos:start="163:9" pos:end="163:11"><name pos:start="163:9" pos:end="163:11">int</name></type> <name pos:start="163:13" pos:end="163:13">j</name></decl>, <decl pos:start="163:16" pos:end="163:16"><type ref="prev" pos:start="163:9" pos:end="163:11"/><name pos:start="163:16" pos:end="163:16">k</name></decl>, <decl pos:start="163:19" pos:end="163:19"><type ref="prev" pos:start="163:9" pos:end="163:11"/><name pos:start="163:19" pos:end="163:19">m</name></decl>;</decl_stmt>

        <decl_stmt pos:start="165:9" pos:end="165:37"><decl pos:start="165:9" pos:end="165:36"><type pos:start="165:9" pos:end="165:14"><name pos:start="165:9" pos:end="165:12">char</name> <modifier pos:start="165:14" pos:end="165:14">*</modifier></type><name pos:start="165:15" pos:end="165:15">p</name>   <init pos:start="165:19" pos:end="165:36">= <expr pos:start="165:21" pos:end="165:36"><name pos:start="165:21" pos:end="165:36"><name pos:start="165:21" pos:end="165:25">avctx</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:36">stats_out</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="167:9" pos:end="167:39"><decl pos:start="167:9" pos:end="167:38"><type pos:start="167:9" pos:end="167:14"><name pos:start="167:9" pos:end="167:12">char</name> <modifier pos:start="167:14" pos:end="167:14">*</modifier></type><name pos:start="167:15" pos:end="167:17">end</name> <init pos:start="167:19" pos:end="167:38">= <expr pos:start="167:21" pos:end="167:38"><name pos:start="167:21" pos:end="167:21">p</name> <operator pos:start="167:23" pos:end="167:23">+</operator> <name pos:start="167:25" pos:end="167:38">STATS_OUT_SIZE</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:50"><expr pos:start="171:9" pos:end="171:49"><call pos:start="171:9" pos:end="171:49"><name pos:start="171:9" pos:end="171:14">memset</name><argument_list pos:start="171:15" pos:end="171:49">(<argument pos:start="171:16" pos:end="171:25"><expr pos:start="171:16" pos:end="171:25"><name pos:start="171:16" pos:end="171:25"><name pos:start="171:16" pos:end="171:16">f</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:25">rc_stat</name></name></expr></argument>, <argument pos:start="171:28" pos:end="171:28"><expr pos:start="171:28" pos:end="171:28"><literal type="number" pos:start="171:28" pos:end="171:28">0</literal></expr></argument>, <argument pos:start="171:31" pos:end="171:48"><expr pos:start="171:31" pos:end="171:48"><sizeof pos:start="171:31" pos:end="171:48">sizeof<argument_list pos:start="171:37" pos:end="171:48">(<argument pos:start="171:38" pos:end="171:47"><expr pos:start="171:38" pos:end="171:47"><name pos:start="171:38" pos:end="171:47"><name pos:start="171:38" pos:end="171:38">f</name><operator pos:start="171:39" pos:end="171:40">-&gt;</operator><name pos:start="171:41" pos:end="171:47">rc_stat</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="173:9" pos:end="175:85">for <control pos:start="173:13" pos:end="173:50">(<init pos:start="173:14" pos:end="173:19"><expr pos:start="173:14" pos:end="173:18"><name pos:start="173:14" pos:end="173:14">i</name> <operator pos:start="173:16" pos:end="173:16">=</operator> <literal type="number" pos:start="173:18" pos:end="173:18">0</literal></expr>;</init> <condition pos:start="173:21" pos:end="173:45"><expr pos:start="173:21" pos:end="173:44"><name pos:start="173:21" pos:end="173:21">i</name> <operator pos:start="173:23" pos:end="173:23">&lt;</operator> <name pos:start="173:25" pos:end="173:44"><name pos:start="173:25" pos:end="173:25">f</name><operator pos:start="173:26" pos:end="173:27">-&gt;</operator><name pos:start="173:28" pos:end="173:44">quant_table_count</name></name></expr>;</condition> <incr pos:start="173:47" pos:end="173:49"><expr pos:start="173:47" pos:end="173:49"><name pos:start="173:47" pos:end="173:47">i</name><operator pos:start="173:48" pos:end="173:49">++</operator></expr></incr>)</control><block type="pseudo" pos:start="175:13" pos:end="175:85"><block_content pos:start="175:13" pos:end="175:85">

            <expr_stmt pos:start="175:13" pos:end="175:85"><expr pos:start="175:13" pos:end="175:84"><call pos:start="175:13" pos:end="175:84"><name pos:start="175:13" pos:end="175:18">memset</name><argument_list pos:start="175:19" pos:end="175:84">(<argument pos:start="175:20" pos:end="175:33"><expr pos:start="175:20" pos:end="175:33"><name pos:start="175:20" pos:end="175:33"><name pos:start="175:20" pos:end="175:20">f</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:30">rc_stat2</name><index pos:start="175:31" pos:end="175:33">[<expr pos:start="175:32" pos:end="175:32"><name pos:start="175:32" pos:end="175:32">i</name></expr>]</index></name></expr></argument>, <argument pos:start="175:36" pos:end="175:36"><expr pos:start="175:36" pos:end="175:36"><literal type="number" pos:start="175:36" pos:end="175:36">0</literal></expr></argument>, <argument pos:start="175:39" pos:end="175:83"><expr pos:start="175:39" pos:end="175:83"><name pos:start="175:39" pos:end="175:57"><name pos:start="175:39" pos:end="175:39">f</name><operator pos:start="175:40" pos:end="175:41">-&gt;</operator><name pos:start="175:42" pos:end="175:54">context_count</name><index pos:start="175:55" pos:end="175:57">[<expr pos:start="175:56" pos:end="175:56"><name pos:start="175:56" pos:end="175:56">i</name></expr>]</index></name> <operator pos:start="175:59" pos:end="175:59">*</operator> <sizeof pos:start="175:61" pos:end="175:83">sizeof<argument_list pos:start="175:67" pos:end="175:83">(<argument pos:start="175:68" pos:end="175:82"><expr pos:start="175:68" pos:end="175:82"><operator pos:start="175:68" pos:end="175:68">*</operator><name pos:start="175:69" pos:end="175:82"><name pos:start="175:69" pos:end="175:69">f</name><operator pos:start="175:70" pos:end="175:71">-&gt;</operator><name pos:start="175:72" pos:end="175:79">rc_stat2</name><index pos:start="175:80" pos:end="175:82">[<expr pos:start="175:81" pos:end="175:81"><name pos:start="175:81" pos:end="175:81">i</name></expr>]</index></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <for pos:start="179:9" pos:end="205:9">for <control pos:start="179:13" pos:end="179:44">(<init pos:start="179:14" pos:end="179:19"><expr pos:start="179:14" pos:end="179:18"><name pos:start="179:14" pos:end="179:14">j</name> <operator pos:start="179:16" pos:end="179:16">=</operator> <literal type="number" pos:start="179:18" pos:end="179:18">0</literal></expr>;</init> <condition pos:start="179:21" pos:end="179:39"><expr pos:start="179:21" pos:end="179:38"><name pos:start="179:21" pos:end="179:21">j</name> <operator pos:start="179:23" pos:end="179:23">&lt;</operator> <name pos:start="179:25" pos:end="179:38"><name pos:start="179:25" pos:end="179:25">f</name><operator pos:start="179:26" pos:end="179:27">-&gt;</operator><name pos:start="179:28" pos:end="179:38">slice_count</name></name></expr>;</condition> <incr pos:start="179:41" pos:end="179:43"><expr pos:start="179:41" pos:end="179:43"><name pos:start="179:41" pos:end="179:41">j</name><operator pos:start="179:42" pos:end="179:43">++</operator></expr></incr>)</control> <block pos:start="179:46" pos:end="205:9">{<block_content pos:start="181:13" pos:end="203:13">

            <decl_stmt pos:start="181:13" pos:end="181:50"><decl pos:start="181:13" pos:end="181:49"><type pos:start="181:13" pos:end="181:25"><name pos:start="181:13" pos:end="181:23">FFV1Context</name> <modifier pos:start="181:25" pos:end="181:25">*</modifier></type><name pos:start="181:26" pos:end="181:27">fs</name> <init pos:start="181:29" pos:end="181:49">= <expr pos:start="181:31" pos:end="181:49"><name pos:start="181:31" pos:end="181:49"><name pos:start="181:31" pos:end="181:31">f</name><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:46">slice_context</name><index pos:start="181:47" pos:end="181:49">[<expr pos:start="181:48" pos:end="181:48"><name pos:start="181:48" pos:end="181:48">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <for pos:start="183:13" pos:end="189:13">for <control pos:start="183:17" pos:end="183:37">(<init pos:start="183:18" pos:end="183:23"><expr pos:start="183:18" pos:end="183:22"><name pos:start="183:18" pos:end="183:18">i</name> <operator pos:start="183:20" pos:end="183:20">=</operator> <literal type="number" pos:start="183:22" pos:end="183:22">0</literal></expr>;</init> <condition pos:start="183:25" pos:end="183:32"><expr pos:start="183:25" pos:end="183:31"><name pos:start="183:25" pos:end="183:25">i</name> <operator pos:start="183:27" pos:end="183:27">&lt;</operator> <literal type="number" pos:start="183:29" pos:end="183:31">256</literal></expr>;</condition> <incr pos:start="183:34" pos:end="183:36"><expr pos:start="183:34" pos:end="183:36"><name pos:start="183:34" pos:end="183:34">i</name><operator pos:start="183:35" pos:end="183:36">++</operator></expr></incr>)</control> <block pos:start="183:39" pos:end="189:13">{<block_content pos:start="185:17" pos:end="187:54">

                <expr_stmt pos:start="185:17" pos:end="185:54"><expr pos:start="185:17" pos:end="185:53"><name pos:start="185:17" pos:end="185:32"><name pos:start="185:17" pos:end="185:17">f</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:26">rc_stat</name><index pos:start="185:27" pos:end="185:29">[<expr pos:start="185:28" pos:end="185:28"><name pos:start="185:28" pos:end="185:28">i</name></expr>]</index><index pos:start="185:30" pos:end="185:32">[<expr pos:start="185:31" pos:end="185:31"><literal type="number" pos:start="185:31" pos:end="185:31">0</literal></expr>]</index></name> <operator pos:start="185:34" pos:end="185:35">+=</operator> <name pos:start="185:37" pos:end="185:53"><name pos:start="185:37" pos:end="185:38">fs</name><operator pos:start="185:39" pos:end="185:40">-&gt;</operator><name pos:start="185:41" pos:end="185:47">rc_stat</name><index pos:start="185:48" pos:end="185:50">[<expr pos:start="185:49" pos:end="185:49"><name pos:start="185:49" pos:end="185:49">i</name></expr>]</index><index pos:start="185:51" pos:end="185:53">[<expr pos:start="185:52" pos:end="185:52"><literal type="number" pos:start="185:52" pos:end="185:52">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="187:17" pos:end="187:54"><expr pos:start="187:17" pos:end="187:53"><name pos:start="187:17" pos:end="187:32"><name pos:start="187:17" pos:end="187:17">f</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:26">rc_stat</name><index pos:start="187:27" pos:end="187:29">[<expr pos:start="187:28" pos:end="187:28"><name pos:start="187:28" pos:end="187:28">i</name></expr>]</index><index pos:start="187:30" pos:end="187:32">[<expr pos:start="187:31" pos:end="187:31"><literal type="number" pos:start="187:31" pos:end="187:31">1</literal></expr>]</index></name> <operator pos:start="187:34" pos:end="187:35">+=</operator> <name pos:start="187:37" pos:end="187:53"><name pos:start="187:37" pos:end="187:38">fs</name><operator pos:start="187:39" pos:end="187:40">-&gt;</operator><name pos:start="187:41" pos:end="187:47">rc_stat</name><index pos:start="187:48" pos:end="187:50">[<expr pos:start="187:49" pos:end="187:49"><name pos:start="187:49" pos:end="187:49">i</name></expr>]</index><index pos:start="187:51" pos:end="187:53">[<expr pos:start="187:52" pos:end="187:52"><literal type="number" pos:start="187:52" pos:end="187:52">1</literal></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="191:13" pos:end="203:13">for <control pos:start="191:17" pos:end="191:54">(<init pos:start="191:18" pos:end="191:23"><expr pos:start="191:18" pos:end="191:22"><name pos:start="191:18" pos:end="191:18">i</name> <operator pos:start="191:20" pos:end="191:20">=</operator> <literal type="number" pos:start="191:22" pos:end="191:22">0</literal></expr>;</init> <condition pos:start="191:25" pos:end="191:49"><expr pos:start="191:25" pos:end="191:48"><name pos:start="191:25" pos:end="191:25">i</name> <operator pos:start="191:27" pos:end="191:27">&lt;</operator> <name pos:start="191:29" pos:end="191:48"><name pos:start="191:29" pos:end="191:29">f</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:48">quant_table_count</name></name></expr>;</condition> <incr pos:start="191:51" pos:end="191:53"><expr pos:start="191:51" pos:end="191:53"><name pos:start="191:51" pos:end="191:51">i</name><operator pos:start="191:52" pos:end="191:53">++</operator></expr></incr>)</control> <block pos:start="191:56" pos:end="203:13">{<block_content pos:start="193:17" pos:end="201:21">

                <for pos:start="193:17" pos:end="201:21">for <control pos:start="193:21" pos:end="193:57">(<init pos:start="193:22" pos:end="193:27"><expr pos:start="193:22" pos:end="193:26"><name pos:start="193:22" pos:end="193:22">k</name> <operator pos:start="193:24" pos:end="193:24">=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">0</literal></expr>;</init> <condition pos:start="193:29" pos:end="193:52"><expr pos:start="193:29" pos:end="193:51"><name pos:start="193:29" pos:end="193:29">k</name> <operator pos:start="193:31" pos:end="193:31">&lt;</operator> <name pos:start="193:33" pos:end="193:51"><name pos:start="193:33" pos:end="193:33">f</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:48">context_count</name><index pos:start="193:49" pos:end="193:51">[<expr pos:start="193:50" pos:end="193:50"><name pos:start="193:50" pos:end="193:50">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="193:54" pos:end="193:56"><expr pos:start="193:54" pos:end="193:56"><name pos:start="193:54" pos:end="193:54">k</name><operator pos:start="193:55" pos:end="193:56">++</operator></expr></incr>)</control><block type="pseudo" pos:start="195:21" pos:end="201:21"><block_content pos:start="195:21" pos:end="201:21">

                    <for pos:start="195:21" pos:end="201:21">for <control pos:start="195:25" pos:end="195:44">(<init pos:start="195:26" pos:end="195:31"><expr pos:start="195:26" pos:end="195:30"><name pos:start="195:26" pos:end="195:26">m</name> <operator pos:start="195:28" pos:end="195:28">=</operator> <literal type="number" pos:start="195:30" pos:end="195:30">0</literal></expr>;</init> <condition pos:start="195:33" pos:end="195:39"><expr pos:start="195:33" pos:end="195:38"><name pos:start="195:33" pos:end="195:33">m</name> <operator pos:start="195:35" pos:end="195:35">&lt;</operator> <literal type="number" pos:start="195:37" pos:end="195:38">32</literal></expr>;</condition> <incr pos:start="195:41" pos:end="195:43"><expr pos:start="195:41" pos:end="195:43"><name pos:start="195:41" pos:end="195:41">m</name><operator pos:start="195:42" pos:end="195:43">++</operator></expr></incr>)</control> <block pos:start="195:46" pos:end="201:21">{<block_content pos:start="197:25" pos:end="199:76">

                        <expr_stmt pos:start="197:25" pos:end="197:76"><expr pos:start="197:25" pos:end="197:75"><name pos:start="197:25" pos:end="197:47"><name pos:start="197:25" pos:end="197:25">f</name><operator pos:start="197:26" pos:end="197:27">-&gt;</operator><name pos:start="197:28" pos:end="197:35">rc_stat2</name><index pos:start="197:36" pos:end="197:38">[<expr pos:start="197:37" pos:end="197:37"><name pos:start="197:37" pos:end="197:37">i</name></expr>]</index><index pos:start="197:39" pos:end="197:41">[<expr pos:start="197:40" pos:end="197:40"><name pos:start="197:40" pos:end="197:40">k</name></expr>]</index><index pos:start="197:42" pos:end="197:44">[<expr pos:start="197:43" pos:end="197:43"><name pos:start="197:43" pos:end="197:43">m</name></expr>]</index><index pos:start="197:45" pos:end="197:47">[<expr pos:start="197:46" pos:end="197:46"><literal type="number" pos:start="197:46" pos:end="197:46">0</literal></expr>]</index></name> <operator pos:start="197:49" pos:end="197:50">+=</operator> <name pos:start="197:52" pos:end="197:75"><name pos:start="197:52" pos:end="197:53">fs</name><operator pos:start="197:54" pos:end="197:55">-&gt;</operator><name pos:start="197:56" pos:end="197:63">rc_stat2</name><index pos:start="197:64" pos:end="197:66">[<expr pos:start="197:65" pos:end="197:65"><name pos:start="197:65" pos:end="197:65">i</name></expr>]</index><index pos:start="197:67" pos:end="197:69">[<expr pos:start="197:68" pos:end="197:68"><name pos:start="197:68" pos:end="197:68">k</name></expr>]</index><index pos:start="197:70" pos:end="197:72">[<expr pos:start="197:71" pos:end="197:71"><name pos:start="197:71" pos:end="197:71">m</name></expr>]</index><index pos:start="197:73" pos:end="197:75">[<expr pos:start="197:74" pos:end="197:74"><literal type="number" pos:start="197:74" pos:end="197:74">0</literal></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:76"><expr pos:start="199:25" pos:end="199:75"><name pos:start="199:25" pos:end="199:47"><name pos:start="199:25" pos:end="199:25">f</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:35">rc_stat2</name><index pos:start="199:36" pos:end="199:38">[<expr pos:start="199:37" pos:end="199:37"><name pos:start="199:37" pos:end="199:37">i</name></expr>]</index><index pos:start="199:39" pos:end="199:41">[<expr pos:start="199:40" pos:end="199:40"><name pos:start="199:40" pos:end="199:40">k</name></expr>]</index><index pos:start="199:42" pos:end="199:44">[<expr pos:start="199:43" pos:end="199:43"><name pos:start="199:43" pos:end="199:43">m</name></expr>]</index><index pos:start="199:45" pos:end="199:47">[<expr pos:start="199:46" pos:end="199:46"><literal type="number" pos:start="199:46" pos:end="199:46">1</literal></expr>]</index></name> <operator pos:start="199:49" pos:end="199:50">+=</operator> <name pos:start="199:52" pos:end="199:75"><name pos:start="199:52" pos:end="199:53">fs</name><operator pos:start="199:54" pos:end="199:55">-&gt;</operator><name pos:start="199:56" pos:end="199:63">rc_stat2</name><index pos:start="199:64" pos:end="199:66">[<expr pos:start="199:65" pos:end="199:65"><name pos:start="199:65" pos:end="199:65">i</name></expr>]</index><index pos:start="199:67" pos:end="199:69">[<expr pos:start="199:68" pos:end="199:68"><name pos:start="199:68" pos:end="199:68">k</name></expr>]</index><index pos:start="199:70" pos:end="199:72">[<expr pos:start="199:71" pos:end="199:71"><name pos:start="199:71" pos:end="199:71">m</name></expr>]</index><index pos:start="199:73" pos:end="199:75">[<expr pos:start="199:74" pos:end="199:74"><literal type="number" pos:start="199:74" pos:end="199:74">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for></block_content></block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>



        <for pos:start="209:9" pos:end="217:9">for <control pos:start="209:13" pos:end="209:33">(<init pos:start="209:14" pos:end="209:19"><expr pos:start="209:14" pos:end="209:18"><name pos:start="209:14" pos:end="209:14">j</name> <operator pos:start="209:16" pos:end="209:16">=</operator> <literal type="number" pos:start="209:18" pos:end="209:18">0</literal></expr>;</init> <condition pos:start="209:21" pos:end="209:28"><expr pos:start="209:21" pos:end="209:27"><name pos:start="209:21" pos:end="209:21">j</name> <operator pos:start="209:23" pos:end="209:23">&lt;</operator> <literal type="number" pos:start="209:25" pos:end="209:27">256</literal></expr>;</condition> <incr pos:start="209:30" pos:end="209:32"><expr pos:start="209:30" pos:end="209:32"><name pos:start="209:30" pos:end="209:30">j</name><operator pos:start="209:31" pos:end="209:32">++</operator></expr></incr>)</control> <block pos:start="209:35" pos:end="217:9">{<block_content pos:start="211:13" pos:end="215:27">

            <expr_stmt pos:start="211:13" pos:end="213:57"><expr pos:start="211:13" pos:end="213:56"><call pos:start="211:13" pos:end="213:56"><name pos:start="211:13" pos:end="211:20">snprintf</name><argument_list pos:start="211:21" pos:end="213:56">(<argument pos:start="211:22" pos:end="211:22"><expr pos:start="211:22" pos:end="211:22"><name pos:start="211:22" pos:end="211:22">p</name></expr></argument>, <argument pos:start="211:25" pos:end="211:31"><expr pos:start="211:25" pos:end="211:31"><name pos:start="211:25" pos:end="211:27">end</name> <operator pos:start="211:29" pos:end="211:29">-</operator> <name pos:start="211:31" pos:end="211:31">p</name></expr></argument>, <argument pos:start="211:34" pos:end="211:59"><expr pos:start="211:34" pos:end="211:59"><literal type="string" pos:start="211:34" pos:end="211:36">"%"</literal> <name pos:start="211:38" pos:end="211:43">PRIu64</name> <literal type="string" pos:start="211:45" pos:end="211:48">" %"</literal> <name pos:start="211:50" pos:end="211:55">PRIu64</name> <literal type="string" pos:start="211:57" pos:end="211:59">" "</literal></expr></argument>,

                     <argument pos:start="213:22" pos:end="213:37"><expr pos:start="213:22" pos:end="213:37"><name pos:start="213:22" pos:end="213:37"><name pos:start="213:22" pos:end="213:22">f</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:31">rc_stat</name><index pos:start="213:32" pos:end="213:34">[<expr pos:start="213:33" pos:end="213:33"><name pos:start="213:33" pos:end="213:33">j</name></expr>]</index><index pos:start="213:35" pos:end="213:37">[<expr pos:start="213:36" pos:end="213:36"><literal type="number" pos:start="213:36" pos:end="213:36">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="213:40" pos:end="213:55"><expr pos:start="213:40" pos:end="213:55"><name pos:start="213:40" pos:end="213:55"><name pos:start="213:40" pos:end="213:40">f</name><operator pos:start="213:41" pos:end="213:42">-&gt;</operator><name pos:start="213:43" pos:end="213:49">rc_stat</name><index pos:start="213:50" pos:end="213:52">[<expr pos:start="213:51" pos:end="213:51"><name pos:start="213:51" pos:end="213:51">j</name></expr>]</index><index pos:start="213:53" pos:end="213:55">[<expr pos:start="213:54" pos:end="213:54"><literal type="number" pos:start="213:54" pos:end="213:54">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:27"><expr pos:start="215:13" pos:end="215:26"><name pos:start="215:13" pos:end="215:13">p</name> <operator pos:start="215:15" pos:end="215:16">+=</operator> <call pos:start="215:18" pos:end="215:26"><name pos:start="215:18" pos:end="215:23">strlen</name><argument_list pos:start="215:24" pos:end="215:26">(<argument pos:start="215:25" pos:end="215:25"><expr pos:start="215:25" pos:end="215:25"><name pos:start="215:25" pos:end="215:25">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="219:9" pos:end="219:35"><expr pos:start="219:9" pos:end="219:34"><call pos:start="219:9" pos:end="219:34"><name pos:start="219:9" pos:end="219:16">snprintf</name><argument_list pos:start="219:17" pos:end="219:34">(<argument pos:start="219:18" pos:end="219:18"><expr pos:start="219:18" pos:end="219:18"><name pos:start="219:18" pos:end="219:18">p</name></expr></argument>, <argument pos:start="219:21" pos:end="219:27"><expr pos:start="219:21" pos:end="219:27"><name pos:start="219:21" pos:end="219:23">end</name> <operator pos:start="219:25" pos:end="219:25">-</operator> <name pos:start="219:27" pos:end="219:27">p</name></expr></argument>, <argument pos:start="219:30" pos:end="219:33"><expr pos:start="219:30" pos:end="219:33"><literal type="string" pos:start="219:30" pos:end="219:33">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="223:9" pos:end="237:9">for <control pos:start="223:13" pos:end="223:50">(<init pos:start="223:14" pos:end="223:19"><expr pos:start="223:14" pos:end="223:18"><name pos:start="223:14" pos:end="223:14">i</name> <operator pos:start="223:16" pos:end="223:16">=</operator> <literal type="number" pos:start="223:18" pos:end="223:18">0</literal></expr>;</init> <condition pos:start="223:21" pos:end="223:45"><expr pos:start="223:21" pos:end="223:44"><name pos:start="223:21" pos:end="223:21">i</name> <operator pos:start="223:23" pos:end="223:23">&lt;</operator> <name pos:start="223:25" pos:end="223:44"><name pos:start="223:25" pos:end="223:25">f</name><operator pos:start="223:26" pos:end="223:27">-&gt;</operator><name pos:start="223:28" pos:end="223:44">quant_table_count</name></name></expr>;</condition> <incr pos:start="223:47" pos:end="223:49"><expr pos:start="223:47" pos:end="223:49"><name pos:start="223:47" pos:end="223:47">i</name><operator pos:start="223:48" pos:end="223:49">++</operator></expr></incr>)</control> <block pos:start="223:52" pos:end="237:9">{<block_content pos:start="225:13" pos:end="235:17">

            <for pos:start="225:13" pos:end="235:17">for <control pos:start="225:17" pos:end="225:53">(<init pos:start="225:18" pos:end="225:23"><expr pos:start="225:18" pos:end="225:22"><name pos:start="225:18" pos:end="225:18">j</name> <operator pos:start="225:20" pos:end="225:20">=</operator> <literal type="number" pos:start="225:22" pos:end="225:22">0</literal></expr>;</init> <condition pos:start="225:25" pos:end="225:48"><expr pos:start="225:25" pos:end="225:47"><name pos:start="225:25" pos:end="225:25">j</name> <operator pos:start="225:27" pos:end="225:27">&lt;</operator> <name pos:start="225:29" pos:end="225:47"><name pos:start="225:29" pos:end="225:29">f</name><operator pos:start="225:30" pos:end="225:31">-&gt;</operator><name pos:start="225:32" pos:end="225:44">context_count</name><index pos:start="225:45" pos:end="225:47">[<expr pos:start="225:46" pos:end="225:46"><name pos:start="225:46" pos:end="225:46">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="225:50" pos:end="225:52"><expr pos:start="225:50" pos:end="225:52"><name pos:start="225:50" pos:end="225:50">j</name><operator pos:start="225:51" pos:end="225:52">++</operator></expr></incr>)</control><block type="pseudo" pos:start="227:17" pos:end="235:17"><block_content pos:start="227:17" pos:end="235:17">

                <for pos:start="227:17" pos:end="235:17">for <control pos:start="227:21" pos:end="227:40">(<init pos:start="227:22" pos:end="227:27"><expr pos:start="227:22" pos:end="227:26"><name pos:start="227:22" pos:end="227:22">m</name> <operator pos:start="227:24" pos:end="227:24">=</operator> <literal type="number" pos:start="227:26" pos:end="227:26">0</literal></expr>;</init> <condition pos:start="227:29" pos:end="227:35"><expr pos:start="227:29" pos:end="227:34"><name pos:start="227:29" pos:end="227:29">m</name> <operator pos:start="227:31" pos:end="227:31">&lt;</operator> <literal type="number" pos:start="227:33" pos:end="227:34">32</literal></expr>;</condition> <incr pos:start="227:37" pos:end="227:39"><expr pos:start="227:37" pos:end="227:39"><name pos:start="227:37" pos:end="227:37">m</name><operator pos:start="227:38" pos:end="227:39">++</operator></expr></incr>)</control> <block pos:start="227:42" pos:end="235:17">{<block_content pos:start="229:21" pos:end="233:35">

                    <expr_stmt pos:start="229:21" pos:end="231:79"><expr pos:start="229:21" pos:end="231:78"><call pos:start="229:21" pos:end="231:78"><name pos:start="229:21" pos:end="229:28">snprintf</name><argument_list pos:start="229:29" pos:end="231:78">(<argument pos:start="229:30" pos:end="229:30"><expr pos:start="229:30" pos:end="229:30"><name pos:start="229:30" pos:end="229:30">p</name></expr></argument>, <argument pos:start="229:33" pos:end="229:39"><expr pos:start="229:33" pos:end="229:39"><name pos:start="229:33" pos:end="229:35">end</name> <operator pos:start="229:37" pos:end="229:37">-</operator> <name pos:start="229:39" pos:end="229:39">p</name></expr></argument>, <argument pos:start="229:42" pos:end="229:67"><expr pos:start="229:42" pos:end="229:67"><literal type="string" pos:start="229:42" pos:end="229:44">"%"</literal> <name pos:start="229:46" pos:end="229:51">PRIu64</name> <literal type="string" pos:start="229:53" pos:end="229:56">" %"</literal> <name pos:start="229:58" pos:end="229:63">PRIu64</name> <literal type="string" pos:start="229:65" pos:end="229:67">" "</literal></expr></argument>,

                             <argument pos:start="231:30" pos:end="231:52"><expr pos:start="231:30" pos:end="231:52"><name pos:start="231:30" pos:end="231:52"><name pos:start="231:30" pos:end="231:30">f</name><operator pos:start="231:31" pos:end="231:32">-&gt;</operator><name pos:start="231:33" pos:end="231:40">rc_stat2</name><index pos:start="231:41" pos:end="231:43">[<expr pos:start="231:42" pos:end="231:42"><name pos:start="231:42" pos:end="231:42">i</name></expr>]</index><index pos:start="231:44" pos:end="231:46">[<expr pos:start="231:45" pos:end="231:45"><name pos:start="231:45" pos:end="231:45">j</name></expr>]</index><index pos:start="231:47" pos:end="231:49">[<expr pos:start="231:48" pos:end="231:48"><name pos:start="231:48" pos:end="231:48">m</name></expr>]</index><index pos:start="231:50" pos:end="231:52">[<expr pos:start="231:51" pos:end="231:51"><literal type="number" pos:start="231:51" pos:end="231:51">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="231:55" pos:end="231:77"><expr pos:start="231:55" pos:end="231:77"><name pos:start="231:55" pos:end="231:77"><name pos:start="231:55" pos:end="231:55">f</name><operator pos:start="231:56" pos:end="231:57">-&gt;</operator><name pos:start="231:58" pos:end="231:65">rc_stat2</name><index pos:start="231:66" pos:end="231:68">[<expr pos:start="231:67" pos:end="231:67"><name pos:start="231:67" pos:end="231:67">i</name></expr>]</index><index pos:start="231:69" pos:end="231:71">[<expr pos:start="231:70" pos:end="231:70"><name pos:start="231:70" pos:end="231:70">j</name></expr>]</index><index pos:start="231:72" pos:end="231:74">[<expr pos:start="231:73" pos:end="231:73"><name pos:start="231:73" pos:end="231:73">m</name></expr>]</index><index pos:start="231:75" pos:end="231:77">[<expr pos:start="231:76" pos:end="231:76"><literal type="number" pos:start="231:76" pos:end="231:76">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="233:21" pos:end="233:35"><expr pos:start="233:21" pos:end="233:34"><name pos:start="233:21" pos:end="233:21">p</name> <operator pos:start="233:23" pos:end="233:24">+=</operator> <call pos:start="233:26" pos:end="233:34"><name pos:start="233:26" pos:end="233:31">strlen</name><argument_list pos:start="233:32" pos:end="233:34">(<argument pos:start="233:33" pos:end="233:33"><expr pos:start="233:33" pos:end="233:33"><name pos:start="233:33" pos:end="233:33">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for></block_content></block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="239:9" pos:end="239:51"><expr pos:start="239:9" pos:end="239:50"><call pos:start="239:9" pos:end="239:50"><name pos:start="239:9" pos:end="239:16">snprintf</name><argument_list pos:start="239:17" pos:end="239:50">(<argument pos:start="239:18" pos:end="239:18"><expr pos:start="239:18" pos:end="239:18"><name pos:start="239:18" pos:end="239:18">p</name></expr></argument>, <argument pos:start="239:21" pos:end="239:27"><expr pos:start="239:21" pos:end="239:27"><name pos:start="239:21" pos:end="239:23">end</name> <operator pos:start="239:25" pos:end="239:25">-</operator> <name pos:start="239:27" pos:end="239:27">p</name></expr></argument>, <argument pos:start="239:30" pos:end="239:35"><expr pos:start="239:30" pos:end="239:35"><literal type="string" pos:start="239:30" pos:end="239:35">"%d\n"</literal></expr></argument>, <argument pos:start="239:38" pos:end="239:49"><expr pos:start="239:38" pos:end="239:49"><name pos:start="239:38" pos:end="239:49"><name pos:start="239:38" pos:end="239:38">f</name><operator pos:start="239:39" pos:end="239:40">-&gt;</operator><name pos:start="239:41" pos:end="239:49">gob_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="241:7" pos:end="248:0">else if <condition pos:start="241:15" pos:end="241:50">(<expr pos:start="241:16" pos:end="241:49"><name pos:start="241:16" pos:end="241:27"><name pos:start="241:16" pos:end="241:20">avctx</name><operator pos:start="241:21" pos:end="241:22">-&gt;</operator><name pos:start="241:23" pos:end="241:27">flags</name></name> <operator pos:start="241:29" pos:end="241:29">&amp;</operator> <name pos:start="241:31" pos:end="241:49">AV_CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="243:9" pos:end="248:0"><block_content pos:start="243:9" pos:end="248:0">

        <expr_stmt pos:start="243:9" pos:end="248:0"><expr pos:start="243:9" pos:end="243:34"><name pos:start="243:9" pos:end="243:27"><name pos:start="243:9" pos:end="243:13">avctx</name><operator pos:start="243:14" pos:end="243:15">-&gt;</operator><name pos:start="243:16" pos:end="243:24">stats_out</name><index pos:start="243:25" pos:end="243:27">[<expr pos:start="243:26" pos:end="243:26"><literal type="number" pos:start="243:26" pos:end="243:26">0</literal></expr>]</index></name> <operator pos:start="243:29" pos:end="243:29">=</operator> <literal type="char" pos:start="243:31" pos:end="243:34">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="247:1" pos:end="247:22">#<cpp:directive pos:start="247:2" pos:end="247:3">if</cpp:directive> <expr pos:start="247:5" pos:end="247:22"><name pos:start="247:5" pos:end="247:22">FF_API_CODED_FRAME</name></expr></cpp:if>

<decl_stmt pos:start="249:1" pos:end="251:49"><decl pos:start="249:1" pos:end="251:48"><type pos:start="249:1" pos:end="249:31"><name pos:start="249:1" pos:end="249:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

    <name pos:start="251:5" pos:end="251:33"><name pos:start="251:5" pos:end="251:9">avctx</name><operator pos:start="251:10" pos:end="251:11">-&gt;</operator><name pos:start="251:12" pos:end="251:22">coded_frame</name><operator pos:start="251:23" pos:end="251:24">-&gt;</operator><name pos:start="251:25" pos:end="251:33">key_frame</name></name> <init pos:start="251:35" pos:end="251:48">= <expr pos:start="251:37" pos:end="251:48"><name pos:start="251:37" pos:end="251:48"><name pos:start="251:37" pos:end="251:37">f</name><operator pos:start="251:38" pos:end="251:39">-&gt;</operator><name pos:start="251:40" pos:end="251:48">key_frame</name></name></expr></init></decl>;</decl_stmt>

<expr_stmt pos:start="253:1" pos:end="259:24"><expr pos:start="253:1" pos:end="259:23"><name pos:start="253:1" pos:end="256:0">FF_ENABLE_DEPRECATION_WARNINGS</name>

<cpp:endif pos:start="255:1" pos:end="255:6">#<cpp:directive pos:start="255:2" pos:end="255:6">endif</cpp:directive></cpp:endif>



    <name pos:start="259:5" pos:end="259:21"><name pos:start="259:5" pos:end="259:5">f</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:21">picture_number</name></name><operator pos:start="259:22" pos:end="259:23">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:36"><expr pos:start="261:5" pos:end="261:35"><name pos:start="261:5" pos:end="261:13"><name pos:start="261:5" pos:end="261:7">pkt</name><operator pos:start="261:8" pos:end="261:9">-&gt;</operator><name pos:start="261:10" pos:end="261:13">size</name></name>   <operator pos:start="261:17" pos:end="261:17">=</operator> <name pos:start="261:19" pos:end="261:23">buf_p</name> <operator pos:start="261:25" pos:end="261:25">-</operator> <name pos:start="261:27" pos:end="261:35"><name pos:start="261:27" pos:end="261:29">pkt</name><operator pos:start="261:30" pos:end="261:31">-&gt;</operator><name pos:start="261:32" pos:end="261:35">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:49"><expr pos:start="263:5" pos:end="263:48"><name pos:start="263:5" pos:end="263:14"><name pos:start="263:5" pos:end="263:7">pkt</name><operator pos:start="263:8" pos:end="263:9">-&gt;</operator><name pos:start="263:10" pos:end="263:14">flags</name></name> <operator pos:start="263:16" pos:end="263:17">|=</operator> <name pos:start="263:19" pos:end="263:33">AV_PKT_FLAG_KEY</name> <operator pos:start="263:35" pos:end="263:35">*</operator> <name pos:start="263:37" pos:end="263:48"><name pos:start="263:37" pos:end="263:37">f</name><operator pos:start="263:38" pos:end="263:39">-&gt;</operator><name pos:start="263:40" pos:end="263:48">key_frame</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="265:5" pos:end="265:20"><expr pos:start="265:5" pos:end="265:19"><operator pos:start="265:5" pos:end="265:5">*</operator><name pos:start="265:6" pos:end="265:15">got_packet</name> <operator pos:start="265:17" pos:end="265:17">=</operator> <literal type="number" pos:start="265:19" pos:end="265:19">1</literal></expr>;</expr_stmt>



    <return pos:start="269:5" pos:end="269:13">return <expr pos:start="269:12" pos:end="269:12"><literal type="number" pos:start="269:12" pos:end="269:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
