<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22470.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">hwaddr</name></type> <name pos:start="1:15" pos:end="1:36">ppc_hash64_pteg_search</name><parameter_list pos:start="1:37" pos:end="7:77">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:47">PowerPCCPU</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:52">cpu</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:65"><decl pos:start="1:55" pos:end="1:65"><type pos:start="1:55" pos:end="1:65"><name pos:start="1:55" pos:end="1:60">hwaddr</name></type> <name pos:start="1:62" pos:end="1:65">hash</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:76"><decl pos:start="3:38" pos:end="3:76"><type pos:start="3:38" pos:end="3:76"><specifier pos:start="3:38" pos:end="3:42">const</specifier> <name pos:start="3:44" pos:end="3:71"><name pos:start="3:44" pos:end="3:49">struct</name> <name pos:start="3:51" pos:end="3:71">ppc_one_seg_page_size</name></name> <modifier pos:start="3:73" pos:end="3:73">*</modifier></type><name pos:start="3:74" pos:end="3:76">sps</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:54"><decl pos:start="5:38" pos:end="5:54"><type pos:start="5:38" pos:end="5:54"><name pos:start="5:38" pos:end="5:49">target_ulong</name></type> <name pos:start="5:51" pos:end="5:54">ptem</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:58"><decl pos:start="7:38" pos:end="7:58"><type pos:start="7:38" pos:end="7:58"><name pos:start="7:38" pos:end="7:53">ppc_hash_pte64_t</name> <modifier pos:start="7:55" pos:end="7:55">*</modifier></type><name pos:start="7:56" pos:end="7:58">pte</name></decl></parameter>, <parameter pos:start="7:61" pos:end="7:76"><decl pos:start="7:61" pos:end="7:76"><type pos:start="7:61" pos:end="7:76"><name pos:start="7:61" pos:end="7:68">unsigned</name> <modifier pos:start="7:70" pos:end="7:70">*</modifier></type><name pos:start="7:71" pos:end="7:76">pshift</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="95:1">{<block_content pos:start="11:5" pos:end="93:14">

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">CPUPPCState</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">env</name> <init pos:start="11:22" pos:end="11:32">= <expr pos:start="11:24" pos:end="11:32"><operator pos:start="11:24" pos:end="11:24">&amp;</operator><name pos:start="11:25" pos:end="11:32"><name pos:start="11:25" pos:end="11:27">cpu</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:32">env</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:33"><decl pos:start="15:5" pos:end="15:32"><type pos:start="15:5" pos:end="15:28"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:26">ppc_hash_pte64_t</name> <modifier pos:start="15:28" pos:end="15:28">*</modifier></type><name pos:start="15:29" pos:end="15:32">pteg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:16">target_ulong</name></type> <name pos:start="17:18" pos:end="17:21">pte0</name></decl>, <decl pos:start="17:24" pos:end="17:27"><type ref="prev" pos:start="17:5" pos:end="17:16"/><name pos:start="17:24" pos:end="17:27">pte1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">target_ulong</name></type> <name pos:start="19:18" pos:end="19:21">ptex</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:53"><expr pos:start="23:5" pos:end="23:52"><name pos:start="23:5" pos:end="23:8">ptex</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <operator pos:start="23:12" pos:end="23:12">(</operator><name pos:start="23:13" pos:end="23:16">hash</name> <operator pos:start="23:18" pos:end="23:18">&amp;</operator> <name pos:start="23:20" pos:end="23:33"><name pos:start="23:20" pos:end="23:22">env</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:33">htab_mask</name></name><operator pos:start="23:34" pos:end="23:34">)</operator> <operator pos:start="23:36" pos:end="23:36">*</operator> <name pos:start="23:38" pos:end="23:52">HPTES_PER_GROUP</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:60"><expr pos:start="25:5" pos:end="25:59"><name pos:start="25:5" pos:end="25:8">pteg</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <call pos:start="25:12" pos:end="25:59"><name pos:start="25:12" pos:end="25:31">ppc_hash64_map_hptes</name><argument_list pos:start="25:32" pos:end="25:59">(<argument pos:start="25:33" pos:end="25:35"><expr pos:start="25:33" pos:end="25:35"><name pos:start="25:33" pos:end="25:35">cpu</name></expr></argument>, <argument pos:start="25:38" pos:end="25:41"><expr pos:start="25:38" pos:end="25:41"><name pos:start="25:38" pos:end="25:41">ptex</name></expr></argument>, <argument pos:start="25:44" pos:end="25:58"><expr pos:start="25:44" pos:end="25:58"><name pos:start="25:44" pos:end="25:58">HPTES_PER_GROUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:14">(<expr pos:start="27:9" pos:end="27:13"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:13">pteg</name></expr>)</condition> <block pos:start="27:16" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:18">

        <return pos:start="29:9" pos:end="29:18">return <expr pos:start="29:16" pos:end="29:17"><operator pos:start="29:16" pos:end="29:16">-</operator><literal type="number" pos:start="29:17" pos:end="29:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="33:5" pos:end="83:5">for <control pos:start="33:9" pos:end="33:41">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:36"><expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:35">HPTES_PER_GROUP</name></expr>;</condition> <incr pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:38">i</name><operator pos:start="33:39" pos:end="33:40">++</operator></expr></incr>)</control> <block pos:start="33:43" pos:end="83:5">{<block_content pos:start="35:9" pos:end="81:9">

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:12">pte0</name> <operator pos:start="35:14" pos:end="35:14">=</operator> <call pos:start="35:16" pos:end="35:45"><name pos:start="35:16" pos:end="35:31">ppc_hash64_hpte0</name><argument_list pos:start="35:32" pos:end="35:45">(<argument pos:start="35:33" pos:end="35:35"><expr pos:start="35:33" pos:end="35:35"><name pos:start="35:33" pos:end="35:35">cpu</name></expr></argument>, <argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">pteg</name></expr></argument>, <argument pos:start="35:44" pos:end="35:44"><expr pos:start="35:44" pos:end="35:44"><name pos:start="35:44" pos:end="35:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:12">pte1</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <call pos:start="37:16" pos:end="37:45"><name pos:start="37:16" pos:end="37:31">ppc_hash64_hpte1</name><argument_list pos:start="37:32" pos:end="37:45">(<argument pos:start="37:33" pos:end="37:35"><expr pos:start="37:33" pos:end="37:35"><name pos:start="37:33" pos:end="37:35">cpu</name></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">pteg</name></expr></argument>, <argument pos:start="37:44" pos:end="37:44"><expr pos:start="37:44" pos:end="37:44"><name pos:start="37:44" pos:end="37:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="41:9" pos:end="41:60">/* This compares V, B, H (secondary) and the AVPN */</comment>

        <if_stmt pos:start="43:9" pos:end="81:9"><if pos:start="43:9" pos:end="81:9">if <condition pos:start="43:12" pos:end="43:41">(<expr pos:start="43:13" pos:end="43:40"><call pos:start="43:13" pos:end="43:40"><name pos:start="43:13" pos:end="43:28">HPTE64_V_COMPARE</name><argument_list pos:start="43:29" pos:end="43:40">(<argument pos:start="43:30" pos:end="43:33"><expr pos:start="43:30" pos:end="43:33"><name pos:start="43:30" pos:end="43:33">pte0</name></expr></argument>, <argument pos:start="43:36" pos:end="43:39"><expr pos:start="43:36" pos:end="43:39"><name pos:start="43:36" pos:end="43:39">ptem</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:43" pos:end="81:9">{<block_content pos:start="45:13" pos:end="79:28">

            <expr_stmt pos:start="45:13" pos:end="45:55"><expr pos:start="45:13" pos:end="45:54"><operator pos:start="45:13" pos:end="45:13">*</operator><name pos:start="45:14" pos:end="45:19">pshift</name> <operator pos:start="45:21" pos:end="45:21">=</operator> <call pos:start="45:23" pos:end="45:54"><name pos:start="45:23" pos:end="45:37">hpte_page_shift</name><argument_list pos:start="45:38" pos:end="45:54">(<argument pos:start="45:39" pos:end="45:41"><expr pos:start="45:39" pos:end="45:41"><name pos:start="45:39" pos:end="45:41">sps</name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><name pos:start="45:44" pos:end="45:47">pte0</name></expr></argument>, <argument pos:start="45:50" pos:end="45:53"><expr pos:start="45:50" pos:end="45:53"><name pos:start="45:50" pos:end="45:53">pte1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="47:13" pos:end="59:15">/*

             * If there is no match, ignore the PTE, it could simply

             * be for a different segment size encoding and the

             * architecture specifies we should not match. Linux will

             * potentially leave behind PTEs for the wrong base page

             * size when demoting segments.

             */</comment>

            <if_stmt pos:start="61:13" pos:end="65:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:29">(<expr pos:start="61:17" pos:end="61:28"><operator pos:start="61:17" pos:end="61:17">*</operator><name pos:start="61:18" pos:end="61:23">pshift</name> <operator pos:start="61:25" pos:end="61:26">==</operator> <literal type="number" pos:start="61:28" pos:end="61:28">0</literal></expr>)</condition> <block pos:start="61:31" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:25">

                <continue pos:start="63:17" pos:end="63:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="67:13" pos:end="71:15">/* We don't do anything with pshift yet as qemu TLB only deals

             * with 4K pages anyway

             */</comment>

            <expr_stmt pos:start="73:13" pos:end="73:29"><expr pos:start="73:13" pos:end="73:28"><name pos:start="73:13" pos:end="73:21"><name pos:start="73:13" pos:end="73:15">pte</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:21">pte0</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:28">pte0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:29"><expr pos:start="75:13" pos:end="75:28"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:15">pte</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:21">pte1</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:28">pte1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:69"><expr pos:start="77:13" pos:end="77:68"><call pos:start="77:13" pos:end="77:68"><name pos:start="77:13" pos:end="77:34">ppc_hash64_unmap_hptes</name><argument_list pos:start="77:35" pos:end="77:68">(<argument pos:start="77:36" pos:end="77:38"><expr pos:start="77:36" pos:end="77:38"><name pos:start="77:36" pos:end="77:38">cpu</name></expr></argument>, <argument pos:start="77:41" pos:end="77:44"><expr pos:start="77:41" pos:end="77:44"><name pos:start="77:41" pos:end="77:44">pteg</name></expr></argument>, <argument pos:start="77:47" pos:end="77:50"><expr pos:start="77:47" pos:end="77:50"><name pos:start="77:47" pos:end="77:50">ptex</name></expr></argument>, <argument pos:start="77:53" pos:end="77:67"><expr pos:start="77:53" pos:end="77:67"><name pos:start="77:53" pos:end="77:67">HPTES_PER_GROUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="79:13" pos:end="79:28">return <expr pos:start="79:20" pos:end="79:27"><name pos:start="79:20" pos:end="79:23">ptex</name> <operator pos:start="79:25" pos:end="79:25">+</operator> <name pos:start="79:27" pos:end="79:27">i</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="85:5" pos:end="85:61"><expr pos:start="85:5" pos:end="85:60"><call pos:start="85:5" pos:end="85:60"><name pos:start="85:5" pos:end="85:26">ppc_hash64_unmap_hptes</name><argument_list pos:start="85:27" pos:end="85:60">(<argument pos:start="85:28" pos:end="85:30"><expr pos:start="85:28" pos:end="85:30"><name pos:start="85:28" pos:end="85:30">cpu</name></expr></argument>, <argument pos:start="85:33" pos:end="85:36"><expr pos:start="85:33" pos:end="85:36"><name pos:start="85:33" pos:end="85:36">pteg</name></expr></argument>, <argument pos:start="85:39" pos:end="85:42"><expr pos:start="85:39" pos:end="85:42"><name pos:start="85:39" pos:end="85:42">ptex</name></expr></argument>, <argument pos:start="85:45" pos:end="85:59"><expr pos:start="85:45" pos:end="85:59"><name pos:start="85:45" pos:end="85:59">HPTES_PER_GROUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="87:5" pos:end="91:7">/*

     * We didn't find a valid entry.

     */</comment>

    <return pos:start="93:5" pos:end="93:14">return <expr pos:start="93:12" pos:end="93:13"><operator pos:start="93:12" pos:end="93:12">-</operator><literal type="number" pos:start="93:13" pos:end="93:13">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
