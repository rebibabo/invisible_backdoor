<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/27064.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">parse_palette_segment</name><parameter_list pos:start="1:34" pos:end="3:67">(<parameter pos:start="1:35" pos:end="1:55"><decl pos:start="1:35" pos:end="1:55"><type pos:start="1:35" pos:end="1:55"><name pos:start="1:35" pos:end="1:48">AVCodecContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:55">avctx</name></decl></parameter>,

                                  <parameter pos:start="3:35" pos:end="3:52"><decl pos:start="3:35" pos:end="3:52"><type pos:start="3:35" pos:end="3:52"><specifier pos:start="3:35" pos:end="3:39">const</specifier> <name pos:start="3:41" pos:end="3:47">uint8_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:52">buf</name></decl></parameter>, <parameter pos:start="3:55" pos:end="3:66"><decl pos:start="3:55" pos:end="3:66"><type pos:start="3:55" pos:end="3:66"><name pos:start="3:55" pos:end="3:57">int</name></type> <name pos:start="3:59" pos:end="3:66">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="59:1">{<block_content pos:start="7:5" pos:end="57:5">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">PGSSubContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:22">ctx</name> <init pos:start="7:24" pos:end="7:41">= <expr pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:41"><name pos:start="7:26" pos:end="7:30">avctx</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:41">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:44"><decl pos:start="11:5" pos:end="11:43"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:26">buf_end</name> <init pos:start="11:28" pos:end="11:43">= <expr pos:start="11:30" pos:end="11:43"><name pos:start="11:30" pos:end="11:32">buf</name> <operator pos:start="11:34" pos:end="11:34">+</operator> <name pos:start="11:36" pos:end="11:43">buf_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:21">cm</name>      <init pos:start="13:28" pos:end="13:55">= <expr pos:start="13:30" pos:end="13:55"><name pos:start="13:30" pos:end="13:40">ff_crop_tab</name> <operator pos:start="13:42" pos:end="13:42">+</operator> <name pos:start="13:44" pos:end="13:55">MAX_NEG_CROP</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">color_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:25"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">y</name></decl>, <decl pos:start="17:12" pos:end="17:13"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:13">cb</name></decl>, <decl pos:start="17:16" pos:end="17:17"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:17">cr</name></decl>, <decl pos:start="17:20" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:20" pos:end="17:24">alpha</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:9"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:9">r</name></decl>, <decl pos:start="19:12" pos:end="19:12"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:12" pos:end="19:12">g</name></decl>, <decl pos:start="19:15" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:15" pos:end="19:15">b</name></decl>, <decl pos:start="19:18" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:18" pos:end="19:22">r_add</name></decl>, <decl pos:start="19:25" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:25" pos:end="19:29">g_add</name></decl>, <decl pos:start="19:32" pos:end="19:36"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:32" pos:end="19:36">b_add</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:29">/* Skip two null bytes */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:13"><expr pos:start="25:5" pos:end="25:12"><name pos:start="25:5" pos:end="25:7">buf</name> <operator pos:start="25:9" pos:end="25:10">+=</operator> <literal type="number" pos:start="25:12" pos:end="25:12">2</literal></expr>;</expr_stmt>



    <while pos:start="29:5" pos:end="57:5">while <condition pos:start="29:11" pos:end="29:25">(<expr pos:start="29:12" pos:end="29:24"><name pos:start="29:12" pos:end="29:14">buf</name> <operator pos:start="29:16" pos:end="29:16">&lt;</operator> <name pos:start="29:18" pos:end="29:24">buf_end</name></expr>)</condition> <block pos:start="29:27" pos:end="57:5">{<block_content pos:start="31:9" pos:end="55:48">

        <expr_stmt pos:start="31:9" pos:end="31:46"><expr pos:start="31:9" pos:end="31:45"><name pos:start="31:9" pos:end="31:16">color_id</name>  <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:45"><name pos:start="31:21" pos:end="31:39">bytestream_get_byte</name><argument_list pos:start="31:40" pos:end="31:45">(<argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><operator pos:start="31:41" pos:end="31:41">&amp;</operator><name pos:start="31:42" pos:end="31:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:46"><expr pos:start="33:9" pos:end="33:45"><name pos:start="33:9" pos:end="33:9">y</name>         <operator pos:start="33:19" pos:end="33:19">=</operator> <call pos:start="33:21" pos:end="33:45"><name pos:start="33:21" pos:end="33:39">bytestream_get_byte</name><argument_list pos:start="33:40" pos:end="33:45">(<argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><operator pos:start="33:41" pos:end="33:41">&amp;</operator><name pos:start="33:42" pos:end="33:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:46"><expr pos:start="35:9" pos:end="35:45"><name pos:start="35:9" pos:end="35:10">cr</name>        <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:39">bytestream_get_byte</name><argument_list pos:start="35:40" pos:end="35:45">(<argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><operator pos:start="35:41" pos:end="35:41">&amp;</operator><name pos:start="35:42" pos:end="35:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:46"><expr pos:start="37:9" pos:end="37:45"><name pos:start="37:9" pos:end="37:10">cb</name>        <operator pos:start="37:19" pos:end="37:19">=</operator> <call pos:start="37:21" pos:end="37:45"><name pos:start="37:21" pos:end="37:39">bytestream_get_byte</name><argument_list pos:start="37:40" pos:end="37:45">(<argument pos:start="37:41" pos:end="37:44"><expr pos:start="37:41" pos:end="37:44"><operator pos:start="37:41" pos:end="37:41">&amp;</operator><name pos:start="37:42" pos:end="37:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:46"><expr pos:start="39:9" pos:end="39:45"><name pos:start="39:9" pos:end="39:13">alpha</name>     <operator pos:start="39:19" pos:end="39:19">=</operator> <call pos:start="39:21" pos:end="39:45"><name pos:start="39:21" pos:end="39:39">bytestream_get_byte</name><argument_list pos:start="39:40" pos:end="39:45">(<argument pos:start="39:41" pos:end="39:44"><expr pos:start="39:41" pos:end="39:44"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:44">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><call pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:19">YUV_TO_RGB1</name><argument_list pos:start="43:20" pos:end="43:27">(<argument pos:start="43:21" pos:end="43:22"><expr pos:start="43:21" pos:end="43:22"><name pos:start="43:21" pos:end="43:22">cb</name></expr></argument>, <argument pos:start="43:25" pos:end="43:26"><expr pos:start="43:25" pos:end="43:26"><name pos:start="43:25" pos:end="43:26">cr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:32"><expr pos:start="45:9" pos:end="45:31"><call pos:start="45:9" pos:end="45:31"><name pos:start="45:9" pos:end="45:19">YUV_TO_RGB2</name><argument_list pos:start="45:20" pos:end="45:31">(<argument pos:start="45:21" pos:end="45:21"><expr pos:start="45:21" pos:end="45:21"><name pos:start="45:21" pos:end="45:21">r</name></expr></argument>, <argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">g</name></expr></argument>, <argument pos:start="45:27" pos:end="45:27"><expr pos:start="45:27" pos:end="45:27"><name pos:start="45:27" pos:end="45:27">b</name></expr></argument>, <argument pos:start="45:30" pos:end="45:30"><expr pos:start="45:30" pos:end="45:30"><name pos:start="45:30" pos:end="45:30">y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:80"><expr pos:start="49:9" pos:end="49:79"><call pos:start="49:9" pos:end="49:79"><name pos:start="49:9" pos:end="49:15">av_dlog</name><argument_list pos:start="49:16" pos:end="49:79">(<argument pos:start="49:17" pos:end="49:21"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:21">avctx</name></expr></argument>, <argument pos:start="49:24" pos:end="49:52"><expr pos:start="49:24" pos:end="49:52"><literal type="string" pos:start="49:24" pos:end="49:52">"Color %d := (%d,%d,%d,%d)\n"</literal></expr></argument>, <argument pos:start="49:55" pos:end="49:62"><expr pos:start="49:55" pos:end="49:62"><name pos:start="49:55" pos:end="49:62">color_id</name></expr></argument>, <argument pos:start="49:65" pos:end="49:65"><expr pos:start="49:65" pos:end="49:65"><name pos:start="49:65" pos:end="49:65">r</name></expr></argument>, <argument pos:start="49:68" pos:end="49:68"><expr pos:start="49:68" pos:end="49:68"><name pos:start="49:68" pos:end="49:68">g</name></expr></argument>, <argument pos:start="49:71" pos:end="49:71"><expr pos:start="49:71" pos:end="49:71"><name pos:start="49:71" pos:end="49:71">b</name></expr></argument>, <argument pos:start="49:74" pos:end="49:78"><expr pos:start="49:74" pos:end="49:78"><name pos:start="49:74" pos:end="49:78">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="53:9" pos:end="53:36">/* Store color in palette */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:27"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:17">clut</name><index pos:start="55:18" pos:end="55:27">[<expr pos:start="55:19" pos:end="55:26"><name pos:start="55:19" pos:end="55:26">color_id</name></expr>]</index></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <call pos:start="55:31" pos:end="55:47"><name pos:start="55:31" pos:end="55:34">RGBA</name><argument_list pos:start="55:35" pos:end="55:47">(<argument pos:start="55:36" pos:end="55:36"><expr pos:start="55:36" pos:end="55:36"><name pos:start="55:36" pos:end="55:36">r</name></expr></argument>,<argument pos:start="55:38" pos:end="55:38"><expr pos:start="55:38" pos:end="55:38"><name pos:start="55:38" pos:end="55:38">g</name></expr></argument>,<argument pos:start="55:40" pos:end="55:40"><expr pos:start="55:40" pos:end="55:40"><name pos:start="55:40" pos:end="55:40">b</name></expr></argument>,<argument pos:start="55:42" pos:end="55:46"><expr pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:46">alpha</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
