<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7012.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">bdrv_qed_open</name><parameter_list pos:start="1:25" pos:end="1:57">(<parameter pos:start="1:26" pos:end="1:45"><decl pos:start="1:26" pos:end="1:45"><type pos:start="1:26" pos:end="1:45"><name pos:start="1:26" pos:end="1:41">BlockDriverState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">bs</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:56"><decl pos:start="1:48" pos:end="1:56"><type pos:start="1:48" pos:end="1:56"><name pos:start="1:48" pos:end="1:50">int</name></type> <name pos:start="1:52" pos:end="1:56">flags</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="261:1">{<block_content pos:start="5:5" pos:end="259:15">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">BDRVQEDState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:32">= <expr pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:32"><name pos:start="5:23" pos:end="5:24">bs</name><operator pos:start="5:25" pos:end="5:26">-&gt;</operator><name pos:start="5:27" pos:end="5:32">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">QEDHeader</name></type> <name pos:start="7:15" pos:end="7:23">le_header</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">int64_t</name></type> <name pos:start="9:13" pos:end="9:21">file_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:15"><expr pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:9">bs</name></name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:14">bs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:45"><expr pos:start="17:5" pos:end="17:44"><call pos:start="17:5" pos:end="17:44"><name pos:start="17:5" pos:end="17:17">QSIMPLEQ_INIT</name><argument_list pos:start="17:18" pos:end="17:44">(<argument pos:start="17:19" pos:end="17:43"><expr pos:start="17:19" pos:end="17:43"><operator pos:start="17:19" pos:end="17:19">&amp;</operator><name pos:start="17:20" pos:end="17:43"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:43">allocating_write_reqs</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:64"><name pos:start="21:11" pos:end="21:20">bdrv_pread</name><argument_list pos:start="21:21" pos:end="21:64">(<argument pos:start="21:22" pos:end="21:29"><expr pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:23">bs</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:29">file</name></name></expr></argument>, <argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><literal type="number" pos:start="21:32" pos:end="21:32">0</literal></expr></argument>, <argument pos:start="21:35" pos:end="21:44"><expr pos:start="21:35" pos:end="21:44"><operator pos:start="21:35" pos:end="21:35">&amp;</operator><name pos:start="21:36" pos:end="21:44">le_header</name></expr></argument>, <argument pos:start="21:47" pos:end="21:63"><expr pos:start="21:47" pos:end="21:63"><sizeof pos:start="21:47" pos:end="21:63">sizeof<argument_list pos:start="21:53" pos:end="21:63">(<argument pos:start="21:54" pos:end="21:62"><expr pos:start="21:54" pos:end="21:62"><name pos:start="21:54" pos:end="21:62">le_header</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:16">(<expr pos:start="23:9" pos:end="23:15"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">&lt;</operator> <literal type="number" pos:start="23:15" pos:end="23:15">0</literal></expr>)</condition> <block pos:start="23:18" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:19">

        <return pos:start="25:9" pos:end="25:19">return <expr pos:start="25:16" pos:end="25:18"><name pos:start="25:16" pos:end="25:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:49"><expr pos:start="29:5" pos:end="29:48"><call pos:start="29:5" pos:end="29:48"><name pos:start="29:5" pos:end="29:24">qed_header_le_to_cpu</name><argument_list pos:start="29:25" pos:end="29:48">(<argument pos:start="29:26" pos:end="29:35"><expr pos:start="29:26" pos:end="29:35"><operator pos:start="29:26" pos:end="29:26">&amp;</operator><name pos:start="29:27" pos:end="29:35">le_header</name></expr></argument>, <argument pos:start="29:38" pos:end="29:47"><expr pos:start="29:38" pos:end="29:47"><operator pos:start="29:38" pos:end="29:38">&amp;</operator><name pos:start="29:39" pos:end="29:47"><name pos:start="29:39" pos:end="29:39">s</name><operator pos:start="29:40" pos:end="29:41">-&gt;</operator><name pos:start="29:42" pos:end="29:47">header</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="37:5"><if pos:start="33:5" pos:end="37:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:17">header</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:23">magic</name></name> <operator pos:start="33:25" pos:end="33:26">!=</operator> <name pos:start="33:28" pos:end="33:36">QED_MAGIC</name></expr>)</condition> <block pos:start="33:39" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <return pos:start="35:9" pos:end="35:23">return <expr pos:start="35:16" pos:end="35:22"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="55:5"><if pos:start="39:5" pos:end="55:5">if <condition pos:start="39:8" pos:end="39:47">(<expr pos:start="39:9" pos:end="39:46"><name pos:start="39:9" pos:end="39:26"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:17">header</name><operator pos:start="39:18" pos:end="39:18">.</operator><name pos:start="39:19" pos:end="39:26">features</name></name> <operator pos:start="39:28" pos:end="39:28">&amp;</operator> <operator pos:start="39:30" pos:end="39:30">~</operator><name pos:start="39:31" pos:end="39:46">QED_FEATURE_MASK</name></expr>)</condition> <block pos:start="39:49" pos:end="55:5">{<block_content pos:start="43:9" pos:end="53:24">

        <comment type="block" pos:start="41:9" pos:end="41:49">/* image uses unsupported feature bits */</comment>

        <decl_stmt pos:start="43:9" pos:end="43:21"><decl pos:start="43:9" pos:end="43:20"><type pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">char</name></type> <name pos:start="43:14" pos:end="43:20"><name pos:start="43:14" pos:end="43:16">buf</name><index pos:start="43:17" pos:end="43:20">[<expr pos:start="43:18" pos:end="43:19"><literal type="number" pos:start="43:18" pos:end="43:19">64</literal></expr>]</index></name></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="47:52"><expr pos:start="45:9" pos:end="47:51"><call pos:start="45:9" pos:end="47:51"><name pos:start="45:9" pos:end="45:16">snprintf</name><argument_list pos:start="45:17" pos:end="47:51">(<argument pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:20">buf</name></expr></argument>, <argument pos:start="45:23" pos:end="45:33"><expr pos:start="45:23" pos:end="45:33"><sizeof pos:start="45:23" pos:end="45:33">sizeof<argument_list pos:start="45:29" pos:end="45:33">(<argument pos:start="45:30" pos:end="45:32"><expr pos:start="45:30" pos:end="45:32"><name pos:start="45:30" pos:end="45:32">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="45:36" pos:end="45:45"><expr pos:start="45:36" pos:end="45:45"><literal type="string" pos:start="45:36" pos:end="45:38">"%"</literal> <name pos:start="45:40" pos:end="45:45">PRIx64</name></expr></argument>,

            <argument pos:start="47:13" pos:end="47:50"><expr pos:start="47:13" pos:end="47:50"><name pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:13">s</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:21">header</name><operator pos:start="47:22" pos:end="47:22">.</operator><name pos:start="47:23" pos:end="47:30">features</name></name> <operator pos:start="47:32" pos:end="47:32">&amp;</operator> <operator pos:start="47:34" pos:end="47:34">~</operator><name pos:start="47:35" pos:end="47:50">QED_FEATURE_MASK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="51:41"><expr pos:start="49:9" pos:end="51:40"><call pos:start="49:9" pos:end="51:40"><name pos:start="49:9" pos:end="49:21">qerror_report</name><argument_list pos:start="49:22" pos:end="51:40">(<argument pos:start="49:23" pos:end="49:55"><expr pos:start="49:23" pos:end="49:55"><name pos:start="49:23" pos:end="49:55">QERR_UNKNOWN_BLOCK_FORMAT_FEATURE</name></expr></argument>,

            <argument pos:start="51:13" pos:end="51:27"><expr pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:27"><name pos:start="51:13" pos:end="51:14">bs</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:27">device_name</name></name></expr></argument>, <argument pos:start="51:30" pos:end="51:34"><expr pos:start="51:30" pos:end="51:34"><literal type="string" pos:start="51:30" pos:end="51:34">"QED"</literal></expr></argument>, <argument pos:start="51:37" pos:end="51:39"><expr pos:start="51:37" pos:end="51:39"><name pos:start="51:37" pos:end="51:39">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:24">return <expr pos:start="53:16" pos:end="53:23"><operator pos:start="53:16" pos:end="53:16">-</operator><name pos:start="53:17" pos:end="53:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="61:5"><if pos:start="57:5" pos:end="61:5">if <condition pos:start="57:8" pos:end="57:59">(<expr pos:start="57:9" pos:end="57:58"><operator pos:start="57:9" pos:end="57:9">!</operator><call pos:start="57:10" pos:end="57:58"><name pos:start="57:10" pos:end="57:34">qed_is_cluster_size_valid</name><argument_list pos:start="57:35" pos:end="57:58">(<argument pos:start="57:36" pos:end="57:57"><expr pos:start="57:36" pos:end="57:57"><name pos:start="57:36" pos:end="57:57"><name pos:start="57:36" pos:end="57:36">s</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:44">header</name><operator pos:start="57:45" pos:end="57:45">.</operator><name pos:start="57:46" pos:end="57:57">cluster_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="57:61" pos:end="61:5">{<block_content pos:start="59:9" pos:end="59:23">

        <return pos:start="59:9" pos:end="59:23">return <expr pos:start="59:16" pos:end="59:22"><operator pos:start="59:16" pos:end="59:16">-</operator><name pos:start="59:17" pos:end="59:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="65:5" pos:end="65:50">/* Round down file size to the last cluster */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:13">file_size</name> <operator pos:start="67:15" pos:end="67:15">=</operator> <call pos:start="67:17" pos:end="67:40"><name pos:start="67:17" pos:end="67:30">bdrv_getlength</name><argument_list pos:start="67:31" pos:end="67:40">(<argument pos:start="67:32" pos:end="67:39"><expr pos:start="67:32" pos:end="67:39"><name pos:start="67:32" pos:end="67:39"><name pos:start="67:32" pos:end="67:33">bs</name><operator pos:start="67:34" pos:end="67:35">-&gt;</operator><name pos:start="67:36" pos:end="67:39">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:22">(<expr pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:17">file_size</name> <operator pos:start="69:19" pos:end="69:19">&lt;</operator> <literal type="number" pos:start="69:21" pos:end="69:21">0</literal></expr>)</condition> <block pos:start="69:24" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:25">

        <return pos:start="71:9" pos:end="71:25">return <expr pos:start="71:16" pos:end="71:24"><name pos:start="71:16" pos:end="71:24">file_size</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:54"><expr pos:start="75:5" pos:end="75:53"><name pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:16">file_size</name></name> <operator pos:start="75:18" pos:end="75:18">=</operator> <call pos:start="75:20" pos:end="75:53"><name pos:start="75:20" pos:end="75:39">qed_start_of_cluster</name><argument_list pos:start="75:40" pos:end="75:53">(<argument pos:start="75:41" pos:end="75:41"><expr pos:start="75:41" pos:end="75:41"><name pos:start="75:41" pos:end="75:41">s</name></expr></argument>, <argument pos:start="75:44" pos:end="75:52"><expr pos:start="75:44" pos:end="75:52"><name pos:start="75:44" pos:end="75:52">file_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:55">(<expr pos:start="79:9" pos:end="79:54"><operator pos:start="79:9" pos:end="79:9">!</operator><call pos:start="79:10" pos:end="79:54"><name pos:start="79:10" pos:end="79:32">qed_is_table_size_valid</name><argument_list pos:start="79:33" pos:end="79:54">(<argument pos:start="79:34" pos:end="79:53"><expr pos:start="79:34" pos:end="79:53"><name pos:start="79:34" pos:end="79:53"><name pos:start="79:34" pos:end="79:34">s</name><operator pos:start="79:35" pos:end="79:36">-&gt;</operator><name pos:start="79:37" pos:end="79:42">header</name><operator pos:start="79:43" pos:end="79:43">.</operator><name pos:start="79:44" pos:end="79:53">table_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="79:57" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:23">

        <return pos:start="81:9" pos:end="81:23">return <expr pos:start="81:16" pos:end="81:22"><operator pos:start="81:16" pos:end="81:16">-</operator><name pos:start="81:17" pos:end="81:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="93:5"><if pos:start="85:5" pos:end="93:5">if <condition pos:start="85:8" pos:end="89:55">(<expr pos:start="85:9" pos:end="89:54"><operator pos:start="85:9" pos:end="85:9">!</operator><call pos:start="85:10" pos:end="89:54"><name pos:start="85:10" pos:end="85:32">qed_is_image_size_valid</name><argument_list pos:start="85:33" pos:end="89:54">(<argument pos:start="85:34" pos:end="85:53"><expr pos:start="85:34" pos:end="85:53"><name pos:start="85:34" pos:end="85:53"><name pos:start="85:34" pos:end="85:34">s</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:42">header</name><operator pos:start="85:43" pos:end="85:43">.</operator><name pos:start="85:44" pos:end="85:53">image_size</name></name></expr></argument>,

                                 <argument pos:start="87:34" pos:end="87:55"><expr pos:start="87:34" pos:end="87:55"><name pos:start="87:34" pos:end="87:55"><name pos:start="87:34" pos:end="87:34">s</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:42">header</name><operator pos:start="87:43" pos:end="87:43">.</operator><name pos:start="87:44" pos:end="87:55">cluster_size</name></name></expr></argument>,

                                 <argument pos:start="89:34" pos:end="89:53"><expr pos:start="89:34" pos:end="89:53"><name pos:start="89:34" pos:end="89:53"><name pos:start="89:34" pos:end="89:34">s</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:42">header</name><operator pos:start="89:43" pos:end="89:43">.</operator><name pos:start="89:44" pos:end="89:53">table_size</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:57" pos:end="93:5">{<block_content pos:start="91:9" pos:end="91:23">

        <return pos:start="91:9" pos:end="91:23">return <expr pos:start="91:16" pos:end="91:22"><operator pos:start="91:16" pos:end="91:16">-</operator><name pos:start="91:17" pos:end="91:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="95:5" pos:end="99:5"><if pos:start="95:5" pos:end="99:5">if <condition pos:start="95:8" pos:end="95:62">(<expr pos:start="95:9" pos:end="95:61"><operator pos:start="95:9" pos:end="95:9">!</operator><call pos:start="95:10" pos:end="95:61"><name pos:start="95:10" pos:end="95:31">qed_check_table_offset</name><argument_list pos:start="95:32" pos:end="95:61">(<argument pos:start="95:33" pos:end="95:33"><expr pos:start="95:33" pos:end="95:33"><name pos:start="95:33" pos:end="95:33">s</name></expr></argument>, <argument pos:start="95:36" pos:end="95:60"><expr pos:start="95:36" pos:end="95:60"><name pos:start="95:36" pos:end="95:60"><name pos:start="95:36" pos:end="95:36">s</name><operator pos:start="95:37" pos:end="95:38">-&gt;</operator><name pos:start="95:39" pos:end="95:44">header</name><operator pos:start="95:45" pos:end="95:45">.</operator><name pos:start="95:46" pos:end="95:60">l1_table_offset</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="95:64" pos:end="99:5">{<block_content pos:start="97:9" pos:end="97:23">

        <return pos:start="97:9" pos:end="97:23">return <expr pos:start="97:16" pos:end="97:22"><operator pos:start="97:16" pos:end="97:16">-</operator><name pos:start="97:17" pos:end="97:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="105:39"><expr pos:start="103:5" pos:end="105:38"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:19">table_nelems</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <operator pos:start="103:23" pos:end="103:23">(</operator><name pos:start="103:24" pos:end="103:45"><name pos:start="103:24" pos:end="103:24">s</name><operator pos:start="103:25" pos:end="103:26">-&gt;</operator><name pos:start="103:27" pos:end="103:32">header</name><operator pos:start="103:33" pos:end="103:33">.</operator><name pos:start="103:34" pos:end="103:45">cluster_size</name></name> <operator pos:start="103:47" pos:end="103:47">*</operator> <name pos:start="103:49" pos:end="103:68"><name pos:start="103:49" pos:end="103:49">s</name><operator pos:start="103:50" pos:end="103:51">-&gt;</operator><name pos:start="103:52" pos:end="103:57">header</name><operator pos:start="103:58" pos:end="103:58">.</operator><name pos:start="103:59" pos:end="103:68">table_size</name></name><operator pos:start="103:69" pos:end="103:69">)</operator> <operator pos:start="103:71" pos:end="103:71">/</operator>

                      <sizeof pos:start="105:23" pos:end="105:38">sizeof<argument_list pos:start="105:29" pos:end="105:38">(<argument pos:start="105:30" pos:end="105:37"><expr pos:start="105:30" pos:end="105:37"><name pos:start="105:30" pos:end="105:37">uint64_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:50"><expr pos:start="107:5" pos:end="107:49"><name pos:start="107:5" pos:end="107:15"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:15">l2_shift</name></name> <operator pos:start="107:17" pos:end="107:17">=</operator> <call pos:start="107:19" pos:end="107:45"><name pos:start="107:19" pos:end="107:21">ffs</name><argument_list pos:start="107:22" pos:end="107:45">(<argument pos:start="107:23" pos:end="107:44"><expr pos:start="107:23" pos:end="107:44"><name pos:start="107:23" pos:end="107:44"><name pos:start="107:23" pos:end="107:23">s</name><operator pos:start="107:24" pos:end="107:25">-&gt;</operator><name pos:start="107:26" pos:end="107:31">header</name><operator pos:start="107:32" pos:end="107:32">.</operator><name pos:start="107:33" pos:end="107:44">cluster_size</name></name></expr></argument>)</argument_list></call> <operator pos:start="107:47" pos:end="107:47">-</operator> <literal type="number" pos:start="107:49" pos:end="107:49">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:37"><expr pos:start="109:5" pos:end="109:36"><name pos:start="109:5" pos:end="109:14"><name pos:start="109:5" pos:end="109:5">s</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:14">l2_mask</name></name> <operator pos:start="109:16" pos:end="109:16">=</operator> <name pos:start="109:18" pos:end="109:32"><name pos:start="109:18" pos:end="109:18">s</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:32">table_nelems</name></name> <operator pos:start="109:34" pos:end="109:34">-</operator> <literal type="number" pos:start="109:36" pos:end="109:36">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:57"><expr pos:start="111:5" pos:end="111:56"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:15">l1_shift</name></name> <operator pos:start="111:17" pos:end="111:17">=</operator> <name pos:start="111:19" pos:end="111:29"><name pos:start="111:19" pos:end="111:19">s</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:29">l2_shift</name></name> <operator pos:start="111:31" pos:end="111:31">+</operator> <call pos:start="111:33" pos:end="111:52"><name pos:start="111:33" pos:end="111:35">ffs</name><argument_list pos:start="111:36" pos:end="111:52">(<argument pos:start="111:37" pos:end="111:51"><expr pos:start="111:37" pos:end="111:51"><name pos:start="111:37" pos:end="111:51"><name pos:start="111:37" pos:end="111:37">s</name><operator pos:start="111:38" pos:end="111:39">-&gt;</operator><name pos:start="111:40" pos:end="111:51">table_nelems</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:54" pos:end="111:54">-</operator> <literal type="number" pos:start="111:56" pos:end="111:56">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="115:5" pos:end="149:5"><if pos:start="115:5" pos:end="149:5">if <condition pos:start="115:8" pos:end="115:50">(<expr pos:start="115:9" pos:end="115:49"><operator pos:start="115:9" pos:end="115:9">(</operator><name pos:start="115:10" pos:end="115:27"><name pos:start="115:10" pos:end="115:10">s</name><operator pos:start="115:11" pos:end="115:12">-&gt;</operator><name pos:start="115:13" pos:end="115:18">header</name><operator pos:start="115:19" pos:end="115:19">.</operator><name pos:start="115:20" pos:end="115:27">features</name></name> <operator pos:start="115:29" pos:end="115:29">&amp;</operator> <name pos:start="115:31" pos:end="115:48">QED_F_BACKING_FILE</name><operator pos:start="115:49" pos:end="115:49">)</operator></expr>)</condition> <block pos:start="115:52" pos:end="149:5">{<block_content pos:start="117:9" pos:end="147:9">

        <if_stmt pos:start="117:9" pos:end="125:9"><if pos:start="117:9" pos:end="125:9">if <condition pos:start="117:12" pos:end="121:59">(<expr pos:start="117:13" pos:end="121:58"><operator pos:start="117:13" pos:end="117:13">(</operator><name pos:start="117:14" pos:end="117:21">uint64_t</name><operator pos:start="117:22" pos:end="117:22">)</operator><name pos:start="117:23" pos:end="117:55"><name pos:start="117:23" pos:end="117:23">s</name><operator pos:start="117:24" pos:end="117:25">-&gt;</operator><name pos:start="117:26" pos:end="117:31">header</name><operator pos:start="117:32" pos:end="117:32">.</operator><name pos:start="117:33" pos:end="117:55">backing_filename_offset</name></name> <operator pos:start="117:57" pos:end="117:57">+</operator>

            <name pos:start="119:13" pos:end="119:43"><name pos:start="119:13" pos:end="119:13">s</name><operator pos:start="119:14" pos:end="119:15">-&gt;</operator><name pos:start="119:16" pos:end="119:21">header</name><operator pos:start="119:22" pos:end="119:22">.</operator><name pos:start="119:23" pos:end="119:43">backing_filename_size</name></name> <operator pos:start="119:45" pos:end="119:45">&gt;</operator>

            <name pos:start="121:13" pos:end="121:34"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:21">header</name><operator pos:start="121:22" pos:end="121:22">.</operator><name pos:start="121:23" pos:end="121:34">cluster_size</name></name> <operator pos:start="121:36" pos:end="121:36">*</operator> <name pos:start="121:38" pos:end="121:58"><name pos:start="121:38" pos:end="121:38">s</name><operator pos:start="121:39" pos:end="121:40">-&gt;</operator><name pos:start="121:41" pos:end="121:46">header</name><operator pos:start="121:47" pos:end="121:47">.</operator><name pos:start="121:48" pos:end="121:58">header_size</name></name></expr>)</condition> <block pos:start="121:61" pos:end="125:9">{<block_content pos:start="123:13" pos:end="123:27">

            <return pos:start="123:13" pos:end="123:27">return <expr pos:start="123:20" pos:end="123:26"><operator pos:start="123:20" pos:end="123:20">-</operator><name pos:start="123:21" pos:end="123:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="133:56"><expr pos:start="129:9" pos:end="133:55"><name pos:start="129:9" pos:end="129:11">ret</name> <operator pos:start="129:13" pos:end="129:13">=</operator> <call pos:start="129:15" pos:end="133:55"><name pos:start="129:15" pos:end="129:29">qed_read_string</name><argument_list pos:start="129:30" pos:end="133:55">(<argument pos:start="129:31" pos:end="129:38"><expr pos:start="129:31" pos:end="129:38"><name pos:start="129:31" pos:end="129:38"><name pos:start="129:31" pos:end="129:32">bs</name><operator pos:start="129:33" pos:end="129:34">-&gt;</operator><name pos:start="129:35" pos:end="129:38">file</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:73"><expr pos:start="129:41" pos:end="129:73"><name pos:start="129:41" pos:end="129:73"><name pos:start="129:41" pos:end="129:41">s</name><operator pos:start="129:42" pos:end="129:43">-&gt;</operator><name pos:start="129:44" pos:end="129:49">header</name><operator pos:start="129:50" pos:end="129:50">.</operator><name pos:start="129:51" pos:end="129:73">backing_filename_offset</name></name></expr></argument>,

                              <argument pos:start="131:31" pos:end="131:61"><expr pos:start="131:31" pos:end="131:61"><name pos:start="131:31" pos:end="131:61"><name pos:start="131:31" pos:end="131:31">s</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:39">header</name><operator pos:start="131:40" pos:end="131:40">.</operator><name pos:start="131:41" pos:end="131:61">backing_filename_size</name></name></expr></argument>, <argument pos:start="131:64" pos:end="131:79"><expr pos:start="131:64" pos:end="131:79"><name pos:start="131:64" pos:end="131:79"><name pos:start="131:64" pos:end="131:65">bs</name><operator pos:start="131:66" pos:end="131:67">-&gt;</operator><name pos:start="131:68" pos:end="131:79">backing_file</name></name></expr></argument>,

                              <argument pos:start="133:31" pos:end="133:54"><expr pos:start="133:31" pos:end="133:54"><sizeof pos:start="133:31" pos:end="133:54">sizeof<argument_list pos:start="133:37" pos:end="133:54">(<argument pos:start="133:38" pos:end="133:53"><expr pos:start="133:38" pos:end="133:53"><name pos:start="133:38" pos:end="133:53"><name pos:start="133:38" pos:end="133:39">bs</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:53">backing_file</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="139:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:20">(<expr pos:start="135:13" pos:end="135:19"><name pos:start="135:13" pos:end="135:15">ret</name> <operator pos:start="135:17" pos:end="135:17">&lt;</operator> <literal type="number" pos:start="135:19" pos:end="135:19">0</literal></expr>)</condition> <block pos:start="135:22" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:23">

            <return pos:start="137:13" pos:end="137:23">return <expr pos:start="137:20" pos:end="137:22"><name pos:start="137:20" pos:end="137:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="143:9" pos:end="147:9"><if pos:start="143:9" pos:end="147:9">if <condition pos:start="143:12" pos:end="143:63">(<expr pos:start="143:13" pos:end="143:62"><name pos:start="143:13" pos:end="143:30"><name pos:start="143:13" pos:end="143:13">s</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:21">header</name><operator pos:start="143:22" pos:end="143:22">.</operator><name pos:start="143:23" pos:end="143:30">features</name></name> <operator pos:start="143:32" pos:end="143:32">&amp;</operator> <name pos:start="143:34" pos:end="143:62">QED_F_BACKING_FORMAT_NO_PROBE</name></expr>)</condition> <block pos:start="143:65" pos:end="147:9">{<block_content pos:start="145:13" pos:end="145:75">

            <expr_stmt pos:start="145:13" pos:end="145:75"><expr pos:start="145:13" pos:end="145:74"><call pos:start="145:13" pos:end="145:74"><name pos:start="145:13" pos:end="145:19">pstrcpy</name><argument_list pos:start="145:20" pos:end="145:74">(<argument pos:start="145:21" pos:end="145:38"><expr pos:start="145:21" pos:end="145:38"><name pos:start="145:21" pos:end="145:38"><name pos:start="145:21" pos:end="145:22">bs</name><operator pos:start="145:23" pos:end="145:24">-&gt;</operator><name pos:start="145:25" pos:end="145:38">backing_format</name></name></expr></argument>, <argument pos:start="145:41" pos:end="145:66"><expr pos:start="145:41" pos:end="145:66"><sizeof pos:start="145:41" pos:end="145:66">sizeof<argument_list pos:start="145:47" pos:end="145:66">(<argument pos:start="145:48" pos:end="145:65"><expr pos:start="145:48" pos:end="145:65"><name pos:start="145:48" pos:end="145:65"><name pos:start="145:48" pos:end="145:49">bs</name><operator pos:start="145:50" pos:end="145:51">-&gt;</operator><name pos:start="145:52" pos:end="145:65">backing_format</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="145:69" pos:end="145:73"><expr pos:start="145:69" pos:end="145:73"><literal type="string" pos:start="145:69" pos:end="145:73">"raw"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="153:5" pos:end="163:7">/* Reset unknown autoclear feature bits.  This is a backwards

     * compatibility mechanism that allows images to be opened by older

     * programs, which "knock out" unknown feature bits.  When an image is

     * opened by a newer program again it can detect that the autoclear

     * feature is no longer valid.

     */</comment>

    <if_stmt pos:start="165:5" pos:end="187:5"><if pos:start="165:5" pos:end="187:5">if <condition pos:start="165:8" pos:end="167:67">(<expr pos:start="165:9" pos:end="167:66"><operator pos:start="165:9" pos:end="165:9">(</operator><name pos:start="165:10" pos:end="165:37"><name pos:start="165:10" pos:end="165:10">s</name><operator pos:start="165:11" pos:end="165:12">-&gt;</operator><name pos:start="165:13" pos:end="165:18">header</name><operator pos:start="165:19" pos:end="165:19">.</operator><name pos:start="165:20" pos:end="165:37">autoclear_features</name></name> <operator pos:start="165:39" pos:end="165:39">&amp;</operator> <operator pos:start="165:41" pos:end="165:41">~</operator><name pos:start="165:42" pos:end="165:67">QED_AUTOCLEAR_FEATURE_MASK</name><operator pos:start="165:68" pos:end="165:68">)</operator> <operator pos:start="165:70" pos:end="165:71">!=</operator> <literal type="number" pos:start="165:73" pos:end="165:73">0</literal> <operator pos:start="165:75" pos:end="165:76">&amp;&amp;</operator>

        <operator pos:start="167:9" pos:end="167:9">!</operator><call pos:start="167:10" pos:end="167:36"><name pos:start="167:10" pos:end="167:26">bdrv_is_read_only</name><argument_list pos:start="167:27" pos:end="167:36">(<argument pos:start="167:28" pos:end="167:35"><expr pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:35"><name pos:start="167:28" pos:end="167:29">bs</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:35">file</name></name></expr></argument>)</argument_list></call> <operator pos:start="167:38" pos:end="167:39">&amp;&amp;</operator> <operator pos:start="167:41" pos:end="167:41">!</operator><operator pos:start="167:42" pos:end="167:42">(</operator><name pos:start="167:43" pos:end="167:47">flags</name> <operator pos:start="167:49" pos:end="167:49">&amp;</operator> <name pos:start="167:51" pos:end="167:65">BDRV_O_INCOMING</name><operator pos:start="167:66" pos:end="167:66">)</operator></expr>)</condition> <block pos:start="167:69" pos:end="187:5">{<block_content pos:start="169:9" pos:end="185:29">

        <expr_stmt pos:start="169:9" pos:end="169:67"><expr pos:start="169:9" pos:end="169:66"><name pos:start="169:9" pos:end="169:36"><name pos:start="169:9" pos:end="169:9">s</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:17">header</name><operator pos:start="169:18" pos:end="169:18">.</operator><name pos:start="169:19" pos:end="169:36">autoclear_features</name></name> <operator pos:start="169:38" pos:end="169:39">&amp;=</operator> <name pos:start="169:41" pos:end="169:66">QED_AUTOCLEAR_FEATURE_MASK</name></expr>;</expr_stmt>



        <expr_stmt pos:start="173:9" pos:end="173:39"><expr pos:start="173:9" pos:end="173:38"><name pos:start="173:9" pos:end="173:11">ret</name> <operator pos:start="173:13" pos:end="173:13">=</operator> <call pos:start="173:15" pos:end="173:38"><name pos:start="173:15" pos:end="173:35">qed_write_header_sync</name><argument_list pos:start="173:36" pos:end="173:38">(<argument pos:start="173:37" pos:end="173:37"><expr pos:start="173:37" pos:end="173:37"><name pos:start="173:37" pos:end="173:37">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="175:9" pos:end="179:9"><if pos:start="175:9" pos:end="179:9">if <condition pos:start="175:12" pos:end="175:16">(<expr pos:start="175:13" pos:end="175:15"><name pos:start="175:13" pos:end="175:15">ret</name></expr>)</condition> <block pos:start="175:18" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:23">

            <return pos:start="177:13" pos:end="177:23">return <expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="183:9" pos:end="183:70">/* From here on only known autoclear feature bits are valid */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:29"><expr pos:start="185:9" pos:end="185:28"><call pos:start="185:9" pos:end="185:28"><name pos:start="185:9" pos:end="185:18">bdrv_flush</name><argument_list pos:start="185:19" pos:end="185:28">(<argument pos:start="185:20" pos:end="185:27"><expr pos:start="185:20" pos:end="185:27"><name pos:start="185:20" pos:end="185:27"><name pos:start="185:20" pos:end="185:21">bs</name><operator pos:start="185:22" pos:end="185:23">-&gt;</operator><name pos:start="185:24" pos:end="185:27">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:37"><expr pos:start="191:5" pos:end="191:36"><name pos:start="191:5" pos:end="191:15"><name pos:start="191:5" pos:end="191:5">s</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:15">l1_table</name></name> <operator pos:start="191:17" pos:end="191:17">=</operator> <call pos:start="191:19" pos:end="191:36"><name pos:start="191:19" pos:end="191:33">qed_alloc_table</name><argument_list pos:start="191:34" pos:end="191:36">(<argument pos:start="191:35" pos:end="191:35"><expr pos:start="191:35" pos:end="191:35"><name pos:start="191:35" pos:end="191:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:36"><expr pos:start="193:5" pos:end="193:35"><call pos:start="193:5" pos:end="193:35"><name pos:start="193:5" pos:end="193:21">qed_init_l2_cache</name><argument_list pos:start="193:22" pos:end="193:35">(<argument pos:start="193:23" pos:end="193:34"><expr pos:start="193:23" pos:end="193:34"><operator pos:start="193:23" pos:end="193:23">&amp;</operator><name pos:start="193:24" pos:end="193:34"><name pos:start="193:24" pos:end="193:24">s</name><operator pos:start="193:25" pos:end="193:26">-&gt;</operator><name pos:start="193:27" pos:end="193:34">l2_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:36"><expr pos:start="197:5" pos:end="197:35"><name pos:start="197:5" pos:end="197:7">ret</name> <operator pos:start="197:9" pos:end="197:9">=</operator> <call pos:start="197:11" pos:end="197:35"><name pos:start="197:11" pos:end="197:32">qed_read_l1_table_sync</name><argument_list pos:start="197:33" pos:end="197:35">(<argument pos:start="197:34" pos:end="197:34"><expr pos:start="197:34" pos:end="197:34"><name pos:start="197:34" pos:end="197:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="199:5" pos:end="203:5"><if pos:start="199:5" pos:end="203:5">if <condition pos:start="199:8" pos:end="199:12">(<expr pos:start="199:9" pos:end="199:11"><name pos:start="199:9" pos:end="199:11">ret</name></expr>)</condition> <block pos:start="199:14" pos:end="203:5">{<block_content pos:start="201:9" pos:end="201:17">

        <goto pos:start="201:9" pos:end="201:17">goto <name pos:start="201:14" pos:end="201:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="207:5" pos:end="207:60">/* If image was not closed cleanly, check consistency */</comment>

    <if_stmt pos:start="209:5" pos:end="239:5"><if pos:start="209:5" pos:end="239:5">if <condition pos:start="209:8" pos:end="209:46">(<expr pos:start="209:9" pos:end="209:45"><name pos:start="209:9" pos:end="209:26"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:17">header</name><operator pos:start="209:18" pos:end="209:18">.</operator><name pos:start="209:19" pos:end="209:26">features</name></name> <operator pos:start="209:28" pos:end="209:28">&amp;</operator> <name pos:start="209:30" pos:end="209:45">QED_F_NEED_CHECK</name></expr>)</condition> <block pos:start="209:48" pos:end="239:5">{<block_content pos:start="221:9" pos:end="237:9">

        <comment type="block" pos:start="211:9" pos:end="219:11">/* Read-only images cannot be fixed.  There is no risk of corruption

         * since write operations are not possible.  Therefore, allow

         * potentially inconsistent images to be opened read-only.  This can

         * aid data recovery from an otherwise inconsistent image.

         */</comment>

        <if_stmt pos:start="221:9" pos:end="237:9"><if pos:start="221:9" pos:end="237:9">if <condition pos:start="221:12" pos:end="223:39">(<expr pos:start="221:13" pos:end="223:38"><operator pos:start="221:13" pos:end="221:13">!</operator><call pos:start="221:14" pos:end="221:40"><name pos:start="221:14" pos:end="221:30">bdrv_is_read_only</name><argument_list pos:start="221:31" pos:end="221:40">(<argument pos:start="221:32" pos:end="221:39"><expr pos:start="221:32" pos:end="221:39"><name pos:start="221:32" pos:end="221:39"><name pos:start="221:32" pos:end="221:33">bs</name><operator pos:start="221:34" pos:end="221:35">-&gt;</operator><name pos:start="221:36" pos:end="221:39">file</name></name></expr></argument>)</argument_list></call> <operator pos:start="221:42" pos:end="221:43">&amp;&amp;</operator>

            <operator pos:start="223:13" pos:end="223:13">!</operator><operator pos:start="223:14" pos:end="223:14">(</operator><name pos:start="223:15" pos:end="223:19">flags</name> <operator pos:start="223:21" pos:end="223:21">&amp;</operator> <name pos:start="223:23" pos:end="223:37">BDRV_O_INCOMING</name><operator pos:start="223:38" pos:end="223:38">)</operator></expr>)</condition> <block pos:start="223:41" pos:end="237:9">{<block_content pos:start="225:13" pos:end="235:13">

            <decl_stmt pos:start="225:13" pos:end="225:41"><decl pos:start="225:13" pos:end="225:40"><type pos:start="225:13" pos:end="225:27"><name pos:start="225:13" pos:end="225:27">BdrvCheckResult</name></type> <name pos:start="225:29" pos:end="225:34">result</name> <init pos:start="225:36" pos:end="225:40">= <expr pos:start="225:38" pos:end="225:40"><block pos:start="225:38" pos:end="225:40">{<expr pos:start="225:39" pos:end="225:39"><literal type="number" pos:start="225:39" pos:end="225:39">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="229:13" pos:end="229:46"><expr pos:start="229:13" pos:end="229:45"><name pos:start="229:13" pos:end="229:15">ret</name> <operator pos:start="229:17" pos:end="229:17">=</operator> <call pos:start="229:19" pos:end="229:45"><name pos:start="229:19" pos:end="229:27">qed_check</name><argument_list pos:start="229:28" pos:end="229:45">(<argument pos:start="229:29" pos:end="229:29"><expr pos:start="229:29" pos:end="229:29"><name pos:start="229:29" pos:end="229:29">s</name></expr></argument>, <argument pos:start="229:32" pos:end="229:38"><expr pos:start="229:32" pos:end="229:38"><operator pos:start="229:32" pos:end="229:32">&amp;</operator><name pos:start="229:33" pos:end="229:38">result</name></expr></argument>, <argument pos:start="229:41" pos:end="229:44"><expr pos:start="229:41" pos:end="229:44"><name pos:start="229:41" pos:end="229:44">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="231:13" pos:end="235:13"><if pos:start="231:13" pos:end="235:13">if <condition pos:start="231:16" pos:end="231:20">(<expr pos:start="231:17" pos:end="231:19"><name pos:start="231:17" pos:end="231:19">ret</name></expr>)</condition> <block pos:start="231:22" pos:end="235:13">{<block_content pos:start="233:17" pos:end="233:25">

                <goto pos:start="233:17" pos:end="233:25">goto <name pos:start="233:22" pos:end="233:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="243:5" pos:end="245:72"><expr pos:start="243:5" pos:end="245:71"><name pos:start="243:5" pos:end="243:23"><name pos:start="243:5" pos:end="243:5">s</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:23">need_check_timer</name></name> <operator pos:start="243:25" pos:end="243:25">=</operator> <call pos:start="243:27" pos:end="245:71"><name pos:start="243:27" pos:end="243:43">qemu_new_timer_ns</name><argument_list pos:start="243:44" pos:end="245:71">(<argument pos:start="243:45" pos:end="243:52"><expr pos:start="243:45" pos:end="243:52"><name pos:start="243:45" pos:end="243:52">vm_clock</name></expr></argument>,

                                            <argument pos:start="245:45" pos:end="245:67"><expr pos:start="245:45" pos:end="245:67"><name pos:start="245:45" pos:end="245:67">qed_need_check_timer_cb</name></expr></argument>, <argument pos:start="245:70" pos:end="245:70"><expr pos:start="245:70" pos:end="245:70"><name pos:start="245:70" pos:end="245:70">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="249:1" pos:end="249:4"><name pos:start="249:1" pos:end="249:3">out</name>:</label>

    <if_stmt pos:start="251:5" pos:end="257:5"><if pos:start="251:5" pos:end="257:5">if <condition pos:start="251:8" pos:end="251:12">(<expr pos:start="251:9" pos:end="251:11"><name pos:start="251:9" pos:end="251:11">ret</name></expr>)</condition> <block pos:start="251:14" pos:end="257:5">{<block_content pos:start="253:9" pos:end="255:32">

        <expr_stmt pos:start="253:9" pos:end="253:40"><expr pos:start="253:9" pos:end="253:39"><call pos:start="253:9" pos:end="253:39"><name pos:start="253:9" pos:end="253:25">qed_free_l2_cache</name><argument_list pos:start="253:26" pos:end="253:39">(<argument pos:start="253:27" pos:end="253:38"><expr pos:start="253:27" pos:end="253:38"><operator pos:start="253:27" pos:end="253:27">&amp;</operator><name pos:start="253:28" pos:end="253:38"><name pos:start="253:28" pos:end="253:28">s</name><operator pos:start="253:29" pos:end="253:30">-&gt;</operator><name pos:start="253:31" pos:end="253:38">l2_cache</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:32"><expr pos:start="255:9" pos:end="255:31"><call pos:start="255:9" pos:end="255:31"><name pos:start="255:9" pos:end="255:18">qemu_vfree</name><argument_list pos:start="255:19" pos:end="255:31">(<argument pos:start="255:20" pos:end="255:30"><expr pos:start="255:20" pos:end="255:30"><name pos:start="255:20" pos:end="255:30"><name pos:start="255:20" pos:end="255:20">s</name><operator pos:start="255:21" pos:end="255:22">-&gt;</operator><name pos:start="255:23" pos:end="255:30">l1_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="259:5" pos:end="259:15">return <expr pos:start="259:12" pos:end="259:14"><name pos:start="259:12" pos:end="259:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
