<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20211.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">cuda_receive_packet</name><parameter_list pos:start="1:32" pos:end="3:61">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:41">CUDAState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><specifier pos:start="3:33" pos:end="3:37">const</specifier> <name pos:start="3:39" pos:end="3:45">uint8_t</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">data</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:60"><decl pos:start="3:54" pos:end="3:60"><type pos:start="3:54" pos:end="3:60"><name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:60">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="119:1">{<block_content pos:start="7:5" pos:end="117:5">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:20"><name pos:start="7:13" pos:end="7:16">obuf</name><index pos:start="7:17" pos:end="7:20">[<expr pos:start="7:18" pos:end="7:19"><literal type="number" pos:start="7:18" pos:end="7:19">16</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">ti</name></decl>, <decl pos:start="9:13" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:13" pos:end="9:20">autopoll</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="117:5">switch<condition pos:start="13:11" pos:end="13:19">(<expr pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:15">data</name><index pos:start="13:16" pos:end="13:18">[<expr pos:start="13:17" pos:end="13:17"><literal type="number" pos:start="13:17" pos:end="13:17">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="13:21" pos:end="117:5">{<block_content pos:start="15:5" pos:end="115:14">

    <case pos:start="15:5" pos:end="15:23">case <expr pos:start="15:10" pos:end="15:22"><name pos:start="15:10" pos:end="15:22">CUDA_AUTOPOLL</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:34"><expr pos:start="17:9" pos:end="17:33"><name pos:start="17:9" pos:end="17:16">autopoll</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <operator pos:start="17:20" pos:end="17:20">(</operator><name pos:start="17:21" pos:end="17:27"><name pos:start="17:21" pos:end="17:24">data</name><index pos:start="17:25" pos:end="17:27">[<expr pos:start="17:26" pos:end="17:26"><literal type="number" pos:start="17:26" pos:end="17:26">1</literal></expr>]</index></name> <operator pos:start="17:29" pos:end="17:30">!=</operator> <literal type="number" pos:start="17:32" pos:end="17:32">0</literal><operator pos:start="17:33" pos:end="17:33">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="37:9"><if pos:start="19:9" pos:end="37:9">if <condition pos:start="19:12" pos:end="19:36">(<expr pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:20">autopoll</name> <operator pos:start="19:22" pos:end="19:23">!=</operator> <name pos:start="19:25" pos:end="19:35"><name pos:start="19:25" pos:end="19:25">s</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:35">autopoll</name></name></expr>)</condition> <block pos:start="19:38" pos:end="37:9">{<block_content pos:start="21:13" pos:end="35:13">

            <expr_stmt pos:start="21:13" pos:end="21:35"><expr pos:start="21:13" pos:end="21:34"><name pos:start="21:13" pos:end="21:23"><name pos:start="21:13" pos:end="21:13">s</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">autopoll</name></name> <operator pos:start="21:25" pos:end="21:25">=</operator> <name pos:start="21:27" pos:end="21:34">autopoll</name></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="35:13"><if pos:start="23:13" pos:end="31:13">if <condition pos:start="23:16" pos:end="23:25">(<expr pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:24">autopoll</name></expr>)</condition> <block pos:start="23:27" pos:end="31:13">{<block_content pos:start="25:17" pos:end="29:69">

                <expr_stmt pos:start="25:17" pos:end="29:69"><expr pos:start="25:17" pos:end="29:68"><call pos:start="25:17" pos:end="29:68"><name pos:start="25:17" pos:end="25:30">qemu_mod_timer</name><argument_list pos:start="25:31" pos:end="29:68">(<argument pos:start="25:32" pos:end="25:48"><expr pos:start="25:32" pos:end="25:48"><name pos:start="25:32" pos:end="25:48"><name pos:start="25:32" pos:end="25:32">s</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:48">adb_poll_timer</name></name></expr></argument>,

                               <argument pos:start="27:32" pos:end="29:67"><expr pos:start="27:32" pos:end="29:67"><call pos:start="27:32" pos:end="27:55"><name pos:start="27:32" pos:end="27:45">qemu_get_clock</name><argument_list pos:start="27:46" pos:end="27:55">(<argument pos:start="27:47" pos:end="27:54"><expr pos:start="27:47" pos:end="27:54"><name pos:start="27:47" pos:end="27:54">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="27:57" pos:end="27:57">+</operator>

                               <operator pos:start="29:32" pos:end="29:32">(</operator><name pos:start="29:33" pos:end="29:45">ticks_per_sec</name> <operator pos:start="29:47" pos:end="29:47">/</operator> <name pos:start="29:49" pos:end="29:66">CUDA_ADB_POLL_FREQ</name><operator pos:start="29:67" pos:end="29:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="31:15" pos:end="35:13">else <block pos:start="31:20" pos:end="35:13">{<block_content pos:start="33:17" pos:end="33:50">

                <expr_stmt pos:start="33:17" pos:end="33:50"><expr pos:start="33:17" pos:end="33:49"><call pos:start="33:17" pos:end="33:49"><name pos:start="33:17" pos:end="33:30">qemu_del_timer</name><argument_list pos:start="33:31" pos:end="33:49">(<argument pos:start="33:32" pos:end="33:48"><expr pos:start="33:32" pos:end="33:48"><name pos:start="33:32" pos:end="33:48"><name pos:start="33:32" pos:end="33:32">s</name><operator pos:start="33:33" pos:end="33:34">-&gt;</operator><name pos:start="33:35" pos:end="33:48">adb_poll_timer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:12">obuf</name><index pos:start="39:13" pos:end="39:15">[<expr pos:start="39:14" pos:end="39:14"><literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>]</index></name> <operator pos:start="39:17" pos:end="39:17">=</operator> <name pos:start="39:19" pos:end="39:29">CUDA_PACKET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:26"><expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:12">obuf</name><index pos:start="41:13" pos:end="41:15">[<expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">1</literal></expr>]</index></name> <operator pos:start="41:17" pos:end="41:17">=</operator> <name pos:start="41:19" pos:end="41:25"><name pos:start="41:19" pos:end="41:22">data</name><index pos:start="41:23" pos:end="41:25">[<expr pos:start="41:24" pos:end="41:24"><literal type="number" pos:start="41:24" pos:end="41:24">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:45"><expr pos:start="43:9" pos:end="43:44"><call pos:start="43:9" pos:end="43:44"><name pos:start="43:9" pos:end="43:32">cuda_send_packet_to_host</name><argument_list pos:start="43:33" pos:end="43:44">(<argument pos:start="43:34" pos:end="43:34"><expr pos:start="43:34" pos:end="43:34"><name pos:start="43:34" pos:end="43:34">s</name></expr></argument>, <argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">obuf</name></expr></argument>, <argument pos:start="43:43" pos:end="43:43"><expr pos:start="43:43" pos:end="43:43"><literal type="number" pos:start="43:43" pos:end="43:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:23">case <expr pos:start="47:10" pos:end="47:22"><name pos:start="47:10" pos:end="47:22">CUDA_GET_TIME</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:23">case <expr pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:22">CUDA_SET_TIME</name></expr>:</case>

        <comment type="block" pos:start="51:9" pos:end="51:37">/* XXX: add time support ? */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:10">ti</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <call pos:start="53:14" pos:end="53:23"><name pos:start="53:14" pos:end="53:17">time</name><argument_list pos:start="53:18" pos:end="53:23">(<argument pos:start="53:19" pos:end="53:22"><expr pos:start="53:19" pos:end="53:22"><name pos:start="53:19" pos:end="53:22">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="53:25" pos:end="53:25">+</operator> <name pos:start="53:27" pos:end="53:36">RTC_OFFSET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:30"><expr pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:12">obuf</name><index pos:start="55:13" pos:end="55:15">[<expr pos:start="55:14" pos:end="55:14"><literal type="number" pos:start="55:14" pos:end="55:14">0</literal></expr>]</index></name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:29">CUDA_PACKET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:20"><expr pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">obuf</name><index pos:start="57:13" pos:end="57:15">[<expr pos:start="57:14" pos:end="57:14"><literal type="number" pos:start="57:14" pos:end="57:14">1</literal></expr>]</index></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:20"><expr pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:12">obuf</name><index pos:start="59:13" pos:end="59:15">[<expr pos:start="59:14" pos:end="59:14"><literal type="number" pos:start="59:14" pos:end="59:14">2</literal></expr>]</index></name> <operator pos:start="59:17" pos:end="59:17">=</operator> <literal type="number" pos:start="59:19" pos:end="59:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:27"><expr pos:start="61:9" pos:end="61:26"><name pos:start="61:9" pos:end="61:15"><name pos:start="61:9" pos:end="61:12">obuf</name><index pos:start="61:13" pos:end="61:15">[<expr pos:start="61:14" pos:end="61:14"><literal type="number" pos:start="61:14" pos:end="61:14">3</literal></expr>]</index></name> <operator pos:start="61:17" pos:end="61:17">=</operator> <name pos:start="61:19" pos:end="61:20">ti</name> <operator pos:start="61:22" pos:end="61:23">&gt;&gt;</operator> <literal type="number" pos:start="61:25" pos:end="61:26">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:27"><expr pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:12">obuf</name><index pos:start="63:13" pos:end="63:15">[<expr pos:start="63:14" pos:end="63:14"><literal type="number" pos:start="63:14" pos:end="63:14">4</literal></expr>]</index></name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:20">ti</name> <operator pos:start="63:22" pos:end="63:23">&gt;&gt;</operator> <literal type="number" pos:start="63:25" pos:end="63:26">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:12">obuf</name><index pos:start="65:13" pos:end="65:15">[<expr pos:start="65:14" pos:end="65:14"><literal type="number" pos:start="65:14" pos:end="65:14">5</literal></expr>]</index></name> <operator pos:start="65:17" pos:end="65:17">=</operator> <name pos:start="65:19" pos:end="65:20">ti</name> <operator pos:start="65:22" pos:end="65:23">&gt;&gt;</operator> <literal type="number" pos:start="65:25" pos:end="65:25">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:21"><expr pos:start="67:9" pos:end="67:20"><name pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:12">obuf</name><index pos:start="67:13" pos:end="67:15">[<expr pos:start="67:14" pos:end="67:14"><literal type="number" pos:start="67:14" pos:end="67:14">6</literal></expr>]</index></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:20">ti</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:45"><expr pos:start="69:9" pos:end="69:44"><call pos:start="69:9" pos:end="69:44"><name pos:start="69:9" pos:end="69:32">cuda_send_packet_to_host</name><argument_list pos:start="69:33" pos:end="69:44">(<argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">s</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><name pos:start="69:37" pos:end="69:40">obuf</name></expr></argument>, <argument pos:start="69:43" pos:end="69:43"><expr pos:start="69:43" pos:end="69:43"><literal type="number" pos:start="69:43" pos:end="69:43">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:31">case <expr pos:start="73:10" pos:end="73:30"><name pos:start="73:10" pos:end="73:30">CUDA_FILE_SERVER_FLAG</name></expr>:</case>

    <case pos:start="75:5" pos:end="75:30">case <expr pos:start="75:10" pos:end="75:29"><name pos:start="75:10" pos:end="75:29">CUDA_SET_DEVICE_LIST</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:28">case <expr pos:start="77:10" pos:end="77:27"><name pos:start="77:10" pos:end="77:27">CUDA_SET_AUTO_RATE</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:33">case <expr pos:start="79:10" pos:end="79:32"><name pos:start="79:10" pos:end="79:32">CUDA_SET_POWER_MESSAGES</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:30"><expr pos:start="81:9" pos:end="81:29"><name pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:12">obuf</name><index pos:start="81:13" pos:end="81:15">[<expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>]</index></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:29">CUDA_PACKET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:20"><expr pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:15"><name pos:start="83:9" pos:end="83:12">obuf</name><index pos:start="83:13" pos:end="83:15">[<expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">1</literal></expr>]</index></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <literal type="number" pos:start="83:19" pos:end="83:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:45"><expr pos:start="85:9" pos:end="85:44"><call pos:start="85:9" pos:end="85:44"><name pos:start="85:9" pos:end="85:32">cuda_send_packet_to_host</name><argument_list pos:start="85:33" pos:end="85:44">(<argument pos:start="85:34" pos:end="85:34"><expr pos:start="85:34" pos:end="85:34"><name pos:start="85:34" pos:end="85:34">s</name></expr></argument>, <argument pos:start="85:37" pos:end="85:40"><expr pos:start="85:37" pos:end="85:40"><name pos:start="85:37" pos:end="85:40">obuf</name></expr></argument>, <argument pos:start="85:43" pos:end="85:43"><expr pos:start="85:43" pos:end="85:43"><literal type="number" pos:start="85:43" pos:end="85:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    <case pos:start="89:5" pos:end="89:24">case <expr pos:start="89:10" pos:end="89:23"><name pos:start="89:10" pos:end="89:23">CUDA_POWERDOWN</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:30"><expr pos:start="91:9" pos:end="91:29"><name pos:start="91:9" pos:end="91:15"><name pos:start="91:9" pos:end="91:12">obuf</name><index pos:start="91:13" pos:end="91:15">[<expr pos:start="91:14" pos:end="91:14"><literal type="number" pos:start="91:14" pos:end="91:14">0</literal></expr>]</index></name> <operator pos:start="91:17" pos:end="91:17">=</operator> <name pos:start="91:19" pos:end="91:29">CUDA_PACKET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:20"><expr pos:start="93:9" pos:end="93:19"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:12">obuf</name><index pos:start="93:13" pos:end="93:15">[<expr pos:start="93:14" pos:end="93:14"><literal type="number" pos:start="93:14" pos:end="93:14">1</literal></expr>]</index></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <literal type="number" pos:start="93:19" pos:end="93:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><call pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:32">cuda_send_packet_to_host</name><argument_list pos:start="95:33" pos:end="95:44">(<argument pos:start="95:34" pos:end="95:34"><expr pos:start="95:34" pos:end="95:34"><name pos:start="95:34" pos:end="95:34">s</name></expr></argument>, <argument pos:start="95:37" pos:end="95:40"><expr pos:start="95:37" pos:end="95:40"><name pos:start="95:37" pos:end="95:40">obuf</name></expr></argument>, <argument pos:start="95:43" pos:end="95:43"><expr pos:start="95:43" pos:end="95:43"><literal type="number" pos:start="95:43" pos:end="95:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="97:9" pos:end="97:39"><expr pos:start="97:9" pos:end="97:38"><call pos:start="97:9" pos:end="97:38"><name pos:start="97:9" pos:end="97:36">qemu_system_shutdown_request</name><argument_list pos:start="97:37" pos:end="97:38">()</argument_list></call></expr>;</expr_stmt>

	<break pos:start="99:9" pos:end="99:14">break;</break>

    <case pos:start="101:5" pos:end="101:27">case <expr pos:start="101:10" pos:end="101:26"><name pos:start="101:10" pos:end="101:26">CUDA_RESET_SYSTEM</name></expr>:</case>

        <expr_stmt pos:start="103:9" pos:end="103:30"><expr pos:start="103:9" pos:end="103:29"><name pos:start="103:9" pos:end="103:15"><name pos:start="103:9" pos:end="103:12">obuf</name><index pos:start="103:13" pos:end="103:15">[<expr pos:start="103:14" pos:end="103:14"><literal type="number" pos:start="103:14" pos:end="103:14">0</literal></expr>]</index></name> <operator pos:start="103:17" pos:end="103:17">=</operator> <name pos:start="103:19" pos:end="103:29">CUDA_PACKET</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:20"><expr pos:start="105:9" pos:end="105:19"><name pos:start="105:9" pos:end="105:15"><name pos:start="105:9" pos:end="105:12">obuf</name><index pos:start="105:13" pos:end="105:15">[<expr pos:start="105:14" pos:end="105:14"><literal type="number" pos:start="105:14" pos:end="105:14">1</literal></expr>]</index></name> <operator pos:start="105:17" pos:end="105:17">=</operator> <literal type="number" pos:start="105:19" pos:end="105:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:45"><expr pos:start="107:9" pos:end="107:44"><call pos:start="107:9" pos:end="107:44"><name pos:start="107:9" pos:end="107:32">cuda_send_packet_to_host</name><argument_list pos:start="107:33" pos:end="107:44">(<argument pos:start="107:34" pos:end="107:34"><expr pos:start="107:34" pos:end="107:34"><name pos:start="107:34" pos:end="107:34">s</name></expr></argument>, <argument pos:start="107:37" pos:end="107:40"><expr pos:start="107:37" pos:end="107:40"><name pos:start="107:37" pos:end="107:40">obuf</name></expr></argument>, <argument pos:start="107:43" pos:end="107:43"><expr pos:start="107:43" pos:end="107:43"><literal type="number" pos:start="107:43" pos:end="107:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:36"><expr pos:start="109:9" pos:end="109:35"><call pos:start="109:9" pos:end="109:35"><name pos:start="109:9" pos:end="109:33">qemu_system_reset_request</name><argument_list pos:start="109:34" pos:end="109:35">()</argument_list></call></expr>;</expr_stmt>

        <break pos:start="111:9" pos:end="111:14">break;</break>

    <default pos:start="113:5" pos:end="113:12">default:</default>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
