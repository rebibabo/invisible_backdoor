<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19569.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:38">ftp_connect_data_connection</name><parameter_list pos:start="1:39" pos:end="1:53">(<parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:51"><name pos:start="1:40" pos:end="1:49">URLContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:52">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="63:1">{<block_content pos:start="5:5" pos:end="61:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:51"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:33"><name pos:start="7:10" pos:end="7:12">buf</name><index pos:start="7:13" pos:end="7:33">[<expr pos:start="7:14" pos:end="7:32"><name pos:start="7:14" pos:end="7:32">CONTROL_BUFFER_SIZE</name></expr>]</index></name></decl>, <decl pos:start="7:36" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:8"/><name pos:start="7:36" pos:end="7:50"><name pos:start="7:36" pos:end="7:46">opts_format</name><index pos:start="7:47" pos:end="7:50">[<expr pos:start="7:48" pos:end="7:49"><literal type="number" pos:start="7:48" pos:end="7:49">20</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:30"><decl pos:start="9:5" pos:end="9:29"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVDictionary</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:22">opts</name> <init pos:start="9:24" pos:end="9:29">= <expr pos:start="9:26" pos:end="9:29"><name pos:start="9:26" pos:end="9:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">FTPContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">s</name> <init pos:start="11:19" pos:end="11:32">= <expr pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:32"><name pos:start="11:21" pos:end="11:21">h</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:32">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="57:5"><if pos:start="15:5" pos:end="57:5">if <condition pos:start="15:8" pos:end="15:22">(<expr pos:start="15:9" pos:end="15:21"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:10">s</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:21">conn_data</name></name></expr>)</condition> <block pos:start="15:24" pos:end="57:5">{<block_content pos:start="19:9" pos:end="55:27">

        <comment type="block" pos:start="17:9" pos:end="17:32">/* Enter passive mode */</comment>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:44">(<expr pos:start="19:13" pos:end="19:43"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">err</name> <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:38"><name pos:start="19:20" pos:end="19:35">ftp_passive_mode</name><argument_list pos:start="19:36" pos:end="19:38">(<argument pos:start="19:37" pos:end="19:37"><expr pos:start="19:37" pos:end="19:37"><name pos:start="19:37" pos:end="19:37">s</name></expr></argument>)</argument_list></call><operator pos:start="19:39" pos:end="19:39">)</operator> <operator pos:start="19:41" pos:end="19:41">&lt;</operator> <literal type="number" pos:start="19:43" pos:end="19:43">0</literal></expr>)</condition> <block pos:start="19:46" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:23">

            <expr_stmt pos:start="21:13" pos:end="21:52"><expr pos:start="21:13" pos:end="21:51"><call pos:start="21:13" pos:end="21:51"><name pos:start="21:13" pos:end="21:19">av_dlog</name><argument_list pos:start="21:20" pos:end="21:51">(<argument pos:start="21:21" pos:end="21:21"><expr pos:start="21:21" pos:end="21:21"><name pos:start="21:21" pos:end="21:21">h</name></expr></argument>, <argument pos:start="21:24" pos:end="21:50"><expr pos:start="21:24" pos:end="21:50"><literal type="string" pos:start="21:24" pos:end="21:50">"Set passive mode failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="23:13" pos:end="23:23">return <expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="27:9" pos:end="27:34">/* Open data connection */</comment>

        <expr_stmt pos:start="29:9" pos:end="29:91"><expr pos:start="29:9" pos:end="29:90"><call pos:start="29:9" pos:end="29:90"><name pos:start="29:9" pos:end="29:19">ff_url_join</name><argument_list pos:start="29:20" pos:end="29:90">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">buf</name></expr></argument>, <argument pos:start="29:26" pos:end="29:36"><expr pos:start="29:26" pos:end="29:36"><sizeof pos:start="29:26" pos:end="29:36">sizeof<argument_list pos:start="29:32" pos:end="29:36">(<argument pos:start="29:33" pos:end="29:35"><expr pos:start="29:33" pos:end="29:35"><name pos:start="29:33" pos:end="29:35">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="29:39" pos:end="29:43"><expr pos:start="29:39" pos:end="29:43"><literal type="string" pos:start="29:39" pos:end="29:43">"tcp"</literal></expr></argument>, <argument pos:start="29:46" pos:end="29:49"><expr pos:start="29:46" pos:end="29:49"><name pos:start="29:46" pos:end="29:49">NULL</name></expr></argument>, <argument pos:start="29:52" pos:end="29:62"><expr pos:start="29:52" pos:end="29:62"><name pos:start="29:52" pos:end="29:62"><name pos:start="29:52" pos:end="29:52">s</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:62">hostname</name></name></expr></argument>, <argument pos:start="29:65" pos:end="29:83"><expr pos:start="29:65" pos:end="29:83"><name pos:start="29:65" pos:end="29:83"><name pos:start="29:65" pos:end="29:65">s</name><operator pos:start="29:66" pos:end="29:67">-&gt;</operator><name pos:start="29:68" pos:end="29:83">server_data_port</name></name></expr></argument>, <argument pos:start="29:86" pos:end="29:89"><expr pos:start="29:86" pos:end="29:89"><name pos:start="29:86" pos:end="29:89">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if <condition pos:start="31:12" pos:end="31:32">(<expr pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:25">rw_timeout</name></name> <operator pos:start="31:27" pos:end="31:28">!=</operator> <operator pos:start="31:30" pos:end="31:30">-</operator><literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>)</condition> <block pos:start="31:34" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:58">

            <expr_stmt pos:start="33:13" pos:end="33:76"><expr pos:start="33:13" pos:end="33:75"><call pos:start="33:13" pos:end="33:75"><name pos:start="33:13" pos:end="33:20">snprintf</name><argument_list pos:start="33:21" pos:end="33:75">(<argument pos:start="33:22" pos:end="33:32"><expr pos:start="33:22" pos:end="33:32"><name pos:start="33:22" pos:end="33:32">opts_format</name></expr></argument>, <argument pos:start="33:35" pos:end="33:53"><expr pos:start="33:35" pos:end="33:53"><sizeof pos:start="33:35" pos:end="33:53">sizeof<argument_list pos:start="33:41" pos:end="33:53">(<argument pos:start="33:42" pos:end="33:52"><expr pos:start="33:42" pos:end="33:52"><name pos:start="33:42" pos:end="33:52">opts_format</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="33:56" pos:end="33:59"><expr pos:start="33:56" pos:end="33:59"><literal type="string" pos:start="33:56" pos:end="33:59">"%d"</literal></expr></argument>, <argument pos:start="33:62" pos:end="33:74"><expr pos:start="33:62" pos:end="33:74"><name pos:start="33:62" pos:end="33:74"><name pos:start="33:62" pos:end="33:62">s</name><operator pos:start="33:63" pos:end="33:64">-&gt;</operator><name pos:start="33:65" pos:end="33:74">rw_timeout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:58"><expr pos:start="35:13" pos:end="35:57"><call pos:start="35:13" pos:end="35:57"><name pos:start="35:13" pos:end="35:23">av_dict_set</name><argument_list pos:start="35:24" pos:end="35:57">(<argument pos:start="35:25" pos:end="35:29"><expr pos:start="35:25" pos:end="35:29"><operator pos:start="35:25" pos:end="35:25">&amp;</operator><name pos:start="35:26" pos:end="35:29">opts</name></expr></argument>, <argument pos:start="35:32" pos:end="35:40"><expr pos:start="35:32" pos:end="35:40"><literal type="string" pos:start="35:32" pos:end="35:40">"timeout"</literal></expr></argument>, <argument pos:start="35:43" pos:end="35:53"><expr pos:start="35:43" pos:end="35:53"><name pos:start="35:43" pos:end="35:53">opts_format</name></expr></argument>, <argument pos:start="35:56" pos:end="35:56"><expr pos:start="35:56" pos:end="35:56"><literal type="number" pos:start="35:56" pos:end="35:56">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt> <comment type="block" pos:start="37:11" pos:end="37:85">/* if option is not given, don't pass it and let tcp use its own default */</comment>

        <expr_stmt pos:start="39:9" pos:end="41:56"><expr pos:start="39:9" pos:end="41:55"><name pos:start="39:9" pos:end="39:11">err</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="41:55"><name pos:start="39:15" pos:end="39:24">ffurl_open</name><argument_list pos:start="39:25" pos:end="41:55">(<argument pos:start="39:26" pos:end="39:38"><expr pos:start="39:26" pos:end="39:38"><operator pos:start="39:26" pos:end="39:26">&amp;</operator><name pos:start="39:27" pos:end="39:38"><name pos:start="39:27" pos:end="39:27">s</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:38">conn_data</name></name></expr></argument>, <argument pos:start="39:41" pos:end="39:43"><expr pos:start="39:41" pos:end="39:43"><name pos:start="39:41" pos:end="39:43">buf</name></expr></argument>, <argument pos:start="39:46" pos:end="39:65"><expr pos:start="39:46" pos:end="39:65"><name pos:start="39:46" pos:end="39:65">AVIO_FLAG_READ_WRITE</name></expr></argument>,

                         <argument pos:start="41:26" pos:end="41:47"><expr pos:start="41:26" pos:end="41:47"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:47"><name pos:start="41:27" pos:end="41:27">h</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:47">interrupt_callback</name></name></expr></argument>, <argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><operator pos:start="41:50" pos:end="41:50">&amp;</operator><name pos:start="41:51" pos:end="41:54">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:28"><expr pos:start="43:9" pos:end="43:27"><call pos:start="43:9" pos:end="43:27"><name pos:start="43:9" pos:end="43:20">av_dict_free</name><argument_list pos:start="43:21" pos:end="43:27">(<argument pos:start="43:22" pos:end="43:26"><expr pos:start="43:22" pos:end="43:26"><operator pos:start="43:22" pos:end="43:22">&amp;</operator><name pos:start="43:23" pos:end="43:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="47:23"><if pos:start="45:9" pos:end="47:23">if <condition pos:start="45:12" pos:end="45:20">(<expr pos:start="45:13" pos:end="45:19"><name pos:start="45:13" pos:end="45:15">err</name> <operator pos:start="45:17" pos:end="45:17">&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:19">0</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:23"><block_content pos:start="47:13" pos:end="47:23">

            <return pos:start="47:13" pos:end="47:23">return <expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">err</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="55:27"><if pos:start="51:9" pos:end="55:27">if <condition pos:start="51:12" pos:end="51:24">(<expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:13">s</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:23">position</name></name></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="55:27"><block_content pos:start="53:13" pos:end="55:27">

            <if_stmt pos:start="53:13" pos:end="55:27"><if pos:start="53:13" pos:end="55:27">if <condition pos:start="53:16" pos:end="53:56">(<expr pos:start="53:17" pos:end="53:55"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:20">err</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <call pos:start="53:24" pos:end="53:50"><name pos:start="53:24" pos:end="53:34">ftp_restart</name><argument_list pos:start="53:35" pos:end="53:50">(<argument pos:start="53:36" pos:end="53:36"><expr pos:start="53:36" pos:end="53:36"><name pos:start="53:36" pos:end="53:36">s</name></expr></argument>, <argument pos:start="53:39" pos:end="53:49"><expr pos:start="53:39" pos:end="53:49"><name pos:start="53:39" pos:end="53:49"><name pos:start="53:39" pos:end="53:39">s</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:49">position</name></name></expr></argument>)</argument_list></call><operator pos:start="53:51" pos:end="53:51">)</operator> <operator pos:start="53:53" pos:end="53:53">&lt;</operator> <literal type="number" pos:start="53:55" pos:end="53:55">0</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:27"><block_content pos:start="55:17" pos:end="55:27">

                <return pos:start="55:17" pos:end="55:27">return <expr pos:start="55:24" pos:end="55:26"><name pos:start="55:24" pos:end="55:26">err</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:21"><expr pos:start="59:5" pos:end="59:20"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:12">state</name></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:20">READY</name></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:13">return <expr pos:start="61:12" pos:end="61:12"><literal type="number" pos:start="61:12" pos:end="61:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
