<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14206.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">skip_check</name><parameter_list pos:start="1:22" pos:end="1:66">(<parameter pos:start="1:23" pos:end="1:39"><decl pos:start="1:23" pos:end="1:39"><type pos:start="1:23" pos:end="1:39"><name pos:start="1:23" pos:end="1:36">MpegEncContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:51"><decl pos:start="1:42" pos:end="1:51"><type pos:start="1:42" pos:end="1:51"><name pos:start="1:42" pos:end="1:48">Picture</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">p</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:60">Picture</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">ref</name></decl></parameter>)</parameter_list><block pos:start="1:67" pos:end="61:1">{<block_content pos:start="3:5" pos:end="59:13">

    <decl_stmt pos:start="3:5" pos:end="3:20"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">x</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">y</name></decl>, <decl pos:start="3:15" pos:end="3:19"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:15" pos:end="3:19">plane</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">score</name><init pos:start="5:14" pos:end="5:15">=<expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:19">score64</name><init pos:start="7:20" pos:end="7:21">=<expr pos:start="7:21" pos:end="7:21"><literal type="number" pos:start="7:21" pos:end="7:21">0</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="11:5" pos:end="43:5">for<control pos:start="11:8" pos:end="11:34">(<init pos:start="11:9" pos:end="11:16"><expr pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:13">plane</name><operator pos:start="11:14" pos:end="11:14">=</operator><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr>;</init> <condition pos:start="11:18" pos:end="11:25"><expr pos:start="11:18" pos:end="11:24"><name pos:start="11:18" pos:end="11:22">plane</name><operator pos:start="11:23" pos:end="11:23">&lt;</operator><literal type="number" pos:start="11:24" pos:end="11:24">3</literal></expr>;</condition> <incr pos:start="11:27" pos:end="11:33"><expr pos:start="11:27" pos:end="11:33"><name pos:start="11:27" pos:end="11:31">plane</name><operator pos:start="11:32" pos:end="11:33">++</operator></expr></incr>)</control><block pos:start="11:35" pos:end="43:5">{<block_content pos:start="13:9" pos:end="41:9">

        <decl_stmt pos:start="13:9" pos:end="13:45"><decl pos:start="13:9" pos:end="13:44"><type pos:start="13:9" pos:end="13:17"><specifier pos:start="13:9" pos:end="13:13">const</specifier> <name pos:start="13:15" pos:end="13:17">int</name></type> <name pos:start="13:19" pos:end="13:24">stride</name><init pos:start="13:25" pos:end="13:44">= <expr pos:start="13:27" pos:end="13:44"><name pos:start="13:27" pos:end="13:44"><name pos:start="13:27" pos:end="13:27">p</name><operator pos:start="13:28" pos:end="13:29">-&gt;</operator><name pos:start="13:30" pos:end="13:37">linesize</name><index pos:start="13:38" pos:end="13:44">[<expr pos:start="13:39" pos:end="13:43"><name pos:start="13:39" pos:end="13:43">plane</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:17"><specifier pos:start="15:9" pos:end="15:13">const</specifier> <name pos:start="15:15" pos:end="15:17">int</name></type> <name pos:start="15:19" pos:end="15:20">bw</name><init pos:start="15:21" pos:end="15:35">= <expr pos:start="15:23" pos:end="15:35"><ternary pos:start="15:23" pos:end="15:35"><condition pos:start="15:23" pos:end="15:29"><expr pos:start="15:23" pos:end="15:27"><name pos:start="15:23" pos:end="15:27">plane</name></expr> ?</condition><then pos:start="15:31" pos:end="15:31"> <expr pos:start="15:31" pos:end="15:31"><literal type="number" pos:start="15:31" pos:end="15:31">1</literal></expr> </then><else pos:start="15:33" pos:end="15:35">: <expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">2</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

        <for pos:start="17:9" pos:end="41:9">for<control pos:start="17:12" pos:end="17:40">(<init pos:start="17:13" pos:end="17:16"><expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:13">y</name><operator pos:start="17:14" pos:end="17:14">=</operator><literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</init> <condition pos:start="17:18" pos:end="17:35"><expr pos:start="17:18" pos:end="17:34"><name pos:start="17:18" pos:end="17:18">y</name><operator pos:start="17:19" pos:end="17:19">&lt;</operator><name pos:start="17:20" pos:end="17:31"><name pos:start="17:20" pos:end="17:20">s</name><operator pos:start="17:21" pos:end="17:22">-&gt;</operator><name pos:start="17:23" pos:end="17:31">mb_height</name></name><operator pos:start="17:32" pos:end="17:32">*</operator><name pos:start="17:33" pos:end="17:34">bw</name></expr>;</condition> <incr pos:start="17:37" pos:end="17:39"><expr pos:start="17:37" pos:end="17:39"><name pos:start="17:37" pos:end="17:37">y</name><operator pos:start="17:38" pos:end="17:39">++</operator></expr></incr>)</control><block pos:start="17:41" pos:end="41:9">{<block_content pos:start="19:13" pos:end="39:13">

            <for pos:start="19:13" pos:end="39:13">for<control pos:start="19:16" pos:end="19:43">(<init pos:start="19:17" pos:end="19:20"><expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:17">x</name><operator pos:start="19:18" pos:end="19:18">=</operator><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr>;</init> <condition pos:start="19:22" pos:end="19:38"><expr pos:start="19:22" pos:end="19:37"><name pos:start="19:22" pos:end="19:22">x</name><operator pos:start="19:23" pos:end="19:23">&lt;</operator><name pos:start="19:24" pos:end="19:34"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:34">mb_width</name></name><operator pos:start="19:35" pos:end="19:35">*</operator><name pos:start="19:36" pos:end="19:37">bw</name></expr>;</condition> <incr pos:start="19:40" pos:end="19:42"><expr pos:start="19:40" pos:end="19:42"><name pos:start="19:40" pos:end="19:40">x</name><operator pos:start="19:41" pos:end="19:42">++</operator></expr></incr>)</control><block pos:start="19:44" pos:end="39:13">{<block_content pos:start="21:17" pos:end="37:17">

                <decl_stmt pos:start="21:17" pos:end="21:134"><decl pos:start="21:17" pos:end="21:133"><type pos:start="21:17" pos:end="21:19"><name pos:start="21:17" pos:end="21:19">int</name></type> <name pos:start="21:21" pos:end="21:21">v</name><init pos:start="21:22" pos:end="21:133">= <expr pos:start="21:24" pos:end="21:133"><name pos:start="21:24" pos:end="21:47"><name pos:start="21:24" pos:end="21:24">s</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:29">dsp</name><operator pos:start="21:30" pos:end="21:30">.</operator><name pos:start="21:31" pos:end="21:44">frame_skip_cmp</name><index pos:start="21:45" pos:end="21:47">[<expr pos:start="21:46" pos:end="21:46"><literal type="number" pos:start="21:46" pos:end="21:46">1</literal></expr>]</index></name><operator pos:start="21:48" pos:end="21:48">(</operator><name pos:start="21:49" pos:end="21:49">s</name>, <name pos:start="21:52" pos:end="21:65"><name pos:start="21:52" pos:end="21:52">p</name><operator pos:start="21:53" pos:end="21:54">-&gt;</operator><name pos:start="21:55" pos:end="21:58">data</name><index pos:start="21:59" pos:end="21:65">[<expr pos:start="21:60" pos:end="21:64"><name pos:start="21:60" pos:end="21:64">plane</name></expr>]</index></name> <operator pos:start="21:67" pos:end="21:67">+</operator> <literal type="number" pos:start="21:69" pos:end="21:69">8</literal><operator pos:start="21:70" pos:end="21:70">*</operator><operator pos:start="21:71" pos:end="21:71">(</operator><name pos:start="21:72" pos:end="21:72">x</name> <operator pos:start="21:74" pos:end="21:74">+</operator> <name pos:start="21:76" pos:end="21:76">y</name><operator pos:start="21:77" pos:end="21:77">*</operator><name pos:start="21:78" pos:end="21:83">stride</name><operator pos:start="21:84" pos:end="21:84">)</operator>, <name pos:start="21:87" pos:end="21:102"><name pos:start="21:87" pos:end="21:89">ref</name><operator pos:start="21:90" pos:end="21:91">-&gt;</operator><name pos:start="21:92" pos:end="21:95">data</name><index pos:start="21:96" pos:end="21:102">[<expr pos:start="21:97" pos:end="21:101"><name pos:start="21:97" pos:end="21:101">plane</name></expr>]</index></name> <operator pos:start="21:104" pos:end="21:104">+</operator> <literal type="number" pos:start="21:106" pos:end="21:106">8</literal><operator pos:start="21:107" pos:end="21:107">*</operator><operator pos:start="21:108" pos:end="21:108">(</operator><name pos:start="21:109" pos:end="21:109">x</name> <operator pos:start="21:111" pos:end="21:111">+</operator> <name pos:start="21:113" pos:end="21:113">y</name><operator pos:start="21:114" pos:end="21:114">*</operator><name pos:start="21:115" pos:end="21:120">stride</name><operator pos:start="21:121" pos:end="21:121">)</operator>, <name pos:start="21:124" pos:end="21:129">stride</name>, <literal type="number" pos:start="21:132" pos:end="21:132">8</literal><operator pos:start="21:133" pos:end="21:133">)</operator></expr></init></decl>;</decl_stmt>

                

                <switch pos:start="25:17" pos:end="37:17">switch<condition pos:start="25:23" pos:end="25:48">(<expr pos:start="25:24" pos:end="25:47"><name pos:start="25:24" pos:end="25:47"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:31">avctx</name><operator pos:start="25:32" pos:end="25:33">-&gt;</operator><name pos:start="25:34" pos:end="25:47">frame_skip_exp</name></name></expr>)</condition><block pos:start="25:49" pos:end="37:17">{<block_content pos:start="27:21" pos:end="35:63">

                    <case pos:start="27:21" pos:end="27:27">case <expr pos:start="27:26" pos:end="27:26"><literal type="number" pos:start="27:26" pos:end="27:26">0</literal></expr>:</case> <expr_stmt pos:start="27:29" pos:end="27:51"><expr pos:start="27:29" pos:end="27:50"><name pos:start="27:29" pos:end="27:33">score</name><operator pos:start="27:34" pos:end="27:34">=</operator> <call pos:start="27:36" pos:end="27:50"><name pos:start="27:36" pos:end="27:40">FFMAX</name><argument_list pos:start="27:41" pos:end="27:50">(<argument pos:start="27:42" pos:end="27:46"><expr pos:start="27:42" pos:end="27:46"><name pos:start="27:42" pos:end="27:46">score</name></expr></argument>, <argument pos:start="27:49" pos:end="27:49"><expr pos:start="27:49" pos:end="27:49"><name pos:start="27:49" pos:end="27:49">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="27:53" pos:end="27:58">break;</break>

                    <case pos:start="29:21" pos:end="29:27">case <expr pos:start="29:26" pos:end="29:26"><literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>:</case> <expr_stmt pos:start="29:29" pos:end="29:43"><expr pos:start="29:29" pos:end="29:42"><name pos:start="29:29" pos:end="29:33">score</name><operator pos:start="29:34" pos:end="29:35">+=</operator> <call pos:start="29:37" pos:end="29:42"><name pos:start="29:37" pos:end="29:39">ABS</name><argument_list pos:start="29:40" pos:end="29:42">(<argument pos:start="29:41" pos:end="29:41"><expr pos:start="29:41" pos:end="29:41"><name pos:start="29:41" pos:end="29:41">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="29:44" pos:end="29:49">break;</break>

                    <case pos:start="31:21" pos:end="31:27">case <expr pos:start="31:26" pos:end="31:26"><literal type="number" pos:start="31:26" pos:end="31:26">2</literal></expr>:</case> <expr_stmt pos:start="31:29" pos:end="31:40"><expr pos:start="31:29" pos:end="31:39"><name pos:start="31:29" pos:end="31:33">score</name><operator pos:start="31:34" pos:end="31:35">+=</operator> <name pos:start="31:37" pos:end="31:37">v</name><operator pos:start="31:38" pos:end="31:38">*</operator><name pos:start="31:39" pos:end="31:39">v</name></expr>;</expr_stmt><break pos:start="31:41" pos:end="31:46">break;</break>

                    <case pos:start="33:21" pos:end="33:27">case <expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">3</literal></expr>:</case> <expr_stmt pos:start="33:29" pos:end="33:58"><expr pos:start="33:29" pos:end="33:57"><name pos:start="33:29" pos:end="33:35">score64</name><operator pos:start="33:36" pos:end="33:37">+=</operator> <call pos:start="33:39" pos:end="33:57"><name pos:start="33:39" pos:end="33:41">ABS</name><argument_list pos:start="33:42" pos:end="33:57">(<argument pos:start="33:43" pos:end="33:56"><expr pos:start="33:43" pos:end="33:56"><name pos:start="33:43" pos:end="33:43">v</name><operator pos:start="33:44" pos:end="33:44">*</operator><name pos:start="33:45" pos:end="33:45">v</name><operator pos:start="33:46" pos:end="33:46">*</operator><operator pos:start="33:47" pos:end="33:47">(</operator><name pos:start="33:48" pos:end="33:54">int64_t</name><operator pos:start="33:55" pos:end="33:55">)</operator><name pos:start="33:56" pos:end="33:56">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt><break pos:start="33:59" pos:end="33:64">break;</break>

                    <case pos:start="35:21" pos:end="35:27">case <expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">4</literal></expr>:</case> <expr_stmt pos:start="35:29" pos:end="35:57"><expr pos:start="35:29" pos:end="35:56"><name pos:start="35:29" pos:end="35:35">score64</name><operator pos:start="35:36" pos:end="35:37">+=</operator> <name pos:start="35:39" pos:end="35:39">v</name><operator pos:start="35:40" pos:end="35:40">*</operator><name pos:start="35:41" pos:end="35:41">v</name><operator pos:start="35:42" pos:end="35:42">*</operator><operator pos:start="35:43" pos:end="35:43">(</operator><name pos:start="35:44" pos:end="35:50">int64_t</name><operator pos:start="35:51" pos:end="35:51">)</operator><operator pos:start="35:52" pos:end="35:52">(</operator><name pos:start="35:53" pos:end="35:53">v</name><operator pos:start="35:54" pos:end="35:54">*</operator><name pos:start="35:55" pos:end="35:55">v</name><operator pos:start="35:56" pos:end="35:56">)</operator></expr>;</expr_stmt><break pos:start="35:58" pos:end="35:63">break;</break>

                </block_content>}</block></switch>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    

    <if_stmt pos:start="47:5" pos:end="47:29"><if pos:start="47:5" pos:end="47:29">if<condition pos:start="47:7" pos:end="47:13">(<expr pos:start="47:8" pos:end="47:12"><name pos:start="47:8" pos:end="47:12">score</name></expr>)</condition><block type="pseudo" pos:start="47:15" pos:end="47:29"><block_content pos:start="47:15" pos:end="47:29"> <expr_stmt pos:start="47:15" pos:end="47:29"><expr pos:start="47:15" pos:end="47:28"><name pos:start="47:15" pos:end="47:21">score64</name><operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:28">score</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="53:17"><if pos:start="51:5" pos:end="53:17">if<condition pos:start="51:7" pos:end="51:48">(<expr pos:start="51:8" pos:end="51:47"><name pos:start="51:8" pos:end="51:14">score64</name> <operator pos:start="51:16" pos:end="51:16">&lt;</operator> <name pos:start="51:18" pos:end="51:47"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:25">avctx</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:47">frame_skip_threshold</name></name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:17"><block_content pos:start="53:9" pos:end="53:17">

        <return pos:start="53:9" pos:end="53:17">return <expr pos:start="53:16" pos:end="53:16"><literal type="number" pos:start="53:16" pos:end="53:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="55:5" pos:end="57:17"><if pos:start="55:5" pos:end="57:17">if<condition pos:start="55:7" pos:end="55:73">(<expr pos:start="55:8" pos:end="55:72"><name pos:start="55:8" pos:end="55:14">score64</name> <operator pos:start="55:16" pos:end="55:16">&lt;</operator> <operator pos:start="55:18" pos:end="55:18">(</operator><operator pos:start="55:19" pos:end="55:19">(</operator><name pos:start="55:20" pos:end="55:46"><name pos:start="55:20" pos:end="55:20">s</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:27">avctx</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:46">frame_skip_factor</name></name> <operator pos:start="55:48" pos:end="55:48">*</operator> <operator pos:start="55:50" pos:end="55:50">(</operator><name pos:start="55:51" pos:end="55:57">int64_t</name><operator pos:start="55:58" pos:end="55:58">)</operator><name pos:start="55:59" pos:end="55:67"><name pos:start="55:59" pos:end="55:59">s</name><operator pos:start="55:60" pos:end="55:61">-&gt;</operator><name pos:start="55:62" pos:end="55:67">lambda</name></name><operator pos:start="55:68" pos:end="55:68">)</operator><operator pos:start="55:69" pos:end="55:70">&gt;&gt;</operator><literal type="number" pos:start="55:71" pos:end="55:71">8</literal><operator pos:start="55:72" pos:end="55:72">)</operator></expr>)</condition><block type="pseudo" pos:start="57:9" pos:end="57:17"><block_content pos:start="57:9" pos:end="57:17">

        <return pos:start="57:9" pos:end="57:17">return <expr pos:start="57:16" pos:end="57:16"><literal type="number" pos:start="57:16" pos:end="57:16">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
