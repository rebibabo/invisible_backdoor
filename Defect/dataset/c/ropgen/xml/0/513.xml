<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/513.c" pos:tabs="8"><function pos:start="1:1" pos:end="233:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:27">tftp_handle_rrq</name><parameter_list pos:start="1:28" pos:end="1:72">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:33">Slirp</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:40">slirp</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:55"><name pos:start="1:43" pos:end="1:48">struct</name> <name pos:start="1:50" pos:end="1:55">tftp_t</name></name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:59">tp</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:71"><decl pos:start="1:62" pos:end="1:71"><type pos:start="1:62" pos:end="1:71"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:71">pktlen</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="233:1">{<block_content pos:start="5:3" pos:end="231:29">

  <decl_stmt pos:start="5:3" pos:end="5:27"><decl pos:start="5:3" pos:end="5:26"><type pos:start="5:3" pos:end="5:23"><name pos:start="5:3" pos:end="5:21"><name pos:start="5:3" pos:end="5:8">struct</name> <name pos:start="5:10" pos:end="5:21">tftp_session</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">spt</name></decl>;</decl_stmt>

  <decl_stmt pos:start="7:3" pos:end="7:11"><decl pos:start="7:3" pos:end="7:7"><type pos:start="7:3" pos:end="7:5"><name pos:start="7:3" pos:end="7:5">int</name></type> <name pos:start="7:7" pos:end="7:7">s</name></decl>, <decl pos:start="7:10" pos:end="7:10"><type ref="prev" pos:start="7:3" pos:end="7:5"/><name pos:start="7:10" pos:end="7:10">k</name></decl>;</decl_stmt>

  <decl_stmt pos:start="9:3" pos:end="9:20"><decl pos:start="9:3" pos:end="9:19"><type pos:start="9:3" pos:end="9:8"><name pos:start="9:3" pos:end="9:8">size_t</name></type> <name pos:start="9:10" pos:end="9:19">prefix_len</name></decl>;</decl_stmt>

  <decl_stmt pos:start="11:3" pos:end="11:18"><decl pos:start="11:3" pos:end="11:17"><type pos:start="11:3" pos:end="11:8"><name pos:start="11:3" pos:end="11:6">char</name> <modifier pos:start="11:8" pos:end="11:8">*</modifier></type><name pos:start="11:9" pos:end="11:17">req_fname</name></decl>;</decl_stmt>



  <comment type="block" pos:start="15:3" pos:end="15:64">/* check if a session already exists and if so terminate it */</comment>

  <expr_stmt pos:start="17:3" pos:end="17:35"><expr pos:start="17:3" pos:end="17:34"><name pos:start="17:3" pos:end="17:3">s</name> <operator pos:start="17:5" pos:end="17:5">=</operator> <call pos:start="17:7" pos:end="17:34"><name pos:start="17:7" pos:end="17:23">tftp_session_find</name><argument_list pos:start="17:24" pos:end="17:34">(<argument pos:start="17:25" pos:end="17:29"><expr pos:start="17:25" pos:end="17:29"><name pos:start="17:25" pos:end="17:29">slirp</name></expr></argument>, <argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <if_stmt pos:start="19:3" pos:end="23:3"><if pos:start="19:3" pos:end="23:3">if <condition pos:start="19:6" pos:end="19:13">(<expr pos:start="19:7" pos:end="19:12"><name pos:start="19:7" pos:end="19:7">s</name> <operator pos:start="19:9" pos:end="19:10">&gt;=</operator> <literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>)</condition> <block pos:start="19:15" pos:end="23:3">{<block_content pos:start="21:5" pos:end="21:53">

    <expr_stmt pos:start="21:5" pos:end="21:53"><expr pos:start="21:5" pos:end="21:52"><call pos:start="21:5" pos:end="21:52"><name pos:start="21:5" pos:end="21:26">tftp_session_terminate</name><argument_list pos:start="21:27" pos:end="21:52">(<argument pos:start="21:28" pos:end="21:51"><expr pos:start="21:28" pos:end="21:51"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:51"><name pos:start="21:29" pos:end="21:33">slirp</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:48">tftp_sessions</name><index pos:start="21:49" pos:end="21:51">[<expr pos:start="21:50" pos:end="21:50"><name pos:start="21:50" pos:end="21:50">s</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="27:3" pos:end="27:39"><expr pos:start="27:3" pos:end="27:38"><name pos:start="27:3" pos:end="27:3">s</name> <operator pos:start="27:5" pos:end="27:5">=</operator> <call pos:start="27:7" pos:end="27:38"><name pos:start="27:7" pos:end="27:27">tftp_session_allocate</name><argument_list pos:start="27:28" pos:end="27:38">(<argument pos:start="27:29" pos:end="27:33"><expr pos:start="27:29" pos:end="27:33"><name pos:start="27:29" pos:end="27:33">slirp</name></expr></argument>, <argument pos:start="27:36" pos:end="27:37"><expr pos:start="27:36" pos:end="27:37"><name pos:start="27:36" pos:end="27:37">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



  <if_stmt pos:start="31:3" pos:end="35:3"><if pos:start="31:3" pos:end="35:3">if <condition pos:start="31:6" pos:end="31:12">(<expr pos:start="31:7" pos:end="31:11"><name pos:start="31:7" pos:end="31:7">s</name> <operator pos:start="31:9" pos:end="31:9">&lt;</operator> <literal type="number" pos:start="31:11" pos:end="31:11">0</literal></expr>)</condition> <block pos:start="31:14" pos:end="35:3">{<block_content pos:start="33:5" pos:end="33:11">

    <return pos:start="33:5" pos:end="33:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="39:3" pos:end="39:33"><expr pos:start="39:3" pos:end="39:32"><name pos:start="39:3" pos:end="39:5">spt</name> <operator pos:start="39:7" pos:end="39:7">=</operator> <operator pos:start="39:9" pos:end="39:9">&amp;</operator><name pos:start="39:10" pos:end="39:32"><name pos:start="39:10" pos:end="39:14">slirp</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:29">tftp_sessions</name><index pos:start="39:30" pos:end="39:32">[<expr pos:start="39:31" pos:end="39:31"><name pos:start="39:31" pos:end="39:31">s</name></expr>]</index></name></expr>;</expr_stmt>



  <comment type="block" pos:start="43:3" pos:end="43:48">/* unspecifed prefix means service disabled */</comment>

  <if_stmt pos:start="45:3" pos:end="51:3"><if pos:start="45:3" pos:end="51:3">if <condition pos:start="45:6" pos:end="45:26">(<expr pos:start="45:7" pos:end="45:25"><operator pos:start="45:7" pos:end="45:7">!</operator><name pos:start="45:8" pos:end="45:25"><name pos:start="45:8" pos:end="45:12">slirp</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:25">tftp_prefix</name></name></expr>)</condition> <block pos:start="45:28" pos:end="51:3">{<block_content pos:start="47:7" pos:end="49:13">

      <expr_stmt pos:start="47:7" pos:end="47:54"><expr pos:start="47:7" pos:end="47:53"><call pos:start="47:7" pos:end="47:53"><name pos:start="47:7" pos:end="47:21">tftp_send_error</name><argument_list pos:start="47:22" pos:end="47:53">(<argument pos:start="47:23" pos:end="47:25"><expr pos:start="47:23" pos:end="47:25"><name pos:start="47:23" pos:end="47:25">spt</name></expr></argument>, <argument pos:start="47:28" pos:end="47:28"><expr pos:start="47:28" pos:end="47:28"><literal type="number" pos:start="47:28" pos:end="47:28">2</literal></expr></argument>, <argument pos:start="47:31" pos:end="47:48"><expr pos:start="47:31" pos:end="47:48"><literal type="string" pos:start="47:31" pos:end="47:48">"Access violation"</literal></expr></argument>, <argument pos:start="47:51" pos:end="47:52"><expr pos:start="47:51" pos:end="47:52"><name pos:start="47:51" pos:end="47:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="49:7" pos:end="49:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="55:3" pos:end="55:26">/* skip header fields */</comment>

  <expr_stmt pos:start="57:3" pos:end="57:8"><expr pos:start="57:3" pos:end="57:7"><name pos:start="57:3" pos:end="57:3">k</name> <operator pos:start="57:5" pos:end="57:5">=</operator> <literal type="number" pos:start="57:7" pos:end="57:7">0</literal></expr>;</expr_stmt>

  <expr_stmt pos:start="59:3" pos:end="59:58"><expr pos:start="59:3" pos:end="59:57"><name pos:start="59:3" pos:end="59:8">pktlen</name> <operator pos:start="59:10" pos:end="59:11">-=</operator> <operator pos:start="59:13" pos:end="59:13">(</operator><operator pos:start="59:14" pos:end="59:14">(</operator><name pos:start="59:15" pos:end="59:21">uint8_t</name> <operator pos:start="59:23" pos:end="59:23">*</operator><operator pos:start="59:24" pos:end="59:24">)</operator><operator pos:start="59:25" pos:end="59:25">&amp;</operator><name pos:start="59:26" pos:end="59:40"><name pos:start="59:26" pos:end="59:27">tp</name><operator pos:start="59:28" pos:end="59:29">-&gt;</operator><name pos:start="59:30" pos:end="59:30">x</name><operator pos:start="59:31" pos:end="59:31">.</operator><name pos:start="59:32" pos:end="59:37">tp_buf</name><index pos:start="59:38" pos:end="59:40">[<expr pos:start="59:39" pos:end="59:39"><literal type="number" pos:start="59:39" pos:end="59:39">0</literal></expr>]</index></name> <operator pos:start="59:42" pos:end="59:42">-</operator> <operator pos:start="59:44" pos:end="59:44">(</operator><name pos:start="59:45" pos:end="59:51">uint8_t</name> <operator pos:start="59:53" pos:end="59:53">*</operator><operator pos:start="59:54" pos:end="59:54">)</operator><name pos:start="59:55" pos:end="59:56">tp</name><operator pos:start="59:57" pos:end="59:57">)</operator></expr>;</expr_stmt>



  <comment type="block" pos:start="63:3" pos:end="63:27">/* prepend tftp_prefix */</comment>

  <expr_stmt pos:start="65:3" pos:end="65:42"><expr pos:start="65:3" pos:end="65:41"><name pos:start="65:3" pos:end="65:12">prefix_len</name> <operator pos:start="65:14" pos:end="65:14">=</operator> <call pos:start="65:16" pos:end="65:41"><name pos:start="65:16" pos:end="65:21">strlen</name><argument_list pos:start="65:22" pos:end="65:41">(<argument pos:start="65:23" pos:end="65:40"><expr pos:start="65:23" pos:end="65:40"><name pos:start="65:23" pos:end="65:40"><name pos:start="65:23" pos:end="65:27">slirp</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:40">tftp_prefix</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt pos:start="67:3" pos:end="67:66"><expr pos:start="67:3" pos:end="67:65"><name pos:start="67:3" pos:end="67:15"><name pos:start="67:3" pos:end="67:5">spt</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:15">filename</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <call pos:start="67:19" pos:end="67:65"><name pos:start="67:19" pos:end="67:29">qemu_malloc</name><argument_list pos:start="67:30" pos:end="67:65">(<argument pos:start="67:31" pos:end="67:64"><expr pos:start="67:31" pos:end="67:64"><name pos:start="67:31" pos:end="67:40">prefix_len</name> <operator pos:start="67:42" pos:end="67:42">+</operator> <name pos:start="67:44" pos:end="67:60">TFTP_FILENAME_MAX</name> <operator pos:start="67:62" pos:end="67:62">+</operator> <literal type="number" pos:start="67:64" pos:end="67:64">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt pos:start="69:3" pos:end="69:56"><expr pos:start="69:3" pos:end="69:55"><call pos:start="69:3" pos:end="69:55"><name pos:start="69:3" pos:end="69:8">memcpy</name><argument_list pos:start="69:9" pos:end="69:55">(<argument pos:start="69:10" pos:end="69:22"><expr pos:start="69:10" pos:end="69:22"><name pos:start="69:10" pos:end="69:22"><name pos:start="69:10" pos:end="69:12">spt</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:22">filename</name></name></expr></argument>, <argument pos:start="69:25" pos:end="69:42"><expr pos:start="69:25" pos:end="69:42"><name pos:start="69:25" pos:end="69:42"><name pos:start="69:25" pos:end="69:29">slirp</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:42">tftp_prefix</name></name></expr></argument>, <argument pos:start="69:45" pos:end="69:54"><expr pos:start="69:45" pos:end="69:54"><name pos:start="69:45" pos:end="69:54">prefix_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

  <expr_stmt pos:start="71:3" pos:end="71:34"><expr pos:start="71:3" pos:end="71:33"><name pos:start="71:3" pos:end="71:27"><name pos:start="71:3" pos:end="71:5">spt</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:15">filename</name><index pos:start="71:16" pos:end="71:27">[<expr pos:start="71:17" pos:end="71:26"><name pos:start="71:17" pos:end="71:26">prefix_len</name></expr>]</index></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <literal type="char" pos:start="71:31" pos:end="71:33">'/'</literal></expr>;</expr_stmt>



  <comment type="block" pos:start="75:3" pos:end="75:16">/* get name */</comment>

  <expr_stmt pos:start="77:3" pos:end="77:45"><expr pos:start="77:3" pos:end="77:44"><name pos:start="77:3" pos:end="77:11">req_fname</name> <operator pos:start="77:13" pos:end="77:13">=</operator> <name pos:start="77:15" pos:end="77:27"><name pos:start="77:15" pos:end="77:17">spt</name><operator pos:start="77:18" pos:end="77:19">-&gt;</operator><name pos:start="77:20" pos:end="77:27">filename</name></name> <operator pos:start="77:29" pos:end="77:29">+</operator> <name pos:start="77:31" pos:end="77:40">prefix_len</name> <operator pos:start="77:42" pos:end="77:42">+</operator> <literal type="number" pos:start="77:44" pos:end="77:44">1</literal></expr>;</expr_stmt>



  <while pos:start="81:3" pos:end="99:3">while <condition pos:start="81:9" pos:end="81:11">(<expr pos:start="81:10" pos:end="81:10"><literal type="number" pos:start="81:10" pos:end="81:10">1</literal></expr>)</condition> <block pos:start="81:13" pos:end="99:3">{<block_content pos:start="83:5" pos:end="97:5">

    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:46">(<expr pos:start="83:9" pos:end="83:45"><name pos:start="83:9" pos:end="83:9">k</name> <operator pos:start="83:11" pos:end="83:12">&gt;=</operator> <name pos:start="83:14" pos:end="83:30">TFTP_FILENAME_MAX</name> <operator pos:start="83:32" pos:end="83:33">||</operator> <name pos:start="83:35" pos:end="83:35">k</name> <operator pos:start="83:37" pos:end="83:38">&gt;=</operator> <name pos:start="83:40" pos:end="83:45">pktlen</name></expr>)</condition> <block pos:start="83:48" pos:end="89:5">{<block_content pos:start="85:7" pos:end="87:13">

      <expr_stmt pos:start="85:7" pos:end="85:54"><expr pos:start="85:7" pos:end="85:53"><call pos:start="85:7" pos:end="85:53"><name pos:start="85:7" pos:end="85:21">tftp_send_error</name><argument_list pos:start="85:22" pos:end="85:53">(<argument pos:start="85:23" pos:end="85:25"><expr pos:start="85:23" pos:end="85:25"><name pos:start="85:23" pos:end="85:25">spt</name></expr></argument>, <argument pos:start="85:28" pos:end="85:28"><expr pos:start="85:28" pos:end="85:28"><literal type="number" pos:start="85:28" pos:end="85:28">2</literal></expr></argument>, <argument pos:start="85:31" pos:end="85:48"><expr pos:start="85:31" pos:end="85:48"><literal type="string" pos:start="85:31" pos:end="85:48">"Access violation"</literal></expr></argument>, <argument pos:start="85:51" pos:end="85:52"><expr pos:start="85:51" pos:end="85:52"><name pos:start="85:51" pos:end="85:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="87:7" pos:end="87:13">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:41"><expr pos:start="91:5" pos:end="91:40"><name pos:start="91:5" pos:end="91:16"><name pos:start="91:5" pos:end="91:13">req_fname</name><index pos:start="91:14" pos:end="91:16">[<expr pos:start="91:15" pos:end="91:15"><name pos:start="91:15" pos:end="91:15">k</name></expr>]</index></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <operator pos:start="91:20" pos:end="91:20">(</operator><name pos:start="91:21" pos:end="91:24">char</name><operator pos:start="91:25" pos:end="91:25">)</operator><name pos:start="91:26" pos:end="91:40"><name pos:start="91:26" pos:end="91:27">tp</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:30">x</name><operator pos:start="91:31" pos:end="91:31">.</operator><name pos:start="91:32" pos:end="91:37">tp_buf</name><index pos:start="91:38" pos:end="91:40">[<expr pos:start="91:39" pos:end="91:39"><name pos:start="91:39" pos:end="91:39">k</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="97:5"><if pos:start="93:5" pos:end="97:5">if <condition pos:start="93:8" pos:end="93:31">(<expr pos:start="93:9" pos:end="93:30"><name pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:17">req_fname</name><index pos:start="93:18" pos:end="93:22">[<expr pos:start="93:19" pos:end="93:21"><name pos:start="93:19" pos:end="93:19">k</name><operator pos:start="93:20" pos:end="93:21">++</operator></expr>]</index></name> <operator pos:start="93:24" pos:end="93:25">==</operator> <literal type="char" pos:start="93:27" pos:end="93:30">'\0'</literal></expr>)</condition> <block pos:start="93:33" pos:end="97:5">{<block_content pos:start="95:7" pos:end="95:12">

      <break pos:start="95:7" pos:end="95:12">break;</break>

    </block_content>}</block></if></if_stmt>

  </block_content>}</block></while>



  <comment type="block" pos:start="103:3" pos:end="103:18">/* check mode */</comment>

  <if_stmt pos:start="105:3" pos:end="111:3"><if pos:start="105:3" pos:end="111:3">if <condition pos:start="105:6" pos:end="105:23">(<expr pos:start="105:7" pos:end="105:22"><operator pos:start="105:7" pos:end="105:7">(</operator><name pos:start="105:8" pos:end="105:13">pktlen</name> <operator pos:start="105:15" pos:end="105:15">-</operator> <name pos:start="105:17" pos:end="105:17">k</name><operator pos:start="105:18" pos:end="105:18">)</operator> <operator pos:start="105:20" pos:end="105:20">&lt;</operator> <literal type="number" pos:start="105:22" pos:end="105:22">6</literal></expr>)</condition> <block pos:start="105:25" pos:end="111:3">{<block_content pos:start="107:5" pos:end="109:11">

    <expr_stmt pos:start="107:5" pos:end="107:52"><expr pos:start="107:5" pos:end="107:51"><call pos:start="107:5" pos:end="107:51"><name pos:start="107:5" pos:end="107:19">tftp_send_error</name><argument_list pos:start="107:20" pos:end="107:51">(<argument pos:start="107:21" pos:end="107:23"><expr pos:start="107:21" pos:end="107:23"><name pos:start="107:21" pos:end="107:23">spt</name></expr></argument>, <argument pos:start="107:26" pos:end="107:26"><expr pos:start="107:26" pos:end="107:26"><literal type="number" pos:start="107:26" pos:end="107:26">2</literal></expr></argument>, <argument pos:start="107:29" pos:end="107:46"><expr pos:start="107:29" pos:end="107:46"><literal type="string" pos:start="107:29" pos:end="107:46">"Access violation"</literal></expr></argument>, <argument pos:start="107:49" pos:end="107:50"><expr pos:start="107:49" pos:end="107:50"><name pos:start="107:49" pos:end="107:50">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="109:5" pos:end="109:11">return;</return>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="115:3" pos:end="121:3"><if pos:start="115:3" pos:end="121:3">if <condition pos:start="115:6" pos:end="115:50">(<expr pos:start="115:7" pos:end="115:49"><call pos:start="115:7" pos:end="115:44"><name pos:start="115:7" pos:end="115:12">memcmp</name><argument_list pos:start="115:13" pos:end="115:44">(<argument pos:start="115:14" pos:end="115:29"><expr pos:start="115:14" pos:end="115:29"><operator pos:start="115:14" pos:end="115:14">&amp;</operator><name pos:start="115:15" pos:end="115:29"><name pos:start="115:15" pos:end="115:16">tp</name><operator pos:start="115:17" pos:end="115:18">-&gt;</operator><name pos:start="115:19" pos:end="115:19">x</name><operator pos:start="115:20" pos:end="115:20">.</operator><name pos:start="115:21" pos:end="115:26">tp_buf</name><index pos:start="115:27" pos:end="115:29">[<expr pos:start="115:28" pos:end="115:28"><name pos:start="115:28" pos:end="115:28">k</name></expr>]</index></name></expr></argument>, <argument pos:start="115:32" pos:end="115:40"><expr pos:start="115:32" pos:end="115:40"><literal type="string" pos:start="115:32" pos:end="115:40">"octet\0"</literal></expr></argument>, <argument pos:start="115:43" pos:end="115:43"><expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">6</literal></expr></argument>)</argument_list></call> <operator pos:start="115:46" pos:end="115:47">!=</operator> <literal type="number" pos:start="115:49" pos:end="115:49">0</literal></expr>)</condition> <block pos:start="115:52" pos:end="121:3">{<block_content pos:start="117:7" pos:end="119:13">

      <expr_stmt pos:start="117:7" pos:end="117:63"><expr pos:start="117:7" pos:end="117:62"><call pos:start="117:7" pos:end="117:62"><name pos:start="117:7" pos:end="117:21">tftp_send_error</name><argument_list pos:start="117:22" pos:end="117:62">(<argument pos:start="117:23" pos:end="117:25"><expr pos:start="117:23" pos:end="117:25"><name pos:start="117:23" pos:end="117:25">spt</name></expr></argument>, <argument pos:start="117:28" pos:end="117:28"><expr pos:start="117:28" pos:end="117:28"><literal type="number" pos:start="117:28" pos:end="117:28">4</literal></expr></argument>, <argument pos:start="117:31" pos:end="117:57"><expr pos:start="117:31" pos:end="117:57"><literal type="string" pos:start="117:31" pos:end="117:57">"Unsupported transfer mode"</literal></expr></argument>, <argument pos:start="117:60" pos:end="117:61"><expr pos:start="117:60" pos:end="117:61"><name pos:start="117:60" pos:end="117:61">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="119:7" pos:end="119:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <expr_stmt pos:start="125:3" pos:end="125:9"><expr pos:start="125:3" pos:end="125:8"><name pos:start="125:3" pos:end="125:3">k</name> <operator pos:start="125:5" pos:end="125:6">+=</operator> <literal type="number" pos:start="125:8" pos:end="125:8">6</literal></expr>;</expr_stmt> <comment type="block" pos:start="125:11" pos:end="125:30">/* skipping octet */</comment>



  <comment type="block" pos:start="129:3" pos:end="129:40">/* do sanity checks on the filename */</comment>

  <if_stmt pos:start="131:3" pos:end="141:3"><if pos:start="131:3" pos:end="141:3">if <condition pos:start="131:6" pos:end="135:32">(<expr pos:start="131:7" pos:end="135:31"><operator pos:start="131:7" pos:end="131:7">!</operator><call pos:start="131:8" pos:end="131:35"><name pos:start="131:8" pos:end="131:14">strncmp</name><argument_list pos:start="131:15" pos:end="131:35">(<argument pos:start="131:16" pos:end="131:24"><expr pos:start="131:16" pos:end="131:24"><name pos:start="131:16" pos:end="131:24">req_fname</name></expr></argument>, <argument pos:start="131:27" pos:end="131:31"><expr pos:start="131:27" pos:end="131:31"><literal type="string" pos:start="131:27" pos:end="131:31">"../"</literal></expr></argument>, <argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><literal type="number" pos:start="131:34" pos:end="131:34">3</literal></expr></argument>)</argument_list></call> <operator pos:start="131:37" pos:end="131:38">||</operator>

      <name pos:start="133:7" pos:end="133:38"><name pos:start="133:7" pos:end="133:15">req_fname</name><index pos:start="133:16" pos:end="133:38">[<expr pos:start="133:17" pos:end="133:37"><call pos:start="133:17" pos:end="133:33"><name pos:start="133:17" pos:end="133:22">strlen</name><argument_list pos:start="133:23" pos:end="133:33">(<argument pos:start="133:24" pos:end="133:32"><expr pos:start="133:24" pos:end="133:32"><name pos:start="133:24" pos:end="133:32">req_fname</name></expr></argument>)</argument_list></call> <operator pos:start="133:35" pos:end="133:35">-</operator> <literal type="number" pos:start="133:37" pos:end="133:37">1</literal></expr>]</index></name> <operator pos:start="133:40" pos:end="133:41">==</operator> <literal type="char" pos:start="133:43" pos:end="133:45">'/'</literal> <operator pos:start="133:47" pos:end="133:48">||</operator>

      <call pos:start="135:7" pos:end="135:31"><name pos:start="135:7" pos:end="135:12">strstr</name><argument_list pos:start="135:13" pos:end="135:31">(<argument pos:start="135:14" pos:end="135:22"><expr pos:start="135:14" pos:end="135:22"><name pos:start="135:14" pos:end="135:22">req_fname</name></expr></argument>, <argument pos:start="135:25" pos:end="135:30"><expr pos:start="135:25" pos:end="135:30"><literal type="string" pos:start="135:25" pos:end="135:30">"/../"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="135:34" pos:end="141:3">{<block_content pos:start="137:7" pos:end="139:13">

      <expr_stmt pos:start="137:7" pos:end="137:54"><expr pos:start="137:7" pos:end="137:53"><call pos:start="137:7" pos:end="137:53"><name pos:start="137:7" pos:end="137:21">tftp_send_error</name><argument_list pos:start="137:22" pos:end="137:53">(<argument pos:start="137:23" pos:end="137:25"><expr pos:start="137:23" pos:end="137:25"><name pos:start="137:23" pos:end="137:25">spt</name></expr></argument>, <argument pos:start="137:28" pos:end="137:28"><expr pos:start="137:28" pos:end="137:28"><literal type="number" pos:start="137:28" pos:end="137:28">2</literal></expr></argument>, <argument pos:start="137:31" pos:end="137:48"><expr pos:start="137:31" pos:end="137:48"><literal type="string" pos:start="137:31" pos:end="137:48">"Access violation"</literal></expr></argument>, <argument pos:start="137:51" pos:end="137:52"><expr pos:start="137:51" pos:end="137:52"><name pos:start="137:51" pos:end="137:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="139:7" pos:end="139:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <comment type="block" pos:start="145:3" pos:end="145:32">/* check if the file exists */</comment>

  <if_stmt pos:start="147:3" pos:end="153:3"><if pos:start="147:3" pos:end="153:3">if <condition pos:start="147:6" pos:end="147:42">(<expr pos:start="147:7" pos:end="147:41"><call pos:start="147:7" pos:end="147:37"><name pos:start="147:7" pos:end="147:20">tftp_read_data</name><argument_list pos:start="147:21" pos:end="147:37">(<argument pos:start="147:22" pos:end="147:24"><expr pos:start="147:22" pos:end="147:24"><name pos:start="147:22" pos:end="147:24">spt</name></expr></argument>, <argument pos:start="147:27" pos:end="147:27"><expr pos:start="147:27" pos:end="147:27"><literal type="number" pos:start="147:27" pos:end="147:27">0</literal></expr></argument>, <argument pos:start="147:30" pos:end="147:33"><expr pos:start="147:30" pos:end="147:33"><name pos:start="147:30" pos:end="147:33">NULL</name></expr></argument>, <argument pos:start="147:36" pos:end="147:36"><expr pos:start="147:36" pos:end="147:36"><literal type="number" pos:start="147:36" pos:end="147:36">0</literal></expr></argument>)</argument_list></call> <operator pos:start="147:39" pos:end="147:39">&lt;</operator> <literal type="number" pos:start="147:41" pos:end="147:41">0</literal></expr>)</condition> <block pos:start="147:44" pos:end="153:3">{<block_content pos:start="149:7" pos:end="151:13">

      <expr_stmt pos:start="149:7" pos:end="149:52"><expr pos:start="149:7" pos:end="149:51"><call pos:start="149:7" pos:end="149:51"><name pos:start="149:7" pos:end="149:21">tftp_send_error</name><argument_list pos:start="149:22" pos:end="149:51">(<argument pos:start="149:23" pos:end="149:25"><expr pos:start="149:23" pos:end="149:25"><name pos:start="149:23" pos:end="149:25">spt</name></expr></argument>, <argument pos:start="149:28" pos:end="149:28"><expr pos:start="149:28" pos:end="149:28"><literal type="number" pos:start="149:28" pos:end="149:28">1</literal></expr></argument>, <argument pos:start="149:31" pos:end="149:46"><expr pos:start="149:31" pos:end="149:46"><literal type="string" pos:start="149:31" pos:end="149:46">"File not found"</literal></expr></argument>, <argument pos:start="149:49" pos:end="149:50"><expr pos:start="149:49" pos:end="149:50"><name pos:start="149:49" pos:end="149:50">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="151:7" pos:end="151:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <if_stmt pos:start="157:3" pos:end="163:3"><if pos:start="157:3" pos:end="163:3">if <condition pos:start="157:6" pos:end="157:36">(<expr pos:start="157:7" pos:end="157:35"><name pos:start="157:7" pos:end="157:30"><name pos:start="157:7" pos:end="157:8">tp</name><operator pos:start="157:9" pos:end="157:10">-&gt;</operator><name pos:start="157:11" pos:end="157:11">x</name><operator pos:start="157:12" pos:end="157:12">.</operator><name pos:start="157:13" pos:end="157:18">tp_buf</name><index pos:start="157:19" pos:end="157:30">[<expr pos:start="157:20" pos:end="157:29"><name pos:start="157:20" pos:end="157:25">pktlen</name> <operator pos:start="157:27" pos:end="157:27">-</operator> <literal type="number" pos:start="157:29" pos:end="157:29">1</literal></expr>]</index></name> <operator pos:start="157:32" pos:end="157:33">!=</operator> <literal type="number" pos:start="157:35" pos:end="157:35">0</literal></expr>)</condition> <block pos:start="157:38" pos:end="163:3">{<block_content pos:start="159:7" pos:end="161:13">

      <expr_stmt pos:start="159:7" pos:end="159:54"><expr pos:start="159:7" pos:end="159:53"><call pos:start="159:7" pos:end="159:53"><name pos:start="159:7" pos:end="159:21">tftp_send_error</name><argument_list pos:start="159:22" pos:end="159:53">(<argument pos:start="159:23" pos:end="159:25"><expr pos:start="159:23" pos:end="159:25"><name pos:start="159:23" pos:end="159:25">spt</name></expr></argument>, <argument pos:start="159:28" pos:end="159:28"><expr pos:start="159:28" pos:end="159:28"><literal type="number" pos:start="159:28" pos:end="159:28">2</literal></expr></argument>, <argument pos:start="159:31" pos:end="159:48"><expr pos:start="159:31" pos:end="159:48"><literal type="string" pos:start="159:31" pos:end="159:48">"Access violation"</literal></expr></argument>, <argument pos:start="159:51" pos:end="159:52"><expr pos:start="159:51" pos:end="159:52"><name pos:start="159:51" pos:end="159:52">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

      <return pos:start="161:7" pos:end="161:13">return;</return>

  </block_content>}</block></if></if_stmt>



  <while pos:start="167:3" pos:end="227:3">while <condition pos:start="167:9" pos:end="167:20">(<expr pos:start="167:10" pos:end="167:19"><name pos:start="167:10" pos:end="167:10">k</name> <operator pos:start="167:12" pos:end="167:12">&lt;</operator> <name pos:start="167:14" pos:end="167:19">pktlen</name></expr>)</condition> <block pos:start="167:22" pos:end="227:3">{<block_content pos:start="169:7" pos:end="225:7">

      <decl_stmt pos:start="169:7" pos:end="169:30"><decl pos:start="169:7" pos:end="169:21"><type pos:start="169:7" pos:end="169:18"><specifier pos:start="169:7" pos:end="169:11">const</specifier> <name pos:start="169:13" pos:end="169:16">char</name> <modifier pos:start="169:18" pos:end="169:18">*</modifier></type><name pos:start="169:19" pos:end="169:21">key</name></decl>, <decl pos:start="169:24" pos:end="169:29"><type ref="prev" pos:start="169:7" pos:end="169:18"><modifier pos:start="169:24" pos:end="169:24">*</modifier></type><name pos:start="169:25" pos:end="169:29">value</name></decl>;</decl_stmt>



      <expr_stmt pos:start="173:7" pos:end="173:43"><expr pos:start="173:7" pos:end="173:42"><name pos:start="173:7" pos:end="173:9">key</name> <operator pos:start="173:11" pos:end="173:11">=</operator> <operator pos:start="173:13" pos:end="173:13">(</operator><specifier pos:start="173:14" pos:end="173:18">const</specifier> <name pos:start="173:20" pos:end="173:23">char</name> <operator pos:start="173:25" pos:end="173:25">*</operator><operator pos:start="173:26" pos:end="173:26">)</operator><operator pos:start="173:27" pos:end="173:27">&amp;</operator><name pos:start="173:28" pos:end="173:42"><name pos:start="173:28" pos:end="173:29">tp</name><operator pos:start="173:30" pos:end="173:31">-&gt;</operator><name pos:start="173:32" pos:end="173:32">x</name><operator pos:start="173:33" pos:end="173:33">.</operator><name pos:start="173:34" pos:end="173:39">tp_buf</name><index pos:start="173:40" pos:end="173:42">[<expr pos:start="173:41" pos:end="173:41"><name pos:start="173:41" pos:end="173:41">k</name></expr>]</index></name></expr>;</expr_stmt>

      <expr_stmt pos:start="175:7" pos:end="175:27"><expr pos:start="175:7" pos:end="175:26"><name pos:start="175:7" pos:end="175:7">k</name> <operator pos:start="175:9" pos:end="175:10">+=</operator> <call pos:start="175:12" pos:end="175:22"><name pos:start="175:12" pos:end="175:17">strlen</name><argument_list pos:start="175:18" pos:end="175:22">(<argument pos:start="175:19" pos:end="175:21"><expr pos:start="175:19" pos:end="175:21"><name pos:start="175:19" pos:end="175:21">key</name></expr></argument>)</argument_list></call> <operator pos:start="175:24" pos:end="175:24">+</operator> <literal type="number" pos:start="175:26" pos:end="175:26">1</literal></expr>;</expr_stmt>



      <if_stmt pos:start="179:7" pos:end="185:7"><if pos:start="179:7" pos:end="185:7">if <condition pos:start="179:10" pos:end="179:22">(<expr pos:start="179:11" pos:end="179:21"><name pos:start="179:11" pos:end="179:11">k</name> <operator pos:start="179:13" pos:end="179:14">&gt;=</operator> <name pos:start="179:16" pos:end="179:21">pktlen</name></expr>)</condition> <block pos:start="179:24" pos:end="185:7">{<block_content pos:start="181:11" pos:end="183:17">

	  <expr_stmt pos:start="181:11" pos:end="181:58"><expr pos:start="181:11" pos:end="181:57"><call pos:start="181:11" pos:end="181:57"><name pos:start="181:11" pos:end="181:25">tftp_send_error</name><argument_list pos:start="181:26" pos:end="181:57">(<argument pos:start="181:27" pos:end="181:29"><expr pos:start="181:27" pos:end="181:29"><name pos:start="181:27" pos:end="181:29">spt</name></expr></argument>, <argument pos:start="181:32" pos:end="181:32"><expr pos:start="181:32" pos:end="181:32"><literal type="number" pos:start="181:32" pos:end="181:32">2</literal></expr></argument>, <argument pos:start="181:35" pos:end="181:52"><expr pos:start="181:35" pos:end="181:52"><literal type="string" pos:start="181:35" pos:end="181:52">"Access violation"</literal></expr></argument>, <argument pos:start="181:55" pos:end="181:56"><expr pos:start="181:55" pos:end="181:56"><name pos:start="181:55" pos:end="181:56">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <return pos:start="183:11" pos:end="183:17">return;</return>

      </block_content>}</block></if></if_stmt>



      <expr_stmt pos:start="189:7" pos:end="189:45"><expr pos:start="189:7" pos:end="189:44"><name pos:start="189:7" pos:end="189:11">value</name> <operator pos:start="189:13" pos:end="189:13">=</operator> <operator pos:start="189:15" pos:end="189:15">(</operator><specifier pos:start="189:16" pos:end="189:20">const</specifier> <name pos:start="189:22" pos:end="189:25">char</name> <operator pos:start="189:27" pos:end="189:27">*</operator><operator pos:start="189:28" pos:end="189:28">)</operator><operator pos:start="189:29" pos:end="189:29">&amp;</operator><name pos:start="189:30" pos:end="189:44"><name pos:start="189:30" pos:end="189:31">tp</name><operator pos:start="189:32" pos:end="189:33">-&gt;</operator><name pos:start="189:34" pos:end="189:34">x</name><operator pos:start="189:35" pos:end="189:35">.</operator><name pos:start="189:36" pos:end="189:41">tp_buf</name><index pos:start="189:42" pos:end="189:44">[<expr pos:start="189:43" pos:end="189:43"><name pos:start="189:43" pos:end="189:43">k</name></expr>]</index></name></expr>;</expr_stmt>

      <expr_stmt pos:start="191:7" pos:end="191:29"><expr pos:start="191:7" pos:end="191:28"><name pos:start="191:7" pos:end="191:7">k</name> <operator pos:start="191:9" pos:end="191:10">+=</operator> <call pos:start="191:12" pos:end="191:24"><name pos:start="191:12" pos:end="191:17">strlen</name><argument_list pos:start="191:18" pos:end="191:24">(<argument pos:start="191:19" pos:end="191:23"><expr pos:start="191:19" pos:end="191:23"><name pos:start="191:19" pos:end="191:23">value</name></expr></argument>)</argument_list></call> <operator pos:start="191:26" pos:end="191:26">+</operator> <literal type="number" pos:start="191:28" pos:end="191:28">1</literal></expr>;</expr_stmt>



      <if_stmt pos:start="195:7" pos:end="225:7"><if pos:start="195:7" pos:end="225:7">if <condition pos:start="195:10" pos:end="195:36">(<expr pos:start="195:11" pos:end="195:35"><call pos:start="195:11" pos:end="195:30"><name pos:start="195:11" pos:end="195:16">strcmp</name><argument_list pos:start="195:17" pos:end="195:30">(<argument pos:start="195:18" pos:end="195:20"><expr pos:start="195:18" pos:end="195:20"><name pos:start="195:18" pos:end="195:20">key</name></expr></argument>, <argument pos:start="195:23" pos:end="195:29"><expr pos:start="195:23" pos:end="195:29"><literal type="string" pos:start="195:23" pos:end="195:29">"tsize"</literal></expr></argument>)</argument_list></call> <operator pos:start="195:32" pos:end="195:33">==</operator> <literal type="number" pos:start="195:35" pos:end="195:35">0</literal></expr>)</condition> <block pos:start="195:38" pos:end="225:7">{<block_content pos:start="197:11" pos:end="223:17">

	  <decl_stmt pos:start="197:11" pos:end="197:34"><decl pos:start="197:11" pos:end="197:33"><type pos:start="197:11" pos:end="197:13"><name pos:start="197:11" pos:end="197:13">int</name></type> <name pos:start="197:15" pos:end="197:19">tsize</name> <init pos:start="197:21" pos:end="197:33">= <expr pos:start="197:23" pos:end="197:33"><call pos:start="197:23" pos:end="197:33"><name pos:start="197:23" pos:end="197:26">atoi</name><argument_list pos:start="197:27" pos:end="197:33">(<argument pos:start="197:28" pos:end="197:32"><expr pos:start="197:28" pos:end="197:32"><name pos:start="197:28" pos:end="197:32">value</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	  <decl_stmt pos:start="199:11" pos:end="199:29"><decl pos:start="199:11" pos:end="199:28"><type pos:start="199:11" pos:end="199:21"><name pos:start="199:11" pos:end="199:21"><name pos:start="199:11" pos:end="199:16">struct</name> <name pos:start="199:18" pos:end="199:21">stat</name></name></type> <name pos:start="199:23" pos:end="199:28">stat_p</name></decl>;</decl_stmt>



	  <if_stmt pos:start="203:11" pos:end="217:11"><if pos:start="203:11" pos:end="217:11">if <condition pos:start="203:14" pos:end="203:25">(<expr pos:start="203:15" pos:end="203:24"><name pos:start="203:15" pos:end="203:19">tsize</name> <operator pos:start="203:21" pos:end="203:22">==</operator> <literal type="number" pos:start="203:24" pos:end="203:24">0</literal></expr>)</condition> <block pos:start="203:27" pos:end="217:11">{<block_content pos:start="205:15" pos:end="215:15">

	      <if_stmt pos:start="205:15" pos:end="215:15"><if pos:start="205:15" pos:end="207:41">if <condition pos:start="205:18" pos:end="205:52">(<expr pos:start="205:19" pos:end="205:51"><call pos:start="205:19" pos:end="205:46"><name pos:start="205:19" pos:end="205:22">stat</name><argument_list pos:start="205:23" pos:end="205:46">(<argument pos:start="205:24" pos:end="205:36"><expr pos:start="205:24" pos:end="205:36"><name pos:start="205:24" pos:end="205:36"><name pos:start="205:24" pos:end="205:26">spt</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:36">filename</name></name></expr></argument>, <argument pos:start="205:39" pos:end="205:45"><expr pos:start="205:39" pos:end="205:45"><operator pos:start="205:39" pos:end="205:39">&amp;</operator><name pos:start="205:40" pos:end="205:45">stat_p</name></expr></argument>)</argument_list></call> <operator pos:start="205:48" pos:end="205:49">==</operator> <literal type="number" pos:start="205:51" pos:end="205:51">0</literal></expr>)</condition><block type="pseudo" pos:start="207:19" pos:end="207:41"><block_content pos:start="207:19" pos:end="207:41">

		  <expr_stmt pos:start="207:19" pos:end="207:41"><expr pos:start="207:19" pos:end="207:40"><name pos:start="207:19" pos:end="207:23">tsize</name> <operator pos:start="207:25" pos:end="207:25">=</operator> <name pos:start="207:27" pos:end="207:40"><name pos:start="207:27" pos:end="207:32">stat_p</name><operator pos:start="207:33" pos:end="207:33">.</operator><name pos:start="207:34" pos:end="207:40">st_size</name></name></expr>;</expr_stmt></block_content></block></if>

	      <else pos:start="209:15" pos:end="215:15">else <block pos:start="209:20" pos:end="215:15">{<block_content pos:start="211:19" pos:end="213:25">

		  <expr_stmt pos:start="211:19" pos:end="211:64"><expr pos:start="211:19" pos:end="211:63"><call pos:start="211:19" pos:end="211:63"><name pos:start="211:19" pos:end="211:33">tftp_send_error</name><argument_list pos:start="211:34" pos:end="211:63">(<argument pos:start="211:35" pos:end="211:37"><expr pos:start="211:35" pos:end="211:37"><name pos:start="211:35" pos:end="211:37">spt</name></expr></argument>, <argument pos:start="211:40" pos:end="211:40"><expr pos:start="211:40" pos:end="211:40"><literal type="number" pos:start="211:40" pos:end="211:40">1</literal></expr></argument>, <argument pos:start="211:43" pos:end="211:58"><expr pos:start="211:43" pos:end="211:58"><literal type="string" pos:start="211:43" pos:end="211:58">"File not found"</literal></expr></argument>, <argument pos:start="211:61" pos:end="211:62"><expr pos:start="211:61" pos:end="211:62"><name pos:start="211:61" pos:end="211:62">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		  <return pos:start="213:19" pos:end="213:25">return;</return>

	      </block_content>}</block></else></if_stmt>

	  </block_content>}</block></if></if_stmt>



	  <expr_stmt pos:start="221:11" pos:end="221:50"><expr pos:start="221:11" pos:end="221:49"><call pos:start="221:11" pos:end="221:49"><name pos:start="221:11" pos:end="221:24">tftp_send_oack</name><argument_list pos:start="221:25" pos:end="221:49">(<argument pos:start="221:26" pos:end="221:28"><expr pos:start="221:26" pos:end="221:28"><name pos:start="221:26" pos:end="221:28">spt</name></expr></argument>, <argument pos:start="221:31" pos:end="221:37"><expr pos:start="221:31" pos:end="221:37"><literal type="string" pos:start="221:31" pos:end="221:37">"tsize"</literal></expr></argument>, <argument pos:start="221:40" pos:end="221:44"><expr pos:start="221:40" pos:end="221:44"><name pos:start="221:40" pos:end="221:44">tsize</name></expr></argument>, <argument pos:start="221:47" pos:end="221:48"><expr pos:start="221:47" pos:end="221:48"><name pos:start="221:47" pos:end="221:48">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	  <return pos:start="223:11" pos:end="223:17">return;</return>

      </block_content>}</block></if></if_stmt>

  </block_content>}</block></while>



  <expr_stmt pos:start="231:3" pos:end="231:29"><expr pos:start="231:3" pos:end="231:28"><call pos:start="231:3" pos:end="231:28"><name pos:start="231:3" pos:end="231:16">tftp_send_data</name><argument_list pos:start="231:17" pos:end="231:28">(<argument pos:start="231:18" pos:end="231:20"><expr pos:start="231:18" pos:end="231:20"><name pos:start="231:18" pos:end="231:20">spt</name></expr></argument>, <argument pos:start="231:23" pos:end="231:23"><expr pos:start="231:23" pos:end="231:23"><literal type="number" pos:start="231:23" pos:end="231:23">1</literal></expr></argument>, <argument pos:start="231:26" pos:end="231:27"><expr pos:start="231:26" pos:end="231:27"><name pos:start="231:26" pos:end="231:27">tp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
