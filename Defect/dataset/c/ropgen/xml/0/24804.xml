<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24804.c" pos:tabs="8"><function pos:start="1:1" pos:end="285:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">dump_video_param</name><parameter_list pos:start="1:29" pos:end="3:56">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:68"><decl pos:start="1:53" pos:end="1:68"><type pos:start="1:53" pos:end="1:68"><name pos:start="1:53" pos:end="1:65">QSVEncContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:68">q</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:55"><decl pos:start="3:30" pos:end="3:55"><type pos:start="3:30" pos:end="3:55"><name pos:start="3:30" pos:end="3:41">mfxExtBuffer</name> <modifier pos:start="3:43" pos:end="3:43">*</modifier><modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:55">coding_opts</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="285:1">{<block_content pos:start="7:5" pos:end="283:5">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">mfxInfoMFX</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">info</name> <init pos:start="7:22" pos:end="7:36">= <expr pos:start="7:24" pos:end="7:36"><operator pos:start="7:24" pos:end="7:24">&amp;</operator><name pos:start="7:25" pos:end="7:36"><name pos:start="7:25" pos:end="7:25">q</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:32">param</name><operator pos:start="7:33" pos:end="7:33">.</operator><name pos:start="7:34" pos:end="7:36">mfx</name></name></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:66"><type pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:22">mfxExtCodingOption</name>   <modifier pos:start="11:26" pos:end="11:26">*</modifier></type><name pos:start="11:27" pos:end="11:28">co</name> <init pos:start="11:30" pos:end="11:66">= <expr pos:start="11:32" pos:end="11:66"><operator pos:start="11:32" pos:end="11:32">(</operator><name pos:start="11:33" pos:end="11:50">mfxExtCodingOption</name><operator pos:start="11:51" pos:end="11:51">*</operator><operator pos:start="11:52" pos:end="11:52">)</operator><name pos:start="11:53" pos:end="11:66"><name pos:start="11:53" pos:end="11:63">coding_opts</name><index pos:start="11:64" pos:end="11:66">[<expr pos:start="11:65" pos:end="11:65"><literal type="number" pos:start="11:65" pos:end="11:65">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<cpp:if pos:start="13:1" pos:end="13:16">#<cpp:directive pos:start="13:2" pos:end="13:3">if</cpp:directive> <expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:16">QSV_HAVE_CO2</name></expr></cpp:if>

    <decl_stmt pos:start="15:5" pos:end="20:0"><decl pos:start="15:5" pos:end="15:67"><type pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:23">mfxExtCodingOption2</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:28">co2</name> <init pos:start="15:30" pos:end="15:67">= <expr pos:start="15:32" pos:end="15:67"><operator pos:start="15:32" pos:end="15:32">(</operator><name pos:start="15:33" pos:end="15:51">mfxExtCodingOption2</name><operator pos:start="15:52" pos:end="15:52">*</operator><operator pos:start="15:53" pos:end="15:53">)</operator><name pos:start="15:54" pos:end="15:67"><name pos:start="15:54" pos:end="15:64">coding_opts</name><index pos:start="15:65" pos:end="15:67">[<expr pos:start="15:66" pos:end="15:66"><literal type="number" pos:start="15:66" pos:end="15:66">1</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="17:1" pos:end="17:6">#<cpp:directive pos:start="17:2" pos:end="17:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="19:1" pos:end="19:16">#<cpp:directive pos:start="19:2" pos:end="19:3">if</cpp:directive> <expr pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:16">QSV_HAVE_CO3</name></expr></cpp:if>

    <decl_stmt pos:start="21:5" pos:end="24:0"><decl pos:start="21:5" pos:end="21:67"><type pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:23">mfxExtCodingOption3</name> <modifier pos:start="21:25" pos:end="21:25">*</modifier></type><name pos:start="21:26" pos:end="21:28">co3</name> <init pos:start="21:30" pos:end="21:67">= <expr pos:start="21:32" pos:end="21:67"><operator pos:start="21:32" pos:end="21:32">(</operator><name pos:start="21:33" pos:end="21:51">mfxExtCodingOption3</name><operator pos:start="21:52" pos:end="21:52">*</operator><operator pos:start="21:53" pos:end="21:53">)</operator><name pos:start="21:54" pos:end="21:67"><name pos:start="21:54" pos:end="21:64">coding_opts</name><index pos:start="21:65" pos:end="21:67">[<expr pos:start="21:66" pos:end="21:66"><literal type="number" pos:start="21:66" pos:end="21:66">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

<cpp:endif pos:start="23:1" pos:end="23:6">#<cpp:directive pos:start="23:2" pos:end="23:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="27:5" pos:end="29:64"><expr pos:start="27:5" pos:end="29:63"><call pos:start="27:5" pos:end="29:63"><name pos:start="27:5" pos:end="27:10">av_log</name><argument_list pos:start="27:11" pos:end="29:63">(<argument pos:start="27:12" pos:end="27:16"><expr pos:start="27:12" pos:end="27:16"><name pos:start="27:12" pos:end="27:16">avctx</name></expr></argument>, <argument pos:start="27:19" pos:end="27:32"><expr pos:start="27:19" pos:end="27:32"><name pos:start="27:19" pos:end="27:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="27:35" pos:end="27:67"><expr pos:start="27:35" pos:end="27:67"><literal type="string" pos:start="27:35" pos:end="27:57">"profile: %s; level: %"</literal><name pos:start="27:58" pos:end="27:63">PRIu16</name><literal type="string" pos:start="27:64" pos:end="27:67">"\n"</literal></expr></argument>,

           <argument pos:start="29:12" pos:end="29:44"><expr pos:start="29:12" pos:end="29:44"><call pos:start="29:12" pos:end="29:44"><name pos:start="29:12" pos:end="29:24">print_profile</name><argument_list pos:start="29:25" pos:end="29:44">(<argument pos:start="29:26" pos:end="29:43"><expr pos:start="29:26" pos:end="29:43"><name pos:start="29:26" pos:end="29:43"><name pos:start="29:26" pos:end="29:29">info</name><operator pos:start="29:30" pos:end="29:31">-&gt;</operator><name pos:start="29:32" pos:end="29:43">CodecProfile</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:47" pos:end="29:62"><expr pos:start="29:47" pos:end="29:62"><name pos:start="29:47" pos:end="29:62"><name pos:start="29:47" pos:end="29:50">info</name><operator pos:start="29:51" pos:end="29:52">-&gt;</operator><name pos:start="29:53" pos:end="29:62">CodecLevel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:47"><expr pos:start="33:5" pos:end="35:46"><call pos:start="33:5" pos:end="35:46"><name pos:start="33:5" pos:end="33:10">av_log</name><argument_list pos:start="33:11" pos:end="35:46">(<argument pos:start="33:12" pos:end="33:16"><expr pos:start="33:12" pos:end="33:16"><name pos:start="33:12" pos:end="33:16">avctx</name></expr></argument>, <argument pos:start="33:19" pos:end="33:32"><expr pos:start="33:19" pos:end="33:32"><name pos:start="33:19" pos:end="33:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="33:35" pos:end="33:94"><expr pos:start="33:35" pos:end="33:94"><literal type="string" pos:start="33:35" pos:end="33:49">"GopPicSize: %"</literal><name pos:start="33:50" pos:end="33:55">PRIu16</name><literal type="string" pos:start="33:56" pos:end="33:72">"; GopRefDist: %"</literal><name pos:start="33:73" pos:end="33:78">PRIu16</name><literal type="string" pos:start="33:79" pos:end="33:94">"; GopOptFlag: "</literal></expr></argument>,

           <argument pos:start="35:12" pos:end="35:27"><expr pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:15">info</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:27">GopPicSize</name></name></expr></argument>, <argument pos:start="35:30" pos:end="35:45"><expr pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:33">info</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:45">GopRefDist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="39:49"><if pos:start="37:5" pos:end="39:49">if <condition pos:start="37:8" pos:end="37:42">(<expr pos:start="37:9" pos:end="37:41"><name pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:12">info</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:24">GopOptFlag</name></name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <name pos:start="37:28" pos:end="37:41">MFX_GOP_CLOSED</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:49"><block_content pos:start="39:9" pos:end="39:49">

        <expr_stmt pos:start="39:9" pos:end="39:49"><expr pos:start="39:9" pos:end="39:48"><call pos:start="39:9" pos:end="39:48"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:48">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:20">avctx</name></expr></argument>, <argument pos:start="39:23" pos:end="39:36"><expr pos:start="39:23" pos:end="39:36"><name pos:start="39:23" pos:end="39:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="39:39" pos:end="39:47"><expr pos:start="39:39" pos:end="39:47"><literal type="string" pos:start="39:39" pos:end="39:47">"closed "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="43:49"><if pos:start="41:5" pos:end="43:49">if <condition pos:start="41:8" pos:end="41:42">(<expr pos:start="41:9" pos:end="41:41"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:12">info</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:24">GopOptFlag</name></name> <operator pos:start="41:26" pos:end="41:26">&amp;</operator> <name pos:start="41:28" pos:end="41:41">MFX_GOP_STRICT</name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:49"><block_content pos:start="43:9" pos:end="43:49">

        <expr_stmt pos:start="43:9" pos:end="43:49"><expr pos:start="43:9" pos:end="43:48"><call pos:start="43:9" pos:end="43:48"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:48">(<argument pos:start="43:16" pos:end="43:20"><expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">avctx</name></expr></argument>, <argument pos:start="43:23" pos:end="43:36"><expr pos:start="43:23" pos:end="43:36"><name pos:start="43:23" pos:end="43:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="43:39" pos:end="43:47"><expr pos:start="43:39" pos:end="43:47"><literal type="string" pos:start="43:39" pos:end="43:47">"strict "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:83"><expr pos:start="45:5" pos:end="45:82"><call pos:start="45:5" pos:end="45:82"><name pos:start="45:5" pos:end="45:10">av_log</name><argument_list pos:start="45:11" pos:end="45:82">(<argument pos:start="45:12" pos:end="45:16"><expr pos:start="45:12" pos:end="45:16"><name pos:start="45:12" pos:end="45:16">avctx</name></expr></argument>, <argument pos:start="45:19" pos:end="45:32"><expr pos:start="45:19" pos:end="45:32"><name pos:start="45:19" pos:end="45:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="45:35" pos:end="45:62"><expr pos:start="45:35" pos:end="45:62"><literal type="string" pos:start="45:35" pos:end="45:52">"; IdrInterval: %"</literal><name pos:start="45:53" pos:end="45:58">PRIu16</name><literal type="string" pos:start="45:59" pos:end="45:62">"\n"</literal></expr></argument>, <argument pos:start="45:65" pos:end="45:81"><expr pos:start="45:65" pos:end="45:81"><name pos:start="45:65" pos:end="45:81"><name pos:start="45:65" pos:end="45:68">info</name><operator pos:start="45:69" pos:end="45:70">-&gt;</operator><name pos:start="45:71" pos:end="45:81">IdrInterval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="49:5" pos:end="51:74"><expr pos:start="49:5" pos:end="51:73"><call pos:start="49:5" pos:end="51:73"><name pos:start="49:5" pos:end="49:10">av_log</name><argument_list pos:start="49:11" pos:end="51:73">(<argument pos:start="49:12" pos:end="49:16"><expr pos:start="49:12" pos:end="49:16"><name pos:start="49:12" pos:end="49:16">avctx</name></expr></argument>, <argument pos:start="49:19" pos:end="49:32"><expr pos:start="49:19" pos:end="49:32"><name pos:start="49:19" pos:end="49:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="49:35" pos:end="49:83"><expr pos:start="49:35" pos:end="49:83"><literal type="string" pos:start="49:35" pos:end="49:50">"TargetUsage: %"</literal><name pos:start="49:51" pos:end="49:56">PRIu16</name><literal type="string" pos:start="49:57" pos:end="49:83">"; RateControlMethod: %s\n"</literal></expr></argument>,

           <argument pos:start="51:12" pos:end="51:28"><expr pos:start="51:12" pos:end="51:28"><name pos:start="51:12" pos:end="51:28"><name pos:start="51:12" pos:end="51:15">info</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:28">TargetUsage</name></name></expr></argument>, <argument pos:start="51:31" pos:end="51:72"><expr pos:start="51:31" pos:end="51:72"><call pos:start="51:31" pos:end="51:72"><name pos:start="51:31" pos:end="51:47">print_ratecontrol</name><argument_list pos:start="51:48" pos:end="51:72">(<argument pos:start="51:49" pos:end="51:71"><expr pos:start="51:49" pos:end="51:71"><name pos:start="51:49" pos:end="51:71"><name pos:start="51:49" pos:end="51:52">info</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:71">RateControlMethod</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="55:5" pos:end="138:0"><if pos:start="55:5" pos:end="73:5">if <condition pos:start="55:8" pos:end="65:9">(<expr pos:start="55:9" pos:end="64:0"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:12">info</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:31">RateControlMethod</name></name> <operator pos:start="55:33" pos:end="55:34">==</operator> <name pos:start="55:36" pos:end="55:54">MFX_RATECONTROL_CBR</name> <operator pos:start="55:56" pos:end="55:57">||</operator>

        <name pos:start="57:9" pos:end="57:31"><name pos:start="57:9" pos:end="57:12">info</name><operator pos:start="57:13" pos:end="57:14">-&gt;</operator><name pos:start="57:15" pos:end="57:31">RateControlMethod</name></name> <operator pos:start="57:33" pos:end="57:34">==</operator> <name pos:start="57:36" pos:end="60:0">MFX_RATECONTROL_VBR</name>

<cpp:if pos:start="59:1" pos:end="59:16">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:16">QSV_HAVE_VCM</name></expr></cpp:if>

        <operator pos:start="61:9" pos:end="61:10">||</operator> <name pos:start="61:12" pos:end="61:34"><name pos:start="61:12" pos:end="61:15">info</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:34">RateControlMethod</name></name> <operator pos:start="61:36" pos:end="61:37">==</operator> <name pos:start="61:39" pos:end="64:0">MFX_RATECONTROL_VCM</name></expr>

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>

        )</condition> <block pos:start="65:11" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:72">

        <expr_stmt pos:start="67:9" pos:end="71:72"><expr pos:start="67:9" pos:end="71:71"><call pos:start="67:9" pos:end="71:71"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="71:71">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:20">avctx</name></expr></argument>, <argument pos:start="67:23" pos:end="67:36"><expr pos:start="67:23" pos:end="67:36"><name pos:start="67:23" pos:end="67:36">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="69:16" pos:end="69:89"><expr pos:start="69:16" pos:end="69:89"><literal type="string" pos:start="69:16" pos:end="69:36">"InitialDelayInKB: %"</literal><name pos:start="69:37" pos:end="69:42">PRIu16</name><literal type="string" pos:start="69:43" pos:end="69:59">"; TargetKbps: %"</literal><name pos:start="69:60" pos:end="69:65">PRIu16</name><literal type="string" pos:start="69:66" pos:end="69:79">"; MaxKbps: %"</literal><name pos:start="69:80" pos:end="69:85">PRIu16</name><literal type="string" pos:start="69:86" pos:end="69:89">"\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:37"><expr pos:start="71:16" pos:end="71:37"><name pos:start="71:16" pos:end="71:37"><name pos:start="71:16" pos:end="71:19">info</name><operator pos:start="71:20" pos:end="71:21">-&gt;</operator><name pos:start="71:22" pos:end="71:37">InitialDelayInKB</name></name></expr></argument>, <argument pos:start="71:40" pos:end="71:55"><expr pos:start="71:40" pos:end="71:55"><name pos:start="71:40" pos:end="71:55"><name pos:start="71:40" pos:end="71:43">info</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:55">TargetKbps</name></name></expr></argument>, <argument pos:start="71:58" pos:end="71:70"><expr pos:start="71:58" pos:end="71:70"><name pos:start="71:58" pos:end="71:70"><name pos:start="71:58" pos:end="71:61">info</name><operator pos:start="71:62" pos:end="71:63">-&gt;</operator><name pos:start="71:64" pos:end="71:70">MaxKbps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="73:7" pos:end="79:5">else if <condition pos:start="73:15" pos:end="73:62">(<expr pos:start="73:16" pos:end="73:61"><name pos:start="73:16" pos:end="73:38"><name pos:start="73:16" pos:end="73:19">info</name><operator pos:start="73:20" pos:end="73:21">-&gt;</operator><name pos:start="73:22" pos:end="73:38">RateControlMethod</name></name> <operator pos:start="73:40" pos:end="73:41">==</operator> <name pos:start="73:43" pos:end="73:61">MFX_RATECONTROL_CQP</name></expr>)</condition> <block pos:start="73:64" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:48">

        <expr_stmt pos:start="75:9" pos:end="77:48"><expr pos:start="75:9" pos:end="77:47"><call pos:start="75:9" pos:end="77:47"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="77:47">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20">avctx</name></expr></argument>, <argument pos:start="75:23" pos:end="75:36"><expr pos:start="75:23" pos:end="75:36"><name pos:start="75:23" pos:end="75:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="75:39" pos:end="75:88"><expr pos:start="75:39" pos:end="75:88"><literal type="string" pos:start="75:39" pos:end="75:46">"QPI: %"</literal><name pos:start="75:47" pos:end="75:52">PRIu16</name><literal type="string" pos:start="75:53" pos:end="75:62">"; QPP: %"</literal><name pos:start="75:63" pos:end="75:68">PRIu16</name><literal type="string" pos:start="75:69" pos:end="75:78">"; QPB: %"</literal><name pos:start="75:79" pos:end="75:84">PRIu16</name><literal type="string" pos:start="75:85" pos:end="75:88">"\n"</literal></expr></argument>,

               <argument pos:start="77:16" pos:end="77:24"><expr pos:start="77:16" pos:end="77:24"><name pos:start="77:16" pos:end="77:24"><name pos:start="77:16" pos:end="77:19">info</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:24">QPI</name></name></expr></argument>, <argument pos:start="77:27" pos:end="77:35"><expr pos:start="77:27" pos:end="77:35"><name pos:start="77:27" pos:end="77:35"><name pos:start="77:27" pos:end="77:30">info</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:35">QPP</name></name></expr></argument>, <argument pos:start="77:38" pos:end="77:46"><expr pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:46"><name pos:start="77:38" pos:end="77:41">info</name><operator pos:start="77:42" pos:end="77:43">-&gt;</operator><name pos:start="77:44" pos:end="77:46">QPB</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="79:7" pos:end="90:0">else if <condition pos:start="79:15" pos:end="79:63">(<expr pos:start="79:16" pos:end="79:62"><name pos:start="79:16" pos:end="79:38"><name pos:start="79:16" pos:end="79:19">info</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:38">RateControlMethod</name></name> <operator pos:start="79:40" pos:end="79:41">==</operator> <name pos:start="79:43" pos:end="79:62">MFX_RATECONTROL_AVBR</name></expr>)</condition> <block pos:start="79:65" pos:end="90:0">{<block_content pos:start="81:9" pos:end="85:68">

        <expr_stmt pos:start="81:9" pos:end="85:68"><expr pos:start="81:9" pos:end="85:67"><call pos:start="81:9" pos:end="85:67"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="85:67">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:36"><expr pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:36">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="83:16" pos:end="83:85"><expr pos:start="83:16" pos:end="83:85"><literal type="string" pos:start="83:16" pos:end="83:30">"TargetKbps: %"</literal><name pos:start="83:31" pos:end="83:36">PRIu16</name><literal type="string" pos:start="83:37" pos:end="83:51">"; Accuracy: %"</literal><name pos:start="83:52" pos:end="83:57">PRIu16</name><literal type="string" pos:start="83:58" pos:end="83:75">"; Convergence: %"</literal><name pos:start="83:76" pos:end="83:81">PRIu16</name><literal type="string" pos:start="83:82" pos:end="83:85">"\n"</literal></expr></argument>,

               <argument pos:start="85:16" pos:end="85:31"><expr pos:start="85:16" pos:end="85:31"><name pos:start="85:16" pos:end="85:31"><name pos:start="85:16" pos:end="85:19">info</name><operator pos:start="85:20" pos:end="85:21">-&gt;</operator><name pos:start="85:22" pos:end="85:31">TargetKbps</name></name></expr></argument>, <argument pos:start="85:34" pos:end="85:47"><expr pos:start="85:34" pos:end="85:47"><name pos:start="85:34" pos:end="85:47"><name pos:start="85:34" pos:end="85:37">info</name><operator pos:start="85:38" pos:end="85:39">-&gt;</operator><name pos:start="85:40" pos:end="85:47">Accuracy</name></name></expr></argument>, <argument pos:start="85:50" pos:end="85:66"><expr pos:start="85:50" pos:end="85:66"><name pos:start="85:50" pos:end="85:66"><name pos:start="85:50" pos:end="85:53">info</name><operator pos:start="85:54" pos:end="85:55">-&gt;</operator><name pos:start="85:56" pos:end="85:66">Convergence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

<cpp:if pos:start="89:1" pos:end="89:15">#<cpp:directive pos:start="89:2" pos:end="89:3">if</cpp:directive> <expr pos:start="89:5" pos:end="89:15"><name pos:start="89:5" pos:end="89:15">QSV_HAVE_LA</name></expr></cpp:if>

    <if type="elseif" pos:start="91:5" pos:end="112:0">else if <condition pos:start="91:13" pos:end="99:14">(<expr pos:start="91:14" pos:end="98:0"><name pos:start="91:14" pos:end="91:36"><name pos:start="91:14" pos:end="91:17">info</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:36">RateControlMethod</name></name> <operator pos:start="91:38" pos:end="91:39">==</operator> <name pos:start="91:41" pos:end="94:0">MFX_RATECONTROL_LA</name>

<cpp:if pos:start="93:1" pos:end="93:19">#<cpp:directive pos:start="93:2" pos:end="93:3">if</cpp:directive> <expr pos:start="93:5" pos:end="93:19"><name pos:start="93:5" pos:end="93:19">QSV_HAVE_LA_HRD</name></expr></cpp:if>

             <operator pos:start="95:14" pos:end="95:15">||</operator> <name pos:start="95:17" pos:end="95:39"><name pos:start="95:17" pos:end="95:20">info</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:39">RateControlMethod</name></name> <operator pos:start="95:41" pos:end="95:42">==</operator> <name pos:start="95:44" pos:end="98:0">MFX_RATECONTROL_LA_HRD</name></expr>

<cpp:endif pos:start="97:1" pos:end="97:6">#<cpp:directive pos:start="97:2" pos:end="97:6">endif</cpp:directive></cpp:endif>

             )</condition> <block pos:start="99:16" pos:end="112:0">{<block_content pos:start="101:9" pos:end="105:54">

        <expr_stmt pos:start="101:9" pos:end="105:54"><expr pos:start="101:9" pos:end="105:53"><call pos:start="101:9" pos:end="105:53"><name pos:start="101:9" pos:end="101:14">av_log</name><argument_list pos:start="101:15" pos:end="105:53">(<argument pos:start="101:16" pos:end="101:20"><expr pos:start="101:16" pos:end="101:20"><name pos:start="101:16" pos:end="101:20">avctx</name></expr></argument>, <argument pos:start="101:23" pos:end="101:36"><expr pos:start="101:23" pos:end="101:36"><name pos:start="101:23" pos:end="101:36">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="103:16" pos:end="103:67"><expr pos:start="103:16" pos:end="103:67"><literal type="string" pos:start="103:16" pos:end="103:30">"TargetKbps: %"</literal><name pos:start="103:31" pos:end="103:36">PRIu16</name><literal type="string" pos:start="103:37" pos:end="103:57">"; LookAheadDepth: %"</literal><name pos:start="103:58" pos:end="103:63">PRIu16</name><literal type="string" pos:start="103:64" pos:end="103:67">"\n"</literal></expr></argument>,

               <argument pos:start="105:16" pos:end="105:31"><expr pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:31"><name pos:start="105:16" pos:end="105:19">info</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:31">TargetKbps</name></name></expr></argument>, <argument pos:start="105:34" pos:end="105:52"><expr pos:start="105:34" pos:end="105:52"><name pos:start="105:34" pos:end="105:52"><name pos:start="105:34" pos:end="105:36">co2</name><operator pos:start="105:37" pos:end="105:38">-&gt;</operator><name pos:start="105:39" pos:end="105:52">LookAheadDepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

<cpp:endif pos:start="109:1" pos:end="109:6">#<cpp:directive pos:start="109:2" pos:end="109:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="111:1" pos:end="111:16">#<cpp:directive pos:start="111:2" pos:end="111:3">if</cpp:directive> <expr pos:start="111:5" pos:end="111:16"><name pos:start="111:5" pos:end="111:16">QSV_HAVE_ICQ</name></expr></cpp:if>

    <if type="elseif" pos:start="113:5" pos:end="117:5">else if <condition pos:start="113:13" pos:end="113:60">(<expr pos:start="113:14" pos:end="113:59"><name pos:start="113:14" pos:end="113:36"><name pos:start="113:14" pos:end="113:17">info</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:36">RateControlMethod</name></name> <operator pos:start="113:38" pos:end="113:39">==</operator> <name pos:start="113:41" pos:end="113:59">MFX_RATECONTROL_ICQ</name></expr>)</condition> <block pos:start="113:62" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:83">

        <expr_stmt pos:start="115:9" pos:end="115:83"><expr pos:start="115:9" pos:end="115:82"><call pos:start="115:9" pos:end="115:82"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="115:82">(<argument pos:start="115:16" pos:end="115:20"><expr pos:start="115:16" pos:end="115:20"><name pos:start="115:16" pos:end="115:20">avctx</name></expr></argument>, <argument pos:start="115:23" pos:end="115:36"><expr pos:start="115:23" pos:end="115:36"><name pos:start="115:23" pos:end="115:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="115:39" pos:end="115:63"><expr pos:start="115:39" pos:end="115:63"><literal type="string" pos:start="115:39" pos:end="115:53">"ICQQuality: %"</literal><name pos:start="115:54" pos:end="115:59">PRIu16</name><literal type="string" pos:start="115:60" pos:end="115:63">"\n"</literal></expr></argument>, <argument pos:start="115:66" pos:end="115:81"><expr pos:start="115:66" pos:end="115:81"><name pos:start="115:66" pos:end="115:81"><name pos:start="115:66" pos:end="115:69">info</name><operator pos:start="115:70" pos:end="115:71">-&gt;</operator><name pos:start="115:72" pos:end="115:81">ICQQuality</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="117:7" pos:end="128:0">else if <condition pos:start="117:15" pos:end="117:65">(<expr pos:start="117:16" pos:end="117:64"><name pos:start="117:16" pos:end="117:38"><name pos:start="117:16" pos:end="117:19">info</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:38">RateControlMethod</name></name> <operator pos:start="117:40" pos:end="117:41">==</operator> <name pos:start="117:43" pos:end="117:64">MFX_RATECONTROL_LA_ICQ</name></expr>)</condition> <block pos:start="117:67" pos:end="128:0">{<block_content pos:start="119:9" pos:end="121:54">

        <expr_stmt pos:start="119:9" pos:end="121:54"><expr pos:start="119:9" pos:end="121:53"><call pos:start="119:9" pos:end="121:53"><name pos:start="119:9" pos:end="119:14">av_log</name><argument_list pos:start="119:15" pos:end="121:53">(<argument pos:start="119:16" pos:end="119:20"><expr pos:start="119:16" pos:end="119:20"><name pos:start="119:16" pos:end="119:20">avctx</name></expr></argument>, <argument pos:start="119:23" pos:end="119:36"><expr pos:start="119:23" pos:end="119:36"><name pos:start="119:23" pos:end="119:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="119:39" pos:end="119:90"><expr pos:start="119:39" pos:end="119:90"><literal type="string" pos:start="119:39" pos:end="119:53">"ICQQuality: %"</literal><name pos:start="119:54" pos:end="119:59">PRIu16</name><literal type="string" pos:start="119:60" pos:end="119:80">"; LookAheadDepth: %"</literal><name pos:start="119:81" pos:end="119:86">PRIu16</name><literal type="string" pos:start="119:87" pos:end="119:90">"\n"</literal></expr></argument>,

               <argument pos:start="121:16" pos:end="121:31"><expr pos:start="121:16" pos:end="121:31"><name pos:start="121:16" pos:end="121:31"><name pos:start="121:16" pos:end="121:19">info</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:31">ICQQuality</name></name></expr></argument>, <argument pos:start="121:34" pos:end="121:52"><expr pos:start="121:34" pos:end="121:52"><name pos:start="121:34" pos:end="121:52"><name pos:start="121:34" pos:end="121:36">co2</name><operator pos:start="121:37" pos:end="121:38">-&gt;</operator><name pos:start="121:39" pos:end="121:52">LookAheadDepth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

<cpp:endif pos:start="125:1" pos:end="125:6">#<cpp:directive pos:start="125:2" pos:end="125:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="127:1" pos:end="127:17">#<cpp:directive pos:start="127:2" pos:end="127:3">if</cpp:directive> <expr pos:start="127:5" pos:end="127:17"><name pos:start="127:5" pos:end="127:17">QSV_HAVE_QVBR</name></expr></cpp:if>

    <if type="elseif" pos:start="129:5" pos:end="138:0">else if <condition pos:start="129:13" pos:end="129:61">(<expr pos:start="129:14" pos:end="129:60"><name pos:start="129:14" pos:end="129:36"><name pos:start="129:14" pos:end="129:17">info</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:36">RateControlMethod</name></name> <operator pos:start="129:38" pos:end="129:39">==</operator> <name pos:start="129:41" pos:end="129:60">MFX_RATECONTROL_QVBR</name></expr>)</condition> <block pos:start="129:63" pos:end="138:0">{<block_content pos:start="131:9" pos:end="133:33">

        <expr_stmt pos:start="131:9" pos:end="133:33"><expr pos:start="131:9" pos:end="133:32"><call pos:start="131:9" pos:end="133:32"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="133:32">(<argument pos:start="131:16" pos:end="131:20"><expr pos:start="131:16" pos:end="131:20"><name pos:start="131:16" pos:end="131:20">avctx</name></expr></argument>, <argument pos:start="131:23" pos:end="131:36"><expr pos:start="131:23" pos:end="131:36"><name pos:start="131:23" pos:end="131:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="131:39" pos:end="131:64"><expr pos:start="131:39" pos:end="131:64"><literal type="string" pos:start="131:39" pos:end="131:54">"QVBRQuality: %"</literal><name pos:start="131:55" pos:end="131:60">PRIu16</name><literal type="string" pos:start="131:61" pos:end="131:64">"\n"</literal></expr></argument>,

               <argument pos:start="133:16" pos:end="133:31"><expr pos:start="133:16" pos:end="133:31"><name pos:start="133:16" pos:end="133:31"><name pos:start="133:16" pos:end="133:18">co3</name><operator pos:start="133:19" pos:end="133:20">-&gt;</operator><name pos:start="133:21" pos:end="133:31">QVBRQuality</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="137:1" pos:end="137:6">#<cpp:directive pos:start="137:2" pos:end="137:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="141:5" pos:end="143:46"><expr pos:start="141:5" pos:end="143:45"><call pos:start="141:5" pos:end="143:45"><name pos:start="141:5" pos:end="141:10">av_log</name><argument_list pos:start="141:11" pos:end="143:45">(<argument pos:start="141:12" pos:end="141:16"><expr pos:start="141:12" pos:end="141:16"><name pos:start="141:12" pos:end="141:16">avctx</name></expr></argument>, <argument pos:start="141:19" pos:end="141:32"><expr pos:start="141:19" pos:end="141:32"><name pos:start="141:19" pos:end="141:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="141:35" pos:end="141:81"><expr pos:start="141:35" pos:end="141:81"><literal type="string" pos:start="141:35" pos:end="141:47">"NumSlice: %"</literal><name pos:start="141:48" pos:end="141:53">PRIu16</name><literal type="string" pos:start="141:54" pos:end="141:71">"; NumRefFrame: %"</literal><name pos:start="141:72" pos:end="141:77">PRIu16</name><literal type="string" pos:start="141:78" pos:end="141:81">"\n"</literal></expr></argument>,

           <argument pos:start="143:12" pos:end="143:25"><expr pos:start="143:12" pos:end="143:25"><name pos:start="143:12" pos:end="143:25"><name pos:start="143:12" pos:end="143:15">info</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:25">NumSlice</name></name></expr></argument>, <argument pos:start="143:28" pos:end="143:44"><expr pos:start="143:28" pos:end="143:44"><name pos:start="143:28" pos:end="143:44"><name pos:start="143:28" pos:end="143:31">info</name><operator pos:start="143:32" pos:end="143:33">-&gt;</operator><name pos:start="143:34" pos:end="143:44">NumRefFrame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="152:0"><expr pos:start="145:5" pos:end="147:51"><call pos:start="145:5" pos:end="147:51"><name pos:start="145:5" pos:end="145:10">av_log</name><argument_list pos:start="145:11" pos:end="147:51">(<argument pos:start="145:12" pos:end="145:16"><expr pos:start="145:12" pos:end="145:16"><name pos:start="145:12" pos:end="145:16">avctx</name></expr></argument>, <argument pos:start="145:19" pos:end="145:32"><expr pos:start="145:19" pos:end="145:32"><name pos:start="145:19" pos:end="145:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="145:35" pos:end="145:59"><expr pos:start="145:35" pos:end="145:59"><literal type="string" pos:start="145:35" pos:end="145:59">"RateDistortionOpt: %s\n"</literal></expr></argument>,

           <argument pos:start="147:12" pos:end="147:50"><expr pos:start="147:12" pos:end="147:50"><call pos:start="147:12" pos:end="147:50"><name pos:start="147:12" pos:end="147:27">print_threestate</name><argument_list pos:start="147:28" pos:end="147:50">(<argument pos:start="147:29" pos:end="147:49"><expr pos:start="147:29" pos:end="147:49"><name pos:start="147:29" pos:end="147:49"><name pos:start="147:29" pos:end="147:30">co</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:49">RateDistortionOpt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="151:1" pos:end="151:16">#<cpp:directive pos:start="151:2" pos:end="151:3">if</cpp:directive> <expr pos:start="151:5" pos:end="151:16"><name pos:start="151:5" pos:end="151:16">QSV_HAVE_CO2</name></expr></cpp:if>

    <expr_stmt pos:start="153:5" pos:end="157:110"><expr pos:start="153:5" pos:end="157:109"><call pos:start="153:5" pos:end="157:109"><name pos:start="153:5" pos:end="153:10">av_log</name><argument_list pos:start="153:11" pos:end="157:109">(<argument pos:start="153:12" pos:end="153:16"><expr pos:start="153:12" pos:end="153:16"><name pos:start="153:12" pos:end="153:16">avctx</name></expr></argument>, <argument pos:start="153:19" pos:end="153:32"><expr pos:start="153:19" pos:end="153:32"><name pos:start="153:19" pos:end="153:32">AV_LOG_VERBOSE</name></expr></argument>,

           <argument pos:start="155:12" pos:end="155:111"><expr pos:start="155:12" pos:end="155:111"><literal type="string" pos:start="155:12" pos:end="155:47">"RecoveryPointSEI: %s IntRefType: %"</literal><name pos:start="155:48" pos:end="155:53">PRIu16</name><literal type="string" pos:start="155:54" pos:end="155:75">"; IntRefCycleSize: %"</literal><name pos:start="155:76" pos:end="155:81">PRIu16</name><literal type="string" pos:start="155:82" pos:end="155:101">"; IntRefQPDelta: %"</literal><name pos:start="155:102" pos:end="155:107">PRId16</name><literal type="string" pos:start="155:108" pos:end="155:111">"\n"</literal></expr></argument>,

           <argument pos:start="157:12" pos:end="157:49"><expr pos:start="157:12" pos:end="157:49"><call pos:start="157:12" pos:end="157:49"><name pos:start="157:12" pos:end="157:27">print_threestate</name><argument_list pos:start="157:28" pos:end="157:49">(<argument pos:start="157:29" pos:end="157:48"><expr pos:start="157:29" pos:end="157:48"><name pos:start="157:29" pos:end="157:48"><name pos:start="157:29" pos:end="157:30">co</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:48">RecoveryPointSEI</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="157:52" pos:end="157:66"><expr pos:start="157:52" pos:end="157:66"><name pos:start="157:52" pos:end="157:66"><name pos:start="157:52" pos:end="157:54">co2</name><operator pos:start="157:55" pos:end="157:56">-&gt;</operator><name pos:start="157:57" pos:end="157:66">IntRefType</name></name></expr></argument>, <argument pos:start="157:69" pos:end="157:88"><expr pos:start="157:69" pos:end="157:88"><name pos:start="157:69" pos:end="157:88"><name pos:start="157:69" pos:end="157:71">co2</name><operator pos:start="157:72" pos:end="157:73">-&gt;</operator><name pos:start="157:74" pos:end="157:88">IntRefCycleSize</name></name></expr></argument>, <argument pos:start="157:91" pos:end="157:108"><expr pos:start="157:91" pos:end="157:108"><name pos:start="157:91" pos:end="157:108"><name pos:start="157:91" pos:end="157:93">co2</name><operator pos:start="157:94" pos:end="157:95">-&gt;</operator><name pos:start="157:96" pos:end="157:108">IntRefQPDelta</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="161:5" pos:end="164:0"><expr pos:start="161:5" pos:end="161:81"><call pos:start="161:5" pos:end="161:81"><name pos:start="161:5" pos:end="161:10">av_log</name><argument_list pos:start="161:11" pos:end="161:81">(<argument pos:start="161:12" pos:end="161:16"><expr pos:start="161:12" pos:end="161:16"><name pos:start="161:12" pos:end="161:16">avctx</name></expr></argument>, <argument pos:start="161:19" pos:end="161:32"><expr pos:start="161:19" pos:end="161:32"><name pos:start="161:19" pos:end="161:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="161:35" pos:end="161:61"><expr pos:start="161:35" pos:end="161:61"><literal type="string" pos:start="161:35" pos:end="161:51">"MaxFrameSize: %"</literal><name pos:start="161:52" pos:end="161:57">PRIu16</name><literal type="string" pos:start="161:58" pos:end="161:61">"; "</literal></expr></argument>, <argument pos:start="161:64" pos:end="161:80"><expr pos:start="161:64" pos:end="161:80"><name pos:start="161:64" pos:end="161:80"><name pos:start="161:64" pos:end="161:66">co2</name><operator pos:start="161:67" pos:end="161:68">-&gt;</operator><name pos:start="161:69" pos:end="161:80">MaxFrameSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="163:1" pos:end="163:29">#<cpp:directive pos:start="163:2" pos:end="163:3">if</cpp:directive> <expr pos:start="163:5" pos:end="163:29"><call pos:start="163:5" pos:end="163:29"><name pos:start="163:5" pos:end="163:23">QSV_VERSION_ATLEAST</name><argument_list pos:start="163:24" pos:end="163:29">(<argument pos:start="163:25" pos:end="163:28"><expr pos:start="163:25" pos:end="163:28"><literal type="number" pos:start="163:25" pos:end="163:25">1</literal><operator pos:start="163:26" pos:end="163:26">,</operator> <literal type="number" pos:start="163:28" pos:end="163:28">9</literal></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="165:5" pos:end="168:0"><expr pos:start="165:5" pos:end="165:81"><call pos:start="165:5" pos:end="165:81"><name pos:start="165:5" pos:end="165:10">av_log</name><argument_list pos:start="165:11" pos:end="165:81">(<argument pos:start="165:12" pos:end="165:16"><expr pos:start="165:12" pos:end="165:16"><name pos:start="165:12" pos:end="165:16">avctx</name></expr></argument>, <argument pos:start="165:19" pos:end="165:32"><expr pos:start="165:19" pos:end="165:32"><name pos:start="165:19" pos:end="165:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="165:35" pos:end="165:61"><expr pos:start="165:35" pos:end="165:61"><literal type="string" pos:start="165:35" pos:end="165:51">"MaxSliceSize: %"</literal><name pos:start="165:52" pos:end="165:57">PRIu16</name><literal type="string" pos:start="165:58" pos:end="165:61">"; "</literal></expr></argument>, <argument pos:start="165:64" pos:end="165:80"><expr pos:start="165:64" pos:end="165:80"><name pos:start="165:64" pos:end="165:80"><name pos:start="165:64" pos:end="165:66">co2</name><operator pos:start="165:67" pos:end="165:68">-&gt;</operator><name pos:start="165:69" pos:end="165:80">MaxSliceSize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="167:1" pos:end="167:6">#<cpp:directive pos:start="167:2" pos:end="167:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="169:5" pos:end="169:40"><expr pos:start="169:5" pos:end="169:39"><call pos:start="169:5" pos:end="169:39"><name pos:start="169:5" pos:end="169:10">av_log</name><argument_list pos:start="169:11" pos:end="169:39">(<argument pos:start="169:12" pos:end="169:16"><expr pos:start="169:12" pos:end="169:16"><name pos:start="169:12" pos:end="169:16">avctx</name></expr></argument>, <argument pos:start="169:19" pos:end="169:32"><expr pos:start="169:19" pos:end="169:32"><name pos:start="169:19" pos:end="169:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="169:35" pos:end="169:38"><expr pos:start="169:35" pos:end="169:38"><literal type="string" pos:start="169:35" pos:end="169:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="173:5" pos:end="184:0"><expr pos:start="173:5" pos:end="179:41"><call pos:start="173:5" pos:end="179:41"><name pos:start="173:5" pos:end="173:10">av_log</name><argument_list pos:start="173:11" pos:end="179:41">(<argument pos:start="173:12" pos:end="173:16"><expr pos:start="173:12" pos:end="173:16"><name pos:start="173:12" pos:end="173:16">avctx</name></expr></argument>, <argument pos:start="173:19" pos:end="173:32"><expr pos:start="173:19" pos:end="173:32"><name pos:start="173:19" pos:end="173:32">AV_LOG_VERBOSE</name></expr></argument>,

           <argument pos:start="175:12" pos:end="175:54"><expr pos:start="175:12" pos:end="175:54"><literal type="string" pos:start="175:12" pos:end="175:54">"BitrateLimit: %s; MBBRC: %s; ExtBRC: %s\n"</literal></expr></argument>,

           <argument pos:start="177:12" pos:end="177:46"><expr pos:start="177:12" pos:end="177:46"><call pos:start="177:12" pos:end="177:46"><name pos:start="177:12" pos:end="177:27">print_threestate</name><argument_list pos:start="177:28" pos:end="177:46">(<argument pos:start="177:29" pos:end="177:45"><expr pos:start="177:29" pos:end="177:45"><name pos:start="177:29" pos:end="177:45"><name pos:start="177:29" pos:end="177:31">co2</name><operator pos:start="177:32" pos:end="177:33">-&gt;</operator><name pos:start="177:34" pos:end="177:45">BitrateLimit</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:49" pos:end="177:76"><expr pos:start="177:49" pos:end="177:76"><call pos:start="177:49" pos:end="177:76"><name pos:start="177:49" pos:end="177:64">print_threestate</name><argument_list pos:start="177:65" pos:end="177:76">(<argument pos:start="177:66" pos:end="177:75"><expr pos:start="177:66" pos:end="177:75"><name pos:start="177:66" pos:end="177:75"><name pos:start="177:66" pos:end="177:68">co2</name><operator pos:start="177:69" pos:end="177:70">-&gt;</operator><name pos:start="177:71" pos:end="177:75">MBBRC</name></name></expr></argument>)</argument_list></call></expr></argument>,

           <argument pos:start="179:12" pos:end="179:40"><expr pos:start="179:12" pos:end="179:40"><call pos:start="179:12" pos:end="179:40"><name pos:start="179:12" pos:end="179:27">print_threestate</name><argument_list pos:start="179:28" pos:end="179:40">(<argument pos:start="179:29" pos:end="179:39"><expr pos:start="179:29" pos:end="179:39"><name pos:start="179:29" pos:end="179:39"><name pos:start="179:29" pos:end="179:31">co2</name><operator pos:start="179:32" pos:end="179:33">-&gt;</operator><name pos:start="179:34" pos:end="179:39">ExtBRC</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="183:1" pos:end="183:20">#<cpp:directive pos:start="183:2" pos:end="183:3">if</cpp:directive> <expr pos:start="183:5" pos:end="183:20"><name pos:start="183:5" pos:end="183:20">QSV_HAVE_TRELLIS</name></expr></cpp:if>

    <expr_stmt pos:start="185:5" pos:end="185:47"><expr pos:start="185:5" pos:end="185:46"><call pos:start="185:5" pos:end="185:46"><name pos:start="185:5" pos:end="185:10">av_log</name><argument_list pos:start="185:11" pos:end="185:46">(<argument pos:start="185:12" pos:end="185:16"><expr pos:start="185:12" pos:end="185:16"><name pos:start="185:12" pos:end="185:16">avctx</name></expr></argument>, <argument pos:start="185:19" pos:end="185:32"><expr pos:start="185:19" pos:end="185:32"><name pos:start="185:19" pos:end="185:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="185:35" pos:end="185:45"><expr pos:start="185:35" pos:end="185:45"><literal type="string" pos:start="185:35" pos:end="185:45">"Trellis: "</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="203:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:39">(<expr pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:20"><name pos:start="187:9" pos:end="187:11">co2</name><operator pos:start="187:12" pos:end="187:13">-&gt;</operator><name pos:start="187:14" pos:end="187:20">Trellis</name></name> <operator pos:start="187:22" pos:end="187:22">&amp;</operator> <name pos:start="187:24" pos:end="187:38">MFX_TRELLIS_OFF</name></expr>)</condition> <block pos:start="187:41" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:45">

        <expr_stmt pos:start="189:9" pos:end="189:45"><expr pos:start="189:9" pos:end="189:44"><call pos:start="189:9" pos:end="189:44"><name pos:start="189:9" pos:end="189:14">av_log</name><argument_list pos:start="189:15" pos:end="189:44">(<argument pos:start="189:16" pos:end="189:20"><expr pos:start="189:16" pos:end="189:20"><name pos:start="189:16" pos:end="189:20">avctx</name></expr></argument>, <argument pos:start="189:23" pos:end="189:36"><expr pos:start="189:23" pos:end="189:36"><name pos:start="189:23" pos:end="189:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="189:39" pos:end="189:43"><expr pos:start="189:39" pos:end="189:43"><literal type="string" pos:start="189:39" pos:end="189:43">"off"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="191:7" pos:end="195:5">else if <condition pos:start="191:15" pos:end="191:29">(<expr pos:start="191:16" pos:end="191:28"><operator pos:start="191:16" pos:end="191:16">!</operator><name pos:start="191:17" pos:end="191:28"><name pos:start="191:17" pos:end="191:19">co2</name><operator pos:start="191:20" pos:end="191:21">-&gt;</operator><name pos:start="191:22" pos:end="191:28">Trellis</name></name></expr>)</condition> <block pos:start="191:31" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:46">

        <expr_stmt pos:start="193:9" pos:end="193:46"><expr pos:start="193:9" pos:end="193:45"><call pos:start="193:9" pos:end="193:45"><name pos:start="193:9" pos:end="193:14">av_log</name><argument_list pos:start="193:15" pos:end="193:45">(<argument pos:start="193:16" pos:end="193:20"><expr pos:start="193:16" pos:end="193:20"><name pos:start="193:16" pos:end="193:20">avctx</name></expr></argument>, <argument pos:start="193:23" pos:end="193:36"><expr pos:start="193:23" pos:end="193:36"><name pos:start="193:23" pos:end="193:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="193:39" pos:end="193:44"><expr pos:start="193:39" pos:end="193:44"><literal type="string" pos:start="193:39" pos:end="193:44">"auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="203:5">else <block pos:start="195:12" pos:end="203:5">{<block_content pos:start="197:9" pos:end="201:77">

        <if_stmt pos:start="197:9" pos:end="197:77"><if pos:start="197:9" pos:end="197:77">if <condition pos:start="197:12" pos:end="197:41">(<expr pos:start="197:13" pos:end="197:40"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:15">co2</name><operator pos:start="197:16" pos:end="197:17">-&gt;</operator><name pos:start="197:18" pos:end="197:24">Trellis</name></name> <operator pos:start="197:26" pos:end="197:26">&amp;</operator> <name pos:start="197:28" pos:end="197:40">MFX_TRELLIS_I</name></expr>)</condition><block type="pseudo" pos:start="197:43" pos:end="197:77"><block_content pos:start="197:43" pos:end="197:77"> <expr_stmt pos:start="197:43" pos:end="197:77"><expr pos:start="197:43" pos:end="197:76"><call pos:start="197:43" pos:end="197:76"><name pos:start="197:43" pos:end="197:48">av_log</name><argument_list pos:start="197:49" pos:end="197:76">(<argument pos:start="197:50" pos:end="197:54"><expr pos:start="197:50" pos:end="197:54"><name pos:start="197:50" pos:end="197:54">avctx</name></expr></argument>, <argument pos:start="197:57" pos:end="197:70"><expr pos:start="197:57" pos:end="197:70"><name pos:start="197:57" pos:end="197:70">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="197:73" pos:end="197:75"><expr pos:start="197:73" pos:end="197:75"><literal type="string" pos:start="197:73" pos:end="197:75">"I"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="199:9" pos:end="199:77"><if pos:start="199:9" pos:end="199:77">if <condition pos:start="199:12" pos:end="199:41">(<expr pos:start="199:13" pos:end="199:40"><name pos:start="199:13" pos:end="199:24"><name pos:start="199:13" pos:end="199:15">co2</name><operator pos:start="199:16" pos:end="199:17">-&gt;</operator><name pos:start="199:18" pos:end="199:24">Trellis</name></name> <operator pos:start="199:26" pos:end="199:26">&amp;</operator> <name pos:start="199:28" pos:end="199:40">MFX_TRELLIS_P</name></expr>)</condition><block type="pseudo" pos:start="199:43" pos:end="199:77"><block_content pos:start="199:43" pos:end="199:77"> <expr_stmt pos:start="199:43" pos:end="199:77"><expr pos:start="199:43" pos:end="199:76"><call pos:start="199:43" pos:end="199:76"><name pos:start="199:43" pos:end="199:48">av_log</name><argument_list pos:start="199:49" pos:end="199:76">(<argument pos:start="199:50" pos:end="199:54"><expr pos:start="199:50" pos:end="199:54"><name pos:start="199:50" pos:end="199:54">avctx</name></expr></argument>, <argument pos:start="199:57" pos:end="199:70"><expr pos:start="199:57" pos:end="199:70"><name pos:start="199:57" pos:end="199:70">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="199:73" pos:end="199:75"><expr pos:start="199:73" pos:end="199:75"><literal type="string" pos:start="199:73" pos:end="199:75">"P"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="201:9" pos:end="201:77"><if pos:start="201:9" pos:end="201:77">if <condition pos:start="201:12" pos:end="201:41">(<expr pos:start="201:13" pos:end="201:40"><name pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:15">co2</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:24">Trellis</name></name> <operator pos:start="201:26" pos:end="201:26">&amp;</operator> <name pos:start="201:28" pos:end="201:40">MFX_TRELLIS_B</name></expr>)</condition><block type="pseudo" pos:start="201:43" pos:end="201:77"><block_content pos:start="201:43" pos:end="201:77"> <expr_stmt pos:start="201:43" pos:end="201:77"><expr pos:start="201:43" pos:end="201:76"><call pos:start="201:43" pos:end="201:76"><name pos:start="201:43" pos:end="201:48">av_log</name><argument_list pos:start="201:49" pos:end="201:76">(<argument pos:start="201:50" pos:end="201:54"><expr pos:start="201:50" pos:end="201:54"><name pos:start="201:50" pos:end="201:54">avctx</name></expr></argument>, <argument pos:start="201:57" pos:end="201:70"><expr pos:start="201:57" pos:end="201:70"><name pos:start="201:57" pos:end="201:70">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="201:73" pos:end="201:75"><expr pos:start="201:73" pos:end="201:75"><literal type="string" pos:start="201:73" pos:end="201:75">"B"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="212:0"><expr pos:start="205:5" pos:end="205:39"><call pos:start="205:5" pos:end="205:39"><name pos:start="205:5" pos:end="205:10">av_log</name><argument_list pos:start="205:11" pos:end="205:39">(<argument pos:start="205:12" pos:end="205:16"><expr pos:start="205:12" pos:end="205:16"><name pos:start="205:12" pos:end="205:16">avctx</name></expr></argument>, <argument pos:start="205:19" pos:end="205:32"><expr pos:start="205:19" pos:end="205:32"><name pos:start="205:19" pos:end="205:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="205:35" pos:end="205:38"><expr pos:start="205:35" pos:end="205:38"><literal type="string" pos:start="205:35" pos:end="205:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="207:1" pos:end="207:6">#<cpp:directive pos:start="207:2" pos:end="207:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="211:1" pos:end="211:29">#<cpp:directive pos:start="211:2" pos:end="211:3">if</cpp:directive> <expr pos:start="211:5" pos:end="211:29"><call pos:start="211:5" pos:end="211:29"><name pos:start="211:5" pos:end="211:23">QSV_VERSION_ATLEAST</name><argument_list pos:start="211:24" pos:end="211:29">(<argument pos:start="211:25" pos:end="211:28"><expr pos:start="211:25" pos:end="211:28"><literal type="number" pos:start="211:25" pos:end="211:25">1</literal><operator pos:start="211:26" pos:end="211:26">,</operator> <literal type="number" pos:start="211:28" pos:end="211:28">8</literal></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="213:5" pos:end="217:65"><expr pos:start="213:5" pos:end="217:64"><call pos:start="213:5" pos:end="217:64"><name pos:start="213:5" pos:end="213:10">av_log</name><argument_list pos:start="213:11" pos:end="217:64">(<argument pos:start="213:12" pos:end="213:16"><expr pos:start="213:12" pos:end="213:16"><name pos:start="213:12" pos:end="213:16">avctx</name></expr></argument>, <argument pos:start="213:19" pos:end="213:32"><expr pos:start="213:19" pos:end="213:32"><name pos:start="213:19" pos:end="213:32">AV_LOG_VERBOSE</name></expr></argument>,

           <argument pos:start="215:12" pos:end="215:67"><expr pos:start="215:12" pos:end="215:67"><literal type="string" pos:start="215:12" pos:end="215:44">"RepeatPPS: %s; NumMbPerSlice: %"</literal><name pos:start="215:45" pos:end="215:50">PRIu16</name><literal type="string" pos:start="215:51" pos:end="215:67">"; LookAheadDS: "</literal></expr></argument>,

           <argument pos:start="217:12" pos:end="217:43"><expr pos:start="217:12" pos:end="217:43"><call pos:start="217:12" pos:end="217:43"><name pos:start="217:12" pos:end="217:27">print_threestate</name><argument_list pos:start="217:28" pos:end="217:43">(<argument pos:start="217:29" pos:end="217:42"><expr pos:start="217:29" pos:end="217:42"><name pos:start="217:29" pos:end="217:42"><name pos:start="217:29" pos:end="217:31">co2</name><operator pos:start="217:32" pos:end="217:33">-&gt;</operator><name pos:start="217:34" pos:end="217:42">RepeatPPS</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="217:46" pos:end="217:63"><expr pos:start="217:46" pos:end="217:63"><name pos:start="217:46" pos:end="217:63"><name pos:start="217:46" pos:end="217:48">co2</name><operator pos:start="217:49" pos:end="217:50">-&gt;</operator><name pos:start="217:51" pos:end="217:63">NumMbPerSlice</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="219:5" pos:end="229:5">switch <condition pos:start="219:12" pos:end="219:29">(<expr pos:start="219:13" pos:end="219:28"><name pos:start="219:13" pos:end="219:28"><name pos:start="219:13" pos:end="219:15">co2</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:28">LookAheadDS</name></name></expr>)</condition> <block pos:start="219:31" pos:end="229:5">{<block_content pos:start="221:5" pos:end="227:79">

    <case pos:start="221:5" pos:end="221:30">case <expr pos:start="221:10" pos:end="221:29"><name pos:start="221:10" pos:end="221:29">MFX_LOOKAHEAD_DS_OFF</name></expr>:</case> <expr_stmt pos:start="221:32" pos:end="221:68"><expr pos:start="221:32" pos:end="221:67"><call pos:start="221:32" pos:end="221:67"><name pos:start="221:32" pos:end="221:37">av_log</name><argument_list pos:start="221:38" pos:end="221:67">(<argument pos:start="221:39" pos:end="221:43"><expr pos:start="221:39" pos:end="221:43"><name pos:start="221:39" pos:end="221:43">avctx</name></expr></argument>, <argument pos:start="221:46" pos:end="221:59"><expr pos:start="221:46" pos:end="221:59"><name pos:start="221:46" pos:end="221:59">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="221:62" pos:end="221:66"><expr pos:start="221:62" pos:end="221:66"><literal type="string" pos:start="221:62" pos:end="221:66">"off"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <break pos:start="221:74" pos:end="221:79">break;</break>

    <case pos:start="223:5" pos:end="223:29">case <expr pos:start="223:10" pos:end="223:28"><name pos:start="223:10" pos:end="223:28">MFX_LOOKAHEAD_DS_2x</name></expr>:</case>  <expr_stmt pos:start="223:32" pos:end="223:67"><expr pos:start="223:32" pos:end="223:66"><call pos:start="223:32" pos:end="223:66"><name pos:start="223:32" pos:end="223:37">av_log</name><argument_list pos:start="223:38" pos:end="223:66">(<argument pos:start="223:39" pos:end="223:43"><expr pos:start="223:39" pos:end="223:43"><name pos:start="223:39" pos:end="223:43">avctx</name></expr></argument>, <argument pos:start="223:46" pos:end="223:59"><expr pos:start="223:46" pos:end="223:59"><name pos:start="223:46" pos:end="223:59">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="223:62" pos:end="223:65"><expr pos:start="223:62" pos:end="223:65"><literal type="string" pos:start="223:62" pos:end="223:65">"2x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <break pos:start="223:74" pos:end="223:79">break;</break>

    <case pos:start="225:5" pos:end="225:29">case <expr pos:start="225:10" pos:end="225:28"><name pos:start="225:10" pos:end="225:28">MFX_LOOKAHEAD_DS_4x</name></expr>:</case>  <expr_stmt pos:start="225:32" pos:end="225:67"><expr pos:start="225:32" pos:end="225:66"><call pos:start="225:32" pos:end="225:66"><name pos:start="225:32" pos:end="225:37">av_log</name><argument_list pos:start="225:38" pos:end="225:66">(<argument pos:start="225:39" pos:end="225:43"><expr pos:start="225:39" pos:end="225:43"><name pos:start="225:39" pos:end="225:43">avctx</name></expr></argument>, <argument pos:start="225:46" pos:end="225:59"><expr pos:start="225:46" pos:end="225:59"><name pos:start="225:46" pos:end="225:59">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="225:62" pos:end="225:65"><expr pos:start="225:62" pos:end="225:65"><literal type="string" pos:start="225:62" pos:end="225:65">"4x"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <break pos:start="225:74" pos:end="225:79">break;</break>

    <default pos:start="227:5" pos:end="227:12">default:</default>                   <expr_stmt pos:start="227:32" pos:end="227:72"><expr pos:start="227:32" pos:end="227:71"><call pos:start="227:32" pos:end="227:71"><name pos:start="227:32" pos:end="227:37">av_log</name><argument_list pos:start="227:38" pos:end="227:71">(<argument pos:start="227:39" pos:end="227:43"><expr pos:start="227:39" pos:end="227:43"><name pos:start="227:39" pos:end="227:43">avctx</name></expr></argument>, <argument pos:start="227:46" pos:end="227:59"><expr pos:start="227:46" pos:end="227:59"><name pos:start="227:46" pos:end="227:59">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="227:62" pos:end="227:70"><expr pos:start="227:62" pos:end="227:70"><literal type="string" pos:start="227:62" pos:end="227:70">"unknown"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="227:74" pos:end="227:79">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="231:5" pos:end="231:40"><expr pos:start="231:5" pos:end="231:39"><call pos:start="231:5" pos:end="231:39"><name pos:start="231:5" pos:end="231:10">av_log</name><argument_list pos:start="231:11" pos:end="231:39">(<argument pos:start="231:12" pos:end="231:16"><expr pos:start="231:12" pos:end="231:16"><name pos:start="231:12" pos:end="231:16">avctx</name></expr></argument>, <argument pos:start="231:19" pos:end="231:32"><expr pos:start="231:19" pos:end="231:32"><name pos:start="231:19" pos:end="231:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="231:35" pos:end="231:38"><expr pos:start="231:35" pos:end="231:38"><literal type="string" pos:start="231:35" pos:end="231:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="235:5" pos:end="237:79"><expr pos:start="235:5" pos:end="237:78"><call pos:start="235:5" pos:end="237:78"><name pos:start="235:5" pos:end="235:10">av_log</name><argument_list pos:start="235:11" pos:end="237:78">(<argument pos:start="235:12" pos:end="235:16"><expr pos:start="235:12" pos:end="235:16"><name pos:start="235:12" pos:end="235:16">avctx</name></expr></argument>, <argument pos:start="235:19" pos:end="235:32"><expr pos:start="235:19" pos:end="235:32"><name pos:start="235:19" pos:end="235:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="235:35" pos:end="235:76"><expr pos:start="235:35" pos:end="235:76"><literal type="string" pos:start="235:35" pos:end="235:76">"AdaptiveI: %s; AdaptiveB: %s; BRefType: "</literal></expr></argument>,

           <argument pos:start="237:12" pos:end="237:43"><expr pos:start="237:12" pos:end="237:43"><call pos:start="237:12" pos:end="237:43"><name pos:start="237:12" pos:end="237:27">print_threestate</name><argument_list pos:start="237:28" pos:end="237:43">(<argument pos:start="237:29" pos:end="237:42"><expr pos:start="237:29" pos:end="237:42"><name pos:start="237:29" pos:end="237:42"><name pos:start="237:29" pos:end="237:31">co2</name><operator pos:start="237:32" pos:end="237:33">-&gt;</operator><name pos:start="237:34" pos:end="237:42">AdaptiveI</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="237:46" pos:end="237:77"><expr pos:start="237:46" pos:end="237:77"><call pos:start="237:46" pos:end="237:77"><name pos:start="237:46" pos:end="237:61">print_threestate</name><argument_list pos:start="237:62" pos:end="237:77">(<argument pos:start="237:63" pos:end="237:76"><expr pos:start="237:63" pos:end="237:76"><name pos:start="237:63" pos:end="237:76"><name pos:start="237:63" pos:end="237:65">co2</name><operator pos:start="237:66" pos:end="237:67">-&gt;</operator><name pos:start="237:68" pos:end="237:76">AdaptiveB</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="239:5" pos:end="247:5">switch <condition pos:start="239:12" pos:end="239:26">(<expr pos:start="239:13" pos:end="239:25"><name pos:start="239:13" pos:end="239:25"><name pos:start="239:13" pos:end="239:15">co2</name><operator pos:start="239:16" pos:end="239:17">-&gt;</operator><name pos:start="239:18" pos:end="239:25">BRefType</name></name></expr>)</condition> <block pos:start="239:28" pos:end="247:5">{<block_content pos:start="241:5" pos:end="245:78">

    <case pos:start="241:5" pos:end="241:23">case <expr pos:start="241:10" pos:end="241:22"><name pos:start="241:10" pos:end="241:22">MFX_B_REF_OFF</name></expr>:</case>     <expr_stmt pos:start="241:29" pos:end="241:65"><expr pos:start="241:29" pos:end="241:64"><call pos:start="241:29" pos:end="241:64"><name pos:start="241:29" pos:end="241:34">av_log</name><argument_list pos:start="241:35" pos:end="241:64">(<argument pos:start="241:36" pos:end="241:40"><expr pos:start="241:36" pos:end="241:40"><name pos:start="241:36" pos:end="241:40">avctx</name></expr></argument>, <argument pos:start="241:43" pos:end="241:56"><expr pos:start="241:43" pos:end="241:56"><name pos:start="241:43" pos:end="241:56">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="241:59" pos:end="241:63"><expr pos:start="241:59" pos:end="241:63"><literal type="string" pos:start="241:59" pos:end="241:63">"off"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <break pos:start="241:73" pos:end="241:78">break;</break>

    <case pos:start="243:5" pos:end="243:27">case <expr pos:start="243:10" pos:end="243:26"><name pos:start="243:10" pos:end="243:26">MFX_B_REF_PYRAMID</name></expr>:</case> <expr_stmt pos:start="243:29" pos:end="243:69"><expr pos:start="243:29" pos:end="243:68"><call pos:start="243:29" pos:end="243:68"><name pos:start="243:29" pos:end="243:34">av_log</name><argument_list pos:start="243:35" pos:end="243:68">(<argument pos:start="243:36" pos:end="243:40"><expr pos:start="243:36" pos:end="243:40"><name pos:start="243:36" pos:end="243:40">avctx</name></expr></argument>, <argument pos:start="243:43" pos:end="243:56"><expr pos:start="243:43" pos:end="243:56"><name pos:start="243:43" pos:end="243:56">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="243:59" pos:end="243:67"><expr pos:start="243:59" pos:end="243:67"><literal type="string" pos:start="243:59" pos:end="243:67">"pyramid"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="243:73" pos:end="243:78">break;</break>

    <default pos:start="245:5" pos:end="245:12">default:</default>                <expr_stmt pos:start="245:29" pos:end="245:66"><expr pos:start="245:29" pos:end="245:65"><call pos:start="245:29" pos:end="245:65"><name pos:start="245:29" pos:end="245:34">av_log</name><argument_list pos:start="245:35" pos:end="245:65">(<argument pos:start="245:36" pos:end="245:40"><expr pos:start="245:36" pos:end="245:40"><name pos:start="245:36" pos:end="245:40">avctx</name></expr></argument>, <argument pos:start="245:43" pos:end="245:56"><expr pos:start="245:43" pos:end="245:56"><name pos:start="245:43" pos:end="245:56">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="245:59" pos:end="245:64"><expr pos:start="245:59" pos:end="245:64"><literal type="string" pos:start="245:59" pos:end="245:64">"auto"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>      <break pos:start="245:73" pos:end="245:78">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="249:5" pos:end="256:0"><expr pos:start="249:5" pos:end="249:39"><call pos:start="249:5" pos:end="249:39"><name pos:start="249:5" pos:end="249:10">av_log</name><argument_list pos:start="249:11" pos:end="249:39">(<argument pos:start="249:12" pos:end="249:16"><expr pos:start="249:12" pos:end="249:16"><name pos:start="249:12" pos:end="249:16">avctx</name></expr></argument>, <argument pos:start="249:19" pos:end="249:32"><expr pos:start="249:19" pos:end="249:32"><name pos:start="249:19" pos:end="249:32">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="249:35" pos:end="249:38"><expr pos:start="249:35" pos:end="249:38"><literal type="string" pos:start="249:35" pos:end="249:38">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="251:1" pos:end="251:6">#<cpp:directive pos:start="251:2" pos:end="251:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="255:1" pos:end="255:29">#<cpp:directive pos:start="255:2" pos:end="255:3">if</cpp:directive> <expr pos:start="255:5" pos:end="255:29"><call pos:start="255:5" pos:end="255:29"><name pos:start="255:5" pos:end="255:23">QSV_VERSION_ATLEAST</name><argument_list pos:start="255:24" pos:end="255:29">(<argument pos:start="255:25" pos:end="255:28"><expr pos:start="255:25" pos:end="255:28"><literal type="number" pos:start="255:25" pos:end="255:25">1</literal><operator pos:start="255:26" pos:end="255:26">,</operator> <literal type="number" pos:start="255:28" pos:end="255:28">9</literal></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="257:5" pos:end="266:0"><expr pos:start="257:5" pos:end="261:88"><call pos:start="257:5" pos:end="261:88"><name pos:start="257:5" pos:end="257:10">av_log</name><argument_list pos:start="257:11" pos:end="261:88">(<argument pos:start="257:12" pos:end="257:16"><expr pos:start="257:12" pos:end="257:16"><name pos:start="257:12" pos:end="257:16">avctx</name></expr></argument>, <argument pos:start="257:19" pos:end="257:32"><expr pos:start="257:19" pos:end="257:32"><name pos:start="257:19" pos:end="257:32">AV_LOG_VERBOSE</name></expr></argument>,

           <argument pos:start="259:12" pos:end="259:121"><expr pos:start="259:12" pos:end="259:121"><literal type="string" pos:start="259:12" pos:end="259:22">"MinQPI: %"</literal><name pos:start="259:23" pos:end="259:27">PRIu8</name><literal type="string" pos:start="259:28" pos:end="259:40">"; MaxQPI: %"</literal><name pos:start="259:41" pos:end="259:45">PRIu8</name><literal type="string" pos:start="259:46" pos:end="259:58">"; MinQPP: %"</literal><name pos:start="259:59" pos:end="259:63">PRIu8</name><literal type="string" pos:start="259:64" pos:end="259:76">"; MaxQPP: %"</literal><name pos:start="259:77" pos:end="259:81">PRIu8</name><literal type="string" pos:start="259:82" pos:end="259:94">"; MinQPB: %"</literal><name pos:start="259:95" pos:end="259:99">PRIu8</name><literal type="string" pos:start="259:100" pos:end="259:112">"; MaxQPB: %"</literal><name pos:start="259:113" pos:end="259:117">PRIu8</name><literal type="string" pos:start="259:118" pos:end="259:121">"\n"</literal></expr></argument>,

           <argument pos:start="261:12" pos:end="261:22"><expr pos:start="261:12" pos:end="261:22"><name pos:start="261:12" pos:end="261:22"><name pos:start="261:12" pos:end="261:14">co2</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:22">MinQPI</name></name></expr></argument>, <argument pos:start="261:25" pos:end="261:35"><expr pos:start="261:25" pos:end="261:35"><name pos:start="261:25" pos:end="261:35"><name pos:start="261:25" pos:end="261:27">co2</name><operator pos:start="261:28" pos:end="261:29">-&gt;</operator><name pos:start="261:30" pos:end="261:35">MaxQPI</name></name></expr></argument>, <argument pos:start="261:38" pos:end="261:48"><expr pos:start="261:38" pos:end="261:48"><name pos:start="261:38" pos:end="261:48"><name pos:start="261:38" pos:end="261:40">co2</name><operator pos:start="261:41" pos:end="261:42">-&gt;</operator><name pos:start="261:43" pos:end="261:48">MinQPP</name></name></expr></argument>, <argument pos:start="261:51" pos:end="261:61"><expr pos:start="261:51" pos:end="261:61"><name pos:start="261:51" pos:end="261:61"><name pos:start="261:51" pos:end="261:53">co2</name><operator pos:start="261:54" pos:end="261:55">-&gt;</operator><name pos:start="261:56" pos:end="261:61">MaxQPP</name></name></expr></argument>, <argument pos:start="261:64" pos:end="261:74"><expr pos:start="261:64" pos:end="261:74"><name pos:start="261:64" pos:end="261:74"><name pos:start="261:64" pos:end="261:66">co2</name><operator pos:start="261:67" pos:end="261:68">-&gt;</operator><name pos:start="261:69" pos:end="261:74">MinQPB</name></name></expr></argument>, <argument pos:start="261:77" pos:end="261:87"><expr pos:start="261:77" pos:end="261:87"><name pos:start="261:77" pos:end="261:87"><name pos:start="261:77" pos:end="261:79">co2</name><operator pos:start="261:80" pos:end="261:81">-&gt;</operator><name pos:start="261:82" pos:end="261:87">MaxQPB</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="263:1" pos:end="263:6">#<cpp:directive pos:start="263:2" pos:end="263:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="265:1" pos:end="265:6">#<cpp:directive pos:start="265:2" pos:end="265:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="269:5" pos:end="283:5"><if pos:start="269:5" pos:end="283:5">if <condition pos:start="269:8" pos:end="269:44">(<expr pos:start="269:9" pos:end="269:43"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:13">avctx</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:23">codec_id</name></name> <operator pos:start="269:25" pos:end="269:26">==</operator> <name pos:start="269:28" pos:end="269:43">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="269:46" pos:end="283:5">{<block_content pos:start="271:9" pos:end="281:101">

        <expr_stmt pos:start="271:9" pos:end="273:95"><expr pos:start="271:9" pos:end="273:94"><call pos:start="271:9" pos:end="273:94"><name pos:start="271:9" pos:end="271:14">av_log</name><argument_list pos:start="271:15" pos:end="273:94">(<argument pos:start="271:16" pos:end="271:20"><expr pos:start="271:16" pos:end="271:20"><name pos:start="271:16" pos:end="271:20">avctx</name></expr></argument>, <argument pos:start="271:23" pos:end="271:36"><expr pos:start="271:23" pos:end="271:36"><name pos:start="271:23" pos:end="271:36">AV_LOG_VERBOSE</name></expr></argument>, <argument pos:start="271:39" pos:end="271:93"><expr pos:start="271:39" pos:end="271:93"><literal type="string" pos:start="271:39" pos:end="271:83">"Entropy coding: %s; MaxDecFrameBuffering: %"</literal><name pos:start="271:84" pos:end="271:89">PRIu16</name><literal type="string" pos:start="271:90" pos:end="271:93">"\n"</literal></expr></argument>,

               <argument pos:start="273:16" pos:end="273:67"><expr pos:start="273:16" pos:end="273:67"><ternary pos:start="273:16" pos:end="273:67"><condition pos:start="273:16" pos:end="273:49"><expr pos:start="273:16" pos:end="273:47"><name pos:start="273:16" pos:end="273:24"><name pos:start="273:16" pos:end="273:17">co</name><operator pos:start="273:18" pos:end="273:19">-&gt;</operator><name pos:start="273:20" pos:end="273:24">CAVLC</name></name> <operator pos:start="273:26" pos:end="273:27">==</operator> <name pos:start="273:29" pos:end="273:47">MFX_CODINGOPTION_ON</name></expr> ?</condition><then pos:start="273:51" pos:end="273:57"> <expr pos:start="273:51" pos:end="273:57"><literal type="string" pos:start="273:51" pos:end="273:57">"CAVLC"</literal></expr> </then><else pos:start="273:59" pos:end="273:67">: <expr pos:start="273:61" pos:end="273:67"><literal type="string" pos:start="273:61" pos:end="273:67">"CABAC"</literal></expr></else></ternary></expr></argument>, <argument pos:start="273:70" pos:end="273:93"><expr pos:start="273:70" pos:end="273:93"><name pos:start="273:70" pos:end="273:93"><name pos:start="273:70" pos:end="273:71">co</name><operator pos:start="273:72" pos:end="273:73">-&gt;</operator><name pos:start="273:74" pos:end="273:93">MaxDecFrameBuffering</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="281:101"><expr pos:start="275:9" pos:end="281:100"><call pos:start="275:9" pos:end="281:100"><name pos:start="275:9" pos:end="275:14">av_log</name><argument_list pos:start="275:15" pos:end="281:100">(<argument pos:start="275:16" pos:end="275:20"><expr pos:start="275:16" pos:end="275:20"><name pos:start="275:16" pos:end="275:20">avctx</name></expr></argument>, <argument pos:start="275:23" pos:end="275:36"><expr pos:start="275:23" pos:end="275:36"><name pos:start="275:23" pos:end="275:36">AV_LOG_VERBOSE</name></expr></argument>,

               <argument pos:start="277:16" pos:end="277:111"><expr pos:start="277:16" pos:end="277:111"><literal type="string" pos:start="277:16" pos:end="277:111">"NalHrdConformance: %s; SingleSeiNalUnit: %s; VuiVclHrdParameters: %s VuiNalHrdParameters: %s\n"</literal></expr></argument>,

               <argument pos:start="279:16" pos:end="279:54"><expr pos:start="279:16" pos:end="279:54"><call pos:start="279:16" pos:end="279:54"><name pos:start="279:16" pos:end="279:31">print_threestate</name><argument_list pos:start="279:32" pos:end="279:54">(<argument pos:start="279:33" pos:end="279:53"><expr pos:start="279:33" pos:end="279:53"><name pos:start="279:33" pos:end="279:53"><name pos:start="279:33" pos:end="279:34">co</name><operator pos:start="279:35" pos:end="279:36">-&gt;</operator><name pos:start="279:37" pos:end="279:53">NalHrdConformance</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="279:57" pos:end="279:94"><expr pos:start="279:57" pos:end="279:94"><call pos:start="279:57" pos:end="279:94"><name pos:start="279:57" pos:end="279:72">print_threestate</name><argument_list pos:start="279:73" pos:end="279:94">(<argument pos:start="279:74" pos:end="279:93"><expr pos:start="279:74" pos:end="279:93"><name pos:start="279:74" pos:end="279:93"><name pos:start="279:74" pos:end="279:75">co</name><operator pos:start="279:76" pos:end="279:77">-&gt;</operator><name pos:start="279:78" pos:end="279:93">SingleSeiNalUnit</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="281:16" pos:end="281:56"><expr pos:start="281:16" pos:end="281:56"><call pos:start="281:16" pos:end="281:56"><name pos:start="281:16" pos:end="281:31">print_threestate</name><argument_list pos:start="281:32" pos:end="281:56">(<argument pos:start="281:33" pos:end="281:55"><expr pos:start="281:33" pos:end="281:55"><name pos:start="281:33" pos:end="281:55"><name pos:start="281:33" pos:end="281:34">co</name><operator pos:start="281:35" pos:end="281:36">-&gt;</operator><name pos:start="281:37" pos:end="281:55">VuiVclHrdParameters</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="281:59" pos:end="281:99"><expr pos:start="281:59" pos:end="281:99"><call pos:start="281:59" pos:end="281:99"><name pos:start="281:59" pos:end="281:74">print_threestate</name><argument_list pos:start="281:75" pos:end="281:99">(<argument pos:start="281:76" pos:end="281:98"><expr pos:start="281:76" pos:end="281:98"><name pos:start="281:76" pos:end="281:98"><name pos:start="281:76" pos:end="281:77">co</name><operator pos:start="281:78" pos:end="281:79">-&gt;</operator><name pos:start="281:80" pos:end="281:98">VuiNalHrdParameters</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
