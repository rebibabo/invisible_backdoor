<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24997.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_mac_write</name><parameter_list pos:start="1:25" pos:end="1:65">(<parameter pos:start="1:26" pos:end="1:41"><decl pos:start="1:26" pos:end="1:41"><type pos:start="1:26" pos:end="1:41"><name pos:start="1:26" pos:end="1:38">lan9118_state</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:50"><decl pos:start="1:44" pos:end="1:50"><type pos:start="1:44" pos:end="1:50"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:50">reg</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:64"><decl pos:start="1:53" pos:end="1:64"><type pos:start="1:53" pos:end="1:64"><name pos:start="1:53" pos:end="1:60">uint32_t</name></type> <name pos:start="1:62" pos:end="1:64">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:5">

    <switch pos:start="5:5" pos:end="111:5">switch <condition pos:start="5:12" pos:end="5:16">(<expr pos:start="5:13" pos:end="5:15"><name pos:start="5:13" pos:end="5:15">reg</name></expr>)</condition> <block pos:start="5:18" pos:end="111:5">{<block_content pos:start="7:5" pos:end="109:40">

    <case pos:start="7:5" pos:end="7:16">case <expr pos:start="7:10" pos:end="7:15"><name pos:start="7:10" pos:end="7:15">MAC_CR</name></expr>:</case>

        <if_stmt pos:start="9:9" pos:end="13:9"><if pos:start="9:9" pos:end="13:9">if <condition pos:start="9:12" pos:end="9:71">(<expr pos:start="9:13" pos:end="9:70"><operator pos:start="9:13" pos:end="9:13">(</operator><name pos:start="9:14" pos:end="9:22"><name pos:start="9:14" pos:end="9:14">s</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:22">mac_cr</name></name> <operator pos:start="9:24" pos:end="9:24">&amp;</operator> <name pos:start="9:26" pos:end="9:36">MAC_CR_RXEN</name><operator pos:start="9:37" pos:end="9:37">)</operator> <operator pos:start="9:39" pos:end="9:40">!=</operator> <literal type="number" pos:start="9:42" pos:end="9:42">0</literal> <operator pos:start="9:44" pos:end="9:45">&amp;&amp;</operator> <operator pos:start="9:47" pos:end="9:47">(</operator><name pos:start="9:48" pos:end="9:50">val</name> <operator pos:start="9:52" pos:end="9:52">&amp;</operator> <name pos:start="9:54" pos:end="9:64">MAC_CR_RXEN</name><operator pos:start="9:65" pos:end="9:65">)</operator> <operator pos:start="9:67" pos:end="9:68">==</operator> <literal type="number" pos:start="9:70" pos:end="9:70">0</literal></expr>)</condition> <block pos:start="9:73" pos:end="13:9">{<block_content pos:start="11:13" pos:end="11:37">

            <expr_stmt pos:start="11:13" pos:end="11:37"><expr pos:start="11:13" pos:end="11:36"><name pos:start="11:13" pos:end="11:22"><name pos:start="11:13" pos:end="11:13">s</name><operator pos:start="11:14" pos:end="11:15">-&gt;</operator><name pos:start="11:16" pos:end="11:22">int_sts</name></name> <operator pos:start="11:24" pos:end="11:25">|=</operator> <name pos:start="11:27" pos:end="11:36">RXSTOP_INT</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:42"><name pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:17">mac_cr</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:23">val</name> <operator pos:start="15:25" pos:end="15:25">&amp;</operator> <operator pos:start="15:27" pos:end="15:27">~</operator><name pos:start="15:28" pos:end="15:42">MAC_CR_RESERVED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="17:9" pos:end="17:39"><expr pos:start="17:9" pos:end="17:38"><call pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:15">DPRINTF</name><argument_list pos:start="17:16" pos:end="17:38">(<argument pos:start="17:17" pos:end="17:32"><expr pos:start="17:17" pos:end="17:32"><literal type="string" pos:start="17:17" pos:end="17:32">"MAC_CR: %08x\n"</literal></expr></argument>, <argument pos:start="17:35" pos:end="17:37"><expr pos:start="17:35" pos:end="17:37"><name pos:start="17:35" pos:end="17:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="19:9" pos:end="19:14">break;</break>

    <case pos:start="21:5" pos:end="21:19">case <expr pos:start="21:10" pos:end="21:18"><name pos:start="21:10" pos:end="21:18">MAC_ADDRH</name></expr>:</case>

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:28"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:15">conf</name><operator pos:start="23:16" pos:end="23:16">.</operator><name pos:start="23:17" pos:end="23:23">macaddr</name><operator pos:start="23:24" pos:end="23:24">.</operator><name pos:start="23:25" pos:end="23:25">a</name><index pos:start="23:26" pos:end="23:28">[<expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">4</literal></expr>]</index></name> <operator pos:start="23:30" pos:end="23:30">=</operator> <name pos:start="23:32" pos:end="23:34">val</name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <literal type="number" pos:start="23:38" pos:end="23:41">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:49"><expr pos:start="25:9" pos:end="25:48"><name pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">conf</name><operator pos:start="25:16" pos:end="25:16">.</operator><name pos:start="25:17" pos:end="25:23">macaddr</name><operator pos:start="25:24" pos:end="25:24">.</operator><name pos:start="25:25" pos:end="25:25">a</name><index pos:start="25:26" pos:end="25:28">[<expr pos:start="25:27" pos:end="25:27"><literal type="number" pos:start="25:27" pos:end="25:27">5</literal></expr>]</index></name> <operator pos:start="25:30" pos:end="25:30">=</operator> <operator pos:start="25:32" pos:end="25:32">(</operator><name pos:start="25:33" pos:end="25:35">val</name> <operator pos:start="25:37" pos:end="25:38">&gt;&gt;</operator> <literal type="number" pos:start="25:40" pos:end="25:40">8</literal><operator pos:start="25:41" pos:end="25:41">)</operator> <operator pos:start="25:43" pos:end="25:43">&amp;</operator> <literal type="number" pos:start="25:45" pos:end="25:48">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:31"><expr pos:start="27:9" pos:end="27:30"><call pos:start="27:9" pos:end="27:30"><name pos:start="27:9" pos:end="27:27">lan9118_mac_changed</name><argument_list pos:start="27:28" pos:end="27:30">(<argument pos:start="27:29" pos:end="27:29"><expr pos:start="27:29" pos:end="27:29"><name pos:start="27:29" pos:end="27:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:19">case <expr pos:start="31:10" pos:end="31:18"><name pos:start="31:10" pos:end="31:18">MAC_ADDRL</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:28"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">conf</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:23">macaddr</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:25">a</name><index pos:start="33:26" pos:end="33:28">[<expr pos:start="33:27" pos:end="33:27"><literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr>]</index></name> <operator pos:start="33:30" pos:end="33:30">=</operator> <name pos:start="33:32" pos:end="33:34">val</name> <operator pos:start="33:36" pos:end="33:36">&amp;</operator> <literal type="number" pos:start="33:38" pos:end="33:41">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:49"><expr pos:start="35:9" pos:end="35:48"><name pos:start="35:9" pos:end="35:28"><name pos:start="35:9" pos:end="35:9">s</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:15">conf</name><operator pos:start="35:16" pos:end="35:16">.</operator><name pos:start="35:17" pos:end="35:23">macaddr</name><operator pos:start="35:24" pos:end="35:24">.</operator><name pos:start="35:25" pos:end="35:25">a</name><index pos:start="35:26" pos:end="35:28">[<expr pos:start="35:27" pos:end="35:27"><literal type="number" pos:start="35:27" pos:end="35:27">1</literal></expr>]</index></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <operator pos:start="35:32" pos:end="35:32">(</operator><name pos:start="35:33" pos:end="35:35">val</name> <operator pos:start="35:37" pos:end="35:38">&gt;&gt;</operator> <literal type="number" pos:start="35:40" pos:end="35:40">8</literal><operator pos:start="35:41" pos:end="35:41">)</operator> <operator pos:start="35:43" pos:end="35:43">&amp;</operator> <literal type="number" pos:start="35:45" pos:end="35:48">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:50"><expr pos:start="37:9" pos:end="37:49"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:15">conf</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:23">macaddr</name><operator pos:start="37:24" pos:end="37:24">.</operator><name pos:start="37:25" pos:end="37:25">a</name><index pos:start="37:26" pos:end="37:28">[<expr pos:start="37:27" pos:end="37:27"><literal type="number" pos:start="37:27" pos:end="37:27">2</literal></expr>]</index></name> <operator pos:start="37:30" pos:end="37:30">=</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><name pos:start="37:33" pos:end="37:35">val</name> <operator pos:start="37:37" pos:end="37:38">&gt;&gt;</operator> <literal type="number" pos:start="37:40" pos:end="37:41">16</literal><operator pos:start="37:42" pos:end="37:42">)</operator> <operator pos:start="37:44" pos:end="37:44">&amp;</operator> <literal type="number" pos:start="37:46" pos:end="37:49">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:28"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:15">conf</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:23">macaddr</name><operator pos:start="39:24" pos:end="39:24">.</operator><name pos:start="39:25" pos:end="39:25">a</name><index pos:start="39:26" pos:end="39:28">[<expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">3</literal></expr>]</index></name> <operator pos:start="39:30" pos:end="39:30">=</operator> <operator pos:start="39:32" pos:end="39:32">(</operator><name pos:start="39:33" pos:end="39:35">val</name> <operator pos:start="39:37" pos:end="39:38">&gt;&gt;</operator> <literal type="number" pos:start="39:40" pos:end="39:41">24</literal><operator pos:start="39:42" pos:end="39:42">)</operator> <operator pos:start="39:44" pos:end="39:44">&amp;</operator> <literal type="number" pos:start="39:46" pos:end="39:49">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><call pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:27">lan9118_mac_changed</name><argument_list pos:start="41:28" pos:end="41:30">(<argument pos:start="41:29" pos:end="41:29"><expr pos:start="41:29" pos:end="41:29"><name pos:start="41:29" pos:end="41:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:19">case <expr pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:18">MAC_HASHH</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:27"><expr pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:20">mac_hashh</name></name> <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:26">val</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:19">case <expr pos:start="51:10" pos:end="51:18"><name pos:start="51:10" pos:end="51:18">MAC_HASHL</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:20">mac_hashl</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:26">val</name></expr>;</expr_stmt>

        <break pos:start="55:9" pos:end="55:14">break;</break>

    <case pos:start="57:5" pos:end="57:21">case <expr pos:start="57:10" pos:end="57:20"><name pos:start="57:10" pos:end="57:20">MAC_MII_ACC</name></expr>:</case>

        <expr_stmt pos:start="59:9" pos:end="59:38"><expr pos:start="59:9" pos:end="59:37"><name pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:22">mac_mii_acc</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:28">val</name> <operator pos:start="59:30" pos:end="59:30">&amp;</operator> <literal type="number" pos:start="59:32" pos:end="59:37">0xffc2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="77:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">val</name> <operator pos:start="61:17" pos:end="61:17">&amp;</operator> <literal type="number" pos:start="61:19" pos:end="61:19">2</literal></expr>)</condition> <block pos:start="61:22" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:64">

            <expr_stmt pos:start="63:13" pos:end="65:56"><expr pos:start="63:13" pos:end="65:55"><call pos:start="63:13" pos:end="65:55"><name pos:start="63:13" pos:end="63:19">DPRINTF</name><argument_list pos:start="63:20" pos:end="65:55">(<argument pos:start="63:21" pos:end="63:45"><expr pos:start="63:21" pos:end="63:45"><literal type="string" pos:start="63:21" pos:end="63:45">"PHY write %d = 0x%04x\n"</literal></expr></argument>,

                    <argument pos:start="65:21" pos:end="65:37"><expr pos:start="65:21" pos:end="65:37"><operator pos:start="65:21" pos:end="65:21">(</operator><name pos:start="65:22" pos:end="65:24">val</name> <operator pos:start="65:26" pos:end="65:27">&gt;&gt;</operator> <literal type="number" pos:start="65:29" pos:end="65:29">6</literal><operator pos:start="65:30" pos:end="65:30">)</operator> <operator pos:start="65:32" pos:end="65:32">&amp;</operator> <literal type="number" pos:start="65:34" pos:end="65:37">0x1f</literal></expr></argument>, <argument pos:start="65:40" pos:end="65:54"><expr pos:start="65:40" pos:end="65:54"><name pos:start="65:40" pos:end="65:54"><name pos:start="65:40" pos:end="65:40">s</name><operator pos:start="65:41" pos:end="65:42">-&gt;</operator><name pos:start="65:43" pos:end="65:54">mac_mii_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:64"><expr pos:start="67:13" pos:end="67:63"><call pos:start="67:13" pos:end="67:63"><name pos:start="67:13" pos:end="67:24">do_phy_write</name><argument_list pos:start="67:25" pos:end="67:63">(<argument pos:start="67:26" pos:end="67:26"><expr pos:start="67:26" pos:end="67:26"><name pos:start="67:26" pos:end="67:26">s</name></expr></argument>, <argument pos:start="67:29" pos:end="67:45"><expr pos:start="67:29" pos:end="67:45"><operator pos:start="67:29" pos:end="67:29">(</operator><name pos:start="67:30" pos:end="67:32">val</name> <operator pos:start="67:34" pos:end="67:35">&gt;&gt;</operator> <literal type="number" pos:start="67:37" pos:end="67:37">6</literal><operator pos:start="67:38" pos:end="67:38">)</operator> <operator pos:start="67:40" pos:end="67:40">&amp;</operator> <literal type="number" pos:start="67:42" pos:end="67:45">0x1f</literal></expr></argument>, <argument pos:start="67:48" pos:end="67:62"><expr pos:start="67:48" pos:end="67:62"><name pos:start="67:48" pos:end="67:62"><name pos:start="67:48" pos:end="67:48">s</name><operator pos:start="67:49" pos:end="67:50">-&gt;</operator><name pos:start="67:51" pos:end="67:62">mac_mii_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="77:9">else <block pos:start="69:16" pos:end="77:9">{<block_content pos:start="71:13" pos:end="75:56">

            <expr_stmt pos:start="71:13" pos:end="71:64"><expr pos:start="71:13" pos:end="71:63"><name pos:start="71:13" pos:end="71:27"><name pos:start="71:13" pos:end="71:13">s</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:27">mac_mii_data</name></name> <operator pos:start="71:29" pos:end="71:29">=</operator> <call pos:start="71:31" pos:end="71:63"><name pos:start="71:31" pos:end="71:41">do_phy_read</name><argument_list pos:start="71:42" pos:end="71:63">(<argument pos:start="71:43" pos:end="71:43"><expr pos:start="71:43" pos:end="71:43"><name pos:start="71:43" pos:end="71:43">s</name></expr></argument>, <argument pos:start="71:46" pos:end="71:62"><expr pos:start="71:46" pos:end="71:62"><operator pos:start="71:46" pos:end="71:46">(</operator><name pos:start="71:47" pos:end="71:49">val</name> <operator pos:start="71:51" pos:end="71:52">&gt;&gt;</operator> <literal type="number" pos:start="71:54" pos:end="71:54">6</literal><operator pos:start="71:55" pos:end="71:55">)</operator> <operator pos:start="71:57" pos:end="71:57">&amp;</operator> <literal type="number" pos:start="71:59" pos:end="71:62">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="75:56"><expr pos:start="73:13" pos:end="75:55"><call pos:start="73:13" pos:end="75:55"><name pos:start="73:13" pos:end="73:19">DPRINTF</name><argument_list pos:start="73:20" pos:end="75:55">(<argument pos:start="73:21" pos:end="73:44"><expr pos:start="73:21" pos:end="73:44"><literal type="string" pos:start="73:21" pos:end="73:44">"PHY read %d = 0x%04x\n"</literal></expr></argument>,

                    <argument pos:start="75:21" pos:end="75:37"><expr pos:start="75:21" pos:end="75:37"><operator pos:start="75:21" pos:end="75:21">(</operator><name pos:start="75:22" pos:end="75:24">val</name> <operator pos:start="75:26" pos:end="75:27">&gt;&gt;</operator> <literal type="number" pos:start="75:29" pos:end="75:29">6</literal><operator pos:start="75:30" pos:end="75:30">)</operator> <operator pos:start="75:32" pos:end="75:32">&amp;</operator> <literal type="number" pos:start="75:34" pos:end="75:37">0x1f</literal></expr></argument>, <argument pos:start="75:40" pos:end="75:54"><expr pos:start="75:40" pos:end="75:54"><name pos:start="75:40" pos:end="75:54"><name pos:start="75:40" pos:end="75:40">s</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:54">mac_mii_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>

    <case pos:start="81:5" pos:end="81:22">case <expr pos:start="81:10" pos:end="81:21"><name pos:start="81:10" pos:end="81:21">MAC_MII_DATA</name></expr>:</case>

        <expr_stmt pos:start="83:9" pos:end="83:39"><expr pos:start="83:9" pos:end="83:38"><name pos:start="83:9" pos:end="83:23"><name pos:start="83:9" pos:end="83:9">s</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:23">mac_mii_data</name></name> <operator pos:start="83:25" pos:end="83:25">=</operator> <name pos:start="83:27" pos:end="83:29">val</name> <operator pos:start="83:31" pos:end="83:31">&amp;</operator> <literal type="number" pos:start="83:33" pos:end="83:38">0xffff</literal></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    <case pos:start="87:5" pos:end="87:18">case <expr pos:start="87:10" pos:end="87:17"><name pos:start="87:10" pos:end="87:17">MAC_FLOW</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:39"><expr pos:start="89:9" pos:end="89:38"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:19">mac_flow</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:25">val</name> <operator pos:start="89:27" pos:end="89:27">&amp;</operator> <literal type="number" pos:start="89:29" pos:end="89:38">0xffff0000</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:19">case <expr pos:start="93:10" pos:end="93:18"><name pos:start="93:10" pos:end="93:18">MAC_VLAN1</name></expr>:</case>

        <comment type="block" pos:start="95:9" pos:end="101:11">/* Writing to this register changes a condition for

         * FrameTooLong bit in rx_status.  Since we do not set

         * FrameTooLong anyway, just ignore write to this.

         */</comment>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <default pos:start="105:5" pos:end="105:12">default:</default>

        <expr_stmt pos:start="107:9" pos:end="109:40"><expr pos:start="107:9" pos:end="109:39"><call pos:start="107:9" pos:end="109:39"><name pos:start="107:9" pos:end="107:16">hw_error</name><argument_list pos:start="107:17" pos:end="109:39">(<argument pos:start="107:18" pos:end="107:73"><expr pos:start="107:18" pos:end="107:73"><literal type="string" pos:start="107:18" pos:end="107:73">"lan9118: Unimplemented MAC register write: %d = 0x%x\n"</literal></expr></argument>,

                 <argument pos:start="109:18" pos:end="109:33"><expr pos:start="109:18" pos:end="109:33"><name pos:start="109:18" pos:end="109:27"><name pos:start="109:18" pos:end="109:18">s</name><operator pos:start="109:19" pos:end="109:20">-&gt;</operator><name pos:start="109:21" pos:end="109:27">mac_cmd</name></name> <operator pos:start="109:29" pos:end="109:29">&amp;</operator> <literal type="number" pos:start="109:31" pos:end="109:33">0xf</literal></expr></argument>, <argument pos:start="109:36" pos:end="109:38"><expr pos:start="109:36" pos:end="109:38"><name pos:start="109:36" pos:end="109:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
