<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16310.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">do_attach</name><parameter_list pos:start="1:21" pos:end="1:36">(<parameter pos:start="1:22" pos:end="1:35"><decl pos:start="1:22" pos:end="1:35"><type pos:start="1:22" pos:end="1:32"><name pos:start="1:22" pos:end="1:30">USBDevice</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:13">

    <decl_stmt pos:start="5:5" pos:end="5:43"><decl pos:start="5:5" pos:end="5:42"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:10">USBBus</name> <modifier pos:start="5:12" pos:end="5:12">*</modifier></type><name pos:start="5:13" pos:end="5:15">bus</name> <init pos:start="5:17" pos:end="5:42">= <expr pos:start="5:19" pos:end="5:42"><call pos:start="5:19" pos:end="5:42"><name pos:start="5:19" pos:end="5:37">usb_bus_from_device</name><argument_list pos:start="5:38" pos:end="5:42">(<argument pos:start="5:39" pos:end="5:41"><expr pos:start="5:39" pos:end="5:41"><name pos:start="5:39" pos:end="5:41">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">USBPort</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">port</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:22">(<expr pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:21"><name pos:start="11:9" pos:end="11:11">dev</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:21">attached</name></name></expr>)</condition> <block pos:start="11:24" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:18">

        <expr_stmt pos:start="13:9" pos:end="15:35"><expr pos:start="13:9" pos:end="15:34"><call pos:start="13:9" pos:end="15:34"><name pos:start="13:9" pos:end="13:20">error_report</name><argument_list pos:start="13:21" pos:end="15:34">(<argument pos:start="13:22" pos:end="13:67"><expr pos:start="13:22" pos:end="13:67"><literal type="string" pos:start="13:22" pos:end="13:67">"Error: tried to attach usb device %s twice\n"</literal></expr></argument>,

                <argument pos:start="15:17" pos:end="15:33"><expr pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:33"><name pos:start="15:17" pos:end="15:19">dev</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:33">product_desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="21:5" pos:end="29:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:24">(<expr pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">bus</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">nfree</name></name> <operator pos:start="21:20" pos:end="21:21">==</operator> <literal type="number" pos:start="21:23" pos:end="21:23">0</literal></expr>)</condition> <block pos:start="21:26" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:18">

        <expr_stmt pos:start="23:9" pos:end="25:35"><expr pos:start="23:9" pos:end="25:34"><call pos:start="23:9" pos:end="25:34"><name pos:start="23:9" pos:end="23:20">error_report</name><argument_list pos:start="23:21" pos:end="25:34">(<argument pos:start="23:22" pos:end="23:89"><expr pos:start="23:22" pos:end="23:89"><literal type="string" pos:start="23:22" pos:end="23:89">"Error: tried to attach usb device %s to a bus with no free ports\n"</literal></expr></argument>,

                <argument pos:start="25:17" pos:end="25:33"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:19">dev</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:33">product_desc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:18">return <expr pos:start="27:16" pos:end="27:17"><operator pos:start="27:16" pos:end="27:16">-</operator><literal type="number" pos:start="27:17" pos:end="27:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="57:5"><if pos:start="31:5" pos:end="53:5">if <condition pos:start="31:8" pos:end="31:23">(<expr pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:11">dev</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:22">port_path</name></name></expr>)</condition> <block pos:start="31:25" pos:end="53:5">{<block_content pos:start="33:9" pos:end="51:9">

        <macro pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:22">QTAILQ_FOREACH</name><argument_list pos:start="33:23" pos:end="33:46">(<argument pos:start="33:24" pos:end="33:27">port</argument>, <argument pos:start="33:30" pos:end="33:39">&amp;bus-&gt;free</argument>, <argument pos:start="33:42" pos:end="33:45">next</argument>)</argument_list></macro> <block pos:start="33:48" pos:end="41:9">{<block_content pos:start="35:13" pos:end="39:13">

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:56">(<expr pos:start="35:17" pos:end="35:55"><call pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:22">strcmp</name><argument_list pos:start="35:23" pos:end="35:50">(<argument pos:start="35:24" pos:end="35:33"><expr pos:start="35:24" pos:end="35:33"><name pos:start="35:24" pos:end="35:33"><name pos:start="35:24" pos:end="35:27">port</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:33">path</name></name></expr></argument>, <argument pos:start="35:36" pos:end="35:49"><expr pos:start="35:36" pos:end="35:49"><name pos:start="35:36" pos:end="35:49"><name pos:start="35:36" pos:end="35:38">dev</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:49">port_path</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:52" pos:end="35:53">==</operator> <literal type="number" pos:start="35:55" pos:end="35:55">0</literal></expr>)</condition> <block pos:start="35:58" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:22">

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <if_stmt pos:start="43:9" pos:end="51:9"><if pos:start="43:9" pos:end="51:9">if <condition pos:start="43:12" pos:end="43:25">(<expr pos:start="43:13" pos:end="43:24"><name pos:start="43:13" pos:end="43:16">port</name> <operator pos:start="43:18" pos:end="43:19">==</operator> <name pos:start="43:21" pos:end="43:24">NULL</name></expr>)</condition> <block pos:start="43:27" pos:end="51:9">{<block_content pos:start="45:13" pos:end="49:22">

            <expr_stmt pos:start="45:13" pos:end="47:52"><expr pos:start="45:13" pos:end="47:51"><call pos:start="45:13" pos:end="47:51"><name pos:start="45:13" pos:end="45:24">error_report</name><argument_list pos:start="45:25" pos:end="47:51">(<argument pos:start="45:26" pos:end="45:66"><expr pos:start="45:26" pos:end="45:66"><literal type="string" pos:start="45:26" pos:end="45:66">"Error: usb port %s (bus %s) not found\n"</literal></expr></argument>,

                    <argument pos:start="47:21" pos:end="47:34"><expr pos:start="47:21" pos:end="47:34"><name pos:start="47:21" pos:end="47:34"><name pos:start="47:21" pos:end="47:23">dev</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:34">port_path</name></name></expr></argument>, <argument pos:start="47:37" pos:end="47:50"><expr pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:50"><name pos:start="47:37" pos:end="47:39">bus</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:45">qbus</name><operator pos:start="47:46" pos:end="47:46">.</operator><name pos:start="47:47" pos:end="47:50">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="53:7" pos:end="57:5">else <block pos:start="53:12" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:40">

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:12">port</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:39"><name pos:start="55:16" pos:end="55:27">QTAILQ_FIRST</name><argument_list pos:start="55:28" pos:end="55:39">(<argument pos:start="55:29" pos:end="55:38"><expr pos:start="55:29" pos:end="55:38"><operator pos:start="55:29" pos:end="55:29">&amp;</operator><name pos:start="55:30" pos:end="55:38"><name pos:start="55:30" pos:end="55:32">bus</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:38">free</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="59:5" pos:end="67:5"><if pos:start="59:5" pos:end="67:5">if <condition pos:start="59:8" pos:end="59:44">(<expr pos:start="59:9" pos:end="59:43"><operator pos:start="59:9" pos:end="59:9">!</operator><operator pos:start="59:10" pos:end="59:10">(</operator><name pos:start="59:11" pos:end="59:25"><name pos:start="59:11" pos:end="59:14">port</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:25">speedmask</name></name> <operator pos:start="59:27" pos:end="59:27">&amp;</operator> <name pos:start="59:29" pos:end="59:42"><name pos:start="59:29" pos:end="59:31">dev</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:42">speedmask</name></name><operator pos:start="59:43" pos:end="59:43">)</operator></expr>)</condition> <block pos:start="59:46" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:18">

        <expr_stmt pos:start="61:9" pos:end="63:51"><expr pos:start="61:9" pos:end="63:50"><call pos:start="61:9" pos:end="63:50"><name pos:start="61:9" pos:end="61:20">error_report</name><argument_list pos:start="61:21" pos:end="63:50">(<argument pos:start="61:22" pos:end="61:89"><expr pos:start="61:22" pos:end="61:89"><literal type="string" pos:start="61:22" pos:end="61:89">"Warning: speed mismatch trying to attach usb device %s to bus %s\n"</literal></expr></argument>,

                <argument pos:start="63:17" pos:end="63:33"><expr pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:19">dev</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:33">product_desc</name></name></expr></argument>, <argument pos:start="63:36" pos:end="63:49"><expr pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:49"><name pos:start="63:36" pos:end="63:38">bus</name><operator pos:start="63:39" pos:end="63:40">-&gt;</operator><name pos:start="63:41" pos:end="63:44">qbus</name><operator pos:start="63:45" pos:end="63:45">.</operator><name pos:start="63:46" pos:end="63:49">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:20"><expr pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:17"><name pos:start="71:5" pos:end="71:7">dev</name><operator pos:start="71:8" pos:end="71:9">-&gt;</operator><name pos:start="71:10" pos:end="71:17">attached</name></name><operator pos:start="71:18" pos:end="71:19">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:42"><expr pos:start="73:5" pos:end="73:41"><call pos:start="73:5" pos:end="73:41"><name pos:start="73:5" pos:end="73:17">QTAILQ_REMOVE</name><argument_list pos:start="73:18" pos:end="73:41">(<argument pos:start="73:19" pos:end="73:28"><expr pos:start="73:19" pos:end="73:28"><operator pos:start="73:19" pos:end="73:19">&amp;</operator><name pos:start="73:20" pos:end="73:28"><name pos:start="73:20" pos:end="73:22">bus</name><operator pos:start="73:23" pos:end="73:24">-&gt;</operator><name pos:start="73:25" pos:end="73:28">free</name></name></expr></argument>, <argument pos:start="73:31" pos:end="73:34"><expr pos:start="73:31" pos:end="73:34"><name pos:start="73:31" pos:end="73:34">port</name></expr></argument>, <argument pos:start="73:37" pos:end="73:40"><expr pos:start="73:37" pos:end="73:40"><name pos:start="73:37" pos:end="73:40">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:17"><expr pos:start="75:5" pos:end="75:16"><name pos:start="75:5" pos:end="75:14"><name pos:start="75:5" pos:end="75:7">bus</name><operator pos:start="75:8" pos:end="75:9">-&gt;</operator><name pos:start="75:10" pos:end="75:14">nfree</name></name><operator pos:start="75:15" pos:end="75:16">--</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="79:5" pos:end="79:26"><expr pos:start="79:5" pos:end="79:25"><call pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:14">usb_attach</name><argument_list pos:start="79:15" pos:end="79:25">(<argument pos:start="79:16" pos:end="79:19"><expr pos:start="79:16" pos:end="79:19"><name pos:start="79:16" pos:end="79:19">port</name></expr></argument>, <argument pos:start="79:22" pos:end="79:24"><expr pos:start="79:22" pos:end="79:24"><name pos:start="79:22" pos:end="79:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><call pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:22">QTAILQ_INSERT_TAIL</name><argument_list pos:start="83:23" pos:end="83:46">(<argument pos:start="83:24" pos:end="83:33"><expr pos:start="83:24" pos:end="83:33"><operator pos:start="83:24" pos:end="83:24">&amp;</operator><name pos:start="83:25" pos:end="83:33"><name pos:start="83:25" pos:end="83:27">bus</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:33">used</name></name></expr></argument>, <argument pos:start="83:36" pos:end="83:39"><expr pos:start="83:36" pos:end="83:39"><name pos:start="83:36" pos:end="83:39">port</name></expr></argument>, <argument pos:start="83:42" pos:end="83:45"><expr pos:start="83:42" pos:end="83:45"><name pos:start="83:42" pos:end="83:45">next</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:17"><expr pos:start="85:5" pos:end="85:16"><name pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:7">bus</name><operator pos:start="85:8" pos:end="85:9">-&gt;</operator><name pos:start="85:10" pos:end="85:14">nused</name></name><operator pos:start="85:15" pos:end="85:16">++</operator></expr>;</expr_stmt>



    <return pos:start="89:5" pos:end="89:13">return <expr pos:start="89:12" pos:end="89:12"><literal type="number" pos:start="89:12" pos:end="89:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
