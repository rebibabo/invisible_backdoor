<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11591.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">write_header</name><parameter_list pos:start="1:25" pos:end="1:40">(<parameter pos:start="1:26" pos:end="1:39"><decl pos:start="1:26" pos:end="1:39"><type pos:start="1:26" pos:end="1:38"><name pos:start="1:26" pos:end="1:36">FFV1Context</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:31"><name pos:start="5:13" pos:end="5:17">state</name><index pos:start="5:18" pos:end="5:31">[<expr pos:start="5:19" pos:end="5:30"><name pos:start="5:19" pos:end="5:30">CONTEXT_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:14">RangeCoder</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier><specifier pos:start="9:17" pos:end="9:21">const</specifier></type> <name pos:start="9:23" pos:end="9:23">c</name> <init pos:start="9:25" pos:end="9:49">= <expr pos:start="9:27" pos:end="9:49"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:46"><name pos:start="9:28" pos:end="9:28">f</name><operator pos:start="9:29" pos:end="9:30">-&gt;</operator><name pos:start="9:31" pos:end="9:43">slice_context</name><index pos:start="9:44" pos:end="9:46">[<expr pos:start="9:45" pos:end="9:45"><literal type="number" pos:start="9:45" pos:end="9:45">0</literal></expr>]</index></name><operator pos:start="9:47" pos:end="9:48">-&gt;</operator><name pos:start="9:49" pos:end="9:49">c</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><call pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:10">memset</name><argument_list pos:start="13:11" pos:end="13:37">(<argument pos:start="13:12" pos:end="13:16"><expr pos:start="13:12" pos:end="13:16"><name pos:start="13:12" pos:end="13:16">state</name></expr></argument>, <argument pos:start="13:19" pos:end="13:21"><expr pos:start="13:19" pos:end="13:21"><literal type="number" pos:start="13:19" pos:end="13:21">128</literal></expr></argument>, <argument pos:start="13:24" pos:end="13:36"><expr pos:start="13:24" pos:end="13:36"><sizeof pos:start="13:24" pos:end="13:36">sizeof<argument_list pos:start="13:30" pos:end="13:36">(<argument pos:start="13:31" pos:end="13:35"><expr pos:start="13:31" pos:end="13:35"><name pos:start="13:31" pos:end="13:35">state</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="89:5"><if pos:start="17:5" pos:end="51:5">if <condition pos:start="17:8" pos:end="17:23">(<expr pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">f</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">version</name></name> <operator pos:start="17:20" pos:end="17:20">&lt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">2</literal></expr>)</condition> <block pos:start="17:25" pos:end="51:5">{<block_content pos:start="19:9" pos:end="49:46">

        <expr_stmt pos:start="19:9" pos:end="19:44"><expr pos:start="19:9" pos:end="19:43"><call pos:start="19:9" pos:end="19:43"><name pos:start="19:9" pos:end="19:18">put_symbol</name><argument_list pos:start="19:19" pos:end="19:43">(<argument pos:start="19:20" pos:end="19:20"><expr pos:start="19:20" pos:end="19:20"><name pos:start="19:20" pos:end="19:20">c</name></expr></argument>, <argument pos:start="19:23" pos:end="19:27"><expr pos:start="19:23" pos:end="19:27"><name pos:start="19:23" pos:end="19:27">state</name></expr></argument>, <argument pos:start="19:30" pos:end="19:39"><expr pos:start="19:30" pos:end="19:39"><name pos:start="19:30" pos:end="19:39"><name pos:start="19:30" pos:end="19:30">f</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:39">version</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:42"><expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:39"><expr pos:start="21:9" pos:end="21:38"><call pos:start="21:9" pos:end="21:38"><name pos:start="21:9" pos:end="21:18">put_symbol</name><argument_list pos:start="21:19" pos:end="21:38">(<argument pos:start="21:20" pos:end="21:20"><expr pos:start="21:20" pos:end="21:20"><name pos:start="21:20" pos:end="21:20">c</name></expr></argument>, <argument pos:start="21:23" pos:end="21:27"><expr pos:start="21:23" pos:end="21:27"><name pos:start="21:23" pos:end="21:27">state</name></expr></argument>, <argument pos:start="21:30" pos:end="21:34"><expr pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:34"><name pos:start="21:30" pos:end="21:30">f</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:34">ac</name></name></expr></argument>, <argument pos:start="21:37" pos:end="21:37"><expr pos:start="21:37" pos:end="21:37"><literal type="number" pos:start="21:37" pos:end="21:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:22">(<expr pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:17"><name pos:start="23:13" pos:end="23:13">f</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:17">ac</name></name> <operator pos:start="23:19" pos:end="23:19">&gt;</operator> <literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>)</condition> <block pos:start="23:24" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:72">

            <for pos:start="25:13" pos:end="29:72">for <control pos:start="25:17" pos:end="25:37">(<init pos:start="25:18" pos:end="25:23"><expr pos:start="25:18" pos:end="25:22"><name pos:start="25:18" pos:end="25:18">i</name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr>;</init> <condition pos:start="25:25" pos:end="25:32"><expr pos:start="25:25" pos:end="25:31"><name pos:start="25:25" pos:end="25:25">i</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <literal type="number" pos:start="25:29" pos:end="25:31">256</literal></expr>;</condition> <incr pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:34">i</name><operator pos:start="25:35" pos:end="25:36">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:17" pos:end="29:72"><block_content pos:start="27:17" pos:end="29:72">

                <expr_stmt pos:start="27:17" pos:end="29:72"><expr pos:start="27:17" pos:end="29:71"><call pos:start="27:17" pos:end="29:71"><name pos:start="27:17" pos:end="27:26">put_symbol</name><argument_list pos:start="27:27" pos:end="29:71">(<argument pos:start="27:28" pos:end="27:28"><expr pos:start="27:28" pos:end="27:28"><name pos:start="27:28" pos:end="27:28">c</name></expr></argument>, <argument pos:start="27:31" pos:end="27:35"><expr pos:start="27:31" pos:end="27:35"><name pos:start="27:31" pos:end="27:35">state</name></expr></argument>,

                           <argument pos:start="29:28" pos:end="29:67"><expr pos:start="29:28" pos:end="29:67"><name pos:start="29:28" pos:end="29:49"><name pos:start="29:28" pos:end="29:28">f</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:46">state_transition</name><index pos:start="29:47" pos:end="29:49">[<expr pos:start="29:48" pos:end="29:48"><name pos:start="29:48" pos:end="29:48">i</name></expr>]</index></name> <operator pos:start="29:51" pos:end="29:51">-</operator> <name pos:start="29:53" pos:end="29:67"><name pos:start="29:53" pos:end="29:53">c</name><operator pos:start="29:54" pos:end="29:55">-&gt;</operator><name pos:start="29:56" pos:end="29:64">one_state</name><index pos:start="29:65" pos:end="29:67">[<expr pos:start="29:66" pos:end="29:66"><name pos:start="29:66" pos:end="29:66">i</name></expr>]</index></name></expr></argument>, <argument pos:start="29:70" pos:end="29:70"><expr pos:start="29:70" pos:end="29:70"><literal type="number" pos:start="29:70" pos:end="29:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:47"><expr pos:start="33:9" pos:end="33:46"><call pos:start="33:9" pos:end="33:46"><name pos:start="33:9" pos:end="33:18">put_symbol</name><argument_list pos:start="33:19" pos:end="33:46">(<argument pos:start="33:20" pos:end="33:20"><expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">c</name></expr></argument>, <argument pos:start="33:23" pos:end="33:27"><expr pos:start="33:23" pos:end="33:27"><name pos:start="33:23" pos:end="33:27">state</name></expr></argument>, <argument pos:start="33:30" pos:end="33:42"><expr pos:start="33:30" pos:end="33:42"><name pos:start="33:30" pos:end="33:42"><name pos:start="33:30" pos:end="33:30">f</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:42">colorspace</name></name></expr></argument>, <argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><literal type="number" pos:start="33:45" pos:end="33:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="33:49" pos:end="33:62">// YUV cs type</comment>

        <if_stmt pos:start="35:9" pos:end="37:60"><if pos:start="35:9" pos:end="37:60">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:13">f</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:22">version</name></name> <operator pos:start="35:24" pos:end="35:24">&gt;</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:60"><block_content pos:start="37:13" pos:end="37:60">

            <expr_stmt pos:start="37:13" pos:end="37:60"><expr pos:start="37:13" pos:end="37:59"><call pos:start="37:13" pos:end="37:59"><name pos:start="37:13" pos:end="37:22">put_symbol</name><argument_list pos:start="37:23" pos:end="37:59">(<argument pos:start="37:24" pos:end="37:24"><expr pos:start="37:24" pos:end="37:24"><name pos:start="37:24" pos:end="37:24">c</name></expr></argument>, <argument pos:start="37:27" pos:end="37:31"><expr pos:start="37:27" pos:end="37:31"><name pos:start="37:27" pos:end="37:31">state</name></expr></argument>, <argument pos:start="37:34" pos:end="37:55"><expr pos:start="37:34" pos:end="37:55"><name pos:start="37:34" pos:end="37:55"><name pos:start="37:34" pos:end="37:34">f</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:55">bits_per_raw_sample</name></name></expr></argument>, <argument pos:start="37:58" pos:end="37:58"><expr pos:start="37:58" pos:end="37:58"><literal type="number" pos:start="37:58" pos:end="37:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:44"><expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:15">put_rac</name><argument_list pos:start="39:16" pos:end="39:43">(<argument pos:start="39:17" pos:end="39:17"><expr pos:start="39:17" pos:end="39:17"><name pos:start="39:17" pos:end="39:17">c</name></expr></argument>, <argument pos:start="39:20" pos:end="39:24"><expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:24">state</name></expr></argument>, <argument pos:start="39:27" pos:end="39:42"><expr pos:start="39:27" pos:end="39:42"><name pos:start="39:27" pos:end="39:42"><name pos:start="39:27" pos:end="39:27">f</name><operator pos:start="39:28" pos:end="39:29">-&gt;</operator><name pos:start="39:30" pos:end="39:42">chroma_planes</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><call pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:18">put_symbol</name><argument_list pos:start="41:19" pos:end="41:50">(<argument pos:start="41:20" pos:end="41:20"><expr pos:start="41:20" pos:end="41:20"><name pos:start="41:20" pos:end="41:20">c</name></expr></argument>, <argument pos:start="41:23" pos:end="41:27"><expr pos:start="41:23" pos:end="41:27"><name pos:start="41:23" pos:end="41:27">state</name></expr></argument>, <argument pos:start="41:30" pos:end="41:46"><expr pos:start="41:30" pos:end="41:46"><name pos:start="41:30" pos:end="41:46"><name pos:start="41:30" pos:end="41:30">f</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:46">chroma_h_shift</name></name></expr></argument>, <argument pos:start="41:49" pos:end="41:49"><expr pos:start="41:49" pos:end="41:49"><literal type="number" pos:start="41:49" pos:end="41:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><call pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:18">put_symbol</name><argument_list pos:start="43:19" pos:end="43:50">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">c</name></expr></argument>, <argument pos:start="43:23" pos:end="43:27"><expr pos:start="43:23" pos:end="43:27"><name pos:start="43:23" pos:end="43:27">state</name></expr></argument>, <argument pos:start="43:30" pos:end="43:46"><expr pos:start="43:30" pos:end="43:46"><name pos:start="43:30" pos:end="43:46"><name pos:start="43:30" pos:end="43:30">f</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:46">chroma_v_shift</name></name></expr></argument>, <argument pos:start="43:49" pos:end="43:49"><expr pos:start="43:49" pos:end="43:49"><literal type="number" pos:start="43:49" pos:end="43:49">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:43"><expr pos:start="45:9" pos:end="45:42"><call pos:start="45:9" pos:end="45:42"><name pos:start="45:9" pos:end="45:15">put_rac</name><argument_list pos:start="45:16" pos:end="45:42">(<argument pos:start="45:17" pos:end="45:17"><expr pos:start="45:17" pos:end="45:17"><name pos:start="45:17" pos:end="45:17">c</name></expr></argument>, <argument pos:start="45:20" pos:end="45:24"><expr pos:start="45:20" pos:end="45:24"><name pos:start="45:20" pos:end="45:24">state</name></expr></argument>, <argument pos:start="45:27" pos:end="45:41"><expr pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:41"><name pos:start="45:27" pos:end="45:27">f</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:41">transparency</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><call pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:26">write_quant_tables</name><argument_list pos:start="49:27" pos:end="49:45">(<argument pos:start="49:28" pos:end="49:28"><expr pos:start="49:28" pos:end="49:28"><name pos:start="49:28" pos:end="49:28">c</name></expr></argument>, <argument pos:start="49:31" pos:end="49:44"><expr pos:start="49:31" pos:end="49:44"><name pos:start="49:31" pos:end="49:44"><name pos:start="49:31" pos:end="49:31">f</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:44">quant_table</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="89:5">else if <condition pos:start="51:15" pos:end="51:30">(<expr pos:start="51:16" pos:end="51:29"><name pos:start="51:16" pos:end="51:25"><name pos:start="51:16" pos:end="51:16">f</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:25">version</name></name> <operator pos:start="51:27" pos:end="51:27">&lt;</operator> <literal type="number" pos:start="51:29" pos:end="51:29">3</literal></expr>)</condition> <block pos:start="51:32" pos:end="89:5">{<block_content pos:start="53:9" pos:end="87:9">

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><call pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:18">put_symbol</name><argument_list pos:start="53:19" pos:end="53:47">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">c</name></expr></argument>, <argument pos:start="53:23" pos:end="53:27"><expr pos:start="53:23" pos:end="53:27"><name pos:start="53:23" pos:end="53:27">state</name></expr></argument>, <argument pos:start="53:30" pos:end="53:43"><expr pos:start="53:30" pos:end="53:43"><name pos:start="53:30" pos:end="53:43"><name pos:start="53:30" pos:end="53:30">f</name><operator pos:start="53:31" pos:end="53:32">-&gt;</operator><name pos:start="53:33" pos:end="53:43">slice_count</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:46"><expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="55:9" pos:end="87:9">for <control pos:start="55:13" pos:end="55:44">(<init pos:start="55:14" pos:end="55:19"><expr pos:start="55:14" pos:end="55:18"><name pos:start="55:14" pos:end="55:14">i</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>;</init> <condition pos:start="55:21" pos:end="55:39"><expr pos:start="55:21" pos:end="55:38"><name pos:start="55:21" pos:end="55:21">i</name> <operator pos:start="55:23" pos:end="55:23">&lt;</operator> <name pos:start="55:25" pos:end="55:38"><name pos:start="55:25" pos:end="55:25">f</name><operator pos:start="55:26" pos:end="55:27">-&gt;</operator><name pos:start="55:28" pos:end="55:38">slice_count</name></name></expr>;</condition> <incr pos:start="55:41" pos:end="55:43"><expr pos:start="55:41" pos:end="55:43"><name pos:start="55:41" pos:end="55:41">i</name><operator pos:start="55:42" pos:end="55:43">++</operator></expr></incr>)</control> <block pos:start="55:46" pos:end="87:9">{<block_content pos:start="57:13" pos:end="85:13">

            <decl_stmt pos:start="57:13" pos:end="57:50"><decl pos:start="57:13" pos:end="57:49"><type pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:23">FFV1Context</name> <modifier pos:start="57:25" pos:end="57:25">*</modifier></type><name pos:start="57:26" pos:end="57:27">fs</name> <init pos:start="57:29" pos:end="57:49">= <expr pos:start="57:31" pos:end="57:49"><name pos:start="57:31" pos:end="57:49"><name pos:start="57:31" pos:end="57:31">f</name><operator pos:start="57:32" pos:end="57:33">-&gt;</operator><name pos:start="57:34" pos:end="57:46">slice_context</name><index pos:start="57:47" pos:end="57:49">[<expr pos:start="57:48" pos:end="57:48"><name pos:start="57:48" pos:end="57:48">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="59:13" pos:end="61:79"><expr pos:start="59:13" pos:end="61:78"><call pos:start="59:13" pos:end="61:78"><name pos:start="59:13" pos:end="59:22">put_symbol</name><argument_list pos:start="59:23" pos:end="61:78">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">c</name></expr></argument>, <argument pos:start="59:27" pos:end="59:31"><expr pos:start="59:27" pos:end="59:31"><name pos:start="59:27" pos:end="59:31">state</name></expr></argument>,

                       <argument pos:start="61:24" pos:end="61:74"><expr pos:start="61:24" pos:end="61:74"><operator pos:start="61:24" pos:end="61:24">(</operator><name pos:start="61:25" pos:end="61:35"><name pos:start="61:25" pos:end="61:26">fs</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:35">slice_x</name></name>      <operator pos:start="61:42" pos:end="61:42">+</operator> <literal type="number" pos:start="61:44" pos:end="61:44">1</literal><operator pos:start="61:45" pos:end="61:45">)</operator> <operator pos:start="61:47" pos:end="61:47">*</operator> <name pos:start="61:49" pos:end="61:63"><name pos:start="61:49" pos:end="61:49">f</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:63">num_h_slices</name></name> <operator pos:start="61:65" pos:end="61:65">/</operator> <name pos:start="61:67" pos:end="61:74"><name pos:start="61:67" pos:end="61:67">f</name><operator pos:start="61:68" pos:end="61:69">-&gt;</operator><name pos:start="61:70" pos:end="61:74">width</name></name></expr></argument>, <argument pos:start="61:77" pos:end="61:77"><expr pos:start="61:77" pos:end="61:77"><literal type="number" pos:start="61:77" pos:end="61:77">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="65:80"><expr pos:start="63:13" pos:end="65:79"><call pos:start="63:13" pos:end="65:79"><name pos:start="63:13" pos:end="63:22">put_symbol</name><argument_list pos:start="63:23" pos:end="65:79">(<argument pos:start="63:24" pos:end="63:24"><expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">c</name></expr></argument>, <argument pos:start="63:27" pos:end="63:31"><expr pos:start="63:27" pos:end="63:31"><name pos:start="63:27" pos:end="63:31">state</name></expr></argument>,

                       <argument pos:start="65:24" pos:end="65:75"><expr pos:start="65:24" pos:end="65:75"><operator pos:start="65:24" pos:end="65:24">(</operator><name pos:start="65:25" pos:end="65:35"><name pos:start="65:25" pos:end="65:26">fs</name><operator pos:start="65:27" pos:end="65:28">-&gt;</operator><name pos:start="65:29" pos:end="65:35">slice_y</name></name>      <operator pos:start="65:42" pos:end="65:42">+</operator> <literal type="number" pos:start="65:44" pos:end="65:44">1</literal><operator pos:start="65:45" pos:end="65:45">)</operator> <operator pos:start="65:47" pos:end="65:47">*</operator> <name pos:start="65:49" pos:end="65:63"><name pos:start="65:49" pos:end="65:49">f</name><operator pos:start="65:50" pos:end="65:51">-&gt;</operator><name pos:start="65:52" pos:end="65:63">num_v_slices</name></name> <operator pos:start="65:65" pos:end="65:65">/</operator> <name pos:start="65:67" pos:end="65:75"><name pos:start="65:67" pos:end="65:67">f</name><operator pos:start="65:68" pos:end="65:69">-&gt;</operator><name pos:start="65:70" pos:end="65:75">height</name></name></expr></argument>, <argument pos:start="65:78" pos:end="65:78"><expr pos:start="65:78" pos:end="65:78"><literal type="number" pos:start="65:78" pos:end="65:78">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="71:26"><expr pos:start="67:13" pos:end="71:25"><call pos:start="67:13" pos:end="71:25"><name pos:start="67:13" pos:end="67:22">put_symbol</name><argument_list pos:start="67:23" pos:end="71:25">(<argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><name pos:start="67:24" pos:end="67:24">c</name></expr></argument>, <argument pos:start="67:27" pos:end="67:31"><expr pos:start="67:27" pos:end="67:31"><name pos:start="67:27" pos:end="67:31">state</name></expr></argument>,

                       <argument pos:start="69:24" pos:end="69:78"><expr pos:start="69:24" pos:end="69:78"><operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:39"><name pos:start="69:25" pos:end="69:26">fs</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:39">slice_width</name></name>  <operator pos:start="69:42" pos:end="69:42">+</operator> <literal type="number" pos:start="69:44" pos:end="69:44">1</literal><operator pos:start="69:45" pos:end="69:45">)</operator> <operator pos:start="69:47" pos:end="69:47">*</operator> <name pos:start="69:49" pos:end="69:63"><name pos:start="69:49" pos:end="69:49">f</name><operator pos:start="69:50" pos:end="69:51">-&gt;</operator><name pos:start="69:52" pos:end="69:63">num_h_slices</name></name> <operator pos:start="69:65" pos:end="69:65">/</operator> <name pos:start="69:67" pos:end="69:74"><name pos:start="69:67" pos:end="69:67">f</name><operator pos:start="69:68" pos:end="69:69">-&gt;</operator><name pos:start="69:70" pos:end="69:74">width</name></name> <operator pos:start="69:76" pos:end="69:76">-</operator> <literal type="number" pos:start="69:78" pos:end="69:78">1</literal></expr></argument>,

                       <argument pos:start="71:24" pos:end="71:24"><expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="77:26"><expr pos:start="73:13" pos:end="77:25"><call pos:start="73:13" pos:end="77:25"><name pos:start="73:13" pos:end="73:22">put_symbol</name><argument_list pos:start="73:23" pos:end="77:25">(<argument pos:start="73:24" pos:end="73:24"><expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">c</name></expr></argument>, <argument pos:start="73:27" pos:end="73:31"><expr pos:start="73:27" pos:end="73:31"><name pos:start="73:27" pos:end="73:31">state</name></expr></argument>,

                       <argument pos:start="75:24" pos:end="75:79"><expr pos:start="75:24" pos:end="75:79"><operator pos:start="75:24" pos:end="75:24">(</operator><name pos:start="75:25" pos:end="75:40"><name pos:start="75:25" pos:end="75:26">fs</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:40">slice_height</name></name> <operator pos:start="75:42" pos:end="75:42">+</operator> <literal type="number" pos:start="75:44" pos:end="75:44">1</literal><operator pos:start="75:45" pos:end="75:45">)</operator> <operator pos:start="75:47" pos:end="75:47">*</operator> <name pos:start="75:49" pos:end="75:63"><name pos:start="75:49" pos:end="75:49">f</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:63">num_v_slices</name></name> <operator pos:start="75:65" pos:end="75:65">/</operator> <name pos:start="75:67" pos:end="75:75"><name pos:start="75:67" pos:end="75:67">f</name><operator pos:start="75:68" pos:end="75:69">-&gt;</operator><name pos:start="75:70" pos:end="75:75">height</name></name> <operator pos:start="75:77" pos:end="75:77">-</operator> <literal type="number" pos:start="75:79" pos:end="75:79">1</literal></expr></argument>,

                       <argument pos:start="77:24" pos:end="77:24"><expr pos:start="77:24" pos:end="77:24"><literal type="number" pos:start="77:24" pos:end="77:24">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <for pos:start="79:13" pos:end="85:13">for <control pos:start="79:17" pos:end="79:48">(<init pos:start="79:18" pos:end="79:23"><expr pos:start="79:18" pos:end="79:22"><name pos:start="79:18" pos:end="79:18">j</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <literal type="number" pos:start="79:22" pos:end="79:22">0</literal></expr>;</init> <condition pos:start="79:25" pos:end="79:43"><expr pos:start="79:25" pos:end="79:42"><name pos:start="79:25" pos:end="79:25">j</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <name pos:start="79:29" pos:end="79:42"><name pos:start="79:29" pos:end="79:29">f</name><operator pos:start="79:30" pos:end="79:31">-&gt;</operator><name pos:start="79:32" pos:end="79:42">plane_count</name></name></expr>;</condition> <incr pos:start="79:45" pos:end="79:47"><expr pos:start="79:45" pos:end="79:47"><name pos:start="79:45" pos:end="79:45">j</name><operator pos:start="79:46" pos:end="79:47">++</operator></expr></incr>)</control> <block pos:start="79:50" pos:end="85:13">{<block_content pos:start="81:17" pos:end="83:85">

                <expr_stmt pos:start="81:17" pos:end="81:71"><expr pos:start="81:17" pos:end="81:70"><call pos:start="81:17" pos:end="81:70"><name pos:start="81:17" pos:end="81:26">put_symbol</name><argument_list pos:start="81:27" pos:end="81:70">(<argument pos:start="81:28" pos:end="81:28"><expr pos:start="81:28" pos:end="81:28"><name pos:start="81:28" pos:end="81:28">c</name></expr></argument>, <argument pos:start="81:31" pos:end="81:35"><expr pos:start="81:31" pos:end="81:35"><name pos:start="81:31" pos:end="81:35">state</name></expr></argument>, <argument pos:start="81:38" pos:end="81:66"><expr pos:start="81:38" pos:end="81:66"><name pos:start="81:38" pos:end="81:48"><name pos:start="81:38" pos:end="81:38">f</name><operator pos:start="81:39" pos:end="81:40">-&gt;</operator><name pos:start="81:41" pos:end="81:45">plane</name><index pos:start="81:46" pos:end="81:48">[<expr pos:start="81:47" pos:end="81:47"><name pos:start="81:47" pos:end="81:47">j</name></expr>]</index></name><operator pos:start="81:49" pos:end="81:49">.</operator><name pos:start="81:50" pos:end="81:66">quant_table_index</name></expr></argument>, <argument pos:start="81:69" pos:end="81:69"><expr pos:start="81:69" pos:end="81:69"><literal type="number" pos:start="81:69" pos:end="81:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="83:17" pos:end="83:85"><expr pos:start="83:17" pos:end="83:84"><call pos:start="83:17" pos:end="83:84"><name pos:start="83:17" pos:end="83:26">av_assert0</name><argument_list pos:start="83:27" pos:end="83:84">(<argument pos:start="83:28" pos:end="83:83"><expr pos:start="83:28" pos:end="83:83"><name pos:start="83:28" pos:end="83:38"><name pos:start="83:28" pos:end="83:28">f</name><operator pos:start="83:29" pos:end="83:30">-&gt;</operator><name pos:start="83:31" pos:end="83:35">plane</name><index pos:start="83:36" pos:end="83:38">[<expr pos:start="83:37" pos:end="83:37"><name pos:start="83:37" pos:end="83:37">j</name></expr>]</index></name><operator pos:start="83:39" pos:end="83:39">.</operator><name pos:start="83:40" pos:end="83:56">quant_table_index</name> <operator pos:start="83:58" pos:end="83:59">==</operator> <name pos:start="83:61" pos:end="83:83"><name pos:start="83:61" pos:end="83:61">f</name><operator pos:start="83:62" pos:end="83:63">-&gt;</operator><name pos:start="83:64" pos:end="83:68">avctx</name><operator pos:start="83:69" pos:end="83:70">-&gt;</operator><name pos:start="83:71" pos:end="83:83">context_model</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
