<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1245.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:4">void</name> <modifier pos:start="1:6" pos:end="1:6">*</modifier></type><name pos:start="1:7" pos:end="1:25">qemu_ram_ptr_length</name><parameter_list pos:start="1:26" pos:end="1:76">(<parameter pos:start="1:27" pos:end="1:49"><decl pos:start="1:27" pos:end="1:49"><type pos:start="1:27" pos:end="1:49"><name pos:start="1:27" pos:end="1:44">target_phys_addr_t</name></type> <name pos:start="1:46" pos:end="1:49">addr</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:75"><decl pos:start="1:52" pos:end="1:75"><type pos:start="1:52" pos:end="1:75"><name pos:start="1:52" pos:end="1:69">target_phys_addr_t</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:75">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <if_stmt pos:start="5:5" pos:end="41:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:22">(<expr pos:start="5:9" pos:end="5:21"><call pos:start="5:9" pos:end="5:21"><name pos:start="5:9" pos:end="5:19">xen_enabled</name><argument_list pos:start="5:20" pos:end="5:21">()</argument_list></call></expr>)</condition> <block pos:start="5:24" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:45">

        <return pos:start="7:9" pos:end="7:45">return <expr pos:start="7:16" pos:end="7:44"><call pos:start="7:16" pos:end="7:44"><name pos:start="7:16" pos:end="7:28">xen_map_cache</name><argument_list pos:start="7:29" pos:end="7:44">(<argument pos:start="7:30" pos:end="7:33"><expr pos:start="7:30" pos:end="7:33"><name pos:start="7:30" pos:end="7:33">addr</name></expr></argument>, <argument pos:start="7:36" pos:end="7:40"><expr pos:start="7:36" pos:end="7:40"><operator pos:start="7:36" pos:end="7:36">*</operator><name pos:start="7:37" pos:end="7:40">size</name></expr></argument>, <argument pos:start="7:43" pos:end="7:43"><expr pos:start="7:43" pos:end="7:43"><literal type="number" pos:start="7:43" pos:end="7:43">1</literal></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="9:7" pos:end="41:5">else <block pos:start="9:12" pos:end="41:5">{<block_content pos:start="11:9" pos:end="39:20">

        <decl_stmt pos:start="11:9" pos:end="11:24"><decl pos:start="11:9" pos:end="11:23"><type pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:16">RAMBlock</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:23">block</name></decl>;</decl_stmt>



        <macro pos:start="15:9" pos:end="15:52"><name pos:start="15:9" pos:end="15:21">QLIST_FOREACH</name><argument_list pos:start="15:22" pos:end="15:52">(<argument pos:start="15:23" pos:end="15:27">block</argument>, <argument pos:start="15:30" pos:end="15:45">&amp;ram_list.blocks</argument>, <argument pos:start="15:48" pos:end="15:51">next</argument>)</argument_list></macro> <block pos:start="15:54" pos:end="27:9">{<block_content pos:start="17:13" pos:end="25:13">

            <if_stmt pos:start="17:13" pos:end="25:13"><if pos:start="17:13" pos:end="25:13">if <condition pos:start="17:16" pos:end="17:53">(<expr pos:start="17:17" pos:end="17:52"><name pos:start="17:17" pos:end="17:20">addr</name> <operator pos:start="17:22" pos:end="17:22">-</operator> <name pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:28">block</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:36">offset</name></name> <operator pos:start="17:38" pos:end="17:38">&lt;</operator> <name pos:start="17:40" pos:end="17:52"><name pos:start="17:40" pos:end="17:44">block</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:52">length</name></name></expr>)</condition> <block pos:start="17:55" pos:end="25:13">{<block_content pos:start="19:17" pos:end="23:60">

                <if_stmt pos:start="19:17" pos:end="21:65"><if pos:start="19:17" pos:end="21:65">if <condition pos:start="19:20" pos:end="19:65">(<expr pos:start="19:21" pos:end="19:64"><name pos:start="19:21" pos:end="19:24">addr</name> <operator pos:start="19:26" pos:end="19:26">-</operator> <name pos:start="19:28" pos:end="19:40"><name pos:start="19:28" pos:end="19:32">block</name><operator pos:start="19:33" pos:end="19:34">-&gt;</operator><name pos:start="19:35" pos:end="19:40">offset</name></name> <operator pos:start="19:42" pos:end="19:42">+</operator> <operator pos:start="19:44" pos:end="19:44">*</operator><name pos:start="19:45" pos:end="19:48">size</name> <operator pos:start="19:50" pos:end="19:50">&gt;</operator> <name pos:start="19:52" pos:end="19:64"><name pos:start="19:52" pos:end="19:56">block</name><operator pos:start="19:57" pos:end="19:58">-&gt;</operator><name pos:start="19:59" pos:end="19:64">length</name></name></expr>)</condition><block type="pseudo" pos:start="21:21" pos:end="21:65"><block_content pos:start="21:21" pos:end="21:65">

                    <expr_stmt pos:start="21:21" pos:end="21:65"><expr pos:start="21:21" pos:end="21:64"><operator pos:start="21:21" pos:end="21:21">*</operator><name pos:start="21:22" pos:end="21:25">size</name> <operator pos:start="21:27" pos:end="21:27">=</operator> <name pos:start="21:29" pos:end="21:41"><name pos:start="21:29" pos:end="21:33">block</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:41">length</name></name> <operator pos:start="21:43" pos:end="21:43">-</operator> <name pos:start="21:45" pos:end="21:48">addr</name> <operator pos:start="21:50" pos:end="21:50">+</operator> <name pos:start="21:52" pos:end="21:64"><name pos:start="21:52" pos:end="21:56">block</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:64">offset</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <return pos:start="23:17" pos:end="23:60">return <expr pos:start="23:24" pos:end="23:59"><name pos:start="23:24" pos:end="23:34"><name pos:start="23:24" pos:end="23:28">block</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:34">host</name></name> <operator pos:start="23:36" pos:end="23:36">+</operator> <operator pos:start="23:38" pos:end="23:38">(</operator><name pos:start="23:39" pos:end="23:42">addr</name> <operator pos:start="23:44" pos:end="23:44">-</operator> <name pos:start="23:46" pos:end="23:58"><name pos:start="23:46" pos:end="23:50">block</name><operator pos:start="23:51" pos:end="23:52">-&gt;</operator><name pos:start="23:53" pos:end="23:58">offset</name></name><operator pos:start="23:59" pos:end="23:59">)</operator></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <expr_stmt pos:start="31:9" pos:end="31:72"><expr pos:start="31:9" pos:end="31:71"><call pos:start="31:9" pos:end="31:71"><name pos:start="31:9" pos:end="31:15">fprintf</name><argument_list pos:start="31:16" pos:end="31:71">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">stderr</name></expr></argument>, <argument pos:start="31:25" pos:end="31:54"><expr pos:start="31:25" pos:end="31:54"><literal type="string" pos:start="31:25" pos:end="31:42">"Bad ram offset %"</literal> <name pos:start="31:44" pos:end="31:49">PRIx64</name> <literal type="string" pos:start="31:51" pos:end="31:54">"\n"</literal></expr></argument>, <argument pos:start="31:57" pos:end="31:70"><expr pos:start="31:57" pos:end="31:70"><operator pos:start="31:57" pos:end="31:57">(</operator><name pos:start="31:58" pos:end="31:65">uint64_t</name><operator pos:start="31:66" pos:end="31:66">)</operator><name pos:start="31:67" pos:end="31:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:16"><expr pos:start="33:9" pos:end="33:15"><call pos:start="33:9" pos:end="33:15"><name pos:start="33:9" pos:end="33:13">abort</name><argument_list pos:start="33:14" pos:end="33:15">()</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><operator pos:start="37:9" pos:end="37:9">*</operator><name pos:start="37:10" pos:end="37:13">size</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">0</literal></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:20">return <expr pos:start="39:16" pos:end="39:19"><name pos:start="39:16" pos:end="39:19">NULL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
