<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2894.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">create_cpu_model_list</name><parameter_list pos:start="1:34" pos:end="1:67">(<parameter pos:start="1:35" pos:end="1:52"><decl pos:start="1:35" pos:end="1:52"><type pos:start="1:35" pos:end="1:52"><name pos:start="1:35" pos:end="1:45">ObjectClass</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">klass</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:66"><decl pos:start="1:55" pos:end="1:66"><type pos:start="1:55" pos:end="1:66"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:66">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:22">

    <decl_stmt pos:start="5:5" pos:end="5:61"><decl pos:start="5:5" pos:end="5:60"><type pos:start="5:5" pos:end="5:38"><name pos:start="5:5" pos:end="5:36"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:36">CpuDefinitionInfoListData</name></name> <modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:51">cpu_list_data</name> <init pos:start="5:53" pos:end="5:60">= <expr pos:start="5:55" pos:end="5:60"><name pos:start="5:55" pos:end="5:60">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:28"><name pos:start="7:5" pos:end="7:25">CpuDefinitionInfoList</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier><modifier pos:start="7:28" pos:end="7:28">*</modifier></type><name pos:start="7:29" pos:end="7:36">cpu_list</name> <init pos:start="7:38" pos:end="7:59">= <expr pos:start="7:40" pos:end="7:59"><operator pos:start="7:40" pos:end="7:40">&amp;</operator><name pos:start="7:41" pos:end="7:59"><name pos:start="7:41" pos:end="7:53">cpu_list_data</name><operator pos:start="7:54" pos:end="7:55">-&gt;</operator><name pos:start="7:56" pos:end="7:59">list</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:25">CpuDefinitionInfoList</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:32">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">CpuDefinitionInfo</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:27">info</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:56"><decl pos:start="13:5" pos:end="13:55"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:14">name</name> <init pos:start="13:16" pos:end="13:55">= <expr pos:start="13:18" pos:end="13:55"><call pos:start="13:18" pos:end="13:55"><name pos:start="13:18" pos:end="13:25">g_strdup</name><argument_list pos:start="13:26" pos:end="13:55">(<argument pos:start="13:27" pos:end="13:54"><expr pos:start="13:27" pos:end="13:54"><call pos:start="13:27" pos:end="13:54"><name pos:start="13:27" pos:end="13:47">object_class_get_name</name><argument_list pos:start="13:48" pos:end="13:54">(<argument pos:start="13:49" pos:end="13:53"><expr pos:start="13:49" pos:end="13:53"><name pos:start="13:49" pos:end="13:53">klass</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:16">S390CPUClass</name> <modifier pos:start="15:18" pos:end="15:18">*</modifier></type><name pos:start="15:19" pos:end="15:21">scc</name> <init pos:start="15:23" pos:end="15:45">= <expr pos:start="15:25" pos:end="15:45"><call pos:start="15:25" pos:end="15:45"><name pos:start="15:25" pos:end="15:38">S390_CPU_CLASS</name><argument_list pos:start="15:39" pos:end="15:45">(<argument pos:start="15:40" pos:end="15:44"><expr pos:start="15:40" pos:end="15:44"><name pos:start="15:40" pos:end="15:44">klass</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:33">/* strip off the -s390-cpu */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:46"><expr pos:start="21:5" pos:end="21:45"><call pos:start="21:5" pos:end="21:38"><name pos:start="21:5" pos:end="21:13">g_strrstr</name><argument_list pos:start="21:14" pos:end="21:38">(<argument pos:start="21:15" pos:end="21:18"><expr pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:18">name</name></expr></argument>, <argument pos:start="21:21" pos:end="21:37"><expr pos:start="21:21" pos:end="21:37"><literal type="string" pos:start="21:21" pos:end="21:23">"-"</literal> <name pos:start="21:25" pos:end="21:37">TYPE_S390_CPU</name></expr></argument>)</argument_list></call><index pos:start="21:39" pos:end="21:41">[<expr pos:start="21:40" pos:end="21:40"><literal type="number" pos:start="21:40" pos:end="21:40">0</literal></expr>]</index> <operator pos:start="21:43" pos:end="21:43">=</operator> <literal type="number" pos:start="21:45" pos:end="21:45">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:8">info</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:39"><name pos:start="23:12" pos:end="23:17">g_new0</name><argument_list pos:start="23:18" pos:end="23:39">(<argument pos:start="23:19" pos:end="23:35"><expr pos:start="23:19" pos:end="23:35"><name pos:start="23:19" pos:end="23:35">CpuDefinitionInfo</name></expr></argument>, <argument pos:start="23:38" pos:end="23:38"><expr pos:start="23:38" pos:end="23:38"><literal type="number" pos:start="23:38" pos:end="23:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:22"><expr pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:8">info</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:14">name</name></name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:21">name</name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:36"><expr pos:start="27:5" pos:end="27:35"><name pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:8">info</name><operator pos:start="27:9" pos:end="27:10">-&gt;</operator><name pos:start="27:11" pos:end="27:28">has_migration_safe</name></name> <operator pos:start="27:30" pos:end="27:30">=</operator> <name pos:start="27:32" pos:end="27:35">true</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:8">info</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:24">migration_safe</name></name> <operator pos:start="29:26" pos:end="29:26">=</operator> <name pos:start="29:28" pos:end="29:49"><name pos:start="29:28" pos:end="29:30">scc</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:49">is_migration_safe</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:8">info</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:18">q_static</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <name pos:start="31:22" pos:end="31:35"><name pos:start="31:22" pos:end="31:24">scc</name><operator pos:start="31:25" pos:end="31:26">-&gt;</operator><name pos:start="31:27" pos:end="31:35">is_static</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:20"><name pos:start="33:5" pos:end="33:8">info</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:20">q_typename</name></name> <operator pos:start="33:22" pos:end="33:22">=</operator> <call pos:start="33:24" pos:end="33:61"><name pos:start="33:24" pos:end="33:31">g_strdup</name><argument_list pos:start="33:32" pos:end="33:61">(<argument pos:start="33:33" pos:end="33:60"><expr pos:start="33:33" pos:end="33:60"><call pos:start="33:33" pos:end="33:60"><name pos:start="33:33" pos:end="33:53">object_class_get_name</name><argument_list pos:start="33:54" pos:end="33:60">(<argument pos:start="33:55" pos:end="33:59"><expr pos:start="33:55" pos:end="33:59"><name pos:start="33:55" pos:end="33:59">klass</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="35:5" pos:end="35:40">/* check for unavailable features */</comment>

    <if_stmt pos:start="37:5" pos:end="59:5"><if pos:start="37:5" pos:end="59:5">if <condition pos:start="37:8" pos:end="37:29">(<expr pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:28"><name pos:start="37:9" pos:end="37:21">cpu_list_data</name><operator pos:start="37:22" pos:end="37:23">-&gt;</operator><name pos:start="37:24" pos:end="37:28">model</name></name></expr>)</condition> <block pos:start="37:31" pos:end="59:5">{<block_content pos:start="39:9" pos:end="57:26">

        <decl_stmt pos:start="39:9" pos:end="39:20"><decl pos:start="39:9" pos:end="39:19"><type pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:14">Object</name> <modifier pos:start="39:16" pos:end="39:16">*</modifier></type><name pos:start="39:17" pos:end="39:19">obj</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:20"><decl pos:start="41:9" pos:end="41:19"><type pos:start="41:9" pos:end="41:17"><name pos:start="41:9" pos:end="41:15">S390CPU</name> <modifier pos:start="41:17" pos:end="41:17">*</modifier></type><name pos:start="41:18" pos:end="41:19">sc</name></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:11">obj</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <call pos:start="43:15" pos:end="43:54"><name pos:start="43:15" pos:end="43:24">object_new</name><argument_list pos:start="43:25" pos:end="43:54">(<argument pos:start="43:26" pos:end="43:53"><expr pos:start="43:26" pos:end="43:53"><call pos:start="43:26" pos:end="43:53"><name pos:start="43:26" pos:end="43:46">object_class_get_name</name><argument_list pos:start="43:47" pos:end="43:53">(<argument pos:start="43:48" pos:end="43:52"><expr pos:start="43:48" pos:end="43:52"><name pos:start="43:48" pos:end="43:52">klass</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:10">sc</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:26"><name pos:start="45:14" pos:end="45:21">S390_CPU</name><argument_list pos:start="45:22" pos:end="45:26">(<argument pos:start="45:23" pos:end="45:25"><expr pos:start="45:23" pos:end="45:25"><name pos:start="45:23" pos:end="45:25">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:22">(<expr pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:14">sc</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:21">model</name></name></expr>)</condition> <block pos:start="47:24" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:68">

            <expr_stmt pos:start="49:13" pos:end="49:50"><expr pos:start="49:13" pos:end="49:49"><name pos:start="49:13" pos:end="49:42"><name pos:start="49:13" pos:end="49:16">info</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:42">has_unavailable_features</name></name> <operator pos:start="49:44" pos:end="49:44">=</operator> <name pos:start="49:46" pos:end="49:49">true</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="53:68"><expr pos:start="51:13" pos:end="53:67"><call pos:start="51:13" pos:end="53:67"><name pos:start="51:13" pos:end="51:38">check_unavailable_features</name><argument_list pos:start="51:39" pos:end="53:67">(<argument pos:start="51:40" pos:end="51:59"><expr pos:start="51:40" pos:end="51:59"><name pos:start="51:40" pos:end="51:59"><name pos:start="51:40" pos:end="51:52">cpu_list_data</name><operator pos:start="51:53" pos:end="51:54">-&gt;</operator><name pos:start="51:55" pos:end="51:59">model</name></name></expr></argument>, <argument pos:start="51:62" pos:end="51:70"><expr pos:start="51:62" pos:end="51:70"><name pos:start="51:62" pos:end="51:70"><name pos:start="51:62" pos:end="51:63">sc</name><operator pos:start="51:64" pos:end="51:65">-&gt;</operator><name pos:start="51:66" pos:end="51:70">model</name></name></expr></argument>,

                                       <argument pos:start="53:40" pos:end="53:66"><expr pos:start="53:40" pos:end="53:66"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:66"><name pos:start="53:41" pos:end="53:44">info</name><operator pos:start="53:45" pos:end="53:46">-&gt;</operator><name pos:start="53:47" pos:end="53:66">unavailable_features</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:26"><expr pos:start="57:9" pos:end="57:25"><call pos:start="57:9" pos:end="57:25"><name pos:start="57:9" pos:end="57:20">object_unref</name><argument_list pos:start="57:21" pos:end="57:25">(<argument pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:24">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:9">entry</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <call pos:start="63:13" pos:end="63:44"><name pos:start="63:13" pos:end="63:18">g_new0</name><argument_list pos:start="63:19" pos:end="63:44">(<argument pos:start="63:20" pos:end="63:40"><expr pos:start="63:20" pos:end="63:40"><name pos:start="63:20" pos:end="63:40">CpuDefinitionInfoList</name></expr></argument>, <argument pos:start="63:43" pos:end="63:43"><expr pos:start="63:43" pos:end="63:43"><literal type="number" pos:start="63:43" pos:end="63:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:16"><name pos:start="65:5" pos:end="65:9">entry</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:16">value</name></name> <operator pos:start="65:18" pos:end="65:18">=</operator> <name pos:start="65:20" pos:end="65:23">info</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:28"><expr pos:start="67:5" pos:end="67:27"><name pos:start="67:5" pos:end="67:15"><name pos:start="67:5" pos:end="67:9">entry</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:15">next</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <operator pos:start="67:19" pos:end="67:19">*</operator><name pos:start="67:20" pos:end="67:27">cpu_list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><operator pos:start="69:5" pos:end="69:5">*</operator><name pos:start="69:6" pos:end="69:13">cpu_list</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:21">entry</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
