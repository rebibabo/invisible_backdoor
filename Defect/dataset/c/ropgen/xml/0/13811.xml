<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13811.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">acpi_table_install</name><parameter_list pos:start="1:31" pos:end="7:44">(<parameter pos:start="1:32" pos:end="1:56"><decl pos:start="1:32" pos:end="1:56"><type pos:start="1:32" pos:end="1:56"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:41">char</name> <name pos:start="1:43" pos:end="1:50">unsigned</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">blob</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:64">size_t</name></type> <name pos:start="1:66" pos:end="1:72">bloblen</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:46"><decl pos:start="3:32" pos:end="3:46"><type pos:start="3:32" pos:end="3:46"><name pos:start="3:32" pos:end="3:35">bool</name></type> <name pos:start="3:37" pos:end="3:46">has_header</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:66"><decl pos:start="5:32" pos:end="5:66"><type pos:start="5:32" pos:end="5:66"><specifier pos:start="5:32" pos:end="5:36">const</specifier> <name pos:start="5:38" pos:end="5:60"><name pos:start="5:38" pos:end="5:43">struct</name> <name pos:start="5:45" pos:end="5:60">AcpiTableOptions</name></name> <modifier pos:start="5:62" pos:end="5:62">*</modifier></type><name pos:start="5:63" pos:end="5:66">hdrs</name></decl></parameter>,

                               <parameter pos:start="7:32" pos:end="7:43"><decl pos:start="7:32" pos:end="7:43"><type pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:36">Error</name> <modifier pos:start="7:38" pos:end="7:38">*</modifier><modifier pos:start="7:39" pos:end="7:39">*</modifier></type><name pos:start="7:40" pos:end="7:43">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="263:1">{<block_content pos:start="11:5" pos:end="261:78">

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">body_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:25"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <name pos:start="13:16" pos:end="13:23">unsigned</name> <modifier pos:start="13:25" pos:end="13:25">*</modifier></type><name pos:start="13:26" pos:end="13:32">hdr_src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:10"><name pos:start="15:5" pos:end="15:10">size_t</name></type> <name pos:start="15:12" pos:end="15:20">body_size</name></decl>, <decl pos:start="15:23" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:10"/><name pos:start="15:23" pos:end="15:39">acpi_payload_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:30"><name pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:10">struct</name> <name pos:start="17:12" pos:end="17:28">acpi_table_header</name></name> <modifier pos:start="17:30" pos:end="17:30">*</modifier></type><name pos:start="17:31" pos:end="17:37">ext_hdr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:28"><decl pos:start="19:5" pos:end="19:27"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">unsigned</name></type> <name pos:start="19:14" pos:end="19:27">changed_fields</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="27:7">/* Calculate where the ACPI table body starts within the blob, plus where

     * to copy the ACPI table header from.

     */</comment>

    <if_stmt pos:start="29:5" pos:end="87:5"><if pos:start="29:5" pos:end="65:5">if <condition pos:start="29:8" pos:end="29:19">(<expr pos:start="29:9" pos:end="29:18"><name pos:start="29:9" pos:end="29:18">has_header</name></expr>)</condition> <block pos:start="29:21" pos:end="65:5">{<block_content pos:start="47:9" pos:end="63:23">

        <comment type="block" pos:start="31:9" pos:end="45:11">/*   _length             | ACPI header in blob | blob body

         *   ^^^^^^^^^^^^^^^^^^^   ^^^^^^^^^^^^^^^^^^^   ^^^^^^^^^

         *   ACPI_TABLE_PFX_SIZE     sizeof dfl_hdr      body_size

         *                           == body_start

         *

         *                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

         *                           acpi_payload_size == bloblen

         */</comment>

        <expr_stmt pos:start="47:9" pos:end="47:36"><expr pos:start="47:9" pos:end="47:35"><name pos:start="47:9" pos:end="47:18">body_start</name> <operator pos:start="47:20" pos:end="47:20">=</operator> <sizeof pos:start="47:22" pos:end="47:35">sizeof <name pos:start="47:29" pos:end="47:35">dfl_hdr</name></sizeof></expr>;</expr_stmt>



        <if_stmt pos:start="51:9" pos:end="61:9"><if pos:start="51:9" pos:end="61:9">if <condition pos:start="51:12" pos:end="51:33">(<expr pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:19">bloblen</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <name pos:start="51:23" pos:end="51:32">body_start</name></expr>)</condition> <block pos:start="51:35" pos:end="61:9">{<block_content pos:start="53:13" pos:end="59:19">

            <expr_stmt pos:start="53:13" pos:end="57:35"><expr pos:start="53:13" pos:end="57:34"><call pos:start="53:13" pos:end="57:34"><name pos:start="53:13" pos:end="53:22">error_setg</name><argument_list pos:start="53:23" pos:end="57:34">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">errp</name></expr></argument>, <argument pos:start="53:30" pos:end="55:61"><expr pos:start="53:30" pos:end="55:61"><literal type="string" pos:start="53:30" pos:end="53:73">"ACPI table claiming to have header is too "</literal>

                       <literal type="string" pos:start="55:24" pos:end="55:61">"short, available: %zu, expected: %zu"</literal></expr></argument>, <argument pos:start="55:64" pos:end="55:70"><expr pos:start="55:64" pos:end="55:70"><name pos:start="55:64" pos:end="55:70">bloblen</name></expr></argument>,

                       <argument pos:start="57:24" pos:end="57:33"><expr pos:start="57:24" pos:end="57:33"><name pos:start="57:24" pos:end="57:33">body_start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:23"><expr pos:start="63:9" pos:end="63:22"><name pos:start="63:9" pos:end="63:15">hdr_src</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:22">blob</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="87:5">else <block pos:start="65:12" pos:end="87:5">{<block_content pos:start="83:9" pos:end="85:26">

        <comment type="block" pos:start="67:9" pos:end="81:11">/*   _length             | ACPI header in template | blob body

         *   ^^^^^^^^^^^^^^^^^^^   ^^^^^^^^^^^^^^^^^^^^^^^   ^^^^^^^^^^

         *   ACPI_TABLE_PFX_SIZE       sizeof dfl_hdr        body_size

         *                                                   == bloblen

         *

         *                         ^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^^

         *                                  acpi_payload_size

         */</comment>

        <expr_stmt pos:start="83:9" pos:end="83:23"><expr pos:start="83:9" pos:end="83:22"><name pos:start="83:9" pos:end="83:18">body_start</name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:26"><expr pos:start="85:9" pos:end="85:25"><name pos:start="85:9" pos:end="85:15">hdr_src</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:25">dfl_hdr</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:37"><expr pos:start="89:5" pos:end="89:36"><name pos:start="89:5" pos:end="89:13">body_size</name> <operator pos:start="89:15" pos:end="89:15">=</operator> <name pos:start="89:17" pos:end="89:23">bloblen</name> <operator pos:start="89:25" pos:end="89:25">-</operator> <name pos:start="89:27" pos:end="89:36">body_start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:51"><expr pos:start="91:5" pos:end="91:50"><name pos:start="91:5" pos:end="91:21">acpi_payload_size</name> <operator pos:start="91:23" pos:end="91:23">=</operator> <sizeof pos:start="91:25" pos:end="91:38">sizeof <name pos:start="91:32" pos:end="91:38">dfl_hdr</name></sizeof> <operator pos:start="91:40" pos:end="91:40">+</operator> <name pos:start="91:42" pos:end="91:50">body_size</name></expr>;</expr_stmt>



    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:39">(<expr pos:start="95:9" pos:end="95:38"><name pos:start="95:9" pos:end="95:25">acpi_payload_size</name> <operator pos:start="95:27" pos:end="95:27">&gt;</operator> <name pos:start="95:29" pos:end="95:38">UINT16_MAX</name></expr>)</condition> <block pos:start="95:41" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:15">

        <expr_stmt pos:start="97:9" pos:end="99:60"><expr pos:start="97:9" pos:end="99:59"><call pos:start="97:9" pos:end="99:59"><name pos:start="97:9" pos:end="97:18">error_setg</name><argument_list pos:start="97:19" pos:end="99:59">(<argument pos:start="97:20" pos:end="97:23"><expr pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">errp</name></expr></argument>, <argument pos:start="97:26" pos:end="97:70"><expr pos:start="97:26" pos:end="97:70"><literal type="string" pos:start="97:26" pos:end="97:70">"ACPI table too big, requested: %zu, max: %u"</literal></expr></argument>,

                   <argument pos:start="99:20" pos:end="99:36"><expr pos:start="99:20" pos:end="99:36"><name pos:start="99:20" pos:end="99:36">acpi_payload_size</name></expr></argument>, <argument pos:start="99:39" pos:end="99:58"><expr pos:start="99:39" pos:end="99:58"><operator pos:start="99:39" pos:end="99:39">(</operator><name pos:start="99:40" pos:end="99:47">unsigned</name><operator pos:start="99:48" pos:end="99:48">)</operator><name pos:start="99:49" pos:end="99:58">UINT16_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="107:5" pos:end="107:70">/* We won't fail from here on. Initialize / extend the globals. */</comment>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:28">(<expr pos:start="109:9" pos:end="109:27"><name pos:start="109:9" pos:end="109:19">acpi_tables</name> <operator pos:start="109:21" pos:end="109:22">==</operator> <name pos:start="109:24" pos:end="109:27">NULL</name></expr>)</condition> <block pos:start="109:30" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:49">

        <expr_stmt pos:start="111:9" pos:end="111:43"><expr pos:start="111:9" pos:end="111:42"><name pos:start="111:9" pos:end="111:23">acpi_tables_len</name> <operator pos:start="111:25" pos:end="111:25">=</operator> <sizeof pos:start="111:27" pos:end="111:42">sizeof<argument_list pos:start="111:33" pos:end="111:42">(<argument pos:start="111:34" pos:end="111:41"><expr pos:start="111:34" pos:end="111:41"><name pos:start="111:34" pos:end="111:41">uint16_t</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:49"><expr pos:start="113:9" pos:end="113:48"><name pos:start="113:9" pos:end="113:19">acpi_tables</name> <operator pos:start="113:21" pos:end="113:21">=</operator> <call pos:start="113:23" pos:end="113:48"><name pos:start="113:23" pos:end="113:31">g_malloc0</name><argument_list pos:start="113:32" pos:end="113:48">(<argument pos:start="113:33" pos:end="113:47"><expr pos:start="113:33" pos:end="113:47"><name pos:start="113:33" pos:end="113:47">acpi_tables_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="123:69"><expr pos:start="119:5" pos:end="123:68"><name pos:start="119:5" pos:end="119:15">acpi_tables</name> <operator pos:start="119:17" pos:end="119:17">=</operator> <call pos:start="119:19" pos:end="123:68"><name pos:start="119:19" pos:end="119:27">g_realloc</name><argument_list pos:start="119:28" pos:end="123:68">(<argument pos:start="119:29" pos:end="119:39"><expr pos:start="119:29" pos:end="119:39"><name pos:start="119:29" pos:end="119:39">acpi_tables</name></expr></argument>, <argument pos:start="119:42" pos:end="123:67"><expr pos:start="119:42" pos:end="123:67"><name pos:start="119:42" pos:end="119:56">acpi_tables_len</name> <operator pos:start="119:58" pos:end="119:58">+</operator>

                                         <name pos:start="121:42" pos:end="121:60">ACPI_TABLE_PFX_SIZE</name> <operator pos:start="121:62" pos:end="121:62">+</operator>

                                         <sizeof pos:start="123:42" pos:end="123:55">sizeof <name pos:start="123:49" pos:end="123:55">dfl_hdr</name></sizeof> <operator pos:start="123:57" pos:end="123:57">+</operator> <name pos:start="123:59" pos:end="123:67">body_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:74"><expr pos:start="127:5" pos:end="127:73"><name pos:start="127:5" pos:end="127:11">ext_hdr</name> <operator pos:start="127:13" pos:end="127:13">=</operator> <operator pos:start="127:15" pos:end="127:15">(</operator>struct <name pos:start="127:23" pos:end="127:39">acpi_table_header</name> <operator pos:start="127:41" pos:end="127:41">*</operator><operator pos:start="127:42" pos:end="127:42">)</operator><operator pos:start="127:43" pos:end="127:43">(</operator><name pos:start="127:44" pos:end="127:54">acpi_tables</name> <operator pos:start="127:56" pos:end="127:56">+</operator> <name pos:start="127:58" pos:end="127:72">acpi_tables_len</name><operator pos:start="127:73" pos:end="127:73">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:43"><expr pos:start="129:5" pos:end="129:42"><name pos:start="129:5" pos:end="129:19">acpi_tables_len</name> <operator pos:start="129:21" pos:end="129:22">+=</operator> <name pos:start="129:24" pos:end="129:42">ACPI_TABLE_PFX_SIZE</name></expr>;</expr_stmt>



    <expr_stmt pos:start="133:5" pos:end="133:67"><expr pos:start="133:5" pos:end="133:66"><call pos:start="133:5" pos:end="133:66"><name pos:start="133:5" pos:end="133:10">memcpy</name><argument_list pos:start="133:11" pos:end="133:66">(<argument pos:start="133:12" pos:end="133:40"><expr pos:start="133:12" pos:end="133:40"><name pos:start="133:12" pos:end="133:22">acpi_tables</name> <operator pos:start="133:24" pos:end="133:24">+</operator> <name pos:start="133:26" pos:end="133:40">acpi_tables_len</name></expr></argument>, <argument pos:start="133:43" pos:end="133:49"><expr pos:start="133:43" pos:end="133:49"><name pos:start="133:43" pos:end="133:49">hdr_src</name></expr></argument>, <argument pos:start="133:52" pos:end="133:65"><expr pos:start="133:52" pos:end="133:65"><sizeof pos:start="133:52" pos:end="133:65">sizeof <name pos:start="133:59" pos:end="133:65">dfl_hdr</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:38"><expr pos:start="135:5" pos:end="135:37"><name pos:start="135:5" pos:end="135:19">acpi_tables_len</name> <operator pos:start="135:21" pos:end="135:22">+=</operator> <sizeof pos:start="135:24" pos:end="135:37">sizeof <name pos:start="135:31" pos:end="135:37">dfl_hdr</name></sizeof></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="145:5"><if pos:start="139:5" pos:end="145:5">if <condition pos:start="139:8" pos:end="139:21">(<expr pos:start="139:9" pos:end="139:20"><name pos:start="139:9" pos:end="139:12">blob</name> <operator pos:start="139:14" pos:end="139:15">!=</operator> <name pos:start="139:17" pos:end="139:20">NULL</name></expr>)</condition> <block pos:start="139:23" pos:end="145:5">{<block_content pos:start="141:9" pos:end="143:37">

        <expr_stmt pos:start="141:9" pos:end="141:76"><expr pos:start="141:9" pos:end="141:75"><call pos:start="141:9" pos:end="141:75"><name pos:start="141:9" pos:end="141:14">memcpy</name><argument_list pos:start="141:15" pos:end="141:75">(<argument pos:start="141:16" pos:end="141:44"><expr pos:start="141:16" pos:end="141:44"><name pos:start="141:16" pos:end="141:26">acpi_tables</name> <operator pos:start="141:28" pos:end="141:28">+</operator> <name pos:start="141:30" pos:end="141:44">acpi_tables_len</name></expr></argument>, <argument pos:start="141:47" pos:end="141:63"><expr pos:start="141:47" pos:end="141:63"><name pos:start="141:47" pos:end="141:50">blob</name> <operator pos:start="141:52" pos:end="141:52">+</operator> <name pos:start="141:54" pos:end="141:63">body_start</name></expr></argument>, <argument pos:start="141:66" pos:end="141:74"><expr pos:start="141:66" pos:end="141:74"><name pos:start="141:66" pos:end="141:74">body_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:37"><expr pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:23">acpi_tables_len</name> <operator pos:start="143:25" pos:end="143:26">+=</operator> <name pos:start="143:28" pos:end="143:36">body_size</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="149:5" pos:end="149:35">/* increase number of tables */</comment>

    <expr_stmt pos:start="151:5" pos:end="151:55"><expr pos:start="151:5" pos:end="151:54"><call pos:start="151:5" pos:end="151:54"><name pos:start="151:5" pos:end="151:12">stw_le_p</name><argument_list pos:start="151:13" pos:end="151:54">(<argument pos:start="151:14" pos:end="151:24"><expr pos:start="151:14" pos:end="151:24"><name pos:start="151:14" pos:end="151:24">acpi_tables</name></expr></argument>, <argument pos:start="151:27" pos:end="151:53"><expr pos:start="151:27" pos:end="151:53"><call pos:start="151:27" pos:end="151:48"><name pos:start="151:27" pos:end="151:35">lduw_le_p</name><argument_list pos:start="151:36" pos:end="151:48">(<argument pos:start="151:37" pos:end="151:47"><expr pos:start="151:37" pos:end="151:47"><name pos:start="151:37" pos:end="151:47">acpi_tables</name></expr></argument>)</argument_list></call> <operator pos:start="151:50" pos:end="151:50">+</operator> <literal type="number" pos:start="151:52" pos:end="151:53">1u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="155:5" pos:end="155:75">/* Update the header fields. The strings need not be NUL-terminated. */</comment>

    <expr_stmt pos:start="157:5" pos:end="157:23"><expr pos:start="157:5" pos:end="157:22"><name pos:start="157:5" pos:end="157:18">changed_fields</name> <operator pos:start="157:20" pos:end="157:20">=</operator> <literal type="number" pos:start="157:22" pos:end="157:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="159:5" pos:end="159:54"><expr pos:start="159:5" pos:end="159:53"><name pos:start="159:5" pos:end="159:20"><name pos:start="159:5" pos:end="159:11">ext_hdr</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:20">_length</name></name> <operator pos:start="159:22" pos:end="159:22">=</operator> <call pos:start="159:24" pos:end="159:53"><name pos:start="159:24" pos:end="159:34">cpu_to_le16</name><argument_list pos:start="159:35" pos:end="159:53">(<argument pos:start="159:36" pos:end="159:52"><expr pos:start="159:36" pos:end="159:52"><name pos:start="159:36" pos:end="159:52">acpi_payload_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="163:5" pos:end="169:5"><if pos:start="163:5" pos:end="169:5">if <condition pos:start="163:8" pos:end="163:22">(<expr pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:21"><name pos:start="163:9" pos:end="163:12">hdrs</name><operator pos:start="163:13" pos:end="163:14">-&gt;</operator><name pos:start="163:15" pos:end="163:21">has_sig</name></name></expr>)</condition> <block pos:start="163:24" pos:end="169:5">{<block_content pos:start="165:9" pos:end="167:25">

        <expr_stmt pos:start="165:9" pos:end="165:62"><expr pos:start="165:9" pos:end="165:61"><call pos:start="165:9" pos:end="165:61"><name pos:start="165:9" pos:end="165:15">strncpy</name><argument_list pos:start="165:16" pos:end="165:61">(<argument pos:start="165:17" pos:end="165:28"><expr pos:start="165:17" pos:end="165:28"><name pos:start="165:17" pos:end="165:28"><name pos:start="165:17" pos:end="165:23">ext_hdr</name><operator pos:start="165:24" pos:end="165:25">-&gt;</operator><name pos:start="165:26" pos:end="165:28">sig</name></name></expr></argument>, <argument pos:start="165:31" pos:end="165:39"><expr pos:start="165:31" pos:end="165:39"><name pos:start="165:31" pos:end="165:39"><name pos:start="165:31" pos:end="165:34">hdrs</name><operator pos:start="165:35" pos:end="165:36">-&gt;</operator><name pos:start="165:37" pos:end="165:39">sig</name></name></expr></argument>, <argument pos:start="165:42" pos:end="165:60"><expr pos:start="165:42" pos:end="165:60"><sizeof pos:start="165:42" pos:end="165:60">sizeof <name pos:start="165:49" pos:end="165:60"><name pos:start="165:49" pos:end="165:55">ext_hdr</name><operator pos:start="165:56" pos:end="165:57">-&gt;</operator><name pos:start="165:58" pos:end="165:60">sig</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:25"><expr pos:start="167:9" pos:end="167:24"><operator pos:start="167:9" pos:end="167:10">++</operator><name pos:start="167:11" pos:end="167:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="173:5" pos:end="183:5"><if pos:start="173:5" pos:end="183:5">if <condition pos:start="173:8" pos:end="173:72">(<expr pos:start="173:9" pos:end="173:71"><name pos:start="173:9" pos:end="173:18">has_header</name> <operator pos:start="173:20" pos:end="173:21">&amp;&amp;</operator> <call pos:start="173:23" pos:end="173:50"><name pos:start="173:23" pos:end="173:33">le32_to_cpu</name><argument_list pos:start="173:34" pos:end="173:50">(<argument pos:start="173:35" pos:end="173:49"><expr pos:start="173:35" pos:end="173:49"><name pos:start="173:35" pos:end="173:49"><name pos:start="173:35" pos:end="173:41">ext_hdr</name><operator pos:start="173:42" pos:end="173:43">-&gt;</operator><name pos:start="173:44" pos:end="173:49">length</name></name></expr></argument>)</argument_list></call> <operator pos:start="173:52" pos:end="173:53">!=</operator> <name pos:start="173:55" pos:end="173:71">acpi_payload_size</name></expr>)</condition> <block pos:start="173:74" pos:end="183:5">{<block_content pos:start="175:9" pos:end="181:65">

        <expr_stmt pos:start="175:9" pos:end="181:65"><expr pos:start="175:9" pos:end="181:64"><call pos:start="175:9" pos:end="181:64"><name pos:start="175:9" pos:end="175:15">fprintf</name><argument_list pos:start="175:16" pos:end="181:64">(<argument pos:start="175:17" pos:end="175:22"><expr pos:start="175:17" pos:end="175:22"><name pos:start="175:17" pos:end="175:22">stderr</name></expr></argument>,

                <argument pos:start="177:17" pos:end="179:54"><expr pos:start="177:17" pos:end="179:54"><literal type="string" pos:start="177:17" pos:end="177:68">"warning: ACPI table has wrong length, header says "</literal>

                <literal type="string" pos:start="179:17" pos:end="179:19">"%"</literal> <name pos:start="179:21" pos:end="179:26">PRIu32</name> <literal type="string" pos:start="179:28" pos:end="179:54">", actual size %zu bytes\n"</literal></expr></argument>,

                <argument pos:start="181:17" pos:end="181:44"><expr pos:start="181:17" pos:end="181:44"><call pos:start="181:17" pos:end="181:44"><name pos:start="181:17" pos:end="181:27">le32_to_cpu</name><argument_list pos:start="181:28" pos:end="181:44">(<argument pos:start="181:29" pos:end="181:43"><expr pos:start="181:29" pos:end="181:43"><name pos:start="181:29" pos:end="181:43"><name pos:start="181:29" pos:end="181:35">ext_hdr</name><operator pos:start="181:36" pos:end="181:37">-&gt;</operator><name pos:start="181:38" pos:end="181:43">length</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="181:47" pos:end="181:63"><expr pos:start="181:47" pos:end="181:63"><name pos:start="181:47" pos:end="181:63">acpi_payload_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="185:5" pos:end="185:53"><expr pos:start="185:5" pos:end="185:52"><name pos:start="185:5" pos:end="185:19"><name pos:start="185:5" pos:end="185:11">ext_hdr</name><operator pos:start="185:12" pos:end="185:13">-&gt;</operator><name pos:start="185:14" pos:end="185:19">length</name></name> <operator pos:start="185:21" pos:end="185:21">=</operator> <call pos:start="185:23" pos:end="185:52"><name pos:start="185:23" pos:end="185:33">cpu_to_le32</name><argument_list pos:start="185:34" pos:end="185:52">(<argument pos:start="185:35" pos:end="185:51"><expr pos:start="185:35" pos:end="185:51"><name pos:start="185:35" pos:end="185:51">acpi_payload_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="189:5" pos:end="195:5"><if pos:start="189:5" pos:end="195:5">if <condition pos:start="189:8" pos:end="189:22">(<expr pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:21"><name pos:start="189:9" pos:end="189:12">hdrs</name><operator pos:start="189:13" pos:end="189:14">-&gt;</operator><name pos:start="189:15" pos:end="189:21">has_rev</name></name></expr>)</condition> <block pos:start="189:24" pos:end="195:5">{<block_content pos:start="191:9" pos:end="193:25">

        <expr_stmt pos:start="191:9" pos:end="191:38"><expr pos:start="191:9" pos:end="191:37"><name pos:start="191:9" pos:end="191:25"><name pos:start="191:9" pos:end="191:15">ext_hdr</name><operator pos:start="191:16" pos:end="191:17">-&gt;</operator><name pos:start="191:18" pos:end="191:25">revision</name></name> <operator pos:start="191:27" pos:end="191:27">=</operator> <name pos:start="191:29" pos:end="191:37"><name pos:start="191:29" pos:end="191:32">hdrs</name><operator pos:start="191:33" pos:end="191:34">-&gt;</operator><name pos:start="191:35" pos:end="191:37">rev</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:25"><expr pos:start="193:9" pos:end="193:24"><operator pos:start="193:9" pos:end="193:10">++</operator><name pos:start="193:11" pos:end="193:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="199:5" pos:end="199:26"><expr pos:start="199:5" pos:end="199:25"><name pos:start="199:5" pos:end="199:21"><name pos:start="199:5" pos:end="199:11">ext_hdr</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:21">checksum</name></name> <operator pos:start="199:23" pos:end="199:23">=</operator> <literal type="number" pos:start="199:25" pos:end="199:25">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="203:5" pos:end="209:5"><if pos:start="203:5" pos:end="209:5">if <condition pos:start="203:8" pos:end="203:25">(<expr pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:24"><name pos:start="203:9" pos:end="203:12">hdrs</name><operator pos:start="203:13" pos:end="203:14">-&gt;</operator><name pos:start="203:15" pos:end="203:24">has_oem_id</name></name></expr>)</condition> <block pos:start="203:27" pos:end="209:5">{<block_content pos:start="205:9" pos:end="207:25">

        <expr_stmt pos:start="205:9" pos:end="205:71"><expr pos:start="205:9" pos:end="205:70"><call pos:start="205:9" pos:end="205:70"><name pos:start="205:9" pos:end="205:15">strncpy</name><argument_list pos:start="205:16" pos:end="205:70">(<argument pos:start="205:17" pos:end="205:31"><expr pos:start="205:17" pos:end="205:31"><name pos:start="205:17" pos:end="205:31"><name pos:start="205:17" pos:end="205:23">ext_hdr</name><operator pos:start="205:24" pos:end="205:25">-&gt;</operator><name pos:start="205:26" pos:end="205:31">oem_id</name></name></expr></argument>, <argument pos:start="205:34" pos:end="205:45"><expr pos:start="205:34" pos:end="205:45"><name pos:start="205:34" pos:end="205:45"><name pos:start="205:34" pos:end="205:37">hdrs</name><operator pos:start="205:38" pos:end="205:39">-&gt;</operator><name pos:start="205:40" pos:end="205:45">oem_id</name></name></expr></argument>, <argument pos:start="205:48" pos:end="205:69"><expr pos:start="205:48" pos:end="205:69"><sizeof pos:start="205:48" pos:end="205:69">sizeof <name pos:start="205:55" pos:end="205:69"><name pos:start="205:55" pos:end="205:61">ext_hdr</name><operator pos:start="205:62" pos:end="205:63">-&gt;</operator><name pos:start="205:64" pos:end="205:69">oem_id</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:25"><expr pos:start="207:9" pos:end="207:24"><operator pos:start="207:9" pos:end="207:10">++</operator><name pos:start="207:11" pos:end="207:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="211:5" pos:end="219:5"><if pos:start="211:5" pos:end="219:5">if <condition pos:start="211:8" pos:end="211:31">(<expr pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:30"><name pos:start="211:9" pos:end="211:12">hdrs</name><operator pos:start="211:13" pos:end="211:14">-&gt;</operator><name pos:start="211:15" pos:end="211:30">has_oem_table_id</name></name></expr>)</condition> <block pos:start="211:33" pos:end="219:5">{<block_content pos:start="213:9" pos:end="217:25">

        <expr_stmt pos:start="213:9" pos:end="215:46"><expr pos:start="213:9" pos:end="215:45"><call pos:start="213:9" pos:end="215:45"><name pos:start="213:9" pos:end="213:15">strncpy</name><argument_list pos:start="213:16" pos:end="215:45">(<argument pos:start="213:17" pos:end="213:37"><expr pos:start="213:17" pos:end="213:37"><name pos:start="213:17" pos:end="213:37"><name pos:start="213:17" pos:end="213:23">ext_hdr</name><operator pos:start="213:24" pos:end="213:25">-&gt;</operator><name pos:start="213:26" pos:end="213:37">oem_table_id</name></name></expr></argument>, <argument pos:start="213:40" pos:end="213:57"><expr pos:start="213:40" pos:end="213:57"><name pos:start="213:40" pos:end="213:57"><name pos:start="213:40" pos:end="213:43">hdrs</name><operator pos:start="213:44" pos:end="213:45">-&gt;</operator><name pos:start="213:46" pos:end="213:57">oem_table_id</name></name></expr></argument>,

                <argument pos:start="215:17" pos:end="215:44"><expr pos:start="215:17" pos:end="215:44"><sizeof pos:start="215:17" pos:end="215:44">sizeof <name pos:start="215:24" pos:end="215:44"><name pos:start="215:24" pos:end="215:30">ext_hdr</name><operator pos:start="215:31" pos:end="215:32">-&gt;</operator><name pos:start="215:33" pos:end="215:44">oem_table_id</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:25"><expr pos:start="217:9" pos:end="217:24"><operator pos:start="217:9" pos:end="217:10">++</operator><name pos:start="217:11" pos:end="217:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="221:5" pos:end="227:5"><if pos:start="221:5" pos:end="227:5">if <condition pos:start="221:8" pos:end="221:26">(<expr pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:25"><name pos:start="221:9" pos:end="221:12">hdrs</name><operator pos:start="221:13" pos:end="221:14">-&gt;</operator><name pos:start="221:15" pos:end="221:25">has_oem_rev</name></name></expr>)</condition> <block pos:start="221:28" pos:end="227:5">{<block_content pos:start="223:9" pos:end="225:25">

        <expr_stmt pos:start="223:9" pos:end="223:59"><expr pos:start="223:9" pos:end="223:58"><name pos:start="223:9" pos:end="223:29"><name pos:start="223:9" pos:end="223:15">ext_hdr</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:29">oem_revision</name></name> <operator pos:start="223:31" pos:end="223:31">=</operator> <call pos:start="223:33" pos:end="223:58"><name pos:start="223:33" pos:end="223:43">cpu_to_le32</name><argument_list pos:start="223:44" pos:end="223:58">(<argument pos:start="223:45" pos:end="223:57"><expr pos:start="223:45" pos:end="223:57"><name pos:start="223:45" pos:end="223:57"><name pos:start="223:45" pos:end="223:48">hdrs</name><operator pos:start="223:49" pos:end="223:50">-&gt;</operator><name pos:start="223:51" pos:end="223:57">oem_rev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="225:9" pos:end="225:25"><expr pos:start="225:9" pos:end="225:24"><operator pos:start="225:9" pos:end="225:10">++</operator><name pos:start="225:11" pos:end="225:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="229:5" pos:end="237:5"><if pos:start="229:5" pos:end="237:5">if <condition pos:start="229:8" pos:end="229:34">(<expr pos:start="229:9" pos:end="229:33"><name pos:start="229:9" pos:end="229:33"><name pos:start="229:9" pos:end="229:12">hdrs</name><operator pos:start="229:13" pos:end="229:14">-&gt;</operator><name pos:start="229:15" pos:end="229:33">has_asl_compiler_id</name></name></expr>)</condition> <block pos:start="229:36" pos:end="237:5">{<block_content pos:start="231:9" pos:end="235:25">

        <expr_stmt pos:start="231:9" pos:end="233:49"><expr pos:start="231:9" pos:end="233:48"><call pos:start="231:9" pos:end="233:48"><name pos:start="231:9" pos:end="231:15">strncpy</name><argument_list pos:start="231:16" pos:end="233:48">(<argument pos:start="231:17" pos:end="231:40"><expr pos:start="231:17" pos:end="231:40"><name pos:start="231:17" pos:end="231:40"><name pos:start="231:17" pos:end="231:23">ext_hdr</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:40">asl_compiler_id</name></name></expr></argument>, <argument pos:start="231:43" pos:end="231:63"><expr pos:start="231:43" pos:end="231:63"><name pos:start="231:43" pos:end="231:63"><name pos:start="231:43" pos:end="231:46">hdrs</name><operator pos:start="231:47" pos:end="231:48">-&gt;</operator><name pos:start="231:49" pos:end="231:63">asl_compiler_id</name></name></expr></argument>,

                <argument pos:start="233:17" pos:end="233:47"><expr pos:start="233:17" pos:end="233:47"><sizeof pos:start="233:17" pos:end="233:47">sizeof <name pos:start="233:24" pos:end="233:47"><name pos:start="233:24" pos:end="233:30">ext_hdr</name><operator pos:start="233:31" pos:end="233:32">-&gt;</operator><name pos:start="233:33" pos:end="233:47">asl_compiler_id</name></name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:25"><expr pos:start="235:9" pos:end="235:24"><operator pos:start="235:9" pos:end="235:10">++</operator><name pos:start="235:11" pos:end="235:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="239:5" pos:end="245:5"><if pos:start="239:5" pos:end="245:5">if <condition pos:start="239:8" pos:end="239:35">(<expr pos:start="239:9" pos:end="239:34"><name pos:start="239:9" pos:end="239:34"><name pos:start="239:9" pos:end="239:12">hdrs</name><operator pos:start="239:13" pos:end="239:14">-&gt;</operator><name pos:start="239:15" pos:end="239:34">has_asl_compiler_rev</name></name></expr>)</condition> <block pos:start="239:37" pos:end="245:5">{<block_content pos:start="241:9" pos:end="243:25">

        <expr_stmt pos:start="241:9" pos:end="241:77"><expr pos:start="241:9" pos:end="241:76"><name pos:start="241:9" pos:end="241:38"><name pos:start="241:9" pos:end="241:15">ext_hdr</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:38">asl_compiler_revision</name></name> <operator pos:start="241:40" pos:end="241:40">=</operator> <call pos:start="241:42" pos:end="241:76"><name pos:start="241:42" pos:end="241:52">cpu_to_le32</name><argument_list pos:start="241:53" pos:end="241:76">(<argument pos:start="241:54" pos:end="241:75"><expr pos:start="241:54" pos:end="241:75"><name pos:start="241:54" pos:end="241:75"><name pos:start="241:54" pos:end="241:57">hdrs</name><operator pos:start="241:58" pos:end="241:59">-&gt;</operator><name pos:start="241:60" pos:end="241:75">asl_compiler_rev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:25"><expr pos:start="243:9" pos:end="243:24"><operator pos:start="243:9" pos:end="243:10">++</operator><name pos:start="243:11" pos:end="243:24">changed_fields</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="249:5" pos:end="253:5"><if pos:start="249:5" pos:end="253:5">if <condition pos:start="249:8" pos:end="249:43">(<expr pos:start="249:9" pos:end="249:42"><operator pos:start="249:9" pos:end="249:9">!</operator><name pos:start="249:10" pos:end="249:19">has_header</name> <operator pos:start="249:21" pos:end="249:22">&amp;&amp;</operator> <name pos:start="249:24" pos:end="249:37">changed_fields</name> <operator pos:start="249:39" pos:end="249:40">==</operator> <literal type="number" pos:start="249:42" pos:end="249:42">0</literal></expr>)</condition> <block pos:start="249:45" pos:end="253:5">{<block_content pos:start="251:9" pos:end="251:60">

        <expr_stmt pos:start="251:9" pos:end="251:60"><expr pos:start="251:9" pos:end="251:59"><call pos:start="251:9" pos:end="251:59"><name pos:start="251:9" pos:end="251:19">warn_report</name><argument_list pos:start="251:20" pos:end="251:59">(<argument pos:start="251:21" pos:end="251:58"><expr pos:start="251:21" pos:end="251:58"><literal type="string" pos:start="251:21" pos:end="251:58">"ACPI table: no headers are specified"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="257:5" pos:end="257:30">/* recalculate checksum */</comment>

    <expr_stmt pos:start="259:5" pos:end="261:78"><expr pos:start="259:5" pos:end="261:77"><name pos:start="259:5" pos:end="259:21"><name pos:start="259:5" pos:end="259:11">ext_hdr</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:21">checksum</name></name> <operator pos:start="259:23" pos:end="259:23">=</operator> <call pos:start="259:25" pos:end="261:77"><name pos:start="259:25" pos:end="259:37">acpi_checksum</name><argument_list pos:start="259:38" pos:end="261:77">(<argument pos:start="259:39" pos:end="261:57"><expr pos:start="259:39" pos:end="261:57"><operator pos:start="259:39" pos:end="259:39">(</operator><specifier pos:start="259:40" pos:end="259:44">const</specifier> <name pos:start="259:46" pos:end="259:49">char</name> <name pos:start="259:51" pos:end="259:58">unsigned</name> <operator pos:start="259:60" pos:end="259:60">*</operator><operator pos:start="259:61" pos:end="259:61">)</operator><name pos:start="259:62" pos:end="259:68">ext_hdr</name> <operator pos:start="259:70" pos:end="259:70">+</operator>

                                      <name pos:start="261:39" pos:end="261:57">ACPI_TABLE_PFX_SIZE</name></expr></argument>, <argument pos:start="261:60" pos:end="261:76"><expr pos:start="261:60" pos:end="261:76"><name pos:start="261:60" pos:end="261:76">acpi_payload_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
