<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20113.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">unpack_vlcs</name><parameter_list pos:start="1:23" pos:end="7:36">(<parameter pos:start="1:24" pos:end="1:42"><decl pos:start="1:24" pos:end="1:42"><type pos:start="1:24" pos:end="1:42"><name pos:start="1:24" pos:end="1:39">Vp3DecodeContext</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">s</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:61"><decl pos:start="1:45" pos:end="1:61"><type pos:start="1:45" pos:end="1:61"><name pos:start="1:45" pos:end="1:57">GetBitContext</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">gb</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:34"><decl pos:start="3:25" pos:end="3:34"><type pos:start="3:25" pos:end="3:34"><name pos:start="3:25" pos:end="3:27">VLC</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type><name pos:start="3:30" pos:end="3:34">table</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:51"><decl pos:start="3:37" pos:end="3:51"><type pos:start="3:37" pos:end="3:51"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:51">coeff_index</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:42"><decl pos:start="5:25" pos:end="5:42"><type pos:start="5:25" pos:end="5:42"><name pos:start="5:25" pos:end="5:27">int</name></type> <name pos:start="5:29" pos:end="5:42">first_fragment</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:61"><decl pos:start="5:45" pos:end="5:61"><type pos:start="5:45" pos:end="5:61"><name pos:start="5:45" pos:end="5:47">int</name></type> <name pos:start="5:49" pos:end="5:61">last_fragment</name></decl></parameter>,

                        <parameter pos:start="7:25" pos:end="7:35"><decl pos:start="7:25" pos:end="7:35"><type pos:start="7:25" pos:end="7:35"><name pos:start="7:25" pos:end="7:27">int</name></type> <name pos:start="7:29" pos:end="7:35">eob_run</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="133:1">{<block_content pos:start="11:5" pos:end="131:19">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">token</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">zero_run</name> <init pos:start="15:18" pos:end="15:20">= <expr pos:start="15:20" pos:end="15:20"><literal type="number" pos:start="15:20" pos:end="15:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">DCTELEM</name></type> <name pos:start="17:13" pos:end="17:17">coeff</name> <init pos:start="17:19" pos:end="17:21">= <expr pos:start="17:21" pos:end="17:21"><literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:26"><decl pos:start="19:5" pos:end="19:25"><type pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:15">Vp3Fragment</name> <modifier pos:start="19:17" pos:end="19:17">*</modifier></type><name pos:start="19:18" pos:end="19:25">fragment</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:43"><decl pos:start="21:5" pos:end="21:42"><type pos:start="21:5" pos:end="21:13"><name pos:start="21:5" pos:end="21:11">uint8_t</name> <modifier pos:start="21:13" pos:end="21:13">*</modifier></type><name pos:start="21:14" pos:end="21:17">perm</name><init pos:start="21:18" pos:end="21:42">= <expr pos:start="21:20" pos:end="21:42"><name pos:start="21:20" pos:end="21:42"><name pos:start="21:20" pos:end="21:20">s</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:31">scantable</name><operator pos:start="21:32" pos:end="21:32">.</operator><name pos:start="21:33" pos:end="21:42">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:20"><decl pos:start="23:5" pos:end="23:19"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:19">bits_to_get</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="39:5">if <condition pos:start="27:8" pos:end="29:45">(<expr pos:start="27:9" pos:end="29:44"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:23">first_fragment</name> <operator pos:start="27:25" pos:end="27:26">&gt;=</operator> <name pos:start="27:28" pos:end="27:44"><name pos:start="27:28" pos:end="27:28">s</name><operator pos:start="27:29" pos:end="27:30">-&gt;</operator><name pos:start="27:31" pos:end="27:44">fragment_count</name></name><operator pos:start="27:45" pos:end="27:45">)</operator> <operator pos:start="27:47" pos:end="27:48">||</operator>

        <operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:22">last_fragment</name> <operator pos:start="29:24" pos:end="29:25">&gt;=</operator> <name pos:start="29:27" pos:end="29:43"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:43">fragment_count</name></name><operator pos:start="29:44" pos:end="29:44">)</operator></expr>)</condition> <block pos:start="29:47" pos:end="39:5">{<block_content pos:start="33:9" pos:end="37:17">



        <expr_stmt pos:start="33:9" pos:end="35:43"><expr pos:start="33:9" pos:end="35:42"><call pos:start="33:9" pos:end="35:42"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="35:42">(<argument pos:start="33:16" pos:end="33:23"><expr pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:23"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:23">avctx</name></name></expr></argument>, <argument pos:start="33:26" pos:end="33:37"><expr pos:start="33:26" pos:end="33:37"><name pos:start="33:26" pos:end="33:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:40" pos:end="33:96"><expr pos:start="33:40" pos:end="33:96"><literal type="string" pos:start="33:40" pos:end="33:96">"  vp3:unpack_vlcs(): bad fragment number (%d -&gt; %d ?)\n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:26"><expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:26">first_fragment</name></expr></argument>, <argument pos:start="35:29" pos:end="35:41"><expr pos:start="35:29" pos:end="35:41"><name pos:start="35:29" pos:end="35:41">last_fragment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="37:9" pos:end="37:17">return <expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="43:5" pos:end="127:5">for <control pos:start="43:9" pos:end="43:53">(<init pos:start="43:10" pos:end="43:28"><expr pos:start="43:10" pos:end="43:27"><name pos:start="43:10" pos:end="43:10">i</name> <operator pos:start="43:12" pos:end="43:12">=</operator> <name pos:start="43:14" pos:end="43:27">first_fragment</name></expr>;</init> <condition pos:start="43:30" pos:end="43:48"><expr pos:start="43:30" pos:end="43:47"><name pos:start="43:30" pos:end="43:30">i</name> <operator pos:start="43:32" pos:end="43:33">&lt;=</operator> <name pos:start="43:35" pos:end="43:47">last_fragment</name></expr>;</condition> <incr pos:start="43:50" pos:end="43:52"><expr pos:start="43:50" pos:end="43:52"><name pos:start="43:50" pos:end="43:50">i</name><operator pos:start="43:51" pos:end="43:52">++</operator></expr></incr>)</control> <block pos:start="43:55" pos:end="127:5">{<block_content pos:start="45:9" pos:end="125:9">

        <decl_stmt pos:start="45:9" pos:end="45:53"><decl pos:start="45:9" pos:end="45:52"><type pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">int</name></type> <name pos:start="45:13" pos:end="45:24">fragment_num</name> <init pos:start="45:26" pos:end="45:52">= <expr pos:start="45:28" pos:end="45:52"><name pos:start="45:28" pos:end="45:52"><name pos:start="45:28" pos:end="45:28">s</name><operator pos:start="45:29" pos:end="45:30">-&gt;</operator><name pos:start="45:31" pos:end="45:49">coded_fragment_list</name><index pos:start="45:50" pos:end="45:52">[<expr pos:start="45:51" pos:end="45:51"><name pos:start="45:51" pos:end="45:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="49:9" pos:end="51:21"><if pos:start="49:9" pos:end="51:21">if <condition pos:start="49:12" pos:end="49:56">(<expr pos:start="49:13" pos:end="49:55"><name pos:start="49:13" pos:end="49:41"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:27">coeff_counts</name><index pos:start="49:28" pos:end="49:41">[<expr pos:start="49:29" pos:end="49:40"><name pos:start="49:29" pos:end="49:40">fragment_num</name></expr>]</index></name> <operator pos:start="49:43" pos:end="49:43">&gt;</operator> <name pos:start="49:45" pos:end="49:55">coeff_index</name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:21"><block_content pos:start="51:13" pos:end="51:21">

            <continue pos:start="51:13" pos:end="51:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:51"><expr pos:start="53:9" pos:end="53:50"><name pos:start="53:9" pos:end="53:16">fragment</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:50"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:36">all_fragments</name><index pos:start="53:37" pos:end="53:50">[<expr pos:start="53:38" pos:end="53:49"><name pos:start="53:38" pos:end="53:49">fragment_num</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="97:9"><if pos:start="57:9" pos:end="97:9">if <condition pos:start="57:12" pos:end="57:21">(<expr pos:start="57:13" pos:end="57:20"><operator pos:start="57:13" pos:end="57:13">!</operator><name pos:start="57:14" pos:end="57:20">eob_run</name></expr>)</condition> <block pos:start="57:23" pos:end="97:9">{<block_content pos:start="61:13" pos:end="95:13">

            <comment type="block" pos:start="59:13" pos:end="59:43">/* decode a VLC into a token */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:53"><expr pos:start="61:13" pos:end="61:52"><name pos:start="61:13" pos:end="61:17">token</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <call pos:start="61:21" pos:end="61:52"><name pos:start="61:21" pos:end="61:28">get_vlc2</name><argument_list pos:start="61:29" pos:end="61:52">(<argument pos:start="61:30" pos:end="61:31"><expr pos:start="61:30" pos:end="61:31"><name pos:start="61:30" pos:end="61:31">gb</name></expr></argument>, <argument pos:start="61:34" pos:end="61:45"><expr pos:start="61:34" pos:end="61:45"><name pos:start="61:34" pos:end="61:45"><name pos:start="61:34" pos:end="61:38">table</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:45">table</name></name></expr></argument>, <argument pos:start="61:48" pos:end="61:48"><expr pos:start="61:48" pos:end="61:48"><literal type="number" pos:start="61:48" pos:end="61:48">5</literal></expr></argument>, <argument pos:start="61:51" pos:end="61:51"><expr pos:start="61:51" pos:end="61:51"><literal type="number" pos:start="61:51" pos:end="61:51">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="63:13" pos:end="63:80">/* use the token to get a zero run, a coefficient, and an eob run */</comment>

            <if_stmt pos:start="65:13" pos:end="95:13"><if pos:start="65:13" pos:end="75:13">if <condition pos:start="65:16" pos:end="65:27">(<expr pos:start="65:17" pos:end="65:26"><name pos:start="65:17" pos:end="65:21">token</name> <operator pos:start="65:23" pos:end="65:24">&lt;=</operator> <literal type="number" pos:start="65:26" pos:end="65:26">6</literal></expr>)</condition> <block pos:start="65:29" pos:end="75:13">{<block_content pos:start="67:17" pos:end="73:37">

                <expr_stmt pos:start="67:17" pos:end="67:46"><expr pos:start="67:17" pos:end="67:45"><name pos:start="67:17" pos:end="67:23">eob_run</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:45"><name pos:start="67:27" pos:end="67:38">eob_run_base</name><index pos:start="67:39" pos:end="67:45">[<expr pos:start="67:40" pos:end="67:44"><name pos:start="67:40" pos:end="67:44">token</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="69:17" pos:end="71:69"><if pos:start="69:17" pos:end="71:69">if <condition pos:start="69:20" pos:end="69:44">(<expr pos:start="69:21" pos:end="69:43"><name pos:start="69:21" pos:end="69:43"><name pos:start="69:21" pos:end="69:36">eob_run_get_bits</name><index pos:start="69:37" pos:end="69:43">[<expr pos:start="69:38" pos:end="69:42"><name pos:start="69:38" pos:end="69:42">token</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="71:21" pos:end="71:69"><block_content pos:start="71:21" pos:end="71:69">

                    <expr_stmt pos:start="71:21" pos:end="71:69"><expr pos:start="71:21" pos:end="71:68"><name pos:start="71:21" pos:end="71:27">eob_run</name> <operator pos:start="71:29" pos:end="71:30">+=</operator> <call pos:start="71:32" pos:end="71:68"><name pos:start="71:32" pos:end="71:39">get_bits</name><argument_list pos:start="71:40" pos:end="71:68">(<argument pos:start="71:41" pos:end="71:42"><expr pos:start="71:41" pos:end="71:42"><name pos:start="71:41" pos:end="71:42">gb</name></expr></argument>, <argument pos:start="71:45" pos:end="71:67"><expr pos:start="71:45" pos:end="71:67"><name pos:start="71:45" pos:end="71:67"><name pos:start="71:45" pos:end="71:60">eob_run_get_bits</name><index pos:start="71:61" pos:end="71:67">[<expr pos:start="71:62" pos:end="71:66"><name pos:start="71:62" pos:end="71:66">token</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="73:17" pos:end="73:37"><expr pos:start="73:17" pos:end="73:36"><name pos:start="73:17" pos:end="73:21">coeff</name> <operator pos:start="73:23" pos:end="73:23">=</operator> <name pos:start="73:25" pos:end="73:32">zero_run</name> <operator pos:start="73:34" pos:end="73:34">=</operator> <literal type="number" pos:start="73:36" pos:end="73:36">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="75:15" pos:end="95:13">else <block pos:start="75:20" pos:end="95:13">{<block_content pos:start="77:17" pos:end="93:71">

                <expr_stmt pos:start="77:17" pos:end="77:52"><expr pos:start="77:17" pos:end="77:51"><name pos:start="77:17" pos:end="77:27">bits_to_get</name> <operator pos:start="77:29" pos:end="77:29">=</operator> <name pos:start="77:31" pos:end="77:51"><name pos:start="77:31" pos:end="77:44">coeff_get_bits</name><index pos:start="77:45" pos:end="77:51">[<expr pos:start="77:46" pos:end="77:50"><name pos:start="77:46" pos:end="77:50">token</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="79:17" pos:end="85:75"><if pos:start="79:17" pos:end="81:51">if <condition pos:start="79:20" pos:end="79:33">(<expr pos:start="79:21" pos:end="79:32"><operator pos:start="79:21" pos:end="79:21">!</operator><name pos:start="79:22" pos:end="79:32">bits_to_get</name></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:51"><block_content pos:start="81:21" pos:end="81:51">

                    <expr_stmt pos:start="81:21" pos:end="81:51"><expr pos:start="81:21" pos:end="81:50"><name pos:start="81:21" pos:end="81:25">coeff</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <name pos:start="81:29" pos:end="81:50"><name pos:start="81:29" pos:end="81:40">coeff_tables</name><index pos:start="81:41" pos:end="81:47">[<expr pos:start="81:42" pos:end="81:46"><name pos:start="81:42" pos:end="81:46">token</name></expr>]</index><index pos:start="81:48" pos:end="81:50">[<expr pos:start="81:49" pos:end="81:49"><literal type="number" pos:start="81:49" pos:end="81:49">0</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="83:17" pos:end="85:75">else<block type="pseudo" pos:start="85:21" pos:end="85:75"><block_content pos:start="85:21" pos:end="85:75">

                    <expr_stmt pos:start="85:21" pos:end="85:75"><expr pos:start="85:21" pos:end="85:74"><name pos:start="85:21" pos:end="85:25">coeff</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <name pos:start="85:29" pos:end="85:74"><name pos:start="85:29" pos:end="85:40">coeff_tables</name><index pos:start="85:41" pos:end="85:47">[<expr pos:start="85:42" pos:end="85:46"><name pos:start="85:42" pos:end="85:46">token</name></expr>]</index><index pos:start="85:48" pos:end="85:74">[<expr pos:start="85:49" pos:end="85:73"><call pos:start="85:49" pos:end="85:73"><name pos:start="85:49" pos:end="85:56">get_bits</name><argument_list pos:start="85:57" pos:end="85:73">(<argument pos:start="85:58" pos:end="85:59"><expr pos:start="85:58" pos:end="85:59"><name pos:start="85:58" pos:end="85:59">gb</name></expr></argument>, <argument pos:start="85:62" pos:end="85:72"><expr pos:start="85:62" pos:end="85:72"><name pos:start="85:62" pos:end="85:72">bits_to_get</name></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



                <expr_stmt pos:start="89:17" pos:end="89:48"><expr pos:start="89:17" pos:end="89:47"><name pos:start="89:17" pos:end="89:24">zero_run</name> <operator pos:start="89:26" pos:end="89:26">=</operator> <name pos:start="89:28" pos:end="89:47"><name pos:start="89:28" pos:end="89:40">zero_run_base</name><index pos:start="89:41" pos:end="89:47">[<expr pos:start="89:42" pos:end="89:46"><name pos:start="89:42" pos:end="89:46">token</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="91:17" pos:end="93:71"><if pos:start="91:17" pos:end="93:71">if <condition pos:start="91:20" pos:end="91:45">(<expr pos:start="91:21" pos:end="91:44"><name pos:start="91:21" pos:end="91:44"><name pos:start="91:21" pos:end="91:37">zero_run_get_bits</name><index pos:start="91:38" pos:end="91:44">[<expr pos:start="91:39" pos:end="91:43"><name pos:start="91:39" pos:end="91:43">token</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="93:21" pos:end="93:71"><block_content pos:start="93:21" pos:end="93:71">

                    <expr_stmt pos:start="93:21" pos:end="93:71"><expr pos:start="93:21" pos:end="93:70"><name pos:start="93:21" pos:end="93:28">zero_run</name> <operator pos:start="93:30" pos:end="93:31">+=</operator> <call pos:start="93:33" pos:end="93:70"><name pos:start="93:33" pos:end="93:40">get_bits</name><argument_list pos:start="93:41" pos:end="93:70">(<argument pos:start="93:42" pos:end="93:43"><expr pos:start="93:42" pos:end="93:43"><name pos:start="93:42" pos:end="93:43">gb</name></expr></argument>, <argument pos:start="93:46" pos:end="93:69"><expr pos:start="93:46" pos:end="93:69"><name pos:start="93:46" pos:end="93:69"><name pos:start="93:46" pos:end="93:62">zero_run_get_bits</name><index pos:start="93:63" pos:end="93:69">[<expr pos:start="93:64" pos:end="93:68"><name pos:start="93:64" pos:end="93:68">token</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="101:9" pos:end="125:9"><if pos:start="101:9" pos:end="119:9">if <condition pos:start="101:12" pos:end="101:21">(<expr pos:start="101:13" pos:end="101:20"><operator pos:start="101:13" pos:end="101:13">!</operator><name pos:start="101:14" pos:end="101:20">eob_run</name></expr>)</condition> <block pos:start="101:23" pos:end="119:9">{<block_content pos:start="103:13" pos:end="117:13">

            <expr_stmt pos:start="103:13" pos:end="103:54"><expr pos:start="103:13" pos:end="103:53"><name pos:start="103:13" pos:end="103:41"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:27">coeff_counts</name><index pos:start="103:28" pos:end="103:41">[<expr pos:start="103:29" pos:end="103:40"><name pos:start="103:29" pos:end="103:40">fragment_num</name></expr>]</index></name> <operator pos:start="103:43" pos:end="103:44">+=</operator> <name pos:start="103:46" pos:end="103:53">zero_run</name></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="117:13"><if pos:start="105:13" pos:end="117:13">if <condition pos:start="105:16" pos:end="105:51">(<expr pos:start="105:17" pos:end="105:50"><name pos:start="105:17" pos:end="105:45"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:31">coeff_counts</name><index pos:start="105:32" pos:end="105:45">[<expr pos:start="105:33" pos:end="105:44"><name pos:start="105:33" pos:end="105:44">fragment_num</name></expr>]</index></name> <operator pos:start="105:47" pos:end="105:47">&lt;</operator> <literal type="number" pos:start="105:49" pos:end="105:50">64</literal></expr>)</condition><block pos:start="105:52" pos:end="117:13">{<block_content pos:start="107:17" pos:end="115:54">

                <expr_stmt pos:start="107:17" pos:end="107:51"><expr pos:start="107:17" pos:end="107:50"><name pos:start="107:17" pos:end="107:43"><name pos:start="107:17" pos:end="107:24">fragment</name><operator pos:start="107:25" pos:end="107:26">-&gt;</operator><name pos:start="107:27" pos:end="107:36">next_coeff</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:43">coeff</name></name><operator pos:start="107:44" pos:end="107:44">=</operator> <name pos:start="107:46" pos:end="107:50">coeff</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:83"><expr pos:start="109:17" pos:end="109:82"><name pos:start="109:17" pos:end="109:43"><name pos:start="109:17" pos:end="109:24">fragment</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:36">next_coeff</name><operator pos:start="109:37" pos:end="109:38">-&gt;</operator><name pos:start="109:39" pos:end="109:43">index</name></name><operator pos:start="109:44" pos:end="109:44">=</operator> <name pos:start="109:46" pos:end="109:82"><name pos:start="109:46" pos:end="109:49">perm</name><index pos:start="109:50" pos:end="109:82">[<expr pos:start="109:51" pos:end="109:81"><name pos:start="109:51" pos:end="109:79"><name pos:start="109:51" pos:end="109:51">s</name><operator pos:start="109:52" pos:end="109:53">-&gt;</operator><name pos:start="109:54" pos:end="109:65">coeff_counts</name><index pos:start="109:66" pos:end="109:79">[<expr pos:start="109:67" pos:end="109:78"><name pos:start="109:67" pos:end="109:78">fragment_num</name></expr>]</index></name><operator pos:start="109:80" pos:end="109:81">++</operator></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="109:85" pos:end="109:110">//FIXME perm here already?</comment>

                <expr_stmt pos:start="111:17" pos:end="111:58"><expr pos:start="111:17" pos:end="111:57"><name pos:start="111:17" pos:end="111:42"><name pos:start="111:17" pos:end="111:24">fragment</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:36">next_coeff</name><operator pos:start="111:37" pos:end="111:38">-&gt;</operator><name pos:start="111:39" pos:end="111:42">next</name></name><operator pos:start="111:43" pos:end="111:43">=</operator> <name pos:start="111:45" pos:end="111:57"><name pos:start="111:45" pos:end="111:45">s</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:57">next_coeff</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:41"><expr pos:start="113:17" pos:end="113:40"><name pos:start="113:17" pos:end="113:35"><name pos:start="113:17" pos:end="113:17">s</name><operator pos:start="113:18" pos:end="113:19">-&gt;</operator><name pos:start="113:20" pos:end="113:29">next_coeff</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:35">next</name></name><operator pos:start="113:36" pos:end="113:36">=</operator><name pos:start="113:37" pos:end="113:40">NULL</name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:54"><expr pos:start="115:17" pos:end="115:53"><name pos:start="115:17" pos:end="115:36"><name pos:start="115:17" pos:end="115:24">fragment</name><operator pos:start="115:25" pos:end="115:26">-&gt;</operator><name pos:start="115:27" pos:end="115:36">next_coeff</name></name><operator pos:start="115:37" pos:end="115:37">=</operator> <name pos:start="115:39" pos:end="115:51"><name pos:start="115:39" pos:end="115:39">s</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:51">next_coeff</name></name><operator pos:start="115:52" pos:end="115:53">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="119:11" pos:end="125:9">else <block pos:start="119:16" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:22">

            <expr_stmt pos:start="121:13" pos:end="121:49"><expr pos:start="121:13" pos:end="121:48"><name pos:start="121:13" pos:end="121:41"><name pos:start="121:13" pos:end="121:13">s</name><operator pos:start="121:14" pos:end="121:15">-&gt;</operator><name pos:start="121:16" pos:end="121:27">coeff_counts</name><index pos:start="121:28" pos:end="121:41">[<expr pos:start="121:29" pos:end="121:40"><name pos:start="121:29" pos:end="121:40">fragment_num</name></expr>]</index></name> <operator pos:start="121:43" pos:end="121:44">|=</operator> <literal type="number" pos:start="121:46" pos:end="121:48">128</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:22"><expr pos:start="123:13" pos:end="123:21"><name pos:start="123:13" pos:end="123:19">eob_run</name><operator pos:start="123:20" pos:end="123:21">--</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <return pos:start="131:5" pos:end="131:19">return <expr pos:start="131:12" pos:end="131:18"><name pos:start="131:12" pos:end="131:18">eob_run</name></expr>;</return>

</block_content>}</block></function>
</unit>
