<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1556.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:28">ecc_mem_read</name><parameter_list pos:start="1:29" pos:end="3:43">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:66"><decl pos:start="1:44" pos:end="1:66"><type pos:start="1:44" pos:end="1:66"><name pos:start="1:44" pos:end="1:61">target_phys_addr_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:42"><decl pos:start="3:30" pos:end="3:42"><type pos:start="3:30" pos:end="3:42"><name pos:start="3:30" pos:end="3:37">unsigned</name></type> <name pos:start="3:39" pos:end="3:42">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="7:5" pos:end="89:15">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">ECCState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:24">= <expr pos:start="7:19" pos:end="7:24"><name pos:start="7:19" pos:end="7:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">ret</name> <init pos:start="9:18" pos:end="9:20">= <expr pos:start="9:20" pos:end="9:20"><literal type="number" pos:start="9:20" pos:end="9:20">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="87:5">switch <condition pos:start="13:12" pos:end="13:22">(<expr pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:16">addr</name> <operator pos:start="13:18" pos:end="13:19">&gt;&gt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>)</condition> <block pos:start="13:24" pos:end="87:5">{<block_content pos:start="15:5" pos:end="85:14">

    <case pos:start="15:5" pos:end="15:17">case <expr pos:start="15:10" pos:end="15:16"><name pos:start="15:10" pos:end="15:16">ECC_MER</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:31"><expr pos:start="17:9" pos:end="17:30"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:30"><name pos:start="17:15" pos:end="17:15">s</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:21">regs</name><index pos:start="17:22" pos:end="17:30">[<expr pos:start="17:23" pos:end="17:29"><name pos:start="17:23" pos:end="17:29">ECC_MER</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:37"><expr pos:start="19:9" pos:end="19:36"><call pos:start="19:9" pos:end="19:36"><name pos:start="19:9" pos:end="19:31">trace_ecc_mem_readl_mer</name><argument_list pos:start="19:32" pos:end="19:36">(<argument pos:start="19:33" pos:end="19:35"><expr pos:start="19:33" pos:end="19:35"><name pos:start="19:33" pos:end="19:35">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:17">case <expr pos:start="23:10" pos:end="23:16"><name pos:start="23:10" pos:end="23:16">ECC_MDR</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:31"><expr pos:start="25:9" pos:end="25:30"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:30"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:21">regs</name><index pos:start="25:22" pos:end="25:30">[<expr pos:start="25:23" pos:end="25:29"><name pos:start="25:23" pos:end="25:29">ECC_MDR</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:37"><expr pos:start="27:9" pos:end="27:36"><call pos:start="27:9" pos:end="27:36"><name pos:start="27:9" pos:end="27:31">trace_ecc_mem_readl_mdr</name><argument_list pos:start="27:32" pos:end="27:36">(<argument pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:35">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>

    <case pos:start="31:5" pos:end="31:18">case <expr pos:start="31:10" pos:end="31:17"><name pos:start="31:10" pos:end="31:17">ECC_MFSR</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:32"><expr pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <name pos:start="33:15" pos:end="33:31"><name pos:start="33:15" pos:end="33:15">s</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:21">regs</name><index pos:start="33:22" pos:end="33:31">[<expr pos:start="33:23" pos:end="33:30"><name pos:start="33:23" pos:end="33:30">ECC_MFSR</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:38"><expr pos:start="35:9" pos:end="35:37"><call pos:start="35:9" pos:end="35:37"><name pos:start="35:9" pos:end="35:32">trace_ecc_mem_readl_mfsr</name><argument_list pos:start="35:33" pos:end="35:37">(<argument pos:start="35:34" pos:end="35:36"><expr pos:start="35:34" pos:end="35:36"><name pos:start="35:34" pos:end="35:36">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:17">case <expr pos:start="39:10" pos:end="39:16"><name pos:start="39:10" pos:end="39:16">ECC_VCR</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:30"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:21">regs</name><index pos:start="41:22" pos:end="41:30">[<expr pos:start="41:23" pos:end="41:29"><name pos:start="41:23" pos:end="41:29">ECC_VCR</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:37"><expr pos:start="43:9" pos:end="43:36"><call pos:start="43:9" pos:end="43:36"><name pos:start="43:9" pos:end="43:31">trace_ecc_mem_readl_vcr</name><argument_list pos:start="43:32" pos:end="43:36">(<argument pos:start="43:33" pos:end="43:35"><expr pos:start="43:33" pos:end="43:35"><name pos:start="43:33" pos:end="43:35">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:19">case <expr pos:start="47:10" pos:end="47:18"><name pos:start="47:10" pos:end="47:18">ECC_MFAR0</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:33"><expr pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <name pos:start="49:15" pos:end="49:32"><name pos:start="49:15" pos:end="49:15">s</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:21">regs</name><index pos:start="49:22" pos:end="49:32">[<expr pos:start="49:23" pos:end="49:31"><name pos:start="49:23" pos:end="49:31">ECC_MFAR0</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><call pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:33">trace_ecc_mem_readl_mfar0</name><argument_list pos:start="51:34" pos:end="51:38">(<argument pos:start="51:35" pos:end="51:37"><expr pos:start="51:35" pos:end="51:37"><name pos:start="51:35" pos:end="51:37">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:19">case <expr pos:start="55:10" pos:end="55:18"><name pos:start="55:10" pos:end="55:18">ECC_MFAR1</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:33"><expr pos:start="57:9" pos:end="57:32"><name pos:start="57:9" pos:end="57:11">ret</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <name pos:start="57:15" pos:end="57:32"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:21">regs</name><index pos:start="57:22" pos:end="57:32">[<expr pos:start="57:23" pos:end="57:31"><name pos:start="57:23" pos:end="57:31">ECC_MFAR1</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:39"><expr pos:start="59:9" pos:end="59:38"><call pos:start="59:9" pos:end="59:38"><name pos:start="59:9" pos:end="59:33">trace_ecc_mem_readl_mfar1</name><argument_list pos:start="59:34" pos:end="59:38">(<argument pos:start="59:35" pos:end="59:37"><expr pos:start="59:35" pos:end="59:37"><name pos:start="59:35" pos:end="59:37">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:16">case <expr pos:start="63:10" pos:end="63:15"><name pos:start="63:10" pos:end="63:15">ECC_DR</name></expr>:</case>

        <expr_stmt pos:start="65:9" pos:end="65:30"><expr pos:start="65:9" pos:end="65:29"><name pos:start="65:9" pos:end="65:11">ret</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:29"><name pos:start="65:15" pos:end="65:15">s</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:21">regs</name><index pos:start="65:22" pos:end="65:29">[<expr pos:start="65:23" pos:end="65:28"><name pos:start="65:23" pos:end="65:28">ECC_DR</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:36"><expr pos:start="67:9" pos:end="67:35"><call pos:start="67:9" pos:end="67:35"><name pos:start="67:9" pos:end="67:30">trace_ecc_mem_readl_dr</name><argument_list pos:start="67:31" pos:end="67:35">(<argument pos:start="67:32" pos:end="67:34"><expr pos:start="67:32" pos:end="67:34"><name pos:start="67:32" pos:end="67:34">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:18">case <expr pos:start="71:10" pos:end="71:17"><name pos:start="71:10" pos:end="71:17">ECC_ECR0</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:32"><expr pos:start="73:9" pos:end="73:31"><name pos:start="73:9" pos:end="73:11">ret</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <name pos:start="73:15" pos:end="73:31"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:21">regs</name><index pos:start="73:22" pos:end="73:31">[<expr pos:start="73:23" pos:end="73:30"><name pos:start="73:23" pos:end="73:30">ECC_ECR0</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:38"><expr pos:start="75:9" pos:end="75:37"><call pos:start="75:9" pos:end="75:37"><name pos:start="75:9" pos:end="75:32">trace_ecc_mem_readl_ecr0</name><argument_list pos:start="75:33" pos:end="75:37">(<argument pos:start="75:34" pos:end="75:36"><expr pos:start="75:34" pos:end="75:36"><name pos:start="75:34" pos:end="75:36">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:18">case <expr pos:start="79:10" pos:end="79:17"><name pos:start="79:10" pos:end="79:17">ECC_ECR1</name></expr>:</case>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <name pos:start="81:15" pos:end="81:31"><name pos:start="81:15" pos:end="81:15">s</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:21">regs</name><index pos:start="81:22" pos:end="81:31">[<expr pos:start="81:23" pos:end="81:30"><name pos:start="81:23" pos:end="81:30">ECC_ECR0</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:38"><expr pos:start="83:9" pos:end="83:37"><call pos:start="83:9" pos:end="83:37"><name pos:start="83:9" pos:end="83:32">trace_ecc_mem_readl_ecr1</name><argument_list pos:start="83:33" pos:end="83:37">(<argument pos:start="83:34" pos:end="83:36"><expr pos:start="83:34" pos:end="83:36"><name pos:start="83:34" pos:end="83:36">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="85:9" pos:end="85:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="89:5" pos:end="89:15">return <expr pos:start="89:12" pos:end="89:14"><name pos:start="89:12" pos:end="89:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
