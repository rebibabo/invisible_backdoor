<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15070.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">trigger_prot_fault</name><parameter_list pos:start="1:31" pos:end="3:62">(<parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><name pos:start="1:32" pos:end="1:44">CPUS390XState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:69"><decl pos:start="1:52" pos:end="1:69"><type pos:start="1:52" pos:end="1:69"><name pos:start="1:52" pos:end="1:63">target_ulong</name></type> <name pos:start="1:65" pos:end="1:69">vaddr</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:43"><decl pos:start="3:32" pos:end="3:43"><type pos:start="3:32" pos:end="3:43"><name pos:start="3:32" pos:end="3:39">uint64_t</name></type> <name pos:start="3:41" pos:end="3:43">asc</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:51"><decl pos:start="3:46" pos:end="3:51"><type pos:start="3:46" pos:end="3:51"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:51">rw</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:61"><decl pos:start="3:54" pos:end="3:61"><type pos:start="3:54" pos:end="3:61"><name pos:start="3:54" pos:end="3:57">bool</name></type> <name pos:start="3:59" pos:end="3:61">exc</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:71">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">tec</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:78"><expr pos:start="11:5" pos:end="11:77"><name pos:start="11:5" pos:end="11:7">tec</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <name pos:start="11:11" pos:end="11:15">vaddr</name> <operator pos:start="11:17" pos:end="11:17">|</operator> <operator pos:start="11:19" pos:end="11:19">(</operator><ternary pos:start="11:20" pos:end="11:60"><condition pos:start="11:20" pos:end="11:41"><expr pos:start="11:20" pos:end="11:39"><name pos:start="11:20" pos:end="11:21">rw</name> <operator pos:start="11:23" pos:end="11:24">==</operator> <name pos:start="11:26" pos:end="11:39">MMU_DATA_STORE</name></expr> ?</condition><then pos:start="11:43" pos:end="11:50"> <expr pos:start="11:43" pos:end="11:50"><name pos:start="11:43" pos:end="11:50">FS_WRITE</name></expr> </then><else pos:start="11:52" pos:end="11:60">: <expr pos:start="11:54" pos:end="11:60"><name pos:start="11:54" pos:end="11:60">FS_READ</name></expr></else></ternary><operator pos:start="11:61" pos:end="11:61">)</operator> <operator pos:start="11:63" pos:end="11:63">|</operator> <literal type="number" pos:start="11:65" pos:end="11:65">4</literal> <operator pos:start="11:67" pos:end="11:67">|</operator> <name pos:start="11:69" pos:end="11:71">asc</name> <operator pos:start="11:73" pos:end="11:74">&gt;&gt;</operator> <literal type="number" pos:start="11:76" pos:end="11:77">46</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:66"><expr pos:start="15:5" pos:end="15:65"><call pos:start="15:5" pos:end="15:65"><name pos:start="15:5" pos:end="15:11">DPRINTF</name><argument_list pos:start="15:12" pos:end="15:65">(<argument pos:start="15:13" pos:end="15:49"><expr pos:start="15:13" pos:end="15:49"><literal type="string" pos:start="15:13" pos:end="15:37">"%s: trans_exc_code=%016"</literal> <name pos:start="15:39" pos:end="15:44">PRIx64</name> <literal type="string" pos:start="15:46" pos:end="15:49">"\n"</literal></expr></argument>, <argument pos:start="15:52" pos:end="15:59"><expr pos:start="15:52" pos:end="15:59"><name pos:start="15:52" pos:end="15:59">__func__</name></expr></argument>, <argument pos:start="15:62" pos:end="15:64"><expr pos:start="15:62" pos:end="15:64"><name pos:start="15:62" pos:end="15:64">tec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:13">(<expr pos:start="19:9" pos:end="19:12"><operator pos:start="19:9" pos:end="19:9">!</operator><name pos:start="19:10" pos:end="19:12">exc</name></expr>)</condition> <block pos:start="19:15" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:15">

        <return pos:start="21:9" pos:end="21:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:71"><expr pos:start="27:5" pos:end="27:70"><call pos:start="27:5" pos:end="27:70"><name pos:start="27:5" pos:end="27:28">trigger_access_exception</name><argument_list pos:start="27:29" pos:end="27:70">(<argument pos:start="27:30" pos:end="27:32"><expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">env</name></expr></argument>, <argument pos:start="27:35" pos:end="27:48"><expr pos:start="27:35" pos:end="27:48"><name pos:start="27:35" pos:end="27:48">PGM_PROTECTION</name></expr></argument>, <argument pos:start="27:51" pos:end="27:64"><expr pos:start="27:51" pos:end="27:64"><name pos:start="27:51" pos:end="27:64">ILEN_LATER_INC</name></expr></argument>, <argument pos:start="27:67" pos:end="27:69"><expr pos:start="27:67" pos:end="27:69"><name pos:start="27:67" pos:end="27:69">tec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
