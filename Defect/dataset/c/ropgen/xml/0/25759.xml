<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25759.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:18">av_md5_update</name><parameter_list pos:start="1:19" pos:end="1:59">(<parameter pos:start="1:20" pos:end="1:29"><decl pos:start="1:20" pos:end="1:29"><type pos:start="1:20" pos:end="1:29"><name pos:start="1:20" pos:end="1:24">AVMD5</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">ctx</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:49"><decl pos:start="1:32" pos:end="1:49"><type pos:start="1:32" pos:end="1:49"><specifier pos:start="1:32" pos:end="1:36">const</specifier> <name pos:start="1:38" pos:end="1:44">uint8_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">src</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:58"><decl pos:start="1:52" pos:end="1:58"><type pos:start="1:52" pos:end="1:58"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:58">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:37">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:19"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:17">uint8_t</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:22">end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:22"><expr pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:5">j</name> <operator pos:start="11:7" pos:end="11:7">=</operator> <name pos:start="11:9" pos:end="11:16"><name pos:start="11:9" pos:end="11:11">ctx</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:16">len</name></name> <operator pos:start="11:18" pos:end="11:18">&amp;</operator> <literal type="number" pos:start="11:20" pos:end="11:21">63</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:7">ctx</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:12">len</name></name> <operator pos:start="13:14" pos:end="13:15">+=</operator> <name pos:start="13:17" pos:end="13:19">len</name></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="33:5"><if pos:start="17:5" pos:end="33:5">if <condition pos:start="17:8" pos:end="17:10">(<expr pos:start="17:9" pos:end="17:9"><name pos:start="17:9" pos:end="17:9">j</name></expr>)</condition> <block pos:start="17:12" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:48">

        <decl_stmt pos:start="19:9" pos:end="19:37"><decl pos:start="19:9" pos:end="19:36"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">cnt</name> <init pos:start="19:17" pos:end="19:36">= <expr pos:start="19:19" pos:end="19:36"><call pos:start="19:19" pos:end="19:36"><name pos:start="19:19" pos:end="19:23">FFMIN</name><argument_list pos:start="19:24" pos:end="19:36">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">len</name></expr></argument>, <argument pos:start="19:30" pos:end="19:35"><expr pos:start="19:30" pos:end="19:35"><literal type="number" pos:start="19:30" pos:end="19:33">64</literal> <operator pos:start="19:33" pos:end="19:33">-</operator> <name pos:start="19:35" pos:end="19:35">j</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:14">memcpy</name><argument_list pos:start="21:15" pos:end="21:40">(<argument pos:start="21:16" pos:end="21:29"><expr pos:start="21:16" pos:end="21:29"><name pos:start="21:16" pos:end="21:25"><name pos:start="21:16" pos:end="21:18">ctx</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">block</name></name> <operator pos:start="21:27" pos:end="21:27">+</operator> <name pos:start="21:29" pos:end="21:29">j</name></expr></argument>, <argument pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:34">src</name></expr></argument>, <argument pos:start="21:37" pos:end="21:39"><expr pos:start="21:37" pos:end="21:39"><name pos:start="21:37" pos:end="21:39">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:19"><expr pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:11">src</name> <operator pos:start="23:13" pos:end="23:14">+=</operator> <name pos:start="23:16" pos:end="23:18">cnt</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:19"><expr pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:11">len</name> <operator pos:start="25:13" pos:end="25:14">-=</operator> <name pos:start="25:16" pos:end="25:18">cnt</name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:19"><if pos:start="27:9" pos:end="29:19">if <condition pos:start="27:12" pos:end="27:25">(<expr pos:start="27:13" pos:end="27:24"><name pos:start="27:13" pos:end="27:13">j</name> <operator pos:start="27:15" pos:end="27:15">+</operator> <name pos:start="27:17" pos:end="27:19">cnt</name> <operator pos:start="27:21" pos:end="27:21">&lt;</operator> <literal type="number" pos:start="27:23" pos:end="27:24">64</literal></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:19"><block_content pos:start="29:13" pos:end="29:19">

            <return pos:start="29:13" pos:end="29:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:48"><expr pos:start="31:9" pos:end="31:47"><call pos:start="31:9" pos:end="31:47"><name pos:start="31:9" pos:end="31:12">body</name><argument_list pos:start="31:13" pos:end="31:47">(<argument pos:start="31:14" pos:end="31:22"><expr pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:22"><name pos:start="31:14" pos:end="31:16">ctx</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:22">ABCD</name></name></expr></argument>, <argument pos:start="31:25" pos:end="31:46"><expr pos:start="31:25" pos:end="31:46"><operator pos:start="31:25" pos:end="31:25">(</operator><name pos:start="31:26" pos:end="31:33">uint32_t</name> <operator pos:start="31:35" pos:end="31:35">*</operator><operator pos:start="31:36" pos:end="31:36">)</operator><name pos:start="31:37" pos:end="31:46"><name pos:start="31:37" pos:end="31:39">ctx</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:46">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:7">end</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <name pos:start="37:11" pos:end="37:13">src</name> <operator pos:start="37:15" pos:end="37:15">+</operator> <operator pos:start="37:17" pos:end="37:17">(</operator><name pos:start="37:18" pos:end="37:20">len</name> <operator pos:start="37:22" pos:end="37:22">&amp;</operator> <operator pos:start="37:24" pos:end="37:24">~</operator><literal type="number" pos:start="37:25" pos:end="37:26">63</literal><operator pos:start="37:27" pos:end="37:27">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="61:5"><if pos:start="39:5" pos:end="51:5">if <condition pos:start="39:8" pos:end="39:72">(<expr pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:22">HAVE_BIGENDIAN</name> <operator pos:start="39:24" pos:end="39:25">||</operator> <operator pos:start="39:27" pos:end="39:27">(</operator><operator pos:start="39:28" pos:end="39:28">!</operator><name pos:start="39:29" pos:end="39:47">HAVE_FAST_UNALIGNED</name> <operator pos:start="39:49" pos:end="39:50">&amp;&amp;</operator> <operator pos:start="39:52" pos:end="39:52">(</operator><operator pos:start="39:53" pos:end="39:53">(</operator><name pos:start="39:54" pos:end="39:61">intptr_t</name><operator pos:start="39:62" pos:end="39:62">)</operator><name pos:start="39:63" pos:end="39:65">src</name> <operator pos:start="39:67" pos:end="39:67">&amp;</operator> <literal type="number" pos:start="39:69" pos:end="39:69">3</literal><operator pos:start="39:70" pos:end="39:70">)</operator><operator pos:start="39:71" pos:end="39:71">)</operator></expr>)</condition> <block pos:start="39:74" pos:end="51:5">{<block_content pos:start="41:8" pos:end="49:9">

       <while pos:start="41:8" pos:end="49:9">while <condition pos:start="41:14" pos:end="41:24">(<expr pos:start="41:15" pos:end="41:23"><name pos:start="41:15" pos:end="41:17">src</name> <operator pos:start="41:19" pos:end="41:19">&lt;</operator> <name pos:start="41:21" pos:end="41:23">end</name></expr>)</condition> <block pos:start="41:26" pos:end="49:9">{<block_content pos:start="43:12" pos:end="47:21">

           <expr_stmt pos:start="43:12" pos:end="43:39"><expr pos:start="43:12" pos:end="43:38"><call pos:start="43:12" pos:end="43:38"><name pos:start="43:12" pos:end="43:17">memcpy</name><argument_list pos:start="43:18" pos:end="43:38">(<argument pos:start="43:19" pos:end="43:28"><expr pos:start="43:19" pos:end="43:28"><name pos:start="43:19" pos:end="43:28"><name pos:start="43:19" pos:end="43:21">ctx</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:28">block</name></name></expr></argument>, <argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">src</name></expr></argument>, <argument pos:start="43:36" pos:end="43:37"><expr pos:start="43:36" pos:end="43:37"><literal type="number" pos:start="43:36" pos:end="43:37">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="45:12" pos:end="45:52"><expr pos:start="45:12" pos:end="45:51"><call pos:start="45:12" pos:end="45:51"><name pos:start="45:12" pos:end="45:15">body</name><argument_list pos:start="45:16" pos:end="45:51">(<argument pos:start="45:17" pos:end="45:25"><expr pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:25"><name pos:start="45:17" pos:end="45:19">ctx</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:25">ABCD</name></name></expr></argument>, <argument pos:start="45:28" pos:end="45:50"><expr pos:start="45:28" pos:end="45:50"><operator pos:start="45:28" pos:end="45:28">(</operator><name pos:start="45:29" pos:end="45:36">uint32_t</name> <operator pos:start="45:38" pos:end="45:38">*</operator><operator pos:start="45:39" pos:end="45:39">)</operator> <name pos:start="45:41" pos:end="45:50"><name pos:start="45:41" pos:end="45:43">ctx</name><operator pos:start="45:44" pos:end="45:45">-&gt;</operator><name pos:start="45:46" pos:end="45:50">block</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <expr_stmt pos:start="47:12" pos:end="47:21"><expr pos:start="47:12" pos:end="47:20"><name pos:start="47:12" pos:end="47:14">src</name> <operator pos:start="47:16" pos:end="47:17">+=</operator> <literal type="number" pos:start="47:19" pos:end="47:20">64</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="61:5">else <block pos:start="51:12" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:9">

        <while pos:start="53:9" pos:end="59:9">while <condition pos:start="53:15" pos:end="53:25">(<expr pos:start="53:16" pos:end="53:24"><name pos:start="53:16" pos:end="53:18">src</name> <operator pos:start="53:20" pos:end="53:20">&lt;</operator> <name pos:start="53:22" pos:end="53:24">end</name></expr>)</condition> <block pos:start="53:27" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:45"><expr pos:start="55:13" pos:end="55:44"><call pos:start="55:13" pos:end="55:44"><name pos:start="55:13" pos:end="55:16">body</name><argument_list pos:start="55:17" pos:end="55:44">(<argument pos:start="55:18" pos:end="55:26"><expr pos:start="55:18" pos:end="55:26"><name pos:start="55:18" pos:end="55:26"><name pos:start="55:18" pos:end="55:20">ctx</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:26">ABCD</name></name></expr></argument>, <argument pos:start="55:29" pos:end="55:43"><expr pos:start="55:29" pos:end="55:43"><operator pos:start="55:29" pos:end="55:29">(</operator><name pos:start="55:30" pos:end="55:37">uint32_t</name> <operator pos:start="55:39" pos:end="55:39">*</operator><operator pos:start="55:40" pos:end="55:40">)</operator><name pos:start="55:41" pos:end="55:43">src</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:22"><expr pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:15">src</name> <operator pos:start="57:17" pos:end="57:18">+=</operator> <literal type="number" pos:start="57:20" pos:end="57:21">64</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:14"><expr pos:start="63:5" pos:end="63:13"><name pos:start="63:5" pos:end="63:7">len</name> <operator pos:start="63:9" pos:end="63:10">&amp;=</operator> <literal type="number" pos:start="63:12" pos:end="63:13">63</literal></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:37"><if pos:start="65:5" pos:end="67:37">if <condition pos:start="65:8" pos:end="65:16">(<expr pos:start="65:9" pos:end="65:15"><name pos:start="65:9" pos:end="65:11">len</name> <operator pos:start="65:13" pos:end="65:13">&gt;</operator> <literal type="number" pos:start="65:15" pos:end="65:15">0</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:37"><block_content pos:start="67:9" pos:end="67:37">

        <expr_stmt pos:start="67:9" pos:end="67:37"><expr pos:start="67:9" pos:end="67:36"><call pos:start="67:9" pos:end="67:36"><name pos:start="67:9" pos:end="67:14">memcpy</name><argument_list pos:start="67:15" pos:end="67:36">(<argument pos:start="67:16" pos:end="67:25"><expr pos:start="67:16" pos:end="67:25"><name pos:start="67:16" pos:end="67:25"><name pos:start="67:16" pos:end="67:18">ctx</name><operator pos:start="67:19" pos:end="67:20">-&gt;</operator><name pos:start="67:21" pos:end="67:25">block</name></name></expr></argument>, <argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">src</name></expr></argument>, <argument pos:start="67:33" pos:end="67:35"><expr pos:start="67:33" pos:end="67:35"><name pos:start="67:33" pos:end="67:35">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
