<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4320.c" pos:tabs="8"><function pos:start="1:1" pos:end="2501:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">disas_arm_insn</name><parameter_list pos:start="1:27" pos:end="1:59">(<parameter pos:start="1:28" pos:end="1:41"><decl pos:start="1:28" pos:end="1:41"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type> <name pos:start="1:39" pos:end="1:41">env</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:58"><decl pos:start="1:44" pos:end="1:58"><type pos:start="1:44" pos:end="1:58"><name pos:start="1:44" pos:end="1:55">DisasContext</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:58">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2501:1">{<block_content pos:start="5:5" pos:end="2499:5">

    <decl_stmt pos:start="5:5" pos:end="5:68"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">cond</name></decl>, <decl pos:start="5:24" pos:end="5:27"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:24" pos:end="5:27">insn</name></decl>, <decl pos:start="5:30" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:30" pos:end="5:32">val</name></decl>, <decl pos:start="5:35" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:35" pos:end="5:37">op1</name></decl>, <decl pos:start="5:40" pos:end="5:40"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:40" pos:end="5:40">i</name></decl>, <decl pos:start="5:43" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:43" pos:end="5:47">shift</name></decl>, <decl pos:start="5:50" pos:end="5:51"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:50" pos:end="5:51">rm</name></decl>, <decl pos:start="5:54" pos:end="5:55"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:54" pos:end="5:55">rs</name></decl>, <decl pos:start="5:58" pos:end="5:59"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:58" pos:end="5:59">rn</name></decl>, <decl pos:start="5:62" pos:end="5:63"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:62" pos:end="5:63">rd</name></decl>, <decl pos:start="5:66" pos:end="5:67"><type ref="prev" pos:start="5:5" pos:end="5:16"/><name pos:start="5:66" pos:end="5:67">sh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">TCGv</name></type> <name pos:start="7:10" pos:end="7:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:13">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:13">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:13">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">TCGv_i64</name></type> <name pos:start="15:14" pos:end="15:18">tmp64</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:8">insn</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:19">ldl_code</name><argument_list pos:start="19:20" pos:end="19:26">(<argument pos:start="19:21" pos:end="19:25"><expr pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:25"><name pos:start="19:21" pos:end="19:21">s</name><operator pos:start="19:22" pos:end="19:23">-&gt;</operator><name pos:start="19:24" pos:end="19:25">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:15"><expr pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:9">pc</name></name> <operator pos:start="21:11" pos:end="21:12">+=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">4</literal></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:48">/* M variants do not implement ARM mode.  */</comment>

    <if_stmt pos:start="27:5" pos:end="29:24"><if pos:start="27:5" pos:end="29:24">if <condition pos:start="27:8" pos:end="27:18">(<expr pos:start="27:9" pos:end="27:17"><call pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:12">IS_M</name><argument_list pos:start="27:13" pos:end="27:17">(<argument pos:start="27:14" pos:end="27:16"><expr pos:start="27:14" pos:end="27:16"><name pos:start="27:14" pos:end="27:16">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:24"><block_content pos:start="29:9" pos:end="29:24">

        <goto pos:start="29:9" pos:end="29:24">goto <name pos:start="29:14" pos:end="29:23">illegal_op</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:8">cond</name> <operator pos:start="31:10" pos:end="31:10">=</operator> <name pos:start="31:12" pos:end="31:15">insn</name> <operator pos:start="31:17" pos:end="31:18">&gt;&gt;</operator> <literal type="number" pos:start="31:20" pos:end="31:21">28</literal></expr>;</expr_stmt>

    <if_stmt pos:start="33:5" pos:end="443:5"><if pos:start="33:5" pos:end="443:5">if <condition pos:start="33:8" pos:end="33:20">(<expr pos:start="33:9" pos:end="33:19"><name pos:start="33:9" pos:end="33:12">cond</name> <operator pos:start="33:14" pos:end="33:15">==</operator> <literal type="number" pos:start="33:17" pos:end="33:19">0xf</literal></expr>)</condition><block pos:start="33:21" pos:end="443:5">{<block_content pos:start="37:9" pos:end="441:24">

        <comment type="block" pos:start="35:9" pos:end="35:42">/* Unconditional instructions.  */</comment>

        <if_stmt pos:start="37:9" pos:end="53:9"><if pos:start="37:9" pos:end="53:9">if <condition pos:start="37:12" pos:end="37:36">(<expr pos:start="37:13" pos:end="37:35"><operator pos:start="37:13" pos:end="37:13">(</operator><operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:18">insn</name> <operator pos:start="37:20" pos:end="37:21">&gt;&gt;</operator> <literal type="number" pos:start="37:23" pos:end="37:24">25</literal><operator pos:start="37:25" pos:end="37:25">)</operator> <operator pos:start="37:27" pos:end="37:27">&amp;</operator> <literal type="number" pos:start="37:29" pos:end="37:29">7</literal><operator pos:start="37:30" pos:end="37:30">)</operator> <operator pos:start="37:32" pos:end="37:33">==</operator> <literal type="number" pos:start="37:35" pos:end="37:35">1</literal></expr>)</condition> <block pos:start="37:38" pos:end="53:9">{<block_content pos:start="41:13" pos:end="51:19">

            <comment type="block" pos:start="39:13" pos:end="39:40">/* NEON Data processing.  */</comment>

            <if_stmt pos:start="41:13" pos:end="43:32"><if pos:start="41:13" pos:end="43:32">if <condition pos:start="41:16" pos:end="41:52">(<expr pos:start="41:17" pos:end="41:51"><operator pos:start="41:17" pos:end="41:17">!</operator><call pos:start="41:18" pos:end="41:51"><name pos:start="41:18" pos:end="41:28">arm_feature</name><argument_list pos:start="41:29" pos:end="41:51">(<argument pos:start="41:30" pos:end="41:32"><expr pos:start="41:30" pos:end="41:32"><name pos:start="41:30" pos:end="41:32">env</name></expr></argument>, <argument pos:start="41:35" pos:end="41:50"><expr pos:start="41:35" pos:end="41:50"><name pos:start="41:35" pos:end="41:50">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:32"><block_content pos:start="43:17" pos:end="43:32">

                <goto pos:start="43:17" pos:end="43:32">goto <name pos:start="43:22" pos:end="43:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="47:13" pos:end="49:32"><if pos:start="47:13" pos:end="49:32">if <condition pos:start="47:16" pos:end="47:51">(<expr pos:start="47:17" pos:end="47:50"><call pos:start="47:17" pos:end="47:50"><name pos:start="47:17" pos:end="47:36">disas_neon_data_insn</name><argument_list pos:start="47:37" pos:end="47:50">(<argument pos:start="47:38" pos:end="47:40"><expr pos:start="47:38" pos:end="47:40"><name pos:start="47:38" pos:end="47:40">env</name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><name pos:start="47:43" pos:end="47:43">s</name></expr></argument>, <argument pos:start="47:46" pos:end="47:49"><expr pos:start="47:46" pos:end="47:49"><name pos:start="47:46" pos:end="47:49">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:32"><block_content pos:start="49:17" pos:end="49:32">

                <goto pos:start="49:17" pos:end="49:32">goto <name pos:start="49:22" pos:end="49:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="51:13" pos:end="51:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="55:9" pos:end="71:9"><if pos:start="55:9" pos:end="71:9">if <condition pos:start="55:12" pos:end="55:46">(<expr pos:start="55:13" pos:end="55:45"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:17">insn</name> <operator pos:start="55:19" pos:end="55:19">&amp;</operator> <literal type="number" pos:start="55:21" pos:end="55:30">0x0f100000</literal><operator pos:start="55:31" pos:end="55:31">)</operator> <operator pos:start="55:33" pos:end="55:34">==</operator> <literal type="number" pos:start="55:36" pos:end="55:45">0x04000000</literal></expr>)</condition> <block pos:start="55:48" pos:end="71:9">{<block_content pos:start="59:13" pos:end="69:19">

            <comment type="block" pos:start="57:13" pos:end="57:35">/* NEON load/store.  */</comment>

            <if_stmt pos:start="59:13" pos:end="61:32"><if pos:start="59:13" pos:end="61:32">if <condition pos:start="59:16" pos:end="59:52">(<expr pos:start="59:17" pos:end="59:51"><operator pos:start="59:17" pos:end="59:17">!</operator><call pos:start="59:18" pos:end="59:51"><name pos:start="59:18" pos:end="59:28">arm_feature</name><argument_list pos:start="59:29" pos:end="59:51">(<argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:32">env</name></expr></argument>, <argument pos:start="59:35" pos:end="59:50"><expr pos:start="59:35" pos:end="59:50"><name pos:start="59:35" pos:end="59:50">ARM_FEATURE_NEON</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="61:17" pos:end="61:32"><block_content pos:start="61:17" pos:end="61:32">

                <goto pos:start="61:17" pos:end="61:32">goto <name pos:start="61:22" pos:end="61:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="65:13" pos:end="67:32"><if pos:start="65:13" pos:end="67:32">if <condition pos:start="65:16" pos:end="65:49">(<expr pos:start="65:17" pos:end="65:48"><call pos:start="65:17" pos:end="65:48"><name pos:start="65:17" pos:end="65:34">disas_neon_ls_insn</name><argument_list pos:start="65:35" pos:end="65:48">(<argument pos:start="65:36" pos:end="65:38"><expr pos:start="65:36" pos:end="65:38"><name pos:start="65:36" pos:end="65:38">env</name></expr></argument>, <argument pos:start="65:41" pos:end="65:41"><expr pos:start="65:41" pos:end="65:41"><name pos:start="65:41" pos:end="65:41">s</name></expr></argument>, <argument pos:start="65:44" pos:end="65:47"><expr pos:start="65:44" pos:end="65:47"><name pos:start="65:44" pos:end="65:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="67:17" pos:end="67:32"><block_content pos:start="67:17" pos:end="67:32">

                <goto pos:start="67:17" pos:end="67:32">goto <name pos:start="67:22" pos:end="67:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="69:13" pos:end="69:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="93:9"><if pos:start="73:9" pos:end="93:9">if <condition pos:start="73:12" pos:end="75:48">(<expr pos:start="73:13" pos:end="75:47"><operator pos:start="73:13" pos:end="73:13">(</operator><operator pos:start="73:14" pos:end="73:14">(</operator><name pos:start="73:15" pos:end="73:18">insn</name> <operator pos:start="73:20" pos:end="73:20">&amp;</operator> <literal type="number" pos:start="73:22" pos:end="73:31">0x0f30f000</literal><operator pos:start="73:32" pos:end="73:32">)</operator> <operator pos:start="73:34" pos:end="73:35">==</operator> <literal type="number" pos:start="73:37" pos:end="73:46">0x0510f000</literal><operator pos:start="73:47" pos:end="73:47">)</operator> <operator pos:start="73:49" pos:end="73:50">||</operator>

            <operator pos:start="75:13" pos:end="75:13">(</operator><operator pos:start="75:14" pos:end="75:14">(</operator><name pos:start="75:15" pos:end="75:18">insn</name> <operator pos:start="75:20" pos:end="75:20">&amp;</operator> <literal type="number" pos:start="75:22" pos:end="75:31">0x0f30f010</literal><operator pos:start="75:32" pos:end="75:32">)</operator> <operator pos:start="75:34" pos:end="75:35">==</operator> <literal type="number" pos:start="75:37" pos:end="75:46">0x0710f000</literal><operator pos:start="75:47" pos:end="75:47">)</operator></expr>)</condition> <block pos:start="75:50" pos:end="93:9">{<block_content pos:start="77:13" pos:end="91:19">

            <if_stmt pos:start="77:13" pos:end="87:13"><if pos:start="77:13" pos:end="87:13">if <condition pos:start="77:16" pos:end="77:40">(<expr pos:start="77:17" pos:end="77:39"><operator pos:start="77:17" pos:end="77:17">(</operator><name pos:start="77:18" pos:end="77:21">insn</name> <operator pos:start="77:23" pos:end="77:23">&amp;</operator> <operator pos:start="77:25" pos:end="77:25">(</operator><literal type="number" pos:start="77:26" pos:end="77:26">1</literal> <operator pos:start="77:28" pos:end="77:29">&lt;&lt;</operator> <literal type="number" pos:start="77:31" pos:end="77:32">22</literal><operator pos:start="77:33" pos:end="77:33">)</operator><operator pos:start="77:34" pos:end="77:34">)</operator> <operator pos:start="77:36" pos:end="77:37">==</operator> <literal type="number" pos:start="77:39" pos:end="77:39">0</literal></expr>)</condition> <block pos:start="77:42" pos:end="87:13">{<block_content pos:start="81:17" pos:end="85:17">

                <comment type="block" pos:start="79:17" pos:end="79:32">/* PLDW; v7MP */</comment>

                <if_stmt pos:start="81:17" pos:end="85:17"><if pos:start="81:17" pos:end="85:17">if <condition pos:start="81:20" pos:end="81:56">(<expr pos:start="81:21" pos:end="81:55"><operator pos:start="81:21" pos:end="81:21">!</operator><call pos:start="81:22" pos:end="81:55"><name pos:start="81:22" pos:end="81:32">arm_feature</name><argument_list pos:start="81:33" pos:end="81:55">(<argument pos:start="81:34" pos:end="81:36"><expr pos:start="81:34" pos:end="81:36"><name pos:start="81:34" pos:end="81:36">env</name></expr></argument>, <argument pos:start="81:39" pos:end="81:54"><expr pos:start="81:39" pos:end="81:54"><name pos:start="81:39" pos:end="81:54">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="81:58" pos:end="85:17">{<block_content pos:start="83:21" pos:end="83:36">

                    <goto pos:start="83:21" pos:end="83:36">goto <name pos:start="83:26" pos:end="83:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="89:13" pos:end="89:38">/* Otherwise PLD; v5TE+ */</comment>

            <return pos:start="91:13" pos:end="91:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="103:9">if <condition pos:start="95:12" pos:end="97:48">(<expr pos:start="95:13" pos:end="97:47"><operator pos:start="95:13" pos:end="95:13">(</operator><operator pos:start="95:14" pos:end="95:14">(</operator><name pos:start="95:15" pos:end="95:18">insn</name> <operator pos:start="95:20" pos:end="95:20">&amp;</operator> <literal type="number" pos:start="95:22" pos:end="95:31">0x0f70f000</literal><operator pos:start="95:32" pos:end="95:32">)</operator> <operator pos:start="95:34" pos:end="95:35">==</operator> <literal type="number" pos:start="95:37" pos:end="95:46">0x0450f000</literal><operator pos:start="95:47" pos:end="95:47">)</operator> <operator pos:start="95:49" pos:end="95:50">||</operator>

            <operator pos:start="97:13" pos:end="97:13">(</operator><operator pos:start="97:14" pos:end="97:14">(</operator><name pos:start="97:15" pos:end="97:18">insn</name> <operator pos:start="97:20" pos:end="97:20">&amp;</operator> <literal type="number" pos:start="97:22" pos:end="97:31">0x0f70f010</literal><operator pos:start="97:32" pos:end="97:32">)</operator> <operator pos:start="97:34" pos:end="97:35">==</operator> <literal type="number" pos:start="97:37" pos:end="97:46">0x0650f000</literal><operator pos:start="97:47" pos:end="97:47">)</operator></expr>)</condition> <block pos:start="97:50" pos:end="103:9">{<block_content pos:start="99:13" pos:end="101:19">

            <expr_stmt pos:start="99:13" pos:end="99:20"><expr pos:start="99:13" pos:end="99:19"><call pos:start="99:13" pos:end="99:19"><name pos:start="99:13" pos:end="99:16">ARCH</name><argument_list pos:start="99:17" pos:end="99:19">(<argument pos:start="99:18" pos:end="99:18"><expr pos:start="99:18" pos:end="99:18"><literal type="number" pos:start="99:18" pos:end="99:18">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:19">return;</return> <comment type="block" pos:start="101:21" pos:end="101:33">/* PLI; V7 */</comment>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="117:9"><if pos:start="105:9" pos:end="117:9">if <condition pos:start="105:12" pos:end="107:48">(<expr pos:start="105:13" pos:end="107:47"><operator pos:start="105:13" pos:end="105:13">(</operator><operator pos:start="105:14" pos:end="105:14">(</operator><name pos:start="105:15" pos:end="105:18">insn</name> <operator pos:start="105:20" pos:end="105:20">&amp;</operator> <literal type="number" pos:start="105:22" pos:end="105:31">0x0f700000</literal><operator pos:start="105:32" pos:end="105:32">)</operator> <operator pos:start="105:34" pos:end="105:35">==</operator> <literal type="number" pos:start="105:37" pos:end="105:46">0x04100000</literal><operator pos:start="105:47" pos:end="105:47">)</operator> <operator pos:start="105:49" pos:end="105:50">||</operator>

            <operator pos:start="107:13" pos:end="107:13">(</operator><operator pos:start="107:14" pos:end="107:14">(</operator><name pos:start="107:15" pos:end="107:18">insn</name> <operator pos:start="107:20" pos:end="107:20">&amp;</operator> <literal type="number" pos:start="107:22" pos:end="107:31">0x0f700010</literal><operator pos:start="107:32" pos:end="107:32">)</operator> <operator pos:start="107:34" pos:end="107:35">==</operator> <literal type="number" pos:start="107:37" pos:end="107:46">0x06100000</literal><operator pos:start="107:47" pos:end="107:47">)</operator></expr>)</condition> <block pos:start="107:50" pos:end="117:9">{<block_content pos:start="109:13" pos:end="115:19">

            <if_stmt pos:start="109:13" pos:end="113:13"><if pos:start="109:13" pos:end="113:13">if <condition pos:start="109:16" pos:end="109:52">(<expr pos:start="109:17" pos:end="109:51"><operator pos:start="109:17" pos:end="109:17">!</operator><call pos:start="109:18" pos:end="109:51"><name pos:start="109:18" pos:end="109:28">arm_feature</name><argument_list pos:start="109:29" pos:end="109:51">(<argument pos:start="109:30" pos:end="109:32"><expr pos:start="109:30" pos:end="109:32"><name pos:start="109:30" pos:end="109:32">env</name></expr></argument>, <argument pos:start="109:35" pos:end="109:50"><expr pos:start="109:35" pos:end="109:50"><name pos:start="109:35" pos:end="109:50">ARM_FEATURE_V7MP</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="109:54" pos:end="113:13">{<block_content pos:start="111:17" pos:end="111:32">

                <goto pos:start="111:17" pos:end="111:32">goto <name pos:start="111:22" pos:end="111:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="115:13" pos:end="115:19">return;</return> <comment type="block" pos:start="115:21" pos:end="115:65">/* v7MP: Unallocated memory hint: must NOP */</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="121:9" pos:end="439:9"><if pos:start="121:9" pos:end="137:9">if <condition pos:start="121:12" pos:end="121:46">(<expr pos:start="121:13" pos:end="121:45"><operator pos:start="121:13" pos:end="121:13">(</operator><name pos:start="121:14" pos:end="121:17">insn</name> <operator pos:start="121:19" pos:end="121:19">&amp;</operator> <literal type="number" pos:start="121:21" pos:end="121:30">0x0ffffdff</literal><operator pos:start="121:31" pos:end="121:31">)</operator> <operator pos:start="121:33" pos:end="121:34">==</operator> <literal type="number" pos:start="121:36" pos:end="121:45">0x01010000</literal></expr>)</condition> <block pos:start="121:48" pos:end="137:9">{<block_content pos:start="123:13" pos:end="135:19">

            <expr_stmt pos:start="123:13" pos:end="123:20"><expr pos:start="123:13" pos:end="123:19"><call pos:start="123:13" pos:end="123:19"><name pos:start="123:13" pos:end="123:16">ARCH</name><argument_list pos:start="123:17" pos:end="123:19">(<argument pos:start="123:18" pos:end="123:18"><expr pos:start="123:18" pos:end="123:18"><literal type="number" pos:start="123:18" pos:end="123:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="125:13" pos:end="125:24">/* setend */</comment>

            <if_stmt pos:start="127:13" pos:end="133:13"><if pos:start="127:13" pos:end="133:13">if <condition pos:start="127:16" pos:end="127:32">(<expr pos:start="127:17" pos:end="127:31"><name pos:start="127:17" pos:end="127:20">insn</name> <operator pos:start="127:22" pos:end="127:22">&amp;</operator> <operator pos:start="127:24" pos:end="127:24">(</operator><literal type="number" pos:start="127:25" pos:end="127:25">1</literal> <operator pos:start="127:27" pos:end="127:28">&lt;&lt;</operator> <literal type="number" pos:start="127:30" pos:end="127:30">9</literal><operator pos:start="127:31" pos:end="127:31">)</operator></expr>)</condition> <block pos:start="127:34" pos:end="133:13">{<block_content pos:start="131:17" pos:end="131:32">

                <comment type="block" pos:start="129:17" pos:end="129:48">/* BE8 mode not implemented.  */</comment>

                <goto pos:start="131:17" pos:end="131:32">goto <name pos:start="131:22" pos:end="131:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="135:13" pos:end="135:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="137:11" pos:end="167:9">else if <condition pos:start="137:19" pos:end="137:53">(<expr pos:start="137:20" pos:end="137:52"><operator pos:start="137:20" pos:end="137:20">(</operator><name pos:start="137:21" pos:end="137:24">insn</name> <operator pos:start="137:26" pos:end="137:26">&amp;</operator> <literal type="number" pos:start="137:28" pos:end="137:37">0x0fffff00</literal><operator pos:start="137:38" pos:end="137:38">)</operator> <operator pos:start="137:40" pos:end="137:41">==</operator> <literal type="number" pos:start="137:43" pos:end="137:52">0x057ff000</literal></expr>)</condition> <block pos:start="137:55" pos:end="167:9">{<block_content pos:start="139:13" pos:end="165:13">

            <switch pos:start="139:13" pos:end="165:13">switch <condition pos:start="139:20" pos:end="139:38">(<expr pos:start="139:21" pos:end="139:37"><operator pos:start="139:21" pos:end="139:21">(</operator><name pos:start="139:22" pos:end="139:25">insn</name> <operator pos:start="139:27" pos:end="139:28">&gt;&gt;</operator> <literal type="number" pos:start="139:30" pos:end="139:30">4</literal><operator pos:start="139:31" pos:end="139:31">)</operator> <operator pos:start="139:33" pos:end="139:33">&amp;</operator> <literal type="number" pos:start="139:35" pos:end="139:37">0xf</literal></expr>)</condition> <block pos:start="139:40" pos:end="165:13">{<block_content pos:start="141:13" pos:end="163:32">

            <case pos:start="141:13" pos:end="141:19">case <expr pos:start="141:18" pos:end="141:18"><literal type="number" pos:start="141:18" pos:end="141:18">1</literal></expr>:</case> <comment type="block" pos:start="141:21" pos:end="141:31">/* clrex */</comment>

                <expr_stmt pos:start="143:17" pos:end="143:25"><expr pos:start="143:17" pos:end="143:24"><call pos:start="143:17" pos:end="143:24"><name pos:start="143:17" pos:end="143:20">ARCH</name><argument_list pos:start="143:21" pos:end="143:24">(<argument pos:start="143:22" pos:end="143:23"><expr pos:start="143:22" pos:end="143:23"><literal type="number" pos:start="143:22" pos:end="143:23">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:29"><expr pos:start="145:17" pos:end="145:28"><call pos:start="145:17" pos:end="145:28"><name pos:start="145:17" pos:end="145:25">gen_clrex</name><argument_list pos:start="145:26" pos:end="145:28">(<argument pos:start="145:27" pos:end="145:27"><expr pos:start="145:27" pos:end="145:27"><name pos:start="145:27" pos:end="145:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="147:17" pos:end="147:23">return;</return>

            <case pos:start="149:13" pos:end="149:19">case <expr pos:start="149:18" pos:end="149:18"><literal type="number" pos:start="149:18" pos:end="149:18">4</literal></expr>:</case> <comment type="block" pos:start="149:21" pos:end="149:29">/* dsb */</comment>

            <case pos:start="151:13" pos:end="151:19">case <expr pos:start="151:18" pos:end="151:18"><literal type="number" pos:start="151:18" pos:end="151:18">5</literal></expr>:</case> <comment type="block" pos:start="151:21" pos:end="151:29">/* dmb */</comment>

            <case pos:start="153:13" pos:end="153:19">case <expr pos:start="153:18" pos:end="153:18"><literal type="number" pos:start="153:18" pos:end="153:18">6</literal></expr>:</case> <comment type="block" pos:start="153:21" pos:end="153:29">/* isb */</comment>

                <expr_stmt pos:start="155:17" pos:end="155:24"><expr pos:start="155:17" pos:end="155:23"><call pos:start="155:17" pos:end="155:23"><name pos:start="155:17" pos:end="155:20">ARCH</name><argument_list pos:start="155:21" pos:end="155:23">(<argument pos:start="155:22" pos:end="155:22"><expr pos:start="155:22" pos:end="155:22"><literal type="number" pos:start="155:22" pos:end="155:22">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="157:17" pos:end="157:68">/* We don't emulate caches so these are a no-op.  */</comment>

                <return pos:start="159:17" pos:end="159:23">return;</return>

            <default pos:start="161:13" pos:end="161:20">default:</default>

                <goto pos:start="163:17" pos:end="163:32">goto <name pos:start="163:22" pos:end="163:31">illegal_op</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></if> <if type="elseif" pos:start="167:11" pos:end="257:9">else if <condition pos:start="167:19" pos:end="167:53">(<expr pos:start="167:20" pos:end="167:52"><operator pos:start="167:20" pos:end="167:20">(</operator><name pos:start="167:21" pos:end="167:24">insn</name> <operator pos:start="167:26" pos:end="167:26">&amp;</operator> <literal type="number" pos:start="167:28" pos:end="167:37">0x0e5fffe0</literal><operator pos:start="167:38" pos:end="167:38">)</operator> <operator pos:start="167:40" pos:end="167:41">==</operator> <literal type="number" pos:start="167:43" pos:end="167:52">0x084d0500</literal></expr>)</condition> <block pos:start="167:55" pos:end="257:9">{<block_content pos:start="171:13" pos:end="255:19">

            <comment type="block" pos:start="169:13" pos:end="169:21">/* srs */</comment>

            <decl_stmt pos:start="171:13" pos:end="171:27"><decl pos:start="171:13" pos:end="171:26"><type pos:start="171:13" pos:end="171:19"><name pos:start="171:13" pos:end="171:19">int32_t</name></type> <name pos:start="171:21" pos:end="171:26">offset</name></decl>;</decl_stmt>

            <if_stmt pos:start="173:13" pos:end="175:32"><if pos:start="173:13" pos:end="175:32">if <condition pos:start="173:16" pos:end="173:27">(<expr pos:start="173:17" pos:end="173:26"><call pos:start="173:17" pos:end="173:26"><name pos:start="173:17" pos:end="173:23">IS_USER</name><argument_list pos:start="173:24" pos:end="173:26">(<argument pos:start="173:25" pos:end="173:25"><expr pos:start="173:25" pos:end="173:25"><name pos:start="173:25" pos:end="173:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="175:17" pos:end="175:32"><block_content pos:start="175:17" pos:end="175:32">

                <goto pos:start="175:17" pos:end="175:32">goto <name pos:start="175:22" pos:end="175:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="177:13" pos:end="177:20"><expr pos:start="177:13" pos:end="177:19"><call pos:start="177:13" pos:end="177:19"><name pos:start="177:13" pos:end="177:16">ARCH</name><argument_list pos:start="177:17" pos:end="177:19">(<argument pos:start="177:18" pos:end="177:18"><expr pos:start="177:18" pos:end="177:18"><literal type="number" pos:start="177:18" pos:end="177:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:32"><expr pos:start="179:13" pos:end="179:31"><name pos:start="179:13" pos:end="179:15">op1</name> <operator pos:start="179:17" pos:end="179:17">=</operator> <operator pos:start="179:19" pos:end="179:19">(</operator><name pos:start="179:20" pos:end="179:23">insn</name> <operator pos:start="179:25" pos:end="179:25">&amp;</operator> <literal type="number" pos:start="179:27" pos:end="179:30">0x1f</literal><operator pos:start="179:31" pos:end="179:31">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:38"><expr pos:start="181:13" pos:end="181:37"><name pos:start="181:13" pos:end="181:16">addr</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <call pos:start="181:20" pos:end="181:37"><name pos:start="181:20" pos:end="181:35">tcg_temp_new_i32</name><argument_list pos:start="181:36" pos:end="181:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:37"><expr pos:start="183:13" pos:end="183:36"><name pos:start="183:13" pos:end="183:15">tmp</name> <operator pos:start="183:17" pos:end="183:17">=</operator> <call pos:start="183:19" pos:end="183:36"><name pos:start="183:19" pos:end="183:31">tcg_const_i32</name><argument_list pos:start="183:32" pos:end="183:36">(<argument pos:start="183:33" pos:end="183:35"><expr pos:start="183:33" pos:end="183:35"><name pos:start="183:33" pos:end="183:35">op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:58"><expr pos:start="185:13" pos:end="185:57"><call pos:start="185:13" pos:end="185:57"><name pos:start="185:13" pos:end="185:37">gen_helper_get_r13_banked</name><argument_list pos:start="185:38" pos:end="185:57">(<argument pos:start="185:39" pos:end="185:42"><expr pos:start="185:39" pos:end="185:42"><name pos:start="185:39" pos:end="185:42">addr</name></expr></argument>, <argument pos:start="185:45" pos:end="185:51"><expr pos:start="185:45" pos:end="185:51"><name pos:start="185:45" pos:end="185:51">cpu_env</name></expr></argument>, <argument pos:start="185:54" pos:end="185:56"><expr pos:start="185:54" pos:end="185:56"><name pos:start="185:54" pos:end="185:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:35"><expr pos:start="187:13" pos:end="187:34"><call pos:start="187:13" pos:end="187:34"><name pos:start="187:13" pos:end="187:29">tcg_temp_free_i32</name><argument_list pos:start="187:30" pos:end="187:34">(<argument pos:start="187:31" pos:end="187:33"><expr pos:start="187:31" pos:end="187:33"><name pos:start="187:31" pos:end="187:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:33"><expr pos:start="189:13" pos:end="189:32"><name pos:start="189:13" pos:end="189:13">i</name> <operator pos:start="189:15" pos:end="189:15">=</operator> <operator pos:start="189:17" pos:end="189:17">(</operator><name pos:start="189:18" pos:end="189:21">insn</name> <operator pos:start="189:23" pos:end="189:24">&gt;&gt;</operator> <literal type="number" pos:start="189:26" pos:end="189:27">23</literal><operator pos:start="189:28" pos:end="189:28">)</operator> <operator pos:start="189:30" pos:end="189:30">&amp;</operator> <literal type="number" pos:start="189:32" pos:end="189:32">3</literal></expr>;</expr_stmt>

            <switch pos:start="191:13" pos:end="203:13">switch <condition pos:start="191:20" pos:end="191:22">(<expr pos:start="191:21" pos:end="191:21"><name pos:start="191:21" pos:end="191:21">i</name></expr>)</condition> <block pos:start="191:24" pos:end="203:13">{<block_content pos:start="193:13" pos:end="201:29">

            <case pos:start="193:13" pos:end="193:19">case <expr pos:start="193:18" pos:end="193:18"><literal type="number" pos:start="193:18" pos:end="193:18">0</literal></expr>:</case> <expr_stmt pos:start="193:21" pos:end="193:32"><expr pos:start="193:21" pos:end="193:31"><name pos:start="193:21" pos:end="193:26">offset</name> <operator pos:start="193:28" pos:end="193:28">=</operator> <operator pos:start="193:30" pos:end="193:30">-</operator><literal type="number" pos:start="193:31" pos:end="193:31">4</literal></expr>;</expr_stmt> <break pos:start="193:34" pos:end="193:39">break;</break> <comment type="block" pos:start="193:41" pos:end="193:48">/* DA */</comment>

            <case pos:start="195:13" pos:end="195:19">case <expr pos:start="195:18" pos:end="195:18"><literal type="number" pos:start="195:18" pos:end="195:18">1</literal></expr>:</case> <expr_stmt pos:start="195:21" pos:end="195:31"><expr pos:start="195:21" pos:end="195:30"><name pos:start="195:21" pos:end="195:26">offset</name> <operator pos:start="195:28" pos:end="195:28">=</operator> <literal type="number" pos:start="195:30" pos:end="195:30">0</literal></expr>;</expr_stmt> <break pos:start="195:33" pos:end="195:38">break;</break> <comment type="block" pos:start="195:40" pos:end="195:47">/* IA */</comment>

            <case pos:start="197:13" pos:end="197:19">case <expr pos:start="197:18" pos:end="197:18"><literal type="number" pos:start="197:18" pos:end="197:18">2</literal></expr>:</case> <expr_stmt pos:start="197:21" pos:end="197:32"><expr pos:start="197:21" pos:end="197:31"><name pos:start="197:21" pos:end="197:26">offset</name> <operator pos:start="197:28" pos:end="197:28">=</operator> <operator pos:start="197:30" pos:end="197:30">-</operator><literal type="number" pos:start="197:31" pos:end="197:31">8</literal></expr>;</expr_stmt> <break pos:start="197:34" pos:end="197:39">break;</break> <comment type="block" pos:start="197:41" pos:end="197:48">/* DB */</comment>

            <case pos:start="199:13" pos:end="199:19">case <expr pos:start="199:18" pos:end="199:18"><literal type="number" pos:start="199:18" pos:end="199:18">3</literal></expr>:</case> <expr_stmt pos:start="199:21" pos:end="199:31"><expr pos:start="199:21" pos:end="199:30"><name pos:start="199:21" pos:end="199:26">offset</name> <operator pos:start="199:28" pos:end="199:28">=</operator> <literal type="number" pos:start="199:30" pos:end="199:30">4</literal></expr>;</expr_stmt> <break pos:start="199:33" pos:end="199:38">break;</break> <comment type="block" pos:start="199:40" pos:end="199:47">/* IB */</comment>

            <default pos:start="201:13" pos:end="201:20">default:</default> <expr_stmt pos:start="201:22" pos:end="201:29"><expr pos:start="201:22" pos:end="201:28"><call pos:start="201:22" pos:end="201:28"><name pos:start="201:22" pos:end="201:26">abort</name><argument_list pos:start="201:27" pos:end="201:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <if_stmt pos:start="205:13" pos:end="207:53"><if pos:start="205:13" pos:end="207:53">if <condition pos:start="205:16" pos:end="205:23">(<expr pos:start="205:17" pos:end="205:22"><name pos:start="205:17" pos:end="205:22">offset</name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="207:53"><block_content pos:start="207:17" pos:end="207:53">

                <expr_stmt pos:start="207:17" pos:end="207:53"><expr pos:start="207:17" pos:end="207:52"><call pos:start="207:17" pos:end="207:52"><name pos:start="207:17" pos:end="207:32">tcg_gen_addi_i32</name><argument_list pos:start="207:33" pos:end="207:52">(<argument pos:start="207:34" pos:end="207:37"><expr pos:start="207:34" pos:end="207:37"><name pos:start="207:34" pos:end="207:37">addr</name></expr></argument>, <argument pos:start="207:40" pos:end="207:43"><expr pos:start="207:40" pos:end="207:43"><name pos:start="207:40" pos:end="207:43">addr</name></expr></argument>, <argument pos:start="207:46" pos:end="207:51"><expr pos:start="207:46" pos:end="207:51"><name pos:start="207:46" pos:end="207:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:34"><expr pos:start="209:13" pos:end="209:33"><name pos:start="209:13" pos:end="209:15">tmp</name> <operator pos:start="209:17" pos:end="209:17">=</operator> <call pos:start="209:19" pos:end="209:33"><name pos:start="209:19" pos:end="209:26">load_reg</name><argument_list pos:start="209:27" pos:end="209:33">(<argument pos:start="209:28" pos:end="209:28"><expr pos:start="209:28" pos:end="209:28"><name pos:start="209:28" pos:end="209:28">s</name></expr></argument>, <argument pos:start="209:31" pos:end="209:32"><expr pos:start="209:31" pos:end="209:32"><literal type="number" pos:start="209:31" pos:end="209:32">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:35"><expr pos:start="211:13" pos:end="211:34"><call pos:start="211:13" pos:end="211:34"><name pos:start="211:13" pos:end="211:20">gen_st32</name><argument_list pos:start="211:21" pos:end="211:34">(<argument pos:start="211:22" pos:end="211:24"><expr pos:start="211:22" pos:end="211:24"><name pos:start="211:22" pos:end="211:24">tmp</name></expr></argument>, <argument pos:start="211:27" pos:end="211:30"><expr pos:start="211:27" pos:end="211:30"><name pos:start="211:27" pos:end="211:30">addr</name></expr></argument>, <argument pos:start="211:33" pos:end="211:33"><expr pos:start="211:33" pos:end="211:33"><literal type="number" pos:start="211:33" pos:end="211:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:39"><expr pos:start="213:13" pos:end="213:38"><name pos:start="213:13" pos:end="213:15">tmp</name> <operator pos:start="213:17" pos:end="213:17">=</operator> <call pos:start="213:19" pos:end="213:38"><name pos:start="213:19" pos:end="213:32">load_cpu_field</name><argument_list pos:start="213:33" pos:end="213:38">(<argument pos:start="213:34" pos:end="213:37"><expr pos:start="213:34" pos:end="213:37"><name pos:start="213:34" pos:end="213:37">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:44"><expr pos:start="215:13" pos:end="215:43"><call pos:start="215:13" pos:end="215:43"><name pos:start="215:13" pos:end="215:28">tcg_gen_addi_i32</name><argument_list pos:start="215:29" pos:end="215:43">(<argument pos:start="215:30" pos:end="215:33"><expr pos:start="215:30" pos:end="215:33"><name pos:start="215:30" pos:end="215:33">addr</name></expr></argument>, <argument pos:start="215:36" pos:end="215:39"><expr pos:start="215:36" pos:end="215:39"><name pos:start="215:36" pos:end="215:39">addr</name></expr></argument>, <argument pos:start="215:42" pos:end="215:42"><expr pos:start="215:42" pos:end="215:42"><literal type="number" pos:start="215:42" pos:end="215:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:35"><expr pos:start="217:13" pos:end="217:34"><call pos:start="217:13" pos:end="217:34"><name pos:start="217:13" pos:end="217:20">gen_st32</name><argument_list pos:start="217:21" pos:end="217:34">(<argument pos:start="217:22" pos:end="217:24"><expr pos:start="217:22" pos:end="217:24"><name pos:start="217:22" pos:end="217:24">tmp</name></expr></argument>, <argument pos:start="217:27" pos:end="217:30"><expr pos:start="217:27" pos:end="217:30"><name pos:start="217:27" pos:end="217:30">addr</name></expr></argument>, <argument pos:start="217:33" pos:end="217:33"><expr pos:start="217:33" pos:end="217:33"><literal type="number" pos:start="217:33" pos:end="217:33">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="219:13" pos:end="253:13"><if pos:start="219:13" pos:end="249:13">if <condition pos:start="219:16" pos:end="219:33">(<expr pos:start="219:17" pos:end="219:32"><name pos:start="219:17" pos:end="219:20">insn</name> <operator pos:start="219:22" pos:end="219:22">&amp;</operator> <operator pos:start="219:24" pos:end="219:24">(</operator><literal type="number" pos:start="219:25" pos:end="219:25">1</literal> <operator pos:start="219:27" pos:end="219:28">&lt;&lt;</operator> <literal type="number" pos:start="219:30" pos:end="219:31">21</literal><operator pos:start="219:32" pos:end="219:32">)</operator></expr>)</condition> <block pos:start="219:35" pos:end="249:13">{<block_content pos:start="223:17" pos:end="247:40">

                <comment type="block" pos:start="221:17" pos:end="221:38">/* Base writeback.  */</comment>

                <switch pos:start="223:17" pos:end="235:17">switch <condition pos:start="223:24" pos:end="223:26">(<expr pos:start="223:25" pos:end="223:25"><name pos:start="223:25" pos:end="223:25">i</name></expr>)</condition> <block pos:start="223:28" pos:end="235:17">{<block_content pos:start="225:17" pos:end="233:33">

                <case pos:start="225:17" pos:end="225:23">case <expr pos:start="225:22" pos:end="225:22"><literal type="number" pos:start="225:22" pos:end="225:22">0</literal></expr>:</case> <expr_stmt pos:start="225:25" pos:end="225:36"><expr pos:start="225:25" pos:end="225:35"><name pos:start="225:25" pos:end="225:30">offset</name> <operator pos:start="225:32" pos:end="225:32">=</operator> <operator pos:start="225:34" pos:end="225:34">-</operator><literal type="number" pos:start="225:35" pos:end="225:35">8</literal></expr>;</expr_stmt> <break pos:start="225:38" pos:end="225:43">break;</break>

                <case pos:start="227:17" pos:end="227:23">case <expr pos:start="227:22" pos:end="227:22"><literal type="number" pos:start="227:22" pos:end="227:22">1</literal></expr>:</case> <expr_stmt pos:start="227:25" pos:end="227:35"><expr pos:start="227:25" pos:end="227:34"><name pos:start="227:25" pos:end="227:30">offset</name> <operator pos:start="227:32" pos:end="227:32">=</operator> <literal type="number" pos:start="227:34" pos:end="227:34">4</literal></expr>;</expr_stmt> <break pos:start="227:37" pos:end="227:42">break;</break>

                <case pos:start="229:17" pos:end="229:23">case <expr pos:start="229:22" pos:end="229:22"><literal type="number" pos:start="229:22" pos:end="229:22">2</literal></expr>:</case> <expr_stmt pos:start="229:25" pos:end="229:36"><expr pos:start="229:25" pos:end="229:35"><name pos:start="229:25" pos:end="229:30">offset</name> <operator pos:start="229:32" pos:end="229:32">=</operator> <operator pos:start="229:34" pos:end="229:34">-</operator><literal type="number" pos:start="229:35" pos:end="229:35">4</literal></expr>;</expr_stmt> <break pos:start="229:38" pos:end="229:43">break;</break>

                <case pos:start="231:17" pos:end="231:23">case <expr pos:start="231:22" pos:end="231:22"><literal type="number" pos:start="231:22" pos:end="231:22">3</literal></expr>:</case> <expr_stmt pos:start="231:25" pos:end="231:35"><expr pos:start="231:25" pos:end="231:34"><name pos:start="231:25" pos:end="231:30">offset</name> <operator pos:start="231:32" pos:end="231:32">=</operator> <literal type="number" pos:start="231:34" pos:end="231:34">0</literal></expr>;</expr_stmt> <break pos:start="231:37" pos:end="231:42">break;</break>

                <default pos:start="233:17" pos:end="233:24">default:</default> <expr_stmt pos:start="233:26" pos:end="233:33"><expr pos:start="233:26" pos:end="233:32"><call pos:start="233:26" pos:end="233:32"><name pos:start="233:26" pos:end="233:30">abort</name><argument_list pos:start="233:31" pos:end="233:32">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <if_stmt pos:start="237:17" pos:end="239:57"><if pos:start="237:17" pos:end="239:57">if <condition pos:start="237:20" pos:end="237:27">(<expr pos:start="237:21" pos:end="237:26"><name pos:start="237:21" pos:end="237:26">offset</name></expr>)</condition><block type="pseudo" pos:start="239:21" pos:end="239:57"><block_content pos:start="239:21" pos:end="239:57">

                    <expr_stmt pos:start="239:21" pos:end="239:57"><expr pos:start="239:21" pos:end="239:56"><call pos:start="239:21" pos:end="239:56"><name pos:start="239:21" pos:end="239:36">tcg_gen_addi_i32</name><argument_list pos:start="239:37" pos:end="239:56">(<argument pos:start="239:38" pos:end="239:41"><expr pos:start="239:38" pos:end="239:41"><name pos:start="239:38" pos:end="239:41">addr</name></expr></argument>, <argument pos:start="239:44" pos:end="239:47"><expr pos:start="239:44" pos:end="239:47"><name pos:start="239:44" pos:end="239:47">addr</name></expr></argument>, <argument pos:start="239:50" pos:end="239:55"><expr pos:start="239:50" pos:end="239:55"><name pos:start="239:50" pos:end="239:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:41"><expr pos:start="241:17" pos:end="241:40"><name pos:start="241:17" pos:end="241:19">tmp</name> <operator pos:start="241:21" pos:end="241:21">=</operator> <call pos:start="241:23" pos:end="241:40"><name pos:start="241:23" pos:end="241:35">tcg_const_i32</name><argument_list pos:start="241:36" pos:end="241:40">(<argument pos:start="241:37" pos:end="241:39"><expr pos:start="241:37" pos:end="241:39"><name pos:start="241:37" pos:end="241:39">op1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="243:17" pos:end="243:62"><expr pos:start="243:17" pos:end="243:61"><call pos:start="243:17" pos:end="243:61"><name pos:start="243:17" pos:end="243:41">gen_helper_set_r13_banked</name><argument_list pos:start="243:42" pos:end="243:61">(<argument pos:start="243:43" pos:end="243:49"><expr pos:start="243:43" pos:end="243:49"><name pos:start="243:43" pos:end="243:49">cpu_env</name></expr></argument>, <argument pos:start="243:52" pos:end="243:54"><expr pos:start="243:52" pos:end="243:54"><name pos:start="243:52" pos:end="243:54">tmp</name></expr></argument>, <argument pos:start="243:57" pos:end="243:60"><expr pos:start="243:57" pos:end="243:60"><name pos:start="243:57" pos:end="243:60">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="245:17" pos:end="245:39"><expr pos:start="245:17" pos:end="245:38"><call pos:start="245:17" pos:end="245:38"><name pos:start="245:17" pos:end="245:33">tcg_temp_free_i32</name><argument_list pos:start="245:34" pos:end="245:38">(<argument pos:start="245:35" pos:end="245:37"><expr pos:start="245:35" pos:end="245:37"><name pos:start="245:35" pos:end="245:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:40"><expr pos:start="247:17" pos:end="247:39"><call pos:start="247:17" pos:end="247:39"><name pos:start="247:17" pos:end="247:33">tcg_temp_free_i32</name><argument_list pos:start="247:34" pos:end="247:39">(<argument pos:start="247:35" pos:end="247:38"><expr pos:start="247:35" pos:end="247:38"><name pos:start="247:35" pos:end="247:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="249:15" pos:end="253:13">else <block pos:start="249:20" pos:end="253:13">{<block_content pos:start="251:17" pos:end="251:40">

                <expr_stmt pos:start="251:17" pos:end="251:40"><expr pos:start="251:17" pos:end="251:39"><call pos:start="251:17" pos:end="251:39"><name pos:start="251:17" pos:end="251:33">tcg_temp_free_i32</name><argument_list pos:start="251:34" pos:end="251:39">(<argument pos:start="251:35" pos:end="251:38"><expr pos:start="251:35" pos:end="251:38"><name pos:start="251:35" pos:end="251:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="255:13" pos:end="255:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="257:11" pos:end="335:9">else if <condition pos:start="257:19" pos:end="257:53">(<expr pos:start="257:20" pos:end="257:52"><operator pos:start="257:20" pos:end="257:20">(</operator><name pos:start="257:21" pos:end="257:24">insn</name> <operator pos:start="257:26" pos:end="257:26">&amp;</operator> <literal type="number" pos:start="257:28" pos:end="257:37">0x0e50ffe0</literal><operator pos:start="257:38" pos:end="257:38">)</operator> <operator pos:start="257:40" pos:end="257:41">==</operator> <literal type="number" pos:start="257:43" pos:end="257:52">0x08100a00</literal></expr>)</condition> <block pos:start="257:55" pos:end="335:9">{<block_content pos:start="261:13" pos:end="333:19">

            <comment type="block" pos:start="259:13" pos:end="259:21">/* rfe */</comment>

            <decl_stmt pos:start="261:13" pos:end="261:27"><decl pos:start="261:13" pos:end="261:26"><type pos:start="261:13" pos:end="261:19"><name pos:start="261:13" pos:end="261:19">int32_t</name></type> <name pos:start="261:21" pos:end="261:26">offset</name></decl>;</decl_stmt>

            <if_stmt pos:start="263:13" pos:end="265:32"><if pos:start="263:13" pos:end="265:32">if <condition pos:start="263:16" pos:end="263:27">(<expr pos:start="263:17" pos:end="263:26"><call pos:start="263:17" pos:end="263:26"><name pos:start="263:17" pos:end="263:23">IS_USER</name><argument_list pos:start="263:24" pos:end="263:26">(<argument pos:start="263:25" pos:end="263:25"><expr pos:start="263:25" pos:end="263:25"><name pos:start="263:25" pos:end="263:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="265:17" pos:end="265:32"><block_content pos:start="265:17" pos:end="265:32">

                <goto pos:start="265:17" pos:end="265:32">goto <name pos:start="265:22" pos:end="265:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:20"><expr pos:start="267:13" pos:end="267:19"><call pos:start="267:13" pos:end="267:19"><name pos:start="267:13" pos:end="267:16">ARCH</name><argument_list pos:start="267:17" pos:end="267:19">(<argument pos:start="267:18" pos:end="267:18"><expr pos:start="267:18" pos:end="267:18"><literal type="number" pos:start="267:18" pos:end="267:18">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:36"><expr pos:start="269:13" pos:end="269:35"><name pos:start="269:13" pos:end="269:14">rn</name> <operator pos:start="269:16" pos:end="269:16">=</operator> <operator pos:start="269:18" pos:end="269:18">(</operator><name pos:start="269:19" pos:end="269:22">insn</name> <operator pos:start="269:24" pos:end="269:25">&gt;&gt;</operator> <literal type="number" pos:start="269:27" pos:end="269:28">16</literal><operator pos:start="269:29" pos:end="269:29">)</operator> <operator pos:start="269:31" pos:end="269:31">&amp;</operator> <literal type="number" pos:start="269:33" pos:end="269:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="271:13" pos:end="271:35"><expr pos:start="271:13" pos:end="271:34"><name pos:start="271:13" pos:end="271:16">addr</name> <operator pos:start="271:18" pos:end="271:18">=</operator> <call pos:start="271:20" pos:end="271:34"><name pos:start="271:20" pos:end="271:27">load_reg</name><argument_list pos:start="271:28" pos:end="271:34">(<argument pos:start="271:29" pos:end="271:29"><expr pos:start="271:29" pos:end="271:29"><name pos:start="271:29" pos:end="271:29">s</name></expr></argument>, <argument pos:start="271:32" pos:end="271:33"><expr pos:start="271:32" pos:end="271:33"><name pos:start="271:32" pos:end="271:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:33"><expr pos:start="273:13" pos:end="273:32"><name pos:start="273:13" pos:end="273:13">i</name> <operator pos:start="273:15" pos:end="273:15">=</operator> <operator pos:start="273:17" pos:end="273:17">(</operator><name pos:start="273:18" pos:end="273:21">insn</name> <operator pos:start="273:23" pos:end="273:24">&gt;&gt;</operator> <literal type="number" pos:start="273:26" pos:end="273:27">23</literal><operator pos:start="273:28" pos:end="273:28">)</operator> <operator pos:start="273:30" pos:end="273:30">&amp;</operator> <literal type="number" pos:start="273:32" pos:end="273:32">3</literal></expr>;</expr_stmt>

            <switch pos:start="275:13" pos:end="287:13">switch <condition pos:start="275:20" pos:end="275:22">(<expr pos:start="275:21" pos:end="275:21"><name pos:start="275:21" pos:end="275:21">i</name></expr>)</condition> <block pos:start="275:24" pos:end="287:13">{<block_content pos:start="277:13" pos:end="285:29">

            <case pos:start="277:13" pos:end="277:19">case <expr pos:start="277:18" pos:end="277:18"><literal type="number" pos:start="277:18" pos:end="277:18">0</literal></expr>:</case> <expr_stmt pos:start="277:21" pos:end="277:32"><expr pos:start="277:21" pos:end="277:31"><name pos:start="277:21" pos:end="277:26">offset</name> <operator pos:start="277:28" pos:end="277:28">=</operator> <operator pos:start="277:30" pos:end="277:30">-</operator><literal type="number" pos:start="277:31" pos:end="277:31">4</literal></expr>;</expr_stmt> <break pos:start="277:34" pos:end="277:39">break;</break> <comment type="block" pos:start="277:41" pos:end="277:48">/* DA */</comment>

            <case pos:start="279:13" pos:end="279:19">case <expr pos:start="279:18" pos:end="279:18"><literal type="number" pos:start="279:18" pos:end="279:18">1</literal></expr>:</case> <expr_stmt pos:start="279:21" pos:end="279:31"><expr pos:start="279:21" pos:end="279:30"><name pos:start="279:21" pos:end="279:26">offset</name> <operator pos:start="279:28" pos:end="279:28">=</operator> <literal type="number" pos:start="279:30" pos:end="279:30">0</literal></expr>;</expr_stmt> <break pos:start="279:33" pos:end="279:38">break;</break> <comment type="block" pos:start="279:40" pos:end="279:47">/* IA */</comment>

            <case pos:start="281:13" pos:end="281:19">case <expr pos:start="281:18" pos:end="281:18"><literal type="number" pos:start="281:18" pos:end="281:18">2</literal></expr>:</case> <expr_stmt pos:start="281:21" pos:end="281:32"><expr pos:start="281:21" pos:end="281:31"><name pos:start="281:21" pos:end="281:26">offset</name> <operator pos:start="281:28" pos:end="281:28">=</operator> <operator pos:start="281:30" pos:end="281:30">-</operator><literal type="number" pos:start="281:31" pos:end="281:31">8</literal></expr>;</expr_stmt> <break pos:start="281:34" pos:end="281:39">break;</break> <comment type="block" pos:start="281:41" pos:end="281:48">/* DB */</comment>

            <case pos:start="283:13" pos:end="283:19">case <expr pos:start="283:18" pos:end="283:18"><literal type="number" pos:start="283:18" pos:end="283:18">3</literal></expr>:</case> <expr_stmt pos:start="283:21" pos:end="283:31"><expr pos:start="283:21" pos:end="283:30"><name pos:start="283:21" pos:end="283:26">offset</name> <operator pos:start="283:28" pos:end="283:28">=</operator> <literal type="number" pos:start="283:30" pos:end="283:30">4</literal></expr>;</expr_stmt> <break pos:start="283:33" pos:end="283:38">break;</break> <comment type="block" pos:start="283:40" pos:end="283:47">/* IB */</comment>

            <default pos:start="285:13" pos:end="285:20">default:</default> <expr_stmt pos:start="285:22" pos:end="285:29"><expr pos:start="285:22" pos:end="285:28"><call pos:start="285:22" pos:end="285:28"><name pos:start="285:22" pos:end="285:26">abort</name><argument_list pos:start="285:27" pos:end="285:28">()</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></switch>

            <if_stmt pos:start="289:13" pos:end="291:53"><if pos:start="289:13" pos:end="291:53">if <condition pos:start="289:16" pos:end="289:23">(<expr pos:start="289:17" pos:end="289:22"><name pos:start="289:17" pos:end="289:22">offset</name></expr>)</condition><block type="pseudo" pos:start="291:17" pos:end="291:53"><block_content pos:start="291:17" pos:end="291:53">

                <expr_stmt pos:start="291:17" pos:end="291:53"><expr pos:start="291:17" pos:end="291:52"><call pos:start="291:17" pos:end="291:52"><name pos:start="291:17" pos:end="291:32">tcg_gen_addi_i32</name><argument_list pos:start="291:33" pos:end="291:52">(<argument pos:start="291:34" pos:end="291:37"><expr pos:start="291:34" pos:end="291:37"><name pos:start="291:34" pos:end="291:37">addr</name></expr></argument>, <argument pos:start="291:40" pos:end="291:43"><expr pos:start="291:40" pos:end="291:43"><name pos:start="291:40" pos:end="291:43">addr</name></expr></argument>, <argument pos:start="291:46" pos:end="291:51"><expr pos:start="291:46" pos:end="291:51"><name pos:start="291:46" pos:end="291:51">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <comment type="block" pos:start="293:13" pos:end="293:55">/* Load PC into tmp and CPSR into tmp2.  */</comment>

            <expr_stmt pos:start="295:13" pos:end="295:36"><expr pos:start="295:13" pos:end="295:35"><name pos:start="295:13" pos:end="295:15">tmp</name> <operator pos:start="295:17" pos:end="295:17">=</operator> <call pos:start="295:19" pos:end="295:35"><name pos:start="295:19" pos:end="295:26">gen_ld32</name><argument_list pos:start="295:27" pos:end="295:35">(<argument pos:start="295:28" pos:end="295:31"><expr pos:start="295:28" pos:end="295:31"><name pos:start="295:28" pos:end="295:31">addr</name></expr></argument>, <argument pos:start="295:34" pos:end="295:34"><expr pos:start="295:34" pos:end="295:34"><literal type="number" pos:start="295:34" pos:end="295:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:44"><expr pos:start="297:13" pos:end="297:43"><call pos:start="297:13" pos:end="297:43"><name pos:start="297:13" pos:end="297:28">tcg_gen_addi_i32</name><argument_list pos:start="297:29" pos:end="297:43">(<argument pos:start="297:30" pos:end="297:33"><expr pos:start="297:30" pos:end="297:33"><name pos:start="297:30" pos:end="297:33">addr</name></expr></argument>, <argument pos:start="297:36" pos:end="297:39"><expr pos:start="297:36" pos:end="297:39"><name pos:start="297:36" pos:end="297:39">addr</name></expr></argument>, <argument pos:start="297:42" pos:end="297:42"><expr pos:start="297:42" pos:end="297:42"><literal type="number" pos:start="297:42" pos:end="297:42">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:37"><expr pos:start="299:13" pos:end="299:36"><name pos:start="299:13" pos:end="299:16">tmp2</name> <operator pos:start="299:18" pos:end="299:18">=</operator> <call pos:start="299:20" pos:end="299:36"><name pos:start="299:20" pos:end="299:27">gen_ld32</name><argument_list pos:start="299:28" pos:end="299:36">(<argument pos:start="299:29" pos:end="299:32"><expr pos:start="299:29" pos:end="299:32"><name pos:start="299:29" pos:end="299:32">addr</name></expr></argument>, <argument pos:start="299:35" pos:end="299:35"><expr pos:start="299:35" pos:end="299:35"><literal type="number" pos:start="299:35" pos:end="299:35">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="301:13" pos:end="329:13"><if pos:start="301:13" pos:end="325:13">if <condition pos:start="301:16" pos:end="301:33">(<expr pos:start="301:17" pos:end="301:32"><name pos:start="301:17" pos:end="301:20">insn</name> <operator pos:start="301:22" pos:end="301:22">&amp;</operator> <operator pos:start="301:24" pos:end="301:24">(</operator><literal type="number" pos:start="301:25" pos:end="301:25">1</literal> <operator pos:start="301:27" pos:end="301:28">&lt;&lt;</operator> <literal type="number" pos:start="301:30" pos:end="301:31">21</literal><operator pos:start="301:32" pos:end="301:32">)</operator></expr>)</condition> <block pos:start="301:35" pos:end="325:13">{<block_content pos:start="305:17" pos:end="323:39">

                <comment type="block" pos:start="303:17" pos:end="303:38">/* Base writeback.  */</comment>

                <switch pos:start="305:17" pos:end="317:17">switch <condition pos:start="305:24" pos:end="305:26">(<expr pos:start="305:25" pos:end="305:25"><name pos:start="305:25" pos:end="305:25">i</name></expr>)</condition> <block pos:start="305:28" pos:end="317:17">{<block_content pos:start="307:17" pos:end="315:33">

                <case pos:start="307:17" pos:end="307:23">case <expr pos:start="307:22" pos:end="307:22"><literal type="number" pos:start="307:22" pos:end="307:22">0</literal></expr>:</case> <expr_stmt pos:start="307:25" pos:end="307:36"><expr pos:start="307:25" pos:end="307:35"><name pos:start="307:25" pos:end="307:30">offset</name> <operator pos:start="307:32" pos:end="307:32">=</operator> <operator pos:start="307:34" pos:end="307:34">-</operator><literal type="number" pos:start="307:35" pos:end="307:35">8</literal></expr>;</expr_stmt> <break pos:start="307:38" pos:end="307:43">break;</break>

                <case pos:start="309:17" pos:end="309:23">case <expr pos:start="309:22" pos:end="309:22"><literal type="number" pos:start="309:22" pos:end="309:22">1</literal></expr>:</case> <expr_stmt pos:start="309:25" pos:end="309:35"><expr pos:start="309:25" pos:end="309:34"><name pos:start="309:25" pos:end="309:30">offset</name> <operator pos:start="309:32" pos:end="309:32">=</operator> <literal type="number" pos:start="309:34" pos:end="309:34">4</literal></expr>;</expr_stmt> <break pos:start="309:37" pos:end="309:42">break;</break>

                <case pos:start="311:17" pos:end="311:23">case <expr pos:start="311:22" pos:end="311:22"><literal type="number" pos:start="311:22" pos:end="311:22">2</literal></expr>:</case> <expr_stmt pos:start="311:25" pos:end="311:36"><expr pos:start="311:25" pos:end="311:35"><name pos:start="311:25" pos:end="311:30">offset</name> <operator pos:start="311:32" pos:end="311:32">=</operator> <operator pos:start="311:34" pos:end="311:34">-</operator><literal type="number" pos:start="311:35" pos:end="311:35">4</literal></expr>;</expr_stmt> <break pos:start="311:38" pos:end="311:43">break;</break>

                <case pos:start="313:17" pos:end="313:23">case <expr pos:start="313:22" pos:end="313:22"><literal type="number" pos:start="313:22" pos:end="313:22">3</literal></expr>:</case> <expr_stmt pos:start="313:25" pos:end="313:35"><expr pos:start="313:25" pos:end="313:34"><name pos:start="313:25" pos:end="313:30">offset</name> <operator pos:start="313:32" pos:end="313:32">=</operator> <literal type="number" pos:start="313:34" pos:end="313:34">0</literal></expr>;</expr_stmt> <break pos:start="313:37" pos:end="313:42">break;</break>

                <default pos:start="315:17" pos:end="315:24">default:</default> <expr_stmt pos:start="315:26" pos:end="315:33"><expr pos:start="315:26" pos:end="315:32"><call pos:start="315:26" pos:end="315:32"><name pos:start="315:26" pos:end="315:30">abort</name><argument_list pos:start="315:31" pos:end="315:32">()</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></switch>

                <if_stmt pos:start="319:17" pos:end="321:57"><if pos:start="319:17" pos:end="321:57">if <condition pos:start="319:20" pos:end="319:27">(<expr pos:start="319:21" pos:end="319:26"><name pos:start="319:21" pos:end="319:26">offset</name></expr>)</condition><block type="pseudo" pos:start="321:21" pos:end="321:57"><block_content pos:start="321:21" pos:end="321:57">

                    <expr_stmt pos:start="321:21" pos:end="321:57"><expr pos:start="321:21" pos:end="321:56"><call pos:start="321:21" pos:end="321:56"><name pos:start="321:21" pos:end="321:36">tcg_gen_addi_i32</name><argument_list pos:start="321:37" pos:end="321:56">(<argument pos:start="321:38" pos:end="321:41"><expr pos:start="321:38" pos:end="321:41"><name pos:start="321:38" pos:end="321:41">addr</name></expr></argument>, <argument pos:start="321:44" pos:end="321:47"><expr pos:start="321:44" pos:end="321:47"><name pos:start="321:44" pos:end="321:47">addr</name></expr></argument>, <argument pos:start="321:50" pos:end="321:55"><expr pos:start="321:50" pos:end="321:55"><name pos:start="321:50" pos:end="321:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:39"><expr pos:start="323:17" pos:end="323:38"><call pos:start="323:17" pos:end="323:38"><name pos:start="323:17" pos:end="323:25">store_reg</name><argument_list pos:start="323:26" pos:end="323:38">(<argument pos:start="323:27" pos:end="323:27"><expr pos:start="323:27" pos:end="323:27"><name pos:start="323:27" pos:end="323:27">s</name></expr></argument>, <argument pos:start="323:30" pos:end="323:31"><expr pos:start="323:30" pos:end="323:31"><name pos:start="323:30" pos:end="323:31">rn</name></expr></argument>, <argument pos:start="323:34" pos:end="323:37"><expr pos:start="323:34" pos:end="323:37"><name pos:start="323:34" pos:end="323:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="325:15" pos:end="329:13">else <block pos:start="325:20" pos:end="329:13">{<block_content pos:start="327:17" pos:end="327:40">

                <expr_stmt pos:start="327:17" pos:end="327:40"><expr pos:start="327:17" pos:end="327:39"><call pos:start="327:17" pos:end="327:39"><name pos:start="327:17" pos:end="327:33">tcg_temp_free_i32</name><argument_list pos:start="327:34" pos:end="327:39">(<argument pos:start="327:35" pos:end="327:38"><expr pos:start="327:35" pos:end="327:38"><name pos:start="327:35" pos:end="327:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:34"><expr pos:start="331:13" pos:end="331:33"><call pos:start="331:13" pos:end="331:33"><name pos:start="331:13" pos:end="331:19">gen_rfe</name><argument_list pos:start="331:20" pos:end="331:33">(<argument pos:start="331:21" pos:end="331:21"><expr pos:start="331:21" pos:end="331:21"><name pos:start="331:21" pos:end="331:21">s</name></expr></argument>, <argument pos:start="331:24" pos:end="331:26"><expr pos:start="331:24" pos:end="331:26"><name pos:start="331:24" pos:end="331:26">tmp</name></expr></argument>, <argument pos:start="331:29" pos:end="331:32"><expr pos:start="331:29" pos:end="331:32"><name pos:start="331:29" pos:end="331:32">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="333:13" pos:end="333:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="335:11" pos:end="367:9">else if <condition pos:start="335:19" pos:end="335:53">(<expr pos:start="335:20" pos:end="335:52"><operator pos:start="335:20" pos:end="335:20">(</operator><name pos:start="335:21" pos:end="335:24">insn</name> <operator pos:start="335:26" pos:end="335:26">&amp;</operator> <literal type="number" pos:start="335:28" pos:end="335:37">0x0e000000</literal><operator pos:start="335:38" pos:end="335:38">)</operator> <operator pos:start="335:40" pos:end="335:41">==</operator> <literal type="number" pos:start="335:43" pos:end="335:52">0x0a000000</literal></expr>)</condition> <block pos:start="335:55" pos:end="367:9">{<block_content pos:start="339:13" pos:end="365:19">

            <comment type="block" pos:start="337:13" pos:end="337:64">/* branch link and change to thumb (blx &lt;offset&gt;) */</comment>

            <decl_stmt pos:start="339:13" pos:end="339:27"><decl pos:start="339:13" pos:end="339:26"><type pos:start="339:13" pos:end="339:19"><name pos:start="339:13" pos:end="339:19">int32_t</name></type> <name pos:start="339:21" pos:end="339:26">offset</name></decl>;</decl_stmt>



            <expr_stmt pos:start="343:13" pos:end="343:34"><expr pos:start="343:13" pos:end="343:33"><name pos:start="343:13" pos:end="343:15">val</name> <operator pos:start="343:17" pos:end="343:17">=</operator> <operator pos:start="343:19" pos:end="343:19">(</operator><name pos:start="343:20" pos:end="343:27">uint32_t</name><operator pos:start="343:28" pos:end="343:28">)</operator><name pos:start="343:29" pos:end="343:33"><name pos:start="343:29" pos:end="343:29">s</name><operator pos:start="343:30" pos:end="343:31">-&gt;</operator><name pos:start="343:32" pos:end="343:33">pc</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:37"><expr pos:start="345:13" pos:end="345:36"><name pos:start="345:13" pos:end="345:15">tmp</name> <operator pos:start="345:17" pos:end="345:17">=</operator> <call pos:start="345:19" pos:end="345:36"><name pos:start="345:19" pos:end="345:34">tcg_temp_new_i32</name><argument_list pos:start="345:35" pos:end="345:36">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:39"><expr pos:start="347:13" pos:end="347:38"><call pos:start="347:13" pos:end="347:38"><name pos:start="347:13" pos:end="347:28">tcg_gen_movi_i32</name><argument_list pos:start="347:29" pos:end="347:38">(<argument pos:start="347:30" pos:end="347:32"><expr pos:start="347:30" pos:end="347:32"><name pos:start="347:30" pos:end="347:32">tmp</name></expr></argument>, <argument pos:start="347:35" pos:end="347:37"><expr pos:start="347:35" pos:end="347:37"><name pos:start="347:35" pos:end="347:37">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:34"><expr pos:start="349:13" pos:end="349:33"><call pos:start="349:13" pos:end="349:33"><name pos:start="349:13" pos:end="349:21">store_reg</name><argument_list pos:start="349:22" pos:end="349:33">(<argument pos:start="349:23" pos:end="349:23"><expr pos:start="349:23" pos:end="349:23"><name pos:start="349:23" pos:end="349:23">s</name></expr></argument>, <argument pos:start="349:26" pos:end="349:27"><expr pos:start="349:26" pos:end="349:27"><literal type="number" pos:start="349:26" pos:end="349:27">14</literal></expr></argument>, <argument pos:start="349:30" pos:end="349:32"><expr pos:start="349:30" pos:end="349:32"><name pos:start="349:30" pos:end="349:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="351:13" pos:end="351:47">/* Sign-extend the 24-bit offset */</comment>

            <expr_stmt pos:start="353:13" pos:end="353:49"><expr pos:start="353:13" pos:end="353:48"><name pos:start="353:13" pos:end="353:18">offset</name> <operator pos:start="353:20" pos:end="353:20">=</operator> <operator pos:start="353:22" pos:end="353:22">(</operator><operator pos:start="353:23" pos:end="353:23">(</operator><operator pos:start="353:24" pos:end="353:24">(</operator><name pos:start="353:25" pos:end="353:31">int32_t</name><operator pos:start="353:32" pos:end="353:32">)</operator><name pos:start="353:33" pos:end="353:36">insn</name><operator pos:start="353:37" pos:end="353:37">)</operator> <operator pos:start="353:39" pos:end="353:40">&lt;&lt;</operator> <literal type="number" pos:start="353:42" pos:end="353:42">8</literal><operator pos:start="353:43" pos:end="353:43">)</operator> <operator pos:start="353:45" pos:end="353:46">&gt;&gt;</operator> <literal type="number" pos:start="353:48" pos:end="353:48">8</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="355:13" pos:end="355:54">/* offset * 4 + bit24 * 2 + (thumb bit) */</comment>

            <expr_stmt pos:start="357:13" pos:end="357:58"><expr pos:start="357:13" pos:end="357:57"><name pos:start="357:13" pos:end="357:15">val</name> <operator pos:start="357:17" pos:end="357:18">+=</operator> <operator pos:start="357:20" pos:end="357:20">(</operator><name pos:start="357:21" pos:end="357:26">offset</name> <operator pos:start="357:28" pos:end="357:29">&lt;&lt;</operator> <literal type="number" pos:start="357:31" pos:end="357:31">2</literal><operator pos:start="357:32" pos:end="357:32">)</operator> <operator pos:start="357:34" pos:end="357:34">|</operator> <operator pos:start="357:36" pos:end="357:36">(</operator><operator pos:start="357:37" pos:end="357:37">(</operator><name pos:start="357:38" pos:end="357:41">insn</name> <operator pos:start="357:43" pos:end="357:44">&gt;&gt;</operator> <literal type="number" pos:start="357:46" pos:end="357:47">23</literal><operator pos:start="357:48" pos:end="357:48">)</operator> <operator pos:start="357:50" pos:end="357:50">&amp;</operator> <literal type="number" pos:start="357:52" pos:end="357:52">2</literal><operator pos:start="357:53" pos:end="357:53">)</operator> <operator pos:start="357:55" pos:end="357:55">|</operator> <literal type="number" pos:start="357:57" pos:end="357:57">1</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="359:13" pos:end="359:33">/* pipeline offset */</comment>

            <expr_stmt pos:start="361:13" pos:end="361:21"><expr pos:start="361:13" pos:end="361:20"><name pos:start="361:13" pos:end="361:15">val</name> <operator pos:start="361:17" pos:end="361:18">+=</operator> <literal type="number" pos:start="361:20" pos:end="361:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:30"><expr pos:start="363:13" pos:end="363:29"><call pos:start="363:13" pos:end="363:29"><name pos:start="363:13" pos:end="363:21">gen_bx_im</name><argument_list pos:start="363:22" pos:end="363:29">(<argument pos:start="363:23" pos:end="363:23"><expr pos:start="363:23" pos:end="363:23"><name pos:start="363:23" pos:end="363:23">s</name></expr></argument>, <argument pos:start="363:26" pos:end="363:28"><expr pos:start="363:26" pos:end="363:28"><name pos:start="363:26" pos:end="363:28">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="365:13" pos:end="365:19">return;</return>

        </block_content>}</block></if> <if type="elseif" pos:start="367:11" pos:end="381:9">else if <condition pos:start="367:19" pos:end="367:53">(<expr pos:start="367:20" pos:end="367:52"><operator pos:start="367:20" pos:end="367:20">(</operator><name pos:start="367:21" pos:end="367:24">insn</name> <operator pos:start="367:26" pos:end="367:26">&amp;</operator> <literal type="number" pos:start="367:28" pos:end="367:37">0x0e000f00</literal><operator pos:start="367:38" pos:end="367:38">)</operator> <operator pos:start="367:40" pos:end="367:41">==</operator> <literal type="number" pos:start="367:43" pos:end="367:52">0x0c000100</literal></expr>)</condition> <block pos:start="367:55" pos:end="381:9">{<block_content pos:start="369:13" pos:end="379:13">

            <if_stmt pos:start="369:13" pos:end="379:13"><if pos:start="369:13" pos:end="379:13">if <condition pos:start="369:16" pos:end="369:53">(<expr pos:start="369:17" pos:end="369:52"><call pos:start="369:17" pos:end="369:52"><name pos:start="369:17" pos:end="369:27">arm_feature</name><argument_list pos:start="369:28" pos:end="369:52">(<argument pos:start="369:29" pos:end="369:31"><expr pos:start="369:29" pos:end="369:31"><name pos:start="369:29" pos:end="369:31">env</name></expr></argument>, <argument pos:start="369:34" pos:end="369:51"><expr pos:start="369:34" pos:end="369:51"><name pos:start="369:34" pos:end="369:51">ARM_FEATURE_IWMMXT</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="369:55" pos:end="379:13">{<block_content pos:start="373:17" pos:end="377:31">

                <comment type="block" pos:start="371:17" pos:end="371:48">/* iWMMXt register transfer.  */</comment>

                <if_stmt pos:start="373:17" pos:end="377:31"><if pos:start="373:17" pos:end="377:31">if <condition pos:start="373:20" pos:end="373:50">(<expr pos:start="373:21" pos:end="373:49"><name pos:start="373:21" pos:end="373:38"><name pos:start="373:21" pos:end="373:23">env</name><operator pos:start="373:24" pos:end="373:25">-&gt;</operator><name pos:start="373:26" pos:end="373:29">cp15</name><operator pos:start="373:30" pos:end="373:30">.</operator><name pos:start="373:31" pos:end="373:38">c15_cpar</name></name> <operator pos:start="373:40" pos:end="373:40">&amp;</operator> <operator pos:start="373:42" pos:end="373:42">(</operator><literal type="number" pos:start="373:43" pos:end="373:43">1</literal> <operator pos:start="373:45" pos:end="373:46">&lt;&lt;</operator> <literal type="number" pos:start="373:48" pos:end="373:48">1</literal><operator pos:start="373:49" pos:end="373:49">)</operator></expr>)</condition><block type="pseudo" pos:start="375:21" pos:end="377:31"><block_content pos:start="375:21" pos:end="377:31">

                    <if_stmt pos:start="375:21" pos:end="377:31"><if pos:start="375:21" pos:end="377:31">if <condition pos:start="375:24" pos:end="375:57">(<expr pos:start="375:25" pos:end="375:56"><operator pos:start="375:25" pos:end="375:25">!</operator><call pos:start="375:26" pos:end="375:56"><name pos:start="375:26" pos:end="375:42">disas_iwmmxt_insn</name><argument_list pos:start="375:43" pos:end="375:56">(<argument pos:start="375:44" pos:end="375:46"><expr pos:start="375:44" pos:end="375:46"><name pos:start="375:44" pos:end="375:46">env</name></expr></argument>, <argument pos:start="375:49" pos:end="375:49"><expr pos:start="375:49" pos:end="375:49"><name pos:start="375:49" pos:end="375:49">s</name></expr></argument>, <argument pos:start="375:52" pos:end="375:55"><expr pos:start="375:52" pos:end="375:55"><name pos:start="375:52" pos:end="375:55">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="377:25" pos:end="377:31"><block_content pos:start="377:25" pos:end="377:31">

                        <return pos:start="377:25" pos:end="377:31">return;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="381:11" pos:end="385:9">else if <condition pos:start="381:19" pos:end="381:53">(<expr pos:start="381:20" pos:end="381:52"><operator pos:start="381:20" pos:end="381:20">(</operator><name pos:start="381:21" pos:end="381:24">insn</name> <operator pos:start="381:26" pos:end="381:26">&amp;</operator> <literal type="number" pos:start="381:28" pos:end="381:37">0x0fe00000</literal><operator pos:start="381:38" pos:end="381:38">)</operator> <operator pos:start="381:40" pos:end="381:41">==</operator> <literal type="number" pos:start="381:43" pos:end="381:52">0x0c400000</literal></expr>)</condition> <block pos:start="381:55" pos:end="385:9">{<block_content>

            <comment type="block" pos:start="383:13" pos:end="383:56">/* Coprocessor double register transfer.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="385:11" pos:end="389:9">else if <condition pos:start="385:19" pos:end="385:53">(<expr pos:start="385:20" pos:end="385:52"><operator pos:start="385:20" pos:end="385:20">(</operator><name pos:start="385:21" pos:end="385:24">insn</name> <operator pos:start="385:26" pos:end="385:26">&amp;</operator> <literal type="number" pos:start="385:28" pos:end="385:37">0x0f000010</literal><operator pos:start="385:38" pos:end="385:38">)</operator> <operator pos:start="385:40" pos:end="385:41">==</operator> <literal type="number" pos:start="385:43" pos:end="385:52">0x0e000010</literal></expr>)</condition> <block pos:start="385:55" pos:end="389:9">{<block_content>

            <comment type="block" pos:start="387:13" pos:end="387:60">/* Additional coprocessor register transfer.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="389:11" pos:end="439:9">else if <condition pos:start="389:19" pos:end="389:53">(<expr pos:start="389:20" pos:end="389:52"><operator pos:start="389:20" pos:end="389:20">(</operator><name pos:start="389:21" pos:end="389:24">insn</name> <operator pos:start="389:26" pos:end="389:26">&amp;</operator> <literal type="number" pos:start="389:28" pos:end="389:37">0x0ff10020</literal><operator pos:start="389:38" pos:end="389:38">)</operator> <operator pos:start="389:40" pos:end="389:41">==</operator> <literal type="number" pos:start="389:43" pos:end="389:52">0x01000000</literal></expr>)</condition> <block pos:start="389:55" pos:end="439:9">{<block_content pos:start="391:13" pos:end="437:19">

            <decl_stmt pos:start="391:13" pos:end="391:26"><decl pos:start="391:13" pos:end="391:25"><type pos:start="391:13" pos:end="391:20"><name pos:start="391:13" pos:end="391:20">uint32_t</name></type> <name pos:start="391:22" pos:end="391:25">mask</name></decl>;</decl_stmt>

            <decl_stmt pos:start="393:13" pos:end="393:25"><decl pos:start="393:13" pos:end="393:24"><type pos:start="393:13" pos:end="393:20"><name pos:start="393:13" pos:end="393:20">uint32_t</name></type> <name pos:start="393:22" pos:end="393:24">val</name></decl>;</decl_stmt>

            <comment type="block" pos:start="395:13" pos:end="395:34">/* cps (privileged) */</comment>

            <if_stmt pos:start="397:13" pos:end="399:23"><if pos:start="397:13" pos:end="399:23">if <condition pos:start="397:16" pos:end="397:27">(<expr pos:start="397:17" pos:end="397:26"><call pos:start="397:17" pos:end="397:26"><name pos:start="397:17" pos:end="397:23">IS_USER</name><argument_list pos:start="397:24" pos:end="397:26">(<argument pos:start="397:25" pos:end="397:25"><expr pos:start="397:25" pos:end="397:25"><name pos:start="397:25" pos:end="397:25">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="399:17" pos:end="399:23"><block_content pos:start="399:17" pos:end="399:23">

                <return pos:start="399:17" pos:end="399:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:27"><expr pos:start="401:13" pos:end="401:26"><name pos:start="401:13" pos:end="401:16">mask</name> <operator pos:start="401:18" pos:end="401:18">=</operator> <name pos:start="401:20" pos:end="401:22">val</name> <operator pos:start="401:24" pos:end="401:24">=</operator> <literal type="number" pos:start="401:26" pos:end="401:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="403:13" pos:end="421:13"><if pos:start="403:13" pos:end="421:13">if <condition pos:start="403:16" pos:end="403:33">(<expr pos:start="403:17" pos:end="403:32"><name pos:start="403:17" pos:end="403:20">insn</name> <operator pos:start="403:22" pos:end="403:22">&amp;</operator> <operator pos:start="403:24" pos:end="403:24">(</operator><literal type="number" pos:start="403:25" pos:end="403:25">1</literal> <operator pos:start="403:27" pos:end="403:28">&lt;&lt;</operator> <literal type="number" pos:start="403:30" pos:end="403:31">19</literal><operator pos:start="403:32" pos:end="403:32">)</operator></expr>)</condition> <block pos:start="403:35" pos:end="421:13">{<block_content pos:start="405:17" pos:end="419:32">

                <if_stmt pos:start="405:17" pos:end="407:35"><if pos:start="405:17" pos:end="407:35">if <condition pos:start="405:20" pos:end="405:36">(<expr pos:start="405:21" pos:end="405:35"><name pos:start="405:21" pos:end="405:24">insn</name> <operator pos:start="405:26" pos:end="405:26">&amp;</operator> <operator pos:start="405:28" pos:end="405:28">(</operator><literal type="number" pos:start="405:29" pos:end="405:29">1</literal> <operator pos:start="405:31" pos:end="405:32">&lt;&lt;</operator> <literal type="number" pos:start="405:34" pos:end="405:34">8</literal><operator pos:start="405:35" pos:end="405:35">)</operator></expr>)</condition><block type="pseudo" pos:start="407:21" pos:end="407:35"><block_content pos:start="407:21" pos:end="407:35">

                    <expr_stmt pos:start="407:21" pos:end="407:35"><expr pos:start="407:21" pos:end="407:34"><name pos:start="407:21" pos:end="407:24">mask</name> <operator pos:start="407:26" pos:end="407:27">|=</operator> <name pos:start="407:29" pos:end="407:34">CPSR_A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="409:17" pos:end="411:35"><if pos:start="409:17" pos:end="411:35">if <condition pos:start="409:20" pos:end="409:36">(<expr pos:start="409:21" pos:end="409:35"><name pos:start="409:21" pos:end="409:24">insn</name> <operator pos:start="409:26" pos:end="409:26">&amp;</operator> <operator pos:start="409:28" pos:end="409:28">(</operator><literal type="number" pos:start="409:29" pos:end="409:29">1</literal> <operator pos:start="409:31" pos:end="409:32">&lt;&lt;</operator> <literal type="number" pos:start="409:34" pos:end="409:34">7</literal><operator pos:start="409:35" pos:end="409:35">)</operator></expr>)</condition><block type="pseudo" pos:start="411:21" pos:end="411:35"><block_content pos:start="411:21" pos:end="411:35">

                    <expr_stmt pos:start="411:21" pos:end="411:35"><expr pos:start="411:21" pos:end="411:34"><name pos:start="411:21" pos:end="411:24">mask</name> <operator pos:start="411:26" pos:end="411:27">|=</operator> <name pos:start="411:29" pos:end="411:34">CPSR_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="413:17" pos:end="415:35"><if pos:start="413:17" pos:end="415:35">if <condition pos:start="413:20" pos:end="413:36">(<expr pos:start="413:21" pos:end="413:35"><name pos:start="413:21" pos:end="413:24">insn</name> <operator pos:start="413:26" pos:end="413:26">&amp;</operator> <operator pos:start="413:28" pos:end="413:28">(</operator><literal type="number" pos:start="413:29" pos:end="413:29">1</literal> <operator pos:start="413:31" pos:end="413:32">&lt;&lt;</operator> <literal type="number" pos:start="413:34" pos:end="413:34">6</literal><operator pos:start="413:35" pos:end="413:35">)</operator></expr>)</condition><block type="pseudo" pos:start="415:21" pos:end="415:35"><block_content pos:start="415:21" pos:end="415:35">

                    <expr_stmt pos:start="415:21" pos:end="415:35"><expr pos:start="415:21" pos:end="415:34"><name pos:start="415:21" pos:end="415:24">mask</name> <operator pos:start="415:26" pos:end="415:27">|=</operator> <name pos:start="415:29" pos:end="415:34">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="417:17" pos:end="419:32"><if pos:start="417:17" pos:end="419:32">if <condition pos:start="417:20" pos:end="417:37">(<expr pos:start="417:21" pos:end="417:36"><name pos:start="417:21" pos:end="417:24">insn</name> <operator pos:start="417:26" pos:end="417:26">&amp;</operator> <operator pos:start="417:28" pos:end="417:28">(</operator><literal type="number" pos:start="417:29" pos:end="417:29">1</literal> <operator pos:start="417:31" pos:end="417:32">&lt;&lt;</operator> <literal type="number" pos:start="417:34" pos:end="417:35">18</literal><operator pos:start="417:36" pos:end="417:36">)</operator></expr>)</condition><block type="pseudo" pos:start="419:21" pos:end="419:32"><block_content pos:start="419:21" pos:end="419:32">

                    <expr_stmt pos:start="419:21" pos:end="419:32"><expr pos:start="419:21" pos:end="419:31"><name pos:start="419:21" pos:end="419:23">val</name> <operator pos:start="419:25" pos:end="419:26">|=</operator> <name pos:start="419:28" pos:end="419:31">mask</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="423:13" pos:end="429:13"><if pos:start="423:13" pos:end="429:13">if <condition pos:start="423:16" pos:end="423:33">(<expr pos:start="423:17" pos:end="423:32"><name pos:start="423:17" pos:end="423:20">insn</name> <operator pos:start="423:22" pos:end="423:22">&amp;</operator> <operator pos:start="423:24" pos:end="423:24">(</operator><literal type="number" pos:start="423:25" pos:end="423:25">1</literal> <operator pos:start="423:27" pos:end="423:28">&lt;&lt;</operator> <literal type="number" pos:start="423:30" pos:end="423:31">17</literal><operator pos:start="423:32" pos:end="423:32">)</operator></expr>)</condition> <block pos:start="423:35" pos:end="429:13">{<block_content pos:start="425:17" pos:end="427:37">

                <expr_stmt pos:start="425:17" pos:end="425:31"><expr pos:start="425:17" pos:end="425:30"><name pos:start="425:17" pos:end="425:20">mask</name> <operator pos:start="425:22" pos:end="425:23">|=</operator> <name pos:start="425:25" pos:end="425:30">CPSR_M</name></expr>;</expr_stmt>

                <expr_stmt pos:start="427:17" pos:end="427:37"><expr pos:start="427:17" pos:end="427:36"><name pos:start="427:17" pos:end="427:19">val</name> <operator pos:start="427:21" pos:end="427:22">|=</operator> <operator pos:start="427:24" pos:end="427:24">(</operator><name pos:start="427:25" pos:end="427:28">insn</name> <operator pos:start="427:30" pos:end="427:30">&amp;</operator> <literal type="number" pos:start="427:32" pos:end="427:35">0x1f</literal><operator pos:start="427:36" pos:end="427:36">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="431:13" pos:end="435:13"><if pos:start="431:13" pos:end="435:13">if <condition pos:start="431:16" pos:end="431:21">(<expr pos:start="431:17" pos:end="431:20"><name pos:start="431:17" pos:end="431:20">mask</name></expr>)</condition> <block pos:start="431:23" pos:end="435:13">{<block_content pos:start="433:17" pos:end="433:48">

                <expr_stmt pos:start="433:17" pos:end="433:48"><expr pos:start="433:17" pos:end="433:47"><call pos:start="433:17" pos:end="433:47"><name pos:start="433:17" pos:end="433:30">gen_set_psr_im</name><argument_list pos:start="433:31" pos:end="433:47">(<argument pos:start="433:32" pos:end="433:32"><expr pos:start="433:32" pos:end="433:32"><name pos:start="433:32" pos:end="433:32">s</name></expr></argument>, <argument pos:start="433:35" pos:end="433:38"><expr pos:start="433:35" pos:end="433:38"><name pos:start="433:35" pos:end="433:38">mask</name></expr></argument>, <argument pos:start="433:41" pos:end="433:41"><expr pos:start="433:41" pos:end="433:41"><literal type="number" pos:start="433:41" pos:end="433:41">0</literal></expr></argument>, <argument pos:start="433:44" pos:end="433:46"><expr pos:start="433:44" pos:end="433:46"><name pos:start="433:44" pos:end="433:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <return pos:start="437:13" pos:end="437:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="441:9" pos:end="441:24">goto <name pos:start="441:14" pos:end="441:23">illegal_op</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="445:5" pos:end="457:5"><if pos:start="445:5" pos:end="457:5">if <condition pos:start="445:8" pos:end="445:20">(<expr pos:start="445:9" pos:end="445:19"><name pos:start="445:9" pos:end="445:12">cond</name> <operator pos:start="445:14" pos:end="445:15">!=</operator> <literal type="number" pos:start="445:17" pos:end="445:19">0xe</literal></expr>)</condition> <block pos:start="445:22" pos:end="457:5">{<block_content pos:start="451:9" pos:end="455:23">

        <comment type="block" pos:start="447:9" pos:end="449:30">/* if not always execute, we generate a conditional jump to

           next instruction */</comment>

        <expr_stmt pos:start="451:9" pos:end="451:39"><expr pos:start="451:9" pos:end="451:38"><name pos:start="451:9" pos:end="451:20"><name pos:start="451:9" pos:end="451:9">s</name><operator pos:start="451:10" pos:end="451:11">-&gt;</operator><name pos:start="451:12" pos:end="451:20">condlabel</name></name> <operator pos:start="451:22" pos:end="451:22">=</operator> <call pos:start="451:24" pos:end="451:38"><name pos:start="451:24" pos:end="451:36">gen_new_label</name><argument_list pos:start="451:37" pos:end="451:38">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="453:9" pos:end="453:44"><expr pos:start="453:9" pos:end="453:43"><call pos:start="453:9" pos:end="453:43"><name pos:start="453:9" pos:end="453:19">gen_test_cc</name><argument_list pos:start="453:20" pos:end="453:43">(<argument pos:start="453:21" pos:end="453:28"><expr pos:start="453:21" pos:end="453:28"><name pos:start="453:21" pos:end="453:24">cond</name> <operator pos:start="453:26" pos:end="453:26">^</operator> <literal type="number" pos:start="453:28" pos:end="453:28">1</literal></expr></argument>, <argument pos:start="453:31" pos:end="453:42"><expr pos:start="453:31" pos:end="453:42"><name pos:start="453:31" pos:end="453:42"><name pos:start="453:31" pos:end="453:31">s</name><operator pos:start="453:32" pos:end="453:33">-&gt;</operator><name pos:start="453:34" pos:end="453:42">condlabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="455:9" pos:end="455:23"><expr pos:start="455:9" pos:end="455:22"><name pos:start="455:9" pos:end="455:18"><name pos:start="455:9" pos:end="455:9">s</name><operator pos:start="455:10" pos:end="455:11">-&gt;</operator><name pos:start="455:12" pos:end="455:18">condjmp</name></name> <operator pos:start="455:20" pos:end="455:20">=</operator> <literal type="number" pos:start="455:22" pos:end="455:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="459:5" pos:end="2499:5"><if pos:start="459:5" pos:end="523:5">if <condition pos:start="459:8" pos:end="459:42">(<expr pos:start="459:9" pos:end="459:41"><operator pos:start="459:9" pos:end="459:9">(</operator><name pos:start="459:10" pos:end="459:13">insn</name> <operator pos:start="459:15" pos:end="459:15">&amp;</operator> <literal type="number" pos:start="459:17" pos:end="459:26">0x0f900000</literal><operator pos:start="459:27" pos:end="459:27">)</operator> <operator pos:start="459:29" pos:end="459:30">==</operator> <literal type="number" pos:start="459:32" pos:end="459:41">0x03000000</literal></expr>)</condition> <block pos:start="459:44" pos:end="523:5">{<block_content pos:start="461:9" pos:end="521:9">

        <if_stmt pos:start="461:9" pos:end="521:9"><if pos:start="461:9" pos:end="491:9">if <condition pos:start="461:12" pos:end="461:36">(<expr pos:start="461:13" pos:end="461:35"><operator pos:start="461:13" pos:end="461:13">(</operator><name pos:start="461:14" pos:end="461:17">insn</name> <operator pos:start="461:19" pos:end="461:19">&amp;</operator> <operator pos:start="461:21" pos:end="461:21">(</operator><literal type="number" pos:start="461:22" pos:end="461:22">1</literal> <operator pos:start="461:24" pos:end="461:25">&lt;&lt;</operator> <literal type="number" pos:start="461:27" pos:end="461:28">21</literal><operator pos:start="461:29" pos:end="461:29">)</operator><operator pos:start="461:30" pos:end="461:30">)</operator> <operator pos:start="461:32" pos:end="461:33">==</operator> <literal type="number" pos:start="461:35" pos:end="461:35">0</literal></expr>)</condition> <block pos:start="461:38" pos:end="491:9">{<block_content pos:start="463:13" pos:end="489:34">

            <expr_stmt pos:start="463:13" pos:end="463:22"><expr pos:start="463:13" pos:end="463:21"><call pos:start="463:13" pos:end="463:21"><name pos:start="463:13" pos:end="463:16">ARCH</name><argument_list pos:start="463:17" pos:end="463:21">(<argument pos:start="463:18" pos:end="463:20"><expr pos:start="463:18" pos:end="463:20"><literal type="number" pos:start="463:18" pos:end="463:20">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:36"><expr pos:start="465:13" pos:end="465:35"><name pos:start="465:13" pos:end="465:14">rd</name> <operator pos:start="465:16" pos:end="465:16">=</operator> <operator pos:start="465:18" pos:end="465:18">(</operator><name pos:start="465:19" pos:end="465:22">insn</name> <operator pos:start="465:24" pos:end="465:25">&gt;&gt;</operator> <literal type="number" pos:start="465:27" pos:end="465:28">12</literal><operator pos:start="465:29" pos:end="465:29">)</operator> <operator pos:start="465:31" pos:end="465:31">&amp;</operator> <literal type="number" pos:start="465:33" pos:end="465:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:58"><expr pos:start="467:13" pos:end="467:57"><name pos:start="467:13" pos:end="467:15">val</name> <operator pos:start="467:17" pos:end="467:17">=</operator> <operator pos:start="467:19" pos:end="467:19">(</operator><operator pos:start="467:20" pos:end="467:20">(</operator><name pos:start="467:21" pos:end="467:24">insn</name> <operator pos:start="467:26" pos:end="467:27">&gt;&gt;</operator> <literal type="number" pos:start="467:29" pos:end="467:29">4</literal><operator pos:start="467:30" pos:end="467:30">)</operator> <operator pos:start="467:32" pos:end="467:32">&amp;</operator> <literal type="number" pos:start="467:34" pos:end="467:39">0xf000</literal><operator pos:start="467:40" pos:end="467:40">)</operator> <operator pos:start="467:42" pos:end="467:42">|</operator> <operator pos:start="467:44" pos:end="467:44">(</operator><name pos:start="467:45" pos:end="467:48">insn</name> <operator pos:start="467:50" pos:end="467:50">&amp;</operator> <literal type="number" pos:start="467:52" pos:end="467:56">0xfff</literal><operator pos:start="467:57" pos:end="467:57">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="469:13" pos:end="487:13"><if pos:start="469:13" pos:end="477:13">if <condition pos:start="469:16" pos:end="469:40">(<expr pos:start="469:17" pos:end="469:39"><operator pos:start="469:17" pos:end="469:17">(</operator><name pos:start="469:18" pos:end="469:21">insn</name> <operator pos:start="469:23" pos:end="469:23">&amp;</operator> <operator pos:start="469:25" pos:end="469:25">(</operator><literal type="number" pos:start="469:26" pos:end="469:26">1</literal> <operator pos:start="469:28" pos:end="469:29">&lt;&lt;</operator> <literal type="number" pos:start="469:31" pos:end="469:32">22</literal><operator pos:start="469:33" pos:end="469:33">)</operator><operator pos:start="469:34" pos:end="469:34">)</operator> <operator pos:start="469:36" pos:end="469:37">==</operator> <literal type="number" pos:start="469:39" pos:end="469:39">0</literal></expr>)</condition> <block pos:start="469:42" pos:end="477:13">{<block_content pos:start="473:17" pos:end="475:43">

                <comment type="block" pos:start="471:17" pos:end="471:26">/* MOVW */</comment>

                <expr_stmt pos:start="473:17" pos:end="473:41"><expr pos:start="473:17" pos:end="473:40"><name pos:start="473:17" pos:end="473:19">tmp</name> <operator pos:start="473:21" pos:end="473:21">=</operator> <call pos:start="473:23" pos:end="473:40"><name pos:start="473:23" pos:end="473:38">tcg_temp_new_i32</name><argument_list pos:start="473:39" pos:end="473:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="475:17" pos:end="475:43"><expr pos:start="475:17" pos:end="475:42"><call pos:start="475:17" pos:end="475:42"><name pos:start="475:17" pos:end="475:32">tcg_gen_movi_i32</name><argument_list pos:start="475:33" pos:end="475:42">(<argument pos:start="475:34" pos:end="475:36"><expr pos:start="475:34" pos:end="475:36"><name pos:start="475:34" pos:end="475:36">tmp</name></expr></argument>, <argument pos:start="475:39" pos:end="475:41"><expr pos:start="475:39" pos:end="475:41"><name pos:start="475:39" pos:end="475:41">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="477:15" pos:end="487:13">else <block pos:start="477:20" pos:end="487:13">{<block_content pos:start="481:17" pos:end="485:53">

                <comment type="block" pos:start="479:17" pos:end="479:26">/* MOVT */</comment>

                <expr_stmt pos:start="481:17" pos:end="481:38"><expr pos:start="481:17" pos:end="481:37"><name pos:start="481:17" pos:end="481:19">tmp</name> <operator pos:start="481:21" pos:end="481:21">=</operator> <call pos:start="481:23" pos:end="481:37"><name pos:start="481:23" pos:end="481:30">load_reg</name><argument_list pos:start="481:31" pos:end="481:37">(<argument pos:start="481:32" pos:end="481:32"><expr pos:start="481:32" pos:end="481:32"><name pos:start="481:32" pos:end="481:32">s</name></expr></argument>, <argument pos:start="481:35" pos:end="481:36"><expr pos:start="481:35" pos:end="481:36"><name pos:start="481:35" pos:end="481:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="483:17" pos:end="483:45"><expr pos:start="483:17" pos:end="483:44"><call pos:start="483:17" pos:end="483:44"><name pos:start="483:17" pos:end="483:34">tcg_gen_ext16u_i32</name><argument_list pos:start="483:35" pos:end="483:44">(<argument pos:start="483:36" pos:end="483:38"><expr pos:start="483:36" pos:end="483:38"><name pos:start="483:36" pos:end="483:38">tmp</name></expr></argument>, <argument pos:start="483:41" pos:end="483:43"><expr pos:start="483:41" pos:end="483:43"><name pos:start="483:41" pos:end="483:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="485:17" pos:end="485:53"><expr pos:start="485:17" pos:end="485:52"><call pos:start="485:17" pos:end="485:52"><name pos:start="485:17" pos:end="485:31">tcg_gen_ori_i32</name><argument_list pos:start="485:32" pos:end="485:52">(<argument pos:start="485:33" pos:end="485:35"><expr pos:start="485:33" pos:end="485:35"><name pos:start="485:33" pos:end="485:35">tmp</name></expr></argument>, <argument pos:start="485:38" pos:end="485:40"><expr pos:start="485:38" pos:end="485:40"><name pos:start="485:38" pos:end="485:40">tmp</name></expr></argument>, <argument pos:start="485:43" pos:end="485:51"><expr pos:start="485:43" pos:end="485:51"><name pos:start="485:43" pos:end="485:45">val</name> <operator pos:start="485:47" pos:end="485:48">&lt;&lt;</operator> <literal type="number" pos:start="485:50" pos:end="485:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:34"><expr pos:start="489:13" pos:end="489:33"><call pos:start="489:13" pos:end="489:33"><name pos:start="489:13" pos:end="489:21">store_reg</name><argument_list pos:start="489:22" pos:end="489:33">(<argument pos:start="489:23" pos:end="489:23"><expr pos:start="489:23" pos:end="489:23"><name pos:start="489:23" pos:end="489:23">s</name></expr></argument>, <argument pos:start="489:26" pos:end="489:27"><expr pos:start="489:26" pos:end="489:27"><name pos:start="489:26" pos:end="489:27">rd</name></expr></argument>, <argument pos:start="489:30" pos:end="489:32"><expr pos:start="489:30" pos:end="489:32"><name pos:start="489:30" pos:end="489:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="491:11" pos:end="521:9">else <block pos:start="491:16" pos:end="521:9">{<block_content pos:start="493:13" pos:end="519:13">

            <if_stmt pos:start="493:13" pos:end="495:32"><if pos:start="493:13" pos:end="495:32">if <condition pos:start="493:16" pos:end="493:44">(<expr pos:start="493:17" pos:end="493:43"><operator pos:start="493:17" pos:end="493:17">(</operator><operator pos:start="493:18" pos:end="493:18">(</operator><name pos:start="493:19" pos:end="493:22">insn</name> <operator pos:start="493:24" pos:end="493:25">&gt;&gt;</operator> <literal type="number" pos:start="493:27" pos:end="493:28">12</literal><operator pos:start="493:29" pos:end="493:29">)</operator> <operator pos:start="493:31" pos:end="493:31">&amp;</operator> <literal type="number" pos:start="493:33" pos:end="493:35">0xf</literal><operator pos:start="493:36" pos:end="493:36">)</operator> <operator pos:start="493:38" pos:end="493:39">!=</operator> <literal type="number" pos:start="493:41" pos:end="493:43">0xf</literal></expr>)</condition><block type="pseudo" pos:start="495:17" pos:end="495:32"><block_content pos:start="495:17" pos:end="495:32">

                <goto pos:start="495:17" pos:end="495:32">goto <name pos:start="495:22" pos:end="495:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="497:13" pos:end="519:13"><if pos:start="497:13" pos:end="501:13">if <condition pos:start="497:16" pos:end="497:42">(<expr pos:start="497:17" pos:end="497:41"><operator pos:start="497:17" pos:end="497:17">(</operator><operator pos:start="497:18" pos:end="497:18">(</operator><name pos:start="497:19" pos:end="497:22">insn</name> <operator pos:start="497:24" pos:end="497:25">&gt;&gt;</operator> <literal type="number" pos:start="497:27" pos:end="497:28">16</literal><operator pos:start="497:29" pos:end="497:29">)</operator> <operator pos:start="497:31" pos:end="497:31">&amp;</operator> <literal type="number" pos:start="497:33" pos:end="497:35">0xf</literal><operator pos:start="497:36" pos:end="497:36">)</operator> <operator pos:start="497:38" pos:end="497:39">==</operator> <literal type="number" pos:start="497:41" pos:end="497:41">0</literal></expr>)</condition> <block pos:start="497:44" pos:end="501:13">{<block_content pos:start="499:17" pos:end="499:45">

                <expr_stmt pos:start="499:17" pos:end="499:45"><expr pos:start="499:17" pos:end="499:44"><call pos:start="499:17" pos:end="499:44"><name pos:start="499:17" pos:end="499:28">gen_nop_hint</name><argument_list pos:start="499:29" pos:end="499:44">(<argument pos:start="499:30" pos:end="499:30"><expr pos:start="499:30" pos:end="499:30"><name pos:start="499:30" pos:end="499:30">s</name></expr></argument>, <argument pos:start="499:33" pos:end="499:43"><expr pos:start="499:33" pos:end="499:43"><name pos:start="499:33" pos:end="499:36">insn</name> <operator pos:start="499:38" pos:end="499:38">&amp;</operator> <literal type="number" pos:start="499:40" pos:end="499:43">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="501:15" pos:end="519:13">else <block pos:start="501:20" pos:end="519:13">{<block_content pos:start="505:17" pos:end="517:36">

                <comment type="block" pos:start="503:17" pos:end="503:38">/* CPSR = immediate */</comment>

                <expr_stmt pos:start="505:17" pos:end="505:34"><expr pos:start="505:17" pos:end="505:33"><name pos:start="505:17" pos:end="505:19">val</name> <operator pos:start="505:21" pos:end="505:21">=</operator> <name pos:start="505:23" pos:end="505:26">insn</name> <operator pos:start="505:28" pos:end="505:28">&amp;</operator> <literal type="number" pos:start="505:30" pos:end="505:33">0xff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="507:17" pos:end="507:48"><expr pos:start="507:17" pos:end="507:47"><name pos:start="507:17" pos:end="507:21">shift</name> <operator pos:start="507:23" pos:end="507:23">=</operator> <operator pos:start="507:25" pos:end="507:25">(</operator><operator pos:start="507:26" pos:end="507:26">(</operator><name pos:start="507:27" pos:end="507:30">insn</name> <operator pos:start="507:32" pos:end="507:33">&gt;&gt;</operator> <literal type="number" pos:start="507:35" pos:end="507:35">8</literal><operator pos:start="507:36" pos:end="507:36">)</operator> <operator pos:start="507:38" pos:end="507:38">&amp;</operator> <literal type="number" pos:start="507:40" pos:end="507:42">0xf</literal><operator pos:start="507:43" pos:end="507:43">)</operator> <operator pos:start="507:45" pos:end="507:45">*</operator> <literal type="number" pos:start="507:47" pos:end="507:47">2</literal></expr>;</expr_stmt>

                <if_stmt pos:start="509:17" pos:end="511:65"><if pos:start="509:17" pos:end="511:65">if <condition pos:start="509:20" pos:end="509:26">(<expr pos:start="509:21" pos:end="509:25"><name pos:start="509:21" pos:end="509:25">shift</name></expr>)</condition><block type="pseudo" pos:start="511:21" pos:end="511:65"><block_content pos:start="511:21" pos:end="511:65">

                    <expr_stmt pos:start="511:21" pos:end="511:65"><expr pos:start="511:21" pos:end="511:64"><name pos:start="511:21" pos:end="511:23">val</name> <operator pos:start="511:25" pos:end="511:25">=</operator> <operator pos:start="511:27" pos:end="511:27">(</operator><name pos:start="511:28" pos:end="511:30">val</name> <operator pos:start="511:32" pos:end="511:33">&gt;&gt;</operator> <name pos:start="511:35" pos:end="511:39">shift</name><operator pos:start="511:40" pos:end="511:40">)</operator> <operator pos:start="511:42" pos:end="511:42">|</operator> <operator pos:start="511:44" pos:end="511:44">(</operator><name pos:start="511:45" pos:end="511:47">val</name> <operator pos:start="511:49" pos:end="511:50">&lt;&lt;</operator> <operator pos:start="511:52" pos:end="511:52">(</operator><literal type="number" pos:start="511:53" pos:end="511:56">32</literal> <operator pos:start="511:56" pos:end="511:56">-</operator> <name pos:start="511:58" pos:end="511:62">shift</name><operator pos:start="511:63" pos:end="511:63">)</operator><operator pos:start="511:64" pos:end="511:64">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="513:17" pos:end="513:46"><expr pos:start="513:17" pos:end="513:45"><name pos:start="513:17" pos:end="513:17">i</name> <operator pos:start="513:19" pos:end="513:19">=</operator> <operator pos:start="513:21" pos:end="513:21">(</operator><operator pos:start="513:22" pos:end="513:22">(</operator><name pos:start="513:23" pos:end="513:26">insn</name> <operator pos:start="513:28" pos:end="513:28">&amp;</operator> <operator pos:start="513:30" pos:end="513:30">(</operator><literal type="number" pos:start="513:31" pos:end="513:31">1</literal> <operator pos:start="513:33" pos:end="513:34">&lt;&lt;</operator> <literal type="number" pos:start="513:36" pos:end="513:37">22</literal><operator pos:start="513:38" pos:end="513:38">)</operator><operator pos:start="513:39" pos:end="513:39">)</operator> <operator pos:start="513:41" pos:end="513:42">!=</operator> <literal type="number" pos:start="513:44" pos:end="513:44">0</literal><operator pos:start="513:45" pos:end="513:45">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="515:17" pos:end="517:36"><if pos:start="515:17" pos:end="517:36">if <condition pos:start="515:20" pos:end="515:87">(<expr pos:start="515:21" pos:end="515:86"><call pos:start="515:21" pos:end="515:86"><name pos:start="515:21" pos:end="515:34">gen_set_psr_im</name><argument_list pos:start="515:35" pos:end="515:86">(<argument pos:start="515:36" pos:end="515:36"><expr pos:start="515:36" pos:end="515:36"><name pos:start="515:36" pos:end="515:36">s</name></expr></argument>, <argument pos:start="515:39" pos:end="515:77"><expr pos:start="515:39" pos:end="515:77"><call pos:start="515:39" pos:end="515:77"><name pos:start="515:39" pos:end="515:46">msr_mask</name><argument_list pos:start="515:47" pos:end="515:77">(<argument pos:start="515:48" pos:end="515:50"><expr pos:start="515:48" pos:end="515:50"><name pos:start="515:48" pos:end="515:50">env</name></expr></argument>, <argument pos:start="515:53" pos:end="515:53"><expr pos:start="515:53" pos:end="515:53"><name pos:start="515:53" pos:end="515:53">s</name></expr></argument>, <argument pos:start="515:56" pos:end="515:73"><expr pos:start="515:56" pos:end="515:73"><operator pos:start="515:56" pos:end="515:56">(</operator><name pos:start="515:57" pos:end="515:60">insn</name> <operator pos:start="515:62" pos:end="515:63">&gt;&gt;</operator> <literal type="number" pos:start="515:65" pos:end="515:66">16</literal><operator pos:start="515:67" pos:end="515:67">)</operator> <operator pos:start="515:69" pos:end="515:69">&amp;</operator> <literal type="number" pos:start="515:71" pos:end="515:73">0xf</literal></expr></argument>, <argument pos:start="515:76" pos:end="515:76"><expr pos:start="515:76" pos:end="515:76"><name pos:start="515:76" pos:end="515:76">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="515:80" pos:end="515:80"><expr pos:start="515:80" pos:end="515:80"><name pos:start="515:80" pos:end="515:80">i</name></expr></argument>, <argument pos:start="515:83" pos:end="515:85"><expr pos:start="515:83" pos:end="515:85"><name pos:start="515:83" pos:end="515:85">val</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="517:21" pos:end="517:36"><block_content pos:start="517:21" pos:end="517:36">

                    <goto pos:start="517:21" pos:end="517:36">goto <name pos:start="517:26" pos:end="517:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="523:7" pos:end="803:5">else if <condition pos:start="523:15" pos:end="525:52">(<expr pos:start="523:16" pos:end="525:51"><operator pos:start="523:16" pos:end="523:16">(</operator><name pos:start="523:17" pos:end="523:20">insn</name> <operator pos:start="523:22" pos:end="523:22">&amp;</operator> <literal type="number" pos:start="523:24" pos:end="523:33">0x0f900000</literal><operator pos:start="523:34" pos:end="523:34">)</operator> <operator pos:start="523:36" pos:end="523:37">==</operator> <literal type="number" pos:start="523:39" pos:end="523:48">0x01000000</literal>

               <operator pos:start="525:16" pos:end="525:17">&amp;&amp;</operator> <operator pos:start="525:19" pos:end="525:19">(</operator><name pos:start="525:20" pos:end="525:23">insn</name> <operator pos:start="525:25" pos:end="525:25">&amp;</operator> <literal type="number" pos:start="525:27" pos:end="525:36">0x00000090</literal><operator pos:start="525:37" pos:end="525:37">)</operator> <operator pos:start="525:39" pos:end="525:40">!=</operator> <literal type="number" pos:start="525:42" pos:end="525:51">0x00000090</literal></expr>)</condition> <block pos:start="525:54" pos:end="803:5">{<block_content pos:start="529:9" pos:end="801:9">

        <comment type="block" pos:start="527:9" pos:end="527:40">/* miscellaneous instructions */</comment>

        <expr_stmt pos:start="529:9" pos:end="529:31"><expr pos:start="529:9" pos:end="529:30"><name pos:start="529:9" pos:end="529:11">op1</name> <operator pos:start="529:13" pos:end="529:13">=</operator> <operator pos:start="529:15" pos:end="529:15">(</operator><name pos:start="529:16" pos:end="529:19">insn</name> <operator pos:start="529:21" pos:end="529:22">&gt;&gt;</operator> <literal type="number" pos:start="529:24" pos:end="529:25">21</literal><operator pos:start="529:26" pos:end="529:26">)</operator> <operator pos:start="529:28" pos:end="529:28">&amp;</operator> <literal type="number" pos:start="529:30" pos:end="529:30">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="531:9" pos:end="531:31"><expr pos:start="531:9" pos:end="531:30"><name pos:start="531:9" pos:end="531:10">sh</name> <operator pos:start="531:12" pos:end="531:12">=</operator> <operator pos:start="531:14" pos:end="531:14">(</operator><name pos:start="531:15" pos:end="531:18">insn</name> <operator pos:start="531:20" pos:end="531:21">&gt;&gt;</operator> <literal type="number" pos:start="531:23" pos:end="531:23">4</literal><operator pos:start="531:24" pos:end="531:24">)</operator> <operator pos:start="531:26" pos:end="531:26">&amp;</operator> <literal type="number" pos:start="531:28" pos:end="531:30">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="533:9" pos:end="533:24"><expr pos:start="533:9" pos:end="533:23"><name pos:start="533:9" pos:end="533:10">rm</name> <operator pos:start="533:12" pos:end="533:12">=</operator> <name pos:start="533:14" pos:end="533:17">insn</name> <operator pos:start="533:19" pos:end="533:19">&amp;</operator> <literal type="number" pos:start="533:21" pos:end="533:23">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="535:9" pos:end="801:9">switch <condition pos:start="535:16" pos:end="535:19">(<expr pos:start="535:17" pos:end="535:18"><name pos:start="535:17" pos:end="535:18">sh</name></expr>)</condition> <block pos:start="535:21" pos:end="801:9">{<block_content pos:start="537:9" pos:end="799:28">

        <case pos:start="537:9" pos:end="537:17">case <expr pos:start="537:14" pos:end="537:16"><literal type="number" pos:start="537:14" pos:end="537:16">0x0</literal></expr>:</case> <comment type="block" pos:start="537:19" pos:end="537:52">/* move program status register */</comment>

            <if_stmt pos:start="539:13" pos:end="575:13"><if pos:start="539:13" pos:end="551:13">if <condition pos:start="539:16" pos:end="539:24">(<expr pos:start="539:17" pos:end="539:23"><name pos:start="539:17" pos:end="539:19">op1</name> <operator pos:start="539:21" pos:end="539:21">&amp;</operator> <literal type="number" pos:start="539:23" pos:end="539:23">1</literal></expr>)</condition> <block pos:start="539:26" pos:end="551:13">{<block_content pos:start="543:17" pos:end="549:36">

                <comment type="block" pos:start="541:17" pos:end="541:31">/* PSR = reg */</comment>

                <expr_stmt pos:start="543:17" pos:end="543:38"><expr pos:start="543:17" pos:end="543:37"><name pos:start="543:17" pos:end="543:19">tmp</name> <operator pos:start="543:21" pos:end="543:21">=</operator> <call pos:start="543:23" pos:end="543:37"><name pos:start="543:23" pos:end="543:30">load_reg</name><argument_list pos:start="543:31" pos:end="543:37">(<argument pos:start="543:32" pos:end="543:32"><expr pos:start="543:32" pos:end="543:32"><name pos:start="543:32" pos:end="543:32">s</name></expr></argument>, <argument pos:start="543:35" pos:end="543:36"><expr pos:start="543:35" pos:end="543:36"><name pos:start="543:35" pos:end="543:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="545:17" pos:end="545:37"><expr pos:start="545:17" pos:end="545:36"><name pos:start="545:17" pos:end="545:17">i</name> <operator pos:start="545:19" pos:end="545:19">=</operator> <operator pos:start="545:21" pos:end="545:21">(</operator><operator pos:start="545:22" pos:end="545:22">(</operator><name pos:start="545:23" pos:end="545:25">op1</name> <operator pos:start="545:27" pos:end="545:27">&amp;</operator> <literal type="number" pos:start="545:29" pos:end="545:29">2</literal><operator pos:start="545:30" pos:end="545:30">)</operator> <operator pos:start="545:32" pos:end="545:33">!=</operator> <literal type="number" pos:start="545:35" pos:end="545:35">0</literal><operator pos:start="545:36" pos:end="545:36">)</operator></expr>;</expr_stmt>

                <if_stmt pos:start="547:17" pos:end="549:36"><if pos:start="547:17" pos:end="549:36">if <condition pos:start="547:20" pos:end="547:84">(<expr pos:start="547:21" pos:end="547:83"><call pos:start="547:21" pos:end="547:83"><name pos:start="547:21" pos:end="547:31">gen_set_psr</name><argument_list pos:start="547:32" pos:end="547:83">(<argument pos:start="547:33" pos:end="547:33"><expr pos:start="547:33" pos:end="547:33"><name pos:start="547:33" pos:end="547:33">s</name></expr></argument>, <argument pos:start="547:36" pos:end="547:74"><expr pos:start="547:36" pos:end="547:74"><call pos:start="547:36" pos:end="547:74"><name pos:start="547:36" pos:end="547:43">msr_mask</name><argument_list pos:start="547:44" pos:end="547:74">(<argument pos:start="547:45" pos:end="547:47"><expr pos:start="547:45" pos:end="547:47"><name pos:start="547:45" pos:end="547:47">env</name></expr></argument>, <argument pos:start="547:50" pos:end="547:50"><expr pos:start="547:50" pos:end="547:50"><name pos:start="547:50" pos:end="547:50">s</name></expr></argument>, <argument pos:start="547:53" pos:end="547:70"><expr pos:start="547:53" pos:end="547:70"><operator pos:start="547:53" pos:end="547:53">(</operator><name pos:start="547:54" pos:end="547:57">insn</name> <operator pos:start="547:59" pos:end="547:60">&gt;&gt;</operator> <literal type="number" pos:start="547:62" pos:end="547:63">16</literal><operator pos:start="547:64" pos:end="547:64">)</operator> <operator pos:start="547:66" pos:end="547:66">&amp;</operator> <literal type="number" pos:start="547:68" pos:end="547:70">0xf</literal></expr></argument>, <argument pos:start="547:73" pos:end="547:73"><expr pos:start="547:73" pos:end="547:73"><name pos:start="547:73" pos:end="547:73">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="547:77" pos:end="547:77"><expr pos:start="547:77" pos:end="547:77"><name pos:start="547:77" pos:end="547:77">i</name></expr></argument>, <argument pos:start="547:80" pos:end="547:82"><expr pos:start="547:80" pos:end="547:82"><name pos:start="547:80" pos:end="547:82">tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="549:21" pos:end="549:36"><block_content pos:start="549:21" pos:end="549:36">

                    <goto pos:start="549:21" pos:end="549:36">goto <name pos:start="549:26" pos:end="549:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="551:15" pos:end="575:13">else <block pos:start="551:20" pos:end="575:13">{<block_content pos:start="555:17" pos:end="573:38">

                <comment type="block" pos:start="553:17" pos:end="553:31">/* reg = PSR */</comment>

                <expr_stmt pos:start="555:17" pos:end="555:40"><expr pos:start="555:17" pos:end="555:39"><name pos:start="555:17" pos:end="555:18">rd</name> <operator pos:start="555:20" pos:end="555:20">=</operator> <operator pos:start="555:22" pos:end="555:22">(</operator><name pos:start="555:23" pos:end="555:26">insn</name> <operator pos:start="555:28" pos:end="555:29">&gt;&gt;</operator> <literal type="number" pos:start="555:31" pos:end="555:32">12</literal><operator pos:start="555:33" pos:end="555:33">)</operator> <operator pos:start="555:35" pos:end="555:35">&amp;</operator> <literal type="number" pos:start="555:37" pos:end="555:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="557:17" pos:end="571:17"><if pos:start="557:17" pos:end="565:17">if <condition pos:start="557:20" pos:end="557:28">(<expr pos:start="557:21" pos:end="557:27"><name pos:start="557:21" pos:end="557:23">op1</name> <operator pos:start="557:25" pos:end="557:25">&amp;</operator> <literal type="number" pos:start="557:27" pos:end="557:27">2</literal></expr>)</condition> <block pos:start="557:30" pos:end="565:17">{<block_content pos:start="559:21" pos:end="563:47">

                    <if_stmt pos:start="559:21" pos:end="561:40"><if pos:start="559:21" pos:end="561:40">if <condition pos:start="559:24" pos:end="559:35">(<expr pos:start="559:25" pos:end="559:34"><call pos:start="559:25" pos:end="559:34"><name pos:start="559:25" pos:end="559:31">IS_USER</name><argument_list pos:start="559:32" pos:end="559:34">(<argument pos:start="559:33" pos:end="559:33"><expr pos:start="559:33" pos:end="559:33"><name pos:start="559:33" pos:end="559:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="561:25" pos:end="561:40"><block_content pos:start="561:25" pos:end="561:40">

                        <goto pos:start="561:25" pos:end="561:40">goto <name pos:start="561:30" pos:end="561:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="563:21" pos:end="563:47"><expr pos:start="563:21" pos:end="563:46"><name pos:start="563:21" pos:end="563:23">tmp</name> <operator pos:start="563:25" pos:end="563:25">=</operator> <call pos:start="563:27" pos:end="563:46"><name pos:start="563:27" pos:end="563:40">load_cpu_field</name><argument_list pos:start="563:41" pos:end="563:46">(<argument pos:start="563:42" pos:end="563:45"><expr pos:start="563:42" pos:end="563:45"><name pos:start="563:42" pos:end="563:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="565:19" pos:end="571:17">else <block pos:start="565:24" pos:end="571:17">{<block_content pos:start="567:21" pos:end="569:46">

                    <expr_stmt pos:start="567:21" pos:end="567:45"><expr pos:start="567:21" pos:end="567:44"><name pos:start="567:21" pos:end="567:23">tmp</name> <operator pos:start="567:25" pos:end="567:25">=</operator> <call pos:start="567:27" pos:end="567:44"><name pos:start="567:27" pos:end="567:42">tcg_temp_new_i32</name><argument_list pos:start="567:43" pos:end="567:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="569:21" pos:end="569:46"><expr pos:start="569:21" pos:end="569:45"><call pos:start="569:21" pos:end="569:45"><name pos:start="569:21" pos:end="569:40">gen_helper_cpsr_read</name><argument_list pos:start="569:41" pos:end="569:45">(<argument pos:start="569:42" pos:end="569:44"><expr pos:start="569:42" pos:end="569:44"><name pos:start="569:42" pos:end="569:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:38"><expr pos:start="573:17" pos:end="573:37"><call pos:start="573:17" pos:end="573:37"><name pos:start="573:17" pos:end="573:25">store_reg</name><argument_list pos:start="573:26" pos:end="573:37">(<argument pos:start="573:27" pos:end="573:27"><expr pos:start="573:27" pos:end="573:27"><name pos:start="573:27" pos:end="573:27">s</name></expr></argument>, <argument pos:start="573:30" pos:end="573:31"><expr pos:start="573:30" pos:end="573:31"><name pos:start="573:30" pos:end="573:31">rd</name></expr></argument>, <argument pos:start="573:34" pos:end="573:36"><expr pos:start="573:34" pos:end="573:36"><name pos:start="573:34" pos:end="573:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="577:13" pos:end="577:18">break;</break>

        <case pos:start="579:9" pos:end="579:17">case <expr pos:start="579:14" pos:end="579:16"><literal type="number" pos:start="579:14" pos:end="579:16">0x1</literal></expr>:</case>

            <if_stmt pos:start="581:13" pos:end="605:13"><if pos:start="581:13" pos:end="589:13">if <condition pos:start="581:16" pos:end="581:25">(<expr pos:start="581:17" pos:end="581:24"><name pos:start="581:17" pos:end="581:19">op1</name> <operator pos:start="581:21" pos:end="581:22">==</operator> <literal type="number" pos:start="581:24" pos:end="581:24">1</literal></expr>)</condition> <block pos:start="581:27" pos:end="589:13">{<block_content pos:start="585:17" pos:end="587:31">

                <comment type="block" pos:start="583:17" pos:end="583:50">/* branch/exchange thumb (bx).  */</comment>

                <expr_stmt pos:start="585:17" pos:end="585:38"><expr pos:start="585:17" pos:end="585:37"><name pos:start="585:17" pos:end="585:19">tmp</name> <operator pos:start="585:21" pos:end="585:21">=</operator> <call pos:start="585:23" pos:end="585:37"><name pos:start="585:23" pos:end="585:30">load_reg</name><argument_list pos:start="585:31" pos:end="585:37">(<argument pos:start="585:32" pos:end="585:32"><expr pos:start="585:32" pos:end="585:32"><name pos:start="585:32" pos:end="585:32">s</name></expr></argument>, <argument pos:start="585:35" pos:end="585:36"><expr pos:start="585:35" pos:end="585:36"><name pos:start="585:35" pos:end="585:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:31"><expr pos:start="587:17" pos:end="587:30"><call pos:start="587:17" pos:end="587:30"><name pos:start="587:17" pos:end="587:22">gen_bx</name><argument_list pos:start="587:23" pos:end="587:30">(<argument pos:start="587:24" pos:end="587:24"><expr pos:start="587:24" pos:end="587:24"><name pos:start="587:24" pos:end="587:24">s</name></expr></argument>, <argument pos:start="587:27" pos:end="587:29"><expr pos:start="587:27" pos:end="587:29"><name pos:start="587:27" pos:end="587:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="589:15" pos:end="601:13">else if <condition pos:start="589:23" pos:end="589:32">(<expr pos:start="589:24" pos:end="589:31"><name pos:start="589:24" pos:end="589:26">op1</name> <operator pos:start="589:28" pos:end="589:29">==</operator> <literal type="number" pos:start="589:31" pos:end="589:31">3</literal></expr>)</condition> <block pos:start="589:34" pos:end="601:13">{<block_content pos:start="593:17" pos:end="599:38">

                <comment type="block" pos:start="591:17" pos:end="591:25">/* clz */</comment>

                <expr_stmt pos:start="593:17" pos:end="593:40"><expr pos:start="593:17" pos:end="593:39"><name pos:start="593:17" pos:end="593:18">rd</name> <operator pos:start="593:20" pos:end="593:20">=</operator> <operator pos:start="593:22" pos:end="593:22">(</operator><name pos:start="593:23" pos:end="593:26">insn</name> <operator pos:start="593:28" pos:end="593:29">&gt;&gt;</operator> <literal type="number" pos:start="593:31" pos:end="593:32">12</literal><operator pos:start="593:33" pos:end="593:33">)</operator> <operator pos:start="593:35" pos:end="593:35">&amp;</operator> <literal type="number" pos:start="593:37" pos:end="593:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="595:17" pos:end="595:38"><expr pos:start="595:17" pos:end="595:37"><name pos:start="595:17" pos:end="595:19">tmp</name> <operator pos:start="595:21" pos:end="595:21">=</operator> <call pos:start="595:23" pos:end="595:37"><name pos:start="595:23" pos:end="595:30">load_reg</name><argument_list pos:start="595:31" pos:end="595:37">(<argument pos:start="595:32" pos:end="595:32"><expr pos:start="595:32" pos:end="595:32"><name pos:start="595:32" pos:end="595:32">s</name></expr></argument>, <argument pos:start="595:35" pos:end="595:36"><expr pos:start="595:35" pos:end="595:36"><name pos:start="595:35" pos:end="595:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="597:17" pos:end="597:41"><expr pos:start="597:17" pos:end="597:40"><call pos:start="597:17" pos:end="597:40"><name pos:start="597:17" pos:end="597:30">gen_helper_clz</name><argument_list pos:start="597:31" pos:end="597:40">(<argument pos:start="597:32" pos:end="597:34"><expr pos:start="597:32" pos:end="597:34"><name pos:start="597:32" pos:end="597:34">tmp</name></expr></argument>, <argument pos:start="597:37" pos:end="597:39"><expr pos:start="597:37" pos:end="597:39"><name pos:start="597:37" pos:end="597:39">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="599:17" pos:end="599:38"><expr pos:start="599:17" pos:end="599:37"><call pos:start="599:17" pos:end="599:37"><name pos:start="599:17" pos:end="599:25">store_reg</name><argument_list pos:start="599:26" pos:end="599:37">(<argument pos:start="599:27" pos:end="599:27"><expr pos:start="599:27" pos:end="599:27"><name pos:start="599:27" pos:end="599:27">s</name></expr></argument>, <argument pos:start="599:30" pos:end="599:31"><expr pos:start="599:30" pos:end="599:31"><name pos:start="599:30" pos:end="599:31">rd</name></expr></argument>, <argument pos:start="599:34" pos:end="599:36"><expr pos:start="599:34" pos:end="599:36"><name pos:start="599:34" pos:end="599:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="601:15" pos:end="605:13">else <block pos:start="601:20" pos:end="605:13">{<block_content pos:start="603:17" pos:end="603:32">

                <goto pos:start="603:17" pos:end="603:32">goto <name pos:start="603:22" pos:end="603:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="607:13" pos:end="607:18">break;</break>

        <case pos:start="609:9" pos:end="609:17">case <expr pos:start="609:14" pos:end="609:16"><literal type="number" pos:start="609:14" pos:end="609:16">0x2</literal></expr>:</case>

            <if_stmt pos:start="611:13" pos:end="625:13"><if pos:start="611:13" pos:end="621:13">if <condition pos:start="611:16" pos:end="611:25">(<expr pos:start="611:17" pos:end="611:24"><name pos:start="611:17" pos:end="611:19">op1</name> <operator pos:start="611:21" pos:end="611:22">==</operator> <literal type="number" pos:start="611:24" pos:end="611:24">1</literal></expr>)</condition> <block pos:start="611:27" pos:end="621:13">{<block_content pos:start="613:17" pos:end="619:31">

                <expr_stmt pos:start="613:17" pos:end="613:25"><expr pos:start="613:17" pos:end="613:24"><call pos:start="613:17" pos:end="613:24"><name pos:start="613:17" pos:end="613:20">ARCH</name><argument_list pos:start="613:21" pos:end="613:24">(<argument pos:start="613:22" pos:end="613:23"><expr pos:start="613:22" pos:end="613:23"><literal type="number" pos:start="613:22" pos:end="613:23">5J</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="613:27" pos:end="613:35">/* bxj */</comment>

                <comment type="block" pos:start="615:17" pos:end="615:63">/* Trivial implementation equivalent to bx.  */</comment>

                <expr_stmt pos:start="617:17" pos:end="617:38"><expr pos:start="617:17" pos:end="617:37"><name pos:start="617:17" pos:end="617:19">tmp</name> <operator pos:start="617:21" pos:end="617:21">=</operator> <call pos:start="617:23" pos:end="617:37"><name pos:start="617:23" pos:end="617:30">load_reg</name><argument_list pos:start="617:31" pos:end="617:37">(<argument pos:start="617:32" pos:end="617:32"><expr pos:start="617:32" pos:end="617:32"><name pos:start="617:32" pos:end="617:32">s</name></expr></argument>, <argument pos:start="617:35" pos:end="617:36"><expr pos:start="617:35" pos:end="617:36"><name pos:start="617:35" pos:end="617:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="619:17" pos:end="619:31"><expr pos:start="619:17" pos:end="619:30"><call pos:start="619:17" pos:end="619:30"><name pos:start="619:17" pos:end="619:22">gen_bx</name><argument_list pos:start="619:23" pos:end="619:30">(<argument pos:start="619:24" pos:end="619:24"><expr pos:start="619:24" pos:end="619:24"><name pos:start="619:24" pos:end="619:24">s</name></expr></argument>, <argument pos:start="619:27" pos:end="619:29"><expr pos:start="619:27" pos:end="619:29"><name pos:start="619:27" pos:end="619:29">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="621:15" pos:end="625:13">else <block pos:start="621:20" pos:end="625:13">{<block_content pos:start="623:17" pos:end="623:32">

                <goto pos:start="623:17" pos:end="623:32">goto <name pos:start="623:22" pos:end="623:31">illegal_op</name>;</goto>

            </block_content>}</block></else></if_stmt>

            <break pos:start="627:13" pos:end="627:18">break;</break>

        <case pos:start="629:9" pos:end="629:17">case <expr pos:start="629:14" pos:end="629:16"><literal type="number" pos:start="629:14" pos:end="629:16">0x3</literal></expr>:</case>

            <if_stmt pos:start="631:13" pos:end="633:30"><if pos:start="631:13" pos:end="633:30">if <condition pos:start="631:16" pos:end="631:25">(<expr pos:start="631:17" pos:end="631:24"><name pos:start="631:17" pos:end="631:19">op1</name> <operator pos:start="631:21" pos:end="631:22">!=</operator> <literal type="number" pos:start="631:24" pos:end="631:24">1</literal></expr>)</condition><block type="pseudo" pos:start="633:15" pos:end="633:30"><block_content pos:start="633:15" pos:end="633:30">

              <goto pos:start="633:15" pos:end="633:30">goto <name pos:start="633:20" pos:end="633:29">illegal_op</name>;</goto></block_content></block></if></if_stmt>



            <comment type="block" pos:start="637:13" pos:end="637:50">/* branch link/exchange thumb (blx) */</comment>

            <expr_stmt pos:start="639:13" pos:end="639:34"><expr pos:start="639:13" pos:end="639:33"><name pos:start="639:13" pos:end="639:15">tmp</name> <operator pos:start="639:17" pos:end="639:17">=</operator> <call pos:start="639:19" pos:end="639:33"><name pos:start="639:19" pos:end="639:26">load_reg</name><argument_list pos:start="639:27" pos:end="639:33">(<argument pos:start="639:28" pos:end="639:28"><expr pos:start="639:28" pos:end="639:28"><name pos:start="639:28" pos:end="639:28">s</name></expr></argument>, <argument pos:start="639:31" pos:end="639:32"><expr pos:start="639:31" pos:end="639:32"><name pos:start="639:31" pos:end="639:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="641:13" pos:end="641:38"><expr pos:start="641:13" pos:end="641:37"><name pos:start="641:13" pos:end="641:16">tmp2</name> <operator pos:start="641:18" pos:end="641:18">=</operator> <call pos:start="641:20" pos:end="641:37"><name pos:start="641:20" pos:end="641:35">tcg_temp_new_i32</name><argument_list pos:start="641:36" pos:end="641:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="643:13" pos:end="643:42"><expr pos:start="643:13" pos:end="643:41"><call pos:start="643:13" pos:end="643:41"><name pos:start="643:13" pos:end="643:28">tcg_gen_movi_i32</name><argument_list pos:start="643:29" pos:end="643:41">(<argument pos:start="643:30" pos:end="643:33"><expr pos:start="643:30" pos:end="643:33"><name pos:start="643:30" pos:end="643:33">tmp2</name></expr></argument>, <argument pos:start="643:36" pos:end="643:40"><expr pos:start="643:36" pos:end="643:40"><name pos:start="643:36" pos:end="643:40"><name pos:start="643:36" pos:end="643:36">s</name><operator pos:start="643:37" pos:end="643:38">-&gt;</operator><name pos:start="643:39" pos:end="643:40">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="645:13" pos:end="645:35"><expr pos:start="645:13" pos:end="645:34"><call pos:start="645:13" pos:end="645:34"><name pos:start="645:13" pos:end="645:21">store_reg</name><argument_list pos:start="645:22" pos:end="645:34">(<argument pos:start="645:23" pos:end="645:23"><expr pos:start="645:23" pos:end="645:23"><name pos:start="645:23" pos:end="645:23">s</name></expr></argument>, <argument pos:start="645:26" pos:end="645:27"><expr pos:start="645:26" pos:end="645:27"><literal type="number" pos:start="645:26" pos:end="645:27">14</literal></expr></argument>, <argument pos:start="645:30" pos:end="645:33"><expr pos:start="645:30" pos:end="645:33"><name pos:start="645:30" pos:end="645:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="647:13" pos:end="647:27"><expr pos:start="647:13" pos:end="647:26"><call pos:start="647:13" pos:end="647:26"><name pos:start="647:13" pos:end="647:18">gen_bx</name><argument_list pos:start="647:19" pos:end="647:26">(<argument pos:start="647:20" pos:end="647:20"><expr pos:start="647:20" pos:end="647:20"><name pos:start="647:20" pos:end="647:20">s</name></expr></argument>, <argument pos:start="647:23" pos:end="647:25"><expr pos:start="647:23" pos:end="647:25"><name pos:start="647:23" pos:end="647:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="649:13" pos:end="649:18">break;</break>

        <case pos:start="651:9" pos:end="651:17">case <expr pos:start="651:14" pos:end="651:16"><literal type="number" pos:start="651:14" pos:end="651:16">0x5</literal></expr>:</case> <comment type="block" pos:start="651:19" pos:end="651:47">/* saturating add/subtract */</comment>

            <expr_stmt pos:start="653:13" pos:end="653:36"><expr pos:start="653:13" pos:end="653:35"><name pos:start="653:13" pos:end="653:14">rd</name> <operator pos:start="653:16" pos:end="653:16">=</operator> <operator pos:start="653:18" pos:end="653:18">(</operator><name pos:start="653:19" pos:end="653:22">insn</name> <operator pos:start="653:24" pos:end="653:25">&gt;&gt;</operator> <literal type="number" pos:start="653:27" pos:end="653:28">12</literal><operator pos:start="653:29" pos:end="653:29">)</operator> <operator pos:start="653:31" pos:end="653:31">&amp;</operator> <literal type="number" pos:start="653:33" pos:end="653:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="655:13" pos:end="655:36"><expr pos:start="655:13" pos:end="655:35"><name pos:start="655:13" pos:end="655:14">rn</name> <operator pos:start="655:16" pos:end="655:16">=</operator> <operator pos:start="655:18" pos:end="655:18">(</operator><name pos:start="655:19" pos:end="655:22">insn</name> <operator pos:start="655:24" pos:end="655:25">&gt;&gt;</operator> <literal type="number" pos:start="655:27" pos:end="655:28">16</literal><operator pos:start="655:29" pos:end="655:29">)</operator> <operator pos:start="655:31" pos:end="655:31">&amp;</operator> <literal type="number" pos:start="655:33" pos:end="655:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="657:13" pos:end="657:34"><expr pos:start="657:13" pos:end="657:33"><name pos:start="657:13" pos:end="657:15">tmp</name> <operator pos:start="657:17" pos:end="657:17">=</operator> <call pos:start="657:19" pos:end="657:33"><name pos:start="657:19" pos:end="657:26">load_reg</name><argument_list pos:start="657:27" pos:end="657:33">(<argument pos:start="657:28" pos:end="657:28"><expr pos:start="657:28" pos:end="657:28"><name pos:start="657:28" pos:end="657:28">s</name></expr></argument>, <argument pos:start="657:31" pos:end="657:32"><expr pos:start="657:31" pos:end="657:32"><name pos:start="657:31" pos:end="657:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="659:13" pos:end="659:35"><expr pos:start="659:13" pos:end="659:34"><name pos:start="659:13" pos:end="659:16">tmp2</name> <operator pos:start="659:18" pos:end="659:18">=</operator> <call pos:start="659:20" pos:end="659:34"><name pos:start="659:20" pos:end="659:27">load_reg</name><argument_list pos:start="659:28" pos:end="659:34">(<argument pos:start="659:29" pos:end="659:29"><expr pos:start="659:29" pos:end="659:29"><name pos:start="659:29" pos:end="659:29">s</name></expr></argument>, <argument pos:start="659:32" pos:end="659:33"><expr pos:start="659:32" pos:end="659:33"><name pos:start="659:32" pos:end="659:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="661:13" pos:end="663:55"><if pos:start="661:13" pos:end="663:55">if <condition pos:start="661:16" pos:end="661:24">(<expr pos:start="661:17" pos:end="661:23"><name pos:start="661:17" pos:end="661:19">op1</name> <operator pos:start="661:21" pos:end="661:21">&amp;</operator> <literal type="number" pos:start="661:23" pos:end="661:23">2</literal></expr>)</condition><block type="pseudo" pos:start="663:17" pos:end="663:55"><block_content pos:start="663:17" pos:end="663:55">

                <expr_stmt pos:start="663:17" pos:end="663:55"><expr pos:start="663:17" pos:end="663:54"><call pos:start="663:17" pos:end="663:54"><name pos:start="663:17" pos:end="663:42">gen_helper_double_saturate</name><argument_list pos:start="663:43" pos:end="663:54">(<argument pos:start="663:44" pos:end="663:47"><expr pos:start="663:44" pos:end="663:47"><name pos:start="663:44" pos:end="663:47">tmp2</name></expr></argument>, <argument pos:start="663:50" pos:end="663:53"><expr pos:start="663:50" pos:end="663:53"><name pos:start="663:50" pos:end="663:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="665:13" pos:end="671:56"><if pos:start="665:13" pos:end="667:56">if <condition pos:start="665:16" pos:end="665:24">(<expr pos:start="665:17" pos:end="665:23"><name pos:start="665:17" pos:end="665:19">op1</name> <operator pos:start="665:21" pos:end="665:21">&amp;</operator> <literal type="number" pos:start="665:23" pos:end="665:23">1</literal></expr>)</condition><block type="pseudo" pos:start="667:17" pos:end="667:56"><block_content pos:start="667:17" pos:end="667:56">

                <expr_stmt pos:start="667:17" pos:end="667:56"><expr pos:start="667:17" pos:end="667:55"><call pos:start="667:17" pos:end="667:55"><name pos:start="667:17" pos:end="667:39">gen_helper_sub_saturate</name><argument_list pos:start="667:40" pos:end="667:55">(<argument pos:start="667:41" pos:end="667:43"><expr pos:start="667:41" pos:end="667:43"><name pos:start="667:41" pos:end="667:43">tmp</name></expr></argument>, <argument pos:start="667:46" pos:end="667:48"><expr pos:start="667:46" pos:end="667:48"><name pos:start="667:46" pos:end="667:48">tmp</name></expr></argument>, <argument pos:start="667:51" pos:end="667:54"><expr pos:start="667:51" pos:end="667:54"><name pos:start="667:51" pos:end="667:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="669:13" pos:end="671:56">else<block type="pseudo" pos:start="671:17" pos:end="671:56"><block_content pos:start="671:17" pos:end="671:56">

                <expr_stmt pos:start="671:17" pos:end="671:56"><expr pos:start="671:17" pos:end="671:55"><call pos:start="671:17" pos:end="671:55"><name pos:start="671:17" pos:end="671:39">gen_helper_add_saturate</name><argument_list pos:start="671:40" pos:end="671:55">(<argument pos:start="671:41" pos:end="671:43"><expr pos:start="671:41" pos:end="671:43"><name pos:start="671:41" pos:end="671:43">tmp</name></expr></argument>, <argument pos:start="671:46" pos:end="671:48"><expr pos:start="671:46" pos:end="671:48"><name pos:start="671:46" pos:end="671:48">tmp</name></expr></argument>, <argument pos:start="671:51" pos:end="671:54"><expr pos:start="671:51" pos:end="671:54"><name pos:start="671:51" pos:end="671:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="673:13" pos:end="673:36"><expr pos:start="673:13" pos:end="673:35"><call pos:start="673:13" pos:end="673:35"><name pos:start="673:13" pos:end="673:29">tcg_temp_free_i32</name><argument_list pos:start="673:30" pos:end="673:35">(<argument pos:start="673:31" pos:end="673:34"><expr pos:start="673:31" pos:end="673:34"><name pos:start="673:31" pos:end="673:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="675:13" pos:end="675:34"><expr pos:start="675:13" pos:end="675:33"><call pos:start="675:13" pos:end="675:33"><name pos:start="675:13" pos:end="675:21">store_reg</name><argument_list pos:start="675:22" pos:end="675:33">(<argument pos:start="675:23" pos:end="675:23"><expr pos:start="675:23" pos:end="675:23"><name pos:start="675:23" pos:end="675:23">s</name></expr></argument>, <argument pos:start="675:26" pos:end="675:27"><expr pos:start="675:26" pos:end="675:27"><name pos:start="675:26" pos:end="675:27">rd</name></expr></argument>, <argument pos:start="675:30" pos:end="675:32"><expr pos:start="675:30" pos:end="675:32"><name pos:start="675:30" pos:end="675:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="677:13" pos:end="677:18">break;</break>

        <case pos:start="679:9" pos:end="679:15">case <expr pos:start="679:14" pos:end="679:14"><literal type="number" pos:start="679:14" pos:end="679:14">7</literal></expr>:</case>

            <comment type="block" pos:start="681:13" pos:end="685:27">/* SMC instruction (op1 == 3)

               and undefined instructions (op1 == 0 || op1 == 2)

               will trap */</comment>

            <if_stmt pos:start="687:13" pos:end="691:13"><if pos:start="687:13" pos:end="691:13">if <condition pos:start="687:16" pos:end="687:25">(<expr pos:start="687:17" pos:end="687:24"><name pos:start="687:17" pos:end="687:19">op1</name> <operator pos:start="687:21" pos:end="687:22">!=</operator> <literal type="number" pos:start="687:24" pos:end="687:24">1</literal></expr>)</condition> <block pos:start="687:27" pos:end="691:13">{<block_content pos:start="689:17" pos:end="689:32">

                <goto pos:start="689:17" pos:end="689:32">goto <name pos:start="689:22" pos:end="689:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="693:13" pos:end="693:22">/* bkpt */</comment>

            <expr_stmt pos:start="695:13" pos:end="695:48"><expr pos:start="695:13" pos:end="695:47"><call pos:start="695:13" pos:end="695:47"><name pos:start="695:13" pos:end="695:30">gen_exception_insn</name><argument_list pos:start="695:31" pos:end="695:47">(<argument pos:start="695:32" pos:end="695:32"><expr pos:start="695:32" pos:end="695:32"><name pos:start="695:32" pos:end="695:32">s</name></expr></argument>, <argument pos:start="695:35" pos:end="695:35"><expr pos:start="695:35" pos:end="695:35"><literal type="number" pos:start="695:35" pos:end="695:35">4</literal></expr></argument>, <argument pos:start="695:38" pos:end="695:46"><expr pos:start="695:38" pos:end="695:46"><name pos:start="695:38" pos:end="695:46">EXCP_BKPT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="697:13" pos:end="697:18">break;</break>

        <case pos:start="699:9" pos:end="699:17">case <expr pos:start="699:14" pos:end="699:16"><literal type="number" pos:start="699:14" pos:end="699:16">0x8</literal></expr>:</case> <comment type="block" pos:start="699:19" pos:end="699:39">/* signed multiply */</comment>

        <case pos:start="701:9" pos:end="701:17">case <expr pos:start="701:14" pos:end="701:16"><literal type="number" pos:start="701:14" pos:end="701:16">0xa</literal></expr>:</case>

        <case pos:start="703:9" pos:end="703:17">case <expr pos:start="703:14" pos:end="703:16"><literal type="number" pos:start="703:14" pos:end="703:16">0xc</literal></expr>:</case>

        <case pos:start="705:9" pos:end="705:17">case <expr pos:start="705:14" pos:end="705:16"><literal type="number" pos:start="705:14" pos:end="705:16">0xe</literal></expr>:</case>

            <expr_stmt pos:start="707:13" pos:end="707:35"><expr pos:start="707:13" pos:end="707:34"><name pos:start="707:13" pos:end="707:14">rs</name> <operator pos:start="707:16" pos:end="707:16">=</operator> <operator pos:start="707:18" pos:end="707:18">(</operator><name pos:start="707:19" pos:end="707:22">insn</name> <operator pos:start="707:24" pos:end="707:25">&gt;&gt;</operator> <literal type="number" pos:start="707:27" pos:end="707:27">8</literal><operator pos:start="707:28" pos:end="707:28">)</operator> <operator pos:start="707:30" pos:end="707:30">&amp;</operator> <literal type="number" pos:start="707:32" pos:end="707:34">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="709:13" pos:end="709:36"><expr pos:start="709:13" pos:end="709:35"><name pos:start="709:13" pos:end="709:14">rn</name> <operator pos:start="709:16" pos:end="709:16">=</operator> <operator pos:start="709:18" pos:end="709:18">(</operator><name pos:start="709:19" pos:end="709:22">insn</name> <operator pos:start="709:24" pos:end="709:25">&gt;&gt;</operator> <literal type="number" pos:start="709:27" pos:end="709:28">12</literal><operator pos:start="709:29" pos:end="709:29">)</operator> <operator pos:start="709:31" pos:end="709:31">&amp;</operator> <literal type="number" pos:start="709:33" pos:end="709:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="711:13" pos:end="711:36"><expr pos:start="711:13" pos:end="711:35"><name pos:start="711:13" pos:end="711:14">rd</name> <operator pos:start="711:16" pos:end="711:16">=</operator> <operator pos:start="711:18" pos:end="711:18">(</operator><name pos:start="711:19" pos:end="711:22">insn</name> <operator pos:start="711:24" pos:end="711:25">&gt;&gt;</operator> <literal type="number" pos:start="711:27" pos:end="711:28">16</literal><operator pos:start="711:29" pos:end="711:29">)</operator> <operator pos:start="711:31" pos:end="711:31">&amp;</operator> <literal type="number" pos:start="711:33" pos:end="711:35">0xf</literal></expr>;</expr_stmt>

            <if_stmt pos:start="713:13" pos:end="793:13"><if pos:start="713:13" pos:end="751:13">if <condition pos:start="713:16" pos:end="713:25">(<expr pos:start="713:17" pos:end="713:24"><name pos:start="713:17" pos:end="713:19">op1</name> <operator pos:start="713:21" pos:end="713:22">==</operator> <literal type="number" pos:start="713:24" pos:end="713:24">1</literal></expr>)</condition> <block pos:start="713:27" pos:end="751:13">{<block_content pos:start="717:17" pos:end="749:38">

                <comment type="block" pos:start="715:17" pos:end="715:37">/* (32 * 16) &gt;&gt; 16 */</comment>

                <expr_stmt pos:start="717:17" pos:end="717:38"><expr pos:start="717:17" pos:end="717:37"><name pos:start="717:17" pos:end="717:19">tmp</name> <operator pos:start="717:21" pos:end="717:21">=</operator> <call pos:start="717:23" pos:end="717:37"><name pos:start="717:23" pos:end="717:30">load_reg</name><argument_list pos:start="717:31" pos:end="717:37">(<argument pos:start="717:32" pos:end="717:32"><expr pos:start="717:32" pos:end="717:32"><name pos:start="717:32" pos:end="717:32">s</name></expr></argument>, <argument pos:start="717:35" pos:end="717:36"><expr pos:start="717:35" pos:end="717:36"><name pos:start="717:35" pos:end="717:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="719:17" pos:end="719:39"><expr pos:start="719:17" pos:end="719:38"><name pos:start="719:17" pos:end="719:20">tmp2</name> <operator pos:start="719:22" pos:end="719:22">=</operator> <call pos:start="719:24" pos:end="719:38"><name pos:start="719:24" pos:end="719:31">load_reg</name><argument_list pos:start="719:32" pos:end="719:38">(<argument pos:start="719:33" pos:end="719:33"><expr pos:start="719:33" pos:end="719:33"><name pos:start="719:33" pos:end="719:33">s</name></expr></argument>, <argument pos:start="719:36" pos:end="719:37"><expr pos:start="719:36" pos:end="719:37"><name pos:start="719:36" pos:end="719:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="721:17" pos:end="727:35"><if pos:start="721:17" pos:end="723:53">if <condition pos:start="721:20" pos:end="721:27">(<expr pos:start="721:21" pos:end="721:26"><name pos:start="721:21" pos:end="721:22">sh</name> <operator pos:start="721:24" pos:end="721:24">&amp;</operator> <literal type="number" pos:start="721:26" pos:end="721:26">4</literal></expr>)</condition><block type="pseudo" pos:start="723:21" pos:end="723:53"><block_content pos:start="723:21" pos:end="723:53">

                    <expr_stmt pos:start="723:21" pos:end="723:53"><expr pos:start="723:21" pos:end="723:52"><call pos:start="723:21" pos:end="723:52"><name pos:start="723:21" pos:end="723:36">tcg_gen_sari_i32</name><argument_list pos:start="723:37" pos:end="723:52">(<argument pos:start="723:38" pos:end="723:41"><expr pos:start="723:38" pos:end="723:41"><name pos:start="723:38" pos:end="723:41">tmp2</name></expr></argument>, <argument pos:start="723:44" pos:end="723:47"><expr pos:start="723:44" pos:end="723:47"><name pos:start="723:44" pos:end="723:47">tmp2</name></expr></argument>, <argument pos:start="723:50" pos:end="723:51"><expr pos:start="723:50" pos:end="723:51"><literal type="number" pos:start="723:50" pos:end="723:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="725:17" pos:end="727:35">else<block type="pseudo" pos:start="727:21" pos:end="727:35"><block_content pos:start="727:21" pos:end="727:35">

                    <expr_stmt pos:start="727:21" pos:end="727:35"><expr pos:start="727:21" pos:end="727:34"><call pos:start="727:21" pos:end="727:34"><name pos:start="727:21" pos:end="727:28">gen_sxth</name><argument_list pos:start="727:29" pos:end="727:34">(<argument pos:start="727:30" pos:end="727:33"><expr pos:start="727:30" pos:end="727:33"><name pos:start="727:30" pos:end="727:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="729:17" pos:end="729:52"><expr pos:start="729:17" pos:end="729:51"><name pos:start="729:17" pos:end="729:21">tmp64</name> <operator pos:start="729:23" pos:end="729:23">=</operator> <call pos:start="729:25" pos:end="729:51"><name pos:start="729:25" pos:end="729:40">gen_muls_i64_i32</name><argument_list pos:start="729:41" pos:end="729:51">(<argument pos:start="729:42" pos:end="729:44"><expr pos:start="729:42" pos:end="729:44"><name pos:start="729:42" pos:end="729:44">tmp</name></expr></argument>, <argument pos:start="729:47" pos:end="729:50"><expr pos:start="729:47" pos:end="729:50"><name pos:start="729:47" pos:end="729:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="731:17" pos:end="731:51"><expr pos:start="731:17" pos:end="731:50"><call pos:start="731:17" pos:end="731:50"><name pos:start="731:17" pos:end="731:32">tcg_gen_shri_i64</name><argument_list pos:start="731:33" pos:end="731:50">(<argument pos:start="731:34" pos:end="731:38"><expr pos:start="731:34" pos:end="731:38"><name pos:start="731:34" pos:end="731:38">tmp64</name></expr></argument>, <argument pos:start="731:41" pos:end="731:45"><expr pos:start="731:41" pos:end="731:45"><name pos:start="731:41" pos:end="731:45">tmp64</name></expr></argument>, <argument pos:start="731:48" pos:end="731:49"><expr pos:start="731:48" pos:end="731:49"><literal type="number" pos:start="731:48" pos:end="731:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="733:17" pos:end="733:41"><expr pos:start="733:17" pos:end="733:40"><name pos:start="733:17" pos:end="733:19">tmp</name> <operator pos:start="733:21" pos:end="733:21">=</operator> <call pos:start="733:23" pos:end="733:40"><name pos:start="733:23" pos:end="733:38">tcg_temp_new_i32</name><argument_list pos:start="733:39" pos:end="733:40">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="735:17" pos:end="735:50"><expr pos:start="735:17" pos:end="735:49"><call pos:start="735:17" pos:end="735:49"><name pos:start="735:17" pos:end="735:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="735:38" pos:end="735:49">(<argument pos:start="735:39" pos:end="735:41"><expr pos:start="735:39" pos:end="735:41"><name pos:start="735:39" pos:end="735:41">tmp</name></expr></argument>, <argument pos:start="735:44" pos:end="735:48"><expr pos:start="735:44" pos:end="735:48"><name pos:start="735:44" pos:end="735:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="737:17" pos:end="737:41"><expr pos:start="737:17" pos:end="737:40"><call pos:start="737:17" pos:end="737:40"><name pos:start="737:17" pos:end="737:33">tcg_temp_free_i64</name><argument_list pos:start="737:34" pos:end="737:40">(<argument pos:start="737:35" pos:end="737:39"><expr pos:start="737:35" pos:end="737:39"><name pos:start="737:35" pos:end="737:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="739:17" pos:end="747:17"><if pos:start="739:17" pos:end="747:17">if <condition pos:start="739:20" pos:end="739:34">(<expr pos:start="739:21" pos:end="739:33"><operator pos:start="739:21" pos:end="739:21">(</operator><name pos:start="739:22" pos:end="739:23">sh</name> <operator pos:start="739:25" pos:end="739:25">&amp;</operator> <literal type="number" pos:start="739:27" pos:end="739:27">2</literal><operator pos:start="739:28" pos:end="739:28">)</operator> <operator pos:start="739:30" pos:end="739:31">==</operator> <literal type="number" pos:start="739:33" pos:end="739:33">0</literal></expr>)</condition> <block pos:start="739:36" pos:end="747:17">{<block_content pos:start="741:21" pos:end="745:44">

                    <expr_stmt pos:start="741:21" pos:end="741:43"><expr pos:start="741:21" pos:end="741:42"><name pos:start="741:21" pos:end="741:24">tmp2</name> <operator pos:start="741:26" pos:end="741:26">=</operator> <call pos:start="741:28" pos:end="741:42"><name pos:start="741:28" pos:end="741:35">load_reg</name><argument_list pos:start="741:36" pos:end="741:42">(<argument pos:start="741:37" pos:end="741:37"><expr pos:start="741:37" pos:end="741:37"><name pos:start="741:37" pos:end="741:37">s</name></expr></argument>, <argument pos:start="741:40" pos:end="741:41"><expr pos:start="741:40" pos:end="741:41"><name pos:start="741:40" pos:end="741:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="743:21" pos:end="743:56"><expr pos:start="743:21" pos:end="743:55"><call pos:start="743:21" pos:end="743:55"><name pos:start="743:21" pos:end="743:39">gen_helper_add_setq</name><argument_list pos:start="743:40" pos:end="743:55">(<argument pos:start="743:41" pos:end="743:43"><expr pos:start="743:41" pos:end="743:43"><name pos:start="743:41" pos:end="743:43">tmp</name></expr></argument>, <argument pos:start="743:46" pos:end="743:48"><expr pos:start="743:46" pos:end="743:48"><name pos:start="743:46" pos:end="743:48">tmp</name></expr></argument>, <argument pos:start="743:51" pos:end="743:54"><expr pos:start="743:51" pos:end="743:54"><name pos:start="743:51" pos:end="743:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="745:21" pos:end="745:44"><expr pos:start="745:21" pos:end="745:43"><call pos:start="745:21" pos:end="745:43"><name pos:start="745:21" pos:end="745:37">tcg_temp_free_i32</name><argument_list pos:start="745:38" pos:end="745:43">(<argument pos:start="745:39" pos:end="745:42"><expr pos:start="745:39" pos:end="745:42"><name pos:start="745:39" pos:end="745:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="749:17" pos:end="749:38"><expr pos:start="749:17" pos:end="749:37"><call pos:start="749:17" pos:end="749:37"><name pos:start="749:17" pos:end="749:25">store_reg</name><argument_list pos:start="749:26" pos:end="749:37">(<argument pos:start="749:27" pos:end="749:27"><expr pos:start="749:27" pos:end="749:27"><name pos:start="749:27" pos:end="749:27">s</name></expr></argument>, <argument pos:start="749:30" pos:end="749:31"><expr pos:start="749:30" pos:end="749:31"><name pos:start="749:30" pos:end="749:31">rd</name></expr></argument>, <argument pos:start="749:34" pos:end="749:36"><expr pos:start="749:34" pos:end="749:36"><name pos:start="749:34" pos:end="749:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="751:15" pos:end="793:13">else <block pos:start="751:20" pos:end="793:13">{<block_content pos:start="755:17" pos:end="791:17">

                <comment type="block" pos:start="753:17" pos:end="753:29">/* 16 * 16 */</comment>

                <expr_stmt pos:start="755:17" pos:end="755:38"><expr pos:start="755:17" pos:end="755:37"><name pos:start="755:17" pos:end="755:19">tmp</name> <operator pos:start="755:21" pos:end="755:21">=</operator> <call pos:start="755:23" pos:end="755:37"><name pos:start="755:23" pos:end="755:30">load_reg</name><argument_list pos:start="755:31" pos:end="755:37">(<argument pos:start="755:32" pos:end="755:32"><expr pos:start="755:32" pos:end="755:32"><name pos:start="755:32" pos:end="755:32">s</name></expr></argument>, <argument pos:start="755:35" pos:end="755:36"><expr pos:start="755:35" pos:end="755:36"><name pos:start="755:35" pos:end="755:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="757:17" pos:end="757:39"><expr pos:start="757:17" pos:end="757:38"><name pos:start="757:17" pos:end="757:20">tmp2</name> <operator pos:start="757:22" pos:end="757:22">=</operator> <call pos:start="757:24" pos:end="757:38"><name pos:start="757:24" pos:end="757:31">load_reg</name><argument_list pos:start="757:32" pos:end="757:38">(<argument pos:start="757:33" pos:end="757:33"><expr pos:start="757:33" pos:end="757:33"><name pos:start="757:33" pos:end="757:33">s</name></expr></argument>, <argument pos:start="757:36" pos:end="757:37"><expr pos:start="757:36" pos:end="757:37"><name pos:start="757:36" pos:end="757:37">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="759:17" pos:end="759:53"><expr pos:start="759:17" pos:end="759:52"><call pos:start="759:17" pos:end="759:52"><name pos:start="759:17" pos:end="759:25">gen_mulxy</name><argument_list pos:start="759:26" pos:end="759:52">(<argument pos:start="759:27" pos:end="759:29"><expr pos:start="759:27" pos:end="759:29"><name pos:start="759:27" pos:end="759:29">tmp</name></expr></argument>, <argument pos:start="759:32" pos:end="759:35"><expr pos:start="759:32" pos:end="759:35"><name pos:start="759:32" pos:end="759:35">tmp2</name></expr></argument>, <argument pos:start="759:38" pos:end="759:43"><expr pos:start="759:38" pos:end="759:43"><name pos:start="759:38" pos:end="759:39">sh</name> <operator pos:start="759:41" pos:end="759:41">&amp;</operator> <literal type="number" pos:start="759:43" pos:end="759:43">2</literal></expr></argument>, <argument pos:start="759:46" pos:end="759:51"><expr pos:start="759:46" pos:end="759:51"><name pos:start="759:46" pos:end="759:47">sh</name> <operator pos:start="759:49" pos:end="759:49">&amp;</operator> <literal type="number" pos:start="759:51" pos:end="759:51">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="761:17" pos:end="761:40"><expr pos:start="761:17" pos:end="761:39"><call pos:start="761:17" pos:end="761:39"><name pos:start="761:17" pos:end="761:33">tcg_temp_free_i32</name><argument_list pos:start="761:34" pos:end="761:39">(<argument pos:start="761:35" pos:end="761:38"><expr pos:start="761:35" pos:end="761:38"><name pos:start="761:35" pos:end="761:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="763:17" pos:end="791:17"><if pos:start="763:17" pos:end="777:17">if <condition pos:start="763:20" pos:end="763:29">(<expr pos:start="763:21" pos:end="763:28"><name pos:start="763:21" pos:end="763:23">op1</name> <operator pos:start="763:25" pos:end="763:26">==</operator> <literal type="number" pos:start="763:28" pos:end="763:28">2</literal></expr>)</condition> <block pos:start="763:31" pos:end="777:17">{<block_content pos:start="765:21" pos:end="775:45">

                    <expr_stmt pos:start="765:21" pos:end="765:47"><expr pos:start="765:21" pos:end="765:46"><name pos:start="765:21" pos:end="765:25">tmp64</name> <operator pos:start="765:27" pos:end="765:27">=</operator> <call pos:start="765:29" pos:end="765:46"><name pos:start="765:29" pos:end="765:44">tcg_temp_new_i64</name><argument_list pos:start="765:45" pos:end="765:46">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="767:21" pos:end="767:52"><expr pos:start="767:21" pos:end="767:51"><call pos:start="767:21" pos:end="767:51"><name pos:start="767:21" pos:end="767:39">tcg_gen_ext_i32_i64</name><argument_list pos:start="767:40" pos:end="767:51">(<argument pos:start="767:41" pos:end="767:45"><expr pos:start="767:41" pos:end="767:45"><name pos:start="767:41" pos:end="767:45">tmp64</name></expr></argument>, <argument pos:start="767:48" pos:end="767:50"><expr pos:start="767:48" pos:end="767:50"><name pos:start="767:48" pos:end="767:50">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="769:21" pos:end="769:43"><expr pos:start="769:21" pos:end="769:42"><call pos:start="769:21" pos:end="769:42"><name pos:start="769:21" pos:end="769:37">tcg_temp_free_i32</name><argument_list pos:start="769:38" pos:end="769:42">(<argument pos:start="769:39" pos:end="769:41"><expr pos:start="769:39" pos:end="769:41"><name pos:start="769:39" pos:end="769:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="771:21" pos:end="771:47"><expr pos:start="771:21" pos:end="771:46"><call pos:start="771:21" pos:end="771:46"><name pos:start="771:21" pos:end="771:28">gen_addq</name><argument_list pos:start="771:29" pos:end="771:46">(<argument pos:start="771:30" pos:end="771:30"><expr pos:start="771:30" pos:end="771:30"><name pos:start="771:30" pos:end="771:30">s</name></expr></argument>, <argument pos:start="771:33" pos:end="771:37"><expr pos:start="771:33" pos:end="771:37"><name pos:start="771:33" pos:end="771:37">tmp64</name></expr></argument>, <argument pos:start="771:40" pos:end="771:41"><expr pos:start="771:40" pos:end="771:41"><name pos:start="771:40" pos:end="771:41">rn</name></expr></argument>, <argument pos:start="771:44" pos:end="771:45"><expr pos:start="771:44" pos:end="771:45"><name pos:start="771:44" pos:end="771:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="773:21" pos:end="773:53"><expr pos:start="773:21" pos:end="773:52"><call pos:start="773:21" pos:end="773:52"><name pos:start="773:21" pos:end="773:34">gen_storeq_reg</name><argument_list pos:start="773:35" pos:end="773:52">(<argument pos:start="773:36" pos:end="773:36"><expr pos:start="773:36" pos:end="773:36"><name pos:start="773:36" pos:end="773:36">s</name></expr></argument>, <argument pos:start="773:39" pos:end="773:40"><expr pos:start="773:39" pos:end="773:40"><name pos:start="773:39" pos:end="773:40">rn</name></expr></argument>, <argument pos:start="773:43" pos:end="773:44"><expr pos:start="773:43" pos:end="773:44"><name pos:start="773:43" pos:end="773:44">rd</name></expr></argument>, <argument pos:start="773:47" pos:end="773:51"><expr pos:start="773:47" pos:end="773:51"><name pos:start="773:47" pos:end="773:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="775:21" pos:end="775:45"><expr pos:start="775:21" pos:end="775:44"><call pos:start="775:21" pos:end="775:44"><name pos:start="775:21" pos:end="775:37">tcg_temp_free_i64</name><argument_list pos:start="775:38" pos:end="775:44">(<argument pos:start="775:39" pos:end="775:43"><expr pos:start="775:39" pos:end="775:43"><name pos:start="775:39" pos:end="775:43">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="777:19" pos:end="791:17">else <block pos:start="777:24" pos:end="791:17">{<block_content pos:start="779:21" pos:end="789:42">

                    <if_stmt pos:start="779:21" pos:end="787:21"><if pos:start="779:21" pos:end="787:21">if <condition pos:start="779:24" pos:end="779:33">(<expr pos:start="779:25" pos:end="779:32"><name pos:start="779:25" pos:end="779:27">op1</name> <operator pos:start="779:29" pos:end="779:30">==</operator> <literal type="number" pos:start="779:32" pos:end="779:32">0</literal></expr>)</condition> <block pos:start="779:35" pos:end="787:21">{<block_content pos:start="781:25" pos:end="785:48">

                        <expr_stmt pos:start="781:25" pos:end="781:47"><expr pos:start="781:25" pos:end="781:46"><name pos:start="781:25" pos:end="781:28">tmp2</name> <operator pos:start="781:30" pos:end="781:30">=</operator> <call pos:start="781:32" pos:end="781:46"><name pos:start="781:32" pos:end="781:39">load_reg</name><argument_list pos:start="781:40" pos:end="781:46">(<argument pos:start="781:41" pos:end="781:41"><expr pos:start="781:41" pos:end="781:41"><name pos:start="781:41" pos:end="781:41">s</name></expr></argument>, <argument pos:start="781:44" pos:end="781:45"><expr pos:start="781:44" pos:end="781:45"><name pos:start="781:44" pos:end="781:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="783:25" pos:end="783:60"><expr pos:start="783:25" pos:end="783:59"><call pos:start="783:25" pos:end="783:59"><name pos:start="783:25" pos:end="783:43">gen_helper_add_setq</name><argument_list pos:start="783:44" pos:end="783:59">(<argument pos:start="783:45" pos:end="783:47"><expr pos:start="783:45" pos:end="783:47"><name pos:start="783:45" pos:end="783:47">tmp</name></expr></argument>, <argument pos:start="783:50" pos:end="783:52"><expr pos:start="783:50" pos:end="783:52"><name pos:start="783:50" pos:end="783:52">tmp</name></expr></argument>, <argument pos:start="783:55" pos:end="783:58"><expr pos:start="783:55" pos:end="783:58"><name pos:start="783:55" pos:end="783:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="785:25" pos:end="785:48"><expr pos:start="785:25" pos:end="785:47"><call pos:start="785:25" pos:end="785:47"><name pos:start="785:25" pos:end="785:41">tcg_temp_free_i32</name><argument_list pos:start="785:42" pos:end="785:47">(<argument pos:start="785:43" pos:end="785:46"><expr pos:start="785:43" pos:end="785:46"><name pos:start="785:43" pos:end="785:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="789:21" pos:end="789:42"><expr pos:start="789:21" pos:end="789:41"><call pos:start="789:21" pos:end="789:41"><name pos:start="789:21" pos:end="789:29">store_reg</name><argument_list pos:start="789:30" pos:end="789:41">(<argument pos:start="789:31" pos:end="789:31"><expr pos:start="789:31" pos:end="789:31"><name pos:start="789:31" pos:end="789:31">s</name></expr></argument>, <argument pos:start="789:34" pos:end="789:35"><expr pos:start="789:34" pos:end="789:35"><name pos:start="789:34" pos:end="789:35">rd</name></expr></argument>, <argument pos:start="789:38" pos:end="789:40"><expr pos:start="789:38" pos:end="789:40"><name pos:start="789:38" pos:end="789:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="795:13" pos:end="795:18">break;</break>

        <default pos:start="797:9" pos:end="797:16">default:</default>

            <goto pos:start="799:13" pos:end="799:28">goto <name pos:start="799:18" pos:end="799:27">illegal_op</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></if> <if type="elseif" pos:start="803:7" pos:end="1165:5">else if <condition pos:start="803:15" pos:end="807:50">(<expr pos:start="803:16" pos:end="807:49"><operator pos:start="803:16" pos:end="803:16">(</operator><operator pos:start="803:17" pos:end="803:17">(</operator><name pos:start="803:18" pos:end="803:21">insn</name> <operator pos:start="803:23" pos:end="803:23">&amp;</operator> <literal type="number" pos:start="803:25" pos:end="803:34">0x0e000000</literal><operator pos:start="803:35" pos:end="803:35">)</operator> <operator pos:start="803:37" pos:end="803:38">==</operator> <literal type="number" pos:start="803:40" pos:end="803:40">0</literal> <operator pos:start="803:42" pos:end="803:43">&amp;&amp;</operator>

                <operator pos:start="805:17" pos:end="805:17">(</operator><name pos:start="805:18" pos:end="805:21">insn</name> <operator pos:start="805:23" pos:end="805:23">&amp;</operator> <literal type="number" pos:start="805:25" pos:end="805:34">0x00000090</literal><operator pos:start="805:35" pos:end="805:35">)</operator> <operator pos:start="805:37" pos:end="805:38">!=</operator> <literal type="number" pos:start="805:40" pos:end="805:43">0x90</literal><operator pos:start="805:44" pos:end="805:44">)</operator> <operator pos:start="805:46" pos:end="805:47">||</operator>

               <operator pos:start="807:16" pos:end="807:16">(</operator><operator pos:start="807:17" pos:end="807:17">(</operator><name pos:start="807:18" pos:end="807:21">insn</name> <operator pos:start="807:23" pos:end="807:23">&amp;</operator> <literal type="number" pos:start="807:25" pos:end="807:34">0x0e000000</literal><operator pos:start="807:35" pos:end="807:35">)</operator> <operator pos:start="807:37" pos:end="807:38">==</operator> <operator pos:start="807:40" pos:end="807:40">(</operator><literal type="number" pos:start="807:41" pos:end="807:41">1</literal> <operator pos:start="807:43" pos:end="807:44">&lt;&lt;</operator> <literal type="number" pos:start="807:46" pos:end="807:47">25</literal><operator pos:start="807:48" pos:end="807:48">)</operator><operator pos:start="807:49" pos:end="807:49">)</operator></expr>)</condition> <block pos:start="807:52" pos:end="1165:5">{<block_content pos:start="809:9" pos:end="1163:9">

        <decl_stmt pos:start="809:9" pos:end="809:38"><decl pos:start="809:9" pos:end="809:18"><type pos:start="809:9" pos:end="809:11"><name pos:start="809:9" pos:end="809:11">int</name></type> <name pos:start="809:13" pos:end="809:18">set_cc</name></decl>, <decl pos:start="809:21" pos:end="809:28"><type ref="prev" pos:start="809:9" pos:end="809:11"/><name pos:start="809:21" pos:end="809:28">logic_cc</name></decl>, <decl pos:start="809:31" pos:end="809:37"><type ref="prev" pos:start="809:9" pos:end="809:11"/><name pos:start="809:31" pos:end="809:37">shiftop</name></decl>;</decl_stmt>



        <expr_stmt pos:start="813:9" pos:end="813:33"><expr pos:start="813:9" pos:end="813:32"><name pos:start="813:9" pos:end="813:11">op1</name> <operator pos:start="813:13" pos:end="813:13">=</operator> <operator pos:start="813:15" pos:end="813:15">(</operator><name pos:start="813:16" pos:end="813:19">insn</name> <operator pos:start="813:21" pos:end="813:22">&gt;&gt;</operator> <literal type="number" pos:start="813:24" pos:end="813:25">21</literal><operator pos:start="813:26" pos:end="813:26">)</operator> <operator pos:start="813:28" pos:end="813:28">&amp;</operator> <literal type="number" pos:start="813:30" pos:end="813:32">0xf</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="815:9" pos:end="815:34"><expr pos:start="815:9" pos:end="815:33"><name pos:start="815:9" pos:end="815:14">set_cc</name> <operator pos:start="815:16" pos:end="815:16">=</operator> <operator pos:start="815:18" pos:end="815:18">(</operator><name pos:start="815:19" pos:end="815:22">insn</name> <operator pos:start="815:24" pos:end="815:25">&gt;&gt;</operator> <literal type="number" pos:start="815:27" pos:end="815:28">20</literal><operator pos:start="815:29" pos:end="815:29">)</operator> <operator pos:start="815:31" pos:end="815:31">&amp;</operator> <literal type="number" pos:start="815:33" pos:end="815:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="817:9" pos:end="817:48"><expr pos:start="817:9" pos:end="817:47"><name pos:start="817:9" pos:end="817:16">logic_cc</name> <operator pos:start="817:18" pos:end="817:18">=</operator> <name pos:start="817:20" pos:end="817:38"><name pos:start="817:20" pos:end="817:33">table_logic_cc</name><index pos:start="817:34" pos:end="817:38">[<expr pos:start="817:35" pos:end="817:37"><name pos:start="817:35" pos:end="817:37">op1</name></expr>]</index></name> <operator pos:start="817:40" pos:end="817:40">&amp;</operator> <name pos:start="817:42" pos:end="817:47">set_cc</name></expr>;</expr_stmt>



        <comment type="block" pos:start="821:9" pos:end="821:41">/* data processing instruction */</comment>

        <if_stmt pos:start="823:9" pos:end="873:9"><if pos:start="823:9" pos:end="847:9">if <condition pos:start="823:12" pos:end="823:29">(<expr pos:start="823:13" pos:end="823:28"><name pos:start="823:13" pos:end="823:16">insn</name> <operator pos:start="823:18" pos:end="823:18">&amp;</operator> <operator pos:start="823:20" pos:end="823:20">(</operator><literal type="number" pos:start="823:21" pos:end="823:21">1</literal> <operator pos:start="823:23" pos:end="823:24">&lt;&lt;</operator> <literal type="number" pos:start="823:26" pos:end="823:27">25</literal><operator pos:start="823:28" pos:end="823:28">)</operator></expr>)</condition> <block pos:start="823:31" pos:end="847:9">{<block_content pos:start="827:13" pos:end="845:13">

            <comment type="block" pos:start="825:13" pos:end="825:35">/* immediate operand */</comment>

            <expr_stmt pos:start="827:13" pos:end="827:30"><expr pos:start="827:13" pos:end="827:29"><name pos:start="827:13" pos:end="827:15">val</name> <operator pos:start="827:17" pos:end="827:17">=</operator> <name pos:start="827:19" pos:end="827:22">insn</name> <operator pos:start="827:24" pos:end="827:24">&amp;</operator> <literal type="number" pos:start="827:26" pos:end="827:29">0xff</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="829:13" pos:end="829:44"><expr pos:start="829:13" pos:end="829:43"><name pos:start="829:13" pos:end="829:17">shift</name> <operator pos:start="829:19" pos:end="829:19">=</operator> <operator pos:start="829:21" pos:end="829:21">(</operator><operator pos:start="829:22" pos:end="829:22">(</operator><name pos:start="829:23" pos:end="829:26">insn</name> <operator pos:start="829:28" pos:end="829:29">&gt;&gt;</operator> <literal type="number" pos:start="829:31" pos:end="829:31">8</literal><operator pos:start="829:32" pos:end="829:32">)</operator> <operator pos:start="829:34" pos:end="829:34">&amp;</operator> <literal type="number" pos:start="829:36" pos:end="829:38">0xf</literal><operator pos:start="829:39" pos:end="829:39">)</operator> <operator pos:start="829:41" pos:end="829:41">*</operator> <literal type="number" pos:start="829:43" pos:end="829:43">2</literal></expr>;</expr_stmt>

            <if_stmt pos:start="831:13" pos:end="835:13"><if pos:start="831:13" pos:end="835:13">if <condition pos:start="831:16" pos:end="831:22">(<expr pos:start="831:17" pos:end="831:21"><name pos:start="831:17" pos:end="831:21">shift</name></expr>)</condition> <block pos:start="831:24" pos:end="835:13">{<block_content pos:start="833:17" pos:end="833:61">

                <expr_stmt pos:start="833:17" pos:end="833:61"><expr pos:start="833:17" pos:end="833:60"><name pos:start="833:17" pos:end="833:19">val</name> <operator pos:start="833:21" pos:end="833:21">=</operator> <operator pos:start="833:23" pos:end="833:23">(</operator><name pos:start="833:24" pos:end="833:26">val</name> <operator pos:start="833:28" pos:end="833:29">&gt;&gt;</operator> <name pos:start="833:31" pos:end="833:35">shift</name><operator pos:start="833:36" pos:end="833:36">)</operator> <operator pos:start="833:38" pos:end="833:38">|</operator> <operator pos:start="833:40" pos:end="833:40">(</operator><name pos:start="833:41" pos:end="833:43">val</name> <operator pos:start="833:45" pos:end="833:46">&lt;&lt;</operator> <operator pos:start="833:48" pos:end="833:48">(</operator><literal type="number" pos:start="833:49" pos:end="833:52">32</literal> <operator pos:start="833:52" pos:end="833:52">-</operator> <name pos:start="833:54" pos:end="833:58">shift</name><operator pos:start="833:59" pos:end="833:59">)</operator><operator pos:start="833:60" pos:end="833:60">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="837:13" pos:end="837:38"><expr pos:start="837:13" pos:end="837:37"><name pos:start="837:13" pos:end="837:16">tmp2</name> <operator pos:start="837:18" pos:end="837:18">=</operator> <call pos:start="837:20" pos:end="837:37"><name pos:start="837:20" pos:end="837:35">tcg_temp_new_i32</name><argument_list pos:start="837:36" pos:end="837:37">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="839:13" pos:end="839:40"><expr pos:start="839:13" pos:end="839:39"><call pos:start="839:13" pos:end="839:39"><name pos:start="839:13" pos:end="839:28">tcg_gen_movi_i32</name><argument_list pos:start="839:29" pos:end="839:39">(<argument pos:start="839:30" pos:end="839:33"><expr pos:start="839:30" pos:end="839:33"><name pos:start="839:30" pos:end="839:33">tmp2</name></expr></argument>, <argument pos:start="839:36" pos:end="839:38"><expr pos:start="839:36" pos:end="839:38"><name pos:start="839:36" pos:end="839:38">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="841:13" pos:end="845:13"><if pos:start="841:13" pos:end="845:13">if <condition pos:start="841:16" pos:end="841:34">(<expr pos:start="841:17" pos:end="841:33"><name pos:start="841:17" pos:end="841:24">logic_cc</name> <operator pos:start="841:26" pos:end="841:27">&amp;&amp;</operator> <name pos:start="841:29" pos:end="841:33">shift</name></expr>)</condition> <block pos:start="841:36" pos:end="845:13">{<block_content pos:start="843:17" pos:end="843:39">

                <expr_stmt pos:start="843:17" pos:end="843:39"><expr pos:start="843:17" pos:end="843:38"><call pos:start="843:17" pos:end="843:38"><name pos:start="843:17" pos:end="843:32">gen_set_CF_bit31</name><argument_list pos:start="843:33" pos:end="843:38">(<argument pos:start="843:34" pos:end="843:37"><expr pos:start="843:34" pos:end="843:37"><name pos:start="843:34" pos:end="843:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="847:11" pos:end="873:9">else <block pos:start="847:16" pos:end="873:9">{<block_content pos:start="851:13" pos:end="871:13">

            <comment type="block" pos:start="849:13" pos:end="849:26">/* register */</comment>

            <expr_stmt pos:start="851:13" pos:end="851:30"><expr pos:start="851:13" pos:end="851:29"><name pos:start="851:13" pos:end="851:14">rm</name> <operator pos:start="851:16" pos:end="851:16">=</operator> <operator pos:start="851:18" pos:end="851:18">(</operator><name pos:start="851:19" pos:end="851:22">insn</name><operator pos:start="851:23" pos:end="851:23">)</operator> <operator pos:start="851:25" pos:end="851:25">&amp;</operator> <literal type="number" pos:start="851:27" pos:end="851:29">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:35"><expr pos:start="853:13" pos:end="853:34"><name pos:start="853:13" pos:end="853:16">tmp2</name> <operator pos:start="853:18" pos:end="853:18">=</operator> <call pos:start="853:20" pos:end="853:34"><name pos:start="853:20" pos:end="853:27">load_reg</name><argument_list pos:start="853:28" pos:end="853:34">(<argument pos:start="853:29" pos:end="853:29"><expr pos:start="853:29" pos:end="853:29"><name pos:start="853:29" pos:end="853:29">s</name></expr></argument>, <argument pos:start="853:32" pos:end="853:33"><expr pos:start="853:32" pos:end="853:33"><name pos:start="853:32" pos:end="853:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="855:13" pos:end="855:38"><expr pos:start="855:13" pos:end="855:37"><name pos:start="855:13" pos:end="855:19">shiftop</name> <operator pos:start="855:21" pos:end="855:21">=</operator> <operator pos:start="855:23" pos:end="855:23">(</operator><name pos:start="855:24" pos:end="855:27">insn</name> <operator pos:start="855:29" pos:end="855:30">&gt;&gt;</operator> <literal type="number" pos:start="855:32" pos:end="855:32">5</literal><operator pos:start="855:33" pos:end="855:33">)</operator> <operator pos:start="855:35" pos:end="855:35">&amp;</operator> <literal type="number" pos:start="855:37" pos:end="855:37">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="857:13" pos:end="871:13"><if pos:start="857:13" pos:end="863:13">if <condition pos:start="857:16" pos:end="857:35">(<expr pos:start="857:17" pos:end="857:34"><operator pos:start="857:17" pos:end="857:17">!</operator><operator pos:start="857:18" pos:end="857:18">(</operator><name pos:start="857:19" pos:end="857:22">insn</name> <operator pos:start="857:24" pos:end="857:24">&amp;</operator> <operator pos:start="857:26" pos:end="857:26">(</operator><literal type="number" pos:start="857:27" pos:end="857:27">1</literal> <operator pos:start="857:29" pos:end="857:30">&lt;&lt;</operator> <literal type="number" pos:start="857:32" pos:end="857:32">4</literal><operator pos:start="857:33" pos:end="857:33">)</operator><operator pos:start="857:34" pos:end="857:34">)</operator></expr>)</condition> <block pos:start="857:37" pos:end="863:13">{<block_content pos:start="859:17" pos:end="861:65">

                <expr_stmt pos:start="859:17" pos:end="859:43"><expr pos:start="859:17" pos:end="859:42"><name pos:start="859:17" pos:end="859:21">shift</name> <operator pos:start="859:23" pos:end="859:23">=</operator> <operator pos:start="859:25" pos:end="859:25">(</operator><name pos:start="859:26" pos:end="859:29">insn</name> <operator pos:start="859:31" pos:end="859:32">&gt;&gt;</operator> <literal type="number" pos:start="859:34" pos:end="859:34">7</literal><operator pos:start="859:35" pos:end="859:35">)</operator> <operator pos:start="859:37" pos:end="859:37">&amp;</operator> <literal type="number" pos:start="859:39" pos:end="859:42">0x1f</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="861:17" pos:end="861:65"><expr pos:start="861:17" pos:end="861:64"><call pos:start="861:17" pos:end="861:64"><name pos:start="861:17" pos:end="861:32">gen_arm_shift_im</name><argument_list pos:start="861:33" pos:end="861:64">(<argument pos:start="861:34" pos:end="861:37"><expr pos:start="861:34" pos:end="861:37"><name pos:start="861:34" pos:end="861:37">tmp2</name></expr></argument>, <argument pos:start="861:40" pos:end="861:46"><expr pos:start="861:40" pos:end="861:46"><name pos:start="861:40" pos:end="861:46">shiftop</name></expr></argument>, <argument pos:start="861:49" pos:end="861:53"><expr pos:start="861:49" pos:end="861:53"><name pos:start="861:49" pos:end="861:53">shift</name></expr></argument>, <argument pos:start="861:56" pos:end="861:63"><expr pos:start="861:56" pos:end="861:63"><name pos:start="861:56" pos:end="861:63">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="863:15" pos:end="871:13">else <block pos:start="863:20" pos:end="871:13">{<block_content pos:start="865:17" pos:end="869:64">

                <expr_stmt pos:start="865:17" pos:end="865:39"><expr pos:start="865:17" pos:end="865:38"><name pos:start="865:17" pos:end="865:18">rs</name> <operator pos:start="865:20" pos:end="865:20">=</operator> <operator pos:start="865:22" pos:end="865:22">(</operator><name pos:start="865:23" pos:end="865:26">insn</name> <operator pos:start="865:28" pos:end="865:29">&gt;&gt;</operator> <literal type="number" pos:start="865:31" pos:end="865:31">8</literal><operator pos:start="865:32" pos:end="865:32">)</operator> <operator pos:start="865:34" pos:end="865:34">&amp;</operator> <literal type="number" pos:start="865:36" pos:end="865:38">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="867:17" pos:end="867:38"><expr pos:start="867:17" pos:end="867:37"><name pos:start="867:17" pos:end="867:19">tmp</name> <operator pos:start="867:21" pos:end="867:21">=</operator> <call pos:start="867:23" pos:end="867:37"><name pos:start="867:23" pos:end="867:30">load_reg</name><argument_list pos:start="867:31" pos:end="867:37">(<argument pos:start="867:32" pos:end="867:32"><expr pos:start="867:32" pos:end="867:32"><name pos:start="867:32" pos:end="867:32">s</name></expr></argument>, <argument pos:start="867:35" pos:end="867:36"><expr pos:start="867:35" pos:end="867:36"><name pos:start="867:35" pos:end="867:36">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="869:17" pos:end="869:64"><expr pos:start="869:17" pos:end="869:63"><call pos:start="869:17" pos:end="869:63"><name pos:start="869:17" pos:end="869:33">gen_arm_shift_reg</name><argument_list pos:start="869:34" pos:end="869:63">(<argument pos:start="869:35" pos:end="869:38"><expr pos:start="869:35" pos:end="869:38"><name pos:start="869:35" pos:end="869:38">tmp2</name></expr></argument>, <argument pos:start="869:41" pos:end="869:47"><expr pos:start="869:41" pos:end="869:47"><name pos:start="869:41" pos:end="869:47">shiftop</name></expr></argument>, <argument pos:start="869:50" pos:end="869:52"><expr pos:start="869:50" pos:end="869:52"><name pos:start="869:50" pos:end="869:52">tmp</name></expr></argument>, <argument pos:start="869:55" pos:end="869:62"><expr pos:start="869:55" pos:end="869:62"><name pos:start="869:55" pos:end="869:62">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="875:9" pos:end="885:9"><if pos:start="875:9" pos:end="881:9">if <condition pos:start="875:12" pos:end="875:39">(<expr pos:start="875:13" pos:end="875:38"><name pos:start="875:13" pos:end="875:15">op1</name> <operator pos:start="875:17" pos:end="875:18">!=</operator> <literal type="number" pos:start="875:20" pos:end="875:23">0x0f</literal> <operator pos:start="875:25" pos:end="875:26">&amp;&amp;</operator> <name pos:start="875:28" pos:end="875:30">op1</name> <operator pos:start="875:32" pos:end="875:33">!=</operator> <literal type="number" pos:start="875:35" pos:end="875:38">0x0d</literal></expr>)</condition> <block pos:start="875:41" pos:end="881:9">{<block_content pos:start="877:13" pos:end="879:34">

            <expr_stmt pos:start="877:13" pos:end="877:36"><expr pos:start="877:13" pos:end="877:35"><name pos:start="877:13" pos:end="877:14">rn</name> <operator pos:start="877:16" pos:end="877:16">=</operator> <operator pos:start="877:18" pos:end="877:18">(</operator><name pos:start="877:19" pos:end="877:22">insn</name> <operator pos:start="877:24" pos:end="877:25">&gt;&gt;</operator> <literal type="number" pos:start="877:27" pos:end="877:28">16</literal><operator pos:start="877:29" pos:end="877:29">)</operator> <operator pos:start="877:31" pos:end="877:31">&amp;</operator> <literal type="number" pos:start="877:33" pos:end="877:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="879:13" pos:end="879:34"><expr pos:start="879:13" pos:end="879:33"><name pos:start="879:13" pos:end="879:15">tmp</name> <operator pos:start="879:17" pos:end="879:17">=</operator> <call pos:start="879:19" pos:end="879:33"><name pos:start="879:19" pos:end="879:26">load_reg</name><argument_list pos:start="879:27" pos:end="879:33">(<argument pos:start="879:28" pos:end="879:28"><expr pos:start="879:28" pos:end="879:28"><name pos:start="879:28" pos:end="879:28">s</name></expr></argument>, <argument pos:start="879:31" pos:end="879:32"><expr pos:start="879:31" pos:end="879:32"><name pos:start="879:31" pos:end="879:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="881:11" pos:end="885:9">else <block pos:start="881:16" pos:end="885:9">{<block_content pos:start="883:13" pos:end="883:29">

            <expr_stmt pos:start="883:13" pos:end="883:29"><expr pos:start="883:13" pos:end="883:28"><call pos:start="883:13" pos:end="883:28"><name pos:start="883:13" pos:end="883:23">TCGV_UNUSED</name><argument_list pos:start="883:24" pos:end="883:28">(<argument pos:start="883:25" pos:end="883:27"><expr pos:start="883:25" pos:end="883:27"><name pos:start="883:25" pos:end="883:27">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="887:9" pos:end="887:32"><expr pos:start="887:9" pos:end="887:31"><name pos:start="887:9" pos:end="887:10">rd</name> <operator pos:start="887:12" pos:end="887:12">=</operator> <operator pos:start="887:14" pos:end="887:14">(</operator><name pos:start="887:15" pos:end="887:18">insn</name> <operator pos:start="887:20" pos:end="887:21">&gt;&gt;</operator> <literal type="number" pos:start="887:23" pos:end="887:24">12</literal><operator pos:start="887:25" pos:end="887:25">)</operator> <operator pos:start="887:27" pos:end="887:27">&amp;</operator> <literal type="number" pos:start="887:29" pos:end="887:31">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="889:9" pos:end="1157:9">switch<condition pos:start="889:15" pos:end="889:19">(<expr pos:start="889:16" pos:end="889:18"><name pos:start="889:16" pos:end="889:18">op1</name></expr>)</condition> <block pos:start="889:21" pos:end="1157:9">{<block_content pos:start="891:9" pos:end="1155:18">

        <case pos:start="891:9" pos:end="891:18">case <expr pos:start="891:14" pos:end="891:17"><literal type="number" pos:start="891:14" pos:end="891:17">0x00</literal></expr>:</case>

            <expr_stmt pos:start="893:13" pos:end="893:44"><expr pos:start="893:13" pos:end="893:43"><call pos:start="893:13" pos:end="893:43"><name pos:start="893:13" pos:end="893:27">tcg_gen_and_i32</name><argument_list pos:start="893:28" pos:end="893:43">(<argument pos:start="893:29" pos:end="893:31"><expr pos:start="893:29" pos:end="893:31"><name pos:start="893:29" pos:end="893:31">tmp</name></expr></argument>, <argument pos:start="893:34" pos:end="893:36"><expr pos:start="893:34" pos:end="893:36"><name pos:start="893:34" pos:end="893:36">tmp</name></expr></argument>, <argument pos:start="893:39" pos:end="893:42"><expr pos:start="893:39" pos:end="893:42"><name pos:start="893:39" pos:end="893:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="895:13" pos:end="899:13"><if pos:start="895:13" pos:end="899:13">if <condition pos:start="895:16" pos:end="895:25">(<expr pos:start="895:17" pos:end="895:24"><name pos:start="895:17" pos:end="895:24">logic_cc</name></expr>)</condition> <block pos:start="895:27" pos:end="899:13">{<block_content pos:start="897:17" pos:end="897:34">

                <expr_stmt pos:start="897:17" pos:end="897:34"><expr pos:start="897:17" pos:end="897:33"><call pos:start="897:17" pos:end="897:33"><name pos:start="897:17" pos:end="897:28">gen_logic_CC</name><argument_list pos:start="897:29" pos:end="897:33">(<argument pos:start="897:30" pos:end="897:32"><expr pos:start="897:30" pos:end="897:32"><name pos:start="897:30" pos:end="897:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="901:13" pos:end="901:42"><expr pos:start="901:13" pos:end="901:41"><call pos:start="901:13" pos:end="901:41"><name pos:start="901:13" pos:end="901:24">store_reg_bx</name><argument_list pos:start="901:25" pos:end="901:41">(<argument pos:start="901:26" pos:end="901:28"><expr pos:start="901:26" pos:end="901:28"><name pos:start="901:26" pos:end="901:28">env</name></expr></argument>, <argument pos:start="901:31" pos:end="901:31"><expr pos:start="901:31" pos:end="901:31"><name pos:start="901:31" pos:end="901:31">s</name></expr></argument>, <argument pos:start="901:34" pos:end="901:35"><expr pos:start="901:34" pos:end="901:35"><name pos:start="901:34" pos:end="901:35">rd</name></expr></argument>, <argument pos:start="901:38" pos:end="901:40"><expr pos:start="901:38" pos:end="901:40"><name pos:start="901:38" pos:end="901:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="903:13" pos:end="903:18">break;</break>

        <case pos:start="905:9" pos:end="905:18">case <expr pos:start="905:14" pos:end="905:17"><literal type="number" pos:start="905:14" pos:end="905:17">0x01</literal></expr>:</case>

            <expr_stmt pos:start="907:13" pos:end="907:44"><expr pos:start="907:13" pos:end="907:43"><call pos:start="907:13" pos:end="907:43"><name pos:start="907:13" pos:end="907:27">tcg_gen_xor_i32</name><argument_list pos:start="907:28" pos:end="907:43">(<argument pos:start="907:29" pos:end="907:31"><expr pos:start="907:29" pos:end="907:31"><name pos:start="907:29" pos:end="907:31">tmp</name></expr></argument>, <argument pos:start="907:34" pos:end="907:36"><expr pos:start="907:34" pos:end="907:36"><name pos:start="907:34" pos:end="907:36">tmp</name></expr></argument>, <argument pos:start="907:39" pos:end="907:42"><expr pos:start="907:39" pos:end="907:42"><name pos:start="907:39" pos:end="907:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="909:13" pos:end="913:13"><if pos:start="909:13" pos:end="913:13">if <condition pos:start="909:16" pos:end="909:25">(<expr pos:start="909:17" pos:end="909:24"><name pos:start="909:17" pos:end="909:24">logic_cc</name></expr>)</condition> <block pos:start="909:27" pos:end="913:13">{<block_content pos:start="911:17" pos:end="911:34">

                <expr_stmt pos:start="911:17" pos:end="911:34"><expr pos:start="911:17" pos:end="911:33"><call pos:start="911:17" pos:end="911:33"><name pos:start="911:17" pos:end="911:28">gen_logic_CC</name><argument_list pos:start="911:29" pos:end="911:33">(<argument pos:start="911:30" pos:end="911:32"><expr pos:start="911:30" pos:end="911:32"><name pos:start="911:30" pos:end="911:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="915:13" pos:end="915:42"><expr pos:start="915:13" pos:end="915:41"><call pos:start="915:13" pos:end="915:41"><name pos:start="915:13" pos:end="915:24">store_reg_bx</name><argument_list pos:start="915:25" pos:end="915:41">(<argument pos:start="915:26" pos:end="915:28"><expr pos:start="915:26" pos:end="915:28"><name pos:start="915:26" pos:end="915:28">env</name></expr></argument>, <argument pos:start="915:31" pos:end="915:31"><expr pos:start="915:31" pos:end="915:31"><name pos:start="915:31" pos:end="915:31">s</name></expr></argument>, <argument pos:start="915:34" pos:end="915:35"><expr pos:start="915:34" pos:end="915:35"><name pos:start="915:34" pos:end="915:35">rd</name></expr></argument>, <argument pos:start="915:38" pos:end="915:40"><expr pos:start="915:38" pos:end="915:40"><name pos:start="915:38" pos:end="915:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="917:13" pos:end="917:18">break;</break>

        <case pos:start="919:9" pos:end="919:18">case <expr pos:start="919:14" pos:end="919:17"><literal type="number" pos:start="919:14" pos:end="919:17">0x02</literal></expr>:</case>

            <if_stmt pos:start="921:13" pos:end="949:13"><if pos:start="921:13" pos:end="935:13">if <condition pos:start="921:16" pos:end="921:35">(<expr pos:start="921:17" pos:end="921:34"><name pos:start="921:17" pos:end="921:22">set_cc</name> <operator pos:start="921:24" pos:end="921:25">&amp;&amp;</operator> <name pos:start="921:27" pos:end="921:28">rd</name> <operator pos:start="921:30" pos:end="921:31">==</operator> <literal type="number" pos:start="921:33" pos:end="921:34">15</literal></expr>)</condition> <block pos:start="921:37" pos:end="935:13">{<block_content pos:start="925:17" pos:end="933:45">

                <comment type="block" pos:start="923:17" pos:end="923:66">/* SUBS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="925:17" pos:end="929:17"><if pos:start="925:17" pos:end="929:17">if <condition pos:start="925:20" pos:end="925:31">(<expr pos:start="925:21" pos:end="925:30"><call pos:start="925:21" pos:end="925:30"><name pos:start="925:21" pos:end="925:27">IS_USER</name><argument_list pos:start="925:28" pos:end="925:30">(<argument pos:start="925:29" pos:end="925:29"><expr pos:start="925:29" pos:end="925:29"><name pos:start="925:29" pos:end="925:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="925:33" pos:end="929:17">{<block_content pos:start="927:21" pos:end="927:36">

                    <goto pos:start="927:21" pos:end="927:36">goto <name pos:start="927:26" pos:end="927:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="931:17" pos:end="931:50"><expr pos:start="931:17" pos:end="931:49"><call pos:start="931:17" pos:end="931:49"><name pos:start="931:17" pos:end="931:33">gen_helper_sub_cc</name><argument_list pos:start="931:34" pos:end="931:49">(<argument pos:start="931:35" pos:end="931:37"><expr pos:start="931:35" pos:end="931:37"><name pos:start="931:35" pos:end="931:37">tmp</name></expr></argument>, <argument pos:start="931:40" pos:end="931:42"><expr pos:start="931:40" pos:end="931:42"><name pos:start="931:40" pos:end="931:42">tmp</name></expr></argument>, <argument pos:start="931:45" pos:end="931:48"><expr pos:start="931:45" pos:end="931:48"><name pos:start="931:45" pos:end="931:48">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="933:17" pos:end="933:45"><expr pos:start="933:17" pos:end="933:44"><call pos:start="933:17" pos:end="933:44"><name pos:start="933:17" pos:end="933:36">gen_exception_return</name><argument_list pos:start="933:37" pos:end="933:44">(<argument pos:start="933:38" pos:end="933:38"><expr pos:start="933:38" pos:end="933:38"><name pos:start="933:38" pos:end="933:38">s</name></expr></argument>, <argument pos:start="933:41" pos:end="933:43"><expr pos:start="933:41" pos:end="933:43"><name pos:start="933:41" pos:end="933:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="935:15" pos:end="949:13">else <block pos:start="935:20" pos:end="949:13">{<block_content pos:start="937:17" pos:end="947:46">

                <if_stmt pos:start="937:17" pos:end="945:17"><if pos:start="937:17" pos:end="941:17">if <condition pos:start="937:20" pos:end="937:27">(<expr pos:start="937:21" pos:end="937:26"><name pos:start="937:21" pos:end="937:26">set_cc</name></expr>)</condition> <block pos:start="937:29" pos:end="941:17">{<block_content pos:start="939:21" pos:end="939:54">

                    <expr_stmt pos:start="939:21" pos:end="939:54"><expr pos:start="939:21" pos:end="939:53"><call pos:start="939:21" pos:end="939:53"><name pos:start="939:21" pos:end="939:37">gen_helper_sub_cc</name><argument_list pos:start="939:38" pos:end="939:53">(<argument pos:start="939:39" pos:end="939:41"><expr pos:start="939:39" pos:end="939:41"><name pos:start="939:39" pos:end="939:41">tmp</name></expr></argument>, <argument pos:start="939:44" pos:end="939:46"><expr pos:start="939:44" pos:end="939:46"><name pos:start="939:44" pos:end="939:46">tmp</name></expr></argument>, <argument pos:start="939:49" pos:end="939:52"><expr pos:start="939:49" pos:end="939:52"><name pos:start="939:49" pos:end="939:52">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="941:19" pos:end="945:17">else <block pos:start="941:24" pos:end="945:17">{<block_content pos:start="943:21" pos:end="943:52">

                    <expr_stmt pos:start="943:21" pos:end="943:52"><expr pos:start="943:21" pos:end="943:51"><call pos:start="943:21" pos:end="943:51"><name pos:start="943:21" pos:end="943:35">tcg_gen_sub_i32</name><argument_list pos:start="943:36" pos:end="943:51">(<argument pos:start="943:37" pos:end="943:39"><expr pos:start="943:37" pos:end="943:39"><name pos:start="943:37" pos:end="943:39">tmp</name></expr></argument>, <argument pos:start="943:42" pos:end="943:44"><expr pos:start="943:42" pos:end="943:44"><name pos:start="943:42" pos:end="943:44">tmp</name></expr></argument>, <argument pos:start="943:47" pos:end="943:50"><expr pos:start="943:47" pos:end="943:50"><name pos:start="943:47" pos:end="943:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="947:17" pos:end="947:46"><expr pos:start="947:17" pos:end="947:45"><call pos:start="947:17" pos:end="947:45"><name pos:start="947:17" pos:end="947:28">store_reg_bx</name><argument_list pos:start="947:29" pos:end="947:45">(<argument pos:start="947:30" pos:end="947:32"><expr pos:start="947:30" pos:end="947:32"><name pos:start="947:30" pos:end="947:32">env</name></expr></argument>, <argument pos:start="947:35" pos:end="947:35"><expr pos:start="947:35" pos:end="947:35"><name pos:start="947:35" pos:end="947:35">s</name></expr></argument>, <argument pos:start="947:38" pos:end="947:39"><expr pos:start="947:38" pos:end="947:39"><name pos:start="947:38" pos:end="947:39">rd</name></expr></argument>, <argument pos:start="947:42" pos:end="947:44"><expr pos:start="947:42" pos:end="947:44"><name pos:start="947:42" pos:end="947:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="951:13" pos:end="951:18">break;</break>

        <case pos:start="953:9" pos:end="953:18">case <expr pos:start="953:14" pos:end="953:17"><literal type="number" pos:start="953:14" pos:end="953:17">0x03</literal></expr>:</case>

            <if_stmt pos:start="955:13" pos:end="963:13"><if pos:start="955:13" pos:end="959:13">if <condition pos:start="955:16" pos:end="955:23">(<expr pos:start="955:17" pos:end="955:22"><name pos:start="955:17" pos:end="955:22">set_cc</name></expr>)</condition> <block pos:start="955:25" pos:end="959:13">{<block_content pos:start="957:17" pos:end="957:50">

                <expr_stmt pos:start="957:17" pos:end="957:50"><expr pos:start="957:17" pos:end="957:49"><call pos:start="957:17" pos:end="957:49"><name pos:start="957:17" pos:end="957:33">gen_helper_sub_cc</name><argument_list pos:start="957:34" pos:end="957:49">(<argument pos:start="957:35" pos:end="957:37"><expr pos:start="957:35" pos:end="957:37"><name pos:start="957:35" pos:end="957:37">tmp</name></expr></argument>, <argument pos:start="957:40" pos:end="957:43"><expr pos:start="957:40" pos:end="957:43"><name pos:start="957:40" pos:end="957:43">tmp2</name></expr></argument>, <argument pos:start="957:46" pos:end="957:48"><expr pos:start="957:46" pos:end="957:48"><name pos:start="957:46" pos:end="957:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="959:15" pos:end="963:13">else <block pos:start="959:20" pos:end="963:13">{<block_content pos:start="961:17" pos:end="961:48">

                <expr_stmt pos:start="961:17" pos:end="961:48"><expr pos:start="961:17" pos:end="961:47"><call pos:start="961:17" pos:end="961:47"><name pos:start="961:17" pos:end="961:31">tcg_gen_sub_i32</name><argument_list pos:start="961:32" pos:end="961:47">(<argument pos:start="961:33" pos:end="961:35"><expr pos:start="961:33" pos:end="961:35"><name pos:start="961:33" pos:end="961:35">tmp</name></expr></argument>, <argument pos:start="961:38" pos:end="961:41"><expr pos:start="961:38" pos:end="961:41"><name pos:start="961:38" pos:end="961:41">tmp2</name></expr></argument>, <argument pos:start="961:44" pos:end="961:46"><expr pos:start="961:44" pos:end="961:46"><name pos:start="961:44" pos:end="961:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="965:13" pos:end="965:42"><expr pos:start="965:13" pos:end="965:41"><call pos:start="965:13" pos:end="965:41"><name pos:start="965:13" pos:end="965:24">store_reg_bx</name><argument_list pos:start="965:25" pos:end="965:41">(<argument pos:start="965:26" pos:end="965:28"><expr pos:start="965:26" pos:end="965:28"><name pos:start="965:26" pos:end="965:28">env</name></expr></argument>, <argument pos:start="965:31" pos:end="965:31"><expr pos:start="965:31" pos:end="965:31"><name pos:start="965:31" pos:end="965:31">s</name></expr></argument>, <argument pos:start="965:34" pos:end="965:35"><expr pos:start="965:34" pos:end="965:35"><name pos:start="965:34" pos:end="965:35">rd</name></expr></argument>, <argument pos:start="965:38" pos:end="965:40"><expr pos:start="965:38" pos:end="965:40"><name pos:start="965:38" pos:end="965:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="967:13" pos:end="967:18">break;</break>

        <case pos:start="969:9" pos:end="969:18">case <expr pos:start="969:14" pos:end="969:17"><literal type="number" pos:start="969:14" pos:end="969:17">0x04</literal></expr>:</case>

            <if_stmt pos:start="971:13" pos:end="979:13"><if pos:start="971:13" pos:end="975:13">if <condition pos:start="971:16" pos:end="971:23">(<expr pos:start="971:17" pos:end="971:22"><name pos:start="971:17" pos:end="971:22">set_cc</name></expr>)</condition> <block pos:start="971:25" pos:end="975:13">{<block_content pos:start="973:17" pos:end="973:50">

                <expr_stmt pos:start="973:17" pos:end="973:50"><expr pos:start="973:17" pos:end="973:49"><call pos:start="973:17" pos:end="973:49"><name pos:start="973:17" pos:end="973:33">gen_helper_add_cc</name><argument_list pos:start="973:34" pos:end="973:49">(<argument pos:start="973:35" pos:end="973:37"><expr pos:start="973:35" pos:end="973:37"><name pos:start="973:35" pos:end="973:37">tmp</name></expr></argument>, <argument pos:start="973:40" pos:end="973:42"><expr pos:start="973:40" pos:end="973:42"><name pos:start="973:40" pos:end="973:42">tmp</name></expr></argument>, <argument pos:start="973:45" pos:end="973:48"><expr pos:start="973:45" pos:end="973:48"><name pos:start="973:45" pos:end="973:48">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="975:15" pos:end="979:13">else <block pos:start="975:20" pos:end="979:13">{<block_content pos:start="977:17" pos:end="977:48">

                <expr_stmt pos:start="977:17" pos:end="977:48"><expr pos:start="977:17" pos:end="977:47"><call pos:start="977:17" pos:end="977:47"><name pos:start="977:17" pos:end="977:31">tcg_gen_add_i32</name><argument_list pos:start="977:32" pos:end="977:47">(<argument pos:start="977:33" pos:end="977:35"><expr pos:start="977:33" pos:end="977:35"><name pos:start="977:33" pos:end="977:35">tmp</name></expr></argument>, <argument pos:start="977:38" pos:end="977:40"><expr pos:start="977:38" pos:end="977:40"><name pos:start="977:38" pos:end="977:40">tmp</name></expr></argument>, <argument pos:start="977:43" pos:end="977:46"><expr pos:start="977:43" pos:end="977:46"><name pos:start="977:43" pos:end="977:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="981:13" pos:end="981:42"><expr pos:start="981:13" pos:end="981:41"><call pos:start="981:13" pos:end="981:41"><name pos:start="981:13" pos:end="981:24">store_reg_bx</name><argument_list pos:start="981:25" pos:end="981:41">(<argument pos:start="981:26" pos:end="981:28"><expr pos:start="981:26" pos:end="981:28"><name pos:start="981:26" pos:end="981:28">env</name></expr></argument>, <argument pos:start="981:31" pos:end="981:31"><expr pos:start="981:31" pos:end="981:31"><name pos:start="981:31" pos:end="981:31">s</name></expr></argument>, <argument pos:start="981:34" pos:end="981:35"><expr pos:start="981:34" pos:end="981:35"><name pos:start="981:34" pos:end="981:35">rd</name></expr></argument>, <argument pos:start="981:38" pos:end="981:40"><expr pos:start="981:38" pos:end="981:40"><name pos:start="981:38" pos:end="981:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="983:13" pos:end="983:18">break;</break>

        <case pos:start="985:9" pos:end="985:18">case <expr pos:start="985:14" pos:end="985:17"><literal type="number" pos:start="985:14" pos:end="985:17">0x05</literal></expr>:</case>

            <if_stmt pos:start="987:13" pos:end="995:13"><if pos:start="987:13" pos:end="991:13">if <condition pos:start="987:16" pos:end="987:23">(<expr pos:start="987:17" pos:end="987:22"><name pos:start="987:17" pos:end="987:22">set_cc</name></expr>)</condition> <block pos:start="987:25" pos:end="991:13">{<block_content pos:start="989:17" pos:end="989:50">

                <expr_stmt pos:start="989:17" pos:end="989:50"><expr pos:start="989:17" pos:end="989:49"><call pos:start="989:17" pos:end="989:49"><name pos:start="989:17" pos:end="989:33">gen_helper_adc_cc</name><argument_list pos:start="989:34" pos:end="989:49">(<argument pos:start="989:35" pos:end="989:37"><expr pos:start="989:35" pos:end="989:37"><name pos:start="989:35" pos:end="989:37">tmp</name></expr></argument>, <argument pos:start="989:40" pos:end="989:42"><expr pos:start="989:40" pos:end="989:42"><name pos:start="989:40" pos:end="989:42">tmp</name></expr></argument>, <argument pos:start="989:45" pos:end="989:48"><expr pos:start="989:45" pos:end="989:48"><name pos:start="989:45" pos:end="989:48">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="991:15" pos:end="995:13">else <block pos:start="991:20" pos:end="995:13">{<block_content pos:start="993:17" pos:end="993:46">

                <expr_stmt pos:start="993:17" pos:end="993:46"><expr pos:start="993:17" pos:end="993:45"><call pos:start="993:17" pos:end="993:45"><name pos:start="993:17" pos:end="993:29">gen_add_carry</name><argument_list pos:start="993:30" pos:end="993:45">(<argument pos:start="993:31" pos:end="993:33"><expr pos:start="993:31" pos:end="993:33"><name pos:start="993:31" pos:end="993:33">tmp</name></expr></argument>, <argument pos:start="993:36" pos:end="993:38"><expr pos:start="993:36" pos:end="993:38"><name pos:start="993:36" pos:end="993:38">tmp</name></expr></argument>, <argument pos:start="993:41" pos:end="993:44"><expr pos:start="993:41" pos:end="993:44"><name pos:start="993:41" pos:end="993:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="997:13" pos:end="997:42"><expr pos:start="997:13" pos:end="997:41"><call pos:start="997:13" pos:end="997:41"><name pos:start="997:13" pos:end="997:24">store_reg_bx</name><argument_list pos:start="997:25" pos:end="997:41">(<argument pos:start="997:26" pos:end="997:28"><expr pos:start="997:26" pos:end="997:28"><name pos:start="997:26" pos:end="997:28">env</name></expr></argument>, <argument pos:start="997:31" pos:end="997:31"><expr pos:start="997:31" pos:end="997:31"><name pos:start="997:31" pos:end="997:31">s</name></expr></argument>, <argument pos:start="997:34" pos:end="997:35"><expr pos:start="997:34" pos:end="997:35"><name pos:start="997:34" pos:end="997:35">rd</name></expr></argument>, <argument pos:start="997:38" pos:end="997:40"><expr pos:start="997:38" pos:end="997:40"><name pos:start="997:38" pos:end="997:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="999:13" pos:end="999:18">break;</break>

        <case pos:start="1001:9" pos:end="1001:18">case <expr pos:start="1001:14" pos:end="1001:17"><literal type="number" pos:start="1001:14" pos:end="1001:17">0x06</literal></expr>:</case>

            <if_stmt pos:start="1003:13" pos:end="1011:13"><if pos:start="1003:13" pos:end="1007:13">if <condition pos:start="1003:16" pos:end="1003:23">(<expr pos:start="1003:17" pos:end="1003:22"><name pos:start="1003:17" pos:end="1003:22">set_cc</name></expr>)</condition> <block pos:start="1003:25" pos:end="1007:13">{<block_content pos:start="1005:17" pos:end="1005:50">

                <expr_stmt pos:start="1005:17" pos:end="1005:50"><expr pos:start="1005:17" pos:end="1005:49"><call pos:start="1005:17" pos:end="1005:49"><name pos:start="1005:17" pos:end="1005:33">gen_helper_sbc_cc</name><argument_list pos:start="1005:34" pos:end="1005:49">(<argument pos:start="1005:35" pos:end="1005:37"><expr pos:start="1005:35" pos:end="1005:37"><name pos:start="1005:35" pos:end="1005:37">tmp</name></expr></argument>, <argument pos:start="1005:40" pos:end="1005:42"><expr pos:start="1005:40" pos:end="1005:42"><name pos:start="1005:40" pos:end="1005:42">tmp</name></expr></argument>, <argument pos:start="1005:45" pos:end="1005:48"><expr pos:start="1005:45" pos:end="1005:48"><name pos:start="1005:45" pos:end="1005:48">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1007:15" pos:end="1011:13">else <block pos:start="1007:20" pos:end="1011:13">{<block_content pos:start="1009:17" pos:end="1009:46">

                <expr_stmt pos:start="1009:17" pos:end="1009:46"><expr pos:start="1009:17" pos:end="1009:45"><call pos:start="1009:17" pos:end="1009:45"><name pos:start="1009:17" pos:end="1009:29">gen_sub_carry</name><argument_list pos:start="1009:30" pos:end="1009:45">(<argument pos:start="1009:31" pos:end="1009:33"><expr pos:start="1009:31" pos:end="1009:33"><name pos:start="1009:31" pos:end="1009:33">tmp</name></expr></argument>, <argument pos:start="1009:36" pos:end="1009:38"><expr pos:start="1009:36" pos:end="1009:38"><name pos:start="1009:36" pos:end="1009:38">tmp</name></expr></argument>, <argument pos:start="1009:41" pos:end="1009:44"><expr pos:start="1009:41" pos:end="1009:44"><name pos:start="1009:41" pos:end="1009:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1013:13" pos:end="1013:42"><expr pos:start="1013:13" pos:end="1013:41"><call pos:start="1013:13" pos:end="1013:41"><name pos:start="1013:13" pos:end="1013:24">store_reg_bx</name><argument_list pos:start="1013:25" pos:end="1013:41">(<argument pos:start="1013:26" pos:end="1013:28"><expr pos:start="1013:26" pos:end="1013:28"><name pos:start="1013:26" pos:end="1013:28">env</name></expr></argument>, <argument pos:start="1013:31" pos:end="1013:31"><expr pos:start="1013:31" pos:end="1013:31"><name pos:start="1013:31" pos:end="1013:31">s</name></expr></argument>, <argument pos:start="1013:34" pos:end="1013:35"><expr pos:start="1013:34" pos:end="1013:35"><name pos:start="1013:34" pos:end="1013:35">rd</name></expr></argument>, <argument pos:start="1013:38" pos:end="1013:40"><expr pos:start="1013:38" pos:end="1013:40"><name pos:start="1013:38" pos:end="1013:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1015:13" pos:end="1015:18">break;</break>

        <case pos:start="1017:9" pos:end="1017:18">case <expr pos:start="1017:14" pos:end="1017:17"><literal type="number" pos:start="1017:14" pos:end="1017:17">0x07</literal></expr>:</case>

            <if_stmt pos:start="1019:13" pos:end="1027:13"><if pos:start="1019:13" pos:end="1023:13">if <condition pos:start="1019:16" pos:end="1019:23">(<expr pos:start="1019:17" pos:end="1019:22"><name pos:start="1019:17" pos:end="1019:22">set_cc</name></expr>)</condition> <block pos:start="1019:25" pos:end="1023:13">{<block_content pos:start="1021:17" pos:end="1021:50">

                <expr_stmt pos:start="1021:17" pos:end="1021:50"><expr pos:start="1021:17" pos:end="1021:49"><call pos:start="1021:17" pos:end="1021:49"><name pos:start="1021:17" pos:end="1021:33">gen_helper_sbc_cc</name><argument_list pos:start="1021:34" pos:end="1021:49">(<argument pos:start="1021:35" pos:end="1021:37"><expr pos:start="1021:35" pos:end="1021:37"><name pos:start="1021:35" pos:end="1021:37">tmp</name></expr></argument>, <argument pos:start="1021:40" pos:end="1021:43"><expr pos:start="1021:40" pos:end="1021:43"><name pos:start="1021:40" pos:end="1021:43">tmp2</name></expr></argument>, <argument pos:start="1021:46" pos:end="1021:48"><expr pos:start="1021:46" pos:end="1021:48"><name pos:start="1021:46" pos:end="1021:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1023:15" pos:end="1027:13">else <block pos:start="1023:20" pos:end="1027:13">{<block_content pos:start="1025:17" pos:end="1025:46">

                <expr_stmt pos:start="1025:17" pos:end="1025:46"><expr pos:start="1025:17" pos:end="1025:45"><call pos:start="1025:17" pos:end="1025:45"><name pos:start="1025:17" pos:end="1025:29">gen_sub_carry</name><argument_list pos:start="1025:30" pos:end="1025:45">(<argument pos:start="1025:31" pos:end="1025:33"><expr pos:start="1025:31" pos:end="1025:33"><name pos:start="1025:31" pos:end="1025:33">tmp</name></expr></argument>, <argument pos:start="1025:36" pos:end="1025:39"><expr pos:start="1025:36" pos:end="1025:39"><name pos:start="1025:36" pos:end="1025:39">tmp2</name></expr></argument>, <argument pos:start="1025:42" pos:end="1025:44"><expr pos:start="1025:42" pos:end="1025:44"><name pos:start="1025:42" pos:end="1025:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="1029:13" pos:end="1029:42"><expr pos:start="1029:13" pos:end="1029:41"><call pos:start="1029:13" pos:end="1029:41"><name pos:start="1029:13" pos:end="1029:24">store_reg_bx</name><argument_list pos:start="1029:25" pos:end="1029:41">(<argument pos:start="1029:26" pos:end="1029:28"><expr pos:start="1029:26" pos:end="1029:28"><name pos:start="1029:26" pos:end="1029:28">env</name></expr></argument>, <argument pos:start="1029:31" pos:end="1029:31"><expr pos:start="1029:31" pos:end="1029:31"><name pos:start="1029:31" pos:end="1029:31">s</name></expr></argument>, <argument pos:start="1029:34" pos:end="1029:35"><expr pos:start="1029:34" pos:end="1029:35"><name pos:start="1029:34" pos:end="1029:35">rd</name></expr></argument>, <argument pos:start="1029:38" pos:end="1029:40"><expr pos:start="1029:38" pos:end="1029:40"><name pos:start="1029:38" pos:end="1029:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1031:13" pos:end="1031:18">break;</break>

        <case pos:start="1033:9" pos:end="1033:18">case <expr pos:start="1033:14" pos:end="1033:17"><literal type="number" pos:start="1033:14" pos:end="1033:17">0x08</literal></expr>:</case>

            <if_stmt pos:start="1035:13" pos:end="1041:13"><if pos:start="1035:13" pos:end="1041:13">if <condition pos:start="1035:16" pos:end="1035:23">(<expr pos:start="1035:17" pos:end="1035:22"><name pos:start="1035:17" pos:end="1035:22">set_cc</name></expr>)</condition> <block pos:start="1035:25" pos:end="1041:13">{<block_content pos:start="1037:17" pos:end="1039:34">

                <expr_stmt pos:start="1037:17" pos:end="1037:48"><expr pos:start="1037:17" pos:end="1037:47"><call pos:start="1037:17" pos:end="1037:47"><name pos:start="1037:17" pos:end="1037:31">tcg_gen_and_i32</name><argument_list pos:start="1037:32" pos:end="1037:47">(<argument pos:start="1037:33" pos:end="1037:35"><expr pos:start="1037:33" pos:end="1037:35"><name pos:start="1037:33" pos:end="1037:35">tmp</name></expr></argument>, <argument pos:start="1037:38" pos:end="1037:40"><expr pos:start="1037:38" pos:end="1037:40"><name pos:start="1037:38" pos:end="1037:40">tmp</name></expr></argument>, <argument pos:start="1037:43" pos:end="1037:46"><expr pos:start="1037:43" pos:end="1037:46"><name pos:start="1037:43" pos:end="1037:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1039:17" pos:end="1039:34"><expr pos:start="1039:17" pos:end="1039:33"><call pos:start="1039:17" pos:end="1039:33"><name pos:start="1039:17" pos:end="1039:28">gen_logic_CC</name><argument_list pos:start="1039:29" pos:end="1039:33">(<argument pos:start="1039:30" pos:end="1039:32"><expr pos:start="1039:30" pos:end="1039:32"><name pos:start="1039:30" pos:end="1039:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1043:13" pos:end="1043:35"><expr pos:start="1043:13" pos:end="1043:34"><call pos:start="1043:13" pos:end="1043:34"><name pos:start="1043:13" pos:end="1043:29">tcg_temp_free_i32</name><argument_list pos:start="1043:30" pos:end="1043:34">(<argument pos:start="1043:31" pos:end="1043:33"><expr pos:start="1043:31" pos:end="1043:33"><name pos:start="1043:31" pos:end="1043:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1045:13" pos:end="1045:18">break;</break>

        <case pos:start="1047:9" pos:end="1047:18">case <expr pos:start="1047:14" pos:end="1047:17"><literal type="number" pos:start="1047:14" pos:end="1047:17">0x09</literal></expr>:</case>

            <if_stmt pos:start="1049:13" pos:end="1055:13"><if pos:start="1049:13" pos:end="1055:13">if <condition pos:start="1049:16" pos:end="1049:23">(<expr pos:start="1049:17" pos:end="1049:22"><name pos:start="1049:17" pos:end="1049:22">set_cc</name></expr>)</condition> <block pos:start="1049:25" pos:end="1055:13">{<block_content pos:start="1051:17" pos:end="1053:34">

                <expr_stmt pos:start="1051:17" pos:end="1051:48"><expr pos:start="1051:17" pos:end="1051:47"><call pos:start="1051:17" pos:end="1051:47"><name pos:start="1051:17" pos:end="1051:31">tcg_gen_xor_i32</name><argument_list pos:start="1051:32" pos:end="1051:47">(<argument pos:start="1051:33" pos:end="1051:35"><expr pos:start="1051:33" pos:end="1051:35"><name pos:start="1051:33" pos:end="1051:35">tmp</name></expr></argument>, <argument pos:start="1051:38" pos:end="1051:40"><expr pos:start="1051:38" pos:end="1051:40"><name pos:start="1051:38" pos:end="1051:40">tmp</name></expr></argument>, <argument pos:start="1051:43" pos:end="1051:46"><expr pos:start="1051:43" pos:end="1051:46"><name pos:start="1051:43" pos:end="1051:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1053:17" pos:end="1053:34"><expr pos:start="1053:17" pos:end="1053:33"><call pos:start="1053:17" pos:end="1053:33"><name pos:start="1053:17" pos:end="1053:28">gen_logic_CC</name><argument_list pos:start="1053:29" pos:end="1053:33">(<argument pos:start="1053:30" pos:end="1053:32"><expr pos:start="1053:30" pos:end="1053:32"><name pos:start="1053:30" pos:end="1053:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1057:13" pos:end="1057:35"><expr pos:start="1057:13" pos:end="1057:34"><call pos:start="1057:13" pos:end="1057:34"><name pos:start="1057:13" pos:end="1057:29">tcg_temp_free_i32</name><argument_list pos:start="1057:30" pos:end="1057:34">(<argument pos:start="1057:31" pos:end="1057:33"><expr pos:start="1057:31" pos:end="1057:33"><name pos:start="1057:31" pos:end="1057:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1059:13" pos:end="1059:18">break;</break>

        <case pos:start="1061:9" pos:end="1061:18">case <expr pos:start="1061:14" pos:end="1061:17"><literal type="number" pos:start="1061:14" pos:end="1061:17">0x0a</literal></expr>:</case>

            <if_stmt pos:start="1063:13" pos:end="1067:13"><if pos:start="1063:13" pos:end="1067:13">if <condition pos:start="1063:16" pos:end="1063:23">(<expr pos:start="1063:17" pos:end="1063:22"><name pos:start="1063:17" pos:end="1063:22">set_cc</name></expr>)</condition> <block pos:start="1063:25" pos:end="1067:13">{<block_content pos:start="1065:17" pos:end="1065:50">

                <expr_stmt pos:start="1065:17" pos:end="1065:50"><expr pos:start="1065:17" pos:end="1065:49"><call pos:start="1065:17" pos:end="1065:49"><name pos:start="1065:17" pos:end="1065:33">gen_helper_sub_cc</name><argument_list pos:start="1065:34" pos:end="1065:49">(<argument pos:start="1065:35" pos:end="1065:37"><expr pos:start="1065:35" pos:end="1065:37"><name pos:start="1065:35" pos:end="1065:37">tmp</name></expr></argument>, <argument pos:start="1065:40" pos:end="1065:42"><expr pos:start="1065:40" pos:end="1065:42"><name pos:start="1065:40" pos:end="1065:42">tmp</name></expr></argument>, <argument pos:start="1065:45" pos:end="1065:48"><expr pos:start="1065:45" pos:end="1065:48"><name pos:start="1065:45" pos:end="1065:48">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1069:13" pos:end="1069:35"><expr pos:start="1069:13" pos:end="1069:34"><call pos:start="1069:13" pos:end="1069:34"><name pos:start="1069:13" pos:end="1069:29">tcg_temp_free_i32</name><argument_list pos:start="1069:30" pos:end="1069:34">(<argument pos:start="1069:31" pos:end="1069:33"><expr pos:start="1069:31" pos:end="1069:33"><name pos:start="1069:31" pos:end="1069:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1071:13" pos:end="1071:18">break;</break>

        <case pos:start="1073:9" pos:end="1073:18">case <expr pos:start="1073:14" pos:end="1073:17"><literal type="number" pos:start="1073:14" pos:end="1073:17">0x0b</literal></expr>:</case>

            <if_stmt pos:start="1075:13" pos:end="1079:13"><if pos:start="1075:13" pos:end="1079:13">if <condition pos:start="1075:16" pos:end="1075:23">(<expr pos:start="1075:17" pos:end="1075:22"><name pos:start="1075:17" pos:end="1075:22">set_cc</name></expr>)</condition> <block pos:start="1075:25" pos:end="1079:13">{<block_content pos:start="1077:17" pos:end="1077:50">

                <expr_stmt pos:start="1077:17" pos:end="1077:50"><expr pos:start="1077:17" pos:end="1077:49"><call pos:start="1077:17" pos:end="1077:49"><name pos:start="1077:17" pos:end="1077:33">gen_helper_add_cc</name><argument_list pos:start="1077:34" pos:end="1077:49">(<argument pos:start="1077:35" pos:end="1077:37"><expr pos:start="1077:35" pos:end="1077:37"><name pos:start="1077:35" pos:end="1077:37">tmp</name></expr></argument>, <argument pos:start="1077:40" pos:end="1077:42"><expr pos:start="1077:40" pos:end="1077:42"><name pos:start="1077:40" pos:end="1077:42">tmp</name></expr></argument>, <argument pos:start="1077:45" pos:end="1077:48"><expr pos:start="1077:45" pos:end="1077:48"><name pos:start="1077:45" pos:end="1077:48">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1081:13" pos:end="1081:35"><expr pos:start="1081:13" pos:end="1081:34"><call pos:start="1081:13" pos:end="1081:34"><name pos:start="1081:13" pos:end="1081:29">tcg_temp_free_i32</name><argument_list pos:start="1081:30" pos:end="1081:34">(<argument pos:start="1081:31" pos:end="1081:33"><expr pos:start="1081:31" pos:end="1081:33"><name pos:start="1081:31" pos:end="1081:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1083:13" pos:end="1083:18">break;</break>

        <case pos:start="1085:9" pos:end="1085:18">case <expr pos:start="1085:14" pos:end="1085:17"><literal type="number" pos:start="1085:14" pos:end="1085:17">0x0c</literal></expr>:</case>

            <expr_stmt pos:start="1087:13" pos:end="1087:43"><expr pos:start="1087:13" pos:end="1087:42"><call pos:start="1087:13" pos:end="1087:42"><name pos:start="1087:13" pos:end="1087:26">tcg_gen_or_i32</name><argument_list pos:start="1087:27" pos:end="1087:42">(<argument pos:start="1087:28" pos:end="1087:30"><expr pos:start="1087:28" pos:end="1087:30"><name pos:start="1087:28" pos:end="1087:30">tmp</name></expr></argument>, <argument pos:start="1087:33" pos:end="1087:35"><expr pos:start="1087:33" pos:end="1087:35"><name pos:start="1087:33" pos:end="1087:35">tmp</name></expr></argument>, <argument pos:start="1087:38" pos:end="1087:41"><expr pos:start="1087:38" pos:end="1087:41"><name pos:start="1087:38" pos:end="1087:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1089:13" pos:end="1093:13"><if pos:start="1089:13" pos:end="1093:13">if <condition pos:start="1089:16" pos:end="1089:25">(<expr pos:start="1089:17" pos:end="1089:24"><name pos:start="1089:17" pos:end="1089:24">logic_cc</name></expr>)</condition> <block pos:start="1089:27" pos:end="1093:13">{<block_content pos:start="1091:17" pos:end="1091:34">

                <expr_stmt pos:start="1091:17" pos:end="1091:34"><expr pos:start="1091:17" pos:end="1091:33"><call pos:start="1091:17" pos:end="1091:33"><name pos:start="1091:17" pos:end="1091:28">gen_logic_CC</name><argument_list pos:start="1091:29" pos:end="1091:33">(<argument pos:start="1091:30" pos:end="1091:32"><expr pos:start="1091:30" pos:end="1091:32"><name pos:start="1091:30" pos:end="1091:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1095:13" pos:end="1095:42"><expr pos:start="1095:13" pos:end="1095:41"><call pos:start="1095:13" pos:end="1095:41"><name pos:start="1095:13" pos:end="1095:24">store_reg_bx</name><argument_list pos:start="1095:25" pos:end="1095:41">(<argument pos:start="1095:26" pos:end="1095:28"><expr pos:start="1095:26" pos:end="1095:28"><name pos:start="1095:26" pos:end="1095:28">env</name></expr></argument>, <argument pos:start="1095:31" pos:end="1095:31"><expr pos:start="1095:31" pos:end="1095:31"><name pos:start="1095:31" pos:end="1095:31">s</name></expr></argument>, <argument pos:start="1095:34" pos:end="1095:35"><expr pos:start="1095:34" pos:end="1095:35"><name pos:start="1095:34" pos:end="1095:35">rd</name></expr></argument>, <argument pos:start="1095:38" pos:end="1095:40"><expr pos:start="1095:38" pos:end="1095:40"><name pos:start="1095:38" pos:end="1095:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1097:13" pos:end="1097:18">break;</break>

        <case pos:start="1099:9" pos:end="1099:18">case <expr pos:start="1099:14" pos:end="1099:17"><literal type="number" pos:start="1099:14" pos:end="1099:17">0x0d</literal></expr>:</case>

            <if_stmt pos:start="1101:13" pos:end="1123:13"><if pos:start="1101:13" pos:end="1113:13">if <condition pos:start="1101:16" pos:end="1101:37">(<expr pos:start="1101:17" pos:end="1101:36"><name pos:start="1101:17" pos:end="1101:24">logic_cc</name> <operator pos:start="1101:26" pos:end="1101:27">&amp;&amp;</operator> <name pos:start="1101:29" pos:end="1101:30">rd</name> <operator pos:start="1101:32" pos:end="1101:33">==</operator> <literal type="number" pos:start="1101:35" pos:end="1101:36">15</literal></expr>)</condition> <block pos:start="1101:39" pos:end="1113:13">{<block_content pos:start="1105:17" pos:end="1111:46">

                <comment type="block" pos:start="1103:17" pos:end="1103:66">/* MOVS r15, ... is used for exception return.  */</comment>

                <if_stmt pos:start="1105:17" pos:end="1109:17"><if pos:start="1105:17" pos:end="1109:17">if <condition pos:start="1105:20" pos:end="1105:31">(<expr pos:start="1105:21" pos:end="1105:30"><call pos:start="1105:21" pos:end="1105:30"><name pos:start="1105:21" pos:end="1105:27">IS_USER</name><argument_list pos:start="1105:28" pos:end="1105:30">(<argument pos:start="1105:29" pos:end="1105:29"><expr pos:start="1105:29" pos:end="1105:29"><name pos:start="1105:29" pos:end="1105:29">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1105:33" pos:end="1109:17">{<block_content pos:start="1107:21" pos:end="1107:36">

                    <goto pos:start="1107:21" pos:end="1107:36">goto <name pos:start="1107:26" pos:end="1107:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1111:17" pos:end="1111:46"><expr pos:start="1111:17" pos:end="1111:45"><call pos:start="1111:17" pos:end="1111:45"><name pos:start="1111:17" pos:end="1111:36">gen_exception_return</name><argument_list pos:start="1111:37" pos:end="1111:45">(<argument pos:start="1111:38" pos:end="1111:38"><expr pos:start="1111:38" pos:end="1111:38"><name pos:start="1111:38" pos:end="1111:38">s</name></expr></argument>, <argument pos:start="1111:41" pos:end="1111:44"><expr pos:start="1111:41" pos:end="1111:44"><name pos:start="1111:41" pos:end="1111:44">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1113:15" pos:end="1123:13">else <block pos:start="1113:20" pos:end="1123:13">{<block_content pos:start="1115:17" pos:end="1121:47">

                <if_stmt pos:start="1115:17" pos:end="1119:17"><if pos:start="1115:17" pos:end="1119:17">if <condition pos:start="1115:20" pos:end="1115:29">(<expr pos:start="1115:21" pos:end="1115:28"><name pos:start="1115:21" pos:end="1115:28">logic_cc</name></expr>)</condition> <block pos:start="1115:31" pos:end="1119:17">{<block_content pos:start="1117:21" pos:end="1117:39">

                    <expr_stmt pos:start="1117:21" pos:end="1117:39"><expr pos:start="1117:21" pos:end="1117:38"><call pos:start="1117:21" pos:end="1117:38"><name pos:start="1117:21" pos:end="1117:32">gen_logic_CC</name><argument_list pos:start="1117:33" pos:end="1117:38">(<argument pos:start="1117:34" pos:end="1117:37"><expr pos:start="1117:34" pos:end="1117:37"><name pos:start="1117:34" pos:end="1117:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1121:17" pos:end="1121:47"><expr pos:start="1121:17" pos:end="1121:46"><call pos:start="1121:17" pos:end="1121:46"><name pos:start="1121:17" pos:end="1121:28">store_reg_bx</name><argument_list pos:start="1121:29" pos:end="1121:46">(<argument pos:start="1121:30" pos:end="1121:32"><expr pos:start="1121:30" pos:end="1121:32"><name pos:start="1121:30" pos:end="1121:32">env</name></expr></argument>, <argument pos:start="1121:35" pos:end="1121:35"><expr pos:start="1121:35" pos:end="1121:35"><name pos:start="1121:35" pos:end="1121:35">s</name></expr></argument>, <argument pos:start="1121:38" pos:end="1121:39"><expr pos:start="1121:38" pos:end="1121:39"><name pos:start="1121:38" pos:end="1121:39">rd</name></expr></argument>, <argument pos:start="1121:42" pos:end="1121:45"><expr pos:start="1121:42" pos:end="1121:45"><name pos:start="1121:42" pos:end="1121:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1125:13" pos:end="1125:18">break;</break>

        <case pos:start="1127:9" pos:end="1127:18">case <expr pos:start="1127:14" pos:end="1127:17"><literal type="number" pos:start="1127:14" pos:end="1127:17">0x0e</literal></expr>:</case>

            <expr_stmt pos:start="1129:13" pos:end="1129:45"><expr pos:start="1129:13" pos:end="1129:44"><call pos:start="1129:13" pos:end="1129:44"><name pos:start="1129:13" pos:end="1129:28">tcg_gen_andc_i32</name><argument_list pos:start="1129:29" pos:end="1129:44">(<argument pos:start="1129:30" pos:end="1129:32"><expr pos:start="1129:30" pos:end="1129:32"><name pos:start="1129:30" pos:end="1129:32">tmp</name></expr></argument>, <argument pos:start="1129:35" pos:end="1129:37"><expr pos:start="1129:35" pos:end="1129:37"><name pos:start="1129:35" pos:end="1129:37">tmp</name></expr></argument>, <argument pos:start="1129:40" pos:end="1129:43"><expr pos:start="1129:40" pos:end="1129:43"><name pos:start="1129:40" pos:end="1129:43">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1131:13" pos:end="1135:13"><if pos:start="1131:13" pos:end="1135:13">if <condition pos:start="1131:16" pos:end="1131:25">(<expr pos:start="1131:17" pos:end="1131:24"><name pos:start="1131:17" pos:end="1131:24">logic_cc</name></expr>)</condition> <block pos:start="1131:27" pos:end="1135:13">{<block_content pos:start="1133:17" pos:end="1133:34">

                <expr_stmt pos:start="1133:17" pos:end="1133:34"><expr pos:start="1133:17" pos:end="1133:33"><call pos:start="1133:17" pos:end="1133:33"><name pos:start="1133:17" pos:end="1133:28">gen_logic_CC</name><argument_list pos:start="1133:29" pos:end="1133:33">(<argument pos:start="1133:30" pos:end="1133:32"><expr pos:start="1133:30" pos:end="1133:32"><name pos:start="1133:30" pos:end="1133:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1137:13" pos:end="1137:42"><expr pos:start="1137:13" pos:end="1137:41"><call pos:start="1137:13" pos:end="1137:41"><name pos:start="1137:13" pos:end="1137:24">store_reg_bx</name><argument_list pos:start="1137:25" pos:end="1137:41">(<argument pos:start="1137:26" pos:end="1137:28"><expr pos:start="1137:26" pos:end="1137:28"><name pos:start="1137:26" pos:end="1137:28">env</name></expr></argument>, <argument pos:start="1137:31" pos:end="1137:31"><expr pos:start="1137:31" pos:end="1137:31"><name pos:start="1137:31" pos:end="1137:31">s</name></expr></argument>, <argument pos:start="1137:34" pos:end="1137:35"><expr pos:start="1137:34" pos:end="1137:35"><name pos:start="1137:34" pos:end="1137:35">rd</name></expr></argument>, <argument pos:start="1137:38" pos:end="1137:40"><expr pos:start="1137:38" pos:end="1137:40"><name pos:start="1137:38" pos:end="1137:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1139:13" pos:end="1139:18">break;</break>

        <default pos:start="1141:9" pos:end="1141:16">default:</default>

        <case pos:start="1143:9" pos:end="1143:18">case <expr pos:start="1143:14" pos:end="1143:17"><literal type="number" pos:start="1143:14" pos:end="1143:17">0x0f</literal></expr>:</case>

            <expr_stmt pos:start="1145:13" pos:end="1145:40"><expr pos:start="1145:13" pos:end="1145:39"><call pos:start="1145:13" pos:end="1145:39"><name pos:start="1145:13" pos:end="1145:27">tcg_gen_not_i32</name><argument_list pos:start="1145:28" pos:end="1145:39">(<argument pos:start="1145:29" pos:end="1145:32"><expr pos:start="1145:29" pos:end="1145:32"><name pos:start="1145:29" pos:end="1145:32">tmp2</name></expr></argument>, <argument pos:start="1145:35" pos:end="1145:38"><expr pos:start="1145:35" pos:end="1145:38"><name pos:start="1145:35" pos:end="1145:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1147:13" pos:end="1151:13"><if pos:start="1147:13" pos:end="1151:13">if <condition pos:start="1147:16" pos:end="1147:25">(<expr pos:start="1147:17" pos:end="1147:24"><name pos:start="1147:17" pos:end="1147:24">logic_cc</name></expr>)</condition> <block pos:start="1147:27" pos:end="1151:13">{<block_content pos:start="1149:17" pos:end="1149:35">

                <expr_stmt pos:start="1149:17" pos:end="1149:35"><expr pos:start="1149:17" pos:end="1149:34"><call pos:start="1149:17" pos:end="1149:34"><name pos:start="1149:17" pos:end="1149:28">gen_logic_CC</name><argument_list pos:start="1149:29" pos:end="1149:34">(<argument pos:start="1149:30" pos:end="1149:33"><expr pos:start="1149:30" pos:end="1149:33"><name pos:start="1149:30" pos:end="1149:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="1153:13" pos:end="1153:43"><expr pos:start="1153:13" pos:end="1153:42"><call pos:start="1153:13" pos:end="1153:42"><name pos:start="1153:13" pos:end="1153:24">store_reg_bx</name><argument_list pos:start="1153:25" pos:end="1153:42">(<argument pos:start="1153:26" pos:end="1153:28"><expr pos:start="1153:26" pos:end="1153:28"><name pos:start="1153:26" pos:end="1153:28">env</name></expr></argument>, <argument pos:start="1153:31" pos:end="1153:31"><expr pos:start="1153:31" pos:end="1153:31"><name pos:start="1153:31" pos:end="1153:31">s</name></expr></argument>, <argument pos:start="1153:34" pos:end="1153:35"><expr pos:start="1153:34" pos:end="1153:35"><name pos:start="1153:34" pos:end="1153:35">rd</name></expr></argument>, <argument pos:start="1153:38" pos:end="1153:41"><expr pos:start="1153:38" pos:end="1153:41"><name pos:start="1153:38" pos:end="1153:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1155:13" pos:end="1155:18">break;</break>

        </block_content>}</block></switch>

        <if_stmt pos:start="1159:9" pos:end="1163:9"><if pos:start="1159:9" pos:end="1163:9">if <condition pos:start="1159:12" pos:end="1159:39">(<expr pos:start="1159:13" pos:end="1159:38"><name pos:start="1159:13" pos:end="1159:15">op1</name> <operator pos:start="1159:17" pos:end="1159:18">!=</operator> <literal type="number" pos:start="1159:20" pos:end="1159:23">0x0f</literal> <operator pos:start="1159:25" pos:end="1159:26">&amp;&amp;</operator> <name pos:start="1159:28" pos:end="1159:30">op1</name> <operator pos:start="1159:32" pos:end="1159:33">!=</operator> <literal type="number" pos:start="1159:35" pos:end="1159:38">0x0d</literal></expr>)</condition> <block pos:start="1159:41" pos:end="1163:9">{<block_content pos:start="1161:13" pos:end="1161:36">

            <expr_stmt pos:start="1161:13" pos:end="1161:36"><expr pos:start="1161:13" pos:end="1161:35"><call pos:start="1161:13" pos:end="1161:35"><name pos:start="1161:13" pos:end="1161:29">tcg_temp_free_i32</name><argument_list pos:start="1161:30" pos:end="1161:35">(<argument pos:start="1161:31" pos:end="1161:34"><expr pos:start="1161:31" pos:end="1161:34"><name pos:start="1161:31" pos:end="1161:34">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="1165:7" pos:end="2499:5">else <block pos:start="1165:12" pos:end="2499:5">{<block_content pos:start="1169:9" pos:end="2497:9">

        <comment type="block" pos:start="1167:9" pos:end="1167:32">/* other instructions */</comment>

        <expr_stmt pos:start="1169:9" pos:end="1169:33"><expr pos:start="1169:9" pos:end="1169:32"><name pos:start="1169:9" pos:end="1169:11">op1</name> <operator pos:start="1169:13" pos:end="1169:13">=</operator> <operator pos:start="1169:15" pos:end="1169:15">(</operator><name pos:start="1169:16" pos:end="1169:19">insn</name> <operator pos:start="1169:21" pos:end="1169:22">&gt;&gt;</operator> <literal type="number" pos:start="1169:24" pos:end="1169:25">24</literal><operator pos:start="1169:26" pos:end="1169:26">)</operator> <operator pos:start="1169:28" pos:end="1169:28">&amp;</operator> <literal type="number" pos:start="1169:30" pos:end="1169:32">0xf</literal></expr>;</expr_stmt>

        <switch pos:start="1171:9" pos:end="2497:9">switch<condition pos:start="1171:15" pos:end="1171:19">(<expr pos:start="1171:16" pos:end="1171:18"><name pos:start="1171:16" pos:end="1171:18">op1</name></expr>)</condition> <block pos:start="1171:21" pos:end="2497:9">{<block_content pos:start="1173:9" pos:end="2495:18">

        <case pos:start="1173:9" pos:end="1173:17">case <expr pos:start="1173:14" pos:end="1173:16"><literal type="number" pos:start="1173:14" pos:end="1173:16">0x0</literal></expr>:</case>

        <case pos:start="1175:9" pos:end="1175:17">case <expr pos:start="1175:14" pos:end="1175:16"><literal type="number" pos:start="1175:14" pos:end="1175:16">0x1</literal></expr>:</case>

            <comment type="block" pos:start="1177:13" pos:end="1177:47">/* multiplies, extra load/stores */</comment>

            <expr_stmt pos:start="1179:13" pos:end="1179:33"><expr pos:start="1179:13" pos:end="1179:32"><name pos:start="1179:13" pos:end="1179:14">sh</name> <operator pos:start="1179:16" pos:end="1179:16">=</operator> <operator pos:start="1179:18" pos:end="1179:18">(</operator><name pos:start="1179:19" pos:end="1179:22">insn</name> <operator pos:start="1179:24" pos:end="1179:25">&gt;&gt;</operator> <literal type="number" pos:start="1179:27" pos:end="1179:27">5</literal><operator pos:start="1179:28" pos:end="1179:28">)</operator> <operator pos:start="1179:30" pos:end="1179:30">&amp;</operator> <literal type="number" pos:start="1179:32" pos:end="1179:32">3</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1181:13" pos:end="1583:13"><if pos:start="1181:13" pos:end="1445:13">if <condition pos:start="1181:16" pos:end="1181:24">(<expr pos:start="1181:17" pos:end="1181:23"><name pos:start="1181:17" pos:end="1181:18">sh</name> <operator pos:start="1181:20" pos:end="1181:21">==</operator> <literal type="number" pos:start="1181:23" pos:end="1181:23">0</literal></expr>)</condition> <block pos:start="1181:26" pos:end="1445:13">{<block_content pos:start="1183:17" pos:end="1443:17">

                <if_stmt pos:start="1183:17" pos:end="1443:17"><if pos:start="1183:17" pos:end="1307:17">if <condition pos:start="1183:20" pos:end="1183:31">(<expr pos:start="1183:21" pos:end="1183:30"><name pos:start="1183:21" pos:end="1183:23">op1</name> <operator pos:start="1183:25" pos:end="1183:26">==</operator> <literal type="number" pos:start="1183:28" pos:end="1183:30">0x0</literal></expr>)</condition> <block pos:start="1183:33" pos:end="1307:17">{<block_content pos:start="1185:21" pos:end="1305:21">

                    <expr_stmt pos:start="1185:21" pos:end="1185:44"><expr pos:start="1185:21" pos:end="1185:43"><name pos:start="1185:21" pos:end="1185:22">rd</name> <operator pos:start="1185:24" pos:end="1185:24">=</operator> <operator pos:start="1185:26" pos:end="1185:26">(</operator><name pos:start="1185:27" pos:end="1185:30">insn</name> <operator pos:start="1185:32" pos:end="1185:33">&gt;&gt;</operator> <literal type="number" pos:start="1185:35" pos:end="1185:36">16</literal><operator pos:start="1185:37" pos:end="1185:37">)</operator> <operator pos:start="1185:39" pos:end="1185:39">&amp;</operator> <literal type="number" pos:start="1185:41" pos:end="1185:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1187:21" pos:end="1187:44"><expr pos:start="1187:21" pos:end="1187:43"><name pos:start="1187:21" pos:end="1187:22">rn</name> <operator pos:start="1187:24" pos:end="1187:24">=</operator> <operator pos:start="1187:26" pos:end="1187:26">(</operator><name pos:start="1187:27" pos:end="1187:30">insn</name> <operator pos:start="1187:32" pos:end="1187:33">&gt;&gt;</operator> <literal type="number" pos:start="1187:35" pos:end="1187:36">12</literal><operator pos:start="1187:37" pos:end="1187:37">)</operator> <operator pos:start="1187:39" pos:end="1187:39">&amp;</operator> <literal type="number" pos:start="1187:41" pos:end="1187:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1189:21" pos:end="1189:43"><expr pos:start="1189:21" pos:end="1189:42"><name pos:start="1189:21" pos:end="1189:22">rs</name> <operator pos:start="1189:24" pos:end="1189:24">=</operator> <operator pos:start="1189:26" pos:end="1189:26">(</operator><name pos:start="1189:27" pos:end="1189:30">insn</name> <operator pos:start="1189:32" pos:end="1189:33">&gt;&gt;</operator> <literal type="number" pos:start="1189:35" pos:end="1189:35">8</literal><operator pos:start="1189:36" pos:end="1189:36">)</operator> <operator pos:start="1189:38" pos:end="1189:38">&amp;</operator> <literal type="number" pos:start="1189:40" pos:end="1189:42">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1191:21" pos:end="1191:38"><expr pos:start="1191:21" pos:end="1191:37"><name pos:start="1191:21" pos:end="1191:22">rm</name> <operator pos:start="1191:24" pos:end="1191:24">=</operator> <operator pos:start="1191:26" pos:end="1191:26">(</operator><name pos:start="1191:27" pos:end="1191:30">insn</name><operator pos:start="1191:31" pos:end="1191:31">)</operator> <operator pos:start="1191:33" pos:end="1191:33">&amp;</operator> <literal type="number" pos:start="1191:35" pos:end="1191:37">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1193:21" pos:end="1193:45"><expr pos:start="1193:21" pos:end="1193:44"><name pos:start="1193:21" pos:end="1193:23">op1</name> <operator pos:start="1193:25" pos:end="1193:25">=</operator> <operator pos:start="1193:27" pos:end="1193:27">(</operator><name pos:start="1193:28" pos:end="1193:31">insn</name> <operator pos:start="1193:33" pos:end="1193:34">&gt;&gt;</operator> <literal type="number" pos:start="1193:36" pos:end="1193:37">20</literal><operator pos:start="1193:38" pos:end="1193:38">)</operator> <operator pos:start="1193:40" pos:end="1193:40">&amp;</operator> <literal type="number" pos:start="1193:42" pos:end="1193:44">0xf</literal></expr>;</expr_stmt>

                    <switch pos:start="1195:21" pos:end="1305:21">switch <condition pos:start="1195:28" pos:end="1195:32">(<expr pos:start="1195:29" pos:end="1195:31"><name pos:start="1195:29" pos:end="1195:31">op1</name></expr>)</condition> <block pos:start="1195:34" pos:end="1305:21">{<block_content pos:start="1197:21" pos:end="1303:40">

                    <case pos:start="1197:21" pos:end="1197:27">case <expr pos:start="1197:26" pos:end="1197:26"><literal type="number" pos:start="1197:26" pos:end="1197:26">0</literal></expr>:</case> <case pos:start="1197:29" pos:end="1197:35">case <expr pos:start="1197:34" pos:end="1197:34"><literal type="number" pos:start="1197:34" pos:end="1197:34">1</literal></expr>:</case> <case pos:start="1197:37" pos:end="1197:43">case <expr pos:start="1197:42" pos:end="1197:42"><literal type="number" pos:start="1197:42" pos:end="1197:42">2</literal></expr>:</case> <case pos:start="1197:45" pos:end="1197:51">case <expr pos:start="1197:50" pos:end="1197:50"><literal type="number" pos:start="1197:50" pos:end="1197:50">3</literal></expr>:</case> <case pos:start="1197:53" pos:end="1197:59">case <expr pos:start="1197:58" pos:end="1197:58"><literal type="number" pos:start="1197:58" pos:end="1197:58">6</literal></expr>:</case>

                        <comment type="block" pos:start="1199:25" pos:end="1199:40">/* 32 bit mul */</comment>

                        <expr_stmt pos:start="1201:25" pos:end="1201:46"><expr pos:start="1201:25" pos:end="1201:45"><name pos:start="1201:25" pos:end="1201:27">tmp</name> <operator pos:start="1201:29" pos:end="1201:29">=</operator> <call pos:start="1201:31" pos:end="1201:45"><name pos:start="1201:31" pos:end="1201:38">load_reg</name><argument_list pos:start="1201:39" pos:end="1201:45">(<argument pos:start="1201:40" pos:end="1201:40"><expr pos:start="1201:40" pos:end="1201:40"><name pos:start="1201:40" pos:end="1201:40">s</name></expr></argument>, <argument pos:start="1201:43" pos:end="1201:44"><expr pos:start="1201:43" pos:end="1201:44"><name pos:start="1201:43" pos:end="1201:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1203:25" pos:end="1203:47"><expr pos:start="1203:25" pos:end="1203:46"><name pos:start="1203:25" pos:end="1203:28">tmp2</name> <operator pos:start="1203:30" pos:end="1203:30">=</operator> <call pos:start="1203:32" pos:end="1203:46"><name pos:start="1203:32" pos:end="1203:39">load_reg</name><argument_list pos:start="1203:40" pos:end="1203:46">(<argument pos:start="1203:41" pos:end="1203:41"><expr pos:start="1203:41" pos:end="1203:41"><name pos:start="1203:41" pos:end="1203:41">s</name></expr></argument>, <argument pos:start="1203:44" pos:end="1203:45"><expr pos:start="1203:44" pos:end="1203:45"><name pos:start="1203:44" pos:end="1203:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1205:25" pos:end="1205:56"><expr pos:start="1205:25" pos:end="1205:55"><call pos:start="1205:25" pos:end="1205:55"><name pos:start="1205:25" pos:end="1205:39">tcg_gen_mul_i32</name><argument_list pos:start="1205:40" pos:end="1205:55">(<argument pos:start="1205:41" pos:end="1205:43"><expr pos:start="1205:41" pos:end="1205:43"><name pos:start="1205:41" pos:end="1205:43">tmp</name></expr></argument>, <argument pos:start="1205:46" pos:end="1205:48"><expr pos:start="1205:46" pos:end="1205:48"><name pos:start="1205:46" pos:end="1205:48">tmp</name></expr></argument>, <argument pos:start="1205:51" pos:end="1205:54"><expr pos:start="1205:51" pos:end="1205:54"><name pos:start="1205:51" pos:end="1205:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1207:25" pos:end="1207:48"><expr pos:start="1207:25" pos:end="1207:47"><call pos:start="1207:25" pos:end="1207:47"><name pos:start="1207:25" pos:end="1207:41">tcg_temp_free_i32</name><argument_list pos:start="1207:42" pos:end="1207:47">(<argument pos:start="1207:43" pos:end="1207:46"><expr pos:start="1207:43" pos:end="1207:46"><name pos:start="1207:43" pos:end="1207:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1209:25" pos:end="1231:25"><if pos:start="1209:25" pos:end="1221:25">if <condition pos:start="1209:28" pos:end="1209:45">(<expr pos:start="1209:29" pos:end="1209:44"><name pos:start="1209:29" pos:end="1209:32">insn</name> <operator pos:start="1209:34" pos:end="1209:34">&amp;</operator> <operator pos:start="1209:36" pos:end="1209:36">(</operator><literal type="number" pos:start="1209:37" pos:end="1209:37">1</literal> <operator pos:start="1209:39" pos:end="1209:40">&lt;&lt;</operator> <literal type="number" pos:start="1209:42" pos:end="1209:43">22</literal><operator pos:start="1209:44" pos:end="1209:44">)</operator></expr>)</condition> <block pos:start="1209:47" pos:end="1221:25">{<block_content pos:start="1213:29" pos:end="1219:52">

                            <comment type="block" pos:start="1211:29" pos:end="1211:48">/* Subtract (mls) */</comment>

                            <expr_stmt pos:start="1213:29" pos:end="1213:38"><expr pos:start="1213:29" pos:end="1213:37"><call pos:start="1213:29" pos:end="1213:37"><name pos:start="1213:29" pos:end="1213:32">ARCH</name><argument_list pos:start="1213:33" pos:end="1213:37">(<argument pos:start="1213:34" pos:end="1213:36"><expr pos:start="1213:34" pos:end="1213:36"><literal type="number" pos:start="1213:34" pos:end="1213:36">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1215:29" pos:end="1215:51"><expr pos:start="1215:29" pos:end="1215:50"><name pos:start="1215:29" pos:end="1215:32">tmp2</name> <operator pos:start="1215:34" pos:end="1215:34">=</operator> <call pos:start="1215:36" pos:end="1215:50"><name pos:start="1215:36" pos:end="1215:43">load_reg</name><argument_list pos:start="1215:44" pos:end="1215:50">(<argument pos:start="1215:45" pos:end="1215:45"><expr pos:start="1215:45" pos:end="1215:45"><name pos:start="1215:45" pos:end="1215:45">s</name></expr></argument>, <argument pos:start="1215:48" pos:end="1215:49"><expr pos:start="1215:48" pos:end="1215:49"><name pos:start="1215:48" pos:end="1215:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1217:29" pos:end="1217:60"><expr pos:start="1217:29" pos:end="1217:59"><call pos:start="1217:29" pos:end="1217:59"><name pos:start="1217:29" pos:end="1217:43">tcg_gen_sub_i32</name><argument_list pos:start="1217:44" pos:end="1217:59">(<argument pos:start="1217:45" pos:end="1217:47"><expr pos:start="1217:45" pos:end="1217:47"><name pos:start="1217:45" pos:end="1217:47">tmp</name></expr></argument>, <argument pos:start="1217:50" pos:end="1217:53"><expr pos:start="1217:50" pos:end="1217:53"><name pos:start="1217:50" pos:end="1217:53">tmp2</name></expr></argument>, <argument pos:start="1217:56" pos:end="1217:58"><expr pos:start="1217:56" pos:end="1217:58"><name pos:start="1217:56" pos:end="1217:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1219:29" pos:end="1219:52"><expr pos:start="1219:29" pos:end="1219:51"><call pos:start="1219:29" pos:end="1219:51"><name pos:start="1219:29" pos:end="1219:45">tcg_temp_free_i32</name><argument_list pos:start="1219:46" pos:end="1219:51">(<argument pos:start="1219:47" pos:end="1219:50"><expr pos:start="1219:47" pos:end="1219:50"><name pos:start="1219:47" pos:end="1219:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <if type="elseif" pos:start="1221:27" pos:end="1231:25">else if <condition pos:start="1221:35" pos:end="1221:52">(<expr pos:start="1221:36" pos:end="1221:51"><name pos:start="1221:36" pos:end="1221:39">insn</name> <operator pos:start="1221:41" pos:end="1221:41">&amp;</operator> <operator pos:start="1221:43" pos:end="1221:43">(</operator><literal type="number" pos:start="1221:44" pos:end="1221:44">1</literal> <operator pos:start="1221:46" pos:end="1221:47">&lt;&lt;</operator> <literal type="number" pos:start="1221:49" pos:end="1221:50">21</literal><operator pos:start="1221:51" pos:end="1221:51">)</operator></expr>)</condition> <block pos:start="1221:54" pos:end="1231:25">{<block_content pos:start="1225:29" pos:end="1229:52">

                            <comment type="block" pos:start="1223:29" pos:end="1223:37">/* Add */</comment>

                            <expr_stmt pos:start="1225:29" pos:end="1225:51"><expr pos:start="1225:29" pos:end="1225:50"><name pos:start="1225:29" pos:end="1225:32">tmp2</name> <operator pos:start="1225:34" pos:end="1225:34">=</operator> <call pos:start="1225:36" pos:end="1225:50"><name pos:start="1225:36" pos:end="1225:43">load_reg</name><argument_list pos:start="1225:44" pos:end="1225:50">(<argument pos:start="1225:45" pos:end="1225:45"><expr pos:start="1225:45" pos:end="1225:45"><name pos:start="1225:45" pos:end="1225:45">s</name></expr></argument>, <argument pos:start="1225:48" pos:end="1225:49"><expr pos:start="1225:48" pos:end="1225:49"><name pos:start="1225:48" pos:end="1225:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1227:29" pos:end="1227:60"><expr pos:start="1227:29" pos:end="1227:59"><call pos:start="1227:29" pos:end="1227:59"><name pos:start="1227:29" pos:end="1227:43">tcg_gen_add_i32</name><argument_list pos:start="1227:44" pos:end="1227:59">(<argument pos:start="1227:45" pos:end="1227:47"><expr pos:start="1227:45" pos:end="1227:47"><name pos:start="1227:45" pos:end="1227:47">tmp</name></expr></argument>, <argument pos:start="1227:50" pos:end="1227:52"><expr pos:start="1227:50" pos:end="1227:52"><name pos:start="1227:50" pos:end="1227:52">tmp</name></expr></argument>, <argument pos:start="1227:55" pos:end="1227:58"><expr pos:start="1227:55" pos:end="1227:58"><name pos:start="1227:55" pos:end="1227:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1229:29" pos:end="1229:52"><expr pos:start="1229:29" pos:end="1229:51"><call pos:start="1229:29" pos:end="1229:51"><name pos:start="1229:29" pos:end="1229:45">tcg_temp_free_i32</name><argument_list pos:start="1229:46" pos:end="1229:51">(<argument pos:start="1229:47" pos:end="1229:50"><expr pos:start="1229:47" pos:end="1229:50"><name pos:start="1229:47" pos:end="1229:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1233:25" pos:end="1235:46"><if pos:start="1233:25" pos:end="1235:46">if <condition pos:start="1233:28" pos:end="1233:45">(<expr pos:start="1233:29" pos:end="1233:44"><name pos:start="1233:29" pos:end="1233:32">insn</name> <operator pos:start="1233:34" pos:end="1233:34">&amp;</operator> <operator pos:start="1233:36" pos:end="1233:36">(</operator><literal type="number" pos:start="1233:37" pos:end="1233:37">1</literal> <operator pos:start="1233:39" pos:end="1233:40">&lt;&lt;</operator> <literal type="number" pos:start="1233:42" pos:end="1233:43">20</literal><operator pos:start="1233:44" pos:end="1233:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1235:29" pos:end="1235:46"><block_content pos:start="1235:29" pos:end="1235:46">

                            <expr_stmt pos:start="1235:29" pos:end="1235:46"><expr pos:start="1235:29" pos:end="1235:45"><call pos:start="1235:29" pos:end="1235:45"><name pos:start="1235:29" pos:end="1235:40">gen_logic_CC</name><argument_list pos:start="1235:41" pos:end="1235:45">(<argument pos:start="1235:42" pos:end="1235:44"><expr pos:start="1235:42" pos:end="1235:44"><name pos:start="1235:42" pos:end="1235:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1237:25" pos:end="1237:46"><expr pos:start="1237:25" pos:end="1237:45"><call pos:start="1237:25" pos:end="1237:45"><name pos:start="1237:25" pos:end="1237:33">store_reg</name><argument_list pos:start="1237:34" pos:end="1237:45">(<argument pos:start="1237:35" pos:end="1237:35"><expr pos:start="1237:35" pos:end="1237:35"><name pos:start="1237:35" pos:end="1237:35">s</name></expr></argument>, <argument pos:start="1237:38" pos:end="1237:39"><expr pos:start="1237:38" pos:end="1237:39"><name pos:start="1237:38" pos:end="1237:39">rd</name></expr></argument>, <argument pos:start="1237:42" pos:end="1237:44"><expr pos:start="1237:42" pos:end="1237:44"><name pos:start="1237:42" pos:end="1237:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1239:25" pos:end="1239:30">break;</break>

                    <case pos:start="1241:21" pos:end="1241:27">case <expr pos:start="1241:26" pos:end="1241:26"><literal type="number" pos:start="1241:26" pos:end="1241:26">4</literal></expr>:</case>

                        <comment type="block" pos:start="1243:25" pos:end="1243:66">/* 64 bit mul double accumulate (UMAAL) */</comment>

                        <expr_stmt pos:start="1245:25" pos:end="1245:32"><expr pos:start="1245:25" pos:end="1245:31"><call pos:start="1245:25" pos:end="1245:31"><name pos:start="1245:25" pos:end="1245:28">ARCH</name><argument_list pos:start="1245:29" pos:end="1245:31">(<argument pos:start="1245:30" pos:end="1245:30"><expr pos:start="1245:30" pos:end="1245:30"><literal type="number" pos:start="1245:30" pos:end="1245:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1247:25" pos:end="1247:46"><expr pos:start="1247:25" pos:end="1247:45"><name pos:start="1247:25" pos:end="1247:27">tmp</name> <operator pos:start="1247:29" pos:end="1247:29">=</operator> <call pos:start="1247:31" pos:end="1247:45"><name pos:start="1247:31" pos:end="1247:38">load_reg</name><argument_list pos:start="1247:39" pos:end="1247:45">(<argument pos:start="1247:40" pos:end="1247:40"><expr pos:start="1247:40" pos:end="1247:40"><name pos:start="1247:40" pos:end="1247:40">s</name></expr></argument>, <argument pos:start="1247:43" pos:end="1247:44"><expr pos:start="1247:43" pos:end="1247:44"><name pos:start="1247:43" pos:end="1247:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1249:25" pos:end="1249:47"><expr pos:start="1249:25" pos:end="1249:46"><name pos:start="1249:25" pos:end="1249:28">tmp2</name> <operator pos:start="1249:30" pos:end="1249:30">=</operator> <call pos:start="1249:32" pos:end="1249:46"><name pos:start="1249:32" pos:end="1249:39">load_reg</name><argument_list pos:start="1249:40" pos:end="1249:46">(<argument pos:start="1249:41" pos:end="1249:41"><expr pos:start="1249:41" pos:end="1249:41"><name pos:start="1249:41" pos:end="1249:41">s</name></expr></argument>, <argument pos:start="1249:44" pos:end="1249:45"><expr pos:start="1249:44" pos:end="1249:45"><name pos:start="1249:44" pos:end="1249:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1251:25" pos:end="1251:60"><expr pos:start="1251:25" pos:end="1251:59"><name pos:start="1251:25" pos:end="1251:29">tmp64</name> <operator pos:start="1251:31" pos:end="1251:31">=</operator> <call pos:start="1251:33" pos:end="1251:59"><name pos:start="1251:33" pos:end="1251:48">gen_mulu_i64_i32</name><argument_list pos:start="1251:49" pos:end="1251:59">(<argument pos:start="1251:50" pos:end="1251:52"><expr pos:start="1251:50" pos:end="1251:52"><name pos:start="1251:50" pos:end="1251:52">tmp</name></expr></argument>, <argument pos:start="1251:55" pos:end="1251:58"><expr pos:start="1251:55" pos:end="1251:58"><name pos:start="1251:55" pos:end="1251:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1253:25" pos:end="1253:50"><expr pos:start="1253:25" pos:end="1253:49"><call pos:start="1253:25" pos:end="1253:49"><name pos:start="1253:25" pos:end="1253:35">gen_addq_lo</name><argument_list pos:start="1253:36" pos:end="1253:49">(<argument pos:start="1253:37" pos:end="1253:37"><expr pos:start="1253:37" pos:end="1253:37"><name pos:start="1253:37" pos:end="1253:37">s</name></expr></argument>, <argument pos:start="1253:40" pos:end="1253:44"><expr pos:start="1253:40" pos:end="1253:44"><name pos:start="1253:40" pos:end="1253:44">tmp64</name></expr></argument>, <argument pos:start="1253:47" pos:end="1253:48"><expr pos:start="1253:47" pos:end="1253:48"><name pos:start="1253:47" pos:end="1253:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1255:25" pos:end="1255:50"><expr pos:start="1255:25" pos:end="1255:49"><call pos:start="1255:25" pos:end="1255:49"><name pos:start="1255:25" pos:end="1255:35">gen_addq_lo</name><argument_list pos:start="1255:36" pos:end="1255:49">(<argument pos:start="1255:37" pos:end="1255:37"><expr pos:start="1255:37" pos:end="1255:37"><name pos:start="1255:37" pos:end="1255:37">s</name></expr></argument>, <argument pos:start="1255:40" pos:end="1255:44"><expr pos:start="1255:40" pos:end="1255:44"><name pos:start="1255:40" pos:end="1255:44">tmp64</name></expr></argument>, <argument pos:start="1255:47" pos:end="1255:48"><expr pos:start="1255:47" pos:end="1255:48"><name pos:start="1255:47" pos:end="1255:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1257:25" pos:end="1257:57"><expr pos:start="1257:25" pos:end="1257:56"><call pos:start="1257:25" pos:end="1257:56"><name pos:start="1257:25" pos:end="1257:38">gen_storeq_reg</name><argument_list pos:start="1257:39" pos:end="1257:56">(<argument pos:start="1257:40" pos:end="1257:40"><expr pos:start="1257:40" pos:end="1257:40"><name pos:start="1257:40" pos:end="1257:40">s</name></expr></argument>, <argument pos:start="1257:43" pos:end="1257:44"><expr pos:start="1257:43" pos:end="1257:44"><name pos:start="1257:43" pos:end="1257:44">rn</name></expr></argument>, <argument pos:start="1257:47" pos:end="1257:48"><expr pos:start="1257:47" pos:end="1257:48"><name pos:start="1257:47" pos:end="1257:48">rd</name></expr></argument>, <argument pos:start="1257:51" pos:end="1257:55"><expr pos:start="1257:51" pos:end="1257:55"><name pos:start="1257:51" pos:end="1257:55">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1259:25" pos:end="1259:49"><expr pos:start="1259:25" pos:end="1259:48"><call pos:start="1259:25" pos:end="1259:48"><name pos:start="1259:25" pos:end="1259:41">tcg_temp_free_i64</name><argument_list pos:start="1259:42" pos:end="1259:48">(<argument pos:start="1259:43" pos:end="1259:47"><expr pos:start="1259:43" pos:end="1259:47"><name pos:start="1259:43" pos:end="1259:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1261:25" pos:end="1261:30">break;</break>

                    <case pos:start="1263:21" pos:end="1263:27">case <expr pos:start="1263:26" pos:end="1263:26"><literal type="number" pos:start="1263:26" pos:end="1263:26">8</literal></expr>:</case> <case pos:start="1263:29" pos:end="1263:35">case <expr pos:start="1263:34" pos:end="1263:34"><literal type="number" pos:start="1263:34" pos:end="1263:34">9</literal></expr>:</case> <case pos:start="1263:37" pos:end="1263:44">case <expr pos:start="1263:42" pos:end="1263:43"><literal type="number" pos:start="1263:42" pos:end="1263:43">10</literal></expr>:</case> <case pos:start="1263:46" pos:end="1263:53">case <expr pos:start="1263:51" pos:end="1263:52"><literal type="number" pos:start="1263:51" pos:end="1263:52">11</literal></expr>:</case>

                    <case pos:start="1265:21" pos:end="1265:28">case <expr pos:start="1265:26" pos:end="1265:27"><literal type="number" pos:start="1265:26" pos:end="1265:27">12</literal></expr>:</case> <case pos:start="1265:30" pos:end="1265:37">case <expr pos:start="1265:35" pos:end="1265:36"><literal type="number" pos:start="1265:35" pos:end="1265:36">13</literal></expr>:</case> <case pos:start="1265:39" pos:end="1265:46">case <expr pos:start="1265:44" pos:end="1265:45"><literal type="number" pos:start="1265:44" pos:end="1265:45">14</literal></expr>:</case> <case pos:start="1265:48" pos:end="1265:55">case <expr pos:start="1265:53" pos:end="1265:54"><literal type="number" pos:start="1265:53" pos:end="1265:54">15</literal></expr>:</case>

                        <comment type="block" pos:start="1267:25" pos:end="1267:69">/* 64 bit mul: UMULL, UMLAL, SMULL, SMLAL. */</comment>

                        <expr_stmt pos:start="1269:25" pos:end="1269:46"><expr pos:start="1269:25" pos:end="1269:45"><name pos:start="1269:25" pos:end="1269:27">tmp</name> <operator pos:start="1269:29" pos:end="1269:29">=</operator> <call pos:start="1269:31" pos:end="1269:45"><name pos:start="1269:31" pos:end="1269:38">load_reg</name><argument_list pos:start="1269:39" pos:end="1269:45">(<argument pos:start="1269:40" pos:end="1269:40"><expr pos:start="1269:40" pos:end="1269:40"><name pos:start="1269:40" pos:end="1269:40">s</name></expr></argument>, <argument pos:start="1269:43" pos:end="1269:44"><expr pos:start="1269:43" pos:end="1269:44"><name pos:start="1269:43" pos:end="1269:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1271:25" pos:end="1271:47"><expr pos:start="1271:25" pos:end="1271:46"><name pos:start="1271:25" pos:end="1271:28">tmp2</name> <operator pos:start="1271:30" pos:end="1271:30">=</operator> <call pos:start="1271:32" pos:end="1271:46"><name pos:start="1271:32" pos:end="1271:39">load_reg</name><argument_list pos:start="1271:40" pos:end="1271:46">(<argument pos:start="1271:41" pos:end="1271:41"><expr pos:start="1271:41" pos:end="1271:41"><name pos:start="1271:41" pos:end="1271:41">s</name></expr></argument>, <argument pos:start="1271:44" pos:end="1271:45"><expr pos:start="1271:44" pos:end="1271:45"><name pos:start="1271:44" pos:end="1271:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1273:25" pos:end="1281:25"><if pos:start="1273:25" pos:end="1277:25">if <condition pos:start="1273:28" pos:end="1273:45">(<expr pos:start="1273:29" pos:end="1273:44"><name pos:start="1273:29" pos:end="1273:32">insn</name> <operator pos:start="1273:34" pos:end="1273:34">&amp;</operator> <operator pos:start="1273:36" pos:end="1273:36">(</operator><literal type="number" pos:start="1273:37" pos:end="1273:37">1</literal> <operator pos:start="1273:39" pos:end="1273:40">&lt;&lt;</operator> <literal type="number" pos:start="1273:42" pos:end="1273:43">22</literal><operator pos:start="1273:44" pos:end="1273:44">)</operator></expr>)</condition> <block pos:start="1273:47" pos:end="1277:25">{<block_content pos:start="1275:29" pos:end="1275:64">

                            <expr_stmt pos:start="1275:29" pos:end="1275:64"><expr pos:start="1275:29" pos:end="1275:63"><name pos:start="1275:29" pos:end="1275:33">tmp64</name> <operator pos:start="1275:35" pos:end="1275:35">=</operator> <call pos:start="1275:37" pos:end="1275:63"><name pos:start="1275:37" pos:end="1275:52">gen_muls_i64_i32</name><argument_list pos:start="1275:53" pos:end="1275:63">(<argument pos:start="1275:54" pos:end="1275:56"><expr pos:start="1275:54" pos:end="1275:56"><name pos:start="1275:54" pos:end="1275:56">tmp</name></expr></argument>, <argument pos:start="1275:59" pos:end="1275:62"><expr pos:start="1275:59" pos:end="1275:62"><name pos:start="1275:59" pos:end="1275:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1277:27" pos:end="1281:25">else <block pos:start="1277:32" pos:end="1281:25">{<block_content pos:start="1279:29" pos:end="1279:64">

                            <expr_stmt pos:start="1279:29" pos:end="1279:64"><expr pos:start="1279:29" pos:end="1279:63"><name pos:start="1279:29" pos:end="1279:33">tmp64</name> <operator pos:start="1279:35" pos:end="1279:35">=</operator> <call pos:start="1279:37" pos:end="1279:63"><name pos:start="1279:37" pos:end="1279:52">gen_mulu_i64_i32</name><argument_list pos:start="1279:53" pos:end="1279:63">(<argument pos:start="1279:54" pos:end="1279:56"><expr pos:start="1279:54" pos:end="1279:56"><name pos:start="1279:54" pos:end="1279:56">tmp</name></expr></argument>, <argument pos:start="1279:59" pos:end="1279:62"><expr pos:start="1279:59" pos:end="1279:62"><name pos:start="1279:59" pos:end="1279:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="1283:25" pos:end="1287:25"><if pos:start="1283:25" pos:end="1287:25">if <condition pos:start="1283:28" pos:end="1283:45">(<expr pos:start="1283:29" pos:end="1283:44"><name pos:start="1283:29" pos:end="1283:32">insn</name> <operator pos:start="1283:34" pos:end="1283:34">&amp;</operator> <operator pos:start="1283:36" pos:end="1283:36">(</operator><literal type="number" pos:start="1283:37" pos:end="1283:37">1</literal> <operator pos:start="1283:39" pos:end="1283:40">&lt;&lt;</operator> <literal type="number" pos:start="1283:42" pos:end="1283:43">21</literal><operator pos:start="1283:44" pos:end="1283:44">)</operator></expr>)</condition> <block pos:start="1283:47" pos:end="1287:25">{<block_content pos:start="1285:29" pos:end="1285:55"> <comment type="block" pos:start="1283:49" pos:end="1283:69">/* mult accumulate */</comment>

                            <expr_stmt pos:start="1285:29" pos:end="1285:55"><expr pos:start="1285:29" pos:end="1285:54"><call pos:start="1285:29" pos:end="1285:54"><name pos:start="1285:29" pos:end="1285:36">gen_addq</name><argument_list pos:start="1285:37" pos:end="1285:54">(<argument pos:start="1285:38" pos:end="1285:38"><expr pos:start="1285:38" pos:end="1285:38"><name pos:start="1285:38" pos:end="1285:38">s</name></expr></argument>, <argument pos:start="1285:41" pos:end="1285:45"><expr pos:start="1285:41" pos:end="1285:45"><name pos:start="1285:41" pos:end="1285:45">tmp64</name></expr></argument>, <argument pos:start="1285:48" pos:end="1285:49"><expr pos:start="1285:48" pos:end="1285:49"><name pos:start="1285:48" pos:end="1285:49">rn</name></expr></argument>, <argument pos:start="1285:52" pos:end="1285:53"><expr pos:start="1285:52" pos:end="1285:53"><name pos:start="1285:52" pos:end="1285:53">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1289:25" pos:end="1293:25"><if pos:start="1289:25" pos:end="1293:25">if <condition pos:start="1289:28" pos:end="1289:45">(<expr pos:start="1289:29" pos:end="1289:44"><name pos:start="1289:29" pos:end="1289:32">insn</name> <operator pos:start="1289:34" pos:end="1289:34">&amp;</operator> <operator pos:start="1289:36" pos:end="1289:36">(</operator><literal type="number" pos:start="1289:37" pos:end="1289:37">1</literal> <operator pos:start="1289:39" pos:end="1289:40">&lt;&lt;</operator> <literal type="number" pos:start="1289:42" pos:end="1289:43">20</literal><operator pos:start="1289:44" pos:end="1289:44">)</operator></expr>)</condition> <block pos:start="1289:47" pos:end="1293:25">{<block_content pos:start="1291:29" pos:end="1291:49">

                            <expr_stmt pos:start="1291:29" pos:end="1291:49"><expr pos:start="1291:29" pos:end="1291:48"><call pos:start="1291:29" pos:end="1291:48"><name pos:start="1291:29" pos:end="1291:41">gen_logicq_cc</name><argument_list pos:start="1291:42" pos:end="1291:48">(<argument pos:start="1291:43" pos:end="1291:47"><expr pos:start="1291:43" pos:end="1291:47"><name pos:start="1291:43" pos:end="1291:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1295:25" pos:end="1295:57"><expr pos:start="1295:25" pos:end="1295:56"><call pos:start="1295:25" pos:end="1295:56"><name pos:start="1295:25" pos:end="1295:38">gen_storeq_reg</name><argument_list pos:start="1295:39" pos:end="1295:56">(<argument pos:start="1295:40" pos:end="1295:40"><expr pos:start="1295:40" pos:end="1295:40"><name pos:start="1295:40" pos:end="1295:40">s</name></expr></argument>, <argument pos:start="1295:43" pos:end="1295:44"><expr pos:start="1295:43" pos:end="1295:44"><name pos:start="1295:43" pos:end="1295:44">rn</name></expr></argument>, <argument pos:start="1295:47" pos:end="1295:48"><expr pos:start="1295:47" pos:end="1295:48"><name pos:start="1295:47" pos:end="1295:48">rd</name></expr></argument>, <argument pos:start="1295:51" pos:end="1295:55"><expr pos:start="1295:51" pos:end="1295:55"><name pos:start="1295:51" pos:end="1295:55">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1297:25" pos:end="1297:49"><expr pos:start="1297:25" pos:end="1297:48"><call pos:start="1297:25" pos:end="1297:48"><name pos:start="1297:25" pos:end="1297:41">tcg_temp_free_i64</name><argument_list pos:start="1297:42" pos:end="1297:48">(<argument pos:start="1297:43" pos:end="1297:47"><expr pos:start="1297:43" pos:end="1297:47"><name pos:start="1297:43" pos:end="1297:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1299:25" pos:end="1299:30">break;</break>

                    <default pos:start="1301:21" pos:end="1301:28">default:</default>

                        <goto pos:start="1303:25" pos:end="1303:40">goto <name pos:start="1303:30" pos:end="1303:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                </block_content>}</block></if> <else pos:start="1307:19" pos:end="1443:17">else <block pos:start="1307:24" pos:end="1443:17">{<block_content pos:start="1309:21" pos:end="1441:21">

                    <expr_stmt pos:start="1309:21" pos:end="1309:44"><expr pos:start="1309:21" pos:end="1309:43"><name pos:start="1309:21" pos:end="1309:22">rn</name> <operator pos:start="1309:24" pos:end="1309:24">=</operator> <operator pos:start="1309:26" pos:end="1309:26">(</operator><name pos:start="1309:27" pos:end="1309:30">insn</name> <operator pos:start="1309:32" pos:end="1309:33">&gt;&gt;</operator> <literal type="number" pos:start="1309:35" pos:end="1309:36">16</literal><operator pos:start="1309:37" pos:end="1309:37">)</operator> <operator pos:start="1309:39" pos:end="1309:39">&amp;</operator> <literal type="number" pos:start="1309:41" pos:end="1309:43">0xf</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1311:21" pos:end="1311:44"><expr pos:start="1311:21" pos:end="1311:43"><name pos:start="1311:21" pos:end="1311:22">rd</name> <operator pos:start="1311:24" pos:end="1311:24">=</operator> <operator pos:start="1311:26" pos:end="1311:26">(</operator><name pos:start="1311:27" pos:end="1311:30">insn</name> <operator pos:start="1311:32" pos:end="1311:33">&gt;&gt;</operator> <literal type="number" pos:start="1311:35" pos:end="1311:36">12</literal><operator pos:start="1311:37" pos:end="1311:37">)</operator> <operator pos:start="1311:39" pos:end="1311:39">&amp;</operator> <literal type="number" pos:start="1311:41" pos:end="1311:43">0xf</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1313:21" pos:end="1441:21"><if pos:start="1313:21" pos:end="1405:21">if <condition pos:start="1313:24" pos:end="1313:41">(<expr pos:start="1313:25" pos:end="1313:40"><name pos:start="1313:25" pos:end="1313:28">insn</name> <operator pos:start="1313:30" pos:end="1313:30">&amp;</operator> <operator pos:start="1313:32" pos:end="1313:32">(</operator><literal type="number" pos:start="1313:33" pos:end="1313:33">1</literal> <operator pos:start="1313:35" pos:end="1313:36">&lt;&lt;</operator> <literal type="number" pos:start="1313:38" pos:end="1313:39">23</literal><operator pos:start="1313:40" pos:end="1313:40">)</operator></expr>)</condition> <block pos:start="1313:43" pos:end="1405:21">{<block_content pos:start="1317:25" pos:end="1403:44">

                        <comment type="block" pos:start="1315:25" pos:end="1315:50">/* load/store exclusive */</comment>

                        <expr_stmt pos:start="1317:25" pos:end="1317:49"><expr pos:start="1317:25" pos:end="1317:48"><name pos:start="1317:25" pos:end="1317:27">op1</name> <operator pos:start="1317:29" pos:end="1317:29">=</operator> <operator pos:start="1317:31" pos:end="1317:31">(</operator><name pos:start="1317:32" pos:end="1317:35">insn</name> <operator pos:start="1317:37" pos:end="1317:38">&gt;&gt;</operator> <literal type="number" pos:start="1317:40" pos:end="1317:41">21</literal><operator pos:start="1317:42" pos:end="1317:42">)</operator> <operator pos:start="1317:44" pos:end="1317:44">&amp;</operator> <literal type="number" pos:start="1317:46" pos:end="1317:48">0x3</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1319:25" pos:end="1325:36"><if pos:start="1319:25" pos:end="1321:37">if <condition pos:start="1319:28" pos:end="1319:32">(<expr pos:start="1319:29" pos:end="1319:31"><name pos:start="1319:29" pos:end="1319:31">op1</name></expr>)</condition><block type="pseudo" pos:start="1321:29" pos:end="1321:37"><block_content pos:start="1321:29" pos:end="1321:37">

                            <expr_stmt pos:start="1321:29" pos:end="1321:37"><expr pos:start="1321:29" pos:end="1321:36"><call pos:start="1321:29" pos:end="1321:36"><name pos:start="1321:29" pos:end="1321:32">ARCH</name><argument_list pos:start="1321:33" pos:end="1321:36">(<argument pos:start="1321:34" pos:end="1321:35"><expr pos:start="1321:34" pos:end="1321:35"><literal type="number" pos:start="1321:34" pos:end="1321:35">6K</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1323:25" pos:end="1325:36">else<block type="pseudo" pos:start="1325:29" pos:end="1325:36"><block_content pos:start="1325:29" pos:end="1325:36">

                            <expr_stmt pos:start="1325:29" pos:end="1325:36"><expr pos:start="1325:29" pos:end="1325:35"><call pos:start="1325:29" pos:end="1325:35"><name pos:start="1325:29" pos:end="1325:32">ARCH</name><argument_list pos:start="1325:33" pos:end="1325:35">(<argument pos:start="1325:34" pos:end="1325:34"><expr pos:start="1325:34" pos:end="1325:34"><literal type="number" pos:start="1325:34" pos:end="1325:34">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1327:25" pos:end="1327:56"><expr pos:start="1327:25" pos:end="1327:55"><name pos:start="1327:25" pos:end="1327:28">addr</name> <operator pos:start="1327:30" pos:end="1327:30">=</operator> <call pos:start="1327:32" pos:end="1327:55"><name pos:start="1327:32" pos:end="1327:53">tcg_temp_local_new_i32</name><argument_list pos:start="1327:54" pos:end="1327:55">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1329:25" pos:end="1329:50"><expr pos:start="1329:25" pos:end="1329:49"><call pos:start="1329:25" pos:end="1329:49"><name pos:start="1329:25" pos:end="1329:36">load_reg_var</name><argument_list pos:start="1329:37" pos:end="1329:49">(<argument pos:start="1329:38" pos:end="1329:38"><expr pos:start="1329:38" pos:end="1329:38"><name pos:start="1329:38" pos:end="1329:38">s</name></expr></argument>, <argument pos:start="1329:41" pos:end="1329:44"><expr pos:start="1329:41" pos:end="1329:44"><name pos:start="1329:41" pos:end="1329:44">addr</name></expr></argument>, <argument pos:start="1329:47" pos:end="1329:48"><expr pos:start="1329:47" pos:end="1329:48"><name pos:start="1329:47" pos:end="1329:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1331:25" pos:end="1401:25"><if pos:start="1331:25" pos:end="1365:25">if <condition pos:start="1331:28" pos:end="1331:45">(<expr pos:start="1331:29" pos:end="1331:44"><name pos:start="1331:29" pos:end="1331:32">insn</name> <operator pos:start="1331:34" pos:end="1331:34">&amp;</operator> <operator pos:start="1331:36" pos:end="1331:36">(</operator><literal type="number" pos:start="1331:37" pos:end="1331:37">1</literal> <operator pos:start="1331:39" pos:end="1331:40">&lt;&lt;</operator> <literal type="number" pos:start="1331:42" pos:end="1331:43">20</literal><operator pos:start="1331:44" pos:end="1331:44">)</operator></expr>)</condition> <block pos:start="1331:47" pos:end="1365:25">{<block_content pos:start="1333:29" pos:end="1363:29">

                            <switch pos:start="1333:29" pos:end="1363:29">switch <condition pos:start="1333:36" pos:end="1333:40">(<expr pos:start="1333:37" pos:end="1333:39"><name pos:start="1333:37" pos:end="1333:39">op1</name></expr>)</condition> <block pos:start="1333:42" pos:end="1363:29">{<block_content pos:start="1335:29" pos:end="1361:40">

                            <case pos:start="1335:29" pos:end="1335:35">case <expr pos:start="1335:34" pos:end="1335:34"><literal type="number" pos:start="1335:34" pos:end="1335:34">0</literal></expr>:</case> <comment type="block" pos:start="1335:37" pos:end="1335:47">/* ldrex */</comment>

                                <expr_stmt pos:start="1337:33" pos:end="1337:71"><expr pos:start="1337:33" pos:end="1337:70"><call pos:start="1337:33" pos:end="1337:70"><name pos:start="1337:33" pos:end="1337:50">gen_load_exclusive</name><argument_list pos:start="1337:51" pos:end="1337:70">(<argument pos:start="1337:52" pos:end="1337:52"><expr pos:start="1337:52" pos:end="1337:52"><name pos:start="1337:52" pos:end="1337:52">s</name></expr></argument>, <argument pos:start="1337:55" pos:end="1337:56"><expr pos:start="1337:55" pos:end="1337:56"><name pos:start="1337:55" pos:end="1337:56">rd</name></expr></argument>, <argument pos:start="1337:59" pos:end="1337:60"><expr pos:start="1337:59" pos:end="1337:60"><literal type="number" pos:start="1337:59" pos:end="1337:60">15</literal></expr></argument>, <argument pos:start="1337:63" pos:end="1337:66"><expr pos:start="1337:63" pos:end="1337:66"><name pos:start="1337:63" pos:end="1337:66">addr</name></expr></argument>, <argument pos:start="1337:69" pos:end="1337:69"><expr pos:start="1337:69" pos:end="1337:69"><literal type="number" pos:start="1337:69" pos:end="1337:69">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1339:33" pos:end="1339:38">break;</break>

                            <case pos:start="1341:29" pos:end="1341:35">case <expr pos:start="1341:34" pos:end="1341:34"><literal type="number" pos:start="1341:34" pos:end="1341:34">1</literal></expr>:</case> <comment type="block" pos:start="1341:37" pos:end="1341:48">/* ldrexd */</comment>

                                <expr_stmt pos:start="1343:33" pos:end="1343:75"><expr pos:start="1343:33" pos:end="1343:74"><call pos:start="1343:33" pos:end="1343:74"><name pos:start="1343:33" pos:end="1343:50">gen_load_exclusive</name><argument_list pos:start="1343:51" pos:end="1343:74">(<argument pos:start="1343:52" pos:end="1343:52"><expr pos:start="1343:52" pos:end="1343:52"><name pos:start="1343:52" pos:end="1343:52">s</name></expr></argument>, <argument pos:start="1343:55" pos:end="1343:56"><expr pos:start="1343:55" pos:end="1343:56"><name pos:start="1343:55" pos:end="1343:56">rd</name></expr></argument>, <argument pos:start="1343:59" pos:end="1343:64"><expr pos:start="1343:59" pos:end="1343:64"><name pos:start="1343:59" pos:end="1343:60">rd</name> <operator pos:start="1343:62" pos:end="1343:62">+</operator> <literal type="number" pos:start="1343:64" pos:end="1343:64">1</literal></expr></argument>, <argument pos:start="1343:67" pos:end="1343:70"><expr pos:start="1343:67" pos:end="1343:70"><name pos:start="1343:67" pos:end="1343:70">addr</name></expr></argument>, <argument pos:start="1343:73" pos:end="1343:73"><expr pos:start="1343:73" pos:end="1343:73"><literal type="number" pos:start="1343:73" pos:end="1343:73">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1345:33" pos:end="1345:38">break;</break>

                            <case pos:start="1347:29" pos:end="1347:35">case <expr pos:start="1347:34" pos:end="1347:34"><literal type="number" pos:start="1347:34" pos:end="1347:34">2</literal></expr>:</case> <comment type="block" pos:start="1347:37" pos:end="1347:48">/* ldrexb */</comment>

                                <expr_stmt pos:start="1349:33" pos:end="1349:71"><expr pos:start="1349:33" pos:end="1349:70"><call pos:start="1349:33" pos:end="1349:70"><name pos:start="1349:33" pos:end="1349:50">gen_load_exclusive</name><argument_list pos:start="1349:51" pos:end="1349:70">(<argument pos:start="1349:52" pos:end="1349:52"><expr pos:start="1349:52" pos:end="1349:52"><name pos:start="1349:52" pos:end="1349:52">s</name></expr></argument>, <argument pos:start="1349:55" pos:end="1349:56"><expr pos:start="1349:55" pos:end="1349:56"><name pos:start="1349:55" pos:end="1349:56">rd</name></expr></argument>, <argument pos:start="1349:59" pos:end="1349:60"><expr pos:start="1349:59" pos:end="1349:60"><literal type="number" pos:start="1349:59" pos:end="1349:60">15</literal></expr></argument>, <argument pos:start="1349:63" pos:end="1349:66"><expr pos:start="1349:63" pos:end="1349:66"><name pos:start="1349:63" pos:end="1349:66">addr</name></expr></argument>, <argument pos:start="1349:69" pos:end="1349:69"><expr pos:start="1349:69" pos:end="1349:69"><literal type="number" pos:start="1349:69" pos:end="1349:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1351:33" pos:end="1351:38">break;</break>

                            <case pos:start="1353:29" pos:end="1353:35">case <expr pos:start="1353:34" pos:end="1353:34"><literal type="number" pos:start="1353:34" pos:end="1353:34">3</literal></expr>:</case> <comment type="block" pos:start="1353:37" pos:end="1353:48">/* ldrexh */</comment>

                                <expr_stmt pos:start="1355:33" pos:end="1355:71"><expr pos:start="1355:33" pos:end="1355:70"><call pos:start="1355:33" pos:end="1355:70"><name pos:start="1355:33" pos:end="1355:50">gen_load_exclusive</name><argument_list pos:start="1355:51" pos:end="1355:70">(<argument pos:start="1355:52" pos:end="1355:52"><expr pos:start="1355:52" pos:end="1355:52"><name pos:start="1355:52" pos:end="1355:52">s</name></expr></argument>, <argument pos:start="1355:55" pos:end="1355:56"><expr pos:start="1355:55" pos:end="1355:56"><name pos:start="1355:55" pos:end="1355:56">rd</name></expr></argument>, <argument pos:start="1355:59" pos:end="1355:60"><expr pos:start="1355:59" pos:end="1355:60"><literal type="number" pos:start="1355:59" pos:end="1355:60">15</literal></expr></argument>, <argument pos:start="1355:63" pos:end="1355:66"><expr pos:start="1355:63" pos:end="1355:66"><name pos:start="1355:63" pos:end="1355:66">addr</name></expr></argument>, <argument pos:start="1355:69" pos:end="1355:69"><expr pos:start="1355:69" pos:end="1355:69"><literal type="number" pos:start="1355:69" pos:end="1355:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1357:33" pos:end="1357:38">break;</break>

                            <default pos:start="1359:29" pos:end="1359:36">default:</default>

                                <expr_stmt pos:start="1361:33" pos:end="1361:40"><expr pos:start="1361:33" pos:end="1361:39"><call pos:start="1361:33" pos:end="1361:39"><name pos:start="1361:33" pos:end="1361:37">abort</name><argument_list pos:start="1361:38" pos:end="1361:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></if> <else pos:start="1365:27" pos:end="1401:25">else <block pos:start="1365:32" pos:end="1401:25">{<block_content pos:start="1367:29" pos:end="1399:29">

                            <expr_stmt pos:start="1367:29" pos:end="1367:44"><expr pos:start="1367:29" pos:end="1367:43"><name pos:start="1367:29" pos:end="1367:30">rm</name> <operator pos:start="1367:32" pos:end="1367:32">=</operator> <name pos:start="1367:34" pos:end="1367:37">insn</name> <operator pos:start="1367:39" pos:end="1367:39">&amp;</operator> <literal type="number" pos:start="1367:41" pos:end="1367:43">0xf</literal></expr>;</expr_stmt>

                            <switch pos:start="1369:29" pos:end="1399:29">switch <condition pos:start="1369:36" pos:end="1369:40">(<expr pos:start="1369:37" pos:end="1369:39"><name pos:start="1369:37" pos:end="1369:39">op1</name></expr>)</condition> <block pos:start="1369:42" pos:end="1399:29">{<block_content pos:start="1371:29" pos:end="1397:40">

                            <case pos:start="1371:29" pos:end="1371:35">case <expr pos:start="1371:34" pos:end="1371:34"><literal type="number" pos:start="1371:34" pos:end="1371:34">0</literal></expr>:</case>  <comment type="block" pos:start="1371:38" pos:end="1371:49">/*  strex */</comment>

                                <expr_stmt pos:start="1373:33" pos:end="1373:76"><expr pos:start="1373:33" pos:end="1373:75"><call pos:start="1373:33" pos:end="1373:75"><name pos:start="1373:33" pos:end="1373:51">gen_store_exclusive</name><argument_list pos:start="1373:52" pos:end="1373:75">(<argument pos:start="1373:53" pos:end="1373:53"><expr pos:start="1373:53" pos:end="1373:53"><name pos:start="1373:53" pos:end="1373:53">s</name></expr></argument>, <argument pos:start="1373:56" pos:end="1373:57"><expr pos:start="1373:56" pos:end="1373:57"><name pos:start="1373:56" pos:end="1373:57">rd</name></expr></argument>, <argument pos:start="1373:60" pos:end="1373:61"><expr pos:start="1373:60" pos:end="1373:61"><name pos:start="1373:60" pos:end="1373:61">rm</name></expr></argument>, <argument pos:start="1373:64" pos:end="1373:65"><expr pos:start="1373:64" pos:end="1373:65"><literal type="number" pos:start="1373:64" pos:end="1373:65">15</literal></expr></argument>, <argument pos:start="1373:68" pos:end="1373:71"><expr pos:start="1373:68" pos:end="1373:71"><name pos:start="1373:68" pos:end="1373:71">addr</name></expr></argument>, <argument pos:start="1373:74" pos:end="1373:74"><expr pos:start="1373:74" pos:end="1373:74"><literal type="number" pos:start="1373:74" pos:end="1373:74">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1375:33" pos:end="1375:38">break;</break>

                            <case pos:start="1377:29" pos:end="1377:35">case <expr pos:start="1377:34" pos:end="1377:34"><literal type="number" pos:start="1377:34" pos:end="1377:34">1</literal></expr>:</case> <comment type="block" pos:start="1377:37" pos:end="1377:49">/*  strexd */</comment>

                                <expr_stmt pos:start="1379:33" pos:end="1379:80"><expr pos:start="1379:33" pos:end="1379:79"><call pos:start="1379:33" pos:end="1379:79"><name pos:start="1379:33" pos:end="1379:51">gen_store_exclusive</name><argument_list pos:start="1379:52" pos:end="1379:79">(<argument pos:start="1379:53" pos:end="1379:53"><expr pos:start="1379:53" pos:end="1379:53"><name pos:start="1379:53" pos:end="1379:53">s</name></expr></argument>, <argument pos:start="1379:56" pos:end="1379:57"><expr pos:start="1379:56" pos:end="1379:57"><name pos:start="1379:56" pos:end="1379:57">rd</name></expr></argument>, <argument pos:start="1379:60" pos:end="1379:61"><expr pos:start="1379:60" pos:end="1379:61"><name pos:start="1379:60" pos:end="1379:61">rm</name></expr></argument>, <argument pos:start="1379:64" pos:end="1379:69"><expr pos:start="1379:64" pos:end="1379:69"><name pos:start="1379:64" pos:end="1379:65">rm</name> <operator pos:start="1379:67" pos:end="1379:67">+</operator> <literal type="number" pos:start="1379:69" pos:end="1379:69">1</literal></expr></argument>, <argument pos:start="1379:72" pos:end="1379:75"><expr pos:start="1379:72" pos:end="1379:75"><name pos:start="1379:72" pos:end="1379:75">addr</name></expr></argument>, <argument pos:start="1379:78" pos:end="1379:78"><expr pos:start="1379:78" pos:end="1379:78"><literal type="number" pos:start="1379:78" pos:end="1379:78">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1381:33" pos:end="1381:38">break;</break>

                            <case pos:start="1383:29" pos:end="1383:35">case <expr pos:start="1383:34" pos:end="1383:34"><literal type="number" pos:start="1383:34" pos:end="1383:34">2</literal></expr>:</case> <comment type="block" pos:start="1383:37" pos:end="1383:49">/*  strexb */</comment>

                                <expr_stmt pos:start="1385:33" pos:end="1385:76"><expr pos:start="1385:33" pos:end="1385:75"><call pos:start="1385:33" pos:end="1385:75"><name pos:start="1385:33" pos:end="1385:51">gen_store_exclusive</name><argument_list pos:start="1385:52" pos:end="1385:75">(<argument pos:start="1385:53" pos:end="1385:53"><expr pos:start="1385:53" pos:end="1385:53"><name pos:start="1385:53" pos:end="1385:53">s</name></expr></argument>, <argument pos:start="1385:56" pos:end="1385:57"><expr pos:start="1385:56" pos:end="1385:57"><name pos:start="1385:56" pos:end="1385:57">rd</name></expr></argument>, <argument pos:start="1385:60" pos:end="1385:61"><expr pos:start="1385:60" pos:end="1385:61"><name pos:start="1385:60" pos:end="1385:61">rm</name></expr></argument>, <argument pos:start="1385:64" pos:end="1385:65"><expr pos:start="1385:64" pos:end="1385:65"><literal type="number" pos:start="1385:64" pos:end="1385:65">15</literal></expr></argument>, <argument pos:start="1385:68" pos:end="1385:71"><expr pos:start="1385:68" pos:end="1385:71"><name pos:start="1385:68" pos:end="1385:71">addr</name></expr></argument>, <argument pos:start="1385:74" pos:end="1385:74"><expr pos:start="1385:74" pos:end="1385:74"><literal type="number" pos:start="1385:74" pos:end="1385:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1387:33" pos:end="1387:38">break;</break>

                            <case pos:start="1389:29" pos:end="1389:35">case <expr pos:start="1389:34" pos:end="1389:34"><literal type="number" pos:start="1389:34" pos:end="1389:34">3</literal></expr>:</case> <comment type="block" pos:start="1389:37" pos:end="1389:48">/* strexh */</comment>

                                <expr_stmt pos:start="1391:33" pos:end="1391:76"><expr pos:start="1391:33" pos:end="1391:75"><call pos:start="1391:33" pos:end="1391:75"><name pos:start="1391:33" pos:end="1391:51">gen_store_exclusive</name><argument_list pos:start="1391:52" pos:end="1391:75">(<argument pos:start="1391:53" pos:end="1391:53"><expr pos:start="1391:53" pos:end="1391:53"><name pos:start="1391:53" pos:end="1391:53">s</name></expr></argument>, <argument pos:start="1391:56" pos:end="1391:57"><expr pos:start="1391:56" pos:end="1391:57"><name pos:start="1391:56" pos:end="1391:57">rd</name></expr></argument>, <argument pos:start="1391:60" pos:end="1391:61"><expr pos:start="1391:60" pos:end="1391:61"><name pos:start="1391:60" pos:end="1391:61">rm</name></expr></argument>, <argument pos:start="1391:64" pos:end="1391:65"><expr pos:start="1391:64" pos:end="1391:65"><literal type="number" pos:start="1391:64" pos:end="1391:65">15</literal></expr></argument>, <argument pos:start="1391:68" pos:end="1391:71"><expr pos:start="1391:68" pos:end="1391:71"><name pos:start="1391:68" pos:end="1391:71">addr</name></expr></argument>, <argument pos:start="1391:74" pos:end="1391:74"><expr pos:start="1391:74" pos:end="1391:74"><literal type="number" pos:start="1391:74" pos:end="1391:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <break pos:start="1393:33" pos:end="1393:38">break;</break>

                            <default pos:start="1395:29" pos:end="1395:36">default:</default>

                                <expr_stmt pos:start="1397:33" pos:end="1397:40"><expr pos:start="1397:33" pos:end="1397:39"><call pos:start="1397:33" pos:end="1397:39"><name pos:start="1397:33" pos:end="1397:37">abort</name><argument_list pos:start="1397:38" pos:end="1397:39">()</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></switch>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1403:25" pos:end="1403:44"><expr pos:start="1403:25" pos:end="1403:43"><call pos:start="1403:25" pos:end="1403:43"><name pos:start="1403:25" pos:end="1403:37">tcg_temp_free</name><argument_list pos:start="1403:38" pos:end="1403:43">(<argument pos:start="1403:39" pos:end="1403:42"><expr pos:start="1403:39" pos:end="1403:42"><name pos:start="1403:39" pos:end="1403:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1405:23" pos:end="1441:21">else <block pos:start="1405:28" pos:end="1441:21">{<block_content pos:start="1409:25" pos:end="1439:47">

                        <comment type="block" pos:start="1407:25" pos:end="1407:45">/* SWP instruction */</comment>

                        <expr_stmt pos:start="1409:25" pos:end="1409:42"><expr pos:start="1409:25" pos:end="1409:41"><name pos:start="1409:25" pos:end="1409:26">rm</name> <operator pos:start="1409:28" pos:end="1409:28">=</operator> <operator pos:start="1409:30" pos:end="1409:30">(</operator><name pos:start="1409:31" pos:end="1409:34">insn</name><operator pos:start="1409:35" pos:end="1409:35">)</operator> <operator pos:start="1409:37" pos:end="1409:37">&amp;</operator> <literal type="number" pos:start="1409:39" pos:end="1409:41">0xf</literal></expr>;</expr_stmt>



                        <comment type="block" pos:start="1413:25" pos:end="1417:52">/* ??? This is not really atomic.  However we know

                           we never have multiple CPUs running in parallel,

                           so it is good enough.  */</comment>

                        <expr_stmt pos:start="1419:25" pos:end="1419:47"><expr pos:start="1419:25" pos:end="1419:46"><name pos:start="1419:25" pos:end="1419:28">addr</name> <operator pos:start="1419:30" pos:end="1419:30">=</operator> <call pos:start="1419:32" pos:end="1419:46"><name pos:start="1419:32" pos:end="1419:39">load_reg</name><argument_list pos:start="1419:40" pos:end="1419:46">(<argument pos:start="1419:41" pos:end="1419:41"><expr pos:start="1419:41" pos:end="1419:41"><name pos:start="1419:41" pos:end="1419:41">s</name></expr></argument>, <argument pos:start="1419:44" pos:end="1419:45"><expr pos:start="1419:44" pos:end="1419:45"><name pos:start="1419:44" pos:end="1419:45">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1421:25" pos:end="1421:46"><expr pos:start="1421:25" pos:end="1421:45"><name pos:start="1421:25" pos:end="1421:27">tmp</name> <operator pos:start="1421:29" pos:end="1421:29">=</operator> <call pos:start="1421:31" pos:end="1421:45"><name pos:start="1421:31" pos:end="1421:38">load_reg</name><argument_list pos:start="1421:39" pos:end="1421:45">(<argument pos:start="1421:40" pos:end="1421:40"><expr pos:start="1421:40" pos:end="1421:40"><name pos:start="1421:40" pos:end="1421:40">s</name></expr></argument>, <argument pos:start="1421:43" pos:end="1421:44"><expr pos:start="1421:43" pos:end="1421:44"><name pos:start="1421:43" pos:end="1421:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1423:25" pos:end="1435:25"><if pos:start="1423:25" pos:end="1429:25">if <condition pos:start="1423:28" pos:end="1423:45">(<expr pos:start="1423:29" pos:end="1423:44"><name pos:start="1423:29" pos:end="1423:32">insn</name> <operator pos:start="1423:34" pos:end="1423:34">&amp;</operator> <operator pos:start="1423:36" pos:end="1423:36">(</operator><literal type="number" pos:start="1423:37" pos:end="1423:37">1</literal> <operator pos:start="1423:39" pos:end="1423:40">&lt;&lt;</operator> <literal type="number" pos:start="1423:42" pos:end="1423:43">22</literal><operator pos:start="1423:44" pos:end="1423:44">)</operator></expr>)</condition> <block pos:start="1423:47" pos:end="1429:25">{<block_content pos:start="1425:29" pos:end="1427:59">

                            <expr_stmt pos:start="1425:29" pos:end="1425:62"><expr pos:start="1425:29" pos:end="1425:61"><name pos:start="1425:29" pos:end="1425:32">tmp2</name> <operator pos:start="1425:34" pos:end="1425:34">=</operator> <call pos:start="1425:36" pos:end="1425:61"><name pos:start="1425:36" pos:end="1425:43">gen_ld8u</name><argument_list pos:start="1425:44" pos:end="1425:61">(<argument pos:start="1425:45" pos:end="1425:48"><expr pos:start="1425:45" pos:end="1425:48"><name pos:start="1425:45" pos:end="1425:48">addr</name></expr></argument>, <argument pos:start="1425:51" pos:end="1425:60"><expr pos:start="1425:51" pos:end="1425:60"><call pos:start="1425:51" pos:end="1425:60"><name pos:start="1425:51" pos:end="1425:57">IS_USER</name><argument_list pos:start="1425:58" pos:end="1425:60">(<argument pos:start="1425:59" pos:end="1425:59"><expr pos:start="1425:59" pos:end="1425:59"><name pos:start="1425:59" pos:end="1425:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1427:29" pos:end="1427:59"><expr pos:start="1427:29" pos:end="1427:58"><call pos:start="1427:29" pos:end="1427:58"><name pos:start="1427:29" pos:end="1427:35">gen_st8</name><argument_list pos:start="1427:36" pos:end="1427:58">(<argument pos:start="1427:37" pos:end="1427:39"><expr pos:start="1427:37" pos:end="1427:39"><name pos:start="1427:37" pos:end="1427:39">tmp</name></expr></argument>, <argument pos:start="1427:42" pos:end="1427:45"><expr pos:start="1427:42" pos:end="1427:45"><name pos:start="1427:42" pos:end="1427:45">addr</name></expr></argument>, <argument pos:start="1427:48" pos:end="1427:57"><expr pos:start="1427:48" pos:end="1427:57"><call pos:start="1427:48" pos:end="1427:57"><name pos:start="1427:48" pos:end="1427:54">IS_USER</name><argument_list pos:start="1427:55" pos:end="1427:57">(<argument pos:start="1427:56" pos:end="1427:56"><expr pos:start="1427:56" pos:end="1427:56"><name pos:start="1427:56" pos:end="1427:56">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1429:27" pos:end="1435:25">else <block pos:start="1429:32" pos:end="1435:25">{<block_content pos:start="1431:29" pos:end="1433:60">

                            <expr_stmt pos:start="1431:29" pos:end="1431:62"><expr pos:start="1431:29" pos:end="1431:61"><name pos:start="1431:29" pos:end="1431:32">tmp2</name> <operator pos:start="1431:34" pos:end="1431:34">=</operator> <call pos:start="1431:36" pos:end="1431:61"><name pos:start="1431:36" pos:end="1431:43">gen_ld32</name><argument_list pos:start="1431:44" pos:end="1431:61">(<argument pos:start="1431:45" pos:end="1431:48"><expr pos:start="1431:45" pos:end="1431:48"><name pos:start="1431:45" pos:end="1431:48">addr</name></expr></argument>, <argument pos:start="1431:51" pos:end="1431:60"><expr pos:start="1431:51" pos:end="1431:60"><call pos:start="1431:51" pos:end="1431:60"><name pos:start="1431:51" pos:end="1431:57">IS_USER</name><argument_list pos:start="1431:58" pos:end="1431:60">(<argument pos:start="1431:59" pos:end="1431:59"><expr pos:start="1431:59" pos:end="1431:59"><name pos:start="1431:59" pos:end="1431:59">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1433:29" pos:end="1433:60"><expr pos:start="1433:29" pos:end="1433:59"><call pos:start="1433:29" pos:end="1433:59"><name pos:start="1433:29" pos:end="1433:36">gen_st32</name><argument_list pos:start="1433:37" pos:end="1433:59">(<argument pos:start="1433:38" pos:end="1433:40"><expr pos:start="1433:38" pos:end="1433:40"><name pos:start="1433:38" pos:end="1433:40">tmp</name></expr></argument>, <argument pos:start="1433:43" pos:end="1433:46"><expr pos:start="1433:43" pos:end="1433:46"><name pos:start="1433:43" pos:end="1433:46">addr</name></expr></argument>, <argument pos:start="1433:49" pos:end="1433:58"><expr pos:start="1433:49" pos:end="1433:58"><call pos:start="1433:49" pos:end="1433:58"><name pos:start="1433:49" pos:end="1433:55">IS_USER</name><argument_list pos:start="1433:56" pos:end="1433:58">(<argument pos:start="1433:57" pos:end="1433:57"><expr pos:start="1433:57" pos:end="1433:57"><name pos:start="1433:57" pos:end="1433:57">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1437:25" pos:end="1437:48"><expr pos:start="1437:25" pos:end="1437:47"><call pos:start="1437:25" pos:end="1437:47"><name pos:start="1437:25" pos:end="1437:41">tcg_temp_free_i32</name><argument_list pos:start="1437:42" pos:end="1437:47">(<argument pos:start="1437:43" pos:end="1437:46"><expr pos:start="1437:43" pos:end="1437:46"><name pos:start="1437:43" pos:end="1437:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1439:25" pos:end="1439:47"><expr pos:start="1439:25" pos:end="1439:46"><call pos:start="1439:25" pos:end="1439:46"><name pos:start="1439:25" pos:end="1439:33">store_reg</name><argument_list pos:start="1439:34" pos:end="1439:46">(<argument pos:start="1439:35" pos:end="1439:35"><expr pos:start="1439:35" pos:end="1439:35"><name pos:start="1439:35" pos:end="1439:35">s</name></expr></argument>, <argument pos:start="1439:38" pos:end="1439:39"><expr pos:start="1439:38" pos:end="1439:39"><name pos:start="1439:38" pos:end="1439:39">rd</name></expr></argument>, <argument pos:start="1439:42" pos:end="1439:45"><expr pos:start="1439:42" pos:end="1439:45"><name pos:start="1439:42" pos:end="1439:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1445:15" pos:end="1583:13">else <block pos:start="1445:20" pos:end="1583:13">{<block_content pos:start="1447:17" pos:end="1581:17">

                <decl_stmt pos:start="1447:17" pos:end="1447:35"><decl pos:start="1447:17" pos:end="1447:34"><type pos:start="1447:17" pos:end="1447:19"><name pos:start="1447:17" pos:end="1447:19">int</name></type> <name pos:start="1447:21" pos:end="1447:34">address_offset</name></decl>;</decl_stmt>

                <decl_stmt pos:start="1449:17" pos:end="1449:25"><decl pos:start="1449:17" pos:end="1449:24"><type pos:start="1449:17" pos:end="1449:19"><name pos:start="1449:17" pos:end="1449:19">int</name></type> <name pos:start="1449:21" pos:end="1449:24">load</name></decl>;</decl_stmt>

                <comment type="block" pos:start="1451:17" pos:end="1451:37">/* Misc load/store */</comment>

                <expr_stmt pos:start="1453:17" pos:end="1453:40"><expr pos:start="1453:17" pos:end="1453:39"><name pos:start="1453:17" pos:end="1453:18">rn</name> <operator pos:start="1453:20" pos:end="1453:20">=</operator> <operator pos:start="1453:22" pos:end="1453:22">(</operator><name pos:start="1453:23" pos:end="1453:26">insn</name> <operator pos:start="1453:28" pos:end="1453:29">&gt;&gt;</operator> <literal type="number" pos:start="1453:31" pos:end="1453:32">16</literal><operator pos:start="1453:33" pos:end="1453:33">)</operator> <operator pos:start="1453:35" pos:end="1453:35">&amp;</operator> <literal type="number" pos:start="1453:37" pos:end="1453:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1455:17" pos:end="1455:40"><expr pos:start="1455:17" pos:end="1455:39"><name pos:start="1455:17" pos:end="1455:18">rd</name> <operator pos:start="1455:20" pos:end="1455:20">=</operator> <operator pos:start="1455:22" pos:end="1455:22">(</operator><name pos:start="1455:23" pos:end="1455:26">insn</name> <operator pos:start="1455:28" pos:end="1455:29">&gt;&gt;</operator> <literal type="number" pos:start="1455:31" pos:end="1455:32">12</literal><operator pos:start="1455:33" pos:end="1455:33">)</operator> <operator pos:start="1455:35" pos:end="1455:35">&amp;</operator> <literal type="number" pos:start="1455:37" pos:end="1455:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1457:17" pos:end="1457:39"><expr pos:start="1457:17" pos:end="1457:38"><name pos:start="1457:17" pos:end="1457:20">addr</name> <operator pos:start="1457:22" pos:end="1457:22">=</operator> <call pos:start="1457:24" pos:end="1457:38"><name pos:start="1457:24" pos:end="1457:31">load_reg</name><argument_list pos:start="1457:32" pos:end="1457:38">(<argument pos:start="1457:33" pos:end="1457:33"><expr pos:start="1457:33" pos:end="1457:33"><name pos:start="1457:33" pos:end="1457:33">s</name></expr></argument>, <argument pos:start="1457:36" pos:end="1457:37"><expr pos:start="1457:36" pos:end="1457:37"><name pos:start="1457:36" pos:end="1457:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1459:17" pos:end="1461:59"><if pos:start="1459:17" pos:end="1461:59">if <condition pos:start="1459:20" pos:end="1459:37">(<expr pos:start="1459:21" pos:end="1459:36"><name pos:start="1459:21" pos:end="1459:24">insn</name> <operator pos:start="1459:26" pos:end="1459:26">&amp;</operator> <operator pos:start="1459:28" pos:end="1459:28">(</operator><literal type="number" pos:start="1459:29" pos:end="1459:29">1</literal> <operator pos:start="1459:31" pos:end="1459:32">&lt;&lt;</operator> <literal type="number" pos:start="1459:34" pos:end="1459:35">24</literal><operator pos:start="1459:36" pos:end="1459:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1461:21" pos:end="1461:59"><block_content pos:start="1461:21" pos:end="1461:59">

                    <expr_stmt pos:start="1461:21" pos:end="1461:59"><expr pos:start="1461:21" pos:end="1461:58"><call pos:start="1461:21" pos:end="1461:58"><name pos:start="1461:21" pos:end="1461:40">gen_add_datah_offset</name><argument_list pos:start="1461:41" pos:end="1461:58">(<argument pos:start="1461:42" pos:end="1461:42"><expr pos:start="1461:42" pos:end="1461:42"><name pos:start="1461:42" pos:end="1461:42">s</name></expr></argument>, <argument pos:start="1461:45" pos:end="1461:48"><expr pos:start="1461:45" pos:end="1461:48"><name pos:start="1461:45" pos:end="1461:48">insn</name></expr></argument>, <argument pos:start="1461:51" pos:end="1461:51"><expr pos:start="1461:51" pos:end="1461:51"><literal type="number" pos:start="1461:51" pos:end="1461:51">0</literal></expr></argument>, <argument pos:start="1461:54" pos:end="1461:57"><expr pos:start="1461:54" pos:end="1461:57"><name pos:start="1461:54" pos:end="1461:57">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1463:17" pos:end="1463:35"><expr pos:start="1463:17" pos:end="1463:34"><name pos:start="1463:17" pos:end="1463:30">address_offset</name> <operator pos:start="1463:32" pos:end="1463:32">=</operator> <literal type="number" pos:start="1463:34" pos:end="1463:34">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1465:17" pos:end="1545:17"><if pos:start="1465:17" pos:end="1495:17">if <condition pos:start="1465:20" pos:end="1465:37">(<expr pos:start="1465:21" pos:end="1465:36"><name pos:start="1465:21" pos:end="1465:24">insn</name> <operator pos:start="1465:26" pos:end="1465:26">&amp;</operator> <operator pos:start="1465:28" pos:end="1465:28">(</operator><literal type="number" pos:start="1465:29" pos:end="1465:29">1</literal> <operator pos:start="1465:31" pos:end="1465:32">&lt;&lt;</operator> <literal type="number" pos:start="1465:34" pos:end="1465:35">20</literal><operator pos:start="1465:36" pos:end="1465:36">)</operator></expr>)</condition> <block pos:start="1465:39" pos:end="1495:17">{<block_content pos:start="1469:21" pos:end="1493:29">

                    <comment type="block" pos:start="1467:21" pos:end="1467:30">/* load */</comment>

                    <switch pos:start="1469:21" pos:end="1491:21">switch<condition pos:start="1469:27" pos:end="1469:30">(<expr pos:start="1469:28" pos:end="1469:29"><name pos:start="1469:28" pos:end="1469:29">sh</name></expr>)</condition> <block pos:start="1469:32" pos:end="1491:21">{<block_content pos:start="1471:21" pos:end="1489:30">

                    <case pos:start="1471:21" pos:end="1471:27">case <expr pos:start="1471:26" pos:end="1471:26"><literal type="number" pos:start="1471:26" pos:end="1471:26">1</literal></expr>:</case>

                        <expr_stmt pos:start="1473:25" pos:end="1473:58"><expr pos:start="1473:25" pos:end="1473:57"><name pos:start="1473:25" pos:end="1473:27">tmp</name> <operator pos:start="1473:29" pos:end="1473:29">=</operator> <call pos:start="1473:31" pos:end="1473:57"><name pos:start="1473:31" pos:end="1473:39">gen_ld16u</name><argument_list pos:start="1473:40" pos:end="1473:57">(<argument pos:start="1473:41" pos:end="1473:44"><expr pos:start="1473:41" pos:end="1473:44"><name pos:start="1473:41" pos:end="1473:44">addr</name></expr></argument>, <argument pos:start="1473:47" pos:end="1473:56"><expr pos:start="1473:47" pos:end="1473:56"><call pos:start="1473:47" pos:end="1473:56"><name pos:start="1473:47" pos:end="1473:53">IS_USER</name><argument_list pos:start="1473:54" pos:end="1473:56">(<argument pos:start="1473:55" pos:end="1473:55"><expr pos:start="1473:55" pos:end="1473:55"><name pos:start="1473:55" pos:end="1473:55">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1475:25" pos:end="1475:30">break;</break>

                    <case pos:start="1477:21" pos:end="1477:27">case <expr pos:start="1477:26" pos:end="1477:26"><literal type="number" pos:start="1477:26" pos:end="1477:26">2</literal></expr>:</case>

                        <expr_stmt pos:start="1479:25" pos:end="1479:57"><expr pos:start="1479:25" pos:end="1479:56"><name pos:start="1479:25" pos:end="1479:27">tmp</name> <operator pos:start="1479:29" pos:end="1479:29">=</operator> <call pos:start="1479:31" pos:end="1479:56"><name pos:start="1479:31" pos:end="1479:38">gen_ld8s</name><argument_list pos:start="1479:39" pos:end="1479:56">(<argument pos:start="1479:40" pos:end="1479:43"><expr pos:start="1479:40" pos:end="1479:43"><name pos:start="1479:40" pos:end="1479:43">addr</name></expr></argument>, <argument pos:start="1479:46" pos:end="1479:55"><expr pos:start="1479:46" pos:end="1479:55"><call pos:start="1479:46" pos:end="1479:55"><name pos:start="1479:46" pos:end="1479:52">IS_USER</name><argument_list pos:start="1479:53" pos:end="1479:55">(<argument pos:start="1479:54" pos:end="1479:54"><expr pos:start="1479:54" pos:end="1479:54"><name pos:start="1479:54" pos:end="1479:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1481:25" pos:end="1481:30">break;</break>

                    <default pos:start="1483:21" pos:end="1483:28">default:</default>

                    <case pos:start="1485:21" pos:end="1485:27">case <expr pos:start="1485:26" pos:end="1485:26"><literal type="number" pos:start="1485:26" pos:end="1485:26">3</literal></expr>:</case>

                        <expr_stmt pos:start="1487:25" pos:end="1487:58"><expr pos:start="1487:25" pos:end="1487:57"><name pos:start="1487:25" pos:end="1487:27">tmp</name> <operator pos:start="1487:29" pos:end="1487:29">=</operator> <call pos:start="1487:31" pos:end="1487:57"><name pos:start="1487:31" pos:end="1487:39">gen_ld16s</name><argument_list pos:start="1487:40" pos:end="1487:57">(<argument pos:start="1487:41" pos:end="1487:44"><expr pos:start="1487:41" pos:end="1487:44"><name pos:start="1487:41" pos:end="1487:44">addr</name></expr></argument>, <argument pos:start="1487:47" pos:end="1487:56"><expr pos:start="1487:47" pos:end="1487:56"><call pos:start="1487:47" pos:end="1487:56"><name pos:start="1487:47" pos:end="1487:53">IS_USER</name><argument_list pos:start="1487:54" pos:end="1487:56">(<argument pos:start="1487:55" pos:end="1487:55"><expr pos:start="1487:55" pos:end="1487:55"><name pos:start="1487:55" pos:end="1487:55">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1489:25" pos:end="1489:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1493:21" pos:end="1493:29"><expr pos:start="1493:21" pos:end="1493:28"><name pos:start="1493:21" pos:end="1493:24">load</name> <operator pos:start="1493:26" pos:end="1493:26">=</operator> <literal type="number" pos:start="1493:28" pos:end="1493:28">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1495:19" pos:end="1535:17">else if <condition pos:start="1495:27" pos:end="1495:34">(<expr pos:start="1495:28" pos:end="1495:33"><name pos:start="1495:28" pos:end="1495:29">sh</name> <operator pos:start="1495:31" pos:end="1495:31">&amp;</operator> <literal type="number" pos:start="1495:33" pos:end="1495:33">2</literal></expr>)</condition> <block pos:start="1495:36" pos:end="1535:17">{<block_content pos:start="1499:21" pos:end="1533:40">

                    <comment type="block" pos:start="1497:21" pos:end="1497:36">/* doubleword */</comment>

                    <if_stmt pos:start="1499:21" pos:end="1531:21"><if pos:start="1499:21" pos:end="1515:21">if <condition pos:start="1499:24" pos:end="1499:31">(<expr pos:start="1499:25" pos:end="1499:30"><name pos:start="1499:25" pos:end="1499:26">sh</name> <operator pos:start="1499:28" pos:end="1499:28">&amp;</operator> <literal type="number" pos:start="1499:30" pos:end="1499:30">1</literal></expr>)</condition> <block pos:start="1499:33" pos:end="1515:21">{<block_content pos:start="1503:25" pos:end="1513:33">

                        <comment type="block" pos:start="1501:25" pos:end="1501:35">/* store */</comment>

                        <expr_stmt pos:start="1503:25" pos:end="1503:46"><expr pos:start="1503:25" pos:end="1503:45"><name pos:start="1503:25" pos:end="1503:27">tmp</name> <operator pos:start="1503:29" pos:end="1503:29">=</operator> <call pos:start="1503:31" pos:end="1503:45"><name pos:start="1503:31" pos:end="1503:38">load_reg</name><argument_list pos:start="1503:39" pos:end="1503:45">(<argument pos:start="1503:40" pos:end="1503:40"><expr pos:start="1503:40" pos:end="1503:40"><name pos:start="1503:40" pos:end="1503:40">s</name></expr></argument>, <argument pos:start="1503:43" pos:end="1503:44"><expr pos:start="1503:43" pos:end="1503:44"><name pos:start="1503:43" pos:end="1503:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1505:25" pos:end="1505:56"><expr pos:start="1505:25" pos:end="1505:55"><call pos:start="1505:25" pos:end="1505:55"><name pos:start="1505:25" pos:end="1505:32">gen_st32</name><argument_list pos:start="1505:33" pos:end="1505:55">(<argument pos:start="1505:34" pos:end="1505:36"><expr pos:start="1505:34" pos:end="1505:36"><name pos:start="1505:34" pos:end="1505:36">tmp</name></expr></argument>, <argument pos:start="1505:39" pos:end="1505:42"><expr pos:start="1505:39" pos:end="1505:42"><name pos:start="1505:39" pos:end="1505:42">addr</name></expr></argument>, <argument pos:start="1505:45" pos:end="1505:54"><expr pos:start="1505:45" pos:end="1505:54"><call pos:start="1505:45" pos:end="1505:54"><name pos:start="1505:45" pos:end="1505:51">IS_USER</name><argument_list pos:start="1505:52" pos:end="1505:54">(<argument pos:start="1505:53" pos:end="1505:53"><expr pos:start="1505:53" pos:end="1505:53"><name pos:start="1505:53" pos:end="1505:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1507:25" pos:end="1507:56"><expr pos:start="1507:25" pos:end="1507:55"><call pos:start="1507:25" pos:end="1507:55"><name pos:start="1507:25" pos:end="1507:40">tcg_gen_addi_i32</name><argument_list pos:start="1507:41" pos:end="1507:55">(<argument pos:start="1507:42" pos:end="1507:45"><expr pos:start="1507:42" pos:end="1507:45"><name pos:start="1507:42" pos:end="1507:45">addr</name></expr></argument>, <argument pos:start="1507:48" pos:end="1507:51"><expr pos:start="1507:48" pos:end="1507:51"><name pos:start="1507:48" pos:end="1507:51">addr</name></expr></argument>, <argument pos:start="1507:54" pos:end="1507:54"><expr pos:start="1507:54" pos:end="1507:54"><literal type="number" pos:start="1507:54" pos:end="1507:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1509:25" pos:end="1509:50"><expr pos:start="1509:25" pos:end="1509:49"><name pos:start="1509:25" pos:end="1509:27">tmp</name> <operator pos:start="1509:29" pos:end="1509:29">=</operator> <call pos:start="1509:31" pos:end="1509:49"><name pos:start="1509:31" pos:end="1509:38">load_reg</name><argument_list pos:start="1509:39" pos:end="1509:49">(<argument pos:start="1509:40" pos:end="1509:40"><expr pos:start="1509:40" pos:end="1509:40"><name pos:start="1509:40" pos:end="1509:40">s</name></expr></argument>, <argument pos:start="1509:43" pos:end="1509:48"><expr pos:start="1509:43" pos:end="1509:48"><name pos:start="1509:43" pos:end="1509:44">rd</name> <operator pos:start="1509:46" pos:end="1509:46">+</operator> <literal type="number" pos:start="1509:48" pos:end="1509:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1511:25" pos:end="1511:56"><expr pos:start="1511:25" pos:end="1511:55"><call pos:start="1511:25" pos:end="1511:55"><name pos:start="1511:25" pos:end="1511:32">gen_st32</name><argument_list pos:start="1511:33" pos:end="1511:55">(<argument pos:start="1511:34" pos:end="1511:36"><expr pos:start="1511:34" pos:end="1511:36"><name pos:start="1511:34" pos:end="1511:36">tmp</name></expr></argument>, <argument pos:start="1511:39" pos:end="1511:42"><expr pos:start="1511:39" pos:end="1511:42"><name pos:start="1511:39" pos:end="1511:42">addr</name></expr></argument>, <argument pos:start="1511:45" pos:end="1511:54"><expr pos:start="1511:45" pos:end="1511:54"><call pos:start="1511:45" pos:end="1511:54"><name pos:start="1511:45" pos:end="1511:51">IS_USER</name><argument_list pos:start="1511:52" pos:end="1511:54">(<argument pos:start="1511:53" pos:end="1511:53"><expr pos:start="1511:53" pos:end="1511:53"><name pos:start="1511:53" pos:end="1511:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1513:25" pos:end="1513:33"><expr pos:start="1513:25" pos:end="1513:32"><name pos:start="1513:25" pos:end="1513:28">load</name> <operator pos:start="1513:30" pos:end="1513:30">=</operator> <literal type="number" pos:start="1513:32" pos:end="1513:32">0</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1515:23" pos:end="1531:21">else <block pos:start="1515:28" pos:end="1531:21">{<block_content pos:start="1519:25" pos:end="1529:33">

                        <comment type="block" pos:start="1517:25" pos:end="1517:34">/* load */</comment>

                        <expr_stmt pos:start="1519:25" pos:end="1519:57"><expr pos:start="1519:25" pos:end="1519:56"><name pos:start="1519:25" pos:end="1519:27">tmp</name> <operator pos:start="1519:29" pos:end="1519:29">=</operator> <call pos:start="1519:31" pos:end="1519:56"><name pos:start="1519:31" pos:end="1519:38">gen_ld32</name><argument_list pos:start="1519:39" pos:end="1519:56">(<argument pos:start="1519:40" pos:end="1519:43"><expr pos:start="1519:40" pos:end="1519:43"><name pos:start="1519:40" pos:end="1519:43">addr</name></expr></argument>, <argument pos:start="1519:46" pos:end="1519:55"><expr pos:start="1519:46" pos:end="1519:55"><call pos:start="1519:46" pos:end="1519:55"><name pos:start="1519:46" pos:end="1519:52">IS_USER</name><argument_list pos:start="1519:53" pos:end="1519:55">(<argument pos:start="1519:54" pos:end="1519:54"><expr pos:start="1519:54" pos:end="1519:54"><name pos:start="1519:54" pos:end="1519:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1521:25" pos:end="1521:46"><expr pos:start="1521:25" pos:end="1521:45"><call pos:start="1521:25" pos:end="1521:45"><name pos:start="1521:25" pos:end="1521:33">store_reg</name><argument_list pos:start="1521:34" pos:end="1521:45">(<argument pos:start="1521:35" pos:end="1521:35"><expr pos:start="1521:35" pos:end="1521:35"><name pos:start="1521:35" pos:end="1521:35">s</name></expr></argument>, <argument pos:start="1521:38" pos:end="1521:39"><expr pos:start="1521:38" pos:end="1521:39"><name pos:start="1521:38" pos:end="1521:39">rd</name></expr></argument>, <argument pos:start="1521:42" pos:end="1521:44"><expr pos:start="1521:42" pos:end="1521:44"><name pos:start="1521:42" pos:end="1521:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1523:25" pos:end="1523:56"><expr pos:start="1523:25" pos:end="1523:55"><call pos:start="1523:25" pos:end="1523:55"><name pos:start="1523:25" pos:end="1523:40">tcg_gen_addi_i32</name><argument_list pos:start="1523:41" pos:end="1523:55">(<argument pos:start="1523:42" pos:end="1523:45"><expr pos:start="1523:42" pos:end="1523:45"><name pos:start="1523:42" pos:end="1523:45">addr</name></expr></argument>, <argument pos:start="1523:48" pos:end="1523:51"><expr pos:start="1523:48" pos:end="1523:51"><name pos:start="1523:48" pos:end="1523:51">addr</name></expr></argument>, <argument pos:start="1523:54" pos:end="1523:54"><expr pos:start="1523:54" pos:end="1523:54"><literal type="number" pos:start="1523:54" pos:end="1523:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1525:25" pos:end="1525:57"><expr pos:start="1525:25" pos:end="1525:56"><name pos:start="1525:25" pos:end="1525:27">tmp</name> <operator pos:start="1525:29" pos:end="1525:29">=</operator> <call pos:start="1525:31" pos:end="1525:56"><name pos:start="1525:31" pos:end="1525:38">gen_ld32</name><argument_list pos:start="1525:39" pos:end="1525:56">(<argument pos:start="1525:40" pos:end="1525:43"><expr pos:start="1525:40" pos:end="1525:43"><name pos:start="1525:40" pos:end="1525:43">addr</name></expr></argument>, <argument pos:start="1525:46" pos:end="1525:55"><expr pos:start="1525:46" pos:end="1525:55"><call pos:start="1525:46" pos:end="1525:55"><name pos:start="1525:46" pos:end="1525:52">IS_USER</name><argument_list pos:start="1525:53" pos:end="1525:55">(<argument pos:start="1525:54" pos:end="1525:54"><expr pos:start="1525:54" pos:end="1525:54"><name pos:start="1525:54" pos:end="1525:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1527:25" pos:end="1527:29"><expr pos:start="1527:25" pos:end="1527:28"><name pos:start="1527:25" pos:end="1527:26">rd</name><operator pos:start="1527:27" pos:end="1527:28">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="1529:25" pos:end="1529:33"><expr pos:start="1529:25" pos:end="1529:32"><name pos:start="1529:25" pos:end="1529:28">load</name> <operator pos:start="1529:30" pos:end="1529:30">=</operator> <literal type="number" pos:start="1529:32" pos:end="1529:32">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1533:21" pos:end="1533:40"><expr pos:start="1533:21" pos:end="1533:39"><name pos:start="1533:21" pos:end="1533:34">address_offset</name> <operator pos:start="1533:36" pos:end="1533:36">=</operator> <operator pos:start="1533:38" pos:end="1533:38">-</operator><literal type="number" pos:start="1533:39" pos:end="1533:39">4</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1535:19" pos:end="1545:17">else <block pos:start="1535:24" pos:end="1545:17">{<block_content pos:start="1539:21" pos:end="1543:29">

                    <comment type="block" pos:start="1537:21" pos:end="1537:31">/* store */</comment>

                    <expr_stmt pos:start="1539:21" pos:end="1539:42"><expr pos:start="1539:21" pos:end="1539:41"><name pos:start="1539:21" pos:end="1539:23">tmp</name> <operator pos:start="1539:25" pos:end="1539:25">=</operator> <call pos:start="1539:27" pos:end="1539:41"><name pos:start="1539:27" pos:end="1539:34">load_reg</name><argument_list pos:start="1539:35" pos:end="1539:41">(<argument pos:start="1539:36" pos:end="1539:36"><expr pos:start="1539:36" pos:end="1539:36"><name pos:start="1539:36" pos:end="1539:36">s</name></expr></argument>, <argument pos:start="1539:39" pos:end="1539:40"><expr pos:start="1539:39" pos:end="1539:40"><name pos:start="1539:39" pos:end="1539:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1541:21" pos:end="1541:52"><expr pos:start="1541:21" pos:end="1541:51"><call pos:start="1541:21" pos:end="1541:51"><name pos:start="1541:21" pos:end="1541:28">gen_st16</name><argument_list pos:start="1541:29" pos:end="1541:51">(<argument pos:start="1541:30" pos:end="1541:32"><expr pos:start="1541:30" pos:end="1541:32"><name pos:start="1541:30" pos:end="1541:32">tmp</name></expr></argument>, <argument pos:start="1541:35" pos:end="1541:38"><expr pos:start="1541:35" pos:end="1541:38"><name pos:start="1541:35" pos:end="1541:38">addr</name></expr></argument>, <argument pos:start="1541:41" pos:end="1541:50"><expr pos:start="1541:41" pos:end="1541:50"><call pos:start="1541:41" pos:end="1541:50"><name pos:start="1541:41" pos:end="1541:47">IS_USER</name><argument_list pos:start="1541:48" pos:end="1541:50">(<argument pos:start="1541:49" pos:end="1541:49"><expr pos:start="1541:49" pos:end="1541:49"><name pos:start="1541:49" pos:end="1541:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1543:21" pos:end="1543:29"><expr pos:start="1543:21" pos:end="1543:28"><name pos:start="1543:21" pos:end="1543:24">load</name> <operator pos:start="1543:26" pos:end="1543:26">=</operator> <literal type="number" pos:start="1543:28" pos:end="1543:28">0</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <comment type="block" pos:start="1547:17" pos:end="1553:63">/* Perform base writeback before the loaded value to

                   ensure correct behavior with overlapping index registers.

                   ldrd with base writeback is is undefined if the

                   destination and index registers overlap.  */</comment>

                <if_stmt pos:start="1555:17" pos:end="1573:17"><if pos:start="1555:17" pos:end="1561:17">if <condition pos:start="1555:20" pos:end="1555:40">(<expr pos:start="1555:21" pos:end="1555:39"><operator pos:start="1555:21" pos:end="1555:21">!</operator><operator pos:start="1555:22" pos:end="1555:22">(</operator><name pos:start="1555:23" pos:end="1555:26">insn</name> <operator pos:start="1555:28" pos:end="1555:28">&amp;</operator> <operator pos:start="1555:30" pos:end="1555:30">(</operator><literal type="number" pos:start="1555:31" pos:end="1555:31">1</literal> <operator pos:start="1555:33" pos:end="1555:34">&lt;&lt;</operator> <literal type="number" pos:start="1555:36" pos:end="1555:37">24</literal><operator pos:start="1555:38" pos:end="1555:38">)</operator><operator pos:start="1555:39" pos:end="1555:39">)</operator></expr>)</condition> <block pos:start="1555:42" pos:end="1561:17">{<block_content pos:start="1557:21" pos:end="1559:43">

                    <expr_stmt pos:start="1557:21" pos:end="1557:72"><expr pos:start="1557:21" pos:end="1557:71"><call pos:start="1557:21" pos:end="1557:71"><name pos:start="1557:21" pos:end="1557:40">gen_add_datah_offset</name><argument_list pos:start="1557:41" pos:end="1557:71">(<argument pos:start="1557:42" pos:end="1557:42"><expr pos:start="1557:42" pos:end="1557:42"><name pos:start="1557:42" pos:end="1557:42">s</name></expr></argument>, <argument pos:start="1557:45" pos:end="1557:48"><expr pos:start="1557:45" pos:end="1557:48"><name pos:start="1557:45" pos:end="1557:48">insn</name></expr></argument>, <argument pos:start="1557:51" pos:end="1557:64"><expr pos:start="1557:51" pos:end="1557:64"><name pos:start="1557:51" pos:end="1557:64">address_offset</name></expr></argument>, <argument pos:start="1557:67" pos:end="1557:70"><expr pos:start="1557:67" pos:end="1557:70"><name pos:start="1557:67" pos:end="1557:70">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1559:21" pos:end="1559:43"><expr pos:start="1559:21" pos:end="1559:42"><call pos:start="1559:21" pos:end="1559:42"><name pos:start="1559:21" pos:end="1559:29">store_reg</name><argument_list pos:start="1559:30" pos:end="1559:42">(<argument pos:start="1559:31" pos:end="1559:31"><expr pos:start="1559:31" pos:end="1559:31"><name pos:start="1559:31" pos:end="1559:31">s</name></expr></argument>, <argument pos:start="1559:34" pos:end="1559:35"><expr pos:start="1559:34" pos:end="1559:35"><name pos:start="1559:34" pos:end="1559:35">rn</name></expr></argument>, <argument pos:start="1559:38" pos:end="1559:41"><expr pos:start="1559:38" pos:end="1559:41"><name pos:start="1559:38" pos:end="1559:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1561:19" pos:end="1569:17">else if <condition pos:start="1561:27" pos:end="1561:44">(<expr pos:start="1561:28" pos:end="1561:43"><name pos:start="1561:28" pos:end="1561:31">insn</name> <operator pos:start="1561:33" pos:end="1561:33">&amp;</operator> <operator pos:start="1561:35" pos:end="1561:35">(</operator><literal type="number" pos:start="1561:36" pos:end="1561:36">1</literal> <operator pos:start="1561:38" pos:end="1561:39">&lt;&lt;</operator> <literal type="number" pos:start="1561:41" pos:end="1561:42">21</literal><operator pos:start="1561:43" pos:end="1561:43">)</operator></expr>)</condition> <block pos:start="1561:46" pos:end="1569:17">{<block_content pos:start="1563:21" pos:end="1567:43">

                    <if_stmt pos:start="1563:21" pos:end="1565:69"><if pos:start="1563:21" pos:end="1565:69">if <condition pos:start="1563:24" pos:end="1563:39">(<expr pos:start="1563:25" pos:end="1563:38"><name pos:start="1563:25" pos:end="1563:38">address_offset</name></expr>)</condition><block type="pseudo" pos:start="1565:25" pos:end="1565:69"><block_content pos:start="1565:25" pos:end="1565:69">

                        <expr_stmt pos:start="1565:25" pos:end="1565:69"><expr pos:start="1565:25" pos:end="1565:68"><call pos:start="1565:25" pos:end="1565:68"><name pos:start="1565:25" pos:end="1565:40">tcg_gen_addi_i32</name><argument_list pos:start="1565:41" pos:end="1565:68">(<argument pos:start="1565:42" pos:end="1565:45"><expr pos:start="1565:42" pos:end="1565:45"><name pos:start="1565:42" pos:end="1565:45">addr</name></expr></argument>, <argument pos:start="1565:48" pos:end="1565:51"><expr pos:start="1565:48" pos:end="1565:51"><name pos:start="1565:48" pos:end="1565:51">addr</name></expr></argument>, <argument pos:start="1565:54" pos:end="1565:67"><expr pos:start="1565:54" pos:end="1565:67"><name pos:start="1565:54" pos:end="1565:67">address_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1567:21" pos:end="1567:43"><expr pos:start="1567:21" pos:end="1567:42"><call pos:start="1567:21" pos:end="1567:42"><name pos:start="1567:21" pos:end="1567:29">store_reg</name><argument_list pos:start="1567:30" pos:end="1567:42">(<argument pos:start="1567:31" pos:end="1567:31"><expr pos:start="1567:31" pos:end="1567:31"><name pos:start="1567:31" pos:end="1567:31">s</name></expr></argument>, <argument pos:start="1567:34" pos:end="1567:35"><expr pos:start="1567:34" pos:end="1567:35"><name pos:start="1567:34" pos:end="1567:35">rn</name></expr></argument>, <argument pos:start="1567:38" pos:end="1567:41"><expr pos:start="1567:38" pos:end="1567:41"><name pos:start="1567:38" pos:end="1567:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1569:19" pos:end="1573:17">else <block pos:start="1569:24" pos:end="1573:17">{<block_content pos:start="1571:21" pos:end="1571:44">

                    <expr_stmt pos:start="1571:21" pos:end="1571:44"><expr pos:start="1571:21" pos:end="1571:43"><call pos:start="1571:21" pos:end="1571:43"><name pos:start="1571:21" pos:end="1571:37">tcg_temp_free_i32</name><argument_list pos:start="1571:38" pos:end="1571:43">(<argument pos:start="1571:39" pos:end="1571:42"><expr pos:start="1571:39" pos:end="1571:42"><name pos:start="1571:39" pos:end="1571:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1575:17" pos:end="1581:17"><if pos:start="1575:17" pos:end="1581:17">if <condition pos:start="1575:20" pos:end="1575:25">(<expr pos:start="1575:21" pos:end="1575:24"><name pos:start="1575:21" pos:end="1575:24">load</name></expr>)</condition> <block pos:start="1575:27" pos:end="1581:17">{<block_content pos:start="1579:21" pos:end="1579:42">

                    <comment type="block" pos:start="1577:21" pos:end="1577:45">/* Complete the load.  */</comment>

                    <expr_stmt pos:start="1579:21" pos:end="1579:42"><expr pos:start="1579:21" pos:end="1579:41"><call pos:start="1579:21" pos:end="1579:41"><name pos:start="1579:21" pos:end="1579:29">store_reg</name><argument_list pos:start="1579:30" pos:end="1579:41">(<argument pos:start="1579:31" pos:end="1579:31"><expr pos:start="1579:31" pos:end="1579:31"><name pos:start="1579:31" pos:end="1579:31">s</name></expr></argument>, <argument pos:start="1579:34" pos:end="1579:35"><expr pos:start="1579:34" pos:end="1579:35"><name pos:start="1579:34" pos:end="1579:35">rd</name></expr></argument>, <argument pos:start="1579:38" pos:end="1579:40"><expr pos:start="1579:38" pos:end="1579:40"><name pos:start="1579:38" pos:end="1579:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1585:13" pos:end="1585:18">break;</break>

        <case pos:start="1587:9" pos:end="1587:17">case <expr pos:start="1587:14" pos:end="1587:16"><literal type="number" pos:start="1587:14" pos:end="1587:16">0x4</literal></expr>:</case>

        <case pos:start="1589:9" pos:end="1589:17">case <expr pos:start="1589:14" pos:end="1589:16"><literal type="number" pos:start="1589:14" pos:end="1589:16">0x5</literal></expr>:</case>

            <goto pos:start="1591:13" pos:end="1591:25">goto <name pos:start="1591:18" pos:end="1591:24">do_ldst</name>;</goto>

        <case pos:start="1593:9" pos:end="1593:17">case <expr pos:start="1593:14" pos:end="1593:16"><literal type="number" pos:start="1593:14" pos:end="1593:16">0x6</literal></expr>:</case>

        <case pos:start="1595:9" pos:end="1595:17">case <expr pos:start="1595:14" pos:end="1595:16"><literal type="number" pos:start="1595:14" pos:end="1595:16">0x7</literal></expr>:</case>

            <if_stmt pos:start="1597:13" pos:end="2091:13"><if pos:start="1597:13" pos:end="2091:13">if <condition pos:start="1597:16" pos:end="1597:32">(<expr pos:start="1597:17" pos:end="1597:31"><name pos:start="1597:17" pos:end="1597:20">insn</name> <operator pos:start="1597:22" pos:end="1597:22">&amp;</operator> <operator pos:start="1597:24" pos:end="1597:24">(</operator><literal type="number" pos:start="1597:25" pos:end="1597:25">1</literal> <operator pos:start="1597:27" pos:end="1597:28">&lt;&lt;</operator> <literal type="number" pos:start="1597:30" pos:end="1597:30">4</literal><operator pos:start="1597:31" pos:end="1597:31">)</operator></expr>)</condition> <block pos:start="1597:34" pos:end="2091:13">{<block_content pos:start="1599:17" pos:end="2089:22">

                <expr_stmt pos:start="1599:17" pos:end="1599:24"><expr pos:start="1599:17" pos:end="1599:23"><call pos:start="1599:17" pos:end="1599:23"><name pos:start="1599:17" pos:end="1599:20">ARCH</name><argument_list pos:start="1599:21" pos:end="1599:23">(<argument pos:start="1599:22" pos:end="1599:22"><expr pos:start="1599:22" pos:end="1599:22"><literal type="number" pos:start="1599:22" pos:end="1599:22">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1601:17" pos:end="1601:48">/* Armv6 Media instructions.  */</comment>

                <expr_stmt pos:start="1603:17" pos:end="1603:32"><expr pos:start="1603:17" pos:end="1603:31"><name pos:start="1603:17" pos:end="1603:18">rm</name> <operator pos:start="1603:20" pos:end="1603:20">=</operator> <name pos:start="1603:22" pos:end="1603:25">insn</name> <operator pos:start="1603:27" pos:end="1603:27">&amp;</operator> <literal type="number" pos:start="1603:29" pos:end="1603:31">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1605:17" pos:end="1605:40"><expr pos:start="1605:17" pos:end="1605:39"><name pos:start="1605:17" pos:end="1605:18">rn</name> <operator pos:start="1605:20" pos:end="1605:20">=</operator> <operator pos:start="1605:22" pos:end="1605:22">(</operator><name pos:start="1605:23" pos:end="1605:26">insn</name> <operator pos:start="1605:28" pos:end="1605:29">&gt;&gt;</operator> <literal type="number" pos:start="1605:31" pos:end="1605:32">16</literal><operator pos:start="1605:33" pos:end="1605:33">)</operator> <operator pos:start="1605:35" pos:end="1605:35">&amp;</operator> <literal type="number" pos:start="1605:37" pos:end="1605:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1607:17" pos:end="1607:40"><expr pos:start="1607:17" pos:end="1607:39"><name pos:start="1607:17" pos:end="1607:18">rd</name> <operator pos:start="1607:20" pos:end="1607:20">=</operator> <operator pos:start="1607:22" pos:end="1607:22">(</operator><name pos:start="1607:23" pos:end="1607:26">insn</name> <operator pos:start="1607:28" pos:end="1607:29">&gt;&gt;</operator> <literal type="number" pos:start="1607:31" pos:end="1607:32">12</literal><operator pos:start="1607:33" pos:end="1607:33">)</operator> <operator pos:start="1607:35" pos:end="1607:35">&amp;</operator> <literal type="number" pos:start="1607:37" pos:end="1607:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1609:17" pos:end="1609:39"><expr pos:start="1609:17" pos:end="1609:38"><name pos:start="1609:17" pos:end="1609:18">rs</name> <operator pos:start="1609:20" pos:end="1609:20">=</operator> <operator pos:start="1609:22" pos:end="1609:22">(</operator><name pos:start="1609:23" pos:end="1609:26">insn</name> <operator pos:start="1609:28" pos:end="1609:29">&gt;&gt;</operator> <literal type="number" pos:start="1609:31" pos:end="1609:31">8</literal><operator pos:start="1609:32" pos:end="1609:32">)</operator> <operator pos:start="1609:34" pos:end="1609:34">&amp;</operator> <literal type="number" pos:start="1609:36" pos:end="1609:38">0xf</literal></expr>;</expr_stmt>

                <switch pos:start="1611:17" pos:end="2087:17">switch <condition pos:start="1611:24" pos:end="1611:41">(<expr pos:start="1611:25" pos:end="1611:40"><operator pos:start="1611:25" pos:end="1611:25">(</operator><name pos:start="1611:26" pos:end="1611:29">insn</name> <operator pos:start="1611:31" pos:end="1611:32">&gt;&gt;</operator> <literal type="number" pos:start="1611:34" pos:end="1611:35">23</literal><operator pos:start="1611:36" pos:end="1611:36">)</operator> <operator pos:start="1611:38" pos:end="1611:38">&amp;</operator> <literal type="number" pos:start="1611:40" pos:end="1611:40">3</literal></expr>)</condition> <block pos:start="1611:43" pos:end="2087:17">{<block_content pos:start="1613:17" pos:end="2085:26">

                <case pos:start="1613:17" pos:end="1613:23">case <expr pos:start="1613:22" pos:end="1613:22"><literal type="number" pos:start="1613:22" pos:end="1613:22">0</literal></expr>:</case> <comment type="block" pos:start="1613:25" pos:end="1613:53">/* Parallel add/subtract.  */</comment>

                    <expr_stmt pos:start="1615:21" pos:end="1615:43"><expr pos:start="1615:21" pos:end="1615:42"><name pos:start="1615:21" pos:end="1615:23">op1</name> <operator pos:start="1615:25" pos:end="1615:25">=</operator> <operator pos:start="1615:27" pos:end="1615:27">(</operator><name pos:start="1615:28" pos:end="1615:31">insn</name> <operator pos:start="1615:33" pos:end="1615:34">&gt;&gt;</operator> <literal type="number" pos:start="1615:36" pos:end="1615:37">20</literal><operator pos:start="1615:38" pos:end="1615:38">)</operator> <operator pos:start="1615:40" pos:end="1615:40">&amp;</operator> <literal type="number" pos:start="1615:42" pos:end="1615:42">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1617:21" pos:end="1617:42"><expr pos:start="1617:21" pos:end="1617:41"><name pos:start="1617:21" pos:end="1617:23">tmp</name> <operator pos:start="1617:25" pos:end="1617:25">=</operator> <call pos:start="1617:27" pos:end="1617:41"><name pos:start="1617:27" pos:end="1617:34">load_reg</name><argument_list pos:start="1617:35" pos:end="1617:41">(<argument pos:start="1617:36" pos:end="1617:36"><expr pos:start="1617:36" pos:end="1617:36"><name pos:start="1617:36" pos:end="1617:36">s</name></expr></argument>, <argument pos:start="1617:39" pos:end="1617:40"><expr pos:start="1617:39" pos:end="1617:40"><name pos:start="1617:39" pos:end="1617:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1619:21" pos:end="1619:43"><expr pos:start="1619:21" pos:end="1619:42"><name pos:start="1619:21" pos:end="1619:24">tmp2</name> <operator pos:start="1619:26" pos:end="1619:26">=</operator> <call pos:start="1619:28" pos:end="1619:42"><name pos:start="1619:28" pos:end="1619:35">load_reg</name><argument_list pos:start="1619:36" pos:end="1619:42">(<argument pos:start="1619:37" pos:end="1619:37"><expr pos:start="1619:37" pos:end="1619:37"><name pos:start="1619:37" pos:end="1619:37">s</name></expr></argument>, <argument pos:start="1619:40" pos:end="1619:41"><expr pos:start="1619:40" pos:end="1619:41"><name pos:start="1619:40" pos:end="1619:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1621:21" pos:end="1621:41"><expr pos:start="1621:21" pos:end="1621:40"><name pos:start="1621:21" pos:end="1621:22">sh</name> <operator pos:start="1621:24" pos:end="1621:24">=</operator> <operator pos:start="1621:26" pos:end="1621:26">(</operator><name pos:start="1621:27" pos:end="1621:30">insn</name> <operator pos:start="1621:32" pos:end="1621:33">&gt;&gt;</operator> <literal type="number" pos:start="1621:35" pos:end="1621:35">5</literal><operator pos:start="1621:36" pos:end="1621:36">)</operator> <operator pos:start="1621:38" pos:end="1621:38">&amp;</operator> <literal type="number" pos:start="1621:40" pos:end="1621:40">7</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1623:21" pos:end="1625:40"><if pos:start="1623:21" pos:end="1625:40">if <condition pos:start="1623:24" pos:end="1623:61">(<expr pos:start="1623:25" pos:end="1623:60"><operator pos:start="1623:25" pos:end="1623:25">(</operator><name pos:start="1623:26" pos:end="1623:28">op1</name> <operator pos:start="1623:30" pos:end="1623:30">&amp;</operator> <literal type="number" pos:start="1623:32" pos:end="1623:32">3</literal><operator pos:start="1623:33" pos:end="1623:33">)</operator> <operator pos:start="1623:35" pos:end="1623:36">==</operator> <literal type="number" pos:start="1623:38" pos:end="1623:38">0</literal> <operator pos:start="1623:40" pos:end="1623:41">||</operator> <name pos:start="1623:43" pos:end="1623:44">sh</name> <operator pos:start="1623:46" pos:end="1623:47">==</operator> <literal type="number" pos:start="1623:49" pos:end="1623:49">5</literal> <operator pos:start="1623:51" pos:end="1623:52">||</operator> <name pos:start="1623:54" pos:end="1623:55">sh</name> <operator pos:start="1623:57" pos:end="1623:58">==</operator> <literal type="number" pos:start="1623:60" pos:end="1623:60">6</literal></expr>)</condition><block type="pseudo" pos:start="1625:25" pos:end="1625:40"><block_content pos:start="1625:25" pos:end="1625:40">

                        <goto pos:start="1625:25" pos:end="1625:40">goto <name pos:start="1625:30" pos:end="1625:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1627:21" pos:end="1627:64"><expr pos:start="1627:21" pos:end="1627:63"><call pos:start="1627:21" pos:end="1627:63"><name pos:start="1627:21" pos:end="1627:43">gen_arm_parallel_addsub</name><argument_list pos:start="1627:44" pos:end="1627:63">(<argument pos:start="1627:45" pos:end="1627:47"><expr pos:start="1627:45" pos:end="1627:47"><name pos:start="1627:45" pos:end="1627:47">op1</name></expr></argument>, <argument pos:start="1627:50" pos:end="1627:51"><expr pos:start="1627:50" pos:end="1627:51"><name pos:start="1627:50" pos:end="1627:51">sh</name></expr></argument>, <argument pos:start="1627:54" pos:end="1627:56"><expr pos:start="1627:54" pos:end="1627:56"><name pos:start="1627:54" pos:end="1627:56">tmp</name></expr></argument>, <argument pos:start="1627:59" pos:end="1627:62"><expr pos:start="1627:59" pos:end="1627:62"><name pos:start="1627:59" pos:end="1627:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1629:21" pos:end="1629:44"><expr pos:start="1629:21" pos:end="1629:43"><call pos:start="1629:21" pos:end="1629:43"><name pos:start="1629:21" pos:end="1629:37">tcg_temp_free_i32</name><argument_list pos:start="1629:38" pos:end="1629:43">(<argument pos:start="1629:39" pos:end="1629:42"><expr pos:start="1629:39" pos:end="1629:42"><name pos:start="1629:39" pos:end="1629:42">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1631:21" pos:end="1631:42"><expr pos:start="1631:21" pos:end="1631:41"><call pos:start="1631:21" pos:end="1631:41"><name pos:start="1631:21" pos:end="1631:29">store_reg</name><argument_list pos:start="1631:30" pos:end="1631:41">(<argument pos:start="1631:31" pos:end="1631:31"><expr pos:start="1631:31" pos:end="1631:31"><name pos:start="1631:31" pos:end="1631:31">s</name></expr></argument>, <argument pos:start="1631:34" pos:end="1631:35"><expr pos:start="1631:34" pos:end="1631:35"><name pos:start="1631:34" pos:end="1631:35">rd</name></expr></argument>, <argument pos:start="1631:38" pos:end="1631:40"><expr pos:start="1631:38" pos:end="1631:40"><name pos:start="1631:38" pos:end="1631:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1633:21" pos:end="1633:26">break;</break>

                <case pos:start="1635:17" pos:end="1635:23">case <expr pos:start="1635:22" pos:end="1635:22"><literal type="number" pos:start="1635:22" pos:end="1635:22">1</literal></expr>:</case>

                    <if_stmt pos:start="1637:21" pos:end="1853:21"><if pos:start="1637:21" pos:end="1681:21">if <condition pos:start="1637:24" pos:end="1637:49">(<expr pos:start="1637:25" pos:end="1637:48"><operator pos:start="1637:25" pos:end="1637:25">(</operator><name pos:start="1637:26" pos:end="1637:29">insn</name> <operator pos:start="1637:31" pos:end="1637:31">&amp;</operator> <literal type="number" pos:start="1637:33" pos:end="1637:42">0x00700020</literal><operator pos:start="1637:43" pos:end="1637:43">)</operator> <operator pos:start="1637:45" pos:end="1637:46">==</operator> <literal type="number" pos:start="1637:48" pos:end="1637:48">0</literal></expr>)</condition> <block pos:start="1637:51" pos:end="1681:21">{<block_content pos:start="1641:25" pos:end="1679:46">

                        <comment type="block" pos:start="1639:25" pos:end="1639:45">/* Halfword pack.  */</comment>

                        <expr_stmt pos:start="1641:25" pos:end="1641:46"><expr pos:start="1641:25" pos:end="1641:45"><name pos:start="1641:25" pos:end="1641:27">tmp</name> <operator pos:start="1641:29" pos:end="1641:29">=</operator> <call pos:start="1641:31" pos:end="1641:45"><name pos:start="1641:31" pos:end="1641:38">load_reg</name><argument_list pos:start="1641:39" pos:end="1641:45">(<argument pos:start="1641:40" pos:end="1641:40"><expr pos:start="1641:40" pos:end="1641:40"><name pos:start="1641:40" pos:end="1641:40">s</name></expr></argument>, <argument pos:start="1641:43" pos:end="1641:44"><expr pos:start="1641:43" pos:end="1641:44"><name pos:start="1641:43" pos:end="1641:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1643:25" pos:end="1643:47"><expr pos:start="1643:25" pos:end="1643:46"><name pos:start="1643:25" pos:end="1643:28">tmp2</name> <operator pos:start="1643:30" pos:end="1643:30">=</operator> <call pos:start="1643:32" pos:end="1643:46"><name pos:start="1643:32" pos:end="1643:39">load_reg</name><argument_list pos:start="1643:40" pos:end="1643:46">(<argument pos:start="1643:41" pos:end="1643:41"><expr pos:start="1643:41" pos:end="1643:41"><name pos:start="1643:41" pos:end="1643:41">s</name></expr></argument>, <argument pos:start="1643:44" pos:end="1643:45"><expr pos:start="1643:44" pos:end="1643:45"><name pos:start="1643:44" pos:end="1643:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1645:25" pos:end="1645:51"><expr pos:start="1645:25" pos:end="1645:50"><name pos:start="1645:25" pos:end="1645:29">shift</name> <operator pos:start="1645:31" pos:end="1645:31">=</operator> <operator pos:start="1645:33" pos:end="1645:33">(</operator><name pos:start="1645:34" pos:end="1645:37">insn</name> <operator pos:start="1645:39" pos:end="1645:40">&gt;&gt;</operator> <literal type="number" pos:start="1645:42" pos:end="1645:42">7</literal><operator pos:start="1645:43" pos:end="1645:43">)</operator> <operator pos:start="1645:45" pos:end="1645:45">&amp;</operator> <literal type="number" pos:start="1645:47" pos:end="1645:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1647:25" pos:end="1673:25"><if pos:start="1647:25" pos:end="1661:25">if <condition pos:start="1647:28" pos:end="1647:44">(<expr pos:start="1647:29" pos:end="1647:43"><name pos:start="1647:29" pos:end="1647:32">insn</name> <operator pos:start="1647:34" pos:end="1647:34">&amp;</operator> <operator pos:start="1647:36" pos:end="1647:36">(</operator><literal type="number" pos:start="1647:37" pos:end="1647:37">1</literal> <operator pos:start="1647:39" pos:end="1647:40">&lt;&lt;</operator> <literal type="number" pos:start="1647:42" pos:end="1647:42">6</literal><operator pos:start="1647:43" pos:end="1647:43">)</operator></expr>)</condition> <block pos:start="1647:46" pos:end="1661:25">{<block_content pos:start="1651:29" pos:end="1659:59">

                            <comment type="block" pos:start="1649:29" pos:end="1649:39">/* pkhtb */</comment>

                            <if_stmt pos:start="1651:29" pos:end="1653:43"><if pos:start="1651:29" pos:end="1653:43">if <condition pos:start="1651:32" pos:end="1651:43">(<expr pos:start="1651:33" pos:end="1651:42"><name pos:start="1651:33" pos:end="1651:37">shift</name> <operator pos:start="1651:39" pos:end="1651:40">==</operator> <literal type="number" pos:start="1651:42" pos:end="1651:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1653:33" pos:end="1653:43"><block_content pos:start="1653:33" pos:end="1653:43">

                                <expr_stmt pos:start="1653:33" pos:end="1653:43"><expr pos:start="1653:33" pos:end="1653:42"><name pos:start="1653:33" pos:end="1653:37">shift</name> <operator pos:start="1653:39" pos:end="1653:39">=</operator> <literal type="number" pos:start="1653:41" pos:end="1653:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1655:29" pos:end="1655:64"><expr pos:start="1655:29" pos:end="1655:63"><call pos:start="1655:29" pos:end="1655:63"><name pos:start="1655:29" pos:end="1655:44">tcg_gen_sari_i32</name><argument_list pos:start="1655:45" pos:end="1655:63">(<argument pos:start="1655:46" pos:end="1655:49"><expr pos:start="1655:46" pos:end="1655:49"><name pos:start="1655:46" pos:end="1655:49">tmp2</name></expr></argument>, <argument pos:start="1655:52" pos:end="1655:55"><expr pos:start="1655:52" pos:end="1655:55"><name pos:start="1655:52" pos:end="1655:55">tmp2</name></expr></argument>, <argument pos:start="1655:58" pos:end="1655:62"><expr pos:start="1655:58" pos:end="1655:62"><name pos:start="1655:58" pos:end="1655:62">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1657:29" pos:end="1657:67"><expr pos:start="1657:29" pos:end="1657:66"><call pos:start="1657:29" pos:end="1657:66"><name pos:start="1657:29" pos:end="1657:44">tcg_gen_andi_i32</name><argument_list pos:start="1657:45" pos:end="1657:66">(<argument pos:start="1657:46" pos:end="1657:48"><expr pos:start="1657:46" pos:end="1657:48"><name pos:start="1657:46" pos:end="1657:48">tmp</name></expr></argument>, <argument pos:start="1657:51" pos:end="1657:53"><expr pos:start="1657:51" pos:end="1657:53"><name pos:start="1657:51" pos:end="1657:53">tmp</name></expr></argument>, <argument pos:start="1657:56" pos:end="1657:65"><expr pos:start="1657:56" pos:end="1657:65"><literal type="number" pos:start="1657:56" pos:end="1657:65">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1659:29" pos:end="1659:59"><expr pos:start="1659:29" pos:end="1659:58"><call pos:start="1659:29" pos:end="1659:58"><name pos:start="1659:29" pos:end="1659:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1659:47" pos:end="1659:58">(<argument pos:start="1659:48" pos:end="1659:51"><expr pos:start="1659:48" pos:end="1659:51"><name pos:start="1659:48" pos:end="1659:51">tmp2</name></expr></argument>, <argument pos:start="1659:54" pos:end="1659:57"><expr pos:start="1659:54" pos:end="1659:57"><name pos:start="1659:54" pos:end="1659:57">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1661:27" pos:end="1673:25">else <block pos:start="1661:32" pos:end="1673:25">{<block_content pos:start="1665:29" pos:end="1671:69">

                            <comment type="block" pos:start="1663:29" pos:end="1663:39">/* pkhbt */</comment>

                            <if_stmt pos:start="1665:29" pos:end="1667:68"><if pos:start="1665:29" pos:end="1667:68">if <condition pos:start="1665:32" pos:end="1665:38">(<expr pos:start="1665:33" pos:end="1665:37"><name pos:start="1665:33" pos:end="1665:37">shift</name></expr>)</condition><block type="pseudo" pos:start="1667:33" pos:end="1667:68"><block_content pos:start="1667:33" pos:end="1667:68">

                                <expr_stmt pos:start="1667:33" pos:end="1667:68"><expr pos:start="1667:33" pos:end="1667:67"><call pos:start="1667:33" pos:end="1667:67"><name pos:start="1667:33" pos:end="1667:48">tcg_gen_shli_i32</name><argument_list pos:start="1667:49" pos:end="1667:67">(<argument pos:start="1667:50" pos:end="1667:53"><expr pos:start="1667:50" pos:end="1667:53"><name pos:start="1667:50" pos:end="1667:53">tmp2</name></expr></argument>, <argument pos:start="1667:56" pos:end="1667:59"><expr pos:start="1667:56" pos:end="1667:59"><name pos:start="1667:56" pos:end="1667:59">tmp2</name></expr></argument>, <argument pos:start="1667:62" pos:end="1667:66"><expr pos:start="1667:62" pos:end="1667:66"><name pos:start="1667:62" pos:end="1667:66">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1669:29" pos:end="1669:57"><expr pos:start="1669:29" pos:end="1669:56"><call pos:start="1669:29" pos:end="1669:56"><name pos:start="1669:29" pos:end="1669:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1669:47" pos:end="1669:56">(<argument pos:start="1669:48" pos:end="1669:50"><expr pos:start="1669:48" pos:end="1669:50"><name pos:start="1669:48" pos:end="1669:50">tmp</name></expr></argument>, <argument pos:start="1669:53" pos:end="1669:55"><expr pos:start="1669:53" pos:end="1669:55"><name pos:start="1669:53" pos:end="1669:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1671:29" pos:end="1671:69"><expr pos:start="1671:29" pos:end="1671:68"><call pos:start="1671:29" pos:end="1671:68"><name pos:start="1671:29" pos:end="1671:44">tcg_gen_andi_i32</name><argument_list pos:start="1671:45" pos:end="1671:68">(<argument pos:start="1671:46" pos:end="1671:49"><expr pos:start="1671:46" pos:end="1671:49"><name pos:start="1671:46" pos:end="1671:49">tmp2</name></expr></argument>, <argument pos:start="1671:52" pos:end="1671:55"><expr pos:start="1671:52" pos:end="1671:55"><name pos:start="1671:52" pos:end="1671:55">tmp2</name></expr></argument>, <argument pos:start="1671:58" pos:end="1671:67"><expr pos:start="1671:58" pos:end="1671:67"><literal type="number" pos:start="1671:58" pos:end="1671:67">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1675:25" pos:end="1675:55"><expr pos:start="1675:25" pos:end="1675:54"><call pos:start="1675:25" pos:end="1675:54"><name pos:start="1675:25" pos:end="1675:38">tcg_gen_or_i32</name><argument_list pos:start="1675:39" pos:end="1675:54">(<argument pos:start="1675:40" pos:end="1675:42"><expr pos:start="1675:40" pos:end="1675:42"><name pos:start="1675:40" pos:end="1675:42">tmp</name></expr></argument>, <argument pos:start="1675:45" pos:end="1675:47"><expr pos:start="1675:45" pos:end="1675:47"><name pos:start="1675:45" pos:end="1675:47">tmp</name></expr></argument>, <argument pos:start="1675:50" pos:end="1675:53"><expr pos:start="1675:50" pos:end="1675:53"><name pos:start="1675:50" pos:end="1675:53">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1677:25" pos:end="1677:48"><expr pos:start="1677:25" pos:end="1677:47"><call pos:start="1677:25" pos:end="1677:47"><name pos:start="1677:25" pos:end="1677:41">tcg_temp_free_i32</name><argument_list pos:start="1677:42" pos:end="1677:47">(<argument pos:start="1677:43" pos:end="1677:46"><expr pos:start="1677:43" pos:end="1677:46"><name pos:start="1677:43" pos:end="1677:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1679:25" pos:end="1679:46"><expr pos:start="1679:25" pos:end="1679:45"><call pos:start="1679:25" pos:end="1679:45"><name pos:start="1679:25" pos:end="1679:33">store_reg</name><argument_list pos:start="1679:34" pos:end="1679:45">(<argument pos:start="1679:35" pos:end="1679:35"><expr pos:start="1679:35" pos:end="1679:35"><name pos:start="1679:35" pos:end="1679:35">s</name></expr></argument>, <argument pos:start="1679:38" pos:end="1679:39"><expr pos:start="1679:38" pos:end="1679:39"><name pos:start="1679:38" pos:end="1679:39">rd</name></expr></argument>, <argument pos:start="1679:42" pos:end="1679:44"><expr pos:start="1679:42" pos:end="1679:44"><name pos:start="1679:42" pos:end="1679:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1681:23" pos:end="1719:21">else if <condition pos:start="1681:31" pos:end="1681:65">(<expr pos:start="1681:32" pos:end="1681:64"><operator pos:start="1681:32" pos:end="1681:32">(</operator><name pos:start="1681:33" pos:end="1681:36">insn</name> <operator pos:start="1681:38" pos:end="1681:38">&amp;</operator> <literal type="number" pos:start="1681:40" pos:end="1681:49">0x00200020</literal><operator pos:start="1681:50" pos:end="1681:50">)</operator> <operator pos:start="1681:52" pos:end="1681:53">==</operator> <literal type="number" pos:start="1681:55" pos:end="1681:64">0x00200000</literal></expr>)</condition> <block pos:start="1681:67" pos:end="1719:21">{<block_content pos:start="1685:25" pos:end="1717:46">

                        <comment type="block" pos:start="1683:25" pos:end="1683:37">/* [us]sat */</comment>

                        <expr_stmt pos:start="1685:25" pos:end="1685:46"><expr pos:start="1685:25" pos:end="1685:45"><name pos:start="1685:25" pos:end="1685:27">tmp</name> <operator pos:start="1685:29" pos:end="1685:29">=</operator> <call pos:start="1685:31" pos:end="1685:45"><name pos:start="1685:31" pos:end="1685:38">load_reg</name><argument_list pos:start="1685:39" pos:end="1685:45">(<argument pos:start="1685:40" pos:end="1685:40"><expr pos:start="1685:40" pos:end="1685:40"><name pos:start="1685:40" pos:end="1685:40">s</name></expr></argument>, <argument pos:start="1685:43" pos:end="1685:44"><expr pos:start="1685:43" pos:end="1685:44"><name pos:start="1685:43" pos:end="1685:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1687:25" pos:end="1687:51"><expr pos:start="1687:25" pos:end="1687:50"><name pos:start="1687:25" pos:end="1687:29">shift</name> <operator pos:start="1687:31" pos:end="1687:31">=</operator> <operator pos:start="1687:33" pos:end="1687:33">(</operator><name pos:start="1687:34" pos:end="1687:37">insn</name> <operator pos:start="1687:39" pos:end="1687:40">&gt;&gt;</operator> <literal type="number" pos:start="1687:42" pos:end="1687:42">7</literal><operator pos:start="1687:43" pos:end="1687:43">)</operator> <operator pos:start="1687:45" pos:end="1687:45">&amp;</operator> <literal type="number" pos:start="1687:47" pos:end="1687:50">0x1f</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1689:25" pos:end="1701:25"><if pos:start="1689:25" pos:end="1697:25">if <condition pos:start="1689:28" pos:end="1689:44">(<expr pos:start="1689:29" pos:end="1689:43"><name pos:start="1689:29" pos:end="1689:32">insn</name> <operator pos:start="1689:34" pos:end="1689:34">&amp;</operator> <operator pos:start="1689:36" pos:end="1689:36">(</operator><literal type="number" pos:start="1689:37" pos:end="1689:37">1</literal> <operator pos:start="1689:39" pos:end="1689:40">&lt;&lt;</operator> <literal type="number" pos:start="1689:42" pos:end="1689:42">6</literal><operator pos:start="1689:43" pos:end="1689:43">)</operator></expr>)</condition> <block pos:start="1689:46" pos:end="1697:25">{<block_content pos:start="1691:29" pos:end="1695:62">

                            <if_stmt pos:start="1691:29" pos:end="1693:43"><if pos:start="1691:29" pos:end="1693:43">if <condition pos:start="1691:32" pos:end="1691:43">(<expr pos:start="1691:33" pos:end="1691:42"><name pos:start="1691:33" pos:end="1691:37">shift</name> <operator pos:start="1691:39" pos:end="1691:40">==</operator> <literal type="number" pos:start="1691:42" pos:end="1691:42">0</literal></expr>)</condition><block type="pseudo" pos:start="1693:33" pos:end="1693:43"><block_content pos:start="1693:33" pos:end="1693:43">

                                <expr_stmt pos:start="1693:33" pos:end="1693:43"><expr pos:start="1693:33" pos:end="1693:42"><name pos:start="1693:33" pos:end="1693:37">shift</name> <operator pos:start="1693:39" pos:end="1693:39">=</operator> <literal type="number" pos:start="1693:41" pos:end="1693:42">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="1695:29" pos:end="1695:62"><expr pos:start="1695:29" pos:end="1695:61"><call pos:start="1695:29" pos:end="1695:61"><name pos:start="1695:29" pos:end="1695:44">tcg_gen_sari_i32</name><argument_list pos:start="1695:45" pos:end="1695:61">(<argument pos:start="1695:46" pos:end="1695:48"><expr pos:start="1695:46" pos:end="1695:48"><name pos:start="1695:46" pos:end="1695:48">tmp</name></expr></argument>, <argument pos:start="1695:51" pos:end="1695:53"><expr pos:start="1695:51" pos:end="1695:53"><name pos:start="1695:51" pos:end="1695:53">tmp</name></expr></argument>, <argument pos:start="1695:56" pos:end="1695:60"><expr pos:start="1695:56" pos:end="1695:60"><name pos:start="1695:56" pos:end="1695:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1697:27" pos:end="1701:25">else <block pos:start="1697:32" pos:end="1701:25">{<block_content pos:start="1699:29" pos:end="1699:62">

                            <expr_stmt pos:start="1699:29" pos:end="1699:62"><expr pos:start="1699:29" pos:end="1699:61"><call pos:start="1699:29" pos:end="1699:61"><name pos:start="1699:29" pos:end="1699:44">tcg_gen_shli_i32</name><argument_list pos:start="1699:45" pos:end="1699:61">(<argument pos:start="1699:46" pos:end="1699:48"><expr pos:start="1699:46" pos:end="1699:48"><name pos:start="1699:46" pos:end="1699:48">tmp</name></expr></argument>, <argument pos:start="1699:51" pos:end="1699:53"><expr pos:start="1699:51" pos:end="1699:53"><name pos:start="1699:51" pos:end="1699:53">tmp</name></expr></argument>, <argument pos:start="1699:56" pos:end="1699:60"><expr pos:start="1699:56" pos:end="1699:60"><name pos:start="1699:56" pos:end="1699:60">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1703:25" pos:end="1703:49"><expr pos:start="1703:25" pos:end="1703:48"><name pos:start="1703:25" pos:end="1703:26">sh</name> <operator pos:start="1703:28" pos:end="1703:28">=</operator> <operator pos:start="1703:30" pos:end="1703:30">(</operator><name pos:start="1703:31" pos:end="1703:34">insn</name> <operator pos:start="1703:36" pos:end="1703:37">&gt;&gt;</operator> <literal type="number" pos:start="1703:39" pos:end="1703:40">16</literal><operator pos:start="1703:41" pos:end="1703:41">)</operator> <operator pos:start="1703:43" pos:end="1703:43">&amp;</operator> <literal type="number" pos:start="1703:45" pos:end="1703:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1705:25" pos:end="1705:49"><expr pos:start="1705:25" pos:end="1705:48"><name pos:start="1705:25" pos:end="1705:28">tmp2</name> <operator pos:start="1705:30" pos:end="1705:30">=</operator> <call pos:start="1705:32" pos:end="1705:48"><name pos:start="1705:32" pos:end="1705:44">tcg_const_i32</name><argument_list pos:start="1705:45" pos:end="1705:48">(<argument pos:start="1705:46" pos:end="1705:47"><expr pos:start="1705:46" pos:end="1705:47"><name pos:start="1705:46" pos:end="1705:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1707:25" pos:end="1713:58"><if pos:start="1707:25" pos:end="1709:58">if <condition pos:start="1707:28" pos:end="1707:45">(<expr pos:start="1707:29" pos:end="1707:44"><name pos:start="1707:29" pos:end="1707:32">insn</name> <operator pos:start="1707:34" pos:end="1707:34">&amp;</operator> <operator pos:start="1707:36" pos:end="1707:36">(</operator><literal type="number" pos:start="1707:37" pos:end="1707:37">1</literal> <operator pos:start="1707:39" pos:end="1707:40">&lt;&lt;</operator> <literal type="number" pos:start="1707:42" pos:end="1707:43">22</literal><operator pos:start="1707:44" pos:end="1707:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1709:27" pos:end="1709:58"><block_content pos:start="1709:27" pos:end="1709:58">

                          <expr_stmt pos:start="1709:27" pos:end="1709:58"><expr pos:start="1709:27" pos:end="1709:57"><call pos:start="1709:27" pos:end="1709:57"><name pos:start="1709:27" pos:end="1709:41">gen_helper_usat</name><argument_list pos:start="1709:42" pos:end="1709:57">(<argument pos:start="1709:43" pos:end="1709:45"><expr pos:start="1709:43" pos:end="1709:45"><name pos:start="1709:43" pos:end="1709:45">tmp</name></expr></argument>, <argument pos:start="1709:48" pos:end="1709:50"><expr pos:start="1709:48" pos:end="1709:50"><name pos:start="1709:48" pos:end="1709:50">tmp</name></expr></argument>, <argument pos:start="1709:53" pos:end="1709:56"><expr pos:start="1709:53" pos:end="1709:56"><name pos:start="1709:53" pos:end="1709:56">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1711:25" pos:end="1713:58">else<block type="pseudo" pos:start="1713:27" pos:end="1713:58"><block_content pos:start="1713:27" pos:end="1713:58">

                          <expr_stmt pos:start="1713:27" pos:end="1713:58"><expr pos:start="1713:27" pos:end="1713:57"><call pos:start="1713:27" pos:end="1713:57"><name pos:start="1713:27" pos:end="1713:41">gen_helper_ssat</name><argument_list pos:start="1713:42" pos:end="1713:57">(<argument pos:start="1713:43" pos:end="1713:45"><expr pos:start="1713:43" pos:end="1713:45"><name pos:start="1713:43" pos:end="1713:45">tmp</name></expr></argument>, <argument pos:start="1713:48" pos:end="1713:50"><expr pos:start="1713:48" pos:end="1713:50"><name pos:start="1713:48" pos:end="1713:50">tmp</name></expr></argument>, <argument pos:start="1713:53" pos:end="1713:56"><expr pos:start="1713:53" pos:end="1713:56"><name pos:start="1713:53" pos:end="1713:56">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1715:25" pos:end="1715:48"><expr pos:start="1715:25" pos:end="1715:47"><call pos:start="1715:25" pos:end="1715:47"><name pos:start="1715:25" pos:end="1715:41">tcg_temp_free_i32</name><argument_list pos:start="1715:42" pos:end="1715:47">(<argument pos:start="1715:43" pos:end="1715:46"><expr pos:start="1715:43" pos:end="1715:46"><name pos:start="1715:43" pos:end="1715:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1717:25" pos:end="1717:46"><expr pos:start="1717:25" pos:end="1717:45"><call pos:start="1717:25" pos:end="1717:45"><name pos:start="1717:25" pos:end="1717:33">store_reg</name><argument_list pos:start="1717:34" pos:end="1717:45">(<argument pos:start="1717:35" pos:end="1717:35"><expr pos:start="1717:35" pos:end="1717:35"><name pos:start="1717:35" pos:end="1717:35">s</name></expr></argument>, <argument pos:start="1717:38" pos:end="1717:39"><expr pos:start="1717:38" pos:end="1717:39"><name pos:start="1717:38" pos:end="1717:39">rd</name></expr></argument>, <argument pos:start="1717:42" pos:end="1717:44"><expr pos:start="1717:42" pos:end="1717:44"><name pos:start="1717:42" pos:end="1717:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1719:23" pos:end="1741:21">else if <condition pos:start="1719:31" pos:end="1719:65">(<expr pos:start="1719:32" pos:end="1719:64"><operator pos:start="1719:32" pos:end="1719:32">(</operator><name pos:start="1719:33" pos:end="1719:36">insn</name> <operator pos:start="1719:38" pos:end="1719:38">&amp;</operator> <literal type="number" pos:start="1719:40" pos:end="1719:49">0x00300fe0</literal><operator pos:start="1719:50" pos:end="1719:50">)</operator> <operator pos:start="1719:52" pos:end="1719:53">==</operator> <literal type="number" pos:start="1719:55" pos:end="1719:64">0x00200f20</literal></expr>)</condition> <block pos:start="1719:67" pos:end="1741:21">{<block_content pos:start="1723:25" pos:end="1739:46">

                        <comment type="block" pos:start="1721:25" pos:end="1721:39">/* [us]sat16 */</comment>

                        <expr_stmt pos:start="1723:25" pos:end="1723:46"><expr pos:start="1723:25" pos:end="1723:45"><name pos:start="1723:25" pos:end="1723:27">tmp</name> <operator pos:start="1723:29" pos:end="1723:29">=</operator> <call pos:start="1723:31" pos:end="1723:45"><name pos:start="1723:31" pos:end="1723:38">load_reg</name><argument_list pos:start="1723:39" pos:end="1723:45">(<argument pos:start="1723:40" pos:end="1723:40"><expr pos:start="1723:40" pos:end="1723:40"><name pos:start="1723:40" pos:end="1723:40">s</name></expr></argument>, <argument pos:start="1723:43" pos:end="1723:44"><expr pos:start="1723:43" pos:end="1723:44"><name pos:start="1723:43" pos:end="1723:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1725:25" pos:end="1725:49"><expr pos:start="1725:25" pos:end="1725:48"><name pos:start="1725:25" pos:end="1725:26">sh</name> <operator pos:start="1725:28" pos:end="1725:28">=</operator> <operator pos:start="1725:30" pos:end="1725:30">(</operator><name pos:start="1725:31" pos:end="1725:34">insn</name> <operator pos:start="1725:36" pos:end="1725:37">&gt;&gt;</operator> <literal type="number" pos:start="1725:39" pos:end="1725:40">16</literal><operator pos:start="1725:41" pos:end="1725:41">)</operator> <operator pos:start="1725:43" pos:end="1725:43">&amp;</operator> <literal type="number" pos:start="1725:45" pos:end="1725:48">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1727:25" pos:end="1727:49"><expr pos:start="1727:25" pos:end="1727:48"><name pos:start="1727:25" pos:end="1727:28">tmp2</name> <operator pos:start="1727:30" pos:end="1727:30">=</operator> <call pos:start="1727:32" pos:end="1727:48"><name pos:start="1727:32" pos:end="1727:44">tcg_const_i32</name><argument_list pos:start="1727:45" pos:end="1727:48">(<argument pos:start="1727:46" pos:end="1727:47"><expr pos:start="1727:46" pos:end="1727:47"><name pos:start="1727:46" pos:end="1727:47">sh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1729:25" pos:end="1735:60"><if pos:start="1729:25" pos:end="1731:60">if <condition pos:start="1729:28" pos:end="1729:45">(<expr pos:start="1729:29" pos:end="1729:44"><name pos:start="1729:29" pos:end="1729:32">insn</name> <operator pos:start="1729:34" pos:end="1729:34">&amp;</operator> <operator pos:start="1729:36" pos:end="1729:36">(</operator><literal type="number" pos:start="1729:37" pos:end="1729:37">1</literal> <operator pos:start="1729:39" pos:end="1729:40">&lt;&lt;</operator> <literal type="number" pos:start="1729:42" pos:end="1729:43">22</literal><operator pos:start="1729:44" pos:end="1729:44">)</operator></expr>)</condition><block type="pseudo" pos:start="1731:27" pos:end="1731:60"><block_content pos:start="1731:27" pos:end="1731:60">

                          <expr_stmt pos:start="1731:27" pos:end="1731:60"><expr pos:start="1731:27" pos:end="1731:59"><call pos:start="1731:27" pos:end="1731:59"><name pos:start="1731:27" pos:end="1731:43">gen_helper_usat16</name><argument_list pos:start="1731:44" pos:end="1731:59">(<argument pos:start="1731:45" pos:end="1731:47"><expr pos:start="1731:45" pos:end="1731:47"><name pos:start="1731:45" pos:end="1731:47">tmp</name></expr></argument>, <argument pos:start="1731:50" pos:end="1731:52"><expr pos:start="1731:50" pos:end="1731:52"><name pos:start="1731:50" pos:end="1731:52">tmp</name></expr></argument>, <argument pos:start="1731:55" pos:end="1731:58"><expr pos:start="1731:55" pos:end="1731:58"><name pos:start="1731:55" pos:end="1731:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="1733:25" pos:end="1735:60">else<block type="pseudo" pos:start="1735:27" pos:end="1735:60"><block_content pos:start="1735:27" pos:end="1735:60">

                          <expr_stmt pos:start="1735:27" pos:end="1735:60"><expr pos:start="1735:27" pos:end="1735:59"><call pos:start="1735:27" pos:end="1735:59"><name pos:start="1735:27" pos:end="1735:43">gen_helper_ssat16</name><argument_list pos:start="1735:44" pos:end="1735:59">(<argument pos:start="1735:45" pos:end="1735:47"><expr pos:start="1735:45" pos:end="1735:47"><name pos:start="1735:45" pos:end="1735:47">tmp</name></expr></argument>, <argument pos:start="1735:50" pos:end="1735:52"><expr pos:start="1735:50" pos:end="1735:52"><name pos:start="1735:50" pos:end="1735:52">tmp</name></expr></argument>, <argument pos:start="1735:55" pos:end="1735:58"><expr pos:start="1735:55" pos:end="1735:58"><name pos:start="1735:55" pos:end="1735:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        <expr_stmt pos:start="1737:25" pos:end="1737:48"><expr pos:start="1737:25" pos:end="1737:47"><call pos:start="1737:25" pos:end="1737:47"><name pos:start="1737:25" pos:end="1737:41">tcg_temp_free_i32</name><argument_list pos:start="1737:42" pos:end="1737:47">(<argument pos:start="1737:43" pos:end="1737:46"><expr pos:start="1737:43" pos:end="1737:46"><name pos:start="1737:43" pos:end="1737:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1739:25" pos:end="1739:46"><expr pos:start="1739:25" pos:end="1739:45"><call pos:start="1739:25" pos:end="1739:45"><name pos:start="1739:25" pos:end="1739:33">store_reg</name><argument_list pos:start="1739:34" pos:end="1739:45">(<argument pos:start="1739:35" pos:end="1739:35"><expr pos:start="1739:35" pos:end="1739:35"><name pos:start="1739:35" pos:end="1739:35">s</name></expr></argument>, <argument pos:start="1739:38" pos:end="1739:39"><expr pos:start="1739:38" pos:end="1739:39"><name pos:start="1739:38" pos:end="1739:39">rd</name></expr></argument>, <argument pos:start="1739:42" pos:end="1739:44"><expr pos:start="1739:42" pos:end="1739:44"><name pos:start="1739:42" pos:end="1739:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1741:23" pos:end="1761:21">else if <condition pos:start="1741:31" pos:end="1741:65">(<expr pos:start="1741:32" pos:end="1741:64"><operator pos:start="1741:32" pos:end="1741:32">(</operator><name pos:start="1741:33" pos:end="1741:36">insn</name> <operator pos:start="1741:38" pos:end="1741:38">&amp;</operator> <literal type="number" pos:start="1741:40" pos:end="1741:49">0x00700fe0</literal><operator pos:start="1741:50" pos:end="1741:50">)</operator> <operator pos:start="1741:52" pos:end="1741:53">==</operator> <literal type="number" pos:start="1741:55" pos:end="1741:64">0x00000fa0</literal></expr>)</condition> <block pos:start="1741:67" pos:end="1761:21">{<block_content pos:start="1745:25" pos:end="1759:46">

                        <comment type="block" pos:start="1743:25" pos:end="1743:44">/* Select bytes.  */</comment>

                        <expr_stmt pos:start="1745:25" pos:end="1745:46"><expr pos:start="1745:25" pos:end="1745:45"><name pos:start="1745:25" pos:end="1745:27">tmp</name> <operator pos:start="1745:29" pos:end="1745:29">=</operator> <call pos:start="1745:31" pos:end="1745:45"><name pos:start="1745:31" pos:end="1745:38">load_reg</name><argument_list pos:start="1745:39" pos:end="1745:45">(<argument pos:start="1745:40" pos:end="1745:40"><expr pos:start="1745:40" pos:end="1745:40"><name pos:start="1745:40" pos:end="1745:40">s</name></expr></argument>, <argument pos:start="1745:43" pos:end="1745:44"><expr pos:start="1745:43" pos:end="1745:44"><name pos:start="1745:43" pos:end="1745:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1747:25" pos:end="1747:47"><expr pos:start="1747:25" pos:end="1747:46"><name pos:start="1747:25" pos:end="1747:28">tmp2</name> <operator pos:start="1747:30" pos:end="1747:30">=</operator> <call pos:start="1747:32" pos:end="1747:46"><name pos:start="1747:32" pos:end="1747:39">load_reg</name><argument_list pos:start="1747:40" pos:end="1747:46">(<argument pos:start="1747:41" pos:end="1747:41"><expr pos:start="1747:41" pos:end="1747:41"><name pos:start="1747:41" pos:end="1747:41">s</name></expr></argument>, <argument pos:start="1747:44" pos:end="1747:45"><expr pos:start="1747:44" pos:end="1747:45"><name pos:start="1747:44" pos:end="1747:45">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1749:25" pos:end="1749:50"><expr pos:start="1749:25" pos:end="1749:49"><name pos:start="1749:25" pos:end="1749:28">tmp3</name> <operator pos:start="1749:30" pos:end="1749:30">=</operator> <call pos:start="1749:32" pos:end="1749:49"><name pos:start="1749:32" pos:end="1749:47">tcg_temp_new_i32</name><argument_list pos:start="1749:48" pos:end="1749:49">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1751:25" pos:end="1751:78"><expr pos:start="1751:25" pos:end="1751:77"><call pos:start="1751:25" pos:end="1751:77"><name pos:start="1751:25" pos:end="1751:38">tcg_gen_ld_i32</name><argument_list pos:start="1751:39" pos:end="1751:77">(<argument pos:start="1751:40" pos:end="1751:43"><expr pos:start="1751:40" pos:end="1751:43"><name pos:start="1751:40" pos:end="1751:43">tmp3</name></expr></argument>, <argument pos:start="1751:46" pos:end="1751:52"><expr pos:start="1751:46" pos:end="1751:52"><name pos:start="1751:46" pos:end="1751:52">cpu_env</name></expr></argument>, <argument pos:start="1751:55" pos:end="1751:76"><expr pos:start="1751:55" pos:end="1751:76"><call pos:start="1751:55" pos:end="1751:76"><name pos:start="1751:55" pos:end="1751:62">offsetof</name><argument_list pos:start="1751:63" pos:end="1751:76">(<argument pos:start="1751:64" pos:end="1751:71"><expr pos:start="1751:64" pos:end="1751:71"><name pos:start="1751:64" pos:end="1751:71">CPUState</name></expr></argument>, <argument pos:start="1751:74" pos:end="1751:75"><expr pos:start="1751:74" pos:end="1751:75"><name pos:start="1751:74" pos:end="1751:75">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1753:25" pos:end="1753:67"><expr pos:start="1753:25" pos:end="1753:66"><call pos:start="1753:25" pos:end="1753:66"><name pos:start="1753:25" pos:end="1753:44">gen_helper_sel_flags</name><argument_list pos:start="1753:45" pos:end="1753:66">(<argument pos:start="1753:46" pos:end="1753:48"><expr pos:start="1753:46" pos:end="1753:48"><name pos:start="1753:46" pos:end="1753:48">tmp</name></expr></argument>, <argument pos:start="1753:51" pos:end="1753:54"><expr pos:start="1753:51" pos:end="1753:54"><name pos:start="1753:51" pos:end="1753:54">tmp3</name></expr></argument>, <argument pos:start="1753:57" pos:end="1753:59"><expr pos:start="1753:57" pos:end="1753:59"><name pos:start="1753:57" pos:end="1753:59">tmp</name></expr></argument>, <argument pos:start="1753:62" pos:end="1753:65"><expr pos:start="1753:62" pos:end="1753:65"><name pos:start="1753:62" pos:end="1753:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1755:25" pos:end="1755:48"><expr pos:start="1755:25" pos:end="1755:47"><call pos:start="1755:25" pos:end="1755:47"><name pos:start="1755:25" pos:end="1755:41">tcg_temp_free_i32</name><argument_list pos:start="1755:42" pos:end="1755:47">(<argument pos:start="1755:43" pos:end="1755:46"><expr pos:start="1755:43" pos:end="1755:46"><name pos:start="1755:43" pos:end="1755:46">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1757:25" pos:end="1757:48"><expr pos:start="1757:25" pos:end="1757:47"><call pos:start="1757:25" pos:end="1757:47"><name pos:start="1757:25" pos:end="1757:41">tcg_temp_free_i32</name><argument_list pos:start="1757:42" pos:end="1757:47">(<argument pos:start="1757:43" pos:end="1757:46"><expr pos:start="1757:43" pos:end="1757:46"><name pos:start="1757:43" pos:end="1757:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1759:25" pos:end="1759:46"><expr pos:start="1759:25" pos:end="1759:45"><call pos:start="1759:25" pos:end="1759:45"><name pos:start="1759:25" pos:end="1759:33">store_reg</name><argument_list pos:start="1759:34" pos:end="1759:45">(<argument pos:start="1759:35" pos:end="1759:35"><expr pos:start="1759:35" pos:end="1759:35"><name pos:start="1759:35" pos:end="1759:35">s</name></expr></argument>, <argument pos:start="1759:38" pos:end="1759:39"><expr pos:start="1759:38" pos:end="1759:39"><name pos:start="1759:38" pos:end="1759:39">rd</name></expr></argument>, <argument pos:start="1759:42" pos:end="1759:44"><expr pos:start="1759:42" pos:end="1759:44"><name pos:start="1759:42" pos:end="1759:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1761:23" pos:end="1815:21">else if <condition pos:start="1761:31" pos:end="1761:65">(<expr pos:start="1761:32" pos:end="1761:64"><operator pos:start="1761:32" pos:end="1761:32">(</operator><name pos:start="1761:33" pos:end="1761:36">insn</name> <operator pos:start="1761:38" pos:end="1761:38">&amp;</operator> <literal type="number" pos:start="1761:40" pos:end="1761:49">0x000003e0</literal><operator pos:start="1761:50" pos:end="1761:50">)</operator> <operator pos:start="1761:52" pos:end="1761:53">==</operator> <literal type="number" pos:start="1761:55" pos:end="1761:64">0x00000060</literal></expr>)</condition> <block pos:start="1761:67" pos:end="1815:21">{<block_content pos:start="1763:25" pos:end="1813:46">

                        <expr_stmt pos:start="1763:25" pos:end="1763:46"><expr pos:start="1763:25" pos:end="1763:45"><name pos:start="1763:25" pos:end="1763:27">tmp</name> <operator pos:start="1763:29" pos:end="1763:29">=</operator> <call pos:start="1763:31" pos:end="1763:45"><name pos:start="1763:31" pos:end="1763:38">load_reg</name><argument_list pos:start="1763:39" pos:end="1763:45">(<argument pos:start="1763:40" pos:end="1763:40"><expr pos:start="1763:40" pos:end="1763:40"><name pos:start="1763:40" pos:end="1763:40">s</name></expr></argument>, <argument pos:start="1763:43" pos:end="1763:44"><expr pos:start="1763:43" pos:end="1763:44"><name pos:start="1763:43" pos:end="1763:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1765:25" pos:end="1765:49"><expr pos:start="1765:25" pos:end="1765:48"><name pos:start="1765:25" pos:end="1765:29">shift</name> <operator pos:start="1765:31" pos:end="1765:31">=</operator> <operator pos:start="1765:33" pos:end="1765:33">(</operator><name pos:start="1765:34" pos:end="1765:37">insn</name> <operator pos:start="1765:39" pos:end="1765:40">&gt;&gt;</operator> <literal type="number" pos:start="1765:42" pos:end="1765:43">10</literal><operator pos:start="1765:44" pos:end="1765:44">)</operator> <operator pos:start="1765:46" pos:end="1765:46">&amp;</operator> <literal type="number" pos:start="1765:48" pos:end="1765:48">3</literal></expr>;</expr_stmt>

                        <comment type="block" pos:start="1767:25" pos:end="1769:61">/* ??? In many cases it's not neccessary to do a

                           rotate, a shift is sufficient.  */</comment>

                        <if_stmt pos:start="1771:25" pos:end="1773:67"><if pos:start="1771:25" pos:end="1773:67">if <condition pos:start="1771:28" pos:end="1771:39">(<expr pos:start="1771:29" pos:end="1771:38"><name pos:start="1771:29" pos:end="1771:33">shift</name> <operator pos:start="1771:35" pos:end="1771:36">!=</operator> <literal type="number" pos:start="1771:38" pos:end="1771:38">0</literal></expr>)</condition><block type="pseudo" pos:start="1773:29" pos:end="1773:67"><block_content pos:start="1773:29" pos:end="1773:67">

                            <expr_stmt pos:start="1773:29" pos:end="1773:67"><expr pos:start="1773:29" pos:end="1773:66"><call pos:start="1773:29" pos:end="1773:66"><name pos:start="1773:29" pos:end="1773:45">tcg_gen_rotri_i32</name><argument_list pos:start="1773:46" pos:end="1773:66">(<argument pos:start="1773:47" pos:end="1773:49"><expr pos:start="1773:47" pos:end="1773:49"><name pos:start="1773:47" pos:end="1773:49">tmp</name></expr></argument>, <argument pos:start="1773:52" pos:end="1773:54"><expr pos:start="1773:52" pos:end="1773:54"><name pos:start="1773:52" pos:end="1773:54">tmp</name></expr></argument>, <argument pos:start="1773:57" pos:end="1773:65"><expr pos:start="1773:57" pos:end="1773:65"><name pos:start="1773:57" pos:end="1773:61">shift</name> <operator pos:start="1773:63" pos:end="1773:63">*</operator> <literal type="number" pos:start="1773:65" pos:end="1773:65">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1775:25" pos:end="1775:47"><expr pos:start="1775:25" pos:end="1775:46"><name pos:start="1775:25" pos:end="1775:27">op1</name> <operator pos:start="1775:29" pos:end="1775:29">=</operator> <operator pos:start="1775:31" pos:end="1775:31">(</operator><name pos:start="1775:32" pos:end="1775:35">insn</name> <operator pos:start="1775:37" pos:end="1775:38">&gt;&gt;</operator> <literal type="number" pos:start="1775:40" pos:end="1775:41">20</literal><operator pos:start="1775:42" pos:end="1775:42">)</operator> <operator pos:start="1775:44" pos:end="1775:44">&amp;</operator> <literal type="number" pos:start="1775:46" pos:end="1775:46">7</literal></expr>;</expr_stmt>

                        <switch pos:start="1777:25" pos:end="1793:25">switch <condition pos:start="1777:32" pos:end="1777:36">(<expr pos:start="1777:33" pos:end="1777:35"><name pos:start="1777:33" pos:end="1777:35">op1</name></expr>)</condition> <block pos:start="1777:38" pos:end="1793:25">{<block_content pos:start="1779:25" pos:end="1791:49">

                        <case pos:start="1779:25" pos:end="1779:31">case <expr pos:start="1779:30" pos:end="1779:30"><literal type="number" pos:start="1779:30" pos:end="1779:30">0</literal></expr>:</case> <expr_stmt pos:start="1779:33" pos:end="1779:48"><expr pos:start="1779:33" pos:end="1779:47"><call pos:start="1779:33" pos:end="1779:47"><name pos:start="1779:33" pos:end="1779:42">gen_sxtb16</name><argument_list pos:start="1779:43" pos:end="1779:47">(<argument pos:start="1779:44" pos:end="1779:46"><expr pos:start="1779:44" pos:end="1779:46"><name pos:start="1779:44" pos:end="1779:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="1779:51" pos:end="1779:56">break;</break>

                        <case pos:start="1781:25" pos:end="1781:31">case <expr pos:start="1781:30" pos:end="1781:30"><literal type="number" pos:start="1781:30" pos:end="1781:30">2</literal></expr>:</case> <expr_stmt pos:start="1781:33" pos:end="1781:46"><expr pos:start="1781:33" pos:end="1781:45"><call pos:start="1781:33" pos:end="1781:45"><name pos:start="1781:33" pos:end="1781:40">gen_sxtb</name><argument_list pos:start="1781:41" pos:end="1781:45">(<argument pos:start="1781:42" pos:end="1781:44"><expr pos:start="1781:42" pos:end="1781:44"><name pos:start="1781:42" pos:end="1781:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1781:51" pos:end="1781:56">break;</break>

                        <case pos:start="1783:25" pos:end="1783:31">case <expr pos:start="1783:30" pos:end="1783:30"><literal type="number" pos:start="1783:30" pos:end="1783:30">3</literal></expr>:</case> <expr_stmt pos:start="1783:33" pos:end="1783:46"><expr pos:start="1783:33" pos:end="1783:45"><call pos:start="1783:33" pos:end="1783:45"><name pos:start="1783:33" pos:end="1783:40">gen_sxth</name><argument_list pos:start="1783:41" pos:end="1783:45">(<argument pos:start="1783:42" pos:end="1783:44"><expr pos:start="1783:42" pos:end="1783:44"><name pos:start="1783:42" pos:end="1783:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1783:51" pos:end="1783:56">break;</break>

                        <case pos:start="1785:25" pos:end="1785:31">case <expr pos:start="1785:30" pos:end="1785:30"><literal type="number" pos:start="1785:30" pos:end="1785:30">4</literal></expr>:</case> <expr_stmt pos:start="1785:33" pos:end="1785:48"><expr pos:start="1785:33" pos:end="1785:47"><call pos:start="1785:33" pos:end="1785:47"><name pos:start="1785:33" pos:end="1785:42">gen_uxtb16</name><argument_list pos:start="1785:43" pos:end="1785:47">(<argument pos:start="1785:44" pos:end="1785:46"><expr pos:start="1785:44" pos:end="1785:46"><name pos:start="1785:44" pos:end="1785:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <break pos:start="1785:51" pos:end="1785:56">break;</break>

                        <case pos:start="1787:25" pos:end="1787:31">case <expr pos:start="1787:30" pos:end="1787:30"><literal type="number" pos:start="1787:30" pos:end="1787:30">6</literal></expr>:</case> <expr_stmt pos:start="1787:33" pos:end="1787:46"><expr pos:start="1787:33" pos:end="1787:45"><call pos:start="1787:33" pos:end="1787:45"><name pos:start="1787:33" pos:end="1787:40">gen_uxtb</name><argument_list pos:start="1787:41" pos:end="1787:45">(<argument pos:start="1787:42" pos:end="1787:44"><expr pos:start="1787:42" pos:end="1787:44"><name pos:start="1787:42" pos:end="1787:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1787:51" pos:end="1787:56">break;</break>

                        <case pos:start="1789:25" pos:end="1789:31">case <expr pos:start="1789:30" pos:end="1789:30"><literal type="number" pos:start="1789:30" pos:end="1789:30">7</literal></expr>:</case> <expr_stmt pos:start="1789:33" pos:end="1789:46"><expr pos:start="1789:33" pos:end="1789:45"><call pos:start="1789:33" pos:end="1789:45"><name pos:start="1789:33" pos:end="1789:40">gen_uxth</name><argument_list pos:start="1789:41" pos:end="1789:45">(<argument pos:start="1789:42" pos:end="1789:44"><expr pos:start="1789:42" pos:end="1789:44"><name pos:start="1789:42" pos:end="1789:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>    <break pos:start="1789:51" pos:end="1789:56">break;</break>

                        <default pos:start="1791:25" pos:end="1791:32">default:</default> <goto pos:start="1791:34" pos:end="1791:49">goto <name pos:start="1791:39" pos:end="1791:48">illegal_op</name>;</goto>

                        </block_content>}</block></switch>

                        <if_stmt pos:start="1795:25" pos:end="1811:25"><if pos:start="1795:25" pos:end="1811:25">if <condition pos:start="1795:28" pos:end="1795:37">(<expr pos:start="1795:29" pos:end="1795:36"><name pos:start="1795:29" pos:end="1795:30">rn</name> <operator pos:start="1795:32" pos:end="1795:33">!=</operator> <literal type="number" pos:start="1795:35" pos:end="1795:36">15</literal></expr>)</condition> <block pos:start="1795:39" pos:end="1811:25">{<block_content pos:start="1797:29" pos:end="1809:29">

                            <expr_stmt pos:start="1797:29" pos:end="1797:51"><expr pos:start="1797:29" pos:end="1797:50"><name pos:start="1797:29" pos:end="1797:32">tmp2</name> <operator pos:start="1797:34" pos:end="1797:34">=</operator> <call pos:start="1797:36" pos:end="1797:50"><name pos:start="1797:36" pos:end="1797:43">load_reg</name><argument_list pos:start="1797:44" pos:end="1797:50">(<argument pos:start="1797:45" pos:end="1797:45"><expr pos:start="1797:45" pos:end="1797:45"><name pos:start="1797:45" pos:end="1797:45">s</name></expr></argument>, <argument pos:start="1797:48" pos:end="1797:49"><expr pos:start="1797:48" pos:end="1797:49"><name pos:start="1797:48" pos:end="1797:49">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1799:29" pos:end="1809:29"><if pos:start="1799:29" pos:end="1803:29">if <condition pos:start="1799:32" pos:end="1799:47">(<expr pos:start="1799:33" pos:end="1799:46"><operator pos:start="1799:33" pos:end="1799:33">(</operator><name pos:start="1799:34" pos:end="1799:36">op1</name> <operator pos:start="1799:38" pos:end="1799:38">&amp;</operator> <literal type="number" pos:start="1799:40" pos:end="1799:40">3</literal><operator pos:start="1799:41" pos:end="1799:41">)</operator> <operator pos:start="1799:43" pos:end="1799:44">==</operator> <literal type="number" pos:start="1799:46" pos:end="1799:46">0</literal></expr>)</condition> <block pos:start="1799:49" pos:end="1803:29">{<block_content pos:start="1801:33" pos:end="1801:53">

                                <expr_stmt pos:start="1801:33" pos:end="1801:53"><expr pos:start="1801:33" pos:end="1801:52"><call pos:start="1801:33" pos:end="1801:52"><name pos:start="1801:33" pos:end="1801:41">gen_add16</name><argument_list pos:start="1801:42" pos:end="1801:52">(<argument pos:start="1801:43" pos:end="1801:45"><expr pos:start="1801:43" pos:end="1801:45"><name pos:start="1801:43" pos:end="1801:45">tmp</name></expr></argument>, <argument pos:start="1801:48" pos:end="1801:51"><expr pos:start="1801:48" pos:end="1801:51"><name pos:start="1801:48" pos:end="1801:51">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1803:31" pos:end="1809:29">else <block pos:start="1803:36" pos:end="1809:29">{<block_content pos:start="1805:33" pos:end="1807:56">

                                <expr_stmt pos:start="1805:33" pos:end="1805:64"><expr pos:start="1805:33" pos:end="1805:63"><call pos:start="1805:33" pos:end="1805:63"><name pos:start="1805:33" pos:end="1805:47">tcg_gen_add_i32</name><argument_list pos:start="1805:48" pos:end="1805:63">(<argument pos:start="1805:49" pos:end="1805:51"><expr pos:start="1805:49" pos:end="1805:51"><name pos:start="1805:49" pos:end="1805:51">tmp</name></expr></argument>, <argument pos:start="1805:54" pos:end="1805:56"><expr pos:start="1805:54" pos:end="1805:56"><name pos:start="1805:54" pos:end="1805:56">tmp</name></expr></argument>, <argument pos:start="1805:59" pos:end="1805:62"><expr pos:start="1805:59" pos:end="1805:62"><name pos:start="1805:59" pos:end="1805:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1807:33" pos:end="1807:56"><expr pos:start="1807:33" pos:end="1807:55"><call pos:start="1807:33" pos:end="1807:55"><name pos:start="1807:33" pos:end="1807:49">tcg_temp_free_i32</name><argument_list pos:start="1807:50" pos:end="1807:55">(<argument pos:start="1807:51" pos:end="1807:54"><expr pos:start="1807:51" pos:end="1807:54"><name pos:start="1807:51" pos:end="1807:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1813:25" pos:end="1813:46"><expr pos:start="1813:25" pos:end="1813:45"><call pos:start="1813:25" pos:end="1813:45"><name pos:start="1813:25" pos:end="1813:33">store_reg</name><argument_list pos:start="1813:34" pos:end="1813:45">(<argument pos:start="1813:35" pos:end="1813:35"><expr pos:start="1813:35" pos:end="1813:35"><name pos:start="1813:35" pos:end="1813:35">s</name></expr></argument>, <argument pos:start="1813:38" pos:end="1813:39"><expr pos:start="1813:38" pos:end="1813:39"><name pos:start="1813:38" pos:end="1813:39">rd</name></expr></argument>, <argument pos:start="1813:42" pos:end="1813:44"><expr pos:start="1813:42" pos:end="1813:44"><name pos:start="1813:42" pos:end="1813:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <if type="elseif" pos:start="1815:23" pos:end="1849:21">else if <condition pos:start="1815:31" pos:end="1815:65">(<expr pos:start="1815:32" pos:end="1815:64"><operator pos:start="1815:32" pos:end="1815:32">(</operator><name pos:start="1815:33" pos:end="1815:36">insn</name> <operator pos:start="1815:38" pos:end="1815:38">&amp;</operator> <literal type="number" pos:start="1815:40" pos:end="1815:49">0x003f0f60</literal><operator pos:start="1815:50" pos:end="1815:50">)</operator> <operator pos:start="1815:52" pos:end="1815:53">==</operator> <literal type="number" pos:start="1815:55" pos:end="1815:64">0x003f0f20</literal></expr>)</condition> <block pos:start="1815:67" pos:end="1849:21">{<block_content pos:start="1819:25" pos:end="1847:46">

                        <comment type="block" pos:start="1817:25" pos:end="1817:33">/* rev */</comment>

                        <expr_stmt pos:start="1819:25" pos:end="1819:46"><expr pos:start="1819:25" pos:end="1819:45"><name pos:start="1819:25" pos:end="1819:27">tmp</name> <operator pos:start="1819:29" pos:end="1819:29">=</operator> <call pos:start="1819:31" pos:end="1819:45"><name pos:start="1819:31" pos:end="1819:38">load_reg</name><argument_list pos:start="1819:39" pos:end="1819:45">(<argument pos:start="1819:40" pos:end="1819:40"><expr pos:start="1819:40" pos:end="1819:40"><name pos:start="1819:40" pos:end="1819:40">s</name></expr></argument>, <argument pos:start="1819:43" pos:end="1819:44"><expr pos:start="1819:43" pos:end="1819:44"><name pos:start="1819:43" pos:end="1819:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1821:25" pos:end="1845:25"><if pos:start="1821:25" pos:end="1835:25">if <condition pos:start="1821:28" pos:end="1821:45">(<expr pos:start="1821:29" pos:end="1821:44"><name pos:start="1821:29" pos:end="1821:32">insn</name> <operator pos:start="1821:34" pos:end="1821:34">&amp;</operator> <operator pos:start="1821:36" pos:end="1821:36">(</operator><literal type="number" pos:start="1821:37" pos:end="1821:37">1</literal> <operator pos:start="1821:39" pos:end="1821:40">&lt;&lt;</operator> <literal type="number" pos:start="1821:42" pos:end="1821:43">22</literal><operator pos:start="1821:44" pos:end="1821:44">)</operator></expr>)</condition> <block pos:start="1821:47" pos:end="1835:25">{<block_content pos:start="1823:29" pos:end="1833:29">

                            <if_stmt pos:start="1823:29" pos:end="1833:29"><if pos:start="1823:29" pos:end="1827:29">if <condition pos:start="1823:32" pos:end="1823:48">(<expr pos:start="1823:33" pos:end="1823:47"><name pos:start="1823:33" pos:end="1823:36">insn</name> <operator pos:start="1823:38" pos:end="1823:38">&amp;</operator> <operator pos:start="1823:40" pos:end="1823:40">(</operator><literal type="number" pos:start="1823:41" pos:end="1823:41">1</literal> <operator pos:start="1823:43" pos:end="1823:44">&lt;&lt;</operator> <literal type="number" pos:start="1823:46" pos:end="1823:46">7</literal><operator pos:start="1823:47" pos:end="1823:47">)</operator></expr>)</condition> <block pos:start="1823:50" pos:end="1827:29">{<block_content pos:start="1825:33" pos:end="1825:47">

                                <expr_stmt pos:start="1825:33" pos:end="1825:47"><expr pos:start="1825:33" pos:end="1825:46"><call pos:start="1825:33" pos:end="1825:46"><name pos:start="1825:33" pos:end="1825:41">gen_revsh</name><argument_list pos:start="1825:42" pos:end="1825:46">(<argument pos:start="1825:43" pos:end="1825:45"><expr pos:start="1825:43" pos:end="1825:45"><name pos:start="1825:43" pos:end="1825:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1827:31" pos:end="1833:29">else <block pos:start="1827:36" pos:end="1833:29">{<block_content pos:start="1829:33" pos:end="1831:58">

                                <expr_stmt pos:start="1829:33" pos:end="1829:42"><expr pos:start="1829:33" pos:end="1829:41"><call pos:start="1829:33" pos:end="1829:41"><name pos:start="1829:33" pos:end="1829:36">ARCH</name><argument_list pos:start="1829:37" pos:end="1829:41">(<argument pos:start="1829:38" pos:end="1829:40"><expr pos:start="1829:38" pos:end="1829:40"><literal type="number" pos:start="1829:38" pos:end="1829:40">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1831:33" pos:end="1831:58"><expr pos:start="1831:33" pos:end="1831:57"><call pos:start="1831:33" pos:end="1831:57"><name pos:start="1831:33" pos:end="1831:47">gen_helper_rbit</name><argument_list pos:start="1831:48" pos:end="1831:57">(<argument pos:start="1831:49" pos:end="1831:51"><expr pos:start="1831:49" pos:end="1831:51"><name pos:start="1831:49" pos:end="1831:51">tmp</name></expr></argument>, <argument pos:start="1831:54" pos:end="1831:56"><expr pos:start="1831:54" pos:end="1831:56"><name pos:start="1831:54" pos:end="1831:56">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="1835:27" pos:end="1845:25">else <block pos:start="1835:32" pos:end="1845:25">{<block_content pos:start="1837:29" pos:end="1843:62">

                            <if_stmt pos:start="1837:29" pos:end="1843:62"><if pos:start="1837:29" pos:end="1839:47">if <condition pos:start="1837:32" pos:end="1837:48">(<expr pos:start="1837:33" pos:end="1837:47"><name pos:start="1837:33" pos:end="1837:36">insn</name> <operator pos:start="1837:38" pos:end="1837:38">&amp;</operator> <operator pos:start="1837:40" pos:end="1837:40">(</operator><literal type="number" pos:start="1837:41" pos:end="1837:41">1</literal> <operator pos:start="1837:43" pos:end="1837:44">&lt;&lt;</operator> <literal type="number" pos:start="1837:46" pos:end="1837:46">7</literal><operator pos:start="1837:47" pos:end="1837:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1839:33" pos:end="1839:47"><block_content pos:start="1839:33" pos:end="1839:47">

                                <expr_stmt pos:start="1839:33" pos:end="1839:47"><expr pos:start="1839:33" pos:end="1839:46"><call pos:start="1839:33" pos:end="1839:46"><name pos:start="1839:33" pos:end="1839:41">gen_rev16</name><argument_list pos:start="1839:42" pos:end="1839:46">(<argument pos:start="1839:43" pos:end="1839:45"><expr pos:start="1839:43" pos:end="1839:45"><name pos:start="1839:43" pos:end="1839:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1841:29" pos:end="1843:62">else<block type="pseudo" pos:start="1843:33" pos:end="1843:62"><block_content pos:start="1843:33" pos:end="1843:62">

                                <expr_stmt pos:start="1843:33" pos:end="1843:62"><expr pos:start="1843:33" pos:end="1843:61"><call pos:start="1843:33" pos:end="1843:61"><name pos:start="1843:33" pos:end="1843:51">tcg_gen_bswap32_i32</name><argument_list pos:start="1843:52" pos:end="1843:61">(<argument pos:start="1843:53" pos:end="1843:55"><expr pos:start="1843:53" pos:end="1843:55"><name pos:start="1843:53" pos:end="1843:55">tmp</name></expr></argument>, <argument pos:start="1843:58" pos:end="1843:60"><expr pos:start="1843:58" pos:end="1843:60"><name pos:start="1843:58" pos:end="1843:60">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1847:25" pos:end="1847:46"><expr pos:start="1847:25" pos:end="1847:45"><call pos:start="1847:25" pos:end="1847:45"><name pos:start="1847:25" pos:end="1847:33">store_reg</name><argument_list pos:start="1847:34" pos:end="1847:45">(<argument pos:start="1847:35" pos:end="1847:35"><expr pos:start="1847:35" pos:end="1847:35"><name pos:start="1847:35" pos:end="1847:35">s</name></expr></argument>, <argument pos:start="1847:38" pos:end="1847:39"><expr pos:start="1847:38" pos:end="1847:39"><name pos:start="1847:38" pos:end="1847:39">rd</name></expr></argument>, <argument pos:start="1847:42" pos:end="1847:44"><expr pos:start="1847:42" pos:end="1847:44"><name pos:start="1847:42" pos:end="1847:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1849:23" pos:end="1853:21">else <block pos:start="1849:28" pos:end="1853:21">{<block_content pos:start="1851:25" pos:end="1851:40">

                        <goto pos:start="1851:25" pos:end="1851:40">goto <name pos:start="1851:30" pos:end="1851:39">illegal_op</name>;</goto>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="1855:21" pos:end="1855:26">break;</break>

                <case pos:start="1857:17" pos:end="1857:23">case <expr pos:start="1857:22" pos:end="1857:22"><literal type="number" pos:start="1857:22" pos:end="1857:22">2</literal></expr>:</case> <comment type="block" pos:start="1857:25" pos:end="1857:51">/* Multiplies (Type 3).  */</comment>

                    <expr_stmt pos:start="1859:21" pos:end="1859:42"><expr pos:start="1859:21" pos:end="1859:41"><name pos:start="1859:21" pos:end="1859:23">tmp</name> <operator pos:start="1859:25" pos:end="1859:25">=</operator> <call pos:start="1859:27" pos:end="1859:41"><name pos:start="1859:27" pos:end="1859:34">load_reg</name><argument_list pos:start="1859:35" pos:end="1859:41">(<argument pos:start="1859:36" pos:end="1859:36"><expr pos:start="1859:36" pos:end="1859:36"><name pos:start="1859:36" pos:end="1859:36">s</name></expr></argument>, <argument pos:start="1859:39" pos:end="1859:40"><expr pos:start="1859:39" pos:end="1859:40"><name pos:start="1859:39" pos:end="1859:40">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1861:21" pos:end="1861:43"><expr pos:start="1861:21" pos:end="1861:42"><name pos:start="1861:21" pos:end="1861:24">tmp2</name> <operator pos:start="1861:26" pos:end="1861:26">=</operator> <call pos:start="1861:28" pos:end="1861:42"><name pos:start="1861:28" pos:end="1861:35">load_reg</name><argument_list pos:start="1861:36" pos:end="1861:42">(<argument pos:start="1861:37" pos:end="1861:37"><expr pos:start="1861:37" pos:end="1861:37"><name pos:start="1861:37" pos:end="1861:37">s</name></expr></argument>, <argument pos:start="1861:40" pos:end="1861:41"><expr pos:start="1861:40" pos:end="1861:41"><name pos:start="1861:40" pos:end="1861:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1863:21" pos:end="1971:21"><if pos:start="1863:21" pos:end="1905:21">if <condition pos:start="1863:24" pos:end="1863:41">(<expr pos:start="1863:25" pos:end="1863:40"><name pos:start="1863:25" pos:end="1863:28">insn</name> <operator pos:start="1863:30" pos:end="1863:30">&amp;</operator> <operator pos:start="1863:32" pos:end="1863:32">(</operator><literal type="number" pos:start="1863:33" pos:end="1863:33">1</literal> <operator pos:start="1863:35" pos:end="1863:36">&lt;&lt;</operator> <literal type="number" pos:start="1863:38" pos:end="1863:39">20</literal><operator pos:start="1863:40" pos:end="1863:40">)</operator></expr>)</condition> <block pos:start="1863:43" pos:end="1905:21">{<block_content pos:start="1869:25" pos:end="1903:46">

                        <comment type="block" pos:start="1865:25" pos:end="1867:51">/* Signed multiply most significant [accumulate].

                           (SMMUL, SMMLA, SMMLS) */</comment>

                        <expr_stmt pos:start="1869:25" pos:end="1869:60"><expr pos:start="1869:25" pos:end="1869:59"><name pos:start="1869:25" pos:end="1869:29">tmp64</name> <operator pos:start="1869:31" pos:end="1869:31">=</operator> <call pos:start="1869:33" pos:end="1869:59"><name pos:start="1869:33" pos:end="1869:48">gen_muls_i64_i32</name><argument_list pos:start="1869:49" pos:end="1869:59">(<argument pos:start="1869:50" pos:end="1869:52"><expr pos:start="1869:50" pos:end="1869:52"><name pos:start="1869:50" pos:end="1869:52">tmp</name></expr></argument>, <argument pos:start="1869:55" pos:end="1869:58"><expr pos:start="1869:55" pos:end="1869:58"><name pos:start="1869:55" pos:end="1869:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <if_stmt pos:start="1873:25" pos:end="1887:25"><if pos:start="1873:25" pos:end="1887:25">if <condition pos:start="1873:28" pos:end="1873:37">(<expr pos:start="1873:29" pos:end="1873:36"><name pos:start="1873:29" pos:end="1873:30">rd</name> <operator pos:start="1873:32" pos:end="1873:33">!=</operator> <literal type="number" pos:start="1873:35" pos:end="1873:36">15</literal></expr>)</condition> <block pos:start="1873:39" pos:end="1887:25">{<block_content pos:start="1875:29" pos:end="1885:29">

                            <expr_stmt pos:start="1875:29" pos:end="1875:50"><expr pos:start="1875:29" pos:end="1875:49"><name pos:start="1875:29" pos:end="1875:31">tmp</name> <operator pos:start="1875:33" pos:end="1875:33">=</operator> <call pos:start="1875:35" pos:end="1875:49"><name pos:start="1875:35" pos:end="1875:42">load_reg</name><argument_list pos:start="1875:43" pos:end="1875:49">(<argument pos:start="1875:44" pos:end="1875:44"><expr pos:start="1875:44" pos:end="1875:44"><name pos:start="1875:44" pos:end="1875:44">s</name></expr></argument>, <argument pos:start="1875:47" pos:end="1875:48"><expr pos:start="1875:47" pos:end="1875:48"><name pos:start="1875:47" pos:end="1875:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1877:29" pos:end="1885:29"><if pos:start="1877:29" pos:end="1881:29">if <condition pos:start="1877:32" pos:end="1877:48">(<expr pos:start="1877:33" pos:end="1877:47"><name pos:start="1877:33" pos:end="1877:36">insn</name> <operator pos:start="1877:38" pos:end="1877:38">&amp;</operator> <operator pos:start="1877:40" pos:end="1877:40">(</operator><literal type="number" pos:start="1877:41" pos:end="1877:41">1</literal> <operator pos:start="1877:43" pos:end="1877:44">&lt;&lt;</operator> <literal type="number" pos:start="1877:46" pos:end="1877:46">6</literal><operator pos:start="1877:47" pos:end="1877:47">)</operator></expr>)</condition> <block pos:start="1877:50" pos:end="1881:29">{<block_content pos:start="1879:33" pos:end="1879:65">

                                <expr_stmt pos:start="1879:33" pos:end="1879:65"><expr pos:start="1879:33" pos:end="1879:64"><name pos:start="1879:33" pos:end="1879:37">tmp64</name> <operator pos:start="1879:39" pos:end="1879:39">=</operator> <call pos:start="1879:41" pos:end="1879:64"><name pos:start="1879:41" pos:end="1879:52">gen_subq_msw</name><argument_list pos:start="1879:53" pos:end="1879:64">(<argument pos:start="1879:54" pos:end="1879:58"><expr pos:start="1879:54" pos:end="1879:58"><name pos:start="1879:54" pos:end="1879:58">tmp64</name></expr></argument>, <argument pos:start="1879:61" pos:end="1879:63"><expr pos:start="1879:61" pos:end="1879:63"><name pos:start="1879:61" pos:end="1879:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="1881:31" pos:end="1885:29">else <block pos:start="1881:36" pos:end="1885:29">{<block_content pos:start="1883:33" pos:end="1883:65">

                                <expr_stmt pos:start="1883:33" pos:end="1883:65"><expr pos:start="1883:33" pos:end="1883:64"><name pos:start="1883:33" pos:end="1883:37">tmp64</name> <operator pos:start="1883:39" pos:end="1883:39">=</operator> <call pos:start="1883:41" pos:end="1883:64"><name pos:start="1883:41" pos:end="1883:52">gen_addq_msw</name><argument_list pos:start="1883:53" pos:end="1883:64">(<argument pos:start="1883:54" pos:end="1883:58"><expr pos:start="1883:54" pos:end="1883:58"><name pos:start="1883:54" pos:end="1883:58">tmp64</name></expr></argument>, <argument pos:start="1883:61" pos:end="1883:63"><expr pos:start="1883:61" pos:end="1883:63"><name pos:start="1883:61" pos:end="1883:63">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1889:25" pos:end="1893:25"><if pos:start="1889:25" pos:end="1893:25">if <condition pos:start="1889:28" pos:end="1889:44">(<expr pos:start="1889:29" pos:end="1889:43"><name pos:start="1889:29" pos:end="1889:32">insn</name> <operator pos:start="1889:34" pos:end="1889:34">&amp;</operator> <operator pos:start="1889:36" pos:end="1889:36">(</operator><literal type="number" pos:start="1889:37" pos:end="1889:37">1</literal> <operator pos:start="1889:39" pos:end="1889:40">&lt;&lt;</operator> <literal type="number" pos:start="1889:42" pos:end="1889:42">5</literal><operator pos:start="1889:43" pos:end="1889:43">)</operator></expr>)</condition> <block pos:start="1889:46" pos:end="1893:25">{<block_content pos:start="1891:29" pos:end="1891:72">

                            <expr_stmt pos:start="1891:29" pos:end="1891:72"><expr pos:start="1891:29" pos:end="1891:71"><call pos:start="1891:29" pos:end="1891:71"><name pos:start="1891:29" pos:end="1891:44">tcg_gen_addi_i64</name><argument_list pos:start="1891:45" pos:end="1891:71">(<argument pos:start="1891:46" pos:end="1891:50"><expr pos:start="1891:46" pos:end="1891:50"><name pos:start="1891:46" pos:end="1891:50">tmp64</name></expr></argument>, <argument pos:start="1891:53" pos:end="1891:57"><expr pos:start="1891:53" pos:end="1891:57"><name pos:start="1891:53" pos:end="1891:57">tmp64</name></expr></argument>, <argument pos:start="1891:60" pos:end="1891:70"><expr pos:start="1891:60" pos:end="1891:70"><literal type="number" pos:start="1891:60" pos:end="1891:70">0x80000000u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1895:25" pos:end="1895:59"><expr pos:start="1895:25" pos:end="1895:58"><call pos:start="1895:25" pos:end="1895:58"><name pos:start="1895:25" pos:end="1895:40">tcg_gen_shri_i64</name><argument_list pos:start="1895:41" pos:end="1895:58">(<argument pos:start="1895:42" pos:end="1895:46"><expr pos:start="1895:42" pos:end="1895:46"><name pos:start="1895:42" pos:end="1895:46">tmp64</name></expr></argument>, <argument pos:start="1895:49" pos:end="1895:53"><expr pos:start="1895:49" pos:end="1895:53"><name pos:start="1895:49" pos:end="1895:53">tmp64</name></expr></argument>, <argument pos:start="1895:56" pos:end="1895:57"><expr pos:start="1895:56" pos:end="1895:57"><literal type="number" pos:start="1895:56" pos:end="1895:57">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1897:25" pos:end="1897:49"><expr pos:start="1897:25" pos:end="1897:48"><name pos:start="1897:25" pos:end="1897:27">tmp</name> <operator pos:start="1897:29" pos:end="1897:29">=</operator> <call pos:start="1897:31" pos:end="1897:48"><name pos:start="1897:31" pos:end="1897:46">tcg_temp_new_i32</name><argument_list pos:start="1897:47" pos:end="1897:48">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1899:25" pos:end="1899:58"><expr pos:start="1899:25" pos:end="1899:57"><call pos:start="1899:25" pos:end="1899:57"><name pos:start="1899:25" pos:end="1899:45">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1899:46" pos:end="1899:57">(<argument pos:start="1899:47" pos:end="1899:49"><expr pos:start="1899:47" pos:end="1899:49"><name pos:start="1899:47" pos:end="1899:49">tmp</name></expr></argument>, <argument pos:start="1899:52" pos:end="1899:56"><expr pos:start="1899:52" pos:end="1899:56"><name pos:start="1899:52" pos:end="1899:56">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1901:25" pos:end="1901:49"><expr pos:start="1901:25" pos:end="1901:48"><call pos:start="1901:25" pos:end="1901:48"><name pos:start="1901:25" pos:end="1901:41">tcg_temp_free_i64</name><argument_list pos:start="1901:42" pos:end="1901:48">(<argument pos:start="1901:43" pos:end="1901:47"><expr pos:start="1901:43" pos:end="1901:47"><name pos:start="1901:43" pos:end="1901:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1903:25" pos:end="1903:46"><expr pos:start="1903:25" pos:end="1903:45"><call pos:start="1903:25" pos:end="1903:45"><name pos:start="1903:25" pos:end="1903:33">store_reg</name><argument_list pos:start="1903:34" pos:end="1903:45">(<argument pos:start="1903:35" pos:end="1903:35"><expr pos:start="1903:35" pos:end="1903:35"><name pos:start="1903:35" pos:end="1903:35">s</name></expr></argument>, <argument pos:start="1903:38" pos:end="1903:39"><expr pos:start="1903:38" pos:end="1903:39"><name pos:start="1903:38" pos:end="1903:39">rn</name></expr></argument>, <argument pos:start="1903:42" pos:end="1903:44"><expr pos:start="1903:42" pos:end="1903:44"><name pos:start="1903:42" pos:end="1903:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1905:23" pos:end="1971:21">else <block pos:start="1905:28" pos:end="1971:21">{<block_content pos:start="1907:25" pos:end="1969:25">

                        <if_stmt pos:start="1907:25" pos:end="1909:48"><if pos:start="1907:25" pos:end="1909:48">if <condition pos:start="1907:28" pos:end="1907:44">(<expr pos:start="1907:29" pos:end="1907:43"><name pos:start="1907:29" pos:end="1907:32">insn</name> <operator pos:start="1907:34" pos:end="1907:34">&amp;</operator> <operator pos:start="1907:36" pos:end="1907:36">(</operator><literal type="number" pos:start="1907:37" pos:end="1907:37">1</literal> <operator pos:start="1907:39" pos:end="1907:40">&lt;&lt;</operator> <literal type="number" pos:start="1907:42" pos:end="1907:42">5</literal><operator pos:start="1907:43" pos:end="1907:43">)</operator></expr>)</condition><block type="pseudo" pos:start="1909:29" pos:end="1909:48"><block_content pos:start="1909:29" pos:end="1909:48">

                            <expr_stmt pos:start="1909:29" pos:end="1909:48"><expr pos:start="1909:29" pos:end="1909:47"><call pos:start="1909:29" pos:end="1909:47"><name pos:start="1909:29" pos:end="1909:41">gen_swap_half</name><argument_list pos:start="1909:42" pos:end="1909:47">(<argument pos:start="1909:43" pos:end="1909:46"><expr pos:start="1909:43" pos:end="1909:46"><name pos:start="1909:43" pos:end="1909:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1911:25" pos:end="1911:49"><expr pos:start="1911:25" pos:end="1911:48"><call pos:start="1911:25" pos:end="1911:48"><name pos:start="1911:25" pos:end="1911:37">gen_smul_dual</name><argument_list pos:start="1911:38" pos:end="1911:48">(<argument pos:start="1911:39" pos:end="1911:41"><expr pos:start="1911:39" pos:end="1911:41"><name pos:start="1911:39" pos:end="1911:41">tmp</name></expr></argument>, <argument pos:start="1911:44" pos:end="1911:47"><expr pos:start="1911:44" pos:end="1911:47"><name pos:start="1911:44" pos:end="1911:47">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1913:25" pos:end="1931:25"><if pos:start="1913:25" pos:end="1919:25">if <condition pos:start="1913:28" pos:end="1913:44">(<expr pos:start="1913:29" pos:end="1913:43"><name pos:start="1913:29" pos:end="1913:32">insn</name> <operator pos:start="1913:34" pos:end="1913:34">&amp;</operator> <operator pos:start="1913:36" pos:end="1913:36">(</operator><literal type="number" pos:start="1913:37" pos:end="1913:37">1</literal> <operator pos:start="1913:39" pos:end="1913:40">&lt;&lt;</operator> <literal type="number" pos:start="1913:42" pos:end="1913:42">6</literal><operator pos:start="1913:43" pos:end="1913:43">)</operator></expr>)</condition> <block pos:start="1913:46" pos:end="1919:25">{<block_content pos:start="1917:29" pos:end="1917:60">

                            <comment type="block" pos:start="1915:29" pos:end="1915:67">/* This subtraction cannot overflow. */</comment>

                            <expr_stmt pos:start="1917:29" pos:end="1917:60"><expr pos:start="1917:29" pos:end="1917:59"><call pos:start="1917:29" pos:end="1917:59"><name pos:start="1917:29" pos:end="1917:43">tcg_gen_sub_i32</name><argument_list pos:start="1917:44" pos:end="1917:59">(<argument pos:start="1917:45" pos:end="1917:47"><expr pos:start="1917:45" pos:end="1917:47"><name pos:start="1917:45" pos:end="1917:47">tmp</name></expr></argument>, <argument pos:start="1917:50" pos:end="1917:52"><expr pos:start="1917:50" pos:end="1917:52"><name pos:start="1917:50" pos:end="1917:52">tmp</name></expr></argument>, <argument pos:start="1917:55" pos:end="1917:58"><expr pos:start="1917:55" pos:end="1917:58"><name pos:start="1917:55" pos:end="1917:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1919:27" pos:end="1931:25">else <block pos:start="1919:32" pos:end="1931:25">{<block_content pos:start="1929:29" pos:end="1929:64">

                            <comment type="block" pos:start="1921:29" pos:end="1927:31">/* This addition cannot overflow 32 bits;

                             * however it may overflow considered as a signed

                             * operation, in which case we must set the Q flag.

                             */</comment>

                            <expr_stmt pos:start="1929:29" pos:end="1929:64"><expr pos:start="1929:29" pos:end="1929:63"><call pos:start="1929:29" pos:end="1929:63"><name pos:start="1929:29" pos:end="1929:47">gen_helper_add_setq</name><argument_list pos:start="1929:48" pos:end="1929:63">(<argument pos:start="1929:49" pos:end="1929:51"><expr pos:start="1929:49" pos:end="1929:51"><name pos:start="1929:49" pos:end="1929:51">tmp</name></expr></argument>, <argument pos:start="1929:54" pos:end="1929:56"><expr pos:start="1929:54" pos:end="1929:56"><name pos:start="1929:54" pos:end="1929:56">tmp</name></expr></argument>, <argument pos:start="1929:59" pos:end="1929:62"><expr pos:start="1929:59" pos:end="1929:62"><name pos:start="1929:59" pos:end="1929:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1933:25" pos:end="1933:48"><expr pos:start="1933:25" pos:end="1933:47"><call pos:start="1933:25" pos:end="1933:47"><name pos:start="1933:25" pos:end="1933:41">tcg_temp_free_i32</name><argument_list pos:start="1933:42" pos:end="1933:47">(<argument pos:start="1933:43" pos:end="1933:46"><expr pos:start="1933:43" pos:end="1933:46"><name pos:start="1933:43" pos:end="1933:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1935:25" pos:end="1969:25"><if pos:start="1935:25" pos:end="1951:25">if <condition pos:start="1935:28" pos:end="1935:45">(<expr pos:start="1935:29" pos:end="1935:44"><name pos:start="1935:29" pos:end="1935:32">insn</name> <operator pos:start="1935:34" pos:end="1935:34">&amp;</operator> <operator pos:start="1935:36" pos:end="1935:36">(</operator><literal type="number" pos:start="1935:37" pos:end="1935:37">1</literal> <operator pos:start="1935:39" pos:end="1935:40">&lt;&lt;</operator> <literal type="number" pos:start="1935:42" pos:end="1935:43">22</literal><operator pos:start="1935:44" pos:end="1935:44">)</operator></expr>)</condition> <block pos:start="1935:47" pos:end="1951:25">{<block_content pos:start="1939:29" pos:end="1949:53">

                            <comment type="block" pos:start="1937:29" pos:end="1937:48">/* smlald, smlsld */</comment>

                            <expr_stmt pos:start="1939:29" pos:end="1939:55"><expr pos:start="1939:29" pos:end="1939:54"><name pos:start="1939:29" pos:end="1939:33">tmp64</name> <operator pos:start="1939:35" pos:end="1939:35">=</operator> <call pos:start="1939:37" pos:end="1939:54"><name pos:start="1939:37" pos:end="1939:52">tcg_temp_new_i64</name><argument_list pos:start="1939:53" pos:end="1939:54">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1941:29" pos:end="1941:60"><expr pos:start="1941:29" pos:end="1941:59"><call pos:start="1941:29" pos:end="1941:59"><name pos:start="1941:29" pos:end="1941:47">tcg_gen_ext_i32_i64</name><argument_list pos:start="1941:48" pos:end="1941:59">(<argument pos:start="1941:49" pos:end="1941:53"><expr pos:start="1941:49" pos:end="1941:53"><name pos:start="1941:49" pos:end="1941:53">tmp64</name></expr></argument>, <argument pos:start="1941:56" pos:end="1941:58"><expr pos:start="1941:56" pos:end="1941:58"><name pos:start="1941:56" pos:end="1941:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1943:29" pos:end="1943:51"><expr pos:start="1943:29" pos:end="1943:50"><call pos:start="1943:29" pos:end="1943:50"><name pos:start="1943:29" pos:end="1943:45">tcg_temp_free_i32</name><argument_list pos:start="1943:46" pos:end="1943:50">(<argument pos:start="1943:47" pos:end="1943:49"><expr pos:start="1943:47" pos:end="1943:49"><name pos:start="1943:47" pos:end="1943:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1945:29" pos:end="1945:55"><expr pos:start="1945:29" pos:end="1945:54"><call pos:start="1945:29" pos:end="1945:54"><name pos:start="1945:29" pos:end="1945:36">gen_addq</name><argument_list pos:start="1945:37" pos:end="1945:54">(<argument pos:start="1945:38" pos:end="1945:38"><expr pos:start="1945:38" pos:end="1945:38"><name pos:start="1945:38" pos:end="1945:38">s</name></expr></argument>, <argument pos:start="1945:41" pos:end="1945:45"><expr pos:start="1945:41" pos:end="1945:45"><name pos:start="1945:41" pos:end="1945:45">tmp64</name></expr></argument>, <argument pos:start="1945:48" pos:end="1945:49"><expr pos:start="1945:48" pos:end="1945:49"><name pos:start="1945:48" pos:end="1945:49">rd</name></expr></argument>, <argument pos:start="1945:52" pos:end="1945:53"><expr pos:start="1945:52" pos:end="1945:53"><name pos:start="1945:52" pos:end="1945:53">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1947:29" pos:end="1947:61"><expr pos:start="1947:29" pos:end="1947:60"><call pos:start="1947:29" pos:end="1947:60"><name pos:start="1947:29" pos:end="1947:42">gen_storeq_reg</name><argument_list pos:start="1947:43" pos:end="1947:60">(<argument pos:start="1947:44" pos:end="1947:44"><expr pos:start="1947:44" pos:end="1947:44"><name pos:start="1947:44" pos:end="1947:44">s</name></expr></argument>, <argument pos:start="1947:47" pos:end="1947:48"><expr pos:start="1947:47" pos:end="1947:48"><name pos:start="1947:47" pos:end="1947:48">rd</name></expr></argument>, <argument pos:start="1947:51" pos:end="1947:52"><expr pos:start="1947:51" pos:end="1947:52"><name pos:start="1947:51" pos:end="1947:52">rn</name></expr></argument>, <argument pos:start="1947:55" pos:end="1947:59"><expr pos:start="1947:55" pos:end="1947:59"><name pos:start="1947:55" pos:end="1947:59">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1949:29" pos:end="1949:53"><expr pos:start="1949:29" pos:end="1949:52"><call pos:start="1949:29" pos:end="1949:52"><name pos:start="1949:29" pos:end="1949:45">tcg_temp_free_i64</name><argument_list pos:start="1949:46" pos:end="1949:52">(<argument pos:start="1949:47" pos:end="1949:51"><expr pos:start="1949:47" pos:end="1949:51"><name pos:start="1949:47" pos:end="1949:51">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1951:27" pos:end="1969:25">else <block pos:start="1951:32" pos:end="1969:25">{<block_content pos:start="1955:29" pos:end="1967:50">

                            <comment type="block" pos:start="1953:29" pos:end="1953:60">/* smuad, smusd, smlad, smlsd */</comment>

                            <if_stmt pos:start="1955:29" pos:end="1965:31"><if pos:start="1955:29" pos:end="1965:31">if <condition pos:start="1955:32" pos:end="1955:41">(<expr pos:start="1955:33" pos:end="1955:40"><name pos:start="1955:33" pos:end="1955:34">rd</name> <operator pos:start="1955:36" pos:end="1955:37">!=</operator> <literal type="number" pos:start="1955:39" pos:end="1955:40">15</literal></expr>)</condition>

                              <block pos:start="1957:31" pos:end="1965:31">{<block_content pos:start="1959:33" pos:end="1963:56">

                                <expr_stmt pos:start="1959:33" pos:end="1959:55"><expr pos:start="1959:33" pos:end="1959:54"><name pos:start="1959:33" pos:end="1959:36">tmp2</name> <operator pos:start="1959:38" pos:end="1959:38">=</operator> <call pos:start="1959:40" pos:end="1959:54"><name pos:start="1959:40" pos:end="1959:47">load_reg</name><argument_list pos:start="1959:48" pos:end="1959:54">(<argument pos:start="1959:49" pos:end="1959:49"><expr pos:start="1959:49" pos:end="1959:49"><name pos:start="1959:49" pos:end="1959:49">s</name></expr></argument>, <argument pos:start="1959:52" pos:end="1959:53"><expr pos:start="1959:52" pos:end="1959:53"><name pos:start="1959:52" pos:end="1959:53">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1961:33" pos:end="1961:68"><expr pos:start="1961:33" pos:end="1961:67"><call pos:start="1961:33" pos:end="1961:67"><name pos:start="1961:33" pos:end="1961:51">gen_helper_add_setq</name><argument_list pos:start="1961:52" pos:end="1961:67">(<argument pos:start="1961:53" pos:end="1961:55"><expr pos:start="1961:53" pos:end="1961:55"><name pos:start="1961:53" pos:end="1961:55">tmp</name></expr></argument>, <argument pos:start="1961:58" pos:end="1961:60"><expr pos:start="1961:58" pos:end="1961:60"><name pos:start="1961:58" pos:end="1961:60">tmp</name></expr></argument>, <argument pos:start="1961:63" pos:end="1961:66"><expr pos:start="1961:63" pos:end="1961:66"><name pos:start="1961:63" pos:end="1961:66">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="1963:33" pos:end="1963:56"><expr pos:start="1963:33" pos:end="1963:55"><call pos:start="1963:33" pos:end="1963:55"><name pos:start="1963:33" pos:end="1963:49">tcg_temp_free_i32</name><argument_list pos:start="1963:50" pos:end="1963:55">(<argument pos:start="1963:51" pos:end="1963:54"><expr pos:start="1963:51" pos:end="1963:54"><name pos:start="1963:51" pos:end="1963:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                              </block_content>}</block></if></if_stmt>

                            <expr_stmt pos:start="1967:29" pos:end="1967:50"><expr pos:start="1967:29" pos:end="1967:49"><call pos:start="1967:29" pos:end="1967:49"><name pos:start="1967:29" pos:end="1967:37">store_reg</name><argument_list pos:start="1967:38" pos:end="1967:49">(<argument pos:start="1967:39" pos:end="1967:39"><expr pos:start="1967:39" pos:end="1967:39"><name pos:start="1967:39" pos:end="1967:39">s</name></expr></argument>, <argument pos:start="1967:42" pos:end="1967:43"><expr pos:start="1967:42" pos:end="1967:43"><name pos:start="1967:42" pos:end="1967:43">rn</name></expr></argument>, <argument pos:start="1967:46" pos:end="1967:48"><expr pos:start="1967:46" pos:end="1967:48"><name pos:start="1967:46" pos:end="1967:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <break pos:start="1973:21" pos:end="1973:26">break;</break>

                <case pos:start="1975:17" pos:end="1975:23">case <expr pos:start="1975:22" pos:end="1975:22"><literal type="number" pos:start="1975:22" pos:end="1975:22">3</literal></expr>:</case>

                    <expr_stmt pos:start="1977:21" pos:end="1977:68"><expr pos:start="1977:21" pos:end="1977:67"><name pos:start="1977:21" pos:end="1977:23">op1</name> <operator pos:start="1977:25" pos:end="1977:25">=</operator> <operator pos:start="1977:27" pos:end="1977:27">(</operator><operator pos:start="1977:28" pos:end="1977:28">(</operator><name pos:start="1977:29" pos:end="1977:32">insn</name> <operator pos:start="1977:34" pos:end="1977:35">&gt;&gt;</operator> <literal type="number" pos:start="1977:37" pos:end="1977:38">17</literal><operator pos:start="1977:39" pos:end="1977:39">)</operator> <operator pos:start="1977:41" pos:end="1977:41">&amp;</operator> <literal type="number" pos:start="1977:43" pos:end="1977:46">0x38</literal><operator pos:start="1977:47" pos:end="1977:47">)</operator> <operator pos:start="1977:49" pos:end="1977:49">|</operator> <operator pos:start="1977:51" pos:end="1977:51">(</operator><operator pos:start="1977:52" pos:end="1977:52">(</operator><name pos:start="1977:53" pos:end="1977:56">insn</name> <operator pos:start="1977:58" pos:end="1977:59">&gt;&gt;</operator> <literal type="number" pos:start="1977:61" pos:end="1977:61">5</literal><operator pos:start="1977:62" pos:end="1977:62">)</operator> <operator pos:start="1977:64" pos:end="1977:64">&amp;</operator> <literal type="number" pos:start="1977:66" pos:end="1977:66">7</literal><operator pos:start="1977:67" pos:end="1977:67">)</operator></expr>;</expr_stmt>

                    <switch pos:start="1979:21" pos:end="2083:21">switch <condition pos:start="1979:28" pos:end="1979:32">(<expr pos:start="1979:29" pos:end="1979:31"><name pos:start="1979:29" pos:end="1979:31">op1</name></expr>)</condition> <block pos:start="1979:34" pos:end="2083:21">{<block_content pos:start="1981:21" pos:end="2081:40">

                    <case pos:start="1981:21" pos:end="1981:27">case <expr pos:start="1981:26" pos:end="1981:26"><literal type="number" pos:start="1981:26" pos:end="1981:26">0</literal></expr>:</case> <comment type="block" pos:start="1981:29" pos:end="1981:72">/* Unsigned sum of absolute differences.  */</comment>

                        <expr_stmt pos:start="1983:25" pos:end="1983:32"><expr pos:start="1983:25" pos:end="1983:31"><call pos:start="1983:25" pos:end="1983:31"><name pos:start="1983:25" pos:end="1983:28">ARCH</name><argument_list pos:start="1983:29" pos:end="1983:31">(<argument pos:start="1983:30" pos:end="1983:30"><expr pos:start="1983:30" pos:end="1983:30"><literal type="number" pos:start="1983:30" pos:end="1983:30">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1985:25" pos:end="1985:46"><expr pos:start="1985:25" pos:end="1985:45"><name pos:start="1985:25" pos:end="1985:27">tmp</name> <operator pos:start="1985:29" pos:end="1985:29">=</operator> <call pos:start="1985:31" pos:end="1985:45"><name pos:start="1985:31" pos:end="1985:38">load_reg</name><argument_list pos:start="1985:39" pos:end="1985:45">(<argument pos:start="1985:40" pos:end="1985:40"><expr pos:start="1985:40" pos:end="1985:40"><name pos:start="1985:40" pos:end="1985:40">s</name></expr></argument>, <argument pos:start="1985:43" pos:end="1985:44"><expr pos:start="1985:43" pos:end="1985:44"><name pos:start="1985:43" pos:end="1985:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1987:25" pos:end="1987:47"><expr pos:start="1987:25" pos:end="1987:46"><name pos:start="1987:25" pos:end="1987:28">tmp2</name> <operator pos:start="1987:30" pos:end="1987:30">=</operator> <call pos:start="1987:32" pos:end="1987:46"><name pos:start="1987:32" pos:end="1987:39">load_reg</name><argument_list pos:start="1987:40" pos:end="1987:46">(<argument pos:start="1987:41" pos:end="1987:41"><expr pos:start="1987:41" pos:end="1987:41"><name pos:start="1987:41" pos:end="1987:41">s</name></expr></argument>, <argument pos:start="1987:44" pos:end="1987:45"><expr pos:start="1987:44" pos:end="1987:45"><name pos:start="1987:44" pos:end="1987:45">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1989:25" pos:end="1989:57"><expr pos:start="1989:25" pos:end="1989:56"><call pos:start="1989:25" pos:end="1989:56"><name pos:start="1989:25" pos:end="1989:40">gen_helper_usad8</name><argument_list pos:start="1989:41" pos:end="1989:56">(<argument pos:start="1989:42" pos:end="1989:44"><expr pos:start="1989:42" pos:end="1989:44"><name pos:start="1989:42" pos:end="1989:44">tmp</name></expr></argument>, <argument pos:start="1989:47" pos:end="1989:49"><expr pos:start="1989:47" pos:end="1989:49"><name pos:start="1989:47" pos:end="1989:49">tmp</name></expr></argument>, <argument pos:start="1989:52" pos:end="1989:55"><expr pos:start="1989:52" pos:end="1989:55"><name pos:start="1989:52" pos:end="1989:55">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1991:25" pos:end="1991:48"><expr pos:start="1991:25" pos:end="1991:47"><call pos:start="1991:25" pos:end="1991:47"><name pos:start="1991:25" pos:end="1991:41">tcg_temp_free_i32</name><argument_list pos:start="1991:42" pos:end="1991:47">(<argument pos:start="1991:43" pos:end="1991:46"><expr pos:start="1991:43" pos:end="1991:46"><name pos:start="1991:43" pos:end="1991:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1993:25" pos:end="2001:25"><if pos:start="1993:25" pos:end="2001:25">if <condition pos:start="1993:28" pos:end="1993:37">(<expr pos:start="1993:29" pos:end="1993:36"><name pos:start="1993:29" pos:end="1993:30">rd</name> <operator pos:start="1993:32" pos:end="1993:33">!=</operator> <literal type="number" pos:start="1993:35" pos:end="1993:36">15</literal></expr>)</condition> <block pos:start="1993:39" pos:end="2001:25">{<block_content pos:start="1995:29" pos:end="1999:52">

                            <expr_stmt pos:start="1995:29" pos:end="1995:51"><expr pos:start="1995:29" pos:end="1995:50"><name pos:start="1995:29" pos:end="1995:32">tmp2</name> <operator pos:start="1995:34" pos:end="1995:34">=</operator> <call pos:start="1995:36" pos:end="1995:50"><name pos:start="1995:36" pos:end="1995:43">load_reg</name><argument_list pos:start="1995:44" pos:end="1995:50">(<argument pos:start="1995:45" pos:end="1995:45"><expr pos:start="1995:45" pos:end="1995:45"><name pos:start="1995:45" pos:end="1995:45">s</name></expr></argument>, <argument pos:start="1995:48" pos:end="1995:49"><expr pos:start="1995:48" pos:end="1995:49"><name pos:start="1995:48" pos:end="1995:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1997:29" pos:end="1997:60"><expr pos:start="1997:29" pos:end="1997:59"><call pos:start="1997:29" pos:end="1997:59"><name pos:start="1997:29" pos:end="1997:43">tcg_gen_add_i32</name><argument_list pos:start="1997:44" pos:end="1997:59">(<argument pos:start="1997:45" pos:end="1997:47"><expr pos:start="1997:45" pos:end="1997:47"><name pos:start="1997:45" pos:end="1997:47">tmp</name></expr></argument>, <argument pos:start="1997:50" pos:end="1997:52"><expr pos:start="1997:50" pos:end="1997:52"><name pos:start="1997:50" pos:end="1997:52">tmp</name></expr></argument>, <argument pos:start="1997:55" pos:end="1997:58"><expr pos:start="1997:55" pos:end="1997:58"><name pos:start="1997:55" pos:end="1997:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1999:29" pos:end="1999:52"><expr pos:start="1999:29" pos:end="1999:51"><call pos:start="1999:29" pos:end="1999:51"><name pos:start="1999:29" pos:end="1999:45">tcg_temp_free_i32</name><argument_list pos:start="1999:46" pos:end="1999:51">(<argument pos:start="1999:47" pos:end="1999:50"><expr pos:start="1999:47" pos:end="1999:50"><name pos:start="1999:47" pos:end="1999:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2003:25" pos:end="2003:46"><expr pos:start="2003:25" pos:end="2003:45"><call pos:start="2003:25" pos:end="2003:45"><name pos:start="2003:25" pos:end="2003:33">store_reg</name><argument_list pos:start="2003:34" pos:end="2003:45">(<argument pos:start="2003:35" pos:end="2003:35"><expr pos:start="2003:35" pos:end="2003:35"><name pos:start="2003:35" pos:end="2003:35">s</name></expr></argument>, <argument pos:start="2003:38" pos:end="2003:39"><expr pos:start="2003:38" pos:end="2003:39"><name pos:start="2003:38" pos:end="2003:39">rn</name></expr></argument>, <argument pos:start="2003:42" pos:end="2003:44"><expr pos:start="2003:42" pos:end="2003:44"><name pos:start="2003:42" pos:end="2003:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2005:25" pos:end="2005:30">break;</break>

                    <case pos:start="2007:21" pos:end="2007:30">case <expr pos:start="2007:26" pos:end="2007:29"><literal type="number" pos:start="2007:26" pos:end="2007:29">0x20</literal></expr>:</case> <case pos:start="2007:32" pos:end="2007:41">case <expr pos:start="2007:37" pos:end="2007:40"><literal type="number" pos:start="2007:37" pos:end="2007:40">0x24</literal></expr>:</case> <case pos:start="2007:43" pos:end="2007:52">case <expr pos:start="2007:48" pos:end="2007:51"><literal type="number" pos:start="2007:48" pos:end="2007:51">0x28</literal></expr>:</case> <case pos:start="2007:54" pos:end="2007:63">case <expr pos:start="2007:59" pos:end="2007:62"><literal type="number" pos:start="2007:59" pos:end="2007:62">0x2c</literal></expr>:</case>

                        <comment type="block" pos:start="2009:25" pos:end="2009:53">/* Bitfield insert/clear.  */</comment>

                        <expr_stmt pos:start="2011:25" pos:end="2011:34"><expr pos:start="2011:25" pos:end="2011:33"><call pos:start="2011:25" pos:end="2011:33"><name pos:start="2011:25" pos:end="2011:28">ARCH</name><argument_list pos:start="2011:29" pos:end="2011:33">(<argument pos:start="2011:30" pos:end="2011:32"><expr pos:start="2011:30" pos:end="2011:32"><literal type="number" pos:start="2011:30" pos:end="2011:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2013:25" pos:end="2013:51"><expr pos:start="2013:25" pos:end="2013:50"><name pos:start="2013:25" pos:end="2013:29">shift</name> <operator pos:start="2013:31" pos:end="2013:31">=</operator> <operator pos:start="2013:33" pos:end="2013:33">(</operator><name pos:start="2013:34" pos:end="2013:37">insn</name> <operator pos:start="2013:39" pos:end="2013:40">&gt;&gt;</operator> <literal type="number" pos:start="2013:42" pos:end="2013:42">7</literal><operator pos:start="2013:43" pos:end="2013:43">)</operator> <operator pos:start="2013:45" pos:end="2013:45">&amp;</operator> <literal type="number" pos:start="2013:47" pos:end="2013:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2015:25" pos:end="2015:48"><expr pos:start="2015:25" pos:end="2015:47"><name pos:start="2015:25" pos:end="2015:25">i</name> <operator pos:start="2015:27" pos:end="2015:27">=</operator> <operator pos:start="2015:29" pos:end="2015:29">(</operator><name pos:start="2015:30" pos:end="2015:33">insn</name> <operator pos:start="2015:35" pos:end="2015:36">&gt;&gt;</operator> <literal type="number" pos:start="2015:38" pos:end="2015:39">16</literal><operator pos:start="2015:40" pos:end="2015:40">)</operator> <operator pos:start="2015:42" pos:end="2015:42">&amp;</operator> <literal type="number" pos:start="2015:44" pos:end="2015:47">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2017:25" pos:end="2017:42"><expr pos:start="2017:25" pos:end="2017:41"><name pos:start="2017:25" pos:end="2017:25">i</name> <operator pos:start="2017:27" pos:end="2017:27">=</operator> <name pos:start="2017:29" pos:end="2017:29">i</name> <operator pos:start="2017:31" pos:end="2017:31">+</operator> <literal type="number" pos:start="2017:33" pos:end="2017:35">1</literal> <operator pos:start="2017:35" pos:end="2017:35">-</operator> <name pos:start="2017:37" pos:end="2017:41">shift</name></expr>;</expr_stmt>

                        <if_stmt pos:start="2019:25" pos:end="2029:25"><if pos:start="2019:25" pos:end="2025:25">if <condition pos:start="2019:28" pos:end="2019:37">(<expr pos:start="2019:29" pos:end="2019:36"><name pos:start="2019:29" pos:end="2019:30">rm</name> <operator pos:start="2019:32" pos:end="2019:33">==</operator> <literal type="number" pos:start="2019:35" pos:end="2019:36">15</literal></expr>)</condition> <block pos:start="2019:39" pos:end="2025:25">{<block_content pos:start="2021:29" pos:end="2023:53">

                            <expr_stmt pos:start="2021:29" pos:end="2021:53"><expr pos:start="2021:29" pos:end="2021:52"><name pos:start="2021:29" pos:end="2021:31">tmp</name> <operator pos:start="2021:33" pos:end="2021:33">=</operator> <call pos:start="2021:35" pos:end="2021:52"><name pos:start="2021:35" pos:end="2021:50">tcg_temp_new_i32</name><argument_list pos:start="2021:51" pos:end="2021:52">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2023:29" pos:end="2023:53"><expr pos:start="2023:29" pos:end="2023:52"><call pos:start="2023:29" pos:end="2023:52"><name pos:start="2023:29" pos:end="2023:44">tcg_gen_movi_i32</name><argument_list pos:start="2023:45" pos:end="2023:52">(<argument pos:start="2023:46" pos:end="2023:48"><expr pos:start="2023:46" pos:end="2023:48"><name pos:start="2023:46" pos:end="2023:48">tmp</name></expr></argument>, <argument pos:start="2023:51" pos:end="2023:51"><expr pos:start="2023:51" pos:end="2023:51"><literal type="number" pos:start="2023:51" pos:end="2023:51">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="2025:27" pos:end="2029:25">else <block pos:start="2025:32" pos:end="2029:25">{<block_content pos:start="2027:29" pos:end="2027:50">

                            <expr_stmt pos:start="2027:29" pos:end="2027:50"><expr pos:start="2027:29" pos:end="2027:49"><name pos:start="2027:29" pos:end="2027:31">tmp</name> <operator pos:start="2027:33" pos:end="2027:33">=</operator> <call pos:start="2027:35" pos:end="2027:49"><name pos:start="2027:35" pos:end="2027:42">load_reg</name><argument_list pos:start="2027:43" pos:end="2027:49">(<argument pos:start="2027:44" pos:end="2027:44"><expr pos:start="2027:44" pos:end="2027:44"><name pos:start="2027:44" pos:end="2027:44">s</name></expr></argument>, <argument pos:start="2027:47" pos:end="2027:48"><expr pos:start="2027:47" pos:end="2027:48"><name pos:start="2027:47" pos:end="2027:48">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="2031:25" pos:end="2039:25"><if pos:start="2031:25" pos:end="2039:25">if <condition pos:start="2031:28" pos:end="2031:36">(<expr pos:start="2031:29" pos:end="2031:35"><name pos:start="2031:29" pos:end="2031:29">i</name> <operator pos:start="2031:31" pos:end="2031:32">!=</operator> <literal type="number" pos:start="2031:34" pos:end="2031:35">32</literal></expr>)</condition> <block pos:start="2031:38" pos:end="2039:25">{<block_content pos:start="2033:29" pos:end="2037:52">

                            <expr_stmt pos:start="2033:29" pos:end="2033:51"><expr pos:start="2033:29" pos:end="2033:50"><name pos:start="2033:29" pos:end="2033:32">tmp2</name> <operator pos:start="2033:34" pos:end="2033:34">=</operator> <call pos:start="2033:36" pos:end="2033:50"><name pos:start="2033:36" pos:end="2033:43">load_reg</name><argument_list pos:start="2033:44" pos:end="2033:50">(<argument pos:start="2033:45" pos:end="2033:45"><expr pos:start="2033:45" pos:end="2033:45"><name pos:start="2033:45" pos:end="2033:45">s</name></expr></argument>, <argument pos:start="2033:48" pos:end="2033:49"><expr pos:start="2033:48" pos:end="2033:49"><name pos:start="2033:48" pos:end="2033:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2035:29" pos:end="2035:74"><expr pos:start="2035:29" pos:end="2035:73"><call pos:start="2035:29" pos:end="2035:73"><name pos:start="2035:29" pos:end="2035:35">gen_bfi</name><argument_list pos:start="2035:36" pos:end="2035:73">(<argument pos:start="2035:37" pos:end="2035:39"><expr pos:start="2035:37" pos:end="2035:39"><name pos:start="2035:37" pos:end="2035:39">tmp</name></expr></argument>, <argument pos:start="2035:42" pos:end="2035:45"><expr pos:start="2035:42" pos:end="2035:45"><name pos:start="2035:42" pos:end="2035:45">tmp2</name></expr></argument>, <argument pos:start="2035:48" pos:end="2035:50"><expr pos:start="2035:48" pos:end="2035:50"><name pos:start="2035:48" pos:end="2035:50">tmp</name></expr></argument>, <argument pos:start="2035:53" pos:end="2035:57"><expr pos:start="2035:53" pos:end="2035:57"><name pos:start="2035:53" pos:end="2035:57">shift</name></expr></argument>, <argument pos:start="2035:60" pos:end="2035:72"><expr pos:start="2035:60" pos:end="2035:72"><operator pos:start="2035:60" pos:end="2035:60">(</operator><literal type="number" pos:start="2035:61" pos:end="2035:62">1u</literal> <operator pos:start="2035:64" pos:end="2035:65">&lt;&lt;</operator> <name pos:start="2035:67" pos:end="2035:67">i</name><operator pos:start="2035:68" pos:end="2035:68">)</operator> <operator pos:start="2035:70" pos:end="2035:70">-</operator> <literal type="number" pos:start="2035:72" pos:end="2035:72">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="2037:29" pos:end="2037:52"><expr pos:start="2037:29" pos:end="2037:51"><call pos:start="2037:29" pos:end="2037:51"><name pos:start="2037:29" pos:end="2037:45">tcg_temp_free_i32</name><argument_list pos:start="2037:46" pos:end="2037:51">(<argument pos:start="2037:47" pos:end="2037:50"><expr pos:start="2037:47" pos:end="2037:50"><name pos:start="2037:47" pos:end="2037:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2041:25" pos:end="2041:46"><expr pos:start="2041:25" pos:end="2041:45"><call pos:start="2041:25" pos:end="2041:45"><name pos:start="2041:25" pos:end="2041:33">store_reg</name><argument_list pos:start="2041:34" pos:end="2041:45">(<argument pos:start="2041:35" pos:end="2041:35"><expr pos:start="2041:35" pos:end="2041:35"><name pos:start="2041:35" pos:end="2041:35">s</name></expr></argument>, <argument pos:start="2041:38" pos:end="2041:39"><expr pos:start="2041:38" pos:end="2041:39"><name pos:start="2041:38" pos:end="2041:39">rd</name></expr></argument>, <argument pos:start="2041:42" pos:end="2041:44"><expr pos:start="2041:42" pos:end="2041:44"><name pos:start="2041:42" pos:end="2041:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2043:25" pos:end="2043:30">break;</break>

                    <case pos:start="2045:21" pos:end="2045:30">case <expr pos:start="2045:26" pos:end="2045:29"><literal type="number" pos:start="2045:26" pos:end="2045:29">0x12</literal></expr>:</case> <case pos:start="2045:32" pos:end="2045:41">case <expr pos:start="2045:37" pos:end="2045:40"><literal type="number" pos:start="2045:37" pos:end="2045:40">0x16</literal></expr>:</case> <case pos:start="2045:43" pos:end="2045:52">case <expr pos:start="2045:48" pos:end="2045:51"><literal type="number" pos:start="2045:48" pos:end="2045:51">0x1a</literal></expr>:</case> <case pos:start="2045:54" pos:end="2045:63">case <expr pos:start="2045:59" pos:end="2045:62"><literal type="number" pos:start="2045:59" pos:end="2045:62">0x1e</literal></expr>:</case> <comment type="block" pos:start="2045:65" pos:end="2045:74">/* sbfx */</comment>

                    <case pos:start="2047:21" pos:end="2047:30">case <expr pos:start="2047:26" pos:end="2047:29"><literal type="number" pos:start="2047:26" pos:end="2047:29">0x32</literal></expr>:</case> <case pos:start="2047:32" pos:end="2047:41">case <expr pos:start="2047:37" pos:end="2047:40"><literal type="number" pos:start="2047:37" pos:end="2047:40">0x36</literal></expr>:</case> <case pos:start="2047:43" pos:end="2047:52">case <expr pos:start="2047:48" pos:end="2047:51"><literal type="number" pos:start="2047:48" pos:end="2047:51">0x3a</literal></expr>:</case> <case pos:start="2047:54" pos:end="2047:63">case <expr pos:start="2047:59" pos:end="2047:62"><literal type="number" pos:start="2047:59" pos:end="2047:62">0x3e</literal></expr>:</case> <comment type="block" pos:start="2047:65" pos:end="2047:74">/* ubfx */</comment>

                        <expr_stmt pos:start="2049:25" pos:end="2049:34"><expr pos:start="2049:25" pos:end="2049:33"><call pos:start="2049:25" pos:end="2049:33"><name pos:start="2049:25" pos:end="2049:28">ARCH</name><argument_list pos:start="2049:29" pos:end="2049:33">(<argument pos:start="2049:30" pos:end="2049:32"><expr pos:start="2049:30" pos:end="2049:32"><literal type="number" pos:start="2049:30" pos:end="2049:32">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2051:25" pos:end="2051:46"><expr pos:start="2051:25" pos:end="2051:45"><name pos:start="2051:25" pos:end="2051:27">tmp</name> <operator pos:start="2051:29" pos:end="2051:29">=</operator> <call pos:start="2051:31" pos:end="2051:45"><name pos:start="2051:31" pos:end="2051:38">load_reg</name><argument_list pos:start="2051:39" pos:end="2051:45">(<argument pos:start="2051:40" pos:end="2051:40"><expr pos:start="2051:40" pos:end="2051:40"><name pos:start="2051:40" pos:end="2051:40">s</name></expr></argument>, <argument pos:start="2051:43" pos:end="2051:44"><expr pos:start="2051:43" pos:end="2051:44"><name pos:start="2051:43" pos:end="2051:44">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="2053:25" pos:end="2053:51"><expr pos:start="2053:25" pos:end="2053:50"><name pos:start="2053:25" pos:end="2053:29">shift</name> <operator pos:start="2053:31" pos:end="2053:31">=</operator> <operator pos:start="2053:33" pos:end="2053:33">(</operator><name pos:start="2053:34" pos:end="2053:37">insn</name> <operator pos:start="2053:39" pos:end="2053:40">&gt;&gt;</operator> <literal type="number" pos:start="2053:42" pos:end="2053:42">7</literal><operator pos:start="2053:43" pos:end="2053:43">)</operator> <operator pos:start="2053:45" pos:end="2053:45">&amp;</operator> <literal type="number" pos:start="2053:47" pos:end="2053:50">0x1f</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="2055:25" pos:end="2055:54"><expr pos:start="2055:25" pos:end="2055:53"><name pos:start="2055:25" pos:end="2055:25">i</name> <operator pos:start="2055:27" pos:end="2055:27">=</operator> <operator pos:start="2055:29" pos:end="2055:29">(</operator><operator pos:start="2055:30" pos:end="2055:30">(</operator><name pos:start="2055:31" pos:end="2055:34">insn</name> <operator pos:start="2055:36" pos:end="2055:37">&gt;&gt;</operator> <literal type="number" pos:start="2055:39" pos:end="2055:40">16</literal><operator pos:start="2055:41" pos:end="2055:41">)</operator> <operator pos:start="2055:43" pos:end="2055:43">&amp;</operator> <literal type="number" pos:start="2055:45" pos:end="2055:48">0x1f</literal><operator pos:start="2055:49" pos:end="2055:49">)</operator> <operator pos:start="2055:51" pos:end="2055:51">+</operator> <literal type="number" pos:start="2055:53" pos:end="2055:53">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="2057:25" pos:end="2059:44"><if pos:start="2057:25" pos:end="2059:44">if <condition pos:start="2057:28" pos:end="2057:43">(<expr pos:start="2057:29" pos:end="2057:42"><name pos:start="2057:29" pos:end="2057:33">shift</name> <operator pos:start="2057:35" pos:end="2057:35">+</operator> <name pos:start="2057:37" pos:end="2057:37">i</name> <operator pos:start="2057:39" pos:end="2057:39">&gt;</operator> <literal type="number" pos:start="2057:41" pos:end="2057:42">32</literal></expr>)</condition><block type="pseudo" pos:start="2059:29" pos:end="2059:44"><block_content pos:start="2059:29" pos:end="2059:44">

                            <goto pos:start="2059:29" pos:end="2059:44">goto <name pos:start="2059:34" pos:end="2059:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="2061:25" pos:end="2073:25"><if pos:start="2061:25" pos:end="2073:25">if <condition pos:start="2061:28" pos:end="2061:35">(<expr pos:start="2061:29" pos:end="2061:34"><name pos:start="2061:29" pos:end="2061:29">i</name> <operator pos:start="2061:31" pos:end="2061:31">&lt;</operator> <literal type="number" pos:start="2061:33" pos:end="2061:34">32</literal></expr>)</condition> <block pos:start="2061:37" pos:end="2073:25">{<block_content pos:start="2063:29" pos:end="2071:29">

                            <if_stmt pos:start="2063:29" pos:end="2071:29"><if pos:start="2063:29" pos:end="2067:29">if <condition pos:start="2063:32" pos:end="2063:43">(<expr pos:start="2063:33" pos:end="2063:42"><name pos:start="2063:33" pos:end="2063:35">op1</name> <operator pos:start="2063:37" pos:end="2063:37">&amp;</operator> <literal type="number" pos:start="2063:39" pos:end="2063:42">0x20</literal></expr>)</condition> <block pos:start="2063:45" pos:end="2067:29">{<block_content pos:start="2065:33" pos:end="2065:68">

                                <expr_stmt pos:start="2065:33" pos:end="2065:68"><expr pos:start="2065:33" pos:end="2065:67"><call pos:start="2065:33" pos:end="2065:67"><name pos:start="2065:33" pos:end="2065:40">gen_ubfx</name><argument_list pos:start="2065:41" pos:end="2065:67">(<argument pos:start="2065:42" pos:end="2065:44"><expr pos:start="2065:42" pos:end="2065:44"><name pos:start="2065:42" pos:end="2065:44">tmp</name></expr></argument>, <argument pos:start="2065:47" pos:end="2065:51"><expr pos:start="2065:47" pos:end="2065:51"><name pos:start="2065:47" pos:end="2065:51">shift</name></expr></argument>, <argument pos:start="2065:54" pos:end="2065:66"><expr pos:start="2065:54" pos:end="2065:66"><operator pos:start="2065:54" pos:end="2065:54">(</operator><literal type="number" pos:start="2065:55" pos:end="2065:56">1u</literal> <operator pos:start="2065:58" pos:end="2065:59">&lt;&lt;</operator> <name pos:start="2065:61" pos:end="2065:61">i</name><operator pos:start="2065:62" pos:end="2065:62">)</operator> <operator pos:start="2065:64" pos:end="2065:64">-</operator> <literal type="number" pos:start="2065:66" pos:end="2065:66">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2067:31" pos:end="2071:29">else <block pos:start="2067:36" pos:end="2071:29">{<block_content pos:start="2069:33" pos:end="2069:56">

                                <expr_stmt pos:start="2069:33" pos:end="2069:56"><expr pos:start="2069:33" pos:end="2069:55"><call pos:start="2069:33" pos:end="2069:55"><name pos:start="2069:33" pos:end="2069:40">gen_sbfx</name><argument_list pos:start="2069:41" pos:end="2069:55">(<argument pos:start="2069:42" pos:end="2069:44"><expr pos:start="2069:42" pos:end="2069:44"><name pos:start="2069:42" pos:end="2069:44">tmp</name></expr></argument>, <argument pos:start="2069:47" pos:end="2069:51"><expr pos:start="2069:47" pos:end="2069:51"><name pos:start="2069:47" pos:end="2069:51">shift</name></expr></argument>, <argument pos:start="2069:54" pos:end="2069:54"><expr pos:start="2069:54" pos:end="2069:54"><name pos:start="2069:54" pos:end="2069:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="2075:25" pos:end="2075:46"><expr pos:start="2075:25" pos:end="2075:45"><call pos:start="2075:25" pos:end="2075:45"><name pos:start="2075:25" pos:end="2075:33">store_reg</name><argument_list pos:start="2075:34" pos:end="2075:45">(<argument pos:start="2075:35" pos:end="2075:35"><expr pos:start="2075:35" pos:end="2075:35"><name pos:start="2075:35" pos:end="2075:35">s</name></expr></argument>, <argument pos:start="2075:38" pos:end="2075:39"><expr pos:start="2075:38" pos:end="2075:39"><name pos:start="2075:38" pos:end="2075:39">rd</name></expr></argument>, <argument pos:start="2075:42" pos:end="2075:44"><expr pos:start="2075:42" pos:end="2075:44"><name pos:start="2075:42" pos:end="2075:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="2077:25" pos:end="2077:30">break;</break>

                    <default pos:start="2079:21" pos:end="2079:28">default:</default>

                        <goto pos:start="2081:25" pos:end="2081:40">goto <name pos:start="2081:30" pos:end="2081:39">illegal_op</name>;</goto>

                    </block_content>}</block></switch>

                    <break pos:start="2085:21" pos:end="2085:26">break;</break>

                </block_content>}</block></switch>

                <break pos:start="2089:17" pos:end="2089:22">break;</break>

            </block_content>}</block></if></if_stmt>

        <label pos:start="2093:9" pos:end="2093:16"><name pos:start="2093:9" pos:end="2093:15">do_ldst</name>:</label>

            <comment type="block" pos:start="2095:13" pos:end="2101:15">/* Check for undefined extension instructions

             * per the ARM Bible IE:

             * xxxx 0111 1111 xxxx  xxxx xxxx 1111 xxxx

             */</comment>

            <expr_stmt pos:start="2103:13" pos:end="2103:42"><expr pos:start="2103:13" pos:end="2103:41"><name pos:start="2103:13" pos:end="2103:14">sh</name> <operator pos:start="2103:16" pos:end="2103:16">=</operator> <operator pos:start="2103:18" pos:end="2103:18">(</operator><literal type="number" pos:start="2103:19" pos:end="2103:21">0xf</literal> <operator pos:start="2103:23" pos:end="2103:24">&lt;&lt;</operator> <literal type="number" pos:start="2103:26" pos:end="2103:27">20</literal><operator pos:start="2103:28" pos:end="2103:28">)</operator> <operator pos:start="2103:30" pos:end="2103:30">|</operator> <operator pos:start="2103:32" pos:end="2103:32">(</operator><literal type="number" pos:start="2103:33" pos:end="2103:35">0xf</literal> <operator pos:start="2103:37" pos:end="2103:38">&lt;&lt;</operator> <literal type="number" pos:start="2103:40" pos:end="2103:40">4</literal><operator pos:start="2103:41" pos:end="2103:41">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2105:13" pos:end="2111:13"><if pos:start="2105:13" pos:end="2111:13">if <condition pos:start="2105:16" pos:end="2105:50">(<expr pos:start="2105:17" pos:end="2105:49"><name pos:start="2105:17" pos:end="2105:19">op1</name> <operator pos:start="2105:21" pos:end="2105:22">==</operator> <literal type="number" pos:start="2105:24" pos:end="2105:26">0x7</literal> <operator pos:start="2105:28" pos:end="2105:29">&amp;&amp;</operator> <operator pos:start="2105:31" pos:end="2105:31">(</operator><operator pos:start="2105:32" pos:end="2105:32">(</operator><name pos:start="2105:33" pos:end="2105:36">insn</name> <operator pos:start="2105:38" pos:end="2105:38">&amp;</operator> <name pos:start="2105:40" pos:end="2105:41">sh</name><operator pos:start="2105:42" pos:end="2105:42">)</operator> <operator pos:start="2105:44" pos:end="2105:45">==</operator> <name pos:start="2105:47" pos:end="2105:48">sh</name><operator pos:start="2105:49" pos:end="2105:49">)</operator></expr>)</condition>

            <block pos:start="2107:13" pos:end="2111:13">{<block_content pos:start="2109:17" pos:end="2109:32">

                <goto pos:start="2109:17" pos:end="2109:32">goto <name pos:start="2109:22" pos:end="2109:31">illegal_op</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="2113:13" pos:end="2113:38">/* load/store byte/word */</comment>

            <expr_stmt pos:start="2115:13" pos:end="2115:36"><expr pos:start="2115:13" pos:end="2115:35"><name pos:start="2115:13" pos:end="2115:14">rn</name> <operator pos:start="2115:16" pos:end="2115:16">=</operator> <operator pos:start="2115:18" pos:end="2115:18">(</operator><name pos:start="2115:19" pos:end="2115:22">insn</name> <operator pos:start="2115:24" pos:end="2115:25">&gt;&gt;</operator> <literal type="number" pos:start="2115:27" pos:end="2115:28">16</literal><operator pos:start="2115:29" pos:end="2115:29">)</operator> <operator pos:start="2115:31" pos:end="2115:31">&amp;</operator> <literal type="number" pos:start="2115:33" pos:end="2115:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2117:13" pos:end="2117:36"><expr pos:start="2117:13" pos:end="2117:35"><name pos:start="2117:13" pos:end="2117:14">rd</name> <operator pos:start="2117:16" pos:end="2117:16">=</operator> <operator pos:start="2117:18" pos:end="2117:18">(</operator><name pos:start="2117:19" pos:end="2117:22">insn</name> <operator pos:start="2117:24" pos:end="2117:25">&gt;&gt;</operator> <literal type="number" pos:start="2117:27" pos:end="2117:28">12</literal><operator pos:start="2117:29" pos:end="2117:29">)</operator> <operator pos:start="2117:31" pos:end="2117:31">&amp;</operator> <literal type="number" pos:start="2117:33" pos:end="2117:35">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="2119:13" pos:end="2119:35"><expr pos:start="2119:13" pos:end="2119:34"><name pos:start="2119:13" pos:end="2119:16">tmp2</name> <operator pos:start="2119:18" pos:end="2119:18">=</operator> <call pos:start="2119:20" pos:end="2119:34"><name pos:start="2119:20" pos:end="2119:27">load_reg</name><argument_list pos:start="2119:28" pos:end="2119:34">(<argument pos:start="2119:29" pos:end="2119:29"><expr pos:start="2119:29" pos:end="2119:29"><name pos:start="2119:29" pos:end="2119:29">s</name></expr></argument>, <argument pos:start="2119:32" pos:end="2119:33"><expr pos:start="2119:32" pos:end="2119:33"><name pos:start="2119:32" pos:end="2119:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2121:13" pos:end="2121:66"><expr pos:start="2121:13" pos:end="2121:65"><name pos:start="2121:13" pos:end="2121:13">i</name> <operator pos:start="2121:15" pos:end="2121:15">=</operator> <operator pos:start="2121:17" pos:end="2121:17">(</operator><call pos:start="2121:18" pos:end="2121:27"><name pos:start="2121:18" pos:end="2121:24">IS_USER</name><argument_list pos:start="2121:25" pos:end="2121:27">(<argument pos:start="2121:26" pos:end="2121:26"><expr pos:start="2121:26" pos:end="2121:26"><name pos:start="2121:26" pos:end="2121:26">s</name></expr></argument>)</argument_list></call> <operator pos:start="2121:29" pos:end="2121:30">||</operator> <operator pos:start="2121:32" pos:end="2121:32">(</operator><name pos:start="2121:33" pos:end="2121:36">insn</name> <operator pos:start="2121:38" pos:end="2121:38">&amp;</operator> <literal type="number" pos:start="2121:40" pos:end="2121:49">0x01200000</literal><operator pos:start="2121:50" pos:end="2121:50">)</operator> <operator pos:start="2121:52" pos:end="2121:53">==</operator> <literal type="number" pos:start="2121:55" pos:end="2121:64">0x00200000</literal><operator pos:start="2121:65" pos:end="2121:65">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="2123:13" pos:end="2125:51"><if pos:start="2123:13" pos:end="2125:51">if <condition pos:start="2123:16" pos:end="2123:33">(<expr pos:start="2123:17" pos:end="2123:32"><name pos:start="2123:17" pos:end="2123:20">insn</name> <operator pos:start="2123:22" pos:end="2123:22">&amp;</operator> <operator pos:start="2123:24" pos:end="2123:24">(</operator><literal type="number" pos:start="2123:25" pos:end="2123:25">1</literal> <operator pos:start="2123:27" pos:end="2123:28">&lt;&lt;</operator> <literal type="number" pos:start="2123:30" pos:end="2123:31">24</literal><operator pos:start="2123:32" pos:end="2123:32">)</operator></expr>)</condition><block type="pseudo" pos:start="2125:17" pos:end="2125:51"><block_content pos:start="2125:17" pos:end="2125:51">

                <expr_stmt pos:start="2125:17" pos:end="2125:51"><expr pos:start="2125:17" pos:end="2125:50"><call pos:start="2125:17" pos:end="2125:50"><name pos:start="2125:17" pos:end="2125:35">gen_add_data_offset</name><argument_list pos:start="2125:36" pos:end="2125:50">(<argument pos:start="2125:37" pos:end="2125:37"><expr pos:start="2125:37" pos:end="2125:37"><name pos:start="2125:37" pos:end="2125:37">s</name></expr></argument>, <argument pos:start="2125:40" pos:end="2125:43"><expr pos:start="2125:40" pos:end="2125:43"><name pos:start="2125:40" pos:end="2125:43">insn</name></expr></argument>, <argument pos:start="2125:46" pos:end="2125:49"><expr pos:start="2125:46" pos:end="2125:49"><name pos:start="2125:46" pos:end="2125:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="2127:13" pos:end="2155:13"><if pos:start="2127:13" pos:end="2141:13">if <condition pos:start="2127:16" pos:end="2127:33">(<expr pos:start="2127:17" pos:end="2127:32"><name pos:start="2127:17" pos:end="2127:20">insn</name> <operator pos:start="2127:22" pos:end="2127:22">&amp;</operator> <operator pos:start="2127:24" pos:end="2127:24">(</operator><literal type="number" pos:start="2127:25" pos:end="2127:25">1</literal> <operator pos:start="2127:27" pos:end="2127:28">&lt;&lt;</operator> <literal type="number" pos:start="2127:30" pos:end="2127:31">20</literal><operator pos:start="2127:32" pos:end="2127:32">)</operator></expr>)</condition> <block pos:start="2127:35" pos:end="2141:13">{<block_content pos:start="2131:17" pos:end="2139:17">

                <comment type="block" pos:start="2129:17" pos:end="2129:26">/* load */</comment>

                <if_stmt pos:start="2131:17" pos:end="2139:17"><if pos:start="2131:17" pos:end="2135:17">if <condition pos:start="2131:20" pos:end="2131:37">(<expr pos:start="2131:21" pos:end="2131:36"><name pos:start="2131:21" pos:end="2131:24">insn</name> <operator pos:start="2131:26" pos:end="2131:26">&amp;</operator> <operator pos:start="2131:28" pos:end="2131:28">(</operator><literal type="number" pos:start="2131:29" pos:end="2131:29">1</literal> <operator pos:start="2131:31" pos:end="2131:32">&lt;&lt;</operator> <literal type="number" pos:start="2131:34" pos:end="2131:35">22</literal><operator pos:start="2131:36" pos:end="2131:36">)</operator></expr>)</condition> <block pos:start="2131:39" pos:end="2135:17">{<block_content pos:start="2133:21" pos:end="2133:44">

                    <expr_stmt pos:start="2133:21" pos:end="2133:44"><expr pos:start="2133:21" pos:end="2133:43"><name pos:start="2133:21" pos:end="2133:23">tmp</name> <operator pos:start="2133:25" pos:end="2133:25">=</operator> <call pos:start="2133:27" pos:end="2133:43"><name pos:start="2133:27" pos:end="2133:34">gen_ld8u</name><argument_list pos:start="2133:35" pos:end="2133:43">(<argument pos:start="2133:36" pos:end="2133:39"><expr pos:start="2133:36" pos:end="2133:39"><name pos:start="2133:36" pos:end="2133:39">tmp2</name></expr></argument>, <argument pos:start="2133:42" pos:end="2133:42"><expr pos:start="2133:42" pos:end="2133:42"><name pos:start="2133:42" pos:end="2133:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2135:19" pos:end="2139:17">else <block pos:start="2135:24" pos:end="2139:17">{<block_content pos:start="2137:21" pos:end="2137:44">

                    <expr_stmt pos:start="2137:21" pos:end="2137:44"><expr pos:start="2137:21" pos:end="2137:43"><name pos:start="2137:21" pos:end="2137:23">tmp</name> <operator pos:start="2137:25" pos:end="2137:25">=</operator> <call pos:start="2137:27" pos:end="2137:43"><name pos:start="2137:27" pos:end="2137:34">gen_ld32</name><argument_list pos:start="2137:35" pos:end="2137:43">(<argument pos:start="2137:36" pos:end="2137:39"><expr pos:start="2137:36" pos:end="2137:39"><name pos:start="2137:36" pos:end="2137:39">tmp2</name></expr></argument>, <argument pos:start="2137:42" pos:end="2137:42"><expr pos:start="2137:42" pos:end="2137:42"><name pos:start="2137:42" pos:end="2137:42">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="2141:15" pos:end="2155:13">else <block pos:start="2141:20" pos:end="2155:13">{<block_content pos:start="2145:17" pos:end="2153:43">

                <comment type="block" pos:start="2143:17" pos:end="2143:27">/* store */</comment>

                <expr_stmt pos:start="2145:17" pos:end="2145:38"><expr pos:start="2145:17" pos:end="2145:37"><name pos:start="2145:17" pos:end="2145:19">tmp</name> <operator pos:start="2145:21" pos:end="2145:21">=</operator> <call pos:start="2145:23" pos:end="2145:37"><name pos:start="2145:23" pos:end="2145:30">load_reg</name><argument_list pos:start="2145:31" pos:end="2145:37">(<argument pos:start="2145:32" pos:end="2145:32"><expr pos:start="2145:32" pos:end="2145:32"><name pos:start="2145:32" pos:end="2145:32">s</name></expr></argument>, <argument pos:start="2145:35" pos:end="2145:36"><expr pos:start="2145:35" pos:end="2145:36"><name pos:start="2145:35" pos:end="2145:36">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="2147:17" pos:end="2153:43"><if pos:start="2147:17" pos:end="2149:42">if <condition pos:start="2147:20" pos:end="2147:37">(<expr pos:start="2147:21" pos:end="2147:36"><name pos:start="2147:21" pos:end="2147:24">insn</name> <operator pos:start="2147:26" pos:end="2147:26">&amp;</operator> <operator pos:start="2147:28" pos:end="2147:28">(</operator><literal type="number" pos:start="2147:29" pos:end="2147:29">1</literal> <operator pos:start="2147:31" pos:end="2147:32">&lt;&lt;</operator> <literal type="number" pos:start="2147:34" pos:end="2147:35">22</literal><operator pos:start="2147:36" pos:end="2147:36">)</operator></expr>)</condition><block type="pseudo" pos:start="2149:21" pos:end="2149:42"><block_content pos:start="2149:21" pos:end="2149:42">

                    <expr_stmt pos:start="2149:21" pos:end="2149:42"><expr pos:start="2149:21" pos:end="2149:41"><call pos:start="2149:21" pos:end="2149:41"><name pos:start="2149:21" pos:end="2149:27">gen_st8</name><argument_list pos:start="2149:28" pos:end="2149:41">(<argument pos:start="2149:29" pos:end="2149:31"><expr pos:start="2149:29" pos:end="2149:31"><name pos:start="2149:29" pos:end="2149:31">tmp</name></expr></argument>, <argument pos:start="2149:34" pos:end="2149:37"><expr pos:start="2149:34" pos:end="2149:37"><name pos:start="2149:34" pos:end="2149:37">tmp2</name></expr></argument>, <argument pos:start="2149:40" pos:end="2149:40"><expr pos:start="2149:40" pos:end="2149:40"><name pos:start="2149:40" pos:end="2149:40">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2151:17" pos:end="2153:43">else<block type="pseudo" pos:start="2153:21" pos:end="2153:43"><block_content pos:start="2153:21" pos:end="2153:43">

                    <expr_stmt pos:start="2153:21" pos:end="2153:43"><expr pos:start="2153:21" pos:end="2153:42"><call pos:start="2153:21" pos:end="2153:42"><name pos:start="2153:21" pos:end="2153:28">gen_st32</name><argument_list pos:start="2153:29" pos:end="2153:42">(<argument pos:start="2153:30" pos:end="2153:32"><expr pos:start="2153:30" pos:end="2153:32"><name pos:start="2153:30" pos:end="2153:32">tmp</name></expr></argument>, <argument pos:start="2153:35" pos:end="2153:38"><expr pos:start="2153:35" pos:end="2153:38"><name pos:start="2153:35" pos:end="2153:38">tmp2</name></expr></argument>, <argument pos:start="2153:41" pos:end="2153:41"><expr pos:start="2153:41" pos:end="2153:41"><name pos:start="2153:41" pos:end="2153:41">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2157:13" pos:end="2171:13"><if pos:start="2157:13" pos:end="2163:13">if <condition pos:start="2157:16" pos:end="2157:36">(<expr pos:start="2157:17" pos:end="2157:35"><operator pos:start="2157:17" pos:end="2157:17">!</operator><operator pos:start="2157:18" pos:end="2157:18">(</operator><name pos:start="2157:19" pos:end="2157:22">insn</name> <operator pos:start="2157:24" pos:end="2157:24">&amp;</operator> <operator pos:start="2157:26" pos:end="2157:26">(</operator><literal type="number" pos:start="2157:27" pos:end="2157:27">1</literal> <operator pos:start="2157:29" pos:end="2157:30">&lt;&lt;</operator> <literal type="number" pos:start="2157:32" pos:end="2157:33">24</literal><operator pos:start="2157:34" pos:end="2157:34">)</operator><operator pos:start="2157:35" pos:end="2157:35">)</operator></expr>)</condition> <block pos:start="2157:38" pos:end="2163:13">{<block_content pos:start="2159:17" pos:end="2161:39">

                <expr_stmt pos:start="2159:17" pos:end="2159:51"><expr pos:start="2159:17" pos:end="2159:50"><call pos:start="2159:17" pos:end="2159:50"><name pos:start="2159:17" pos:end="2159:35">gen_add_data_offset</name><argument_list pos:start="2159:36" pos:end="2159:50">(<argument pos:start="2159:37" pos:end="2159:37"><expr pos:start="2159:37" pos:end="2159:37"><name pos:start="2159:37" pos:end="2159:37">s</name></expr></argument>, <argument pos:start="2159:40" pos:end="2159:43"><expr pos:start="2159:40" pos:end="2159:43"><name pos:start="2159:40" pos:end="2159:43">insn</name></expr></argument>, <argument pos:start="2159:46" pos:end="2159:49"><expr pos:start="2159:46" pos:end="2159:49"><name pos:start="2159:46" pos:end="2159:49">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2161:17" pos:end="2161:39"><expr pos:start="2161:17" pos:end="2161:38"><call pos:start="2161:17" pos:end="2161:38"><name pos:start="2161:17" pos:end="2161:25">store_reg</name><argument_list pos:start="2161:26" pos:end="2161:38">(<argument pos:start="2161:27" pos:end="2161:27"><expr pos:start="2161:27" pos:end="2161:27"><name pos:start="2161:27" pos:end="2161:27">s</name></expr></argument>, <argument pos:start="2161:30" pos:end="2161:31"><expr pos:start="2161:30" pos:end="2161:31"><name pos:start="2161:30" pos:end="2161:31">rn</name></expr></argument>, <argument pos:start="2161:34" pos:end="2161:37"><expr pos:start="2161:34" pos:end="2161:37"><name pos:start="2161:34" pos:end="2161:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="2163:15" pos:end="2167:13">else if <condition pos:start="2163:23" pos:end="2163:40">(<expr pos:start="2163:24" pos:end="2163:39"><name pos:start="2163:24" pos:end="2163:27">insn</name> <operator pos:start="2163:29" pos:end="2163:29">&amp;</operator> <operator pos:start="2163:31" pos:end="2163:31">(</operator><literal type="number" pos:start="2163:32" pos:end="2163:32">1</literal> <operator pos:start="2163:34" pos:end="2163:35">&lt;&lt;</operator> <literal type="number" pos:start="2163:37" pos:end="2163:38">21</literal><operator pos:start="2163:39" pos:end="2163:39">)</operator></expr>)</condition> <block pos:start="2163:42" pos:end="2167:13">{<block_content pos:start="2165:17" pos:end="2165:39">

                <expr_stmt pos:start="2165:17" pos:end="2165:39"><expr pos:start="2165:17" pos:end="2165:38"><call pos:start="2165:17" pos:end="2165:38"><name pos:start="2165:17" pos:end="2165:25">store_reg</name><argument_list pos:start="2165:26" pos:end="2165:38">(<argument pos:start="2165:27" pos:end="2165:27"><expr pos:start="2165:27" pos:end="2165:27"><name pos:start="2165:27" pos:end="2165:27">s</name></expr></argument>, <argument pos:start="2165:30" pos:end="2165:31"><expr pos:start="2165:30" pos:end="2165:31"><name pos:start="2165:30" pos:end="2165:31">rn</name></expr></argument>, <argument pos:start="2165:34" pos:end="2165:37"><expr pos:start="2165:34" pos:end="2165:37"><name pos:start="2165:34" pos:end="2165:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="2167:15" pos:end="2171:13">else <block pos:start="2167:20" pos:end="2171:13">{<block_content pos:start="2169:17" pos:end="2169:40">

                <expr_stmt pos:start="2169:17" pos:end="2169:40"><expr pos:start="2169:17" pos:end="2169:39"><call pos:start="2169:17" pos:end="2169:39"><name pos:start="2169:17" pos:end="2169:33">tcg_temp_free_i32</name><argument_list pos:start="2169:34" pos:end="2169:39">(<argument pos:start="2169:35" pos:end="2169:38"><expr pos:start="2169:35" pos:end="2169:38"><name pos:start="2169:35" pos:end="2169:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="2173:13" pos:end="2185:13"><if pos:start="2173:13" pos:end="2185:13">if <condition pos:start="2173:16" pos:end="2173:33">(<expr pos:start="2173:17" pos:end="2173:32"><name pos:start="2173:17" pos:end="2173:20">insn</name> <operator pos:start="2173:22" pos:end="2173:22">&amp;</operator> <operator pos:start="2173:24" pos:end="2173:24">(</operator><literal type="number" pos:start="2173:25" pos:end="2173:25">1</literal> <operator pos:start="2173:27" pos:end="2173:28">&lt;&lt;</operator> <literal type="number" pos:start="2173:30" pos:end="2173:31">20</literal><operator pos:start="2173:32" pos:end="2173:32">)</operator></expr>)</condition> <block pos:start="2173:35" pos:end="2185:13">{<block_content pos:start="2177:17" pos:end="2183:42">

                <comment type="block" pos:start="2175:17" pos:end="2175:41">/* Complete the load.  */</comment>

                <if_stmt pos:start="2177:17" pos:end="2183:42"><if pos:start="2177:17" pos:end="2179:35">if <condition pos:start="2177:20" pos:end="2177:29">(<expr pos:start="2177:21" pos:end="2177:28"><name pos:start="2177:21" pos:end="2177:22">rd</name> <operator pos:start="2177:24" pos:end="2177:25">==</operator> <literal type="number" pos:start="2177:27" pos:end="2177:28">15</literal></expr>)</condition><block type="pseudo" pos:start="2179:21" pos:end="2179:35"><block_content pos:start="2179:21" pos:end="2179:35">

                    <expr_stmt pos:start="2179:21" pos:end="2179:35"><expr pos:start="2179:21" pos:end="2179:34"><call pos:start="2179:21" pos:end="2179:34"><name pos:start="2179:21" pos:end="2179:26">gen_bx</name><argument_list pos:start="2179:27" pos:end="2179:34">(<argument pos:start="2179:28" pos:end="2179:28"><expr pos:start="2179:28" pos:end="2179:28"><name pos:start="2179:28" pos:end="2179:28">s</name></expr></argument>, <argument pos:start="2179:31" pos:end="2179:33"><expr pos:start="2179:31" pos:end="2179:33"><name pos:start="2179:31" pos:end="2179:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="2181:17" pos:end="2183:42">else<block type="pseudo" pos:start="2183:21" pos:end="2183:42"><block_content pos:start="2183:21" pos:end="2183:42">

                    <expr_stmt pos:start="2183:21" pos:end="2183:42"><expr pos:start="2183:21" pos:end="2183:41"><call pos:start="2183:21" pos:end="2183:41"><name pos:start="2183:21" pos:end="2183:29">store_reg</name><argument_list pos:start="2183:30" pos:end="2183:41">(<argument pos:start="2183:31" pos:end="2183:31"><expr pos:start="2183:31" pos:end="2183:31"><name pos:start="2183:31" pos:end="2183:31">s</name></expr></argument>, <argument pos:start="2183:34" pos:end="2183:35"><expr pos:start="2183:34" pos:end="2183:35"><name pos:start="2183:34" pos:end="2183:35">rd</name></expr></argument>, <argument pos:start="2183:38" pos:end="2183:40"><expr pos:start="2183:38" pos:end="2183:40"><name pos:start="2183:38" pos:end="2183:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="2187:13" pos:end="2187:18">break;</break>

        <case pos:start="2189:9" pos:end="2189:18">case <expr pos:start="2189:14" pos:end="2189:17"><literal type="number" pos:start="2189:14" pos:end="2189:17">0x08</literal></expr>:</case>

        <case pos:start="2191:9" pos:end="2191:18">case <expr pos:start="2191:14" pos:end="2191:17"><literal type="number" pos:start="2191:14" pos:end="2191:17">0x09</literal></expr>:</case>

            <block pos:start="2193:13" pos:end="2427:13">{<block_content pos:start="2195:17" pos:end="2425:17">

                <decl_stmt pos:start="2195:17" pos:end="2195:44"><decl pos:start="2195:17" pos:end="2195:21"><type pos:start="2195:17" pos:end="2195:19"><name pos:start="2195:17" pos:end="2195:19">int</name></type> <name pos:start="2195:21" pos:end="2195:21">j</name></decl>, <decl pos:start="2195:24" pos:end="2195:24"><type ref="prev" pos:start="2195:17" pos:end="2195:19"/><name pos:start="2195:24" pos:end="2195:24">n</name></decl>, <decl pos:start="2195:27" pos:end="2195:30"><type ref="prev" pos:start="2195:17" pos:end="2195:19"/><name pos:start="2195:27" pos:end="2195:30">user</name></decl>, <decl pos:start="2195:33" pos:end="2195:43"><type ref="prev" pos:start="2195:17" pos:end="2195:19"/><name pos:start="2195:33" pos:end="2195:43">loaded_base</name></decl>;</decl_stmt>

                <decl_stmt pos:start="2197:17" pos:end="2197:32"><decl pos:start="2197:17" pos:end="2197:31"><type pos:start="2197:17" pos:end="2197:20"><name pos:start="2197:17" pos:end="2197:20">TCGv</name></type> <name pos:start="2197:22" pos:end="2197:31">loaded_var</name></decl>;</decl_stmt>

                <comment type="block" pos:start="2199:17" pos:end="2199:47">/* load/store multiple words */</comment>

                <comment type="block" pos:start="2201:17" pos:end="2201:59">/* XXX: store correct base if write back */</comment>

                <expr_stmt pos:start="2203:17" pos:end="2203:25"><expr pos:start="2203:17" pos:end="2203:24"><name pos:start="2203:17" pos:end="2203:20">user</name> <operator pos:start="2203:22" pos:end="2203:22">=</operator> <literal type="number" pos:start="2203:24" pos:end="2203:24">0</literal></expr>;</expr_stmt>

                <if_stmt pos:start="2205:17" pos:end="2217:17"><if pos:start="2205:17" pos:end="2217:17">if <condition pos:start="2205:20" pos:end="2205:37">(<expr pos:start="2205:21" pos:end="2205:36"><name pos:start="2205:21" pos:end="2205:24">insn</name> <operator pos:start="2205:26" pos:end="2205:26">&amp;</operator> <operator pos:start="2205:28" pos:end="2205:28">(</operator><literal type="number" pos:start="2205:29" pos:end="2205:29">1</literal> <operator pos:start="2205:31" pos:end="2205:32">&lt;&lt;</operator> <literal type="number" pos:start="2205:34" pos:end="2205:35">22</literal><operator pos:start="2205:36" pos:end="2205:36">)</operator></expr>)</condition> <block pos:start="2205:39" pos:end="2217:17">{<block_content pos:start="2207:21" pos:end="2215:33">

                    <if_stmt pos:start="2207:21" pos:end="2209:40"><if pos:start="2207:21" pos:end="2209:40">if <condition pos:start="2207:24" pos:end="2207:35">(<expr pos:start="2207:25" pos:end="2207:34"><call pos:start="2207:25" pos:end="2207:34"><name pos:start="2207:25" pos:end="2207:31">IS_USER</name><argument_list pos:start="2207:32" pos:end="2207:34">(<argument pos:start="2207:33" pos:end="2207:33"><expr pos:start="2207:33" pos:end="2207:33"><name pos:start="2207:33" pos:end="2207:33">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2209:25" pos:end="2209:40"><block_content pos:start="2209:25" pos:end="2209:40">

                        <goto pos:start="2209:25" pos:end="2209:40">goto <name pos:start="2209:30" pos:end="2209:39">illegal_op</name>;</goto></block_content></block></if></if_stmt> <comment type="block" pos:start="2209:42" pos:end="2209:77">/* only usable in supervisor mode */</comment>



                    <if_stmt pos:start="2213:21" pos:end="2215:33"><if pos:start="2213:21" pos:end="2215:33">if <condition pos:start="2213:24" pos:end="2213:48">(<expr pos:start="2213:25" pos:end="2213:47"><operator pos:start="2213:25" pos:end="2213:25">(</operator><name pos:start="2213:26" pos:end="2213:29">insn</name> <operator pos:start="2213:31" pos:end="2213:31">&amp;</operator> <operator pos:start="2213:33" pos:end="2213:33">(</operator><literal type="number" pos:start="2213:34" pos:end="2213:34">1</literal> <operator pos:start="2213:36" pos:end="2213:37">&lt;&lt;</operator> <literal type="number" pos:start="2213:39" pos:end="2213:40">15</literal><operator pos:start="2213:41" pos:end="2213:41">)</operator><operator pos:start="2213:42" pos:end="2213:42">)</operator> <operator pos:start="2213:44" pos:end="2213:45">==</operator> <literal type="number" pos:start="2213:47" pos:end="2213:47">0</literal></expr>)</condition><block type="pseudo" pos:start="2215:25" pos:end="2215:33"><block_content pos:start="2215:25" pos:end="2215:33">

                        <expr_stmt pos:start="2215:25" pos:end="2215:33"><expr pos:start="2215:25" pos:end="2215:32"><name pos:start="2215:25" pos:end="2215:28">user</name> <operator pos:start="2215:30" pos:end="2215:30">=</operator> <literal type="number" pos:start="2215:32" pos:end="2215:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2219:17" pos:end="2219:40"><expr pos:start="2219:17" pos:end="2219:39"><name pos:start="2219:17" pos:end="2219:18">rn</name> <operator pos:start="2219:20" pos:end="2219:20">=</operator> <operator pos:start="2219:22" pos:end="2219:22">(</operator><name pos:start="2219:23" pos:end="2219:26">insn</name> <operator pos:start="2219:28" pos:end="2219:29">&gt;&gt;</operator> <literal type="number" pos:start="2219:31" pos:end="2219:32">16</literal><operator pos:start="2219:33" pos:end="2219:33">)</operator> <operator pos:start="2219:35" pos:end="2219:35">&amp;</operator> <literal type="number" pos:start="2219:37" pos:end="2219:39">0xf</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2221:17" pos:end="2221:39"><expr pos:start="2221:17" pos:end="2221:38"><name pos:start="2221:17" pos:end="2221:20">addr</name> <operator pos:start="2221:22" pos:end="2221:22">=</operator> <call pos:start="2221:24" pos:end="2221:38"><name pos:start="2221:24" pos:end="2221:31">load_reg</name><argument_list pos:start="2221:32" pos:end="2221:38">(<argument pos:start="2221:33" pos:end="2221:33"><expr pos:start="2221:33" pos:end="2221:33"><name pos:start="2221:33" pos:end="2221:33">s</name></expr></argument>, <argument pos:start="2221:36" pos:end="2221:37"><expr pos:start="2221:36" pos:end="2221:37"><name pos:start="2221:36" pos:end="2221:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="2225:17" pos:end="2225:40">/* compute total size */</comment>

                <expr_stmt pos:start="2227:17" pos:end="2227:32"><expr pos:start="2227:17" pos:end="2227:31"><name pos:start="2227:17" pos:end="2227:27">loaded_base</name> <operator pos:start="2227:29" pos:end="2227:29">=</operator> <literal type="number" pos:start="2227:31" pos:end="2227:31">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2229:17" pos:end="2229:40"><expr pos:start="2229:17" pos:end="2229:39"><call pos:start="2229:17" pos:end="2229:39"><name pos:start="2229:17" pos:end="2229:27">TCGV_UNUSED</name><argument_list pos:start="2229:28" pos:end="2229:39">(<argument pos:start="2229:29" pos:end="2229:38"><expr pos:start="2229:29" pos:end="2229:38"><name pos:start="2229:29" pos:end="2229:38">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="2231:17" pos:end="2231:22"><expr pos:start="2231:17" pos:end="2231:21"><name pos:start="2231:17" pos:end="2231:17">n</name> <operator pos:start="2231:19" pos:end="2231:19">=</operator> <literal type="number" pos:start="2231:21" pos:end="2231:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2233:17" pos:end="2239:17">for<control pos:start="2233:20" pos:end="2233:33">(<init pos:start="2233:21" pos:end="2233:24"><expr pos:start="2233:21" pos:end="2233:23"><name pos:start="2233:21" pos:end="2233:21">i</name><operator pos:start="2233:22" pos:end="2233:22">=</operator><literal type="number" pos:start="2233:23" pos:end="2233:23">0</literal></expr>;</init><condition pos:start="2233:25" pos:end="2233:29"><expr pos:start="2233:25" pos:end="2233:28"><name pos:start="2233:25" pos:end="2233:25">i</name><operator pos:start="2233:26" pos:end="2233:26">&lt;</operator><literal type="number" pos:start="2233:27" pos:end="2233:28">16</literal></expr>;</condition><incr pos:start="2233:30" pos:end="2233:32"><expr pos:start="2233:30" pos:end="2233:32"><name pos:start="2233:30" pos:end="2233:30">i</name><operator pos:start="2233:31" pos:end="2233:32">++</operator></expr></incr>)</control> <block pos:start="2233:35" pos:end="2239:17">{<block_content pos:start="2235:21" pos:end="2237:28">

                    <if_stmt pos:start="2235:21" pos:end="2237:28"><if pos:start="2235:21" pos:end="2237:28">if <condition pos:start="2235:24" pos:end="2235:40">(<expr pos:start="2235:25" pos:end="2235:39"><name pos:start="2235:25" pos:end="2235:28">insn</name> <operator pos:start="2235:30" pos:end="2235:30">&amp;</operator> <operator pos:start="2235:32" pos:end="2235:32">(</operator><literal type="number" pos:start="2235:33" pos:end="2235:33">1</literal> <operator pos:start="2235:35" pos:end="2235:36">&lt;&lt;</operator> <name pos:start="2235:38" pos:end="2235:38">i</name><operator pos:start="2235:39" pos:end="2235:39">)</operator></expr>)</condition><block type="pseudo" pos:start="2237:25" pos:end="2237:28"><block_content pos:start="2237:25" pos:end="2237:28">

                        <expr_stmt pos:start="2237:25" pos:end="2237:28"><expr pos:start="2237:25" pos:end="2237:27"><name pos:start="2237:25" pos:end="2237:25">n</name><operator pos:start="2237:26" pos:end="2237:27">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <comment type="block" pos:start="2241:17" pos:end="2241:53">/* XXX: test invalid n == 0 case ? */</comment>

                <if_stmt pos:start="2243:17" pos:end="2275:17"><if pos:start="2243:17" pos:end="2257:17">if <condition pos:start="2243:20" pos:end="2243:37">(<expr pos:start="2243:21" pos:end="2243:36"><name pos:start="2243:21" pos:end="2243:24">insn</name> <operator pos:start="2243:26" pos:end="2243:26">&amp;</operator> <operator pos:start="2243:28" pos:end="2243:28">(</operator><literal type="number" pos:start="2243:29" pos:end="2243:29">1</literal> <operator pos:start="2243:31" pos:end="2243:32">&lt;&lt;</operator> <literal type="number" pos:start="2243:34" pos:end="2243:35">23</literal><operator pos:start="2243:36" pos:end="2243:36">)</operator></expr>)</condition> <block pos:start="2243:39" pos:end="2257:17">{<block_content pos:start="2245:21" pos:end="2255:21">

                    <if_stmt pos:start="2245:21" pos:end="2255:21"><if pos:start="2245:21" pos:end="2251:21">if <condition pos:start="2245:24" pos:end="2245:41">(<expr pos:start="2245:25" pos:end="2245:40"><name pos:start="2245:25" pos:end="2245:28">insn</name> <operator pos:start="2245:30" pos:end="2245:30">&amp;</operator> <operator pos:start="2245:32" pos:end="2245:32">(</operator><literal type="number" pos:start="2245:33" pos:end="2245:33">1</literal> <operator pos:start="2245:35" pos:end="2245:36">&lt;&lt;</operator> <literal type="number" pos:start="2245:38" pos:end="2245:39">24</literal><operator pos:start="2245:40" pos:end="2245:40">)</operator></expr>)</condition> <block pos:start="2245:43" pos:end="2251:21">{<block_content pos:start="2249:25" pos:end="2249:56">

                        <comment type="block" pos:start="2247:25" pos:end="2247:43">/* pre increment */</comment>

                        <expr_stmt pos:start="2249:25" pos:end="2249:56"><expr pos:start="2249:25" pos:end="2249:55"><call pos:start="2249:25" pos:end="2249:55"><name pos:start="2249:25" pos:end="2249:40">tcg_gen_addi_i32</name><argument_list pos:start="2249:41" pos:end="2249:55">(<argument pos:start="2249:42" pos:end="2249:45"><expr pos:start="2249:42" pos:end="2249:45"><name pos:start="2249:42" pos:end="2249:45">addr</name></expr></argument>, <argument pos:start="2249:48" pos:end="2249:51"><expr pos:start="2249:48" pos:end="2249:51"><name pos:start="2249:48" pos:end="2249:51">addr</name></expr></argument>, <argument pos:start="2249:54" pos:end="2249:54"><expr pos:start="2249:54" pos:end="2249:54"><literal type="number" pos:start="2249:54" pos:end="2249:54">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2251:23" pos:end="2255:21">else <block pos:start="2251:28" pos:end="2255:21">{<block_content>

                        <comment type="block" pos:start="2253:25" pos:end="2253:44">/* post increment */</comment>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="2257:19" pos:end="2275:17">else <block pos:start="2257:24" pos:end="2275:17">{<block_content pos:start="2259:21" pos:end="2273:21">

                    <if_stmt pos:start="2259:21" pos:end="2273:21"><if pos:start="2259:21" pos:end="2265:21">if <condition pos:start="2259:24" pos:end="2259:41">(<expr pos:start="2259:25" pos:end="2259:40"><name pos:start="2259:25" pos:end="2259:28">insn</name> <operator pos:start="2259:30" pos:end="2259:30">&amp;</operator> <operator pos:start="2259:32" pos:end="2259:32">(</operator><literal type="number" pos:start="2259:33" pos:end="2259:33">1</literal> <operator pos:start="2259:35" pos:end="2259:36">&lt;&lt;</operator> <literal type="number" pos:start="2259:38" pos:end="2259:39">24</literal><operator pos:start="2259:40" pos:end="2259:40">)</operator></expr>)</condition> <block pos:start="2259:43" pos:end="2265:21">{<block_content pos:start="2263:25" pos:end="2263:63">

                        <comment type="block" pos:start="2261:25" pos:end="2261:43">/* pre decrement */</comment>

                        <expr_stmt pos:start="2263:25" pos:end="2263:63"><expr pos:start="2263:25" pos:end="2263:62"><call pos:start="2263:25" pos:end="2263:62"><name pos:start="2263:25" pos:end="2263:40">tcg_gen_addi_i32</name><argument_list pos:start="2263:41" pos:end="2263:62">(<argument pos:start="2263:42" pos:end="2263:45"><expr pos:start="2263:42" pos:end="2263:45"><name pos:start="2263:42" pos:end="2263:45">addr</name></expr></argument>, <argument pos:start="2263:48" pos:end="2263:51"><expr pos:start="2263:48" pos:end="2263:51"><name pos:start="2263:48" pos:end="2263:51">addr</name></expr></argument>, <argument pos:start="2263:54" pos:end="2263:61"><expr pos:start="2263:54" pos:end="2263:61"><operator pos:start="2263:54" pos:end="2263:54">-</operator><operator pos:start="2263:55" pos:end="2263:55">(</operator><name pos:start="2263:56" pos:end="2263:56">n</name> <operator pos:start="2263:58" pos:end="2263:58">*</operator> <literal type="number" pos:start="2263:60" pos:end="2263:60">4</literal><operator pos:start="2263:61" pos:end="2263:61">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="2265:23" pos:end="2273:21">else <block pos:start="2265:28" pos:end="2273:21">{<block_content pos:start="2269:25" pos:end="2271:69">

                        <comment type="block" pos:start="2267:25" pos:end="2267:44">/* post decrement */</comment>

                        <if_stmt pos:start="2269:25" pos:end="2271:69"><if pos:start="2269:25" pos:end="2271:69">if <condition pos:start="2269:28" pos:end="2269:35">(<expr pos:start="2269:29" pos:end="2269:34"><name pos:start="2269:29" pos:end="2269:29">n</name> <operator pos:start="2269:31" pos:end="2269:32">!=</operator> <literal type="number" pos:start="2269:34" pos:end="2269:34">1</literal></expr>)</condition><block type="pseudo" pos:start="2271:25" pos:end="2271:69"><block_content pos:start="2271:25" pos:end="2271:69">

                        <expr_stmt pos:start="2271:25" pos:end="2271:69"><expr pos:start="2271:25" pos:end="2271:68"><call pos:start="2271:25" pos:end="2271:68"><name pos:start="2271:25" pos:end="2271:40">tcg_gen_addi_i32</name><argument_list pos:start="2271:41" pos:end="2271:68">(<argument pos:start="2271:42" pos:end="2271:45"><expr pos:start="2271:42" pos:end="2271:45"><name pos:start="2271:42" pos:end="2271:45">addr</name></expr></argument>, <argument pos:start="2271:48" pos:end="2271:51"><expr pos:start="2271:48" pos:end="2271:51"><name pos:start="2271:48" pos:end="2271:51">addr</name></expr></argument>, <argument pos:start="2271:54" pos:end="2271:67"><expr pos:start="2271:54" pos:end="2271:67"><operator pos:start="2271:54" pos:end="2271:54">-</operator><operator pos:start="2271:55" pos:end="2271:55">(</operator><operator pos:start="2271:56" pos:end="2271:56">(</operator><name pos:start="2271:57" pos:end="2271:57">n</name> <operator pos:start="2271:59" pos:end="2271:59">-</operator> <literal type="number" pos:start="2271:61" pos:end="2271:61">1</literal><operator pos:start="2271:62" pos:end="2271:62">)</operator> <operator pos:start="2271:64" pos:end="2271:64">*</operator> <literal type="number" pos:start="2271:66" pos:end="2271:66">4</literal><operator pos:start="2271:67" pos:end="2271:67">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="2277:17" pos:end="2277:22"><expr pos:start="2277:17" pos:end="2277:21"><name pos:start="2277:17" pos:end="2277:17">j</name> <operator pos:start="2277:19" pos:end="2277:19">=</operator> <literal type="number" pos:start="2277:21" pos:end="2277:21">0</literal></expr>;</expr_stmt>

                <for pos:start="2279:17" pos:end="2359:17">for<control pos:start="2279:20" pos:end="2279:33">(<init pos:start="2279:21" pos:end="2279:24"><expr pos:start="2279:21" pos:end="2279:23"><name pos:start="2279:21" pos:end="2279:21">i</name><operator pos:start="2279:22" pos:end="2279:22">=</operator><literal type="number" pos:start="2279:23" pos:end="2279:23">0</literal></expr>;</init><condition pos:start="2279:25" pos:end="2279:29"><expr pos:start="2279:25" pos:end="2279:28"><name pos:start="2279:25" pos:end="2279:25">i</name><operator pos:start="2279:26" pos:end="2279:26">&lt;</operator><literal type="number" pos:start="2279:27" pos:end="2279:28">16</literal></expr>;</condition><incr pos:start="2279:30" pos:end="2279:32"><expr pos:start="2279:30" pos:end="2279:32"><name pos:start="2279:30" pos:end="2279:30">i</name><operator pos:start="2279:31" pos:end="2279:32">++</operator></expr></incr>)</control> <block pos:start="2279:35" pos:end="2359:17">{<block_content pos:start="2281:21" pos:end="2357:21">

                    <if_stmt pos:start="2281:21" pos:end="2357:21"><if pos:start="2281:21" pos:end="2357:21">if <condition pos:start="2281:24" pos:end="2281:40">(<expr pos:start="2281:25" pos:end="2281:39"><name pos:start="2281:25" pos:end="2281:28">insn</name> <operator pos:start="2281:30" pos:end="2281:30">&amp;</operator> <operator pos:start="2281:32" pos:end="2281:32">(</operator><literal type="number" pos:start="2281:33" pos:end="2281:33">1</literal> <operator pos:start="2281:35" pos:end="2281:36">&lt;&lt;</operator> <name pos:start="2281:38" pos:end="2281:38">i</name><operator pos:start="2281:39" pos:end="2281:39">)</operator></expr>)</condition> <block pos:start="2281:42" pos:end="2357:21">{<block_content pos:start="2283:25" pos:end="2355:60">

                        <if_stmt pos:start="2283:25" pos:end="2347:25"><if pos:start="2283:25" pos:end="2315:25">if <condition pos:start="2283:28" pos:end="2283:45">(<expr pos:start="2283:29" pos:end="2283:44"><name pos:start="2283:29" pos:end="2283:32">insn</name> <operator pos:start="2283:34" pos:end="2283:34">&amp;</operator> <operator pos:start="2283:36" pos:end="2283:36">(</operator><literal type="number" pos:start="2283:37" pos:end="2283:37">1</literal> <operator pos:start="2283:39" pos:end="2283:40">&lt;&lt;</operator> <literal type="number" pos:start="2283:42" pos:end="2283:43">20</literal><operator pos:start="2283:44" pos:end="2283:44">)</operator></expr>)</condition> <block pos:start="2283:47" pos:end="2315:25">{<block_content pos:start="2287:29" pos:end="2313:29">

                            <comment type="block" pos:start="2285:29" pos:end="2285:38">/* load */</comment>

                            <expr_stmt pos:start="2287:29" pos:end="2287:61"><expr pos:start="2287:29" pos:end="2287:60"><name pos:start="2287:29" pos:end="2287:31">tmp</name> <operator pos:start="2287:33" pos:end="2287:33">=</operator> <call pos:start="2287:35" pos:end="2287:60"><name pos:start="2287:35" pos:end="2287:42">gen_ld32</name><argument_list pos:start="2287:43" pos:end="2287:60">(<argument pos:start="2287:44" pos:end="2287:47"><expr pos:start="2287:44" pos:end="2287:47"><name pos:start="2287:44" pos:end="2287:47">addr</name></expr></argument>, <argument pos:start="2287:50" pos:end="2287:59"><expr pos:start="2287:50" pos:end="2287:59"><call pos:start="2287:50" pos:end="2287:59"><name pos:start="2287:50" pos:end="2287:56">IS_USER</name><argument_list pos:start="2287:57" pos:end="2287:59">(<argument pos:start="2287:58" pos:end="2287:58"><expr pos:start="2287:58" pos:end="2287:58"><name pos:start="2287:58" pos:end="2287:58">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="2289:29" pos:end="2313:29"><if pos:start="2289:29" pos:end="2293:29">if <condition pos:start="2289:32" pos:end="2289:40">(<expr pos:start="2289:33" pos:end="2289:39"><name pos:start="2289:33" pos:end="2289:33">i</name> <operator pos:start="2289:35" pos:end="2289:36">==</operator> <literal type="number" pos:start="2289:38" pos:end="2289:39">15</literal></expr>)</condition> <block pos:start="2289:42" pos:end="2293:29">{<block_content pos:start="2291:33" pos:end="2291:47">

                                <expr_stmt pos:start="2291:33" pos:end="2291:47"><expr pos:start="2291:33" pos:end="2291:46"><call pos:start="2291:33" pos:end="2291:46"><name pos:start="2291:33" pos:end="2291:38">gen_bx</name><argument_list pos:start="2291:39" pos:end="2291:46">(<argument pos:start="2291:40" pos:end="2291:40"><expr pos:start="2291:40" pos:end="2291:40"><name pos:start="2291:40" pos:end="2291:40">s</name></expr></argument>, <argument pos:start="2291:43" pos:end="2291:45"><expr pos:start="2291:43" pos:end="2291:45"><name pos:start="2291:43" pos:end="2291:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2293:31" pos:end="2303:29">else if <condition pos:start="2293:39" pos:end="2293:44">(<expr pos:start="2293:40" pos:end="2293:43"><name pos:start="2293:40" pos:end="2293:43">user</name></expr>)</condition> <block pos:start="2293:46" pos:end="2303:29">{<block_content pos:start="2295:33" pos:end="2301:55">

                                <expr_stmt pos:start="2295:33" pos:end="2295:56"><expr pos:start="2295:33" pos:end="2295:55"><name pos:start="2295:33" pos:end="2295:36">tmp2</name> <operator pos:start="2295:38" pos:end="2295:38">=</operator> <call pos:start="2295:40" pos:end="2295:55"><name pos:start="2295:40" pos:end="2295:52">tcg_const_i32</name><argument_list pos:start="2295:53" pos:end="2295:55">(<argument pos:start="2295:54" pos:end="2295:54"><expr pos:start="2295:54" pos:end="2295:54"><name pos:start="2295:54" pos:end="2295:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2297:33" pos:end="2297:67"><expr pos:start="2297:33" pos:end="2297:66"><call pos:start="2297:33" pos:end="2297:66"><name pos:start="2297:33" pos:end="2297:55">gen_helper_set_user_reg</name><argument_list pos:start="2297:56" pos:end="2297:66">(<argument pos:start="2297:57" pos:end="2297:60"><expr pos:start="2297:57" pos:end="2297:60"><name pos:start="2297:57" pos:end="2297:60">tmp2</name></expr></argument>, <argument pos:start="2297:63" pos:end="2297:65"><expr pos:start="2297:63" pos:end="2297:65"><name pos:start="2297:63" pos:end="2297:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2299:33" pos:end="2299:56"><expr pos:start="2299:33" pos:end="2299:55"><call pos:start="2299:33" pos:end="2299:55"><name pos:start="2299:33" pos:end="2299:49">tcg_temp_free_i32</name><argument_list pos:start="2299:50" pos:end="2299:55">(<argument pos:start="2299:51" pos:end="2299:54"><expr pos:start="2299:51" pos:end="2299:54"><name pos:start="2299:51" pos:end="2299:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2301:33" pos:end="2301:55"><expr pos:start="2301:33" pos:end="2301:54"><call pos:start="2301:33" pos:end="2301:54"><name pos:start="2301:33" pos:end="2301:49">tcg_temp_free_i32</name><argument_list pos:start="2301:50" pos:end="2301:54">(<argument pos:start="2301:51" pos:end="2301:53"><expr pos:start="2301:51" pos:end="2301:53"><name pos:start="2301:51" pos:end="2301:53">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2303:31" pos:end="2309:29">else if <condition pos:start="2303:39" pos:end="2303:47">(<expr pos:start="2303:40" pos:end="2303:46"><name pos:start="2303:40" pos:end="2303:40">i</name> <operator pos:start="2303:42" pos:end="2303:43">==</operator> <name pos:start="2303:45" pos:end="2303:46">rn</name></expr>)</condition> <block pos:start="2303:49" pos:end="2309:29">{<block_content pos:start="2305:33" pos:end="2307:48">

                                <expr_stmt pos:start="2305:33" pos:end="2305:49"><expr pos:start="2305:33" pos:end="2305:48"><name pos:start="2305:33" pos:end="2305:42">loaded_var</name> <operator pos:start="2305:44" pos:end="2305:44">=</operator> <name pos:start="2305:46" pos:end="2305:48">tmp</name></expr>;</expr_stmt>

                                <expr_stmt pos:start="2307:33" pos:end="2307:48"><expr pos:start="2307:33" pos:end="2307:47"><name pos:start="2307:33" pos:end="2307:43">loaded_base</name> <operator pos:start="2307:45" pos:end="2307:45">=</operator> <literal type="number" pos:start="2307:47" pos:end="2307:47">1</literal></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2309:31" pos:end="2313:29">else <block pos:start="2309:36" pos:end="2313:29">{<block_content pos:start="2311:33" pos:end="2311:53">

                                <expr_stmt pos:start="2311:33" pos:end="2311:53"><expr pos:start="2311:33" pos:end="2311:52"><call pos:start="2311:33" pos:end="2311:52"><name pos:start="2311:33" pos:end="2311:41">store_reg</name><argument_list pos:start="2311:42" pos:end="2311:52">(<argument pos:start="2311:43" pos:end="2311:43"><expr pos:start="2311:43" pos:end="2311:43"><name pos:start="2311:43" pos:end="2311:43">s</name></expr></argument>, <argument pos:start="2311:46" pos:end="2311:46"><expr pos:start="2311:46" pos:end="2311:46"><name pos:start="2311:46" pos:end="2311:46">i</name></expr></argument>, <argument pos:start="2311:49" pos:end="2311:51"><expr pos:start="2311:49" pos:end="2311:51"><name pos:start="2311:49" pos:end="2311:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="2315:27" pos:end="2347:25">else <block pos:start="2315:32" pos:end="2347:25">{<block_content pos:start="2319:29" pos:end="2345:60">

                            <comment type="block" pos:start="2317:29" pos:end="2317:39">/* store */</comment>

                            <if_stmt pos:start="2319:29" pos:end="2343:29"><if pos:start="2319:29" pos:end="2329:29">if <condition pos:start="2319:32" pos:end="2319:40">(<expr pos:start="2319:33" pos:end="2319:39"><name pos:start="2319:33" pos:end="2319:33">i</name> <operator pos:start="2319:35" pos:end="2319:36">==</operator> <literal type="number" pos:start="2319:38" pos:end="2319:39">15</literal></expr>)</condition> <block pos:start="2319:42" pos:end="2329:29">{<block_content pos:start="2323:33" pos:end="2327:59">

                                <comment type="block" pos:start="2321:33" pos:end="2321:64">/* special case: r15 = PC + 8 */</comment>

                                <expr_stmt pos:start="2323:33" pos:end="2323:54"><expr pos:start="2323:33" pos:end="2323:53"><name pos:start="2323:33" pos:end="2323:35">val</name> <operator pos:start="2323:37" pos:end="2323:37">=</operator> <operator pos:start="2323:39" pos:end="2323:39">(</operator><name pos:start="2323:40" pos:end="2323:43">long</name><operator pos:start="2323:44" pos:end="2323:44">)</operator><name pos:start="2323:45" pos:end="2323:49"><name pos:start="2323:45" pos:end="2323:45">s</name><operator pos:start="2323:46" pos:end="2323:47">-&gt;</operator><name pos:start="2323:48" pos:end="2323:49">pc</name></name> <operator pos:start="2323:51" pos:end="2323:51">+</operator> <literal type="number" pos:start="2323:53" pos:end="2323:53">4</literal></expr>;</expr_stmt>

                                <expr_stmt pos:start="2325:33" pos:end="2325:57"><expr pos:start="2325:33" pos:end="2325:56"><name pos:start="2325:33" pos:end="2325:35">tmp</name> <operator pos:start="2325:37" pos:end="2325:37">=</operator> <call pos:start="2325:39" pos:end="2325:56"><name pos:start="2325:39" pos:end="2325:54">tcg_temp_new_i32</name><argument_list pos:start="2325:55" pos:end="2325:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2327:33" pos:end="2327:59"><expr pos:start="2327:33" pos:end="2327:58"><call pos:start="2327:33" pos:end="2327:58"><name pos:start="2327:33" pos:end="2327:48">tcg_gen_movi_i32</name><argument_list pos:start="2327:49" pos:end="2327:58">(<argument pos:start="2327:50" pos:end="2327:52"><expr pos:start="2327:50" pos:end="2327:52"><name pos:start="2327:50" pos:end="2327:52">tmp</name></expr></argument>, <argument pos:start="2327:55" pos:end="2327:57"><expr pos:start="2327:55" pos:end="2327:57"><name pos:start="2327:55" pos:end="2327:57">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <if type="elseif" pos:start="2329:31" pos:end="2339:29">else if <condition pos:start="2329:39" pos:end="2329:44">(<expr pos:start="2329:40" pos:end="2329:43"><name pos:start="2329:40" pos:end="2329:43">user</name></expr>)</condition> <block pos:start="2329:46" pos:end="2339:29">{<block_content pos:start="2331:33" pos:end="2337:56">

                                <expr_stmt pos:start="2331:33" pos:end="2331:57"><expr pos:start="2331:33" pos:end="2331:56"><name pos:start="2331:33" pos:end="2331:35">tmp</name> <operator pos:start="2331:37" pos:end="2331:37">=</operator> <call pos:start="2331:39" pos:end="2331:56"><name pos:start="2331:39" pos:end="2331:54">tcg_temp_new_i32</name><argument_list pos:start="2331:55" pos:end="2331:56">()</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2333:33" pos:end="2333:56"><expr pos:start="2333:33" pos:end="2333:55"><name pos:start="2333:33" pos:end="2333:36">tmp2</name> <operator pos:start="2333:38" pos:end="2333:38">=</operator> <call pos:start="2333:40" pos:end="2333:55"><name pos:start="2333:40" pos:end="2333:52">tcg_const_i32</name><argument_list pos:start="2333:53" pos:end="2333:55">(<argument pos:start="2333:54" pos:end="2333:54"><expr pos:start="2333:54" pos:end="2333:54"><name pos:start="2333:54" pos:end="2333:54">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2335:33" pos:end="2335:67"><expr pos:start="2335:33" pos:end="2335:66"><call pos:start="2335:33" pos:end="2335:66"><name pos:start="2335:33" pos:end="2335:55">gen_helper_get_user_reg</name><argument_list pos:start="2335:56" pos:end="2335:66">(<argument pos:start="2335:57" pos:end="2335:59"><expr pos:start="2335:57" pos:end="2335:59"><name pos:start="2335:57" pos:end="2335:59">tmp</name></expr></argument>, <argument pos:start="2335:62" pos:end="2335:65"><expr pos:start="2335:62" pos:end="2335:65"><name pos:start="2335:62" pos:end="2335:65">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                                <expr_stmt pos:start="2337:33" pos:end="2337:56"><expr pos:start="2337:33" pos:end="2337:55"><call pos:start="2337:33" pos:end="2337:55"><name pos:start="2337:33" pos:end="2337:49">tcg_temp_free_i32</name><argument_list pos:start="2337:50" pos:end="2337:55">(<argument pos:start="2337:51" pos:end="2337:54"><expr pos:start="2337:51" pos:end="2337:54"><name pos:start="2337:51" pos:end="2337:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></if> <else pos:start="2339:31" pos:end="2343:29">else <block pos:start="2339:36" pos:end="2343:29">{<block_content pos:start="2341:33" pos:end="2341:53">

                                <expr_stmt pos:start="2341:33" pos:end="2341:53"><expr pos:start="2341:33" pos:end="2341:52"><name pos:start="2341:33" pos:end="2341:35">tmp</name> <operator pos:start="2341:37" pos:end="2341:37">=</operator> <call pos:start="2341:39" pos:end="2341:52"><name pos:start="2341:39" pos:end="2341:46">load_reg</name><argument_list pos:start="2341:47" pos:end="2341:52">(<argument pos:start="2341:48" pos:end="2341:48"><expr pos:start="2341:48" pos:end="2341:48"><name pos:start="2341:48" pos:end="2341:48">s</name></expr></argument>, <argument pos:start="2341:51" pos:end="2341:51"><expr pos:start="2341:51" pos:end="2341:51"><name pos:start="2341:51" pos:end="2341:51">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            </block_content>}</block></else></if_stmt>

                            <expr_stmt pos:start="2345:29" pos:end="2345:60"><expr pos:start="2345:29" pos:end="2345:59"><call pos:start="2345:29" pos:end="2345:59"><name pos:start="2345:29" pos:end="2345:36">gen_st32</name><argument_list pos:start="2345:37" pos:end="2345:59">(<argument pos:start="2345:38" pos:end="2345:40"><expr pos:start="2345:38" pos:end="2345:40"><name pos:start="2345:38" pos:end="2345:40">tmp</name></expr></argument>, <argument pos:start="2345:43" pos:end="2345:46"><expr pos:start="2345:43" pos:end="2345:46"><name pos:start="2345:43" pos:end="2345:46">addr</name></expr></argument>, <argument pos:start="2345:49" pos:end="2345:58"><expr pos:start="2345:49" pos:end="2345:58"><call pos:start="2345:49" pos:end="2345:58"><name pos:start="2345:49" pos:end="2345:55">IS_USER</name><argument_list pos:start="2345:56" pos:end="2345:58">(<argument pos:start="2345:57" pos:end="2345:57"><expr pos:start="2345:57" pos:end="2345:57"><name pos:start="2345:57" pos:end="2345:57">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="2349:25" pos:end="2349:28"><expr pos:start="2349:25" pos:end="2349:27"><name pos:start="2349:25" pos:end="2349:25">j</name><operator pos:start="2349:26" pos:end="2349:27">++</operator></expr>;</expr_stmt>

                        <comment type="block" pos:start="2351:25" pos:end="2351:68">/* no need to add after the last transfer */</comment>

                        <if_stmt pos:start="2353:25" pos:end="2355:60"><if pos:start="2353:25" pos:end="2355:60">if <condition pos:start="2353:28" pos:end="2353:35">(<expr pos:start="2353:29" pos:end="2353:34"><name pos:start="2353:29" pos:end="2353:29">j</name> <operator pos:start="2353:31" pos:end="2353:32">!=</operator> <name pos:start="2353:34" pos:end="2353:34">n</name></expr>)</condition><block type="pseudo" pos:start="2355:29" pos:end="2355:60"><block_content pos:start="2355:29" pos:end="2355:60">

                            <expr_stmt pos:start="2355:29" pos:end="2355:60"><expr pos:start="2355:29" pos:end="2355:59"><call pos:start="2355:29" pos:end="2355:59"><name pos:start="2355:29" pos:end="2355:44">tcg_gen_addi_i32</name><argument_list pos:start="2355:45" pos:end="2355:59">(<argument pos:start="2355:46" pos:end="2355:49"><expr pos:start="2355:46" pos:end="2355:49"><name pos:start="2355:46" pos:end="2355:49">addr</name></expr></argument>, <argument pos:start="2355:52" pos:end="2355:55"><expr pos:start="2355:52" pos:end="2355:55"><name pos:start="2355:52" pos:end="2355:55">addr</name></expr></argument>, <argument pos:start="2355:58" pos:end="2355:58"><expr pos:start="2355:58" pos:end="2355:58"><literal type="number" pos:start="2355:58" pos:end="2355:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="2361:17" pos:end="2405:17"><if pos:start="2361:17" pos:end="2401:17">if <condition pos:start="2361:20" pos:end="2361:37">(<expr pos:start="2361:21" pos:end="2361:36"><name pos:start="2361:21" pos:end="2361:24">insn</name> <operator pos:start="2361:26" pos:end="2361:26">&amp;</operator> <operator pos:start="2361:28" pos:end="2361:28">(</operator><literal type="number" pos:start="2361:29" pos:end="2361:29">1</literal> <operator pos:start="2361:31" pos:end="2361:32">&lt;&lt;</operator> <literal type="number" pos:start="2361:34" pos:end="2361:35">21</literal><operator pos:start="2361:36" pos:end="2361:36">)</operator></expr>)</condition> <block pos:start="2361:39" pos:end="2401:17">{<block_content pos:start="2365:21" pos:end="2399:43">

                    <comment type="block" pos:start="2363:21" pos:end="2363:36">/* write back */</comment>

                    <if_stmt pos:start="2365:21" pos:end="2397:21"><if pos:start="2365:21" pos:end="2379:21">if <condition pos:start="2365:24" pos:end="2365:41">(<expr pos:start="2365:25" pos:end="2365:40"><name pos:start="2365:25" pos:end="2365:28">insn</name> <operator pos:start="2365:30" pos:end="2365:30">&amp;</operator> <operator pos:start="2365:32" pos:end="2365:32">(</operator><literal type="number" pos:start="2365:33" pos:end="2365:33">1</literal> <operator pos:start="2365:35" pos:end="2365:36">&lt;&lt;</operator> <literal type="number" pos:start="2365:38" pos:end="2365:39">23</literal><operator pos:start="2365:40" pos:end="2365:40">)</operator></expr>)</condition> <block pos:start="2365:43" pos:end="2379:21">{<block_content pos:start="2367:25" pos:end="2377:25">

                        <if_stmt pos:start="2367:25" pos:end="2377:25"><if pos:start="2367:25" pos:end="2371:25">if <condition pos:start="2367:28" pos:end="2367:45">(<expr pos:start="2367:29" pos:end="2367:44"><name pos:start="2367:29" pos:end="2367:32">insn</name> <operator pos:start="2367:34" pos:end="2367:34">&amp;</operator> <operator pos:start="2367:36" pos:end="2367:36">(</operator><literal type="number" pos:start="2367:37" pos:end="2367:37">1</literal> <operator pos:start="2367:39" pos:end="2367:40">&lt;&lt;</operator> <literal type="number" pos:start="2367:42" pos:end="2367:43">24</literal><operator pos:start="2367:44" pos:end="2367:44">)</operator></expr>)</condition> <block pos:start="2367:47" pos:end="2371:25">{<block_content>

                            <comment type="block" pos:start="2369:29" pos:end="2369:47">/* pre increment */</comment>

                        </block_content>}</block></if> <else pos:start="2371:27" pos:end="2377:25">else <block pos:start="2371:32" pos:end="2377:25">{<block_content pos:start="2375:29" pos:end="2375:60">

                            <comment type="block" pos:start="2373:29" pos:end="2373:48">/* post increment */</comment>

                            <expr_stmt pos:start="2375:29" pos:end="2375:60"><expr pos:start="2375:29" pos:end="2375:59"><call pos:start="2375:29" pos:end="2375:59"><name pos:start="2375:29" pos:end="2375:44">tcg_gen_addi_i32</name><argument_list pos:start="2375:45" pos:end="2375:59">(<argument pos:start="2375:46" pos:end="2375:49"><expr pos:start="2375:46" pos:end="2375:49"><name pos:start="2375:46" pos:end="2375:49">addr</name></expr></argument>, <argument pos:start="2375:52" pos:end="2375:55"><expr pos:start="2375:52" pos:end="2375:55"><name pos:start="2375:52" pos:end="2375:55">addr</name></expr></argument>, <argument pos:start="2375:58" pos:end="2375:58"><expr pos:start="2375:58" pos:end="2375:58"><literal type="number" pos:start="2375:58" pos:end="2375:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="2379:23" pos:end="2397:21">else <block pos:start="2379:28" pos:end="2397:21">{<block_content pos:start="2381:25" pos:end="2395:25">

                        <if_stmt pos:start="2381:25" pos:end="2395:25"><if pos:start="2381:25" pos:end="2389:25">if <condition pos:start="2381:28" pos:end="2381:45">(<expr pos:start="2381:29" pos:end="2381:44"><name pos:start="2381:29" pos:end="2381:32">insn</name> <operator pos:start="2381:34" pos:end="2381:34">&amp;</operator> <operator pos:start="2381:36" pos:end="2381:36">(</operator><literal type="number" pos:start="2381:37" pos:end="2381:37">1</literal> <operator pos:start="2381:39" pos:end="2381:40">&lt;&lt;</operator> <literal type="number" pos:start="2381:42" pos:end="2381:43">24</literal><operator pos:start="2381:44" pos:end="2381:44">)</operator></expr>)</condition> <block pos:start="2381:47" pos:end="2389:25">{<block_content pos:start="2385:29" pos:end="2387:77">

                            <comment type="block" pos:start="2383:29" pos:end="2383:47">/* pre decrement */</comment>

                            <if_stmt pos:start="2385:29" pos:end="2387:77"><if pos:start="2385:29" pos:end="2387:77">if <condition pos:start="2385:32" pos:end="2385:39">(<expr pos:start="2385:33" pos:end="2385:38"><name pos:start="2385:33" pos:end="2385:33">n</name> <operator pos:start="2385:35" pos:end="2385:36">!=</operator> <literal type="number" pos:start="2385:38" pos:end="2385:38">1</literal></expr>)</condition><block type="pseudo" pos:start="2387:33" pos:end="2387:77"><block_content pos:start="2387:33" pos:end="2387:77">

                                <expr_stmt pos:start="2387:33" pos:end="2387:77"><expr pos:start="2387:33" pos:end="2387:76"><call pos:start="2387:33" pos:end="2387:76"><name pos:start="2387:33" pos:end="2387:48">tcg_gen_addi_i32</name><argument_list pos:start="2387:49" pos:end="2387:76">(<argument pos:start="2387:50" pos:end="2387:53"><expr pos:start="2387:50" pos:end="2387:53"><name pos:start="2387:50" pos:end="2387:53">addr</name></expr></argument>, <argument pos:start="2387:56" pos:end="2387:59"><expr pos:start="2387:56" pos:end="2387:59"><name pos:start="2387:56" pos:end="2387:59">addr</name></expr></argument>, <argument pos:start="2387:62" pos:end="2387:75"><expr pos:start="2387:62" pos:end="2387:75"><operator pos:start="2387:62" pos:end="2387:62">-</operator><operator pos:start="2387:63" pos:end="2387:63">(</operator><operator pos:start="2387:64" pos:end="2387:64">(</operator><name pos:start="2387:65" pos:end="2387:65">n</name> <operator pos:start="2387:67" pos:end="2387:67">-</operator> <literal type="number" pos:start="2387:69" pos:end="2387:69">1</literal><operator pos:start="2387:70" pos:end="2387:70">)</operator> <operator pos:start="2387:72" pos:end="2387:72">*</operator> <literal type="number" pos:start="2387:74" pos:end="2387:74">4</literal><operator pos:start="2387:75" pos:end="2387:75">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if> <else pos:start="2389:27" pos:end="2395:25">else <block pos:start="2389:32" pos:end="2395:25">{<block_content pos:start="2393:29" pos:end="2393:67">

                            <comment type="block" pos:start="2391:29" pos:end="2391:48">/* post decrement */</comment>

                            <expr_stmt pos:start="2393:29" pos:end="2393:67"><expr pos:start="2393:29" pos:end="2393:66"><call pos:start="2393:29" pos:end="2393:66"><name pos:start="2393:29" pos:end="2393:44">tcg_gen_addi_i32</name><argument_list pos:start="2393:45" pos:end="2393:66">(<argument pos:start="2393:46" pos:end="2393:49"><expr pos:start="2393:46" pos:end="2393:49"><name pos:start="2393:46" pos:end="2393:49">addr</name></expr></argument>, <argument pos:start="2393:52" pos:end="2393:55"><expr pos:start="2393:52" pos:end="2393:55"><name pos:start="2393:52" pos:end="2393:55">addr</name></expr></argument>, <argument pos:start="2393:58" pos:end="2393:65"><expr pos:start="2393:58" pos:end="2393:65"><operator pos:start="2393:58" pos:end="2393:58">-</operator><operator pos:start="2393:59" pos:end="2393:59">(</operator><name pos:start="2393:60" pos:end="2393:60">n</name> <operator pos:start="2393:62" pos:end="2393:62">*</operator> <literal type="number" pos:start="2393:64" pos:end="2393:64">4</literal><operator pos:start="2393:65" pos:end="2393:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="2399:21" pos:end="2399:43"><expr pos:start="2399:21" pos:end="2399:42"><call pos:start="2399:21" pos:end="2399:42"><name pos:start="2399:21" pos:end="2399:29">store_reg</name><argument_list pos:start="2399:30" pos:end="2399:42">(<argument pos:start="2399:31" pos:end="2399:31"><expr pos:start="2399:31" pos:end="2399:31"><name pos:start="2399:31" pos:end="2399:31">s</name></expr></argument>, <argument pos:start="2399:34" pos:end="2399:35"><expr pos:start="2399:34" pos:end="2399:35"><name pos:start="2399:34" pos:end="2399:35">rn</name></expr></argument>, <argument pos:start="2399:38" pos:end="2399:41"><expr pos:start="2399:38" pos:end="2399:41"><name pos:start="2399:38" pos:end="2399:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="2401:19" pos:end="2405:17">else <block pos:start="2401:24" pos:end="2405:17">{<block_content pos:start="2403:21" pos:end="2403:44">

                    <expr_stmt pos:start="2403:21" pos:end="2403:44"><expr pos:start="2403:21" pos:end="2403:43"><call pos:start="2403:21" pos:end="2403:43"><name pos:start="2403:21" pos:end="2403:37">tcg_temp_free_i32</name><argument_list pos:start="2403:38" pos:end="2403:43">(<argument pos:start="2403:39" pos:end="2403:42"><expr pos:start="2403:39" pos:end="2403:42"><name pos:start="2403:39" pos:end="2403:42">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="2407:17" pos:end="2411:17"><if pos:start="2407:17" pos:end="2411:17">if <condition pos:start="2407:20" pos:end="2407:32">(<expr pos:start="2407:21" pos:end="2407:31"><name pos:start="2407:21" pos:end="2407:31">loaded_base</name></expr>)</condition> <block pos:start="2407:34" pos:end="2411:17">{<block_content pos:start="2409:21" pos:end="2409:49">

                    <expr_stmt pos:start="2409:21" pos:end="2409:49"><expr pos:start="2409:21" pos:end="2409:48"><call pos:start="2409:21" pos:end="2409:48"><name pos:start="2409:21" pos:end="2409:29">store_reg</name><argument_list pos:start="2409:30" pos:end="2409:48">(<argument pos:start="2409:31" pos:end="2409:31"><expr pos:start="2409:31" pos:end="2409:31"><name pos:start="2409:31" pos:end="2409:31">s</name></expr></argument>, <argument pos:start="2409:34" pos:end="2409:35"><expr pos:start="2409:34" pos:end="2409:35"><name pos:start="2409:34" pos:end="2409:35">rn</name></expr></argument>, <argument pos:start="2409:38" pos:end="2409:47"><expr pos:start="2409:38" pos:end="2409:47"><name pos:start="2409:38" pos:end="2409:47">loaded_var</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="2413:17" pos:end="2425:17"><if pos:start="2413:17" pos:end="2425:17">if <condition pos:start="2413:20" pos:end="2413:48">(<expr pos:start="2413:21" pos:end="2413:47"><operator pos:start="2413:21" pos:end="2413:21">(</operator><name pos:start="2413:22" pos:end="2413:25">insn</name> <operator pos:start="2413:27" pos:end="2413:27">&amp;</operator> <operator pos:start="2413:29" pos:end="2413:29">(</operator><literal type="number" pos:start="2413:30" pos:end="2413:30">1</literal> <operator pos:start="2413:32" pos:end="2413:33">&lt;&lt;</operator> <literal type="number" pos:start="2413:35" pos:end="2413:36">22</literal><operator pos:start="2413:37" pos:end="2413:37">)</operator><operator pos:start="2413:38" pos:end="2413:38">)</operator> <operator pos:start="2413:40" pos:end="2413:41">&amp;&amp;</operator> <operator pos:start="2413:43" pos:end="2413:43">!</operator><name pos:start="2413:44" pos:end="2413:47">user</name></expr>)</condition> <block pos:start="2413:50" pos:end="2425:17">{<block_content pos:start="2417:21" pos:end="2423:45">

                    <comment type="block" pos:start="2415:21" pos:end="2415:50">/* Restore CPSR from SPSR.  */</comment>

                    <expr_stmt pos:start="2417:21" pos:end="2417:47"><expr pos:start="2417:21" pos:end="2417:46"><name pos:start="2417:21" pos:end="2417:23">tmp</name> <operator pos:start="2417:25" pos:end="2417:25">=</operator> <call pos:start="2417:27" pos:end="2417:46"><name pos:start="2417:27" pos:end="2417:40">load_cpu_field</name><argument_list pos:start="2417:41" pos:end="2417:46">(<argument pos:start="2417:42" pos:end="2417:45"><expr pos:start="2417:42" pos:end="2417:45"><name pos:start="2417:42" pos:end="2417:45">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2419:21" pos:end="2419:50"><expr pos:start="2419:21" pos:end="2419:49"><call pos:start="2419:21" pos:end="2419:49"><name pos:start="2419:21" pos:end="2419:32">gen_set_cpsr</name><argument_list pos:start="2419:33" pos:end="2419:49">(<argument pos:start="2419:34" pos:end="2419:36"><expr pos:start="2419:34" pos:end="2419:36"><name pos:start="2419:34" pos:end="2419:36">tmp</name></expr></argument>, <argument pos:start="2419:39" pos:end="2419:48"><expr pos:start="2419:39" pos:end="2419:48"><literal type="number" pos:start="2419:39" pos:end="2419:48">0xffffffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2421:21" pos:end="2421:43"><expr pos:start="2421:21" pos:end="2421:42"><call pos:start="2421:21" pos:end="2421:42"><name pos:start="2421:21" pos:end="2421:37">tcg_temp_free_i32</name><argument_list pos:start="2421:38" pos:end="2421:42">(<argument pos:start="2421:39" pos:end="2421:41"><expr pos:start="2421:39" pos:end="2421:41"><name pos:start="2421:39" pos:end="2421:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2423:21" pos:end="2423:45"><expr pos:start="2423:21" pos:end="2423:44"><name pos:start="2423:21" pos:end="2423:29"><name pos:start="2423:21" pos:end="2423:21">s</name><operator pos:start="2423:22" pos:end="2423:23">-&gt;</operator><name pos:start="2423:24" pos:end="2423:29">is_jmp</name></name> <operator pos:start="2423:31" pos:end="2423:31">=</operator> <name pos:start="2423:33" pos:end="2423:44">DISAS_UPDATE</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <break pos:start="2429:13" pos:end="2429:18">break;</break>

        <case pos:start="2431:9" pos:end="2431:17">case <expr pos:start="2431:14" pos:end="2431:16"><literal type="number" pos:start="2431:14" pos:end="2431:16">0xa</literal></expr>:</case>

        <case pos:start="2433:9" pos:end="2433:17">case <expr pos:start="2433:14" pos:end="2433:16"><literal type="number" pos:start="2433:14" pos:end="2433:16">0xb</literal></expr>:</case>

            <block pos:start="2435:13" pos:end="2461:13">{<block_content pos:start="2437:17" pos:end="2459:32">

                <decl_stmt pos:start="2437:17" pos:end="2437:31"><decl pos:start="2437:17" pos:end="2437:30"><type pos:start="2437:17" pos:end="2437:23"><name pos:start="2437:17" pos:end="2437:23">int32_t</name></type> <name pos:start="2437:25" pos:end="2437:30">offset</name></decl>;</decl_stmt>



                <comment type="block" pos:start="2441:17" pos:end="2441:39">/* branch (and link) */</comment>

                <expr_stmt pos:start="2443:17" pos:end="2443:37"><expr pos:start="2443:17" pos:end="2443:36"><name pos:start="2443:17" pos:end="2443:19">val</name> <operator pos:start="2443:21" pos:end="2443:21">=</operator> <operator pos:start="2443:23" pos:end="2443:23">(</operator><name pos:start="2443:24" pos:end="2443:30">int32_t</name><operator pos:start="2443:31" pos:end="2443:31">)</operator><name pos:start="2443:32" pos:end="2443:36"><name pos:start="2443:32" pos:end="2443:32">s</name><operator pos:start="2443:33" pos:end="2443:34">-&gt;</operator><name pos:start="2443:35" pos:end="2443:36">pc</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="2445:17" pos:end="2453:17"><if pos:start="2445:17" pos:end="2453:17">if <condition pos:start="2445:20" pos:end="2445:37">(<expr pos:start="2445:21" pos:end="2445:36"><name pos:start="2445:21" pos:end="2445:24">insn</name> <operator pos:start="2445:26" pos:end="2445:26">&amp;</operator> <operator pos:start="2445:28" pos:end="2445:28">(</operator><literal type="number" pos:start="2445:29" pos:end="2445:29">1</literal> <operator pos:start="2445:31" pos:end="2445:32">&lt;&lt;</operator> <literal type="number" pos:start="2445:34" pos:end="2445:35">24</literal><operator pos:start="2445:36" pos:end="2445:36">)</operator></expr>)</condition> <block pos:start="2445:39" pos:end="2453:17">{<block_content pos:start="2447:21" pos:end="2451:42">

                    <expr_stmt pos:start="2447:21" pos:end="2447:45"><expr pos:start="2447:21" pos:end="2447:44"><name pos:start="2447:21" pos:end="2447:23">tmp</name> <operator pos:start="2447:25" pos:end="2447:25">=</operator> <call pos:start="2447:27" pos:end="2447:44"><name pos:start="2447:27" pos:end="2447:42">tcg_temp_new_i32</name><argument_list pos:start="2447:43" pos:end="2447:44">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2449:21" pos:end="2449:47"><expr pos:start="2449:21" pos:end="2449:46"><call pos:start="2449:21" pos:end="2449:46"><name pos:start="2449:21" pos:end="2449:36">tcg_gen_movi_i32</name><argument_list pos:start="2449:37" pos:end="2449:46">(<argument pos:start="2449:38" pos:end="2449:40"><expr pos:start="2449:38" pos:end="2449:40"><name pos:start="2449:38" pos:end="2449:40">tmp</name></expr></argument>, <argument pos:start="2449:43" pos:end="2449:45"><expr pos:start="2449:43" pos:end="2449:45"><name pos:start="2449:43" pos:end="2449:45">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="2451:21" pos:end="2451:42"><expr pos:start="2451:21" pos:end="2451:41"><call pos:start="2451:21" pos:end="2451:41"><name pos:start="2451:21" pos:end="2451:29">store_reg</name><argument_list pos:start="2451:30" pos:end="2451:41">(<argument pos:start="2451:31" pos:end="2451:31"><expr pos:start="2451:31" pos:end="2451:31"><name pos:start="2451:31" pos:end="2451:31">s</name></expr></argument>, <argument pos:start="2451:34" pos:end="2451:35"><expr pos:start="2451:34" pos:end="2451:35"><literal type="number" pos:start="2451:34" pos:end="2451:35">14</literal></expr></argument>, <argument pos:start="2451:38" pos:end="2451:40"><expr pos:start="2451:38" pos:end="2451:40"><name pos:start="2451:38" pos:end="2451:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="2455:17" pos:end="2455:53"><expr pos:start="2455:17" pos:end="2455:52"><name pos:start="2455:17" pos:end="2455:22">offset</name> <operator pos:start="2455:24" pos:end="2455:24">=</operator> <operator pos:start="2455:26" pos:end="2455:26">(</operator><operator pos:start="2455:27" pos:end="2455:27">(</operator><operator pos:start="2455:28" pos:end="2455:28">(</operator><name pos:start="2455:29" pos:end="2455:35">int32_t</name><operator pos:start="2455:36" pos:end="2455:36">)</operator><name pos:start="2455:37" pos:end="2455:40">insn</name> <operator pos:start="2455:42" pos:end="2455:43">&lt;&lt;</operator> <literal type="number" pos:start="2455:45" pos:end="2455:45">8</literal><operator pos:start="2455:46" pos:end="2455:46">)</operator> <operator pos:start="2455:48" pos:end="2455:49">&gt;&gt;</operator> <literal type="number" pos:start="2455:51" pos:end="2455:51">8</literal><operator pos:start="2455:52" pos:end="2455:52">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="2457:17" pos:end="2457:41"><expr pos:start="2457:17" pos:end="2457:40"><name pos:start="2457:17" pos:end="2457:19">val</name> <operator pos:start="2457:21" pos:end="2457:22">+=</operator> <operator pos:start="2457:24" pos:end="2457:24">(</operator><name pos:start="2457:25" pos:end="2457:30">offset</name> <operator pos:start="2457:32" pos:end="2457:33">&lt;&lt;</operator> <literal type="number" pos:start="2457:35" pos:end="2457:35">2</literal><operator pos:start="2457:36" pos:end="2457:36">)</operator> <operator pos:start="2457:38" pos:end="2457:38">+</operator> <literal type="number" pos:start="2457:40" pos:end="2457:40">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="2459:17" pos:end="2459:32"><expr pos:start="2459:17" pos:end="2459:31"><call pos:start="2459:17" pos:end="2459:31"><name pos:start="2459:17" pos:end="2459:23">gen_jmp</name><argument_list pos:start="2459:24" pos:end="2459:31">(<argument pos:start="2459:25" pos:end="2459:25"><expr pos:start="2459:25" pos:end="2459:25"><name pos:start="2459:25" pos:end="2459:25">s</name></expr></argument>, <argument pos:start="2459:28" pos:end="2459:30"><expr pos:start="2459:28" pos:end="2459:30"><name pos:start="2459:28" pos:end="2459:30">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <break pos:start="2463:13" pos:end="2463:18">break;</break>

        <case pos:start="2465:9" pos:end="2465:17">case <expr pos:start="2465:14" pos:end="2465:16"><literal type="number" pos:start="2465:14" pos:end="2465:16">0xc</literal></expr>:</case>

        <case pos:start="2467:9" pos:end="2467:17">case <expr pos:start="2467:14" pos:end="2467:16"><literal type="number" pos:start="2467:14" pos:end="2467:16">0xd</literal></expr>:</case>

        <case pos:start="2469:9" pos:end="2469:17">case <expr pos:start="2469:14" pos:end="2469:16"><literal type="number" pos:start="2469:14" pos:end="2469:16">0xe</literal></expr>:</case>

            <comment type="block" pos:start="2471:13" pos:end="2471:31">/* Coprocessor.  */</comment>

            <if_stmt pos:start="2473:13" pos:end="2475:32"><if pos:start="2473:13" pos:end="2475:32">if <condition pos:start="2473:16" pos:end="2473:48">(<expr pos:start="2473:17" pos:end="2473:47"><call pos:start="2473:17" pos:end="2473:47"><name pos:start="2473:17" pos:end="2473:33">disas_coproc_insn</name><argument_list pos:start="2473:34" pos:end="2473:47">(<argument pos:start="2473:35" pos:end="2473:37"><expr pos:start="2473:35" pos:end="2473:37"><name pos:start="2473:35" pos:end="2473:37">env</name></expr></argument>, <argument pos:start="2473:40" pos:end="2473:40"><expr pos:start="2473:40" pos:end="2473:40"><name pos:start="2473:40" pos:end="2473:40">s</name></expr></argument>, <argument pos:start="2473:43" pos:end="2473:46"><expr pos:start="2473:43" pos:end="2473:46"><name pos:start="2473:43" pos:end="2473:46">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="2475:17" pos:end="2475:32"><block_content pos:start="2475:17" pos:end="2475:32">

                <goto pos:start="2475:17" pos:end="2475:32">goto <name pos:start="2475:22" pos:end="2475:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="2477:13" pos:end="2477:18">break;</break>

        <case pos:start="2479:9" pos:end="2479:17">case <expr pos:start="2479:14" pos:end="2479:16"><literal type="number" pos:start="2479:14" pos:end="2479:16">0xf</literal></expr>:</case>

            <comment type="block" pos:start="2481:13" pos:end="2481:21">/* swi */</comment>

            <expr_stmt pos:start="2483:13" pos:end="2483:33"><expr pos:start="2483:13" pos:end="2483:32"><call pos:start="2483:13" pos:end="2483:32"><name pos:start="2483:13" pos:end="2483:25">gen_set_pc_im</name><argument_list pos:start="2483:26" pos:end="2483:32">(<argument pos:start="2483:27" pos:end="2483:31"><expr pos:start="2483:27" pos:end="2483:31"><name pos:start="2483:27" pos:end="2483:31"><name pos:start="2483:27" pos:end="2483:27">s</name><operator pos:start="2483:28" pos:end="2483:29">-&gt;</operator><name pos:start="2483:30" pos:end="2483:31">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="2485:13" pos:end="2485:34"><expr pos:start="2485:13" pos:end="2485:33"><name pos:start="2485:13" pos:end="2485:21"><name pos:start="2485:13" pos:end="2485:13">s</name><operator pos:start="2485:14" pos:end="2485:15">-&gt;</operator><name pos:start="2485:16" pos:end="2485:21">is_jmp</name></name> <operator pos:start="2485:23" pos:end="2485:23">=</operator> <name pos:start="2485:25" pos:end="2485:33">DISAS_SWI</name></expr>;</expr_stmt>

            <break pos:start="2487:13" pos:end="2487:18">break;</break>

        <default pos:start="2489:9" pos:end="2489:16">default:</default>

        <label pos:start="2491:9" pos:end="2491:19"><name pos:start="2491:9" pos:end="2491:18">illegal_op</name>:</label>

            <expr_stmt pos:start="2493:13" pos:end="2493:48"><expr pos:start="2493:13" pos:end="2493:47"><call pos:start="2493:13" pos:end="2493:47"><name pos:start="2493:13" pos:end="2493:30">gen_exception_insn</name><argument_list pos:start="2493:31" pos:end="2493:47">(<argument pos:start="2493:32" pos:end="2493:32"><expr pos:start="2493:32" pos:end="2493:32"><name pos:start="2493:32" pos:end="2493:32">s</name></expr></argument>, <argument pos:start="2493:35" pos:end="2493:35"><expr pos:start="2493:35" pos:end="2493:35"><literal type="number" pos:start="2493:35" pos:end="2493:35">4</literal></expr></argument>, <argument pos:start="2493:38" pos:end="2493:46"><expr pos:start="2493:38" pos:end="2493:46"><name pos:start="2493:38" pos:end="2493:46">EXCP_UDEF</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="2495:13" pos:end="2495:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
