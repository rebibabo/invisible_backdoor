<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18850.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">rm_read_index</name><parameter_list pos:start="1:25" pos:end="1:44">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:42"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:13">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:61"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:21">size</name></decl>, <decl pos:start="7:24" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:24" pos:end="7:29">n_pkts</name></decl>, <decl pos:start="7:32" pos:end="7:37"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:32" pos:end="7:37">str_id</name></decl>, <decl pos:start="7:40" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:40" pos:end="7:47">next_off</name></decl>, <decl pos:start="7:50" pos:end="7:50"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:50" pos:end="7:50">n</name></decl>, <decl pos:start="7:53" pos:end="7:55"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:53" pos:end="7:55">pos</name></decl>, <decl pos:start="7:58" pos:end="7:60"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:58" pos:end="7:60">pts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>



    <do pos:start="13:5" pos:end="75:23">do <block pos:start="13:8" pos:end="75:5">{<block_content pos:start="15:9" pos:end="73:22">

        <if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:52">(<expr pos:start="15:13" pos:end="15:51"><call pos:start="15:13" pos:end="15:25"><name pos:start="15:13" pos:end="15:21">avio_rl32</name><argument_list pos:start="15:22" pos:end="15:25">(<argument pos:start="15:23" pos:end="15:24"><expr pos:start="15:23" pos:end="15:24"><name pos:start="15:23" pos:end="15:24">pb</name></expr></argument>)</argument_list></call> <operator pos:start="15:27" pos:end="15:28">!=</operator> <call pos:start="15:30" pos:end="15:51"><name pos:start="15:30" pos:end="15:34">MKTAG</name><argument_list pos:start="15:35" pos:end="15:51">(<argument pos:start="15:36" pos:end="15:38"><expr pos:start="15:36" pos:end="15:38"><literal type="char" pos:start="15:36" pos:end="15:38">'I'</literal></expr></argument>,<argument pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><literal type="char" pos:start="15:40" pos:end="15:42">'N'</literal></expr></argument>,<argument pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><literal type="char" pos:start="15:44" pos:end="15:46">'D'</literal></expr></argument>,<argument pos:start="15:48" pos:end="15:50"><expr pos:start="15:48" pos:end="15:50"><literal type="char" pos:start="15:48" pos:end="15:50">'X'</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22">

            <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><operator pos:start="17:20" pos:end="17:20">-</operator><literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:33"><expr pos:start="19:9" pos:end="19:32"><name pos:start="19:9" pos:end="19:12">size</name>     <operator pos:start="19:18" pos:end="19:18">=</operator> <call pos:start="19:20" pos:end="19:32"><name pos:start="19:20" pos:end="19:28">avio_rb32</name><argument_list pos:start="19:29" pos:end="19:32">(<argument pos:start="19:30" pos:end="19:31"><expr pos:start="19:30" pos:end="19:31"><name pos:start="19:30" pos:end="19:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="23:22"><if pos:start="21:9" pos:end="23:22">if <condition pos:start="21:12" pos:end="21:22">(<expr pos:start="21:13" pos:end="21:21"><name pos:start="21:13" pos:end="21:16">size</name> <operator pos:start="21:18" pos:end="21:18">&lt;</operator> <literal type="number" pos:start="21:20" pos:end="21:21">20</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:22"><block_content pos:start="23:13" pos:end="23:22">

            <return pos:start="23:13" pos:end="23:22">return <expr pos:start="23:20" pos:end="23:21"><operator pos:start="23:20" pos:end="23:20">-</operator><literal type="number" pos:start="23:21" pos:end="23:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:25"><expr pos:start="25:9" pos:end="25:24"><call pos:start="25:9" pos:end="25:24"><name pos:start="25:9" pos:end="25:17">avio_skip</name><argument_list pos:start="25:18" pos:end="25:24">(<argument pos:start="25:19" pos:end="25:20"><expr pos:start="25:19" pos:end="25:20"><name pos:start="25:19" pos:end="25:20">pb</name></expr></argument>, <argument pos:start="25:23" pos:end="25:23"><expr pos:start="25:23" pos:end="25:23"><literal type="number" pos:start="25:23" pos:end="25:23">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:14">n_pkts</name>   <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:32"><name pos:start="27:20" pos:end="27:28">avio_rb32</name><argument_list pos:start="27:29" pos:end="27:32">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:33"><expr pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:14">str_id</name>   <operator pos:start="29:18" pos:end="29:18">=</operator> <call pos:start="29:20" pos:end="29:32"><name pos:start="29:20" pos:end="29:28">avio_rb16</name><argument_list pos:start="29:29" pos:end="29:32">(<argument pos:start="29:30" pos:end="29:31"><expr pos:start="29:30" pos:end="29:31"><name pos:start="29:30" pos:end="29:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:16">next_off</name> <operator pos:start="31:18" pos:end="31:18">=</operator> <call pos:start="31:20" pos:end="31:32"><name pos:start="31:20" pos:end="31:28">avio_rb32</name><argument_list pos:start="31:29" pos:end="31:32">(<argument pos:start="31:30" pos:end="31:31"><expr pos:start="31:30" pos:end="31:31"><name pos:start="31:30" pos:end="31:31">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="33:9" pos:end="41:13">for <control pos:start="33:13" pos:end="33:43">(<init pos:start="33:14" pos:end="33:19"><expr pos:start="33:14" pos:end="33:18"><name pos:start="33:14" pos:end="33:14">n</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <literal type="number" pos:start="33:18" pos:end="33:18">0</literal></expr>;</init> <condition pos:start="33:21" pos:end="33:38"><expr pos:start="33:21" pos:end="33:37"><name pos:start="33:21" pos:end="33:21">n</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <name pos:start="33:25" pos:end="33:37"><name pos:start="33:25" pos:end="33:25">s</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:37">nb_streams</name></name></expr>;</condition> <incr pos:start="33:40" pos:end="33:42"><expr pos:start="33:40" pos:end="33:42"><name pos:start="33:40" pos:end="33:40">n</name><operator pos:start="33:41" pos:end="33:42">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:13" pos:end="41:13"><block_content pos:start="35:13" pos:end="41:13">

            <if_stmt pos:start="35:13" pos:end="41:13"><if pos:start="35:13" pos:end="41:13">if <condition pos:start="35:16" pos:end="35:44">(<expr pos:start="35:17" pos:end="35:43"><name pos:start="35:17" pos:end="35:29"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:26">streams</name><index pos:start="35:27" pos:end="35:29">[<expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">n</name></expr>]</index></name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:33">id</name> <operator pos:start="35:35" pos:end="35:36">==</operator> <name pos:start="35:38" pos:end="35:43">str_id</name></expr>)</condition> <block pos:start="35:46" pos:end="41:13">{<block_content pos:start="37:17" pos:end="39:22">

                <expr_stmt pos:start="37:17" pos:end="37:35"><expr pos:start="37:17" pos:end="37:34"><name pos:start="37:17" pos:end="37:18">st</name> <operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:22">s</name><operator pos:start="37:23" pos:end="37:24">-&gt;</operator><name pos:start="37:25" pos:end="37:31">streams</name><index pos:start="37:32" pos:end="37:34">[<expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">n</name></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="39:17" pos:end="39:22">break;</break>

            </block_content>}</block></if></if_stmt></block_content></block></for>

        <if_stmt pos:start="43:9" pos:end="45:22"><if pos:start="43:9" pos:end="45:22">if <condition pos:start="43:12" pos:end="43:31">(<expr pos:start="43:13" pos:end="43:30"><name pos:start="43:13" pos:end="43:13">n</name> <operator pos:start="43:15" pos:end="43:16">==</operator> <name pos:start="43:18" pos:end="43:30"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:30">nb_streams</name></name></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:22"><block_content pos:start="45:13" pos:end="45:22">

            <goto pos:start="45:13" pos:end="45:22">goto <name pos:start="45:18" pos:end="45:21">skip</name>;</goto></block_content></block></if></if_stmt>



        <for pos:start="49:9" pos:end="63:9">for <control pos:start="49:13" pos:end="49:36">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">n</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:31"><expr pos:start="49:21" pos:end="49:30"><name pos:start="49:21" pos:end="49:21">n</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:30">n_pkts</name></expr>;</condition> <incr pos:start="49:33" pos:end="49:35"><expr pos:start="49:33" pos:end="49:35"><name pos:start="49:33" pos:end="49:33">n</name><operator pos:start="49:34" pos:end="49:35">++</operator></expr></incr>)</control> <block pos:start="49:38" pos:end="63:9">{<block_content pos:start="51:13" pos:end="61:69">

            <expr_stmt pos:start="51:13" pos:end="51:29"><expr pos:start="51:13" pos:end="51:28"><call pos:start="51:13" pos:end="51:28"><name pos:start="51:13" pos:end="51:21">avio_skip</name><argument_list pos:start="51:22" pos:end="51:28">(<argument pos:start="51:23" pos:end="51:24"><expr pos:start="51:23" pos:end="51:24"><name pos:start="51:23" pos:end="51:24">pb</name></expr></argument>, <argument pos:start="51:27" pos:end="51:27"><expr pos:start="51:27" pos:end="51:27"><literal type="number" pos:start="51:27" pos:end="51:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:32"><expr pos:start="53:13" pos:end="53:31"><name pos:start="53:13" pos:end="53:15">pts</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="53:31"><name pos:start="53:19" pos:end="53:27">avio_rb32</name><argument_list pos:start="53:28" pos:end="53:31">(<argument pos:start="53:29" pos:end="53:30"><expr pos:start="53:29" pos:end="53:30"><name pos:start="53:29" pos:end="53:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:32"><expr pos:start="55:13" pos:end="55:31"><name pos:start="55:13" pos:end="55:15">pos</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="55:31"><name pos:start="55:19" pos:end="55:27">avio_rb32</name><argument_list pos:start="55:28" pos:end="55:31">(<argument pos:start="55:29" pos:end="55:30"><expr pos:start="55:29" pos:end="55:30"><name pos:start="55:29" pos:end="55:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:29"><expr pos:start="57:13" pos:end="57:28"><call pos:start="57:13" pos:end="57:28"><name pos:start="57:13" pos:end="57:21">avio_skip</name><argument_list pos:start="57:22" pos:end="57:28">(<argument pos:start="57:23" pos:end="57:24"><expr pos:start="57:23" pos:end="57:24"><name pos:start="57:23" pos:end="57:24">pb</name></expr></argument>, <argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:31" pos:end="57:46">/* packet no. */</comment>



            <expr_stmt pos:start="61:13" pos:end="61:69"><expr pos:start="61:13" pos:end="61:68"><call pos:start="61:13" pos:end="61:68"><name pos:start="61:13" pos:end="61:30">av_add_index_entry</name><argument_list pos:start="61:31" pos:end="61:68">(<argument pos:start="61:32" pos:end="61:33"><expr pos:start="61:32" pos:end="61:33"><name pos:start="61:32" pos:end="61:33">st</name></expr></argument>, <argument pos:start="61:36" pos:end="61:38"><expr pos:start="61:36" pos:end="61:38"><name pos:start="61:36" pos:end="61:38">pos</name></expr></argument>, <argument pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><name pos:start="61:41" pos:end="61:43">pts</name></expr></argument>, <argument pos:start="61:46" pos:end="61:46"><expr pos:start="61:46" pos:end="61:46"><literal type="number" pos:start="61:46" pos:end="61:46">0</literal></expr></argument>, <argument pos:start="61:49" pos:end="61:49"><expr pos:start="61:49" pos:end="61:49"><literal type="number" pos:start="61:49" pos:end="61:49">0</literal></expr></argument>, <argument pos:start="61:52" pos:end="61:67"><expr pos:start="61:52" pos:end="61:67"><name pos:start="61:52" pos:end="61:67">AVINDEX_KEYFRAME</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



<label pos:start="67:1" pos:end="67:5"><name pos:start="67:1" pos:end="67:4">skip</name>:</label>

        <if_stmt pos:start="69:9" pos:end="73:22"><if pos:start="69:9" pos:end="73:22">if <condition pos:start="69:12" pos:end="71:50">(<expr pos:start="69:13" pos:end="71:49"><name pos:start="69:13" pos:end="69:20">next_off</name> <operator pos:start="69:22" pos:end="69:23">&amp;&amp;</operator> <call pos:start="69:25" pos:end="69:37"><name pos:start="69:25" pos:end="69:33">avio_tell</name><argument_list pos:start="69:34" pos:end="69:37">(<argument pos:start="69:35" pos:end="69:36"><expr pos:start="69:35" pos:end="69:36"><name pos:start="69:35" pos:end="69:36">pb</name></expr></argument>)</argument_list></call> <operator pos:start="69:39" pos:end="69:40">!=</operator> <name pos:start="69:42" pos:end="69:49">next_off</name> <operator pos:start="69:51" pos:end="69:52">&amp;&amp;</operator>

            <call pos:start="71:13" pos:end="71:45"><name pos:start="71:13" pos:end="71:21">avio_seek</name><argument_list pos:start="71:22" pos:end="71:45">(<argument pos:start="71:23" pos:end="71:24"><expr pos:start="71:23" pos:end="71:24"><name pos:start="71:23" pos:end="71:24">pb</name></expr></argument>, <argument pos:start="71:27" pos:end="71:34"><expr pos:start="71:27" pos:end="71:34"><name pos:start="71:27" pos:end="71:34">next_off</name></expr></argument>, <argument pos:start="71:37" pos:end="71:44"><expr pos:start="71:37" pos:end="71:44"><name pos:start="71:37" pos:end="71:44">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="71:47" pos:end="71:47">&lt;</operator> <literal type="number" pos:start="71:49" pos:end="71:49">0</literal></expr>)</condition><block type="pseudo" pos:start="73:13" pos:end="73:22"><block_content pos:start="73:13" pos:end="73:22">

            <return pos:start="73:13" pos:end="73:22">return <expr pos:start="73:20" pos:end="73:21"><operator pos:start="73:20" pos:end="73:20">-</operator><literal type="number" pos:start="73:21" pos:end="73:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block> while <condition pos:start="75:13" pos:end="75:22">(<expr pos:start="75:14" pos:end="75:21"><name pos:start="75:14" pos:end="75:21">next_off</name></expr>)</condition>;</do>



    <return pos:start="79:5" pos:end="79:13">return <expr pos:start="79:12" pos:end="79:12"><literal type="number" pos:start="79:12" pos:end="79:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
