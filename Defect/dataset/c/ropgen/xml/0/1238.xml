<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1238.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">usb_wacom_handle_data</name><parameter_list pos:start="1:33" pos:end="1:62">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:42">USBDevice</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">dev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:58">USBPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:15">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">USBWacomState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:44">= <expr pos:start="5:24" pos:end="5:44"><operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:37">USBWacomState</name> <operator pos:start="5:39" pos:end="5:39">*</operator><operator pos:start="5:40" pos:end="5:40">)</operator> <name pos:start="5:42" pos:end="5:44">dev</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:28"><name pos:start="7:13" pos:end="7:15">buf</name><index pos:start="7:16" pos:end="7:28">[<expr pos:start="7:17" pos:end="7:27"><name pos:start="7:17" pos:end="7:27"><name pos:start="7:17" pos:end="7:17">p</name><operator pos:start="7:18" pos:end="7:19">-&gt;</operator><name pos:start="7:20" pos:end="7:22">iov</name><operator pos:start="7:23" pos:end="7:23">.</operator><name pos:start="7:24" pos:end="7:27">size</name></name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="49:5">switch <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:13">p</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:18">pid</name></name></expr>)</condition> <block pos:start="13:21" pos:end="49:5">{<block_content pos:start="15:5" pos:end="47:14">

    <case pos:start="15:5" pos:end="15:22">case <expr pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:21">USB_TOKEN_IN</name></expr>:</case>

        <if_stmt pos:start="17:9" pos:end="37:9"><if pos:start="17:9" pos:end="37:9">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><name pos:start="17:13" pos:end="17:20"><name pos:start="17:13" pos:end="17:13">p</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:20">devep</name></name> <operator pos:start="17:22" pos:end="17:23">==</operator> <literal type="number" pos:start="17:25" pos:end="17:25">1</literal></expr>)</condition> <block pos:start="17:28" pos:end="37:9">{<block_content pos:start="19:13" pos:end="35:18">

            <if_stmt pos:start="19:13" pos:end="21:35"><if pos:start="19:13" pos:end="21:35">if <condition pos:start="19:16" pos:end="19:41">(<expr pos:start="19:17" pos:end="19:40"><operator pos:start="19:17" pos:end="19:17">!</operator><operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:28"><name pos:start="19:19" pos:end="19:19">s</name><operator pos:start="19:20" pos:end="19:21">-&gt;</operator><name pos:start="19:22" pos:end="19:28">changed</name></name> <operator pos:start="19:30" pos:end="19:31">||</operator> <name pos:start="19:33" pos:end="19:39"><name pos:start="19:33" pos:end="19:33">s</name><operator pos:start="19:34" pos:end="19:35">-&gt;</operator><name pos:start="19:36" pos:end="19:39">idle</name></name><operator pos:start="19:40" pos:end="19:40">)</operator></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:35"><block_content pos:start="21:17" pos:end="21:35">

                <return pos:start="21:17" pos:end="21:35">return <expr pos:start="21:24" pos:end="21:34"><name pos:start="21:24" pos:end="21:34">USB_RET_NAK</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:27"><expr pos:start="23:13" pos:end="23:26"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">changed</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <literal type="number" pos:start="23:26" pos:end="23:26">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="31:58"><if pos:start="25:13" pos:end="27:58">if <condition pos:start="25:16" pos:end="25:42">(<expr pos:start="25:17" pos:end="25:41"><name pos:start="25:17" pos:end="25:23"><name pos:start="25:17" pos:end="25:17">s</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:23">mode</name></name> <operator pos:start="25:25" pos:end="25:26">==</operator> <name pos:start="25:28" pos:end="25:41">WACOM_MODE_HID</name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:58"><block_content pos:start="27:17" pos:end="27:58">

                <expr_stmt pos:start="27:17" pos:end="27:58"><expr pos:start="27:17" pos:end="27:57"><name pos:start="27:17" pos:end="27:19">ret</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:57"><name pos:start="27:23" pos:end="27:36">usb_mouse_poll</name><argument_list pos:start="27:37" pos:end="27:57">(<argument pos:start="27:38" pos:end="27:38"><expr pos:start="27:38" pos:end="27:38"><name pos:start="27:38" pos:end="27:38">s</name></expr></argument>, <argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">buf</name></expr></argument>, <argument pos:start="27:46" pos:end="27:56"><expr pos:start="27:46" pos:end="27:56"><name pos:start="27:46" pos:end="27:56"><name pos:start="27:46" pos:end="27:46">p</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:51">iov</name><operator pos:start="27:52" pos:end="27:52">.</operator><name pos:start="27:53" pos:end="27:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="29:13" pos:end="31:58">else if <condition pos:start="29:21" pos:end="29:49">(<expr pos:start="29:22" pos:end="29:48"><name pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">mode</name></name> <operator pos:start="29:30" pos:end="29:31">==</operator> <name pos:start="29:33" pos:end="29:48">WACOM_MODE_WACOM</name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:58"><block_content pos:start="31:17" pos:end="31:58">

                <expr_stmt pos:start="31:17" pos:end="31:58"><expr pos:start="31:17" pos:end="31:57"><name pos:start="31:17" pos:end="31:19">ret</name> <operator pos:start="31:21" pos:end="31:21">=</operator> <call pos:start="31:23" pos:end="31:57"><name pos:start="31:23" pos:end="31:36">usb_wacom_poll</name><argument_list pos:start="31:37" pos:end="31:57">(<argument pos:start="31:38" pos:end="31:38"><expr pos:start="31:38" pos:end="31:38"><name pos:start="31:38" pos:end="31:38">s</name></expr></argument>, <argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">buf</name></expr></argument>, <argument pos:start="31:46" pos:end="31:56"><expr pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:56"><name pos:start="31:46" pos:end="31:46">p</name><operator pos:start="31:47" pos:end="31:48">-&gt;</operator><name pos:start="31:49" pos:end="31:51">iov</name><operator pos:start="31:52" pos:end="31:52">.</operator><name pos:start="31:53" pos:end="31:56">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:41"><expr pos:start="33:13" pos:end="33:40"><call pos:start="33:13" pos:end="33:40"><name pos:start="33:13" pos:end="33:27">usb_packet_copy</name><argument_list pos:start="33:28" pos:end="33:40">(<argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><name pos:start="33:29" pos:end="33:29">p</name></expr></argument>, <argument pos:start="33:32" pos:end="33:34"><expr pos:start="33:32" pos:end="33:34"><name pos:start="33:32" pos:end="33:34">buf</name></expr></argument>, <argument pos:start="33:37" pos:end="33:39"><expr pos:start="33:37" pos:end="33:39"><name pos:start="33:37" pos:end="33:39">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="35:13" pos:end="35:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="39:9" pos:end="39:28">/* Fall through.  */</comment>

    <case pos:start="41:5" pos:end="41:23">case <expr pos:start="41:10" pos:end="41:22"><name pos:start="41:10" pos:end="41:22">USB_TOKEN_OUT</name></expr>:</case>

    <default pos:start="43:5" pos:end="43:12">default:</default>

        <expr_stmt pos:start="45:9" pos:end="45:28"><expr pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <name pos:start="45:15" pos:end="45:27">USB_RET_STALL</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>

    </block_content>}</block></switch>

    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
