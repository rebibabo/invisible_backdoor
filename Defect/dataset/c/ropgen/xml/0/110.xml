<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/110.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">scsi_disk_emulate_start_stop</name><parameter_list pos:start="1:40" pos:end="1:55">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:51">SCSIDiskReq</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">r</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="45:1">{<block_content pos:start="5:5" pos:end="43:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SCSIRequest</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">req</name> <init pos:start="5:22" pos:end="5:30">= <expr pos:start="5:24" pos:end="5:30"><operator pos:start="5:24" pos:end="5:24">&amp;</operator><name pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:25">r</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">req</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:64"><decl pos:start="7:5" pos:end="7:63"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">SCSIDiskState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:63">= <expr pos:start="7:24" pos:end="7:63"><call pos:start="7:24" pos:end="7:63"><name pos:start="7:24" pos:end="7:32">DO_UPCAST</name><argument_list pos:start="7:33" pos:end="7:63">(<argument pos:start="7:34" pos:end="7:46"><expr pos:start="7:34" pos:end="7:46"><name pos:start="7:34" pos:end="7:46">SCSIDiskState</name></expr></argument>, <argument pos:start="7:49" pos:end="7:52"><expr pos:start="7:49" pos:end="7:52"><name pos:start="7:49" pos:end="7:52">qdev</name></expr></argument>, <argument pos:start="7:55" pos:end="7:62"><expr pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:57">req</name><operator pos:start="7:58" pos:end="7:59">-&gt;</operator><name pos:start="7:60" pos:end="7:62">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">bool</name></type> <name pos:start="9:10" pos:end="9:14">start</name> <init pos:start="9:16" pos:end="9:36">= <expr pos:start="9:18" pos:end="9:36"><name pos:start="9:18" pos:end="9:32"><name pos:start="9:18" pos:end="9:20">req</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:25">cmd</name><operator pos:start="9:26" pos:end="9:26">.</operator><name pos:start="9:27" pos:end="9:29">buf</name><index pos:start="9:30" pos:end="9:32">[<expr pos:start="9:31" pos:end="9:31"><literal type="number" pos:start="9:31" pos:end="9:31">4</literal></expr>]</index></name> <operator pos:start="9:34" pos:end="9:34">&amp;</operator> <literal type="number" pos:start="9:36" pos:end="9:36">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:35"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:13">loej</name> <init pos:start="11:15" pos:end="11:35">= <expr pos:start="11:17" pos:end="11:35"><name pos:start="11:17" pos:end="11:31"><name pos:start="11:17" pos:end="11:19">req</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:24">cmd</name><operator pos:start="11:25" pos:end="11:25">.</operator><name pos:start="11:26" pos:end="11:28">buf</name><index pos:start="11:29" pos:end="11:31">[<expr pos:start="11:30" pos:end="11:30"><literal type="number" pos:start="11:30" pos:end="11:30">4</literal></expr>]</index></name> <operator pos:start="11:33" pos:end="11:33">&amp;</operator> <literal type="number" pos:start="11:35" pos:end="11:35">2</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="11:38" pos:end="11:73">/* load on start, eject on !start */</comment>



    <if_stmt pos:start="15:5" pos:end="41:5"><if pos:start="15:5" pos:end="41:5">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:15">qdev</name><operator pos:start="15:16" pos:end="15:16">.</operator><name pos:start="15:17" pos:end="15:20">type</name></name> <operator pos:start="15:22" pos:end="15:23">==</operator> <name pos:start="15:25" pos:end="15:32">TYPE_ROM</name> <operator pos:start="15:34" pos:end="15:35">&amp;&amp;</operator> <name pos:start="15:37" pos:end="15:40">loej</name></expr>)</condition> <block pos:start="15:43" pos:end="41:5">{<block_content pos:start="17:9" pos:end="39:9">

        <if_stmt pos:start="17:9" pos:end="29:9"><if pos:start="17:9" pos:end="29:9">if <condition pos:start="17:12" pos:end="17:54">(<expr pos:start="17:13" pos:end="17:53"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:18">start</name> <operator pos:start="17:20" pos:end="17:21">&amp;&amp;</operator> <operator pos:start="17:23" pos:end="17:23">!</operator><name pos:start="17:24" pos:end="17:35"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:35">tray_open</name></name> <operator pos:start="17:37" pos:end="17:38">&amp;&amp;</operator> <name pos:start="17:40" pos:end="17:53"><name pos:start="17:40" pos:end="17:40">s</name><operator pos:start="17:41" pos:end="17:42">-&gt;</operator><name pos:start="17:43" pos:end="17:53">tray_locked</name></name></expr>)</condition> <block pos:start="17:56" pos:end="29:9">{<block_content pos:start="19:13" pos:end="27:22">

            <expr_stmt pos:start="19:13" pos:end="25:76"><expr pos:start="19:13" pos:end="25:75"><call pos:start="19:13" pos:end="25:75"><name pos:start="19:13" pos:end="19:32">scsi_check_condition</name><argument_list pos:start="19:33" pos:end="25:75">(<argument pos:start="19:34" pos:end="19:34"><expr pos:start="19:34" pos:end="19:34"><name pos:start="19:34" pos:end="19:34">r</name></expr></argument>,

                                 <argument pos:start="21:34" pos:end="25:74"><expr pos:start="21:34" pos:end="25:74"><ternary pos:start="21:34" pos:end="25:74"><condition pos:start="21:34" pos:end="23:34"><expr pos:start="21:34" pos:end="21:66"><call pos:start="21:34" pos:end="21:66"><name pos:start="21:34" pos:end="21:49">bdrv_is_inserted</name><argument_list pos:start="21:50" pos:end="21:66">(<argument pos:start="21:51" pos:end="21:65"><expr pos:start="21:51" pos:end="21:65"><name pos:start="21:51" pos:end="21:65"><name pos:start="21:51" pos:end="21:51">s</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:57">qdev</name><operator pos:start="21:58" pos:end="21:58">.</operator><name pos:start="21:59" pos:end="21:62">conf</name><operator pos:start="21:63" pos:end="21:63">.</operator><name pos:start="21:64" pos:end="21:65">bs</name></name></expr></argument>)</argument_list></call></expr>

                                 ?</condition><then pos:start="23:36" pos:end="23:76"> <expr pos:start="23:36" pos:end="23:76"><call pos:start="23:36" pos:end="23:76"><name pos:start="23:36" pos:end="23:45">SENSE_CODE</name><argument_list pos:start="23:46" pos:end="23:76">(<argument pos:start="23:47" pos:end="23:75"><expr pos:start="23:47" pos:end="23:75"><name pos:start="23:47" pos:end="23:75">ILLEGAL_REQ_REMOVAL_PREVENTED</name></expr></argument>)</argument_list></call></expr>

                                 </then><else pos:start="25:34" pos:end="25:74">: <expr pos:start="25:36" pos:end="25:74"><call pos:start="25:36" pos:end="25:74"><name pos:start="25:36" pos:end="25:45">SENSE_CODE</name><argument_list pos:start="25:46" pos:end="25:74">(<argument pos:start="25:47" pos:end="25:73"><expr pos:start="25:47" pos:end="25:73"><name pos:start="25:47" pos:end="25:73">NOT_READY_REMOVAL_PREVENTED</name></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="27:13" pos:end="27:22">return <expr pos:start="27:20" pos:end="27:21"><operator pos:start="27:20" pos:end="27:20">-</operator><literal type="number" pos:start="27:21" pos:end="27:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:24"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:24">tray_open</name></name> <operator pos:start="33:26" pos:end="33:27">!=</operator> <operator pos:start="33:29" pos:end="33:29">!</operator><name pos:start="33:30" pos:end="33:34">start</name></expr>)</condition> <block pos:start="33:37" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:34">

            <expr_stmt pos:start="35:13" pos:end="35:48"><expr pos:start="35:13" pos:end="35:47"><call pos:start="35:13" pos:end="35:47"><name pos:start="35:13" pos:end="35:22">bdrv_eject</name><argument_list pos:start="35:23" pos:end="35:47">(<argument pos:start="35:24" pos:end="35:38"><expr pos:start="35:24" pos:end="35:38"><name pos:start="35:24" pos:end="35:38"><name pos:start="35:24" pos:end="35:24">s</name><operator pos:start="35:25" pos:end="35:26">-&gt;</operator><name pos:start="35:27" pos:end="35:30">qdev</name><operator pos:start="35:31" pos:end="35:31">.</operator><name pos:start="35:32" pos:end="35:35">conf</name><operator pos:start="35:36" pos:end="35:36">.</operator><name pos:start="35:37" pos:end="35:38">bs</name></name></expr></argument>, <argument pos:start="35:41" pos:end="35:46"><expr pos:start="35:41" pos:end="35:46"><operator pos:start="35:41" pos:end="35:41">!</operator><name pos:start="35:42" pos:end="35:46">start</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:34"><expr pos:start="37:13" pos:end="37:33"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:24">tray_open</name></name> <operator pos:start="37:26" pos:end="37:26">=</operator> <operator pos:start="37:28" pos:end="37:28">!</operator><name pos:start="37:29" pos:end="37:33">start</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="43:5" pos:end="43:13">return <expr pos:start="43:12" pos:end="43:12"><literal type="number" pos:start="43:12" pos:end="43:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
