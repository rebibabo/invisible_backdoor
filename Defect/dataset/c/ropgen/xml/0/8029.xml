<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8029.c" pos:tabs="8"><macro pos:start="1:1" pos:end="11:42"><name pos:start="1:1" pos:end="1:22">ff_yuv2packedX_altivec</name><argument_list pos:start="1:23" pos:end="11:42">(<argument pos:start="1:24" pos:end="1:36">SwsContext *c</argument>, <argument pos:start="1:39" pos:end="1:62">const int16_t *lumFilter</argument>,

                       <argument pos:start="3:24" pos:end="3:45">const int16_t **lumSrc</argument>, <argument pos:start="3:48" pos:end="3:64">int lumFilterSize</argument>,

                       <argument pos:start="5:24" pos:end="5:47">const int16_t *chrFilter</argument>, <argument pos:start="5:50" pos:end="5:72">const int16_t **chrUSrc</argument>,

                       <argument pos:start="7:24" pos:end="7:46">const int16_t **chrVSrc</argument>, <argument pos:start="7:49" pos:end="7:65">int chrFilterSize</argument>,

                       <argument pos:start="9:24" pos:end="9:45">const int16_t **alpSrc</argument>, <argument pos:start="9:48" pos:end="9:60">uint8_t *dest</argument>,

                       <argument pos:start="11:24" pos:end="11:31">int dstW</argument>, <argument pos:start="11:34" pos:end="11:41">int dstY</argument>)</argument_list></macro>

<block pos:start="13:1" pos:end="351:1">{<block_content pos:start="15:5" pos:end="347:5">

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>,<decl pos:start="15:11" pos:end="15:11"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:11" pos:end="15:11">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:54"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:23"><name pos:start="17:5" pos:end="17:10">vector</name> <name pos:start="17:12" pos:end="17:17">signed</name> <name pos:start="17:19" pos:end="17:23">short</name></type> <name pos:start="17:25" pos:end="17:25">X</name></decl>,<decl pos:start="17:27" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:27" pos:end="17:28">X0</name></decl>,<decl pos:start="17:30" pos:end="17:31"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:30" pos:end="17:31">X1</name></decl>,<decl pos:start="17:33" pos:end="17:34"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:33" pos:end="17:34">Y0</name></decl>,<decl pos:start="17:36" pos:end="17:37"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:36" pos:end="17:37">U0</name></decl>,<decl pos:start="17:39" pos:end="17:40"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:39" pos:end="17:40">V0</name></decl>,<decl pos:start="17:42" pos:end="17:43"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:42" pos:end="17:43">Y1</name></decl>,<decl pos:start="17:45" pos:end="17:46"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:45" pos:end="17:46">U1</name></decl>,<decl pos:start="17:48" pos:end="17:49"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:48" pos:end="17:49">V1</name></decl>,<decl pos:start="17:51" pos:end="17:51"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:51" pos:end="17:51">U</name></decl>,<decl pos:start="17:53" pos:end="17:53"><type ref="prev" pos:start="17:5" pos:end="17:23"/><name pos:start="17:53" pos:end="17:53">V</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:26"><type pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:10">vector</name> <name pos:start="19:12" pos:end="19:17">signed</name> <name pos:start="19:19" pos:end="19:23">short</name></type> <name pos:start="19:25" pos:end="19:26">R0</name></decl>,<decl pos:start="19:28" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:23"/><name pos:start="19:28" pos:end="19:29">G0</name></decl>,<decl pos:start="19:31" pos:end="19:32"><type ref="prev" pos:start="19:5" pos:end="19:23"/><name pos:start="19:31" pos:end="19:32">B0</name></decl>,<decl pos:start="19:34" pos:end="19:35"><type ref="prev" pos:start="19:5" pos:end="19:23"/><name pos:start="19:34" pos:end="19:35">R1</name></decl>,<decl pos:start="19:37" pos:end="19:38"><type ref="prev" pos:start="19:5" pos:end="19:23"/><name pos:start="19:37" pos:end="19:38">G1</name></decl>,<decl pos:start="19:40" pos:end="19:41"><type ref="prev" pos:start="19:5" pos:end="19:23"/><name pos:start="19:40" pos:end="19:41">B1</name></decl>;</decl_stmt>



    <decl_stmt pos:start="23:5" pos:end="23:31"><decl pos:start="23:5" pos:end="23:26"><type pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:10">vector</name> <name pos:start="23:12" pos:end="23:19">unsigned</name> <name pos:start="23:21" pos:end="23:24">char</name></type> <name pos:start="23:26" pos:end="23:26">R</name></decl>,<decl pos:start="23:28" pos:end="23:28"><type ref="prev" pos:start="23:5" pos:end="23:24"/><name pos:start="23:28" pos:end="23:28">G</name></decl>,<decl pos:start="23:30" pos:end="23:30"><type ref="prev" pos:start="23:5" pos:end="23:24"/><name pos:start="23:30" pos:end="23:30">B</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:36"><decl pos:start="25:5" pos:end="25:29"><type pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:10">vector</name> <name pos:start="25:12" pos:end="25:19">unsigned</name> <name pos:start="25:21" pos:end="25:24">char</name> <modifier pos:start="25:26" pos:end="25:26">*</modifier></type><name pos:start="25:27" pos:end="25:29">out</name></decl>,<decl pos:start="25:31" pos:end="25:35"><type ref="prev" pos:start="25:5" pos:end="25:26"><modifier pos:start="25:31" pos:end="25:31">*</modifier></type><name pos:start="25:32" pos:end="25:35">nout</name></decl>;</decl_stmt>



    <decl_stmt pos:start="29:5" pos:end="29:52"><decl pos:start="29:5" pos:end="29:51"><type pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:10">vector</name> <name pos:start="29:12" pos:end="29:17">signed</name> <name pos:start="29:19" pos:end="29:23">short</name></type>   <name pos:start="29:27" pos:end="29:29">RND</name> <init pos:start="29:31" pos:end="29:51">= <expr pos:start="29:33" pos:end="29:51"><call pos:start="29:33" pos:end="29:51"><name pos:start="29:33" pos:end="29:45">vec_splat_s16</name><argument_list pos:start="29:46" pos:end="29:51">(<argument pos:start="29:47" pos:end="29:50"><expr pos:start="29:47" pos:end="29:50"><literal type="number" pos:start="29:47" pos:end="29:47">1</literal><operator pos:start="29:48" pos:end="29:49">&lt;&lt;</operator><literal type="number" pos:start="29:50" pos:end="29:50">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:49"><decl pos:start="31:5" pos:end="31:48"><type pos:start="31:5" pos:end="31:25"><name pos:start="31:5" pos:end="31:10">vector</name> <name pos:start="31:12" pos:end="31:19">unsigned</name> <name pos:start="31:21" pos:end="31:25">short</name></type> <name pos:start="31:27" pos:end="31:29">SCL</name> <init pos:start="31:31" pos:end="31:48">= <expr pos:start="31:33" pos:end="31:48"><call pos:start="31:33" pos:end="31:48"><name pos:start="31:33" pos:end="31:45">vec_splat_u16</name><argument_list pos:start="31:46" pos:end="31:48">(<argument pos:start="31:47" pos:end="31:47"><expr pos:start="31:47" pos:end="31:47"><literal type="number" pos:start="31:47" pos:end="31:47">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <macro pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:19">DECLARE_ALIGNED</name><argument_list pos:start="33:20" pos:end="33:46">(<argument pos:start="33:21" pos:end="33:22"><literal type="number" pos:start="33:21" pos:end="33:22">16</literal></argument>, <argument pos:start="33:25" pos:end="33:36">unsigned int</argument>, <argument pos:start="33:39" pos:end="33:45">scratch</argument>)</argument_list></macro><expr_stmt pos:start="33:47" pos:end="33:51"><expr pos:start="33:47" pos:end="33:50"><index pos:start="33:47" pos:end="33:50">[<expr pos:start="33:48" pos:end="33:49"><literal type="number" pos:start="33:48" pos:end="33:49">16</literal></expr>]</index></expr>;</expr_stmt>



    <decl_stmt pos:start="37:5" pos:end="37:43"><decl pos:start="37:5" pos:end="37:32"><type pos:start="37:5" pos:end="37:25"><name pos:start="37:5" pos:end="37:10">vector</name> <name pos:start="37:12" pos:end="37:17">signed</name> <name pos:start="37:19" pos:end="37:23">short</name> <modifier pos:start="37:25" pos:end="37:25">*</modifier></type><name pos:start="37:26" pos:end="37:32">YCoeffs</name></decl>, <decl pos:start="37:35" pos:end="37:42"><type ref="prev" pos:start="37:5" pos:end="37:25"><modifier pos:start="37:35" pos:end="37:35">*</modifier></type><name pos:start="37:36" pos:end="37:42">CCoeffs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:49"><expr pos:start="41:5" pos:end="41:48"><name pos:start="41:5" pos:end="41:11">YCoeffs</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:29"><name pos:start="41:15" pos:end="41:15">c</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:29">vYCoeffsBank</name></name><operator pos:start="41:30" pos:end="41:30">+</operator><name pos:start="41:31" pos:end="41:34">dstY</name><operator pos:start="41:35" pos:end="41:35">*</operator><name pos:start="41:36" pos:end="41:48">lumFilterSize</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:49"><expr pos:start="43:5" pos:end="43:48"><name pos:start="43:5" pos:end="43:11">CCoeffs</name> <operator pos:start="43:13" pos:end="43:13">=</operator> <name pos:start="43:15" pos:end="43:29"><name pos:start="43:15" pos:end="43:15">c</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:29">vCCoeffsBank</name></name><operator pos:start="43:30" pos:end="43:30">+</operator><name pos:start="43:31" pos:end="43:34">dstY</name><operator pos:start="43:35" pos:end="43:35">*</operator><name pos:start="43:36" pos:end="43:48">chrFilterSize</name></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:7">out</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <operator pos:start="47:11" pos:end="47:11">(</operator><name pos:start="47:12" pos:end="47:17">vector</name> <name pos:start="47:19" pos:end="47:26">unsigned</name> <name pos:start="47:28" pos:end="47:31">char</name> <operator pos:start="47:33" pos:end="47:33">*</operator><operator pos:start="47:34" pos:end="47:34">)</operator><name pos:start="47:35" pos:end="47:38">dest</name></expr>;</expr_stmt>



    <for pos:start="51:5" pos:end="199:5">for <control pos:start="51:9" pos:end="51:28">(<init pos:start="51:10" pos:end="51:13"><expr pos:start="51:10" pos:end="51:12"><name pos:start="51:10" pos:end="51:10">i</name><operator pos:start="51:11" pos:end="51:11">=</operator><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</init> <condition pos:start="51:15" pos:end="51:21"><expr pos:start="51:15" pos:end="51:20"><name pos:start="51:15" pos:end="51:15">i</name><operator pos:start="51:16" pos:end="51:16">&lt;</operator><name pos:start="51:17" pos:end="51:20">dstW</name></expr>;</condition> <incr pos:start="51:23" pos:end="51:27"><expr pos:start="51:23" pos:end="51:27"><name pos:start="51:23" pos:end="51:23">i</name><operator pos:start="51:24" pos:end="51:25">+=</operator><literal type="number" pos:start="51:26" pos:end="51:27">16</literal></expr></incr>)</control> <block pos:start="51:30" pos:end="199:5">{<block_content pos:start="53:9" pos:end="197:9">

        <expr_stmt pos:start="53:9" pos:end="53:17"><expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:10">Y0</name> <operator pos:start="53:12" pos:end="53:12">=</operator> <name pos:start="53:14" pos:end="53:16">RND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:17"><expr pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:10">Y1</name> <operator pos:start="55:12" pos:end="55:12">=</operator> <name pos:start="55:14" pos:end="55:16">RND</name></expr>;</expr_stmt>

        <comment type="block" pos:start="57:9" pos:end="57:43">/* extract 16 coeffs from lumSrc */</comment>

        <for pos:start="59:9" pos:end="69:9">for <control pos:start="59:13" pos:end="59:39">(<init pos:start="59:14" pos:end="59:17"><expr pos:start="59:14" pos:end="59:16"><name pos:start="59:14" pos:end="59:14">j</name><operator pos:start="59:15" pos:end="59:15">=</operator><literal type="number" pos:start="59:16" pos:end="59:16">0</literal></expr>;</init> <condition pos:start="59:19" pos:end="59:34"><expr pos:start="59:19" pos:end="59:33"><name pos:start="59:19" pos:end="59:19">j</name><operator pos:start="59:20" pos:end="59:20">&lt;</operator><name pos:start="59:21" pos:end="59:33">lumFilterSize</name></expr>;</condition> <incr pos:start="59:36" pos:end="59:38"><expr pos:start="59:36" pos:end="59:38"><name pos:start="59:36" pos:end="59:36">j</name><operator pos:start="59:37" pos:end="59:38">++</operator></expr></incr>)</control> <block pos:start="59:41" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:49">

            <expr_stmt pos:start="61:13" pos:end="61:44"><expr pos:start="61:13" pos:end="61:43"><name pos:start="61:13" pos:end="61:14">X0</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:43"><name pos:start="61:18" pos:end="61:23">vec_ld</name> <argument_list pos:start="61:25" pos:end="61:43">(<argument pos:start="61:26" pos:end="61:26"><expr pos:start="61:26" pos:end="61:26"><literal type="number" pos:start="61:26" pos:end="61:26">0</literal></expr></argument>,  <argument pos:start="61:30" pos:end="61:42"><expr pos:start="61:30" pos:end="61:42"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:42"><name pos:start="61:31" pos:end="61:36">lumSrc</name><index pos:start="61:37" pos:end="61:39">[<expr pos:start="61:38" pos:end="61:38"><name pos:start="61:38" pos:end="61:38">j</name></expr>]</index><index pos:start="61:40" pos:end="61:42">[<expr pos:start="61:41" pos:end="61:41"><name pos:start="61:41" pos:end="61:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:44"><expr pos:start="63:13" pos:end="63:43"><name pos:start="63:13" pos:end="63:14">X1</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <call pos:start="63:18" pos:end="63:43"><name pos:start="63:18" pos:end="63:23">vec_ld</name> <argument_list pos:start="63:25" pos:end="63:43">(<argument pos:start="63:26" pos:end="63:27"><expr pos:start="63:26" pos:end="63:27"><literal type="number" pos:start="63:26" pos:end="63:27">16</literal></expr></argument>, <argument pos:start="63:30" pos:end="63:42"><expr pos:start="63:30" pos:end="63:42"><operator pos:start="63:30" pos:end="63:30">&amp;</operator><name pos:start="63:31" pos:end="63:42"><name pos:start="63:31" pos:end="63:36">lumSrc</name><index pos:start="63:37" pos:end="63:39">[<expr pos:start="63:38" pos:end="63:38"><name pos:start="63:38" pos:end="63:38">j</name></expr>]</index><index pos:start="63:40" pos:end="63:42">[<expr pos:start="63:41" pos:end="63:41"><name pos:start="63:41" pos:end="63:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:49"><expr pos:start="65:13" pos:end="65:48"><name pos:start="65:13" pos:end="65:14">Y0</name> <operator pos:start="65:16" pos:end="65:16">=</operator> <call pos:start="65:18" pos:end="65:48"><name pos:start="65:18" pos:end="65:27">vec_mradds</name> <argument_list pos:start="65:29" pos:end="65:48">(<argument pos:start="65:30" pos:end="65:31"><expr pos:start="65:30" pos:end="65:31"><name pos:start="65:30" pos:end="65:31">X0</name></expr></argument>, <argument pos:start="65:34" pos:end="65:43"><expr pos:start="65:34" pos:end="65:43"><name pos:start="65:34" pos:end="65:43"><name pos:start="65:34" pos:end="65:40">YCoeffs</name><index pos:start="65:41" pos:end="65:43">[<expr pos:start="65:42" pos:end="65:42"><name pos:start="65:42" pos:end="65:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="65:46" pos:end="65:47"><expr pos:start="65:46" pos:end="65:47"><name pos:start="65:46" pos:end="65:47">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:49"><expr pos:start="67:13" pos:end="67:48"><name pos:start="67:13" pos:end="67:14">Y1</name> <operator pos:start="67:16" pos:end="67:16">=</operator> <call pos:start="67:18" pos:end="67:48"><name pos:start="67:18" pos:end="67:27">vec_mradds</name> <argument_list pos:start="67:29" pos:end="67:48">(<argument pos:start="67:30" pos:end="67:31"><expr pos:start="67:30" pos:end="67:31"><name pos:start="67:30" pos:end="67:31">X1</name></expr></argument>, <argument pos:start="67:34" pos:end="67:43"><expr pos:start="67:34" pos:end="67:43"><name pos:start="67:34" pos:end="67:43"><name pos:start="67:34" pos:end="67:40">YCoeffs</name><index pos:start="67:41" pos:end="67:43">[<expr pos:start="67:42" pos:end="67:42"><name pos:start="67:42" pos:end="67:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="67:46" pos:end="67:47"><expr pos:start="67:46" pos:end="67:47"><name pos:start="67:46" pos:end="67:47">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="73:9" pos:end="73:16"><expr pos:start="73:9" pos:end="73:15"><name pos:start="73:9" pos:end="73:9">U</name> <operator pos:start="73:11" pos:end="73:11">=</operator> <name pos:start="73:13" pos:end="73:15">RND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:16"><expr pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:9">V</name> <operator pos:start="75:11" pos:end="75:11">=</operator> <name pos:start="75:13" pos:end="75:15">RND</name></expr>;</expr_stmt>

        <comment type="block" pos:start="77:9" pos:end="77:39">/* extract 8 coeffs from U,V */</comment>

        <for pos:start="79:9" pos:end="89:9">for <control pos:start="79:13" pos:end="79:39">(<init pos:start="79:14" pos:end="79:17"><expr pos:start="79:14" pos:end="79:16"><name pos:start="79:14" pos:end="79:14">j</name><operator pos:start="79:15" pos:end="79:15">=</operator><literal type="number" pos:start="79:16" pos:end="79:16">0</literal></expr>;</init> <condition pos:start="79:19" pos:end="79:34"><expr pos:start="79:19" pos:end="79:33"><name pos:start="79:19" pos:end="79:19">j</name><operator pos:start="79:20" pos:end="79:20">&lt;</operator><name pos:start="79:21" pos:end="79:33">chrFilterSize</name></expr>;</condition> <incr pos:start="79:36" pos:end="79:38"><expr pos:start="79:36" pos:end="79:38"><name pos:start="79:36" pos:end="79:36">j</name><operator pos:start="79:37" pos:end="79:38">++</operator></expr></incr>)</control> <block pos:start="79:41" pos:end="89:9">{<block_content pos:start="81:13" pos:end="87:47">

            <expr_stmt pos:start="81:13" pos:end="81:46"><expr pos:start="81:13" pos:end="81:45"><name pos:start="81:13" pos:end="81:13">X</name>  <operator pos:start="81:16" pos:end="81:16">=</operator> <call pos:start="81:18" pos:end="81:45"><name pos:start="81:18" pos:end="81:23">vec_ld</name> <argument_list pos:start="81:25" pos:end="81:45">(<argument pos:start="81:26" pos:end="81:26"><expr pos:start="81:26" pos:end="81:26"><literal type="number" pos:start="81:26" pos:end="81:26">0</literal></expr></argument>, <argument pos:start="81:29" pos:end="81:44"><expr pos:start="81:29" pos:end="81:44"><operator pos:start="81:29" pos:end="81:29">&amp;</operator><name pos:start="81:30" pos:end="81:44"><name pos:start="81:30" pos:end="81:36">chrUSrc</name><index pos:start="81:37" pos:end="81:39">[<expr pos:start="81:38" pos:end="81:38"><name pos:start="81:38" pos:end="81:38">j</name></expr>]</index><index pos:start="81:40" pos:end="81:44">[<expr pos:start="81:41" pos:end="81:43"><name pos:start="81:41" pos:end="81:41">i</name><operator pos:start="81:42" pos:end="81:42">/</operator><literal type="number" pos:start="81:43" pos:end="81:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:47"><expr pos:start="83:13" pos:end="83:46"><name pos:start="83:13" pos:end="83:13">U</name>  <operator pos:start="83:16" pos:end="83:16">=</operator> <call pos:start="83:18" pos:end="83:46"><name pos:start="83:18" pos:end="83:27">vec_mradds</name> <argument_list pos:start="83:29" pos:end="83:46">(<argument pos:start="83:30" pos:end="83:30"><expr pos:start="83:30" pos:end="83:30"><name pos:start="83:30" pos:end="83:30">X</name></expr></argument>, <argument pos:start="83:33" pos:end="83:42"><expr pos:start="83:33" pos:end="83:42"><name pos:start="83:33" pos:end="83:42"><name pos:start="83:33" pos:end="83:39">CCoeffs</name><index pos:start="83:40" pos:end="83:42">[<expr pos:start="83:41" pos:end="83:41"><name pos:start="83:41" pos:end="83:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="83:45" pos:end="83:45"><expr pos:start="83:45" pos:end="83:45"><name pos:start="83:45" pos:end="83:45">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:46"><expr pos:start="85:13" pos:end="85:45"><name pos:start="85:13" pos:end="85:13">X</name>  <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="85:45"><name pos:start="85:18" pos:end="85:23">vec_ld</name> <argument_list pos:start="85:25" pos:end="85:45">(<argument pos:start="85:26" pos:end="85:26"><expr pos:start="85:26" pos:end="85:26"><literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr></argument>, <argument pos:start="85:29" pos:end="85:44"><expr pos:start="85:29" pos:end="85:44"><operator pos:start="85:29" pos:end="85:29">&amp;</operator><name pos:start="85:30" pos:end="85:44"><name pos:start="85:30" pos:end="85:36">chrVSrc</name><index pos:start="85:37" pos:end="85:39">[<expr pos:start="85:38" pos:end="85:38"><name pos:start="85:38" pos:end="85:38">j</name></expr>]</index><index pos:start="85:40" pos:end="85:44">[<expr pos:start="85:41" pos:end="85:43"><name pos:start="85:41" pos:end="85:41">i</name><operator pos:start="85:42" pos:end="85:42">/</operator><literal type="number" pos:start="85:43" pos:end="85:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:47"><expr pos:start="87:13" pos:end="87:46"><name pos:start="87:13" pos:end="87:13">V</name>  <operator pos:start="87:16" pos:end="87:16">=</operator> <call pos:start="87:18" pos:end="87:46"><name pos:start="87:18" pos:end="87:27">vec_mradds</name> <argument_list pos:start="87:29" pos:end="87:46">(<argument pos:start="87:30" pos:end="87:30"><expr pos:start="87:30" pos:end="87:30"><name pos:start="87:30" pos:end="87:30">X</name></expr></argument>, <argument pos:start="87:33" pos:end="87:42"><expr pos:start="87:33" pos:end="87:42"><name pos:start="87:33" pos:end="87:42"><name pos:start="87:33" pos:end="87:39">CCoeffs</name><index pos:start="87:40" pos:end="87:42">[<expr pos:start="87:41" pos:end="87:41"><name pos:start="87:41" pos:end="87:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="87:45" pos:end="87:45"><expr pos:start="87:45" pos:end="87:45"><name pos:start="87:45" pos:end="87:45">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="93:9" pos:end="93:36">/* scale and clip signals */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:10">Y0</name> <operator pos:start="95:12" pos:end="95:12">=</operator> <call pos:start="95:14" pos:end="95:30"><name pos:start="95:14" pos:end="95:20">vec_sra</name> <argument_list pos:start="95:22" pos:end="95:30">(<argument pos:start="95:23" pos:end="95:24"><expr pos:start="95:23" pos:end="95:24"><name pos:start="95:23" pos:end="95:24">Y0</name></expr></argument>, <argument pos:start="95:27" pos:end="95:29"><expr pos:start="95:27" pos:end="95:29"><name pos:start="95:27" pos:end="95:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:31"><expr pos:start="97:9" pos:end="97:30"><name pos:start="97:9" pos:end="97:10">Y1</name> <operator pos:start="97:12" pos:end="97:12">=</operator> <call pos:start="97:14" pos:end="97:30"><name pos:start="97:14" pos:end="97:20">vec_sra</name> <argument_list pos:start="97:22" pos:end="97:30">(<argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">Y1</name></expr></argument>, <argument pos:start="97:27" pos:end="97:29"><expr pos:start="97:27" pos:end="97:29"><name pos:start="97:27" pos:end="97:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:31"><expr pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:9">U</name>  <operator pos:start="99:12" pos:end="99:12">=</operator> <call pos:start="99:14" pos:end="99:30"><name pos:start="99:14" pos:end="99:20">vec_sra</name> <argument_list pos:start="99:22" pos:end="99:30">(<argument pos:start="99:23" pos:end="99:23"><expr pos:start="99:23" pos:end="99:23"><name pos:start="99:23" pos:end="99:23">U</name></expr></argument>,  <argument pos:start="99:27" pos:end="99:29"><expr pos:start="99:27" pos:end="99:29"><name pos:start="99:27" pos:end="99:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:31"><expr pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:9">V</name>  <operator pos:start="101:12" pos:end="101:12">=</operator> <call pos:start="101:14" pos:end="101:30"><name pos:start="101:14" pos:end="101:20">vec_sra</name> <argument_list pos:start="101:22" pos:end="101:30">(<argument pos:start="101:23" pos:end="101:23"><expr pos:start="101:23" pos:end="101:23"><name pos:start="101:23" pos:end="101:23">V</name></expr></argument>,  <argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="105:9" pos:end="105:31"><expr pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:10">Y0</name> <operator pos:start="105:12" pos:end="105:12">=</operator> <call pos:start="105:14" pos:end="105:30"><name pos:start="105:14" pos:end="105:25">vec_clip_s16</name> <argument_list pos:start="105:27" pos:end="105:30">(<argument pos:start="105:28" pos:end="105:29"><expr pos:start="105:28" pos:end="105:29"><name pos:start="105:28" pos:end="105:29">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="107:31"><expr pos:start="107:9" pos:end="107:30"><name pos:start="107:9" pos:end="107:10">Y1</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <call pos:start="107:14" pos:end="107:30"><name pos:start="107:14" pos:end="107:25">vec_clip_s16</name> <argument_list pos:start="107:27" pos:end="107:30">(<argument pos:start="107:28" pos:end="107:29"><expr pos:start="107:28" pos:end="107:29"><name pos:start="107:28" pos:end="107:29">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:9">U</name>  <operator pos:start="109:12" pos:end="109:12">=</operator> <call pos:start="109:14" pos:end="109:29"><name pos:start="109:14" pos:end="109:25">vec_clip_s16</name> <argument_list pos:start="109:27" pos:end="109:29">(<argument pos:start="109:28" pos:end="109:28"><expr pos:start="109:28" pos:end="109:28"><name pos:start="109:28" pos:end="109:28">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:30"><expr pos:start="111:9" pos:end="111:29"><name pos:start="111:9" pos:end="111:9">V</name>  <operator pos:start="111:12" pos:end="111:12">=</operator> <call pos:start="111:14" pos:end="111:29"><name pos:start="111:14" pos:end="111:25">vec_clip_s16</name> <argument_list pos:start="111:27" pos:end="111:29">(<argument pos:start="111:28" pos:end="111:28"><expr pos:start="111:28" pos:end="111:28"><name pos:start="111:28" pos:end="111:28">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="115:9" pos:end="129:10">/* now we have

          Y0= y0 y1 y2 y3 y4 y5 y6 y7     Y1= y8 y9 y10 y11 y12 y13 y14 y15

          U= u0 u1 u2 u3 u4 u5 u6 u7      V= v0 v1 v2 v3 v4 v5 v6 v7



          Y0= y0 y1 y2 y3 y4 y5 y6 y7    Y1= y8 y9 y10 y11 y12 y13 y14 y15

          U0= u0 u0 u1 u1 u2 u2 u3 u3    U1= u4 u4 u5 u5 u6 u6 u7 u7

          V0= v0 v0 v1 v1 v2 v2 v3 v3    V1= v4 v4 v5 v5 v6 v6 v7 v7

        */</comment>



        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:10">U0</name> <operator pos:start="133:12" pos:end="133:12">=</operator> <call pos:start="133:14" pos:end="133:29"><name pos:start="133:14" pos:end="133:23">vec_mergeh</name> <argument_list pos:start="133:25" pos:end="133:29">(<argument pos:start="133:26" pos:end="133:26"><expr pos:start="133:26" pos:end="133:26"><name pos:start="133:26" pos:end="133:26">U</name></expr></argument>,<argument pos:start="133:28" pos:end="133:28"><expr pos:start="133:28" pos:end="133:28"><name pos:start="133:28" pos:end="133:28">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:30"><expr pos:start="135:9" pos:end="135:29"><name pos:start="135:9" pos:end="135:10">V0</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <call pos:start="135:14" pos:end="135:29"><name pos:start="135:14" pos:end="135:23">vec_mergeh</name> <argument_list pos:start="135:25" pos:end="135:29">(<argument pos:start="135:26" pos:end="135:26"><expr pos:start="135:26" pos:end="135:26"><name pos:start="135:26" pos:end="135:26">V</name></expr></argument>,<argument pos:start="135:28" pos:end="135:28"><expr pos:start="135:28" pos:end="135:28"><name pos:start="135:28" pos:end="135:28">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:10">U1</name> <operator pos:start="139:12" pos:end="139:12">=</operator> <call pos:start="139:14" pos:end="139:29"><name pos:start="139:14" pos:end="139:23">vec_mergel</name> <argument_list pos:start="139:25" pos:end="139:29">(<argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">U</name></expr></argument>,<argument pos:start="139:28" pos:end="139:28"><expr pos:start="139:28" pos:end="139:28"><name pos:start="139:28" pos:end="139:28">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:30"><expr pos:start="141:9" pos:end="141:29"><name pos:start="141:9" pos:end="141:10">V1</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <call pos:start="141:14" pos:end="141:29"><name pos:start="141:14" pos:end="141:23">vec_mergel</name> <argument_list pos:start="141:25" pos:end="141:29">(<argument pos:start="141:26" pos:end="141:26"><expr pos:start="141:26" pos:end="141:26"><name pos:start="141:26" pos:end="141:26">V</name></expr></argument>,<argument pos:start="141:28" pos:end="141:28"><expr pos:start="141:28" pos:end="141:28"><name pos:start="141:28" pos:end="141:28">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="145:9" pos:end="145:46"><expr pos:start="145:9" pos:end="145:45"><call pos:start="145:9" pos:end="145:45"><name pos:start="145:9" pos:end="145:19">cvtyuvtoRGB</name> <argument_list pos:start="145:21" pos:end="145:45">(<argument pos:start="145:22" pos:end="145:22"><expr pos:start="145:22" pos:end="145:22"><name pos:start="145:22" pos:end="145:22">c</name></expr></argument>, <argument pos:start="145:25" pos:end="145:26"><expr pos:start="145:25" pos:end="145:26"><name pos:start="145:25" pos:end="145:26">Y0</name></expr></argument>,<argument pos:start="145:28" pos:end="145:29"><expr pos:start="145:28" pos:end="145:29"><name pos:start="145:28" pos:end="145:29">U0</name></expr></argument>,<argument pos:start="145:31" pos:end="145:32"><expr pos:start="145:31" pos:end="145:32"><name pos:start="145:31" pos:end="145:32">V0</name></expr></argument>,<argument pos:start="145:34" pos:end="145:36"><expr pos:start="145:34" pos:end="145:36"><operator pos:start="145:34" pos:end="145:34">&amp;</operator><name pos:start="145:35" pos:end="145:36">R0</name></expr></argument>,<argument pos:start="145:38" pos:end="145:40"><expr pos:start="145:38" pos:end="145:40"><operator pos:start="145:38" pos:end="145:38">&amp;</operator><name pos:start="145:39" pos:end="145:40">G0</name></expr></argument>,<argument pos:start="145:42" pos:end="145:44"><expr pos:start="145:42" pos:end="145:44"><operator pos:start="145:42" pos:end="145:42">&amp;</operator><name pos:start="145:43" pos:end="145:44">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:46"><expr pos:start="147:9" pos:end="147:45"><call pos:start="147:9" pos:end="147:45"><name pos:start="147:9" pos:end="147:19">cvtyuvtoRGB</name> <argument_list pos:start="147:21" pos:end="147:45">(<argument pos:start="147:22" pos:end="147:22"><expr pos:start="147:22" pos:end="147:22"><name pos:start="147:22" pos:end="147:22">c</name></expr></argument>, <argument pos:start="147:25" pos:end="147:26"><expr pos:start="147:25" pos:end="147:26"><name pos:start="147:25" pos:end="147:26">Y1</name></expr></argument>,<argument pos:start="147:28" pos:end="147:29"><expr pos:start="147:28" pos:end="147:29"><name pos:start="147:28" pos:end="147:29">U1</name></expr></argument>,<argument pos:start="147:31" pos:end="147:32"><expr pos:start="147:31" pos:end="147:32"><name pos:start="147:31" pos:end="147:32">V1</name></expr></argument>,<argument pos:start="147:34" pos:end="147:36"><expr pos:start="147:34" pos:end="147:36"><operator pos:start="147:34" pos:end="147:34">&amp;</operator><name pos:start="147:35" pos:end="147:36">R1</name></expr></argument>,<argument pos:start="147:38" pos:end="147:40"><expr pos:start="147:38" pos:end="147:40"><operator pos:start="147:38" pos:end="147:38">&amp;</operator><name pos:start="147:39" pos:end="147:40">G1</name></expr></argument>,<argument pos:start="147:42" pos:end="147:44"><expr pos:start="147:42" pos:end="147:44"><operator pos:start="147:42" pos:end="147:42">&amp;</operator><name pos:start="147:43" pos:end="147:44">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="151:33"><expr pos:start="151:9" pos:end="151:32"><name pos:start="151:9" pos:end="151:9">R</name>  <operator pos:start="151:12" pos:end="151:12">=</operator> <call pos:start="151:14" pos:end="151:32"><name pos:start="151:14" pos:end="151:24">vec_packclp</name> <argument_list pos:start="151:26" pos:end="151:32">(<argument pos:start="151:27" pos:end="151:28"><expr pos:start="151:27" pos:end="151:28"><name pos:start="151:27" pos:end="151:28">R0</name></expr></argument>,<argument pos:start="151:30" pos:end="151:31"><expr pos:start="151:30" pos:end="151:31"><name pos:start="151:30" pos:end="151:31">R1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:33"><expr pos:start="153:9" pos:end="153:32"><name pos:start="153:9" pos:end="153:9">G</name>  <operator pos:start="153:12" pos:end="153:12">=</operator> <call pos:start="153:14" pos:end="153:32"><name pos:start="153:14" pos:end="153:24">vec_packclp</name> <argument_list pos:start="153:26" pos:end="153:32">(<argument pos:start="153:27" pos:end="153:28"><expr pos:start="153:27" pos:end="153:28"><name pos:start="153:27" pos:end="153:28">G0</name></expr></argument>,<argument pos:start="153:30" pos:end="153:31"><expr pos:start="153:30" pos:end="153:31"><name pos:start="153:30" pos:end="153:31">G1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:33"><expr pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:9">B</name>  <operator pos:start="155:12" pos:end="155:12">=</operator> <call pos:start="155:14" pos:end="155:32"><name pos:start="155:14" pos:end="155:24">vec_packclp</name> <argument_list pos:start="155:26" pos:end="155:32">(<argument pos:start="155:27" pos:end="155:28"><expr pos:start="155:27" pos:end="155:28"><name pos:start="155:27" pos:end="155:28">B0</name></expr></argument>,<argument pos:start="155:30" pos:end="155:31"><expr pos:start="155:30" pos:end="155:31"><name pos:start="155:30" pos:end="155:31">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <switch pos:start="159:9" pos:end="197:9">switch<condition pos:start="159:15" pos:end="159:28">(<expr pos:start="159:16" pos:end="159:27"><name pos:start="159:16" pos:end="159:27"><name pos:start="159:16" pos:end="159:16">c</name><operator pos:start="159:17" pos:end="159:18">-&gt;</operator><name pos:start="159:19" pos:end="159:27">dstFormat</name></name></expr>)</condition> <block pos:start="159:30" pos:end="197:9">{<block_content pos:start="161:9" pos:end="195:13">

        <case pos:start="161:9" pos:end="161:26">case <expr pos:start="161:14" pos:end="161:25"><name pos:start="161:14" pos:end="161:25">PIX_FMT_ABGR</name></expr>:</case>  <expr_stmt pos:start="161:29" pos:end="161:50"><expr pos:start="161:29" pos:end="161:49"><call pos:start="161:29" pos:end="161:49"><name pos:start="161:29" pos:end="161:36">out_abgr</name>  <argument_list pos:start="161:39" pos:end="161:49">(<argument pos:start="161:40" pos:end="161:40"><expr pos:start="161:40" pos:end="161:40"><name pos:start="161:40" pos:end="161:40">R</name></expr></argument>,<argument pos:start="161:42" pos:end="161:42"><expr pos:start="161:42" pos:end="161:42"><name pos:start="161:42" pos:end="161:42">G</name></expr></argument>,<argument pos:start="161:44" pos:end="161:44"><expr pos:start="161:44" pos:end="161:44"><name pos:start="161:44" pos:end="161:44">B</name></expr></argument>,<argument pos:start="161:46" pos:end="161:48"><expr pos:start="161:46" pos:end="161:48"><name pos:start="161:46" pos:end="161:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="161:52" pos:end="161:57">break;</break>

        <case pos:start="163:9" pos:end="163:26">case <expr pos:start="163:14" pos:end="163:25"><name pos:start="163:14" pos:end="163:25">PIX_FMT_BGRA</name></expr>:</case>  <expr_stmt pos:start="163:29" pos:end="163:50"><expr pos:start="163:29" pos:end="163:49"><call pos:start="163:29" pos:end="163:49"><name pos:start="163:29" pos:end="163:36">out_bgra</name>  <argument_list pos:start="163:39" pos:end="163:49">(<argument pos:start="163:40" pos:end="163:40"><expr pos:start="163:40" pos:end="163:40"><name pos:start="163:40" pos:end="163:40">R</name></expr></argument>,<argument pos:start="163:42" pos:end="163:42"><expr pos:start="163:42" pos:end="163:42"><name pos:start="163:42" pos:end="163:42">G</name></expr></argument>,<argument pos:start="163:44" pos:end="163:44"><expr pos:start="163:44" pos:end="163:44"><name pos:start="163:44" pos:end="163:44">B</name></expr></argument>,<argument pos:start="163:46" pos:end="163:48"><expr pos:start="163:46" pos:end="163:48"><name pos:start="163:46" pos:end="163:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="163:52" pos:end="163:57">break;</break>

        <case pos:start="165:9" pos:end="165:26">case <expr pos:start="165:14" pos:end="165:25"><name pos:start="165:14" pos:end="165:25">PIX_FMT_RGBA</name></expr>:</case>  <expr_stmt pos:start="165:29" pos:end="165:50"><expr pos:start="165:29" pos:end="165:49"><call pos:start="165:29" pos:end="165:49"><name pos:start="165:29" pos:end="165:36">out_rgba</name>  <argument_list pos:start="165:39" pos:end="165:49">(<argument pos:start="165:40" pos:end="165:40"><expr pos:start="165:40" pos:end="165:40"><name pos:start="165:40" pos:end="165:40">R</name></expr></argument>,<argument pos:start="165:42" pos:end="165:42"><expr pos:start="165:42" pos:end="165:42"><name pos:start="165:42" pos:end="165:42">G</name></expr></argument>,<argument pos:start="165:44" pos:end="165:44"><expr pos:start="165:44" pos:end="165:44"><name pos:start="165:44" pos:end="165:44">B</name></expr></argument>,<argument pos:start="165:46" pos:end="165:48"><expr pos:start="165:46" pos:end="165:48"><name pos:start="165:46" pos:end="165:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="165:52" pos:end="165:57">break;</break>

        <case pos:start="167:9" pos:end="167:26">case <expr pos:start="167:14" pos:end="167:25"><name pos:start="167:14" pos:end="167:25">PIX_FMT_ARGB</name></expr>:</case>  <expr_stmt pos:start="167:29" pos:end="167:50"><expr pos:start="167:29" pos:end="167:49"><call pos:start="167:29" pos:end="167:49"><name pos:start="167:29" pos:end="167:36">out_argb</name>  <argument_list pos:start="167:39" pos:end="167:49">(<argument pos:start="167:40" pos:end="167:40"><expr pos:start="167:40" pos:end="167:40"><name pos:start="167:40" pos:end="167:40">R</name></expr></argument>,<argument pos:start="167:42" pos:end="167:42"><expr pos:start="167:42" pos:end="167:42"><name pos:start="167:42" pos:end="167:42">G</name></expr></argument>,<argument pos:start="167:44" pos:end="167:44"><expr pos:start="167:44" pos:end="167:44"><name pos:start="167:44" pos:end="167:44">B</name></expr></argument>,<argument pos:start="167:46" pos:end="167:48"><expr pos:start="167:46" pos:end="167:48"><name pos:start="167:46" pos:end="167:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="167:52" pos:end="167:57">break;</break>

        <case pos:start="169:9" pos:end="169:27">case <expr pos:start="169:14" pos:end="169:26"><name pos:start="169:14" pos:end="169:26">PIX_FMT_RGB24</name></expr>:</case> <expr_stmt pos:start="169:29" pos:end="169:50"><expr pos:start="169:29" pos:end="169:49"><call pos:start="169:29" pos:end="169:49"><name pos:start="169:29" pos:end="169:37">out_rgb24</name> <argument_list pos:start="169:39" pos:end="169:49">(<argument pos:start="169:40" pos:end="169:40"><expr pos:start="169:40" pos:end="169:40"><name pos:start="169:40" pos:end="169:40">R</name></expr></argument>,<argument pos:start="169:42" pos:end="169:42"><expr pos:start="169:42" pos:end="169:42"><name pos:start="169:42" pos:end="169:42">G</name></expr></argument>,<argument pos:start="169:44" pos:end="169:44"><expr pos:start="169:44" pos:end="169:44"><name pos:start="169:44" pos:end="169:44">B</name></expr></argument>,<argument pos:start="169:46" pos:end="169:48"><expr pos:start="169:46" pos:end="169:48"><name pos:start="169:46" pos:end="169:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="169:52" pos:end="169:57">break;</break>

        <case pos:start="171:9" pos:end="171:27">case <expr pos:start="171:14" pos:end="171:26"><name pos:start="171:14" pos:end="171:26">PIX_FMT_BGR24</name></expr>:</case> <expr_stmt pos:start="171:29" pos:end="171:50"><expr pos:start="171:29" pos:end="171:49"><call pos:start="171:29" pos:end="171:49"><name pos:start="171:29" pos:end="171:37">out_bgr24</name> <argument_list pos:start="171:39" pos:end="171:49">(<argument pos:start="171:40" pos:end="171:40"><expr pos:start="171:40" pos:end="171:40"><name pos:start="171:40" pos:end="171:40">R</name></expr></argument>,<argument pos:start="171:42" pos:end="171:42"><expr pos:start="171:42" pos:end="171:42"><name pos:start="171:42" pos:end="171:42">G</name></expr></argument>,<argument pos:start="171:44" pos:end="171:44"><expr pos:start="171:44" pos:end="171:44"><name pos:start="171:44" pos:end="171:44">B</name></expr></argument>,<argument pos:start="171:46" pos:end="171:48"><expr pos:start="171:46" pos:end="171:48"><name pos:start="171:46" pos:end="171:48">out</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="171:52" pos:end="171:57">break;</break>

        <default pos:start="173:9" pos:end="173:16">default:</default>

            <block pos:start="175:13" pos:end="195:13">{<block_content pos:start="181:17" pos:end="193:23">

                <comment type="block" pos:start="177:17" pos:end="179:30">/* If this is reached, the caller should have called yuv2packedXinC

                   instead. */</comment>

                <decl_stmt pos:start="181:17" pos:end="181:49"><decl pos:start="181:17" pos:end="181:48"><type pos:start="181:17" pos:end="181:26"><specifier pos:start="181:17" pos:end="181:22">static</specifier> <name pos:start="181:24" pos:end="181:26">int</name></type> <name pos:start="181:28" pos:end="181:48">printed_error_message</name></decl>;</decl_stmt>

                <if_stmt pos:start="183:17" pos:end="191:17"><if pos:start="183:17" pos:end="191:17">if <condition pos:start="183:20" pos:end="183:43">(<expr pos:start="183:21" pos:end="183:42"><operator pos:start="183:21" pos:end="183:21">!</operator><name pos:start="183:22" pos:end="183:42">printed_error_message</name></expr>)</condition> <block pos:start="183:45" pos:end="191:17">{<block_content pos:start="185:21" pos:end="189:44">

                    <expr_stmt pos:start="185:21" pos:end="187:58"><expr pos:start="185:21" pos:end="187:57"><call pos:start="185:21" pos:end="187:57"><name pos:start="185:21" pos:end="185:26">av_log</name><argument_list pos:start="185:27" pos:end="187:57">(<argument pos:start="185:28" pos:end="185:28"><expr pos:start="185:28" pos:end="185:28"><name pos:start="185:28" pos:end="185:28">c</name></expr></argument>, <argument pos:start="185:31" pos:end="185:42"><expr pos:start="185:31" pos:end="185:42"><name pos:start="185:31" pos:end="185:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="185:45" pos:end="185:93"><expr pos:start="185:45" pos:end="185:93"><literal type="string" pos:start="185:45" pos:end="185:93">"altivec_yuv2packedX doesn't support %s output\n"</literal></expr></argument>,

                           <argument pos:start="187:28" pos:end="187:56"><expr pos:start="187:28" pos:end="187:56"><call pos:start="187:28" pos:end="187:56"><name pos:start="187:28" pos:end="187:42">sws_format_name</name><argument_list pos:start="187:43" pos:end="187:56">(<argument pos:start="187:44" pos:end="187:55"><expr pos:start="187:44" pos:end="187:55"><name pos:start="187:44" pos:end="187:55"><name pos:start="187:44" pos:end="187:44">c</name><operator pos:start="187:45" pos:end="187:46">-&gt;</operator><name pos:start="187:47" pos:end="187:55">dstFormat</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:44"><expr pos:start="189:21" pos:end="189:43"><name pos:start="189:21" pos:end="189:41">printed_error_message</name><operator pos:start="189:42" pos:end="189:42">=</operator><literal type="number" pos:start="189:43" pos:end="189:43">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <return pos:start="193:17" pos:end="193:23">return;</return>

            </block_content>}</block>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="203:5" pos:end="347:5"><if pos:start="203:5" pos:end="347:5">if <condition pos:start="203:8" pos:end="203:17">(<expr pos:start="203:9" pos:end="203:16"><name pos:start="203:9" pos:end="203:9">i</name> <operator pos:start="203:11" pos:end="203:11">&lt;</operator> <name pos:start="203:13" pos:end="203:16">dstW</name></expr>)</condition> <block pos:start="203:19" pos:end="347:5">{<block_content pos:start="205:9" pos:end="345:60">

        <expr_stmt pos:start="205:9" pos:end="205:16"><expr pos:start="205:9" pos:end="205:15"><name pos:start="205:9" pos:end="205:9">i</name> <operator pos:start="205:11" pos:end="205:12">-=</operator> <literal type="number" pos:start="205:14" pos:end="205:15">16</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="209:9" pos:end="209:17"><expr pos:start="209:9" pos:end="209:16"><name pos:start="209:9" pos:end="209:10">Y0</name> <operator pos:start="209:12" pos:end="209:12">=</operator> <name pos:start="209:14" pos:end="209:16">RND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="211:9" pos:end="211:17"><expr pos:start="211:9" pos:end="211:16"><name pos:start="211:9" pos:end="211:10">Y1</name> <operator pos:start="211:12" pos:end="211:12">=</operator> <name pos:start="211:14" pos:end="211:16">RND</name></expr>;</expr_stmt>

        <comment type="block" pos:start="213:9" pos:end="213:43">/* extract 16 coeffs from lumSrc */</comment>

        <for pos:start="215:9" pos:end="225:9">for <control pos:start="215:13" pos:end="215:39">(<init pos:start="215:14" pos:end="215:17"><expr pos:start="215:14" pos:end="215:16"><name pos:start="215:14" pos:end="215:14">j</name><operator pos:start="215:15" pos:end="215:15">=</operator><literal type="number" pos:start="215:16" pos:end="215:16">0</literal></expr>;</init> <condition pos:start="215:19" pos:end="215:34"><expr pos:start="215:19" pos:end="215:33"><name pos:start="215:19" pos:end="215:19">j</name><operator pos:start="215:20" pos:end="215:20">&lt;</operator><name pos:start="215:21" pos:end="215:33">lumFilterSize</name></expr>;</condition> <incr pos:start="215:36" pos:end="215:38"><expr pos:start="215:36" pos:end="215:38"><name pos:start="215:36" pos:end="215:36">j</name><operator pos:start="215:37" pos:end="215:38">++</operator></expr></incr>)</control> <block pos:start="215:41" pos:end="225:9">{<block_content pos:start="217:13" pos:end="223:49">

            <expr_stmt pos:start="217:13" pos:end="217:44"><expr pos:start="217:13" pos:end="217:43"><name pos:start="217:13" pos:end="217:14">X0</name> <operator pos:start="217:16" pos:end="217:16">=</operator> <call pos:start="217:18" pos:end="217:43"><name pos:start="217:18" pos:end="217:23">vec_ld</name> <argument_list pos:start="217:25" pos:end="217:43">(<argument pos:start="217:26" pos:end="217:26"><expr pos:start="217:26" pos:end="217:26"><literal type="number" pos:start="217:26" pos:end="217:26">0</literal></expr></argument>,  <argument pos:start="217:30" pos:end="217:42"><expr pos:start="217:30" pos:end="217:42"><operator pos:start="217:30" pos:end="217:30">&amp;</operator><name pos:start="217:31" pos:end="217:42"><name pos:start="217:31" pos:end="217:36">lumSrc</name><index pos:start="217:37" pos:end="217:39">[<expr pos:start="217:38" pos:end="217:38"><name pos:start="217:38" pos:end="217:38">j</name></expr>]</index><index pos:start="217:40" pos:end="217:42">[<expr pos:start="217:41" pos:end="217:41"><name pos:start="217:41" pos:end="217:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="219:13" pos:end="219:44"><expr pos:start="219:13" pos:end="219:43"><name pos:start="219:13" pos:end="219:14">X1</name> <operator pos:start="219:16" pos:end="219:16">=</operator> <call pos:start="219:18" pos:end="219:43"><name pos:start="219:18" pos:end="219:23">vec_ld</name> <argument_list pos:start="219:25" pos:end="219:43">(<argument pos:start="219:26" pos:end="219:27"><expr pos:start="219:26" pos:end="219:27"><literal type="number" pos:start="219:26" pos:end="219:27">16</literal></expr></argument>, <argument pos:start="219:30" pos:end="219:42"><expr pos:start="219:30" pos:end="219:42"><operator pos:start="219:30" pos:end="219:30">&amp;</operator><name pos:start="219:31" pos:end="219:42"><name pos:start="219:31" pos:end="219:36">lumSrc</name><index pos:start="219:37" pos:end="219:39">[<expr pos:start="219:38" pos:end="219:38"><name pos:start="219:38" pos:end="219:38">j</name></expr>]</index><index pos:start="219:40" pos:end="219:42">[<expr pos:start="219:41" pos:end="219:41"><name pos:start="219:41" pos:end="219:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:49"><expr pos:start="221:13" pos:end="221:48"><name pos:start="221:13" pos:end="221:14">Y0</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <call pos:start="221:18" pos:end="221:48"><name pos:start="221:18" pos:end="221:27">vec_mradds</name> <argument_list pos:start="221:29" pos:end="221:48">(<argument pos:start="221:30" pos:end="221:31"><expr pos:start="221:30" pos:end="221:31"><name pos:start="221:30" pos:end="221:31">X0</name></expr></argument>, <argument pos:start="221:34" pos:end="221:43"><expr pos:start="221:34" pos:end="221:43"><name pos:start="221:34" pos:end="221:43"><name pos:start="221:34" pos:end="221:40">YCoeffs</name><index pos:start="221:41" pos:end="221:43">[<expr pos:start="221:42" pos:end="221:42"><name pos:start="221:42" pos:end="221:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="221:46" pos:end="221:47"><expr pos:start="221:46" pos:end="221:47"><name pos:start="221:46" pos:end="221:47">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:49"><expr pos:start="223:13" pos:end="223:48"><name pos:start="223:13" pos:end="223:14">Y1</name> <operator pos:start="223:16" pos:end="223:16">=</operator> <call pos:start="223:18" pos:end="223:48"><name pos:start="223:18" pos:end="223:27">vec_mradds</name> <argument_list pos:start="223:29" pos:end="223:48">(<argument pos:start="223:30" pos:end="223:31"><expr pos:start="223:30" pos:end="223:31"><name pos:start="223:30" pos:end="223:31">X1</name></expr></argument>, <argument pos:start="223:34" pos:end="223:43"><expr pos:start="223:34" pos:end="223:43"><name pos:start="223:34" pos:end="223:43"><name pos:start="223:34" pos:end="223:40">YCoeffs</name><index pos:start="223:41" pos:end="223:43">[<expr pos:start="223:42" pos:end="223:42"><name pos:start="223:42" pos:end="223:42">j</name></expr>]</index></name></expr></argument>, <argument pos:start="223:46" pos:end="223:47"><expr pos:start="223:46" pos:end="223:47"><name pos:start="223:46" pos:end="223:47">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="229:9" pos:end="229:16"><expr pos:start="229:9" pos:end="229:15"><name pos:start="229:9" pos:end="229:9">U</name> <operator pos:start="229:11" pos:end="229:11">=</operator> <name pos:start="229:13" pos:end="229:15">RND</name></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:16"><expr pos:start="231:9" pos:end="231:15"><name pos:start="231:9" pos:end="231:9">V</name> <operator pos:start="231:11" pos:end="231:11">=</operator> <name pos:start="231:13" pos:end="231:15">RND</name></expr>;</expr_stmt>

        <comment type="block" pos:start="233:9" pos:end="233:39">/* extract 8 coeffs from U,V */</comment>

        <for pos:start="235:9" pos:end="245:9">for <control pos:start="235:13" pos:end="235:39">(<init pos:start="235:14" pos:end="235:17"><expr pos:start="235:14" pos:end="235:16"><name pos:start="235:14" pos:end="235:14">j</name><operator pos:start="235:15" pos:end="235:15">=</operator><literal type="number" pos:start="235:16" pos:end="235:16">0</literal></expr>;</init> <condition pos:start="235:19" pos:end="235:34"><expr pos:start="235:19" pos:end="235:33"><name pos:start="235:19" pos:end="235:19">j</name><operator pos:start="235:20" pos:end="235:20">&lt;</operator><name pos:start="235:21" pos:end="235:33">chrFilterSize</name></expr>;</condition> <incr pos:start="235:36" pos:end="235:38"><expr pos:start="235:36" pos:end="235:38"><name pos:start="235:36" pos:end="235:36">j</name><operator pos:start="235:37" pos:end="235:38">++</operator></expr></incr>)</control> <block pos:start="235:41" pos:end="245:9">{<block_content pos:start="237:13" pos:end="243:47">

            <expr_stmt pos:start="237:13" pos:end="237:46"><expr pos:start="237:13" pos:end="237:45"><name pos:start="237:13" pos:end="237:13">X</name>  <operator pos:start="237:16" pos:end="237:16">=</operator> <call pos:start="237:18" pos:end="237:45"><name pos:start="237:18" pos:end="237:23">vec_ld</name> <argument_list pos:start="237:25" pos:end="237:45">(<argument pos:start="237:26" pos:end="237:26"><expr pos:start="237:26" pos:end="237:26"><literal type="number" pos:start="237:26" pos:end="237:26">0</literal></expr></argument>, <argument pos:start="237:29" pos:end="237:44"><expr pos:start="237:29" pos:end="237:44"><operator pos:start="237:29" pos:end="237:29">&amp;</operator><name pos:start="237:30" pos:end="237:44"><name pos:start="237:30" pos:end="237:36">chrUSrc</name><index pos:start="237:37" pos:end="237:39">[<expr pos:start="237:38" pos:end="237:38"><name pos:start="237:38" pos:end="237:38">j</name></expr>]</index><index pos:start="237:40" pos:end="237:44">[<expr pos:start="237:41" pos:end="237:43"><name pos:start="237:41" pos:end="237:41">i</name><operator pos:start="237:42" pos:end="237:42">/</operator><literal type="number" pos:start="237:43" pos:end="237:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:47"><expr pos:start="239:13" pos:end="239:46"><name pos:start="239:13" pos:end="239:13">U</name>  <operator pos:start="239:16" pos:end="239:16">=</operator> <call pos:start="239:18" pos:end="239:46"><name pos:start="239:18" pos:end="239:27">vec_mradds</name> <argument_list pos:start="239:29" pos:end="239:46">(<argument pos:start="239:30" pos:end="239:30"><expr pos:start="239:30" pos:end="239:30"><name pos:start="239:30" pos:end="239:30">X</name></expr></argument>, <argument pos:start="239:33" pos:end="239:42"><expr pos:start="239:33" pos:end="239:42"><name pos:start="239:33" pos:end="239:42"><name pos:start="239:33" pos:end="239:39">CCoeffs</name><index pos:start="239:40" pos:end="239:42">[<expr pos:start="239:41" pos:end="239:41"><name pos:start="239:41" pos:end="239:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="239:45" pos:end="239:45"><expr pos:start="239:45" pos:end="239:45"><name pos:start="239:45" pos:end="239:45">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:46"><expr pos:start="241:13" pos:end="241:45"><name pos:start="241:13" pos:end="241:13">X</name>  <operator pos:start="241:16" pos:end="241:16">=</operator> <call pos:start="241:18" pos:end="241:45"><name pos:start="241:18" pos:end="241:23">vec_ld</name> <argument_list pos:start="241:25" pos:end="241:45">(<argument pos:start="241:26" pos:end="241:26"><expr pos:start="241:26" pos:end="241:26"><literal type="number" pos:start="241:26" pos:end="241:26">0</literal></expr></argument>, <argument pos:start="241:29" pos:end="241:44"><expr pos:start="241:29" pos:end="241:44"><operator pos:start="241:29" pos:end="241:29">&amp;</operator><name pos:start="241:30" pos:end="241:44"><name pos:start="241:30" pos:end="241:36">chrVSrc</name><index pos:start="241:37" pos:end="241:39">[<expr pos:start="241:38" pos:end="241:38"><name pos:start="241:38" pos:end="241:38">j</name></expr>]</index><index pos:start="241:40" pos:end="241:44">[<expr pos:start="241:41" pos:end="241:43"><name pos:start="241:41" pos:end="241:41">i</name><operator pos:start="241:42" pos:end="241:42">/</operator><literal type="number" pos:start="241:43" pos:end="241:43">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:47"><expr pos:start="243:13" pos:end="243:46"><name pos:start="243:13" pos:end="243:13">V</name>  <operator pos:start="243:16" pos:end="243:16">=</operator> <call pos:start="243:18" pos:end="243:46"><name pos:start="243:18" pos:end="243:27">vec_mradds</name> <argument_list pos:start="243:29" pos:end="243:46">(<argument pos:start="243:30" pos:end="243:30"><expr pos:start="243:30" pos:end="243:30"><name pos:start="243:30" pos:end="243:30">X</name></expr></argument>, <argument pos:start="243:33" pos:end="243:42"><expr pos:start="243:33" pos:end="243:42"><name pos:start="243:33" pos:end="243:42"><name pos:start="243:33" pos:end="243:39">CCoeffs</name><index pos:start="243:40" pos:end="243:42">[<expr pos:start="243:41" pos:end="243:41"><name pos:start="243:41" pos:end="243:41">j</name></expr>]</index></name></expr></argument>, <argument pos:start="243:45" pos:end="243:45"><expr pos:start="243:45" pos:end="243:45"><name pos:start="243:45" pos:end="243:45">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="249:9" pos:end="249:36">/* scale and clip signals */</comment>

        <expr_stmt pos:start="251:9" pos:end="251:31"><expr pos:start="251:9" pos:end="251:30"><name pos:start="251:9" pos:end="251:10">Y0</name> <operator pos:start="251:12" pos:end="251:12">=</operator> <call pos:start="251:14" pos:end="251:30"><name pos:start="251:14" pos:end="251:20">vec_sra</name> <argument_list pos:start="251:22" pos:end="251:30">(<argument pos:start="251:23" pos:end="251:24"><expr pos:start="251:23" pos:end="251:24"><name pos:start="251:23" pos:end="251:24">Y0</name></expr></argument>, <argument pos:start="251:27" pos:end="251:29"><expr pos:start="251:27" pos:end="251:29"><name pos:start="251:27" pos:end="251:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:31"><expr pos:start="253:9" pos:end="253:30"><name pos:start="253:9" pos:end="253:10">Y1</name> <operator pos:start="253:12" pos:end="253:12">=</operator> <call pos:start="253:14" pos:end="253:30"><name pos:start="253:14" pos:end="253:20">vec_sra</name> <argument_list pos:start="253:22" pos:end="253:30">(<argument pos:start="253:23" pos:end="253:24"><expr pos:start="253:23" pos:end="253:24"><name pos:start="253:23" pos:end="253:24">Y1</name></expr></argument>, <argument pos:start="253:27" pos:end="253:29"><expr pos:start="253:27" pos:end="253:29"><name pos:start="253:27" pos:end="253:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:31"><expr pos:start="255:9" pos:end="255:30"><name pos:start="255:9" pos:end="255:9">U</name>  <operator pos:start="255:12" pos:end="255:12">=</operator> <call pos:start="255:14" pos:end="255:30"><name pos:start="255:14" pos:end="255:20">vec_sra</name> <argument_list pos:start="255:22" pos:end="255:30">(<argument pos:start="255:23" pos:end="255:23"><expr pos:start="255:23" pos:end="255:23"><name pos:start="255:23" pos:end="255:23">U</name></expr></argument>,  <argument pos:start="255:27" pos:end="255:29"><expr pos:start="255:27" pos:end="255:29"><name pos:start="255:27" pos:end="255:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:31"><expr pos:start="257:9" pos:end="257:30"><name pos:start="257:9" pos:end="257:9">V</name>  <operator pos:start="257:12" pos:end="257:12">=</operator> <call pos:start="257:14" pos:end="257:30"><name pos:start="257:14" pos:end="257:20">vec_sra</name> <argument_list pos:start="257:22" pos:end="257:30">(<argument pos:start="257:23" pos:end="257:23"><expr pos:start="257:23" pos:end="257:23"><name pos:start="257:23" pos:end="257:23">V</name></expr></argument>,  <argument pos:start="257:27" pos:end="257:29"><expr pos:start="257:27" pos:end="257:29"><name pos:start="257:27" pos:end="257:29">SCL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="261:9" pos:end="261:31"><expr pos:start="261:9" pos:end="261:30"><name pos:start="261:9" pos:end="261:10">Y0</name> <operator pos:start="261:12" pos:end="261:12">=</operator> <call pos:start="261:14" pos:end="261:30"><name pos:start="261:14" pos:end="261:25">vec_clip_s16</name> <argument_list pos:start="261:27" pos:end="261:30">(<argument pos:start="261:28" pos:end="261:29"><expr pos:start="261:28" pos:end="261:29"><name pos:start="261:28" pos:end="261:29">Y0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="263:9" pos:end="263:31"><expr pos:start="263:9" pos:end="263:30"><name pos:start="263:9" pos:end="263:10">Y1</name> <operator pos:start="263:12" pos:end="263:12">=</operator> <call pos:start="263:14" pos:end="263:30"><name pos:start="263:14" pos:end="263:25">vec_clip_s16</name> <argument_list pos:start="263:27" pos:end="263:30">(<argument pos:start="263:28" pos:end="263:29"><expr pos:start="263:28" pos:end="263:29"><name pos:start="263:28" pos:end="263:29">Y1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="265:9" pos:end="265:30"><expr pos:start="265:9" pos:end="265:29"><name pos:start="265:9" pos:end="265:9">U</name>  <operator pos:start="265:12" pos:end="265:12">=</operator> <call pos:start="265:14" pos:end="265:29"><name pos:start="265:14" pos:end="265:25">vec_clip_s16</name> <argument_list pos:start="265:27" pos:end="265:29">(<argument pos:start="265:28" pos:end="265:28"><expr pos:start="265:28" pos:end="265:28"><name pos:start="265:28" pos:end="265:28">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:30"><expr pos:start="267:9" pos:end="267:29"><name pos:start="267:9" pos:end="267:9">V</name>  <operator pos:start="267:12" pos:end="267:12">=</operator> <call pos:start="267:14" pos:end="267:29"><name pos:start="267:14" pos:end="267:25">vec_clip_s16</name> <argument_list pos:start="267:27" pos:end="267:29">(<argument pos:start="267:28" pos:end="267:28"><expr pos:start="267:28" pos:end="267:28"><name pos:start="267:28" pos:end="267:28">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="271:9" pos:end="285:10">/* now we have

           Y0= y0 y1 y2 y3 y4 y5 y6 y7     Y1= y8 y9 y10 y11 y12 y13 y14 y15

           U = u0 u1 u2 u3 u4 u5 u6 u7     V = v0 v1 v2 v3 v4 v5 v6 v7



           Y0= y0 y1 y2 y3 y4 y5 y6 y7    Y1= y8 y9 y10 y11 y12 y13 y14 y15

           U0= u0 u0 u1 u1 u2 u2 u3 u3    U1= u4 u4 u5 u5 u6 u6 u7 u7

           V0= v0 v0 v1 v1 v2 v2 v3 v3    V1= v4 v4 v5 v5 v6 v6 v7 v7

        */</comment>



        <expr_stmt pos:start="289:9" pos:end="289:30"><expr pos:start="289:9" pos:end="289:29"><name pos:start="289:9" pos:end="289:10">U0</name> <operator pos:start="289:12" pos:end="289:12">=</operator> <call pos:start="289:14" pos:end="289:29"><name pos:start="289:14" pos:end="289:23">vec_mergeh</name> <argument_list pos:start="289:25" pos:end="289:29">(<argument pos:start="289:26" pos:end="289:26"><expr pos:start="289:26" pos:end="289:26"><name pos:start="289:26" pos:end="289:26">U</name></expr></argument>,<argument pos:start="289:28" pos:end="289:28"><expr pos:start="289:28" pos:end="289:28"><name pos:start="289:28" pos:end="289:28">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:30"><expr pos:start="291:9" pos:end="291:29"><name pos:start="291:9" pos:end="291:10">V0</name> <operator pos:start="291:12" pos:end="291:12">=</operator> <call pos:start="291:14" pos:end="291:29"><name pos:start="291:14" pos:end="291:23">vec_mergeh</name> <argument_list pos:start="291:25" pos:end="291:29">(<argument pos:start="291:26" pos:end="291:26"><expr pos:start="291:26" pos:end="291:26"><name pos:start="291:26" pos:end="291:26">V</name></expr></argument>,<argument pos:start="291:28" pos:end="291:28"><expr pos:start="291:28" pos:end="291:28"><name pos:start="291:28" pos:end="291:28">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:30"><expr pos:start="295:9" pos:end="295:29"><name pos:start="295:9" pos:end="295:10">U1</name> <operator pos:start="295:12" pos:end="295:12">=</operator> <call pos:start="295:14" pos:end="295:29"><name pos:start="295:14" pos:end="295:23">vec_mergel</name> <argument_list pos:start="295:25" pos:end="295:29">(<argument pos:start="295:26" pos:end="295:26"><expr pos:start="295:26" pos:end="295:26"><name pos:start="295:26" pos:end="295:26">U</name></expr></argument>,<argument pos:start="295:28" pos:end="295:28"><expr pos:start="295:28" pos:end="295:28"><name pos:start="295:28" pos:end="295:28">U</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:30"><expr pos:start="297:9" pos:end="297:29"><name pos:start="297:9" pos:end="297:10">V1</name> <operator pos:start="297:12" pos:end="297:12">=</operator> <call pos:start="297:14" pos:end="297:29"><name pos:start="297:14" pos:end="297:23">vec_mergel</name> <argument_list pos:start="297:25" pos:end="297:29">(<argument pos:start="297:26" pos:end="297:26"><expr pos:start="297:26" pos:end="297:26"><name pos:start="297:26" pos:end="297:26">V</name></expr></argument>,<argument pos:start="297:28" pos:end="297:28"><expr pos:start="297:28" pos:end="297:28"><name pos:start="297:28" pos:end="297:28">V</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="301:9" pos:end="301:46"><expr pos:start="301:9" pos:end="301:45"><call pos:start="301:9" pos:end="301:45"><name pos:start="301:9" pos:end="301:19">cvtyuvtoRGB</name> <argument_list pos:start="301:21" pos:end="301:45">(<argument pos:start="301:22" pos:end="301:22"><expr pos:start="301:22" pos:end="301:22"><name pos:start="301:22" pos:end="301:22">c</name></expr></argument>, <argument pos:start="301:25" pos:end="301:26"><expr pos:start="301:25" pos:end="301:26"><name pos:start="301:25" pos:end="301:26">Y0</name></expr></argument>,<argument pos:start="301:28" pos:end="301:29"><expr pos:start="301:28" pos:end="301:29"><name pos:start="301:28" pos:end="301:29">U0</name></expr></argument>,<argument pos:start="301:31" pos:end="301:32"><expr pos:start="301:31" pos:end="301:32"><name pos:start="301:31" pos:end="301:32">V0</name></expr></argument>,<argument pos:start="301:34" pos:end="301:36"><expr pos:start="301:34" pos:end="301:36"><operator pos:start="301:34" pos:end="301:34">&amp;</operator><name pos:start="301:35" pos:end="301:36">R0</name></expr></argument>,<argument pos:start="301:38" pos:end="301:40"><expr pos:start="301:38" pos:end="301:40"><operator pos:start="301:38" pos:end="301:38">&amp;</operator><name pos:start="301:39" pos:end="301:40">G0</name></expr></argument>,<argument pos:start="301:42" pos:end="301:44"><expr pos:start="301:42" pos:end="301:44"><operator pos:start="301:42" pos:end="301:42">&amp;</operator><name pos:start="301:43" pos:end="301:44">B0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="303:9" pos:end="303:46"><expr pos:start="303:9" pos:end="303:45"><call pos:start="303:9" pos:end="303:45"><name pos:start="303:9" pos:end="303:19">cvtyuvtoRGB</name> <argument_list pos:start="303:21" pos:end="303:45">(<argument pos:start="303:22" pos:end="303:22"><expr pos:start="303:22" pos:end="303:22"><name pos:start="303:22" pos:end="303:22">c</name></expr></argument>, <argument pos:start="303:25" pos:end="303:26"><expr pos:start="303:25" pos:end="303:26"><name pos:start="303:25" pos:end="303:26">Y1</name></expr></argument>,<argument pos:start="303:28" pos:end="303:29"><expr pos:start="303:28" pos:end="303:29"><name pos:start="303:28" pos:end="303:29">U1</name></expr></argument>,<argument pos:start="303:31" pos:end="303:32"><expr pos:start="303:31" pos:end="303:32"><name pos:start="303:31" pos:end="303:32">V1</name></expr></argument>,<argument pos:start="303:34" pos:end="303:36"><expr pos:start="303:34" pos:end="303:36"><operator pos:start="303:34" pos:end="303:34">&amp;</operator><name pos:start="303:35" pos:end="303:36">R1</name></expr></argument>,<argument pos:start="303:38" pos:end="303:40"><expr pos:start="303:38" pos:end="303:40"><operator pos:start="303:38" pos:end="303:38">&amp;</operator><name pos:start="303:39" pos:end="303:40">G1</name></expr></argument>,<argument pos:start="303:42" pos:end="303:44"><expr pos:start="303:42" pos:end="303:44"><operator pos:start="303:42" pos:end="303:42">&amp;</operator><name pos:start="303:43" pos:end="303:44">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:33"><expr pos:start="307:9" pos:end="307:32"><name pos:start="307:9" pos:end="307:9">R</name>  <operator pos:start="307:12" pos:end="307:12">=</operator> <call pos:start="307:14" pos:end="307:32"><name pos:start="307:14" pos:end="307:24">vec_packclp</name> <argument_list pos:start="307:26" pos:end="307:32">(<argument pos:start="307:27" pos:end="307:28"><expr pos:start="307:27" pos:end="307:28"><name pos:start="307:27" pos:end="307:28">R0</name></expr></argument>,<argument pos:start="307:30" pos:end="307:31"><expr pos:start="307:30" pos:end="307:31"><name pos:start="307:30" pos:end="307:31">R1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:33"><expr pos:start="309:9" pos:end="309:32"><name pos:start="309:9" pos:end="309:9">G</name>  <operator pos:start="309:12" pos:end="309:12">=</operator> <call pos:start="309:14" pos:end="309:32"><name pos:start="309:14" pos:end="309:24">vec_packclp</name> <argument_list pos:start="309:26" pos:end="309:32">(<argument pos:start="309:27" pos:end="309:28"><expr pos:start="309:27" pos:end="309:28"><name pos:start="309:27" pos:end="309:28">G0</name></expr></argument>,<argument pos:start="309:30" pos:end="309:31"><expr pos:start="309:30" pos:end="309:31"><name pos:start="309:30" pos:end="309:31">G1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:33"><expr pos:start="311:9" pos:end="311:32"><name pos:start="311:9" pos:end="311:9">B</name>  <operator pos:start="311:12" pos:end="311:12">=</operator> <call pos:start="311:14" pos:end="311:32"><name pos:start="311:14" pos:end="311:24">vec_packclp</name> <argument_list pos:start="311:26" pos:end="311:32">(<argument pos:start="311:27" pos:end="311:28"><expr pos:start="311:27" pos:end="311:28"><name pos:start="311:27" pos:end="311:28">B0</name></expr></argument>,<argument pos:start="311:30" pos:end="311:31"><expr pos:start="311:30" pos:end="311:31"><name pos:start="311:30" pos:end="311:31">B1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="315:9" pos:end="315:47"><expr pos:start="315:9" pos:end="315:46"><name pos:start="315:9" pos:end="315:12">nout</name> <operator pos:start="315:14" pos:end="315:14">=</operator> <operator pos:start="315:16" pos:end="315:16">(</operator><name pos:start="315:17" pos:end="315:22">vector</name> <name pos:start="315:24" pos:end="315:31">unsigned</name> <name pos:start="315:33" pos:end="315:36">char</name> <operator pos:start="315:38" pos:end="315:38">*</operator><operator pos:start="315:39" pos:end="315:39">)</operator><name pos:start="315:40" pos:end="315:46">scratch</name></expr>;</expr_stmt>

        <switch pos:start="317:9" pos:end="341:9">switch<condition pos:start="317:15" pos:end="317:28">(<expr pos:start="317:16" pos:end="317:27"><name pos:start="317:16" pos:end="317:27"><name pos:start="317:16" pos:end="317:16">c</name><operator pos:start="317:17" pos:end="317:18">-&gt;</operator><name pos:start="317:19" pos:end="317:27">dstFormat</name></name></expr>)</condition> <block pos:start="317:30" pos:end="341:9">{<block_content pos:start="319:9" pos:end="339:19">

        <case pos:start="319:9" pos:end="319:26">case <expr pos:start="319:14" pos:end="319:25"><name pos:start="319:14" pos:end="319:25">PIX_FMT_ABGR</name></expr>:</case>  <expr_stmt pos:start="319:29" pos:end="319:51"><expr pos:start="319:29" pos:end="319:50"><call pos:start="319:29" pos:end="319:50"><name pos:start="319:29" pos:end="319:36">out_abgr</name>  <argument_list pos:start="319:39" pos:end="319:50">(<argument pos:start="319:40" pos:end="319:40"><expr pos:start="319:40" pos:end="319:40"><name pos:start="319:40" pos:end="319:40">R</name></expr></argument>,<argument pos:start="319:42" pos:end="319:42"><expr pos:start="319:42" pos:end="319:42"><name pos:start="319:42" pos:end="319:42">G</name></expr></argument>,<argument pos:start="319:44" pos:end="319:44"><expr pos:start="319:44" pos:end="319:44"><name pos:start="319:44" pos:end="319:44">B</name></expr></argument>,<argument pos:start="319:46" pos:end="319:49"><expr pos:start="319:46" pos:end="319:49"><name pos:start="319:46" pos:end="319:49">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="319:53" pos:end="319:58">break;</break>

        <case pos:start="321:9" pos:end="321:26">case <expr pos:start="321:14" pos:end="321:25"><name pos:start="321:14" pos:end="321:25">PIX_FMT_BGRA</name></expr>:</case>  <expr_stmt pos:start="321:29" pos:end="321:51"><expr pos:start="321:29" pos:end="321:50"><call pos:start="321:29" pos:end="321:50"><name pos:start="321:29" pos:end="321:36">out_bgra</name>  <argument_list pos:start="321:39" pos:end="321:50">(<argument pos:start="321:40" pos:end="321:40"><expr pos:start="321:40" pos:end="321:40"><name pos:start="321:40" pos:end="321:40">R</name></expr></argument>,<argument pos:start="321:42" pos:end="321:42"><expr pos:start="321:42" pos:end="321:42"><name pos:start="321:42" pos:end="321:42">G</name></expr></argument>,<argument pos:start="321:44" pos:end="321:44"><expr pos:start="321:44" pos:end="321:44"><name pos:start="321:44" pos:end="321:44">B</name></expr></argument>,<argument pos:start="321:46" pos:end="321:49"><expr pos:start="321:46" pos:end="321:49"><name pos:start="321:46" pos:end="321:49">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="321:53" pos:end="321:58">break;</break>

        <case pos:start="323:9" pos:end="323:26">case <expr pos:start="323:14" pos:end="323:25"><name pos:start="323:14" pos:end="323:25">PIX_FMT_RGBA</name></expr>:</case>  <expr_stmt pos:start="323:29" pos:end="323:51"><expr pos:start="323:29" pos:end="323:50"><call pos:start="323:29" pos:end="323:50"><name pos:start="323:29" pos:end="323:36">out_rgba</name>  <argument_list pos:start="323:39" pos:end="323:50">(<argument pos:start="323:40" pos:end="323:40"><expr pos:start="323:40" pos:end="323:40"><name pos:start="323:40" pos:end="323:40">R</name></expr></argument>,<argument pos:start="323:42" pos:end="323:42"><expr pos:start="323:42" pos:end="323:42"><name pos:start="323:42" pos:end="323:42">G</name></expr></argument>,<argument pos:start="323:44" pos:end="323:44"><expr pos:start="323:44" pos:end="323:44"><name pos:start="323:44" pos:end="323:44">B</name></expr></argument>,<argument pos:start="323:46" pos:end="323:49"><expr pos:start="323:46" pos:end="323:49"><name pos:start="323:46" pos:end="323:49">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="323:53" pos:end="323:58">break;</break>

        <case pos:start="325:9" pos:end="325:26">case <expr pos:start="325:14" pos:end="325:25"><name pos:start="325:14" pos:end="325:25">PIX_FMT_ARGB</name></expr>:</case>  <expr_stmt pos:start="325:29" pos:end="325:51"><expr pos:start="325:29" pos:end="325:50"><call pos:start="325:29" pos:end="325:50"><name pos:start="325:29" pos:end="325:36">out_argb</name>  <argument_list pos:start="325:39" pos:end="325:50">(<argument pos:start="325:40" pos:end="325:40"><expr pos:start="325:40" pos:end="325:40"><name pos:start="325:40" pos:end="325:40">R</name></expr></argument>,<argument pos:start="325:42" pos:end="325:42"><expr pos:start="325:42" pos:end="325:42"><name pos:start="325:42" pos:end="325:42">G</name></expr></argument>,<argument pos:start="325:44" pos:end="325:44"><expr pos:start="325:44" pos:end="325:44"><name pos:start="325:44" pos:end="325:44">B</name></expr></argument>,<argument pos:start="325:46" pos:end="325:49"><expr pos:start="325:46" pos:end="325:49"><name pos:start="325:46" pos:end="325:49">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="325:53" pos:end="325:58">break;</break>

        <case pos:start="327:9" pos:end="327:27">case <expr pos:start="327:14" pos:end="327:26"><name pos:start="327:14" pos:end="327:26">PIX_FMT_RGB24</name></expr>:</case> <expr_stmt pos:start="327:29" pos:end="327:51"><expr pos:start="327:29" pos:end="327:50"><call pos:start="327:29" pos:end="327:50"><name pos:start="327:29" pos:end="327:37">out_rgb24</name> <argument_list pos:start="327:39" pos:end="327:50">(<argument pos:start="327:40" pos:end="327:40"><expr pos:start="327:40" pos:end="327:40"><name pos:start="327:40" pos:end="327:40">R</name></expr></argument>,<argument pos:start="327:42" pos:end="327:42"><expr pos:start="327:42" pos:end="327:42"><name pos:start="327:42" pos:end="327:42">G</name></expr></argument>,<argument pos:start="327:44" pos:end="327:44"><expr pos:start="327:44" pos:end="327:44"><name pos:start="327:44" pos:end="327:44">B</name></expr></argument>,<argument pos:start="327:46" pos:end="327:49"><expr pos:start="327:46" pos:end="327:49"><name pos:start="327:46" pos:end="327:49">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="327:53" pos:end="327:58">break;</break>

        <case pos:start="329:9" pos:end="329:27">case <expr pos:start="329:14" pos:end="329:26"><name pos:start="329:14" pos:end="329:26">PIX_FMT_BGR24</name></expr>:</case> <expr_stmt pos:start="329:29" pos:end="329:51"><expr pos:start="329:29" pos:end="329:50"><call pos:start="329:29" pos:end="329:50"><name pos:start="329:29" pos:end="329:37">out_bgr24</name> <argument_list pos:start="329:39" pos:end="329:50">(<argument pos:start="329:40" pos:end="329:40"><expr pos:start="329:40" pos:end="329:40"><name pos:start="329:40" pos:end="329:40">R</name></expr></argument>,<argument pos:start="329:42" pos:end="329:42"><expr pos:start="329:42" pos:end="329:42"><name pos:start="329:42" pos:end="329:42">G</name></expr></argument>,<argument pos:start="329:44" pos:end="329:44"><expr pos:start="329:44" pos:end="329:44"><name pos:start="329:44" pos:end="329:44">B</name></expr></argument>,<argument pos:start="329:46" pos:end="329:49"><expr pos:start="329:46" pos:end="329:49"><name pos:start="329:46" pos:end="329:49">nout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="329:53" pos:end="329:58">break;</break>

        <default pos:start="331:9" pos:end="331:16">default:</default>

            <comment type="block" pos:start="333:13" pos:end="333:39">/* Unreachable, I think. */</comment>

            <expr_stmt pos:start="335:13" pos:end="337:50"><expr pos:start="335:13" pos:end="337:49"><call pos:start="335:13" pos:end="337:49"><name pos:start="335:13" pos:end="335:18">av_log</name><argument_list pos:start="335:19" pos:end="337:49">(<argument pos:start="335:20" pos:end="335:20"><expr pos:start="335:20" pos:end="335:20"><name pos:start="335:20" pos:end="335:20">c</name></expr></argument>, <argument pos:start="335:23" pos:end="335:34"><expr pos:start="335:23" pos:end="335:34"><name pos:start="335:23" pos:end="335:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="335:37" pos:end="335:85"><expr pos:start="335:37" pos:end="335:85"><literal type="string" pos:start="335:37" pos:end="335:85">"altivec_yuv2packedX doesn't support %s output\n"</literal></expr></argument>,

                   <argument pos:start="337:20" pos:end="337:48"><expr pos:start="337:20" pos:end="337:48"><call pos:start="337:20" pos:end="337:48"><name pos:start="337:20" pos:end="337:34">sws_format_name</name><argument_list pos:start="337:35" pos:end="337:48">(<argument pos:start="337:36" pos:end="337:47"><expr pos:start="337:36" pos:end="337:47"><name pos:start="337:36" pos:end="337:47"><name pos:start="337:36" pos:end="337:36">c</name><operator pos:start="337:37" pos:end="337:38">-&gt;</operator><name pos:start="337:39" pos:end="337:47">dstFormat</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="339:13" pos:end="339:19">return;</return>

        </block_content>}</block></switch>



        <expr_stmt pos:start="345:9" pos:end="345:60"><expr pos:start="345:9" pos:end="345:59"><call pos:start="345:9" pos:end="345:59"><name pos:start="345:9" pos:end="345:14">memcpy</name> <argument_list pos:start="345:16" pos:end="345:59">(<argument pos:start="345:17" pos:end="345:37"><expr pos:start="345:17" pos:end="345:37"><operator pos:start="345:17" pos:end="345:17">&amp;</operator><operator pos:start="345:18" pos:end="345:18">(</operator><operator pos:start="345:19" pos:end="345:19">(</operator><name pos:start="345:20" pos:end="345:27">uint32_t</name><operator pos:start="345:28" pos:end="345:28">*</operator><operator pos:start="345:29" pos:end="345:29">)</operator><name pos:start="345:30" pos:end="345:33">dest</name><operator pos:start="345:34" pos:end="345:34">)</operator><index pos:start="345:35" pos:end="345:37">[<expr pos:start="345:36" pos:end="345:36"><name pos:start="345:36" pos:end="345:36">i</name></expr>]</index></expr></argument>, <argument pos:start="345:40" pos:end="345:46"><expr pos:start="345:40" pos:end="345:46"><name pos:start="345:40" pos:end="345:46">scratch</name></expr></argument>, <argument pos:start="345:49" pos:end="345:58"><expr pos:start="345:49" pos:end="345:58"><operator pos:start="345:49" pos:end="345:49">(</operator><name pos:start="345:50" pos:end="345:53">dstW</name><operator pos:start="345:54" pos:end="345:54">-</operator><name pos:start="345:55" pos:end="345:55">i</name><operator pos:start="345:56" pos:end="345:56">)</operator><operator pos:start="345:57" pos:end="345:57">/</operator><literal type="number" pos:start="345:58" pos:end="345:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



</block_content>}</block>
</unit>
