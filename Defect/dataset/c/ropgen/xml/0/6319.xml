<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6319.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:19">DCT_common_init</name><parameter_list pos:start="1:20" pos:end="1:38">(<parameter pos:start="1:21" pos:end="1:37"><decl pos:start="1:21" pos:end="1:37"><type pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:34">MpegEncContext</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:37">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:54"><expr pos:start="9:5" pos:end="9:53"><name pos:start="9:5" pos:end="9:25">ff_put_pixels_clamped</name> <operator pos:start="9:27" pos:end="9:27">=</operator> <name pos:start="9:29" pos:end="9:53"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:34">dsp</name><operator pos:start="9:35" pos:end="9:35">.</operator><name pos:start="9:36" pos:end="9:53">put_pixels_clamped</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:54"><expr pos:start="11:5" pos:end="11:53"><name pos:start="11:5" pos:end="11:25">ff_add_pixels_clamped</name> <operator pos:start="11:27" pos:end="11:27">=</operator> <name pos:start="11:29" pos:end="11:53"><name pos:start="11:29" pos:end="11:29">s</name><operator pos:start="11:30" pos:end="11:31">-&gt;</operator><name pos:start="11:32" pos:end="11:34">dsp</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:53">add_pixels_clamped</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:51"><expr pos:start="15:5" pos:end="15:50"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:26">dct_unquantize_h263</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:50">dct_unquantize_h263_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:53"><expr pos:start="17:5" pos:end="17:52"><name pos:start="17:5" pos:end="17:27"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:27">dct_unquantize_mpeg1</name></name> <operator pos:start="17:29" pos:end="17:29">=</operator> <name pos:start="17:31" pos:end="17:52">dct_unquantize_mpeg1_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:53"><expr pos:start="19:5" pos:end="19:52"><name pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:27">dct_unquantize_mpeg2</name></name> <operator pos:start="19:29" pos:end="19:29">=</operator> <name pos:start="19:31" pos:end="19:52">dct_unquantize_mpeg2_c</name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:36"><expr pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">dct_quantize</name></name><operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:35">dct_quantize_c</name></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="31:37"><if pos:start="25:5" pos:end="27:29">if<condition pos:start="25:7" pos:end="25:42">(<expr pos:start="25:8" pos:end="25:41"><name pos:start="25:8" pos:end="25:25"><name pos:start="25:8" pos:end="25:8">s</name><operator pos:start="25:9" pos:end="25:10">-&gt;</operator><name pos:start="25:11" pos:end="25:15">avctx</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:25">dct_algo</name></name><operator pos:start="25:26" pos:end="25:27">==</operator><name pos:start="25:28" pos:end="25:41">FF_DCT_FASTINT</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:29"><block_content pos:start="27:9" pos:end="27:29">

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:15">fdct</name></name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:28">fdct_ifast</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="31:37">else<block type="pseudo" pos:start="31:9" pos:end="31:37"><block_content pos:start="31:9" pos:end="31:37">

        <expr_stmt pos:start="31:9" pos:end="31:37"><expr pos:start="31:9" pos:end="31:36"><name pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:9">s</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:15">fdct</name></name> <operator pos:start="31:17" pos:end="31:17">=</operator> <name pos:start="31:19" pos:end="31:36">ff_jpeg_fdct_islow</name></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="31:39" pos:end="31:61">//slow/accurate/default</comment>



    <if_stmt pos:start="35:5" pos:end="56:0"><if pos:start="35:5" pos:end="43:5">if<condition pos:start="35:7" pos:end="35:40">(<expr pos:start="35:8" pos:end="35:39"><name pos:start="35:8" pos:end="35:26"><name pos:start="35:8" pos:end="35:8">s</name><operator pos:start="35:9" pos:end="35:10">-&gt;</operator><name pos:start="35:11" pos:end="35:15">avctx</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:26">idct_algo</name></name><operator pos:start="35:27" pos:end="35:28">==</operator><name pos:start="35:29" pos:end="35:39">FF_IDCT_INT</name></expr>)</condition><block pos:start="35:41" pos:end="43:5">{<block_content pos:start="37:9" pos:end="41:56">

        <expr_stmt pos:start="37:9" pos:end="37:38"><expr pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">idct_put</name></name><operator pos:start="37:20" pos:end="37:20">=</operator> <name pos:start="37:22" pos:end="37:37">ff_jref_idct_put</name></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">idct_add</name></name><operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:37">ff_jref_idct_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:56"><expr pos:start="41:9" pos:end="41:55"><name pos:start="41:9" pos:end="41:32"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:32">idct_permutation_type</name></name><operator pos:start="41:33" pos:end="41:33">=</operator> <name pos:start="41:35" pos:end="41:55">FF_LIBMPEG2_IDCT_PERM</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="43:6" pos:end="56:0">else<block pos:start="43:10" pos:end="56:0">{<block_content pos:start="45:9" pos:end="49:50"> <comment type="line" pos:start="43:12" pos:end="43:29">//accurate/default</comment>

        <expr_stmt pos:start="45:9" pos:end="45:37"><expr pos:start="45:9" pos:end="45:36"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:19">idct_put</name></name><operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:36">simple_idct_put</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:19">idct_add</name></name><operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:36">simple_idct_add</name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:50"><expr pos:start="49:9" pos:end="49:49"><name pos:start="49:9" pos:end="49:32"><name pos:start="49:9" pos:end="49:9">s</name><operator pos:start="49:10" pos:end="49:11">-&gt;</operator><name pos:start="49:12" pos:end="49:32">idct_permutation_type</name></name><operator pos:start="49:33" pos:end="49:33">=</operator> <name pos:start="49:35" pos:end="49:49">FF_NO_IDCT_PERM</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

        

<cpp:ifdef pos:start="55:1" pos:end="55:15">#<cpp:directive pos:start="55:2" pos:end="55:6">ifdef</cpp:directive> <name pos:start="55:8" pos:end="55:15">HAVE_MMX</name></cpp:ifdef>

    <expr_stmt pos:start="57:5" pos:end="62:0"><expr pos:start="57:5" pos:end="57:26"><call pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:23">MPV_common_init_mmx</name><argument_list pos:start="57:24" pos:end="57:26">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><name pos:start="57:25" pos:end="57:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="61:1" pos:end="61:17">#<cpp:directive pos:start="61:2" pos:end="61:6">ifdef</cpp:directive> <name pos:start="61:8" pos:end="61:17">ARCH_ALPHA</name></cpp:ifdef>

    <expr_stmt pos:start="63:5" pos:end="68:0"><expr pos:start="63:5" pos:end="63:26"><call pos:start="63:5" pos:end="63:26"><name pos:start="63:5" pos:end="63:23">MPV_common_init_axp</name><argument_list pos:start="63:24" pos:end="63:26">(<argument pos:start="63:25" pos:end="63:25"><expr pos:start="63:25" pos:end="63:25"><name pos:start="63:25" pos:end="63:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="65:1" pos:end="65:6">#<cpp:directive pos:start="65:2" pos:end="65:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="67:1" pos:end="67:16">#<cpp:directive pos:start="67:2" pos:end="67:6">ifdef</cpp:directive> <name pos:start="67:8" pos:end="67:16">HAVE_MLIB</name></cpp:ifdef>

    <expr_stmt pos:start="69:5" pos:end="74:0"><expr pos:start="69:5" pos:end="69:27"><call pos:start="69:5" pos:end="69:27"><name pos:start="69:5" pos:end="69:24">MPV_common_init_mlib</name><argument_list pos:start="69:25" pos:end="69:27">(<argument pos:start="69:26" pos:end="69:26"><expr pos:start="69:26" pos:end="69:26"><name pos:start="69:26" pos:end="69:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="71:1" pos:end="71:6">#<cpp:directive pos:start="71:2" pos:end="71:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="73:1" pos:end="73:15">#<cpp:directive pos:start="73:2" pos:end="73:6">ifdef</cpp:directive> <name pos:start="73:8" pos:end="73:15">HAVE_MMI</name></cpp:ifdef>

    <expr_stmt pos:start="75:5" pos:end="80:0"><expr pos:start="75:5" pos:end="75:26"><call pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:23">MPV_common_init_mmi</name><argument_list pos:start="75:24" pos:end="75:26">(<argument pos:start="75:25" pos:end="75:25"><expr pos:start="75:25" pos:end="75:25"><name pos:start="75:25" pos:end="75:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="77:1" pos:end="77:6">#<cpp:directive pos:start="77:2" pos:end="77:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="79:1" pos:end="79:18">#<cpp:directive pos:start="79:2" pos:end="79:6">ifdef</cpp:directive> <name pos:start="79:8" pos:end="79:18">ARCH_ARMV4L</name></cpp:ifdef>

    <expr_stmt pos:start="81:5" pos:end="86:0"><expr pos:start="81:5" pos:end="81:28"><call pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:26">MPV_common_init_armv4l</name><argument_list pos:start="81:27" pos:end="81:28">()</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

<cpp:ifdef pos:start="85:1" pos:end="85:19">#<cpp:directive pos:start="85:2" pos:end="85:6">ifdef</cpp:directive> <name pos:start="85:8" pos:end="85:19">ARCH_POWERPC</name></cpp:ifdef>

    <expr_stmt pos:start="87:5" pos:end="90:0"><expr pos:start="87:5" pos:end="87:26"><call pos:start="87:5" pos:end="87:26"><name pos:start="87:5" pos:end="87:23">MPV_common_init_ppc</name><argument_list pos:start="87:24" pos:end="87:26">(<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><name pos:start="87:25" pos:end="87:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>



    <switch pos:start="93:5" pos:end="133:5">switch<condition pos:start="93:11" pos:end="93:36">(<expr pos:start="93:12" pos:end="93:35"><name pos:start="93:12" pos:end="93:35"><name pos:start="93:12" pos:end="93:12">s</name><operator pos:start="93:13" pos:end="93:14">-&gt;</operator><name pos:start="93:15" pos:end="93:35">idct_permutation_type</name></name></expr>)</condition><block pos:start="93:37" pos:end="133:5">{<block_content pos:start="95:5" pos:end="131:18">

    <case pos:start="95:5" pos:end="95:25">case <expr pos:start="95:10" pos:end="95:24"><name pos:start="95:10" pos:end="95:24">FF_NO_IDCT_PERM</name></expr>:</case>

        <for pos:start="97:9" pos:end="99:38">for<control pos:start="97:12" pos:end="97:27">(<init pos:start="97:13" pos:end="97:16"><expr pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:13">i</name><operator pos:start="97:14" pos:end="97:14">=</operator><literal type="number" pos:start="97:15" pos:end="97:15">0</literal></expr>;</init> <condition pos:start="97:18" pos:end="97:22"><expr pos:start="97:18" pos:end="97:21"><name pos:start="97:18" pos:end="97:18">i</name><operator pos:start="97:19" pos:end="97:19">&lt;</operator><literal type="number" pos:start="97:20" pos:end="97:21">64</literal></expr>;</condition> <incr pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:24">i</name><operator pos:start="97:25" pos:end="97:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="99:13" pos:end="99:38"><block_content pos:start="99:13" pos:end="99:38">

            <expr_stmt pos:start="99:13" pos:end="99:38"><expr pos:start="99:13" pos:end="99:37"><name pos:start="99:13" pos:end="99:34"><name pos:start="99:13" pos:end="99:13">s</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:31">idct_permutation</name><index pos:start="99:32" pos:end="99:34">[<expr pos:start="99:33" pos:end="99:33"><name pos:start="99:33" pos:end="99:33">i</name></expr>]</index></name><operator pos:start="99:35" pos:end="99:35">=</operator> <name pos:start="99:37" pos:end="99:37">i</name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:31">case <expr pos:start="103:10" pos:end="103:30"><name pos:start="103:10" pos:end="103:30">FF_LIBMPEG2_IDCT_PERM</name></expr>:</case>

        <for pos:start="105:9" pos:end="107:81">for<control pos:start="105:12" pos:end="105:27">(<init pos:start="105:13" pos:end="105:16"><expr pos:start="105:13" pos:end="105:15"><name pos:start="105:13" pos:end="105:13">i</name><operator pos:start="105:14" pos:end="105:14">=</operator><literal type="number" pos:start="105:15" pos:end="105:15">0</literal></expr>;</init> <condition pos:start="105:18" pos:end="105:22"><expr pos:start="105:18" pos:end="105:21"><name pos:start="105:18" pos:end="105:18">i</name><operator pos:start="105:19" pos:end="105:19">&lt;</operator><literal type="number" pos:start="105:20" pos:end="105:21">64</literal></expr>;</condition> <incr pos:start="105:24" pos:end="105:26"><expr pos:start="105:24" pos:end="105:26"><name pos:start="105:24" pos:end="105:24">i</name><operator pos:start="105:25" pos:end="105:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="107:13" pos:end="107:81"><block_content pos:start="107:13" pos:end="107:81">

            <expr_stmt pos:start="107:13" pos:end="107:81"><expr pos:start="107:13" pos:end="107:80"><name pos:start="107:13" pos:end="107:34"><name pos:start="107:13" pos:end="107:13">s</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:31">idct_permutation</name><index pos:start="107:32" pos:end="107:34">[<expr pos:start="107:33" pos:end="107:33"><name pos:start="107:33" pos:end="107:33">i</name></expr>]</index></name><operator pos:start="107:35" pos:end="107:35">=</operator> <operator pos:start="107:37" pos:end="107:37">(</operator><name pos:start="107:38" pos:end="107:38">i</name> <operator pos:start="107:40" pos:end="107:40">&amp;</operator> <literal type="number" pos:start="107:42" pos:end="107:45">0x38</literal><operator pos:start="107:46" pos:end="107:46">)</operator> <operator pos:start="107:48" pos:end="107:48">|</operator> <operator pos:start="107:50" pos:end="107:50">(</operator><operator pos:start="107:51" pos:end="107:51">(</operator><name pos:start="107:52" pos:end="107:52">i</name> <operator pos:start="107:54" pos:end="107:54">&amp;</operator> <literal type="number" pos:start="107:56" pos:end="107:56">6</literal><operator pos:start="107:57" pos:end="107:57">)</operator> <operator pos:start="107:59" pos:end="107:60">&gt;&gt;</operator> <literal type="number" pos:start="107:62" pos:end="107:62">1</literal><operator pos:start="107:63" pos:end="107:63">)</operator> <operator pos:start="107:65" pos:end="107:65">|</operator> <operator pos:start="107:67" pos:end="107:67">(</operator><operator pos:start="107:68" pos:end="107:68">(</operator><name pos:start="107:69" pos:end="107:69">i</name> <operator pos:start="107:71" pos:end="107:71">&amp;</operator> <literal type="number" pos:start="107:73" pos:end="107:73">1</literal><operator pos:start="107:74" pos:end="107:74">)</operator> <operator pos:start="107:76" pos:end="107:77">&lt;&lt;</operator> <literal type="number" pos:start="107:79" pos:end="107:79">2</literal><operator pos:start="107:80" pos:end="107:80">)</operator></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:29">case <expr pos:start="111:10" pos:end="111:28"><name pos:start="111:10" pos:end="111:28">FF_SIMPLE_IDCT_PERM</name></expr>:</case>

        <for pos:start="113:9" pos:end="115:62">for<control pos:start="113:12" pos:end="113:27">(<init pos:start="113:13" pos:end="113:16"><expr pos:start="113:13" pos:end="113:15"><name pos:start="113:13" pos:end="113:13">i</name><operator pos:start="113:14" pos:end="113:14">=</operator><literal type="number" pos:start="113:15" pos:end="113:15">0</literal></expr>;</init> <condition pos:start="113:18" pos:end="113:22"><expr pos:start="113:18" pos:end="113:21"><name pos:start="113:18" pos:end="113:18">i</name><operator pos:start="113:19" pos:end="113:19">&lt;</operator><literal type="number" pos:start="113:20" pos:end="113:21">64</literal></expr>;</condition> <incr pos:start="113:24" pos:end="113:26"><expr pos:start="113:24" pos:end="113:26"><name pos:start="113:24" pos:end="113:24">i</name><operator pos:start="113:25" pos:end="113:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:13" pos:end="115:62"><block_content pos:start="115:13" pos:end="115:62">

            <expr_stmt pos:start="115:13" pos:end="115:62"><expr pos:start="115:13" pos:end="115:61"><name pos:start="115:13" pos:end="115:34"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:31">idct_permutation</name><index pos:start="115:32" pos:end="115:34">[<expr pos:start="115:33" pos:end="115:33"><name pos:start="115:33" pos:end="115:33">i</name></expr>]</index></name><operator pos:start="115:35" pos:end="115:35">=</operator> <name pos:start="115:37" pos:end="115:61"><name pos:start="115:37" pos:end="115:58">simple_mmx_permutation</name><index pos:start="115:59" pos:end="115:61">[<expr pos:start="115:60" pos:end="115:60"><name pos:start="115:60" pos:end="115:60">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="117:9" pos:end="117:14">break;</break>

    <case pos:start="119:5" pos:end="119:32">case <expr pos:start="119:10" pos:end="119:31"><name pos:start="119:10" pos:end="119:31">FF_TRANSPOSE_IDCT_PERM</name></expr>:</case>

        <for pos:start="121:9" pos:end="123:56">for<control pos:start="121:12" pos:end="121:27">(<init pos:start="121:13" pos:end="121:16"><expr pos:start="121:13" pos:end="121:15"><name pos:start="121:13" pos:end="121:13">i</name><operator pos:start="121:14" pos:end="121:14">=</operator><literal type="number" pos:start="121:15" pos:end="121:15">0</literal></expr>;</init> <condition pos:start="121:18" pos:end="121:22"><expr pos:start="121:18" pos:end="121:21"><name pos:start="121:18" pos:end="121:18">i</name><operator pos:start="121:19" pos:end="121:19">&lt;</operator><literal type="number" pos:start="121:20" pos:end="121:21">64</literal></expr>;</condition> <incr pos:start="121:24" pos:end="121:26"><expr pos:start="121:24" pos:end="121:26"><name pos:start="121:24" pos:end="121:24">i</name><operator pos:start="121:25" pos:end="121:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="123:13" pos:end="123:56"><block_content pos:start="123:13" pos:end="123:56">

            <expr_stmt pos:start="123:13" pos:end="123:56"><expr pos:start="123:13" pos:end="123:55"><name pos:start="123:13" pos:end="123:34"><name pos:start="123:13" pos:end="123:13">s</name><operator pos:start="123:14" pos:end="123:15">-&gt;</operator><name pos:start="123:16" pos:end="123:31">idct_permutation</name><index pos:start="123:32" pos:end="123:34">[<expr pos:start="123:33" pos:end="123:33"><name pos:start="123:33" pos:end="123:33">i</name></expr>]</index></name><operator pos:start="123:35" pos:end="123:35">=</operator> <operator pos:start="123:37" pos:end="123:37">(</operator><operator pos:start="123:38" pos:end="123:38">(</operator><name pos:start="123:39" pos:end="123:39">i</name><operator pos:start="123:40" pos:end="123:40">&amp;</operator><literal type="number" pos:start="123:41" pos:end="123:41">7</literal><operator pos:start="123:42" pos:end="123:42">)</operator><operator pos:start="123:43" pos:end="123:44">&lt;&lt;</operator><literal type="number" pos:start="123:45" pos:end="123:45">3</literal><operator pos:start="123:46" pos:end="123:46">)</operator> <operator pos:start="123:48" pos:end="123:48">|</operator> <operator pos:start="123:50" pos:end="123:50">(</operator><name pos:start="123:51" pos:end="123:51">i</name><operator pos:start="123:52" pos:end="123:53">&gt;&gt;</operator><literal type="number" pos:start="123:54" pos:end="123:54">3</literal><operator pos:start="123:55" pos:end="123:55">)</operator></expr>;</expr_stmt></block_content></block></for>

        <break pos:start="125:9" pos:end="125:14">break;</break>

    <default pos:start="127:5" pos:end="127:12">default:</default>

        <expr_stmt pos:start="129:9" pos:end="129:70"><expr pos:start="129:9" pos:end="129:69"><call pos:start="129:9" pos:end="129:69"><name pos:start="129:9" pos:end="129:15">fprintf</name><argument_list pos:start="129:16" pos:end="129:69">(<argument pos:start="129:17" pos:end="129:22"><expr pos:start="129:17" pos:end="129:22"><name pos:start="129:17" pos:end="129:22">stderr</name></expr></argument>, <argument pos:start="129:25" pos:end="129:68"><expr pos:start="129:25" pos:end="129:68"><literal type="string" pos:start="129:25" pos:end="129:68">"Internal error, IDCT permutation not set\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:18">return <expr pos:start="131:16" pos:end="131:17"><operator pos:start="131:16" pos:end="131:16">-</operator><literal type="number" pos:start="131:17" pos:end="131:17">1</literal></expr>;</return>

    </block_content>}</block></switch>





    <comment type="block" pos:start="139:5" pos:end="143:6">/* load &amp; permutate scantables

       note: only wmv uses differnt ones 

    */</comment>

    <expr_stmt pos:start="145:5" pos:end="145:66"><expr pos:start="145:5" pos:end="145:65"><call pos:start="145:5" pos:end="145:65"><name pos:start="145:5" pos:end="145:21">ff_init_scantable</name><argument_list pos:start="145:22" pos:end="145:65">(<argument pos:start="145:23" pos:end="145:23"><expr pos:start="145:23" pos:end="145:23"><name pos:start="145:23" pos:end="145:23">s</name></expr></argument>, <argument pos:start="145:26" pos:end="145:44"><expr pos:start="145:26" pos:end="145:44"><operator pos:start="145:26" pos:end="145:26">&amp;</operator><name pos:start="145:27" pos:end="145:44"><name pos:start="145:27" pos:end="145:27">s</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:44">inter_scantable</name></name></expr></argument>  , <argument pos:start="145:49" pos:end="145:64"><expr pos:start="145:49" pos:end="145:64"><name pos:start="145:49" pos:end="145:64">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:66"><expr pos:start="147:5" pos:end="147:65"><call pos:start="147:5" pos:end="147:65"><name pos:start="147:5" pos:end="147:21">ff_init_scantable</name><argument_list pos:start="147:22" pos:end="147:65">(<argument pos:start="147:23" pos:end="147:23"><expr pos:start="147:23" pos:end="147:23"><name pos:start="147:23" pos:end="147:23">s</name></expr></argument>, <argument pos:start="147:26" pos:end="147:44"><expr pos:start="147:26" pos:end="147:44"><operator pos:start="147:26" pos:end="147:26">&amp;</operator><name pos:start="147:27" pos:end="147:44"><name pos:start="147:27" pos:end="147:27">s</name><operator pos:start="147:28" pos:end="147:29">-&gt;</operator><name pos:start="147:30" pos:end="147:44">intra_scantable</name></name></expr></argument>  , <argument pos:start="147:49" pos:end="147:64"><expr pos:start="147:49" pos:end="147:64"><name pos:start="147:49" pos:end="147:64">ff_zigzag_direct</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:78"><expr pos:start="149:5" pos:end="149:77"><call pos:start="149:5" pos:end="149:77"><name pos:start="149:5" pos:end="149:21">ff_init_scantable</name><argument_list pos:start="149:22" pos:end="149:77">(<argument pos:start="149:23" pos:end="149:23"><expr pos:start="149:23" pos:end="149:23"><name pos:start="149:23" pos:end="149:23">s</name></expr></argument>, <argument pos:start="149:26" pos:end="149:46"><expr pos:start="149:26" pos:end="149:46"><operator pos:start="149:26" pos:end="149:26">&amp;</operator><name pos:start="149:27" pos:end="149:46"><name pos:start="149:27" pos:end="149:27">s</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:46">intra_h_scantable</name></name></expr></argument>, <argument pos:start="149:49" pos:end="149:76"><expr pos:start="149:49" pos:end="149:76"><name pos:start="149:49" pos:end="149:76">ff_alternate_horizontal_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:76"><expr pos:start="151:5" pos:end="151:75"><call pos:start="151:5" pos:end="151:75"><name pos:start="151:5" pos:end="151:21">ff_init_scantable</name><argument_list pos:start="151:22" pos:end="151:75">(<argument pos:start="151:23" pos:end="151:23"><expr pos:start="151:23" pos:end="151:23"><name pos:start="151:23" pos:end="151:23">s</name></expr></argument>, <argument pos:start="151:26" pos:end="151:46"><expr pos:start="151:26" pos:end="151:46"><operator pos:start="151:26" pos:end="151:26">&amp;</operator><name pos:start="151:27" pos:end="151:46"><name pos:start="151:27" pos:end="151:27">s</name><operator pos:start="151:28" pos:end="151:29">-&gt;</operator><name pos:start="151:30" pos:end="151:46">intra_v_scantable</name></name></expr></argument>, <argument pos:start="151:49" pos:end="151:74"><expr pos:start="151:49" pos:end="151:74"><name pos:start="151:49" pos:end="151:74">ff_alternate_vertical_scan</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="155:5" pos:end="155:13">return <expr pos:start="155:12" pos:end="155:12"><literal type="number" pos:start="155:12" pos:end="155:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
