<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9620.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">is_not_zero</name><parameter_list pos:start="1:23" pos:end="1:54">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><specifier pos:start="1:24" pos:end="1:28">const</specifier> <name pos:start="1:30" pos:end="1:36">uint8_t</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">sector</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:53"><decl pos:start="1:47" pos:end="1:53"><type pos:start="1:47" pos:end="1:53"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:53">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="17:5" pos:end="51:13">

    <comment type="block" pos:start="5:5" pos:end="13:7">/*

     * Use long as the biggest available internal data type that fits into the

     * CPU register and unroll the loop to smooth out the effect of memory

     * latency.

     */</comment>



    <decl_stmt pos:start="17:5" pos:end="17:10"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:24"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:8"><name pos:start="19:5" pos:end="19:8">long</name></type> <name pos:start="19:10" pos:end="19:11">d0</name></decl>, <decl pos:start="19:14" pos:end="19:15"><type ref="prev" pos:start="19:5" pos:end="19:8"/><name pos:start="19:14" pos:end="19:15">d1</name></decl>, <decl pos:start="19:18" pos:end="19:19"><type ref="prev" pos:start="19:5" pos:end="19:8"/><name pos:start="19:18" pos:end="19:19">d2</name></decl>, <decl pos:start="19:22" pos:end="19:23"><type ref="prev" pos:start="19:5" pos:end="19:8"/><name pos:start="19:22" pos:end="19:23">d3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:52"><decl pos:start="21:5" pos:end="21:51"><type pos:start="21:5" pos:end="21:22"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:14">long</name> <modifier pos:start="21:16" pos:end="21:16">*</modifier> <specifier pos:start="21:18" pos:end="21:22">const</specifier></type> <name pos:start="21:24" pos:end="21:27">data</name> <init pos:start="21:29" pos:end="21:51">= <expr pos:start="21:31" pos:end="21:51"><operator pos:start="21:31" pos:end="21:31">(</operator><specifier pos:start="21:32" pos:end="21:36">const</specifier> <name pos:start="21:38" pos:end="21:41">long</name> <operator pos:start="21:43" pos:end="21:43">*</operator><operator pos:start="21:44" pos:end="21:44">)</operator> <name pos:start="21:46" pos:end="21:51">sector</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:7">len</name> <operator pos:start="25:9" pos:end="25:10">/=</operator> <sizeof pos:start="25:12" pos:end="25:23">sizeof<argument_list pos:start="25:18" pos:end="25:23">(<argument pos:start="25:19" pos:end="25:22"><expr pos:start="25:19" pos:end="25:22"><name pos:start="25:19" pos:end="25:22">long</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="47:5">for<control pos:start="29:8" pos:end="29:31">(<init pos:start="29:9" pos:end="29:14"><expr pos:start="29:9" pos:end="29:13"><name pos:start="29:9" pos:end="29:9">i</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <literal type="number" pos:start="29:13" pos:end="29:13">0</literal></expr>;</init> <condition pos:start="29:16" pos:end="29:23"><expr pos:start="29:16" pos:end="29:22"><name pos:start="29:16" pos:end="29:16">i</name> <operator pos:start="29:18" pos:end="29:18">&lt;</operator> <name pos:start="29:20" pos:end="29:22">len</name></expr>;</condition> <incr pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><name pos:start="29:25" pos:end="29:25">i</name> <operator pos:start="29:27" pos:end="29:28">+=</operator> <literal type="number" pos:start="29:30" pos:end="29:30">4</literal></expr></incr>)</control> <block pos:start="29:33" pos:end="47:5">{<block_content pos:start="31:9" pos:end="45:9">

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:10">d0</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <name pos:start="31:14" pos:end="31:24"><name pos:start="31:14" pos:end="31:17">data</name><index pos:start="31:18" pos:end="31:24">[<expr pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:19">i</name> <operator pos:start="31:21" pos:end="31:21">+</operator> <literal type="number" pos:start="31:23" pos:end="31:23">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:25"><expr pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:10">d1</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:17">data</name><index pos:start="33:18" pos:end="33:24">[<expr pos:start="33:19" pos:end="33:23"><name pos:start="33:19" pos:end="33:19">i</name> <operator pos:start="33:21" pos:end="33:21">+</operator> <literal type="number" pos:start="33:23" pos:end="33:23">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:25"><expr pos:start="35:9" pos:end="35:24"><name pos:start="35:9" pos:end="35:10">d2</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:24"><name pos:start="35:14" pos:end="35:17">data</name><index pos:start="35:18" pos:end="35:24">[<expr pos:start="35:19" pos:end="35:23"><name pos:start="35:19" pos:end="35:19">i</name> <operator pos:start="35:21" pos:end="35:21">+</operator> <literal type="number" pos:start="35:23" pos:end="35:23">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:25"><expr pos:start="37:9" pos:end="37:24"><name pos:start="37:9" pos:end="37:10">d3</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <name pos:start="37:14" pos:end="37:24"><name pos:start="37:14" pos:end="37:17">data</name><index pos:start="37:18" pos:end="37:24">[<expr pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:19">i</name> <operator pos:start="37:21" pos:end="37:21">+</operator> <literal type="number" pos:start="37:23" pos:end="37:23">3</literal></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:33">(<expr pos:start="41:13" pos:end="41:32"><name pos:start="41:13" pos:end="41:14">d0</name> <operator pos:start="41:16" pos:end="41:17">||</operator> <name pos:start="41:19" pos:end="41:20">d1</name> <operator pos:start="41:22" pos:end="41:23">||</operator> <name pos:start="41:25" pos:end="41:26">d2</name> <operator pos:start="41:28" pos:end="41:29">||</operator> <name pos:start="41:31" pos:end="41:32">d3</name></expr>)</condition> <block pos:start="41:35" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:21">

            <return pos:start="43:13" pos:end="43:21">return <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
