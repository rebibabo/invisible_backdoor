<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7785.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">check_native_list</name><parameter_list pos:start="1:30" pos:end="3:62">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:37">QObject</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">qobj</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:61"><decl pos:start="3:31" pos:end="3:61"><type pos:start="3:31" pos:end="3:61"><name pos:start="3:31" pos:end="3:56">UserDefNativeListUnionKind</name></type> <name pos:start="3:58" pos:end="3:61">kind</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="171:1">{<block_content pos:start="7:5" pos:end="169:19">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">QDict</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:16">qdict</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">QList</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:16">qlist</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><call pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12">g_assert</name><argument_list pos:start="15:13" pos:end="15:18">(<argument pos:start="15:14" pos:end="15:17"><expr pos:start="15:14" pos:end="15:17"><name pos:start="15:14" pos:end="15:17">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:12">g_assert</name><argument_list pos:start="17:13" pos:end="17:47">(<argument pos:start="17:14" pos:end="17:46"><expr pos:start="17:14" pos:end="17:46"><call pos:start="17:14" pos:end="17:31"><name pos:start="17:14" pos:end="17:25">qobject_type</name><argument_list pos:start="17:26" pos:end="17:31">(<argument pos:start="17:27" pos:end="17:30"><expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">qobj</name></expr></argument>)</argument_list></call> <operator pos:start="17:33" pos:end="17:34">==</operator> <name pos:start="17:36" pos:end="17:46">QTYPE_QDICT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:9">qdict</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:28">qobject_to_qdict</name><argument_list pos:start="19:29" pos:end="19:34">(<argument pos:start="19:30" pos:end="19:33"><expr pos:start="19:30" pos:end="19:33"><name pos:start="19:30" pos:end="19:33">qobj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:20"><expr pos:start="21:5" pos:end="21:19"><call pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:12">g_assert</name><argument_list pos:start="21:13" pos:end="21:19">(<argument pos:start="21:14" pos:end="21:18"><expr pos:start="21:14" pos:end="21:18"><name pos:start="21:14" pos:end="21:18">qdict</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><call pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:12">g_assert</name><argument_list pos:start="23:13" pos:end="23:41">(<argument pos:start="23:14" pos:end="23:40"><expr pos:start="23:14" pos:end="23:40"><call pos:start="23:14" pos:end="23:40"><name pos:start="23:14" pos:end="23:25">qdict_haskey</name><argument_list pos:start="23:26" pos:end="23:40">(<argument pos:start="23:27" pos:end="23:31"><expr pos:start="23:27" pos:end="23:31"><name pos:start="23:27" pos:end="23:31">qdict</name></expr></argument>, <argument pos:start="23:34" pos:end="23:39"><expr pos:start="23:34" pos:end="23:39"><literal type="string" pos:start="23:34" pos:end="23:39">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:67"><expr pos:start="25:5" pos:end="25:66"><name pos:start="25:5" pos:end="25:9">qlist</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:66"><name pos:start="25:13" pos:end="25:22">qlist_copy</name><argument_list pos:start="25:23" pos:end="25:66">(<argument pos:start="25:24" pos:end="25:65"><expr pos:start="25:24" pos:end="25:65"><call pos:start="25:24" pos:end="25:65"><name pos:start="25:24" pos:end="25:39">qobject_to_qlist</name><argument_list pos:start="25:40" pos:end="25:65">(<argument pos:start="25:41" pos:end="25:64"><expr pos:start="25:41" pos:end="25:64"><call pos:start="25:41" pos:end="25:64"><name pos:start="25:41" pos:end="25:49">qdict_get</name><argument_list pos:start="25:50" pos:end="25:64">(<argument pos:start="25:51" pos:end="25:55"><expr pos:start="25:51" pos:end="25:55"><name pos:start="25:51" pos:end="25:55">qdict</name></expr></argument>, <argument pos:start="25:58" pos:end="25:63"><expr pos:start="25:58" pos:end="25:63"><literal type="string" pos:start="25:58" pos:end="25:63">"data"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="167:5">switch <condition pos:start="29:12" pos:end="29:17">(<expr pos:start="29:13" pos:end="29:16"><name pos:start="29:13" pos:end="29:16">kind</name></expr>)</condition> <block pos:start="29:19" pos:end="167:5">{<block_content pos:start="31:5" pos:end="165:31">

    <case pos:start="31:5" pos:end="31:44">case <expr pos:start="31:10" pos:end="31:43"><name pos:start="31:10" pos:end="31:43">USER_DEF_NATIVE_LIST_UNION_KIND_S8</name></expr>:</case>

    <case pos:start="33:5" pos:end="33:45">case <expr pos:start="33:10" pos:end="33:44"><name pos:start="33:10" pos:end="33:44">USER_DEF_NATIVE_LIST_UNION_KIND_S16</name></expr>:</case>

    <case pos:start="35:5" pos:end="35:45">case <expr pos:start="35:10" pos:end="35:44"><name pos:start="35:10" pos:end="35:44">USER_DEF_NATIVE_LIST_UNION_KIND_S32</name></expr>:</case>

    <case pos:start="37:5" pos:end="37:45">case <expr pos:start="37:10" pos:end="37:44"><name pos:start="37:10" pos:end="37:44">USER_DEF_NATIVE_LIST_UNION_KIND_S64</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:44">case <expr pos:start="39:10" pos:end="39:43"><name pos:start="39:10" pos:end="39:43">USER_DEF_NATIVE_LIST_UNION_KIND_U8</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:45">case <expr pos:start="41:10" pos:end="41:44"><name pos:start="41:10" pos:end="41:44">USER_DEF_NATIVE_LIST_UNION_KIND_U16</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:45">case <expr pos:start="43:10" pos:end="43:44"><name pos:start="43:10" pos:end="43:44">USER_DEF_NATIVE_LIST_UNION_KIND_U32</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:45">case <expr pos:start="45:10" pos:end="45:44"><name pos:start="45:10" pos:end="45:44">USER_DEF_NATIVE_LIST_UNION_KIND_U64</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="53:11">/* all integer elements in JSON arrays get stored into QInts when

         * we convert to QObjects, so we can check them all in the same

         * fashion, so simply fall through here

         */</comment>

    <case pos:start="55:5" pos:end="55:49">case <expr pos:start="55:10" pos:end="55:48"><name pos:start="55:10" pos:end="55:48">USER_DEF_NATIVE_LIST_UNION_KIND_INTEGER</name></expr>:</case>

        <for pos:start="57:9" pos:end="73:9">for <control pos:start="57:13" pos:end="57:32">(<init pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:18"><name pos:start="57:14" pos:end="57:14">i</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>;</init> <condition pos:start="57:21" pos:end="57:27"><expr pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:21">i</name> <operator pos:start="57:23" pos:end="57:23">&lt;</operator> <literal type="number" pos:start="57:25" pos:end="57:26">32</literal></expr>;</condition> <incr pos:start="57:29" pos:end="57:31"><expr pos:start="57:29" pos:end="57:31"><name pos:start="57:29" pos:end="57:29">i</name><operator pos:start="57:30" pos:end="57:31">++</operator></expr></incr>)</control> <block pos:start="57:34" pos:end="73:9">{<block_content pos:start="59:13" pos:end="71:45">

            <decl_stmt pos:start="59:13" pos:end="59:25"><decl pos:start="59:13" pos:end="59:24"><type pos:start="59:13" pos:end="59:21"><name pos:start="59:13" pos:end="59:19">QObject</name> <modifier pos:start="59:21" pos:end="59:21">*</modifier></type><name pos:start="59:22" pos:end="59:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="61:13" pos:end="61:25"><decl pos:start="61:13" pos:end="61:24"><type pos:start="61:13" pos:end="61:18"><name pos:start="61:13" pos:end="61:16">QInt</name> <modifier pos:start="61:18" pos:end="61:18">*</modifier></type><name pos:start="61:19" pos:end="61:24">qvalue</name></decl>;</decl_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><name pos:start="63:13" pos:end="63:15">tmp</name> <operator pos:start="63:17" pos:end="63:17">=</operator> <call pos:start="63:19" pos:end="63:35"><name pos:start="63:19" pos:end="63:28">qlist_peek</name><argument_list pos:start="63:29" pos:end="63:35">(<argument pos:start="63:30" pos:end="63:34"><expr pos:start="63:30" pos:end="63:34"><name pos:start="63:30" pos:end="63:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:26"><expr pos:start="65:13" pos:end="65:25"><call pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:20">g_assert</name><argument_list pos:start="65:21" pos:end="65:25">(<argument pos:start="65:22" pos:end="65:24"><expr pos:start="65:22" pos:end="65:24"><name pos:start="65:22" pos:end="65:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:42"><expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:18">qvalue</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <call pos:start="67:22" pos:end="67:41"><name pos:start="67:22" pos:end="67:36">qobject_to_qint</name><argument_list pos:start="67:37" pos:end="67:41">(<argument pos:start="67:38" pos:end="67:40"><expr pos:start="67:38" pos:end="67:40"><name pos:start="67:38" pos:end="67:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:57"><expr pos:start="69:13" pos:end="69:56"><call pos:start="69:13" pos:end="69:56"><name pos:start="69:13" pos:end="69:27">g_assert_cmpint</name><argument_list pos:start="69:28" pos:end="69:56">(<argument pos:start="69:29" pos:end="69:48"><expr pos:start="69:29" pos:end="69:48"><call pos:start="69:29" pos:end="69:48"><name pos:start="69:29" pos:end="69:40">qint_get_int</name><argument_list pos:start="69:41" pos:end="69:48">(<argument pos:start="69:42" pos:end="69:47"><expr pos:start="69:42" pos:end="69:47"><name pos:start="69:42" pos:end="69:47">qvalue</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="69:51" pos:end="69:52"><expr pos:start="69:51" pos:end="69:52"><operator pos:start="69:51" pos:end="69:52">==</operator></expr></argument>, <argument pos:start="69:55" pos:end="69:55"><expr pos:start="69:55" pos:end="69:55"><name pos:start="69:55" pos:end="69:55">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:45"><expr pos:start="71:13" pos:end="71:44"><call pos:start="71:13" pos:end="71:44"><name pos:start="71:13" pos:end="71:26">qobject_decref</name><argument_list pos:start="71:27" pos:end="71:44">(<argument pos:start="71:28" pos:end="71:43"><expr pos:start="71:28" pos:end="71:43"><call pos:start="71:28" pos:end="71:43"><name pos:start="71:28" pos:end="71:36">qlist_pop</name><argument_list pos:start="71:37" pos:end="71:43">(<argument pos:start="71:38" pos:end="71:42"><expr pos:start="71:38" pos:end="71:42"><name pos:start="71:38" pos:end="71:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:49">case <expr pos:start="77:10" pos:end="77:48"><name pos:start="77:10" pos:end="77:48">USER_DEF_NATIVE_LIST_UNION_KIND_BOOLEAN</name></expr>:</case>

        <for pos:start="79:9" pos:end="95:9">for <control pos:start="79:13" pos:end="79:32">(<init pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:18"><name pos:start="79:14" pos:end="79:14">i</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr>;</init> <condition pos:start="79:21" pos:end="79:27"><expr pos:start="79:21" pos:end="79:26"><name pos:start="79:21" pos:end="79:21">i</name> <operator pos:start="79:23" pos:end="79:23">&lt;</operator> <literal type="number" pos:start="79:25" pos:end="79:26">32</literal></expr>;</condition> <incr pos:start="79:29" pos:end="79:31"><expr pos:start="79:29" pos:end="79:31"><name pos:start="79:29" pos:end="79:29">i</name><operator pos:start="79:30" pos:end="79:31">++</operator></expr></incr>)</control> <block pos:start="79:34" pos:end="95:9">{<block_content pos:start="81:13" pos:end="93:45">

            <decl_stmt pos:start="81:13" pos:end="81:25"><decl pos:start="81:13" pos:end="81:24"><type pos:start="81:13" pos:end="81:21"><name pos:start="81:13" pos:end="81:19">QObject</name> <modifier pos:start="81:21" pos:end="81:21">*</modifier></type><name pos:start="81:22" pos:end="81:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="83:13" pos:end="83:26"><decl pos:start="83:13" pos:end="83:25"><type pos:start="83:13" pos:end="83:19"><name pos:start="83:13" pos:end="83:17">QBool</name> <modifier pos:start="83:19" pos:end="83:19">*</modifier></type><name pos:start="83:20" pos:end="83:25">qvalue</name></decl>;</decl_stmt>

            <expr_stmt pos:start="85:13" pos:end="85:36"><expr pos:start="85:13" pos:end="85:35"><name pos:start="85:13" pos:end="85:15">tmp</name> <operator pos:start="85:17" pos:end="85:17">=</operator> <call pos:start="85:19" pos:end="85:35"><name pos:start="85:19" pos:end="85:28">qlist_peek</name><argument_list pos:start="85:29" pos:end="85:35">(<argument pos:start="85:30" pos:end="85:34"><expr pos:start="85:30" pos:end="85:34"><name pos:start="85:30" pos:end="85:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:26"><expr pos:start="87:13" pos:end="87:25"><call pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:20">g_assert</name><argument_list pos:start="87:21" pos:end="87:25">(<argument pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><name pos:start="87:22" pos:end="87:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="89:43"><expr pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:18">qvalue</name> <operator pos:start="89:20" pos:end="89:20">=</operator> <call pos:start="89:22" pos:end="89:42"><name pos:start="89:22" pos:end="89:37">qobject_to_qbool</name><argument_list pos:start="89:38" pos:end="89:42">(<argument pos:start="89:39" pos:end="89:41"><expr pos:start="89:39" pos:end="89:41"><name pos:start="89:39" pos:end="89:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="91:13" pos:end="91:68"><expr pos:start="91:13" pos:end="91:67"><call pos:start="91:13" pos:end="91:67"><name pos:start="91:13" pos:end="91:27">g_assert_cmpint</name><argument_list pos:start="91:28" pos:end="91:67">(<argument pos:start="91:29" pos:end="91:50"><expr pos:start="91:29" pos:end="91:50"><call pos:start="91:29" pos:end="91:50"><name pos:start="91:29" pos:end="91:42">qbool_get_bool</name><argument_list pos:start="91:43" pos:end="91:50">(<argument pos:start="91:44" pos:end="91:49"><expr pos:start="91:44" pos:end="91:49"><name pos:start="91:44" pos:end="91:49">qvalue</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:53" pos:end="91:54"><expr pos:start="91:53" pos:end="91:54"><operator pos:start="91:53" pos:end="91:54">==</operator></expr></argument>, <argument pos:start="91:57" pos:end="91:66"><expr pos:start="91:57" pos:end="91:66"><name pos:start="91:57" pos:end="91:57">i</name> <operator pos:start="91:59" pos:end="91:59">%</operator> <literal type="number" pos:start="91:61" pos:end="91:61">3</literal> <operator pos:start="91:63" pos:end="91:64">==</operator> <literal type="number" pos:start="91:66" pos:end="91:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:45"><expr pos:start="93:13" pos:end="93:44"><call pos:start="93:13" pos:end="93:44"><name pos:start="93:13" pos:end="93:26">qobject_decref</name><argument_list pos:start="93:27" pos:end="93:44">(<argument pos:start="93:28" pos:end="93:43"><expr pos:start="93:28" pos:end="93:43"><call pos:start="93:28" pos:end="93:43"><name pos:start="93:28" pos:end="93:36">qlist_pop</name><argument_list pos:start="93:37" pos:end="93:43">(<argument pos:start="93:38" pos:end="93:42"><expr pos:start="93:38" pos:end="93:42"><name pos:start="93:38" pos:end="93:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:48">case <expr pos:start="99:10" pos:end="99:47"><name pos:start="99:10" pos:end="99:47">USER_DEF_NATIVE_LIST_UNION_KIND_STRING</name></expr>:</case>

        <for pos:start="101:9" pos:end="121:9">for <control pos:start="101:13" pos:end="101:32">(<init pos:start="101:14" pos:end="101:19"><expr pos:start="101:14" pos:end="101:18"><name pos:start="101:14" pos:end="101:14">i</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:18">0</literal></expr>;</init> <condition pos:start="101:21" pos:end="101:27"><expr pos:start="101:21" pos:end="101:26"><name pos:start="101:21" pos:end="101:21">i</name> <operator pos:start="101:23" pos:end="101:23">&lt;</operator> <literal type="number" pos:start="101:25" pos:end="101:26">32</literal></expr>;</condition> <incr pos:start="101:29" pos:end="101:31"><expr pos:start="101:29" pos:end="101:31"><name pos:start="101:29" pos:end="101:29">i</name><operator pos:start="101:30" pos:end="101:31">++</operator></expr></incr>)</control> <block pos:start="101:34" pos:end="121:9">{<block_content pos:start="103:13" pos:end="119:45">

            <decl_stmt pos:start="103:13" pos:end="103:25"><decl pos:start="103:13" pos:end="103:24"><type pos:start="103:13" pos:end="103:21"><name pos:start="103:13" pos:end="103:19">QObject</name> <modifier pos:start="103:21" pos:end="103:21">*</modifier></type><name pos:start="103:22" pos:end="103:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:28"><decl pos:start="105:13" pos:end="105:27"><type pos:start="105:13" pos:end="105:21"><name pos:start="105:13" pos:end="105:19">QString</name> <modifier pos:start="105:21" pos:end="105:21">*</modifier></type><name pos:start="105:22" pos:end="105:27">qvalue</name></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:25"><decl pos:start="107:13" pos:end="107:24"><type pos:start="107:13" pos:end="107:17"><name pos:start="107:13" pos:end="107:17">gchar</name></type> <name pos:start="107:19" pos:end="107:24"><name pos:start="107:19" pos:end="107:21">str</name><index pos:start="107:22" pos:end="107:24">[<expr pos:start="107:23" pos:end="107:23"><literal type="number" pos:start="107:23" pos:end="107:23">8</literal></expr>]</index></name></decl>;</decl_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:36"><expr pos:start="109:13" pos:end="109:35"><name pos:start="109:13" pos:end="109:15">tmp</name> <operator pos:start="109:17" pos:end="109:17">=</operator> <call pos:start="109:19" pos:end="109:35"><name pos:start="109:19" pos:end="109:28">qlist_peek</name><argument_list pos:start="109:29" pos:end="109:35">(<argument pos:start="109:30" pos:end="109:34"><expr pos:start="109:30" pos:end="109:34"><name pos:start="109:30" pos:end="109:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:26"><expr pos:start="111:13" pos:end="111:25"><call pos:start="111:13" pos:end="111:25"><name pos:start="111:13" pos:end="111:20">g_assert</name><argument_list pos:start="111:21" pos:end="111:25">(<argument pos:start="111:22" pos:end="111:24"><expr pos:start="111:22" pos:end="111:24"><name pos:start="111:22" pos:end="111:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:45"><expr pos:start="113:13" pos:end="113:44"><name pos:start="113:13" pos:end="113:18">qvalue</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <call pos:start="113:22" pos:end="113:44"><name pos:start="113:22" pos:end="113:39">qobject_to_qstring</name><argument_list pos:start="113:40" pos:end="113:44">(<argument pos:start="113:41" pos:end="113:43"><expr pos:start="113:41" pos:end="113:43"><name pos:start="113:41" pos:end="113:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:34"><expr pos:start="115:13" pos:end="115:33"><call pos:start="115:13" pos:end="115:33"><name pos:start="115:13" pos:end="115:19">sprintf</name><argument_list pos:start="115:20" pos:end="115:33">(<argument pos:start="115:21" pos:end="115:23"><expr pos:start="115:21" pos:end="115:23"><name pos:start="115:21" pos:end="115:23">str</name></expr></argument>, <argument pos:start="115:26" pos:end="115:29"><expr pos:start="115:26" pos:end="115:29"><literal type="string" pos:start="115:26" pos:end="115:29">"%d"</literal></expr></argument>, <argument pos:start="115:32" pos:end="115:32"><expr pos:start="115:32" pos:end="115:32"><name pos:start="115:32" pos:end="115:32">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:62"><expr pos:start="117:13" pos:end="117:61"><call pos:start="117:13" pos:end="117:61"><name pos:start="117:13" pos:end="117:27">g_assert_cmpstr</name><argument_list pos:start="117:28" pos:end="117:61">(<argument pos:start="117:29" pos:end="117:51"><expr pos:start="117:29" pos:end="117:51"><call pos:start="117:29" pos:end="117:51"><name pos:start="117:29" pos:end="117:43">qstring_get_str</name><argument_list pos:start="117:44" pos:end="117:51">(<argument pos:start="117:45" pos:end="117:50"><expr pos:start="117:45" pos:end="117:50"><name pos:start="117:45" pos:end="117:50">qvalue</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:54" pos:end="117:55"><expr pos:start="117:54" pos:end="117:55"><operator pos:start="117:54" pos:end="117:55">==</operator></expr></argument>, <argument pos:start="117:58" pos:end="117:60"><expr pos:start="117:58" pos:end="117:60"><name pos:start="117:58" pos:end="117:60">str</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:45"><expr pos:start="119:13" pos:end="119:44"><call pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:26">qobject_decref</name><argument_list pos:start="119:27" pos:end="119:44">(<argument pos:start="119:28" pos:end="119:43"><expr pos:start="119:28" pos:end="119:43"><call pos:start="119:28" pos:end="119:43"><name pos:start="119:28" pos:end="119:36">qlist_pop</name><argument_list pos:start="119:37" pos:end="119:43">(<argument pos:start="119:38" pos:end="119:42"><expr pos:start="119:38" pos:end="119:42"><name pos:start="119:38" pos:end="119:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:48">case <expr pos:start="125:10" pos:end="125:47"><name pos:start="125:10" pos:end="125:47">USER_DEF_NATIVE_LIST_UNION_KIND_NUMBER</name></expr>:</case>

        <for pos:start="127:9" pos:end="159:9">for <control pos:start="127:13" pos:end="127:32">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:27"><expr pos:start="127:21" pos:end="127:26"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:26">32</literal></expr>;</condition> <incr pos:start="127:29" pos:end="127:31"><expr pos:start="127:29" pos:end="127:31"><name pos:start="127:29" pos:end="127:29">i</name><operator pos:start="127:30" pos:end="127:31">++</operator></expr></incr>)</control> <block pos:start="127:34" pos:end="159:9">{<block_content pos:start="129:13" pos:end="157:47">

            <decl_stmt pos:start="129:13" pos:end="129:25"><decl pos:start="129:13" pos:end="129:24"><type pos:start="129:13" pos:end="129:21"><name pos:start="129:13" pos:end="129:19">QObject</name> <modifier pos:start="129:21" pos:end="129:21">*</modifier></type><name pos:start="129:22" pos:end="129:24">tmp</name></decl>;</decl_stmt>

            <decl_stmt pos:start="131:13" pos:end="131:27"><decl pos:start="131:13" pos:end="131:26"><type pos:start="131:13" pos:end="131:20"><name pos:start="131:13" pos:end="131:18">QFloat</name> <modifier pos:start="131:20" pos:end="131:20">*</modifier></type><name pos:start="131:21" pos:end="131:26">qvalue</name></decl>;</decl_stmt>

            <decl_stmt pos:start="133:13" pos:end="133:56"><decl pos:start="133:13" pos:end="133:55"><type pos:start="133:13" pos:end="133:21"><name pos:start="133:13" pos:end="133:19">GString</name> <modifier pos:start="133:21" pos:end="133:21">*</modifier></type><name pos:start="133:22" pos:end="133:36">double_expected</name> <init pos:start="133:38" pos:end="133:55">= <expr pos:start="133:40" pos:end="133:55"><call pos:start="133:40" pos:end="133:55"><name pos:start="133:40" pos:end="133:51">g_string_new</name><argument_list pos:start="133:52" pos:end="133:55">(<argument pos:start="133:53" pos:end="133:54"><expr pos:start="133:53" pos:end="133:54"><literal type="string" pos:start="133:53" pos:end="133:54">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="135:13" pos:end="135:54"><decl pos:start="135:13" pos:end="135:53"><type pos:start="135:13" pos:end="135:21"><name pos:start="135:13" pos:end="135:19">GString</name> <modifier pos:start="135:21" pos:end="135:21">*</modifier></type><name pos:start="135:22" pos:end="135:34">double_actual</name> <init pos:start="135:36" pos:end="135:53">= <expr pos:start="135:38" pos:end="135:53"><call pos:start="135:38" pos:end="135:53"><name pos:start="135:38" pos:end="135:49">g_string_new</name><argument_list pos:start="135:50" pos:end="135:53">(<argument pos:start="135:51" pos:end="135:52"><expr pos:start="135:51" pos:end="135:52"><literal type="string" pos:start="135:51" pos:end="135:52">""</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="139:13" pos:end="139:36"><expr pos:start="139:13" pos:end="139:35"><name pos:start="139:13" pos:end="139:15">tmp</name> <operator pos:start="139:17" pos:end="139:17">=</operator> <call pos:start="139:19" pos:end="139:35"><name pos:start="139:19" pos:end="139:28">qlist_peek</name><argument_list pos:start="139:29" pos:end="139:35">(<argument pos:start="139:30" pos:end="139:34"><expr pos:start="139:30" pos:end="139:34"><name pos:start="139:30" pos:end="139:34">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:26"><expr pos:start="141:13" pos:end="141:25"><call pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:20">g_assert</name><argument_list pos:start="141:21" pos:end="141:25">(<argument pos:start="141:22" pos:end="141:24"><expr pos:start="141:22" pos:end="141:24"><name pos:start="141:22" pos:end="141:24">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:44"><expr pos:start="143:13" pos:end="143:43"><name pos:start="143:13" pos:end="143:18">qvalue</name> <operator pos:start="143:20" pos:end="143:20">=</operator> <call pos:start="143:22" pos:end="143:43"><name pos:start="143:22" pos:end="143:38">qobject_to_qfloat</name><argument_list pos:start="143:39" pos:end="143:43">(<argument pos:start="143:40" pos:end="143:42"><expr pos:start="143:40" pos:end="143:42"><name pos:start="143:40" pos:end="143:42">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:67"><call pos:start="145:13" pos:end="145:67"><name pos:start="145:13" pos:end="145:27">g_string_printf</name><argument_list pos:start="145:28" pos:end="145:67">(<argument pos:start="145:29" pos:end="145:43"><expr pos:start="145:29" pos:end="145:43"><name pos:start="145:29" pos:end="145:43">double_expected</name></expr></argument>, <argument pos:start="145:46" pos:end="145:51"><expr pos:start="145:46" pos:end="145:51"><literal type="string" pos:start="145:46" pos:end="145:51">"%.6f"</literal></expr></argument>, <argument pos:start="145:54" pos:end="145:66"><expr pos:start="145:54" pos:end="145:66"><operator pos:start="145:54" pos:end="145:54">(</operator><name pos:start="145:55" pos:end="145:60">double</name><operator pos:start="145:61" pos:end="145:61">)</operator><name pos:start="145:62" pos:end="145:62">i</name> <operator pos:start="145:64" pos:end="145:64">/</operator> <literal type="number" pos:start="145:66" pos:end="145:66">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:78"><expr pos:start="147:13" pos:end="147:77"><call pos:start="147:13" pos:end="147:77"><name pos:start="147:13" pos:end="147:27">g_string_printf</name><argument_list pos:start="147:28" pos:end="147:77">(<argument pos:start="147:29" pos:end="147:41"><expr pos:start="147:29" pos:end="147:41"><name pos:start="147:29" pos:end="147:41">double_actual</name></expr></argument>, <argument pos:start="147:44" pos:end="147:49"><expr pos:start="147:44" pos:end="147:49"><literal type="string" pos:start="147:44" pos:end="147:49">"%.6f"</literal></expr></argument>, <argument pos:start="147:52" pos:end="147:76"><expr pos:start="147:52" pos:end="147:76"><call pos:start="147:52" pos:end="147:76"><name pos:start="147:52" pos:end="147:68">qfloat_get_double</name><argument_list pos:start="147:69" pos:end="147:76">(<argument pos:start="147:70" pos:end="147:75"><expr pos:start="147:70" pos:end="147:75"><name pos:start="147:70" pos:end="147:75">qvalue</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:74"><expr pos:start="149:13" pos:end="149:73"><call pos:start="149:13" pos:end="149:73"><name pos:start="149:13" pos:end="149:27">g_assert_cmpstr</name><argument_list pos:start="149:28" pos:end="149:73">(<argument pos:start="149:29" pos:end="149:46"><expr pos:start="149:29" pos:end="149:46"><name pos:start="149:29" pos:end="149:46"><name pos:start="149:29" pos:end="149:41">double_actual</name><operator pos:start="149:42" pos:end="149:43">-&gt;</operator><name pos:start="149:44" pos:end="149:46">str</name></name></expr></argument>, <argument pos:start="149:49" pos:end="149:50"><expr pos:start="149:49" pos:end="149:50"><operator pos:start="149:49" pos:end="149:50">==</operator></expr></argument>, <argument pos:start="149:53" pos:end="149:72"><expr pos:start="149:53" pos:end="149:72"><name pos:start="149:53" pos:end="149:72"><name pos:start="149:53" pos:end="149:67">double_expected</name><operator pos:start="149:68" pos:end="149:69">-&gt;</operator><name pos:start="149:70" pos:end="149:72">str</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="153:13" pos:end="153:45"><expr pos:start="153:13" pos:end="153:44"><call pos:start="153:13" pos:end="153:44"><name pos:start="153:13" pos:end="153:26">qobject_decref</name><argument_list pos:start="153:27" pos:end="153:44">(<argument pos:start="153:28" pos:end="153:43"><expr pos:start="153:28" pos:end="153:43"><call pos:start="153:28" pos:end="153:43"><name pos:start="153:28" pos:end="153:36">qlist_pop</name><argument_list pos:start="153:37" pos:end="153:43">(<argument pos:start="153:38" pos:end="153:42"><expr pos:start="153:38" pos:end="153:42"><name pos:start="153:38" pos:end="153:42">qlist</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:49"><expr pos:start="155:13" pos:end="155:48"><call pos:start="155:13" pos:end="155:48"><name pos:start="155:13" pos:end="155:25">g_string_free</name><argument_list pos:start="155:26" pos:end="155:48">(<argument pos:start="155:27" pos:end="155:41"><expr pos:start="155:27" pos:end="155:41"><name pos:start="155:27" pos:end="155:41">double_expected</name></expr></argument>, <argument pos:start="155:44" pos:end="155:47"><expr pos:start="155:44" pos:end="155:47"><name pos:start="155:44" pos:end="155:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:47"><expr pos:start="157:13" pos:end="157:46"><call pos:start="157:13" pos:end="157:46"><name pos:start="157:13" pos:end="157:25">g_string_free</name><argument_list pos:start="157:26" pos:end="157:46">(<argument pos:start="157:27" pos:end="157:39"><expr pos:start="157:27" pos:end="157:39"><name pos:start="157:27" pos:end="157:39">double_actual</name></expr></argument>, <argument pos:start="157:42" pos:end="157:45"><expr pos:start="157:42" pos:end="157:45"><name pos:start="157:42" pos:end="157:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    <default pos:start="163:5" pos:end="163:12">default:</default>

        <expr_stmt pos:start="165:9" pos:end="165:31"><expr pos:start="165:9" pos:end="165:30"><call pos:start="165:9" pos:end="165:30"><name pos:start="165:9" pos:end="165:28">g_assert_not_reached</name><argument_list pos:start="165:29" pos:end="165:30">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="169:5" pos:end="169:19"><expr pos:start="169:5" pos:end="169:18"><call pos:start="169:5" pos:end="169:18"><name pos:start="169:5" pos:end="169:11">QDECREF</name><argument_list pos:start="169:12" pos:end="169:18">(<argument pos:start="169:13" pos:end="169:17"><expr pos:start="169:13" pos:end="169:17"><name pos:start="169:13" pos:end="169:17">qlist</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
