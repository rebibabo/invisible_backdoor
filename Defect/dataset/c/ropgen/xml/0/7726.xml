<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7726.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">ff_thread_can_start_frame</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:44">AVCodecContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:51">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:13">

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">PerThreadContext</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:23">p</name> <init pos:start="5:25" pos:end="5:46">= <expr pos:start="5:27" pos:end="5:46"><name pos:start="5:27" pos:end="5:46"><name pos:start="5:27" pos:end="5:31">avctx</name><operator pos:start="5:32" pos:end="5:33">-&gt;</operator><name pos:start="5:34" pos:end="5:46">thread_opaque</name></name></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="15:5"><if pos:start="7:5" pos:end="15:5">if <condition pos:start="7:8" pos:end="11:66">(<expr pos:start="7:9" pos:end="11:65"><operator pos:start="7:9" pos:end="7:9">(</operator><name pos:start="7:10" pos:end="7:34"><name pos:start="7:10" pos:end="7:14">avctx</name><operator pos:start="7:15" pos:end="7:16">-&gt;</operator><name pos:start="7:17" pos:end="7:34">active_thread_type</name></name><operator pos:start="7:35" pos:end="7:35">&amp;</operator><name pos:start="7:36" pos:end="7:50">FF_THREAD_FRAME</name><operator pos:start="7:51" pos:end="7:51">)</operator> <operator pos:start="7:53" pos:end="7:54">&amp;&amp;</operator> <name pos:start="7:56" pos:end="7:63"><name pos:start="7:56" pos:end="7:56">p</name><operator pos:start="7:57" pos:end="7:58">-&gt;</operator><name pos:start="7:59" pos:end="7:63">state</name></name> <operator pos:start="7:65" pos:end="7:66">!=</operator> <name pos:start="7:68" pos:end="7:83">STATE_SETTING_UP</name> <operator pos:start="7:85" pos:end="7:86">&amp;&amp;</operator>

        <operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:44"><name pos:start="9:10" pos:end="9:14">avctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:21">codec</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:44">update_thread_context</name></name> <operator pos:start="9:46" pos:end="9:47">||</operator> <operator pos:start="9:49" pos:end="9:49">(</operator><operator pos:start="9:50" pos:end="9:50">!</operator><name pos:start="9:51" pos:end="9:78"><name pos:start="9:51" pos:end="9:55">avctx</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:78">thread_safe_callbacks</name></name> <operator pos:start="9:80" pos:end="9:81">&amp;&amp;</operator>

                <name pos:start="11:17" pos:end="11:33"><name pos:start="11:17" pos:end="11:21">avctx</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:33">get_buffer</name></name> <operator pos:start="11:35" pos:end="11:36">!=</operator> <name pos:start="11:38" pos:end="11:63">avcodec_default_get_buffer</name><operator pos:start="11:64" pos:end="11:64">)</operator><operator pos:start="11:65" pos:end="11:65">)</operator></expr>)</condition> <block pos:start="11:68" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="17:5" pos:end="17:13">return <expr pos:start="17:12" pos:end="17:12"><literal type="number" pos:start="17:12" pos:end="17:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
