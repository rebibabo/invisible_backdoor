<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11962.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">scsi_dma_restart_bh</name><parameter_list pos:start="1:32" pos:end="1:45">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:38"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">SCSIDevice</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:26">= <expr pos:start="5:21" pos:end="5:26"><name pos:start="5:21" pos:end="5:26">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">SCSIRequest</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">req</name></decl>, <decl pos:start="7:23" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:17"><modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:27">next</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:26"><expr pos:start="11:5" pos:end="11:25"><call pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:18">qemu_bh_delete</name><argument_list pos:start="11:19" pos:end="11:25">(<argument pos:start="11:20" pos:end="11:24"><expr pos:start="11:20" pos:end="11:24"><name pos:start="11:20" pos:end="11:24"><name pos:start="11:20" pos:end="11:20">s</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:24">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:17"><expr pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:9">bh</name></name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:16">NULL</name></expr>;</expr_stmt>



    <macro pos:start="17:5" pos:end="17:54"><name pos:start="17:5" pos:end="17:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="17:24" pos:end="17:54">(<argument pos:start="17:25" pos:end="17:27">req</argument>, <argument pos:start="17:30" pos:end="17:41">&amp;s-&gt;requests</argument>, <argument pos:start="17:44" pos:end="17:47">next</argument>, <argument pos:start="17:50" pos:end="17:53">next</argument>)</argument_list></macro> <block pos:start="17:56" pos:end="51:5">{<block_content pos:start="19:9" pos:end="49:28">

        <expr_stmt pos:start="19:9" pos:end="19:26"><expr pos:start="19:9" pos:end="19:25"><call pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:20">scsi_req_ref</name><argument_list pos:start="19:21" pos:end="19:25">(<argument pos:start="19:22" pos:end="19:24"><expr pos:start="19:22" pos:end="19:24"><name pos:start="19:22" pos:end="19:24">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="47:9"><if pos:start="21:9" pos:end="47:9">if <condition pos:start="21:12" pos:end="21:23">(<expr pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:15">req</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">retry</name></name></expr>)</condition> <block pos:start="21:25" pos:end="47:9">{<block_content pos:start="23:13" pos:end="45:13">

            <expr_stmt pos:start="23:13" pos:end="23:31"><expr pos:start="23:13" pos:end="23:30"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:15">req</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">retry</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:30">false</name></expr>;</expr_stmt>

            <switch pos:start="25:13" pos:end="45:13">switch <condition pos:start="25:20" pos:end="25:34">(<expr pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:33"><name pos:start="25:21" pos:end="25:23">req</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:28">cmd</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:33">mode</name></name></expr>)</condition> <block pos:start="25:36" pos:end="45:13">{<block_content pos:start="27:13" pos:end="43:22">

            <case pos:start="27:13" pos:end="27:36">case <expr pos:start="27:18" pos:end="27:35"><name pos:start="27:18" pos:end="27:35">SCSI_XFER_FROM_DEV</name></expr>:</case>

            <case pos:start="29:13" pos:end="29:34">case <expr pos:start="29:18" pos:end="29:33"><name pos:start="29:18" pos:end="29:33">SCSI_XFER_TO_DEV</name></expr>:</case>

                <expr_stmt pos:start="31:17" pos:end="31:39"><expr pos:start="31:17" pos:end="31:38"><call pos:start="31:17" pos:end="31:38"><name pos:start="31:17" pos:end="31:33">scsi_req_continue</name><argument_list pos:start="31:34" pos:end="31:38">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="33:17" pos:end="33:22">break;</break>

            <case pos:start="35:13" pos:end="35:32">case <expr pos:start="35:18" pos:end="35:31"><name pos:start="35:18" pos:end="35:31">SCSI_XFER_NONE</name></expr>:</case>

                <expr_stmt pos:start="37:17" pos:end="37:33"><expr pos:start="37:17" pos:end="37:32"><call pos:start="37:17" pos:end="37:32"><name pos:start="37:17" pos:end="37:22">assert</name><argument_list pos:start="37:23" pos:end="37:32">(<argument pos:start="37:24" pos:end="37:31"><expr pos:start="37:24" pos:end="37:31"><operator pos:start="37:24" pos:end="37:24">!</operator><name pos:start="37:25" pos:end="37:31"><name pos:start="37:25" pos:end="37:27">req</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:31">sg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:38"><expr pos:start="39:17" pos:end="39:37"><call pos:start="39:17" pos:end="39:37"><name pos:start="39:17" pos:end="39:32">scsi_req_dequeue</name><argument_list pos:start="39:33" pos:end="39:37">(<argument pos:start="39:34" pos:end="39:36"><expr pos:start="39:34" pos:end="39:36"><name pos:start="39:34" pos:end="39:36">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="41:17" pos:end="41:38"><expr pos:start="41:17" pos:end="41:37"><call pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:32">scsi_req_enqueue</name><argument_list pos:start="41:33" pos:end="41:37">(<argument pos:start="41:34" pos:end="41:36"><expr pos:start="41:34" pos:end="41:36"><name pos:start="41:34" pos:end="41:36">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="43:17" pos:end="43:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:28"><expr pos:start="49:9" pos:end="49:27"><call pos:start="49:9" pos:end="49:27"><name pos:start="49:9" pos:end="49:22">scsi_req_unref</name><argument_list pos:start="49:23" pos:end="49:27">(<argument pos:start="49:24" pos:end="49:26"><expr pos:start="49:24" pos:end="49:26"><name pos:start="49:24" pos:end="49:26">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
