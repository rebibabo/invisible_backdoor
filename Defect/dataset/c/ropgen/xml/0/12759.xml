<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12759.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">curl_readv_bh_cb</name><parameter_list pos:start="1:29" pos:end="1:37">(<parameter pos:start="1:30" pos:end="1:36"><decl pos:start="1:30" pos:end="1:36"><type pos:start="1:30" pos:end="1:35"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="103:21">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CURLState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">state</name></decl>;</decl_stmt>



    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">CURLAIOCB</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:18">acb</name> <init pos:start="9:20" pos:end="9:22">= <expr pos:start="9:22" pos:end="9:22"><name pos:start="9:22" pos:end="9:22">p</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">BDRVCURLState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:20">s</name> <init pos:start="11:22" pos:end="11:45">= <expr pos:start="11:24" pos:end="11:45"><name pos:start="11:24" pos:end="11:45"><name pos:start="11:24" pos:end="11:26">acb</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:34">common</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:37">bs</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:45">opaque</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:28"><expr pos:start="15:5" pos:end="15:27"><call pos:start="15:5" pos:end="15:27"><name pos:start="15:5" pos:end="15:18">qemu_bh_delete</name><argument_list pos:start="15:19" pos:end="15:27">(<argument pos:start="15:20" pos:end="15:26"><expr pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:22">acb</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:26">bh</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:7">acb</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:11">bh</name></name> <operator pos:start="17:13" pos:end="17:13">=</operator> <name pos:start="17:15" pos:end="17:18">NULL</name></expr>;</expr_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:49"><decl pos:start="21:5" pos:end="21:48"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">size_t</name></type> <name pos:start="21:12" pos:end="21:16">start</name> <init pos:start="21:18" pos:end="21:48">= <expr pos:start="21:20" pos:end="21:48"><name pos:start="21:20" pos:end="21:34"><name pos:start="21:20" pos:end="21:22">acb</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:34">sector_num</name></name> <operator pos:start="21:36" pos:end="21:36">*</operator> <name pos:start="21:38" pos:end="21:48">SECTOR_SIZE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:10">size_t</name></type> <name pos:start="23:12" pos:end="23:14">end</name></decl>;</decl_stmt>



    <comment type="line" pos:start="27:5" pos:end="27:68">// In case we have the requested data already (e.g. read-ahead),</comment>

    <comment type="line" pos:start="29:5" pos:end="29:49">// we can just call the callback and be done.</comment>

    <switch pos:start="31:5" pos:end="47:5">switch <condition pos:start="31:12" pos:end="31:72">(<expr pos:start="31:13" pos:end="31:71"><call pos:start="31:13" pos:end="31:71"><name pos:start="31:13" pos:end="31:25">curl_find_buf</name><argument_list pos:start="31:26" pos:end="31:71">(<argument pos:start="31:27" pos:end="31:27"><expr pos:start="31:27" pos:end="31:27"><name pos:start="31:27" pos:end="31:27">s</name></expr></argument>, <argument pos:start="31:30" pos:end="31:34"><expr pos:start="31:30" pos:end="31:34"><name pos:start="31:30" pos:end="31:34">start</name></expr></argument>, <argument pos:start="31:37" pos:end="31:65"><expr pos:start="31:37" pos:end="31:65"><name pos:start="31:37" pos:end="31:51"><name pos:start="31:37" pos:end="31:39">acb</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:51">nb_sectors</name></name> <operator pos:start="31:53" pos:end="31:53">*</operator> <name pos:start="31:55" pos:end="31:65">SECTOR_SIZE</name></expr></argument>, <argument pos:start="31:68" pos:end="31:70"><expr pos:start="31:68" pos:end="31:70"><name pos:start="31:68" pos:end="31:70">acb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="31:74" pos:end="47:5">{<block_content pos:start="33:9" pos:end="45:18">

        <case pos:start="33:9" pos:end="33:25">case <expr pos:start="33:14" pos:end="33:24"><name pos:start="33:14" pos:end="33:24">FIND_RET_OK</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:34"><expr pos:start="35:13" pos:end="35:33"><call pos:start="35:13" pos:end="35:33"><name pos:start="35:13" pos:end="35:28">qemu_aio_release</name><argument_list pos:start="35:29" pos:end="35:33">(<argument pos:start="35:30" pos:end="35:32"><expr pos:start="35:30" pos:end="35:32"><name pos:start="35:30" pos:end="35:32">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="line" pos:start="37:13" pos:end="37:27">// fall through</comment>

        <case pos:start="39:9" pos:end="39:27">case <expr pos:start="39:14" pos:end="39:26"><name pos:start="39:14" pos:end="39:26">FIND_RET_WAIT</name></expr>:</case>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        <default pos:start="43:9" pos:end="43:16">default:</default>

            <break pos:start="45:13" pos:end="45:18">break;</break>

    </block_content>}</block></switch>



    <comment type="line" pos:start="51:5" pos:end="51:51">// No cache found, so let's start a new request</comment>

    <expr_stmt pos:start="53:5" pos:end="53:31"><expr pos:start="53:5" pos:end="53:30"><name pos:start="53:5" pos:end="53:9">state</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <call pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:27">curl_init_state</name><argument_list pos:start="53:28" pos:end="53:30">(<argument pos:start="53:29" pos:end="53:29"><expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:15">(<expr pos:start="55:9" pos:end="55:14"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:14">state</name></expr>)</condition> <block pos:start="55:17" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:15">

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><call pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:22"><name pos:start="57:9" pos:end="57:11">acb</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:19">common</name><operator pos:start="57:20" pos:end="57:20">.</operator><name pos:start="57:21" pos:end="57:22">cb</name></name><argument_list pos:start="57:23" pos:end="57:48">(<argument pos:start="57:24" pos:end="57:41"><expr pos:start="57:24" pos:end="57:41"><name pos:start="57:24" pos:end="57:41"><name pos:start="57:24" pos:end="57:26">acb</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:34">common</name><operator pos:start="57:35" pos:end="57:35">.</operator><name pos:start="57:36" pos:end="57:41">opaque</name></name></expr></argument>, <argument pos:start="57:44" pos:end="57:47"><expr pos:start="57:44" pos:end="57:47"><operator pos:start="57:44" pos:end="57:44">-</operator><name pos:start="57:45" pos:end="57:47">EIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:30"><expr pos:start="59:9" pos:end="59:29"><call pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:24">qemu_aio_release</name><argument_list pos:start="59:25" pos:end="59:29">(<argument pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:28">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">acb</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">start</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:47"><expr pos:start="69:5" pos:end="69:46"><name pos:start="69:5" pos:end="69:12"><name pos:start="69:5" pos:end="69:7">acb</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:12">end</name></name> <operator pos:start="69:14" pos:end="69:14">=</operator> <operator pos:start="69:16" pos:end="69:16">(</operator><name pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:19">acb</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:31">nb_sectors</name></name> <operator pos:start="69:33" pos:end="69:33">*</operator> <name pos:start="69:35" pos:end="69:45">SECTOR_SIZE</name><operator pos:start="69:46" pos:end="69:46">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:18"><name pos:start="73:5" pos:end="73:9">state</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:18">buf_off</name></name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="75:5" pos:end="77:32"><if pos:start="75:5" pos:end="77:32">if <condition pos:start="75:8" pos:end="75:24">(<expr pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:23"><name pos:start="75:9" pos:end="75:13">state</name><operator pos:start="75:14" pos:end="75:15">-&gt;</operator><name pos:start="75:16" pos:end="75:23">orig_buf</name></name></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:32"><block_content pos:start="77:9" pos:end="77:32">

        <expr_stmt pos:start="77:9" pos:end="77:32"><expr pos:start="77:9" pos:end="77:31"><call pos:start="77:9" pos:end="77:31"><name pos:start="77:9" pos:end="77:14">g_free</name><argument_list pos:start="77:15" pos:end="77:31">(<argument pos:start="77:16" pos:end="77:30"><expr pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:30"><name pos:start="77:16" pos:end="77:20">state</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:30">orig_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:29"><expr pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:20"><name pos:start="79:5" pos:end="79:9">state</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">buf_start</name></name> <operator pos:start="79:22" pos:end="79:22">=</operator> <name pos:start="79:24" pos:end="79:28">start</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:50"><expr pos:start="81:5" pos:end="81:49"><name pos:start="81:5" pos:end="81:18"><name pos:start="81:5" pos:end="81:9">state</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:18">buf_len</name></name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:24">acb</name><operator pos:start="81:25" pos:end="81:26">-&gt;</operator><name pos:start="81:27" pos:end="81:29">end</name></name> <operator pos:start="81:31" pos:end="81:31">+</operator> <name pos:start="81:33" pos:end="81:49"><name pos:start="81:33" pos:end="81:33">s</name><operator pos:start="81:34" pos:end="81:35">-&gt;</operator><name pos:start="81:36" pos:end="81:49">readahead_size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:50"><expr pos:start="83:5" pos:end="83:49"><name pos:start="83:5" pos:end="83:7">end</name> <operator pos:start="83:9" pos:end="83:9">=</operator> <call pos:start="83:11" pos:end="83:45"><name pos:start="83:11" pos:end="83:13">MIN</name><argument_list pos:start="83:14" pos:end="83:45">(<argument pos:start="83:15" pos:end="83:36"><expr pos:start="83:15" pos:end="83:36"><name pos:start="83:15" pos:end="83:19">start</name> <operator pos:start="83:21" pos:end="83:21">+</operator> <name pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:27">state</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:36">buf_len</name></name></expr></argument>, <argument pos:start="83:39" pos:end="83:44"><expr pos:start="83:39" pos:end="83:44"><name pos:start="83:39" pos:end="83:44"><name pos:start="83:39" pos:end="83:39">s</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:44">len</name></name></expr></argument>)</argument_list></call> <operator pos:start="83:47" pos:end="83:47">-</operator> <literal type="number" pos:start="83:49" pos:end="83:49">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:47"><expr pos:start="85:5" pos:end="85:46"><name pos:start="85:5" pos:end="85:19"><name pos:start="85:5" pos:end="85:9">state</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:19">orig_buf</name></name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:46"><name pos:start="85:23" pos:end="85:30">g_malloc</name><argument_list pos:start="85:31" pos:end="85:46">(<argument pos:start="85:32" pos:end="85:45"><expr pos:start="85:32" pos:end="85:45"><name pos:start="85:32" pos:end="85:45"><name pos:start="85:32" pos:end="85:36">state</name><operator pos:start="85:37" pos:end="85:38">-&gt;</operator><name pos:start="85:39" pos:end="85:45">buf_len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:24"><expr pos:start="87:5" pos:end="87:23"><name pos:start="87:5" pos:end="87:17"><name pos:start="87:5" pos:end="87:9">state</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">acb</name><index pos:start="87:15" pos:end="87:17">[<expr pos:start="87:16" pos:end="87:16"><literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>]</index></name> <operator pos:start="87:19" pos:end="87:19">=</operator> <name pos:start="87:21" pos:end="87:23">acb</name></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:55"><expr pos:start="91:5" pos:end="91:54"><call pos:start="91:5" pos:end="91:54"><name pos:start="91:5" pos:end="91:12">snprintf</name><argument_list pos:start="91:13" pos:end="91:54">(<argument pos:start="91:14" pos:end="91:25"><expr pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:25"><name pos:start="91:14" pos:end="91:18">state</name><operator pos:start="91:19" pos:end="91:20">-&gt;</operator><name pos:start="91:21" pos:end="91:25">range</name></name></expr></argument>, <argument pos:start="91:28" pos:end="91:30"><expr pos:start="91:28" pos:end="91:30"><literal type="number" pos:start="91:28" pos:end="91:30">127</literal></expr></argument>, <argument pos:start="91:33" pos:end="91:41"><expr pos:start="91:33" pos:end="91:41"><literal type="string" pos:start="91:33" pos:end="91:41">"%zd-%zd"</literal></expr></argument>, <argument pos:start="91:44" pos:end="91:48"><expr pos:start="91:44" pos:end="91:48"><name pos:start="91:44" pos:end="91:48">start</name></expr></argument>, <argument pos:start="91:51" pos:end="91:53"><expr pos:start="91:51" pos:end="91:53"><name pos:start="91:51" pos:end="91:53">end</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="95:66"><expr pos:start="93:5" pos:end="95:65"><call pos:start="93:5" pos:end="95:65"><name pos:start="93:5" pos:end="93:11">DPRINTF</name><argument_list pos:start="93:12" pos:end="95:65">(<argument pos:start="93:13" pos:end="93:50"><expr pos:start="93:13" pos:end="93:50"><literal type="string" pos:start="93:13" pos:end="93:50">"CURL (AIO): Reading %d at %zd (%s)\n"</literal></expr></argument>,

            <argument pos:start="95:13" pos:end="95:43"><expr pos:start="95:13" pos:end="95:43"><operator pos:start="95:13" pos:end="95:13">(</operator><name pos:start="95:14" pos:end="95:28"><name pos:start="95:14" pos:end="95:16">acb</name><operator pos:start="95:17" pos:end="95:18">-&gt;</operator><name pos:start="95:19" pos:end="95:28">nb_sectors</name></name> <operator pos:start="95:30" pos:end="95:30">*</operator> <name pos:start="95:32" pos:end="95:42">SECTOR_SIZE</name><operator pos:start="95:43" pos:end="95:43">)</operator></expr></argument>, <argument pos:start="95:46" pos:end="95:50"><expr pos:start="95:46" pos:end="95:50"><name pos:start="95:46" pos:end="95:50">start</name></expr></argument>, <argument pos:start="95:53" pos:end="95:64"><expr pos:start="95:53" pos:end="95:64"><name pos:start="95:53" pos:end="95:64"><name pos:start="95:53" pos:end="95:57">state</name><operator pos:start="95:58" pos:end="95:59">-&gt;</operator><name pos:start="95:60" pos:end="95:64">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:63"><expr pos:start="97:5" pos:end="97:62"><call pos:start="97:5" pos:end="97:62"><name pos:start="97:5" pos:end="97:20">curl_easy_setopt</name><argument_list pos:start="97:21" pos:end="97:62">(<argument pos:start="97:22" pos:end="97:32"><expr pos:start="97:22" pos:end="97:32"><name pos:start="97:22" pos:end="97:32"><name pos:start="97:22" pos:end="97:26">state</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:32">curl</name></name></expr></argument>, <argument pos:start="97:35" pos:end="97:47"><expr pos:start="97:35" pos:end="97:47"><name pos:start="97:35" pos:end="97:47">CURLOPT_RANGE</name></expr></argument>, <argument pos:start="97:50" pos:end="97:61"><expr pos:start="97:50" pos:end="97:61"><name pos:start="97:50" pos:end="97:61"><name pos:start="97:50" pos:end="97:54">state</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:61">range</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:49"><expr pos:start="101:5" pos:end="101:48"><call pos:start="101:5" pos:end="101:48"><name pos:start="101:5" pos:end="101:25">curl_multi_add_handle</name><argument_list pos:start="101:26" pos:end="101:48">(<argument pos:start="101:27" pos:end="101:34"><expr pos:start="101:27" pos:end="101:34"><name pos:start="101:27" pos:end="101:34"><name pos:start="101:27" pos:end="101:27">s</name><operator pos:start="101:28" pos:end="101:29">-&gt;</operator><name pos:start="101:30" pos:end="101:34">multi</name></name></expr></argument>, <argument pos:start="101:37" pos:end="101:47"><expr pos:start="101:37" pos:end="101:47"><name pos:start="101:37" pos:end="101:47"><name pos:start="101:37" pos:end="101:41">state</name><operator pos:start="101:42" pos:end="101:43">-&gt;</operator><name pos:start="101:44" pos:end="101:47">curl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><call pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:17">curl_multi_do</name><argument_list pos:start="103:18" pos:end="103:20">(<argument pos:start="103:19" pos:end="103:19"><expr pos:start="103:19" pos:end="103:19"><name pos:start="103:19" pos:end="103:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



</block_content>}</block></function>
</unit>
