<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/905.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:31">ff_h264_decode_init</name><parameter_list pos:start="1:32" pos:end="1:54">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:48"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">H264Context</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">h</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:7">ret</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:37"><name pos:start="11:11" pos:end="11:27">h264_init_context</name><argument_list pos:start="11:28" pos:end="11:37">(<argument pos:start="11:29" pos:end="11:33"><expr pos:start="11:29" pos:end="11:33"><name pos:start="11:29" pos:end="11:33">avctx</name></expr></argument>, <argument pos:start="11:36" pos:end="11:36"><expr pos:start="11:36" pos:end="11:36"><name pos:start="11:36" pos:end="11:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:19"><if pos:start="13:5" pos:end="15:19">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><name pos:start="13:9" pos:end="13:11">ret</name> <operator pos:start="13:13" pos:end="13:13">&lt;</operator> <literal type="number" pos:start="13:15" pos:end="13:15">0</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:19"><block_content pos:start="15:9" pos:end="15:19">

        <return pos:start="15:9" pos:end="15:19">return <expr pos:start="15:16" pos:end="15:18"><name pos:start="15:16" pos:end="15:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:65"><expr pos:start="19:5" pos:end="19:64"><call pos:start="19:5" pos:end="19:64"><name pos:start="19:5" pos:end="19:10">memset</name><argument_list pos:start="19:11" pos:end="19:64">(<argument pos:start="19:12" pos:end="19:33"><expr pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:33"><name pos:start="19:12" pos:end="19:12">h</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:17">pps</name><operator pos:start="19:18" pos:end="19:18">.</operator><name pos:start="19:19" pos:end="19:33">scaling_matrix4</name></name></expr></argument>, <argument pos:start="19:36" pos:end="19:37"><expr pos:start="19:36" pos:end="19:37"><literal type="number" pos:start="19:36" pos:end="19:37">16</literal></expr></argument>, <argument pos:start="19:40" pos:end="19:63"><expr pos:start="19:40" pos:end="19:63"><literal type="number" pos:start="19:40" pos:end="19:40">6</literal> <operator pos:start="19:42" pos:end="19:42">*</operator> <literal type="number" pos:start="19:44" pos:end="19:45">16</literal> <operator pos:start="19:47" pos:end="19:47">*</operator> <sizeof pos:start="19:49" pos:end="19:63">sizeof<argument_list pos:start="19:55" pos:end="19:63">(<argument pos:start="19:56" pos:end="19:62"><expr pos:start="19:56" pos:end="19:62"><name pos:start="19:56" pos:end="19:62">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:65"><expr pos:start="21:5" pos:end="21:64"><call pos:start="21:5" pos:end="21:64"><name pos:start="21:5" pos:end="21:10">memset</name><argument_list pos:start="21:11" pos:end="21:64">(<argument pos:start="21:12" pos:end="21:33"><expr pos:start="21:12" pos:end="21:33"><name pos:start="21:12" pos:end="21:33"><name pos:start="21:12" pos:end="21:12">h</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:17">pps</name><operator pos:start="21:18" pos:end="21:18">.</operator><name pos:start="21:19" pos:end="21:33">scaling_matrix8</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:37"><expr pos:start="21:36" pos:end="21:37"><literal type="number" pos:start="21:36" pos:end="21:37">16</literal></expr></argument>, <argument pos:start="21:40" pos:end="21:63"><expr pos:start="21:40" pos:end="21:63"><literal type="number" pos:start="21:40" pos:end="21:40">2</literal> <operator pos:start="21:42" pos:end="21:42">*</operator> <literal type="number" pos:start="21:44" pos:end="21:45">64</literal> <operator pos:start="21:47" pos:end="21:47">*</operator> <sizeof pos:start="21:49" pos:end="21:63">sizeof<argument_list pos:start="21:55" pos:end="21:63">(<argument pos:start="21:56" pos:end="21:62"><expr pos:start="21:56" pos:end="21:62"><name pos:start="21:56" pos:end="21:62">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="25:22">/* set defaults */</comment>

    <comment type="line" pos:start="27:5" pos:end="27:40">// s-&gt;decode_mb = ff_h263_decode_mb;</comment>

    <if_stmt pos:start="29:5" pos:end="31:25"><if pos:start="29:5" pos:end="31:25">if <condition pos:start="29:8" pos:end="29:29">(<expr pos:start="29:9" pos:end="29:28"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:28"><name pos:start="29:10" pos:end="29:14">avctx</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:28">has_b_frames</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:25"><block_content pos:start="31:9" pos:end="31:25">

        <expr_stmt pos:start="31:9" pos:end="31:25"><expr pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">h</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:20">low_delay</name></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <literal type="number" pos:start="31:24" pos:end="31:24">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:30"><expr pos:start="35:5" pos:end="35:29"><call pos:start="35:5" pos:end="35:29"><name pos:start="35:5" pos:end="35:27">ff_h264_decode_init_vlc</name><argument_list pos:start="35:28" pos:end="35:29">()</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:24">ff_init_cabac_states</name><argument_list pos:start="39:25" pos:end="39:26">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:44">(<expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:23"><name pos:start="43:9" pos:end="43:13">avctx</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:23">codec_id</name></name> <operator pos:start="43:25" pos:end="43:26">==</operator> <name pos:start="43:28" pos:end="43:43">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="43:46" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:35">

        <if_stmt pos:start="45:9" pos:end="47:41"><if pos:start="45:9" pos:end="47:41">if <condition pos:start="45:12" pos:end="45:40">(<expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:17">avctx</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:34">ticks_per_frame</name></name> <operator pos:start="45:36" pos:end="45:37">==</operator> <literal type="number" pos:start="45:39" pos:end="45:39">1</literal></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:41"><block_content pos:start="47:13" pos:end="47:41">

            <expr_stmt pos:start="47:13" pos:end="47:41"><expr pos:start="47:13" pos:end="47:40"><name pos:start="47:13" pos:end="47:35"><name pos:start="47:13" pos:end="47:13">h</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">avctx</name><operator pos:start="47:21" pos:end="47:22">-&gt;</operator><name pos:start="47:23" pos:end="47:31">framerate</name><operator pos:start="47:32" pos:end="47:32">.</operator><name pos:start="47:33" pos:end="47:35">num</name></name> <operator pos:start="47:37" pos:end="47:38">*=</operator> <literal type="number" pos:start="47:40" pos:end="47:40">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:13">avctx</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:30">ticks_per_frame</name></name> <operator pos:start="49:32" pos:end="49:32">=</operator> <literal type="number" pos:start="49:34" pos:end="49:34">2</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="67:5"><if pos:start="55:5" pos:end="67:5">if <condition pos:start="55:8" pos:end="55:54">(<expr pos:start="55:9" pos:end="55:53"><name pos:start="55:9" pos:end="55:29"><name pos:start="55:9" pos:end="55:13">avctx</name><operator pos:start="55:14" pos:end="55:15">-&gt;</operator><name pos:start="55:16" pos:end="55:29">extradata_size</name></name> <operator pos:start="55:31" pos:end="55:31">&gt;</operator> <literal type="number" pos:start="55:33" pos:end="55:33">0</literal> <operator pos:start="55:35" pos:end="55:36">&amp;&amp;</operator> <name pos:start="55:38" pos:end="55:53"><name pos:start="55:38" pos:end="55:42">avctx</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:53">extradata</name></name></expr>)</condition> <block pos:start="55:56" pos:end="67:5">{<block_content pos:start="57:8" pos:end="65:8">

       <expr_stmt pos:start="57:8" pos:end="57:41"><expr pos:start="57:8" pos:end="57:40"><name pos:start="57:8" pos:end="57:10">ret</name> <operator pos:start="57:12" pos:end="57:12">=</operator> <call pos:start="57:14" pos:end="57:40"><name pos:start="57:14" pos:end="57:37">ff_h264_decode_extradata</name><argument_list pos:start="57:38" pos:end="57:40">(<argument pos:start="57:39" pos:end="57:39"><expr pos:start="57:39" pos:end="57:39"><name pos:start="57:39" pos:end="57:39">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

       <if_stmt pos:start="59:8" pos:end="65:8"><if pos:start="59:8" pos:end="65:8">if <condition pos:start="59:11" pos:end="59:19">(<expr pos:start="59:12" pos:end="59:18"><name pos:start="59:12" pos:end="59:14">ret</name> <operator pos:start="59:16" pos:end="59:16">&lt;</operator> <literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>)</condition> <block pos:start="59:21" pos:end="65:8">{<block_content pos:start="61:12" pos:end="63:22">

           <expr_stmt pos:start="61:12" pos:end="61:35"><expr pos:start="61:12" pos:end="61:34"><call pos:start="61:12" pos:end="61:34"><name pos:start="61:12" pos:end="61:31">ff_h264_free_context</name><argument_list pos:start="61:32" pos:end="61:34">(<argument pos:start="61:33" pos:end="61:33"><expr pos:start="61:33" pos:end="61:33"><name pos:start="61:33" pos:end="61:33">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

           <return pos:start="63:12" pos:end="63:22">return <expr pos:start="63:19" pos:end="63:21"><name pos:start="63:19" pos:end="63:21">ret</name></expr>;</return>

       </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="71:5" pos:end="79:5"><if pos:start="71:5" pos:end="79:5">if <condition pos:start="71:8" pos:end="73:59">(<expr pos:start="71:9" pos:end="73:58"><name pos:start="71:9" pos:end="71:41"><name pos:start="71:9" pos:end="71:9">h</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:14">sps</name><operator pos:start="71:15" pos:end="71:15">.</operator><name pos:start="71:16" pos:end="71:41">bitstream_restriction_flag</name></name> <operator pos:start="71:43" pos:end="71:44">&amp;&amp;</operator>

        <name pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:9">h</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:16">avctx</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:30">has_b_frames</name></name> <operator pos:start="73:32" pos:end="73:32">&lt;</operator> <name pos:start="73:34" pos:end="73:58"><name pos:start="73:34" pos:end="73:34">h</name><operator pos:start="73:35" pos:end="73:36">-&gt;</operator><name pos:start="73:37" pos:end="73:39">sps</name><operator pos:start="73:40" pos:end="73:40">.</operator><name pos:start="73:41" pos:end="73:58">num_reorder_frames</name></name></expr>)</condition> <block pos:start="73:61" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:35">

        <expr_stmt pos:start="75:9" pos:end="75:59"><expr pos:start="75:9" pos:end="75:58"><name pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:9">h</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:16">avctx</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:30">has_b_frames</name></name> <operator pos:start="75:32" pos:end="75:32">=</operator> <name pos:start="75:34" pos:end="75:58"><name pos:start="75:34" pos:end="75:34">h</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:39">sps</name><operator pos:start="75:40" pos:end="75:40">.</operator><name pos:start="75:41" pos:end="75:58">num_reorder_frames</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:35"><expr pos:start="77:9" pos:end="77:34"><name pos:start="77:9" pos:end="77:20"><name pos:start="77:9" pos:end="77:9">h</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:20">low_delay</name></name>           <operator pos:start="77:32" pos:end="77:32">=</operator> <literal type="number" pos:start="77:34" pos:end="77:34">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:38"><name pos:start="83:5" pos:end="83:9">avctx</name><operator pos:start="83:10" pos:end="83:11">-&gt;</operator><name pos:start="83:12" pos:end="83:19">internal</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:38">allocate_progress</name></name> <operator pos:start="83:40" pos:end="83:40">=</operator> <literal type="number" pos:start="83:42" pos:end="83:42">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:21">(<expr pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:20"><name pos:start="87:9" pos:end="87:9">h</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:20">enable_er</name></name></expr>)</condition> <block pos:start="87:23" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:44">

        <expr_stmt pos:start="89:9" pos:end="93:44"><expr pos:start="89:9" pos:end="93:43"><call pos:start="89:9" pos:end="93:43"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="93:43">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:36"><expr pos:start="89:23" pos:end="89:36"><name pos:start="89:23" pos:end="89:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="91:16" pos:end="93:42"><expr pos:start="91:16" pos:end="93:42"><literal type="string" pos:start="91:16" pos:end="91:90">"Error resilience is enabled. It is unsafe and unsupported and may crash. "</literal>

               <literal type="string" pos:start="93:16" pos:end="93:42">"Use it at your own risk\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
