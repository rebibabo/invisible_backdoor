<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10514.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:50">vaapi_encode_h264_init_internal</name><parameter_list pos:start="1:51" pos:end="1:73">(<parameter pos:start="1:52" pos:end="1:72"><decl pos:start="1:52" pos:end="1:72"><type pos:start="1:52" pos:end="1:67"><name pos:start="1:52" pos:end="1:65">AVCodecContext</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:72">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:13">

    <decl_stmt pos:start="5:5" pos:end="17:6"><decl pos:start="5:5" pos:end="17:5"><type pos:start="5:5" pos:end="5:31"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:31">VAConfigAttrib</name></type> <name pos:start="5:33" pos:end="5:59"><name pos:start="5:33" pos:end="5:57">default_config_attributes</name><index pos:start="5:58" pos:end="5:59">[]</index></name> <init pos:start="5:61" pos:end="17:5">= <expr pos:start="5:63" pos:end="17:5"><block pos:start="5:63" pos:end="17:5">{

        <expr pos:start="7:9" pos:end="9:40"><block pos:start="7:9" pos:end="9:40">{ <expr pos:start="7:11" pos:end="7:41"><operator pos:start="7:11" pos:end="7:11">.</operator><name pos:start="7:12" pos:end="7:15">type</name>  <operator pos:start="7:18" pos:end="7:18">=</operator> <name pos:start="7:20" pos:end="7:41">VAConfigAttribRTFormat</name></expr>,

          <expr pos:start="9:11" pos:end="9:38"><operator pos:start="9:11" pos:end="9:11">.</operator><name pos:start="9:12" pos:end="9:16">value</name> <operator pos:start="9:18" pos:end="9:18">=</operator> <name pos:start="9:20" pos:end="9:38">VA_RT_FORMAT_YUV420</name></expr> }</block></expr>,

        <expr pos:start="11:9" pos:end="15:49"><block pos:start="11:9" pos:end="15:49">{ <expr pos:start="11:11" pos:end="11:49"><operator pos:start="11:11" pos:end="11:11">.</operator><name pos:start="11:12" pos:end="11:15">type</name>  <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:49">VAConfigAttribEncPackedHeaders</name></expr>,

          <expr pos:start="13:11" pos:end="15:47"><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:16">value</name> <operator pos:start="13:18" pos:end="13:18">=</operator> <operator pos:start="13:20" pos:end="13:20">(</operator><name pos:start="13:21" pos:end="13:49">VA_ENC_PACKED_HEADER_SEQUENCE</name> <operator pos:start="13:51" pos:end="13:51">|</operator>

                    <name pos:start="15:21" pos:end="15:46">VA_ENC_PACKED_HEADER_SLICE</name><operator pos:start="15:47" pos:end="15:47">)</operator></expr> }</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:52"><decl pos:start="21:5" pos:end="21:51"><type pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:22">VAAPIEncodeContext</name>      <modifier pos:start="21:29" pos:end="21:29">*</modifier></type><name pos:start="21:30" pos:end="21:32">ctx</name> <init pos:start="21:34" pos:end="21:51">= <expr pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:51"><name pos:start="21:36" pos:end="21:40">avctx</name><operator pos:start="21:41" pos:end="21:42">-&gt;</operator><name pos:start="21:43" pos:end="21:51">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:50"><decl pos:start="23:5" pos:end="23:49"><type pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:26">VAAPIEncodeH264Context</name> <modifier pos:start="23:28" pos:end="23:28">*</modifier></type><name pos:start="23:29" pos:end="23:32">priv</name> <init pos:start="23:34" pos:end="23:49">= <expr pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:49"><name pos:start="23:36" pos:end="23:38">ctx</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:49">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:54"><decl pos:start="25:5" pos:end="25:53"><type pos:start="25:5" pos:end="25:29"><name pos:start="25:5" pos:end="25:26">VAAPIEncodeH264Options</name>  <modifier pos:start="25:29" pos:end="25:29">*</modifier></type><name pos:start="25:30" pos:end="25:32">opt</name> <init pos:start="25:34" pos:end="25:53">= <expr pos:start="25:36" pos:end="25:53"><name pos:start="25:36" pos:end="25:53"><name pos:start="25:36" pos:end="25:38">ctx</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:53">codec_options</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:15"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>, <decl pos:start="27:12" pos:end="27:14"><type ref="prev" pos:start="27:5" pos:end="27:7"/><name pos:start="27:12" pos:end="27:14">err</name></decl>;</decl_stmt>



    <switch pos:start="31:5" pos:end="103:5">switch <condition pos:start="31:12" pos:end="31:27">(<expr pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:17">avctx</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:26">profile</name></name></expr>)</condition> <block pos:start="31:29" pos:end="103:5">{<block_content pos:start="33:5" pos:end="101:31">

    <case pos:start="33:5" pos:end="33:46">case <expr pos:start="33:10" pos:end="33:45"><name pos:start="33:10" pos:end="33:45">FF_PROFILE_H264_CONSTRAINED_BASELINE</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:11">ctx</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:23">va_profile</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:58">VAProfileH264ConstrainedBaseline</name></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:34">case <expr pos:start="39:10" pos:end="39:33"><name pos:start="39:10" pos:end="39:33">FF_PROFILE_H264_BASELINE</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:48"><expr pos:start="41:9" pos:end="41:47"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">ctx</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:23">va_profile</name></name> <operator pos:start="41:25" pos:end="41:25">=</operator> <name pos:start="41:27" pos:end="41:47">VAProfileH264Baseline</name></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:30">case <expr pos:start="45:10" pos:end="45:29"><name pos:start="45:10" pos:end="45:29">FF_PROFILE_H264_MAIN</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:44"><expr pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:23">va_profile</name></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:43">VAProfileH264Main</name></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:34">case <expr pos:start="51:10" pos:end="51:33"><name pos:start="51:10" pos:end="51:33">FF_PROFILE_H264_EXTENDED</name></expr>:</case>

        <expr_stmt pos:start="53:9" pos:end="55:38"><expr pos:start="53:9" pos:end="55:37"><call pos:start="53:9" pos:end="55:37"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:37">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="53:37" pos:end="55:36"><expr pos:start="53:37" pos:end="55:36"><literal type="string" pos:start="53:37" pos:end="53:61">"H.264 extended profile "</literal>

               <literal type="string" pos:start="55:16" pos:end="55:36">"is not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:36">return <expr pos:start="57:16" pos:end="57:35"><name pos:start="57:16" pos:end="57:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    <case pos:start="59:5" pos:end="59:28">case <expr pos:start="59:10" pos:end="59:27"><name pos:start="59:10" pos:end="59:27">FF_PROFILE_UNKNOWN</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:30">case <expr pos:start="61:10" pos:end="61:29"><name pos:start="61:10" pos:end="61:29">FF_PROFILE_H264_HIGH</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:44"><expr pos:start="63:9" pos:end="63:43"><name pos:start="63:9" pos:end="63:23"><name pos:start="63:9" pos:end="63:11">ctx</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:23">va_profile</name></name> <operator pos:start="63:25" pos:end="63:25">=</operator> <name pos:start="63:27" pos:end="63:43">VAProfileH264High</name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:33">case <expr pos:start="67:10" pos:end="67:32"><name pos:start="67:10" pos:end="67:32">FF_PROFILE_H264_HIGH_10</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:39">case <expr pos:start="69:10" pos:end="69:38"><name pos:start="69:10" pos:end="69:38">FF_PROFILE_H264_HIGH_10_INTRA</name></expr>:</case>

        <expr_stmt pos:start="71:9" pos:end="73:39"><expr pos:start="71:9" pos:end="73:38"><call pos:start="71:9" pos:end="73:38"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="73:38">(<argument pos:start="71:16" pos:end="71:20"><expr pos:start="71:16" pos:end="71:20"><name pos:start="71:16" pos:end="71:20">avctx</name></expr></argument>, <argument pos:start="71:23" pos:end="71:34"><expr pos:start="71:23" pos:end="71:34"><name pos:start="71:23" pos:end="71:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:37" pos:end="73:37"><expr pos:start="71:37" pos:end="73:37"><literal type="string" pos:start="71:37" pos:end="71:60">"H.264 10-bit profiles "</literal>

               <literal type="string" pos:start="73:16" pos:end="73:37">"are not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:36">return <expr pos:start="75:16" pos:end="75:35"><name pos:start="75:16" pos:end="75:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    <case pos:start="77:5" pos:end="77:34">case <expr pos:start="77:10" pos:end="77:33"><name pos:start="77:10" pos:end="77:33">FF_PROFILE_H264_HIGH_422</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:40">case <expr pos:start="79:10" pos:end="79:39"><name pos:start="79:10" pos:end="79:39">FF_PROFILE_H264_HIGH_422_INTRA</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:34">case <expr pos:start="81:10" pos:end="81:33"><name pos:start="81:10" pos:end="81:33">FF_PROFILE_H264_HIGH_444</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:45">case <expr pos:start="83:10" pos:end="83:44"><name pos:start="83:10" pos:end="83:44">FF_PROFILE_H264_HIGH_444_PREDICTIVE</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:40">case <expr pos:start="85:10" pos:end="85:39"><name pos:start="85:10" pos:end="85:39">FF_PROFILE_H264_HIGH_444_INTRA</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:35">case <expr pos:start="87:10" pos:end="87:34"><name pos:start="87:10" pos:end="87:34">FF_PROFILE_H264_CAVLC_444</name></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="91:39"><expr pos:start="89:9" pos:end="91:38"><call pos:start="89:9" pos:end="91:38"><name pos:start="89:9" pos:end="89:14">av_log</name><argument_list pos:start="89:15" pos:end="91:38">(<argument pos:start="89:16" pos:end="89:20"><expr pos:start="89:16" pos:end="89:20"><name pos:start="89:16" pos:end="89:20">avctx</name></expr></argument>, <argument pos:start="89:23" pos:end="89:34"><expr pos:start="89:23" pos:end="89:34"><name pos:start="89:23" pos:end="89:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="89:37" pos:end="91:37"><expr pos:start="89:37" pos:end="91:37"><literal type="string" pos:start="89:37" pos:end="89:63">"H.264 non-4:2:0 profiles "</literal>

               <literal type="string" pos:start="91:16" pos:end="91:37">"are not supported.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:36">return <expr pos:start="93:16" pos:end="93:35"><name pos:start="93:16" pos:end="93:35">AVERROR_PATCHWELCOME</name></expr>;</return>

    <default pos:start="95:5" pos:end="95:12">default:</default>

        <expr_stmt pos:start="97:9" pos:end="99:31"><expr pos:start="97:9" pos:end="99:30"><call pos:start="97:9" pos:end="99:30"><name pos:start="97:9" pos:end="97:14">av_log</name><argument_list pos:start="97:15" pos:end="99:30">(<argument pos:start="97:16" pos:end="97:20"><expr pos:start="97:16" pos:end="97:20"><name pos:start="97:16" pos:end="97:20">avctx</name></expr></argument>, <argument pos:start="97:23" pos:end="97:34"><expr pos:start="97:23" pos:end="97:34"><name pos:start="97:23" pos:end="97:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="97:37" pos:end="97:65"><expr pos:start="97:37" pos:end="97:65"><literal type="string" pos:start="97:37" pos:end="97:65">"Unknown H.264 profile %d.\n"</literal></expr></argument>,

               <argument pos:start="99:16" pos:end="99:29"><expr pos:start="99:16" pos:end="99:29"><name pos:start="99:16" pos:end="99:29"><name pos:start="99:16" pos:end="99:20">avctx</name><operator pos:start="99:21" pos:end="99:22">-&gt;</operator><name pos:start="99:23" pos:end="99:29">profile</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:31">return <expr pos:start="101:16" pos:end="101:30"><call pos:start="101:16" pos:end="101:30"><name pos:start="101:16" pos:end="101:22">AVERROR</name><argument_list pos:start="101:23" pos:end="101:30">(<argument pos:start="101:24" pos:end="101:29"><expr pos:start="101:24" pos:end="101:29"><name pos:start="101:24" pos:end="101:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="105:5" pos:end="125:5"><if pos:start="105:5" pos:end="121:5">if <condition pos:start="105:8" pos:end="105:23">(<expr pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:22"><name pos:start="105:9" pos:end="105:11">opt</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:22">low_power</name></name></expr>)</condition> <block pos:start="105:25" pos:end="121:5">{<block_content pos:start="109:9" pos:end="120:0">

<cpp:if pos:start="107:1" pos:end="107:30">#<cpp:directive pos:start="107:2" pos:end="107:3">if</cpp:directive> <expr pos:start="107:5" pos:end="107:30"><call pos:start="107:5" pos:end="107:30"><name pos:start="107:5" pos:end="107:20">VA_CHECK_VERSION</name><argument_list pos:start="107:21" pos:end="107:30">(<argument pos:start="107:22" pos:end="107:29"><expr pos:start="107:22" pos:end="107:29"><literal type="number" pos:start="107:22" pos:end="107:22">0</literal><operator pos:start="107:23" pos:end="107:23">,</operator> <literal type="number" pos:start="107:25" pos:end="107:26">39</literal><operator pos:start="107:27" pos:end="107:27">,</operator> <literal type="number" pos:start="107:29" pos:end="107:29">1</literal></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="109:9" pos:end="112:0"><expr pos:start="109:9" pos:end="109:51"><name pos:start="109:9" pos:end="109:26"><name pos:start="109:9" pos:end="109:11">ctx</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:26">va_entrypoint</name></name> <operator pos:start="109:28" pos:end="109:28">=</operator> <name pos:start="109:30" pos:end="109:51">VAEntrypointEncSliceLP</name></expr>;</expr_stmt>

<cpp:else pos:start="111:1" pos:end="111:5">#<cpp:directive pos:start="111:2" pos:end="111:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="113:9" pos:end="115:55"><expr pos:start="113:9" pos:end="115:54"><call pos:start="113:9" pos:end="115:54"><name pos:start="113:9" pos:end="113:14">av_log</name><argument_list pos:start="113:15" pos:end="115:54">(<argument pos:start="113:16" pos:end="113:20"><expr pos:start="113:16" pos:end="113:20"><name pos:start="113:16" pos:end="113:20">avctx</name></expr></argument>, <argument pos:start="113:23" pos:end="113:34"><expr pos:start="113:23" pos:end="113:34"><name pos:start="113:23" pos:end="113:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="113:37" pos:end="115:53"><expr pos:start="113:37" pos:end="115:53"><literal type="string" pos:start="113:37" pos:end="113:64">"Low-power encoding is not "</literal>

               <literal type="string" pos:start="115:16" pos:end="115:53">"supported with this VAAPI version.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="120:0">return <expr pos:start="117:16" pos:end="117:30"><call pos:start="117:16" pos:end="117:30"><name pos:start="117:16" pos:end="117:22">AVERROR</name><argument_list pos:start="117:23" pos:end="117:30">(<argument pos:start="117:24" pos:end="117:29"><expr pos:start="117:24" pos:end="117:29"><name pos:start="117:24" pos:end="117:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

<cpp:endif pos:start="119:1" pos:end="119:6">#<cpp:directive pos:start="119:2" pos:end="119:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if> <else pos:start="121:7" pos:end="125:5">else <block pos:start="121:12" pos:end="125:5">{<block_content pos:start="123:9" pos:end="123:50">

        <expr_stmt pos:start="123:9" pos:end="123:50"><expr pos:start="123:9" pos:end="123:49"><name pos:start="123:9" pos:end="123:26"><name pos:start="123:9" pos:end="123:11">ctx</name><operator pos:start="123:12" pos:end="123:13">-&gt;</operator><name pos:start="123:14" pos:end="123:26">va_entrypoint</name></name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:49">VAEntrypointEncSlice</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="129:5" pos:end="129:39"><expr pos:start="129:5" pos:end="129:38"><name pos:start="129:5" pos:end="129:20"><name pos:start="129:5" pos:end="129:7">ctx</name><operator pos:start="129:8" pos:end="129:9">-&gt;</operator><name pos:start="129:10" pos:end="129:20">input_width</name></name>    <operator pos:start="129:25" pos:end="129:25">=</operator> <name pos:start="129:27" pos:end="129:38"><name pos:start="129:27" pos:end="129:31">avctx</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:38">width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:40"><expr pos:start="131:5" pos:end="131:39"><name pos:start="131:5" pos:end="131:21"><name pos:start="131:5" pos:end="131:7">ctx</name><operator pos:start="131:8" pos:end="131:9">-&gt;</operator><name pos:start="131:10" pos:end="131:21">input_height</name></name>   <operator pos:start="131:25" pos:end="131:25">=</operator> <name pos:start="131:27" pos:end="131:39"><name pos:start="131:27" pos:end="131:31">avctx</name><operator pos:start="131:32" pos:end="131:33">-&gt;</operator><name pos:start="131:34" pos:end="131:39">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:57"><expr pos:start="133:5" pos:end="133:56"><name pos:start="133:5" pos:end="133:22"><name pos:start="133:5" pos:end="133:7">ctx</name><operator pos:start="133:8" pos:end="133:9">-&gt;</operator><name pos:start="133:10" pos:end="133:22">aligned_width</name></name>  <operator pos:start="133:25" pos:end="133:25">=</operator> <call pos:start="133:27" pos:end="133:56"><name pos:start="133:27" pos:end="133:33">FFALIGN</name><argument_list pos:start="133:34" pos:end="133:56">(<argument pos:start="133:35" pos:end="133:50"><expr pos:start="133:35" pos:end="133:50"><name pos:start="133:35" pos:end="133:50"><name pos:start="133:35" pos:end="133:37">ctx</name><operator pos:start="133:38" pos:end="133:39">-&gt;</operator><name pos:start="133:40" pos:end="133:50">input_width</name></name></expr></argument>,  <argument pos:start="133:54" pos:end="133:55"><expr pos:start="133:54" pos:end="133:55"><literal type="number" pos:start="133:54" pos:end="133:55">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:57"><expr pos:start="135:5" pos:end="135:56"><name pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:7">ctx</name><operator pos:start="135:8" pos:end="135:9">-&gt;</operator><name pos:start="135:10" pos:end="135:23">aligned_height</name></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <call pos:start="135:27" pos:end="135:56"><name pos:start="135:27" pos:end="135:33">FFALIGN</name><argument_list pos:start="135:34" pos:end="135:56">(<argument pos:start="135:35" pos:end="135:51"><expr pos:start="135:35" pos:end="135:51"><name pos:start="135:35" pos:end="135:51"><name pos:start="135:35" pos:end="135:37">ctx</name><operator pos:start="135:38" pos:end="135:39">-&gt;</operator><name pos:start="135:40" pos:end="135:51">input_height</name></name></expr></argument>, <argument pos:start="135:54" pos:end="135:55"><expr pos:start="135:54" pos:end="135:55"><literal type="number" pos:start="135:54" pos:end="135:55">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:51"><expr pos:start="137:5" pos:end="137:50"><name pos:start="137:5" pos:end="137:18"><name pos:start="137:5" pos:end="137:8">priv</name><operator pos:start="137:9" pos:end="137:10">-&gt;</operator><name pos:start="137:11" pos:end="137:18">mb_width</name></name>      <operator pos:start="137:25" pos:end="137:25">=</operator> <name pos:start="137:27" pos:end="137:44"><name pos:start="137:27" pos:end="137:29">ctx</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:44">aligned_width</name></name>  <operator pos:start="137:47" pos:end="137:47">/</operator> <literal type="number" pos:start="137:49" pos:end="137:50">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:51"><expr pos:start="139:5" pos:end="139:50"><name pos:start="139:5" pos:end="139:19"><name pos:start="139:5" pos:end="139:8">priv</name><operator pos:start="139:9" pos:end="139:10">-&gt;</operator><name pos:start="139:11" pos:end="139:19">mb_height</name></name>     <operator pos:start="139:25" pos:end="139:25">=</operator> <name pos:start="139:27" pos:end="139:45"><name pos:start="139:27" pos:end="139:29">ctx</name><operator pos:start="139:30" pos:end="139:31">-&gt;</operator><name pos:start="139:32" pos:end="139:45">aligned_height</name></name> <operator pos:start="139:47" pos:end="139:47">/</operator> <literal type="number" pos:start="139:49" pos:end="139:50">16</literal></expr>;</expr_stmt>



    <for pos:start="143:5" pos:end="149:5">for <control pos:start="143:9" pos:end="143:67">(<init pos:start="143:10" pos:end="143:15"><expr pos:start="143:10" pos:end="143:14"><name pos:start="143:10" pos:end="143:10">i</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <literal type="number" pos:start="143:14" pos:end="143:14">0</literal></expr>;</init> <condition pos:start="143:17" pos:end="143:62"><expr pos:start="143:17" pos:end="143:61"><name pos:start="143:17" pos:end="143:17">i</name> <operator pos:start="143:19" pos:end="143:19">&lt;</operator> <call pos:start="143:21" pos:end="143:61"><name pos:start="143:21" pos:end="143:34">FF_ARRAY_ELEMS</name><argument_list pos:start="143:35" pos:end="143:61">(<argument pos:start="143:36" pos:end="143:60"><expr pos:start="143:36" pos:end="143:60"><name pos:start="143:36" pos:end="143:60">default_config_attributes</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="143:64" pos:end="143:66"><expr pos:start="143:64" pos:end="143:66"><name pos:start="143:64" pos:end="143:64">i</name><operator pos:start="143:65" pos:end="143:66">++</operator></expr></incr>)</control> <block pos:start="143:69" pos:end="149:5">{<block_content pos:start="145:9" pos:end="147:41">

        <expr_stmt pos:start="145:9" pos:end="147:41"><expr pos:start="145:9" pos:end="147:40"><name pos:start="145:9" pos:end="145:59"><name pos:start="145:9" pos:end="145:11">ctx</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:30">config_attributes</name><index pos:start="145:31" pos:end="145:59">[<expr pos:start="145:32" pos:end="145:58"><name pos:start="145:32" pos:end="145:56"><name pos:start="145:32" pos:end="145:34">ctx</name><operator pos:start="145:35" pos:end="145:36">-&gt;</operator><name pos:start="145:37" pos:end="145:56">nb_config_attributes</name></name><operator pos:start="145:57" pos:end="145:58">++</operator></expr>]</index></name> <operator pos:start="145:61" pos:end="145:61">=</operator>

            <name pos:start="147:13" pos:end="147:40"><name pos:start="147:13" pos:end="147:37">default_config_attributes</name><index pos:start="147:38" pos:end="147:40">[<expr pos:start="147:39" pos:end="147:39"><name pos:start="147:39" pos:end="147:39">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="153:5" pos:end="165:5"><if pos:start="153:5" pos:end="159:5">if <condition pos:start="153:8" pos:end="153:28">(<expr pos:start="153:9" pos:end="153:27"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:13">avctx</name><operator pos:start="153:14" pos:end="153:15">-&gt;</operator><name pos:start="153:16" pos:end="153:23">bit_rate</name></name> <operator pos:start="153:25" pos:end="153:25">&gt;</operator> <literal type="number" pos:start="153:27" pos:end="153:27">0</literal></expr>)</condition> <block pos:start="153:30" pos:end="159:5">{<block_content pos:start="155:9" pos:end="157:61">

        <expr_stmt pos:start="155:9" pos:end="155:36"><expr pos:start="155:9" pos:end="155:35"><name pos:start="155:9" pos:end="155:23"><name pos:start="155:9" pos:end="155:11">ctx</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:23">va_rc_mode</name></name> <operator pos:start="155:25" pos:end="155:25">=</operator> <name pos:start="155:27" pos:end="155:35">VA_RC_CBR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:61"><expr pos:start="157:9" pos:end="157:60"><name pos:start="157:9" pos:end="157:11">err</name> <operator pos:start="157:13" pos:end="157:13">=</operator> <call pos:start="157:15" pos:end="157:60"><name pos:start="157:15" pos:end="157:53">vaapi_encode_h264_init_constant_bitrate</name><argument_list pos:start="157:54" pos:end="157:60">(<argument pos:start="157:55" pos:end="157:59"><expr pos:start="157:55" pos:end="157:59"><name pos:start="157:55" pos:end="157:59">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="159:7" pos:end="165:5">else <block pos:start="159:12" pos:end="165:5">{<block_content pos:start="161:9" pos:end="163:53">

        <expr_stmt pos:start="161:9" pos:end="161:36"><expr pos:start="161:9" pos:end="161:35"><name pos:start="161:9" pos:end="161:23"><name pos:start="161:9" pos:end="161:11">ctx</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:23">va_rc_mode</name></name> <operator pos:start="161:25" pos:end="161:25">=</operator> <name pos:start="161:27" pos:end="161:35">VA_RC_CQP</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:53"><expr pos:start="163:9" pos:end="163:52"><name pos:start="163:9" pos:end="163:11">err</name> <operator pos:start="163:13" pos:end="163:13">=</operator> <call pos:start="163:15" pos:end="163:52"><name pos:start="163:15" pos:end="163:45">vaapi_encode_h264_init_fixed_qp</name><argument_list pos:start="163:46" pos:end="163:52">(<argument pos:start="163:47" pos:end="163:51"><expr pos:start="163:47" pos:end="163:51"><name pos:start="163:47" pos:end="163:51">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="167:5" pos:end="169:19"><if pos:start="167:5" pos:end="169:19">if <condition pos:start="167:8" pos:end="167:16">(<expr pos:start="167:9" pos:end="167:15"><name pos:start="167:9" pos:end="167:11">err</name> <operator pos:start="167:13" pos:end="167:13">&lt;</operator> <literal type="number" pos:start="167:15" pos:end="167:15">0</literal></expr>)</condition><block type="pseudo" pos:start="169:9" pos:end="169:19"><block_content pos:start="169:9" pos:end="169:19">

        <return pos:start="169:9" pos:end="169:19">return <expr pos:start="169:16" pos:end="169:18"><name pos:start="169:16" pos:end="169:18">err</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="173:5" pos:end="179:6"><expr pos:start="173:5" pos:end="179:5"><name pos:start="173:5" pos:end="173:55"><name pos:start="173:5" pos:end="173:7">ctx</name><operator pos:start="173:8" pos:end="173:9">-&gt;</operator><name pos:start="173:10" pos:end="173:26">config_attributes</name><index pos:start="173:27" pos:end="173:55">[<expr pos:start="173:28" pos:end="173:54"><name pos:start="173:28" pos:end="173:52"><name pos:start="173:28" pos:end="173:30">ctx</name><operator pos:start="173:31" pos:end="173:32">-&gt;</operator><name pos:start="173:33" pos:end="173:52">nb_config_attributes</name></name><operator pos:start="173:53" pos:end="173:54">++</operator></expr>]</index></name> <operator pos:start="173:57" pos:end="173:57">=</operator> <operator pos:start="173:59" pos:end="173:59">(</operator><name pos:start="173:60" pos:end="173:73">VAConfigAttrib</name><operator pos:start="173:74" pos:end="173:74">)</operator> <block pos:start="173:76" pos:end="179:5">{

        <expr pos:start="175:9" pos:end="175:42"><operator pos:start="175:9" pos:end="175:9">.</operator><name pos:start="175:10" pos:end="175:13">type</name>  <operator pos:start="175:16" pos:end="175:16">=</operator> <name pos:start="175:18" pos:end="175:42">VAConfigAttribRateControl</name></expr>,

        <expr pos:start="177:9" pos:end="177:32"><operator pos:start="177:9" pos:end="177:9">.</operator><name pos:start="177:10" pos:end="177:14">value</name> <operator pos:start="177:16" pos:end="177:16">=</operator> <name pos:start="177:18" pos:end="177:32"><name pos:start="177:18" pos:end="177:20">ctx</name><operator pos:start="177:21" pos:end="177:22">-&gt;</operator><name pos:start="177:23" pos:end="177:32">va_rc_mode</name></name></expr>,

    }</block></expr>;</expr_stmt>



    <if_stmt pos:start="183:5" pos:end="211:5"><if pos:start="183:5" pos:end="211:5">if <condition pos:start="183:8" pos:end="183:25">(<expr pos:start="183:9" pos:end="183:24"><name pos:start="183:9" pos:end="183:20"><name pos:start="183:9" pos:end="183:11">opt</name><operator pos:start="183:12" pos:end="183:13">-&gt;</operator><name pos:start="183:14" pos:end="183:20">quality</name></name> <operator pos:start="183:22" pos:end="183:22">&gt;</operator> <literal type="number" pos:start="183:24" pos:end="183:24">0</literal></expr>)</condition> <block pos:start="183:27" pos:end="211:5">{<block_content pos:start="187:9" pos:end="210:0">

<cpp:if pos:start="185:1" pos:end="185:30">#<cpp:directive pos:start="185:2" pos:end="185:3">if</cpp:directive> <expr pos:start="185:5" pos:end="185:30"><call pos:start="185:5" pos:end="185:30"><name pos:start="185:5" pos:end="185:20">VA_CHECK_VERSION</name><argument_list pos:start="185:21" pos:end="185:30">(<argument pos:start="185:22" pos:end="185:29"><expr pos:start="185:22" pos:end="185:29"><literal type="number" pos:start="185:22" pos:end="185:22">0</literal><operator pos:start="185:23" pos:end="185:23">,</operator> <literal type="number" pos:start="185:25" pos:end="185:26">36</literal><operator pos:start="185:27" pos:end="185:27">,</operator> <literal type="number" pos:start="185:29" pos:end="185:29">0</literal></expr></argument>)</argument_list></call></expr></cpp:if>

        <expr_stmt pos:start="187:9" pos:end="189:47"><expr pos:start="187:9" pos:end="189:46"><name pos:start="187:9" pos:end="187:38"><name pos:start="187:9" pos:end="187:12">priv</name><operator pos:start="187:13" pos:end="187:14">-&gt;</operator><name pos:start="187:15" pos:end="187:28">quality_params</name><operator pos:start="187:29" pos:end="187:29">.</operator><name pos:start="187:30" pos:end="187:33">misc</name><operator pos:start="187:34" pos:end="187:34">.</operator><name pos:start="187:35" pos:end="187:38">type</name></name> <operator pos:start="187:40" pos:end="187:40">=</operator>

            <name pos:start="189:13" pos:end="189:46">VAEncMiscParameterTypeQualityLevel</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:66"><expr pos:start="191:9" pos:end="191:65"><name pos:start="191:9" pos:end="191:50"><name pos:start="191:9" pos:end="191:12">priv</name><operator pos:start="191:13" pos:end="191:14">-&gt;</operator><name pos:start="191:15" pos:end="191:28">quality_params</name><operator pos:start="191:29" pos:end="191:29">.</operator><name pos:start="191:30" pos:end="191:36">quality</name><operator pos:start="191:37" pos:end="191:37">.</operator><name pos:start="191:38" pos:end="191:50">quality_level</name></name> <operator pos:start="191:52" pos:end="191:52">=</operator> <name pos:start="191:54" pos:end="191:65"><name pos:start="191:54" pos:end="191:56">opt</name><operator pos:start="191:57" pos:end="191:58">-&gt;</operator><name pos:start="191:59" pos:end="191:65">quality</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="195:9" pos:end="197:39"><expr pos:start="195:9" pos:end="197:38"><name pos:start="195:9" pos:end="195:49"><name pos:start="195:9" pos:end="195:11">ctx</name><operator pos:start="195:12" pos:end="195:13">-&gt;</operator><name pos:start="195:14" pos:end="195:26">global_params</name><index pos:start="195:27" pos:end="195:49">[<expr pos:start="195:28" pos:end="195:48"><name pos:start="195:28" pos:end="195:48"><name pos:start="195:28" pos:end="195:30">ctx</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:48">nb_global_params</name></name></expr>]</index></name> <operator pos:start="195:51" pos:end="195:51">=</operator>

            <operator pos:start="197:13" pos:end="197:13">&amp;</operator><name pos:start="197:14" pos:end="197:38"><name pos:start="197:14" pos:end="197:17">priv</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:33">quality_params</name><operator pos:start="197:34" pos:end="197:34">.</operator><name pos:start="197:35" pos:end="197:38">misc</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="204:0"><expr pos:start="199:9" pos:end="201:40"><name pos:start="199:9" pos:end="199:56"><name pos:start="199:9" pos:end="199:11">ctx</name><operator pos:start="199:12" pos:end="199:13">-&gt;</operator><name pos:start="199:14" pos:end="199:31">global_params_size</name><index pos:start="199:32" pos:end="199:56">[<expr pos:start="199:33" pos:end="199:55"><name pos:start="199:33" pos:end="199:53"><name pos:start="199:33" pos:end="199:35">ctx</name><operator pos:start="199:36" pos:end="199:37">-&gt;</operator><name pos:start="199:38" pos:end="199:53">nb_global_params</name></name><operator pos:start="199:54" pos:end="199:55">++</operator></expr>]</index></name> <operator pos:start="199:58" pos:end="199:58">=</operator>

            <sizeof pos:start="201:13" pos:end="201:40">sizeof<argument_list pos:start="201:19" pos:end="201:40">(<argument pos:start="201:20" pos:end="201:39"><expr pos:start="201:20" pos:end="201:39"><name pos:start="201:20" pos:end="201:39"><name pos:start="201:20" pos:end="201:23">priv</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:39">quality_params</name></name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

<cpp:else pos:start="203:1" pos:end="203:5">#<cpp:directive pos:start="203:2" pos:end="203:5">else</cpp:directive></cpp:else>

        <expr_stmt pos:start="205:9" pos:end="210:0"><expr pos:start="205:9" pos:end="207:54"><call pos:start="205:9" pos:end="207:54"><name pos:start="205:9" pos:end="205:14">av_log</name><argument_list pos:start="205:15" pos:end="207:54">(<argument pos:start="205:16" pos:end="205:20"><expr pos:start="205:16" pos:end="205:20"><name pos:start="205:16" pos:end="205:20">avctx</name></expr></argument>, <argument pos:start="205:23" pos:end="205:36"><expr pos:start="205:23" pos:end="205:36"><name pos:start="205:23" pos:end="205:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="205:39" pos:end="207:53"><expr pos:start="205:39" pos:end="207:53"><literal type="string" pos:start="205:39" pos:end="205:73">"The encode quality option is not "</literal>

               <literal type="string" pos:start="207:16" pos:end="207:53">"supported with this VAAPI version.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="209:1" pos:end="209:6">#<cpp:directive pos:start="209:2" pos:end="209:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:30"><expr pos:start="215:5" pos:end="215:29"><name pos:start="215:5" pos:end="215:24"><name pos:start="215:5" pos:end="215:7">ctx</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:24">nb_recon_frames</name></name> <operator pos:start="215:26" pos:end="215:26">=</operator> <literal type="number" pos:start="215:28" pos:end="215:29">20</literal></expr>;</expr_stmt>



    <return pos:start="219:5" pos:end="219:13">return <expr pos:start="219:12" pos:end="219:12"><literal type="number" pos:start="219:12" pos:end="219:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
