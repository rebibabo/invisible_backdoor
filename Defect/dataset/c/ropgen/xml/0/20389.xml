<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20389.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">eval_refl</name><parameter_list pos:start="1:21" pos:end="1:74">(<parameter pos:start="1:22" pos:end="1:30"><decl pos:start="1:22" pos:end="1:30"><type pos:start="1:22" pos:end="1:30"><name pos:start="1:22" pos:end="1:24">int</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:30">refl</name></decl></parameter>, <parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:52"><specifier pos:start="1:33" pos:end="1:37">const</specifier> <name pos:start="1:39" pos:end="1:45">int16_t</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">coefs</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:73"><decl pos:start="1:55" pos:end="1:73"><type pos:start="1:55" pos:end="1:73"><name pos:start="1:55" pos:end="1:66">RA144Context</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:73">ractx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">b</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">c</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:18">u</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:15">buffer1</name><index pos:start="9:16" pos:end="9:19">[<expr pos:start="9:17" pos:end="9:18"><literal type="number" pos:start="9:17" pos:end="9:18">10</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:15">buffer2</name><index pos:start="11:16" pos:end="11:19">[<expr pos:start="11:17" pos:end="11:18"><literal type="number" pos:start="11:17" pos:end="11:18">10</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:23"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">int</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:12">bp1</name> <init pos:start="13:14" pos:end="13:22">= <expr pos:start="13:16" pos:end="13:22"><name pos:start="13:16" pos:end="13:22">buffer1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">int</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:12">bp2</name> <init pos:start="15:14" pos:end="15:22">= <expr pos:start="15:16" pos:end="15:22"><name pos:start="15:16" pos:end="15:22">buffer2</name></expr></init></decl>;</decl_stmt>



    <for pos:start="19:5" pos:end="21:30">for <control pos:start="19:9" pos:end="19:26">(<init pos:start="19:10" pos:end="19:13"><expr pos:start="19:10" pos:end="19:12"><name pos:start="19:10" pos:end="19:10">i</name><operator pos:start="19:11" pos:end="19:11">=</operator><literal type="number" pos:start="19:12" pos:end="19:12">0</literal></expr>;</init> <condition pos:start="19:15" pos:end="19:21"><expr pos:start="19:15" pos:end="19:20"><name pos:start="19:15" pos:end="19:15">i</name> <operator pos:start="19:17" pos:end="19:17">&lt;</operator> <literal type="number" pos:start="19:19" pos:end="19:20">10</literal></expr>;</condition> <incr pos:start="19:23" pos:end="19:25"><expr pos:start="19:23" pos:end="19:25"><name pos:start="19:23" pos:end="19:23">i</name><operator pos:start="19:24" pos:end="19:25">++</operator></expr></incr>)</control><block type="pseudo" pos:start="21:9" pos:end="21:30"><block_content pos:start="21:9" pos:end="21:30">

        <expr_stmt pos:start="21:9" pos:end="21:30"><expr pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:15">buffer2</name><index pos:start="21:16" pos:end="21:18">[<expr pos:start="21:17" pos:end="21:17"><name pos:start="21:17" pos:end="21:17">i</name></expr>]</index></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:29"><name pos:start="21:22" pos:end="21:26">coefs</name><index pos:start="21:27" pos:end="21:29">[<expr pos:start="21:28" pos:end="21:28"><name pos:start="21:28" pos:end="21:28">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>



    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:11"><name pos:start="25:5" pos:end="25:8">refl</name><index pos:start="25:9" pos:end="25:11">[<expr pos:start="25:10" pos:end="25:10"><literal type="number" pos:start="25:10" pos:end="25:10">9</literal></expr>]</index></name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:20"><name pos:start="25:15" pos:end="25:17">bp2</name><index pos:start="25:18" pos:end="25:20">[<expr pos:start="25:19" pos:end="25:19"><literal type="number" pos:start="25:19" pos:end="25:19">9</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:44">(<expr pos:start="29:9" pos:end="29:43"><operator pos:start="29:9" pos:end="29:9">(</operator><name pos:start="29:10" pos:end="29:17">unsigned</name><operator pos:start="29:18" pos:end="29:18">)</operator> <name pos:start="29:20" pos:end="29:25"><name pos:start="29:20" pos:end="29:22">bp2</name><index pos:start="29:23" pos:end="29:25">[<expr pos:start="29:24" pos:end="29:24"><literal type="number" pos:start="29:24" pos:end="29:24">9</literal></expr>]</index></name> <operator pos:start="29:27" pos:end="29:27">+</operator> <literal type="number" pos:start="29:29" pos:end="29:34">0x1000</literal> <operator pos:start="29:36" pos:end="29:36">&gt;</operator> <literal type="number" pos:start="29:38" pos:end="29:43">0x1fff</literal></expr>)</condition> <block pos:start="29:46" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:17">

        <expr_stmt pos:start="31:9" pos:end="31:66"><expr pos:start="31:9" pos:end="31:65"><call pos:start="31:9" pos:end="31:65"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:65">(<argument pos:start="31:16" pos:end="31:20"><expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">ractx</name></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:37" pos:end="31:64"><expr pos:start="31:37" pos:end="31:64"><literal type="string" pos:start="31:37" pos:end="31:64">"Overflow. Broken sample?\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="39:5" pos:end="69:5">for <control pos:start="39:9" pos:end="39:26">(<init pos:start="39:10" pos:end="39:13"><expr pos:start="39:10" pos:end="39:12"><name pos:start="39:10" pos:end="39:10">c</name><operator pos:start="39:11" pos:end="39:11">=</operator><literal type="number" pos:start="39:12" pos:end="39:12">8</literal></expr>;</init> <condition pos:start="39:15" pos:end="39:21"><expr pos:start="39:15" pos:end="39:20"><name pos:start="39:15" pos:end="39:15">c</name> <operator pos:start="39:17" pos:end="39:18">&gt;=</operator> <literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr>;</condition> <incr pos:start="39:23" pos:end="39:25"><expr pos:start="39:23" pos:end="39:25"><name pos:start="39:23" pos:end="39:23">c</name><operator pos:start="39:24" pos:end="39:25">--</operator></expr></incr>)</control> <block pos:start="39:28" pos:end="69:5">{<block_content pos:start="41:9" pos:end="67:32">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:9">b</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <literal type="number" pos:start="41:13" pos:end="41:19">0x1000</literal><operator pos:start="41:19" pos:end="41:19">-</operator><operator pos:start="41:20" pos:end="41:20">(</operator><operator pos:start="41:21" pos:end="41:21">(</operator><name pos:start="41:22" pos:end="41:29"><name pos:start="41:22" pos:end="41:24">bp2</name><index pos:start="41:25" pos:end="41:29">[<expr pos:start="41:26" pos:end="41:28"><name pos:start="41:26" pos:end="41:26">c</name><operator pos:start="41:27" pos:end="41:27">+</operator><literal type="number" pos:start="41:28" pos:end="41:28">1</literal></expr>]</index></name> <operator pos:start="41:31" pos:end="41:31">*</operator> <name pos:start="41:33" pos:end="41:40"><name pos:start="41:33" pos:end="41:35">bp2</name><index pos:start="41:36" pos:end="41:40">[<expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:37">c</name><operator pos:start="41:38" pos:end="41:38">+</operator><literal type="number" pos:start="41:39" pos:end="41:39">1</literal></expr>]</index></name><operator pos:start="41:41" pos:end="41:41">)</operator> <operator pos:start="41:43" pos:end="41:44">&gt;&gt;</operator> <literal type="number" pos:start="41:46" pos:end="41:47">12</literal><operator pos:start="41:48" pos:end="41:48">)</operator></expr>;</expr_stmt>



        <if_stmt pos:start="45:9" pos:end="47:19"><if pos:start="45:9" pos:end="47:19">if <condition pos:start="45:12" pos:end="45:15">(<expr pos:start="45:13" pos:end="45:14"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:14">b</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:19"><block_content pos:start="47:13" pos:end="47:19">

            <expr_stmt pos:start="47:13" pos:end="47:19"><expr pos:start="47:13" pos:end="47:18"><name pos:start="47:13" pos:end="47:13">b</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <operator pos:start="47:17" pos:end="47:17">-</operator><literal type="number" pos:start="47:18" pos:end="47:18">2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="51:9" pos:end="53:89">for <control pos:start="51:13" pos:end="51:28">(<init pos:start="51:14" pos:end="51:17"><expr pos:start="51:14" pos:end="51:16"><name pos:start="51:14" pos:end="51:14">u</name><operator pos:start="51:15" pos:end="51:15">=</operator><literal type="number" pos:start="51:16" pos:end="51:16">0</literal></expr>;</init> <condition pos:start="51:19" pos:end="51:23"><expr pos:start="51:19" pos:end="51:22"><name pos:start="51:19" pos:end="51:19">u</name><operator pos:start="51:20" pos:end="51:21">&lt;=</operator><name pos:start="51:22" pos:end="51:22">c</name></expr>;</condition> <incr pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:25">u</name><operator pos:start="51:26" pos:end="51:27">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:13" pos:end="53:89"><block_content pos:start="53:13" pos:end="53:89">

            <expr_stmt pos:start="53:13" pos:end="53:89"><expr pos:start="53:13" pos:end="53:88"><name pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:15">bp1</name><index pos:start="53:16" pos:end="53:18">[<expr pos:start="53:17" pos:end="53:17"><name pos:start="53:17" pos:end="53:17">u</name></expr>]</index></name> <operator pos:start="53:20" pos:end="53:20">=</operator> <operator pos:start="53:22" pos:end="53:22">(</operator><operator pos:start="53:23" pos:end="53:23">(</operator><name pos:start="53:24" pos:end="53:29"><name pos:start="53:24" pos:end="53:26">bp2</name><index pos:start="53:27" pos:end="53:29">[<expr pos:start="53:28" pos:end="53:28"><name pos:start="53:28" pos:end="53:28">u</name></expr>]</index></name> <operator pos:start="53:31" pos:end="53:31">-</operator> <operator pos:start="53:33" pos:end="53:33">(</operator><operator pos:start="53:34" pos:end="53:34">(</operator><name pos:start="53:35" pos:end="53:43"><name pos:start="53:35" pos:end="53:38">refl</name><index pos:start="53:39" pos:end="53:43">[<expr pos:start="53:40" pos:end="53:42"><name pos:start="53:40" pos:end="53:40">c</name><operator pos:start="53:41" pos:end="53:41">+</operator><literal type="number" pos:start="53:42" pos:end="53:42">1</literal></expr>]</index></name> <operator pos:start="53:45" pos:end="53:45">*</operator> <name pos:start="53:47" pos:end="53:54"><name pos:start="53:47" pos:end="53:49">bp2</name><index pos:start="53:50" pos:end="53:54">[<expr pos:start="53:51" pos:end="53:53"><name pos:start="53:51" pos:end="53:51">c</name><operator pos:start="53:52" pos:end="53:52">-</operator><name pos:start="53:53" pos:end="53:53">u</name></expr>]</index></name><operator pos:start="53:55" pos:end="53:55">)</operator> <operator pos:start="53:57" pos:end="53:58">&gt;&gt;</operator> <literal type="number" pos:start="53:60" pos:end="53:61">12</literal><operator pos:start="53:62" pos:end="53:62">)</operator><operator pos:start="53:63" pos:end="53:63">)</operator> <operator pos:start="53:65" pos:end="53:65">*</operator> <operator pos:start="53:67" pos:end="53:67">(</operator><literal type="number" pos:start="53:68" pos:end="53:76">0x1000000</literal> <operator pos:start="53:78" pos:end="53:78">/</operator> <name pos:start="53:80" pos:end="53:80">b</name><operator pos:start="53:81" pos:end="53:81">)</operator><operator pos:start="53:82" pos:end="53:82">)</operator> <operator pos:start="53:84" pos:end="53:85">&gt;&gt;</operator> <literal type="number" pos:start="53:87" pos:end="53:88">12</literal></expr>;</expr_stmt></block_content></block></for>



        <expr_stmt pos:start="57:9" pos:end="57:25"><expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:15"><name pos:start="57:9" pos:end="57:12">refl</name><index pos:start="57:13" pos:end="57:15">[<expr pos:start="57:14" pos:end="57:14"><name pos:start="57:14" pos:end="57:14">c</name></expr>]</index></name> <operator pos:start="57:17" pos:end="57:17">=</operator> <name pos:start="57:19" pos:end="57:24"><name pos:start="57:19" pos:end="57:21">bp1</name><index pos:start="57:22" pos:end="57:24">[<expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">c</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="63:21"><if pos:start="61:9" pos:end="63:21">if <condition pos:start="61:12" pos:end="61:48">(<expr pos:start="61:13" pos:end="61:47"><operator pos:start="61:13" pos:end="61:13">(</operator><name pos:start="61:14" pos:end="61:21">unsigned</name><operator pos:start="61:22" pos:end="61:22">)</operator> <name pos:start="61:24" pos:end="61:29"><name pos:start="61:24" pos:end="61:26">bp1</name><index pos:start="61:27" pos:end="61:29">[<expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">c</name></expr>]</index></name> <operator pos:start="61:31" pos:end="61:31">+</operator> <literal type="number" pos:start="61:33" pos:end="61:38">0x1000</literal> <operator pos:start="61:40" pos:end="61:40">&gt;</operator> <literal type="number" pos:start="61:42" pos:end="61:47">0x1fff</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:21"><block_content pos:start="63:13" pos:end="63:21">

            <return pos:start="63:13" pos:end="63:21">return <expr pos:start="63:20" pos:end="63:20"><literal type="number" pos:start="63:20" pos:end="63:20">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="67:32"><expr pos:start="67:9" pos:end="67:31"><call pos:start="67:9" pos:end="67:31"><name pos:start="67:9" pos:end="67:14">FFSWAP</name><argument_list pos:start="67:15" pos:end="67:31">(<argument pos:start="67:16" pos:end="67:20"><expr pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:18">int</name> <operator pos:start="67:20" pos:end="67:20">*</operator></expr></argument>, <argument pos:start="67:23" pos:end="67:25"><expr pos:start="67:23" pos:end="67:25"><name pos:start="67:23" pos:end="67:25">bp1</name></expr></argument>, <argument pos:start="67:28" pos:end="67:30"><expr pos:start="67:28" pos:end="67:30"><name pos:start="67:28" pos:end="67:30">bp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="71:5" pos:end="71:13">return <expr pos:start="71:12" pos:end="71:12"><literal type="number" pos:start="71:12" pos:end="71:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
