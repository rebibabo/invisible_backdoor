<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25002.c" pos:tabs="8"><function pos:start="1:1" pos:end="219:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qxl_realize_common</name><parameter_list pos:start="1:31" pos:end="1:63">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:43">PCIQXLDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">qxl</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:55">Error</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier><modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="219:1">{<block_content pos:start="5:5" pos:end="217:78">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:11">uint8_t</name><modifier pos:start="5:12" pos:end="5:12">*</modifier></type> <name pos:start="5:14" pos:end="5:19">config</name> <init pos:start="5:21" pos:end="5:37">= <expr pos:start="5:23" pos:end="5:37"><name pos:start="5:23" pos:end="5:37"><name pos:start="5:23" pos:end="5:25">qxl</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:30">pci</name><operator pos:start="5:31" pos:end="5:31">.</operator><name pos:start="5:32" pos:end="5:37">config</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:27">pci_device_rev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:20">io_size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:35"><expr pos:start="13:5" pos:end="13:34"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:7">qxl</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:13">mode</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:34">QXL_MODE_UNDEFINED</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:24"><expr pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:7">qxl</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:19">generation</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <literal type="number" pos:start="15:23" pos:end="15:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:37"><expr pos:start="17:5" pos:end="17:36"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">qxl</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:21">num_memslots</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <name pos:start="17:25" pos:end="17:36">NUM_MEMSLOTS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:38"><expr pos:start="19:5" pos:end="19:37"><call pos:start="19:5" pos:end="19:37"><name pos:start="19:5" pos:end="19:19">qemu_mutex_init</name><argument_list pos:start="19:20" pos:end="19:37">(<argument pos:start="19:21" pos:end="19:36"><expr pos:start="19:21" pos:end="19:36"><operator pos:start="19:21" pos:end="19:21">&amp;</operator><name pos:start="19:22" pos:end="19:36"><name pos:start="19:22" pos:end="19:24">qxl</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:36">track_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:38"><expr pos:start="21:5" pos:end="21:37"><call pos:start="21:5" pos:end="21:37"><name pos:start="21:5" pos:end="21:19">qemu_mutex_init</name><argument_list pos:start="21:20" pos:end="21:37">(<argument pos:start="21:21" pos:end="21:36"><expr pos:start="21:21" pos:end="21:36"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:36"><name pos:start="21:22" pos:end="21:24">qxl</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:36">async_lock</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:42"><expr pos:start="23:5" pos:end="23:41"><name pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:7">qxl</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:22">current_async</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:41">QXL_UNDEFINED_IO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:23"><expr pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:18"><name pos:start="25:5" pos:end="25:7">qxl</name><operator pos:start="25:8" pos:end="25:9">-&gt;</operator><name pos:start="25:10" pos:end="25:18">guest_bug</name></name> <operator pos:start="25:20" pos:end="25:20">=</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>



    <switch pos:start="29:5" pos:end="71:5">switch <condition pos:start="29:12" pos:end="29:26">(<expr pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:25"><name pos:start="29:13" pos:end="29:15">qxl</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:25">revision</name></name></expr>)</condition> <block pos:start="29:28" pos:end="71:5">{<block_content pos:start="31:5" pos:end="69:15">

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">1</literal></expr>:</case> <comment type="block" pos:start="31:13" pos:end="31:36">/* spice 0.4 -- qxl-1 */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:49"><expr pos:start="33:9" pos:end="33:48"><name pos:start="33:9" pos:end="33:22">pci_device_rev</name> <operator pos:start="33:24" pos:end="33:24">=</operator> <name pos:start="33:26" pos:end="33:48">QXL_REVISION_STABLE_V04</name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:20"><expr pos:start="35:9" pos:end="35:19"><name pos:start="35:9" pos:end="35:15">io_size</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">8</literal></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">2</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:36">/* spice 0.6 -- qxl-2 */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:22">pci_device_rev</name> <operator pos:start="41:24" pos:end="41:24">=</operator> <name pos:start="41:26" pos:end="41:48">QXL_REVISION_STABLE_V06</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:21"><expr pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:15">io_size</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:20">16</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">3</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:23">/* qxl-3 */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:49"><expr pos:start="49:9" pos:end="49:48"><name pos:start="49:9" pos:end="49:22">pci_device_rev</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <name pos:start="49:26" pos:end="49:48">QXL_REVISION_STABLE_V10</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:15">io_size</name> <operator pos:start="51:17" pos:end="51:17">=</operator> <literal type="number" pos:start="51:19" pos:end="51:20">32</literal></expr>;</expr_stmt> <comment type="block" pos:start="51:23" pos:end="51:56">/* PCI region size must be pow2 */</comment>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">4</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:23">/* qxl-4 */</comment>

        <expr_stmt pos:start="57:9" pos:end="57:49"><expr pos:start="57:9" pos:end="57:48"><name pos:start="57:9" pos:end="57:22">pci_device_rev</name> <operator pos:start="57:24" pos:end="57:24">=</operator> <name pos:start="57:26" pos:end="57:48">QXL_REVISION_STABLE_V12</name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:46"><expr pos:start="59:9" pos:end="59:45"><name pos:start="59:9" pos:end="59:15">io_size</name> <operator pos:start="59:17" pos:end="59:17">=</operator> <call pos:start="59:19" pos:end="59:45"><name pos:start="59:19" pos:end="59:26">pow2ceil</name><argument_list pos:start="59:27" pos:end="59:45">(<argument pos:start="59:28" pos:end="59:44"><expr pos:start="59:28" pos:end="59:44"><name pos:start="59:28" pos:end="59:44">QXL_IO_RANGE_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="61:9" pos:end="61:14">break;</break>

    <default pos:start="63:5" pos:end="63:12">default:</default>

        <expr_stmt pos:start="65:9" pos:end="67:56"><expr pos:start="65:9" pos:end="67:55"><call pos:start="65:9" pos:end="67:55"><name pos:start="65:9" pos:end="65:18">error_setg</name><argument_list pos:start="65:19" pos:end="67:55">(<argument pos:start="65:20" pos:end="65:23"><expr pos:start="65:20" pos:end="65:23"><name pos:start="65:20" pos:end="65:23">errp</name></expr></argument>, <argument pos:start="65:26" pos:end="65:70"><expr pos:start="65:26" pos:end="65:70"><literal type="string" pos:start="65:26" pos:end="65:70">"Invalid revision %d for qxl device (max %d)"</literal></expr></argument>,

                   <argument pos:start="67:20" pos:end="67:32"><expr pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:32"><name pos:start="67:20" pos:end="67:22">qxl</name><operator pos:start="67:23" pos:end="67:24">-&gt;</operator><name pos:start="67:25" pos:end="67:32">revision</name></name></expr></argument>, <argument pos:start="67:35" pos:end="67:54"><expr pos:start="67:35" pos:end="67:54"><name pos:start="67:35" pos:end="67:54">QXL_DEFAULT_REVISION</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="75:5" pos:end="75:59"><expr pos:start="75:5" pos:end="75:58"><call pos:start="75:5" pos:end="75:58"><name pos:start="75:5" pos:end="75:16">pci_set_byte</name><argument_list pos:start="75:17" pos:end="75:58">(<argument pos:start="75:18" pos:end="75:41"><expr pos:start="75:18" pos:end="75:41"><operator pos:start="75:18" pos:end="75:18">&amp;</operator><name pos:start="75:19" pos:end="75:41"><name pos:start="75:19" pos:end="75:24">config</name><index pos:start="75:25" pos:end="75:41">[<expr pos:start="75:26" pos:end="75:40"><name pos:start="75:26" pos:end="75:40">PCI_REVISION_ID</name></expr>]</index></name></expr></argument>, <argument pos:start="75:44" pos:end="75:57"><expr pos:start="75:44" pos:end="75:57"><name pos:start="75:44" pos:end="75:57">pci_device_rev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:48"><expr pos:start="77:5" pos:end="77:47"><call pos:start="77:5" pos:end="77:47"><name pos:start="77:5" pos:end="77:16">pci_set_byte</name><argument_list pos:start="77:17" pos:end="77:47">(<argument pos:start="77:18" pos:end="77:43"><expr pos:start="77:18" pos:end="77:43"><operator pos:start="77:18" pos:end="77:18">&amp;</operator><name pos:start="77:19" pos:end="77:43"><name pos:start="77:19" pos:end="77:24">config</name><index pos:start="77:25" pos:end="77:43">[<expr pos:start="77:26" pos:end="77:42"><name pos:start="77:26" pos:end="77:42">PCI_INTERRUPT_PIN</name></expr>]</index></name></expr></argument>, <argument pos:start="77:46" pos:end="77:46"><expr pos:start="77:46" pos:end="77:46"><literal type="number" pos:start="77:46" pos:end="77:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:35"><expr pos:start="81:5" pos:end="81:34"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:7">qxl</name><operator pos:start="81:8" pos:end="81:9">-&gt;</operator><name pos:start="81:10" pos:end="81:17">rom_size</name></name> <operator pos:start="81:19" pos:end="81:19">=</operator> <call pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:32">qxl_rom_size</name><argument_list pos:start="81:33" pos:end="81:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="85:56"><expr pos:start="83:5" pos:end="85:55"><call pos:start="83:5" pos:end="85:55"><name pos:start="83:5" pos:end="83:26">memory_region_init_ram</name><argument_list pos:start="83:27" pos:end="85:55">(<argument pos:start="83:28" pos:end="83:40"><expr pos:start="83:28" pos:end="83:40"><operator pos:start="83:28" pos:end="83:28">&amp;</operator><name pos:start="83:29" pos:end="83:40"><name pos:start="83:29" pos:end="83:31">qxl</name><operator pos:start="83:32" pos:end="83:33">-&gt;</operator><name pos:start="83:34" pos:end="83:40">rom_bar</name></name></expr></argument>, <argument pos:start="83:43" pos:end="83:53"><expr pos:start="83:43" pos:end="83:53"><call pos:start="83:43" pos:end="83:53"><name pos:start="83:43" pos:end="83:48">OBJECT</name><argument_list pos:start="83:49" pos:end="83:53">(<argument pos:start="83:50" pos:end="83:52"><expr pos:start="83:50" pos:end="83:52"><name pos:start="83:50" pos:end="83:52">qxl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:56" pos:end="83:65"><expr pos:start="83:56" pos:end="83:65"><literal type="string" pos:start="83:56" pos:end="83:65">"qxl.vrom"</literal></expr></argument>,

                           <argument pos:start="85:28" pos:end="85:40"><expr pos:start="85:28" pos:end="85:40"><name pos:start="85:28" pos:end="85:40"><name pos:start="85:28" pos:end="85:30">qxl</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:40">rom_size</name></name></expr></argument>, <argument pos:start="85:43" pos:end="85:54"><expr pos:start="85:43" pos:end="85:54"><operator pos:start="85:43" pos:end="85:43">&amp;</operator><name pos:start="85:44" pos:end="85:54">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:56"><expr pos:start="87:5" pos:end="87:55"><call pos:start="87:5" pos:end="87:55"><name pos:start="87:5" pos:end="87:24">vmstate_register_ram</name><argument_list pos:start="87:25" pos:end="87:55">(<argument pos:start="87:26" pos:end="87:38"><expr pos:start="87:26" pos:end="87:38"><operator pos:start="87:26" pos:end="87:26">&amp;</operator><name pos:start="87:27" pos:end="87:38"><name pos:start="87:27" pos:end="87:29">qxl</name><operator pos:start="87:30" pos:end="87:31">-&gt;</operator><name pos:start="87:32" pos:end="87:38">rom_bar</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:54"><expr pos:start="87:41" pos:end="87:54"><operator pos:start="87:41" pos:end="87:41">&amp;</operator><name pos:start="87:42" pos:end="87:54"><name pos:start="87:42" pos:end="87:44">qxl</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:49">pci</name><operator pos:start="87:50" pos:end="87:50">.</operator><name pos:start="87:51" pos:end="87:54">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:22"><expr pos:start="89:5" pos:end="89:21"><call pos:start="89:5" pos:end="89:21"><name pos:start="89:5" pos:end="89:16">init_qxl_rom</name><argument_list pos:start="89:17" pos:end="89:21">(<argument pos:start="89:18" pos:end="89:20"><expr pos:start="89:18" pos:end="89:20"><name pos:start="89:18" pos:end="89:20">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:22"><expr pos:start="91:5" pos:end="91:21"><call pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:16">init_qxl_ram</name><argument_list pos:start="91:17" pos:end="91:21">(<argument pos:start="91:18" pos:end="91:20"><expr pos:start="91:18" pos:end="91:20"><name pos:start="91:18" pos:end="91:20">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:74"><expr pos:start="95:5" pos:end="95:73"><name pos:start="95:5" pos:end="95:28"><name pos:start="95:5" pos:end="95:7">qxl</name><operator pos:start="95:8" pos:end="95:9">-&gt;</operator><name pos:start="95:10" pos:end="95:23">guest_surfaces</name><operator pos:start="95:24" pos:end="95:24">.</operator><name pos:start="95:25" pos:end="95:28">cmds</name></name> <operator pos:start="95:30" pos:end="95:30">=</operator> <call pos:start="95:32" pos:end="95:73"><name pos:start="95:32" pos:end="95:37">g_new0</name><argument_list pos:start="95:38" pos:end="95:73">(<argument pos:start="95:39" pos:end="95:49"><expr pos:start="95:39" pos:end="95:49"><name pos:start="95:39" pos:end="95:49">QXLPHYSICAL</name></expr></argument>, <argument pos:start="95:52" pos:end="95:72"><expr pos:start="95:52" pos:end="95:72"><name pos:start="95:52" pos:end="95:72"><name pos:start="95:52" pos:end="95:54">qxl</name><operator pos:start="95:55" pos:end="95:56">-&gt;</operator><name pos:start="95:57" pos:end="95:59">ssd</name><operator pos:start="95:60" pos:end="95:60">.</operator><name pos:start="95:61" pos:end="95:72">num_surfaces</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="99:57"><expr pos:start="97:5" pos:end="99:56"><call pos:start="97:5" pos:end="99:56"><name pos:start="97:5" pos:end="97:26">memory_region_init_ram</name><argument_list pos:start="97:27" pos:end="99:56">(<argument pos:start="97:28" pos:end="97:41"><expr pos:start="97:28" pos:end="97:41"><operator pos:start="97:28" pos:end="97:28">&amp;</operator><name pos:start="97:29" pos:end="97:41"><name pos:start="97:29" pos:end="97:31">qxl</name><operator pos:start="97:32" pos:end="97:33">-&gt;</operator><name pos:start="97:34" pos:end="97:41">vram_bar</name></name></expr></argument>, <argument pos:start="97:44" pos:end="97:54"><expr pos:start="97:44" pos:end="97:54"><call pos:start="97:44" pos:end="97:54"><name pos:start="97:44" pos:end="97:49">OBJECT</name><argument_list pos:start="97:50" pos:end="97:54">(<argument pos:start="97:51" pos:end="97:53"><expr pos:start="97:51" pos:end="97:53"><name pos:start="97:51" pos:end="97:53">qxl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:57" pos:end="97:66"><expr pos:start="97:57" pos:end="97:66"><literal type="string" pos:start="97:57" pos:end="97:66">"qxl.vram"</literal></expr></argument>,

                           <argument pos:start="99:28" pos:end="99:41"><expr pos:start="99:28" pos:end="99:41"><name pos:start="99:28" pos:end="99:41"><name pos:start="99:28" pos:end="99:30">qxl</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:41">vram_size</name></name></expr></argument>, <argument pos:start="99:44" pos:end="99:55"><expr pos:start="99:44" pos:end="99:55"><operator pos:start="99:44" pos:end="99:44">&amp;</operator><name pos:start="99:45" pos:end="99:55">error_fatal</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:57"><expr pos:start="101:5" pos:end="101:56"><call pos:start="101:5" pos:end="101:56"><name pos:start="101:5" pos:end="101:24">vmstate_register_ram</name><argument_list pos:start="101:25" pos:end="101:56">(<argument pos:start="101:26" pos:end="101:39"><expr pos:start="101:26" pos:end="101:39"><operator pos:start="101:26" pos:end="101:26">&amp;</operator><name pos:start="101:27" pos:end="101:39"><name pos:start="101:27" pos:end="101:29">qxl</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:39">vram_bar</name></name></expr></argument>, <argument pos:start="101:42" pos:end="101:55"><expr pos:start="101:42" pos:end="101:55"><operator pos:start="101:42" pos:end="101:42">&amp;</operator><name pos:start="101:43" pos:end="101:55"><name pos:start="101:43" pos:end="101:45">qxl</name><operator pos:start="101:46" pos:end="101:47">-&gt;</operator><name pos:start="101:48" pos:end="101:50">pci</name><operator pos:start="101:51" pos:end="101:51">.</operator><name pos:start="101:52" pos:end="101:55">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="105:66"><expr pos:start="103:5" pos:end="105:65"><call pos:start="103:5" pos:end="105:65"><name pos:start="103:5" pos:end="103:28">memory_region_init_alias</name><argument_list pos:start="103:29" pos:end="105:65">(<argument pos:start="103:30" pos:end="103:45"><expr pos:start="103:30" pos:end="103:45"><operator pos:start="103:30" pos:end="103:30">&amp;</operator><name pos:start="103:31" pos:end="103:45"><name pos:start="103:31" pos:end="103:33">qxl</name><operator pos:start="103:34" pos:end="103:35">-&gt;</operator><name pos:start="103:36" pos:end="103:45">vram32_bar</name></name></expr></argument>, <argument pos:start="103:48" pos:end="103:58"><expr pos:start="103:48" pos:end="103:58"><call pos:start="103:48" pos:end="103:58"><name pos:start="103:48" pos:end="103:53">OBJECT</name><argument_list pos:start="103:54" pos:end="103:58">(<argument pos:start="103:55" pos:end="103:57"><expr pos:start="103:55" pos:end="103:57"><name pos:start="103:55" pos:end="103:57">qxl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="103:61" pos:end="103:72"><expr pos:start="103:61" pos:end="103:72"><literal type="string" pos:start="103:61" pos:end="103:72">"qxl.vram32"</literal></expr></argument>,

                             <argument pos:start="105:30" pos:end="105:43"><expr pos:start="105:30" pos:end="105:43"><operator pos:start="105:30" pos:end="105:30">&amp;</operator><name pos:start="105:31" pos:end="105:43"><name pos:start="105:31" pos:end="105:33">qxl</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:43">vram_bar</name></name></expr></argument>, <argument pos:start="105:46" pos:end="105:46"><expr pos:start="105:46" pos:end="105:46"><literal type="number" pos:start="105:46" pos:end="105:46">0</literal></expr></argument>, <argument pos:start="105:49" pos:end="105:64"><expr pos:start="105:49" pos:end="105:64"><name pos:start="105:49" pos:end="105:64"><name pos:start="105:49" pos:end="105:51">qxl</name><operator pos:start="105:52" pos:end="105:53">-&gt;</operator><name pos:start="105:54" pos:end="105:64">vram32_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="109:5" pos:end="111:50"><expr pos:start="109:5" pos:end="111:49"><call pos:start="109:5" pos:end="111:49"><name pos:start="109:5" pos:end="109:25">memory_region_init_io</name><argument_list pos:start="109:26" pos:end="111:49">(<argument pos:start="109:27" pos:end="109:38"><expr pos:start="109:27" pos:end="109:38"><operator pos:start="109:27" pos:end="109:27">&amp;</operator><name pos:start="109:28" pos:end="109:38"><name pos:start="109:28" pos:end="109:30">qxl</name><operator pos:start="109:31" pos:end="109:32">-&gt;</operator><name pos:start="109:33" pos:end="109:38">io_bar</name></name></expr></argument>, <argument pos:start="109:41" pos:end="109:51"><expr pos:start="109:41" pos:end="109:51"><call pos:start="109:41" pos:end="109:51"><name pos:start="109:41" pos:end="109:46">OBJECT</name><argument_list pos:start="109:47" pos:end="109:51">(<argument pos:start="109:48" pos:end="109:50"><expr pos:start="109:48" pos:end="109:50"><name pos:start="109:48" pos:end="109:50">qxl</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:54" pos:end="109:64"><expr pos:start="109:54" pos:end="109:64"><operator pos:start="109:54" pos:end="109:54">&amp;</operator><name pos:start="109:55" pos:end="109:64">qxl_io_ops</name></expr></argument>, <argument pos:start="109:67" pos:end="109:69"><expr pos:start="109:67" pos:end="109:69"><name pos:start="109:67" pos:end="109:69">qxl</name></expr></argument>,

                          <argument pos:start="111:27" pos:end="111:39"><expr pos:start="111:27" pos:end="111:39"><literal type="string" pos:start="111:27" pos:end="111:39">"qxl-ioports"</literal></expr></argument>, <argument pos:start="111:42" pos:end="111:48"><expr pos:start="111:42" pos:end="111:48"><name pos:start="111:42" pos:end="111:48">io_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="113:5" pos:end="117:5"><if pos:start="113:5" pos:end="117:5">if <condition pos:start="113:8" pos:end="113:21">(<expr pos:start="113:9" pos:end="113:20"><name pos:start="113:9" pos:end="113:15"><name pos:start="113:9" pos:end="113:11">qxl</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:15">id</name></name> <operator pos:start="113:17" pos:end="113:18">==</operator> <literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>)</condition> <block pos:start="113:23" pos:end="117:5">{<block_content pos:start="115:9" pos:end="115:39">

        <expr_stmt pos:start="115:9" pos:end="115:39"><expr pos:start="115:9" pos:end="115:38"><call pos:start="115:9" pos:end="115:38"><name pos:start="115:9" pos:end="115:27">vga_dirty_log_start</name><argument_list pos:start="115:28" pos:end="115:38">(<argument pos:start="115:29" pos:end="115:37"><expr pos:start="115:29" pos:end="115:37"><operator pos:start="115:29" pos:end="115:29">&amp;</operator><name pos:start="115:30" pos:end="115:37"><name pos:start="115:30" pos:end="115:32">qxl</name><operator pos:start="115:33" pos:end="115:34">-&gt;</operator><name pos:start="115:35" pos:end="115:37">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:52"><expr pos:start="119:5" pos:end="119:51"><call pos:start="119:5" pos:end="119:51"><name pos:start="119:5" pos:end="119:37">memory_region_set_flush_coalesced</name><argument_list pos:start="119:38" pos:end="119:51">(<argument pos:start="119:39" pos:end="119:50"><expr pos:start="119:39" pos:end="119:50"><operator pos:start="119:39" pos:end="119:39">&amp;</operator><name pos:start="119:40" pos:end="119:50"><name pos:start="119:40" pos:end="119:42">qxl</name><operator pos:start="119:43" pos:end="119:44">-&gt;</operator><name pos:start="119:45" pos:end="119:50">io_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>





    <expr_stmt pos:start="125:5" pos:end="127:62"><expr pos:start="125:5" pos:end="127:61"><call pos:start="125:5" pos:end="127:61"><name pos:start="125:5" pos:end="125:20">pci_register_bar</name><argument_list pos:start="125:21" pos:end="127:61">(<argument pos:start="125:22" pos:end="125:30"><expr pos:start="125:22" pos:end="125:30"><operator pos:start="125:22" pos:end="125:22">&amp;</operator><name pos:start="125:23" pos:end="125:30"><name pos:start="125:23" pos:end="125:25">qxl</name><operator pos:start="125:26" pos:end="125:27">-&gt;</operator><name pos:start="125:28" pos:end="125:30">pci</name></name></expr></argument>, <argument pos:start="125:33" pos:end="125:50"><expr pos:start="125:33" pos:end="125:50"><name pos:start="125:33" pos:end="125:50">QXL_IO_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="127:22" pos:end="127:46"><expr pos:start="127:22" pos:end="127:46"><name pos:start="127:22" pos:end="127:46">PCI_BASE_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="127:49" pos:end="127:60"><expr pos:start="127:49" pos:end="127:60"><operator pos:start="127:49" pos:end="127:49">&amp;</operator><name pos:start="127:50" pos:end="127:60"><name pos:start="127:50" pos:end="127:52">qxl</name><operator pos:start="127:53" pos:end="127:54">-&gt;</operator><name pos:start="127:55" pos:end="127:60">io_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="131:5" pos:end="133:67"><expr pos:start="131:5" pos:end="133:66"><call pos:start="131:5" pos:end="133:66"><name pos:start="131:5" pos:end="131:20">pci_register_bar</name><argument_list pos:start="131:21" pos:end="133:66">(<argument pos:start="131:22" pos:end="131:30"><expr pos:start="131:22" pos:end="131:30"><operator pos:start="131:22" pos:end="131:22">&amp;</operator><name pos:start="131:23" pos:end="131:30"><name pos:start="131:23" pos:end="131:25">qxl</name><operator pos:start="131:26" pos:end="131:27">-&gt;</operator><name pos:start="131:28" pos:end="131:30">pci</name></name></expr></argument>, <argument pos:start="131:33" pos:end="131:51"><expr pos:start="131:33" pos:end="131:51"><name pos:start="131:33" pos:end="131:51">QXL_ROM_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="133:22" pos:end="133:50"><expr pos:start="133:22" pos:end="133:50"><name pos:start="133:22" pos:end="133:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="133:53" pos:end="133:65"><expr pos:start="133:53" pos:end="133:65"><operator pos:start="133:53" pos:end="133:53">&amp;</operator><name pos:start="133:54" pos:end="133:65"><name pos:start="133:54" pos:end="133:56">qxl</name><operator pos:start="133:57" pos:end="133:58">-&gt;</operator><name pos:start="133:59" pos:end="133:65">rom_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="137:5" pos:end="139:68"><expr pos:start="137:5" pos:end="139:67"><call pos:start="137:5" pos:end="139:67"><name pos:start="137:5" pos:end="137:20">pci_register_bar</name><argument_list pos:start="137:21" pos:end="139:67">(<argument pos:start="137:22" pos:end="137:30"><expr pos:start="137:22" pos:end="137:30"><operator pos:start="137:22" pos:end="137:22">&amp;</operator><name pos:start="137:23" pos:end="137:30"><name pos:start="137:23" pos:end="137:25">qxl</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:30">pci</name></name></expr></argument>, <argument pos:start="137:33" pos:end="137:51"><expr pos:start="137:33" pos:end="137:51"><name pos:start="137:33" pos:end="137:51">QXL_RAM_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="139:22" pos:end="139:50"><expr pos:start="139:22" pos:end="139:50"><name pos:start="139:22" pos:end="139:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="139:53" pos:end="139:66"><expr pos:start="139:53" pos:end="139:66"><operator pos:start="139:53" pos:end="139:53">&amp;</operator><name pos:start="139:54" pos:end="139:66"><name pos:start="139:54" pos:end="139:56">qxl</name><operator pos:start="139:57" pos:end="139:58">-&gt;</operator><name pos:start="139:59" pos:end="139:61">vga</name><operator pos:start="139:62" pos:end="139:62">.</operator><name pos:start="139:63" pos:end="139:66">vram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="145:70"><expr pos:start="143:5" pos:end="145:69"><call pos:start="143:5" pos:end="145:69"><name pos:start="143:5" pos:end="143:20">pci_register_bar</name><argument_list pos:start="143:21" pos:end="145:69">(<argument pos:start="143:22" pos:end="143:30"><expr pos:start="143:22" pos:end="143:30"><operator pos:start="143:22" pos:end="143:22">&amp;</operator><name pos:start="143:23" pos:end="143:30"><name pos:start="143:23" pos:end="143:25">qxl</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:30">pci</name></name></expr></argument>, <argument pos:start="143:33" pos:end="143:52"><expr pos:start="143:33" pos:end="143:52"><name pos:start="143:33" pos:end="143:52">QXL_VRAM_RANGE_INDEX</name></expr></argument>,

                     <argument pos:start="145:22" pos:end="145:50"><expr pos:start="145:22" pos:end="145:50"><name pos:start="145:22" pos:end="145:50">PCI_BASE_ADDRESS_SPACE_MEMORY</name></expr></argument>, <argument pos:start="145:53" pos:end="145:68"><expr pos:start="145:53" pos:end="145:68"><operator pos:start="145:53" pos:end="145:53">&amp;</operator><name pos:start="145:54" pos:end="145:68"><name pos:start="145:54" pos:end="145:56">qxl</name><operator pos:start="145:57" pos:end="145:58">-&gt;</operator><name pos:start="145:59" pos:end="145:68">vram32_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="149:5" pos:end="169:5"><if pos:start="149:5" pos:end="169:5">if <condition pos:start="149:8" pos:end="149:42">(<expr pos:start="149:9" pos:end="149:41"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:11">qxl</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:24">vram32_size</name></name> <operator pos:start="149:26" pos:end="149:26">&lt;</operator> <name pos:start="149:28" pos:end="149:41"><name pos:start="149:28" pos:end="149:30">qxl</name><operator pos:start="149:31" pos:end="149:32">-&gt;</operator><name pos:start="149:33" pos:end="149:41">vram_size</name></name></expr>)</condition> <block pos:start="149:44" pos:end="169:5">{<block_content pos:start="159:9" pos:end="167:41">

        <comment type="block" pos:start="151:9" pos:end="157:11">/*

         * Make the 64bit vram bar show up only in case it is

         * configured to be larger than the 32bit vram bar.

         */</comment>

        <expr_stmt pos:start="159:9" pos:end="167:41"><expr pos:start="159:9" pos:end="167:40"><call pos:start="159:9" pos:end="167:40"><name pos:start="159:9" pos:end="159:24">pci_register_bar</name><argument_list pos:start="159:25" pos:end="167:40">(<argument pos:start="159:26" pos:end="159:34"><expr pos:start="159:26" pos:end="159:34"><operator pos:start="159:26" pos:end="159:26">&amp;</operator><name pos:start="159:27" pos:end="159:34"><name pos:start="159:27" pos:end="159:29">qxl</name><operator pos:start="159:30" pos:end="159:31">-&gt;</operator><name pos:start="159:32" pos:end="159:34">pci</name></name></expr></argument>, <argument pos:start="159:37" pos:end="159:58"><expr pos:start="159:37" pos:end="159:58"><name pos:start="159:37" pos:end="159:58">QXL_VRAM64_RANGE_INDEX</name></expr></argument>,

                         <argument pos:start="161:26" pos:end="165:54"><expr pos:start="161:26" pos:end="165:54"><name pos:start="161:26" pos:end="161:54">PCI_BASE_ADDRESS_SPACE_MEMORY</name> <operator pos:start="161:56" pos:end="161:56">|</operator>

                         <name pos:start="163:26" pos:end="163:53">PCI_BASE_ADDRESS_MEM_TYPE_64</name> <operator pos:start="163:55" pos:end="163:55">|</operator>

                         <name pos:start="165:26" pos:end="165:54">PCI_BASE_ADDRESS_MEM_PREFETCH</name></expr></argument>,

                         <argument pos:start="167:26" pos:end="167:39"><expr pos:start="167:26" pos:end="167:39"><operator pos:start="167:26" pos:end="167:26">&amp;</operator><name pos:start="167:27" pos:end="167:39"><name pos:start="167:27" pos:end="167:29">qxl</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:39">vram_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="173:5" pos:end="173:31">/* print pci bar details */</comment>

    <expr_stmt pos:start="175:5" pos:end="179:45"><expr pos:start="175:5" pos:end="179:44"><call pos:start="175:5" pos:end="179:44"><name pos:start="175:5" pos:end="175:10">dprint</name><argument_list pos:start="175:11" pos:end="179:44">(<argument pos:start="175:12" pos:end="175:14"><expr pos:start="175:12" pos:end="175:14"><name pos:start="175:12" pos:end="175:14">qxl</name></expr></argument>, <argument pos:start="175:17" pos:end="175:17"><expr pos:start="175:17" pos:end="175:17"><literal type="number" pos:start="175:17" pos:end="175:17">1</literal></expr></argument>, <argument pos:start="175:20" pos:end="175:47"><expr pos:start="175:20" pos:end="175:47"><literal type="string" pos:start="175:20" pos:end="175:47">"ram/%s: %d MB [region 0]\n"</literal></expr></argument>,

           <argument pos:start="177:12" pos:end="177:39"><expr pos:start="177:12" pos:end="177:39"><ternary pos:start="177:12" pos:end="177:39"><condition pos:start="177:12" pos:end="177:25"><expr pos:start="177:12" pos:end="177:23"><name pos:start="177:12" pos:end="177:18"><name pos:start="177:12" pos:end="177:14">qxl</name><operator pos:start="177:15" pos:end="177:16">-&gt;</operator><name pos:start="177:17" pos:end="177:18">id</name></name> <operator pos:start="177:20" pos:end="177:21">==</operator> <literal type="number" pos:start="177:23" pos:end="177:23">0</literal></expr> ?</condition><then pos:start="177:27" pos:end="177:31"> <expr pos:start="177:27" pos:end="177:31"><literal type="string" pos:start="177:27" pos:end="177:31">"pri"</literal></expr> </then><else pos:start="177:33" pos:end="177:39">: <expr pos:start="177:35" pos:end="177:39"><literal type="string" pos:start="177:35" pos:end="177:39">"sec"</literal></expr></else></ternary></expr></argument>,

           <argument pos:start="179:12" pos:end="179:43"><expr pos:start="179:12" pos:end="179:43"><name pos:start="179:12" pos:end="179:29"><name pos:start="179:12" pos:end="179:14">qxl</name><operator pos:start="179:15" pos:end="179:16">-&gt;</operator><name pos:start="179:17" pos:end="179:19">vga</name><operator pos:start="179:20" pos:end="179:20">.</operator><name pos:start="179:21" pos:end="179:29">vram_size</name></name> <operator pos:start="179:31" pos:end="179:31">/</operator> <operator pos:start="179:33" pos:end="179:33">(</operator><literal type="number" pos:start="179:34" pos:end="179:37">1024</literal><operator pos:start="179:38" pos:end="179:38">*</operator><literal type="number" pos:start="179:39" pos:end="179:42">1024</literal><operator pos:start="179:43" pos:end="179:43">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="181:5" pos:end="183:43"><expr pos:start="181:5" pos:end="183:42"><call pos:start="181:5" pos:end="183:42"><name pos:start="181:5" pos:end="181:10">dprint</name><argument_list pos:start="181:11" pos:end="183:42">(<argument pos:start="181:12" pos:end="181:14"><expr pos:start="181:12" pos:end="181:14"><name pos:start="181:12" pos:end="181:14">qxl</name></expr></argument>, <argument pos:start="181:17" pos:end="181:17"><expr pos:start="181:17" pos:end="181:17"><literal type="number" pos:start="181:17" pos:end="181:17">1</literal></expr></argument>, <argument pos:start="181:20" pos:end="181:48"><expr pos:start="181:20" pos:end="181:48"><literal type="string" pos:start="181:20" pos:end="181:48">"vram/32: %d MB [region 1]\n"</literal></expr></argument>,

           <argument pos:start="183:12" pos:end="183:41"><expr pos:start="183:12" pos:end="183:41"><name pos:start="183:12" pos:end="183:27"><name pos:start="183:12" pos:end="183:14">qxl</name><operator pos:start="183:15" pos:end="183:16">-&gt;</operator><name pos:start="183:17" pos:end="183:27">vram32_size</name></name> <operator pos:start="183:29" pos:end="183:29">/</operator> <operator pos:start="183:31" pos:end="183:31">(</operator><literal type="number" pos:start="183:32" pos:end="183:35">1024</literal><operator pos:start="183:36" pos:end="183:36">*</operator><literal type="number" pos:start="183:37" pos:end="183:40">1024</literal><operator pos:start="183:41" pos:end="183:41">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="185:5" pos:end="189:76"><expr pos:start="185:5" pos:end="189:75"><call pos:start="185:5" pos:end="189:75"><name pos:start="185:5" pos:end="185:10">dprint</name><argument_list pos:start="185:11" pos:end="189:75">(<argument pos:start="185:12" pos:end="185:14"><expr pos:start="185:12" pos:end="185:14"><name pos:start="185:12" pos:end="185:14">qxl</name></expr></argument>, <argument pos:start="185:17" pos:end="185:17"><expr pos:start="185:17" pos:end="185:17"><literal type="number" pos:start="185:17" pos:end="185:17">1</literal></expr></argument>, <argument pos:start="185:20" pos:end="185:40"><expr pos:start="185:20" pos:end="185:40"><literal type="string" pos:start="185:20" pos:end="185:40">"vram/64: %d MB %s\n"</literal></expr></argument>,

           <argument pos:start="187:12" pos:end="187:39"><expr pos:start="187:12" pos:end="187:39"><name pos:start="187:12" pos:end="187:25"><name pos:start="187:12" pos:end="187:14">qxl</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:25">vram_size</name></name> <operator pos:start="187:27" pos:end="187:27">/</operator> <operator pos:start="187:29" pos:end="187:29">(</operator><literal type="number" pos:start="187:30" pos:end="187:33">1024</literal><operator pos:start="187:34" pos:end="187:34">*</operator><literal type="number" pos:start="187:35" pos:end="187:38">1024</literal><operator pos:start="187:39" pos:end="187:39">)</operator></expr></argument>,

           <argument pos:start="189:12" pos:end="189:74"><expr pos:start="189:12" pos:end="189:74"><ternary pos:start="189:12" pos:end="189:74"><condition pos:start="189:12" pos:end="189:46"><expr pos:start="189:12" pos:end="189:44"><name pos:start="189:12" pos:end="189:27"><name pos:start="189:12" pos:end="189:14">qxl</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:27">vram32_size</name></name> <operator pos:start="189:29" pos:end="189:29">&lt;</operator> <name pos:start="189:31" pos:end="189:44"><name pos:start="189:31" pos:end="189:33">qxl</name><operator pos:start="189:34" pos:end="189:35">-&gt;</operator><name pos:start="189:36" pos:end="189:44">vram_size</name></name></expr> ?</condition><then pos:start="189:48" pos:end="189:59"> <expr pos:start="189:48" pos:end="189:59"><literal type="string" pos:start="189:48" pos:end="189:59">"[region 4]"</literal></expr> </then><else pos:start="189:61" pos:end="189:74">: <expr pos:start="189:63" pos:end="189:74"><literal type="string" pos:start="189:63" pos:end="189:74">"[unmapped]"</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="193:5" pos:end="193:48"><expr pos:start="193:5" pos:end="193:47"><name pos:start="193:5" pos:end="193:25"><name pos:start="193:5" pos:end="193:7">qxl</name><operator pos:start="193:8" pos:end="193:9">-&gt;</operator><name pos:start="193:10" pos:end="193:12">ssd</name><operator pos:start="193:13" pos:end="193:13">.</operator><name pos:start="193:14" pos:end="193:16">qxl</name><operator pos:start="193:17" pos:end="193:17">.</operator><name pos:start="193:18" pos:end="193:21">base</name><operator pos:start="193:22" pos:end="193:22">.</operator><name pos:start="193:23" pos:end="193:25">sif</name></name> <operator pos:start="193:27" pos:end="193:27">=</operator> <operator pos:start="193:29" pos:end="193:29">&amp;</operator><name pos:start="193:30" pos:end="193:47"><name pos:start="193:30" pos:end="193:42">qxl_interface</name><operator pos:start="193:43" pos:end="193:43">.</operator><name pos:start="193:44" pos:end="193:47">base</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="195:5" pos:end="203:5"><if pos:start="195:5" pos:end="203:5">if <condition pos:start="195:8" pos:end="195:75">(<expr pos:start="195:9" pos:end="195:74"><call pos:start="195:9" pos:end="195:69"><name pos:start="195:9" pos:end="195:40">qemu_spice_add_display_interface</name><argument_list pos:start="195:41" pos:end="195:69">(<argument pos:start="195:42" pos:end="195:54"><expr pos:start="195:42" pos:end="195:54"><operator pos:start="195:42" pos:end="195:42">&amp;</operator><name pos:start="195:43" pos:end="195:54"><name pos:start="195:43" pos:end="195:45">qxl</name><operator pos:start="195:46" pos:end="195:47">-&gt;</operator><name pos:start="195:48" pos:end="195:50">ssd</name><operator pos:start="195:51" pos:end="195:51">.</operator><name pos:start="195:52" pos:end="195:54">qxl</name></name></expr></argument>, <argument pos:start="195:57" pos:end="195:68"><expr pos:start="195:57" pos:end="195:68"><name pos:start="195:57" pos:end="195:68"><name pos:start="195:57" pos:end="195:59">qxl</name><operator pos:start="195:60" pos:end="195:61">-&gt;</operator><name pos:start="195:62" pos:end="195:64">vga</name><operator pos:start="195:65" pos:end="195:65">.</operator><name pos:start="195:66" pos:end="195:68">con</name></name></expr></argument>)</argument_list></call> <operator pos:start="195:71" pos:end="195:72">!=</operator> <literal type="number" pos:start="195:74" pos:end="195:74">0</literal></expr>)</condition> <block pos:start="195:77" pos:end="203:5">{<block_content pos:start="197:9" pos:end="201:15">

        <expr_stmt pos:start="197:9" pos:end="199:73"><expr pos:start="197:9" pos:end="199:72"><call pos:start="197:9" pos:end="199:72"><name pos:start="197:9" pos:end="197:18">error_setg</name><argument_list pos:start="197:19" pos:end="199:72">(<argument pos:start="197:20" pos:end="197:23"><expr pos:start="197:20" pos:end="197:23"><name pos:start="197:20" pos:end="197:23">errp</name></expr></argument>, <argument pos:start="197:26" pos:end="197:76"><expr pos:start="197:26" pos:end="197:76"><literal type="string" pos:start="197:26" pos:end="197:76">"qxl interface %d.%d not supported by spice-server"</literal></expr></argument>,

                   <argument pos:start="199:20" pos:end="199:44"><expr pos:start="199:20" pos:end="199:44"><name pos:start="199:20" pos:end="199:44">SPICE_INTERFACE_QXL_MAJOR</name></expr></argument>, <argument pos:start="199:47" pos:end="199:71"><expr pos:start="199:47" pos:end="199:71"><name pos:start="199:47" pos:end="199:71">SPICE_INTERFACE_QXL_MINOR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="201:9" pos:end="201:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:71"><expr pos:start="205:5" pos:end="205:70"><call pos:start="205:5" pos:end="205:70"><name pos:start="205:5" pos:end="205:36">qemu_add_vm_change_state_handler</name><argument_list pos:start="205:37" pos:end="205:70">(<argument pos:start="205:38" pos:end="205:64"><expr pos:start="205:38" pos:end="205:64"><name pos:start="205:38" pos:end="205:64">qxl_vm_change_state_handler</name></expr></argument>, <argument pos:start="205:67" pos:end="205:69"><expr pos:start="205:67" pos:end="205:69"><name pos:start="205:67" pos:end="205:69">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:58"><expr pos:start="209:5" pos:end="209:57"><name pos:start="209:5" pos:end="209:19"><name pos:start="209:5" pos:end="209:7">qxl</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:19">update_irq</name></name> <operator pos:start="209:21" pos:end="209:21">=</operator> <call pos:start="209:23" pos:end="209:57"><name pos:start="209:23" pos:end="209:33">qemu_bh_new</name><argument_list pos:start="209:34" pos:end="209:57">(<argument pos:start="209:35" pos:end="209:51"><expr pos:start="209:35" pos:end="209:51"><name pos:start="209:35" pos:end="209:51">qxl_update_irq_bh</name></expr></argument>, <argument pos:start="209:54" pos:end="209:56"><expr pos:start="209:54" pos:end="209:56"><name pos:start="209:54" pos:end="209:56">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:25"><expr pos:start="211:5" pos:end="211:24"><call pos:start="211:5" pos:end="211:24"><name pos:start="211:5" pos:end="211:19">qxl_reset_state</name><argument_list pos:start="211:20" pos:end="211:24">(<argument pos:start="211:21" pos:end="211:23"><expr pos:start="211:21" pos:end="211:23"><name pos:start="211:21" pos:end="211:23">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="215:5" pos:end="215:70"><expr pos:start="215:5" pos:end="215:69"><name pos:start="215:5" pos:end="215:23"><name pos:start="215:5" pos:end="215:7">qxl</name><operator pos:start="215:8" pos:end="215:9">-&gt;</operator><name pos:start="215:10" pos:end="215:23">update_area_bh</name></name> <operator pos:start="215:25" pos:end="215:25">=</operator> <call pos:start="215:27" pos:end="215:69"><name pos:start="215:27" pos:end="215:37">qemu_bh_new</name><argument_list pos:start="215:38" pos:end="215:69">(<argument pos:start="215:39" pos:end="215:63"><expr pos:start="215:39" pos:end="215:63"><name pos:start="215:39" pos:end="215:63">qxl_render_update_area_bh</name></expr></argument>, <argument pos:start="215:66" pos:end="215:68"><expr pos:start="215:66" pos:end="215:68"><name pos:start="215:66" pos:end="215:68">qxl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="217:5" pos:end="217:78"><expr pos:start="217:5" pos:end="217:77"><name pos:start="217:5" pos:end="217:22"><name pos:start="217:5" pos:end="217:7">qxl</name><operator pos:start="217:8" pos:end="217:9">-&gt;</operator><name pos:start="217:10" pos:end="217:12">ssd</name><operator pos:start="217:13" pos:end="217:13">.</operator><name pos:start="217:14" pos:end="217:22">cursor_bh</name></name> <operator pos:start="217:24" pos:end="217:24">=</operator> <call pos:start="217:26" pos:end="217:77"><name pos:start="217:26" pos:end="217:36">qemu_bh_new</name><argument_list pos:start="217:37" pos:end="217:77">(<argument pos:start="217:38" pos:end="217:65"><expr pos:start="217:38" pos:end="217:65"><name pos:start="217:38" pos:end="217:65">qemu_spice_cursor_refresh_bh</name></expr></argument>, <argument pos:start="217:68" pos:end="217:76"><expr pos:start="217:68" pos:end="217:76"><operator pos:start="217:68" pos:end="217:68">&amp;</operator><name pos:start="217:69" pos:end="217:76"><name pos:start="217:69" pos:end="217:71">qxl</name><operator pos:start="217:72" pos:end="217:73">-&gt;</operator><name pos:start="217:74" pos:end="217:76">ssd</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
