<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14954.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:45">qemu_chr_open_ringbuf</name><parameter_list pos:start="1:46" pos:end="3:59">(<parameter pos:start="1:47" pos:end="1:66"><decl pos:start="1:47" pos:end="1:66"><type pos:start="1:47" pos:end="1:66"><name pos:start="1:47" pos:end="1:60">ChardevRingbuf</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">opts</name></decl></parameter>,

                                              <parameter pos:start="3:47" pos:end="3:58"><decl pos:start="3:47" pos:end="3:58"><type pos:start="3:47" pos:end="3:58"><name pos:start="3:47" pos:end="3:51">Error</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier><modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:16">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">CharDriverState</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">chr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:25"><decl pos:start="9:5" pos:end="9:24"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">RingBufCharDriver</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:45"><expr pos:start="13:5" pos:end="13:44"><name pos:start="13:5" pos:end="13:7">chr</name> <operator pos:start="13:9" pos:end="13:9">=</operator> <call pos:start="13:11" pos:end="13:44"><name pos:start="13:11" pos:end="13:19">g_malloc0</name><argument_list pos:start="13:20" pos:end="13:44">(<argument pos:start="13:21" pos:end="13:43"><expr pos:start="13:21" pos:end="13:43"><sizeof pos:start="13:21" pos:end="13:43">sizeof<argument_list pos:start="13:27" pos:end="13:43">(<argument pos:start="13:28" pos:end="13:42"><expr pos:start="13:28" pos:end="13:42"><name pos:start="13:28" pos:end="13:42">CharDriverState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:5">d</name> <operator pos:start="15:7" pos:end="15:7">=</operator> <call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:16">g_malloc</name><argument_list pos:start="15:17" pos:end="15:28">(<argument pos:start="15:18" pos:end="15:27"><expr pos:start="15:18" pos:end="15:27"><sizeof pos:start="15:18" pos:end="15:27">sizeof<argument_list pos:start="15:24" pos:end="15:27">(<argument pos:start="15:25" pos:end="15:26"><expr pos:start="15:25" pos:end="15:26"><operator pos:start="15:25" pos:end="15:25">*</operator><name pos:start="15:26" pos:end="15:26">d</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:5">d</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:11">size</name></name> <operator pos:start="19:13" pos:end="19:13">=</operator> <ternary pos:start="19:15" pos:end="19:49"><condition pos:start="19:15" pos:end="19:30"><expr pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:18">opts</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:28">has_size</name></name></expr> ?</condition><then pos:start="19:32" pos:end="19:41"> <expr pos:start="19:32" pos:end="19:41"><name pos:start="19:32" pos:end="19:41"><name pos:start="19:32" pos:end="19:35">opts</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:41">size</name></name></expr> </then><else pos:start="19:43" pos:end="19:49">: <expr pos:start="19:45" pos:end="19:49"><literal type="number" pos:start="19:45" pos:end="19:49">65536</literal></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:37">/* The size must be power of 2 */</comment>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:32">(<expr pos:start="25:9" pos:end="25:31"><name pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:9">d</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:15">size</name></name> <operator pos:start="25:17" pos:end="25:17">&amp;</operator> <operator pos:start="25:19" pos:end="25:19">(</operator><name pos:start="25:20" pos:end="25:26"><name pos:start="25:20" pos:end="25:20">d</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:26">size</name></name> <operator pos:start="25:28" pos:end="25:28">-</operator> <literal type="number" pos:start="25:30" pos:end="25:30">1</literal><operator pos:start="25:31" pos:end="25:31">)</operator></expr>)</condition> <block pos:start="25:34" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:18">

        <expr_stmt pos:start="27:9" pos:end="27:73"><expr pos:start="27:9" pos:end="27:72"><call pos:start="27:9" pos:end="27:72"><name pos:start="27:9" pos:end="27:18">error_setg</name><argument_list pos:start="27:19" pos:end="27:72">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">errp</name></expr></argument>, <argument pos:start="27:26" pos:end="27:71"><expr pos:start="27:26" pos:end="27:71"><literal type="string" pos:start="27:26" pos:end="27:71">"size of ringbuf chardev must be power of two"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:18">goto <name pos:start="29:14" pos:end="29:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">d</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">prod</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <literal type="number" pos:start="35:15" pos:end="35:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:16"><expr pos:start="37:5" pos:end="37:15"><name pos:start="37:5" pos:end="37:11"><name pos:start="37:5" pos:end="37:5">d</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:11">cons</name></name> <operator pos:start="37:13" pos:end="37:13">=</operator> <literal type="number" pos:start="37:15" pos:end="37:15">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:5">d</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:11">cbuf</name></name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:32"><name pos:start="39:15" pos:end="39:23">g_malloc0</name><argument_list pos:start="39:24" pos:end="39:32">(<argument pos:start="39:25" pos:end="39:31"><expr pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:31"><name pos:start="39:25" pos:end="39:25">d</name><operator pos:start="39:26" pos:end="39:27">-&gt;</operator><name pos:start="39:28" pos:end="39:31">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:20"><expr pos:start="43:5" pos:end="43:19"><name pos:start="43:5" pos:end="43:15"><name pos:start="43:5" pos:end="43:7">chr</name><operator pos:start="43:8" pos:end="43:9">-&gt;</operator><name pos:start="43:10" pos:end="43:15">opaque</name></name> <operator pos:start="43:17" pos:end="43:17">=</operator> <name pos:start="43:19" pos:end="43:19">d</name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:39"><expr pos:start="45:5" pos:end="45:38"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:7">chr</name><operator pos:start="45:8" pos:end="45:9">-&gt;</operator><name pos:start="45:10" pos:end="45:18">chr_write</name></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:38">ringbuf_chr_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:7">chr</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:18">chr_close</name></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:38">ringbuf_chr_close</name></expr>;</expr_stmt>



    <return pos:start="51:5" pos:end="51:15">return <expr pos:start="51:12" pos:end="51:14"><name pos:start="51:12" pos:end="51:14">chr</name></expr>;</return>



<label pos:start="55:1" pos:end="55:5"><name pos:start="55:1" pos:end="55:4">fail</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:14"><expr pos:start="57:5" pos:end="57:13"><call pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:10">g_free</name><argument_list pos:start="57:11" pos:end="57:13">(<argument pos:start="57:12" pos:end="57:12"><expr pos:start="57:12" pos:end="57:12"><name pos:start="57:12" pos:end="57:12">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:16"><expr pos:start="59:5" pos:end="59:15"><call pos:start="59:5" pos:end="59:15"><name pos:start="59:5" pos:end="59:10">g_free</name><argument_list pos:start="59:11" pos:end="59:15">(<argument pos:start="59:12" pos:end="59:14"><expr pos:start="59:12" pos:end="59:14"><name pos:start="59:12" pos:end="59:14">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="61:5" pos:end="61:16">return <expr pos:start="61:12" pos:end="61:15"><name pos:start="61:12" pos:end="61:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
