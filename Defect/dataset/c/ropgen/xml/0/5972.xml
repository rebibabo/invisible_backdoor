<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5972.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">wav_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="203:1">{<block_content pos:start="5:5" pos:end="201:15">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>, <decl pos:start="5:14" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:14" pos:end="5:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:16">left</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:40"><decl pos:start="11:5" pos:end="11:39"><type pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:19">WAVDemuxContext</name> <modifier pos:start="11:21" pos:end="11:21">*</modifier></type><name pos:start="11:22" pos:end="11:24">wav</name> <init pos:start="11:26" pos:end="11:39">= <expr pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:39">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="37:5"><if pos:start="15:5" pos:end="37:5">if <condition pos:start="15:8" pos:end="17:45">(<expr pos:start="15:9" pos:end="17:44"><name pos:start="15:9" pos:end="15:28">CONFIG_SPDIF_DEMUXER</name> <operator pos:start="15:30" pos:end="15:31">&amp;&amp;</operator> <name pos:start="15:33" pos:end="15:42"><name pos:start="15:33" pos:end="15:35">wav</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:42">spdif</name></name> <operator pos:start="15:44" pos:end="15:45">==</operator> <literal type="number" pos:start="15:47" pos:end="15:47">0</literal> <operator pos:start="15:49" pos:end="15:50">&amp;&amp;</operator>

        <name pos:start="17:9" pos:end="17:21"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">streams</name><index pos:start="17:19" pos:end="17:21">[<expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr>]</index></name><operator pos:start="17:22" pos:end="17:23">-&gt;</operator><name pos:start="17:24" pos:end="17:39"><name pos:start="17:24" pos:end="17:28">codec</name><operator pos:start="17:29" pos:end="17:30">-&gt;</operator><name pos:start="17:31" pos:end="17:39">codec_tag</name></name> <operator pos:start="17:41" pos:end="17:42">==</operator> <literal type="number" pos:start="17:44" pos:end="17:44">1</literal></expr>)</condition> <block pos:start="17:47" pos:end="37:5">{<block_content pos:start="19:9" pos:end="35:9">

        <decl_stmt pos:start="19:9" pos:end="19:29"><decl pos:start="19:9" pos:end="19:28"><type pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:12">enum</name> <name pos:start="19:14" pos:end="19:22">AVCodecID</name></name></type> <name pos:start="19:24" pos:end="19:28">codec</name></decl>;</decl_stmt>

        <expr_stmt pos:start="21:9" pos:end="23:37"><expr pos:start="21:9" pos:end="23:36"><name pos:start="21:9" pos:end="21:11">ret</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <call pos:start="21:15" pos:end="23:36"><name pos:start="21:15" pos:end="21:28">ff_spdif_probe</name><argument_list pos:start="21:29" pos:end="23:36">(<argument pos:start="21:30" pos:end="21:42"><expr pos:start="21:30" pos:end="21:42"><name pos:start="21:30" pos:end="21:42"><name pos:start="21:30" pos:end="21:30">s</name><operator pos:start="21:31" pos:end="21:32">-&gt;</operator><name pos:start="21:33" pos:end="21:34">pb</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:42">buffer</name></name></expr></argument>, <argument pos:start="21:45" pos:end="21:74"><expr pos:start="21:45" pos:end="21:74"><name pos:start="21:45" pos:end="21:58"><name pos:start="21:45" pos:end="21:45">s</name><operator pos:start="21:46" pos:end="21:47">-&gt;</operator><name pos:start="21:48" pos:end="21:49">pb</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:58">buf_end</name></name> <operator pos:start="21:60" pos:end="21:60">-</operator> <name pos:start="21:62" pos:end="21:74"><name pos:start="21:62" pos:end="21:62">s</name><operator pos:start="21:63" pos:end="21:64">-&gt;</operator><name pos:start="21:65" pos:end="21:66">pb</name><operator pos:start="21:67" pos:end="21:68">-&gt;</operator><name pos:start="21:69" pos:end="21:74">buffer</name></name></expr></argument>,

                             <argument pos:start="23:30" pos:end="23:35"><expr pos:start="23:30" pos:end="23:35"><operator pos:start="23:30" pos:end="23:30">&amp;</operator><name pos:start="23:31" pos:end="23:35">codec</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="35:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:42">(<expr pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:15">ret</name> <operator pos:start="25:17" pos:end="25:17">&gt;</operator> <name pos:start="25:19" pos:end="25:41">AVPROBE_SCORE_EXTENSION</name></expr>)</condition> <block pos:start="25:44" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:27">

            <expr_stmt pos:start="27:13" pos:end="27:51"><expr pos:start="27:13" pos:end="27:50"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:13">s</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:22">streams</name><index pos:start="27:23" pos:end="27:25">[<expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">0</literal></expr>]</index></name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:42"><name pos:start="27:28" pos:end="27:32">codec</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:42">codec_id</name></name> <operator pos:start="27:44" pos:end="27:44">=</operator> <name pos:start="27:46" pos:end="27:50">codec</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:27"><expr pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:15">wav</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:22">spdif</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <literal type="number" pos:start="29:26" pos:end="29:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="35:9">else <block pos:start="31:16" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:28">

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:22"><name pos:start="33:13" pos:end="33:15">wav</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:22">spdif</name></name> <operator pos:start="33:24" pos:end="33:24">=</operator> <operator pos:start="33:26" pos:end="33:26">-</operator><literal type="number" pos:start="33:27" pos:end="33:27">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="39:5" pos:end="41:44"><if pos:start="39:5" pos:end="41:44">if <condition pos:start="39:8" pos:end="39:48">(<expr pos:start="39:9" pos:end="39:47"><name pos:start="39:9" pos:end="39:28">CONFIG_SPDIF_DEMUXER</name> <operator pos:start="39:30" pos:end="39:31">&amp;&amp;</operator> <name pos:start="39:33" pos:end="39:42"><name pos:start="39:33" pos:end="39:35">wav</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:42">spdif</name></name> <operator pos:start="39:44" pos:end="39:45">==</operator> <literal type="number" pos:start="39:47" pos:end="39:47">1</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:44"><block_content pos:start="41:9" pos:end="41:44">

        <return pos:start="41:9" pos:end="41:44">return <expr pos:start="41:16" pos:end="41:43"><call pos:start="41:16" pos:end="41:43"><name pos:start="41:16" pos:end="41:35">ff_spdif_read_packet</name><argument_list pos:start="41:36" pos:end="41:43">(<argument pos:start="41:37" pos:end="41:37"><expr pos:start="41:37" pos:end="41:37"><name pos:start="41:37" pos:end="41:37">s</name></expr></argument>, <argument pos:start="41:40" pos:end="41:42"><expr pos:start="41:40" pos:end="41:42"><name pos:start="41:40" pos:end="41:42">pkt</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="45:5" pos:end="135:5"><if pos:start="45:5" pos:end="135:5">if <condition pos:start="45:8" pos:end="45:30">(<expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:11">wav</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:25">smv_data_ofs</name></name> <operator pos:start="45:27" pos:end="45:27">&gt;</operator> <literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>)</condition> <block pos:start="45:32" pos:end="135:5">{<block_content pos:start="47:9" pos:end="133:9">

        <decl_stmt pos:start="47:9" pos:end="47:37"><decl pos:start="47:9" pos:end="47:25"><type pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:15">int64_t</name></type> <name pos:start="47:17" pos:end="47:25">audio_dts</name></decl>, <decl pos:start="47:28" pos:end="47:36"><type ref="prev" pos:start="47:9" pos:end="47:15"/><name pos:start="47:28" pos:end="47:36">video_dts</name></decl>;</decl_stmt>

<label pos:start="49:1" pos:end="49:10"><name pos:start="49:1" pos:end="49:9">smv_retry</name>:</label>

        <expr_stmt pos:start="51:9" pos:end="51:43"><expr pos:start="51:9" pos:end="51:42"><name pos:start="51:9" pos:end="51:17">audio_dts</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:33"><name pos:start="51:21" pos:end="51:21">s</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:30">streams</name><index pos:start="51:31" pos:end="51:33">[<expr pos:start="51:32" pos:end="51:32"><literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>]</index></name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:42">cur_dts</name></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:43"><expr pos:start="53:9" pos:end="53:42"><name pos:start="53:9" pos:end="53:17">video_dts</name> <operator pos:start="53:19" pos:end="53:19">=</operator> <name pos:start="53:21" pos:end="53:33"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:30">streams</name><index pos:start="53:31" pos:end="53:33">[<expr pos:start="53:32" pos:end="53:32"><literal type="number" pos:start="53:32" pos:end="53:32">1</literal></expr>]</index></name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:42">cur_dts</name></expr>;</expr_stmt>



        <if_stmt pos:start="57:9" pos:end="69:9"><if pos:start="57:9" pos:end="69:9">if <condition pos:start="57:12" pos:end="57:71">(<expr pos:start="57:13" pos:end="57:70"><name pos:start="57:13" pos:end="57:21">audio_dts</name> <operator pos:start="57:23" pos:end="57:24">!=</operator> <name pos:start="57:26" pos:end="57:39">AV_NOPTS_VALUE</name> <operator pos:start="57:41" pos:end="57:42">&amp;&amp;</operator> <name pos:start="57:44" pos:end="57:52">video_dts</name> <operator pos:start="57:54" pos:end="57:55">!=</operator> <name pos:start="57:57" pos:end="57:70">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="57:73" pos:end="69:9">{<block_content pos:start="61:13" pos:end="67:37">

            <comment type="block" pos:start="59:13" pos:end="59:82">/*We always return a video frame first to get the pixel format first*/</comment>

            <expr_stmt pos:start="61:13" pos:end="65:75"><expr pos:start="61:13" pos:end="65:74"><name pos:start="61:13" pos:end="61:32"><name pos:start="61:13" pos:end="61:15">wav</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:32">smv_last_stream</name></name> <operator pos:start="61:34" pos:end="61:34">=</operator> <ternary pos:start="61:36" pos:end="65:74"><condition pos:start="61:36" pos:end="61:57"><expr pos:start="61:36" pos:end="61:55"><name pos:start="61:36" pos:end="61:55"><name pos:start="61:36" pos:end="61:38">wav</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:55">smv_given_first</name></name></expr> ?</condition><then pos:start="63:17" pos:end="65:70">

                <expr pos:start="63:17" pos:end="65:70"><call pos:start="63:17" pos:end="65:66"><name pos:start="63:17" pos:end="63:29">av_compare_ts</name><argument_list pos:start="63:30" pos:end="65:66">(<argument pos:start="63:31" pos:end="63:39"><expr pos:start="63:31" pos:end="63:39"><name pos:start="63:31" pos:end="63:39">video_dts</name></expr></argument>, <argument pos:start="63:42" pos:end="63:65"><expr pos:start="63:42" pos:end="63:65"><name pos:start="63:42" pos:end="63:54"><name pos:start="63:42" pos:end="63:42">s</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:51">streams</name><index pos:start="63:52" pos:end="63:54">[<expr pos:start="63:53" pos:end="63:53"><literal type="number" pos:start="63:53" pos:end="63:53">1</literal></expr>]</index></name><operator pos:start="63:55" pos:end="63:56">-&gt;</operator><name pos:start="63:57" pos:end="63:65">time_base</name></expr></argument>,

                              <argument pos:start="65:31" pos:end="65:39"><expr pos:start="65:31" pos:end="65:39"><name pos:start="65:31" pos:end="65:39">audio_dts</name></expr></argument>, <argument pos:start="65:42" pos:end="65:65"><expr pos:start="65:42" pos:end="65:65"><name pos:start="65:42" pos:end="65:54"><name pos:start="65:42" pos:end="65:42">s</name><operator pos:start="65:43" pos:end="65:44">-&gt;</operator><name pos:start="65:45" pos:end="65:51">streams</name><index pos:start="65:52" pos:end="65:54">[<expr pos:start="65:53" pos:end="65:53"><literal type="number" pos:start="65:53" pos:end="65:53">0</literal></expr>]</index></name><operator pos:start="65:55" pos:end="65:56">-&gt;</operator><name pos:start="65:57" pos:end="65:65">time_base</name></expr></argument>)</argument_list></call> <operator pos:start="65:68" pos:end="65:68">&gt;</operator> <literal type="number" pos:start="65:70" pos:end="65:70">0</literal></expr> </then><else pos:start="65:72" pos:end="65:74">: <expr pos:start="65:74" pos:end="65:74"><literal type="number" pos:start="65:74" pos:end="65:74">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:37"><expr pos:start="67:13" pos:end="67:36"><name pos:start="67:13" pos:end="67:32"><name pos:start="67:13" pos:end="67:15">wav</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:32">smv_given_first</name></name> <operator pos:start="67:34" pos:end="67:34">=</operator> <literal type="number" pos:start="67:36" pos:end="67:36">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:53"><expr pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:11">wav</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:28">smv_last_stream</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <operator pos:start="71:32" pos:end="71:32">!</operator><name pos:start="71:33" pos:end="71:52"><name pos:start="71:33" pos:end="71:35">wav</name><operator pos:start="71:36" pos:end="71:37">-&gt;</operator><name pos:start="71:38" pos:end="71:52">smv_last_stream</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:47"><expr pos:start="73:9" pos:end="73:46"><name pos:start="73:9" pos:end="73:28"><name pos:start="73:9" pos:end="73:11">wav</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:28">smv_last_stream</name></name> <operator pos:start="73:30" pos:end="73:31">|=</operator> <name pos:start="73:33" pos:end="73:46"><name pos:start="73:33" pos:end="73:35">wav</name><operator pos:start="73:36" pos:end="73:37">-&gt;</operator><name pos:start="73:38" pos:end="73:46">audio_eof</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:46"><expr pos:start="75:9" pos:end="75:45"><name pos:start="75:9" pos:end="75:28"><name pos:start="75:9" pos:end="75:11">wav</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:28">smv_last_stream</name></name> <operator pos:start="75:30" pos:end="75:31">&amp;=</operator> <operator pos:start="75:33" pos:end="75:33">!</operator><name pos:start="75:34" pos:end="75:45"><name pos:start="75:34" pos:end="75:36">wav</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:45">smv_eof</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="133:9"><if pos:start="77:9" pos:end="133:9">if <condition pos:start="77:12" pos:end="77:33">(<expr pos:start="77:13" pos:end="77:32"><name pos:start="77:13" pos:end="77:32"><name pos:start="77:13" pos:end="77:15">wav</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:32">smv_last_stream</name></name></expr>)</condition> <block pos:start="77:35" pos:end="133:9">{<block_content pos:start="79:13" pos:end="131:23">

            <decl_stmt pos:start="79:13" pos:end="79:48"><decl pos:start="79:13" pos:end="79:47"><type pos:start="79:13" pos:end="79:20"><name pos:start="79:13" pos:end="79:20">uint64_t</name></type> <name pos:start="79:22" pos:end="79:28">old_pos</name> <init pos:start="79:30" pos:end="79:47">= <expr pos:start="79:32" pos:end="79:47"><call pos:start="79:32" pos:end="79:47"><name pos:start="79:32" pos:end="79:40">avio_tell</name><argument_list pos:start="79:41" pos:end="79:47">(<argument pos:start="79:42" pos:end="79:46"><expr pos:start="79:42" pos:end="79:46"><name pos:start="79:42" pos:end="79:46"><name pos:start="79:42" pos:end="79:42">s</name><operator pos:start="79:43" pos:end="79:44">-&gt;</operator><name pos:start="79:45" pos:end="79:46">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="81:13" pos:end="83:53"><decl pos:start="81:13" pos:end="83:52"><type pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:20">uint64_t</name></type> <name pos:start="81:22" pos:end="81:28">new_pos</name> <init pos:start="81:30" pos:end="83:52">= <expr pos:start="81:32" pos:end="83:52"><name pos:start="81:32" pos:end="81:48"><name pos:start="81:32" pos:end="81:34">wav</name><operator pos:start="81:35" pos:end="81:36">-&gt;</operator><name pos:start="81:37" pos:end="81:48">smv_data_ofs</name></name> <operator pos:start="81:50" pos:end="81:50">+</operator>

                <name pos:start="83:17" pos:end="83:30"><name pos:start="83:17" pos:end="83:19">wav</name><operator pos:start="83:20" pos:end="83:21">-&gt;</operator><name pos:start="83:22" pos:end="83:30">smv_block</name></name> <operator pos:start="83:32" pos:end="83:32">*</operator> <name pos:start="83:34" pos:end="83:52"><name pos:start="83:34" pos:end="83:36">wav</name><operator pos:start="83:37" pos:end="83:38">-&gt;</operator><name pos:start="83:39" pos:end="83:52">smv_block_size</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="85:13" pos:end="91:13"><if pos:start="85:13" pos:end="91:13">if <condition pos:start="85:16" pos:end="85:56">(<expr pos:start="85:17" pos:end="85:55"><call pos:start="85:17" pos:end="85:51"><name pos:start="85:17" pos:end="85:25">avio_seek</name><argument_list pos:start="85:26" pos:end="85:51">(<argument pos:start="85:27" pos:end="85:31"><expr pos:start="85:27" pos:end="85:31"><name pos:start="85:27" pos:end="85:31"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:31">pb</name></name></expr></argument>, <argument pos:start="85:34" pos:end="85:40"><expr pos:start="85:34" pos:end="85:40"><name pos:start="85:34" pos:end="85:40">new_pos</name></expr></argument>, <argument pos:start="85:43" pos:end="85:50"><expr pos:start="85:43" pos:end="85:50"><name pos:start="85:43" pos:end="85:50">SEEK_SET</name></expr></argument>)</argument_list></call> <operator pos:start="85:53" pos:end="85:53">&lt;</operator> <literal type="number" pos:start="85:55" pos:end="85:55">0</literal></expr>)</condition> <block pos:start="85:58" pos:end="91:13">{<block_content pos:start="87:17" pos:end="89:29">

                <expr_stmt pos:start="87:17" pos:end="87:34"><expr pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:19">ret</name> <operator pos:start="87:21" pos:end="87:21">=</operator> <name pos:start="87:23" pos:end="87:33">AVERROR_EOF</name></expr>;</expr_stmt>

                <goto pos:start="89:17" pos:end="89:29">goto <name pos:start="89:22" pos:end="89:28">smv_out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:36"><expr pos:start="93:13" pos:end="93:35"><name pos:start="93:13" pos:end="93:16">size</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <call pos:start="93:20" pos:end="93:35"><name pos:start="93:20" pos:end="93:28">avio_rl24</name><argument_list pos:start="93:29" pos:end="93:35">(<argument pos:start="93:30" pos:end="93:34"><expr pos:start="93:30" pos:end="93:34"><name pos:start="93:30" pos:end="93:34"><name pos:start="93:30" pos:end="93:30">s</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:34">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:51"><expr pos:start="95:13" pos:end="95:50"><name pos:start="95:13" pos:end="95:15">ret</name>  <operator pos:start="95:18" pos:end="95:18">=</operator> <call pos:start="95:20" pos:end="95:50"><name pos:start="95:20" pos:end="95:32">av_get_packet</name><argument_list pos:start="95:33" pos:end="95:50">(<argument pos:start="95:34" pos:end="95:38"><expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:34">s</name><operator pos:start="95:35" pos:end="95:36">-&gt;</operator><name pos:start="95:37" pos:end="95:38">pb</name></name></expr></argument>, <argument pos:start="95:41" pos:end="95:43"><expr pos:start="95:41" pos:end="95:43"><name pos:start="95:41" pos:end="95:43">pkt</name></expr></argument>, <argument pos:start="95:46" pos:end="95:49"><expr pos:start="95:46" pos:end="95:49"><name pos:start="95:46" pos:end="95:49">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:29"><if pos:start="97:13" pos:end="99:29">if <condition pos:start="97:16" pos:end="97:24">(<expr pos:start="97:17" pos:end="97:23"><name pos:start="97:17" pos:end="97:19">ret</name> <operator pos:start="97:21" pos:end="97:21">&lt;</operator> <literal type="number" pos:start="97:23" pos:end="97:23">0</literal></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:29"><block_content pos:start="99:17" pos:end="99:29">

                <goto pos:start="99:17" pos:end="99:29">goto <name pos:start="99:22" pos:end="99:28">smv_out</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:26"><expr pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:15">pkt</name><operator pos:start="101:16" pos:end="101:17">-&gt;</operator><name pos:start="101:18" pos:end="101:20">pos</name></name> <operator pos:start="101:22" pos:end="101:23">-=</operator> <literal type="number" pos:start="101:25" pos:end="101:25">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:83"><expr pos:start="103:13" pos:end="103:82"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:15">pkt</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:20">pts</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:37"><name pos:start="103:24" pos:end="103:26">wav</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:37">smv_block</name></name> <operator pos:start="103:39" pos:end="103:39">*</operator> <name pos:start="103:41" pos:end="103:64"><name pos:start="103:41" pos:end="103:43">wav</name><operator pos:start="103:44" pos:end="103:45">-&gt;</operator><name pos:start="103:46" pos:end="103:64">smv_frames_per_jpeg</name></name> <operator pos:start="103:66" pos:end="103:66">+</operator> <name pos:start="103:68" pos:end="103:82"><name pos:start="103:68" pos:end="103:70">wav</name><operator pos:start="103:71" pos:end="103:72">-&gt;</operator><name pos:start="103:73" pos:end="103:82">smv_cur_pt</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:30"><expr pos:start="105:13" pos:end="105:29"><name pos:start="105:13" pos:end="105:27"><name pos:start="105:13" pos:end="105:15">wav</name><operator pos:start="105:16" pos:end="105:17">-&gt;</operator><name pos:start="105:18" pos:end="105:27">smv_cur_pt</name></name><operator pos:start="105:28" pos:end="105:29">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="107:13" pos:end="109:60"><if pos:start="107:13" pos:end="109:60">if <condition pos:start="107:16" pos:end="107:45">(<expr pos:start="107:17" pos:end="107:44"><name pos:start="107:17" pos:end="107:40"><name pos:start="107:17" pos:end="107:19">wav</name><operator pos:start="107:20" pos:end="107:21">-&gt;</operator><name pos:start="107:22" pos:end="107:40">smv_frames_per_jpeg</name></name> <operator pos:start="107:42" pos:end="107:42">&gt;</operator> <literal type="number" pos:start="107:44" pos:end="107:44">0</literal></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:60"><block_content pos:start="109:17" pos:end="109:60">

                <expr_stmt pos:start="109:17" pos:end="109:60"><expr pos:start="109:17" pos:end="109:59"><name pos:start="109:17" pos:end="109:31"><name pos:start="109:17" pos:end="109:19">wav</name><operator pos:start="109:20" pos:end="109:21">-&gt;</operator><name pos:start="109:22" pos:end="109:31">smv_cur_pt</name></name> <operator pos:start="109:33" pos:end="109:34">%=</operator> <name pos:start="109:36" pos:end="109:59"><name pos:start="109:36" pos:end="109:38">wav</name><operator pos:start="109:39" pos:end="109:40">-&gt;</operator><name pos:start="109:41" pos:end="109:59">smv_frames_per_jpeg</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="111:13" pos:end="113:33"><if pos:start="111:13" pos:end="113:33">if <condition pos:start="111:16" pos:end="111:33">(<expr pos:start="111:17" pos:end="111:32"><operator pos:start="111:17" pos:end="111:17">!</operator><name pos:start="111:18" pos:end="111:32"><name pos:start="111:18" pos:end="111:20">wav</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:32">smv_cur_pt</name></name></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:33"><block_content pos:start="113:17" pos:end="113:33">

                <expr_stmt pos:start="113:17" pos:end="113:33"><expr pos:start="113:17" pos:end="113:32"><name pos:start="113:17" pos:end="113:30"><name pos:start="113:17" pos:end="113:19">wav</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:30">smv_block</name></name><operator pos:start="113:31" pos:end="113:32">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:34"><expr pos:start="117:13" pos:end="117:33"><name pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:15">pkt</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:29">stream_index</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <literal type="number" pos:start="117:33" pos:end="117:33">1</literal></expr>;</expr_stmt>

<label pos:start="119:1" pos:end="119:8"><name pos:start="119:1" pos:end="119:7">smv_out</name>:</label>

            <expr_stmt pos:start="121:13" pos:end="121:48"><expr pos:start="121:13" pos:end="121:47"><call pos:start="121:13" pos:end="121:47"><name pos:start="121:13" pos:end="121:21">avio_seek</name><argument_list pos:start="121:22" pos:end="121:47">(<argument pos:start="121:23" pos:end="121:27"><expr pos:start="121:23" pos:end="121:27"><name pos:start="121:23" pos:end="121:27"><name pos:start="121:23" pos:end="121:23">s</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:27">pb</name></name></expr></argument>, <argument pos:start="121:30" pos:end="121:36"><expr pos:start="121:30" pos:end="121:36"><name pos:start="121:30" pos:end="121:36">old_pos</name></expr></argument>, <argument pos:start="121:39" pos:end="121:46"><expr pos:start="121:39" pos:end="121:46"><name pos:start="121:39" pos:end="121:46">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="123:13" pos:end="129:13"><if pos:start="123:13" pos:end="129:13">if <condition pos:start="123:16" pos:end="123:35">(<expr pos:start="123:17" pos:end="123:34"><name pos:start="123:17" pos:end="123:19">ret</name> <operator pos:start="123:21" pos:end="123:22">==</operator> <name pos:start="123:24" pos:end="123:34">AVERROR_EOF</name></expr>)</condition> <block pos:start="123:37" pos:end="129:13">{<block_content pos:start="125:17" pos:end="127:31">

                <expr_stmt pos:start="125:17" pos:end="125:33"><expr pos:start="125:17" pos:end="125:32"><name pos:start="125:17" pos:end="125:28"><name pos:start="125:17" pos:end="125:19">wav</name><operator pos:start="125:20" pos:end="125:21">-&gt;</operator><name pos:start="125:22" pos:end="125:28">smv_eof</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <literal type="number" pos:start="125:32" pos:end="125:32">1</literal></expr>;</expr_stmt>

                <goto pos:start="127:17" pos:end="127:31">goto <name pos:start="127:22" pos:end="127:30">smv_retry</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <return pos:start="131:13" pos:end="131:23">return <expr pos:start="131:20" pos:end="131:22"><name pos:start="131:20" pos:end="131:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="139:5" pos:end="139:23"><expr pos:start="139:5" pos:end="139:22"><name pos:start="139:5" pos:end="139:6">st</name> <operator pos:start="139:8" pos:end="139:8">=</operator> <name pos:start="139:10" pos:end="139:22"><name pos:start="139:10" pos:end="139:10">s</name><operator pos:start="139:11" pos:end="139:12">-&gt;</operator><name pos:start="139:13" pos:end="139:19">streams</name><index pos:start="139:20" pos:end="139:22">[<expr pos:start="139:21" pos:end="139:21"><literal type="number" pos:start="139:21" pos:end="139:21">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="143:5" pos:end="143:44"><expr pos:start="143:5" pos:end="143:43"><name pos:start="143:5" pos:end="143:8">left</name> <operator pos:start="143:10" pos:end="143:10">=</operator> <name pos:start="143:12" pos:end="143:24"><name pos:start="143:12" pos:end="143:14">wav</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:24">data_end</name></name> <operator pos:start="143:26" pos:end="143:26">-</operator> <call pos:start="143:28" pos:end="143:43"><name pos:start="143:28" pos:end="143:36">avio_tell</name><argument_list pos:start="143:37" pos:end="143:43">(<argument pos:start="143:38" pos:end="143:42"><expr pos:start="143:38" pos:end="143:42"><name pos:start="143:38" pos:end="143:42"><name pos:start="143:38" pos:end="143:38">s</name><operator pos:start="143:39" pos:end="143:40">-&gt;</operator><name pos:start="143:41" pos:end="143:42">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="145:5" pos:end="147:23"><if pos:start="145:5" pos:end="147:23">if <condition pos:start="145:8" pos:end="145:27">(<expr pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:26"><name pos:start="145:9" pos:end="145:11">wav</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:26">ignore_length</name></name></expr>)</condition><block type="pseudo" pos:start="147:9" pos:end="147:23"><block_content pos:start="147:9" pos:end="147:23">

        <expr_stmt pos:start="147:9" pos:end="147:23"><expr pos:start="147:9" pos:end="147:22"><name pos:start="147:9" pos:end="147:12">left</name> <operator pos:start="147:14" pos:end="147:14">=</operator> <name pos:start="147:16" pos:end="147:22">INT_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="149:5" pos:end="173:5"><if pos:start="149:5" pos:end="173:5">if <condition pos:start="149:8" pos:end="149:18">(<expr pos:start="149:9" pos:end="149:17"><name pos:start="149:9" pos:end="149:12">left</name> <operator pos:start="149:14" pos:end="149:15">&lt;=</operator> <literal type="number" pos:start="149:17" pos:end="149:17">0</literal></expr>)</condition> <block pos:start="149:20" pos:end="173:5">{<block_content pos:start="151:9" pos:end="171:48">

        <if_stmt pos:start="151:9" pos:end="157:62"><if pos:start="151:9" pos:end="153:59">if <condition pos:start="151:12" pos:end="151:43">(<expr pos:start="151:13" pos:end="151:42"><name pos:start="151:13" pos:end="151:30">CONFIG_W64_DEMUXER</name> <operator pos:start="151:32" pos:end="151:33">&amp;&amp;</operator> <name pos:start="151:35" pos:end="151:42"><name pos:start="151:35" pos:end="151:37">wav</name><operator pos:start="151:38" pos:end="151:39">-&gt;</operator><name pos:start="151:40" pos:end="151:42">w64</name></name></expr>)</condition><block type="pseudo" pos:start="153:13" pos:end="153:59"><block_content pos:start="153:13" pos:end="153:59">

            <expr_stmt pos:start="153:13" pos:end="153:59"><expr pos:start="153:13" pos:end="153:58"><name pos:start="153:13" pos:end="153:16">left</name> <operator pos:start="153:18" pos:end="153:18">=</operator> <call pos:start="153:20" pos:end="153:53"><name pos:start="153:20" pos:end="153:28">find_guid</name><argument_list pos:start="153:29" pos:end="153:53">(<argument pos:start="153:30" pos:end="153:34"><expr pos:start="153:30" pos:end="153:34"><name pos:start="153:30" pos:end="153:34"><name pos:start="153:30" pos:end="153:30">s</name><operator pos:start="153:31" pos:end="153:32">-&gt;</operator><name pos:start="153:33" pos:end="153:34">pb</name></name></expr></argument>, <argument pos:start="153:37" pos:end="153:52"><expr pos:start="153:37" pos:end="153:52"><name pos:start="153:37" pos:end="153:52">ff_w64_guid_data</name></expr></argument>)</argument_list></call> <operator pos:start="153:55" pos:end="153:55">-</operator> <literal type="number" pos:start="153:57" pos:end="153:58">24</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="155:9" pos:end="157:62">else<block type="pseudo" pos:start="157:13" pos:end="157:62"><block_content pos:start="157:13" pos:end="157:62">

            <expr_stmt pos:start="157:13" pos:end="157:62"><expr pos:start="157:13" pos:end="157:61"><name pos:start="157:13" pos:end="157:16">left</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <call pos:start="157:20" pos:end="157:61"><name pos:start="157:20" pos:end="157:27">find_tag</name><argument_list pos:start="157:28" pos:end="157:61">(<argument pos:start="157:29" pos:end="157:33"><expr pos:start="157:29" pos:end="157:33"><name pos:start="157:29" pos:end="157:33"><name pos:start="157:29" pos:end="157:29">s</name><operator pos:start="157:30" pos:end="157:31">-&gt;</operator><name pos:start="157:32" pos:end="157:33">pb</name></name></expr></argument>, <argument pos:start="157:36" pos:end="157:60"><expr pos:start="157:36" pos:end="157:60"><call pos:start="157:36" pos:end="157:60"><name pos:start="157:36" pos:end="157:40">MKTAG</name><argument_list pos:start="157:41" pos:end="157:60">(<argument pos:start="157:42" pos:end="157:44"><expr pos:start="157:42" pos:end="157:44"><literal type="char" pos:start="157:42" pos:end="157:44">'d'</literal></expr></argument>, <argument pos:start="157:47" pos:end="157:49"><expr pos:start="157:47" pos:end="157:49"><literal type="char" pos:start="157:47" pos:end="157:49">'a'</literal></expr></argument>, <argument pos:start="157:52" pos:end="157:54"><expr pos:start="157:52" pos:end="157:54"><literal type="char" pos:start="157:52" pos:end="157:54">'t'</literal></expr></argument>, <argument pos:start="157:57" pos:end="157:59"><expr pos:start="157:57" pos:end="157:59"><literal type="char" pos:start="157:57" pos:end="157:59">'a'</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="159:9" pos:end="169:9"><if pos:start="159:9" pos:end="169:9">if <condition pos:start="159:12" pos:end="159:21">(<expr pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:16">left</name> <operator pos:start="159:18" pos:end="159:18">&lt;</operator> <literal type="number" pos:start="159:20" pos:end="159:20">0</literal></expr>)</condition> <block pos:start="159:23" pos:end="169:9">{<block_content pos:start="161:13" pos:end="167:31">

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:15">wav</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:26">audio_eof</name></name> <operator pos:start="161:28" pos:end="161:28">=</operator> <literal type="number" pos:start="161:30" pos:end="161:30">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="165:31"><if pos:start="163:13" pos:end="165:31">if <condition pos:start="163:16" pos:end="163:55">(<expr pos:start="163:17" pos:end="163:54"><name pos:start="163:17" pos:end="163:33"><name pos:start="163:17" pos:end="163:19">wav</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:33">smv_data_ofs</name></name> <operator pos:start="163:35" pos:end="163:35">&gt;</operator> <literal type="number" pos:start="163:37" pos:end="163:37">0</literal> <operator pos:start="163:39" pos:end="163:40">&amp;&amp;</operator> <operator pos:start="163:42" pos:end="163:42">!</operator><name pos:start="163:43" pos:end="163:54"><name pos:start="163:43" pos:end="163:45">wav</name><operator pos:start="163:46" pos:end="163:47">-&gt;</operator><name pos:start="163:48" pos:end="163:54">smv_eof</name></name></expr>)</condition><block type="pseudo" pos:start="165:17" pos:end="165:31"><block_content pos:start="165:17" pos:end="165:31">

                <goto pos:start="165:17" pos:end="165:31">goto <name pos:start="165:22" pos:end="165:30">smv_retry</name>;</goto></block_content></block></if></if_stmt>

            <return pos:start="167:13" pos:end="167:31">return <expr pos:start="167:20" pos:end="167:30"><name pos:start="167:20" pos:end="167:30">AVERROR_EOF</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:48"><expr pos:start="171:9" pos:end="171:47"><name pos:start="171:9" pos:end="171:21"><name pos:start="171:9" pos:end="171:11">wav</name><operator pos:start="171:12" pos:end="171:13">-&gt;</operator><name pos:start="171:14" pos:end="171:21">data_end</name></name> <operator pos:start="171:23" pos:end="171:23">=</operator> <call pos:start="171:25" pos:end="171:40"><name pos:start="171:25" pos:end="171:33">avio_tell</name><argument_list pos:start="171:34" pos:end="171:40">(<argument pos:start="171:35" pos:end="171:39"><expr pos:start="171:35" pos:end="171:39"><name pos:start="171:35" pos:end="171:39"><name pos:start="171:35" pos:end="171:35">s</name><operator pos:start="171:36" pos:end="171:37">-&gt;</operator><name pos:start="171:38" pos:end="171:39">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="171:42" pos:end="171:42">+</operator> <name pos:start="171:44" pos:end="171:47">left</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="177:5" pos:end="177:20"><expr pos:start="177:5" pos:end="177:19"><name pos:start="177:5" pos:end="177:8">size</name> <operator pos:start="177:10" pos:end="177:10">=</operator> <name pos:start="177:12" pos:end="177:19">MAX_SIZE</name></expr>;</expr_stmt>

    <if_stmt pos:start="179:5" pos:end="187:5"><if pos:start="179:5" pos:end="187:5">if <condition pos:start="179:8" pos:end="179:35">(<expr pos:start="179:9" pos:end="179:34"><name pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:10">st</name><operator pos:start="179:11" pos:end="179:12">-&gt;</operator><name pos:start="179:13" pos:end="179:17">codec</name><operator pos:start="179:18" pos:end="179:19">-&gt;</operator><name pos:start="179:20" pos:end="179:30">block_align</name></name> <operator pos:start="179:32" pos:end="179:32">&gt;</operator> <literal type="number" pos:start="179:34" pos:end="179:34">1</literal></expr>)</condition> <block pos:start="179:37" pos:end="187:5">{<block_content pos:start="181:9" pos:end="185:72">

        <if_stmt pos:start="181:9" pos:end="183:42"><if pos:start="181:9" pos:end="183:42">if <condition pos:start="181:12" pos:end="181:42">(<expr pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:16">size</name> <operator pos:start="181:18" pos:end="181:18">&lt;</operator> <name pos:start="181:20" pos:end="181:41"><name pos:start="181:20" pos:end="181:21">st</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:28">codec</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:41">block_align</name></name></expr>)</condition><block type="pseudo" pos:start="183:13" pos:end="183:42"><block_content pos:start="183:13" pos:end="183:42">

            <expr_stmt pos:start="183:13" pos:end="183:42"><expr pos:start="183:13" pos:end="183:41"><name pos:start="183:13" pos:end="183:16">size</name> <operator pos:start="183:18" pos:end="183:18">=</operator> <name pos:start="183:20" pos:end="183:41"><name pos:start="183:20" pos:end="183:21">st</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:28">codec</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:41">block_align</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:72"><expr pos:start="185:9" pos:end="185:71"><name pos:start="185:9" pos:end="185:12">size</name> <operator pos:start="185:14" pos:end="185:14">=</operator> <operator pos:start="185:16" pos:end="185:16">(</operator><name pos:start="185:17" pos:end="185:20">size</name> <operator pos:start="185:22" pos:end="185:22">/</operator> <name pos:start="185:24" pos:end="185:45"><name pos:start="185:24" pos:end="185:25">st</name><operator pos:start="185:26" pos:end="185:27">-&gt;</operator><name pos:start="185:28" pos:end="185:32">codec</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:45">block_align</name></name><operator pos:start="185:46" pos:end="185:46">)</operator> <operator pos:start="185:48" pos:end="185:48">*</operator> <name pos:start="185:50" pos:end="185:71"><name pos:start="185:50" pos:end="185:51">st</name><operator pos:start="185:52" pos:end="185:53">-&gt;</operator><name pos:start="185:54" pos:end="185:58">codec</name><operator pos:start="185:59" pos:end="185:60">-&gt;</operator><name pos:start="185:61" pos:end="185:71">block_align</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:29"><expr pos:start="189:5" pos:end="189:28"><name pos:start="189:5" pos:end="189:8">size</name> <operator pos:start="189:10" pos:end="189:10">=</operator> <call pos:start="189:12" pos:end="189:28"><name pos:start="189:12" pos:end="189:16">FFMIN</name><argument_list pos:start="189:17" pos:end="189:28">(<argument pos:start="189:18" pos:end="189:21"><expr pos:start="189:18" pos:end="189:21"><name pos:start="189:18" pos:end="189:21">size</name></expr></argument>, <argument pos:start="189:24" pos:end="189:27"><expr pos:start="189:24" pos:end="189:27"><name pos:start="189:24" pos:end="189:27">left</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:43"><expr pos:start="191:5" pos:end="191:42"><name pos:start="191:5" pos:end="191:7">ret</name>  <operator pos:start="191:10" pos:end="191:10">=</operator> <call pos:start="191:12" pos:end="191:42"><name pos:start="191:12" pos:end="191:24">av_get_packet</name><argument_list pos:start="191:25" pos:end="191:42">(<argument pos:start="191:26" pos:end="191:30"><expr pos:start="191:26" pos:end="191:30"><name pos:start="191:26" pos:end="191:30"><name pos:start="191:26" pos:end="191:26">s</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:30">pb</name></name></expr></argument>, <argument pos:start="191:33" pos:end="191:35"><expr pos:start="191:33" pos:end="191:35"><name pos:start="191:33" pos:end="191:35">pkt</name></expr></argument>, <argument pos:start="191:38" pos:end="191:41"><expr pos:start="191:38" pos:end="191:41"><name pos:start="191:38" pos:end="191:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="195:19"><if pos:start="193:5" pos:end="195:19">if <condition pos:start="193:8" pos:end="193:16">(<expr pos:start="193:9" pos:end="193:15"><name pos:start="193:9" pos:end="193:11">ret</name> <operator pos:start="193:13" pos:end="193:13">&lt;</operator> <literal type="number" pos:start="193:15" pos:end="193:15">0</literal></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="195:19"><block_content pos:start="195:9" pos:end="195:19">

        <return pos:start="195:9" pos:end="195:19">return <expr pos:start="195:16" pos:end="195:18"><name pos:start="195:16" pos:end="195:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:26"><expr pos:start="197:5" pos:end="197:25"><name pos:start="197:5" pos:end="197:21"><name pos:start="197:5" pos:end="197:7">pkt</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:21">stream_index</name></name> <operator pos:start="197:23" pos:end="197:23">=</operator> <literal type="number" pos:start="197:25" pos:end="197:25">0</literal></expr>;</expr_stmt>



    <return pos:start="201:5" pos:end="201:15">return <expr pos:start="201:12" pos:end="201:14"><name pos:start="201:12" pos:end="201:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
