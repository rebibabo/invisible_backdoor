<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10365.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">uint64_t</name></type> <name pos:start="1:10" pos:end="1:21">helper_fsqrt</name><parameter_list pos:start="1:22" pos:end="1:53">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">CPUPPCState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:52"><decl pos:start="1:41" pos:end="1:52"><type pos:start="1:41" pos:end="1:52"><name pos:start="1:41" pos:end="1:48">uint64_t</name></type> <name pos:start="1:50" pos:end="1:52">arg</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:19">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:15">CPU_DoubleU</name></type> <name pos:start="5:17" pos:end="5:20">farg</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:18"><expr pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:8">farg</name><operator pos:start="9:9" pos:end="9:9">.</operator><name pos:start="9:10" pos:end="9:11">ll</name></name> <operator pos:start="9:13" pos:end="9:13">=</operator> <name pos:start="9:15" pos:end="9:17">arg</name></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="31:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:69">(<expr pos:start="13:9" pos:end="13:68"><call pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:16">unlikely</name><argument_list pos:start="13:17" pos:end="13:68">(<argument pos:start="13:18" pos:end="13:67"><expr pos:start="13:18" pos:end="13:67"><call pos:start="13:18" pos:end="13:39"><name pos:start="13:18" pos:end="13:31">float64_is_neg</name><argument_list pos:start="13:32" pos:end="13:39">(<argument pos:start="13:33" pos:end="13:38"><expr pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:38"><name pos:start="13:33" pos:end="13:36">farg</name><operator pos:start="13:37" pos:end="13:37">.</operator><name pos:start="13:38" pos:end="13:38">d</name></name></expr></argument>)</argument_list></call> <operator pos:start="13:41" pos:end="13:42">&amp;&amp;</operator> <operator pos:start="13:44" pos:end="13:44">!</operator><call pos:start="13:45" pos:end="13:67"><name pos:start="13:45" pos:end="13:59">float64_is_zero</name><argument_list pos:start="13:60" pos:end="13:67">(<argument pos:start="13:61" pos:end="13:66"><expr pos:start="13:61" pos:end="13:66"><name pos:start="13:61" pos:end="13:66"><name pos:start="13:61" pos:end="13:64">farg</name><operator pos:start="13:65" pos:end="13:65">.</operator><name pos:start="13:66" pos:end="13:66">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:71" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:69">

        <comment type="block" pos:start="15:9" pos:end="15:54">/* Square root of a negative nonzero number */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:69"><expr pos:start="17:9" pos:end="17:68"><name pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:12">farg</name><operator pos:start="17:13" pos:end="17:13">.</operator><name pos:start="17:14" pos:end="17:15">ll</name></name> <operator pos:start="17:17" pos:end="17:17">=</operator> <call pos:start="17:19" pos:end="17:68"><name pos:start="17:19" pos:end="17:39">fload_invalid_op_excp</name><argument_list pos:start="17:40" pos:end="17:68">(<argument pos:start="17:41" pos:end="17:43"><expr pos:start="17:41" pos:end="17:43"><name pos:start="17:41" pos:end="17:43">env</name></expr></argument>, <argument pos:start="17:46" pos:end="17:67"><expr pos:start="17:46" pos:end="17:67"><name pos:start="17:46" pos:end="17:67">POWERPC_EXCP_FP_VXSQRT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="31:5">else <block pos:start="19:12" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:55">

        <if_stmt pos:start="21:9" pos:end="27:9"><if pos:start="21:9" pos:end="27:9">if <condition pos:start="21:12" pos:end="21:55">(<expr pos:start="21:13" pos:end="21:54"><call pos:start="21:13" pos:end="21:54"><name pos:start="21:13" pos:end="21:20">unlikely</name><argument_list pos:start="21:21" pos:end="21:54">(<argument pos:start="21:22" pos:end="21:53"><expr pos:start="21:22" pos:end="21:53"><call pos:start="21:22" pos:end="21:53"><name pos:start="21:22" pos:end="21:45">float64_is_signaling_nan</name><argument_list pos:start="21:46" pos:end="21:53">(<argument pos:start="21:47" pos:end="21:52"><expr pos:start="21:47" pos:end="21:52"><name pos:start="21:47" pos:end="21:52"><name pos:start="21:47" pos:end="21:50">farg</name><operator pos:start="21:51" pos:end="21:51">.</operator><name pos:start="21:52" pos:end="21:52">d</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:57" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:63">

            <comment type="block" pos:start="23:13" pos:end="23:34">/* sNaN square root */</comment>

            <expr_stmt pos:start="25:13" pos:end="25:63"><expr pos:start="25:13" pos:end="25:62"><call pos:start="25:13" pos:end="25:62"><name pos:start="25:13" pos:end="25:33">fload_invalid_op_excp</name><argument_list pos:start="25:34" pos:end="25:62">(<argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">env</name></expr></argument>, <argument pos:start="25:40" pos:end="25:61"><expr pos:start="25:40" pos:end="25:61"><name pos:start="25:40" pos:end="25:61">POWERPC_EXCP_FP_VXSNAN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:55"><expr pos:start="29:9" pos:end="29:54"><name pos:start="29:9" pos:end="29:14"><name pos:start="29:9" pos:end="29:12">farg</name><operator pos:start="29:13" pos:end="29:13">.</operator><name pos:start="29:14" pos:end="29:14">d</name></name> <operator pos:start="29:16" pos:end="29:16">=</operator> <call pos:start="29:18" pos:end="29:54"><name pos:start="29:18" pos:end="29:29">float64_sqrt</name><argument_list pos:start="29:30" pos:end="29:54">(<argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:34">farg</name><operator pos:start="29:35" pos:end="29:35">.</operator><name pos:start="29:36" pos:end="29:36">d</name></name></expr></argument>, <argument pos:start="29:39" pos:end="29:53"><expr pos:start="29:39" pos:end="29:53"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:53"><name pos:start="29:40" pos:end="29:42">env</name><operator pos:start="29:43" pos:end="29:44">-&gt;</operator><name pos:start="29:45" pos:end="29:53">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="33:5" pos:end="33:19">return <expr pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:18"><name pos:start="33:12" pos:end="33:15">farg</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:18">ll</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
