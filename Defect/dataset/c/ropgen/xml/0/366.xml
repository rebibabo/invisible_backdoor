<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/366.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">ff_wms_parse_sdp_a_line</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:15">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:15">= <expr pos:start="5:15" pos:end="5:15"><literal type="number" pos:start="5:15" pos:end="5:15">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="61:5"><if pos:start="7:5" pos:end="61:5">if <condition pos:start="7:8" pos:end="7:82">(<expr pos:start="7:9" pos:end="7:81"><call pos:start="7:9" pos:end="7:81"><name pos:start="7:9" pos:end="7:19">av_strstart</name><argument_list pos:start="7:20" pos:end="7:81">(<argument pos:start="7:21" pos:end="7:21"><expr pos:start="7:21" pos:end="7:21"><name pos:start="7:21" pos:end="7:21">p</name></expr></argument>, <argument pos:start="7:24" pos:end="7:76"><expr pos:start="7:24" pos:end="7:76"><literal type="string" pos:start="7:24" pos:end="7:76">"pgmpu:data:application/vnd.ms.wms-hdr.asfv1;base64,"</literal></expr></argument>, <argument pos:start="7:79" pos:end="7:80"><expr pos:start="7:79" pos:end="7:80"><operator pos:start="7:79" pos:end="7:79">&amp;</operator><name pos:start="7:80" pos:end="7:80">p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="7:84" pos:end="61:5">{<block_content pos:start="9:9" pos:end="59:31">

        <decl_stmt pos:start="9:9" pos:end="9:23"><decl pos:start="9:9" pos:end="9:22"><type pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:19">AVIOContext</name></type> <name pos:start="9:21" pos:end="9:22">pb</name></decl>;</decl_stmt>

        <decl_stmt pos:start="11:9" pos:end="11:37"><decl pos:start="11:9" pos:end="11:36"><type pos:start="11:9" pos:end="11:19"><name pos:start="11:9" pos:end="11:17">RTSPState</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">rt</name> <init pos:start="11:23" pos:end="11:36">= <expr pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:36"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:34"><decl pos:start="13:9" pos:end="13:33"><type pos:start="13:9" pos:end="13:22"><name pos:start="13:9" pos:end="13:20">AVDictionary</name> <modifier pos:start="13:22" pos:end="13:22">*</modifier></type><name pos:start="13:23" pos:end="13:26">opts</name> <init pos:start="13:28" pos:end="13:33">= <expr pos:start="13:30" pos:end="13:33"><name pos:start="13:30" pos:end="13:33">NULL</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="15:9" pos:end="15:36"><decl pos:start="15:9" pos:end="15:35"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">len</name> <init pos:start="15:17" pos:end="15:35">= <expr pos:start="15:19" pos:end="15:35"><call pos:start="15:19" pos:end="15:27"><name pos:start="15:19" pos:end="15:24">strlen</name><argument_list pos:start="15:25" pos:end="15:27">(<argument pos:start="15:26" pos:end="15:26"><expr pos:start="15:26" pos:end="15:26"><name pos:start="15:26" pos:end="15:26">p</name></expr></argument>)</argument_list></call> <operator pos:start="15:29" pos:end="15:29">*</operator> <literal type="number" pos:start="15:31" pos:end="15:31">6</literal> <operator pos:start="15:33" pos:end="15:33">/</operator> <literal type="number" pos:start="15:35" pos:end="15:35">8</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="17:9" pos:end="17:36"><decl pos:start="17:9" pos:end="17:35"><type pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:12">char</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:17">buf</name> <init pos:start="17:19" pos:end="17:35">= <expr pos:start="17:21" pos:end="17:35"><call pos:start="17:21" pos:end="17:35"><name pos:start="17:21" pos:end="17:30">av_mallocz</name><argument_list pos:start="17:31" pos:end="17:35">(<argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><name pos:start="17:32" pos:end="17:34">len</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:38"><expr pos:start="19:9" pos:end="19:37"><call pos:start="19:9" pos:end="19:37"><name pos:start="19:9" pos:end="19:24">av_base64_decode</name><argument_list pos:start="19:25" pos:end="19:37">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">buf</name></expr></argument>, <argument pos:start="19:31" pos:end="19:31"><expr pos:start="19:31" pos:end="19:31"><name pos:start="19:31" pos:end="19:31">p</name></expr></argument>, <argument pos:start="19:34" pos:end="19:36"><expr pos:start="19:34" pos:end="19:36"><name pos:start="19:34" pos:end="19:36">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="23:9" pos:end="27:70"><if pos:start="23:9" pos:end="27:70">if <condition pos:start="23:12" pos:end="23:45">(<expr pos:start="23:13" pos:end="23:44"><call pos:start="23:13" pos:end="23:40"><name pos:start="23:13" pos:end="23:30">rtp_asf_fix_header</name><argument_list pos:start="23:31" pos:end="23:40">(<argument pos:start="23:32" pos:end="23:34"><expr pos:start="23:32" pos:end="23:34"><name pos:start="23:32" pos:end="23:34">buf</name></expr></argument>, <argument pos:start="23:37" pos:end="23:39"><expr pos:start="23:37" pos:end="23:39"><name pos:start="23:37" pos:end="23:39">len</name></expr></argument>)</argument_list></call> <operator pos:start="23:42" pos:end="23:42">&lt;</operator> <literal type="number" pos:start="23:44" pos:end="23:44">0</literal></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="27:70"><block_content pos:start="25:13" pos:end="27:70">

            <expr_stmt pos:start="25:13" pos:end="27:70"><expr pos:start="25:13" pos:end="27:69"><call pos:start="25:13" pos:end="27:69"><name pos:start="25:13" pos:end="25:18">av_log</name><argument_list pos:start="25:19" pos:end="27:69">(<argument pos:start="25:20" pos:end="25:20"><expr pos:start="25:20" pos:end="25:20"><name pos:start="25:20" pos:end="25:20">s</name></expr></argument>, <argument pos:start="25:23" pos:end="25:34"><expr pos:start="25:23" pos:end="25:34"><name pos:start="25:23" pos:end="25:34">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="27:20" pos:end="27:68"><expr pos:start="27:20" pos:end="27:68"><literal type="string" pos:start="27:20" pos:end="27:68">"Failed to fix invalid RTSP-MS/ASF min_pktsize\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:39"><expr pos:start="29:9" pos:end="29:38"><call pos:start="29:9" pos:end="29:38"><name pos:start="29:9" pos:end="29:23">init_packetizer</name><argument_list pos:start="29:24" pos:end="29:38">(<argument pos:start="29:25" pos:end="29:27"><expr pos:start="29:25" pos:end="29:27"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:27">pb</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">buf</name></expr></argument>, <argument pos:start="29:35" pos:end="29:37"><expr pos:start="29:35" pos:end="29:37"><name pos:start="29:35" pos:end="29:37">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:24">(<expr pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:23"><name pos:start="31:13" pos:end="31:14">rt</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:23">asf_ctx</name></name></expr>)</condition> <block pos:start="31:26" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:47">

            <expr_stmt pos:start="33:13" pos:end="33:47"><expr pos:start="33:13" pos:end="33:46"><call pos:start="33:13" pos:end="33:46"><name pos:start="33:13" pos:end="33:32">avformat_close_input</name><argument_list pos:start="33:33" pos:end="33:46">(<argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><operator pos:start="33:34" pos:end="33:34">&amp;</operator><name pos:start="33:35" pos:end="33:45"><name pos:start="33:35" pos:end="33:36">rt</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:45">asf_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="37:9" pos:end="39:35"><if pos:start="37:9" pos:end="39:35">if <condition pos:start="37:12" pos:end="37:54">(<expr pos:start="37:13" pos:end="37:53"><operator pos:start="37:13" pos:end="37:13">!</operator><operator pos:start="37:14" pos:end="37:14">(</operator><name pos:start="37:15" pos:end="37:25"><name pos:start="37:15" pos:end="37:16">rt</name><operator pos:start="37:17" pos:end="37:18">-&gt;</operator><name pos:start="37:19" pos:end="37:25">asf_ctx</name></name> <operator pos:start="37:27" pos:end="37:27">=</operator> <call pos:start="37:29" pos:end="37:52"><name pos:start="37:29" pos:end="37:50">avformat_alloc_context</name><argument_list pos:start="37:51" pos:end="37:52">()</argument_list></call><operator pos:start="37:53" pos:end="37:53">)</operator></expr>)</condition><block type="pseudo" pos:start="39:13" pos:end="39:35"><block_content pos:start="39:13" pos:end="39:35">

            <return pos:start="39:13" pos:end="39:35">return <expr pos:start="39:20" pos:end="39:34"><call pos:start="39:20" pos:end="39:34"><name pos:start="39:20" pos:end="39:26">AVERROR</name><argument_list pos:start="39:27" pos:end="39:34">(<argument pos:start="39:28" pos:end="39:33"><expr pos:start="39:28" pos:end="39:33"><name pos:start="39:28" pos:end="39:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:35"><expr pos:start="41:9" pos:end="41:34"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:10">rt</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:19">asf_ctx</name><operator pos:start="41:20" pos:end="41:21">-&gt;</operator><name pos:start="41:22" pos:end="41:23">pb</name></name>      <operator pos:start="41:30" pos:end="41:30">=</operator> <operator pos:start="41:32" pos:end="41:32">&amp;</operator><name pos:start="41:33" pos:end="41:34">pb</name></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:55"><expr pos:start="43:9" pos:end="43:54"><call pos:start="43:9" pos:end="43:54"><name pos:start="43:9" pos:end="43:19">av_dict_set</name><argument_list pos:start="43:20" pos:end="43:54">(<argument pos:start="43:21" pos:end="43:25"><expr pos:start="43:21" pos:end="43:25"><operator pos:start="43:21" pos:end="43:21">&amp;</operator><name pos:start="43:22" pos:end="43:25">opts</name></expr></argument>, <argument pos:start="43:28" pos:end="43:45"><expr pos:start="43:28" pos:end="43:45"><literal type="string" pos:start="43:28" pos:end="43:45">"no_resync_search"</literal></expr></argument>, <argument pos:start="43:48" pos:end="43:50"><expr pos:start="43:48" pos:end="43:50"><literal type="string" pos:start="43:48" pos:end="43:50">"1"</literal></expr></argument>, <argument pos:start="43:53" pos:end="43:53"><expr pos:start="43:53" pos:end="43:53"><literal type="number" pos:start="43:53" pos:end="43:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:76"><expr pos:start="45:9" pos:end="45:75"><name pos:start="45:9" pos:end="45:11">ret</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:75"><name pos:start="45:15" pos:end="45:33">avformat_open_input</name><argument_list pos:start="45:34" pos:end="45:75">(<argument pos:start="45:35" pos:end="45:46"><expr pos:start="45:35" pos:end="45:46"><operator pos:start="45:35" pos:end="45:35">&amp;</operator><name pos:start="45:36" pos:end="45:46"><name pos:start="45:36" pos:end="45:37">rt</name><operator pos:start="45:38" pos:end="45:39">-&gt;</operator><name pos:start="45:40" pos:end="45:46">asf_ctx</name></name></expr></argument>, <argument pos:start="45:49" pos:end="45:50"><expr pos:start="45:49" pos:end="45:50"><literal type="string" pos:start="45:49" pos:end="45:50">""</literal></expr></argument>, <argument pos:start="45:53" pos:end="45:67"><expr pos:start="45:53" pos:end="45:67"><operator pos:start="45:53" pos:end="45:53">&amp;</operator><name pos:start="45:54" pos:end="45:67">ff_asf_demuxer</name></expr></argument>, <argument pos:start="45:70" pos:end="45:74"><expr pos:start="45:70" pos:end="45:74"><operator pos:start="45:70" pos:end="45:70">&amp;</operator><name pos:start="45:71" pos:end="45:74">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:28"><expr pos:start="47:9" pos:end="47:27"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:20">av_dict_free</name><argument_list pos:start="47:21" pos:end="47:27">(<argument pos:start="47:22" pos:end="47:26"><expr pos:start="47:22" pos:end="47:26"><operator pos:start="47:22" pos:end="47:22">&amp;</operator><name pos:start="47:23" pos:end="47:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="51:23"><if pos:start="49:9" pos:end="51:23">if <condition pos:start="49:12" pos:end="49:20">(<expr pos:start="49:13" pos:end="49:19"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:19">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:23"><block_content pos:start="51:13" pos:end="51:23">

            <return pos:start="51:13" pos:end="51:23">return <expr pos:start="51:20" pos:end="51:22"><name pos:start="51:20" pos:end="51:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><call pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:20">av_dict_copy</name><argument_list pos:start="53:21" pos:end="53:60">(<argument pos:start="53:22" pos:end="53:33"><expr pos:start="53:22" pos:end="53:33"><operator pos:start="53:22" pos:end="53:22">&amp;</operator><name pos:start="53:23" pos:end="53:33"><name pos:start="53:23" pos:end="53:23">s</name><operator pos:start="53:24" pos:end="53:25">-&gt;</operator><name pos:start="53:26" pos:end="53:33">metadata</name></name></expr></argument>, <argument pos:start="53:36" pos:end="53:56"><expr pos:start="53:36" pos:end="53:56"><name pos:start="53:36" pos:end="53:56"><name pos:start="53:36" pos:end="53:37">rt</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:46">asf_ctx</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:56">metadata</name></name></expr></argument>, <argument pos:start="53:59" pos:end="53:59"><expr pos:start="53:59" pos:end="53:59"><literal type="number" pos:start="53:59" pos:end="53:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:40"><expr pos:start="55:9" pos:end="55:39"><name pos:start="55:9" pos:end="55:22"><name pos:start="55:9" pos:end="55:10">rt</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:22">asf_pb_pos</name></name> <operator pos:start="55:24" pos:end="55:24">=</operator> <call pos:start="55:26" pos:end="55:39"><name pos:start="55:26" pos:end="55:34">avio_tell</name><argument_list pos:start="55:35" pos:end="55:39">(<argument pos:start="55:36" pos:end="55:38"><expr pos:start="55:36" pos:end="55:38"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:38">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:21"><expr pos:start="57:9" pos:end="57:20"><call pos:start="57:9" pos:end="57:20"><name pos:start="57:9" pos:end="57:15">av_free</name><argument_list pos:start="57:16" pos:end="57:20">(<argument pos:start="57:17" pos:end="57:19"><expr pos:start="57:17" pos:end="57:19"><name pos:start="57:17" pos:end="57:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:23"><name pos:start="59:9" pos:end="59:10">rt</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:19">asf_ctx</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:23">pb</name></name> <operator pos:start="59:25" pos:end="59:25">=</operator> <name pos:start="59:27" pos:end="59:30">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="63:5" pos:end="63:15">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
