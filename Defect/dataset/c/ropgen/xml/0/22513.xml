<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22513.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">spdif_write_packet</name><parameter_list pos:start="1:30" pos:end="1:71">(<parameter pos:start="1:31" pos:end="1:55"><decl pos:start="1:31" pos:end="1:55"><type pos:start="1:31" pos:end="1:55"><name pos:start="1:31" pos:end="1:52"><name pos:start="1:31" pos:end="1:36">struct</name> <name pos:start="1:38" pos:end="1:52">AVFormatContext</name></name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:55">s</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:65">AVPacket</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:13">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">IEC61937Context</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:39">= <expr pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:39"><name pos:start="5:28" pos:end="5:28">s</name><operator pos:start="5:29" pos:end="5:30">-&gt;</operator><name pos:start="5:31" pos:end="5:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:20">padding</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:29"><expr pos:start="11:5" pos:end="11:28"><name pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:7">ctx</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:16">out_buf</name></name> <operator pos:start="11:18" pos:end="11:18">=</operator> <name pos:start="11:20" pos:end="11:28"><name pos:start="11:20" pos:end="11:22">pkt</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:28">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:31"><expr pos:start="13:5" pos:end="13:30"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:7">ctx</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:18">out_bytes</name></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <name pos:start="13:22" pos:end="13:30"><name pos:start="13:22" pos:end="13:24">pkt</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:30">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:50"><expr pos:start="15:5" pos:end="15:49"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:20">length_code</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:44"><name pos:start="15:24" pos:end="15:30">FFALIGN</name><argument_list pos:start="15:31" pos:end="15:44">(<argument pos:start="15:32" pos:end="15:40"><expr pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:40"><name pos:start="15:32" pos:end="15:34">pkt</name><operator pos:start="15:35" pos:end="15:36">-&gt;</operator><name pos:start="15:37" pos:end="15:40">size</name></name></expr></argument>, <argument pos:start="15:43" pos:end="15:43"><expr pos:start="15:43" pos:end="15:43"><literal type="number" pos:start="15:43" pos:end="15:43">2</literal></expr></argument>)</argument_list></call> <operator pos:start="15:46" pos:end="15:47">&lt;&lt;</operator> <literal type="number" pos:start="15:49" pos:end="15:49">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:7">ctx</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:21">use_preamble</name></name> <operator pos:start="17:23" pos:end="17:23">=</operator> <literal type="number" pos:start="17:25" pos:end="17:25">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:7">ctx</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:20">extra_bswap</name></name> <operator pos:start="19:22" pos:end="19:22">=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:34"><name pos:start="23:11" pos:end="23:26"><name pos:start="23:11" pos:end="23:13">ctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:26">header_info</name></name><argument_list pos:start="23:27" pos:end="23:34">(<argument pos:start="23:28" pos:end="23:28"><expr pos:start="23:28" pos:end="23:28"><name pos:start="23:28" pos:end="23:28">s</name></expr></argument>, <argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:17"><if pos:start="29:5" pos:end="31:17">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:12">ctx</name><operator pos:start="29:13" pos:end="29:14">-&gt;</operator><name pos:start="29:15" pos:end="29:24">pkt_offset</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:94"><expr pos:start="35:5" pos:end="35:93"><name pos:start="35:5" pos:end="35:11">padding</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">(</operator><name pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:18">ctx</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:30">pkt_offset</name></name> <operator pos:start="35:32" pos:end="35:32">-</operator> <name pos:start="35:34" pos:end="35:50"><name pos:start="35:34" pos:end="35:36">ctx</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:50">use_preamble</name></name> <operator pos:start="35:52" pos:end="35:52">*</operator> <name pos:start="35:54" pos:end="35:70">BURST_HEADER_SIZE</name> <operator pos:start="35:72" pos:end="35:72">-</operator> <name pos:start="35:74" pos:end="35:87"><name pos:start="35:74" pos:end="35:76">ctx</name><operator pos:start="35:77" pos:end="35:78">-&gt;</operator><name pos:start="35:79" pos:end="35:87">out_bytes</name></name><operator pos:start="35:88" pos:end="35:88">)</operator> <operator pos:start="35:90" pos:end="35:90">&amp;</operator> <operator pos:start="35:92" pos:end="35:92">~</operator><literal type="number" pos:start="35:93" pos:end="35:93">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="43:5"><if pos:start="37:5" pos:end="43:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:15">padding</name> <operator pos:start="37:17" pos:end="37:17">&lt;</operator> <literal type="number" pos:start="37:19" pos:end="37:19">0</literal></expr>)</condition> <block pos:start="37:22" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:31">

        <expr_stmt pos:start="39:9" pos:end="39:57"><expr pos:start="39:9" pos:end="39:56"><call pos:start="39:9" pos:end="39:56"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="39:56">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:30"><expr pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="39:33" pos:end="39:55"><expr pos:start="39:33" pos:end="39:55"><literal type="string" pos:start="39:33" pos:end="39:55">"bitrate is too high\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:31">return <expr pos:start="41:16" pos:end="41:30"><call pos:start="41:16" pos:end="41:30"><name pos:start="41:16" pos:end="41:22">AVERROR</name><argument_list pos:start="41:23" pos:end="41:30">(<argument pos:start="41:24" pos:end="41:29"><expr pos:start="41:24" pos:end="41:29"><name pos:start="41:24" pos:end="41:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="57:5"><if pos:start="47:5" pos:end="57:5">if <condition pos:start="47:8" pos:end="47:26">(<expr pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:25"><name pos:start="47:9" pos:end="47:11">ctx</name><operator pos:start="47:12" pos:end="47:13">-&gt;</operator><name pos:start="47:14" pos:end="47:25">use_preamble</name></name></expr>)</condition> <block pos:start="47:28" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:42">

        <expr_stmt pos:start="49:9" pos:end="49:35"><expr pos:start="49:9" pos:end="49:34"><call pos:start="49:9" pos:end="49:34"><name pos:start="49:9" pos:end="49:16">put_le16</name><argument_list pos:start="49:17" pos:end="49:34">(<argument pos:start="49:18" pos:end="49:22"><expr pos:start="49:18" pos:end="49:22"><name pos:start="49:18" pos:end="49:22"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:22">pb</name></name></expr></argument>, <argument pos:start="49:25" pos:end="49:33"><expr pos:start="49:25" pos:end="49:33"><name pos:start="49:25" pos:end="49:33">SYNCWORD1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="49:43" pos:end="49:46">//Pa</comment>

        <expr_stmt pos:start="51:9" pos:end="51:35"><expr pos:start="51:9" pos:end="51:34"><call pos:start="51:9" pos:end="51:34"><name pos:start="51:9" pos:end="51:16">put_le16</name><argument_list pos:start="51:17" pos:end="51:34">(<argument pos:start="51:18" pos:end="51:22"><expr pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:22"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:22">pb</name></name></expr></argument>, <argument pos:start="51:25" pos:end="51:33"><expr pos:start="51:25" pos:end="51:33"><name pos:start="51:25" pos:end="51:33">SYNCWORD2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="line" pos:start="51:43" pos:end="51:46">//Pb</comment>

        <expr_stmt pos:start="53:9" pos:end="53:40"><expr pos:start="53:9" pos:end="53:39"><call pos:start="53:9" pos:end="53:39"><name pos:start="53:9" pos:end="53:16">put_le16</name><argument_list pos:start="53:17" pos:end="53:39">(<argument pos:start="53:18" pos:end="53:22"><expr pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:18">s</name><operator pos:start="53:19" pos:end="53:20">-&gt;</operator><name pos:start="53:21" pos:end="53:22">pb</name></name></expr></argument>, <argument pos:start="53:25" pos:end="53:38"><expr pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:38"><name pos:start="53:25" pos:end="53:27">ctx</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:38">data_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="53:43" pos:end="53:46">//Pc</comment>

        <expr_stmt pos:start="55:9" pos:end="55:42"><expr pos:start="55:9" pos:end="55:41"><call pos:start="55:9" pos:end="55:41"><name pos:start="55:9" pos:end="55:16">put_le16</name><argument_list pos:start="55:17" pos:end="55:41">(<argument pos:start="55:18" pos:end="55:22"><expr pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:22"><name pos:start="55:18" pos:end="55:18">s</name><operator pos:start="55:19" pos:end="55:20">-&gt;</operator><name pos:start="55:21" pos:end="55:22">pb</name></name></expr></argument>, <argument pos:start="55:25" pos:end="55:40"><expr pos:start="55:25" pos:end="55:40"><name pos:start="55:25" pos:end="55:40"><name pos:start="55:25" pos:end="55:27">ctx</name><operator pos:start="55:28" pos:end="55:29">-&gt;</operator><name pos:start="55:30" pos:end="55:40">length_code</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt><comment type="line" pos:start="55:43" pos:end="55:46">//Pd</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="61:5" pos:end="77:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:42">(<expr pos:start="61:9" pos:end="61:41"><name pos:start="61:9" pos:end="61:22">HAVE_BIGENDIAN</name> <operator pos:start="61:24" pos:end="61:24">^</operator> <name pos:start="61:26" pos:end="61:41"><name pos:start="61:26" pos:end="61:28">ctx</name><operator pos:start="61:29" pos:end="61:30">-&gt;</operator><name pos:start="61:31" pos:end="61:41">extra_bswap</name></name></expr>)</condition> <block pos:start="61:44" pos:end="65:5">{<block_content pos:start="63:5" pos:end="63:57">

    <expr_stmt pos:start="63:5" pos:end="63:57"><expr pos:start="63:5" pos:end="63:56"><call pos:start="63:5" pos:end="63:56"><name pos:start="63:5" pos:end="63:14">put_buffer</name><argument_list pos:start="63:15" pos:end="63:56">(<argument pos:start="63:16" pos:end="63:20"><expr pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:20"><name pos:start="63:16" pos:end="63:16">s</name><operator pos:start="63:17" pos:end="63:18">-&gt;</operator><name pos:start="63:19" pos:end="63:20">pb</name></name></expr></argument>, <argument pos:start="63:23" pos:end="63:34"><expr pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:34"><name pos:start="63:23" pos:end="63:25">ctx</name><operator pos:start="63:26" pos:end="63:27">-&gt;</operator><name pos:start="63:28" pos:end="63:34">out_buf</name></name></expr></argument>, <argument pos:start="63:37" pos:end="63:55"><expr pos:start="63:37" pos:end="63:55"><name pos:start="63:37" pos:end="63:50"><name pos:start="63:37" pos:end="63:39">ctx</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:50">out_bytes</name></name> <operator pos:start="63:52" pos:end="63:52">&amp;</operator> <operator pos:start="63:54" pos:end="63:54">~</operator><literal type="number" pos:start="63:55" pos:end="63:55">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="77:5">else <block pos:start="65:12" pos:end="77:5">{<block_content pos:start="67:5" pos:end="75:56">

    <expr_stmt pos:start="67:5" pos:end="67:99"><expr pos:start="67:5" pos:end="67:98"><call pos:start="67:5" pos:end="67:98"><name pos:start="67:5" pos:end="67:18">av_fast_malloc</name><argument_list pos:start="67:19" pos:end="67:98">(<argument pos:start="67:20" pos:end="67:31"><expr pos:start="67:20" pos:end="67:31"><operator pos:start="67:20" pos:end="67:20">&amp;</operator><name pos:start="67:21" pos:end="67:31"><name pos:start="67:21" pos:end="67:23">ctx</name><operator pos:start="67:24" pos:end="67:25">-&gt;</operator><name pos:start="67:26" pos:end="67:31">buffer</name></name></expr></argument>, <argument pos:start="67:34" pos:end="67:50"><expr pos:start="67:34" pos:end="67:50"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:50"><name pos:start="67:35" pos:end="67:37">ctx</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:50">buffer_size</name></name></expr></argument>, <argument pos:start="67:53" pos:end="67:97"><expr pos:start="67:53" pos:end="67:97"><name pos:start="67:53" pos:end="67:66"><name pos:start="67:53" pos:end="67:55">ctx</name><operator pos:start="67:56" pos:end="67:57">-&gt;</operator><name pos:start="67:58" pos:end="67:66">out_bytes</name></name> <operator pos:start="67:68" pos:end="67:68">+</operator> <name pos:start="67:70" pos:end="67:97">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="71:31"><if pos:start="69:5" pos:end="71:31">if <condition pos:start="69:8" pos:end="69:21">(<expr pos:start="69:9" pos:end="69:20"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:20"><name pos:start="69:10" pos:end="69:12">ctx</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:20">buffer</name></name></expr>)</condition><block type="pseudo" pos:start="71:9" pos:end="71:31"><block_content pos:start="71:9" pos:end="71:31">

        <return pos:start="71:9" pos:end="71:31">return <expr pos:start="71:16" pos:end="71:30"><call pos:start="71:16" pos:end="71:30"><name pos:start="71:16" pos:end="71:22">AVERROR</name><argument_list pos:start="71:23" pos:end="71:30">(<argument pos:start="71:24" pos:end="71:29"><expr pos:start="71:24" pos:end="71:29"><name pos:start="71:24" pos:end="71:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:97"><expr pos:start="73:5" pos:end="73:96"><call pos:start="73:5" pos:end="73:96"><name pos:start="73:5" pos:end="73:24">ff_spdif_bswap_buf16</name><argument_list pos:start="73:25" pos:end="73:96">(<argument pos:start="73:26" pos:end="73:48"><expr pos:start="73:26" pos:end="73:48"><operator pos:start="73:26" pos:end="73:26">(</operator><name pos:start="73:27" pos:end="73:34">uint16_t</name> <operator pos:start="73:36" pos:end="73:36">*</operator><operator pos:start="73:37" pos:end="73:37">)</operator><name pos:start="73:38" pos:end="73:48"><name pos:start="73:38" pos:end="73:40">ctx</name><operator pos:start="73:41" pos:end="73:42">-&gt;</operator><name pos:start="73:43" pos:end="73:48">buffer</name></name></expr></argument>, <argument pos:start="73:51" pos:end="73:74"><expr pos:start="73:51" pos:end="73:74"><operator pos:start="73:51" pos:end="73:51">(</operator><name pos:start="73:52" pos:end="73:59">uint16_t</name> <operator pos:start="73:61" pos:end="73:61">*</operator><operator pos:start="73:62" pos:end="73:62">)</operator><name pos:start="73:63" pos:end="73:74"><name pos:start="73:63" pos:end="73:65">ctx</name><operator pos:start="73:66" pos:end="73:67">-&gt;</operator><name pos:start="73:68" pos:end="73:74">out_buf</name></name></expr></argument>, <argument pos:start="73:77" pos:end="73:95"><expr pos:start="73:77" pos:end="73:95"><name pos:start="73:77" pos:end="73:90"><name pos:start="73:77" pos:end="73:79">ctx</name><operator pos:start="73:80" pos:end="73:81">-&gt;</operator><name pos:start="73:82" pos:end="73:90">out_bytes</name></name> <operator pos:start="73:92" pos:end="73:93">&gt;&gt;</operator> <literal type="number" pos:start="73:95" pos:end="73:95">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:56"><expr pos:start="75:5" pos:end="75:55"><call pos:start="75:5" pos:end="75:55"><name pos:start="75:5" pos:end="75:14">put_buffer</name><argument_list pos:start="75:15" pos:end="75:55">(<argument pos:start="75:16" pos:end="75:20"><expr pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:20">pb</name></name></expr></argument>, <argument pos:start="75:23" pos:end="75:33"><expr pos:start="75:23" pos:end="75:33"><name pos:start="75:23" pos:end="75:33"><name pos:start="75:23" pos:end="75:25">ctx</name><operator pos:start="75:26" pos:end="75:27">-&gt;</operator><name pos:start="75:28" pos:end="75:33">buffer</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:54"><expr pos:start="75:36" pos:end="75:54"><name pos:start="75:36" pos:end="75:49"><name pos:start="75:36" pos:end="75:38">ctx</name><operator pos:start="75:39" pos:end="75:40">-&gt;</operator><name pos:start="75:41" pos:end="75:49">out_bytes</name></name> <operator pos:start="75:51" pos:end="75:51">&amp;</operator> <operator pos:start="75:53" pos:end="75:53">~</operator><literal type="number" pos:start="75:54" pos:end="75:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="81:5" pos:end="83:58"><if pos:start="81:5" pos:end="83:58">if <condition pos:start="81:8" pos:end="81:27">(<expr pos:start="81:9" pos:end="81:26"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">ctx</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">out_bytes</name></name> <operator pos:start="81:24" pos:end="81:24">&amp;</operator> <literal type="number" pos:start="81:26" pos:end="81:26">1</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:58"><block_content pos:start="83:9" pos:end="83:58">

        <expr_stmt pos:start="83:9" pos:end="83:58"><expr pos:start="83:9" pos:end="83:57"><call pos:start="83:9" pos:end="83:57"><name pos:start="83:9" pos:end="83:16">put_be16</name><argument_list pos:start="83:17" pos:end="83:57">(<argument pos:start="83:18" pos:end="83:22"><expr pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:22"><name pos:start="83:18" pos:end="83:18">s</name><operator pos:start="83:19" pos:end="83:20">-&gt;</operator><name pos:start="83:21" pos:end="83:22">pb</name></name></expr></argument>, <argument pos:start="83:25" pos:end="83:56"><expr pos:start="83:25" pos:end="83:56"><name pos:start="83:25" pos:end="83:56"><name pos:start="83:25" pos:end="83:27">ctx</name><operator pos:start="83:28" pos:end="83:29">-&gt;</operator><name pos:start="83:30" pos:end="83:36">out_buf</name><index pos:start="83:37" pos:end="83:56">[<expr pos:start="83:38" pos:end="83:55"><name pos:start="83:38" pos:end="83:51"><name pos:start="83:38" pos:end="83:40">ctx</name><operator pos:start="83:41" pos:end="83:42">-&gt;</operator><name pos:start="83:43" pos:end="83:51">out_bytes</name></name> <operator pos:start="83:53" pos:end="83:53">-</operator> <literal type="number" pos:start="83:55" pos:end="83:55">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><call pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:13">put_nbyte</name><argument_list pos:start="87:14" pos:end="87:32">(<argument pos:start="87:15" pos:end="87:19"><expr pos:start="87:15" pos:end="87:19"><name pos:start="87:15" pos:end="87:19"><name pos:start="87:15" pos:end="87:15">s</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:19">pb</name></name></expr></argument>, <argument pos:start="87:22" pos:end="87:22"><expr pos:start="87:22" pos:end="87:22"><literal type="number" pos:start="87:22" pos:end="87:22">0</literal></expr></argument>, <argument pos:start="87:25" pos:end="87:31"><expr pos:start="87:25" pos:end="87:31"><name pos:start="87:25" pos:end="87:31">padding</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="91:5" pos:end="93:60"><expr pos:start="91:5" pos:end="93:59"><call pos:start="91:5" pos:end="93:59"><name pos:start="91:5" pos:end="91:10">av_log</name><argument_list pos:start="91:11" pos:end="93:59">(<argument pos:start="91:12" pos:end="91:12"><expr pos:start="91:12" pos:end="91:12"><name pos:start="91:12" pos:end="91:12">s</name></expr></argument>, <argument pos:start="91:15" pos:end="91:26"><expr pos:start="91:15" pos:end="91:26"><name pos:start="91:15" pos:end="91:26">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="91:29" pos:end="91:60"><expr pos:start="91:29" pos:end="91:60"><literal type="string" pos:start="91:29" pos:end="91:60">"type=%x len=%i pkt_offset=%i\n"</literal></expr></argument>,

           <argument pos:start="93:12" pos:end="93:25"><expr pos:start="93:12" pos:end="93:25"><name pos:start="93:12" pos:end="93:25"><name pos:start="93:12" pos:end="93:14">ctx</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:25">data_type</name></name></expr></argument>, <argument pos:start="93:28" pos:end="93:41"><expr pos:start="93:28" pos:end="93:41"><name pos:start="93:28" pos:end="93:41"><name pos:start="93:28" pos:end="93:30">ctx</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:41">out_bytes</name></name></expr></argument>, <argument pos:start="93:44" pos:end="93:58"><expr pos:start="93:44" pos:end="93:58"><name pos:start="93:44" pos:end="93:58"><name pos:start="93:44" pos:end="93:46">ctx</name><operator pos:start="93:47" pos:end="93:48">-&gt;</operator><name pos:start="93:49" pos:end="93:58">pkt_offset</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:28"><expr pos:start="97:5" pos:end="97:27"><call pos:start="97:5" pos:end="97:27"><name pos:start="97:5" pos:end="97:20">put_flush_packet</name><argument_list pos:start="97:21" pos:end="97:27">(<argument pos:start="97:22" pos:end="97:26"><expr pos:start="97:22" pos:end="97:26"><name pos:start="97:22" pos:end="97:26"><name pos:start="97:22" pos:end="97:22">s</name><operator pos:start="97:23" pos:end="97:24">-&gt;</operator><name pos:start="97:25" pos:end="97:26">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="99:5" pos:end="99:13">return <expr pos:start="99:12" pos:end="99:12"><literal type="number" pos:start="99:12" pos:end="99:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
