<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13549.c" pos:tabs="8"><function pos:start="1:1" pos:end="171:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">thp_read_header</name><parameter_list pos:start="1:27" pos:end="3:50">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:49"><decl pos:start="3:28" pos:end="3:49"><type pos:start="3:28" pos:end="3:49"><name pos:start="3:28" pos:end="3:45">AVFormatParameters</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:49">ap</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="171:1">{<block_content pos:start="7:5" pos:end="169:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">ThpDemuxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">thp</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:28"><decl pos:start="11:5" pos:end="11:27"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">AVIOContext</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:19">pb</name> <init pos:start="11:21" pos:end="11:27">= <expr pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:27"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:33"><decl pos:start="13:5" pos:end="13:32"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:17">fsize</name><init pos:start="13:18" pos:end="13:32">= <expr pos:start="13:20" pos:end="13:32"><call pos:start="13:20" pos:end="13:32"><name pos:start="13:20" pos:end="13:28">avio_size</name><argument_list pos:start="13:29" pos:end="13:32">(<argument pos:start="13:30" pos:end="13:31"><expr pos:start="13:30" pos:end="13:31"><name pos:start="13:30" pos:end="13:31">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:10"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:32">/* Read the file header.  */</comment>

                           <expr_stmt pos:start="21:28" pos:end="21:41"><expr pos:start="21:28" pos:end="21:40"><call pos:start="21:28" pos:end="21:40"><name pos:start="21:28" pos:end="21:36">avio_rb32</name><argument_list pos:start="21:37" pos:end="21:40">(<argument pos:start="21:38" pos:end="21:39"><expr pos:start="21:38" pos:end="21:39"><name pos:start="21:38" pos:end="21:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:43" pos:end="21:60">/* Skip Magic.  */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:7">thp</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:16">version</name></name>         <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:40"><name pos:start="23:28" pos:end="23:36">avio_rb32</name><argument_list pos:start="23:37" pos:end="23:40">(<argument pos:start="23:38" pos:end="23:39"><expr pos:start="23:38" pos:end="23:39"><name pos:start="23:38" pos:end="23:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                           <expr_stmt pos:start="27:28" pos:end="27:41"><expr pos:start="27:28" pos:end="27:40"><call pos:start="27:28" pos:end="27:40"><name pos:start="27:28" pos:end="27:36">avio_rb32</name><argument_list pos:start="27:37" pos:end="27:40">(<argument pos:start="27:38" pos:end="27:39"><expr pos:start="27:38" pos:end="27:39"><name pos:start="27:38" pos:end="27:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:43" pos:end="27:62">/* Max buf size.  */</comment>

                           <expr_stmt pos:start="29:28" pos:end="29:41"><expr pos:start="29:28" pos:end="29:40"><call pos:start="29:28" pos:end="29:40"><name pos:start="29:28" pos:end="29:36">avio_rb32</name><argument_list pos:start="29:37" pos:end="29:40">(<argument pos:start="29:38" pos:end="29:39"><expr pos:start="29:38" pos:end="29:39"><name pos:start="29:38" pos:end="29:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="29:43" pos:end="29:61">/* Max samples.  */</comment>



    <expr_stmt pos:start="33:5" pos:end="33:72"><expr pos:start="33:5" pos:end="33:71"><name pos:start="33:5" pos:end="33:12"><name pos:start="33:5" pos:end="33:7">thp</name><operator pos:start="33:8" pos:end="33:9">-&gt;</operator><name pos:start="33:10" pos:end="33:12">fps</name></name>             <operator pos:start="33:26" pos:end="33:26">=</operator> <call pos:start="33:28" pos:end="33:71"><name pos:start="33:28" pos:end="33:33">av_d2q</name><argument_list pos:start="33:34" pos:end="33:71">(<argument pos:start="33:35" pos:end="33:61"><expr pos:start="33:35" pos:end="33:61"><call pos:start="33:35" pos:end="33:61"><name pos:start="33:35" pos:end="33:46">av_int2float</name><argument_list pos:start="33:47" pos:end="33:61">(<argument pos:start="33:48" pos:end="33:60"><expr pos:start="33:48" pos:end="33:60"><call pos:start="33:48" pos:end="33:60"><name pos:start="33:48" pos:end="33:56">avio_rb32</name><argument_list pos:start="33:57" pos:end="33:60">(<argument pos:start="33:58" pos:end="33:59"><expr pos:start="33:58" pos:end="33:59"><name pos:start="33:58" pos:end="33:59">pb</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:64" pos:end="33:70"><expr pos:start="33:64" pos:end="33:70"><name pos:start="33:64" pos:end="33:70">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:7">thp</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:17">framecnt</name></name>        <operator pos:start="35:26" pos:end="35:26">=</operator> <call pos:start="35:28" pos:end="35:40"><name pos:start="35:28" pos:end="35:36">avio_rb32</name><argument_list pos:start="35:37" pos:end="35:40">(<argument pos:start="35:38" pos:end="35:39"><expr pos:start="35:38" pos:end="35:39"><name pos:start="35:38" pos:end="35:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:41"><expr pos:start="37:5" pos:end="37:40"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:7">thp</name><operator pos:start="37:8" pos:end="37:9">-&gt;</operator><name pos:start="37:10" pos:end="37:22">first_framesz</name></name>   <operator pos:start="37:26" pos:end="37:26">=</operator> <call pos:start="37:28" pos:end="37:40"><name pos:start="37:28" pos:end="37:36">avio_rb32</name><argument_list pos:start="37:37" pos:end="37:40">(<argument pos:start="37:38" pos:end="37:39"><expr pos:start="37:38" pos:end="37:39"><name pos:start="37:38" pos:end="37:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:41"><expr pos:start="39:5" pos:end="39:40"><name pos:start="39:5" pos:end="39:18"><name pos:start="39:5" pos:end="39:7">thp</name><operator pos:start="39:8" pos:end="39:9">-&gt;</operator><name pos:start="39:10" pos:end="39:18">data_size</name></name>       <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:40"><name pos:start="39:28" pos:end="39:36">avio_rb32</name><argument_list pos:start="39:37" pos:end="39:40">(<argument pos:start="39:38" pos:end="39:39"><expr pos:start="39:38" pos:end="39:39"><name pos:start="39:38" pos:end="39:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:30"><if pos:start="41:5" pos:end="43:30">if<condition pos:start="41:7" pos:end="41:62">(<expr pos:start="41:8" pos:end="41:61"><name pos:start="41:8" pos:end="41:12">fsize</name><operator pos:start="41:13" pos:end="41:13">&gt;</operator><literal type="number" pos:start="41:14" pos:end="41:14">0</literal> <operator pos:start="41:16" pos:end="41:17">&amp;&amp;</operator> <operator pos:start="41:19" pos:end="41:19">(</operator><operator pos:start="41:20" pos:end="41:20">!</operator><name pos:start="41:21" pos:end="41:34"><name pos:start="41:21" pos:end="41:23">thp</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:34">data_size</name></name> <operator pos:start="41:36" pos:end="41:37">||</operator> <name pos:start="41:39" pos:end="41:43">fsize</name> <operator pos:start="41:45" pos:end="41:45">&lt;</operator> <name pos:start="41:47" pos:end="41:60"><name pos:start="41:47" pos:end="41:49">thp</name><operator pos:start="41:50" pos:end="41:51">-&gt;</operator><name pos:start="41:52" pos:end="41:60">data_size</name></name><operator pos:start="41:61" pos:end="41:61">)</operator></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:30"><block_content pos:start="43:9" pos:end="43:30">

        <expr_stmt pos:start="43:9" pos:end="43:30"><expr pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:11">thp</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:22">data_size</name></name><operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:29">fsize</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:16"><name pos:start="47:5" pos:end="47:7">thp</name><operator pos:start="47:8" pos:end="47:9">-&gt;</operator><name pos:start="47:10" pos:end="47:16">compoff</name></name>         <operator pos:start="47:26" pos:end="47:26">=</operator> <call pos:start="47:28" pos:end="47:40"><name pos:start="47:28" pos:end="47:36">avio_rb32</name><argument_list pos:start="47:37" pos:end="47:40">(<argument pos:start="47:38" pos:end="47:39"><expr pos:start="47:38" pos:end="47:39"><name pos:start="47:38" pos:end="47:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                           <expr_stmt pos:start="49:28" pos:end="49:41"><expr pos:start="49:28" pos:end="49:40"><call pos:start="49:28" pos:end="49:40"><name pos:start="49:28" pos:end="49:36">avio_rb32</name><argument_list pos:start="49:37" pos:end="49:40">(<argument pos:start="49:38" pos:end="49:39"><expr pos:start="49:38" pos:end="49:39"><name pos:start="49:38" pos:end="49:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="49:43" pos:end="49:66">/* offsetDataOffset.  */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:41"><expr pos:start="51:5" pos:end="51:40"><name pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:7">thp</name><operator pos:start="51:8" pos:end="51:9">-&gt;</operator><name pos:start="51:10" pos:end="51:20">first_frame</name></name>     <operator pos:start="51:26" pos:end="51:26">=</operator> <call pos:start="51:28" pos:end="51:40"><name pos:start="51:28" pos:end="51:36">avio_rb32</name><argument_list pos:start="51:37" pos:end="51:40">(<argument pos:start="51:38" pos:end="51:39"><expr pos:start="51:38" pos:end="51:39"><name pos:start="51:38" pos:end="51:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:41"><expr pos:start="53:5" pos:end="53:40"><name pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:7">thp</name><operator pos:start="53:8" pos:end="53:9">-&gt;</operator><name pos:start="53:10" pos:end="53:19">last_frame</name></name>      <operator pos:start="53:26" pos:end="53:26">=</operator> <call pos:start="53:28" pos:end="53:40"><name pos:start="53:28" pos:end="53:36">avio_rb32</name><argument_list pos:start="53:37" pos:end="53:40">(<argument pos:start="53:38" pos:end="53:39"><expr pos:start="53:38" pos:end="53:39"><name pos:start="53:38" pos:end="53:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:7">thp</name><operator pos:start="57:8" pos:end="57:9">-&gt;</operator><name pos:start="57:10" pos:end="57:21">next_framesz</name></name>    <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:45"><name pos:start="57:28" pos:end="57:30">thp</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:45">first_framesz</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:19"><name pos:start="59:5" pos:end="59:7">thp</name><operator pos:start="59:8" pos:end="59:9">-&gt;</operator><name pos:start="59:10" pos:end="59:19">next_frame</name></name>      <operator pos:start="59:26" pos:end="59:26">=</operator> <name pos:start="59:28" pos:end="59:43"><name pos:start="59:28" pos:end="59:30">thp</name><operator pos:start="59:31" pos:end="59:32">-&gt;</operator><name pos:start="59:33" pos:end="59:43">first_frame</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="63:5" pos:end="63:40">/* Read the component structure.  */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:43"><expr pos:start="65:5" pos:end="65:42"><call pos:start="65:5" pos:end="65:42"><name pos:start="65:5" pos:end="65:13">avio_seek</name> <argument_list pos:start="65:15" pos:end="65:42">(<argument pos:start="65:16" pos:end="65:17"><expr pos:start="65:16" pos:end="65:17"><name pos:start="65:16" pos:end="65:17">pb</name></expr></argument>, <argument pos:start="65:20" pos:end="65:31"><expr pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:22">thp</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:31">compoff</name></name></expr></argument>, <argument pos:start="65:34" pos:end="65:41"><expr pos:start="65:34" pos:end="65:41"><name pos:start="65:34" pos:end="65:41">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:41"><expr pos:start="67:5" pos:end="67:40"><name pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:7">thp</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:18">compcount</name></name>       <operator pos:start="67:26" pos:end="67:26">=</operator> <call pos:start="67:28" pos:end="67:40"><name pos:start="67:28" pos:end="67:36">avio_rb32</name><argument_list pos:start="67:37" pos:end="67:40">(<argument pos:start="67:38" pos:end="67:39"><expr pos:start="67:38" pos:end="67:39"><name pos:start="67:38" pos:end="67:39">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="71:5" pos:end="71:44">/* Read the list of component types.  */</comment>

    <expr_stmt pos:start="73:5" pos:end="73:39"><expr pos:start="73:5" pos:end="73:38"><call pos:start="73:5" pos:end="73:38"><name pos:start="73:5" pos:end="73:13">avio_read</name><argument_list pos:start="73:14" pos:end="73:38">(<argument pos:start="73:15" pos:end="73:16"><expr pos:start="73:15" pos:end="73:16"><name pos:start="73:15" pos:end="73:16">pb</name></expr></argument>, <argument pos:start="73:19" pos:end="73:33"><expr pos:start="73:19" pos:end="73:33"><name pos:start="73:19" pos:end="73:33"><name pos:start="73:19" pos:end="73:21">thp</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:33">components</name></name></expr></argument>, <argument pos:start="73:36" pos:end="73:37"><expr pos:start="73:36" pos:end="73:37"><literal type="number" pos:start="73:36" pos:end="73:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="77:5" pos:end="165:5">for <control pos:start="77:9" pos:end="77:40">(<init pos:start="77:10" pos:end="77:15"><expr pos:start="77:10" pos:end="77:14"><name pos:start="77:10" pos:end="77:10">i</name> <operator pos:start="77:12" pos:end="77:12">=</operator> <literal type="number" pos:start="77:14" pos:end="77:14">0</literal></expr>;</init> <condition pos:start="77:17" pos:end="77:35"><expr pos:start="77:17" pos:end="77:34"><name pos:start="77:17" pos:end="77:17">i</name> <operator pos:start="77:19" pos:end="77:19">&lt;</operator> <name pos:start="77:21" pos:end="77:34"><name pos:start="77:21" pos:end="77:23">thp</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:34">compcount</name></name></expr>;</condition> <incr pos:start="77:37" pos:end="77:39"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:37">i</name><operator pos:start="77:38" pos:end="77:39">++</operator></expr></incr>)</control> <block pos:start="77:42" pos:end="165:5">{<block_content pos:start="79:9" pos:end="163:9">

        <if_stmt pos:start="79:9" pos:end="163:9"><if pos:start="79:9" pos:end="125:9">if <condition pos:start="79:12" pos:end="79:36">(<expr pos:start="79:13" pos:end="79:35"><name pos:start="79:13" pos:end="79:30"><name pos:start="79:13" pos:end="79:15">thp</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:27">components</name><index pos:start="79:28" pos:end="79:30">[<expr pos:start="79:29" pos:end="79:29"><name pos:start="79:29" pos:end="79:29">i</name></expr>]</index></name> <operator pos:start="79:32" pos:end="79:33">==</operator> <literal type="number" pos:start="79:35" pos:end="79:35">0</literal></expr>)</condition> <block pos:start="79:38" pos:end="125:9">{<block_content pos:start="81:13" pos:end="123:30">

            <if_stmt pos:start="81:13" pos:end="83:22"><if pos:start="81:13" pos:end="83:22">if <condition pos:start="81:16" pos:end="81:30">(<expr pos:start="81:17" pos:end="81:29"><name pos:start="81:17" pos:end="81:24"><name pos:start="81:17" pos:end="81:19">thp</name><operator pos:start="81:20" pos:end="81:21">-&gt;</operator><name pos:start="81:22" pos:end="81:24">vst</name></name> <operator pos:start="81:26" pos:end="81:27">!=</operator> <literal type="number" pos:start="81:29" pos:end="81:29">0</literal></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:22"><block_content pos:start="83:17" pos:end="83:22">

                <break pos:start="83:17" pos:end="83:22">break;</break></block_content></block></if></if_stmt>



            <comment type="block" pos:start="87:13" pos:end="87:35">/* Video component.  */</comment>

            <expr_stmt pos:start="89:13" pos:end="89:46"><expr pos:start="89:13" pos:end="89:45"><name pos:start="89:13" pos:end="89:14">st</name> <operator pos:start="89:16" pos:end="89:16">=</operator> <call pos:start="89:18" pos:end="89:45"><name pos:start="89:18" pos:end="89:36">avformat_new_stream</name><argument_list pos:start="89:37" pos:end="89:45">(<argument pos:start="89:38" pos:end="89:38"><expr pos:start="89:38" pos:end="89:38"><name pos:start="89:38" pos:end="89:38">s</name></expr></argument>, <argument pos:start="89:41" pos:end="89:44"><expr pos:start="89:41" pos:end="89:44"><name pos:start="89:41" pos:end="89:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="93:39"><if pos:start="91:13" pos:end="93:39">if <condition pos:start="91:16" pos:end="91:20">(<expr pos:start="91:17" pos:end="91:19"><operator pos:start="91:17" pos:end="91:17">!</operator><name pos:start="91:18" pos:end="91:19">st</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:39"><block_content pos:start="93:17" pos:end="93:39">

                <return pos:start="93:17" pos:end="93:39">return <expr pos:start="93:24" pos:end="93:38"><call pos:start="93:24" pos:end="93:38"><name pos:start="93:24" pos:end="93:30">AVERROR</name><argument_list pos:start="93:31" pos:end="93:38">(<argument pos:start="93:32" pos:end="93:37"><expr pos:start="93:32" pos:end="93:37"><name pos:start="93:32" pos:end="93:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <comment type="block" pos:start="97:13" pos:end="99:31">/* The denominator and numerator are switched because 1/fps

               is required.  */</comment>

            <expr_stmt pos:start="101:13" pos:end="101:68"><expr pos:start="101:13" pos:end="101:67"><call pos:start="101:13" pos:end="101:67"><name pos:start="101:13" pos:end="101:31">avpriv_set_pts_info</name><argument_list pos:start="101:32" pos:end="101:67">(<argument pos:start="101:33" pos:end="101:34"><expr pos:start="101:33" pos:end="101:34"><name pos:start="101:33" pos:end="101:34">st</name></expr></argument>, <argument pos:start="101:37" pos:end="101:38"><expr pos:start="101:37" pos:end="101:38"><literal type="number" pos:start="101:37" pos:end="101:38">64</literal></expr></argument>, <argument pos:start="101:41" pos:end="101:52"><expr pos:start="101:41" pos:end="101:52"><name pos:start="101:41" pos:end="101:52"><name pos:start="101:41" pos:end="101:43">thp</name><operator pos:start="101:44" pos:end="101:45">-&gt;</operator><name pos:start="101:46" pos:end="101:48">fps</name><operator pos:start="101:49" pos:end="101:49">.</operator><name pos:start="101:50" pos:end="101:52">den</name></name></expr></argument>, <argument pos:start="101:55" pos:end="101:66"><expr pos:start="101:55" pos:end="101:66"><name pos:start="101:55" pos:end="101:66"><name pos:start="101:55" pos:end="101:57">thp</name><operator pos:start="101:58" pos:end="101:59">-&gt;</operator><name pos:start="101:60" pos:end="101:62">fps</name><operator pos:start="101:63" pos:end="101:63">.</operator><name pos:start="101:64" pos:end="101:66">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="103:13" pos:end="103:55"><expr pos:start="103:13" pos:end="103:54"><name pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:14">st</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:21">codec</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:33">codec_type</name></name> <operator pos:start="103:35" pos:end="103:35">=</operator> <name pos:start="103:37" pos:end="103:54">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="105:13" pos:end="105:47"><expr pos:start="105:13" pos:end="105:46"><name pos:start="105:13" pos:end="105:31"><name pos:start="105:13" pos:end="105:14">st</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:21">codec</name><operator pos:start="105:22" pos:end="105:23">-&gt;</operator><name pos:start="105:24" pos:end="105:31">codec_id</name></name> <operator pos:start="105:33" pos:end="105:33">=</operator> <name pos:start="105:35" pos:end="105:46">CODEC_ID_THP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="107:37"><expr pos:start="107:13" pos:end="107:36"><name pos:start="107:13" pos:end="107:32"><name pos:start="107:13" pos:end="107:14">st</name><operator pos:start="107:15" pos:end="107:16">-&gt;</operator><name pos:start="107:17" pos:end="107:21">codec</name><operator pos:start="107:22" pos:end="107:23">-&gt;</operator><name pos:start="107:24" pos:end="107:32">codec_tag</name></name> <operator pos:start="107:34" pos:end="107:34">=</operator> <literal type="number" pos:start="107:36" pos:end="107:36">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="107:40" pos:end="107:54">/* no fourcc */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:45"><expr pos:start="109:13" pos:end="109:44"><name pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:14">st</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:21">codec</name><operator pos:start="109:22" pos:end="109:23">-&gt;</operator><name pos:start="109:24" pos:end="109:28">width</name></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <call pos:start="109:32" pos:end="109:44"><name pos:start="109:32" pos:end="109:40">avio_rb32</name><argument_list pos:start="109:41" pos:end="109:44">(<argument pos:start="109:42" pos:end="109:43"><expr pos:start="109:42" pos:end="109:43"><name pos:start="109:42" pos:end="109:43">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:46"><expr pos:start="111:13" pos:end="111:45"><name pos:start="111:13" pos:end="111:29"><name pos:start="111:13" pos:end="111:14">st</name><operator pos:start="111:15" pos:end="111:16">-&gt;</operator><name pos:start="111:17" pos:end="111:21">codec</name><operator pos:start="111:22" pos:end="111:23">-&gt;</operator><name pos:start="111:24" pos:end="111:29">height</name></name> <operator pos:start="111:31" pos:end="111:31">=</operator> <call pos:start="111:33" pos:end="111:45"><name pos:start="111:33" pos:end="111:41">avio_rb32</name><argument_list pos:start="111:42" pos:end="111:45">(<argument pos:start="111:43" pos:end="111:44"><expr pos:start="111:43" pos:end="111:44"><name pos:start="111:43" pos:end="111:44">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:54"><expr pos:start="113:13" pos:end="113:53"><name pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:14">st</name><operator pos:start="113:15" pos:end="113:16">-&gt;</operator><name pos:start="113:17" pos:end="113:21">codec</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:34">sample_rate</name></name> <operator pos:start="113:36" pos:end="113:36">=</operator> <call pos:start="113:38" pos:end="113:53"><name pos:start="113:38" pos:end="113:43">av_q2d</name><argument_list pos:start="113:44" pos:end="113:53">(<argument pos:start="113:45" pos:end="113:52"><expr pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:52"><name pos:start="113:45" pos:end="113:47">thp</name><operator pos:start="113:48" pos:end="113:49">-&gt;</operator><name pos:start="113:50" pos:end="113:52">fps</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:26"><expr pos:start="115:13" pos:end="115:25"><name pos:start="115:13" pos:end="115:20"><name pos:start="115:13" pos:end="115:15">thp</name><operator pos:start="115:16" pos:end="115:17">-&gt;</operator><name pos:start="115:18" pos:end="115:20">vst</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <name pos:start="115:24" pos:end="115:25">st</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:35"><name pos:start="117:13" pos:end="117:15">thp</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:35">video_stream_index</name></name> <operator pos:start="117:37" pos:end="117:37">=</operator> <name pos:start="117:39" pos:end="117:47"><name pos:start="117:39" pos:end="117:40">st</name><operator pos:start="117:41" pos:end="117:42">-&gt;</operator><name pos:start="117:43" pos:end="117:47">index</name></name></expr>;</expr_stmt>



            <if_stmt pos:start="121:13" pos:end="123:30"><if pos:start="121:13" pos:end="123:30">if <condition pos:start="121:16" pos:end="121:40">(<expr pos:start="121:17" pos:end="121:39"><name pos:start="121:17" pos:end="121:28"><name pos:start="121:17" pos:end="121:19">thp</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:28">version</name></name> <operator pos:start="121:30" pos:end="121:31">==</operator> <literal type="number" pos:start="121:33" pos:end="121:39">0x11000</literal></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:30"><block_content pos:start="123:17" pos:end="123:30">

                <expr_stmt pos:start="123:17" pos:end="123:30"><expr pos:start="123:17" pos:end="123:29"><call pos:start="123:17" pos:end="123:29"><name pos:start="123:17" pos:end="123:25">avio_rb32</name><argument_list pos:start="123:26" pos:end="123:29">(<argument pos:start="123:27" pos:end="123:28"><expr pos:start="123:27" pos:end="123:28"><name pos:start="123:27" pos:end="123:28">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="block" pos:start="123:32" pos:end="123:46">/* Unknown.  */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="125:11" pos:end="163:9">else if <condition pos:start="125:19" pos:end="125:43">(<expr pos:start="125:20" pos:end="125:42"><name pos:start="125:20" pos:end="125:37"><name pos:start="125:20" pos:end="125:22">thp</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:34">components</name><index pos:start="125:35" pos:end="125:37">[<expr pos:start="125:36" pos:end="125:36"><name pos:start="125:36" pos:end="125:36">i</name></expr>]</index></name> <operator pos:start="125:39" pos:end="125:40">==</operator> <literal type="number" pos:start="125:42" pos:end="125:42">1</literal></expr>)</condition> <block pos:start="125:45" pos:end="163:9">{<block_content pos:start="127:13" pos:end="161:31">

            <if_stmt pos:start="127:13" pos:end="129:22"><if pos:start="127:13" pos:end="129:22">if <condition pos:start="127:16" pos:end="127:36">(<expr pos:start="127:17" pos:end="127:35"><name pos:start="127:17" pos:end="127:30"><name pos:start="127:17" pos:end="127:19">thp</name><operator pos:start="127:20" pos:end="127:21">-&gt;</operator><name pos:start="127:22" pos:end="127:30">has_audio</name></name> <operator pos:start="127:32" pos:end="127:33">!=</operator> <literal type="number" pos:start="127:35" pos:end="127:35">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:22"><block_content pos:start="129:17" pos:end="129:22">

                <break pos:start="129:17" pos:end="129:22">break;</break></block_content></block></if></if_stmt>



            <comment type="block" pos:start="133:13" pos:end="133:35">/* Audio component.  */</comment>

            <expr_stmt pos:start="135:13" pos:end="135:46"><expr pos:start="135:13" pos:end="135:45"><name pos:start="135:13" pos:end="135:14">st</name> <operator pos:start="135:16" pos:end="135:16">=</operator> <call pos:start="135:18" pos:end="135:45"><name pos:start="135:18" pos:end="135:36">avformat_new_stream</name><argument_list pos:start="135:37" pos:end="135:45">(<argument pos:start="135:38" pos:end="135:38"><expr pos:start="135:38" pos:end="135:38"><name pos:start="135:38" pos:end="135:38">s</name></expr></argument>, <argument pos:start="135:41" pos:end="135:44"><expr pos:start="135:41" pos:end="135:44"><name pos:start="135:41" pos:end="135:44">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="137:13" pos:end="139:39"><if pos:start="137:13" pos:end="139:39">if <condition pos:start="137:16" pos:end="137:20">(<expr pos:start="137:17" pos:end="137:19"><operator pos:start="137:17" pos:end="137:17">!</operator><name pos:start="137:18" pos:end="137:19">st</name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:39"><block_content pos:start="139:17" pos:end="139:39">

                <return pos:start="139:17" pos:end="139:39">return <expr pos:start="139:24" pos:end="139:38"><call pos:start="139:24" pos:end="139:38"><name pos:start="139:24" pos:end="139:30">AVERROR</name><argument_list pos:start="139:31" pos:end="139:38">(<argument pos:start="139:32" pos:end="139:37"><expr pos:start="139:32" pos:end="139:37"><name pos:start="139:32" pos:end="139:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:55"><expr pos:start="143:13" pos:end="143:54"><name pos:start="143:13" pos:end="143:33"><name pos:start="143:13" pos:end="143:14">st</name><operator pos:start="143:15" pos:end="143:16">-&gt;</operator><name pos:start="143:17" pos:end="143:21">codec</name><operator pos:start="143:22" pos:end="143:23">-&gt;</operator><name pos:start="143:24" pos:end="143:33">codec_type</name></name> <operator pos:start="143:35" pos:end="143:35">=</operator> <name pos:start="143:37" pos:end="143:54">AVMEDIA_TYPE_AUDIO</name></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:53"><expr pos:start="145:13" pos:end="145:52"><name pos:start="145:13" pos:end="145:31"><name pos:start="145:13" pos:end="145:14">st</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:21">codec</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:31">codec_id</name></name> <operator pos:start="145:33" pos:end="145:33">=</operator> <name pos:start="145:35" pos:end="145:52">CODEC_ID_ADPCM_THP</name></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:37"><expr pos:start="147:13" pos:end="147:36"><name pos:start="147:13" pos:end="147:32"><name pos:start="147:13" pos:end="147:14">st</name><operator pos:start="147:15" pos:end="147:16">-&gt;</operator><name pos:start="147:17" pos:end="147:21">codec</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:32">codec_tag</name></name> <operator pos:start="147:34" pos:end="147:34">=</operator> <literal type="number" pos:start="147:36" pos:end="147:36">0</literal></expr>;</expr_stmt>  <comment type="block" pos:start="147:40" pos:end="147:54">/* no fourcc */</comment>

            <expr_stmt pos:start="149:13" pos:end="149:51"><expr pos:start="149:13" pos:end="149:50"><name pos:start="149:13" pos:end="149:31"><name pos:start="149:13" pos:end="149:14">st</name><operator pos:start="149:15" pos:end="149:16">-&gt;</operator><name pos:start="149:17" pos:end="149:21">codec</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:31">channels</name></name>    <operator pos:start="149:36" pos:end="149:36">=</operator> <call pos:start="149:38" pos:end="149:50"><name pos:start="149:38" pos:end="149:46">avio_rb32</name><argument_list pos:start="149:47" pos:end="149:50">(<argument pos:start="149:48" pos:end="149:49"><expr pos:start="149:48" pos:end="149:49"><name pos:start="149:48" pos:end="149:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="149:53" pos:end="149:71">/* numChannels.  */</comment>

            <expr_stmt pos:start="151:13" pos:end="151:51"><expr pos:start="151:13" pos:end="151:50"><name pos:start="151:13" pos:end="151:34"><name pos:start="151:13" pos:end="151:14">st</name><operator pos:start="151:15" pos:end="151:16">-&gt;</operator><name pos:start="151:17" pos:end="151:21">codec</name><operator pos:start="151:22" pos:end="151:23">-&gt;</operator><name pos:start="151:24" pos:end="151:34">sample_rate</name></name> <operator pos:start="151:36" pos:end="151:36">=</operator> <call pos:start="151:38" pos:end="151:50"><name pos:start="151:38" pos:end="151:46">avio_rb32</name><argument_list pos:start="151:47" pos:end="151:50">(<argument pos:start="151:48" pos:end="151:49"><expr pos:start="151:48" pos:end="151:49"><name pos:start="151:48" pos:end="151:49">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="151:53" pos:end="151:69">/* Frequency.  */</comment>



            <expr_stmt pos:start="155:13" pos:end="155:67"><expr pos:start="155:13" pos:end="155:66"><call pos:start="155:13" pos:end="155:66"><name pos:start="155:13" pos:end="155:31">avpriv_set_pts_info</name><argument_list pos:start="155:32" pos:end="155:66">(<argument pos:start="155:33" pos:end="155:34"><expr pos:start="155:33" pos:end="155:34"><name pos:start="155:33" pos:end="155:34">st</name></expr></argument>, <argument pos:start="155:37" pos:end="155:38"><expr pos:start="155:37" pos:end="155:38"><literal type="number" pos:start="155:37" pos:end="155:38">64</literal></expr></argument>, <argument pos:start="155:41" pos:end="155:41"><expr pos:start="155:41" pos:end="155:41"><literal type="number" pos:start="155:41" pos:end="155:41">1</literal></expr></argument>, <argument pos:start="155:44" pos:end="155:65"><expr pos:start="155:44" pos:end="155:65"><name pos:start="155:44" pos:end="155:65"><name pos:start="155:44" pos:end="155:45">st</name><operator pos:start="155:46" pos:end="155:47">-&gt;</operator><name pos:start="155:48" pos:end="155:52">codec</name><operator pos:start="155:53" pos:end="155:54">-&gt;</operator><name pos:start="155:55" pos:end="155:65">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:48"><expr pos:start="159:13" pos:end="159:47"><name pos:start="159:13" pos:end="159:35"><name pos:start="159:13" pos:end="159:15">thp</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:35">audio_stream_index</name></name> <operator pos:start="159:37" pos:end="159:37">=</operator> <name pos:start="159:39" pos:end="159:47"><name pos:start="159:39" pos:end="159:40">st</name><operator pos:start="159:41" pos:end="159:42">-&gt;</operator><name pos:start="159:43" pos:end="159:47">index</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:26"><name pos:start="161:13" pos:end="161:15">thp</name><operator pos:start="161:16" pos:end="161:17">-&gt;</operator><name pos:start="161:18" pos:end="161:26">has_audio</name></name> <operator pos:start="161:28" pos:end="161:28">=</operator> <literal type="number" pos:start="161:30" pos:end="161:30">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="169:5" pos:end="169:13">return <expr pos:start="169:12" pos:end="169:12"><literal type="number" pos:start="169:12" pos:end="169:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
