<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24005.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">teletext_decode_frame</name><parameter_list pos:start="1:33" pos:end="1:98">(<parameter pos:start="1:34" pos:end="1:54"><decl pos:start="1:34" pos:end="1:54"><type pos:start="1:34" pos:end="1:54"><name pos:start="1:34" pos:end="1:47">AVCodecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">avctx</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:66"><decl pos:start="1:57" pos:end="1:66"><type pos:start="1:57" pos:end="1:66"><name pos:start="1:57" pos:end="1:60">void</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:66">data</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:82"><decl pos:start="1:69" pos:end="1:82"><type pos:start="1:69" pos:end="1:82"><name pos:start="1:69" pos:end="1:71">int</name> <modifier pos:start="1:73" pos:end="1:73">*</modifier></type><name pos:start="1:74" pos:end="1:82">data_size</name></decl></parameter>, <parameter pos:start="1:85" pos:end="1:97"><decl pos:start="1:85" pos:end="1:97"><type pos:start="1:85" pos:end="1:97"><name pos:start="1:85" pos:end="1:92">AVPacket</name> <modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:97">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="175:1">{<block_content pos:start="5:5" pos:end="173:15">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">TeletextContext</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">ctx</name> <init pos:start="5:26" pos:end="5:43">= <expr pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:43"><name pos:start="5:28" pos:end="5:32">avctx</name><operator pos:start="5:33" pos:end="5:34">-&gt;</operator><name pos:start="5:35" pos:end="5:43">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:14">AVSubtitle</name>      <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">sub</name> <init pos:start="7:26" pos:end="7:31">= <expr pos:start="7:28" pos:end="7:31"><name pos:start="7:28" pos:end="7:31">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type>             <name pos:start="9:21" pos:end="9:23">ret</name> <init pos:start="9:25" pos:end="9:27">= <expr pos:start="9:27" pos:end="9:27"><literal type="number" pos:start="9:27" pos:end="9:27">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:18">(<expr pos:start="13:9" pos:end="13:17"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:17"><name pos:start="13:10" pos:end="13:12">ctx</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:17">vbi</name></name></expr>)</condition> <block pos:start="13:20" pos:end="29:5">{<block_content pos:start="15:9" pos:end="27:9">

        <if_stmt pos:start="15:9" pos:end="17:35"><if pos:start="15:9" pos:end="17:35">if <condition pos:start="15:12" pos:end="15:44">(<expr pos:start="15:13" pos:end="15:43"><operator pos:start="15:13" pos:end="15:13">!</operator><operator pos:start="15:14" pos:end="15:14">(</operator><name pos:start="15:15" pos:end="15:22"><name pos:start="15:15" pos:end="15:17">ctx</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:22">vbi</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <call pos:start="15:26" pos:end="15:42"><name pos:start="15:26" pos:end="15:40">vbi_decoder_new</name><argument_list pos:start="15:41" pos:end="15:42">()</argument_list></call><operator pos:start="15:43" pos:end="15:43">)</operator></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:35"><block_content pos:start="17:13" pos:end="17:35">

            <return pos:start="17:13" pos:end="17:35">return <expr pos:start="17:20" pos:end="17:34"><call pos:start="17:20" pos:end="17:34"><name pos:start="17:20" pos:end="17:26">AVERROR</name><argument_list pos:start="17:27" pos:end="17:34">(<argument pos:start="17:28" pos:end="17:33"><expr pos:start="17:28" pos:end="17:33"><name pos:start="17:28" pos:end="17:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="19:79">(<expr pos:start="19:13" pos:end="19:78"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:78"><name pos:start="19:14" pos:end="19:34">vbi_event_handler_add</name><argument_list pos:start="19:35" pos:end="19:78">(<argument pos:start="19:36" pos:end="19:43"><expr pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:43"><name pos:start="19:36" pos:end="19:38">ctx</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:43">vbi</name></name></expr></argument>, <argument pos:start="19:46" pos:end="19:63"><expr pos:start="19:46" pos:end="19:63"><name pos:start="19:46" pos:end="19:63">VBI_EVENT_TTX_PAGE</name></expr></argument>, <argument pos:start="19:66" pos:end="19:72"><expr pos:start="19:66" pos:end="19:72"><name pos:start="19:66" pos:end="19:72">handler</name></expr></argument>, <argument pos:start="19:75" pos:end="19:77"><expr pos:start="19:75" pos:end="19:77"><name pos:start="19:75" pos:end="19:77">ctx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:81" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:35">

            <expr_stmt pos:start="21:13" pos:end="21:41"><expr pos:start="21:13" pos:end="21:40"><call pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:30">vbi_decoder_delete</name><argument_list pos:start="21:31" pos:end="21:40">(<argument pos:start="21:32" pos:end="21:39"><expr pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:39"><name pos:start="21:32" pos:end="21:34">ctx</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:39">vbi</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:28"><expr pos:start="23:13" pos:end="23:27"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:15">ctx</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:20">vbi</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <name pos:start="23:24" pos:end="23:27">NULL</name></expr>;</expr_stmt>

            <return pos:start="25:13" pos:end="25:35">return <expr pos:start="25:20" pos:end="25:34"><call pos:start="25:20" pos:end="25:34"><name pos:start="25:20" pos:end="25:26">AVERROR</name><argument_list pos:start="25:27" pos:end="25:34">(<argument pos:start="25:28" pos:end="25:33"><expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="35:79"><if pos:start="33:5" pos:end="35:79">if <condition pos:start="33:8" pos:end="33:62">(<expr pos:start="33:9" pos:end="33:61"><name pos:start="33:9" pos:end="33:31"><name pos:start="33:9" pos:end="33:13">avctx</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:27">pkt_timebase</name><operator pos:start="33:28" pos:end="33:28">.</operator><name pos:start="33:29" pos:end="33:31">den</name></name> <operator pos:start="33:33" pos:end="33:34">&amp;&amp;</operator> <name pos:start="33:36" pos:end="33:43"><name pos:start="33:36" pos:end="33:38">pkt</name><operator pos:start="33:39" pos:end="33:40">-&gt;</operator><name pos:start="33:41" pos:end="33:43">pts</name></name> <operator pos:start="33:45" pos:end="33:46">!=</operator> <name pos:start="33:48" pos:end="33:61">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:79"><block_content pos:start="35:9" pos:end="35:79">

        <expr_stmt pos:start="35:9" pos:end="35:79"><expr pos:start="35:9" pos:end="35:78"><name pos:start="35:9" pos:end="35:16"><name pos:start="35:9" pos:end="35:11">ctx</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:16">pts</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:78"><name pos:start="35:20" pos:end="35:31">av_rescale_q</name><argument_list pos:start="35:32" pos:end="35:78">(<argument pos:start="35:33" pos:end="35:40"><expr pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:40"><name pos:start="35:33" pos:end="35:35">pkt</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">pts</name></name></expr></argument>, <argument pos:start="35:43" pos:end="35:61"><expr pos:start="35:43" pos:end="35:61"><name pos:start="35:43" pos:end="35:61"><name pos:start="35:43" pos:end="35:47">avctx</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:61">pkt_timebase</name></name></expr></argument>, <argument pos:start="35:64" pos:end="35:77"><expr pos:start="35:64" pos:end="35:77"><name pos:start="35:64" pos:end="35:77">AV_TIME_BASE_Q</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="97:5"><if pos:start="39:5" pos:end="97:5">if <condition pos:start="39:8" pos:end="39:18">(<expr pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:17"><name pos:start="39:9" pos:end="39:11">pkt</name><operator pos:start="39:12" pos:end="39:13">-&gt;</operator><name pos:start="39:14" pos:end="39:17">size</name></name></expr>)</condition> <block pos:start="39:20" pos:end="97:5">{<block_content pos:start="41:9" pos:end="95:31">

        <decl_stmt pos:start="41:9" pos:end="41:18"><decl pos:start="41:9" pos:end="41:17"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:17">lines</name></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:49"><decl pos:start="43:9" pos:end="43:48"><type pos:start="43:9" pos:end="43:17"><specifier pos:start="43:9" pos:end="43:13">const</specifier> <name pos:start="43:15" pos:end="43:17">int</name></type> <name pos:start="43:19" pos:end="43:31">full_pes_size</name> <init pos:start="43:33" pos:end="43:48">= <expr pos:start="43:35" pos:end="43:48"><name pos:start="43:35" pos:end="43:43"><name pos:start="43:35" pos:end="43:37">pkt</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:43">size</name></name> <operator pos:start="43:45" pos:end="43:45">+</operator> <literal type="number" pos:start="43:47" pos:end="43:48">45</literal></expr></init></decl>;</decl_stmt> <comment type="block" pos:start="43:51" pos:end="43:78">/* PES header is 45 bytes */</comment>



        <comment type="line" pos:start="47:9" pos:end="47:97">// We allow unreasonably big packets, even if the standard only allows a max size of 1472</comment>

        <if_stmt pos:start="49:9" pos:end="51:39"><if pos:start="49:9" pos:end="51:39">if <condition pos:start="49:12" pos:end="49:85">(<expr pos:start="49:13" pos:end="49:84"><name pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:25">full_pes_size</name> <argument_list type="generic" pos:start="49:27" pos:end="49:50">&lt; <argument pos:start="49:29" pos:end="49:48"><expr pos:start="49:29" pos:end="49:48"><literal type="number" pos:start="49:29" pos:end="49:31">184</literal> <operator pos:start="49:33" pos:end="49:34">||</operator> <name pos:start="49:36" pos:end="49:48">full_pes_size</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="49:52" pos:end="49:56">65504</literal> <operator pos:start="49:58" pos:end="49:59">||</operator> <name pos:start="49:61" pos:end="49:73">full_pes_size</name> <operator pos:start="49:75" pos:end="49:75">%</operator> <literal type="number" pos:start="49:77" pos:end="49:79">184</literal> <operator pos:start="49:81" pos:end="49:82">!=</operator> <literal type="number" pos:start="49:84" pos:end="49:84">0</literal></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:39"><block_content pos:start="51:13" pos:end="51:39">

            <return pos:start="51:13" pos:end="51:39">return <expr pos:start="51:20" pos:end="51:38"><name pos:start="51:20" pos:end="51:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="55:9" pos:end="55:37"><expr pos:start="55:9" pos:end="55:36"><name pos:start="55:9" pos:end="55:24"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:24">handler_ret</name></name> <operator pos:start="55:26" pos:end="55:26">=</operator> <name pos:start="55:28" pos:end="55:36"><name pos:start="55:28" pos:end="55:30">pkt</name><operator pos:start="55:31" pos:end="55:32">-&gt;</operator><name pos:start="55:33" pos:end="55:36">size</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="59:9" pos:end="91:9"><if pos:start="59:9" pos:end="91:9">if <condition pos:start="59:12" pos:end="59:52">(<expr pos:start="59:13" pos:end="59:51"><call pos:start="59:13" pos:end="59:51"><name pos:start="59:13" pos:end="59:39">data_identifier_is_teletext</name><argument_list pos:start="59:40" pos:end="59:51">(<argument pos:start="59:41" pos:end="59:50"><expr pos:start="59:41" pos:end="59:50"><operator pos:start="59:41" pos:end="59:41">*</operator><name pos:start="59:42" pos:end="59:50"><name pos:start="59:42" pos:end="59:44">pkt</name><operator pos:start="59:45" pos:end="59:46">-&gt;</operator><name pos:start="59:47" pos:end="59:50">data</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="59:54" pos:end="91:9">{<block_content pos:start="61:13" pos:end="89:13">

            <if_stmt pos:start="61:13" pos:end="63:29"><if pos:start="61:13" pos:end="63:29">if <condition pos:start="61:16" pos:end="61:84">(<expr pos:start="61:17" pos:end="61:83"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:22">lines</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <call pos:start="61:26" pos:end="61:78"><name pos:start="61:26" pos:end="61:43">slice_to_vbi_lines</name><argument_list pos:start="61:44" pos:end="61:78">(<argument pos:start="61:45" pos:end="61:47"><expr pos:start="61:45" pos:end="61:47"><name pos:start="61:45" pos:end="61:47">ctx</name></expr></argument>, <argument pos:start="61:50" pos:end="61:62"><expr pos:start="61:50" pos:end="61:62"><name pos:start="61:50" pos:end="61:58"><name pos:start="61:50" pos:end="61:52">pkt</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:58">data</name></name> <operator pos:start="61:60" pos:end="61:60">+</operator> <literal type="number" pos:start="61:62" pos:end="61:62">1</literal></expr></argument>, <argument pos:start="61:65" pos:end="61:77"><expr pos:start="61:65" pos:end="61:77"><name pos:start="61:65" pos:end="61:73"><name pos:start="61:65" pos:end="61:67">pkt</name><operator pos:start="61:68" pos:end="61:69">-&gt;</operator><name pos:start="61:70" pos:end="61:73">size</name></name> <operator pos:start="61:75" pos:end="61:75">-</operator> <literal type="number" pos:start="61:77" pos:end="61:77">1</literal></expr></argument>)</argument_list></call><operator pos:start="61:79" pos:end="61:79">)</operator> <operator pos:start="61:81" pos:end="61:81">&lt;</operator> <literal type="number" pos:start="61:83" pos:end="61:83">0</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:29"><block_content pos:start="63:17" pos:end="63:29">

                <return pos:start="63:17" pos:end="63:29">return <expr pos:start="63:24" pos:end="63:28"><name pos:start="63:24" pos:end="63:28">lines</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="67:69"><expr pos:start="65:13" pos:end="67:68"><call pos:start="65:13" pos:end="67:68"><name pos:start="65:13" pos:end="65:19">av_dlog</name><argument_list pos:start="65:20" pos:end="67:68">(<argument pos:start="65:21" pos:end="65:25"><expr pos:start="65:21" pos:end="65:25"><name pos:start="65:21" pos:end="65:25">avctx</name></expr></argument>, <argument pos:start="65:28" pos:end="65:72"><expr pos:start="65:28" pos:end="65:72"><literal type="string" pos:start="65:28" pos:end="65:72">"ctx=%p buf_size=%d lines=%u pkt_pts=%7.3f\n"</literal></expr></argument>,

                    <argument pos:start="67:21" pos:end="67:23"><expr pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">ctx</name></expr></argument>, <argument pos:start="67:26" pos:end="67:34"><expr pos:start="67:26" pos:end="67:34"><name pos:start="67:26" pos:end="67:34"><name pos:start="67:26" pos:end="67:28">pkt</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:34">size</name></name></expr></argument>, <argument pos:start="67:37" pos:end="67:41"><expr pos:start="67:37" pos:end="67:41"><name pos:start="67:37" pos:end="67:41">lines</name></expr></argument>, <argument pos:start="67:44" pos:end="67:67"><expr pos:start="67:44" pos:end="67:67"><operator pos:start="67:44" pos:end="67:44">(</operator><name pos:start="67:45" pos:end="67:50">double</name><operator pos:start="67:51" pos:end="67:51">)</operator><name pos:start="67:52" pos:end="67:59"><name pos:start="67:52" pos:end="67:54">pkt</name><operator pos:start="67:55" pos:end="67:56">-&gt;</operator><name pos:start="67:57" pos:end="67:59">pts</name></name><operator pos:start="67:60" pos:end="67:60">/</operator><literal type="number" pos:start="67:61" pos:end="67:67">90000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="69:13" pos:end="89:13"><if pos:start="69:13" pos:end="89:13">if <condition pos:start="69:16" pos:end="69:26">(<expr pos:start="69:17" pos:end="69:25"><name pos:start="69:17" pos:end="69:21">lines</name> <operator pos:start="69:23" pos:end="69:23">&gt;</operator> <literal type="number" pos:start="69:25" pos:end="69:25">0</literal></expr>)</condition> <block pos:start="69:28" pos:end="89:13">{<block_content pos:start="73:17" pos:end="87:46">

<cpp:ifdef pos:start="71:1" pos:end="71:12">#<cpp:directive pos:start="71:2" pos:end="71:6">ifdef</cpp:directive> <name pos:start="71:8" pos:end="71:12">DEBUG</name></cpp:ifdef>

                <decl_stmt pos:start="73:17" pos:end="73:22"><decl pos:start="73:17" pos:end="73:21"><type pos:start="73:17" pos:end="73:19"><name pos:start="73:17" pos:end="73:19">int</name></type> <name pos:start="73:21" pos:end="73:21">i</name></decl>;</decl_stmt>

                <expr_stmt pos:start="75:17" pos:end="75:61"><expr pos:start="75:17" pos:end="75:60"><call pos:start="75:17" pos:end="75:60"><name pos:start="75:17" pos:end="75:22">av_log</name><argument_list pos:start="75:23" pos:end="75:60">(<argument pos:start="75:24" pos:end="75:28"><expr pos:start="75:24" pos:end="75:28"><name pos:start="75:24" pos:end="75:28">avctx</name></expr></argument>, <argument pos:start="75:31" pos:end="75:42"><expr pos:start="75:31" pos:end="75:42"><name pos:start="75:31" pos:end="75:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="75:45" pos:end="75:59"><expr pos:start="75:45" pos:end="75:59"><literal type="string" pos:start="75:45" pos:end="75:59">"line numbers:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <for pos:start="77:17" pos:end="79:76">for<control pos:start="77:20" pos:end="77:42">(<init pos:start="77:21" pos:end="77:26"><expr pos:start="77:21" pos:end="77:25"><name pos:start="77:21" pos:end="77:21">i</name> <operator pos:start="77:23" pos:end="77:23">=</operator> <literal type="number" pos:start="77:25" pos:end="77:25">0</literal></expr>;</init> <condition pos:start="77:28" pos:end="77:37"><expr pos:start="77:28" pos:end="77:36"><name pos:start="77:28" pos:end="77:28">i</name> <operator pos:start="77:30" pos:end="77:30">&lt;</operator> <name pos:start="77:32" pos:end="77:36">lines</name></expr>;</condition> <incr pos:start="77:39" pos:end="77:41"><expr pos:start="77:39" pos:end="77:41"><name pos:start="77:39" pos:end="77:39">i</name><operator pos:start="77:40" pos:end="77:41">++</operator></expr></incr>)</control><block type="pseudo" pos:start="79:21" pos:end="79:76"><block_content pos:start="79:21" pos:end="79:76">

                    <expr_stmt pos:start="79:21" pos:end="79:76"><expr pos:start="79:21" pos:end="79:75"><call pos:start="79:21" pos:end="79:75"><name pos:start="79:21" pos:end="79:26">av_log</name><argument_list pos:start="79:27" pos:end="79:75">(<argument pos:start="79:28" pos:end="79:32"><expr pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:32">avctx</name></expr></argument>, <argument pos:start="79:35" pos:end="79:46"><expr pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:46">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:49" pos:end="79:53"><expr pos:start="79:49" pos:end="79:53"><literal type="string" pos:start="79:49" pos:end="79:53">" %d"</literal></expr></argument>, <argument pos:start="79:56" pos:end="79:74"><expr pos:start="79:56" pos:end="79:74"><name pos:start="79:56" pos:end="79:69"><name pos:start="79:56" pos:end="79:58">ctx</name><operator pos:start="79:59" pos:end="79:60">-&gt;</operator><name pos:start="79:61" pos:end="79:66">sliced</name><index pos:start="79:67" pos:end="79:69">[<expr pos:start="79:68" pos:end="79:68"><name pos:start="79:68" pos:end="79:68">i</name></expr>]</index></name><operator pos:start="79:70" pos:end="79:70">.</operator><name pos:start="79:71" pos:end="79:74">line</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                <expr_stmt pos:start="81:17" pos:end="84:0"><expr pos:start="81:17" pos:end="81:49"><call pos:start="81:17" pos:end="81:49"><name pos:start="81:17" pos:end="81:22">av_log</name><argument_list pos:start="81:23" pos:end="81:49">(<argument pos:start="81:24" pos:end="81:28"><expr pos:start="81:24" pos:end="81:28"><name pos:start="81:24" pos:end="81:28">avctx</name></expr></argument>, <argument pos:start="81:31" pos:end="81:42"><expr pos:start="81:31" pos:end="81:42"><name pos:start="81:31" pos:end="81:42">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="81:45" pos:end="81:48"><expr pos:start="81:45" pos:end="81:48"><literal type="string" pos:start="81:45" pos:end="81:48">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="85:17" pos:end="85:62"><expr pos:start="85:17" pos:end="85:61"><call pos:start="85:17" pos:end="85:61"><name pos:start="85:17" pos:end="85:26">vbi_decode</name><argument_list pos:start="85:27" pos:end="85:61">(<argument pos:start="85:28" pos:end="85:35"><expr pos:start="85:28" pos:end="85:35"><name pos:start="85:28" pos:end="85:35"><name pos:start="85:28" pos:end="85:30">ctx</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:35">vbi</name></name></expr></argument>, <argument pos:start="85:38" pos:end="85:48"><expr pos:start="85:38" pos:end="85:48"><name pos:start="85:38" pos:end="85:48"><name pos:start="85:38" pos:end="85:40">ctx</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:48">sliced</name></name></expr></argument>, <argument pos:start="85:51" pos:end="85:55"><expr pos:start="85:51" pos:end="85:55"><name pos:start="85:51" pos:end="85:55">lines</name></expr></argument>, <argument pos:start="85:58" pos:end="85:60"><expr pos:start="85:58" pos:end="85:60"><literal type="number" pos:start="85:58" pos:end="85:60">0.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:46"><expr pos:start="87:17" pos:end="87:45"><name pos:start="87:17" pos:end="87:36"><name pos:start="87:17" pos:end="87:19">ctx</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:36">lines_processed</name></name> <operator pos:start="87:38" pos:end="87:39">+=</operator> <name pos:start="87:41" pos:end="87:45">lines</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:34"><expr pos:start="93:9" pos:end="93:33"><name pos:start="93:9" pos:end="93:16"><name pos:start="93:9" pos:end="93:11">ctx</name><operator pos:start="93:12" pos:end="93:13">-&gt;</operator><name pos:start="93:14" pos:end="93:16">pts</name></name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:33">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:31"><expr pos:start="95:9" pos:end="95:30"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <name pos:start="95:15" pos:end="95:30"><name pos:start="95:15" pos:end="95:17">ctx</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:30">handler_ret</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="103:19"><if pos:start="101:5" pos:end="103:19">if <condition pos:start="101:8" pos:end="101:16">(<expr pos:start="101:9" pos:end="101:15"><name pos:start="101:9" pos:end="101:11">ret</name> <operator pos:start="101:13" pos:end="101:13">&lt;</operator> <literal type="number" pos:start="101:15" pos:end="101:15">0</literal></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:19"><block_content pos:start="103:9" pos:end="103:19">

        <return pos:start="103:9" pos:end="103:19">return <expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="107:5" pos:end="107:35">// is there a subtitle to pass?</comment>

    <if_stmt pos:start="109:5" pos:end="169:23"><if pos:start="109:5" pos:end="167:5">if <condition pos:start="109:8" pos:end="109:22">(<expr pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:11">ctx</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:21">nb_pages</name></name></expr>)</condition> <block pos:start="109:24" pos:end="167:5">{<block_content pos:start="111:9" pos:end="165:27">

        <decl_stmt pos:start="111:9" pos:end="111:14"><decl pos:start="111:9" pos:end="111:13"><type pos:start="111:9" pos:end="111:11"><name pos:start="111:9" pos:end="111:11">int</name></type> <name pos:start="111:13" pos:end="111:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:19"><name pos:start="113:9" pos:end="113:11">sub</name><operator pos:start="113:12" pos:end="113:13">-&gt;</operator><name pos:start="113:14" pos:end="113:19">format</name></name> <operator pos:start="113:21" pos:end="113:21">=</operator> <name pos:start="113:23" pos:end="113:36"><name pos:start="113:23" pos:end="113:25">ctx</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:36">format_id</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:36"><expr pos:start="115:9" pos:end="115:35"><name pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:11">sub</name><operator pos:start="115:12" pos:end="115:13">-&gt;</operator><name pos:start="115:14" pos:end="115:31">start_display_time</name></name> <operator pos:start="115:33" pos:end="115:33">=</operator> <literal type="number" pos:start="115:35" pos:end="115:35">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:50"><expr pos:start="117:9" pos:end="117:49"><name pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:11">sub</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:29">end_display_time</name></name> <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:49"><name pos:start="117:33" pos:end="117:35">ctx</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:49">sub_duration</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:22"><name pos:start="119:9" pos:end="119:11">sub</name><operator pos:start="119:12" pos:end="119:13">-&gt;</operator><name pos:start="119:14" pos:end="119:22">num_rects</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <literal type="number" pos:start="119:26" pos:end="119:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:35"><expr pos:start="121:9" pos:end="121:34"><name pos:start="121:9" pos:end="121:16"><name pos:start="121:9" pos:end="121:11">sub</name><operator pos:start="121:12" pos:end="121:13">-&gt;</operator><name pos:start="121:14" pos:end="121:16">pts</name></name> <operator pos:start="121:18" pos:end="121:18">=</operator> <name pos:start="121:20" pos:end="121:34"><name pos:start="121:20" pos:end="121:22">ctx</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:29">pages</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:34">pts</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="125:9" pos:end="147:9"><if pos:start="125:9" pos:end="141:9">if <condition pos:start="125:12" pos:end="125:56">(<expr pos:start="125:13" pos:end="125:55"><name pos:start="125:13" pos:end="125:38"><name pos:start="125:13" pos:end="125:15">ctx</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:22">pages</name><operator pos:start="125:23" pos:end="125:24">-&gt;</operator><name pos:start="125:25" pos:end="125:32">sub_rect</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:38">type</name></name> <operator pos:start="125:40" pos:end="125:41">!=</operator> <name pos:start="125:43" pos:end="125:55">SUBTITLE_NONE</name></expr>)</condition> <block pos:start="125:58" pos:end="141:9">{<block_content pos:start="127:13" pos:end="139:13">

            <expr_stmt pos:start="127:13" pos:end="127:56"><expr pos:start="127:13" pos:end="127:55"><name pos:start="127:13" pos:end="127:22"><name pos:start="127:13" pos:end="127:15">sub</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:22">rects</name></name> <operator pos:start="127:24" pos:end="127:24">=</operator> <call pos:start="127:26" pos:end="127:55"><name pos:start="127:26" pos:end="127:34">av_malloc</name><argument_list pos:start="127:35" pos:end="127:55">(<argument pos:start="127:36" pos:end="127:54"><expr pos:start="127:36" pos:end="127:54"><sizeof pos:start="127:36" pos:end="127:54">sizeof<argument_list pos:start="127:42" pos:end="127:54">(<argument pos:start="127:43" pos:end="127:53"><expr pos:start="127:43" pos:end="127:53"><operator pos:start="127:43" pos:end="127:43">*</operator><name pos:start="127:44" pos:end="127:53"><name pos:start="127:44" pos:end="127:46">sub</name><operator pos:start="127:47" pos:end="127:48">-&gt;</operator><name pos:start="127:49" pos:end="127:53">rects</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="139:13"><if pos:start="129:13" pos:end="135:13">if <condition pos:start="129:16" pos:end="129:27">(<expr pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:26"><name pos:start="129:17" pos:end="129:19">sub</name><operator pos:start="129:20" pos:end="129:21">-&gt;</operator><name pos:start="129:22" pos:end="129:26">rects</name></name></expr>)</condition> <block pos:start="129:29" pos:end="135:13">{<block_content pos:start="131:17" pos:end="133:53">

                <expr_stmt pos:start="131:17" pos:end="131:35"><expr pos:start="131:17" pos:end="131:34"><name pos:start="131:17" pos:end="131:30"><name pos:start="131:17" pos:end="131:19">sub</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:30">num_rects</name></name> <operator pos:start="131:32" pos:end="131:32">=</operator> <literal type="number" pos:start="131:34" pos:end="131:34">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="133:17" pos:end="133:53"><expr pos:start="133:17" pos:end="133:52"><name pos:start="133:17" pos:end="133:29"><name pos:start="133:17" pos:end="133:19">sub</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:26">rects</name><index pos:start="133:27" pos:end="133:29">[<expr pos:start="133:28" pos:end="133:28"><literal type="number" pos:start="133:28" pos:end="133:28">0</literal></expr>]</index></name> <operator pos:start="133:31" pos:end="133:31">=</operator> <name pos:start="133:33" pos:end="133:52"><name pos:start="133:33" pos:end="133:35">ctx</name><operator pos:start="133:36" pos:end="133:37">-&gt;</operator><name pos:start="133:38" pos:end="133:42">pages</name><operator pos:start="133:43" pos:end="133:44">-&gt;</operator><name pos:start="133:45" pos:end="133:52">sub_rect</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="135:15" pos:end="139:13">else <block pos:start="135:20" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:38">

                <expr_stmt pos:start="137:17" pos:end="137:38"><expr pos:start="137:17" pos:end="137:37"><name pos:start="137:17" pos:end="137:19">ret</name> <operator pos:start="137:21" pos:end="137:21">=</operator> <call pos:start="137:23" pos:end="137:37"><name pos:start="137:23" pos:end="137:29">AVERROR</name><argument_list pos:start="137:30" pos:end="137:37">(<argument pos:start="137:31" pos:end="137:36"><expr pos:start="137:31" pos:end="137:36"><name pos:start="137:31" pos:end="137:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="141:11" pos:end="147:9">else <block pos:start="141:16" pos:end="147:9">{<block_content pos:start="143:13" pos:end="145:30">

            <expr_stmt pos:start="143:13" pos:end="143:63"><expr pos:start="143:13" pos:end="143:62"><call pos:start="143:13" pos:end="143:62"><name pos:start="143:13" pos:end="143:18">av_log</name><argument_list pos:start="143:19" pos:end="143:62">(<argument pos:start="143:20" pos:end="143:24"><expr pos:start="143:20" pos:end="143:24"><name pos:start="143:20" pos:end="143:24">avctx</name></expr></argument>, <argument pos:start="143:27" pos:end="143:38"><expr pos:start="143:27" pos:end="143:38"><name pos:start="143:27" pos:end="143:38">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="143:41" pos:end="143:61"><expr pos:start="143:41" pos:end="143:61"><literal type="string" pos:start="143:41" pos:end="143:61">"sending empty sub\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="145:13" pos:end="145:30"><expr pos:start="145:13" pos:end="145:29"><name pos:start="145:13" pos:end="145:22"><name pos:start="145:13" pos:end="145:15">sub</name><operator pos:start="145:16" pos:end="145:17">-&gt;</operator><name pos:start="145:18" pos:end="145:22">rects</name></name> <operator pos:start="145:24" pos:end="145:24">=</operator> <name pos:start="145:26" pos:end="145:29">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="149:9" pos:end="151:54"><if pos:start="149:9" pos:end="151:54">if <condition pos:start="149:12" pos:end="149:24">(<expr pos:start="149:13" pos:end="149:23"><operator pos:start="149:13" pos:end="149:13">!</operator><name pos:start="149:14" pos:end="149:23"><name pos:start="149:14" pos:end="149:16">sub</name><operator pos:start="149:17" pos:end="149:18">-&gt;</operator><name pos:start="149:19" pos:end="149:23">rects</name></name></expr>)</condition><block type="pseudo" pos:start="151:13" pos:end="151:54"><block_content pos:start="151:13" pos:end="151:54"> <comment type="line" pos:start="149:26" pos:end="149:46">// no rect was passed</comment>

            <expr_stmt pos:start="151:13" pos:end="151:54"><expr pos:start="151:13" pos:end="151:53"><call pos:start="151:13" pos:end="151:53"><name pos:start="151:13" pos:end="151:30">subtitle_rect_free</name><argument_list pos:start="151:31" pos:end="151:53">(<argument pos:start="151:32" pos:end="151:52"><expr pos:start="151:32" pos:end="151:52"><operator pos:start="151:32" pos:end="151:32">&amp;</operator><name pos:start="151:33" pos:end="151:52"><name pos:start="151:33" pos:end="151:35">ctx</name><operator pos:start="151:36" pos:end="151:37">-&gt;</operator><name pos:start="151:38" pos:end="151:42">pages</name><operator pos:start="151:43" pos:end="151:44">-&gt;</operator><name pos:start="151:45" pos:end="151:52">sub_rect</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <for pos:start="155:9" pos:end="157:46">for <control pos:start="155:13" pos:end="155:47">(<init pos:start="155:14" pos:end="155:19"><expr pos:start="155:14" pos:end="155:18"><name pos:start="155:14" pos:end="155:14">i</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <literal type="number" pos:start="155:18" pos:end="155:18">0</literal></expr>;</init> <condition pos:start="155:21" pos:end="155:42"><expr pos:start="155:21" pos:end="155:41"><name pos:start="155:21" pos:end="155:21">i</name> <operator pos:start="155:23" pos:end="155:23">&lt;</operator> <name pos:start="155:25" pos:end="155:37"><name pos:start="155:25" pos:end="155:27">ctx</name><operator pos:start="155:28" pos:end="155:29">-&gt;</operator><name pos:start="155:30" pos:end="155:37">nb_pages</name></name> <operator pos:start="155:39" pos:end="155:39">-</operator> <literal type="number" pos:start="155:41" pos:end="155:41">1</literal></expr>;</condition> <incr pos:start="155:44" pos:end="155:46"><expr pos:start="155:44" pos:end="155:46"><name pos:start="155:44" pos:end="155:44">i</name><operator pos:start="155:45" pos:end="155:46">++</operator></expr></incr>)</control><block type="pseudo" pos:start="157:13" pos:end="157:46"><block_content pos:start="157:13" pos:end="157:46">

            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:25"><name pos:start="157:13" pos:end="157:15">ctx</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:22">pages</name><index pos:start="157:23" pos:end="157:25">[<expr pos:start="157:24" pos:end="157:24"><name pos:start="157:24" pos:end="157:24">i</name></expr>]</index></name> <operator pos:start="157:27" pos:end="157:27">=</operator> <name pos:start="157:29" pos:end="157:45"><name pos:start="157:29" pos:end="157:31">ctx</name><operator pos:start="157:32" pos:end="157:33">-&gt;</operator><name pos:start="157:34" pos:end="157:38">pages</name><index pos:start="157:39" pos:end="157:45">[<expr pos:start="157:40" pos:end="157:44"><name pos:start="157:40" pos:end="157:40">i</name> <operator pos:start="157:42" pos:end="157:42">+</operator> <literal type="number" pos:start="157:44" pos:end="157:44">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="159:9" pos:end="159:24"><expr pos:start="159:9" pos:end="159:23"><name pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:11">ctx</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:21">nb_pages</name></name><operator pos:start="159:22" pos:end="159:23">--</operator></expr>;</expr_stmt>



        <if_stmt pos:start="163:9" pos:end="165:27"><if pos:start="163:9" pos:end="165:27">if <condition pos:start="163:12" pos:end="163:21">(<expr pos:start="163:13" pos:end="163:20"><name pos:start="163:13" pos:end="163:15">ret</name> <operator pos:start="163:17" pos:end="163:18">&gt;=</operator> <literal type="number" pos:start="163:20" pos:end="163:20">0</literal></expr>)</condition><block type="pseudo" pos:start="165:13" pos:end="165:27"><block_content pos:start="165:13" pos:end="165:27">

            <expr_stmt pos:start="165:13" pos:end="165:27"><expr pos:start="165:13" pos:end="165:26"><operator pos:start="165:13" pos:end="165:13">*</operator><name pos:start="165:14" pos:end="165:22">data_size</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <literal type="number" pos:start="165:26" pos:end="165:26">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="167:7" pos:end="169:23">else<block type="pseudo" pos:start="169:9" pos:end="169:23"><block_content pos:start="169:9" pos:end="169:23">

        <expr_stmt pos:start="169:9" pos:end="169:23"><expr pos:start="169:9" pos:end="169:22"><operator pos:start="169:9" pos:end="169:9">*</operator><name pos:start="169:10" pos:end="169:18">data_size</name> <operator pos:start="169:20" pos:end="169:20">=</operator> <literal type="number" pos:start="169:22" pos:end="169:22">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <return pos:start="173:5" pos:end="173:15">return <expr pos:start="173:12" pos:end="173:14"><name pos:start="173:12" pos:end="173:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
