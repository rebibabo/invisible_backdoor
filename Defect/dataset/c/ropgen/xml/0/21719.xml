<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21719.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">vnc_zlib_send_framebuffer_update</name><parameter_list pos:start="1:37" pos:end="1:78">(<parameter pos:start="1:38" pos:end="1:49"><decl pos:start="1:38" pos:end="1:49"><type pos:start="1:38" pos:end="1:49"><name pos:start="1:38" pos:end="1:45">VncState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:49">vs</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:56"><decl pos:start="1:52" pos:end="1:56"><type pos:start="1:52" pos:end="1:56"><name pos:start="1:52" pos:end="1:54">int</name></type> <name pos:start="1:56" pos:end="1:56">x</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:63"><decl pos:start="1:59" pos:end="1:63"><type pos:start="1:59" pos:end="1:63"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:63">y</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:70"><decl pos:start="1:66" pos:end="1:70"><type pos:start="1:66" pos:end="1:70"><name pos:start="1:66" pos:end="1:68">int</name></type> <name pos:start="1:70" pos:end="1:70">w</name></decl></parameter>, <parameter pos:start="1:73" pos:end="1:77"><decl pos:start="1:73" pos:end="1:77"><type pos:start="1:73" pos:end="1:77"><name pos:start="1:73" pos:end="1:75">int</name></type> <name pos:start="1:77" pos:end="1:77">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:46"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">old_offset</name></decl>, <decl pos:start="5:21" pos:end="5:30"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:30">new_offset</name></decl>, <decl pos:start="5:33" pos:end="5:45"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:33" pos:end="5:45">bytes_written</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:62"><expr pos:start="9:5" pos:end="9:61"><call pos:start="9:5" pos:end="9:61"><name pos:start="9:5" pos:end="9:26">vnc_framebuffer_update</name><argument_list pos:start="9:27" pos:end="9:61">(<argument pos:start="9:28" pos:end="9:29"><expr pos:start="9:28" pos:end="9:29"><name pos:start="9:28" pos:end="9:29">vs</name></expr></argument>, <argument pos:start="9:32" pos:end="9:32"><expr pos:start="9:32" pos:end="9:32"><name pos:start="9:32" pos:end="9:32">x</name></expr></argument>, <argument pos:start="9:35" pos:end="9:35"><expr pos:start="9:35" pos:end="9:35"><name pos:start="9:35" pos:end="9:35">y</name></expr></argument>, <argument pos:start="9:38" pos:end="9:38"><expr pos:start="9:38" pos:end="9:38"><name pos:start="9:38" pos:end="9:38">w</name></expr></argument>, <argument pos:start="9:41" pos:end="9:41"><expr pos:start="9:41" pos:end="9:41"><name pos:start="9:41" pos:end="9:41">h</name></expr></argument>, <argument pos:start="9:44" pos:end="9:60"><expr pos:start="9:44" pos:end="9:60"><name pos:start="9:44" pos:end="9:60">VNC_ENCODING_ZLIB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="13:5" pos:end="13:50">// remember where we put in the follow-up size</comment>

    <expr_stmt pos:start="15:5" pos:end="15:35"><expr pos:start="15:5" pos:end="15:34"><name pos:start="15:5" pos:end="15:14">old_offset</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <name pos:start="15:18" pos:end="15:34"><name pos:start="15:18" pos:end="15:19">vs</name><operator pos:start="15:20" pos:end="15:21">-&gt;</operator><name pos:start="15:22" pos:end="15:27">output</name><operator pos:start="15:28" pos:end="15:28">.</operator><name pos:start="15:29" pos:end="15:34">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:25"><expr pos:start="17:5" pos:end="17:24"><call pos:start="17:5" pos:end="17:24"><name pos:start="17:5" pos:end="17:17">vnc_write_s32</name><argument_list pos:start="17:18" pos:end="17:24">(<argument pos:start="17:19" pos:end="17:20"><expr pos:start="17:19" pos:end="17:20"><name pos:start="17:19" pos:end="17:20">vs</name></expr></argument>, <argument pos:start="17:23" pos:end="17:23"><expr pos:start="17:23" pos:end="17:23"><literal type="number" pos:start="17:23" pos:end="17:23">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="21:5" pos:end="21:26">// compress the stream</comment>

    <expr_stmt pos:start="23:5" pos:end="23:23"><expr pos:start="23:5" pos:end="23:22"><call pos:start="23:5" pos:end="23:22"><name pos:start="23:5" pos:end="23:18">vnc_zlib_start</name><argument_list pos:start="23:19" pos:end="23:22">(<argument pos:start="23:20" pos:end="23:21"><expr pos:start="23:20" pos:end="23:21"><name pos:start="23:20" pos:end="23:21">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:52"><expr pos:start="25:5" pos:end="25:51"><call pos:start="25:5" pos:end="25:51"><name pos:start="25:5" pos:end="25:35">vnc_raw_send_framebuffer_update</name><argument_list pos:start="25:36" pos:end="25:51">(<argument pos:start="25:37" pos:end="25:38"><expr pos:start="25:37" pos:end="25:38"><name pos:start="25:37" pos:end="25:38">vs</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><name pos:start="25:41" pos:end="25:41">x</name></expr></argument>, <argument pos:start="25:44" pos:end="25:44"><expr pos:start="25:44" pos:end="25:44"><name pos:start="25:44" pos:end="25:44">y</name></expr></argument>, <argument pos:start="25:47" pos:end="25:47"><expr pos:start="25:47" pos:end="25:47"><name pos:start="25:47" pos:end="25:47">w</name></expr></argument>, <argument pos:start="25:50" pos:end="25:50"><expr pos:start="25:50" pos:end="25:50"><name pos:start="25:50" pos:end="25:50">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:17">bytes_written</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:37"><name pos:start="27:21" pos:end="27:33">vnc_zlib_stop</name><argument_list pos:start="27:34" pos:end="27:37">(<argument pos:start="27:35" pos:end="27:36"><expr pos:start="27:35" pos:end="27:36"><name pos:start="27:35" pos:end="27:36">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="33:17"><if pos:start="31:5" pos:end="33:17">if <condition pos:start="31:8" pos:end="31:28">(<expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:21">bytes_written</name> <operator pos:start="31:23" pos:end="31:24">==</operator> <operator pos:start="31:26" pos:end="31:26">-</operator><literal type="number" pos:start="31:27" pos:end="31:27">1</literal></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:17"><block_content pos:start="33:9" pos:end="33:17">

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="line" pos:start="37:5" pos:end="37:23">// hack in the size</comment>

    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:14">new_offset</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:34"><name pos:start="39:18" pos:end="39:19">vs</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:27">output</name><operator pos:start="39:28" pos:end="39:28">.</operator><name pos:start="39:29" pos:end="39:34">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:21"><name pos:start="41:5" pos:end="41:6">vs</name><operator pos:start="41:7" pos:end="41:8">-&gt;</operator><name pos:start="41:9" pos:end="41:14">output</name><operator pos:start="41:15" pos:end="41:15">.</operator><name pos:start="41:16" pos:end="41:21">offset</name></name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:34">old_offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:37"><expr pos:start="43:5" pos:end="43:36"><call pos:start="43:5" pos:end="43:36"><name pos:start="43:5" pos:end="43:17">vnc_write_u32</name><argument_list pos:start="43:18" pos:end="43:36">(<argument pos:start="43:19" pos:end="43:20"><expr pos:start="43:19" pos:end="43:20"><name pos:start="43:19" pos:end="43:20">vs</name></expr></argument>, <argument pos:start="43:23" pos:end="43:35"><expr pos:start="43:23" pos:end="43:35"><name pos:start="43:23" pos:end="43:35">bytes_written</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:35"><expr pos:start="45:5" pos:end="45:34"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:6">vs</name><operator pos:start="45:7" pos:end="45:8">-&gt;</operator><name pos:start="45:9" pos:end="45:14">output</name><operator pos:start="45:15" pos:end="45:15">.</operator><name pos:start="45:16" pos:end="45:21">offset</name></name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:34">new_offset</name></expr>;</expr_stmt>



    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
