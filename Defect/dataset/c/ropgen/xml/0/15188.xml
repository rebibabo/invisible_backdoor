<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15188.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">sunmouse_event</name><parameter_list pos:start="1:27" pos:end="3:73">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:37"><decl pos:start="3:32" pos:end="3:37"><type pos:start="3:32" pos:end="3:37"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:37">dx</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:45"><decl pos:start="3:40" pos:end="3:45"><type pos:start="3:40" pos:end="3:45"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:45">dy</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:53"><decl pos:start="3:48" pos:end="3:53"><type pos:start="3:48" pos:end="3:53"><name pos:start="3:48" pos:end="3:50">int</name></type> <name pos:start="3:52" pos:end="3:53">dz</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:72"><decl pos:start="3:56" pos:end="3:72"><type pos:start="3:56" pos:end="3:72"><name pos:start="3:56" pos:end="3:58">int</name></type> <name pos:start="3:60" pos:end="3:72">buttons_state</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:20">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">ChannelState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">ch</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:68"><expr pos:start="13:5" pos:end="13:67"><call pos:start="13:5" pos:end="13:67"><name pos:start="13:5" pos:end="13:14">MS_DPRINTF</name><argument_list pos:start="13:15" pos:end="13:67">(<argument pos:start="13:16" pos:end="13:43"><expr pos:start="13:16" pos:end="13:43"><literal type="string" pos:start="13:16" pos:end="13:43">"dx=%d dy=%d buttons=%01x\n"</literal></expr></argument>, <argument pos:start="13:46" pos:end="13:47"><expr pos:start="13:46" pos:end="13:47"><name pos:start="13:46" pos:end="13:47">dx</name></expr></argument>, <argument pos:start="13:50" pos:end="13:51"><expr pos:start="13:50" pos:end="13:51"><name pos:start="13:50" pos:end="13:51">dy</name></expr></argument>, <argument pos:start="13:54" pos:end="13:66"><expr pos:start="13:54" pos:end="13:66"><name pos:start="13:54" pos:end="13:66">buttons_state</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:20"><expr pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:6">ch</name> <operator pos:start="17:8" pos:end="17:8">=</operator> <literal type="number" pos:start="17:10" pos:end="17:13">0x80</literal> <operator pos:start="17:15" pos:end="17:15">|</operator> <literal type="number" pos:start="17:17" pos:end="17:19">0x7</literal></expr>;</expr_stmt> <comment type="block" pos:start="17:22" pos:end="17:66">/* protocol start byte, no buttons pressed */</comment>



    <if_stmt pos:start="21:5" pos:end="23:18"><if pos:start="21:5" pos:end="23:18">if <condition pos:start="21:8" pos:end="21:44">(<expr pos:start="21:9" pos:end="21:43"><name pos:start="21:9" pos:end="21:21">buttons_state</name> <operator pos:start="21:23" pos:end="21:23">&amp;</operator> <name pos:start="21:25" pos:end="21:43">MOUSE_EVENT_LBUTTON</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:18"><block_content pos:start="23:9" pos:end="23:18">

        <expr_stmt pos:start="23:9" pos:end="23:18"><expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:10">ch</name> <operator pos:start="23:12" pos:end="23:13">^=</operator> <literal type="number" pos:start="23:15" pos:end="23:17">0x4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="27:18"><if pos:start="25:5" pos:end="27:18">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><name pos:start="25:9" pos:end="25:21">buttons_state</name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <name pos:start="25:25" pos:end="25:43">MOUSE_EVENT_MBUTTON</name></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:18"><block_content pos:start="27:9" pos:end="27:18">

        <expr_stmt pos:start="27:9" pos:end="27:18"><expr pos:start="27:9" pos:end="27:17"><name pos:start="27:9" pos:end="27:10">ch</name> <operator pos:start="27:12" pos:end="27:13">^=</operator> <literal type="number" pos:start="27:15" pos:end="27:17">0x2</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:44">(<expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:21">buttons_state</name> <operator pos:start="29:23" pos:end="29:23">&amp;</operator> <name pos:start="29:25" pos:end="29:43">MOUSE_EVENT_RBUTTON</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <expr_stmt pos:start="31:9" pos:end="31:18"><expr pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:10">ch</name> <operator pos:start="31:12" pos:end="31:13">^=</operator> <literal type="number" pos:start="31:15" pos:end="31:17">0x1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:21"><expr pos:start="35:5" pos:end="35:20"><call pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:13">put_queue</name><argument_list pos:start="35:14" pos:end="35:20">(<argument pos:start="35:15" pos:end="35:15"><expr pos:start="35:15" pos:end="35:15"><name pos:start="35:15" pos:end="35:15">s</name></expr></argument>, <argument pos:start="35:18" pos:end="35:19"><expr pos:start="35:18" pos:end="35:19"><name pos:start="35:18" pos:end="35:19">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:12"><expr pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:6">ch</name> <operator pos:start="39:8" pos:end="39:8">=</operator> <name pos:start="39:10" pos:end="39:11">dx</name></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="49:16"><if pos:start="43:5" pos:end="45:15">if <condition pos:start="43:8" pos:end="43:17">(<expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:10">ch</name> <operator pos:start="43:12" pos:end="43:12">&gt;</operator> <literal type="number" pos:start="43:14" pos:end="43:16">127</literal></expr>)</condition><block type="pseudo" pos:start="45:9" pos:end="45:15"><block_content pos:start="45:9" pos:end="45:15">

        <expr_stmt pos:start="45:9" pos:end="45:15"><expr pos:start="45:9" pos:end="45:14"><name pos:start="45:9" pos:end="45:10">ch</name><operator pos:start="45:11" pos:end="45:11">=</operator><literal type="number" pos:start="45:12" pos:end="45:14">127</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="47:5" pos:end="49:16">else if <condition pos:start="47:13" pos:end="47:23">(<expr pos:start="47:14" pos:end="47:22"><name pos:start="47:14" pos:end="47:15">ch</name> <operator pos:start="47:17" pos:end="47:17">&lt;</operator> <operator pos:start="47:19" pos:end="47:19">-</operator><literal type="number" pos:start="47:20" pos:end="47:22">127</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:16"><block_content pos:start="49:9" pos:end="49:16">

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:10">ch</name><operator pos:start="49:11" pos:end="49:11">=</operator><operator pos:start="49:12" pos:end="49:12">-</operator><literal type="number" pos:start="49:13" pos:end="49:15">127</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:28"><expr pos:start="53:5" pos:end="53:27"><call pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:13">put_queue</name><argument_list pos:start="53:14" pos:end="53:27">(<argument pos:start="53:15" pos:end="53:15"><expr pos:start="53:15" pos:end="53:15"><name pos:start="53:15" pos:end="53:15">s</name></expr></argument>, <argument pos:start="53:18" pos:end="53:26"><expr pos:start="53:18" pos:end="53:26"><name pos:start="53:18" pos:end="53:19">ch</name> <operator pos:start="53:21" pos:end="53:21">&amp;</operator> <literal type="number" pos:start="53:23" pos:end="53:26">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:13"><expr pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:6">ch</name> <operator pos:start="57:8" pos:end="57:8">=</operator> <operator pos:start="57:10" pos:end="57:10">-</operator><name pos:start="57:11" pos:end="57:12">dy</name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="67:16"><if pos:start="61:5" pos:end="63:15">if <condition pos:start="61:8" pos:end="61:17">(<expr pos:start="61:9" pos:end="61:16"><name pos:start="61:9" pos:end="61:10">ch</name> <operator pos:start="61:12" pos:end="61:12">&gt;</operator> <literal type="number" pos:start="61:14" pos:end="61:16">127</literal></expr>)</condition><block type="pseudo" pos:start="63:9" pos:end="63:15"><block_content pos:start="63:9" pos:end="63:15">

        <expr_stmt pos:start="63:9" pos:end="63:15"><expr pos:start="63:9" pos:end="63:14"><name pos:start="63:9" pos:end="63:10">ch</name><operator pos:start="63:11" pos:end="63:11">=</operator><literal type="number" pos:start="63:12" pos:end="63:14">127</literal></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="65:5" pos:end="67:16">else if <condition pos:start="65:13" pos:end="65:23">(<expr pos:start="65:14" pos:end="65:22"><name pos:start="65:14" pos:end="65:15">ch</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <operator pos:start="65:19" pos:end="65:19">-</operator><literal type="number" pos:start="65:20" pos:end="65:22">127</literal></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:16"><block_content pos:start="67:9" pos:end="67:16">

        <expr_stmt pos:start="67:9" pos:end="67:16"><expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:10">ch</name><operator pos:start="67:11" pos:end="67:11">=</operator><operator pos:start="67:12" pos:end="67:12">-</operator><literal type="number" pos:start="67:13" pos:end="67:15">127</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:28"><expr pos:start="71:5" pos:end="71:27"><call pos:start="71:5" pos:end="71:27"><name pos:start="71:5" pos:end="71:13">put_queue</name><argument_list pos:start="71:14" pos:end="71:27">(<argument pos:start="71:15" pos:end="71:15"><expr pos:start="71:15" pos:end="71:15"><name pos:start="71:15" pos:end="71:15">s</name></expr></argument>, <argument pos:start="71:18" pos:end="71:26"><expr pos:start="71:18" pos:end="71:26"><name pos:start="71:18" pos:end="71:19">ch</name> <operator pos:start="71:21" pos:end="71:21">&amp;</operator> <literal type="number" pos:start="71:23" pos:end="71:26">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="75:5" pos:end="75:50">// MSC protocol specify two extra motion bytes</comment>



    <expr_stmt pos:start="79:5" pos:end="79:20"><expr pos:start="79:5" pos:end="79:19"><call pos:start="79:5" pos:end="79:19"><name pos:start="79:5" pos:end="79:13">put_queue</name><argument_list pos:start="79:14" pos:end="79:19">(<argument pos:start="79:15" pos:end="79:15"><expr pos:start="79:15" pos:end="79:15"><name pos:start="79:15" pos:end="79:15">s</name></expr></argument>, <argument pos:start="79:18" pos:end="79:18"><expr pos:start="79:18" pos:end="79:18"><literal type="number" pos:start="79:18" pos:end="79:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:20"><expr pos:start="81:5" pos:end="81:19"><call pos:start="81:5" pos:end="81:19"><name pos:start="81:5" pos:end="81:13">put_queue</name><argument_list pos:start="81:14" pos:end="81:19">(<argument pos:start="81:15" pos:end="81:15"><expr pos:start="81:15" pos:end="81:15"><name pos:start="81:15" pos:end="81:15">s</name></expr></argument>, <argument pos:start="81:18" pos:end="81:18"><expr pos:start="81:18" pos:end="81:18"><literal type="number" pos:start="81:18" pos:end="81:18">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
