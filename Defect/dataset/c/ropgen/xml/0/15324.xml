<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15324.c" pos:tabs="8"><function pos:start="1:1" pos:end="135:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:38">xcbgrab_read_header</name><parameter_list pos:start="1:39" pos:end="1:58">(<parameter pos:start="1:40" pos:end="1:57"><decl pos:start="1:40" pos:end="1:57"><type pos:start="1:40" pos:end="1:56"><name pos:start="1:40" pos:end="1:54">AVFormatContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="135:1">{<block_content pos:start="5:5" pos:end="133:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">XCBGrabContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">c</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:18">screen_num</name></decl>, <decl pos:start="7:21" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:23">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:23"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:21">xcb_setup_t</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:28">setup</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:8">char</name> <modifier pos:start="11:10" pos:end="11:10">*</modifier></type><name pos:start="11:11" pos:end="11:22">display_name</name> <init pos:start="11:24" pos:end="11:47">= <expr pos:start="11:26" pos:end="11:47"><call pos:start="11:26" pos:end="11:47"><name pos:start="11:26" pos:end="11:34">av_strdup</name><argument_list pos:start="11:35" pos:end="11:47">(<argument pos:start="11:36" pos:end="11:46"><expr pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:46"><name pos:start="11:36" pos:end="11:36">s</name><operator pos:start="11:37" pos:end="11:38">-&gt;</operator><name pos:start="11:39" pos:end="11:46">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="31:5"><if pos:start="15:5" pos:end="31:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:19">filename</name></name></expr>)</condition> <block pos:start="15:22" pos:end="31:5">{<block_content pos:start="17:9" pos:end="29:9">

        <if_stmt pos:start="17:9" pos:end="19:35"><if pos:start="17:9" pos:end="19:35">if <condition pos:start="17:12" pos:end="17:26">(<expr pos:start="17:13" pos:end="17:25"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:25">display_name</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:35"><block_content pos:start="19:13" pos:end="19:35">

            <return pos:start="19:13" pos:end="19:35">return <expr pos:start="19:20" pos:end="19:34"><call pos:start="19:20" pos:end="19:34"><name pos:start="19:20" pos:end="19:26">AVERROR</name><argument_list pos:start="19:27" pos:end="19:34">(<argument pos:start="19:28" pos:end="19:33"><expr pos:start="19:28" pos:end="19:33"><name pos:start="19:28" pos:end="19:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="23:76">(<expr pos:start="23:13" pos:end="23:75"><operator pos:start="23:13" pos:end="23:13">!</operator><call pos:start="23:14" pos:end="23:75"><name pos:start="23:14" pos:end="23:19">sscanf</name><argument_list pos:start="23:20" pos:end="23:75">(<argument pos:start="23:21" pos:end="23:31"><expr pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:31"><name pos:start="23:21" pos:end="23:21">s</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:31">filename</name></name></expr></argument>, <argument pos:start="23:34" pos:end="23:46"><expr pos:start="23:34" pos:end="23:46"><literal type="string" pos:start="23:34" pos:end="23:46">"%[^+]+%d,%d"</literal></expr></argument>, <argument pos:start="23:49" pos:end="23:60"><expr pos:start="23:49" pos:end="23:60"><name pos:start="23:49" pos:end="23:60">display_name</name></expr></argument>, <argument pos:start="23:63" pos:end="23:67"><expr pos:start="23:63" pos:end="23:67"><operator pos:start="23:63" pos:end="23:63">&amp;</operator><name pos:start="23:64" pos:end="23:67"><name pos:start="23:64" pos:end="23:64">c</name><operator pos:start="23:65" pos:end="23:66">-&gt;</operator><name pos:start="23:67" pos:end="23:67">x</name></name></expr></argument>, <argument pos:start="23:70" pos:end="23:74"><expr pos:start="23:70" pos:end="23:74"><operator pos:start="23:70" pos:end="23:70">&amp;</operator><name pos:start="23:71" pos:end="23:74"><name pos:start="23:71" pos:end="23:71">c</name><operator pos:start="23:72" pos:end="23:73">-&gt;</operator><name pos:start="23:74" pos:end="23:74">y</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:78" pos:end="29:9">{<block_content pos:start="25:13" pos:end="27:56">

            <expr_stmt pos:start="25:13" pos:end="25:30"><expr pos:start="25:13" pos:end="25:29"><operator pos:start="25:13" pos:end="25:13">*</operator><name pos:start="25:14" pos:end="25:25">display_name</name> <operator pos:start="25:27" pos:end="25:27">=</operator> <literal type="number" pos:start="25:29" pos:end="25:29">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:56"><expr pos:start="27:13" pos:end="27:55"><call pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:18">sscanf</name><argument_list pos:start="27:19" pos:end="27:55">(<argument pos:start="27:20" pos:end="27:30"><expr pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:20">s</name><operator pos:start="27:21" pos:end="27:22">-&gt;</operator><name pos:start="27:23" pos:end="27:30">filename</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:40"><expr pos:start="27:33" pos:end="27:40"><literal type="string" pos:start="27:33" pos:end="27:40">"+%d,%d"</literal></expr></argument>, <argument pos:start="27:43" pos:end="27:47"><expr pos:start="27:43" pos:end="27:47"><operator pos:start="27:43" pos:end="27:43">&amp;</operator><name pos:start="27:44" pos:end="27:47"><name pos:start="27:44" pos:end="27:44">c</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:47">x</name></name></expr></argument>, <argument pos:start="27:50" pos:end="27:54"><expr pos:start="27:50" pos:end="27:54"><operator pos:start="27:50" pos:end="27:50">&amp;</operator><name pos:start="27:51" pos:end="27:54"><name pos:start="27:51" pos:end="27:51">c</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:54">y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:53"><expr pos:start="35:5" pos:end="35:52"><name pos:start="35:5" pos:end="35:11"><name pos:start="35:5" pos:end="35:5">c</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:11">conn</name></name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:52"><name pos:start="35:15" pos:end="35:25">xcb_connect</name><argument_list pos:start="35:26" pos:end="35:52">(<argument pos:start="35:27" pos:end="35:38"><expr pos:start="35:27" pos:end="35:38"><name pos:start="35:27" pos:end="35:38">display_name</name></expr></argument>, <argument pos:start="35:41" pos:end="35:51"><expr pos:start="35:41" pos:end="35:51"><operator pos:start="35:41" pos:end="35:41">&amp;</operator><name pos:start="35:42" pos:end="35:51">screen_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:28"><expr pos:start="37:5" pos:end="37:27"><call pos:start="37:5" pos:end="37:27"><name pos:start="37:5" pos:end="37:12">av_freep</name><argument_list pos:start="37:13" pos:end="37:27">(<argument pos:start="37:14" pos:end="37:26"><expr pos:start="37:14" pos:end="37:26"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:26">display_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:50">(<expr pos:start="39:9" pos:end="39:49"><operator pos:start="39:9" pos:end="39:9">(</operator><name pos:start="39:10" pos:end="39:12">ret</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:48"><name pos:start="39:16" pos:end="39:39">xcb_connection_has_error</name><argument_list pos:start="39:40" pos:end="39:48">(<argument pos:start="39:41" pos:end="39:47"><expr pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:47"><name pos:start="39:41" pos:end="39:41">c</name><operator pos:start="39:42" pos:end="39:43">-&gt;</operator><name pos:start="39:44" pos:end="39:47">conn</name></name></expr></argument>)</argument_list></call><operator pos:start="39:49" pos:end="39:49">)</operator></expr>)</condition> <block pos:start="39:52" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:28">

        <expr_stmt pos:start="41:9" pos:end="43:59"><expr pos:start="41:9" pos:end="43:58"><call pos:start="41:9" pos:end="43:58"><name pos:start="41:9" pos:end="41:14">av_log</name><argument_list pos:start="41:15" pos:end="43:58">(<argument pos:start="41:16" pos:end="41:16"><expr pos:start="41:16" pos:end="41:16"><name pos:start="41:16" pos:end="41:16">s</name></expr></argument>, <argument pos:start="41:19" pos:end="41:30"><expr pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="41:33" pos:end="41:69"><expr pos:start="41:33" pos:end="41:69"><literal type="string" pos:start="41:33" pos:end="41:69">"Cannot open display %s, error %d.\n"</literal></expr></argument>,

               <argument pos:start="43:16" pos:end="43:52"><expr pos:start="43:16" pos:end="43:52"><ternary pos:start="43:16" pos:end="43:52"><condition pos:start="43:16" pos:end="43:28"><expr pos:start="43:16" pos:end="43:26"><name pos:start="43:16" pos:end="43:26"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:26">filename</name></name></expr> ?</condition><then pos:start="43:30" pos:end="43:40"> <expr pos:start="43:30" pos:end="43:40"><name pos:start="43:30" pos:end="43:40"><name pos:start="43:30" pos:end="43:30">s</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:40">filename</name></name></expr> </then><else pos:start="43:42" pos:end="43:52">: <expr pos:start="43:44" pos:end="43:52"><literal type="string" pos:start="43:44" pos:end="43:52">"default"</literal></expr></else></ternary></expr></argument>, <argument pos:start="43:55" pos:end="43:57"><expr pos:start="43:55" pos:end="43:57"><name pos:start="43:55" pos:end="43:57">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:28">return <expr pos:start="45:16" pos:end="45:27"><call pos:start="45:16" pos:end="45:27"><name pos:start="45:16" pos:end="45:22">AVERROR</name><argument_list pos:start="45:23" pos:end="45:27">(<argument pos:start="45:24" pos:end="45:26"><expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:35"><expr pos:start="49:5" pos:end="49:34"><name pos:start="49:5" pos:end="49:9">setup</name> <operator pos:start="49:11" pos:end="49:11">=</operator> <call pos:start="49:13" pos:end="49:34"><name pos:start="49:13" pos:end="49:25">xcb_get_setup</name><argument_list pos:start="49:26" pos:end="49:34">(<argument pos:start="49:27" pos:end="49:33"><expr pos:start="49:27" pos:end="49:33"><name pos:start="49:27" pos:end="49:33"><name pos:start="49:27" pos:end="49:27">c</name><operator pos:start="49:28" pos:end="49:29">-&gt;</operator><name pos:start="49:30" pos:end="49:33">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:5">c</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:13">screen</name></name> <operator pos:start="53:15" pos:end="53:15">=</operator> <call pos:start="53:17" pos:end="53:45"><name pos:start="53:17" pos:end="53:26">get_screen</name><argument_list pos:start="53:27" pos:end="53:45">(<argument pos:start="53:28" pos:end="53:32"><expr pos:start="53:28" pos:end="53:32"><name pos:start="53:28" pos:end="53:32">setup</name></expr></argument>, <argument pos:start="53:35" pos:end="53:44"><expr pos:start="53:35" pos:end="53:44"><name pos:start="53:35" pos:end="53:44">screen_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="55:5" pos:end="70:0"><if pos:start="55:5" pos:end="70:0">if <condition pos:start="55:8" pos:end="55:19">(<expr pos:start="55:9" pos:end="55:18"><operator pos:start="55:9" pos:end="55:9">!</operator><name pos:start="55:10" pos:end="55:18"><name pos:start="55:10" pos:end="55:10">c</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:18">screen</name></name></expr>)</condition> <block pos:start="55:21" pos:end="70:0">{<block_content pos:start="57:9" pos:end="63:28">

        <expr_stmt pos:start="57:9" pos:end="59:27"><expr pos:start="57:9" pos:end="59:26"><call pos:start="57:9" pos:end="59:26"><name pos:start="57:9" pos:end="57:14">av_log</name><argument_list pos:start="57:15" pos:end="59:26">(<argument pos:start="57:16" pos:end="57:16"><expr pos:start="57:16" pos:end="57:16"><name pos:start="57:16" pos:end="57:16">s</name></expr></argument>, <argument pos:start="57:19" pos:end="57:30"><expr pos:start="57:19" pos:end="57:30"><name pos:start="57:19" pos:end="57:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="57:33" pos:end="57:65"><expr pos:start="57:33" pos:end="57:65"><literal type="string" pos:start="57:33" pos:end="57:65">"The screen %d does not exist.\n"</literal></expr></argument>,

               <argument pos:start="59:16" pos:end="59:25"><expr pos:start="59:16" pos:end="59:25"><name pos:start="59:16" pos:end="59:25">screen_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:30"><expr pos:start="61:9" pos:end="61:29"><call pos:start="61:9" pos:end="61:29"><name pos:start="61:9" pos:end="61:26">xcbgrab_read_close</name><argument_list pos:start="61:27" pos:end="61:29">(<argument pos:start="61:28" pos:end="61:28"><expr pos:start="61:28" pos:end="61:28"><name pos:start="61:28" pos:end="61:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:28">return <expr pos:start="63:16" pos:end="63:27"><call pos:start="63:16" pos:end="63:27"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:27">(<argument pos:start="63:24" pos:end="63:26"><expr pos:start="63:24" pos:end="63:26"><name pos:start="63:24" pos:end="63:26">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="69:1" pos:end="69:21">#<cpp:directive pos:start="69:2" pos:end="69:3">if</cpp:directive> <expr pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:21">CONFIG_LIBXCB_SHM</name></expr></cpp:if>

    <expr_stmt pos:start="71:5" pos:end="74:0"><expr pos:start="71:5" pos:end="71:41"><name pos:start="71:5" pos:end="71:14"><name pos:start="71:5" pos:end="71:5">c</name><operator pos:start="71:6" pos:end="71:7">-&gt;</operator><name pos:start="71:8" pos:end="71:14">segment</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <call pos:start="71:18" pos:end="71:41"><name pos:start="71:18" pos:end="71:32">xcb_generate_id</name><argument_list pos:start="71:33" pos:end="71:41">(<argument pos:start="71:34" pos:end="71:40"><expr pos:start="71:34" pos:end="71:40"><name pos:start="71:34" pos:end="71:40"><name pos:start="71:34" pos:end="71:34">c</name><operator pos:start="71:35" pos:end="71:36">-&gt;</operator><name pos:start="71:37" pos:end="71:40">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="73:1" pos:end="73:6">#<cpp:directive pos:start="73:2" pos:end="73:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:7">ret</name> <operator pos:start="77:9" pos:end="77:9">=</operator> <call pos:start="77:11" pos:end="77:26"><name pos:start="77:11" pos:end="77:23">create_stream</name><argument_list pos:start="77:24" pos:end="77:26">(<argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><name pos:start="77:25" pos:end="77:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="81:5" pos:end="92:0"><if pos:start="81:5" pos:end="92:0">if <condition pos:start="81:8" pos:end="81:16">(<expr pos:start="81:9" pos:end="81:15"><name pos:start="81:9" pos:end="81:11">ret</name> <operator pos:start="81:13" pos:end="81:13">&lt;</operator> <literal type="number" pos:start="81:15" pos:end="81:15">0</literal></expr>)</condition> <block pos:start="81:18" pos:end="92:0">{<block_content pos:start="83:9" pos:end="85:19">

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><call pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:26">xcbgrab_read_close</name><argument_list pos:start="83:27" pos:end="83:29">(<argument pos:start="83:28" pos:end="83:28"><expr pos:start="83:28" pos:end="83:28"><name pos:start="83:28" pos:end="83:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="85:9" pos:end="85:19">return <expr pos:start="85:16" pos:end="85:18"><name pos:start="85:16" pos:end="85:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



<cpp:if pos:start="91:1" pos:end="91:21">#<cpp:directive pos:start="91:2" pos:end="91:3">if</cpp:directive> <expr pos:start="91:5" pos:end="91:21"><name pos:start="91:5" pos:end="91:21">CONFIG_LIBXCB_SHM</name></expr></cpp:if>

    <expr_stmt pos:start="93:5" pos:end="100:0"><expr pos:start="93:5" pos:end="93:35"><name pos:start="93:5" pos:end="93:14"><name pos:start="93:5" pos:end="93:5">c</name><operator pos:start="93:6" pos:end="93:7">-&gt;</operator><name pos:start="93:8" pos:end="93:14">has_shm</name></name> <operator pos:start="93:16" pos:end="93:16">=</operator> <call pos:start="93:18" pos:end="93:35"><name pos:start="93:18" pos:end="93:26">check_shm</name><argument_list pos:start="93:27" pos:end="93:35">(<argument pos:start="93:28" pos:end="93:34"><expr pos:start="93:28" pos:end="93:34"><name pos:start="93:28" pos:end="93:34"><name pos:start="93:28" pos:end="93:28">c</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:34">conn</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="95:1" pos:end="95:6">#<cpp:directive pos:start="95:2" pos:end="95:6">endif</cpp:directive></cpp:endif>



<cpp:if pos:start="99:1" pos:end="99:24">#<cpp:directive pos:start="99:2" pos:end="99:3">if</cpp:directive> <expr pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:24">CONFIG_LIBXCB_XFIXES</name></expr></cpp:if>

    <if_stmt pos:start="101:5" pos:end="124:0"><if pos:start="101:5" pos:end="124:0">if <condition pos:start="101:8" pos:end="101:22">(<expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:9">c</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:21">draw_mouse</name></name></expr>)</condition> <block pos:start="101:24" pos:end="124:0">{<block_content pos:start="103:9" pos:end="119:9">

        <if_stmt pos:start="103:9" pos:end="109:9"><if pos:start="103:9" pos:end="109:9">if <condition pos:start="103:12" pos:end="103:53">(<expr pos:start="103:13" pos:end="103:52"><operator pos:start="103:13" pos:end="103:13">!</operator><operator pos:start="103:14" pos:end="103:14">(</operator><name pos:start="103:15" pos:end="103:27"><name pos:start="103:15" pos:end="103:15">c</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:27">draw_mouse</name></name> <operator pos:start="103:29" pos:end="103:29">=</operator> <call pos:start="103:31" pos:end="103:51"><name pos:start="103:31" pos:end="103:42">check_xfixes</name><argument_list pos:start="103:43" pos:end="103:51">(<argument pos:start="103:44" pos:end="103:50"><expr pos:start="103:44" pos:end="103:50"><name pos:start="103:44" pos:end="103:50"><name pos:start="103:44" pos:end="103:44">c</name><operator pos:start="103:45" pos:end="103:46">-&gt;</operator><name pos:start="103:47" pos:end="103:50">conn</name></name></expr></argument>)</argument_list></call><operator pos:start="103:52" pos:end="103:52">)</operator></expr>)</condition> <block pos:start="103:55" pos:end="109:9">{<block_content pos:start="105:13" pos:end="107:69">

            <expr_stmt pos:start="105:13" pos:end="107:69"><expr pos:start="105:13" pos:end="107:68"><call pos:start="105:13" pos:end="107:68"><name pos:start="105:13" pos:end="105:18">av_log</name><argument_list pos:start="105:19" pos:end="107:68">(<argument pos:start="105:20" pos:end="105:20"><expr pos:start="105:20" pos:end="105:20"><name pos:start="105:20" pos:end="105:20">s</name></expr></argument>, <argument pos:start="105:23" pos:end="105:36"><expr pos:start="105:23" pos:end="105:36"><name pos:start="105:23" pos:end="105:36">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:67"><expr pos:start="107:20" pos:end="107:67"><literal type="string" pos:start="107:20" pos:end="107:67">"XFixes not available, cannot draw the mouse.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="111:9" pos:end="119:9"><if pos:start="111:9" pos:end="119:9">if <condition pos:start="111:12" pos:end="111:24">(<expr pos:start="111:13" pos:end="111:23"><name pos:start="111:13" pos:end="111:18"><name pos:start="111:13" pos:end="111:13">c</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:18">bpp</name></name> <operator pos:start="111:20" pos:end="111:20">&lt;</operator> <literal type="number" pos:start="111:22" pos:end="111:23">24</literal></expr>)</condition> <block pos:start="111:26" pos:end="119:9">{<block_content pos:start="113:13" pos:end="117:30">

            <expr_stmt pos:start="113:13" pos:end="115:50"><expr pos:start="113:13" pos:end="115:49"><call pos:start="113:13" pos:end="115:49"><name pos:start="113:13" pos:end="113:41">avpriv_report_missing_feature</name><argument_list pos:start="113:42" pos:end="115:49">(<argument pos:start="113:43" pos:end="113:43"><expr pos:start="113:43" pos:end="113:43"><name pos:start="113:43" pos:end="113:43">s</name></expr></argument>, <argument pos:start="113:46" pos:end="113:71"><expr pos:start="113:46" pos:end="113:71"><literal type="string" pos:start="113:46" pos:end="113:71">"%d bits per pixel screen"</literal></expr></argument>,

                                          <argument pos:start="115:43" pos:end="115:48"><expr pos:start="115:43" pos:end="115:48"><name pos:start="115:43" pos:end="115:48"><name pos:start="115:43" pos:end="115:43">c</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:48">bpp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:30"><expr pos:start="117:13" pos:end="117:29"><name pos:start="117:13" pos:end="117:25"><name pos:start="117:13" pos:end="117:13">c</name><operator pos:start="117:14" pos:end="117:15">-&gt;</operator><name pos:start="117:16" pos:end="117:25">draw_mouse</name></name> <operator pos:start="117:27" pos:end="117:27">=</operator> <literal type="number" pos:start="117:29" pos:end="117:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

<cpp:endif pos:start="123:1" pos:end="123:6">#<cpp:directive pos:start="123:2" pos:end="123:6">endif</cpp:directive></cpp:endif>



    <if_stmt pos:start="127:5" pos:end="129:24"><if pos:start="127:5" pos:end="129:24">if <condition pos:start="127:8" pos:end="127:23">(<expr pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:22"><name pos:start="127:9" pos:end="127:9">c</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:22">show_region</name></name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:24"><block_content pos:start="129:9" pos:end="129:24">

        <expr_stmt pos:start="129:9" pos:end="129:24"><expr pos:start="129:9" pos:end="129:23"><call pos:start="129:9" pos:end="129:23"><name pos:start="129:9" pos:end="129:20">setup_window</name><argument_list pos:start="129:21" pos:end="129:23">(<argument pos:start="129:22" pos:end="129:22"><expr pos:start="129:22" pos:end="129:22"><name pos:start="129:22" pos:end="129:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="133:5" pos:end="133:13">return <expr pos:start="133:12" pos:end="133:12"><literal type="number" pos:start="133:12" pos:end="133:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
