<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21529.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:23">helper_movl_drN_T0</name><parameter_list pos:start="1:24" pos:end="1:67">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">CPUX86State</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:49"><decl pos:start="1:43" pos:end="1:49"><type pos:start="1:43" pos:end="1:49"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:49">reg</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:63">target_ulong</name></type> <name pos:start="1:65" pos:end="1:66">t0</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="36:0">

<cpp:ifndef pos:start="5:1" pos:end="5:24">#<cpp:directive pos:start="5:2" pos:end="5:7">ifndef</cpp:directive> <name pos:start="5:9" pos:end="5:24">CONFIG_USER_ONLY</name></cpp:ifndef>

    <if_stmt pos:start="7:5" pos:end="36:0"><if pos:start="7:5" pos:end="25:5">if <condition pos:start="7:8" pos:end="7:16">(<expr pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:11">reg</name> <operator pos:start="7:13" pos:end="7:13">&lt;</operator> <literal type="number" pos:start="7:15" pos:end="7:15">4</literal></expr>)</condition> <block pos:start="7:18" pos:end="25:5">{<block_content pos:start="9:9" pos:end="23:9">

        <if_stmt pos:start="9:9" pos:end="23:9"><if pos:start="9:9" pos:end="19:9">if <condition pos:start="9:12" pos:end="11:69">(<expr pos:start="9:13" pos:end="11:68"><call pos:start="9:13" pos:end="9:50"><name pos:start="9:13" pos:end="9:33">hw_breakpoint_enabled</name><argument_list pos:start="9:34" pos:end="9:50">(<argument pos:start="9:35" pos:end="9:44"><expr pos:start="9:35" pos:end="9:44"><name pos:start="9:35" pos:end="9:44"><name pos:start="9:35" pos:end="9:37">env</name><operator pos:start="9:38" pos:end="9:39">-&gt;</operator><name pos:start="9:40" pos:end="9:41">dr</name><index pos:start="9:42" pos:end="9:44">[<expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="9:47" pos:end="9:49"><expr pos:start="9:47" pos:end="9:49"><name pos:start="9:47" pos:end="9:49">reg</name></expr></argument>)</argument_list></call>

            <operator pos:start="11:13" pos:end="11:14">&amp;&amp;</operator> <call pos:start="11:16" pos:end="11:50"><name pos:start="11:16" pos:end="11:33">hw_breakpoint_type</name><argument_list pos:start="11:34" pos:end="11:50">(<argument pos:start="11:35" pos:end="11:44"><expr pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:44"><name pos:start="11:35" pos:end="11:37">env</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:41">dr</name><index pos:start="11:42" pos:end="11:44">[<expr pos:start="11:43" pos:end="11:43"><literal type="number" pos:start="11:43" pos:end="11:43">7</literal></expr>]</index></name></expr></argument>, <argument pos:start="11:47" pos:end="11:49"><expr pos:start="11:47" pos:end="11:49"><name pos:start="11:47" pos:end="11:49">reg</name></expr></argument>)</argument_list></call> <operator pos:start="11:52" pos:end="11:53">!=</operator> <name pos:start="11:55" pos:end="11:68">DR7_TYPE_IO_RW</name></expr>)</condition> <block pos:start="11:71" pos:end="19:9">{<block_content pos:start="13:13" pos:end="17:43">

            <expr_stmt pos:start="13:13" pos:end="13:43"><expr pos:start="13:13" pos:end="13:42"><call pos:start="13:13" pos:end="13:42"><name pos:start="13:13" pos:end="13:32">hw_breakpoint_remove</name><argument_list pos:start="13:33" pos:end="13:42">(<argument pos:start="13:34" pos:end="13:36"><expr pos:start="13:34" pos:end="13:36"><name pos:start="13:34" pos:end="13:36">env</name></expr></argument>, <argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="15:13" pos:end="15:30"><expr pos:start="15:13" pos:end="15:29"><name pos:start="15:13" pos:end="15:24"><name pos:start="15:13" pos:end="15:15">env</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:19">dr</name><index pos:start="15:20" pos:end="15:24">[<expr pos:start="15:21" pos:end="15:23"><name pos:start="15:21" pos:end="15:23">reg</name></expr>]</index></name> <operator pos:start="15:26" pos:end="15:26">=</operator> <name pos:start="15:28" pos:end="15:29">t0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="17:13" pos:end="17:43"><expr pos:start="17:13" pos:end="17:42"><call pos:start="17:13" pos:end="17:42"><name pos:start="17:13" pos:end="17:32">hw_breakpoint_insert</name><argument_list pos:start="17:33" pos:end="17:42">(<argument pos:start="17:34" pos:end="17:36"><expr pos:start="17:34" pos:end="17:36"><name pos:start="17:34" pos:end="17:36">env</name></expr></argument>, <argument pos:start="17:39" pos:end="17:41"><expr pos:start="17:39" pos:end="17:41"><name pos:start="17:39" pos:end="17:41">reg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="23:9">else <block pos:start="19:16" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:30">

            <expr_stmt pos:start="21:13" pos:end="21:30"><expr pos:start="21:13" pos:end="21:29"><name pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:15">env</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">dr</name><index pos:start="21:20" pos:end="21:24">[<expr pos:start="21:21" pos:end="21:23"><name pos:start="21:21" pos:end="21:23">reg</name></expr>]</index></name> <operator pos:start="21:26" pos:end="21:26">=</operator> <name pos:start="21:28" pos:end="21:29">t0</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="29:5">else if <condition pos:start="25:15" pos:end="25:24">(<expr pos:start="25:16" pos:end="25:23"><name pos:start="25:16" pos:end="25:18">reg</name> <operator pos:start="25:20" pos:end="25:21">==</operator> <literal type="number" pos:start="25:23" pos:end="25:23">7</literal></expr>)</condition> <block pos:start="25:26" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:36">

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><call pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:26">cpu_x86_update_dr7</name><argument_list pos:start="27:27" pos:end="27:35">(<argument pos:start="27:28" pos:end="27:30"><expr pos:start="27:28" pos:end="27:30"><name pos:start="27:28" pos:end="27:30">env</name></expr></argument>, <argument pos:start="27:33" pos:end="27:34"><expr pos:start="27:33" pos:end="27:34"><name pos:start="27:33" pos:end="27:34">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="36:0">else <block pos:start="29:12" pos:end="36:0">{<block_content pos:start="31:9" pos:end="31:26">

        <expr_stmt pos:start="31:9" pos:end="31:26"><expr pos:start="31:9" pos:end="31:25"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:11">env</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:15">dr</name><index pos:start="31:16" pos:end="31:20">[<expr pos:start="31:17" pos:end="31:19"><name pos:start="31:17" pos:end="31:19">reg</name></expr>]</index></name> <operator pos:start="31:22" pos:end="31:22">=</operator> <name pos:start="31:24" pos:end="31:25">t0</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
