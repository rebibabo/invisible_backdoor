<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4313.c" pos:tabs="8"><function pos:start="1:1" pos:end="213:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:29">imx_avic_read</name><parameter_list pos:start="1:30" pos:end="3:70">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:54"><decl pos:start="3:30" pos:end="3:54"><type pos:start="3:30" pos:end="3:54"><name pos:start="3:30" pos:end="3:47">target_phys_addr_t</name></type> <name pos:start="3:49" pos:end="3:54">offset</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:69"><decl pos:start="3:57" pos:end="3:69"><type pos:start="3:57" pos:end="3:69"><name pos:start="3:57" pos:end="3:64">unsigned</name></type> <name pos:start="3:66" pos:end="3:69">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="213:1">{<block_content pos:start="7:5" pos:end="211:5">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">IMXAVICState</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:44">= <expr pos:start="7:23" pos:end="7:44"><operator pos:start="7:23" pos:end="7:23">(</operator><name pos:start="7:24" pos:end="7:35">IMXAVICState</name> <operator pos:start="7:37" pos:end="7:37">*</operator><operator pos:start="7:38" pos:end="7:38">)</operator><name pos:start="7:39" pos:end="7:44">opaque</name></expr></init></decl>;</decl_stmt>





    <expr_stmt pos:start="13:5" pos:end="13:50"><expr pos:start="13:5" pos:end="13:49"><call pos:start="13:5" pos:end="13:49"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:49">(<argument pos:start="13:13" pos:end="13:35"><expr pos:start="13:13" pos:end="13:35"><literal type="string" pos:start="13:13" pos:end="13:35">"read(offset = 0x%x)\n"</literal></expr></argument>, <argument pos:start="13:38" pos:end="13:48"><expr pos:start="13:38" pos:end="13:48"><name pos:start="13:38" pos:end="13:43">offset</name> <operator pos:start="13:45" pos:end="13:46">&gt;&gt;</operator> <literal type="number" pos:start="13:48" pos:end="13:48">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="211:5">switch <condition pos:start="15:12" pos:end="15:24">(<expr pos:start="15:13" pos:end="15:23"><name pos:start="15:13" pos:end="15:18">offset</name> <operator pos:start="15:20" pos:end="15:21">&gt;&gt;</operator> <literal type="number" pos:start="15:23" pos:end="15:23">2</literal></expr>)</condition> <block pos:start="15:26" pos:end="211:5">{<block_content pos:start="17:5" pos:end="209:17">

    <case pos:start="17:5" pos:end="17:11">case <expr pos:start="17:10" pos:end="17:10"><literal type="number" pos:start="17:10" pos:end="17:10">0</literal></expr>:</case> <comment type="block" pos:start="17:13" pos:end="17:25">/* INTCNTL */</comment>

        <return pos:start="19:9" pos:end="19:26">return <expr pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:25">intcntl</name></name></expr>;</return>



    <case pos:start="23:5" pos:end="23:11">case <expr pos:start="23:10" pos:end="23:10"><literal type="number" pos:start="23:10" pos:end="23:10">1</literal></expr>:</case> <comment type="block" pos:start="23:13" pos:end="23:56">/* Normal Interrupt Mask Register, NIMASK */</comment>

        <return pos:start="25:9" pos:end="25:26">return <expr pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:25"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:25">intmask</name></name></expr>;</return>



    <case pos:start="29:5" pos:end="29:11">case <expr pos:start="29:10" pos:end="29:10"><literal type="number" pos:start="29:10" pos:end="29:10">2</literal></expr>:</case> <comment type="block" pos:start="29:13" pos:end="29:60">/* Interrupt Enable Number Register, INTENNUM */</comment>

    <case pos:start="31:5" pos:end="31:11">case <expr pos:start="31:10" pos:end="31:10"><literal type="number" pos:start="31:10" pos:end="31:10">3</literal></expr>:</case> <comment type="block" pos:start="31:13" pos:end="31:62">/* Interrupt Disable Number Register, INTDISNUM */</comment>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>



    <case pos:start="37:5" pos:end="37:11">case <expr pos:start="37:10" pos:end="37:10"><literal type="number" pos:start="37:10" pos:end="37:10">4</literal></expr>:</case> <comment type="block" pos:start="37:13" pos:end="37:56">/* Interrupt Enabled Number Register High */</comment>

        <return pos:start="39:9" pos:end="39:32">return <expr pos:start="39:16" pos:end="39:31"><name pos:start="39:16" pos:end="39:25"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:25">enabled</name></name> <operator pos:start="39:27" pos:end="39:28">&gt;&gt;</operator> <literal type="number" pos:start="39:30" pos:end="39:31">32</literal></expr>;</return>



    <case pos:start="43:5" pos:end="43:11">case <expr pos:start="43:10" pos:end="43:10"><literal type="number" pos:start="43:10" pos:end="43:10">5</literal></expr>:</case> <comment type="block" pos:start="43:13" pos:end="43:55">/* Interrupt Enabled Number Register Low */</comment>

        <return pos:start="45:9" pos:end="45:42">return <expr pos:start="45:16" pos:end="45:41"><name pos:start="45:16" pos:end="45:25"><name pos:start="45:16" pos:end="45:16">s</name><operator pos:start="45:17" pos:end="45:18">-&gt;</operator><name pos:start="45:19" pos:end="45:25">enabled</name></name> <operator pos:start="45:27" pos:end="45:27">&amp;</operator> <literal type="number" pos:start="45:29" pos:end="45:41">0xffffffffULL</literal></expr>;</return>



    <case pos:start="49:5" pos:end="49:11">case <expr pos:start="49:10" pos:end="49:10"><literal type="number" pos:start="49:10" pos:end="49:10">6</literal></expr>:</case> <comment type="block" pos:start="49:13" pos:end="49:46">/* Interrupt Type Register High */</comment>

        <return pos:start="51:9" pos:end="51:31">return <expr pos:start="51:16" pos:end="51:30"><name pos:start="51:16" pos:end="51:24"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:24">is_fiq</name></name> <operator pos:start="51:26" pos:end="51:27">&gt;&gt;</operator> <literal type="number" pos:start="51:29" pos:end="51:30">32</literal></expr>;</return>



    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">7</literal></expr>:</case> <comment type="block" pos:start="55:13" pos:end="55:45">/* Interrupt Type Register Low */</comment>

        <return pos:start="57:9" pos:end="57:41">return <expr pos:start="57:16" pos:end="57:40"><name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:24">is_fiq</name></name> <operator pos:start="57:26" pos:end="57:26">&amp;</operator> <literal type="number" pos:start="57:28" pos:end="57:40">0xffffffffULL</literal></expr>;</return>



    <case pos:start="61:5" pos:end="61:11">case <expr pos:start="61:10" pos:end="61:10"><literal type="number" pos:start="61:10" pos:end="61:10">8</literal></expr>:</case> <comment type="block" pos:start="61:13" pos:end="61:54">/* Normal Interrupt Priority Register 7 */</comment>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">9</literal></expr>:</case> <comment type="block" pos:start="63:13" pos:end="63:54">/* Normal Interrupt Priority Register 6 */</comment>

    <case pos:start="65:5" pos:end="65:12">case <expr pos:start="65:10" pos:end="65:11"><literal type="number" pos:start="65:10" pos:end="65:11">10</literal></expr>:</case><comment type="block" pos:start="65:13" pos:end="65:54">/* Normal Interrupt Priority Register 5 */</comment>

    <case pos:start="67:5" pos:end="67:12">case <expr pos:start="67:10" pos:end="67:11"><literal type="number" pos:start="67:10" pos:end="67:11">11</literal></expr>:</case><comment type="block" pos:start="67:13" pos:end="67:54">/* Normal Interrupt Priority Register 4 */</comment>

    <case pos:start="69:5" pos:end="69:12">case <expr pos:start="69:10" pos:end="69:11"><literal type="number" pos:start="69:10" pos:end="69:11">12</literal></expr>:</case><comment type="block" pos:start="69:13" pos:end="69:54">/* Normal Interrupt Priority Register 3 */</comment>

    <case pos:start="71:5" pos:end="71:12">case <expr pos:start="71:10" pos:end="71:11"><literal type="number" pos:start="71:10" pos:end="71:11">13</literal></expr>:</case><comment type="block" pos:start="71:13" pos:end="71:54">/* Normal Interrupt Priority Register 2 */</comment>

    <case pos:start="73:5" pos:end="73:12">case <expr pos:start="73:10" pos:end="73:11"><literal type="number" pos:start="73:10" pos:end="73:11">14</literal></expr>:</case><comment type="block" pos:start="73:13" pos:end="73:54">/* Normal Interrupt Priority Register 1 */</comment>

    <case pos:start="75:5" pos:end="75:12">case <expr pos:start="75:10" pos:end="75:11"><literal type="number" pos:start="75:10" pos:end="75:11">15</literal></expr>:</case><comment type="block" pos:start="75:13" pos:end="75:54">/* Normal Interrupt Priority Register 0 */</comment>

        <return pos:start="77:9" pos:end="77:39">return <expr pos:start="77:16" pos:end="77:38"><name pos:start="77:16" pos:end="77:38"><name pos:start="77:16" pos:end="77:16">s</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:22">prio</name><index pos:start="77:23" pos:end="77:38">[<expr pos:start="77:24" pos:end="77:37"><literal type="number" pos:start="77:24" pos:end="77:26">15</literal><operator pos:start="77:26" pos:end="77:26">-</operator><operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:33">offset</name><operator pos:start="77:34" pos:end="77:35">&gt;&gt;</operator><literal type="number" pos:start="77:36" pos:end="77:36">2</literal><operator pos:start="77:37" pos:end="77:37">)</operator></expr>]</index></name></expr>;</return>



    <case pos:start="81:5" pos:end="81:12">case <expr pos:start="81:10" pos:end="81:11"><literal type="number" pos:start="81:10" pos:end="81:11">16</literal></expr>:</case> <comment type="block" pos:start="81:14" pos:end="81:62">/* Normal interrupt vector and status register */</comment>

    <block pos:start="83:5" pos:end="133:5">{<block_content pos:start="97:9" pos:end="131:29">

        <comment type="block" pos:start="85:9" pos:end="95:11">/*

         * This returns the highest priority

         * outstanding interrupt.  Where there is more than

         * one pending IRQ with the same priority,

         * take the highest numbered one.

         */</comment>

        <decl_stmt pos:start="97:9" pos:end="97:62"><decl pos:start="97:9" pos:end="97:61"><type pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:16">uint64_t</name></type> <name pos:start="97:18" pos:end="97:22">flags</name> <init pos:start="97:24" pos:end="97:61">= <expr pos:start="97:26" pos:end="97:61"><name pos:start="97:26" pos:end="97:35"><name pos:start="97:26" pos:end="97:26">s</name><operator pos:start="97:27" pos:end="97:28">-&gt;</operator><name pos:start="97:29" pos:end="97:35">pending</name></name> <operator pos:start="97:37" pos:end="97:37">&amp;</operator> <name pos:start="97:39" pos:end="97:48"><name pos:start="97:39" pos:end="97:39">s</name><operator pos:start="97:40" pos:end="97:41">-&gt;</operator><name pos:start="97:42" pos:end="97:48">enabled</name></name> <operator pos:start="97:50" pos:end="97:50">&amp;</operator> <operator pos:start="97:52" pos:end="97:52">~</operator><name pos:start="97:53" pos:end="97:61"><name pos:start="97:53" pos:end="97:53">s</name><operator pos:start="97:54" pos:end="97:55">-&gt;</operator><name pos:start="97:56" pos:end="97:61">is_fiq</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:14"><decl pos:start="99:9" pos:end="99:13"><type pos:start="99:9" pos:end="99:11"><name pos:start="99:9" pos:end="99:11">int</name></type> <name pos:start="99:13" pos:end="99:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="101:9" pos:end="101:22"><decl pos:start="101:9" pos:end="101:21"><type pos:start="101:9" pos:end="101:11"><name pos:start="101:9" pos:end="101:11">int</name></type> <name pos:start="101:13" pos:end="101:16">prio</name> <init pos:start="101:18" pos:end="101:21">= <expr pos:start="101:20" pos:end="101:21"><operator pos:start="101:20" pos:end="101:20">-</operator><literal type="number" pos:start="101:21" pos:end="101:21">1</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="103:9" pos:end="103:21"><decl pos:start="103:9" pos:end="103:20"><type pos:start="103:9" pos:end="103:11"><name pos:start="103:9" pos:end="103:11">int</name></type> <name pos:start="103:13" pos:end="103:15">irq</name> <init pos:start="103:17" pos:end="103:20">= <expr pos:start="103:19" pos:end="103:20"><operator pos:start="103:19" pos:end="103:19">-</operator><literal type="number" pos:start="103:20" pos:end="103:20">1</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="105:9" pos:end="121:9">for <control pos:start="105:13" pos:end="105:33">(<init pos:start="105:14" pos:end="105:20"><expr pos:start="105:14" pos:end="105:19"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:19">63</literal></expr>;</init> <condition pos:start="105:22" pos:end="105:28"><expr pos:start="105:22" pos:end="105:27"><name pos:start="105:22" pos:end="105:22">i</name> <operator pos:start="105:24" pos:end="105:25">&gt;=</operator> <literal type="number" pos:start="105:27" pos:end="105:27">0</literal></expr>;</condition> <incr pos:start="105:30" pos:end="105:32"><expr pos:start="105:30" pos:end="105:32"><operator pos:start="105:30" pos:end="105:31">--</operator><name pos:start="105:32" pos:end="105:32">i</name></expr></incr>)</control> <block pos:start="105:35" pos:end="121:9">{<block_content pos:start="107:13" pos:end="119:13">

            <if_stmt pos:start="107:13" pos:end="119:13"><if pos:start="107:13" pos:end="119:13">if <condition pos:start="107:16" pos:end="107:34">(<expr pos:start="107:17" pos:end="107:33"><name pos:start="107:17" pos:end="107:21">flags</name> <operator pos:start="107:23" pos:end="107:23">&amp;</operator> <operator pos:start="107:25" pos:end="107:25">(</operator><literal type="number" pos:start="107:26" pos:end="107:29">1ULL</literal><operator pos:start="107:30" pos:end="107:31">&lt;&lt;</operator><name pos:start="107:32" pos:end="107:32">i</name><operator pos:start="107:33" pos:end="107:33">)</operator></expr>)</condition> <block pos:start="107:36" pos:end="119:13">{<block_content pos:start="109:17" pos:end="117:17">

                <decl_stmt pos:start="109:17" pos:end="109:51"><decl pos:start="109:17" pos:end="109:50"><type pos:start="109:17" pos:end="109:19"><name pos:start="109:17" pos:end="109:19">int</name></type> <name pos:start="109:21" pos:end="109:28">irq_prio</name> <init pos:start="109:30" pos:end="109:50">= <expr pos:start="109:32" pos:end="109:50"><call pos:start="109:32" pos:end="109:50"><name pos:start="109:32" pos:end="109:44">imx_avic_prio</name><argument_list pos:start="109:45" pos:end="109:50">(<argument pos:start="109:46" pos:end="109:46"><expr pos:start="109:46" pos:end="109:46"><name pos:start="109:46" pos:end="109:46">s</name></expr></argument>, <argument pos:start="109:49" pos:end="109:49"><expr pos:start="109:49" pos:end="109:49"><name pos:start="109:49" pos:end="109:49">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="111:17" pos:end="117:17"><if pos:start="111:17" pos:end="117:17">if <condition pos:start="111:20" pos:end="111:36">(<expr pos:start="111:21" pos:end="111:35"><name pos:start="111:21" pos:end="111:28">irq_prio</name> <operator pos:start="111:30" pos:end="111:30">&gt;</operator> <name pos:start="111:32" pos:end="111:35">prio</name></expr>)</condition> <block pos:start="111:38" pos:end="117:17">{<block_content pos:start="113:21" pos:end="115:36">

                    <expr_stmt pos:start="113:21" pos:end="113:28"><expr pos:start="113:21" pos:end="113:27"><name pos:start="113:21" pos:end="113:23">irq</name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:27">i</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="115:21" pos:end="115:36"><expr pos:start="115:21" pos:end="115:35"><name pos:start="115:21" pos:end="115:24">prio</name> <operator pos:start="115:26" pos:end="115:26">=</operator> <name pos:start="115:28" pos:end="115:35">irq_prio</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="123:9" pos:end="129:9"><if pos:start="123:9" pos:end="129:9">if <condition pos:start="123:12" pos:end="123:21">(<expr pos:start="123:13" pos:end="123:20"><name pos:start="123:13" pos:end="123:15">irq</name> <operator pos:start="123:17" pos:end="123:18">&gt;=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>)</condition> <block pos:start="123:23" pos:end="129:9">{<block_content pos:start="125:13" pos:end="127:36">

            <expr_stmt pos:start="125:13" pos:end="125:40"><expr pos:start="125:13" pos:end="125:39"><call pos:start="125:13" pos:end="125:39"><name pos:start="125:13" pos:end="125:28">imx_avic_set_irq</name><argument_list pos:start="125:29" pos:end="125:39">(<argument pos:start="125:30" pos:end="125:30"><expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">s</name></expr></argument>, <argument pos:start="125:33" pos:end="125:35"><expr pos:start="125:33" pos:end="125:35"><name pos:start="125:33" pos:end="125:35">irq</name></expr></argument>, <argument pos:start="125:38" pos:end="125:38"><expr pos:start="125:38" pos:end="125:38"><literal type="number" pos:start="125:38" pos:end="125:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="127:13" pos:end="127:36">return <expr pos:start="127:20" pos:end="127:35"><name pos:start="127:20" pos:end="127:22">irq</name> <operator pos:start="127:24" pos:end="127:25">&lt;&lt;</operator> <literal type="number" pos:start="127:27" pos:end="127:28">16</literal> <operator pos:start="127:30" pos:end="127:30">|</operator> <name pos:start="127:32" pos:end="127:35">prio</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="131:9" pos:end="131:29">return <expr pos:start="131:16" pos:end="131:28"><literal type="number" pos:start="131:16" pos:end="131:28">0xffffffffULL</literal></expr>;</return>

    </block_content>}</block>

    <case pos:start="135:5" pos:end="135:12">case <expr pos:start="135:10" pos:end="135:11"><literal type="number" pos:start="135:10" pos:end="135:11">17</literal></expr>:</case><comment type="block" pos:start="135:13" pos:end="135:59">/* Fast Interrupt vector and status register */</comment>

    <block pos:start="137:5" pos:end="153:5">{<block_content pos:start="139:9" pos:end="151:29">

        <decl_stmt pos:start="139:9" pos:end="139:61"><decl pos:start="139:9" pos:end="139:60"><type pos:start="139:9" pos:end="139:16"><name pos:start="139:9" pos:end="139:16">uint64_t</name></type> <name pos:start="139:18" pos:end="139:22">flags</name> <init pos:start="139:24" pos:end="139:60">= <expr pos:start="139:26" pos:end="139:60"><name pos:start="139:26" pos:end="139:35"><name pos:start="139:26" pos:end="139:26">s</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:35">pending</name></name> <operator pos:start="139:37" pos:end="139:37">&amp;</operator> <name pos:start="139:39" pos:end="139:48"><name pos:start="139:39" pos:end="139:39">s</name><operator pos:start="139:40" pos:end="139:41">-&gt;</operator><name pos:start="139:42" pos:end="139:48">enabled</name></name> <operator pos:start="139:50" pos:end="139:50">&amp;</operator> <name pos:start="139:52" pos:end="139:60"><name pos:start="139:52" pos:end="139:52">s</name><operator pos:start="139:53" pos:end="139:54">-&gt;</operator><name pos:start="139:55" pos:end="139:60">is_fiq</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="141:9" pos:end="141:29"><decl pos:start="141:9" pos:end="141:28"><type pos:start="141:9" pos:end="141:11"><name pos:start="141:9" pos:end="141:11">int</name></type> <name pos:start="141:13" pos:end="141:13">i</name> <init pos:start="141:15" pos:end="141:28">= <expr pos:start="141:17" pos:end="141:28"><call pos:start="141:17" pos:end="141:28"><name pos:start="141:17" pos:end="141:21">ctz64</name><argument_list pos:start="141:22" pos:end="141:28">(<argument pos:start="141:23" pos:end="141:27"><expr pos:start="141:23" pos:end="141:27"><name pos:start="141:23" pos:end="141:27">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="143:9" pos:end="149:9"><if pos:start="143:9" pos:end="149:9">if <condition pos:start="143:12" pos:end="143:19">(<expr pos:start="143:13" pos:end="143:18"><name pos:start="143:13" pos:end="143:13">i</name> <operator pos:start="143:15" pos:end="143:15">&lt;</operator> <literal type="number" pos:start="143:17" pos:end="143:18">64</literal></expr>)</condition> <block pos:start="143:21" pos:end="149:9">{<block_content pos:start="145:13" pos:end="147:21">

            <expr_stmt pos:start="145:13" pos:end="145:43"><expr pos:start="145:13" pos:end="145:42"><call pos:start="145:13" pos:end="145:42"><name pos:start="145:13" pos:end="145:28">imx_avic_set_irq</name><argument_list pos:start="145:29" pos:end="145:42">(<argument pos:start="145:30" pos:end="145:35"><expr pos:start="145:30" pos:end="145:35"><name pos:start="145:30" pos:end="145:35">opaque</name></expr></argument>, <argument pos:start="145:38" pos:end="145:38"><expr pos:start="145:38" pos:end="145:38"><name pos:start="145:38" pos:end="145:38">i</name></expr></argument>, <argument pos:start="145:41" pos:end="145:41"><expr pos:start="145:41" pos:end="145:41"><literal type="number" pos:start="145:41" pos:end="145:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="147:13" pos:end="147:21">return <expr pos:start="147:20" pos:end="147:20"><name pos:start="147:20" pos:end="147:20">i</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="151:9" pos:end="151:29">return <expr pos:start="151:16" pos:end="151:28"><literal type="number" pos:start="151:16" pos:end="151:28">0xffffffffULL</literal></expr>;</return>

    </block_content>}</block>

    <case pos:start="155:5" pos:end="155:12">case <expr pos:start="155:10" pos:end="155:11"><literal type="number" pos:start="155:10" pos:end="155:11">18</literal></expr>:</case><comment type="block" pos:start="155:13" pos:end="155:48">/* Interrupt source register high */</comment>

        <return pos:start="157:9" pos:end="157:32">return <expr pos:start="157:16" pos:end="157:31"><name pos:start="157:16" pos:end="157:25"><name pos:start="157:16" pos:end="157:16">s</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:25">pending</name></name> <operator pos:start="157:27" pos:end="157:28">&gt;&gt;</operator> <literal type="number" pos:start="157:30" pos:end="157:31">32</literal></expr>;</return>



    <case pos:start="161:5" pos:end="161:12">case <expr pos:start="161:10" pos:end="161:11"><literal type="number" pos:start="161:10" pos:end="161:11">19</literal></expr>:</case><comment type="block" pos:start="161:13" pos:end="161:47">/* Interrupt source register low */</comment>

        <return pos:start="163:9" pos:end="163:42">return <expr pos:start="163:16" pos:end="163:41"><name pos:start="163:16" pos:end="163:25"><name pos:start="163:16" pos:end="163:16">s</name><operator pos:start="163:17" pos:end="163:18">-&gt;</operator><name pos:start="163:19" pos:end="163:25">pending</name></name> <operator pos:start="163:27" pos:end="163:27">&amp;</operator> <literal type="number" pos:start="163:29" pos:end="163:41">0xffffffffULL</literal></expr>;</return>



    <case pos:start="167:5" pos:end="167:12">case <expr pos:start="167:10" pos:end="167:11"><literal type="number" pos:start="167:10" pos:end="167:11">20</literal></expr>:</case><comment type="block" pos:start="167:13" pos:end="167:47">/* Interrupt Force Register high */</comment>

    <case pos:start="169:5" pos:end="169:12">case <expr pos:start="169:10" pos:end="169:11"><literal type="number" pos:start="169:10" pos:end="169:11">21</literal></expr>:</case><comment type="block" pos:start="169:13" pos:end="169:46">/* Interrupt Force Register low */</comment>

        <return pos:start="171:9" pos:end="171:17">return <expr pos:start="171:16" pos:end="171:16"><literal type="number" pos:start="171:16" pos:end="171:16">0</literal></expr>;</return>



    <case pos:start="175:5" pos:end="175:12">case <expr pos:start="175:10" pos:end="175:11"><literal type="number" pos:start="175:10" pos:end="175:11">22</literal></expr>:</case><comment type="block" pos:start="175:13" pos:end="175:56">/* Normal Interrupt Pending Register High */</comment>

        <return pos:start="177:9" pos:end="177:60">return <expr pos:start="177:16" pos:end="177:59"><operator pos:start="177:16" pos:end="177:16">(</operator><name pos:start="177:17" pos:end="177:26"><name pos:start="177:17" pos:end="177:17">s</name><operator pos:start="177:18" pos:end="177:19">-&gt;</operator><name pos:start="177:20" pos:end="177:26">pending</name></name> <operator pos:start="177:28" pos:end="177:28">&amp;</operator> <name pos:start="177:30" pos:end="177:39"><name pos:start="177:30" pos:end="177:30">s</name><operator pos:start="177:31" pos:end="177:32">-&gt;</operator><name pos:start="177:33" pos:end="177:39">enabled</name></name> <operator pos:start="177:41" pos:end="177:41">&amp;</operator> <operator pos:start="177:43" pos:end="177:43">~</operator><name pos:start="177:44" pos:end="177:52"><name pos:start="177:44" pos:end="177:44">s</name><operator pos:start="177:45" pos:end="177:46">-&gt;</operator><name pos:start="177:47" pos:end="177:52">is_fiq</name></name><operator pos:start="177:53" pos:end="177:53">)</operator> <operator pos:start="177:55" pos:end="177:56">&gt;&gt;</operator> <literal type="number" pos:start="177:58" pos:end="177:59">32</literal></expr>;</return>



    <case pos:start="181:5" pos:end="181:12">case <expr pos:start="181:10" pos:end="181:11"><literal type="number" pos:start="181:10" pos:end="181:11">23</literal></expr>:</case><comment type="block" pos:start="181:13" pos:end="181:55">/* Normal Interrupt Pending Register Low */</comment>

        <return pos:start="183:9" pos:end="183:70">return <expr pos:start="183:16" pos:end="183:69"><operator pos:start="183:16" pos:end="183:16">(</operator><name pos:start="183:17" pos:end="183:26"><name pos:start="183:17" pos:end="183:17">s</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:26">pending</name></name> <operator pos:start="183:28" pos:end="183:28">&amp;</operator> <name pos:start="183:30" pos:end="183:39"><name pos:start="183:30" pos:end="183:30">s</name><operator pos:start="183:31" pos:end="183:32">-&gt;</operator><name pos:start="183:33" pos:end="183:39">enabled</name></name> <operator pos:start="183:41" pos:end="183:41">&amp;</operator> <operator pos:start="183:43" pos:end="183:43">~</operator><name pos:start="183:44" pos:end="183:52"><name pos:start="183:44" pos:end="183:44">s</name><operator pos:start="183:45" pos:end="183:46">-&gt;</operator><name pos:start="183:47" pos:end="183:52">is_fiq</name></name><operator pos:start="183:53" pos:end="183:53">)</operator> <operator pos:start="183:55" pos:end="183:55">&amp;</operator> <literal type="number" pos:start="183:57" pos:end="183:69">0xffffffffULL</literal></expr>;</return>



    <case pos:start="187:5" pos:end="187:12">case <expr pos:start="187:10" pos:end="187:11"><literal type="number" pos:start="187:10" pos:end="187:11">24</literal></expr>:</case> <comment type="block" pos:start="187:14" pos:end="187:56">/* Fast Interrupt Pending Register High  */</comment>

        <return pos:start="189:9" pos:end="189:59">return <expr pos:start="189:16" pos:end="189:58"><operator pos:start="189:16" pos:end="189:16">(</operator><name pos:start="189:17" pos:end="189:26"><name pos:start="189:17" pos:end="189:17">s</name><operator pos:start="189:18" pos:end="189:19">-&gt;</operator><name pos:start="189:20" pos:end="189:26">pending</name></name> <operator pos:start="189:28" pos:end="189:28">&amp;</operator> <name pos:start="189:30" pos:end="189:39"><name pos:start="189:30" pos:end="189:30">s</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:39">enabled</name></name> <operator pos:start="189:41" pos:end="189:41">&amp;</operator> <name pos:start="189:43" pos:end="189:51"><name pos:start="189:43" pos:end="189:43">s</name><operator pos:start="189:44" pos:end="189:45">-&gt;</operator><name pos:start="189:46" pos:end="189:51">is_fiq</name></name><operator pos:start="189:52" pos:end="189:52">)</operator> <operator pos:start="189:54" pos:end="189:55">&gt;&gt;</operator> <literal type="number" pos:start="189:57" pos:end="189:58">32</literal></expr>;</return>



    <case pos:start="193:5" pos:end="193:12">case <expr pos:start="193:10" pos:end="193:11"><literal type="number" pos:start="193:10" pos:end="193:11">25</literal></expr>:</case> <comment type="block" pos:start="193:14" pos:end="193:55">/* Fast Interrupt Pending Register Low  */</comment>

        <return pos:start="195:9" pos:end="195:69">return <expr pos:start="195:16" pos:end="195:68"><operator pos:start="195:16" pos:end="195:16">(</operator><name pos:start="195:17" pos:end="195:26"><name pos:start="195:17" pos:end="195:17">s</name><operator pos:start="195:18" pos:end="195:19">-&gt;</operator><name pos:start="195:20" pos:end="195:26">pending</name></name> <operator pos:start="195:28" pos:end="195:28">&amp;</operator> <name pos:start="195:30" pos:end="195:39"><name pos:start="195:30" pos:end="195:30">s</name><operator pos:start="195:31" pos:end="195:32">-&gt;</operator><name pos:start="195:33" pos:end="195:39">enabled</name></name> <operator pos:start="195:41" pos:end="195:41">&amp;</operator> <name pos:start="195:43" pos:end="195:51"><name pos:start="195:43" pos:end="195:43">s</name><operator pos:start="195:44" pos:end="195:45">-&gt;</operator><name pos:start="195:46" pos:end="195:51">is_fiq</name></name><operator pos:start="195:52" pos:end="195:52">)</operator> <operator pos:start="195:54" pos:end="195:54">&amp;</operator> <literal type="number" pos:start="195:56" pos:end="195:68">0xffffffffULL</literal></expr>;</return>



    <case pos:start="199:5" pos:end="199:14">case <expr pos:start="199:10" pos:end="199:13"><literal type="number" pos:start="199:10" pos:end="199:13">0x40</literal></expr>:</case>            <comment type="block" pos:start="199:27" pos:end="199:62">/* AVIC vector 0, use for WFI WAR */</comment>

        <return pos:start="201:9" pos:end="201:19">return <expr pos:start="201:16" pos:end="201:18"><literal type="number" pos:start="201:16" pos:end="201:18">0x4</literal></expr>;</return>



    <default pos:start="205:5" pos:end="205:12">default:</default>

        <expr_stmt pos:start="207:9" pos:end="207:65"><expr pos:start="207:9" pos:end="207:64"><call pos:start="207:9" pos:end="207:64"><name pos:start="207:9" pos:end="207:15">IPRINTF</name><argument_list pos:start="207:16" pos:end="207:64">(<argument pos:start="207:17" pos:end="207:50"><expr pos:start="207:17" pos:end="207:50"><literal type="string" pos:start="207:17" pos:end="207:50">"imx_avic_read: Bad offset 0x%x\n"</literal></expr></argument>, <argument pos:start="207:53" pos:end="207:63"><expr pos:start="207:53" pos:end="207:63"><operator pos:start="207:53" pos:end="207:53">(</operator><name pos:start="207:54" pos:end="207:56">int</name><operator pos:start="207:57" pos:end="207:57">)</operator><name pos:start="207:58" pos:end="207:63">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="209:9" pos:end="209:17">return <expr pos:start="209:16" pos:end="209:16"><literal type="number" pos:start="209:16" pos:end="209:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
