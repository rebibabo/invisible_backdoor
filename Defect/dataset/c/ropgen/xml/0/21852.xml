<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21852.c" pos:tabs="8"><function pos:start="1:1" pos:end="205:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">ffat_decode</name><parameter_list pos:start="1:23" pos:end="3:59">(<parameter pos:start="1:24" pos:end="1:44"><decl pos:start="1:24" pos:end="1:44"><type pos:start="1:24" pos:end="1:44"><name pos:start="1:24" pos:end="1:37">AVCodecContext</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:44">avctx</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:50">void</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:56">data</name></decl></parameter>,

                       <parameter pos:start="3:24" pos:end="3:41"><decl pos:start="3:24" pos:end="3:41"><type pos:start="3:24" pos:end="3:41"><name pos:start="3:24" pos:end="3:26">int</name> <modifier pos:start="3:28" pos:end="3:28">*</modifier></type><name pos:start="3:29" pos:end="3:41">got_frame_ptr</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:58"><decl pos:start="3:44" pos:end="3:58"><type pos:start="3:44" pos:end="3:58"><name pos:start="3:44" pos:end="3:51">AVPacket</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:58">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="205:1">{<block_content pos:start="7:5" pos:end="203:20">

    <decl_stmt pos:start="7:5" pos:end="7:43"><decl pos:start="7:5" pos:end="7:42"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">ATDecodeContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">at</name> <init pos:start="7:25" pos:end="7:42">= <expr pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:42"><name pos:start="7:27" pos:end="7:31">avctx</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:42">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">AVFrame</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:18">frame</name> <init pos:start="9:20" pos:end="9:25">= <expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">data</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">pkt_size</name> <init pos:start="11:18" pos:end="11:30">= <expr pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:30"><name pos:start="11:20" pos:end="11:24">avpkt</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:30">size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">AVPacket</name></type> <name pos:start="13:14" pos:end="13:28">filtered_packet</name> <init pos:start="13:30" pos:end="13:34">= <expr pos:start="13:32" pos:end="13:34"><block pos:start="13:32" pos:end="13:34">{<expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">OSStatus</name></type> <name pos:start="15:14" pos:end="15:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:19">AudioBufferList</name></type> <name pos:start="17:21" pos:end="17:31">out_buffers</name></decl>;</decl_stmt>



    <if_stmt pos:start="21:5" pos:end="83:5"><if pos:start="21:5" pos:end="83:5">if <condition pos:start="21:8" pos:end="23:50">(<expr pos:start="21:9" pos:end="23:49"><name pos:start="21:9" pos:end="21:23"><name pos:start="21:9" pos:end="21:13">avctx</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:23">codec_id</name></name> <operator pos:start="21:25" pos:end="21:26">==</operator> <name pos:start="21:28" pos:end="21:42">AV_CODEC_ID_AAC</name> <operator pos:start="21:44" pos:end="21:45">&amp;&amp;</operator> <name pos:start="21:47" pos:end="21:57"><name pos:start="21:47" pos:end="21:51">avpkt</name><operator pos:start="21:52" pos:end="21:53">-&gt;</operator><name pos:start="21:54" pos:end="21:57">size</name></name> <operator pos:start="21:59" pos:end="21:59">&gt;</operator> <literal type="number" pos:start="21:61" pos:end="21:61">2</literal> <operator pos:start="21:63" pos:end="21:64">&amp;&amp;</operator>

        <operator pos:start="23:9" pos:end="23:9">(</operator><call pos:start="23:10" pos:end="23:29"><name pos:start="23:10" pos:end="23:16">AV_RB16</name><argument_list pos:start="23:17" pos:end="23:29">(<argument pos:start="23:18" pos:end="23:28"><expr pos:start="23:18" pos:end="23:28"><name pos:start="23:18" pos:end="23:28"><name pos:start="23:18" pos:end="23:22">avpkt</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:28">data</name></name></expr></argument>)</argument_list></call> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <literal type="number" pos:start="23:33" pos:end="23:38">0xfff0</literal><operator pos:start="23:39" pos:end="23:39">)</operator> <operator pos:start="23:41" pos:end="23:42">==</operator> <literal type="number" pos:start="23:44" pos:end="23:49">0xfff0</literal></expr>)</condition> <block pos:start="23:52" pos:end="83:5">{<block_content pos:start="25:9" pos:end="81:33">

        <decl_stmt pos:start="25:9" pos:end="25:34"><decl pos:start="25:9" pos:end="25:33"><type pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:16">AVPacket</name></type> <name pos:start="25:18" pos:end="25:27">filter_pkt</name> <init pos:start="25:29" pos:end="25:33">= <expr pos:start="25:31" pos:end="25:33"><block pos:start="25:31" pos:end="25:33">{<expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="49:9"><if pos:start="27:9" pos:end="49:9">if <condition pos:start="27:12" pos:end="27:21">(<expr pos:start="27:13" pos:end="27:20"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:20"><name pos:start="27:14" pos:end="27:15">at</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:20">bsf</name></name></expr>)</condition> <block pos:start="27:23" pos:end="49:9">{<block_content pos:start="29:13" pos:end="47:13">

            <decl_stmt pos:start="29:13" pos:end="29:79"><decl pos:start="29:13" pos:end="29:78"><type pos:start="29:13" pos:end="29:37"><specifier pos:start="29:13" pos:end="29:17">const</specifier> <name pos:start="29:19" pos:end="29:35">AVBitStreamFilter</name> <modifier pos:start="29:37" pos:end="29:37">*</modifier></type><name pos:start="29:38" pos:end="29:40">bsf</name> <init pos:start="29:42" pos:end="29:78">= <expr pos:start="29:44" pos:end="29:78"><call pos:start="29:44" pos:end="29:78"><name pos:start="29:44" pos:end="29:61">av_bsf_get_by_name</name><argument_list pos:start="29:62" pos:end="29:78">(<argument pos:start="29:63" pos:end="29:77"><expr pos:start="29:63" pos:end="29:77"><literal type="string" pos:start="29:63" pos:end="29:77">"aac_adtstoasc"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="31:13" pos:end="33:45"><if pos:start="31:13" pos:end="33:45">if<condition pos:start="31:15" pos:end="31:20">(<expr pos:start="31:16" pos:end="31:19"><operator pos:start="31:16" pos:end="31:16">!</operator><name pos:start="31:17" pos:end="31:19">bsf</name></expr>)</condition><block type="pseudo" pos:start="33:17" pos:end="33:45"><block_content pos:start="33:17" pos:end="33:45">

                <return pos:start="33:17" pos:end="33:45">return <expr pos:start="33:24" pos:end="33:44"><name pos:start="33:24" pos:end="33:44">AVERROR_BSF_NOT_FOUND</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="35:13" pos:end="37:27"><if pos:start="35:13" pos:end="37:27">if <condition pos:start="35:16" pos:end="35:52">(<expr pos:start="35:17" pos:end="35:51"><operator pos:start="35:17" pos:end="35:17">(</operator><name pos:start="35:18" pos:end="35:20">ret</name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:50"><name pos:start="35:24" pos:end="35:35">av_bsf_alloc</name><argument_list pos:start="35:36" pos:end="35:50">(<argument pos:start="35:37" pos:end="35:39"><expr pos:start="35:37" pos:end="35:39"><name pos:start="35:37" pos:end="35:39">bsf</name></expr></argument>, <argument pos:start="35:42" pos:end="35:49"><expr pos:start="35:42" pos:end="35:49"><operator pos:start="35:42" pos:end="35:42">&amp;</operator><name pos:start="35:43" pos:end="35:49"><name pos:start="35:43" pos:end="35:44">at</name><operator pos:start="35:45" pos:end="35:46">-&gt;</operator><name pos:start="35:47" pos:end="35:49">bsf</name></name></expr></argument>)</argument_list></call><operator pos:start="35:51" pos:end="35:51">)</operator></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:27"><block_content pos:start="37:17" pos:end="37:27">

                <return pos:start="37:17" pos:end="37:27">return <expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:26">ret</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="47:13">if <condition pos:start="39:16" pos:end="41:51">(<expr pos:start="39:17" pos:end="41:50"><operator pos:start="39:17" pos:end="39:17">(</operator><operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:21">ret</name> <operator pos:start="39:23" pos:end="39:23">=</operator> <call pos:start="39:25" pos:end="39:79"><name pos:start="39:25" pos:end="39:55">avcodec_parameters_from_context</name><argument_list pos:start="39:56" pos:end="39:79">(<argument pos:start="39:57" pos:end="39:71"><expr pos:start="39:57" pos:end="39:71"><name pos:start="39:57" pos:end="39:71"><name pos:start="39:57" pos:end="39:58">at</name><operator pos:start="39:59" pos:end="39:60">-&gt;</operator><name pos:start="39:61" pos:end="39:63">bsf</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:71">par_in</name></name></expr></argument>, <argument pos:start="39:74" pos:end="39:78"><expr pos:start="39:74" pos:end="39:78"><name pos:start="39:74" pos:end="39:78">avctx</name></expr></argument>)</argument_list></call><operator pos:start="39:80" pos:end="39:80">)</operator> <operator pos:start="39:82" pos:end="39:82">&lt;</operator> <literal type="number" pos:start="39:84" pos:end="39:84">0</literal><operator pos:start="39:85" pos:end="39:85">)</operator> <operator pos:start="39:87" pos:end="39:88">||</operator>

                <operator pos:start="41:17" pos:end="41:17">(</operator><operator pos:start="41:18" pos:end="41:18">(</operator><name pos:start="41:19" pos:end="41:21">ret</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:44"><name pos:start="41:25" pos:end="41:35">av_bsf_init</name><argument_list pos:start="41:36" pos:end="41:44">(<argument pos:start="41:37" pos:end="41:43"><expr pos:start="41:37" pos:end="41:43"><name pos:start="41:37" pos:end="41:43"><name pos:start="41:37" pos:end="41:38">at</name><operator pos:start="41:39" pos:end="41:40">-&gt;</operator><name pos:start="41:41" pos:end="41:43">bsf</name></name></expr></argument>)</argument_list></call><operator pos:start="41:45" pos:end="41:45">)</operator> <operator pos:start="41:47" pos:end="41:47">&lt;</operator> <literal type="number" pos:start="41:49" pos:end="41:49">0</literal><operator pos:start="41:50" pos:end="41:50">)</operator></expr>)</condition> <block pos:start="41:53" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:27">

                <expr_stmt pos:start="43:17" pos:end="43:38"><expr pos:start="43:17" pos:end="43:37"><call pos:start="43:17" pos:end="43:37"><name pos:start="43:17" pos:end="43:27">av_bsf_free</name><argument_list pos:start="43:28" pos:end="43:37">(<argument pos:start="43:29" pos:end="43:36"><expr pos:start="43:29" pos:end="43:36"><operator pos:start="43:29" pos:end="43:29">&amp;</operator><name pos:start="43:30" pos:end="43:36"><name pos:start="43:30" pos:end="43:31">at</name><operator pos:start="43:32" pos:end="43:33">-&gt;</operator><name pos:start="43:34" pos:end="43:36">bsf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="53:9" pos:end="55:23"><if pos:start="53:9" pos:end="55:23">if <condition pos:start="53:12" pos:end="53:58">(<expr pos:start="53:13" pos:end="53:57"><operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:16">ret</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:52"><name pos:start="53:20" pos:end="53:32">av_packet_ref</name><argument_list pos:start="53:33" pos:end="53:52">(<argument pos:start="53:34" pos:end="53:44"><expr pos:start="53:34" pos:end="53:44"><operator pos:start="53:34" pos:end="53:34">&amp;</operator><name pos:start="53:35" pos:end="53:44">filter_pkt</name></expr></argument>, <argument pos:start="53:47" pos:end="53:51"><expr pos:start="53:47" pos:end="53:51"><name pos:start="53:47" pos:end="53:51">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="53:53" pos:end="53:53">)</operator> <operator pos:start="53:55" pos:end="53:55">&lt;</operator> <literal type="number" pos:start="53:57" pos:end="53:57">0</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:23"><block_content pos:start="55:13" pos:end="55:23">

            <return pos:start="55:13" pos:end="55:23">return <expr pos:start="55:20" pos:end="55:22"><name pos:start="55:20" pos:end="55:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="59:9" pos:end="65:9"><if pos:start="59:9" pos:end="65:9">if <condition pos:start="59:12" pos:end="59:65">(<expr pos:start="59:13" pos:end="59:64"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:16">ret</name> <operator pos:start="59:18" pos:end="59:18">=</operator> <call pos:start="59:20" pos:end="59:59"><name pos:start="59:20" pos:end="59:37">av_bsf_send_packet</name><argument_list pos:start="59:38" pos:end="59:59">(<argument pos:start="59:39" pos:end="59:45"><expr pos:start="59:39" pos:end="59:45"><name pos:start="59:39" pos:end="59:45"><name pos:start="59:39" pos:end="59:40">at</name><operator pos:start="59:41" pos:end="59:42">-&gt;</operator><name pos:start="59:43" pos:end="59:45">bsf</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:58"><expr pos:start="59:48" pos:end="59:58"><operator pos:start="59:48" pos:end="59:48">&amp;</operator><name pos:start="59:49" pos:end="59:58">filter_pkt</name></expr></argument>)</argument_list></call><operator pos:start="59:60" pos:end="59:60">)</operator> <operator pos:start="59:62" pos:end="59:62">&lt;</operator> <literal type="number" pos:start="59:64" pos:end="59:64">0</literal></expr>)</condition> <block pos:start="59:67" pos:end="65:9">{<block_content pos:start="61:13" pos:end="63:23">

            <expr_stmt pos:start="61:13" pos:end="61:41"><expr pos:start="61:13" pos:end="61:40"><call pos:start="61:13" pos:end="61:40"><name pos:start="61:13" pos:end="61:27">av_packet_unref</name><argument_list pos:start="61:28" pos:end="61:40">(<argument pos:start="61:29" pos:end="61:39"><expr pos:start="61:29" pos:end="61:39"><operator pos:start="61:29" pos:end="61:29">&amp;</operator><name pos:start="61:30" pos:end="61:39">filter_pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:23">return <expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="69:9" pos:end="71:23"><if pos:start="69:9" pos:end="71:23">if <condition pos:start="69:12" pos:end="69:73">(<expr pos:start="69:13" pos:end="69:72"><operator pos:start="69:13" pos:end="69:13">(</operator><name pos:start="69:14" pos:end="69:16">ret</name> <operator pos:start="69:18" pos:end="69:18">=</operator> <call pos:start="69:20" pos:end="69:67"><name pos:start="69:20" pos:end="69:40">av_bsf_receive_packet</name><argument_list pos:start="69:41" pos:end="69:67">(<argument pos:start="69:42" pos:end="69:48"><expr pos:start="69:42" pos:end="69:48"><name pos:start="69:42" pos:end="69:48"><name pos:start="69:42" pos:end="69:43">at</name><operator pos:start="69:44" pos:end="69:45">-&gt;</operator><name pos:start="69:46" pos:end="69:48">bsf</name></name></expr></argument>, <argument pos:start="69:51" pos:end="69:66"><expr pos:start="69:51" pos:end="69:66"><operator pos:start="69:51" pos:end="69:51">&amp;</operator><name pos:start="69:52" pos:end="69:66">filtered_packet</name></expr></argument>)</argument_list></call><operator pos:start="69:68" pos:end="69:68">)</operator> <operator pos:start="69:70" pos:end="69:70">&lt;</operator> <literal type="number" pos:start="69:72" pos:end="69:72">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:23"><block_content pos:start="71:13" pos:end="71:23">

            <return pos:start="71:13" pos:end="71:23">return <expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">ret</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="75:9" pos:end="75:52"><expr pos:start="75:9" pos:end="75:51"><name pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:10">at</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:21">extradata</name></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <name pos:start="75:25" pos:end="75:51"><name pos:start="75:25" pos:end="75:26">at</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:31">bsf</name><operator pos:start="75:32" pos:end="75:33">-&gt;</operator><name pos:start="75:34" pos:end="75:40">par_out</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:51">extradata</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:62"><expr pos:start="77:9" pos:end="77:61"><name pos:start="77:9" pos:end="77:26"><name pos:start="77:9" pos:end="77:10">at</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:26">extradata_size</name></name> <operator pos:start="77:28" pos:end="77:28">=</operator> <name pos:start="77:30" pos:end="77:61"><name pos:start="77:30" pos:end="77:31">at</name><operator pos:start="77:32" pos:end="77:33">-&gt;</operator><name pos:start="77:34" pos:end="77:36">bsf</name><operator pos:start="77:37" pos:end="77:38">-&gt;</operator><name pos:start="77:39" pos:end="77:45">par_out</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:61">extradata_size</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:33"><expr pos:start="81:9" pos:end="81:32"><name pos:start="81:9" pos:end="81:13">avpkt</name> <operator pos:start="81:15" pos:end="81:15">=</operator> <operator pos:start="81:17" pos:end="81:17">&amp;</operator><name pos:start="81:18" pos:end="81:32">filtered_packet</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="97:5"><if pos:start="87:5" pos:end="97:5">if <condition pos:start="87:8" pos:end="87:23">(<expr pos:start="87:9" pos:end="87:22"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:22"><name pos:start="87:10" pos:end="87:11">at</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:22">converter</name></name></expr>)</condition> <block pos:start="87:25" pos:end="97:5">{<block_content pos:start="89:9" pos:end="95:9">

        <if_stmt pos:start="89:9" pos:end="95:9"><if pos:start="89:9" pos:end="95:9">if <condition pos:start="89:12" pos:end="89:58">(<expr pos:start="89:13" pos:end="89:57"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:16">ret</name> <operator pos:start="89:18" pos:end="89:18">=</operator> <call pos:start="89:20" pos:end="89:52"><name pos:start="89:20" pos:end="89:38">ffat_create_decoder</name><argument_list pos:start="89:39" pos:end="89:52">(<argument pos:start="89:40" pos:end="89:44"><expr pos:start="89:40" pos:end="89:44"><name pos:start="89:40" pos:end="89:44">avctx</name></expr></argument>, <argument pos:start="89:47" pos:end="89:51"><expr pos:start="89:47" pos:end="89:51"><name pos:start="89:47" pos:end="89:51">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="89:53" pos:end="89:53">)</operator> <operator pos:start="89:55" pos:end="89:55">&lt;</operator> <literal type="number" pos:start="89:57" pos:end="89:57">0</literal></expr>)</condition> <block pos:start="89:60" pos:end="95:9">{<block_content pos:start="91:13" pos:end="93:23">

            <expr_stmt pos:start="91:13" pos:end="91:46"><expr pos:start="91:13" pos:end="91:45"><call pos:start="91:13" pos:end="91:45"><name pos:start="91:13" pos:end="91:27">av_packet_unref</name><argument_list pos:start="91:28" pos:end="91:45">(<argument pos:start="91:29" pos:end="91:44"><expr pos:start="91:29" pos:end="91:44"><operator pos:start="91:29" pos:end="91:29">&amp;</operator><name pos:start="91:30" pos:end="91:44">filtered_packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="93:13" pos:end="93:23">return <expr pos:start="93:20" pos:end="93:22"><name pos:start="93:20" pos:end="93:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="101:5" pos:end="119:6"><expr pos:start="101:5" pos:end="119:5"><name pos:start="101:5" pos:end="101:15">out_buffers</name> <operator pos:start="101:17" pos:end="101:17">=</operator> <operator pos:start="101:19" pos:end="101:19">(</operator><name pos:start="101:20" pos:end="101:34">AudioBufferList</name><operator pos:start="101:35" pos:end="101:35">)</operator><block pos:start="101:36" pos:end="119:5">{

        <expr pos:start="103:9" pos:end="103:27"><operator pos:start="103:9" pos:end="103:9">.</operator><name pos:start="103:10" pos:end="103:23">mNumberBuffers</name> <operator pos:start="103:25" pos:end="103:25">=</operator> <literal type="number" pos:start="103:27" pos:end="103:27">1</literal></expr>,

        <expr pos:start="105:9" pos:end="117:9"><operator pos:start="105:9" pos:end="105:9">.</operator><name pos:start="105:10" pos:end="105:17">mBuffers</name> <operator pos:start="105:19" pos:end="105:19">=</operator> <block pos:start="105:21" pos:end="117:9">{

            <expr pos:start="107:13" pos:end="115:13"><block pos:start="107:13" pos:end="115:13">{

                <expr pos:start="109:17" pos:end="109:50"><operator pos:start="109:17" pos:end="109:17">.</operator><name pos:start="109:18" pos:end="109:32">mNumberChannels</name> <operator pos:start="109:34" pos:end="109:34">=</operator> <name pos:start="109:36" pos:end="109:50"><name pos:start="109:36" pos:end="109:40">avctx</name><operator pos:start="109:41" pos:end="109:42">-&gt;</operator><name pos:start="109:43" pos:end="109:50">channels</name></name></expr>,

                <expr pos:start="111:17" pos:end="113:50"><operator pos:start="111:17" pos:end="111:17">.</operator><name pos:start="111:18" pos:end="111:30">mDataByteSize</name> <operator pos:start="111:32" pos:end="111:32">=</operator> <call pos:start="111:34" pos:end="111:75"><name pos:start="111:34" pos:end="111:56">av_get_bytes_per_sample</name><argument_list pos:start="111:57" pos:end="111:75">(<argument pos:start="111:58" pos:end="111:74"><expr pos:start="111:58" pos:end="111:74"><name pos:start="111:58" pos:end="111:74"><name pos:start="111:58" pos:end="111:62">avctx</name><operator pos:start="111:63" pos:end="111:64">-&gt;</operator><name pos:start="111:65" pos:end="111:74">sample_fmt</name></name></expr></argument>)</argument_list></call> <operator pos:start="111:77" pos:end="111:77">*</operator> <name pos:start="111:79" pos:end="111:95"><name pos:start="111:79" pos:end="111:83">avctx</name><operator pos:start="111:84" pos:end="111:85">-&gt;</operator><name pos:start="111:86" pos:end="111:95">frame_size</name></name>

                                 <operator pos:start="113:34" pos:end="113:34">*</operator> <name pos:start="113:36" pos:end="113:50"><name pos:start="113:36" pos:end="113:40">avctx</name><operator pos:start="113:41" pos:end="113:42">-&gt;</operator><name pos:start="113:43" pos:end="113:50">channels</name></name></expr>,

            }</block></expr>

        }</block></expr>

    }</block></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:37"><expr pos:start="123:5" pos:end="123:36"><call pos:start="123:5" pos:end="123:36"><name pos:start="123:5" pos:end="123:19">av_packet_unref</name><argument_list pos:start="123:20" pos:end="123:36">(<argument pos:start="123:21" pos:end="123:35"><expr pos:start="123:21" pos:end="123:35"><operator pos:start="123:21" pos:end="123:21">&amp;</operator><name pos:start="123:22" pos:end="123:35"><name pos:start="123:22" pos:end="123:23">at</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:35">new_in_pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="143:5"><if pos:start="127:5" pos:end="139:5">if <condition pos:start="127:8" pos:end="127:20">(<expr pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:19"><name pos:start="127:9" pos:end="127:13">avpkt</name><operator pos:start="127:14" pos:end="127:15">-&gt;</operator><name pos:start="127:16" pos:end="127:19">size</name></name></expr>)</condition> <block pos:start="127:22" pos:end="139:5">{<block_content pos:start="129:9" pos:end="137:9">

        <if_stmt pos:start="129:9" pos:end="137:9"><if pos:start="129:9" pos:end="133:9">if <condition pos:start="129:12" pos:end="129:33">(<expr pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:32"><name pos:start="129:13" pos:end="129:27">filtered_packet</name><operator pos:start="129:28" pos:end="129:28">.</operator><name pos:start="129:29" pos:end="129:32">data</name></name></expr>)</condition> <block pos:start="129:35" pos:end="133:9">{<block_content pos:start="131:13" pos:end="131:45">

            <expr_stmt pos:start="131:13" pos:end="131:45"><expr pos:start="131:13" pos:end="131:44"><name pos:start="131:13" pos:end="131:26"><name pos:start="131:13" pos:end="131:14">at</name><operator pos:start="131:15" pos:end="131:16">-&gt;</operator><name pos:start="131:17" pos:end="131:26">new_in_pkt</name></name> <operator pos:start="131:28" pos:end="131:28">=</operator> <name pos:start="131:30" pos:end="131:44">filtered_packet</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="133:11" pos:end="137:9">else if <condition pos:start="133:19" pos:end="133:69">(<expr pos:start="133:20" pos:end="133:68"><operator pos:start="133:20" pos:end="133:20">(</operator><name pos:start="133:21" pos:end="133:23">ret</name> <operator pos:start="133:25" pos:end="133:25">=</operator> <call pos:start="133:27" pos:end="133:63"><name pos:start="133:27" pos:end="133:39">av_packet_ref</name><argument_list pos:start="133:40" pos:end="133:63">(<argument pos:start="133:41" pos:end="133:55"><expr pos:start="133:41" pos:end="133:55"><operator pos:start="133:41" pos:end="133:41">&amp;</operator><name pos:start="133:42" pos:end="133:55"><name pos:start="133:42" pos:end="133:43">at</name><operator pos:start="133:44" pos:end="133:45">-&gt;</operator><name pos:start="133:46" pos:end="133:55">new_in_pkt</name></name></expr></argument>, <argument pos:start="133:58" pos:end="133:62"><expr pos:start="133:58" pos:end="133:62"><name pos:start="133:58" pos:end="133:62">avpkt</name></expr></argument>)</argument_list></call><operator pos:start="133:64" pos:end="133:64">)</operator> <operator pos:start="133:66" pos:end="133:66">&lt;</operator> <literal type="number" pos:start="133:68" pos:end="133:68">0</literal></expr>)</condition> <block pos:start="133:71" pos:end="137:9">{<block_content pos:start="135:13" pos:end="135:23">

            <return pos:start="135:13" pos:end="135:23">return <expr pos:start="135:20" pos:end="135:22"><name pos:start="135:20" pos:end="135:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="139:7" pos:end="143:5">else <block pos:start="139:12" pos:end="143:5">{<block_content pos:start="141:9" pos:end="141:20">

        <expr_stmt pos:start="141:9" pos:end="141:20"><expr pos:start="141:9" pos:end="141:19"><name pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:10">at</name><operator pos:start="141:11" pos:end="141:12">-&gt;</operator><name pos:start="141:13" pos:end="141:15">eof</name></name> <operator pos:start="141:17" pos:end="141:17">=</operator> <literal type="number" pos:start="141:19" pos:end="141:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:44"><expr pos:start="147:5" pos:end="147:43"><name pos:start="147:5" pos:end="147:22"><name pos:start="147:5" pos:end="147:9">frame</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:22">sample_rate</name></name> <operator pos:start="147:24" pos:end="147:24">=</operator> <name pos:start="147:26" pos:end="147:43"><name pos:start="147:26" pos:end="147:30">avctx</name><operator pos:start="147:31" pos:end="147:32">-&gt;</operator><name pos:start="147:33" pos:end="147:43">sample_rate</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="151:5" pos:end="151:42"><expr pos:start="151:5" pos:end="151:41"><name pos:start="151:5" pos:end="151:21"><name pos:start="151:5" pos:end="151:9">frame</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:21">nb_samples</name></name> <operator pos:start="151:23" pos:end="151:23">=</operator> <name pos:start="151:25" pos:end="151:41"><name pos:start="151:25" pos:end="151:29">avctx</name><operator pos:start="151:30" pos:end="151:31">-&gt;</operator><name pos:start="151:32" pos:end="151:41">frame_size</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="155:5" pos:end="155:53"><expr pos:start="155:5" pos:end="155:52"><name pos:start="155:5" pos:end="155:27"><name pos:start="155:5" pos:end="155:15">out_buffers</name><operator pos:start="155:16" pos:end="155:16">.</operator><name pos:start="155:17" pos:end="155:24">mBuffers</name><index pos:start="155:25" pos:end="155:27">[<expr pos:start="155:26" pos:end="155:26"><literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>]</index></name><operator pos:start="155:28" pos:end="155:28">.</operator><name pos:start="155:29" pos:end="155:33">mData</name> <operator pos:start="155:35" pos:end="155:35">=</operator> <name pos:start="155:37" pos:end="155:52"><name pos:start="155:37" pos:end="155:38">at</name><operator pos:start="155:39" pos:end="155:40">-&gt;</operator><name pos:start="155:41" pos:end="155:52">decoded_data</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="159:5" pos:end="161:82"><expr pos:start="159:5" pos:end="161:81"><name pos:start="159:5" pos:end="159:7">ret</name> <operator pos:start="159:9" pos:end="159:9">=</operator> <call pos:start="159:11" pos:end="161:81"><name pos:start="159:11" pos:end="159:41">AudioConverterFillComplexBuffer</name><argument_list pos:start="159:42" pos:end="161:81">(<argument pos:start="159:43" pos:end="159:55"><expr pos:start="159:43" pos:end="159:55"><name pos:start="159:43" pos:end="159:55"><name pos:start="159:43" pos:end="159:44">at</name><operator pos:start="159:45" pos:end="159:46">-&gt;</operator><name pos:start="159:47" pos:end="159:55">converter</name></name></expr></argument>, <argument pos:start="159:58" pos:end="159:77"><expr pos:start="159:58" pos:end="159:77"><name pos:start="159:58" pos:end="159:77">ffat_decode_callback</name></expr></argument>, <argument pos:start="159:80" pos:end="159:84"><expr pos:start="159:80" pos:end="159:84"><name pos:start="159:80" pos:end="159:84">avctx</name></expr></argument>,

                                          <argument pos:start="161:43" pos:end="161:60"><expr pos:start="161:43" pos:end="161:60"><operator pos:start="161:43" pos:end="161:43">&amp;</operator><name pos:start="161:44" pos:end="161:60"><name pos:start="161:44" pos:end="161:48">frame</name><operator pos:start="161:49" pos:end="161:50">-&gt;</operator><name pos:start="161:51" pos:end="161:60">nb_samples</name></name></expr></argument>, <argument pos:start="161:63" pos:end="161:74"><expr pos:start="161:63" pos:end="161:74"><operator pos:start="161:63" pos:end="161:63">&amp;</operator><name pos:start="161:64" pos:end="161:74">out_buffers</name></expr></argument>, <argument pos:start="161:77" pos:end="161:80"><expr pos:start="161:77" pos:end="161:80"><name pos:start="161:77" pos:end="161:80">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="199:5"><if pos:start="163:5" pos:end="191:5">if <condition pos:start="163:8" pos:end="163:48">(<expr pos:start="163:9" pos:end="163:47"><operator pos:start="163:9" pos:end="163:9">(</operator><operator pos:start="163:10" pos:end="163:10">!</operator><name pos:start="163:11" pos:end="163:13">ret</name> <operator pos:start="163:15" pos:end="163:16">||</operator> <name pos:start="163:18" pos:end="163:20">ret</name> <operator pos:start="163:22" pos:end="163:23">==</operator> <literal type="number" pos:start="163:25" pos:end="163:25">1</literal><operator pos:start="163:26" pos:end="163:26">)</operator> <operator pos:start="163:28" pos:end="163:29">&amp;&amp;</operator> <name pos:start="163:31" pos:end="163:47"><name pos:start="163:31" pos:end="163:35">frame</name><operator pos:start="163:36" pos:end="163:37">-&gt;</operator><name pos:start="163:38" pos:end="163:47">nb_samples</name></name></expr>)</condition> <block pos:start="163:50" pos:end="191:5">{<block_content pos:start="165:9" pos:end="189:9">

        <if_stmt pos:start="165:9" pos:end="167:23"><if pos:start="165:9" pos:end="167:23">if <condition pos:start="165:12" pos:end="165:55">(<expr pos:start="165:13" pos:end="165:54"><operator pos:start="165:13" pos:end="165:13">(</operator><name pos:start="165:14" pos:end="165:16">ret</name> <operator pos:start="165:18" pos:end="165:18">=</operator> <call pos:start="165:20" pos:end="165:49"><name pos:start="165:20" pos:end="165:32">ff_get_buffer</name><argument_list pos:start="165:33" pos:end="165:49">(<argument pos:start="165:34" pos:end="165:38"><expr pos:start="165:34" pos:end="165:38"><name pos:start="165:34" pos:end="165:38">avctx</name></expr></argument>, <argument pos:start="165:41" pos:end="165:45"><expr pos:start="165:41" pos:end="165:45"><name pos:start="165:41" pos:end="165:45">frame</name></expr></argument>, <argument pos:start="165:48" pos:end="165:48"><expr pos:start="165:48" pos:end="165:48"><literal type="number" pos:start="165:48" pos:end="165:48">0</literal></expr></argument>)</argument_list></call><operator pos:start="165:50" pos:end="165:50">)</operator> <operator pos:start="165:52" pos:end="165:52">&lt;</operator> <literal type="number" pos:start="165:54" pos:end="165:54">0</literal></expr>)</condition><block type="pseudo" pos:start="167:13" pos:end="167:23"><block_content pos:start="167:13" pos:end="167:23">

            <return pos:start="167:13" pos:end="167:23">return <expr pos:start="167:20" pos:end="167:22"><name pos:start="167:20" pos:end="167:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:40"><expr pos:start="169:9" pos:end="169:39"><call pos:start="169:9" pos:end="169:39"><name pos:start="169:9" pos:end="169:25">ffat_copy_samples</name><argument_list pos:start="169:26" pos:end="169:39">(<argument pos:start="169:27" pos:end="169:31"><expr pos:start="169:27" pos:end="169:31"><name pos:start="169:27" pos:end="169:31">avctx</name></expr></argument>, <argument pos:start="169:34" pos:end="169:38"><expr pos:start="169:34" pos:end="169:38"><name pos:start="169:34" pos:end="169:38">frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:27"><expr pos:start="171:9" pos:end="171:26"><operator pos:start="171:9" pos:end="171:9">*</operator><name pos:start="171:10" pos:end="171:22">got_frame_ptr</name> <operator pos:start="171:24" pos:end="171:24">=</operator> <literal type="number" pos:start="171:26" pos:end="171:26">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="173:9" pos:end="189:9"><if pos:start="173:9" pos:end="189:9">if <condition pos:start="173:12" pos:end="173:43">(<expr pos:start="173:13" pos:end="173:42"><name pos:start="173:13" pos:end="173:24"><name pos:start="173:13" pos:end="173:14">at</name><operator pos:start="173:15" pos:end="173:16">-&gt;</operator><name pos:start="173:17" pos:end="173:24">last_pts</name></name> <operator pos:start="173:26" pos:end="173:27">!=</operator> <name pos:start="173:29" pos:end="173:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="173:45" pos:end="189:9">{<block_content pos:start="175:13" pos:end="187:38">

            <expr_stmt pos:start="175:13" pos:end="178:0"><expr pos:start="175:13" pos:end="175:37"><name pos:start="175:13" pos:end="175:22"><name pos:start="175:13" pos:end="175:17">frame</name><operator pos:start="175:18" pos:end="175:19">-&gt;</operator><name pos:start="175:20" pos:end="175:22">pts</name></name> <operator pos:start="175:24" pos:end="175:24">=</operator> <name pos:start="175:26" pos:end="175:37"><name pos:start="175:26" pos:end="175:27">at</name><operator pos:start="175:28" pos:end="175:29">-&gt;</operator><name pos:start="175:30" pos:end="175:37">last_pts</name></name></expr>;</expr_stmt>

<cpp:if pos:start="177:1" pos:end="177:18">#<cpp:directive pos:start="177:2" pos:end="177:3">if</cpp:directive> <expr pos:start="177:5" pos:end="177:18"><name pos:start="177:5" pos:end="177:18">FF_API_PKT_PTS</name></expr></cpp:if>

<decl_stmt pos:start="179:1" pos:end="181:42"><decl pos:start="179:1" pos:end="181:41"><type pos:start="179:1" pos:end="179:31"><name pos:start="179:1" pos:end="179:31">FF_DISABLE_DEPRECATION_WARNINGS</name></type>

            <name pos:start="181:13" pos:end="181:26"><name pos:start="181:13" pos:end="181:17">frame</name><operator pos:start="181:18" pos:end="181:19">-&gt;</operator><name pos:start="181:20" pos:end="181:26">pkt_pts</name></name> <init pos:start="181:28" pos:end="181:41">= <expr pos:start="181:30" pos:end="181:41"><name pos:start="181:30" pos:end="181:41"><name pos:start="181:30" pos:end="181:31">at</name><operator pos:start="181:32" pos:end="181:33">-&gt;</operator><name pos:start="181:34" pos:end="181:41">last_pts</name></name></expr></init></decl>;</decl_stmt>

<decl_stmt pos:start="183:1" pos:end="187:38"><decl pos:start="183:1" pos:end="187:37"><type pos:start="183:1" pos:end="186:0"><name pos:start="183:1" pos:end="186:0">FF_ENABLE_DEPRECATION_WARNINGS</name></type>

<cpp:endif pos:start="185:1" pos:end="185:6">#<cpp:directive pos:start="185:2" pos:end="185:6">endif</cpp:directive></cpp:endif>

            <name pos:start="187:13" pos:end="187:24"><name pos:start="187:13" pos:end="187:14">at</name><operator pos:start="187:15" pos:end="187:16">-&gt;</operator><name pos:start="187:17" pos:end="187:24">last_pts</name></name> <init pos:start="187:26" pos:end="187:37">= <expr pos:start="187:28" pos:end="187:37"><name pos:start="187:28" pos:end="187:37"><name pos:start="187:28" pos:end="187:32">avpkt</name><operator pos:start="187:33" pos:end="187:34">-&gt;</operator><name pos:start="187:35" pos:end="187:37">pts</name></name></expr></init></decl>;</decl_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="191:7" pos:end="195:5">else if <condition pos:start="191:15" pos:end="191:31">(<expr pos:start="191:16" pos:end="191:30"><name pos:start="191:16" pos:end="191:18">ret</name> <operator pos:start="191:20" pos:end="191:21">&amp;&amp;</operator> <name pos:start="191:23" pos:end="191:25">ret</name> <operator pos:start="191:27" pos:end="191:28">!=</operator> <literal type="number" pos:start="191:30" pos:end="191:30">1</literal></expr>)</condition> <block pos:start="191:33" pos:end="195:5">{<block_content pos:start="193:9" pos:end="193:65">

        <expr_stmt pos:start="193:9" pos:end="193:65"><expr pos:start="193:9" pos:end="193:64"><call pos:start="193:9" pos:end="193:64"><name pos:start="193:9" pos:end="193:14">av_log</name><argument_list pos:start="193:15" pos:end="193:64">(<argument pos:start="193:16" pos:end="193:20"><expr pos:start="193:16" pos:end="193:20"><name pos:start="193:16" pos:end="193:20">avctx</name></expr></argument>, <argument pos:start="193:23" pos:end="193:36"><expr pos:start="193:23" pos:end="193:36"><name pos:start="193:23" pos:end="193:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="193:39" pos:end="193:58"><expr pos:start="193:39" pos:end="193:58"><literal type="string" pos:start="193:39" pos:end="193:58">"Decode error: %i\n"</literal></expr></argument>, <argument pos:start="193:61" pos:end="193:63"><expr pos:start="193:61" pos:end="193:63"><name pos:start="193:61" pos:end="193:63">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="195:7" pos:end="199:5">else <block pos:start="195:12" pos:end="199:5">{<block_content pos:start="197:9" pos:end="197:34">

        <expr_stmt pos:start="197:9" pos:end="197:34"><expr pos:start="197:9" pos:end="197:33"><name pos:start="197:9" pos:end="197:20"><name pos:start="197:9" pos:end="197:10">at</name><operator pos:start="197:11" pos:end="197:12">-&gt;</operator><name pos:start="197:13" pos:end="197:20">last_pts</name></name> <operator pos:start="197:22" pos:end="197:22">=</operator> <name pos:start="197:24" pos:end="197:33"><name pos:start="197:24" pos:end="197:28">avpkt</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:33">pts</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="203:5" pos:end="203:20">return <expr pos:start="203:12" pos:end="203:19"><name pos:start="203:12" pos:end="203:19">pkt_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
