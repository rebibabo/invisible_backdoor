<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/478.c" pos:tabs="8"><function pos:start="1:1" pos:end="327:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">avcodec_string</name><parameter_list pos:start="1:20" pos:end="1:77">(<parameter pos:start="1:21" pos:end="1:29"><decl pos:start="1:21" pos:end="1:29"><type pos:start="1:21" pos:end="1:29"><name pos:start="1:21" pos:end="1:24">char</name> <modifier pos:start="1:26" pos:end="1:26">*</modifier></type><name pos:start="1:27" pos:end="1:29">buf</name></decl></parameter>, <parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:43">buf_size</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:64"><decl pos:start="1:46" pos:end="1:64"><type pos:start="1:46" pos:end="1:64"><name pos:start="1:46" pos:end="1:59">AVCodecContext</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:64">enc</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:76"><decl pos:start="1:67" pos:end="1:76"><type pos:start="1:67" pos:end="1:76"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:76">encode</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="327:1">{<block_content pos:start="5:5" pos:end="325:5">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:16"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:14">char</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:26">codec_name</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">AVCodec</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">char</name></type> <name pos:start="9:10" pos:end="9:17"><name pos:start="9:10" pos:end="9:13">buf1</name><index pos:start="9:14" pos:end="9:17">[<expr pos:start="9:15" pos:end="9:16"><literal type="number" pos:start="9:15" pos:end="9:16">32</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">bitrate</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:36"><decl pos:start="13:5" pos:end="13:35"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AVRational</name></type> <name pos:start="13:16" pos:end="13:35">display_aspect_ratio</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:48"><if pos:start="17:5" pos:end="19:48">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">encode</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:48"><block_content pos:start="19:9" pos:end="19:48">

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:9">p</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <call pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:32">avcodec_find_encoder</name><argument_list pos:start="19:33" pos:end="19:47">(<argument pos:start="19:34" pos:end="19:46"><expr pos:start="19:34" pos:end="19:46"><name pos:start="19:34" pos:end="19:46"><name pos:start="19:34" pos:end="19:36">enc</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:46">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="23:48">else<block type="pseudo" pos:start="23:9" pos:end="23:48"><block_content pos:start="23:9" pos:end="23:48">

        <expr_stmt pos:start="23:9" pos:end="23:48"><expr pos:start="23:9" pos:end="23:47"><name pos:start="23:9" pos:end="23:9">p</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <call pos:start="23:13" pos:end="23:47"><name pos:start="23:13" pos:end="23:32">avcodec_find_decoder</name><argument_list pos:start="23:33" pos:end="23:47">(<argument pos:start="23:34" pos:end="23:46"><expr pos:start="23:34" pos:end="23:46"><name pos:start="23:34" pos:end="23:46"><name pos:start="23:34" pos:end="23:36">enc</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:46">codec_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="27:5" pos:end="83:5"><if pos:start="27:5" pos:end="43:5">if <condition pos:start="27:8" pos:end="27:10">(<expr pos:start="27:9" pos:end="27:9"><name pos:start="27:9" pos:end="27:9">p</name></expr>)</condition> <block pos:start="27:12" pos:end="43:5">{<block_content pos:start="29:9" pos:end="41:9">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:18">codec_name</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <name pos:start="29:22" pos:end="29:28"><name pos:start="29:22" pos:end="29:22">p</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:28">name</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:53">(<expr pos:start="31:13" pos:end="31:52"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:19">encode</name> <operator pos:start="31:21" pos:end="31:22">&amp;&amp;</operator> <name pos:start="31:24" pos:end="31:36"><name pos:start="31:24" pos:end="31:26">enc</name><operator pos:start="31:27" pos:end="31:28">-&gt;</operator><name pos:start="31:29" pos:end="31:36">codec_id</name></name> <operator pos:start="31:38" pos:end="31:39">==</operator> <name pos:start="31:41" pos:end="31:52">CODEC_ID_MP3</name></expr>)</condition> <block pos:start="31:55" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:35">

            <if_stmt pos:start="33:13" pos:end="39:35"><if pos:start="33:13" pos:end="35:35">if <condition pos:start="33:16" pos:end="33:33">(<expr pos:start="33:17" pos:end="33:32"><name pos:start="33:17" pos:end="33:27"><name pos:start="33:17" pos:end="33:19">enc</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:27">sub_id</name></name> <operator pos:start="33:29" pos:end="33:30">==</operator> <literal type="number" pos:start="33:32" pos:end="33:32">2</literal></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:35"><block_content pos:start="35:17" pos:end="35:35">

                <expr_stmt pos:start="35:17" pos:end="35:35"><expr pos:start="35:17" pos:end="35:34"><name pos:start="35:17" pos:end="35:26">codec_name</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="string" pos:start="35:30" pos:end="35:34">"mp2"</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="37:13" pos:end="39:35">else if <condition pos:start="37:21" pos:end="37:38">(<expr pos:start="37:22" pos:end="37:37"><name pos:start="37:22" pos:end="37:32"><name pos:start="37:22" pos:end="37:24">enc</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:32">sub_id</name></name> <operator pos:start="37:34" pos:end="37:35">==</operator> <literal type="number" pos:start="37:37" pos:end="37:37">1</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:35"><block_content pos:start="39:17" pos:end="39:35">

                <expr_stmt pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:26">codec_name</name> <operator pos:start="39:28" pos:end="39:28">=</operator> <literal type="string" pos:start="39:30" pos:end="39:34">"mp1"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="43:7" pos:end="51:5">else if <condition pos:start="43:15" pos:end="43:49">(<expr pos:start="43:16" pos:end="43:48"><name pos:start="43:16" pos:end="43:28"><name pos:start="43:16" pos:end="43:18">enc</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:28">codec_id</name></name> <operator pos:start="43:30" pos:end="43:31">==</operator> <name pos:start="43:33" pos:end="43:48">CODEC_ID_MPEG2TS</name></expr>)</condition> <block pos:start="43:51" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:31">

        <comment type="block" pos:start="45:9" pos:end="47:25">/* fake mpeg2 transport stream codec (currently not

           registered) */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:31"><expr pos:start="49:9" pos:end="49:30"><name pos:start="49:9" pos:end="49:18">codec_name</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="string" pos:start="49:22" pos:end="49:30">"mpeg2ts"</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="51:7" pos:end="55:5">else if <condition pos:start="51:15" pos:end="51:42">(<expr pos:start="51:16" pos:end="51:41"><name pos:start="51:16" pos:end="51:33"><name pos:start="51:16" pos:end="51:18">enc</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:30">codec_name</name><index pos:start="51:31" pos:end="51:33">[<expr pos:start="51:32" pos:end="51:32"><literal type="number" pos:start="51:32" pos:end="51:32">0</literal></expr>]</index></name> <operator pos:start="51:35" pos:end="51:36">!=</operator> <literal type="char" pos:start="51:38" pos:end="51:41">'\0'</literal></expr>)</condition> <block pos:start="51:44" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:37">

        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:18">codec_name</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <name pos:start="53:22" pos:end="53:36"><name pos:start="53:22" pos:end="53:24">enc</name><operator pos:start="53:25" pos:end="53:26">-&gt;</operator><name pos:start="53:27" pos:end="53:36">codec_name</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="55:7" pos:end="83:5">else <block pos:start="55:12" pos:end="83:5">{<block_content pos:start="59:9" pos:end="81:26">

        <comment type="block" pos:start="57:9" pos:end="57:29">/* output avi tags */</comment>

        <if_stmt pos:start="59:9" pos:end="79:9"><if pos:start="59:9" pos:end="75:9">if<condition pos:start="59:11" pos:end="61:87">(   <expr pos:start="59:15" pos:end="61:86"><call pos:start="59:15" pos:end="59:42"><name pos:start="59:15" pos:end="59:21">isprint</name><argument_list pos:start="59:22" pos:end="59:42">(<argument pos:start="59:23" pos:end="59:41"><expr pos:start="59:23" pos:end="59:41"><name pos:start="59:23" pos:end="59:36"><name pos:start="59:23" pos:end="59:25">enc</name><operator pos:start="59:26" pos:end="59:27">-&gt;</operator><name pos:start="59:28" pos:end="59:36">codec_tag</name></name><operator pos:start="59:37" pos:end="59:37">&amp;</operator><literal type="number" pos:start="59:38" pos:end="59:41">0xFF</literal></expr></argument>)</argument_list></call> <operator pos:start="59:44" pos:end="59:45">&amp;&amp;</operator> <call pos:start="59:47" pos:end="59:79"><name pos:start="59:47" pos:end="59:53">isprint</name><argument_list pos:start="59:54" pos:end="59:79">(<argument pos:start="59:55" pos:end="59:78"><expr pos:start="59:55" pos:end="59:78"><operator pos:start="59:55" pos:end="59:55">(</operator><name pos:start="59:56" pos:end="59:69"><name pos:start="59:56" pos:end="59:58">enc</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:69">codec_tag</name></name><operator pos:start="59:70" pos:end="59:71">&gt;&gt;</operator><literal type="number" pos:start="59:72" pos:end="59:72">8</literal><operator pos:start="59:73" pos:end="59:73">)</operator><operator pos:start="59:74" pos:end="59:74">&amp;</operator><literal type="number" pos:start="59:75" pos:end="59:78">0xFF</literal></expr></argument>)</argument_list></call>

           <operator pos:start="61:12" pos:end="61:13">&amp;&amp;</operator> <call pos:start="61:15" pos:end="61:48"><name pos:start="61:15" pos:end="61:21">isprint</name><argument_list pos:start="61:22" pos:end="61:48">(<argument pos:start="61:23" pos:end="61:47"><expr pos:start="61:23" pos:end="61:47"><operator pos:start="61:23" pos:end="61:23">(</operator><name pos:start="61:24" pos:end="61:37"><name pos:start="61:24" pos:end="61:26">enc</name><operator pos:start="61:27" pos:end="61:28">-&gt;</operator><name pos:start="61:29" pos:end="61:37">codec_tag</name></name><operator pos:start="61:38" pos:end="61:39">&gt;&gt;</operator><literal type="number" pos:start="61:40" pos:end="61:41">16</literal><operator pos:start="61:42" pos:end="61:42">)</operator><operator pos:start="61:43" pos:end="61:43">&amp;</operator><literal type="number" pos:start="61:44" pos:end="61:47">0xFF</literal></expr></argument>)</argument_list></call> <operator pos:start="61:50" pos:end="61:51">&amp;&amp;</operator> <call pos:start="61:53" pos:end="61:86"><name pos:start="61:53" pos:end="61:59">isprint</name><argument_list pos:start="61:60" pos:end="61:86">(<argument pos:start="61:61" pos:end="61:85"><expr pos:start="61:61" pos:end="61:85"><operator pos:start="61:61" pos:end="61:61">(</operator><name pos:start="61:62" pos:end="61:75"><name pos:start="61:62" pos:end="61:64">enc</name><operator pos:start="61:65" pos:end="61:66">-&gt;</operator><name pos:start="61:67" pos:end="61:75">codec_tag</name></name><operator pos:start="61:76" pos:end="61:77">&gt;&gt;</operator><literal type="number" pos:start="61:78" pos:end="61:79">24</literal><operator pos:start="61:80" pos:end="61:80">)</operator><operator pos:start="61:81" pos:end="61:81">&amp;</operator><literal type="number" pos:start="61:82" pos:end="61:85">0xFF</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="61:88" pos:end="75:9">{<block_content pos:start="63:13" pos:end="73:38">

            <expr_stmt pos:start="63:13" pos:end="73:38"><expr pos:start="63:13" pos:end="73:37"><call pos:start="63:13" pos:end="73:37"><name pos:start="63:13" pos:end="63:20">snprintf</name><argument_list pos:start="63:21" pos:end="73:37">(<argument pos:start="63:22" pos:end="63:25"><expr pos:start="63:22" pos:end="63:25"><name pos:start="63:22" pos:end="63:25">buf1</name></expr></argument>, <argument pos:start="63:28" pos:end="63:39"><expr pos:start="63:28" pos:end="63:39"><sizeof pos:start="63:28" pos:end="63:39">sizeof<argument_list pos:start="63:34" pos:end="63:39">(<argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><name pos:start="63:35" pos:end="63:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:42" pos:end="63:60"><expr pos:start="63:42" pos:end="63:60"><literal type="string" pos:start="63:42" pos:end="63:60">"%c%c%c%c / 0x%04X"</literal></expr></argument>,

                     <argument pos:start="65:22" pos:end="65:42"><expr pos:start="65:22" pos:end="65:42"><name pos:start="65:22" pos:end="65:35"><name pos:start="65:22" pos:end="65:24">enc</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:35">codec_tag</name></name> <operator pos:start="65:37" pos:end="65:37">&amp;</operator> <literal type="number" pos:start="65:39" pos:end="65:42">0xff</literal></expr></argument>,

                     <argument pos:start="67:22" pos:end="67:49"><expr pos:start="67:22" pos:end="67:49"><operator pos:start="67:22" pos:end="67:22">(</operator><name pos:start="67:23" pos:end="67:36"><name pos:start="67:23" pos:end="67:25">enc</name><operator pos:start="67:26" pos:end="67:27">-&gt;</operator><name pos:start="67:28" pos:end="67:36">codec_tag</name></name> <operator pos:start="67:38" pos:end="67:39">&gt;&gt;</operator> <literal type="number" pos:start="67:41" pos:end="67:41">8</literal><operator pos:start="67:42" pos:end="67:42">)</operator> <operator pos:start="67:44" pos:end="67:44">&amp;</operator> <literal type="number" pos:start="67:46" pos:end="67:49">0xff</literal></expr></argument>,

                     <argument pos:start="69:22" pos:end="69:50"><expr pos:start="69:22" pos:end="69:50"><operator pos:start="69:22" pos:end="69:22">(</operator><name pos:start="69:23" pos:end="69:36"><name pos:start="69:23" pos:end="69:25">enc</name><operator pos:start="69:26" pos:end="69:27">-&gt;</operator><name pos:start="69:28" pos:end="69:36">codec_tag</name></name> <operator pos:start="69:38" pos:end="69:39">&gt;&gt;</operator> <literal type="number" pos:start="69:41" pos:end="69:42">16</literal><operator pos:start="69:43" pos:end="69:43">)</operator> <operator pos:start="69:45" pos:end="69:45">&amp;</operator> <literal type="number" pos:start="69:47" pos:end="69:50">0xff</literal></expr></argument>,

                     <argument pos:start="71:22" pos:end="71:50"><expr pos:start="71:22" pos:end="71:50"><operator pos:start="71:22" pos:end="71:22">(</operator><name pos:start="71:23" pos:end="71:36"><name pos:start="71:23" pos:end="71:25">enc</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:36">codec_tag</name></name> <operator pos:start="71:38" pos:end="71:39">&gt;&gt;</operator> <literal type="number" pos:start="71:41" pos:end="71:42">24</literal><operator pos:start="71:43" pos:end="71:43">)</operator> <operator pos:start="71:45" pos:end="71:45">&amp;</operator> <literal type="number" pos:start="71:47" pos:end="71:50">0xff</literal></expr></argument>,

                      <argument pos:start="73:23" pos:end="73:36"><expr pos:start="73:23" pos:end="73:36"><name pos:start="73:23" pos:end="73:36"><name pos:start="73:23" pos:end="73:25">enc</name><operator pos:start="73:26" pos:end="73:27">-&gt;</operator><name pos:start="73:28" pos:end="73:36">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="75:11" pos:end="79:9">else <block pos:start="75:16" pos:end="79:9">{<block_content pos:start="77:13" pos:end="77:67">

            <expr_stmt pos:start="77:13" pos:end="77:67"><expr pos:start="77:13" pos:end="77:66"><call pos:start="77:13" pos:end="77:66"><name pos:start="77:13" pos:end="77:20">snprintf</name><argument_list pos:start="77:21" pos:end="77:66">(<argument pos:start="77:22" pos:end="77:25"><expr pos:start="77:22" pos:end="77:25"><name pos:start="77:22" pos:end="77:25">buf1</name></expr></argument>, <argument pos:start="77:28" pos:end="77:39"><expr pos:start="77:28" pos:end="77:39"><sizeof pos:start="77:28" pos:end="77:39">sizeof<argument_list pos:start="77:34" pos:end="77:39">(<argument pos:start="77:35" pos:end="77:38"><expr pos:start="77:35" pos:end="77:38"><name pos:start="77:35" pos:end="77:38">buf1</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="77:42" pos:end="77:49"><expr pos:start="77:42" pos:end="77:49"><literal type="string" pos:start="77:42" pos:end="77:49">"0x%04x"</literal></expr></argument>, <argument pos:start="77:52" pos:end="77:65"><expr pos:start="77:52" pos:end="77:65"><name pos:start="77:52" pos:end="77:65"><name pos:start="77:52" pos:end="77:54">enc</name><operator pos:start="77:55" pos:end="77:56">-&gt;</operator><name pos:start="77:57" pos:end="77:65">codec_tag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:26"><expr pos:start="81:9" pos:end="81:25"><name pos:start="81:9" pos:end="81:18">codec_name</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <name pos:start="81:22" pos:end="81:25">buf1</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <switch pos:start="87:5" pos:end="301:5">switch<condition pos:start="87:11" pos:end="87:27">(<expr pos:start="87:12" pos:end="87:26"><name pos:start="87:12" pos:end="87:26"><name pos:start="87:12" pos:end="87:14">enc</name><operator pos:start="87:15" pos:end="87:16">-&gt;</operator><name pos:start="87:17" pos:end="87:26">codec_type</name></name></expr>)</condition> <block pos:start="87:29" pos:end="301:5">{<block_content pos:start="89:5" pos:end="299:15">

    <case pos:start="89:5" pos:end="89:26">case <expr pos:start="89:10" pos:end="89:25"><name pos:start="89:10" pos:end="89:25">CODEC_TYPE_VIDEO</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="95:62"><expr pos:start="91:9" pos:end="95:61"><call pos:start="91:9" pos:end="95:61"><name pos:start="91:9" pos:end="91:16">snprintf</name><argument_list pos:start="91:17" pos:end="95:61">(<argument pos:start="91:18" pos:end="91:20"><expr pos:start="91:18" pos:end="91:20"><name pos:start="91:18" pos:end="91:20">buf</name></expr></argument>, <argument pos:start="91:23" pos:end="91:30"><expr pos:start="91:23" pos:end="91:30"><name pos:start="91:23" pos:end="91:30">buf_size</name></expr></argument>,

                 <argument pos:start="93:18" pos:end="93:30"><expr pos:start="93:18" pos:end="93:30"><literal type="string" pos:start="93:18" pos:end="93:30">"Video: %s%s"</literal></expr></argument>,

                 <argument pos:start="95:18" pos:end="95:27"><expr pos:start="95:18" pos:end="95:27"><name pos:start="95:18" pos:end="95:27">codec_name</name></expr></argument>, <argument pos:start="95:30" pos:end="95:60"><expr pos:start="95:30" pos:end="95:60"><ternary pos:start="95:30" pos:end="95:60"><condition pos:start="95:30" pos:end="95:47"><expr pos:start="95:30" pos:end="95:45"><name pos:start="95:30" pos:end="95:45"><name pos:start="95:30" pos:end="95:32">enc</name><operator pos:start="95:33" pos:end="95:34">-&gt;</operator><name pos:start="95:35" pos:end="95:45">mb_decision</name></name></expr> ?</condition><then pos:start="95:49" pos:end="95:55"> <expr pos:start="95:49" pos:end="95:55"><literal type="string" pos:start="95:49" pos:end="95:55">" (hq)"</literal></expr> </then><else pos:start="95:57" pos:end="95:60">: <expr pos:start="95:59" pos:end="95:60"><literal type="string" pos:start="95:59" pos:end="95:60">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="105:9"><if pos:start="97:9" pos:end="105:9">if <condition pos:start="97:12" pos:end="97:41">(<expr pos:start="97:13" pos:end="97:40"><name pos:start="97:13" pos:end="97:24"><name pos:start="97:13" pos:end="97:15">enc</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:24">pix_fmt</name></name> <operator pos:start="97:26" pos:end="97:27">!=</operator> <name pos:start="97:29" pos:end="97:40">PIX_FMT_NONE</name></expr>)</condition> <block pos:start="97:43" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:61">

            <expr_stmt pos:start="99:13" pos:end="103:61"><expr pos:start="99:13" pos:end="103:60"><call pos:start="99:13" pos:end="103:60"><name pos:start="99:13" pos:end="99:20">snprintf</name><argument_list pos:start="99:21" pos:end="103:60">(<argument pos:start="99:22" pos:end="99:38"><expr pos:start="99:22" pos:end="99:38"><name pos:start="99:22" pos:end="99:24">buf</name> <operator pos:start="99:26" pos:end="99:26">+</operator> <call pos:start="99:28" pos:end="99:38"><name pos:start="99:28" pos:end="99:33">strlen</name><argument_list pos:start="99:34" pos:end="99:38">(<argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><name pos:start="99:35" pos:end="99:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:41" pos:end="99:62"><expr pos:start="99:41" pos:end="99:62"><name pos:start="99:41" pos:end="99:48">buf_size</name> <operator pos:start="99:50" pos:end="99:50">-</operator> <call pos:start="99:52" pos:end="99:62"><name pos:start="99:52" pos:end="99:57">strlen</name><argument_list pos:start="99:58" pos:end="99:62">(<argument pos:start="99:59" pos:end="99:61"><expr pos:start="99:59" pos:end="99:61"><name pos:start="99:59" pos:end="99:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="101:22" pos:end="101:27"><expr pos:start="101:22" pos:end="101:27"><literal type="string" pos:start="101:22" pos:end="101:27">", %s"</literal></expr></argument>,

                     <argument pos:start="103:22" pos:end="103:59"><expr pos:start="103:22" pos:end="103:59"><call pos:start="103:22" pos:end="103:59"><name pos:start="103:22" pos:end="103:45">avcodec_get_pix_fmt_name</name><argument_list pos:start="103:46" pos:end="103:59">(<argument pos:start="103:47" pos:end="103:58"><expr pos:start="103:47" pos:end="103:58"><name pos:start="103:47" pos:end="103:58"><name pos:start="103:47" pos:end="103:49">enc</name><operator pos:start="103:50" pos:end="103:51">-&gt;</operator><name pos:start="103:52" pos:end="103:58">pix_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="107:9" pos:end="147:9"><if pos:start="107:9" pos:end="147:9">if <condition pos:start="107:12" pos:end="107:23">(<expr pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:22"><name pos:start="107:13" pos:end="107:15">enc</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:22">width</name></name></expr>)</condition> <block pos:start="107:25" pos:end="147:9">{<block_content pos:start="109:13" pos:end="145:13">

            <expr_stmt pos:start="109:13" pos:end="113:46"><expr pos:start="109:13" pos:end="113:45"><call pos:start="109:13" pos:end="113:45"><name pos:start="109:13" pos:end="109:20">snprintf</name><argument_list pos:start="109:21" pos:end="113:45">(<argument pos:start="109:22" pos:end="109:38"><expr pos:start="109:22" pos:end="109:38"><name pos:start="109:22" pos:end="109:24">buf</name> <operator pos:start="109:26" pos:end="109:26">+</operator> <call pos:start="109:28" pos:end="109:38"><name pos:start="109:28" pos:end="109:33">strlen</name><argument_list pos:start="109:34" pos:end="109:38">(<argument pos:start="109:35" pos:end="109:37"><expr pos:start="109:35" pos:end="109:37"><name pos:start="109:35" pos:end="109:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:41" pos:end="109:62"><expr pos:start="109:41" pos:end="109:62"><name pos:start="109:41" pos:end="109:48">buf_size</name> <operator pos:start="109:50" pos:end="109:50">-</operator> <call pos:start="109:52" pos:end="109:62"><name pos:start="109:52" pos:end="109:57">strlen</name><argument_list pos:start="109:58" pos:end="109:62">(<argument pos:start="109:59" pos:end="109:61"><expr pos:start="109:59" pos:end="109:61"><name pos:start="109:59" pos:end="109:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="111:22" pos:end="111:30"><expr pos:start="111:22" pos:end="111:30"><literal type="string" pos:start="111:22" pos:end="111:30">", %dx%d"</literal></expr></argument>,

                     <argument pos:start="113:22" pos:end="113:31"><expr pos:start="113:22" pos:end="113:31"><name pos:start="113:22" pos:end="113:31"><name pos:start="113:22" pos:end="113:24">enc</name><operator pos:start="113:25" pos:end="113:26">-&gt;</operator><name pos:start="113:27" pos:end="113:31">width</name></name></expr></argument>, <argument pos:start="113:34" pos:end="113:44"><expr pos:start="113:34" pos:end="113:44"><name pos:start="113:34" pos:end="113:44"><name pos:start="113:34" pos:end="113:36">enc</name><operator pos:start="113:37" pos:end="113:38">-&gt;</operator><name pos:start="113:39" pos:end="113:44">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="115:13" pos:end="133:13"><if pos:start="115:13" pos:end="133:13">if <condition pos:start="115:16" pos:end="115:45">(<expr pos:start="115:17" pos:end="115:44"><name pos:start="115:17" pos:end="115:44"><name pos:start="115:17" pos:end="115:19">enc</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:40">sample_aspect_ratio</name><operator pos:start="115:41" pos:end="115:41">.</operator><name pos:start="115:42" pos:end="115:44">num</name></name></expr>)</condition> <block pos:start="115:47" pos:end="133:13">{<block_content pos:start="117:17" pos:end="131:77">

                <expr_stmt pos:start="117:17" pos:end="123:37"><expr pos:start="117:17" pos:end="123:36"><call pos:start="117:17" pos:end="123:36"><name pos:start="117:17" pos:end="117:25">av_reduce</name><argument_list pos:start="117:26" pos:end="123:36">(<argument pos:start="117:27" pos:end="117:51"><expr pos:start="117:27" pos:end="117:51"><operator pos:start="117:27" pos:end="117:27">&amp;</operator><name pos:start="117:28" pos:end="117:51"><name pos:start="117:28" pos:end="117:47">display_aspect_ratio</name><operator pos:start="117:48" pos:end="117:48">.</operator><name pos:start="117:49" pos:end="117:51">num</name></name></expr></argument>, <argument pos:start="117:54" pos:end="117:78"><expr pos:start="117:54" pos:end="117:78"><operator pos:start="117:54" pos:end="117:54">&amp;</operator><name pos:start="117:55" pos:end="117:78"><name pos:start="117:55" pos:end="117:74">display_aspect_ratio</name><operator pos:start="117:75" pos:end="117:75">.</operator><name pos:start="117:76" pos:end="117:78">den</name></name></expr></argument>,

                          <argument pos:start="119:27" pos:end="119:65"><expr pos:start="119:27" pos:end="119:65"><name pos:start="119:27" pos:end="119:36"><name pos:start="119:27" pos:end="119:29">enc</name><operator pos:start="119:30" pos:end="119:31">-&gt;</operator><name pos:start="119:32" pos:end="119:36">width</name></name><operator pos:start="119:37" pos:end="119:37">*</operator><name pos:start="119:38" pos:end="119:65"><name pos:start="119:38" pos:end="119:40">enc</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:61">sample_aspect_ratio</name><operator pos:start="119:62" pos:end="119:62">.</operator><name pos:start="119:63" pos:end="119:65">num</name></name></expr></argument>,

                          <argument pos:start="121:27" pos:end="121:66"><expr pos:start="121:27" pos:end="121:66"><name pos:start="121:27" pos:end="121:37"><name pos:start="121:27" pos:end="121:29">enc</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:37">height</name></name><operator pos:start="121:38" pos:end="121:38">*</operator><name pos:start="121:39" pos:end="121:66"><name pos:start="121:39" pos:end="121:41">enc</name><operator pos:start="121:42" pos:end="121:43">-&gt;</operator><name pos:start="121:44" pos:end="121:62">sample_aspect_ratio</name><operator pos:start="121:63" pos:end="121:63">.</operator><name pos:start="121:64" pos:end="121:66">den</name></name></expr></argument>,

                          <argument pos:start="123:27" pos:end="123:35"><expr pos:start="123:27" pos:end="123:35"><literal type="number" pos:start="123:27" pos:end="123:30">1024</literal><operator pos:start="123:31" pos:end="123:31">*</operator><literal type="number" pos:start="123:32" pos:end="123:35">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="125:17" pos:end="131:77"><expr pos:start="125:17" pos:end="131:76"><call pos:start="125:17" pos:end="131:76"><name pos:start="125:17" pos:end="125:24">snprintf</name><argument_list pos:start="125:25" pos:end="131:76">(<argument pos:start="125:26" pos:end="125:42"><expr pos:start="125:26" pos:end="125:42"><name pos:start="125:26" pos:end="125:28">buf</name> <operator pos:start="125:30" pos:end="125:30">+</operator> <call pos:start="125:32" pos:end="125:42"><name pos:start="125:32" pos:end="125:37">strlen</name><argument_list pos:start="125:38" pos:end="125:42">(<argument pos:start="125:39" pos:end="125:41"><expr pos:start="125:39" pos:end="125:41"><name pos:start="125:39" pos:end="125:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="125:45" pos:end="125:66"><expr pos:start="125:45" pos:end="125:66"><name pos:start="125:45" pos:end="125:52">buf_size</name> <operator pos:start="125:54" pos:end="125:54">-</operator> <call pos:start="125:56" pos:end="125:66"><name pos:start="125:56" pos:end="125:61">strlen</name><argument_list pos:start="125:62" pos:end="125:66">(<argument pos:start="125:63" pos:end="125:65"><expr pos:start="125:63" pos:end="125:65"><name pos:start="125:63" pos:end="125:65">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                         <argument pos:start="127:26" pos:end="127:49"><expr pos:start="127:26" pos:end="127:49"><literal type="string" pos:start="127:26" pos:end="127:49">" [PAR %d:%d DAR %d:%d]"</literal></expr></argument>,

                         <argument pos:start="129:26" pos:end="129:53"><expr pos:start="129:26" pos:end="129:53"><name pos:start="129:26" pos:end="129:53"><name pos:start="129:26" pos:end="129:28">enc</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:49">sample_aspect_ratio</name><operator pos:start="129:50" pos:end="129:50">.</operator><name pos:start="129:51" pos:end="129:53">num</name></name></expr></argument>, <argument pos:start="129:56" pos:end="129:83"><expr pos:start="129:56" pos:end="129:83"><name pos:start="129:56" pos:end="129:83"><name pos:start="129:56" pos:end="129:58">enc</name><operator pos:start="129:59" pos:end="129:60">-&gt;</operator><name pos:start="129:61" pos:end="129:79">sample_aspect_ratio</name><operator pos:start="129:80" pos:end="129:80">.</operator><name pos:start="129:81" pos:end="129:83">den</name></name></expr></argument>,

                         <argument pos:start="131:26" pos:end="131:49"><expr pos:start="131:26" pos:end="131:49"><name pos:start="131:26" pos:end="131:49"><name pos:start="131:26" pos:end="131:45">display_aspect_ratio</name><operator pos:start="131:46" pos:end="131:46">.</operator><name pos:start="131:47" pos:end="131:49">num</name></name></expr></argument>, <argument pos:start="131:52" pos:end="131:75"><expr pos:start="131:52" pos:end="131:75"><name pos:start="131:52" pos:end="131:75"><name pos:start="131:52" pos:end="131:71">display_aspect_ratio</name><operator pos:start="131:72" pos:end="131:72">.</operator><name pos:start="131:73" pos:end="131:75">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="135:13" pos:end="145:13"><if pos:start="135:13" pos:end="145:13">if<condition pos:start="135:15" pos:end="135:50">(<expr pos:start="135:16" pos:end="135:49"><call pos:start="135:16" pos:end="135:33"><name pos:start="135:16" pos:end="135:31">av_log_get_level</name><argument_list pos:start="135:32" pos:end="135:33">()</argument_list></call> <operator pos:start="135:35" pos:end="135:36">&gt;=</operator> <name pos:start="135:38" pos:end="135:49">AV_LOG_DEBUG</name></expr>)</condition><block pos:start="135:51" pos:end="145:13">{<block_content pos:start="137:17" pos:end="143:65">

                <decl_stmt pos:start="137:17" pos:end="137:70"><decl pos:start="137:17" pos:end="137:69"><type pos:start="137:17" pos:end="137:19"><name pos:start="137:17" pos:end="137:19">int</name></type> <name pos:start="137:21" pos:end="137:21">g</name><init pos:start="137:22" pos:end="137:69">= <expr pos:start="137:24" pos:end="137:69"><call pos:start="137:24" pos:end="137:69"><name pos:start="137:24" pos:end="137:29">ff_gcd</name><argument_list pos:start="137:30" pos:end="137:69">(<argument pos:start="137:31" pos:end="137:48"><expr pos:start="137:31" pos:end="137:48"><name pos:start="137:31" pos:end="137:48"><name pos:start="137:31" pos:end="137:33">enc</name><operator pos:start="137:34" pos:end="137:35">-&gt;</operator><name pos:start="137:36" pos:end="137:44">time_base</name><operator pos:start="137:45" pos:end="137:45">.</operator><name pos:start="137:46" pos:end="137:48">num</name></name></expr></argument>, <argument pos:start="137:51" pos:end="137:68"><expr pos:start="137:51" pos:end="137:68"><name pos:start="137:51" pos:end="137:68"><name pos:start="137:51" pos:end="137:53">enc</name><operator pos:start="137:54" pos:end="137:55">-&gt;</operator><name pos:start="137:56" pos:end="137:64">time_base</name><operator pos:start="137:65" pos:end="137:65">.</operator><name pos:start="137:66" pos:end="137:68">den</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="139:17" pos:end="143:65"><expr pos:start="139:17" pos:end="143:64"><call pos:start="139:17" pos:end="143:64"><name pos:start="139:17" pos:end="139:24">snprintf</name><argument_list pos:start="139:25" pos:end="143:64">(<argument pos:start="139:26" pos:end="139:42"><expr pos:start="139:26" pos:end="139:42"><name pos:start="139:26" pos:end="139:28">buf</name> <operator pos:start="139:30" pos:end="139:30">+</operator> <call pos:start="139:32" pos:end="139:42"><name pos:start="139:32" pos:end="139:37">strlen</name><argument_list pos:start="139:38" pos:end="139:42">(<argument pos:start="139:39" pos:end="139:41"><expr pos:start="139:39" pos:end="139:41"><name pos:start="139:39" pos:end="139:41">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="139:45" pos:end="139:66"><expr pos:start="139:45" pos:end="139:66"><name pos:start="139:45" pos:end="139:52">buf_size</name> <operator pos:start="139:54" pos:end="139:54">-</operator> <call pos:start="139:56" pos:end="139:66"><name pos:start="139:56" pos:end="139:61">strlen</name><argument_list pos:start="139:62" pos:end="139:66">(<argument pos:start="139:63" pos:end="139:65"><expr pos:start="139:63" pos:end="139:65"><name pos:start="139:63" pos:end="139:65">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="141:22" pos:end="141:30"><expr pos:start="141:22" pos:end="141:30"><literal type="string" pos:start="141:22" pos:end="141:30">", %d/%d"</literal></expr></argument>,

                     <argument pos:start="143:22" pos:end="143:41"><expr pos:start="143:22" pos:end="143:41"><name pos:start="143:22" pos:end="143:39"><name pos:start="143:22" pos:end="143:24">enc</name><operator pos:start="143:25" pos:end="143:26">-&gt;</operator><name pos:start="143:27" pos:end="143:35">time_base</name><operator pos:start="143:36" pos:end="143:36">.</operator><name pos:start="143:37" pos:end="143:39">num</name></name><operator pos:start="143:40" pos:end="143:40">/</operator><name pos:start="143:41" pos:end="143:41">g</name></expr></argument>, <argument pos:start="143:44" pos:end="143:63"><expr pos:start="143:44" pos:end="143:63"><name pos:start="143:44" pos:end="143:61"><name pos:start="143:44" pos:end="143:46">enc</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:57">time_base</name><operator pos:start="143:58" pos:end="143:58">.</operator><name pos:start="143:59" pos:end="143:61">den</name></name><operator pos:start="143:62" pos:end="143:62">/</operator><name pos:start="143:63" pos:end="143:63">g</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="149:9" pos:end="155:9"><if pos:start="149:9" pos:end="155:9">if <condition pos:start="149:12" pos:end="149:19">(<expr pos:start="149:13" pos:end="149:18"><name pos:start="149:13" pos:end="149:18">encode</name></expr>)</condition> <block pos:start="149:21" pos:end="155:9">{<block_content pos:start="151:13" pos:end="153:56">

            <expr_stmt pos:start="151:13" pos:end="153:56"><expr pos:start="151:13" pos:end="153:55"><call pos:start="151:13" pos:end="153:55"><name pos:start="151:13" pos:end="151:20">snprintf</name><argument_list pos:start="151:21" pos:end="153:55">(<argument pos:start="151:22" pos:end="151:38"><expr pos:start="151:22" pos:end="151:38"><name pos:start="151:22" pos:end="151:24">buf</name> <operator pos:start="151:26" pos:end="151:26">+</operator> <call pos:start="151:28" pos:end="151:38"><name pos:start="151:28" pos:end="151:33">strlen</name><argument_list pos:start="151:34" pos:end="151:38">(<argument pos:start="151:35" pos:end="151:37"><expr pos:start="151:35" pos:end="151:37"><name pos:start="151:35" pos:end="151:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="151:41" pos:end="151:62"><expr pos:start="151:41" pos:end="151:62"><name pos:start="151:41" pos:end="151:48">buf_size</name> <operator pos:start="151:50" pos:end="151:50">-</operator> <call pos:start="151:52" pos:end="151:62"><name pos:start="151:52" pos:end="151:57">strlen</name><argument_list pos:start="151:58" pos:end="151:62">(<argument pos:start="151:59" pos:end="151:61"><expr pos:start="151:59" pos:end="151:61"><name pos:start="151:59" pos:end="151:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="153:22" pos:end="153:32"><expr pos:start="153:22" pos:end="153:32"><literal type="string" pos:start="153:22" pos:end="153:32">", q=%d-%d"</literal></expr></argument>, <argument pos:start="153:35" pos:end="153:43"><expr pos:start="153:35" pos:end="153:43"><name pos:start="153:35" pos:end="153:43"><name pos:start="153:35" pos:end="153:37">enc</name><operator pos:start="153:38" pos:end="153:39">-&gt;</operator><name pos:start="153:40" pos:end="153:43">qmin</name></name></expr></argument>, <argument pos:start="153:46" pos:end="153:54"><expr pos:start="153:46" pos:end="153:54"><name pos:start="153:46" pos:end="153:54"><name pos:start="153:46" pos:end="153:48">enc</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:54">qmax</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:32"><expr pos:start="157:9" pos:end="157:31"><name pos:start="157:9" pos:end="157:15">bitrate</name> <operator pos:start="157:17" pos:end="157:17">=</operator> <name pos:start="157:19" pos:end="157:31"><name pos:start="157:19" pos:end="157:21">enc</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:31">bit_rate</name></name></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:26">case <expr pos:start="161:10" pos:end="161:25"><name pos:start="161:10" pos:end="161:25">CODEC_TYPE_AUDIO</name></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="167:29"><expr pos:start="163:9" pos:end="167:28"><call pos:start="163:9" pos:end="167:28"><name pos:start="163:9" pos:end="163:16">snprintf</name><argument_list pos:start="163:17" pos:end="167:28">(<argument pos:start="163:18" pos:end="163:20"><expr pos:start="163:18" pos:end="163:20"><name pos:start="163:18" pos:end="163:20">buf</name></expr></argument>, <argument pos:start="163:23" pos:end="163:30"><expr pos:start="163:23" pos:end="163:30"><name pos:start="163:23" pos:end="163:30">buf_size</name></expr></argument>,

                 <argument pos:start="165:18" pos:end="165:28"><expr pos:start="165:18" pos:end="165:28"><literal type="string" pos:start="165:18" pos:end="165:28">"Audio: %s"</literal></expr></argument>,

                 <argument pos:start="167:18" pos:end="167:27"><expr pos:start="167:18" pos:end="167:27"><name pos:start="167:18" pos:end="167:27">codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="175:9"><if pos:start="169:9" pos:end="175:9">if <condition pos:start="169:12" pos:end="169:29">(<expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:15">enc</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:28">sample_rate</name></name></expr>)</condition> <block pos:start="169:31" pos:end="175:9">{<block_content pos:start="171:13" pos:end="173:50">

            <expr_stmt pos:start="171:13" pos:end="173:50"><expr pos:start="171:13" pos:end="173:49"><call pos:start="171:13" pos:end="173:49"><name pos:start="171:13" pos:end="171:20">snprintf</name><argument_list pos:start="171:21" pos:end="173:49">(<argument pos:start="171:22" pos:end="171:38"><expr pos:start="171:22" pos:end="171:38"><name pos:start="171:22" pos:end="171:24">buf</name> <operator pos:start="171:26" pos:end="171:26">+</operator> <call pos:start="171:28" pos:end="171:38"><name pos:start="171:28" pos:end="171:33">strlen</name><argument_list pos:start="171:34" pos:end="171:38">(<argument pos:start="171:35" pos:end="171:37"><expr pos:start="171:35" pos:end="171:37"><name pos:start="171:35" pos:end="171:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="171:41" pos:end="171:62"><expr pos:start="171:41" pos:end="171:62"><name pos:start="171:41" pos:end="171:48">buf_size</name> <operator pos:start="171:50" pos:end="171:50">-</operator> <call pos:start="171:52" pos:end="171:62"><name pos:start="171:52" pos:end="171:57">strlen</name><argument_list pos:start="171:58" pos:end="171:62">(<argument pos:start="171:59" pos:end="171:61"><expr pos:start="171:59" pos:end="171:61"><name pos:start="171:59" pos:end="171:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="173:22" pos:end="173:30"><expr pos:start="173:22" pos:end="173:30"><literal type="string" pos:start="173:22" pos:end="173:30">", %d Hz"</literal></expr></argument>, <argument pos:start="173:33" pos:end="173:48"><expr pos:start="173:33" pos:end="173:48"><name pos:start="173:33" pos:end="173:48"><name pos:start="173:33" pos:end="173:35">enc</name><operator pos:start="173:36" pos:end="173:37">-&gt;</operator><name pos:start="173:38" pos:end="173:48">sample_rate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="177:9" pos:end="177:40"><expr pos:start="177:9" pos:end="177:39"><call pos:start="177:9" pos:end="177:39"><name pos:start="177:9" pos:end="177:18">av_strlcat</name><argument_list pos:start="177:19" pos:end="177:39">(<argument pos:start="177:20" pos:end="177:22"><expr pos:start="177:20" pos:end="177:22"><name pos:start="177:20" pos:end="177:22">buf</name></expr></argument>, <argument pos:start="177:25" pos:end="177:28"><expr pos:start="177:25" pos:end="177:28"><literal type="string" pos:start="177:25" pos:end="177:28">", "</literal></expr></argument>, <argument pos:start="177:31" pos:end="177:38"><expr pos:start="177:31" pos:end="177:38"><name pos:start="177:31" pos:end="177:38">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="179:9" pos:end="179:121"><expr pos:start="179:9" pos:end="179:120"><call pos:start="179:9" pos:end="179:120"><name pos:start="179:9" pos:end="179:41">avcodec_get_channel_layout_string</name><argument_list pos:start="179:42" pos:end="179:120">(<argument pos:start="179:43" pos:end="179:59"><expr pos:start="179:43" pos:end="179:59"><name pos:start="179:43" pos:end="179:45">buf</name> <operator pos:start="179:47" pos:end="179:47">+</operator> <call pos:start="179:49" pos:end="179:59"><name pos:start="179:49" pos:end="179:54">strlen</name><argument_list pos:start="179:55" pos:end="179:59">(<argument pos:start="179:56" pos:end="179:58"><expr pos:start="179:56" pos:end="179:58"><name pos:start="179:56" pos:end="179:58">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:62" pos:end="179:83"><expr pos:start="179:62" pos:end="179:83"><name pos:start="179:62" pos:end="179:69">buf_size</name> <operator pos:start="179:71" pos:end="179:71">-</operator> <call pos:start="179:73" pos:end="179:83"><name pos:start="179:73" pos:end="179:78">strlen</name><argument_list pos:start="179:79" pos:end="179:83">(<argument pos:start="179:80" pos:end="179:82"><expr pos:start="179:80" pos:end="179:82"><name pos:start="179:80" pos:end="179:82">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="179:86" pos:end="179:98"><expr pos:start="179:86" pos:end="179:98"><name pos:start="179:86" pos:end="179:98"><name pos:start="179:86" pos:end="179:88">enc</name><operator pos:start="179:89" pos:end="179:90">-&gt;</operator><name pos:start="179:91" pos:end="179:98">channels</name></name></expr></argument>, <argument pos:start="179:101" pos:end="179:119"><expr pos:start="179:101" pos:end="179:119"><name pos:start="179:101" pos:end="179:119"><name pos:start="179:101" pos:end="179:103">enc</name><operator pos:start="179:104" pos:end="179:105">-&gt;</operator><name pos:start="179:106" pos:end="179:119">channel_layout</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="181:9" pos:end="187:9"><if pos:start="181:9" pos:end="187:9">if <condition pos:start="181:12" pos:end="181:47">(<expr pos:start="181:13" pos:end="181:46"><name pos:start="181:13" pos:end="181:27"><name pos:start="181:13" pos:end="181:15">enc</name><operator pos:start="181:16" pos:end="181:17">-&gt;</operator><name pos:start="181:18" pos:end="181:27">sample_fmt</name></name> <operator pos:start="181:29" pos:end="181:30">!=</operator> <name pos:start="181:32" pos:end="181:46">SAMPLE_FMT_NONE</name></expr>)</condition> <block pos:start="181:49" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:75">

            <expr_stmt pos:start="183:13" pos:end="185:75"><expr pos:start="183:13" pos:end="185:74"><call pos:start="183:13" pos:end="185:74"><name pos:start="183:13" pos:end="183:20">snprintf</name><argument_list pos:start="183:21" pos:end="185:74">(<argument pos:start="183:22" pos:end="183:38"><expr pos:start="183:22" pos:end="183:38"><name pos:start="183:22" pos:end="183:24">buf</name> <operator pos:start="183:26" pos:end="183:26">+</operator> <call pos:start="183:28" pos:end="183:38"><name pos:start="183:28" pos:end="183:33">strlen</name><argument_list pos:start="183:34" pos:end="183:38">(<argument pos:start="183:35" pos:end="183:37"><expr pos:start="183:35" pos:end="183:37"><name pos:start="183:35" pos:end="183:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:41" pos:end="183:62"><expr pos:start="183:41" pos:end="183:62"><name pos:start="183:41" pos:end="183:48">buf_size</name> <operator pos:start="183:50" pos:end="183:50">-</operator> <call pos:start="183:52" pos:end="183:62"><name pos:start="183:52" pos:end="183:57">strlen</name><argument_list pos:start="183:58" pos:end="183:62">(<argument pos:start="183:59" pos:end="183:61"><expr pos:start="183:59" pos:end="183:61"><name pos:start="183:59" pos:end="183:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="185:22" pos:end="185:27"><expr pos:start="185:22" pos:end="185:27"><literal type="string" pos:start="185:22" pos:end="185:27">", %s"</literal></expr></argument>, <argument pos:start="185:30" pos:end="185:73"><expr pos:start="185:30" pos:end="185:73"><call pos:start="185:30" pos:end="185:73"><name pos:start="185:30" pos:end="185:56">avcodec_get_sample_fmt_name</name><argument_list pos:start="185:57" pos:end="185:73">(<argument pos:start="185:58" pos:end="185:72"><expr pos:start="185:58" pos:end="185:72"><name pos:start="185:58" pos:end="185:72"><name pos:start="185:58" pos:end="185:60">enc</name><operator pos:start="185:61" pos:end="185:62">-&gt;</operator><name pos:start="185:63" pos:end="185:72">sample_fmt</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="191:9" pos:end="191:54">/* for PCM codecs, compute bitrate directly */</comment>

        <switch pos:start="193:9" pos:end="267:9">switch<condition pos:start="193:15" pos:end="193:29">(<expr pos:start="193:16" pos:end="193:28"><name pos:start="193:16" pos:end="193:28"><name pos:start="193:16" pos:end="193:18">enc</name><operator pos:start="193:19" pos:end="193:20">-&gt;</operator><name pos:start="193:21" pos:end="193:28">codec_id</name></name></expr>)</condition> <block pos:start="193:31" pos:end="267:9">{<block_content pos:start="195:9" pos:end="265:18">

        <case pos:start="195:9" pos:end="195:32">case <expr pos:start="195:14" pos:end="195:31"><name pos:start="195:14" pos:end="195:31">CODEC_ID_PCM_F64BE</name></expr>:</case>

        <case pos:start="197:9" pos:end="197:32">case <expr pos:start="197:14" pos:end="197:31"><name pos:start="197:14" pos:end="197:31">CODEC_ID_PCM_F64LE</name></expr>:</case>

            <expr_stmt pos:start="199:13" pos:end="199:60"><expr pos:start="199:13" pos:end="199:59"><name pos:start="199:13" pos:end="199:19">bitrate</name> <operator pos:start="199:21" pos:end="199:21">=</operator> <name pos:start="199:23" pos:end="199:38"><name pos:start="199:23" pos:end="199:25">enc</name><operator pos:start="199:26" pos:end="199:27">-&gt;</operator><name pos:start="199:28" pos:end="199:38">sample_rate</name></name> <operator pos:start="199:40" pos:end="199:40">*</operator> <name pos:start="199:42" pos:end="199:54"><name pos:start="199:42" pos:end="199:44">enc</name><operator pos:start="199:45" pos:end="199:46">-&gt;</operator><name pos:start="199:47" pos:end="199:54">channels</name></name> <operator pos:start="199:56" pos:end="199:56">*</operator> <literal type="number" pos:start="199:58" pos:end="199:59">64</literal></expr>;</expr_stmt>

            <break pos:start="201:13" pos:end="201:18">break;</break>

        <case pos:start="203:9" pos:end="203:32">case <expr pos:start="203:14" pos:end="203:31"><name pos:start="203:14" pos:end="203:31">CODEC_ID_PCM_S32LE</name></expr>:</case>

        <case pos:start="205:9" pos:end="205:32">case <expr pos:start="205:14" pos:end="205:31"><name pos:start="205:14" pos:end="205:31">CODEC_ID_PCM_S32BE</name></expr>:</case>

        <case pos:start="207:9" pos:end="207:32">case <expr pos:start="207:14" pos:end="207:31"><name pos:start="207:14" pos:end="207:31">CODEC_ID_PCM_U32LE</name></expr>:</case>

        <case pos:start="209:9" pos:end="209:32">case <expr pos:start="209:14" pos:end="209:31"><name pos:start="209:14" pos:end="209:31">CODEC_ID_PCM_U32BE</name></expr>:</case>

        <case pos:start="211:9" pos:end="211:32">case <expr pos:start="211:14" pos:end="211:31"><name pos:start="211:14" pos:end="211:31">CODEC_ID_PCM_F32BE</name></expr>:</case>

        <case pos:start="213:9" pos:end="213:32">case <expr pos:start="213:14" pos:end="213:31"><name pos:start="213:14" pos:end="213:31">CODEC_ID_PCM_F32LE</name></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:60"><expr pos:start="215:13" pos:end="215:59"><name pos:start="215:13" pos:end="215:19">bitrate</name> <operator pos:start="215:21" pos:end="215:21">=</operator> <name pos:start="215:23" pos:end="215:38"><name pos:start="215:23" pos:end="215:25">enc</name><operator pos:start="215:26" pos:end="215:27">-&gt;</operator><name pos:start="215:28" pos:end="215:38">sample_rate</name></name> <operator pos:start="215:40" pos:end="215:40">*</operator> <name pos:start="215:42" pos:end="215:54"><name pos:start="215:42" pos:end="215:44">enc</name><operator pos:start="215:45" pos:end="215:46">-&gt;</operator><name pos:start="215:47" pos:end="215:54">channels</name></name> <operator pos:start="215:56" pos:end="215:56">*</operator> <literal type="number" pos:start="215:58" pos:end="215:59">32</literal></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <case pos:start="219:9" pos:end="219:32">case <expr pos:start="219:14" pos:end="219:31"><name pos:start="219:14" pos:end="219:31">CODEC_ID_PCM_S24LE</name></expr>:</case>

        <case pos:start="221:9" pos:end="221:32">case <expr pos:start="221:14" pos:end="221:31"><name pos:start="221:14" pos:end="221:31">CODEC_ID_PCM_S24BE</name></expr>:</case>

        <case pos:start="223:9" pos:end="223:32">case <expr pos:start="223:14" pos:end="223:31"><name pos:start="223:14" pos:end="223:31">CODEC_ID_PCM_U24LE</name></expr>:</case>

        <case pos:start="225:9" pos:end="225:32">case <expr pos:start="225:14" pos:end="225:31"><name pos:start="225:14" pos:end="225:31">CODEC_ID_PCM_U24BE</name></expr>:</case>

        <case pos:start="227:9" pos:end="227:34">case <expr pos:start="227:14" pos:end="227:33"><name pos:start="227:14" pos:end="227:33">CODEC_ID_PCM_S24DAUD</name></expr>:</case>

            <expr_stmt pos:start="229:13" pos:end="229:60"><expr pos:start="229:13" pos:end="229:59"><name pos:start="229:13" pos:end="229:19">bitrate</name> <operator pos:start="229:21" pos:end="229:21">=</operator> <name pos:start="229:23" pos:end="229:38"><name pos:start="229:23" pos:end="229:25">enc</name><operator pos:start="229:26" pos:end="229:27">-&gt;</operator><name pos:start="229:28" pos:end="229:38">sample_rate</name></name> <operator pos:start="229:40" pos:end="229:40">*</operator> <name pos:start="229:42" pos:end="229:54"><name pos:start="229:42" pos:end="229:44">enc</name><operator pos:start="229:45" pos:end="229:46">-&gt;</operator><name pos:start="229:47" pos:end="229:54">channels</name></name> <operator pos:start="229:56" pos:end="229:56">*</operator> <literal type="number" pos:start="229:58" pos:end="229:59">24</literal></expr>;</expr_stmt>

            <break pos:start="231:13" pos:end="231:18">break;</break>

        <case pos:start="233:9" pos:end="233:32">case <expr pos:start="233:14" pos:end="233:31"><name pos:start="233:14" pos:end="233:31">CODEC_ID_PCM_S16LE</name></expr>:</case>

        <case pos:start="235:9" pos:end="235:32">case <expr pos:start="235:14" pos:end="235:31"><name pos:start="235:14" pos:end="235:31">CODEC_ID_PCM_S16BE</name></expr>:</case>

        <case pos:start="237:9" pos:end="237:39">case <expr pos:start="237:14" pos:end="237:38"><name pos:start="237:14" pos:end="237:38">CODEC_ID_PCM_S16LE_PLANAR</name></expr>:</case>

        <case pos:start="239:9" pos:end="239:32">case <expr pos:start="239:14" pos:end="239:31"><name pos:start="239:14" pos:end="239:31">CODEC_ID_PCM_U16LE</name></expr>:</case>

        <case pos:start="241:9" pos:end="241:32">case <expr pos:start="241:14" pos:end="241:31"><name pos:start="241:14" pos:end="241:31">CODEC_ID_PCM_U16BE</name></expr>:</case>

            <expr_stmt pos:start="243:13" pos:end="243:60"><expr pos:start="243:13" pos:end="243:59"><name pos:start="243:13" pos:end="243:19">bitrate</name> <operator pos:start="243:21" pos:end="243:21">=</operator> <name pos:start="243:23" pos:end="243:38"><name pos:start="243:23" pos:end="243:25">enc</name><operator pos:start="243:26" pos:end="243:27">-&gt;</operator><name pos:start="243:28" pos:end="243:38">sample_rate</name></name> <operator pos:start="243:40" pos:end="243:40">*</operator> <name pos:start="243:42" pos:end="243:54"><name pos:start="243:42" pos:end="243:44">enc</name><operator pos:start="243:45" pos:end="243:46">-&gt;</operator><name pos:start="243:47" pos:end="243:54">channels</name></name> <operator pos:start="243:56" pos:end="243:56">*</operator> <literal type="number" pos:start="243:58" pos:end="243:59">16</literal></expr>;</expr_stmt>

            <break pos:start="245:13" pos:end="245:18">break;</break>

        <case pos:start="247:9" pos:end="247:29">case <expr pos:start="247:14" pos:end="247:28"><name pos:start="247:14" pos:end="247:28">CODEC_ID_PCM_S8</name></expr>:</case>

        <case pos:start="249:9" pos:end="249:29">case <expr pos:start="249:14" pos:end="249:28"><name pos:start="249:14" pos:end="249:28">CODEC_ID_PCM_U8</name></expr>:</case>

        <case pos:start="251:9" pos:end="251:31">case <expr pos:start="251:14" pos:end="251:30"><name pos:start="251:14" pos:end="251:30">CODEC_ID_PCM_ALAW</name></expr>:</case>

        <case pos:start="253:9" pos:end="253:32">case <expr pos:start="253:14" pos:end="253:31"><name pos:start="253:14" pos:end="253:31">CODEC_ID_PCM_MULAW</name></expr>:</case>

        <case pos:start="255:9" pos:end="255:31">case <expr pos:start="255:14" pos:end="255:30"><name pos:start="255:14" pos:end="255:30">CODEC_ID_PCM_ZORK</name></expr>:</case>

            <expr_stmt pos:start="257:13" pos:end="257:59"><expr pos:start="257:13" pos:end="257:58"><name pos:start="257:13" pos:end="257:19">bitrate</name> <operator pos:start="257:21" pos:end="257:21">=</operator> <name pos:start="257:23" pos:end="257:38"><name pos:start="257:23" pos:end="257:25">enc</name><operator pos:start="257:26" pos:end="257:27">-&gt;</operator><name pos:start="257:28" pos:end="257:38">sample_rate</name></name> <operator pos:start="257:40" pos:end="257:40">*</operator> <name pos:start="257:42" pos:end="257:54"><name pos:start="257:42" pos:end="257:44">enc</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:54">channels</name></name> <operator pos:start="257:56" pos:end="257:56">*</operator> <literal type="number" pos:start="257:58" pos:end="257:58">8</literal></expr>;</expr_stmt>

            <break pos:start="259:13" pos:end="259:18">break;</break>

        <default pos:start="261:9" pos:end="261:16">default:</default>

            <expr_stmt pos:start="263:13" pos:end="263:36"><expr pos:start="263:13" pos:end="263:35"><name pos:start="263:13" pos:end="263:19">bitrate</name> <operator pos:start="263:21" pos:end="263:21">=</operator> <name pos:start="263:23" pos:end="263:35"><name pos:start="263:23" pos:end="263:25">enc</name><operator pos:start="263:26" pos:end="263:27">-&gt;</operator><name pos:start="263:28" pos:end="263:35">bit_rate</name></name></expr>;</expr_stmt>

            <break pos:start="265:13" pos:end="265:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="269:9" pos:end="269:14">break;</break>

    <case pos:start="271:5" pos:end="271:25">case <expr pos:start="271:10" pos:end="271:24"><name pos:start="271:10" pos:end="271:24">CODEC_TYPE_DATA</name></expr>:</case>

        <expr_stmt pos:start="273:9" pos:end="273:56"><expr pos:start="273:9" pos:end="273:55"><call pos:start="273:9" pos:end="273:55"><name pos:start="273:9" pos:end="273:16">snprintf</name><argument_list pos:start="273:17" pos:end="273:55">(<argument pos:start="273:18" pos:end="273:20"><expr pos:start="273:18" pos:end="273:20"><name pos:start="273:18" pos:end="273:20">buf</name></expr></argument>, <argument pos:start="273:23" pos:end="273:30"><expr pos:start="273:23" pos:end="273:30"><name pos:start="273:23" pos:end="273:30">buf_size</name></expr></argument>, <argument pos:start="273:33" pos:end="273:42"><expr pos:start="273:33" pos:end="273:42"><literal type="string" pos:start="273:33" pos:end="273:42">"Data: %s"</literal></expr></argument>, <argument pos:start="273:45" pos:end="273:54"><expr pos:start="273:45" pos:end="273:54"><name pos:start="273:45" pos:end="273:54">codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:32"><expr pos:start="275:9" pos:end="275:31"><name pos:start="275:9" pos:end="275:15">bitrate</name> <operator pos:start="275:17" pos:end="275:17">=</operator> <name pos:start="275:19" pos:end="275:31"><name pos:start="275:19" pos:end="275:21">enc</name><operator pos:start="275:22" pos:end="275:23">-&gt;</operator><name pos:start="275:24" pos:end="275:31">bit_rate</name></name></expr>;</expr_stmt>

        <break pos:start="277:9" pos:end="277:14">break;</break>

    <case pos:start="279:5" pos:end="279:29">case <expr pos:start="279:10" pos:end="279:28"><name pos:start="279:10" pos:end="279:28">CODEC_TYPE_SUBTITLE</name></expr>:</case>

        <expr_stmt pos:start="281:9" pos:end="281:60"><expr pos:start="281:9" pos:end="281:59"><call pos:start="281:9" pos:end="281:59"><name pos:start="281:9" pos:end="281:16">snprintf</name><argument_list pos:start="281:17" pos:end="281:59">(<argument pos:start="281:18" pos:end="281:20"><expr pos:start="281:18" pos:end="281:20"><name pos:start="281:18" pos:end="281:20">buf</name></expr></argument>, <argument pos:start="281:23" pos:end="281:30"><expr pos:start="281:23" pos:end="281:30"><name pos:start="281:23" pos:end="281:30">buf_size</name></expr></argument>, <argument pos:start="281:33" pos:end="281:46"><expr pos:start="281:33" pos:end="281:46"><literal type="string" pos:start="281:33" pos:end="281:46">"Subtitle: %s"</literal></expr></argument>, <argument pos:start="281:49" pos:end="281:58"><expr pos:start="281:49" pos:end="281:58"><name pos:start="281:49" pos:end="281:58">codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:32"><expr pos:start="283:9" pos:end="283:31"><name pos:start="283:9" pos:end="283:15">bitrate</name> <operator pos:start="283:17" pos:end="283:17">=</operator> <name pos:start="283:19" pos:end="283:31"><name pos:start="283:19" pos:end="283:21">enc</name><operator pos:start="283:22" pos:end="283:23">-&gt;</operator><name pos:start="283:24" pos:end="283:31">bit_rate</name></name></expr>;</expr_stmt>

        <break pos:start="285:9" pos:end="285:14">break;</break>

    <case pos:start="287:5" pos:end="287:31">case <expr pos:start="287:10" pos:end="287:30"><name pos:start="287:10" pos:end="287:30">CODEC_TYPE_ATTACHMENT</name></expr>:</case>

        <expr_stmt pos:start="289:9" pos:end="289:62"><expr pos:start="289:9" pos:end="289:61"><call pos:start="289:9" pos:end="289:61"><name pos:start="289:9" pos:end="289:16">snprintf</name><argument_list pos:start="289:17" pos:end="289:61">(<argument pos:start="289:18" pos:end="289:20"><expr pos:start="289:18" pos:end="289:20"><name pos:start="289:18" pos:end="289:20">buf</name></expr></argument>, <argument pos:start="289:23" pos:end="289:30"><expr pos:start="289:23" pos:end="289:30"><name pos:start="289:23" pos:end="289:30">buf_size</name></expr></argument>, <argument pos:start="289:33" pos:end="289:48"><expr pos:start="289:33" pos:end="289:48"><literal type="string" pos:start="289:33" pos:end="289:48">"Attachment: %s"</literal></expr></argument>, <argument pos:start="289:51" pos:end="289:60"><expr pos:start="289:51" pos:end="289:60"><name pos:start="289:51" pos:end="289:60">codec_name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="291:9" pos:end="291:32"><expr pos:start="291:9" pos:end="291:31"><name pos:start="291:9" pos:end="291:15">bitrate</name> <operator pos:start="291:17" pos:end="291:17">=</operator> <name pos:start="291:19" pos:end="291:31"><name pos:start="291:19" pos:end="291:21">enc</name><operator pos:start="291:22" pos:end="291:23">-&gt;</operator><name pos:start="291:24" pos:end="291:31">bit_rate</name></name></expr>;</expr_stmt>

        <break pos:start="293:9" pos:end="293:14">break;</break>

    <default pos:start="295:5" pos:end="295:12">default:</default>

        <expr_stmt pos:start="297:9" pos:end="297:74"><expr pos:start="297:9" pos:end="297:73"><call pos:start="297:9" pos:end="297:73"><name pos:start="297:9" pos:end="297:16">snprintf</name><argument_list pos:start="297:17" pos:end="297:73">(<argument pos:start="297:18" pos:end="297:20"><expr pos:start="297:18" pos:end="297:20"><name pos:start="297:18" pos:end="297:20">buf</name></expr></argument>, <argument pos:start="297:23" pos:end="297:30"><expr pos:start="297:23" pos:end="297:30"><name pos:start="297:23" pos:end="297:30">buf_size</name></expr></argument>, <argument pos:start="297:33" pos:end="297:55"><expr pos:start="297:33" pos:end="297:55"><literal type="string" pos:start="297:33" pos:end="297:55">"Invalid Codec type %d"</literal></expr></argument>, <argument pos:start="297:58" pos:end="297:72"><expr pos:start="297:58" pos:end="297:72"><name pos:start="297:58" pos:end="297:72"><name pos:start="297:58" pos:end="297:60">enc</name><operator pos:start="297:61" pos:end="297:62">-&gt;</operator><name pos:start="297:63" pos:end="297:72">codec_type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="299:9" pos:end="299:15">return;</return>

    </block_content>}</block></switch>

    <if_stmt pos:start="303:5" pos:end="317:5"><if pos:start="303:5" pos:end="317:5">if <condition pos:start="303:8" pos:end="303:15">(<expr pos:start="303:9" pos:end="303:14"><name pos:start="303:9" pos:end="303:14">encode</name></expr>)</condition> <block pos:start="303:17" pos:end="317:5">{<block_content pos:start="305:9" pos:end="315:33">

        <if_stmt pos:start="305:9" pos:end="309:33"><if pos:start="305:9" pos:end="309:33">if <condition pos:start="305:12" pos:end="305:42">(<expr pos:start="305:13" pos:end="305:41"><name pos:start="305:13" pos:end="305:22"><name pos:start="305:13" pos:end="305:15">enc</name><operator pos:start="305:16" pos:end="305:17">-&gt;</operator><name pos:start="305:18" pos:end="305:22">flags</name></name> <operator pos:start="305:24" pos:end="305:24">&amp;</operator> <name pos:start="305:26" pos:end="305:41">CODEC_FLAG_PASS1</name></expr>)</condition><block type="pseudo" pos:start="307:13" pos:end="309:33"><block_content pos:start="307:13" pos:end="309:33">

            <expr_stmt pos:start="307:13" pos:end="309:33"><expr pos:start="307:13" pos:end="309:32"><call pos:start="307:13" pos:end="309:32"><name pos:start="307:13" pos:end="307:20">snprintf</name><argument_list pos:start="307:21" pos:end="309:32">(<argument pos:start="307:22" pos:end="307:38"><expr pos:start="307:22" pos:end="307:38"><name pos:start="307:22" pos:end="307:24">buf</name> <operator pos:start="307:26" pos:end="307:26">+</operator> <call pos:start="307:28" pos:end="307:38"><name pos:start="307:28" pos:end="307:33">strlen</name><argument_list pos:start="307:34" pos:end="307:38">(<argument pos:start="307:35" pos:end="307:37"><expr pos:start="307:35" pos:end="307:37"><name pos:start="307:35" pos:end="307:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="307:41" pos:end="307:62"><expr pos:start="307:41" pos:end="307:62"><name pos:start="307:41" pos:end="307:48">buf_size</name> <operator pos:start="307:50" pos:end="307:50">-</operator> <call pos:start="307:52" pos:end="307:62"><name pos:start="307:52" pos:end="307:57">strlen</name><argument_list pos:start="307:58" pos:end="307:62">(<argument pos:start="307:59" pos:end="307:61"><expr pos:start="307:59" pos:end="307:61"><name pos:start="307:59" pos:end="307:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="309:22" pos:end="309:31"><expr pos:start="309:22" pos:end="309:31"><literal type="string" pos:start="309:22" pos:end="309:31">", pass 1"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="311:9" pos:end="315:33"><if pos:start="311:9" pos:end="315:33">if <condition pos:start="311:12" pos:end="311:42">(<expr pos:start="311:13" pos:end="311:41"><name pos:start="311:13" pos:end="311:22"><name pos:start="311:13" pos:end="311:15">enc</name><operator pos:start="311:16" pos:end="311:17">-&gt;</operator><name pos:start="311:18" pos:end="311:22">flags</name></name> <operator pos:start="311:24" pos:end="311:24">&amp;</operator> <name pos:start="311:26" pos:end="311:41">CODEC_FLAG_PASS2</name></expr>)</condition><block type="pseudo" pos:start="313:13" pos:end="315:33"><block_content pos:start="313:13" pos:end="315:33">

            <expr_stmt pos:start="313:13" pos:end="315:33"><expr pos:start="313:13" pos:end="315:32"><call pos:start="313:13" pos:end="315:32"><name pos:start="313:13" pos:end="313:20">snprintf</name><argument_list pos:start="313:21" pos:end="315:32">(<argument pos:start="313:22" pos:end="313:38"><expr pos:start="313:22" pos:end="313:38"><name pos:start="313:22" pos:end="313:24">buf</name> <operator pos:start="313:26" pos:end="313:26">+</operator> <call pos:start="313:28" pos:end="313:38"><name pos:start="313:28" pos:end="313:33">strlen</name><argument_list pos:start="313:34" pos:end="313:38">(<argument pos:start="313:35" pos:end="313:37"><expr pos:start="313:35" pos:end="313:37"><name pos:start="313:35" pos:end="313:37">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="313:41" pos:end="313:62"><expr pos:start="313:41" pos:end="313:62"><name pos:start="313:41" pos:end="313:48">buf_size</name> <operator pos:start="313:50" pos:end="313:50">-</operator> <call pos:start="313:52" pos:end="313:62"><name pos:start="313:52" pos:end="313:57">strlen</name><argument_list pos:start="313:58" pos:end="313:62">(<argument pos:start="313:59" pos:end="313:61"><expr pos:start="313:59" pos:end="313:61"><name pos:start="313:59" pos:end="313:61">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                     <argument pos:start="315:22" pos:end="315:31"><expr pos:start="315:22" pos:end="315:31"><literal type="string" pos:start="315:22" pos:end="315:31">", pass 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="319:5" pos:end="325:5"><if pos:start="319:5" pos:end="325:5">if <condition pos:start="319:8" pos:end="319:21">(<expr pos:start="319:9" pos:end="319:20"><name pos:start="319:9" pos:end="319:15">bitrate</name> <operator pos:start="319:17" pos:end="319:18">!=</operator> <literal type="number" pos:start="319:20" pos:end="319:20">0</literal></expr>)</condition> <block pos:start="319:23" pos:end="325:5">{<block_content pos:start="321:9" pos:end="323:46">

        <expr_stmt pos:start="321:9" pos:end="323:46"><expr pos:start="321:9" pos:end="323:45"><call pos:start="321:9" pos:end="323:45"><name pos:start="321:9" pos:end="321:16">snprintf</name><argument_list pos:start="321:17" pos:end="323:45">(<argument pos:start="321:18" pos:end="321:34"><expr pos:start="321:18" pos:end="321:34"><name pos:start="321:18" pos:end="321:20">buf</name> <operator pos:start="321:22" pos:end="321:22">+</operator> <call pos:start="321:24" pos:end="321:34"><name pos:start="321:24" pos:end="321:29">strlen</name><argument_list pos:start="321:30" pos:end="321:34">(<argument pos:start="321:31" pos:end="321:33"><expr pos:start="321:31" pos:end="321:33"><name pos:start="321:31" pos:end="321:33">buf</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="321:37" pos:end="321:58"><expr pos:start="321:37" pos:end="321:58"><name pos:start="321:37" pos:end="321:44">buf_size</name> <operator pos:start="321:46" pos:end="321:46">-</operator> <call pos:start="321:48" pos:end="321:58"><name pos:start="321:48" pos:end="321:53">strlen</name><argument_list pos:start="321:54" pos:end="321:58">(<argument pos:start="321:55" pos:end="321:57"><expr pos:start="321:55" pos:end="321:57"><name pos:start="321:55" pos:end="321:57">buf</name></expr></argument>)</argument_list></call></expr></argument>,

                 <argument pos:start="323:18" pos:end="323:28"><expr pos:start="323:18" pos:end="323:28"><literal type="string" pos:start="323:18" pos:end="323:28">", %d kb/s"</literal></expr></argument>, <argument pos:start="323:31" pos:end="323:44"><expr pos:start="323:31" pos:end="323:44"><name pos:start="323:31" pos:end="323:37">bitrate</name> <operator pos:start="323:39" pos:end="323:39">/</operator> <literal type="number" pos:start="323:41" pos:end="323:44">1000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
