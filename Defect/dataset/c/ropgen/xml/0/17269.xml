<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17269.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">gboolean</name></type> <name pos:start="1:17" pos:end="1:27">fd_chr_read</name><parameter_list pos:start="1:28" pos:end="1:78">(<parameter pos:start="1:29" pos:end="1:44"><decl pos:start="1:29" pos:end="1:44"><type pos:start="1:29" pos:end="1:44"><name pos:start="1:29" pos:end="1:38">GIOChannel</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:44">chan</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:63"><decl pos:start="1:47" pos:end="1:63"><type pos:start="1:47" pos:end="1:63"><name pos:start="1:47" pos:end="1:58">GIOCondition</name></type> <name pos:start="1:60" pos:end="1:63">cond</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="57:1">{<block_content pos:start="5:5" pos:end="55:16">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:19">CharDriverState</name> <modifier pos:start="5:21" pos:end="5:21">*</modifier></type><name pos:start="5:22" pos:end="5:24">chr</name> <init pos:start="5:26" pos:end="5:33">= <expr pos:start="5:28" pos:end="5:33"><name pos:start="5:28" pos:end="5:33">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">FDCharDriver</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:19">s</name> <init pos:start="7:21" pos:end="7:33">= <expr pos:start="7:23" pos:end="7:33"><name pos:start="7:23" pos:end="7:33"><name pos:start="7:23" pos:end="7:25">chr</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:30"><decl pos:start="11:5" pos:end="11:29"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:29"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:29">[<expr pos:start="11:17" pos:end="11:28"><name pos:start="11:17" pos:end="11:28">READ_BUF_LEN</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">GIOStatus</name></type> <name pos:start="13:15" pos:end="13:20">status</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:21"><decl pos:start="15:5" pos:end="15:20"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">gsize</name></type> <name pos:start="15:11" pos:end="15:20">bytes_read</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:22"><expr pos:start="19:5" pos:end="19:21"><name pos:start="19:5" pos:end="19:7">len</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <sizeof pos:start="19:11" pos:end="19:21">sizeof<argument_list pos:start="19:17" pos:end="19:21">(<argument pos:start="19:18" pos:end="19:20"><expr pos:start="19:18" pos:end="19:20"><name pos:start="19:18" pos:end="19:20">buf</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:11">len</name> <operator pos:start="21:13" pos:end="21:13">&gt;</operator> <name pos:start="21:15" pos:end="21:25"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:25">max_size</name></name></expr>)</condition> <block pos:start="21:28" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:26">

        <expr_stmt pos:start="23:9" pos:end="23:26"><expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:11">len</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <name pos:start="23:15" pos:end="23:25"><name pos:start="23:15" pos:end="23:15">s</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:25">max_size</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:17">(<expr pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:11">len</name> <operator pos:start="27:13" pos:end="27:14">==</operator> <literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>)</condition> <block pos:start="27:19" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:21">

        <return pos:start="29:9" pos:end="29:21">return <expr pos:start="29:16" pos:end="29:20"><name pos:start="29:16" pos:end="29:20">FALSE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="37:61"><expr pos:start="35:5" pos:end="37:60"><name pos:start="35:5" pos:end="35:10">status</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <call pos:start="35:14" pos:end="37:60"><name pos:start="35:14" pos:end="35:36">g_io_channel_read_chars</name><argument_list pos:start="35:37" pos:end="37:60">(<argument pos:start="35:38" pos:end="35:41"><expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">chan</name></expr></argument>, <argument pos:start="35:44" pos:end="35:55"><expr pos:start="35:44" pos:end="35:55"><operator pos:start="35:44" pos:end="35:44">(</operator><name pos:start="35:45" pos:end="35:49">gchar</name> <operator pos:start="35:51" pos:end="35:51">*</operator><operator pos:start="35:52" pos:end="35:52">)</operator><name pos:start="35:53" pos:end="35:55">buf</name></expr></argument>,

                                     <argument pos:start="37:38" pos:end="37:40"><expr pos:start="37:38" pos:end="37:40"><name pos:start="37:38" pos:end="37:40">len</name></expr></argument>, <argument pos:start="37:43" pos:end="37:53"><expr pos:start="37:43" pos:end="37:53"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:53">bytes_read</name></expr></argument>, <argument pos:start="37:56" pos:end="37:59"><expr pos:start="37:56" pos:end="37:59"><name pos:start="37:56" pos:end="37:59">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:34">(<expr pos:start="39:9" pos:end="39:33"><name pos:start="39:9" pos:end="39:14">status</name> <operator pos:start="39:16" pos:end="39:17">==</operator> <name pos:start="39:19" pos:end="39:33">G_IO_STATUS_EOF</name></expr>)</condition> <block pos:start="39:36" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:21">

        <expr_stmt pos:start="41:9" pos:end="41:49"><expr pos:start="41:9" pos:end="41:48"><call pos:start="41:9" pos:end="41:48"><name pos:start="41:9" pos:end="41:25">qemu_chr_be_event</name><argument_list pos:start="41:26" pos:end="41:48">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">chr</name></expr></argument>, <argument pos:start="41:32" pos:end="41:47"><expr pos:start="41:32" pos:end="41:47"><name pos:start="41:32" pos:end="41:47">CHR_EVENT_CLOSED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="43:9" pos:end="43:21">return <expr pos:start="43:16" pos:end="43:20"><name pos:start="43:16" pos:end="43:20">FALSE</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="51:5"><if pos:start="47:5" pos:end="51:5">if <condition pos:start="47:8" pos:end="47:37">(<expr pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:14">status</name> <operator pos:start="47:16" pos:end="47:17">==</operator> <name pos:start="47:19" pos:end="47:36">G_IO_STATUS_NORMAL</name></expr>)</condition> <block pos:start="47:39" pos:end="51:5">{<block_content pos:start="49:9" pos:end="49:48">

        <expr_stmt pos:start="49:9" pos:end="49:48"><expr pos:start="49:9" pos:end="49:47"><call pos:start="49:9" pos:end="49:47"><name pos:start="49:9" pos:end="49:25">qemu_chr_be_write</name><argument_list pos:start="49:26" pos:end="49:47">(<argument pos:start="49:27" pos:end="49:29"><expr pos:start="49:27" pos:end="49:29"><name pos:start="49:27" pos:end="49:29">chr</name></expr></argument>, <argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">buf</name></expr></argument>, <argument pos:start="49:37" pos:end="49:46"><expr pos:start="49:37" pos:end="49:46"><name pos:start="49:37" pos:end="49:46">bytes_read</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="55:5" pos:end="55:16">return <expr pos:start="55:12" pos:end="55:15"><name pos:start="55:12" pos:end="55:15">TRUE</name></expr>;</return>

</block_content>}</block></function>
</unit>
