<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26682.c" pos:tabs="8"><function pos:start="1:1" pos:end="109:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">enable_write_target</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:47"><name pos:start="1:32" pos:end="1:45">BDRVVVFATState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="109:1">{<block_content pos:start="5:5" pos:end="107:15">

    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:26"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">BlockDriver</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:26">bdrv_qcow</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:33"><decl pos:start="7:5" pos:end="7:32"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">QEMUOptionParameter</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:32">options</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:12"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:50"><decl pos:start="13:5" pos:end="13:49"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">size</name> <init pos:start="13:14" pos:end="13:49">= <expr pos:start="13:16" pos:end="13:49"><call pos:start="13:16" pos:end="13:49"><name pos:start="13:16" pos:end="13:29">sector2cluster</name><argument_list pos:start="13:30" pos:end="13:49">(<argument pos:start="13:31" pos:end="13:31"><expr pos:start="13:31" pos:end="13:31"><name pos:start="13:31" pos:end="13:31">s</name></expr></argument>, <argument pos:start="13:34" pos:end="13:48"><expr pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:48"><name pos:start="13:34" pos:end="13:34">s</name><operator pos:start="13:35" pos:end="13:36">-&gt;</operator><name pos:start="13:37" pos:end="13:48">sector_count</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:20"><name pos:start="15:5" pos:end="15:5">s</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:20">used_clusters</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <call pos:start="15:24" pos:end="15:38"><name pos:start="15:24" pos:end="15:29">calloc</name><argument_list pos:start="15:30" pos:end="15:38">(<argument pos:start="15:31" pos:end="15:34"><expr pos:start="15:31" pos:end="15:34"><name pos:start="15:31" pos:end="15:34">size</name></expr></argument>, <argument pos:start="15:37" pos:end="15:37"><expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:48"><expr pos:start="19:5" pos:end="19:47"><call pos:start="19:5" pos:end="19:47"><name pos:start="19:5" pos:end="19:14">array_init</name><argument_list pos:start="19:15" pos:end="19:47">(<argument pos:start="19:16" pos:end="19:28"><expr pos:start="19:16" pos:end="19:28"><operator pos:start="19:16" pos:end="19:16">&amp;</operator><operator pos:start="19:17" pos:end="19:17">(</operator><name pos:start="19:18" pos:end="19:27"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:27">commits</name></name><operator pos:start="19:28" pos:end="19:28">)</operator></expr></argument>, <argument pos:start="19:31" pos:end="19:46"><expr pos:start="19:31" pos:end="19:46"><sizeof pos:start="19:31" pos:end="19:46">sizeof<argument_list pos:start="19:37" pos:end="19:46">(<argument pos:start="19:38" pos:end="19:45"><expr pos:start="19:38" pos:end="19:45"><name pos:start="19:38" pos:end="19:45">commit_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:20">qcow_filename</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:37"><name pos:start="23:24" pos:end="23:31">g_malloc</name><argument_list pos:start="23:32" pos:end="23:37">(<argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><literal type="number" pos:start="23:33" pos:end="23:36">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:51"><expr pos:start="25:5" pos:end="25:50"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:50"><name pos:start="25:11" pos:end="25:26">get_tmp_filename</name><argument_list pos:start="25:27" pos:end="25:50">(<argument pos:start="25:28" pos:end="25:43"><expr pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:28">s</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:43">qcow_filename</name></name></expr></argument>, <argument pos:start="25:46" pos:end="25:49"><expr pos:start="25:46" pos:end="25:49"><literal type="number" pos:start="25:46" pos:end="25:49">1024</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:13">bdrv_qcow</name> <operator pos:start="35:15" pos:end="35:15">=</operator> <call pos:start="35:17" pos:end="35:40"><name pos:start="35:17" pos:end="35:32">bdrv_find_format</name><argument_list pos:start="35:33" pos:end="35:40">(<argument pos:start="35:34" pos:end="35:39"><expr pos:start="35:34" pos:end="35:39"><literal type="string" pos:start="35:34" pos:end="35:39">"qcow"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:75"><expr pos:start="37:5" pos:end="37:74"><name pos:start="37:5" pos:end="37:11">options</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <call pos:start="37:15" pos:end="37:74"><name pos:start="37:15" pos:end="37:37">parse_option_parameters</name><argument_list pos:start="37:38" pos:end="37:74">(<argument pos:start="37:39" pos:end="37:40"><expr pos:start="37:39" pos:end="37:40"><literal type="string" pos:start="37:39" pos:end="37:40">""</literal></expr></argument>, <argument pos:start="37:43" pos:end="37:67"><expr pos:start="37:43" pos:end="37:67"><name pos:start="37:43" pos:end="37:67"><name pos:start="37:43" pos:end="37:51">bdrv_qcow</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:67">create_options</name></name></expr></argument>, <argument pos:start="37:70" pos:end="37:73"><expr pos:start="37:70" pos:end="37:73"><name pos:start="37:70" pos:end="37:73">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:77"><expr pos:start="39:5" pos:end="39:76"><call pos:start="39:5" pos:end="39:76"><name pos:start="39:5" pos:end="39:28">set_option_parameter_int</name><argument_list pos:start="39:29" pos:end="39:76">(<argument pos:start="39:30" pos:end="39:36"><expr pos:start="39:30" pos:end="39:36"><name pos:start="39:30" pos:end="39:36">options</name></expr></argument>, <argument pos:start="39:39" pos:end="39:52"><expr pos:start="39:39" pos:end="39:52"><name pos:start="39:39" pos:end="39:52">BLOCK_OPT_SIZE</name></expr></argument>, <argument pos:start="39:55" pos:end="39:75"><expr pos:start="39:55" pos:end="39:75"><name pos:start="39:55" pos:end="39:69"><name pos:start="39:55" pos:end="39:55">s</name><operator pos:start="39:56" pos:end="39:57">-&gt;</operator><name pos:start="39:58" pos:end="39:69">sector_count</name></name> <operator pos:start="39:71" pos:end="39:71">*</operator> <literal type="number" pos:start="39:73" pos:end="39:75">512</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:66"><expr pos:start="41:5" pos:end="41:65"><call pos:start="41:5" pos:end="41:65"><name pos:start="41:5" pos:end="41:24">set_option_parameter</name><argument_list pos:start="41:25" pos:end="41:65">(<argument pos:start="41:26" pos:end="41:32"><expr pos:start="41:26" pos:end="41:32"><name pos:start="41:26" pos:end="41:32">options</name></expr></argument>, <argument pos:start="41:35" pos:end="41:56"><expr pos:start="41:35" pos:end="41:56"><name pos:start="41:35" pos:end="41:56">BLOCK_OPT_BACKING_FILE</name></expr></argument>, <argument pos:start="41:59" pos:end="41:64"><expr pos:start="41:59" pos:end="41:64"><literal type="string" pos:start="41:59" pos:end="41:64">"fat:"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:72"><expr pos:start="45:5" pos:end="45:71"><name pos:start="45:5" pos:end="45:7">ret</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:71"><name pos:start="45:11" pos:end="45:21">bdrv_create</name><argument_list pos:start="45:22" pos:end="45:71">(<argument pos:start="45:23" pos:end="45:31"><expr pos:start="45:23" pos:end="45:31"><name pos:start="45:23" pos:end="45:31">bdrv_qcow</name></expr></argument>, <argument pos:start="45:34" pos:end="45:49"><expr pos:start="45:34" pos:end="45:49"><name pos:start="45:34" pos:end="45:49"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:49">qcow_filename</name></name></expr></argument>, <argument pos:start="45:52" pos:end="45:58"><expr pos:start="45:52" pos:end="45:58"><name pos:start="45:52" pos:end="45:58">options</name></expr></argument>, <argument pos:start="45:61" pos:end="45:70"><expr pos:start="45:61" pos:end="45:70"><operator pos:start="45:61" pos:end="45:61">&amp;</operator><name pos:start="45:62" pos:end="45:70">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="47:5" pos:end="55:5"><if pos:start="47:5" pos:end="55:5">if <condition pos:start="47:8" pos:end="47:16">(<expr pos:start="47:9" pos:end="47:15"><name pos:start="47:9" pos:end="47:11">ret</name> <operator pos:start="47:13" pos:end="47:13">&lt;</operator> <literal type="number" pos:start="47:15" pos:end="47:15">0</literal></expr>)</condition> <block pos:start="47:18" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:17">

        <expr_stmt pos:start="49:9" pos:end="49:37"><expr pos:start="49:9" pos:end="49:36"><call pos:start="49:9" pos:end="49:36"><name pos:start="49:9" pos:end="49:25">qerror_report_err</name><argument_list pos:start="49:26" pos:end="49:36">(<argument pos:start="49:27" pos:end="49:35"><expr pos:start="49:27" pos:end="49:35"><name pos:start="49:27" pos:end="49:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:30"><expr pos:start="51:9" pos:end="51:29"><call pos:start="51:9" pos:end="51:29"><name pos:start="51:9" pos:end="51:18">error_free</name><argument_list pos:start="51:19" pos:end="51:29">(<argument pos:start="51:20" pos:end="51:28"><expr pos:start="51:20" pos:end="51:28"><name pos:start="51:20" pos:end="51:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="53:9" pos:end="53:17">goto <name pos:start="53:14" pos:end="53:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:19"><expr pos:start="59:5" pos:end="59:18"><name pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:5">s</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:11">qcow</name></name> <operator pos:start="59:13" pos:end="59:13">=</operator> <name pos:start="59:15" pos:end="59:18">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="65:24"><expr pos:start="61:5" pos:end="65:23"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="65:23"><name pos:start="61:11" pos:end="61:19">bdrv_open</name><argument_list pos:start="61:20" pos:end="65:23">(<argument pos:start="61:21" pos:end="61:28"><expr pos:start="61:21" pos:end="61:28"><operator pos:start="61:21" pos:end="61:21">&amp;</operator><name pos:start="61:22" pos:end="61:28"><name pos:start="61:22" pos:end="61:22">s</name><operator pos:start="61:23" pos:end="61:24">-&gt;</operator><name pos:start="61:25" pos:end="61:28">qcow</name></name></expr></argument>, <argument pos:start="61:31" pos:end="61:46"><expr pos:start="61:31" pos:end="61:46"><name pos:start="61:31" pos:end="61:46"><name pos:start="61:31" pos:end="61:31">s</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:46">qcow_filename</name></name></expr></argument>, <argument pos:start="61:49" pos:end="61:52"><expr pos:start="61:49" pos:end="61:52"><name pos:start="61:49" pos:end="61:52">NULL</name></expr></argument>, <argument pos:start="61:55" pos:end="61:58"><expr pos:start="61:55" pos:end="61:58"><name pos:start="61:55" pos:end="61:58">NULL</name></expr></argument>,

            <argument pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:59"><name pos:start="63:13" pos:end="63:23">BDRV_O_RDWR</name> <operator pos:start="63:25" pos:end="63:25">|</operator> <name pos:start="63:27" pos:end="63:41">BDRV_O_CACHE_WB</name> <operator pos:start="63:43" pos:end="63:43">|</operator> <name pos:start="63:45" pos:end="63:59">BDRV_O_NO_FLUSH</name></expr></argument>, <argument pos:start="63:62" pos:end="63:70"><expr pos:start="63:62" pos:end="63:70"><name pos:start="63:62" pos:end="63:70">bdrv_qcow</name></expr></argument>,

            <argument pos:start="65:13" pos:end="65:22"><expr pos:start="65:13" pos:end="65:22"><operator pos:start="65:13" pos:end="65:13">&amp;</operator><name pos:start="65:14" pos:end="65:22">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="80:0"><if pos:start="67:5" pos:end="80:0">if <condition pos:start="67:8" pos:end="67:16">(<expr pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">&lt;</operator> <literal type="number" pos:start="67:15" pos:end="67:15">0</literal></expr>)</condition> <block pos:start="67:18" pos:end="80:0">{<block_content pos:start="69:9" pos:end="73:17">

        <expr_stmt pos:start="69:9" pos:end="69:37"><expr pos:start="69:9" pos:end="69:36"><call pos:start="69:9" pos:end="69:36"><name pos:start="69:9" pos:end="69:25">qerror_report_err</name><argument_list pos:start="69:26" pos:end="69:36">(<argument pos:start="69:27" pos:end="69:35"><expr pos:start="69:27" pos:end="69:35"><name pos:start="69:27" pos:end="69:35">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:30"><expr pos:start="71:9" pos:end="71:29"><call pos:start="71:9" pos:end="71:29"><name pos:start="71:9" pos:end="71:18">error_free</name><argument_list pos:start="71:19" pos:end="71:29">(<argument pos:start="71:20" pos:end="71:28"><expr pos:start="71:20" pos:end="71:28"><name pos:start="71:20" pos:end="71:28">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="73:9" pos:end="73:17">goto <name pos:start="73:14" pos:end="73:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



<cpp:ifndef pos:start="79:1" pos:end="79:14">#<cpp:directive pos:start="79:2" pos:end="79:7">ifndef</cpp:directive> <name pos:start="79:9" pos:end="79:14">_WIN32</name></cpp:ifndef>

    <expr_stmt pos:start="81:5" pos:end="84:0"><expr pos:start="81:5" pos:end="81:28"><call pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:10">unlink</name><argument_list pos:start="81:11" pos:end="81:28">(<argument pos:start="81:12" pos:end="81:27"><expr pos:start="81:12" pos:end="81:27"><name pos:start="81:12" pos:end="81:27"><name pos:start="81:12" pos:end="81:12">s</name><operator pos:start="81:13" pos:end="81:14">-&gt;</operator><name pos:start="81:15" pos:end="81:27">qcow_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="83:1" pos:end="83:6">#<cpp:directive pos:start="83:2" pos:end="83:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="87:5" pos:end="87:37"><expr pos:start="87:5" pos:end="87:36"><name pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:9">bs</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:21">backing_hd</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <call pos:start="87:25" pos:end="87:36"><name pos:start="87:25" pos:end="87:32">bdrv_new</name><argument_list pos:start="87:33" pos:end="87:36">(<argument pos:start="87:34" pos:end="87:35"><expr pos:start="87:34" pos:end="87:35"><literal type="string" pos:start="87:34" pos:end="87:35">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:49"><expr pos:start="89:5" pos:end="89:48"><name pos:start="89:5" pos:end="89:26"><name pos:start="89:5" pos:end="89:5">s</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:9">bs</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:21">backing_hd</name><operator pos:start="89:22" pos:end="89:23">-&gt;</operator><name pos:start="89:24" pos:end="89:26">drv</name></name> <operator pos:start="89:28" pos:end="89:28">=</operator> <operator pos:start="89:30" pos:end="89:30">&amp;</operator><name pos:start="89:31" pos:end="89:48">vvfat_write_target</name></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:56"><expr pos:start="91:5" pos:end="91:55"><name pos:start="91:5" pos:end="91:29"><name pos:start="91:5" pos:end="91:5">s</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:9">bs</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:21">backing_hd</name><operator pos:start="91:22" pos:end="91:23">-&gt;</operator><name pos:start="91:24" pos:end="91:29">opaque</name></name> <operator pos:start="91:31" pos:end="91:31">=</operator> <call pos:start="91:33" pos:end="91:55"><name pos:start="91:33" pos:end="91:40">g_malloc</name><argument_list pos:start="91:41" pos:end="91:55">(<argument pos:start="91:42" pos:end="91:54"><expr pos:start="91:42" pos:end="91:54"><sizeof pos:start="91:42" pos:end="91:54">sizeof<argument_list pos:start="91:48" pos:end="91:54">(<argument pos:start="91:49" pos:end="91:53"><expr pos:start="91:49" pos:end="91:53"><name pos:start="91:49" pos:end="91:52">void</name><operator pos:start="91:53" pos:end="91:53">*</operator></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:43"><expr pos:start="93:5" pos:end="93:42"><operator pos:start="93:5" pos:end="93:5">*</operator><operator pos:start="93:6" pos:end="93:6">(</operator><name pos:start="93:7" pos:end="93:10">void</name><operator pos:start="93:11" pos:end="93:11">*</operator><operator pos:start="93:12" pos:end="93:12">*</operator><operator pos:start="93:13" pos:end="93:13">)</operator><name pos:start="93:14" pos:end="93:38"><name pos:start="93:14" pos:end="93:14">s</name><operator pos:start="93:15" pos:end="93:16">-&gt;</operator><name pos:start="93:17" pos:end="93:18">bs</name><operator pos:start="93:19" pos:end="93:20">-&gt;</operator><name pos:start="93:21" pos:end="93:30">backing_hd</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:38">opaque</name></name> <operator pos:start="93:40" pos:end="93:40">=</operator> <name pos:start="93:42" pos:end="93:42">s</name></expr>;</expr_stmt>



    <return pos:start="97:5" pos:end="97:13">return <expr pos:start="97:12" pos:end="97:12"><literal type="number" pos:start="97:12" pos:end="97:12">0</literal></expr>;</return>



<label pos:start="101:1" pos:end="101:4"><name pos:start="101:1" pos:end="101:3">err</name>:</label>

    <expr_stmt pos:start="103:5" pos:end="103:29"><expr pos:start="103:5" pos:end="103:28"><call pos:start="103:5" pos:end="103:28"><name pos:start="103:5" pos:end="103:10">g_free</name><argument_list pos:start="103:11" pos:end="103:28">(<argument pos:start="103:12" pos:end="103:27"><expr pos:start="103:12" pos:end="103:27"><name pos:start="103:12" pos:end="103:27"><name pos:start="103:12" pos:end="103:12">s</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:27">qcow_filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:28"><expr pos:start="105:5" pos:end="105:27"><name pos:start="105:5" pos:end="105:20"><name pos:start="105:5" pos:end="105:5">s</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:20">qcow_filename</name></name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:27">NULL</name></expr>;</expr_stmt>

    <return pos:start="107:5" pos:end="107:15">return <expr pos:start="107:12" pos:end="107:14"><name pos:start="107:12" pos:end="107:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
