<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2553.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">puv3_load_kernel</name><parameter_list pos:start="1:29" pos:end="1:57">(<parameter pos:start="1:30" pos:end="1:56"><decl pos:start="1:30" pos:end="1:56"><type pos:start="1:30" pos:end="1:41"><specifier pos:start="1:30" pos:end="1:34">const</specifier> <name pos:start="1:36" pos:end="1:39">char</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:56">kernel_filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:55">

    <decl_stmt pos:start="5:5" pos:end="5:13"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:36"><expr pos:start="9:5" pos:end="9:35"><call pos:start="9:5" pos:end="9:35"><name pos:start="9:5" pos:end="9:10">assert</name><argument_list pos:start="9:11" pos:end="9:35">(<argument pos:start="9:12" pos:end="9:34"><expr pos:start="9:12" pos:end="9:34"><name pos:start="9:12" pos:end="9:26">kernel_filename</name> <operator pos:start="9:28" pos:end="9:29">!=</operator> <name pos:start="9:31" pos:end="9:34">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:38">/* only zImage format supported */</comment>

    <expr_stmt pos:start="15:5" pos:end="17:29"><expr pos:start="15:5" pos:end="17:28"><name pos:start="15:5" pos:end="15:8">size</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="17:28"><name pos:start="15:12" pos:end="15:30">load_image_targphys</name><argument_list pos:start="15:31" pos:end="17:28">(<argument pos:start="15:32" pos:end="15:46"><expr pos:start="15:32" pos:end="15:46"><name pos:start="15:32" pos:end="15:46">kernel_filename</name></expr></argument>, <argument pos:start="15:49" pos:end="15:64"><expr pos:start="15:49" pos:end="15:64"><name pos:start="15:49" pos:end="15:64">KERNEL_LOAD_ADDR</name></expr></argument>,

            <argument pos:start="17:13" pos:end="17:27"><expr pos:start="17:13" pos:end="17:27"><name pos:start="17:13" pos:end="17:27">KERNEL_MAX_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:12">size</name> <operator pos:start="19:14" pos:end="19:14">&lt;</operator> <literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>)</condition> <block pos:start="19:19" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:63">

        <expr_stmt pos:start="21:9" pos:end="21:63"><expr pos:start="21:9" pos:end="21:62"><call pos:start="21:9" pos:end="21:62"><name pos:start="21:9" pos:end="21:16">hw_error</name><argument_list pos:start="21:17" pos:end="21:62">(<argument pos:start="21:18" pos:end="21:44"><expr pos:start="21:18" pos:end="21:44"><literal type="string" pos:start="21:18" pos:end="21:44">"Load kernel error: '%s'\n"</literal></expr></argument>, <argument pos:start="21:47" pos:end="21:61"><expr pos:start="21:47" pos:end="21:61"><name pos:start="21:47" pos:end="21:61">kernel_filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:77">/* cheat curses that we have a graphic console, only under ocd console */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:55"><expr pos:start="29:5" pos:end="29:54"><call pos:start="29:5" pos:end="29:54"><name pos:start="29:5" pos:end="29:24">graphic_console_init</name><argument_list pos:start="29:25" pos:end="29:54">(<argument pos:start="29:26" pos:end="29:29"><expr pos:start="29:26" pos:end="29:29"><name pos:start="29:26" pos:end="29:29">NULL</name></expr></argument>, <argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><name pos:start="29:32" pos:end="29:35">NULL</name></expr></argument>, <argument pos:start="29:38" pos:end="29:41"><expr pos:start="29:38" pos:end="29:41"><name pos:start="29:38" pos:end="29:41">NULL</name></expr></argument>, <argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">NULL</name></expr></argument>, <argument pos:start="29:50" pos:end="29:53"><expr pos:start="29:50" pos:end="29:53"><name pos:start="29:50" pos:end="29:53">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
