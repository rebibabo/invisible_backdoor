<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10033.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">megasas_ld_get_info_submit</name><parameter_list pos:start="1:38" pos:end="3:54">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:48">SCSIDevice</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:54">sdev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:63"><decl pos:start="1:57" pos:end="1:63"><type pos:start="1:57" pos:end="1:63"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:63">lun</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:53"><decl pos:start="3:39" pos:end="3:53"><type pos:start="3:39" pos:end="3:53"><name pos:start="3:39" pos:end="3:48">MegasasCmd</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">cmd</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="107:1">{<block_content pos:start="7:5" pos:end="105:23">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:22">mfi_ld_info</name></name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:28">info</name> <init pos:start="7:30" pos:end="7:43">= <expr pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:43"><name pos:start="7:32" pos:end="7:34">cmd</name><operator pos:start="7:35" pos:end="7:36">-&gt;</operator><name pos:start="7:37" pos:end="7:43">iov_buf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:50"><decl pos:start="9:5" pos:end="9:49"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:20">dcmd_size</name> <init pos:start="9:22" pos:end="9:49">= <expr pos:start="9:24" pos:end="9:49"><sizeof pos:start="9:24" pos:end="9:49">sizeof<argument_list pos:start="9:30" pos:end="9:49">(<argument pos:start="9:31" pos:end="9:48"><expr pos:start="9:31" pos:end="9:48">struct <name pos:start="9:38" pos:end="9:48">mfi_ld_info</name></expr></argument>)</argument_list></sizeof></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:18"><name pos:start="11:13" pos:end="11:15">cdb</name><index pos:start="11:16" pos:end="11:18">[<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">6</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">SCSIRequest</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">req</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:23"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">ssize_t</name></type> <name pos:start="15:13" pos:end="15:15">len</name></decl>, <decl pos:start="15:18" pos:end="15:22"><type ref="prev" pos:start="15:5" pos:end="15:11"/><name pos:start="15:18" pos:end="15:22">resid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:34"><decl pos:start="17:5" pos:end="17:33"><type pos:start="17:5" pos:end="17:15"><name pos:start="17:5" pos:end="17:13">BlockConf</name> <modifier pos:start="17:15" pos:end="17:15">*</modifier></type><name pos:start="17:16" pos:end="17:19">conf</name> <init pos:start="17:21" pos:end="17:33">= <expr pos:start="17:23" pos:end="17:33"><operator pos:start="17:23" pos:end="17:23">&amp;</operator><name pos:start="17:24" pos:end="17:33"><name pos:start="17:24" pos:end="17:27">sdev</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:33">conf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:63"><decl pos:start="19:5" pos:end="19:62"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint16_t</name></type> <name pos:start="19:14" pos:end="19:20">sdev_id</name> <init pos:start="19:22" pos:end="19:62">= <expr pos:start="19:24" pos:end="19:62"><operator pos:start="19:24" pos:end="19:24">(</operator><operator pos:start="19:25" pos:end="19:25">(</operator><name pos:start="19:26" pos:end="19:33"><name pos:start="19:26" pos:end="19:29">sdev</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:33">id</name></name> <operator pos:start="19:35" pos:end="19:35">&amp;</operator> <literal type="number" pos:start="19:37" pos:end="19:40">0xFF</literal><operator pos:start="19:41" pos:end="19:41">)</operator> <operator pos:start="19:43" pos:end="19:44">&gt;&gt;</operator> <literal type="number" pos:start="19:46" pos:end="19:46">8</literal><operator pos:start="19:47" pos:end="19:47">)</operator> <operator pos:start="19:49" pos:end="19:49">|</operator> <operator pos:start="19:51" pos:end="19:51">(</operator><name pos:start="19:52" pos:end="19:54">lun</name> <operator pos:start="19:56" pos:end="19:56">&amp;</operator> <literal type="number" pos:start="19:58" pos:end="19:61">0xFF</literal><operator pos:start="19:62" pos:end="19:62">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:21"><decl pos:start="21:5" pos:end="21:20"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint64_t</name></type> <name pos:start="21:14" pos:end="21:20">ld_size</name></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="67:5"><if pos:start="25:5" pos:end="67:5">if <condition pos:start="25:8" pos:end="25:22">(<expr pos:start="25:9" pos:end="25:21"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:21"><name pos:start="25:10" pos:end="25:12">cmd</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:21">iov_buf</name></name></expr>)</condition> <block pos:start="25:24" pos:end="67:5">{<block_content pos:start="27:9" pos:end="65:39">

        <expr_stmt pos:start="27:9" pos:end="27:43"><expr pos:start="27:9" pos:end="27:42"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:11">cmd</name><operator pos:start="27:12" pos:end="27:13">-&gt;</operator><name pos:start="27:14" pos:end="27:20">iov_buf</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:42"><name pos:start="27:24" pos:end="27:31">g_malloc</name><argument_list pos:start="27:32" pos:end="27:42">(<argument pos:start="27:33" pos:end="27:41"><expr pos:start="27:33" pos:end="27:41"><name pos:start="27:33" pos:end="27:41">dcmd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><call pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:14">memset</name><argument_list pos:start="29:15" pos:end="29:44">(<argument pos:start="29:16" pos:end="29:27"><expr pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:18">cmd</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:27">iov_buf</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><literal type="number" pos:start="29:30" pos:end="29:32">0x0</literal></expr></argument>, <argument pos:start="29:35" pos:end="29:43"><expr pos:start="29:35" pos:end="29:43"><name pos:start="29:35" pos:end="29:43">dcmd_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:12">info</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:27"><name pos:start="31:16" pos:end="31:18">cmd</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:27">iov_buf</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:67"><expr pos:start="33:9" pos:end="33:66"><call pos:start="33:9" pos:end="33:66"><name pos:start="33:9" pos:end="33:29">megasas_setup_inquiry</name><argument_list pos:start="33:30" pos:end="33:66">(<argument pos:start="33:31" pos:end="33:33"><expr pos:start="33:31" pos:end="33:33"><name pos:start="33:31" pos:end="33:33">cdb</name></expr></argument>, <argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><literal type="number" pos:start="33:36" pos:end="33:39">0x83</literal></expr></argument>, <argument pos:start="33:42" pos:end="33:65"><expr pos:start="33:42" pos:end="33:65"><sizeof pos:start="33:42" pos:end="33:65">sizeof<argument_list pos:start="33:48" pos:end="33:65">(<argument pos:start="33:49" pos:end="33:64"><expr pos:start="33:49" pos:end="33:64"><name pos:start="33:49" pos:end="33:64"><name pos:start="33:49" pos:end="33:52">info</name><operator pos:start="33:53" pos:end="33:54">-&gt;</operator><name pos:start="33:55" pos:end="33:64">vpd_page83</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:60"><expr pos:start="35:9" pos:end="35:59"><name pos:start="35:9" pos:end="35:11">req</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <call pos:start="35:15" pos:end="35:59"><name pos:start="35:15" pos:end="35:26">scsi_req_new</name><argument_list pos:start="35:27" pos:end="35:59">(<argument pos:start="35:28" pos:end="35:31"><expr pos:start="35:28" pos:end="35:31"><name pos:start="35:28" pos:end="35:31">sdev</name></expr></argument>, <argument pos:start="35:34" pos:end="35:43"><expr pos:start="35:34" pos:end="35:43"><name pos:start="35:34" pos:end="35:43"><name pos:start="35:34" pos:end="35:36">cmd</name><operator pos:start="35:37" pos:end="35:38">-&gt;</operator><name pos:start="35:39" pos:end="35:43">index</name></name></expr></argument>, <argument pos:start="35:46" pos:end="35:48"><expr pos:start="35:46" pos:end="35:48"><name pos:start="35:46" pos:end="35:48">lun</name></expr></argument>, <argument pos:start="35:51" pos:end="35:53"><expr pos:start="35:51" pos:end="35:53"><name pos:start="35:51" pos:end="35:53">cdb</name></expr></argument>, <argument pos:start="35:56" pos:end="35:58"><expr pos:start="35:56" pos:end="35:58"><name pos:start="35:56" pos:end="35:58">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="49:9"><if pos:start="37:9" pos:end="49:9">if <condition pos:start="37:12" pos:end="37:17">(<expr pos:start="37:13" pos:end="37:16"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:16">req</name></expr>)</condition> <block pos:start="37:19" pos:end="49:9">{<block_content pos:start="39:13" pos:end="47:45">

            <expr_stmt pos:start="39:13" pos:end="41:75"><expr pos:start="39:13" pos:end="41:74"><call pos:start="39:13" pos:end="41:74"><name pos:start="39:13" pos:end="39:47">trace_megasas_dcmd_req_alloc_failed</name><argument_list pos:start="39:48" pos:end="41:74">(<argument pos:start="39:49" pos:end="39:58"><expr pos:start="39:49" pos:end="39:58"><name pos:start="39:49" pos:end="39:58"><name pos:start="39:49" pos:end="39:51">cmd</name><operator pos:start="39:52" pos:end="39:53">-&gt;</operator><name pos:start="39:54" pos:end="39:58">index</name></name></expr></argument>,

                                                <argument pos:start="41:49" pos:end="41:73"><expr pos:start="41:49" pos:end="41:73"><literal type="string" pos:start="41:49" pos:end="41:73">"LD get info vpd inquiry"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:33"><expr pos:start="43:13" pos:end="43:32"><call pos:start="43:13" pos:end="43:32"><name pos:start="43:13" pos:end="43:18">g_free</name><argument_list pos:start="43:19" pos:end="43:32">(<argument pos:start="43:20" pos:end="43:31"><expr pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:31"><name pos:start="43:20" pos:end="43:22">cmd</name><operator pos:start="43:23" pos:end="43:24">-&gt;</operator><name pos:start="43:25" pos:end="43:31">iov_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:32"><expr pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:24"><name pos:start="45:13" pos:end="45:15">cmd</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:24">iov_buf</name></name> <operator pos:start="45:26" pos:end="45:26">=</operator> <name pos:start="45:28" pos:end="45:31">NULL</name></expr>;</expr_stmt>

            <return pos:start="47:13" pos:end="47:45">return <expr pos:start="47:20" pos:end="47:44"><name pos:start="47:20" pos:end="47:44">MFI_STAT_FLASH_ALLOC_FAIL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="53:75"><expr pos:start="51:9" pos:end="53:74"><call pos:start="51:9" pos:end="53:74"><name pos:start="51:9" pos:end="51:42">trace_megasas_dcmd_internal_submit</name><argument_list pos:start="51:43" pos:end="53:74">(<argument pos:start="51:44" pos:end="51:53"><expr pos:start="51:44" pos:end="51:53"><name pos:start="51:44" pos:end="51:53"><name pos:start="51:44" pos:end="51:46">cmd</name><operator pos:start="51:47" pos:end="51:48">-&gt;</operator><name pos:start="51:49" pos:end="51:53">index</name></name></expr></argument>,

                                           <argument pos:start="53:44" pos:end="53:68"><expr pos:start="53:44" pos:end="53:68"><literal type="string" pos:start="53:44" pos:end="53:68">"LD get info vpd inquiry"</literal></expr></argument>, <argument pos:start="53:71" pos:end="53:73"><expr pos:start="53:71" pos:end="53:73"><name pos:start="53:71" pos:end="53:73">lun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:11">len</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <call pos:start="55:15" pos:end="55:35"><name pos:start="55:15" pos:end="55:30">scsi_req_enqueue</name><argument_list pos:start="55:31" pos:end="55:35">(<argument pos:start="55:32" pos:end="55:34"><expr pos:start="55:32" pos:end="55:34"><name pos:start="55:32" pos:end="55:34">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">len</name> <operator pos:start="57:17" pos:end="57:17">&gt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition> <block pos:start="57:22" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:35">

            <expr_stmt pos:start="59:13" pos:end="59:32"><expr pos:start="59:13" pos:end="59:31"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:15">cmd</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:25">iov_size</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:31">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><call pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:29">scsi_req_continue</name><argument_list pos:start="61:30" pos:end="61:34">(<argument pos:start="61:31" pos:end="61:33"><expr pos:start="61:31" pos:end="61:33"><name pos:start="61:31" pos:end="61:33">req</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <return pos:start="65:9" pos:end="65:39">return <expr pos:start="65:16" pos:end="65:38"><name pos:start="65:16" pos:end="65:38">MFI_STAT_INVALID_STATUS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:56"><expr pos:start="71:5" pos:end="71:55"><name pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:8">info</name><operator pos:start="71:9" pos:end="71:10">-&gt;</operator><name pos:start="71:11" pos:end="71:19">ld_config</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:26">params</name><operator pos:start="71:27" pos:end="71:27">.</operator><name pos:start="71:28" pos:end="71:32">state</name></name> <operator pos:start="71:34" pos:end="71:34">=</operator> <name pos:start="71:36" pos:end="71:55">MFI_LD_STATE_OPTIMAL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:52"><expr pos:start="73:5" pos:end="73:51"><name pos:start="73:5" pos:end="73:45"><name pos:start="73:5" pos:end="73:8">info</name><operator pos:start="73:9" pos:end="73:10">-&gt;</operator><name pos:start="73:11" pos:end="73:19">ld_config</name><operator pos:start="73:20" pos:end="73:20">.</operator><name pos:start="73:21" pos:end="73:30">properties</name><operator pos:start="73:31" pos:end="73:31">.</operator><name pos:start="73:32" pos:end="73:33">ld</name><operator pos:start="73:34" pos:end="73:34">.</operator><name pos:start="73:35" pos:end="73:35">v</name><operator pos:start="73:36" pos:end="73:36">.</operator><name pos:start="73:37" pos:end="73:45">target_id</name></name> <operator pos:start="73:47" pos:end="73:47">=</operator> <name pos:start="73:49" pos:end="73:51">lun</name></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:43"><expr pos:start="75:5" pos:end="75:42"><name pos:start="75:5" pos:end="75:38"><name pos:start="75:5" pos:end="75:8">info</name><operator pos:start="75:9" pos:end="75:10">-&gt;</operator><name pos:start="75:11" pos:end="75:19">ld_config</name><operator pos:start="75:20" pos:end="75:20">.</operator><name pos:start="75:21" pos:end="75:26">params</name><operator pos:start="75:27" pos:end="75:27">.</operator><name pos:start="75:28" pos:end="75:38">stripe_size</name></name> <operator pos:start="75:40" pos:end="75:40">=</operator> <literal type="number" pos:start="75:42" pos:end="75:42">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:42"><expr pos:start="77:5" pos:end="77:41"><name pos:start="77:5" pos:end="77:37"><name pos:start="77:5" pos:end="77:8">info</name><operator pos:start="77:9" pos:end="77:10">-&gt;</operator><name pos:start="77:11" pos:end="77:19">ld_config</name><operator pos:start="77:20" pos:end="77:20">.</operator><name pos:start="77:21" pos:end="77:26">params</name><operator pos:start="77:27" pos:end="77:27">.</operator><name pos:start="77:28" pos:end="77:37">num_drives</name></name> <operator pos:start="77:39" pos:end="77:39">=</operator> <literal type="number" pos:start="77:41" pos:end="77:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:45"><expr pos:start="79:5" pos:end="79:44"><name pos:start="79:5" pos:end="79:40"><name pos:start="79:5" pos:end="79:8">info</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:19">ld_config</name><operator pos:start="79:20" pos:end="79:20">.</operator><name pos:start="79:21" pos:end="79:26">params</name><operator pos:start="79:27" pos:end="79:27">.</operator><name pos:start="79:28" pos:end="79:40">is_consistent</name></name> <operator pos:start="79:42" pos:end="79:42">=</operator> <literal type="number" pos:start="79:44" pos:end="79:44">1</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="81:5" pos:end="81:42">/* Logical device size is in blocks */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:42"><expr pos:start="83:5" pos:end="83:41"><call pos:start="83:5" pos:end="83:41"><name pos:start="83:5" pos:end="83:21">bdrv_get_geometry</name><argument_list pos:start="83:22" pos:end="83:41">(<argument pos:start="83:23" pos:end="83:30"><expr pos:start="83:23" pos:end="83:30"><name pos:start="83:23" pos:end="83:30"><name pos:start="83:23" pos:end="83:26">conf</name><operator pos:start="83:27" pos:end="83:28">-&gt;</operator><name pos:start="83:29" pos:end="83:30">bs</name></name></expr></argument>, <argument pos:start="83:33" pos:end="83:40"><expr pos:start="83:33" pos:end="83:40"><operator pos:start="83:33" pos:end="83:33">&amp;</operator><name pos:start="83:34" pos:end="83:40">ld_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:38"><expr pos:start="85:5" pos:end="85:37"><name pos:start="85:5" pos:end="85:14"><name pos:start="85:5" pos:end="85:8">info</name><operator pos:start="85:9" pos:end="85:10">-&gt;</operator><name pos:start="85:11" pos:end="85:14">size</name></name> <operator pos:start="85:16" pos:end="85:16">=</operator> <call pos:start="85:18" pos:end="85:37"><name pos:start="85:18" pos:end="85:28">cpu_to_le64</name><argument_list pos:start="85:29" pos:end="85:37">(<argument pos:start="85:30" pos:end="85:36"><expr pos:start="85:30" pos:end="85:36"><name pos:start="85:30" pos:end="85:36">ld_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:66"><expr pos:start="87:5" pos:end="87:65"><call pos:start="87:5" pos:end="87:65"><name pos:start="87:5" pos:end="87:10">memset</name><argument_list pos:start="87:11" pos:end="87:65">(<argument pos:start="87:12" pos:end="87:31"><expr pos:start="87:12" pos:end="87:31"><name pos:start="87:12" pos:end="87:31"><name pos:start="87:12" pos:end="87:15">info</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:26">ld_config</name><operator pos:start="87:27" pos:end="87:27">.</operator><name pos:start="87:28" pos:end="87:31">span</name></name></expr></argument>, <argument pos:start="87:34" pos:end="87:34"><expr pos:start="87:34" pos:end="87:34"><literal type="number" pos:start="87:34" pos:end="87:34">0</literal></expr></argument>, <argument pos:start="87:37" pos:end="87:64"><expr pos:start="87:37" pos:end="87:64"><sizeof pos:start="87:37" pos:end="87:64">sizeof<argument_list pos:start="87:43" pos:end="87:64">(<argument pos:start="87:44" pos:end="87:63"><expr pos:start="87:44" pos:end="87:63"><name pos:start="87:44" pos:end="87:63"><name pos:start="87:44" pos:end="87:47">info</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:58">ld_config</name><operator pos:start="87:59" pos:end="87:59">.</operator><name pos:start="87:60" pos:end="87:63">span</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:44"><expr pos:start="89:5" pos:end="89:43"><name pos:start="89:5" pos:end="89:27"><name pos:start="89:5" pos:end="89:8">info</name><operator pos:start="89:9" pos:end="89:10">-&gt;</operator><name pos:start="89:11" pos:end="89:19">ld_config</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:24">span</name><index pos:start="89:25" pos:end="89:27">[<expr pos:start="89:26" pos:end="89:26"><literal type="number" pos:start="89:26" pos:end="89:26">0</literal></expr>]</index></name><operator pos:start="89:28" pos:end="89:28">.</operator><name pos:start="89:29" pos:end="89:39">start_block</name> <operator pos:start="89:41" pos:end="89:41">=</operator> <literal type="number" pos:start="89:43" pos:end="89:43">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:52"><expr pos:start="91:5" pos:end="91:51"><name pos:start="91:5" pos:end="91:27"><name pos:start="91:5" pos:end="91:8">info</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:19">ld_config</name><operator pos:start="91:20" pos:end="91:20">.</operator><name pos:start="91:21" pos:end="91:24">span</name><index pos:start="91:25" pos:end="91:27">[<expr pos:start="91:26" pos:end="91:26"><literal type="number" pos:start="91:26" pos:end="91:26">0</literal></expr>]</index></name><operator pos:start="91:28" pos:end="91:28">.</operator><name pos:start="91:29" pos:end="91:38">num_blocks</name> <operator pos:start="91:40" pos:end="91:40">=</operator> <name pos:start="91:42" pos:end="91:51"><name pos:start="91:42" pos:end="91:45">info</name><operator pos:start="91:46" pos:end="91:47">-&gt;</operator><name pos:start="91:48" pos:end="91:51">size</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:61"><expr pos:start="93:5" pos:end="93:60"><name pos:start="93:5" pos:end="93:27"><name pos:start="93:5" pos:end="93:8">info</name><operator pos:start="93:9" pos:end="93:10">-&gt;</operator><name pos:start="93:11" pos:end="93:19">ld_config</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:24">span</name><index pos:start="93:25" pos:end="93:27">[<expr pos:start="93:26" pos:end="93:26"><literal type="number" pos:start="93:26" pos:end="93:26">0</literal></expr>]</index></name><operator pos:start="93:28" pos:end="93:28">.</operator><name pos:start="93:29" pos:end="93:37">array_ref</name> <operator pos:start="93:39" pos:end="93:39">=</operator> <call pos:start="93:41" pos:end="93:60"><name pos:start="93:41" pos:end="93:51">cpu_to_le16</name><argument_list pos:start="93:52" pos:end="93:60">(<argument pos:start="93:53" pos:end="93:59"><expr pos:start="93:53" pos:end="93:59"><name pos:start="93:53" pos:end="93:59">sdev_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:61"><expr pos:start="97:5" pos:end="97:60"><name pos:start="97:5" pos:end="97:9">resid</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <call pos:start="97:13" pos:end="97:60"><name pos:start="97:13" pos:end="97:24">dma_buf_read</name><argument_list pos:start="97:25" pos:end="97:60">(<argument pos:start="97:26" pos:end="97:37"><expr pos:start="97:26" pos:end="97:37"><name pos:start="97:26" pos:end="97:37"><name pos:start="97:26" pos:end="97:28">cmd</name><operator pos:start="97:29" pos:end="97:30">-&gt;</operator><name pos:start="97:31" pos:end="97:37">iov_buf</name></name></expr></argument>, <argument pos:start="97:40" pos:end="97:48"><expr pos:start="97:40" pos:end="97:48"><name pos:start="97:40" pos:end="97:48">dcmd_size</name></expr></argument>, <argument pos:start="97:51" pos:end="97:59"><expr pos:start="97:51" pos:end="97:59"><operator pos:start="97:51" pos:end="97:51">&amp;</operator><name pos:start="97:52" pos:end="97:59"><name pos:start="97:52" pos:end="97:54">cmd</name><operator pos:start="97:55" pos:end="97:56">-&gt;</operator><name pos:start="97:57" pos:end="97:59">qsg</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:25"><expr pos:start="99:5" pos:end="99:24"><call pos:start="99:5" pos:end="99:24"><name pos:start="99:5" pos:end="99:10">g_free</name><argument_list pos:start="99:11" pos:end="99:24">(<argument pos:start="99:12" pos:end="99:23"><expr pos:start="99:12" pos:end="99:23"><name pos:start="99:12" pos:end="99:23"><name pos:start="99:12" pos:end="99:14">cmd</name><operator pos:start="99:15" pos:end="99:16">-&gt;</operator><name pos:start="99:17" pos:end="99:23">iov_buf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:38"><expr pos:start="101:5" pos:end="101:37"><name pos:start="101:5" pos:end="101:17"><name pos:start="101:5" pos:end="101:7">cmd</name><operator pos:start="101:8" pos:end="101:9">-&gt;</operator><name pos:start="101:10" pos:end="101:17">iov_size</name></name> <operator pos:start="101:19" pos:end="101:19">=</operator> <name pos:start="101:21" pos:end="101:29">dcmd_size</name> <operator pos:start="101:31" pos:end="101:31">-</operator> <name pos:start="101:33" pos:end="101:37">resid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:24"><expr pos:start="103:5" pos:end="103:23"><name pos:start="103:5" pos:end="103:16"><name pos:start="103:5" pos:end="103:7">cmd</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:16">iov_buf</name></name> <operator pos:start="103:18" pos:end="103:18">=</operator> <name pos:start="103:20" pos:end="103:23">NULL</name></expr>;</expr_stmt>

    <return pos:start="105:5" pos:end="105:23">return <expr pos:start="105:12" pos:end="105:22"><name pos:start="105:12" pos:end="105:22">MFI_STAT_OK</name></expr>;</return>

</block_content>}</block></function>
</unit>
