<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16311.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:36">apply_dependent_coupling</name><parameter_list pos:start="1:37" pos:end="1:117">(<parameter pos:start="1:38" pos:end="1:52"><decl pos:start="1:38" pos:end="1:52"><type pos:start="1:38" pos:end="1:52"><name pos:start="1:38" pos:end="1:47">AACContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type> <name pos:start="1:51" pos:end="1:52">ac</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:83"><decl pos:start="1:55" pos:end="1:83"><type pos:start="1:55" pos:end="1:83"><name pos:start="1:55" pos:end="1:74">SingleChannelElement</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type> <name pos:start="1:78" pos:end="1:83">target</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:105"><decl pos:start="1:86" pos:end="1:105"><type pos:start="1:86" pos:end="1:105"><name pos:start="1:86" pos:end="1:99">ChannelElement</name> <modifier pos:start="1:101" pos:end="1:101">*</modifier></type> <name pos:start="1:103" pos:end="1:105">cce</name></decl></parameter>, <parameter pos:start="1:108" pos:end="1:116"><decl pos:start="1:108" pos:end="1:116"><type pos:start="1:108" pos:end="1:116"><name pos:start="1:108" pos:end="1:110">int</name></type> <name pos:start="1:112" pos:end="1:116">index</name></decl></parameter>)</parameter_list> <block pos:start="1:119" pos:end="51:1">{<block_content pos:start="3:5" pos:end="49:5">

    <decl_stmt pos:start="3:5" pos:end="3:52"><decl pos:start="3:5" pos:end="3:51"><type pos:start="3:5" pos:end="3:29"><name pos:start="3:5" pos:end="3:27">IndividualChannelStream</name> <modifier pos:start="3:29" pos:end="3:29">*</modifier></type> <name pos:start="3:31" pos:end="3:33">ics</name> <init pos:start="3:35" pos:end="3:51">= <expr pos:start="3:37" pos:end="3:51"><operator pos:start="3:37" pos:end="3:37">&amp;</operator><name pos:start="3:38" pos:end="3:47"><name pos:start="3:38" pos:end="3:40">cce</name><operator pos:start="3:41" pos:end="3:42">-&gt;</operator><name pos:start="3:43" pos:end="3:44">ch</name><index pos:start="3:45" pos:end="3:47">[<expr pos:start="3:46" pos:end="3:46"><literal type="number" pos:start="3:46" pos:end="3:46">0</literal></expr>]</index></name><operator pos:start="3:48" pos:end="3:48">.</operator><name pos:start="3:49" pos:end="3:51">ics</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:47"><decl pos:start="5:5" pos:end="5:46"><type pos:start="5:5" pos:end="5:20"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:18">uint16_t</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type> <name pos:start="5:22" pos:end="5:28">offsets</name> <init pos:start="5:30" pos:end="5:46">= <expr pos:start="5:32" pos:end="5:46"><name pos:start="5:32" pos:end="5:46"><name pos:start="5:32" pos:end="5:34">ics</name><operator pos:start="5:35" pos:end="5:36">-&gt;</operator><name pos:start="5:37" pos:end="5:46">swb_offset</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">float</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type> <name pos:start="7:13" pos:end="7:16">dest</name> <init pos:start="7:18" pos:end="7:33">= <expr pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:33"><name pos:start="7:20" pos:end="7:25">target</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:33">coeffs</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:17"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:15">float</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type> <name pos:start="9:19" pos:end="9:21">src</name> <init pos:start="9:23" pos:end="9:41">= <expr pos:start="9:25" pos:end="9:41"><name pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:27">cce</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:31">ch</name><index pos:start="9:32" pos:end="9:34">[<expr pos:start="9:33" pos:end="9:33"><literal type="number" pos:start="9:33" pos:end="9:33">0</literal></expr>]</index></name><operator pos:start="9:35" pos:end="9:35">.</operator><name pos:start="9:36" pos:end="9:41">coeffs</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">g</name></decl>, <decl pos:start="11:12" pos:end="11:12"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:12" pos:end="11:12">i</name></decl>, <decl pos:start="11:15" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:19">group</name></decl>, <decl pos:start="11:22" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:22" pos:end="11:22">k</name></decl>, <decl pos:start="11:25" pos:end="11:31"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:25" pos:end="11:27">idx</name> <init pos:start="11:29" pos:end="11:31">= <expr pos:start="11:31" pos:end="11:31"><literal type="number" pos:start="11:31" pos:end="11:31">0</literal></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if<condition pos:start="13:7" pos:end="13:43">(<expr pos:start="13:8" pos:end="13:42"><name pos:start="13:8" pos:end="13:27"><name pos:start="13:8" pos:end="13:9">ac</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:15">m4ac</name><operator pos:start="13:16" pos:end="13:16">.</operator><name pos:start="13:17" pos:end="13:27">object_type</name></name> <operator pos:start="13:29" pos:end="13:30">==</operator> <name pos:start="13:32" pos:end="13:42">AOT_AAC_LTP</name></expr>)</condition> <block pos:start="13:45" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:15">

        <expr_stmt pos:start="15:9" pos:end="17:74"><expr pos:start="15:9" pos:end="17:73"><call pos:start="15:9" pos:end="17:73"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="17:73">(<argument pos:start="15:16" pos:end="15:29"><expr pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:29"><name pos:start="15:16" pos:end="15:17">ac</name><operator pos:start="15:18" pos:end="15:19">-&gt;</operator><name pos:start="15:20" pos:end="15:29">avccontext</name></name></expr></argument>, <argument pos:start="15:32" pos:end="15:43"><expr pos:start="15:32" pos:end="15:43"><name pos:start="15:32" pos:end="15:43">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="17:16" pos:end="17:72"><expr pos:start="17:16" pos:end="17:72"><literal type="string" pos:start="17:16" pos:end="17:72">"Dependent coupling is not supported together with LTP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <for pos:start="23:5" pos:end="49:5">for <control pos:start="23:9" pos:end="23:48">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">g</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:43"><expr pos:start="23:17" pos:end="23:42"><name pos:start="23:17" pos:end="23:17">g</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:42"><name pos:start="23:21" pos:end="23:23">ics</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:42">num_window_groups</name></name></expr>;</condition> <incr pos:start="23:45" pos:end="23:47"><expr pos:start="23:45" pos:end="23:47"><name pos:start="23:45" pos:end="23:45">g</name><operator pos:start="23:46" pos:end="23:47">++</operator></expr></incr>)</control> <block pos:start="23:50" pos:end="49:5">{<block_content pos:start="25:9" pos:end="47:38">

        <for pos:start="25:9" pos:end="43:9">for <control pos:start="25:13" pos:end="25:49">(<init pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:18"><name pos:start="25:14" pos:end="25:14">i</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:37"><expr pos:start="25:21" pos:end="25:36"><name pos:start="25:21" pos:end="25:21">i</name> <operator pos:start="25:23" pos:end="25:23">&lt;</operator> <name pos:start="25:25" pos:end="25:36"><name pos:start="25:25" pos:end="25:27">ics</name><operator pos:start="25:28" pos:end="25:29">-&gt;</operator><name pos:start="25:30" pos:end="25:36">max_sfb</name></name></expr>;</condition> <incr pos:start="25:39" pos:end="25:48"><expr pos:start="25:39" pos:end="25:41"><name pos:start="25:39" pos:end="25:39">i</name><operator pos:start="25:40" pos:end="25:41">++</operator></expr><operator pos:start="25:42" pos:end="25:42">,</operator> <expr pos:start="25:44" pos:end="25:48"><name pos:start="25:44" pos:end="25:46">idx</name><operator pos:start="25:47" pos:end="25:48">++</operator></expr></incr>)</control> <block pos:start="25:51" pos:end="43:9">{<block_content pos:start="27:13" pos:end="41:13">

            <if_stmt pos:start="27:13" pos:end="41:13"><if pos:start="27:13" pos:end="41:13">if <condition pos:start="27:16" pos:end="27:53">(<expr pos:start="27:17" pos:end="27:52"><name pos:start="27:17" pos:end="27:26"><name pos:start="27:17" pos:end="27:19">cce</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:23">ch</name><index pos:start="27:24" pos:end="27:26">[<expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">0</literal></expr>]</index></name><operator pos:start="27:27" pos:end="27:27">.</operator><name pos:start="27:28" pos:end="27:41"><name pos:start="27:28" pos:end="27:36">band_type</name><index pos:start="27:37" pos:end="27:41">[<expr pos:start="27:38" pos:end="27:40"><name pos:start="27:38" pos:end="27:40">idx</name></expr>]</index></name> <operator pos:start="27:43" pos:end="27:44">!=</operator> <name pos:start="27:46" pos:end="27:52">ZERO_BT</name></expr>)</condition> <block pos:start="27:55" pos:end="41:13">{<block_content pos:start="29:17" pos:end="39:17">

                <for pos:start="29:17" pos:end="39:17">for <control pos:start="29:21" pos:end="29:67">(<init pos:start="29:22" pos:end="29:31"><expr pos:start="29:22" pos:end="29:30"><name pos:start="29:22" pos:end="29:26">group</name> <operator pos:start="29:28" pos:end="29:28">=</operator> <literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>;</init> <condition pos:start="29:33" pos:end="29:58"><expr pos:start="29:33" pos:end="29:57"><name pos:start="29:33" pos:end="29:37">group</name> <operator pos:start="29:39" pos:end="29:39">&lt;</operator> <name pos:start="29:41" pos:end="29:57"><name pos:start="29:41" pos:end="29:43">ics</name><operator pos:start="29:44" pos:end="29:45">-&gt;</operator><name pos:start="29:46" pos:end="29:54">group_len</name><index pos:start="29:55" pos:end="29:57">[<expr pos:start="29:56" pos:end="29:56"><name pos:start="29:56" pos:end="29:56">g</name></expr>]</index></name></expr>;</condition> <incr pos:start="29:60" pos:end="29:66"><expr pos:start="29:60" pos:end="29:66"><name pos:start="29:60" pos:end="29:64">group</name><operator pos:start="29:65" pos:end="29:66">++</operator></expr></incr>)</control> <block pos:start="29:69" pos:end="39:17">{<block_content pos:start="31:21" pos:end="37:21">

                    <for pos:start="31:21" pos:end="37:21">for <control pos:start="31:25" pos:end="31:63">(<init pos:start="31:26" pos:end="31:40"><expr pos:start="31:26" pos:end="31:39"><name pos:start="31:26" pos:end="31:26">k</name> <operator pos:start="31:28" pos:end="31:28">=</operator> <name pos:start="31:30" pos:end="31:39"><name pos:start="31:30" pos:end="31:36">offsets</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><name pos:start="31:38" pos:end="31:38">i</name></expr>]</index></name></expr>;</init> <condition pos:start="31:42" pos:end="31:58"><expr pos:start="31:42" pos:end="31:57"><name pos:start="31:42" pos:end="31:42">k</name> <operator pos:start="31:44" pos:end="31:44">&lt;</operator> <name pos:start="31:46" pos:end="31:57"><name pos:start="31:46" pos:end="31:52">offsets</name><index pos:start="31:53" pos:end="31:57">[<expr pos:start="31:54" pos:end="31:56"><name pos:start="31:54" pos:end="31:54">i</name><operator pos:start="31:55" pos:end="31:55">+</operator><literal type="number" pos:start="31:56" pos:end="31:56">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="31:60" pos:end="31:62"><expr pos:start="31:60" pos:end="31:62"><name pos:start="31:60" pos:end="31:60">k</name><operator pos:start="31:61" pos:end="31:62">++</operator></expr></incr>)</control> <block pos:start="31:65" pos:end="37:21">{<block_content pos:start="35:25" pos:end="35:91">

                        <comment type="line" pos:start="33:25" pos:end="33:42">// XXX dsputil-ize</comment>

                        <expr_stmt pos:start="35:25" pos:end="35:91"><expr pos:start="35:25" pos:end="35:90"><name pos:start="35:25" pos:end="35:41"><name pos:start="35:25" pos:end="35:28">dest</name><index pos:start="35:29" pos:end="35:41">[<expr pos:start="35:30" pos:end="35:40"><name pos:start="35:30" pos:end="35:34">group</name><operator pos:start="35:35" pos:end="35:35">*</operator><literal type="number" pos:start="35:36" pos:end="35:38">128</literal><operator pos:start="35:39" pos:end="35:39">+</operator><name pos:start="35:40" pos:end="35:40">k</name></expr>]</index></name> <operator pos:start="35:43" pos:end="35:44">+=</operator> <name pos:start="35:46" pos:end="35:71"><name pos:start="35:46" pos:end="35:48">cce</name><operator pos:start="35:49" pos:end="35:50">-&gt;</operator><name pos:start="35:51" pos:end="35:54">coup</name><operator pos:start="35:55" pos:end="35:55">.</operator><name pos:start="35:56" pos:end="35:59">gain</name><index pos:start="35:60" pos:end="35:66">[<expr pos:start="35:61" pos:end="35:65"><name pos:start="35:61" pos:end="35:65">index</name></expr>]</index><index pos:start="35:67" pos:end="35:71">[<expr pos:start="35:68" pos:end="35:70"><name pos:start="35:68" pos:end="35:70">idx</name></expr>]</index></name> <operator pos:start="35:73" pos:end="35:73">*</operator> <name pos:start="35:75" pos:end="35:90"><name pos:start="35:75" pos:end="35:77">src</name><index pos:start="35:78" pos:end="35:90">[<expr pos:start="35:79" pos:end="35:89"><name pos:start="35:79" pos:end="35:83">group</name><operator pos:start="35:84" pos:end="35:84">*</operator><literal type="number" pos:start="35:85" pos:end="35:88">128</literal><operator pos:start="35:88" pos:end="35:88">+</operator><name pos:start="35:89" pos:end="35:89">k</name></expr>]</index></name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="45:9" pos:end="45:38"><expr pos:start="45:9" pos:end="45:37"><name pos:start="45:9" pos:end="45:12">dest</name> <operator pos:start="45:14" pos:end="45:15">+=</operator> <name pos:start="45:17" pos:end="45:33"><name pos:start="45:17" pos:end="45:19">ics</name><operator pos:start="45:20" pos:end="45:21">-&gt;</operator><name pos:start="45:22" pos:end="45:30">group_len</name><index pos:start="45:31" pos:end="45:33">[<expr pos:start="45:32" pos:end="45:32"><name pos:start="45:32" pos:end="45:32">g</name></expr>]</index></name><operator pos:start="45:34" pos:end="45:34">*</operator><literal type="number" pos:start="45:35" pos:end="45:37">128</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:11">src</name>  <operator pos:start="47:14" pos:end="47:15">+=</operator> <name pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:19">ics</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:30">group_len</name><index pos:start="47:31" pos:end="47:33">[<expr pos:start="47:32" pos:end="47:32"><name pos:start="47:32" pos:end="47:32">g</name></expr>]</index></name><operator pos:start="47:34" pos:end="47:34">*</operator><literal type="number" pos:start="47:35" pos:end="47:37">128</literal></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
