<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11640.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">raise_mmu_exception</name><parameter_list pos:start="1:32" pos:end="3:54">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:49"><name pos:start="1:33" pos:end="1:44">CPUMIPSState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">env</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:71"><decl pos:start="1:52" pos:end="1:71"><type pos:start="1:52" pos:end="1:71"><name pos:start="1:52" pos:end="1:63">target_ulong</name></type> <name pos:start="1:65" pos:end="1:71">address</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:38"><decl pos:start="3:33" pos:end="3:38"><type pos:start="3:33" pos:end="3:38"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:38">rw</name></decl></parameter>, <parameter pos:start="3:41" pos:end="3:53"><decl pos:start="3:41" pos:end="3:53"><type pos:start="3:41" pos:end="3:53"><name pos:start="3:41" pos:end="3:43">int</name></type> <name pos:start="3:45" pos:end="3:53">tlb_error</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="139:1">{<block_content pos:start="7:5" pos:end="137:33">

    <decl_stmt pos:start="7:5" pos:end="7:46"><decl pos:start="7:5" pos:end="7:45"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">CPUState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">cs</name> <init pos:start="7:18" pos:end="7:45">= <expr pos:start="7:20" pos:end="7:45"><call pos:start="7:20" pos:end="7:45"><name pos:start="7:20" pos:end="7:22">CPU</name><argument_list pos:start="7:23" pos:end="7:45">(<argument pos:start="7:24" pos:end="7:44"><expr pos:start="7:24" pos:end="7:44"><call pos:start="7:24" pos:end="7:44"><name pos:start="7:24" pos:end="7:39">mips_env_get_cpu</name><argument_list pos:start="7:40" pos:end="7:44">(<argument pos:start="7:41" pos:end="7:43"><expr pos:start="7:41" pos:end="7:43"><name pos:start="7:41" pos:end="7:43">env</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:38"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">exception</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>, <decl pos:start="9:24" pos:end="9:37"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:24" pos:end="9:33">error_code</name> <init pos:start="9:35" pos:end="9:37">= <expr pos:start="9:37" pos:end="9:37"><literal type="number" pos:start="9:37" pos:end="9:37">0</literal></expr></init></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="109:5">switch <condition pos:start="13:12" pos:end="13:22">(<expr pos:start="13:13" pos:end="13:21"><name pos:start="13:13" pos:end="13:21">tlb_error</name></expr>)</condition> <block pos:start="13:24" pos:end="109:5">{<block_content pos:start="15:5" pos:end="107:14">

    <default pos:start="15:5" pos:end="15:12">default:</default>

    <case pos:start="17:5" pos:end="17:24">case <expr pos:start="17:10" pos:end="17:23"><name pos:start="17:10" pos:end="17:23">TLBRET_BADADDR</name></expr>:</case>

        <comment type="block" pos:start="19:9" pos:end="19:75">/* Reference to kernel address from user mode or supervisor mode */</comment>

        <comment type="block" pos:start="21:9" pos:end="21:60">/* Reference to supervisor address from user mode */</comment>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:33">(<expr pos:start="23:13" pos:end="23:32"><name pos:start="23:13" pos:end="23:14">rw</name> <operator pos:start="23:16" pos:end="23:17">==</operator> <name pos:start="23:19" pos:end="23:32">MMU_DATA_STORE</name></expr>)</condition> <block pos:start="23:35" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:34">

            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:21">exception</name> <operator pos:start="25:23" pos:end="25:23">=</operator> <name pos:start="25:25" pos:end="25:33">EXCP_AdES</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="31:9">else <block pos:start="27:16" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:34">

            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:21">exception</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:33">EXCP_AdEL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:24">case <expr pos:start="35:10" pos:end="35:23"><name pos:start="35:10" pos:end="35:23">TLBRET_NOMATCH</name></expr>:</case>

        <comment type="block" pos:start="37:9" pos:end="37:47">/* No TLB match for a mapped address */</comment>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:33">(<expr pos:start="39:13" pos:end="39:32"><name pos:start="39:13" pos:end="39:14">rw</name> <operator pos:start="39:16" pos:end="39:17">==</operator> <name pos:start="39:19" pos:end="39:32">MMU_DATA_STORE</name></expr>)</condition> <block pos:start="39:35" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:34">

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:21">exception</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <name pos:start="41:25" pos:end="41:33">EXCP_TLBS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="47:9">else <block pos:start="43:16" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:34">

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:21">exception</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:23"><expr pos:start="49:9" pos:end="49:22"><name pos:start="49:9" pos:end="49:18">error_code</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:22">1</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:24">case <expr pos:start="53:10" pos:end="53:23"><name pos:start="53:10" pos:end="53:23">TLBRET_INVALID</name></expr>:</case>

        <comment type="block" pos:start="55:9" pos:end="55:41">/* TLB match with no valid bit */</comment>

        <if_stmt pos:start="57:9" pos:end="65:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:33">(<expr pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:14">rw</name> <operator pos:start="57:16" pos:end="57:17">==</operator> <name pos:start="57:19" pos:end="57:32">MMU_DATA_STORE</name></expr>)</condition> <block pos:start="57:35" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:34">

            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:21">exception</name> <operator pos:start="59:23" pos:end="59:23">=</operator> <name pos:start="59:25" pos:end="59:33">EXCP_TLBS</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="61:11" pos:end="65:9">else <block pos:start="61:16" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:34">

            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:21">exception</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <name pos:start="63:25" pos:end="63:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <case pos:start="69:5" pos:end="69:22">case <expr pos:start="69:10" pos:end="69:21"><name pos:start="69:10" pos:end="69:21">TLBRET_DIRTY</name></expr>:</case>

        <comment type="block" pos:start="71:9" pos:end="71:46">/* TLB match but 'D' bit is cleared */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:17">exception</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <name pos:start="73:21" pos:end="73:30">EXCP_LTLBL</name></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    <case pos:start="77:5" pos:end="77:19">case <expr pos:start="77:10" pos:end="77:18"><name pos:start="77:10" pos:end="77:18">TLBRET_XI</name></expr>:</case>

        <comment type="block" pos:start="79:9" pos:end="79:39">/* Execute-Inhibit Exception */</comment>

        <if_stmt pos:start="81:9" pos:end="89:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:50">(<expr pos:start="81:13" pos:end="81:49"><name pos:start="81:13" pos:end="81:30"><name pos:start="81:13" pos:end="81:15">env</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:30">CP0_PageGrain</name></name> <operator pos:start="81:32" pos:end="81:32">&amp;</operator> <operator pos:start="81:34" pos:end="81:34">(</operator><literal type="number" pos:start="81:35" pos:end="81:35">1</literal> <operator pos:start="81:37" pos:end="81:38">&lt;&lt;</operator> <name pos:start="81:40" pos:end="81:48">CP0PG_IEC</name><operator pos:start="81:49" pos:end="81:49">)</operator></expr>)</condition> <block pos:start="81:52" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:35">

            <expr_stmt pos:start="83:13" pos:end="83:35"><expr pos:start="83:13" pos:end="83:34"><name pos:start="83:13" pos:end="83:21">exception</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <name pos:start="83:25" pos:end="83:34">EXCP_TLBXI</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:34">

            <expr_stmt pos:start="87:13" pos:end="87:34"><expr pos:start="87:13" pos:end="87:33"><name pos:start="87:13" pos:end="87:21">exception</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:19">case <expr pos:start="93:10" pos:end="93:18"><name pos:start="93:10" pos:end="93:18">TLBRET_RI</name></expr>:</case>

        <comment type="block" pos:start="95:9" pos:end="95:36">/* Read-Inhibit Exception */</comment>

        <if_stmt pos:start="97:9" pos:end="105:9"><if pos:start="97:9" pos:end="101:9">if <condition pos:start="97:12" pos:end="97:50">(<expr pos:start="97:13" pos:end="97:49"><name pos:start="97:13" pos:end="97:30"><name pos:start="97:13" pos:end="97:15">env</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:30">CP0_PageGrain</name></name> <operator pos:start="97:32" pos:end="97:32">&amp;</operator> <operator pos:start="97:34" pos:end="97:34">(</operator><literal type="number" pos:start="97:35" pos:end="97:35">1</literal> <operator pos:start="97:37" pos:end="97:38">&lt;&lt;</operator> <name pos:start="97:40" pos:end="97:48">CP0PG_IEC</name><operator pos:start="97:49" pos:end="97:49">)</operator></expr>)</condition> <block pos:start="97:52" pos:end="101:9">{<block_content pos:start="99:13" pos:end="99:35">

            <expr_stmt pos:start="99:13" pos:end="99:35"><expr pos:start="99:13" pos:end="99:34"><name pos:start="99:13" pos:end="99:21">exception</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:34">EXCP_TLBRI</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="101:11" pos:end="105:9">else <block pos:start="101:16" pos:end="105:9">{<block_content pos:start="103:13" pos:end="103:34">

            <expr_stmt pos:start="103:13" pos:end="103:34"><expr pos:start="103:13" pos:end="103:33"><name pos:start="103:13" pos:end="103:21">exception</name> <operator pos:start="103:23" pos:end="103:23">=</operator> <name pos:start="103:25" pos:end="103:33">EXCP_TLBL</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>

    </block_content>}</block></switch>

    <comment type="block" pos:start="111:5" pos:end="111:25">/* Raise exception */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:32"><expr pos:start="113:5" pos:end="113:31"><name pos:start="113:5" pos:end="113:21"><name pos:start="113:5" pos:end="113:7">env</name><operator pos:start="113:8" pos:end="113:9">-&gt;</operator><name pos:start="113:10" pos:end="113:21">CP0_BadVAddr</name></name> <operator pos:start="113:23" pos:end="113:23">=</operator> <name pos:start="113:25" pos:end="113:31">address</name></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="117:53"><expr pos:start="115:5" pos:end="117:52"><name pos:start="115:5" pos:end="115:20"><name pos:start="115:5" pos:end="115:7">env</name><operator pos:start="115:8" pos:end="115:9">-&gt;</operator><name pos:start="115:10" pos:end="115:20">CP0_Context</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <operator pos:start="115:24" pos:end="115:24">(</operator><name pos:start="115:25" pos:end="115:40"><name pos:start="115:25" pos:end="115:27">env</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:40">CP0_Context</name></name> <operator pos:start="115:42" pos:end="115:42">&amp;</operator> <operator pos:start="115:44" pos:end="115:44">~</operator><literal type="number" pos:start="115:45" pos:end="115:54">0x007fffff</literal><operator pos:start="115:55" pos:end="115:55">)</operator> <operator pos:start="115:57" pos:end="115:57">|</operator>

                       <operator pos:start="117:24" pos:end="117:24">(</operator><operator pos:start="117:25" pos:end="117:25">(</operator><name pos:start="117:26" pos:end="117:32">address</name> <operator pos:start="117:34" pos:end="117:35">&gt;&gt;</operator> <literal type="number" pos:start="117:37" pos:end="117:37">9</literal><operator pos:start="117:38" pos:end="117:38">)</operator> <operator pos:start="117:40" pos:end="117:40">&amp;</operator> <literal type="number" pos:start="117:42" pos:end="117:51">0x007ffff0</literal><operator pos:start="117:52" pos:end="117:52">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="124:0"><expr pos:start="119:5" pos:end="121:71"><name pos:start="119:5" pos:end="119:20"><name pos:start="119:5" pos:end="119:7">env</name><operator pos:start="119:8" pos:end="119:9">-&gt;</operator><name pos:start="119:10" pos:end="119:20">CP0_EntryHi</name></name> <operator pos:start="119:22" pos:end="119:22">=</operator>

        <operator pos:start="121:9" pos:end="121:9">(</operator><name pos:start="121:10" pos:end="121:25"><name pos:start="121:10" pos:end="121:12">env</name><operator pos:start="121:13" pos:end="121:14">-&gt;</operator><name pos:start="121:15" pos:end="121:25">CP0_EntryHi</name></name> <operator pos:start="121:27" pos:end="121:27">&amp;</operator> <literal type="number" pos:start="121:29" pos:end="121:32">0xFF</literal><operator pos:start="121:33" pos:end="121:33">)</operator> <operator pos:start="121:35" pos:end="121:35">|</operator> <operator pos:start="121:37" pos:end="121:37">(</operator><name pos:start="121:38" pos:end="121:44">address</name> <operator pos:start="121:46" pos:end="121:46">&amp;</operator> <operator pos:start="121:48" pos:end="121:48">(</operator><name pos:start="121:49" pos:end="121:64">TARGET_PAGE_MASK</name> <operator pos:start="121:66" pos:end="121:67">&lt;&lt;</operator> <literal type="number" pos:start="121:69" pos:end="121:69">1</literal><operator pos:start="121:70" pos:end="121:70">)</operator><operator pos:start="121:71" pos:end="121:71">)</operator></expr>;</expr_stmt>

<cpp:if pos:start="123:1" pos:end="123:26">#<cpp:directive pos:start="123:2" pos:end="123:3">if</cpp:directive> <expr pos:start="123:5" pos:end="123:26"><call pos:start="123:5" pos:end="123:26"><name pos:start="123:5" pos:end="123:11">defined</name><argument_list pos:start="123:12" pos:end="123:26">(<argument pos:start="123:13" pos:end="123:25"><expr pos:start="123:13" pos:end="123:25"><name pos:start="123:13" pos:end="123:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <expr_stmt pos:start="125:5" pos:end="125:37"><expr pos:start="125:5" pos:end="125:36"><name pos:start="125:5" pos:end="125:20"><name pos:start="125:5" pos:end="125:7">env</name><operator pos:start="125:8" pos:end="125:9">-&gt;</operator><name pos:start="125:10" pos:end="125:20">CP0_EntryHi</name></name> <operator pos:start="125:22" pos:end="125:23">&amp;=</operator> <name pos:start="125:25" pos:end="125:36"><name pos:start="125:25" pos:end="125:27">env</name><operator pos:start="125:28" pos:end="125:29">-&gt;</operator><name pos:start="125:30" pos:end="125:36">SEGMask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="134:0"><expr pos:start="127:5" pos:end="131:95"><name pos:start="127:5" pos:end="127:21"><name pos:start="127:5" pos:end="127:7">env</name><operator pos:start="127:8" pos:end="127:9">-&gt;</operator><name pos:start="127:10" pos:end="127:21">CP0_XContext</name></name> <operator pos:start="127:23" pos:end="127:23">=</operator> <operator pos:start="127:25" pos:end="127:25">(</operator><name pos:start="127:26" pos:end="127:42"><name pos:start="127:26" pos:end="127:28">env</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:42">CP0_XContext</name></name> <operator pos:start="127:44" pos:end="127:44">&amp;</operator> <operator pos:start="127:46" pos:end="127:46">(</operator><operator pos:start="127:47" pos:end="127:47">(</operator><operator pos:start="127:48" pos:end="127:48">~</operator><literal type="number" pos:start="127:49" pos:end="127:52">0ULL</literal><operator pos:start="127:53" pos:end="127:53">)</operator> <operator pos:start="127:55" pos:end="127:56">&lt;&lt;</operator> <operator pos:start="127:58" pos:end="127:58">(</operator><name pos:start="127:59" pos:end="127:70"><name pos:start="127:59" pos:end="127:61">env</name><operator pos:start="127:62" pos:end="127:63">-&gt;</operator><name pos:start="127:64" pos:end="127:70">SEGBITS</name></name> <operator pos:start="127:72" pos:end="127:72">-</operator> <literal type="number" pos:start="127:74" pos:end="127:74">7</literal><operator pos:start="127:75" pos:end="127:75">)</operator><operator pos:start="127:76" pos:end="127:76">)</operator><operator pos:start="127:77" pos:end="127:77">)</operator> <operator pos:start="127:79" pos:end="127:79">|</operator>

                        <operator pos:start="129:25" pos:end="129:25">(</operator><operator pos:start="129:26" pos:end="129:26">(</operator><name pos:start="129:27" pos:end="129:33">address</name> <operator pos:start="129:35" pos:end="129:35">&amp;</operator> <literal type="number" pos:start="129:37" pos:end="129:53">0xC00000000000ULL</literal><operator pos:start="129:54" pos:end="129:54">)</operator> <operator pos:start="129:56" pos:end="129:57">&gt;&gt;</operator> <operator pos:start="129:59" pos:end="129:59">(</operator><literal type="number" pos:start="129:60" pos:end="129:63">55</literal> <operator pos:start="129:63" pos:end="129:63">-</operator> <name pos:start="129:65" pos:end="129:76"><name pos:start="129:65" pos:end="129:67">env</name><operator pos:start="129:68" pos:end="129:69">-&gt;</operator><name pos:start="129:70" pos:end="129:76">SEGBITS</name></name><operator pos:start="129:77" pos:end="129:77">)</operator><operator pos:start="129:78" pos:end="129:78">)</operator> <operator pos:start="129:80" pos:end="129:80">|</operator>

                        <operator pos:start="131:25" pos:end="131:25">(</operator><operator pos:start="131:26" pos:end="131:26">(</operator><name pos:start="131:27" pos:end="131:33">address</name> <operator pos:start="131:35" pos:end="131:35">&amp;</operator> <operator pos:start="131:37" pos:end="131:37">(</operator><operator pos:start="131:38" pos:end="131:38">(</operator><literal type="number" pos:start="131:39" pos:end="131:42">1ULL</literal> <operator pos:start="131:44" pos:end="131:45">&lt;&lt;</operator> <name pos:start="131:47" pos:end="131:58"><name pos:start="131:47" pos:end="131:49">env</name><operator pos:start="131:50" pos:end="131:51">-&gt;</operator><name pos:start="131:52" pos:end="131:58">SEGBITS</name></name><operator pos:start="131:59" pos:end="131:59">)</operator> <operator pos:start="131:61" pos:end="131:61">-</operator> <literal type="number" pos:start="131:63" pos:end="131:63">1</literal><operator pos:start="131:64" pos:end="131:64">)</operator> <operator pos:start="131:66" pos:end="131:66">&amp;</operator> <literal type="number" pos:start="131:68" pos:end="131:88">0xFFFFFFFFFFFFE000ULL</literal><operator pos:start="131:89" pos:end="131:89">)</operator> <operator pos:start="131:91" pos:end="131:92">&gt;&gt;</operator> <literal type="number" pos:start="131:94" pos:end="131:94">9</literal><operator pos:start="131:95" pos:end="131:95">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="133:1" pos:end="133:6">#<cpp:directive pos:start="133:2" pos:end="133:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="135:5" pos:end="135:36"><expr pos:start="135:5" pos:end="135:35"><name pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:6">cs</name><operator pos:start="135:7" pos:end="135:8">-&gt;</operator><name pos:start="135:9" pos:end="135:23">exception_index</name></name> <operator pos:start="135:25" pos:end="135:25">=</operator> <name pos:start="135:27" pos:end="135:35">exception</name></expr>;</expr_stmt>

    <expr_stmt pos:start="137:5" pos:end="137:33"><expr pos:start="137:5" pos:end="137:32"><name pos:start="137:5" pos:end="137:19"><name pos:start="137:5" pos:end="137:7">env</name><operator pos:start="137:8" pos:end="137:9">-&gt;</operator><name pos:start="137:10" pos:end="137:19">error_code</name></name> <operator pos:start="137:21" pos:end="137:21">=</operator> <name pos:start="137:23" pos:end="137:32">error_code</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
