<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26900.c" pos:tabs="8"><function pos:start="1:1" pos:end="339:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">do_video_out</name><parameter_list pos:start="1:25" pos:end="9:41">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:44"><decl pos:start="3:26" pos:end="3:44"><type pos:start="3:26" pos:end="3:44"><name pos:start="3:26" pos:end="3:39">AVOutputStream</name> <modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:44">ost</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:43"><decl pos:start="5:26" pos:end="5:43"><type pos:start="5:26" pos:end="5:43"><name pos:start="5:26" pos:end="5:38">AVInputStream</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">ist</name></decl></parameter>,

                         <parameter pos:start="7:26" pos:end="7:44"><decl pos:start="7:26" pos:end="7:44"><type pos:start="7:26" pos:end="7:44"><name pos:start="7:26" pos:end="7:32">AVFrame</name> <modifier pos:start="7:34" pos:end="7:34">*</modifier></type><name pos:start="7:35" pos:end="7:44">in_picture</name></decl></parameter>,

                         <parameter pos:start="9:26" pos:end="9:40"><decl pos:start="9:26" pos:end="9:40"><type pos:start="9:26" pos:end="9:40"><name pos:start="9:26" pos:end="9:28">int</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:40">frame_size</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="339:1">{<block_content pos:start="13:5" pos:end="337:5">

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:17">nb_frames</name></decl>, <decl pos:start="13:20" pos:end="13:20"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:20" pos:end="13:20">i</name></decl>, <decl pos:start="13:23" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:23" pos:end="13:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:78"><decl pos:start="15:5" pos:end="15:26"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">AVFrame</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:26">final_picture</name></decl>, <decl pos:start="15:29" pos:end="15:46"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:29" pos:end="15:29">*</modifier></type><name pos:start="15:30" pos:end="15:46">formatted_picture</name></decl>, <decl pos:start="15:49" pos:end="15:63"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:49" pos:end="15:49">*</modifier></type><name pos:start="15:50" pos:end="15:63">resampling_dst</name></decl>, <decl pos:start="15:66" pos:end="15:77"><type ref="prev" pos:start="15:5" pos:end="15:13"><modifier pos:start="15:66" pos:end="15:66">*</modifier></type><name pos:start="15:67" pos:end="15:77">padding_src</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:48"><decl pos:start="17:5" pos:end="17:29"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">AVFrame</name></type> <name pos:start="17:13" pos:end="17:29">picture_crop_temp</name></decl>, <decl pos:start="17:32" pos:end="17:47"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:32" pos:end="17:47">picture_pad_temp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:30"><decl pos:start="19:5" pos:end="19:23"><type pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:18">AVCodecContext</name> <modifier pos:start="19:20" pos:end="19:20">*</modifier></type><name pos:start="19:21" pos:end="19:23">enc</name></decl>, <decl pos:start="19:26" pos:end="19:29"><type ref="prev" pos:start="19:5" pos:end="19:20"><modifier pos:start="19:26" pos:end="19:26">*</modifier></type><name pos:start="19:27" pos:end="19:29">dec</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><call pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:30">avcodec_get_frame_defaults</name><argument_list pos:start="23:31" pos:end="23:50">(<argument pos:start="23:32" pos:end="23:49"><expr pos:start="23:32" pos:end="23:49"><operator pos:start="23:32" pos:end="23:32">&amp;</operator><name pos:start="23:33" pos:end="23:49">picture_crop_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:50"><expr pos:start="25:5" pos:end="25:49"><call pos:start="25:5" pos:end="25:49"><name pos:start="25:5" pos:end="25:30">avcodec_get_frame_defaults</name><argument_list pos:start="25:31" pos:end="25:49">(<argument pos:start="25:32" pos:end="25:48"><expr pos:start="25:32" pos:end="25:48"><operator pos:start="25:32" pos:end="25:32">&amp;</operator><name pos:start="25:33" pos:end="25:48">picture_pad_temp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:25"><expr pos:start="29:5" pos:end="29:24"><name pos:start="29:5" pos:end="29:7">enc</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <name pos:start="29:11" pos:end="29:24"><name pos:start="29:11" pos:end="29:13">ost</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:17">st</name><operator pos:start="29:18" pos:end="29:19">-&gt;</operator><name pos:start="29:20" pos:end="29:24">codec</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:25"><expr pos:start="31:5" pos:end="31:24"><name pos:start="31:5" pos:end="31:7">dec</name> <operator pos:start="31:9" pos:end="31:9">=</operator> <name pos:start="31:11" pos:end="31:24"><name pos:start="31:11" pos:end="31:13">ist</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:17">st</name><operator pos:start="31:18" pos:end="31:19">-&gt;</operator><name pos:start="31:20" pos:end="31:24">codec</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:46">/* by default, we output a single frame */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:18"><expr pos:start="37:5" pos:end="37:17"><name pos:start="37:5" pos:end="37:13">nb_frames</name> <operator pos:start="37:15" pos:end="37:15">=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:20"><expr pos:start="41:5" pos:end="41:19"><operator pos:start="41:5" pos:end="41:5">*</operator><name pos:start="41:6" pos:end="41:15">frame_size</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <literal type="number" pos:start="41:19" pos:end="41:19">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="87:76"><if pos:start="45:5" pos:end="85:5">if<condition pos:start="45:7" pos:end="45:84">(<expr pos:start="45:8" pos:end="45:83"><name pos:start="45:8" pos:end="45:24">video_sync_method</name><operator pos:start="45:25" pos:end="45:25">&gt;</operator><literal type="number" pos:start="45:26" pos:end="45:26">0</literal> <operator pos:start="45:28" pos:end="45:29">||</operator> <operator pos:start="45:31" pos:end="45:31">(</operator><name pos:start="45:32" pos:end="45:48">video_sync_method</name> <operator pos:start="45:50" pos:end="45:51">&amp;&amp;</operator> <call pos:start="45:53" pos:end="45:74"><name pos:start="45:53" pos:end="45:58">av_q2d</name><argument_list pos:start="45:59" pos:end="45:74">(<argument pos:start="45:60" pos:end="45:73"><expr pos:start="45:60" pos:end="45:73"><name pos:start="45:60" pos:end="45:73"><name pos:start="45:60" pos:end="45:62">enc</name><operator pos:start="45:63" pos:end="45:64">-&gt;</operator><name pos:start="45:65" pos:end="45:73">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="45:76" pos:end="45:76">&gt;</operator> <literal type="number" pos:start="45:78" pos:end="45:82">0.001</literal><operator pos:start="45:83" pos:end="45:83">)</operator></expr>)</condition><block pos:start="45:85" pos:end="85:5">{<block_content pos:start="47:9" pos:end="83:9">

        <decl_stmt pos:start="47:9" pos:end="47:22"><decl pos:start="47:9" pos:end="47:21"><type pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:14">double</name></type> <name pos:start="47:16" pos:end="47:21">vdelta</name></decl>;</decl_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:78"><expr pos:start="49:9" pos:end="49:77"><name pos:start="49:9" pos:end="49:14">vdelta</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <call pos:start="49:18" pos:end="49:35"><name pos:start="49:18" pos:end="49:30">get_sync_ipts</name><argument_list pos:start="49:31" pos:end="49:35">(<argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">ost</name></expr></argument>)</argument_list></call> <operator pos:start="49:37" pos:end="49:37">/</operator> <call pos:start="49:39" pos:end="49:60"><name pos:start="49:39" pos:end="49:44">av_q2d</name><argument_list pos:start="49:45" pos:end="49:60">(<argument pos:start="49:46" pos:end="49:59"><expr pos:start="49:46" pos:end="49:59"><name pos:start="49:46" pos:end="49:59"><name pos:start="49:46" pos:end="49:48">enc</name><operator pos:start="49:49" pos:end="49:50">-&gt;</operator><name pos:start="49:51" pos:end="49:59">time_base</name></name></expr></argument>)</argument_list></call> <operator pos:start="49:62" pos:end="49:62">-</operator> <name pos:start="49:64" pos:end="49:77"><name pos:start="49:64" pos:end="49:66">ost</name><operator pos:start="49:67" pos:end="49:68">-&gt;</operator><name pos:start="49:69" pos:end="49:77">sync_opts</name></name></expr>;</expr_stmt>

        <comment type="line" pos:start="51:9" pos:end="51:74">//FIXME set to 0.5 after we fix some dts/pts bugs like in avidec.c</comment>

        <if_stmt pos:start="53:9" pos:end="63:39"><if pos:start="53:9" pos:end="55:26">if <condition pos:start="53:12" pos:end="53:26">(<expr pos:start="53:13" pos:end="53:25"><name pos:start="53:13" pos:end="53:18">vdelta</name> <operator pos:start="53:20" pos:end="53:20">&lt;</operator> <operator pos:start="53:22" pos:end="53:22">-</operator><literal type="number" pos:start="53:23" pos:end="53:25">1.1</literal></expr>)</condition><block type="pseudo" pos:start="55:13" pos:end="55:26"><block_content pos:start="55:13" pos:end="55:26">

            <expr_stmt pos:start="55:13" pos:end="55:26"><expr pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:21">nb_frames</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="number" pos:start="55:25" pos:end="55:25">0</literal></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="57:9" pos:end="59:80">else if <condition pos:start="57:17" pos:end="57:40">(<expr pos:start="57:18" pos:end="57:39"><name pos:start="57:18" pos:end="57:34">video_sync_method</name> <operator pos:start="57:36" pos:end="57:37">==</operator> <literal type="number" pos:start="57:39" pos:end="57:39">2</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="59:80"><block_content pos:start="59:13" pos:end="59:80">

            <expr_stmt pos:start="59:13" pos:end="59:80"><expr pos:start="59:13" pos:end="59:79"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:15">ost</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:26">sync_opts</name></name><operator pos:start="59:27" pos:end="59:27">=</operator> <call pos:start="59:29" pos:end="59:79"><name pos:start="59:29" pos:end="59:34">lrintf</name><argument_list pos:start="59:35" pos:end="59:79">(<argument pos:start="59:36" pos:end="59:78"><expr pos:start="59:36" pos:end="59:78"><call pos:start="59:36" pos:end="59:53"><name pos:start="59:36" pos:end="59:48">get_sync_ipts</name><argument_list pos:start="59:49" pos:end="59:53">(<argument pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:52">ost</name></expr></argument>)</argument_list></call> <operator pos:start="59:55" pos:end="59:55">/</operator> <call pos:start="59:57" pos:end="59:78"><name pos:start="59:57" pos:end="59:62">av_q2d</name><argument_list pos:start="59:63" pos:end="59:78">(<argument pos:start="59:64" pos:end="59:77"><expr pos:start="59:64" pos:end="59:77"><name pos:start="59:64" pos:end="59:77"><name pos:start="59:64" pos:end="59:66">enc</name><operator pos:start="59:67" pos:end="59:68">-&gt;</operator><name pos:start="59:69" pos:end="59:77">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="61:9" pos:end="63:39">else if <condition pos:start="61:17" pos:end="61:30">(<expr pos:start="61:18" pos:end="61:29"><name pos:start="61:18" pos:end="61:23">vdelta</name> <operator pos:start="61:25" pos:end="61:25">&gt;</operator> <literal type="number" pos:start="61:27" pos:end="61:29">1.1</literal></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:39"><block_content pos:start="63:13" pos:end="63:39">

            <expr_stmt pos:start="63:13" pos:end="63:39"><expr pos:start="63:13" pos:end="63:38"><name pos:start="63:13" pos:end="63:21">nb_frames</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:38"><name pos:start="63:25" pos:end="63:30">lrintf</name><argument_list pos:start="63:31" pos:end="63:38">(<argument pos:start="63:32" pos:end="63:37"><expr pos:start="63:32" pos:end="63:37"><name pos:start="63:32" pos:end="63:37">vdelta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="65:1" pos:end="65:142">//fprintf(stderr, "vdelta:%f, ost-&gt;sync_opts:%"PRId64", ost-&gt;sync_ipts:%f nb_frames:%d\n", vdelta, ost-&gt;sync_opts, ost-&gt;sync_ipts, nb_frames);</comment>

        <if_stmt pos:start="67:9" pos:end="83:9"><if pos:start="67:9" pos:end="75:9">if <condition pos:start="67:12" pos:end="67:27">(<expr pos:start="67:13" pos:end="67:26"><name pos:start="67:13" pos:end="67:21">nb_frames</name> <operator pos:start="67:23" pos:end="67:24">==</operator> <literal type="number" pos:start="67:26" pos:end="67:26">0</literal></expr>)</condition><block pos:start="67:28" pos:end="75:9">{<block_content pos:start="69:13" pos:end="73:47">

            <expr_stmt pos:start="69:13" pos:end="69:29"><expr pos:start="69:13" pos:end="69:28"><operator pos:start="69:13" pos:end="69:14">++</operator><name pos:start="69:15" pos:end="69:28">nb_frames_drop</name></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="73:47"><if pos:start="71:13" pos:end="73:47">if <condition pos:start="71:16" pos:end="71:26">(<expr pos:start="71:17" pos:end="71:25"><name pos:start="71:17" pos:end="71:23">verbose</name><operator pos:start="71:24" pos:end="71:24">&gt;</operator><literal type="number" pos:start="71:25" pos:end="71:25">2</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:47"><block_content pos:start="73:17" pos:end="73:47">

                <expr_stmt pos:start="73:17" pos:end="73:47"><expr pos:start="73:17" pos:end="73:46"><call pos:start="73:17" pos:end="73:46"><name pos:start="73:17" pos:end="73:23">fprintf</name><argument_list pos:start="73:24" pos:end="73:46">(<argument pos:start="73:25" pos:end="73:30"><expr pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:30">stderr</name></expr></argument>, <argument pos:start="73:33" pos:end="73:45"><expr pos:start="73:33" pos:end="73:45"><literal type="string" pos:start="73:33" pos:end="73:45">"*** drop!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if><if type="elseif" pos:start="75:10" pos:end="83:9">else if <condition pos:start="75:18" pos:end="75:32">(<expr pos:start="75:19" pos:end="75:31"><name pos:start="75:19" pos:end="75:27">nb_frames</name> <operator pos:start="75:29" pos:end="75:29">&gt;</operator> <literal type="number" pos:start="75:31" pos:end="75:31">1</literal></expr>)</condition> <block pos:start="75:34" pos:end="83:9">{<block_content pos:start="77:13" pos:end="81:62">

            <expr_stmt pos:start="77:13" pos:end="77:39"><expr pos:start="77:13" pos:end="77:38"><name pos:start="77:13" pos:end="77:25">nb_frames_dup</name> <operator pos:start="77:27" pos:end="77:28">+=</operator> <name pos:start="77:30" pos:end="77:38">nb_frames</name></expr>;</expr_stmt>

            <if_stmt pos:start="79:13" pos:end="81:62"><if pos:start="79:13" pos:end="81:62">if <condition pos:start="79:16" pos:end="79:26">(<expr pos:start="79:17" pos:end="79:25"><name pos:start="79:17" pos:end="79:23">verbose</name><operator pos:start="79:24" pos:end="79:24">&gt;</operator><literal type="number" pos:start="79:25" pos:end="79:25">2</literal></expr>)</condition><block type="pseudo" pos:start="81:17" pos:end="81:62"><block_content pos:start="81:17" pos:end="81:62">

                <expr_stmt pos:start="81:17" pos:end="81:62"><expr pos:start="81:17" pos:end="81:61"><call pos:start="81:17" pos:end="81:61"><name pos:start="81:17" pos:end="81:23">fprintf</name><argument_list pos:start="81:24" pos:end="81:61">(<argument pos:start="81:25" pos:end="81:30"><expr pos:start="81:25" pos:end="81:30"><name pos:start="81:25" pos:end="81:30">stderr</name></expr></argument>, <argument pos:start="81:33" pos:end="81:47"><expr pos:start="81:33" pos:end="81:47"><literal type="string" pos:start="81:33" pos:end="81:47">"*** %d dup!\n"</literal></expr></argument>, <argument pos:start="81:50" pos:end="81:60"><expr pos:start="81:50" pos:end="81:60"><name pos:start="81:50" pos:end="81:58">nb_frames</name><operator pos:start="81:59" pos:end="81:59">-</operator><literal type="number" pos:start="81:60" pos:end="81:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if><else pos:start="85:6" pos:end="87:76">else<block type="pseudo" pos:start="87:9" pos:end="87:76"><block_content pos:start="87:9" pos:end="87:76">

        <expr_stmt pos:start="87:9" pos:end="87:76"><expr pos:start="87:9" pos:end="87:75"><name pos:start="87:9" pos:end="87:22"><name pos:start="87:9" pos:end="87:11">ost</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:22">sync_opts</name></name><operator pos:start="87:23" pos:end="87:23">=</operator> <call pos:start="87:25" pos:end="87:75"><name pos:start="87:25" pos:end="87:30">lrintf</name><argument_list pos:start="87:31" pos:end="87:75">(<argument pos:start="87:32" pos:end="87:74"><expr pos:start="87:32" pos:end="87:74"><call pos:start="87:32" pos:end="87:49"><name pos:start="87:32" pos:end="87:44">get_sync_ipts</name><argument_list pos:start="87:45" pos:end="87:49">(<argument pos:start="87:46" pos:end="87:48"><expr pos:start="87:46" pos:end="87:48"><name pos:start="87:46" pos:end="87:48">ost</name></expr></argument>)</argument_list></call> <operator pos:start="87:51" pos:end="87:51">/</operator> <call pos:start="87:53" pos:end="87:74"><name pos:start="87:53" pos:end="87:58">av_q2d</name><argument_list pos:start="87:59" pos:end="87:74">(<argument pos:start="87:60" pos:end="87:73"><expr pos:start="87:60" pos:end="87:73"><name pos:start="87:60" pos:end="87:73"><name pos:start="87:60" pos:end="87:62">enc</name><operator pos:start="87:63" pos:end="87:64">-&gt;</operator><name pos:start="87:65" pos:end="87:73">time_base</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:82"><expr pos:start="91:5" pos:end="91:81"><name pos:start="91:5" pos:end="91:13">nb_frames</name><operator pos:start="91:14" pos:end="91:14">=</operator> <call pos:start="91:16" pos:end="91:81"><name pos:start="91:16" pos:end="91:20">FFMIN</name><argument_list pos:start="91:21" pos:end="91:81">(<argument pos:start="91:22" pos:end="91:30"><expr pos:start="91:22" pos:end="91:30"><name pos:start="91:22" pos:end="91:30">nb_frames</name></expr></argument>, <argument pos:start="91:33" pos:end="91:80"><expr pos:start="91:33" pos:end="91:80"><name pos:start="91:33" pos:end="91:60"><name pos:start="91:33" pos:end="91:42">max_frames</name><index pos:start="91:43" pos:end="91:60">[<expr pos:start="91:44" pos:end="91:59"><name pos:start="91:44" pos:end="91:59">CODEC_TYPE_VIDEO</name></expr>]</index></name> <operator pos:start="91:62" pos:end="91:62">-</operator> <name pos:start="91:64" pos:end="91:80"><name pos:start="91:64" pos:end="91:66">ost</name><operator pos:start="91:67" pos:end="91:68">-&gt;</operator><name pos:start="91:69" pos:end="91:80">frame_number</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:15"><if pos:start="93:5" pos:end="95:15">if <condition pos:start="93:8" pos:end="93:23">(<expr pos:start="93:9" pos:end="93:22"><name pos:start="93:9" pos:end="93:17">nb_frames</name> <operator pos:start="93:19" pos:end="93:20">&lt;=</operator> <literal type="number" pos:start="93:22" pos:end="93:22">0</literal></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:15"><block_content pos:start="95:9" pos:end="95:15">

        <return pos:start="95:9" pos:end="95:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="119:5"><if pos:start="99:5" pos:end="115:5">if <condition pos:start="99:8" pos:end="99:24">(<expr pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:11">ost</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:23">video_crop</name></name></expr>)</condition> <block pos:start="99:26" pos:end="115:5">{<block_content pos:start="101:9" pos:end="113:47">

        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:133">(<expr pos:start="101:13" pos:end="101:132"><call pos:start="101:13" pos:end="101:128"><name pos:start="101:13" pos:end="101:27">av_picture_crop</name><argument_list pos:start="101:28" pos:end="101:128">(<argument pos:start="101:29" pos:end="101:59"><expr pos:start="101:29" pos:end="101:59"><operator pos:start="101:29" pos:end="101:29">(</operator><name pos:start="101:30" pos:end="101:38">AVPicture</name> <operator pos:start="101:40" pos:end="101:40">*</operator><operator pos:start="101:41" pos:end="101:41">)</operator><operator pos:start="101:42" pos:end="101:42">&amp;</operator><name pos:start="101:43" pos:end="101:59">picture_crop_temp</name></expr></argument>, <argument pos:start="101:62" pos:end="101:84"><expr pos:start="101:62" pos:end="101:84"><operator pos:start="101:62" pos:end="101:62">(</operator><name pos:start="101:63" pos:end="101:71">AVPicture</name> <operator pos:start="101:73" pos:end="101:73">*</operator><operator pos:start="101:74" pos:end="101:74">)</operator><name pos:start="101:75" pos:end="101:84">in_picture</name></expr></argument>, <argument pos:start="101:87" pos:end="101:98"><expr pos:start="101:87" pos:end="101:98"><name pos:start="101:87" pos:end="101:98"><name pos:start="101:87" pos:end="101:89">dec</name><operator pos:start="101:90" pos:end="101:91">-&gt;</operator><name pos:start="101:92" pos:end="101:98">pix_fmt</name></name></expr></argument>, <argument pos:start="101:101" pos:end="101:112"><expr pos:start="101:101" pos:end="101:112"><name pos:start="101:101" pos:end="101:112"><name pos:start="101:101" pos:end="101:103">ost</name><operator pos:start="101:104" pos:end="101:105">-&gt;</operator><name pos:start="101:106" pos:end="101:112">topBand</name></name></expr></argument>, <argument pos:start="101:115" pos:end="101:127"><expr pos:start="101:115" pos:end="101:127"><name pos:start="101:115" pos:end="101:127"><name pos:start="101:115" pos:end="101:117">ost</name><operator pos:start="101:118" pos:end="101:119">-&gt;</operator><name pos:start="101:120" pos:end="101:127">leftBand</name></name></expr></argument>)</argument_list></call> <operator pos:start="101:130" pos:end="101:130">&lt;</operator> <literal type="number" pos:start="101:132" pos:end="101:132">0</literal></expr>)</condition> <block pos:start="101:135" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:19">

            <expr_stmt pos:start="103:13" pos:end="103:67"><expr pos:start="103:13" pos:end="103:66"><call pos:start="103:13" pos:end="103:66"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="103:66">(<argument pos:start="103:20" pos:end="103:23"><expr pos:start="103:20" pos:end="103:23"><name pos:start="103:20" pos:end="103:23">NULL</name></expr></argument>, <argument pos:start="103:26" pos:end="103:37"><expr pos:start="103:26" pos:end="103:37"><name pos:start="103:26" pos:end="103:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:40" pos:end="103:65"><expr pos:start="103:40" pos:end="103:65"><literal type="string" pos:start="103:40" pos:end="103:65">"error cropping picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="107:27"><if pos:start="105:13" pos:end="107:27">if <condition pos:start="105:16" pos:end="105:30">(<expr pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:29">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:27"><block_content pos:start="107:17" pos:end="107:27">

                <expr_stmt pos:start="107:17" pos:end="107:27"><expr pos:start="107:17" pos:end="107:26"><call pos:start="107:17" pos:end="107:26"><name pos:start="107:17" pos:end="107:23">av_exit</name><argument_list pos:start="107:24" pos:end="107:26">(<argument pos:start="107:25" pos:end="107:25"><expr pos:start="107:25" pos:end="107:25"><literal type="number" pos:start="107:25" pos:end="107:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <return pos:start="109:13" pos:end="109:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:47"><expr pos:start="113:9" pos:end="113:46"><name pos:start="113:9" pos:end="113:25">formatted_picture</name> <operator pos:start="113:27" pos:end="113:27">=</operator> <operator pos:start="113:29" pos:end="113:29">&amp;</operator><name pos:start="113:30" pos:end="113:46">picture_crop_temp</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="115:7" pos:end="119:5">else <block pos:start="115:12" pos:end="119:5">{<block_content pos:start="117:9" pos:end="117:39">

        <expr_stmt pos:start="117:9" pos:end="117:39"><expr pos:start="117:9" pos:end="117:38"><name pos:start="117:9" pos:end="117:25">formatted_picture</name> <operator pos:start="117:27" pos:end="117:27">=</operator> <name pos:start="117:29" pos:end="117:38">in_picture</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:38"><expr pos:start="123:5" pos:end="123:37"><name pos:start="123:5" pos:end="123:17">final_picture</name> <operator pos:start="123:19" pos:end="123:19">=</operator> <name pos:start="123:21" pos:end="123:37">formatted_picture</name></expr>;</expr_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:36"><expr pos:start="125:5" pos:end="125:35"><name pos:start="125:5" pos:end="125:15">padding_src</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <name pos:start="125:19" pos:end="125:35">formatted_picture</name></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:36"><expr pos:start="127:5" pos:end="127:35"><name pos:start="127:5" pos:end="127:18">resampling_dst</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <operator pos:start="127:22" pos:end="127:22">&amp;</operator><name pos:start="127:23" pos:end="127:35"><name pos:start="127:23" pos:end="127:25">ost</name><operator pos:start="127:26" pos:end="127:27">-&gt;</operator><name pos:start="127:28" pos:end="127:35">pict_tmp</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="129:5" pos:end="151:5"><if pos:start="129:5" pos:end="151:5">if <condition pos:start="129:8" pos:end="129:23">(<expr pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:22"><name pos:start="129:9" pos:end="129:11">ost</name><operator pos:start="129:12" pos:end="129:13">-&gt;</operator><name pos:start="129:14" pos:end="129:22">video_pad</name></name></expr>)</condition> <block pos:start="129:25" pos:end="151:5">{<block_content pos:start="131:9" pos:end="149:9">

        <expr_stmt pos:start="131:9" pos:end="131:39"><expr pos:start="131:9" pos:end="131:38"><name pos:start="131:9" pos:end="131:21">final_picture</name> <operator pos:start="131:23" pos:end="131:23">=</operator> <operator pos:start="131:25" pos:end="131:25">&amp;</operator><name pos:start="131:26" pos:end="131:38"><name pos:start="131:26" pos:end="131:28">ost</name><operator pos:start="131:29" pos:end="131:30">-&gt;</operator><name pos:start="131:31" pos:end="131:38">pict_tmp</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="133:9" pos:end="149:9"><if pos:start="133:9" pos:end="149:9">if <condition pos:start="133:12" pos:end="133:32">(<expr pos:start="133:13" pos:end="133:31"><name pos:start="133:13" pos:end="133:31"><name pos:start="133:13" pos:end="133:15">ost</name><operator pos:start="133:16" pos:end="133:17">-&gt;</operator><name pos:start="133:18" pos:end="133:31">video_resample</name></name></expr>)</condition> <block pos:start="133:34" pos:end="149:9">{<block_content pos:start="135:13" pos:end="147:47">

            <if_stmt pos:start="135:13" pos:end="145:13"><if pos:start="135:13" pos:end="145:13">if <condition pos:start="135:16" pos:end="135:137">(<expr pos:start="135:17" pos:end="135:136"><call pos:start="135:17" pos:end="135:132"><name pos:start="135:17" pos:end="135:31">av_picture_crop</name><argument_list pos:start="135:32" pos:end="135:132">(<argument pos:start="135:33" pos:end="135:62"><expr pos:start="135:33" pos:end="135:62"><operator pos:start="135:33" pos:end="135:33">(</operator><name pos:start="135:34" pos:end="135:42">AVPicture</name> <operator pos:start="135:44" pos:end="135:44">*</operator><operator pos:start="135:45" pos:end="135:45">)</operator><operator pos:start="135:46" pos:end="135:46">&amp;</operator><name pos:start="135:47" pos:end="135:62">picture_pad_temp</name></expr></argument>, <argument pos:start="135:65" pos:end="135:90"><expr pos:start="135:65" pos:end="135:90"><operator pos:start="135:65" pos:end="135:65">(</operator><name pos:start="135:66" pos:end="135:74">AVPicture</name> <operator pos:start="135:76" pos:end="135:76">*</operator><operator pos:start="135:77" pos:end="135:77">)</operator><name pos:start="135:78" pos:end="135:90">final_picture</name></expr></argument>, <argument pos:start="135:93" pos:end="135:104"><expr pos:start="135:93" pos:end="135:104"><name pos:start="135:93" pos:end="135:104"><name pos:start="135:93" pos:end="135:95">enc</name><operator pos:start="135:96" pos:end="135:97">-&gt;</operator><name pos:start="135:98" pos:end="135:104">pix_fmt</name></name></expr></argument>, <argument pos:start="135:107" pos:end="135:117"><expr pos:start="135:107" pos:end="135:117"><name pos:start="135:107" pos:end="135:117"><name pos:start="135:107" pos:end="135:109">ost</name><operator pos:start="135:110" pos:end="135:111">-&gt;</operator><name pos:start="135:112" pos:end="135:117">padtop</name></name></expr></argument>, <argument pos:start="135:120" pos:end="135:131"><expr pos:start="135:120" pos:end="135:131"><name pos:start="135:120" pos:end="135:131"><name pos:start="135:120" pos:end="135:122">ost</name><operator pos:start="135:123" pos:end="135:124">-&gt;</operator><name pos:start="135:125" pos:end="135:131">padleft</name></name></expr></argument>)</argument_list></call> <operator pos:start="135:134" pos:end="135:134">&lt;</operator> <literal type="number" pos:start="135:136" pos:end="135:136">0</literal></expr>)</condition> <block pos:start="135:139" pos:end="145:13">{<block_content pos:start="137:17" pos:end="143:23">

                <expr_stmt pos:start="137:17" pos:end="137:70"><expr pos:start="137:17" pos:end="137:69"><call pos:start="137:17" pos:end="137:69"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="137:69">(<argument pos:start="137:24" pos:end="137:27"><expr pos:start="137:24" pos:end="137:27"><name pos:start="137:24" pos:end="137:27">NULL</name></expr></argument>, <argument pos:start="137:30" pos:end="137:41"><expr pos:start="137:30" pos:end="137:41"><name pos:start="137:30" pos:end="137:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:44" pos:end="137:68"><expr pos:start="137:44" pos:end="137:68"><literal type="string" pos:start="137:44" pos:end="137:68">"error padding picture\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="139:17" pos:end="141:31"><if pos:start="139:17" pos:end="141:31">if <condition pos:start="139:20" pos:end="139:34">(<expr pos:start="139:21" pos:end="139:33"><name pos:start="139:21" pos:end="139:33">exit_on_error</name></expr>)</condition><block type="pseudo" pos:start="141:21" pos:end="141:31"><block_content pos:start="141:21" pos:end="141:31">

                    <expr_stmt pos:start="141:21" pos:end="141:31"><expr pos:start="141:21" pos:end="141:30"><call pos:start="141:21" pos:end="141:30"><name pos:start="141:21" pos:end="141:27">av_exit</name><argument_list pos:start="141:28" pos:end="141:30">(<argument pos:start="141:29" pos:end="141:29"><expr pos:start="141:29" pos:end="141:29"><literal type="number" pos:start="141:29" pos:end="141:29">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <return pos:start="143:17" pos:end="143:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:47"><expr pos:start="147:13" pos:end="147:46"><name pos:start="147:13" pos:end="147:26">resampling_dst</name> <operator pos:start="147:28" pos:end="147:28">=</operator> <operator pos:start="147:30" pos:end="147:30">&amp;</operator><name pos:start="147:31" pos:end="147:46">picture_pad_temp</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="165:5"><if pos:start="155:5" pos:end="165:5">if <condition pos:start="155:8" pos:end="155:28">(<expr pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:27"><name pos:start="155:9" pos:end="155:11">ost</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:27">video_resample</name></name></expr>)</condition> <block pos:start="155:30" pos:end="165:5">{<block_content pos:start="157:9" pos:end="163:87">

        <expr_stmt pos:start="157:9" pos:end="157:27"><expr pos:start="157:9" pos:end="157:26"><name pos:start="157:9" pos:end="157:19">padding_src</name> <operator pos:start="157:21" pos:end="157:21">=</operator> <name pos:start="157:23" pos:end="157:26">NULL</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:39"><expr pos:start="159:9" pos:end="159:38"><name pos:start="159:9" pos:end="159:21">final_picture</name> <operator pos:start="159:23" pos:end="159:23">=</operator> <operator pos:start="159:25" pos:end="159:25">&amp;</operator><name pos:start="159:26" pos:end="159:38"><name pos:start="159:26" pos:end="159:28">ost</name><operator pos:start="159:29" pos:end="159:30">-&gt;</operator><name pos:start="159:31" pos:end="159:38">pict_tmp</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="163:87"><expr pos:start="161:9" pos:end="163:86"><call pos:start="161:9" pos:end="163:86"><name pos:start="161:9" pos:end="161:17">sws_scale</name><argument_list pos:start="161:18" pos:end="163:86">(<argument pos:start="161:19" pos:end="161:39"><expr pos:start="161:19" pos:end="161:39"><name pos:start="161:19" pos:end="161:39"><name pos:start="161:19" pos:end="161:21">ost</name><operator pos:start="161:22" pos:end="161:23">-&gt;</operator><name pos:start="161:24" pos:end="161:39">img_resample_ctx</name></name></expr></argument>, <argument pos:start="161:42" pos:end="161:64"><expr pos:start="161:42" pos:end="161:64"><name pos:start="161:42" pos:end="161:64"><name pos:start="161:42" pos:end="161:58">formatted_picture</name><operator pos:start="161:59" pos:end="161:60">-&gt;</operator><name pos:start="161:61" pos:end="161:64">data</name></name></expr></argument>, <argument pos:start="161:67" pos:end="161:93"><expr pos:start="161:67" pos:end="161:93"><name pos:start="161:67" pos:end="161:93"><name pos:start="161:67" pos:end="161:83">formatted_picture</name><operator pos:start="161:84" pos:end="161:85">-&gt;</operator><name pos:start="161:86" pos:end="161:93">linesize</name></name></expr></argument>,

              <argument pos:start="163:15" pos:end="163:15"><expr pos:start="163:15" pos:end="163:15"><literal type="number" pos:start="163:15" pos:end="163:15">0</literal></expr></argument>, <argument pos:start="163:18" pos:end="163:37"><expr pos:start="163:18" pos:end="163:37"><name pos:start="163:18" pos:end="163:37"><name pos:start="163:18" pos:end="163:20">ost</name><operator pos:start="163:21" pos:end="163:22">-&gt;</operator><name pos:start="163:23" pos:end="163:37">resample_height</name></name></expr></argument>, <argument pos:start="163:40" pos:end="163:59"><expr pos:start="163:40" pos:end="163:59"><name pos:start="163:40" pos:end="163:59"><name pos:start="163:40" pos:end="163:53">resampling_dst</name><operator pos:start="163:54" pos:end="163:55">-&gt;</operator><name pos:start="163:56" pos:end="163:59">data</name></name></expr></argument>, <argument pos:start="163:62" pos:end="163:85"><expr pos:start="163:62" pos:end="163:85"><name pos:start="163:62" pos:end="163:85"><name pos:start="163:62" pos:end="163:75">resampling_dst</name><operator pos:start="163:76" pos:end="163:77">-&gt;</operator><name pos:start="163:78" pos:end="163:85">linesize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="177:5"><if pos:start="169:5" pos:end="177:5">if <condition pos:start="169:8" pos:end="169:23">(<expr pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:22"><name pos:start="169:9" pos:end="169:11">ost</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:22">video_pad</name></name></expr>)</condition> <block pos:start="169:25" pos:end="177:5">{<block_content pos:start="171:9" pos:end="175:84">

        <expr_stmt pos:start="171:9" pos:end="175:84"><expr pos:start="171:9" pos:end="175:83"><call pos:start="171:9" pos:end="175:83"><name pos:start="171:9" pos:end="171:22">av_picture_pad</name><argument_list pos:start="171:23" pos:end="175:83">(<argument pos:start="171:24" pos:end="171:48"><expr pos:start="171:24" pos:end="171:48"><operator pos:start="171:24" pos:end="171:24">(</operator><name pos:start="171:25" pos:end="171:33">AVPicture</name><operator pos:start="171:34" pos:end="171:34">*</operator><operator pos:start="171:35" pos:end="171:35">)</operator><name pos:start="171:36" pos:end="171:48">final_picture</name></expr></argument>, <argument pos:start="171:51" pos:end="171:74"><expr pos:start="171:51" pos:end="171:74"><operator pos:start="171:51" pos:end="171:51">(</operator><name pos:start="171:52" pos:end="171:60">AVPicture</name> <operator pos:start="171:62" pos:end="171:62">*</operator><operator pos:start="171:63" pos:end="171:63">)</operator><name pos:start="171:64" pos:end="171:74">padding_src</name></expr></argument>,

                <argument pos:start="173:17" pos:end="173:27"><expr pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:27"><name pos:start="173:17" pos:end="173:19">enc</name><operator pos:start="173:20" pos:end="173:21">-&gt;</operator><name pos:start="173:22" pos:end="173:27">height</name></name></expr></argument>, <argument pos:start="173:30" pos:end="173:39"><expr pos:start="173:30" pos:end="173:39"><name pos:start="173:30" pos:end="173:39"><name pos:start="173:30" pos:end="173:32">enc</name><operator pos:start="173:33" pos:end="173:34">-&gt;</operator><name pos:start="173:35" pos:end="173:39">width</name></name></expr></argument>, <argument pos:start="173:42" pos:end="173:53"><expr pos:start="173:42" pos:end="173:53"><name pos:start="173:42" pos:end="173:53"><name pos:start="173:42" pos:end="173:44">enc</name><operator pos:start="173:45" pos:end="173:46">-&gt;</operator><name pos:start="173:47" pos:end="173:53">pix_fmt</name></name></expr></argument>,

                <argument pos:start="175:17" pos:end="175:27"><expr pos:start="175:17" pos:end="175:27"><name pos:start="175:17" pos:end="175:27"><name pos:start="175:17" pos:end="175:19">ost</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:27">padtop</name></name></expr></argument>, <argument pos:start="175:30" pos:end="175:43"><expr pos:start="175:30" pos:end="175:43"><name pos:start="175:30" pos:end="175:43"><name pos:start="175:30" pos:end="175:32">ost</name><operator pos:start="175:33" pos:end="175:34">-&gt;</operator><name pos:start="175:35" pos:end="175:43">padbottom</name></name></expr></argument>, <argument pos:start="175:46" pos:end="175:57"><expr pos:start="175:46" pos:end="175:57"><name pos:start="175:46" pos:end="175:57"><name pos:start="175:46" pos:end="175:48">ost</name><operator pos:start="175:49" pos:end="175:50">-&gt;</operator><name pos:start="175:51" pos:end="175:57">padleft</name></name></expr></argument>, <argument pos:start="175:60" pos:end="175:72"><expr pos:start="175:60" pos:end="175:72"><name pos:start="175:60" pos:end="175:72"><name pos:start="175:60" pos:end="175:62">ost</name><operator pos:start="175:63" pos:end="175:64">-&gt;</operator><name pos:start="175:65" pos:end="175:72">padright</name></name></expr></argument>, <argument pos:start="175:75" pos:end="175:82"><expr pos:start="175:75" pos:end="175:82"><name pos:start="175:75" pos:end="175:82">padcolor</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="181:5" pos:end="181:36">/* duplicates frame if needed */</comment>

    <for pos:start="183:5" pos:end="337:5">for<control pos:start="183:8" pos:end="183:28">(<init pos:start="183:9" pos:end="183:12"><expr pos:start="183:9" pos:end="183:11"><name pos:start="183:9" pos:end="183:9">i</name><operator pos:start="183:10" pos:end="183:10">=</operator><literal type="number" pos:start="183:11" pos:end="183:11">0</literal></expr>;</init><condition pos:start="183:13" pos:end="183:24"><expr pos:start="183:13" pos:end="183:23"><name pos:start="183:13" pos:end="183:13">i</name><operator pos:start="183:14" pos:end="183:14">&lt;</operator><name pos:start="183:15" pos:end="183:23">nb_frames</name></expr>;</condition><incr pos:start="183:25" pos:end="183:27"><expr pos:start="183:25" pos:end="183:27"><name pos:start="183:25" pos:end="183:25">i</name><operator pos:start="183:26" pos:end="183:27">++</operator></expr></incr>)</control> <block pos:start="183:30" pos:end="337:5">{<block_content pos:start="185:9" pos:end="335:28">

        <decl_stmt pos:start="185:9" pos:end="185:21"><decl pos:start="185:9" pos:end="185:20"><type pos:start="185:9" pos:end="185:16"><name pos:start="185:9" pos:end="185:16">AVPacket</name></type> <name pos:start="185:18" pos:end="185:20">pkt</name></decl>;</decl_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:29"><expr pos:start="187:9" pos:end="187:28"><call pos:start="187:9" pos:end="187:28"><name pos:start="187:9" pos:end="187:22">av_init_packet</name><argument_list pos:start="187:23" pos:end="187:28">(<argument pos:start="187:24" pos:end="187:27"><expr pos:start="187:24" pos:end="187:27"><operator pos:start="187:24" pos:end="187:24">&amp;</operator><name pos:start="187:25" pos:end="187:27">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="189:9" pos:end="189:37"><expr pos:start="189:9" pos:end="189:36"><name pos:start="189:9" pos:end="189:24"><name pos:start="189:9" pos:end="189:11">pkt</name><operator pos:start="189:12" pos:end="189:12">.</operator><name pos:start="189:13" pos:end="189:24">stream_index</name></name><operator pos:start="189:25" pos:end="189:25">=</operator> <name pos:start="189:27" pos:end="189:36"><name pos:start="189:27" pos:end="189:29">ost</name><operator pos:start="189:30" pos:end="189:31">-&gt;</operator><name pos:start="189:32" pos:end="189:36">index</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="193:9" pos:end="331:9"><if pos:start="193:9" pos:end="219:9">if <condition pos:start="193:12" pos:end="193:49">(<expr pos:start="193:13" pos:end="193:48"><name pos:start="193:13" pos:end="193:29"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:22">oformat</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:29">flags</name></name> <operator pos:start="193:31" pos:end="193:31">&amp;</operator> <name pos:start="193:33" pos:end="193:48">AVFMT_RAWPICTURE</name></expr>)</condition> <block pos:start="193:51" pos:end="219:9">{<block_content pos:start="201:13" pos:end="217:41">

            <comment type="block" pos:start="195:13" pos:end="199:25">/* raw pictures are written as AVPicture structure to

               avoid any copies. We support temorarily the older

               method. */</comment>

            <decl_stmt pos:start="201:13" pos:end="201:50"><decl pos:start="201:13" pos:end="201:49"><type pos:start="201:13" pos:end="201:20"><name pos:start="201:13" pos:end="201:19">AVFrame</name><modifier pos:start="201:20" pos:end="201:20">*</modifier></type> <name pos:start="201:22" pos:end="201:30">old_frame</name> <init pos:start="201:32" pos:end="201:49">= <expr pos:start="201:34" pos:end="201:49"><name pos:start="201:34" pos:end="201:49"><name pos:start="201:34" pos:end="201:36">enc</name><operator pos:start="201:37" pos:end="201:38">-&gt;</operator><name pos:start="201:39" pos:end="201:49">coded_frame</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:48"><expr pos:start="203:13" pos:end="203:47"><name pos:start="203:13" pos:end="203:28"><name pos:start="203:13" pos:end="203:15">enc</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:28">coded_frame</name></name> <operator pos:start="203:30" pos:end="203:30">=</operator> <name pos:start="203:32" pos:end="203:47"><name pos:start="203:32" pos:end="203:34">dec</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:47">coded_frame</name></name></expr>;</expr_stmt> <comment type="line" pos:start="203:50" pos:end="203:77">//FIXME/XXX remove this hack</comment>

            <expr_stmt pos:start="205:13" pos:end="205:47"><expr pos:start="205:13" pos:end="205:46"><name pos:start="205:13" pos:end="205:20"><name pos:start="205:13" pos:end="205:15">pkt</name><operator pos:start="205:16" pos:end="205:16">.</operator><name pos:start="205:17" pos:end="205:20">data</name></name><operator pos:start="205:21" pos:end="205:21">=</operator> <operator pos:start="205:23" pos:end="205:23">(</operator><name pos:start="205:24" pos:end="205:30">uint8_t</name> <operator pos:start="205:32" pos:end="205:32">*</operator><operator pos:start="205:33" pos:end="205:33">)</operator><name pos:start="205:34" pos:end="205:46">final_picture</name></expr>;</expr_stmt>

            <expr_stmt pos:start="207:13" pos:end="207:41"><expr pos:start="207:13" pos:end="207:40"><name pos:start="207:13" pos:end="207:20"><name pos:start="207:13" pos:end="207:15">pkt</name><operator pos:start="207:16" pos:end="207:16">.</operator><name pos:start="207:17" pos:end="207:20">size</name></name><operator pos:start="207:21" pos:end="207:21">=</operator>  <sizeof pos:start="207:24" pos:end="207:40">sizeof<argument_list pos:start="207:30" pos:end="207:40">(<argument pos:start="207:31" pos:end="207:39"><expr pos:start="207:31" pos:end="207:39"><name pos:start="207:31" pos:end="207:39">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:86"><expr pos:start="209:13" pos:end="209:85"><name pos:start="209:13" pos:end="209:19"><name pos:start="209:13" pos:end="209:15">pkt</name><operator pos:start="209:16" pos:end="209:16">.</operator><name pos:start="209:17" pos:end="209:19">pts</name></name><operator pos:start="209:20" pos:end="209:20">=</operator> <call pos:start="209:22" pos:end="209:85"><name pos:start="209:22" pos:end="209:33">av_rescale_q</name><argument_list pos:start="209:34" pos:end="209:85">(<argument pos:start="209:35" pos:end="209:48"><expr pos:start="209:35" pos:end="209:48"><name pos:start="209:35" pos:end="209:48"><name pos:start="209:35" pos:end="209:37">ost</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:48">sync_opts</name></name></expr></argument>, <argument pos:start="209:51" pos:end="209:64"><expr pos:start="209:51" pos:end="209:64"><name pos:start="209:51" pos:end="209:64"><name pos:start="209:51" pos:end="209:53">enc</name><operator pos:start="209:54" pos:end="209:55">-&gt;</operator><name pos:start="209:56" pos:end="209:64">time_base</name></name></expr></argument>, <argument pos:start="209:67" pos:end="209:84"><expr pos:start="209:67" pos:end="209:84"><name pos:start="209:67" pos:end="209:84"><name pos:start="209:67" pos:end="209:69">ost</name><operator pos:start="209:70" pos:end="209:71">-&gt;</operator><name pos:start="209:72" pos:end="209:73">st</name><operator pos:start="209:74" pos:end="209:75">-&gt;</operator><name pos:start="209:76" pos:end="209:84">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:38"><expr pos:start="211:13" pos:end="211:37"><name pos:start="211:13" pos:end="211:21"><name pos:start="211:13" pos:end="211:15">pkt</name><operator pos:start="211:16" pos:end="211:16">.</operator><name pos:start="211:17" pos:end="211:21">flags</name></name> <operator pos:start="211:23" pos:end="211:24">|=</operator> <name pos:start="211:26" pos:end="211:37">PKT_FLAG_KEY</name></expr>;</expr_stmt>



            <expr_stmt pos:start="215:13" pos:end="215:103"><expr pos:start="215:13" pos:end="215:102"><call pos:start="215:13" pos:end="215:102"><name pos:start="215:13" pos:end="215:23">write_frame</name><argument_list pos:start="215:24" pos:end="215:102">(<argument pos:start="215:25" pos:end="215:25"><expr pos:start="215:25" pos:end="215:25"><name pos:start="215:25" pos:end="215:25">s</name></expr></argument>, <argument pos:start="215:28" pos:end="215:31"><expr pos:start="215:28" pos:end="215:31"><operator pos:start="215:28" pos:end="215:28">&amp;</operator><name pos:start="215:29" pos:end="215:31">pkt</name></expr></argument>, <argument pos:start="215:34" pos:end="215:47"><expr pos:start="215:34" pos:end="215:47"><name pos:start="215:34" pos:end="215:47"><name pos:start="215:34" pos:end="215:36">ost</name><operator pos:start="215:37" pos:end="215:38">-&gt;</operator><name pos:start="215:39" pos:end="215:40">st</name><operator pos:start="215:41" pos:end="215:42">-&gt;</operator><name pos:start="215:43" pos:end="215:47">codec</name></name></expr></argument>, <argument pos:start="215:50" pos:end="215:101"><expr pos:start="215:50" pos:end="215:101"><name pos:start="215:50" pos:end="215:101"><name pos:start="215:50" pos:end="215:66">bitstream_filters</name><index pos:start="215:67" pos:end="215:83">[<expr pos:start="215:68" pos:end="215:82"><name pos:start="215:68" pos:end="215:82"><name pos:start="215:68" pos:end="215:70">ost</name><operator pos:start="215:71" pos:end="215:72">-&gt;</operator><name pos:start="215:73" pos:end="215:82">file_index</name></name></expr>]</index><index pos:start="215:84" pos:end="215:101">[<expr pos:start="215:85" pos:end="215:100"><name pos:start="215:85" pos:end="215:100"><name pos:start="215:85" pos:end="215:87">pkt</name><operator pos:start="215:88" pos:end="215:88">.</operator><name pos:start="215:89" pos:end="215:100">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="217:13" pos:end="217:41"><expr pos:start="217:13" pos:end="217:40"><name pos:start="217:13" pos:end="217:28"><name pos:start="217:13" pos:end="217:15">enc</name><operator pos:start="217:16" pos:end="217:17">-&gt;</operator><name pos:start="217:18" pos:end="217:28">coded_frame</name></name> <operator pos:start="217:30" pos:end="217:30">=</operator> <name pos:start="217:32" pos:end="217:40">old_frame</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="219:11" pos:end="331:9">else <block pos:start="219:16" pos:end="331:9">{<block_content pos:start="221:13" pos:end="329:13">

            <decl_stmt pos:start="221:13" pos:end="221:32"><decl pos:start="221:13" pos:end="221:31"><type pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:19">AVFrame</name></type> <name pos:start="221:21" pos:end="221:31">big_picture</name></decl>;</decl_stmt>



            <expr_stmt pos:start="225:13" pos:end="225:40"><expr pos:start="225:13" pos:end="225:39"><name pos:start="225:13" pos:end="225:23">big_picture</name><operator pos:start="225:24" pos:end="225:24">=</operator> <operator pos:start="225:26" pos:end="225:26">*</operator><name pos:start="225:27" pos:end="225:39">final_picture</name></expr>;</expr_stmt>

            <comment type="block" pos:start="227:13" pos:end="229:26">/* better than nothing: use input picture interlaced

               settings */</comment>

            <expr_stmt pos:start="231:13" pos:end="231:72"><expr pos:start="231:13" pos:end="231:71"><name pos:start="231:13" pos:end="231:40"><name pos:start="231:13" pos:end="231:23">big_picture</name><operator pos:start="231:24" pos:end="231:24">.</operator><name pos:start="231:25" pos:end="231:40">interlaced_frame</name></name> <operator pos:start="231:42" pos:end="231:42">=</operator> <name pos:start="231:44" pos:end="231:71"><name pos:start="231:44" pos:end="231:53">in_picture</name><operator pos:start="231:54" pos:end="231:55">-&gt;</operator><name pos:start="231:56" pos:end="231:71">interlaced_frame</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="233:13" pos:end="243:13"><if pos:start="233:13" pos:end="243:13">if<condition pos:start="233:15" pos:end="233:106">(<expr pos:start="233:16" pos:end="233:105"><name pos:start="233:16" pos:end="233:43"><name pos:start="233:16" pos:end="233:25">avctx_opts</name><index pos:start="233:26" pos:end="233:43">[<expr pos:start="233:27" pos:end="233:42"><name pos:start="233:27" pos:end="233:42">CODEC_TYPE_VIDEO</name></expr>]</index></name><operator pos:start="233:44" pos:end="233:45">-&gt;</operator><name pos:start="233:46" pos:end="233:50">flags</name> <operator pos:start="233:52" pos:end="233:52">&amp;</operator> <operator pos:start="233:54" pos:end="233:54">(</operator><name pos:start="233:55" pos:end="233:79">CODEC_FLAG_INTERLACED_DCT</name><operator pos:start="233:80" pos:end="233:80">|</operator><name pos:start="233:81" pos:end="233:104">CODEC_FLAG_INTERLACED_ME</name><operator pos:start="233:105" pos:end="233:105">)</operator></expr>)</condition><block pos:start="233:107" pos:end="243:13">{<block_content pos:start="235:17" pos:end="241:66">

                <if_stmt pos:start="235:17" pos:end="241:66"><if pos:start="235:17" pos:end="237:78">if<condition pos:start="235:19" pos:end="235:41">(<expr pos:start="235:20" pos:end="235:40"><name pos:start="235:20" pos:end="235:34">top_field_first</name> <operator pos:start="235:36" pos:end="235:37">==</operator> <operator pos:start="235:39" pos:end="235:39">-</operator><literal type="number" pos:start="235:40" pos:end="235:40">1</literal></expr>)</condition><block type="pseudo" pos:start="237:21" pos:end="237:78"><block_content pos:start="237:21" pos:end="237:78">

                    <expr_stmt pos:start="237:21" pos:end="237:78"><expr pos:start="237:21" pos:end="237:77"><name pos:start="237:21" pos:end="237:47"><name pos:start="237:21" pos:end="237:31">big_picture</name><operator pos:start="237:32" pos:end="237:32">.</operator><name pos:start="237:33" pos:end="237:47">top_field_first</name></name> <operator pos:start="237:49" pos:end="237:49">=</operator> <name pos:start="237:51" pos:end="237:77"><name pos:start="237:51" pos:end="237:60">in_picture</name><operator pos:start="237:61" pos:end="237:62">-&gt;</operator><name pos:start="237:63" pos:end="237:77">top_field_first</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="239:17" pos:end="241:66">else<block type="pseudo" pos:start="241:21" pos:end="241:66"><block_content pos:start="241:21" pos:end="241:66">

                    <expr_stmt pos:start="241:21" pos:end="241:66"><expr pos:start="241:21" pos:end="241:65"><name pos:start="241:21" pos:end="241:47"><name pos:start="241:21" pos:end="241:31">big_picture</name><operator pos:start="241:32" pos:end="241:32">.</operator><name pos:start="241:33" pos:end="241:47">top_field_first</name></name> <operator pos:start="241:49" pos:end="241:49">=</operator> <name pos:start="241:51" pos:end="241:65">top_field_first</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="247:13" pos:end="249:40">/* handles sameq here. This is not correct because it may

               not be a global option */</comment>

            <if_stmt pos:start="251:13" pos:end="257:55"><if pos:start="251:13" pos:end="255:13">if <condition pos:start="251:16" pos:end="251:29">(<expr pos:start="251:17" pos:end="251:28"><name pos:start="251:17" pos:end="251:28">same_quality</name></expr>)</condition> <block pos:start="251:31" pos:end="255:13">{<block_content pos:start="253:17" pos:end="253:55">

                <expr_stmt pos:start="253:17" pos:end="253:55"><expr pos:start="253:17" pos:end="253:54"><name pos:start="253:17" pos:end="253:35"><name pos:start="253:17" pos:end="253:27">big_picture</name><operator pos:start="253:28" pos:end="253:28">.</operator><name pos:start="253:29" pos:end="253:35">quality</name></name> <operator pos:start="253:37" pos:end="253:37">=</operator> <name pos:start="253:39" pos:end="253:54"><name pos:start="253:39" pos:end="253:41">ist</name><operator pos:start="253:42" pos:end="253:43">-&gt;</operator><name pos:start="253:44" pos:end="253:45">st</name><operator pos:start="253:46" pos:end="253:47">-&gt;</operator><name pos:start="253:48" pos:end="253:54">quality</name></name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="255:14" pos:end="257:55">else<block type="pseudo" pos:start="257:17" pos:end="257:55"><block_content pos:start="257:17" pos:end="257:55">

                <expr_stmt pos:start="257:17" pos:end="257:55"><expr pos:start="257:17" pos:end="257:54"><name pos:start="257:17" pos:end="257:35"><name pos:start="257:17" pos:end="257:27">big_picture</name><operator pos:start="257:28" pos:end="257:28">.</operator><name pos:start="257:29" pos:end="257:35">quality</name></name> <operator pos:start="257:37" pos:end="257:37">=</operator> <name pos:start="257:39" pos:end="257:54"><name pos:start="257:39" pos:end="257:41">ost</name><operator pos:start="257:42" pos:end="257:43">-&gt;</operator><name pos:start="257:44" pos:end="257:45">st</name><operator pos:start="257:46" pos:end="257:47">-&gt;</operator><name pos:start="257:48" pos:end="257:54">quality</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="259:13" pos:end="261:42"><if pos:start="259:13" pos:end="261:42">if<condition pos:start="259:15" pos:end="259:29">(<expr pos:start="259:16" pos:end="259:28"><operator pos:start="259:16" pos:end="259:16">!</operator><name pos:start="259:17" pos:end="259:28">me_threshold</name></expr>)</condition><block type="pseudo" pos:start="261:17" pos:end="261:42"><block_content pos:start="261:17" pos:end="261:42">

                <expr_stmt pos:start="261:17" pos:end="261:42"><expr pos:start="261:17" pos:end="261:41"><name pos:start="261:17" pos:end="261:37"><name pos:start="261:17" pos:end="261:27">big_picture</name><operator pos:start="261:28" pos:end="261:28">.</operator><name pos:start="261:29" pos:end="261:37">pict_type</name></name> <operator pos:start="261:39" pos:end="261:39">=</operator> <literal type="number" pos:start="261:41" pos:end="261:41">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="line" pos:start="263:1" pos:end="263:47">//            big_picture.pts = AV_NOPTS_VALUE;</comment>

            <expr_stmt pos:start="265:13" pos:end="265:44"><expr pos:start="265:13" pos:end="265:43"><name pos:start="265:13" pos:end="265:27"><name pos:start="265:13" pos:end="265:23">big_picture</name><operator pos:start="265:24" pos:end="265:24">.</operator><name pos:start="265:25" pos:end="265:27">pts</name></name><operator pos:start="265:28" pos:end="265:28">=</operator> <name pos:start="265:30" pos:end="265:43"><name pos:start="265:30" pos:end="265:32">ost</name><operator pos:start="265:33" pos:end="265:34">-&gt;</operator><name pos:start="265:35" pos:end="265:43">sync_opts</name></name></expr>;</expr_stmt>

<comment type="line" pos:start="267:1" pos:end="267:120">//            big_picture.pts= av_rescale(ost-&gt;sync_opts, AV_TIME_BASE*(int64_t)enc-&gt;time_base.num, enc-&gt;time_base.den);</comment>

<comment type="line" pos:start="269:1" pos:end="269:71">//av_log(NULL, AV_LOG_DEBUG, "%"PRId64" -&gt; encoder\n", ost-&gt;sync_opts);</comment>

            <expr_stmt pos:start="271:13" pos:end="275:53"><expr pos:start="271:13" pos:end="275:52"><name pos:start="271:13" pos:end="271:15">ret</name> <operator pos:start="271:17" pos:end="271:17">=</operator> <call pos:start="271:19" pos:end="275:52"><name pos:start="271:19" pos:end="271:38">avcodec_encode_video</name><argument_list pos:start="271:39" pos:end="275:52">(<argument pos:start="271:40" pos:end="271:42"><expr pos:start="271:40" pos:end="271:42"><name pos:start="271:40" pos:end="271:42">enc</name></expr></argument>,

                                       <argument pos:start="273:40" pos:end="273:49"><expr pos:start="273:40" pos:end="273:49"><name pos:start="273:40" pos:end="273:49">bit_buffer</name></expr></argument>, <argument pos:start="273:52" pos:end="273:66"><expr pos:start="273:52" pos:end="273:66"><name pos:start="273:52" pos:end="273:66">bit_buffer_size</name></expr></argument>,

                                       <argument pos:start="275:40" pos:end="275:51"><expr pos:start="275:40" pos:end="275:51"><operator pos:start="275:40" pos:end="275:40">&amp;</operator><name pos:start="275:41" pos:end="275:51">big_picture</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="277:13" pos:end="283:13"><if pos:start="277:13" pos:end="283:13">if <condition pos:start="277:16" pos:end="277:26">(<expr pos:start="277:17" pos:end="277:25"><name pos:start="277:17" pos:end="277:19">ret</name> <operator pos:start="277:21" pos:end="277:22">==</operator> <operator pos:start="277:24" pos:end="277:24">-</operator><literal type="number" pos:start="277:25" pos:end="277:25">1</literal></expr>)</condition> <block pos:start="277:28" pos:end="283:13">{<block_content pos:start="279:17" pos:end="281:27">

                <expr_stmt pos:start="279:17" pos:end="279:59"><expr pos:start="279:17" pos:end="279:58"><call pos:start="279:17" pos:end="279:58"><name pos:start="279:17" pos:end="279:23">fprintf</name><argument_list pos:start="279:24" pos:end="279:58">(<argument pos:start="279:25" pos:end="279:30"><expr pos:start="279:25" pos:end="279:30"><name pos:start="279:25" pos:end="279:30">stderr</name></expr></argument>, <argument pos:start="279:33" pos:end="279:57"><expr pos:start="279:33" pos:end="279:57"><literal type="string" pos:start="279:33" pos:end="279:57">"Video encoding failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="281:17" pos:end="281:27"><expr pos:start="281:17" pos:end="281:26"><call pos:start="281:17" pos:end="281:26"><name pos:start="281:17" pos:end="281:23">av_exit</name><argument_list pos:start="281:24" pos:end="281:26">(<argument pos:start="281:25" pos:end="281:25"><expr pos:start="281:25" pos:end="281:25"><literal type="number" pos:start="281:25" pos:end="281:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="line" pos:start="285:13" pos:end="285:53">//enc-&gt;frame_number = enc-&gt;real_pict_num;</comment>

            <if_stmt pos:start="287:13" pos:end="329:13"><if pos:start="287:13" pos:end="329:13">if<condition pos:start="287:15" pos:end="287:21">(<expr pos:start="287:16" pos:end="287:20"><name pos:start="287:16" pos:end="287:18">ret</name><operator pos:start="287:19" pos:end="287:19">&gt;</operator><literal type="number" pos:start="287:20" pos:end="287:20">0</literal></expr>)</condition><block pos:start="287:22" pos:end="329:13">{<block_content pos:start="289:17" pos:end="327:17">

                <expr_stmt pos:start="289:17" pos:end="289:37"><expr pos:start="289:17" pos:end="289:36"><name pos:start="289:17" pos:end="289:24"><name pos:start="289:17" pos:end="289:19">pkt</name><operator pos:start="289:20" pos:end="289:20">.</operator><name pos:start="289:21" pos:end="289:24">data</name></name><operator pos:start="289:25" pos:end="289:25">=</operator> <name pos:start="289:27" pos:end="289:36">bit_buffer</name></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:30"><expr pos:start="291:17" pos:end="291:29"><name pos:start="291:17" pos:end="291:24"><name pos:start="291:17" pos:end="291:19">pkt</name><operator pos:start="291:20" pos:end="291:20">.</operator><name pos:start="291:21" pos:end="291:24">size</name></name><operator pos:start="291:25" pos:end="291:25">=</operator> <name pos:start="291:27" pos:end="291:29">ret</name></expr>;</expr_stmt>

                <if_stmt pos:start="293:17" pos:end="295:101"><if pos:start="293:17" pos:end="295:101">if<condition pos:start="293:19" pos:end="293:59">(<expr pos:start="293:20" pos:end="293:58"><name pos:start="293:20" pos:end="293:40"><name pos:start="293:20" pos:end="293:22">enc</name><operator pos:start="293:23" pos:end="293:24">-&gt;</operator><name pos:start="293:25" pos:end="293:35">coded_frame</name><operator pos:start="293:36" pos:end="293:37">-&gt;</operator><name pos:start="293:38" pos:end="293:40">pts</name></name> <operator pos:start="293:42" pos:end="293:43">!=</operator> <name pos:start="293:45" pos:end="293:58">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="295:21" pos:end="295:101"><block_content pos:start="295:21" pos:end="295:101">

                    <expr_stmt pos:start="295:21" pos:end="295:101"><expr pos:start="295:21" pos:end="295:100"><name pos:start="295:21" pos:end="295:27"><name pos:start="295:21" pos:end="295:23">pkt</name><operator pos:start="295:24" pos:end="295:24">.</operator><name pos:start="295:25" pos:end="295:27">pts</name></name><operator pos:start="295:28" pos:end="295:28">=</operator> <call pos:start="295:30" pos:end="295:100"><name pos:start="295:30" pos:end="295:41">av_rescale_q</name><argument_list pos:start="295:42" pos:end="295:100">(<argument pos:start="295:43" pos:end="295:63"><expr pos:start="295:43" pos:end="295:63"><name pos:start="295:43" pos:end="295:63"><name pos:start="295:43" pos:end="295:45">enc</name><operator pos:start="295:46" pos:end="295:47">-&gt;</operator><name pos:start="295:48" pos:end="295:58">coded_frame</name><operator pos:start="295:59" pos:end="295:60">-&gt;</operator><name pos:start="295:61" pos:end="295:63">pts</name></name></expr></argument>, <argument pos:start="295:66" pos:end="295:79"><expr pos:start="295:66" pos:end="295:79"><name pos:start="295:66" pos:end="295:79"><name pos:start="295:66" pos:end="295:68">enc</name><operator pos:start="295:69" pos:end="295:70">-&gt;</operator><name pos:start="295:71" pos:end="295:79">time_base</name></name></expr></argument>, <argument pos:start="295:82" pos:end="295:99"><expr pos:start="295:82" pos:end="295:99"><name pos:start="295:82" pos:end="295:99"><name pos:start="295:82" pos:end="295:84">ost</name><operator pos:start="295:85" pos:end="295:86">-&gt;</operator><name pos:start="295:87" pos:end="295:88">st</name><operator pos:start="295:89" pos:end="295:90">-&gt;</operator><name pos:start="295:91" pos:end="295:99">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

<comment type="block" pos:start="297:1" pos:end="301:121">/*av_log(NULL, AV_LOG_DEBUG, "encoder -&gt; %"PRId64"/%"PRId64"\n",

   pkt.pts != AV_NOPTS_VALUE ? av_rescale(pkt.pts, enc-&gt;time_base.den, AV_TIME_BASE*(int64_t)enc-&gt;time_base.num) : -1,

   pkt.dts != AV_NOPTS_VALUE ? av_rescale(pkt.dts, enc-&gt;time_base.den, AV_TIME_BASE*(int64_t)enc-&gt;time_base.num) : -1);*/</comment>



                <if_stmt pos:start="305:17" pos:end="307:46"><if pos:start="305:17" pos:end="307:46">if<condition pos:start="305:19" pos:end="305:47">(<expr pos:start="305:20" pos:end="305:46"><name pos:start="305:20" pos:end="305:46"><name pos:start="305:20" pos:end="305:22">enc</name><operator pos:start="305:23" pos:end="305:24">-&gt;</operator><name pos:start="305:25" pos:end="305:35">coded_frame</name><operator pos:start="305:36" pos:end="305:37">-&gt;</operator><name pos:start="305:38" pos:end="305:46">key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="307:21" pos:end="307:46"><block_content pos:start="307:21" pos:end="307:46">

                    <expr_stmt pos:start="307:21" pos:end="307:46"><expr pos:start="307:21" pos:end="307:45"><name pos:start="307:21" pos:end="307:29"><name pos:start="307:21" pos:end="307:23">pkt</name><operator pos:start="307:24" pos:end="307:24">.</operator><name pos:start="307:25" pos:end="307:29">flags</name></name> <operator pos:start="307:31" pos:end="307:32">|=</operator> <name pos:start="307:34" pos:end="307:45">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:107"><expr pos:start="309:17" pos:end="309:106"><call pos:start="309:17" pos:end="309:106"><name pos:start="309:17" pos:end="309:27">write_frame</name><argument_list pos:start="309:28" pos:end="309:106">(<argument pos:start="309:29" pos:end="309:29"><expr pos:start="309:29" pos:end="309:29"><name pos:start="309:29" pos:end="309:29">s</name></expr></argument>, <argument pos:start="309:32" pos:end="309:35"><expr pos:start="309:32" pos:end="309:35"><operator pos:start="309:32" pos:end="309:32">&amp;</operator><name pos:start="309:33" pos:end="309:35">pkt</name></expr></argument>, <argument pos:start="309:38" pos:end="309:51"><expr pos:start="309:38" pos:end="309:51"><name pos:start="309:38" pos:end="309:51"><name pos:start="309:38" pos:end="309:40">ost</name><operator pos:start="309:41" pos:end="309:42">-&gt;</operator><name pos:start="309:43" pos:end="309:44">st</name><operator pos:start="309:45" pos:end="309:46">-&gt;</operator><name pos:start="309:47" pos:end="309:51">codec</name></name></expr></argument>, <argument pos:start="309:54" pos:end="309:105"><expr pos:start="309:54" pos:end="309:105"><name pos:start="309:54" pos:end="309:105"><name pos:start="309:54" pos:end="309:70">bitstream_filters</name><index pos:start="309:71" pos:end="309:87">[<expr pos:start="309:72" pos:end="309:86"><name pos:start="309:72" pos:end="309:86"><name pos:start="309:72" pos:end="309:74">ost</name><operator pos:start="309:75" pos:end="309:76">-&gt;</operator><name pos:start="309:77" pos:end="309:86">file_index</name></name></expr>]</index><index pos:start="309:88" pos:end="309:105">[<expr pos:start="309:89" pos:end="309:104"><name pos:start="309:89" pos:end="309:104"><name pos:start="309:89" pos:end="309:91">pkt</name><operator pos:start="309:92" pos:end="309:92">.</operator><name pos:start="309:93" pos:end="309:104">stream_index</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:34"><expr pos:start="311:17" pos:end="311:33"><operator pos:start="311:17" pos:end="311:17">*</operator><name pos:start="311:18" pos:end="311:27">frame_size</name> <operator pos:start="311:29" pos:end="311:29">=</operator> <name pos:start="311:31" pos:end="311:33">ret</name></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:34"><expr pos:start="313:17" pos:end="313:33"><name pos:start="313:17" pos:end="313:26">video_size</name> <operator pos:start="313:28" pos:end="313:29">+=</operator> <name pos:start="313:31" pos:end="313:33">ret</name></expr>;</expr_stmt>

                <comment type="line" pos:start="315:17" pos:end="315:71">//fprintf(stderr,"\nFrame: %3d %3d size: %5d type: %d",</comment>

                <comment type="line" pos:start="317:17" pos:end="317:71">//        enc-&gt;frame_number-1, enc-&gt;real_pict_num, ret,</comment>

                <comment type="line" pos:start="319:17" pos:end="319:42">//        enc-&gt;pict_type);</comment>

                <comment type="block" pos:start="321:17" pos:end="321:45">/* if two pass, output log */</comment>

                <if_stmt pos:start="323:17" pos:end="327:17"><if pos:start="323:17" pos:end="327:17">if <condition pos:start="323:20" pos:end="323:51">(<expr pos:start="323:21" pos:end="323:50"><name pos:start="323:21" pos:end="323:32"><name pos:start="323:21" pos:end="323:23">ost</name><operator pos:start="323:24" pos:end="323:25">-&gt;</operator><name pos:start="323:26" pos:end="323:32">logfile</name></name> <operator pos:start="323:34" pos:end="323:35">&amp;&amp;</operator> <name pos:start="323:37" pos:end="323:50"><name pos:start="323:37" pos:end="323:39">enc</name><operator pos:start="323:40" pos:end="323:41">-&gt;</operator><name pos:start="323:42" pos:end="323:50">stats_out</name></name></expr>)</condition> <block pos:start="323:53" pos:end="327:17">{<block_content pos:start="325:21" pos:end="325:64">

                    <expr_stmt pos:start="325:21" pos:end="325:64"><expr pos:start="325:21" pos:end="325:63"><call pos:start="325:21" pos:end="325:63"><name pos:start="325:21" pos:end="325:27">fprintf</name><argument_list pos:start="325:28" pos:end="325:63">(<argument pos:start="325:29" pos:end="325:40"><expr pos:start="325:29" pos:end="325:40"><name pos:start="325:29" pos:end="325:40"><name pos:start="325:29" pos:end="325:31">ost</name><operator pos:start="325:32" pos:end="325:33">-&gt;</operator><name pos:start="325:34" pos:end="325:40">logfile</name></name></expr></argument>, <argument pos:start="325:43" pos:end="325:46"><expr pos:start="325:43" pos:end="325:46"><literal type="string" pos:start="325:43" pos:end="325:46">"%s"</literal></expr></argument>, <argument pos:start="325:49" pos:end="325:62"><expr pos:start="325:49" pos:end="325:62"><name pos:start="325:49" pos:end="325:62"><name pos:start="325:49" pos:end="325:51">enc</name><operator pos:start="325:52" pos:end="325:53">-&gt;</operator><name pos:start="325:54" pos:end="325:62">stats_out</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="333:9" pos:end="333:25"><expr pos:start="333:9" pos:end="333:24"><name pos:start="333:9" pos:end="333:22"><name pos:start="333:9" pos:end="333:11">ost</name><operator pos:start="333:12" pos:end="333:13">-&gt;</operator><name pos:start="333:14" pos:end="333:22">sync_opts</name></name><operator pos:start="333:23" pos:end="333:24">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="335:9" pos:end="335:28"><expr pos:start="335:9" pos:end="335:27"><name pos:start="335:9" pos:end="335:25"><name pos:start="335:9" pos:end="335:11">ost</name><operator pos:start="335:12" pos:end="335:13">-&gt;</operator><name pos:start="335:14" pos:end="335:25">frame_number</name></name><operator pos:start="335:26" pos:end="335:27">++</operator></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
