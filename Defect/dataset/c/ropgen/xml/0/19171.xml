<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19171.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:32">rv34_set_deblock_coef</name><parameter_list pos:start="1:33" pos:end="1:51">(<parameter pos:start="1:34" pos:end="1:50"><decl pos:start="1:34" pos:end="1:50"><type pos:start="1:34" pos:end="1:49"><name pos:start="1:34" pos:end="1:47">RV34DecContext</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:50">r</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:18">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">r</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">mvmask</name> <init pos:start="7:16" pos:end="7:18">= <expr pos:start="7:18" pos:end="7:18"><literal type="number" pos:start="7:18" pos:end="7:18">0</literal></expr></init></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:21">i</name></decl>, <decl pos:start="7:24" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:24" pos:end="7:24">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:56"><decl pos:start="9:5" pos:end="9:55"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">midx</name> <init pos:start="9:14" pos:end="9:55">= <expr pos:start="9:16" pos:end="9:55"><name pos:start="9:16" pos:end="9:22"><name pos:start="9:16" pos:end="9:16">s</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:22">mb_x</name></name> <operator pos:start="9:24" pos:end="9:24">*</operator> <literal type="number" pos:start="9:26" pos:end="9:28">2</literal> <operator pos:start="9:28" pos:end="9:28">+</operator> <name pos:start="9:30" pos:end="9:36"><name pos:start="9:30" pos:end="9:30">s</name><operator pos:start="9:31" pos:end="9:32">-&gt;</operator><name pos:start="9:33" pos:end="9:36">mb_y</name></name> <operator pos:start="9:38" pos:end="9:38">*</operator> <literal type="number" pos:start="9:40" pos:end="9:40">2</literal> <operator pos:start="9:42" pos:end="9:42">*</operator> <name pos:start="9:44" pos:end="9:55"><name pos:start="9:44" pos:end="9:44">s</name><operator pos:start="9:45" pos:end="9:46">-&gt;</operator><name pos:start="9:47" pos:end="9:55">b8_stride</name></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:75"><expr pos:start="11:5" pos:end="11:74"><call pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:11">int16_t</name> <argument_list pos:start="11:13" pos:end="11:25">(<argument pos:start="11:14" pos:end="11:24"><expr pos:start="11:14" pos:end="11:24"><operator pos:start="11:14" pos:end="11:14">*</operator><name pos:start="11:15" pos:end="11:24">motion_val</name></expr></argument>)</argument_list></call><index pos:start="11:26" pos:end="11:28">[<expr pos:start="11:27" pos:end="11:27"><literal type="number" pos:start="11:27" pos:end="11:27">2</literal></expr>]</index> <operator pos:start="11:30" pos:end="11:30">=</operator> <name pos:start="11:32" pos:end="11:74"><name pos:start="11:32" pos:end="11:32">s</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:53">current_picture_ptr</name><operator pos:start="11:54" pos:end="11:55">-&gt;</operator><name pos:start="11:56" pos:end="11:65">motion_val</name><index pos:start="11:66" pos:end="11:68">[<expr pos:start="11:67" pos:end="11:67"><literal type="number" pos:start="11:67" pos:end="11:67">0</literal></expr>]</index><index pos:start="11:69" pos:end="11:74">[<expr pos:start="11:70" pos:end="11:73"><name pos:start="11:70" pos:end="11:73">midx</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:17"><if pos:start="13:5" pos:end="15:17">if<condition pos:start="13:7" pos:end="13:33">(<expr pos:start="13:8" pos:end="13:32"><name pos:start="13:8" pos:end="13:19"><name pos:start="13:8" pos:end="13:8">s</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:19">pict_type</name></name> <operator pos:start="13:21" pos:end="13:22">==</operator> <name pos:start="13:24" pos:end="13:32">FF_I_TYPE</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:17"><block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <for pos:start="17:5" pos:end="33:5">for<control pos:start="17:8" pos:end="17:30">(<init pos:start="17:9" pos:end="17:14"><expr pos:start="17:9" pos:end="17:13"><name pos:start="17:9" pos:end="17:9">j</name> <operator pos:start="17:11" pos:end="17:11">=</operator> <literal type="number" pos:start="17:13" pos:end="17:13">0</literal></expr>;</init> <condition pos:start="17:16" pos:end="17:22"><expr pos:start="17:16" pos:end="17:21"><name pos:start="17:16" pos:end="17:16">j</name> <operator pos:start="17:18" pos:end="17:18">&lt;</operator> <literal type="number" pos:start="17:20" pos:end="17:21">16</literal></expr>;</condition> <incr pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:24">j</name> <operator pos:start="17:26" pos:end="17:27">+=</operator> <literal type="number" pos:start="17:29" pos:end="17:29">8</literal></expr></incr>)</control><block pos:start="17:31" pos:end="33:5">{<block_content pos:start="19:9" pos:end="31:35">

        <for pos:start="19:9" pos:end="29:9">for<control pos:start="19:12" pos:end="19:30">(<init pos:start="19:13" pos:end="19:18"><expr pos:start="19:13" pos:end="19:17"><name pos:start="19:13" pos:end="19:13">i</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>;</init> <condition pos:start="19:20" pos:end="19:25"><expr pos:start="19:20" pos:end="19:24"><name pos:start="19:20" pos:end="19:20">i</name> <operator pos:start="19:22" pos:end="19:22">&lt;</operator> <literal type="number" pos:start="19:24" pos:end="19:24">2</literal></expr>;</condition> <incr pos:start="19:27" pos:end="19:29"><expr pos:start="19:27" pos:end="19:29"><name pos:start="19:27" pos:end="19:27">i</name><operator pos:start="19:28" pos:end="19:29">++</operator></expr></incr>)</control><block pos:start="19:31" pos:end="29:9">{<block_content pos:start="21:13" pos:end="27:44">

            <if_stmt pos:start="21:13" pos:end="23:44"><if pos:start="21:13" pos:end="23:44">if<condition pos:start="21:15" pos:end="21:50">(<expr pos:start="21:16" pos:end="21:49"><call pos:start="21:16" pos:end="21:49"><name pos:start="21:16" pos:end="21:30">is_mv_diff_gt_3</name><argument_list pos:start="21:31" pos:end="21:49">(<argument pos:start="21:32" pos:end="21:45"><expr pos:start="21:32" pos:end="21:45"><name pos:start="21:32" pos:end="21:41">motion_val</name> <operator pos:start="21:43" pos:end="21:43">+</operator> <name pos:start="21:45" pos:end="21:45">i</name></expr></argument>, <argument pos:start="21:48" pos:end="21:48"><expr pos:start="21:48" pos:end="21:48"><literal type="number" pos:start="21:48" pos:end="21:48">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="23:44"><block_content pos:start="23:17" pos:end="23:44">

                <expr_stmt pos:start="23:17" pos:end="23:44"><expr pos:start="23:17" pos:end="23:43"><name pos:start="23:17" pos:end="23:22">mvmask</name> <operator pos:start="23:24" pos:end="23:25">|=</operator> <literal type="number" pos:start="23:27" pos:end="23:30">0x11</literal> <operator pos:start="23:32" pos:end="23:33">&lt;&lt;</operator> <operator pos:start="23:35" pos:end="23:35">(</operator><name pos:start="23:36" pos:end="23:36">j</name> <operator pos:start="23:38" pos:end="23:38">+</operator> <name pos:start="23:40" pos:end="23:40">i</name><operator pos:start="23:41" pos:end="23:41">*</operator><literal type="number" pos:start="23:42" pos:end="23:42">2</literal><operator pos:start="23:43" pos:end="23:43">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="25:13" pos:end="27:44"><if pos:start="25:13" pos:end="27:44">if<condition pos:start="25:15" pos:end="25:61">(<expr pos:start="25:16" pos:end="25:60"><call pos:start="25:16" pos:end="25:60"><name pos:start="25:16" pos:end="25:30">is_mv_diff_gt_3</name><argument_list pos:start="25:31" pos:end="25:60">(<argument pos:start="25:32" pos:end="25:45"><expr pos:start="25:32" pos:end="25:45"><name pos:start="25:32" pos:end="25:41">motion_val</name> <operator pos:start="25:43" pos:end="25:43">+</operator> <name pos:start="25:45" pos:end="25:45">i</name></expr></argument>, <argument pos:start="25:48" pos:end="25:59"><expr pos:start="25:48" pos:end="25:59"><name pos:start="25:48" pos:end="25:59"><name pos:start="25:48" pos:end="25:48">s</name><operator pos:start="25:49" pos:end="25:50">-&gt;</operator><name pos:start="25:51" pos:end="25:59">b8_stride</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:44"><block_content pos:start="27:17" pos:end="27:44">

                <expr_stmt pos:start="27:17" pos:end="27:44"><expr pos:start="27:17" pos:end="27:43"><name pos:start="27:17" pos:end="27:22">mvmask</name> <operator pos:start="27:24" pos:end="27:25">|=</operator> <literal type="number" pos:start="27:27" pos:end="27:30">0x03</literal> <operator pos:start="27:32" pos:end="27:33">&lt;&lt;</operator> <operator pos:start="27:35" pos:end="27:35">(</operator><name pos:start="27:36" pos:end="27:36">j</name> <operator pos:start="27:38" pos:end="27:38">+</operator> <name pos:start="27:40" pos:end="27:40">i</name><operator pos:start="27:41" pos:end="27:41">*</operator><literal type="number" pos:start="27:42" pos:end="27:42">2</literal><operator pos:start="27:43" pos:end="27:43">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="31:9" pos:end="31:35"><expr pos:start="31:9" pos:end="31:34"><name pos:start="31:9" pos:end="31:18">motion_val</name> <operator pos:start="31:20" pos:end="31:21">+=</operator> <name pos:start="31:23" pos:end="31:34"><name pos:start="31:23" pos:end="31:23">s</name><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:34">b8_stride</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="35:5" pos:end="35:18">return <expr pos:start="35:12" pos:end="35:17"><name pos:start="35:12" pos:end="35:17">mvmask</name></expr>;</return>

</block_content>}</block></function>
</unit>
