<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25660.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:8">main</name><parameter_list pos:start="1:9" pos:end="1:31">(<parameter pos:start="1:10" pos:end="1:17"><decl pos:start="1:10" pos:end="1:17"><type pos:start="1:10" pos:end="1:17"><name pos:start="1:10" pos:end="1:12">int</name></type> <name pos:start="1:14" pos:end="1:17">argc</name></decl></parameter>,<parameter pos:start="1:19" pos:end="1:30"><decl pos:start="1:19" pos:end="1:30"><type pos:start="1:19" pos:end="1:28"><name pos:start="1:19" pos:end="1:22">char</name><modifier pos:start="1:23" pos:end="1:23">*</modifier></type> <name pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">argv</name><index pos:start="1:29" pos:end="1:30">[]</index></name></decl></parameter>)</parameter_list><block pos:start="1:32" pos:end="115:1">{<block_content pos:start="3:5" pos:end="113:13">

    <decl_stmt pos:start="3:5" pos:end="3:13"><decl pos:start="3:5" pos:end="3:9"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:9">i</name></decl>, <decl pos:start="3:12" pos:end="3:12"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:12" pos:end="3:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint64_t</name></type> <name pos:start="5:14" pos:end="5:16">sse</name><init pos:start="5:17" pos:end="5:18">=<expr pos:start="5:18" pos:end="5:18"><literal type="number" pos:start="5:18" pos:end="5:18">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">FILE</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:14"><name pos:start="9:11" pos:end="9:11">f</name><index pos:start="9:12" pos:end="9:14">[<expr pos:start="9:13" pos:end="9:13"><literal type="number" pos:start="9:13" pos:end="9:13">2</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:24"><name pos:start="11:13" pos:end="11:15">buf</name><index pos:start="11:16" pos:end="11:18">[<expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">2</literal></expr>]</index><index pos:start="11:19" pos:end="11:24">[<expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">uint64_t</name></type> <name pos:start="13:14" pos:end="13:17">psnr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:39"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name><init pos:start="15:12" pos:end="15:39">= <expr pos:start="15:14" pos:end="15:39"><ternary pos:start="15:14" pos:end="15:39"><condition pos:start="15:14" pos:end="15:21"><expr pos:start="15:14" pos:end="15:19"><name pos:start="15:14" pos:end="15:17">argc</name><operator pos:start="15:18" pos:end="15:18">&lt;</operator><literal type="number" pos:start="15:19" pos:end="15:19">4</literal></expr> ?</condition><then pos:start="15:23" pos:end="15:23"> <expr pos:start="15:23" pos:end="15:23"><literal type="number" pos:start="15:23" pos:end="15:23">1</literal></expr> </then><else pos:start="15:25" pos:end="15:39">: <expr pos:start="15:27" pos:end="15:39"><call pos:start="15:27" pos:end="15:39"><name pos:start="15:27" pos:end="15:30">atoi</name><argument_list pos:start="15:31" pos:end="15:39">(<argument pos:start="15:32" pos:end="15:38"><expr pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:38"><name pos:start="15:32" pos:end="15:35">argv</name><index pos:start="15:36" pos:end="15:38">[<expr pos:start="15:37" pos:end="15:37"><literal type="number" pos:start="15:37" pos:end="15:37">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:32"><decl pos:start="17:5" pos:end="17:31"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">max</name><init pos:start="17:16" pos:end="17:31">= <expr pos:start="17:18" pos:end="17:31"><operator pos:start="17:18" pos:end="17:18">(</operator><literal type="number" pos:start="17:19" pos:end="17:19">1</literal><operator pos:start="17:20" pos:end="17:21">&lt;&lt;</operator><operator pos:start="17:22" pos:end="17:22">(</operator><literal type="number" pos:start="17:23" pos:end="17:23">8</literal><operator pos:start="17:24" pos:end="17:24">*</operator><name pos:start="17:25" pos:end="17:27">len</name><operator pos:start="17:28" pos:end="17:28">)</operator><operator pos:start="17:29" pos:end="17:29">)</operator><operator pos:start="17:30" pos:end="17:30">-</operator><literal type="number" pos:start="17:31" pos:end="17:31">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:42"><decl pos:start="19:5" pos:end="19:41"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:13">shift</name><init pos:start="19:14" pos:end="19:41">= <expr pos:start="19:16" pos:end="19:41"><ternary pos:start="19:16" pos:end="19:41"><condition pos:start="19:16" pos:end="19:23"><expr pos:start="19:16" pos:end="19:21"><name pos:start="19:16" pos:end="19:19">argc</name><operator pos:start="19:20" pos:end="19:20">&lt;</operator><literal type="number" pos:start="19:21" pos:end="19:21">5</literal></expr> ?</condition><then pos:start="19:25" pos:end="19:25"> <expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">0</literal></expr> </then><else pos:start="19:27" pos:end="19:41">: <expr pos:start="19:29" pos:end="19:41"><call pos:start="19:29" pos:end="19:41"><name pos:start="19:29" pos:end="19:32">atoi</name><argument_list pos:start="19:33" pos:end="19:41">(<argument pos:start="19:34" pos:end="19:40"><expr pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:40"><name pos:start="19:34" pos:end="19:37">argv</name><index pos:start="19:38" pos:end="19:40">[<expr pos:start="19:39" pos:end="19:39"><literal type="number" pos:start="19:39" pos:end="19:39">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:48"><decl pos:start="21:5" pos:end="21:47"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:18">skip_bytes</name> <init pos:start="21:20" pos:end="21:47">= <expr pos:start="21:22" pos:end="21:47"><ternary pos:start="21:22" pos:end="21:47"><condition pos:start="21:22" pos:end="21:29"><expr pos:start="21:22" pos:end="21:27"><name pos:start="21:22" pos:end="21:25">argc</name><operator pos:start="21:26" pos:end="21:26">&lt;</operator><literal type="number" pos:start="21:27" pos:end="21:27">6</literal></expr> ?</condition><then pos:start="21:31" pos:end="21:31"> <expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr> </then><else pos:start="21:33" pos:end="21:47">: <expr pos:start="21:35" pos:end="21:47"><call pos:start="21:35" pos:end="21:47"><name pos:start="21:35" pos:end="21:38">atoi</name><argument_list pos:start="21:39" pos:end="21:47">(<argument pos:start="21:40" pos:end="21:46"><expr pos:start="21:40" pos:end="21:46"><name pos:start="21:40" pos:end="21:46"><name pos:start="21:40" pos:end="21:43">argv</name><index pos:start="21:44" pos:end="21:46">[<expr pos:start="21:45" pos:end="21:45"><literal type="number" pos:start="21:45" pos:end="21:45">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="25:5" pos:end="35:5"><if pos:start="25:5" pos:end="35:5">if<condition pos:start="25:7" pos:end="25:14">(<expr pos:start="25:8" pos:end="25:13"><name pos:start="25:8" pos:end="25:11">argc</name><operator pos:start="25:12" pos:end="25:12">&lt;</operator><literal type="number" pos:start="25:13" pos:end="25:13">3</literal></expr>)</condition><block pos:start="25:15" pos:end="35:5">{<block_content pos:start="27:9" pos:end="33:18">

        <expr_stmt pos:start="27:9" pos:end="27:85"><expr pos:start="27:9" pos:end="27:84"><call pos:start="27:9" pos:end="27:84"><name pos:start="27:9" pos:end="27:14">printf</name><argument_list pos:start="27:15" pos:end="27:84">(<argument pos:start="27:16" pos:end="27:83"><expr pos:start="27:16" pos:end="27:83"><literal type="string" pos:start="27:16" pos:end="27:83">"tiny_psnr &lt;file1&gt; &lt;file2&gt; [&lt;elem size&gt; [&lt;shift&gt; [&lt;skip bytes&gt;]]]\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:53"><expr pos:start="29:9" pos:end="29:52"><call pos:start="29:9" pos:end="29:52"><name pos:start="29:9" pos:end="29:14">printf</name><argument_list pos:start="29:15" pos:end="29:52">(<argument pos:start="29:16" pos:end="29:51"><expr pos:start="29:16" pos:end="29:51"><literal type="string" pos:start="29:16" pos:end="29:51">"For WAV files use the following:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:79"><expr pos:start="31:9" pos:end="31:78"><call pos:start="31:9" pos:end="31:78"><name pos:start="31:9" pos:end="31:14">printf</name><argument_list pos:start="31:15" pos:end="31:78">(<argument pos:start="31:16" pos:end="31:77"><expr pos:start="31:16" pos:end="31:77"><literal type="string" pos:start="31:16" pos:end="31:77">"./tiny_psnr file1.wav file2.wav 2 0 44 to skip the header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:31"><expr pos:start="39:5" pos:end="39:30"><name pos:start="39:5" pos:end="39:8"><name pos:start="39:5" pos:end="39:5">f</name><index pos:start="39:6" pos:end="39:8">[<expr pos:start="39:7" pos:end="39:7"><literal type="number" pos:start="39:7" pos:end="39:7">0</literal></expr>]</index></name><operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:30"><name pos:start="39:11" pos:end="39:15">fopen</name><argument_list pos:start="39:16" pos:end="39:30">(<argument pos:start="39:17" pos:end="39:23"><expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:20">argv</name><index pos:start="39:21" pos:end="39:23">[<expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:26" pos:end="39:29"><expr pos:start="39:26" pos:end="39:29"><literal type="string" pos:start="39:26" pos:end="39:29">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:8"><name pos:start="41:5" pos:end="41:5">f</name><index pos:start="41:6" pos:end="41:8">[<expr pos:start="41:7" pos:end="41:7"><literal type="number" pos:start="41:7" pos:end="41:7">1</literal></expr>]</index></name><operator pos:start="41:9" pos:end="41:9">=</operator> <call pos:start="41:11" pos:end="41:30"><name pos:start="41:11" pos:end="41:15">fopen</name><argument_list pos:start="41:16" pos:end="41:30">(<argument pos:start="41:17" pos:end="41:23"><expr pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:20">argv</name><index pos:start="41:21" pos:end="41:23">[<expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><literal type="string" pos:start="41:26" pos:end="41:29">"rb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="43:5" pos:end="49:5"><if pos:start="43:5" pos:end="49:5">if<condition pos:start="43:7" pos:end="43:22">(<expr pos:start="43:8" pos:end="43:21"><operator pos:start="43:8" pos:end="43:8">!</operator><name pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:9">f</name><index pos:start="43:10" pos:end="43:12">[<expr pos:start="43:11" pos:end="43:11"><literal type="number" pos:start="43:11" pos:end="43:11">0</literal></expr>]</index></name> <operator pos:start="43:14" pos:end="43:15">||</operator> <operator pos:start="43:17" pos:end="43:17">!</operator><name pos:start="43:18" pos:end="43:21"><name pos:start="43:18" pos:end="43:18">f</name><index pos:start="43:19" pos:end="43:21">[<expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">1</literal></expr>]</index></name></expr>)</condition><block pos:start="43:23" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:18">

        <expr_stmt pos:start="45:9" pos:end="45:57"><expr pos:start="45:9" pos:end="45:56"><call pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:15">fprintf</name><argument_list pos:start="45:16" pos:end="45:56">(<argument pos:start="45:17" pos:end="45:22"><expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22">stderr</name></expr></argument>, <argument pos:start="45:25" pos:end="45:55"><expr pos:start="45:25" pos:end="45:55"><literal type="string" pos:start="45:25" pos:end="45:55">"Could not open input files.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:18">return <expr pos:start="47:16" pos:end="47:17"><operator pos:start="47:16" pos:end="47:16">-</operator><literal type="number" pos:start="47:17" pos:end="47:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:60"><expr pos:start="51:5" pos:end="51:59"><call pos:start="51:5" pos:end="51:59"><name pos:start="51:5" pos:end="51:9">fseek</name><argument_list pos:start="51:10" pos:end="51:59">(<argument pos:start="51:11" pos:end="51:20"><expr pos:start="51:11" pos:end="51:20"><name pos:start="51:11" pos:end="51:20"><name pos:start="51:11" pos:end="51:11">f</name><index pos:start="51:12" pos:end="51:20">[<expr pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:17">shift</name><operator pos:start="51:18" pos:end="51:18">&lt;</operator><literal type="number" pos:start="51:19" pos:end="51:19">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="51:23" pos:end="51:48"><expr pos:start="51:23" pos:end="51:48"><ternary pos:start="51:23" pos:end="51:48"><condition pos:start="51:23" pos:end="51:33"><expr pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:27">shift</name> <operator pos:start="51:29" pos:end="51:29">&lt;</operator> <literal type="number" pos:start="51:31" pos:end="51:31">0</literal></expr> ?</condition><then pos:start="51:35" pos:end="51:40"> <expr pos:start="51:35" pos:end="51:40"><operator pos:start="51:35" pos:end="51:35">-</operator><name pos:start="51:36" pos:end="51:40">shift</name></expr> </then><else pos:start="51:42" pos:end="51:48">: <expr pos:start="51:44" pos:end="51:48"><name pos:start="51:44" pos:end="51:48">shift</name></expr></else></ternary></expr></argument>, <argument pos:start="51:51" pos:end="51:58"><expr pos:start="51:51" pos:end="51:58"><name pos:start="51:51" pos:end="51:58">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:36"><expr pos:start="55:5" pos:end="55:35"><call pos:start="55:5" pos:end="55:35"><name pos:start="55:5" pos:end="55:9">fseek</name><argument_list pos:start="55:10" pos:end="55:35">(<argument pos:start="55:11" pos:end="55:14"><expr pos:start="55:11" pos:end="55:14"><name pos:start="55:11" pos:end="55:14"><name pos:start="55:11" pos:end="55:11">f</name><index pos:start="55:12" pos:end="55:14">[<expr pos:start="55:13" pos:end="55:13"><literal type="number" pos:start="55:13" pos:end="55:13">0</literal></expr>]</index></name></expr></argument>,<argument pos:start="55:16" pos:end="55:25"><expr pos:start="55:16" pos:end="55:25"><name pos:start="55:16" pos:end="55:25">skip_bytes</name></expr></argument>,<argument pos:start="55:27" pos:end="55:34"><expr pos:start="55:27" pos:end="55:34"><name pos:start="55:27" pos:end="55:34">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><call pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:9">fseek</name><argument_list pos:start="57:10" pos:end="57:35">(<argument pos:start="57:11" pos:end="57:14"><expr pos:start="57:11" pos:end="57:14"><name pos:start="57:11" pos:end="57:14"><name pos:start="57:11" pos:end="57:11">f</name><index pos:start="57:12" pos:end="57:14">[<expr pos:start="57:13" pos:end="57:13"><literal type="number" pos:start="57:13" pos:end="57:13">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="57:16" pos:end="57:25"><expr pos:start="57:16" pos:end="57:25"><name pos:start="57:16" pos:end="57:25">skip_bytes</name></expr></argument>,<argument pos:start="57:27" pos:end="57:34"><expr pos:start="57:27" pos:end="57:34"><name pos:start="57:27" pos:end="57:34">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="61:5" pos:end="87:5">for<control pos:start="61:8" pos:end="61:14">(<init pos:start="61:9" pos:end="61:12"><expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:9">i</name><operator pos:start="61:10" pos:end="61:10">=</operator><literal type="number" pos:start="61:11" pos:end="61:11">0</literal></expr>;</init><condition pos:start="61:13" pos:end="61:13">;</condition><incr/>)</control><block pos:start="61:15" pos:end="87:5">{<block_content pos:start="63:9" pos:end="85:9">

        <if_stmt pos:start="63:9" pos:end="63:53"><if pos:start="63:9" pos:end="63:53">if<condition pos:start="63:11" pos:end="63:46">( <expr pos:start="63:13" pos:end="63:45"><call pos:start="63:13" pos:end="63:40"><name pos:start="63:13" pos:end="63:17">fread</name><argument_list pos:start="63:18" pos:end="63:40">(<argument pos:start="63:19" pos:end="63:24"><expr pos:start="63:19" pos:end="63:24"><name pos:start="63:19" pos:end="63:24"><name pos:start="63:19" pos:end="63:21">buf</name><index pos:start="63:22" pos:end="63:24">[<expr pos:start="63:23" pos:end="63:23"><literal type="number" pos:start="63:23" pos:end="63:23">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="63:27" pos:end="63:30"><expr pos:start="63:27" pos:end="63:30"><name pos:start="63:27" pos:end="63:30">SIZE</name></expr></argument>, <argument pos:start="63:33" pos:end="63:33"><expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">1</literal></expr></argument>, <argument pos:start="63:36" pos:end="63:39"><expr pos:start="63:36" pos:end="63:39"><name pos:start="63:36" pos:end="63:39"><name pos:start="63:36" pos:end="63:36">f</name><index pos:start="63:37" pos:end="63:39">[<expr pos:start="63:38" pos:end="63:38"><literal type="number" pos:start="63:38" pos:end="63:38">0</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="63:42" pos:end="63:43">!=</operator> <literal type="number" pos:start="63:45" pos:end="63:45">1</literal></expr>)</condition><block type="pseudo" pos:start="63:48" pos:end="63:53"><block_content pos:start="63:48" pos:end="63:53"> <break pos:start="63:48" pos:end="63:53">break;</break></block_content></block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="65:53"><if pos:start="65:9" pos:end="65:53">if<condition pos:start="65:11" pos:end="65:46">( <expr pos:start="65:13" pos:end="65:45"><call pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:17">fread</name><argument_list pos:start="65:18" pos:end="65:40">(<argument pos:start="65:19" pos:end="65:24"><expr pos:start="65:19" pos:end="65:24"><name pos:start="65:19" pos:end="65:24"><name pos:start="65:19" pos:end="65:21">buf</name><index pos:start="65:22" pos:end="65:24">[<expr pos:start="65:23" pos:end="65:23"><literal type="number" pos:start="65:23" pos:end="65:23">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="65:27" pos:end="65:30"><expr pos:start="65:27" pos:end="65:30"><name pos:start="65:27" pos:end="65:30">SIZE</name></expr></argument>, <argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><literal type="number" pos:start="65:33" pos:end="65:33">1</literal></expr></argument>, <argument pos:start="65:36" pos:end="65:39"><expr pos:start="65:36" pos:end="65:39"><name pos:start="65:36" pos:end="65:39"><name pos:start="65:36" pos:end="65:36">f</name><index pos:start="65:37" pos:end="65:39">[<expr pos:start="65:38" pos:end="65:38"><literal type="number" pos:start="65:38" pos:end="65:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="65:42" pos:end="65:43">!=</operator> <literal type="number" pos:start="65:45" pos:end="65:45">1</literal></expr>)</condition><block type="pseudo" pos:start="65:48" pos:end="65:53"><block_content pos:start="65:48" pos:end="65:53"> <break pos:start="65:48" pos:end="65:53">break;</break></block_content></block></if></if_stmt>



        <for pos:start="69:9" pos:end="85:9">for<control pos:start="69:12" pos:end="69:33">(<init pos:start="69:13" pos:end="69:16"><expr pos:start="69:13" pos:end="69:15"><name pos:start="69:13" pos:end="69:13">j</name><operator pos:start="69:14" pos:end="69:14">=</operator><literal type="number" pos:start="69:15" pos:end="69:15">0</literal></expr>;</init> <condition pos:start="69:18" pos:end="69:24"><expr pos:start="69:18" pos:end="69:23"><name pos:start="69:18" pos:end="69:18">j</name><operator pos:start="69:19" pos:end="69:19">&lt;</operator><name pos:start="69:20" pos:end="69:23">SIZE</name></expr>;</condition> <incr pos:start="69:26" pos:end="69:32"><expr pos:start="69:26" pos:end="69:28"><name pos:start="69:26" pos:end="69:26">i</name><operator pos:start="69:27" pos:end="69:28">++</operator></expr><operator pos:start="69:29" pos:end="69:29">,</operator><expr pos:start="69:30" pos:end="69:32"><name pos:start="69:30" pos:end="69:30">j</name><operator pos:start="69:31" pos:end="69:32">++</operator></expr></incr>)</control><block pos:start="69:34" pos:end="85:9">{<block_content pos:start="71:13" pos:end="83:33">

            <decl_stmt pos:start="71:13" pos:end="71:33"><decl pos:start="71:13" pos:end="71:32"><type pos:start="71:13" pos:end="71:19"><name pos:start="71:13" pos:end="71:19">int64_t</name></type> <name pos:start="71:21" pos:end="71:21">a</name><init pos:start="71:22" pos:end="71:32">= <expr pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:32"><name pos:start="71:24" pos:end="71:26">buf</name><index pos:start="71:27" pos:end="71:29">[<expr pos:start="71:28" pos:end="71:28"><literal type="number" pos:start="71:28" pos:end="71:28">0</literal></expr>]</index><index pos:start="71:30" pos:end="71:32">[<expr pos:start="71:31" pos:end="71:31"><name pos:start="71:31" pos:end="71:31">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="73:13" pos:end="73:33"><decl pos:start="73:13" pos:end="73:32"><type pos:start="73:13" pos:end="73:19"><name pos:start="73:13" pos:end="73:19">int64_t</name></type> <name pos:start="73:21" pos:end="73:21">b</name><init pos:start="73:22" pos:end="73:32">= <expr pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:32"><name pos:start="73:24" pos:end="73:26">buf</name><index pos:start="73:27" pos:end="73:29">[<expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">1</literal></expr>]</index><index pos:start="73:30" pos:end="73:32">[<expr pos:start="73:31" pos:end="73:31"><name pos:start="73:31" pos:end="73:31">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="75:13" pos:end="81:13"><if pos:start="75:13" pos:end="81:13">if<condition pos:start="75:15" pos:end="75:22">(<expr pos:start="75:16" pos:end="75:21"><name pos:start="75:16" pos:end="75:18">len</name><operator pos:start="75:19" pos:end="75:20">==</operator><literal type="number" pos:start="75:21" pos:end="75:21">2</literal></expr>)</condition><block pos:start="75:23" pos:end="81:13">{<block_content pos:start="77:17" pos:end="79:51">

                <expr_stmt pos:start="77:17" pos:end="77:51"><expr pos:start="77:17" pos:end="77:50"><name pos:start="77:17" pos:end="77:17">a</name><operator pos:start="77:18" pos:end="77:18">=</operator> <operator pos:start="77:20" pos:end="77:20">(</operator><name pos:start="77:21" pos:end="77:27">int16_t</name><operator pos:start="77:28" pos:end="77:28">)</operator><operator pos:start="77:29" pos:end="77:29">(</operator><name pos:start="77:30" pos:end="77:30">a</name> <operator pos:start="77:32" pos:end="77:32">|</operator> <operator pos:start="77:34" pos:end="77:34">(</operator><name pos:start="77:35" pos:end="77:45"><name pos:start="77:35" pos:end="77:37">buf</name><index pos:start="77:38" pos:end="77:40">[<expr pos:start="77:39" pos:end="77:39"><literal type="number" pos:start="77:39" pos:end="77:39">0</literal></expr>]</index><index pos:start="77:41" pos:end="77:45">[<expr pos:start="77:42" pos:end="77:44"><operator pos:start="77:42" pos:end="77:43">++</operator><name pos:start="77:44" pos:end="77:44">j</name></expr>]</index></name><operator pos:start="77:46" pos:end="77:47">&lt;&lt;</operator><literal type="number" pos:start="77:48" pos:end="77:48">8</literal><operator pos:start="77:49" pos:end="77:49">)</operator><operator pos:start="77:50" pos:end="77:50">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:51"><expr pos:start="79:17" pos:end="79:50"><name pos:start="79:17" pos:end="79:17">b</name><operator pos:start="79:18" pos:end="79:18">=</operator> <operator pos:start="79:20" pos:end="79:20">(</operator><name pos:start="79:21" pos:end="79:27">int16_t</name><operator pos:start="79:28" pos:end="79:28">)</operator><operator pos:start="79:29" pos:end="79:29">(</operator><name pos:start="79:30" pos:end="79:30">b</name> <operator pos:start="79:32" pos:end="79:32">|</operator> <operator pos:start="79:34" pos:end="79:34">(</operator><name pos:start="79:35" pos:end="79:45"><name pos:start="79:35" pos:end="79:37">buf</name><index pos:start="79:38" pos:end="79:40">[<expr pos:start="79:39" pos:end="79:39"><literal type="number" pos:start="79:39" pos:end="79:39">1</literal></expr>]</index><index pos:start="79:41" pos:end="79:45">[  <expr pos:start="79:44" pos:end="79:44"><name pos:start="79:44" pos:end="79:44">j</name></expr>]</index></name><operator pos:start="79:46" pos:end="79:47">&lt;&lt;</operator><literal type="number" pos:start="79:48" pos:end="79:48">8</literal><operator pos:start="79:49" pos:end="79:49">)</operator><operator pos:start="79:50" pos:end="79:50">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:33"><expr pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:15">sse</name> <operator pos:start="83:17" pos:end="83:18">+=</operator> <operator pos:start="83:20" pos:end="83:20">(</operator><name pos:start="83:21" pos:end="83:21">a</name><operator pos:start="83:22" pos:end="83:22">-</operator><name pos:start="83:23" pos:end="83:23">b</name><operator pos:start="83:24" pos:end="83:24">)</operator> <operator pos:start="83:26" pos:end="83:26">*</operator> <operator pos:start="83:28" pos:end="83:28">(</operator><name pos:start="83:29" pos:end="83:29">a</name><operator pos:start="83:30" pos:end="83:30">-</operator><name pos:start="83:31" pos:end="83:31">b</name><operator pos:start="83:32" pos:end="83:32">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <if_stmt pos:start="91:5" pos:end="91:15"><if pos:start="91:5" pos:end="91:15">if<condition pos:start="91:7" pos:end="91:10">(<expr pos:start="91:8" pos:end="91:9"><operator pos:start="91:8" pos:end="91:8">!</operator><name pos:start="91:9" pos:end="91:9">i</name></expr>)</condition><block type="pseudo" pos:start="91:12" pos:end="91:15"><block_content pos:start="91:12" pos:end="91:15"> <expr_stmt pos:start="91:12" pos:end="91:15"><expr pos:start="91:12" pos:end="91:14"><name pos:start="91:12" pos:end="91:12">i</name><operator pos:start="91:13" pos:end="91:13">=</operator><literal type="number" pos:start="91:14" pos:end="91:14">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:61"><expr pos:start="93:5" pos:end="93:60"><name pos:start="93:5" pos:end="93:7">dev</name><operator pos:start="93:8" pos:end="93:8">=</operator> <call pos:start="93:10" pos:end="93:60"><name pos:start="93:10" pos:end="93:17">int_sqrt</name><argument_list pos:start="93:18" pos:end="93:60">( <argument pos:start="93:20" pos:end="93:58"><expr pos:start="93:20" pos:end="93:58"><operator pos:start="93:20" pos:end="93:20">(</operator><operator pos:start="93:21" pos:end="93:21">(</operator><name pos:start="93:22" pos:end="93:24">sse</name><operator pos:start="93:25" pos:end="93:25">/</operator><name pos:start="93:26" pos:end="93:26">i</name><operator pos:start="93:27" pos:end="93:27">)</operator><operator pos:start="93:28" pos:end="93:28">*</operator><name pos:start="93:29" pos:end="93:29">F</name><operator pos:start="93:30" pos:end="93:30">*</operator><name pos:start="93:31" pos:end="93:31">F</name><operator pos:start="93:32" pos:end="93:32">)</operator> <operator pos:start="93:34" pos:end="93:34">+</operator> <operator pos:start="93:36" pos:end="93:36">(</operator><operator pos:start="93:37" pos:end="93:37">(</operator><operator pos:start="93:38" pos:end="93:38">(</operator><name pos:start="93:39" pos:end="93:41">sse</name><operator pos:start="93:42" pos:end="93:42">%</operator><name pos:start="93:43" pos:end="93:43">i</name><operator pos:start="93:44" pos:end="93:44">)</operator><operator pos:start="93:45" pos:end="93:45">*</operator><name pos:start="93:46" pos:end="93:46">F</name><operator pos:start="93:47" pos:end="93:47">*</operator><name pos:start="93:48" pos:end="93:48">F</name><operator pos:start="93:49" pos:end="93:49">)</operator> <operator pos:start="93:51" pos:end="93:51">+</operator> <name pos:start="93:53" pos:end="93:53">i</name><operator pos:start="93:54" pos:end="93:54">/</operator><literal type="number" pos:start="93:55" pos:end="93:55">2</literal><operator pos:start="93:56" pos:end="93:56">)</operator><operator pos:start="93:57" pos:end="93:57">/</operator><name pos:start="93:58" pos:end="93:58">i</name></expr></argument> )</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="101:22"><if pos:start="95:5" pos:end="97:92">if<condition pos:start="95:7" pos:end="95:11">(<expr pos:start="95:8" pos:end="95:10"><name pos:start="95:8" pos:end="95:10">sse</name></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:92"><block_content pos:start="97:9" pos:end="97:92">

        <expr_stmt pos:start="97:9" pos:end="97:92"><expr pos:start="97:9" pos:end="97:91"><name pos:start="97:9" pos:end="97:12">psnr</name><operator pos:start="97:13" pos:end="97:13">=</operator> <operator pos:start="97:15" pos:end="97:15">(</operator><operator pos:start="97:16" pos:end="97:16">(</operator><literal type="number" pos:start="97:17" pos:end="97:17">2</literal><operator pos:start="97:18" pos:end="97:18">*</operator><call pos:start="97:19" pos:end="97:32"><name pos:start="97:19" pos:end="97:23">log16</name><argument_list pos:start="97:24" pos:end="97:32">(<argument pos:start="97:25" pos:end="97:31"><expr pos:start="97:25" pos:end="97:31"><name pos:start="97:25" pos:end="97:27">max</name><operator pos:start="97:28" pos:end="97:29">&lt;&lt;</operator><literal type="number" pos:start="97:30" pos:end="97:31">16</literal></expr></argument>)</argument_list></call> <operator pos:start="97:34" pos:end="97:34">+</operator> <call pos:start="97:36" pos:end="97:43"><name pos:start="97:36" pos:end="97:40">log16</name><argument_list pos:start="97:41" pos:end="97:43">(<argument pos:start="97:42" pos:end="97:42"><expr pos:start="97:42" pos:end="97:42"><name pos:start="97:42" pos:end="97:42">i</name></expr></argument>)</argument_list></call> <operator pos:start="97:45" pos:end="97:45">-</operator> <call pos:start="97:47" pos:end="97:56"><name pos:start="97:47" pos:end="97:51">log16</name><argument_list pos:start="97:52" pos:end="97:56">(<argument pos:start="97:53" pos:end="97:55"><expr pos:start="97:53" pos:end="97:55"><name pos:start="97:53" pos:end="97:55">sse</name></expr></argument>)</argument_list></call><operator pos:start="97:57" pos:end="97:57">)</operator><operator pos:start="97:58" pos:end="97:58">*</operator><literal type="number" pos:start="97:59" pos:end="97:66">284619LL</literal><operator pos:start="97:67" pos:end="97:67">*</operator><name pos:start="97:68" pos:end="97:68">F</name> <operator pos:start="97:70" pos:end="97:70">+</operator> <operator pos:start="97:72" pos:end="97:72">(</operator><literal type="number" pos:start="97:73" pos:end="97:73">1</literal><operator pos:start="97:74" pos:end="97:75">&lt;&lt;</operator><literal type="number" pos:start="97:76" pos:end="97:77">31</literal><operator pos:start="97:78" pos:end="97:78">)</operator><operator pos:start="97:79" pos:end="97:79">)</operator> <operator pos:start="97:81" pos:end="97:81">/</operator> <operator pos:start="97:83" pos:end="97:83">(</operator><literal type="number" pos:start="97:84" pos:end="97:86">1LL</literal><operator pos:start="97:87" pos:end="97:88">&lt;&lt;</operator><literal type="number" pos:start="97:89" pos:end="97:90">32</literal><operator pos:start="97:91" pos:end="97:91">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="99:5" pos:end="101:22">else<block type="pseudo" pos:start="101:9" pos:end="101:22"><block_content pos:start="101:9" pos:end="101:22">

        <expr_stmt pos:start="101:9" pos:end="101:22"><expr pos:start="101:9" pos:end="101:21"><name pos:start="101:9" pos:end="101:12">psnr</name><operator pos:start="101:13" pos:end="101:13">=</operator> <literal type="number" pos:start="101:15" pos:end="101:17">100</literal><operator pos:start="101:18" pos:end="101:18">*</operator><name pos:start="101:19" pos:end="101:19">F</name><operator pos:start="101:20" pos:end="101:20">-</operator><literal type="number" pos:start="101:21" pos:end="101:21">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="101:24" pos:end="101:56">//floating point free infinity :)</comment>



    <expr_stmt pos:start="105:5" pos:end="111:15"><expr pos:start="105:5" pos:end="111:14"><call pos:start="105:5" pos:end="111:14"><name pos:start="105:5" pos:end="105:10">printf</name><argument_list pos:start="105:11" pos:end="111:14">(<argument pos:start="105:12" pos:end="105:53"><expr pos:start="105:12" pos:end="105:53"><literal type="string" pos:start="105:12" pos:end="105:53">"stddev:%3d.%02d PSNR:%2d.%02d bytes:%d\n"</literal></expr></argument>,

        <argument pos:start="107:9" pos:end="107:20"><expr pos:start="107:9" pos:end="107:20"><operator pos:start="107:9" pos:end="107:9">(</operator><name pos:start="107:10" pos:end="107:12">int</name><operator pos:start="107:13" pos:end="107:13">)</operator><operator pos:start="107:14" pos:end="107:14">(</operator><name pos:start="107:15" pos:end="107:17">dev</name><operator pos:start="107:18" pos:end="107:18">/</operator><name pos:start="107:19" pos:end="107:19">F</name><operator pos:start="107:20" pos:end="107:20">)</operator></expr></argument>, <argument pos:start="107:23" pos:end="107:34"><expr pos:start="107:23" pos:end="107:34"><operator pos:start="107:23" pos:end="107:23">(</operator><name pos:start="107:24" pos:end="107:26">int</name><operator pos:start="107:27" pos:end="107:27">)</operator><operator pos:start="107:28" pos:end="107:28">(</operator><name pos:start="107:29" pos:end="107:31">dev</name><operator pos:start="107:32" pos:end="107:32">%</operator><name pos:start="107:33" pos:end="107:33">F</name><operator pos:start="107:34" pos:end="107:34">)</operator></expr></argument>,

        <argument pos:start="109:9" pos:end="109:21"><expr pos:start="109:9" pos:end="109:21"><operator pos:start="109:9" pos:end="109:9">(</operator><name pos:start="109:10" pos:end="109:12">int</name><operator pos:start="109:13" pos:end="109:13">)</operator><operator pos:start="109:14" pos:end="109:14">(</operator><name pos:start="109:15" pos:end="109:18">psnr</name><operator pos:start="109:19" pos:end="109:19">/</operator><name pos:start="109:20" pos:end="109:20">F</name><operator pos:start="109:21" pos:end="109:21">)</operator></expr></argument>, <argument pos:start="109:24" pos:end="109:36"><expr pos:start="109:24" pos:end="109:36"><operator pos:start="109:24" pos:end="109:24">(</operator><name pos:start="109:25" pos:end="109:27">int</name><operator pos:start="109:28" pos:end="109:28">)</operator><operator pos:start="109:29" pos:end="109:29">(</operator><name pos:start="109:30" pos:end="109:33">psnr</name><operator pos:start="109:34" pos:end="109:34">%</operator><name pos:start="109:35" pos:end="109:35">F</name><operator pos:start="109:36" pos:end="109:36">)</operator></expr></argument>,

        <argument pos:start="111:9" pos:end="111:13"><expr pos:start="111:9" pos:end="111:13"><name pos:start="111:9" pos:end="111:9">i</name><operator pos:start="111:10" pos:end="111:10">*</operator><name pos:start="111:11" pos:end="111:13">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
