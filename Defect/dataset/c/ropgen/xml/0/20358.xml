<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20358.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">opt_output_file</name><parameter_list pos:start="1:21" pos:end="1:42">(<parameter pos:start="1:22" pos:end="1:41"><decl pos:start="1:22" pos:end="1:41"><type pos:start="1:22" pos:end="1:33"><specifier pos:start="1:22" pos:end="1:26">const</specifier> <name pos:start="1:28" pos:end="1:31">char</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:41">filename</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="343:1">{<block_content pos:start="5:5" pos:end="341:35">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">AVStream</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:75"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">use_video</name></decl>, <decl pos:start="9:20" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:28">use_audio</name></decl>, <decl pos:start="9:31" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:31" pos:end="9:40">nb_streams</name></decl>, <decl pos:start="9:43" pos:end="9:57"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:43" pos:end="9:57">input_has_video</name></decl>, <decl pos:start="9:60" pos:end="9:74"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:60" pos:end="9:74">input_has_audio</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:16">codec_id</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:27"><if pos:start="15:5" pos:end="17:27">if <condition pos:start="15:8" pos:end="15:31">(<expr pos:start="15:9" pos:end="15:30"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:30"><name pos:start="15:10" pos:end="15:15">strcmp</name><argument_list pos:start="15:16" pos:end="15:30">(<argument pos:start="15:17" pos:end="15:24"><expr pos:start="15:17" pos:end="15:24"><name pos:start="15:17" pos:end="15:24">filename</name></expr></argument>, <argument pos:start="15:27" pos:end="15:29"><expr pos:start="15:27" pos:end="15:29"><literal type="string" pos:start="15:27" pos:end="15:29">"-"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:27"><block_content pos:start="17:9" pos:end="17:27">

        <expr_stmt pos:start="17:9" pos:end="17:27"><expr pos:start="17:9" pos:end="17:26"><name pos:start="17:9" pos:end="17:16">filename</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <literal type="string" pos:start="17:20" pos:end="17:26">"pipe:"</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:45"><expr pos:start="21:5" pos:end="21:44"><name pos:start="21:5" pos:end="21:6">oc</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <call pos:start="21:10" pos:end="21:44"><name pos:start="21:10" pos:end="21:19">av_mallocz</name><argument_list pos:start="21:20" pos:end="21:44">(<argument pos:start="21:21" pos:end="21:43"><expr pos:start="21:21" pos:end="21:43"><sizeof pos:start="21:21" pos:end="21:43">sizeof<argument_list pos:start="21:27" pos:end="21:43">(<argument pos:start="21:28" pos:end="21:42"><expr pos:start="21:28" pos:end="21:42"><name pos:start="21:28" pos:end="21:42">AVFormatContext</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:20">file_format</name></expr>)</condition> <block pos:start="25:23" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:43">

        <expr_stmt pos:start="27:9" pos:end="27:57"><expr pos:start="27:9" pos:end="27:56"><name pos:start="27:9" pos:end="27:19">file_format</name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:56"><name pos:start="27:23" pos:end="27:34">guess_format</name><argument_list pos:start="27:35" pos:end="27:56">(<argument pos:start="27:36" pos:end="27:39"><expr pos:start="27:36" pos:end="27:39"><name pos:start="27:36" pos:end="27:39">NULL</name></expr></argument>, <argument pos:start="27:42" pos:end="27:49"><expr pos:start="27:42" pos:end="27:49"><name pos:start="27:42" pos:end="27:49">filename</name></expr></argument>, <argument pos:start="27:52" pos:end="27:55"><expr pos:start="27:52" pos:end="27:55"><name pos:start="27:52" pos:end="27:55">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="31:43"><if pos:start="29:9" pos:end="31:43">if <condition pos:start="29:12" pos:end="29:25">(<expr pos:start="29:13" pos:end="29:24"><operator pos:start="29:13" pos:end="29:13">!</operator><name pos:start="29:14" pos:end="29:24">file_format</name></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:43"><block_content pos:start="31:13" pos:end="31:43">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:23">file_format</name> <operator pos:start="31:25" pos:end="31:25">=</operator> <operator pos:start="31:27" pos:end="31:27">&amp;</operator><name pos:start="31:28" pos:end="31:42">mpeg_mux_format</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="37:5" pos:end="37:29"><expr pos:start="37:5" pos:end="37:28"><name pos:start="37:5" pos:end="37:14"><name pos:start="37:5" pos:end="37:6">oc</name><operator pos:start="37:7" pos:end="37:8">-&gt;</operator><name pos:start="37:9" pos:end="37:14">format</name></name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:28">file_format</name></expr>;</expr_stmt>



    <if_stmt pos:start="41:5" pos:end="251:5"><if pos:start="41:5" pos:end="57:5">if <condition pos:start="41:8" pos:end="43:42">(<expr pos:start="41:9" pos:end="43:41"><operator pos:start="41:9" pos:end="41:9">!</operator><call pos:start="41:10" pos:end="41:41"><name pos:start="41:10" pos:end="41:15">strcmp</name><argument_list pos:start="41:16" pos:end="41:41">(<argument pos:start="41:17" pos:end="41:33"><expr pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:33"><name pos:start="41:17" pos:end="41:27">file_format</name><operator pos:start="41:28" pos:end="41:29">-&gt;</operator><name pos:start="41:30" pos:end="41:33">name</name></name></expr></argument>, <argument pos:start="41:36" pos:end="41:40"><expr pos:start="41:36" pos:end="41:40"><literal type="string" pos:start="41:36" pos:end="41:40">"ffm"</literal></expr></argument>)</argument_list></call> <operator pos:start="41:43" pos:end="41:44">&amp;&amp;</operator> 

        <call pos:start="43:9" pos:end="43:41"><name pos:start="43:9" pos:end="43:16">strstart</name><argument_list pos:start="43:17" pos:end="43:41">(<argument pos:start="43:18" pos:end="43:25"><expr pos:start="43:18" pos:end="43:25"><name pos:start="43:18" pos:end="43:25">filename</name></expr></argument>, <argument pos:start="43:28" pos:end="43:34"><expr pos:start="43:28" pos:end="43:34"><literal type="string" pos:start="43:28" pos:end="43:34">"http:"</literal></expr></argument>, <argument pos:start="43:37" pos:end="43:40"><expr pos:start="43:37" pos:end="43:40"><name pos:start="43:37" pos:end="43:40">NULL</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:44" pos:end="57:5">{<block_content pos:start="49:9" pos:end="55:9">

        <comment type="block" pos:start="45:9" pos:end="47:38">/* special case for files sent to ffserver: we get the stream

           parameters from ffserver */</comment>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:52">(<expr pos:start="49:13" pos:end="49:51"><call pos:start="49:13" pos:end="49:47"><name pos:start="49:13" pos:end="49:33">read_ffserver_streams</name><argument_list pos:start="49:34" pos:end="49:47">(<argument pos:start="49:35" pos:end="49:36"><expr pos:start="49:35" pos:end="49:36"><name pos:start="49:35" pos:end="49:36">oc</name></expr></argument>, <argument pos:start="49:39" pos:end="49:46"><expr pos:start="49:39" pos:end="49:46"><name pos:start="49:39" pos:end="49:46">filename</name></expr></argument>)</argument_list></call> <operator pos:start="49:49" pos:end="49:49">&lt;</operator> <literal type="number" pos:start="49:51" pos:end="49:51">0</literal></expr>)</condition> <block pos:start="49:54" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:20">

            <expr_stmt pos:start="51:13" pos:end="51:86"><expr pos:start="51:13" pos:end="51:85"><call pos:start="51:13" pos:end="51:85"><name pos:start="51:13" pos:end="51:19">fprintf</name><argument_list pos:start="51:20" pos:end="51:85">(<argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">stderr</name></expr></argument>, <argument pos:start="51:29" pos:end="51:74"><expr pos:start="51:29" pos:end="51:74"><literal type="string" pos:start="51:29" pos:end="51:74">"Could not read stream parameters from '%s'\n"</literal></expr></argument>, <argument pos:start="51:77" pos:end="51:84"><expr pos:start="51:77" pos:end="51:84"><name pos:start="51:77" pos:end="51:84">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:20"><expr pos:start="53:13" pos:end="53:19"><call pos:start="53:13" pos:end="53:19"><name pos:start="53:13" pos:end="53:16">exit</name><argument_list pos:start="53:17" pos:end="53:19">(<argument pos:start="53:18" pos:end="53:18"><expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="251:5">else <block pos:start="57:12" pos:end="251:5">{<block_content pos:start="59:9" pos:end="249:67">

        <expr_stmt pos:start="59:9" pos:end="59:62"><expr pos:start="59:9" pos:end="59:61"><name pos:start="59:9" pos:end="59:17">use_video</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <name pos:start="59:21" pos:end="59:44"><name pos:start="59:21" pos:end="59:31">file_format</name><operator pos:start="59:32" pos:end="59:33">-&gt;</operator><name pos:start="59:34" pos:end="59:44">video_codec</name></name> <operator pos:start="59:46" pos:end="59:47">!=</operator> <name pos:start="59:49" pos:end="59:61">CODEC_ID_NONE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:62"><expr pos:start="61:9" pos:end="61:61"><name pos:start="61:9" pos:end="61:17">use_audio</name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:44"><name pos:start="61:21" pos:end="61:31">file_format</name><operator pos:start="61:32" pos:end="61:33">-&gt;</operator><name pos:start="61:34" pos:end="61:44">audio_codec</name></name> <operator pos:start="61:46" pos:end="61:47">!=</operator> <name pos:start="61:49" pos:end="61:61">CODEC_ID_NONE</name></expr>;</expr_stmt>



        <comment type="block" pos:start="65:9" pos:end="65:52">/* disable if no corresponding type found */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:69"><expr pos:start="67:9" pos:end="67:68"><call pos:start="67:9" pos:end="67:68"><name pos:start="67:9" pos:end="67:32">check_audio_video_inputs</name><argument_list pos:start="67:33" pos:end="67:68">(<argument pos:start="67:34" pos:end="67:49"><expr pos:start="67:34" pos:end="67:49"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:49">input_has_video</name></expr></argument>, <argument pos:start="67:52" pos:end="67:67"><expr pos:start="67:52" pos:end="67:67"><operator pos:start="67:52" pos:end="67:52">&amp;</operator><name pos:start="67:53" pos:end="67:67">input_has_audio</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:26"><if pos:start="69:9" pos:end="71:26">if <condition pos:start="69:12" pos:end="69:29">(<expr pos:start="69:13" pos:end="69:28"><operator pos:start="69:13" pos:end="69:13">!</operator><name pos:start="69:14" pos:end="69:28">input_has_video</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:26"><block_content pos:start="71:13" pos:end="71:26">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:21">use_video</name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="73:9" pos:end="75:26"><if pos:start="73:9" pos:end="75:26">if <condition pos:start="73:12" pos:end="73:29">(<expr pos:start="73:13" pos:end="73:28"><operator pos:start="73:13" pos:end="73:13">!</operator><name pos:start="73:14" pos:end="73:28">input_has_audio</name></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:26"><block_content pos:start="75:13" pos:end="75:26">

            <expr_stmt pos:start="75:13" pos:end="75:26"><expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:21">use_audio</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:25">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <comment type="block" pos:start="79:9" pos:end="79:28">/* manual disable */</comment>

        <if_stmt pos:start="81:9" pos:end="85:9"><if pos:start="81:9" pos:end="85:9">if <condition pos:start="81:12" pos:end="81:26">(<expr pos:start="81:13" pos:end="81:25"><name pos:start="81:13" pos:end="81:25">audio_disable</name></expr>)</condition> <block pos:start="81:28" pos:end="85:9">{<block_content pos:start="83:13" pos:end="83:26">

            <expr_stmt pos:start="83:13" pos:end="83:26"><expr pos:start="83:13" pos:end="83:25"><name pos:start="83:13" pos:end="83:21">use_audio</name> <operator pos:start="83:23" pos:end="83:23">=</operator> <literal type="number" pos:start="83:25" pos:end="83:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="87:9" pos:end="91:9"><if pos:start="87:9" pos:end="91:9">if <condition pos:start="87:12" pos:end="87:26">(<expr pos:start="87:13" pos:end="87:25"><name pos:start="87:13" pos:end="87:25">video_disable</name></expr>)</condition> <block pos:start="87:28" pos:end="91:9">{<block_content pos:start="89:13" pos:end="89:26">

            <expr_stmt pos:start="89:13" pos:end="89:26"><expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21">use_video</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        

        <expr_stmt pos:start="95:9" pos:end="95:23"><expr pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:18">nb_streams</name> <operator pos:start="95:20" pos:end="95:20">=</operator> <literal type="number" pos:start="95:22" pos:end="95:22">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="97:9" pos:end="173:9"><if pos:start="97:9" pos:end="173:9">if <condition pos:start="97:12" pos:end="97:22">(<expr pos:start="97:13" pos:end="97:21"><name pos:start="97:13" pos:end="97:21">use_video</name></expr>)</condition> <block pos:start="97:24" pos:end="173:9">{<block_content pos:start="99:13" pos:end="171:25">

            <decl_stmt pos:start="99:13" pos:end="99:38"><decl pos:start="99:13" pos:end="99:37"><type pos:start="99:13" pos:end="99:28"><name pos:start="99:13" pos:end="99:26">AVCodecContext</name> <modifier pos:start="99:28" pos:end="99:28">*</modifier></type><name pos:start="99:29" pos:end="99:37">video_enc</name></decl>;</decl_stmt>

            

            <expr_stmt pos:start="103:13" pos:end="103:46"><expr pos:start="103:13" pos:end="103:45"><name pos:start="103:13" pos:end="103:14">st</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:45"><name pos:start="103:18" pos:end="103:27">av_mallocz</name><argument_list pos:start="103:28" pos:end="103:45">(<argument pos:start="103:29" pos:end="103:44"><expr pos:start="103:29" pos:end="103:44"><sizeof pos:start="103:29" pos:end="103:44">sizeof<argument_list pos:start="103:35" pos:end="103:44">(<argument pos:start="103:36" pos:end="103:43"><expr pos:start="103:36" pos:end="103:43"><name pos:start="103:36" pos:end="103:43">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="105:13" pos:end="111:13"><if pos:start="105:13" pos:end="111:13">if <condition pos:start="105:16" pos:end="105:20">(<expr pos:start="105:17" pos:end="105:19"><operator pos:start="105:17" pos:end="105:17">!</operator><name pos:start="105:18" pos:end="105:19">st</name></expr>)</condition> <block pos:start="105:22" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:24">

                <expr_stmt pos:start="107:17" pos:end="107:60"><expr pos:start="107:17" pos:end="107:59"><call pos:start="107:17" pos:end="107:59"><name pos:start="107:17" pos:end="107:23">fprintf</name><argument_list pos:start="107:24" pos:end="107:59">(<argument pos:start="107:25" pos:end="107:30"><expr pos:start="107:25" pos:end="107:30"><name pos:start="107:25" pos:end="107:30">stderr</name></expr></argument>, <argument pos:start="107:33" pos:end="107:58"><expr pos:start="107:33" pos:end="107:58"><literal type="string" pos:start="107:33" pos:end="107:58">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:24"><expr pos:start="109:17" pos:end="109:23"><call pos:start="109:17" pos:end="109:23"><name pos:start="109:17" pos:end="109:20">exit</name><argument_list pos:start="109:21" pos:end="109:23">(<argument pos:start="109:22" pos:end="109:22"><expr pos:start="109:22" pos:end="109:22"><literal type="number" pos:start="109:22" pos:end="109:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:35"><expr pos:start="113:13" pos:end="113:34"><name pos:start="113:13" pos:end="113:21">video_enc</name> <operator pos:start="113:23" pos:end="113:23">=</operator> <operator pos:start="113:25" pos:end="113:25">&amp;</operator><name pos:start="113:26" pos:end="113:34"><name pos:start="113:26" pos:end="113:27">st</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:34">codec</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="117:13" pos:end="117:48"><expr pos:start="117:13" pos:end="117:47"><name pos:start="117:13" pos:end="117:20">codec_id</name> <operator pos:start="117:22" pos:end="117:22">=</operator> <name pos:start="117:24" pos:end="117:47"><name pos:start="117:24" pos:end="117:34">file_format</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:47">video_codec</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="119:13" pos:end="121:42"><if pos:start="119:13" pos:end="121:42">if <condition pos:start="119:16" pos:end="119:48">(<expr pos:start="119:17" pos:end="119:47"><name pos:start="119:17" pos:end="119:30">video_codec_id</name> <operator pos:start="119:32" pos:end="119:33">!=</operator> <name pos:start="119:35" pos:end="119:47">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="121:17" pos:end="121:42"><block_content pos:start="121:17" pos:end="121:42">

                <expr_stmt pos:start="121:17" pos:end="121:42"><expr pos:start="121:17" pos:end="121:41"><name pos:start="121:17" pos:end="121:24">codec_id</name> <operator pos:start="121:26" pos:end="121:26">=</operator> <name pos:start="121:28" pos:end="121:41">video_codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:43"><expr pos:start="125:13" pos:end="125:42"><name pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:21">video_enc</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:31">codec_id</name></name> <operator pos:start="125:33" pos:end="125:33">=</operator> <name pos:start="125:35" pos:end="125:42">codec_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:53"><expr pos:start="127:13" pos:end="127:52"><name pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:21">video_enc</name><operator pos:start="127:22" pos:end="127:23">-&gt;</operator><name pos:start="127:24" pos:end="127:33">codec_type</name></name> <operator pos:start="127:35" pos:end="127:35">=</operator> <name pos:start="127:37" pos:end="127:52">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

            

            <expr_stmt pos:start="131:13" pos:end="131:49"><expr pos:start="131:13" pos:end="131:48"><name pos:start="131:13" pos:end="131:31"><name pos:start="131:13" pos:end="131:21">video_enc</name><operator pos:start="131:22" pos:end="131:23">-&gt;</operator><name pos:start="131:24" pos:end="131:31">bit_rate</name></name> <operator pos:start="131:33" pos:end="131:33">=</operator> <name pos:start="131:35" pos:end="131:48">video_bit_rate</name></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:47"><expr pos:start="133:13" pos:end="133:46"><name pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:21">video_enc</name><operator pos:start="133:22" pos:end="133:23">-&gt;</operator><name pos:start="133:24" pos:end="133:33">frame_rate</name></name> <operator pos:start="133:35" pos:end="133:35">=</operator> <name pos:start="133:37" pos:end="133:46">frame_rate</name></expr>;</expr_stmt> 

            

            <expr_stmt pos:start="137:13" pos:end="137:43"><expr pos:start="137:13" pos:end="137:42"><name pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:21">video_enc</name><operator pos:start="137:22" pos:end="137:23">-&gt;</operator><name pos:start="137:24" pos:end="137:28">width</name></name> <operator pos:start="137:30" pos:end="137:30">=</operator> <name pos:start="137:32" pos:end="137:42">frame_width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:45"><expr pos:start="139:13" pos:end="139:44"><name pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:21">video_enc</name><operator pos:start="139:22" pos:end="139:23">-&gt;</operator><name pos:start="139:24" pos:end="139:29">height</name></name> <operator pos:start="139:31" pos:end="139:31">=</operator> <name pos:start="139:33" pos:end="139:44">frame_height</name></expr>;</expr_stmt>

            <if_stmt pos:start="141:13" pos:end="147:40"><if pos:start="141:13" pos:end="143:47">if <condition pos:start="141:16" pos:end="141:28">(<expr pos:start="141:17" pos:end="141:27"><operator pos:start="141:17" pos:end="141:17">!</operator><name pos:start="141:18" pos:end="141:27">intra_only</name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="143:47"><block_content pos:start="143:17" pos:end="143:47">

                <expr_stmt pos:start="143:17" pos:end="143:47"><expr pos:start="143:17" pos:end="143:46"><name pos:start="143:17" pos:end="143:35"><name pos:start="143:17" pos:end="143:25">video_enc</name><operator pos:start="143:26" pos:end="143:27">-&gt;</operator><name pos:start="143:28" pos:end="143:35">gop_size</name></name> <operator pos:start="143:37" pos:end="143:37">=</operator> <name pos:start="143:39" pos:end="143:46">gop_size</name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="145:13" pos:end="147:40">else<block type="pseudo" pos:start="147:17" pos:end="147:40"><block_content pos:start="147:17" pos:end="147:40">

                <expr_stmt pos:start="147:17" pos:end="147:40"><expr pos:start="147:17" pos:end="147:39"><name pos:start="147:17" pos:end="147:35"><name pos:start="147:17" pos:end="147:25">video_enc</name><operator pos:start="147:26" pos:end="147:27">-&gt;</operator><name pos:start="147:28" pos:end="147:35">gop_size</name></name> <operator pos:start="147:37" pos:end="147:37">=</operator> <literal type="number" pos:start="147:39" pos:end="147:39">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <if_stmt pos:start="149:13" pos:end="155:13"><if pos:start="149:13" pos:end="155:13">if <condition pos:start="149:16" pos:end="149:45">(<expr pos:start="149:17" pos:end="149:44"><name pos:start="149:17" pos:end="149:28">video_qscale</name> <operator pos:start="149:30" pos:end="149:31">||</operator> <name pos:start="149:33" pos:end="149:44">same_quality</name></expr>)</condition> <block pos:start="149:47" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:50">

                <expr_stmt pos:start="151:17" pos:end="151:54"><expr pos:start="151:17" pos:end="151:53"><name pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:25">video_enc</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:32">flags</name></name> <operator pos:start="151:34" pos:end="151:35">|=</operator> <name pos:start="151:37" pos:end="151:53">CODEC_FLAG_QSCALE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:50"><expr pos:start="153:17" pos:end="153:49"><name pos:start="153:17" pos:end="153:34"><name pos:start="153:17" pos:end="153:25">video_enc</name><operator pos:start="153:26" pos:end="153:27">-&gt;</operator><name pos:start="153:28" pos:end="153:34">quality</name></name> <operator pos:start="153:36" pos:end="153:36">=</operator> <name pos:start="153:38" pos:end="153:49">video_qscale</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="157:13" pos:end="157:65">/* XXX: need to find a way to set codec parameters */</comment>

            <if_stmt pos:start="159:13" pos:end="165:13"><if pos:start="159:13" pos:end="165:13">if <condition pos:start="159:16" pos:end="161:46">(<expr pos:start="159:17" pos:end="161:45"><name pos:start="159:17" pos:end="159:26"><name pos:start="159:17" pos:end="159:18">oc</name><operator pos:start="159:19" pos:end="159:20">-&gt;</operator><name pos:start="159:21" pos:end="159:26">format</name></name> <operator pos:start="159:28" pos:end="159:29">==</operator> <operator pos:start="159:31" pos:end="159:31">&amp;</operator><name pos:start="159:32" pos:end="159:41">ppm_format</name> <operator pos:start="159:43" pos:end="159:44">||</operator>

                <name pos:start="161:17" pos:end="161:26"><name pos:start="161:17" pos:end="161:18">oc</name><operator pos:start="161:19" pos:end="161:20">-&gt;</operator><name pos:start="161:21" pos:end="161:26">format</name></name> <operator pos:start="161:28" pos:end="161:29">==</operator> <operator pos:start="161:31" pos:end="161:31">&amp;</operator><name pos:start="161:32" pos:end="161:45">ppmpipe_format</name></expr>)</condition> <block pos:start="161:48" pos:end="165:13">{<block_content pos:start="163:17" pos:end="163:51">

                <expr_stmt pos:start="163:17" pos:end="163:51"><expr pos:start="163:17" pos:end="163:50"><name pos:start="163:17" pos:end="163:34"><name pos:start="163:17" pos:end="163:25">video_enc</name><operator pos:start="163:26" pos:end="163:27">-&gt;</operator><name pos:start="163:28" pos:end="163:34">pix_fmt</name></name> <operator pos:start="163:36" pos:end="163:36">=</operator> <name pos:start="163:38" pos:end="163:50">PIX_FMT_RGB24</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="169:13" pos:end="169:41"><expr pos:start="169:13" pos:end="169:40"><name pos:start="169:13" pos:end="169:35"><name pos:start="169:13" pos:end="169:14">oc</name><operator pos:start="169:15" pos:end="169:16">-&gt;</operator><name pos:start="169:17" pos:end="169:23">streams</name><index pos:start="169:24" pos:end="169:35">[<expr pos:start="169:25" pos:end="169:34"><name pos:start="169:25" pos:end="169:34">nb_streams</name></expr>]</index></name> <operator pos:start="169:37" pos:end="169:37">=</operator> <name pos:start="169:39" pos:end="169:40">st</name></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:25"><expr pos:start="171:13" pos:end="171:24"><name pos:start="171:13" pos:end="171:22">nb_streams</name><operator pos:start="171:23" pos:end="171:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    

        <if_stmt pos:start="177:9" pos:end="217:9"><if pos:start="177:9" pos:end="217:9">if <condition pos:start="177:12" pos:end="177:22">(<expr pos:start="177:13" pos:end="177:21"><name pos:start="177:13" pos:end="177:21">use_audio</name></expr>)</condition> <block pos:start="177:24" pos:end="217:9">{<block_content pos:start="179:13" pos:end="215:25">

            <decl_stmt pos:start="179:13" pos:end="179:38"><decl pos:start="179:13" pos:end="179:37"><type pos:start="179:13" pos:end="179:28"><name pos:start="179:13" pos:end="179:26">AVCodecContext</name> <modifier pos:start="179:28" pos:end="179:28">*</modifier></type><name pos:start="179:29" pos:end="179:37">audio_enc</name></decl>;</decl_stmt>



            <expr_stmt pos:start="183:13" pos:end="183:46"><expr pos:start="183:13" pos:end="183:45"><name pos:start="183:13" pos:end="183:14">st</name> <operator pos:start="183:16" pos:end="183:16">=</operator> <call pos:start="183:18" pos:end="183:45"><name pos:start="183:18" pos:end="183:27">av_mallocz</name><argument_list pos:start="183:28" pos:end="183:45">(<argument pos:start="183:29" pos:end="183:44"><expr pos:start="183:29" pos:end="183:44"><sizeof pos:start="183:29" pos:end="183:44">sizeof<argument_list pos:start="183:35" pos:end="183:44">(<argument pos:start="183:36" pos:end="183:43"><expr pos:start="183:36" pos:end="183:43"><name pos:start="183:36" pos:end="183:43">AVStream</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="185:13" pos:end="191:13"><if pos:start="185:13" pos:end="191:13">if <condition pos:start="185:16" pos:end="185:20">(<expr pos:start="185:17" pos:end="185:19"><operator pos:start="185:17" pos:end="185:17">!</operator><name pos:start="185:18" pos:end="185:19">st</name></expr>)</condition> <block pos:start="185:22" pos:end="191:13">{<block_content pos:start="187:17" pos:end="189:24">

                <expr_stmt pos:start="187:17" pos:end="187:60"><expr pos:start="187:17" pos:end="187:59"><call pos:start="187:17" pos:end="187:59"><name pos:start="187:17" pos:end="187:23">fprintf</name><argument_list pos:start="187:24" pos:end="187:59">(<argument pos:start="187:25" pos:end="187:30"><expr pos:start="187:25" pos:end="187:30"><name pos:start="187:25" pos:end="187:30">stderr</name></expr></argument>, <argument pos:start="187:33" pos:end="187:58"><expr pos:start="187:33" pos:end="187:58"><literal type="string" pos:start="187:33" pos:end="187:58">"Could not alloc stream\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:24"><expr pos:start="189:17" pos:end="189:23"><call pos:start="189:17" pos:end="189:23"><name pos:start="189:17" pos:end="189:20">exit</name><argument_list pos:start="189:21" pos:end="189:23">(<argument pos:start="189:22" pos:end="189:22"><expr pos:start="189:22" pos:end="189:22"><literal type="number" pos:start="189:22" pos:end="189:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:35"><expr pos:start="193:13" pos:end="193:34"><name pos:start="193:13" pos:end="193:21">audio_enc</name> <operator pos:start="193:23" pos:end="193:23">=</operator> <operator pos:start="193:25" pos:end="193:25">&amp;</operator><name pos:start="193:26" pos:end="193:34"><name pos:start="193:26" pos:end="193:27">st</name><operator pos:start="193:28" pos:end="193:29">-&gt;</operator><name pos:start="193:30" pos:end="193:34">codec</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:48"><expr pos:start="195:13" pos:end="195:47"><name pos:start="195:13" pos:end="195:20">codec_id</name> <operator pos:start="195:22" pos:end="195:22">=</operator> <name pos:start="195:24" pos:end="195:47"><name pos:start="195:24" pos:end="195:34">file_format</name><operator pos:start="195:35" pos:end="195:36">-&gt;</operator><name pos:start="195:37" pos:end="195:47">audio_codec</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="197:13" pos:end="199:42"><if pos:start="197:13" pos:end="199:42">if <condition pos:start="197:16" pos:end="197:48">(<expr pos:start="197:17" pos:end="197:47"><name pos:start="197:17" pos:end="197:30">audio_codec_id</name> <operator pos:start="197:32" pos:end="197:33">!=</operator> <name pos:start="197:35" pos:end="197:47">CODEC_ID_NONE</name></expr>)</condition><block type="pseudo" pos:start="199:17" pos:end="199:42"><block_content pos:start="199:17" pos:end="199:42">

                <expr_stmt pos:start="199:17" pos:end="199:42"><expr pos:start="199:17" pos:end="199:41"><name pos:start="199:17" pos:end="199:24">codec_id</name> <operator pos:start="199:26" pos:end="199:26">=</operator> <name pos:start="199:28" pos:end="199:41">audio_codec_id</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="201:13" pos:end="201:43"><expr pos:start="201:13" pos:end="201:42"><name pos:start="201:13" pos:end="201:31"><name pos:start="201:13" pos:end="201:21">audio_enc</name><operator pos:start="201:22" pos:end="201:23">-&gt;</operator><name pos:start="201:24" pos:end="201:31">codec_id</name></name> <operator pos:start="201:33" pos:end="201:33">=</operator> <name pos:start="201:35" pos:end="201:42">codec_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:53"><expr pos:start="203:13" pos:end="203:52"><name pos:start="203:13" pos:end="203:33"><name pos:start="203:13" pos:end="203:21">audio_enc</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:33">codec_type</name></name> <operator pos:start="203:35" pos:end="203:35">=</operator> <name pos:start="203:37" pos:end="203:52">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

            

            <expr_stmt pos:start="207:13" pos:end="207:49"><expr pos:start="207:13" pos:end="207:48"><name pos:start="207:13" pos:end="207:31"><name pos:start="207:13" pos:end="207:21">audio_enc</name><operator pos:start="207:22" pos:end="207:23">-&gt;</operator><name pos:start="207:24" pos:end="207:31">bit_rate</name></name> <operator pos:start="207:33" pos:end="207:33">=</operator> <name pos:start="207:35" pos:end="207:48">audio_bit_rate</name></expr>;</expr_stmt>

            <expr_stmt pos:start="209:13" pos:end="209:55"><expr pos:start="209:13" pos:end="209:54"><name pos:start="209:13" pos:end="209:34"><name pos:start="209:13" pos:end="209:21">audio_enc</name><operator pos:start="209:22" pos:end="209:23">-&gt;</operator><name pos:start="209:24" pos:end="209:34">sample_rate</name></name> <operator pos:start="209:36" pos:end="209:36">=</operator> <name pos:start="209:38" pos:end="209:54">audio_sample_rate</name></expr>;</expr_stmt>

            <expr_stmt pos:start="211:13" pos:end="211:49"><expr pos:start="211:13" pos:end="211:48"><name pos:start="211:13" pos:end="211:31"><name pos:start="211:13" pos:end="211:21">audio_enc</name><operator pos:start="211:22" pos:end="211:23">-&gt;</operator><name pos:start="211:24" pos:end="211:31">channels</name></name> <operator pos:start="211:33" pos:end="211:33">=</operator> <name pos:start="211:35" pos:end="211:48">audio_channels</name></expr>;</expr_stmt>

            <expr_stmt pos:start="213:13" pos:end="213:41"><expr pos:start="213:13" pos:end="213:40"><name pos:start="213:13" pos:end="213:35"><name pos:start="213:13" pos:end="213:14">oc</name><operator pos:start="213:15" pos:end="213:16">-&gt;</operator><name pos:start="213:17" pos:end="213:23">streams</name><index pos:start="213:24" pos:end="213:35">[<expr pos:start="213:25" pos:end="213:34"><name pos:start="213:25" pos:end="213:34">nb_streams</name></expr>]</index></name> <operator pos:start="213:37" pos:end="213:37">=</operator> <name pos:start="213:39" pos:end="213:40">st</name></expr>;</expr_stmt>

            <expr_stmt pos:start="215:13" pos:end="215:25"><expr pos:start="215:13" pos:end="215:24"><name pos:start="215:13" pos:end="215:22">nb_streams</name><operator pos:start="215:23" pos:end="215:24">++</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="221:9" pos:end="221:36"><expr pos:start="221:9" pos:end="221:35"><name pos:start="221:9" pos:end="221:22"><name pos:start="221:9" pos:end="221:10">oc</name><operator pos:start="221:11" pos:end="221:12">-&gt;</operator><name pos:start="221:13" pos:end="221:22">nb_streams</name></name> <operator pos:start="221:24" pos:end="221:24">=</operator> <name pos:start="221:26" pos:end="221:35">nb_streams</name></expr>;</expr_stmt>



        <if_stmt pos:start="225:9" pos:end="231:9"><if pos:start="225:9" pos:end="231:9">if <condition pos:start="225:12" pos:end="225:24">(<expr pos:start="225:13" pos:end="225:23"><operator pos:start="225:13" pos:end="225:13">!</operator><name pos:start="225:14" pos:end="225:23">nb_streams</name></expr>)</condition> <block pos:start="225:26" pos:end="231:9">{<block_content pos:start="227:13" pos:end="229:20">

            <expr_stmt pos:start="227:13" pos:end="227:69"><expr pos:start="227:13" pos:end="227:68"><call pos:start="227:13" pos:end="227:68"><name pos:start="227:13" pos:end="227:19">fprintf</name><argument_list pos:start="227:20" pos:end="227:68">(<argument pos:start="227:21" pos:end="227:26"><expr pos:start="227:21" pos:end="227:26"><name pos:start="227:21" pos:end="227:26">stderr</name></expr></argument>, <argument pos:start="227:29" pos:end="227:67"><expr pos:start="227:29" pos:end="227:67"><literal type="string" pos:start="227:29" pos:end="227:67">"No audio or video streams available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:20"><expr pos:start="229:13" pos:end="229:19"><call pos:start="229:13" pos:end="229:19"><name pos:start="229:13" pos:end="229:16">exit</name><argument_list pos:start="229:17" pos:end="229:19">(<argument pos:start="229:18" pos:end="229:18"><expr pos:start="229:18" pos:end="229:18"><literal type="number" pos:start="229:18" pos:end="229:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="235:9" pos:end="237:61"><if pos:start="235:9" pos:end="237:61">if <condition pos:start="235:12" pos:end="235:22">(<expr pos:start="235:13" pos:end="235:21"><name pos:start="235:13" pos:end="235:21">str_title</name></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:61"><block_content pos:start="237:13" pos:end="237:61">

            <expr_stmt pos:start="237:13" pos:end="237:61"><expr pos:start="237:13" pos:end="237:60"><call pos:start="237:13" pos:end="237:60"><name pos:start="237:13" pos:end="237:19">nstrcpy</name><argument_list pos:start="237:20" pos:end="237:60">(<argument pos:start="237:21" pos:end="237:29"><expr pos:start="237:21" pos:end="237:29"><name pos:start="237:21" pos:end="237:29"><name pos:start="237:21" pos:end="237:22">oc</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:29">title</name></name></expr></argument>, <argument pos:start="237:32" pos:end="237:48"><expr pos:start="237:32" pos:end="237:48"><sizeof pos:start="237:32" pos:end="237:48">sizeof<argument_list pos:start="237:38" pos:end="237:48">(<argument pos:start="237:39" pos:end="237:47"><expr pos:start="237:39" pos:end="237:47"><name pos:start="237:39" pos:end="237:47"><name pos:start="237:39" pos:end="237:40">oc</name><operator pos:start="237:41" pos:end="237:42">-&gt;</operator><name pos:start="237:43" pos:end="237:47">title</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="237:51" pos:end="237:59"><expr pos:start="237:51" pos:end="237:59"><name pos:start="237:51" pos:end="237:59">str_title</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="239:9" pos:end="241:64"><if pos:start="239:9" pos:end="241:64">if <condition pos:start="239:12" pos:end="239:23">(<expr pos:start="239:13" pos:end="239:22"><name pos:start="239:13" pos:end="239:22">str_author</name></expr>)</condition><block type="pseudo" pos:start="241:13" pos:end="241:64"><block_content pos:start="241:13" pos:end="241:64">

            <expr_stmt pos:start="241:13" pos:end="241:64"><expr pos:start="241:13" pos:end="241:63"><call pos:start="241:13" pos:end="241:63"><name pos:start="241:13" pos:end="241:19">nstrcpy</name><argument_list pos:start="241:20" pos:end="241:63">(<argument pos:start="241:21" pos:end="241:30"><expr pos:start="241:21" pos:end="241:30"><name pos:start="241:21" pos:end="241:30"><name pos:start="241:21" pos:end="241:22">oc</name><operator pos:start="241:23" pos:end="241:24">-&gt;</operator><name pos:start="241:25" pos:end="241:30">author</name></name></expr></argument>, <argument pos:start="241:33" pos:end="241:50"><expr pos:start="241:33" pos:end="241:50"><sizeof pos:start="241:33" pos:end="241:50">sizeof<argument_list pos:start="241:39" pos:end="241:50">(<argument pos:start="241:40" pos:end="241:49"><expr pos:start="241:40" pos:end="241:49"><name pos:start="241:40" pos:end="241:49"><name pos:start="241:40" pos:end="241:41">oc</name><operator pos:start="241:42" pos:end="241:43">-&gt;</operator><name pos:start="241:44" pos:end="241:49">author</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="241:53" pos:end="241:62"><expr pos:start="241:53" pos:end="241:62"><name pos:start="241:53" pos:end="241:62">str_author</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="243:9" pos:end="245:73"><if pos:start="243:9" pos:end="245:73">if <condition pos:start="243:12" pos:end="243:26">(<expr pos:start="243:13" pos:end="243:25"><name pos:start="243:13" pos:end="243:25">str_copyright</name></expr>)</condition><block type="pseudo" pos:start="245:13" pos:end="245:73"><block_content pos:start="245:13" pos:end="245:73">

            <expr_stmt pos:start="245:13" pos:end="245:73"><expr pos:start="245:13" pos:end="245:72"><call pos:start="245:13" pos:end="245:72"><name pos:start="245:13" pos:end="245:19">nstrcpy</name><argument_list pos:start="245:20" pos:end="245:72">(<argument pos:start="245:21" pos:end="245:33"><expr pos:start="245:21" pos:end="245:33"><name pos:start="245:21" pos:end="245:33"><name pos:start="245:21" pos:end="245:22">oc</name><operator pos:start="245:23" pos:end="245:24">-&gt;</operator><name pos:start="245:25" pos:end="245:33">copyright</name></name></expr></argument>, <argument pos:start="245:36" pos:end="245:56"><expr pos:start="245:36" pos:end="245:56"><sizeof pos:start="245:36" pos:end="245:56">sizeof<argument_list pos:start="245:42" pos:end="245:56">(<argument pos:start="245:43" pos:end="245:55"><expr pos:start="245:43" pos:end="245:55"><name pos:start="245:43" pos:end="245:55"><name pos:start="245:43" pos:end="245:44">oc</name><operator pos:start="245:45" pos:end="245:46">-&gt;</operator><name pos:start="245:47" pos:end="245:55">copyright</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="245:59" pos:end="245:71"><expr pos:start="245:59" pos:end="245:71"><name pos:start="245:59" pos:end="245:71">str_copyright</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="247:9" pos:end="249:67"><if pos:start="247:9" pos:end="249:67">if <condition pos:start="247:12" pos:end="247:24">(<expr pos:start="247:13" pos:end="247:23"><name pos:start="247:13" pos:end="247:23">str_comment</name></expr>)</condition><block type="pseudo" pos:start="249:13" pos:end="249:67"><block_content pos:start="249:13" pos:end="249:67">

            <expr_stmt pos:start="249:13" pos:end="249:67"><expr pos:start="249:13" pos:end="249:66"><call pos:start="249:13" pos:end="249:66"><name pos:start="249:13" pos:end="249:19">nstrcpy</name><argument_list pos:start="249:20" pos:end="249:66">(<argument pos:start="249:21" pos:end="249:31"><expr pos:start="249:21" pos:end="249:31"><name pos:start="249:21" pos:end="249:31"><name pos:start="249:21" pos:end="249:22">oc</name><operator pos:start="249:23" pos:end="249:24">-&gt;</operator><name pos:start="249:25" pos:end="249:31">comment</name></name></expr></argument>, <argument pos:start="249:34" pos:end="249:52"><expr pos:start="249:34" pos:end="249:52"><sizeof pos:start="249:34" pos:end="249:52">sizeof<argument_list pos:start="249:40" pos:end="249:52">(<argument pos:start="249:41" pos:end="249:51"><expr pos:start="249:41" pos:end="249:51"><name pos:start="249:41" pos:end="249:51"><name pos:start="249:41" pos:end="249:42">oc</name><operator pos:start="249:43" pos:end="249:44">-&gt;</operator><name pos:start="249:45" pos:end="249:51">comment</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="249:55" pos:end="249:65"><expr pos:start="249:55" pos:end="249:65"><name pos:start="249:55" pos:end="249:65">str_comment</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="255:5" pos:end="255:39"><expr pos:start="255:5" pos:end="255:38"><name pos:start="255:5" pos:end="255:33"><name pos:start="255:5" pos:end="255:16">output_files</name><index pos:start="255:17" pos:end="255:33">[<expr pos:start="255:18" pos:end="255:32"><name pos:start="255:18" pos:end="255:32">nb_output_files</name></expr>]</index></name> <operator pos:start="255:35" pos:end="255:35">=</operator> <name pos:start="255:37" pos:end="255:38">oc</name></expr>;</expr_stmt>

    <comment type="block" pos:start="257:5" pos:end="257:31">/* dump the file content */</comment>

    <expr_stmt pos:start="259:5" pos:end="259:50"><expr pos:start="259:5" pos:end="259:49"><call pos:start="259:5" pos:end="259:49"><name pos:start="259:5" pos:end="259:15">dump_format</name><argument_list pos:start="259:16" pos:end="259:49">(<argument pos:start="259:17" pos:end="259:18"><expr pos:start="259:17" pos:end="259:18"><name pos:start="259:17" pos:end="259:18">oc</name></expr></argument>, <argument pos:start="259:21" pos:end="259:35"><expr pos:start="259:21" pos:end="259:35"><name pos:start="259:21" pos:end="259:35">nb_output_files</name></expr></argument>, <argument pos:start="259:38" pos:end="259:45"><expr pos:start="259:38" pos:end="259:45"><name pos:start="259:38" pos:end="259:45">filename</name></expr></argument>, <argument pos:start="259:48" pos:end="259:48"><expr pos:start="259:48" pos:end="259:48"><literal type="number" pos:start="259:48" pos:end="259:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:22"><expr pos:start="261:5" pos:end="261:21"><name pos:start="261:5" pos:end="261:19">nb_output_files</name><operator pos:start="261:20" pos:end="261:21">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="265:5" pos:end="265:35"><expr pos:start="265:5" pos:end="265:34"><call pos:start="265:5" pos:end="265:34"><name pos:start="265:5" pos:end="265:10">strcpy</name><argument_list pos:start="265:11" pos:end="265:34">(<argument pos:start="265:12" pos:end="265:23"><expr pos:start="265:12" pos:end="265:23"><name pos:start="265:12" pos:end="265:23"><name pos:start="265:12" pos:end="265:13">oc</name><operator pos:start="265:14" pos:end="265:15">-&gt;</operator><name pos:start="265:16" pos:end="265:23">filename</name></name></expr></argument>, <argument pos:start="265:26" pos:end="265:33"><expr pos:start="265:26" pos:end="265:33"><name pos:start="265:26" pos:end="265:33">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="269:5" pos:end="269:63">/* check filename in case of an image number is expected */</comment>

    <if_stmt pos:start="271:5" pos:end="277:5"><if pos:start="271:5" pos:end="277:5">if <condition pos:start="271:8" pos:end="271:45">(<expr pos:start="271:9" pos:end="271:44"><name pos:start="271:9" pos:end="271:25"><name pos:start="271:9" pos:end="271:10">oc</name><operator pos:start="271:11" pos:end="271:12">-&gt;</operator><name pos:start="271:13" pos:end="271:18">format</name><operator pos:start="271:19" pos:end="271:20">-&gt;</operator><name pos:start="271:21" pos:end="271:25">flags</name></name> <operator pos:start="271:27" pos:end="271:27">&amp;</operator> <name pos:start="271:29" pos:end="271:44">AVFMT_NEEDNUMBER</name></expr>)</condition> <block pos:start="271:47" pos:end="277:5">{<block_content pos:start="273:9" pos:end="275:20">

        <if_stmt pos:start="273:9" pos:end="275:20"><if pos:start="273:9" pos:end="275:20">if <condition pos:start="273:12" pos:end="273:51">(<expr pos:start="273:13" pos:end="273:50"><call pos:start="273:13" pos:end="273:46"><name pos:start="273:13" pos:end="273:32">filename_number_test</name><argument_list pos:start="273:33" pos:end="273:46">(<argument pos:start="273:34" pos:end="273:45"><expr pos:start="273:34" pos:end="273:45"><name pos:start="273:34" pos:end="273:45"><name pos:start="273:34" pos:end="273:35">oc</name><operator pos:start="273:36" pos:end="273:37">-&gt;</operator><name pos:start="273:38" pos:end="273:45">filename</name></name></expr></argument>)</argument_list></call> <operator pos:start="273:48" pos:end="273:48">&lt;</operator> <literal type="number" pos:start="273:50" pos:end="273:50">0</literal></expr>)</condition><block type="pseudo" pos:start="275:13" pos:end="275:20"><block_content pos:start="275:13" pos:end="275:20">

            <expr_stmt pos:start="275:13" pos:end="275:20"><expr pos:start="275:13" pos:end="275:19"><call pos:start="275:13" pos:end="275:19"><name pos:start="275:13" pos:end="275:16">exit</name><argument_list pos:start="275:17" pos:end="275:19">(<argument pos:start="275:18" pos:end="275:18"><expr pos:start="275:18" pos:end="275:18"><literal type="number" pos:start="275:18" pos:end="275:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="281:5" pos:end="327:5"><if pos:start="281:5" pos:end="327:5">if <condition pos:start="281:8" pos:end="281:44">(<expr pos:start="281:9" pos:end="281:43"><operator pos:start="281:9" pos:end="281:9">!</operator><operator pos:start="281:10" pos:end="281:10">(</operator><name pos:start="281:11" pos:end="281:27"><name pos:start="281:11" pos:end="281:12">oc</name><operator pos:start="281:13" pos:end="281:14">-&gt;</operator><name pos:start="281:15" pos:end="281:20">format</name><operator pos:start="281:21" pos:end="281:22">-&gt;</operator><name pos:start="281:23" pos:end="281:27">flags</name></name> <operator pos:start="281:29" pos:end="281:29">&amp;</operator> <name pos:start="281:31" pos:end="281:42">AVFMT_NOFILE</name><operator pos:start="281:43" pos:end="281:43">)</operator></expr>)</condition> <block pos:start="281:46" pos:end="327:5">{<block_content pos:start="285:9" pos:end="325:9">

        <comment type="block" pos:start="283:9" pos:end="283:71">/* test if it already exists to avoid loosing precious files */</comment>

        <if_stmt pos:start="285:9" pos:end="313:9"><if pos:start="285:9" pos:end="313:9">if <condition pos:start="285:12" pos:end="289:48">(<expr pos:start="285:13" pos:end="289:47"><operator pos:start="285:13" pos:end="285:13">!</operator><name pos:start="285:14" pos:end="285:27">file_overwrite</name> <operator pos:start="285:29" pos:end="285:30">&amp;&amp;</operator> 

            <operator pos:start="287:13" pos:end="287:13">(</operator><call pos:start="287:14" pos:end="287:34"><name pos:start="287:14" pos:end="287:19">strchr</name><argument_list pos:start="287:20" pos:end="287:34">(<argument pos:start="287:21" pos:end="287:28"><expr pos:start="287:21" pos:end="287:28"><name pos:start="287:21" pos:end="287:28">filename</name></expr></argument>, <argument pos:start="287:31" pos:end="287:33"><expr pos:start="287:31" pos:end="287:33"><literal type="char" pos:start="287:31" pos:end="287:33">':'</literal></expr></argument>)</argument_list></call> <operator pos:start="287:36" pos:end="287:37">==</operator> <name pos:start="287:39" pos:end="287:42">NULL</name> <operator pos:start="287:44" pos:end="287:45">||</operator>

             <call pos:start="289:14" pos:end="289:46"><name pos:start="289:14" pos:end="289:21">strstart</name><argument_list pos:start="289:22" pos:end="289:46">(<argument pos:start="289:23" pos:end="289:30"><expr pos:start="289:23" pos:end="289:30"><name pos:start="289:23" pos:end="289:30">filename</name></expr></argument>, <argument pos:start="289:33" pos:end="289:39"><expr pos:start="289:33" pos:end="289:39"><literal type="string" pos:start="289:33" pos:end="289:39">"file:"</literal></expr></argument>, <argument pos:start="289:42" pos:end="289:45"><expr pos:start="289:42" pos:end="289:45"><name pos:start="289:42" pos:end="289:45">NULL</name></expr></argument>)</argument_list></call><operator pos:start="289:47" pos:end="289:47">)</operator></expr>)</condition> <block pos:start="289:50" pos:end="313:9">{<block_content pos:start="291:13" pos:end="311:13">

            <if_stmt pos:start="291:13" pos:end="311:13"><if pos:start="291:13" pos:end="311:13">if <condition pos:start="291:16" pos:end="291:36">(<expr pos:start="291:17" pos:end="291:35"><call pos:start="291:17" pos:end="291:35"><name pos:start="291:17" pos:end="291:25">url_exist</name><argument_list pos:start="291:26" pos:end="291:35">(<argument pos:start="291:27" pos:end="291:34"><expr pos:start="291:27" pos:end="291:34"><name pos:start="291:27" pos:end="291:34">filename</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="291:38" pos:end="311:13">{<block_content pos:start="293:17" pos:end="309:17">

                <decl_stmt pos:start="293:17" pos:end="293:22"><decl pos:start="293:17" pos:end="293:21"><type pos:start="293:17" pos:end="293:19"><name pos:start="293:17" pos:end="293:19">int</name></type> <name pos:start="293:21" pos:end="293:21">c</name></decl>;</decl_stmt>

                

                <expr_stmt pos:start="297:17" pos:end="297:81"><expr pos:start="297:17" pos:end="297:80"><call pos:start="297:17" pos:end="297:80"><name pos:start="297:17" pos:end="297:22">printf</name><argument_list pos:start="297:23" pos:end="297:80">(<argument pos:start="297:24" pos:end="297:69"><expr pos:start="297:24" pos:end="297:69"><literal type="string" pos:start="297:24" pos:end="297:69">"File '%s' already exists. Overwrite ? [y/N] "</literal></expr></argument>, <argument pos:start="297:72" pos:end="297:79"><expr pos:start="297:72" pos:end="297:79"><name pos:start="297:72" pos:end="297:79">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="299:17" pos:end="299:31"><expr pos:start="299:17" pos:end="299:30"><call pos:start="299:17" pos:end="299:30"><name pos:start="299:17" pos:end="299:22">fflush</name><argument_list pos:start="299:23" pos:end="299:30">(<argument pos:start="299:24" pos:end="299:29"><expr pos:start="299:24" pos:end="299:29"><name pos:start="299:24" pos:end="299:29">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:30"><expr pos:start="301:17" pos:end="301:29"><name pos:start="301:17" pos:end="301:17">c</name> <operator pos:start="301:19" pos:end="301:19">=</operator> <call pos:start="301:21" pos:end="301:29"><name pos:start="301:21" pos:end="301:27">getchar</name><argument_list pos:start="301:28" pos:end="301:29">()</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="303:17" pos:end="309:17"><if pos:start="303:17" pos:end="309:17">if <condition pos:start="303:20" pos:end="303:38">(<expr pos:start="303:21" pos:end="303:37"><call pos:start="303:21" pos:end="303:30"><name pos:start="303:21" pos:end="303:27">toupper</name><argument_list pos:start="303:28" pos:end="303:30">(<argument pos:start="303:29" pos:end="303:29"><expr pos:start="303:29" pos:end="303:29"><name pos:start="303:29" pos:end="303:29">c</name></expr></argument>)</argument_list></call> <operator pos:start="303:32" pos:end="303:33">!=</operator> <literal type="char" pos:start="303:35" pos:end="303:37">'Y'</literal></expr>)</condition> <block pos:start="303:40" pos:end="309:17">{<block_content pos:start="305:21" pos:end="307:28">

                    <expr_stmt pos:start="305:21" pos:end="305:67"><expr pos:start="305:21" pos:end="305:66"><call pos:start="305:21" pos:end="305:66"><name pos:start="305:21" pos:end="305:27">fprintf</name><argument_list pos:start="305:28" pos:end="305:66">(<argument pos:start="305:29" pos:end="305:34"><expr pos:start="305:29" pos:end="305:34"><name pos:start="305:29" pos:end="305:34">stderr</name></expr></argument>, <argument pos:start="305:37" pos:end="305:65"><expr pos:start="305:37" pos:end="305:65"><literal type="string" pos:start="305:37" pos:end="305:65">"Not overwriting - exiting\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="307:21" pos:end="307:28"><expr pos:start="307:21" pos:end="307:27"><call pos:start="307:21" pos:end="307:27"><name pos:start="307:21" pos:end="307:24">exit</name><argument_list pos:start="307:25" pos:end="307:27">(<argument pos:start="307:26" pos:end="307:26"><expr pos:start="307:26" pos:end="307:26"><literal type="number" pos:start="307:26" pos:end="307:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        

        <comment type="block" pos:start="317:9" pos:end="317:27">/* open the file */</comment>

        <if_stmt pos:start="319:9" pos:end="325:9"><if pos:start="319:9" pos:end="325:9">if <condition pos:start="319:12" pos:end="319:57">(<expr pos:start="319:13" pos:end="319:56"><call pos:start="319:13" pos:end="319:52"><name pos:start="319:13" pos:end="319:21">url_fopen</name><argument_list pos:start="319:22" pos:end="319:52">(<argument pos:start="319:23" pos:end="319:29"><expr pos:start="319:23" pos:end="319:29"><operator pos:start="319:23" pos:end="319:23">&amp;</operator><name pos:start="319:24" pos:end="319:29"><name pos:start="319:24" pos:end="319:25">oc</name><operator pos:start="319:26" pos:end="319:27">-&gt;</operator><name pos:start="319:28" pos:end="319:29">pb</name></name></expr></argument>, <argument pos:start="319:32" pos:end="319:39"><expr pos:start="319:32" pos:end="319:39"><name pos:start="319:32" pos:end="319:39">filename</name></expr></argument>, <argument pos:start="319:42" pos:end="319:51"><expr pos:start="319:42" pos:end="319:51"><name pos:start="319:42" pos:end="319:51">URL_WRONLY</name></expr></argument>)</argument_list></call> <operator pos:start="319:54" pos:end="319:54">&lt;</operator> <literal type="number" pos:start="319:56" pos:end="319:56">0</literal></expr>)</condition> <block pos:start="319:59" pos:end="325:9">{<block_content pos:start="321:13" pos:end="323:20">

            <expr_stmt pos:start="321:13" pos:end="321:63"><expr pos:start="321:13" pos:end="321:62"><call pos:start="321:13" pos:end="321:62"><name pos:start="321:13" pos:end="321:19">fprintf</name><argument_list pos:start="321:20" pos:end="321:62">(<argument pos:start="321:21" pos:end="321:26"><expr pos:start="321:21" pos:end="321:26"><name pos:start="321:21" pos:end="321:26">stderr</name></expr></argument>, <argument pos:start="321:29" pos:end="321:51"><expr pos:start="321:29" pos:end="321:51"><literal type="string" pos:start="321:29" pos:end="321:51">"Could not open '%s'\n"</literal></expr></argument>, <argument pos:start="321:54" pos:end="321:61"><expr pos:start="321:54" pos:end="321:61"><name pos:start="321:54" pos:end="321:61">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="323:13" pos:end="323:20"><expr pos:start="323:13" pos:end="323:19"><call pos:start="323:13" pos:end="323:19"><name pos:start="323:13" pos:end="323:16">exit</name><argument_list pos:start="323:17" pos:end="323:19">(<argument pos:start="323:18" pos:end="323:18"><expr pos:start="323:18" pos:end="323:18"><literal type="number" pos:start="323:18" pos:end="323:18">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="331:5" pos:end="331:28">/* reset some options */</comment>

    <expr_stmt pos:start="333:5" pos:end="333:23"><expr pos:start="333:5" pos:end="333:22"><name pos:start="333:5" pos:end="333:15">file_format</name> <operator pos:start="333:17" pos:end="333:17">=</operator> <name pos:start="333:19" pos:end="333:22">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:22"><expr pos:start="335:5" pos:end="335:21"><name pos:start="335:5" pos:end="335:17">audio_disable</name> <operator pos:start="335:19" pos:end="335:19">=</operator> <literal type="number" pos:start="335:21" pos:end="335:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="337:5" pos:end="337:22"><expr pos:start="337:5" pos:end="337:21"><name pos:start="337:5" pos:end="337:17">video_disable</name> <operator pos:start="337:19" pos:end="337:19">=</operator> <literal type="number" pos:start="337:21" pos:end="337:21">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:35"><expr pos:start="339:5" pos:end="339:34"><name pos:start="339:5" pos:end="339:18">audio_codec_id</name> <operator pos:start="339:20" pos:end="339:20">=</operator> <name pos:start="339:22" pos:end="339:34">CODEC_ID_NONE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:35"><expr pos:start="341:5" pos:end="341:34"><name pos:start="341:5" pos:end="341:18">video_codec_id</name> <operator pos:start="341:20" pos:end="341:20">=</operator> <name pos:start="341:22" pos:end="341:34">CODEC_ID_NONE</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
