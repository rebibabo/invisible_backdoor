<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6729.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:28">ff_interleave_add_packet</name><parameter_list pos:start="1:29" pos:end="3:88">(<parameter pos:start="1:30" pos:end="1:47"><decl pos:start="1:30" pos:end="1:47"><type pos:start="1:30" pos:end="1:47"><name pos:start="1:30" pos:end="1:44">AVFormatContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:62"><decl pos:start="1:50" pos:end="1:62"><type pos:start="1:50" pos:end="1:62"><name pos:start="1:50" pos:end="1:57">AVPacket</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:62">pkt</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:87"><function_decl pos:start="3:31" pos:end="3:87"><type pos:start="3:31" pos:end="3:33"><name pos:start="3:31" pos:end="3:33">int</name></type> (<modifier pos:start="3:36" pos:end="3:36">*</modifier><name pos:start="3:37" pos:end="3:43">compare</name>)<parameter_list pos:start="3:45" pos:end="3:87">(<parameter pos:start="3:46" pos:end="3:62"><decl pos:start="3:46" pos:end="3:62"><type pos:start="3:46" pos:end="3:62"><name pos:start="3:46" pos:end="3:60">AVFormatContext</name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type></decl></parameter>, <parameter pos:start="3:65" pos:end="3:74"><decl pos:start="3:65" pos:end="3:74"><type pos:start="3:65" pos:end="3:74"><name pos:start="3:65" pos:end="3:72">AVPacket</name> <modifier pos:start="3:74" pos:end="3:74">*</modifier></type></decl></parameter>, <parameter pos:start="3:77" pos:end="3:86"><decl pos:start="3:77" pos:end="3:86"><type pos:start="3:77" pos:end="3:86"><name pos:start="3:77" pos:end="3:84">AVPacket</name> <modifier pos:start="3:86" pos:end="3:86">*</modifier></type></decl></parameter>)</parameter_list></function_decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:13">

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:16">AVPacketList</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:29">next_point</name></decl>, <decl pos:start="7:32" pos:end="7:41"><type ref="prev" pos:start="7:5" pos:end="7:19"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:41">this_pktl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:51"><decl pos:start="9:5" pos:end="9:50"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name>   <init pos:start="9:20" pos:end="9:50">= <expr pos:start="9:22" pos:end="9:50"><name pos:start="9:22" pos:end="9:50"><name pos:start="9:22" pos:end="9:22">s</name><operator pos:start="9:23" pos:end="9:24">-&gt;</operator><name pos:start="9:25" pos:end="9:31">streams</name><index pos:start="9:32" pos:end="9:50">[<expr pos:start="9:33" pos:end="9:49"><name pos:start="9:33" pos:end="9:49"><name pos:start="9:33" pos:end="9:35">pkt</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:49">stream_index</name></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:64"><decl pos:start="11:5" pos:end="11:63"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15">chunked</name>    <init pos:start="11:20" pos:end="11:63">= <expr pos:start="11:22" pos:end="11:63"><name pos:start="11:22" pos:end="11:38"><name pos:start="11:22" pos:end="11:22">s</name><operator pos:start="11:23" pos:end="11:24">-&gt;</operator><name pos:start="11:25" pos:end="11:38">max_chunk_size</name></name> <operator pos:start="11:40" pos:end="11:41">||</operator> <name pos:start="11:43" pos:end="11:63"><name pos:start="11:43" pos:end="11:43">s</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:63">max_chunk_duration</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:54"><expr pos:start="15:5" pos:end="15:53"><name pos:start="15:5" pos:end="15:13">this_pktl</name>      <operator pos:start="15:20" pos:end="15:20">=</operator> <call pos:start="15:22" pos:end="15:53"><name pos:start="15:22" pos:end="15:31">av_mallocz</name><argument_list pos:start="15:32" pos:end="15:53">(<argument pos:start="15:33" pos:end="15:52"><expr pos:start="15:33" pos:end="15:52"><sizeof pos:start="15:33" pos:end="15:52">sizeof<argument_list pos:start="15:39" pos:end="15:52">(<argument pos:start="15:40" pos:end="15:51"><expr pos:start="15:40" pos:end="15:51"><name pos:start="15:40" pos:end="15:51">AVPacketList</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:31"><if pos:start="17:5" pos:end="19:31">if <condition pos:start="17:8" pos:end="17:19">(<expr pos:start="17:9" pos:end="17:18"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:18">this_pktl</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:31"><block_content pos:start="19:9" pos:end="19:31">

        <return pos:start="19:9" pos:end="19:31">return <expr pos:start="19:16" pos:end="19:30"><call pos:start="19:16" pos:end="19:30"><name pos:start="19:16" pos:end="19:22">AVERROR</name><argument_list pos:start="19:23" pos:end="19:30">(<argument pos:start="19:24" pos:end="19:29"><expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:13">this_pktl</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">pkt</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <operator pos:start="21:22" pos:end="21:22">*</operator><name pos:start="21:23" pos:end="21:25">pkt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:26"><expr pos:start="23:5" pos:end="23:25"><name pos:start="23:5" pos:end="23:17"><name pos:start="23:5" pos:end="23:7">pkt</name><operator pos:start="23:8" pos:end="23:9">-&gt;</operator><name pos:start="23:10" pos:end="23:17">destruct</name></name>  <operator pos:start="23:20" pos:end="23:20">=</operator> <name pos:start="23:22" pos:end="23:25">NULL</name></expr>;</expr_stmt>           <comment type="line" pos:start="23:38" pos:end="23:78">// do not free original but only the copy</comment>

    <expr_stmt pos:start="25:5" pos:end="25:35"><expr pos:start="25:5" pos:end="25:34"><call pos:start="25:5" pos:end="25:34"><name pos:start="25:5" pos:end="25:17">av_dup_packet</name><argument_list pos:start="25:18" pos:end="25:34">(<argument pos:start="25:19" pos:end="25:33"><expr pos:start="25:19" pos:end="25:33"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:33"><name pos:start="25:20" pos:end="25:28">this_pktl</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:33">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="25:38" pos:end="25:92">// duplicate the packet if it uses non-allocated memory</comment>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:61">(<expr pos:start="29:9" pos:end="29:60"><name pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:9">s</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:18">streams</name><index pos:start="29:19" pos:end="29:37">[<expr pos:start="29:20" pos:end="29:36"><name pos:start="29:20" pos:end="29:36"><name pos:start="29:20" pos:end="29:22">pkt</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:36">stream_index</name></name></expr>]</index></name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:60">last_in_packet_buffer</name></expr>)</condition> <block pos:start="29:63" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:56">

        <expr_stmt pos:start="31:9" pos:end="31:56"><expr pos:start="31:9" pos:end="31:55"><name pos:start="31:9" pos:end="31:18">next_point</name> <operator pos:start="31:20" pos:end="31:20">=</operator> <operator pos:start="31:22" pos:end="31:22">&amp;</operator><operator pos:start="31:23" pos:end="31:23">(</operator><name pos:start="31:24" pos:end="31:54"><name pos:start="31:24" pos:end="31:25">st</name><operator pos:start="31:26" pos:end="31:27">-&gt;</operator><name pos:start="31:28" pos:end="31:48">last_in_packet_buffer</name><operator pos:start="31:49" pos:end="31:50">-&gt;</operator><name pos:start="31:51" pos:end="31:54">next</name></name><operator pos:start="31:55" pos:end="31:55">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:39">

        <expr_stmt pos:start="35:9" pos:end="35:39"><expr pos:start="35:9" pos:end="35:38"><name pos:start="35:9" pos:end="35:18">next_point</name> <operator pos:start="35:20" pos:end="35:20">=</operator> <operator pos:start="35:22" pos:end="35:22">&amp;</operator><name pos:start="35:23" pos:end="35:38"><name pos:start="35:23" pos:end="35:23">s</name><operator pos:start="35:24" pos:end="35:25">-&gt;</operator><name pos:start="35:26" pos:end="35:38">packet_buffer</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="61:5"><if pos:start="41:5" pos:end="61:5">if <condition pos:start="41:8" pos:end="41:16">(<expr pos:start="41:9" pos:end="41:15"><name pos:start="41:9" pos:end="41:15">chunked</name></expr>)</condition> <block pos:start="41:18" pos:end="61:5">{<block_content pos:start="43:9" pos:end="59:9">

        <decl_stmt pos:start="43:9" pos:end="43:106"><decl pos:start="43:9" pos:end="43:105"><type pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:16">uint64_t</name></type> <name pos:start="43:18" pos:end="43:20">max</name><init pos:start="43:21" pos:end="43:105">= <expr pos:start="43:23" pos:end="43:105"><call pos:start="43:23" pos:end="43:105"><name pos:start="43:23" pos:end="43:38">av_rescale_q_rnd</name><argument_list pos:start="43:39" pos:end="43:105">(<argument pos:start="43:40" pos:end="43:60"><expr pos:start="43:40" pos:end="43:60"><name pos:start="43:40" pos:end="43:60"><name pos:start="43:40" pos:end="43:40">s</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:60">max_chunk_duration</name></name></expr></argument>, <argument pos:start="43:63" pos:end="43:76"><expr pos:start="43:63" pos:end="43:76"><name pos:start="43:63" pos:end="43:76">AV_TIME_BASE_Q</name></expr></argument>, <argument pos:start="43:79" pos:end="43:91"><expr pos:start="43:79" pos:end="43:91"><name pos:start="43:79" pos:end="43:91"><name pos:start="43:79" pos:end="43:80">st</name><operator pos:start="43:81" pos:end="43:82">-&gt;</operator><name pos:start="43:83" pos:end="43:91">time_base</name></name></expr></argument>, <argument pos:start="43:94" pos:end="43:104"><expr pos:start="43:94" pos:end="43:104"><name pos:start="43:94" pos:end="43:104">AV_ROUND_UP</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:52"><expr pos:start="45:9" pos:end="45:51"><name pos:start="45:9" pos:end="45:34"><name pos:start="45:9" pos:end="45:10">st</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:34">interleaver_chunk_size</name></name>     <operator pos:start="45:40" pos:end="45:41">+=</operator> <name pos:start="45:43" pos:end="45:51"><name pos:start="45:43" pos:end="45:45">pkt</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:51">size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:56"><expr pos:start="47:9" pos:end="47:55"><name pos:start="47:9" pos:end="47:38"><name pos:start="47:9" pos:end="47:10">st</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:38">interleaver_chunk_duration</name></name> <operator pos:start="47:40" pos:end="47:41">+=</operator> <name pos:start="47:43" pos:end="47:55"><name pos:start="47:43" pos:end="47:45">pkt</name><operator pos:start="47:46" pos:end="47:47">-&gt;</operator><name pos:start="47:48" pos:end="47:55">duration</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="59:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="51:55">(   <expr pos:start="49:16" pos:end="51:54"><name pos:start="49:16" pos:end="49:41"><name pos:start="49:16" pos:end="49:17">st</name><operator pos:start="49:18" pos:end="49:19">-&gt;</operator><name pos:start="49:20" pos:end="49:41">interleaver_chunk_size</name></name>     <operator pos:start="49:47" pos:end="49:47">&gt;</operator> <name pos:start="49:49" pos:end="49:65"><name pos:start="49:49" pos:end="49:49">s</name><operator pos:start="49:50" pos:end="49:51">-&gt;</operator><name pos:start="49:52" pos:end="49:65">max_chunk_size</name></name><operator pos:start="49:66" pos:end="49:66">-</operator><literal type="number" pos:start="49:67" pos:end="49:68">1U</literal>

            <operator pos:start="51:13" pos:end="51:14">||</operator> <name pos:start="51:16" pos:end="51:45"><name pos:start="51:16" pos:end="51:17">st</name><operator pos:start="51:18" pos:end="51:19">-&gt;</operator><name pos:start="51:20" pos:end="51:45">interleaver_chunk_duration</name></name> <operator pos:start="51:47" pos:end="51:47">&gt;</operator> <name pos:start="51:49" pos:end="51:51">max</name><operator pos:start="51:52" pos:end="51:52">-</operator><literal type="number" pos:start="51:53" pos:end="51:54">1U</literal></expr>)</condition> <block pos:start="51:57" pos:end="59:9">{<block_content pos:start="53:13" pos:end="57:48">

            <expr_stmt pos:start="53:13" pos:end="55:47"><expr pos:start="53:13" pos:end="55:46"><name pos:start="53:13" pos:end="53:38"><name pos:start="53:13" pos:end="53:14">st</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:38">interleaver_chunk_size</name></name>     <operator pos:start="53:44" pos:end="53:44">=</operator>

            <name pos:start="55:13" pos:end="55:42"><name pos:start="55:13" pos:end="55:14">st</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:42">interleaver_chunk_duration</name></name> <operator pos:start="55:44" pos:end="55:44">=</operator> <literal type="number" pos:start="55:46" pos:end="55:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:48"><expr pos:start="57:13" pos:end="57:47"><name pos:start="57:13" pos:end="57:32"><name pos:start="57:13" pos:end="57:21">this_pktl</name><operator pos:start="57:22" pos:end="57:23">-&gt;</operator><name pos:start="57:24" pos:end="57:26">pkt</name><operator pos:start="57:27" pos:end="57:27">.</operator><name pos:start="57:28" pos:end="57:32">flags</name></name> <operator pos:start="57:34" pos:end="57:35">|=</operator> <name pos:start="57:37" pos:end="57:47">CHUNK_START</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="91:5"><if pos:start="63:5" pos:end="91:5">if <condition pos:start="63:8" pos:end="63:20">(<expr pos:start="63:9" pos:end="63:19"><operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:19">next_point</name></expr>)</condition> <block pos:start="63:22" pos:end="91:5">{<block_content pos:start="65:9" pos:end="89:9">

        <if_stmt pos:start="65:9" pos:end="67:31"><if pos:start="65:9" pos:end="67:31">if <condition pos:start="65:12" pos:end="65:61">(<expr pos:start="65:13" pos:end="65:60"><name pos:start="65:13" pos:end="65:19">chunked</name> <operator pos:start="65:21" pos:end="65:22">&amp;&amp;</operator> <operator pos:start="65:24" pos:end="65:24">!</operator><operator pos:start="65:25" pos:end="65:25">(</operator><name pos:start="65:26" pos:end="65:45"><name pos:start="65:26" pos:end="65:34">this_pktl</name><operator pos:start="65:35" pos:end="65:36">-&gt;</operator><name pos:start="65:37" pos:end="65:39">pkt</name><operator pos:start="65:40" pos:end="65:40">.</operator><name pos:start="65:41" pos:end="65:45">flags</name></name> <operator pos:start="65:47" pos:end="65:47">&amp;</operator> <name pos:start="65:49" pos:end="65:59">CHUNK_START</name><operator pos:start="65:60" pos:end="65:60">)</operator></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:31"><block_content pos:start="67:13" pos:end="67:31">

            <goto pos:start="67:13" pos:end="67:31">goto <name pos:start="67:18" pos:end="67:30">next_non_null</name>;</goto></block_content></block></if></if_stmt>



        <if_stmt pos:start="71:9" pos:end="89:9"><if pos:start="71:9" pos:end="85:9">if <condition pos:start="71:12" pos:end="71:56">(<expr pos:start="71:13" pos:end="71:55"><call pos:start="71:13" pos:end="71:55"><name pos:start="71:13" pos:end="71:19">compare</name><argument_list pos:start="71:20" pos:end="71:55">(<argument pos:start="71:21" pos:end="71:21"><expr pos:start="71:21" pos:end="71:21"><name pos:start="71:21" pos:end="71:21">s</name></expr></argument>, <argument pos:start="71:24" pos:end="71:49"><expr pos:start="71:24" pos:end="71:49"><operator pos:start="71:24" pos:end="71:24">&amp;</operator><name pos:start="71:25" pos:end="71:49"><name pos:start="71:25" pos:end="71:25">s</name><operator pos:start="71:26" pos:end="71:27">-&gt;</operator><name pos:start="71:28" pos:end="71:44">packet_buffer_end</name><operator pos:start="71:45" pos:end="71:46">-&gt;</operator><name pos:start="71:47" pos:end="71:49">pkt</name></name></expr></argument>, <argument pos:start="71:52" pos:end="71:54"><expr pos:start="71:52" pos:end="71:54"><name pos:start="71:52" pos:end="71:54">pkt</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="71:58" pos:end="85:9">{<block_content pos:start="73:13" pos:end="83:35">

            <while pos:start="73:13" pos:end="79:50">while <condition pos:start="73:19" pos:end="77:65">(   <expr pos:start="73:23" pos:end="77:64"><operator pos:start="73:23" pos:end="73:23">*</operator><name pos:start="73:24" pos:end="73:33">next_point</name>

                   <operator pos:start="75:20" pos:end="75:21">&amp;&amp;</operator> <operator pos:start="75:23" pos:end="75:23">(</operator><operator pos:start="75:24" pos:end="75:24">(</operator><name pos:start="75:25" pos:end="75:31">chunked</name> <operator pos:start="75:33" pos:end="75:34">&amp;&amp;</operator> <operator pos:start="75:36" pos:end="75:36">!</operator><operator pos:start="75:37" pos:end="75:37">(</operator><name pos:start="75:38" pos:end="75:61"><operator pos:start="75:38" pos:end="75:38">(</operator><operator pos:start="75:39" pos:end="75:39">*</operator><name pos:start="75:40" pos:end="75:49">next_point</name><operator pos:start="75:50" pos:end="75:50">)</operator><operator pos:start="75:51" pos:end="75:52">-&gt;</operator><name pos:start="75:53" pos:end="75:61"><name pos:start="75:53" pos:end="75:55">pkt</name><operator pos:start="75:56" pos:end="75:56">.</operator><name pos:start="75:57" pos:end="75:61">flags</name></name></name><operator pos:start="75:62" pos:end="75:62">&amp;</operator><name pos:start="75:63" pos:end="75:73">CHUNK_START</name><operator pos:start="75:74" pos:end="75:74">)</operator><operator pos:start="75:75" pos:end="75:75">)</operator>

                       <operator pos:start="77:24" pos:end="77:25">||</operator> <operator pos:start="77:27" pos:end="77:27">!</operator><call pos:start="77:28" pos:end="77:63"><name pos:start="77:28" pos:end="77:34">compare</name><argument_list pos:start="77:35" pos:end="77:63">(<argument pos:start="77:36" pos:end="77:36"><expr pos:start="77:36" pos:end="77:36"><name pos:start="77:36" pos:end="77:36">s</name></expr></argument>, <argument pos:start="77:39" pos:end="77:57"><expr pos:start="77:39" pos:end="77:57"><operator pos:start="77:39" pos:end="77:39">&amp;</operator><name pos:start="77:40" pos:end="77:57"><operator pos:start="77:40" pos:end="77:40">(</operator><operator pos:start="77:41" pos:end="77:41">*</operator><name pos:start="77:42" pos:end="77:51">next_point</name><operator pos:start="77:52" pos:end="77:52">)</operator><operator pos:start="77:53" pos:end="77:54">-&gt;</operator><name pos:start="77:55" pos:end="77:57">pkt</name></name></expr></argument>, <argument pos:start="77:60" pos:end="77:62"><expr pos:start="77:60" pos:end="77:62"><name pos:start="77:60" pos:end="77:62">pkt</name></expr></argument>)</argument_list></call><operator pos:start="77:64" pos:end="77:64">)</operator></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:50"><block_content pos:start="79:17" pos:end="79:50">

                <expr_stmt pos:start="79:17" pos:end="79:50"><expr pos:start="79:17" pos:end="79:49"><name pos:start="79:17" pos:end="79:26">next_point</name> <operator pos:start="79:28" pos:end="79:28">=</operator> <operator pos:start="79:30" pos:end="79:30">&amp;</operator><name pos:start="79:31" pos:end="79:49"><operator pos:start="79:31" pos:end="79:31">(</operator><operator pos:start="79:32" pos:end="79:32">*</operator><name pos:start="79:33" pos:end="79:42">next_point</name><operator pos:start="79:43" pos:end="79:43">)</operator><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:49">next</name></name></expr>;</expr_stmt></block_content></block></while>

            <if_stmt pos:start="81:13" pos:end="83:35"><if pos:start="81:13" pos:end="83:35">if <condition pos:start="81:16" pos:end="81:28">(<expr pos:start="81:17" pos:end="81:27"><operator pos:start="81:17" pos:end="81:17">*</operator><name pos:start="81:18" pos:end="81:27">next_point</name></expr>)</condition><block type="pseudo" pos:start="83:17" pos:end="83:35"><block_content pos:start="83:17" pos:end="83:35">

                <goto pos:start="83:17" pos:end="83:35">goto <name pos:start="83:22" pos:end="83:34">next_non_null</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:55">

            <expr_stmt pos:start="87:13" pos:end="87:55"><expr pos:start="87:13" pos:end="87:54"><name pos:start="87:13" pos:end="87:22">next_point</name> <operator pos:start="87:24" pos:end="87:24">=</operator> <operator pos:start="87:26" pos:end="87:26">&amp;</operator><operator pos:start="87:27" pos:end="87:27">(</operator><name pos:start="87:28" pos:end="87:53"><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:30">-&gt;</operator><name pos:start="87:31" pos:end="87:47">packet_buffer_end</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:53">next</name></name><operator pos:start="87:54" pos:end="87:54">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:29"><expr pos:start="93:5" pos:end="93:28"><call pos:start="93:5" pos:end="93:28"><name pos:start="93:5" pos:end="93:14">av_assert1</name><argument_list pos:start="93:15" pos:end="93:28">(<argument pos:start="93:16" pos:end="93:27"><expr pos:start="93:16" pos:end="93:27"><operator pos:start="93:16" pos:end="93:16">!</operator><operator pos:start="93:17" pos:end="93:17">*</operator><name pos:start="93:18" pos:end="93:27">next_point</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="97:5" pos:end="97:37"><expr pos:start="97:5" pos:end="97:36"><name pos:start="97:5" pos:end="97:24"><name pos:start="97:5" pos:end="97:5">s</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:24">packet_buffer_end</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:36">this_pktl</name></expr>;</expr_stmt>

<label pos:start="99:1" pos:end="99:14"><name pos:start="99:1" pos:end="99:13">next_non_null</name>:</label>



    <expr_stmt pos:start="103:5" pos:end="103:34"><expr pos:start="103:5" pos:end="103:33"><name pos:start="103:5" pos:end="103:19"><name pos:start="103:5" pos:end="103:13">this_pktl</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:19">next</name></name> <operator pos:start="103:21" pos:end="103:21">=</operator> <operator pos:start="103:23" pos:end="103:23">*</operator><name pos:start="103:24" pos:end="103:33">next_point</name></expr>;</expr_stmt>



    <expr_stmt pos:start="107:5" pos:end="109:69"><expr pos:start="107:5" pos:end="109:68"><name pos:start="107:5" pos:end="107:33"><name pos:start="107:5" pos:end="107:5">s</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:14">streams</name><index pos:start="107:15" pos:end="107:33">[<expr pos:start="107:16" pos:end="107:32"><name pos:start="107:16" pos:end="107:32"><name pos:start="107:16" pos:end="107:18">pkt</name><operator pos:start="107:19" pos:end="107:20">-&gt;</operator><name pos:start="107:21" pos:end="107:32">stream_index</name></name></expr>]</index></name><operator pos:start="107:34" pos:end="107:35">-&gt;</operator><name pos:start="107:36" pos:end="107:56">last_in_packet_buffer</name> <operator pos:start="107:58" pos:end="107:58">=</operator>

        <operator pos:start="109:9" pos:end="109:9">*</operator><name pos:start="109:10" pos:end="109:19">next_point</name>                                      <operator pos:start="109:58" pos:end="109:58">=</operator> <name pos:start="109:60" pos:end="109:68">this_pktl</name></expr>;</expr_stmt>

    <return pos:start="111:5" pos:end="111:13">return <expr pos:start="111:12" pos:end="111:12"><literal type="number" pos:start="111:12" pos:end="111:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
