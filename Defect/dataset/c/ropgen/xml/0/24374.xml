<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24374.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">handle_packets</name><parameter_list pos:start="1:26" pos:end="1:61">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:44"><name pos:start="1:27" pos:end="1:41">AVFormatContext</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:44">s</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:60">nb_packets</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">MpegTSContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">ts</name> <init pos:start="5:23" pos:end="5:36">= <expr pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:36"><name pos:start="5:25" pos:end="5:25">s</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">ByteIOContext</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">pb</name> <init pos:start="7:23" pos:end="7:30">= <expr pos:start="7:25" pos:end="7:30"><operator pos:start="7:25" pos:end="7:25">&amp;</operator><name pos:start="7:26" pos:end="7:30"><name pos:start="7:26" pos:end="7:26">s</name><operator pos:start="7:27" pos:end="7:28">-&gt;</operator><name pos:start="7:29" pos:end="7:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:39"><decl pos:start="9:5" pos:end="9:38"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:38"><name pos:start="9:13" pos:end="9:18">packet</name><index pos:start="9:19" pos:end="9:38">[<expr pos:start="9:20" pos:end="9:37"><name pos:start="9:20" pos:end="9:37">TS_FEC_PACKET_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:24"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">packet_num</name></decl>, <decl pos:start="11:21" pos:end="11:23"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:21" pos:end="11:23">len</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:6">ts</name><operator pos:start="15:7" pos:end="15:8">-&gt;</operator><name pos:start="15:9" pos:end="15:18">stop_parse</name></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <literal type="number" pos:start="15:22" pos:end="15:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:19"><expr pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:14">packet_num</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr>;</expr_stmt>

    <for pos:start="19:5" pos:end="47:5">for<control pos:start="19:8" pos:end="19:11">(<init pos:start="19:9" pos:end="19:9">;</init><condition pos:start="19:10" pos:end="19:10">;</condition><incr/>)</control> <block pos:start="19:13" pos:end="47:5">{<block_content pos:start="21:9" pos:end="45:33">

        <if_stmt pos:start="21:9" pos:end="23:18"><if pos:start="21:9" pos:end="23:18">if <condition pos:start="21:12" pos:end="21:27">(<expr pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:26"><name pos:start="21:13" pos:end="21:14">ts</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:26">stop_parse</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:18"><block_content pos:start="23:13" pos:end="23:18">

            <break pos:start="23:13" pos:end="23:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:18">packet_num</name><operator pos:start="25:19" pos:end="25:20">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="29:18"><if pos:start="27:9" pos:end="29:18">if <condition pos:start="27:12" pos:end="27:56">(<expr pos:start="27:13" pos:end="27:55"><name pos:start="27:13" pos:end="27:22">nb_packets</name> <operator pos:start="27:24" pos:end="27:25">!=</operator> <literal type="number" pos:start="27:27" pos:end="27:27">0</literal> <operator pos:start="27:29" pos:end="27:30">&amp;&amp;</operator> <name pos:start="27:32" pos:end="27:41">packet_num</name> <operator pos:start="27:43" pos:end="27:44">&gt;=</operator> <name pos:start="27:46" pos:end="27:55">nb_packets</name></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:18"><block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break></block_content></block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:58"><expr pos:start="31:9" pos:end="31:57"><name pos:start="31:9" pos:end="31:11">len</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <call pos:start="31:15" pos:end="31:57"><name pos:start="31:15" pos:end="31:24">get_buffer</name><argument_list pos:start="31:25" pos:end="31:57">(<argument pos:start="31:26" pos:end="31:27"><expr pos:start="31:26" pos:end="31:27"><name pos:start="31:26" pos:end="31:27">pb</name></expr></argument>, <argument pos:start="31:30" pos:end="31:35"><expr pos:start="31:30" pos:end="31:35"><name pos:start="31:30" pos:end="31:35">packet</name></expr></argument>, <argument pos:start="31:38" pos:end="31:56"><expr pos:start="31:38" pos:end="31:56"><name pos:start="31:38" pos:end="31:56"><name pos:start="31:38" pos:end="31:39">ts</name><operator pos:start="31:40" pos:end="31:41">-&gt;</operator><name pos:start="31:42" pos:end="31:56">raw_packet_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="35:30"><if pos:start="33:9" pos:end="35:30">if <condition pos:start="33:12" pos:end="33:39">(<expr pos:start="33:13" pos:end="33:38"><name pos:start="33:13" pos:end="33:15">len</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <name pos:start="33:20" pos:end="33:38"><name pos:start="33:20" pos:end="33:21">ts</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:38">raw_packet_size</name></name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:30"><block_content pos:start="35:13" pos:end="35:30">

            <return pos:start="35:13" pos:end="35:30">return <expr pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:29">AVERROR_IO</name></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="37:9" pos:end="37:36">/* check paquet sync byte */</comment>

        <comment type="block" pos:start="39:9" pos:end="39:37">/* XXX: accept to resync ? */</comment>

        <if_stmt pos:start="41:9" pos:end="43:39"><if pos:start="41:9" pos:end="43:39">if <condition pos:start="41:12" pos:end="41:30">(<expr pos:start="41:13" pos:end="41:29"><name pos:start="41:13" pos:end="41:21"><name pos:start="41:13" pos:end="41:18">packet</name><index pos:start="41:19" pos:end="41:21">[<expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr>]</index></name> <operator pos:start="41:23" pos:end="41:24">!=</operator> <literal type="number" pos:start="41:26" pos:end="41:29">0x47</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:39"><block_content pos:start="43:13" pos:end="43:39">

            <return pos:start="43:13" pos:end="43:39">return <expr pos:start="43:20" pos:end="43:38"><name pos:start="43:20" pos:end="43:38">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><call pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:21">handle_packet</name><argument_list pos:start="45:22" pos:end="45:32">(<argument pos:start="45:23" pos:end="45:23"><expr pos:start="45:23" pos:end="45:23"><name pos:start="45:23" pos:end="45:23">s</name></expr></argument>, <argument pos:start="45:26" pos:end="45:31"><expr pos:start="45:26" pos:end="45:31"><name pos:start="45:26" pos:end="45:31">packet</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
