<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26123.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:29"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:20">always_inline</name> <name pos:start="1:22" pos:end="1:29">uint64_t</name></type> <name pos:start="1:31" pos:end="1:52">float_zero_divide_excp</name> <parameter_list pos:start="1:54" pos:end="1:83">(<parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:62">uint64_t</name></type> <name pos:start="1:64" pos:end="1:67">arg1</name></decl></parameter>, <parameter pos:start="1:70" pos:end="1:82"><decl pos:start="1:70" pos:end="1:82"><type pos:start="1:70" pos:end="1:82"><name pos:start="1:70" pos:end="1:77">uint64_t</name></type> <name pos:start="1:79" pos:end="1:82">arg2</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:16">

    <expr_stmt pos:start="5:5" pos:end="5:32"><expr pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:7">env</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:14">fpscr</name></name> <operator pos:start="5:16" pos:end="5:17">|=</operator> <literal type="number" pos:start="5:19" pos:end="5:19">1</literal> <operator pos:start="5:21" pos:end="5:22">&lt;&lt;</operator> <name pos:start="5:24" pos:end="5:31">FPSCR_ZX</name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:55"><expr pos:start="7:5" pos:end="7:54"><name pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:7">env</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:14">fpscr</name></name> <operator pos:start="7:16" pos:end="7:17">&amp;=</operator> <operator pos:start="7:19" pos:end="7:19">~</operator><operator pos:start="7:20" pos:end="7:20">(</operator><operator pos:start="7:21" pos:end="7:21">(</operator><literal type="number" pos:start="7:22" pos:end="7:22">1</literal> <operator pos:start="7:24" pos:end="7:25">&lt;&lt;</operator> <name pos:start="7:27" pos:end="7:34">FPSCR_FR</name><operator pos:start="7:35" pos:end="7:35">)</operator> <operator pos:start="7:37" pos:end="7:37">|</operator> <operator pos:start="7:39" pos:end="7:39">(</operator><literal type="number" pos:start="7:40" pos:end="7:40">1</literal> <operator pos:start="7:42" pos:end="7:43">&lt;&lt;</operator> <name pos:start="7:45" pos:end="7:52">FPSCR_FI</name><operator pos:start="7:53" pos:end="7:53">)</operator><operator pos:start="7:54" pos:end="7:54">)</operator></expr>;</expr_stmt>

    <comment type="block" pos:start="9:5" pos:end="9:53">/* Update the floating-point exception summary */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:32"><expr pos:start="11:5" pos:end="11:31"><name pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:14">fpscr</name></name> <operator pos:start="11:16" pos:end="11:17">|=</operator> <literal type="number" pos:start="11:19" pos:end="11:19">1</literal> <operator pos:start="11:21" pos:end="11:22">&lt;&lt;</operator> <name pos:start="11:24" pos:end="11:31">FPSCR_FX</name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="35:5"><if pos:start="13:5" pos:end="27:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:16">fpscr_ze</name> <operator pos:start="13:18" pos:end="13:19">!=</operator> <literal type="number" pos:start="13:21" pos:end="13:21">0</literal></expr>)</condition> <block pos:start="13:24" pos:end="27:5">{<block_content pos:start="17:9" pos:end="25:9">

        <comment type="block" pos:start="15:9" pos:end="15:65">/* Update the floating-point enabled exception summary */</comment>

        <expr_stmt pos:start="17:9" pos:end="17:37"><expr pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:11">env</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:18">fpscr</name></name> <operator pos:start="17:20" pos:end="17:21">|=</operator> <literal type="number" pos:start="17:23" pos:end="17:23">1</literal> <operator pos:start="17:25" pos:end="17:26">&lt;&lt;</operator> <name pos:start="17:28" pos:end="17:36">FPSCR_FEX</name></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="25:9"><if pos:start="19:9" pos:end="25:9">if <condition pos:start="19:12" pos:end="19:41">(<expr pos:start="19:13" pos:end="19:40"><name pos:start="19:13" pos:end="19:19">msr_fe0</name> <operator pos:start="19:21" pos:end="19:22">!=</operator> <literal type="number" pos:start="19:24" pos:end="19:24">0</literal> <operator pos:start="19:26" pos:end="19:27">||</operator> <name pos:start="19:29" pos:end="19:35">msr_fe1</name> <operator pos:start="19:37" pos:end="19:38">!=</operator> <literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>)</condition> <block pos:start="19:43" pos:end="25:9">{<block_content pos:start="21:13" pos:end="23:77">

            <expr_stmt pos:start="21:13" pos:end="23:77"><expr pos:start="21:13" pos:end="23:76"><call pos:start="21:13" pos:end="23:76"><name pos:start="21:13" pos:end="21:38">helper_raise_exception_err</name><argument_list pos:start="21:39" pos:end="23:76">(<argument pos:start="21:40" pos:end="21:59"><expr pos:start="21:40" pos:end="21:59"><name pos:start="21:40" pos:end="21:59">POWERPC_EXCP_PROGRAM</name></expr></argument>,

                                       <argument pos:start="23:40" pos:end="23:75"><expr pos:start="23:40" pos:end="23:75"><name pos:start="23:40" pos:end="23:54">POWERPC_EXCP_FP</name> <operator pos:start="23:56" pos:end="23:56">|</operator> <name pos:start="23:58" pos:end="23:75">POWERPC_EXCP_FP_ZX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="27:7" pos:end="35:5">else <block pos:start="27:12" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:31">

        <comment type="block" pos:start="29:9" pos:end="29:40">/* Set the result to infinity */</comment>

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:12">arg1</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">(</operator><operator pos:start="31:17" pos:end="31:17">(</operator><name pos:start="31:18" pos:end="31:21">arg1</name> <operator pos:start="31:23" pos:end="31:23">^</operator> <name pos:start="31:25" pos:end="31:28">arg2</name><operator pos:start="31:29" pos:end="31:29">)</operator> <operator pos:start="31:31" pos:end="31:31">&amp;</operator> <literal type="number" pos:start="31:33" pos:end="31:53">0x8000000000000000ULL</literal><operator pos:start="31:54" pos:end="31:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:31"><expr pos:start="33:9" pos:end="33:30"><name pos:start="33:9" pos:end="33:12">arg1</name> <operator pos:start="33:14" pos:end="33:15">|=</operator> <literal type="number" pos:start="33:17" pos:end="33:24">0x7FFULL</literal> <operator pos:start="33:26" pos:end="33:27">&lt;&lt;</operator> <literal type="number" pos:start="33:29" pos:end="33:30">52</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="37:5" pos:end="37:16">return <expr pos:start="37:12" pos:end="37:15"><name pos:start="37:12" pos:end="37:15">arg1</name></expr>;</return>

</block_content>}</block></function>
</unit>
