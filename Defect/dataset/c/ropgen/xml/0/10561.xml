<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10561.c" pos:tabs="8"><function pos:start="1:1" pos:end="273:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">dvvideo_decode_frame</name><parameter_list pos:start="1:32" pos:end="5:58">(<parameter pos:start="1:33" pos:end="1:53"><decl pos:start="1:33" pos:end="1:53"><type pos:start="1:33" pos:end="1:53"><name pos:start="1:33" pos:end="1:46">AVCodecContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:53">avctx</name></decl></parameter>, 

                                 <parameter pos:start="3:34" pos:end="3:43"><decl pos:start="3:34" pos:end="3:43"><type pos:start="3:34" pos:end="3:43"><name pos:start="3:34" pos:end="3:37">void</name> <modifier pos:start="3:39" pos:end="3:39">*</modifier></type><name pos:start="3:40" pos:end="3:43">data</name></decl></parameter>, <parameter pos:start="3:46" pos:end="3:59"><decl pos:start="3:46" pos:end="3:59"><type pos:start="3:46" pos:end="3:59"><name pos:start="3:46" pos:end="3:48">int</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:59">data_size</name></decl></parameter>,

                                 <parameter pos:start="5:34" pos:end="5:43"><decl pos:start="5:34" pos:end="5:43"><type pos:start="5:34" pos:end="5:43"><name pos:start="5:34" pos:end="5:38">UINT8</name> <modifier pos:start="5:40" pos:end="5:40">*</modifier></type><name pos:start="5:41" pos:end="5:43">buf</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:57"><decl pos:start="5:46" pos:end="5:57"><type pos:start="5:46" pos:end="5:57"><name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:57">buf_size</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="273:1">{<block_content pos:start="9:5" pos:end="271:23">

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:24">DVVideoDecodeContext</name> <modifier pos:start="9:26" pos:end="9:26">*</modifier></type><name pos:start="9:27" pos:end="9:27">s</name> <init pos:start="9:29" pos:end="9:46">= <expr pos:start="9:31" pos:end="9:46"><name pos:start="9:31" pos:end="9:46"><name pos:start="9:31" pos:end="9:35">avctx</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:74"><decl pos:start="11:5" pos:end="11:11"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">sct</name></decl>, <decl pos:start="11:14" pos:end="11:16"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:14" pos:end="11:16">dsf</name></decl>, <decl pos:start="11:19" pos:end="11:21"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:19" pos:end="11:21">apt</name></decl>, <decl pos:start="11:24" pos:end="11:25"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:24" pos:end="11:25">ds</name></decl>, <decl pos:start="11:28" pos:end="11:38"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:28" pos:end="11:38">nb_dif_segs</name></decl>, <decl pos:start="11:41" pos:end="11:42"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:41" pos:end="11:42">vs</name></decl>, <decl pos:start="11:45" pos:end="11:49"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:45" pos:end="11:49">width</name></decl>, <decl pos:start="11:52" pos:end="11:57"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:52" pos:end="11:57">height</name></decl>, <decl pos:start="11:60" pos:end="11:60"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:60" pos:end="11:60">i</name></decl>, <decl pos:start="11:63" pos:end="11:73"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:63" pos:end="11:73">packet_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:17">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:19"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">UINT8</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:18">buf_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:29"><decl pos:start="17:5" pos:end="17:28"><type pos:start="17:5" pos:end="17:18"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:16">UINT16</name> <modifier pos:start="17:18" pos:end="17:18">*</modifier></type><name pos:start="17:19" pos:end="17:28">mb_pos_ptr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:13">AVPicture</name> <modifier pos:start="19:15" pos:end="19:15">*</modifier></type><name pos:start="19:16" pos:end="19:22">picture</name></decl>;</decl_stmt>

    

    <comment type="block" pos:start="23:5" pos:end="23:18">/* parse id */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:41"><expr pos:start="25:5" pos:end="25:40"><call pos:start="25:5" pos:end="25:40"><name pos:start="25:5" pos:end="25:17">init_get_bits</name><argument_list pos:start="25:18" pos:end="25:40">(<argument pos:start="25:19" pos:end="25:24"><expr pos:start="25:19" pos:end="25:24"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:24"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:24">gb</name></name></expr></argument>, <argument pos:start="25:27" pos:end="25:29"><expr pos:start="25:27" pos:end="25:29"><name pos:start="25:27" pos:end="25:29">buf</name></expr></argument>, <argument pos:start="25:32" pos:end="25:39"><expr pos:start="25:32" pos:end="25:39"><name pos:start="25:32" pos:end="25:39">buf_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:30"><expr pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:7">sct</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:29"><name pos:start="27:11" pos:end="27:18">get_bits</name><argument_list pos:start="27:19" pos:end="27:29">(<argument pos:start="27:20" pos:end="27:25"><expr pos:start="27:20" pos:end="27:25"><operator pos:start="27:20" pos:end="27:20">&amp;</operator><name pos:start="27:21" pos:end="27:25"><name pos:start="27:21" pos:end="27:21">s</name><operator pos:start="27:22" pos:end="27:23">-&gt;</operator><name pos:start="27:24" pos:end="27:25">gb</name></name></expr></argument>, <argument pos:start="27:28" pos:end="27:28"><expr pos:start="27:28" pos:end="27:28"><literal type="number" pos:start="27:28" pos:end="27:28">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:18"><if pos:start="29:5" pos:end="31:18">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">sct</name> <operator pos:start="29:13" pos:end="29:14">!=</operator> <literal type="number" pos:start="29:16" pos:end="29:16">0</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:18"><block_content pos:start="31:9" pos:end="31:18">

        <return pos:start="31:9" pos:end="31:18">return <expr pos:start="31:16" pos:end="31:17"><operator pos:start="31:16" pos:end="31:16">-</operator><literal type="number" pos:start="31:17" pos:end="31:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:25"><expr pos:start="33:5" pos:end="33:24"><call pos:start="33:5" pos:end="33:24"><name pos:start="33:5" pos:end="33:13">skip_bits</name><argument_list pos:start="33:14" pos:end="33:24">(<argument pos:start="33:15" pos:end="33:20"><expr pos:start="33:15" pos:end="33:20"><operator pos:start="33:15" pos:end="33:15">&amp;</operator><name pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:16">s</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:20">gb</name></name></expr></argument>, <argument pos:start="33:23" pos:end="33:23"><expr pos:start="33:23" pos:end="33:23"><literal type="number" pos:start="33:23" pos:end="33:23">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:24"><expr pos:start="35:5" pos:end="35:23"><call pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:12">get_bits</name><argument_list pos:start="35:13" pos:end="35:23">(<argument pos:start="35:14" pos:end="35:19"><expr pos:start="35:14" pos:end="35:19"><operator pos:start="35:14" pos:end="35:14">&amp;</operator><name pos:start="35:15" pos:end="35:19"><name pos:start="35:15" pos:end="35:15">s</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:19">gb</name></name></expr></argument>, <argument pos:start="35:22" pos:end="35:22"><expr pos:start="35:22" pos:end="35:22"><literal type="number" pos:start="35:22" pos:end="35:22">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:26" pos:end="35:51">/* dsn (sequence number */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:24"><expr pos:start="37:5" pos:end="37:23"><call pos:start="37:5" pos:end="37:23"><name pos:start="37:5" pos:end="37:12">get_bits</name><argument_list pos:start="37:13" pos:end="37:23">(<argument pos:start="37:14" pos:end="37:19"><expr pos:start="37:14" pos:end="37:19"><operator pos:start="37:14" pos:end="37:14">&amp;</operator><name pos:start="37:15" pos:end="37:19"><name pos:start="37:15" pos:end="37:15">s</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:19">gb</name></name></expr></argument>, <argument pos:start="37:22" pos:end="37:22"><expr pos:start="37:22" pos:end="37:22"><literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="37:26" pos:end="37:51">/* fsc (channel number) */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:25"><expr pos:start="39:5" pos:end="39:24"><call pos:start="39:5" pos:end="39:24"><name pos:start="39:5" pos:end="39:13">skip_bits</name><argument_list pos:start="39:14" pos:end="39:24">(<argument pos:start="39:15" pos:end="39:20"><expr pos:start="39:15" pos:end="39:20"><operator pos:start="39:15" pos:end="39:15">&amp;</operator><name pos:start="39:16" pos:end="39:20"><name pos:start="39:16" pos:end="39:16">s</name><operator pos:start="39:17" pos:end="39:18">-&gt;</operator><name pos:start="39:19" pos:end="39:20">gb</name></name></expr></argument>, <argument pos:start="39:23" pos:end="39:23"><expr pos:start="39:23" pos:end="39:23"><literal type="number" pos:start="39:23" pos:end="39:23">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:24"><expr pos:start="41:5" pos:end="41:23"><call pos:start="41:5" pos:end="41:23"><name pos:start="41:5" pos:end="41:12">get_bits</name><argument_list pos:start="41:13" pos:end="41:23">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">gb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:26" pos:end="41:60">/* dbn (diff block number 0-134) */</comment>



    <expr_stmt pos:start="45:5" pos:end="45:30"><expr pos:start="45:5" pos:end="45:29"><name pos:start="45:5" pos:end="45:7">dsf</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:29"><name pos:start="45:11" pos:end="45:18">get_bits</name><argument_list pos:start="45:19" pos:end="45:29">(<argument pos:start="45:20" pos:end="45:25"><expr pos:start="45:20" pos:end="45:25"><operator pos:start="45:20" pos:end="45:20">&amp;</operator><name pos:start="45:21" pos:end="45:25"><name pos:start="45:21" pos:end="45:21">s</name><operator pos:start="45:22" pos:end="45:23">-&gt;</operator><name pos:start="45:24" pos:end="45:25">gb</name></name></expr></argument>, <argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><literal type="number" pos:start="45:28" pos:end="45:28">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="45:32" pos:end="45:53">/* 0 = NTSC 1 = PAL */</comment>

    <if_stmt pos:start="47:5" pos:end="49:18"><if pos:start="47:5" pos:end="49:18">if <condition pos:start="47:8" pos:end="47:33">(<expr pos:start="47:9" pos:end="47:32"><call pos:start="47:9" pos:end="47:27"><name pos:start="47:9" pos:end="47:16">get_bits</name><argument_list pos:start="47:17" pos:end="47:27">(<argument pos:start="47:18" pos:end="47:23"><expr pos:start="47:18" pos:end="47:23"><operator pos:start="47:18" pos:end="47:18">&amp;</operator><name pos:start="47:19" pos:end="47:23"><name pos:start="47:19" pos:end="47:19">s</name><operator pos:start="47:20" pos:end="47:21">-&gt;</operator><name pos:start="47:22" pos:end="47:23">gb</name></name></expr></argument>, <argument pos:start="47:26" pos:end="47:26"><expr pos:start="47:26" pos:end="47:26"><literal type="number" pos:start="47:26" pos:end="47:26">1</literal></expr></argument>)</argument_list></call> <operator pos:start="47:29" pos:end="47:30">!=</operator> <literal type="number" pos:start="47:32" pos:end="47:32">0</literal></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:26"><expr pos:start="51:5" pos:end="51:25"><call pos:start="51:5" pos:end="51:25"><name pos:start="51:5" pos:end="51:13">skip_bits</name><argument_list pos:start="51:14" pos:end="51:25">(<argument pos:start="51:15" pos:end="51:20"><expr pos:start="51:15" pos:end="51:20"><operator pos:start="51:15" pos:end="51:15">&amp;</operator><name pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:16">s</name><operator pos:start="51:17" pos:end="51:18">-&gt;</operator><name pos:start="51:19" pos:end="51:20">gb</name></name></expr></argument>, <argument pos:start="51:23" pos:end="51:24"><expr pos:start="51:23" pos:end="51:24"><literal type="number" pos:start="51:23" pos:end="51:24">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:30"><expr pos:start="53:5" pos:end="53:29"><name pos:start="53:5" pos:end="53:7">apt</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:29"><name pos:start="53:11" pos:end="53:18">get_bits</name><argument_list pos:start="53:19" pos:end="53:29">(<argument pos:start="53:20" pos:end="53:25"><expr pos:start="53:20" pos:end="53:25"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="53:25"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:25">gb</name></name></expr></argument>, <argument pos:start="53:28" pos:end="53:28"><expr pos:start="53:28" pos:end="53:28"><literal type="number" pos:start="53:28" pos:end="53:28">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:32" pos:end="53:40">/* apt */</comment>



    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><call pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:12">get_bits</name><argument_list pos:start="57:13" pos:end="57:23">(<argument pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:19"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:19"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:19">gb</name></name></expr></argument>, <argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><literal type="number" pos:start="57:22" pos:end="57:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="57:26" pos:end="57:34">/* tf1 */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:25"><expr pos:start="59:5" pos:end="59:24"><call pos:start="59:5" pos:end="59:24"><name pos:start="59:5" pos:end="59:13">skip_bits</name><argument_list pos:start="59:14" pos:end="59:24">(<argument pos:start="59:15" pos:end="59:20"><expr pos:start="59:15" pos:end="59:20"><operator pos:start="59:15" pos:end="59:15">&amp;</operator><name pos:start="59:16" pos:end="59:20"><name pos:start="59:16" pos:end="59:16">s</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:20">gb</name></name></expr></argument>, <argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:24"><expr pos:start="61:5" pos:end="61:23"><call pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:12">get_bits</name><argument_list pos:start="61:13" pos:end="61:23">(<argument pos:start="61:14" pos:end="61:19"><expr pos:start="61:14" pos:end="61:19"><operator pos:start="61:14" pos:end="61:14">&amp;</operator><name pos:start="61:15" pos:end="61:19"><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:19">gb</name></name></expr></argument>, <argument pos:start="61:22" pos:end="61:22"><expr pos:start="61:22" pos:end="61:22"><literal type="number" pos:start="61:22" pos:end="61:22">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="61:26" pos:end="61:34">/* ap1 */</comment>



    <expr_stmt pos:start="65:5" pos:end="65:24"><expr pos:start="65:5" pos:end="65:23"><call pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:12">get_bits</name><argument_list pos:start="65:13" pos:end="65:23">(<argument pos:start="65:14" pos:end="65:19"><expr pos:start="65:14" pos:end="65:19"><operator pos:start="65:14" pos:end="65:14">&amp;</operator><name pos:start="65:15" pos:end="65:19"><name pos:start="65:15" pos:end="65:15">s</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:19">gb</name></name></expr></argument>, <argument pos:start="65:22" pos:end="65:22"><expr pos:start="65:22" pos:end="65:22"><literal type="number" pos:start="65:22" pos:end="65:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="65:26" pos:end="65:34">/* tf2 */</comment>

    <expr_stmt pos:start="67:5" pos:end="67:25"><expr pos:start="67:5" pos:end="67:24"><call pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:13">skip_bits</name><argument_list pos:start="67:14" pos:end="67:24">(<argument pos:start="67:15" pos:end="67:20"><expr pos:start="67:15" pos:end="67:20"><operator pos:start="67:15" pos:end="67:15">&amp;</operator><name pos:start="67:16" pos:end="67:20"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:20">gb</name></name></expr></argument>, <argument pos:start="67:23" pos:end="67:23"><expr pos:start="67:23" pos:end="67:23"><literal type="number" pos:start="67:23" pos:end="67:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:12">get_bits</name><argument_list pos:start="69:13" pos:end="69:23">(<argument pos:start="69:14" pos:end="69:19"><expr pos:start="69:14" pos:end="69:19"><operator pos:start="69:14" pos:end="69:14">&amp;</operator><name pos:start="69:15" pos:end="69:19"><name pos:start="69:15" pos:end="69:15">s</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:19">gb</name></name></expr></argument>, <argument pos:start="69:22" pos:end="69:22"><expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="69:26" pos:end="69:34">/* ap2 */</comment>



    <expr_stmt pos:start="73:5" pos:end="73:24"><expr pos:start="73:5" pos:end="73:23"><call pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:12">get_bits</name><argument_list pos:start="73:13" pos:end="73:23">(<argument pos:start="73:14" pos:end="73:19"><expr pos:start="73:14" pos:end="73:19"><operator pos:start="73:14" pos:end="73:14">&amp;</operator><name pos:start="73:15" pos:end="73:19"><name pos:start="73:15" pos:end="73:15">s</name><operator pos:start="73:16" pos:end="73:17">-&gt;</operator><name pos:start="73:18" pos:end="73:19">gb</name></name></expr></argument>, <argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><literal type="number" pos:start="73:22" pos:end="73:22">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="73:26" pos:end="73:34">/* tf3 */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:25"><expr pos:start="75:5" pos:end="75:24"><call pos:start="75:5" pos:end="75:24"><name pos:start="75:5" pos:end="75:13">skip_bits</name><argument_list pos:start="75:14" pos:end="75:24">(<argument pos:start="75:15" pos:end="75:20"><expr pos:start="75:15" pos:end="75:20"><operator pos:start="75:15" pos:end="75:15">&amp;</operator><name pos:start="75:16" pos:end="75:20"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:20">gb</name></name></expr></argument>, <argument pos:start="75:23" pos:end="75:23"><expr pos:start="75:23" pos:end="75:23"><literal type="number" pos:start="75:23" pos:end="75:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><call pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:12">get_bits</name><argument_list pos:start="77:13" pos:end="77:23">(<argument pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:19"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:19"><name pos:start="77:15" pos:end="77:15">s</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">gb</name></name></expr></argument>, <argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="77:26" pos:end="77:34">/* ap3 */</comment>

    

    <comment type="block" pos:start="81:5" pos:end="81:19">/* init size */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:16"><expr pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:9">width</name> <operator pos:start="83:11" pos:end="83:11">=</operator> <literal type="number" pos:start="83:13" pos:end="83:15">720</literal></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="105:5"><if pos:start="85:5" pos:end="95:5">if <condition pos:start="85:8" pos:end="85:12">(<expr pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:11">dsf</name></expr>)</condition> <block pos:start="85:14" pos:end="95:5">{<block_content pos:start="87:9" pos:end="93:25">

        <expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:13">avctx</name><operator pos:start="87:14" pos:end="87:15">-&gt;</operator><name pos:start="87:16" pos:end="87:25">frame_rate</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <literal type="number" pos:start="87:29" pos:end="87:30">25</literal> <operator pos:start="87:32" pos:end="87:32">*</operator> <name pos:start="87:34" pos:end="87:48">FRAME_RATE_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:37"><expr pos:start="89:9" pos:end="89:36"><name pos:start="89:9" pos:end="89:19">packet_size</name> <operator pos:start="89:21" pos:end="89:21">=</operator> <name pos:start="89:23" pos:end="89:36">PAL_FRAME_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:21"><expr pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:14">height</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:20">576</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:25"><expr pos:start="93:9" pos:end="93:24"><name pos:start="93:9" pos:end="93:19">nb_dif_segs</name> <operator pos:start="93:21" pos:end="93:21">=</operator> <literal type="number" pos:start="93:23" pos:end="93:24">12</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="105:5">else <block pos:start="95:12" pos:end="105:5">{<block_content pos:start="97:9" pos:end="103:25">

        <expr_stmt pos:start="97:9" pos:end="97:49"><expr pos:start="97:9" pos:end="97:48"><name pos:start="97:9" pos:end="97:25"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:25">frame_rate</name></name> <operator pos:start="97:27" pos:end="97:27">=</operator> <literal type="number" pos:start="97:29" pos:end="97:30">30</literal> <operator pos:start="97:32" pos:end="97:32">*</operator> <name pos:start="97:34" pos:end="97:48">FRAME_RATE_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:38"><expr pos:start="99:9" pos:end="99:37"><name pos:start="99:9" pos:end="99:19">packet_size</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <name pos:start="99:23" pos:end="99:37">NTSC_FRAME_SIZE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:21"><expr pos:start="101:9" pos:end="101:20"><name pos:start="101:9" pos:end="101:14">height</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <literal type="number" pos:start="101:18" pos:end="101:20">480</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:25"><expr pos:start="103:9" pos:end="103:24"><name pos:start="103:9" pos:end="103:19">nb_dif_segs</name> <operator pos:start="103:21" pos:end="103:21">=</operator> <literal type="number" pos:start="103:23" pos:end="103:24">10</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="107:5" pos:end="107:50">/* NOTE: we only accept several full frames */</comment>

    <if_stmt pos:start="109:5" pos:end="111:18"><if pos:start="109:5" pos:end="111:18">if <condition pos:start="109:8" pos:end="109:31">(<expr pos:start="109:9" pos:end="109:30"><name pos:start="109:9" pos:end="109:16">buf_size</name> <operator pos:start="109:18" pos:end="109:18">&lt;</operator> <name pos:start="109:20" pos:end="109:30">packet_size</name></expr>)</condition><block type="pseudo" pos:start="111:9" pos:end="111:18"><block_content pos:start="111:9" pos:end="111:18">

        <return pos:start="111:9" pos:end="111:18">return <expr pos:start="111:16" pos:end="111:17"><operator pos:start="111:16" pos:end="111:16">-</operator><literal type="number" pos:start="111:17" pos:end="111:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    

    <comment type="block" pos:start="115:5" pos:end="117:16">/* XXX: is it correct to assume that 420 is always used in PAL

       mode ? */</comment>

    <expr_stmt pos:start="119:5" pos:end="119:27"><expr pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:19"><name pos:start="119:5" pos:end="119:5">s</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:19">sampling_411</name></name> <operator pos:start="119:21" pos:end="119:21">=</operator> <operator pos:start="119:23" pos:end="119:23">!</operator><name pos:start="119:24" pos:end="119:26">dsf</name></expr>;</expr_stmt>

    <if_stmt pos:start="121:5" pos:end="133:5"><if pos:start="121:5" pos:end="127:5">if <condition pos:start="121:8" pos:end="121:24">(<expr pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:23"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:23">sampling_411</name></name></expr>)</condition> <block pos:start="121:26" pos:end="127:5">{<block_content pos:start="123:9" pos:end="125:41">

        <expr_stmt pos:start="123:9" pos:end="123:34"><expr pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:18">mb_pos_ptr</name> <operator pos:start="123:20" pos:end="123:20">=</operator> <name pos:start="123:22" pos:end="123:33">dv_place_411</name></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:41"><expr pos:start="125:9" pos:end="125:40"><name pos:start="125:9" pos:end="125:22"><name pos:start="125:9" pos:end="125:13">avctx</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:22">pix_fmt</name></name> <operator pos:start="125:24" pos:end="125:24">=</operator> <name pos:start="125:26" pos:end="125:40">PIX_FMT_YUV411P</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="127:7" pos:end="133:5">else <block pos:start="127:12" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:41">

        <expr_stmt pos:start="129:9" pos:end="129:34"><expr pos:start="129:9" pos:end="129:33"><name pos:start="129:9" pos:end="129:18">mb_pos_ptr</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <name pos:start="129:22" pos:end="129:33">dv_place_420</name></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:41"><expr pos:start="131:9" pos:end="131:40"><name pos:start="131:9" pos:end="131:22"><name pos:start="131:9" pos:end="131:13">avctx</name><operator pos:start="131:14" pos:end="131:15">-&gt;</operator><name pos:start="131:16" pos:end="131:22">pix_fmt</name></name> <operator pos:start="131:24" pos:end="131:24">=</operator> <name pos:start="131:26" pos:end="131:40">PIX_FMT_YUV420P</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:25"><expr pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:16"><name pos:start="137:5" pos:end="137:9">avctx</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:16">width</name></name> <operator pos:start="137:18" pos:end="137:18">=</operator> <name pos:start="137:20" pos:end="137:24">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:27"><expr pos:start="139:5" pos:end="139:26"><name pos:start="139:5" pos:end="139:17"><name pos:start="139:5" pos:end="139:9">avctx</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:17">height</name></name> <operator pos:start="139:19" pos:end="139:19">=</operator> <name pos:start="139:21" pos:end="139:26">height</name></expr>;</expr_stmt>



    <if_stmt pos:start="143:5" pos:end="159:5"><if pos:start="143:5" pos:end="159:5">if <condition pos:start="143:8" pos:end="143:68">(<expr pos:start="143:9" pos:end="143:67"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:13">avctx</name><operator pos:start="143:14" pos:end="143:15">-&gt;</operator><name pos:start="143:16" pos:end="143:20">flags</name></name> <operator pos:start="143:22" pos:end="143:22">&amp;</operator> <name pos:start="143:24" pos:end="143:37">CODEC_FLAG_DR1</name> <operator pos:start="143:39" pos:end="143:40">&amp;&amp;</operator> <name pos:start="143:42" pos:end="143:67"><name pos:start="143:42" pos:end="143:46">avctx</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:67">get_buffer_callback</name></name></expr>)</condition>

    <block pos:start="145:5" pos:end="159:5">{<block_content pos:start="147:9" pos:end="157:9">

	<expr_stmt pos:start="147:9" pos:end="147:22"><expr pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:16">width</name></name> <operator pos:start="147:18" pos:end="147:18">=</operator> <operator pos:start="147:20" pos:end="147:20">-</operator><literal type="number" pos:start="147:21" pos:end="147:21">1</literal></expr>;</expr_stmt>

	<expr_stmt pos:start="149:9" pos:end="149:76"><expr pos:start="149:9" pos:end="149:75"><name pos:start="149:9" pos:end="149:27"><name pos:start="149:9" pos:end="149:13">avctx</name><operator pos:start="149:14" pos:end="149:15">-&gt;</operator><name pos:start="149:16" pos:end="149:24">dr_buffer</name><index pos:start="149:25" pos:end="149:27">[<expr pos:start="149:26" pos:end="149:26"><literal type="number" pos:start="149:26" pos:end="149:26">0</literal></expr>]</index></name> <operator pos:start="149:29" pos:end="149:29">=</operator> <name pos:start="149:31" pos:end="149:49"><name pos:start="149:31" pos:end="149:35">avctx</name><operator pos:start="149:36" pos:end="149:37">-&gt;</operator><name pos:start="149:38" pos:end="149:46">dr_buffer</name><index pos:start="149:47" pos:end="149:49">[<expr pos:start="149:48" pos:end="149:48"><literal type="number" pos:start="149:48" pos:end="149:48">1</literal></expr>]</index></name> <operator pos:start="149:51" pos:end="149:51">=</operator> <name pos:start="149:53" pos:end="149:71"><name pos:start="149:53" pos:end="149:57">avctx</name><operator pos:start="149:58" pos:end="149:59">-&gt;</operator><name pos:start="149:60" pos:end="149:68">dr_buffer</name><index pos:start="149:69" pos:end="149:71">[<expr pos:start="149:70" pos:end="149:70"><literal type="number" pos:start="149:70" pos:end="149:70">2</literal></expr>]</index></name> <operator pos:start="149:73" pos:end="149:73">=</operator> <literal type="number" pos:start="149:75" pos:end="149:75">0</literal></expr>;</expr_stmt>

	<if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if<condition pos:start="151:11" pos:end="151:72">(<expr pos:start="151:12" pos:end="151:71"><call pos:start="151:12" pos:end="151:67"><name pos:start="151:12" pos:end="151:37"><name pos:start="151:12" pos:end="151:16">avctx</name><operator pos:start="151:17" pos:end="151:18">-&gt;</operator><name pos:start="151:19" pos:end="151:37">get_buffer_callback</name></name><argument_list pos:start="151:38" pos:end="151:67">(<argument pos:start="151:39" pos:end="151:43"><expr pos:start="151:39" pos:end="151:43"><name pos:start="151:39" pos:end="151:43">avctx</name></expr></argument>, <argument pos:start="151:46" pos:end="151:50"><expr pos:start="151:46" pos:end="151:50"><name pos:start="151:46" pos:end="151:50">width</name></expr></argument>, <argument pos:start="151:53" pos:end="151:58"><expr pos:start="151:53" pos:end="151:58"><name pos:start="151:53" pos:end="151:58">height</name></expr></argument>, <argument pos:start="151:61" pos:end="151:66"><expr pos:start="151:61" pos:end="151:66"><name pos:start="151:61" pos:end="151:66">I_TYPE</name></expr></argument>)</argument_list></call> <operator pos:start="151:69" pos:end="151:69">&lt;</operator> <literal type="number" pos:start="151:71" pos:end="151:71">0</literal></expr>)</condition><block pos:start="151:73" pos:end="157:9">{<block_content pos:start="153:13" pos:end="155:22">

	    <expr_stmt pos:start="153:13" pos:end="153:53"><expr pos:start="153:13" pos:end="153:52"><call pos:start="153:13" pos:end="153:52"><name pos:start="153:13" pos:end="153:19">fprintf</name><argument_list pos:start="153:20" pos:end="153:52">(<argument pos:start="153:21" pos:end="153:26"><expr pos:start="153:21" pos:end="153:26"><name pos:start="153:21" pos:end="153:26">stderr</name></expr></argument>, <argument pos:start="153:29" pos:end="153:51"><expr pos:start="153:29" pos:end="153:51"><literal type="string" pos:start="153:29" pos:end="153:51">"get_buffer() failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <return pos:start="155:13" pos:end="155:22">return <expr pos:start="155:20" pos:end="155:21"><operator pos:start="155:20" pos:end="155:20">-</operator><literal type="number" pos:start="155:21" pos:end="155:21">1</literal></expr>;</return>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="163:5" pos:end="163:37">/* (re)alloc picture if needed */</comment>

    <if_stmt pos:start="165:5" pos:end="217:5"><if pos:start="165:5" pos:end="217:5">if <condition pos:start="165:8" pos:end="165:49">(<expr pos:start="165:9" pos:end="165:48"><name pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:16">width</name></name> <operator pos:start="165:18" pos:end="165:19">!=</operator> <name pos:start="165:21" pos:end="165:25">width</name> <operator pos:start="165:27" pos:end="165:28">||</operator> <name pos:start="165:30" pos:end="165:38"><name pos:start="165:30" pos:end="165:30">s</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:38">height</name></name> <operator pos:start="165:40" pos:end="165:41">!=</operator> <name pos:start="165:43" pos:end="165:48">height</name></expr>)</condition> <block pos:start="165:51" pos:end="217:5">{<block_content pos:start="167:9" pos:end="215:27">

	<if_stmt pos:start="167:9" pos:end="177:13"><if pos:start="167:9" pos:end="177:13">if <condition pos:start="167:12" pos:end="167:45">(<expr pos:start="167:13" pos:end="167:44"><operator pos:start="167:13" pos:end="167:13">!</operator><operator pos:start="167:14" pos:end="167:14">(</operator><name pos:start="167:15" pos:end="167:26"><name pos:start="167:15" pos:end="167:19">avctx</name><operator pos:start="167:20" pos:end="167:21">-&gt;</operator><name pos:start="167:22" pos:end="167:26">flags</name></name> <operator pos:start="167:28" pos:end="167:28">&amp;</operator> <name pos:start="167:30" pos:end="167:43">CODEC_FLAG_DR1</name><operator pos:start="167:44" pos:end="167:44">)</operator></expr>)</condition><block type="pseudo" pos:start="169:13" pos:end="177:13"><block_content pos:start="169:13" pos:end="177:13">

	    <for pos:start="169:13" pos:end="177:13">for<control pos:start="169:16" pos:end="169:28">(<init pos:start="169:17" pos:end="169:20"><expr pos:start="169:17" pos:end="169:19"><name pos:start="169:17" pos:end="169:17">i</name><operator pos:start="169:18" pos:end="169:18">=</operator><literal type="number" pos:start="169:19" pos:end="169:19">0</literal></expr>;</init><condition pos:start="169:21" pos:end="169:24"><expr pos:start="169:21" pos:end="169:23"><name pos:start="169:21" pos:end="169:21">i</name><operator pos:start="169:22" pos:end="169:22">&lt;</operator><literal type="number" pos:start="169:23" pos:end="169:23">3</literal></expr>;</condition><incr pos:start="169:25" pos:end="169:27"><expr pos:start="169:25" pos:end="169:27"><name pos:start="169:25" pos:end="169:25">i</name><operator pos:start="169:26" pos:end="169:27">++</operator></expr></incr>)</control> <block pos:start="169:30" pos:end="177:13">{<block_content pos:start="171:17" pos:end="175:40">

		<if_stmt pos:start="171:17" pos:end="173:53"><if pos:start="171:17" pos:end="173:53">if <condition pos:start="171:20" pos:end="171:65">(<expr pos:start="171:21" pos:end="171:64"><name pos:start="171:21" pos:end="171:39"><name pos:start="171:21" pos:end="171:25">avctx</name><operator pos:start="171:26" pos:end="171:27">-&gt;</operator><name pos:start="171:28" pos:end="171:36">dr_buffer</name><index pos:start="171:37" pos:end="171:39">[<expr pos:start="171:38" pos:end="171:38"><name pos:start="171:38" pos:end="171:38">i</name></expr>]</index></name> <operator pos:start="171:41" pos:end="171:42">!=</operator> <name pos:start="171:44" pos:end="171:64"><name pos:start="171:44" pos:end="171:44">s</name><operator pos:start="171:45" pos:end="171:46">-&gt;</operator><name pos:start="171:47" pos:end="171:61">current_picture</name><index pos:start="171:62" pos:end="171:64">[<expr pos:start="171:63" pos:end="171:63"><name pos:start="171:63" pos:end="171:63">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="173:21" pos:end="173:53"><block_content pos:start="173:21" pos:end="173:53">

		    <expr_stmt pos:start="173:21" pos:end="173:53"><expr pos:start="173:21" pos:end="173:52"><call pos:start="173:21" pos:end="173:52"><name pos:start="173:21" pos:end="173:28">av_freep</name><argument_list pos:start="173:29" pos:end="173:52">(<argument pos:start="173:30" pos:end="173:51"><expr pos:start="173:30" pos:end="173:51"><operator pos:start="173:30" pos:end="173:30">&amp;</operator><name pos:start="173:31" pos:end="173:51"><name pos:start="173:31" pos:end="173:31">s</name><operator pos:start="173:32" pos:end="173:33">-&gt;</operator><name pos:start="173:34" pos:end="173:48">current_picture</name><index pos:start="173:49" pos:end="173:51">[<expr pos:start="173:50" pos:end="173:50"><name pos:start="173:50" pos:end="173:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="175:17" pos:end="175:40"><expr pos:start="175:17" pos:end="175:39"><name pos:start="175:17" pos:end="175:35"><name pos:start="175:17" pos:end="175:21">avctx</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:32">dr_buffer</name><index pos:start="175:33" pos:end="175:35">[<expr pos:start="175:34" pos:end="175:34"><name pos:start="175:34" pos:end="175:34">i</name></expr>]</index></name> <operator pos:start="175:37" pos:end="175:37">=</operator> <literal type="number" pos:start="175:39" pos:end="175:39">0</literal></expr>;</expr_stmt>

	    </block_content>}</block></for></block_content></block></if></if_stmt>



        <for pos:start="181:9" pos:end="211:9">for<control pos:start="181:12" pos:end="181:24">(<init pos:start="181:13" pos:end="181:16"><expr pos:start="181:13" pos:end="181:15"><name pos:start="181:13" pos:end="181:13">i</name><operator pos:start="181:14" pos:end="181:14">=</operator><literal type="number" pos:start="181:15" pos:end="181:15">0</literal></expr>;</init><condition pos:start="181:17" pos:end="181:20"><expr pos:start="181:17" pos:end="181:19"><name pos:start="181:17" pos:end="181:17">i</name><operator pos:start="181:18" pos:end="181:18">&lt;</operator><literal type="number" pos:start="181:19" pos:end="181:19">3</literal></expr>;</condition><incr pos:start="181:21" pos:end="181:23"><expr pos:start="181:21" pos:end="181:23"><name pos:start="181:21" pos:end="181:21">i</name><operator pos:start="181:22" pos:end="181:23">++</operator></expr></incr>)</control> <block pos:start="181:26" pos:end="211:9">{<block_content pos:start="183:13" pos:end="209:26">

	    <if_stmt pos:start="183:13" pos:end="205:13"><if pos:start="183:13" pos:end="189:13">if <condition pos:start="183:16" pos:end="183:36">(<expr pos:start="183:17" pos:end="183:35"><name pos:start="183:17" pos:end="183:35"><name pos:start="183:17" pos:end="183:21">avctx</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:32">dr_buffer</name><index pos:start="183:33" pos:end="183:35">[<expr pos:start="183:34" pos:end="183:34"><name pos:start="183:34" pos:end="183:34">i</name></expr>]</index></name></expr>)</condition> <block pos:start="183:38" pos:end="189:13">{<block_content pos:start="185:17" pos:end="187:82">

		<expr_stmt pos:start="185:17" pos:end="185:60"><expr pos:start="185:17" pos:end="185:59"><name pos:start="185:17" pos:end="185:37"><name pos:start="185:17" pos:end="185:17">s</name><operator pos:start="185:18" pos:end="185:19">-&gt;</operator><name pos:start="185:20" pos:end="185:34">current_picture</name><index pos:start="185:35" pos:end="185:37">[<expr pos:start="185:36" pos:end="185:36"><name pos:start="185:36" pos:end="185:36">i</name></expr>]</index></name> <operator pos:start="185:39" pos:end="185:39">=</operator> <name pos:start="185:41" pos:end="185:59"><name pos:start="185:41" pos:end="185:45">avctx</name><operator pos:start="185:46" pos:end="185:47">-&gt;</operator><name pos:start="185:48" pos:end="185:56">dr_buffer</name><index pos:start="185:57" pos:end="185:59">[<expr pos:start="185:58" pos:end="185:58"><name pos:start="185:58" pos:end="185:58">i</name></expr>]</index></name></expr>;</expr_stmt>

		<expr_stmt pos:start="187:17" pos:end="187:82"><expr pos:start="187:17" pos:end="187:81"><name pos:start="187:17" pos:end="187:30"><name pos:start="187:17" pos:end="187:17">s</name><operator pos:start="187:18" pos:end="187:19">-&gt;</operator><name pos:start="187:20" pos:end="187:27">linesize</name><index pos:start="187:28" pos:end="187:30">[<expr pos:start="187:29" pos:end="187:29"><name pos:start="187:29" pos:end="187:29">i</name></expr>]</index></name> <operator pos:start="187:32" pos:end="187:32">=</operator> <ternary pos:start="187:34" pos:end="187:81"><condition pos:start="187:34" pos:end="187:43"><expr pos:start="187:34" pos:end="187:41"><operator pos:start="187:34" pos:end="187:34">(</operator><name pos:start="187:35" pos:end="187:35">i</name> <operator pos:start="187:37" pos:end="187:38">==</operator> <literal type="number" pos:start="187:40" pos:end="187:40">0</literal><operator pos:start="187:41" pos:end="187:41">)</operator></expr> ?</condition><then pos:start="187:45" pos:end="187:60"> <expr pos:start="187:45" pos:end="187:60"><name pos:start="187:45" pos:end="187:60"><name pos:start="187:45" pos:end="187:49">avctx</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:60">dr_stride</name></name></expr> </then><else pos:start="187:62" pos:end="187:81">: <expr pos:start="187:64" pos:end="187:81"><name pos:start="187:64" pos:end="187:81"><name pos:start="187:64" pos:end="187:68">avctx</name><operator pos:start="187:69" pos:end="187:70">-&gt;</operator><name pos:start="187:71" pos:end="187:81">dr_uvstride</name></name></expr></else></ternary></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="189:15" pos:end="205:13">else <block pos:start="189:20" pos:end="205:13">{<block_content pos:start="191:17" pos:end="203:56">

		<expr_stmt pos:start="191:17" pos:end="191:38"><expr pos:start="191:17" pos:end="191:37"><name pos:start="191:17" pos:end="191:20">size</name> <operator pos:start="191:22" pos:end="191:22">=</operator> <name pos:start="191:24" pos:end="191:28">width</name> <operator pos:start="191:30" pos:end="191:30">*</operator> <name pos:start="191:32" pos:end="191:37">height</name></expr>;</expr_stmt>

		<expr_stmt pos:start="193:17" pos:end="193:39"><expr pos:start="193:17" pos:end="193:38"><name pos:start="193:17" pos:end="193:30"><name pos:start="193:17" pos:end="193:17">s</name><operator pos:start="193:18" pos:end="193:19">-&gt;</operator><name pos:start="193:20" pos:end="193:27">linesize</name><index pos:start="193:28" pos:end="193:30">[<expr pos:start="193:29" pos:end="193:29"><name pos:start="193:29" pos:end="193:29">i</name></expr>]</index></name> <operator pos:start="193:32" pos:end="193:32">=</operator> <name pos:start="193:34" pos:end="193:38">width</name></expr>;</expr_stmt>

		<if_stmt pos:start="195:17" pos:end="201:17"><if pos:start="195:17" pos:end="201:17">if <condition pos:start="195:20" pos:end="195:27">(<expr pos:start="195:21" pos:end="195:26"><name pos:start="195:21" pos:end="195:21">i</name> <operator pos:start="195:23" pos:end="195:24">&gt;=</operator> <literal type="number" pos:start="195:26" pos:end="195:26">1</literal></expr>)</condition> <block pos:start="195:29" pos:end="201:17">{<block_content pos:start="197:21" pos:end="199:63">

		    <expr_stmt pos:start="197:21" pos:end="197:31"><expr pos:start="197:21" pos:end="197:30"><name pos:start="197:21" pos:end="197:24">size</name> <operator pos:start="197:26" pos:end="197:28">&gt;&gt;=</operator> <literal type="number" pos:start="197:30" pos:end="197:30">2</literal></expr>;</expr_stmt>

		    <expr_stmt pos:start="199:21" pos:end="199:63"><expr pos:start="199:21" pos:end="199:62"><name pos:start="199:21" pos:end="199:34"><name pos:start="199:21" pos:end="199:21">s</name><operator pos:start="199:22" pos:end="199:23">-&gt;</operator><name pos:start="199:24" pos:end="199:31">linesize</name><index pos:start="199:32" pos:end="199:34">[<expr pos:start="199:33" pos:end="199:33"><name pos:start="199:33" pos:end="199:33">i</name></expr>]</index></name> <operator pos:start="199:36" pos:end="199:38">&gt;&gt;=</operator> <ternary pos:start="199:40" pos:end="199:62"><condition pos:start="199:40" pos:end="199:56"><expr pos:start="199:40" pos:end="199:54"><name pos:start="199:40" pos:end="199:54"><name pos:start="199:40" pos:end="199:40">s</name><operator pos:start="199:41" pos:end="199:42">-&gt;</operator><name pos:start="199:43" pos:end="199:54">sampling_411</name></name></expr> ?</condition><then pos:start="199:58" pos:end="199:58"> <expr pos:start="199:58" pos:end="199:58"><literal type="number" pos:start="199:58" pos:end="199:58">2</literal></expr> </then><else pos:start="199:60" pos:end="199:62">: <expr pos:start="199:62" pos:end="199:62"><literal type="number" pos:start="199:62" pos:end="199:62">1</literal></expr></else></ternary></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

		<expr_stmt pos:start="203:17" pos:end="203:56"><expr pos:start="203:17" pos:end="203:55"><name pos:start="203:17" pos:end="203:37"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:34">current_picture</name><index pos:start="203:35" pos:end="203:37">[<expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">i</name></expr>]</index></name> <operator pos:start="203:39" pos:end="203:39">=</operator> <call pos:start="203:41" pos:end="203:55"><name pos:start="203:41" pos:end="203:49">av_malloc</name><argument_list pos:start="203:50" pos:end="203:55">(<argument pos:start="203:51" pos:end="203:54"><expr pos:start="203:51" pos:end="203:54"><name pos:start="203:51" pos:end="203:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="207:13" pos:end="209:26"><if pos:start="207:13" pos:end="209:26">if <condition pos:start="207:16" pos:end="207:39">(<expr pos:start="207:17" pos:end="207:38"><operator pos:start="207:17" pos:end="207:17">!</operator><name pos:start="207:18" pos:end="207:38"><name pos:start="207:18" pos:end="207:18">s</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:35">current_picture</name><index pos:start="207:36" pos:end="207:38">[<expr pos:start="207:37" pos:end="207:37"><name pos:start="207:37" pos:end="207:37">i</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="209:17" pos:end="209:26"><block_content pos:start="209:17" pos:end="209:26">

                <return pos:start="209:17" pos:end="209:26">return <expr pos:start="209:24" pos:end="209:25"><operator pos:start="209:24" pos:end="209:24">-</operator><literal type="number" pos:start="209:25" pos:end="209:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="213:9" pos:end="213:25"><expr pos:start="213:9" pos:end="213:24"><name pos:start="213:9" pos:end="213:16"><name pos:start="213:9" pos:end="213:9">s</name><operator pos:start="213:10" pos:end="213:11">-&gt;</operator><name pos:start="213:12" pos:end="213:16">width</name></name> <operator pos:start="213:18" pos:end="213:18">=</operator> <name pos:start="213:20" pos:end="213:24">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:27"><expr pos:start="215:9" pos:end="215:26"><name pos:start="215:9" pos:end="215:17"><name pos:start="215:9" pos:end="215:9">s</name><operator pos:start="215:10" pos:end="215:11">-&gt;</operator><name pos:start="215:12" pos:end="215:17">height</name></name> <operator pos:start="215:19" pos:end="215:19">=</operator> <name pos:start="215:21" pos:end="215:26">height</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="221:5" pos:end="221:30">/* for each DIF segment */</comment>

    <expr_stmt pos:start="223:5" pos:end="223:18"><expr pos:start="223:5" pos:end="223:17"><name pos:start="223:5" pos:end="223:11">buf_ptr</name> <operator pos:start="223:13" pos:end="223:13">=</operator> <name pos:start="223:15" pos:end="223:17">buf</name></expr>;</expr_stmt>

    <for pos:start="225:5" pos:end="249:5">for <control pos:start="225:9" pos:end="225:40">(<init pos:start="225:10" pos:end="225:16"><expr pos:start="225:10" pos:end="225:15"><name pos:start="225:10" pos:end="225:11">ds</name> <operator pos:start="225:13" pos:end="225:13">=</operator> <literal type="number" pos:start="225:15" pos:end="225:15">0</literal></expr>;</init> <condition pos:start="225:18" pos:end="225:34"><expr pos:start="225:18" pos:end="225:33"><name pos:start="225:18" pos:end="225:19">ds</name> <operator pos:start="225:21" pos:end="225:21">&lt;</operator> <name pos:start="225:23" pos:end="225:33">nb_dif_segs</name></expr>;</condition> <incr pos:start="225:36" pos:end="225:39"><expr pos:start="225:36" pos:end="225:39"><name pos:start="225:36" pos:end="225:37">ds</name><operator pos:start="225:38" pos:end="225:39">++</operator></expr></incr>)</control> <block pos:start="225:42" pos:end="249:5">{<block_content pos:start="227:9" pos:end="247:9">

        <expr_stmt pos:start="227:9" pos:end="227:26"><expr pos:start="227:9" pos:end="227:25"><name pos:start="227:9" pos:end="227:15">buf_ptr</name> <operator pos:start="227:17" pos:end="227:18">+=</operator> <literal type="number" pos:start="227:20" pos:end="227:20">6</literal> <operator pos:start="227:22" pos:end="227:22">*</operator> <literal type="number" pos:start="227:24" pos:end="227:25">80</literal></expr>;</expr_stmt> <comment type="block" pos:start="227:28" pos:end="227:56">/* skip DIF segment header */</comment>

        

        <for pos:start="231:9" pos:end="247:9">for<control pos:start="231:12" pos:end="231:34">(<init pos:start="231:13" pos:end="231:19"><expr pos:start="231:13" pos:end="231:18"><name pos:start="231:13" pos:end="231:14">vs</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <literal type="number" pos:start="231:18" pos:end="231:18">0</literal></expr>;</init> <condition pos:start="231:21" pos:end="231:28"><expr pos:start="231:21" pos:end="231:27"><name pos:start="231:21" pos:end="231:22">vs</name> <operator pos:start="231:24" pos:end="231:24">&lt;</operator> <literal type="number" pos:start="231:26" pos:end="231:27">27</literal></expr>;</condition> <incr pos:start="231:30" pos:end="231:33"><expr pos:start="231:30" pos:end="231:33"><name pos:start="231:30" pos:end="231:31">vs</name><operator pos:start="231:32" pos:end="231:33">++</operator></expr></incr>)</control> <block pos:start="231:36" pos:end="247:9">{<block_content pos:start="233:13" pos:end="245:28">

            <if_stmt pos:start="233:13" pos:end="239:13"><if pos:start="233:13" pos:end="239:13">if <condition pos:start="233:16" pos:end="233:30">(<expr pos:start="233:17" pos:end="233:29"><operator pos:start="233:17" pos:end="233:17">(</operator><name pos:start="233:18" pos:end="233:19">vs</name> <operator pos:start="233:21" pos:end="233:21">%</operator> <literal type="number" pos:start="233:23" pos:end="233:23">3</literal><operator pos:start="233:24" pos:end="233:24">)</operator> <operator pos:start="233:26" pos:end="233:27">==</operator> <literal type="number" pos:start="233:29" pos:end="233:29">0</literal></expr>)</condition> <block pos:start="233:32" pos:end="239:13">{<block_content pos:start="237:17" pos:end="237:30">

                <comment type="block" pos:start="235:17" pos:end="235:38">/* skip audio block */</comment>

                <expr_stmt pos:start="237:17" pos:end="237:30"><expr pos:start="237:17" pos:end="237:29"><name pos:start="237:17" pos:end="237:23">buf_ptr</name> <operator pos:start="237:25" pos:end="237:26">+=</operator> <literal type="number" pos:start="237:28" pos:end="237:29">80</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="241:13" pos:end="241:60"><expr pos:start="241:13" pos:end="241:59"><call pos:start="241:13" pos:end="241:59"><name pos:start="241:13" pos:end="241:35">dv_decode_video_segment</name><argument_list pos:start="241:36" pos:end="241:59">(<argument pos:start="241:37" pos:end="241:37"><expr pos:start="241:37" pos:end="241:37"><name pos:start="241:37" pos:end="241:37">s</name></expr></argument>, <argument pos:start="241:40" pos:end="241:46"><expr pos:start="241:40" pos:end="241:46"><name pos:start="241:40" pos:end="241:46">buf_ptr</name></expr></argument>, <argument pos:start="241:49" pos:end="241:58"><expr pos:start="241:49" pos:end="241:58"><name pos:start="241:49" pos:end="241:58">mb_pos_ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="243:13" pos:end="243:30"><expr pos:start="243:13" pos:end="243:29"><name pos:start="243:13" pos:end="243:19">buf_ptr</name> <operator pos:start="243:21" pos:end="243:22">+=</operator> <literal type="number" pos:start="243:24" pos:end="243:24">5</literal> <operator pos:start="243:26" pos:end="243:26">*</operator> <literal type="number" pos:start="243:28" pos:end="243:29">80</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:28"><expr pos:start="245:13" pos:end="245:27"><name pos:start="245:13" pos:end="245:22">mb_pos_ptr</name> <operator pos:start="245:24" pos:end="245:25">+=</operator> <literal type="number" pos:start="245:27" pos:end="245:27">5</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="253:5" pos:end="253:13"><expr pos:start="253:5" pos:end="253:12"><call pos:start="253:5" pos:end="253:12"><name pos:start="253:5" pos:end="253:10">emms_c</name><argument_list pos:start="253:11" pos:end="253:12">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="257:5" pos:end="257:22">/* return image */</comment>

    <expr_stmt pos:start="259:5" pos:end="259:35"><expr pos:start="259:5" pos:end="259:34"><operator pos:start="259:5" pos:end="259:5">*</operator><name pos:start="259:6" pos:end="259:14">data_size</name> <operator pos:start="259:16" pos:end="259:16">=</operator> <sizeof pos:start="259:18" pos:end="259:34">sizeof<argument_list pos:start="259:24" pos:end="259:34">(<argument pos:start="259:25" pos:end="259:33"><expr pos:start="259:25" pos:end="259:33"><name pos:start="259:25" pos:end="259:33">AVPicture</name></expr></argument>)</argument_list></sizeof></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:19"><expr pos:start="261:5" pos:end="261:18"><name pos:start="261:5" pos:end="261:11">picture</name> <operator pos:start="261:13" pos:end="261:13">=</operator> <name pos:start="261:15" pos:end="261:18">data</name></expr>;</expr_stmt>

    <for pos:start="263:5" pos:end="269:5">for<control pos:start="263:8" pos:end="263:20">(<init pos:start="263:9" pos:end="263:12"><expr pos:start="263:9" pos:end="263:11"><name pos:start="263:9" pos:end="263:9">i</name><operator pos:start="263:10" pos:end="263:10">=</operator><literal type="number" pos:start="263:11" pos:end="263:11">0</literal></expr>;</init><condition pos:start="263:13" pos:end="263:16"><expr pos:start="263:13" pos:end="263:15"><name pos:start="263:13" pos:end="263:13">i</name><operator pos:start="263:14" pos:end="263:14">&lt;</operator><literal type="number" pos:start="263:15" pos:end="263:15">3</literal></expr>;</condition><incr pos:start="263:17" pos:end="263:19"><expr pos:start="263:17" pos:end="263:19"><name pos:start="263:17" pos:end="263:17">i</name><operator pos:start="263:18" pos:end="263:19">++</operator></expr></incr>)</control> <block pos:start="263:22" pos:end="269:5">{<block_content pos:start="265:9" pos:end="267:46">

        <expr_stmt pos:start="265:9" pos:end="265:49"><expr pos:start="265:9" pos:end="265:48"><name pos:start="265:9" pos:end="265:24"><name pos:start="265:9" pos:end="265:15">picture</name><operator pos:start="265:16" pos:end="265:17">-&gt;</operator><name pos:start="265:18" pos:end="265:21">data</name><index pos:start="265:22" pos:end="265:24">[<expr pos:start="265:23" pos:end="265:23"><name pos:start="265:23" pos:end="265:23">i</name></expr>]</index></name> <operator pos:start="265:26" pos:end="265:26">=</operator> <name pos:start="265:28" pos:end="265:48"><name pos:start="265:28" pos:end="265:28">s</name><operator pos:start="265:29" pos:end="265:30">-&gt;</operator><name pos:start="265:31" pos:end="265:45">current_picture</name><index pos:start="265:46" pos:end="265:48">[<expr pos:start="265:47" pos:end="265:47"><name pos:start="265:47" pos:end="265:47">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="267:9" pos:end="267:46"><expr pos:start="267:9" pos:end="267:45"><name pos:start="267:9" pos:end="267:28"><name pos:start="267:9" pos:end="267:15">picture</name><operator pos:start="267:16" pos:end="267:17">-&gt;</operator><name pos:start="267:18" pos:end="267:25">linesize</name><index pos:start="267:26" pos:end="267:28">[<expr pos:start="267:27" pos:end="267:27"><name pos:start="267:27" pos:end="267:27">i</name></expr>]</index></name> <operator pos:start="267:30" pos:end="267:30">=</operator> <name pos:start="267:32" pos:end="267:45"><name pos:start="267:32" pos:end="267:32">s</name><operator pos:start="267:33" pos:end="267:34">-&gt;</operator><name pos:start="267:35" pos:end="267:42">linesize</name><index pos:start="267:43" pos:end="267:45">[<expr pos:start="267:44" pos:end="267:44"><name pos:start="267:44" pos:end="267:44">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="271:5" pos:end="271:23">return <expr pos:start="271:12" pos:end="271:22"><name pos:start="271:12" pos:end="271:22">packet_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
