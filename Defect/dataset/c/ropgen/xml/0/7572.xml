<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7572.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">raw_aio_remove</name><parameter_list pos:start="1:27" pos:end="1:41">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:37"><name pos:start="1:28" pos:end="1:35">RawAIOCB</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:5">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:12">RawAIOCB</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier><modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:19">pacb</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:44">/* remove the callback from the queue */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:8">pacb</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <operator pos:start="11:12" pos:end="11:12">&amp;</operator><name pos:start="11:13" pos:end="11:38"><name pos:start="11:13" pos:end="11:27">posix_aio_state</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:38">first_aio</name></name></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="33:5">for<control pos:start="13:8" pos:end="13:11">(<init pos:start="13:9" pos:end="13:9">;</init><condition pos:start="13:10" pos:end="13:10">;</condition><incr/>)</control> <block pos:start="13:13" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:30">

        <if_stmt pos:start="15:9" pos:end="29:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:26">(<expr pos:start="15:13" pos:end="15:25"><operator pos:start="15:13" pos:end="15:13">*</operator><name pos:start="15:14" pos:end="15:17">pacb</name> <operator pos:start="15:19" pos:end="15:20">==</operator> <name pos:start="15:22" pos:end="15:25">NULL</name></expr>)</condition> <block pos:start="15:28" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:18">

            <expr_stmt pos:start="17:13" pos:end="17:72"><expr pos:start="17:13" pos:end="17:71"><call pos:start="17:13" pos:end="17:71"><name pos:start="17:13" pos:end="17:19">fprintf</name><argument_list pos:start="17:20" pos:end="17:71">(<argument pos:start="17:21" pos:end="17:26"><expr pos:start="17:21" pos:end="17:26"><name pos:start="17:21" pos:end="17:26">stderr</name></expr></argument>, <argument pos:start="17:29" pos:end="17:70"><expr pos:start="17:29" pos:end="17:70"><literal type="string" pos:start="17:29" pos:end="17:70">"raw_aio_remove: aio request not found!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="19:13" pos:end="19:18">break;</break>

        </block_content>}</block></if> <if type="elseif" pos:start="21:11" pos:end="29:9">else if <condition pos:start="21:19" pos:end="21:32">(<expr pos:start="21:20" pos:end="21:31"><operator pos:start="21:20" pos:end="21:20">*</operator><name pos:start="21:21" pos:end="21:24">pacb</name> <operator pos:start="21:26" pos:end="21:27">==</operator> <name pos:start="21:29" pos:end="21:31">acb</name></expr>)</condition> <block pos:start="21:34" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:18">

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><operator pos:start="23:13" pos:end="23:13">*</operator><name pos:start="23:14" pos:end="23:17">pacb</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <name pos:start="23:21" pos:end="23:29"><name pos:start="23:21" pos:end="23:23">acb</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:29">next</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:34"><expr pos:start="25:13" pos:end="25:33"><call pos:start="25:13" pos:end="25:33"><name pos:start="25:13" pos:end="25:28">qemu_aio_release</name><argument_list pos:start="25:29" pos:end="25:33">(<argument pos:start="25:30" pos:end="25:32"><expr pos:start="25:30" pos:end="25:32"><name pos:start="25:30" pos:end="25:32">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:30"><expr pos:start="31:9" pos:end="31:29"><name pos:start="31:9" pos:end="31:12">pacb</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <operator pos:start="31:16" pos:end="31:16">&amp;</operator><name pos:start="31:17" pos:end="31:29"><operator pos:start="31:17" pos:end="31:17">(</operator><operator pos:start="31:18" pos:end="31:18">*</operator><name pos:start="31:19" pos:end="31:22">pacb</name><operator pos:start="31:23" pos:end="31:23">)</operator><operator pos:start="31:24" pos:end="31:25">-&gt;</operator><name pos:start="31:26" pos:end="31:29">next</name></name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
