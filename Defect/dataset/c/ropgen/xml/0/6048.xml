<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6048.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">v9fs_remove</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:35">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int32_t</name></type> <name pos:start="5:13" pos:end="5:15">fid</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">size_t</name></type> <name pos:start="9:12" pos:end="9:17">offset</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">7</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">V9fsFidState</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:22">fidp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">V9fsPDU</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">pdu</name> <init pos:start="13:18" pos:end="13:25">= <expr pos:start="13:20" pos:end="13:25"><name pos:start="13:20" pos:end="13:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:42"><expr pos:start="17:5" pos:end="17:41"><call pos:start="17:5" pos:end="17:41"><name pos:start="17:5" pos:end="17:17">pdu_unmarshal</name><argument_list pos:start="17:18" pos:end="17:41">(<argument pos:start="17:19" pos:end="17:21"><expr pos:start="17:19" pos:end="17:21"><name pos:start="17:19" pos:end="17:21">pdu</name></expr></argument>, <argument pos:start="17:24" pos:end="17:29"><expr pos:start="17:24" pos:end="17:29"><name pos:start="17:24" pos:end="17:29">offset</name></expr></argument>, <argument pos:start="17:32" pos:end="17:34"><expr pos:start="17:32" pos:end="17:34"><literal type="string" pos:start="17:32" pos:end="17:34">"d"</literal></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><operator pos:start="17:37" pos:end="17:37">&amp;</operator><name pos:start="17:38" pos:end="17:40">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:46"><expr pos:start="19:5" pos:end="19:45"><call pos:start="19:5" pos:end="19:45"><name pos:start="19:5" pos:end="19:21">trace_v9fs_remove</name><argument_list pos:start="19:22" pos:end="19:45">(<argument pos:start="19:23" pos:end="19:30"><expr pos:start="19:23" pos:end="19:30"><name pos:start="19:23" pos:end="19:30"><name pos:start="19:23" pos:end="19:25">pdu</name><operator pos:start="19:26" pos:end="19:27">-&gt;</operator><name pos:start="19:28" pos:end="19:30">tag</name></name></expr></argument>, <argument pos:start="19:33" pos:end="19:39"><expr pos:start="19:33" pos:end="19:39"><name pos:start="19:33" pos:end="19:39"><name pos:start="19:33" pos:end="19:35">pdu</name><operator pos:start="19:36" pos:end="19:37">-&gt;</operator><name pos:start="19:38" pos:end="19:39">id</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:44"><expr pos:start="19:42" pos:end="19:44"><name pos:start="19:42" pos:end="19:44">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:8">fidp</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:28"><name pos:start="23:12" pos:end="23:18">get_fid</name><argument_list pos:start="23:19" pos:end="23:28">(<argument pos:start="23:20" pos:end="23:22"><expr pos:start="23:20" pos:end="23:22"><name pos:start="23:20" pos:end="23:22">pdu</name></expr></argument>, <argument pos:start="23:25" pos:end="23:27"><expr pos:start="23:25" pos:end="23:27"><name pos:start="23:25" pos:end="23:27">fid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="31:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:21">(<expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:12">fidp</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <name pos:start="25:17" pos:end="25:20">NULL</name></expr>)</condition> <block pos:start="25:23" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:23">

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:11">err</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <operator pos:start="27:15" pos:end="27:15">-</operator><name pos:start="27:16" pos:end="27:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="29:9" pos:end="29:23">goto <name pos:start="29:14" pos:end="29:22">out_nofid</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:59">/* if fs driver is not path based, return EOPNOTSUPP */</comment>

    <if_stmt pos:start="35:5" pos:end="41:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:62">(<expr pos:start="35:9" pos:end="35:61"><operator pos:start="35:9" pos:end="35:9">!</operator><operator pos:start="35:10" pos:end="35:10">(</operator><name pos:start="35:11" pos:end="35:34"><name pos:start="35:11" pos:end="35:13">pdu</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:16">s</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:21">ctx</name><operator pos:start="35:22" pos:end="35:22">.</operator><name pos:start="35:23" pos:end="35:34">export_flags</name></name> <operator pos:start="35:36" pos:end="35:36">&amp;</operator> <name pos:start="35:38" pos:end="35:60">V9FS_PATHNAME_FSCONTEXT</name><operator pos:start="35:61" pos:end="35:61">)</operator></expr>)</condition> <block pos:start="35:64" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:21">

        <expr_stmt pos:start="37:9" pos:end="37:26"><expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:11">err</name> <operator pos:start="37:13" pos:end="37:13">=</operator> <operator pos:start="37:15" pos:end="37:15">-</operator><name pos:start="37:16" pos:end="37:25">EOPNOTSUPP</name></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:21">goto <name pos:start="39:14" pos:end="39:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="43:5" pos:end="49:7">/*

     * IF the file is unlinked, we cannot reopen

     * the file later. So don't reclaim fd

     */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:53"><expr pos:start="51:5" pos:end="51:52"><name pos:start="51:5" pos:end="51:7">err</name> <operator pos:start="51:9" pos:end="51:9">=</operator> <call pos:start="51:11" pos:end="51:52"><name pos:start="51:11" pos:end="51:34">v9fs_mark_fids_unreclaim</name><argument_list pos:start="51:35" pos:end="51:52">(<argument pos:start="51:36" pos:end="51:38"><expr pos:start="51:36" pos:end="51:38"><name pos:start="51:36" pos:end="51:38">pdu</name></expr></argument>, <argument pos:start="51:41" pos:end="51:51"><expr pos:start="51:41" pos:end="51:51"><operator pos:start="51:41" pos:end="51:41">&amp;</operator><name pos:start="51:42" pos:end="51:51"><name pos:start="51:42" pos:end="51:45">fidp</name><operator pos:start="51:46" pos:end="51:47">-&gt;</operator><name pos:start="51:48" pos:end="51:51">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:16">(<expr pos:start="53:9" pos:end="53:15"><name pos:start="53:9" pos:end="53:11">err</name> <operator pos:start="53:13" pos:end="53:13">&lt;</operator> <literal type="number" pos:start="53:15" pos:end="53:15">0</literal></expr>)</condition> <block pos:start="53:18" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:21">

        <goto pos:start="55:9" pos:end="55:21">goto <name pos:start="55:14" pos:end="55:20">out_err</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:43"><expr pos:start="59:5" pos:end="59:42"><name pos:start="59:5" pos:end="59:7">err</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:42"><name pos:start="59:11" pos:end="59:24">v9fs_co_remove</name><argument_list pos:start="59:25" pos:end="59:42">(<argument pos:start="59:26" pos:end="59:28"><expr pos:start="59:26" pos:end="59:28"><name pos:start="59:26" pos:end="59:28">pdu</name></expr></argument>, <argument pos:start="59:31" pos:end="59:41"><expr pos:start="59:31" pos:end="59:41"><operator pos:start="59:31" pos:end="59:31">&amp;</operator><name pos:start="59:32" pos:end="59:41"><name pos:start="59:32" pos:end="59:35">fidp</name><operator pos:start="59:36" pos:end="59:37">-&gt;</operator><name pos:start="59:38" pos:end="59:41">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:13">(<expr pos:start="61:9" pos:end="61:12"><operator pos:start="61:9" pos:end="61:9">!</operator><name pos:start="61:10" pos:end="61:12">err</name></expr>)</condition> <block pos:start="61:15" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:21">

        <expr_stmt pos:start="63:9" pos:end="63:21"><expr pos:start="63:9" pos:end="63:20"><name pos:start="63:9" pos:end="63:11">err</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:20">offset</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="67:1" pos:end="67:8"><name pos:start="67:1" pos:end="67:7">out_err</name>:</label>

    <comment type="block" pos:start="69:5" pos:end="69:68">/* For TREMOVE we need to clunk the fid even on failed remove */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:33"><expr pos:start="71:5" pos:end="71:32"><call pos:start="71:5" pos:end="71:32"><name pos:start="71:5" pos:end="71:13">clunk_fid</name><argument_list pos:start="71:14" pos:end="71:32">(<argument pos:start="71:15" pos:end="71:20"><expr pos:start="71:15" pos:end="71:20"><name pos:start="71:15" pos:end="71:20"><name pos:start="71:15" pos:end="71:17">pdu</name><operator pos:start="71:18" pos:end="71:19">-&gt;</operator><name pos:start="71:20" pos:end="71:20">s</name></name></expr></argument>, <argument pos:start="71:23" pos:end="71:31"><expr pos:start="71:23" pos:end="71:31"><name pos:start="71:23" pos:end="71:31"><name pos:start="71:23" pos:end="71:26">fidp</name><operator pos:start="71:27" pos:end="71:28">-&gt;</operator><name pos:start="71:29" pos:end="71:31">fid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:23"><expr pos:start="73:5" pos:end="73:22"><call pos:start="73:5" pos:end="73:22"><name pos:start="73:5" pos:end="73:11">put_fid</name><argument_list pos:start="73:12" pos:end="73:22">(<argument pos:start="73:13" pos:end="73:15"><expr pos:start="73:13" pos:end="73:15"><name pos:start="73:13" pos:end="73:15">pdu</name></expr></argument>, <argument pos:start="73:18" pos:end="73:21"><expr pos:start="73:18" pos:end="73:21"><name pos:start="73:18" pos:end="73:21">fidp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="75:1" pos:end="75:10"><name pos:start="75:1" pos:end="75:9">out_nofid</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><call pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:16">complete_pdu</name><argument_list pos:start="77:17" pos:end="77:34">(<argument pos:start="77:18" pos:end="77:23"><expr pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:23"><name pos:start="77:18" pos:end="77:20">pdu</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:23">s</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">pdu</name></expr></argument>, <argument pos:start="77:31" pos:end="77:33"><expr pos:start="77:31" pos:end="77:33"><name pos:start="77:31" pos:end="77:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
