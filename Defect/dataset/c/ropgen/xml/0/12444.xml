<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12444.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">nbd_receive_option_reply</name><parameter_list pos:start="1:36" pos:end="3:71">(<parameter pos:start="1:37" pos:end="1:51"><decl pos:start="1:37" pos:end="1:51"><type pos:start="1:37" pos:end="1:51"><name pos:start="1:37" pos:end="1:46">QIOChannel</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:51">ioc</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:65">opt</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:56"><decl pos:start="3:37" pos:end="3:56"><type pos:start="3:37" pos:end="3:56"><name pos:start="3:37" pos:end="3:49">nbd_opt_reply</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:56">reply</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:70"><decl pos:start="3:59" pos:end="3:70"><type pos:start="3:59" pos:end="3:70"><name pos:start="3:59" pos:end="3:63">Error</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier><modifier pos:start="3:66" pos:end="3:66">*</modifier></type><name pos:start="3:67" pos:end="3:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:13">

    <expr_stmt pos:start="7:5" pos:end="7:44"><expr pos:start="7:5" pos:end="7:43"><call pos:start="7:5" pos:end="7:43"><name pos:start="7:5" pos:end="7:21">QEMU_BUILD_BUG_ON</name><argument_list pos:start="7:22" pos:end="7:43">(<argument pos:start="7:23" pos:end="7:42"><expr pos:start="7:23" pos:end="7:42"><sizeof pos:start="7:23" pos:end="7:36">sizeof<argument_list pos:start="7:29" pos:end="7:36">(<argument pos:start="7:30" pos:end="7:35"><expr pos:start="7:30" pos:end="7:35"><operator pos:start="7:30" pos:end="7:30">*</operator><name pos:start="7:31" pos:end="7:35">reply</name></expr></argument>)</argument_list></sizeof> <operator pos:start="7:38" pos:end="7:39">!=</operator> <literal type="number" pos:start="7:41" pos:end="7:42">20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="17:5"><if pos:start="9:5" pos:end="17:5">if <condition pos:start="9:8" pos:end="9:55">(<expr pos:start="9:9" pos:end="9:54"><call pos:start="9:9" pos:end="9:50"><name pos:start="9:9" pos:end="9:16">nbd_read</name><argument_list pos:start="9:17" pos:end="9:50">(<argument pos:start="9:18" pos:end="9:20"><expr pos:start="9:18" pos:end="9:20"><name pos:start="9:18" pos:end="9:20">ioc</name></expr></argument>, <argument pos:start="9:23" pos:end="9:27"><expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27">reply</name></expr></argument>, <argument pos:start="9:30" pos:end="9:43"><expr pos:start="9:30" pos:end="9:43"><sizeof pos:start="9:30" pos:end="9:43">sizeof<argument_list pos:start="9:36" pos:end="9:43">(<argument pos:start="9:37" pos:end="9:42"><expr pos:start="9:37" pos:end="9:42"><operator pos:start="9:37" pos:end="9:37">*</operator><name pos:start="9:38" pos:end="9:42">reply</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="9:46" pos:end="9:49"><expr pos:start="9:46" pos:end="9:49"><name pos:start="9:46" pos:end="9:49">errp</name></expr></argument>)</argument_list></call> <operator pos:start="9:52" pos:end="9:52">&lt;</operator> <literal type="number" pos:start="9:54" pos:end="9:54">0</literal></expr>)</condition> <block pos:start="9:57" pos:end="17:5">{<block_content pos:start="11:9" pos:end="15:18">

        <expr_stmt pos:start="11:9" pos:end="11:59"><expr pos:start="11:9" pos:end="11:58"><call pos:start="11:9" pos:end="11:58"><name pos:start="11:9" pos:end="11:21">error_prepend</name><argument_list pos:start="11:22" pos:end="11:58">(<argument pos:start="11:23" pos:end="11:26"><expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">errp</name></expr></argument>, <argument pos:start="11:29" pos:end="11:57"><expr pos:start="11:29" pos:end="11:57"><literal type="string" pos:start="11:29" pos:end="11:57">"failed to read option reply"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="13:9" pos:end="13:32"><expr pos:start="13:9" pos:end="13:31"><call pos:start="13:9" pos:end="13:31"><name pos:start="13:9" pos:end="13:26">nbd_send_opt_abort</name><argument_list pos:start="13:27" pos:end="13:31">(<argument pos:start="13:28" pos:end="13:30"><expr pos:start="13:28" pos:end="13:30"><name pos:start="13:28" pos:end="13:30">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="15:9" pos:end="15:18">return <expr pos:start="15:16" pos:end="15:17"><operator pos:start="15:16" pos:end="15:16">-</operator><literal type="number" pos:start="15:17" pos:end="15:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:16">be64_to_cpus</name><argument_list pos:start="19:17" pos:end="19:31">(<argument pos:start="19:18" pos:end="19:30"><expr pos:start="19:18" pos:end="19:30"><operator pos:start="19:18" pos:end="19:18">&amp;</operator><name pos:start="19:19" pos:end="19:30"><name pos:start="19:19" pos:end="19:23">reply</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:30">magic</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:16">be32_to_cpus</name><argument_list pos:start="21:17" pos:end="21:32">(<argument pos:start="21:18" pos:end="21:31"><expr pos:start="21:18" pos:end="21:31"><operator pos:start="21:18" pos:end="21:18">&amp;</operator><name pos:start="21:19" pos:end="21:31"><name pos:start="21:19" pos:end="21:23">reply</name><operator pos:start="21:24" pos:end="21:25">-&gt;</operator><name pos:start="21:26" pos:end="21:31">option</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:31"><expr pos:start="23:5" pos:end="23:30"><call pos:start="23:5" pos:end="23:30"><name pos:start="23:5" pos:end="23:16">be32_to_cpus</name><argument_list pos:start="23:17" pos:end="23:30">(<argument pos:start="23:18" pos:end="23:29"><expr pos:start="23:18" pos:end="23:29"><operator pos:start="23:18" pos:end="23:18">&amp;</operator><name pos:start="23:19" pos:end="23:29"><name pos:start="23:19" pos:end="23:23">reply</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:29">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:16">be32_to_cpus</name><argument_list pos:start="25:17" pos:end="25:32">(<argument pos:start="25:18" pos:end="25:31"><expr pos:start="25:18" pos:end="25:31"><operator pos:start="25:18" pos:end="25:18">&amp;</operator><name pos:start="25:19" pos:end="25:31"><name pos:start="25:19" pos:end="25:23">reply</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:31">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:78"><expr pos:start="29:5" pos:end="29:77"><call pos:start="29:5" pos:end="29:77"><name pos:start="29:5" pos:end="29:34">trace_nbd_receive_option_reply</name><argument_list pos:start="29:35" pos:end="29:77">(<argument pos:start="29:36" pos:end="29:48"><expr pos:start="29:36" pos:end="29:48"><name pos:start="29:36" pos:end="29:48"><name pos:start="29:36" pos:end="29:40">reply</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:48">option</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:61"><expr pos:start="29:51" pos:end="29:61"><name pos:start="29:51" pos:end="29:61"><name pos:start="29:51" pos:end="29:55">reply</name><operator pos:start="29:56" pos:end="29:57">-&gt;</operator><name pos:start="29:58" pos:end="29:61">type</name></name></expr></argument>, <argument pos:start="29:64" pos:end="29:76"><expr pos:start="29:64" pos:end="29:76"><name pos:start="29:64" pos:end="29:76"><name pos:start="29:64" pos:end="29:68">reply</name><operator pos:start="29:69" pos:end="29:70">-&gt;</operator><name pos:start="29:71" pos:end="29:76">length</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="41:5"><if pos:start="33:5" pos:end="41:5">if <condition pos:start="33:8" pos:end="33:38">(<expr pos:start="33:9" pos:end="33:37"><name pos:start="33:9" pos:end="33:20"><name pos:start="33:9" pos:end="33:13">reply</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:20">magic</name></name> <operator pos:start="33:22" pos:end="33:23">!=</operator> <name pos:start="33:25" pos:end="33:37">NBD_REP_MAGIC</name></expr>)</condition> <block pos:start="33:40" pos:end="41:5">{<block_content pos:start="35:9" pos:end="39:18">

        <expr_stmt pos:start="35:9" pos:end="35:58"><expr pos:start="35:9" pos:end="35:57"><call pos:start="35:9" pos:end="35:57"><name pos:start="35:9" pos:end="35:18">error_setg</name><argument_list pos:start="35:19" pos:end="35:57">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">errp</name></expr></argument>, <argument pos:start="35:26" pos:end="35:56"><expr pos:start="35:26" pos:end="35:56"><literal type="string" pos:start="35:26" pos:end="35:56">"Unexpected option reply magic"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:32"><expr pos:start="37:9" pos:end="37:31"><call pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:26">nbd_send_opt_abort</name><argument_list pos:start="37:27" pos:end="37:31">(<argument pos:start="37:28" pos:end="37:30"><expr pos:start="37:28" pos:end="37:30"><name pos:start="37:28" pos:end="37:30">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:18">return <expr pos:start="39:16" pos:end="39:17"><operator pos:start="39:16" pos:end="39:16">-</operator><literal type="number" pos:start="39:17" pos:end="39:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="43:5" pos:end="53:5"><if pos:start="43:5" pos:end="53:5">if <condition pos:start="43:8" pos:end="43:29">(<expr pos:start="43:9" pos:end="43:28"><name pos:start="43:9" pos:end="43:21"><name pos:start="43:9" pos:end="43:13">reply</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:21">option</name></name> <operator pos:start="43:23" pos:end="43:24">!=</operator> <name pos:start="43:26" pos:end="43:28">opt</name></expr>)</condition> <block pos:start="43:31" pos:end="53:5">{<block_content pos:start="45:9" pos:end="51:18">

        <expr_stmt pos:start="45:9" pos:end="47:39"><expr pos:start="45:9" pos:end="47:38"><call pos:start="45:9" pos:end="47:38"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="47:38">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:64"><expr pos:start="45:26" pos:end="45:64"><literal type="string" pos:start="45:26" pos:end="45:64">"Unexpected option type %x expected %x"</literal></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:32"><expr pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:32"><name pos:start="47:20" pos:end="47:24">reply</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:32">option</name></name></expr></argument>, <argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">opt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:32"><expr pos:start="49:9" pos:end="49:31"><call pos:start="49:9" pos:end="49:31"><name pos:start="49:9" pos:end="49:26">nbd_send_opt_abort</name><argument_list pos:start="49:27" pos:end="49:31">(<argument pos:start="49:28" pos:end="49:30"><expr pos:start="49:28" pos:end="49:30"><name pos:start="49:28" pos:end="49:30">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="55:5" pos:end="55:13">return <expr pos:start="55:12" pos:end="55:12"><literal type="number" pos:start="55:12" pos:end="55:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
