<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16990.c" pos:tabs="8"><function pos:start="1:1" pos:end="21:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">blk_alloc</name><parameter_list pos:start="1:22" pos:end="1:47">(<parameter pos:start="1:23" pos:end="1:46"><decl pos:start="1:23" pos:end="1:46"><type pos:start="1:23" pos:end="1:46"><name pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:38">XenDevice</name></name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="21:1">{<block_content pos:start="5:5" pos:end="19:23">

    <decl_stmt pos:start="5:5" pos:end="5:78"><decl pos:start="5:5" pos:end="5:77"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:20">XenBlkDev</name></name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:28">blkdev</name> <init pos:start="5:30" pos:end="5:77">= <expr pos:start="5:32" pos:end="5:77"><call pos:start="5:32" pos:end="5:77"><name pos:start="5:32" pos:end="5:43">container_of</name><argument_list pos:start="5:44" pos:end="5:77">(<argument pos:start="5:45" pos:end="5:50"><expr pos:start="5:45" pos:end="5:50"><name pos:start="5:45" pos:end="5:50">xendev</name></expr></argument>, <argument pos:start="5:53" pos:end="5:68"><expr pos:start="5:53" pos:end="5:68">struct <name pos:start="5:60" pos:end="5:68">XenBlkDev</name></expr></argument>, <argument pos:start="5:71" pos:end="5:76"><expr pos:start="5:71" pos:end="5:76"><name pos:start="5:71" pos:end="5:76">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:33"><expr pos:start="9:5" pos:end="9:32"><call pos:start="9:5" pos:end="9:32"><name pos:start="9:5" pos:end="9:13">LIST_INIT</name><argument_list pos:start="9:14" pos:end="9:32">(<argument pos:start="9:15" pos:end="9:31"><expr pos:start="9:15" pos:end="9:31"><operator pos:start="9:15" pos:end="9:15">&amp;</operator><name pos:start="9:16" pos:end="9:31"><name pos:start="9:16" pos:end="9:21">blkdev</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:31">inflight</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:13">LIST_INIT</name><argument_list pos:start="11:14" pos:end="11:32">(<argument pos:start="11:15" pos:end="11:31"><expr pos:start="11:15" pos:end="11:31"><operator pos:start="11:15" pos:end="11:15">&amp;</operator><name pos:start="11:16" pos:end="11:31"><name pos:start="11:16" pos:end="11:21">blkdev</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:31">finished</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:13">LIST_INIT</name><argument_list pos:start="13:14" pos:end="13:32">(<argument pos:start="13:15" pos:end="13:31"><expr pos:start="13:15" pos:end="13:31"><operator pos:start="13:15" pos:end="13:15">&amp;</operator><name pos:start="13:16" pos:end="13:31"><name pos:start="13:16" pos:end="13:21">blkdev</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:31">freelist</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:10">blkdev</name><operator pos:start="15:11" pos:end="15:12">-&gt;</operator><name pos:start="15:13" pos:end="15:14">bh</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:44"><name pos:start="15:18" pos:end="15:28">qemu_bh_new</name><argument_list pos:start="15:29" pos:end="15:44">(<argument pos:start="15:30" pos:end="15:35"><expr pos:start="15:30" pos:end="15:35"><name pos:start="15:30" pos:end="15:35">blk_bh</name></expr></argument>, <argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">blkdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:23"><if pos:start="17:5" pos:end="19:23">if <condition pos:start="17:8" pos:end="17:32">(<expr pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:16">xen_mode</name> <operator pos:start="17:18" pos:end="17:19">!=</operator> <name pos:start="17:21" pos:end="17:31">XEN_EMULATE</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:23"><block_content pos:start="19:9" pos:end="19:23">

        <expr_stmt pos:start="19:9" pos:end="19:23"><expr pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:18">batch_maps</name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:22">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
