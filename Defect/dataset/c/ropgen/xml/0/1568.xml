<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1568.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">ahci_idp_write</name><parameter_list pos:start="1:27" pos:end="3:55">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:39"><decl pos:start="3:28" pos:end="3:39"><type pos:start="3:28" pos:end="3:39"><name pos:start="3:28" pos:end="3:35">uint64_t</name></type> <name pos:start="3:37" pos:end="3:39">val</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:54"><decl pos:start="3:42" pos:end="3:54"><type pos:start="3:42" pos:end="3:54"><name pos:start="3:42" pos:end="3:49">unsigned</name></type> <name pos:start="3:51" pos:end="3:54">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">AHCIState</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:16">s</name> <init pos:start="7:18" pos:end="7:25">= <expr pos:start="7:20" pos:end="7:25"><name pos:start="7:20" pos:end="7:25">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="23:5"><if pos:start="11:5" pos:end="17:5">if <condition pos:start="11:8" pos:end="11:30">(<expr pos:start="11:9" pos:end="11:29"><name pos:start="11:9" pos:end="11:12">addr</name> <operator pos:start="11:14" pos:end="11:15">==</operator> <name pos:start="11:17" pos:end="11:29"><name pos:start="11:17" pos:end="11:17">s</name><operator pos:start="11:18" pos:end="11:19">-&gt;</operator><name pos:start="11:20" pos:end="11:29">idp_offset</name></name></expr>)</condition> <block pos:start="11:32" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:70">

        <comment type="block" pos:start="13:9" pos:end="13:53">/* index register - mask off reserved bits */</comment>

        <expr_stmt pos:start="15:9" pos:end="15:70"><expr pos:start="15:9" pos:end="15:69"><name pos:start="15:9" pos:end="15:20"><name pos:start="15:9" pos:end="15:9">s</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:20">idp_index</name></name> <operator pos:start="15:22" pos:end="15:22">=</operator> <operator pos:start="15:24" pos:end="15:24">(</operator><name pos:start="15:25" pos:end="15:32">uint32_t</name><operator pos:start="15:33" pos:end="15:33">)</operator><name pos:start="15:34" pos:end="15:36">val</name> <operator pos:start="15:38" pos:end="15:38">&amp;</operator> <operator pos:start="15:40" pos:end="15:40">(</operator><operator pos:start="15:41" pos:end="15:41">(</operator><name pos:start="15:42" pos:end="15:58">AHCI_MEM_BAR_SIZE</name> <operator pos:start="15:60" pos:end="15:60">-</operator> <literal type="number" pos:start="15:62" pos:end="15:62">1</literal><operator pos:start="15:63" pos:end="15:63">)</operator> <operator pos:start="15:65" pos:end="15:65">&amp;</operator> <operator pos:start="15:67" pos:end="15:67">~</operator><literal type="number" pos:start="15:68" pos:end="15:68">3</literal><operator pos:start="15:69" pos:end="15:69">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="17:7" pos:end="23:5">else if <condition pos:start="17:15" pos:end="17:41">(<expr pos:start="17:16" pos:end="17:40"><name pos:start="17:16" pos:end="17:19">addr</name> <operator pos:start="17:21" pos:end="17:22">==</operator> <name pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:24">s</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:36">idp_offset</name></name> <operator pos:start="17:38" pos:end="17:38">+</operator> <literal type="number" pos:start="17:40" pos:end="17:40">4</literal></expr>)</condition> <block pos:start="17:43" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:56">

        <comment type="block" pos:start="19:9" pos:end="19:75">/* data register - do memory write at location selected by index */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:56"><expr pos:start="21:9" pos:end="21:55"><call pos:start="21:9" pos:end="21:55"><name pos:start="21:9" pos:end="21:22">ahci_mem_write</name><argument_list pos:start="21:23" pos:end="21:55">(<argument pos:start="21:24" pos:end="21:29"><expr pos:start="21:24" pos:end="21:29"><name pos:start="21:24" pos:end="21:29">opaque</name></expr></argument>, <argument pos:start="21:32" pos:end="21:43"><expr pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:43"><name pos:start="21:32" pos:end="21:32">s</name><operator pos:start="21:33" pos:end="21:34">-&gt;</operator><name pos:start="21:35" pos:end="21:43">idp_index</name></name></expr></argument>, <argument pos:start="21:46" pos:end="21:48"><expr pos:start="21:46" pos:end="21:48"><name pos:start="21:46" pos:end="21:48">val</name></expr></argument>, <argument pos:start="21:51" pos:end="21:54"><expr pos:start="21:51" pos:end="21:54"><name pos:start="21:51" pos:end="21:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
