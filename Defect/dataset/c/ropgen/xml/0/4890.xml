<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4890.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">monitor_control_event</name><parameter_list pos:start="1:34" pos:end="1:58">(<parameter pos:start="1:35" pos:end="1:46"><decl pos:start="1:35" pos:end="1:46"><type pos:start="1:35" pos:end="1:46"><name pos:start="1:35" pos:end="1:38">void</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:46">opaque</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:57"><decl pos:start="1:49" pos:end="1:57"><type pos:start="1:49" pos:end="1:57"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:57">event</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:5">

    <if_stmt pos:start="5:5" pos:end="27:5"><if pos:start="5:5" pos:end="27:5">if <condition pos:start="5:8" pos:end="5:34">(<expr pos:start="5:9" pos:end="5:33"><name pos:start="5:9" pos:end="5:13">event</name> <operator pos:start="5:15" pos:end="5:16">==</operator> <name pos:start="5:18" pos:end="5:33">CHR_EVENT_OPENED</name></expr>)</condition> <block pos:start="5:36" pos:end="27:5">{<block_content pos:start="7:9" pos:end="25:29">

        <decl_stmt pos:start="7:9" pos:end="7:22"><decl pos:start="7:9" pos:end="7:21"><type pos:start="7:9" pos:end="7:17"><name pos:start="7:9" pos:end="7:15">QObject</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:21">data</name></decl>;</decl_stmt>

        <decl_stmt pos:start="9:9" pos:end="9:30"><decl pos:start="9:9" pos:end="9:29"><type pos:start="9:9" pos:end="9:17"><name pos:start="9:9" pos:end="9:15">Monitor</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">mon</name> <init pos:start="9:22" pos:end="9:29">= <expr pos:start="9:24" pos:end="9:29"><name pos:start="9:24" pos:end="9:29">opaque</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="13:9" pos:end="13:71"><expr pos:start="13:9" pos:end="13:70"><call pos:start="13:9" pos:end="13:70"><name pos:start="13:9" pos:end="13:32">json_message_parser_init</name><argument_list pos:start="13:33" pos:end="13:70">(<argument pos:start="13:34" pos:end="13:49"><expr pos:start="13:34" pos:end="13:49"><operator pos:start="13:34" pos:end="13:34">&amp;</operator><name pos:start="13:35" pos:end="13:49"><name pos:start="13:35" pos:end="13:37">mon</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:41">mc</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:49">parser</name></name></expr></argument>, <argument pos:start="13:52" pos:end="13:69"><expr pos:start="13:52" pos:end="13:69"><name pos:start="13:52" pos:end="13:69">handle_qmp_command</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:71"><expr pos:start="17:9" pos:end="17:70"><name pos:start="17:9" pos:end="17:12">data</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <call pos:start="17:16" pos:end="17:70"><name pos:start="17:16" pos:end="17:33">qobject_from_jsonf</name><argument_list pos:start="17:34" pos:end="17:70">(<argument pos:start="17:35" pos:end="17:69"><expr pos:start="17:35" pos:end="17:69"><literal type="string" pos:start="17:35" pos:end="17:69">"{ 'QMP': { 'capabilities': [] } }"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:14">assert</name><argument_list pos:start="19:15" pos:end="19:28">(<argument pos:start="19:16" pos:end="19:27"><expr pos:start="19:16" pos:end="19:27"><name pos:start="19:16" pos:end="19:19">data</name> <operator pos:start="19:21" pos:end="19:22">!=</operator> <name pos:start="19:24" pos:end="19:27">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="23:9" pos:end="23:40"><expr pos:start="23:9" pos:end="23:39"><call pos:start="23:9" pos:end="23:39"><name pos:start="23:9" pos:end="23:28">monitor_json_emitter</name><argument_list pos:start="23:29" pos:end="23:39">(<argument pos:start="23:30" pos:end="23:32"><expr pos:start="23:30" pos:end="23:32"><name pos:start="23:30" pos:end="23:32">mon</name></expr></argument>, <argument pos:start="23:35" pos:end="23:38"><expr pos:start="23:35" pos:end="23:38"><name pos:start="23:35" pos:end="23:38">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:29"><expr pos:start="25:9" pos:end="25:28"><call pos:start="25:9" pos:end="25:28"><name pos:start="25:9" pos:end="25:22">qobject_decref</name><argument_list pos:start="25:23" pos:end="25:28">(<argument pos:start="25:24" pos:end="25:27"><expr pos:start="25:24" pos:end="25:27"><name pos:start="25:24" pos:end="25:27">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
