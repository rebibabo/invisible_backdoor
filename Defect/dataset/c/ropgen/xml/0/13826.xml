<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13826.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">qapi_clone_type_str</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:42"><decl pos:start="1:33" pos:end="1:42"><type pos:start="1:33" pos:end="1:42"><name pos:start="1:33" pos:end="1:39">Visitor</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:42">v</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:60"><decl pos:start="1:45" pos:end="1:60"><type pos:start="1:45" pos:end="1:60"><specifier pos:start="1:45" pos:end="1:49">const</specifier> <name pos:start="1:51" pos:end="1:54">char</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">name</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:72"><decl pos:start="1:63" pos:end="1:72"><type pos:start="1:63" pos:end="1:72"><name pos:start="1:63" pos:end="1:66">char</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier><modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">obj</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:45"><decl pos:start="3:34" pos:end="3:45"><type pos:start="3:34" pos:end="3:45"><name pos:start="3:34" pos:end="3:38">Error</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier><modifier pos:start="3:41" pos:end="3:41">*</modifier></type><name pos:start="3:42" pos:end="3:45">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:32">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">QapiCloneVisitor</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">qcv</name> <init pos:start="7:27" pos:end="7:37">= <expr pos:start="7:29" pos:end="7:37"><call pos:start="7:29" pos:end="7:37"><name pos:start="7:29" pos:end="7:34">to_qcv</name><argument_list pos:start="7:35" pos:end="7:37">(<argument pos:start="7:36" pos:end="7:36"><expr pos:start="7:36" pos:end="7:36"><name pos:start="7:36" pos:end="7:36">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:23"><expr pos:start="11:5" pos:end="11:22"><call pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:22">(<argument pos:start="11:12" pos:end="11:21"><expr pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:21"><name pos:start="11:12" pos:end="11:14">qcv</name><operator pos:start="11:15" pos:end="11:16">-&gt;</operator><name pos:start="11:17" pos:end="11:21">depth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="25:7">/*

     * Pointer was already cloned by g_memdup; create fresh copy.

     * Note that as long as qmp-output-visitor accepts NULL instead of

     * "", then we must do likewise. However, we want to obey the

     * input visitor semantics of never producing NULL when the empty

     * string is intended.

     */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><operator pos:start="27:5" pos:end="27:5">*</operator><name pos:start="27:6" pos:end="27:8">obj</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:31"><name pos:start="27:12" pos:end="27:19">g_strdup</name><argument_list pos:start="27:20" pos:end="27:31">(<argument pos:start="27:21" pos:end="27:30"><expr pos:start="27:21" pos:end="27:30"><ternary pos:start="27:21" pos:end="27:30"><condition pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:24"><operator pos:start="27:21" pos:end="27:21">*</operator><name pos:start="27:22" pos:end="27:24">obj</name></expr> ?</condition><then/><else pos:start="27:27" pos:end="27:30">: <expr pos:start="27:29" pos:end="27:30"><literal type="string" pos:start="27:29" pos:end="27:30">""</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
