<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2611.c" pos:tabs="8"><function pos:start="1:1" pos:end="151:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:7">av_cold</name> <name pos:start="1:9" pos:end="1:11">int</name></type> <name pos:start="1:13" pos:end="1:43">ff_vc1_decode_init_alloc_tables</name><parameter_list pos:start="1:44" pos:end="1:58">(<parameter pos:start="1:45" pos:end="1:57"><decl pos:start="1:45" pos:end="1:57"><type pos:start="1:45" pos:end="1:56"><name pos:start="1:45" pos:end="1:54">VC1Context</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:57">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="151:1">{<block_content pos:start="5:5" pos:end="149:27">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">v</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">mb_height</name> <init pos:start="9:19" pos:end="9:44">= <expr pos:start="9:21" pos:end="9:44"><call pos:start="9:21" pos:end="9:44"><name pos:start="9:21" pos:end="9:27">FFALIGN</name><argument_list pos:start="9:28" pos:end="9:44">(<argument pos:start="9:29" pos:end="9:40"><expr pos:start="9:29" pos:end="9:40"><name pos:start="9:29" pos:end="9:40"><name pos:start="9:29" pos:end="9:29">s</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:40">mb_height</name></name></expr></argument>, <argument pos:start="9:43" pos:end="9:43"><expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:31">/* Allocate mb bitplanes */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:63"><expr pos:start="15:5" pos:end="15:62"><name pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:23">mv_type_mb_plane</name></name> <operator pos:start="15:25" pos:end="15:25">=</operator> <call pos:start="15:27" pos:end="15:62"><name pos:start="15:27" pos:end="15:35">av_malloc</name> <argument_list pos:start="15:37" pos:end="15:62">(<argument pos:start="15:38" pos:end="15:61"><expr pos:start="15:38" pos:end="15:61"><name pos:start="15:38" pos:end="15:49"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:49">mb_stride</name></name> <operator pos:start="15:51" pos:end="15:51">*</operator> <name pos:start="15:53" pos:end="15:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:63"><expr pos:start="17:5" pos:end="17:62"><name pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:5">v</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">direct_mb_plane</name></name>  <operator pos:start="17:25" pos:end="17:25">=</operator> <call pos:start="17:27" pos:end="17:62"><name pos:start="17:27" pos:end="17:35">av_malloc</name> <argument_list pos:start="17:37" pos:end="17:62">(<argument pos:start="17:38" pos:end="17:61"><expr pos:start="17:38" pos:end="17:61"><name pos:start="17:38" pos:end="17:49"><name pos:start="17:38" pos:end="17:38">s</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:49">mb_stride</name></name> <operator pos:start="17:51" pos:end="17:51">*</operator> <name pos:start="17:53" pos:end="17:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:63"><expr pos:start="19:5" pos:end="19:62"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:5">v</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:23">forward_mb_plane</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <call pos:start="19:27" pos:end="19:62"><name pos:start="19:27" pos:end="19:35">av_malloc</name> <argument_list pos:start="19:37" pos:end="19:62">(<argument pos:start="19:38" pos:end="19:61"><expr pos:start="19:38" pos:end="19:61"><name pos:start="19:38" pos:end="19:49"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:49">mb_stride</name></name> <operator pos:start="19:51" pos:end="19:51">*</operator> <name pos:start="19:53" pos:end="19:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:63"><expr pos:start="21:5" pos:end="21:62"><name pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:5">v</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:20">fieldtx_plane</name></name>    <operator pos:start="21:25" pos:end="21:25">=</operator> <call pos:start="21:27" pos:end="21:62"><name pos:start="21:27" pos:end="21:36">av_mallocz</name><argument_list pos:start="21:37" pos:end="21:62">(<argument pos:start="21:38" pos:end="21:61"><expr pos:start="21:38" pos:end="21:61"><name pos:start="21:38" pos:end="21:49"><name pos:start="21:38" pos:end="21:38">s</name><operator pos:start="21:39" pos:end="21:40">-&gt;</operator><name pos:start="21:41" pos:end="21:49">mb_stride</name></name> <operator pos:start="21:51" pos:end="21:51">*</operator> <name pos:start="21:53" pos:end="21:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:63"><expr pos:start="23:5" pos:end="23:62"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:5">v</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:19">acpred_plane</name></name>     <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:62"><name pos:start="23:27" pos:end="23:35">av_malloc</name> <argument_list pos:start="23:37" pos:end="23:62">(<argument pos:start="23:38" pos:end="23:61"><expr pos:start="23:38" pos:end="23:61"><name pos:start="23:38" pos:end="23:49"><name pos:start="23:38" pos:end="23:38">s</name><operator pos:start="23:39" pos:end="23:40">-&gt;</operator><name pos:start="23:41" pos:end="23:49">mb_stride</name></name> <operator pos:start="23:51" pos:end="23:51">*</operator> <name pos:start="23:53" pos:end="23:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:63"><expr pos:start="25:5" pos:end="25:62"><name pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:5">v</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:23">over_flags_plane</name></name> <operator pos:start="25:25" pos:end="25:25">=</operator> <call pos:start="25:27" pos:end="25:62"><name pos:start="25:27" pos:end="25:35">av_malloc</name> <argument_list pos:start="25:37" pos:end="25:62">(<argument pos:start="25:38" pos:end="25:61"><expr pos:start="25:38" pos:end="25:61"><name pos:start="25:38" pos:end="25:49"><name pos:start="25:38" pos:end="25:38">s</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:49">mb_stride</name></name> <operator pos:start="25:51" pos:end="25:51">*</operator> <name pos:start="25:53" pos:end="25:61">mb_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:19"><if pos:start="27:5" pos:end="31:19">if <condition pos:start="27:8" pos:end="29:70">(<expr pos:start="27:9" pos:end="29:69"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:28"><name pos:start="27:10" pos:end="27:10">v</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:28">mv_type_mb_plane</name></name> <operator pos:start="27:30" pos:end="27:31">||</operator> <operator pos:start="27:33" pos:end="27:33">!</operator><name pos:start="27:34" pos:end="27:51"><name pos:start="27:34" pos:end="27:34">v</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:51">direct_mb_plane</name></name> <operator pos:start="27:53" pos:end="27:54">||</operator> <operator pos:start="27:56" pos:end="27:56">!</operator><name pos:start="27:57" pos:end="27:75"><name pos:start="27:57" pos:end="27:57">v</name><operator pos:start="27:58" pos:end="27:59">-&gt;</operator><name pos:start="27:60" pos:end="27:75">forward_mb_plane</name></name> <operator pos:start="27:77" pos:end="27:78">||</operator>

        <operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:25"><name pos:start="29:10" pos:end="29:10">v</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:25">fieldtx_plane</name></name> <operator pos:start="29:27" pos:end="29:28">||</operator> <operator pos:start="29:30" pos:end="29:30">!</operator><name pos:start="29:31" pos:end="29:45"><name pos:start="29:31" pos:end="29:31">v</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:45">acpred_plane</name></name> <operator pos:start="29:47" pos:end="29:48">||</operator> <operator pos:start="29:50" pos:end="29:50">!</operator><name pos:start="29:51" pos:end="29:69"><name pos:start="29:51" pos:end="29:51">v</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:69">over_flags_plane</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:19"><block_content pos:start="31:9" pos:end="31:19">

        <goto pos:start="31:9" pos:end="31:19">goto <name pos:start="31:14" pos:end="31:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:23"><name pos:start="35:5" pos:end="35:5">v</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:23">n_allocated_blks</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <name pos:start="35:27" pos:end="35:37"><name pos:start="35:27" pos:end="35:27">s</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:37">mb_width</name></name> <operator pos:start="35:39" pos:end="35:39">+</operator> <literal type="number" pos:start="35:41" pos:end="35:41">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:77"><expr pos:start="37:5" pos:end="37:76"><name pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:5">v</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:12">block</name></name>            <operator pos:start="37:25" pos:end="37:25">=</operator> <call pos:start="37:27" pos:end="37:76"><name pos:start="37:27" pos:end="37:35">av_malloc</name><argument_list pos:start="37:36" pos:end="37:76">(<argument pos:start="37:37" pos:end="37:75"><expr pos:start="37:37" pos:end="37:75"><sizeof pos:start="37:37" pos:end="37:53">sizeof<argument_list pos:start="37:43" pos:end="37:53">(<argument pos:start="37:44" pos:end="37:52"><expr pos:start="37:44" pos:end="37:52"><operator pos:start="37:44" pos:end="37:44">*</operator><name pos:start="37:45" pos:end="37:52"><name pos:start="37:45" pos:end="37:45">v</name><operator pos:start="37:46" pos:end="37:47">-&gt;</operator><name pos:start="37:48" pos:end="37:52">block</name></name></expr></argument>)</argument_list></sizeof> <operator pos:start="37:55" pos:end="37:55">*</operator> <name pos:start="37:57" pos:end="37:75"><name pos:start="37:57" pos:end="37:57">v</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:75">n_allocated_blks</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:79"><expr pos:start="39:5" pos:end="39:78"><name pos:start="39:5" pos:end="39:15"><name pos:start="39:5" pos:end="39:5">v</name><operator pos:start="39:6" pos:end="39:7">-&gt;</operator><name pos:start="39:8" pos:end="39:15">cbp_base</name></name>         <operator pos:start="39:25" pos:end="39:25">=</operator> <call pos:start="39:27" pos:end="39:78"><name pos:start="39:27" pos:end="39:35">av_malloc</name><argument_list pos:start="39:36" pos:end="39:78">(<argument pos:start="39:37" pos:end="39:77"><expr pos:start="39:37" pos:end="39:77"><sizeof pos:start="39:37" pos:end="39:58">sizeof<argument_list pos:start="39:43" pos:end="39:58">(<argument pos:start="39:44" pos:end="39:57"><expr pos:start="39:44" pos:end="39:57"><name pos:start="39:44" pos:end="39:57"><name pos:start="39:44" pos:end="39:44">v</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:54">cbp_base</name><index pos:start="39:55" pos:end="39:57">[<expr pos:start="39:56" pos:end="39:56"><literal type="number" pos:start="39:56" pos:end="39:56">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="39:60" pos:end="39:60">*</operator> <literal type="number" pos:start="39:62" pos:end="39:62">2</literal> <operator pos:start="39:64" pos:end="39:64">*</operator> <name pos:start="39:66" pos:end="39:77"><name pos:start="39:66" pos:end="39:66">s</name><operator pos:start="39:67" pos:end="39:68">-&gt;</operator><name pos:start="39:69" pos:end="39:77">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="41:5" pos:end="43:19"><if pos:start="41:5" pos:end="43:19">if <condition pos:start="41:8" pos:end="41:34">(<expr pos:start="41:9" pos:end="41:33"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:17"><name pos:start="41:10" pos:end="41:10">v</name><operator pos:start="41:11" pos:end="41:12">-&gt;</operator><name pos:start="41:13" pos:end="41:17">block</name></name> <operator pos:start="41:19" pos:end="41:20">||</operator> <operator pos:start="41:22" pos:end="41:22">!</operator><name pos:start="41:23" pos:end="41:33"><name pos:start="41:23" pos:end="41:23">v</name><operator pos:start="41:24" pos:end="41:25">-&gt;</operator><name pos:start="41:26" pos:end="41:33">cbp_base</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:19"><block_content pos:start="43:9" pos:end="43:19">

        <goto pos:start="43:9" pos:end="43:19">goto <name pos:start="43:14" pos:end="43:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:53"><expr pos:start="45:5" pos:end="45:52"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:5">v</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:10">cbp</name></name>              <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:37"><name pos:start="45:27" pos:end="45:27">v</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:37">cbp_base</name></name> <operator pos:start="45:39" pos:end="45:39">+</operator> <name pos:start="45:41" pos:end="45:52"><name pos:start="45:41" pos:end="45:41">s</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:52">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:81"><expr pos:start="47:5" pos:end="47:80"><name pos:start="47:5" pos:end="47:17"><name pos:start="47:5" pos:end="47:5">v</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:17">ttblk_base</name></name>       <operator pos:start="47:25" pos:end="47:25">=</operator> <call pos:start="47:27" pos:end="47:80"><name pos:start="47:27" pos:end="47:35">av_malloc</name><argument_list pos:start="47:36" pos:end="47:80">(<argument pos:start="47:37" pos:end="47:79"><expr pos:start="47:37" pos:end="47:79"><sizeof pos:start="47:37" pos:end="47:60">sizeof<argument_list pos:start="47:43" pos:end="47:60">(<argument pos:start="47:44" pos:end="47:59"><expr pos:start="47:44" pos:end="47:59"><name pos:start="47:44" pos:end="47:59"><name pos:start="47:44" pos:end="47:44">v</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:56">ttblk_base</name><index pos:start="47:57" pos:end="47:59">[<expr pos:start="47:58" pos:end="47:58"><literal type="number" pos:start="47:58" pos:end="47:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:62" pos:end="47:62">*</operator> <literal type="number" pos:start="47:64" pos:end="47:64">2</literal> <operator pos:start="47:66" pos:end="47:66">*</operator> <name pos:start="47:68" pos:end="47:79"><name pos:start="47:68" pos:end="47:68">s</name><operator pos:start="47:69" pos:end="47:70">-&gt;</operator><name pos:start="47:71" pos:end="47:79">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:19"><if pos:start="49:5" pos:end="51:19">if <condition pos:start="49:8" pos:end="49:23">(<expr pos:start="49:9" pos:end="49:22"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:22"><name pos:start="49:10" pos:end="49:10">v</name><operator pos:start="49:11" pos:end="49:12">-&gt;</operator><name pos:start="49:13" pos:end="49:22">ttblk_base</name></name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:19"><block_content pos:start="51:9" pos:end="51:19">

        <goto pos:start="51:9" pos:end="51:19">goto <name pos:start="51:14" pos:end="51:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:55"><expr pos:start="53:5" pos:end="53:54"><name pos:start="53:5" pos:end="53:12"><name pos:start="53:5" pos:end="53:5">v</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:12">ttblk</name></name>            <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:39"><name pos:start="53:27" pos:end="53:27">v</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:39">ttblk_base</name></name> <operator pos:start="53:41" pos:end="53:41">+</operator> <name pos:start="53:43" pos:end="53:54"><name pos:start="53:43" pos:end="53:43">s</name><operator pos:start="53:44" pos:end="53:45">-&gt;</operator><name pos:start="53:46" pos:end="53:54">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:85"><expr pos:start="55:5" pos:end="55:84"><name pos:start="55:5" pos:end="55:20"><name pos:start="55:5" pos:end="55:5">v</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:20">is_intra_base</name></name>    <operator pos:start="55:25" pos:end="55:25">=</operator> <call pos:start="55:27" pos:end="55:84"><name pos:start="55:27" pos:end="55:36">av_mallocz</name><argument_list pos:start="55:37" pos:end="55:84">(<argument pos:start="55:38" pos:end="55:83"><expr pos:start="55:38" pos:end="55:83"><sizeof pos:start="55:38" pos:end="55:64">sizeof<argument_list pos:start="55:44" pos:end="55:64">(<argument pos:start="55:45" pos:end="55:63"><expr pos:start="55:45" pos:end="55:63"><name pos:start="55:45" pos:end="55:63"><name pos:start="55:45" pos:end="55:45">v</name><operator pos:start="55:46" pos:end="55:47">-&gt;</operator><name pos:start="55:48" pos:end="55:60">is_intra_base</name><index pos:start="55:61" pos:end="55:63">[<expr pos:start="55:62" pos:end="55:62"><literal type="number" pos:start="55:62" pos:end="55:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="55:66" pos:end="55:66">*</operator> <literal type="number" pos:start="55:68" pos:end="55:68">2</literal> <operator pos:start="55:70" pos:end="55:70">*</operator> <name pos:start="55:72" pos:end="55:83"><name pos:start="55:72" pos:end="55:72">s</name><operator pos:start="55:73" pos:end="55:74">-&gt;</operator><name pos:start="55:75" pos:end="55:83">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="59:19"><if pos:start="57:5" pos:end="59:19">if <condition pos:start="57:8" pos:end="57:26">(<expr pos:start="57:9" pos:end="57:25"><operator pos:start="57:9" pos:end="57:9">!</operator><name pos:start="57:10" pos:end="57:25"><name pos:start="57:10" pos:end="57:10">v</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:25">is_intra_base</name></name></expr>)</condition><block type="pseudo" pos:start="59:9" pos:end="59:19"><block_content pos:start="59:9" pos:end="59:19">

        <goto pos:start="59:9" pos:end="59:19">goto <name pos:start="59:14" pos:end="59:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:58"><expr pos:start="61:5" pos:end="61:57"><name pos:start="61:5" pos:end="61:15"><name pos:start="61:5" pos:end="61:5">v</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:15">is_intra</name></name>         <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:42"><name pos:start="61:27" pos:end="61:27">v</name><operator pos:start="61:28" pos:end="61:29">-&gt;</operator><name pos:start="61:30" pos:end="61:42">is_intra_base</name></name> <operator pos:start="61:44" pos:end="61:44">+</operator> <name pos:start="61:46" pos:end="61:57"><name pos:start="61:46" pos:end="61:46">s</name><operator pos:start="61:47" pos:end="61:48">-&gt;</operator><name pos:start="61:49" pos:end="61:57">mb_stride</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:83"><expr pos:start="63:5" pos:end="63:82"><name pos:start="63:5" pos:end="63:19"><name pos:start="63:5" pos:end="63:5">v</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:19">luma_mv_base</name></name>     <operator pos:start="63:25" pos:end="63:25">=</operator> <call pos:start="63:27" pos:end="63:82"><name pos:start="63:27" pos:end="63:35">av_malloc</name><argument_list pos:start="63:36" pos:end="63:82">(<argument pos:start="63:37" pos:end="63:81"><expr pos:start="63:37" pos:end="63:81"><sizeof pos:start="63:37" pos:end="63:62">sizeof<argument_list pos:start="63:43" pos:end="63:62">(<argument pos:start="63:44" pos:end="63:61"><expr pos:start="63:44" pos:end="63:61"><name pos:start="63:44" pos:end="63:61"><name pos:start="63:44" pos:end="63:44">v</name><operator pos:start="63:45" pos:end="63:46">-&gt;</operator><name pos:start="63:47" pos:end="63:58">luma_mv_base</name><index pos:start="63:59" pos:end="63:61">[<expr pos:start="63:60" pos:end="63:60"><literal type="number" pos:start="63:60" pos:end="63:60">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="63:64" pos:end="63:64">*</operator> <literal type="number" pos:start="63:66" pos:end="63:66">2</literal> <operator pos:start="63:68" pos:end="63:68">*</operator> <name pos:start="63:70" pos:end="63:81"><name pos:start="63:70" pos:end="63:70">s</name><operator pos:start="63:71" pos:end="63:72">-&gt;</operator><name pos:start="63:73" pos:end="63:81">mb_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="65:5" pos:end="67:19"><if pos:start="65:5" pos:end="67:19">if <condition pos:start="65:8" pos:end="65:25">(<expr pos:start="65:9" pos:end="65:24"><operator pos:start="65:9" pos:end="65:9">!</operator><name pos:start="65:10" pos:end="65:24"><name pos:start="65:10" pos:end="65:10">v</name><operator pos:start="65:11" pos:end="65:12">-&gt;</operator><name pos:start="65:13" pos:end="65:24">luma_mv_base</name></name></expr>)</condition><block type="pseudo" pos:start="67:9" pos:end="67:19"><block_content pos:start="67:9" pos:end="67:19">

        <goto pos:start="67:9" pos:end="67:19">goto <name pos:start="67:14" pos:end="67:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:57"><expr pos:start="69:5" pos:end="69:56"><name pos:start="69:5" pos:end="69:14"><name pos:start="69:5" pos:end="69:5">v</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:14">luma_mv</name></name>          <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:41"><name pos:start="69:27" pos:end="69:27">v</name><operator pos:start="69:28" pos:end="69:29">-&gt;</operator><name pos:start="69:30" pos:end="69:41">luma_mv_base</name></name> <operator pos:start="69:43" pos:end="69:43">+</operator> <name pos:start="69:45" pos:end="69:56"><name pos:start="69:45" pos:end="69:45">s</name><operator pos:start="69:46" pos:end="69:47">-&gt;</operator><name pos:start="69:48" pos:end="69:56">mb_stride</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:88">/* allocate block type info in that way so it could be used with s-&gt;block_index[] */</comment>

    <expr_stmt pos:start="75:5" pos:end="75:105"><expr pos:start="75:5" pos:end="75:104"><name pos:start="75:5" pos:end="75:19"><name pos:start="75:5" pos:end="75:5">v</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:19">mb_type_base</name></name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:104"><name pos:start="75:23" pos:end="75:31">av_malloc</name><argument_list pos:start="75:32" pos:end="75:104">(<argument pos:start="75:33" pos:end="75:103"><expr pos:start="75:33" pos:end="75:103"><name pos:start="75:33" pos:end="75:44"><name pos:start="75:33" pos:end="75:33">s</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:44">b8_stride</name></name> <operator pos:start="75:46" pos:end="75:46">*</operator> <operator pos:start="75:48" pos:end="75:48">(</operator><name pos:start="75:49" pos:end="75:57">mb_height</name> <operator pos:start="75:59" pos:end="75:59">*</operator> <literal type="number" pos:start="75:61" pos:end="75:63">2</literal> <operator pos:start="75:63" pos:end="75:63">+</operator> <literal type="number" pos:start="75:65" pos:end="75:65">1</literal><operator pos:start="75:66" pos:end="75:66">)</operator> <operator pos:start="75:68" pos:end="75:68">+</operator> <name pos:start="75:70" pos:end="75:81"><name pos:start="75:70" pos:end="75:70">s</name><operator pos:start="75:71" pos:end="75:72">-&gt;</operator><name pos:start="75:73" pos:end="75:81">mb_stride</name></name> <operator pos:start="75:83" pos:end="75:83">*</operator> <operator pos:start="75:85" pos:end="75:85">(</operator><name pos:start="75:86" pos:end="75:94">mb_height</name> <operator pos:start="75:96" pos:end="75:96">+</operator> <literal type="number" pos:start="75:98" pos:end="75:98">1</literal><operator pos:start="75:99" pos:end="75:99">)</operator> <operator pos:start="75:101" pos:end="75:101">*</operator> <literal type="number" pos:start="75:103" pos:end="75:103">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="77:5" pos:end="79:19"><if pos:start="77:5" pos:end="79:19">if <condition pos:start="77:8" pos:end="77:25">(<expr pos:start="77:9" pos:end="77:24"><operator pos:start="77:9" pos:end="77:9">!</operator><name pos:start="77:10" pos:end="77:24"><name pos:start="77:10" pos:end="77:10">v</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:24">mb_type_base</name></name></expr>)</condition><block type="pseudo" pos:start="79:9" pos:end="79:19"><block_content pos:start="79:9" pos:end="79:19">

        <goto pos:start="79:9" pos:end="79:19">goto <name pos:start="79:14" pos:end="79:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:57"><expr pos:start="81:5" pos:end="81:56"><name pos:start="81:5" pos:end="81:17"><name pos:start="81:5" pos:end="81:5">v</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:14">mb_type</name><index pos:start="81:15" pos:end="81:17">[<expr pos:start="81:16" pos:end="81:16"><literal type="number" pos:start="81:16" pos:end="81:16">0</literal></expr>]</index></name>   <operator pos:start="81:21" pos:end="81:21">=</operator> <name pos:start="81:23" pos:end="81:37"><name pos:start="81:23" pos:end="81:23">v</name><operator pos:start="81:24" pos:end="81:25">-&gt;</operator><name pos:start="81:26" pos:end="81:37">mb_type_base</name></name> <operator pos:start="81:39" pos:end="81:39">+</operator> <name pos:start="81:41" pos:end="81:52"><name pos:start="81:41" pos:end="81:41">s</name><operator pos:start="81:42" pos:end="81:43">-&gt;</operator><name pos:start="81:44" pos:end="81:52">b8_stride</name></name> <operator pos:start="81:54" pos:end="81:54">+</operator> <literal type="number" pos:start="81:56" pos:end="81:56">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:94"><expr pos:start="83:5" pos:end="83:93"><name pos:start="83:5" pos:end="83:17"><name pos:start="83:5" pos:end="83:5">v</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:14">mb_type</name><index pos:start="83:15" pos:end="83:17">[<expr pos:start="83:16" pos:end="83:16"><literal type="number" pos:start="83:16" pos:end="83:16">1</literal></expr>]</index></name>   <operator pos:start="83:21" pos:end="83:21">=</operator> <name pos:start="83:23" pos:end="83:37"><name pos:start="83:23" pos:end="83:23">v</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:37">mb_type_base</name></name> <operator pos:start="83:39" pos:end="83:39">+</operator> <name pos:start="83:41" pos:end="83:52"><name pos:start="83:41" pos:end="83:41">s</name><operator pos:start="83:42" pos:end="83:43">-&gt;</operator><name pos:start="83:44" pos:end="83:52">b8_stride</name></name> <operator pos:start="83:54" pos:end="83:54">*</operator> <operator pos:start="83:56" pos:end="83:56">(</operator><name pos:start="83:57" pos:end="83:65">mb_height</name> <operator pos:start="83:67" pos:end="83:67">*</operator> <literal type="number" pos:start="83:69" pos:end="83:71">2</literal> <operator pos:start="83:71" pos:end="83:71">+</operator> <literal type="number" pos:start="83:73" pos:end="83:73">1</literal><operator pos:start="83:74" pos:end="83:74">)</operator> <operator pos:start="83:76" pos:end="83:76">+</operator> <name pos:start="83:78" pos:end="83:89"><name pos:start="83:78" pos:end="83:78">s</name><operator pos:start="83:79" pos:end="83:80">-&gt;</operator><name pos:start="83:81" pos:end="83:89">mb_stride</name></name> <operator pos:start="83:91" pos:end="83:91">+</operator> <literal type="number" pos:start="83:93" pos:end="83:93">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:69"><expr pos:start="85:5" pos:end="85:68"><name pos:start="85:5" pos:end="85:17"><name pos:start="85:5" pos:end="85:5">v</name><operator pos:start="85:6" pos:end="85:7">-&gt;</operator><name pos:start="85:8" pos:end="85:14">mb_type</name><index pos:start="85:15" pos:end="85:17">[<expr pos:start="85:16" pos:end="85:16"><literal type="number" pos:start="85:16" pos:end="85:16">2</literal></expr>]</index></name>   <operator pos:start="85:21" pos:end="85:21">=</operator> <name pos:start="85:23" pos:end="85:35"><name pos:start="85:23" pos:end="85:23">v</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:32">mb_type</name><index pos:start="85:33" pos:end="85:35">[<expr pos:start="85:34" pos:end="85:34"><literal type="number" pos:start="85:34" pos:end="85:34">1</literal></expr>]</index></name> <operator pos:start="85:37" pos:end="85:37">+</operator> <name pos:start="85:39" pos:end="85:50"><name pos:start="85:39" pos:end="85:39">s</name><operator pos:start="85:40" pos:end="85:41">-&gt;</operator><name pos:start="85:42" pos:end="85:50">mb_stride</name></name> <operator pos:start="85:52" pos:end="85:52">*</operator> <operator pos:start="85:54" pos:end="85:54">(</operator><name pos:start="85:55" pos:end="85:63">mb_height</name> <operator pos:start="85:65" pos:end="85:65">+</operator> <literal type="number" pos:start="85:67" pos:end="85:67">1</literal><operator pos:start="85:68" pos:end="85:68">)</operator></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:54">/* allocate memory to store block level MV info */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:115"><expr pos:start="91:5" pos:end="91:114"><name pos:start="91:5" pos:end="91:23"><name pos:start="91:5" pos:end="91:5">v</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:23">blk_mv_type_base</name></name> <operator pos:start="91:25" pos:end="91:25">=</operator> <call pos:start="91:27" pos:end="91:114"><name pos:start="91:27" pos:end="91:36">av_mallocz</name><argument_list pos:start="91:37" pos:end="91:114">(     <argument pos:start="91:43" pos:end="91:113"><expr pos:start="91:43" pos:end="91:113"><name pos:start="91:43" pos:end="91:54"><name pos:start="91:43" pos:end="91:43">s</name><operator pos:start="91:44" pos:end="91:45">-&gt;</operator><name pos:start="91:46" pos:end="91:54">b8_stride</name></name> <operator pos:start="91:56" pos:end="91:56">*</operator> <operator pos:start="91:58" pos:end="91:58">(</operator><name pos:start="91:59" pos:end="91:67">mb_height</name> <operator pos:start="91:69" pos:end="91:69">*</operator> <literal type="number" pos:start="91:71" pos:end="91:73">2</literal> <operator pos:start="91:73" pos:end="91:73">+</operator> <literal type="number" pos:start="91:75" pos:end="91:75">1</literal><operator pos:start="91:76" pos:end="91:76">)</operator> <operator pos:start="91:78" pos:end="91:78">+</operator> <name pos:start="91:80" pos:end="91:91"><name pos:start="91:80" pos:end="91:80">s</name><operator pos:start="91:81" pos:end="91:82">-&gt;</operator><name pos:start="91:83" pos:end="91:91">mb_stride</name></name> <operator pos:start="91:93" pos:end="91:93">*</operator> <operator pos:start="91:95" pos:end="91:95">(</operator><name pos:start="91:96" pos:end="91:104">mb_height</name> <operator pos:start="91:106" pos:end="91:106">+</operator> <literal type="number" pos:start="91:108" pos:end="91:108">1</literal><operator pos:start="91:109" pos:end="91:109">)</operator> <operator pos:start="91:111" pos:end="91:111">*</operator> <literal type="number" pos:start="91:113" pos:end="91:113">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="95:19"><if pos:start="93:5" pos:end="95:19">if <condition pos:start="93:8" pos:end="93:29">(<expr pos:start="93:9" pos:end="93:28"><operator pos:start="93:9" pos:end="93:9">!</operator><name pos:start="93:10" pos:end="93:28"><name pos:start="93:10" pos:end="93:10">v</name><operator pos:start="93:11" pos:end="93:12">-&gt;</operator><name pos:start="93:13" pos:end="93:28">blk_mv_type_base</name></name></expr>)</condition><block type="pseudo" pos:start="95:9" pos:end="95:19"><block_content pos:start="95:9" pos:end="95:19">

        <goto pos:start="95:9" pos:end="95:19">goto <name pos:start="95:14" pos:end="95:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:65"><expr pos:start="97:5" pos:end="97:64"><name pos:start="97:5" pos:end="97:18"><name pos:start="97:5" pos:end="97:5">v</name><operator pos:start="97:6" pos:end="97:7">-&gt;</operator><name pos:start="97:8" pos:end="97:18">blk_mv_type</name></name>      <operator pos:start="97:25" pos:end="97:25">=</operator> <name pos:start="97:27" pos:end="97:45"><name pos:start="97:27" pos:end="97:27">v</name><operator pos:start="97:28" pos:end="97:29">-&gt;</operator><name pos:start="97:30" pos:end="97:45">blk_mv_type_base</name></name> <operator pos:start="97:47" pos:end="97:47">+</operator> <name pos:start="97:49" pos:end="97:60"><name pos:start="97:49" pos:end="97:49">s</name><operator pos:start="97:50" pos:end="97:51">-&gt;</operator><name pos:start="97:52" pos:end="97:60">b8_stride</name></name> <operator pos:start="97:62" pos:end="97:62">+</operator> <literal type="number" pos:start="97:64" pos:end="97:64">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:116"><expr pos:start="99:5" pos:end="99:115"><name pos:start="99:5" pos:end="99:16"><name pos:start="99:5" pos:end="99:5">v</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:16">mv_f_base</name></name>        <operator pos:start="99:25" pos:end="99:25">=</operator> <call pos:start="99:27" pos:end="99:115"><name pos:start="99:27" pos:end="99:36">av_mallocz</name><argument_list pos:start="99:37" pos:end="99:115">(<argument pos:start="99:38" pos:end="99:114"><expr pos:start="99:38" pos:end="99:114"><literal type="number" pos:start="99:38" pos:end="99:38">2</literal> <operator pos:start="99:40" pos:end="99:40">*</operator> <operator pos:start="99:42" pos:end="99:42">(</operator><name pos:start="99:43" pos:end="99:54"><name pos:start="99:43" pos:end="99:43">s</name><operator pos:start="99:44" pos:end="99:45">-&gt;</operator><name pos:start="99:46" pos:end="99:54">b8_stride</name></name> <operator pos:start="99:56" pos:end="99:56">*</operator> <operator pos:start="99:58" pos:end="99:58">(</operator><name pos:start="99:59" pos:end="99:67">mb_height</name> <operator pos:start="99:69" pos:end="99:69">*</operator> <literal type="number" pos:start="99:71" pos:end="99:73">2</literal> <operator pos:start="99:73" pos:end="99:73">+</operator> <literal type="number" pos:start="99:75" pos:end="99:75">1</literal><operator pos:start="99:76" pos:end="99:76">)</operator> <operator pos:start="99:78" pos:end="99:78">+</operator> <name pos:start="99:80" pos:end="99:91"><name pos:start="99:80" pos:end="99:80">s</name><operator pos:start="99:81" pos:end="99:82">-&gt;</operator><name pos:start="99:83" pos:end="99:91">mb_stride</name></name> <operator pos:start="99:93" pos:end="99:93">*</operator> <operator pos:start="99:95" pos:end="99:95">(</operator><name pos:start="99:96" pos:end="99:104">mb_height</name> <operator pos:start="99:106" pos:end="99:106">+</operator> <literal type="number" pos:start="99:108" pos:end="99:108">1</literal><operator pos:start="99:109" pos:end="99:109">)</operator> <operator pos:start="99:111" pos:end="99:111">*</operator> <literal type="number" pos:start="99:113" pos:end="99:113">2</literal><operator pos:start="99:114" pos:end="99:114">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="103:19"><if pos:start="101:5" pos:end="103:19">if <condition pos:start="101:8" pos:end="101:22">(<expr pos:start="101:9" pos:end="101:21"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:21"><name pos:start="101:10" pos:end="101:10">v</name><operator pos:start="101:11" pos:end="101:12">-&gt;</operator><name pos:start="101:13" pos:end="101:21">mv_f_base</name></name></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:19"><block_content pos:start="103:9" pos:end="103:19">

        <goto pos:start="103:9" pos:end="103:19">goto <name pos:start="103:14" pos:end="103:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="105:5" pos:end="105:58"><expr pos:start="105:5" pos:end="105:57"><name pos:start="105:5" pos:end="105:14"><name pos:start="105:5" pos:end="105:5">v</name><operator pos:start="105:6" pos:end="105:7">-&gt;</operator><name pos:start="105:8" pos:end="105:11">mv_f</name><index pos:start="105:12" pos:end="105:14">[<expr pos:start="105:13" pos:end="105:13"><literal type="number" pos:start="105:13" pos:end="105:13">0</literal></expr>]</index></name>          <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:38"><name pos:start="105:27" pos:end="105:27">v</name><operator pos:start="105:28" pos:end="105:29">-&gt;</operator><name pos:start="105:30" pos:end="105:38">mv_f_base</name></name> <operator pos:start="105:40" pos:end="105:40">+</operator> <name pos:start="105:42" pos:end="105:53"><name pos:start="105:42" pos:end="105:42">s</name><operator pos:start="105:43" pos:end="105:44">-&gt;</operator><name pos:start="105:45" pos:end="105:53">b8_stride</name></name> <operator pos:start="105:55" pos:end="105:55">+</operator> <literal type="number" pos:start="105:57" pos:end="105:57">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:113"><expr pos:start="107:5" pos:end="107:112"><name pos:start="107:5" pos:end="107:14"><name pos:start="107:5" pos:end="107:5">v</name><operator pos:start="107:6" pos:end="107:7">-&gt;</operator><name pos:start="107:8" pos:end="107:11">mv_f</name><index pos:start="107:12" pos:end="107:14">[<expr pos:start="107:13" pos:end="107:13"><literal type="number" pos:start="107:13" pos:end="107:13">1</literal></expr>]</index></name>          <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:36"><name pos:start="107:27" pos:end="107:27">v</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:33">mv_f</name><index pos:start="107:34" pos:end="107:36">[<expr pos:start="107:35" pos:end="107:35"><literal type="number" pos:start="107:35" pos:end="107:35">0</literal></expr>]</index></name> <operator pos:start="107:38" pos:end="107:38">+</operator> <operator pos:start="107:40" pos:end="107:40">(</operator><name pos:start="107:41" pos:end="107:52"><name pos:start="107:41" pos:end="107:41">s</name><operator pos:start="107:42" pos:end="107:43">-&gt;</operator><name pos:start="107:44" pos:end="107:52">b8_stride</name></name> <operator pos:start="107:54" pos:end="107:54">*</operator> <operator pos:start="107:56" pos:end="107:56">(</operator><name pos:start="107:57" pos:end="107:65">mb_height</name> <operator pos:start="107:67" pos:end="107:67">*</operator> <literal type="number" pos:start="107:69" pos:end="107:71">2</literal> <operator pos:start="107:71" pos:end="107:71">+</operator> <literal type="number" pos:start="107:73" pos:end="107:73">1</literal><operator pos:start="107:74" pos:end="107:74">)</operator> <operator pos:start="107:76" pos:end="107:76">+</operator> <name pos:start="107:78" pos:end="107:89"><name pos:start="107:78" pos:end="107:78">s</name><operator pos:start="107:79" pos:end="107:80">-&gt;</operator><name pos:start="107:81" pos:end="107:89">mb_stride</name></name> <operator pos:start="107:91" pos:end="107:91">*</operator> <operator pos:start="107:93" pos:end="107:93">(</operator><name pos:start="107:94" pos:end="107:102">mb_height</name> <operator pos:start="107:104" pos:end="107:104">+</operator> <literal type="number" pos:start="107:106" pos:end="107:106">1</literal><operator pos:start="107:107" pos:end="107:107">)</operator> <operator pos:start="107:109" pos:end="107:109">*</operator> <literal type="number" pos:start="107:111" pos:end="107:111">2</literal><operator pos:start="107:112" pos:end="107:112">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:116"><expr pos:start="109:5" pos:end="109:115"><name pos:start="109:5" pos:end="109:21"><name pos:start="109:5" pos:end="109:5">v</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:21">mv_f_next_base</name></name>   <operator pos:start="109:25" pos:end="109:25">=</operator> <call pos:start="109:27" pos:end="109:115"><name pos:start="109:27" pos:end="109:36">av_mallocz</name><argument_list pos:start="109:37" pos:end="109:115">(<argument pos:start="109:38" pos:end="109:114"><expr pos:start="109:38" pos:end="109:114"><literal type="number" pos:start="109:38" pos:end="109:38">2</literal> <operator pos:start="109:40" pos:end="109:40">*</operator> <operator pos:start="109:42" pos:end="109:42">(</operator><name pos:start="109:43" pos:end="109:54"><name pos:start="109:43" pos:end="109:43">s</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:54">b8_stride</name></name> <operator pos:start="109:56" pos:end="109:56">*</operator> <operator pos:start="109:58" pos:end="109:58">(</operator><name pos:start="109:59" pos:end="109:67">mb_height</name> <operator pos:start="109:69" pos:end="109:69">*</operator> <literal type="number" pos:start="109:71" pos:end="109:73">2</literal> <operator pos:start="109:73" pos:end="109:73">+</operator> <literal type="number" pos:start="109:75" pos:end="109:75">1</literal><operator pos:start="109:76" pos:end="109:76">)</operator> <operator pos:start="109:78" pos:end="109:78">+</operator> <name pos:start="109:80" pos:end="109:91"><name pos:start="109:80" pos:end="109:80">s</name><operator pos:start="109:81" pos:end="109:82">-&gt;</operator><name pos:start="109:83" pos:end="109:91">mb_stride</name></name> <operator pos:start="109:93" pos:end="109:93">*</operator> <operator pos:start="109:95" pos:end="109:95">(</operator><name pos:start="109:96" pos:end="109:104">mb_height</name> <operator pos:start="109:106" pos:end="109:106">+</operator> <literal type="number" pos:start="109:108" pos:end="109:108">1</literal><operator pos:start="109:109" pos:end="109:109">)</operator> <operator pos:start="109:111" pos:end="109:111">*</operator> <literal type="number" pos:start="109:113" pos:end="109:113">2</literal><operator pos:start="109:114" pos:end="109:114">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="111:5" pos:end="113:19"><if pos:start="111:5" pos:end="113:19">if <condition pos:start="111:8" pos:end="111:27">(<expr pos:start="111:9" pos:end="111:26"><operator pos:start="111:9" pos:end="111:9">!</operator><name pos:start="111:10" pos:end="111:26"><name pos:start="111:10" pos:end="111:10">v</name><operator pos:start="111:11" pos:end="111:12">-&gt;</operator><name pos:start="111:13" pos:end="111:26">mv_f_next_base</name></name></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:19"><block_content pos:start="113:9" pos:end="113:19">

        <goto pos:start="113:9" pos:end="113:19">goto <name pos:start="113:14" pos:end="113:18">error</name>;</goto></block_content></block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:63"><expr pos:start="115:5" pos:end="115:62"><name pos:start="115:5" pos:end="115:19"><name pos:start="115:5" pos:end="115:5">v</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:16">mv_f_next</name><index pos:start="115:17" pos:end="115:19">[<expr pos:start="115:18" pos:end="115:18"><literal type="number" pos:start="115:18" pos:end="115:18">0</literal></expr>]</index></name>     <operator pos:start="115:25" pos:end="115:25">=</operator> <name pos:start="115:27" pos:end="115:43"><name pos:start="115:27" pos:end="115:27">v</name><operator pos:start="115:28" pos:end="115:29">-&gt;</operator><name pos:start="115:30" pos:end="115:43">mv_f_next_base</name></name> <operator pos:start="115:45" pos:end="115:45">+</operator> <name pos:start="115:47" pos:end="115:58"><name pos:start="115:47" pos:end="115:47">s</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:58">b8_stride</name></name> <operator pos:start="115:60" pos:end="115:60">+</operator> <literal type="number" pos:start="115:62" pos:end="115:62">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:118"><expr pos:start="117:5" pos:end="117:117"><name pos:start="117:5" pos:end="117:19"><name pos:start="117:5" pos:end="117:5">v</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:16">mv_f_next</name><index pos:start="117:17" pos:end="117:19">[<expr pos:start="117:18" pos:end="117:18"><literal type="number" pos:start="117:18" pos:end="117:18">1</literal></expr>]</index></name>     <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:41"><name pos:start="117:27" pos:end="117:27">v</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:38">mv_f_next</name><index pos:start="117:39" pos:end="117:41">[<expr pos:start="117:40" pos:end="117:40"><literal type="number" pos:start="117:40" pos:end="117:40">0</literal></expr>]</index></name> <operator pos:start="117:43" pos:end="117:43">+</operator> <operator pos:start="117:45" pos:end="117:45">(</operator><name pos:start="117:46" pos:end="117:57"><name pos:start="117:46" pos:end="117:46">s</name><operator pos:start="117:47" pos:end="117:48">-&gt;</operator><name pos:start="117:49" pos:end="117:57">b8_stride</name></name> <operator pos:start="117:59" pos:end="117:59">*</operator> <operator pos:start="117:61" pos:end="117:61">(</operator><name pos:start="117:62" pos:end="117:70">mb_height</name> <operator pos:start="117:72" pos:end="117:72">*</operator> <literal type="number" pos:start="117:74" pos:end="117:76">2</literal> <operator pos:start="117:76" pos:end="117:76">+</operator> <literal type="number" pos:start="117:78" pos:end="117:78">1</literal><operator pos:start="117:79" pos:end="117:79">)</operator> <operator pos:start="117:81" pos:end="117:81">+</operator> <name pos:start="117:83" pos:end="117:94"><name pos:start="117:83" pos:end="117:83">s</name><operator pos:start="117:84" pos:end="117:85">-&gt;</operator><name pos:start="117:86" pos:end="117:94">mb_stride</name></name> <operator pos:start="117:96" pos:end="117:96">*</operator> <operator pos:start="117:98" pos:end="117:98">(</operator><name pos:start="117:99" pos:end="117:107">mb_height</name> <operator pos:start="117:109" pos:end="117:109">+</operator> <literal type="number" pos:start="117:111" pos:end="117:111">1</literal><operator pos:start="117:112" pos:end="117:112">)</operator> <operator pos:start="117:114" pos:end="117:114">*</operator> <literal type="number" pos:start="117:116" pos:end="117:116">2</literal><operator pos:start="117:117" pos:end="117:117">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="121:5" pos:end="121:37"><expr pos:start="121:5" pos:end="121:36"><call pos:start="121:5" pos:end="121:36"><name pos:start="121:5" pos:end="121:26">ff_intrax8_common_init</name><argument_list pos:start="121:27" pos:end="121:36">(<argument pos:start="121:28" pos:end="121:33"><expr pos:start="121:28" pos:end="121:33"><operator pos:start="121:28" pos:end="121:28">&amp;</operator><name pos:start="121:29" pos:end="121:33"><name pos:start="121:29" pos:end="121:29">v</name><operator pos:start="121:30" pos:end="121:31">-&gt;</operator><name pos:start="121:32" pos:end="121:33">x8</name></name></expr></argument>,<argument pos:start="121:35" pos:end="121:35"><expr pos:start="121:35" pos:end="121:35"><name pos:start="121:35" pos:end="121:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="125:5" pos:end="137:5"><if pos:start="125:5" pos:end="137:5">if <condition pos:start="125:8" pos:end="125:98">(<expr pos:start="125:9" pos:end="125:97"><name pos:start="125:9" pos:end="125:26"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:16">avctx</name><operator pos:start="125:17" pos:end="125:18">-&gt;</operator><name pos:start="125:19" pos:end="125:26">codec_id</name></name> <operator pos:start="125:28" pos:end="125:29">==</operator> <name pos:start="125:31" pos:end="125:51">AV_CODEC_ID_WMV3IMAGE</name> <operator pos:start="125:53" pos:end="125:54">||</operator> <name pos:start="125:56" pos:end="125:73"><name pos:start="125:56" pos:end="125:56">s</name><operator pos:start="125:57" pos:end="125:58">-&gt;</operator><name pos:start="125:59" pos:end="125:63">avctx</name><operator pos:start="125:64" pos:end="125:65">-&gt;</operator><name pos:start="125:66" pos:end="125:73">codec_id</name></name> <operator pos:start="125:75" pos:end="125:76">==</operator> <name pos:start="125:78" pos:end="125:97">AV_CODEC_ID_VC1IMAGE</name></expr>)</condition> <block pos:start="125:100" pos:end="137:5">{<block_content pos:start="127:9" pos:end="135:9">

        <for pos:start="127:9" pos:end="135:9">for <control pos:start="127:13" pos:end="127:31">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:26"><expr pos:start="127:21" pos:end="127:25"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <literal type="number" pos:start="127:25" pos:end="127:25">4</literal></expr>;</condition> <incr pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:28">i</name><operator pos:start="127:29" pos:end="127:30">++</operator></expr></incr>)</control> <block pos:start="127:33" pos:end="135:9">{<block_content pos:start="129:13" pos:end="133:27">

            <expr_stmt pos:start="129:13" pos:end="129:67"><expr pos:start="129:13" pos:end="129:66"><name pos:start="129:13" pos:end="129:37"><name pos:start="129:13" pos:end="129:13">v</name><operator pos:start="129:14" pos:end="129:15">-&gt;</operator><name pos:start="129:16" pos:end="129:22">sr_rows</name><index pos:start="129:23" pos:end="129:30">[<expr pos:start="129:24" pos:end="129:29"><name pos:start="129:24" pos:end="129:24">i</name> <operator pos:start="129:26" pos:end="129:27">&gt;&gt;</operator> <literal type="number" pos:start="129:29" pos:end="129:29">1</literal></expr>]</index><index pos:start="129:31" pos:end="129:37">[<expr pos:start="129:32" pos:end="129:36"><name pos:start="129:32" pos:end="129:32">i</name> <operator pos:start="129:34" pos:end="129:34">&amp;</operator> <literal type="number" pos:start="129:36" pos:end="129:36">1</literal></expr>]</index></name> <operator pos:start="129:39" pos:end="129:39">=</operator> <call pos:start="129:41" pos:end="129:66"><name pos:start="129:41" pos:end="129:49">av_malloc</name><argument_list pos:start="129:50" pos:end="129:66">(<argument pos:start="129:51" pos:end="129:65"><expr pos:start="129:51" pos:end="129:65"><name pos:start="129:51" pos:end="129:65"><name pos:start="129:51" pos:end="129:51">v</name><operator pos:start="129:52" pos:end="129:53">-&gt;</operator><name pos:start="129:54" pos:end="129:65">output_width</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="131:13" pos:end="133:27"><if pos:start="131:13" pos:end="133:27">if <condition pos:start="131:16" pos:end="131:43">(<expr pos:start="131:17" pos:end="131:42"><operator pos:start="131:17" pos:end="131:17">!</operator><name pos:start="131:18" pos:end="131:42"><name pos:start="131:18" pos:end="131:18">v</name><operator pos:start="131:19" pos:end="131:20">-&gt;</operator><name pos:start="131:21" pos:end="131:27">sr_rows</name><index pos:start="131:28" pos:end="131:35">[<expr pos:start="131:29" pos:end="131:34"><name pos:start="131:29" pos:end="131:29">i</name> <operator pos:start="131:31" pos:end="131:32">&gt;&gt;</operator> <literal type="number" pos:start="131:34" pos:end="131:34">1</literal></expr>]</index><index pos:start="131:36" pos:end="131:42">[<expr pos:start="131:37" pos:end="131:41"><name pos:start="131:37" pos:end="131:37">i</name> <operator pos:start="131:39" pos:end="131:39">&amp;</operator> <literal type="number" pos:start="131:41" pos:end="131:41">1</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="133:17" pos:end="133:27"><block_content pos:start="133:17" pos:end="133:27">

                <goto pos:start="133:17" pos:end="133:27">goto <name pos:start="133:22" pos:end="133:26">error</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="141:5" pos:end="141:13">return <expr pos:start="141:12" pos:end="141:12"><literal type="number" pos:start="141:12" pos:end="141:12">0</literal></expr>;</return>



<label pos:start="145:1" pos:end="145:6"><name pos:start="145:1" pos:end="145:5">error</name>:</label>

    <expr_stmt pos:start="147:5" pos:end="147:32"><expr pos:start="147:5" pos:end="147:31"><call pos:start="147:5" pos:end="147:31"><name pos:start="147:5" pos:end="147:21">ff_vc1_decode_end</name><argument_list pos:start="147:22" pos:end="147:31">(<argument pos:start="147:23" pos:end="147:30"><expr pos:start="147:23" pos:end="147:30"><name pos:start="147:23" pos:end="147:30"><name pos:start="147:23" pos:end="147:23">s</name><operator pos:start="147:24" pos:end="147:25">-&gt;</operator><name pos:start="147:26" pos:end="147:30">avctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="149:5" pos:end="149:27">return <expr pos:start="149:12" pos:end="149:26"><call pos:start="149:12" pos:end="149:26"><name pos:start="149:12" pos:end="149:18">AVERROR</name><argument_list pos:start="149:19" pos:end="149:26">(<argument pos:start="149:20" pos:end="149:25"><expr pos:start="149:20" pos:end="149:25"><name pos:start="149:20" pos:end="149:25">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
