<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24036.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vnc_refresh</name><parameter_list pos:start="1:24" pos:end="1:37">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:30"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:36">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:77">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">VncDisplay</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">vd</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">VncState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">vs</name></decl>, <decl pos:start="7:19" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:14"><modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:21">vn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">has_dirty</name></decl>, <decl pos:start="9:20" pos:end="9:28"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:24">rects</name> <init pos:start="9:26" pos:end="9:28">= <expr pos:start="9:28" pos:end="9:28"><literal type="number" pos:start="9:28" pos:end="9:28">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:20"><expr pos:start="13:5" pos:end="13:19"><call pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:17">vga_hw_update</name><argument_list pos:start="13:18" pos:end="13:19">()</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="27:5"><if pos:start="17:5" pos:end="27:5">if <condition pos:start="17:8" pos:end="17:32">(<expr pos:start="17:9" pos:end="17:31"><call pos:start="17:9" pos:end="17:31"><name pos:start="17:9" pos:end="17:27">vnc_trylock_display</name><argument_list pos:start="17:28" pos:end="17:31">(<argument pos:start="17:29" pos:end="17:30"><expr pos:start="17:29" pos:end="17:30"><name pos:start="17:29" pos:end="17:30">vd</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:34" pos:end="27:5">{<block_content pos:start="19:9" pos:end="25:15">

        <expr_stmt pos:start="19:9" pos:end="19:55"><expr pos:start="19:9" pos:end="19:54"><name pos:start="19:9" pos:end="19:26"><name pos:start="19:9" pos:end="19:10">vd</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:26">timer_interval</name></name> <operator pos:start="19:28" pos:end="19:28">=</operator> <name pos:start="19:30" pos:end="19:54">VNC_REFRESH_INTERVAL_BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="23:43"><expr pos:start="21:9" pos:end="23:42"><call pos:start="21:9" pos:end="23:42"><name pos:start="21:9" pos:end="21:22">qemu_mod_timer</name><argument_list pos:start="21:23" pos:end="23:42">(<argument pos:start="21:24" pos:end="21:32"><expr pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:32"><name pos:start="21:24" pos:end="21:25">vd</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:32">timer</name></name></expr></argument>, <argument pos:start="21:35" pos:end="23:41"><expr pos:start="21:35" pos:end="23:41"><call pos:start="21:35" pos:end="21:58"><name pos:start="21:35" pos:end="21:48">qemu_get_clock</name><argument_list pos:start="21:49" pos:end="21:58">(<argument pos:start="21:50" pos:end="21:57"><expr pos:start="21:50" pos:end="21:57"><name pos:start="21:50" pos:end="21:57">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="21:60" pos:end="21:60">+</operator>

                       <name pos:start="23:24" pos:end="23:41"><name pos:start="23:24" pos:end="23:25">vd</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:41">timer_interval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="25:9" pos:end="25:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:13">has_dirty</name> <operator pos:start="31:15" pos:end="31:15">=</operator> <call pos:start="31:17" pos:end="31:46"><name pos:start="31:17" pos:end="31:42">vnc_refresh_server_surface</name><argument_list pos:start="31:43" pos:end="31:46">(<argument pos:start="31:44" pos:end="31:45"><expr pos:start="31:44" pos:end="31:45"><name pos:start="31:44" pos:end="31:45">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><call pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:22">vnc_unlock_display</name><argument_list pos:start="33:23" pos:end="33:26">(<argument pos:start="33:24" pos:end="33:25"><expr pos:start="33:24" pos:end="33:25"><name pos:start="33:24" pos:end="33:25">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="37:5" pos:end="37:51"><name pos:start="37:5" pos:end="37:23">QTAILQ_FOREACH_SAFE</name><argument_list pos:start="37:24" pos:end="37:51">(<argument pos:start="37:25" pos:end="37:26">vs</argument>, <argument pos:start="37:29" pos:end="37:40">&amp;vd-&gt;clients</argument>, <argument pos:start="37:43" pos:end="37:46">next</argument>, <argument pos:start="37:49" pos:end="37:50">vn</argument>)</argument_list></macro> <block pos:start="37:53" pos:end="43:5">{<block_content pos:start="39:9" pos:end="39:50">

        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:13">rects</name> <operator pos:start="39:15" pos:end="39:16">+=</operator> <call pos:start="39:18" pos:end="39:49"><name pos:start="39:18" pos:end="39:34">vnc_update_client</name><argument_list pos:start="39:35" pos:end="39:49">(<argument pos:start="39:36" pos:end="39:37"><expr pos:start="39:36" pos:end="39:37"><name pos:start="39:36" pos:end="39:37">vs</name></expr></argument>, <argument pos:start="39:40" pos:end="39:48"><expr pos:start="39:40" pos:end="39:48"><name pos:start="39:40" pos:end="39:48">has_dirty</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="41:9" pos:end="41:39">/* vs might be free()ed here */</comment>

    </block_content>}</block>



    <comment type="block" pos:start="47:5" pos:end="49:45">/* vd-&gt;timer could be NULL now if the last client disconnected,

     * in this case don't update the timer */</comment>

    <if_stmt pos:start="51:5" pos:end="53:15"><if pos:start="51:5" pos:end="53:15">if <condition pos:start="51:8" pos:end="51:26">(<expr pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:17"><name pos:start="51:9" pos:end="51:10">vd</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:17">timer</name></name> <operator pos:start="51:19" pos:end="51:20">==</operator> <name pos:start="51:22" pos:end="51:25">NULL</name></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:15"><block_content pos:start="53:9" pos:end="53:15">

        <return pos:start="53:9" pos:end="53:15">return;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="57:5" pos:end="73:5"><if pos:start="57:5" pos:end="65:5">if <condition pos:start="57:8" pos:end="57:27">(<expr pos:start="57:9" pos:end="57:26"><name pos:start="57:9" pos:end="57:17">has_dirty</name> <operator pos:start="57:19" pos:end="57:20">&amp;&amp;</operator> <name pos:start="57:22" pos:end="57:26">rects</name></expr>)</condition> <block pos:start="57:29" pos:end="65:5">{<block_content pos:start="59:9" pos:end="63:59">

        <expr_stmt pos:start="59:9" pos:end="59:32"><expr pos:start="59:9" pos:end="59:31"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:10">vd</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:26">timer_interval</name></name> <operator pos:start="59:28" pos:end="59:29">/=</operator> <literal type="number" pos:start="59:31" pos:end="59:31">2</literal></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="63:59"><if pos:start="61:9" pos:end="63:59">if <condition pos:start="61:12" pos:end="61:59">(<expr pos:start="61:13" pos:end="61:58"><name pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:14">vd</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:30">timer_interval</name></name> <operator pos:start="61:32" pos:end="61:32">&lt;</operator> <name pos:start="61:34" pos:end="61:58">VNC_REFRESH_INTERVAL_BASE</name></expr>)</condition><block type="pseudo" pos:start="63:13" pos:end="63:59"><block_content pos:start="63:13" pos:end="63:59">

            <expr_stmt pos:start="63:13" pos:end="63:59"><expr pos:start="63:13" pos:end="63:58"><name pos:start="63:13" pos:end="63:30"><name pos:start="63:13" pos:end="63:14">vd</name><operator pos:start="63:15" pos:end="63:16">-&gt;</operator><name pos:start="63:17" pos:end="63:30">timer_interval</name></name> <operator pos:start="63:32" pos:end="63:32">=</operator> <name pos:start="63:34" pos:end="63:58">VNC_REFRESH_INTERVAL_BASE</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="65:7" pos:end="73:5">else <block pos:start="65:12" pos:end="73:5">{<block_content pos:start="67:9" pos:end="71:58">

        <expr_stmt pos:start="67:9" pos:end="67:55"><expr pos:start="67:9" pos:end="67:54"><name pos:start="67:9" pos:end="67:26"><name pos:start="67:9" pos:end="67:10">vd</name><operator pos:start="67:11" pos:end="67:12">-&gt;</operator><name pos:start="67:13" pos:end="67:26">timer_interval</name></name> <operator pos:start="67:28" pos:end="67:29">+=</operator> <name pos:start="67:31" pos:end="67:54">VNC_REFRESH_INTERVAL_INC</name></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="71:58"><if pos:start="69:9" pos:end="71:58">if <condition pos:start="69:12" pos:end="69:58">(<expr pos:start="69:13" pos:end="69:57"><name pos:start="69:13" pos:end="69:30"><name pos:start="69:13" pos:end="69:14">vd</name><operator pos:start="69:15" pos:end="69:16">-&gt;</operator><name pos:start="69:17" pos:end="69:30">timer_interval</name></name> <operator pos:start="69:32" pos:end="69:32">&gt;</operator> <name pos:start="69:34" pos:end="69:57">VNC_REFRESH_INTERVAL_MAX</name></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:58"><block_content pos:start="71:13" pos:end="71:58">

            <expr_stmt pos:start="71:13" pos:end="71:58"><expr pos:start="71:13" pos:end="71:57"><name pos:start="71:13" pos:end="71:30"><name pos:start="71:13" pos:end="71:14">vd</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:30">timer_interval</name></name> <operator pos:start="71:32" pos:end="71:32">=</operator> <name pos:start="71:34" pos:end="71:57">VNC_REFRESH_INTERVAL_MAX</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:77"><expr pos:start="75:5" pos:end="75:76"><call pos:start="75:5" pos:end="75:76"><name pos:start="75:5" pos:end="75:18">qemu_mod_timer</name><argument_list pos:start="75:19" pos:end="75:76">(<argument pos:start="75:20" pos:end="75:28"><expr pos:start="75:20" pos:end="75:28"><name pos:start="75:20" pos:end="75:28"><name pos:start="75:20" pos:end="75:21">vd</name><operator pos:start="75:22" pos:end="75:23">-&gt;</operator><name pos:start="75:24" pos:end="75:28">timer</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:75"><expr pos:start="75:31" pos:end="75:75"><call pos:start="75:31" pos:end="75:54"><name pos:start="75:31" pos:end="75:44">qemu_get_clock</name><argument_list pos:start="75:45" pos:end="75:54">(<argument pos:start="75:46" pos:end="75:53"><expr pos:start="75:46" pos:end="75:53"><name pos:start="75:46" pos:end="75:53">rt_clock</name></expr></argument>)</argument_list></call> <operator pos:start="75:56" pos:end="75:56">+</operator> <name pos:start="75:58" pos:end="75:75"><name pos:start="75:58" pos:end="75:59">vd</name><operator pos:start="75:60" pos:end="75:61">-&gt;</operator><name pos:start="75:62" pos:end="75:75">timer_interval</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
