<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11103.c" pos:tabs="8"><function pos:start="1:1" pos:end="11:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:21">file_write</name><parameter_list pos:start="1:22" pos:end="1:72">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:32">URLContext</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:35">h</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:61"><decl pos:start="1:38" pos:end="1:61"><type pos:start="1:38" pos:end="1:61"><specifier pos:start="1:38" pos:end="1:42">const</specifier> <name pos:start="1:44" pos:end="1:51">unsigned</name> <name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">buf</name></decl></parameter>, <parameter pos:start="1:64" pos:end="1:71"><decl pos:start="1:64" pos:end="1:71"><type pos:start="1:64" pos:end="1:71"><name pos:start="1:64" pos:end="1:66">int</name></type> <name pos:start="1:68" pos:end="1:71">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="11:1">{<block_content pos:start="5:5" pos:end="9:38">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">FileContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">h</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">r</name> <init pos:start="7:11" pos:end="7:35">= <expr pos:start="7:13" pos:end="7:35"><call pos:start="7:13" pos:end="7:35"><name pos:start="7:13" pos:end="7:17">write</name><argument_list pos:start="7:18" pos:end="7:35">(<argument pos:start="7:19" pos:end="7:23"><expr pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:23"><name pos:start="7:19" pos:end="7:19">c</name><operator pos:start="7:20" pos:end="7:21">-&gt;</operator><name pos:start="7:22" pos:end="7:23">fd</name></name></expr></argument>, <argument pos:start="7:26" pos:end="7:28"><expr pos:start="7:26" pos:end="7:28"><name pos:start="7:26" pos:end="7:28">buf</name></expr></argument>, <argument pos:start="7:31" pos:end="7:34"><expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <return pos:start="9:5" pos:end="9:38">return <expr pos:start="9:12" pos:end="9:37"><ternary pos:start="9:12" pos:end="9:37"><condition pos:start="9:12" pos:end="9:21"><expr pos:start="9:12" pos:end="9:20"><operator pos:start="9:12" pos:end="9:12">(</operator><operator pos:start="9:13" pos:end="9:13">-</operator><literal type="number" pos:start="9:14" pos:end="9:14">1</literal> <operator pos:start="9:16" pos:end="9:17">==</operator> <name pos:start="9:19" pos:end="9:19">r</name><operator pos:start="9:20" pos:end="9:20">)</operator></expr>?</condition><then pos:start="9:22" pos:end="9:35"><expr pos:start="9:22" pos:end="9:35"><call pos:start="9:22" pos:end="9:35"><name pos:start="9:22" pos:end="9:28">AVERROR</name><argument_list pos:start="9:29" pos:end="9:35">(<argument pos:start="9:30" pos:end="9:34"><expr pos:start="9:30" pos:end="9:34"><name pos:start="9:30" pos:end="9:34">errno</name></expr></argument>)</argument_list></call></expr></then><else pos:start="9:36" pos:end="9:37">:<expr pos:start="9:37" pos:end="9:37"><name pos:start="9:37" pos:end="9:37">r</name></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
