<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10199.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">vnc_dpy_resize</name><parameter_list pos:start="1:27" pos:end="1:44">(<parameter pos:start="1:28" pos:end="1:43"><decl pos:start="1:28" pos:end="1:43"><type pos:start="1:28" pos:end="1:41"><name pos:start="1:28" pos:end="1:39">DisplayState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">ds</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:20">size_changed</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VncDisplay</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">vd</name> <init pos:start="7:20" pos:end="7:31">= <expr pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:31"><name pos:start="7:22" pos:end="7:23">ds</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:31">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">VncState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">vs</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:24">/* server surface */</comment>

    <if_stmt pos:start="15:5" pos:end="17:55"><if pos:start="15:5" pos:end="17:55">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:19"><name pos:start="15:10" pos:end="15:11">vd</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:19">server</name></name></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:55"><block_content pos:start="17:9" pos:end="17:55">

        <expr_stmt pos:start="17:9" pos:end="17:55"><expr pos:start="17:9" pos:end="17:54"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:10">vd</name><operator pos:start="17:11" pos:end="17:12">-&gt;</operator><name pos:start="17:13" pos:end="17:18">server</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:54"><name pos:start="17:22" pos:end="17:33">qemu_mallocz</name><argument_list pos:start="17:34" pos:end="17:54">(<argument pos:start="17:35" pos:end="17:53"><expr pos:start="17:35" pos:end="17:53"><sizeof pos:start="17:35" pos:end="17:53">sizeof<argument_list pos:start="17:41" pos:end="17:53">(<argument pos:start="17:42" pos:end="17:52"><expr pos:start="17:42" pos:end="17:52"><operator pos:start="17:42" pos:end="17:42">*</operator><name pos:start="17:43" pos:end="17:52"><name pos:start="17:43" pos:end="17:44">vd</name><operator pos:start="17:45" pos:end="17:46">-&gt;</operator><name pos:start="17:47" pos:end="17:52">server</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="19:5" pos:end="21:36"><if pos:start="19:5" pos:end="21:36">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:10">vd</name><operator pos:start="19:11" pos:end="19:12">-&gt;</operator><name pos:start="19:13" pos:end="19:18">server</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:24">data</name></name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:36"><block_content pos:start="21:9" pos:end="21:36">

        <expr_stmt pos:start="21:9" pos:end="21:36"><expr pos:start="21:9" pos:end="21:35"><call pos:start="21:9" pos:end="21:35"><name pos:start="21:9" pos:end="21:17">qemu_free</name><argument_list pos:start="21:18" pos:end="21:35">(<argument pos:start="21:19" pos:end="21:34"><expr pos:start="21:19" pos:end="21:34"><name pos:start="21:19" pos:end="21:34"><name pos:start="21:19" pos:end="21:20">vd</name><operator pos:start="21:21" pos:end="21:22">-&gt;</operator><name pos:start="21:23" pos:end="21:28">server</name><operator pos:start="21:29" pos:end="21:30">-&gt;</operator><name pos:start="21:31" pos:end="21:34">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:35"><expr pos:start="23:5" pos:end="23:34"><operator pos:start="23:5" pos:end="23:5">*</operator><operator pos:start="23:6" pos:end="23:6">(</operator><name pos:start="23:7" pos:end="23:16"><name pos:start="23:7" pos:end="23:8">vd</name><operator pos:start="23:9" pos:end="23:10">-&gt;</operator><name pos:start="23:11" pos:end="23:16">server</name></name><operator pos:start="23:17" pos:end="23:17">)</operator> <operator pos:start="23:19" pos:end="23:19">=</operator> <operator pos:start="23:21" pos:end="23:21">*</operator><operator pos:start="23:22" pos:end="23:22">(</operator><name pos:start="23:23" pos:end="23:33"><name pos:start="23:23" pos:end="23:24">ds</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:33">surface</name></name><operator pos:start="23:34" pos:end="23:34">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:56"><expr pos:start="25:5" pos:end="27:55"><name pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:6">vd</name><operator pos:start="25:7" pos:end="25:8">-&gt;</operator><name pos:start="25:9" pos:end="25:14">server</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:20">data</name></name> <operator pos:start="25:22" pos:end="25:22">=</operator> <call pos:start="25:24" pos:end="27:55"><name pos:start="25:24" pos:end="25:35">qemu_mallocz</name><argument_list pos:start="25:36" pos:end="27:55">(<argument pos:start="25:37" pos:end="27:54"><expr pos:start="25:37" pos:end="27:54"><name pos:start="25:37" pos:end="25:56"><name pos:start="25:37" pos:end="25:38">vd</name><operator pos:start="25:39" pos:end="25:40">-&gt;</operator><name pos:start="25:41" pos:end="25:46">server</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:56">linesize</name></name> <operator pos:start="25:58" pos:end="25:58">*</operator>

                                    <name pos:start="27:37" pos:end="27:54"><name pos:start="27:37" pos:end="27:38">vd</name><operator pos:start="27:39" pos:end="27:40">-&gt;</operator><name pos:start="27:41" pos:end="27:46">server</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:54">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:23">/* guest surface */</comment>

    <if_stmt pos:start="33:5" pos:end="35:59"><if pos:start="33:5" pos:end="35:59">if <condition pos:start="33:8" pos:end="33:22">(<expr pos:start="33:9" pos:end="33:21"><operator pos:start="33:9" pos:end="33:9">!</operator><name pos:start="33:10" pos:end="33:21"><name pos:start="33:10" pos:end="33:11">vd</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">guest</name><operator pos:start="33:19" pos:end="33:19">.</operator><name pos:start="33:20" pos:end="33:21">ds</name></name></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:59"><block_content pos:start="35:9" pos:end="35:59">

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:20"><name pos:start="35:9" pos:end="35:10">vd</name><operator pos:start="35:11" pos:end="35:12">-&gt;</operator><name pos:start="35:13" pos:end="35:17">guest</name><operator pos:start="35:18" pos:end="35:18">.</operator><name pos:start="35:19" pos:end="35:20">ds</name></name> <operator pos:start="35:22" pos:end="35:22">=</operator> <call pos:start="35:24" pos:end="35:58"><name pos:start="35:24" pos:end="35:35">qemu_mallocz</name><argument_list pos:start="35:36" pos:end="35:58">(<argument pos:start="35:37" pos:end="35:57"><expr pos:start="35:37" pos:end="35:57"><sizeof pos:start="35:37" pos:end="35:57">sizeof<argument_list pos:start="35:43" pos:end="35:57">(<argument pos:start="35:44" pos:end="35:56"><expr pos:start="35:44" pos:end="35:56"><operator pos:start="35:44" pos:end="35:44">*</operator><name pos:start="35:45" pos:end="35:56"><name pos:start="35:45" pos:end="35:46">vd</name><operator pos:start="35:47" pos:end="35:48">-&gt;</operator><name pos:start="35:49" pos:end="35:53">guest</name><operator pos:start="35:54" pos:end="35:54">.</operator><name pos:start="35:55" pos:end="35:56">ds</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:31"><if pos:start="37:5" pos:end="39:31">if <condition pos:start="37:8" pos:end="37:71">(<expr pos:start="37:9" pos:end="37:70"><call pos:start="37:9" pos:end="37:34"><name pos:start="37:9" pos:end="37:30">ds_get_bytes_per_pixel</name><argument_list pos:start="37:31" pos:end="37:34">(<argument pos:start="37:32" pos:end="37:33"><expr pos:start="37:32" pos:end="37:33"><name pos:start="37:32" pos:end="37:33">ds</name></expr></argument>)</argument_list></call> <operator pos:start="37:36" pos:end="37:37">!=</operator> <name pos:start="37:39" pos:end="37:70"><name pos:start="37:39" pos:end="37:40">vd</name><operator pos:start="37:41" pos:end="37:42">-&gt;</operator><name pos:start="37:43" pos:end="37:47">guest</name><operator pos:start="37:48" pos:end="37:48">.</operator><name pos:start="37:49" pos:end="37:50">ds</name><operator pos:start="37:51" pos:end="37:52">-&gt;</operator><name pos:start="37:53" pos:end="37:54">pf</name><operator pos:start="37:55" pos:end="37:55">.</operator><name pos:start="37:56" pos:end="37:70">bytes_per_pixel</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:31"><block_content pos:start="39:9" pos:end="39:31">

        <expr_stmt pos:start="39:9" pos:end="39:31"><expr pos:start="39:9" pos:end="39:30"><call pos:start="39:9" pos:end="39:30"><name pos:start="39:9" pos:end="39:26">console_color_init</name><argument_list pos:start="39:27" pos:end="39:30">(<argument pos:start="39:28" pos:end="39:29"><expr pos:start="39:28" pos:end="39:29"><name pos:start="39:28" pos:end="39:29">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="43:61"><expr pos:start="41:5" pos:end="43:60"><name pos:start="41:5" pos:end="41:16">size_changed</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:35"><name pos:start="41:20" pos:end="41:31">ds_get_width</name><argument_list pos:start="41:32" pos:end="41:35">(<argument pos:start="41:33" pos:end="41:34"><expr pos:start="41:33" pos:end="41:34"><name pos:start="41:33" pos:end="41:34">ds</name></expr></argument>)</argument_list></call> <operator pos:start="41:37" pos:end="41:38">!=</operator> <name pos:start="41:40" pos:end="41:58"><name pos:start="41:40" pos:end="41:41">vd</name><operator pos:start="41:42" pos:end="41:43">-&gt;</operator><name pos:start="41:44" pos:end="41:48">guest</name><operator pos:start="41:49" pos:end="41:49">.</operator><name pos:start="41:50" pos:end="41:51">ds</name><operator pos:start="41:52" pos:end="41:53">-&gt;</operator><name pos:start="41:54" pos:end="41:58">width</name></name> <operator pos:start="41:60" pos:end="41:61">||</operator>

                   <call pos:start="43:20" pos:end="43:36"><name pos:start="43:20" pos:end="43:32">ds_get_height</name><argument_list pos:start="43:33" pos:end="43:36">(<argument pos:start="43:34" pos:end="43:35"><expr pos:start="43:34" pos:end="43:35"><name pos:start="43:34" pos:end="43:35">ds</name></expr></argument>)</argument_list></call> <operator pos:start="43:38" pos:end="43:39">!=</operator> <name pos:start="43:41" pos:end="43:60"><name pos:start="43:41" pos:end="43:42">vd</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:49">guest</name><operator pos:start="43:50" pos:end="43:50">.</operator><name pos:start="43:51" pos:end="43:52">ds</name><operator pos:start="43:53" pos:end="43:54">-&gt;</operator><name pos:start="43:55" pos:end="43:60">height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:37"><expr pos:start="45:5" pos:end="45:36"><operator pos:start="45:5" pos:end="45:5">*</operator><operator pos:start="45:6" pos:end="45:6">(</operator><name pos:start="45:7" pos:end="45:18"><name pos:start="45:7" pos:end="45:8">vd</name><operator pos:start="45:9" pos:end="45:10">-&gt;</operator><name pos:start="45:11" pos:end="45:15">guest</name><operator pos:start="45:16" pos:end="45:16">.</operator><name pos:start="45:17" pos:end="45:18">ds</name></name><operator pos:start="45:19" pos:end="45:19">)</operator> <operator pos:start="45:21" pos:end="45:21">=</operator> <operator pos:start="45:23" pos:end="45:23">*</operator><operator pos:start="45:24" pos:end="45:24">(</operator><name pos:start="45:25" pos:end="45:35"><name pos:start="45:25" pos:end="45:26">ds</name><operator pos:start="45:27" pos:end="45:28">-&gt;</operator><name pos:start="45:29" pos:end="45:35">surface</name></name><operator pos:start="45:36" pos:end="45:36">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:59"><expr pos:start="47:5" pos:end="47:58"><call pos:start="47:5" pos:end="47:58"><name pos:start="47:5" pos:end="47:10">memset</name><argument_list pos:start="47:11" pos:end="47:58">(<argument pos:start="47:12" pos:end="47:26"><expr pos:start="47:12" pos:end="47:26"><name pos:start="47:12" pos:end="47:26"><name pos:start="47:12" pos:end="47:13">vd</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:20">guest</name><operator pos:start="47:21" pos:end="47:21">.</operator><name pos:start="47:22" pos:end="47:26">dirty</name></name></expr></argument>, <argument pos:start="47:29" pos:end="47:32"><expr pos:start="47:29" pos:end="47:32"><literal type="number" pos:start="47:29" pos:end="47:32">0xFF</literal></expr></argument>, <argument pos:start="47:35" pos:end="47:57"><expr pos:start="47:35" pos:end="47:57"><sizeof pos:start="47:35" pos:end="47:57">sizeof<argument_list pos:start="47:41" pos:end="47:57">(<argument pos:start="47:42" pos:end="47:56"><expr pos:start="47:42" pos:end="47:56"><name pos:start="47:42" pos:end="47:56"><name pos:start="47:42" pos:end="47:43">vd</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:50">guest</name><operator pos:start="47:51" pos:end="47:51">.</operator><name pos:start="47:52" pos:end="47:56">dirty</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <macro pos:start="51:5" pos:end="51:42"><name pos:start="51:5" pos:end="51:18">QTAILQ_FOREACH</name><argument_list pos:start="51:19" pos:end="51:42">(<argument pos:start="51:20" pos:end="51:21">vs</argument>, <argument pos:start="51:24" pos:end="51:35">&amp;vd-&gt;clients</argument>, <argument pos:start="51:38" pos:end="51:41">next</argument>)</argument_list></macro> <block pos:start="51:44" pos:end="69:5">{<block_content pos:start="53:9" pos:end="67:51">

        <expr_stmt pos:start="53:9" pos:end="53:27"><expr pos:start="53:9" pos:end="53:26"><call pos:start="53:9" pos:end="53:26"><name pos:start="53:9" pos:end="53:22">vnc_colordepth</name><argument_list pos:start="53:23" pos:end="53:26">(<argument pos:start="53:24" pos:end="53:25"><expr pos:start="53:24" pos:end="53:25"><name pos:start="53:24" pos:end="53:25">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="55:9" pos:end="59:9"><if pos:start="55:9" pos:end="59:9">if <condition pos:start="55:12" pos:end="55:25">(<expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:24">size_changed</name></expr>)</condition> <block pos:start="55:27" pos:end="59:9">{<block_content pos:start="57:13" pos:end="57:35">

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><call pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:30">vnc_desktop_resize</name><argument_list pos:start="57:31" pos:end="57:34">(<argument pos:start="57:32" pos:end="57:33"><expr pos:start="57:32" pos:end="57:33"><name pos:start="57:32" pos:end="57:33">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:27">(<expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:14">vs</name><operator pos:start="61:15" pos:end="61:16">-&gt;</operator><name pos:start="61:17" pos:end="61:18">vd</name><operator pos:start="61:19" pos:end="61:20">-&gt;</operator><name pos:start="61:21" pos:end="61:26">cursor</name></name></expr>)</condition> <block pos:start="61:29" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:34">

            <expr_stmt pos:start="63:13" pos:end="63:34"><expr pos:start="63:13" pos:end="63:33"><call pos:start="63:13" pos:end="63:33"><name pos:start="63:13" pos:end="63:29">vnc_cursor_define</name><argument_list pos:start="63:30" pos:end="63:33">(<argument pos:start="63:31" pos:end="63:32"><expr pos:start="63:31" pos:end="63:32"><name pos:start="63:31" pos:end="63:32">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:51"><expr pos:start="67:9" pos:end="67:50"><call pos:start="67:9" pos:end="67:50"><name pos:start="67:9" pos:end="67:14">memset</name><argument_list pos:start="67:15" pos:end="67:50">(<argument pos:start="67:16" pos:end="67:24"><expr pos:start="67:16" pos:end="67:24"><name pos:start="67:16" pos:end="67:24"><name pos:start="67:16" pos:end="67:17">vs</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:24">dirty</name></name></expr></argument>, <argument pos:start="67:27" pos:end="67:30"><expr pos:start="67:27" pos:end="67:30"><literal type="number" pos:start="67:27" pos:end="67:30">0xFF</literal></expr></argument>, <argument pos:start="67:33" pos:end="67:49"><expr pos:start="67:33" pos:end="67:49"><sizeof pos:start="67:33" pos:end="67:49">sizeof<argument_list pos:start="67:39" pos:end="67:49">(<argument pos:start="67:40" pos:end="67:48"><expr pos:start="67:40" pos:end="67:48"><name pos:start="67:40" pos:end="67:48"><name pos:start="67:40" pos:end="67:41">vs</name><operator pos:start="67:42" pos:end="67:43">-&gt;</operator><name pos:start="67:44" pos:end="67:48">dirty</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
