<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21367.c" pos:tabs="8"><function pos:start="1:1" pos:end="289:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">init_directories</name><parameter_list pos:start="1:28" pos:end="3:69">(<parameter pos:start="1:29" pos:end="1:45"><decl pos:start="1:29" pos:end="1:45"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:42">BDRVVVFATState</name><modifier pos:start="1:43" pos:end="1:43">*</modifier></type> <name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:47"><decl pos:start="3:29" pos:end="3:47"><type pos:start="3:29" pos:end="3:47"><specifier pos:start="3:29" pos:end="3:33">const</specifier> <name pos:start="3:35" pos:end="3:38">char</name> <modifier pos:start="3:40" pos:end="3:40">*</modifier></type><name pos:start="3:41" pos:end="3:47">dirname</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:58">heads</name></decl></parameter>, <parameter pos:start="3:61" pos:end="3:68"><decl pos:start="3:61" pos:end="3:68"><type pos:start="3:61" pos:end="3:68"><name pos:start="3:61" pos:end="3:63">int</name></type> <name pos:start="3:65" pos:end="3:68">secs</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="289:1">{<block_content pos:start="7:5" pos:end="287:13">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:16">bootsector_t</name><modifier pos:start="7:17" pos:end="7:17">*</modifier></type> <name pos:start="7:19" pos:end="7:28">bootsector</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:13">mapping_t</name><modifier pos:start="9:14" pos:end="9:14">*</modifier></type> <name pos:start="9:16" pos:end="9:22">mapping</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:18">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:24">cluster</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:48"><expr pos:start="17:5" pos:end="17:47"><call pos:start="17:5" pos:end="17:47"><name pos:start="17:5" pos:end="17:10">memset</name><argument_list pos:start="17:11" pos:end="17:47">(<argument pos:start="17:12" pos:end="17:33"><expr pos:start="17:12" pos:end="17:33"><operator pos:start="17:12" pos:end="17:12">&amp;</operator><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:32"><name pos:start="17:14" pos:end="17:14">s</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:29">first_sectors</name><index pos:start="17:30" pos:end="17:32">[<expr pos:start="17:31" pos:end="17:31"><literal type="number" pos:start="17:31" pos:end="17:31">0</literal></expr>]</index></name><operator pos:start="17:33" pos:end="17:33">)</operator></expr></argument>,<argument pos:start="17:35" pos:end="17:35"><expr pos:start="17:35" pos:end="17:35"><literal type="number" pos:start="17:35" pos:end="17:35">0</literal></expr></argument>,<argument pos:start="17:37" pos:end="17:46"><expr pos:start="17:37" pos:end="17:46"><literal type="number" pos:start="17:37" pos:end="17:40">0x40</literal><operator pos:start="17:41" pos:end="17:41">*</operator><literal type="number" pos:start="17:42" pos:end="17:46">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:19"><name pos:start="21:5" pos:end="21:5">s</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:19">cluster_size</name></name><operator pos:start="21:20" pos:end="21:20">=</operator><name pos:start="21:21" pos:end="21:42"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:42">sectors_per_cluster</name></name><operator pos:start="21:43" pos:end="21:43">*</operator><literal type="number" pos:start="21:44" pos:end="21:48">0x200</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:48"><expr pos:start="23:5" pos:end="23:47"><name pos:start="23:5" pos:end="23:21"><name pos:start="23:5" pos:end="23:5">s</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:21">cluster_buffer</name></name><operator pos:start="23:22" pos:end="23:22">=</operator><call pos:start="23:23" pos:end="23:47"><name pos:start="23:23" pos:end="23:30">g_malloc</name><argument_list pos:start="23:31" pos:end="23:47">(<argument pos:start="23:32" pos:end="23:46"><expr pos:start="23:32" pos:end="23:46"><name pos:start="23:32" pos:end="23:46"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:46">cluster_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="39:7">/*

     * The formula: sc = spf+1+spf*spc*(512*8/fat_type),

     * where sc is sector_count,

     * spf is sectors_per_fat,

     * spc is sectors_per_clusters, and

     * fat_type = 12, 16 or 32.

     */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:53"><expr pos:start="41:5" pos:end="41:52"><name pos:start="41:5" pos:end="41:5">i</name> <operator pos:start="41:7" pos:end="41:7">=</operator> <literal type="number" pos:start="41:9" pos:end="41:10">1</literal><operator pos:start="41:10" pos:end="41:10">+</operator><name pos:start="41:11" pos:end="41:32"><name pos:start="41:11" pos:end="41:11">s</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:32">sectors_per_cluster</name></name><operator pos:start="41:33" pos:end="41:33">*</operator><literal type="number" pos:start="41:34" pos:end="41:38">0x200</literal><operator pos:start="41:39" pos:end="41:39">*</operator><literal type="number" pos:start="41:40" pos:end="41:40">8</literal><operator pos:start="41:41" pos:end="41:41">/</operator><name pos:start="41:42" pos:end="41:52"><name pos:start="41:42" pos:end="41:42">s</name><operator pos:start="41:43" pos:end="41:44">-&gt;</operator><name pos:start="41:45" pos:end="41:52">fat_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:45"><expr pos:start="43:5" pos:end="43:44"><name pos:start="43:5" pos:end="43:22"><name pos:start="43:5" pos:end="43:5">s</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:22">sectors_per_fat</name></name><operator pos:start="43:23" pos:end="43:23">=</operator><operator pos:start="43:24" pos:end="43:24">(</operator><name pos:start="43:25" pos:end="43:39"><name pos:start="43:25" pos:end="43:25">s</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:39">sector_count</name></name><operator pos:start="43:40" pos:end="43:40">+</operator><name pos:start="43:41" pos:end="43:41">i</name><operator pos:start="43:42" pos:end="43:42">)</operator><operator pos:start="43:43" pos:end="43:43">/</operator><name pos:start="43:44" pos:end="43:44">i</name></expr>;</expr_stmt> <comment type="block" pos:start="43:47" pos:end="43:60">/* round up */</comment>



    <expr_stmt pos:start="47:5" pos:end="47:48"><expr pos:start="47:5" pos:end="47:47"><call pos:start="47:5" pos:end="47:47"><name pos:start="47:5" pos:end="47:14">array_init</name><argument_list pos:start="47:15" pos:end="47:47">(<argument pos:start="47:16" pos:end="47:28"><expr pos:start="47:16" pos:end="47:28"><operator pos:start="47:16" pos:end="47:16">&amp;</operator><operator pos:start="47:17" pos:end="47:17">(</operator><name pos:start="47:18" pos:end="47:27"><name pos:start="47:18" pos:end="47:18">s</name><operator pos:start="47:19" pos:end="47:20">-&gt;</operator><name pos:start="47:21" pos:end="47:27">mapping</name></name><operator pos:start="47:28" pos:end="47:28">)</operator></expr></argument>,<argument pos:start="47:30" pos:end="47:46"><expr pos:start="47:30" pos:end="47:46"><sizeof pos:start="47:30" pos:end="47:46">sizeof<argument_list pos:start="47:36" pos:end="47:46">(<argument pos:start="47:37" pos:end="47:45"><expr pos:start="47:37" pos:end="47:45"><name pos:start="47:37" pos:end="47:45">mapping_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:51"><expr pos:start="49:5" pos:end="49:50"><call pos:start="49:5" pos:end="49:50"><name pos:start="49:5" pos:end="49:14">array_init</name><argument_list pos:start="49:15" pos:end="49:50">(<argument pos:start="49:16" pos:end="49:30"><expr pos:start="49:16" pos:end="49:30"><operator pos:start="49:16" pos:end="49:16">&amp;</operator><operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:29"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:29">directory</name></name><operator pos:start="49:30" pos:end="49:30">)</operator></expr></argument>,<argument pos:start="49:32" pos:end="49:49"><expr pos:start="49:32" pos:end="49:49"><sizeof pos:start="49:32" pos:end="49:49">sizeof<argument_list pos:start="49:38" pos:end="49:49">(<argument pos:start="49:39" pos:end="49:48"><expr pos:start="49:39" pos:end="49:48"><name pos:start="49:39" pos:end="49:48">direntry_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="53:5" pos:end="53:26">/* add volume label */</comment>

    <block pos:start="55:5" pos:end="65:5">{<block_content pos:start="57:9" pos:end="63:41">

	<decl_stmt pos:start="57:9" pos:end="57:58"><decl pos:start="57:9" pos:end="57:57"><type pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:18">direntry_t</name><modifier pos:start="57:19" pos:end="57:19">*</modifier></type> <name pos:start="57:21" pos:end="57:25">entry</name><init pos:start="57:26" pos:end="57:57">=<expr pos:start="57:27" pos:end="57:57"><call pos:start="57:27" pos:end="57:57"><name pos:start="57:27" pos:end="57:40">array_get_next</name><argument_list pos:start="57:41" pos:end="57:57">(<argument pos:start="57:42" pos:end="57:56"><expr pos:start="57:42" pos:end="57:56"><operator pos:start="57:42" pos:end="57:42">&amp;</operator><operator pos:start="57:43" pos:end="57:43">(</operator><name pos:start="57:44" pos:end="57:55"><name pos:start="57:44" pos:end="57:44">s</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:55">directory</name></name><operator pos:start="57:56" pos:end="57:56">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="59:9" pos:end="59:31"><expr pos:start="59:9" pos:end="59:30"><name pos:start="59:9" pos:end="59:25"><name pos:start="59:9" pos:end="59:13">entry</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:25">attributes</name></name><operator pos:start="59:26" pos:end="59:26">=</operator><literal type="number" pos:start="59:27" pos:end="59:30">0x28</literal></expr>;</expr_stmt> <comment type="block" pos:start="59:33" pos:end="59:60">/* archive | volume label */</comment>

	<expr_stmt pos:start="61:9" pos:end="61:41"><expr pos:start="61:9" pos:end="61:40"><call pos:start="61:9" pos:end="61:40"><name pos:start="61:9" pos:end="61:14">memcpy</name><argument_list pos:start="61:15" pos:end="61:40">(<argument pos:start="61:16" pos:end="61:26"><expr pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:26"><name pos:start="61:16" pos:end="61:20">entry</name><operator pos:start="61:21" pos:end="61:22">-&gt;</operator><name pos:start="61:23" pos:end="61:26">name</name></name></expr></argument>,<argument pos:start="61:28" pos:end="61:37"><expr pos:start="61:28" pos:end="61:37"><literal type="string" pos:start="61:28" pos:end="61:37">"QEMU VVF"</literal></expr></argument>,<argument pos:start="61:39" pos:end="61:39"><expr pos:start="61:39" pos:end="61:39"><literal type="number" pos:start="61:39" pos:end="61:39">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="63:9" pos:end="63:41"><expr pos:start="63:9" pos:end="63:40"><call pos:start="63:9" pos:end="63:40"><name pos:start="63:9" pos:end="63:14">memcpy</name><argument_list pos:start="63:15" pos:end="63:40">(<argument pos:start="63:16" pos:end="63:31"><expr pos:start="63:16" pos:end="63:31"><name pos:start="63:16" pos:end="63:31"><name pos:start="63:16" pos:end="63:20">entry</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:31">extension</name></name></expr></argument>,<argument pos:start="63:33" pos:end="63:37"><expr pos:start="63:33" pos:end="63:37"><literal type="string" pos:start="63:33" pos:end="63:37">"AT "</literal></expr></argument>,<argument pos:start="63:39" pos:end="63:39"><expr pos:start="63:39" pos:end="63:39"><literal type="number" pos:start="63:39" pos:end="63:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <comment type="block" pos:start="69:5" pos:end="69:66">/* Now build FAT, and write back information into directory */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:16"><expr pos:start="71:5" pos:end="71:15"><call pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:12">init_fat</name><argument_list pos:start="71:13" pos:end="71:15">(<argument pos:start="71:14" pos:end="71:14"><expr pos:start="71:14" pos:end="71:14"><name pos:start="71:14" pos:end="71:14">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="75:5" pos:end="75:66"><expr pos:start="75:5" pos:end="75:65"><name pos:start="75:5" pos:end="75:20"><name pos:start="75:5" pos:end="75:5">s</name><operator pos:start="75:6" pos:end="75:7">-&gt;</operator><name pos:start="75:8" pos:end="75:20">faked_sectors</name></name><operator pos:start="75:21" pos:end="75:21">=</operator><name pos:start="75:22" pos:end="75:44"><name pos:start="75:22" pos:end="75:22">s</name><operator pos:start="75:23" pos:end="75:24">-&gt;</operator><name pos:start="75:25" pos:end="75:44">first_sectors_number</name></name><operator pos:start="75:45" pos:end="75:45">+</operator><name pos:start="75:46" pos:end="75:63"><name pos:start="75:46" pos:end="75:46">s</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:63">sectors_per_fat</name></name><operator pos:start="75:64" pos:end="75:64">*</operator><literal type="number" pos:start="75:65" pos:end="75:65">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:56"><expr pos:start="77:5" pos:end="77:55"><name pos:start="77:5" pos:end="77:20"><name pos:start="77:5" pos:end="77:5">s</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:20">cluster_count</name></name><operator pos:start="77:21" pos:end="77:21">=</operator><call pos:start="77:22" pos:end="77:55"><name pos:start="77:22" pos:end="77:35">sector2cluster</name><argument_list pos:start="77:36" pos:end="77:55">(<argument pos:start="77:37" pos:end="77:37"><expr pos:start="77:37" pos:end="77:37"><name pos:start="77:37" pos:end="77:37">s</name></expr></argument>, <argument pos:start="77:40" pos:end="77:54"><expr pos:start="77:40" pos:end="77:54"><name pos:start="77:40" pos:end="77:54"><name pos:start="77:40" pos:end="77:40">s</name><operator pos:start="77:41" pos:end="77:42">-&gt;</operator><name pos:start="77:43" pos:end="77:54">sector_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:44"><expr pos:start="81:5" pos:end="81:43"><name pos:start="81:5" pos:end="81:11">mapping</name> <operator pos:start="81:13" pos:end="81:13">=</operator> <call pos:start="81:15" pos:end="81:43"><name pos:start="81:15" pos:end="81:28">array_get_next</name><argument_list pos:start="81:29" pos:end="81:43">(<argument pos:start="81:30" pos:end="81:42"><expr pos:start="81:30" pos:end="81:42"><operator pos:start="81:30" pos:end="81:30">&amp;</operator><operator pos:start="81:31" pos:end="81:31">(</operator><name pos:start="81:32" pos:end="81:41"><name pos:start="81:32" pos:end="81:32">s</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:41">mapping</name></name><operator pos:start="81:42" pos:end="81:42">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:23"><expr pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:18"><name pos:start="83:5" pos:end="83:11">mapping</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:18">begin</name></name> <operator pos:start="83:20" pos:end="83:20">=</operator> <literal type="number" pos:start="83:22" pos:end="83:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:27"><expr pos:start="85:5" pos:end="85:26"><name pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:11">mapping</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:22">dir_index</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:48"><expr pos:start="87:5" pos:end="87:47"><name pos:start="87:5" pos:end="87:42"><name pos:start="87:5" pos:end="87:11">mapping</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:17">info</name><operator pos:start="87:18" pos:end="87:18">.</operator><name pos:start="87:19" pos:end="87:21">dir</name><operator pos:start="87:22" pos:end="87:22">.</operator><name pos:start="87:23" pos:end="87:42">parent_mapping_index</name></name> <operator pos:start="87:44" pos:end="87:44">=</operator> <operator pos:start="87:46" pos:end="87:46">-</operator><literal type="number" pos:start="87:47" pos:end="87:47">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:38"><expr pos:start="89:5" pos:end="89:37"><name pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:11">mapping</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:32">first_mapping_index</name></name> <operator pos:start="89:34" pos:end="89:34">=</operator> <operator pos:start="89:36" pos:end="89:36">-</operator><literal type="number" pos:start="89:37" pos:end="89:37">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:38"><expr pos:start="91:5" pos:end="91:37"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:11">mapping</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">path</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:37"><name pos:start="91:21" pos:end="91:28">g_strdup</name><argument_list pos:start="91:29" pos:end="91:37">(<argument pos:start="91:30" pos:end="91:36"><expr pos:start="91:30" pos:end="91:36"><name pos:start="91:30" pos:end="91:36">dirname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:30"><expr pos:start="93:5" pos:end="93:29"><name pos:start="93:5" pos:end="93:5">i</name> <operator pos:start="93:7" pos:end="93:7">=</operator> <call pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:14">strlen</name><argument_list pos:start="93:15" pos:end="93:29">(<argument pos:start="93:16" pos:end="93:28"><expr pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:28"><name pos:start="93:16" pos:end="93:22">mapping</name><operator pos:start="93:23" pos:end="93:24">-&gt;</operator><name pos:start="93:25" pos:end="93:28">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="97:36"><if pos:start="95:5" pos:end="97:36">if <condition pos:start="95:8" pos:end="95:45">(<expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:9">i</name> <operator pos:start="95:11" pos:end="95:11">&gt;</operator> <literal type="number" pos:start="95:13" pos:end="95:13">0</literal> <operator pos:start="95:15" pos:end="95:16">&amp;&amp;</operator> <name pos:start="95:18" pos:end="95:37"><name pos:start="95:18" pos:end="95:24">mapping</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:30">path</name><index pos:start="95:31" pos:end="95:37">[<expr pos:start="95:32" pos:end="95:36"><name pos:start="95:32" pos:end="95:32">i</name> <operator pos:start="95:34" pos:end="95:34">-</operator> <literal type="number" pos:start="95:36" pos:end="95:36">1</literal></expr>]</index></name> <operator pos:start="95:39" pos:end="95:40">==</operator> <literal type="char" pos:start="95:42" pos:end="95:44">'/'</literal></expr>)</condition><block type="pseudo" pos:start="97:9" pos:end="97:36"><block_content pos:start="97:9" pos:end="97:36">

	<expr_stmt pos:start="97:9" pos:end="97:36"><expr pos:start="97:9" pos:end="97:35"><name pos:start="97:9" pos:end="97:28"><name pos:start="97:9" pos:end="97:15">mapping</name><operator pos:start="97:16" pos:end="97:17">-&gt;</operator><name pos:start="97:18" pos:end="97:21">path</name><index pos:start="97:22" pos:end="97:28">[<expr pos:start="97:23" pos:end="97:27"><name pos:start="97:23" pos:end="97:23">i</name> <operator pos:start="97:25" pos:end="97:25">-</operator> <literal type="number" pos:start="97:27" pos:end="97:27">1</literal></expr>]</index></name> <operator pos:start="97:30" pos:end="97:30">=</operator> <literal type="char" pos:start="97:32" pos:end="97:35">'\0'</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:35"><expr pos:start="99:5" pos:end="99:34"><name pos:start="99:5" pos:end="99:17"><name pos:start="99:5" pos:end="99:11">mapping</name><operator pos:start="99:12" pos:end="99:13">-&gt;</operator><name pos:start="99:14" pos:end="99:17">mode</name></name> <operator pos:start="99:19" pos:end="99:19">=</operator> <name pos:start="99:21" pos:end="99:34">MODE_DIRECTORY</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:27"><expr pos:start="101:5" pos:end="101:26"><name pos:start="101:5" pos:end="101:22"><name pos:start="101:5" pos:end="101:11">mapping</name><operator pos:start="101:12" pos:end="101:13">-&gt;</operator><name pos:start="101:14" pos:end="101:22">read_only</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <literal type="number" pos:start="101:26" pos:end="101:26">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:28"><expr pos:start="103:5" pos:end="103:27"><name pos:start="103:5" pos:end="103:11"><name pos:start="103:5" pos:end="103:5">s</name><operator pos:start="103:6" pos:end="103:7">-&gt;</operator><name pos:start="103:8" pos:end="103:11">path</name></name> <operator pos:start="103:13" pos:end="103:13">=</operator> <name pos:start="103:15" pos:end="103:27"><name pos:start="103:15" pos:end="103:21">mapping</name><operator pos:start="103:22" pos:end="103:23">-&gt;</operator><name pos:start="103:24" pos:end="103:27">path</name></name></expr>;</expr_stmt>



    <for pos:start="107:5" pos:end="205:5">for <control pos:start="107:9" pos:end="107:54">(<init pos:start="107:10" pos:end="107:28"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr><operator pos:start="107:15" pos:end="107:15">,</operator> <expr pos:start="107:17" pos:end="107:27"><name pos:start="107:17" pos:end="107:23">cluster</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <literal type="number" pos:start="107:27" pos:end="107:27">0</literal></expr>;</init> <condition pos:start="107:30" pos:end="107:49"><expr pos:start="107:30" pos:end="107:48"><name pos:start="107:30" pos:end="107:30">i</name> <operator pos:start="107:32" pos:end="107:32">&lt;</operator> <name pos:start="107:34" pos:end="107:48"><name pos:start="107:34" pos:end="107:34">s</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:43">mapping</name><operator pos:start="107:44" pos:end="107:44">.</operator><name pos:start="107:45" pos:end="107:48">next</name></name></expr>;</condition> <incr pos:start="107:51" pos:end="107:53"><expr pos:start="107:51" pos:end="107:53"><name pos:start="107:51" pos:end="107:51">i</name><operator pos:start="107:52" pos:end="107:53">++</operator></expr></incr>)</control> <block pos:start="107:56" pos:end="205:5">{<block_content pos:start="115:9" pos:end="203:9">

	<comment type="block" pos:start="109:9" pos:end="111:42">/* MS-DOS expects the FAT to be 0 for the root directory

	 * (except for the media byte). */</comment>

	<comment type="block" pos:start="113:9" pos:end="113:47">/* LATER TODO: still true for FAT32? */</comment>

	<decl_stmt pos:start="115:9" pos:end="115:31"><decl pos:start="115:9" pos:end="115:30"><type pos:start="115:9" pos:end="115:11"><name pos:start="115:9" pos:end="115:11">int</name></type> <name pos:start="115:13" pos:end="115:19">fix_fat</name> <init pos:start="115:21" pos:end="115:30">= <expr pos:start="115:23" pos:end="115:30"><operator pos:start="115:23" pos:end="115:23">(</operator><name pos:start="115:24" pos:end="115:24">i</name> <operator pos:start="115:26" pos:end="115:27">!=</operator> <literal type="number" pos:start="115:29" pos:end="115:29">0</literal><operator pos:start="115:30" pos:end="115:30">)</operator></expr></init></decl>;</decl_stmt>

	<expr_stmt pos:start="117:9" pos:end="117:46"><expr pos:start="117:9" pos:end="117:45"><name pos:start="117:9" pos:end="117:15">mapping</name> <operator pos:start="117:17" pos:end="117:17">=</operator> <call pos:start="117:19" pos:end="117:45"><name pos:start="117:19" pos:end="117:27">array_get</name><argument_list pos:start="117:28" pos:end="117:45">(<argument pos:start="117:29" pos:end="117:41"><expr pos:start="117:29" pos:end="117:41"><operator pos:start="117:29" pos:end="117:29">&amp;</operator><operator pos:start="117:30" pos:end="117:30">(</operator><name pos:start="117:31" pos:end="117:40"><name pos:start="117:31" pos:end="117:31">s</name><operator pos:start="117:32" pos:end="117:33">-&gt;</operator><name pos:start="117:34" pos:end="117:40">mapping</name></name><operator pos:start="117:41" pos:end="117:41">)</operator></expr></argument>, <argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><name pos:start="117:44" pos:end="117:44">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="121:9" pos:end="165:9"><if pos:start="121:9" pos:end="137:9">if <condition pos:start="121:12" pos:end="121:43">(<expr pos:start="121:13" pos:end="121:42"><name pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:19">mapping</name><operator pos:start="121:20" pos:end="121:21">-&gt;</operator><name pos:start="121:22" pos:end="121:25">mode</name></name> <operator pos:start="121:27" pos:end="121:27">&amp;</operator> <name pos:start="121:29" pos:end="121:42">MODE_DIRECTORY</name></expr>)</condition> <block pos:start="121:45" pos:end="137:9">{<block_content pos:start="123:13" pos:end="135:50">

	    <expr_stmt pos:start="123:13" pos:end="123:37"><expr pos:start="123:13" pos:end="123:36"><name pos:start="123:13" pos:end="123:26"><name pos:start="123:13" pos:end="123:19">mapping</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:26">begin</name></name> <operator pos:start="123:28" pos:end="123:28">=</operator> <name pos:start="123:30" pos:end="123:36">cluster</name></expr>;</expr_stmt>

	    <if_stmt pos:start="125:13" pos:end="133:13"><if pos:start="125:13" pos:end="133:13">if<condition pos:start="125:15" pos:end="125:36">(<expr pos:start="125:16" pos:end="125:35"><call pos:start="125:16" pos:end="125:35"><name pos:start="125:16" pos:end="125:29">read_directory</name><argument_list pos:start="125:30" pos:end="125:35">(<argument pos:start="125:31" pos:end="125:31"><expr pos:start="125:31" pos:end="125:31"><name pos:start="125:31" pos:end="125:31">s</name></expr></argument>, <argument pos:start="125:34" pos:end="125:34"><expr pos:start="125:34" pos:end="125:34"><name pos:start="125:34" pos:end="125:34">i</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:38" pos:end="133:13">{<block_content pos:start="127:17" pos:end="131:26">

		<expr_stmt pos:start="127:17" pos:end="129:39"><expr pos:start="127:17" pos:end="129:38"><call pos:start="127:17" pos:end="129:38"><name pos:start="127:17" pos:end="127:23">fprintf</name><argument_list pos:start="127:24" pos:end="129:38">(<argument pos:start="127:25" pos:end="127:30"><expr pos:start="127:25" pos:end="127:30"><name pos:start="127:25" pos:end="127:30">stderr</name></expr></argument>, <argument pos:start="127:33" pos:end="127:63"><expr pos:start="127:33" pos:end="127:63"><literal type="string" pos:start="127:33" pos:end="127:63">"Could not read directory %s\n"</literal></expr></argument>,

			<argument pos:start="129:25" pos:end="129:37"><expr pos:start="129:25" pos:end="129:37"><name pos:start="129:25" pos:end="129:37"><name pos:start="129:25" pos:end="129:31">mapping</name><operator pos:start="129:32" pos:end="129:33">-&gt;</operator><name pos:start="129:34" pos:end="129:37">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="135:13" pos:end="135:50"><expr pos:start="135:13" pos:end="135:49"><name pos:start="135:13" pos:end="135:19">mapping</name> <operator pos:start="135:21" pos:end="135:21">=</operator> <call pos:start="135:23" pos:end="135:49"><name pos:start="135:23" pos:end="135:31">array_get</name><argument_list pos:start="135:32" pos:end="135:49">(<argument pos:start="135:33" pos:end="135:45"><expr pos:start="135:33" pos:end="135:45"><operator pos:start="135:33" pos:end="135:33">&amp;</operator><operator pos:start="135:34" pos:end="135:34">(</operator><name pos:start="135:35" pos:end="135:44"><name pos:start="135:35" pos:end="135:35">s</name><operator pos:start="135:36" pos:end="135:37">-&gt;</operator><name pos:start="135:38" pos:end="135:44">mapping</name></name><operator pos:start="135:45" pos:end="135:45">)</operator></expr></argument>, <argument pos:start="135:48" pos:end="135:48"><expr pos:start="135:48" pos:end="135:48"><name pos:start="135:48" pos:end="135:48">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="137:11" pos:end="165:9">else <block pos:start="137:16" pos:end="165:9">{<block_content pos:start="139:13" pos:end="163:13">

	    <expr_stmt pos:start="139:13" pos:end="139:52"><expr pos:start="139:13" pos:end="139:51"><call pos:start="139:13" pos:end="139:51"><name pos:start="139:13" pos:end="139:18">assert</name><argument_list pos:start="139:19" pos:end="139:51">(<argument pos:start="139:20" pos:end="139:50"><expr pos:start="139:20" pos:end="139:50"><name pos:start="139:20" pos:end="139:32"><name pos:start="139:20" pos:end="139:26">mapping</name><operator pos:start="139:27" pos:end="139:28">-&gt;</operator><name pos:start="139:29" pos:end="139:32">mode</name></name> <operator pos:start="139:34" pos:end="139:35">==</operator> <name pos:start="139:37" pos:end="139:50">MODE_UNDEFINED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="141:13" pos:end="141:38"><expr pos:start="141:13" pos:end="141:37"><name pos:start="141:13" pos:end="141:25"><name pos:start="141:13" pos:end="141:19">mapping</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:25">mode</name></name><operator pos:start="141:26" pos:end="141:26">=</operator><name pos:start="141:27" pos:end="141:37">MODE_NORMAL</name></expr>;</expr_stmt>

	    <expr_stmt pos:start="143:13" pos:end="143:37"><expr pos:start="143:13" pos:end="143:36"><name pos:start="143:13" pos:end="143:26"><name pos:start="143:13" pos:end="143:19">mapping</name><operator pos:start="143:20" pos:end="143:21">-&gt;</operator><name pos:start="143:22" pos:end="143:26">begin</name></name> <operator pos:start="143:28" pos:end="143:28">=</operator> <name pos:start="143:30" pos:end="143:36">cluster</name></expr>;</expr_stmt>

	    <if_stmt pos:start="145:13" pos:end="163:13"><if pos:start="145:13" pos:end="157:13">if <condition pos:start="145:16" pos:end="145:33">(<expr pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:28"><name pos:start="145:17" pos:end="145:23">mapping</name><operator pos:start="145:24" pos:end="145:25">-&gt;</operator><name pos:start="145:26" pos:end="145:28">end</name></name> <operator pos:start="145:30" pos:end="145:30">&gt;</operator> <literal type="number" pos:start="145:32" pos:end="145:32">0</literal></expr>)</condition> <block pos:start="145:35" pos:end="157:13">{<block_content pos:start="147:17" pos:end="155:64">

		<decl_stmt pos:start="147:17" pos:end="149:44"><decl pos:start="147:17" pos:end="149:43"><type pos:start="147:17" pos:end="147:27"><name pos:start="147:17" pos:end="147:26">direntry_t</name><modifier pos:start="147:27" pos:end="147:27">*</modifier></type> <name pos:start="147:29" pos:end="147:36">direntry</name> <init pos:start="147:38" pos:end="149:43">= <expr pos:start="147:40" pos:end="149:43"><call pos:start="147:40" pos:end="149:43"><name pos:start="147:40" pos:end="147:48">array_get</name><argument_list pos:start="147:49" pos:end="149:43">(<argument pos:start="147:50" pos:end="147:64"><expr pos:start="147:50" pos:end="147:64"><operator pos:start="147:50" pos:end="147:50">&amp;</operator><operator pos:start="147:51" pos:end="147:51">(</operator><name pos:start="147:52" pos:end="147:63"><name pos:start="147:52" pos:end="147:52">s</name><operator pos:start="147:53" pos:end="147:54">-&gt;</operator><name pos:start="147:55" pos:end="147:63">directory</name></name><operator pos:start="147:64" pos:end="147:64">)</operator></expr></argument>,

			<argument pos:start="149:25" pos:end="149:42"><expr pos:start="149:25" pos:end="149:42"><name pos:start="149:25" pos:end="149:42"><name pos:start="149:25" pos:end="149:31">mapping</name><operator pos:start="149:32" pos:end="149:33">-&gt;</operator><name pos:start="149:34" pos:end="149:42">dir_index</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



		<expr_stmt pos:start="153:17" pos:end="153:78"><expr pos:start="153:17" pos:end="153:77"><name pos:start="153:17" pos:end="153:28"><name pos:start="153:17" pos:end="153:23">mapping</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:28">end</name></name> <operator pos:start="153:30" pos:end="153:30">=</operator> <name pos:start="153:32" pos:end="153:38">cluster</name> <operator pos:start="153:40" pos:end="153:40">+</operator> <literal type="number" pos:start="153:42" pos:end="153:44">1</literal> <operator pos:start="153:44" pos:end="153:44">+</operator> <operator pos:start="153:46" pos:end="153:46">(</operator><name pos:start="153:47" pos:end="153:58"><name pos:start="153:47" pos:end="153:53">mapping</name><operator pos:start="153:54" pos:end="153:55">-&gt;</operator><name pos:start="153:56" pos:end="153:58">end</name></name><operator pos:start="153:59" pos:end="153:59">-</operator><literal type="number" pos:start="153:60" pos:end="153:60">1</literal><operator pos:start="153:61" pos:end="153:61">)</operator><operator pos:start="153:62" pos:end="153:62">/</operator><name pos:start="153:63" pos:end="153:77"><name pos:start="153:63" pos:end="153:63">s</name><operator pos:start="153:64" pos:end="153:65">-&gt;</operator><name pos:start="153:66" pos:end="153:77">cluster_size</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="155:17" pos:end="155:64"><expr pos:start="155:17" pos:end="155:63"><call pos:start="155:17" pos:end="155:63"><name pos:start="155:17" pos:end="155:37">set_begin_of_direntry</name><argument_list pos:start="155:38" pos:end="155:63">(<argument pos:start="155:39" pos:end="155:46"><expr pos:start="155:39" pos:end="155:46"><name pos:start="155:39" pos:end="155:46">direntry</name></expr></argument>, <argument pos:start="155:49" pos:end="155:62"><expr pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:62"><name pos:start="155:49" pos:end="155:55">mapping</name><operator pos:start="155:56" pos:end="155:57">-&gt;</operator><name pos:start="155:58" pos:end="155:62">begin</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    </block_content>}</block></if> <else pos:start="157:15" pos:end="163:13">else <block pos:start="157:20" pos:end="163:13">{<block_content pos:start="159:17" pos:end="161:28">

		<expr_stmt pos:start="159:17" pos:end="159:43"><expr pos:start="159:17" pos:end="159:42"><name pos:start="159:17" pos:end="159:28"><name pos:start="159:17" pos:end="159:23">mapping</name><operator pos:start="159:24" pos:end="159:25">-&gt;</operator><name pos:start="159:26" pos:end="159:28">end</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:38">cluster</name> <operator pos:start="159:40" pos:end="159:40">+</operator> <literal type="number" pos:start="159:42" pos:end="159:42">1</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="161:17" pos:end="161:28"><expr pos:start="161:17" pos:end="161:27"><name pos:start="161:17" pos:end="161:23">fix_fat</name> <operator pos:start="161:25" pos:end="161:25">=</operator> <literal type="number" pos:start="161:27" pos:end="161:27">0</literal></expr>;</expr_stmt>

	    </block_content>}</block></else></if_stmt>

	</block_content>}</block></else></if_stmt>



	<expr_stmt pos:start="169:9" pos:end="169:46"><expr pos:start="169:9" pos:end="169:45"><call pos:start="169:9" pos:end="169:45"><name pos:start="169:9" pos:end="169:14">assert</name><argument_list pos:start="169:15" pos:end="169:45">(<argument pos:start="169:16" pos:end="169:44"><expr pos:start="169:16" pos:end="169:44"><name pos:start="169:16" pos:end="169:29"><name pos:start="169:16" pos:end="169:22">mapping</name><operator pos:start="169:23" pos:end="169:24">-&gt;</operator><name pos:start="169:25" pos:end="169:29">begin</name></name> <operator pos:start="169:31" pos:end="169:31">&lt;</operator> <name pos:start="169:33" pos:end="169:44"><name pos:start="169:33" pos:end="169:39">mapping</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:44">end</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	<comment type="block" pos:start="173:9" pos:end="173:31">/* next free cluster */</comment>

	<expr_stmt pos:start="175:9" pos:end="175:31"><expr pos:start="175:9" pos:end="175:30"><name pos:start="175:9" pos:end="175:15">cluster</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <name pos:start="175:19" pos:end="175:30"><name pos:start="175:19" pos:end="175:25">mapping</name><operator pos:start="175:26" pos:end="175:27">-&gt;</operator><name pos:start="175:28" pos:end="175:30">end</name></name></expr>;</expr_stmt>



	<if_stmt pos:start="179:9" pos:end="187:9"><if pos:start="179:9" pos:end="187:9">if<condition pos:start="179:11" pos:end="179:38">(<expr pos:start="179:12" pos:end="179:37"><name pos:start="179:12" pos:end="179:18">cluster</name> <operator pos:start="179:20" pos:end="179:20">&gt;</operator> <name pos:start="179:22" pos:end="179:37"><name pos:start="179:22" pos:end="179:22">s</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:37">cluster_count</name></name></expr>)</condition> <block pos:start="179:40" pos:end="187:9">{<block_content pos:start="181:13" pos:end="185:27">

	    <expr_stmt pos:start="181:13" pos:end="183:59"><expr pos:start="181:13" pos:end="183:58"><call pos:start="181:13" pos:end="183:58"><name pos:start="181:13" pos:end="181:19">fprintf</name><argument_list pos:start="181:20" pos:end="183:58">(<argument pos:start="181:21" pos:end="181:26"><expr pos:start="181:21" pos:end="181:26"><name pos:start="181:21" pos:end="181:26">stderr</name></expr></argument>,<argument pos:start="181:28" pos:end="181:81"><expr pos:start="181:28" pos:end="181:81"><literal type="string" pos:start="181:28" pos:end="181:81">"Directory does not fit in FAT%d (capacity %.2f MB)\n"</literal></expr></argument>,

		    <argument pos:start="183:21" pos:end="183:31"><expr pos:start="183:21" pos:end="183:31"><name pos:start="183:21" pos:end="183:31"><name pos:start="183:21" pos:end="183:21">s</name><operator pos:start="183:22" pos:end="183:23">-&gt;</operator><name pos:start="183:24" pos:end="183:31">fat_type</name></name></expr></argument>, <argument pos:start="183:34" pos:end="183:57"><expr pos:start="183:34" pos:end="183:57"><name pos:start="183:34" pos:end="183:48"><name pos:start="183:34" pos:end="183:34">s</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:48">sector_count</name></name> <operator pos:start="183:50" pos:end="183:50">/</operator> <literal type="number" pos:start="183:52" pos:end="183:57">2000.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <return pos:start="185:13" pos:end="185:27">return <expr pos:start="185:20" pos:end="185:26"><operator pos:start="185:20" pos:end="185:20">-</operator><name pos:start="185:21" pos:end="185:26">EINVAL</name></expr>;</return>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="191:9" pos:end="191:31">/* fix fat for entry */</comment>

	<if_stmt pos:start="193:9" pos:end="203:9"><if pos:start="193:9" pos:end="203:9">if <condition pos:start="193:12" pos:end="193:20">(<expr pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:19">fix_fat</name></expr>)</condition> <block pos:start="193:22" pos:end="203:9">{<block_content pos:start="195:13" pos:end="201:59">

	    <decl_stmt pos:start="195:13" pos:end="195:18"><decl pos:start="195:13" pos:end="195:17"><type pos:start="195:13" pos:end="195:15"><name pos:start="195:13" pos:end="195:15">int</name></type> <name pos:start="195:17" pos:end="195:17">j</name></decl>;</decl_stmt>

	    <for pos:start="197:13" pos:end="199:35">for<control pos:start="197:16" pos:end="197:62">(<init pos:start="197:17" pos:end="197:35"><expr pos:start="197:17" pos:end="197:34"><name pos:start="197:17" pos:end="197:17">j</name> <operator pos:start="197:19" pos:end="197:19">=</operator> <name pos:start="197:21" pos:end="197:34"><name pos:start="197:21" pos:end="197:27">mapping</name><operator pos:start="197:28" pos:end="197:29">-&gt;</operator><name pos:start="197:30" pos:end="197:34">begin</name></name></expr>;</init> <condition pos:start="197:37" pos:end="197:57"><expr pos:start="197:37" pos:end="197:56"><name pos:start="197:37" pos:end="197:37">j</name> <operator pos:start="197:39" pos:end="197:39">&lt;</operator> <name pos:start="197:41" pos:end="197:52"><name pos:start="197:41" pos:end="197:47">mapping</name><operator pos:start="197:48" pos:end="197:49">-&gt;</operator><name pos:start="197:50" pos:end="197:52">end</name></name> <operator pos:start="197:54" pos:end="197:54">-</operator> <literal type="number" pos:start="197:56" pos:end="197:56">1</literal></expr>;</condition> <incr pos:start="197:59" pos:end="197:61"><expr pos:start="197:59" pos:end="197:61"><name pos:start="197:59" pos:end="197:59">j</name><operator pos:start="197:60" pos:end="197:61">++</operator></expr></incr>)</control><block type="pseudo" pos:start="199:17" pos:end="199:35"><block_content pos:start="199:17" pos:end="199:35">

		<expr_stmt pos:start="199:17" pos:end="199:35"><expr pos:start="199:17" pos:end="199:34"><call pos:start="199:17" pos:end="199:34"><name pos:start="199:17" pos:end="199:23">fat_set</name><argument_list pos:start="199:24" pos:end="199:34">(<argument pos:start="199:25" pos:end="199:25"><expr pos:start="199:25" pos:end="199:25"><name pos:start="199:25" pos:end="199:25">s</name></expr></argument>, <argument pos:start="199:28" pos:end="199:28"><expr pos:start="199:28" pos:end="199:28"><name pos:start="199:28" pos:end="199:28">j</name></expr></argument>, <argument pos:start="199:31" pos:end="199:33"><expr pos:start="199:31" pos:end="199:33"><name pos:start="199:31" pos:end="199:31">j</name><operator pos:start="199:32" pos:end="199:32">+</operator><literal type="number" pos:start="199:33" pos:end="199:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

	    <expr_stmt pos:start="201:13" pos:end="201:59"><expr pos:start="201:13" pos:end="201:58"><call pos:start="201:13" pos:end="201:58"><name pos:start="201:13" pos:end="201:19">fat_set</name><argument_list pos:start="201:20" pos:end="201:58">(<argument pos:start="201:21" pos:end="201:21"><expr pos:start="201:21" pos:end="201:21"><name pos:start="201:21" pos:end="201:21">s</name></expr></argument>, <argument pos:start="201:24" pos:end="201:39"><expr pos:start="201:24" pos:end="201:39"><name pos:start="201:24" pos:end="201:35"><name pos:start="201:24" pos:end="201:30">mapping</name><operator pos:start="201:31" pos:end="201:32">-&gt;</operator><name pos:start="201:33" pos:end="201:35">end</name></name> <operator pos:start="201:37" pos:end="201:37">-</operator> <literal type="number" pos:start="201:39" pos:end="201:39">1</literal></expr></argument>, <argument pos:start="201:42" pos:end="201:57"><expr pos:start="201:42" pos:end="201:57"><name pos:start="201:42" pos:end="201:57"><name pos:start="201:42" pos:end="201:42">s</name><operator pos:start="201:43" pos:end="201:44">-&gt;</operator><name pos:start="201:45" pos:end="201:57">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="209:5" pos:end="209:42"><expr pos:start="209:5" pos:end="209:41"><name pos:start="209:5" pos:end="209:11">mapping</name> <operator pos:start="209:13" pos:end="209:13">=</operator> <call pos:start="209:15" pos:end="209:41"><name pos:start="209:15" pos:end="209:23">array_get</name><argument_list pos:start="209:24" pos:end="209:41">(<argument pos:start="209:25" pos:end="209:37"><expr pos:start="209:25" pos:end="209:37"><operator pos:start="209:25" pos:end="209:25">&amp;</operator><operator pos:start="209:26" pos:end="209:26">(</operator><name pos:start="209:27" pos:end="209:36"><name pos:start="209:27" pos:end="209:27">s</name><operator pos:start="209:28" pos:end="209:29">-&gt;</operator><name pos:start="209:30" pos:end="209:36">mapping</name></name><operator pos:start="209:37" pos:end="209:37">)</operator></expr></argument>, <argument pos:start="209:40" pos:end="209:40"><expr pos:start="209:40" pos:end="209:40"><literal type="number" pos:start="209:40" pos:end="209:40">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="211:5" pos:end="211:73"><expr pos:start="211:5" pos:end="211:72"><name pos:start="211:5" pos:end="211:32"><name pos:start="211:5" pos:end="211:5">s</name><operator pos:start="211:6" pos:end="211:7">-&gt;</operator><name pos:start="211:8" pos:end="211:32">sectors_of_root_directory</name></name> <operator pos:start="211:34" pos:end="211:34">=</operator> <name pos:start="211:36" pos:end="211:47"><name pos:start="211:36" pos:end="211:42">mapping</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:47">end</name></name> <operator pos:start="211:49" pos:end="211:49">*</operator> <name pos:start="211:51" pos:end="211:72"><name pos:start="211:51" pos:end="211:51">s</name><operator pos:start="211:52" pos:end="211:53">-&gt;</operator><name pos:start="211:54" pos:end="211:72">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="213:5" pos:end="213:53"><expr pos:start="213:5" pos:end="213:52"><name pos:start="213:5" pos:end="213:37"><name pos:start="213:5" pos:end="213:5">s</name><operator pos:start="213:6" pos:end="213:7">-&gt;</operator><name pos:start="213:8" pos:end="213:37">last_cluster_of_root_directory</name></name> <operator pos:start="213:39" pos:end="213:39">=</operator> <name pos:start="213:41" pos:end="213:52"><name pos:start="213:41" pos:end="213:47">mapping</name><operator pos:start="213:48" pos:end="213:49">-&gt;</operator><name pos:start="213:50" pos:end="213:52">end</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="217:5" pos:end="217:27">/* the FAT signature */</comment>

    <expr_stmt pos:start="219:5" pos:end="219:34"><expr pos:start="219:5" pos:end="219:33"><call pos:start="219:5" pos:end="219:33"><name pos:start="219:5" pos:end="219:11">fat_set</name><argument_list pos:start="219:12" pos:end="219:33">(<argument pos:start="219:13" pos:end="219:13"><expr pos:start="219:13" pos:end="219:13"><name pos:start="219:13" pos:end="219:13">s</name></expr></argument>,<argument pos:start="219:15" pos:end="219:15"><expr pos:start="219:15" pos:end="219:15"><literal type="number" pos:start="219:15" pos:end="219:15">0</literal></expr></argument>,<argument pos:start="219:17" pos:end="219:32"><expr pos:start="219:17" pos:end="219:32"><name pos:start="219:17" pos:end="219:32"><name pos:start="219:17" pos:end="219:17">s</name><operator pos:start="219:18" pos:end="219:19">-&gt;</operator><name pos:start="219:20" pos:end="219:32">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:34"><expr pos:start="221:5" pos:end="221:33"><call pos:start="221:5" pos:end="221:33"><name pos:start="221:5" pos:end="221:11">fat_set</name><argument_list pos:start="221:12" pos:end="221:33">(<argument pos:start="221:13" pos:end="221:13"><expr pos:start="221:13" pos:end="221:13"><name pos:start="221:13" pos:end="221:13">s</name></expr></argument>,<argument pos:start="221:15" pos:end="221:15"><expr pos:start="221:15" pos:end="221:15"><literal type="number" pos:start="221:15" pos:end="221:15">1</literal></expr></argument>,<argument pos:start="221:17" pos:end="221:32"><expr pos:start="221:17" pos:end="221:32"><name pos:start="221:17" pos:end="221:32"><name pos:start="221:17" pos:end="221:17">s</name><operator pos:start="221:18" pos:end="221:19">-&gt;</operator><name pos:start="221:20" pos:end="221:32">max_fat_value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:30"><expr pos:start="225:5" pos:end="225:29"><name pos:start="225:5" pos:end="225:22"><name pos:start="225:5" pos:end="225:5">s</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:22">current_mapping</name></name> <operator pos:start="225:24" pos:end="225:24">=</operator> <name pos:start="225:26" pos:end="225:29">NULL</name></expr>;</expr_stmt>



    <expr_stmt pos:start="229:5" pos:end="229:83"><expr pos:start="229:5" pos:end="229:82"><name pos:start="229:5" pos:end="229:14">bootsector</name><operator pos:start="229:15" pos:end="229:15">=</operator><operator pos:start="229:16" pos:end="229:16">(</operator><name pos:start="229:17" pos:end="229:28">bootsector_t</name><operator pos:start="229:29" pos:end="229:29">*</operator><operator pos:start="229:30" pos:end="229:30">)</operator><operator pos:start="229:31" pos:end="229:31">(</operator><name pos:start="229:32" pos:end="229:47"><name pos:start="229:32" pos:end="229:32">s</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:47">first_sectors</name></name><operator pos:start="229:48" pos:end="229:48">+</operator><operator pos:start="229:49" pos:end="229:49">(</operator><name pos:start="229:50" pos:end="229:72"><name pos:start="229:50" pos:end="229:50">s</name><operator pos:start="229:51" pos:end="229:52">-&gt;</operator><name pos:start="229:53" pos:end="229:72">first_sectors_number</name></name><operator pos:start="229:73" pos:end="229:73">-</operator><literal type="number" pos:start="229:74" pos:end="229:74">1</literal><operator pos:start="229:75" pos:end="229:75">)</operator><operator pos:start="229:76" pos:end="229:76">*</operator><literal type="number" pos:start="229:77" pos:end="229:81">0x200</literal><operator pos:start="229:82" pos:end="229:82">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:29"><expr pos:start="231:5" pos:end="231:28"><name pos:start="231:5" pos:end="231:23"><name pos:start="231:5" pos:end="231:14">bootsector</name><operator pos:start="231:15" pos:end="231:16">-&gt;</operator><name pos:start="231:17" pos:end="231:20">jump</name><index pos:start="231:21" pos:end="231:23">[<expr pos:start="231:22" pos:end="231:22"><literal type="number" pos:start="231:22" pos:end="231:22">0</literal></expr>]</index></name><operator pos:start="231:24" pos:end="231:24">=</operator><literal type="number" pos:start="231:25" pos:end="231:28">0xeb</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:29"><expr pos:start="233:5" pos:end="233:28"><name pos:start="233:5" pos:end="233:23"><name pos:start="233:5" pos:end="233:14">bootsector</name><operator pos:start="233:15" pos:end="233:16">-&gt;</operator><name pos:start="233:17" pos:end="233:20">jump</name><index pos:start="233:21" pos:end="233:23">[<expr pos:start="233:22" pos:end="233:22"><literal type="number" pos:start="233:22" pos:end="233:22">1</literal></expr>]</index></name><operator pos:start="233:24" pos:end="233:24">=</operator><literal type="number" pos:start="233:25" pos:end="233:28">0x3e</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:29"><expr pos:start="235:5" pos:end="235:28"><name pos:start="235:5" pos:end="235:23"><name pos:start="235:5" pos:end="235:14">bootsector</name><operator pos:start="235:15" pos:end="235:16">-&gt;</operator><name pos:start="235:17" pos:end="235:20">jump</name><index pos:start="235:21" pos:end="235:23">[<expr pos:start="235:22" pos:end="235:22"><literal type="number" pos:start="235:22" pos:end="235:22">2</literal></expr>]</index></name><operator pos:start="235:24" pos:end="235:24">=</operator><literal type="number" pos:start="235:25" pos:end="235:28">0x90</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="237:5" pos:end="237:42"><expr pos:start="237:5" pos:end="237:41"><call pos:start="237:5" pos:end="237:41"><name pos:start="237:5" pos:end="237:10">memcpy</name><argument_list pos:start="237:11" pos:end="237:41">(<argument pos:start="237:12" pos:end="237:27"><expr pos:start="237:12" pos:end="237:27"><name pos:start="237:12" pos:end="237:27"><name pos:start="237:12" pos:end="237:21">bootsector</name><operator pos:start="237:22" pos:end="237:23">-&gt;</operator><name pos:start="237:24" pos:end="237:27">name</name></name></expr></argument>,<argument pos:start="237:29" pos:end="237:38"><expr pos:start="237:29" pos:end="237:38"><literal type="string" pos:start="237:29" pos:end="237:38">"QEMU    "</literal></expr></argument>,<argument pos:start="237:40" pos:end="237:40"><expr pos:start="237:40" pos:end="237:40"><literal type="number" pos:start="237:40" pos:end="237:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:47"><expr pos:start="239:5" pos:end="239:46"><name pos:start="239:5" pos:end="239:27"><name pos:start="239:5" pos:end="239:14">bootsector</name><operator pos:start="239:15" pos:end="239:16">-&gt;</operator><name pos:start="239:17" pos:end="239:27">sector_size</name></name><operator pos:start="239:28" pos:end="239:28">=</operator><call pos:start="239:29" pos:end="239:46"><name pos:start="239:29" pos:end="239:39">cpu_to_le16</name><argument_list pos:start="239:40" pos:end="239:46">(<argument pos:start="239:41" pos:end="239:45"><expr pos:start="239:41" pos:end="239:45"><literal type="number" pos:start="239:41" pos:end="239:45">0x200</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:59"><expr pos:start="241:5" pos:end="241:58"><name pos:start="241:5" pos:end="241:35"><name pos:start="241:5" pos:end="241:14">bootsector</name><operator pos:start="241:15" pos:end="241:16">-&gt;</operator><name pos:start="241:17" pos:end="241:35">sectors_per_cluster</name></name><operator pos:start="241:36" pos:end="241:36">=</operator><name pos:start="241:37" pos:end="241:58"><name pos:start="241:37" pos:end="241:37">s</name><operator pos:start="241:38" pos:end="241:39">-&gt;</operator><name pos:start="241:40" pos:end="241:58">sectors_per_cluster</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:48"><expr pos:start="243:5" pos:end="243:47"><name pos:start="243:5" pos:end="243:32"><name pos:start="243:5" pos:end="243:14">bootsector</name><operator pos:start="243:15" pos:end="243:16">-&gt;</operator><name pos:start="243:17" pos:end="243:32">reserved_sectors</name></name><operator pos:start="243:33" pos:end="243:33">=</operator><call pos:start="243:34" pos:end="243:47"><name pos:start="243:34" pos:end="243:44">cpu_to_le16</name><argument_list pos:start="243:45" pos:end="243:47">(<argument pos:start="243:46" pos:end="243:46"><expr pos:start="243:46" pos:end="243:46"><literal type="number" pos:start="243:46" pos:end="243:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:35"><expr pos:start="245:5" pos:end="245:34"><name pos:start="245:5" pos:end="245:30"><name pos:start="245:5" pos:end="245:14">bootsector</name><operator pos:start="245:15" pos:end="245:16">-&gt;</operator><name pos:start="245:17" pos:end="245:30">number_of_fats</name></name><operator pos:start="245:31" pos:end="245:31">=</operator><literal type="number" pos:start="245:32" pos:end="245:34">0x2</literal></expr>;</expr_stmt> <comment type="block" pos:start="245:37" pos:end="245:56">/* number of FATs */</comment>

    <expr_stmt pos:start="247:5" pos:end="247:76"><expr pos:start="247:5" pos:end="247:75"><name pos:start="247:5" pos:end="247:28"><name pos:start="247:5" pos:end="247:14">bootsector</name><operator pos:start="247:15" pos:end="247:16">-&gt;</operator><name pos:start="247:17" pos:end="247:28">root_entries</name></name><operator pos:start="247:29" pos:end="247:29">=</operator><call pos:start="247:30" pos:end="247:75"><name pos:start="247:30" pos:end="247:40">cpu_to_le16</name><argument_list pos:start="247:41" pos:end="247:75">(<argument pos:start="247:42" pos:end="247:74"><expr pos:start="247:42" pos:end="247:74"><name pos:start="247:42" pos:end="247:69"><name pos:start="247:42" pos:end="247:42">s</name><operator pos:start="247:43" pos:end="247:44">-&gt;</operator><name pos:start="247:45" pos:end="247:69">sectors_of_root_directory</name></name><operator pos:start="247:70" pos:end="247:70">*</operator><literal type="number" pos:start="247:71" pos:end="247:74">0x10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:86"><expr pos:start="249:5" pos:end="249:85"><name pos:start="249:5" pos:end="249:31"><name pos:start="249:5" pos:end="249:14">bootsector</name><operator pos:start="249:15" pos:end="249:16">-&gt;</operator><name pos:start="249:17" pos:end="249:31">total_sectors16</name></name><operator pos:start="249:32" pos:end="249:32">=</operator><ternary pos:start="249:33" pos:end="249:85"><condition pos:start="249:33" pos:end="249:55"><expr pos:start="249:33" pos:end="249:54"><name pos:start="249:33" pos:end="249:47"><name pos:start="249:33" pos:end="249:33">s</name><operator pos:start="249:34" pos:end="249:35">-&gt;</operator><name pos:start="249:36" pos:end="249:47">sector_count</name></name><operator pos:start="249:48" pos:end="249:48">&gt;</operator><literal type="number" pos:start="249:49" pos:end="249:54">0xffff</literal></expr>?</condition><then pos:start="249:56" pos:end="249:56"><expr pos:start="249:56" pos:end="249:56"><literal type="number" pos:start="249:56" pos:end="249:56">0</literal></expr></then><else pos:start="249:57" pos:end="249:85">:<expr pos:start="249:58" pos:end="249:85"><call pos:start="249:58" pos:end="249:85"><name pos:start="249:58" pos:end="249:68">cpu_to_le16</name><argument_list pos:start="249:69" pos:end="249:85">(<argument pos:start="249:70" pos:end="249:84"><expr pos:start="249:70" pos:end="249:84"><name pos:start="249:70" pos:end="249:84"><name pos:start="249:70" pos:end="249:70">s</name><operator pos:start="249:71" pos:end="249:72">-&gt;</operator><name pos:start="249:73" pos:end="249:84">sector_count</name></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="251:5" pos:end="251:65"><expr pos:start="251:5" pos:end="251:64"><name pos:start="251:5" pos:end="251:26"><name pos:start="251:5" pos:end="251:14">bootsector</name><operator pos:start="251:15" pos:end="251:16">-&gt;</operator><name pos:start="251:17" pos:end="251:26">media_type</name></name><operator pos:start="251:27" pos:end="251:27">=</operator><operator pos:start="251:28" pos:end="251:28">(</operator><ternary pos:start="251:29" pos:end="251:63"><condition pos:start="251:29" pos:end="251:54"><expr pos:start="251:29" pos:end="251:53"><name pos:start="251:29" pos:end="251:51"><name pos:start="251:29" pos:end="251:29">s</name><operator pos:start="251:30" pos:end="251:31">-&gt;</operator><name pos:start="251:32" pos:end="251:51">first_sectors_number</name></name><operator pos:start="251:52" pos:end="251:52">&gt;</operator><literal type="number" pos:start="251:53" pos:end="251:53">1</literal></expr>?</condition><then pos:start="251:55" pos:end="251:58"><expr pos:start="251:55" pos:end="251:58"><literal type="number" pos:start="251:55" pos:end="251:58">0xf8</literal></expr></then><else pos:start="251:59" pos:end="251:63">:<expr pos:start="251:60" pos:end="251:63"><literal type="number" pos:start="251:60" pos:end="251:63">0xf0</literal></expr></else></ternary><operator pos:start="251:64" pos:end="251:64">)</operator></expr>;</expr_stmt> <comment type="block" pos:start="251:67" pos:end="251:106">/* media descriptor (f8=hd, f0=3.5 fd)*/</comment>

    <expr_stmt pos:start="253:5" pos:end="253:47"><expr pos:start="253:5" pos:end="253:46"><name pos:start="253:5" pos:end="253:21"><name pos:start="253:5" pos:end="253:5">s</name><operator pos:start="253:6" pos:end="253:7">-&gt;</operator><name pos:start="253:8" pos:end="253:10">fat</name><operator pos:start="253:11" pos:end="253:11">.</operator><name pos:start="253:12" pos:end="253:18">pointer</name><index pos:start="253:19" pos:end="253:21">[<expr pos:start="253:20" pos:end="253:20"><literal type="number" pos:start="253:20" pos:end="253:20">0</literal></expr>]</index></name> <operator pos:start="253:23" pos:end="253:23">=</operator> <name pos:start="253:25" pos:end="253:46"><name pos:start="253:25" pos:end="253:34">bootsector</name><operator pos:start="253:35" pos:end="253:36">-&gt;</operator><name pos:start="253:37" pos:end="253:46">media_type</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="255:64"><expr pos:start="255:5" pos:end="255:63"><name pos:start="255:5" pos:end="255:31"><name pos:start="255:5" pos:end="255:14">bootsector</name><operator pos:start="255:15" pos:end="255:16">-&gt;</operator><name pos:start="255:17" pos:end="255:31">sectors_per_fat</name></name><operator pos:start="255:32" pos:end="255:32">=</operator><call pos:start="255:33" pos:end="255:63"><name pos:start="255:33" pos:end="255:43">cpu_to_le16</name><argument_list pos:start="255:44" pos:end="255:63">(<argument pos:start="255:45" pos:end="255:62"><expr pos:start="255:45" pos:end="255:62"><name pos:start="255:45" pos:end="255:62"><name pos:start="255:45" pos:end="255:45">s</name><operator pos:start="255:46" pos:end="255:47">-&gt;</operator><name pos:start="255:48" pos:end="255:62">sectors_per_fat</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:54"><expr pos:start="257:5" pos:end="257:53"><name pos:start="257:5" pos:end="257:33"><name pos:start="257:5" pos:end="257:14">bootsector</name><operator pos:start="257:15" pos:end="257:16">-&gt;</operator><name pos:start="257:17" pos:end="257:33">sectors_per_track</name></name> <operator pos:start="257:35" pos:end="257:35">=</operator> <call pos:start="257:37" pos:end="257:53"><name pos:start="257:37" pos:end="257:47">cpu_to_le16</name><argument_list pos:start="257:48" pos:end="257:53">(<argument pos:start="257:49" pos:end="257:52"><expr pos:start="257:49" pos:end="257:52"><name pos:start="257:49" pos:end="257:52">secs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:53"><expr pos:start="259:5" pos:end="259:52"><name pos:start="259:5" pos:end="259:31"><name pos:start="259:5" pos:end="259:14">bootsector</name><operator pos:start="259:15" pos:end="259:16">-&gt;</operator><name pos:start="259:17" pos:end="259:31">number_of_heads</name></name> <operator pos:start="259:33" pos:end="259:33">=</operator> <call pos:start="259:35" pos:end="259:52"><name pos:start="259:35" pos:end="259:45">cpu_to_le16</name><argument_list pos:start="259:46" pos:end="259:52">(<argument pos:start="259:47" pos:end="259:51"><expr pos:start="259:47" pos:end="259:51"><name pos:start="259:47" pos:end="259:51">heads</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="261:5" pos:end="261:78"><expr pos:start="261:5" pos:end="261:77"><name pos:start="261:5" pos:end="261:30"><name pos:start="261:5" pos:end="261:14">bootsector</name><operator pos:start="261:15" pos:end="261:16">-&gt;</operator><name pos:start="261:17" pos:end="261:30">hidden_sectors</name></name><operator pos:start="261:31" pos:end="261:31">=</operator><call pos:start="261:32" pos:end="261:77"><name pos:start="261:32" pos:end="261:42">cpu_to_le32</name><argument_list pos:start="261:43" pos:end="261:77">(<argument pos:start="261:44" pos:end="261:76"><expr pos:start="261:44" pos:end="261:76"><ternary pos:start="261:44" pos:end="261:76"><condition pos:start="261:44" pos:end="261:70"><expr pos:start="261:44" pos:end="261:69"><name pos:start="261:44" pos:end="261:66"><name pos:start="261:44" pos:end="261:44">s</name><operator pos:start="261:45" pos:end="261:46">-&gt;</operator><name pos:start="261:47" pos:end="261:66">first_sectors_number</name></name><operator pos:start="261:67" pos:end="261:68">==</operator><literal type="number" pos:start="261:69" pos:end="261:69">1</literal></expr>?</condition><then pos:start="261:71" pos:end="261:71"><expr pos:start="261:71" pos:end="261:71"><literal type="number" pos:start="261:71" pos:end="261:71">0</literal></expr></then><else pos:start="261:72" pos:end="261:76">:<expr pos:start="261:73" pos:end="261:76"><literal type="number" pos:start="261:73" pos:end="261:76">0x3f</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="263:5" pos:end="263:84"><expr pos:start="263:5" pos:end="263:83"><name pos:start="263:5" pos:end="263:29"><name pos:start="263:5" pos:end="263:14">bootsector</name><operator pos:start="263:15" pos:end="263:16">-&gt;</operator><name pos:start="263:17" pos:end="263:29">total_sectors</name></name><operator pos:start="263:30" pos:end="263:30">=</operator><call pos:start="263:31" pos:end="263:83"><name pos:start="263:31" pos:end="263:41">cpu_to_le32</name><argument_list pos:start="263:42" pos:end="263:83">(<argument pos:start="263:43" pos:end="263:82"><expr pos:start="263:43" pos:end="263:82"><ternary pos:start="263:43" pos:end="263:82"><condition pos:start="263:43" pos:end="263:65"><expr pos:start="263:43" pos:end="263:64"><name pos:start="263:43" pos:end="263:57"><name pos:start="263:43" pos:end="263:43">s</name><operator pos:start="263:44" pos:end="263:45">-&gt;</operator><name pos:start="263:46" pos:end="263:57">sector_count</name></name><operator pos:start="263:58" pos:end="263:58">&gt;</operator><literal type="number" pos:start="263:59" pos:end="263:64">0xffff</literal></expr>?</condition><then pos:start="263:66" pos:end="263:80"><expr pos:start="263:66" pos:end="263:80"><name pos:start="263:66" pos:end="263:80"><name pos:start="263:66" pos:end="263:66">s</name><operator pos:start="263:67" pos:end="263:68">-&gt;</operator><name pos:start="263:69" pos:end="263:80">sector_count</name></name></expr></then><else pos:start="263:81" pos:end="263:82">:<expr pos:start="263:82" pos:end="263:82"><literal type="number" pos:start="263:82" pos:end="263:82">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="267:5" pos:end="267:45">/* LATER TODO: if FAT32, this is wrong */</comment>

    <expr_stmt pos:start="269:5" pos:end="269:71"><expr pos:start="269:5" pos:end="269:70"><name pos:start="269:5" pos:end="269:36"><name pos:start="269:5" pos:end="269:14">bootsector</name><operator pos:start="269:15" pos:end="269:16">-&gt;</operator><name pos:start="269:17" pos:end="269:17">u</name><operator pos:start="269:18" pos:end="269:18">.</operator><name pos:start="269:19" pos:end="269:23">fat16</name><operator pos:start="269:24" pos:end="269:24">.</operator><name pos:start="269:25" pos:end="269:36">drive_number</name></name><operator pos:start="269:37" pos:end="269:37">=</operator><ternary pos:start="269:38" pos:end="269:70"><condition pos:start="269:38" pos:end="269:64"><expr pos:start="269:38" pos:end="269:63"><name pos:start="269:38" pos:end="269:60"><name pos:start="269:38" pos:end="269:38">s</name><operator pos:start="269:39" pos:end="269:40">-&gt;</operator><name pos:start="269:41" pos:end="269:60">first_sectors_number</name></name><operator pos:start="269:61" pos:end="269:62">==</operator><literal type="number" pos:start="269:63" pos:end="269:63">1</literal></expr>?</condition><then pos:start="269:65" pos:end="269:65"><expr pos:start="269:65" pos:end="269:65"><literal type="number" pos:start="269:65" pos:end="269:65">0</literal></expr></then><else pos:start="269:66" pos:end="269:70">:<expr pos:start="269:67" pos:end="269:70"><literal type="number" pos:start="269:67" pos:end="269:70">0x80</literal></expr></else></ternary></expr>;</expr_stmt> <comment type="block" pos:start="269:73" pos:end="269:93">/* fda=0, hda=0x80 */</comment>

    <expr_stmt pos:start="271:5" pos:end="271:39"><expr pos:start="271:5" pos:end="271:38"><name pos:start="271:5" pos:end="271:36"><name pos:start="271:5" pos:end="271:14">bootsector</name><operator pos:start="271:15" pos:end="271:16">-&gt;</operator><name pos:start="271:17" pos:end="271:17">u</name><operator pos:start="271:18" pos:end="271:18">.</operator><name pos:start="271:19" pos:end="271:23">fat16</name><operator pos:start="271:24" pos:end="271:24">.</operator><name pos:start="271:25" pos:end="271:36">current_head</name></name><operator pos:start="271:37" pos:end="271:37">=</operator><literal type="number" pos:start="271:38" pos:end="271:38">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="273:5" pos:end="273:39"><expr pos:start="273:5" pos:end="273:38"><name pos:start="273:5" pos:end="273:33"><name pos:start="273:5" pos:end="273:14">bootsector</name><operator pos:start="273:15" pos:end="273:16">-&gt;</operator><name pos:start="273:17" pos:end="273:17">u</name><operator pos:start="273:18" pos:end="273:18">.</operator><name pos:start="273:19" pos:end="273:23">fat16</name><operator pos:start="273:24" pos:end="273:24">.</operator><name pos:start="273:25" pos:end="273:33">signature</name></name><operator pos:start="273:34" pos:end="273:34">=</operator><literal type="number" pos:start="273:35" pos:end="273:38">0x29</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="275:5" pos:end="275:51"><expr pos:start="275:5" pos:end="275:50"><name pos:start="275:5" pos:end="275:26"><name pos:start="275:5" pos:end="275:14">bootsector</name><operator pos:start="275:15" pos:end="275:16">-&gt;</operator><name pos:start="275:17" pos:end="275:17">u</name><operator pos:start="275:18" pos:end="275:18">.</operator><name pos:start="275:19" pos:end="275:23">fat16</name><operator pos:start="275:24" pos:end="275:24">.</operator><name pos:start="275:25" pos:end="275:26">id</name></name><operator pos:start="275:27" pos:end="275:27">=</operator><call pos:start="275:28" pos:end="275:50"><name pos:start="275:28" pos:end="275:38">cpu_to_le32</name><argument_list pos:start="275:39" pos:end="275:50">(<argument pos:start="275:40" pos:end="275:49"><expr pos:start="275:40" pos:end="275:49"><literal type="number" pos:start="275:40" pos:end="275:49">0xfabe1afd</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="279:5" pos:end="279:62"><expr pos:start="279:5" pos:end="279:61"><call pos:start="279:5" pos:end="279:61"><name pos:start="279:5" pos:end="279:10">memcpy</name><argument_list pos:start="279:11" pos:end="279:61">(<argument pos:start="279:12" pos:end="279:43"><expr pos:start="279:12" pos:end="279:43"><name pos:start="279:12" pos:end="279:43"><name pos:start="279:12" pos:end="279:21">bootsector</name><operator pos:start="279:22" pos:end="279:23">-&gt;</operator><name pos:start="279:24" pos:end="279:24">u</name><operator pos:start="279:25" pos:end="279:25">.</operator><name pos:start="279:26" pos:end="279:30">fat16</name><operator pos:start="279:31" pos:end="279:31">.</operator><name pos:start="279:32" pos:end="279:43">volume_label</name></name></expr></argument>,<argument pos:start="279:45" pos:end="279:57"><expr pos:start="279:45" pos:end="279:57"><literal type="string" pos:start="279:45" pos:end="279:57">"QEMU VVFAT "</literal></expr></argument>,<argument pos:start="279:59" pos:end="279:60"><expr pos:start="279:59" pos:end="279:60"><literal type="number" pos:start="279:59" pos:end="279:60">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="281:5" pos:end="281:102"><expr pos:start="281:5" pos:end="281:101"><call pos:start="281:5" pos:end="281:101"><name pos:start="281:5" pos:end="281:10">memcpy</name><argument_list pos:start="281:11" pos:end="281:101">(<argument pos:start="281:12" pos:end="281:31"><expr pos:start="281:12" pos:end="281:31"><name pos:start="281:12" pos:end="281:31"><name pos:start="281:12" pos:end="281:21">bootsector</name><operator pos:start="281:22" pos:end="281:23">-&gt;</operator><name pos:start="281:24" pos:end="281:31">fat_type</name></name></expr></argument>,<argument pos:start="281:33" pos:end="281:98"><expr pos:start="281:33" pos:end="281:98"><operator pos:start="281:33" pos:end="281:33">(</operator><ternary pos:start="281:34" pos:end="281:97"><condition pos:start="281:34" pos:end="281:49"><expr pos:start="281:34" pos:end="281:48"><name pos:start="281:34" pos:end="281:44"><name pos:start="281:34" pos:end="281:34">s</name><operator pos:start="281:35" pos:end="281:36">-&gt;</operator><name pos:start="281:37" pos:end="281:44">fat_type</name></name><operator pos:start="281:45" pos:end="281:46">==</operator><literal type="number" pos:start="281:47" pos:end="281:48">12</literal></expr>?</condition><then pos:start="281:50" pos:end="281:59"><expr pos:start="281:50" pos:end="281:59"><literal type="string" pos:start="281:50" pos:end="281:59">"FAT12   "</literal></expr></then><else pos:start="281:60" pos:end="281:97">:<expr pos:start="281:61" pos:end="281:97"><ternary pos:start="281:61" pos:end="281:97"><condition pos:start="281:61" pos:end="281:76"><expr pos:start="281:61" pos:end="281:75"><name pos:start="281:61" pos:end="281:71"><name pos:start="281:61" pos:end="281:61">s</name><operator pos:start="281:62" pos:end="281:63">-&gt;</operator><name pos:start="281:64" pos:end="281:71">fat_type</name></name><operator pos:start="281:72" pos:end="281:73">==</operator><literal type="number" pos:start="281:74" pos:end="281:75">16</literal></expr>?</condition><then pos:start="281:77" pos:end="281:86"><expr pos:start="281:77" pos:end="281:86"><literal type="string" pos:start="281:77" pos:end="281:86">"FAT16   "</literal></expr></then><else pos:start="281:87" pos:end="281:97">:<expr pos:start="281:88" pos:end="281:97"><literal type="string" pos:start="281:88" pos:end="281:97">"FAT32   "</literal></expr></else></ternary></expr></else></ternary><operator pos:start="281:98" pos:end="281:98">)</operator></expr></argument>,<argument pos:start="281:100" pos:end="281:100"><expr pos:start="281:100" pos:end="281:100"><literal type="number" pos:start="281:100" pos:end="281:100">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="283:5" pos:end="283:30"><expr pos:start="283:5" pos:end="283:29"><name pos:start="283:5" pos:end="283:24"><name pos:start="283:5" pos:end="283:14">bootsector</name><operator pos:start="283:15" pos:end="283:16">-&gt;</operator><name pos:start="283:17" pos:end="283:21">magic</name><index pos:start="283:22" pos:end="283:24">[<expr pos:start="283:23" pos:end="283:23"><literal type="number" pos:start="283:23" pos:end="283:23">0</literal></expr>]</index></name><operator pos:start="283:25" pos:end="283:25">=</operator><literal type="number" pos:start="283:26" pos:end="283:29">0x55</literal></expr>;</expr_stmt> <expr_stmt pos:start="283:32" pos:end="283:57"><expr pos:start="283:32" pos:end="283:56"><name pos:start="283:32" pos:end="283:51"><name pos:start="283:32" pos:end="283:41">bootsector</name><operator pos:start="283:42" pos:end="283:43">-&gt;</operator><name pos:start="283:44" pos:end="283:48">magic</name><index pos:start="283:49" pos:end="283:51">[<expr pos:start="283:50" pos:end="283:50"><literal type="number" pos:start="283:50" pos:end="283:50">1</literal></expr>]</index></name><operator pos:start="283:52" pos:end="283:52">=</operator><literal type="number" pos:start="283:53" pos:end="283:56">0xaa</literal></expr>;</expr_stmt>



    <return pos:start="287:5" pos:end="287:13">return <expr pos:start="287:12" pos:end="287:12"><literal type="number" pos:start="287:12" pos:end="287:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
