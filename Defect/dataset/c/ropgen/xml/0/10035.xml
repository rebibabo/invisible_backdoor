<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10035.c" pos:tabs="8"><function pos:start="1:1" pos:end="343:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">do_interrupt_protected</name><parameter_list pos:start="1:35" pos:end="3:57">(<parameter pos:start="1:36" pos:end="1:44"><decl pos:start="1:36" pos:end="1:44"><type pos:start="1:36" pos:end="1:44"><name pos:start="1:36" pos:end="1:38">int</name></type> <name pos:start="1:40" pos:end="1:44">intno</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:56"><decl pos:start="1:47" pos:end="1:56"><type pos:start="1:47" pos:end="1:56"><name pos:start="1:47" pos:end="1:49">int</name></type> <name pos:start="1:51" pos:end="1:56">is_int</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:72"><decl pos:start="1:59" pos:end="1:72"><type pos:start="1:59" pos:end="1:72"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:72">error_code</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:56"><decl pos:start="3:36" pos:end="3:56"><type pos:start="3:36" pos:end="3:56"><name pos:start="3:36" pos:end="3:43">unsigned</name> <name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:56">next_eip</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="343:1">{<block_content pos:start="7:5" pos:end="341:60">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">SegmentCache</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:20">dt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:23"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">uint8_t</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:16">ptr</name></decl>, <decl pos:start="9:19" pos:end="9:22"><type ref="prev" pos:start="9:5" pos:end="9:13"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:22">ssp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:36"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">type</name></decl>, <decl pos:start="11:15" pos:end="11:17"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:15" pos:end="11:17">dpl</name></decl>, <decl pos:start="11:20" pos:end="11:27"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:20" pos:end="11:27">selector</name></decl>, <decl pos:start="11:30" pos:end="11:35"><type ref="prev" pos:start="11:5" pos:end="11:7"/><name pos:start="11:30" pos:end="11:35">ss_dpl</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:41"><decl pos:start="13:5" pos:end="13:22"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">has_error_code</name></decl>, <decl pos:start="13:25" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:25" pos:end="13:33">new_stack</name></decl>, <decl pos:start="13:36" pos:end="13:40"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:36" pos:end="13:40">shift</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:62"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:15">e1</name></decl>, <decl pos:start="15:18" pos:end="15:19"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:18" pos:end="15:19">e2</name></decl>, <decl pos:start="15:22" pos:end="15:27"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:22" pos:end="15:27">offset</name></decl>, <decl pos:start="15:30" pos:end="15:31"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:30" pos:end="15:31">ss</name></decl>, <decl pos:start="15:34" pos:end="15:36"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:34" pos:end="15:36">esp</name></decl>, <decl pos:start="15:39" pos:end="15:43"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:39" pos:end="15:43">ss_e1</name></decl>, <decl pos:start="15:46" pos:end="15:50"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:46" pos:end="15:50">ss_e2</name></decl>, <decl pos:start="15:53" pos:end="15:61"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:53" pos:end="15:61">push_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:46"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint32_t</name></type> <name pos:start="17:14" pos:end="17:19">old_cs</name></decl>, <decl pos:start="17:22" pos:end="17:27"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:22" pos:end="17:27">old_ss</name></decl>, <decl pos:start="17:30" pos:end="17:36"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:30" pos:end="17:36">old_esp</name></decl>, <decl pos:start="17:39" pos:end="17:45"><type ref="prev" pos:start="17:5" pos:end="17:12"/><name pos:start="17:39" pos:end="17:45">old_eip</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:6">dt</name> <operator pos:start="21:8" pos:end="21:8">=</operator> <operator pos:start="21:10" pos:end="21:10">&amp;</operator><name pos:start="21:11" pos:end="21:18"><name pos:start="21:11" pos:end="21:13">env</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:18">idt</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:55"><if pos:start="23:5" pos:end="25:55">if <condition pos:start="23:8" pos:end="23:34">(<expr pos:start="23:9" pos:end="23:33"><name pos:start="23:9" pos:end="23:13">intno</name> <operator pos:start="23:15" pos:end="23:15">*</operator> <literal type="number" pos:start="23:17" pos:end="23:19">8</literal> <operator pos:start="23:19" pos:end="23:19">+</operator> <literal type="number" pos:start="23:21" pos:end="23:21">7</literal> <operator pos:start="23:23" pos:end="23:23">&gt;</operator> <name pos:start="23:25" pos:end="23:33"><name pos:start="23:25" pos:end="23:26">dt</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:33">limit</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:55"><block_content pos:start="25:9" pos:end="25:55">

        <expr_stmt pos:start="25:9" pos:end="25:55"><expr pos:start="25:9" pos:end="25:54"><call pos:start="25:9" pos:end="25:54"><name pos:start="25:9" pos:end="25:27">raise_exception_err</name><argument_list pos:start="25:28" pos:end="25:54">(<argument pos:start="25:29" pos:end="25:38"><expr pos:start="25:29" pos:end="25:38"><name pos:start="25:29" pos:end="25:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="25:41" pos:end="25:53"><expr pos:start="25:41" pos:end="25:53"><name pos:start="25:41" pos:end="25:45">intno</name> <operator pos:start="25:47" pos:end="25:47">*</operator> <literal type="number" pos:start="25:49" pos:end="25:51">8</literal> <operator pos:start="25:51" pos:end="25:51">+</operator> <literal type="number" pos:start="25:53" pos:end="25:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:31"><expr pos:start="27:5" pos:end="27:30"><name pos:start="27:5" pos:end="27:7">ptr</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <name pos:start="27:11" pos:end="27:18"><name pos:start="27:11" pos:end="27:12">dt</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:18">base</name></name> <operator pos:start="27:20" pos:end="27:20">+</operator> <name pos:start="27:22" pos:end="27:26">intno</name> <operator pos:start="27:28" pos:end="27:28">*</operator> <literal type="number" pos:start="27:30" pos:end="27:30">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:18"><expr pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:6">e1</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:17"><name pos:start="29:10" pos:end="29:12">ldl</name><argument_list pos:start="29:13" pos:end="29:17">(<argument pos:start="29:14" pos:end="29:16"><expr pos:start="29:14" pos:end="29:16"><name pos:start="29:14" pos:end="29:16">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:22"><expr pos:start="31:5" pos:end="31:21"><name pos:start="31:5" pos:end="31:6">e2</name> <operator pos:start="31:8" pos:end="31:8">=</operator> <call pos:start="31:10" pos:end="31:21"><name pos:start="31:10" pos:end="31:12">ldl</name><argument_list pos:start="31:13" pos:end="31:21">(<argument pos:start="31:14" pos:end="31:20"><expr pos:start="31:14" pos:end="31:20"><name pos:start="31:14" pos:end="31:16">ptr</name> <operator pos:start="31:18" pos:end="31:18">+</operator> <literal type="number" pos:start="31:20" pos:end="31:20">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="33:5" pos:end="33:25">/* check gate type */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:8">type</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <operator pos:start="35:12" pos:end="35:12">(</operator><name pos:start="35:13" pos:end="35:14">e2</name> <operator pos:start="35:16" pos:end="35:17">&gt;&gt;</operator> <name pos:start="35:19" pos:end="35:33">DESC_TYPE_SHIFT</name><operator pos:start="35:34" pos:end="35:34">)</operator> <operator pos:start="35:36" pos:end="35:36">&amp;</operator> <literal type="number" pos:start="35:38" pos:end="35:41">0x1f</literal></expr>;</expr_stmt>

    <switch pos:start="37:5" pos:end="61:5">switch<condition pos:start="37:11" pos:end="37:16">(<expr pos:start="37:12" pos:end="37:15"><name pos:start="37:12" pos:end="37:15">type</name></expr>)</condition> <block pos:start="37:18" pos:end="61:5">{<block_content pos:start="39:5" pos:end="59:14">

    <case pos:start="39:5" pos:end="39:11">case <expr pos:start="39:10" pos:end="39:10"><literal type="number" pos:start="39:10" pos:end="39:10">5</literal></expr>:</case> <comment type="block" pos:start="39:13" pos:end="39:27">/* task gate */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:50"><expr pos:start="41:9" pos:end="41:49"><call pos:start="41:9" pos:end="41:49"><name pos:start="41:9" pos:end="41:17">cpu_abort</name><argument_list pos:start="41:18" pos:end="41:49">(<argument pos:start="41:19" pos:end="41:21"><expr pos:start="41:19" pos:end="41:21"><name pos:start="41:19" pos:end="41:21">env</name></expr></argument>, <argument pos:start="41:24" pos:end="41:48"><expr pos:start="41:24" pos:end="41:48"><literal type="string" pos:start="41:24" pos:end="41:48">"task gate not supported"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:11">case <expr pos:start="45:10" pos:end="45:10"><literal type="number" pos:start="45:10" pos:end="45:10">6</literal></expr>:</case> <comment type="block" pos:start="45:13" pos:end="45:36">/* 286 interrupt gate */</comment>

    <case pos:start="47:5" pos:end="47:11">case <expr pos:start="47:10" pos:end="47:10"><literal type="number" pos:start="47:10" pos:end="47:10">7</literal></expr>:</case> <comment type="block" pos:start="47:13" pos:end="47:31">/* 286 trap gate */</comment>

    <case pos:start="49:5" pos:end="49:12">case <expr pos:start="49:10" pos:end="49:11"><literal type="number" pos:start="49:10" pos:end="49:11">14</literal></expr>:</case> <comment type="block" pos:start="49:14" pos:end="49:37">/* 386 interrupt gate */</comment>

    <case pos:start="51:5" pos:end="51:12">case <expr pos:start="51:10" pos:end="51:11"><literal type="number" pos:start="51:10" pos:end="51:11">15</literal></expr>:</case> <comment type="block" pos:start="51:14" pos:end="51:32">/* 386 trap gate */</comment>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <default pos:start="55:5" pos:end="55:12">default:</default>

        <expr_stmt pos:start="57:9" pos:end="57:55"><expr pos:start="57:9" pos:end="57:54"><call pos:start="57:9" pos:end="57:54"><name pos:start="57:9" pos:end="57:27">raise_exception_err</name><argument_list pos:start="57:28" pos:end="57:54">(<argument pos:start="57:29" pos:end="57:38"><expr pos:start="57:29" pos:end="57:38"><name pos:start="57:29" pos:end="57:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="57:41" pos:end="57:53"><expr pos:start="57:41" pos:end="57:53"><name pos:start="57:41" pos:end="57:45">intno</name> <operator pos:start="57:47" pos:end="57:47">*</operator> <literal type="number" pos:start="57:49" pos:end="57:51">8</literal> <operator pos:start="57:51" pos:end="57:51">+</operator> <literal type="number" pos:start="57:53" pos:end="57:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="63:5" pos:end="63:37"><expr pos:start="63:5" pos:end="63:36"><name pos:start="63:5" pos:end="63:7">dpl</name> <operator pos:start="63:9" pos:end="63:9">=</operator> <operator pos:start="63:11" pos:end="63:11">(</operator><name pos:start="63:12" pos:end="63:13">e2</name> <operator pos:start="63:15" pos:end="63:16">&gt;&gt;</operator> <name pos:start="63:18" pos:end="63:31">DESC_DPL_SHIFT</name><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:34">&amp;</operator> <literal type="number" pos:start="63:36" pos:end="63:36">3</literal></expr>;</expr_stmt>

    <comment type="block" pos:start="65:5" pos:end="65:41">/* check privledge if software int */</comment>

    <if_stmt pos:start="67:5" pos:end="69:55"><if pos:start="67:5" pos:end="69:55">if <condition pos:start="67:8" pos:end="67:33">(<expr pos:start="67:9" pos:end="67:32"><name pos:start="67:9" pos:end="67:14">is_int</name> <operator pos:start="67:16" pos:end="67:17">&amp;&amp;</operator> <name pos:start="67:19" pos:end="67:21">dpl</name> <operator pos:start="67:23" pos:end="67:23">&lt;</operator> <name pos:start="67:25" pos:end="67:32"><name pos:start="67:25" pos:end="67:27">env</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:32">cpl</name></name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:55"><block_content pos:start="69:9" pos:end="69:55">

        <expr_stmt pos:start="69:9" pos:end="69:55"><expr pos:start="69:9" pos:end="69:54"><call pos:start="69:9" pos:end="69:54"><name pos:start="69:9" pos:end="69:27">raise_exception_err</name><argument_list pos:start="69:28" pos:end="69:54">(<argument pos:start="69:29" pos:end="69:38"><expr pos:start="69:29" pos:end="69:38"><name pos:start="69:29" pos:end="69:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="69:41" pos:end="69:53"><expr pos:start="69:41" pos:end="69:53"><name pos:start="69:41" pos:end="69:45">intno</name> <operator pos:start="69:47" pos:end="69:47">*</operator> <literal type="number" pos:start="69:49" pos:end="69:51">8</literal> <operator pos:start="69:51" pos:end="69:51">+</operator> <literal type="number" pos:start="69:53" pos:end="69:53">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <comment type="block" pos:start="71:5" pos:end="71:25">/* check valid bit */</comment>

    <if_stmt pos:start="73:5" pos:end="75:57"><if pos:start="73:5" pos:end="75:57">if <condition pos:start="73:8" pos:end="73:28">(<expr pos:start="73:9" pos:end="73:27"><operator pos:start="73:9" pos:end="73:9">!</operator><operator pos:start="73:10" pos:end="73:10">(</operator><name pos:start="73:11" pos:end="73:12">e2</name> <operator pos:start="73:14" pos:end="73:14">&amp;</operator> <name pos:start="73:16" pos:end="73:26">DESC_P_MASK</name><operator pos:start="73:27" pos:end="73:27">)</operator></expr>)</condition><block type="pseudo" pos:start="75:9" pos:end="75:57"><block_content pos:start="75:9" pos:end="75:57">

        <expr_stmt pos:start="75:9" pos:end="75:57"><expr pos:start="75:9" pos:end="75:56"><call pos:start="75:9" pos:end="75:56"><name pos:start="75:9" pos:end="75:27">raise_exception_err</name><argument_list pos:start="75:28" pos:end="75:56">(<argument pos:start="75:29" pos:end="75:40"><expr pos:start="75:29" pos:end="75:40"><name pos:start="75:29" pos:end="75:40">EXCP0B_NOSEG</name></expr></argument>, <argument pos:start="75:43" pos:end="75:55"><expr pos:start="75:43" pos:end="75:55"><name pos:start="75:43" pos:end="75:47">intno</name> <operator pos:start="75:49" pos:end="75:49">*</operator> <literal type="number" pos:start="75:51" pos:end="75:53">8</literal> <operator pos:start="75:53" pos:end="75:53">+</operator> <literal type="number" pos:start="75:55" pos:end="75:55">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:24"><expr pos:start="77:5" pos:end="77:23"><name pos:start="77:5" pos:end="77:12">selector</name> <operator pos:start="77:14" pos:end="77:14">=</operator> <name pos:start="77:16" pos:end="77:17">e1</name> <operator pos:start="77:19" pos:end="77:20">&gt;&gt;</operator> <literal type="number" pos:start="77:22" pos:end="77:23">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:51"><expr pos:start="79:5" pos:end="79:50"><name pos:start="79:5" pos:end="79:10">offset</name> <operator pos:start="79:12" pos:end="79:12">=</operator> <operator pos:start="79:14" pos:end="79:14">(</operator><name pos:start="79:15" pos:end="79:16">e2</name> <operator pos:start="79:18" pos:end="79:18">&amp;</operator> <literal type="number" pos:start="79:20" pos:end="79:29">0xffff0000</literal><operator pos:start="79:30" pos:end="79:30">)</operator> <operator pos:start="79:32" pos:end="79:32">|</operator> <operator pos:start="79:34" pos:end="79:34">(</operator><name pos:start="79:35" pos:end="79:36">e1</name> <operator pos:start="79:38" pos:end="79:38">&amp;</operator> <literal type="number" pos:start="79:40" pos:end="79:49">0x0000ffff</literal><operator pos:start="79:50" pos:end="79:50">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="83:43"><if pos:start="81:5" pos:end="83:43">if <condition pos:start="81:8" pos:end="81:33">(<expr pos:start="81:9" pos:end="81:32"><operator pos:start="81:9" pos:end="81:9">(</operator><name pos:start="81:10" pos:end="81:17">selector</name> <operator pos:start="81:19" pos:end="81:19">&amp;</operator> <literal type="number" pos:start="81:21" pos:end="81:26">0xfffc</literal><operator pos:start="81:27" pos:end="81:27">)</operator> <operator pos:start="81:29" pos:end="81:30">==</operator> <literal type="number" pos:start="81:32" pos:end="81:32">0</literal></expr>)</condition><block type="pseudo" pos:start="83:9" pos:end="83:43"><block_content pos:start="83:9" pos:end="83:43">

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><call pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:27">raise_exception_err</name><argument_list pos:start="83:28" pos:end="83:42">(<argument pos:start="83:29" pos:end="83:38"><expr pos:start="83:29" pos:end="83:38"><name pos:start="83:29" pos:end="83:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="83:41" pos:end="83:41"><expr pos:start="83:41" pos:end="83:41"><literal type="number" pos:start="83:41" pos:end="83:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="89:59"><if pos:start="87:5" pos:end="89:59">if <condition pos:start="87:8" pos:end="87:46">(<expr pos:start="87:9" pos:end="87:45"><call pos:start="87:9" pos:end="87:40"><name pos:start="87:9" pos:end="87:20">load_segment</name><argument_list pos:start="87:21" pos:end="87:40">(<argument pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><operator pos:start="87:22" pos:end="87:22">&amp;</operator><name pos:start="87:23" pos:end="87:24">e1</name></expr></argument>, <argument pos:start="87:27" pos:end="87:29"><expr pos:start="87:27" pos:end="87:29"><operator pos:start="87:27" pos:end="87:27">&amp;</operator><name pos:start="87:28" pos:end="87:29">e2</name></expr></argument>, <argument pos:start="87:32" pos:end="87:39"><expr pos:start="87:32" pos:end="87:39"><name pos:start="87:32" pos:end="87:39">selector</name></expr></argument>)</argument_list></call> <operator pos:start="87:42" pos:end="87:43">!=</operator> <literal type="number" pos:start="87:45" pos:end="87:45">0</literal></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:59"><block_content pos:start="89:9" pos:end="89:59">

        <expr_stmt pos:start="89:9" pos:end="89:59"><expr pos:start="89:9" pos:end="89:58"><call pos:start="89:9" pos:end="89:58"><name pos:start="89:9" pos:end="89:27">raise_exception_err</name><argument_list pos:start="89:28" pos:end="89:58">(<argument pos:start="89:29" pos:end="89:38"><expr pos:start="89:29" pos:end="89:38"><name pos:start="89:29" pos:end="89:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="89:41" pos:end="89:57"><expr pos:start="89:41" pos:end="89:57"><name pos:start="89:41" pos:end="89:48">selector</name> <operator pos:start="89:50" pos:end="89:50">&amp;</operator> <literal type="number" pos:start="89:52" pos:end="89:57">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="93:59"><if pos:start="91:5" pos:end="93:59">if <condition pos:start="91:8" pos:end="91:54">(<expr pos:start="91:9" pos:end="91:53"><operator pos:start="91:9" pos:end="91:9">!</operator><operator pos:start="91:10" pos:end="91:10">(</operator><name pos:start="91:11" pos:end="91:12">e2</name> <operator pos:start="91:14" pos:end="91:14">&amp;</operator> <name pos:start="91:16" pos:end="91:26">DESC_S_MASK</name><operator pos:start="91:27" pos:end="91:27">)</operator> <operator pos:start="91:29" pos:end="91:30">||</operator> <operator pos:start="91:32" pos:end="91:32">!</operator><operator pos:start="91:33" pos:end="91:33">(</operator><name pos:start="91:34" pos:end="91:35">e2</name> <operator pos:start="91:37" pos:end="91:37">&amp;</operator> <operator pos:start="91:39" pos:end="91:39">(</operator><name pos:start="91:40" pos:end="91:51">DESC_CS_MASK</name><operator pos:start="91:52" pos:end="91:52">)</operator><operator pos:start="91:53" pos:end="91:53">)</operator></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:59"><block_content pos:start="93:9" pos:end="93:59">

        <expr_stmt pos:start="93:9" pos:end="93:59"><expr pos:start="93:9" pos:end="93:58"><call pos:start="93:9" pos:end="93:58"><name pos:start="93:9" pos:end="93:27">raise_exception_err</name><argument_list pos:start="93:28" pos:end="93:58">(<argument pos:start="93:29" pos:end="93:38"><expr pos:start="93:29" pos:end="93:38"><name pos:start="93:29" pos:end="93:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="93:41" pos:end="93:57"><expr pos:start="93:41" pos:end="93:57"><name pos:start="93:41" pos:end="93:48">selector</name> <operator pos:start="93:50" pos:end="93:50">&amp;</operator> <literal type="number" pos:start="93:52" pos:end="93:57">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:37"><expr pos:start="95:5" pos:end="95:36"><name pos:start="95:5" pos:end="95:7">dpl</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <operator pos:start="95:11" pos:end="95:11">(</operator><name pos:start="95:12" pos:end="95:13">e2</name> <operator pos:start="95:15" pos:end="95:16">&gt;&gt;</operator> <name pos:start="95:18" pos:end="95:31">DESC_DPL_SHIFT</name><operator pos:start="95:32" pos:end="95:32">)</operator> <operator pos:start="95:34" pos:end="95:34">&amp;</operator> <literal type="number" pos:start="95:36" pos:end="95:36">3</literal></expr>;</expr_stmt>

    <if_stmt pos:start="97:5" pos:end="99:59"><if pos:start="97:5" pos:end="99:59">if <condition pos:start="97:8" pos:end="97:23">(<expr pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:11">dpl</name> <operator pos:start="97:13" pos:end="97:13">&gt;</operator> <name pos:start="97:15" pos:end="97:22"><name pos:start="97:15" pos:end="97:17">env</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:22">cpl</name></name></expr>)</condition><block type="pseudo" pos:start="99:9" pos:end="99:59"><block_content pos:start="99:9" pos:end="99:59">

        <expr_stmt pos:start="99:9" pos:end="99:59"><expr pos:start="99:9" pos:end="99:58"><call pos:start="99:9" pos:end="99:58"><name pos:start="99:9" pos:end="99:27">raise_exception_err</name><argument_list pos:start="99:28" pos:end="99:58">(<argument pos:start="99:29" pos:end="99:38"><expr pos:start="99:29" pos:end="99:38"><name pos:start="99:29" pos:end="99:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="99:41" pos:end="99:57"><expr pos:start="99:41" pos:end="99:57"><name pos:start="99:41" pos:end="99:48">selector</name> <operator pos:start="99:50" pos:end="99:50">&amp;</operator> <literal type="number" pos:start="99:52" pos:end="99:57">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="101:5" pos:end="103:61"><if pos:start="101:5" pos:end="103:61">if <condition pos:start="101:8" pos:end="101:28">(<expr pos:start="101:9" pos:end="101:27"><operator pos:start="101:9" pos:end="101:9">!</operator><operator pos:start="101:10" pos:end="101:10">(</operator><name pos:start="101:11" pos:end="101:12">e2</name> <operator pos:start="101:14" pos:end="101:14">&amp;</operator> <name pos:start="101:16" pos:end="101:26">DESC_P_MASK</name><operator pos:start="101:27" pos:end="101:27">)</operator></expr>)</condition><block type="pseudo" pos:start="103:9" pos:end="103:61"><block_content pos:start="103:9" pos:end="103:61">

        <expr_stmt pos:start="103:9" pos:end="103:61"><expr pos:start="103:9" pos:end="103:60"><call pos:start="103:9" pos:end="103:60"><name pos:start="103:9" pos:end="103:27">raise_exception_err</name><argument_list pos:start="103:28" pos:end="103:60">(<argument pos:start="103:29" pos:end="103:40"><expr pos:start="103:29" pos:end="103:40"><name pos:start="103:29" pos:end="103:40">EXCP0B_NOSEG</name></expr></argument>, <argument pos:start="103:43" pos:end="103:59"><expr pos:start="103:43" pos:end="103:59"><name pos:start="103:43" pos:end="103:50">selector</name> <operator pos:start="103:52" pos:end="103:52">&amp;</operator> <literal type="number" pos:start="103:54" pos:end="103:59">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="105:5" pos:end="155:5"><if pos:start="105:5" pos:end="143:5">if <condition pos:start="105:8" pos:end="105:46">(<expr pos:start="105:9" pos:end="105:45"><operator pos:start="105:9" pos:end="105:9">!</operator><operator pos:start="105:10" pos:end="105:10">(</operator><name pos:start="105:11" pos:end="105:12">e2</name> <operator pos:start="105:14" pos:end="105:14">&amp;</operator> <name pos:start="105:16" pos:end="105:26">DESC_C_MASK</name><operator pos:start="105:27" pos:end="105:27">)</operator> <operator pos:start="105:29" pos:end="105:30">&amp;&amp;</operator> <name pos:start="105:32" pos:end="105:34">dpl</name> <operator pos:start="105:36" pos:end="105:36">&lt;</operator> <name pos:start="105:38" pos:end="105:45"><name pos:start="105:38" pos:end="105:40">env</name><operator pos:start="105:41" pos:end="105:42">-&gt;</operator><name pos:start="105:43" pos:end="105:45">cpl</name></name></expr>)</condition> <block pos:start="105:48" pos:end="143:5">{<block_content pos:start="109:9" pos:end="141:22">

        <comment type="block" pos:start="107:9" pos:end="107:33">/* to inner priviledge */</comment>

        <expr_stmt pos:start="109:9" pos:end="109:44"><expr pos:start="109:9" pos:end="109:43"><call pos:start="109:9" pos:end="109:43"><name pos:start="109:9" pos:end="109:27">get_ss_esp_from_tss</name><argument_list pos:start="109:28" pos:end="109:43">(<argument pos:start="109:29" pos:end="109:31"><expr pos:start="109:29" pos:end="109:31"><operator pos:start="109:29" pos:end="109:29">&amp;</operator><name pos:start="109:30" pos:end="109:31">ss</name></expr></argument>, <argument pos:start="109:34" pos:end="109:37"><expr pos:start="109:34" pos:end="109:37"><operator pos:start="109:34" pos:end="109:34">&amp;</operator><name pos:start="109:35" pos:end="109:37">esp</name></expr></argument>, <argument pos:start="109:40" pos:end="109:42"><expr pos:start="109:40" pos:end="109:42"><name pos:start="109:40" pos:end="109:42">dpl</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="113:57"><if pos:start="111:9" pos:end="113:57">if <condition pos:start="111:12" pos:end="111:31">(<expr pos:start="111:13" pos:end="111:30"><operator pos:start="111:13" pos:end="111:13">(</operator><name pos:start="111:14" pos:end="111:15">ss</name> <operator pos:start="111:17" pos:end="111:17">&amp;</operator> <literal type="number" pos:start="111:19" pos:end="111:24">0xfffc</literal><operator pos:start="111:25" pos:end="111:25">)</operator> <operator pos:start="111:27" pos:end="111:28">==</operator> <literal type="number" pos:start="111:30" pos:end="111:30">0</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:57"><block_content pos:start="113:13" pos:end="113:57">

            <expr_stmt pos:start="113:13" pos:end="113:57"><expr pos:start="113:13" pos:end="113:56"><call pos:start="113:13" pos:end="113:56"><name pos:start="113:13" pos:end="113:31">raise_exception_err</name><argument_list pos:start="113:32" pos:end="113:56">(<argument pos:start="113:33" pos:end="113:42"><expr pos:start="113:33" pos:end="113:42"><name pos:start="113:33" pos:end="113:42">EXCP0A_TSS</name></expr></argument>, <argument pos:start="113:45" pos:end="113:55"><expr pos:start="113:45" pos:end="113:55"><name pos:start="113:45" pos:end="113:46">ss</name> <operator pos:start="113:48" pos:end="113:48">&amp;</operator> <literal type="number" pos:start="113:50" pos:end="113:55">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="115:9" pos:end="117:57"><if pos:start="115:9" pos:end="117:57">if <condition pos:start="115:12" pos:end="115:28">(<expr pos:start="115:13" pos:end="115:27"><operator pos:start="115:13" pos:end="115:13">(</operator><name pos:start="115:14" pos:end="115:15">ss</name> <operator pos:start="115:17" pos:end="115:17">&amp;</operator> <literal type="number" pos:start="115:19" pos:end="115:19">3</literal><operator pos:start="115:20" pos:end="115:20">)</operator> <operator pos:start="115:22" pos:end="115:23">!=</operator> <name pos:start="115:25" pos:end="115:27">dpl</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:57"><block_content pos:start="117:13" pos:end="117:57">

            <expr_stmt pos:start="117:13" pos:end="117:57"><expr pos:start="117:13" pos:end="117:56"><call pos:start="117:13" pos:end="117:56"><name pos:start="117:13" pos:end="117:31">raise_exception_err</name><argument_list pos:start="117:32" pos:end="117:56">(<argument pos:start="117:33" pos:end="117:42"><expr pos:start="117:33" pos:end="117:42"><name pos:start="117:33" pos:end="117:42">EXCP0A_TSS</name></expr></argument>, <argument pos:start="117:45" pos:end="117:55"><expr pos:start="117:45" pos:end="117:55"><name pos:start="117:45" pos:end="117:46">ss</name> <operator pos:start="117:48" pos:end="117:48">&amp;</operator> <literal type="number" pos:start="117:50" pos:end="117:55">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="119:9" pos:end="121:57"><if pos:start="119:9" pos:end="121:57">if <condition pos:start="119:12" pos:end="119:50">(<expr pos:start="119:13" pos:end="119:49"><call pos:start="119:13" pos:end="119:44"><name pos:start="119:13" pos:end="119:24">load_segment</name><argument_list pos:start="119:25" pos:end="119:44">(<argument pos:start="119:26" pos:end="119:31"><expr pos:start="119:26" pos:end="119:31"><operator pos:start="119:26" pos:end="119:26">&amp;</operator><name pos:start="119:27" pos:end="119:31">ss_e1</name></expr></argument>, <argument pos:start="119:34" pos:end="119:39"><expr pos:start="119:34" pos:end="119:39"><operator pos:start="119:34" pos:end="119:34">&amp;</operator><name pos:start="119:35" pos:end="119:39">ss_e2</name></expr></argument>, <argument pos:start="119:42" pos:end="119:43"><expr pos:start="119:42" pos:end="119:43"><name pos:start="119:42" pos:end="119:43">ss</name></expr></argument>)</argument_list></call> <operator pos:start="119:46" pos:end="119:47">!=</operator> <literal type="number" pos:start="119:49" pos:end="119:49">0</literal></expr>)</condition><block type="pseudo" pos:start="121:13" pos:end="121:57"><block_content pos:start="121:13" pos:end="121:57">

            <expr_stmt pos:start="121:13" pos:end="121:57"><expr pos:start="121:13" pos:end="121:56"><call pos:start="121:13" pos:end="121:56"><name pos:start="121:13" pos:end="121:31">raise_exception_err</name><argument_list pos:start="121:32" pos:end="121:56">(<argument pos:start="121:33" pos:end="121:42"><expr pos:start="121:33" pos:end="121:42"><name pos:start="121:33" pos:end="121:42">EXCP0A_TSS</name></expr></argument>, <argument pos:start="121:45" pos:end="121:55"><expr pos:start="121:45" pos:end="121:55"><name pos:start="121:45" pos:end="121:46">ss</name> <operator pos:start="121:48" pos:end="121:48">&amp;</operator> <literal type="number" pos:start="121:50" pos:end="121:55">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:47"><expr pos:start="123:9" pos:end="123:46"><name pos:start="123:9" pos:end="123:14">ss_dpl</name> <operator pos:start="123:16" pos:end="123:16">=</operator> <operator pos:start="123:18" pos:end="123:18">(</operator><name pos:start="123:19" pos:end="123:23">ss_e2</name> <operator pos:start="123:25" pos:end="123:26">&gt;&gt;</operator> <name pos:start="123:28" pos:end="123:41">DESC_DPL_SHIFT</name><operator pos:start="123:42" pos:end="123:42">)</operator> <operator pos:start="123:44" pos:end="123:44">&amp;</operator> <literal type="number" pos:start="123:46" pos:end="123:46">3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:57"><if pos:start="125:9" pos:end="127:57">if <condition pos:start="125:12" pos:end="125:26">(<expr pos:start="125:13" pos:end="125:25"><name pos:start="125:13" pos:end="125:18">ss_dpl</name> <operator pos:start="125:20" pos:end="125:21">!=</operator> <name pos:start="125:23" pos:end="125:25">dpl</name></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:57"><block_content pos:start="127:13" pos:end="127:57">

            <expr_stmt pos:start="127:13" pos:end="127:57"><expr pos:start="127:13" pos:end="127:56"><call pos:start="127:13" pos:end="127:56"><name pos:start="127:13" pos:end="127:31">raise_exception_err</name><argument_list pos:start="127:32" pos:end="127:56">(<argument pos:start="127:33" pos:end="127:42"><expr pos:start="127:33" pos:end="127:42"><name pos:start="127:33" pos:end="127:42">EXCP0A_TSS</name></expr></argument>, <argument pos:start="127:45" pos:end="127:55"><expr pos:start="127:45" pos:end="127:55"><name pos:start="127:45" pos:end="127:46">ss</name> <operator pos:start="127:48" pos:end="127:48">&amp;</operator> <literal type="number" pos:start="127:50" pos:end="127:55">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="129:9" pos:end="135:57"><if pos:start="129:9" pos:end="135:57">if <condition pos:start="129:12" pos:end="133:35">(<expr pos:start="129:13" pos:end="133:34"><operator pos:start="129:13" pos:end="129:13">!</operator><operator pos:start="129:14" pos:end="129:14">(</operator><name pos:start="129:15" pos:end="129:19">ss_e2</name> <operator pos:start="129:21" pos:end="129:21">&amp;</operator> <name pos:start="129:23" pos:end="129:33">DESC_S_MASK</name><operator pos:start="129:34" pos:end="129:34">)</operator> <operator pos:start="129:36" pos:end="129:37">||</operator>

            <operator pos:start="131:13" pos:end="131:13">(</operator><name pos:start="131:14" pos:end="131:18">ss_e2</name> <operator pos:start="131:20" pos:end="131:20">&amp;</operator> <name pos:start="131:22" pos:end="131:33">DESC_CS_MASK</name><operator pos:start="131:34" pos:end="131:34">)</operator> <operator pos:start="131:36" pos:end="131:37">||</operator>

            <operator pos:start="133:13" pos:end="133:13">!</operator><operator pos:start="133:14" pos:end="133:14">(</operator><name pos:start="133:15" pos:end="133:19">ss_e2</name> <operator pos:start="133:21" pos:end="133:21">&amp;</operator> <name pos:start="133:23" pos:end="133:33">DESC_W_MASK</name><operator pos:start="133:34" pos:end="133:34">)</operator></expr>)</condition><block type="pseudo" pos:start="135:13" pos:end="135:57"><block_content pos:start="135:13" pos:end="135:57">

            <expr_stmt pos:start="135:13" pos:end="135:57"><expr pos:start="135:13" pos:end="135:56"><call pos:start="135:13" pos:end="135:56"><name pos:start="135:13" pos:end="135:31">raise_exception_err</name><argument_list pos:start="135:32" pos:end="135:56">(<argument pos:start="135:33" pos:end="135:42"><expr pos:start="135:33" pos:end="135:42"><name pos:start="135:33" pos:end="135:42">EXCP0A_TSS</name></expr></argument>, <argument pos:start="135:45" pos:end="135:55"><expr pos:start="135:45" pos:end="135:55"><name pos:start="135:45" pos:end="135:46">ss</name> <operator pos:start="135:48" pos:end="135:48">&amp;</operator> <literal type="number" pos:start="135:50" pos:end="135:55">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="137:9" pos:end="139:57"><if pos:start="137:9" pos:end="139:57">if <condition pos:start="137:12" pos:end="137:35">(<expr pos:start="137:13" pos:end="137:34"><operator pos:start="137:13" pos:end="137:13">!</operator><operator pos:start="137:14" pos:end="137:14">(</operator><name pos:start="137:15" pos:end="137:19">ss_e2</name> <operator pos:start="137:21" pos:end="137:21">&amp;</operator> <name pos:start="137:23" pos:end="137:33">DESC_P_MASK</name><operator pos:start="137:34" pos:end="137:34">)</operator></expr>)</condition><block type="pseudo" pos:start="139:13" pos:end="139:57"><block_content pos:start="139:13" pos:end="139:57">

            <expr_stmt pos:start="139:13" pos:end="139:57"><expr pos:start="139:13" pos:end="139:56"><call pos:start="139:13" pos:end="139:56"><name pos:start="139:13" pos:end="139:31">raise_exception_err</name><argument_list pos:start="139:32" pos:end="139:56">(<argument pos:start="139:33" pos:end="139:42"><expr pos:start="139:33" pos:end="139:42"><name pos:start="139:33" pos:end="139:42">EXCP0A_TSS</name></expr></argument>, <argument pos:start="139:45" pos:end="139:55"><expr pos:start="139:45" pos:end="139:55"><name pos:start="139:45" pos:end="139:46">ss</name> <operator pos:start="139:48" pos:end="139:48">&amp;</operator> <literal type="number" pos:start="139:50" pos:end="139:55">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:22"><expr pos:start="141:9" pos:end="141:21"><name pos:start="141:9" pos:end="141:17">new_stack</name> <operator pos:start="141:19" pos:end="141:19">=</operator> <literal type="number" pos:start="141:21" pos:end="141:21">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="143:7" pos:end="149:5">else if <condition pos:start="143:15" pos:end="143:53">(<expr pos:start="143:16" pos:end="143:52"><operator pos:start="143:16" pos:end="143:16">(</operator><name pos:start="143:17" pos:end="143:18">e2</name> <operator pos:start="143:20" pos:end="143:20">&amp;</operator> <name pos:start="143:22" pos:end="143:32">DESC_C_MASK</name><operator pos:start="143:33" pos:end="143:33">)</operator> <operator pos:start="143:35" pos:end="143:36">||</operator> <name pos:start="143:38" pos:end="143:40">dpl</name> <operator pos:start="143:42" pos:end="143:43">==</operator> <name pos:start="143:45" pos:end="143:52"><name pos:start="143:45" pos:end="143:47">env</name><operator pos:start="143:48" pos:end="143:49">-&gt;</operator><name pos:start="143:50" pos:end="143:52">cpl</name></name></expr>)</condition> <block pos:start="143:55" pos:end="149:5">{<block_content pos:start="147:9" pos:end="147:22">

        <comment type="block" pos:start="145:9" pos:end="145:32">/* to same priviledge */</comment>

        <expr_stmt pos:start="147:9" pos:end="147:22"><expr pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:17">new_stack</name> <operator pos:start="147:19" pos:end="147:19">=</operator> <literal type="number" pos:start="147:21" pos:end="147:21">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="149:7" pos:end="155:5">else <block pos:start="149:12" pos:end="155:5">{<block_content pos:start="151:9" pos:end="153:22">

        <expr_stmt pos:start="151:9" pos:end="151:59"><expr pos:start="151:9" pos:end="151:58"><call pos:start="151:9" pos:end="151:58"><name pos:start="151:9" pos:end="151:27">raise_exception_err</name><argument_list pos:start="151:28" pos:end="151:58">(<argument pos:start="151:29" pos:end="151:38"><expr pos:start="151:29" pos:end="151:38"><name pos:start="151:29" pos:end="151:38">EXCP0D_GPF</name></expr></argument>, <argument pos:start="151:41" pos:end="151:57"><expr pos:start="151:41" pos:end="151:57"><name pos:start="151:41" pos:end="151:48">selector</name> <operator pos:start="151:50" pos:end="151:50">&amp;</operator> <literal type="number" pos:start="151:52" pos:end="151:57">0xfffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:22"><expr pos:start="153:9" pos:end="153:21"><name pos:start="153:9" pos:end="153:17">new_stack</name> <operator pos:start="153:19" pos:end="153:19">=</operator> <literal type="number" pos:start="153:21" pos:end="153:21">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="153:24" pos:end="153:42">/* avoid warning */</comment>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="159:5" pos:end="159:22"><expr pos:start="159:5" pos:end="159:21"><name pos:start="159:5" pos:end="159:9">shift</name> <operator pos:start="159:11" pos:end="159:11">=</operator> <name pos:start="159:13" pos:end="159:16">type</name> <operator pos:start="159:18" pos:end="159:19">&gt;&gt;</operator> <literal type="number" pos:start="159:21" pos:end="159:21">3</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="161:5" pos:end="161:23"><expr pos:start="161:5" pos:end="161:22"><name pos:start="161:5" pos:end="161:18">has_error_code</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="163:5" pos:end="187:5"><if pos:start="163:5" pos:end="187:5">if <condition pos:start="163:8" pos:end="163:16">(<expr pos:start="163:9" pos:end="163:15"><operator pos:start="163:9" pos:end="163:9">!</operator><name pos:start="163:10" pos:end="163:15">is_int</name></expr>)</condition> <block pos:start="163:18" pos:end="187:5">{<block_content pos:start="165:9" pos:end="185:9">

        <switch pos:start="165:9" pos:end="185:9">switch<condition pos:start="165:15" pos:end="165:21">(<expr pos:start="165:16" pos:end="165:20"><name pos:start="165:16" pos:end="165:20">intno</name></expr>)</condition> <block pos:start="165:23" pos:end="185:9">{<block_content pos:start="167:9" pos:end="183:18">

        <case pos:start="167:9" pos:end="167:15">case <expr pos:start="167:14" pos:end="167:14"><literal type="number" pos:start="167:14" pos:end="167:14">8</literal></expr>:</case>

        <case pos:start="169:9" pos:end="169:16">case <expr pos:start="169:14" pos:end="169:15"><literal type="number" pos:start="169:14" pos:end="169:15">10</literal></expr>:</case>

        <case pos:start="171:9" pos:end="171:16">case <expr pos:start="171:14" pos:end="171:15"><literal type="number" pos:start="171:14" pos:end="171:15">11</literal></expr>:</case>

        <case pos:start="173:9" pos:end="173:16">case <expr pos:start="173:14" pos:end="173:15"><literal type="number" pos:start="173:14" pos:end="173:15">12</literal></expr>:</case>

        <case pos:start="175:9" pos:end="175:16">case <expr pos:start="175:14" pos:end="175:15"><literal type="number" pos:start="175:14" pos:end="175:15">13</literal></expr>:</case>

        <case pos:start="177:9" pos:end="177:16">case <expr pos:start="177:14" pos:end="177:15"><literal type="number" pos:start="177:14" pos:end="177:15">14</literal></expr>:</case>

        <case pos:start="179:9" pos:end="179:16">case <expr pos:start="179:14" pos:end="179:15"><literal type="number" pos:start="179:14" pos:end="179:15">17</literal></expr>:</case>

            <expr_stmt pos:start="181:13" pos:end="181:31"><expr pos:start="181:13" pos:end="181:30"><name pos:start="181:13" pos:end="181:26">has_error_code</name> <operator pos:start="181:28" pos:end="181:28">=</operator> <literal type="number" pos:start="181:30" pos:end="181:30">1</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="189:5" pos:end="189:61"><expr pos:start="189:5" pos:end="189:60"><name pos:start="189:5" pos:end="189:13">push_size</name> <operator pos:start="189:15" pos:end="189:15">=</operator> <literal type="number" pos:start="189:17" pos:end="189:19">6</literal> <operator pos:start="189:19" pos:end="189:19">+</operator> <operator pos:start="189:21" pos:end="189:21">(</operator><name pos:start="189:22" pos:end="189:30">new_stack</name> <operator pos:start="189:32" pos:end="189:33">&lt;&lt;</operator> <literal type="number" pos:start="189:35" pos:end="189:35">2</literal><operator pos:start="189:36" pos:end="189:36">)</operator> <operator pos:start="189:38" pos:end="189:38">+</operator> <operator pos:start="189:40" pos:end="189:40">(</operator><name pos:start="189:41" pos:end="189:54">has_error_code</name> <operator pos:start="189:56" pos:end="189:57">&lt;&lt;</operator> <literal type="number" pos:start="189:59" pos:end="189:59">1</literal><operator pos:start="189:60" pos:end="189:60">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="191:5" pos:end="193:23"><if pos:start="191:5" pos:end="193:23">if <condition pos:start="191:8" pos:end="191:30">(<expr pos:start="191:9" pos:end="191:29"><name pos:start="191:9" pos:end="191:19"><name pos:start="191:9" pos:end="191:11">env</name><operator pos:start="191:12" pos:end="191:13">-&gt;</operator><name pos:start="191:14" pos:end="191:19">eflags</name></name> <operator pos:start="191:21" pos:end="191:21">&amp;</operator> <name pos:start="191:23" pos:end="191:29">VM_MASK</name></expr>)</condition><block type="pseudo" pos:start="193:9" pos:end="193:23"><block_content pos:start="193:9" pos:end="193:23">

        <expr_stmt pos:start="193:9" pos:end="193:23"><expr pos:start="193:9" pos:end="193:22"><name pos:start="193:9" pos:end="193:17">push_size</name> <operator pos:start="193:19" pos:end="193:20">+=</operator> <literal type="number" pos:start="193:22" pos:end="193:22">8</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:24"><expr pos:start="195:5" pos:end="195:23"><name pos:start="195:5" pos:end="195:13">push_size</name> <operator pos:start="195:15" pos:end="195:17">&lt;&lt;=</operator> <name pos:start="195:19" pos:end="195:23">shift</name></expr>;</expr_stmt>



    <comment type="block" pos:start="199:5" pos:end="199:50">/* XXX: check that enough room is available */</comment>

    <if_stmt pos:start="201:5" pos:end="217:5"><if pos:start="201:5" pos:end="209:5">if <condition pos:start="201:8" pos:end="201:18">(<expr pos:start="201:9" pos:end="201:17"><name pos:start="201:9" pos:end="201:17">new_stack</name></expr>)</condition> <block pos:start="201:20" pos:end="209:5">{<block_content pos:start="203:9" pos:end="207:37">

        <expr_stmt pos:start="203:9" pos:end="203:35"><expr pos:start="203:9" pos:end="203:34"><name pos:start="203:9" pos:end="203:15">old_esp</name> <operator pos:start="203:17" pos:end="203:17">=</operator> <name pos:start="203:19" pos:end="203:34"><name pos:start="203:19" pos:end="203:21">env</name><operator pos:start="203:22" pos:end="203:23">-&gt;</operator><name pos:start="203:24" pos:end="203:27">regs</name><index pos:start="203:28" pos:end="203:34">[<expr pos:start="203:29" pos:end="203:33"><name pos:start="203:29" pos:end="203:33">R_ESP</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:42"><expr pos:start="205:9" pos:end="205:41"><name pos:start="205:9" pos:end="205:14">old_ss</name> <operator pos:start="205:16" pos:end="205:16">=</operator> <name pos:start="205:18" pos:end="205:32"><name pos:start="205:18" pos:end="205:20">env</name><operator pos:start="205:21" pos:end="205:22">-&gt;</operator><name pos:start="205:23" pos:end="205:26">segs</name><index pos:start="205:27" pos:end="205:32">[<expr pos:start="205:28" pos:end="205:31"><name pos:start="205:28" pos:end="205:31">R_SS</name></expr>]</index></name><operator pos:start="205:33" pos:end="205:33">.</operator><name pos:start="205:34" pos:end="205:41">selector</name></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:37"><expr pos:start="207:9" pos:end="207:36"><call pos:start="207:9" pos:end="207:36"><name pos:start="207:9" pos:end="207:16">load_seg</name><argument_list pos:start="207:17" pos:end="207:36">(<argument pos:start="207:18" pos:end="207:21"><expr pos:start="207:18" pos:end="207:21"><name pos:start="207:18" pos:end="207:21">R_SS</name></expr></argument>, <argument pos:start="207:24" pos:end="207:25"><expr pos:start="207:24" pos:end="207:25"><name pos:start="207:24" pos:end="207:25">ss</name></expr></argument>, <argument pos:start="207:28" pos:end="207:35"><expr pos:start="207:28" pos:end="207:35"><name pos:start="207:28" pos:end="207:35"><name pos:start="207:28" pos:end="207:30">env</name><operator pos:start="207:31" pos:end="207:32">-&gt;</operator><name pos:start="207:33" pos:end="207:35">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="209:7" pos:end="217:5">else <block pos:start="209:12" pos:end="217:5">{<block_content pos:start="211:9" pos:end="215:31">

        <expr_stmt pos:start="211:9" pos:end="211:20"><expr pos:start="211:9" pos:end="211:19"><name pos:start="211:9" pos:end="211:15">old_esp</name> <operator pos:start="211:17" pos:end="211:17">=</operator> <literal type="number" pos:start="211:19" pos:end="211:19">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="213:9" pos:end="213:19"><expr pos:start="213:9" pos:end="213:18"><name pos:start="213:9" pos:end="213:14">old_ss</name> <operator pos:start="213:16" pos:end="213:16">=</operator> <literal type="number" pos:start="213:18" pos:end="213:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:31"><expr pos:start="215:9" pos:end="215:30"><name pos:start="215:9" pos:end="215:11">esp</name> <operator pos:start="215:13" pos:end="215:13">=</operator> <name pos:start="215:15" pos:end="215:30"><name pos:start="215:15" pos:end="215:17">env</name><operator pos:start="215:18" pos:end="215:19">-&gt;</operator><name pos:start="215:20" pos:end="215:23">regs</name><index pos:start="215:24" pos:end="215:30">[<expr pos:start="215:25" pos:end="215:29"><name pos:start="215:25" pos:end="215:29">R_ESP</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="219:5" pos:end="225:27"><if pos:start="219:5" pos:end="221:27">if <condition pos:start="219:8" pos:end="219:15">(<expr pos:start="219:9" pos:end="219:14"><name pos:start="219:9" pos:end="219:14">is_int</name></expr>)</condition><block type="pseudo" pos:start="221:9" pos:end="221:27"><block_content pos:start="221:9" pos:end="221:27">

        <expr_stmt pos:start="221:9" pos:end="221:27"><expr pos:start="221:9" pos:end="221:26"><name pos:start="221:9" pos:end="221:15">old_eip</name> <operator pos:start="221:17" pos:end="221:17">=</operator> <name pos:start="221:19" pos:end="221:26">next_eip</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="223:5" pos:end="225:27">else<block type="pseudo" pos:start="225:9" pos:end="225:27"><block_content pos:start="225:9" pos:end="225:27">

        <expr_stmt pos:start="225:9" pos:end="225:27"><expr pos:start="225:9" pos:end="225:26"><name pos:start="225:9" pos:end="225:15">old_eip</name> <operator pos:start="225:17" pos:end="225:17">=</operator> <name pos:start="225:19" pos:end="225:26"><name pos:start="225:19" pos:end="225:21">env</name><operator pos:start="225:22" pos:end="225:23">-&gt;</operator><name pos:start="225:24" pos:end="225:26">eip</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:38"><expr pos:start="227:5" pos:end="227:37"><name pos:start="227:5" pos:end="227:10">old_cs</name> <operator pos:start="227:12" pos:end="227:12">=</operator> <name pos:start="227:14" pos:end="227:28"><name pos:start="227:14" pos:end="227:16">env</name><operator pos:start="227:17" pos:end="227:18">-&gt;</operator><name pos:start="227:19" pos:end="227:22">segs</name><index pos:start="227:23" pos:end="227:28">[<expr pos:start="227:24" pos:end="227:27"><name pos:start="227:24" pos:end="227:27">R_CS</name></expr>]</index></name><operator pos:start="227:29" pos:end="227:29">.</operator><name pos:start="227:30" pos:end="227:37">selector</name></expr>;</expr_stmt>

    <expr_stmt pos:start="229:5" pos:end="229:39"><expr pos:start="229:5" pos:end="229:38"><call pos:start="229:5" pos:end="229:38"><name pos:start="229:5" pos:end="229:12">load_seg</name><argument_list pos:start="229:13" pos:end="229:38">(<argument pos:start="229:14" pos:end="229:17"><expr pos:start="229:14" pos:end="229:17"><name pos:start="229:14" pos:end="229:17">R_CS</name></expr></argument>, <argument pos:start="229:20" pos:end="229:27"><expr pos:start="229:20" pos:end="229:27"><name pos:start="229:20" pos:end="229:27">selector</name></expr></argument>, <argument pos:start="229:30" pos:end="229:37"><expr pos:start="229:30" pos:end="229:37"><name pos:start="229:30" pos:end="229:37"><name pos:start="229:30" pos:end="229:32">env</name><operator pos:start="229:33" pos:end="229:34">-&gt;</operator><name pos:start="229:35" pos:end="229:37">eip</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="231:5" pos:end="231:22"><expr pos:start="231:5" pos:end="231:21"><name pos:start="231:5" pos:end="231:12"><name pos:start="231:5" pos:end="231:7">env</name><operator pos:start="231:8" pos:end="231:9">-&gt;</operator><name pos:start="231:10" pos:end="231:12">eip</name></name> <operator pos:start="231:14" pos:end="231:14">=</operator> <name pos:start="231:16" pos:end="231:21">offset</name></expr>;</expr_stmt>

    <expr_stmt pos:start="233:5" pos:end="233:39"><expr pos:start="233:5" pos:end="233:38"><name pos:start="233:5" pos:end="233:20"><name pos:start="233:5" pos:end="233:7">env</name><operator pos:start="233:8" pos:end="233:9">-&gt;</operator><name pos:start="233:10" pos:end="233:13">regs</name><index pos:start="233:14" pos:end="233:20">[<expr pos:start="233:15" pos:end="233:19"><name pos:start="233:15" pos:end="233:19">R_ESP</name></expr>]</index></name> <operator pos:start="233:22" pos:end="233:22">=</operator> <name pos:start="233:24" pos:end="233:26">esp</name> <operator pos:start="233:28" pos:end="233:28">-</operator> <name pos:start="233:30" pos:end="233:38">push_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="235:5" pos:end="235:37"><expr pos:start="235:5" pos:end="235:36"><name pos:start="235:5" pos:end="235:7">ssp</name> <operator pos:start="235:9" pos:end="235:9">=</operator> <name pos:start="235:11" pos:end="235:25"><name pos:start="235:11" pos:end="235:13">env</name><operator pos:start="235:14" pos:end="235:15">-&gt;</operator><name pos:start="235:16" pos:end="235:19">segs</name><index pos:start="235:20" pos:end="235:25">[<expr pos:start="235:21" pos:end="235:24"><name pos:start="235:21" pos:end="235:24">R_SS</name></expr>]</index></name><operator pos:start="235:26" pos:end="235:26">.</operator><name pos:start="235:27" pos:end="235:30">base</name> <operator pos:start="235:32" pos:end="235:32">+</operator> <name pos:start="235:34" pos:end="235:36">esp</name></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="329:5"><if pos:start="237:5" pos:end="295:5">if <condition pos:start="237:8" pos:end="237:19">(<expr pos:start="237:9" pos:end="237:18"><name pos:start="237:9" pos:end="237:13">shift</name> <operator pos:start="237:15" pos:end="237:16">==</operator> <literal type="number" pos:start="237:18" pos:end="237:18">1</literal></expr>)</condition> <block pos:start="237:21" pos:end="295:5">{<block_content pos:start="239:9" pos:end="293:9">

        <decl_stmt pos:start="239:9" pos:end="239:23"><decl pos:start="239:9" pos:end="239:22"><type pos:start="239:9" pos:end="239:11"><name pos:start="239:9" pos:end="239:11">int</name></type> <name pos:start="239:13" pos:end="239:22">old_eflags</name></decl>;</decl_stmt>

        <if_stmt pos:start="241:9" pos:end="259:9"><if pos:start="241:9" pos:end="259:9">if <condition pos:start="241:12" pos:end="241:34">(<expr pos:start="241:13" pos:end="241:33"><name pos:start="241:13" pos:end="241:23"><name pos:start="241:13" pos:end="241:15">env</name><operator pos:start="241:16" pos:end="241:17">-&gt;</operator><name pos:start="241:18" pos:end="241:23">eflags</name></name> <operator pos:start="241:25" pos:end="241:25">&amp;</operator> <name pos:start="241:27" pos:end="241:33">VM_MASK</name></expr>)</condition> <block pos:start="241:36" pos:end="259:9">{<block_content pos:start="243:13" pos:end="257:47">

            <expr_stmt pos:start="243:13" pos:end="243:21"><expr pos:start="243:13" pos:end="243:20"><name pos:start="243:13" pos:end="243:15">ssp</name> <operator pos:start="243:17" pos:end="243:18">-=</operator> <literal type="number" pos:start="243:20" pos:end="243:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:47"><expr pos:start="245:13" pos:end="245:46"><call pos:start="245:13" pos:end="245:46"><name pos:start="245:13" pos:end="245:15">stl</name><argument_list pos:start="245:16" pos:end="245:46">(<argument pos:start="245:17" pos:end="245:19"><expr pos:start="245:17" pos:end="245:19"><name pos:start="245:17" pos:end="245:19">ssp</name></expr></argument>, <argument pos:start="245:22" pos:end="245:45"><expr pos:start="245:22" pos:end="245:45"><name pos:start="245:22" pos:end="245:36"><name pos:start="245:22" pos:end="245:24">env</name><operator pos:start="245:25" pos:end="245:26">-&gt;</operator><name pos:start="245:27" pos:end="245:30">segs</name><index pos:start="245:31" pos:end="245:36">[<expr pos:start="245:32" pos:end="245:35"><name pos:start="245:32" pos:end="245:35">R_GS</name></expr>]</index></name><operator pos:start="245:37" pos:end="245:37">.</operator><name pos:start="245:38" pos:end="245:45">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:21"><expr pos:start="247:13" pos:end="247:20"><name pos:start="247:13" pos:end="247:15">ssp</name> <operator pos:start="247:17" pos:end="247:18">-=</operator> <literal type="number" pos:start="247:20" pos:end="247:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:47"><expr pos:start="249:13" pos:end="249:46"><call pos:start="249:13" pos:end="249:46"><name pos:start="249:13" pos:end="249:15">stl</name><argument_list pos:start="249:16" pos:end="249:46">(<argument pos:start="249:17" pos:end="249:19"><expr pos:start="249:17" pos:end="249:19"><name pos:start="249:17" pos:end="249:19">ssp</name></expr></argument>, <argument pos:start="249:22" pos:end="249:45"><expr pos:start="249:22" pos:end="249:45"><name pos:start="249:22" pos:end="249:36"><name pos:start="249:22" pos:end="249:24">env</name><operator pos:start="249:25" pos:end="249:26">-&gt;</operator><name pos:start="249:27" pos:end="249:30">segs</name><index pos:start="249:31" pos:end="249:36">[<expr pos:start="249:32" pos:end="249:35"><name pos:start="249:32" pos:end="249:35">R_FS</name></expr>]</index></name><operator pos:start="249:37" pos:end="249:37">.</operator><name pos:start="249:38" pos:end="249:45">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="251:13" pos:end="251:21"><expr pos:start="251:13" pos:end="251:20"><name pos:start="251:13" pos:end="251:15">ssp</name> <operator pos:start="251:17" pos:end="251:18">-=</operator> <literal type="number" pos:start="251:20" pos:end="251:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="253:13" pos:end="253:47"><expr pos:start="253:13" pos:end="253:46"><call pos:start="253:13" pos:end="253:46"><name pos:start="253:13" pos:end="253:15">stl</name><argument_list pos:start="253:16" pos:end="253:46">(<argument pos:start="253:17" pos:end="253:19"><expr pos:start="253:17" pos:end="253:19"><name pos:start="253:17" pos:end="253:19">ssp</name></expr></argument>, <argument pos:start="253:22" pos:end="253:45"><expr pos:start="253:22" pos:end="253:45"><name pos:start="253:22" pos:end="253:36"><name pos:start="253:22" pos:end="253:24">env</name><operator pos:start="253:25" pos:end="253:26">-&gt;</operator><name pos:start="253:27" pos:end="253:30">segs</name><index pos:start="253:31" pos:end="253:36">[<expr pos:start="253:32" pos:end="253:35"><name pos:start="253:32" pos:end="253:35">R_DS</name></expr>]</index></name><operator pos:start="253:37" pos:end="253:37">.</operator><name pos:start="253:38" pos:end="253:45">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="255:13" pos:end="255:21"><expr pos:start="255:13" pos:end="255:20"><name pos:start="255:13" pos:end="255:15">ssp</name> <operator pos:start="255:17" pos:end="255:18">-=</operator> <literal type="number" pos:start="255:20" pos:end="255:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="257:13" pos:end="257:47"><expr pos:start="257:13" pos:end="257:46"><call pos:start="257:13" pos:end="257:46"><name pos:start="257:13" pos:end="257:15">stl</name><argument_list pos:start="257:16" pos:end="257:46">(<argument pos:start="257:17" pos:end="257:19"><expr pos:start="257:17" pos:end="257:19"><name pos:start="257:17" pos:end="257:19">ssp</name></expr></argument>, <argument pos:start="257:22" pos:end="257:45"><expr pos:start="257:22" pos:end="257:45"><name pos:start="257:22" pos:end="257:36"><name pos:start="257:22" pos:end="257:24">env</name><operator pos:start="257:25" pos:end="257:26">-&gt;</operator><name pos:start="257:27" pos:end="257:30">segs</name><index pos:start="257:31" pos:end="257:36">[<expr pos:start="257:32" pos:end="257:35"><name pos:start="257:32" pos:end="257:35">R_ES</name></expr>]</index></name><operator pos:start="257:37" pos:end="257:37">.</operator><name pos:start="257:38" pos:end="257:45">selector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="261:9" pos:end="271:9"><if pos:start="261:9" pos:end="271:9">if <condition pos:start="261:12" pos:end="261:22">(<expr pos:start="261:13" pos:end="261:21"><name pos:start="261:13" pos:end="261:21">new_stack</name></expr>)</condition> <block pos:start="261:24" pos:end="271:9">{<block_content pos:start="263:13" pos:end="269:30">

            <expr_stmt pos:start="263:13" pos:end="263:21"><expr pos:start="263:13" pos:end="263:20"><name pos:start="263:13" pos:end="263:15">ssp</name> <operator pos:start="263:17" pos:end="263:18">-=</operator> <literal type="number" pos:start="263:20" pos:end="263:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="265:13" pos:end="265:29"><expr pos:start="265:13" pos:end="265:28"><call pos:start="265:13" pos:end="265:28"><name pos:start="265:13" pos:end="265:15">stl</name><argument_list pos:start="265:16" pos:end="265:28">(<argument pos:start="265:17" pos:end="265:19"><expr pos:start="265:17" pos:end="265:19"><name pos:start="265:17" pos:end="265:19">ssp</name></expr></argument>, <argument pos:start="265:22" pos:end="265:27"><expr pos:start="265:22" pos:end="265:27"><name pos:start="265:22" pos:end="265:27">old_ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="267:13" pos:end="267:21"><expr pos:start="267:13" pos:end="267:20"><name pos:start="267:13" pos:end="267:15">ssp</name> <operator pos:start="267:17" pos:end="267:18">-=</operator> <literal type="number" pos:start="267:20" pos:end="267:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="269:13" pos:end="269:30"><expr pos:start="269:13" pos:end="269:29"><call pos:start="269:13" pos:end="269:29"><name pos:start="269:13" pos:end="269:15">stl</name><argument_list pos:start="269:16" pos:end="269:29">(<argument pos:start="269:17" pos:end="269:19"><expr pos:start="269:17" pos:end="269:19"><name pos:start="269:17" pos:end="269:19">ssp</name></expr></argument>, <argument pos:start="269:22" pos:end="269:28"><expr pos:start="269:22" pos:end="269:28"><name pos:start="269:22" pos:end="269:28">old_esp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:17"><expr pos:start="273:9" pos:end="273:16"><name pos:start="273:9" pos:end="273:11">ssp</name> <operator pos:start="273:13" pos:end="273:14">-=</operator> <literal type="number" pos:start="273:16" pos:end="273:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:38"><expr pos:start="275:9" pos:end="275:37"><name pos:start="275:9" pos:end="275:18">old_eflags</name> <operator pos:start="275:20" pos:end="275:20">=</operator> <call pos:start="275:22" pos:end="275:37"><name pos:start="275:22" pos:end="275:35">compute_eflags</name><argument_list pos:start="275:36" pos:end="275:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:29"><expr pos:start="277:9" pos:end="277:28"><call pos:start="277:9" pos:end="277:28"><name pos:start="277:9" pos:end="277:11">stl</name><argument_list pos:start="277:12" pos:end="277:28">(<argument pos:start="277:13" pos:end="277:15"><expr pos:start="277:13" pos:end="277:15"><name pos:start="277:13" pos:end="277:15">ssp</name></expr></argument>, <argument pos:start="277:18" pos:end="277:27"><expr pos:start="277:18" pos:end="277:27"><name pos:start="277:18" pos:end="277:27">old_eflags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:17"><expr pos:start="279:9" pos:end="279:16"><name pos:start="279:9" pos:end="279:11">ssp</name> <operator pos:start="279:13" pos:end="279:14">-=</operator> <literal type="number" pos:start="279:16" pos:end="279:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="281:9" pos:end="281:25"><expr pos:start="281:9" pos:end="281:24"><call pos:start="281:9" pos:end="281:24"><name pos:start="281:9" pos:end="281:11">stl</name><argument_list pos:start="281:12" pos:end="281:24">(<argument pos:start="281:13" pos:end="281:15"><expr pos:start="281:13" pos:end="281:15"><name pos:start="281:13" pos:end="281:15">ssp</name></expr></argument>, <argument pos:start="281:18" pos:end="281:23"><expr pos:start="281:18" pos:end="281:23"><name pos:start="281:18" pos:end="281:23">old_cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="283:9" pos:end="283:17"><expr pos:start="283:9" pos:end="283:16"><name pos:start="283:9" pos:end="283:11">ssp</name> <operator pos:start="283:13" pos:end="283:14">-=</operator> <literal type="number" pos:start="283:16" pos:end="283:16">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:26"><expr pos:start="285:9" pos:end="285:25"><call pos:start="285:9" pos:end="285:25"><name pos:start="285:9" pos:end="285:11">stl</name><argument_list pos:start="285:12" pos:end="285:25">(<argument pos:start="285:13" pos:end="285:15"><expr pos:start="285:13" pos:end="285:15"><name pos:start="285:13" pos:end="285:15">ssp</name></expr></argument>, <argument pos:start="285:18" pos:end="285:24"><expr pos:start="285:18" pos:end="285:24"><name pos:start="285:18" pos:end="285:24">old_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="287:9" pos:end="293:9"><if pos:start="287:9" pos:end="293:9">if <condition pos:start="287:12" pos:end="287:27">(<expr pos:start="287:13" pos:end="287:26"><name pos:start="287:13" pos:end="287:26">has_error_code</name></expr>)</condition> <block pos:start="287:29" pos:end="293:9">{<block_content pos:start="289:13" pos:end="291:33">

            <expr_stmt pos:start="289:13" pos:end="289:21"><expr pos:start="289:13" pos:end="289:20"><name pos:start="289:13" pos:end="289:15">ssp</name> <operator pos:start="289:17" pos:end="289:18">-=</operator> <literal type="number" pos:start="289:20" pos:end="289:20">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="291:13" pos:end="291:33"><expr pos:start="291:13" pos:end="291:32"><call pos:start="291:13" pos:end="291:32"><name pos:start="291:13" pos:end="291:15">stl</name><argument_list pos:start="291:16" pos:end="291:32">(<argument pos:start="291:17" pos:end="291:19"><expr pos:start="291:17" pos:end="291:19"><name pos:start="291:17" pos:end="291:19">ssp</name></expr></argument>, <argument pos:start="291:22" pos:end="291:31"><expr pos:start="291:22" pos:end="291:31"><name pos:start="291:22" pos:end="291:31">error_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="295:7" pos:end="329:5">else <block pos:start="295:12" pos:end="329:5">{<block_content pos:start="297:9" pos:end="327:9">

        <if_stmt pos:start="297:9" pos:end="307:9"><if pos:start="297:9" pos:end="307:9">if <condition pos:start="297:12" pos:end="297:22">(<expr pos:start="297:13" pos:end="297:21"><name pos:start="297:13" pos:end="297:21">new_stack</name></expr>)</condition> <block pos:start="297:24" pos:end="307:9">{<block_content pos:start="299:13" pos:end="305:30">

            <expr_stmt pos:start="299:13" pos:end="299:21"><expr pos:start="299:13" pos:end="299:20"><name pos:start="299:13" pos:end="299:15">ssp</name> <operator pos:start="299:17" pos:end="299:18">-=</operator> <literal type="number" pos:start="299:20" pos:end="299:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:29"><expr pos:start="301:13" pos:end="301:28"><call pos:start="301:13" pos:end="301:28"><name pos:start="301:13" pos:end="301:15">stw</name><argument_list pos:start="301:16" pos:end="301:28">(<argument pos:start="301:17" pos:end="301:19"><expr pos:start="301:17" pos:end="301:19"><name pos:start="301:17" pos:end="301:19">ssp</name></expr></argument>, <argument pos:start="301:22" pos:end="301:27"><expr pos:start="301:22" pos:end="301:27"><name pos:start="301:22" pos:end="301:27">old_ss</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:21"><expr pos:start="303:13" pos:end="303:20"><name pos:start="303:13" pos:end="303:15">ssp</name> <operator pos:start="303:17" pos:end="303:18">-=</operator> <literal type="number" pos:start="303:20" pos:end="303:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:30"><expr pos:start="305:13" pos:end="305:29"><call pos:start="305:13" pos:end="305:29"><name pos:start="305:13" pos:end="305:15">stw</name><argument_list pos:start="305:16" pos:end="305:29">(<argument pos:start="305:17" pos:end="305:19"><expr pos:start="305:17" pos:end="305:19"><name pos:start="305:17" pos:end="305:19">ssp</name></expr></argument>, <argument pos:start="305:22" pos:end="305:28"><expr pos:start="305:22" pos:end="305:28"><name pos:start="305:22" pos:end="305:28">old_esp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:17"><expr pos:start="309:9" pos:end="309:16"><name pos:start="309:9" pos:end="309:11">ssp</name> <operator pos:start="309:13" pos:end="309:14">-=</operator> <literal type="number" pos:start="309:16" pos:end="309:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:35"><expr pos:start="311:9" pos:end="311:34"><call pos:start="311:9" pos:end="311:34"><name pos:start="311:9" pos:end="311:11">stw</name><argument_list pos:start="311:12" pos:end="311:34">(<argument pos:start="311:13" pos:end="311:15"><expr pos:start="311:13" pos:end="311:15"><name pos:start="311:13" pos:end="311:15">ssp</name></expr></argument>, <argument pos:start="311:18" pos:end="311:33"><expr pos:start="311:18" pos:end="311:33"><call pos:start="311:18" pos:end="311:33"><name pos:start="311:18" pos:end="311:31">compute_eflags</name><argument_list pos:start="311:32" pos:end="311:33">()</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:17"><expr pos:start="313:9" pos:end="313:16"><name pos:start="313:9" pos:end="313:11">ssp</name> <operator pos:start="313:13" pos:end="313:14">-=</operator> <literal type="number" pos:start="313:16" pos:end="313:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:25"><expr pos:start="315:9" pos:end="315:24"><call pos:start="315:9" pos:end="315:24"><name pos:start="315:9" pos:end="315:11">stw</name><argument_list pos:start="315:12" pos:end="315:24">(<argument pos:start="315:13" pos:end="315:15"><expr pos:start="315:13" pos:end="315:15"><name pos:start="315:13" pos:end="315:15">ssp</name></expr></argument>, <argument pos:start="315:18" pos:end="315:23"><expr pos:start="315:18" pos:end="315:23"><name pos:start="315:18" pos:end="315:23">old_cs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:17"><expr pos:start="317:9" pos:end="317:16"><name pos:start="317:9" pos:end="317:11">ssp</name> <operator pos:start="317:13" pos:end="317:14">-=</operator> <literal type="number" pos:start="317:16" pos:end="317:16">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:26"><expr pos:start="319:9" pos:end="319:25"><call pos:start="319:9" pos:end="319:25"><name pos:start="319:9" pos:end="319:11">stw</name><argument_list pos:start="319:12" pos:end="319:25">(<argument pos:start="319:13" pos:end="319:15"><expr pos:start="319:13" pos:end="319:15"><name pos:start="319:13" pos:end="319:15">ssp</name></expr></argument>, <argument pos:start="319:18" pos:end="319:24"><expr pos:start="319:18" pos:end="319:24"><name pos:start="319:18" pos:end="319:24">old_eip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="321:9" pos:end="327:9"><if pos:start="321:9" pos:end="327:9">if <condition pos:start="321:12" pos:end="321:27">(<expr pos:start="321:13" pos:end="321:26"><name pos:start="321:13" pos:end="321:26">has_error_code</name></expr>)</condition> <block pos:start="321:29" pos:end="327:9">{<block_content pos:start="323:13" pos:end="325:33">

            <expr_stmt pos:start="323:13" pos:end="323:21"><expr pos:start="323:13" pos:end="323:20"><name pos:start="323:13" pos:end="323:15">ssp</name> <operator pos:start="323:17" pos:end="323:18">-=</operator> <literal type="number" pos:start="323:20" pos:end="323:20">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><call pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:15">stw</name><argument_list pos:start="325:16" pos:end="325:32">(<argument pos:start="325:17" pos:end="325:19"><expr pos:start="325:17" pos:end="325:19"><name pos:start="325:17" pos:end="325:19">ssp</name></expr></argument>, <argument pos:start="325:22" pos:end="325:31"><expr pos:start="325:22" pos:end="325:31"><name pos:start="325:22" pos:end="325:31">error_code</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    

    <comment type="block" pos:start="333:5" pos:end="333:38">/* interrupt gate clear IF mask */</comment>

    <if_stmt pos:start="335:5" pos:end="339:5"><if pos:start="335:5" pos:end="339:5">if <condition pos:start="335:8" pos:end="335:24">(<expr pos:start="335:9" pos:end="335:23"><operator pos:start="335:9" pos:end="335:9">(</operator><name pos:start="335:10" pos:end="335:13">type</name> <operator pos:start="335:15" pos:end="335:15">&amp;</operator> <literal type="number" pos:start="335:17" pos:end="335:17">1</literal><operator pos:start="335:18" pos:end="335:18">)</operator> <operator pos:start="335:20" pos:end="335:21">==</operator> <literal type="number" pos:start="335:23" pos:end="335:23">0</literal></expr>)</condition> <block pos:start="335:26" pos:end="339:5">{<block_content pos:start="337:9" pos:end="337:32">

        <expr_stmt pos:start="337:9" pos:end="337:32"><expr pos:start="337:9" pos:end="337:31"><name pos:start="337:9" pos:end="337:19"><name pos:start="337:9" pos:end="337:11">env</name><operator pos:start="337:12" pos:end="337:13">-&gt;</operator><name pos:start="337:14" pos:end="337:19">eflags</name></name> <operator pos:start="337:21" pos:end="337:22">&amp;=</operator> <operator pos:start="337:24" pos:end="337:24">~</operator><name pos:start="337:25" pos:end="337:31">IF_MASK</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="341:5" pos:end="341:60"><expr pos:start="341:5" pos:end="341:59"><name pos:start="341:5" pos:end="341:15"><name pos:start="341:5" pos:end="341:7">env</name><operator pos:start="341:8" pos:end="341:9">-&gt;</operator><name pos:start="341:10" pos:end="341:15">eflags</name></name> <operator pos:start="341:17" pos:end="341:18">&amp;=</operator> <operator pos:start="341:20" pos:end="341:20">~</operator><operator pos:start="341:21" pos:end="341:21">(</operator><name pos:start="341:22" pos:end="341:28">TF_MASK</name> <operator pos:start="341:30" pos:end="341:30">|</operator> <name pos:start="341:32" pos:end="341:38">VM_MASK</name> <operator pos:start="341:40" pos:end="341:40">|</operator> <name pos:start="341:42" pos:end="341:48">RF_MASK</name> <operator pos:start="341:50" pos:end="341:50">|</operator> <name pos:start="341:52" pos:end="341:58">NT_MASK</name><operator pos:start="341:59" pos:end="341:59">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
