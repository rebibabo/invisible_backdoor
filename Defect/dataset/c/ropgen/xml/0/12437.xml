<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12437.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">long</name></type> <name pos:start="1:6" pos:end="1:17">do_sigreturn</name><parameter_list pos:start="1:18" pos:end="1:37">(<parameter pos:start="1:19" pos:end="1:36"><decl pos:start="1:19" pos:end="1:36"><type pos:start="1:19" pos:end="1:33"><name pos:start="1:19" pos:end="1:31">CPUS390XState</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">env</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="61:1">{<block_content pos:start="5:5" pos:end="59:13">

    <decl_stmt pos:start="5:5" pos:end="5:20"><decl pos:start="5:5" pos:end="5:19"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">sigframe</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:19">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">abi_ulong</name></type> <name pos:start="7:15" pos:end="7:24">frame_addr</name> <init pos:start="7:26" pos:end="7:40">= <expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:30">env</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:36">regs</name><index pos:start="7:37" pos:end="7:40">[<expr pos:start="7:38" pos:end="7:39"><literal type="number" pos:start="7:38" pos:end="7:39">15</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="11:45"><expr pos:start="9:5" pos:end="11:44"><call pos:start="9:5" pos:end="11:44"><name pos:start="9:5" pos:end="9:12">qemu_log</name><argument_list pos:start="9:13" pos:end="11:44">(<argument pos:start="9:14" pos:end="9:38"><expr pos:start="9:14" pos:end="9:38"><literal type="string" pos:start="9:14" pos:end="9:38">"%s: frame_addr 0x%llx\n"</literal></expr></argument>, <argument pos:start="9:41" pos:end="9:52"><expr pos:start="9:41" pos:end="9:52"><name pos:start="9:41" pos:end="9:52">__FUNCTION__</name></expr></argument>,

             <argument pos:start="11:14" pos:end="11:43"><expr pos:start="11:14" pos:end="11:43"><operator pos:start="11:14" pos:end="11:14">(</operator><name pos:start="11:15" pos:end="11:22">unsigned</name> <name pos:start="11:24" pos:end="11:27">long</name> <name pos:start="11:29" pos:end="11:32">long</name><operator pos:start="11:33" pos:end="11:33">)</operator><name pos:start="11:34" pos:end="11:43">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:19">target_sigset_t</name></type> <name pos:start="13:21" pos:end="13:30">target_set</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">sigset_t</name></type> <name pos:start="15:14" pos:end="15:16">set</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:61">(<expr pos:start="19:9" pos:end="19:60"><operator pos:start="19:9" pos:end="19:9">!</operator><call pos:start="19:10" pos:end="19:60"><name pos:start="19:10" pos:end="19:25">lock_user_struct</name><argument_list pos:start="19:26" pos:end="19:60">(<argument pos:start="19:27" pos:end="19:37"><expr pos:start="19:27" pos:end="19:37"><name pos:start="19:27" pos:end="19:37">VERIFY_READ</name></expr></argument>, <argument pos:start="19:40" pos:end="19:44"><expr pos:start="19:40" pos:end="19:44"><name pos:start="19:40" pos:end="19:44">frame</name></expr></argument>, <argument pos:start="19:47" pos:end="19:56"><expr pos:start="19:47" pos:end="19:56"><name pos:start="19:47" pos:end="19:56">frame_addr</name></expr></argument>, <argument pos:start="19:59" pos:end="19:59"><expr pos:start="19:59" pos:end="19:59"><literal type="number" pos:start="19:59" pos:end="19:59">1</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:63" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:22">

        <goto pos:start="21:9" pos:end="21:22">goto <name pos:start="21:14" pos:end="21:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:61">(<expr pos:start="25:9" pos:end="25:60"><call pos:start="25:9" pos:end="25:60"><name pos:start="25:9" pos:end="25:18">__get_user</name><argument_list pos:start="25:19" pos:end="25:60">(<argument pos:start="25:20" pos:end="25:36"><expr pos:start="25:20" pos:end="25:36"><name pos:start="25:20" pos:end="25:36"><name pos:start="25:20" pos:end="25:29">target_set</name><operator pos:start="25:30" pos:end="25:30">.</operator><name pos:start="25:31" pos:end="25:33">sig</name><index pos:start="25:34" pos:end="25:36">[<expr pos:start="25:35" pos:end="25:35"><literal type="number" pos:start="25:35" pos:end="25:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="25:39" pos:end="25:59"><expr pos:start="25:39" pos:end="25:59"><operator pos:start="25:39" pos:end="25:39">&amp;</operator><name pos:start="25:40" pos:end="25:59"><name pos:start="25:40" pos:end="25:44">frame</name><operator pos:start="25:45" pos:end="25:46">-&gt;</operator><name pos:start="25:47" pos:end="25:48">sc</name><operator pos:start="25:49" pos:end="25:49">.</operator><name pos:start="25:50" pos:end="25:56">oldmask</name><index pos:start="25:57" pos:end="25:59">[<expr pos:start="25:58" pos:end="25:58"><literal type="number" pos:start="25:58" pos:end="25:58">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="25:63" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:22">

        <goto pos:start="27:9" pos:end="27:22">goto <name pos:start="27:14" pos:end="27:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:54"><expr pos:start="33:5" pos:end="33:53"><call pos:start="33:5" pos:end="33:53"><name pos:start="33:5" pos:end="33:34">target_to_host_sigset_internal</name><argument_list pos:start="33:35" pos:end="33:53">(<argument pos:start="33:36" pos:end="33:39"><expr pos:start="33:36" pos:end="33:39"><operator pos:start="33:36" pos:end="33:36">&amp;</operator><name pos:start="33:37" pos:end="33:39">set</name></expr></argument>, <argument pos:start="33:42" pos:end="33:52"><expr pos:start="33:42" pos:end="33:52"><operator pos:start="33:42" pos:end="33:42">&amp;</operator><name pos:start="33:43" pos:end="33:52">target_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:41"><expr pos:start="35:5" pos:end="35:40"><call pos:start="35:5" pos:end="35:40"><name pos:start="35:5" pos:end="35:15">sigprocmask</name><argument_list pos:start="35:16" pos:end="35:40">(<argument pos:start="35:17" pos:end="35:27"><expr pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:27">SIG_SETMASK</name></expr></argument>, <argument pos:start="35:30" pos:end="35:33"><expr pos:start="35:30" pos:end="35:33"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:33">set</name></expr></argument>, <argument pos:start="35:36" pos:end="35:39"><expr pos:start="35:36" pos:end="35:39"><name pos:start="35:36" pos:end="35:39">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="35:43" pos:end="35:60">/* ~_BLOCKABLE? */</comment>



    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:44">(<expr pos:start="39:9" pos:end="39:43"><call pos:start="39:9" pos:end="39:43"><name pos:start="39:9" pos:end="39:23">restore_sigregs</name><argument_list pos:start="39:24" pos:end="39:43">(<argument pos:start="39:25" pos:end="39:27"><expr pos:start="39:25" pos:end="39:27"><name pos:start="39:25" pos:end="39:27">env</name></expr></argument>, <argument pos:start="39:30" pos:end="39:42"><expr pos:start="39:30" pos:end="39:42"><operator pos:start="39:30" pos:end="39:30">&amp;</operator><name pos:start="39:31" pos:end="39:42"><name pos:start="39:31" pos:end="39:35">frame</name><operator pos:start="39:36" pos:end="39:37">-&gt;</operator><name pos:start="39:38" pos:end="39:42">sregs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="39:46" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:22">

        <goto pos:start="41:9" pos:end="41:22">goto <name pos:start="41:14" pos:end="41:21">badframe</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:45"><expr pos:start="47:5" pos:end="47:44"><call pos:start="47:5" pos:end="47:44"><name pos:start="47:5" pos:end="47:22">unlock_user_struct</name><argument_list pos:start="47:23" pos:end="47:44">(<argument pos:start="47:24" pos:end="47:28"><expr pos:start="47:24" pos:end="47:28"><name pos:start="47:24" pos:end="47:28">frame</name></expr></argument>, <argument pos:start="47:31" pos:end="47:40"><expr pos:start="47:31" pos:end="47:40"><name pos:start="47:31" pos:end="47:40">frame_addr</name></expr></argument>, <argument pos:start="47:43" pos:end="47:43"><expr pos:start="47:43" pos:end="47:43"><literal type="number" pos:start="47:43" pos:end="47:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="49:5" pos:end="49:24">return <expr pos:start="49:12" pos:end="49:23"><name pos:start="49:12" pos:end="49:23"><name pos:start="49:12" pos:end="49:14">env</name><operator pos:start="49:15" pos:end="49:16">-&gt;</operator><name pos:start="49:17" pos:end="49:20">regs</name><index pos:start="49:21" pos:end="49:23">[<expr pos:start="49:22" pos:end="49:22"><literal type="number" pos:start="49:22" pos:end="49:22">2</literal></expr>]</index></name></expr>;</return>



<label pos:start="53:1" pos:end="53:9"><name pos:start="53:1" pos:end="53:8">badframe</name>:</label>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><call pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:22">unlock_user_struct</name><argument_list pos:start="55:23" pos:end="55:44">(<argument pos:start="55:24" pos:end="55:28"><expr pos:start="55:24" pos:end="55:28"><name pos:start="55:24" pos:end="55:28">frame</name></expr></argument>, <argument pos:start="55:31" pos:end="55:40"><expr pos:start="55:31" pos:end="55:40"><name pos:start="55:31" pos:end="55:40">frame_addr</name></expr></argument>, <argument pos:start="55:43" pos:end="55:43"><expr pos:start="55:43" pos:end="55:43"><literal type="number" pos:start="55:43" pos:end="55:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:30"><expr pos:start="57:5" pos:end="57:29"><call pos:start="57:5" pos:end="57:29"><name pos:start="57:5" pos:end="57:13">force_sig</name><argument_list pos:start="57:14" pos:end="57:29">(<argument pos:start="57:15" pos:end="57:28"><expr pos:start="57:15" pos:end="57:28"><name pos:start="57:15" pos:end="57:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="59:5" pos:end="59:13">return <expr pos:start="59:12" pos:end="59:12"><literal type="number" pos:start="59:12" pos:end="59:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
