<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17672.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">icp_control_write</name><parameter_list pos:start="1:30" pos:end="3:56">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:69">offset</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="25:1">{<block_content pos:start="7:5" pos:end="23:5">

    <switch pos:start="7:5" pos:end="23:5">switch <condition pos:start="7:12" pos:end="7:24">(<expr pos:start="7:13" pos:end="7:23"><name pos:start="7:13" pos:end="7:18">offset</name> <operator pos:start="7:20" pos:end="7:21">&gt;&gt;</operator> <literal type="number" pos:start="7:23" pos:end="7:23">2</literal></expr>)</condition> <block pos:start="7:26" pos:end="23:5">{<block_content pos:start="9:5" pos:end="21:68">

    <case pos:start="9:5" pos:end="9:11">case <expr pos:start="9:10" pos:end="9:10"><literal type="number" pos:start="9:10" pos:end="9:10">1</literal></expr>:</case> <comment type="block" pos:start="9:13" pos:end="9:30">/* CP_FLASHPROG */</comment>

    <case pos:start="11:5" pos:end="11:11">case <expr pos:start="11:10" pos:end="11:10"><literal type="number" pos:start="11:10" pos:end="11:10">2</literal></expr>:</case> <comment type="block" pos:start="11:13" pos:end="11:27">/* CP_INTREG */</comment>

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">3</literal></expr>:</case> <comment type="block" pos:start="13:13" pos:end="13:27">/* CP_DECODE */</comment>

        <comment type="block" pos:start="15:9" pos:end="15:51">/* Nothing interesting implemented yet.  */</comment>

        <break pos:start="17:9" pos:end="17:14">break;</break>

    <default pos:start="19:5" pos:end="19:12">default:</default>

        <expr_stmt pos:start="21:9" pos:end="21:68"><expr pos:start="21:9" pos:end="21:67"><call pos:start="21:9" pos:end="21:67"><name pos:start="21:9" pos:end="21:16">hw_error</name><argument_list pos:start="21:17" pos:end="21:67">(<argument pos:start="21:18" pos:end="21:53"><expr pos:start="21:18" pos:end="21:53"><literal type="string" pos:start="21:18" pos:end="21:53">"icp_control_write: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="21:56" pos:end="21:66"><expr pos:start="21:56" pos:end="21:66"><operator pos:start="21:56" pos:end="21:56">(</operator><name pos:start="21:57" pos:end="21:59">int</name><operator pos:start="21:60" pos:end="21:60">)</operator><name pos:start="21:61" pos:end="21:66">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
