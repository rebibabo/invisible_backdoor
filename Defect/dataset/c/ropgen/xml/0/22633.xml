<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22633.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:25">ffv1_init_slice_state</name><parameter_list pos:start="1:26" pos:end="1:58">(<parameter pos:start="1:27" pos:end="1:40"><decl pos:start="1:27" pos:end="1:40"><type pos:start="1:27" pos:end="1:40"><name pos:start="1:27" pos:end="1:37">FFV1Context</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">f</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:53">FFV1Context</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">fs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:6">fs</name><operator pos:start="9:7" pos:end="9:8">-&gt;</operator><name pos:start="9:9" pos:end="9:19">plane_count</name></name>  <operator pos:start="9:22" pos:end="9:22">=</operator> <name pos:start="9:24" pos:end="9:37"><name pos:start="9:24" pos:end="9:24">f</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:37">plane_count</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:39"><expr pos:start="11:5" pos:end="11:38"><name pos:start="11:5" pos:end="11:20"><name pos:start="11:5" pos:end="11:6">fs</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:20">transparency</name></name> <operator pos:start="11:22" pos:end="11:22">=</operator> <name pos:start="11:24" pos:end="11:38"><name pos:start="11:24" pos:end="11:24">f</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:38">transparency</name></name></expr>;</expr_stmt>

    <for pos:start="13:5" pos:end="43:5">for <control pos:start="13:9" pos:end="13:40">(<init pos:start="13:10" pos:end="13:15"><expr pos:start="13:10" pos:end="13:14"><name pos:start="13:10" pos:end="13:10">j</name> <operator pos:start="13:12" pos:end="13:12">=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">0</literal></expr>;</init> <condition pos:start="13:17" pos:end="13:35"><expr pos:start="13:17" pos:end="13:34"><name pos:start="13:17" pos:end="13:17">j</name> <operator pos:start="13:19" pos:end="13:19">&lt;</operator> <name pos:start="13:21" pos:end="13:34"><name pos:start="13:21" pos:end="13:21">f</name><operator pos:start="13:22" pos:end="13:23">-&gt;</operator><name pos:start="13:24" pos:end="13:34">plane_count</name></name></expr>;</condition> <incr pos:start="13:37" pos:end="13:39"><expr pos:start="13:37" pos:end="13:39"><name pos:start="13:37" pos:end="13:37">j</name><operator pos:start="13:38" pos:end="13:39">++</operator></expr></incr>)</control> <block pos:start="13:42" pos:end="43:5">{<block_content pos:start="15:9" pos:end="41:9">

        <decl_stmt pos:start="15:9" pos:end="15:46"><decl pos:start="15:9" pos:end="15:45"><type pos:start="15:9" pos:end="15:27"><name pos:start="15:9" pos:end="15:20">PlaneContext</name> <modifier pos:start="15:22" pos:end="15:22">*</modifier><specifier pos:start="15:23" pos:end="15:27">const</specifier></type> <name pos:start="15:29" pos:end="15:29">p</name> <init pos:start="15:31" pos:end="15:45">= <expr pos:start="15:33" pos:end="15:45"><operator pos:start="15:33" pos:end="15:33">&amp;</operator><name pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:35">fs</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:42">plane</name><index pos:start="15:43" pos:end="15:45">[<expr pos:start="15:44" pos:end="15:44"><name pos:start="15:44" pos:end="15:44">j</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="19:9" pos:end="41:9"><if pos:start="19:9" pos:end="31:9">if <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:14">fs</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:18">ac</name></name></expr>)</condition> <block pos:start="19:21" pos:end="31:9">{<block_content pos:start="21:13" pos:end="29:39">

            <if_stmt pos:start="21:13" pos:end="25:54"><if pos:start="21:13" pos:end="25:54">if <condition pos:start="21:16" pos:end="21:26">(<expr pos:start="21:17" pos:end="21:25"><operator pos:start="21:17" pos:end="21:17">!</operator><name pos:start="21:18" pos:end="21:25"><name pos:start="21:18" pos:end="21:18">p</name><operator pos:start="21:19" pos:end="21:20">-&gt;</operator><name pos:start="21:21" pos:end="21:25">state</name></name></expr>)</condition><block type="pseudo" pos:start="23:17" pos:end="25:54"><block_content pos:start="23:17" pos:end="25:54">

                <expr_stmt pos:start="23:17" pos:end="25:54"><expr pos:start="23:17" pos:end="25:53"><name pos:start="23:17" pos:end="23:24"><name pos:start="23:17" pos:end="23:17">p</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">state</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="25:53"><name pos:start="23:28" pos:end="23:36">av_malloc</name><argument_list pos:start="23:37" pos:end="25:53">(<argument pos:start="23:38" pos:end="25:52"><expr pos:start="23:38" pos:end="25:52"><name pos:start="23:38" pos:end="23:49">CONTEXT_SIZE</name> <operator pos:start="23:51" pos:end="23:51">*</operator> <name pos:start="23:53" pos:end="23:68"><name pos:start="23:53" pos:end="23:53">p</name><operator pos:start="23:54" pos:end="23:55">-&gt;</operator><name pos:start="23:56" pos:end="23:68">context_count</name></name> <operator pos:start="23:70" pos:end="23:70">*</operator>

                                     <sizeof pos:start="25:38" pos:end="25:52">sizeof<argument_list pos:start="25:44" pos:end="25:52">(<argument pos:start="25:45" pos:end="25:51"><expr pos:start="25:45" pos:end="25:51"><name pos:start="25:45" pos:end="25:51">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="27:13" pos:end="29:39"><if pos:start="27:13" pos:end="29:39">if <condition pos:start="27:16" pos:end="27:26">(<expr pos:start="27:17" pos:end="27:25"><operator pos:start="27:17" pos:end="27:17">!</operator><name pos:start="27:18" pos:end="27:25"><name pos:start="27:18" pos:end="27:18">p</name><operator pos:start="27:19" pos:end="27:20">-&gt;</operator><name pos:start="27:21" pos:end="27:25">state</name></name></expr>)</condition><block type="pseudo" pos:start="29:17" pos:end="29:39"><block_content pos:start="29:17" pos:end="29:39">

                <return pos:start="29:17" pos:end="29:39">return <expr pos:start="29:24" pos:end="29:38"><call pos:start="29:24" pos:end="29:38"><name pos:start="29:24" pos:end="29:30">AVERROR</name><argument_list pos:start="29:31" pos:end="29:38">(<argument pos:start="29:32" pos:end="29:37"><expr pos:start="29:32" pos:end="29:37"><name pos:start="29:32" pos:end="29:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="41:9">else <block pos:start="31:16" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:39">

            <if_stmt pos:start="33:13" pos:end="35:78"><if pos:start="33:13" pos:end="35:78">if <condition pos:start="33:16" pos:end="33:30">(<expr pos:start="33:17" pos:end="33:29"><operator pos:start="33:17" pos:end="33:17">!</operator><name pos:start="33:18" pos:end="33:29"><name pos:start="33:18" pos:end="33:18">p</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:29">vlc_state</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:78"><block_content pos:start="35:17" pos:end="35:78">

                <expr_stmt pos:start="35:17" pos:end="35:78"><expr pos:start="35:17" pos:end="35:77"><name pos:start="35:17" pos:end="35:28"><name pos:start="35:17" pos:end="35:17">p</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:28">vlc_state</name></name> <operator pos:start="35:30" pos:end="35:30">=</operator> <call pos:start="35:32" pos:end="35:77"><name pos:start="35:32" pos:end="35:40">av_malloc</name><argument_list pos:start="35:41" pos:end="35:77">(<argument pos:start="35:42" pos:end="35:76"><expr pos:start="35:42" pos:end="35:76"><name pos:start="35:42" pos:end="35:57"><name pos:start="35:42" pos:end="35:42">p</name><operator pos:start="35:43" pos:end="35:44">-&gt;</operator><name pos:start="35:45" pos:end="35:57">context_count</name></name> <operator pos:start="35:59" pos:end="35:59">*</operator> <sizeof pos:start="35:61" pos:end="35:76">sizeof<argument_list pos:start="35:67" pos:end="35:76">(<argument pos:start="35:68" pos:end="35:75"><expr pos:start="35:68" pos:end="35:75"><name pos:start="35:68" pos:end="35:75">VlcState</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="37:13" pos:end="39:39"><if pos:start="37:13" pos:end="39:39">if <condition pos:start="37:16" pos:end="37:30">(<expr pos:start="37:17" pos:end="37:29"><operator pos:start="37:17" pos:end="37:17">!</operator><name pos:start="37:18" pos:end="37:29"><name pos:start="37:18" pos:end="37:18">p</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:29">vlc_state</name></name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:39"><block_content pos:start="39:17" pos:end="39:39">

                <return pos:start="39:17" pos:end="39:39">return <expr pos:start="39:24" pos:end="39:38"><call pos:start="39:24" pos:end="39:38"><name pos:start="39:24" pos:end="39:30">AVERROR</name><argument_list pos:start="39:31" pos:end="39:38">(<argument pos:start="39:32" pos:end="39:37"><expr pos:start="39:32" pos:end="39:37"><name pos:start="39:32" pos:end="39:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="47:5" pos:end="59:5"><if pos:start="47:5" pos:end="59:5">if <condition pos:start="47:8" pos:end="47:19">(<expr pos:start="47:9" pos:end="47:18"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:10">fs</name><operator pos:start="47:11" pos:end="47:12">-&gt;</operator><name pos:start="47:13" pos:end="47:14">ac</name></name> <operator pos:start="47:16" pos:end="47:16">&gt;</operator> <literal type="number" pos:start="47:18" pos:end="47:18">1</literal></expr>)</condition> <block pos:start="47:21" pos:end="59:5">{<block_content pos:start="51:9" pos:end="57:9">

        <comment type="line" pos:start="49:9" pos:end="49:53">//FIXME only redo if state_transition changed</comment>

        <for pos:start="51:9" pos:end="57:9">for <control pos:start="51:13" pos:end="51:33">(<init pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:18"><name pos:start="51:14" pos:end="51:14">j</name> <operator pos:start="51:16" pos:end="51:16">=</operator> <literal type="number" pos:start="51:18" pos:end="51:18">1</literal></expr>;</init> <condition pos:start="51:21" pos:end="51:28"><expr pos:start="51:21" pos:end="51:27"><name pos:start="51:21" pos:end="51:21">j</name> <operator pos:start="51:23" pos:end="51:23">&lt;</operator> <literal type="number" pos:start="51:25" pos:end="51:27">256</literal></expr>;</condition> <incr pos:start="51:30" pos:end="51:32"><expr pos:start="51:30" pos:end="51:32"><name pos:start="51:30" pos:end="51:30">j</name><operator pos:start="51:31" pos:end="51:32">++</operator></expr></incr>)</control> <block pos:start="51:35" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:65">

            <expr_stmt pos:start="53:13" pos:end="53:63"><expr pos:start="53:13" pos:end="53:62"><name pos:start="53:13" pos:end="53:30"><name pos:start="53:13" pos:end="53:14">fs</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:17">c</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:27">one_state</name><index pos:start="53:28" pos:end="53:30">[<expr pos:start="53:29" pos:end="53:29"><name pos:start="53:29" pos:end="53:29">j</name></expr>]</index></name>        <operator pos:start="53:39" pos:end="53:39">=</operator> <name pos:start="53:41" pos:end="53:62"><name pos:start="53:41" pos:end="53:41">f</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:59">state_transition</name><index pos:start="53:60" pos:end="53:62">[<expr pos:start="53:61" pos:end="53:61"><name pos:start="53:61" pos:end="53:61">j</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:65"><expr pos:start="55:13" pos:end="55:64"><name pos:start="55:13" pos:end="55:37"><name pos:start="55:13" pos:end="55:14">fs</name><operator pos:start="55:15" pos:end="55:16">-&gt;</operator><name pos:start="55:17" pos:end="55:17">c</name><operator pos:start="55:18" pos:end="55:18">.</operator><name pos:start="55:19" pos:end="55:28">zero_state</name><index pos:start="55:29" pos:end="55:37">[<expr pos:start="55:30" pos:end="55:36"><literal type="number" pos:start="55:30" pos:end="55:32">256</literal> <operator pos:start="55:34" pos:end="55:34">-</operator> <name pos:start="55:36" pos:end="55:36">j</name></expr>]</index></name> <operator pos:start="55:39" pos:end="55:39">=</operator> <literal type="number" pos:start="55:41" pos:end="55:45">256</literal> <operator pos:start="55:45" pos:end="55:45">-</operator> <name pos:start="55:47" pos:end="55:64"><name pos:start="55:47" pos:end="55:48">fs</name><operator pos:start="55:49" pos:end="55:50">-&gt;</operator><name pos:start="55:51" pos:end="55:51">c</name><operator pos:start="55:52" pos:end="55:52">.</operator><name pos:start="55:53" pos:end="55:61">one_state</name><index pos:start="55:62" pos:end="55:64">[<expr pos:start="55:63" pos:end="55:63"><name pos:start="55:63" pos:end="55:63">j</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="63:5" pos:end="63:13">return <expr pos:start="63:12" pos:end="63:12"><literal type="number" pos:start="63:12" pos:end="63:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
