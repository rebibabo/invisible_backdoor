<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1017.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">estimate_timings_from_pts</name><parameter_list pos:start="1:38" pos:end="1:78">(<parameter pos:start="1:39" pos:end="1:57"><decl pos:start="1:39" pos:end="1:57"><type pos:start="1:39" pos:end="1:57"><name pos:start="1:39" pos:end="1:53">AVFormatContext</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:57">ic</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:77"><decl pos:start="1:60" pos:end="1:77"><type pos:start="1:60" pos:end="1:77"><name pos:start="1:60" pos:end="1:66">int64_t</name></type> <name pos:start="1:68" pos:end="1:77">old_offset</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="193:1">{<block_content pos:start="5:5" pos:end="191:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">AVPacket</name></type> <name pos:start="5:14" pos:end="5:17">pkt1</name></decl>, <decl pos:start="5:20" pos:end="5:31"><type ref="prev" pos:start="5:5" pos:end="5:12"><modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">pkt</name> <init pos:start="5:25" pos:end="5:31">= <expr pos:start="5:27" pos:end="5:31"><operator pos:start="5:27" pos:end="5:27">&amp;</operator><name pos:start="5:28" pos:end="5:31">pkt1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">read_size</name></decl>, <decl pos:start="9:20" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:20">i</name></decl>, <decl pos:start="9:23" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:23" pos:end="9:25">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:20">end_time</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:20">filesize</name></decl>, <decl pos:start="13:23" pos:end="13:28"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:23" pos:end="13:28">offset</name></decl>, <decl pos:start="13:31" pos:end="13:38"><type ref="prev" pos:start="13:5" pos:end="13:11"/><name pos:start="13:31" pos:end="13:38">duration</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">retry</name> <init pos:start="15:15" pos:end="15:17">= <expr pos:start="15:17" pos:end="15:17"><literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:28">/* flush packet queue */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:27"><expr pos:start="21:5" pos:end="21:26"><call pos:start="21:5" pos:end="21:26"><name pos:start="21:5" pos:end="21:22">flush_packet_queue</name><argument_list pos:start="21:23" pos:end="21:26">(<argument pos:start="21:24" pos:end="21:25"><expr pos:start="21:24" pos:end="21:25"><name pos:start="21:24" pos:end="21:25">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="49:5">for <control pos:start="25:9" pos:end="25:40">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:35"><expr pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:17">i</name> <operator pos:start="25:19" pos:end="25:19">&lt;</operator> <name pos:start="25:21" pos:end="25:34"><name pos:start="25:21" pos:end="25:22">ic</name><operator pos:start="25:23" pos:end="25:24">-&gt;</operator><name pos:start="25:25" pos:end="25:34">nb_streams</name></name></expr>;</condition> <incr pos:start="25:37" pos:end="25:39"><expr pos:start="25:37" pos:end="25:39"><name pos:start="25:37" pos:end="25:37">i</name><operator pos:start="25:38" pos:end="25:39">++</operator></expr></incr>)</control> <block pos:start="25:42" pos:end="49:5">{<block_content pos:start="27:9" pos:end="47:9">

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:10">st</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <name pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:15">ic</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:24">streams</name><index pos:start="27:25" pos:end="27:27">[<expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="37:92"><if pos:start="29:9" pos:end="37:92">if <condition pos:start="29:12" pos:end="33:58">(<expr pos:start="29:13" pos:end="33:57"><name pos:start="29:13" pos:end="29:26"><name pos:start="29:13" pos:end="29:14">st</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:26">start_time</name></name> <operator pos:start="29:28" pos:end="29:29">==</operator> <name pos:start="29:31" pos:end="29:44">AV_NOPTS_VALUE</name> <operator pos:start="29:46" pos:end="29:47">&amp;&amp;</operator>

            <name pos:start="31:13" pos:end="31:25"><name pos:start="31:13" pos:end="31:14">st</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:25">first_dts</name></name> <operator pos:start="31:27" pos:end="31:28">==</operator> <name pos:start="31:30" pos:end="31:43">AV_NOPTS_VALUE</name> <operator pos:start="31:45" pos:end="31:46">&amp;&amp;</operator>

            <name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:14">st</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:21">codec</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:33">codec_type</name></name> <operator pos:start="33:35" pos:end="33:36">!=</operator> <name pos:start="33:38" pos:end="33:57">AVMEDIA_TYPE_UNKNOWN</name></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="37:92"><block_content pos:start="35:13" pos:end="37:92">

            <expr_stmt pos:start="35:13" pos:end="37:92"><expr pos:start="35:13" pos:end="37:91"><call pos:start="35:13" pos:end="37:91"><name pos:start="35:13" pos:end="35:18">av_log</name><argument_list pos:start="35:19" pos:end="37:91">(<argument pos:start="35:20" pos:end="35:28"><expr pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:28"><name pos:start="35:20" pos:end="35:21">st</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:28">codec</name></name></expr></argument>, <argument pos:start="35:31" pos:end="35:44"><expr pos:start="35:31" pos:end="35:44"><name pos:start="35:31" pos:end="35:44">AV_LOG_WARNING</name></expr></argument>,

                   <argument pos:start="37:20" pos:end="37:87"><expr pos:start="37:20" pos:end="37:87"><literal type="string" pos:start="37:20" pos:end="37:87">"start time for stream %d is not set in estimate_timings_from_pts\n"</literal></expr></argument>, <argument pos:start="37:90" pos:end="37:90"><expr pos:start="37:90" pos:end="37:90"><name pos:start="37:90" pos:end="37:90">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:23">(<expr pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:14">st</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:22">parser</name></name></expr>)</condition> <block pos:start="41:25" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:30">

            <expr_stmt pos:start="43:13" pos:end="43:40"><expr pos:start="43:13" pos:end="43:39"><call pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:27">av_parser_close</name><argument_list pos:start="43:28" pos:end="43:39">(<argument pos:start="43:29" pos:end="43:38"><expr pos:start="43:29" pos:end="43:38"><name pos:start="43:29" pos:end="43:38"><name pos:start="43:29" pos:end="43:30">st</name><operator pos:start="43:31" pos:end="43:32">-&gt;</operator><name pos:start="43:33" pos:end="43:38">parser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:30"><expr pos:start="45:13" pos:end="45:29"><name pos:start="45:13" pos:end="45:22"><name pos:start="45:13" pos:end="45:14">st</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:22">parser</name></name> <operator pos:start="45:24" pos:end="45:24">=</operator> <name pos:start="45:26" pos:end="45:29">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="53:5" pos:end="53:42">/* estimate the end time (duration) */</comment>

    <comment type="block" pos:start="55:5" pos:end="55:43">/* XXX: may need to support wrapping */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:12">filesize</name> <operator pos:start="57:14" pos:end="57:14">=</operator> <ternary pos:start="57:16" pos:end="57:45"><condition pos:start="57:16" pos:end="57:23"><expr pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:21"><name pos:start="57:16" pos:end="57:17">ic</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:21">pb</name></name></expr> ?</condition><then pos:start="57:25" pos:end="57:41"> <expr pos:start="57:25" pos:end="57:41"><call pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:33">avio_size</name><argument_list pos:start="57:34" pos:end="57:41">(<argument pos:start="57:35" pos:end="57:40"><expr pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:40"><name pos:start="57:35" pos:end="57:36">ic</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:40">pb</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="57:43" pos:end="57:45">: <expr pos:start="57:45" pos:end="57:45"><literal type="number" pos:start="57:45" pos:end="57:45">0</literal></expr></else></ternary></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:12">end_time</name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:29">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

    <do pos:start="61:5" pos:end="135:44">do <block pos:start="61:8" pos:end="131:5">{<block_content pos:start="63:9" pos:end="129:9">

        <expr_stmt pos:start="63:9" pos:end="63:62"><expr pos:start="63:9" pos:end="63:61"><name pos:start="63:9" pos:end="63:14">offset</name> <operator pos:start="63:16" pos:end="63:16">=</operator> <name pos:start="63:18" pos:end="63:25">filesize</name> <operator pos:start="63:27" pos:end="63:27">-</operator> <operator pos:start="63:29" pos:end="63:29">(</operator><name pos:start="63:30" pos:end="63:51">DURATION_MAX_READ_SIZE</name> <operator pos:start="63:53" pos:end="63:54">&lt;&lt;</operator> <name pos:start="63:56" pos:end="63:60">retry</name><operator pos:start="63:61" pos:end="63:61">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="65:9" pos:end="67:23"><if pos:start="65:9" pos:end="67:23">if <condition pos:start="65:12" pos:end="65:23">(<expr pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:18">offset</name> <operator pos:start="65:20" pos:end="65:20">&lt;</operator> <literal type="number" pos:start="65:22" pos:end="65:22">0</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:23"><block_content pos:start="67:13" pos:end="67:23">

            <expr_stmt pos:start="67:13" pos:end="67:23"><expr pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:18">offset</name> <operator pos:start="67:20" pos:end="67:20">=</operator> <literal type="number" pos:start="67:22" pos:end="67:22">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:44"><expr pos:start="71:9" pos:end="71:43"><call pos:start="71:9" pos:end="71:43"><name pos:start="71:9" pos:end="71:17">avio_seek</name><argument_list pos:start="71:18" pos:end="71:43">(<argument pos:start="71:19" pos:end="71:24"><expr pos:start="71:19" pos:end="71:24"><name pos:start="71:19" pos:end="71:24"><name pos:start="71:19" pos:end="71:20">ic</name><operator pos:start="71:21" pos:end="71:22">-&gt;</operator><name pos:start="71:23" pos:end="71:24">pb</name></name></expr></argument>, <argument pos:start="71:27" pos:end="71:32"><expr pos:start="71:27" pos:end="71:32"><name pos:start="71:27" pos:end="71:32">offset</name></expr></argument>, <argument pos:start="71:35" pos:end="71:42"><expr pos:start="71:35" pos:end="71:42"><name pos:start="71:35" pos:end="71:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:22"><expr pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:17">read_size</name> <operator pos:start="73:19" pos:end="73:19">=</operator> <literal type="number" pos:start="73:21" pos:end="73:21">0</literal></expr>;</expr_stmt>

        <for pos:start="75:9" pos:end="129:9">for <control pos:start="75:13" pos:end="75:16">(<init pos:start="75:14" pos:end="75:14">;</init><condition pos:start="75:15" pos:end="75:15">;</condition><incr/>)</control> <block pos:start="75:18" pos:end="129:9">{<block_content pos:start="77:13" pos:end="127:32">

            <if_stmt pos:start="77:13" pos:end="79:22"><if pos:start="77:13" pos:end="79:22">if <condition pos:start="77:16" pos:end="77:77">(<expr pos:start="77:17" pos:end="77:76"><name pos:start="77:17" pos:end="77:25">read_size</name> <operator pos:start="77:27" pos:end="77:28">&gt;=</operator> <name pos:start="77:30" pos:end="77:51">DURATION_MAX_READ_SIZE</name> <operator pos:start="77:53" pos:end="77:54">&lt;&lt;</operator> <operator pos:start="77:56" pos:end="77:56">(</operator><call pos:start="77:57" pos:end="77:75"><name pos:start="77:57" pos:end="77:61">FFMAX</name><argument_list pos:start="77:62" pos:end="77:75">(<argument pos:start="77:63" pos:end="77:71"><expr pos:start="77:63" pos:end="77:71"><name pos:start="77:63" pos:end="77:67">retry</name> <operator pos:start="77:69" pos:end="77:69">-</operator> <literal type="number" pos:start="77:71" pos:end="77:71">1</literal></expr></argument>, <argument pos:start="77:74" pos:end="77:74"><expr pos:start="77:74" pos:end="77:74"><literal type="number" pos:start="77:74" pos:end="77:74">0</literal></expr></argument>)</argument_list></call><operator pos:start="77:76" pos:end="77:76">)</operator></expr>)</condition><block type="pseudo" pos:start="79:17" pos:end="79:22"><block_content pos:start="79:17" pos:end="79:22">

                <break pos:start="79:17" pos:end="79:22">break;</break></block_content></block></if></if_stmt>



            <do pos:start="83:13" pos:end="87:45">do <block pos:start="83:16" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:46">

                <expr_stmt pos:start="85:17" pos:end="85:46"><expr pos:start="85:17" pos:end="85:45"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:45"><name pos:start="85:23" pos:end="85:36">ff_read_packet</name><argument_list pos:start="85:37" pos:end="85:45">(<argument pos:start="85:38" pos:end="85:39"><expr pos:start="85:38" pos:end="85:39"><name pos:start="85:38" pos:end="85:39">ic</name></expr></argument>, <argument pos:start="85:42" pos:end="85:44"><expr pos:start="85:42" pos:end="85:44"><name pos:start="85:42" pos:end="85:44">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block> while <condition pos:start="87:21" pos:end="87:44">(<expr pos:start="87:22" pos:end="87:43"><name pos:start="87:22" pos:end="87:24">ret</name> <operator pos:start="87:26" pos:end="87:27">==</operator> <call pos:start="87:29" pos:end="87:43"><name pos:start="87:29" pos:end="87:35">AVERROR</name><argument_list pos:start="87:36" pos:end="87:43">(<argument pos:start="87:37" pos:end="87:42"><expr pos:start="87:37" pos:end="87:42"><name pos:start="87:37" pos:end="87:42">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition>;</do>

            <if_stmt pos:start="89:13" pos:end="91:22"><if pos:start="89:13" pos:end="91:22">if <condition pos:start="89:16" pos:end="89:25">(<expr pos:start="89:17" pos:end="89:24"><name pos:start="89:17" pos:end="89:19">ret</name> <operator pos:start="89:21" pos:end="89:22">!=</operator> <literal type="number" pos:start="89:24" pos:end="89:24">0</literal></expr>)</condition><block type="pseudo" pos:start="91:17" pos:end="91:22"><block_content pos:start="91:17" pos:end="91:22">

                <break pos:start="91:17" pos:end="91:22">break;</break></block_content></block></if></if_stmt>

            <expr_stmt pos:start="93:13" pos:end="93:35"><expr pos:start="93:13" pos:end="93:34"><name pos:start="93:13" pos:end="93:21">read_size</name> <operator pos:start="93:23" pos:end="93:24">+=</operator> <name pos:start="93:26" pos:end="93:34"><name pos:start="93:26" pos:end="93:28">pkt</name><operator pos:start="93:29" pos:end="93:30">-&gt;</operator><name pos:start="93:31" pos:end="93:34">size</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:56"><expr pos:start="95:13" pos:end="95:55"><name pos:start="95:13" pos:end="95:14">st</name>         <operator pos:start="95:24" pos:end="95:24">=</operator> <name pos:start="95:26" pos:end="95:55"><name pos:start="95:26" pos:end="95:27">ic</name><operator pos:start="95:28" pos:end="95:29">-&gt;</operator><name pos:start="95:30" pos:end="95:36">streams</name><index pos:start="95:37" pos:end="95:55">[<expr pos:start="95:38" pos:end="95:54"><name pos:start="95:38" pos:end="95:54"><name pos:start="95:38" pos:end="95:40">pkt</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:54">stream_index</name></name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="125:13"><if pos:start="97:13" pos:end="125:13">if <condition pos:start="97:16" pos:end="101:51">(<expr pos:start="97:17" pos:end="101:50"><name pos:start="97:17" pos:end="97:24"><name pos:start="97:17" pos:end="97:19">pkt</name><operator pos:start="97:20" pos:end="97:21">-&gt;</operator><name pos:start="97:22" pos:end="97:24">pts</name></name> <operator pos:start="97:26" pos:end="97:27">!=</operator> <name pos:start="97:29" pos:end="97:42">AV_NOPTS_VALUE</name> <operator pos:start="97:44" pos:end="97:45">&amp;&amp;</operator>

                <operator pos:start="99:17" pos:end="99:17">(</operator><name pos:start="99:18" pos:end="99:31"><name pos:start="99:18" pos:end="99:19">st</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:31">start_time</name></name> <operator pos:start="99:33" pos:end="99:34">!=</operator> <name pos:start="99:36" pos:end="99:49">AV_NOPTS_VALUE</name> <operator pos:start="99:51" pos:end="99:52">||</operator>

                 <name pos:start="101:18" pos:end="101:30"><name pos:start="101:18" pos:end="101:19">st</name><operator pos:start="101:20" pos:end="101:21">-&gt;</operator><name pos:start="101:22" pos:end="101:30">first_dts</name></name>  <operator pos:start="101:33" pos:end="101:34">!=</operator> <name pos:start="101:36" pos:end="101:49">AV_NOPTS_VALUE</name><operator pos:start="101:50" pos:end="101:50">)</operator></expr>)</condition> <block pos:start="101:53" pos:end="125:13">{<block_content pos:start="103:17" pos:end="123:17">

                <expr_stmt pos:start="103:17" pos:end="103:63"><expr pos:start="103:17" pos:end="103:62"><name pos:start="103:17" pos:end="103:24">duration</name> <operator pos:start="103:26" pos:end="103:26">=</operator> <name pos:start="103:28" pos:end="103:35">end_time</name> <operator pos:start="103:37" pos:end="103:37">=</operator> <name pos:start="103:39" pos:end="103:46"><name pos:start="103:39" pos:end="103:41">pkt</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:46">pts</name></name> <operator pos:start="103:48" pos:end="103:48">+</operator> <name pos:start="103:50" pos:end="103:62"><name pos:start="103:50" pos:end="103:52">pkt</name><operator pos:start="103:53" pos:end="103:54">-&gt;</operator><name pos:start="103:55" pos:end="103:62">duration</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="105:17" pos:end="111:46"><if pos:start="105:17" pos:end="107:47">if <condition pos:start="105:20" pos:end="105:53">(<expr pos:start="105:21" pos:end="105:52"><name pos:start="105:21" pos:end="105:34"><name pos:start="105:21" pos:end="105:22">st</name><operator pos:start="105:23" pos:end="105:24">-&gt;</operator><name pos:start="105:25" pos:end="105:34">start_time</name></name> <operator pos:start="105:36" pos:end="105:37">!=</operator> <name pos:start="105:39" pos:end="105:52">AV_NOPTS_VALUE</name></expr>)</condition><block type="pseudo" pos:start="107:21" pos:end="107:47"><block_content pos:start="107:21" pos:end="107:47">

                    <expr_stmt pos:start="107:21" pos:end="107:47"><expr pos:start="107:21" pos:end="107:46"><name pos:start="107:21" pos:end="107:28">duration</name> <operator pos:start="107:30" pos:end="107:31">-=</operator> <name pos:start="107:33" pos:end="107:46"><name pos:start="107:33" pos:end="107:34">st</name><operator pos:start="107:35" pos:end="107:36">-&gt;</operator><name pos:start="107:37" pos:end="107:46">start_time</name></name></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="109:17" pos:end="111:46">else<block type="pseudo" pos:start="111:21" pos:end="111:46"><block_content pos:start="111:21" pos:end="111:46">

                    <expr_stmt pos:start="111:21" pos:end="111:46"><expr pos:start="111:21" pos:end="111:45"><name pos:start="111:21" pos:end="111:28">duration</name> <operator pos:start="111:30" pos:end="111:31">-=</operator> <name pos:start="111:33" pos:end="111:45"><name pos:start="111:33" pos:end="111:34">st</name><operator pos:start="111:35" pos:end="111:36">-&gt;</operator><name pos:start="111:37" pos:end="111:45">first_dts</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <if_stmt pos:start="113:17" pos:end="123:17"><if pos:start="113:17" pos:end="123:17">if <condition pos:start="113:20" pos:end="113:33">(<expr pos:start="113:21" pos:end="113:32"><name pos:start="113:21" pos:end="113:28">duration</name> <operator pos:start="113:30" pos:end="113:30">&gt;</operator> <literal type="number" pos:start="113:32" pos:end="113:32">0</literal></expr>)</condition> <block pos:start="113:35" pos:end="123:17">{<block_content pos:start="115:21" pos:end="121:55">

                    <if_stmt pos:start="115:21" pos:end="119:48"><if pos:start="115:21" pos:end="119:48">if <condition pos:start="115:24" pos:end="117:140">(<expr pos:start="115:25" pos:end="117:139"><name pos:start="115:25" pos:end="115:36"><name pos:start="115:25" pos:end="115:26">st</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:36">duration</name></name> <operator pos:start="115:38" pos:end="115:39">==</operator> <name pos:start="115:41" pos:end="115:54">AV_NOPTS_VALUE</name> <operator pos:start="115:56" pos:end="115:57">||</operator> <name pos:start="115:59" pos:end="115:81"><name pos:start="115:59" pos:end="115:60">st</name><operator pos:start="115:61" pos:end="115:62">-&gt;</operator><name pos:start="115:63" pos:end="115:66">info</name><operator pos:start="115:67" pos:end="115:68">-&gt;</operator><name pos:start="115:69" pos:end="115:81">last_duration</name></name><operator pos:start="115:82" pos:end="115:83">&lt;=</operator> <literal type="number" pos:start="115:85" pos:end="115:85">0</literal> <operator pos:start="115:87" pos:end="115:88">||</operator>

                        <operator pos:start="117:25" pos:end="117:25">(</operator><name pos:start="117:26" pos:end="117:37"><name pos:start="117:26" pos:end="117:27">st</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:37">duration</name></name> <operator pos:start="117:39" pos:end="117:39">&lt;</operator> <name pos:start="117:41" pos:end="117:48">duration</name> <operator pos:start="117:50" pos:end="117:51">&amp;&amp;</operator> <call pos:start="117:53" pos:end="117:93"><name pos:start="117:53" pos:end="117:57">FFABS</name><argument_list pos:start="117:58" pos:end="117:93">(<argument pos:start="117:59" pos:end="117:92"><expr pos:start="117:59" pos:end="117:92"><name pos:start="117:59" pos:end="117:66">duration</name> <operator pos:start="117:68" pos:end="117:68">-</operator> <name pos:start="117:70" pos:end="117:92"><name pos:start="117:70" pos:end="117:71">st</name><operator pos:start="117:72" pos:end="117:73">-&gt;</operator><name pos:start="117:74" pos:end="117:77">info</name><operator pos:start="117:78" pos:end="117:79">-&gt;</operator><name pos:start="117:80" pos:end="117:92">last_duration</name></name></expr></argument>)</argument_list></call> <operator pos:start="117:95" pos:end="117:95">&lt;</operator> <literal type="number" pos:start="117:97" pos:end="117:100">60LL</literal><operator pos:start="117:101" pos:end="117:101">*</operator><name pos:start="117:102" pos:end="117:118"><name pos:start="117:102" pos:end="117:103">st</name><operator pos:start="117:104" pos:end="117:105">-&gt;</operator><name pos:start="117:106" pos:end="117:114">time_base</name><operator pos:start="117:115" pos:end="117:115">.</operator><name pos:start="117:116" pos:end="117:118">den</name></name> <operator pos:start="117:120" pos:end="117:120">/</operator> <name pos:start="117:122" pos:end="117:138"><name pos:start="117:122" pos:end="117:123">st</name><operator pos:start="117:124" pos:end="117:125">-&gt;</operator><name pos:start="117:126" pos:end="117:134">time_base</name><operator pos:start="117:135" pos:end="117:135">.</operator><name pos:start="117:136" pos:end="117:138">num</name></name><operator pos:start="117:139" pos:end="117:139">)</operator></expr>)</condition><block type="pseudo" pos:start="119:25" pos:end="119:48"><block_content pos:start="119:25" pos:end="119:48">

                        <expr_stmt pos:start="119:25" pos:end="119:48"><expr pos:start="119:25" pos:end="119:47"><name pos:start="119:25" pos:end="119:36"><name pos:start="119:25" pos:end="119:26">st</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:36">duration</name></name> <operator pos:start="119:38" pos:end="119:38">=</operator> <name pos:start="119:40" pos:end="119:47">duration</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="121:21" pos:end="121:55"><expr pos:start="121:21" pos:end="121:54"><name pos:start="121:21" pos:end="121:43"><name pos:start="121:21" pos:end="121:22">st</name><operator pos:start="121:23" pos:end="121:24">-&gt;</operator><name pos:start="121:25" pos:end="121:28">info</name><operator pos:start="121:29" pos:end="121:30">-&gt;</operator><name pos:start="121:31" pos:end="121:43">last_duration</name></name> <operator pos:start="121:45" pos:end="121:45">=</operator> <name pos:start="121:47" pos:end="121:54">duration</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:32"><expr pos:start="127:13" pos:end="127:31"><call pos:start="127:13" pos:end="127:31"><name pos:start="127:13" pos:end="127:26">av_free_packet</name><argument_list pos:start="127:27" pos:end="127:31">(<argument pos:start="127:28" pos:end="127:30"><expr pos:start="127:28" pos:end="127:30"><name pos:start="127:28" pos:end="127:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block> while <condition pos:start="131:13" pos:end="135:43">(<expr pos:start="131:14" pos:end="135:42"><name pos:start="131:14" pos:end="131:21">end_time</name> <operator pos:start="131:23" pos:end="131:24">==</operator> <name pos:start="131:26" pos:end="131:39">AV_NOPTS_VALUE</name> <operator pos:start="131:41" pos:end="131:42">&amp;&amp;</operator>

             <name pos:start="133:14" pos:end="133:21">filesize</name> <operator pos:start="133:23" pos:end="133:23">&gt;</operator> <operator pos:start="133:25" pos:end="133:25">(</operator><name pos:start="133:26" pos:end="133:47">DURATION_MAX_READ_SIZE</name> <operator pos:start="133:49" pos:end="133:50">&lt;&lt;</operator> <name pos:start="133:52" pos:end="133:56">retry</name><operator pos:start="133:57" pos:end="133:57">)</operator> <operator pos:start="133:59" pos:end="133:60">&amp;&amp;</operator>

             <operator pos:start="135:14" pos:end="135:15">++</operator><name pos:start="135:16" pos:end="135:20">retry</name> <operator pos:start="135:22" pos:end="135:23">&lt;=</operator> <name pos:start="135:25" pos:end="135:42">DURATION_MAX_RETRY</name></expr>)</condition>;</do>



    <comment type="block" pos:start="139:5" pos:end="139:78">/* warn about audio/video streams which duration could not be estimated */</comment>

    <for pos:start="141:5" pos:end="165:5">for <control pos:start="141:9" pos:end="141:40">(<init pos:start="141:10" pos:end="141:15"><expr pos:start="141:10" pos:end="141:14"><name pos:start="141:10" pos:end="141:10">i</name> <operator pos:start="141:12" pos:end="141:12">=</operator> <literal type="number" pos:start="141:14" pos:end="141:14">0</literal></expr>;</init> <condition pos:start="141:17" pos:end="141:35"><expr pos:start="141:17" pos:end="141:34"><name pos:start="141:17" pos:end="141:17">i</name> <operator pos:start="141:19" pos:end="141:19">&lt;</operator> <name pos:start="141:21" pos:end="141:34"><name pos:start="141:21" pos:end="141:22">ic</name><operator pos:start="141:23" pos:end="141:24">-&gt;</operator><name pos:start="141:25" pos:end="141:34">nb_streams</name></name></expr>;</condition> <incr pos:start="141:37" pos:end="141:39"><expr pos:start="141:37" pos:end="141:39"><name pos:start="141:37" pos:end="141:37">i</name><operator pos:start="141:38" pos:end="141:39">++</operator></expr></incr>)</control> <block pos:start="141:42" pos:end="165:5">{<block_content pos:start="143:9" pos:end="163:9">

        <expr_stmt pos:start="143:9" pos:end="143:28"><expr pos:start="143:9" pos:end="143:27"><name pos:start="143:9" pos:end="143:10">st</name> <operator pos:start="143:12" pos:end="143:12">=</operator> <name pos:start="143:14" pos:end="143:27"><name pos:start="143:14" pos:end="143:15">ic</name><operator pos:start="143:16" pos:end="143:17">-&gt;</operator><name pos:start="143:18" pos:end="143:24">streams</name><index pos:start="143:25" pos:end="143:27">[<expr pos:start="143:26" pos:end="143:26"><name pos:start="143:26" pos:end="143:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="145:9" pos:end="163:9"><if pos:start="145:9" pos:end="163:9">if <condition pos:start="145:12" pos:end="145:43">(<expr pos:start="145:13" pos:end="145:42"><name pos:start="145:13" pos:end="145:24"><name pos:start="145:13" pos:end="145:14">st</name><operator pos:start="145:15" pos:end="145:16">-&gt;</operator><name pos:start="145:17" pos:end="145:24">duration</name></name> <operator pos:start="145:26" pos:end="145:27">==</operator> <name pos:start="145:29" pos:end="145:42">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="145:45" pos:end="163:9">{<block_content pos:start="147:13" pos:end="161:13">

            <switch pos:start="147:13" pos:end="161:13">switch <condition pos:start="147:20" pos:end="147:42">(<expr pos:start="147:21" pos:end="147:41"><name pos:start="147:21" pos:end="147:41"><name pos:start="147:21" pos:end="147:22">st</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:29">codec</name><operator pos:start="147:30" pos:end="147:31">-&gt;</operator><name pos:start="147:32" pos:end="147:41">codec_type</name></name></expr>)</condition> <block pos:start="147:44" pos:end="161:13">{<block_content pos:start="149:13" pos:end="159:112">

            <case pos:start="149:13" pos:end="149:36">case <expr pos:start="149:18" pos:end="149:35"><name pos:start="149:18" pos:end="149:35">AVMEDIA_TYPE_VIDEO</name></expr>:</case>

            <case pos:start="151:13" pos:end="151:36">case <expr pos:start="151:18" pos:end="151:35"><name pos:start="151:18" pos:end="151:35">AVMEDIA_TYPE_AUDIO</name></expr>:</case>

                <if_stmt pos:start="153:17" pos:end="159:112"><if pos:start="153:17" pos:end="157:17">if <condition pos:start="153:20" pos:end="153:89">(<expr pos:start="153:21" pos:end="153:88"><name pos:start="153:21" pos:end="153:34"><name pos:start="153:21" pos:end="153:22">st</name><operator pos:start="153:23" pos:end="153:24">-&gt;</operator><name pos:start="153:25" pos:end="153:34">start_time</name></name> <operator pos:start="153:36" pos:end="153:37">!=</operator> <name pos:start="153:39" pos:end="153:52">AV_NOPTS_VALUE</name> <operator pos:start="153:54" pos:end="153:55">||</operator> <name pos:start="153:57" pos:end="153:69"><name pos:start="153:57" pos:end="153:58">st</name><operator pos:start="153:59" pos:end="153:60">-&gt;</operator><name pos:start="153:61" pos:end="153:69">first_dts</name></name>  <operator pos:start="153:72" pos:end="153:73">!=</operator> <name pos:start="153:75" pos:end="153:88">AV_NOPTS_VALUE</name></expr>)</condition> <block pos:start="153:91" pos:end="157:17">{<block_content pos:start="155:21" pos:end="155:111">

                    <expr_stmt pos:start="155:21" pos:end="155:111"><expr pos:start="155:21" pos:end="155:110"><call pos:start="155:21" pos:end="155:110"><name pos:start="155:21" pos:end="155:26">av_log</name><argument_list pos:start="155:27" pos:end="155:110">(<argument pos:start="155:28" pos:end="155:29"><expr pos:start="155:28" pos:end="155:29"><name pos:start="155:28" pos:end="155:29">ic</name></expr></argument>, <argument pos:start="155:32" pos:end="155:43"><expr pos:start="155:32" pos:end="155:43"><name pos:start="155:32" pos:end="155:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="155:46" pos:end="155:106"><expr pos:start="155:46" pos:end="155:106"><literal type="string" pos:start="155:46" pos:end="155:106">"stream %d : no PTS found at end of file, duration not set\n"</literal></expr></argument>, <argument pos:start="155:109" pos:end="155:109"><expr pos:start="155:109" pos:end="155:109"><name pos:start="155:109" pos:end="155:109">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="157:19" pos:end="159:112">else<block type="pseudo" pos:start="159:21" pos:end="159:112"><block_content pos:start="159:21" pos:end="159:112">

                    <expr_stmt pos:start="159:21" pos:end="159:112"><expr pos:start="159:21" pos:end="159:111"><call pos:start="159:21" pos:end="159:111"><name pos:start="159:21" pos:end="159:26">av_log</name><argument_list pos:start="159:27" pos:end="159:111">(<argument pos:start="159:28" pos:end="159:29"><expr pos:start="159:28" pos:end="159:29"><name pos:start="159:28" pos:end="159:29">ic</name></expr></argument>, <argument pos:start="159:32" pos:end="159:43"><expr pos:start="159:32" pos:end="159:43"><name pos:start="159:32" pos:end="159:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="159:46" pos:end="159:107"><expr pos:start="159:46" pos:end="159:107"><literal type="string" pos:start="159:46" pos:end="159:107">"stream %d : no TS found at start of file, duration not set\n"</literal></expr></argument>, <argument pos:start="159:110" pos:end="159:110"><expr pos:start="159:110" pos:end="159:110"><name pos:start="159:110" pos:end="159:110">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></switch>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="167:5" pos:end="167:32"><expr pos:start="167:5" pos:end="167:31"><call pos:start="167:5" pos:end="167:31"><name pos:start="167:5" pos:end="167:27">fill_all_stream_timings</name><argument_list pos:start="167:28" pos:end="167:31">(<argument pos:start="167:29" pos:end="167:30"><expr pos:start="167:29" pos:end="167:30"><name pos:start="167:29" pos:end="167:30">ic</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:44"><expr pos:start="171:5" pos:end="171:43"><call pos:start="171:5" pos:end="171:43"><name pos:start="171:5" pos:end="171:13">avio_seek</name><argument_list pos:start="171:14" pos:end="171:43">(<argument pos:start="171:15" pos:end="171:20"><expr pos:start="171:15" pos:end="171:20"><name pos:start="171:15" pos:end="171:20"><name pos:start="171:15" pos:end="171:16">ic</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:20">pb</name></name></expr></argument>, <argument pos:start="171:23" pos:end="171:32"><expr pos:start="171:23" pos:end="171:32"><name pos:start="171:23" pos:end="171:32">old_offset</name></expr></argument>, <argument pos:start="171:35" pos:end="171:42"><expr pos:start="171:35" pos:end="171:42"><name pos:start="171:35" pos:end="171:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="173:5" pos:end="191:5">for <control pos:start="173:9" pos:end="173:40">(<init pos:start="173:10" pos:end="173:15"><expr pos:start="173:10" pos:end="173:14"><name pos:start="173:10" pos:end="173:10">i</name> <operator pos:start="173:12" pos:end="173:12">=</operator> <literal type="number" pos:start="173:14" pos:end="173:14">0</literal></expr>;</init> <condition pos:start="173:17" pos:end="173:35"><expr pos:start="173:17" pos:end="173:34"><name pos:start="173:17" pos:end="173:17">i</name> <operator pos:start="173:19" pos:end="173:19">&lt;</operator> <name pos:start="173:21" pos:end="173:34"><name pos:start="173:21" pos:end="173:22">ic</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:34">nb_streams</name></name></expr>;</condition> <incr pos:start="173:37" pos:end="173:39"><expr pos:start="173:37" pos:end="173:39"><name pos:start="173:37" pos:end="173:37">i</name><operator pos:start="173:38" pos:end="173:39">++</operator></expr></incr>)</control> <block pos:start="173:42" pos:end="191:5">{<block_content pos:start="175:9" pos:end="189:47">

        <decl_stmt pos:start="175:9" pos:end="175:14"><decl pos:start="175:9" pos:end="175:13"><type pos:start="175:9" pos:end="175:11"><name pos:start="175:9" pos:end="175:11">int</name></type> <name pos:start="175:13" pos:end="175:13">j</name></decl>;</decl_stmt>



        <expr_stmt pos:start="179:9" pos:end="179:41"><expr pos:start="179:9" pos:end="179:40"><name pos:start="179:9" pos:end="179:10">st</name>              <operator pos:start="179:25" pos:end="179:25">=</operator> <name pos:start="179:27" pos:end="179:40"><name pos:start="179:27" pos:end="179:28">ic</name><operator pos:start="179:29" pos:end="179:30">-&gt;</operator><name pos:start="179:31" pos:end="179:37">streams</name><index pos:start="179:38" pos:end="179:40">[<expr pos:start="179:39" pos:end="179:39"><name pos:start="179:39" pos:end="179:39">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="181:9" pos:end="181:40"><expr pos:start="181:9" pos:end="181:39"><name pos:start="181:9" pos:end="181:19"><name pos:start="181:9" pos:end="181:10">st</name><operator pos:start="181:11" pos:end="181:12">-&gt;</operator><name pos:start="181:13" pos:end="181:19">cur_dts</name></name>     <operator pos:start="181:25" pos:end="181:25">=</operator> <name pos:start="181:27" pos:end="181:39"><name pos:start="181:27" pos:end="181:28">st</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:39">first_dts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="183:41"><expr pos:start="183:9" pos:end="183:40"><name pos:start="183:9" pos:end="183:23"><name pos:start="183:9" pos:end="183:10">st</name><operator pos:start="183:11" pos:end="183:12">-&gt;</operator><name pos:start="183:13" pos:end="183:23">last_IP_pts</name></name> <operator pos:start="183:25" pos:end="183:25">=</operator> <name pos:start="183:27" pos:end="183:40">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="185:9" pos:end="185:54"><expr pos:start="185:9" pos:end="185:53"><name pos:start="185:9" pos:end="185:36"><name pos:start="185:9" pos:end="185:10">st</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:36">last_dts_for_order_check</name></name> <operator pos:start="185:38" pos:end="185:38">=</operator> <name pos:start="185:40" pos:end="185:53">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

        <for pos:start="187:9" pos:end="189:47">for <control pos:start="187:13" pos:end="187:51">(<init pos:start="187:14" pos:end="187:19"><expr pos:start="187:14" pos:end="187:18"><name pos:start="187:14" pos:end="187:14">j</name> <operator pos:start="187:16" pos:end="187:16">=</operator> <literal type="number" pos:start="187:18" pos:end="187:18">0</literal></expr>;</init> <condition pos:start="187:21" pos:end="187:46"><expr pos:start="187:21" pos:end="187:45"><name pos:start="187:21" pos:end="187:21">j</name> <operator pos:start="187:23" pos:end="187:23">&lt;</operator> <name pos:start="187:25" pos:end="187:41">MAX_REORDER_DELAY</name> <operator pos:start="187:43" pos:end="187:43">+</operator> <literal type="number" pos:start="187:45" pos:end="187:45">1</literal></expr>;</condition> <incr pos:start="187:48" pos:end="187:50"><expr pos:start="187:48" pos:end="187:50"><name pos:start="187:48" pos:end="187:48">j</name><operator pos:start="187:49" pos:end="187:50">++</operator></expr></incr>)</control><block type="pseudo" pos:start="189:13" pos:end="189:47"><block_content pos:start="189:13" pos:end="189:47">

            <expr_stmt pos:start="189:13" pos:end="189:47"><expr pos:start="189:13" pos:end="189:46"><name pos:start="189:13" pos:end="189:29"><name pos:start="189:13" pos:end="189:14">st</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:26">pts_buffer</name><index pos:start="189:27" pos:end="189:29">[<expr pos:start="189:28" pos:end="189:28"><name pos:start="189:28" pos:end="189:28">j</name></expr>]</index></name> <operator pos:start="189:31" pos:end="189:31">=</operator> <name pos:start="189:33" pos:end="189:46">AV_NOPTS_VALUE</name></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
