<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23501.c" pos:tabs="8"><function pos:start="1:1" pos:end="245:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">openpic_init</name><parameter_list pos:start="1:24" pos:end="1:42">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">SysBusDevice</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="245:1">{<block_content pos:start="5:5" pos:end="243:13">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">OpenPICState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">opp</name> <init pos:start="5:23" pos:end="5:55">= <expr pos:start="5:25" pos:end="5:55"><call pos:start="5:25" pos:end="5:55"><name pos:start="5:25" pos:end="5:35">FROM_SYSBUS</name><argument_list pos:start="5:36" pos:end="5:55">(<argument pos:start="5:37" pos:end="5:49"><expr pos:start="5:37" pos:end="5:49"><call pos:start="5:37" pos:end="5:49"><name pos:start="5:37" pos:end="5:42">typeof</name> <argument_list pos:start="5:44" pos:end="5:49">(<argument pos:start="5:45" pos:end="5:48"><expr pos:start="5:45" pos:end="5:48"><operator pos:start="5:45" pos:end="5:45">*</operator><name pos:start="5:46" pos:end="5:48">opp</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="5:52" pos:end="5:54"><expr pos:start="5:52" pos:end="5:54"><name pos:start="5:52" pos:end="5:54">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:12"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:12">j</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="31:6"><decl pos:start="9:5" pos:end="31:5"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">MemReg</name></type> <name pos:start="9:12" pos:end="9:20"><name pos:start="9:12" pos:end="9:18">list_le</name><index pos:start="9:19" pos:end="9:20">[]</index></name> <init pos:start="9:22" pos:end="31:5">= <expr pos:start="9:24" pos:end="31:5"><block pos:start="9:24" pos:end="31:5">{

        <expr pos:start="11:9" pos:end="13:60"><block pos:start="11:9" pos:end="13:60">{<expr pos:start="11:10" pos:end="11:14"><literal type="string" pos:start="11:10" pos:end="11:14">"glb"</literal></expr>, <expr pos:start="11:17" pos:end="11:35"><operator pos:start="11:17" pos:end="11:17">&amp;</operator><name pos:start="11:18" pos:end="11:35">openpic_glb_ops_le</name></expr>, <expr pos:start="11:38" pos:end="11:41"><name pos:start="11:38" pos:end="11:41">true</name></expr>,

                <expr pos:start="13:17" pos:end="13:37"><name pos:start="13:17" pos:end="13:37">OPENPIC_GLB_REG_START</name></expr>, <expr pos:start="13:40" pos:end="13:59"><name pos:start="13:40" pos:end="13:59">OPENPIC_GLB_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="15:9" pos:end="17:60"><block pos:start="15:9" pos:end="17:60">{<expr pos:start="15:10" pos:end="15:14"><literal type="string" pos:start="15:10" pos:end="15:14">"tmr"</literal></expr>, <expr pos:start="15:17" pos:end="15:35"><operator pos:start="15:17" pos:end="15:17">&amp;</operator><name pos:start="15:18" pos:end="15:35">openpic_tmr_ops_le</name></expr>, <expr pos:start="15:38" pos:end="15:41"><name pos:start="15:38" pos:end="15:41">true</name></expr>,

                <expr pos:start="17:17" pos:end="17:37"><name pos:start="17:17" pos:end="17:37">OPENPIC_TMR_REG_START</name></expr>, <expr pos:start="17:40" pos:end="17:59"><name pos:start="17:40" pos:end="17:59">OPENPIC_TMR_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="19:9" pos:end="21:60"><block pos:start="19:9" pos:end="21:60">{<expr pos:start="19:10" pos:end="19:14"><literal type="string" pos:start="19:10" pos:end="19:14">"msi"</literal></expr>, <expr pos:start="19:17" pos:end="19:35"><operator pos:start="19:17" pos:end="19:17">&amp;</operator><name pos:start="19:18" pos:end="19:35">openpic_msi_ops_le</name></expr>, <expr pos:start="19:38" pos:end="19:41"><name pos:start="19:38" pos:end="19:41">true</name></expr>,

                <expr pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:37">OPENPIC_MSI_REG_START</name></expr>, <expr pos:start="21:40" pos:end="21:59"><name pos:start="21:40" pos:end="21:59">OPENPIC_MSI_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="23:9" pos:end="25:60"><block pos:start="23:9" pos:end="25:60">{<expr pos:start="23:10" pos:end="23:14"><literal type="string" pos:start="23:10" pos:end="23:14">"src"</literal></expr>, <expr pos:start="23:17" pos:end="23:35"><operator pos:start="23:17" pos:end="23:17">&amp;</operator><name pos:start="23:18" pos:end="23:35">openpic_src_ops_le</name></expr>, <expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">true</name></expr>,

                <expr pos:start="25:17" pos:end="25:37"><name pos:start="25:17" pos:end="25:37">OPENPIC_SRC_REG_START</name></expr>, <expr pos:start="25:40" pos:end="25:59"><name pos:start="25:40" pos:end="25:59">OPENPIC_SRC_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="27:9" pos:end="29:60"><block pos:start="27:9" pos:end="29:60">{<expr pos:start="27:10" pos:end="27:14"><literal type="string" pos:start="27:10" pos:end="27:14">"cpu"</literal></expr>, <expr pos:start="27:17" pos:end="27:35"><operator pos:start="27:17" pos:end="27:17">&amp;</operator><name pos:start="27:18" pos:end="27:35">openpic_cpu_ops_le</name></expr>, <expr pos:start="27:38" pos:end="27:41"><name pos:start="27:38" pos:end="27:41">true</name></expr>,

                <expr pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:37">OPENPIC_CPU_REG_START</name></expr>, <expr pos:start="29:40" pos:end="29:59"><name pos:start="29:40" pos:end="29:59">OPENPIC_CPU_REG_SIZE</name></expr>}</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="55:6"><decl pos:start="33:5" pos:end="55:5"><type pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:10">MemReg</name></type> <name pos:start="33:12" pos:end="33:20"><name pos:start="33:12" pos:end="33:18">list_be</name><index pos:start="33:19" pos:end="33:20">[]</index></name> <init pos:start="33:22" pos:end="55:5">= <expr pos:start="33:24" pos:end="55:5"><block pos:start="33:24" pos:end="55:5">{

        <expr pos:start="35:9" pos:end="37:60"><block pos:start="35:9" pos:end="37:60">{<expr pos:start="35:10" pos:end="35:14"><literal type="string" pos:start="35:10" pos:end="35:14">"glb"</literal></expr>, <expr pos:start="35:17" pos:end="35:35"><operator pos:start="35:17" pos:end="35:17">&amp;</operator><name pos:start="35:18" pos:end="35:35">openpic_glb_ops_be</name></expr>, <expr pos:start="35:38" pos:end="35:41"><name pos:start="35:38" pos:end="35:41">true</name></expr>,

                <expr pos:start="37:17" pos:end="37:37"><name pos:start="37:17" pos:end="37:37">OPENPIC_GLB_REG_START</name></expr>, <expr pos:start="37:40" pos:end="37:59"><name pos:start="37:40" pos:end="37:59">OPENPIC_GLB_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="39:9" pos:end="41:60"><block pos:start="39:9" pos:end="41:60">{<expr pos:start="39:10" pos:end="39:14"><literal type="string" pos:start="39:10" pos:end="39:14">"tmr"</literal></expr>, <expr pos:start="39:17" pos:end="39:35"><operator pos:start="39:17" pos:end="39:17">&amp;</operator><name pos:start="39:18" pos:end="39:35">openpic_tmr_ops_be</name></expr>, <expr pos:start="39:38" pos:end="39:41"><name pos:start="39:38" pos:end="39:41">true</name></expr>,

                <expr pos:start="41:17" pos:end="41:37"><name pos:start="41:17" pos:end="41:37">OPENPIC_TMR_REG_START</name></expr>, <expr pos:start="41:40" pos:end="41:59"><name pos:start="41:40" pos:end="41:59">OPENPIC_TMR_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="43:9" pos:end="45:60"><block pos:start="43:9" pos:end="45:60">{<expr pos:start="43:10" pos:end="43:14"><literal type="string" pos:start="43:10" pos:end="43:14">"msi"</literal></expr>, <expr pos:start="43:17" pos:end="43:35"><operator pos:start="43:17" pos:end="43:17">&amp;</operator><name pos:start="43:18" pos:end="43:35">openpic_msi_ops_be</name></expr>, <expr pos:start="43:38" pos:end="43:41"><name pos:start="43:38" pos:end="43:41">true</name></expr>,

                <expr pos:start="45:17" pos:end="45:37"><name pos:start="45:17" pos:end="45:37">OPENPIC_MSI_REG_START</name></expr>, <expr pos:start="45:40" pos:end="45:59"><name pos:start="45:40" pos:end="45:59">OPENPIC_MSI_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="47:9" pos:end="49:60"><block pos:start="47:9" pos:end="49:60">{<expr pos:start="47:10" pos:end="47:14"><literal type="string" pos:start="47:10" pos:end="47:14">"src"</literal></expr>, <expr pos:start="47:17" pos:end="47:35"><operator pos:start="47:17" pos:end="47:17">&amp;</operator><name pos:start="47:18" pos:end="47:35">openpic_src_ops_be</name></expr>, <expr pos:start="47:38" pos:end="47:41"><name pos:start="47:38" pos:end="47:41">true</name></expr>,

                <expr pos:start="49:17" pos:end="49:37"><name pos:start="49:17" pos:end="49:37">OPENPIC_SRC_REG_START</name></expr>, <expr pos:start="49:40" pos:end="49:59"><name pos:start="49:40" pos:end="49:59">OPENPIC_SRC_REG_SIZE</name></expr>}</block></expr>,

        <expr pos:start="51:9" pos:end="53:60"><block pos:start="51:9" pos:end="53:60">{<expr pos:start="51:10" pos:end="51:14"><literal type="string" pos:start="51:10" pos:end="51:14">"cpu"</literal></expr>, <expr pos:start="51:17" pos:end="51:35"><operator pos:start="51:17" pos:end="51:17">&amp;</operator><name pos:start="51:18" pos:end="51:35">openpic_cpu_ops_be</name></expr>, <expr pos:start="51:38" pos:end="51:41"><name pos:start="51:38" pos:end="51:41">true</name></expr>,

                <expr pos:start="53:17" pos:end="53:37"><name pos:start="53:17" pos:end="53:37">OPENPIC_CPU_REG_START</name></expr>, <expr pos:start="53:40" pos:end="53:59"><name pos:start="53:40" pos:end="53:59">OPENPIC_CPU_REG_SIZE</name></expr>}</block></expr>,

    }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:17"><decl pos:start="57:5" pos:end="57:16"><type pos:start="57:5" pos:end="57:12"><name pos:start="57:5" pos:end="57:10">MemReg</name> <modifier pos:start="57:12" pos:end="57:12">*</modifier></type><name pos:start="57:13" pos:end="57:16">list</name></decl>;</decl_stmt>



    <switch pos:start="61:5" pos:end="185:5">switch <condition pos:start="61:12" pos:end="61:23">(<expr pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:15">opp</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">model</name></name></expr>)</condition> <block pos:start="61:25" pos:end="185:5">{<block_content pos:start="63:5" pos:end="183:14">

    <case pos:start="63:5" pos:end="63:35">case <expr pos:start="63:10" pos:end="63:34"><name pos:start="63:10" pos:end="63:34">OPENPIC_MODEL_FSL_MPIC_20</name></expr>:</case>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:44"><expr pos:start="67:9" pos:end="67:43"><name pos:start="67:9" pos:end="67:18"><name pos:start="67:9" pos:end="67:11">opp</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:18">flags</name></name> <operator pos:start="67:20" pos:end="67:21">|=</operator> <name pos:start="67:23" pos:end="67:43">OPENPIC_FLAG_IDR_CRIT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:20"><name pos:start="69:9" pos:end="69:11">opp</name><operator pos:start="69:12" pos:end="69:13">-&gt;</operator><name pos:start="69:14" pos:end="69:20">nb_irqs</name></name> <operator pos:start="69:22" pos:end="69:22">=</operator> <literal type="number" pos:start="69:24" pos:end="69:25">80</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:36"><expr pos:start="71:9" pos:end="71:35"><name pos:start="71:9" pos:end="71:16"><name pos:start="71:9" pos:end="71:11">opp</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:16">vid</name></name> <operator pos:start="71:18" pos:end="71:18">=</operator> <name pos:start="71:20" pos:end="71:35">VID_REVISION_1_2</name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:31"><expr pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:16"><name pos:start="73:9" pos:end="73:11">opp</name><operator pos:start="73:12" pos:end="73:13">-&gt;</operator><name pos:start="73:14" pos:end="73:16">vir</name></name> <operator pos:start="73:18" pos:end="73:18">=</operator> <name pos:start="73:20" pos:end="73:30">VIR_GENERIC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">opp</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:24">vector_mask</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <literal type="number" pos:start="75:28" pos:end="75:33">0xFFFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:28"><expr pos:start="77:9" pos:end="77:27"><name pos:start="77:9" pos:end="77:23"><name pos:start="77:9" pos:end="77:11">opp</name><operator pos:start="77:12" pos:end="77:13">-&gt;</operator><name pos:start="77:14" pos:end="77:23">tfrr_reset</name></name> <operator pos:start="77:25" pos:end="77:25">=</operator> <literal type="number" pos:start="77:27" pos:end="77:27">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:11">opp</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:23">ivpr_reset</name></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:40">IVPR_MASK_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:32"><expr pos:start="81:9" pos:end="81:31"><name pos:start="81:9" pos:end="81:22"><name pos:start="81:9" pos:end="81:11">opp</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:22">idr_reset</name></name> <operator pos:start="81:24" pos:end="81:24">=</operator> <literal type="number" pos:start="81:26" pos:end="81:26">1</literal> <operator pos:start="81:28" pos:end="81:29">&lt;&lt;</operator> <literal type="number" pos:start="81:31" pos:end="81:31">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:43"><expr pos:start="83:9" pos:end="83:42"><name pos:start="83:9" pos:end="83:20"><name pos:start="83:9" pos:end="83:11">opp</name><operator pos:start="83:12" pos:end="83:13">-&gt;</operator><name pos:start="83:14" pos:end="83:20">max_irq</name></name> <operator pos:start="83:22" pos:end="83:22">=</operator> <name pos:start="83:24" pos:end="83:42">FSL_MPIC_20_MAX_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:44"><expr pos:start="85:9" pos:end="85:43"><name pos:start="85:9" pos:end="85:21"><name pos:start="85:9" pos:end="85:11">opp</name><operator pos:start="85:12" pos:end="85:13">-&gt;</operator><name pos:start="85:14" pos:end="85:21">irq_ipi0</name></name> <operator pos:start="85:23" pos:end="85:23">=</operator> <name pos:start="85:25" pos:end="85:43">FSL_MPIC_20_IPI_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:44"><expr pos:start="87:9" pos:end="87:43"><name pos:start="87:9" pos:end="87:21"><name pos:start="87:9" pos:end="87:11">opp</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:21">irq_tim0</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:43">FSL_MPIC_20_TMR_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:43"><expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:11">opp</name><operator pos:start="89:12" pos:end="89:13">-&gt;</operator><name pos:start="89:14" pos:end="89:20">irq_msi</name></name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:42">FSL_MPIC_20_MSI_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:66"><expr pos:start="91:9" pos:end="91:65"><name pos:start="91:9" pos:end="91:17"><name pos:start="91:9" pos:end="91:11">opp</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:17">brr1</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <name pos:start="91:21" pos:end="91:33">FSL_BRR1_IPID</name> <operator pos:start="91:35" pos:end="91:35">|</operator> <name pos:start="91:37" pos:end="91:49">FSL_BRR1_IPMJ</name> <operator pos:start="91:51" pos:end="91:51">|</operator> <name pos:start="91:53" pos:end="91:65">FSL_BRR1_IPMN</name></expr>;</expr_stmt>

        <comment type="block" pos:start="93:9" pos:end="93:54">/* XXX really only available as of MPIC 4.0 */</comment>

        <expr_stmt pos:start="95:9" pos:end="95:45"><expr pos:start="95:9" pos:end="95:44"><name pos:start="95:9" pos:end="95:27"><name pos:start="95:9" pos:end="95:11">opp</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:27">mpic_mode_mask</name></name> <operator pos:start="95:29" pos:end="95:29">=</operator> <name pos:start="95:31" pos:end="95:44">GCR_MODE_PROXY</name></expr>;</expr_stmt>



        <expr_stmt pos:start="99:9" pos:end="99:29"><expr pos:start="99:9" pos:end="99:28"><name pos:start="99:9" pos:end="99:21">msi_supported</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <name pos:start="99:25" pos:end="99:28">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:23"><expr pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:12">list</name> <operator pos:start="101:14" pos:end="101:14">=</operator> <name pos:start="101:16" pos:end="101:22">list_be</name></expr>;</expr_stmt>



        <for pos:start="105:9" pos:end="109:9">for <control pos:start="105:13" pos:end="105:49">(<init pos:start="105:14" pos:end="105:19"><expr pos:start="105:14" pos:end="105:18"><name pos:start="105:14" pos:end="105:14">i</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <literal type="number" pos:start="105:18" pos:end="105:18">0</literal></expr>;</init> <condition pos:start="105:21" pos:end="105:44"><expr pos:start="105:21" pos:end="105:43"><name pos:start="105:21" pos:end="105:21">i</name> <operator pos:start="105:23" pos:end="105:23">&lt;</operator> <name pos:start="105:25" pos:end="105:43">FSL_MPIC_20_MAX_EXT</name></expr>;</condition> <incr pos:start="105:46" pos:end="105:48"><expr pos:start="105:46" pos:end="105:48"><name pos:start="105:46" pos:end="105:46">i</name><operator pos:start="105:47" pos:end="105:48">++</operator></expr></incr>)</control> <block pos:start="105:51" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:38">

            <expr_stmt pos:start="107:13" pos:end="107:38"><expr pos:start="107:13" pos:end="107:37"><name pos:start="107:13" pos:end="107:23"><name pos:start="107:13" pos:end="107:15">opp</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:20">src</name><index pos:start="107:21" pos:end="107:23">[<expr pos:start="107:22" pos:end="107:22"><name pos:start="107:22" pos:end="107:22">i</name></expr>]</index></name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:29">level</name> <operator pos:start="107:31" pos:end="107:31">=</operator> <name pos:start="107:33" pos:end="107:37">false</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="113:9" pos:end="113:60">/* Internal interrupts, including message and MSI */</comment>

        <for pos:start="115:9" pos:end="121:9">for <control pos:start="115:13" pos:end="115:38">(<init pos:start="115:14" pos:end="115:20"><expr pos:start="115:14" pos:end="115:19"><name pos:start="115:14" pos:end="115:14">i</name> <operator pos:start="115:16" pos:end="115:16">=</operator> <literal type="number" pos:start="115:18" pos:end="115:19">16</literal></expr>;</init> <condition pos:start="115:22" pos:end="115:33"><expr pos:start="115:22" pos:end="115:32"><name pos:start="115:22" pos:end="115:22">i</name> <operator pos:start="115:24" pos:end="115:24">&lt;</operator> <name pos:start="115:26" pos:end="115:32">MAX_SRC</name></expr>;</condition> <incr pos:start="115:35" pos:end="115:37"><expr pos:start="115:35" pos:end="115:37"><name pos:start="115:35" pos:end="115:35">i</name><operator pos:start="115:36" pos:end="115:37">++</operator></expr></incr>)</control> <block pos:start="115:40" pos:end="121:9">{<block_content pos:start="117:13" pos:end="119:37">

            <expr_stmt pos:start="117:13" pos:end="117:47"><expr pos:start="117:13" pos:end="117:46"><name pos:start="117:13" pos:end="117:23"><name pos:start="117:13" pos:end="117:15">opp</name><operator pos:start="117:16" pos:end="117:17">-&gt;</operator><name pos:start="117:18" pos:end="117:20">src</name><index pos:start="117:21" pos:end="117:23">[<expr pos:start="117:22" pos:end="117:22"><name pos:start="117:22" pos:end="117:22">i</name></expr>]</index></name><operator pos:start="117:24" pos:end="117:24">.</operator><name pos:start="117:25" pos:end="117:28">type</name> <operator pos:start="117:30" pos:end="117:30">=</operator> <name pos:start="117:32" pos:end="117:46">IRQ_TYPE_FSLINT</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:37"><expr pos:start="119:13" pos:end="119:36"><name pos:start="119:13" pos:end="119:23"><name pos:start="119:13" pos:end="119:15">opp</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:20">src</name><index pos:start="119:21" pos:end="119:23">[<expr pos:start="119:22" pos:end="119:22"><name pos:start="119:22" pos:end="119:22">i</name></expr>]</index></name><operator pos:start="119:24" pos:end="119:24">.</operator><name pos:start="119:25" pos:end="119:29">level</name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:36">true</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <comment type="block" pos:start="125:9" pos:end="125:29">/* timers and IPIs */</comment>

        <for pos:start="127:9" pos:end="133:9">for <control pos:start="127:13" pos:end="127:43">(<init pos:start="127:14" pos:end="127:25"><expr pos:start="127:14" pos:end="127:24"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <name pos:start="127:18" pos:end="127:24">MAX_SRC</name></expr>;</init> <condition pos:start="127:27" pos:end="127:38"><expr pos:start="127:27" pos:end="127:37"><name pos:start="127:27" pos:end="127:27">i</name> <operator pos:start="127:29" pos:end="127:29">&lt;</operator> <name pos:start="127:31" pos:end="127:37">MAX_IRQ</name></expr>;</condition> <incr pos:start="127:40" pos:end="127:42"><expr pos:start="127:40" pos:end="127:42"><name pos:start="127:40" pos:end="127:40">i</name><operator pos:start="127:41" pos:end="127:42">++</operator></expr></incr>)</control> <block pos:start="127:45" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:38">

            <expr_stmt pos:start="129:13" pos:end="129:51"><expr pos:start="129:13" pos:end="129:50"><name pos:start="129:13" pos:end="129:23"><name pos:start="129:13" pos:end="129:15">opp</name><operator pos:start="129:16" pos:end="129:17">-&gt;</operator><name pos:start="129:18" pos:end="129:20">src</name><index pos:start="129:21" pos:end="129:23">[<expr pos:start="129:22" pos:end="129:22"><name pos:start="129:22" pos:end="129:22">i</name></expr>]</index></name><operator pos:start="129:24" pos:end="129:24">.</operator><name pos:start="129:25" pos:end="129:28">type</name> <operator pos:start="129:30" pos:end="129:30">=</operator> <name pos:start="129:32" pos:end="129:50">IRQ_TYPE_FSLSPECIAL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:38"><expr pos:start="131:13" pos:end="131:37"><name pos:start="131:13" pos:end="131:23"><name pos:start="131:13" pos:end="131:15">opp</name><operator pos:start="131:16" pos:end="131:17">-&gt;</operator><name pos:start="131:18" pos:end="131:20">src</name><index pos:start="131:21" pos:end="131:23">[<expr pos:start="131:22" pos:end="131:22"><name pos:start="131:22" pos:end="131:22">i</name></expr>]</index></name><operator pos:start="131:24" pos:end="131:24">.</operator><name pos:start="131:25" pos:end="131:29">level</name> <operator pos:start="131:31" pos:end="131:31">=</operator> <name pos:start="131:33" pos:end="131:37">false</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <break pos:start="137:9" pos:end="137:14">break;</break>



    <case pos:start="141:5" pos:end="141:29">case <expr pos:start="141:10" pos:end="141:28"><name pos:start="141:10" pos:end="141:28">OPENPIC_MODEL_RAVEN</name></expr>:</case>

        <expr_stmt pos:start="143:9" pos:end="143:37"><expr pos:start="143:9" pos:end="143:36"><name pos:start="143:9" pos:end="143:20"><name pos:start="143:9" pos:end="143:11">opp</name><operator pos:start="143:12" pos:end="143:13">-&gt;</operator><name pos:start="143:14" pos:end="143:20">nb_irqs</name></name> <operator pos:start="143:22" pos:end="143:22">=</operator> <name pos:start="143:24" pos:end="143:36">RAVEN_MAX_EXT</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:36"><expr pos:start="145:9" pos:end="145:35"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:11">opp</name><operator pos:start="145:12" pos:end="145:13">-&gt;</operator><name pos:start="145:14" pos:end="145:16">vid</name></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <name pos:start="145:20" pos:end="145:35">VID_REVISION_1_3</name></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:31"><expr pos:start="147:9" pos:end="147:30"><name pos:start="147:9" pos:end="147:16"><name pos:start="147:9" pos:end="147:11">opp</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:16">vir</name></name> <operator pos:start="147:18" pos:end="147:18">=</operator> <name pos:start="147:20" pos:end="147:30">VIR_GENERIC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="149:9" pos:end="149:32"><expr pos:start="149:9" pos:end="149:31"><name pos:start="149:9" pos:end="149:24"><name pos:start="149:9" pos:end="149:11">opp</name><operator pos:start="149:12" pos:end="149:13">-&gt;</operator><name pos:start="149:14" pos:end="149:24">vector_mask</name></name> <operator pos:start="149:26" pos:end="149:26">=</operator> <literal type="number" pos:start="149:28" pos:end="149:31">0xFF</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="151:9" pos:end="151:34"><expr pos:start="151:9" pos:end="151:33"><name pos:start="151:9" pos:end="151:23"><name pos:start="151:9" pos:end="151:11">opp</name><operator pos:start="151:12" pos:end="151:13">-&gt;</operator><name pos:start="151:14" pos:end="151:23">tfrr_reset</name></name> <operator pos:start="151:25" pos:end="151:25">=</operator> <literal type="number" pos:start="151:27" pos:end="151:33">4160000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:58"><expr pos:start="153:9" pos:end="153:57"><name pos:start="153:9" pos:end="153:23"><name pos:start="153:9" pos:end="153:11">opp</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:23">ivpr_reset</name></name> <operator pos:start="153:25" pos:end="153:25">=</operator> <name pos:start="153:27" pos:end="153:40">IVPR_MASK_MASK</name> <operator pos:start="153:42" pos:end="153:42">|</operator> <name pos:start="153:44" pos:end="153:57">IVPR_MODE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:27"><expr pos:start="155:9" pos:end="155:26"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:11">opp</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:22">idr_reset</name></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <literal type="number" pos:start="155:26" pos:end="155:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:37"><expr pos:start="157:9" pos:end="157:36"><name pos:start="157:9" pos:end="157:20"><name pos:start="157:9" pos:end="157:11">opp</name><operator pos:start="157:12" pos:end="157:13">-&gt;</operator><name pos:start="157:14" pos:end="157:20">max_irq</name></name> <operator pos:start="157:22" pos:end="157:22">=</operator> <name pos:start="157:24" pos:end="157:36">RAVEN_MAX_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:38"><expr pos:start="159:9" pos:end="159:37"><name pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:11">opp</name><operator pos:start="159:12" pos:end="159:13">-&gt;</operator><name pos:start="159:14" pos:end="159:21">irq_ipi0</name></name> <operator pos:start="159:23" pos:end="159:23">=</operator> <name pos:start="159:25" pos:end="159:37">RAVEN_IPI_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:38"><expr pos:start="161:9" pos:end="161:37"><name pos:start="161:9" pos:end="161:21"><name pos:start="161:9" pos:end="161:11">opp</name><operator pos:start="161:12" pos:end="161:13">-&gt;</operator><name pos:start="161:14" pos:end="161:21">irq_tim0</name></name> <operator pos:start="161:23" pos:end="161:23">=</operator> <name pos:start="161:25" pos:end="161:37">RAVEN_TMR_IRQ</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:23"><expr pos:start="163:9" pos:end="163:22"><name pos:start="163:9" pos:end="163:17"><name pos:start="163:9" pos:end="163:11">opp</name><operator pos:start="163:12" pos:end="163:13">-&gt;</operator><name pos:start="163:14" pos:end="163:17">brr1</name></name> <operator pos:start="163:19" pos:end="163:19">=</operator> <operator pos:start="163:21" pos:end="163:21">-</operator><literal type="number" pos:start="163:22" pos:end="163:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:45"><expr pos:start="165:9" pos:end="165:44"><name pos:start="165:9" pos:end="165:27"><name pos:start="165:9" pos:end="165:11">opp</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:27">mpic_mode_mask</name></name> <operator pos:start="165:29" pos:end="165:29">=</operator> <name pos:start="165:31" pos:end="165:44">GCR_MODE_MIXED</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:23"><expr pos:start="167:9" pos:end="167:22"><name pos:start="167:9" pos:end="167:12">list</name> <operator pos:start="167:14" pos:end="167:14">=</operator> <name pos:start="167:16" pos:end="167:22">list_le</name></expr>;</expr_stmt>

        <comment type="block" pos:start="169:9" pos:end="169:34">/* Don't map MSI region */</comment>

        <expr_stmt pos:start="171:9" pos:end="171:28"><expr pos:start="171:9" pos:end="171:27"><name pos:start="171:9" pos:end="171:15"><name pos:start="171:9" pos:end="171:12">list</name><index pos:start="171:13" pos:end="171:15">[<expr pos:start="171:14" pos:end="171:14"><literal type="number" pos:start="171:14" pos:end="171:14">2</literal></expr>]</index></name><operator pos:start="171:16" pos:end="171:16">.</operator><name pos:start="171:17" pos:end="171:19">map</name> <operator pos:start="171:21" pos:end="171:21">=</operator> <name pos:start="171:23" pos:end="171:27">false</name></expr>;</expr_stmt>



        <comment type="block" pos:start="175:9" pos:end="175:37">/* Only UP supported today */</comment>

        <if_stmt pos:start="177:9" pos:end="181:9"><if pos:start="177:9" pos:end="181:9">if <condition pos:start="177:12" pos:end="177:30">(<expr pos:start="177:13" pos:end="177:29"><name pos:start="177:13" pos:end="177:24"><name pos:start="177:13" pos:end="177:15">opp</name><operator pos:start="177:16" pos:end="177:17">-&gt;</operator><name pos:start="177:18" pos:end="177:24">nb_cpus</name></name> <operator pos:start="177:26" pos:end="177:27">!=</operator> <literal type="number" pos:start="177:29" pos:end="177:29">1</literal></expr>)</condition> <block pos:start="177:32" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:27">

            <return pos:start="179:13" pos:end="179:27">return <expr pos:start="179:20" pos:end="179:26"><operator pos:start="179:20" pos:end="179:20">-</operator><name pos:start="179:21" pos:end="179:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <break pos:start="183:9" pos:end="183:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="189:5" pos:end="189:54"><expr pos:start="189:5" pos:end="189:53"><call pos:start="189:5" pos:end="189:53"><name pos:start="189:5" pos:end="189:22">memory_region_init</name><argument_list pos:start="189:23" pos:end="189:53">(<argument pos:start="189:24" pos:end="189:32"><expr pos:start="189:24" pos:end="189:32"><operator pos:start="189:24" pos:end="189:24">&amp;</operator><name pos:start="189:25" pos:end="189:32"><name pos:start="189:25" pos:end="189:27">opp</name><operator pos:start="189:28" pos:end="189:29">-&gt;</operator><name pos:start="189:30" pos:end="189:32">mem</name></name></expr></argument>, <argument pos:start="189:35" pos:end="189:43"><expr pos:start="189:35" pos:end="189:43"><literal type="string" pos:start="189:35" pos:end="189:43">"openpic"</literal></expr></argument>, <argument pos:start="189:46" pos:end="189:52"><expr pos:start="189:46" pos:end="189:52"><literal type="number" pos:start="189:46" pos:end="189:52">0x40000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="193:5" pos:end="213:5">for <control pos:start="193:9" pos:end="193:45">(<init pos:start="193:10" pos:end="193:15"><expr pos:start="193:10" pos:end="193:14"><name pos:start="193:10" pos:end="193:10">i</name> <operator pos:start="193:12" pos:end="193:12">=</operator> <literal type="number" pos:start="193:14" pos:end="193:14">0</literal></expr>;</init> <condition pos:start="193:17" pos:end="193:40"><expr pos:start="193:17" pos:end="193:39"><name pos:start="193:17" pos:end="193:17">i</name> <operator pos:start="193:19" pos:end="193:19">&lt;</operator> <call pos:start="193:21" pos:end="193:39"><name pos:start="193:21" pos:end="193:30">ARRAY_SIZE</name><argument_list pos:start="193:31" pos:end="193:39">(<argument pos:start="193:32" pos:end="193:38"><expr pos:start="193:32" pos:end="193:38"><name pos:start="193:32" pos:end="193:38">list_le</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="193:42" pos:end="193:44"><expr pos:start="193:42" pos:end="193:44"><name pos:start="193:42" pos:end="193:42">i</name><operator pos:start="193:43" pos:end="193:44">++</operator></expr></incr>)</control> <block pos:start="193:47" pos:end="213:5">{<block_content pos:start="195:9" pos:end="211:57">

        <if_stmt pos:start="195:9" pos:end="199:9"><if pos:start="195:9" pos:end="199:9">if <condition pos:start="195:12" pos:end="195:25">(<expr pos:start="195:13" pos:end="195:24"><operator pos:start="195:13" pos:end="195:13">!</operator><name pos:start="195:14" pos:end="195:20"><name pos:start="195:14" pos:end="195:17">list</name><index pos:start="195:18" pos:end="195:20">[<expr pos:start="195:19" pos:end="195:19"><name pos:start="195:19" pos:end="195:19">i</name></expr>]</index></name><operator pos:start="195:21" pos:end="195:21">.</operator><name pos:start="195:22" pos:end="195:24">map</name></expr>)</condition> <block pos:start="195:27" pos:end="199:9">{<block_content pos:start="197:13" pos:end="197:21">

            <continue pos:start="197:13" pos:end="197:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="203:9" pos:end="205:58"><expr pos:start="203:9" pos:end="205:57"><call pos:start="203:9" pos:end="205:57"><name pos:start="203:9" pos:end="203:29">memory_region_init_io</name><argument_list pos:start="203:30" pos:end="205:57">(<argument pos:start="203:31" pos:end="203:49"><expr pos:start="203:31" pos:end="203:49"><operator pos:start="203:31" pos:end="203:31">&amp;</operator><name pos:start="203:32" pos:end="203:49"><name pos:start="203:32" pos:end="203:34">opp</name><operator pos:start="203:35" pos:end="203:36">-&gt;</operator><name pos:start="203:37" pos:end="203:46">sub_io_mem</name><index pos:start="203:47" pos:end="203:49">[<expr pos:start="203:48" pos:end="203:48"><name pos:start="203:48" pos:end="203:48">i</name></expr>]</index></name></expr></argument>, <argument pos:start="203:52" pos:end="203:62"><expr pos:start="203:52" pos:end="203:62"><name pos:start="203:52" pos:end="203:58"><name pos:start="203:52" pos:end="203:55">list</name><index pos:start="203:56" pos:end="203:58">[<expr pos:start="203:57" pos:end="203:57"><name pos:start="203:57" pos:end="203:57">i</name></expr>]</index></name><operator pos:start="203:59" pos:end="203:59">.</operator><name pos:start="203:60" pos:end="203:62">ops</name></expr></argument>, <argument pos:start="203:65" pos:end="203:67"><expr pos:start="203:65" pos:end="203:67"><name pos:start="203:65" pos:end="203:67">opp</name></expr></argument>,

                              <argument pos:start="205:31" pos:end="205:42"><expr pos:start="205:31" pos:end="205:42"><name pos:start="205:31" pos:end="205:37"><name pos:start="205:31" pos:end="205:34">list</name><index pos:start="205:35" pos:end="205:37">[<expr pos:start="205:36" pos:end="205:36"><name pos:start="205:36" pos:end="205:36">i</name></expr>]</index></name><operator pos:start="205:38" pos:end="205:38">.</operator><name pos:start="205:39" pos:end="205:42">name</name></expr></argument>, <argument pos:start="205:45" pos:end="205:56"><expr pos:start="205:45" pos:end="205:56"><name pos:start="205:45" pos:end="205:51"><name pos:start="205:45" pos:end="205:48">list</name><index pos:start="205:49" pos:end="205:51">[<expr pos:start="205:50" pos:end="205:50"><name pos:start="205:50" pos:end="205:50">i</name></expr>]</index></name><operator pos:start="205:52" pos:end="205:52">.</operator><name pos:start="205:53" pos:end="205:56">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="209:9" pos:end="211:57"><expr pos:start="209:9" pos:end="211:56"><call pos:start="209:9" pos:end="211:56"><name pos:start="209:9" pos:end="209:35">memory_region_add_subregion</name><argument_list pos:start="209:36" pos:end="211:56">(<argument pos:start="209:37" pos:end="209:45"><expr pos:start="209:37" pos:end="209:45"><operator pos:start="209:37" pos:end="209:37">&amp;</operator><name pos:start="209:38" pos:end="209:45"><name pos:start="209:38" pos:end="209:40">opp</name><operator pos:start="209:41" pos:end="209:42">-&gt;</operator><name pos:start="209:43" pos:end="209:45">mem</name></name></expr></argument>, <argument pos:start="209:48" pos:end="209:65"><expr pos:start="209:48" pos:end="209:65"><name pos:start="209:48" pos:end="209:54"><name pos:start="209:48" pos:end="209:51">list</name><index pos:start="209:52" pos:end="209:54">[<expr pos:start="209:53" pos:end="209:53"><name pos:start="209:53" pos:end="209:53">i</name></expr>]</index></name><operator pos:start="209:55" pos:end="209:55">.</operator><name pos:start="209:56" pos:end="209:65">start_addr</name></expr></argument>,

                                    <argument pos:start="211:37" pos:end="211:55"><expr pos:start="211:37" pos:end="211:55"><operator pos:start="211:37" pos:end="211:37">&amp;</operator><name pos:start="211:38" pos:end="211:55"><name pos:start="211:38" pos:end="211:40">opp</name><operator pos:start="211:41" pos:end="211:42">-&gt;</operator><name pos:start="211:43" pos:end="211:52">sub_io_mem</name><index pos:start="211:53" pos:end="211:55">[<expr pos:start="211:54" pos:end="211:54"><name pos:start="211:54" pos:end="211:54">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <for pos:start="217:5" pos:end="227:5">for <control pos:start="217:9" pos:end="217:38">(<init pos:start="217:10" pos:end="217:15"><expr pos:start="217:10" pos:end="217:14"><name pos:start="217:10" pos:end="217:10">i</name> <operator pos:start="217:12" pos:end="217:12">=</operator> <literal type="number" pos:start="217:14" pos:end="217:14">0</literal></expr>;</init> <condition pos:start="217:17" pos:end="217:33"><expr pos:start="217:17" pos:end="217:32"><name pos:start="217:17" pos:end="217:17">i</name> <operator pos:start="217:19" pos:end="217:19">&lt;</operator> <name pos:start="217:21" pos:end="217:32"><name pos:start="217:21" pos:end="217:23">opp</name><operator pos:start="217:24" pos:end="217:25">-&gt;</operator><name pos:start="217:26" pos:end="217:32">nb_cpus</name></name></expr>;</condition> <incr pos:start="217:35" pos:end="217:37"><expr pos:start="217:35" pos:end="217:37"><name pos:start="217:35" pos:end="217:35">i</name><operator pos:start="217:36" pos:end="217:37">++</operator></expr></incr>)</control> <block pos:start="217:40" pos:end="227:5">{<block_content pos:start="219:9" pos:end="225:9">

        <expr_stmt pos:start="219:9" pos:end="219:62"><expr pos:start="219:9" pos:end="219:61"><name pos:start="219:9" pos:end="219:19"><name pos:start="219:9" pos:end="219:11">opp</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:16">dst</name><index pos:start="219:17" pos:end="219:19">[<expr pos:start="219:18" pos:end="219:18"><name pos:start="219:18" pos:end="219:18">i</name></expr>]</index></name><operator pos:start="219:20" pos:end="219:20">.</operator><name pos:start="219:21" pos:end="219:24">irqs</name> <operator pos:start="219:26" pos:end="219:26">=</operator> <call pos:start="219:28" pos:end="219:61"><name pos:start="219:28" pos:end="219:32">g_new</name><argument_list pos:start="219:33" pos:end="219:61">(<argument pos:start="219:34" pos:end="219:41"><expr pos:start="219:34" pos:end="219:41"><name pos:start="219:34" pos:end="219:41">qemu_irq</name></expr></argument>, <argument pos:start="219:44" pos:end="219:60"><expr pos:start="219:44" pos:end="219:60"><name pos:start="219:44" pos:end="219:60">OPENPIC_OUTPUT_NB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="221:9" pos:end="225:9">for <control pos:start="221:13" pos:end="221:47">(<init pos:start="221:14" pos:end="221:19"><expr pos:start="221:14" pos:end="221:18"><name pos:start="221:14" pos:end="221:14">j</name> <operator pos:start="221:16" pos:end="221:16">=</operator> <literal type="number" pos:start="221:18" pos:end="221:18">0</literal></expr>;</init> <condition pos:start="221:21" pos:end="221:42"><expr pos:start="221:21" pos:end="221:41"><name pos:start="221:21" pos:end="221:21">j</name> <operator pos:start="221:23" pos:end="221:23">&lt;</operator> <name pos:start="221:25" pos:end="221:41">OPENPIC_OUTPUT_NB</name></expr>;</condition> <incr pos:start="221:44" pos:end="221:46"><expr pos:start="221:44" pos:end="221:46"><name pos:start="221:44" pos:end="221:44">j</name><operator pos:start="221:45" pos:end="221:46">++</operator></expr></incr>)</control> <block pos:start="221:49" pos:end="225:9">{<block_content pos:start="223:13" pos:end="223:55">

            <expr_stmt pos:start="223:13" pos:end="223:55"><expr pos:start="223:13" pos:end="223:54"><call pos:start="223:13" pos:end="223:54"><name pos:start="223:13" pos:end="223:27">sysbus_init_irq</name><argument_list pos:start="223:28" pos:end="223:54">(<argument pos:start="223:29" pos:end="223:31"><expr pos:start="223:29" pos:end="223:31"><name pos:start="223:29" pos:end="223:31">dev</name></expr></argument>, <argument pos:start="223:34" pos:end="223:53"><expr pos:start="223:34" pos:end="223:53"><operator pos:start="223:34" pos:end="223:34">&amp;</operator><name pos:start="223:35" pos:end="223:45"><name pos:start="223:35" pos:end="223:37">opp</name><operator pos:start="223:38" pos:end="223:39">-&gt;</operator><name pos:start="223:40" pos:end="223:42">dst</name><index pos:start="223:43" pos:end="223:45">[<expr pos:start="223:44" pos:end="223:44"><name pos:start="223:44" pos:end="223:44">i</name></expr>]</index></name><operator pos:start="223:46" pos:end="223:46">.</operator><name pos:start="223:47" pos:end="223:53"><name pos:start="223:47" pos:end="223:50">irqs</name><index pos:start="223:51" pos:end="223:53">[<expr pos:start="223:52" pos:end="223:52"><name pos:start="223:52" pos:end="223:52">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></for>



    <expr_stmt pos:start="231:5" pos:end="233:53"><expr pos:start="231:5" pos:end="233:52"><call pos:start="231:5" pos:end="233:52"><name pos:start="231:5" pos:end="231:19">register_savevm</name><argument_list pos:start="231:20" pos:end="233:52">(<argument pos:start="231:21" pos:end="231:37"><expr pos:start="231:21" pos:end="231:37"><operator pos:start="231:21" pos:end="231:21">&amp;</operator><name pos:start="231:22" pos:end="231:37"><name pos:start="231:22" pos:end="231:24">opp</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:32">busdev</name><operator pos:start="231:33" pos:end="231:33">.</operator><name pos:start="231:34" pos:end="231:37">qdev</name></name></expr></argument>, <argument pos:start="231:40" pos:end="231:48"><expr pos:start="231:40" pos:end="231:48"><literal type="string" pos:start="231:40" pos:end="231:48">"openpic"</literal></expr></argument>, <argument pos:start="231:51" pos:end="231:51"><expr pos:start="231:51" pos:end="231:51"><literal type="number" pos:start="231:51" pos:end="231:51">0</literal></expr></argument>, <argument pos:start="231:54" pos:end="231:54"><expr pos:start="231:54" pos:end="231:54"><literal type="number" pos:start="231:54" pos:end="231:54">2</literal></expr></argument>,

                    <argument pos:start="233:21" pos:end="233:32"><expr pos:start="233:21" pos:end="233:32"><name pos:start="233:21" pos:end="233:32">openpic_save</name></expr></argument>, <argument pos:start="233:35" pos:end="233:46"><expr pos:start="233:35" pos:end="233:46"><name pos:start="233:35" pos:end="233:46">openpic_load</name></expr></argument>, <argument pos:start="233:49" pos:end="233:51"><expr pos:start="233:49" pos:end="233:51"><name pos:start="233:49" pos:end="233:51">opp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="237:5" pos:end="237:37"><expr pos:start="237:5" pos:end="237:36"><call pos:start="237:5" pos:end="237:36"><name pos:start="237:5" pos:end="237:20">sysbus_init_mmio</name><argument_list pos:start="237:21" pos:end="237:36">(<argument pos:start="237:22" pos:end="237:24"><expr pos:start="237:22" pos:end="237:24"><name pos:start="237:22" pos:end="237:24">dev</name></expr></argument>, <argument pos:start="237:27" pos:end="237:35"><expr pos:start="237:27" pos:end="237:35"><operator pos:start="237:27" pos:end="237:27">&amp;</operator><name pos:start="237:28" pos:end="237:35"><name pos:start="237:28" pos:end="237:30">opp</name><operator pos:start="237:31" pos:end="237:32">-&gt;</operator><name pos:start="237:33" pos:end="237:35">mem</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="239:5" pos:end="239:65"><expr pos:start="239:5" pos:end="239:64"><call pos:start="239:5" pos:end="239:64"><name pos:start="239:5" pos:end="239:21">qdev_init_gpio_in</name><argument_list pos:start="239:22" pos:end="239:64">(<argument pos:start="239:23" pos:end="239:32"><expr pos:start="239:23" pos:end="239:32"><operator pos:start="239:23" pos:end="239:23">&amp;</operator><name pos:start="239:24" pos:end="239:32"><name pos:start="239:24" pos:end="239:26">dev</name><operator pos:start="239:27" pos:end="239:28">-&gt;</operator><name pos:start="239:29" pos:end="239:32">qdev</name></name></expr></argument>, <argument pos:start="239:35" pos:end="239:49"><expr pos:start="239:35" pos:end="239:49"><name pos:start="239:35" pos:end="239:49">openpic_set_irq</name></expr></argument>, <argument pos:start="239:52" pos:end="239:63"><expr pos:start="239:52" pos:end="239:63"><name pos:start="239:52" pos:end="239:63"><name pos:start="239:52" pos:end="239:54">opp</name><operator pos:start="239:55" pos:end="239:56">-&gt;</operator><name pos:start="239:57" pos:end="239:63">max_irq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="243:5" pos:end="243:13">return <expr pos:start="243:12" pos:end="243:12"><literal type="number" pos:start="243:12" pos:end="243:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
