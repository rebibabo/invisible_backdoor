<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19925.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:24"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:22">CharDriverState</name> <modifier pos:start="1:24" pos:end="1:24">*</modifier></type><name pos:start="1:25" pos:end="1:47">qemu_chr_open_spice_vmc</name><parameter_list pos:start="1:48" pos:end="7:61">(<parameter pos:start="1:49" pos:end="1:62"><decl pos:start="1:49" pos:end="1:62"><type pos:start="1:49" pos:end="1:62"><specifier pos:start="1:49" pos:end="1:53">const</specifier> <name pos:start="1:55" pos:end="1:58">char</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:62">id</name></decl></parameter>,

                                                <parameter pos:start="3:49" pos:end="3:71"><decl pos:start="3:49" pos:end="3:71"><type pos:start="3:49" pos:end="3:71"><name pos:start="3:49" pos:end="3:62">ChardevBackend</name> <modifier pos:start="3:64" pos:end="3:64">*</modifier></type><name pos:start="3:65" pos:end="3:71">backend</name></decl></parameter>,

                                                <parameter pos:start="5:49" pos:end="5:66"><decl pos:start="5:49" pos:end="5:66"><type pos:start="5:49" pos:end="5:66"><name pos:start="5:49" pos:end="5:61">ChardevReturn</name> <modifier pos:start="5:63" pos:end="5:63">*</modifier></type><name pos:start="5:64" pos:end="5:66">ret</name></decl></parameter>,

                                                <parameter pos:start="7:49" pos:end="7:60"><decl pos:start="7:49" pos:end="7:60"><type pos:start="7:49" pos:end="7:60"><name pos:start="7:49" pos:end="7:53">Error</name> <modifier pos:start="7:55" pos:end="7:55">*</modifier><modifier pos:start="7:56" pos:end="7:56">*</modifier></type><name pos:start="7:57" pos:end="7:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="41:1">{<block_content pos:start="11:5" pos:end="39:49">

    <decl_stmt pos:start="11:5" pos:end="11:49"><decl pos:start="11:5" pos:end="11:48"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:14">char</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:20">type</name> <init pos:start="11:22" pos:end="11:48">= <expr pos:start="11:24" pos:end="11:48"><name pos:start="11:24" pos:end="11:48"><name pos:start="11:24" pos:end="11:30">backend</name><operator pos:start="11:31" pos:end="11:32">-&gt;</operator><name pos:start="11:33" pos:end="11:33">u</name><operator pos:start="11:34" pos:end="11:34">.</operator><name pos:start="11:35" pos:end="11:42">spicevmc</name><operator pos:start="11:43" pos:end="11:44">-&gt;</operator><name pos:start="11:45" pos:end="11:48">type</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:75"><decl pos:start="13:5" pos:end="13:74"><type pos:start="13:5" pos:end="13:17"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier><modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:25">psubtype</name> <init pos:start="13:27" pos:end="13:74">= <expr pos:start="13:29" pos:end="13:74"><call pos:start="13:29" pos:end="13:74"><name pos:start="13:29" pos:end="13:72">spice_server_char_device_recognized_subtypes</name><argument_list pos:start="13:73" pos:end="13:74">()</argument_list></call></expr></init></decl>;</decl_stmt>



    <for pos:start="17:5" pos:end="25:5">for <control pos:start="17:9" pos:end="17:41">(<init pos:start="17:10" pos:end="17:10">;</init> <condition pos:start="17:12" pos:end="17:29"><expr pos:start="17:12" pos:end="17:28"><operator pos:start="17:12" pos:end="17:12">*</operator><name pos:start="17:13" pos:end="17:20">psubtype</name> <operator pos:start="17:22" pos:end="17:23">!=</operator> <name pos:start="17:25" pos:end="17:28">NULL</name></expr>;</condition> <incr pos:start="17:31" pos:end="17:40"><expr pos:start="17:31" pos:end="17:40"><operator pos:start="17:31" pos:end="17:32">++</operator><name pos:start="17:33" pos:end="17:40">psubtype</name></expr></incr>)</control> <block pos:start="17:43" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:9">

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:41">(<expr pos:start="19:13" pos:end="19:40"><call pos:start="19:13" pos:end="19:35"><name pos:start="19:13" pos:end="19:18">strcmp</name><argument_list pos:start="19:19" pos:end="19:35">(<argument pos:start="19:20" pos:end="19:23"><expr pos:start="19:20" pos:end="19:23"><name pos:start="19:20" pos:end="19:23">type</name></expr></argument>, <argument pos:start="19:26" pos:end="19:34"><expr pos:start="19:26" pos:end="19:34"><operator pos:start="19:26" pos:end="19:26">*</operator><name pos:start="19:27" pos:end="19:34">psubtype</name></expr></argument>)</argument_list></call> <operator pos:start="19:37" pos:end="19:38">==</operator> <literal type="number" pos:start="19:40" pos:end="19:40">0</literal></expr>)</condition> <block pos:start="19:43" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:26">(<expr pos:start="27:9" pos:end="27:25"><operator pos:start="27:9" pos:end="27:9">*</operator><name pos:start="27:10" pos:end="27:17">psubtype</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <name pos:start="27:22" pos:end="27:25">NULL</name></expr>)</condition> <block pos:start="27:28" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:20">

        <expr_stmt pos:start="29:9" pos:end="29:73"><expr pos:start="29:9" pos:end="29:72"><call pos:start="29:9" pos:end="29:72"><name pos:start="29:9" pos:end="29:15">fprintf</name><argument_list pos:start="29:16" pos:end="29:72">(<argument pos:start="29:17" pos:end="29:22"><expr pos:start="29:17" pos:end="29:22"><name pos:start="29:17" pos:end="29:22">stderr</name></expr></argument>, <argument pos:start="29:25" pos:end="29:65"><expr pos:start="29:25" pos:end="29:65"><literal type="string" pos:start="29:25" pos:end="29:65">"spice-qemu-char: unsupported type: %s\n"</literal></expr></argument>, <argument pos:start="29:68" pos:end="29:71"><expr pos:start="29:68" pos:end="29:71"><name pos:start="29:68" pos:end="29:71">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:33"><expr pos:start="31:9" pos:end="31:32"><call pos:start="31:9" pos:end="31:32"><name pos:start="31:9" pos:end="31:30">print_allowed_subtypes</name><argument_list pos:start="31:31" pos:end="31:32">()</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="39:5" pos:end="39:49">return <expr pos:start="39:12" pos:end="39:48"><call pos:start="39:12" pos:end="39:48"><name pos:start="39:12" pos:end="39:19">chr_open</name><argument_list pos:start="39:20" pos:end="39:48">(<argument pos:start="39:21" pos:end="39:24"><expr pos:start="39:21" pos:end="39:24"><name pos:start="39:21" pos:end="39:24">type</name></expr></argument>, <argument pos:start="39:27" pos:end="39:47"><expr pos:start="39:27" pos:end="39:47"><name pos:start="39:27" pos:end="39:47">spice_vmc_set_fe_open</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
