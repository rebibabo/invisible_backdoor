<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9131.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">siff_read_packet</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:61"><decl pos:start="1:49" pos:end="1:61"><type pos:start="1:49" pos:end="1:61"><name pos:start="1:49" pos:end="1:56">AVPacket</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:61">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="111:1">{<block_content pos:start="5:5" pos:end="109:21">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">SIFFContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:33">= <expr pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:33"><name pos:start="5:22" pos:end="5:22">s</name><operator pos:start="5:23" pos:end="5:24">-&gt;</operator><name pos:start="5:25" pos:end="5:33">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="107:5"><if pos:start="9:5" pos:end="93:5">if <condition pos:start="9:8" pos:end="9:21">(<expr pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:20"><name pos:start="9:9" pos:end="9:9">c</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:20">has_video</name></name></expr>)</condition> <block pos:start="9:23" pos:end="93:5">{<block_content pos:start="11:9" pos:end="91:27">

        <decl_stmt pos:start="11:9" pos:end="11:26"><decl pos:start="11:9" pos:end="11:25"><type pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:16">unsigned</name> <name pos:start="11:18" pos:end="11:20">int</name></type> <name pos:start="11:22" pos:end="11:25">size</name></decl>;</decl_stmt>

        <if_stmt pos:start="13:9" pos:end="15:31"><if pos:start="13:9" pos:end="15:31">if <condition pos:start="13:12" pos:end="13:38">(<expr pos:start="13:13" pos:end="13:37"><name pos:start="13:13" pos:end="13:24"><name pos:start="13:13" pos:end="13:13">c</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:24">cur_frame</name></name> <operator pos:start="13:26" pos:end="13:27">&gt;=</operator> <name pos:start="13:29" pos:end="13:37"><name pos:start="13:29" pos:end="13:29">c</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:37">frames</name></name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:31"><block_content pos:start="15:13" pos:end="15:31">

            <return pos:start="15:13" pos:end="15:31">return <expr pos:start="15:20" pos:end="15:30"><name pos:start="15:20" pos:end="15:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="17:9" pos:end="33:9"><if pos:start="17:9" pos:end="33:9">if <condition pos:start="17:12" pos:end="17:29">(<expr pos:start="17:13" pos:end="17:28"><name pos:start="17:13" pos:end="17:22"><name pos:start="17:13" pos:end="17:13">c</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:22">curstrm</name></name> <operator pos:start="17:24" pos:end="17:25">==</operator> <operator pos:start="17:27" pos:end="17:27">-</operator><literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr>)</condition> <block pos:start="17:31" pos:end="33:9">{<block_content pos:start="19:13" pos:end="31:53">

            <expr_stmt pos:start="19:13" pos:end="19:46"><expr pos:start="19:13" pos:end="19:45"><name pos:start="19:13" pos:end="19:22"><name pos:start="19:13" pos:end="19:13">c</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:22">pktsize</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <call pos:start="19:26" pos:end="19:41"><name pos:start="19:26" pos:end="19:34">avio_rl32</name><argument_list pos:start="19:35" pos:end="19:41">(<argument pos:start="19:36" pos:end="19:40"><expr pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:36">s</name><operator pos:start="19:37" pos:end="19:38">-&gt;</operator><name pos:start="19:39" pos:end="19:40">pb</name></name></expr></argument>)</argument_list></call> <operator pos:start="19:43" pos:end="19:43">-</operator> <literal type="number" pos:start="19:45" pos:end="19:45">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:42"><expr pos:start="21:13" pos:end="21:41"><name pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:13">c</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:20">flags</name></name>   <operator pos:start="21:24" pos:end="21:24">=</operator> <call pos:start="21:26" pos:end="21:41"><name pos:start="21:26" pos:end="21:34">avio_rl16</name><argument_list pos:start="21:35" pos:end="21:41">(<argument pos:start="21:36" pos:end="21:40"><expr pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:40"><name pos:start="21:36" pos:end="21:36">s</name><operator pos:start="21:37" pos:end="21:38">-&gt;</operator><name pos:start="21:39" pos:end="21:40">pb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="23:13" pos:end="23:57"><expr pos:start="23:13" pos:end="23:56"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:13">c</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:22">gmcsize</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <ternary pos:start="23:26" pos:end="23:56"><condition pos:start="23:26" pos:end="23:50"><expr pos:start="23:26" pos:end="23:48"><operator pos:start="23:26" pos:end="23:26">(</operator><name pos:start="23:27" pos:end="23:34"><name pos:start="23:27" pos:end="23:27">c</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:34">flags</name></name> <operator pos:start="23:36" pos:end="23:36">&amp;</operator> <name pos:start="23:38" pos:end="23:47">VB_HAS_GMC</name><operator pos:start="23:48" pos:end="23:48">)</operator></expr> ?</condition><then pos:start="23:52" pos:end="23:52"> <expr pos:start="23:52" pos:end="23:52"><literal type="number" pos:start="23:52" pos:end="23:52">4</literal></expr> </then><else pos:start="23:54" pos:end="23:56">: <expr pos:start="23:56" pos:end="23:56"><literal type="number" pos:start="23:56" pos:end="23:56">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="27:53"><if pos:start="25:13" pos:end="27:53">if <condition pos:start="25:16" pos:end="25:27">(<expr pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:26"><name pos:start="25:17" pos:end="25:17">c</name><operator pos:start="25:18" pos:end="25:19">-&gt;</operator><name pos:start="25:20" pos:end="25:26">gmcsize</name></name></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:53"><block_content pos:start="27:17" pos:end="27:53">

                <expr_stmt pos:start="27:17" pos:end="27:53"><expr pos:start="27:17" pos:end="27:52"><call pos:start="27:17" pos:end="27:52"><name pos:start="27:17" pos:end="27:25">avio_read</name><argument_list pos:start="27:26" pos:end="27:52">(<argument pos:start="27:27" pos:end="27:31"><expr pos:start="27:27" pos:end="27:31"><name pos:start="27:27" pos:end="27:31"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:31">pb</name></name></expr></argument>, <argument pos:start="27:34" pos:end="27:39"><expr pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:39"><name pos:start="27:34" pos:end="27:34">c</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:39">gmc</name></name></expr></argument>, <argument pos:start="27:42" pos:end="27:51"><expr pos:start="27:42" pos:end="27:51"><name pos:start="27:42" pos:end="27:51"><name pos:start="27:42" pos:end="27:42">c</name><operator pos:start="27:43" pos:end="27:44">-&gt;</operator><name pos:start="27:45" pos:end="27:51">gmcsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:74"><expr pos:start="29:13" pos:end="29:73"><name pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:13">c</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:22">sndsize</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <ternary pos:start="29:26" pos:end="29:73"><condition pos:start="29:26" pos:end="29:52"><expr pos:start="29:26" pos:end="29:50"><operator pos:start="29:26" pos:end="29:26">(</operator><name pos:start="29:27" pos:end="29:34"><name pos:start="29:27" pos:end="29:27">c</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:34">flags</name></name> <operator pos:start="29:36" pos:end="29:36">&amp;</operator> <name pos:start="29:38" pos:end="29:49">VB_HAS_AUDIO</name><operator pos:start="29:50" pos:end="29:50">)</operator></expr> ?</condition><then pos:start="29:54" pos:end="29:69"> <expr pos:start="29:54" pos:end="29:69"><call pos:start="29:54" pos:end="29:69"><name pos:start="29:54" pos:end="29:62">avio_rl32</name><argument_list pos:start="29:63" pos:end="29:69">(<argument pos:start="29:64" pos:end="29:68"><expr pos:start="29:64" pos:end="29:68"><name pos:start="29:64" pos:end="29:68"><name pos:start="29:64" pos:end="29:64">s</name><operator pos:start="29:65" pos:end="29:66">-&gt;</operator><name pos:start="29:67" pos:end="29:68">pb</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="29:71" pos:end="29:73">: <expr pos:start="29:73" pos:end="29:73"><literal type="number" pos:start="29:73" pos:end="29:73">0</literal></expr></else></ternary></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:53"><expr pos:start="31:13" pos:end="31:52"><name pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:13">c</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:22">curstrm</name></name> <operator pos:start="31:24" pos:end="31:24">=</operator> <operator pos:start="31:26" pos:end="31:26">!</operator><operator pos:start="31:27" pos:end="31:27">!</operator><operator pos:start="31:28" pos:end="31:28">(</operator><name pos:start="31:29" pos:end="31:36"><name pos:start="31:29" pos:end="31:29">c</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:36">flags</name></name> <operator pos:start="31:38" pos:end="31:38">&amp;</operator> <name pos:start="31:40" pos:end="31:51">VB_HAS_AUDIO</name><operator pos:start="31:52" pos:end="31:52">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="37:9" pos:end="83:9"><if pos:start="37:9" pos:end="69:9">if <condition pos:start="37:12" pos:end="37:24">(<expr pos:start="37:13" pos:end="37:23"><operator pos:start="37:13" pos:end="37:13">!</operator><name pos:start="37:14" pos:end="37:23"><name pos:start="37:14" pos:end="37:14">c</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:23">curstrm</name></name></expr>)</condition> <block pos:start="37:26" pos:end="69:9">{<block_content pos:start="39:13" pos:end="67:35">

            <expr_stmt pos:start="39:13" pos:end="39:60"><expr pos:start="39:13" pos:end="39:59"><name pos:start="39:13" pos:end="39:16">size</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:29"><name pos:start="39:20" pos:end="39:20">c</name><operator pos:start="39:21" pos:end="39:22">-&gt;</operator><name pos:start="39:23" pos:end="39:29">pktsize</name></name> <operator pos:start="39:31" pos:end="39:31">-</operator> <name pos:start="39:33" pos:end="39:42"><name pos:start="39:33" pos:end="39:33">c</name><operator pos:start="39:34" pos:end="39:35">-&gt;</operator><name pos:start="39:36" pos:end="39:42">sndsize</name></name> <operator pos:start="39:44" pos:end="39:44">-</operator> <name pos:start="39:46" pos:end="39:55"><name pos:start="39:46" pos:end="39:46">c</name><operator pos:start="39:47" pos:end="39:48">-&gt;</operator><name pos:start="39:49" pos:end="39:55">gmcsize</name></name> <operator pos:start="39:57" pos:end="39:57">-</operator> <literal type="number" pos:start="39:59" pos:end="39:59">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:43"><expr pos:start="41:13" pos:end="41:42"><name pos:start="41:13" pos:end="41:16">size</name> <operator pos:start="41:18" pos:end="41:18">=</operator> <call pos:start="41:20" pos:end="41:42"><name pos:start="41:20" pos:end="41:29">ffio_limit</name><argument_list pos:start="41:30" pos:end="41:42">(<argument pos:start="41:31" pos:end="41:35"><expr pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:35"><name pos:start="41:31" pos:end="41:31">s</name><operator pos:start="41:32" pos:end="41:33">-&gt;</operator><name pos:start="41:34" pos:end="41:35">pb</name></name></expr></argument>, <argument pos:start="41:38" pos:end="41:41"><expr pos:start="41:38" pos:end="41:41"><name pos:start="41:38" pos:end="41:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:43"><if pos:start="43:13" pos:end="45:43">if <condition pos:start="43:16" pos:end="43:52">(<expr pos:start="43:17" pos:end="43:51"><name pos:start="43:17" pos:end="43:20">size</name> <operator pos:start="43:22" pos:end="43:22">&lt;</operator> <literal type="number" pos:start="43:24" pos:end="43:24">0</literal> <operator pos:start="43:26" pos:end="43:27">||</operator> <name pos:start="43:29" pos:end="43:38"><name pos:start="43:29" pos:end="43:29">c</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:38">pktsize</name></name> <operator pos:start="43:40" pos:end="43:40">&lt;</operator> <name pos:start="43:42" pos:end="43:51"><name pos:start="43:42" pos:end="43:42">c</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:51">sndsize</name></name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:43"><block_content pos:start="45:17" pos:end="45:43">

                <return pos:start="45:17" pos:end="45:43">return <expr pos:start="45:24" pos:end="45:42"><name pos:start="45:24" pos:end="45:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="47:13" pos:end="49:39"><if pos:start="47:13" pos:end="49:39">if <condition pos:start="47:16" pos:end="47:62">(<expr pos:start="47:17" pos:end="47:61"><call pos:start="47:17" pos:end="47:57"><name pos:start="47:17" pos:end="47:29">av_new_packet</name><argument_list pos:start="47:30" pos:end="47:57">(<argument pos:start="47:31" pos:end="47:33"><expr pos:start="47:31" pos:end="47:33"><name pos:start="47:31" pos:end="47:33">pkt</name></expr></argument>, <argument pos:start="47:36" pos:end="47:56"><expr pos:start="47:36" pos:end="47:56"><name pos:start="47:36" pos:end="47:39">size</name> <operator pos:start="47:41" pos:end="47:41">+</operator> <name pos:start="47:43" pos:end="47:52"><name pos:start="47:43" pos:end="47:43">c</name><operator pos:start="47:44" pos:end="47:45">-&gt;</operator><name pos:start="47:46" pos:end="47:52">gmcsize</name></name> <operator pos:start="47:54" pos:end="47:54">+</operator> <literal type="number" pos:start="47:56" pos:end="47:56">2</literal></expr></argument>)</argument_list></call> <operator pos:start="47:59" pos:end="47:59">&lt;</operator> <literal type="number" pos:start="47:61" pos:end="47:61">0</literal></expr>)</condition><block type="pseudo" pos:start="49:17" pos:end="49:39"><block_content pos:start="49:17" pos:end="49:39">

                <return pos:start="49:17" pos:end="49:39">return <expr pos:start="49:24" pos:end="49:38"><call pos:start="49:24" pos:end="49:38"><name pos:start="49:24" pos:end="49:30">AVERROR</name><argument_list pos:start="49:31" pos:end="49:38">(<argument pos:start="49:32" pos:end="49:37"><expr pos:start="49:32" pos:end="49:37"><name pos:start="49:32" pos:end="49:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:41"><expr pos:start="51:13" pos:end="51:40"><call pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:19">AV_WL16</name><argument_list pos:start="51:20" pos:end="51:40">(<argument pos:start="51:21" pos:end="51:29"><expr pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:29"><name pos:start="51:21" pos:end="51:23">pkt</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:29">data</name></name></expr></argument>, <argument pos:start="51:32" pos:end="51:39"><expr pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:39"><name pos:start="51:32" pos:end="51:32">c</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:39">flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="55:58"><if pos:start="53:13" pos:end="55:58">if <condition pos:start="53:16" pos:end="53:27">(<expr pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:26"><name pos:start="53:17" pos:end="53:17">c</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:26">gmcsize</name></name></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:58"><block_content pos:start="55:17" pos:end="55:58">

                <expr_stmt pos:start="55:17" pos:end="55:58"><expr pos:start="55:17" pos:end="55:57"><call pos:start="55:17" pos:end="55:57"><name pos:start="55:17" pos:end="55:22">memcpy</name><argument_list pos:start="55:23" pos:end="55:57">(<argument pos:start="55:24" pos:end="55:36"><expr pos:start="55:24" pos:end="55:36"><name pos:start="55:24" pos:end="55:32"><name pos:start="55:24" pos:end="55:26">pkt</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:32">data</name></name> <operator pos:start="55:34" pos:end="55:34">+</operator> <literal type="number" pos:start="55:36" pos:end="55:36">2</literal></expr></argument>, <argument pos:start="55:39" pos:end="55:44"><expr pos:start="55:39" pos:end="55:44"><name pos:start="55:39" pos:end="55:44"><name pos:start="55:39" pos:end="55:39">c</name><operator pos:start="55:40" pos:end="55:41">-&gt;</operator><name pos:start="55:42" pos:end="55:44">gmc</name></name></expr></argument>, <argument pos:start="55:47" pos:end="55:56"><expr pos:start="55:47" pos:end="55:56"><name pos:start="55:47" pos:end="55:56"><name pos:start="55:47" pos:end="55:47">c</name><operator pos:start="55:48" pos:end="55:49">-&gt;</operator><name pos:start="55:50" pos:end="55:56">gmcsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="57:13" pos:end="63:13"><if pos:start="57:13" pos:end="63:13">if <condition pos:start="57:16" pos:end="57:75">(<expr pos:start="57:17" pos:end="57:74"><call pos:start="57:17" pos:end="57:66"><name pos:start="57:17" pos:end="57:25">avio_read</name><argument_list pos:start="57:26" pos:end="57:66">(<argument pos:start="57:27" pos:end="57:31"><expr pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:31"><name pos:start="57:27" pos:end="57:27">s</name><operator pos:start="57:28" pos:end="57:29">-&gt;</operator><name pos:start="57:30" pos:end="57:31">pb</name></name></expr></argument>, <argument pos:start="57:34" pos:end="57:59"><expr pos:start="57:34" pos:end="57:59"><name pos:start="57:34" pos:end="57:42"><name pos:start="57:34" pos:end="57:36">pkt</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:42">data</name></name> <operator pos:start="57:44" pos:end="57:44">+</operator> <literal type="number" pos:start="57:46" pos:end="57:48">2</literal> <operator pos:start="57:48" pos:end="57:48">+</operator> <name pos:start="57:50" pos:end="57:59"><name pos:start="57:50" pos:end="57:50">c</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:59">gmcsize</name></name></expr></argument>, <argument pos:start="57:62" pos:end="57:65"><expr pos:start="57:62" pos:end="57:65"><name pos:start="57:62" pos:end="57:65">size</name></expr></argument>)</argument_list></call> <operator pos:start="57:68" pos:end="57:69">!=</operator> <name pos:start="57:71" pos:end="57:74">size</name></expr>)</condition> <block pos:start="57:77" pos:end="63:13">{<block_content pos:start="59:17" pos:end="61:43">

                <expr_stmt pos:start="59:17" pos:end="59:36"><expr pos:start="59:17" pos:end="59:35"><call pos:start="59:17" pos:end="59:35"><name pos:start="59:17" pos:end="59:30">av_free_packet</name><argument_list pos:start="59:31" pos:end="59:35">(<argument pos:start="59:32" pos:end="59:34"><expr pos:start="59:32" pos:end="59:34"><name pos:start="59:32" pos:end="59:34">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="61:17" pos:end="61:43">return <expr pos:start="61:24" pos:end="61:42"><name pos:start="61:24" pos:end="61:42">AVERROR_INVALIDDATA</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:34"><expr pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:29"><name pos:start="65:13" pos:end="65:15">pkt</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:29">stream_index</name></name> <operator pos:start="65:31" pos:end="65:31">=</operator> <literal type="number" pos:start="65:33" pos:end="65:33">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:35"><expr pos:start="67:13" pos:end="67:34"><name pos:start="67:13" pos:end="67:22"><name pos:start="67:13" pos:end="67:13">c</name><operator pos:start="67:14" pos:end="67:15">-&gt;</operator><name pos:start="67:16" pos:end="67:22">curstrm</name></name>        <operator pos:start="67:31" pos:end="67:31">=</operator> <operator pos:start="67:33" pos:end="67:33">-</operator><literal type="number" pos:start="67:34" pos:end="67:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="69:11" pos:end="83:9">else <block pos:start="69:16" pos:end="83:9">{<block_content pos:start="71:13" pos:end="81:34">

            <decl_stmt pos:start="71:13" pos:end="71:68"><decl pos:start="71:13" pos:end="71:67"><type pos:start="71:13" pos:end="71:15"><name pos:start="71:13" pos:end="71:15">int</name></type> <name pos:start="71:17" pos:end="71:23">pktsize</name> <init pos:start="71:25" pos:end="71:67">= <expr pos:start="71:27" pos:end="71:67"><call pos:start="71:27" pos:end="71:67"><name pos:start="71:27" pos:end="71:39">av_get_packet</name><argument_list pos:start="71:40" pos:end="71:67">(<argument pos:start="71:41" pos:end="71:45"><expr pos:start="71:41" pos:end="71:45"><name pos:start="71:41" pos:end="71:45"><name pos:start="71:41" pos:end="71:41">s</name><operator pos:start="71:42" pos:end="71:43">-&gt;</operator><name pos:start="71:44" pos:end="71:45">pb</name></name></expr></argument>, <argument pos:start="71:48" pos:end="71:50"><expr pos:start="71:48" pos:end="71:50"><name pos:start="71:48" pos:end="71:50">pkt</name></expr></argument>, <argument pos:start="71:53" pos:end="71:66"><expr pos:start="71:53" pos:end="71:66"><name pos:start="71:53" pos:end="71:62"><name pos:start="71:53" pos:end="71:53">c</name><operator pos:start="71:54" pos:end="71:55">-&gt;</operator><name pos:start="71:56" pos:end="71:62">sndsize</name></name> <operator pos:start="71:64" pos:end="71:64">-</operator> <literal type="number" pos:start="71:66" pos:end="71:66">4</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="73:13" pos:end="75:36"><if pos:start="73:13" pos:end="75:36">if <condition pos:start="73:16" pos:end="73:28">(<expr pos:start="73:17" pos:end="73:27"><name pos:start="73:17" pos:end="73:23">pktsize</name> <operator pos:start="73:25" pos:end="73:25">&lt;</operator> <literal type="number" pos:start="73:27" pos:end="73:27">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:36"><block_content pos:start="75:17" pos:end="75:36">

                <return pos:start="75:17" pos:end="75:36">return <expr pos:start="75:24" pos:end="75:35"><call pos:start="75:24" pos:end="75:35"><name pos:start="75:24" pos:end="75:30">AVERROR</name><argument_list pos:start="75:31" pos:end="75:35">(<argument pos:start="75:32" pos:end="75:34"><expr pos:start="75:32" pos:end="75:34"><name pos:start="75:32" pos:end="75:34">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:34"><expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:29"><name pos:start="77:13" pos:end="77:15">pkt</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:29">stream_index</name></name> <operator pos:start="77:31" pos:end="77:31">=</operator> <literal type="number" pos:start="77:33" pos:end="77:33">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:40"><expr pos:start="79:13" pos:end="79:39"><name pos:start="79:13" pos:end="79:25"><name pos:start="79:13" pos:end="79:15">pkt</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:25">duration</name></name>     <operator pos:start="79:31" pos:end="79:31">=</operator> <name pos:start="79:33" pos:end="79:39">pktsize</name></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:34"><expr pos:start="81:13" pos:end="81:33"><name pos:start="81:13" pos:end="81:22"><name pos:start="81:13" pos:end="81:13">c</name><operator pos:start="81:14" pos:end="81:15">-&gt;</operator><name pos:start="81:16" pos:end="81:22">curstrm</name></name>        <operator pos:start="81:31" pos:end="81:31">=</operator> <literal type="number" pos:start="81:33" pos:end="81:33">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="85:9" pos:end="87:42"><if pos:start="85:9" pos:end="87:42">if <condition pos:start="85:12" pos:end="85:40">(<expr pos:start="85:13" pos:end="85:39"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:25"><name pos:start="85:14" pos:end="85:14">c</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:25">cur_frame</name></name> <operator pos:start="85:27" pos:end="85:28">||</operator> <name pos:start="85:30" pos:end="85:39"><name pos:start="85:30" pos:end="85:30">c</name><operator pos:start="85:31" pos:end="85:32">-&gt;</operator><name pos:start="85:33" pos:end="85:39">curstrm</name></name></expr>)</condition><block type="pseudo" pos:start="87:13" pos:end="87:42"><block_content pos:start="87:13" pos:end="87:42">

            <expr_stmt pos:start="87:13" pos:end="87:42"><expr pos:start="87:13" pos:end="87:41"><name pos:start="87:13" pos:end="87:22"><name pos:start="87:13" pos:end="87:15">pkt</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:22">flags</name></name> <operator pos:start="87:24" pos:end="87:25">|=</operator> <name pos:start="87:27" pos:end="87:41">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="91:27"><if pos:start="89:9" pos:end="91:27">if <condition pos:start="89:12" pos:end="89:29">(<expr pos:start="89:13" pos:end="89:28"><name pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:13">c</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">curstrm</name></name> <operator pos:start="89:24" pos:end="89:25">==</operator> <operator pos:start="89:27" pos:end="89:27">-</operator><literal type="number" pos:start="89:28" pos:end="89:28">1</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:27"><block_content pos:start="91:13" pos:end="91:27">

            <expr_stmt pos:start="91:13" pos:end="91:27"><expr pos:start="91:13" pos:end="91:26"><name pos:start="91:13" pos:end="91:24"><name pos:start="91:13" pos:end="91:13">c</name><operator pos:start="91:14" pos:end="91:15">-&gt;</operator><name pos:start="91:16" pos:end="91:24">cur_frame</name></name><operator pos:start="91:25" pos:end="91:26">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="107:5">else <block pos:start="93:12" pos:end="107:5">{<block_content pos:start="95:9" pos:end="105:32">

        <decl_stmt pos:start="95:9" pos:end="95:64"><decl pos:start="95:9" pos:end="95:63"><type pos:start="95:9" pos:end="95:11"><name pos:start="95:9" pos:end="95:11">int</name></type> <name pos:start="95:13" pos:end="95:19">pktsize</name> <init pos:start="95:21" pos:end="95:63">= <expr pos:start="95:23" pos:end="95:63"><call pos:start="95:23" pos:end="95:63"><name pos:start="95:23" pos:end="95:35">av_get_packet</name><argument_list pos:start="95:36" pos:end="95:63">(<argument pos:start="95:37" pos:end="95:41"><expr pos:start="95:37" pos:end="95:41"><name pos:start="95:37" pos:end="95:41"><name pos:start="95:37" pos:end="95:37">s</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:41">pb</name></name></expr></argument>, <argument pos:start="95:44" pos:end="95:46"><expr pos:start="95:44" pos:end="95:46"><name pos:start="95:44" pos:end="95:46">pkt</name></expr></argument>, <argument pos:start="95:49" pos:end="95:62"><expr pos:start="95:49" pos:end="95:62"><name pos:start="95:49" pos:end="95:62"><name pos:start="95:49" pos:end="95:49">c</name><operator pos:start="95:50" pos:end="95:51">-&gt;</operator><name pos:start="95:52" pos:end="95:62">block_align</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="97:9" pos:end="99:31"><if pos:start="97:9" pos:end="99:31">if <condition pos:start="97:12" pos:end="97:21">(<expr pos:start="97:13" pos:end="97:20"><operator pos:start="97:13" pos:end="97:13">!</operator><name pos:start="97:14" pos:end="97:20">pktsize</name></expr>)</condition><block type="pseudo" pos:start="99:13" pos:end="99:31"><block_content pos:start="99:13" pos:end="99:31">

            <return pos:start="99:13" pos:end="99:31">return <expr pos:start="99:20" pos:end="99:30"><name pos:start="99:20" pos:end="99:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

        <if_stmt pos:start="101:9" pos:end="103:32"><if pos:start="101:9" pos:end="103:32">if <condition pos:start="101:12" pos:end="101:25">(<expr pos:start="101:13" pos:end="101:24"><name pos:start="101:13" pos:end="101:19">pktsize</name> <operator pos:start="101:21" pos:end="101:22">&lt;=</operator> <literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:32"><block_content pos:start="103:13" pos:end="103:32">

            <return pos:start="103:13" pos:end="103:32">return <expr pos:start="103:20" pos:end="103:31"><call pos:start="103:20" pos:end="103:31"><name pos:start="103:20" pos:end="103:26">AVERROR</name><argument_list pos:start="103:27" pos:end="103:31">(<argument pos:start="103:28" pos:end="103:30"><expr pos:start="103:28" pos:end="103:30"><name pos:start="103:28" pos:end="103:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:21"><name pos:start="105:9" pos:end="105:11">pkt</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:21">duration</name></name> <operator pos:start="105:23" pos:end="105:23">=</operator> <name pos:start="105:25" pos:end="105:31">pktsize</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="109:5" pos:end="109:21">return <expr pos:start="109:12" pos:end="109:20"><name pos:start="109:12" pos:end="109:20"><name pos:start="109:12" pos:end="109:14">pkt</name><operator pos:start="109:15" pos:end="109:16">-&gt;</operator><name pos:start="109:17" pos:end="109:20">size</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
