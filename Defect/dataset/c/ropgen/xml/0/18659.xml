<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18659.c" pos:tabs="8"><function pos:start="1:1" pos:end="59:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">ff_request_frame</name><parameter_list pos:start="1:21" pos:end="1:40">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:35"><name pos:start="1:22" pos:end="1:33">AVFilterLink</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:39">link</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="59:1">{<block_content pos:start="5:5" pos:end="57:15">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name> <init pos:start="5:13" pos:end="5:16">= <expr pos:start="5:15" pos:end="5:16"><operator pos:start="5:15" pos:end="5:15">-</operator><literal type="number" pos:start="5:16" pos:end="5:16">1</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:42"><expr pos:start="7:5" pos:end="7:41"><call pos:start="7:5" pos:end="7:41"><name pos:start="7:5" pos:end="7:20">FF_TPRINTF_START</name><argument_list pos:start="7:21" pos:end="7:41">(<argument pos:start="7:22" pos:end="7:25"><expr pos:start="7:22" pos:end="7:25"><name pos:start="7:22" pos:end="7:25">NULL</name></expr></argument>, <argument pos:start="7:28" pos:end="7:40"><expr pos:start="7:28" pos:end="7:40"><name pos:start="7:28" pos:end="7:40">request_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="7:44" pos:end="7:71"><expr pos:start="7:44" pos:end="7:70"><call pos:start="7:44" pos:end="7:70"><name pos:start="7:44" pos:end="7:55">ff_tlog_link</name><argument_list pos:start="7:56" pos:end="7:70">(<argument pos:start="7:57" pos:end="7:60"><expr pos:start="7:57" pos:end="7:60"><name pos:start="7:57" pos:end="7:60">NULL</name></expr></argument>, <argument pos:start="7:63" pos:end="7:66"><expr pos:start="7:63" pos:end="7:66"><name pos:start="7:63" pos:end="7:66">link</name></expr></argument>, <argument pos:start="7:69" pos:end="7:69"><expr pos:start="7:69" pos:end="7:69"><literal type="number" pos:start="7:69" pos:end="7:69">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="11:5" pos:end="13:27"><if pos:start="11:5" pos:end="13:27">if <condition pos:start="11:8" pos:end="11:21">(<expr pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:12">link</name><operator pos:start="11:13" pos:end="11:14">-&gt;</operator><name pos:start="11:15" pos:end="11:20">closed</name></name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:27"><block_content pos:start="13:9" pos:end="13:27">

        <return pos:start="13:9" pos:end="13:27">return <expr pos:start="13:16" pos:end="13:26"><name pos:start="13:16" pos:end="13:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><call pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:14">av_assert0</name><argument_list pos:start="15:15" pos:end="15:38">(<argument pos:start="15:16" pos:end="15:37"><expr pos:start="15:16" pos:end="15:37"><operator pos:start="15:16" pos:end="15:16">!</operator><name pos:start="15:17" pos:end="15:37"><name pos:start="15:17" pos:end="15:20">link</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:37">frame_requested</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:8">link</name><operator pos:start="17:9" pos:end="17:10">-&gt;</operator><name pos:start="17:11" pos:end="17:25">frame_requested</name></name> <operator pos:start="17:27" pos:end="17:27">=</operator> <literal type="number" pos:start="17:29" pos:end="17:29">1</literal></expr>;</expr_stmt>

    <while pos:start="19:5" pos:end="55:5">while <condition pos:start="19:11" pos:end="19:33">(<expr pos:start="19:12" pos:end="19:32"><name pos:start="19:12" pos:end="19:32"><name pos:start="19:12" pos:end="19:15">link</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:32">frame_requested</name></name></expr>)</condition> <block pos:start="19:35" pos:end="55:5">{<block_content pos:start="21:9" pos:end="53:9">

        <if_stmt pos:start="21:9" pos:end="27:57"><if pos:start="21:9" pos:end="23:52">if <condition pos:start="21:12" pos:end="21:40">(<expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:16">link</name><operator pos:start="21:17" pos:end="21:18">-&gt;</operator><name pos:start="21:19" pos:end="21:24">srcpad</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:39">request_frame</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:52"><block_content pos:start="23:13" pos:end="23:52">

            <expr_stmt pos:start="23:13" pos:end="23:52"><expr pos:start="23:13" pos:end="23:51"><name pos:start="23:13" pos:end="23:15">ret</name> <operator pos:start="23:17" pos:end="23:17">=</operator> <call pos:start="23:19" pos:end="23:51"><name pos:start="23:19" pos:end="23:45"><name pos:start="23:19" pos:end="23:22">link</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:30">srcpad</name><operator pos:start="23:31" pos:end="23:32">-&gt;</operator><name pos:start="23:33" pos:end="23:45">request_frame</name></name><argument_list pos:start="23:46" pos:end="23:51">(<argument pos:start="23:47" pos:end="23:50"><expr pos:start="23:47" pos:end="23:50"><name pos:start="23:47" pos:end="23:50">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="25:9" pos:end="27:57">else if <condition pos:start="25:17" pos:end="25:38">(<expr pos:start="25:18" pos:end="25:37"><name pos:start="25:18" pos:end="25:37"><name pos:start="25:18" pos:end="25:21">link</name><operator pos:start="25:22" pos:end="25:23">-&gt;</operator><name pos:start="25:24" pos:end="25:26">src</name><operator pos:start="25:27" pos:end="25:28">-&gt;</operator><name pos:start="25:29" pos:end="25:34">inputs</name><index pos:start="25:35" pos:end="25:37">[<expr pos:start="25:36" pos:end="25:36"><literal type="number" pos:start="25:36" pos:end="25:36">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:57"><block_content pos:start="27:13" pos:end="27:57">

            <expr_stmt pos:start="27:13" pos:end="27:57"><expr pos:start="27:13" pos:end="27:56"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:56"><name pos:start="27:19" pos:end="27:34">ff_request_frame</name><argument_list pos:start="27:35" pos:end="27:56">(<argument pos:start="27:36" pos:end="27:55"><expr pos:start="27:36" pos:end="27:55"><name pos:start="27:36" pos:end="27:55"><name pos:start="27:36" pos:end="27:39">link</name><operator pos:start="27:40" pos:end="27:41">-&gt;</operator><name pos:start="27:42" pos:end="27:44">src</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:52">inputs</name><index pos:start="27:53" pos:end="27:55">[<expr pos:start="27:54" pos:end="27:54"><literal type="number" pos:start="27:54" pos:end="27:54">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="29:9" pos:end="37:9"><if pos:start="29:9" pos:end="37:9">if <condition pos:start="29:12" pos:end="29:52">(<expr pos:start="29:13" pos:end="29:51"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <name pos:start="29:20" pos:end="29:30">AVERROR_EOF</name> <operator pos:start="29:32" pos:end="29:33">&amp;&amp;</operator> <name pos:start="29:35" pos:end="29:51"><name pos:start="29:35" pos:end="29:38">link</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:51">partial_buf</name></name></expr>)</condition> <block pos:start="29:54" pos:end="37:9">{<block_content pos:start="31:13" pos:end="35:53">

            <decl_stmt pos:start="31:13" pos:end="31:46"><decl pos:start="31:13" pos:end="31:45"><type pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:19">AVFrame</name> <modifier pos:start="31:21" pos:end="31:21">*</modifier></type><name pos:start="31:22" pos:end="31:25">pbuf</name> <init pos:start="31:27" pos:end="31:45">= <expr pos:start="31:29" pos:end="31:45"><name pos:start="31:29" pos:end="31:45"><name pos:start="31:29" pos:end="31:32">link</name><operator pos:start="31:33" pos:end="31:34">-&gt;</operator><name pos:start="31:35" pos:end="31:45">partial_buf</name></name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:37"><expr pos:start="33:13" pos:end="33:36"><name pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:16">link</name><operator pos:start="33:17" pos:end="33:18">-&gt;</operator><name pos:start="33:19" pos:end="33:29">partial_buf</name></name> <operator pos:start="33:31" pos:end="33:31">=</operator> <name pos:start="33:33" pos:end="33:36">NULL</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:53"><expr pos:start="35:13" pos:end="35:52"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:52"><name pos:start="35:19" pos:end="35:40">ff_filter_frame_framed</name><argument_list pos:start="35:41" pos:end="35:52">(<argument pos:start="35:42" pos:end="35:45"><expr pos:start="35:42" pos:end="35:45"><name pos:start="35:42" pos:end="35:45">link</name></expr></argument>, <argument pos:start="35:48" pos:end="35:51"><expr pos:start="35:48" pos:end="35:51"><name pos:start="35:48" pos:end="35:51">pbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="53:9"><if pos:start="39:9" pos:end="47:9">if <condition pos:start="39:12" pos:end="39:20">(<expr pos:start="39:13" pos:end="39:19"><name pos:start="39:13" pos:end="39:15">ret</name> <operator pos:start="39:17" pos:end="39:17">&lt;</operator> <literal type="number" pos:start="39:19" pos:end="39:19">0</literal></expr>)</condition> <block pos:start="39:22" pos:end="47:9">{<block_content pos:start="41:13" pos:end="45:33">

            <expr_stmt pos:start="41:13" pos:end="41:38"><expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:16">link</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:33">frame_requested</name></name> <operator pos:start="41:35" pos:end="41:35">=</operator> <literal type="number" pos:start="41:37" pos:end="41:37">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="45:33"><if pos:start="43:13" pos:end="45:33">if <condition pos:start="43:16" pos:end="43:35">(<expr pos:start="43:17" pos:end="43:34"><name pos:start="43:17" pos:end="43:19">ret</name> <operator pos:start="43:21" pos:end="43:22">==</operator> <name pos:start="43:24" pos:end="43:34">AVERROR_EOF</name></expr>)</condition><block type="pseudo" pos:start="45:17" pos:end="45:33"><block_content pos:start="45:17" pos:end="45:33">

                <expr_stmt pos:start="45:17" pos:end="45:33"><expr pos:start="45:17" pos:end="45:32"><name pos:start="45:17" pos:end="45:28"><name pos:start="45:17" pos:end="45:20">link</name><operator pos:start="45:21" pos:end="45:22">-&gt;</operator><name pos:start="45:23" pos:end="45:28">closed</name></name> <operator pos:start="45:30" pos:end="45:30">=</operator> <literal type="number" pos:start="45:32" pos:end="45:32">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="53:9">else <block pos:start="47:16" pos:end="53:9">{<block_content pos:start="49:13" pos:end="51:64">

            <expr_stmt pos:start="49:13" pos:end="51:64"><expr pos:start="49:13" pos:end="51:63"><call pos:start="49:13" pos:end="51:63"><name pos:start="49:13" pos:end="49:22">av_assert0</name><argument_list pos:start="49:23" pos:end="51:63">(<argument pos:start="49:24" pos:end="51:62"><expr pos:start="49:24" pos:end="51:62"><operator pos:start="49:24" pos:end="49:24">!</operator><name pos:start="49:25" pos:end="49:45"><name pos:start="49:25" pos:end="49:28">link</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:45">frame_requested</name></name> <operator pos:start="49:47" pos:end="49:48">||</operator>

                       <name pos:start="51:24" pos:end="51:34"><name pos:start="51:24" pos:end="51:27">link</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:34">flags</name></name> <operator pos:start="51:36" pos:end="51:36">&amp;</operator> <name pos:start="51:38" pos:end="51:62">FF_LINK_FLAG_REQUEST_LOOP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <return pos:start="57:5" pos:end="57:15">return <expr pos:start="57:12" pos:end="57:14"><name pos:start="57:12" pos:end="57:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
