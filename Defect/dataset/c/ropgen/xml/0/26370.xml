<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26370.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:37">decode_sequence_header_adv</name><parameter_list pos:start="1:38" pos:end="1:71">(<parameter pos:start="1:39" pos:end="1:51"><decl pos:start="1:39" pos:end="1:51"><type pos:start="1:39" pos:end="1:51"><name pos:start="1:39" pos:end="1:48">VC1Context</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">v</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:70"><decl pos:start="1:54" pos:end="1:70"><type pos:start="1:54" pos:end="1:70"><name pos:start="1:54" pos:end="1:66">GetBitContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">gb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:13">

    <expr_stmt pos:start="5:5" pos:end="5:24"><expr pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:5">v</name><operator pos:start="5:6" pos:end="5:7">-&gt;</operator><name pos:start="5:8" pos:end="5:19">res_rtm_flag</name></name> <operator pos:start="5:21" pos:end="5:21">=</operator> <literal type="number" pos:start="5:23" pos:end="5:23">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:31"><expr pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:5">v</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:12">level</name></name> <operator pos:start="7:14" pos:end="7:14">=</operator> <call pos:start="7:16" pos:end="7:30"><name pos:start="7:16" pos:end="7:23">get_bits</name><argument_list pos:start="7:24" pos:end="7:30">(<argument pos:start="7:25" pos:end="7:26"><expr pos:start="7:25" pos:end="7:26"><name pos:start="7:25" pos:end="7:26">gb</name></expr></argument>, <argument pos:start="7:29" pos:end="7:29"><expr pos:start="7:29" pos:end="7:29"><literal type="number" pos:start="7:29" pos:end="7:29">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:22">(<expr pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:9">v</name><operator pos:start="9:10" pos:end="9:11">-&gt;</operator><name pos:start="9:12" pos:end="9:16">level</name></name> <operator pos:start="9:18" pos:end="9:19">&gt;=</operator> <literal type="number" pos:start="9:21" pos:end="9:21">5</literal></expr>)</condition> <block pos:start="9:24" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:73">

        <expr_stmt pos:start="11:9" pos:end="11:73"><expr pos:start="11:9" pos:end="11:72"><call pos:start="11:9" pos:end="11:72"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:72">(<argument pos:start="11:16" pos:end="11:25"><expr pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:25"><name pos:start="11:16" pos:end="11:16">v</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:20">.</operator><name pos:start="11:21" pos:end="11:25">avctx</name></name></expr></argument>, <argument pos:start="11:28" pos:end="11:39"><expr pos:start="11:28" pos:end="11:39"><name pos:start="11:28" pos:end="11:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:42" pos:end="11:62"><expr pos:start="11:42" pos:end="11:62"><literal type="string" pos:start="11:42" pos:end="11:62">"Reserved LEVEL %i\n"</literal></expr></argument>,<argument pos:start="11:64" pos:end="11:71"><expr pos:start="11:64" pos:end="11:71"><name pos:start="11:64" pos:end="11:71"><name pos:start="11:64" pos:end="11:64">v</name><operator pos:start="11:65" pos:end="11:66">-&gt;</operator><name pos:start="11:67" pos:end="11:71">level</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:19"><name pos:start="15:5" pos:end="15:5">v</name><operator pos:start="15:6" pos:end="15:7">-&gt;</operator><name pos:start="15:8" pos:end="15:19">chromaformat</name></name> <operator pos:start="15:21" pos:end="15:21">=</operator> <call pos:start="15:23" pos:end="15:37"><name pos:start="15:23" pos:end="15:30">get_bits</name><argument_list pos:start="15:31" pos:end="15:37">(<argument pos:start="15:32" pos:end="15:33"><expr pos:start="15:32" pos:end="15:33"><name pos:start="15:32" pos:end="15:33">gb</name></expr></argument>, <argument pos:start="15:36" pos:end="15:36"><expr pos:start="15:36" pos:end="15:36"><literal type="number" pos:start="15:36" pos:end="15:36">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:29">(<expr pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:23"><name pos:start="17:9" pos:end="17:9">v</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:23">chromaformat</name></name> <operator pos:start="17:25" pos:end="17:26">!=</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal></expr>)</condition> <block pos:start="17:31" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:18">

        <expr_stmt pos:start="19:9" pos:end="21:55"><expr pos:start="19:9" pos:end="21:54"><call pos:start="19:9" pos:end="21:54"><name pos:start="19:9" pos:end="19:14">av_log</name><argument_list pos:start="19:15" pos:end="21:54">(<argument pos:start="19:16" pos:end="19:25"><expr pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:25"><name pos:start="19:16" pos:end="19:16">v</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:19">s</name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:25">avctx</name></name></expr></argument>, <argument pos:start="19:28" pos:end="19:39"><expr pos:start="19:28" pos:end="19:39"><name pos:start="19:28" pos:end="19:39">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="21:16" pos:end="21:53"><expr pos:start="21:16" pos:end="21:53"><literal type="string" pos:start="21:16" pos:end="21:53">"Only 4:2:0 chroma format supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="29:5" pos:end="29:23">// (fps-2)/4 (-&gt;30)</comment>

    <expr_stmt pos:start="31:5" pos:end="31:47"><expr pos:start="31:5" pos:end="31:46"><name pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:5">v</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:22">frmrtq_postproc</name></name>       <operator pos:start="31:30" pos:end="31:30">=</operator> <call pos:start="31:32" pos:end="31:46"><name pos:start="31:32" pos:end="31:39">get_bits</name><argument_list pos:start="31:40" pos:end="31:46">(<argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><name pos:start="31:41" pos:end="31:42">gb</name></expr></argument>, <argument pos:start="31:45" pos:end="31:45"><expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="31:49" pos:end="31:56">//common</comment>

    <comment type="line" pos:start="33:5" pos:end="33:30">// (bitrate-32kbps)/64kbps</comment>

    <expr_stmt pos:start="35:5" pos:end="35:47"><expr pos:start="35:5" pos:end="35:46"><name pos:start="35:5" pos:end="35:22"><name pos:start="35:5" pos:end="35:5">v</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:22">bitrtq_postproc</name></name>       <operator pos:start="35:30" pos:end="35:30">=</operator> <call pos:start="35:32" pos:end="35:46"><name pos:start="35:32" pos:end="35:39">get_bits</name><argument_list pos:start="35:40" pos:end="35:46">(<argument pos:start="35:41" pos:end="35:42"><expr pos:start="35:41" pos:end="35:42"><name pos:start="35:41" pos:end="35:42">gb</name></expr></argument>, <argument pos:start="35:45" pos:end="35:45"><expr pos:start="35:45" pos:end="35:45"><literal type="number" pos:start="35:45" pos:end="35:45">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="35:49" pos:end="35:56">//common</comment>

    <expr_stmt pos:start="37:5" pos:end="37:45"><expr pos:start="37:5" pos:end="37:44"><name pos:start="37:5" pos:end="37:19"><name pos:start="37:5" pos:end="37:5">v</name><operator pos:start="37:6" pos:end="37:7">-&gt;</operator><name pos:start="37:8" pos:end="37:19">postprocflag</name></name>          <operator pos:start="37:30" pos:end="37:30">=</operator> <call pos:start="37:32" pos:end="37:44"><name pos:start="37:32" pos:end="37:40">get_bits1</name><argument_list pos:start="37:41" pos:end="37:44">(<argument pos:start="37:42" pos:end="37:43"><expr pos:start="37:42" pos:end="37:43"><name pos:start="37:42" pos:end="37:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <comment type="line" pos:start="37:49" pos:end="37:56">//common</comment>



    <expr_stmt pos:start="41:5" pos:end="41:59"><expr pos:start="41:5" pos:end="41:58"><name pos:start="41:5" pos:end="41:27"><name pos:start="41:5" pos:end="41:5">v</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:8">s</name><operator pos:start="41:9" pos:end="41:9">.</operator><name pos:start="41:10" pos:end="41:14">avctx</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:27">coded_width</name></name>  <operator pos:start="41:30" pos:end="41:30">=</operator> <operator pos:start="41:32" pos:end="41:32">(</operator><call pos:start="41:33" pos:end="41:48"><name pos:start="41:33" pos:end="41:40">get_bits</name><argument_list pos:start="41:41" pos:end="41:48">(<argument pos:start="41:42" pos:end="41:43"><expr pos:start="41:42" pos:end="41:43"><name pos:start="41:42" pos:end="41:43">gb</name></expr></argument>, <argument pos:start="41:46" pos:end="41:47"><expr pos:start="41:46" pos:end="41:47"><literal type="number" pos:start="41:46" pos:end="41:47">12</literal></expr></argument>)</argument_list></call> <operator pos:start="41:50" pos:end="41:50">+</operator> <literal type="number" pos:start="41:52" pos:end="41:52">1</literal><operator pos:start="41:53" pos:end="41:53">)</operator> <operator pos:start="41:55" pos:end="41:56">&lt;&lt;</operator> <literal type="number" pos:start="41:58" pos:end="41:58">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:5">v</name><operator pos:start="43:6" pos:end="43:7">-&gt;</operator><name pos:start="43:8" pos:end="43:8">s</name><operator pos:start="43:9" pos:end="43:9">.</operator><name pos:start="43:10" pos:end="43:14">avctx</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:28">coded_height</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <operator pos:start="43:32" pos:end="43:32">(</operator><call pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:40">get_bits</name><argument_list pos:start="43:41" pos:end="43:48">(<argument pos:start="43:42" pos:end="43:43"><expr pos:start="43:42" pos:end="43:43"><name pos:start="43:42" pos:end="43:43">gb</name></expr></argument>, <argument pos:start="43:46" pos:end="43:47"><expr pos:start="43:46" pos:end="43:47"><literal type="number" pos:start="43:46" pos:end="43:47">12</literal></expr></argument>)</argument_list></call> <operator pos:start="43:50" pos:end="43:50">+</operator> <literal type="number" pos:start="43:52" pos:end="43:52">1</literal><operator pos:start="43:53" pos:end="43:53">)</operator> <operator pos:start="43:55" pos:end="43:56">&lt;&lt;</operator> <literal type="number" pos:start="43:58" pos:end="43:58">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:55"><expr pos:start="45:5" pos:end="45:54"><name pos:start="45:5" pos:end="45:21"><name pos:start="45:5" pos:end="45:5">v</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:8">s</name><operator pos:start="45:9" pos:end="45:9">.</operator><name pos:start="45:10" pos:end="45:14">avctx</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:21">width</name></name>        <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:54"><name pos:start="45:32" pos:end="45:32">v</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:35">s</name><operator pos:start="45:36" pos:end="45:36">.</operator><name pos:start="45:37" pos:end="45:41">avctx</name><operator pos:start="45:42" pos:end="45:43">-&gt;</operator><name pos:start="45:44" pos:end="45:54">coded_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:56"><expr pos:start="47:5" pos:end="47:55"><name pos:start="47:5" pos:end="47:22"><name pos:start="47:5" pos:end="47:5">v</name><operator pos:start="47:6" pos:end="47:7">-&gt;</operator><name pos:start="47:8" pos:end="47:8">s</name><operator pos:start="47:9" pos:end="47:9">.</operator><name pos:start="47:10" pos:end="47:14">avctx</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:22">height</name></name>       <operator pos:start="47:30" pos:end="47:30">=</operator> <name pos:start="47:32" pos:end="47:55"><name pos:start="47:32" pos:end="47:32">v</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:35">s</name><operator pos:start="47:36" pos:end="47:36">.</operator><name pos:start="47:37" pos:end="47:41">avctx</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:55">coded_height</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:16"><name pos:start="49:5" pos:end="49:5">v</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:16">broadcast</name></name>             <operator pos:start="49:30" pos:end="49:30">=</operator> <call pos:start="49:32" pos:end="49:44"><name pos:start="49:32" pos:end="49:40">get_bits1</name><argument_list pos:start="49:41" pos:end="49:44">(<argument pos:start="49:42" pos:end="49:43"><expr pos:start="49:42" pos:end="49:43"><name pos:start="49:42" pos:end="49:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:45"><expr pos:start="51:5" pos:end="51:44"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:5">v</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:16">interlace</name></name>             <operator pos:start="51:30" pos:end="51:30">=</operator> <call pos:start="51:32" pos:end="51:44"><name pos:start="51:32" pos:end="51:40">get_bits1</name><argument_list pos:start="51:41" pos:end="51:44">(<argument pos:start="51:42" pos:end="51:43"><expr pos:start="51:42" pos:end="51:43"><name pos:start="51:42" pos:end="51:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:45"><expr pos:start="53:5" pos:end="53:44"><name pos:start="53:5" pos:end="53:17"><name pos:start="53:5" pos:end="53:5">v</name><operator pos:start="53:6" pos:end="53:7">-&gt;</operator><name pos:start="53:8" pos:end="53:17">tfcntrflag</name></name>            <operator pos:start="53:30" pos:end="53:30">=</operator> <call pos:start="53:32" pos:end="53:44"><name pos:start="53:32" pos:end="53:40">get_bits1</name><argument_list pos:start="53:41" pos:end="53:44">(<argument pos:start="53:42" pos:end="53:43"><expr pos:start="53:42" pos:end="53:43"><name pos:start="53:42" pos:end="53:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:45"><expr pos:start="55:5" pos:end="55:44"><name pos:start="55:5" pos:end="55:18"><name pos:start="55:5" pos:end="55:5">v</name><operator pos:start="55:6" pos:end="55:7">-&gt;</operator><name pos:start="55:8" pos:end="55:18">finterpflag</name></name>           <operator pos:start="55:30" pos:end="55:30">=</operator> <call pos:start="55:32" pos:end="55:44"><name pos:start="55:32" pos:end="55:40">get_bits1</name><argument_list pos:start="55:41" pos:end="55:44">(<argument pos:start="55:42" pos:end="55:43"><expr pos:start="55:42" pos:end="55:43"><name pos:start="55:42" pos:end="55:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:19"><expr pos:start="57:5" pos:end="57:18"><call pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:14">skip_bits1</name><argument_list pos:start="57:15" pos:end="57:18">(<argument pos:start="57:16" pos:end="57:17"><expr pos:start="57:16" pos:end="57:17"><name pos:start="57:16" pos:end="57:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="57:21" pos:end="57:31">// reserved</comment>



    <expr_stmt pos:start="61:5" pos:end="73:42"><expr pos:start="61:5" pos:end="73:41"><call pos:start="61:5" pos:end="73:41"><name pos:start="61:5" pos:end="61:10">av_log</name><argument_list pos:start="61:11" pos:end="73:41">(<argument pos:start="61:12" pos:end="61:21"><expr pos:start="61:12" pos:end="61:21"><name pos:start="61:12" pos:end="61:21"><name pos:start="61:12" pos:end="61:12">v</name><operator pos:start="61:13" pos:end="61:14">-&gt;</operator><name pos:start="61:15" pos:end="61:15">s</name><operator pos:start="61:16" pos:end="61:16">.</operator><name pos:start="61:17" pos:end="61:21">avctx</name></name></expr></argument>, <argument pos:start="61:24" pos:end="61:35"><expr pos:start="61:24" pos:end="61:35"><name pos:start="61:24" pos:end="61:35">AV_LOG_DEBUG</name></expr></argument>,

           <argument pos:start="63:12" pos:end="67:43"><expr pos:start="63:12" pos:end="67:43"><literal type="string" pos:start="63:12" pos:end="63:81">"Advanced Profile level %i:\nfrmrtq_postproc=%i, bitrtq_postproc=%i\n"</literal>

           <literal type="string" pos:start="65:12" pos:end="65:73">"LoopFilter=%i, ChromaFormat=%i, Pulldown=%i, Interlace: %i\n"</literal>

           <literal type="string" pos:start="67:12" pos:end="67:43">"TFCTRflag=%i, FINTERPflag=%i\n"</literal></expr></argument>,

           <argument pos:start="69:12" pos:end="69:19"><expr pos:start="69:12" pos:end="69:19"><name pos:start="69:12" pos:end="69:19"><name pos:start="69:12" pos:end="69:12">v</name><operator pos:start="69:13" pos:end="69:14">-&gt;</operator><name pos:start="69:15" pos:end="69:19">level</name></name></expr></argument>, <argument pos:start="69:22" pos:end="69:39"><expr pos:start="69:22" pos:end="69:39"><name pos:start="69:22" pos:end="69:39"><name pos:start="69:22" pos:end="69:22">v</name><operator pos:start="69:23" pos:end="69:24">-&gt;</operator><name pos:start="69:25" pos:end="69:39">frmrtq_postproc</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:59"><expr pos:start="69:42" pos:end="69:59"><name pos:start="69:42" pos:end="69:59"><name pos:start="69:42" pos:end="69:42">v</name><operator pos:start="69:43" pos:end="69:44">-&gt;</operator><name pos:start="69:45" pos:end="69:59">bitrtq_postproc</name></name></expr></argument>,

           <argument pos:start="71:12" pos:end="71:27"><expr pos:start="71:12" pos:end="71:27"><name pos:start="71:12" pos:end="71:27"><name pos:start="71:12" pos:end="71:12">v</name><operator pos:start="71:13" pos:end="71:14">-&gt;</operator><name pos:start="71:15" pos:end="71:15">s</name><operator pos:start="71:16" pos:end="71:16">.</operator><name pos:start="71:17" pos:end="71:27">loop_filter</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:44"><expr pos:start="71:30" pos:end="71:44"><name pos:start="71:30" pos:end="71:44"><name pos:start="71:30" pos:end="71:30">v</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:44">chromaformat</name></name></expr></argument>, <argument pos:start="71:47" pos:end="71:58"><expr pos:start="71:47" pos:end="71:58"><name pos:start="71:47" pos:end="71:58"><name pos:start="71:47" pos:end="71:47">v</name><operator pos:start="71:48" pos:end="71:49">-&gt;</operator><name pos:start="71:50" pos:end="71:58">broadcast</name></name></expr></argument>, <argument pos:start="71:61" pos:end="71:72"><expr pos:start="71:61" pos:end="71:72"><name pos:start="71:61" pos:end="71:72"><name pos:start="71:61" pos:end="71:61">v</name><operator pos:start="71:62" pos:end="71:63">-&gt;</operator><name pos:start="71:64" pos:end="71:72">interlace</name></name></expr></argument>,

           <argument pos:start="73:12" pos:end="73:24"><expr pos:start="73:12" pos:end="73:24"><name pos:start="73:12" pos:end="73:24"><name pos:start="73:12" pos:end="73:12">v</name><operator pos:start="73:13" pos:end="73:14">-&gt;</operator><name pos:start="73:15" pos:end="73:24">tfcntrflag</name></name></expr></argument>, <argument pos:start="73:27" pos:end="73:40"><expr pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:40"><name pos:start="73:27" pos:end="73:27">v</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:40">finterpflag</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:10"><name pos:start="77:5" pos:end="77:5">v</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:10">psf</name></name> <operator pos:start="77:12" pos:end="77:12">=</operator> <call pos:start="77:14" pos:end="77:26"><name pos:start="77:14" pos:end="77:22">get_bits1</name><argument_list pos:start="77:23" pos:end="77:26">(<argument pos:start="77:24" pos:end="77:25"><expr pos:start="77:24" pos:end="77:25"><name pos:start="77:24" pos:end="77:25">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if <condition pos:start="79:8" pos:end="79:15">(<expr pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:14"><name pos:start="79:9" pos:end="79:9">v</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:14">psf</name></name></expr>)</condition> <block pos:start="79:17" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18"> <comment type="line" pos:start="79:19" pos:end="79:31">//PsF, 6.1.13</comment>

        <expr_stmt pos:start="81:9" pos:end="81:100"><expr pos:start="81:9" pos:end="81:99"><call pos:start="81:9" pos:end="81:99"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:99">(<argument pos:start="81:16" pos:end="81:25"><expr pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:16">v</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:20">.</operator><name pos:start="81:21" pos:end="81:25">avctx</name></name></expr></argument>, <argument pos:start="81:28" pos:end="81:39"><expr pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:42" pos:end="81:98"><expr pos:start="81:42" pos:end="81:98"><literal type="string" pos:start="81:42" pos:end="81:98">"Progressive Segmented Frame mode: not supported (yet)\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:53"><expr pos:start="87:5" pos:end="87:52"><name pos:start="87:5" pos:end="87:21"><name pos:start="87:5" pos:end="87:5">v</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:8">s</name><operator pos:start="87:9" pos:end="87:9">.</operator><name pos:start="87:10" pos:end="87:21">max_b_frames</name></name> <operator pos:start="87:23" pos:end="87:23">=</operator> <name pos:start="87:25" pos:end="87:48"><name pos:start="87:25" pos:end="87:25">v</name><operator pos:start="87:26" pos:end="87:27">-&gt;</operator><name pos:start="87:28" pos:end="87:28">s</name><operator pos:start="87:29" pos:end="87:29">.</operator><name pos:start="87:30" pos:end="87:34">avctx</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:48">max_b_frames</name></name> <operator pos:start="87:50" pos:end="87:50">=</operator> <literal type="number" pos:start="87:52" pos:end="87:52">7</literal></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="187:5"><if pos:start="89:5" pos:end="187:5">if <condition pos:start="89:8" pos:end="89:22">(<expr pos:start="89:9" pos:end="89:21"><call pos:start="89:9" pos:end="89:21"><name pos:start="89:9" pos:end="89:17">get_bits1</name><argument_list pos:start="89:18" pos:end="89:21">(<argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><name pos:start="89:19" pos:end="89:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:24" pos:end="187:5">{<block_content pos:start="91:9" pos:end="185:9"> <comment type="line" pos:start="89:26" pos:end="89:72">//Display Info - decoding is not affected by it</comment>

        <decl_stmt pos:start="91:9" pos:end="91:25"><decl pos:start="91:9" pos:end="91:13"><type pos:start="91:9" pos:end="91:11"><name pos:start="91:9" pos:end="91:11">int</name></type> <name pos:start="91:13" pos:end="91:13">w</name></decl>, <decl pos:start="91:16" pos:end="91:16"><type ref="prev" pos:start="91:9" pos:end="91:11"/><name pos:start="91:16" pos:end="91:16">h</name></decl>, <decl pos:start="91:19" pos:end="91:24"><type ref="prev" pos:start="91:9" pos:end="91:11"/><name pos:start="91:19" pos:end="91:20">ar</name> <init pos:start="91:22" pos:end="91:24">= <expr pos:start="91:24" pos:end="91:24"><literal type="number" pos:start="91:24" pos:end="91:24">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:69"><expr pos:start="93:9" pos:end="93:68"><call pos:start="93:9" pos:end="93:68"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:68">(<argument pos:start="93:16" pos:end="93:25"><expr pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:16">v</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:25">avctx</name></name></expr></argument>, <argument pos:start="93:28" pos:end="93:39"><expr pos:start="93:28" pos:end="93:39"><name pos:start="93:28" pos:end="93:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="93:42" pos:end="93:67"><expr pos:start="93:42" pos:end="93:67"><literal type="string" pos:start="93:42" pos:end="93:67">"Display extended info:\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:33"><expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:9">w</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <call pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:20">get_bits</name><argument_list pos:start="95:21" pos:end="95:28">(<argument pos:start="95:22" pos:end="95:23"><expr pos:start="95:22" pos:end="95:23"><name pos:start="95:22" pos:end="95:23">gb</name></expr></argument>, <argument pos:start="95:26" pos:end="95:27"><expr pos:start="95:26" pos:end="95:27"><literal type="number" pos:start="95:26" pos:end="95:27">14</literal></expr></argument>)</argument_list></call> <operator pos:start="95:30" pos:end="95:30">+</operator> <literal type="number" pos:start="95:32" pos:end="95:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:33"><expr pos:start="97:9" pos:end="97:32"><name pos:start="97:9" pos:end="97:9">h</name> <operator pos:start="97:11" pos:end="97:11">=</operator> <call pos:start="97:13" pos:end="97:28"><name pos:start="97:13" pos:end="97:20">get_bits</name><argument_list pos:start="97:21" pos:end="97:28">(<argument pos:start="97:22" pos:end="97:23"><expr pos:start="97:22" pos:end="97:23"><name pos:start="97:22" pos:end="97:23">gb</name></expr></argument>, <argument pos:start="97:26" pos:end="97:27"><expr pos:start="97:26" pos:end="97:27"><literal type="number" pos:start="97:26" pos:end="97:27">14</literal></expr></argument>)</argument_list></call> <operator pos:start="97:30" pos:end="97:30">+</operator> <literal type="number" pos:start="97:32" pos:end="97:32">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:78"><expr pos:start="99:9" pos:end="99:77"><call pos:start="99:9" pos:end="99:77"><name pos:start="99:9" pos:end="99:14">av_log</name><argument_list pos:start="99:15" pos:end="99:77">(<argument pos:start="99:16" pos:end="99:25"><expr pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:25"><name pos:start="99:16" pos:end="99:16">v</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:19">s</name><operator pos:start="99:20" pos:end="99:20">.</operator><name pos:start="99:21" pos:end="99:25">avctx</name></name></expr></argument>, <argument pos:start="99:28" pos:end="99:39"><expr pos:start="99:28" pos:end="99:39"><name pos:start="99:28" pos:end="99:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="99:42" pos:end="99:70"><expr pos:start="99:42" pos:end="99:70"><literal type="string" pos:start="99:42" pos:end="99:70">"Display dimensions: %ix%i\n"</literal></expr></argument>, <argument pos:start="99:73" pos:end="99:73"><expr pos:start="99:73" pos:end="99:73"><name pos:start="99:73" pos:end="99:73">w</name></expr></argument>, <argument pos:start="99:76" pos:end="99:76"><expr pos:start="99:76" pos:end="99:76"><name pos:start="99:76" pos:end="99:76">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="101:9" pos:end="103:33"><if pos:start="101:9" pos:end="103:33">if <condition pos:start="101:12" pos:end="101:26">(<expr pos:start="101:13" pos:end="101:25"><call pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:21">get_bits1</name><argument_list pos:start="101:22" pos:end="101:25">(<argument pos:start="101:23" pos:end="101:24"><expr pos:start="101:23" pos:end="101:24"><name pos:start="101:23" pos:end="101:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:33"><block_content pos:start="103:13" pos:end="103:33">

            <expr_stmt pos:start="103:13" pos:end="103:33"><expr pos:start="103:13" pos:end="103:32"><name pos:start="103:13" pos:end="103:14">ar</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:32"><name pos:start="103:18" pos:end="103:25">get_bits</name><argument_list pos:start="103:26" pos:end="103:32">(<argument pos:start="103:27" pos:end="103:28"><expr pos:start="103:27" pos:end="103:28"><name pos:start="103:27" pos:end="103:28">gb</name></expr></argument>, <argument pos:start="103:31" pos:end="103:31"><expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="105:9" pos:end="129:9"><if pos:start="105:9" pos:end="109:9">if <condition pos:start="105:12" pos:end="105:26">(<expr pos:start="105:13" pos:end="105:25"><name pos:start="105:13" pos:end="105:14">ar</name> <operator pos:start="105:16" pos:end="105:17">&amp;&amp;</operator> <name pos:start="105:19" pos:end="105:20">ar</name> <operator pos:start="105:22" pos:end="105:22">&lt;</operator> <literal type="number" pos:start="105:24" pos:end="105:25">14</literal></expr>)</condition> <block pos:start="105:28" pos:end="109:9">{<block_content pos:start="107:13" pos:end="107:70">

            <expr_stmt pos:start="107:13" pos:end="107:70"><expr pos:start="107:13" pos:end="107:69"><name pos:start="107:13" pos:end="107:43"><name pos:start="107:13" pos:end="107:13">v</name><operator pos:start="107:14" pos:end="107:15">-&gt;</operator><name pos:start="107:16" pos:end="107:16">s</name><operator pos:start="107:17" pos:end="107:17">.</operator><name pos:start="107:18" pos:end="107:22">avctx</name><operator pos:start="107:23" pos:end="107:24">-&gt;</operator><name pos:start="107:25" pos:end="107:43">sample_aspect_ratio</name></name> <operator pos:start="107:45" pos:end="107:45">=</operator> <name pos:start="107:47" pos:end="107:69"><name pos:start="107:47" pos:end="107:65">ff_vc1_pixel_aspect</name><index pos:start="107:66" pos:end="107:69">[<expr pos:start="107:67" pos:end="107:68"><name pos:start="107:67" pos:end="107:68">ar</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="109:11" pos:end="117:9">else if <condition pos:start="109:19" pos:end="109:28">(<expr pos:start="109:20" pos:end="109:27"><name pos:start="109:20" pos:end="109:21">ar</name> <operator pos:start="109:23" pos:end="109:24">==</operator> <literal type="number" pos:start="109:26" pos:end="109:27">15</literal></expr>)</condition> <block pos:start="109:30" pos:end="117:9">{<block_content pos:start="111:13" pos:end="115:65">

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><name pos:start="111:13" pos:end="111:13">w</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <call pos:start="111:17" pos:end="111:31"><name pos:start="111:17" pos:end="111:24">get_bits</name><argument_list pos:start="111:25" pos:end="111:31">(<argument pos:start="111:26" pos:end="111:27"><expr pos:start="111:26" pos:end="111:27"><name pos:start="111:26" pos:end="111:27">gb</name></expr></argument>, <argument pos:start="111:30" pos:end="111:30"><expr pos:start="111:30" pos:end="111:30"><literal type="number" pos:start="111:30" pos:end="111:30">8</literal></expr></argument>)</argument_list></call> <operator pos:start="111:33" pos:end="111:33">+</operator> <literal type="number" pos:start="111:35" pos:end="111:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:36"><expr pos:start="113:13" pos:end="113:35"><name pos:start="113:13" pos:end="113:13">h</name> <operator pos:start="113:15" pos:end="113:15">=</operator> <call pos:start="113:17" pos:end="113:31"><name pos:start="113:17" pos:end="113:24">get_bits</name><argument_list pos:start="113:25" pos:end="113:31">(<argument pos:start="113:26" pos:end="113:27"><expr pos:start="113:26" pos:end="113:27"><name pos:start="113:26" pos:end="113:27">gb</name></expr></argument>, <argument pos:start="113:30" pos:end="113:30"><expr pos:start="113:30" pos:end="113:30"><literal type="number" pos:start="113:30" pos:end="113:30">8</literal></expr></argument>)</argument_list></call> <operator pos:start="113:33" pos:end="113:33">+</operator> <literal type="number" pos:start="113:35" pos:end="113:35">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:65"><expr pos:start="115:13" pos:end="115:64"><name pos:start="115:13" pos:end="115:43"><name pos:start="115:13" pos:end="115:13">v</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:16">s</name><operator pos:start="115:17" pos:end="115:17">.</operator><name pos:start="115:18" pos:end="115:22">avctx</name><operator pos:start="115:23" pos:end="115:24">-&gt;</operator><name pos:start="115:25" pos:end="115:43">sample_aspect_ratio</name></name> <operator pos:start="115:45" pos:end="115:45">=</operator> <operator pos:start="115:47" pos:end="115:47">(</operator><name pos:start="115:48" pos:end="115:57">AVRational</name><operator pos:start="115:58" pos:end="115:58">)</operator><block pos:start="115:59" pos:end="115:64">{<expr pos:start="115:60" pos:end="115:60"><name pos:start="115:60" pos:end="115:60">w</name></expr>, <expr pos:start="115:63" pos:end="115:63"><name pos:start="115:63" pos:end="115:63">h</name></expr>}</block></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="117:11" pos:end="129:9">else <block pos:start="117:16" pos:end="129:9">{<block_content pos:start="119:13" pos:end="127:31">

            <expr_stmt pos:start="119:13" pos:end="127:31"><expr pos:start="119:13" pos:end="127:30"><call pos:start="119:13" pos:end="127:30"><name pos:start="119:13" pos:end="119:21">av_reduce</name><argument_list pos:start="119:22" pos:end="127:30">(<argument pos:start="119:23" pos:end="119:58"><expr pos:start="119:23" pos:end="119:58"><operator pos:start="119:23" pos:end="119:23">&amp;</operator><name pos:start="119:24" pos:end="119:58"><name pos:start="119:24" pos:end="119:24">v</name><operator pos:start="119:25" pos:end="119:26">-&gt;</operator><name pos:start="119:27" pos:end="119:27">s</name><operator pos:start="119:28" pos:end="119:28">.</operator><name pos:start="119:29" pos:end="119:33">avctx</name><operator pos:start="119:34" pos:end="119:35">-&gt;</operator><name pos:start="119:36" pos:end="119:54">sample_aspect_ratio</name><operator pos:start="119:55" pos:end="119:55">.</operator><name pos:start="119:56" pos:end="119:58">num</name></name></expr></argument>,

                      <argument pos:start="121:23" pos:end="121:58"><expr pos:start="121:23" pos:end="121:58"><operator pos:start="121:23" pos:end="121:23">&amp;</operator><name pos:start="121:24" pos:end="121:58"><name pos:start="121:24" pos:end="121:24">v</name><operator pos:start="121:25" pos:end="121:26">-&gt;</operator><name pos:start="121:27" pos:end="121:27">s</name><operator pos:start="121:28" pos:end="121:28">.</operator><name pos:start="121:29" pos:end="121:33">avctx</name><operator pos:start="121:34" pos:end="121:35">-&gt;</operator><name pos:start="121:36" pos:end="121:54">sample_aspect_ratio</name><operator pos:start="121:55" pos:end="121:55">.</operator><name pos:start="121:56" pos:end="121:58">den</name></name></expr></argument>,

                      <argument pos:start="123:23" pos:end="123:44"><expr pos:start="123:23" pos:end="123:44"><name pos:start="123:23" pos:end="123:40"><name pos:start="123:23" pos:end="123:23">v</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:26">s</name><operator pos:start="123:27" pos:end="123:27">.</operator><name pos:start="123:28" pos:end="123:32">avctx</name><operator pos:start="123:33" pos:end="123:34">-&gt;</operator><name pos:start="123:35" pos:end="123:40">height</name></name> <operator pos:start="123:42" pos:end="123:42">*</operator> <name pos:start="123:44" pos:end="123:44">w</name></expr></argument>,

                      <argument pos:start="125:23" pos:end="125:43"><expr pos:start="125:23" pos:end="125:43"><name pos:start="125:23" pos:end="125:39"><name pos:start="125:23" pos:end="125:23">v</name><operator pos:start="125:24" pos:end="125:25">-&gt;</operator><name pos:start="125:26" pos:end="125:26">s</name><operator pos:start="125:27" pos:end="125:27">.</operator><name pos:start="125:28" pos:end="125:32">avctx</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:39">width</name></name> <operator pos:start="125:41" pos:end="125:41">*</operator> <name pos:start="125:43" pos:end="125:43">h</name></expr></argument>,

                      <argument pos:start="127:23" pos:end="127:29"><expr pos:start="127:23" pos:end="127:29"><literal type="number" pos:start="127:23" pos:end="127:23">1</literal> <operator pos:start="127:25" pos:end="127:26">&lt;&lt;</operator> <literal type="number" pos:start="127:28" pos:end="127:29">30</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="131:9" pos:end="135:52"><expr pos:start="131:9" pos:end="135:51"><call pos:start="131:9" pos:end="135:51"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="135:51">(<argument pos:start="131:16" pos:end="131:25"><expr pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:25"><name pos:start="131:16" pos:end="131:16">v</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:19">s</name><operator pos:start="131:20" pos:end="131:20">.</operator><name pos:start="131:21" pos:end="131:25">avctx</name></name></expr></argument>, <argument pos:start="131:28" pos:end="131:39"><expr pos:start="131:28" pos:end="131:39"><name pos:start="131:28" pos:end="131:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="131:42" pos:end="131:58"><expr pos:start="131:42" pos:end="131:58"><literal type="string" pos:start="131:42" pos:end="131:58">"Aspect: %i:%i\n"</literal></expr></argument>,

               <argument pos:start="133:16" pos:end="133:50"><expr pos:start="133:16" pos:end="133:50"><name pos:start="133:16" pos:end="133:50"><name pos:start="133:16" pos:end="133:16">v</name><operator pos:start="133:17" pos:end="133:18">-&gt;</operator><name pos:start="133:19" pos:end="133:19">s</name><operator pos:start="133:20" pos:end="133:20">.</operator><name pos:start="133:21" pos:end="133:25">avctx</name><operator pos:start="133:26" pos:end="133:27">-&gt;</operator><name pos:start="133:28" pos:end="133:46">sample_aspect_ratio</name><operator pos:start="133:47" pos:end="133:47">.</operator><name pos:start="133:48" pos:end="133:50">num</name></name></expr></argument>,

               <argument pos:start="135:16" pos:end="135:50"><expr pos:start="135:16" pos:end="135:50"><name pos:start="135:16" pos:end="135:50"><name pos:start="135:16" pos:end="135:16">v</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:19">s</name><operator pos:start="135:20" pos:end="135:20">.</operator><name pos:start="135:21" pos:end="135:25">avctx</name><operator pos:start="135:26" pos:end="135:27">-&gt;</operator><name pos:start="135:28" pos:end="135:46">sample_aspect_ratio</name><operator pos:start="135:47" pos:end="135:47">.</operator><name pos:start="135:48" pos:end="135:50">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="139:9" pos:end="173:9"><if pos:start="139:9" pos:end="173:9">if <condition pos:start="139:12" pos:end="139:26">(<expr pos:start="139:13" pos:end="139:25"><call pos:start="139:13" pos:end="139:25"><name pos:start="139:13" pos:end="139:21">get_bits1</name><argument_list pos:start="139:22" pos:end="139:25">(<argument pos:start="139:23" pos:end="139:24"><expr pos:start="139:23" pos:end="139:24"><name pos:start="139:23" pos:end="139:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:28" pos:end="173:9">{<block_content pos:start="141:13" pos:end="171:13"> <comment type="line" pos:start="139:30" pos:end="139:46">//framerate stuff</comment>

            <if_stmt pos:start="141:13" pos:end="163:13"><if pos:start="141:13" pos:end="147:13">if <condition pos:start="141:16" pos:end="141:30">(<expr pos:start="141:17" pos:end="141:29"><call pos:start="141:17" pos:end="141:29"><name pos:start="141:17" pos:end="141:25">get_bits1</name><argument_list pos:start="141:26" pos:end="141:29">(<argument pos:start="141:27" pos:end="141:28"><expr pos:start="141:27" pos:end="141:28"><name pos:start="141:27" pos:end="141:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="141:32" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:65">

                <expr_stmt pos:start="143:17" pos:end="143:47"><expr pos:start="143:17" pos:end="143:46"><name pos:start="143:17" pos:end="143:41"><name pos:start="143:17" pos:end="143:17">v</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:20">s</name><operator pos:start="143:21" pos:end="143:21">.</operator><name pos:start="143:22" pos:end="143:26">avctx</name><operator pos:start="143:27" pos:end="143:28">-&gt;</operator><name pos:start="143:29" pos:end="143:37">time_base</name><operator pos:start="143:38" pos:end="143:38">.</operator><name pos:start="143:39" pos:end="143:41">num</name></name> <operator pos:start="143:43" pos:end="143:43">=</operator> <literal type="number" pos:start="143:45" pos:end="143:46">32</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:65"><expr pos:start="145:17" pos:end="145:64"><name pos:start="145:17" pos:end="145:41"><name pos:start="145:17" pos:end="145:17">v</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:20">s</name><operator pos:start="145:21" pos:end="145:21">.</operator><name pos:start="145:22" pos:end="145:26">avctx</name><operator pos:start="145:27" pos:end="145:28">-&gt;</operator><name pos:start="145:29" pos:end="145:37">time_base</name><operator pos:start="145:38" pos:end="145:38">.</operator><name pos:start="145:39" pos:end="145:41">den</name></name> <operator pos:start="145:43" pos:end="145:43">=</operator> <call pos:start="145:45" pos:end="145:60"><name pos:start="145:45" pos:end="145:52">get_bits</name><argument_list pos:start="145:53" pos:end="145:60">(<argument pos:start="145:54" pos:end="145:55"><expr pos:start="145:54" pos:end="145:55"><name pos:start="145:54" pos:end="145:55">gb</name></expr></argument>, <argument pos:start="145:58" pos:end="145:59"><expr pos:start="145:58" pos:end="145:59"><literal type="number" pos:start="145:58" pos:end="145:59">16</literal></expr></argument>)</argument_list></call> <operator pos:start="145:62" pos:end="145:62">+</operator> <literal type="number" pos:start="145:64" pos:end="145:64">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="147:15" pos:end="163:13">else <block pos:start="147:20" pos:end="163:13">{<block_content pos:start="149:17" pos:end="161:17">

                <decl_stmt pos:start="149:17" pos:end="149:27"><decl pos:start="149:17" pos:end="149:22"><type pos:start="149:17" pos:end="149:19"><name pos:start="149:17" pos:end="149:19">int</name></type> <name pos:start="149:21" pos:end="149:22">nr</name></decl>, <decl pos:start="149:25" pos:end="149:26"><type ref="prev" pos:start="149:17" pos:end="149:19"/><name pos:start="149:25" pos:end="149:26">dr</name></decl>;</decl_stmt>

                <expr_stmt pos:start="151:17" pos:end="151:37"><expr pos:start="151:17" pos:end="151:36"><name pos:start="151:17" pos:end="151:18">nr</name> <operator pos:start="151:20" pos:end="151:20">=</operator> <call pos:start="151:22" pos:end="151:36"><name pos:start="151:22" pos:end="151:29">get_bits</name><argument_list pos:start="151:30" pos:end="151:36">(<argument pos:start="151:31" pos:end="151:32"><expr pos:start="151:31" pos:end="151:32"><name pos:start="151:31" pos:end="151:32">gb</name></expr></argument>, <argument pos:start="151:35" pos:end="151:35"><expr pos:start="151:35" pos:end="151:35"><literal type="number" pos:start="151:35" pos:end="151:35">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:37"><expr pos:start="153:17" pos:end="153:36"><name pos:start="153:17" pos:end="153:18">dr</name> <operator pos:start="153:20" pos:end="153:20">=</operator> <call pos:start="153:22" pos:end="153:36"><name pos:start="153:22" pos:end="153:29">get_bits</name><argument_list pos:start="153:30" pos:end="153:36">(<argument pos:start="153:31" pos:end="153:32"><expr pos:start="153:31" pos:end="153:32"><name pos:start="153:31" pos:end="153:32">gb</name></expr></argument>, <argument pos:start="153:35" pos:end="153:35"><expr pos:start="153:35" pos:end="153:35"><literal type="number" pos:start="153:35" pos:end="153:35">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="155:17" pos:end="161:17"><if pos:start="155:17" pos:end="161:17">if <condition pos:start="155:20" pos:end="155:49">(<expr pos:start="155:21" pos:end="155:48"><name pos:start="155:21" pos:end="155:22">nr</name> <operator pos:start="155:24" pos:end="155:25">&amp;&amp;</operator> <name pos:start="155:27" pos:end="155:28">nr</name> <operator pos:start="155:30" pos:end="155:30">&lt;</operator> <literal type="number" pos:start="155:32" pos:end="155:32">8</literal> <operator pos:start="155:34" pos:end="155:35">&amp;&amp;</operator> <name pos:start="155:37" pos:end="155:38">dr</name> <operator pos:start="155:40" pos:end="155:41">&amp;&amp;</operator> <name pos:start="155:43" pos:end="155:44">dr</name> <operator pos:start="155:46" pos:end="155:46">&lt;</operator> <literal type="number" pos:start="155:48" pos:end="155:48">3</literal></expr>)</condition> <block pos:start="155:51" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:77">

                    <expr_stmt pos:start="157:21" pos:end="157:70"><expr pos:start="157:21" pos:end="157:69"><name pos:start="157:21" pos:end="157:45"><name pos:start="157:21" pos:end="157:21">v</name><operator pos:start="157:22" pos:end="157:23">-&gt;</operator><name pos:start="157:24" pos:end="157:24">s</name><operator pos:start="157:25" pos:end="157:25">.</operator><name pos:start="157:26" pos:end="157:30">avctx</name><operator pos:start="157:31" pos:end="157:32">-&gt;</operator><name pos:start="157:33" pos:end="157:41">time_base</name><operator pos:start="157:42" pos:end="157:42">.</operator><name pos:start="157:43" pos:end="157:45">num</name></name> <operator pos:start="157:47" pos:end="157:47">=</operator> <name pos:start="157:49" pos:end="157:69"><name pos:start="157:49" pos:end="157:61">ff_vc1_fps_dr</name><index pos:start="157:62" pos:end="157:69">[<expr pos:start="157:63" pos:end="157:68"><name pos:start="157:63" pos:end="157:64">dr</name> <operator pos:start="157:66" pos:end="157:66">-</operator> <literal type="number" pos:start="157:68" pos:end="157:68">1</literal></expr>]</index></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="159:21" pos:end="159:77"><expr pos:start="159:21" pos:end="159:76"><name pos:start="159:21" pos:end="159:45"><name pos:start="159:21" pos:end="159:21">v</name><operator pos:start="159:22" pos:end="159:23">-&gt;</operator><name pos:start="159:24" pos:end="159:24">s</name><operator pos:start="159:25" pos:end="159:25">.</operator><name pos:start="159:26" pos:end="159:30">avctx</name><operator pos:start="159:31" pos:end="159:32">-&gt;</operator><name pos:start="159:33" pos:end="159:41">time_base</name><operator pos:start="159:42" pos:end="159:42">.</operator><name pos:start="159:43" pos:end="159:45">den</name></name> <operator pos:start="159:47" pos:end="159:47">=</operator> <name pos:start="159:49" pos:end="159:69"><name pos:start="159:49" pos:end="159:61">ff_vc1_fps_nr</name><index pos:start="159:62" pos:end="159:69">[<expr pos:start="159:63" pos:end="159:68"><name pos:start="159:63" pos:end="159:64">nr</name> <operator pos:start="159:66" pos:end="159:66">-</operator> <literal type="number" pos:start="159:68" pos:end="159:68">1</literal></expr>]</index></name> <operator pos:start="159:71" pos:end="159:71">*</operator> <literal type="number" pos:start="159:73" pos:end="159:76">1000</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="165:13" pos:end="171:13"><if pos:start="165:13" pos:end="171:13">if <condition pos:start="165:16" pos:end="165:29">(<expr pos:start="165:17" pos:end="165:28"><name pos:start="165:17" pos:end="165:28"><name pos:start="165:17" pos:end="165:17">v</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:28">broadcast</name></name></expr>)</condition> <block pos:start="165:31" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:48"> <comment type="line" pos:start="165:33" pos:end="165:58">// Pulldown may be present</comment>

                <expr_stmt pos:start="167:17" pos:end="167:48"><expr pos:start="167:17" pos:end="167:47"><name pos:start="167:17" pos:end="167:41"><name pos:start="167:17" pos:end="167:17">v</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:20">s</name><operator pos:start="167:21" pos:end="167:21">.</operator><name pos:start="167:22" pos:end="167:26">avctx</name><operator pos:start="167:27" pos:end="167:28">-&gt;</operator><name pos:start="167:29" pos:end="167:37">time_base</name><operator pos:start="167:38" pos:end="167:38">.</operator><name pos:start="167:39" pos:end="167:41">den</name></name>  <operator pos:start="167:44" pos:end="167:45">*=</operator> <literal type="number" pos:start="167:47" pos:end="167:47">2</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:48"><expr pos:start="169:17" pos:end="169:47"><name pos:start="169:17" pos:end="169:43"><name pos:start="169:17" pos:end="169:17">v</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator><name pos:start="169:20" pos:end="169:20">s</name><operator pos:start="169:21" pos:end="169:21">.</operator><name pos:start="169:22" pos:end="169:26">avctx</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:43">ticks_per_frame</name></name> <operator pos:start="169:45" pos:end="169:45">=</operator> <literal type="number" pos:start="169:47" pos:end="169:47">2</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="177:9" pos:end="185:9"><if pos:start="177:9" pos:end="185:9">if <condition pos:start="177:12" pos:end="177:26">(<expr pos:start="177:13" pos:end="177:25"><call pos:start="177:13" pos:end="177:25"><name pos:start="177:13" pos:end="177:21">get_bits1</name><argument_list pos:start="177:22" pos:end="177:25">(<argument pos:start="177:23" pos:end="177:24"><expr pos:start="177:23" pos:end="177:24"><name pos:start="177:23" pos:end="177:24">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="177:28" pos:end="185:9">{<block_content pos:start="179:13" pos:end="183:47">

            <expr_stmt pos:start="179:13" pos:end="179:47"><expr pos:start="179:13" pos:end="179:46"><name pos:start="179:13" pos:end="179:25"><name pos:start="179:13" pos:end="179:13">v</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:25">color_prim</name></name>    <operator pos:start="179:30" pos:end="179:30">=</operator> <call pos:start="179:32" pos:end="179:46"><name pos:start="179:32" pos:end="179:39">get_bits</name><argument_list pos:start="179:40" pos:end="179:46">(<argument pos:start="179:41" pos:end="179:42"><expr pos:start="179:41" pos:end="179:42"><name pos:start="179:41" pos:end="179:42">gb</name></expr></argument>, <argument pos:start="179:45" pos:end="179:45"><expr pos:start="179:45" pos:end="179:45"><literal type="number" pos:start="179:45" pos:end="179:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:47"><expr pos:start="181:13" pos:end="181:46"><name pos:start="181:13" pos:end="181:28"><name pos:start="181:13" pos:end="181:13">v</name><operator pos:start="181:14" pos:end="181:15">-&gt;</operator><name pos:start="181:16" pos:end="181:28">transfer_char</name></name> <operator pos:start="181:30" pos:end="181:30">=</operator> <call pos:start="181:32" pos:end="181:46"><name pos:start="181:32" pos:end="181:39">get_bits</name><argument_list pos:start="181:40" pos:end="181:46">(<argument pos:start="181:41" pos:end="181:42"><expr pos:start="181:41" pos:end="181:42"><name pos:start="181:41" pos:end="181:42">gb</name></expr></argument>, <argument pos:start="181:45" pos:end="181:45"><expr pos:start="181:45" pos:end="181:45"><literal type="number" pos:start="181:45" pos:end="181:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:47"><expr pos:start="183:13" pos:end="183:46"><name pos:start="183:13" pos:end="183:26"><name pos:start="183:13" pos:end="183:13">v</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:26">matrix_coef</name></name>   <operator pos:start="183:30" pos:end="183:30">=</operator> <call pos:start="183:32" pos:end="183:46"><name pos:start="183:32" pos:end="183:39">get_bits</name><argument_list pos:start="183:40" pos:end="183:46">(<argument pos:start="183:41" pos:end="183:42"><expr pos:start="183:41" pos:end="183:42"><name pos:start="183:41" pos:end="183:42">gb</name></expr></argument>, <argument pos:start="183:45" pos:end="183:45"><expr pos:start="183:45" pos:end="183:45"><literal type="number" pos:start="183:45" pos:end="183:45">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="191:5" pos:end="191:38"><expr pos:start="191:5" pos:end="191:37"><name pos:start="191:5" pos:end="191:21"><name pos:start="191:5" pos:end="191:5">v</name><operator pos:start="191:6" pos:end="191:7">-&gt;</operator><name pos:start="191:8" pos:end="191:21">hrd_param_flag</name></name> <operator pos:start="191:23" pos:end="191:23">=</operator> <call pos:start="191:25" pos:end="191:37"><name pos:start="191:25" pos:end="191:33">get_bits1</name><argument_list pos:start="191:34" pos:end="191:37">(<argument pos:start="191:35" pos:end="191:36"><expr pos:start="191:35" pos:end="191:36"><name pos:start="191:35" pos:end="191:36">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="193:5" pos:end="211:5"><if pos:start="193:5" pos:end="211:5">if <condition pos:start="193:8" pos:end="193:26">(<expr pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:25"><name pos:start="193:9" pos:end="193:9">v</name><operator pos:start="193:10" pos:end="193:11">-&gt;</operator><name pos:start="193:12" pos:end="193:25">hrd_param_flag</name></name></expr>)</condition> <block pos:start="193:28" pos:end="211:5">{<block_content pos:start="195:9" pos:end="209:9">

        <decl_stmt pos:start="195:9" pos:end="195:14"><decl pos:start="195:9" pos:end="195:13"><type pos:start="195:9" pos:end="195:11"><name pos:start="195:9" pos:end="195:11">int</name></type> <name pos:start="195:13" pos:end="195:13">i</name></decl>;</decl_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:51"><expr pos:start="197:9" pos:end="197:50"><name pos:start="197:9" pos:end="197:32"><name pos:start="197:9" pos:end="197:9">v</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:32">hrd_num_leaky_buckets</name></name> <operator pos:start="197:34" pos:end="197:34">=</operator> <call pos:start="197:36" pos:end="197:50"><name pos:start="197:36" pos:end="197:43">get_bits</name><argument_list pos:start="197:44" pos:end="197:50">(<argument pos:start="197:45" pos:end="197:46"><expr pos:start="197:45" pos:end="197:46"><name pos:start="197:45" pos:end="197:46">gb</name></expr></argument>, <argument pos:start="197:49" pos:end="197:49"><expr pos:start="197:49" pos:end="197:49"><literal type="number" pos:start="197:49" pos:end="197:49">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:25"><expr pos:start="199:9" pos:end="199:24"><call pos:start="199:9" pos:end="199:24"><name pos:start="199:9" pos:end="199:17">skip_bits</name><argument_list pos:start="199:18" pos:end="199:24">(<argument pos:start="199:19" pos:end="199:20"><expr pos:start="199:19" pos:end="199:20"><name pos:start="199:19" pos:end="199:20">gb</name></expr></argument>, <argument pos:start="199:23" pos:end="199:23"><expr pos:start="199:23" pos:end="199:23"><literal type="number" pos:start="199:23" pos:end="199:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="199:27" pos:end="199:44">//bitrate exponent</comment>

        <expr_stmt pos:start="201:9" pos:end="201:25"><expr pos:start="201:9" pos:end="201:24"><call pos:start="201:9" pos:end="201:24"><name pos:start="201:9" pos:end="201:17">skip_bits</name><argument_list pos:start="201:18" pos:end="201:24">(<argument pos:start="201:19" pos:end="201:20"><expr pos:start="201:19" pos:end="201:20"><name pos:start="201:19" pos:end="201:20">gb</name></expr></argument>, <argument pos:start="201:23" pos:end="201:23"><expr pos:start="201:23" pos:end="201:23"><literal type="number" pos:start="201:23" pos:end="201:23">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="201:27" pos:end="201:48">//buffer size exponent</comment>

        <for pos:start="203:9" pos:end="209:9">for <control pos:start="203:13" pos:end="203:54">(<init pos:start="203:14" pos:end="203:19"><expr pos:start="203:14" pos:end="203:18"><name pos:start="203:14" pos:end="203:14">i</name> <operator pos:start="203:16" pos:end="203:16">=</operator> <literal type="number" pos:start="203:18" pos:end="203:18">0</literal></expr>;</init> <condition pos:start="203:21" pos:end="203:49"><expr pos:start="203:21" pos:end="203:48"><name pos:start="203:21" pos:end="203:21">i</name> <operator pos:start="203:23" pos:end="203:23">&lt;</operator> <name pos:start="203:25" pos:end="203:48"><name pos:start="203:25" pos:end="203:25">v</name><operator pos:start="203:26" pos:end="203:27">-&gt;</operator><name pos:start="203:28" pos:end="203:48">hrd_num_leaky_buckets</name></name></expr>;</condition> <incr pos:start="203:51" pos:end="203:53"><expr pos:start="203:51" pos:end="203:53"><name pos:start="203:51" pos:end="203:51">i</name><operator pos:start="203:52" pos:end="203:53">++</operator></expr></incr>)</control> <block pos:start="203:56" pos:end="209:9">{<block_content pos:start="205:13" pos:end="207:30">

            <expr_stmt pos:start="205:13" pos:end="205:30"><expr pos:start="205:13" pos:end="205:29"><call pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:21">skip_bits</name><argument_list pos:start="205:22" pos:end="205:29">(<argument pos:start="205:23" pos:end="205:24"><expr pos:start="205:23" pos:end="205:24"><name pos:start="205:23" pos:end="205:24">gb</name></expr></argument>, <argument pos:start="205:27" pos:end="205:28"><expr pos:start="205:27" pos:end="205:28"><literal type="number" pos:start="205:27" pos:end="205:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="205:32" pos:end="205:44">//hrd_rate[n]</comment>

            <expr_stmt pos:start="207:13" pos:end="207:30"><expr pos:start="207:13" pos:end="207:29"><call pos:start="207:13" pos:end="207:29"><name pos:start="207:13" pos:end="207:21">skip_bits</name><argument_list pos:start="207:22" pos:end="207:29">(<argument pos:start="207:23" pos:end="207:24"><expr pos:start="207:23" pos:end="207:24"><name pos:start="207:23" pos:end="207:24">gb</name></expr></argument>, <argument pos:start="207:27" pos:end="207:28"><expr pos:start="207:27" pos:end="207:28"><literal type="number" pos:start="207:27" pos:end="207:28">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="207:32" pos:end="207:46">//hrd_buffer[n]</comment>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
