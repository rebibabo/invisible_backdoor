<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/98.c" pos:tabs="8"><function pos:start="1:1" pos:end="181:1"><type pos:start="1:1" pos:end="1:25"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name> <name pos:start="1:20" pos:end="1:25">RENAME</name></type>(<name pos:start="1:27" pos:end="1:41">yuvPlanartouyvy</name>)<parameter_list pos:start="1:43" pos:end="5:115">(<parameter pos:start="1:44" pos:end="1:62"><decl pos:start="1:44" pos:end="1:62"><type pos:start="1:44" pos:end="1:62"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:56">uint8_t</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:62">ysrc</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:83"><decl pos:start="1:65" pos:end="1:83"><type pos:start="1:65" pos:end="1:83"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:77">uint8_t</name> <modifier pos:start="1:79" pos:end="1:79">*</modifier></type><name pos:start="1:80" pos:end="1:83">usrc</name></decl></parameter>, <parameter pos:start="1:86" pos:end="1:104"><decl pos:start="1:86" pos:end="1:104"><type pos:start="1:86" pos:end="1:104"><specifier pos:start="1:86" pos:end="1:90">const</specifier> <name pos:start="1:92" pos:end="1:98">uint8_t</name> <modifier pos:start="1:100" pos:end="1:100">*</modifier></type><name pos:start="1:101" pos:end="1:104">vsrc</name></decl></parameter>, <parameter pos:start="1:107" pos:end="1:118"><decl pos:start="1:107" pos:end="1:118"><type pos:start="1:107" pos:end="1:118"><name pos:start="1:107" pos:end="1:113">uint8_t</name> <modifier pos:start="1:115" pos:end="1:115">*</modifier></type><name pos:start="1:116" pos:end="1:118">dst</name></decl></parameter>,

                                           <parameter pos:start="3:44" pos:end="3:53"><decl pos:start="3:44" pos:end="3:53"><type pos:start="3:44" pos:end="3:53"><name pos:start="3:44" pos:end="3:47">long</name></type> <name pos:start="3:49" pos:end="3:53">width</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:66"><decl pos:start="3:56" pos:end="3:66"><type pos:start="3:56" pos:end="3:66"><name pos:start="3:56" pos:end="3:59">long</name></type> <name pos:start="3:61" pos:end="3:66">height</name></decl></parameter>,

                                           <parameter pos:start="5:44" pos:end="5:57"><decl pos:start="5:44" pos:end="5:57"><type pos:start="5:44" pos:end="5:57"><name pos:start="5:44" pos:end="5:47">long</name></type> <name pos:start="5:49" pos:end="5:57">lumStride</name></decl></parameter>, <parameter pos:start="5:60" pos:end="5:75"><decl pos:start="5:60" pos:end="5:75"><type pos:start="5:60" pos:end="5:75"><name pos:start="5:60" pos:end="5:63">long</name></type> <name pos:start="5:65" pos:end="5:75">chromStride</name></decl></parameter>, <parameter pos:start="5:78" pos:end="5:91"><decl pos:start="5:78" pos:end="5:91"><type pos:start="5:78" pos:end="5:91"><name pos:start="5:78" pos:end="5:81">long</name></type> <name pos:start="5:83" pos:end="5:91">dstStride</name></decl></parameter>, <parameter pos:start="5:94" pos:end="5:114"><decl pos:start="5:94" pos:end="5:114"><type pos:start="5:94" pos:end="5:114"><name pos:start="5:94" pos:end="5:97">long</name></type> <name pos:start="5:99" pos:end="5:114">vertLumPerChroma</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="181:1">{<block_content pos:start="9:5" pos:end="180:0">

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">long</name></type> <name pos:start="9:10" pos:end="9:10">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:39"><decl pos:start="11:5" pos:end="11:38"><type pos:start="11:5" pos:end="11:17"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">x86_reg</name></type> <name pos:start="11:19" pos:end="11:28">chromWidth</name><init pos:start="11:29" pos:end="11:38">= <expr pos:start="11:31" pos:end="11:38"><name pos:start="11:31" pos:end="11:35">width</name><operator pos:start="11:36" pos:end="11:37">&gt;&gt;</operator><literal type="number" pos:start="11:38" pos:end="11:38">1</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="13:5" pos:end="172:0">for <control pos:start="13:9" pos:end="13:28">(<init pos:start="13:10" pos:end="13:13"><expr pos:start="13:10" pos:end="13:12"><name pos:start="13:10" pos:end="13:10">y</name><operator pos:start="13:11" pos:end="13:11">=</operator><literal type="number" pos:start="13:12" pos:end="13:12">0</literal></expr>;</init> <condition pos:start="13:15" pos:end="13:23"><expr pos:start="13:15" pos:end="13:22"><name pos:start="13:15" pos:end="13:15">y</name><operator pos:start="13:16" pos:end="13:16">&lt;</operator><name pos:start="13:17" pos:end="13:22">height</name></expr>;</condition> <incr pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><name pos:start="13:25" pos:end="13:25">y</name><operator pos:start="13:26" pos:end="13:27">++</operator></expr></incr>)</control> <block pos:start="13:30" pos:end="172:0">{<block_content pos:start="19:9" pos:end="167:25">

<cpp:if pos:start="15:1" pos:end="15:24">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

        <comment type="line" pos:start="17:9" pos:end="17:115">//FIXME handle 2 lines at once (fewer prefetches, reuse some chroma, but very likely memory-limited anyway)</comment>

        <asm pos:start="19:9" pos:end="92:0">__asm__ <specifier pos:start="19:17" pos:end="19:24">volatile</specifier>(

            "xor                %%"REG_a", %%"REG_a"    \n\t"

            ".p2align                   4               \n\t"

            "1:                                         \n\t"

            PREFETCH"   32(%1, %%"REG_a", 2)            \n\t"

            PREFETCH"   32(%2, %%"REG_a")               \n\t"

            PREFETCH"   32(%3, %%"REG_a")               \n\t"

            "movq         (%2, %%"REG_a"), %%mm0        \n\t" <comment type="line" pos:start="33:63" pos:end="33:69">// U(0)</comment>

            "movq                   %%mm0, %%mm2        \n\t" <comment type="line" pos:start="35:63" pos:end="35:69">// U(0)</comment>

            "movq         (%3, %%"REG_a"), %%mm1        \n\t" <comment type="line" pos:start="37:63" pos:end="37:69">// V(0)</comment>

            "punpcklbw              %%mm1, %%mm0        \n\t" <comment type="line" pos:start="39:63" pos:end="39:77">// UVUV UVUV(0)</comment>

            "punpckhbw              %%mm1, %%mm2        \n\t" <comment type="line" pos:start="41:63" pos:end="41:77">// UVUV UVUV(8)</comment>



            "movq       (%1, %%"REG_a",2), %%mm3        \n\t" <comment type="line" pos:start="45:63" pos:end="45:69">// Y(0)</comment>

            "movq      8(%1, %%"REG_a",2), %%mm5        \n\t" <comment type="line" pos:start="47:63" pos:end="47:69">// Y(8)</comment>

            "movq                   %%mm0, %%mm4        \n\t" <comment type="line" pos:start="49:63" pos:end="49:69">// Y(0)</comment>

            "movq                   %%mm2, %%mm6        \n\t" <comment type="line" pos:start="51:63" pos:end="51:69">// Y(8)</comment>

            "punpcklbw              %%mm3, %%mm0        \n\t" <comment type="line" pos:start="53:63" pos:end="53:77">// YUYV YUYV(0)</comment>

            "punpckhbw              %%mm3, %%mm4        \n\t" <comment type="line" pos:start="55:63" pos:end="55:77">// YUYV YUYV(4)</comment>

            "punpcklbw              %%mm5, %%mm2        \n\t" <comment type="line" pos:start="57:63" pos:end="57:77">// YUYV YUYV(8)</comment>

            "punpckhbw              %%mm5, %%mm6        \n\t" <comment type="line" pos:start="59:63" pos:end="59:78">// YUYV YUYV(12)</comment>



            MOVNTQ"                 %%mm0,   (%0, %%"REG_a", 4)     \n\t"

            MOVNTQ"                 %%mm4,  8(%0, %%"REG_a", 4)     \n\t"

            MOVNTQ"                 %%mm2, 16(%0, %%"REG_a", 4)     \n\t"

            MOVNTQ"                 %%mm6, 24(%0, %%"REG_a", 4)     \n\t"



            "add                       $8, %%"REG_a"    \n\t"

            "cmp                       %4, %%"REG_a"    \n\t"

            " jb                       1b               \n\t"

            ::"r"(dst), "r"(ysrc), "r"(usrc), "r"(vsrc), "g" (chromWidth)

            : "%"REG_a

        );</asm>

<cpp:else pos:start="85:1" pos:end="85:5">#<cpp:directive pos:start="85:2" pos:end="85:5">else</cpp:directive></cpp:else>

<comment type="line" pos:start="87:1" pos:end="87:48">//FIXME adapt the Alpha ASM code from yv12-&gt;yuy2</comment>



<cpp:if pos:start="91:1" pos:end="91:19">#<cpp:directive pos:start="91:2" pos:end="91:3">if</cpp:directive> <expr pos:start="91:5" pos:end="91:19"><name pos:start="91:5" pos:end="91:19">HAVE_FAST_64BIT</name></expr></cpp:if>

        <decl_stmt pos:start="93:9" pos:end="93:14"><decl pos:start="93:9" pos:end="93:13"><type pos:start="93:9" pos:end="93:11"><name pos:start="93:9" pos:end="93:11">int</name></type> <name pos:start="93:13" pos:end="93:13">i</name></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="95:42"><decl pos:start="95:9" pos:end="95:41"><type pos:start="95:9" pos:end="95:18"><name pos:start="95:9" pos:end="95:16">uint64_t</name> <modifier pos:start="95:18" pos:end="95:18">*</modifier></type><name pos:start="95:19" pos:end="95:22">ldst</name> <init pos:start="95:24" pos:end="95:41">= <expr pos:start="95:26" pos:end="95:41"><operator pos:start="95:26" pos:end="95:26">(</operator><name pos:start="95:27" pos:end="95:34">uint64_t</name> <operator pos:start="95:36" pos:end="95:36">*</operator><operator pos:start="95:37" pos:end="95:37">)</operator> <name pos:start="95:39" pos:end="95:41">dst</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="97:9" pos:end="97:57"><decl pos:start="97:9" pos:end="97:32"><type pos:start="97:9" pos:end="97:23"><specifier pos:start="97:9" pos:end="97:13">const</specifier> <name pos:start="97:15" pos:end="97:21">uint8_t</name> <modifier pos:start="97:23" pos:end="97:23">*</modifier></type><name pos:start="97:24" pos:end="97:25">yc</name> <init pos:start="97:27" pos:end="97:32">= <expr pos:start="97:29" pos:end="97:32"><name pos:start="97:29" pos:end="97:32">ysrc</name></expr></init></decl>, <decl pos:start="97:35" pos:end="97:44"><type ref="prev" pos:start="97:9" pos:end="97:23"><modifier pos:start="97:35" pos:end="97:35">*</modifier></type><name pos:start="97:36" pos:end="97:37">uc</name> <init pos:start="97:39" pos:end="97:44">= <expr pos:start="97:41" pos:end="97:44"><name pos:start="97:41" pos:end="97:44">usrc</name></expr></init></decl>, <decl pos:start="97:47" pos:end="97:56"><type ref="prev" pos:start="97:9" pos:end="97:23"><modifier pos:start="97:47" pos:end="97:47">*</modifier></type><name pos:start="97:48" pos:end="97:49">vc</name> <init pos:start="97:51" pos:end="97:56">= <expr pos:start="97:53" pos:end="97:56"><name pos:start="97:53" pos:end="97:56">vsrc</name></expr></init></decl>;</decl_stmt>

        <for pos:start="99:9" pos:end="124:0">for <control pos:start="99:13" pos:end="99:43">(<init pos:start="99:14" pos:end="99:19"><expr pos:start="99:14" pos:end="99:18"><name pos:start="99:14" pos:end="99:14">i</name> <operator pos:start="99:16" pos:end="99:16">=</operator> <literal type="number" pos:start="99:18" pos:end="99:18">0</literal></expr>;</init> <condition pos:start="99:21" pos:end="99:35"><expr pos:start="99:21" pos:end="99:34"><name pos:start="99:21" pos:end="99:21">i</name> <operator pos:start="99:23" pos:end="99:23">&lt;</operator> <name pos:start="99:25" pos:end="99:34">chromWidth</name></expr>;</condition> <incr pos:start="99:37" pos:end="99:42"><expr pos:start="99:37" pos:end="99:42"><name pos:start="99:37" pos:end="99:37">i</name> <operator pos:start="99:39" pos:end="99:40">+=</operator> <literal type="number" pos:start="99:42" pos:end="99:42">2</literal></expr></incr>)</control> <block pos:start="99:45" pos:end="124:0">{<block_content pos:start="101:13" pos:end="117:20">

            <decl_stmt pos:start="101:13" pos:end="101:26"><decl pos:start="101:13" pos:end="101:22"><type pos:start="101:13" pos:end="101:20"><name pos:start="101:13" pos:end="101:20">uint64_t</name></type> <name pos:start="101:22" pos:end="101:22">k</name></decl>, <decl pos:start="101:25" pos:end="101:25"><type ref="prev" pos:start="101:13" pos:end="101:20"/><name pos:start="101:25" pos:end="101:25">l</name></decl>;</decl_stmt>

            <expr_stmt pos:start="103:13" pos:end="105:46"><expr pos:start="103:13" pos:end="105:45"><name pos:start="103:13" pos:end="103:13">k</name> <operator pos:start="103:15" pos:end="103:15">=</operator> <name pos:start="103:17" pos:end="103:21"><name pos:start="103:17" pos:end="103:18">uc</name><index pos:start="103:19" pos:end="103:21">[<expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>]</index></name> <operator pos:start="103:23" pos:end="103:23">+</operator> <operator pos:start="103:25" pos:end="103:25">(</operator><name pos:start="103:26" pos:end="103:30"><name pos:start="103:26" pos:end="103:27">yc</name><index pos:start="103:28" pos:end="103:30">[<expr pos:start="103:29" pos:end="103:29"><literal type="number" pos:start="103:29" pos:end="103:29">0</literal></expr>]</index></name> <operator pos:start="103:32" pos:end="103:33">&lt;&lt;</operator> <literal type="number" pos:start="103:35" pos:end="103:35">8</literal><operator pos:start="103:36" pos:end="103:36">)</operator> <operator pos:start="103:38" pos:end="103:38">+</operator>

                <operator pos:start="105:17" pos:end="105:17">(</operator><name pos:start="105:18" pos:end="105:22"><name pos:start="105:18" pos:end="105:19">vc</name><index pos:start="105:20" pos:end="105:22">[<expr pos:start="105:21" pos:end="105:21"><literal type="number" pos:start="105:21" pos:end="105:21">0</literal></expr>]</index></name> <operator pos:start="105:24" pos:end="105:25">&lt;&lt;</operator> <literal type="number" pos:start="105:27" pos:end="105:28">16</literal><operator pos:start="105:29" pos:end="105:29">)</operator> <operator pos:start="105:31" pos:end="105:31">+</operator> <operator pos:start="105:33" pos:end="105:33">(</operator><name pos:start="105:34" pos:end="105:38"><name pos:start="105:34" pos:end="105:35">yc</name><index pos:start="105:36" pos:end="105:38">[<expr pos:start="105:37" pos:end="105:37"><literal type="number" pos:start="105:37" pos:end="105:37">1</literal></expr>]</index></name> <operator pos:start="105:40" pos:end="105:41">&lt;&lt;</operator> <literal type="number" pos:start="105:43" pos:end="105:44">24</literal><operator pos:start="105:45" pos:end="105:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="109:46"><expr pos:start="107:13" pos:end="109:45"><name pos:start="107:13" pos:end="107:13">l</name> <operator pos:start="107:15" pos:end="107:15">=</operator> <name pos:start="107:17" pos:end="107:21"><name pos:start="107:17" pos:end="107:18">uc</name><index pos:start="107:19" pos:end="107:21">[<expr pos:start="107:20" pos:end="107:20"><literal type="number" pos:start="107:20" pos:end="107:20">1</literal></expr>]</index></name> <operator pos:start="107:23" pos:end="107:23">+</operator> <operator pos:start="107:25" pos:end="107:25">(</operator><name pos:start="107:26" pos:end="107:30"><name pos:start="107:26" pos:end="107:27">yc</name><index pos:start="107:28" pos:end="107:30">[<expr pos:start="107:29" pos:end="107:29"><literal type="number" pos:start="107:29" pos:end="107:29">2</literal></expr>]</index></name> <operator pos:start="107:32" pos:end="107:33">&lt;&lt;</operator> <literal type="number" pos:start="107:35" pos:end="107:35">8</literal><operator pos:start="107:36" pos:end="107:36">)</operator> <operator pos:start="107:38" pos:end="107:38">+</operator>

                <operator pos:start="109:17" pos:end="109:17">(</operator><name pos:start="109:18" pos:end="109:22"><name pos:start="109:18" pos:end="109:19">vc</name><index pos:start="109:20" pos:end="109:22">[<expr pos:start="109:21" pos:end="109:21"><literal type="number" pos:start="109:21" pos:end="109:21">1</literal></expr>]</index></name> <operator pos:start="109:24" pos:end="109:25">&lt;&lt;</operator> <literal type="number" pos:start="109:27" pos:end="109:28">16</literal><operator pos:start="109:29" pos:end="109:29">)</operator> <operator pos:start="109:31" pos:end="109:31">+</operator> <operator pos:start="109:33" pos:end="109:33">(</operator><name pos:start="109:34" pos:end="109:38"><name pos:start="109:34" pos:end="109:35">yc</name><index pos:start="109:36" pos:end="109:38">[<expr pos:start="109:37" pos:end="109:37"><literal type="number" pos:start="109:37" pos:end="109:37">3</literal></expr>]</index></name> <operator pos:start="109:40" pos:end="109:41">&lt;&lt;</operator> <literal type="number" pos:start="109:43" pos:end="109:44">24</literal><operator pos:start="109:45" pos:end="109:45">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:36"><expr pos:start="111:13" pos:end="111:35"><operator pos:start="111:13" pos:end="111:13">*</operator><name pos:start="111:14" pos:end="111:17">ldst</name><operator pos:start="111:18" pos:end="111:19">++</operator> <operator pos:start="111:21" pos:end="111:21">=</operator> <name pos:start="111:23" pos:end="111:23">k</name> <operator pos:start="111:25" pos:end="111:25">+</operator> <operator pos:start="111:27" pos:end="111:27">(</operator><name pos:start="111:28" pos:end="111:28">l</name> <operator pos:start="111:30" pos:end="111:31">&lt;&lt;</operator> <literal type="number" pos:start="111:33" pos:end="111:34">32</literal><operator pos:start="111:35" pos:end="111:35">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:20"><expr pos:start="113:13" pos:end="113:19"><name pos:start="113:13" pos:end="113:14">yc</name> <operator pos:start="113:16" pos:end="113:17">+=</operator> <literal type="number" pos:start="113:19" pos:end="113:19">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:20"><expr pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:14">uc</name> <operator pos:start="115:16" pos:end="115:17">+=</operator> <literal type="number" pos:start="115:19" pos:end="115:19">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:20"><expr pos:start="117:13" pos:end="117:19"><name pos:start="117:13" pos:end="117:14">vc</name> <operator pos:start="117:16" pos:end="117:17">+=</operator> <literal type="number" pos:start="117:19" pos:end="117:19">2</literal></expr>;</expr_stmt>

        </block_content>}</block></for>



<cpp:else pos:start="123:1" pos:end="123:5">#<cpp:directive pos:start="123:2" pos:end="123:5">else</cpp:directive></cpp:else>

        <decl_stmt pos:start="125:9" pos:end="125:39"><decl pos:start="125:9" pos:end="125:13"><type pos:start="125:9" pos:end="125:11"><name pos:start="125:9" pos:end="125:11">int</name></type> <name pos:start="125:13" pos:end="125:13">i</name></decl>, <decl pos:start="125:16" pos:end="125:38"><type ref="prev" pos:start="125:9" pos:end="125:11"><modifier pos:start="125:16" pos:end="125:16">*</modifier></type><name pos:start="125:17" pos:end="125:20">idst</name> <init pos:start="125:22" pos:end="125:38">= <expr pos:start="125:24" pos:end="125:38"><operator pos:start="125:24" pos:end="125:24">(</operator><name pos:start="125:25" pos:end="125:31">int32_t</name> <operator pos:start="125:33" pos:end="125:33">*</operator><operator pos:start="125:34" pos:end="125:34">)</operator> <name pos:start="125:36" pos:end="125:38">dst</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="127:9" pos:end="127:57"><decl pos:start="127:9" pos:end="127:32"><type pos:start="127:9" pos:end="127:23"><specifier pos:start="127:9" pos:end="127:13">const</specifier> <name pos:start="127:15" pos:end="127:21">uint8_t</name> <modifier pos:start="127:23" pos:end="127:23">*</modifier></type><name pos:start="127:24" pos:end="127:25">yc</name> <init pos:start="127:27" pos:end="127:32">= <expr pos:start="127:29" pos:end="127:32"><name pos:start="127:29" pos:end="127:32">ysrc</name></expr></init></decl>, <decl pos:start="127:35" pos:end="127:44"><type ref="prev" pos:start="127:9" pos:end="127:23"><modifier pos:start="127:35" pos:end="127:35">*</modifier></type><name pos:start="127:36" pos:end="127:37">uc</name> <init pos:start="127:39" pos:end="127:44">= <expr pos:start="127:41" pos:end="127:44"><name pos:start="127:41" pos:end="127:44">usrc</name></expr></init></decl>, <decl pos:start="127:47" pos:end="127:56"><type ref="prev" pos:start="127:9" pos:end="127:23"><modifier pos:start="127:47" pos:end="127:47">*</modifier></type><name pos:start="127:48" pos:end="127:49">vc</name> <init pos:start="127:51" pos:end="127:56">= <expr pos:start="127:53" pos:end="127:56"><name pos:start="127:53" pos:end="127:56">vsrc</name></expr></init></decl>;</decl_stmt>

        <for pos:start="129:9" pos:end="156:0">for <control pos:start="129:13" pos:end="129:40">(<init pos:start="129:14" pos:end="129:19"><expr pos:start="129:14" pos:end="129:18"><name pos:start="129:14" pos:end="129:14">i</name> <operator pos:start="129:16" pos:end="129:16">=</operator> <literal type="number" pos:start="129:18" pos:end="129:18">0</literal></expr>;</init> <condition pos:start="129:21" pos:end="129:35"><expr pos:start="129:21" pos:end="129:34"><name pos:start="129:21" pos:end="129:21">i</name> <operator pos:start="129:23" pos:end="129:23">&lt;</operator> <name pos:start="129:25" pos:end="129:34">chromWidth</name></expr>;</condition> <incr pos:start="129:37" pos:end="129:39"><expr pos:start="129:37" pos:end="129:39"><name pos:start="129:37" pos:end="129:37">i</name><operator pos:start="129:38" pos:end="129:39">++</operator></expr></incr>)</control> <block pos:start="129:42" pos:end="156:0">{<block_content pos:start="133:13" pos:end="149:17">

<cpp:if pos:start="131:1" pos:end="131:18">#<cpp:directive pos:start="131:2" pos:end="131:3">if</cpp:directive> <expr pos:start="131:5" pos:end="131:18"><name pos:start="131:5" pos:end="131:18">HAVE_BIGENDIAN</name></expr></cpp:if>

            <expr_stmt pos:start="133:13" pos:end="138:0"><expr pos:start="133:13" pos:end="135:43"><operator pos:start="133:13" pos:end="133:13">*</operator><name pos:start="133:14" pos:end="133:17">idst</name><operator pos:start="133:18" pos:end="133:19">++</operator> <operator pos:start="133:21" pos:end="133:21">=</operator> <operator pos:start="133:23" pos:end="133:23">(</operator><name pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:25">uc</name><index pos:start="133:26" pos:end="133:28">[<expr pos:start="133:27" pos:end="133:27"><literal type="number" pos:start="133:27" pos:end="133:27">0</literal></expr>]</index></name> <operator pos:start="133:30" pos:end="133:31">&lt;&lt;</operator> <literal type="number" pos:start="133:33" pos:end="133:34">24</literal><operator pos:start="133:35" pos:end="133:35">)</operator><operator pos:start="133:36" pos:end="133:36">+</operator> <operator pos:start="133:38" pos:end="133:38">(</operator><name pos:start="133:39" pos:end="133:43"><name pos:start="133:39" pos:end="133:40">yc</name><index pos:start="133:41" pos:end="133:43">[<expr pos:start="133:42" pos:end="133:42"><literal type="number" pos:start="133:42" pos:end="133:42">0</literal></expr>]</index></name> <operator pos:start="133:45" pos:end="133:46">&lt;&lt;</operator> <literal type="number" pos:start="133:48" pos:end="133:49">16</literal><operator pos:start="133:50" pos:end="133:50">)</operator> <operator pos:start="133:52" pos:end="133:52">+</operator>

                <operator pos:start="135:17" pos:end="135:17">(</operator><name pos:start="135:18" pos:end="135:22"><name pos:start="135:18" pos:end="135:19">vc</name><index pos:start="135:20" pos:end="135:22">[<expr pos:start="135:21" pos:end="135:21"><literal type="number" pos:start="135:21" pos:end="135:21">0</literal></expr>]</index></name> <operator pos:start="135:24" pos:end="135:25">&lt;&lt;</operator> <literal type="number" pos:start="135:27" pos:end="135:27">8</literal><operator pos:start="135:28" pos:end="135:28">)</operator> <operator pos:start="135:30" pos:end="135:30">+</operator> <operator pos:start="135:32" pos:end="135:32">(</operator><name pos:start="135:33" pos:end="135:37"><name pos:start="135:33" pos:end="135:34">yc</name><index pos:start="135:35" pos:end="135:37">[<expr pos:start="135:36" pos:end="135:36"><literal type="number" pos:start="135:36" pos:end="135:36">1</literal></expr>]</index></name> <operator pos:start="135:39" pos:end="135:40">&lt;&lt;</operator> <literal type="number" pos:start="135:42" pos:end="135:42">0</literal><operator pos:start="135:43" pos:end="135:43">)</operator></expr>;</expr_stmt>

<cpp:else pos:start="137:1" pos:end="137:5">#<cpp:directive pos:start="137:2" pos:end="137:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="139:13" pos:end="144:0"><expr pos:start="139:13" pos:end="141:44"><operator pos:start="139:13" pos:end="139:13">*</operator><name pos:start="139:14" pos:end="139:17">idst</name><operator pos:start="139:18" pos:end="139:19">++</operator> <operator pos:start="139:21" pos:end="139:21">=</operator> <name pos:start="139:23" pos:end="139:27"><name pos:start="139:23" pos:end="139:24">uc</name><index pos:start="139:25" pos:end="139:27">[<expr pos:start="139:26" pos:end="139:26"><literal type="number" pos:start="139:26" pos:end="139:26">0</literal></expr>]</index></name> <operator pos:start="139:29" pos:end="139:29">+</operator> <operator pos:start="139:31" pos:end="139:31">(</operator><name pos:start="139:32" pos:end="139:36"><name pos:start="139:32" pos:end="139:33">yc</name><index pos:start="139:34" pos:end="139:36">[<expr pos:start="139:35" pos:end="139:35"><literal type="number" pos:start="139:35" pos:end="139:35">0</literal></expr>]</index></name> <operator pos:start="139:38" pos:end="139:39">&lt;&lt;</operator> <literal type="number" pos:start="139:41" pos:end="139:41">8</literal><operator pos:start="139:42" pos:end="139:42">)</operator> <operator pos:start="139:44" pos:end="139:44">+</operator>

               <operator pos:start="141:16" pos:end="141:16">(</operator><name pos:start="141:17" pos:end="141:21"><name pos:start="141:17" pos:end="141:18">vc</name><index pos:start="141:19" pos:end="141:21">[<expr pos:start="141:20" pos:end="141:20"><literal type="number" pos:start="141:20" pos:end="141:20">0</literal></expr>]</index></name> <operator pos:start="141:23" pos:end="141:24">&lt;&lt;</operator> <literal type="number" pos:start="141:26" pos:end="141:27">16</literal><operator pos:start="141:28" pos:end="141:28">)</operator> <operator pos:start="141:30" pos:end="141:30">+</operator> <operator pos:start="141:32" pos:end="141:32">(</operator><name pos:start="141:33" pos:end="141:37"><name pos:start="141:33" pos:end="141:34">yc</name><index pos:start="141:35" pos:end="141:37">[<expr pos:start="141:36" pos:end="141:36"><literal type="number" pos:start="141:36" pos:end="141:36">1</literal></expr>]</index></name> <operator pos:start="141:39" pos:end="141:40">&lt;&lt;</operator> <literal type="number" pos:start="141:42" pos:end="141:43">24</literal><operator pos:start="141:44" pos:end="141:44">)</operator></expr>;</expr_stmt>

<cpp:endif pos:start="143:1" pos:end="143:6">#<cpp:directive pos:start="143:2" pos:end="143:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="145:13" pos:end="145:20"><expr pos:start="145:13" pos:end="145:19"><name pos:start="145:13" pos:end="145:14">yc</name> <operator pos:start="145:16" pos:end="145:17">+=</operator> <literal type="number" pos:start="145:19" pos:end="145:19">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:17"><expr pos:start="147:13" pos:end="147:16"><name pos:start="147:13" pos:end="147:14">uc</name><operator pos:start="147:15" pos:end="147:16">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="149:13" pos:end="149:17"><expr pos:start="149:13" pos:end="149:16"><name pos:start="149:13" pos:end="149:14">vc</name><operator pos:start="149:15" pos:end="149:16">++</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

<cpp:endif pos:start="153:1" pos:end="153:6">#<cpp:directive pos:start="153:2" pos:end="153:6">endif</cpp:directive></cpp:endif>

<cpp:endif pos:start="155:1" pos:end="155:6">#<cpp:directive pos:start="155:2" pos:end="155:6">endif</cpp:directive></cpp:endif>

        <if_stmt pos:start="157:9" pos:end="163:9"><if pos:start="157:9" pos:end="163:9">if <condition pos:start="157:12" pos:end="157:59">(<expr pos:start="157:13" pos:end="157:58"><operator pos:start="157:13" pos:end="157:13">(</operator><name pos:start="157:14" pos:end="157:14">y</name><operator pos:start="157:15" pos:end="157:15">&amp;</operator><operator pos:start="157:16" pos:end="157:16">(</operator><name pos:start="157:17" pos:end="157:32">vertLumPerChroma</name><operator pos:start="157:33" pos:end="157:33">-</operator><literal type="number" pos:start="157:34" pos:end="157:34">1</literal><operator pos:start="157:35" pos:end="157:35">)</operator><operator pos:start="157:36" pos:end="157:36">)</operator> <operator pos:start="157:38" pos:end="157:39">==</operator> <name pos:start="157:41" pos:end="157:56">vertLumPerChroma</name><operator pos:start="157:57" pos:end="157:57">-</operator><literal type="number" pos:start="157:58" pos:end="157:58">1</literal></expr>)</condition> <block pos:start="157:61" pos:end="163:9">{<block_content pos:start="159:13" pos:end="161:32">

            <expr_stmt pos:start="159:13" pos:end="159:32"><expr pos:start="159:13" pos:end="159:31"><name pos:start="159:13" pos:end="159:16">usrc</name> <operator pos:start="159:18" pos:end="159:19">+=</operator> <name pos:start="159:21" pos:end="159:31">chromStride</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:32"><expr pos:start="161:13" pos:end="161:31"><name pos:start="161:13" pos:end="161:16">vsrc</name> <operator pos:start="161:18" pos:end="161:19">+=</operator> <name pos:start="161:21" pos:end="161:31">chromStride</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:26"><expr pos:start="165:9" pos:end="165:25"><name pos:start="165:9" pos:end="165:12">ysrc</name> <operator pos:start="165:14" pos:end="165:15">+=</operator> <name pos:start="165:17" pos:end="165:25">lumStride</name></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:25"><expr pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:11">dst</name> <operator pos:start="167:13" pos:end="167:14">+=</operator> <name pos:start="167:16" pos:end="167:24">dstStride</name></expr>;</expr_stmt>

    </block_content>}</block></for>

<cpp:if pos:start="171:1" pos:end="171:24">#<cpp:directive pos:start="171:2" pos:end="171:3">if</cpp:directive> <expr pos:start="171:5" pos:end="171:24"><name pos:start="171:5" pos:end="171:24">COMPILE_TEMPLATE_MMX</name></expr></cpp:if>

    <asm pos:start="173:5" pos:end="180:0">__asm__(EMMS"       \n\t"

            SFENCE"     \n\t"

            :::"memory");</asm>

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
