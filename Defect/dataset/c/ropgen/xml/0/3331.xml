<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3331.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">adx_decode_header</name><parameter_list pos:start="1:29" pos:end="3:41">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:70"><decl pos:start="1:53" pos:end="1:70"><type pos:start="1:53" pos:end="1:70"><specifier pos:start="1:53" pos:end="1:57">const</specifier> <name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">buf</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:40"><decl pos:start="3:30" pos:end="3:40"><type pos:start="3:30" pos:end="3:40"><name pos:start="3:30" pos:end="3:32">int</name></type> <name pos:start="3:34" pos:end="3:40">bufsize</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="33:1">{<block_content pos:start="7:5" pos:end="31:18">

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:14">offset</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:17"><if pos:start="11:5" pos:end="13:17">if <condition pos:start="11:8" pos:end="11:23">(<expr pos:start="11:9" pos:end="11:22"><name pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:11">buf</name><index pos:start="11:12" pos:end="11:14">[<expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">0</literal></expr>]</index></name> <operator pos:start="11:16" pos:end="11:17">!=</operator> <literal type="number" pos:start="11:19" pos:end="11:22">0x80</literal></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:17"><block_content pos:start="13:9" pos:end="13:17">

        <return pos:start="13:9" pos:end="13:17">return <expr pos:start="13:16" pos:end="13:16"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:45"><expr pos:start="15:5" pos:end="15:44"><name pos:start="15:5" pos:end="15:10">offset</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <operator pos:start="15:14" pos:end="15:14">(</operator><call pos:start="15:15" pos:end="15:26"><name pos:start="15:15" pos:end="15:21">AV_RB32</name><argument_list pos:start="15:22" pos:end="15:26">(<argument pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:25">buf</name></expr></argument>)</argument_list></call> <operator pos:start="15:28" pos:end="15:28">^</operator> <literal type="number" pos:start="15:30" pos:end="15:39">0x80000000</literal><operator pos:start="15:40" pos:end="15:40">)</operator> <operator pos:start="15:42" pos:end="15:42">+</operator> <literal type="number" pos:start="15:44" pos:end="15:44">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:66">(<expr pos:start="17:9" pos:end="17:65"><name pos:start="17:9" pos:end="17:15">bufsize</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <name pos:start="17:19" pos:end="17:24">offset</name> <operator pos:start="17:26" pos:end="17:27">||</operator> <call pos:start="17:29" pos:end="17:65"><name pos:start="17:29" pos:end="17:34">memcmp</name><argument_list pos:start="17:35" pos:end="17:65">(<argument pos:start="17:36" pos:end="17:51"><expr pos:start="17:36" pos:end="17:51"><name pos:start="17:36" pos:end="17:38">buf</name> <operator pos:start="17:40" pos:end="17:40">+</operator> <name pos:start="17:42" pos:end="17:47">offset</name> <operator pos:start="17:49" pos:end="17:49">-</operator> <literal type="number" pos:start="17:51" pos:end="17:51">6</literal></expr></argument>, <argument pos:start="17:54" pos:end="17:61"><expr pos:start="17:54" pos:end="17:61"><literal type="string" pos:start="17:54" pos:end="17:61">"(c)CRI"</literal></expr></argument>, <argument pos:start="17:64" pos:end="17:64"><expr pos:start="17:64" pos:end="17:64"><literal type="number" pos:start="17:64" pos:end="17:64">6</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:32"><expr pos:start="23:5" pos:end="23:31"><name pos:start="23:5" pos:end="23:19"><name pos:start="23:5" pos:end="23:9">avctx</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:19">channels</name></name>    <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:31"><name pos:start="23:26" pos:end="23:28">buf</name><index pos:start="23:29" pos:end="23:31">[<expr pos:start="23:30" pos:end="23:30"><literal type="number" pos:start="23:30" pos:end="23:30">7</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:42"><expr pos:start="25:5" pos:end="25:41"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:9">avctx</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:22">sample_rate</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <call pos:start="25:26" pos:end="25:41"><name pos:start="25:26" pos:end="25:32">AV_RB32</name><argument_list pos:start="25:33" pos:end="25:41">(<argument pos:start="25:34" pos:end="25:40"><expr pos:start="25:34" pos:end="25:40"><name pos:start="25:34" pos:end="25:36">buf</name> <operator pos:start="25:38" pos:end="25:38">+</operator> <literal type="number" pos:start="25:40" pos:end="25:40">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:76"><expr pos:start="27:5" pos:end="27:75"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:9">avctx</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:19">bit_rate</name></name>    <operator pos:start="27:24" pos:end="27:24">=</operator> <name pos:start="27:26" pos:end="27:43"><name pos:start="27:26" pos:end="27:30">avctx</name><operator pos:start="27:31" pos:end="27:32">-&gt;</operator><name pos:start="27:33" pos:end="27:43">sample_rate</name></name> <operator pos:start="27:45" pos:end="27:45">*</operator> <name pos:start="27:47" pos:end="27:61"><name pos:start="27:47" pos:end="27:51">avctx</name><operator pos:start="27:52" pos:end="27:53">-&gt;</operator><name pos:start="27:54" pos:end="27:61">channels</name></name> <operator pos:start="27:63" pos:end="27:63">*</operator> <literal type="number" pos:start="27:65" pos:end="27:66">18</literal> <operator pos:start="27:68" pos:end="27:68">*</operator> <literal type="number" pos:start="27:70" pos:end="27:70">8</literal> <operator pos:start="27:72" pos:end="27:72">/</operator> <literal type="number" pos:start="27:74" pos:end="27:75">32</literal></expr>;</expr_stmt>



    <return pos:start="31:5" pos:end="31:18">return <expr pos:start="31:12" pos:end="31:17"><name pos:start="31:12" pos:end="31:17">offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
