<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3571.c" pos:tabs="8"><function pos:start="1:1" pos:end="117:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:37">decode_block_intra</name><parameter_list pos:start="1:38" pos:end="1:70">(<parameter pos:start="1:39" pos:end="1:52"><decl pos:start="1:39" pos:end="1:52"><type pos:start="1:39" pos:end="1:52"><name pos:start="1:39" pos:end="1:48">MadContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type> <name pos:start="1:52" pos:end="1:52">t</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:61">DCTELEM</name> <modifier pos:start="1:63" pos:end="1:63">*</modifier></type> <name pos:start="1:65" pos:end="1:69">block</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="117:1">{<block_content pos:start="5:5" pos:end="115:5">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">MpegEncContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:29">= <expr pos:start="5:25" pos:end="5:29"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:29"><name pos:start="5:26" pos:end="5:26">t</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:29">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">level</name></decl>, <decl pos:start="7:16" pos:end="7:16"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:16" pos:end="7:16">i</name></decl>, <decl pos:start="7:19" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:19" pos:end="7:19">j</name></decl>, <decl pos:start="7:22" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:22" pos:end="7:24">run</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">RLTable</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:15">rl</name> <init pos:start="9:17" pos:end="9:30">= <expr pos:start="9:19" pos:end="9:30"><operator pos:start="9:19" pos:end="9:19">&amp;</operator><name pos:start="9:20" pos:end="9:30">ff_rl_mpeg1</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:61"><decl pos:start="11:5" pos:end="11:60"><type pos:start="11:5" pos:end="11:19"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:28">scantable</name> <init pos:start="11:30" pos:end="11:60">= <expr pos:start="11:32" pos:end="11:60"><name pos:start="11:32" pos:end="11:60"><name pos:start="11:32" pos:end="11:32">s</name><operator pos:start="11:33" pos:end="11:34">-&gt;</operator><name pos:start="11:35" pos:end="11:49">intra_scantable</name><operator pos:start="11:50" pos:end="11:50">.</operator><name pos:start="11:51" pos:end="11:60">permutated</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">int16_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:25">quant_matrix</name> <init pos:start="13:27" pos:end="13:43">= <expr pos:start="13:29" pos:end="13:43"><name pos:start="13:29" pos:end="13:43"><name pos:start="13:29" pos:end="13:29">s</name><operator pos:start="13:30" pos:end="13:31">-&gt;</operator><name pos:start="13:32" pos:end="13:43">intra_matrix</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:9">block</name><index pos:start="17:10" pos:end="17:12">[<expr pos:start="17:11" pos:end="17:11"><literal type="number" pos:start="17:11" pos:end="17:11">0</literal></expr>]</index></name> <operator pos:start="17:14" pos:end="17:14">=</operator> <operator pos:start="17:16" pos:end="17:16">(</operator><literal type="number" pos:start="17:17" pos:end="17:21">128</literal> <operator pos:start="17:21" pos:end="17:21">+</operator> <call pos:start="17:23" pos:end="17:42"><name pos:start="17:23" pos:end="17:31">get_sbits</name><argument_list pos:start="17:32" pos:end="17:42">(<argument pos:start="17:33" pos:end="17:38"><expr pos:start="17:33" pos:end="17:38"><operator pos:start="17:33" pos:end="17:33">&amp;</operator><name pos:start="17:34" pos:end="17:38"><name pos:start="17:34" pos:end="17:34">s</name><operator pos:start="17:35" pos:end="17:36">-&gt;</operator><name pos:start="17:37" pos:end="17:38">gb</name></name></expr></argument>, <argument pos:start="17:41" pos:end="17:41"><expr pos:start="17:41" pos:end="17:41"><literal type="number" pos:start="17:41" pos:end="17:41">8</literal></expr></argument>)</argument_list></call><operator pos:start="17:43" pos:end="17:43">)</operator> <operator pos:start="17:45" pos:end="17:45">*</operator> <name pos:start="17:47" pos:end="17:61"><name pos:start="17:47" pos:end="17:58">quant_matrix</name><index pos:start="17:59" pos:end="17:61">[<expr pos:start="17:60" pos:end="17:60"><literal type="number" pos:start="17:60" pos:end="17:60">0</literal></expr>]</index></name></expr>;</expr_stmt>



    <comment type="block" pos:start="21:5" pos:end="23:60">/* The RL decoder is derived from mpeg1_decode_block_intra;

       Escaped level and run values a decoded differently */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:10"><expr pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:5">i</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <literal type="number" pos:start="25:9" pos:end="25:9">0</literal></expr>;</expr_stmt>

    <block pos:start="27:5" pos:end="115:5">{<block_content pos:start="29:9" pos:end="113:33">

        <expr_stmt pos:start="29:9" pos:end="29:32"><expr pos:start="29:9" pos:end="29:31"><call pos:start="29:9" pos:end="29:31"><name pos:start="29:9" pos:end="29:19">OPEN_READER</name><argument_list pos:start="29:20" pos:end="29:31">(<argument pos:start="29:21" pos:end="29:22"><expr pos:start="29:21" pos:end="29:22"><name pos:start="29:21" pos:end="29:22">re</name></expr></argument>, <argument pos:start="29:25" pos:end="29:30"><expr pos:start="29:25" pos:end="29:30"><operator pos:start="29:25" pos:end="29:25">&amp;</operator><name pos:start="29:26" pos:end="29:30"><name pos:start="29:26" pos:end="29:26">s</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:30">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="31:9" pos:end="31:51">/* now quantify &amp; encode AC coefficients */</comment>

        <for pos:start="33:9" pos:end="111:9">for <control pos:start="33:13" pos:end="33:16">(<init pos:start="33:14" pos:end="33:14">;</init><condition pos:start="33:15" pos:end="33:15">;</condition><incr/>)</control> <block pos:start="33:18" pos:end="111:9">{<block_content pos:start="35:13" pos:end="109:29">

            <expr_stmt pos:start="35:13" pos:end="35:37"><expr pos:start="35:13" pos:end="35:36"><call pos:start="35:13" pos:end="35:36"><name pos:start="35:13" pos:end="35:24">UPDATE_CACHE</name><argument_list pos:start="35:25" pos:end="35:36">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">re</name></expr></argument>, <argument pos:start="35:30" pos:end="35:35"><expr pos:start="35:30" pos:end="35:35"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:35"><name pos:start="35:31" pos:end="35:31">s</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:35">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:82"><expr pos:start="37:13" pos:end="37:81"><call pos:start="37:13" pos:end="37:81"><name pos:start="37:13" pos:end="37:22">GET_RL_VLC</name><argument_list pos:start="37:23" pos:end="37:81">(<argument pos:start="37:24" pos:end="37:28"><expr pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:28">level</name></expr></argument>, <argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">run</name></expr></argument>, <argument pos:start="37:36" pos:end="37:37"><expr pos:start="37:36" pos:end="37:37"><name pos:start="37:36" pos:end="37:37">re</name></expr></argument>, <argument pos:start="37:40" pos:end="37:45"><expr pos:start="37:40" pos:end="37:45"><operator pos:start="37:40" pos:end="37:40">&amp;</operator><name pos:start="37:41" pos:end="37:45"><name pos:start="37:41" pos:end="37:41">s</name><operator pos:start="37:42" pos:end="37:43">-&gt;</operator><name pos:start="37:44" pos:end="37:45">gb</name></name></expr></argument>, <argument pos:start="37:48" pos:end="37:60"><expr pos:start="37:48" pos:end="37:60"><name pos:start="37:48" pos:end="37:60"><name pos:start="37:48" pos:end="37:49">rl</name><operator pos:start="37:50" pos:end="37:51">-&gt;</operator><name pos:start="37:52" pos:end="37:57">rl_vlc</name><index pos:start="37:58" pos:end="37:60">[<expr pos:start="37:59" pos:end="37:59"><literal type="number" pos:start="37:59" pos:end="37:59">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="37:63" pos:end="37:74"><expr pos:start="37:63" pos:end="37:74"><name pos:start="37:63" pos:end="37:74">TEX_VLC_BITS</name></expr></argument>, <argument pos:start="37:77" pos:end="37:77"><expr pos:start="37:77" pos:end="37:77"><literal type="number" pos:start="37:77" pos:end="37:77">2</literal></expr></argument>, <argument pos:start="37:80" pos:end="37:80"><expr pos:start="37:80" pos:end="37:80"><literal type="number" pos:start="37:80" pos:end="37:80">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="41:13" pos:end="97:13"><if pos:start="41:13" pos:end="45:13">if <condition pos:start="41:16" pos:end="41:29">(<expr pos:start="41:17" pos:end="41:28"><name pos:start="41:17" pos:end="41:21">level</name> <operator pos:start="41:23" pos:end="41:24">==</operator> <literal type="number" pos:start="41:26" pos:end="41:28">127</literal></expr>)</condition> <block pos:start="41:31" pos:end="45:13">{<block_content pos:start="43:17" pos:end="43:22">

                <break pos:start="43:17" pos:end="43:22">break;</break>

            </block_content>}</block></if> <if type="elseif" pos:start="45:15" pos:end="59:13">else if <condition pos:start="45:23" pos:end="45:34">(<expr pos:start="45:24" pos:end="45:33"><name pos:start="45:24" pos:end="45:28">level</name> <operator pos:start="45:30" pos:end="45:31">!=</operator> <literal type="number" pos:start="45:33" pos:end="45:33">0</literal></expr>)</condition> <block pos:start="45:36" pos:end="59:13">{<block_content pos:start="47:17" pos:end="57:46">

                <expr_stmt pos:start="47:17" pos:end="47:25"><expr pos:start="47:17" pos:end="47:24"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:20">+=</operator> <name pos:start="47:22" pos:end="47:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:33"><expr pos:start="49:17" pos:end="49:32"><name pos:start="49:17" pos:end="49:17">j</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:32"><name pos:start="49:21" pos:end="49:29">scantable</name><index pos:start="49:30" pos:end="49:32">[<expr pos:start="49:31" pos:end="49:31"><name pos:start="49:31" pos:end="49:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:53"><expr pos:start="51:17" pos:end="51:52"><name pos:start="51:17" pos:end="51:21">level</name> <operator pos:start="51:23" pos:end="51:23">=</operator> <operator pos:start="51:25" pos:end="51:25">(</operator><name pos:start="51:26" pos:end="51:30">level</name><operator pos:start="51:31" pos:end="51:31">*</operator><name pos:start="51:32" pos:end="51:46"><name pos:start="51:32" pos:end="51:43">quant_matrix</name><index pos:start="51:44" pos:end="51:46">[<expr pos:start="51:45" pos:end="51:45"><name pos:start="51:45" pos:end="51:45">j</name></expr>]</index></name><operator pos:start="51:47" pos:end="51:47">)</operator> <operator pos:start="51:49" pos:end="51:50">&gt;&gt;</operator> <literal type="number" pos:start="51:52" pos:end="51:52">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:36"><expr pos:start="53:17" pos:end="53:35"><name pos:start="53:17" pos:end="53:21">level</name> <operator pos:start="53:23" pos:end="53:23">=</operator> <operator pos:start="53:25" pos:end="53:25">(</operator><name pos:start="53:26" pos:end="53:30">level</name><operator pos:start="53:31" pos:end="53:31">-</operator><literal type="number" pos:start="53:32" pos:end="53:32">1</literal><operator pos:start="53:33" pos:end="53:33">)</operator><operator pos:start="53:34" pos:end="53:34">|</operator><literal type="number" pos:start="53:35" pos:end="53:35">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="55:17" pos:end="55:88"><expr pos:start="55:17" pos:end="55:87"><name pos:start="55:17" pos:end="55:21">level</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <operator pos:start="55:25" pos:end="55:25">(</operator><name pos:start="55:26" pos:end="55:30">level</name> <operator pos:start="55:32" pos:end="55:32">^</operator> <call pos:start="55:34" pos:end="55:58"><name pos:start="55:34" pos:end="55:43">SHOW_SBITS</name><argument_list pos:start="55:44" pos:end="55:58">(<argument pos:start="55:45" pos:end="55:46"><expr pos:start="55:45" pos:end="55:46"><name pos:start="55:45" pos:end="55:46">re</name></expr></argument>, <argument pos:start="55:49" pos:end="55:54"><expr pos:start="55:49" pos:end="55:54"><operator pos:start="55:49" pos:end="55:49">&amp;</operator><name pos:start="55:50" pos:end="55:54"><name pos:start="55:50" pos:end="55:50">s</name><operator pos:start="55:51" pos:end="55:52">-&gt;</operator><name pos:start="55:53" pos:end="55:54">gb</name></name></expr></argument>, <argument pos:start="55:57" pos:end="55:57"><expr pos:start="55:57" pos:end="55:57"><literal type="number" pos:start="55:57" pos:end="55:57">1</literal></expr></argument>)</argument_list></call><operator pos:start="55:59" pos:end="55:59">)</operator> <operator pos:start="55:61" pos:end="55:61">-</operator> <call pos:start="55:63" pos:end="55:87"><name pos:start="55:63" pos:end="55:72">SHOW_SBITS</name><argument_list pos:start="55:73" pos:end="55:87">(<argument pos:start="55:74" pos:end="55:75"><expr pos:start="55:74" pos:end="55:75"><name pos:start="55:74" pos:end="55:75">re</name></expr></argument>, <argument pos:start="55:78" pos:end="55:83"><expr pos:start="55:78" pos:end="55:83"><operator pos:start="55:78" pos:end="55:78">&amp;</operator><name pos:start="55:79" pos:end="55:83"><name pos:start="55:79" pos:end="55:79">s</name><operator pos:start="55:80" pos:end="55:81">-&gt;</operator><name pos:start="55:82" pos:end="55:83">gb</name></name></expr></argument>, <argument pos:start="55:86" pos:end="55:86"><expr pos:start="55:86" pos:end="55:86"><literal type="number" pos:start="55:86" pos:end="55:86">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:46"><expr pos:start="57:17" pos:end="57:45"><call pos:start="57:17" pos:end="57:45"><name pos:start="57:17" pos:end="57:30">LAST_SKIP_BITS</name><argument_list pos:start="57:31" pos:end="57:45">(<argument pos:start="57:32" pos:end="57:33"><expr pos:start="57:32" pos:end="57:33"><name pos:start="57:32" pos:end="57:33">re</name></expr></argument>, <argument pos:start="57:36" pos:end="57:41"><expr pos:start="57:36" pos:end="57:41"><operator pos:start="57:36" pos:end="57:36">&amp;</operator><name pos:start="57:37" pos:end="57:41"><name pos:start="57:37" pos:end="57:37">s</name><operator pos:start="57:38" pos:end="57:39">-&gt;</operator><name pos:start="57:40" pos:end="57:41">gb</name></name></expr></argument>, <argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><literal type="number" pos:start="57:44" pos:end="57:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="59:15" pos:end="97:13">else <block pos:start="59:20" pos:end="97:13">{<block_content pos:start="63:17" pos:end="95:17">

                <comment type="block" pos:start="61:17" pos:end="61:28">/* escape */</comment>

                <expr_stmt pos:start="63:17" pos:end="63:41"><expr pos:start="63:17" pos:end="63:40"><call pos:start="63:17" pos:end="63:40"><name pos:start="63:17" pos:end="63:28">UPDATE_CACHE</name><argument_list pos:start="63:29" pos:end="63:40">(<argument pos:start="63:30" pos:end="63:31"><expr pos:start="63:30" pos:end="63:31"><name pos:start="63:30" pos:end="63:31">re</name></expr></argument>, <argument pos:start="63:34" pos:end="63:39"><expr pos:start="63:34" pos:end="63:39"><operator pos:start="63:34" pos:end="63:34">&amp;</operator><name pos:start="63:35" pos:end="63:39"><name pos:start="63:35" pos:end="63:35">s</name><operator pos:start="63:36" pos:end="63:37">-&gt;</operator><name pos:start="63:38" pos:end="63:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:51"><expr pos:start="65:17" pos:end="65:50"><name pos:start="65:17" pos:end="65:21">level</name> <operator pos:start="65:23" pos:end="65:23">=</operator> <call pos:start="65:25" pos:end="65:50"><name pos:start="65:25" pos:end="65:34">SHOW_SBITS</name><argument_list pos:start="65:35" pos:end="65:50">(<argument pos:start="65:36" pos:end="65:37"><expr pos:start="65:36" pos:end="65:37"><name pos:start="65:36" pos:end="65:37">re</name></expr></argument>, <argument pos:start="65:40" pos:end="65:45"><expr pos:start="65:40" pos:end="65:45"><operator pos:start="65:40" pos:end="65:40">&amp;</operator><name pos:start="65:41" pos:end="65:45"><name pos:start="65:41" pos:end="65:41">s</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:45">gb</name></name></expr></argument>, <argument pos:start="65:48" pos:end="65:49"><expr pos:start="65:48" pos:end="65:49"><literal type="number" pos:start="65:48" pos:end="65:49">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="65:53" pos:end="65:78"><expr pos:start="65:53" pos:end="65:77"><call pos:start="65:53" pos:end="65:77"><name pos:start="65:53" pos:end="65:61">SKIP_BITS</name><argument_list pos:start="65:62" pos:end="65:77">(<argument pos:start="65:63" pos:end="65:64"><expr pos:start="65:63" pos:end="65:64"><name pos:start="65:63" pos:end="65:64">re</name></expr></argument>, <argument pos:start="65:67" pos:end="65:72"><expr pos:start="65:67" pos:end="65:72"><operator pos:start="65:67" pos:end="65:67">&amp;</operator><name pos:start="65:68" pos:end="65:72"><name pos:start="65:68" pos:end="65:68">s</name><operator pos:start="65:69" pos:end="65:70">-&gt;</operator><name pos:start="65:71" pos:end="65:72">gb</name></name></expr></argument>, <argument pos:start="65:75" pos:end="65:76"><expr pos:start="65:75" pos:end="65:76"><literal type="number" pos:start="65:75" pos:end="65:76">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="69:17" pos:end="69:41"><expr pos:start="69:17" pos:end="69:40"><call pos:start="69:17" pos:end="69:40"><name pos:start="69:17" pos:end="69:28">UPDATE_CACHE</name><argument_list pos:start="69:29" pos:end="69:40">(<argument pos:start="69:30" pos:end="69:31"><expr pos:start="69:30" pos:end="69:31"><name pos:start="69:30" pos:end="69:31">re</name></expr></argument>, <argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><operator pos:start="69:34" pos:end="69:34">&amp;</operator><name pos:start="69:35" pos:end="69:39"><name pos:start="69:35" pos:end="69:35">s</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:39">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:50"><expr pos:start="71:17" pos:end="71:49"><name pos:start="71:17" pos:end="71:19">run</name> <operator pos:start="71:21" pos:end="71:21">=</operator> <call pos:start="71:23" pos:end="71:47"><name pos:start="71:23" pos:end="71:32">SHOW_UBITS</name><argument_list pos:start="71:33" pos:end="71:47">(<argument pos:start="71:34" pos:end="71:35"><expr pos:start="71:34" pos:end="71:35"><name pos:start="71:34" pos:end="71:35">re</name></expr></argument>, <argument pos:start="71:38" pos:end="71:43"><expr pos:start="71:38" pos:end="71:43"><operator pos:start="71:38" pos:end="71:38">&amp;</operator><name pos:start="71:39" pos:end="71:43"><name pos:start="71:39" pos:end="71:39">s</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:43">gb</name></name></expr></argument>, <argument pos:start="71:46" pos:end="71:46"><expr pos:start="71:46" pos:end="71:46"><literal type="number" pos:start="71:46" pos:end="71:46">6</literal></expr></argument>)</argument_list></call><operator pos:start="71:48" pos:end="71:48">+</operator><literal type="number" pos:start="71:49" pos:end="71:49">1</literal></expr>;</expr_stmt> <expr_stmt pos:start="71:52" pos:end="71:81"><expr pos:start="71:52" pos:end="71:80"><call pos:start="71:52" pos:end="71:80"><name pos:start="71:52" pos:end="71:65">LAST_SKIP_BITS</name><argument_list pos:start="71:66" pos:end="71:80">(<argument pos:start="71:67" pos:end="71:68"><expr pos:start="71:67" pos:end="71:68"><name pos:start="71:67" pos:end="71:68">re</name></expr></argument>, <argument pos:start="71:71" pos:end="71:76"><expr pos:start="71:71" pos:end="71:76"><operator pos:start="71:71" pos:end="71:71">&amp;</operator><name pos:start="71:72" pos:end="71:76"><name pos:start="71:72" pos:end="71:72">s</name><operator pos:start="71:73" pos:end="71:74">-&gt;</operator><name pos:start="71:75" pos:end="71:76">gb</name></name></expr></argument>, <argument pos:start="71:79" pos:end="71:79"><expr pos:start="71:79" pos:end="71:79"><literal type="number" pos:start="71:79" pos:end="71:79">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="75:17" pos:end="75:25"><expr pos:start="75:17" pos:end="75:24"><name pos:start="75:17" pos:end="75:17">i</name> <operator pos:start="75:19" pos:end="75:20">+=</operator> <name pos:start="75:22" pos:end="75:24">run</name></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:33"><expr pos:start="77:17" pos:end="77:32"><name pos:start="77:17" pos:end="77:17">j</name> <operator pos:start="77:19" pos:end="77:19">=</operator> <name pos:start="77:21" pos:end="77:32"><name pos:start="77:21" pos:end="77:29">scantable</name><index pos:start="77:30" pos:end="77:32">[<expr pos:start="77:31" pos:end="77:31"><name pos:start="77:31" pos:end="77:31">i</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="79:17" pos:end="95:17"><if pos:start="79:17" pos:end="89:17">if <condition pos:start="79:20" pos:end="79:30">(<expr pos:start="79:21" pos:end="79:29"><name pos:start="79:21" pos:end="79:25">level</name> <operator pos:start="79:27" pos:end="79:27">&lt;</operator> <literal type="number" pos:start="79:29" pos:end="79:29">0</literal></expr>)</condition> <block pos:start="79:32" pos:end="89:17">{<block_content pos:start="81:21" pos:end="87:35">

                    <expr_stmt pos:start="81:21" pos:end="81:35"><expr pos:start="81:21" pos:end="81:34"><name pos:start="81:21" pos:end="81:25">level</name> <operator pos:start="81:27" pos:end="81:27">=</operator> <operator pos:start="81:29" pos:end="81:29">-</operator><name pos:start="81:30" pos:end="81:34">level</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:57"><expr pos:start="83:21" pos:end="83:56"><name pos:start="83:21" pos:end="83:25">level</name> <operator pos:start="83:27" pos:end="83:27">=</operator> <operator pos:start="83:29" pos:end="83:29">(</operator><name pos:start="83:30" pos:end="83:34">level</name><operator pos:start="83:35" pos:end="83:35">*</operator><name pos:start="83:36" pos:end="83:50"><name pos:start="83:36" pos:end="83:47">quant_matrix</name><index pos:start="83:48" pos:end="83:50">[<expr pos:start="83:49" pos:end="83:49"><name pos:start="83:49" pos:end="83:49">j</name></expr>]</index></name><operator pos:start="83:51" pos:end="83:51">)</operator> <operator pos:start="83:53" pos:end="83:54">&gt;&gt;</operator> <literal type="number" pos:start="83:56" pos:end="83:56">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:40"><expr pos:start="85:21" pos:end="85:39"><name pos:start="85:21" pos:end="85:25">level</name> <operator pos:start="85:27" pos:end="85:27">=</operator> <operator pos:start="85:29" pos:end="85:29">(</operator><name pos:start="85:30" pos:end="85:34">level</name><operator pos:start="85:35" pos:end="85:35">-</operator><literal type="number" pos:start="85:36" pos:end="85:36">1</literal><operator pos:start="85:37" pos:end="85:37">)</operator><operator pos:start="85:38" pos:end="85:38">|</operator><literal type="number" pos:start="85:39" pos:end="85:39">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:35"><expr pos:start="87:21" pos:end="87:34"><name pos:start="87:21" pos:end="87:25">level</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <operator pos:start="87:29" pos:end="87:29">-</operator><name pos:start="87:30" pos:end="87:34">level</name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="89:19" pos:end="95:17">else <block pos:start="89:24" pos:end="95:17">{<block_content pos:start="91:21" pos:end="93:40">

                    <expr_stmt pos:start="91:21" pos:end="91:57"><expr pos:start="91:21" pos:end="91:56"><name pos:start="91:21" pos:end="91:25">level</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:34">level</name><operator pos:start="91:35" pos:end="91:35">*</operator><name pos:start="91:36" pos:end="91:50"><name pos:start="91:36" pos:end="91:47">quant_matrix</name><index pos:start="91:48" pos:end="91:50">[<expr pos:start="91:49" pos:end="91:49"><name pos:start="91:49" pos:end="91:49">j</name></expr>]</index></name><operator pos:start="91:51" pos:end="91:51">)</operator> <operator pos:start="91:53" pos:end="91:54">&gt;&gt;</operator> <literal type="number" pos:start="91:56" pos:end="91:56">4</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:40"><expr pos:start="93:21" pos:end="93:39"><name pos:start="93:21" pos:end="93:25">level</name> <operator pos:start="93:27" pos:end="93:27">=</operator> <operator pos:start="93:29" pos:end="93:29">(</operator><name pos:start="93:30" pos:end="93:34">level</name><operator pos:start="93:35" pos:end="93:35">-</operator><literal type="number" pos:start="93:36" pos:end="93:36">1</literal><operator pos:start="93:37" pos:end="93:37">)</operator><operator pos:start="93:38" pos:end="93:38">|</operator><literal type="number" pos:start="93:39" pos:end="93:39">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="99:13" pos:end="105:13"><if pos:start="99:13" pos:end="105:13">if <condition pos:start="99:16" pos:end="99:23">(<expr pos:start="99:17" pos:end="99:22"><name pos:start="99:17" pos:end="99:17">i</name> <operator pos:start="99:19" pos:end="99:19">&gt;</operator> <literal type="number" pos:start="99:21" pos:end="99:22">63</literal></expr>)</condition> <block pos:start="99:25" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:23">

                <expr_stmt pos:start="101:17" pos:end="101:94"><expr pos:start="101:17" pos:end="101:93"><call pos:start="101:17" pos:end="101:93"><name pos:start="101:17" pos:end="101:22">av_log</name><argument_list pos:start="101:23" pos:end="101:93">(<argument pos:start="101:24" pos:end="101:31"><expr pos:start="101:24" pos:end="101:31"><name pos:start="101:24" pos:end="101:31"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:31">avctx</name></name></expr></argument>, <argument pos:start="101:34" pos:end="101:45"><expr pos:start="101:34" pos:end="101:45"><name pos:start="101:34" pos:end="101:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="101:48" pos:end="101:74"><expr pos:start="101:48" pos:end="101:74"><literal type="string" pos:start="101:48" pos:end="101:74">"ac-tex damaged at %d %d\n"</literal></expr></argument>, <argument pos:start="101:77" pos:end="101:83"><expr pos:start="101:77" pos:end="101:83"><name pos:start="101:77" pos:end="101:83"><name pos:start="101:77" pos:end="101:77">s</name><operator pos:start="101:78" pos:end="101:79">-&gt;</operator><name pos:start="101:80" pos:end="101:83">mb_x</name></name></expr></argument>, <argument pos:start="101:86" pos:end="101:92"><expr pos:start="101:86" pos:end="101:92"><name pos:start="101:86" pos:end="101:92"><name pos:start="101:86" pos:end="101:86">s</name><operator pos:start="101:87" pos:end="101:88">-&gt;</operator><name pos:start="101:89" pos:end="101:92">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="103:17" pos:end="103:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="109:13" pos:end="109:29"><expr pos:start="109:13" pos:end="109:28"><name pos:start="109:13" pos:end="109:20"><name pos:start="109:13" pos:end="109:17">block</name><index pos:start="109:18" pos:end="109:20">[<expr pos:start="109:19" pos:end="109:19"><name pos:start="109:19" pos:end="109:19">j</name></expr>]</index></name> <operator pos:start="109:22" pos:end="109:22">=</operator> <name pos:start="109:24" pos:end="109:28">level</name></expr>;</expr_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="113:9" pos:end="113:33"><expr pos:start="113:9" pos:end="113:32"><call pos:start="113:9" pos:end="113:32"><name pos:start="113:9" pos:end="113:20">CLOSE_READER</name><argument_list pos:start="113:21" pos:end="113:32">(<argument pos:start="113:22" pos:end="113:23"><expr pos:start="113:22" pos:end="113:23"><name pos:start="113:22" pos:end="113:23">re</name></expr></argument>, <argument pos:start="113:26" pos:end="113:31"><expr pos:start="113:26" pos:end="113:31"><operator pos:start="113:26" pos:end="113:26">&amp;</operator><name pos:start="113:27" pos:end="113:31"><name pos:start="113:27" pos:end="113:27">s</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

</block_content>}</block></function>
</unit>
