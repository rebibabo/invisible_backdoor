<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9857.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">v4l2_set_parameters</name><parameter_list pos:start="1:31" pos:end="1:51">(<parameter pos:start="1:32" pos:end="1:50"><decl pos:start="1:32" pos:end="1:50"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:46">AVFormatContext</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:50">s1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="153:1">{<block_content pos:start="5:5" pos:end="151:13">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">video_data</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:24">s</name> <init pos:start="5:26" pos:end="5:40">= <expr pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:40"><name pos:start="5:28" pos:end="5:29">s1</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:42"><decl pos:start="7:5" pos:end="7:41"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:24">v4l2_standard</name></name></type> <name pos:start="7:26" pos:end="7:33">standard</name> <init pos:start="7:35" pos:end="7:41">= <expr pos:start="7:37" pos:end="7:41"><block pos:start="7:37" pos:end="7:41">{ <expr pos:start="7:39" pos:end="7:39"><literal type="number" pos:start="7:39" pos:end="7:39">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:26"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:26">v4l2_streamparm</name></name></type> <name pos:start="9:28" pos:end="9:37">streamparm</name> <init pos:start="9:39" pos:end="9:45">= <expr pos:start="9:41" pos:end="9:45"><block pos:start="9:41" pos:end="9:45">{ <expr pos:start="9:43" pos:end="9:43"><literal type="number" pos:start="9:43" pos:end="9:43">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:67"><decl pos:start="11:5" pos:end="11:66"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:21">v4l2_fract</name></name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">tpf</name> <init pos:start="11:28" pos:end="11:66">= <expr pos:start="11:30" pos:end="11:66"><operator pos:start="11:30" pos:end="11:30">&amp;</operator><name pos:start="11:31" pos:end="11:66"><name pos:start="11:31" pos:end="11:40">streamparm</name><operator pos:start="11:41" pos:end="11:41">.</operator><name pos:start="11:42" pos:end="11:45">parm</name><operator pos:start="11:46" pos:end="11:46">.</operator><name pos:start="11:47" pos:end="11:53">capture</name><operator pos:start="11:54" pos:end="11:54">.</operator><name pos:start="11:55" pos:end="11:66">timeperframe</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:35"><decl pos:start="13:5" pos:end="13:34"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:14">AVRational</name></type> <name pos:start="13:16" pos:end="13:26">framerate_q</name> <init pos:start="13:28" pos:end="13:34">= <expr pos:start="13:30" pos:end="13:34"><block pos:start="13:30" pos:end="13:34">{ <expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:14"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:50"><expr pos:start="19:5" pos:end="19:49"><name pos:start="19:5" pos:end="19:19"><name pos:start="19:5" pos:end="19:14">streamparm</name><operator pos:start="19:15" pos:end="19:15">.</operator><name pos:start="19:16" pos:end="19:19">type</name></name> <operator pos:start="19:21" pos:end="19:21">=</operator> <name pos:start="19:23" pos:end="19:49">V4L2_BUF_TYPE_VIDEO_CAPTURE</name></expr>;</expr_stmt>



    <if_stmt pos:start="23:5" pos:end="33:5"><if pos:start="23:5" pos:end="33:5">if <condition pos:start="23:8" pos:end="25:68">(<expr pos:start="23:9" pos:end="25:67"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:20">framerate</name></name> <operator pos:start="23:22" pos:end="23:23">&amp;&amp;</operator>

        <operator pos:start="25:9" pos:end="25:9">(</operator><name pos:start="25:10" pos:end="25:12">ret</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <call pos:start="25:16" pos:end="25:62"><name pos:start="25:16" pos:end="25:34">av_parse_video_rate</name><argument_list pos:start="25:35" pos:end="25:62">(<argument pos:start="25:36" pos:end="25:47"><expr pos:start="25:36" pos:end="25:47"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:47">framerate_q</name></expr></argument>, <argument pos:start="25:50" pos:end="25:61"><expr pos:start="25:50" pos:end="25:61"><name pos:start="25:50" pos:end="25:61"><name pos:start="25:50" pos:end="25:50">s</name><operator pos:start="25:51" pos:end="25:52">-&gt;</operator><name pos:start="25:53" pos:end="25:61">framerate</name></name></expr></argument>)</argument_list></call><operator pos:start="25:63" pos:end="25:63">)</operator> <operator pos:start="25:65" pos:end="25:65">&lt;</operator> <literal type="number" pos:start="25:67" pos:end="25:67">0</literal></expr>)</condition> <block pos:start="25:70" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:19">

        <expr_stmt pos:start="27:9" pos:end="29:29"><expr pos:start="27:9" pos:end="29:28"><call pos:start="27:9" pos:end="29:28"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="29:28">(<argument pos:start="27:16" pos:end="27:17"><expr pos:start="27:16" pos:end="27:17"><name pos:start="27:16" pos:end="27:17">s1</name></expr></argument>, <argument pos:start="27:20" pos:end="27:31"><expr pos:start="27:20" pos:end="27:31"><name pos:start="27:20" pos:end="27:31">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="27:34" pos:end="27:68"><expr pos:start="27:34" pos:end="27:68"><literal type="string" pos:start="27:34" pos:end="27:68">"Could not parse framerate '%s'.\n"</literal></expr></argument>,

               <argument pos:start="29:16" pos:end="29:27"><expr pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:27"><name pos:start="29:16" pos:end="29:16">s</name><operator pos:start="29:17" pos:end="29:18">-&gt;</operator><name pos:start="29:19" pos:end="29:27">framerate</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="31:9" pos:end="31:19">return <expr pos:start="31:16" pos:end="31:18"><name pos:start="31:16" pos:end="31:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="85:5"><if pos:start="37:5" pos:end="85:5">if <condition pos:start="37:8" pos:end="37:20">(<expr pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:19"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:19">standard</name></name></expr>)</condition> <block pos:start="37:22" pos:end="85:5">{<block_content pos:start="39:9" pos:end="83:9">

        <expr_stmt pos:start="39:9" pos:end="41:28"><expr pos:start="39:9" pos:end="41:27"><call pos:start="39:9" pos:end="41:27"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="41:27">(<argument pos:start="39:16" pos:end="39:17"><expr pos:start="39:16" pos:end="39:17"><name pos:start="39:16" pos:end="39:17">s1</name></expr></argument>, <argument pos:start="39:20" pos:end="39:31"><expr pos:start="39:20" pos:end="39:31"><name pos:start="39:20" pos:end="39:31">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="39:34" pos:end="39:69"><expr pos:start="39:34" pos:end="39:69"><literal type="string" pos:start="39:34" pos:end="39:69">"The V4L2 driver set standard: %s\n"</literal></expr></argument>,

               <argument pos:start="41:16" pos:end="41:26"><expr pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:26"><name pos:start="41:16" pos:end="41:16">s</name><operator pos:start="41:17" pos:end="41:18">-&gt;</operator><name pos:start="41:19" pos:end="41:26">standard</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="43:9" pos:end="43:29">/* set tv standard */</comment>

        <for pos:start="45:9" pos:end="55:9">for<control pos:start="45:12" pos:end="45:21">(<init pos:start="45:13" pos:end="45:16"><expr pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:13">i</name><operator pos:start="45:14" pos:end="45:14">=</operator><literal type="number" pos:start="45:15" pos:end="45:15">0</literal></expr>;</init><condition pos:start="45:17" pos:end="45:17">;</condition><incr pos:start="45:18" pos:end="45:20"><expr pos:start="45:18" pos:end="45:20"><name pos:start="45:18" pos:end="45:18">i</name><operator pos:start="45:19" pos:end="45:20">++</operator></expr></incr>)</control> <block pos:start="45:23" pos:end="55:9">{<block_content pos:start="47:13" pos:end="53:22">

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:20">standard</name><operator pos:start="47:21" pos:end="47:21">.</operator><name pos:start="47:22" pos:end="47:26">index</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <name pos:start="47:30" pos:end="47:30">i</name></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:63"><expr pos:start="49:13" pos:end="49:62"><name pos:start="49:13" pos:end="49:15">ret</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <call pos:start="49:19" pos:end="49:62"><name pos:start="49:19" pos:end="49:28">v4l2_ioctl</name><argument_list pos:start="49:29" pos:end="49:62">(<argument pos:start="49:30" pos:end="49:34"><expr pos:start="49:30" pos:end="49:34"><name pos:start="49:30" pos:end="49:34"><name pos:start="49:30" pos:end="49:30">s</name><operator pos:start="49:31" pos:end="49:32">-&gt;</operator><name pos:start="49:33" pos:end="49:34">fd</name></name></expr></argument>, <argument pos:start="49:37" pos:end="49:50"><expr pos:start="49:37" pos:end="49:50"><name pos:start="49:37" pos:end="49:50">VIDIOC_ENUMSTD</name></expr></argument>, <argument pos:start="49:53" pos:end="49:61"><expr pos:start="49:53" pos:end="49:61"><operator pos:start="49:53" pos:end="49:53">&amp;</operator><name pos:start="49:54" pos:end="49:61">standard</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="51:13" pos:end="53:22"><if pos:start="51:13" pos:end="53:22">if <condition pos:start="51:16" pos:end="51:70">(<expr pos:start="51:17" pos:end="51:69"><name pos:start="51:17" pos:end="51:19">ret</name> <operator pos:start="51:21" pos:end="51:21">&lt;</operator> <literal type="number" pos:start="51:23" pos:end="51:23">0</literal> <operator pos:start="51:25" pos:end="51:26">||</operator> <operator pos:start="51:28" pos:end="51:28">!</operator><call pos:start="51:29" pos:end="51:69"><name pos:start="51:29" pos:end="51:41">av_strcasecmp</name><argument_list pos:start="51:42" pos:end="51:69">(<argument pos:start="51:43" pos:end="51:55"><expr pos:start="51:43" pos:end="51:55"><name pos:start="51:43" pos:end="51:55"><name pos:start="51:43" pos:end="51:50">standard</name><operator pos:start="51:51" pos:end="51:51">.</operator><name pos:start="51:52" pos:end="51:55">name</name></name></expr></argument>, <argument pos:start="51:58" pos:end="51:68"><expr pos:start="51:58" pos:end="51:68"><name pos:start="51:58" pos:end="51:68"><name pos:start="51:58" pos:end="51:58">s</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:68">standard</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:17" pos:end="53:22"><block_content pos:start="53:17" pos:end="53:22">

                <break pos:start="53:17" pos:end="53:22">break;</break></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="57:9" pos:end="63:9"><if pos:start="57:9" pos:end="63:9">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:17">&lt;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">0</literal></expr>)</condition> <block pos:start="57:22" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:23">

            <expr_stmt pos:start="59:13" pos:end="59:77"><expr pos:start="59:13" pos:end="59:76"><call pos:start="59:13" pos:end="59:76"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:76">(<argument pos:start="59:20" pos:end="59:21"><expr pos:start="59:20" pos:end="59:21"><name pos:start="59:20" pos:end="59:21">s1</name></expr></argument>, <argument pos:start="59:24" pos:end="59:35"><expr pos:start="59:24" pos:end="59:35"><name pos:start="59:24" pos:end="59:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:38" pos:end="59:62"><expr pos:start="59:38" pos:end="59:62"><literal type="string" pos:start="59:38" pos:end="59:62">"Unknown standard '%s'\n"</literal></expr></argument>, <argument pos:start="59:65" pos:end="59:75"><expr pos:start="59:65" pos:end="59:75"><name pos:start="59:65" pos:end="59:75"><name pos:start="59:65" pos:end="59:65">s</name><operator pos:start="59:66" pos:end="59:67">-&gt;</operator><name pos:start="59:68" pos:end="59:75">standard</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:23">return <expr pos:start="61:20" pos:end="61:22"><name pos:start="61:20" pos:end="61:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="67:9" pos:end="71:51"><expr pos:start="67:9" pos:end="71:50"><call pos:start="67:9" pos:end="71:50"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="71:50">(<argument pos:start="67:16" pos:end="67:17"><expr pos:start="67:16" pos:end="67:17"><name pos:start="67:16" pos:end="67:17">s1</name></expr></argument>, <argument pos:start="67:20" pos:end="67:31"><expr pos:start="67:20" pos:end="67:31"><name pos:start="67:20" pos:end="67:31">AV_LOG_DEBUG</name></expr></argument>,

               <argument pos:start="69:16" pos:end="69:66"><expr pos:start="69:16" pos:end="69:66"><literal type="string" pos:start="69:16" pos:end="69:56">"The V4L2 driver set standard: %s, id: %"</literal><name pos:start="69:57" pos:end="69:62">PRIu64</name><literal type="string" pos:start="69:63" pos:end="69:66">"\n"</literal></expr></argument>,

               <argument pos:start="71:16" pos:end="71:26"><expr pos:start="71:16" pos:end="71:26"><name pos:start="71:16" pos:end="71:26"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:26">standard</name></name></expr></argument>, <argument pos:start="71:29" pos:end="71:49"><expr pos:start="71:29" pos:end="71:49"><operator pos:start="71:29" pos:end="71:29">(</operator><name pos:start="71:30" pos:end="71:37">uint64_t</name><operator pos:start="71:38" pos:end="71:38">)</operator><name pos:start="71:39" pos:end="71:49"><name pos:start="71:39" pos:end="71:46">standard</name><operator pos:start="71:47" pos:end="71:47">.</operator><name pos:start="71:48" pos:end="71:49">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="83:9"><if pos:start="73:9" pos:end="83:9">if <condition pos:start="73:12" pos:end="73:62">(<expr pos:start="73:13" pos:end="73:61"><call pos:start="73:13" pos:end="73:57"><name pos:start="73:13" pos:end="73:22">v4l2_ioctl</name><argument_list pos:start="73:23" pos:end="73:57">(<argument pos:start="73:24" pos:end="73:28"><expr pos:start="73:24" pos:end="73:28"><name pos:start="73:24" pos:end="73:28"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:28">fd</name></name></expr></argument>, <argument pos:start="73:31" pos:end="73:42"><expr pos:start="73:31" pos:end="73:42"><name pos:start="73:31" pos:end="73:42">VIDIOC_S_STD</name></expr></argument>, <argument pos:start="73:45" pos:end="73:56"><expr pos:start="73:45" pos:end="73:56"><operator pos:start="73:45" pos:end="73:45">&amp;</operator><name pos:start="73:46" pos:end="73:56"><name pos:start="73:46" pos:end="73:53">standard</name><operator pos:start="73:54" pos:end="73:54">.</operator><name pos:start="73:55" pos:end="73:56">id</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:59" pos:end="73:59">&lt;</operator> <literal type="number" pos:start="73:61" pos:end="73:61">0</literal></expr>)</condition> <block pos:start="73:64" pos:end="83:9">{<block_content pos:start="75:13" pos:end="81:32">

            <expr_stmt pos:start="75:13" pos:end="79:32"><expr pos:start="75:13" pos:end="79:31"><call pos:start="75:13" pos:end="79:31"><name pos:start="75:13" pos:end="75:18">av_log</name><argument_list pos:start="75:19" pos:end="79:31">(<argument pos:start="75:20" pos:end="75:21"><expr pos:start="75:20" pos:end="75:21"><name pos:start="75:20" pos:end="75:21">s1</name></expr></argument>, <argument pos:start="75:24" pos:end="75:35"><expr pos:start="75:24" pos:end="75:35"><name pos:start="75:24" pos:end="75:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="77:20" pos:end="77:68"><expr pos:start="77:20" pos:end="77:68"><literal type="string" pos:start="77:20" pos:end="77:68">"The V4L2 driver ioctl set standard(%s) failed\n"</literal></expr></argument>,

                   <argument pos:start="79:20" pos:end="79:30"><expr pos:start="79:20" pos:end="79:30"><name pos:start="79:20" pos:end="79:30"><name pos:start="79:20" pos:end="79:20">s</name><operator pos:start="79:21" pos:end="79:22">-&gt;</operator><name pos:start="79:23" pos:end="79:30">standard</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:32">return <expr pos:start="81:20" pos:end="81:31"><call pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:26">AVERROR</name><argument_list pos:start="81:27" pos:end="81:31">(<argument pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><name pos:start="81:28" pos:end="81:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="89:5" pos:end="143:5"><if pos:start="89:5" pos:end="131:5">if <condition pos:start="89:8" pos:end="89:43">(<expr pos:start="89:9" pos:end="89:42"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:19">framerate_q</name><operator pos:start="89:20" pos:end="89:20">.</operator><name pos:start="89:21" pos:end="89:23">num</name></name> <operator pos:start="89:25" pos:end="89:26">&amp;&amp;</operator> <name pos:start="89:28" pos:end="89:42"><name pos:start="89:28" pos:end="89:38">framerate_q</name><operator pos:start="89:39" pos:end="89:39">.</operator><name pos:start="89:40" pos:end="89:42">den</name></name></expr>)</condition> <block pos:start="89:45" pos:end="131:5">{<block_content pos:start="91:9" pos:end="129:9">

        <expr_stmt pos:start="91:9" pos:end="93:49"><expr pos:start="91:9" pos:end="93:48"><call pos:start="91:9" pos:end="93:48"><name pos:start="91:9" pos:end="91:14">av_log</name><argument_list pos:start="91:15" pos:end="93:48">(<argument pos:start="91:16" pos:end="91:17"><expr pos:start="91:16" pos:end="91:17"><name pos:start="91:16" pos:end="91:17">s1</name></expr></argument>, <argument pos:start="91:20" pos:end="91:31"><expr pos:start="91:20" pos:end="91:31"><name pos:start="91:20" pos:end="91:31">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="91:34" pos:end="91:68"><expr pos:start="91:34" pos:end="91:68"><literal type="string" pos:start="91:34" pos:end="91:68">"Setting time per frame to %d/%d\n"</literal></expr></argument>,

               <argument pos:start="93:16" pos:end="93:30"><expr pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:26">framerate_q</name><operator pos:start="93:27" pos:end="93:27">.</operator><name pos:start="93:28" pos:end="93:30">den</name></name></expr></argument>, <argument pos:start="93:33" pos:end="93:47"><expr pos:start="93:33" pos:end="93:47"><name pos:start="93:33" pos:end="93:47"><name pos:start="93:33" pos:end="93:43">framerate_q</name><operator pos:start="93:44" pos:end="93:44">.</operator><name pos:start="93:45" pos:end="93:47">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:43"><expr pos:start="95:9" pos:end="95:42"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:11">tpf</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:22">numerator</name></name>   <operator pos:start="95:26" pos:end="95:26">=</operator> <name pos:start="95:28" pos:end="95:42"><name pos:start="95:28" pos:end="95:38">framerate_q</name><operator pos:start="95:39" pos:end="95:39">.</operator><name pos:start="95:40" pos:end="95:42">den</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:43"><expr pos:start="97:9" pos:end="97:42"><name pos:start="97:9" pos:end="97:24"><name pos:start="97:9" pos:end="97:11">tpf</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:24">denominator</name></name> <operator pos:start="97:26" pos:end="97:26">=</operator> <name pos:start="97:28" pos:end="97:42"><name pos:start="97:28" pos:end="97:38">framerate_q</name><operator pos:start="97:39" pos:end="97:39">.</operator><name pos:start="97:40" pos:end="97:42">num</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="101:9" pos:end="111:9"><if pos:start="101:9" pos:end="111:9">if <condition pos:start="101:12" pos:end="101:63">(<expr pos:start="101:13" pos:end="101:62"><call pos:start="101:13" pos:end="101:57"><name pos:start="101:13" pos:end="101:22">v4l2_ioctl</name><argument_list pos:start="101:23" pos:end="101:57">(<argument pos:start="101:24" pos:end="101:28"><expr pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:28"><name pos:start="101:24" pos:end="101:24">s</name><operator pos:start="101:25" pos:end="101:26">-&gt;</operator><name pos:start="101:27" pos:end="101:28">fd</name></name></expr></argument>, <argument pos:start="101:31" pos:end="101:43"><expr pos:start="101:31" pos:end="101:43"><name pos:start="101:31" pos:end="101:43">VIDIOC_S_PARM</name></expr></argument>, <argument pos:start="101:46" pos:end="101:56"><expr pos:start="101:46" pos:end="101:56"><operator pos:start="101:46" pos:end="101:46">&amp;</operator><name pos:start="101:47" pos:end="101:56">streamparm</name></expr></argument>)</argument_list></call> <operator pos:start="101:59" pos:end="101:60">!=</operator> <literal type="number" pos:start="101:62" pos:end="101:62">0</literal></expr>)</condition> <block pos:start="101:65" pos:end="111:9">{<block_content pos:start="103:13" pos:end="109:32">

            <expr_stmt pos:start="103:13" pos:end="107:53"><expr pos:start="103:13" pos:end="107:52"><call pos:start="103:13" pos:end="107:52"><name pos:start="103:13" pos:end="103:18">av_log</name><argument_list pos:start="103:19" pos:end="107:52">(<argument pos:start="103:20" pos:end="103:21"><expr pos:start="103:20" pos:end="103:21"><name pos:start="103:20" pos:end="103:21">s1</name></expr></argument>, <argument pos:start="103:24" pos:end="103:35"><expr pos:start="103:24" pos:end="103:35"><name pos:start="103:24" pos:end="103:35">AV_LOG_ERROR</name></expr></argument>,

                   <argument pos:start="105:20" pos:end="105:61"><expr pos:start="105:20" pos:end="105:61"><literal type="string" pos:start="105:20" pos:end="105:61">"ioctl set time per frame(%d/%d) failed\n"</literal></expr></argument>,

                   <argument pos:start="107:20" pos:end="107:34"><expr pos:start="107:20" pos:end="107:34"><name pos:start="107:20" pos:end="107:34"><name pos:start="107:20" pos:end="107:30">framerate_q</name><operator pos:start="107:31" pos:end="107:31">.</operator><name pos:start="107:32" pos:end="107:34">den</name></name></expr></argument>, <argument pos:start="107:37" pos:end="107:51"><expr pos:start="107:37" pos:end="107:51"><name pos:start="107:37" pos:end="107:51"><name pos:start="107:37" pos:end="107:47">framerate_q</name><operator pos:start="107:48" pos:end="107:48">.</operator><name pos:start="107:49" pos:end="107:51">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="109:13" pos:end="109:32">return <expr pos:start="109:20" pos:end="109:31"><call pos:start="109:20" pos:end="109:31"><name pos:start="109:20" pos:end="109:26">AVERROR</name><argument_list pos:start="109:27" pos:end="109:31">(<argument pos:start="109:28" pos:end="109:30"><expr pos:start="109:28" pos:end="109:30"><name pos:start="109:28" pos:end="109:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="115:9" pos:end="129:9"><if pos:start="115:9" pos:end="129:9">if <condition pos:start="115:12" pos:end="117:46">(<expr pos:start="115:13" pos:end="117:45"><name pos:start="115:13" pos:end="115:27"><name pos:start="115:13" pos:end="115:23">framerate_q</name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:27">num</name></name> <operator pos:start="115:29" pos:end="115:30">!=</operator> <name pos:start="115:32" pos:end="115:47"><name pos:start="115:32" pos:end="115:34">tpf</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:47">denominator</name></name> <operator pos:start="115:49" pos:end="115:50">||</operator>

            <name pos:start="117:13" pos:end="117:27"><name pos:start="117:13" pos:end="117:23">framerate_q</name><operator pos:start="117:24" pos:end="117:24">.</operator><name pos:start="117:25" pos:end="117:27">den</name></name> <operator pos:start="117:29" pos:end="117:30">!=</operator> <name pos:start="117:32" pos:end="117:45"><name pos:start="117:32" pos:end="117:34">tpf</name><operator pos:start="117:35" pos:end="117:36">-&gt;</operator><name pos:start="117:37" pos:end="117:45">numerator</name></name></expr>)</condition> <block pos:start="117:48" pos:end="129:9">{<block_content pos:start="119:13" pos:end="127:53">

            <expr_stmt pos:start="119:13" pos:end="127:53"><expr pos:start="119:13" pos:end="127:52"><call pos:start="119:13" pos:end="127:52"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="127:52">(<argument pos:start="119:20" pos:end="119:21"><expr pos:start="119:20" pos:end="119:21"><name pos:start="119:20" pos:end="119:21">s1</name></expr></argument>, <argument pos:start="119:24" pos:end="119:34"><expr pos:start="119:24" pos:end="119:34"><name pos:start="119:24" pos:end="119:34">AV_LOG_INFO</name></expr></argument>,

                   <argument pos:start="121:20" pos:end="123:37"><expr pos:start="121:20" pos:end="123:37"><literal type="string" pos:start="121:20" pos:end="121:64">"The driver changed the time per frame from "</literal>

                   <literal type="string" pos:start="123:20" pos:end="123:37">"%d/%d to %d/%d\n"</literal></expr></argument>,

                   <argument pos:start="125:20" pos:end="125:34"><expr pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:30">framerate_q</name><operator pos:start="125:31" pos:end="125:31">.</operator><name pos:start="125:32" pos:end="125:34">den</name></name></expr></argument>, <argument pos:start="125:37" pos:end="125:51"><expr pos:start="125:37" pos:end="125:51"><name pos:start="125:37" pos:end="125:51"><name pos:start="125:37" pos:end="125:47">framerate_q</name><operator pos:start="125:48" pos:end="125:48">.</operator><name pos:start="125:49" pos:end="125:51">num</name></name></expr></argument>,

                   <argument pos:start="127:20" pos:end="127:33"><expr pos:start="127:20" pos:end="127:33"><name pos:start="127:20" pos:end="127:33"><name pos:start="127:20" pos:end="127:22">tpf</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:33">numerator</name></name></expr></argument>, <argument pos:start="127:36" pos:end="127:51"><expr pos:start="127:36" pos:end="127:51"><name pos:start="127:36" pos:end="127:51"><name pos:start="127:36" pos:end="127:38">tpf</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:51">denominator</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="131:7" pos:end="143:5">else <block pos:start="131:12" pos:end="143:5">{<block_content pos:start="133:9" pos:end="141:9">

        <if_stmt pos:start="133:9" pos:end="141:9"><if pos:start="133:9" pos:end="141:9">if <condition pos:start="133:12" pos:end="133:63">(<expr pos:start="133:13" pos:end="133:62"><call pos:start="133:13" pos:end="133:57"><name pos:start="133:13" pos:end="133:22">v4l2_ioctl</name><argument_list pos:start="133:23" pos:end="133:57">(<argument pos:start="133:24" pos:end="133:28"><expr pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:28"><name pos:start="133:24" pos:end="133:24">s</name><operator pos:start="133:25" pos:end="133:26">-&gt;</operator><name pos:start="133:27" pos:end="133:28">fd</name></name></expr></argument>, <argument pos:start="133:31" pos:end="133:43"><expr pos:start="133:31" pos:end="133:43"><name pos:start="133:31" pos:end="133:43">VIDIOC_G_PARM</name></expr></argument>, <argument pos:start="133:46" pos:end="133:56"><expr pos:start="133:46" pos:end="133:56"><operator pos:start="133:46" pos:end="133:46">&amp;</operator><name pos:start="133:47" pos:end="133:56">streamparm</name></expr></argument>)</argument_list></call> <operator pos:start="133:59" pos:end="133:60">!=</operator> <literal type="number" pos:start="133:62" pos:end="133:62">0</literal></expr>)</condition> <block pos:start="133:65" pos:end="141:9">{<block_content pos:start="135:13" pos:end="139:34">

            <expr_stmt pos:start="135:13" pos:end="137:36"><expr pos:start="135:13" pos:end="137:35"><call pos:start="135:13" pos:end="137:35"><name pos:start="135:13" pos:end="135:18">av_log</name><argument_list pos:start="135:19" pos:end="137:35">(<argument pos:start="135:20" pos:end="135:21"><expr pos:start="135:20" pos:end="135:21"><name pos:start="135:20" pos:end="135:21">s1</name></expr></argument>, <argument pos:start="135:24" pos:end="135:35"><expr pos:start="135:24" pos:end="135:35"><name pos:start="135:24" pos:end="135:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="135:38" pos:end="135:65"><expr pos:start="135:38" pos:end="135:65"><literal type="string" pos:start="135:38" pos:end="135:65">"ioctl(VIDIOC_G_PARM): %s\n"</literal></expr></argument>,

                   <argument pos:start="137:20" pos:end="137:34"><expr pos:start="137:20" pos:end="137:34"><call pos:start="137:20" pos:end="137:34"><name pos:start="137:20" pos:end="137:27">strerror</name><argument_list pos:start="137:28" pos:end="137:34">(<argument pos:start="137:29" pos:end="137:33"><expr pos:start="137:29" pos:end="137:33"><name pos:start="137:29" pos:end="137:33">errno</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="139:13" pos:end="139:34">return <expr pos:start="139:20" pos:end="139:33"><call pos:start="139:20" pos:end="139:33"><name pos:start="139:20" pos:end="139:26">AVERROR</name><argument_list pos:start="139:27" pos:end="139:33">(<argument pos:start="139:28" pos:end="139:32"><expr pos:start="139:28" pos:end="139:32"><name pos:start="139:28" pos:end="139:32">errno</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:58"><expr pos:start="145:5" pos:end="145:57"><name pos:start="145:5" pos:end="145:18"><name pos:start="145:5" pos:end="145:6">s1</name><operator pos:start="145:7" pos:end="145:8">-&gt;</operator><name pos:start="145:9" pos:end="145:15">streams</name><index pos:start="145:16" pos:end="145:18">[<expr pos:start="145:17" pos:end="145:17"><literal type="number" pos:start="145:17" pos:end="145:17">0</literal></expr>]</index></name><operator pos:start="145:19" pos:end="145:20">-&gt;</operator><name pos:start="145:21" pos:end="145:38"><name pos:start="145:21" pos:end="145:34">avg_frame_rate</name><operator pos:start="145:35" pos:end="145:35">.</operator><name pos:start="145:36" pos:end="145:38">num</name></name> <operator pos:start="145:40" pos:end="145:40">=</operator> <name pos:start="145:42" pos:end="145:57"><name pos:start="145:42" pos:end="145:44">tpf</name><operator pos:start="145:45" pos:end="145:46">-&gt;</operator><name pos:start="145:47" pos:end="145:57">denominator</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="147:5" pos:end="147:56"><expr pos:start="147:5" pos:end="147:55"><name pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:6">s1</name><operator pos:start="147:7" pos:end="147:8">-&gt;</operator><name pos:start="147:9" pos:end="147:15">streams</name><index pos:start="147:16" pos:end="147:18">[<expr pos:start="147:17" pos:end="147:17"><literal type="number" pos:start="147:17" pos:end="147:17">0</literal></expr>]</index></name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:38"><name pos:start="147:21" pos:end="147:34">avg_frame_rate</name><operator pos:start="147:35" pos:end="147:35">.</operator><name pos:start="147:36" pos:end="147:38">den</name></name> <operator pos:start="147:40" pos:end="147:40">=</operator> <name pos:start="147:42" pos:end="147:55"><name pos:start="147:42" pos:end="147:44">tpf</name><operator pos:start="147:45" pos:end="147:46">-&gt;</operator><name pos:start="147:47" pos:end="147:55">numerator</name></name></expr>;</expr_stmt>



    <return pos:start="151:5" pos:end="151:13">return <expr pos:start="151:12" pos:end="151:12"><literal type="number" pos:start="151:12" pos:end="151:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
