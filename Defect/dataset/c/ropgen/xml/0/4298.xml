<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4298.c" pos:tabs="8"><function pos:start="1:1" pos:end="505:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">gen_arith_imm</name> <parameter_list pos:start="1:27" pos:end="3:55">(<parameter pos:start="1:28" pos:end="1:40"><decl pos:start="1:28" pos:end="1:40"><type pos:start="1:28" pos:end="1:40"><name pos:start="1:28" pos:end="1:35">CPUState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">env</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:59"><decl pos:start="1:43" pos:end="1:59"><type pos:start="1:43" pos:end="1:59"><name pos:start="1:43" pos:end="1:54">DisasContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:59">ctx</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:73"><decl pos:start="1:62" pos:end="1:73"><type pos:start="1:62" pos:end="1:73"><name pos:start="1:62" pos:end="1:69">uint32_t</name></type> <name pos:start="1:71" pos:end="1:73">opc</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:33"><decl pos:start="3:28" pos:end="3:33"><type pos:start="3:28" pos:end="3:33"><name pos:start="3:28" pos:end="3:30">int</name></type> <name pos:start="3:32" pos:end="3:33">rt</name></decl></parameter>, <parameter pos:start="3:36" pos:end="3:41"><decl pos:start="3:36" pos:end="3:41"><type pos:start="3:36" pos:end="3:41"><name pos:start="3:36" pos:end="3:38">int</name></type> <name pos:start="3:40" pos:end="3:41">rs</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:54"><decl pos:start="3:44" pos:end="3:54"><type pos:start="3:44" pos:end="3:54"><name pos:start="3:44" pos:end="3:50">int16_t</name></type> <name pos:start="3:52" pos:end="3:54">imm</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="505:1">{<block_content pos:start="7:5" pos:end="503:22">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">target_ulong</name></type> <name pos:start="7:18" pos:end="7:21">uimm</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:16"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:14">char</name> <modifier pos:start="9:16" pos:end="9:16">*</modifier></type><name pos:start="9:17" pos:end="9:19">opn</name> <init pos:start="9:21" pos:end="9:33">= <expr pos:start="9:23" pos:end="9:33"><literal type="string" pos:start="9:23" pos:end="9:33">"imm arith"</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:46"><decl pos:start="11:5" pos:end="11:45"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:11">t0</name> <init pos:start="11:13" pos:end="11:45">= <expr pos:start="11:15" pos:end="11:45"><call pos:start="11:15" pos:end="11:45"><name pos:start="11:15" pos:end="11:32">tcg_temp_local_new</name><argument_list pos:start="11:33" pos:end="11:45">(<argument pos:start="11:34" pos:end="11:44"><expr pos:start="11:34" pos:end="11:44"><name pos:start="11:34" pos:end="11:44">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:55">(<expr pos:start="15:9" pos:end="15:54"><name pos:start="15:9" pos:end="15:10">rt</name> <operator pos:start="15:12" pos:end="15:13">==</operator> <literal type="number" pos:start="15:15" pos:end="15:15">0</literal> <operator pos:start="15:17" pos:end="15:18">&amp;&amp;</operator> <name pos:start="15:20" pos:end="15:22">opc</name> <operator pos:start="15:24" pos:end="15:25">!=</operator> <name pos:start="15:27" pos:end="15:34">OPC_ADDI</name> <operator pos:start="15:36" pos:end="15:37">&amp;&amp;</operator> <name pos:start="15:39" pos:end="15:41">opc</name> <operator pos:start="15:43" pos:end="15:44">!=</operator> <name pos:start="15:46" pos:end="15:54">OPC_DADDI</name></expr>)</condition> <block pos:start="15:57" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:17">

        <comment type="block" pos:start="17:9" pos:end="19:76">/* If no destination, treat it as a NOP.

           For addi, we must generate the overflow exception when needed. */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><call pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:18">MIPS_DEBUG</name><argument_list pos:start="21:19" pos:end="21:25">(<argument pos:start="21:20" pos:end="21:24"><expr pos:start="21:20" pos:end="21:24"><literal type="string" pos:start="21:20" pos:end="21:24">"NOP"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:8">uimm</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <operator pos:start="27:12" pos:end="27:12">(</operator><name pos:start="27:13" pos:end="27:20">uint16_t</name><operator pos:start="27:21" pos:end="27:21">)</operator><name pos:start="27:22" pos:end="27:24">imm</name></expr>;</expr_stmt>

    <switch pos:start="29:5" pos:end="95:5">switch <condition pos:start="29:12" pos:end="29:16">(<expr pos:start="29:13" pos:end="29:15"><name pos:start="29:13" pos:end="29:15">opc</name></expr>)</condition> <block pos:start="29:18" pos:end="95:5">{<block_content pos:start="31:5" pos:end="93:14">

    <case pos:start="31:5" pos:end="31:18">case <expr pos:start="31:10" pos:end="31:17"><name pos:start="31:10" pos:end="31:17">OPC_ADDI</name></expr>:</case>

    <case pos:start="33:5" pos:end="36:0">case <expr pos:start="33:10" pos:end="33:18"><name pos:start="33:10" pos:end="33:18">OPC_ADDIU</name></expr>:</case>

<cpp:if pos:start="35:1" pos:end="35:26">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:26"><call pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:11">defined</name><argument_list pos:start="35:12" pos:end="35:26">(<argument pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="37:5" pos:end="37:19">case <expr pos:start="37:10" pos:end="37:18"><name pos:start="37:10" pos:end="37:18">OPC_DADDI</name></expr>:</case>

    <case pos:start="39:5" pos:end="42:0">case <expr pos:start="39:10" pos:end="39:19"><name pos:start="39:10" pos:end="39:19">OPC_DADDIU</name></expr>:</case>

<cpp:endif pos:start="41:1" pos:end="41:6">#<cpp:directive pos:start="41:2" pos:end="41:6">endif</cpp:directive></cpp:endif>

    <case pos:start="43:5" pos:end="43:18">case <expr pos:start="43:10" pos:end="43:17"><name pos:start="43:10" pos:end="43:17">OPC_SLTI</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:19">case <expr pos:start="45:10" pos:end="45:18"><name pos:start="45:10" pos:end="45:18">OPC_SLTIU</name></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:12">uimm</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <operator pos:start="47:16" pos:end="47:16">(</operator><name pos:start="47:17" pos:end="47:27">target_long</name><operator pos:start="47:28" pos:end="47:28">)</operator><name pos:start="47:29" pos:end="47:31">imm</name></expr>;</expr_stmt> <comment type="block" pos:start="47:34" pos:end="47:64">/* Sign extend to 32/64 bits */</comment>

        <comment type="block" pos:start="49:9" pos:end="49:27">/* Fall through. */</comment>

    <case pos:start="51:5" pos:end="51:18">case <expr pos:start="51:10" pos:end="51:17"><name pos:start="51:10" pos:end="51:17">OPC_ANDI</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:17">case <expr pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:16">OPC_ORI</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:18">case <expr pos:start="55:10" pos:end="55:17"><name pos:start="55:10" pos:end="55:17">OPC_XORI</name></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:29"><expr pos:start="57:9" pos:end="57:28"><call pos:start="57:9" pos:end="57:28"><name pos:start="57:9" pos:end="57:20">gen_load_gpr</name><argument_list pos:start="57:21" pos:end="57:28">(<argument pos:start="57:22" pos:end="57:23"><expr pos:start="57:22" pos:end="57:23"><name pos:start="57:22" pos:end="57:23">t0</name></expr></argument>, <argument pos:start="57:26" pos:end="57:27"><expr pos:start="57:26" pos:end="57:27"><name pos:start="57:26" pos:end="57:27">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:17">case <expr pos:start="61:10" pos:end="61:16"><name pos:start="61:10" pos:end="61:16">OPC_LUI</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:39"><expr pos:start="63:9" pos:end="63:38"><call pos:start="63:9" pos:end="63:38"><name pos:start="63:9" pos:end="63:23">tcg_gen_movi_tl</name><argument_list pos:start="63:24" pos:end="63:38">(<argument pos:start="63:25" pos:end="63:26"><expr pos:start="63:25" pos:end="63:26"><name pos:start="63:25" pos:end="63:26">t0</name></expr></argument>, <argument pos:start="63:29" pos:end="63:37"><expr pos:start="63:29" pos:end="63:37"><name pos:start="63:29" pos:end="63:31">imm</name> <operator pos:start="63:33" pos:end="63:34">&lt;&lt;</operator> <literal type="number" pos:start="63:36" pos:end="63:37">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>

    <case pos:start="67:5" pos:end="67:17">case <expr pos:start="67:10" pos:end="67:16"><name pos:start="67:10" pos:end="67:16">OPC_SLL</name></expr>:</case>

    <case pos:start="69:5" pos:end="69:17">case <expr pos:start="69:10" pos:end="69:16"><name pos:start="69:10" pos:end="69:16">OPC_SRA</name></expr>:</case>

    <case pos:start="71:5" pos:end="74:0">case <expr pos:start="71:10" pos:end="71:16"><name pos:start="71:10" pos:end="71:16">OPC_SRL</name></expr>:</case>

<cpp:if pos:start="73:1" pos:end="73:26">#<cpp:directive pos:start="73:2" pos:end="73:3">if</cpp:directive> <expr pos:start="73:5" pos:end="73:26"><call pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:11">defined</name><argument_list pos:start="73:12" pos:end="73:26">(<argument pos:start="73:13" pos:end="73:25"><expr pos:start="73:13" pos:end="73:25"><name pos:start="73:13" pos:end="73:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="75:5" pos:end="75:18">case <expr pos:start="75:10" pos:end="75:17"><name pos:start="75:10" pos:end="75:17">OPC_DSLL</name></expr>:</case>

    <case pos:start="77:5" pos:end="77:18">case <expr pos:start="77:10" pos:end="77:17"><name pos:start="77:10" pos:end="77:17">OPC_DSRA</name></expr>:</case>

    <case pos:start="79:5" pos:end="79:18">case <expr pos:start="79:10" pos:end="79:17"><name pos:start="79:10" pos:end="79:17">OPC_DSRL</name></expr>:</case>

    <case pos:start="81:5" pos:end="81:20">case <expr pos:start="81:10" pos:end="81:19"><name pos:start="81:10" pos:end="81:19">OPC_DSLL32</name></expr>:</case>

    <case pos:start="83:5" pos:end="83:20">case <expr pos:start="83:10" pos:end="83:19"><name pos:start="83:10" pos:end="83:19">OPC_DSRA32</name></expr>:</case>

    <case pos:start="85:5" pos:end="88:0">case <expr pos:start="85:10" pos:end="85:19"><name pos:start="85:10" pos:end="85:19">OPC_DSRL32</name></expr>:</case>

<cpp:endif pos:start="87:1" pos:end="87:6">#<cpp:directive pos:start="87:2" pos:end="87:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="89:9" pos:end="89:21"><expr pos:start="89:9" pos:end="89:20"><name pos:start="89:9" pos:end="89:12">uimm</name> <operator pos:start="89:14" pos:end="89:15">&amp;=</operator> <literal type="number" pos:start="89:17" pos:end="89:20">0x1f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:29"><expr pos:start="91:9" pos:end="91:28"><call pos:start="91:9" pos:end="91:28"><name pos:start="91:9" pos:end="91:20">gen_load_gpr</name><argument_list pos:start="91:21" pos:end="91:28">(<argument pos:start="91:22" pos:end="91:23"><expr pos:start="91:22" pos:end="91:23"><name pos:start="91:22" pos:end="91:23">t0</name></expr></argument>, <argument pos:start="91:26" pos:end="91:27"><expr pos:start="91:26" pos:end="91:27"><name pos:start="91:26" pos:end="91:27">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    </block_content>}</block></switch>

    <switch pos:start="97:5" pos:end="495:5">switch <condition pos:start="97:12" pos:end="97:16">(<expr pos:start="97:13" pos:end="97:15"><name pos:start="97:13" pos:end="97:15">opc</name></expr>)</condition> <block pos:start="97:18" pos:end="495:5">{<block_content pos:start="99:5" pos:end="493:17">

    <case pos:start="99:5" pos:end="99:18">case <expr pos:start="99:10" pos:end="99:17"><name pos:start="99:10" pos:end="99:17">OPC_ADDI</name></expr>:</case>

        <block pos:start="101:9" pos:end="145:9">{<block_content pos:start="103:13" pos:end="143:38">

            <decl_stmt pos:start="103:13" pos:end="103:58"><decl pos:start="103:13" pos:end="103:57"><type pos:start="103:13" pos:end="103:16"><name pos:start="103:13" pos:end="103:16">TCGv</name></type> <name pos:start="103:18" pos:end="103:23">r_tmp1</name> <init pos:start="103:25" pos:end="103:57">= <expr pos:start="103:27" pos:end="103:57"><call pos:start="103:27" pos:end="103:57"><name pos:start="103:27" pos:end="103:44">tcg_temp_local_new</name><argument_list pos:start="103:45" pos:end="103:57">(<argument pos:start="103:46" pos:end="103:56"><expr pos:start="103:46" pos:end="103:56"><name pos:start="103:46" pos:end="103:56">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="105:13" pos:end="105:52"><decl pos:start="105:13" pos:end="105:51"><type pos:start="105:13" pos:end="105:16"><name pos:start="105:13" pos:end="105:16">TCGv</name></type> <name pos:start="105:18" pos:end="105:23">r_tmp2</name> <init pos:start="105:25" pos:end="105:51">= <expr pos:start="105:27" pos:end="105:51"><call pos:start="105:27" pos:end="105:51"><name pos:start="105:27" pos:end="105:38">tcg_temp_new</name><argument_list pos:start="105:39" pos:end="105:51">(<argument pos:start="105:40" pos:end="105:50"><expr pos:start="105:40" pos:end="105:50"><name pos:start="105:40" pos:end="105:50">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:37"><decl pos:start="107:13" pos:end="107:36"><type pos:start="107:13" pos:end="107:15"><name pos:start="107:13" pos:end="107:15">int</name></type> <name pos:start="107:17" pos:end="107:18">l1</name> <init pos:start="107:20" pos:end="107:36">= <expr pos:start="107:22" pos:end="107:36"><call pos:start="107:22" pos:end="107:36"><name pos:start="107:22" pos:end="107:34">gen_new_label</name><argument_list pos:start="107:35" pos:end="107:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="111:13" pos:end="111:35"><expr pos:start="111:13" pos:end="111:34"><call pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:26">save_cpu_state</name><argument_list pos:start="111:27" pos:end="111:34">(<argument pos:start="111:28" pos:end="111:30"><expr pos:start="111:28" pos:end="111:30"><name pos:start="111:28" pos:end="111:30">ctx</name></expr></argument>, <argument pos:start="111:33" pos:end="111:33"><expr pos:start="111:33" pos:end="111:33"><literal type="number" pos:start="111:33" pos:end="111:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:42"><expr pos:start="113:13" pos:end="113:41"><call pos:start="113:13" pos:end="113:41"><name pos:start="113:13" pos:end="113:29">tcg_gen_ext32s_tl</name><argument_list pos:start="113:30" pos:end="113:41">(<argument pos:start="113:31" pos:end="113:36"><expr pos:start="113:31" pos:end="113:36"><name pos:start="113:31" pos:end="113:36">r_tmp1</name></expr></argument>, <argument pos:start="113:39" pos:end="113:40"><expr pos:start="113:39" pos:end="113:40"><name pos:start="113:39" pos:end="113:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="115:13" pos:end="115:46"><expr pos:start="115:13" pos:end="115:45"><call pos:start="115:13" pos:end="115:45"><name pos:start="115:13" pos:end="115:27">tcg_gen_addi_tl</name><argument_list pos:start="115:28" pos:end="115:45">(<argument pos:start="115:29" pos:end="115:30"><expr pos:start="115:29" pos:end="115:30"><name pos:start="115:29" pos:end="115:30">t0</name></expr></argument>, <argument pos:start="115:33" pos:end="115:38"><expr pos:start="115:33" pos:end="115:38"><name pos:start="115:33" pos:end="115:38">r_tmp1</name></expr></argument>, <argument pos:start="115:41" pos:end="115:44"><expr pos:start="115:41" pos:end="115:44"><name pos:start="115:41" pos:end="115:44">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:50"><expr pos:start="119:13" pos:end="119:49"><call pos:start="119:13" pos:end="119:49"><name pos:start="119:13" pos:end="119:27">tcg_gen_xori_tl</name><argument_list pos:start="119:28" pos:end="119:49">(<argument pos:start="119:29" pos:end="119:34"><expr pos:start="119:29" pos:end="119:34"><name pos:start="119:29" pos:end="119:34">r_tmp1</name></expr></argument>, <argument pos:start="119:37" pos:end="119:42"><expr pos:start="119:37" pos:end="119:42"><name pos:start="119:37" pos:end="119:42">r_tmp1</name></expr></argument>, <argument pos:start="119:45" pos:end="119:48"><expr pos:start="119:45" pos:end="119:48"><name pos:start="119:45" pos:end="119:48">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:48"><expr pos:start="121:13" pos:end="121:47"><call pos:start="121:13" pos:end="121:47"><name pos:start="121:13" pos:end="121:27">tcg_gen_xori_tl</name><argument_list pos:start="121:28" pos:end="121:47">(<argument pos:start="121:29" pos:end="121:34"><expr pos:start="121:29" pos:end="121:34"><name pos:start="121:29" pos:end="121:34">r_tmp1</name></expr></argument>, <argument pos:start="121:37" pos:end="121:42"><expr pos:start="121:37" pos:end="121:42"><name pos:start="121:37" pos:end="121:42">r_tmp1</name></expr></argument>, <argument pos:start="121:45" pos:end="121:46"><expr pos:start="121:45" pos:end="121:46"><operator pos:start="121:45" pos:end="121:45">-</operator><literal type="number" pos:start="121:46" pos:end="121:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="123:13" pos:end="123:46"><expr pos:start="123:13" pos:end="123:45"><call pos:start="123:13" pos:end="123:45"><name pos:start="123:13" pos:end="123:27">tcg_gen_xori_tl</name><argument_list pos:start="123:28" pos:end="123:45">(<argument pos:start="123:29" pos:end="123:34"><expr pos:start="123:29" pos:end="123:34"><name pos:start="123:29" pos:end="123:34">r_tmp2</name></expr></argument>, <argument pos:start="123:37" pos:end="123:38"><expr pos:start="123:37" pos:end="123:38"><name pos:start="123:37" pos:end="123:38">t0</name></expr></argument>, <argument pos:start="123:41" pos:end="123:44"><expr pos:start="123:41" pos:end="123:44"><name pos:start="123:41" pos:end="123:44">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:51"><expr pos:start="125:13" pos:end="125:50"><call pos:start="125:13" pos:end="125:50"><name pos:start="125:13" pos:end="125:26">tcg_gen_and_tl</name><argument_list pos:start="125:27" pos:end="125:50">(<argument pos:start="125:28" pos:end="125:33"><expr pos:start="125:28" pos:end="125:33"><name pos:start="125:28" pos:end="125:33">r_tmp1</name></expr></argument>, <argument pos:start="125:36" pos:end="125:41"><expr pos:start="125:36" pos:end="125:41"><name pos:start="125:36" pos:end="125:41">r_tmp1</name></expr></argument>, <argument pos:start="125:44" pos:end="125:49"><expr pos:start="125:44" pos:end="125:49"><name pos:start="125:44" pos:end="125:49">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:34"><expr pos:start="127:13" pos:end="127:33"><call pos:start="127:13" pos:end="127:33"><name pos:start="127:13" pos:end="127:25">tcg_temp_free</name><argument_list pos:start="127:26" pos:end="127:33">(<argument pos:start="127:27" pos:end="127:32"><expr pos:start="127:27" pos:end="127:32"><name pos:start="127:27" pos:end="127:32">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:48"><expr pos:start="129:13" pos:end="129:47"><call pos:start="129:13" pos:end="129:47"><name pos:start="129:13" pos:end="129:27">tcg_gen_shri_tl</name><argument_list pos:start="129:28" pos:end="129:47">(<argument pos:start="129:29" pos:end="129:34"><expr pos:start="129:29" pos:end="129:34"><name pos:start="129:29" pos:end="129:34">r_tmp1</name></expr></argument>, <argument pos:start="129:37" pos:end="129:42"><expr pos:start="129:37" pos:end="129:42"><name pos:start="129:37" pos:end="129:42">r_tmp1</name></expr></argument>, <argument pos:start="129:45" pos:end="129:46"><expr pos:start="129:45" pos:end="129:46"><literal type="number" pos:start="129:45" pos:end="129:46">31</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:59"><expr pos:start="131:13" pos:end="131:58"><call pos:start="131:13" pos:end="131:58"><name pos:start="131:13" pos:end="131:30">tcg_gen_brcondi_tl</name><argument_list pos:start="131:31" pos:end="131:58">(<argument pos:start="131:32" pos:end="131:42"><expr pos:start="131:32" pos:end="131:42"><name pos:start="131:32" pos:end="131:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="131:45" pos:end="131:50"><expr pos:start="131:45" pos:end="131:50"><name pos:start="131:45" pos:end="131:50">r_tmp1</name></expr></argument>, <argument pos:start="131:53" pos:end="131:53"><expr pos:start="131:53" pos:end="131:53"><literal type="number" pos:start="131:53" pos:end="131:53">0</literal></expr></argument>, <argument pos:start="131:56" pos:end="131:57"><expr pos:start="131:56" pos:end="131:57"><name pos:start="131:56" pos:end="131:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="133:13" pos:end="133:34"><expr pos:start="133:13" pos:end="133:33"><call pos:start="133:13" pos:end="133:33"><name pos:start="133:13" pos:end="133:25">tcg_temp_free</name><argument_list pos:start="133:26" pos:end="133:33">(<argument pos:start="133:27" pos:end="133:32"><expr pos:start="133:27" pos:end="133:32"><name pos:start="133:27" pos:end="133:32">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="135:13" pos:end="135:62">/* operands of same sign, result different sign */</comment>

            <expr_stmt pos:start="137:13" pos:end="137:51"><expr pos:start="137:13" pos:end="137:50"><call pos:start="137:13" pos:end="137:50"><name pos:start="137:13" pos:end="137:30">generate_exception</name><argument_list pos:start="137:31" pos:end="137:50">(<argument pos:start="137:32" pos:end="137:34"><expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">ctx</name></expr></argument>, <argument pos:start="137:37" pos:end="137:49"><expr pos:start="137:37" pos:end="137:49"><name pos:start="137:37" pos:end="137:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:30"><expr pos:start="139:13" pos:end="139:29"><call pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:25">gen_set_label</name><argument_list pos:start="139:26" pos:end="139:29">(<argument pos:start="139:27" pos:end="139:28"><expr pos:start="139:27" pos:end="139:28"><name pos:start="139:27" pos:end="139:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:38"><expr pos:start="143:13" pos:end="143:37"><call pos:start="143:13" pos:end="143:37"><name pos:start="143:13" pos:end="143:29">tcg_gen_ext32s_tl</name><argument_list pos:start="143:30" pos:end="143:37">(<argument pos:start="143:31" pos:end="143:32"><expr pos:start="143:31" pos:end="143:32"><name pos:start="143:31" pos:end="143:32">t0</name></expr></argument>, <argument pos:start="143:35" pos:end="143:36"><expr pos:start="143:35" pos:end="143:36"><name pos:start="143:35" pos:end="143:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="147:9" pos:end="147:21"><expr pos:start="147:9" pos:end="147:20"><name pos:start="147:9" pos:end="147:11">opn</name> <operator pos:start="147:13" pos:end="147:13">=</operator> <literal type="string" pos:start="147:15" pos:end="147:20">"addi"</literal></expr>;</expr_stmt>

        <break pos:start="149:9" pos:end="149:14">break;</break>

    <case pos:start="151:5" pos:end="151:19">case <expr pos:start="151:10" pos:end="151:18"><name pos:start="151:10" pos:end="151:18">OPC_ADDIU</name></expr>:</case>

        <expr_stmt pos:start="153:9" pos:end="153:34"><expr pos:start="153:9" pos:end="153:33"><call pos:start="153:9" pos:end="153:33"><name pos:start="153:9" pos:end="153:25">tcg_gen_ext32s_tl</name><argument_list pos:start="153:26" pos:end="153:33">(<argument pos:start="153:27" pos:end="153:28"><expr pos:start="153:27" pos:end="153:28"><name pos:start="153:27" pos:end="153:28">t0</name></expr></argument>, <argument pos:start="153:31" pos:end="153:32"><expr pos:start="153:31" pos:end="153:32"><name pos:start="153:31" pos:end="153:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:38"><expr pos:start="155:9" pos:end="155:37"><call pos:start="155:9" pos:end="155:37"><name pos:start="155:9" pos:end="155:23">tcg_gen_addi_tl</name><argument_list pos:start="155:24" pos:end="155:37">(<argument pos:start="155:25" pos:end="155:26"><expr pos:start="155:25" pos:end="155:26"><name pos:start="155:25" pos:end="155:26">t0</name></expr></argument>, <argument pos:start="155:29" pos:end="155:30"><expr pos:start="155:29" pos:end="155:30"><name pos:start="155:29" pos:end="155:30">t0</name></expr></argument>, <argument pos:start="155:33" pos:end="155:36"><expr pos:start="155:33" pos:end="155:36"><name pos:start="155:33" pos:end="155:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:34"><expr pos:start="157:9" pos:end="157:33"><call pos:start="157:9" pos:end="157:33"><name pos:start="157:9" pos:end="157:25">tcg_gen_ext32s_tl</name><argument_list pos:start="157:26" pos:end="157:33">(<argument pos:start="157:27" pos:end="157:28"><expr pos:start="157:27" pos:end="157:28"><name pos:start="157:27" pos:end="157:28">t0</name></expr></argument>, <argument pos:start="157:31" pos:end="157:32"><expr pos:start="157:31" pos:end="157:32"><name pos:start="157:31" pos:end="157:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:22"><expr pos:start="159:9" pos:end="159:21"><name pos:start="159:9" pos:end="159:11">opn</name> <operator pos:start="159:13" pos:end="159:13">=</operator> <literal type="string" pos:start="159:15" pos:end="159:21">"addiu"</literal></expr>;</expr_stmt>

        <break pos:start="161:9" pos:end="164:0">break;</break>

<cpp:if pos:start="163:1" pos:end="163:26">#<cpp:directive pos:start="163:2" pos:end="163:3">if</cpp:directive> <expr pos:start="163:5" pos:end="163:26"><call pos:start="163:5" pos:end="163:26"><name pos:start="163:5" pos:end="163:11">defined</name><argument_list pos:start="163:12" pos:end="163:26">(<argument pos:start="163:13" pos:end="163:25"><expr pos:start="163:13" pos:end="163:25"><name pos:start="163:13" pos:end="163:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="165:5" pos:end="165:19">case <expr pos:start="165:10" pos:end="165:18"><name pos:start="165:10" pos:end="165:18">OPC_DADDI</name></expr>:</case>

        <block pos:start="167:9" pos:end="207:9">{<block_content pos:start="169:13" pos:end="205:30">

            <decl_stmt pos:start="169:13" pos:end="169:58"><decl pos:start="169:13" pos:end="169:57"><type pos:start="169:13" pos:end="169:16"><name pos:start="169:13" pos:end="169:16">TCGv</name></type> <name pos:start="169:18" pos:end="169:23">r_tmp1</name> <init pos:start="169:25" pos:end="169:57">= <expr pos:start="169:27" pos:end="169:57"><call pos:start="169:27" pos:end="169:57"><name pos:start="169:27" pos:end="169:44">tcg_temp_local_new</name><argument_list pos:start="169:45" pos:end="169:57">(<argument pos:start="169:46" pos:end="169:56"><expr pos:start="169:46" pos:end="169:56"><name pos:start="169:46" pos:end="169:56">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="171:13" pos:end="171:52"><decl pos:start="171:13" pos:end="171:51"><type pos:start="171:13" pos:end="171:16"><name pos:start="171:13" pos:end="171:16">TCGv</name></type> <name pos:start="171:18" pos:end="171:23">r_tmp2</name> <init pos:start="171:25" pos:end="171:51">= <expr pos:start="171:27" pos:end="171:51"><call pos:start="171:27" pos:end="171:51"><name pos:start="171:27" pos:end="171:38">tcg_temp_new</name><argument_list pos:start="171:39" pos:end="171:51">(<argument pos:start="171:40" pos:end="171:50"><expr pos:start="171:40" pos:end="171:50"><name pos:start="171:40" pos:end="171:50">TCG_TYPE_TL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="173:13" pos:end="173:37"><decl pos:start="173:13" pos:end="173:36"><type pos:start="173:13" pos:end="173:15"><name pos:start="173:13" pos:end="173:15">int</name></type> <name pos:start="173:17" pos:end="173:18">l1</name> <init pos:start="173:20" pos:end="173:36">= <expr pos:start="173:22" pos:end="173:36"><call pos:start="173:22" pos:end="173:36"><name pos:start="173:22" pos:end="173:34">gen_new_label</name><argument_list pos:start="173:35" pos:end="173:36">()</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="177:13" pos:end="177:35"><expr pos:start="177:13" pos:end="177:34"><call pos:start="177:13" pos:end="177:34"><name pos:start="177:13" pos:end="177:26">save_cpu_state</name><argument_list pos:start="177:27" pos:end="177:34">(<argument pos:start="177:28" pos:end="177:30"><expr pos:start="177:28" pos:end="177:30"><name pos:start="177:28" pos:end="177:30">ctx</name></expr></argument>, <argument pos:start="177:33" pos:end="177:33"><expr pos:start="177:33" pos:end="177:33"><literal type="number" pos:start="177:33" pos:end="177:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:39"><expr pos:start="179:13" pos:end="179:38"><call pos:start="179:13" pos:end="179:38"><name pos:start="179:13" pos:end="179:26">tcg_gen_mov_tl</name><argument_list pos:start="179:27" pos:end="179:38">(<argument pos:start="179:28" pos:end="179:33"><expr pos:start="179:28" pos:end="179:33"><name pos:start="179:28" pos:end="179:33">r_tmp1</name></expr></argument>, <argument pos:start="179:36" pos:end="179:37"><expr pos:start="179:36" pos:end="179:37"><name pos:start="179:36" pos:end="179:37">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:42"><expr pos:start="181:13" pos:end="181:41"><call pos:start="181:13" pos:end="181:41"><name pos:start="181:13" pos:end="181:27">tcg_gen_addi_tl</name><argument_list pos:start="181:28" pos:end="181:41">(<argument pos:start="181:29" pos:end="181:30"><expr pos:start="181:29" pos:end="181:30"><name pos:start="181:29" pos:end="181:30">t0</name></expr></argument>, <argument pos:start="181:33" pos:end="181:34"><expr pos:start="181:33" pos:end="181:34"><name pos:start="181:33" pos:end="181:34">t0</name></expr></argument>, <argument pos:start="181:37" pos:end="181:40"><expr pos:start="181:37" pos:end="181:40"><name pos:start="181:37" pos:end="181:40">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="185:13" pos:end="185:50"><expr pos:start="185:13" pos:end="185:49"><call pos:start="185:13" pos:end="185:49"><name pos:start="185:13" pos:end="185:27">tcg_gen_xori_tl</name><argument_list pos:start="185:28" pos:end="185:49">(<argument pos:start="185:29" pos:end="185:34"><expr pos:start="185:29" pos:end="185:34"><name pos:start="185:29" pos:end="185:34">r_tmp1</name></expr></argument>, <argument pos:start="185:37" pos:end="185:42"><expr pos:start="185:37" pos:end="185:42"><name pos:start="185:37" pos:end="185:42">r_tmp1</name></expr></argument>, <argument pos:start="185:45" pos:end="185:48"><expr pos:start="185:45" pos:end="185:48"><name pos:start="185:45" pos:end="185:48">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:48"><expr pos:start="187:13" pos:end="187:47"><call pos:start="187:13" pos:end="187:47"><name pos:start="187:13" pos:end="187:27">tcg_gen_xori_tl</name><argument_list pos:start="187:28" pos:end="187:47">(<argument pos:start="187:29" pos:end="187:34"><expr pos:start="187:29" pos:end="187:34"><name pos:start="187:29" pos:end="187:34">r_tmp1</name></expr></argument>, <argument pos:start="187:37" pos:end="187:42"><expr pos:start="187:37" pos:end="187:42"><name pos:start="187:37" pos:end="187:42">r_tmp1</name></expr></argument>, <argument pos:start="187:45" pos:end="187:46"><expr pos:start="187:45" pos:end="187:46"><operator pos:start="187:45" pos:end="187:45">-</operator><literal type="number" pos:start="187:46" pos:end="187:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="189:13" pos:end="189:46"><expr pos:start="189:13" pos:end="189:45"><call pos:start="189:13" pos:end="189:45"><name pos:start="189:13" pos:end="189:27">tcg_gen_xori_tl</name><argument_list pos:start="189:28" pos:end="189:45">(<argument pos:start="189:29" pos:end="189:34"><expr pos:start="189:29" pos:end="189:34"><name pos:start="189:29" pos:end="189:34">r_tmp2</name></expr></argument>, <argument pos:start="189:37" pos:end="189:38"><expr pos:start="189:37" pos:end="189:38"><name pos:start="189:37" pos:end="189:38">t0</name></expr></argument>, <argument pos:start="189:41" pos:end="189:44"><expr pos:start="189:41" pos:end="189:44"><name pos:start="189:41" pos:end="189:44">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="191:13" pos:end="191:51"><expr pos:start="191:13" pos:end="191:50"><call pos:start="191:13" pos:end="191:50"><name pos:start="191:13" pos:end="191:26">tcg_gen_and_tl</name><argument_list pos:start="191:27" pos:end="191:50">(<argument pos:start="191:28" pos:end="191:33"><expr pos:start="191:28" pos:end="191:33"><name pos:start="191:28" pos:end="191:33">r_tmp1</name></expr></argument>, <argument pos:start="191:36" pos:end="191:41"><expr pos:start="191:36" pos:end="191:41"><name pos:start="191:36" pos:end="191:41">r_tmp1</name></expr></argument>, <argument pos:start="191:44" pos:end="191:49"><expr pos:start="191:44" pos:end="191:49"><name pos:start="191:44" pos:end="191:49">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:34"><expr pos:start="193:13" pos:end="193:33"><call pos:start="193:13" pos:end="193:33"><name pos:start="193:13" pos:end="193:25">tcg_temp_free</name><argument_list pos:start="193:26" pos:end="193:33">(<argument pos:start="193:27" pos:end="193:32"><expr pos:start="193:27" pos:end="193:32"><name pos:start="193:27" pos:end="193:32">r_tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:48"><expr pos:start="195:13" pos:end="195:47"><call pos:start="195:13" pos:end="195:47"><name pos:start="195:13" pos:end="195:27">tcg_gen_shri_tl</name><argument_list pos:start="195:28" pos:end="195:47">(<argument pos:start="195:29" pos:end="195:34"><expr pos:start="195:29" pos:end="195:34"><name pos:start="195:29" pos:end="195:34">r_tmp1</name></expr></argument>, <argument pos:start="195:37" pos:end="195:42"><expr pos:start="195:37" pos:end="195:42"><name pos:start="195:37" pos:end="195:42">r_tmp1</name></expr></argument>, <argument pos:start="195:45" pos:end="195:46"><expr pos:start="195:45" pos:end="195:46"><literal type="number" pos:start="195:45" pos:end="195:46">63</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:59"><expr pos:start="197:13" pos:end="197:58"><call pos:start="197:13" pos:end="197:58"><name pos:start="197:13" pos:end="197:30">tcg_gen_brcondi_tl</name><argument_list pos:start="197:31" pos:end="197:58">(<argument pos:start="197:32" pos:end="197:42"><expr pos:start="197:32" pos:end="197:42"><name pos:start="197:32" pos:end="197:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="197:45" pos:end="197:50"><expr pos:start="197:45" pos:end="197:50"><name pos:start="197:45" pos:end="197:50">r_tmp1</name></expr></argument>, <argument pos:start="197:53" pos:end="197:53"><expr pos:start="197:53" pos:end="197:53"><literal type="number" pos:start="197:53" pos:end="197:53">0</literal></expr></argument>, <argument pos:start="197:56" pos:end="197:57"><expr pos:start="197:56" pos:end="197:57"><name pos:start="197:56" pos:end="197:57">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:34"><expr pos:start="199:13" pos:end="199:33"><call pos:start="199:13" pos:end="199:33"><name pos:start="199:13" pos:end="199:25">tcg_temp_free</name><argument_list pos:start="199:26" pos:end="199:33">(<argument pos:start="199:27" pos:end="199:32"><expr pos:start="199:27" pos:end="199:32"><name pos:start="199:27" pos:end="199:32">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="201:13" pos:end="201:62">/* operands of same sign, result different sign */</comment>

            <expr_stmt pos:start="203:13" pos:end="203:51"><expr pos:start="203:13" pos:end="203:50"><call pos:start="203:13" pos:end="203:50"><name pos:start="203:13" pos:end="203:30">generate_exception</name><argument_list pos:start="203:31" pos:end="203:50">(<argument pos:start="203:32" pos:end="203:34"><expr pos:start="203:32" pos:end="203:34"><name pos:start="203:32" pos:end="203:34">ctx</name></expr></argument>, <argument pos:start="203:37" pos:end="203:49"><expr pos:start="203:37" pos:end="203:49"><name pos:start="203:37" pos:end="203:49">EXCP_OVERFLOW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="205:13" pos:end="205:30"><expr pos:start="205:13" pos:end="205:29"><call pos:start="205:13" pos:end="205:29"><name pos:start="205:13" pos:end="205:25">gen_set_label</name><argument_list pos:start="205:26" pos:end="205:29">(<argument pos:start="205:27" pos:end="205:28"><expr pos:start="205:27" pos:end="205:28"><name pos:start="205:27" pos:end="205:28">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="209:9" pos:end="209:22"><expr pos:start="209:9" pos:end="209:21"><name pos:start="209:9" pos:end="209:11">opn</name> <operator pos:start="209:13" pos:end="209:13">=</operator> <literal type="string" pos:start="209:15" pos:end="209:21">"daddi"</literal></expr>;</expr_stmt>

        <break pos:start="211:9" pos:end="211:14">break;</break>

    <case pos:start="213:5" pos:end="213:20">case <expr pos:start="213:10" pos:end="213:19"><name pos:start="213:10" pos:end="213:19">OPC_DADDIU</name></expr>:</case>

        <expr_stmt pos:start="215:9" pos:end="215:38"><expr pos:start="215:9" pos:end="215:37"><call pos:start="215:9" pos:end="215:37"><name pos:start="215:9" pos:end="215:23">tcg_gen_addi_tl</name><argument_list pos:start="215:24" pos:end="215:37">(<argument pos:start="215:25" pos:end="215:26"><expr pos:start="215:25" pos:end="215:26"><name pos:start="215:25" pos:end="215:26">t0</name></expr></argument>, <argument pos:start="215:29" pos:end="215:30"><expr pos:start="215:29" pos:end="215:30"><name pos:start="215:29" pos:end="215:30">t0</name></expr></argument>, <argument pos:start="215:33" pos:end="215:36"><expr pos:start="215:33" pos:end="215:36"><name pos:start="215:33" pos:end="215:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="217:9" pos:end="217:23"><expr pos:start="217:9" pos:end="217:22"><name pos:start="217:9" pos:end="217:11">opn</name> <operator pos:start="217:13" pos:end="217:13">=</operator> <literal type="string" pos:start="217:15" pos:end="217:22">"daddiu"</literal></expr>;</expr_stmt>

        <break pos:start="219:9" pos:end="222:0">break;</break>

<cpp:endif pos:start="221:1" pos:end="221:6">#<cpp:directive pos:start="221:2" pos:end="221:6">endif</cpp:directive></cpp:endif>

    <case pos:start="223:5" pos:end="223:18">case <expr pos:start="223:10" pos:end="223:17"><name pos:start="223:10" pos:end="223:17">OPC_SLTI</name></expr>:</case>

        <expr_stmt pos:start="225:9" pos:end="225:29"><expr pos:start="225:9" pos:end="225:28"><call pos:start="225:9" pos:end="225:28"><name pos:start="225:9" pos:end="225:18">gen_op_lti</name><argument_list pos:start="225:19" pos:end="225:28">(<argument pos:start="225:20" pos:end="225:21"><expr pos:start="225:20" pos:end="225:21"><name pos:start="225:20" pos:end="225:21">t0</name></expr></argument>, <argument pos:start="225:24" pos:end="225:27"><expr pos:start="225:24" pos:end="225:27"><name pos:start="225:24" pos:end="225:27">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="227:9" pos:end="227:21"><expr pos:start="227:9" pos:end="227:20"><name pos:start="227:9" pos:end="227:11">opn</name> <operator pos:start="227:13" pos:end="227:13">=</operator> <literal type="string" pos:start="227:15" pos:end="227:20">"slti"</literal></expr>;</expr_stmt>

        <break pos:start="229:9" pos:end="229:14">break;</break>

    <case pos:start="231:5" pos:end="231:19">case <expr pos:start="231:10" pos:end="231:18"><name pos:start="231:10" pos:end="231:18">OPC_SLTIU</name></expr>:</case>

        <expr_stmt pos:start="233:9" pos:end="233:30"><expr pos:start="233:9" pos:end="233:29"><call pos:start="233:9" pos:end="233:29"><name pos:start="233:9" pos:end="233:19">gen_op_ltiu</name><argument_list pos:start="233:20" pos:end="233:29">(<argument pos:start="233:21" pos:end="233:22"><expr pos:start="233:21" pos:end="233:22"><name pos:start="233:21" pos:end="233:22">t0</name></expr></argument>, <argument pos:start="233:25" pos:end="233:28"><expr pos:start="233:25" pos:end="233:28"><name pos:start="233:25" pos:end="233:28">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:22"><expr pos:start="235:9" pos:end="235:21"><name pos:start="235:9" pos:end="235:11">opn</name> <operator pos:start="235:13" pos:end="235:13">=</operator> <literal type="string" pos:start="235:15" pos:end="235:21">"sltiu"</literal></expr>;</expr_stmt>

        <break pos:start="237:9" pos:end="237:14">break;</break>

    <case pos:start="239:5" pos:end="239:18">case <expr pos:start="239:10" pos:end="239:17"><name pos:start="239:10" pos:end="239:17">OPC_ANDI</name></expr>:</case>

        <expr_stmt pos:start="241:9" pos:end="241:38"><expr pos:start="241:9" pos:end="241:37"><call pos:start="241:9" pos:end="241:37"><name pos:start="241:9" pos:end="241:23">tcg_gen_andi_tl</name><argument_list pos:start="241:24" pos:end="241:37">(<argument pos:start="241:25" pos:end="241:26"><expr pos:start="241:25" pos:end="241:26"><name pos:start="241:25" pos:end="241:26">t0</name></expr></argument>, <argument pos:start="241:29" pos:end="241:30"><expr pos:start="241:29" pos:end="241:30"><name pos:start="241:29" pos:end="241:30">t0</name></expr></argument>, <argument pos:start="241:33" pos:end="241:36"><expr pos:start="241:33" pos:end="241:36"><name pos:start="241:33" pos:end="241:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="243:9" pos:end="243:21"><expr pos:start="243:9" pos:end="243:20"><name pos:start="243:9" pos:end="243:11">opn</name> <operator pos:start="243:13" pos:end="243:13">=</operator> <literal type="string" pos:start="243:15" pos:end="243:20">"andi"</literal></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    <case pos:start="247:5" pos:end="247:17">case <expr pos:start="247:10" pos:end="247:16"><name pos:start="247:10" pos:end="247:16">OPC_ORI</name></expr>:</case>

        <expr_stmt pos:start="249:9" pos:end="249:37"><expr pos:start="249:9" pos:end="249:36"><call pos:start="249:9" pos:end="249:36"><name pos:start="249:9" pos:end="249:22">tcg_gen_ori_tl</name><argument_list pos:start="249:23" pos:end="249:36">(<argument pos:start="249:24" pos:end="249:25"><expr pos:start="249:24" pos:end="249:25"><name pos:start="249:24" pos:end="249:25">t0</name></expr></argument>, <argument pos:start="249:28" pos:end="249:29"><expr pos:start="249:28" pos:end="249:29"><name pos:start="249:28" pos:end="249:29">t0</name></expr></argument>, <argument pos:start="249:32" pos:end="249:35"><expr pos:start="249:32" pos:end="249:35"><name pos:start="249:32" pos:end="249:35">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="251:9" pos:end="251:20"><expr pos:start="251:9" pos:end="251:19"><name pos:start="251:9" pos:end="251:11">opn</name> <operator pos:start="251:13" pos:end="251:13">=</operator> <literal type="string" pos:start="251:15" pos:end="251:19">"ori"</literal></expr>;</expr_stmt>

        <break pos:start="253:9" pos:end="253:14">break;</break>

    <case pos:start="255:5" pos:end="255:18">case <expr pos:start="255:10" pos:end="255:17"><name pos:start="255:10" pos:end="255:17">OPC_XORI</name></expr>:</case>

        <expr_stmt pos:start="257:9" pos:end="257:38"><expr pos:start="257:9" pos:end="257:37"><call pos:start="257:9" pos:end="257:37"><name pos:start="257:9" pos:end="257:23">tcg_gen_xori_tl</name><argument_list pos:start="257:24" pos:end="257:37">(<argument pos:start="257:25" pos:end="257:26"><expr pos:start="257:25" pos:end="257:26"><name pos:start="257:25" pos:end="257:26">t0</name></expr></argument>, <argument pos:start="257:29" pos:end="257:30"><expr pos:start="257:29" pos:end="257:30"><name pos:start="257:29" pos:end="257:30">t0</name></expr></argument>, <argument pos:start="257:33" pos:end="257:36"><expr pos:start="257:33" pos:end="257:36"><name pos:start="257:33" pos:end="257:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="259:9" pos:end="259:21"><expr pos:start="259:9" pos:end="259:20"><name pos:start="259:9" pos:end="259:11">opn</name> <operator pos:start="259:13" pos:end="259:13">=</operator> <literal type="string" pos:start="259:15" pos:end="259:20">"xori"</literal></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="261:14">break;</break>

    <case pos:start="263:5" pos:end="263:17">case <expr pos:start="263:10" pos:end="263:16"><name pos:start="263:10" pos:end="263:16">OPC_LUI</name></expr>:</case>

        <expr_stmt pos:start="265:9" pos:end="265:20"><expr pos:start="265:9" pos:end="265:19"><name pos:start="265:9" pos:end="265:11">opn</name> <operator pos:start="265:13" pos:end="265:13">=</operator> <literal type="string" pos:start="265:15" pos:end="265:19">"lui"</literal></expr>;</expr_stmt>

        <break pos:start="267:9" pos:end="267:14">break;</break>

    <case pos:start="269:5" pos:end="269:17">case <expr pos:start="269:10" pos:end="269:16"><name pos:start="269:10" pos:end="269:16">OPC_SLL</name></expr>:</case>

        <expr_stmt pos:start="271:9" pos:end="271:34"><expr pos:start="271:9" pos:end="271:33"><call pos:start="271:9" pos:end="271:33"><name pos:start="271:9" pos:end="271:25">tcg_gen_ext32u_tl</name><argument_list pos:start="271:26" pos:end="271:33">(<argument pos:start="271:27" pos:end="271:28"><expr pos:start="271:27" pos:end="271:28"><name pos:start="271:27" pos:end="271:28">t0</name></expr></argument>, <argument pos:start="271:31" pos:end="271:32"><expr pos:start="271:31" pos:end="271:32"><name pos:start="271:31" pos:end="271:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:38"><expr pos:start="273:9" pos:end="273:37"><call pos:start="273:9" pos:end="273:37"><name pos:start="273:9" pos:end="273:23">tcg_gen_shli_tl</name><argument_list pos:start="273:24" pos:end="273:37">(<argument pos:start="273:25" pos:end="273:26"><expr pos:start="273:25" pos:end="273:26"><name pos:start="273:25" pos:end="273:26">t0</name></expr></argument>, <argument pos:start="273:29" pos:end="273:30"><expr pos:start="273:29" pos:end="273:30"><name pos:start="273:29" pos:end="273:30">t0</name></expr></argument>, <argument pos:start="273:33" pos:end="273:36"><expr pos:start="273:33" pos:end="273:36"><name pos:start="273:33" pos:end="273:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="275:9" pos:end="275:34"><expr pos:start="275:9" pos:end="275:33"><call pos:start="275:9" pos:end="275:33"><name pos:start="275:9" pos:end="275:25">tcg_gen_ext32s_tl</name><argument_list pos:start="275:26" pos:end="275:33">(<argument pos:start="275:27" pos:end="275:28"><expr pos:start="275:27" pos:end="275:28"><name pos:start="275:27" pos:end="275:28">t0</name></expr></argument>, <argument pos:start="275:31" pos:end="275:32"><expr pos:start="275:31" pos:end="275:32"><name pos:start="275:31" pos:end="275:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="277:9" pos:end="277:20"><expr pos:start="277:9" pos:end="277:19"><name pos:start="277:9" pos:end="277:11">opn</name> <operator pos:start="277:13" pos:end="277:13">=</operator> <literal type="string" pos:start="277:15" pos:end="277:19">"sll"</literal></expr>;</expr_stmt>

        <break pos:start="279:9" pos:end="279:14">break;</break>

    <case pos:start="281:5" pos:end="281:17">case <expr pos:start="281:10" pos:end="281:16"><name pos:start="281:10" pos:end="281:16">OPC_SRA</name></expr>:</case>

        <expr_stmt pos:start="283:9" pos:end="283:34"><expr pos:start="283:9" pos:end="283:33"><call pos:start="283:9" pos:end="283:33"><name pos:start="283:9" pos:end="283:25">tcg_gen_ext32s_tl</name><argument_list pos:start="283:26" pos:end="283:33">(<argument pos:start="283:27" pos:end="283:28"><expr pos:start="283:27" pos:end="283:28"><name pos:start="283:27" pos:end="283:28">t0</name></expr></argument>, <argument pos:start="283:31" pos:end="283:32"><expr pos:start="283:31" pos:end="283:32"><name pos:start="283:31" pos:end="283:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="285:9" pos:end="285:38"><expr pos:start="285:9" pos:end="285:37"><call pos:start="285:9" pos:end="285:37"><name pos:start="285:9" pos:end="285:23">tcg_gen_sari_tl</name><argument_list pos:start="285:24" pos:end="285:37">(<argument pos:start="285:25" pos:end="285:26"><expr pos:start="285:25" pos:end="285:26"><name pos:start="285:25" pos:end="285:26">t0</name></expr></argument>, <argument pos:start="285:29" pos:end="285:30"><expr pos:start="285:29" pos:end="285:30"><name pos:start="285:29" pos:end="285:30">t0</name></expr></argument>, <argument pos:start="285:33" pos:end="285:36"><expr pos:start="285:33" pos:end="285:36"><name pos:start="285:33" pos:end="285:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="287:9" pos:end="287:34"><expr pos:start="287:9" pos:end="287:33"><call pos:start="287:9" pos:end="287:33"><name pos:start="287:9" pos:end="287:25">tcg_gen_ext32s_tl</name><argument_list pos:start="287:26" pos:end="287:33">(<argument pos:start="287:27" pos:end="287:28"><expr pos:start="287:27" pos:end="287:28"><name pos:start="287:27" pos:end="287:28">t0</name></expr></argument>, <argument pos:start="287:31" pos:end="287:32"><expr pos:start="287:31" pos:end="287:32"><name pos:start="287:31" pos:end="287:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="289:9" pos:end="289:20"><expr pos:start="289:9" pos:end="289:19"><name pos:start="289:9" pos:end="289:11">opn</name> <operator pos:start="289:13" pos:end="289:13">=</operator> <literal type="string" pos:start="289:15" pos:end="289:19">"sra"</literal></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>

    <case pos:start="293:5" pos:end="293:17">case <expr pos:start="293:10" pos:end="293:16"><name pos:start="293:10" pos:end="293:16">OPC_SRL</name></expr>:</case>

        <switch pos:start="295:9" pos:end="355:9">switch <condition pos:start="295:16" pos:end="295:43">(<expr pos:start="295:17" pos:end="295:42"><operator pos:start="295:17" pos:end="295:17">(</operator><name pos:start="295:18" pos:end="295:28"><name pos:start="295:18" pos:end="295:20">ctx</name><operator pos:start="295:21" pos:end="295:22">-&gt;</operator><name pos:start="295:23" pos:end="295:28">opcode</name></name> <operator pos:start="295:30" pos:end="295:31">&gt;&gt;</operator> <literal type="number" pos:start="295:33" pos:end="295:34">21</literal><operator pos:start="295:35" pos:end="295:35">)</operator> <operator pos:start="295:37" pos:end="295:37">&amp;</operator> <literal type="number" pos:start="295:39" pos:end="295:42">0x1f</literal></expr>)</condition> <block pos:start="295:45" pos:end="355:9">{<block_content pos:start="297:9" pos:end="353:18">

        <case pos:start="297:9" pos:end="297:15">case <expr pos:start="297:14" pos:end="297:14"><literal type="number" pos:start="297:14" pos:end="297:14">0</literal></expr>:</case>

            <expr_stmt pos:start="299:13" pos:end="299:38"><expr pos:start="299:13" pos:end="299:37"><call pos:start="299:13" pos:end="299:37"><name pos:start="299:13" pos:end="299:29">tcg_gen_ext32u_tl</name><argument_list pos:start="299:30" pos:end="299:37">(<argument pos:start="299:31" pos:end="299:32"><expr pos:start="299:31" pos:end="299:32"><name pos:start="299:31" pos:end="299:32">t0</name></expr></argument>, <argument pos:start="299:35" pos:end="299:36"><expr pos:start="299:35" pos:end="299:36"><name pos:start="299:35" pos:end="299:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="301:13" pos:end="301:42"><expr pos:start="301:13" pos:end="301:41"><call pos:start="301:13" pos:end="301:41"><name pos:start="301:13" pos:end="301:27">tcg_gen_shri_tl</name><argument_list pos:start="301:28" pos:end="301:41">(<argument pos:start="301:29" pos:end="301:30"><expr pos:start="301:29" pos:end="301:30"><name pos:start="301:29" pos:end="301:30">t0</name></expr></argument>, <argument pos:start="301:33" pos:end="301:34"><expr pos:start="301:33" pos:end="301:34"><name pos:start="301:33" pos:end="301:34">t0</name></expr></argument>, <argument pos:start="301:37" pos:end="301:40"><expr pos:start="301:37" pos:end="301:40"><name pos:start="301:37" pos:end="301:40">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="303:13" pos:end="303:38"><expr pos:start="303:13" pos:end="303:37"><call pos:start="303:13" pos:end="303:37"><name pos:start="303:13" pos:end="303:29">tcg_gen_ext32s_tl</name><argument_list pos:start="303:30" pos:end="303:37">(<argument pos:start="303:31" pos:end="303:32"><expr pos:start="303:31" pos:end="303:32"><name pos:start="303:31" pos:end="303:32">t0</name></expr></argument>, <argument pos:start="303:35" pos:end="303:36"><expr pos:start="303:35" pos:end="303:36"><name pos:start="303:35" pos:end="303:36">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="305:13" pos:end="305:24"><expr pos:start="305:13" pos:end="305:23"><name pos:start="305:13" pos:end="305:15">opn</name> <operator pos:start="305:17" pos:end="305:17">=</operator> <literal type="string" pos:start="305:19" pos:end="305:23">"srl"</literal></expr>;</expr_stmt>

            <break pos:start="307:13" pos:end="307:18">break;</break>

        <case pos:start="309:9" pos:end="309:15">case <expr pos:start="309:14" pos:end="309:14"><literal type="number" pos:start="309:14" pos:end="309:14">1</literal></expr>:</case>

            <comment type="block" pos:start="311:13" pos:end="311:55">/* rotr is decoded as srl on non-R2 CPUs */</comment>

            <if_stmt pos:start="313:13" pos:end="343:13"><if pos:start="313:13" pos:end="333:13">if <condition pos:start="313:16" pos:end="313:47">(<expr pos:start="313:17" pos:end="313:46"><name pos:start="313:17" pos:end="313:31"><name pos:start="313:17" pos:end="313:19">env</name><operator pos:start="313:20" pos:end="313:21">-&gt;</operator><name pos:start="313:22" pos:end="313:31">insn_flags</name></name> <operator pos:start="313:33" pos:end="313:33">&amp;</operator> <name pos:start="313:35" pos:end="313:46">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="313:49" pos:end="333:13">{<block_content pos:start="315:17" pos:end="331:29">

                <if_stmt pos:start="315:17" pos:end="329:17"><if pos:start="315:17" pos:end="329:17">if <condition pos:start="315:20" pos:end="315:30">(<expr pos:start="315:21" pos:end="315:29"><name pos:start="315:21" pos:end="315:24">uimm</name> <operator pos:start="315:26" pos:end="315:27">!=</operator> <literal type="number" pos:start="315:29" pos:end="315:29">0</literal></expr>)</condition> <block pos:start="315:32" pos:end="329:17">{<block_content pos:start="317:21" pos:end="327:42">

                    <decl_stmt pos:start="317:21" pos:end="317:61"><decl pos:start="317:21" pos:end="317:60"><type pos:start="317:21" pos:end="317:24"><name pos:start="317:21" pos:end="317:24">TCGv</name></type> <name pos:start="317:26" pos:end="317:31">r_tmp1</name> <init pos:start="317:33" pos:end="317:60">= <expr pos:start="317:35" pos:end="317:60"><call pos:start="317:35" pos:end="317:60"><name pos:start="317:35" pos:end="317:46">tcg_temp_new</name><argument_list pos:start="317:47" pos:end="317:60">(<argument pos:start="317:48" pos:end="317:59"><expr pos:start="317:48" pos:end="317:59"><name pos:start="317:48" pos:end="317:59">TCG_TYPE_I32</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="321:21" pos:end="321:53"><expr pos:start="321:21" pos:end="321:52"><call pos:start="321:21" pos:end="321:52"><name pos:start="321:21" pos:end="321:40">tcg_gen_trunc_tl_i32</name><argument_list pos:start="321:41" pos:end="321:52">(<argument pos:start="321:42" pos:end="321:47"><expr pos:start="321:42" pos:end="321:47"><name pos:start="321:42" pos:end="321:47">r_tmp1</name></expr></argument>, <argument pos:start="321:50" pos:end="321:51"><expr pos:start="321:50" pos:end="321:51"><name pos:start="321:50" pos:end="321:51">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="323:21" pos:end="323:60"><expr pos:start="323:21" pos:end="323:59"><call pos:start="323:21" pos:end="323:59"><name pos:start="323:21" pos:end="323:37">tcg_gen_rotri_i32</name><argument_list pos:start="323:38" pos:end="323:59">(<argument pos:start="323:39" pos:end="323:44"><expr pos:start="323:39" pos:end="323:44"><name pos:start="323:39" pos:end="323:44">r_tmp1</name></expr></argument>, <argument pos:start="323:47" pos:end="323:52"><expr pos:start="323:47" pos:end="323:52"><name pos:start="323:47" pos:end="323:52">r_tmp1</name></expr></argument>, <argument pos:start="323:55" pos:end="323:58"><expr pos:start="323:55" pos:end="323:58"><name pos:start="323:55" pos:end="323:58">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="325:21" pos:end="325:51"><expr pos:start="325:21" pos:end="325:50"><call pos:start="325:21" pos:end="325:50"><name pos:start="325:21" pos:end="325:38">tcg_gen_ext_i32_tl</name><argument_list pos:start="325:39" pos:end="325:50">(<argument pos:start="325:40" pos:end="325:41"><expr pos:start="325:40" pos:end="325:41"><name pos:start="325:40" pos:end="325:41">t0</name></expr></argument>, <argument pos:start="325:44" pos:end="325:49"><expr pos:start="325:44" pos:end="325:49"><name pos:start="325:44" pos:end="325:49">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="327:21" pos:end="327:42"><expr pos:start="327:21" pos:end="327:41"><call pos:start="327:21" pos:end="327:41"><name pos:start="327:21" pos:end="327:33">tcg_temp_free</name><argument_list pos:start="327:34" pos:end="327:41">(<argument pos:start="327:35" pos:end="327:40"><expr pos:start="327:35" pos:end="327:40"><name pos:start="327:35" pos:end="327:40">r_tmp1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="331:17" pos:end="331:29"><expr pos:start="331:17" pos:end="331:28"><name pos:start="331:17" pos:end="331:19">opn</name> <operator pos:start="331:21" pos:end="331:21">=</operator> <literal type="string" pos:start="331:23" pos:end="331:28">"rotr"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="333:15" pos:end="343:13">else <block pos:start="333:20" pos:end="343:13">{<block_content pos:start="335:17" pos:end="341:28">

                <expr_stmt pos:start="335:17" pos:end="335:42"><expr pos:start="335:17" pos:end="335:41"><call pos:start="335:17" pos:end="335:41"><name pos:start="335:17" pos:end="335:33">tcg_gen_ext32u_tl</name><argument_list pos:start="335:34" pos:end="335:41">(<argument pos:start="335:35" pos:end="335:36"><expr pos:start="335:35" pos:end="335:36"><name pos:start="335:35" pos:end="335:36">t0</name></expr></argument>, <argument pos:start="335:39" pos:end="335:40"><expr pos:start="335:39" pos:end="335:40"><name pos:start="335:39" pos:end="335:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="337:17" pos:end="337:46"><expr pos:start="337:17" pos:end="337:45"><call pos:start="337:17" pos:end="337:45"><name pos:start="337:17" pos:end="337:31">tcg_gen_shri_tl</name><argument_list pos:start="337:32" pos:end="337:45">(<argument pos:start="337:33" pos:end="337:34"><expr pos:start="337:33" pos:end="337:34"><name pos:start="337:33" pos:end="337:34">t0</name></expr></argument>, <argument pos:start="337:37" pos:end="337:38"><expr pos:start="337:37" pos:end="337:38"><name pos:start="337:37" pos:end="337:38">t0</name></expr></argument>, <argument pos:start="337:41" pos:end="337:44"><expr pos:start="337:41" pos:end="337:44"><name pos:start="337:41" pos:end="337:44">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:42"><expr pos:start="339:17" pos:end="339:41"><call pos:start="339:17" pos:end="339:41"><name pos:start="339:17" pos:end="339:33">tcg_gen_ext32s_tl</name><argument_list pos:start="339:34" pos:end="339:41">(<argument pos:start="339:35" pos:end="339:36"><expr pos:start="339:35" pos:end="339:36"><name pos:start="339:35" pos:end="339:36">t0</name></expr></argument>, <argument pos:start="339:39" pos:end="339:40"><expr pos:start="339:39" pos:end="339:40"><name pos:start="339:39" pos:end="339:40">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="341:17" pos:end="341:28"><expr pos:start="341:17" pos:end="341:27"><name pos:start="341:17" pos:end="341:19">opn</name> <operator pos:start="341:21" pos:end="341:21">=</operator> <literal type="string" pos:start="341:23" pos:end="341:27">"srl"</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="345:13" pos:end="345:18">break;</break>

        <default pos:start="347:9" pos:end="347:16">default:</default>

            <expr_stmt pos:start="349:13" pos:end="349:43"><expr pos:start="349:13" pos:end="349:42"><call pos:start="349:13" pos:end="349:42"><name pos:start="349:13" pos:end="349:22">MIPS_INVAL</name><argument_list pos:start="349:23" pos:end="349:42">(<argument pos:start="349:24" pos:end="349:41"><expr pos:start="349:24" pos:end="349:41"><literal type="string" pos:start="349:24" pos:end="349:41">"invalid srl flag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="351:13" pos:end="351:45"><expr pos:start="351:13" pos:end="351:44"><call pos:start="351:13" pos:end="351:44"><name pos:start="351:13" pos:end="351:30">generate_exception</name><argument_list pos:start="351:31" pos:end="351:44">(<argument pos:start="351:32" pos:end="351:34"><expr pos:start="351:32" pos:end="351:34"><name pos:start="351:32" pos:end="351:34">ctx</name></expr></argument>, <argument pos:start="351:37" pos:end="351:43"><expr pos:start="351:37" pos:end="351:43"><name pos:start="351:37" pos:end="351:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="353:13" pos:end="353:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="357:9" pos:end="360:0">break;</break>

<cpp:if pos:start="359:1" pos:end="359:26">#<cpp:directive pos:start="359:2" pos:end="359:3">if</cpp:directive> <expr pos:start="359:5" pos:end="359:26"><call pos:start="359:5" pos:end="359:26"><name pos:start="359:5" pos:end="359:11">defined</name><argument_list pos:start="359:12" pos:end="359:26">(<argument pos:start="359:13" pos:end="359:25"><expr pos:start="359:13" pos:end="359:25"><name pos:start="359:13" pos:end="359:25">TARGET_MIPS64</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <case pos:start="361:5" pos:end="361:18">case <expr pos:start="361:10" pos:end="361:17"><name pos:start="361:10" pos:end="361:17">OPC_DSLL</name></expr>:</case>

        <expr_stmt pos:start="363:9" pos:end="363:38"><expr pos:start="363:9" pos:end="363:37"><call pos:start="363:9" pos:end="363:37"><name pos:start="363:9" pos:end="363:23">tcg_gen_shli_tl</name><argument_list pos:start="363:24" pos:end="363:37">(<argument pos:start="363:25" pos:end="363:26"><expr pos:start="363:25" pos:end="363:26"><name pos:start="363:25" pos:end="363:26">t0</name></expr></argument>, <argument pos:start="363:29" pos:end="363:30"><expr pos:start="363:29" pos:end="363:30"><name pos:start="363:29" pos:end="363:30">t0</name></expr></argument>, <argument pos:start="363:33" pos:end="363:36"><expr pos:start="363:33" pos:end="363:36"><name pos:start="363:33" pos:end="363:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:21"><expr pos:start="365:9" pos:end="365:20"><name pos:start="365:9" pos:end="365:11">opn</name> <operator pos:start="365:13" pos:end="365:13">=</operator> <literal type="string" pos:start="365:15" pos:end="365:20">"dsll"</literal></expr>;</expr_stmt>

        <break pos:start="367:9" pos:end="367:14">break;</break>

    <case pos:start="369:5" pos:end="369:18">case <expr pos:start="369:10" pos:end="369:17"><name pos:start="369:10" pos:end="369:17">OPC_DSRA</name></expr>:</case>

        <expr_stmt pos:start="371:9" pos:end="371:38"><expr pos:start="371:9" pos:end="371:37"><call pos:start="371:9" pos:end="371:37"><name pos:start="371:9" pos:end="371:23">tcg_gen_sari_tl</name><argument_list pos:start="371:24" pos:end="371:37">(<argument pos:start="371:25" pos:end="371:26"><expr pos:start="371:25" pos:end="371:26"><name pos:start="371:25" pos:end="371:26">t0</name></expr></argument>, <argument pos:start="371:29" pos:end="371:30"><expr pos:start="371:29" pos:end="371:30"><name pos:start="371:29" pos:end="371:30">t0</name></expr></argument>, <argument pos:start="371:33" pos:end="371:36"><expr pos:start="371:33" pos:end="371:36"><name pos:start="371:33" pos:end="371:36">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:21"><expr pos:start="373:9" pos:end="373:20"><name pos:start="373:9" pos:end="373:11">opn</name> <operator pos:start="373:13" pos:end="373:13">=</operator> <literal type="string" pos:start="373:15" pos:end="373:20">"dsra"</literal></expr>;</expr_stmt>

        <break pos:start="375:9" pos:end="375:14">break;</break>

    <case pos:start="377:5" pos:end="377:18">case <expr pos:start="377:10" pos:end="377:17"><name pos:start="377:10" pos:end="377:17">OPC_DSRL</name></expr>:</case>

        <switch pos:start="379:9" pos:end="421:9">switch <condition pos:start="379:16" pos:end="379:43">(<expr pos:start="379:17" pos:end="379:42"><operator pos:start="379:17" pos:end="379:17">(</operator><name pos:start="379:18" pos:end="379:28"><name pos:start="379:18" pos:end="379:20">ctx</name><operator pos:start="379:21" pos:end="379:22">-&gt;</operator><name pos:start="379:23" pos:end="379:28">opcode</name></name> <operator pos:start="379:30" pos:end="379:31">&gt;&gt;</operator> <literal type="number" pos:start="379:33" pos:end="379:34">21</literal><operator pos:start="379:35" pos:end="379:35">)</operator> <operator pos:start="379:37" pos:end="379:37">&amp;</operator> <literal type="number" pos:start="379:39" pos:end="379:42">0x1f</literal></expr>)</condition> <block pos:start="379:45" pos:end="421:9">{<block_content pos:start="381:9" pos:end="419:18">

        <case pos:start="381:9" pos:end="381:15">case <expr pos:start="381:14" pos:end="381:14"><literal type="number" pos:start="381:14" pos:end="381:14">0</literal></expr>:</case>

            <expr_stmt pos:start="383:13" pos:end="383:42"><expr pos:start="383:13" pos:end="383:41"><call pos:start="383:13" pos:end="383:41"><name pos:start="383:13" pos:end="383:27">tcg_gen_shri_tl</name><argument_list pos:start="383:28" pos:end="383:41">(<argument pos:start="383:29" pos:end="383:30"><expr pos:start="383:29" pos:end="383:30"><name pos:start="383:29" pos:end="383:30">t0</name></expr></argument>, <argument pos:start="383:33" pos:end="383:34"><expr pos:start="383:33" pos:end="383:34"><name pos:start="383:33" pos:end="383:34">t0</name></expr></argument>, <argument pos:start="383:37" pos:end="383:40"><expr pos:start="383:37" pos:end="383:40"><name pos:start="383:37" pos:end="383:40">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="385:13" pos:end="385:25"><expr pos:start="385:13" pos:end="385:24"><name pos:start="385:13" pos:end="385:15">opn</name> <operator pos:start="385:17" pos:end="385:17">=</operator> <literal type="string" pos:start="385:19" pos:end="385:24">"dsrl"</literal></expr>;</expr_stmt>

            <break pos:start="387:13" pos:end="387:18">break;</break>

        <case pos:start="389:9" pos:end="389:15">case <expr pos:start="389:14" pos:end="389:14"><literal type="number" pos:start="389:14" pos:end="389:14">1</literal></expr>:</case>

            <comment type="block" pos:start="391:13" pos:end="391:57">/* drotr is decoded as dsrl on non-R2 CPUs */</comment>

            <if_stmt pos:start="393:13" pos:end="409:13"><if pos:start="393:13" pos:end="403:13">if <condition pos:start="393:16" pos:end="393:47">(<expr pos:start="393:17" pos:end="393:46"><name pos:start="393:17" pos:end="393:31"><name pos:start="393:17" pos:end="393:19">env</name><operator pos:start="393:20" pos:end="393:21">-&gt;</operator><name pos:start="393:22" pos:end="393:31">insn_flags</name></name> <operator pos:start="393:33" pos:end="393:33">&amp;</operator> <name pos:start="393:35" pos:end="393:46">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="393:49" pos:end="403:13">{<block_content pos:start="395:17" pos:end="401:30">

                <if_stmt pos:start="395:17" pos:end="399:17"><if pos:start="395:17" pos:end="399:17">if <condition pos:start="395:20" pos:end="395:30">(<expr pos:start="395:21" pos:end="395:29"><name pos:start="395:21" pos:end="395:24">uimm</name> <operator pos:start="395:26" pos:end="395:27">!=</operator> <literal type="number" pos:start="395:29" pos:end="395:29">0</literal></expr>)</condition> <block pos:start="395:32" pos:end="399:17">{<block_content pos:start="397:21" pos:end="397:51">

                    <expr_stmt pos:start="397:21" pos:end="397:51"><expr pos:start="397:21" pos:end="397:50"><call pos:start="397:21" pos:end="397:50"><name pos:start="397:21" pos:end="397:36">tcg_gen_rotri_tl</name><argument_list pos:start="397:37" pos:end="397:50">(<argument pos:start="397:38" pos:end="397:39"><expr pos:start="397:38" pos:end="397:39"><name pos:start="397:38" pos:end="397:39">t0</name></expr></argument>, <argument pos:start="397:42" pos:end="397:43"><expr pos:start="397:42" pos:end="397:43"><name pos:start="397:42" pos:end="397:43">t0</name></expr></argument>, <argument pos:start="397:46" pos:end="397:49"><expr pos:start="397:46" pos:end="397:49"><name pos:start="397:46" pos:end="397:49">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:30"><expr pos:start="401:17" pos:end="401:29"><name pos:start="401:17" pos:end="401:19">opn</name> <operator pos:start="401:21" pos:end="401:21">=</operator> <literal type="string" pos:start="401:23" pos:end="401:29">"drotr"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="403:15" pos:end="409:13">else <block pos:start="403:20" pos:end="409:13">{<block_content pos:start="405:17" pos:end="407:29">

                <expr_stmt pos:start="405:17" pos:end="405:46"><expr pos:start="405:17" pos:end="405:45"><call pos:start="405:17" pos:end="405:45"><name pos:start="405:17" pos:end="405:31">tcg_gen_shri_tl</name><argument_list pos:start="405:32" pos:end="405:45">(<argument pos:start="405:33" pos:end="405:34"><expr pos:start="405:33" pos:end="405:34"><name pos:start="405:33" pos:end="405:34">t0</name></expr></argument>, <argument pos:start="405:37" pos:end="405:38"><expr pos:start="405:37" pos:end="405:38"><name pos:start="405:37" pos:end="405:38">t0</name></expr></argument>, <argument pos:start="405:41" pos:end="405:44"><expr pos:start="405:41" pos:end="405:44"><name pos:start="405:41" pos:end="405:44">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:29"><expr pos:start="407:17" pos:end="407:28"><name pos:start="407:17" pos:end="407:19">opn</name> <operator pos:start="407:21" pos:end="407:21">=</operator> <literal type="string" pos:start="407:23" pos:end="407:28">"dsrl"</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="411:13" pos:end="411:18">break;</break>

        <default pos:start="413:9" pos:end="413:16">default:</default>

            <expr_stmt pos:start="415:13" pos:end="415:44"><expr pos:start="415:13" pos:end="415:43"><call pos:start="415:13" pos:end="415:43"><name pos:start="415:13" pos:end="415:22">MIPS_INVAL</name><argument_list pos:start="415:23" pos:end="415:43">(<argument pos:start="415:24" pos:end="415:42"><expr pos:start="415:24" pos:end="415:42"><literal type="string" pos:start="415:24" pos:end="415:42">"invalid dsrl flag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="417:13" pos:end="417:45"><expr pos:start="417:13" pos:end="417:44"><call pos:start="417:13" pos:end="417:44"><name pos:start="417:13" pos:end="417:30">generate_exception</name><argument_list pos:start="417:31" pos:end="417:44">(<argument pos:start="417:32" pos:end="417:34"><expr pos:start="417:32" pos:end="417:34"><name pos:start="417:32" pos:end="417:34">ctx</name></expr></argument>, <argument pos:start="417:37" pos:end="417:43"><expr pos:start="417:37" pos:end="417:43"><name pos:start="417:37" pos:end="417:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="419:13" pos:end="419:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="423:9" pos:end="423:14">break;</break>

    <case pos:start="425:5" pos:end="425:20">case <expr pos:start="425:10" pos:end="425:19"><name pos:start="425:10" pos:end="425:19">OPC_DSLL32</name></expr>:</case>

        <expr_stmt pos:start="427:9" pos:end="427:43"><expr pos:start="427:9" pos:end="427:42"><call pos:start="427:9" pos:end="427:42"><name pos:start="427:9" pos:end="427:23">tcg_gen_shli_tl</name><argument_list pos:start="427:24" pos:end="427:42">(<argument pos:start="427:25" pos:end="427:26"><expr pos:start="427:25" pos:end="427:26"><name pos:start="427:25" pos:end="427:26">t0</name></expr></argument>, <argument pos:start="427:29" pos:end="427:30"><expr pos:start="427:29" pos:end="427:30"><name pos:start="427:29" pos:end="427:30">t0</name></expr></argument>, <argument pos:start="427:33" pos:end="427:41"><expr pos:start="427:33" pos:end="427:41"><name pos:start="427:33" pos:end="427:36">uimm</name> <operator pos:start="427:38" pos:end="427:38">+</operator> <literal type="number" pos:start="427:40" pos:end="427:41">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="429:9" pos:end="429:23"><expr pos:start="429:9" pos:end="429:22"><name pos:start="429:9" pos:end="429:11">opn</name> <operator pos:start="429:13" pos:end="429:13">=</operator> <literal type="string" pos:start="429:15" pos:end="429:22">"dsll32"</literal></expr>;</expr_stmt>

        <break pos:start="431:9" pos:end="431:14">break;</break>

    <case pos:start="433:5" pos:end="433:20">case <expr pos:start="433:10" pos:end="433:19"><name pos:start="433:10" pos:end="433:19">OPC_DSRA32</name></expr>:</case>

        <expr_stmt pos:start="435:9" pos:end="435:43"><expr pos:start="435:9" pos:end="435:42"><call pos:start="435:9" pos:end="435:42"><name pos:start="435:9" pos:end="435:23">tcg_gen_sari_tl</name><argument_list pos:start="435:24" pos:end="435:42">(<argument pos:start="435:25" pos:end="435:26"><expr pos:start="435:25" pos:end="435:26"><name pos:start="435:25" pos:end="435:26">t0</name></expr></argument>, <argument pos:start="435:29" pos:end="435:30"><expr pos:start="435:29" pos:end="435:30"><name pos:start="435:29" pos:end="435:30">t0</name></expr></argument>, <argument pos:start="435:33" pos:end="435:41"><expr pos:start="435:33" pos:end="435:41"><name pos:start="435:33" pos:end="435:36">uimm</name> <operator pos:start="435:38" pos:end="435:38">+</operator> <literal type="number" pos:start="435:40" pos:end="435:41">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="437:9" pos:end="437:23"><expr pos:start="437:9" pos:end="437:22"><name pos:start="437:9" pos:end="437:11">opn</name> <operator pos:start="437:13" pos:end="437:13">=</operator> <literal type="string" pos:start="437:15" pos:end="437:22">"dsra32"</literal></expr>;</expr_stmt>

        <break pos:start="439:9" pos:end="439:14">break;</break>

    <case pos:start="441:5" pos:end="441:20">case <expr pos:start="441:10" pos:end="441:19"><name pos:start="441:10" pos:end="441:19">OPC_DSRL32</name></expr>:</case>

        <switch pos:start="443:9" pos:end="481:9">switch <condition pos:start="443:16" pos:end="443:43">(<expr pos:start="443:17" pos:end="443:42"><operator pos:start="443:17" pos:end="443:17">(</operator><name pos:start="443:18" pos:end="443:28"><name pos:start="443:18" pos:end="443:20">ctx</name><operator pos:start="443:21" pos:end="443:22">-&gt;</operator><name pos:start="443:23" pos:end="443:28">opcode</name></name> <operator pos:start="443:30" pos:end="443:31">&gt;&gt;</operator> <literal type="number" pos:start="443:33" pos:end="443:34">21</literal><operator pos:start="443:35" pos:end="443:35">)</operator> <operator pos:start="443:37" pos:end="443:37">&amp;</operator> <literal type="number" pos:start="443:39" pos:end="443:42">0x1f</literal></expr>)</condition> <block pos:start="443:45" pos:end="481:9">{<block_content pos:start="445:9" pos:end="479:18">

        <case pos:start="445:9" pos:end="445:15">case <expr pos:start="445:14" pos:end="445:14"><literal type="number" pos:start="445:14" pos:end="445:14">0</literal></expr>:</case>

            <expr_stmt pos:start="447:13" pos:end="447:47"><expr pos:start="447:13" pos:end="447:46"><call pos:start="447:13" pos:end="447:46"><name pos:start="447:13" pos:end="447:27">tcg_gen_shri_tl</name><argument_list pos:start="447:28" pos:end="447:46">(<argument pos:start="447:29" pos:end="447:30"><expr pos:start="447:29" pos:end="447:30"><name pos:start="447:29" pos:end="447:30">t0</name></expr></argument>, <argument pos:start="447:33" pos:end="447:34"><expr pos:start="447:33" pos:end="447:34"><name pos:start="447:33" pos:end="447:34">t0</name></expr></argument>, <argument pos:start="447:37" pos:end="447:45"><expr pos:start="447:37" pos:end="447:45"><name pos:start="447:37" pos:end="447:40">uimm</name> <operator pos:start="447:42" pos:end="447:42">+</operator> <literal type="number" pos:start="447:44" pos:end="447:45">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="449:13" pos:end="449:27"><expr pos:start="449:13" pos:end="449:26"><name pos:start="449:13" pos:end="449:15">opn</name> <operator pos:start="449:17" pos:end="449:17">=</operator> <literal type="string" pos:start="449:19" pos:end="449:26">"dsrl32"</literal></expr>;</expr_stmt>

            <break pos:start="451:13" pos:end="451:18">break;</break>

        <case pos:start="453:9" pos:end="453:15">case <expr pos:start="453:14" pos:end="453:14"><literal type="number" pos:start="453:14" pos:end="453:14">1</literal></expr>:</case>

            <comment type="block" pos:start="455:13" pos:end="455:61">/* drotr32 is decoded as dsrl32 on non-R2 CPUs */</comment>

            <if_stmt pos:start="457:13" pos:end="469:13"><if pos:start="457:13" pos:end="463:13">if <condition pos:start="457:16" pos:end="457:47">(<expr pos:start="457:17" pos:end="457:46"><name pos:start="457:17" pos:end="457:31"><name pos:start="457:17" pos:end="457:19">env</name><operator pos:start="457:20" pos:end="457:21">-&gt;</operator><name pos:start="457:22" pos:end="457:31">insn_flags</name></name> <operator pos:start="457:33" pos:end="457:33">&amp;</operator> <name pos:start="457:35" pos:end="457:46">ISA_MIPS32R2</name></expr>)</condition> <block pos:start="457:49" pos:end="463:13">{<block_content pos:start="459:17" pos:end="461:32">

                <expr_stmt pos:start="459:17" pos:end="459:52"><expr pos:start="459:17" pos:end="459:51"><call pos:start="459:17" pos:end="459:51"><name pos:start="459:17" pos:end="459:32">tcg_gen_rotri_tl</name><argument_list pos:start="459:33" pos:end="459:51">(<argument pos:start="459:34" pos:end="459:35"><expr pos:start="459:34" pos:end="459:35"><name pos:start="459:34" pos:end="459:35">t0</name></expr></argument>, <argument pos:start="459:38" pos:end="459:39"><expr pos:start="459:38" pos:end="459:39"><name pos:start="459:38" pos:end="459:39">t0</name></expr></argument>, <argument pos:start="459:42" pos:end="459:50"><expr pos:start="459:42" pos:end="459:50"><name pos:start="459:42" pos:end="459:45">uimm</name> <operator pos:start="459:47" pos:end="459:47">+</operator> <literal type="number" pos:start="459:49" pos:end="459:50">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="461:17" pos:end="461:32"><expr pos:start="461:17" pos:end="461:31"><name pos:start="461:17" pos:end="461:19">opn</name> <operator pos:start="461:21" pos:end="461:21">=</operator> <literal type="string" pos:start="461:23" pos:end="461:31">"drotr32"</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="463:15" pos:end="469:13">else <block pos:start="463:20" pos:end="469:13">{<block_content pos:start="465:17" pos:end="467:31">

                <expr_stmt pos:start="465:17" pos:end="465:51"><expr pos:start="465:17" pos:end="465:50"><call pos:start="465:17" pos:end="465:50"><name pos:start="465:17" pos:end="465:31">tcg_gen_shri_tl</name><argument_list pos:start="465:32" pos:end="465:50">(<argument pos:start="465:33" pos:end="465:34"><expr pos:start="465:33" pos:end="465:34"><name pos:start="465:33" pos:end="465:34">t0</name></expr></argument>, <argument pos:start="465:37" pos:end="465:38"><expr pos:start="465:37" pos:end="465:38"><name pos:start="465:37" pos:end="465:38">t0</name></expr></argument>, <argument pos:start="465:41" pos:end="465:49"><expr pos:start="465:41" pos:end="465:49"><name pos:start="465:41" pos:end="465:44">uimm</name> <operator pos:start="465:46" pos:end="465:46">+</operator> <literal type="number" pos:start="465:48" pos:end="465:49">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="467:17" pos:end="467:31"><expr pos:start="467:17" pos:end="467:30"><name pos:start="467:17" pos:end="467:19">opn</name> <operator pos:start="467:21" pos:end="467:21">=</operator> <literal type="string" pos:start="467:23" pos:end="467:30">"dsrl32"</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="471:13" pos:end="471:18">break;</break>

        <default pos:start="473:9" pos:end="473:16">default:</default>

            <expr_stmt pos:start="475:13" pos:end="475:46"><expr pos:start="475:13" pos:end="475:45"><call pos:start="475:13" pos:end="475:45"><name pos:start="475:13" pos:end="475:22">MIPS_INVAL</name><argument_list pos:start="475:23" pos:end="475:45">(<argument pos:start="475:24" pos:end="475:44"><expr pos:start="475:24" pos:end="475:44"><literal type="string" pos:start="475:24" pos:end="475:44">"invalid dsrl32 flag"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="477:13" pos:end="477:45"><expr pos:start="477:13" pos:end="477:44"><call pos:start="477:13" pos:end="477:44"><name pos:start="477:13" pos:end="477:30">generate_exception</name><argument_list pos:start="477:31" pos:end="477:44">(<argument pos:start="477:32" pos:end="477:34"><expr pos:start="477:32" pos:end="477:34"><name pos:start="477:32" pos:end="477:34">ctx</name></expr></argument>, <argument pos:start="477:37" pos:end="477:43"><expr pos:start="477:37" pos:end="477:43"><name pos:start="477:37" pos:end="477:43">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="479:13" pos:end="479:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="483:9" pos:end="486:0">break;</break>

<cpp:endif pos:start="485:1" pos:end="485:6">#<cpp:directive pos:start="485:2" pos:end="485:6">endif</cpp:directive></cpp:endif>

    <default pos:start="487:5" pos:end="487:12">default:</default>

        <expr_stmt pos:start="489:9" pos:end="489:24"><expr pos:start="489:9" pos:end="489:23"><call pos:start="489:9" pos:end="489:23"><name pos:start="489:9" pos:end="489:18">MIPS_INVAL</name><argument_list pos:start="489:19" pos:end="489:23">(<argument pos:start="489:20" pos:end="489:22"><expr pos:start="489:20" pos:end="489:22"><name pos:start="489:20" pos:end="489:22">opn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="491:9" pos:end="491:41"><expr pos:start="491:9" pos:end="491:40"><call pos:start="491:9" pos:end="491:40"><name pos:start="491:9" pos:end="491:26">generate_exception</name><argument_list pos:start="491:27" pos:end="491:40">(<argument pos:start="491:28" pos:end="491:30"><expr pos:start="491:28" pos:end="491:30"><name pos:start="491:28" pos:end="491:30">ctx</name></expr></argument>, <argument pos:start="491:33" pos:end="491:39"><expr pos:start="491:33" pos:end="491:39"><name pos:start="491:33" pos:end="491:39">EXCP_RI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="493:9" pos:end="493:17">goto <name pos:start="493:14" pos:end="493:16">out</name>;</goto>

    </block_content>}</block></switch>

    <expr_stmt pos:start="497:5" pos:end="497:26"><expr pos:start="497:5" pos:end="497:25"><call pos:start="497:5" pos:end="497:25"><name pos:start="497:5" pos:end="497:17">gen_store_gpr</name><argument_list pos:start="497:18" pos:end="497:25">(<argument pos:start="497:19" pos:end="497:20"><expr pos:start="497:19" pos:end="497:20"><name pos:start="497:19" pos:end="497:20">t0</name></expr></argument>, <argument pos:start="497:23" pos:end="497:24"><expr pos:start="497:23" pos:end="497:24"><name pos:start="497:23" pos:end="497:24">rt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="499:5" pos:end="499:83"><expr pos:start="499:5" pos:end="499:82"><call pos:start="499:5" pos:end="499:82"><name pos:start="499:5" pos:end="499:14">MIPS_DEBUG</name><argument_list pos:start="499:15" pos:end="499:82">(<argument pos:start="499:16" pos:end="499:42"><expr pos:start="499:16" pos:end="499:42"><literal type="string" pos:start="499:16" pos:end="499:28">"%s %s, %s, "</literal> <name pos:start="499:30" pos:end="499:42">TARGET_FMT_lx</name></expr></argument>, <argument pos:start="499:45" pos:end="499:47"><expr pos:start="499:45" pos:end="499:47"><name pos:start="499:45" pos:end="499:47">opn</name></expr></argument>, <argument pos:start="499:50" pos:end="499:61"><expr pos:start="499:50" pos:end="499:61"><name pos:start="499:50" pos:end="499:61"><name pos:start="499:50" pos:end="499:57">regnames</name><index pos:start="499:58" pos:end="499:61">[<expr pos:start="499:59" pos:end="499:60"><name pos:start="499:59" pos:end="499:60">rt</name></expr>]</index></name></expr></argument>, <argument pos:start="499:64" pos:end="499:75"><expr pos:start="499:64" pos:end="499:75"><name pos:start="499:64" pos:end="499:75"><name pos:start="499:64" pos:end="499:71">regnames</name><index pos:start="499:72" pos:end="499:75">[<expr pos:start="499:73" pos:end="499:74"><name pos:start="499:73" pos:end="499:74">rs</name></expr>]</index></name></expr></argument>, <argument pos:start="499:78" pos:end="499:81"><expr pos:start="499:78" pos:end="499:81"><name pos:start="499:78" pos:end="499:81">uimm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

 <label pos:start="501:2" pos:end="501:5"><name pos:start="501:2" pos:end="501:4">out</name>:</label>

    <expr_stmt pos:start="503:5" pos:end="503:22"><expr pos:start="503:5" pos:end="503:21"><call pos:start="503:5" pos:end="503:21"><name pos:start="503:5" pos:end="503:17">tcg_temp_free</name><argument_list pos:start="503:18" pos:end="503:21">(<argument pos:start="503:19" pos:end="503:20"><expr pos:start="503:19" pos:end="503:20"><name pos:start="503:19" pos:end="503:20">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
