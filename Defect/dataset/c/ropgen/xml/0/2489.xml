<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2489.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">cs_mem_write</name><parameter_list pos:start="1:25" pos:end="3:53">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:62"><decl pos:start="1:40" pos:end="1:62"><type pos:start="1:40" pos:end="1:62"><name pos:start="1:40" pos:end="1:57">target_phys_addr_t</name></type> <name pos:start="1:59" pos:end="1:62">addr</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:37"><decl pos:start="3:26" pos:end="3:37"><type pos:start="3:26" pos:end="3:37"><name pos:start="3:26" pos:end="3:33">uint64_t</name></type> <name pos:start="3:35" pos:end="3:37">val</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:52"><decl pos:start="3:40" pos:end="3:52"><type pos:start="3:40" pos:end="3:52"><name pos:start="3:40" pos:end="3:47">unsigned</name></type> <name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:5">

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">CSState</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:14">s</name> <init pos:start="7:16" pos:end="7:23">= <expr pos:start="7:18" pos:end="7:23"><name pos:start="7:18" pos:end="7:23">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">saddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:22"><expr pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:9">saddr</name> <operator pos:start="13:11" pos:end="13:11">=</operator> <name pos:start="13:13" pos:end="13:16">addr</name> <operator pos:start="13:18" pos:end="13:19">&gt;&gt;</operator> <literal type="number" pos:start="13:21" pos:end="13:21">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:60"><expr pos:start="15:5" pos:end="15:59"><call pos:start="15:5" pos:end="15:59"><name pos:start="15:5" pos:end="15:31">trace_cs4231_mem_writel_reg</name><argument_list pos:start="15:32" pos:end="15:59">(<argument pos:start="15:33" pos:end="15:37"><expr pos:start="15:33" pos:end="15:37"><name pos:start="15:33" pos:end="15:37">saddr</name></expr></argument>, <argument pos:start="15:40" pos:end="15:53"><expr pos:start="15:40" pos:end="15:53"><name pos:start="15:40" pos:end="15:53"><name pos:start="15:40" pos:end="15:40">s</name><operator pos:start="15:41" pos:end="15:42">-&gt;</operator><name pos:start="15:43" pos:end="15:46">regs</name><index pos:start="15:47" pos:end="15:53">[<expr pos:start="15:48" pos:end="15:52"><name pos:start="15:48" pos:end="15:52">saddr</name></expr>]</index></name></expr></argument>, <argument pos:start="15:56" pos:end="15:58"><expr pos:start="15:56" pos:end="15:58"><name pos:start="15:56" pos:end="15:58">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <switch pos:start="17:5" pos:end="75:5">switch <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><name pos:start="17:13" pos:end="17:17">saddr</name></expr>)</condition> <block pos:start="17:20" pos:end="75:5">{<block_content pos:start="19:5" pos:end="73:14">

    <case pos:start="19:5" pos:end="19:11">case <expr pos:start="19:10" pos:end="19:10"><literal type="number" pos:start="19:10" pos:end="19:10">1</literal></expr>:</case>

        <expr_stmt pos:start="21:9" pos:end="21:74"><expr pos:start="21:9" pos:end="21:73"><call pos:start="21:9" pos:end="21:73"><name pos:start="21:9" pos:end="21:36">trace_cs4231_mem_writel_dreg</name><argument_list pos:start="21:37" pos:end="21:73">(<argument pos:start="21:38" pos:end="21:46"><expr pos:start="21:38" pos:end="21:46"><call pos:start="21:38" pos:end="21:46"><name pos:start="21:38" pos:end="21:43">CS_RAP</name><argument_list pos:start="21:44" pos:end="21:46">(<argument pos:start="21:45" pos:end="21:45"><expr pos:start="21:45" pos:end="21:45"><name pos:start="21:45" pos:end="21:45">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:49" pos:end="21:67"><expr pos:start="21:49" pos:end="21:67"><name pos:start="21:49" pos:end="21:67"><name pos:start="21:49" pos:end="21:49">s</name><operator pos:start="21:50" pos:end="21:51">-&gt;</operator><name pos:start="21:52" pos:end="21:56">dregs</name><index pos:start="21:57" pos:end="21:67">[<expr pos:start="21:58" pos:end="21:66"><call pos:start="21:58" pos:end="21:66"><name pos:start="21:58" pos:end="21:63">CS_RAP</name><argument_list pos:start="21:64" pos:end="21:66">(<argument pos:start="21:65" pos:end="21:65"><expr pos:start="21:65" pos:end="21:65"><name pos:start="21:65" pos:end="21:65">s</name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>, <argument pos:start="21:70" pos:end="21:72"><expr pos:start="21:70" pos:end="21:72"><name pos:start="21:70" pos:end="21:72">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="23:9" pos:end="47:9">switch<condition pos:start="23:15" pos:end="23:25">(<expr pos:start="23:16" pos:end="23:24"><call pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:21">CS_RAP</name><argument_list pos:start="23:22" pos:end="23:24">(<argument pos:start="23:23" pos:end="23:23"><expr pos:start="23:23" pos:end="23:23"><name pos:start="23:23" pos:end="23:23">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:27" pos:end="47:9">{<block_content pos:start="25:9" pos:end="45:18">

        <case pos:start="25:9" pos:end="25:16">case <expr pos:start="25:14" pos:end="25:15"><literal type="number" pos:start="25:14" pos:end="25:15">11</literal></expr>:</case>

        <case pos:start="27:9" pos:end="27:16">case <expr pos:start="27:14" pos:end="27:15"><literal type="number" pos:start="27:14" pos:end="27:15">25</literal></expr>:</case> <comment type="line" pos:start="27:18" pos:end="27:29">// Read only</comment>

            <break pos:start="29:13" pos:end="29:18">break;</break>

        <case pos:start="31:9" pos:end="31:16">case <expr pos:start="31:14" pos:end="31:15"><literal type="number" pos:start="31:14" pos:end="31:15">12</literal></expr>:</case>

            <expr_stmt pos:start="33:13" pos:end="33:24"><expr pos:start="33:13" pos:end="33:23"><name pos:start="33:13" pos:end="33:15">val</name> <operator pos:start="33:17" pos:end="33:18">&amp;=</operator> <literal type="number" pos:start="33:20" pos:end="33:23">0x40</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:15">val</name> <operator pos:start="35:17" pos:end="35:18">|=</operator> <name pos:start="35:20" pos:end="35:29">CS_CDC_VER</name></expr>;</expr_stmt> <comment type="line" pos:start="35:32" pos:end="35:47">// Codec version</comment>

            <expr_stmt pos:start="37:13" pos:end="37:38"><expr pos:start="37:13" pos:end="37:37"><name pos:start="37:13" pos:end="37:31"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:20">dregs</name><index pos:start="37:21" pos:end="37:31">[<expr pos:start="37:22" pos:end="37:30"><call pos:start="37:22" pos:end="37:30"><name pos:start="37:22" pos:end="37:27">CS_RAP</name><argument_list pos:start="37:28" pos:end="37:30">(<argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><name pos:start="37:29" pos:end="37:29">s</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="37:33" pos:end="37:33">=</operator> <name pos:start="37:35" pos:end="37:37">val</name></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <default pos:start="41:9" pos:end="41:16">default:</default>

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:20">dregs</name><index pos:start="43:21" pos:end="43:31">[<expr pos:start="43:22" pos:end="43:30"><call pos:start="43:22" pos:end="43:30"><name pos:start="43:22" pos:end="43:27">CS_RAP</name><argument_list pos:start="43:28" pos:end="43:30">(<argument pos:start="43:29" pos:end="43:29"><expr pos:start="43:29" pos:end="43:29"><name pos:start="43:29" pos:end="43:29">s</name></expr></argument>)</argument_list></call></expr>]</index></name> <operator pos:start="43:33" pos:end="43:33">=</operator> <name pos:start="43:35" pos:end="43:37">val</name></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <case pos:start="51:5" pos:end="51:11">case <expr pos:start="51:10" pos:end="51:10"><literal type="number" pos:start="51:10" pos:end="51:10">2</literal></expr>:</case> <comment type="line" pos:start="51:13" pos:end="51:24">// Read only</comment>

        <break pos:start="53:9" pos:end="53:14">break;</break>

    <case pos:start="55:5" pos:end="55:11">case <expr pos:start="55:10" pos:end="55:10"><literal type="number" pos:start="55:10" pos:end="55:10">4</literal></expr>:</case>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:20">(<expr pos:start="57:13" pos:end="57:19"><name pos:start="57:13" pos:end="57:15">val</name> <operator pos:start="57:17" pos:end="57:17">&amp;</operator> <literal type="number" pos:start="57:19" pos:end="57:19">1</literal></expr>)</condition> <block pos:start="57:22" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:38">

            <expr_stmt pos:start="59:13" pos:end="59:38"><expr pos:start="59:13" pos:end="59:37"><call pos:start="59:13" pos:end="59:37"><name pos:start="59:13" pos:end="59:20">cs_reset</name><argument_list pos:start="59:21" pos:end="59:37">(<argument pos:start="59:22" pos:end="59:36"><expr pos:start="59:22" pos:end="59:36"><operator pos:start="59:22" pos:end="59:22">&amp;</operator><name pos:start="59:23" pos:end="59:36"><name pos:start="59:23" pos:end="59:23">s</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:31">busdev</name><operator pos:start="59:32" pos:end="59:32">.</operator><name pos:start="59:33" pos:end="59:36">qdev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:20"><expr pos:start="63:9" pos:end="63:19"><name pos:start="63:9" pos:end="63:11">val</name> <operator pos:start="63:13" pos:end="63:14">&amp;=</operator> <literal type="number" pos:start="63:16" pos:end="63:19">0x7f</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:29"><expr pos:start="65:9" pos:end="65:28"><name pos:start="65:9" pos:end="65:22"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:15">regs</name><index pos:start="65:16" pos:end="65:22">[<expr pos:start="65:17" pos:end="65:21"><name pos:start="65:17" pos:end="65:21">saddr</name></expr>]</index></name> <operator pos:start="65:24" pos:end="65:24">=</operator> <name pos:start="65:26" pos:end="65:28">val</name></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>

    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="71:29"><expr pos:start="71:9" pos:end="71:28"><name pos:start="71:9" pos:end="71:22"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:15">regs</name><index pos:start="71:16" pos:end="71:22">[<expr pos:start="71:17" pos:end="71:21"><name pos:start="71:17" pos:end="71:21">saddr</name></expr>]</index></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:28">val</name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
