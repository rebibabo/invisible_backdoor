<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16539.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">lz_unpack</name><parameter_list pos:start="1:22" pos:end="1:62">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:30">unsigned</name> <name pos:start="1:32" pos:end="1:35">char</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">src</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:61"><decl pos:start="1:43" pos:end="1:61"><type pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:50">unsigned</name> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:61">dest</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:5">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:17">char</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">char</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">char</name></type> <name pos:start="9:19" pos:end="9:35"><name pos:start="9:19" pos:end="9:23">queue</name><index pos:start="9:24" pos:end="9:35">[<expr pos:start="9:25" pos:end="9:34"><name pos:start="9:25" pos:end="9:34">QUEUE_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:21">qpos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:25">dataleft</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:26"><decl pos:start="15:5" pos:end="15:25"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:12">unsigned</name> <name pos:start="15:14" pos:end="15:16">int</name></type> <name pos:start="15:18" pos:end="15:25">chainofs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:26"><decl pos:start="17:5" pos:end="17:25"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">unsigned</name> <name pos:start="17:14" pos:end="17:16">int</name></type> <name pos:start="17:18" pos:end="17:25">chainlen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:25"><decl pos:start="19:5" pos:end="19:24"><type pos:start="19:5" pos:end="19:16"><name pos:start="19:5" pos:end="19:12">unsigned</name> <name pos:start="19:14" pos:end="19:16">int</name></type> <name pos:start="19:18" pos:end="19:24">speclen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:21"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:12">unsigned</name> <name pos:start="21:14" pos:end="21:17">char</name></type> <name pos:start="21:19" pos:end="21:21">tag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:22"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:12">unsigned</name> <name pos:start="23:14" pos:end="23:16">int</name></type> <name pos:start="23:18" pos:end="23:18">i</name></decl>, <decl pos:start="23:21" pos:end="23:21"><type ref="prev" pos:start="23:5" pos:end="23:16"/><name pos:start="23:21" pos:end="23:21">j</name></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:12"><expr pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:11">src</name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:13"><expr pos:start="29:5" pos:end="29:12"><name pos:start="29:5" pos:end="29:5">d</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <name pos:start="29:9" pos:end="29:12">dest</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:12">dataleft</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:20">LE_32</name><argument_list pos:start="31:21" pos:end="31:23">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:11"><expr pos:start="33:5" pos:end="33:10"><name pos:start="33:5" pos:end="33:5">s</name> <operator pos:start="33:7" pos:end="33:8">+=</operator> <literal type="number" pos:start="33:10" pos:end="33:10">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:36"><expr pos:start="35:5" pos:end="35:35"><call pos:start="35:5" pos:end="35:35"><name pos:start="35:5" pos:end="35:10">memset</name><argument_list pos:start="35:11" pos:end="35:35">(<argument pos:start="35:12" pos:end="35:16"><expr pos:start="35:12" pos:end="35:16"><name pos:start="35:12" pos:end="35:16">queue</name></expr></argument>, <argument pos:start="35:19" pos:end="35:28"><expr pos:start="35:19" pos:end="35:28"><name pos:start="35:19" pos:end="35:28">QUEUE_SIZE</name></expr></argument>, <argument pos:start="35:31" pos:end="35:34"><expr pos:start="35:31" pos:end="35:34"><literal type="number" pos:start="35:31" pos:end="35:34">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="51:5"><if pos:start="37:5" pos:end="45:5">if <condition pos:start="37:8" pos:end="37:31">(<expr pos:start="37:9" pos:end="37:30"><call pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:13">LE_32</name><argument_list pos:start="37:14" pos:end="37:16">(<argument pos:start="37:15" pos:end="37:15"><expr pos:start="37:15" pos:end="37:15"><name pos:start="37:15" pos:end="37:15">s</name></expr></argument>)</argument_list></call> <operator pos:start="37:18" pos:end="37:19">==</operator> <literal type="number" pos:start="37:21" pos:end="37:30">0x56781234</literal></expr>)</condition> <block pos:start="37:33" pos:end="45:5">{<block_content pos:start="39:9" pos:end="43:26">

        <expr_stmt pos:start="39:9" pos:end="39:15"><expr pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:9">s</name> <operator pos:start="39:11" pos:end="39:12">+=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">4</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:12">qpos</name> <operator pos:start="41:14" pos:end="41:14">=</operator> <literal type="number" pos:start="41:16" pos:end="41:20">0x111</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:26"><expr pos:start="43:9" pos:end="43:25"><name pos:start="43:9" pos:end="43:15">speclen</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <literal type="number" pos:start="43:19" pos:end="43:23">0xF</literal> <operator pos:start="43:23" pos:end="43:23">+</operator> <literal type="number" pos:start="43:25" pos:end="43:25">3</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="45:7" pos:end="51:5">else <block pos:start="45:12" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:22">

        <expr_stmt pos:start="47:9" pos:end="47:21"><expr pos:start="47:9" pos:end="47:20"><name pos:start="47:9" pos:end="47:12">qpos</name> <operator pos:start="47:14" pos:end="47:14">=</operator> <literal type="number" pos:start="47:16" pos:end="47:20">0xFEE</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:22"><expr pos:start="49:9" pos:end="49:21"><name pos:start="49:9" pos:end="49:15">speclen</name> <operator pos:start="49:17" pos:end="49:17">=</operator> <literal type="number" pos:start="49:19" pos:end="49:21">100</literal></expr>;</expr_stmt>  <comment type="block" pos:start="49:25" pos:end="49:40">/* no speclen */</comment>

    </block_content>}</block></else></if_stmt>



    <while pos:start="55:5" pos:end="119:5">while <condition pos:start="55:11" pos:end="55:24">(<expr pos:start="55:12" pos:end="55:23"><name pos:start="55:12" pos:end="55:19">dataleft</name> <operator pos:start="55:21" pos:end="55:21">&gt;</operator> <literal type="number" pos:start="55:23" pos:end="55:23">0</literal></expr>)</condition> <block pos:start="55:26" pos:end="119:5">{<block_content pos:start="57:9" pos:end="117:9">

        <expr_stmt pos:start="57:9" pos:end="57:19"><expr pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:11">tag</name> <operator pos:start="57:13" pos:end="57:13">=</operator> <operator pos:start="57:15" pos:end="57:15">*</operator><name pos:start="57:16" pos:end="57:16">s</name><operator pos:start="57:17" pos:end="57:18">++</operator></expr>;</expr_stmt>

        <if_stmt pos:start="59:9" pos:end="117:9"><if pos:start="59:9" pos:end="71:9">if <condition pos:start="59:12" pos:end="59:44">(<expr pos:start="59:13" pos:end="59:43"><operator pos:start="59:13" pos:end="59:13">(</operator><name pos:start="59:14" pos:end="59:16">tag</name> <operator pos:start="59:18" pos:end="59:19">==</operator> <literal type="number" pos:start="59:21" pos:end="59:24">0xFF</literal><operator pos:start="59:25" pos:end="59:25">)</operator> <operator pos:start="59:27" pos:end="59:28">&amp;&amp;</operator> <operator pos:start="59:30" pos:end="59:30">(</operator><name pos:start="59:31" pos:end="59:38">dataleft</name> <operator pos:start="59:40" pos:end="59:40">&gt;</operator> <literal type="number" pos:start="59:42" pos:end="59:42">8</literal><operator pos:start="59:43" pos:end="59:43">)</operator></expr>)</condition> <block pos:start="59:46" pos:end="71:9">{<block_content pos:start="61:13" pos:end="69:26">

            <for pos:start="61:13" pos:end="67:13">for <control pos:start="61:17" pos:end="61:35">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">i</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:30"><expr pos:start="61:25" pos:end="61:29"><name pos:start="61:25" pos:end="61:25">i</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <literal type="number" pos:start="61:29" pos:end="61:29">8</literal></expr>;</condition> <incr pos:start="61:32" pos:end="61:34"><expr pos:start="61:32" pos:end="61:34"><name pos:start="61:32" pos:end="61:32">i</name><operator pos:start="61:33" pos:end="61:34">++</operator></expr></incr>)</control> <block pos:start="61:37" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:35">

                <expr_stmt pos:start="63:17" pos:end="63:44"><expr pos:start="63:17" pos:end="63:43"><name pos:start="63:17" pos:end="63:29"><name pos:start="63:17" pos:end="63:21">queue</name><index pos:start="63:22" pos:end="63:29">[<expr pos:start="63:23" pos:end="63:28"><name pos:start="63:23" pos:end="63:26">qpos</name><operator pos:start="63:27" pos:end="63:28">++</operator></expr>]</index></name> <operator pos:start="63:31" pos:end="63:31">=</operator> <operator pos:start="63:33" pos:end="63:33">*</operator><name pos:start="63:34" pos:end="63:34">d</name><operator pos:start="63:35" pos:end="63:36">++</operator> <operator pos:start="63:38" pos:end="63:38">=</operator> <operator pos:start="63:40" pos:end="63:40">*</operator><name pos:start="63:41" pos:end="63:41">s</name><operator pos:start="63:42" pos:end="63:43">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:35"><expr pos:start="65:17" pos:end="65:34"><name pos:start="65:17" pos:end="65:20">qpos</name> <operator pos:start="65:22" pos:end="65:23">&amp;=</operator> <name pos:start="65:25" pos:end="65:34">QUEUE_MASK</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="69:13" pos:end="69:26"><expr pos:start="69:13" pos:end="69:25"><name pos:start="69:13" pos:end="69:20">dataleft</name> <operator pos:start="69:22" pos:end="69:23">-=</operator> <literal type="number" pos:start="69:25" pos:end="69:25">8</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="71:11" pos:end="117:9">else <block pos:start="71:16" pos:end="117:9">{<block_content pos:start="73:13" pos:end="115:13">

            <for pos:start="73:13" pos:end="115:13">for <control pos:start="73:17" pos:end="73:35">(<init pos:start="73:18" pos:end="73:23"><expr pos:start="73:18" pos:end="73:22"><name pos:start="73:18" pos:end="73:18">i</name> <operator pos:start="73:20" pos:end="73:20">=</operator> <literal type="number" pos:start="73:22" pos:end="73:22">0</literal></expr>;</init> <condition pos:start="73:25" pos:end="73:30"><expr pos:start="73:25" pos:end="73:29"><name pos:start="73:25" pos:end="73:25">i</name> <operator pos:start="73:27" pos:end="73:27">&lt;</operator> <literal type="number" pos:start="73:29" pos:end="73:29">8</literal></expr>;</condition> <incr pos:start="73:32" pos:end="73:34"><expr pos:start="73:32" pos:end="73:34"><name pos:start="73:32" pos:end="73:32">i</name><operator pos:start="73:33" pos:end="73:34">++</operator></expr></incr>)</control> <block pos:start="73:37" pos:end="115:13">{<block_content pos:start="75:17" pos:end="113:26">

                <if_stmt pos:start="75:17" pos:end="77:26"><if pos:start="75:17" pos:end="77:26">if <condition pos:start="75:20" pos:end="75:34">(<expr pos:start="75:21" pos:end="75:33"><name pos:start="75:21" pos:end="75:28">dataleft</name> <operator pos:start="75:30" pos:end="75:31">==</operator> <literal type="number" pos:start="75:33" pos:end="75:33">0</literal></expr>)</condition><block type="pseudo" pos:start="77:21" pos:end="77:26"><block_content pos:start="77:21" pos:end="77:26">

                    <break pos:start="77:21" pos:end="77:26">break;</break></block_content></block></if></if_stmt>

                <if_stmt pos:start="79:17" pos:end="111:17"><if pos:start="79:17" pos:end="87:17">if <condition pos:start="79:20" pos:end="79:31">(<expr pos:start="79:21" pos:end="79:30"><name pos:start="79:21" pos:end="79:23">tag</name> <operator pos:start="79:25" pos:end="79:25">&amp;</operator> <literal type="number" pos:start="79:27" pos:end="79:30">0x01</literal></expr>)</condition> <block pos:start="79:33" pos:end="87:17">{<block_content pos:start="81:21" pos:end="85:31">

                    <expr_stmt pos:start="81:21" pos:end="81:48"><expr pos:start="81:21" pos:end="81:47"><name pos:start="81:21" pos:end="81:33"><name pos:start="81:21" pos:end="81:25">queue</name><index pos:start="81:26" pos:end="81:33">[<expr pos:start="81:27" pos:end="81:32"><name pos:start="81:27" pos:end="81:30">qpos</name><operator pos:start="81:31" pos:end="81:32">++</operator></expr>]</index></name> <operator pos:start="81:35" pos:end="81:35">=</operator> <operator pos:start="81:37" pos:end="81:37">*</operator><name pos:start="81:38" pos:end="81:38">d</name><operator pos:start="81:39" pos:end="81:40">++</operator> <operator pos:start="81:42" pos:end="81:42">=</operator> <operator pos:start="81:44" pos:end="81:44">*</operator><name pos:start="81:45" pos:end="81:45">s</name><operator pos:start="81:46" pos:end="81:47">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="83:21" pos:end="83:39"><expr pos:start="83:21" pos:end="83:38"><name pos:start="83:21" pos:end="83:24">qpos</name> <operator pos:start="83:26" pos:end="83:27">&amp;=</operator> <name pos:start="83:29" pos:end="83:38">QUEUE_MASK</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:31"><expr pos:start="85:21" pos:end="85:30"><name pos:start="85:21" pos:end="85:28">dataleft</name><operator pos:start="85:29" pos:end="85:30">--</operator></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="87:19" pos:end="111:17">else <block pos:start="87:24" pos:end="111:17">{<block_content pos:start="89:21" pos:end="109:41">

                    <expr_stmt pos:start="89:21" pos:end="89:36"><expr pos:start="89:21" pos:end="89:35"><name pos:start="89:21" pos:end="89:28">chainofs</name> <operator pos:start="89:30" pos:end="89:30">=</operator> <operator pos:start="89:32" pos:end="89:32">*</operator><name pos:start="89:33" pos:end="89:33">s</name><operator pos:start="89:34" pos:end="89:35">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="91:21" pos:end="91:51"><expr pos:start="91:21" pos:end="91:50"><name pos:start="91:21" pos:end="91:28">chainofs</name> <operator pos:start="91:30" pos:end="91:31">|=</operator> <operator pos:start="91:33" pos:end="91:33">(</operator><operator pos:start="91:34" pos:end="91:34">(</operator><operator pos:start="91:35" pos:end="91:35">*</operator><name pos:start="91:36" pos:end="91:36">s</name> <operator pos:start="91:38" pos:end="91:38">&amp;</operator> <literal type="number" pos:start="91:40" pos:end="91:43">0xF0</literal><operator pos:start="91:44" pos:end="91:44">)</operator> <operator pos:start="91:46" pos:end="91:47">&lt;&lt;</operator> <literal type="number" pos:start="91:49" pos:end="91:49">4</literal><operator pos:start="91:50" pos:end="91:50">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="93:21" pos:end="93:49"><expr pos:start="93:21" pos:end="93:48"><name pos:start="93:21" pos:end="93:28">chainlen</name> <operator pos:start="93:30" pos:end="93:30">=</operator> <operator pos:start="93:32" pos:end="93:32">(</operator><operator pos:start="93:33" pos:end="93:33">*</operator><name pos:start="93:34" pos:end="93:34">s</name><operator pos:start="93:35" pos:end="93:36">++</operator> <operator pos:start="93:38" pos:end="93:38">&amp;</operator> <literal type="number" pos:start="93:40" pos:end="93:43">0x0F</literal><operator pos:start="93:44" pos:end="93:44">)</operator> <operator pos:start="93:46" pos:end="93:46">+</operator> <literal type="number" pos:start="93:48" pos:end="93:48">3</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="95:21" pos:end="97:50"><if pos:start="95:21" pos:end="97:50">if <condition pos:start="95:24" pos:end="95:44">(<expr pos:start="95:25" pos:end="95:43"><name pos:start="95:25" pos:end="95:32">chainlen</name> <operator pos:start="95:34" pos:end="95:35">==</operator> <name pos:start="95:37" pos:end="95:43">speclen</name></expr>)</condition><block type="pseudo" pos:start="97:25" pos:end="97:50"><block_content pos:start="97:25" pos:end="97:50">

                        <expr_stmt pos:start="97:25" pos:end="97:50"><expr pos:start="97:25" pos:end="97:49"><name pos:start="97:25" pos:end="97:32">chainlen</name> <operator pos:start="97:34" pos:end="97:34">=</operator> <operator pos:start="97:36" pos:end="97:36">*</operator><name pos:start="97:37" pos:end="97:37">s</name><operator pos:start="97:38" pos:end="97:39">++</operator> <operator pos:start="97:41" pos:end="97:41">+</operator> <literal type="number" pos:start="97:43" pos:end="97:47">0xF</literal> <operator pos:start="97:47" pos:end="97:47">+</operator> <literal type="number" pos:start="97:49" pos:end="97:49">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <for pos:start="99:21" pos:end="107:21">for <control pos:start="99:25" pos:end="99:50">(<init pos:start="99:26" pos:end="99:31"><expr pos:start="99:26" pos:end="99:30"><name pos:start="99:26" pos:end="99:26">j</name> <operator pos:start="99:28" pos:end="99:28">=</operator> <literal type="number" pos:start="99:30" pos:end="99:30">0</literal></expr>;</init> <condition pos:start="99:33" pos:end="99:45"><expr pos:start="99:33" pos:end="99:44"><name pos:start="99:33" pos:end="99:33">j</name> <operator pos:start="99:35" pos:end="99:35">&lt;</operator> <name pos:start="99:37" pos:end="99:44">chainlen</name></expr>;</condition> <incr pos:start="99:47" pos:end="99:49"><expr pos:start="99:47" pos:end="99:49"><name pos:start="99:47" pos:end="99:47">j</name><operator pos:start="99:48" pos:end="99:49">++</operator></expr></incr>)</control> <block pos:start="99:52" pos:end="107:21">{<block_content pos:start="101:25" pos:end="105:43">

                        <expr_stmt pos:start="101:25" pos:end="101:60"><expr pos:start="101:25" pos:end="101:59"><operator pos:start="101:25" pos:end="101:25">*</operator><name pos:start="101:26" pos:end="101:26">d</name> <operator pos:start="101:28" pos:end="101:28">=</operator> <name pos:start="101:30" pos:end="101:59"><name pos:start="101:30" pos:end="101:34">queue</name><index pos:start="101:35" pos:end="101:59">[<expr pos:start="101:36" pos:end="101:58"><name pos:start="101:36" pos:end="101:43">chainofs</name><operator pos:start="101:44" pos:end="101:45">++</operator> <operator pos:start="101:47" pos:end="101:47">&amp;</operator> <name pos:start="101:49" pos:end="101:58">QUEUE_MASK</name></expr>]</index></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="103:25" pos:end="103:45"><expr pos:start="103:25" pos:end="103:44"><name pos:start="103:25" pos:end="103:37"><name pos:start="103:25" pos:end="103:29">queue</name><index pos:start="103:30" pos:end="103:37">[<expr pos:start="103:31" pos:end="103:36"><name pos:start="103:31" pos:end="103:34">qpos</name><operator pos:start="103:35" pos:end="103:36">++</operator></expr>]</index></name> <operator pos:start="103:39" pos:end="103:39">=</operator> <operator pos:start="103:41" pos:end="103:41">*</operator><name pos:start="103:42" pos:end="103:42">d</name><operator pos:start="103:43" pos:end="103:44">++</operator></expr>;</expr_stmt>

                        <expr_stmt pos:start="105:25" pos:end="105:43"><expr pos:start="105:25" pos:end="105:42"><name pos:start="105:25" pos:end="105:28">qpos</name> <operator pos:start="105:30" pos:end="105:31">&amp;=</operator> <name pos:start="105:33" pos:end="105:42">QUEUE_MASK</name></expr>;</expr_stmt>

                    </block_content>}</block></for>

                    <expr_stmt pos:start="109:21" pos:end="109:41"><expr pos:start="109:21" pos:end="109:40"><name pos:start="109:21" pos:end="109:28">dataleft</name> <operator pos:start="109:30" pos:end="109:31">-=</operator> <name pos:start="109:33" pos:end="109:40">chainlen</name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="113:17" pos:end="113:26"><expr pos:start="113:17" pos:end="113:25"><name pos:start="113:17" pos:end="113:19">tag</name> <operator pos:start="113:21" pos:end="113:23">&gt;&gt;=</operator> <literal type="number" pos:start="113:25" pos:end="113:25">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
