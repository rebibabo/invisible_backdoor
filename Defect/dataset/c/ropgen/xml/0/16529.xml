<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16529.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:13"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:13">size_t</name></type> <name pos:start="1:15" pos:end="1:26">curl_read_cb</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:36"><decl pos:start="1:28" pos:end="1:36"><type pos:start="1:28" pos:end="1:36"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">ptr</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:49"><decl pos:start="1:39" pos:end="1:49"><type pos:start="1:39" pos:end="1:49"><name pos:start="1:39" pos:end="1:44">size_t</name></type> <name pos:start="1:46" pos:end="1:49">size</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:63"><decl pos:start="1:52" pos:end="1:63"><type pos:start="1:52" pos:end="1:63"><name pos:start="1:52" pos:end="1:57">size_t</name></type> <name pos:start="1:59" pos:end="1:63">nmemb</name></decl></parameter>, <parameter pos:start="1:66" pos:end="1:77"><decl pos:start="1:66" pos:end="1:77"><type pos:start="1:66" pos:end="1:77"><name pos:start="1:66" pos:end="1:69">void</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:77">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:20">

    <decl_stmt pos:start="5:5" pos:end="5:40"><decl pos:start="5:5" pos:end="5:39"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">CURLState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:39">= <expr pos:start="5:20" pos:end="5:39"><operator pos:start="5:20" pos:end="5:20">(</operator><operator pos:start="5:21" pos:end="5:21">(</operator><name pos:start="5:22" pos:end="5:30">CURLState</name><operator pos:start="5:31" pos:end="5:31">*</operator><operator pos:start="5:32" pos:end="5:32">)</operator><name pos:start="5:33" pos:end="5:38">opaque</name><operator pos:start="5:39" pos:end="5:39">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:10">size_t</name></type> <name pos:start="7:12" pos:end="7:19">realsize</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:26">size</name> <operator pos:start="7:28" pos:end="7:28">*</operator> <name pos:start="7:30" pos:end="7:34">nmemb</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:56"><expr pos:start="13:5" pos:end="13:55"><call pos:start="13:5" pos:end="13:55"><name pos:start="13:5" pos:end="13:11">DPRINTF</name><argument_list pos:start="13:12" pos:end="13:55">(<argument pos:start="13:13" pos:end="13:44"><expr pos:start="13:13" pos:end="13:44"><literal type="string" pos:start="13:13" pos:end="13:44">"CURL: Just reading %zd bytes\n"</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:54"><expr pos:start="13:47" pos:end="13:54"><name pos:start="13:47" pos:end="13:54">realsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="19:22"><if pos:start="17:5" pos:end="19:22">if <condition pos:start="17:8" pos:end="17:27">(<expr pos:start="17:9" pos:end="17:26"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:10">s</name> <operator pos:start="17:12" pos:end="17:13">||</operator> <operator pos:start="17:15" pos:end="17:15">!</operator><name pos:start="17:16" pos:end="17:26"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:26">orig_buf</name></name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:22"><block_content pos:start="19:9" pos:end="19:22">

        <goto pos:start="19:9" pos:end="19:22">goto <name pos:start="19:14" pos:end="19:21">read_end</name>;</goto></block_content></block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:33">(<expr pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:18"><name pos:start="23:9" pos:end="23:9">s</name><operator pos:start="23:10" pos:end="23:11">-&gt;</operator><name pos:start="23:12" pos:end="23:18">buf_off</name></name> <operator pos:start="23:20" pos:end="23:21">&gt;=</operator> <name pos:start="23:23" pos:end="23:32"><name pos:start="23:23" pos:end="23:23">s</name><operator pos:start="23:24" pos:end="23:25">-&gt;</operator><name pos:start="23:26" pos:end="23:32">buf_len</name></name></expr>)</condition> <block pos:start="23:35" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:17">

        <comment type="block" pos:start="25:9" pos:end="25:39">/* buffer full, read nothing */</comment>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:54"><expr pos:start="31:5" pos:end="31:53"><name pos:start="31:5" pos:end="31:12">realsize</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="31:53"><name pos:start="31:16" pos:end="31:18">MIN</name><argument_list pos:start="31:19" pos:end="31:53">(<argument pos:start="31:20" pos:end="31:27"><expr pos:start="31:20" pos:end="31:27"><name pos:start="31:20" pos:end="31:27">realsize</name></expr></argument>, <argument pos:start="31:30" pos:end="31:52"><expr pos:start="31:30" pos:end="31:52"><name pos:start="31:30" pos:end="31:39"><name pos:start="31:30" pos:end="31:30">s</name><operator pos:start="31:31" pos:end="31:32">-&gt;</operator><name pos:start="31:33" pos:end="31:39">buf_len</name></name> <operator pos:start="31:41" pos:end="31:41">-</operator> <name pos:start="31:43" pos:end="31:52"><name pos:start="31:43" pos:end="31:43">s</name><operator pos:start="31:44" pos:end="31:45">-&gt;</operator><name pos:start="31:46" pos:end="31:52">buf_off</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:52"><expr pos:start="33:5" pos:end="33:51"><call pos:start="33:5" pos:end="33:51"><name pos:start="33:5" pos:end="33:10">memcpy</name><argument_list pos:start="33:11" pos:end="33:51">(<argument pos:start="33:12" pos:end="33:35"><expr pos:start="33:12" pos:end="33:35"><name pos:start="33:12" pos:end="33:22"><name pos:start="33:12" pos:end="33:12">s</name><operator pos:start="33:13" pos:end="33:14">-&gt;</operator><name pos:start="33:15" pos:end="33:22">orig_buf</name></name> <operator pos:start="33:24" pos:end="33:24">+</operator> <name pos:start="33:26" pos:end="33:35"><name pos:start="33:26" pos:end="33:26">s</name><operator pos:start="33:27" pos:end="33:28">-&gt;</operator><name pos:start="33:29" pos:end="33:35">buf_off</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:40"><expr pos:start="33:38" pos:end="33:40"><name pos:start="33:38" pos:end="33:40">ptr</name></expr></argument>, <argument pos:start="33:43" pos:end="33:50"><expr pos:start="33:43" pos:end="33:50"><name pos:start="33:43" pos:end="33:50">realsize</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:14"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:14">buf_off</name></name> <operator pos:start="35:16" pos:end="35:17">+=</operator> <name pos:start="35:19" pos:end="35:26">realsize</name></expr>;</expr_stmt>



    <for pos:start="39:5" pos:end="65:5">for<control pos:start="39:8" pos:end="39:33">(<init pos:start="39:9" pos:end="39:12"><expr pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:9">i</name><operator pos:start="39:10" pos:end="39:10">=</operator><literal type="number" pos:start="39:11" pos:end="39:11">0</literal></expr>;</init> <condition pos:start="39:14" pos:end="39:28"><expr pos:start="39:14" pos:end="39:27"><name pos:start="39:14" pos:end="39:14">i</name><operator pos:start="39:15" pos:end="39:15">&lt;</operator><name pos:start="39:16" pos:end="39:27">CURL_NUM_ACB</name></expr>;</condition> <incr pos:start="39:30" pos:end="39:32"><expr pos:start="39:30" pos:end="39:32"><name pos:start="39:30" pos:end="39:30">i</name><operator pos:start="39:31" pos:end="39:32">++</operator></expr></incr>)</control> <block pos:start="39:35" pos:end="65:5">{<block_content pos:start="41:9" pos:end="63:9">

        <decl_stmt pos:start="41:9" pos:end="41:35"><decl pos:start="41:9" pos:end="41:34"><type pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:17">CURLAIOCB</name> <modifier pos:start="41:19" pos:end="41:19">*</modifier></type><name pos:start="41:20" pos:end="41:22">acb</name> <init pos:start="41:24" pos:end="41:34">= <expr pos:start="41:26" pos:end="41:34"><name pos:start="41:26" pos:end="41:34"><name pos:start="41:26" pos:end="41:26">s</name><operator pos:start="41:27" pos:end="41:28">-&gt;</operator><name pos:start="41:29" pos:end="41:31">acb</name><index pos:start="41:32" pos:end="41:34">[<expr pos:start="41:33" pos:end="41:33"><name pos:start="41:33" pos:end="41:33">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="45:9" pos:end="47:21"><if pos:start="45:9" pos:end="47:21">if <condition pos:start="45:12" pos:end="45:17">(<expr pos:start="45:13" pos:end="45:16"><operator pos:start="45:13" pos:end="45:13">!</operator><name pos:start="45:14" pos:end="45:16">acb</name></expr>)</condition><block type="pseudo" pos:start="47:13" pos:end="47:21"><block_content pos:start="47:13" pos:end="47:21">

            <continue pos:start="47:13" pos:end="47:21">continue;</continue></block_content></block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="63:9"><if pos:start="51:9" pos:end="63:9">if <condition pos:start="51:12" pos:end="51:37">(<expr pos:start="51:13" pos:end="51:36"><operator pos:start="51:13" pos:end="51:13">(</operator><name pos:start="51:14" pos:end="51:23"><name pos:start="51:14" pos:end="51:14">s</name><operator pos:start="51:15" pos:end="51:16">-&gt;</operator><name pos:start="51:17" pos:end="51:23">buf_off</name></name> <operator pos:start="51:25" pos:end="51:26">&gt;=</operator> <name pos:start="51:28" pos:end="51:35"><name pos:start="51:28" pos:end="51:30">acb</name><operator pos:start="51:31" pos:end="51:32">-&gt;</operator><name pos:start="51:33" pos:end="51:35">end</name></name><operator pos:start="51:36" pos:end="51:36">)</operator></expr>)</condition> <block pos:start="51:39" pos:end="63:9">{<block_content pos:start="53:13" pos:end="61:29">

            <expr_stmt pos:start="53:13" pos:end="55:55"><expr pos:start="53:13" pos:end="55:54"><call pos:start="53:13" pos:end="55:54"><name pos:start="53:13" pos:end="53:31">qemu_iovec_from_buf</name><argument_list pos:start="53:32" pos:end="55:54">(<argument pos:start="53:33" pos:end="53:41"><expr pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:41"><name pos:start="53:33" pos:end="53:35">acb</name><operator pos:start="53:36" pos:end="53:37">-&gt;</operator><name pos:start="53:38" pos:end="53:41">qiov</name></name></expr></argument>, <argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">0</literal></expr></argument>, <argument pos:start="53:47" pos:end="53:70"><expr pos:start="53:47" pos:end="53:70"><name pos:start="53:47" pos:end="53:57"><name pos:start="53:47" pos:end="53:47">s</name><operator pos:start="53:48" pos:end="53:49">-&gt;</operator><name pos:start="53:50" pos:end="53:57">orig_buf</name></name> <operator pos:start="53:59" pos:end="53:59">+</operator> <name pos:start="53:61" pos:end="53:70"><name pos:start="53:61" pos:end="53:63">acb</name><operator pos:start="53:64" pos:end="53:65">-&gt;</operator><name pos:start="53:66" pos:end="53:70">start</name></name></expr></argument>,

                                <argument pos:start="55:33" pos:end="55:53"><expr pos:start="55:33" pos:end="55:53"><name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:35">acb</name><operator pos:start="55:36" pos:end="55:37">-&gt;</operator><name pos:start="55:38" pos:end="55:40">end</name></name> <operator pos:start="55:42" pos:end="55:42">-</operator> <name pos:start="55:44" pos:end="55:53"><name pos:start="55:44" pos:end="55:46">acb</name><operator pos:start="55:47" pos:end="55:48">-&gt;</operator><name pos:start="55:49" pos:end="55:53">start</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:50"><expr pos:start="57:13" pos:end="57:49"><call pos:start="57:13" pos:end="57:49"><name pos:start="57:13" pos:end="57:26"><name pos:start="57:13" pos:end="57:15">acb</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:23">common</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:26">cb</name></name><argument_list pos:start="57:27" pos:end="57:49">(<argument pos:start="57:28" pos:end="57:45"><expr pos:start="57:28" pos:end="57:45"><name pos:start="57:28" pos:end="57:45"><name pos:start="57:28" pos:end="57:30">acb</name><operator pos:start="57:31" pos:end="57:32">-&gt;</operator><name pos:start="57:33" pos:end="57:38">common</name><operator pos:start="57:39" pos:end="57:39">.</operator><name pos:start="57:40" pos:end="57:45">opaque</name></name></expr></argument>, <argument pos:start="57:48" pos:end="57:48"><expr pos:start="57:48" pos:end="57:48"><literal type="number" pos:start="57:48" pos:end="57:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:34"><expr pos:start="59:13" pos:end="59:33"><call pos:start="59:13" pos:end="59:33"><name pos:start="59:13" pos:end="59:28">qemu_aio_release</name><argument_list pos:start="59:29" pos:end="59:33">(<argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:32">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:29"><expr pos:start="61:13" pos:end="61:28"><name pos:start="61:13" pos:end="61:21"><name pos:start="61:13" pos:end="61:13">s</name><operator pos:start="61:14" pos:end="61:15">-&gt;</operator><name pos:start="61:16" pos:end="61:18">acb</name><index pos:start="61:19" pos:end="61:21">[<expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">i</name></expr>]</index></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:28">NULL</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="69:1" pos:end="69:9"><name pos:start="69:1" pos:end="69:8">read_end</name>:</label>

    <return pos:start="71:5" pos:end="71:20">return <expr pos:start="71:12" pos:end="71:19"><name pos:start="71:12" pos:end="71:19">realsize</name></expr>;</return>

</block_content>}</block></function>
</unit>
