<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24449.c" pos:tabs="8"><function pos:start="1:1" pos:end="93:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">kvm_irqchip_add_msi_route</name><parameter_list pos:start="1:30" pos:end="1:70">(<parameter pos:start="1:31" pos:end="1:41"><decl pos:start="1:31" pos:end="1:41"><type pos:start="1:31" pos:end="1:41"><name pos:start="1:31" pos:end="1:38">KVMState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:41">s</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:53"><decl pos:start="1:44" pos:end="1:53"><type pos:start="1:44" pos:end="1:53"><name pos:start="1:44" pos:end="1:46">int</name></type> <name pos:start="1:48" pos:end="1:53">vector</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:64">PCIDevice</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="93:1">{<block_content pos:start="5:5" pos:end="91:16">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:32"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:32">kvm_irq_routing_entry</name></name></type> <name pos:start="5:34" pos:end="5:39">kroute</name> <init pos:start="5:41" pos:end="5:44">= <expr pos:start="5:43" pos:end="5:44"><block pos:start="5:43" pos:end="5:44">{}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:13"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">virq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">MSIMessage</name></type> <name pos:start="9:16" pos:end="9:18">msg</name> <init pos:start="9:20" pos:end="9:27">= <expr pos:start="9:22" pos:end="9:27"><block pos:start="9:22" pos:end="9:27">{<expr pos:start="9:23" pos:end="9:23"><literal type="number" pos:start="9:23" pos:end="9:23">0</literal></expr>, <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:12">(<expr pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">dev</name></expr>)</condition> <block pos:start="13:14" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:47">

        <expr_stmt pos:start="15:9" pos:end="15:47"><expr pos:start="15:9" pos:end="15:46"><name pos:start="15:9" pos:end="15:11">msg</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:46"><name pos:start="15:15" pos:end="15:33">pci_get_msi_message</name><argument_list pos:start="15:34" pos:end="15:46">(<argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">dev</name></expr></argument>, <argument pos:start="15:40" pos:end="15:45"><expr pos:start="15:40" pos:end="15:45"><name pos:start="15:40" pos:end="15:45">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:33">(<expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:30">kvm_gsi_direct_mapping</name><argument_list pos:start="21:31" pos:end="21:32">()</argument_list></call></expr>)</condition> <block pos:start="21:35" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:50">

        <return pos:start="23:9" pos:end="23:50">return <expr pos:start="23:16" pos:end="23:49"><call pos:start="23:16" pos:end="23:49"><name pos:start="23:16" pos:end="23:39">kvm_arch_msi_data_to_gsi</name><argument_list pos:start="23:40" pos:end="23:49">(<argument pos:start="23:41" pos:end="23:48"><expr pos:start="23:41" pos:end="23:48"><name pos:start="23:41" pos:end="23:48"><name pos:start="23:41" pos:end="23:43">msg</name><operator pos:start="23:44" pos:end="23:44">.</operator><name pos:start="23:45" pos:end="23:48">data</name></name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:35">(<expr pos:start="29:9" pos:end="29:34"><operator pos:start="29:9" pos:end="29:9">!</operator><call pos:start="29:10" pos:end="29:34"><name pos:start="29:10" pos:end="29:32">kvm_gsi_routing_enabled</name><argument_list pos:start="29:33" pos:end="29:34">()</argument_list></call></expr>)</condition> <block pos:start="29:37" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:23">

        <return pos:start="31:9" pos:end="31:23">return <expr pos:start="31:16" pos:end="31:22"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:22">ENOSYS</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:35"><expr pos:start="37:5" pos:end="37:34"><name pos:start="37:5" pos:end="37:8">virq</name> <operator pos:start="37:10" pos:end="37:10">=</operator> <call pos:start="37:12" pos:end="37:34"><name pos:start="37:12" pos:end="37:31">kvm_irqchip_get_virq</name><argument_list pos:start="37:32" pos:end="37:34">(<argument pos:start="37:33" pos:end="37:33"><expr pos:start="37:33" pos:end="37:33"><name pos:start="37:33" pos:end="37:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:12">virq</name> <operator pos:start="39:14" pos:end="39:14">&lt;</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>)</condition> <block pos:start="39:19" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:20">

        <return pos:start="41:9" pos:end="41:20">return <expr pos:start="41:16" pos:end="41:19"><name pos:start="41:16" pos:end="41:19">virq</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:22"><expr pos:start="47:5" pos:end="47:21"><name pos:start="47:5" pos:end="47:14"><name pos:start="47:5" pos:end="47:10">kroute</name><operator pos:start="47:11" pos:end="47:11">.</operator><name pos:start="47:12" pos:end="47:14">gsi</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:21">virq</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:38"><expr pos:start="49:5" pos:end="49:37"><name pos:start="49:5" pos:end="49:15"><name pos:start="49:5" pos:end="49:10">kroute</name><operator pos:start="49:11" pos:end="49:11">.</operator><name pos:start="49:12" pos:end="49:15">type</name></name> <operator pos:start="49:17" pos:end="49:17">=</operator> <name pos:start="49:19" pos:end="49:37">KVM_IRQ_ROUTING_MSI</name></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:21"><expr pos:start="51:5" pos:end="51:20"><name pos:start="51:5" pos:end="51:16"><name pos:start="51:5" pos:end="51:10">kroute</name><operator pos:start="51:11" pos:end="51:11">.</operator><name pos:start="51:12" pos:end="51:16">flags</name></name> <operator pos:start="51:18" pos:end="51:18">=</operator> <literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:52"><expr pos:start="53:5" pos:end="53:51"><name pos:start="53:5" pos:end="53:27"><name pos:start="53:5" pos:end="53:10">kroute</name><operator pos:start="53:11" pos:end="53:11">.</operator><name pos:start="53:12" pos:end="53:12">u</name><operator pos:start="53:13" pos:end="53:13">.</operator><name pos:start="53:14" pos:end="53:16">msi</name><operator pos:start="53:17" pos:end="53:17">.</operator><name pos:start="53:18" pos:end="53:27">address_lo</name></name> <operator pos:start="53:29" pos:end="53:29">=</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:39">uint32_t</name><operator pos:start="53:40" pos:end="53:40">)</operator><name pos:start="53:41" pos:end="53:51"><name pos:start="53:41" pos:end="53:43">msg</name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:51">address</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:48"><expr pos:start="55:5" pos:end="55:47"><name pos:start="55:5" pos:end="55:27"><name pos:start="55:5" pos:end="55:10">kroute</name><operator pos:start="55:11" pos:end="55:11">.</operator><name pos:start="55:12" pos:end="55:12">u</name><operator pos:start="55:13" pos:end="55:13">.</operator><name pos:start="55:14" pos:end="55:16">msi</name><operator pos:start="55:17" pos:end="55:17">.</operator><name pos:start="55:18" pos:end="55:27">address_hi</name></name> <operator pos:start="55:29" pos:end="55:29">=</operator> <name pos:start="55:31" pos:end="55:41"><name pos:start="55:31" pos:end="55:33">msg</name><operator pos:start="55:34" pos:end="55:34">.</operator><name pos:start="55:35" pos:end="55:41">address</name></name> <operator pos:start="55:43" pos:end="55:44">&gt;&gt;</operator> <literal type="number" pos:start="55:46" pos:end="55:47">32</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:46"><expr pos:start="57:5" pos:end="57:45"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:10">kroute</name><operator pos:start="57:11" pos:end="57:11">.</operator><name pos:start="57:12" pos:end="57:12">u</name><operator pos:start="57:13" pos:end="57:13">.</operator><name pos:start="57:14" pos:end="57:16">msi</name><operator pos:start="57:17" pos:end="57:17">.</operator><name pos:start="57:18" pos:end="57:21">data</name></name> <operator pos:start="57:23" pos:end="57:23">=</operator> <call pos:start="57:25" pos:end="57:45"><name pos:start="57:25" pos:end="57:35">le32_to_cpu</name><argument_list pos:start="57:36" pos:end="57:45">(<argument pos:start="57:37" pos:end="57:44"><expr pos:start="57:37" pos:end="57:44"><name pos:start="57:37" pos:end="57:44"><name pos:start="57:37" pos:end="57:39">msg</name><operator pos:start="57:40" pos:end="57:40">.</operator><name pos:start="57:41" pos:end="57:44">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:33">(<expr pos:start="59:9" pos:end="59:32"><call pos:start="59:9" pos:end="59:32"><name pos:start="59:9" pos:end="59:30">kvm_msi_devid_required</name><argument_list pos:start="59:31" pos:end="59:32">()</argument_list></call></expr>)</condition> <block pos:start="59:35" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:51">

        <expr_stmt pos:start="61:9" pos:end="61:43"><expr pos:start="61:9" pos:end="61:42"><name pos:start="61:9" pos:end="61:20"><name pos:start="61:9" pos:end="61:14">kroute</name><operator pos:start="61:15" pos:end="61:15">.</operator><name pos:start="61:16" pos:end="61:20">flags</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:42">KVM_MSI_VALID_DEVID</name></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:51"><expr pos:start="63:9" pos:end="63:50"><name pos:start="63:9" pos:end="63:26"><name pos:start="63:9" pos:end="63:14">kroute</name><operator pos:start="63:15" pos:end="63:15">.</operator><name pos:start="63:16" pos:end="63:16">u</name><operator pos:start="63:17" pos:end="63:17">.</operator><name pos:start="63:18" pos:end="63:20">msi</name><operator pos:start="63:21" pos:end="63:21">.</operator><name pos:start="63:22" pos:end="63:26">devid</name></name> <operator pos:start="63:28" pos:end="63:28">=</operator> <call pos:start="63:30" pos:end="63:50"><name pos:start="63:30" pos:end="63:45">pci_requester_id</name><argument_list pos:start="63:46" pos:end="63:50">(<argument pos:start="63:47" pos:end="63:49"><expr pos:start="63:47" pos:end="63:49"><name pos:start="63:47" pos:end="63:49">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="73:5"><if pos:start="67:5" pos:end="73:5">if <condition pos:start="67:8" pos:end="67:70">(<expr pos:start="67:9" pos:end="67:69"><call pos:start="67:9" pos:end="67:69"><name pos:start="67:9" pos:end="67:32">kvm_arch_fixup_msi_route</name><argument_list pos:start="67:33" pos:end="67:69">(<argument pos:start="67:34" pos:end="67:40"><expr pos:start="67:34" pos:end="67:40"><operator pos:start="67:34" pos:end="67:34">&amp;</operator><name pos:start="67:35" pos:end="67:40">kroute</name></expr></argument>, <argument pos:start="67:43" pos:end="67:53"><expr pos:start="67:43" pos:end="67:53"><name pos:start="67:43" pos:end="67:53"><name pos:start="67:43" pos:end="67:45">msg</name><operator pos:start="67:46" pos:end="67:46">.</operator><name pos:start="67:47" pos:end="67:53">address</name></name></expr></argument>, <argument pos:start="67:56" pos:end="67:63"><expr pos:start="67:56" pos:end="67:63"><name pos:start="67:56" pos:end="67:63"><name pos:start="67:56" pos:end="67:58">msg</name><operator pos:start="67:59" pos:end="67:59">.</operator><name pos:start="67:60" pos:end="67:63">data</name></name></expr></argument>, <argument pos:start="67:66" pos:end="67:68"><expr pos:start="67:66" pos:end="67:68"><name pos:start="67:66" pos:end="67:68">dev</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:72" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:23">

        <expr_stmt pos:start="69:9" pos:end="69:42"><expr pos:start="69:9" pos:end="69:41"><call pos:start="69:9" pos:end="69:41"><name pos:start="69:9" pos:end="69:32">kvm_irqchip_release_virq</name><argument_list pos:start="69:33" pos:end="69:41">(<argument pos:start="69:34" pos:end="69:34"><expr pos:start="69:34" pos:end="69:34"><name pos:start="69:34" pos:end="69:34">s</name></expr></argument>, <argument pos:start="69:37" pos:end="69:40"><expr pos:start="69:37" pos:end="69:40"><name pos:start="69:37" pos:end="69:40">virq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="71:9" pos:end="71:23">return <expr pos:start="71:16" pos:end="71:22"><operator pos:start="71:16" pos:end="71:16">-</operator><name pos:start="71:17" pos:end="71:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="77:5" pos:end="79:50"><expr pos:start="77:5" pos:end="79:49"><call pos:start="77:5" pos:end="79:49"><name pos:start="77:5" pos:end="77:35">trace_kvm_irqchip_add_msi_route</name><argument_list pos:start="77:36" pos:end="79:49">(<argument pos:start="77:37" pos:end="77:67"><expr pos:start="77:37" pos:end="77:67"><ternary pos:start="77:37" pos:end="77:67"><condition pos:start="77:37" pos:end="77:41"><expr pos:start="77:37" pos:end="77:39"><name pos:start="77:37" pos:end="77:39">dev</name></expr> ?</condition><then pos:start="77:43" pos:end="77:51"> <expr pos:start="77:43" pos:end="77:51"><name pos:start="77:43" pos:end="77:51"><name pos:start="77:43" pos:end="77:45">dev</name><operator pos:start="77:46" pos:end="77:47">-&gt;</operator><name pos:start="77:48" pos:end="77:51">name</name></name></expr> </then><else pos:start="77:53" pos:end="77:67">: <expr pos:start="77:55" pos:end="77:67"><operator pos:start="77:55" pos:end="77:55">(</operator><name pos:start="77:56" pos:end="77:59">char</name> <operator pos:start="77:61" pos:end="77:61">*</operator><operator pos:start="77:62" pos:end="77:62">)</operator><literal type="string" pos:start="77:63" pos:end="77:67">"N/A"</literal></expr></else></ternary></expr></argument>,

                                    <argument pos:start="79:37" pos:end="79:42"><expr pos:start="79:37" pos:end="79:42"><name pos:start="79:37" pos:end="79:42">vector</name></expr></argument>, <argument pos:start="79:45" pos:end="79:48"><expr pos:start="79:45" pos:end="79:48"><name pos:start="79:45" pos:end="79:48">virq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><call pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:25">kvm_add_routing_entry</name><argument_list pos:start="83:26" pos:end="83:37">(<argument pos:start="83:27" pos:end="83:27"><expr pos:start="83:27" pos:end="83:27"><name pos:start="83:27" pos:end="83:27">s</name></expr></argument>, <argument pos:start="83:30" pos:end="83:36"><expr pos:start="83:30" pos:end="83:36"><operator pos:start="83:30" pos:end="83:30">&amp;</operator><name pos:start="83:31" pos:end="83:36">kroute</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:54"><expr pos:start="85:5" pos:end="85:53"><call pos:start="85:5" pos:end="85:53"><name pos:start="85:5" pos:end="85:31">kvm_arch_add_msi_route_post</name><argument_list pos:start="85:32" pos:end="85:53">(<argument pos:start="85:33" pos:end="85:39"><expr pos:start="85:33" pos:end="85:39"><operator pos:start="85:33" pos:end="85:33">&amp;</operator><name pos:start="85:34" pos:end="85:39">kroute</name></expr></argument>, <argument pos:start="85:42" pos:end="85:47"><expr pos:start="85:42" pos:end="85:47"><name pos:start="85:42" pos:end="85:47">vector</name></expr></argument>, <argument pos:start="85:50" pos:end="85:52"><expr pos:start="85:50" pos:end="85:52"><name pos:start="85:50" pos:end="85:52">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:33"><expr pos:start="87:5" pos:end="87:32"><call pos:start="87:5" pos:end="87:32"><name pos:start="87:5" pos:end="87:29">kvm_irqchip_commit_routes</name><argument_list pos:start="87:30" pos:end="87:32">(<argument pos:start="87:31" pos:end="87:31"><expr pos:start="87:31" pos:end="87:31"><name pos:start="87:31" pos:end="87:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="91:5" pos:end="91:16">return <expr pos:start="91:12" pos:end="91:15"><name pos:start="91:12" pos:end="91:15">virq</name></expr>;</return>

</block_content>}</block></function>
</unit>
