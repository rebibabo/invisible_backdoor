<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21368.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">kvm_vcpu_ioctl</name><parameter_list pos:start="1:19" pos:end="1:48">(<parameter pos:start="1:20" pos:end="1:32"><decl pos:start="1:20" pos:end="1:32"><type pos:start="1:20" pos:end="1:32"><name pos:start="1:20" pos:end="1:27">CPUState</name> <modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:32">env</name></decl></parameter>, <parameter pos:start="1:35" pos:end="1:42"><decl pos:start="1:35" pos:end="1:42"><type pos:start="1:35" pos:end="1:42"><name pos:start="1:35" pos:end="1:37">int</name></type> <name pos:start="1:39" pos:end="1:42">type</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:47"><decl pos:start="1:45" pos:end="1:47"><type pos:start="1:45" pos:end="1:47"><modifier pos:start="1:45" pos:end="1:47">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:14"><decl pos:start="7:5" pos:end="7:13"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">void</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:13">arg</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">va_list</name></type> <name pos:start="9:13" pos:end="9:14">ap</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:23"><expr pos:start="13:5" pos:end="13:22"><call pos:start="13:5" pos:end="13:22"><name pos:start="13:5" pos:end="13:12">va_start</name><argument_list pos:start="13:13" pos:end="13:22">(<argument pos:start="13:14" pos:end="13:15"><expr pos:start="13:14" pos:end="13:15"><name pos:start="13:14" pos:end="13:15">ap</name></expr></argument>, <argument pos:start="13:18" pos:end="13:21"><expr pos:start="13:18" pos:end="13:21"><name pos:start="13:18" pos:end="13:21">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:7">arg</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:28"><name pos:start="15:11" pos:end="15:16">va_arg</name><argument_list pos:start="15:17" pos:end="15:28">(<argument pos:start="15:18" pos:end="15:19"><expr pos:start="15:18" pos:end="15:19"><name pos:start="15:18" pos:end="15:19">ap</name></expr></argument>, <argument pos:start="15:22" pos:end="15:27"><expr pos:start="15:22" pos:end="15:27"><name pos:start="15:22" pos:end="15:25">void</name> <operator pos:start="15:27" pos:end="15:27">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:15"><expr pos:start="17:5" pos:end="17:14"><call pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:10">va_end</name><argument_list pos:start="17:11" pos:end="17:14">(<argument pos:start="17:12" pos:end="17:13"><expr pos:start="17:12" pos:end="17:13"><name pos:start="17:12" pos:end="17:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:40"><expr pos:start="21:5" pos:end="21:39"><name pos:start="21:5" pos:end="21:7">ret</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:39"><name pos:start="21:11" pos:end="21:15">ioctl</name><argument_list pos:start="21:16" pos:end="21:39">(<argument pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:27"><name pos:start="21:17" pos:end="21:19">env</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:27">kvm_fd</name></name></expr></argument>, <argument pos:start="21:30" pos:end="21:33"><expr pos:start="21:30" pos:end="21:33"><name pos:start="21:30" pos:end="21:33">type</name></expr></argument>, <argument pos:start="21:36" pos:end="21:38"><expr pos:start="21:36" pos:end="21:38"><name pos:start="21:36" pos:end="21:38">arg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="25:21"><if pos:start="23:5" pos:end="25:21">if <condition pos:start="23:8" pos:end="23:18">(<expr pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:14">==</operator> <operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:21"><block_content pos:start="25:9" pos:end="25:21">

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <operator pos:start="25:15" pos:end="25:15">-</operator><name pos:start="25:16" pos:end="25:20">errno</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="29:5" pos:end="29:15">return <expr pos:start="29:12" pos:end="29:14"><name pos:start="29:12" pos:end="29:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
