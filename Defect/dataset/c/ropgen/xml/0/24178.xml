<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24178.c" pos:tabs="8"><function pos:start="1:1" pos:end="71:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">portio_list_add</name><parameter_list pos:start="1:21" pos:end="5:36">(<parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:31">PortioList</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:40">piolist</name></decl></parameter>,

                     <parameter pos:start="3:22" pos:end="3:48"><decl pos:start="3:22" pos:end="3:48"><type pos:start="3:22" pos:end="3:48"><name pos:start="3:22" pos:end="3:33">MemoryRegion</name> <modifier pos:start="3:35" pos:end="3:35">*</modifier></type><name pos:start="3:36" pos:end="3:48">address_space</name></decl></parameter>,

                     <parameter pos:start="5:22" pos:end="5:35"><decl pos:start="5:22" pos:end="5:35"><type pos:start="5:22" pos:end="5:35"><name pos:start="5:22" pos:end="5:29">uint32_t</name></type> <name pos:start="5:31" pos:end="5:35">start</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="71:1">{<block_content pos:start="9:5" pos:end="69:75">

    <decl_stmt pos:start="9:5" pos:end="9:63"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:30"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:28">MemoryRegionPortio</name> <modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:33">pio</name></decl>, <decl pos:start="9:36" pos:end="9:62"><type ref="prev" pos:start="9:5" pos:end="9:30"><modifier pos:start="9:36" pos:end="9:36">*</modifier></type><name pos:start="9:37" pos:end="9:45">pio_start</name> <init pos:start="9:47" pos:end="9:62">= <expr pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:62"><name pos:start="9:49" pos:end="9:55">piolist</name><operator pos:start="9:56" pos:end="9:57">-&gt;</operator><name pos:start="9:58" pos:end="9:62">ports</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:24">off_low</name></decl>, <decl pos:start="11:27" pos:end="11:34"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:27" pos:end="11:34">off_high</name></decl>, <decl pos:start="11:37" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:37" pos:end="11:44">off_last</name></decl>, <decl pos:start="11:47" pos:end="11:51"><type ref="prev" pos:start="11:5" pos:end="11:16"/><name pos:start="11:47" pos:end="11:51">count</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:11">piolist</name><operator pos:start="15:12" pos:end="15:13">-&gt;</operator><name pos:start="15:14" pos:end="15:26">address_space</name></name> <operator pos:start="15:28" pos:end="15:28">=</operator> <name pos:start="15:30" pos:end="15:42">address_space</name></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:44">/* Handle the first entry specially.  */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:43"><expr pos:start="21:5" pos:end="21:42"><name pos:start="21:5" pos:end="21:12">off_last</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <name pos:start="21:16" pos:end="21:22">off_low</name> <operator pos:start="21:24" pos:end="21:24">=</operator> <name pos:start="21:26" pos:end="21:42"><name pos:start="21:26" pos:end="21:34">pio_start</name><operator pos:start="21:35" pos:end="21:36">-&gt;</operator><name pos:start="21:37" pos:end="21:42">offset</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:40"><expr pos:start="23:5" pos:end="23:39"><name pos:start="23:5" pos:end="23:12">off_high</name> <operator pos:start="23:14" pos:end="23:14">=</operator> <name pos:start="23:16" pos:end="23:22">off_low</name> <operator pos:start="23:24" pos:end="23:24">+</operator> <name pos:start="23:26" pos:end="23:39"><name pos:start="23:26" pos:end="23:34">pio_start</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:39">len</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><name pos:start="25:5" pos:end="25:9">count</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">1</literal></expr>;</expr_stmt>



    <for pos:start="29:5" pos:end="63:5">for <control pos:start="29:9" pos:end="29:61">(<init pos:start="29:10" pos:end="29:29"><expr pos:start="29:10" pos:end="29:28"><name pos:start="29:10" pos:end="29:12">pio</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <name pos:start="29:16" pos:end="29:24">pio_start</name> <operator pos:start="29:26" pos:end="29:26">+</operator> <literal type="number" pos:start="29:28" pos:end="29:28">1</literal></expr>;</init> <condition pos:start="29:31" pos:end="29:45"><expr pos:start="29:31" pos:end="29:44"><name pos:start="29:31" pos:end="29:39"><name pos:start="29:31" pos:end="29:33">pio</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:39">size</name></name> <operator pos:start="29:41" pos:end="29:42">!=</operator> <literal type="number" pos:start="29:44" pos:end="29:44">0</literal></expr>;</condition> <incr pos:start="29:47" pos:end="29:60"><expr pos:start="29:47" pos:end="29:51"><name pos:start="29:47" pos:end="29:49">pio</name><operator pos:start="29:50" pos:end="29:51">++</operator></expr><operator pos:start="29:52" pos:end="29:52">,</operator> <expr pos:start="29:54" pos:end="29:60"><name pos:start="29:54" pos:end="29:58">count</name><operator pos:start="29:59" pos:end="29:60">++</operator></expr></incr>)</control> <block pos:start="29:63" pos:end="63:5">{<block_content pos:start="33:9" pos:end="61:9">

        <comment type="block" pos:start="31:9" pos:end="31:52">/* All entries must be sorted by offset.  */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:14">assert</name><argument_list pos:start="33:15" pos:end="33:39">(<argument pos:start="33:16" pos:end="33:38"><expr pos:start="33:16" pos:end="33:38"><name pos:start="33:16" pos:end="33:26"><name pos:start="33:16" pos:end="33:18">pio</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:26">offset</name></name> <operator pos:start="33:28" pos:end="33:29">&gt;=</operator> <name pos:start="33:31" pos:end="33:38">off_last</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:31"><expr pos:start="35:9" pos:end="35:30"><name pos:start="35:9" pos:end="35:16">off_last</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:30"><name pos:start="35:20" pos:end="35:22">pio</name><operator pos:start="35:23" pos:end="35:24">-&gt;</operator><name pos:start="35:25" pos:end="35:30">offset</name></name></expr>;</expr_stmt>



        <comment type="block" pos:start="39:9" pos:end="39:50">/* If we see a hole, break the region.  */</comment>

        <if_stmt pos:start="41:9" pos:end="61:9"><if pos:start="41:9" pos:end="57:9">if <condition pos:start="41:12" pos:end="41:32">(<expr pos:start="41:13" pos:end="41:31"><name pos:start="41:13" pos:end="41:20">off_last</name> <operator pos:start="41:22" pos:end="41:22">&gt;</operator> <name pos:start="41:24" pos:end="41:31">off_high</name></expr>)</condition> <block pos:start="41:34" pos:end="57:9">{<block_content pos:start="43:13" pos:end="55:22">

            <expr_stmt pos:start="43:13" pos:end="45:40"><expr pos:start="43:13" pos:end="45:39"><call pos:start="43:13" pos:end="45:39"><name pos:start="43:13" pos:end="43:29">portio_list_add_1</name><argument_list pos:start="43:30" pos:end="45:39">(<argument pos:start="43:31" pos:end="43:37"><expr pos:start="43:31" pos:end="43:37"><name pos:start="43:31" pos:end="43:37">piolist</name></expr></argument>, <argument pos:start="43:40" pos:end="43:48"><expr pos:start="43:40" pos:end="43:48"><name pos:start="43:40" pos:end="43:48">pio_start</name></expr></argument>, <argument pos:start="43:51" pos:end="43:55"><expr pos:start="43:51" pos:end="43:55"><name pos:start="43:51" pos:end="43:55">count</name></expr></argument>, <argument pos:start="43:58" pos:end="43:62"><expr pos:start="43:58" pos:end="43:62"><name pos:start="43:58" pos:end="43:62">start</name></expr></argument>, <argument pos:start="43:65" pos:end="43:71"><expr pos:start="43:65" pos:end="43:71"><name pos:start="43:65" pos:end="43:71">off_low</name></expr></argument>,

                              <argument pos:start="45:31" pos:end="45:38"><expr pos:start="45:31" pos:end="45:38"><name pos:start="45:31" pos:end="45:38">off_high</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="47:13" pos:end="47:49">/* ... and start collecting anew.  */</comment>

            <expr_stmt pos:start="49:13" pos:end="49:28"><expr pos:start="49:13" pos:end="49:27"><name pos:start="49:13" pos:end="49:21">pio_start</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <name pos:start="49:25" pos:end="49:27">pio</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:31"><expr pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:19">off_low</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:30">off_last</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:42"><expr pos:start="53:13" pos:end="53:41"><name pos:start="53:13" pos:end="53:20">off_high</name> <operator pos:start="53:22" pos:end="53:22">=</operator> <name pos:start="53:24" pos:end="53:30">off_low</name> <operator pos:start="53:32" pos:end="53:32">+</operator> <name pos:start="53:34" pos:end="53:41"><name pos:start="53:34" pos:end="53:36">pio</name><operator pos:start="53:37" pos:end="53:38">-&gt;</operator><name pos:start="53:39" pos:end="53:41">len</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:22"><expr pos:start="55:13" pos:end="55:21"><name pos:start="55:13" pos:end="55:17">count</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="61:9">else if <condition pos:start="57:19" pos:end="57:50">(<expr pos:start="57:20" pos:end="57:49"><name pos:start="57:20" pos:end="57:27">off_last</name> <operator pos:start="57:29" pos:end="57:29">+</operator> <name pos:start="57:31" pos:end="57:38"><name pos:start="57:31" pos:end="57:33">pio</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:38">len</name></name> <operator pos:start="57:40" pos:end="57:40">&gt;</operator> <name pos:start="57:42" pos:end="57:49">off_high</name></expr>)</condition> <block pos:start="57:52" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:43">

            <expr_stmt pos:start="59:13" pos:end="59:43"><expr pos:start="59:13" pos:end="59:42"><name pos:start="59:13" pos:end="59:20">off_high</name> <operator pos:start="59:22" pos:end="59:22">=</operator> <name pos:start="59:24" pos:end="59:31">off_last</name> <operator pos:start="59:33" pos:end="59:33">+</operator> <name pos:start="59:35" pos:end="59:42"><name pos:start="59:35" pos:end="59:37">pio</name><operator pos:start="59:38" pos:end="59:39">-&gt;</operator><name pos:start="59:40" pos:end="59:42">len</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="67:5" pos:end="67:49">/* There will always be an open sub-list.  */</comment>

    <expr_stmt pos:start="69:5" pos:end="69:75"><expr pos:start="69:5" pos:end="69:74"><call pos:start="69:5" pos:end="69:74"><name pos:start="69:5" pos:end="69:21">portio_list_add_1</name><argument_list pos:start="69:22" pos:end="69:74">(<argument pos:start="69:23" pos:end="69:29"><expr pos:start="69:23" pos:end="69:29"><name pos:start="69:23" pos:end="69:29">piolist</name></expr></argument>, <argument pos:start="69:32" pos:end="69:40"><expr pos:start="69:32" pos:end="69:40"><name pos:start="69:32" pos:end="69:40">pio_start</name></expr></argument>, <argument pos:start="69:43" pos:end="69:47"><expr pos:start="69:43" pos:end="69:47"><name pos:start="69:43" pos:end="69:47">count</name></expr></argument>, <argument pos:start="69:50" pos:end="69:54"><expr pos:start="69:50" pos:end="69:54"><name pos:start="69:50" pos:end="69:54">start</name></expr></argument>, <argument pos:start="69:57" pos:end="69:63"><expr pos:start="69:57" pos:end="69:63"><name pos:start="69:57" pos:end="69:63">off_low</name></expr></argument>, <argument pos:start="69:66" pos:end="69:73"><expr pos:start="69:66" pos:end="69:73"><name pos:start="69:66" pos:end="69:73">off_high</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
