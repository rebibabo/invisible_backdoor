<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21556.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">ssize_t</name></type> <name pos:start="1:16" pos:end="1:41">qio_channel_command_writev</name><parameter_list pos:start="1:42" pos:end="11:55">(<parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:52">QIOChannel</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:57">ioc</name></decl></parameter>,

                                          <parameter pos:start="3:43" pos:end="3:65"><decl pos:start="3:43" pos:end="3:65"><type pos:start="3:43" pos:end="3:65"><specifier pos:start="3:43" pos:end="3:47">const</specifier> <name pos:start="3:49" pos:end="3:60"><name pos:start="3:49" pos:end="3:54">struct</name> <name pos:start="3:56" pos:end="3:60">iovec</name></name> <modifier pos:start="3:62" pos:end="3:62">*</modifier></type><name pos:start="3:63" pos:end="3:65">iov</name></decl></parameter>,

                                          <parameter pos:start="5:43" pos:end="5:53"><decl pos:start="5:43" pos:end="5:53"><type pos:start="5:43" pos:end="5:53"><name pos:start="5:43" pos:end="5:48">size_t</name></type> <name pos:start="5:50" pos:end="5:53">niov</name></decl></parameter>,

                                          <parameter pos:start="7:43" pos:end="7:50"><decl pos:start="7:43" pos:end="7:50"><type pos:start="7:43" pos:end="7:50"><name pos:start="7:43" pos:end="7:45">int</name> <modifier pos:start="7:47" pos:end="7:47">*</modifier></type><name pos:start="7:48" pos:end="7:50">fds</name></decl></parameter>,

                                          <parameter pos:start="9:43" pos:end="9:53"><decl pos:start="9:43" pos:end="9:53"><type pos:start="9:43" pos:end="9:53"><name pos:start="9:43" pos:end="9:48">size_t</name></type> <name pos:start="9:50" pos:end="9:53">nfds</name></decl></parameter>,

                                          <parameter pos:start="11:43" pos:end="11:54"><decl pos:start="11:43" pos:end="11:54"><type pos:start="11:43" pos:end="11:54"><name pos:start="11:43" pos:end="11:47">Error</name> <modifier pos:start="11:49" pos:end="11:49">*</modifier><modifier pos:start="11:50" pos:end="11:50">*</modifier></type><name pos:start="11:51" pos:end="11:54">errp</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="51:1">{<block_content pos:start="15:5" pos:end="49:15">

    <decl_stmt pos:start="15:5" pos:end="15:55"><decl pos:start="15:5" pos:end="15:54"><type pos:start="15:5" pos:end="15:23"><name pos:start="15:5" pos:end="15:21">QIOChannelCommand</name> <modifier pos:start="15:23" pos:end="15:23">*</modifier></type><name pos:start="15:24" pos:end="15:27">cioc</name> <init pos:start="15:29" pos:end="15:54">= <expr pos:start="15:31" pos:end="15:54"><call pos:start="15:31" pos:end="15:54"><name pos:start="15:31" pos:end="15:49">QIO_CHANNEL_COMMAND</name><argument_list pos:start="15:50" pos:end="15:54">(<argument pos:start="15:51" pos:end="15:53"><expr pos:start="15:51" pos:end="15:53"><name pos:start="15:51" pos:end="15:53">ioc</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">ssize_t</name></type> <name pos:start="17:13" pos:end="17:15">ret</name></decl>;</decl_stmt>



 <label pos:start="21:2" pos:end="21:7"><name pos:start="21:2" pos:end="21:6">retry</name>:</label>

    <expr_stmt pos:start="23:5" pos:end="23:43"><expr pos:start="23:5" pos:end="23:42"><name pos:start="23:5" pos:end="23:7">ret</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:42"><name pos:start="23:11" pos:end="23:16">writev</name><argument_list pos:start="23:17" pos:end="23:42">(<argument pos:start="23:18" pos:end="23:30"><expr pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:30"><name pos:start="23:18" pos:end="23:21">cioc</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:30">writefd</name></name></expr></argument>, <argument pos:start="23:33" pos:end="23:35"><expr pos:start="23:33" pos:end="23:35"><name pos:start="23:33" pos:end="23:35">iov</name></expr></argument>, <argument pos:start="23:38" pos:end="23:41"><expr pos:start="23:38" pos:end="23:41"><name pos:start="23:38" pos:end="23:41">niov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="47:5"><if pos:start="25:5" pos:end="47:5">if <condition pos:start="25:8" pos:end="25:17">(<expr pos:start="25:9" pos:end="25:16"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:14">&lt;=</operator> <literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr>)</condition> <block pos:start="25:19" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:18">

        <if_stmt pos:start="27:9" pos:end="33:9"><if pos:start="27:9" pos:end="33:9">if <condition pos:start="27:12" pos:end="29:33">(<expr pos:start="27:13" pos:end="29:32"><name pos:start="27:13" pos:end="27:17">errno</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <name pos:start="27:22" pos:end="27:27">EAGAIN</name> <operator pos:start="27:29" pos:end="27:30">||</operator>

            <name pos:start="29:13" pos:end="29:17">errno</name> <operator pos:start="29:19" pos:end="29:20">==</operator> <name pos:start="29:22" pos:end="29:32">EWOULDBLOCK</name></expr>)</condition> <block pos:start="29:35" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:41">

            <return pos:start="31:13" pos:end="31:41">return <expr pos:start="31:20" pos:end="31:40"><name pos:start="31:20" pos:end="31:40">QIO_CHANNEL_ERR_BLOCK</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:27">(<expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:17">errno</name> <operator pos:start="35:19" pos:end="35:20">==</operator> <name pos:start="35:22" pos:end="35:26">EINTR</name></expr>)</condition> <block pos:start="35:29" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

            <goto pos:start="37:13" pos:end="37:23">goto <name pos:start="37:18" pos:end="37:22">retry</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="41:9" pos:end="43:55"><expr pos:start="41:9" pos:end="43:54"><call pos:start="41:9" pos:end="43:54"><name pos:start="41:9" pos:end="41:24">error_setg_errno</name><argument_list pos:start="41:25" pos:end="43:54">(<argument pos:start="41:26" pos:end="41:29"><expr pos:start="41:26" pos:end="41:29"><name pos:start="41:26" pos:end="41:29">errp</name></expr></argument>, <argument pos:start="41:32" pos:end="41:36"><expr pos:start="41:32" pos:end="41:36"><name pos:start="41:32" pos:end="41:36">errno</name></expr></argument>, <argument pos:start="41:39" pos:end="41:42"><expr pos:start="41:39" pos:end="41:42"><literal type="string" pos:start="41:39" pos:end="41:42">"%s"</literal></expr></argument>,

                         <argument pos:start="43:26" pos:end="43:53"><expr pos:start="43:26" pos:end="43:53"><literal type="string" pos:start="43:26" pos:end="43:53">"Unable to write to command"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:15">return <expr pos:start="49:12" pos:end="49:14"><name pos:start="49:12" pos:end="49:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
