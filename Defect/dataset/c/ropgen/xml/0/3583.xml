<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3583.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mov_write_int8_metadata</name><parameter_list pos:start="1:35" pos:end="5:43">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:50">AVFormatContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:66">AVIOContext</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:70">pb</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:51"><decl pos:start="3:36" pos:end="3:51"><type pos:start="3:36" pos:end="3:51"><specifier pos:start="3:36" pos:end="3:40">const</specifier> <name pos:start="3:42" pos:end="3:45">char</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:51">name</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><specifier pos:start="3:54" pos:end="3:58">const</specifier> <name pos:start="3:60" pos:end="3:63">char</name> <modifier pos:start="3:65" pos:end="3:65">*</modifier></type><name pos:start="3:66" pos:end="3:68">tag</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:42"><decl pos:start="5:36" pos:end="5:42"><type pos:start="5:36" pos:end="5:42"><name pos:start="5:36" pos:end="5:38">int</name></type> <name pos:start="5:40" pos:end="5:42">len</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:17">

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVDictionaryEntry</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:24">t</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:15">num</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:54">(<expr pos:start="15:9" pos:end="15:53"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:11">t</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:52"><name pos:start="15:15" pos:end="15:25">av_dict_get</name><argument_list pos:start="15:26" pos:end="15:52">(<argument pos:start="15:27" pos:end="15:37"><expr pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:37"><name pos:start="15:27" pos:end="15:27">s</name><operator pos:start="15:28" pos:end="15:29">-&gt;</operator><name pos:start="15:30" pos:end="15:37">metadata</name></name></expr></argument>, <argument pos:start="15:40" pos:end="15:42"><expr pos:start="15:40" pos:end="15:42"><name pos:start="15:40" pos:end="15:42">tag</name></expr></argument>, <argument pos:start="15:45" pos:end="15:48"><expr pos:start="15:45" pos:end="15:48"><name pos:start="15:45" pos:end="15:48">NULL</name></expr></argument>, <argument pos:start="15:51" pos:end="15:51"><expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">0</literal></expr></argument>)</argument_list></call><operator pos:start="15:53" pos:end="15:53">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:7">num</name> <operator pos:start="19:9" pos:end="19:9">=</operator> <ternary pos:start="19:11" pos:end="19:32"><condition pos:start="19:11" pos:end="19:13"><expr pos:start="19:11" pos:end="19:11"><name pos:start="19:11" pos:end="19:11">t</name></expr> ?</condition><then pos:start="19:15" pos:end="19:28"> <expr pos:start="19:15" pos:end="19:28"><call pos:start="19:15" pos:end="19:28"><name pos:start="19:15" pos:end="19:18">atoi</name><argument_list pos:start="19:19" pos:end="19:28">(<argument pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:27"><name pos:start="19:20" pos:end="19:20">t</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:27">value</name></name></expr></argument>)</argument_list></call></expr> </then><else pos:start="19:30" pos:end="19:32">: <expr pos:start="19:32" pos:end="19:32"><literal type="number" pos:start="19:32" pos:end="19:32">0</literal></expr></else></ternary></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><call pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:13">avio_wb32</name><argument_list pos:start="23:14" pos:end="23:24">(<argument pos:start="23:15" pos:end="23:16"><expr pos:start="23:15" pos:end="23:16"><name pos:start="23:15" pos:end="23:16">pb</name></expr></argument>, <argument pos:start="23:19" pos:end="23:23"><expr pos:start="23:19" pos:end="23:23"><name pos:start="23:19" pos:end="23:21">len</name><operator pos:start="23:22" pos:end="23:22">+</operator><literal type="number" pos:start="23:23" pos:end="23:23">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:16">ffio_wfourcc</name><argument_list pos:start="25:17" pos:end="25:26">(<argument pos:start="25:18" pos:end="25:19"><expr pos:start="25:18" pos:end="25:19"><name pos:start="25:18" pos:end="25:19">pb</name></expr></argument>, <argument pos:start="25:22" pos:end="25:25"><expr pos:start="25:22" pos:end="25:25"><name pos:start="25:22" pos:end="25:25">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:34"><if pos:start="27:5" pos:end="27:35">if <condition pos:start="27:8" pos:end="27:15">(<expr pos:start="27:9" pos:end="27:14"><name pos:start="27:9" pos:end="27:11">len</name><operator pos:start="27:12" pos:end="27:13">==</operator><literal type="number" pos:start="27:14" pos:end="27:14">4</literal></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:35"><block_content pos:start="27:17" pos:end="27:35"> <expr_stmt pos:start="27:17" pos:end="27:35"><expr pos:start="27:17" pos:end="27:34"><call pos:start="27:17" pos:end="27:34"><name pos:start="27:17" pos:end="27:25">avio_wb32</name><argument_list pos:start="27:26" pos:end="27:34">(<argument pos:start="27:27" pos:end="27:28"><expr pos:start="27:27" pos:end="27:28"><name pos:start="27:27" pos:end="27:28">pb</name></expr></argument>, <argument pos:start="27:31" pos:end="27:33"><expr pos:start="27:31" pos:end="27:33"><name pos:start="27:31" pos:end="27:33">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="29:5" pos:end="29:34">else<block type="pseudo" pos:start="29:17" pos:end="29:34"><block_content pos:start="29:17" pos:end="29:34">        <expr_stmt pos:start="29:17" pos:end="29:34"><expr pos:start="29:17" pos:end="29:33"><call pos:start="29:17" pos:end="29:33"><name pos:start="29:17" pos:end="29:23">avio_w8</name> <argument_list pos:start="29:25" pos:end="29:33">(<argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><name pos:start="29:26" pos:end="29:27">pb</name></expr></argument>, <argument pos:start="29:30" pos:end="29:32"><expr pos:start="29:30" pos:end="29:32"><name pos:start="29:30" pos:end="29:32">num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <return pos:start="31:5" pos:end="31:17">return <expr pos:start="31:12" pos:end="31:16"><name pos:start="31:12" pos:end="31:14">len</name><operator pos:start="31:15" pos:end="31:15">+</operator><literal type="number" pos:start="31:16" pos:end="31:16">8</literal></expr>;</return>

</block_content>}</block></function>
</unit>
