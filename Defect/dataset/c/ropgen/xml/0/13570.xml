<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/13570.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">vtd_page_walk</name><parameter_list pos:start="1:25" pos:end="5:43">(<parameter pos:start="1:26" pos:end="1:44"><decl pos:start="1:26" pos:end="1:44"><type pos:start="1:26" pos:end="1:44"><name pos:start="1:26" pos:end="1:40">VTDContextEntry</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:44">ce</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:60"><decl pos:start="1:47" pos:end="1:60"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:54">uint64_t</name></type> <name pos:start="1:56" pos:end="1:60">start</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:74"><decl pos:start="1:63" pos:end="1:74"><type pos:start="1:63" pos:end="1:74"><name pos:start="1:63" pos:end="1:70">uint64_t</name></type> <name pos:start="1:72" pos:end="1:74">end</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:51"><decl pos:start="3:26" pos:end="3:51"><type pos:start="3:26" pos:end="3:51"><name pos:start="3:26" pos:end="3:43">vtd_page_walk_hook</name></type> <name pos:start="3:45" pos:end="3:51">hook_fn</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:66"><decl pos:start="3:54" pos:end="3:66"><type pos:start="3:54" pos:end="3:66"><name pos:start="3:54" pos:end="3:57">void</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:66">private</name></decl></parameter>,

                         <parameter pos:start="5:26" pos:end="5:42"><decl pos:start="5:26" pos:end="5:42"><type pos:start="5:26" pos:end="5:42"><name pos:start="5:26" pos:end="5:29">bool</name></type> <name pos:start="5:31" pos:end="5:42">notify_unmap</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="37:1">{<block_content pos:start="9:5" pos:end="35:64">

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:14">dma_addr_t</name></type> <name pos:start="9:16" pos:end="9:19">addr</name> <init pos:start="9:21" pos:end="9:46">= <expr pos:start="9:23" pos:end="9:46"><call pos:start="9:23" pos:end="9:46"><name pos:start="9:23" pos:end="9:42">vtd_ce_get_slpt_base</name><argument_list pos:start="9:43" pos:end="9:46">(<argument pos:start="9:44" pos:end="9:45"><expr pos:start="9:44" pos:end="9:45"><name pos:start="9:44" pos:end="9:45">ce</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:42"><decl pos:start="11:5" pos:end="11:41"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:18">level</name> <init pos:start="11:20" pos:end="11:41">= <expr pos:start="11:22" pos:end="11:41"><call pos:start="11:22" pos:end="11:41"><name pos:start="11:22" pos:end="11:37">vtd_ce_get_level</name><argument_list pos:start="11:38" pos:end="11:41">(<argument pos:start="11:39" pos:end="11:40"><expr pos:start="11:39" pos:end="11:40"><name pos:start="11:39" pos:end="11:40">ce</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><operator pos:start="15:9" pos:end="15:9">!</operator><call pos:start="15:10" pos:end="15:40"><name pos:start="15:10" pos:end="15:29">vtd_iova_range_check</name><argument_list pos:start="15:30" pos:end="15:40">(<argument pos:start="15:31" pos:end="15:35"><expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35">start</name></expr></argument>, <argument pos:start="15:38" pos:end="15:39"><expr pos:start="15:38" pos:end="15:39"><name pos:start="15:38" pos:end="15:39">ce</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:43" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:40">

        <return pos:start="17:9" pos:end="17:40">return <expr pos:start="17:16" pos:end="17:39"><operator pos:start="17:16" pos:end="17:16">-</operator><name pos:start="17:17" pos:end="17:39">VTD_FR_ADDR_BEYOND_MGAW</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="23:5" pos:end="29:5"><if pos:start="23:5" pos:end="29:5">if <condition pos:start="23:8" pos:end="23:39">(<expr pos:start="23:9" pos:end="23:38"><operator pos:start="23:9" pos:end="23:9">!</operator><call pos:start="23:10" pos:end="23:38"><name pos:start="23:10" pos:end="23:29">vtd_iova_range_check</name><argument_list pos:start="23:30" pos:end="23:38">(<argument pos:start="23:31" pos:end="23:33"><expr pos:start="23:31" pos:end="23:33"><name pos:start="23:31" pos:end="23:33">end</name></expr></argument>, <argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">ce</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:41" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:33">

        <comment type="block" pos:start="25:9" pos:end="25:52">/* Fix end so that it reaches the maximum */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:11">end</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:32"><name pos:start="27:15" pos:end="27:28">vtd_iova_limit</name><argument_list pos:start="27:29" pos:end="27:32">(<argument pos:start="27:30" pos:end="27:31"><expr pos:start="27:30" pos:end="27:31"><name pos:start="27:30" pos:end="27:31">ce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="33:5" pos:end="35:64">return <expr pos:start="33:12" pos:end="35:63"><call pos:start="33:12" pos:end="35:63"><name pos:start="33:12" pos:end="33:30">vtd_page_walk_level</name><argument_list pos:start="33:31" pos:end="35:63">(<argument pos:start="33:32" pos:end="33:35"><expr pos:start="33:32" pos:end="33:35"><name pos:start="33:32" pos:end="33:35">addr</name></expr></argument>, <argument pos:start="33:38" pos:end="33:42"><expr pos:start="33:38" pos:end="33:42"><name pos:start="33:38" pos:end="33:42">start</name></expr></argument>, <argument pos:start="33:45" pos:end="33:47"><expr pos:start="33:45" pos:end="33:47"><name pos:start="33:45" pos:end="33:47">end</name></expr></argument>, <argument pos:start="33:50" pos:end="33:56"><expr pos:start="33:50" pos:end="33:56"><name pos:start="33:50" pos:end="33:56">hook_fn</name></expr></argument>, <argument pos:start="33:59" pos:end="33:65"><expr pos:start="33:59" pos:end="33:65"><name pos:start="33:59" pos:end="33:65">private</name></expr></argument>,

                               <argument pos:start="35:32" pos:end="35:36"><expr pos:start="35:32" pos:end="35:36"><name pos:start="35:32" pos:end="35:36">level</name></expr></argument>, <argument pos:start="35:39" pos:end="35:42"><expr pos:start="35:39" pos:end="35:42"><name pos:start="35:39" pos:end="35:42">true</name></expr></argument>, <argument pos:start="35:45" pos:end="35:48"><expr pos:start="35:45" pos:end="35:48"><name pos:start="35:45" pos:end="35:48">true</name></expr></argument>, <argument pos:start="35:51" pos:end="35:62"><expr pos:start="35:51" pos:end="35:62"><name pos:start="35:51" pos:end="35:62">notify_unmap</name></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
