<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22551.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">DeviceState</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">qdev_device_add</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:39"><name pos:start="1:30" pos:end="1:37">QemuOpts</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:43">opts</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="129:1">{<block_content pos:start="5:5" pos:end="127:16">

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:18"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">DeviceClass</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">k</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:16"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:14">char</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:22">driver</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:29">path</name></decl>, <decl pos:start="7:32" pos:end="7:34"><type ref="prev" pos:start="7:5" pos:end="7:16"><modifier pos:start="7:32" pos:end="7:32">*</modifier></type><name pos:start="7:33" pos:end="7:34">id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:21">qdev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">BusState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:17">bus</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:42"><expr pos:start="15:5" pos:end="15:41"><name pos:start="15:5" pos:end="15:10">driver</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:41"><name pos:start="15:14" pos:end="15:25">qemu_opt_get</name><argument_list pos:start="15:26" pos:end="15:41">(<argument pos:start="15:27" pos:end="15:30"><expr pos:start="15:27" pos:end="15:30"><name pos:start="15:27" pos:end="15:30">opts</name></expr></argument>, <argument pos:start="15:33" pos:end="15:40"><expr pos:start="15:33" pos:end="15:40"><literal type="string" pos:start="15:33" pos:end="15:40">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="23:5"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:15">driver</name></expr>)</condition> <block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:20">

        <expr_stmt pos:start="19:9" pos:end="19:56"><expr pos:start="19:9" pos:end="19:55"><call pos:start="19:9" pos:end="19:55"><name pos:start="19:9" pos:end="19:21">qerror_report</name><argument_list pos:start="19:22" pos:end="19:55">(<argument pos:start="19:23" pos:end="19:44"><expr pos:start="19:23" pos:end="19:44"><name pos:start="19:23" pos:end="19:44">QERR_MISSING_PARAMETER</name></expr></argument>, <argument pos:start="19:47" pos:end="19:54"><expr pos:start="19:47" pos:end="19:54"><literal type="string" pos:start="19:47" pos:end="19:54">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:21">/* find driver */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:51"><expr pos:start="29:5" pos:end="29:50"><name pos:start="29:5" pos:end="29:5">k</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:20">DEVICE_CLASS</name><argument_list pos:start="29:21" pos:end="29:50">(<argument pos:start="29:22" pos:end="29:49"><expr pos:start="29:22" pos:end="29:49"><call pos:start="29:22" pos:end="29:49"><name pos:start="29:22" pos:end="29:41">object_class_by_name</name><argument_list pos:start="29:42" pos:end="29:49">(<argument pos:start="29:43" pos:end="29:48"><expr pos:start="29:43" pos:end="29:48"><name pos:start="29:43" pos:end="29:48">driver</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:18">/* find bus */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:37"><expr pos:start="35:5" pos:end="35:36"><name pos:start="35:5" pos:end="35:8">path</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:36"><name pos:start="35:12" pos:end="35:23">qemu_opt_get</name><argument_list pos:start="35:24" pos:end="35:36">(<argument pos:start="35:25" pos:end="35:28"><expr pos:start="35:25" pos:end="35:28"><name pos:start="35:25" pos:end="35:28">opts</name></expr></argument>, <argument pos:start="35:31" pos:end="35:35"><expr pos:start="35:31" pos:end="35:35"><literal type="string" pos:start="35:31" pos:end="35:35">"bus"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="71:5"><if pos:start="37:5" pos:end="57:5">if <condition pos:start="37:8" pos:end="37:21">(<expr pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:12">path</name> <operator pos:start="37:14" pos:end="37:15">!=</operator> <name pos:start="37:17" pos:end="37:20">NULL</name></expr>)</condition> <block pos:start="37:23" pos:end="57:5">{<block_content pos:start="39:9" pos:end="55:9">

        <expr_stmt pos:start="39:9" pos:end="39:30"><expr pos:start="39:9" pos:end="39:29"><name pos:start="39:9" pos:end="39:11">bus</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <call pos:start="39:15" pos:end="39:29"><name pos:start="39:15" pos:end="39:23">qbus_find</name><argument_list pos:start="39:24" pos:end="39:29">(<argument pos:start="39:25" pos:end="39:28"><expr pos:start="39:25" pos:end="39:28"><name pos:start="39:25" pos:end="39:28">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:17">(<expr pos:start="41:13" pos:end="41:16"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:16">bus</name></expr>)</condition> <block pos:start="41:19" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:24">

            <return pos:start="43:13" pos:end="43:24">return <expr pos:start="43:20" pos:end="43:23"><name pos:start="43:20" pos:end="43:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="47:9" pos:end="55:9"><if pos:start="47:9" pos:end="55:9">if <condition pos:start="47:12" pos:end="47:37">(<expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:21"><name pos:start="47:13" pos:end="47:15">bus</name><operator pos:start="47:16" pos:end="47:17">-&gt;</operator><name pos:start="47:18" pos:end="47:21">info</name></name> <operator pos:start="47:23" pos:end="47:24">!=</operator> <name pos:start="47:26" pos:end="47:36"><name pos:start="47:26" pos:end="47:26">k</name><operator pos:start="47:27" pos:end="47:28">-&gt;</operator><name pos:start="47:29" pos:end="47:36">bus_info</name></name></expr>)</condition> <block pos:start="47:39" pos:end="55:9">{<block_content pos:start="49:13" pos:end="53:24">

            <expr_stmt pos:start="49:13" pos:end="51:52"><expr pos:start="49:13" pos:end="51:51"><call pos:start="49:13" pos:end="51:51"><name pos:start="49:13" pos:end="49:25">qerror_report</name><argument_list pos:start="49:26" pos:end="51:51">(<argument pos:start="49:27" pos:end="49:49"><expr pos:start="49:27" pos:end="49:49"><name pos:start="49:27" pos:end="49:49">QERR_BAD_BUS_FOR_DEVICE</name></expr></argument>,

                           <argument pos:start="51:28" pos:end="51:33"><expr pos:start="51:28" pos:end="51:33"><name pos:start="51:28" pos:end="51:33">driver</name></expr></argument>, <argument pos:start="51:36" pos:end="51:50"><expr pos:start="51:36" pos:end="51:50"><name pos:start="51:36" pos:end="51:50"><name pos:start="51:36" pos:end="51:38">bus</name><operator pos:start="51:39" pos:end="51:40">-&gt;</operator><name pos:start="51:41" pos:end="51:44">info</name><operator pos:start="51:45" pos:end="51:46">-&gt;</operator><name pos:start="51:47" pos:end="51:50">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="53:13" pos:end="53:24">return <expr pos:start="53:20" pos:end="53:23"><name pos:start="53:20" pos:end="53:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="57:7" pos:end="71:5">else <block pos:start="57:12" pos:end="71:5">{<block_content pos:start="59:9" pos:end="69:9">

        <expr_stmt pos:start="59:9" pos:end="59:70"><expr pos:start="59:9" pos:end="59:69"><name pos:start="59:9" pos:end="59:11">bus</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:69"><name pos:start="59:15" pos:end="59:33">qbus_find_recursive</name><argument_list pos:start="59:34" pos:end="59:69">(<argument pos:start="59:35" pos:end="59:49"><expr pos:start="59:35" pos:end="59:49"><name pos:start="59:35" pos:end="59:49">main_system_bus</name></expr></argument>, <argument pos:start="59:52" pos:end="59:55"><expr pos:start="59:52" pos:end="59:55"><name pos:start="59:52" pos:end="59:55">NULL</name></expr></argument>, <argument pos:start="59:58" pos:end="59:68"><expr pos:start="59:58" pos:end="59:68"><name pos:start="59:58" pos:end="59:68"><name pos:start="59:58" pos:end="59:58">k</name><operator pos:start="59:59" pos:end="59:60">-&gt;</operator><name pos:start="59:61" pos:end="59:68">bus_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:17">(<expr pos:start="61:13" pos:end="61:16"><operator pos:start="61:13" pos:end="61:13">!</operator><name pos:start="61:14" pos:end="61:16">bus</name></expr>)</condition> <block pos:start="61:19" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:24">

            <expr_stmt pos:start="63:13" pos:end="65:53"><expr pos:start="63:13" pos:end="65:52"><call pos:start="63:13" pos:end="65:52"><name pos:start="63:13" pos:end="63:25">qerror_report</name><argument_list pos:start="63:26" pos:end="65:52">(<argument pos:start="63:27" pos:end="63:48"><expr pos:start="63:27" pos:end="63:48"><name pos:start="63:27" pos:end="63:48">QERR_NO_BUS_FOR_DEVICE</name></expr></argument>,

                          <argument pos:start="65:27" pos:end="65:32"><expr pos:start="65:27" pos:end="65:32"><name pos:start="65:27" pos:end="65:32">driver</name></expr></argument>, <argument pos:start="65:35" pos:end="65:51"><expr pos:start="65:35" pos:end="65:51"><name pos:start="65:35" pos:end="65:51"><name pos:start="65:35" pos:end="65:35">k</name><operator pos:start="65:36" pos:end="65:37">-&gt;</operator><name pos:start="65:38" pos:end="65:45">bus_info</name><operator pos:start="65:46" pos:end="65:47">-&gt;</operator><name pos:start="65:48" pos:end="65:51">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:24">return <expr pos:start="67:20" pos:end="67:23"><name pos:start="67:20" pos:end="67:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:44">(<expr pos:start="73:9" pos:end="73:43"><name pos:start="73:9" pos:end="73:20">qdev_hotplug</name> <operator pos:start="73:22" pos:end="73:23">&amp;&amp;</operator> <operator pos:start="73:25" pos:end="73:25">!</operator><name pos:start="73:26" pos:end="73:43"><name pos:start="73:26" pos:end="73:28">bus</name><operator pos:start="73:29" pos:end="73:30">-&gt;</operator><name pos:start="73:31" pos:end="73:43">allow_hotplug</name></name></expr>)</condition> <block pos:start="73:46" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:20">

        <expr_stmt pos:start="75:9" pos:end="75:54"><expr pos:start="75:9" pos:end="75:53"><call pos:start="75:9" pos:end="75:53"><name pos:start="75:9" pos:end="75:21">qerror_report</name><argument_list pos:start="75:22" pos:end="75:53">(<argument pos:start="75:23" pos:end="75:41"><expr pos:start="75:23" pos:end="75:41"><name pos:start="75:23" pos:end="75:41">QERR_BUS_NO_HOTPLUG</name></expr></argument>, <argument pos:start="75:44" pos:end="75:52"><expr pos:start="75:44" pos:end="75:52"><name pos:start="75:44" pos:end="75:52"><name pos:start="75:44" pos:end="75:46">bus</name><operator pos:start="75:47" pos:end="75:48">-&gt;</operator><name pos:start="75:49" pos:end="75:52">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:20">return <expr pos:start="77:16" pos:end="77:19"><name pos:start="77:16" pos:end="77:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="83:39">/* create device, set properties */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:46"><expr pos:start="85:5" pos:end="85:45"><name pos:start="85:5" pos:end="85:8">qdev</name> <operator pos:start="85:10" pos:end="85:10">=</operator> <call pos:start="85:12" pos:end="85:45"><name pos:start="85:12" pos:end="85:32">qdev_create_from_info</name><argument_list pos:start="85:33" pos:end="85:45">(<argument pos:start="85:34" pos:end="85:36"><expr pos:start="85:34" pos:end="85:36"><name pos:start="85:34" pos:end="85:36">bus</name></expr></argument>, <argument pos:start="85:39" pos:end="85:44"><expr pos:start="85:39" pos:end="85:44"><name pos:start="85:39" pos:end="85:44">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:28"><expr pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:6">id</name> <operator pos:start="87:8" pos:end="87:8">=</operator> <call pos:start="87:10" pos:end="87:27"><name pos:start="87:10" pos:end="87:21">qemu_opts_id</name><argument_list pos:start="87:22" pos:end="87:27">(<argument pos:start="87:23" pos:end="87:26"><expr pos:start="87:23" pos:end="87:26"><name pos:start="87:23" pos:end="87:26">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="107:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:11">(<expr pos:start="89:9" pos:end="89:10"><name pos:start="89:9" pos:end="89:10">id</name></expr>)</condition> <block pos:start="89:13" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:77">

        <expr_stmt pos:start="91:9" pos:end="91:22"><expr pos:start="91:9" pos:end="91:21"><name pos:start="91:9" pos:end="91:16"><name pos:start="91:9" pos:end="91:12">qdev</name><operator pos:start="91:13" pos:end="91:14">-&gt;</operator><name pos:start="91:15" pos:end="91:16">id</name></name> <operator pos:start="91:18" pos:end="91:18">=</operator> <name pos:start="91:20" pos:end="91:21">id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:77"><expr pos:start="93:9" pos:end="93:76"><call pos:start="93:9" pos:end="93:76"><name pos:start="93:9" pos:end="93:31">qdev_property_add_child</name><argument_list pos:start="93:32" pos:end="93:76">(<argument pos:start="93:33" pos:end="93:53"><expr pos:start="93:33" pos:end="93:53"><call pos:start="93:33" pos:end="93:53"><name pos:start="93:33" pos:end="93:51">qdev_get_peripheral</name><argument_list pos:start="93:52" pos:end="93:53">()</argument_list></call></expr></argument>, <argument pos:start="93:56" pos:end="93:63"><expr pos:start="93:56" pos:end="93:63"><name pos:start="93:56" pos:end="93:63"><name pos:start="93:56" pos:end="93:59">qdev</name><operator pos:start="93:60" pos:end="93:61">-&gt;</operator><name pos:start="93:62" pos:end="93:63">id</name></name></expr></argument>, <argument pos:start="93:66" pos:end="93:69"><expr pos:start="93:66" pos:end="93:69"><name pos:start="93:66" pos:end="93:69">qdev</name></expr></argument>, <argument pos:start="93:72" pos:end="93:75"><expr pos:start="93:72" pos:end="93:75"><name pos:start="93:72" pos:end="93:75">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="95:7" pos:end="107:5">else <block pos:start="95:12" pos:end="107:5">{<block_content pos:start="97:9" pos:end="105:21">

        <decl_stmt pos:start="97:9" pos:end="97:30"><decl pos:start="97:9" pos:end="97:29"><type pos:start="97:9" pos:end="97:18"><specifier pos:start="97:9" pos:end="97:14">static</specifier> <name pos:start="97:16" pos:end="97:18">int</name></type> <name pos:start="97:20" pos:end="97:29">anon_count</name></decl>;</decl_stmt>

        <decl_stmt pos:start="99:9" pos:end="99:66"><decl pos:start="99:9" pos:end="99:65"><type pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:13">gchar</name> <modifier pos:start="99:15" pos:end="99:15">*</modifier></type><name pos:start="99:16" pos:end="99:19">name</name> <init pos:start="99:21" pos:end="99:65">= <expr pos:start="99:23" pos:end="99:65"><call pos:start="99:23" pos:end="99:65"><name pos:start="99:23" pos:end="99:37">g_strdup_printf</name><argument_list pos:start="99:38" pos:end="99:65">(<argument pos:start="99:39" pos:end="99:50"><expr pos:start="99:39" pos:end="99:50"><literal type="string" pos:start="99:39" pos:end="99:50">"device[%d]"</literal></expr></argument>, <argument pos:start="99:53" pos:end="99:64"><expr pos:start="99:53" pos:end="99:64"><name pos:start="99:53" pos:end="99:62">anon_count</name><operator pos:start="99:63" pos:end="99:64">++</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="101:9" pos:end="103:44"><expr pos:start="101:9" pos:end="103:43"><call pos:start="101:9" pos:end="103:43"><name pos:start="101:9" pos:end="101:31">qdev_property_add_child</name><argument_list pos:start="101:32" pos:end="103:43">(<argument pos:start="101:33" pos:end="101:58"><expr pos:start="101:33" pos:end="101:58"><call pos:start="101:33" pos:end="101:58"><name pos:start="101:33" pos:end="101:56">qdev_get_peripheral_anon</name><argument_list pos:start="101:57" pos:end="101:58">()</argument_list></call></expr></argument>, <argument pos:start="101:61" pos:end="101:64"><expr pos:start="101:61" pos:end="101:64"><name pos:start="101:61" pos:end="101:64">name</name></expr></argument>,

                                <argument pos:start="103:33" pos:end="103:36"><expr pos:start="103:33" pos:end="103:36"><name pos:start="103:33" pos:end="103:36">qdev</name></expr></argument>, <argument pos:start="103:39" pos:end="103:42"><expr pos:start="103:39" pos:end="103:42"><name pos:start="103:39" pos:end="103:42">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:21"><expr pos:start="105:9" pos:end="105:20"><call pos:start="105:9" pos:end="105:20"><name pos:start="105:9" pos:end="105:14">g_free</name><argument_list pos:start="105:15" pos:end="105:20">(<argument pos:start="105:16" pos:end="105:19"><expr pos:start="105:16" pos:end="105:19"><name pos:start="105:16" pos:end="105:19">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>        

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:59">(<expr pos:start="109:9" pos:end="109:58"><call pos:start="109:9" pos:end="109:53"><name pos:start="109:9" pos:end="109:24">qemu_opt_foreach</name><argument_list pos:start="109:25" pos:end="109:53">(<argument pos:start="109:26" pos:end="109:29"><expr pos:start="109:26" pos:end="109:29"><name pos:start="109:26" pos:end="109:29">opts</name></expr></argument>, <argument pos:start="109:32" pos:end="109:43"><expr pos:start="109:32" pos:end="109:43"><name pos:start="109:32" pos:end="109:43">set_property</name></expr></argument>, <argument pos:start="109:46" pos:end="109:49"><expr pos:start="109:46" pos:end="109:49"><name pos:start="109:46" pos:end="109:49">qdev</name></expr></argument>, <argument pos:start="109:52" pos:end="109:52"><expr pos:start="109:52" pos:end="109:52"><literal type="number" pos:start="109:52" pos:end="109:52">1</literal></expr></argument>)</argument_list></call> <operator pos:start="109:55" pos:end="109:56">!=</operator> <literal type="number" pos:start="109:58" pos:end="109:58">0</literal></expr>)</condition> <block pos:start="109:61" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:20">

        <expr_stmt pos:start="111:9" pos:end="111:24"><expr pos:start="111:9" pos:end="111:23"><call pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:17">qdev_free</name><argument_list pos:start="111:18" pos:end="111:23">(<argument pos:start="111:19" pos:end="111:22"><expr pos:start="111:19" pos:end="111:22"><name pos:start="111:19" pos:end="111:22">qdev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:20">return <expr pos:start="113:16" pos:end="113:19"><name pos:start="113:16" pos:end="113:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:28">(<expr pos:start="117:9" pos:end="117:27"><call pos:start="117:9" pos:end="117:23"><name pos:start="117:9" pos:end="117:17">qdev_init</name><argument_list pos:start="117:18" pos:end="117:23">(<argument pos:start="117:19" pos:end="117:22"><expr pos:start="117:19" pos:end="117:22"><name pos:start="117:19" pos:end="117:22">qdev</name></expr></argument>)</argument_list></call> <operator pos:start="117:25" pos:end="117:25">&lt;</operator> <literal type="number" pos:start="117:27" pos:end="117:27">0</literal></expr>)</condition> <block pos:start="117:30" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:20">

        <expr_stmt pos:start="119:9" pos:end="119:55"><expr pos:start="119:9" pos:end="119:54"><call pos:start="119:9" pos:end="119:54"><name pos:start="119:9" pos:end="119:21">qerror_report</name><argument_list pos:start="119:22" pos:end="119:54">(<argument pos:start="119:23" pos:end="119:45"><expr pos:start="119:23" pos:end="119:45"><name pos:start="119:23" pos:end="119:45">QERR_DEVICE_INIT_FAILED</name></expr></argument>, <argument pos:start="119:48" pos:end="119:53"><expr pos:start="119:48" pos:end="119:53"><name pos:start="119:48" pos:end="119:53">driver</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:20">return <expr pos:start="121:16" pos:end="121:19"><name pos:start="121:16" pos:end="121:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="125:5" pos:end="125:22"><expr pos:start="125:5" pos:end="125:21"><name pos:start="125:5" pos:end="125:14"><name pos:start="125:5" pos:end="125:8">qdev</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:14">opts</name></name> <operator pos:start="125:16" pos:end="125:16">=</operator> <name pos:start="125:18" pos:end="125:21">opts</name></expr>;</expr_stmt>

    <return pos:start="127:5" pos:end="127:16">return <expr pos:start="127:12" pos:end="127:15"><name pos:start="127:12" pos:end="127:15">qdev</name></expr>;</return>

</block_content>}</block></function>
</unit>
