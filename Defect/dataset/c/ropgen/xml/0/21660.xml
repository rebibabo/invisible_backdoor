<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21660.c" pos:tabs="8"><function pos:start="1:1" pos:end="535:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:47">jpeg2000_decode_packets_po_iteration</name><parameter_list pos:start="1:48" pos:end="7:54">(<parameter pos:start="1:49" pos:end="1:73"><decl pos:start="1:49" pos:end="1:73"><type pos:start="1:49" pos:end="1:73"><name pos:start="1:49" pos:end="1:70">Jpeg2000DecoderContext</name> <modifier pos:start="1:72" pos:end="1:72">*</modifier></type><name pos:start="1:73" pos:end="1:73">s</name></decl></parameter>, <parameter pos:start="1:76" pos:end="1:93"><decl pos:start="1:76" pos:end="1:93"><type pos:start="1:76" pos:end="1:93"><name pos:start="1:76" pos:end="1:87">Jpeg2000Tile</name> <modifier pos:start="1:89" pos:end="1:89">*</modifier></type><name pos:start="1:90" pos:end="1:93">tile</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:54"><decl pos:start="3:46" pos:end="3:54"><type pos:start="3:46" pos:end="3:54"><name pos:start="3:46" pos:end="3:48">int</name></type> <name pos:start="3:50" pos:end="3:54">RSpoc</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:65"><decl pos:start="3:57" pos:end="3:65"><type pos:start="3:57" pos:end="3:65"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:65">CSpoc</name></decl></parameter>,

                                             <parameter pos:start="5:46" pos:end="5:55"><decl pos:start="5:46" pos:end="5:55"><type pos:start="5:46" pos:end="5:55"><name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:55">LYEpoc</name></decl></parameter>, <parameter pos:start="5:58" pos:end="5:66"><decl pos:start="5:58" pos:end="5:66"><type pos:start="5:58" pos:end="5:66"><name pos:start="5:58" pos:end="5:60">int</name></type> <name pos:start="5:62" pos:end="5:66">REpoc</name></decl></parameter>, <parameter pos:start="5:69" pos:end="5:77"><decl pos:start="5:69" pos:end="5:77"><type pos:start="5:69" pos:end="5:77"><name pos:start="5:69" pos:end="5:71">int</name></type> <name pos:start="5:73" pos:end="5:77">CEpoc</name></decl></parameter>,

                                             <parameter pos:start="7:46" pos:end="7:53"><decl pos:start="7:46" pos:end="7:53"><type pos:start="7:46" pos:end="7:53"><name pos:start="7:46" pos:end="7:48">int</name></type> <name pos:start="7:50" pos:end="7:53">Ppoc</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="535:1">{<block_content pos:start="11:5" pos:end="533:15">

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:11">ret</name> <init pos:start="11:13" pos:end="11:15">= <expr pos:start="11:15" pos:end="11:15"><literal type="number" pos:start="11:15" pos:end="11:15">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:55"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">layno</name></decl>, <decl pos:start="13:16" pos:end="13:25"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:16" pos:end="13:25">reslevelno</name></decl>, <decl pos:start="13:28" pos:end="13:33"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:28" pos:end="13:33">compno</name></decl>, <decl pos:start="13:36" pos:end="13:41"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:36" pos:end="13:41">precno</name></decl>, <decl pos:start="13:44" pos:end="13:54"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:44" pos:end="13:54">ok_reslevel</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:13"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">x</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:21"><decl pos:start="17:5" pos:end="17:20"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:16">tp_index</name> <init pos:start="17:18" pos:end="17:20">= <expr pos:start="17:20" pos:end="17:20"><literal type="number" pos:start="17:20" pos:end="17:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:14">step_x</name></decl>, <decl pos:start="19:17" pos:end="19:22"><type ref="prev" pos:start="19:5" pos:end="19:7"/><name pos:start="19:17" pos:end="19:22">step_y</name></decl>;</decl_stmt>



    <switch pos:start="23:5" pos:end="529:5">switch <condition pos:start="23:12" pos:end="23:17">(<expr pos:start="23:13" pos:end="23:16"><name pos:start="23:13" pos:end="23:16">Ppoc</name></expr>)</condition> <block pos:start="23:19" pos:end="529:5">{<block_content pos:start="25:5" pos:end="527:14">

    <case pos:start="25:5" pos:end="25:28">case <expr pos:start="25:10" pos:end="25:27"><name pos:start="25:10" pos:end="25:27">JPEG2000_PGOD_RLCP</name></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:67"><expr pos:start="27:9" pos:end="27:66"><call pos:start="27:9" pos:end="27:66"><name pos:start="27:9" pos:end="27:14">av_log</name><argument_list pos:start="27:15" pos:end="27:66">(<argument pos:start="27:16" pos:end="27:23"><expr pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:23"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:23">avctx</name></name></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><name pos:start="27:26" pos:end="27:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="27:40" pos:end="27:65"><expr pos:start="27:40" pos:end="27:65"><literal type="string" pos:start="27:40" pos:end="27:65">"Progression order RLCP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:19">ok_reslevel</name> <operator pos:start="29:21" pos:end="29:21">=</operator> <literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr>;</expr_stmt>

        <for pos:start="31:9" pos:end="71:9">for <control pos:start="31:13" pos:end="31:81">(<init pos:start="31:14" pos:end="31:32"><expr pos:start="31:14" pos:end="31:31"><name pos:start="31:14" pos:end="31:23">reslevelno</name> <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:31">RSpoc</name></expr>;</init> <condition pos:start="31:34" pos:end="31:67"><expr pos:start="31:34" pos:end="31:66"><name pos:start="31:34" pos:end="31:44">ok_reslevel</name> <operator pos:start="31:46" pos:end="31:47">&amp;&amp;</operator> <name pos:start="31:49" pos:end="31:58">reslevelno</name> <operator pos:start="31:60" pos:end="31:60">&lt;</operator> <name pos:start="31:62" pos:end="31:66">REpoc</name></expr>;</condition> <incr pos:start="31:69" pos:end="31:80"><expr pos:start="31:69" pos:end="31:80"><name pos:start="31:69" pos:end="31:78">reslevelno</name><operator pos:start="31:79" pos:end="31:80">++</operator></expr></incr>)</control> <block pos:start="31:83" pos:end="71:9">{<block_content pos:start="33:13" pos:end="69:13">

            <expr_stmt pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:23">ok_reslevel</name> <operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:27">0</literal></expr>;</expr_stmt>

            <for pos:start="35:13" pos:end="69:13">for <control pos:start="35:17" pos:end="35:52">(<init pos:start="35:18" pos:end="35:27"><expr pos:start="35:18" pos:end="35:26"><name pos:start="35:18" pos:end="35:22">layno</name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>;</init> <condition pos:start="35:29" pos:end="35:43"><expr pos:start="35:29" pos:end="35:42"><name pos:start="35:29" pos:end="35:33">layno</name> <operator pos:start="35:35" pos:end="35:35">&lt;</operator> <name pos:start="35:37" pos:end="35:42">LYEpoc</name></expr>;</condition> <incr pos:start="35:45" pos:end="35:51"><expr pos:start="35:45" pos:end="35:51"><name pos:start="35:45" pos:end="35:49">layno</name><operator pos:start="35:50" pos:end="35:51">++</operator></expr></incr>)</control> <block pos:start="35:54" pos:end="69:13">{<block_content pos:start="37:17" pos:end="67:17">

                <for pos:start="37:17" pos:end="67:17">for <control pos:start="37:21" pos:end="37:62">(<init pos:start="37:22" pos:end="37:36"><expr pos:start="37:22" pos:end="37:35"><name pos:start="37:22" pos:end="37:27">compno</name> <operator pos:start="37:29" pos:end="37:29">=</operator> <name pos:start="37:31" pos:end="37:35">CSpoc</name></expr>;</init> <condition pos:start="37:38" pos:end="37:52"><expr pos:start="37:38" pos:end="37:51"><name pos:start="37:38" pos:end="37:43">compno</name> <operator pos:start="37:45" pos:end="37:45">&lt;</operator> <name pos:start="37:47" pos:end="37:51">CEpoc</name></expr>;</condition> <incr pos:start="37:54" pos:end="37:61"><expr pos:start="37:54" pos:end="37:61"><name pos:start="37:54" pos:end="37:59">compno</name><operator pos:start="37:60" pos:end="37:61">++</operator></expr></incr>)</control> <block pos:start="37:64" pos:end="67:17">{<block_content pos:start="39:21" pos:end="65:21">

                    <decl_stmt pos:start="39:21" pos:end="39:72"><decl pos:start="39:21" pos:end="39:71"><type pos:start="39:21" pos:end="39:41"><name pos:start="39:21" pos:end="39:39">Jpeg2000CodingStyle</name> <modifier pos:start="39:41" pos:end="39:41">*</modifier></type><name pos:start="39:42" pos:end="39:47">codsty</name> <init pos:start="39:49" pos:end="39:71">= <expr pos:start="39:51" pos:end="39:71"><name pos:start="39:51" pos:end="39:62"><name pos:start="39:51" pos:end="39:54">tile</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:62">codsty</name></name> <operator pos:start="39:64" pos:end="39:64">+</operator> <name pos:start="39:66" pos:end="39:71">compno</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="41:21" pos:end="41:72"><decl pos:start="41:21" pos:end="41:71"><type pos:start="41:21" pos:end="41:40"><name pos:start="41:21" pos:end="41:38">Jpeg2000QuantStyle</name> <modifier pos:start="41:40" pos:end="41:40">*</modifier></type><name pos:start="41:41" pos:end="41:46">qntsty</name>  <init pos:start="41:49" pos:end="41:71">= <expr pos:start="41:51" pos:end="41:71"><name pos:start="41:51" pos:end="41:62"><name pos:start="41:51" pos:end="41:54">tile</name><operator pos:start="41:55" pos:end="41:56">-&gt;</operator><name pos:start="41:57" pos:end="41:62">qntsty</name></name> <operator pos:start="41:64" pos:end="41:64">+</operator> <name pos:start="41:66" pos:end="41:71">compno</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="43:21" pos:end="65:21"><if pos:start="43:21" pos:end="65:21">if <condition pos:start="43:24" pos:end="43:56">(<expr pos:start="43:25" pos:end="43:55"><name pos:start="43:25" pos:end="43:34">reslevelno</name> <operator pos:start="43:36" pos:end="43:36">&lt;</operator> <name pos:start="43:38" pos:end="43:55"><name pos:start="43:38" pos:end="43:43">codsty</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:55">nreslevels</name></name></expr>)</condition> <block pos:start="43:58" pos:end="65:21">{<block_content pos:start="45:25" pos:end="63:43">

                        <decl_stmt pos:start="45:25" pos:end="47:59"><decl pos:start="45:25" pos:end="47:58"><type pos:start="45:25" pos:end="45:42"><name pos:start="45:25" pos:end="45:40">Jpeg2000ResLevel</name> <modifier pos:start="45:42" pos:end="45:42">*</modifier></type><name pos:start="45:43" pos:end="45:48">rlevel</name> <init pos:start="45:50" pos:end="47:58">= <expr pos:start="45:52" pos:end="47:58"><name pos:start="45:52" pos:end="45:69"><name pos:start="45:52" pos:end="45:55">tile</name><operator pos:start="45:56" pos:end="45:57">-&gt;</operator><name pos:start="45:58" pos:end="45:61">comp</name><index pos:start="45:62" pos:end="45:69">[<expr pos:start="45:63" pos:end="45:68"><name pos:start="45:63" pos:end="45:68">compno</name></expr>]</index></name><operator pos:start="45:70" pos:end="45:70">.</operator><name pos:start="45:71" pos:end="45:78">reslevel</name> <operator pos:start="45:80" pos:end="45:80">+</operator>

                                                <name pos:start="47:49" pos:end="47:58">reslevelno</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="49:25" pos:end="49:40"><expr pos:start="49:25" pos:end="49:39"><name pos:start="49:25" pos:end="49:35">ok_reslevel</name> <operator pos:start="49:37" pos:end="49:37">=</operator> <literal type="number" pos:start="49:39" pos:end="49:39">1</literal></expr>;</expr_stmt>

                        <for pos:start="51:25" pos:end="63:43">for <control pos:start="51:29" pos:end="51:110">(<init pos:start="51:30" pos:end="51:40"><expr pos:start="51:30" pos:end="51:39"><name pos:start="51:30" pos:end="51:35">precno</name> <operator pos:start="51:37" pos:end="51:37">=</operator> <literal type="number" pos:start="51:39" pos:end="51:39">0</literal></expr>;</init> <condition pos:start="51:42" pos:end="51:100"><expr pos:start="51:42" pos:end="51:99"><name pos:start="51:42" pos:end="51:47">precno</name> <operator pos:start="51:49" pos:end="51:49">&lt;</operator> <name pos:start="51:51" pos:end="51:73"><name pos:start="51:51" pos:end="51:56">rlevel</name><operator pos:start="51:57" pos:end="51:58">-&gt;</operator><name pos:start="51:59" pos:end="51:73">num_precincts_x</name></name> <operator pos:start="51:75" pos:end="51:75">*</operator> <name pos:start="51:77" pos:end="51:99"><name pos:start="51:77" pos:end="51:82">rlevel</name><operator pos:start="51:83" pos:end="51:84">-&gt;</operator><name pos:start="51:85" pos:end="51:99">num_precincts_y</name></name></expr>;</condition> <incr pos:start="51:102" pos:end="51:109"><expr pos:start="51:102" pos:end="51:109"><name pos:start="51:102" pos:end="51:107">precno</name><operator pos:start="51:108" pos:end="51:109">++</operator></expr></incr>)</control><block type="pseudo" pos:start="53:29" pos:end="63:43"><block_content pos:start="53:29" pos:end="63:43">

                            <if_stmt pos:start="53:29" pos:end="63:43"><if pos:start="53:29" pos:end="63:43">if <condition pos:start="53:32" pos:end="61:87">(<expr pos:start="53:33" pos:end="61:86"><operator pos:start="53:33" pos:end="53:33">(</operator><name pos:start="53:34" pos:end="53:36">ret</name> <operator pos:start="53:38" pos:end="53:38">=</operator> <call pos:start="53:40" pos:end="61:81"><name pos:start="53:40" pos:end="53:61">jpeg2000_decode_packet</name><argument_list pos:start="53:62" pos:end="61:81">(<argument pos:start="53:63" pos:end="53:63"><expr pos:start="53:63" pos:end="53:63"><name pos:start="53:63" pos:end="53:63">s</name></expr></argument>, <argument pos:start="53:66" pos:end="53:69"><expr pos:start="53:66" pos:end="53:69"><name pos:start="53:66" pos:end="53:69">tile</name></expr></argument>, <argument pos:start="53:72" pos:end="53:80"><expr pos:start="53:72" pos:end="53:80"><operator pos:start="53:72" pos:end="53:72">&amp;</operator><name pos:start="53:73" pos:end="53:80">tp_index</name></expr></argument>,

                                                              <argument pos:start="55:63" pos:end="55:68"><expr pos:start="55:63" pos:end="55:68"><name pos:start="55:63" pos:end="55:68">codsty</name></expr></argument>, <argument pos:start="55:71" pos:end="55:76"><expr pos:start="55:71" pos:end="55:76"><name pos:start="55:71" pos:end="55:76">rlevel</name></expr></argument>,

                                                              <argument pos:start="57:63" pos:end="57:68"><expr pos:start="57:63" pos:end="57:68"><name pos:start="57:63" pos:end="57:68">precno</name></expr></argument>, <argument pos:start="57:71" pos:end="57:75"><expr pos:start="57:71" pos:end="57:75"><name pos:start="57:71" pos:end="57:75">layno</name></expr></argument>,

                                                              <argument pos:start="59:63" pos:end="59:120"><expr pos:start="59:63" pos:end="59:120"><name pos:start="59:63" pos:end="59:74"><name pos:start="59:63" pos:end="59:68">qntsty</name><operator pos:start="59:69" pos:end="59:70">-&gt;</operator><name pos:start="59:71" pos:end="59:74">expn</name></name> <operator pos:start="59:76" pos:end="59:76">+</operator> <operator pos:start="59:78" pos:end="59:78">(</operator><ternary pos:start="59:79" pos:end="59:119"><condition pos:start="59:79" pos:end="59:90"><expr pos:start="59:79" pos:end="59:88"><name pos:start="59:79" pos:end="59:88">reslevelno</name></expr> ?</condition><then pos:start="59:92" pos:end="59:115"> <expr pos:start="59:92" pos:end="59:115"><literal type="number" pos:start="59:92" pos:end="59:92">3</literal> <operator pos:start="59:94" pos:end="59:94">*</operator> <operator pos:start="59:96" pos:end="59:96">(</operator><name pos:start="59:97" pos:end="59:106">reslevelno</name> <operator pos:start="59:108" pos:end="59:108">-</operator> <literal type="number" pos:start="59:110" pos:end="59:110">1</literal><operator pos:start="59:111" pos:end="59:111">)</operator> <operator pos:start="59:113" pos:end="59:113">+</operator> <literal type="number" pos:start="59:115" pos:end="59:115">1</literal></expr> </then><else pos:start="59:117" pos:end="59:119">: <expr pos:start="59:119" pos:end="59:119"><literal type="number" pos:start="59:119" pos:end="59:119">0</literal></expr></else></ternary><operator pos:start="59:120" pos:end="59:120">)</operator></expr></argument>,

                                                              <argument pos:start="61:63" pos:end="61:80"><expr pos:start="61:63" pos:end="61:80"><name pos:start="61:63" pos:end="61:80"><name pos:start="61:63" pos:end="61:68">qntsty</name><operator pos:start="61:69" pos:end="61:70">-&gt;</operator><name pos:start="61:71" pos:end="61:80">nguardbits</name></name></expr></argument>)</argument_list></call><operator pos:start="61:82" pos:end="61:82">)</operator> <operator pos:start="61:84" pos:end="61:84">&lt;</operator> <literal type="number" pos:start="61:86" pos:end="61:86">0</literal></expr>)</condition><block type="pseudo" pos:start="63:33" pos:end="63:43"><block_content pos:start="63:33" pos:end="63:43">

                                <return pos:start="63:33" pos:end="63:43">return <expr pos:start="63:40" pos:end="63:42"><name pos:start="63:40" pos:end="63:42">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="73:9" pos:end="73:14">break;</break>



    <case pos:start="77:5" pos:end="77:28">case <expr pos:start="77:10" pos:end="77:27"><name pos:start="77:10" pos:end="77:27">JPEG2000_PGOD_LRCP</name></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:67"><expr pos:start="79:9" pos:end="79:66"><call pos:start="79:9" pos:end="79:66"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:66">(<argument pos:start="79:16" pos:end="79:23"><expr pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:23">avctx</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="79:40" pos:end="79:65"><expr pos:start="79:40" pos:end="79:65"><literal type="string" pos:start="79:40" pos:end="79:65">"Progression order LRCP\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="81:9" pos:end="123:9">for <control pos:start="81:13" pos:end="81:48">(<init pos:start="81:14" pos:end="81:23"><expr pos:start="81:14" pos:end="81:22"><name pos:start="81:14" pos:end="81:18">layno</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <literal type="number" pos:start="81:22" pos:end="81:22">0</literal></expr>;</init> <condition pos:start="81:25" pos:end="81:39"><expr pos:start="81:25" pos:end="81:38"><name pos:start="81:25" pos:end="81:29">layno</name> <operator pos:start="81:31" pos:end="81:31">&lt;</operator> <name pos:start="81:33" pos:end="81:38">LYEpoc</name></expr>;</condition> <incr pos:start="81:41" pos:end="81:47"><expr pos:start="81:41" pos:end="81:47"><name pos:start="81:41" pos:end="81:45">layno</name><operator pos:start="81:46" pos:end="81:47">++</operator></expr></incr>)</control> <block pos:start="81:50" pos:end="123:9">{<block_content pos:start="83:13" pos:end="121:13">

            <expr_stmt pos:start="83:13" pos:end="83:28"><expr pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:23">ok_reslevel</name> <operator pos:start="83:25" pos:end="83:25">=</operator> <literal type="number" pos:start="83:27" pos:end="83:27">1</literal></expr>;</expr_stmt>

            <for pos:start="85:13" pos:end="121:13">for <control pos:start="85:17" pos:end="85:85">(<init pos:start="85:18" pos:end="85:36"><expr pos:start="85:18" pos:end="85:35"><name pos:start="85:18" pos:end="85:27">reslevelno</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <name pos:start="85:31" pos:end="85:35">RSpoc</name></expr>;</init> <condition pos:start="85:38" pos:end="85:71"><expr pos:start="85:38" pos:end="85:70"><name pos:start="85:38" pos:end="85:48">ok_reslevel</name> <operator pos:start="85:50" pos:end="85:51">&amp;&amp;</operator> <name pos:start="85:53" pos:end="85:62">reslevelno</name> <operator pos:start="85:64" pos:end="85:64">&lt;</operator> <name pos:start="85:66" pos:end="85:70">REpoc</name></expr>;</condition> <incr pos:start="85:73" pos:end="85:84"><expr pos:start="85:73" pos:end="85:84"><name pos:start="85:73" pos:end="85:82">reslevelno</name><operator pos:start="85:83" pos:end="85:84">++</operator></expr></incr>)</control> <block pos:start="85:87" pos:end="121:13">{<block_content pos:start="87:17" pos:end="119:17">

                <expr_stmt pos:start="87:17" pos:end="87:32"><expr pos:start="87:17" pos:end="87:31"><name pos:start="87:17" pos:end="87:27">ok_reslevel</name> <operator pos:start="87:29" pos:end="87:29">=</operator> <literal type="number" pos:start="87:31" pos:end="87:31">0</literal></expr>;</expr_stmt>

                <for pos:start="89:17" pos:end="119:17">for <control pos:start="89:21" pos:end="89:62">(<init pos:start="89:22" pos:end="89:36"><expr pos:start="89:22" pos:end="89:35"><name pos:start="89:22" pos:end="89:27">compno</name> <operator pos:start="89:29" pos:end="89:29">=</operator> <name pos:start="89:31" pos:end="89:35">CSpoc</name></expr>;</init> <condition pos:start="89:38" pos:end="89:52"><expr pos:start="89:38" pos:end="89:51"><name pos:start="89:38" pos:end="89:43">compno</name> <operator pos:start="89:45" pos:end="89:45">&lt;</operator> <name pos:start="89:47" pos:end="89:51">CEpoc</name></expr>;</condition> <incr pos:start="89:54" pos:end="89:61"><expr pos:start="89:54" pos:end="89:61"><name pos:start="89:54" pos:end="89:59">compno</name><operator pos:start="89:60" pos:end="89:61">++</operator></expr></incr>)</control> <block pos:start="89:64" pos:end="119:17">{<block_content pos:start="91:21" pos:end="117:21">

                    <decl_stmt pos:start="91:21" pos:end="91:72"><decl pos:start="91:21" pos:end="91:71"><type pos:start="91:21" pos:end="91:41"><name pos:start="91:21" pos:end="91:39">Jpeg2000CodingStyle</name> <modifier pos:start="91:41" pos:end="91:41">*</modifier></type><name pos:start="91:42" pos:end="91:47">codsty</name> <init pos:start="91:49" pos:end="91:71">= <expr pos:start="91:51" pos:end="91:71"><name pos:start="91:51" pos:end="91:62"><name pos:start="91:51" pos:end="91:54">tile</name><operator pos:start="91:55" pos:end="91:56">-&gt;</operator><name pos:start="91:57" pos:end="91:62">codsty</name></name> <operator pos:start="91:64" pos:end="91:64">+</operator> <name pos:start="91:66" pos:end="91:71">compno</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="93:21" pos:end="93:72"><decl pos:start="93:21" pos:end="93:71"><type pos:start="93:21" pos:end="93:40"><name pos:start="93:21" pos:end="93:38">Jpeg2000QuantStyle</name> <modifier pos:start="93:40" pos:end="93:40">*</modifier></type><name pos:start="93:41" pos:end="93:46">qntsty</name>  <init pos:start="93:49" pos:end="93:71">= <expr pos:start="93:51" pos:end="93:71"><name pos:start="93:51" pos:end="93:62"><name pos:start="93:51" pos:end="93:54">tile</name><operator pos:start="93:55" pos:end="93:56">-&gt;</operator><name pos:start="93:57" pos:end="93:62">qntsty</name></name> <operator pos:start="93:64" pos:end="93:64">+</operator> <name pos:start="93:66" pos:end="93:71">compno</name></expr></init></decl>;</decl_stmt>

                    <if_stmt pos:start="95:21" pos:end="117:21"><if pos:start="95:21" pos:end="117:21">if <condition pos:start="95:24" pos:end="95:56">(<expr pos:start="95:25" pos:end="95:55"><name pos:start="95:25" pos:end="95:34">reslevelno</name> <operator pos:start="95:36" pos:end="95:36">&lt;</operator> <name pos:start="95:38" pos:end="95:55"><name pos:start="95:38" pos:end="95:43">codsty</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:55">nreslevels</name></name></expr>)</condition> <block pos:start="95:58" pos:end="117:21">{<block_content pos:start="97:25" pos:end="115:43">

                        <decl_stmt pos:start="97:25" pos:end="99:59"><decl pos:start="97:25" pos:end="99:58"><type pos:start="97:25" pos:end="97:42"><name pos:start="97:25" pos:end="97:40">Jpeg2000ResLevel</name> <modifier pos:start="97:42" pos:end="97:42">*</modifier></type><name pos:start="97:43" pos:end="97:48">rlevel</name> <init pos:start="97:50" pos:end="99:58">= <expr pos:start="97:52" pos:end="99:58"><name pos:start="97:52" pos:end="97:69"><name pos:start="97:52" pos:end="97:55">tile</name><operator pos:start="97:56" pos:end="97:57">-&gt;</operator><name pos:start="97:58" pos:end="97:61">comp</name><index pos:start="97:62" pos:end="97:69">[<expr pos:start="97:63" pos:end="97:68"><name pos:start="97:63" pos:end="97:68">compno</name></expr>]</index></name><operator pos:start="97:70" pos:end="97:70">.</operator><name pos:start="97:71" pos:end="97:78">reslevel</name> <operator pos:start="97:80" pos:end="97:80">+</operator>

                                                <name pos:start="99:49" pos:end="99:58">reslevelno</name></expr></init></decl>;</decl_stmt>

                        <expr_stmt pos:start="101:25" pos:end="101:40"><expr pos:start="101:25" pos:end="101:39"><name pos:start="101:25" pos:end="101:35">ok_reslevel</name> <operator pos:start="101:37" pos:end="101:37">=</operator> <literal type="number" pos:start="101:39" pos:end="101:39">1</literal></expr>;</expr_stmt>

                        <for pos:start="103:25" pos:end="115:43">for <control pos:start="103:29" pos:end="103:110">(<init pos:start="103:30" pos:end="103:40"><expr pos:start="103:30" pos:end="103:39"><name pos:start="103:30" pos:end="103:35">precno</name> <operator pos:start="103:37" pos:end="103:37">=</operator> <literal type="number" pos:start="103:39" pos:end="103:39">0</literal></expr>;</init> <condition pos:start="103:42" pos:end="103:100"><expr pos:start="103:42" pos:end="103:99"><name pos:start="103:42" pos:end="103:47">precno</name> <operator pos:start="103:49" pos:end="103:49">&lt;</operator> <name pos:start="103:51" pos:end="103:73"><name pos:start="103:51" pos:end="103:56">rlevel</name><operator pos:start="103:57" pos:end="103:58">-&gt;</operator><name pos:start="103:59" pos:end="103:73">num_precincts_x</name></name> <operator pos:start="103:75" pos:end="103:75">*</operator> <name pos:start="103:77" pos:end="103:99"><name pos:start="103:77" pos:end="103:82">rlevel</name><operator pos:start="103:83" pos:end="103:84">-&gt;</operator><name pos:start="103:85" pos:end="103:99">num_precincts_y</name></name></expr>;</condition> <incr pos:start="103:102" pos:end="103:109"><expr pos:start="103:102" pos:end="103:109"><name pos:start="103:102" pos:end="103:107">precno</name><operator pos:start="103:108" pos:end="103:109">++</operator></expr></incr>)</control><block type="pseudo" pos:start="105:29" pos:end="115:43"><block_content pos:start="105:29" pos:end="115:43">

                            <if_stmt pos:start="105:29" pos:end="115:43"><if pos:start="105:29" pos:end="115:43">if <condition pos:start="105:32" pos:end="113:87">(<expr pos:start="105:33" pos:end="113:86"><operator pos:start="105:33" pos:end="105:33">(</operator><name pos:start="105:34" pos:end="105:36">ret</name> <operator pos:start="105:38" pos:end="105:38">=</operator> <call pos:start="105:40" pos:end="113:81"><name pos:start="105:40" pos:end="105:61">jpeg2000_decode_packet</name><argument_list pos:start="105:62" pos:end="113:81">(<argument pos:start="105:63" pos:end="105:63"><expr pos:start="105:63" pos:end="105:63"><name pos:start="105:63" pos:end="105:63">s</name></expr></argument>, <argument pos:start="105:66" pos:end="105:69"><expr pos:start="105:66" pos:end="105:69"><name pos:start="105:66" pos:end="105:69">tile</name></expr></argument>, <argument pos:start="105:72" pos:end="105:80"><expr pos:start="105:72" pos:end="105:80"><operator pos:start="105:72" pos:end="105:72">&amp;</operator><name pos:start="105:73" pos:end="105:80">tp_index</name></expr></argument>,

                                                              <argument pos:start="107:63" pos:end="107:68"><expr pos:start="107:63" pos:end="107:68"><name pos:start="107:63" pos:end="107:68">codsty</name></expr></argument>, <argument pos:start="107:71" pos:end="107:76"><expr pos:start="107:71" pos:end="107:76"><name pos:start="107:71" pos:end="107:76">rlevel</name></expr></argument>,

                                                              <argument pos:start="109:63" pos:end="109:68"><expr pos:start="109:63" pos:end="109:68"><name pos:start="109:63" pos:end="109:68">precno</name></expr></argument>, <argument pos:start="109:71" pos:end="109:75"><expr pos:start="109:71" pos:end="109:75"><name pos:start="109:71" pos:end="109:75">layno</name></expr></argument>,

                                                              <argument pos:start="111:63" pos:end="111:120"><expr pos:start="111:63" pos:end="111:120"><name pos:start="111:63" pos:end="111:74"><name pos:start="111:63" pos:end="111:68">qntsty</name><operator pos:start="111:69" pos:end="111:70">-&gt;</operator><name pos:start="111:71" pos:end="111:74">expn</name></name> <operator pos:start="111:76" pos:end="111:76">+</operator> <operator pos:start="111:78" pos:end="111:78">(</operator><ternary pos:start="111:79" pos:end="111:119"><condition pos:start="111:79" pos:end="111:90"><expr pos:start="111:79" pos:end="111:88"><name pos:start="111:79" pos:end="111:88">reslevelno</name></expr> ?</condition><then pos:start="111:92" pos:end="111:115"> <expr pos:start="111:92" pos:end="111:115"><literal type="number" pos:start="111:92" pos:end="111:92">3</literal> <operator pos:start="111:94" pos:end="111:94">*</operator> <operator pos:start="111:96" pos:end="111:96">(</operator><name pos:start="111:97" pos:end="111:106">reslevelno</name> <operator pos:start="111:108" pos:end="111:108">-</operator> <literal type="number" pos:start="111:110" pos:end="111:110">1</literal><operator pos:start="111:111" pos:end="111:111">)</operator> <operator pos:start="111:113" pos:end="111:113">+</operator> <literal type="number" pos:start="111:115" pos:end="111:115">1</literal></expr> </then><else pos:start="111:117" pos:end="111:119">: <expr pos:start="111:119" pos:end="111:119"><literal type="number" pos:start="111:119" pos:end="111:119">0</literal></expr></else></ternary><operator pos:start="111:120" pos:end="111:120">)</operator></expr></argument>,

                                                              <argument pos:start="113:63" pos:end="113:80"><expr pos:start="113:63" pos:end="113:80"><name pos:start="113:63" pos:end="113:80"><name pos:start="113:63" pos:end="113:68">qntsty</name><operator pos:start="113:69" pos:end="113:70">-&gt;</operator><name pos:start="113:71" pos:end="113:80">nguardbits</name></name></expr></argument>)</argument_list></call><operator pos:start="113:82" pos:end="113:82">)</operator> <operator pos:start="113:84" pos:end="113:84">&lt;</operator> <literal type="number" pos:start="113:86" pos:end="113:86">0</literal></expr>)</condition><block type="pseudo" pos:start="115:33" pos:end="115:43"><block_content pos:start="115:33" pos:end="115:43">

                                <return pos:start="115:33" pos:end="115:43">return <expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:42">ret</name></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="125:9" pos:end="125:14">break;</break>



    <case pos:start="129:5" pos:end="129:28">case <expr pos:start="129:10" pos:end="129:27"><name pos:start="129:10" pos:end="129:27">JPEG2000_PGOD_CPRL</name></expr>:</case>

        <expr_stmt pos:start="131:9" pos:end="131:67"><expr pos:start="131:9" pos:end="131:66"><call pos:start="131:9" pos:end="131:66"><name pos:start="131:9" pos:end="131:14">av_log</name><argument_list pos:start="131:15" pos:end="131:66">(<argument pos:start="131:16" pos:end="131:23"><expr pos:start="131:16" pos:end="131:23"><name pos:start="131:16" pos:end="131:23"><name pos:start="131:16" pos:end="131:16">s</name><operator pos:start="131:17" pos:end="131:18">-&gt;</operator><name pos:start="131:19" pos:end="131:23">avctx</name></name></expr></argument>, <argument pos:start="131:26" pos:end="131:37"><expr pos:start="131:26" pos:end="131:37"><name pos:start="131:26" pos:end="131:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="131:40" pos:end="131:65"><expr pos:start="131:40" pos:end="131:65"><literal type="string" pos:start="131:40" pos:end="131:65">"Progression order CPRL\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="133:9" pos:end="243:9">for <control pos:start="133:13" pos:end="133:54">(<init pos:start="133:14" pos:end="133:28"><expr pos:start="133:14" pos:end="133:27"><name pos:start="133:14" pos:end="133:19">compno</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <name pos:start="133:23" pos:end="133:27">CSpoc</name></expr>;</init> <condition pos:start="133:30" pos:end="133:44"><expr pos:start="133:30" pos:end="133:43"><name pos:start="133:30" pos:end="133:35">compno</name> <operator pos:start="133:37" pos:end="133:37">&lt;</operator> <name pos:start="133:39" pos:end="133:43">CEpoc</name></expr>;</condition> <incr pos:start="133:46" pos:end="133:53"><expr pos:start="133:46" pos:end="133:53"><name pos:start="133:46" pos:end="133:51">compno</name><operator pos:start="133:52" pos:end="133:53">++</operator></expr></incr>)</control> <block pos:start="133:56" pos:end="243:9">{<block_content pos:start="135:13" pos:end="241:13">

            <decl_stmt pos:start="135:13" pos:end="135:62"><decl pos:start="135:13" pos:end="135:61"><type pos:start="135:13" pos:end="135:31"><name pos:start="135:13" pos:end="135:29">Jpeg2000Component</name> <modifier pos:start="135:31" pos:end="135:31">*</modifier></type><name pos:start="135:32" pos:end="135:35">comp</name>     <init pos:start="135:41" pos:end="135:61">= <expr pos:start="135:43" pos:end="135:61"><name pos:start="135:43" pos:end="135:52"><name pos:start="135:43" pos:end="135:46">tile</name><operator pos:start="135:47" pos:end="135:48">-&gt;</operator><name pos:start="135:49" pos:end="135:52">comp</name></name> <operator pos:start="135:54" pos:end="135:54">+</operator> <name pos:start="135:56" pos:end="135:61">compno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="137:13" pos:end="137:64"><decl pos:start="137:13" pos:end="137:63"><type pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:31">Jpeg2000CodingStyle</name> <modifier pos:start="137:33" pos:end="137:33">*</modifier></type><name pos:start="137:34" pos:end="137:39">codsty</name> <init pos:start="137:41" pos:end="137:63">= <expr pos:start="137:43" pos:end="137:63"><name pos:start="137:43" pos:end="137:54"><name pos:start="137:43" pos:end="137:46">tile</name><operator pos:start="137:47" pos:end="137:48">-&gt;</operator><name pos:start="137:49" pos:end="137:54">codsty</name></name> <operator pos:start="137:56" pos:end="137:56">+</operator> <name pos:start="137:58" pos:end="137:63">compno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:64"><decl pos:start="139:13" pos:end="139:63"><type pos:start="139:13" pos:end="139:32"><name pos:start="139:13" pos:end="139:30">Jpeg2000QuantStyle</name> <modifier pos:start="139:32" pos:end="139:32">*</modifier></type><name pos:start="139:33" pos:end="139:38">qntsty</name>  <init pos:start="139:41" pos:end="139:63">= <expr pos:start="139:43" pos:end="139:63"><name pos:start="139:43" pos:end="139:54"><name pos:start="139:43" pos:end="139:46">tile</name><operator pos:start="139:47" pos:end="139:48">-&gt;</operator><name pos:start="139:49" pos:end="139:54">qntsty</name></name> <operator pos:start="139:56" pos:end="139:56">+</operator> <name pos:start="139:58" pos:end="139:63">compno</name></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="141:13" pos:end="141:24"><expr pos:start="141:13" pos:end="141:23"><name pos:start="141:13" pos:end="141:18">step_x</name> <operator pos:start="141:20" pos:end="141:20">=</operator> <literal type="number" pos:start="141:22" pos:end="141:23">32</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:24"><expr pos:start="143:13" pos:end="143:23"><name pos:start="143:13" pos:end="143:18">step_y</name> <operator pos:start="143:20" pos:end="143:20">=</operator> <literal type="number" pos:start="143:22" pos:end="143:23">32</literal></expr>;</expr_stmt>



            <for pos:start="147:13" pos:end="157:13">for <control pos:start="147:17" pos:end="147:97">(<init pos:start="147:18" pos:end="147:36"><expr pos:start="147:18" pos:end="147:35"><name pos:start="147:18" pos:end="147:27">reslevelno</name> <operator pos:start="147:29" pos:end="147:29">=</operator> <name pos:start="147:31" pos:end="147:35">RSpoc</name></expr>;</init> <condition pos:start="147:38" pos:end="147:83"><expr pos:start="147:38" pos:end="147:82"><name pos:start="147:38" pos:end="147:47">reslevelno</name> <operator pos:start="147:49" pos:end="147:49">&lt;</operator> <call pos:start="147:51" pos:end="147:82"><name pos:start="147:51" pos:end="147:55">FFMIN</name><argument_list pos:start="147:56" pos:end="147:82">(<argument pos:start="147:57" pos:end="147:74"><expr pos:start="147:57" pos:end="147:74"><name pos:start="147:57" pos:end="147:74"><name pos:start="147:57" pos:end="147:62">codsty</name><operator pos:start="147:63" pos:end="147:64">-&gt;</operator><name pos:start="147:65" pos:end="147:74">nreslevels</name></name></expr></argument>, <argument pos:start="147:77" pos:end="147:81"><expr pos:start="147:77" pos:end="147:81"><name pos:start="147:77" pos:end="147:81">REpoc</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="147:85" pos:end="147:96"><expr pos:start="147:85" pos:end="147:96"><name pos:start="147:85" pos:end="147:94">reslevelno</name><operator pos:start="147:95" pos:end="147:96">++</operator></expr></incr>)</control> <block pos:start="147:99" pos:end="157:13">{<block_content pos:start="149:17" pos:end="155:80">

                <decl_stmt pos:start="149:17" pos:end="149:74"><decl pos:start="149:17" pos:end="149:73"><type pos:start="149:17" pos:end="149:23"><name pos:start="149:17" pos:end="149:23">uint8_t</name></type> <name pos:start="149:25" pos:end="149:36">reducedresno</name> <init pos:start="149:38" pos:end="149:73">= <expr pos:start="149:40" pos:end="149:73"><name pos:start="149:40" pos:end="149:57"><name pos:start="149:40" pos:end="149:45">codsty</name><operator pos:start="149:46" pos:end="149:47">-&gt;</operator><name pos:start="149:48" pos:end="149:57">nreslevels</name></name> <operator pos:start="149:59" pos:end="149:59">-</operator> <literal type="number" pos:start="149:61" pos:end="149:63">1</literal> <operator pos:start="149:63" pos:end="149:63">-</operator><name pos:start="149:64" pos:end="149:73">reslevelno</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="149:76" pos:end="149:90">//  ==&gt; N_L - r</comment>

                <decl_stmt pos:start="151:17" pos:end="151:71"><decl pos:start="151:17" pos:end="151:70"><type pos:start="151:17" pos:end="151:34"><name pos:start="151:17" pos:end="151:32">Jpeg2000ResLevel</name> <modifier pos:start="151:34" pos:end="151:34">*</modifier></type><name pos:start="151:35" pos:end="151:40">rlevel</name> <init pos:start="151:42" pos:end="151:70">= <expr pos:start="151:44" pos:end="151:70"><name pos:start="151:44" pos:end="151:57"><name pos:start="151:44" pos:end="151:47">comp</name><operator pos:start="151:48" pos:end="151:49">-&gt;</operator><name pos:start="151:50" pos:end="151:57">reslevel</name></name> <operator pos:start="151:59" pos:end="151:59">+</operator> <name pos:start="151:61" pos:end="151:70">reslevelno</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:80"><expr pos:start="153:17" pos:end="153:79"><name pos:start="153:17" pos:end="153:22">step_x</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <call pos:start="153:26" pos:end="153:79"><name pos:start="153:26" pos:end="153:30">FFMIN</name><argument_list pos:start="153:31" pos:end="153:79">(<argument pos:start="153:32" pos:end="153:37"><expr pos:start="153:32" pos:end="153:37"><name pos:start="153:32" pos:end="153:37">step_x</name></expr></argument>, <argument pos:start="153:40" pos:end="153:78"><expr pos:start="153:40" pos:end="153:78"><name pos:start="153:40" pos:end="153:62"><name pos:start="153:40" pos:end="153:45">rlevel</name><operator pos:start="153:46" pos:end="153:47">-&gt;</operator><name pos:start="153:48" pos:end="153:62">log2_prec_width</name></name>  <operator pos:start="153:65" pos:end="153:65">+</operator> <name pos:start="153:67" pos:end="153:78">reducedresno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="155:17" pos:end="155:80"><expr pos:start="155:17" pos:end="155:79"><name pos:start="155:17" pos:end="155:22">step_y</name> <operator pos:start="155:24" pos:end="155:24">=</operator> <call pos:start="155:26" pos:end="155:79"><name pos:start="155:26" pos:end="155:30">FFMIN</name><argument_list pos:start="155:31" pos:end="155:79">(<argument pos:start="155:32" pos:end="155:37"><expr pos:start="155:32" pos:end="155:37"><name pos:start="155:32" pos:end="155:37">step_y</name></expr></argument>, <argument pos:start="155:40" pos:end="155:78"><expr pos:start="155:40" pos:end="155:78"><name pos:start="155:40" pos:end="155:63"><name pos:start="155:40" pos:end="155:45">rlevel</name><operator pos:start="155:46" pos:end="155:47">-&gt;</operator><name pos:start="155:48" pos:end="155:63">log2_prec_height</name></name> <operator pos:start="155:65" pos:end="155:65">+</operator> <name pos:start="155:67" pos:end="155:78">reducedresno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="159:13" pos:end="159:31"><expr pos:start="159:13" pos:end="159:30"><name pos:start="159:13" pos:end="159:18">step_x</name> <operator pos:start="159:20" pos:end="159:20">=</operator> <literal type="number" pos:start="159:22" pos:end="159:22">1</literal><operator pos:start="159:23" pos:end="159:24">&lt;&lt;</operator><name pos:start="159:25" pos:end="159:30">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:31"><expr pos:start="161:13" pos:end="161:30"><name pos:start="161:13" pos:end="161:18">step_y</name> <operator pos:start="161:20" pos:end="161:20">=</operator> <literal type="number" pos:start="161:22" pos:end="161:22">1</literal><operator pos:start="161:23" pos:end="161:24">&lt;&lt;</operator><name pos:start="161:25" pos:end="161:30">step_y</name></expr>;</expr_stmt>



            <for pos:start="165:13" pos:end="241:13">for <control pos:start="165:17" pos:end="165:89">(<init pos:start="165:18" pos:end="165:39"><expr pos:start="165:18" pos:end="165:38"><name pos:start="165:18" pos:end="165:18">y</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <name pos:start="165:22" pos:end="165:38"><name pos:start="165:22" pos:end="165:25">tile</name><operator pos:start="165:26" pos:end="165:27">-&gt;</operator><name pos:start="165:28" pos:end="165:32">coord</name><index pos:start="165:33" pos:end="165:35">[<expr pos:start="165:34" pos:end="165:34"><literal type="number" pos:start="165:34" pos:end="165:34">1</literal></expr>]</index><index pos:start="165:36" pos:end="165:38">[<expr pos:start="165:37" pos:end="165:37"><literal type="number" pos:start="165:37" pos:end="165:37">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="165:41" pos:end="165:62"><expr pos:start="165:41" pos:end="165:61"><name pos:start="165:41" pos:end="165:41">y</name> <operator pos:start="165:43" pos:end="165:43">&lt;</operator> <name pos:start="165:45" pos:end="165:61"><name pos:start="165:45" pos:end="165:48">tile</name><operator pos:start="165:49" pos:end="165:50">-&gt;</operator><name pos:start="165:51" pos:end="165:55">coord</name><index pos:start="165:56" pos:end="165:58">[<expr pos:start="165:57" pos:end="165:57"><literal type="number" pos:start="165:57" pos:end="165:57">1</literal></expr>]</index><index pos:start="165:59" pos:end="165:61">[<expr pos:start="165:60" pos:end="165:60"><literal type="number" pos:start="165:60" pos:end="165:60">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="165:64" pos:end="165:88"><expr pos:start="165:64" pos:end="165:88"><name pos:start="165:64" pos:end="165:64">y</name> <operator pos:start="165:66" pos:end="165:66">=</operator> <operator pos:start="165:68" pos:end="165:68">(</operator><name pos:start="165:69" pos:end="165:69">y</name><operator pos:start="165:70" pos:end="165:70">/</operator><name pos:start="165:71" pos:end="165:76">step_y</name> <operator pos:start="165:78" pos:end="165:78">+</operator> <literal type="number" pos:start="165:80" pos:end="165:80">1</literal><operator pos:start="165:81" pos:end="165:81">)</operator><operator pos:start="165:82" pos:end="165:82">*</operator><name pos:start="165:83" pos:end="165:88">step_y</name></expr></incr>)</control> <block pos:start="165:91" pos:end="241:13">{<block_content pos:start="167:17" pos:end="239:17">

                <for pos:start="167:17" pos:end="239:17">for <control pos:start="167:21" pos:end="167:93">(<init pos:start="167:22" pos:end="167:43"><expr pos:start="167:22" pos:end="167:42"><name pos:start="167:22" pos:end="167:22">x</name> <operator pos:start="167:24" pos:end="167:24">=</operator> <name pos:start="167:26" pos:end="167:42"><name pos:start="167:26" pos:end="167:29">tile</name><operator pos:start="167:30" pos:end="167:31">-&gt;</operator><name pos:start="167:32" pos:end="167:36">coord</name><index pos:start="167:37" pos:end="167:39">[<expr pos:start="167:38" pos:end="167:38"><literal type="number" pos:start="167:38" pos:end="167:38">0</literal></expr>]</index><index pos:start="167:40" pos:end="167:42">[<expr pos:start="167:41" pos:end="167:41"><literal type="number" pos:start="167:41" pos:end="167:41">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="167:45" pos:end="167:66"><expr pos:start="167:45" pos:end="167:65"><name pos:start="167:45" pos:end="167:45">x</name> <operator pos:start="167:47" pos:end="167:47">&lt;</operator> <name pos:start="167:49" pos:end="167:65"><name pos:start="167:49" pos:end="167:52">tile</name><operator pos:start="167:53" pos:end="167:54">-&gt;</operator><name pos:start="167:55" pos:end="167:59">coord</name><index pos:start="167:60" pos:end="167:62">[<expr pos:start="167:61" pos:end="167:61"><literal type="number" pos:start="167:61" pos:end="167:61">0</literal></expr>]</index><index pos:start="167:63" pos:end="167:65">[<expr pos:start="167:64" pos:end="167:64"><literal type="number" pos:start="167:64" pos:end="167:64">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="167:68" pos:end="167:92"><expr pos:start="167:68" pos:end="167:92"><name pos:start="167:68" pos:end="167:68">x</name> <operator pos:start="167:70" pos:end="167:70">=</operator> <operator pos:start="167:72" pos:end="167:72">(</operator><name pos:start="167:73" pos:end="167:73">x</name><operator pos:start="167:74" pos:end="167:74">/</operator><name pos:start="167:75" pos:end="167:80">step_x</name> <operator pos:start="167:82" pos:end="167:82">+</operator> <literal type="number" pos:start="167:84" pos:end="167:84">1</literal><operator pos:start="167:85" pos:end="167:85">)</operator><operator pos:start="167:86" pos:end="167:86">*</operator><name pos:start="167:87" pos:end="167:92">step_x</name></expr></incr>)</control> <block pos:start="167:95" pos:end="239:17">{<block_content pos:start="169:21" pos:end="237:21">

                    <for pos:start="169:21" pos:end="237:21">for <control pos:start="169:25" pos:end="169:105">(<init pos:start="169:26" pos:end="169:44"><expr pos:start="169:26" pos:end="169:43"><name pos:start="169:26" pos:end="169:35">reslevelno</name> <operator pos:start="169:37" pos:end="169:37">=</operator> <name pos:start="169:39" pos:end="169:43">RSpoc</name></expr>;</init> <condition pos:start="169:46" pos:end="169:91"><expr pos:start="169:46" pos:end="169:90"><name pos:start="169:46" pos:end="169:55">reslevelno</name> <operator pos:start="169:57" pos:end="169:57">&lt;</operator> <call pos:start="169:59" pos:end="169:90"><name pos:start="169:59" pos:end="169:63">FFMIN</name><argument_list pos:start="169:64" pos:end="169:90">(<argument pos:start="169:65" pos:end="169:82"><expr pos:start="169:65" pos:end="169:82"><name pos:start="169:65" pos:end="169:82"><name pos:start="169:65" pos:end="169:70">codsty</name><operator pos:start="169:71" pos:end="169:72">-&gt;</operator><name pos:start="169:73" pos:end="169:82">nreslevels</name></name></expr></argument>, <argument pos:start="169:85" pos:end="169:89"><expr pos:start="169:85" pos:end="169:89"><name pos:start="169:85" pos:end="169:89">REpoc</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="169:93" pos:end="169:104"><expr pos:start="169:93" pos:end="169:104"><name pos:start="169:93" pos:end="169:102">reslevelno</name><operator pos:start="169:103" pos:end="169:104">++</operator></expr></incr>)</control> <block pos:start="169:107" pos:end="237:21">{<block_content pos:start="171:25" pos:end="235:25">

                        <decl_stmt pos:start="171:25" pos:end="171:44"><decl pos:start="171:25" pos:end="171:37"><type pos:start="171:25" pos:end="171:32"><name pos:start="171:25" pos:end="171:32">unsigned</name></type> <name pos:start="171:34" pos:end="171:37">prcx</name></decl>, <decl pos:start="171:40" pos:end="171:43"><type ref="prev" pos:start="171:25" pos:end="171:32"/><name pos:start="171:40" pos:end="171:43">prcy</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="173:25" pos:end="173:82"><decl pos:start="173:25" pos:end="173:81"><type pos:start="173:25" pos:end="173:31"><name pos:start="173:25" pos:end="173:31">uint8_t</name></type> <name pos:start="173:33" pos:end="173:44">reducedresno</name> <init pos:start="173:46" pos:end="173:81">= <expr pos:start="173:48" pos:end="173:81"><name pos:start="173:48" pos:end="173:65"><name pos:start="173:48" pos:end="173:53">codsty</name><operator pos:start="173:54" pos:end="173:55">-&gt;</operator><name pos:start="173:56" pos:end="173:65">nreslevels</name></name> <operator pos:start="173:67" pos:end="173:67">-</operator> <literal type="number" pos:start="173:69" pos:end="173:71">1</literal> <operator pos:start="173:71" pos:end="173:71">-</operator><name pos:start="173:72" pos:end="173:81">reslevelno</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="173:84" pos:end="173:98">//  ==&gt; N_L - r</comment>

                        <decl_stmt pos:start="175:25" pos:end="175:79"><decl pos:start="175:25" pos:end="175:78"><type pos:start="175:25" pos:end="175:42"><name pos:start="175:25" pos:end="175:40">Jpeg2000ResLevel</name> <modifier pos:start="175:42" pos:end="175:42">*</modifier></type><name pos:start="175:43" pos:end="175:48">rlevel</name> <init pos:start="175:50" pos:end="175:78">= <expr pos:start="175:52" pos:end="175:78"><name pos:start="175:52" pos:end="175:65"><name pos:start="175:52" pos:end="175:55">comp</name><operator pos:start="175:56" pos:end="175:57">-&gt;</operator><name pos:start="175:58" pos:end="175:65">reslevel</name></name> <operator pos:start="175:67" pos:end="175:67">+</operator> <name pos:start="175:69" pos:end="175:78">reslevelno</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="177:25" pos:end="177:52"><decl pos:start="177:25" pos:end="177:51"><type pos:start="177:25" pos:end="177:27"><name pos:start="177:25" pos:end="177:27">int</name></type> <name pos:start="177:29" pos:end="177:30">xc</name> <init pos:start="177:32" pos:end="177:51">= <expr pos:start="177:34" pos:end="177:51"><name pos:start="177:34" pos:end="177:34">x</name> <operator pos:start="177:36" pos:end="177:36">/</operator> <name pos:start="177:38" pos:end="177:51"><name pos:start="177:38" pos:end="177:38">s</name><operator pos:start="177:39" pos:end="177:40">-&gt;</operator><name pos:start="177:41" pos:end="177:43">cdx</name><index pos:start="177:44" pos:end="177:51">[<expr pos:start="177:45" pos:end="177:50"><name pos:start="177:45" pos:end="177:50">compno</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="179:25" pos:end="179:52"><decl pos:start="179:25" pos:end="179:51"><type pos:start="179:25" pos:end="179:27"><name pos:start="179:25" pos:end="179:27">int</name></type> <name pos:start="179:29" pos:end="179:30">yc</name> <init pos:start="179:32" pos:end="179:51">= <expr pos:start="179:34" pos:end="179:51"><name pos:start="179:34" pos:end="179:34">y</name> <operator pos:start="179:36" pos:end="179:36">/</operator> <name pos:start="179:38" pos:end="179:51"><name pos:start="179:38" pos:end="179:38">s</name><operator pos:start="179:39" pos:end="179:40">-&gt;</operator><name pos:start="179:41" pos:end="179:43">cdy</name><index pos:start="179:44" pos:end="179:51">[<expr pos:start="179:45" pos:end="179:50"><name pos:start="179:45" pos:end="179:50">compno</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="183:25" pos:end="185:37"><if pos:start="183:25" pos:end="185:37">if <condition pos:start="183:28" pos:end="183:108">(<expr pos:start="183:29" pos:end="183:107"><name pos:start="183:29" pos:end="183:30">yc</name> <operator pos:start="183:32" pos:end="183:32">%</operator> <operator pos:start="183:34" pos:end="183:34">(</operator><literal type="number" pos:start="183:35" pos:end="183:35">1</literal> <operator pos:start="183:37" pos:end="183:38">&lt;&lt;</operator> <operator pos:start="183:40" pos:end="183:40">(</operator><name pos:start="183:41" pos:end="183:64"><name pos:start="183:41" pos:end="183:46">rlevel</name><operator pos:start="183:47" pos:end="183:48">-&gt;</operator><name pos:start="183:49" pos:end="183:64">log2_prec_height</name></name> <operator pos:start="183:66" pos:end="183:66">+</operator> <name pos:start="183:68" pos:end="183:79">reducedresno</name><operator pos:start="183:80" pos:end="183:80">)</operator><operator pos:start="183:81" pos:end="183:81">)</operator> <operator pos:start="183:83" pos:end="183:84">&amp;&amp;</operator> <name pos:start="183:86" pos:end="183:86">y</name> <operator pos:start="183:88" pos:end="183:89">!=</operator> <name pos:start="183:91" pos:end="183:107"><name pos:start="183:91" pos:end="183:94">tile</name><operator pos:start="183:95" pos:end="183:96">-&gt;</operator><name pos:start="183:97" pos:end="183:101">coord</name><index pos:start="183:102" pos:end="183:104">[<expr pos:start="183:103" pos:end="183:103"><literal type="number" pos:start="183:103" pos:end="183:103">1</literal></expr>]</index><index pos:start="183:105" pos:end="183:107">[<expr pos:start="183:106" pos:end="183:106"><literal type="number" pos:start="183:106" pos:end="183:106">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="185:29" pos:end="185:37"><block_content pos:start="185:29" pos:end="185:37"> <comment type="line" pos:start="183:110" pos:end="183:146">//FIXME this is a subset of the check</comment>

                            <continue pos:start="185:29" pos:end="185:37">continue;</continue></block_content></block></if></if_stmt>



                        <if_stmt pos:start="189:25" pos:end="191:37"><if pos:start="189:25" pos:end="191:37">if <condition pos:start="189:28" pos:end="189:107">(<expr pos:start="189:29" pos:end="189:106"><name pos:start="189:29" pos:end="189:30">xc</name> <operator pos:start="189:32" pos:end="189:32">%</operator> <operator pos:start="189:34" pos:end="189:34">(</operator><literal type="number" pos:start="189:35" pos:end="189:35">1</literal> <operator pos:start="189:37" pos:end="189:38">&lt;&lt;</operator> <operator pos:start="189:40" pos:end="189:40">(</operator><name pos:start="189:41" pos:end="189:63"><name pos:start="189:41" pos:end="189:46">rlevel</name><operator pos:start="189:47" pos:end="189:48">-&gt;</operator><name pos:start="189:49" pos:end="189:63">log2_prec_width</name></name> <operator pos:start="189:65" pos:end="189:65">+</operator> <name pos:start="189:67" pos:end="189:78">reducedresno</name><operator pos:start="189:79" pos:end="189:79">)</operator><operator pos:start="189:80" pos:end="189:80">)</operator> <operator pos:start="189:82" pos:end="189:83">&amp;&amp;</operator> <name pos:start="189:85" pos:end="189:85">x</name> <operator pos:start="189:87" pos:end="189:88">!=</operator> <name pos:start="189:90" pos:end="189:106"><name pos:start="189:90" pos:end="189:93">tile</name><operator pos:start="189:94" pos:end="189:95">-&gt;</operator><name pos:start="189:96" pos:end="189:100">coord</name><index pos:start="189:101" pos:end="189:103">[<expr pos:start="189:102" pos:end="189:102"><literal type="number" pos:start="189:102" pos:end="189:102">0</literal></expr>]</index><index pos:start="189:104" pos:end="189:106">[<expr pos:start="189:105" pos:end="189:105"><literal type="number" pos:start="189:105" pos:end="189:105">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="191:29" pos:end="191:37"><block_content pos:start="191:29" pos:end="191:37"> <comment type="line" pos:start="189:109" pos:end="189:145">//FIXME this is a subset of the check</comment>

                            <continue pos:start="191:29" pos:end="191:37">continue;</continue></block_content></block></if></if_stmt>



                        <comment type="line" pos:start="195:25" pos:end="195:53">// check if a precinct exists</comment>

                        <expr_stmt pos:start="197:25" pos:end="197:102"><expr pos:start="197:25" pos:end="197:101"><name pos:start="197:25" pos:end="197:28">prcx</name>   <operator pos:start="197:32" pos:end="197:32">=</operator> <call pos:start="197:34" pos:end="197:74"><name pos:start="197:34" pos:end="197:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="197:57" pos:end="197:74">(<argument pos:start="197:58" pos:end="197:59"><expr pos:start="197:58" pos:end="197:59"><name pos:start="197:58" pos:end="197:59">xc</name></expr></argument>, <argument pos:start="197:62" pos:end="197:73"><expr pos:start="197:62" pos:end="197:73"><name pos:start="197:62" pos:end="197:73">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="197:76" pos:end="197:77">&gt;&gt;</operator> <name pos:start="197:79" pos:end="197:101"><name pos:start="197:79" pos:end="197:84">rlevel</name><operator pos:start="197:85" pos:end="197:86">-&gt;</operator><name pos:start="197:87" pos:end="197:101">log2_prec_width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="199:25" pos:end="199:103"><expr pos:start="199:25" pos:end="199:102"><name pos:start="199:25" pos:end="199:28">prcy</name>   <operator pos:start="199:32" pos:end="199:32">=</operator> <call pos:start="199:34" pos:end="199:74"><name pos:start="199:34" pos:end="199:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="199:57" pos:end="199:74">(<argument pos:start="199:58" pos:end="199:59"><expr pos:start="199:58" pos:end="199:59"><name pos:start="199:58" pos:end="199:59">yc</name></expr></argument>, <argument pos:start="199:62" pos:end="199:73"><expr pos:start="199:62" pos:end="199:73"><name pos:start="199:62" pos:end="199:73">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="199:76" pos:end="199:77">&gt;&gt;</operator> <name pos:start="199:79" pos:end="199:102"><name pos:start="199:79" pos:end="199:84">rlevel</name><operator pos:start="199:85" pos:end="199:86">-&gt;</operator><name pos:start="199:87" pos:end="199:102">log2_prec_height</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="201:25" pos:end="201:119"><expr pos:start="201:25" pos:end="201:118"><name pos:start="201:25" pos:end="201:28">prcx</name>  <operator pos:start="201:31" pos:end="201:32">-=</operator> <call pos:start="201:34" pos:end="201:91"><name pos:start="201:34" pos:end="201:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="201:57" pos:end="201:91">(<argument pos:start="201:58" pos:end="201:76"><expr pos:start="201:58" pos:end="201:76"><name pos:start="201:58" pos:end="201:76"><name pos:start="201:58" pos:end="201:61">comp</name><operator pos:start="201:62" pos:end="201:63">-&gt;</operator><name pos:start="201:64" pos:end="201:70">coord_o</name><index pos:start="201:71" pos:end="201:73">[<expr pos:start="201:72" pos:end="201:72"><literal type="number" pos:start="201:72" pos:end="201:72">0</literal></expr>]</index><index pos:start="201:74" pos:end="201:76">[<expr pos:start="201:75" pos:end="201:75"><literal type="number" pos:start="201:75" pos:end="201:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="201:79" pos:end="201:90"><expr pos:start="201:79" pos:end="201:90"><name pos:start="201:79" pos:end="201:90">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="201:93" pos:end="201:94">&gt;&gt;</operator> <name pos:start="201:96" pos:end="201:118"><name pos:start="201:96" pos:end="201:101">rlevel</name><operator pos:start="201:102" pos:end="201:103">-&gt;</operator><name pos:start="201:104" pos:end="201:118">log2_prec_width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="203:25" pos:end="203:120"><expr pos:start="203:25" pos:end="203:119"><name pos:start="203:25" pos:end="203:28">prcy</name>  <operator pos:start="203:31" pos:end="203:32">-=</operator> <call pos:start="203:34" pos:end="203:91"><name pos:start="203:34" pos:end="203:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="203:57" pos:end="203:91">(<argument pos:start="203:58" pos:end="203:76"><expr pos:start="203:58" pos:end="203:76"><name pos:start="203:58" pos:end="203:76"><name pos:start="203:58" pos:end="203:61">comp</name><operator pos:start="203:62" pos:end="203:63">-&gt;</operator><name pos:start="203:64" pos:end="203:70">coord_o</name><index pos:start="203:71" pos:end="203:73">[<expr pos:start="203:72" pos:end="203:72"><literal type="number" pos:start="203:72" pos:end="203:72">1</literal></expr>]</index><index pos:start="203:74" pos:end="203:76">[<expr pos:start="203:75" pos:end="203:75"><literal type="number" pos:start="203:75" pos:end="203:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="203:79" pos:end="203:90"><expr pos:start="203:79" pos:end="203:90"><name pos:start="203:79" pos:end="203:90">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="203:93" pos:end="203:94">&gt;&gt;</operator> <name pos:start="203:96" pos:end="203:119"><name pos:start="203:96" pos:end="203:101">rlevel</name><operator pos:start="203:102" pos:end="203:103">-&gt;</operator><name pos:start="203:104" pos:end="203:119">log2_prec_height</name></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="207:25" pos:end="207:71"><expr pos:start="207:25" pos:end="207:70"><name pos:start="207:25" pos:end="207:30">precno</name> <operator pos:start="207:32" pos:end="207:32">=</operator> <name pos:start="207:34" pos:end="207:37">prcx</name> <operator pos:start="207:39" pos:end="207:39">+</operator> <name pos:start="207:41" pos:end="207:63"><name pos:start="207:41" pos:end="207:46">rlevel</name><operator pos:start="207:47" pos:end="207:48">-&gt;</operator><name pos:start="207:49" pos:end="207:63">num_precincts_x</name></name> <operator pos:start="207:65" pos:end="207:65">*</operator> <name pos:start="207:67" pos:end="207:70">prcy</name></expr>;</expr_stmt>



                        <if_stmt pos:start="211:25" pos:end="219:25"><if pos:start="211:25" pos:end="219:25">if <condition pos:start="211:28" pos:end="211:95">(<expr pos:start="211:29" pos:end="211:94"><name pos:start="211:29" pos:end="211:32">prcx</name> <operator pos:start="211:34" pos:end="211:35">&gt;=</operator> <name pos:start="211:37" pos:end="211:59"><name pos:start="211:37" pos:end="211:42">rlevel</name><operator pos:start="211:43" pos:end="211:44">-&gt;</operator><name pos:start="211:45" pos:end="211:59">num_precincts_x</name></name> <operator pos:start="211:61" pos:end="211:62">||</operator> <name pos:start="211:64" pos:end="211:67">prcy</name> <operator pos:start="211:69" pos:end="211:70">&gt;=</operator> <name pos:start="211:72" pos:end="211:94"><name pos:start="211:72" pos:end="211:77">rlevel</name><operator pos:start="211:78" pos:end="211:79">-&gt;</operator><name pos:start="211:80" pos:end="211:94">num_precincts_y</name></name></expr>)</condition> <block pos:start="211:97" pos:end="219:25">{<block_content pos:start="213:29" pos:end="217:37">

                            <expr_stmt pos:start="213:29" pos:end="215:97"><expr pos:start="213:29" pos:end="215:96"><call pos:start="213:29" pos:end="215:96"><name pos:start="213:29" pos:end="213:34">av_log</name><argument_list pos:start="213:35" pos:end="215:96">(<argument pos:start="213:36" pos:end="213:43"><expr pos:start="213:36" pos:end="213:43"><name pos:start="213:36" pos:end="213:43"><name pos:start="213:36" pos:end="213:36">s</name><operator pos:start="213:37" pos:end="213:38">-&gt;</operator><name pos:start="213:39" pos:end="213:43">avctx</name></name></expr></argument>, <argument pos:start="213:46" pos:end="213:59"><expr pos:start="213:46" pos:end="213:59"><name pos:start="213:46" pos:end="213:59">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="213:62" pos:end="213:95"><expr pos:start="213:62" pos:end="213:95"><literal type="string" pos:start="213:62" pos:end="213:95">"prc %d %d outside limits %d %d\n"</literal></expr></argument>,

                                   <argument pos:start="215:36" pos:end="215:39"><expr pos:start="215:36" pos:end="215:39"><name pos:start="215:36" pos:end="215:39">prcx</name></expr></argument>, <argument pos:start="215:42" pos:end="215:45"><expr pos:start="215:42" pos:end="215:45"><name pos:start="215:42" pos:end="215:45">prcy</name></expr></argument>, <argument pos:start="215:48" pos:end="215:70"><expr pos:start="215:48" pos:end="215:70"><name pos:start="215:48" pos:end="215:70"><name pos:start="215:48" pos:end="215:53">rlevel</name><operator pos:start="215:54" pos:end="215:55">-&gt;</operator><name pos:start="215:56" pos:end="215:70">num_precincts_x</name></name></expr></argument>, <argument pos:start="215:73" pos:end="215:95"><expr pos:start="215:73" pos:end="215:95"><name pos:start="215:73" pos:end="215:95"><name pos:start="215:73" pos:end="215:78">rlevel</name><operator pos:start="215:79" pos:end="215:80">-&gt;</operator><name pos:start="215:81" pos:end="215:95">num_precincts_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <continue pos:start="217:29" pos:end="217:37">continue;</continue>

                        </block_content>}</block></if></if_stmt>



                        <for pos:start="223:25" pos:end="235:25">for <control pos:start="223:29" pos:end="223:64">(<init pos:start="223:30" pos:end="223:39"><expr pos:start="223:30" pos:end="223:38"><name pos:start="223:30" pos:end="223:34">layno</name> <operator pos:start="223:36" pos:end="223:36">=</operator> <literal type="number" pos:start="223:38" pos:end="223:38">0</literal></expr>;</init> <condition pos:start="223:41" pos:end="223:55"><expr pos:start="223:41" pos:end="223:54"><name pos:start="223:41" pos:end="223:45">layno</name> <operator pos:start="223:47" pos:end="223:47">&lt;</operator> <name pos:start="223:49" pos:end="223:54">LYEpoc</name></expr>;</condition> <incr pos:start="223:57" pos:end="223:63"><expr pos:start="223:57" pos:end="223:63"><name pos:start="223:57" pos:end="223:61">layno</name><operator pos:start="223:62" pos:end="223:63">++</operator></expr></incr>)</control> <block pos:start="223:66" pos:end="235:25">{<block_content pos:start="225:29" pos:end="233:43">

                            <if_stmt pos:start="225:29" pos:end="233:43"><if pos:start="225:29" pos:end="233:43">if <condition pos:start="225:32" pos:end="231:87">(<expr pos:start="225:33" pos:end="231:86"><operator pos:start="225:33" pos:end="225:33">(</operator><name pos:start="225:34" pos:end="225:36">ret</name> <operator pos:start="225:38" pos:end="225:38">=</operator> <call pos:start="225:40" pos:end="231:81"><name pos:start="225:40" pos:end="225:61">jpeg2000_decode_packet</name><argument_list pos:start="225:62" pos:end="231:81">(<argument pos:start="225:63" pos:end="225:63"><expr pos:start="225:63" pos:end="225:63"><name pos:start="225:63" pos:end="225:63">s</name></expr></argument>, <argument pos:start="225:66" pos:end="225:69"><expr pos:start="225:66" pos:end="225:69"><name pos:start="225:66" pos:end="225:69">tile</name></expr></argument>, <argument pos:start="225:72" pos:end="225:80"><expr pos:start="225:72" pos:end="225:80"><operator pos:start="225:72" pos:end="225:72">&amp;</operator><name pos:start="225:73" pos:end="225:80">tp_index</name></expr></argument>, <argument pos:start="225:83" pos:end="225:88"><expr pos:start="225:83" pos:end="225:88"><name pos:start="225:83" pos:end="225:88">codsty</name></expr></argument>, <argument pos:start="225:91" pos:end="225:96"><expr pos:start="225:91" pos:end="225:96"><name pos:start="225:91" pos:end="225:96">rlevel</name></expr></argument>,

                                                              <argument pos:start="227:63" pos:end="227:68"><expr pos:start="227:63" pos:end="227:68"><name pos:start="227:63" pos:end="227:68">precno</name></expr></argument>, <argument pos:start="227:71" pos:end="227:75"><expr pos:start="227:71" pos:end="227:75"><name pos:start="227:71" pos:end="227:75">layno</name></expr></argument>,

                                                              <argument pos:start="229:63" pos:end="229:120"><expr pos:start="229:63" pos:end="229:120"><name pos:start="229:63" pos:end="229:74"><name pos:start="229:63" pos:end="229:68">qntsty</name><operator pos:start="229:69" pos:end="229:70">-&gt;</operator><name pos:start="229:71" pos:end="229:74">expn</name></name> <operator pos:start="229:76" pos:end="229:76">+</operator> <operator pos:start="229:78" pos:end="229:78">(</operator><ternary pos:start="229:79" pos:end="229:119"><condition pos:start="229:79" pos:end="229:90"><expr pos:start="229:79" pos:end="229:88"><name pos:start="229:79" pos:end="229:88">reslevelno</name></expr> ?</condition><then pos:start="229:92" pos:end="229:115"> <expr pos:start="229:92" pos:end="229:115"><literal type="number" pos:start="229:92" pos:end="229:92">3</literal> <operator pos:start="229:94" pos:end="229:94">*</operator> <operator pos:start="229:96" pos:end="229:96">(</operator><name pos:start="229:97" pos:end="229:106">reslevelno</name> <operator pos:start="229:108" pos:end="229:108">-</operator> <literal type="number" pos:start="229:110" pos:end="229:110">1</literal><operator pos:start="229:111" pos:end="229:111">)</operator> <operator pos:start="229:113" pos:end="229:113">+</operator> <literal type="number" pos:start="229:115" pos:end="229:115">1</literal></expr> </then><else pos:start="229:117" pos:end="229:119">: <expr pos:start="229:119" pos:end="229:119"><literal type="number" pos:start="229:119" pos:end="229:119">0</literal></expr></else></ternary><operator pos:start="229:120" pos:end="229:120">)</operator></expr></argument>,

                                                              <argument pos:start="231:63" pos:end="231:80"><expr pos:start="231:63" pos:end="231:80"><name pos:start="231:63" pos:end="231:80"><name pos:start="231:63" pos:end="231:68">qntsty</name><operator pos:start="231:69" pos:end="231:70">-&gt;</operator><name pos:start="231:71" pos:end="231:80">nguardbits</name></name></expr></argument>)</argument_list></call><operator pos:start="231:82" pos:end="231:82">)</operator> <operator pos:start="231:84" pos:end="231:84">&lt;</operator> <literal type="number" pos:start="231:86" pos:end="231:86">0</literal></expr>)</condition><block type="pseudo" pos:start="233:33" pos:end="233:43"><block_content pos:start="233:33" pos:end="233:43">

                                <return pos:start="233:33" pos:end="233:43">return <expr pos:start="233:40" pos:end="233:42"><name pos:start="233:40" pos:end="233:42">ret</name></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="245:9" pos:end="245:14">break;</break>



    <case pos:start="249:5" pos:end="249:28">case <expr pos:start="249:10" pos:end="249:27"><name pos:start="249:10" pos:end="249:27">JPEG2000_PGOD_RPCL</name></expr>:</case>

        <expr_stmt pos:start="251:9" pos:end="251:69"><expr pos:start="251:9" pos:end="251:68"><call pos:start="251:9" pos:end="251:68"><name pos:start="251:9" pos:end="251:14">av_log</name><argument_list pos:start="251:15" pos:end="251:68">(<argument pos:start="251:16" pos:end="251:23"><expr pos:start="251:16" pos:end="251:23"><name pos:start="251:16" pos:end="251:23"><name pos:start="251:16" pos:end="251:16">s</name><operator pos:start="251:17" pos:end="251:18">-&gt;</operator><name pos:start="251:19" pos:end="251:23">avctx</name></name></expr></argument>, <argument pos:start="251:26" pos:end="251:39"><expr pos:start="251:26" pos:end="251:39"><name pos:start="251:26" pos:end="251:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="251:42" pos:end="251:67"><expr pos:start="251:42" pos:end="251:67"><literal type="string" pos:start="251:42" pos:end="251:67">"Progression order RPCL\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="253:9" pos:end="253:24"><expr pos:start="253:9" pos:end="253:23"><name pos:start="253:9" pos:end="253:19">ok_reslevel</name> <operator pos:start="253:21" pos:end="253:21">=</operator> <literal type="number" pos:start="253:23" pos:end="253:23">1</literal></expr>;</expr_stmt>

        <for pos:start="255:9" pos:end="387:9">for <control pos:start="255:13" pos:end="255:81">(<init pos:start="255:14" pos:end="255:32"><expr pos:start="255:14" pos:end="255:31"><name pos:start="255:14" pos:end="255:23">reslevelno</name> <operator pos:start="255:25" pos:end="255:25">=</operator> <name pos:start="255:27" pos:end="255:31">RSpoc</name></expr>;</init> <condition pos:start="255:34" pos:end="255:67"><expr pos:start="255:34" pos:end="255:66"><name pos:start="255:34" pos:end="255:44">ok_reslevel</name> <operator pos:start="255:46" pos:end="255:47">&amp;&amp;</operator> <name pos:start="255:49" pos:end="255:58">reslevelno</name> <operator pos:start="255:60" pos:end="255:60">&lt;</operator> <name pos:start="255:62" pos:end="255:66">REpoc</name></expr>;</condition> <incr pos:start="255:69" pos:end="255:80"><expr pos:start="255:69" pos:end="255:80"><name pos:start="255:69" pos:end="255:78">reslevelno</name><operator pos:start="255:79" pos:end="255:80">++</operator></expr></incr>)</control> <block pos:start="255:83" pos:end="387:9">{<block_content pos:start="257:13" pos:end="385:13">

            <expr_stmt pos:start="257:13" pos:end="257:28"><expr pos:start="257:13" pos:end="257:27"><name pos:start="257:13" pos:end="257:23">ok_reslevel</name> <operator pos:start="257:25" pos:end="257:25">=</operator> <literal type="number" pos:start="257:27" pos:end="257:27">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="259:13" pos:end="259:24"><expr pos:start="259:13" pos:end="259:23"><name pos:start="259:13" pos:end="259:18">step_x</name> <operator pos:start="259:20" pos:end="259:20">=</operator> <literal type="number" pos:start="259:22" pos:end="259:23">30</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="261:13" pos:end="261:24"><expr pos:start="261:13" pos:end="261:23"><name pos:start="261:13" pos:end="261:18">step_y</name> <operator pos:start="261:20" pos:end="261:20">=</operator> <literal type="number" pos:start="261:22" pos:end="261:23">30</literal></expr>;</expr_stmt>

            <for pos:start="263:13" pos:end="283:13">for <control pos:start="263:17" pos:end="263:58">(<init pos:start="263:18" pos:end="263:32"><expr pos:start="263:18" pos:end="263:31"><name pos:start="263:18" pos:end="263:23">compno</name> <operator pos:start="263:25" pos:end="263:25">=</operator> <name pos:start="263:27" pos:end="263:31">CSpoc</name></expr>;</init> <condition pos:start="263:34" pos:end="263:48"><expr pos:start="263:34" pos:end="263:47"><name pos:start="263:34" pos:end="263:39">compno</name> <operator pos:start="263:41" pos:end="263:41">&lt;</operator> <name pos:start="263:43" pos:end="263:47">CEpoc</name></expr>;</condition> <incr pos:start="263:50" pos:end="263:57"><expr pos:start="263:50" pos:end="263:57"><name pos:start="263:50" pos:end="263:55">compno</name><operator pos:start="263:56" pos:end="263:57">++</operator></expr></incr>)</control> <block pos:start="263:60" pos:end="283:13">{<block_content pos:start="265:17" pos:end="281:17">

                <decl_stmt pos:start="265:17" pos:end="265:66"><decl pos:start="265:17" pos:end="265:65"><type pos:start="265:17" pos:end="265:35"><name pos:start="265:17" pos:end="265:33">Jpeg2000Component</name> <modifier pos:start="265:35" pos:end="265:35">*</modifier></type><name pos:start="265:36" pos:end="265:39">comp</name>     <init pos:start="265:45" pos:end="265:65">= <expr pos:start="265:47" pos:end="265:65"><name pos:start="265:47" pos:end="265:56"><name pos:start="265:47" pos:end="265:50">tile</name><operator pos:start="265:51" pos:end="265:52">-&gt;</operator><name pos:start="265:53" pos:end="265:56">comp</name></name> <operator pos:start="265:58" pos:end="265:58">+</operator> <name pos:start="265:60" pos:end="265:65">compno</name></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="267:17" pos:end="267:68"><decl pos:start="267:17" pos:end="267:67"><type pos:start="267:17" pos:end="267:37"><name pos:start="267:17" pos:end="267:35">Jpeg2000CodingStyle</name> <modifier pos:start="267:37" pos:end="267:37">*</modifier></type><name pos:start="267:38" pos:end="267:43">codsty</name> <init pos:start="267:45" pos:end="267:67">= <expr pos:start="267:47" pos:end="267:67"><name pos:start="267:47" pos:end="267:58"><name pos:start="267:47" pos:end="267:50">tile</name><operator pos:start="267:51" pos:end="267:52">-&gt;</operator><name pos:start="267:53" pos:end="267:58">codsty</name></name> <operator pos:start="267:60" pos:end="267:60">+</operator> <name pos:start="267:62" pos:end="267:67">compno</name></expr></init></decl>;</decl_stmt>



                <if_stmt pos:start="271:17" pos:end="281:17"><if pos:start="271:17" pos:end="281:17">if <condition pos:start="271:20" pos:end="271:52">(<expr pos:start="271:21" pos:end="271:51"><name pos:start="271:21" pos:end="271:30">reslevelno</name> <operator pos:start="271:32" pos:end="271:32">&lt;</operator> <name pos:start="271:34" pos:end="271:51"><name pos:start="271:34" pos:end="271:39">codsty</name><operator pos:start="271:40" pos:end="271:41">-&gt;</operator><name pos:start="271:42" pos:end="271:51">nreslevels</name></name></expr>)</condition> <block pos:start="271:54" pos:end="281:17">{<block_content pos:start="273:21" pos:end="279:84">

                    <decl_stmt pos:start="273:21" pos:end="273:78"><decl pos:start="273:21" pos:end="273:77"><type pos:start="273:21" pos:end="273:27"><name pos:start="273:21" pos:end="273:27">uint8_t</name></type> <name pos:start="273:29" pos:end="273:40">reducedresno</name> <init pos:start="273:42" pos:end="273:77">= <expr pos:start="273:44" pos:end="273:77"><name pos:start="273:44" pos:end="273:61"><name pos:start="273:44" pos:end="273:49">codsty</name><operator pos:start="273:50" pos:end="273:51">-&gt;</operator><name pos:start="273:52" pos:end="273:61">nreslevels</name></name> <operator pos:start="273:63" pos:end="273:63">-</operator> <literal type="number" pos:start="273:65" pos:end="273:67">1</literal> <operator pos:start="273:67" pos:end="273:67">-</operator><name pos:start="273:68" pos:end="273:77">reslevelno</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="273:80" pos:end="273:94">//  ==&gt; N_L - r</comment>

                    <decl_stmt pos:start="275:21" pos:end="275:75"><decl pos:start="275:21" pos:end="275:74"><type pos:start="275:21" pos:end="275:38"><name pos:start="275:21" pos:end="275:36">Jpeg2000ResLevel</name> <modifier pos:start="275:38" pos:end="275:38">*</modifier></type><name pos:start="275:39" pos:end="275:44">rlevel</name> <init pos:start="275:46" pos:end="275:74">= <expr pos:start="275:48" pos:end="275:74"><name pos:start="275:48" pos:end="275:61"><name pos:start="275:48" pos:end="275:51">comp</name><operator pos:start="275:52" pos:end="275:53">-&gt;</operator><name pos:start="275:54" pos:end="275:61">reslevel</name></name> <operator pos:start="275:63" pos:end="275:63">+</operator> <name pos:start="275:65" pos:end="275:74">reslevelno</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:84"><expr pos:start="277:21" pos:end="277:83"><name pos:start="277:21" pos:end="277:26">step_x</name> <operator pos:start="277:28" pos:end="277:28">=</operator> <call pos:start="277:30" pos:end="277:83"><name pos:start="277:30" pos:end="277:34">FFMIN</name><argument_list pos:start="277:35" pos:end="277:83">(<argument pos:start="277:36" pos:end="277:41"><expr pos:start="277:36" pos:end="277:41"><name pos:start="277:36" pos:end="277:41">step_x</name></expr></argument>, <argument pos:start="277:44" pos:end="277:82"><expr pos:start="277:44" pos:end="277:82"><name pos:start="277:44" pos:end="277:66"><name pos:start="277:44" pos:end="277:49">rlevel</name><operator pos:start="277:50" pos:end="277:51">-&gt;</operator><name pos:start="277:52" pos:end="277:66">log2_prec_width</name></name>  <operator pos:start="277:69" pos:end="277:69">+</operator> <name pos:start="277:71" pos:end="277:82">reducedresno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="279:21" pos:end="279:84"><expr pos:start="279:21" pos:end="279:83"><name pos:start="279:21" pos:end="279:26">step_y</name> <operator pos:start="279:28" pos:end="279:28">=</operator> <call pos:start="279:30" pos:end="279:83"><name pos:start="279:30" pos:end="279:34">FFMIN</name><argument_list pos:start="279:35" pos:end="279:83">(<argument pos:start="279:36" pos:end="279:41"><expr pos:start="279:36" pos:end="279:41"><name pos:start="279:36" pos:end="279:41">step_y</name></expr></argument>, <argument pos:start="279:44" pos:end="279:82"><expr pos:start="279:44" pos:end="279:82"><name pos:start="279:44" pos:end="279:67"><name pos:start="279:44" pos:end="279:49">rlevel</name><operator pos:start="279:50" pos:end="279:51">-&gt;</operator><name pos:start="279:52" pos:end="279:67">log2_prec_height</name></name> <operator pos:start="279:69" pos:end="279:69">+</operator> <name pos:start="279:71" pos:end="279:82">reducedresno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="285:13" pos:end="285:31"><expr pos:start="285:13" pos:end="285:30"><name pos:start="285:13" pos:end="285:18">step_x</name> <operator pos:start="285:20" pos:end="285:20">=</operator> <literal type="number" pos:start="285:22" pos:end="285:22">1</literal><operator pos:start="285:23" pos:end="285:24">&lt;&lt;</operator><name pos:start="285:25" pos:end="285:30">step_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="287:13" pos:end="287:31"><expr pos:start="287:13" pos:end="287:30"><name pos:start="287:13" pos:end="287:18">step_y</name> <operator pos:start="287:20" pos:end="287:20">=</operator> <literal type="number" pos:start="287:22" pos:end="287:22">1</literal><operator pos:start="287:23" pos:end="287:24">&lt;&lt;</operator><name pos:start="287:25" pos:end="287:30">step_y</name></expr>;</expr_stmt>



            <for pos:start="291:13" pos:end="385:13">for <control pos:start="291:17" pos:end="291:89">(<init pos:start="291:18" pos:end="291:39"><expr pos:start="291:18" pos:end="291:38"><name pos:start="291:18" pos:end="291:18">y</name> <operator pos:start="291:20" pos:end="291:20">=</operator> <name pos:start="291:22" pos:end="291:38"><name pos:start="291:22" pos:end="291:25">tile</name><operator pos:start="291:26" pos:end="291:27">-&gt;</operator><name pos:start="291:28" pos:end="291:32">coord</name><index pos:start="291:33" pos:end="291:35">[<expr pos:start="291:34" pos:end="291:34"><literal type="number" pos:start="291:34" pos:end="291:34">1</literal></expr>]</index><index pos:start="291:36" pos:end="291:38">[<expr pos:start="291:37" pos:end="291:37"><literal type="number" pos:start="291:37" pos:end="291:37">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="291:41" pos:end="291:62"><expr pos:start="291:41" pos:end="291:61"><name pos:start="291:41" pos:end="291:41">y</name> <operator pos:start="291:43" pos:end="291:43">&lt;</operator> <name pos:start="291:45" pos:end="291:61"><name pos:start="291:45" pos:end="291:48">tile</name><operator pos:start="291:49" pos:end="291:50">-&gt;</operator><name pos:start="291:51" pos:end="291:55">coord</name><index pos:start="291:56" pos:end="291:58">[<expr pos:start="291:57" pos:end="291:57"><literal type="number" pos:start="291:57" pos:end="291:57">1</literal></expr>]</index><index pos:start="291:59" pos:end="291:61">[<expr pos:start="291:60" pos:end="291:60"><literal type="number" pos:start="291:60" pos:end="291:60">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="291:64" pos:end="291:88"><expr pos:start="291:64" pos:end="291:88"><name pos:start="291:64" pos:end="291:64">y</name> <operator pos:start="291:66" pos:end="291:66">=</operator> <operator pos:start="291:68" pos:end="291:68">(</operator><name pos:start="291:69" pos:end="291:69">y</name><operator pos:start="291:70" pos:end="291:70">/</operator><name pos:start="291:71" pos:end="291:76">step_y</name> <operator pos:start="291:78" pos:end="291:78">+</operator> <literal type="number" pos:start="291:80" pos:end="291:80">1</literal><operator pos:start="291:81" pos:end="291:81">)</operator><operator pos:start="291:82" pos:end="291:82">*</operator><name pos:start="291:83" pos:end="291:88">step_y</name></expr></incr>)</control> <block pos:start="291:91" pos:end="385:13">{<block_content pos:start="293:17" pos:end="383:17">

                <for pos:start="293:17" pos:end="383:17">for <control pos:start="293:21" pos:end="293:93">(<init pos:start="293:22" pos:end="293:43"><expr pos:start="293:22" pos:end="293:42"><name pos:start="293:22" pos:end="293:22">x</name> <operator pos:start="293:24" pos:end="293:24">=</operator> <name pos:start="293:26" pos:end="293:42"><name pos:start="293:26" pos:end="293:29">tile</name><operator pos:start="293:30" pos:end="293:31">-&gt;</operator><name pos:start="293:32" pos:end="293:36">coord</name><index pos:start="293:37" pos:end="293:39">[<expr pos:start="293:38" pos:end="293:38"><literal type="number" pos:start="293:38" pos:end="293:38">0</literal></expr>]</index><index pos:start="293:40" pos:end="293:42">[<expr pos:start="293:41" pos:end="293:41"><literal type="number" pos:start="293:41" pos:end="293:41">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="293:45" pos:end="293:66"><expr pos:start="293:45" pos:end="293:65"><name pos:start="293:45" pos:end="293:45">x</name> <operator pos:start="293:47" pos:end="293:47">&lt;</operator> <name pos:start="293:49" pos:end="293:65"><name pos:start="293:49" pos:end="293:52">tile</name><operator pos:start="293:53" pos:end="293:54">-&gt;</operator><name pos:start="293:55" pos:end="293:59">coord</name><index pos:start="293:60" pos:end="293:62">[<expr pos:start="293:61" pos:end="293:61"><literal type="number" pos:start="293:61" pos:end="293:61">0</literal></expr>]</index><index pos:start="293:63" pos:end="293:65">[<expr pos:start="293:64" pos:end="293:64"><literal type="number" pos:start="293:64" pos:end="293:64">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="293:68" pos:end="293:92"><expr pos:start="293:68" pos:end="293:92"><name pos:start="293:68" pos:end="293:68">x</name> <operator pos:start="293:70" pos:end="293:70">=</operator> <operator pos:start="293:72" pos:end="293:72">(</operator><name pos:start="293:73" pos:end="293:73">x</name><operator pos:start="293:74" pos:end="293:74">/</operator><name pos:start="293:75" pos:end="293:80">step_x</name> <operator pos:start="293:82" pos:end="293:82">+</operator> <literal type="number" pos:start="293:84" pos:end="293:84">1</literal><operator pos:start="293:85" pos:end="293:85">)</operator><operator pos:start="293:86" pos:end="293:86">*</operator><name pos:start="293:87" pos:end="293:92">step_x</name></expr></incr>)</control> <block pos:start="293:95" pos:end="383:17">{<block_content pos:start="295:21" pos:end="381:21">

                    <for pos:start="295:21" pos:end="381:21">for <control pos:start="295:25" pos:end="295:66">(<init pos:start="295:26" pos:end="295:40"><expr pos:start="295:26" pos:end="295:39"><name pos:start="295:26" pos:end="295:31">compno</name> <operator pos:start="295:33" pos:end="295:33">=</operator> <name pos:start="295:35" pos:end="295:39">CSpoc</name></expr>;</init> <condition pos:start="295:42" pos:end="295:56"><expr pos:start="295:42" pos:end="295:55"><name pos:start="295:42" pos:end="295:47">compno</name> <operator pos:start="295:49" pos:end="295:49">&lt;</operator> <name pos:start="295:51" pos:end="295:55">CEpoc</name></expr>;</condition> <incr pos:start="295:58" pos:end="295:65"><expr pos:start="295:58" pos:end="295:65"><name pos:start="295:58" pos:end="295:63">compno</name><operator pos:start="295:64" pos:end="295:65">++</operator></expr></incr>)</control> <block pos:start="295:68" pos:end="381:21">{<block_content pos:start="297:25" pos:end="379:29">

                        <decl_stmt pos:start="297:25" pos:end="297:74"><decl pos:start="297:25" pos:end="297:73"><type pos:start="297:25" pos:end="297:43"><name pos:start="297:25" pos:end="297:41">Jpeg2000Component</name> <modifier pos:start="297:43" pos:end="297:43">*</modifier></type><name pos:start="297:44" pos:end="297:47">comp</name>     <init pos:start="297:53" pos:end="297:73">= <expr pos:start="297:55" pos:end="297:73"><name pos:start="297:55" pos:end="297:64"><name pos:start="297:55" pos:end="297:58">tile</name><operator pos:start="297:59" pos:end="297:60">-&gt;</operator><name pos:start="297:61" pos:end="297:64">comp</name></name> <operator pos:start="297:66" pos:end="297:66">+</operator> <name pos:start="297:68" pos:end="297:73">compno</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="299:25" pos:end="299:76"><decl pos:start="299:25" pos:end="299:75"><type pos:start="299:25" pos:end="299:45"><name pos:start="299:25" pos:end="299:43">Jpeg2000CodingStyle</name> <modifier pos:start="299:45" pos:end="299:45">*</modifier></type><name pos:start="299:46" pos:end="299:51">codsty</name> <init pos:start="299:53" pos:end="299:75">= <expr pos:start="299:55" pos:end="299:75"><name pos:start="299:55" pos:end="299:66"><name pos:start="299:55" pos:end="299:58">tile</name><operator pos:start="299:59" pos:end="299:60">-&gt;</operator><name pos:start="299:61" pos:end="299:66">codsty</name></name> <operator pos:start="299:68" pos:end="299:68">+</operator> <name pos:start="299:70" pos:end="299:75">compno</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="301:25" pos:end="301:76"><decl pos:start="301:25" pos:end="301:75"><type pos:start="301:25" pos:end="301:44"><name pos:start="301:25" pos:end="301:42">Jpeg2000QuantStyle</name> <modifier pos:start="301:44" pos:end="301:44">*</modifier></type><name pos:start="301:45" pos:end="301:50">qntsty</name>  <init pos:start="301:53" pos:end="301:75">= <expr pos:start="301:55" pos:end="301:75"><name pos:start="301:55" pos:end="301:66"><name pos:start="301:55" pos:end="301:58">tile</name><operator pos:start="301:59" pos:end="301:60">-&gt;</operator><name pos:start="301:61" pos:end="301:66">qntsty</name></name> <operator pos:start="301:68" pos:end="301:68">+</operator> <name pos:start="301:70" pos:end="301:75">compno</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="303:25" pos:end="303:82"><decl pos:start="303:25" pos:end="303:81"><type pos:start="303:25" pos:end="303:31"><name pos:start="303:25" pos:end="303:31">uint8_t</name></type> <name pos:start="303:33" pos:end="303:44">reducedresno</name> <init pos:start="303:46" pos:end="303:81">= <expr pos:start="303:48" pos:end="303:81"><name pos:start="303:48" pos:end="303:65"><name pos:start="303:48" pos:end="303:53">codsty</name><operator pos:start="303:54" pos:end="303:55">-&gt;</operator><name pos:start="303:56" pos:end="303:65">nreslevels</name></name> <operator pos:start="303:67" pos:end="303:67">-</operator> <literal type="number" pos:start="303:69" pos:end="303:71">1</literal> <operator pos:start="303:71" pos:end="303:71">-</operator><name pos:start="303:72" pos:end="303:81">reslevelno</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="303:84" pos:end="303:98">//  ==&gt; N_L - r</comment>

                        <decl_stmt pos:start="305:25" pos:end="305:79"><decl pos:start="305:25" pos:end="305:78"><type pos:start="305:25" pos:end="305:42"><name pos:start="305:25" pos:end="305:40">Jpeg2000ResLevel</name> <modifier pos:start="305:42" pos:end="305:42">*</modifier></type><name pos:start="305:43" pos:end="305:48">rlevel</name> <init pos:start="305:50" pos:end="305:78">= <expr pos:start="305:52" pos:end="305:78"><name pos:start="305:52" pos:end="305:65"><name pos:start="305:52" pos:end="305:55">comp</name><operator pos:start="305:56" pos:end="305:57">-&gt;</operator><name pos:start="305:58" pos:end="305:65">reslevel</name></name> <operator pos:start="305:67" pos:end="305:67">+</operator> <name pos:start="305:69" pos:end="305:78">reslevelno</name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="307:25" pos:end="307:44"><decl pos:start="307:25" pos:end="307:37"><type pos:start="307:25" pos:end="307:32"><name pos:start="307:25" pos:end="307:32">unsigned</name></type> <name pos:start="307:34" pos:end="307:37">prcx</name></decl>, <decl pos:start="307:40" pos:end="307:43"><type ref="prev" pos:start="307:25" pos:end="307:32"/><name pos:start="307:40" pos:end="307:43">prcy</name></decl>;</decl_stmt>



                        <decl_stmt pos:start="311:25" pos:end="311:52"><decl pos:start="311:25" pos:end="311:51"><type pos:start="311:25" pos:end="311:27"><name pos:start="311:25" pos:end="311:27">int</name></type> <name pos:start="311:29" pos:end="311:30">xc</name> <init pos:start="311:32" pos:end="311:51">= <expr pos:start="311:34" pos:end="311:51"><name pos:start="311:34" pos:end="311:34">x</name> <operator pos:start="311:36" pos:end="311:36">/</operator> <name pos:start="311:38" pos:end="311:51"><name pos:start="311:38" pos:end="311:38">s</name><operator pos:start="311:39" pos:end="311:40">-&gt;</operator><name pos:start="311:41" pos:end="311:43">cdx</name><index pos:start="311:44" pos:end="311:51">[<expr pos:start="311:45" pos:end="311:50"><name pos:start="311:45" pos:end="311:50">compno</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <decl_stmt pos:start="313:25" pos:end="313:52"><decl pos:start="313:25" pos:end="313:51"><type pos:start="313:25" pos:end="313:27"><name pos:start="313:25" pos:end="313:27">int</name></type> <name pos:start="313:29" pos:end="313:30">yc</name> <init pos:start="313:32" pos:end="313:51">= <expr pos:start="313:34" pos:end="313:51"><name pos:start="313:34" pos:end="313:34">y</name> <operator pos:start="313:36" pos:end="313:36">/</operator> <name pos:start="313:38" pos:end="313:51"><name pos:start="313:38" pos:end="313:38">s</name><operator pos:start="313:39" pos:end="313:40">-&gt;</operator><name pos:start="313:41" pos:end="313:43">cdy</name><index pos:start="313:44" pos:end="313:51">[<expr pos:start="313:45" pos:end="313:50"><name pos:start="313:45" pos:end="313:50">compno</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="317:25" pos:end="319:37"><if pos:start="317:25" pos:end="319:37">if <condition pos:start="317:28" pos:end="317:61">(<expr pos:start="317:29" pos:end="317:60"><name pos:start="317:29" pos:end="317:38">reslevelno</name> <operator pos:start="317:40" pos:end="317:41">&gt;=</operator> <name pos:start="317:43" pos:end="317:60"><name pos:start="317:43" pos:end="317:48">codsty</name><operator pos:start="317:49" pos:end="317:50">-&gt;</operator><name pos:start="317:51" pos:end="317:60">nreslevels</name></name></expr>)</condition><block type="pseudo" pos:start="319:29" pos:end="319:37"><block_content pos:start="319:29" pos:end="319:37">

                            <continue pos:start="319:29" pos:end="319:37">continue;</continue></block_content></block></if></if_stmt>



                        <if_stmt pos:start="323:25" pos:end="325:37"><if pos:start="323:25" pos:end="325:37">if <condition pos:start="323:28" pos:end="323:108">(<expr pos:start="323:29" pos:end="323:107"><name pos:start="323:29" pos:end="323:30">yc</name> <operator pos:start="323:32" pos:end="323:32">%</operator> <operator pos:start="323:34" pos:end="323:34">(</operator><literal type="number" pos:start="323:35" pos:end="323:35">1</literal> <operator pos:start="323:37" pos:end="323:38">&lt;&lt;</operator> <operator pos:start="323:40" pos:end="323:40">(</operator><name pos:start="323:41" pos:end="323:64"><name pos:start="323:41" pos:end="323:46">rlevel</name><operator pos:start="323:47" pos:end="323:48">-&gt;</operator><name pos:start="323:49" pos:end="323:64">log2_prec_height</name></name> <operator pos:start="323:66" pos:end="323:66">+</operator> <name pos:start="323:68" pos:end="323:79">reducedresno</name><operator pos:start="323:80" pos:end="323:80">)</operator><operator pos:start="323:81" pos:end="323:81">)</operator> <operator pos:start="323:83" pos:end="323:84">&amp;&amp;</operator> <name pos:start="323:86" pos:end="323:86">y</name> <operator pos:start="323:88" pos:end="323:89">!=</operator> <name pos:start="323:91" pos:end="323:107"><name pos:start="323:91" pos:end="323:94">tile</name><operator pos:start="323:95" pos:end="323:96">-&gt;</operator><name pos:start="323:97" pos:end="323:101">coord</name><index pos:start="323:102" pos:end="323:104">[<expr pos:start="323:103" pos:end="323:103"><literal type="number" pos:start="323:103" pos:end="323:103">1</literal></expr>]</index><index pos:start="323:105" pos:end="323:107">[<expr pos:start="323:106" pos:end="323:106"><literal type="number" pos:start="323:106" pos:end="323:106">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="325:29" pos:end="325:37"><block_content pos:start="325:29" pos:end="325:37"> <comment type="line" pos:start="323:110" pos:end="323:146">//FIXME this is a subset of the check</comment>

                            <continue pos:start="325:29" pos:end="325:37">continue;</continue></block_content></block></if></if_stmt>



                        <if_stmt pos:start="329:25" pos:end="331:37"><if pos:start="329:25" pos:end="331:37">if <condition pos:start="329:28" pos:end="329:107">(<expr pos:start="329:29" pos:end="329:106"><name pos:start="329:29" pos:end="329:30">xc</name> <operator pos:start="329:32" pos:end="329:32">%</operator> <operator pos:start="329:34" pos:end="329:34">(</operator><literal type="number" pos:start="329:35" pos:end="329:35">1</literal> <operator pos:start="329:37" pos:end="329:38">&lt;&lt;</operator> <operator pos:start="329:40" pos:end="329:40">(</operator><name pos:start="329:41" pos:end="329:63"><name pos:start="329:41" pos:end="329:46">rlevel</name><operator pos:start="329:47" pos:end="329:48">-&gt;</operator><name pos:start="329:49" pos:end="329:63">log2_prec_width</name></name> <operator pos:start="329:65" pos:end="329:65">+</operator> <name pos:start="329:67" pos:end="329:78">reducedresno</name><operator pos:start="329:79" pos:end="329:79">)</operator><operator pos:start="329:80" pos:end="329:80">)</operator> <operator pos:start="329:82" pos:end="329:83">&amp;&amp;</operator> <name pos:start="329:85" pos:end="329:85">x</name> <operator pos:start="329:87" pos:end="329:88">!=</operator> <name pos:start="329:90" pos:end="329:106"><name pos:start="329:90" pos:end="329:93">tile</name><operator pos:start="329:94" pos:end="329:95">-&gt;</operator><name pos:start="329:96" pos:end="329:100">coord</name><index pos:start="329:101" pos:end="329:103">[<expr pos:start="329:102" pos:end="329:102"><literal type="number" pos:start="329:102" pos:end="329:102">0</literal></expr>]</index><index pos:start="329:104" pos:end="329:106">[<expr pos:start="329:105" pos:end="329:105"><literal type="number" pos:start="329:105" pos:end="329:105">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="331:29" pos:end="331:37"><block_content pos:start="331:29" pos:end="331:37"> <comment type="line" pos:start="329:109" pos:end="329:145">//FIXME this is a subset of the check</comment>

                            <continue pos:start="331:29" pos:end="331:37">continue;</continue></block_content></block></if></if_stmt>



                        <comment type="line" pos:start="335:25" pos:end="335:53">// check if a precinct exists</comment>

                        <expr_stmt pos:start="337:25" pos:end="337:102"><expr pos:start="337:25" pos:end="337:101"><name pos:start="337:25" pos:end="337:28">prcx</name>   <operator pos:start="337:32" pos:end="337:32">=</operator> <call pos:start="337:34" pos:end="337:74"><name pos:start="337:34" pos:end="337:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="337:57" pos:end="337:74">(<argument pos:start="337:58" pos:end="337:59"><expr pos:start="337:58" pos:end="337:59"><name pos:start="337:58" pos:end="337:59">xc</name></expr></argument>, <argument pos:start="337:62" pos:end="337:73"><expr pos:start="337:62" pos:end="337:73"><name pos:start="337:62" pos:end="337:73">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="337:76" pos:end="337:77">&gt;&gt;</operator> <name pos:start="337:79" pos:end="337:101"><name pos:start="337:79" pos:end="337:84">rlevel</name><operator pos:start="337:85" pos:end="337:86">-&gt;</operator><name pos:start="337:87" pos:end="337:101">log2_prec_width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="339:25" pos:end="339:103"><expr pos:start="339:25" pos:end="339:102"><name pos:start="339:25" pos:end="339:28">prcy</name>   <operator pos:start="339:32" pos:end="339:32">=</operator> <call pos:start="339:34" pos:end="339:74"><name pos:start="339:34" pos:end="339:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="339:57" pos:end="339:74">(<argument pos:start="339:58" pos:end="339:59"><expr pos:start="339:58" pos:end="339:59"><name pos:start="339:58" pos:end="339:59">yc</name></expr></argument>, <argument pos:start="339:62" pos:end="339:73"><expr pos:start="339:62" pos:end="339:73"><name pos:start="339:62" pos:end="339:73">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="339:76" pos:end="339:77">&gt;&gt;</operator> <name pos:start="339:79" pos:end="339:102"><name pos:start="339:79" pos:end="339:84">rlevel</name><operator pos:start="339:85" pos:end="339:86">-&gt;</operator><name pos:start="339:87" pos:end="339:102">log2_prec_height</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="341:25" pos:end="341:119"><expr pos:start="341:25" pos:end="341:118"><name pos:start="341:25" pos:end="341:28">prcx</name>  <operator pos:start="341:31" pos:end="341:32">-=</operator> <call pos:start="341:34" pos:end="341:91"><name pos:start="341:34" pos:end="341:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="341:57" pos:end="341:91">(<argument pos:start="341:58" pos:end="341:76"><expr pos:start="341:58" pos:end="341:76"><name pos:start="341:58" pos:end="341:76"><name pos:start="341:58" pos:end="341:61">comp</name><operator pos:start="341:62" pos:end="341:63">-&gt;</operator><name pos:start="341:64" pos:end="341:70">coord_o</name><index pos:start="341:71" pos:end="341:73">[<expr pos:start="341:72" pos:end="341:72"><literal type="number" pos:start="341:72" pos:end="341:72">0</literal></expr>]</index><index pos:start="341:74" pos:end="341:76">[<expr pos:start="341:75" pos:end="341:75"><literal type="number" pos:start="341:75" pos:end="341:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="341:79" pos:end="341:90"><expr pos:start="341:79" pos:end="341:90"><name pos:start="341:79" pos:end="341:90">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="341:93" pos:end="341:94">&gt;&gt;</operator> <name pos:start="341:96" pos:end="341:118"><name pos:start="341:96" pos:end="341:101">rlevel</name><operator pos:start="341:102" pos:end="341:103">-&gt;</operator><name pos:start="341:104" pos:end="341:118">log2_prec_width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="343:25" pos:end="343:120"><expr pos:start="343:25" pos:end="343:119"><name pos:start="343:25" pos:end="343:28">prcy</name>  <operator pos:start="343:31" pos:end="343:32">-=</operator> <call pos:start="343:34" pos:end="343:91"><name pos:start="343:34" pos:end="343:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="343:57" pos:end="343:91">(<argument pos:start="343:58" pos:end="343:76"><expr pos:start="343:58" pos:end="343:76"><name pos:start="343:58" pos:end="343:76"><name pos:start="343:58" pos:end="343:61">comp</name><operator pos:start="343:62" pos:end="343:63">-&gt;</operator><name pos:start="343:64" pos:end="343:70">coord_o</name><index pos:start="343:71" pos:end="343:73">[<expr pos:start="343:72" pos:end="343:72"><literal type="number" pos:start="343:72" pos:end="343:72">1</literal></expr>]</index><index pos:start="343:74" pos:end="343:76">[<expr pos:start="343:75" pos:end="343:75"><literal type="number" pos:start="343:75" pos:end="343:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="343:79" pos:end="343:90"><expr pos:start="343:79" pos:end="343:90"><name pos:start="343:79" pos:end="343:90">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="343:93" pos:end="343:94">&gt;&gt;</operator> <name pos:start="343:96" pos:end="343:119"><name pos:start="343:96" pos:end="343:101">rlevel</name><operator pos:start="343:102" pos:end="343:103">-&gt;</operator><name pos:start="343:104" pos:end="343:119">log2_prec_height</name></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="347:25" pos:end="347:71"><expr pos:start="347:25" pos:end="347:70"><name pos:start="347:25" pos:end="347:30">precno</name> <operator pos:start="347:32" pos:end="347:32">=</operator> <name pos:start="347:34" pos:end="347:37">prcx</name> <operator pos:start="347:39" pos:end="347:39">+</operator> <name pos:start="347:41" pos:end="347:63"><name pos:start="347:41" pos:end="347:46">rlevel</name><operator pos:start="347:47" pos:end="347:48">-&gt;</operator><name pos:start="347:49" pos:end="347:63">num_precincts_x</name></name> <operator pos:start="347:65" pos:end="347:65">*</operator> <name pos:start="347:67" pos:end="347:70">prcy</name></expr>;</expr_stmt>



                        <expr_stmt pos:start="351:25" pos:end="351:40"><expr pos:start="351:25" pos:end="351:39"><name pos:start="351:25" pos:end="351:35">ok_reslevel</name> <operator pos:start="351:37" pos:end="351:37">=</operator> <literal type="number" pos:start="351:39" pos:end="351:39">1</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="353:25" pos:end="361:25"><if pos:start="353:25" pos:end="361:25">if <condition pos:start="353:28" pos:end="353:95">(<expr pos:start="353:29" pos:end="353:94"><name pos:start="353:29" pos:end="353:32">prcx</name> <operator pos:start="353:34" pos:end="353:35">&gt;=</operator> <name pos:start="353:37" pos:end="353:59"><name pos:start="353:37" pos:end="353:42">rlevel</name><operator pos:start="353:43" pos:end="353:44">-&gt;</operator><name pos:start="353:45" pos:end="353:59">num_precincts_x</name></name> <operator pos:start="353:61" pos:end="353:62">||</operator> <name pos:start="353:64" pos:end="353:67">prcy</name> <operator pos:start="353:69" pos:end="353:70">&gt;=</operator> <name pos:start="353:72" pos:end="353:94"><name pos:start="353:72" pos:end="353:77">rlevel</name><operator pos:start="353:78" pos:end="353:79">-&gt;</operator><name pos:start="353:80" pos:end="353:94">num_precincts_y</name></name></expr>)</condition> <block pos:start="353:97" pos:end="361:25">{<block_content pos:start="355:29" pos:end="359:37">

                            <expr_stmt pos:start="355:29" pos:end="357:97"><expr pos:start="355:29" pos:end="357:96"><call pos:start="355:29" pos:end="357:96"><name pos:start="355:29" pos:end="355:34">av_log</name><argument_list pos:start="355:35" pos:end="357:96">(<argument pos:start="355:36" pos:end="355:43"><expr pos:start="355:36" pos:end="355:43"><name pos:start="355:36" pos:end="355:43"><name pos:start="355:36" pos:end="355:36">s</name><operator pos:start="355:37" pos:end="355:38">-&gt;</operator><name pos:start="355:39" pos:end="355:43">avctx</name></name></expr></argument>, <argument pos:start="355:46" pos:end="355:59"><expr pos:start="355:46" pos:end="355:59"><name pos:start="355:46" pos:end="355:59">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="355:62" pos:end="355:95"><expr pos:start="355:62" pos:end="355:95"><literal type="string" pos:start="355:62" pos:end="355:95">"prc %d %d outside limits %d %d\n"</literal></expr></argument>,

                                   <argument pos:start="357:36" pos:end="357:39"><expr pos:start="357:36" pos:end="357:39"><name pos:start="357:36" pos:end="357:39">prcx</name></expr></argument>, <argument pos:start="357:42" pos:end="357:45"><expr pos:start="357:42" pos:end="357:45"><name pos:start="357:42" pos:end="357:45">prcy</name></expr></argument>, <argument pos:start="357:48" pos:end="357:70"><expr pos:start="357:48" pos:end="357:70"><name pos:start="357:48" pos:end="357:70"><name pos:start="357:48" pos:end="357:53">rlevel</name><operator pos:start="357:54" pos:end="357:55">-&gt;</operator><name pos:start="357:56" pos:end="357:70">num_precincts_x</name></name></expr></argument>, <argument pos:start="357:73" pos:end="357:95"><expr pos:start="357:73" pos:end="357:95"><name pos:start="357:73" pos:end="357:95"><name pos:start="357:73" pos:end="357:78">rlevel</name><operator pos:start="357:79" pos:end="357:80">-&gt;</operator><name pos:start="357:81" pos:end="357:95">num_precincts_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <continue pos:start="359:29" pos:end="359:37">continue;</continue>

                        </block_content>}</block></if></if_stmt>



                            <for pos:start="365:29" pos:end="379:29">for <control pos:start="365:33" pos:end="365:68">(<init pos:start="365:34" pos:end="365:43"><expr pos:start="365:34" pos:end="365:42"><name pos:start="365:34" pos:end="365:38">layno</name> <operator pos:start="365:40" pos:end="365:40">=</operator> <literal type="number" pos:start="365:42" pos:end="365:42">0</literal></expr>;</init> <condition pos:start="365:45" pos:end="365:59"><expr pos:start="365:45" pos:end="365:58"><name pos:start="365:45" pos:end="365:49">layno</name> <operator pos:start="365:51" pos:end="365:51">&lt;</operator> <name pos:start="365:53" pos:end="365:58">LYEpoc</name></expr>;</condition> <incr pos:start="365:61" pos:end="365:67"><expr pos:start="365:61" pos:end="365:67"><name pos:start="365:61" pos:end="365:65">layno</name><operator pos:start="365:66" pos:end="365:67">++</operator></expr></incr>)</control> <block pos:start="365:70" pos:end="379:29">{<block_content pos:start="367:33" pos:end="377:47">

                                <if_stmt pos:start="367:33" pos:end="377:47"><if pos:start="367:33" pos:end="377:47">if <condition pos:start="367:36" pos:end="375:89">(<expr pos:start="367:37" pos:end="375:88"><operator pos:start="367:37" pos:end="367:37">(</operator><name pos:start="367:38" pos:end="367:40">ret</name> <operator pos:start="367:42" pos:end="367:42">=</operator> <call pos:start="367:44" pos:end="375:83"><name pos:start="367:44" pos:end="367:65">jpeg2000_decode_packet</name><argument_list pos:start="367:66" pos:end="375:83">(<argument pos:start="367:67" pos:end="367:67"><expr pos:start="367:67" pos:end="367:67"><name pos:start="367:67" pos:end="367:67">s</name></expr></argument>, <argument pos:start="367:70" pos:end="367:73"><expr pos:start="367:70" pos:end="367:73"><name pos:start="367:70" pos:end="367:73">tile</name></expr></argument>, <argument pos:start="367:76" pos:end="367:84"><expr pos:start="367:76" pos:end="367:84"><operator pos:start="367:76" pos:end="367:76">&amp;</operator><name pos:start="367:77" pos:end="367:84">tp_index</name></expr></argument>,

                                                                <argument pos:start="369:65" pos:end="369:70"><expr pos:start="369:65" pos:end="369:70"><name pos:start="369:65" pos:end="369:70">codsty</name></expr></argument>, <argument pos:start="369:73" pos:end="369:78"><expr pos:start="369:73" pos:end="369:78"><name pos:start="369:73" pos:end="369:78">rlevel</name></expr></argument>,

                                                                <argument pos:start="371:65" pos:end="371:70"><expr pos:start="371:65" pos:end="371:70"><name pos:start="371:65" pos:end="371:70">precno</name></expr></argument>, <argument pos:start="371:73" pos:end="371:77"><expr pos:start="371:73" pos:end="371:77"><name pos:start="371:73" pos:end="371:77">layno</name></expr></argument>,

                                                                <argument pos:start="373:65" pos:end="373:122"><expr pos:start="373:65" pos:end="373:122"><name pos:start="373:65" pos:end="373:76"><name pos:start="373:65" pos:end="373:70">qntsty</name><operator pos:start="373:71" pos:end="373:72">-&gt;</operator><name pos:start="373:73" pos:end="373:76">expn</name></name> <operator pos:start="373:78" pos:end="373:78">+</operator> <operator pos:start="373:80" pos:end="373:80">(</operator><ternary pos:start="373:81" pos:end="373:121"><condition pos:start="373:81" pos:end="373:92"><expr pos:start="373:81" pos:end="373:90"><name pos:start="373:81" pos:end="373:90">reslevelno</name></expr> ?</condition><then pos:start="373:94" pos:end="373:117"> <expr pos:start="373:94" pos:end="373:117"><literal type="number" pos:start="373:94" pos:end="373:94">3</literal> <operator pos:start="373:96" pos:end="373:96">*</operator> <operator pos:start="373:98" pos:end="373:98">(</operator><name pos:start="373:99" pos:end="373:108">reslevelno</name> <operator pos:start="373:110" pos:end="373:110">-</operator> <literal type="number" pos:start="373:112" pos:end="373:112">1</literal><operator pos:start="373:113" pos:end="373:113">)</operator> <operator pos:start="373:115" pos:end="373:115">+</operator> <literal type="number" pos:start="373:117" pos:end="373:117">1</literal></expr> </then><else pos:start="373:119" pos:end="373:121">: <expr pos:start="373:121" pos:end="373:121"><literal type="number" pos:start="373:121" pos:end="373:121">0</literal></expr></else></ternary><operator pos:start="373:122" pos:end="373:122">)</operator></expr></argument>,

                                                                <argument pos:start="375:65" pos:end="375:82"><expr pos:start="375:65" pos:end="375:82"><name pos:start="375:65" pos:end="375:82"><name pos:start="375:65" pos:end="375:70">qntsty</name><operator pos:start="375:71" pos:end="375:72">-&gt;</operator><name pos:start="375:73" pos:end="375:82">nguardbits</name></name></expr></argument>)</argument_list></call><operator pos:start="375:84" pos:end="375:84">)</operator> <operator pos:start="375:86" pos:end="375:86">&lt;</operator> <literal type="number" pos:start="375:88" pos:end="375:88">0</literal></expr>)</condition><block type="pseudo" pos:start="377:37" pos:end="377:47"><block_content pos:start="377:37" pos:end="377:47">

                                    <return pos:start="377:37" pos:end="377:47">return <expr pos:start="377:44" pos:end="377:46"><name pos:start="377:44" pos:end="377:46">ret</name></expr>;</return></block_content></block></if></if_stmt>

                            </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="389:9" pos:end="389:14">break;</break>



    <case pos:start="393:5" pos:end="393:28">case <expr pos:start="393:10" pos:end="393:27"><name pos:start="393:10" pos:end="393:27">JPEG2000_PGOD_PCRL</name></expr>:</case>

        <expr_stmt pos:start="395:9" pos:end="395:69"><expr pos:start="395:9" pos:end="395:68"><call pos:start="395:9" pos:end="395:68"><name pos:start="395:9" pos:end="395:14">av_log</name><argument_list pos:start="395:15" pos:end="395:68">(<argument pos:start="395:16" pos:end="395:23"><expr pos:start="395:16" pos:end="395:23"><name pos:start="395:16" pos:end="395:23"><name pos:start="395:16" pos:end="395:16">s</name><operator pos:start="395:17" pos:end="395:18">-&gt;</operator><name pos:start="395:19" pos:end="395:23">avctx</name></name></expr></argument>, <argument pos:start="395:26" pos:end="395:39"><expr pos:start="395:26" pos:end="395:39"><name pos:start="395:26" pos:end="395:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="395:42" pos:end="395:67"><expr pos:start="395:42" pos:end="395:67"><literal type="string" pos:start="395:42" pos:end="395:67">"Progression order PCRL\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="397:9" pos:end="397:20"><expr pos:start="397:9" pos:end="397:19"><name pos:start="397:9" pos:end="397:14">step_x</name> <operator pos:start="397:16" pos:end="397:16">=</operator> <literal type="number" pos:start="397:18" pos:end="397:19">32</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="399:20"><expr pos:start="399:9" pos:end="399:19"><name pos:start="399:9" pos:end="399:14">step_y</name> <operator pos:start="399:16" pos:end="399:16">=</operator> <literal type="number" pos:start="399:18" pos:end="399:19">32</literal></expr>;</expr_stmt>

        <for pos:start="401:9" pos:end="423:9">for <control pos:start="401:13" pos:end="401:54">(<init pos:start="401:14" pos:end="401:28"><expr pos:start="401:14" pos:end="401:27"><name pos:start="401:14" pos:end="401:19">compno</name> <operator pos:start="401:21" pos:end="401:21">=</operator> <name pos:start="401:23" pos:end="401:27">CSpoc</name></expr>;</init> <condition pos:start="401:30" pos:end="401:44"><expr pos:start="401:30" pos:end="401:43"><name pos:start="401:30" pos:end="401:35">compno</name> <operator pos:start="401:37" pos:end="401:37">&lt;</operator> <name pos:start="401:39" pos:end="401:43">CEpoc</name></expr>;</condition> <incr pos:start="401:46" pos:end="401:53"><expr pos:start="401:46" pos:end="401:53"><name pos:start="401:46" pos:end="401:51">compno</name><operator pos:start="401:52" pos:end="401:53">++</operator></expr></incr>)</control> <block pos:start="401:56" pos:end="423:9">{<block_content pos:start="403:13" pos:end="421:13">

            <decl_stmt pos:start="403:13" pos:end="403:62"><decl pos:start="403:13" pos:end="403:61"><type pos:start="403:13" pos:end="403:31"><name pos:start="403:13" pos:end="403:29">Jpeg2000Component</name> <modifier pos:start="403:31" pos:end="403:31">*</modifier></type><name pos:start="403:32" pos:end="403:35">comp</name>     <init pos:start="403:41" pos:end="403:61">= <expr pos:start="403:43" pos:end="403:61"><name pos:start="403:43" pos:end="403:52"><name pos:start="403:43" pos:end="403:46">tile</name><operator pos:start="403:47" pos:end="403:48">-&gt;</operator><name pos:start="403:49" pos:end="403:52">comp</name></name> <operator pos:start="403:54" pos:end="403:54">+</operator> <name pos:start="403:56" pos:end="403:61">compno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="405:13" pos:end="405:64"><decl pos:start="405:13" pos:end="405:63"><type pos:start="405:13" pos:end="405:33"><name pos:start="405:13" pos:end="405:31">Jpeg2000CodingStyle</name> <modifier pos:start="405:33" pos:end="405:33">*</modifier></type><name pos:start="405:34" pos:end="405:39">codsty</name> <init pos:start="405:41" pos:end="405:63">= <expr pos:start="405:43" pos:end="405:63"><name pos:start="405:43" pos:end="405:54"><name pos:start="405:43" pos:end="405:46">tile</name><operator pos:start="405:47" pos:end="405:48">-&gt;</operator><name pos:start="405:49" pos:end="405:54">codsty</name></name> <operator pos:start="405:56" pos:end="405:56">+</operator> <name pos:start="405:58" pos:end="405:63">compno</name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="407:13" pos:end="407:64"><decl pos:start="407:13" pos:end="407:63"><type pos:start="407:13" pos:end="407:32"><name pos:start="407:13" pos:end="407:30">Jpeg2000QuantStyle</name> <modifier pos:start="407:32" pos:end="407:32">*</modifier></type><name pos:start="407:33" pos:end="407:38">qntsty</name>  <init pos:start="407:41" pos:end="407:63">= <expr pos:start="407:43" pos:end="407:63"><name pos:start="407:43" pos:end="407:54"><name pos:start="407:43" pos:end="407:46">tile</name><operator pos:start="407:47" pos:end="407:48">-&gt;</operator><name pos:start="407:49" pos:end="407:54">qntsty</name></name> <operator pos:start="407:56" pos:end="407:56">+</operator> <name pos:start="407:58" pos:end="407:63">compno</name></expr></init></decl>;</decl_stmt>



            <for pos:start="411:13" pos:end="421:13">for <control pos:start="411:17" pos:end="411:97">(<init pos:start="411:18" pos:end="411:36"><expr pos:start="411:18" pos:end="411:35"><name pos:start="411:18" pos:end="411:27">reslevelno</name> <operator pos:start="411:29" pos:end="411:29">=</operator> <name pos:start="411:31" pos:end="411:35">RSpoc</name></expr>;</init> <condition pos:start="411:38" pos:end="411:83"><expr pos:start="411:38" pos:end="411:82"><name pos:start="411:38" pos:end="411:47">reslevelno</name> <operator pos:start="411:49" pos:end="411:49">&lt;</operator> <call pos:start="411:51" pos:end="411:82"><name pos:start="411:51" pos:end="411:55">FFMIN</name><argument_list pos:start="411:56" pos:end="411:82">(<argument pos:start="411:57" pos:end="411:74"><expr pos:start="411:57" pos:end="411:74"><name pos:start="411:57" pos:end="411:74"><name pos:start="411:57" pos:end="411:62">codsty</name><operator pos:start="411:63" pos:end="411:64">-&gt;</operator><name pos:start="411:65" pos:end="411:74">nreslevels</name></name></expr></argument>, <argument pos:start="411:77" pos:end="411:81"><expr pos:start="411:77" pos:end="411:81"><name pos:start="411:77" pos:end="411:81">REpoc</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="411:85" pos:end="411:96"><expr pos:start="411:85" pos:end="411:96"><name pos:start="411:85" pos:end="411:94">reslevelno</name><operator pos:start="411:95" pos:end="411:96">++</operator></expr></incr>)</control> <block pos:start="411:99" pos:end="421:13">{<block_content pos:start="413:17" pos:end="419:80">

                <decl_stmt pos:start="413:17" pos:end="413:74"><decl pos:start="413:17" pos:end="413:73"><type pos:start="413:17" pos:end="413:23"><name pos:start="413:17" pos:end="413:23">uint8_t</name></type> <name pos:start="413:25" pos:end="413:36">reducedresno</name> <init pos:start="413:38" pos:end="413:73">= <expr pos:start="413:40" pos:end="413:73"><name pos:start="413:40" pos:end="413:57"><name pos:start="413:40" pos:end="413:45">codsty</name><operator pos:start="413:46" pos:end="413:47">-&gt;</operator><name pos:start="413:48" pos:end="413:57">nreslevels</name></name> <operator pos:start="413:59" pos:end="413:59">-</operator> <literal type="number" pos:start="413:61" pos:end="413:63">1</literal> <operator pos:start="413:63" pos:end="413:63">-</operator><name pos:start="413:64" pos:end="413:73">reslevelno</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="413:76" pos:end="413:90">//  ==&gt; N_L - r</comment>

                <decl_stmt pos:start="415:17" pos:end="415:71"><decl pos:start="415:17" pos:end="415:70"><type pos:start="415:17" pos:end="415:34"><name pos:start="415:17" pos:end="415:32">Jpeg2000ResLevel</name> <modifier pos:start="415:34" pos:end="415:34">*</modifier></type><name pos:start="415:35" pos:end="415:40">rlevel</name> <init pos:start="415:42" pos:end="415:70">= <expr pos:start="415:44" pos:end="415:70"><name pos:start="415:44" pos:end="415:57"><name pos:start="415:44" pos:end="415:47">comp</name><operator pos:start="415:48" pos:end="415:49">-&gt;</operator><name pos:start="415:50" pos:end="415:57">reslevel</name></name> <operator pos:start="415:59" pos:end="415:59">+</operator> <name pos:start="415:61" pos:end="415:70">reslevelno</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:80"><expr pos:start="417:17" pos:end="417:79"><name pos:start="417:17" pos:end="417:22">step_x</name> <operator pos:start="417:24" pos:end="417:24">=</operator> <call pos:start="417:26" pos:end="417:79"><name pos:start="417:26" pos:end="417:30">FFMIN</name><argument_list pos:start="417:31" pos:end="417:79">(<argument pos:start="417:32" pos:end="417:37"><expr pos:start="417:32" pos:end="417:37"><name pos:start="417:32" pos:end="417:37">step_x</name></expr></argument>, <argument pos:start="417:40" pos:end="417:78"><expr pos:start="417:40" pos:end="417:78"><name pos:start="417:40" pos:end="417:62"><name pos:start="417:40" pos:end="417:45">rlevel</name><operator pos:start="417:46" pos:end="417:47">-&gt;</operator><name pos:start="417:48" pos:end="417:62">log2_prec_width</name></name>  <operator pos:start="417:65" pos:end="417:65">+</operator> <name pos:start="417:67" pos:end="417:78">reducedresno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:80"><expr pos:start="419:17" pos:end="419:79"><name pos:start="419:17" pos:end="419:22">step_y</name> <operator pos:start="419:24" pos:end="419:24">=</operator> <call pos:start="419:26" pos:end="419:79"><name pos:start="419:26" pos:end="419:30">FFMIN</name><argument_list pos:start="419:31" pos:end="419:79">(<argument pos:start="419:32" pos:end="419:37"><expr pos:start="419:32" pos:end="419:37"><name pos:start="419:32" pos:end="419:37">step_y</name></expr></argument>, <argument pos:start="419:40" pos:end="419:78"><expr pos:start="419:40" pos:end="419:78"><name pos:start="419:40" pos:end="419:63"><name pos:start="419:40" pos:end="419:45">rlevel</name><operator pos:start="419:46" pos:end="419:47">-&gt;</operator><name pos:start="419:48" pos:end="419:63">log2_prec_height</name></name> <operator pos:start="419:65" pos:end="419:65">+</operator> <name pos:start="419:67" pos:end="419:78">reducedresno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="425:9" pos:end="425:27"><expr pos:start="425:9" pos:end="425:26"><name pos:start="425:9" pos:end="425:14">step_x</name> <operator pos:start="425:16" pos:end="425:16">=</operator> <literal type="number" pos:start="425:18" pos:end="425:18">1</literal><operator pos:start="425:19" pos:end="425:20">&lt;&lt;</operator><name pos:start="425:21" pos:end="425:26">step_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="427:9" pos:end="427:27"><expr pos:start="427:9" pos:end="427:26"><name pos:start="427:9" pos:end="427:14">step_y</name> <operator pos:start="427:16" pos:end="427:16">=</operator> <literal type="number" pos:start="427:18" pos:end="427:18">1</literal><operator pos:start="427:19" pos:end="427:20">&lt;&lt;</operator><name pos:start="427:21" pos:end="427:26">step_y</name></expr>;</expr_stmt>



        <for pos:start="431:9" pos:end="519:9">for <control pos:start="431:13" pos:end="431:85">(<init pos:start="431:14" pos:end="431:35"><expr pos:start="431:14" pos:end="431:34"><name pos:start="431:14" pos:end="431:14">y</name> <operator pos:start="431:16" pos:end="431:16">=</operator> <name pos:start="431:18" pos:end="431:34"><name pos:start="431:18" pos:end="431:21">tile</name><operator pos:start="431:22" pos:end="431:23">-&gt;</operator><name pos:start="431:24" pos:end="431:28">coord</name><index pos:start="431:29" pos:end="431:31">[<expr pos:start="431:30" pos:end="431:30"><literal type="number" pos:start="431:30" pos:end="431:30">1</literal></expr>]</index><index pos:start="431:32" pos:end="431:34">[<expr pos:start="431:33" pos:end="431:33"><literal type="number" pos:start="431:33" pos:end="431:33">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="431:37" pos:end="431:58"><expr pos:start="431:37" pos:end="431:57"><name pos:start="431:37" pos:end="431:37">y</name> <operator pos:start="431:39" pos:end="431:39">&lt;</operator> <name pos:start="431:41" pos:end="431:57"><name pos:start="431:41" pos:end="431:44">tile</name><operator pos:start="431:45" pos:end="431:46">-&gt;</operator><name pos:start="431:47" pos:end="431:51">coord</name><index pos:start="431:52" pos:end="431:54">[<expr pos:start="431:53" pos:end="431:53"><literal type="number" pos:start="431:53" pos:end="431:53">1</literal></expr>]</index><index pos:start="431:55" pos:end="431:57">[<expr pos:start="431:56" pos:end="431:56"><literal type="number" pos:start="431:56" pos:end="431:56">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="431:60" pos:end="431:84"><expr pos:start="431:60" pos:end="431:84"><name pos:start="431:60" pos:end="431:60">y</name> <operator pos:start="431:62" pos:end="431:62">=</operator> <operator pos:start="431:64" pos:end="431:64">(</operator><name pos:start="431:65" pos:end="431:65">y</name><operator pos:start="431:66" pos:end="431:66">/</operator><name pos:start="431:67" pos:end="431:72">step_y</name> <operator pos:start="431:74" pos:end="431:74">+</operator> <literal type="number" pos:start="431:76" pos:end="431:76">1</literal><operator pos:start="431:77" pos:end="431:77">)</operator><operator pos:start="431:78" pos:end="431:78">*</operator><name pos:start="431:79" pos:end="431:84">step_y</name></expr></incr>)</control> <block pos:start="431:87" pos:end="519:9">{<block_content pos:start="433:13" pos:end="517:13">

            <for pos:start="433:13" pos:end="517:13">for <control pos:start="433:17" pos:end="433:89">(<init pos:start="433:18" pos:end="433:39"><expr pos:start="433:18" pos:end="433:38"><name pos:start="433:18" pos:end="433:18">x</name> <operator pos:start="433:20" pos:end="433:20">=</operator> <name pos:start="433:22" pos:end="433:38"><name pos:start="433:22" pos:end="433:25">tile</name><operator pos:start="433:26" pos:end="433:27">-&gt;</operator><name pos:start="433:28" pos:end="433:32">coord</name><index pos:start="433:33" pos:end="433:35">[<expr pos:start="433:34" pos:end="433:34"><literal type="number" pos:start="433:34" pos:end="433:34">0</literal></expr>]</index><index pos:start="433:36" pos:end="433:38">[<expr pos:start="433:37" pos:end="433:37"><literal type="number" pos:start="433:37" pos:end="433:37">0</literal></expr>]</index></name></expr>;</init> <condition pos:start="433:41" pos:end="433:62"><expr pos:start="433:41" pos:end="433:61"><name pos:start="433:41" pos:end="433:41">x</name> <operator pos:start="433:43" pos:end="433:43">&lt;</operator> <name pos:start="433:45" pos:end="433:61"><name pos:start="433:45" pos:end="433:48">tile</name><operator pos:start="433:49" pos:end="433:50">-&gt;</operator><name pos:start="433:51" pos:end="433:55">coord</name><index pos:start="433:56" pos:end="433:58">[<expr pos:start="433:57" pos:end="433:57"><literal type="number" pos:start="433:57" pos:end="433:57">0</literal></expr>]</index><index pos:start="433:59" pos:end="433:61">[<expr pos:start="433:60" pos:end="433:60"><literal type="number" pos:start="433:60" pos:end="433:60">1</literal></expr>]</index></name></expr>;</condition> <incr pos:start="433:64" pos:end="433:88"><expr pos:start="433:64" pos:end="433:88"><name pos:start="433:64" pos:end="433:64">x</name> <operator pos:start="433:66" pos:end="433:66">=</operator> <operator pos:start="433:68" pos:end="433:68">(</operator><name pos:start="433:69" pos:end="433:69">x</name><operator pos:start="433:70" pos:end="433:70">/</operator><name pos:start="433:71" pos:end="433:76">step_x</name> <operator pos:start="433:78" pos:end="433:78">+</operator> <literal type="number" pos:start="433:80" pos:end="433:80">1</literal><operator pos:start="433:81" pos:end="433:81">)</operator><operator pos:start="433:82" pos:end="433:82">*</operator><name pos:start="433:83" pos:end="433:88">step_x</name></expr></incr>)</control> <block pos:start="433:91" pos:end="517:13">{<block_content pos:start="435:17" pos:end="515:17">

                <for pos:start="435:17" pos:end="515:17">for <control pos:start="435:21" pos:end="435:62">(<init pos:start="435:22" pos:end="435:36"><expr pos:start="435:22" pos:end="435:35"><name pos:start="435:22" pos:end="435:27">compno</name> <operator pos:start="435:29" pos:end="435:29">=</operator> <name pos:start="435:31" pos:end="435:35">CSpoc</name></expr>;</init> <condition pos:start="435:38" pos:end="435:52"><expr pos:start="435:38" pos:end="435:51"><name pos:start="435:38" pos:end="435:43">compno</name> <operator pos:start="435:45" pos:end="435:45">&lt;</operator> <name pos:start="435:47" pos:end="435:51">CEpoc</name></expr>;</condition> <incr pos:start="435:54" pos:end="435:61"><expr pos:start="435:54" pos:end="435:61"><name pos:start="435:54" pos:end="435:59">compno</name><operator pos:start="435:60" pos:end="435:61">++</operator></expr></incr>)</control> <block pos:start="435:64" pos:end="515:17">{<block_content pos:start="437:21" pos:end="513:21">

                    <decl_stmt pos:start="437:21" pos:end="437:70"><decl pos:start="437:21" pos:end="437:69"><type pos:start="437:21" pos:end="437:39"><name pos:start="437:21" pos:end="437:37">Jpeg2000Component</name> <modifier pos:start="437:39" pos:end="437:39">*</modifier></type><name pos:start="437:40" pos:end="437:43">comp</name>     <init pos:start="437:49" pos:end="437:69">= <expr pos:start="437:51" pos:end="437:69"><name pos:start="437:51" pos:end="437:60"><name pos:start="437:51" pos:end="437:54">tile</name><operator pos:start="437:55" pos:end="437:56">-&gt;</operator><name pos:start="437:57" pos:end="437:60">comp</name></name> <operator pos:start="437:62" pos:end="437:62">+</operator> <name pos:start="437:64" pos:end="437:69">compno</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="439:21" pos:end="439:72"><decl pos:start="439:21" pos:end="439:71"><type pos:start="439:21" pos:end="439:41"><name pos:start="439:21" pos:end="439:39">Jpeg2000CodingStyle</name> <modifier pos:start="439:41" pos:end="439:41">*</modifier></type><name pos:start="439:42" pos:end="439:47">codsty</name> <init pos:start="439:49" pos:end="439:71">= <expr pos:start="439:51" pos:end="439:71"><name pos:start="439:51" pos:end="439:62"><name pos:start="439:51" pos:end="439:54">tile</name><operator pos:start="439:55" pos:end="439:56">-&gt;</operator><name pos:start="439:57" pos:end="439:62">codsty</name></name> <operator pos:start="439:64" pos:end="439:64">+</operator> <name pos:start="439:66" pos:end="439:71">compno</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="441:21" pos:end="441:72"><decl pos:start="441:21" pos:end="441:71"><type pos:start="441:21" pos:end="441:40"><name pos:start="441:21" pos:end="441:38">Jpeg2000QuantStyle</name> <modifier pos:start="441:40" pos:end="441:40">*</modifier></type><name pos:start="441:41" pos:end="441:46">qntsty</name>  <init pos:start="441:49" pos:end="441:71">= <expr pos:start="441:51" pos:end="441:71"><name pos:start="441:51" pos:end="441:62"><name pos:start="441:51" pos:end="441:54">tile</name><operator pos:start="441:55" pos:end="441:56">-&gt;</operator><name pos:start="441:57" pos:end="441:62">qntsty</name></name> <operator pos:start="441:64" pos:end="441:64">+</operator> <name pos:start="441:66" pos:end="441:71">compno</name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="443:21" pos:end="443:48"><decl pos:start="443:21" pos:end="443:47"><type pos:start="443:21" pos:end="443:23"><name pos:start="443:21" pos:end="443:23">int</name></type> <name pos:start="443:25" pos:end="443:26">xc</name> <init pos:start="443:28" pos:end="443:47">= <expr pos:start="443:30" pos:end="443:47"><name pos:start="443:30" pos:end="443:30">x</name> <operator pos:start="443:32" pos:end="443:32">/</operator> <name pos:start="443:34" pos:end="443:47"><name pos:start="443:34" pos:end="443:34">s</name><operator pos:start="443:35" pos:end="443:36">-&gt;</operator><name pos:start="443:37" pos:end="443:39">cdx</name><index pos:start="443:40" pos:end="443:47">[<expr pos:start="443:41" pos:end="443:46"><name pos:start="443:41" pos:end="443:46">compno</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <decl_stmt pos:start="445:21" pos:end="445:48"><decl pos:start="445:21" pos:end="445:47"><type pos:start="445:21" pos:end="445:23"><name pos:start="445:21" pos:end="445:23">int</name></type> <name pos:start="445:25" pos:end="445:26">yc</name> <init pos:start="445:28" pos:end="445:47">= <expr pos:start="445:30" pos:end="445:47"><name pos:start="445:30" pos:end="445:30">y</name> <operator pos:start="445:32" pos:end="445:32">/</operator> <name pos:start="445:34" pos:end="445:47"><name pos:start="445:34" pos:end="445:34">s</name><operator pos:start="445:35" pos:end="445:36">-&gt;</operator><name pos:start="445:37" pos:end="445:39">cdy</name><index pos:start="445:40" pos:end="445:47">[<expr pos:start="445:41" pos:end="445:46"><name pos:start="445:41" pos:end="445:46">compno</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



                    <for pos:start="449:21" pos:end="513:21">for <control pos:start="449:25" pos:end="449:105">(<init pos:start="449:26" pos:end="449:44"><expr pos:start="449:26" pos:end="449:43"><name pos:start="449:26" pos:end="449:35">reslevelno</name> <operator pos:start="449:37" pos:end="449:37">=</operator> <name pos:start="449:39" pos:end="449:43">RSpoc</name></expr>;</init> <condition pos:start="449:46" pos:end="449:91"><expr pos:start="449:46" pos:end="449:90"><name pos:start="449:46" pos:end="449:55">reslevelno</name> <operator pos:start="449:57" pos:end="449:57">&lt;</operator> <call pos:start="449:59" pos:end="449:90"><name pos:start="449:59" pos:end="449:63">FFMIN</name><argument_list pos:start="449:64" pos:end="449:90">(<argument pos:start="449:65" pos:end="449:82"><expr pos:start="449:65" pos:end="449:82"><name pos:start="449:65" pos:end="449:82"><name pos:start="449:65" pos:end="449:70">codsty</name><operator pos:start="449:71" pos:end="449:72">-&gt;</operator><name pos:start="449:73" pos:end="449:82">nreslevels</name></name></expr></argument>, <argument pos:start="449:85" pos:end="449:89"><expr pos:start="449:85" pos:end="449:89"><name pos:start="449:85" pos:end="449:89">REpoc</name></expr></argument>)</argument_list></call></expr>;</condition> <incr pos:start="449:93" pos:end="449:104"><expr pos:start="449:93" pos:end="449:104"><name pos:start="449:93" pos:end="449:102">reslevelno</name><operator pos:start="449:103" pos:end="449:104">++</operator></expr></incr>)</control> <block pos:start="449:107" pos:end="513:21">{<block_content pos:start="451:25" pos:end="511:25">

                        <decl_stmt pos:start="451:25" pos:end="451:44"><decl pos:start="451:25" pos:end="451:37"><type pos:start="451:25" pos:end="451:32"><name pos:start="451:25" pos:end="451:32">unsigned</name></type> <name pos:start="451:34" pos:end="451:37">prcx</name></decl>, <decl pos:start="451:40" pos:end="451:43"><type ref="prev" pos:start="451:25" pos:end="451:32"/><name pos:start="451:40" pos:end="451:43">prcy</name></decl>;</decl_stmt>

                        <decl_stmt pos:start="453:25" pos:end="453:82"><decl pos:start="453:25" pos:end="453:81"><type pos:start="453:25" pos:end="453:31"><name pos:start="453:25" pos:end="453:31">uint8_t</name></type> <name pos:start="453:33" pos:end="453:44">reducedresno</name> <init pos:start="453:46" pos:end="453:81">= <expr pos:start="453:48" pos:end="453:81"><name pos:start="453:48" pos:end="453:65"><name pos:start="453:48" pos:end="453:53">codsty</name><operator pos:start="453:54" pos:end="453:55">-&gt;</operator><name pos:start="453:56" pos:end="453:65">nreslevels</name></name> <operator pos:start="453:67" pos:end="453:67">-</operator> <literal type="number" pos:start="453:69" pos:end="453:71">1</literal> <operator pos:start="453:71" pos:end="453:71">-</operator><name pos:start="453:72" pos:end="453:81">reslevelno</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="453:84" pos:end="453:98">//  ==&gt; N_L - r</comment>

                        <decl_stmt pos:start="455:25" pos:end="455:79"><decl pos:start="455:25" pos:end="455:78"><type pos:start="455:25" pos:end="455:42"><name pos:start="455:25" pos:end="455:40">Jpeg2000ResLevel</name> <modifier pos:start="455:42" pos:end="455:42">*</modifier></type><name pos:start="455:43" pos:end="455:48">rlevel</name> <init pos:start="455:50" pos:end="455:78">= <expr pos:start="455:52" pos:end="455:78"><name pos:start="455:52" pos:end="455:65"><name pos:start="455:52" pos:end="455:55">comp</name><operator pos:start="455:56" pos:end="455:57">-&gt;</operator><name pos:start="455:58" pos:end="455:65">reslevel</name></name> <operator pos:start="455:67" pos:end="455:67">+</operator> <name pos:start="455:69" pos:end="455:78">reslevelno</name></expr></init></decl>;</decl_stmt>



                        <if_stmt pos:start="459:25" pos:end="461:37"><if pos:start="459:25" pos:end="461:37">if <condition pos:start="459:28" pos:end="459:108">(<expr pos:start="459:29" pos:end="459:107"><name pos:start="459:29" pos:end="459:30">yc</name> <operator pos:start="459:32" pos:end="459:32">%</operator> <operator pos:start="459:34" pos:end="459:34">(</operator><literal type="number" pos:start="459:35" pos:end="459:35">1</literal> <operator pos:start="459:37" pos:end="459:38">&lt;&lt;</operator> <operator pos:start="459:40" pos:end="459:40">(</operator><name pos:start="459:41" pos:end="459:64"><name pos:start="459:41" pos:end="459:46">rlevel</name><operator pos:start="459:47" pos:end="459:48">-&gt;</operator><name pos:start="459:49" pos:end="459:64">log2_prec_height</name></name> <operator pos:start="459:66" pos:end="459:66">+</operator> <name pos:start="459:68" pos:end="459:79">reducedresno</name><operator pos:start="459:80" pos:end="459:80">)</operator><operator pos:start="459:81" pos:end="459:81">)</operator> <operator pos:start="459:83" pos:end="459:84">&amp;&amp;</operator> <name pos:start="459:86" pos:end="459:86">y</name> <operator pos:start="459:88" pos:end="459:89">!=</operator> <name pos:start="459:91" pos:end="459:107"><name pos:start="459:91" pos:end="459:94">tile</name><operator pos:start="459:95" pos:end="459:96">-&gt;</operator><name pos:start="459:97" pos:end="459:101">coord</name><index pos:start="459:102" pos:end="459:104">[<expr pos:start="459:103" pos:end="459:103"><literal type="number" pos:start="459:103" pos:end="459:103">1</literal></expr>]</index><index pos:start="459:105" pos:end="459:107">[<expr pos:start="459:106" pos:end="459:106"><literal type="number" pos:start="459:106" pos:end="459:106">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="461:29" pos:end="461:37"><block_content pos:start="461:29" pos:end="461:37"> <comment type="line" pos:start="459:110" pos:end="459:146">//FIXME this is a subset of the check</comment>

                            <continue pos:start="461:29" pos:end="461:37">continue;</continue></block_content></block></if></if_stmt>



                        <if_stmt pos:start="465:25" pos:end="467:37"><if pos:start="465:25" pos:end="467:37">if <condition pos:start="465:28" pos:end="465:107">(<expr pos:start="465:29" pos:end="465:106"><name pos:start="465:29" pos:end="465:30">xc</name> <operator pos:start="465:32" pos:end="465:32">%</operator> <operator pos:start="465:34" pos:end="465:34">(</operator><literal type="number" pos:start="465:35" pos:end="465:35">1</literal> <operator pos:start="465:37" pos:end="465:38">&lt;&lt;</operator> <operator pos:start="465:40" pos:end="465:40">(</operator><name pos:start="465:41" pos:end="465:63"><name pos:start="465:41" pos:end="465:46">rlevel</name><operator pos:start="465:47" pos:end="465:48">-&gt;</operator><name pos:start="465:49" pos:end="465:63">log2_prec_width</name></name> <operator pos:start="465:65" pos:end="465:65">+</operator> <name pos:start="465:67" pos:end="465:78">reducedresno</name><operator pos:start="465:79" pos:end="465:79">)</operator><operator pos:start="465:80" pos:end="465:80">)</operator> <operator pos:start="465:82" pos:end="465:83">&amp;&amp;</operator> <name pos:start="465:85" pos:end="465:85">x</name> <operator pos:start="465:87" pos:end="465:88">!=</operator> <name pos:start="465:90" pos:end="465:106"><name pos:start="465:90" pos:end="465:93">tile</name><operator pos:start="465:94" pos:end="465:95">-&gt;</operator><name pos:start="465:96" pos:end="465:100">coord</name><index pos:start="465:101" pos:end="465:103">[<expr pos:start="465:102" pos:end="465:102"><literal type="number" pos:start="465:102" pos:end="465:102">0</literal></expr>]</index><index pos:start="465:104" pos:end="465:106">[<expr pos:start="465:105" pos:end="465:105"><literal type="number" pos:start="465:105" pos:end="465:105">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="467:29" pos:end="467:37"><block_content pos:start="467:29" pos:end="467:37"> <comment type="line" pos:start="465:109" pos:end="465:145">//FIXME this is a subset of the check</comment>

                            <continue pos:start="467:29" pos:end="467:37">continue;</continue></block_content></block></if></if_stmt>



                        <comment type="line" pos:start="471:25" pos:end="471:53">// check if a precinct exists</comment>

                        <expr_stmt pos:start="473:25" pos:end="473:102"><expr pos:start="473:25" pos:end="473:101"><name pos:start="473:25" pos:end="473:28">prcx</name>   <operator pos:start="473:32" pos:end="473:32">=</operator> <call pos:start="473:34" pos:end="473:74"><name pos:start="473:34" pos:end="473:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="473:57" pos:end="473:74">(<argument pos:start="473:58" pos:end="473:59"><expr pos:start="473:58" pos:end="473:59"><name pos:start="473:58" pos:end="473:59">xc</name></expr></argument>, <argument pos:start="473:62" pos:end="473:73"><expr pos:start="473:62" pos:end="473:73"><name pos:start="473:62" pos:end="473:73">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="473:76" pos:end="473:77">&gt;&gt;</operator> <name pos:start="473:79" pos:end="473:101"><name pos:start="473:79" pos:end="473:84">rlevel</name><operator pos:start="473:85" pos:end="473:86">-&gt;</operator><name pos:start="473:87" pos:end="473:101">log2_prec_width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="475:25" pos:end="475:103"><expr pos:start="475:25" pos:end="475:102"><name pos:start="475:25" pos:end="475:28">prcy</name>   <operator pos:start="475:32" pos:end="475:32">=</operator> <call pos:start="475:34" pos:end="475:74"><name pos:start="475:34" pos:end="475:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="475:57" pos:end="475:74">(<argument pos:start="475:58" pos:end="475:59"><expr pos:start="475:58" pos:end="475:59"><name pos:start="475:58" pos:end="475:59">yc</name></expr></argument>, <argument pos:start="475:62" pos:end="475:73"><expr pos:start="475:62" pos:end="475:73"><name pos:start="475:62" pos:end="475:73">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="475:76" pos:end="475:77">&gt;&gt;</operator> <name pos:start="475:79" pos:end="475:102"><name pos:start="475:79" pos:end="475:84">rlevel</name><operator pos:start="475:85" pos:end="475:86">-&gt;</operator><name pos:start="475:87" pos:end="475:102">log2_prec_height</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="477:25" pos:end="477:119"><expr pos:start="477:25" pos:end="477:118"><name pos:start="477:25" pos:end="477:28">prcx</name>  <operator pos:start="477:31" pos:end="477:32">-=</operator> <call pos:start="477:34" pos:end="477:91"><name pos:start="477:34" pos:end="477:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="477:57" pos:end="477:91">(<argument pos:start="477:58" pos:end="477:76"><expr pos:start="477:58" pos:end="477:76"><name pos:start="477:58" pos:end="477:76"><name pos:start="477:58" pos:end="477:61">comp</name><operator pos:start="477:62" pos:end="477:63">-&gt;</operator><name pos:start="477:64" pos:end="477:70">coord_o</name><index pos:start="477:71" pos:end="477:73">[<expr pos:start="477:72" pos:end="477:72"><literal type="number" pos:start="477:72" pos:end="477:72">0</literal></expr>]</index><index pos:start="477:74" pos:end="477:76">[<expr pos:start="477:75" pos:end="477:75"><literal type="number" pos:start="477:75" pos:end="477:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="477:79" pos:end="477:90"><expr pos:start="477:79" pos:end="477:90"><name pos:start="477:79" pos:end="477:90">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="477:93" pos:end="477:94">&gt;&gt;</operator> <name pos:start="477:96" pos:end="477:118"><name pos:start="477:96" pos:end="477:101">rlevel</name><operator pos:start="477:102" pos:end="477:103">-&gt;</operator><name pos:start="477:104" pos:end="477:118">log2_prec_width</name></name></expr>;</expr_stmt>

                        <expr_stmt pos:start="479:25" pos:end="479:120"><expr pos:start="479:25" pos:end="479:119"><name pos:start="479:25" pos:end="479:28">prcy</name>  <operator pos:start="479:31" pos:end="479:32">-=</operator> <call pos:start="479:34" pos:end="479:91"><name pos:start="479:34" pos:end="479:56">ff_jpeg2000_ceildivpow2</name><argument_list pos:start="479:57" pos:end="479:91">(<argument pos:start="479:58" pos:end="479:76"><expr pos:start="479:58" pos:end="479:76"><name pos:start="479:58" pos:end="479:76"><name pos:start="479:58" pos:end="479:61">comp</name><operator pos:start="479:62" pos:end="479:63">-&gt;</operator><name pos:start="479:64" pos:end="479:70">coord_o</name><index pos:start="479:71" pos:end="479:73">[<expr pos:start="479:72" pos:end="479:72"><literal type="number" pos:start="479:72" pos:end="479:72">1</literal></expr>]</index><index pos:start="479:74" pos:end="479:76">[<expr pos:start="479:75" pos:end="479:75"><literal type="number" pos:start="479:75" pos:end="479:75">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="479:79" pos:end="479:90"><expr pos:start="479:79" pos:end="479:90"><name pos:start="479:79" pos:end="479:90">reducedresno</name></expr></argument>)</argument_list></call> <operator pos:start="479:93" pos:end="479:94">&gt;&gt;</operator> <name pos:start="479:96" pos:end="479:119"><name pos:start="479:96" pos:end="479:101">rlevel</name><operator pos:start="479:102" pos:end="479:103">-&gt;</operator><name pos:start="479:104" pos:end="479:119">log2_prec_height</name></name></expr>;</expr_stmt>



                        <expr_stmt pos:start="483:25" pos:end="483:71"><expr pos:start="483:25" pos:end="483:70"><name pos:start="483:25" pos:end="483:30">precno</name> <operator pos:start="483:32" pos:end="483:32">=</operator> <name pos:start="483:34" pos:end="483:37">prcx</name> <operator pos:start="483:39" pos:end="483:39">+</operator> <name pos:start="483:41" pos:end="483:63"><name pos:start="483:41" pos:end="483:46">rlevel</name><operator pos:start="483:47" pos:end="483:48">-&gt;</operator><name pos:start="483:49" pos:end="483:63">num_precincts_x</name></name> <operator pos:start="483:65" pos:end="483:65">*</operator> <name pos:start="483:67" pos:end="483:70">prcy</name></expr>;</expr_stmt>



                        <if_stmt pos:start="487:25" pos:end="495:25"><if pos:start="487:25" pos:end="495:25">if <condition pos:start="487:28" pos:end="487:95">(<expr pos:start="487:29" pos:end="487:94"><name pos:start="487:29" pos:end="487:32">prcx</name> <operator pos:start="487:34" pos:end="487:35">&gt;=</operator> <name pos:start="487:37" pos:end="487:59"><name pos:start="487:37" pos:end="487:42">rlevel</name><operator pos:start="487:43" pos:end="487:44">-&gt;</operator><name pos:start="487:45" pos:end="487:59">num_precincts_x</name></name> <operator pos:start="487:61" pos:end="487:62">||</operator> <name pos:start="487:64" pos:end="487:67">prcy</name> <operator pos:start="487:69" pos:end="487:70">&gt;=</operator> <name pos:start="487:72" pos:end="487:94"><name pos:start="487:72" pos:end="487:77">rlevel</name><operator pos:start="487:78" pos:end="487:79">-&gt;</operator><name pos:start="487:80" pos:end="487:94">num_precincts_y</name></name></expr>)</condition> <block pos:start="487:97" pos:end="495:25">{<block_content pos:start="489:29" pos:end="493:37">

                            <expr_stmt pos:start="489:29" pos:end="491:97"><expr pos:start="489:29" pos:end="491:96"><call pos:start="489:29" pos:end="491:96"><name pos:start="489:29" pos:end="489:34">av_log</name><argument_list pos:start="489:35" pos:end="491:96">(<argument pos:start="489:36" pos:end="489:43"><expr pos:start="489:36" pos:end="489:43"><name pos:start="489:36" pos:end="489:43"><name pos:start="489:36" pos:end="489:36">s</name><operator pos:start="489:37" pos:end="489:38">-&gt;</operator><name pos:start="489:39" pos:end="489:43">avctx</name></name></expr></argument>, <argument pos:start="489:46" pos:end="489:59"><expr pos:start="489:46" pos:end="489:59"><name pos:start="489:46" pos:end="489:59">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="489:62" pos:end="489:95"><expr pos:start="489:62" pos:end="489:95"><literal type="string" pos:start="489:62" pos:end="489:95">"prc %d %d outside limits %d %d\n"</literal></expr></argument>,

                                   <argument pos:start="491:36" pos:end="491:39"><expr pos:start="491:36" pos:end="491:39"><name pos:start="491:36" pos:end="491:39">prcx</name></expr></argument>, <argument pos:start="491:42" pos:end="491:45"><expr pos:start="491:42" pos:end="491:45"><name pos:start="491:42" pos:end="491:45">prcy</name></expr></argument>, <argument pos:start="491:48" pos:end="491:70"><expr pos:start="491:48" pos:end="491:70"><name pos:start="491:48" pos:end="491:70"><name pos:start="491:48" pos:end="491:53">rlevel</name><operator pos:start="491:54" pos:end="491:55">-&gt;</operator><name pos:start="491:56" pos:end="491:70">num_precincts_x</name></name></expr></argument>, <argument pos:start="491:73" pos:end="491:95"><expr pos:start="491:73" pos:end="491:95"><name pos:start="491:73" pos:end="491:95"><name pos:start="491:73" pos:end="491:78">rlevel</name><operator pos:start="491:79" pos:end="491:80">-&gt;</operator><name pos:start="491:81" pos:end="491:95">num_precincts_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <continue pos:start="493:29" pos:end="493:37">continue;</continue>

                        </block_content>}</block></if></if_stmt>



                        <for pos:start="499:25" pos:end="511:25">for <control pos:start="499:29" pos:end="499:64">(<init pos:start="499:30" pos:end="499:39"><expr pos:start="499:30" pos:end="499:38"><name pos:start="499:30" pos:end="499:34">layno</name> <operator pos:start="499:36" pos:end="499:36">=</operator> <literal type="number" pos:start="499:38" pos:end="499:38">0</literal></expr>;</init> <condition pos:start="499:41" pos:end="499:55"><expr pos:start="499:41" pos:end="499:54"><name pos:start="499:41" pos:end="499:45">layno</name> <operator pos:start="499:47" pos:end="499:47">&lt;</operator> <name pos:start="499:49" pos:end="499:54">LYEpoc</name></expr>;</condition> <incr pos:start="499:57" pos:end="499:63"><expr pos:start="499:57" pos:end="499:63"><name pos:start="499:57" pos:end="499:61">layno</name><operator pos:start="499:62" pos:end="499:63">++</operator></expr></incr>)</control> <block pos:start="499:66" pos:end="511:25">{<block_content pos:start="501:29" pos:end="509:43">

                            <if_stmt pos:start="501:29" pos:end="509:43"><if pos:start="501:29" pos:end="509:43">if <condition pos:start="501:32" pos:end="507:87">(<expr pos:start="501:33" pos:end="507:86"><operator pos:start="501:33" pos:end="501:33">(</operator><name pos:start="501:34" pos:end="501:36">ret</name> <operator pos:start="501:38" pos:end="501:38">=</operator> <call pos:start="501:40" pos:end="507:81"><name pos:start="501:40" pos:end="501:61">jpeg2000_decode_packet</name><argument_list pos:start="501:62" pos:end="507:81">(<argument pos:start="501:63" pos:end="501:63"><expr pos:start="501:63" pos:end="501:63"><name pos:start="501:63" pos:end="501:63">s</name></expr></argument>, <argument pos:start="501:66" pos:end="501:69"><expr pos:start="501:66" pos:end="501:69"><name pos:start="501:66" pos:end="501:69">tile</name></expr></argument>, <argument pos:start="501:72" pos:end="501:80"><expr pos:start="501:72" pos:end="501:80"><operator pos:start="501:72" pos:end="501:72">&amp;</operator><name pos:start="501:73" pos:end="501:80">tp_index</name></expr></argument>, <argument pos:start="501:83" pos:end="501:88"><expr pos:start="501:83" pos:end="501:88"><name pos:start="501:83" pos:end="501:88">codsty</name></expr></argument>, <argument pos:start="501:91" pos:end="501:96"><expr pos:start="501:91" pos:end="501:96"><name pos:start="501:91" pos:end="501:96">rlevel</name></expr></argument>,

                                                              <argument pos:start="503:63" pos:end="503:68"><expr pos:start="503:63" pos:end="503:68"><name pos:start="503:63" pos:end="503:68">precno</name></expr></argument>, <argument pos:start="503:71" pos:end="503:75"><expr pos:start="503:71" pos:end="503:75"><name pos:start="503:71" pos:end="503:75">layno</name></expr></argument>,

                                                              <argument pos:start="505:63" pos:end="505:120"><expr pos:start="505:63" pos:end="505:120"><name pos:start="505:63" pos:end="505:74"><name pos:start="505:63" pos:end="505:68">qntsty</name><operator pos:start="505:69" pos:end="505:70">-&gt;</operator><name pos:start="505:71" pos:end="505:74">expn</name></name> <operator pos:start="505:76" pos:end="505:76">+</operator> <operator pos:start="505:78" pos:end="505:78">(</operator><ternary pos:start="505:79" pos:end="505:119"><condition pos:start="505:79" pos:end="505:90"><expr pos:start="505:79" pos:end="505:88"><name pos:start="505:79" pos:end="505:88">reslevelno</name></expr> ?</condition><then pos:start="505:92" pos:end="505:115"> <expr pos:start="505:92" pos:end="505:115"><literal type="number" pos:start="505:92" pos:end="505:92">3</literal> <operator pos:start="505:94" pos:end="505:94">*</operator> <operator pos:start="505:96" pos:end="505:96">(</operator><name pos:start="505:97" pos:end="505:106">reslevelno</name> <operator pos:start="505:108" pos:end="505:108">-</operator> <literal type="number" pos:start="505:110" pos:end="505:110">1</literal><operator pos:start="505:111" pos:end="505:111">)</operator> <operator pos:start="505:113" pos:end="505:113">+</operator> <literal type="number" pos:start="505:115" pos:end="505:115">1</literal></expr> </then><else pos:start="505:117" pos:end="505:119">: <expr pos:start="505:119" pos:end="505:119"><literal type="number" pos:start="505:119" pos:end="505:119">0</literal></expr></else></ternary><operator pos:start="505:120" pos:end="505:120">)</operator></expr></argument>,

                                                              <argument pos:start="507:63" pos:end="507:80"><expr pos:start="507:63" pos:end="507:80"><name pos:start="507:63" pos:end="507:80"><name pos:start="507:63" pos:end="507:68">qntsty</name><operator pos:start="507:69" pos:end="507:70">-&gt;</operator><name pos:start="507:71" pos:end="507:80">nguardbits</name></name></expr></argument>)</argument_list></call><operator pos:start="507:82" pos:end="507:82">)</operator> <operator pos:start="507:84" pos:end="507:84">&lt;</operator> <literal type="number" pos:start="507:86" pos:end="507:86">0</literal></expr>)</condition><block type="pseudo" pos:start="509:33" pos:end="509:43"><block_content pos:start="509:33" pos:end="509:43">

                                <return pos:start="509:33" pos:end="509:43">return <expr pos:start="509:40" pos:end="509:42"><name pos:start="509:40" pos:end="509:42">ret</name></expr>;</return></block_content></block></if></if_stmt>

                        </block_content>}</block></for>

                    </block_content>}</block></for>

                </block_content>}</block></for>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <break pos:start="521:9" pos:end="521:14">break;</break>



    <default pos:start="525:5" pos:end="525:12">default:</default>

        <break pos:start="527:9" pos:end="527:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="533:5" pos:end="533:15">return <expr pos:start="533:12" pos:end="533:14"><name pos:start="533:12" pos:end="533:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
