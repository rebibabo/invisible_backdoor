<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10067.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:33">parse_block_size_shift</name><parameter_list pos:start="1:34" pos:end="1:70">(<parameter pos:start="1:35" pos:end="1:54"><decl pos:start="1:35" pos:end="1:54"><type pos:start="1:35" pos:end="1:54"><name pos:start="1:35" pos:end="1:51">BDRVSheepdogState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">QemuOpts</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">opt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:13">

    <decl_stmt pos:start="5:5" pos:end="5:44"><decl pos:start="5:5" pos:end="5:43"><type pos:start="5:5" pos:end="5:26"><name pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:24">SheepdogInode</name></name> <modifier pos:start="5:26" pos:end="5:26">*</modifier></type><name pos:start="5:27" pos:end="5:31">inode</name> <init pos:start="5:33" pos:end="5:43">= <expr pos:start="5:35" pos:end="5:43"><operator pos:start="5:35" pos:end="5:35">&amp;</operator><name pos:start="5:36" pos:end="5:43"><name pos:start="5:36" pos:end="5:36">s</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:43">inode</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:24">object_size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">obj_order</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:71"><expr pos:start="13:5" pos:end="13:70"><name pos:start="13:5" pos:end="13:15">object_size</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <call pos:start="13:19" pos:end="13:70"><name pos:start="13:19" pos:end="13:39">qemu_opt_get_size_del</name><argument_list pos:start="13:40" pos:end="13:70">(<argument pos:start="13:41" pos:end="13:43"><expr pos:start="13:41" pos:end="13:43"><name pos:start="13:41" pos:end="13:43">opt</name></expr></argument>, <argument pos:start="13:46" pos:end="13:66"><expr pos:start="13:46" pos:end="13:66"><name pos:start="13:46" pos:end="13:66">BLOCK_OPT_OBJECT_SIZE</name></expr></argument>, <argument pos:start="13:69" pos:end="13:69"><expr pos:start="13:69" pos:end="13:69"><literal type="number" pos:start="13:69" pos:end="13:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="33:5"><if pos:start="15:5" pos:end="33:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><name pos:start="15:9" pos:end="15:19">object_size</name></expr>)</condition> <block pos:start="15:22" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:53">

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:44">(<expr pos:start="17:13" pos:end="17:43"><operator pos:start="17:13" pos:end="17:13">(</operator><name pos:start="17:14" pos:end="17:24">object_size</name> <operator pos:start="17:26" pos:end="17:26">-</operator> <literal type="number" pos:start="17:28" pos:end="17:28">1</literal><operator pos:start="17:29" pos:end="17:29">)</operator> <operator pos:start="17:31" pos:end="17:31">&amp;</operator> <name pos:start="17:33" pos:end="17:43">object_size</name></expr>)</condition> <block pos:start="17:46" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:27">    <comment type="block" pos:start="17:51" pos:end="17:73">/* not a power of 2? */</comment>

            <return pos:start="19:13" pos:end="19:27">return <expr pos:start="19:20" pos:end="19:26"><operator pos:start="19:20" pos:end="19:20">-</operator><name pos:start="19:21" pos:end="19:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:41"><expr pos:start="23:9" pos:end="23:40"><name pos:start="23:9" pos:end="23:17">obj_order</name> <operator pos:start="23:19" pos:end="23:19">=</operator> <call pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:23">ffs</name><argument_list pos:start="23:24" pos:end="23:36">(<argument pos:start="23:25" pos:end="23:35"><expr pos:start="23:25" pos:end="23:35"><name pos:start="23:25" pos:end="23:35">object_size</name></expr></argument>)</argument_list></call> <operator pos:start="23:38" pos:end="23:38">-</operator> <literal type="number" pos:start="23:40" pos:end="23:40">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:9"><if pos:start="25:9" pos:end="29:9">if <condition pos:start="25:12" pos:end="25:45">(<expr pos:start="25:13" pos:end="25:44"><name pos:start="25:13" pos:end="25:41"><name pos:start="25:13" pos:end="25:21">obj_order</name> <argument_list type="generic" pos:start="25:23" pos:end="25:41">&lt; <argument pos:start="25:25" pos:end="25:39"><expr pos:start="25:25" pos:end="25:39"><literal type="number" pos:start="25:25" pos:end="25:26">20</literal> <operator pos:start="25:28" pos:end="25:29">||</operator> <name pos:start="25:31" pos:end="25:39">obj_order</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="25:43" pos:end="25:44">31</literal></expr>)</condition> <block pos:start="25:47" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:27">

            <return pos:start="27:13" pos:end="27:27">return <expr pos:start="27:20" pos:end="27:26"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:53"><expr pos:start="31:9" pos:end="31:52"><name pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:13">inode</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:31">block_size_shift</name></name> <operator pos:start="31:33" pos:end="31:33">=</operator> <operator pos:start="31:35" pos:end="31:35">(</operator><name pos:start="31:36" pos:end="31:42">uint8_t</name><operator pos:start="31:43" pos:end="31:43">)</operator><name pos:start="31:44" pos:end="31:52">obj_order</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
