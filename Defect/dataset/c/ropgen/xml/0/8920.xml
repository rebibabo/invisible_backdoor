<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8920.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:27">cpu_mb_handle_mmu_fault</name> <parameter_list pos:start="1:29" pos:end="3:59">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:56">target_ulong</name></type> <name pos:start="1:58" pos:end="1:64">address</name></decl></parameter>, <parameter pos:start="1:67" pos:end="1:72"><decl pos:start="1:67" pos:end="1:72"><type pos:start="1:67" pos:end="1:72"><name pos:start="1:67" pos:end="1:69">int</name></type> <name pos:start="1:71" pos:end="1:72">rw</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:42"><decl pos:start="3:32" pos:end="3:42"><type pos:start="3:32" pos:end="3:42"><name pos:start="3:32" pos:end="3:34">int</name></type> <name pos:start="3:36" pos:end="3:42">mmu_idx</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:58"><decl pos:start="3:45" pos:end="3:58"><type pos:start="3:45" pos:end="3:58"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:58">is_softmmu</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:16">int</name></type> <name pos:start="7:18" pos:end="7:20">hit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:16">int</name></type> <name pos:start="9:18" pos:end="9:30">mmu_available</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">r</name> <init pos:start="11:11" pos:end="11:13">= <expr pos:start="11:13" pos:end="11:13"><literal type="number" pos:start="11:13" pos:end="11:13">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:13"><decl pos:start="13:5" pos:end="13:12"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:12">prot</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17">mmu_available</name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:40">(<expr pos:start="19:9" pos:end="19:39"><name pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:11">env</name><operator pos:start="19:12" pos:end="19:13">-&gt;</operator><name pos:start="19:14" pos:end="19:16">pvr</name><operator pos:start="19:17" pos:end="19:17">.</operator><name pos:start="19:18" pos:end="19:21">regs</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>]</index></name> <operator pos:start="19:26" pos:end="19:26">&amp;</operator> <name pos:start="19:28" pos:end="19:39">PVR0_USE_MMU</name></expr>)</condition> <block pos:start="19:42" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:9">

        <expr_stmt pos:start="21:9" pos:end="21:26"><expr pos:start="21:9" pos:end="21:25"><name pos:start="21:9" pos:end="21:21">mmu_available</name> <operator pos:start="21:23" pos:end="21:23">=</operator> <literal type="number" pos:start="21:25" pos:end="21:25">1</literal></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="29:9"><if pos:start="23:9" pos:end="29:9">if <condition pos:start="23:12" pos:end="25:68">(<expr pos:start="23:13" pos:end="25:67"><operator pos:start="23:13" pos:end="23:13">(</operator><name pos:start="23:14" pos:end="23:29"><name pos:start="23:14" pos:end="23:16">env</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">pvr</name><operator pos:start="23:22" pos:end="23:22">.</operator><name pos:start="23:23" pos:end="23:26">regs</name><index pos:start="23:27" pos:end="23:29">[<expr pos:start="23:28" pos:end="23:28"><literal type="number" pos:start="23:28" pos:end="23:28">0</literal></expr>]</index></name> <operator pos:start="23:31" pos:end="23:31">&amp;</operator> <name pos:start="23:33" pos:end="23:50">PVR0_PVR_FULL_MASK</name><operator pos:start="23:51" pos:end="23:51">)</operator>

            <operator pos:start="25:13" pos:end="25:14">&amp;&amp;</operator> <operator pos:start="25:16" pos:end="25:16">(</operator><name pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:19">env</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:24">pvr</name><operator pos:start="25:25" pos:end="25:25">.</operator><name pos:start="25:26" pos:end="25:29">regs</name><index pos:start="25:30" pos:end="25:33">[<expr pos:start="25:31" pos:end="25:32"><literal type="number" pos:start="25:31" pos:end="25:32">11</literal></expr>]</index></name> <operator pos:start="25:35" pos:end="25:35">&amp;</operator> <name pos:start="25:37" pos:end="25:49">PVR11_USE_MMU</name><operator pos:start="25:50" pos:end="25:50">)</operator> <operator pos:start="25:52" pos:end="25:53">!=</operator> <name pos:start="25:55" pos:end="25:67">PVR11_USE_MMU</name></expr>)</condition> <block pos:start="25:70" pos:end="29:9">{<block_content pos:start="27:13" pos:end="27:30">

            <expr_stmt pos:start="27:13" pos:end="27:30"><expr pos:start="27:13" pos:end="27:29"><name pos:start="27:13" pos:end="27:25">mmu_available</name> <operator pos:start="27:27" pos:end="27:27">=</operator> <literal type="number" pos:start="27:29" pos:end="27:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:57">/* Translate if the MMU is available and enabled.  */</comment>

    <if_stmt pos:start="37:5" pos:end="123:5"><if pos:start="37:5" pos:end="113:5">if <condition pos:start="37:8" pos:end="37:55">(<expr pos:start="37:9" pos:end="37:54"><name pos:start="37:9" pos:end="37:21">mmu_available</name> <operator pos:start="37:23" pos:end="37:24">&amp;&amp;</operator> <operator pos:start="37:26" pos:end="37:26">(</operator><name pos:start="37:27" pos:end="37:44"><name pos:start="37:27" pos:end="37:29">env</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:36">sregs</name><index pos:start="37:37" pos:end="37:44">[<expr pos:start="37:38" pos:end="37:43"><name pos:start="37:38" pos:end="37:43">SR_MSR</name></expr>]</index></name> <operator pos:start="37:46" pos:end="37:46">&amp;</operator> <name pos:start="37:48" pos:end="37:53">MSR_VM</name><operator pos:start="37:54" pos:end="37:54">)</operator></expr>)</condition> <block pos:start="37:57" pos:end="113:5">{<block_content pos:start="39:9" pos:end="111:9">

        <decl_stmt pos:start="39:9" pos:end="39:34"><decl pos:start="39:9" pos:end="39:26"><type pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:20">target_ulong</name></type> <name pos:start="39:22" pos:end="39:26">vaddr</name></decl>, <decl pos:start="39:29" pos:end="39:33"><type ref="prev" pos:start="39:9" pos:end="39:20"/><name pos:start="39:29" pos:end="39:33">paddr</name></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:40"><decl pos:start="41:9" pos:end="41:39"><type pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:36"><name pos:start="41:9" pos:end="41:14">struct</name> <name pos:start="41:16" pos:end="41:36">microblaze_mmu_lookup</name></name></type> <name pos:start="41:38" pos:end="41:39">lu</name></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:66"><expr pos:start="45:9" pos:end="45:65"><name pos:start="45:9" pos:end="45:11">hit</name> <operator pos:start="45:13" pos:end="45:13">=</operator> <call pos:start="45:15" pos:end="45:65"><name pos:start="45:15" pos:end="45:27">mmu_translate</name><argument_list pos:start="45:28" pos:end="45:65">(<argument pos:start="45:29" pos:end="45:37"><expr pos:start="45:29" pos:end="45:37"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:37"><name pos:start="45:30" pos:end="45:32">env</name><operator pos:start="45:33" pos:end="45:34">-&gt;</operator><name pos:start="45:35" pos:end="45:37">mmu</name></name></expr></argument>, <argument pos:start="45:40" pos:end="45:42"><expr pos:start="45:40" pos:end="45:42"><operator pos:start="45:40" pos:end="45:40">&amp;</operator><name pos:start="45:41" pos:end="45:42">lu</name></expr></argument>, <argument pos:start="45:45" pos:end="45:51"><expr pos:start="45:45" pos:end="45:51"><name pos:start="45:45" pos:end="45:51">address</name></expr></argument>, <argument pos:start="45:54" pos:end="45:55"><expr pos:start="45:54" pos:end="45:55"><name pos:start="45:54" pos:end="45:55">rw</name></expr></argument>, <argument pos:start="45:58" pos:end="45:64"><expr pos:start="45:58" pos:end="45:64"><name pos:start="45:58" pos:end="45:64">mmu_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="47:9" pos:end="111:9"><if pos:start="47:9" pos:end="63:9">if <condition pos:start="47:12" pos:end="47:16">(<expr pos:start="47:13" pos:end="47:15"><name pos:start="47:13" pos:end="47:15">hit</name></expr>)</condition> <block pos:start="47:18" pos:end="63:9">{<block_content pos:start="49:13" pos:end="61:66">

            <expr_stmt pos:start="49:13" pos:end="49:47"><expr pos:start="49:13" pos:end="49:46"><name pos:start="49:13" pos:end="49:17">vaddr</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <name pos:start="49:21" pos:end="49:27">address</name> <operator pos:start="49:29" pos:end="49:29">&amp;</operator> <name pos:start="49:31" pos:end="49:46">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:48"><expr pos:start="51:13" pos:end="51:47"><name pos:start="51:13" pos:end="51:17">paddr</name> <operator pos:start="51:19" pos:end="51:19">=</operator> <name pos:start="51:21" pos:end="51:28"><name pos:start="51:21" pos:end="51:22">lu</name><operator pos:start="51:23" pos:end="51:23">.</operator><name pos:start="51:24" pos:end="51:28">paddr</name></name> <operator pos:start="51:30" pos:end="51:30">+</operator> <name pos:start="51:32" pos:end="51:36">vaddr</name> <operator pos:start="51:38" pos:end="51:38">-</operator> <name pos:start="51:40" pos:end="51:47"><name pos:start="51:40" pos:end="51:41">lu</name><operator pos:start="51:42" pos:end="51:42">.</operator><name pos:start="51:43" pos:end="51:47">vaddr</name></name></expr>;</expr_stmt>



            <expr_stmt pos:start="55:13" pos:end="57:54"><expr pos:start="55:13" pos:end="57:53"><call pos:start="55:13" pos:end="57:53"><name pos:start="55:13" pos:end="55:16">DMMU</name><argument_list pos:start="55:17" pos:end="57:53">(<argument pos:start="55:18" pos:end="57:52"><expr pos:start="55:18" pos:end="57:52"><call pos:start="55:18" pos:end="57:52"><name pos:start="55:18" pos:end="55:25">qemu_log</name><argument_list pos:start="55:26" pos:end="57:52">(<argument pos:start="55:27" pos:end="55:62"><expr pos:start="55:27" pos:end="55:62"><literal type="string" pos:start="55:27" pos:end="55:62">"MMU map mmu=%d v=%x p=%x prot=%x\n"</literal></expr></argument>,

                     <argument pos:start="57:22" pos:end="57:28"><expr pos:start="57:22" pos:end="57:28"><name pos:start="57:22" pos:end="57:28">mmu_idx</name></expr></argument>, <argument pos:start="57:31" pos:end="57:35"><expr pos:start="57:31" pos:end="57:35"><name pos:start="57:31" pos:end="57:35">vaddr</name></expr></argument>, <argument pos:start="57:38" pos:end="57:42"><expr pos:start="57:38" pos:end="57:42"><name pos:start="57:38" pos:end="57:42">paddr</name></expr></argument>, <argument pos:start="57:45" pos:end="57:51"><expr pos:start="57:45" pos:end="57:51"><name pos:start="57:45" pos:end="57:51"><name pos:start="57:45" pos:end="57:46">lu</name><operator pos:start="57:47" pos:end="57:47">.</operator><name pos:start="57:48" pos:end="57:51">prot</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="61:66"><expr pos:start="59:13" pos:end="61:65"><name pos:start="59:13" pos:end="59:13">r</name> <operator pos:start="59:15" pos:end="59:15">=</operator> <call pos:start="59:17" pos:end="61:65"><name pos:start="59:17" pos:end="59:28">tlb_set_page</name><argument_list pos:start="59:29" pos:end="61:65">(<argument pos:start="59:30" pos:end="59:32"><expr pos:start="59:30" pos:end="59:32"><name pos:start="59:30" pos:end="59:32">env</name></expr></argument>, <argument pos:start="59:35" pos:end="59:39"><expr pos:start="59:35" pos:end="59:39"><name pos:start="59:35" pos:end="59:39">vaddr</name></expr></argument>,

                             <argument pos:start="61:30" pos:end="61:34"><expr pos:start="61:30" pos:end="61:34"><name pos:start="61:30" pos:end="61:34">paddr</name></expr></argument>, <argument pos:start="61:37" pos:end="61:43"><expr pos:start="61:37" pos:end="61:43"><name pos:start="61:37" pos:end="61:43"><name pos:start="61:37" pos:end="61:38">lu</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:43">prot</name></name></expr></argument>, <argument pos:start="61:46" pos:end="61:52"><expr pos:start="61:46" pos:end="61:52"><name pos:start="61:46" pos:end="61:52">mmu_idx</name></expr></argument>, <argument pos:start="61:55" pos:end="61:64"><expr pos:start="61:55" pos:end="61:64"><name pos:start="61:55" pos:end="61:64">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="111:9">else <block pos:start="63:16" pos:end="111:9">{<block_content pos:start="65:13" pos:end="109:44">

            <expr_stmt pos:start="65:13" pos:end="65:41"><expr pos:start="65:13" pos:end="65:40"><name pos:start="65:13" pos:end="65:30"><name pos:start="65:13" pos:end="65:15">env</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:22">sregs</name><index pos:start="65:23" pos:end="65:30">[<expr pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:29">SR_EAR</name></expr>]</index></name> <operator pos:start="65:32" pos:end="65:32">=</operator> <name pos:start="65:34" pos:end="65:40">address</name></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:67"><expr pos:start="67:13" pos:end="67:66"><call pos:start="67:13" pos:end="67:66"><name pos:start="67:13" pos:end="67:16">DMMU</name><argument_list pos:start="67:17" pos:end="67:66">(<argument pos:start="67:18" pos:end="67:65"><expr pos:start="67:18" pos:end="67:65"><call pos:start="67:18" pos:end="67:65"><name pos:start="67:18" pos:end="67:25">qemu_log</name><argument_list pos:start="67:26" pos:end="67:65">(<argument pos:start="67:27" pos:end="67:46"><expr pos:start="67:27" pos:end="67:46"><literal type="string" pos:start="67:27" pos:end="67:46">"mmu=%d miss v=%x\n"</literal></expr></argument>, <argument pos:start="67:49" pos:end="67:55"><expr pos:start="67:49" pos:end="67:55"><name pos:start="67:49" pos:end="67:55">mmu_idx</name></expr></argument>, <argument pos:start="67:58" pos:end="67:64"><expr pos:start="67:58" pos:end="67:64"><name pos:start="67:58" pos:end="67:64">address</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <switch pos:start="71:13" pos:end="95:13">switch <condition pos:start="71:20" pos:end="71:27">(<expr pos:start="71:21" pos:end="71:26"><name pos:start="71:21" pos:end="71:26"><name pos:start="71:21" pos:end="71:22">lu</name><operator pos:start="71:23" pos:end="71:23">.</operator><name pos:start="71:24" pos:end="71:26">err</name></name></expr>)</condition> <block pos:start="71:29" pos:end="95:13">{<block_content pos:start="73:17" pos:end="93:26">

                <case pos:start="73:17" pos:end="73:30">case <expr pos:start="73:22" pos:end="73:29"><name pos:start="73:22" pos:end="73:29">ERR_PROT</name></expr>:</case>

                    <expr_stmt pos:start="75:21" pos:end="75:59"><expr pos:start="75:21" pos:end="75:58"><name pos:start="75:21" pos:end="75:38"><name pos:start="75:21" pos:end="75:23">env</name><operator pos:start="75:24" pos:end="75:25">-&gt;</operator><name pos:start="75:26" pos:end="75:30">sregs</name><index pos:start="75:31" pos:end="75:38">[<expr pos:start="75:32" pos:end="75:37"><name pos:start="75:32" pos:end="75:37">SR_ESR</name></expr>]</index></name> <operator pos:start="75:40" pos:end="75:40">=</operator> <ternary pos:start="75:42" pos:end="75:58"><condition pos:start="75:42" pos:end="75:50"><expr pos:start="75:42" pos:end="75:48"><name pos:start="75:42" pos:end="75:43">rw</name> <operator pos:start="75:45" pos:end="75:46">==</operator> <literal type="number" pos:start="75:48" pos:end="75:48">2</literal></expr> ?</condition><then pos:start="75:52" pos:end="75:53"> <expr pos:start="75:52" pos:end="75:53"><literal type="number" pos:start="75:52" pos:end="75:53">17</literal></expr> </then><else pos:start="75:55" pos:end="75:58">: <expr pos:start="75:57" pos:end="75:58"><literal type="number" pos:start="75:57" pos:end="75:58">16</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="77:21" pos:end="77:58"><expr pos:start="77:21" pos:end="77:57"><name pos:start="77:21" pos:end="77:38"><name pos:start="77:21" pos:end="77:23">env</name><operator pos:start="77:24" pos:end="77:25">-&gt;</operator><name pos:start="77:26" pos:end="77:30">sregs</name><index pos:start="77:31" pos:end="77:38">[<expr pos:start="77:32" pos:end="77:37"><name pos:start="77:32" pos:end="77:37">SR_ESR</name></expr>]</index></name> <operator pos:start="77:40" pos:end="77:41">|=</operator> <operator pos:start="77:43" pos:end="77:43">(</operator><name pos:start="77:44" pos:end="77:45">rw</name> <operator pos:start="77:47" pos:end="77:48">==</operator> <literal type="number" pos:start="77:50" pos:end="77:50">1</literal><operator pos:start="77:51" pos:end="77:51">)</operator> <operator pos:start="77:53" pos:end="77:54">&lt;&lt;</operator> <literal type="number" pos:start="77:56" pos:end="77:57">10</literal></expr>;</expr_stmt>

                    <break pos:start="79:21" pos:end="79:26">break;</break>

                <case pos:start="81:17" pos:end="81:30">case <expr pos:start="81:22" pos:end="81:29"><name pos:start="81:22" pos:end="81:29">ERR_MISS</name></expr>:</case>

                    <expr_stmt pos:start="83:21" pos:end="83:59"><expr pos:start="83:21" pos:end="83:58"><name pos:start="83:21" pos:end="83:38"><name pos:start="83:21" pos:end="83:23">env</name><operator pos:start="83:24" pos:end="83:25">-&gt;</operator><name pos:start="83:26" pos:end="83:30">sregs</name><index pos:start="83:31" pos:end="83:38">[<expr pos:start="83:32" pos:end="83:37"><name pos:start="83:32" pos:end="83:37">SR_ESR</name></expr>]</index></name> <operator pos:start="83:40" pos:end="83:40">=</operator> <ternary pos:start="83:42" pos:end="83:58"><condition pos:start="83:42" pos:end="83:50"><expr pos:start="83:42" pos:end="83:48"><name pos:start="83:42" pos:end="83:43">rw</name> <operator pos:start="83:45" pos:end="83:46">==</operator> <literal type="number" pos:start="83:48" pos:end="83:48">2</literal></expr> ?</condition><then pos:start="83:52" pos:end="83:53"> <expr pos:start="83:52" pos:end="83:53"><literal type="number" pos:start="83:52" pos:end="83:53">19</literal></expr> </then><else pos:start="83:55" pos:end="83:58">: <expr pos:start="83:57" pos:end="83:58"><literal type="number" pos:start="83:57" pos:end="83:58">18</literal></expr></else></ternary></expr>;</expr_stmt>

                    <expr_stmt pos:start="85:21" pos:end="85:58"><expr pos:start="85:21" pos:end="85:57"><name pos:start="85:21" pos:end="85:38"><name pos:start="85:21" pos:end="85:23">env</name><operator pos:start="85:24" pos:end="85:25">-&gt;</operator><name pos:start="85:26" pos:end="85:30">sregs</name><index pos:start="85:31" pos:end="85:38">[<expr pos:start="85:32" pos:end="85:37"><name pos:start="85:32" pos:end="85:37">SR_ESR</name></expr>]</index></name> <operator pos:start="85:40" pos:end="85:41">|=</operator> <operator pos:start="85:43" pos:end="85:43">(</operator><name pos:start="85:44" pos:end="85:45">rw</name> <operator pos:start="85:47" pos:end="85:48">==</operator> <literal type="number" pos:start="85:50" pos:end="85:50">1</literal><operator pos:start="85:51" pos:end="85:51">)</operator> <operator pos:start="85:53" pos:end="85:54">&lt;&lt;</operator> <literal type="number" pos:start="85:56" pos:end="85:57">10</literal></expr>;</expr_stmt>

                    <break pos:start="87:21" pos:end="87:26">break;</break>

                <default pos:start="89:17" pos:end="89:24">default:</default>

                    <expr_stmt pos:start="91:21" pos:end="91:28"><expr pos:start="91:21" pos:end="91:27"><call pos:start="91:21" pos:end="91:27"><name pos:start="91:21" pos:end="91:25">abort</name><argument_list pos:start="91:26" pos:end="91:27">()</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="93:21" pos:end="93:26">break;</break>

            </block_content>}</block></switch>



            <if_stmt pos:start="99:13" pos:end="103:13"><if pos:start="99:13" pos:end="103:13">if <condition pos:start="99:16" pos:end="99:49">(<expr pos:start="99:17" pos:end="99:48"><name pos:start="99:17" pos:end="99:36"><name pos:start="99:17" pos:end="99:19">env</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:36">exception_index</name></name> <operator pos:start="99:38" pos:end="99:39">==</operator> <name pos:start="99:41" pos:end="99:48">EXCP_MMU</name></expr>)</condition> <block pos:start="99:51" pos:end="103:13">{<block_content pos:start="101:17" pos:end="101:53">

                <expr_stmt pos:start="101:17" pos:end="101:53"><expr pos:start="101:17" pos:end="101:52"><call pos:start="101:17" pos:end="101:52"><name pos:start="101:17" pos:end="101:25">cpu_abort</name><argument_list pos:start="101:26" pos:end="101:52">(<argument pos:start="101:27" pos:end="101:29"><expr pos:start="101:27" pos:end="101:29"><name pos:start="101:27" pos:end="101:29">env</name></expr></argument>, <argument pos:start="101:32" pos:end="101:51"><expr pos:start="101:32" pos:end="101:51"><literal type="string" pos:start="101:32" pos:end="101:51">"recursive faults\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="107:13" pos:end="107:28">/* TLB miss.  */</comment>

            <expr_stmt pos:start="109:13" pos:end="109:44"><expr pos:start="109:13" pos:end="109:43"><name pos:start="109:13" pos:end="109:32"><name pos:start="109:13" pos:end="109:15">env</name><operator pos:start="109:16" pos:end="109:17">-&gt;</operator><name pos:start="109:18" pos:end="109:32">exception_index</name></name> <operator pos:start="109:34" pos:end="109:34">=</operator> <name pos:start="109:36" pos:end="109:43">EXCP_MMU</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="113:7" pos:end="123:5">else <block pos:start="113:12" pos:end="123:5">{<block_content pos:start="117:9" pos:end="121:75">

        <comment type="block" pos:start="115:9" pos:end="115:45">/* MMU disabled or not available.  */</comment>

        <expr_stmt pos:start="117:9" pos:end="117:36"><expr pos:start="117:9" pos:end="117:35"><name pos:start="117:9" pos:end="117:15">address</name> <operator pos:start="117:17" pos:end="117:18">&amp;=</operator> <name pos:start="117:20" pos:end="117:35">TARGET_PAGE_MASK</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:25"><expr pos:start="119:9" pos:end="119:24"><name pos:start="119:9" pos:end="119:12">prot</name> <operator pos:start="119:14" pos:end="119:14">=</operator> <name pos:start="119:16" pos:end="119:24">PAGE_BITS</name></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:75"><expr pos:start="121:9" pos:end="121:74"><name pos:start="121:9" pos:end="121:9">r</name> <operator pos:start="121:11" pos:end="121:11">=</operator> <call pos:start="121:13" pos:end="121:74"><name pos:start="121:13" pos:end="121:24">tlb_set_page</name><argument_list pos:start="121:25" pos:end="121:74">(<argument pos:start="121:26" pos:end="121:28"><expr pos:start="121:26" pos:end="121:28"><name pos:start="121:26" pos:end="121:28">env</name></expr></argument>, <argument pos:start="121:31" pos:end="121:37"><expr pos:start="121:31" pos:end="121:37"><name pos:start="121:31" pos:end="121:37">address</name></expr></argument>, <argument pos:start="121:40" pos:end="121:46"><expr pos:start="121:40" pos:end="121:46"><name pos:start="121:40" pos:end="121:46">address</name></expr></argument>, <argument pos:start="121:49" pos:end="121:52"><expr pos:start="121:49" pos:end="121:52"><name pos:start="121:49" pos:end="121:52">prot</name></expr></argument>, <argument pos:start="121:55" pos:end="121:61"><expr pos:start="121:55" pos:end="121:61"><name pos:start="121:55" pos:end="121:61">mmu_idx</name></expr></argument>, <argument pos:start="121:64" pos:end="121:73"><expr pos:start="121:64" pos:end="121:73"><name pos:start="121:64" pos:end="121:73">is_softmmu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><name pos:start="125:12" pos:end="125:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
