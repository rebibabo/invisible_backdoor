<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23039.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:11">AVBufferRef</name> <modifier pos:start="1:13" pos:end="1:13">*</modifier></type><name pos:start="1:14" pos:end="1:28">av_buffer_alloc</name><parameter_list pos:start="1:29" pos:end="1:38">(<parameter pos:start="1:30" pos:end="1:37"><decl pos:start="1:30" pos:end="1:37"><type pos:start="1:30" pos:end="1:32"><name pos:start="1:30" pos:end="1:32">int</name></type> <name pos:start="1:34" pos:end="1:37">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:15">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVBufferRef</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:20">ret</name> <init pos:start="5:22" pos:end="5:27">= <expr pos:start="5:24" pos:end="5:27"><name pos:start="5:24" pos:end="5:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:27"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:11">uint8_t</name>    <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:20">data</name> <init pos:start="7:22" pos:end="7:27">= <expr pos:start="7:24" pos:end="7:27"><name pos:start="7:24" pos:end="7:27">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:8">data</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <call pos:start="11:12" pos:end="11:26"><name pos:start="11:12" pos:end="11:20">av_malloc</name><argument_list pos:start="11:21" pos:end="11:26">(<argument pos:start="11:22" pos:end="11:25"><expr pos:start="11:22" pos:end="11:25"><name pos:start="11:22" pos:end="11:25">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:14">(<expr pos:start="13:9" pos:end="13:13"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:13">data</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="21:33"><if pos:start="19:5" pos:end="21:33">if<condition pos:start="19:7" pos:end="19:31">(<expr pos:start="19:8" pos:end="19:30"><name pos:start="19:8" pos:end="19:30">CONFIG_MEMORY_POISONING</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:33"><block_content pos:start="21:9" pos:end="21:33">

        <expr_stmt pos:start="21:9" pos:end="21:33"><expr pos:start="21:9" pos:end="21:32"><call pos:start="21:9" pos:end="21:32"><name pos:start="21:9" pos:end="21:14">memset</name><argument_list pos:start="21:15" pos:end="21:32">(<argument pos:start="21:16" pos:end="21:19"><expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">data</name></expr></argument>, <argument pos:start="21:22" pos:end="21:25"><expr pos:start="21:22" pos:end="21:25"><literal type="number" pos:start="21:22" pos:end="21:25">0x2a</literal></expr></argument>, <argument pos:start="21:28" pos:end="21:31"><expr pos:start="21:28" pos:end="21:31"><name pos:start="21:28" pos:end="21:31">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:72"><expr pos:start="25:5" pos:end="25:71"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:71"><name pos:start="25:11" pos:end="25:26">av_buffer_create</name><argument_list pos:start="25:27" pos:end="25:71">(<argument pos:start="25:28" pos:end="25:31"><expr pos:start="25:28" pos:end="25:31"><name pos:start="25:28" pos:end="25:31">data</name></expr></argument>, <argument pos:start="25:34" pos:end="25:37"><expr pos:start="25:34" pos:end="25:37"><name pos:start="25:34" pos:end="25:37">size</name></expr></argument>, <argument pos:start="25:40" pos:end="25:61"><expr pos:start="25:40" pos:end="25:61"><name pos:start="25:40" pos:end="25:61">av_buffer_default_free</name></expr></argument>, <argument pos:start="25:64" pos:end="25:67"><expr pos:start="25:64" pos:end="25:67"><name pos:start="25:64" pos:end="25:67">NULL</name></expr></argument>, <argument pos:start="25:70" pos:end="25:70"><expr pos:start="25:70" pos:end="25:70"><literal type="number" pos:start="25:70" pos:end="25:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="29:24"><if pos:start="27:5" pos:end="29:24">if <condition pos:start="27:8" pos:end="27:13">(<expr pos:start="27:9" pos:end="27:12"><operator pos:start="27:9" pos:end="27:9">!</operator><name pos:start="27:10" pos:end="27:12">ret</name></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:24"><block_content pos:start="29:9" pos:end="29:24">

        <expr_stmt pos:start="29:9" pos:end="29:24"><expr pos:start="29:9" pos:end="29:23"><call pos:start="29:9" pos:end="29:23"><name pos:start="29:9" pos:end="29:16">av_freep</name><argument_list pos:start="29:17" pos:end="29:23">(<argument pos:start="29:18" pos:end="29:22"><expr pos:start="29:18" pos:end="29:22"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:22">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="33:5" pos:end="33:15">return <expr pos:start="33:12" pos:end="33:14"><name pos:start="33:12" pos:end="33:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
