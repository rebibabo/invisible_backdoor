<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9821.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">request_samples</name><parameter_list pos:start="1:27" pos:end="1:65">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><name pos:start="1:28" pos:end="1:42">AVFilterContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">ctx</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:64"><decl pos:start="1:50" pos:end="1:64"><type pos:start="1:50" pos:end="1:64"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:64">min_samples</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:44">

    <decl_stmt pos:start="5:5" pos:end="5:30"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">MixContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:29">= <expr pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:29"><name pos:start="5:21" pos:end="5:23">ctx</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:29">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>, <decl pos:start="7:12" pos:end="7:14"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:12" pos:end="7:14">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:33"><expr pos:start="11:5" pos:end="11:32"><call pos:start="11:5" pos:end="11:32"><name pos:start="11:5" pos:end="11:14">av_assert0</name><argument_list pos:start="11:15" pos:end="11:32">(<argument pos:start="11:16" pos:end="11:31"><expr pos:start="11:16" pos:end="11:31"><name pos:start="11:16" pos:end="11:27"><name pos:start="11:16" pos:end="11:16">s</name><operator pos:start="11:17" pos:end="11:18">-&gt;</operator><name pos:start="11:19" pos:end="11:27">nb_inputs</name></name> <operator pos:start="11:29" pos:end="11:29">&gt;</operator> <literal type="number" pos:start="11:31" pos:end="11:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="15:5" pos:end="45:5">for <control pos:start="15:9" pos:end="15:38">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">1</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:33"><expr pos:start="15:17" pos:end="15:32"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:21">s</name><operator pos:start="15:22" pos:end="15:23">-&gt;</operator><name pos:start="15:24" pos:end="15:32">nb_inputs</name></name></expr>;</condition> <incr pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:35">i</name><operator pos:start="15:36" pos:end="15:37">++</operator></expr></incr>)</control> <block pos:start="15:40" pos:end="45:5">{<block_content pos:start="17:9" pos:end="43:23">

        <expr_stmt pos:start="17:9" pos:end="17:16"><expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">ret</name> <operator pos:start="17:13" pos:end="17:13">=</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="21:21"><if pos:start="19:9" pos:end="21:21">if <condition pos:start="19:12" pos:end="19:44">(<expr pos:start="19:13" pos:end="19:43"><operator pos:start="19:13" pos:end="19:13">!</operator><operator pos:start="19:14" pos:end="19:14">(</operator><name pos:start="19:15" pos:end="19:31"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:28">input_state</name><index pos:start="19:29" pos:end="19:31">[<expr pos:start="19:30" pos:end="19:30"><name pos:start="19:30" pos:end="19:30">i</name></expr>]</index></name> <operator pos:start="19:33" pos:end="19:33">&amp;</operator> <name pos:start="19:35" pos:end="19:42">INPUT_ON</name><operator pos:start="19:43" pos:end="19:43">)</operator></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:21"><block_content pos:start="21:13" pos:end="21:21">

            <continue pos:start="21:13" pos:end="21:21">continue;</continue></block_content></block></if></if_stmt>

        <if_stmt pos:start="23:9" pos:end="25:21"><if pos:start="23:9" pos:end="25:21">if <condition pos:start="23:12" pos:end="23:59">(<expr pos:start="23:13" pos:end="23:58"><call pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:30">av_audio_fifo_size</name><argument_list pos:start="23:31" pos:end="23:43">(<argument pos:start="23:32" pos:end="23:42"><expr pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:42"><name pos:start="23:32" pos:end="23:32">s</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:39">fifos</name><index pos:start="23:40" pos:end="23:42">[<expr pos:start="23:41" pos:end="23:41"><name pos:start="23:41" pos:end="23:41">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="23:45" pos:end="23:46">&gt;=</operator> <name pos:start="23:48" pos:end="23:58">min_samples</name></expr>)</condition><block type="pseudo" pos:start="25:13" pos:end="25:21"><block_content pos:start="25:13" pos:end="25:21">

            <continue pos:start="25:13" pos:end="25:21">continue;</continue></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:46"><name pos:start="27:15" pos:end="27:30">ff_request_frame</name><argument_list pos:start="27:31" pos:end="27:46">(<argument pos:start="27:32" pos:end="27:45"><expr pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:45"><name pos:start="27:32" pos:end="27:34">ctx</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:42">inputs</name><index pos:start="27:43" pos:end="27:45">[<expr pos:start="27:44" pos:end="27:44"><name pos:start="27:44" pos:end="27:44">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="29:9" pos:end="43:23"><if pos:start="29:9" pos:end="41:9">if <condition pos:start="29:12" pos:end="29:31">(<expr pos:start="29:13" pos:end="29:30"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:18">==</operator> <name pos:start="29:20" pos:end="29:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="29:33" pos:end="41:9">{<block_content pos:start="31:13" pos:end="39:13">

            <expr_stmt pos:start="31:13" pos:end="31:43"><expr pos:start="31:13" pos:end="31:42"><name pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:26">input_state</name><index pos:start="31:27" pos:end="31:29">[<expr pos:start="31:28" pos:end="31:28"><name pos:start="31:28" pos:end="31:28">i</name></expr>]</index></name> <operator pos:start="31:31" pos:end="31:32">|=</operator> <name pos:start="31:34" pos:end="31:42">INPUT_EOF</name></expr>;</expr_stmt>

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:53">(<expr pos:start="33:17" pos:end="33:52"><call pos:start="33:17" pos:end="33:47"><name pos:start="33:17" pos:end="33:34">av_audio_fifo_size</name><argument_list pos:start="33:35" pos:end="33:47">(<argument pos:start="33:36" pos:end="33:46"><expr pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:46"><name pos:start="33:36" pos:end="33:36">s</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:43">fifos</name><index pos:start="33:44" pos:end="33:46">[<expr pos:start="33:45" pos:end="33:45"><name pos:start="33:45" pos:end="33:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call> <operator pos:start="33:49" pos:end="33:50">==</operator> <literal type="number" pos:start="33:52" pos:end="33:52">0</literal></expr>)</condition> <block pos:start="33:55" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:25">

                <expr_stmt pos:start="35:17" pos:end="35:38"><expr pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:33"><name pos:start="35:17" pos:end="35:17">s</name><operator pos:start="35:18" pos:end="35:19">-&gt;</operator><name pos:start="35:20" pos:end="35:30">input_state</name><index pos:start="35:31" pos:end="35:33">[<expr pos:start="35:32" pos:end="35:32"><name pos:start="35:32" pos:end="35:32">i</name></expr>]</index></name> <operator pos:start="35:35" pos:end="35:35">=</operator> <literal type="number" pos:start="35:37" pos:end="35:37">0</literal></expr>;</expr_stmt>

                <continue pos:start="37:17" pos:end="37:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="43:23">else if <condition pos:start="41:19" pos:end="41:27">(<expr pos:start="41:20" pos:end="41:26"><name pos:start="41:20" pos:end="41:22">ret</name> <operator pos:start="41:24" pos:end="41:24">&lt;</operator> <literal type="number" pos:start="41:26" pos:end="41:26">0</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:23"><block_content pos:start="43:13" pos:end="43:23">

            <return pos:start="43:13" pos:end="43:23">return <expr pos:start="43:20" pos:end="43:22"><name pos:start="43:20" pos:end="43:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="47:5" pos:end="47:44">return <expr pos:start="47:12" pos:end="47:43"><call pos:start="47:12" pos:end="47:43"><name pos:start="47:12" pos:end="47:23">output_frame</name><argument_list pos:start="47:24" pos:end="47:43">(<argument pos:start="47:25" pos:end="47:39"><expr pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:39"><name pos:start="47:25" pos:end="47:27">ctx</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:36">outputs</name><index pos:start="47:37" pos:end="47:39">[<expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="47:42" pos:end="47:42"><expr pos:start="47:42" pos:end="47:42"><literal type="number" pos:start="47:42" pos:end="47:42">1</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
