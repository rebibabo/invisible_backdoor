<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7112.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:19">s390_init_cpus</name><parameter_list pos:start="1:20" pos:end="1:42">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:32"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:41">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:5"><if pos:start="9:5" pos:end="13:5">if <condition pos:start="9:8" pos:end="9:26">(<expr pos:start="9:9" pos:end="9:25"><name pos:start="9:9" pos:end="9:17">cpu_model</name> <operator pos:start="9:19" pos:end="9:20">==</operator> <name pos:start="9:22" pos:end="9:25">NULL</name></expr>)</condition> <block pos:start="9:28" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:27">

        <expr_stmt pos:start="11:9" pos:end="11:27"><expr pos:start="11:9" pos:end="11:26"><name pos:start="11:9" pos:end="11:17">cpu_model</name> <operator pos:start="11:19" pos:end="11:19">=</operator> <literal type="string" pos:start="11:21" pos:end="11:26">"host"</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:56"><expr pos:start="17:5" pos:end="17:55"><name pos:start="17:5" pos:end="17:14">ipi_states</name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:55"><name pos:start="17:18" pos:end="17:25">g_malloc</name><argument_list pos:start="17:26" pos:end="17:55">(<argument pos:start="17:27" pos:end="17:54"><expr pos:start="17:27" pos:end="17:54"><sizeof pos:start="17:27" pos:end="17:43">sizeof<argument_list pos:start="17:33" pos:end="17:43">(<argument pos:start="17:34" pos:end="17:42"><expr pos:start="17:34" pos:end="17:42"><name pos:start="17:34" pos:end="17:40">S390CPU</name> <operator pos:start="17:42" pos:end="17:42">*</operator></expr></argument>)</argument_list></sizeof> <operator pos:start="17:45" pos:end="17:45">*</operator> <name pos:start="17:47" pos:end="17:54">smp_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="41:5">for <control pos:start="21:9" pos:end="21:34">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:29"><expr pos:start="21:17" pos:end="21:28"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:28">smp_cpus</name></expr>;</condition> <incr pos:start="21:31" pos:end="21:33"><expr pos:start="21:31" pos:end="21:33"><name pos:start="21:31" pos:end="21:31">i</name><operator pos:start="21:32" pos:end="21:33">++</operator></expr></incr>)</control> <block pos:start="21:36" pos:end="41:5">{<block_content pos:start="23:9" pos:end="39:39">

        <decl_stmt pos:start="23:9" pos:end="23:21"><decl pos:start="23:9" pos:end="23:20"><type pos:start="23:9" pos:end="23:17"><name pos:start="23:9" pos:end="23:15">S390CPU</name> <modifier pos:start="23:17" pos:end="23:17">*</modifier></type><name pos:start="23:18" pos:end="23:20">cpu</name></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:21"><decl pos:start="25:9" pos:end="25:20"><type pos:start="25:9" pos:end="25:18"><name pos:start="25:9" pos:end="25:16">CPUState</name> <modifier pos:start="25:18" pos:end="25:18">*</modifier></type><name pos:start="25:19" pos:end="25:20">cs</name></decl>;</decl_stmt>



        <expr_stmt pos:start="29:9" pos:end="29:40"><expr pos:start="29:9" pos:end="29:39"><name pos:start="29:9" pos:end="29:11">cpu</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:39"><name pos:start="29:15" pos:end="29:28">cpu_s390x_init</name><argument_list pos:start="29:29" pos:end="29:39">(<argument pos:start="29:30" pos:end="29:38"><expr pos:start="29:30" pos:end="29:38"><name pos:start="29:30" pos:end="29:38">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:10">cs</name> <operator pos:start="31:12" pos:end="31:12">=</operator> <call pos:start="31:14" pos:end="31:21"><name pos:start="31:14" pos:end="31:16">CPU</name><argument_list pos:start="31:17" pos:end="31:21">(<argument pos:start="31:18" pos:end="31:20"><expr pos:start="31:18" pos:end="31:20"><name pos:start="31:18" pos:end="31:20">cpu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="35:9" pos:end="35:28"><expr pos:start="35:9" pos:end="35:27"><name pos:start="35:9" pos:end="35:21"><name pos:start="35:9" pos:end="35:18">ipi_states</name><index pos:start="35:19" pos:end="35:21">[<expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">i</name></expr>]</index></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:27">cpu</name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:23"><expr pos:start="37:9" pos:end="37:22"><name pos:start="37:9" pos:end="37:18"><name pos:start="37:9" pos:end="37:10">cs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:18">halted</name></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:27"><name pos:start="39:9" pos:end="39:10">cs</name><operator pos:start="39:11" pos:end="39:12">-&gt;</operator><name pos:start="39:13" pos:end="39:27">exception_index</name></name> <operator pos:start="39:29" pos:end="39:29">=</operator> <name pos:start="39:31" pos:end="39:38">EXCP_HLT</name></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
