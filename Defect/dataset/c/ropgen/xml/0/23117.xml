<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23117.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:27">sysctl_read</name><parameter_list pos:start="1:28" pos:end="3:42">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:32">void</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:40">opaque</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:65"><decl pos:start="1:43" pos:end="1:65"><type pos:start="1:43" pos:end="1:65"><name pos:start="1:43" pos:end="1:60">target_phys_addr_t</name></type> <name pos:start="1:62" pos:end="1:65">addr</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">unsigned</name></type> <name pos:start="3:38" pos:end="3:41">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:13">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:26"><name pos:start="7:5" pos:end="7:24">MilkymistSysctlState</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier></type><name pos:start="7:27" pos:end="7:27">s</name> <init pos:start="7:29" pos:end="7:36">= <expr pos:start="7:31" pos:end="7:36"><name pos:start="7:31" pos:end="7:36">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">r</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:12">&gt;&gt;=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="77:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">addr</name></expr>)</condition> <block pos:start="15:19" pos:end="77:5">{<block_content pos:start="17:5" pos:end="75:14">

    <case pos:start="17:5" pos:end="17:26">case <expr pos:start="17:10" pos:end="17:25"><name pos:start="17:10" pos:end="17:25">R_TIMER0_COUNTER</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:51"><expr pos:start="19:9" pos:end="19:50"><name pos:start="19:9" pos:end="19:9">r</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:21">uint32_t</name><operator pos:start="19:22" pos:end="19:22">)</operator><call pos:start="19:23" pos:end="19:50"><name pos:start="19:23" pos:end="19:38">ptimer_get_count</name><argument_list pos:start="19:39" pos:end="19:50">(<argument pos:start="19:40" pos:end="19:49"><expr pos:start="19:40" pos:end="19:49"><name pos:start="19:40" pos:end="19:49"><name pos:start="19:40" pos:end="19:40">s</name><operator pos:start="19:41" pos:end="19:42">-&gt;</operator><name pos:start="19:43" pos:end="19:49">ptimer0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="21:9" pos:end="21:39">/* milkymist timer counts up */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:42"><expr pos:start="23:9" pos:end="23:41"><name pos:start="23:9" pos:end="23:9">r</name> <operator pos:start="23:11" pos:end="23:11">=</operator> <name pos:start="23:13" pos:end="23:37"><name pos:start="23:13" pos:end="23:13">s</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:19">regs</name><index pos:start="23:20" pos:end="23:37">[<expr pos:start="23:21" pos:end="23:36"><name pos:start="23:21" pos:end="23:36">R_TIMER0_COMPARE</name></expr>]</index></name> <operator pos:start="23:39" pos:end="23:39">-</operator> <name pos:start="23:41" pos:end="23:41">r</name></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:26">case <expr pos:start="27:10" pos:end="27:25"><name pos:start="27:10" pos:end="27:25">R_TIMER1_COUNTER</name></expr>:</case>

        <expr_stmt pos:start="29:9" pos:end="29:51"><expr pos:start="29:9" pos:end="29:50"><name pos:start="29:9" pos:end="29:9">r</name> <operator pos:start="29:11" pos:end="29:11">=</operator> <operator pos:start="29:13" pos:end="29:13">(</operator><name pos:start="29:14" pos:end="29:21">uint32_t</name><operator pos:start="29:22" pos:end="29:22">)</operator><call pos:start="29:23" pos:end="29:50"><name pos:start="29:23" pos:end="29:38">ptimer_get_count</name><argument_list pos:start="29:39" pos:end="29:50">(<argument pos:start="29:40" pos:end="29:49"><expr pos:start="29:40" pos:end="29:49"><name pos:start="29:40" pos:end="29:49"><name pos:start="29:40" pos:end="29:40">s</name><operator pos:start="29:41" pos:end="29:42">-&gt;</operator><name pos:start="29:43" pos:end="29:49">ptimer1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="31:9" pos:end="31:39">/* milkymist timer counts up */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:42"><expr pos:start="33:9" pos:end="33:41"><name pos:start="33:9" pos:end="33:9">r</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:37"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">regs</name><index pos:start="33:20" pos:end="33:37">[<expr pos:start="33:21" pos:end="33:36"><name pos:start="33:21" pos:end="33:36">R_TIMER1_COMPARE</name></expr>]</index></name> <operator pos:start="33:39" pos:end="33:39">-</operator> <name pos:start="33:41" pos:end="33:41">r</name></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:19">case <expr pos:start="37:10" pos:end="37:18"><name pos:start="37:10" pos:end="37:18">R_GPIO_IN</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:20">case <expr pos:start="39:10" pos:end="39:19"><name pos:start="39:10" pos:end="39:19">R_GPIO_OUT</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:22">case <expr pos:start="41:10" pos:end="41:21"><name pos:start="41:10" pos:end="41:21">R_GPIO_INTEN</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:26">case <expr pos:start="43:10" pos:end="43:25"><name pos:start="43:10" pos:end="43:25">R_TIMER0_CONTROL</name></expr>:</case>

    <case pos:start="45:5" pos:end="45:26">case <expr pos:start="45:10" pos:end="45:25"><name pos:start="45:10" pos:end="45:25">R_TIMER0_COMPARE</name></expr>:</case>

    <case pos:start="47:5" pos:end="47:26">case <expr pos:start="47:10" pos:end="47:25"><name pos:start="47:10" pos:end="47:25">R_TIMER1_CONTROL</name></expr>:</case>

    <case pos:start="49:5" pos:end="49:26">case <expr pos:start="49:10" pos:end="49:25"><name pos:start="49:10" pos:end="49:25">R_TIMER1_COMPARE</name></expr>:</case>

    <case pos:start="51:5" pos:end="51:16">case <expr pos:start="51:10" pos:end="51:15"><name pos:start="51:10" pos:end="51:15">R_ICAP</name></expr>:</case>

    <case pos:start="53:5" pos:end="53:26">case <expr pos:start="53:10" pos:end="53:25"><name pos:start="53:10" pos:end="53:25">R_DBG_SCRATCHPAD</name></expr>:</case>

    <case pos:start="55:5" pos:end="55:26">case <expr pos:start="55:10" pos:end="55:25"><name pos:start="55:10" pos:end="55:25">R_DBG_WRITE_LOCK</name></expr>:</case>

    <case pos:start="57:5" pos:end="57:25">case <expr pos:start="57:10" pos:end="57:24"><name pos:start="57:10" pos:end="57:24">R_CLK_FREQUENCY</name></expr>:</case>

    <case pos:start="59:5" pos:end="59:24">case <expr pos:start="59:10" pos:end="59:23"><name pos:start="59:10" pos:end="59:23">R_CAPABILITIES</name></expr>:</case>

    <case pos:start="61:5" pos:end="61:21">case <expr pos:start="61:10" pos:end="61:20"><name pos:start="61:10" pos:end="61:20">R_SYSTEM_ID</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:26"><expr pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:9">r</name> <operator pos:start="63:11" pos:end="63:11">=</operator> <name pos:start="63:13" pos:end="63:25"><name pos:start="63:13" pos:end="63:13">s</name><operator pos:start="63:14" pos:end="63:15">-&gt;</operator><name pos:start="63:16" pos:end="63:19">regs</name><index pos:start="63:20" pos:end="63:25">[<expr pos:start="63:21" pos:end="63:24"><name pos:start="63:21" pos:end="63:24">addr</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="65:9" pos:end="65:14">break;</break>



    <default pos:start="69:5" pos:end="69:12">default:</default>

        <expr_stmt pos:start="71:9" pos:end="73:43"><expr pos:start="71:9" pos:end="73:42"><call pos:start="71:9" pos:end="73:42"><name pos:start="71:9" pos:end="71:20">error_report</name><argument_list pos:start="71:21" pos:end="73:42">(<argument pos:start="71:22" pos:end="73:30"><expr pos:start="71:22" pos:end="73:30"><literal type="string" pos:start="71:22" pos:end="71:75">"milkymist_sysctl: read access to unknown register 0x"</literal>

                <name pos:start="73:17" pos:end="73:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="73:33" pos:end="73:41"><expr pos:start="73:33" pos:end="73:41"><name pos:start="73:33" pos:end="73:36">addr</name> <operator pos:start="73:38" pos:end="73:39">&lt;&lt;</operator> <literal type="number" pos:start="73:41" pos:end="73:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="81:5" pos:end="81:53"><expr pos:start="81:5" pos:end="81:52"><call pos:start="81:5" pos:end="81:52"><name pos:start="81:5" pos:end="81:38">trace_milkymist_sysctl_memory_read</name><argument_list pos:start="81:39" pos:end="81:52">(<argument pos:start="81:40" pos:end="81:48"><expr pos:start="81:40" pos:end="81:48"><name pos:start="81:40" pos:end="81:43">addr</name> <operator pos:start="81:45" pos:end="81:46">&lt;&lt;</operator> <literal type="number" pos:start="81:48" pos:end="81:48">2</literal></expr></argument>, <argument pos:start="81:51" pos:end="81:51"><expr pos:start="81:51" pos:end="81:51"><name pos:start="81:51" pos:end="81:51">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="85:5" pos:end="85:13">return <expr pos:start="85:12" pos:end="85:12"><name pos:start="85:12" pos:end="85:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
