<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16951.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">qemu_signal_init</name><parameter_list pos:start="1:28" pos:end="1:33">(<parameter pos:start="1:29" pos:end="1:32"><decl pos:start="1:29" pos:end="1:32"><type pos:start="1:29" pos:end="1:32"><name pos:start="1:29" pos:end="1:32">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:13">

    <decl_stmt pos:start="5:5" pos:end="5:14"><decl pos:start="5:5" pos:end="5:13"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:13">sigfd</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">sigset_t</name></type> <name pos:start="7:14" pos:end="7:16">set</name></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="19:7">/*

     * SIG_IPI must be blocked in the main thread and must not be caught

     * by sigwait() in the signal thread. Otherwise, the cpu thread will

     * not catch it reliably.

     */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:22"><expr pos:start="21:5" pos:end="21:21"><call pos:start="21:5" pos:end="21:21"><name pos:start="21:5" pos:end="21:15">sigemptyset</name><argument_list pos:start="21:16" pos:end="21:21">(<argument pos:start="21:17" pos:end="21:20"><expr pos:start="21:17" pos:end="21:20"><operator pos:start="21:17" pos:end="21:17">&amp;</operator><name pos:start="21:18" pos:end="21:20">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><call pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:13">sigaddset</name><argument_list pos:start="23:14" pos:end="23:28">(<argument pos:start="23:15" pos:end="23:18"><expr pos:start="23:15" pos:end="23:18"><operator pos:start="23:15" pos:end="23:15">&amp;</operator><name pos:start="23:16" pos:end="23:18">set</name></expr></argument>, <argument pos:start="23:21" pos:end="23:27"><expr pos:start="23:21" pos:end="23:27"><name pos:start="23:21" pos:end="23:27">SIG_IPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:13">sigaddset</name><argument_list pos:start="25:14" pos:end="25:26">(<argument pos:start="25:15" pos:end="25:18"><expr pos:start="25:15" pos:end="25:18"><operator pos:start="25:15" pos:end="25:15">&amp;</operator><name pos:start="25:16" pos:end="25:18">set</name></expr></argument>, <argument pos:start="25:21" pos:end="25:25"><expr pos:start="25:21" pos:end="25:25"><name pos:start="25:21" pos:end="25:25">SIGIO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><call pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:13">sigaddset</name><argument_list pos:start="27:14" pos:end="27:28">(<argument pos:start="27:15" pos:end="27:18"><expr pos:start="27:15" pos:end="27:18"><operator pos:start="27:15" pos:end="27:15">&amp;</operator><name pos:start="27:16" pos:end="27:18">set</name></expr></argument>, <argument pos:start="27:21" pos:end="27:27"><expr pos:start="27:21" pos:end="27:27"><name pos:start="27:21" pos:end="27:27">SIGALRM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><call pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:13">sigaddset</name><argument_list pos:start="29:14" pos:end="29:27">(<argument pos:start="29:15" pos:end="29:18"><expr pos:start="29:15" pos:end="29:18"><operator pos:start="29:15" pos:end="29:15">&amp;</operator><name pos:start="29:16" pos:end="29:18">set</name></expr></argument>, <argument pos:start="29:21" pos:end="29:26"><expr pos:start="29:21" pos:end="29:26"><name pos:start="29:21" pos:end="29:26">SIGBUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:28"><expr pos:start="31:5" pos:end="31:27"><call pos:start="31:5" pos:end="31:27"><name pos:start="31:5" pos:end="31:13">sigaddset</name><argument_list pos:start="31:14" pos:end="31:27">(<argument pos:start="31:15" pos:end="31:18"><expr pos:start="31:15" pos:end="31:18"><operator pos:start="31:15" pos:end="31:15">&amp;</operator><name pos:start="31:16" pos:end="31:18">set</name></expr></argument>, <argument pos:start="31:21" pos:end="31:26"><expr pos:start="31:21" pos:end="31:26"><name pos:start="31:21" pos:end="31:26">SIGINT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:28"><expr pos:start="33:5" pos:end="33:27"><call pos:start="33:5" pos:end="33:27"><name pos:start="33:5" pos:end="33:13">sigaddset</name><argument_list pos:start="33:14" pos:end="33:27">(<argument pos:start="33:15" pos:end="33:18"><expr pos:start="33:15" pos:end="33:18"><operator pos:start="33:15" pos:end="33:15">&amp;</operator><name pos:start="33:16" pos:end="33:18">set</name></expr></argument>, <argument pos:start="33:21" pos:end="33:26"><expr pos:start="33:21" pos:end="33:26"><name pos:start="33:21" pos:end="33:26">SIGHUP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:29"><expr pos:start="35:5" pos:end="35:28"><call pos:start="35:5" pos:end="35:28"><name pos:start="35:5" pos:end="35:13">sigaddset</name><argument_list pos:start="35:14" pos:end="35:28">(<argument pos:start="35:15" pos:end="35:18"><expr pos:start="35:15" pos:end="35:18"><operator pos:start="35:15" pos:end="35:15">&amp;</operator><name pos:start="35:16" pos:end="35:18">set</name></expr></argument>, <argument pos:start="35:21" pos:end="35:27"><expr pos:start="35:21" pos:end="35:27"><name pos:start="35:21" pos:end="35:27">SIGTERM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:43"><expr pos:start="37:5" pos:end="37:42"><call pos:start="37:5" pos:end="37:42"><name pos:start="37:5" pos:end="37:19">pthread_sigmask</name><argument_list pos:start="37:20" pos:end="37:42">(<argument pos:start="37:21" pos:end="37:29"><expr pos:start="37:21" pos:end="37:29"><name pos:start="37:21" pos:end="37:29">SIG_BLOCK</name></expr></argument>, <argument pos:start="37:32" pos:end="37:35"><expr pos:start="37:32" pos:end="37:35"><operator pos:start="37:32" pos:end="37:32">&amp;</operator><name pos:start="37:33" pos:end="37:35">set</name></expr></argument>, <argument pos:start="37:38" pos:end="37:41"><expr pos:start="37:38" pos:end="37:41"><name pos:start="37:38" pos:end="37:41">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:29"><expr pos:start="41:5" pos:end="41:28"><call pos:start="41:5" pos:end="41:28"><name pos:start="41:5" pos:end="41:13">sigdelset</name><argument_list pos:start="41:14" pos:end="41:28">(<argument pos:start="41:15" pos:end="41:18"><expr pos:start="41:15" pos:end="41:18"><operator pos:start="41:15" pos:end="41:15">&amp;</operator><name pos:start="41:16" pos:end="41:18">set</name></expr></argument>, <argument pos:start="41:21" pos:end="41:27"><expr pos:start="41:21" pos:end="41:27"><name pos:start="41:21" pos:end="41:27">SIG_IPI</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:32"><expr pos:start="43:5" pos:end="43:31"><name pos:start="43:5" pos:end="43:9">sigfd</name> <operator pos:start="43:11" pos:end="43:11">=</operator> <call pos:start="43:13" pos:end="43:31"><name pos:start="43:13" pos:end="43:25">qemu_signalfd</name><argument_list pos:start="43:26" pos:end="43:31">(<argument pos:start="43:27" pos:end="43:30"><expr pos:start="43:27" pos:end="43:30"><operator pos:start="43:27" pos:end="43:27">&amp;</operator><name pos:start="43:28" pos:end="43:30">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="51:5"><if pos:start="45:5" pos:end="51:5">if <condition pos:start="45:8" pos:end="45:20">(<expr pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:13">sigfd</name> <operator pos:start="45:15" pos:end="45:16">==</operator> <operator pos:start="45:18" pos:end="45:18">-</operator><literal type="number" pos:start="45:19" pos:end="45:19">1</literal></expr>)</condition> <block pos:start="45:22" pos:end="51:5">{<block_content pos:start="47:9" pos:end="49:22">

        <expr_stmt pos:start="47:9" pos:end="47:55"><expr pos:start="47:9" pos:end="47:54"><call pos:start="47:9" pos:end="47:54"><name pos:start="47:9" pos:end="47:15">fprintf</name><argument_list pos:start="47:16" pos:end="47:54">(<argument pos:start="47:17" pos:end="47:22"><expr pos:start="47:17" pos:end="47:22"><name pos:start="47:17" pos:end="47:22">stderr</name></expr></argument>, <argument pos:start="47:25" pos:end="47:53"><expr pos:start="47:25" pos:end="47:53"><literal type="string" pos:start="47:25" pos:end="47:53">"failed to create signalfd\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:22">return <expr pos:start="49:16" pos:end="49:21"><operator pos:start="49:16" pos:end="49:16">-</operator><name pos:start="49:17" pos:end="49:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:35"><expr pos:start="55:5" pos:end="55:34"><call pos:start="55:5" pos:end="55:34"><name pos:start="55:5" pos:end="55:15">fcntl_setfl</name><argument_list pos:start="55:16" pos:end="55:34">(<argument pos:start="55:17" pos:end="55:21"><expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:21">sigfd</name></expr></argument>, <argument pos:start="55:24" pos:end="55:33"><expr pos:start="55:24" pos:end="55:33"><name pos:start="55:24" pos:end="55:33">O_NONBLOCK</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:50"><expr pos:start="59:5" pos:end="61:49"><call pos:start="59:5" pos:end="61:49"><name pos:start="59:5" pos:end="59:24">qemu_set_fd_handler2</name><argument_list pos:start="59:25" pos:end="61:49">(<argument pos:start="59:26" pos:end="59:30"><expr pos:start="59:26" pos:end="59:30"><name pos:start="59:26" pos:end="59:30">sigfd</name></expr></argument>, <argument pos:start="59:33" pos:end="59:36"><expr pos:start="59:33" pos:end="59:36"><name pos:start="59:33" pos:end="59:36">NULL</name></expr></argument>, <argument pos:start="59:39" pos:end="59:51"><expr pos:start="59:39" pos:end="59:51"><name pos:start="59:39" pos:end="59:51">sigfd_handler</name></expr></argument>, <argument pos:start="59:54" pos:end="59:57"><expr pos:start="59:54" pos:end="59:57"><name pos:start="59:54" pos:end="59:57">NULL</name></expr></argument>,

                         <argument pos:start="61:26" pos:end="61:48"><expr pos:start="61:26" pos:end="61:48"><operator pos:start="61:26" pos:end="61:26">(</operator><name pos:start="61:27" pos:end="61:30">void</name> <operator pos:start="61:32" pos:end="61:32">*</operator><operator pos:start="61:33" pos:end="61:33">)</operator><operator pos:start="61:34" pos:end="61:34">(</operator><name pos:start="61:35" pos:end="61:42">intptr_t</name><operator pos:start="61:43" pos:end="61:43">)</operator><name pos:start="61:44" pos:end="61:48">sigfd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><literal type="number" pos:start="65:12" pos:end="65:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
