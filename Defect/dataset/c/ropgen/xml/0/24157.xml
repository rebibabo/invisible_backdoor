<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24157.c" pos:tabs="8"><function pos:start="1:1" pos:end="103:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:37">virtio_input_handle_event</name><parameter_list pos:start="1:38" pos:end="3:54">(<parameter pos:start="1:39" pos:end="1:54"><decl pos:start="1:39" pos:end="1:54"><type pos:start="1:39" pos:end="1:54"><name pos:start="1:39" pos:end="1:49">DeviceState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">dev</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:72"><decl pos:start="1:57" pos:end="1:72"><type pos:start="1:57" pos:end="1:72"><name pos:start="1:57" pos:end="1:67">QemuConsole</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">src</name></decl></parameter>,

                                      <parameter pos:start="3:39" pos:end="3:53"><decl pos:start="3:39" pos:end="3:53"><type pos:start="3:39" pos:end="3:53"><name pos:start="3:39" pos:end="3:48">InputEvent</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier></type><name pos:start="3:51" pos:end="3:53">evt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="103:1">{<block_content pos:start="7:5" pos:end="101:5">

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">VirtIOInput</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:23">vinput</name> <init pos:start="7:25" pos:end="7:43">= <expr pos:start="7:27" pos:end="7:43"><call pos:start="7:27" pos:end="7:43"><name pos:start="7:27" pos:end="7:38">VIRTIO_INPUT</name><argument_list pos:start="7:39" pos:end="7:43">(<argument pos:start="7:40" pos:end="7:42"><expr pos:start="7:40" pos:end="7:42"><name pos:start="7:40" pos:end="7:42">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">virtio_input_event</name></type> <name pos:start="9:24" pos:end="9:28">event</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">qcode</name></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="101:5">switch <condition pos:start="15:12" pos:end="15:22">(<expr pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:21"><name pos:start="15:13" pos:end="15:15">evt</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:21">kind</name></name></expr>)</condition> <block pos:start="15:24" pos:end="101:5">{<block_content pos:start="17:5" pos:end="99:14">

    <case pos:start="17:5" pos:end="17:30">case <expr pos:start="17:10" pos:end="17:29"><name pos:start="17:10" pos:end="17:29">INPUT_EVENT_KIND_KEY</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:61"><expr pos:start="19:9" pos:end="19:60"><name pos:start="19:9" pos:end="19:13">qcode</name> <operator pos:start="19:15" pos:end="19:15">=</operator> <call pos:start="19:17" pos:end="19:60"><name pos:start="19:17" pos:end="19:45">qemu_input_key_value_to_qcode</name><argument_list pos:start="19:46" pos:end="19:60">(<argument pos:start="19:47" pos:end="19:59"><expr pos:start="19:47" pos:end="19:59"><name pos:start="19:47" pos:end="19:59"><name pos:start="19:47" pos:end="19:49">evt</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:54">key</name><operator pos:start="19:55" pos:end="19:56">-&gt;</operator><name pos:start="19:57" pos:end="19:59">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="21:9" pos:end="41:9"><if pos:start="21:9" pos:end="31:9">if <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:17">qcode</name> <operator pos:start="21:19" pos:end="21:20">&amp;&amp;</operator> <name pos:start="21:22" pos:end="21:40"><name pos:start="21:22" pos:end="21:33">keymap_qcode</name><index pos:start="21:34" pos:end="21:40">[<expr pos:start="21:35" pos:end="21:39"><name pos:start="21:35" pos:end="21:39">qcode</name></expr>]</index></name></expr>)</condition> <block pos:start="21:43" pos:end="31:9">{<block_content pos:start="23:13" pos:end="29:46">

            <expr_stmt pos:start="23:13" pos:end="23:46"><expr pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:17">event</name><operator pos:start="23:18" pos:end="23:18">.</operator><name pos:start="23:19" pos:end="23:22">type</name></name>  <operator pos:start="23:25" pos:end="23:25">=</operator> <call pos:start="23:27" pos:end="23:45"><name pos:start="23:27" pos:end="23:37">cpu_to_le16</name><argument_list pos:start="23:38" pos:end="23:45">(<argument pos:start="23:39" pos:end="23:44"><expr pos:start="23:39" pos:end="23:44"><name pos:start="23:39" pos:end="23:44">EV_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:59"><expr pos:start="25:13" pos:end="25:58"><name pos:start="25:13" pos:end="25:22"><name pos:start="25:13" pos:end="25:17">event</name><operator pos:start="25:18" pos:end="25:18">.</operator><name pos:start="25:19" pos:end="25:22">code</name></name>  <operator pos:start="25:25" pos:end="25:25">=</operator> <call pos:start="25:27" pos:end="25:58"><name pos:start="25:27" pos:end="25:37">cpu_to_le16</name><argument_list pos:start="25:38" pos:end="25:58">(<argument pos:start="25:39" pos:end="25:57"><expr pos:start="25:39" pos:end="25:57"><name pos:start="25:39" pos:end="25:57"><name pos:start="25:39" pos:end="25:50">keymap_qcode</name><index pos:start="25:51" pos:end="25:57">[<expr pos:start="25:52" pos:end="25:56"><name pos:start="25:52" pos:end="25:56">qcode</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:62"><expr pos:start="27:13" pos:end="27:61"><name pos:start="27:13" pos:end="27:23"><name pos:start="27:13" pos:end="27:17">event</name><operator pos:start="27:18" pos:end="27:18">.</operator><name pos:start="27:19" pos:end="27:23">value</name></name> <operator pos:start="27:25" pos:end="27:25">=</operator> <call pos:start="27:27" pos:end="27:61"><name pos:start="27:27" pos:end="27:37">cpu_to_le32</name><argument_list pos:start="27:38" pos:end="27:61">(<argument pos:start="27:39" pos:end="27:60"><expr pos:start="27:39" pos:end="27:60"><ternary pos:start="27:39" pos:end="27:60"><condition pos:start="27:39" pos:end="27:54"><expr pos:start="27:39" pos:end="27:52"><name pos:start="27:39" pos:end="27:52"><name pos:start="27:39" pos:end="27:41">evt</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:46">key</name><operator pos:start="27:47" pos:end="27:48">-&gt;</operator><name pos:start="27:49" pos:end="27:52">down</name></name></expr> ?</condition><then pos:start="27:56" pos:end="27:56"> <expr pos:start="27:56" pos:end="27:56"><literal type="number" pos:start="27:56" pos:end="27:56">1</literal></expr> </then><else pos:start="27:58" pos:end="27:60">: <expr pos:start="27:60" pos:end="27:60"><literal type="number" pos:start="27:60" pos:end="27:60">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:46"><expr pos:start="29:13" pos:end="29:45"><call pos:start="29:13" pos:end="29:45"><name pos:start="29:13" pos:end="29:29">virtio_input_send</name><argument_list pos:start="29:30" pos:end="29:45">(<argument pos:start="29:31" pos:end="29:36"><expr pos:start="29:31" pos:end="29:36"><name pos:start="29:31" pos:end="29:36">vinput</name></expr></argument>, <argument pos:start="29:39" pos:end="29:44"><expr pos:start="29:39" pos:end="29:44"><operator pos:start="29:39" pos:end="29:39">&amp;</operator><name pos:start="29:40" pos:end="29:44">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="31:11" pos:end="41:9">else <block pos:start="31:16" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:13">

            <if_stmt pos:start="33:13" pos:end="39:13"><if pos:start="33:13" pos:end="39:13">if <condition pos:start="33:16" pos:end="33:31">(<expr pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:30"><name pos:start="33:17" pos:end="33:19">evt</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:24">key</name><operator pos:start="33:25" pos:end="33:26">-&gt;</operator><name pos:start="33:27" pos:end="33:30">down</name></name></expr>)</condition> <block pos:start="33:33" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:55">

                <expr_stmt pos:start="35:17" pos:end="37:55"><expr pos:start="35:17" pos:end="37:54"><call pos:start="35:17" pos:end="37:54"><name pos:start="35:17" pos:end="35:23">fprintf</name><argument_list pos:start="35:24" pos:end="37:54">(<argument pos:start="35:25" pos:end="35:30"><expr pos:start="35:25" pos:end="35:30"><name pos:start="35:25" pos:end="35:30">stderr</name></expr></argument>, <argument pos:start="35:33" pos:end="35:61"><expr pos:start="35:33" pos:end="35:61"><literal type="string" pos:start="35:33" pos:end="35:61">"%s: unmapped key: %d [%s]\n"</literal></expr></argument>, <argument pos:start="35:64" pos:end="35:71"><expr pos:start="35:64" pos:end="35:71"><name pos:start="35:64" pos:end="35:71">__func__</name></expr></argument>,

                        <argument pos:start="37:25" pos:end="37:29"><expr pos:start="37:25" pos:end="37:29"><name pos:start="37:25" pos:end="37:29">qcode</name></expr></argument>, <argument pos:start="37:32" pos:end="37:53"><expr pos:start="37:32" pos:end="37:53"><name pos:start="37:32" pos:end="37:53"><name pos:start="37:32" pos:end="37:46">QKeyCode_lookup</name><index pos:start="37:47" pos:end="37:53">[<expr pos:start="37:48" pos:end="37:52"><name pos:start="37:48" pos:end="37:52">qcode</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:30">case <expr pos:start="45:10" pos:end="45:29"><name pos:start="45:10" pos:end="45:29">INPUT_EVENT_KIND_BTN</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="67:9"><if pos:start="47:9" pos:end="57:9">if <condition pos:start="47:12" pos:end="47:44">(<expr pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:25">keymap_button</name><index pos:start="47:26" pos:end="47:43">[<expr pos:start="47:27" pos:end="47:42"><name pos:start="47:27" pos:end="47:42"><name pos:start="47:27" pos:end="47:29">evt</name><operator pos:start="47:30" pos:end="47:31">-&gt;</operator><name pos:start="47:32" pos:end="47:34">btn</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:42">button</name></name></expr>]</index></name></expr>)</condition> <block pos:start="47:46" pos:end="57:9">{<block_content pos:start="49:13" pos:end="55:46">

            <expr_stmt pos:start="49:13" pos:end="49:46"><expr pos:start="49:13" pos:end="49:45"><name pos:start="49:13" pos:end="49:22"><name pos:start="49:13" pos:end="49:17">event</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:22">type</name></name>  <operator pos:start="49:25" pos:end="49:25">=</operator> <call pos:start="49:27" pos:end="49:45"><name pos:start="49:27" pos:end="49:37">cpu_to_le16</name><argument_list pos:start="49:38" pos:end="49:45">(<argument pos:start="49:39" pos:end="49:44"><expr pos:start="49:39" pos:end="49:44"><name pos:start="49:39" pos:end="49:44">EV_KEY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:71"><expr pos:start="51:13" pos:end="51:70"><name pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:17">event</name><operator pos:start="51:18" pos:end="51:18">.</operator><name pos:start="51:19" pos:end="51:22">code</name></name>  <operator pos:start="51:25" pos:end="51:25">=</operator> <call pos:start="51:27" pos:end="51:70"><name pos:start="51:27" pos:end="51:37">cpu_to_le16</name><argument_list pos:start="51:38" pos:end="51:70">(<argument pos:start="51:39" pos:end="51:69"><expr pos:start="51:39" pos:end="51:69"><name pos:start="51:39" pos:end="51:69"><name pos:start="51:39" pos:end="51:51">keymap_button</name><index pos:start="51:52" pos:end="51:69">[<expr pos:start="51:53" pos:end="51:68"><name pos:start="51:53" pos:end="51:68"><name pos:start="51:53" pos:end="51:55">evt</name><operator pos:start="51:56" pos:end="51:57">-&gt;</operator><name pos:start="51:58" pos:end="51:60">btn</name><operator pos:start="51:61" pos:end="51:62">-&gt;</operator><name pos:start="51:63" pos:end="51:68">button</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:62"><expr pos:start="53:13" pos:end="53:61"><name pos:start="53:13" pos:end="53:23"><name pos:start="53:13" pos:end="53:17">event</name><operator pos:start="53:18" pos:end="53:18">.</operator><name pos:start="53:19" pos:end="53:23">value</name></name> <operator pos:start="53:25" pos:end="53:25">=</operator> <call pos:start="53:27" pos:end="53:61"><name pos:start="53:27" pos:end="53:37">cpu_to_le32</name><argument_list pos:start="53:38" pos:end="53:61">(<argument pos:start="53:39" pos:end="53:60"><expr pos:start="53:39" pos:end="53:60"><ternary pos:start="53:39" pos:end="53:60"><condition pos:start="53:39" pos:end="53:54"><expr pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:52"><name pos:start="53:39" pos:end="53:41">evt</name><operator pos:start="53:42" pos:end="53:43">-&gt;</operator><name pos:start="53:44" pos:end="53:46">btn</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:52">down</name></name></expr> ?</condition><then pos:start="53:56" pos:end="53:56"> <expr pos:start="53:56" pos:end="53:56"><literal type="number" pos:start="53:56" pos:end="53:56">1</literal></expr> </then><else pos:start="53:58" pos:end="53:60">: <expr pos:start="53:60" pos:end="53:60"><literal type="number" pos:start="53:60" pos:end="53:60">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><call pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:29">virtio_input_send</name><argument_list pos:start="55:30" pos:end="55:45">(<argument pos:start="55:31" pos:end="55:36"><expr pos:start="55:31" pos:end="55:36"><name pos:start="55:31" pos:end="55:36">vinput</name></expr></argument>, <argument pos:start="55:39" pos:end="55:44"><expr pos:start="55:39" pos:end="55:44"><operator pos:start="55:39" pos:end="55:39">&amp;</operator><name pos:start="55:40" pos:end="55:44">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="57:11" pos:end="67:9">else <block pos:start="57:16" pos:end="67:9">{<block_content pos:start="59:13" pos:end="65:13">

            <if_stmt pos:start="59:13" pos:end="65:13"><if pos:start="59:13" pos:end="65:13">if <condition pos:start="59:16" pos:end="59:31">(<expr pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:30"><name pos:start="59:17" pos:end="59:19">evt</name><operator pos:start="59:20" pos:end="59:21">-&gt;</operator><name pos:start="59:22" pos:end="59:24">btn</name><operator pos:start="59:25" pos:end="59:26">-&gt;</operator><name pos:start="59:27" pos:end="59:30">down</name></name></expr>)</condition> <block pos:start="59:33" pos:end="65:13">{<block_content pos:start="61:17" pos:end="63:80">

                <expr_stmt pos:start="61:17" pos:end="63:80"><expr pos:start="61:17" pos:end="63:79"><call pos:start="61:17" pos:end="63:79"><name pos:start="61:17" pos:end="61:23">fprintf</name><argument_list pos:start="61:24" pos:end="63:79">(<argument pos:start="61:25" pos:end="61:30"><expr pos:start="61:25" pos:end="61:30"><name pos:start="61:25" pos:end="61:30">stderr</name></expr></argument>, <argument pos:start="61:33" pos:end="61:64"><expr pos:start="61:33" pos:end="61:64"><literal type="string" pos:start="61:33" pos:end="61:64">"%s: unmapped button: %d [%s]\n"</literal></expr></argument>, <argument pos:start="61:67" pos:end="61:74"><expr pos:start="61:67" pos:end="61:74"><name pos:start="61:67" pos:end="61:74">__func__</name></expr></argument>,

                        <argument pos:start="63:25" pos:end="63:40"><expr pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:27">evt</name><operator pos:start="63:28" pos:end="63:29">-&gt;</operator><name pos:start="63:30" pos:end="63:32">btn</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:40">button</name></name></expr></argument>, <argument pos:start="63:43" pos:end="63:78"><expr pos:start="63:43" pos:end="63:78"><name pos:start="63:43" pos:end="63:78"><name pos:start="63:43" pos:end="63:60">InputButton_lookup</name><index pos:start="63:61" pos:end="63:78">[<expr pos:start="63:62" pos:end="63:77"><name pos:start="63:62" pos:end="63:77"><name pos:start="63:62" pos:end="63:64">evt</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:69">btn</name><operator pos:start="63:70" pos:end="63:71">-&gt;</operator><name pos:start="63:72" pos:end="63:77">button</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    <case pos:start="71:5" pos:end="71:30">case <expr pos:start="71:10" pos:end="71:29"><name pos:start="71:10" pos:end="71:29">INPUT_EVENT_KIND_REL</name></expr>:</case>

        <expr_stmt pos:start="73:9" pos:end="73:42"><expr pos:start="73:9" pos:end="73:41"><name pos:start="73:9" pos:end="73:18"><name pos:start="73:9" pos:end="73:13">event</name><operator pos:start="73:14" pos:end="73:14">.</operator><name pos:start="73:15" pos:end="73:18">type</name></name>  <operator pos:start="73:21" pos:end="73:21">=</operator> <call pos:start="73:23" pos:end="73:41"><name pos:start="73:23" pos:end="73:33">cpu_to_le16</name><argument_list pos:start="73:34" pos:end="73:41">(<argument pos:start="73:35" pos:end="73:40"><expr pos:start="73:35" pos:end="73:40"><name pos:start="73:35" pos:end="73:40">EV_REL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:63"><expr pos:start="75:9" pos:end="75:62"><name pos:start="75:9" pos:end="75:18"><name pos:start="75:9" pos:end="75:13">event</name><operator pos:start="75:14" pos:end="75:14">.</operator><name pos:start="75:15" pos:end="75:18">code</name></name>  <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:62"><name pos:start="75:23" pos:end="75:33">cpu_to_le16</name><argument_list pos:start="75:34" pos:end="75:62">(<argument pos:start="75:35" pos:end="75:61"><expr pos:start="75:35" pos:end="75:61"><name pos:start="75:35" pos:end="75:61"><name pos:start="75:35" pos:end="75:45">axismap_rel</name><index pos:start="75:46" pos:end="75:61">[<expr pos:start="75:47" pos:end="75:60"><name pos:start="75:47" pos:end="75:60"><name pos:start="75:47" pos:end="75:49">evt</name><operator pos:start="75:50" pos:end="75:51">-&gt;</operator><name pos:start="75:52" pos:end="75:54">rel</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:60">axis</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:51"><expr pos:start="77:9" pos:end="77:50"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:13">event</name><operator pos:start="77:14" pos:end="77:14">.</operator><name pos:start="77:15" pos:end="77:19">value</name></name> <operator pos:start="77:21" pos:end="77:21">=</operator> <call pos:start="77:23" pos:end="77:50"><name pos:start="77:23" pos:end="77:33">cpu_to_le32</name><argument_list pos:start="77:34" pos:end="77:50">(<argument pos:start="77:35" pos:end="77:49"><expr pos:start="77:35" pos:end="77:49"><name pos:start="77:35" pos:end="77:49"><name pos:start="77:35" pos:end="77:37">evt</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:42">rel</name><operator pos:start="77:43" pos:end="77:44">-&gt;</operator><name pos:start="77:45" pos:end="77:49">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:42"><expr pos:start="79:9" pos:end="79:41"><call pos:start="79:9" pos:end="79:41"><name pos:start="79:9" pos:end="79:25">virtio_input_send</name><argument_list pos:start="79:26" pos:end="79:41">(<argument pos:start="79:27" pos:end="79:32"><expr pos:start="79:27" pos:end="79:32"><name pos:start="79:27" pos:end="79:32">vinput</name></expr></argument>, <argument pos:start="79:35" pos:end="79:40"><expr pos:start="79:35" pos:end="79:40"><operator pos:start="79:35" pos:end="79:35">&amp;</operator><name pos:start="79:36" pos:end="79:40">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:30">case <expr pos:start="83:10" pos:end="83:29"><name pos:start="83:10" pos:end="83:29">INPUT_EVENT_KIND_ABS</name></expr>:</case>

        <expr_stmt pos:start="85:9" pos:end="85:42"><expr pos:start="85:9" pos:end="85:41"><name pos:start="85:9" pos:end="85:18"><name pos:start="85:9" pos:end="85:13">event</name><operator pos:start="85:14" pos:end="85:14">.</operator><name pos:start="85:15" pos:end="85:18">type</name></name>  <operator pos:start="85:21" pos:end="85:21">=</operator> <call pos:start="85:23" pos:end="85:41"><name pos:start="85:23" pos:end="85:33">cpu_to_le16</name><argument_list pos:start="85:34" pos:end="85:41">(<argument pos:start="85:35" pos:end="85:40"><expr pos:start="85:35" pos:end="85:40"><name pos:start="85:35" pos:end="85:40">EV_ABS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:63"><expr pos:start="87:9" pos:end="87:62"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:13">event</name><operator pos:start="87:14" pos:end="87:14">.</operator><name pos:start="87:15" pos:end="87:18">code</name></name>  <operator pos:start="87:21" pos:end="87:21">=</operator> <call pos:start="87:23" pos:end="87:62"><name pos:start="87:23" pos:end="87:33">cpu_to_le16</name><argument_list pos:start="87:34" pos:end="87:62">(<argument pos:start="87:35" pos:end="87:61"><expr pos:start="87:35" pos:end="87:61"><name pos:start="87:35" pos:end="87:61"><name pos:start="87:35" pos:end="87:45">axismap_abs</name><index pos:start="87:46" pos:end="87:61">[<expr pos:start="87:47" pos:end="87:60"><name pos:start="87:47" pos:end="87:60"><name pos:start="87:47" pos:end="87:49">evt</name><operator pos:start="87:50" pos:end="87:51">-&gt;</operator><name pos:start="87:52" pos:end="87:54">abs</name><operator pos:start="87:55" pos:end="87:56">-&gt;</operator><name pos:start="87:57" pos:end="87:60">axis</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:51"><expr pos:start="89:9" pos:end="89:50"><name pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:13">event</name><operator pos:start="89:14" pos:end="89:14">.</operator><name pos:start="89:15" pos:end="89:19">value</name></name> <operator pos:start="89:21" pos:end="89:21">=</operator> <call pos:start="89:23" pos:end="89:50"><name pos:start="89:23" pos:end="89:33">cpu_to_le32</name><argument_list pos:start="89:34" pos:end="89:50">(<argument pos:start="89:35" pos:end="89:49"><expr pos:start="89:35" pos:end="89:49"><name pos:start="89:35" pos:end="89:49"><name pos:start="89:35" pos:end="89:37">evt</name><operator pos:start="89:38" pos:end="89:39">-&gt;</operator><name pos:start="89:40" pos:end="89:42">abs</name><operator pos:start="89:43" pos:end="89:44">-&gt;</operator><name pos:start="89:45" pos:end="89:49">value</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:42"><expr pos:start="91:9" pos:end="91:41"><call pos:start="91:9" pos:end="91:41"><name pos:start="91:9" pos:end="91:25">virtio_input_send</name><argument_list pos:start="91:26" pos:end="91:41">(<argument pos:start="91:27" pos:end="91:32"><expr pos:start="91:27" pos:end="91:32"><name pos:start="91:27" pos:end="91:32">vinput</name></expr></argument>, <argument pos:start="91:35" pos:end="91:40"><expr pos:start="91:35" pos:end="91:40"><operator pos:start="91:35" pos:end="91:35">&amp;</operator><name pos:start="91:36" pos:end="91:40">event</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="93:9" pos:end="93:14">break;</break>

    <default pos:start="95:5" pos:end="95:12">default:</default>

        <comment type="block" pos:start="97:9" pos:end="97:28">/* keep gcc happy */</comment>

        <break pos:start="99:9" pos:end="99:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
