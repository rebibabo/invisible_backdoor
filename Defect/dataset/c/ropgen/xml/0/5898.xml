<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5898.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:12"><name pos:start="1:1" pos:end="1:10">FWCfgState</name> <modifier pos:start="1:12" pos:end="1:12">*</modifier></type><name pos:start="1:13" pos:end="1:23">fw_cfg_init</name><parameter_list pos:start="1:24" pos:end="3:82">(<parameter pos:start="1:25" pos:end="1:41"><decl pos:start="1:25" pos:end="1:41"><type pos:start="1:25" pos:end="1:41"><name pos:start="1:25" pos:end="1:32">uint32_t</name></type> <name pos:start="1:34" pos:end="1:41">ctl_port</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:61"><name pos:start="1:44" pos:end="1:51">uint32_t</name></type> <name pos:start="1:53" pos:end="1:61">data_port</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:51"><decl pos:start="3:25" pos:end="3:51"><type pos:start="3:25" pos:end="3:51"><name pos:start="3:25" pos:end="3:42">target_phys_addr_t</name></type> <name pos:start="3:44" pos:end="3:51">ctl_addr</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:81"><decl pos:start="3:54" pos:end="3:81"><type pos:start="3:54" pos:end="3:81"><name pos:start="3:54" pos:end="3:71">target_phys_addr_t</name></type> <name pos:start="3:73" pos:end="3:81">data_addr</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="69:1">{<block_content pos:start="7:5" pos:end="67:13">

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">DeviceState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:19"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">SysBusDevice</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:19">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">FWCfgState</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:17">s</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:38"><expr pos:start="15:5" pos:end="15:37"><name pos:start="15:5" pos:end="15:7">dev</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:37"><name pos:start="15:11" pos:end="15:21">qdev_create</name><argument_list pos:start="15:22" pos:end="15:37">(<argument pos:start="15:23" pos:end="15:26"><expr pos:start="15:23" pos:end="15:26"><name pos:start="15:23" pos:end="15:26">NULL</name></expr></argument>, <argument pos:start="15:29" pos:end="15:36"><expr pos:start="15:29" pos:end="15:36"><literal type="string" pos:start="15:29" pos:end="15:36">"fw_cfg"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><call pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:24">qdev_prop_set_uint32</name><argument_list pos:start="17:25" pos:end="17:53">(<argument pos:start="17:26" pos:end="17:28"><expr pos:start="17:26" pos:end="17:28"><name pos:start="17:26" pos:end="17:28">dev</name></expr></argument>, <argument pos:start="17:31" pos:end="17:42"><expr pos:start="17:31" pos:end="17:42"><literal type="string" pos:start="17:31" pos:end="17:42">"ctl_iobase"</literal></expr></argument>, <argument pos:start="17:45" pos:end="17:52"><expr pos:start="17:45" pos:end="17:52"><name pos:start="17:45" pos:end="17:52">ctl_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:56"><expr pos:start="19:5" pos:end="19:55"><call pos:start="19:5" pos:end="19:55"><name pos:start="19:5" pos:end="19:24">qdev_prop_set_uint32</name><argument_list pos:start="19:25" pos:end="19:55">(<argument pos:start="19:26" pos:end="19:28"><expr pos:start="19:26" pos:end="19:28"><name pos:start="19:26" pos:end="19:28">dev</name></expr></argument>, <argument pos:start="19:31" pos:end="19:43"><expr pos:start="19:31" pos:end="19:43"><literal type="string" pos:start="19:31" pos:end="19:43">"data_iobase"</literal></expr></argument>, <argument pos:start="19:46" pos:end="19:54"><expr pos:start="19:46" pos:end="19:54"><name pos:start="19:46" pos:end="19:54">data_port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:26"><expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:20">qdev_init_nofail</name><argument_list pos:start="21:21" pos:end="21:25">(<argument pos:start="21:22" pos:end="21:24"><expr pos:start="21:22" pos:end="21:24"><name pos:start="21:22" pos:end="21:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:30"><expr pos:start="23:5" pos:end="23:29"><name pos:start="23:5" pos:end="23:5">d</name> <operator pos:start="23:7" pos:end="23:7">=</operator> <call pos:start="23:9" pos:end="23:29"><name pos:start="23:9" pos:end="23:24">sysbus_from_qdev</name><argument_list pos:start="23:25" pos:end="23:29">(<argument pos:start="23:26" pos:end="23:28"><expr pos:start="23:26" pos:end="23:28"><name pos:start="23:26" pos:end="23:28">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:48"><expr pos:start="27:5" pos:end="27:47"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:47"><name pos:start="27:9" pos:end="27:17">DO_UPCAST</name><argument_list pos:start="27:18" pos:end="27:47">(<argument pos:start="27:19" pos:end="27:28"><expr pos:start="27:19" pos:end="27:28"><name pos:start="27:19" pos:end="27:28">FWCfgState</name></expr></argument>, <argument pos:start="27:31" pos:end="27:41"><expr pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:41"><name pos:start="27:31" pos:end="27:36">busdev</name><operator pos:start="27:37" pos:end="27:37">.</operator><name pos:start="27:38" pos:end="27:41">qdev</name></name></expr></argument>, <argument pos:start="27:44" pos:end="27:46"><expr pos:start="27:44" pos:end="27:46"><name pos:start="27:44" pos:end="27:46">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:17">(<expr pos:start="31:9" pos:end="31:16"><name pos:start="31:9" pos:end="31:16">ctl_addr</name></expr>)</condition> <block pos:start="31:19" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:40">

        <expr_stmt pos:start="33:9" pos:end="33:40"><expr pos:start="33:9" pos:end="33:39"><call pos:start="33:9" pos:end="33:39"><name pos:start="33:9" pos:end="33:23">sysbus_mmio_map</name><argument_list pos:start="33:24" pos:end="33:39">(<argument pos:start="33:25" pos:end="33:25"><expr pos:start="33:25" pos:end="33:25"><name pos:start="33:25" pos:end="33:25">d</name></expr></argument>, <argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr></argument>, <argument pos:start="33:31" pos:end="33:38"><expr pos:start="33:31" pos:end="33:38"><name pos:start="33:31" pos:end="33:38">ctl_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:18">(<expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:17">data_addr</name></expr>)</condition> <block pos:start="37:20" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:41">

        <expr_stmt pos:start="39:9" pos:end="39:41"><expr pos:start="39:9" pos:end="39:40"><call pos:start="39:9" pos:end="39:40"><name pos:start="39:9" pos:end="39:23">sysbus_mmio_map</name><argument_list pos:start="39:24" pos:end="39:40">(<argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">d</name></expr></argument>, <argument pos:start="39:28" pos:end="39:28"><expr pos:start="39:28" pos:end="39:28"><literal type="number" pos:start="39:28" pos:end="39:28">1</literal></expr></argument>, <argument pos:start="39:31" pos:end="39:39"><expr pos:start="39:31" pos:end="39:39"><name pos:start="39:31" pos:end="39:39">data_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:64"><expr pos:start="43:5" pos:end="43:63"><call pos:start="43:5" pos:end="43:63"><name pos:start="43:5" pos:end="43:20">fw_cfg_add_bytes</name><argument_list pos:start="43:21" pos:end="43:63">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">s</name></expr></argument>, <argument pos:start="43:25" pos:end="43:40"><expr pos:start="43:25" pos:end="43:40"><name pos:start="43:25" pos:end="43:40">FW_CFG_SIGNATURE</name></expr></argument>, <argument pos:start="43:43" pos:end="43:59"><expr pos:start="43:43" pos:end="43:59"><operator pos:start="43:43" pos:end="43:43">(</operator><name pos:start="43:44" pos:end="43:50">uint8_t</name> <operator pos:start="43:52" pos:end="43:52">*</operator><operator pos:start="43:53" pos:end="43:53">)</operator><literal type="string" pos:start="43:54" pos:end="43:59">"QEMU"</literal></expr></argument>, <argument pos:start="43:62" pos:end="43:62"><expr pos:start="43:62" pos:end="43:62"><literal type="number" pos:start="43:62" pos:end="43:62">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:52"><expr pos:start="45:5" pos:end="45:51"><call pos:start="45:5" pos:end="45:51"><name pos:start="45:5" pos:end="45:20">fw_cfg_add_bytes</name><argument_list pos:start="45:21" pos:end="45:51">(<argument pos:start="45:22" pos:end="45:22"><expr pos:start="45:22" pos:end="45:22"><name pos:start="45:22" pos:end="45:22">s</name></expr></argument>, <argument pos:start="45:25" pos:end="45:35"><expr pos:start="45:25" pos:end="45:35"><name pos:start="45:25" pos:end="45:35">FW_CFG_UUID</name></expr></argument>, <argument pos:start="45:38" pos:end="45:46"><expr pos:start="45:38" pos:end="45:46"><name pos:start="45:38" pos:end="45:46">qemu_uuid</name></expr></argument>, <argument pos:start="45:49" pos:end="45:50"><expr pos:start="45:49" pos:end="45:50"><literal type="number" pos:start="45:49" pos:end="45:50">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:82"><expr pos:start="47:5" pos:end="47:81"><call pos:start="47:5" pos:end="47:81"><name pos:start="47:5" pos:end="47:18">fw_cfg_add_i16</name><argument_list pos:start="47:19" pos:end="47:81">(<argument pos:start="47:20" pos:end="47:20"><expr pos:start="47:20" pos:end="47:20"><name pos:start="47:20" pos:end="47:20">s</name></expr></argument>, <argument pos:start="47:23" pos:end="47:38"><expr pos:start="47:23" pos:end="47:38"><name pos:start="47:23" pos:end="47:38">FW_CFG_NOGRAPHIC</name></expr></argument>, <argument pos:start="47:41" pos:end="47:80"><expr pos:start="47:41" pos:end="47:80"><operator pos:start="47:41" pos:end="47:41">(</operator><name pos:start="47:42" pos:end="47:49">uint16_t</name><operator pos:start="47:50" pos:end="47:50">)</operator><operator pos:start="47:51" pos:end="47:51">(</operator><name pos:start="47:52" pos:end="47:63">display_type</name> <operator pos:start="47:65" pos:end="47:66">==</operator> <name pos:start="47:68" pos:end="47:79">DT_NOGRAPHIC</name><operator pos:start="47:80" pos:end="47:80">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:58"><expr pos:start="49:5" pos:end="49:57"><call pos:start="49:5" pos:end="49:57"><name pos:start="49:5" pos:end="49:18">fw_cfg_add_i16</name><argument_list pos:start="49:19" pos:end="49:57">(<argument pos:start="49:20" pos:end="49:20"><expr pos:start="49:20" pos:end="49:20"><name pos:start="49:20" pos:end="49:20">s</name></expr></argument>, <argument pos:start="49:23" pos:end="49:36"><expr pos:start="49:23" pos:end="49:36"><name pos:start="49:23" pos:end="49:36">FW_CFG_NB_CPUS</name></expr></argument>, <argument pos:start="49:39" pos:end="49:56"><expr pos:start="49:39" pos:end="49:56"><operator pos:start="49:39" pos:end="49:39">(</operator><name pos:start="49:40" pos:end="49:47">uint16_t</name><operator pos:start="49:48" pos:end="49:48">)</operator><name pos:start="49:49" pos:end="49:56">smp_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:59"><expr pos:start="51:5" pos:end="51:58"><call pos:start="51:5" pos:end="51:58"><name pos:start="51:5" pos:end="51:18">fw_cfg_add_i16</name><argument_list pos:start="51:19" pos:end="51:58">(<argument pos:start="51:20" pos:end="51:20"><expr pos:start="51:20" pos:end="51:20"><name pos:start="51:20" pos:end="51:20">s</name></expr></argument>, <argument pos:start="51:23" pos:end="51:37"><expr pos:start="51:23" pos:end="51:37"><name pos:start="51:23" pos:end="51:37">FW_CFG_MAX_CPUS</name></expr></argument>, <argument pos:start="51:40" pos:end="51:57"><expr pos:start="51:40" pos:end="51:57"><operator pos:start="51:40" pos:end="51:40">(</operator><name pos:start="51:41" pos:end="51:48">uint16_t</name><operator pos:start="51:49" pos:end="51:49">)</operator><name pos:start="51:50" pos:end="51:57">max_cpus</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:61"><expr pos:start="53:5" pos:end="53:60"><call pos:start="53:5" pos:end="53:60"><name pos:start="53:5" pos:end="53:18">fw_cfg_add_i16</name><argument_list pos:start="53:19" pos:end="53:60">(<argument pos:start="53:20" pos:end="53:20"><expr pos:start="53:20" pos:end="53:20"><name pos:start="53:20" pos:end="53:20">s</name></expr></argument>, <argument pos:start="53:23" pos:end="53:38"><expr pos:start="53:23" pos:end="53:38"><name pos:start="53:23" pos:end="53:38">FW_CFG_BOOT_MENU</name></expr></argument>, <argument pos:start="53:41" pos:end="53:59"><expr pos:start="53:41" pos:end="53:59"><operator pos:start="53:41" pos:end="53:41">(</operator><name pos:start="53:42" pos:end="53:49">uint16_t</name><operator pos:start="53:50" pos:end="53:50">)</operator><name pos:start="53:51" pos:end="53:59">boot_menu</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:25"><expr pos:start="55:5" pos:end="55:24"><call pos:start="55:5" pos:end="55:24"><name pos:start="55:5" pos:end="55:21">fw_cfg_bootsplash</name><argument_list pos:start="55:22" pos:end="55:24">(<argument pos:start="55:23" pos:end="55:23"><expr pos:start="55:23" pos:end="55:23"><name pos:start="55:23" pos:end="55:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:21"><expr pos:start="57:5" pos:end="57:20"><call pos:start="57:5" pos:end="57:20"><name pos:start="57:5" pos:end="57:17">fw_cfg_reboot</name><argument_list pos:start="57:18" pos:end="57:20">(<argument pos:start="57:19" pos:end="57:19"><expr pos:start="57:19" pos:end="57:19"><name pos:start="57:19" pos:end="57:19">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:51"><expr pos:start="61:5" pos:end="61:50"><name pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:20">machine_ready</name><operator pos:start="61:21" pos:end="61:21">.</operator><name pos:start="61:22" pos:end="61:27">notify</name></name> <operator pos:start="61:29" pos:end="61:29">=</operator> <name pos:start="61:31" pos:end="61:50">fw_cfg_machine_ready</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:59"><expr pos:start="63:5" pos:end="63:58"><call pos:start="63:5" pos:end="63:58"><name pos:start="63:5" pos:end="63:39">qemu_add_machine_init_done_notifier</name><argument_list pos:start="63:40" pos:end="63:58">(<argument pos:start="63:41" pos:end="63:57"><expr pos:start="63:41" pos:end="63:57"><operator pos:start="63:41" pos:end="63:41">&amp;</operator><name pos:start="63:42" pos:end="63:57"><name pos:start="63:42" pos:end="63:42">s</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:57">machine_ready</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><name pos:start="67:12" pos:end="67:12">s</name></expr>;</return>

</block_content>}</block></function>
</unit>
