<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21615.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">bool</name></type> <name pos:start="1:13" pos:end="1:25">get_phys_addr</name><parameter_list pos:start="1:26" pos:end="9:46">(<parameter pos:start="1:27" pos:end="1:42"><decl pos:start="1:27" pos:end="1:42"><type pos:start="1:27" pos:end="1:42"><name pos:start="1:27" pos:end="1:37">CPUARMState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:64"><decl pos:start="1:45" pos:end="1:64"><type pos:start="1:45" pos:end="1:64"><name pos:start="1:45" pos:end="1:56">target_ulong</name></type> <name pos:start="1:58" pos:end="1:64">address</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:51"><decl pos:start="3:27" pos:end="3:51"><type pos:start="3:27" pos:end="3:51"><name pos:start="3:27" pos:end="3:39">MMUAccessType</name></type> <name pos:start="3:41" pos:end="3:51">access_type</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:70"><decl pos:start="3:54" pos:end="3:70"><type pos:start="3:54" pos:end="3:70"><name pos:start="3:54" pos:end="3:62">ARMMMUIdx</name></type> <name pos:start="3:64" pos:end="3:70">mmu_idx</name></decl></parameter>,

                          <parameter pos:start="5:27" pos:end="5:42"><decl pos:start="5:27" pos:end="5:42"><type pos:start="5:27" pos:end="5:42"><name pos:start="5:27" pos:end="5:32">hwaddr</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:42">phys_ptr</name></decl></parameter>, <parameter pos:start="5:45" pos:end="5:61"><decl pos:start="5:45" pos:end="5:61"><type pos:start="5:45" pos:end="5:61"><name pos:start="5:45" pos:end="5:54">MemTxAttrs</name> <modifier pos:start="5:56" pos:end="5:56">*</modifier></type><name pos:start="5:57" pos:end="5:61">attrs</name></decl></parameter>, <parameter pos:start="5:64" pos:end="5:72"><decl pos:start="5:64" pos:end="5:72"><type pos:start="5:64" pos:end="5:72"><name pos:start="5:64" pos:end="5:66">int</name> <modifier pos:start="5:68" pos:end="5:68">*</modifier></type><name pos:start="5:69" pos:end="5:72">prot</name></decl></parameter>,

                          <parameter pos:start="7:27" pos:end="7:49"><decl pos:start="7:27" pos:end="7:49"><type pos:start="7:27" pos:end="7:49"><name pos:start="7:27" pos:end="7:38">target_ulong</name> <modifier pos:start="7:40" pos:end="7:40">*</modifier></type><name pos:start="7:41" pos:end="7:49">page_size</name></decl></parameter>, <parameter pos:start="7:52" pos:end="7:64"><decl pos:start="7:52" pos:end="7:64"><type pos:start="7:52" pos:end="7:64"><name pos:start="7:52" pos:end="7:59">uint32_t</name> <modifier pos:start="7:61" pos:end="7:61">*</modifier></type><name pos:start="7:62" pos:end="7:64">fsr</name></decl></parameter>,

                          <parameter pos:start="9:27" pos:end="9:45"><decl pos:start="9:27" pos:end="9:45"><type pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:41">ARMMMUFaultInfo</name> <modifier pos:start="9:43" pos:end="9:43">*</modifier></type><name pos:start="9:44" pos:end="9:45">fi</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="221:1">{<block_content pos:start="13:5" pos:end="219:5">

    <if_stmt pos:start="13:5" pos:end="79:5"><if pos:start="13:5" pos:end="79:5">if <condition pos:start="13:8" pos:end="13:69">(<expr pos:start="13:9" pos:end="13:68"><name pos:start="13:9" pos:end="13:15">mmu_idx</name> <operator pos:start="13:17" pos:end="13:18">==</operator> <name pos:start="13:20" pos:end="13:36">ARMMMUIdx_S12NSE0</name> <operator pos:start="13:38" pos:end="13:39">||</operator> <name pos:start="13:41" pos:end="13:47">mmu_idx</name> <operator pos:start="13:49" pos:end="13:50">==</operator> <name pos:start="13:52" pos:end="13:68">ARMMMUIdx_S12NSE1</name></expr>)</condition> <block pos:start="13:71" pos:end="79:5">{<block_content pos:start="21:9" pos:end="77:9">

        <comment type="block" pos:start="15:9" pos:end="19:11">/* Call ourselves recursively to do the stage 1 and then stage 2

         * translations.

         */</comment>

        <if_stmt pos:start="21:9" pos:end="77:9"><if pos:start="21:9" pos:end="67:9">if <condition pos:start="21:12" pos:end="21:46">(<expr pos:start="21:13" pos:end="21:45"><call pos:start="21:13" pos:end="21:45"><name pos:start="21:13" pos:end="21:23">arm_feature</name><argument_list pos:start="21:24" pos:end="21:45">(<argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">env</name></expr></argument>, <argument pos:start="21:30" pos:end="21:44"><expr pos:start="21:30" pos:end="21:44"><name pos:start="21:30" pos:end="21:44">ARM_FEATURE_EL2</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="21:48" pos:end="67:9">{<block_content pos:start="23:13" pos:end="65:23">

            <decl_stmt pos:start="23:13" pos:end="23:23"><decl pos:start="23:13" pos:end="23:22"><type pos:start="23:13" pos:end="23:18"><name pos:start="23:13" pos:end="23:18">hwaddr</name></type> <name pos:start="23:20" pos:end="23:22">ipa</name></decl>;</decl_stmt>

            <decl_stmt pos:start="25:13" pos:end="25:24"><decl pos:start="25:13" pos:end="25:23"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:23">s2_prot</name></decl>;</decl_stmt>

            <decl_stmt pos:start="27:13" pos:end="27:20"><decl pos:start="27:13" pos:end="27:19"><type pos:start="27:13" pos:end="27:15"><name pos:start="27:13" pos:end="27:15">int</name></type> <name pos:start="27:17" pos:end="27:19">ret</name></decl>;</decl_stmt>



            <expr_stmt pos:start="31:13" pos:end="35:58"><expr pos:start="31:13" pos:end="35:57"><name pos:start="31:13" pos:end="31:15">ret</name> <operator pos:start="31:17" pos:end="31:17">=</operator> <call pos:start="31:19" pos:end="35:57"><name pos:start="31:19" pos:end="31:31">get_phys_addr</name><argument_list pos:start="31:32" pos:end="35:57">(<argument pos:start="31:33" pos:end="31:35"><expr pos:start="31:33" pos:end="31:35"><name pos:start="31:33" pos:end="31:35">env</name></expr></argument>, <argument pos:start="31:38" pos:end="31:44"><expr pos:start="31:38" pos:end="31:44"><name pos:start="31:38" pos:end="31:44">address</name></expr></argument>, <argument pos:start="31:47" pos:end="31:57"><expr pos:start="31:47" pos:end="31:57"><name pos:start="31:47" pos:end="31:57">access_type</name></expr></argument>,

                                <argument pos:start="33:33" pos:end="33:56"><expr pos:start="33:33" pos:end="33:56"><call pos:start="33:33" pos:end="33:56"><name pos:start="33:33" pos:end="33:47">stage_1_mmu_idx</name><argument_list pos:start="33:48" pos:end="33:56">(<argument pos:start="33:49" pos:end="33:55"><expr pos:start="33:49" pos:end="33:55"><name pos:start="33:49" pos:end="33:55">mmu_idx</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:59" pos:end="33:62"><expr pos:start="33:59" pos:end="33:62"><operator pos:start="33:59" pos:end="33:59">&amp;</operator><name pos:start="33:60" pos:end="33:62">ipa</name></expr></argument>, <argument pos:start="33:65" pos:end="33:69"><expr pos:start="33:65" pos:end="33:69"><name pos:start="33:65" pos:end="33:69">attrs</name></expr></argument>,

                                <argument pos:start="35:33" pos:end="35:36"><expr pos:start="35:33" pos:end="35:36"><name pos:start="35:33" pos:end="35:36">prot</name></expr></argument>, <argument pos:start="35:39" pos:end="35:47"><expr pos:start="35:39" pos:end="35:47"><name pos:start="35:39" pos:end="35:47">page_size</name></expr></argument>, <argument pos:start="35:50" pos:end="35:52"><expr pos:start="35:50" pos:end="35:52"><name pos:start="35:50" pos:end="35:52">fsr</name></expr></argument>, <argument pos:start="35:55" pos:end="35:56"><expr pos:start="35:55" pos:end="35:56"><name pos:start="35:55" pos:end="35:56">fi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="39:13" pos:end="39:63">/* If S1 fails or S2 is disabled, return early.  */</comment>

            <if_stmt pos:start="41:13" pos:end="47:13"><if pos:start="41:13" pos:end="47:13">if <condition pos:start="41:16" pos:end="41:72">(<expr pos:start="41:17" pos:end="41:71"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:22">||</operator> <call pos:start="41:24" pos:end="41:71"><name pos:start="41:24" pos:end="41:50">regime_translation_disabled</name><argument_list pos:start="41:51" pos:end="41:71">(<argument pos:start="41:52" pos:end="41:54"><expr pos:start="41:52" pos:end="41:54"><name pos:start="41:52" pos:end="41:54">env</name></expr></argument>, <argument pos:start="41:57" pos:end="41:70"><expr pos:start="41:57" pos:end="41:70"><name pos:start="41:57" pos:end="41:70">ARMMMUIdx_S2NS</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="41:74" pos:end="47:13">{<block_content pos:start="43:17" pos:end="45:27">

                <expr_stmt pos:start="43:17" pos:end="43:32"><expr pos:start="43:17" pos:end="43:31"><operator pos:start="43:17" pos:end="43:17">*</operator><name pos:start="43:18" pos:end="43:25">phys_ptr</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <name pos:start="43:29" pos:end="43:31">ipa</name></expr>;</expr_stmt>

                <return pos:start="45:17" pos:end="45:27">return <expr pos:start="45:24" pos:end="45:26"><name pos:start="45:24" pos:end="45:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="51:13" pos:end="51:53">/* S1 is done. Now do S2 translation.  */</comment>

            <expr_stmt pos:start="53:13" pos:end="57:57"><expr pos:start="53:13" pos:end="57:56"><name pos:start="53:13" pos:end="53:15">ret</name> <operator pos:start="53:17" pos:end="53:17">=</operator> <call pos:start="53:19" pos:end="57:56"><name pos:start="53:19" pos:end="53:36">get_phys_addr_lpae</name><argument_list pos:start="53:37" pos:end="57:56">(<argument pos:start="53:38" pos:end="53:40"><expr pos:start="53:38" pos:end="53:40"><name pos:start="53:38" pos:end="53:40">env</name></expr></argument>, <argument pos:start="53:43" pos:end="53:45"><expr pos:start="53:43" pos:end="53:45"><name pos:start="53:43" pos:end="53:45">ipa</name></expr></argument>, <argument pos:start="53:48" pos:end="53:58"><expr pos:start="53:48" pos:end="53:58"><name pos:start="53:48" pos:end="53:58">access_type</name></expr></argument>, <argument pos:start="53:61" pos:end="53:74"><expr pos:start="53:61" pos:end="53:74"><name pos:start="53:61" pos:end="53:74">ARMMMUIdx_S2NS</name></expr></argument>,

                                     <argument pos:start="55:38" pos:end="55:45"><expr pos:start="55:38" pos:end="55:45"><name pos:start="55:38" pos:end="55:45">phys_ptr</name></expr></argument>, <argument pos:start="55:48" pos:end="55:52"><expr pos:start="55:48" pos:end="55:52"><name pos:start="55:48" pos:end="55:52">attrs</name></expr></argument>, <argument pos:start="55:55" pos:end="55:62"><expr pos:start="55:55" pos:end="55:62"><operator pos:start="55:55" pos:end="55:55">&amp;</operator><name pos:start="55:56" pos:end="55:62">s2_prot</name></expr></argument>,

                                     <argument pos:start="57:38" pos:end="57:46"><expr pos:start="57:38" pos:end="57:46"><name pos:start="57:38" pos:end="57:46">page_size</name></expr></argument>, <argument pos:start="57:49" pos:end="57:51"><expr pos:start="57:49" pos:end="57:51"><name pos:start="57:49" pos:end="57:51">fsr</name></expr></argument>, <argument pos:start="57:54" pos:end="57:55"><expr pos:start="57:54" pos:end="57:55"><name pos:start="57:54" pos:end="57:55">fi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:29"><expr pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:22"><name pos:start="59:13" pos:end="59:14">fi</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:22">s2addr</name></name> <operator pos:start="59:24" pos:end="59:24">=</operator> <name pos:start="59:26" pos:end="59:28">ipa</name></expr>;</expr_stmt>

            <comment type="block" pos:start="61:13" pos:end="61:47">/* Combine the S1 and S2 perms.  */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:29"><expr pos:start="63:13" pos:end="63:28"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:17">prot</name> <operator pos:start="63:19" pos:end="63:20">&amp;=</operator> <name pos:start="63:22" pos:end="63:28">s2_prot</name></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:23">return <expr pos:start="65:20" pos:end="65:22"><name pos:start="65:20" pos:end="65:22">ret</name></expr>;</return>

        </block_content>}</block></if> <else pos:start="67:11" pos:end="77:9">else <block pos:start="67:16" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:47">

            <comment type="block" pos:start="69:13" pos:end="73:15">/*

             * For non-EL2 CPUs a stage1+stage2 translation is just stage 1.

             */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:47"><expr pos:start="75:13" pos:end="75:46"><name pos:start="75:13" pos:end="75:19">mmu_idx</name> <operator pos:start="75:21" pos:end="75:21">=</operator> <call pos:start="75:23" pos:end="75:46"><name pos:start="75:23" pos:end="75:37">stage_1_mmu_idx</name><argument_list pos:start="75:38" pos:end="75:46">(<argument pos:start="75:39" pos:end="75:45"><expr pos:start="75:39" pos:end="75:45"><name pos:start="75:39" pos:end="75:45">mmu_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="83:5" pos:end="89:7">/* The page table entries may downgrade secure to non-secure, but

     * cannot upgrade an non-secure translation regime's attributes

     * to secure.

     */</comment>

    <expr_stmt pos:start="91:5" pos:end="91:51"><expr pos:start="91:5" pos:end="91:50"><name pos:start="91:5" pos:end="91:17"><name pos:start="91:5" pos:end="91:9">attrs</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:17">secure</name></name> <operator pos:start="91:19" pos:end="91:19">=</operator> <call pos:start="91:21" pos:end="91:50"><name pos:start="91:21" pos:end="91:36">regime_is_secure</name><argument_list pos:start="91:37" pos:end="91:50">(<argument pos:start="91:38" pos:end="91:40"><expr pos:start="91:38" pos:end="91:40"><name pos:start="91:38" pos:end="91:40">env</name></expr></argument>, <argument pos:start="91:43" pos:end="91:49"><expr pos:start="91:43" pos:end="91:49"><name pos:start="91:43" pos:end="91:49">mmu_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:47"><expr pos:start="93:5" pos:end="93:46"><name pos:start="93:5" pos:end="93:15"><name pos:start="93:5" pos:end="93:9">attrs</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">user</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <call pos:start="93:19" pos:end="93:46"><name pos:start="93:19" pos:end="93:32">regime_is_user</name><argument_list pos:start="93:33" pos:end="93:46">(<argument pos:start="93:34" pos:end="93:36"><expr pos:start="93:34" pos:end="93:36"><name pos:start="93:34" pos:end="93:36">env</name></expr></argument>, <argument pos:start="93:39" pos:end="93:45"><expr pos:start="93:39" pos:end="93:45"><name pos:start="93:39" pos:end="93:45">mmu_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="101:7">/* Fast Context Switch Extension. This doesn't exist at all in v8.

     * In v7 and earlier it affects all stage 1 translations.

     */</comment>

    <if_stmt pos:start="103:5" pos:end="117:5"><if pos:start="103:5" pos:end="117:5">if <condition pos:start="103:8" pos:end="105:45">(<expr pos:start="103:9" pos:end="105:44"><name pos:start="103:9" pos:end="103:15">address</name> <operator pos:start="103:17" pos:end="103:17">&lt;</operator> <literal type="number" pos:start="103:19" pos:end="103:28">0x02000000</literal> <operator pos:start="103:30" pos:end="103:31">&amp;&amp;</operator> <name pos:start="103:33" pos:end="103:39">mmu_idx</name> <operator pos:start="103:41" pos:end="103:42">!=</operator> <name pos:start="103:44" pos:end="103:57">ARMMMUIdx_S2NS</name>

        <operator pos:start="105:9" pos:end="105:10">&amp;&amp;</operator> <operator pos:start="105:12" pos:end="105:12">!</operator><call pos:start="105:13" pos:end="105:44"><name pos:start="105:13" pos:end="105:23">arm_feature</name><argument_list pos:start="105:24" pos:end="105:44">(<argument pos:start="105:25" pos:end="105:27"><expr pos:start="105:25" pos:end="105:27"><name pos:start="105:25" pos:end="105:27">env</name></expr></argument>, <argument pos:start="105:30" pos:end="105:43"><expr pos:start="105:30" pos:end="105:43"><name pos:start="105:30" pos:end="105:43">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="105:47" pos:end="117:5">{<block_content pos:start="107:9" pos:end="115:9">

        <if_stmt pos:start="107:9" pos:end="115:9"><if pos:start="107:9" pos:end="111:9">if <condition pos:start="107:12" pos:end="107:41">(<expr pos:start="107:13" pos:end="107:40"><call pos:start="107:13" pos:end="107:35"><name pos:start="107:13" pos:end="107:21">regime_el</name><argument_list pos:start="107:22" pos:end="107:35">(<argument pos:start="107:23" pos:end="107:25"><expr pos:start="107:23" pos:end="107:25"><name pos:start="107:23" pos:end="107:25">env</name></expr></argument>, <argument pos:start="107:28" pos:end="107:34"><expr pos:start="107:28" pos:end="107:34"><name pos:start="107:28" pos:end="107:34">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="107:37" pos:end="107:38">==</operator> <literal type="number" pos:start="107:40" pos:end="107:40">3</literal></expr>)</condition> <block pos:start="107:43" pos:end="111:9">{<block_content pos:start="109:13" pos:end="109:43">

            <expr_stmt pos:start="109:13" pos:end="109:43"><expr pos:start="109:13" pos:end="109:42"><name pos:start="109:13" pos:end="109:19">address</name> <operator pos:start="109:21" pos:end="109:22">+=</operator> <name pos:start="109:24" pos:end="109:42"><name pos:start="109:24" pos:end="109:26">env</name><operator pos:start="109:27" pos:end="109:28">-&gt;</operator><name pos:start="109:29" pos:end="109:32">cp15</name><operator pos:start="109:33" pos:end="109:33">.</operator><name pos:start="109:34" pos:end="109:42">fcseidr_s</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="111:11" pos:end="115:9">else <block pos:start="111:16" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:44">

            <expr_stmt pos:start="113:13" pos:end="113:44"><expr pos:start="113:13" pos:end="113:43"><name pos:start="113:13" pos:end="113:19">address</name> <operator pos:start="113:21" pos:end="113:22">+=</operator> <name pos:start="113:24" pos:end="113:43"><name pos:start="113:24" pos:end="113:26">env</name><operator pos:start="113:27" pos:end="113:28">-&gt;</operator><name pos:start="113:29" pos:end="113:32">cp15</name><operator pos:start="113:33" pos:end="113:33">.</operator><name pos:start="113:34" pos:end="113:43">fcseidr_ns</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="121:5" pos:end="177:5"><if pos:start="121:5" pos:end="177:5">if <condition pos:start="121:8" pos:end="121:43">(<expr pos:start="121:9" pos:end="121:42"><call pos:start="121:9" pos:end="121:42"><name pos:start="121:9" pos:end="121:19">arm_feature</name><argument_list pos:start="121:20" pos:end="121:42">(<argument pos:start="121:21" pos:end="121:23"><expr pos:start="121:21" pos:end="121:23"><name pos:start="121:21" pos:end="121:23">env</name></expr></argument>, <argument pos:start="121:26" pos:end="121:41"><expr pos:start="121:26" pos:end="121:41"><name pos:start="121:26" pos:end="121:41">ARM_FEATURE_PMSA</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="121:45" pos:end="177:5">{<block_content pos:start="123:9" pos:end="175:19">

        <decl_stmt pos:start="123:9" pos:end="123:17"><decl pos:start="123:9" pos:end="123:16"><type pos:start="123:9" pos:end="123:12"><name pos:start="123:9" pos:end="123:12">bool</name></type> <name pos:start="123:14" pos:end="123:16">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="125:9" pos:end="125:38"><expr pos:start="125:9" pos:end="125:37"><operator pos:start="125:9" pos:end="125:9">*</operator><name pos:start="125:10" pos:end="125:18">page_size</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <name pos:start="125:22" pos:end="125:37">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>



        <if_stmt pos:start="129:9" pos:end="153:9"><if pos:start="129:9" pos:end="137:9">if <condition pos:start="129:12" pos:end="129:45">(<expr pos:start="129:13" pos:end="129:44"><call pos:start="129:13" pos:end="129:44"><name pos:start="129:13" pos:end="129:23">arm_feature</name><argument_list pos:start="129:24" pos:end="129:44">(<argument pos:start="129:25" pos:end="129:27"><expr pos:start="129:25" pos:end="129:27"><name pos:start="129:25" pos:end="129:27">env</name></expr></argument>, <argument pos:start="129:30" pos:end="129:43"><expr pos:start="129:30" pos:end="129:43"><name pos:start="129:30" pos:end="129:43">ARM_FEATURE_V8</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="129:47" pos:end="137:9">{<block_content pos:start="133:13" pos:end="135:60">

            <comment type="block" pos:start="131:13" pos:end="131:24">/* PMSAv8 */</comment>

            <expr_stmt pos:start="133:13" pos:end="135:60"><expr pos:start="133:13" pos:end="135:59"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:17">=</operator> <call pos:start="133:19" pos:end="135:59"><name pos:start="133:19" pos:end="133:38">get_phys_addr_pmsav8</name><argument_list pos:start="133:39" pos:end="135:59">(<argument pos:start="133:40" pos:end="133:42"><expr pos:start="133:40" pos:end="133:42"><name pos:start="133:40" pos:end="133:42">env</name></expr></argument>, <argument pos:start="133:45" pos:end="133:51"><expr pos:start="133:45" pos:end="133:51"><name pos:start="133:45" pos:end="133:51">address</name></expr></argument>, <argument pos:start="133:54" pos:end="133:64"><expr pos:start="133:54" pos:end="133:64"><name pos:start="133:54" pos:end="133:64">access_type</name></expr></argument>, <argument pos:start="133:67" pos:end="133:73"><expr pos:start="133:67" pos:end="133:73"><name pos:start="133:67" pos:end="133:73">mmu_idx</name></expr></argument>,

                                       <argument pos:start="135:40" pos:end="135:47"><expr pos:start="135:40" pos:end="135:47"><name pos:start="135:40" pos:end="135:47">phys_ptr</name></expr></argument>, <argument pos:start="135:50" pos:end="135:53"><expr pos:start="135:50" pos:end="135:53"><name pos:start="135:50" pos:end="135:53">prot</name></expr></argument>, <argument pos:start="135:56" pos:end="135:58"><expr pos:start="135:56" pos:end="135:58"><name pos:start="135:56" pos:end="135:58">fsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="137:11" pos:end="145:9">else if <condition pos:start="137:19" pos:end="137:52">(<expr pos:start="137:20" pos:end="137:51"><call pos:start="137:20" pos:end="137:51"><name pos:start="137:20" pos:end="137:30">arm_feature</name><argument_list pos:start="137:31" pos:end="137:51">(<argument pos:start="137:32" pos:end="137:34"><expr pos:start="137:32" pos:end="137:34"><name pos:start="137:32" pos:end="137:34">env</name></expr></argument>, <argument pos:start="137:37" pos:end="137:50"><expr pos:start="137:37" pos:end="137:50"><name pos:start="137:37" pos:end="137:50">ARM_FEATURE_V7</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:54" pos:end="145:9">{<block_content pos:start="141:13" pos:end="143:60">

            <comment type="block" pos:start="139:13" pos:end="139:24">/* PMSAv7 */</comment>

            <expr_stmt pos:start="141:13" pos:end="143:60"><expr pos:start="141:13" pos:end="143:59"><name pos:start="141:13" pos:end="141:15">ret</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="143:59"><name pos:start="141:19" pos:end="141:38">get_phys_addr_pmsav7</name><argument_list pos:start="141:39" pos:end="143:59">(<argument pos:start="141:40" pos:end="141:42"><expr pos:start="141:40" pos:end="141:42"><name pos:start="141:40" pos:end="141:42">env</name></expr></argument>, <argument pos:start="141:45" pos:end="141:51"><expr pos:start="141:45" pos:end="141:51"><name pos:start="141:45" pos:end="141:51">address</name></expr></argument>, <argument pos:start="141:54" pos:end="141:64"><expr pos:start="141:54" pos:end="141:64"><name pos:start="141:54" pos:end="141:64">access_type</name></expr></argument>, <argument pos:start="141:67" pos:end="141:73"><expr pos:start="141:67" pos:end="141:73"><name pos:start="141:67" pos:end="141:73">mmu_idx</name></expr></argument>,

                                       <argument pos:start="143:40" pos:end="143:47"><expr pos:start="143:40" pos:end="143:47"><name pos:start="143:40" pos:end="143:47">phys_ptr</name></expr></argument>, <argument pos:start="143:50" pos:end="143:53"><expr pos:start="143:50" pos:end="143:53"><name pos:start="143:50" pos:end="143:53">prot</name></expr></argument>, <argument pos:start="143:56" pos:end="143:58"><expr pos:start="143:56" pos:end="143:58"><name pos:start="143:56" pos:end="143:58">fsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="145:11" pos:end="153:9">else <block pos:start="145:16" pos:end="153:9">{<block_content pos:start="149:13" pos:end="151:60">

            <comment type="block" pos:start="147:13" pos:end="147:28">/* Pre-v7 MPU */</comment>

            <expr_stmt pos:start="149:13" pos:end="151:60"><expr pos:start="149:13" pos:end="151:59"><name pos:start="149:13" pos:end="149:15">ret</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <call pos:start="149:19" pos:end="151:59"><name pos:start="149:19" pos:end="149:38">get_phys_addr_pmsav5</name><argument_list pos:start="149:39" pos:end="151:59">(<argument pos:start="149:40" pos:end="149:42"><expr pos:start="149:40" pos:end="149:42"><name pos:start="149:40" pos:end="149:42">env</name></expr></argument>, <argument pos:start="149:45" pos:end="149:51"><expr pos:start="149:45" pos:end="149:51"><name pos:start="149:45" pos:end="149:51">address</name></expr></argument>, <argument pos:start="149:54" pos:end="149:64"><expr pos:start="149:54" pos:end="149:64"><name pos:start="149:54" pos:end="149:64">access_type</name></expr></argument>, <argument pos:start="149:67" pos:end="149:73"><expr pos:start="149:67" pos:end="149:73"><name pos:start="149:67" pos:end="149:73">mmu_idx</name></expr></argument>,

                                       <argument pos:start="151:40" pos:end="151:47"><expr pos:start="151:40" pos:end="151:47"><name pos:start="151:40" pos:end="151:47">phys_ptr</name></expr></argument>, <argument pos:start="151:50" pos:end="151:53"><expr pos:start="151:50" pos:end="151:53"><name pos:start="151:50" pos:end="151:53">prot</name></expr></argument>, <argument pos:start="151:56" pos:end="151:58"><expr pos:start="151:56" pos:end="151:58"><name pos:start="151:56" pos:end="151:58">fsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="155:9" pos:end="171:53"><expr pos:start="155:9" pos:end="171:52"><call pos:start="155:9" pos:end="171:52"><name pos:start="155:9" pos:end="155:21">qemu_log_mask</name><argument_list pos:start="155:22" pos:end="171:52">(<argument pos:start="155:23" pos:end="155:33"><expr pos:start="155:23" pos:end="155:33"><name pos:start="155:23" pos:end="155:33">CPU_LOG_MMU</name></expr></argument>, <argument pos:start="155:36" pos:end="157:57"><expr pos:start="155:36" pos:end="157:57"><literal type="string" pos:start="155:36" pos:end="155:68">"PMSA MPU lookup for %s at 0x%08"</literal> <name pos:start="155:70" pos:end="155:75">PRIx32</name>

                      <literal type="string" pos:start="157:23" pos:end="157:57">" mmu_idx %u -&gt; %s (prot %c%c%c)\n"</literal></expr></argument>,

                      <argument pos:start="159:23" pos:end="161:77"><expr pos:start="159:23" pos:end="161:77"><ternary pos:start="159:23" pos:end="161:77"><condition pos:start="159:23" pos:end="159:52"><expr pos:start="159:23" pos:end="159:50"><name pos:start="159:23" pos:end="159:33">access_type</name> <operator pos:start="159:35" pos:end="159:36">==</operator> <name pos:start="159:38" pos:end="159:50">MMU_DATA_LOAD</name></expr> ?</condition><then pos:start="159:54" pos:end="159:62"> <expr pos:start="159:54" pos:end="159:62"><literal type="string" pos:start="159:54" pos:end="159:62">"reading"</literal></expr> </then><else pos:start="159:64" pos:end="161:77">:

                      <expr pos:start="161:23" pos:end="161:77"><operator pos:start="161:23" pos:end="161:23">(</operator><ternary pos:start="161:24" pos:end="161:76"><condition pos:start="161:24" pos:end="161:54"><expr pos:start="161:24" pos:end="161:52"><name pos:start="161:24" pos:end="161:34">access_type</name> <operator pos:start="161:36" pos:end="161:37">==</operator> <name pos:start="161:39" pos:end="161:52">MMU_DATA_STORE</name></expr> ?</condition><then pos:start="161:56" pos:end="161:64"> <expr pos:start="161:56" pos:end="161:64"><literal type="string" pos:start="161:56" pos:end="161:64">"writing"</literal></expr> </then><else pos:start="161:66" pos:end="161:76">: <expr pos:start="161:68" pos:end="161:76"><literal type="string" pos:start="161:68" pos:end="161:76">"execute"</literal></expr></else></ternary><operator pos:start="161:77" pos:end="161:77">)</operator></expr></else></ternary></expr></argument>,

                      <argument pos:start="163:23" pos:end="163:39"><expr pos:start="163:23" pos:end="163:39"><operator pos:start="163:23" pos:end="163:23">(</operator><name pos:start="163:24" pos:end="163:31">uint32_t</name><operator pos:start="163:32" pos:end="163:32">)</operator><name pos:start="163:33" pos:end="163:39">address</name></expr></argument>, <argument pos:start="163:42" pos:end="163:48"><expr pos:start="163:42" pos:end="163:48"><name pos:start="163:42" pos:end="163:48">mmu_idx</name></expr></argument>,

                      <argument pos:start="165:23" pos:end="165:42"><expr pos:start="165:23" pos:end="165:42"><ternary pos:start="165:23" pos:end="165:42"><condition pos:start="165:23" pos:end="165:27"><expr pos:start="165:23" pos:end="165:25"><name pos:start="165:23" pos:end="165:25">ret</name></expr> ?</condition><then pos:start="165:29" pos:end="165:34"> <expr pos:start="165:29" pos:end="165:34"><literal type="string" pos:start="165:29" pos:end="165:34">"Miss"</literal></expr> </then><else pos:start="165:36" pos:end="165:42">: <expr pos:start="165:38" pos:end="165:42"><literal type="string" pos:start="165:38" pos:end="165:42">"Hit"</literal></expr></else></ternary></expr></argument>,

                      <argument pos:start="167:23" pos:end="167:51"><expr pos:start="167:23" pos:end="167:51"><ternary pos:start="167:23" pos:end="167:51"><condition pos:start="167:23" pos:end="167:41"><expr pos:start="167:23" pos:end="167:39"><operator pos:start="167:23" pos:end="167:23">*</operator><name pos:start="167:24" pos:end="167:27">prot</name> <operator pos:start="167:29" pos:end="167:29">&amp;</operator> <name pos:start="167:31" pos:end="167:39">PAGE_READ</name></expr> ?</condition><then pos:start="167:43" pos:end="167:45"> <expr pos:start="167:43" pos:end="167:45"><literal type="char" pos:start="167:43" pos:end="167:45">'r'</literal></expr> </then><else pos:start="167:47" pos:end="167:51">: <expr pos:start="167:49" pos:end="167:51"><literal type="char" pos:start="167:49" pos:end="167:51">'-'</literal></expr></else></ternary></expr></argument>,

                      <argument pos:start="169:23" pos:end="169:52"><expr pos:start="169:23" pos:end="169:52"><ternary pos:start="169:23" pos:end="169:52"><condition pos:start="169:23" pos:end="169:42"><expr pos:start="169:23" pos:end="169:40"><operator pos:start="169:23" pos:end="169:23">*</operator><name pos:start="169:24" pos:end="169:27">prot</name> <operator pos:start="169:29" pos:end="169:29">&amp;</operator> <name pos:start="169:31" pos:end="169:40">PAGE_WRITE</name></expr> ?</condition><then pos:start="169:44" pos:end="169:46"> <expr pos:start="169:44" pos:end="169:46"><literal type="char" pos:start="169:44" pos:end="169:46">'w'</literal></expr> </then><else pos:start="169:48" pos:end="169:52">: <expr pos:start="169:50" pos:end="169:52"><literal type="char" pos:start="169:50" pos:end="169:52">'-'</literal></expr></else></ternary></expr></argument>,

                      <argument pos:start="171:23" pos:end="171:51"><expr pos:start="171:23" pos:end="171:51"><ternary pos:start="171:23" pos:end="171:51"><condition pos:start="171:23" pos:end="171:41"><expr pos:start="171:23" pos:end="171:39"><operator pos:start="171:23" pos:end="171:23">*</operator><name pos:start="171:24" pos:end="171:27">prot</name> <operator pos:start="171:29" pos:end="171:29">&amp;</operator> <name pos:start="171:31" pos:end="171:39">PAGE_EXEC</name></expr> ?</condition><then pos:start="171:43" pos:end="171:45"> <expr pos:start="171:43" pos:end="171:45"><literal type="char" pos:start="171:43" pos:end="171:45">'x'</literal></expr> </then><else pos:start="171:47" pos:end="171:51">: <expr pos:start="171:49" pos:end="171:51"><literal type="char" pos:start="171:49" pos:end="171:51">'-'</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <return pos:start="175:9" pos:end="175:19">return <expr pos:start="175:16" pos:end="175:18"><name pos:start="175:16" pos:end="175:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="181:5" pos:end="181:43">/* Definitely a real MMU, not an MPU */</comment>



    <if_stmt pos:start="185:5" pos:end="197:5"><if pos:start="185:5" pos:end="197:5">if <condition pos:start="185:8" pos:end="185:50">(<expr pos:start="185:9" pos:end="185:49"><call pos:start="185:9" pos:end="185:49"><name pos:start="185:9" pos:end="185:35">regime_translation_disabled</name><argument_list pos:start="185:36" pos:end="185:49">(<argument pos:start="185:37" pos:end="185:39"><expr pos:start="185:37" pos:end="185:39"><name pos:start="185:37" pos:end="185:39">env</name></expr></argument>, <argument pos:start="185:42" pos:end="185:48"><expr pos:start="185:42" pos:end="185:48"><name pos:start="185:42" pos:end="185:48">mmu_idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="185:52" pos:end="197:5">{<block_content pos:start="189:9" pos:end="195:17">

        <comment type="block" pos:start="187:9" pos:end="187:27">/* MMU disabled. */</comment>

        <expr_stmt pos:start="189:9" pos:end="189:28"><expr pos:start="189:9" pos:end="189:27"><operator pos:start="189:9" pos:end="189:9">*</operator><name pos:start="189:10" pos:end="189:17">phys_ptr</name> <operator pos:start="189:19" pos:end="189:19">=</operator> <name pos:start="189:21" pos:end="189:27">address</name></expr>;</expr_stmt>

        <expr_stmt pos:start="191:9" pos:end="191:51"><expr pos:start="191:9" pos:end="191:50"><operator pos:start="191:9" pos:end="191:9">*</operator><name pos:start="191:10" pos:end="191:13">prot</name> <operator pos:start="191:15" pos:end="191:15">=</operator> <name pos:start="191:17" pos:end="191:25">PAGE_READ</name> <operator pos:start="191:27" pos:end="191:27">|</operator> <name pos:start="191:29" pos:end="191:38">PAGE_WRITE</name> <operator pos:start="191:40" pos:end="191:40">|</operator> <name pos:start="191:42" pos:end="191:50">PAGE_EXEC</name></expr>;</expr_stmt>

        <expr_stmt pos:start="193:9" pos:end="193:38"><expr pos:start="193:9" pos:end="193:37"><operator pos:start="193:9" pos:end="193:9">*</operator><name pos:start="193:10" pos:end="193:18">page_size</name> <operator pos:start="193:20" pos:end="193:20">=</operator> <name pos:start="193:22" pos:end="193:37">TARGET_PAGE_SIZE</name></expr>;</expr_stmt>

        <return pos:start="195:9" pos:end="195:17">return <expr pos:start="195:16" pos:end="195:16"><literal type="number" pos:start="195:16" pos:end="195:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="201:5" pos:end="219:5"><if pos:start="201:5" pos:end="207:5">if <condition pos:start="201:8" pos:end="201:47">(<expr pos:start="201:9" pos:end="201:46"><call pos:start="201:9" pos:end="201:46"><name pos:start="201:9" pos:end="201:32">regime_using_lpae_format</name><argument_list pos:start="201:33" pos:end="201:46">(<argument pos:start="201:34" pos:end="201:36"><expr pos:start="201:34" pos:end="201:36"><name pos:start="201:34" pos:end="201:36">env</name></expr></argument>, <argument pos:start="201:39" pos:end="201:45"><expr pos:start="201:39" pos:end="201:45"><name pos:start="201:39" pos:end="201:45">mmu_idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:49" pos:end="207:5">{<block_content pos:start="203:9" pos:end="205:67">

        <return pos:start="203:9" pos:end="205:67">return <expr pos:start="203:16" pos:end="205:66"><call pos:start="203:16" pos:end="205:66"><name pos:start="203:16" pos:end="203:33">get_phys_addr_lpae</name><argument_list pos:start="203:34" pos:end="205:66">(<argument pos:start="203:35" pos:end="203:37"><expr pos:start="203:35" pos:end="203:37"><name pos:start="203:35" pos:end="203:37">env</name></expr></argument>, <argument pos:start="203:40" pos:end="203:46"><expr pos:start="203:40" pos:end="203:46"><name pos:start="203:40" pos:end="203:46">address</name></expr></argument>, <argument pos:start="203:49" pos:end="203:59"><expr pos:start="203:49" pos:end="203:59"><name pos:start="203:49" pos:end="203:59">access_type</name></expr></argument>, <argument pos:start="203:62" pos:end="203:68"><expr pos:start="203:62" pos:end="203:68"><name pos:start="203:62" pos:end="203:68">mmu_idx</name></expr></argument>, <argument pos:start="203:71" pos:end="203:78"><expr pos:start="203:71" pos:end="203:78"><name pos:start="203:71" pos:end="203:78">phys_ptr</name></expr></argument>,

                                  <argument pos:start="205:35" pos:end="205:39"><expr pos:start="205:35" pos:end="205:39"><name pos:start="205:35" pos:end="205:39">attrs</name></expr></argument>, <argument pos:start="205:42" pos:end="205:45"><expr pos:start="205:42" pos:end="205:45"><name pos:start="205:42" pos:end="205:45">prot</name></expr></argument>, <argument pos:start="205:48" pos:end="205:56"><expr pos:start="205:48" pos:end="205:56"><name pos:start="205:48" pos:end="205:56">page_size</name></expr></argument>, <argument pos:start="205:59" pos:end="205:61"><expr pos:start="205:59" pos:end="205:61"><name pos:start="205:59" pos:end="205:61">fsr</name></expr></argument>, <argument pos:start="205:64" pos:end="205:65"><expr pos:start="205:64" pos:end="205:65"><name pos:start="205:64" pos:end="205:65">fi</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="207:7" pos:end="213:5">else if <condition pos:start="207:15" pos:end="207:53">(<expr pos:start="207:16" pos:end="207:52"><call pos:start="207:16" pos:end="207:41"><name pos:start="207:16" pos:end="207:27">regime_sctlr</name><argument_list pos:start="207:28" pos:end="207:41">(<argument pos:start="207:29" pos:end="207:31"><expr pos:start="207:29" pos:end="207:31"><name pos:start="207:29" pos:end="207:31">env</name></expr></argument>, <argument pos:start="207:34" pos:end="207:40"><expr pos:start="207:34" pos:end="207:40"><name pos:start="207:34" pos:end="207:40">mmu_idx</name></expr></argument>)</argument_list></call> <operator pos:start="207:43" pos:end="207:43">&amp;</operator> <name pos:start="207:45" pos:end="207:52">SCTLR_XP</name></expr>)</condition> <block pos:start="207:55" pos:end="213:5">{<block_content pos:start="209:9" pos:end="211:65">

        <return pos:start="209:9" pos:end="211:65">return <expr pos:start="209:16" pos:end="211:64"><call pos:start="209:16" pos:end="211:64"><name pos:start="209:16" pos:end="209:31">get_phys_addr_v6</name><argument_list pos:start="209:32" pos:end="211:64">(<argument pos:start="209:33" pos:end="209:35"><expr pos:start="209:33" pos:end="209:35"><name pos:start="209:33" pos:end="209:35">env</name></expr></argument>, <argument pos:start="209:38" pos:end="209:44"><expr pos:start="209:38" pos:end="209:44"><name pos:start="209:38" pos:end="209:44">address</name></expr></argument>, <argument pos:start="209:47" pos:end="209:57"><expr pos:start="209:47" pos:end="209:57"><name pos:start="209:47" pos:end="209:57">access_type</name></expr></argument>, <argument pos:start="209:60" pos:end="209:66"><expr pos:start="209:60" pos:end="209:66"><name pos:start="209:60" pos:end="209:66">mmu_idx</name></expr></argument>, <argument pos:start="209:69" pos:end="209:76"><expr pos:start="209:69" pos:end="209:76"><name pos:start="209:69" pos:end="209:76">phys_ptr</name></expr></argument>,

                                <argument pos:start="211:33" pos:end="211:37"><expr pos:start="211:33" pos:end="211:37"><name pos:start="211:33" pos:end="211:37">attrs</name></expr></argument>, <argument pos:start="211:40" pos:end="211:43"><expr pos:start="211:40" pos:end="211:43"><name pos:start="211:40" pos:end="211:43">prot</name></expr></argument>, <argument pos:start="211:46" pos:end="211:54"><expr pos:start="211:46" pos:end="211:54"><name pos:start="211:46" pos:end="211:54">page_size</name></expr></argument>, <argument pos:start="211:57" pos:end="211:59"><expr pos:start="211:57" pos:end="211:59"><name pos:start="211:57" pos:end="211:59">fsr</name></expr></argument>, <argument pos:start="211:62" pos:end="211:63"><expr pos:start="211:62" pos:end="211:63"><name pos:start="211:62" pos:end="211:63">fi</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="213:7" pos:end="219:5">else <block pos:start="213:12" pos:end="219:5">{<block_content pos:start="215:9" pos:end="217:58">

        <return pos:start="215:9" pos:end="217:58">return <expr pos:start="215:16" pos:end="217:57"><call pos:start="215:16" pos:end="217:57"><name pos:start="215:16" pos:end="215:31">get_phys_addr_v5</name><argument_list pos:start="215:32" pos:end="217:57">(<argument pos:start="215:33" pos:end="215:35"><expr pos:start="215:33" pos:end="215:35"><name pos:start="215:33" pos:end="215:35">env</name></expr></argument>, <argument pos:start="215:38" pos:end="215:44"><expr pos:start="215:38" pos:end="215:44"><name pos:start="215:38" pos:end="215:44">address</name></expr></argument>, <argument pos:start="215:47" pos:end="215:57"><expr pos:start="215:47" pos:end="215:57"><name pos:start="215:47" pos:end="215:57">access_type</name></expr></argument>, <argument pos:start="215:60" pos:end="215:66"><expr pos:start="215:60" pos:end="215:66"><name pos:start="215:60" pos:end="215:66">mmu_idx</name></expr></argument>, <argument pos:start="215:69" pos:end="215:76"><expr pos:start="215:69" pos:end="215:76"><name pos:start="215:69" pos:end="215:76">phys_ptr</name></expr></argument>,

                                <argument pos:start="217:33" pos:end="217:36"><expr pos:start="217:33" pos:end="217:36"><name pos:start="217:33" pos:end="217:36">prot</name></expr></argument>, <argument pos:start="217:39" pos:end="217:47"><expr pos:start="217:39" pos:end="217:47"><name pos:start="217:39" pos:end="217:47">page_size</name></expr></argument>, <argument pos:start="217:50" pos:end="217:52"><expr pos:start="217:50" pos:end="217:52"><name pos:start="217:50" pos:end="217:52">fsr</name></expr></argument>, <argument pos:start="217:55" pos:end="217:56"><expr pos:start="217:55" pos:end="217:56"><name pos:start="217:55" pos:end="217:56">fi</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
