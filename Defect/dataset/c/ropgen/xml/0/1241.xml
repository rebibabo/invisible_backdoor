<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/1241.c" pos:tabs="8"><macro pos:start="1:1" pos:end="7:68"><name pos:start="1:1" pos:end="1:21">yuv2mono_1_c_template</name><argument_list pos:start="1:22" pos:end="7:68">(<argument pos:start="1:23" pos:end="1:35">SwsContext *c</argument>, <argument pos:start="1:38" pos:end="1:56">const int16_t *buf0</argument>,

                      <argument pos:start="3:23" pos:end="3:44">const int16_t *ubuf[<literal type="number" pos:start="3:43" pos:end="3:43">2</literal>]</argument>, <argument pos:start="3:47" pos:end="3:68">const int16_t *vbuf[<literal type="number" pos:start="3:67" pos:end="3:67">2</literal>]</argument>,

                      <argument pos:start="5:23" pos:end="5:42">const int16_t *abuf0</argument>, <argument pos:start="5:45" pos:end="5:57">uint8_t *dest</argument>, <argument pos:start="5:60" pos:end="5:67">int dstW</argument>,

                      <argument pos:start="7:23" pos:end="7:33">int uvalpha</argument>, <argument pos:start="7:36" pos:end="7:40">int y</argument>, <argument pos:start="7:43" pos:end="7:67">enum AVPixelFormat target</argument>)</argument_list></macro>

<block pos:start="9:1" pos:end="91:1">{<block_content pos:start="11:5" pos:end="89:5">

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:54"><type pos:start="11:5" pos:end="11:25"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:17">uint8_t</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier> <specifier pos:start="11:21" pos:end="11:25">const</specifier></type> <name pos:start="11:27" pos:end="11:30">d128</name> <init pos:start="11:32" pos:end="11:54">= <expr pos:start="11:34" pos:end="11:54"><name pos:start="11:34" pos:end="11:54"><name pos:start="11:34" pos:end="11:47">dither_8x8_220</name><index pos:start="11:48" pos:end="11:54">[<expr pos:start="11:49" pos:end="11:53"><name pos:start="11:49" pos:end="11:49">y</name> <operator pos:start="11:51" pos:end="11:51">&amp;</operator> <literal type="number" pos:start="11:53" pos:end="11:53">7</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:10"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="89:5"><if pos:start="17:5" pos:end="61:5">if <condition pos:start="17:8" pos:end="17:39">(<expr pos:start="17:9" pos:end="17:38"><name pos:start="17:9" pos:end="17:16"><name pos:start="17:9" pos:end="17:9">c</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:16">flags</name></name> <operator pos:start="17:18" pos:end="17:18">&amp;</operator> <name pos:start="17:20" pos:end="17:38">SWS_ERROR_DIFFUSION</name></expr>)</condition> <block pos:start="17:41" pos:end="61:5">{<block_content pos:start="19:9" pos:end="59:36">

        <decl_stmt pos:start="19:9" pos:end="19:20"><decl pos:start="19:9" pos:end="19:19"><type pos:start="19:9" pos:end="19:11"><name pos:start="19:9" pos:end="19:11">int</name></type> <name pos:start="19:13" pos:end="19:15">err</name> <init pos:start="19:17" pos:end="19:19">= <expr pos:start="19:19" pos:end="19:19"><literal type="number" pos:start="19:19" pos:end="19:19">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="21:9" pos:end="21:20"><decl pos:start="21:9" pos:end="21:19"><type pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">int</name></type> <name pos:start="21:13" pos:end="21:15">acc</name> <init pos:start="21:17" pos:end="21:19">= <expr pos:start="21:19" pos:end="21:19"><literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr></init></decl>;</decl_stmt>

        <for pos:start="23:9" pos:end="57:9">for <control pos:start="23:13" pos:end="23:36">(<init pos:start="23:14" pos:end="23:19"><expr pos:start="23:14" pos:end="23:18"><name pos:start="23:14" pos:end="23:14">i</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <literal type="number" pos:start="23:18" pos:end="23:18">0</literal></expr>;</init> <condition pos:start="23:21" pos:end="23:29"><expr pos:start="23:21" pos:end="23:28"><name pos:start="23:21" pos:end="23:21">i</name> <operator pos:start="23:23" pos:end="23:23">&lt;</operator> <name pos:start="23:25" pos:end="23:28">dstW</name></expr>;</condition> <incr pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:31">i</name> <operator pos:start="23:33" pos:end="23:34">+=</operator><literal type="number" pos:start="23:35" pos:end="23:35">2</literal></expr></incr>)</control> <block pos:start="23:38" pos:end="57:9">{<block_content pos:start="25:13" pos:end="55:43">

            <decl_stmt pos:start="25:13" pos:end="25:18"><decl pos:start="25:13" pos:end="25:17"><type pos:start="25:13" pos:end="25:15"><name pos:start="25:13" pos:end="25:15">int</name></type> <name pos:start="25:17" pos:end="25:17">Y</name></decl>;</decl_stmt>



            <expr_stmt pos:start="29:13" pos:end="29:42"><expr pos:start="29:13" pos:end="29:41"><name pos:start="29:13" pos:end="29:13">Y</name> <operator pos:start="29:15" pos:end="29:15">=</operator> <operator pos:start="29:17" pos:end="29:17">(</operator><operator pos:start="29:18" pos:end="29:18">(</operator><name pos:start="29:19" pos:end="29:29"><name pos:start="29:19" pos:end="29:22">buf0</name><index pos:start="29:23" pos:end="29:29">[<expr pos:start="29:24" pos:end="29:28"><name pos:start="29:24" pos:end="29:24">i</name> <operator pos:start="29:26" pos:end="29:26">+</operator> <literal type="number" pos:start="29:28" pos:end="29:28">0</literal></expr>]</index></name> <operator pos:start="29:31" pos:end="29:31">+</operator> <literal type="number" pos:start="29:33" pos:end="29:34">64</literal><operator pos:start="29:35" pos:end="29:35">)</operator> <operator pos:start="29:37" pos:end="29:38">&gt;&gt;</operator> <literal type="number" pos:start="29:40" pos:end="29:40">7</literal><operator pos:start="29:41" pos:end="29:41">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:120"><expr pos:start="31:13" pos:end="31:119"><name pos:start="31:13" pos:end="31:13">Y</name> <operator pos:start="31:15" pos:end="31:16">+=</operator> <operator pos:start="31:18" pos:end="31:18">(</operator><literal type="number" pos:start="31:19" pos:end="31:19">7</literal><operator pos:start="31:20" pos:end="31:20">*</operator><name pos:start="31:21" pos:end="31:23">err</name> <operator pos:start="31:25" pos:end="31:25">+</operator> <literal type="number" pos:start="31:27" pos:end="31:27">1</literal><operator pos:start="31:28" pos:end="31:28">*</operator><name pos:start="31:29" pos:end="31:49"><name pos:start="31:29" pos:end="31:29">c</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:43">dither_error</name><index pos:start="31:44" pos:end="31:46">[<expr pos:start="31:45" pos:end="31:45"><literal type="number" pos:start="31:45" pos:end="31:45">0</literal></expr>]</index><index pos:start="31:47" pos:end="31:49">[<expr pos:start="31:48" pos:end="31:48"><name pos:start="31:48" pos:end="31:48">i</name></expr>]</index></name> <operator pos:start="31:51" pos:end="31:51">+</operator> <literal type="number" pos:start="31:53" pos:end="31:53">5</literal><operator pos:start="31:54" pos:end="31:54">*</operator><name pos:start="31:55" pos:end="31:77"><name pos:start="31:55" pos:end="31:55">c</name><operator pos:start="31:56" pos:end="31:57">-&gt;</operator><name pos:start="31:58" pos:end="31:69">dither_error</name><index pos:start="31:70" pos:end="31:72">[<expr pos:start="31:71" pos:end="31:71"><literal type="number" pos:start="31:71" pos:end="31:71">0</literal></expr>]</index><index pos:start="31:73" pos:end="31:77">[<expr pos:start="31:74" pos:end="31:76"><name pos:start="31:74" pos:end="31:74">i</name><operator pos:start="31:75" pos:end="31:75">+</operator><literal type="number" pos:start="31:76" pos:end="31:76">1</literal></expr>]</index></name> <operator pos:start="31:79" pos:end="31:79">+</operator> <literal type="number" pos:start="31:81" pos:end="31:81">3</literal><operator pos:start="31:82" pos:end="31:82">*</operator><name pos:start="31:83" pos:end="31:105"><name pos:start="31:83" pos:end="31:83">c</name><operator pos:start="31:84" pos:end="31:85">-&gt;</operator><name pos:start="31:86" pos:end="31:97">dither_error</name><index pos:start="31:98" pos:end="31:100">[<expr pos:start="31:99" pos:end="31:99"><literal type="number" pos:start="31:99" pos:end="31:99">0</literal></expr>]</index><index pos:start="31:101" pos:end="31:105">[<expr pos:start="31:102" pos:end="31:104"><name pos:start="31:102" pos:end="31:102">i</name><operator pos:start="31:103" pos:end="31:103">+</operator><literal type="number" pos:start="31:104" pos:end="31:104">2</literal></expr>]</index></name> <operator pos:start="31:107" pos:end="31:107">+</operator> <literal type="number" pos:start="31:109" pos:end="31:111">8</literal> <operator pos:start="31:111" pos:end="31:111">-</operator> <literal type="number" pos:start="31:113" pos:end="31:115">256</literal><operator pos:start="31:116" pos:end="31:116">)</operator><operator pos:start="31:117" pos:end="31:118">&gt;&gt;</operator><literal type="number" pos:start="31:119" pos:end="31:119">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:40"><expr pos:start="33:13" pos:end="33:39"><name pos:start="33:13" pos:end="33:33"><name pos:start="33:13" pos:end="33:13">c</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:27">dither_error</name><index pos:start="33:28" pos:end="33:30">[<expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">0</literal></expr>]</index><index pos:start="33:31" pos:end="33:33">[<expr pos:start="33:32" pos:end="33:32"><name pos:start="33:32" pos:end="33:32">i</name></expr>]</index></name> <operator pos:start="33:35" pos:end="33:35">=</operator> <name pos:start="33:37" pos:end="33:39">err</name></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:37"><expr pos:start="35:13" pos:end="35:36"><name pos:start="35:13" pos:end="35:15">acc</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <literal type="number" pos:start="35:19" pos:end="35:19">2</literal><operator pos:start="35:20" pos:end="35:20">*</operator><name pos:start="35:21" pos:end="35:23">acc</name> <operator pos:start="35:25" pos:end="35:25">+</operator> <operator pos:start="35:27" pos:end="35:27">(</operator><name pos:start="35:28" pos:end="35:28">Y</name> <operator pos:start="35:30" pos:end="35:31">&gt;=</operator> <literal type="number" pos:start="35:33" pos:end="35:35">128</literal><operator pos:start="35:36" pos:end="35:36">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:29"><expr pos:start="37:13" pos:end="37:28"><name pos:start="37:13" pos:end="37:13">Y</name> <operator pos:start="37:15" pos:end="37:16">-=</operator> <literal type="number" pos:start="37:18" pos:end="37:20">220</literal><operator pos:start="37:21" pos:end="37:21">*</operator><operator pos:start="37:22" pos:end="37:22">(</operator><name pos:start="37:23" pos:end="37:25">acc</name><operator pos:start="37:26" pos:end="37:26">&amp;</operator><literal type="number" pos:start="37:27" pos:end="37:27">1</literal><operator pos:start="37:28" pos:end="37:28">)</operator></expr>;</expr_stmt>



            <expr_stmt pos:start="41:13" pos:end="41:44"><expr pos:start="41:13" pos:end="41:43"><name pos:start="41:13" pos:end="41:15">err</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <operator pos:start="41:19" pos:end="41:19">(</operator><operator pos:start="41:20" pos:end="41:20">(</operator><name pos:start="41:21" pos:end="41:31"><name pos:start="41:21" pos:end="41:24">buf0</name><index pos:start="41:25" pos:end="41:31">[<expr pos:start="41:26" pos:end="41:30"><name pos:start="41:26" pos:end="41:26">i</name> <operator pos:start="41:28" pos:end="41:28">+</operator> <literal type="number" pos:start="41:30" pos:end="41:30">1</literal></expr>]</index></name> <operator pos:start="41:33" pos:end="41:33">+</operator> <literal type="number" pos:start="41:35" pos:end="41:36">64</literal><operator pos:start="41:37" pos:end="41:37">)</operator> <operator pos:start="41:39" pos:end="41:40">&gt;&gt;</operator> <literal type="number" pos:start="41:42" pos:end="41:42">7</literal><operator pos:start="41:43" pos:end="41:43">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:122"><expr pos:start="43:13" pos:end="43:121"><name pos:start="43:13" pos:end="43:15">err</name> <operator pos:start="43:17" pos:end="43:18">+=</operator> <operator pos:start="43:20" pos:end="43:20">(</operator><literal type="number" pos:start="43:21" pos:end="43:21">7</literal><operator pos:start="43:22" pos:end="43:22">*</operator><name pos:start="43:23" pos:end="43:23">Y</name> <operator pos:start="43:25" pos:end="43:25">+</operator> <literal type="number" pos:start="43:27" pos:end="43:27">1</literal><operator pos:start="43:28" pos:end="43:28">*</operator><name pos:start="43:29" pos:end="43:51"><name pos:start="43:29" pos:end="43:29">c</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:43">dither_error</name><index pos:start="43:44" pos:end="43:46">[<expr pos:start="43:45" pos:end="43:45"><literal type="number" pos:start="43:45" pos:end="43:45">0</literal></expr>]</index><index pos:start="43:47" pos:end="43:51">[<expr pos:start="43:48" pos:end="43:50"><name pos:start="43:48" pos:end="43:48">i</name><operator pos:start="43:49" pos:end="43:49">+</operator><literal type="number" pos:start="43:50" pos:end="43:50">1</literal></expr>]</index></name> <operator pos:start="43:53" pos:end="43:53">+</operator> <literal type="number" pos:start="43:55" pos:end="43:55">5</literal><operator pos:start="43:56" pos:end="43:56">*</operator><name pos:start="43:57" pos:end="43:79"><name pos:start="43:57" pos:end="43:57">c</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:71">dither_error</name><index pos:start="43:72" pos:end="43:74">[<expr pos:start="43:73" pos:end="43:73"><literal type="number" pos:start="43:73" pos:end="43:73">0</literal></expr>]</index><index pos:start="43:75" pos:end="43:79">[<expr pos:start="43:76" pos:end="43:78"><name pos:start="43:76" pos:end="43:76">i</name><operator pos:start="43:77" pos:end="43:77">+</operator><literal type="number" pos:start="43:78" pos:end="43:78">2</literal></expr>]</index></name> <operator pos:start="43:81" pos:end="43:81">+</operator> <literal type="number" pos:start="43:83" pos:end="43:83">3</literal><operator pos:start="43:84" pos:end="43:84">*</operator><name pos:start="43:85" pos:end="43:107"><name pos:start="43:85" pos:end="43:85">c</name><operator pos:start="43:86" pos:end="43:87">-&gt;</operator><name pos:start="43:88" pos:end="43:99">dither_error</name><index pos:start="43:100" pos:end="43:102">[<expr pos:start="43:101" pos:end="43:101"><literal type="number" pos:start="43:101" pos:end="43:101">0</literal></expr>]</index><index pos:start="43:103" pos:end="43:107">[<expr pos:start="43:104" pos:end="43:106"><name pos:start="43:104" pos:end="43:104">i</name><operator pos:start="43:105" pos:end="43:105">+</operator><literal type="number" pos:start="43:106" pos:end="43:106">3</literal></expr>]</index></name> <operator pos:start="43:109" pos:end="43:109">+</operator> <literal type="number" pos:start="43:111" pos:end="43:113">8</literal> <operator pos:start="43:113" pos:end="43:113">-</operator> <literal type="number" pos:start="43:115" pos:end="43:117">256</literal><operator pos:start="43:118" pos:end="43:118">)</operator><operator pos:start="43:119" pos:end="43:120">&gt;&gt;</operator><literal type="number" pos:start="43:121" pos:end="43:121">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:40"><expr pos:start="45:13" pos:end="45:39"><name pos:start="45:13" pos:end="45:35"><name pos:start="45:13" pos:end="45:13">c</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:27">dither_error</name><index pos:start="45:28" pos:end="45:30">[<expr pos:start="45:29" pos:end="45:29"><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>]</index><index pos:start="45:31" pos:end="45:35">[<expr pos:start="45:32" pos:end="45:34"><name pos:start="45:32" pos:end="45:32">i</name><operator pos:start="45:33" pos:end="45:33">+</operator><literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>]</index></name> <operator pos:start="45:37" pos:end="45:37">=</operator> <name pos:start="45:39" pos:end="45:39">Y</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:39"><expr pos:start="47:13" pos:end="47:38"><name pos:start="47:13" pos:end="47:15">acc</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <literal type="number" pos:start="47:19" pos:end="47:19">2</literal><operator pos:start="47:20" pos:end="47:20">*</operator><name pos:start="47:21" pos:end="47:23">acc</name> <operator pos:start="47:25" pos:end="47:25">+</operator> <operator pos:start="47:27" pos:end="47:27">(</operator><name pos:start="47:28" pos:end="47:30">err</name> <operator pos:start="47:32" pos:end="47:33">&gt;=</operator> <literal type="number" pos:start="47:35" pos:end="47:37">128</literal><operator pos:start="47:38" pos:end="47:38">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:31"><expr pos:start="49:13" pos:end="49:30"><name pos:start="49:13" pos:end="49:15">err</name> <operator pos:start="49:17" pos:end="49:18">-=</operator> <literal type="number" pos:start="49:20" pos:end="49:22">220</literal><operator pos:start="49:23" pos:end="49:23">*</operator><operator pos:start="49:24" pos:end="49:24">(</operator><name pos:start="49:25" pos:end="49:27">acc</name><operator pos:start="49:28" pos:end="49:28">&amp;</operator><literal type="number" pos:start="49:29" pos:end="49:29">1</literal><operator pos:start="49:30" pos:end="49:30">)</operator></expr>;</expr_stmt>



            <if_stmt pos:start="53:13" pos:end="55:43"><if pos:start="53:13" pos:end="55:43">if <condition pos:start="53:16" pos:end="53:29">(<expr pos:start="53:17" pos:end="53:28"><operator pos:start="53:17" pos:end="53:17">(</operator><name pos:start="53:18" pos:end="53:18">i</name> <operator pos:start="53:20" pos:end="53:20">&amp;</operator> <literal type="number" pos:start="53:22" pos:end="53:22">7</literal><operator pos:start="53:23" pos:end="53:23">)</operator> <operator pos:start="53:25" pos:end="53:26">==</operator> <literal type="number" pos:start="53:28" pos:end="53:28">6</literal></expr>)</condition><block type="pseudo" pos:start="55:17" pos:end="55:43"><block_content pos:start="55:17" pos:end="55:43">

                <expr_stmt pos:start="55:17" pos:end="55:43"><expr pos:start="55:17" pos:end="55:42"><call pos:start="55:17" pos:end="55:42"><name pos:start="55:17" pos:end="55:28">output_pixel</name><argument_list pos:start="55:29" pos:end="55:42">(<argument pos:start="55:30" pos:end="55:36"><expr pos:start="55:30" pos:end="55:36"><operator pos:start="55:30" pos:end="55:30">*</operator><name pos:start="55:31" pos:end="55:34">dest</name><operator pos:start="55:35" pos:end="55:36">++</operator></expr></argument>, <argument pos:start="55:39" pos:end="55:41"><expr pos:start="55:39" pos:end="55:41"><name pos:start="55:39" pos:end="55:41">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <expr_stmt pos:start="59:9" pos:end="59:36"><expr pos:start="59:9" pos:end="59:35"><name pos:start="59:9" pos:end="59:29"><name pos:start="59:9" pos:end="59:9">c</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:23">dither_error</name><index pos:start="59:24" pos:end="59:26">[<expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">0</literal></expr>]</index><index pos:start="59:27" pos:end="59:29">[<expr pos:start="59:28" pos:end="59:28"><name pos:start="59:28" pos:end="59:28">i</name></expr>]</index></name> <operator pos:start="59:31" pos:end="59:31">=</operator> <name pos:start="59:33" pos:end="59:35">err</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="61:7" pos:end="89:5">else <block pos:start="61:12" pos:end="89:5">{<block_content pos:start="63:5" pos:end="87:5">

    <for pos:start="63:5" pos:end="87:5">for <control pos:start="63:9" pos:end="63:33">(<init pos:start="63:10" pos:end="63:15"><expr pos:start="63:10" pos:end="63:14"><name pos:start="63:10" pos:end="63:10">i</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <literal type="number" pos:start="63:14" pos:end="63:14">0</literal></expr>;</init> <condition pos:start="63:17" pos:end="63:25"><expr pos:start="63:17" pos:end="63:24"><name pos:start="63:17" pos:end="63:17">i</name> <operator pos:start="63:19" pos:end="63:19">&lt;</operator> <name pos:start="63:21" pos:end="63:24">dstW</name></expr>;</condition> <incr pos:start="63:27" pos:end="63:32"><expr pos:start="63:27" pos:end="63:32"><name pos:start="63:27" pos:end="63:27">i</name> <operator pos:start="63:29" pos:end="63:30">+=</operator> <literal type="number" pos:start="63:32" pos:end="63:32">8</literal></expr></incr>)</control> <block pos:start="63:35" pos:end="87:5">{<block_content pos:start="65:9" pos:end="85:35">

        <decl_stmt pos:start="65:9" pos:end="65:20"><decl pos:start="65:9" pos:end="65:19"><type pos:start="65:9" pos:end="65:11"><name pos:start="65:9" pos:end="65:11">int</name></type> <name pos:start="65:13" pos:end="65:15">acc</name> <init pos:start="65:17" pos:end="65:19">= <expr pos:start="65:19" pos:end="65:19"><literal type="number" pos:start="65:19" pos:end="65:19">0</literal></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:65"><expr pos:start="67:9" pos:end="67:64"><call pos:start="67:9" pos:end="67:64"><name pos:start="67:9" pos:end="67:22">accumulate_bit</name><argument_list pos:start="67:23" pos:end="67:64">(<argument pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:26">acc</name></expr></argument>, <argument pos:start="67:29" pos:end="67:63"><expr pos:start="67:29" pos:end="67:63"><operator pos:start="67:29" pos:end="67:29">(</operator><operator pos:start="67:30" pos:end="67:30">(</operator><name pos:start="67:31" pos:end="67:41"><name pos:start="67:31" pos:end="67:34">buf0</name><index pos:start="67:35" pos:end="67:41">[<expr pos:start="67:36" pos:end="67:40"><name pos:start="67:36" pos:end="67:36">i</name> <operator pos:start="67:38" pos:end="67:38">+</operator> <literal type="number" pos:start="67:40" pos:end="67:40">0</literal></expr>]</index></name> <operator pos:start="67:43" pos:end="67:43">+</operator> <literal type="number" pos:start="67:45" pos:end="67:46">64</literal><operator pos:start="67:47" pos:end="67:47">)</operator> <operator pos:start="67:49" pos:end="67:50">&gt;&gt;</operator> <literal type="number" pos:start="67:52" pos:end="67:52">7</literal><operator pos:start="67:53" pos:end="67:53">)</operator> <operator pos:start="67:55" pos:end="67:55">+</operator> <name pos:start="67:57" pos:end="67:63"><name pos:start="67:57" pos:end="67:60">d128</name><index pos:start="67:61" pos:end="67:63">[<expr pos:start="67:62" pos:end="67:62"><literal type="number" pos:start="67:62" pos:end="67:62">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:65"><expr pos:start="69:9" pos:end="69:64"><call pos:start="69:9" pos:end="69:64"><name pos:start="69:9" pos:end="69:22">accumulate_bit</name><argument_list pos:start="69:23" pos:end="69:64">(<argument pos:start="69:24" pos:end="69:26"><expr pos:start="69:24" pos:end="69:26"><name pos:start="69:24" pos:end="69:26">acc</name></expr></argument>, <argument pos:start="69:29" pos:end="69:63"><expr pos:start="69:29" pos:end="69:63"><operator pos:start="69:29" pos:end="69:29">(</operator><operator pos:start="69:30" pos:end="69:30">(</operator><name pos:start="69:31" pos:end="69:41"><name pos:start="69:31" pos:end="69:34">buf0</name><index pos:start="69:35" pos:end="69:41">[<expr pos:start="69:36" pos:end="69:40"><name pos:start="69:36" pos:end="69:36">i</name> <operator pos:start="69:38" pos:end="69:38">+</operator> <literal type="number" pos:start="69:40" pos:end="69:40">1</literal></expr>]</index></name> <operator pos:start="69:43" pos:end="69:43">+</operator> <literal type="number" pos:start="69:45" pos:end="69:46">64</literal><operator pos:start="69:47" pos:end="69:47">)</operator> <operator pos:start="69:49" pos:end="69:50">&gt;&gt;</operator> <literal type="number" pos:start="69:52" pos:end="69:52">7</literal><operator pos:start="69:53" pos:end="69:53">)</operator> <operator pos:start="69:55" pos:end="69:55">+</operator> <name pos:start="69:57" pos:end="69:63"><name pos:start="69:57" pos:end="69:60">d128</name><index pos:start="69:61" pos:end="69:63">[<expr pos:start="69:62" pos:end="69:62"><literal type="number" pos:start="69:62" pos:end="69:62">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:65"><expr pos:start="71:9" pos:end="71:64"><call pos:start="71:9" pos:end="71:64"><name pos:start="71:9" pos:end="71:22">accumulate_bit</name><argument_list pos:start="71:23" pos:end="71:64">(<argument pos:start="71:24" pos:end="71:26"><expr pos:start="71:24" pos:end="71:26"><name pos:start="71:24" pos:end="71:26">acc</name></expr></argument>, <argument pos:start="71:29" pos:end="71:63"><expr pos:start="71:29" pos:end="71:63"><operator pos:start="71:29" pos:end="71:29">(</operator><operator pos:start="71:30" pos:end="71:30">(</operator><name pos:start="71:31" pos:end="71:41"><name pos:start="71:31" pos:end="71:34">buf0</name><index pos:start="71:35" pos:end="71:41">[<expr pos:start="71:36" pos:end="71:40"><name pos:start="71:36" pos:end="71:36">i</name> <operator pos:start="71:38" pos:end="71:38">+</operator> <literal type="number" pos:start="71:40" pos:end="71:40">2</literal></expr>]</index></name> <operator pos:start="71:43" pos:end="71:43">+</operator> <literal type="number" pos:start="71:45" pos:end="71:46">64</literal><operator pos:start="71:47" pos:end="71:47">)</operator> <operator pos:start="71:49" pos:end="71:50">&gt;&gt;</operator> <literal type="number" pos:start="71:52" pos:end="71:52">7</literal><operator pos:start="71:53" pos:end="71:53">)</operator> <operator pos:start="71:55" pos:end="71:55">+</operator> <name pos:start="71:57" pos:end="71:63"><name pos:start="71:57" pos:end="71:60">d128</name><index pos:start="71:61" pos:end="71:63">[<expr pos:start="71:62" pos:end="71:62"><literal type="number" pos:start="71:62" pos:end="71:62">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:65"><expr pos:start="73:9" pos:end="73:64"><call pos:start="73:9" pos:end="73:64"><name pos:start="73:9" pos:end="73:22">accumulate_bit</name><argument_list pos:start="73:23" pos:end="73:64">(<argument pos:start="73:24" pos:end="73:26"><expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">acc</name></expr></argument>, <argument pos:start="73:29" pos:end="73:63"><expr pos:start="73:29" pos:end="73:63"><operator pos:start="73:29" pos:end="73:29">(</operator><operator pos:start="73:30" pos:end="73:30">(</operator><name pos:start="73:31" pos:end="73:41"><name pos:start="73:31" pos:end="73:34">buf0</name><index pos:start="73:35" pos:end="73:41">[<expr pos:start="73:36" pos:end="73:40"><name pos:start="73:36" pos:end="73:36">i</name> <operator pos:start="73:38" pos:end="73:38">+</operator> <literal type="number" pos:start="73:40" pos:end="73:40">3</literal></expr>]</index></name> <operator pos:start="73:43" pos:end="73:43">+</operator> <literal type="number" pos:start="73:45" pos:end="73:46">64</literal><operator pos:start="73:47" pos:end="73:47">)</operator> <operator pos:start="73:49" pos:end="73:50">&gt;&gt;</operator> <literal type="number" pos:start="73:52" pos:end="73:52">7</literal><operator pos:start="73:53" pos:end="73:53">)</operator> <operator pos:start="73:55" pos:end="73:55">+</operator> <name pos:start="73:57" pos:end="73:63"><name pos:start="73:57" pos:end="73:60">d128</name><index pos:start="73:61" pos:end="73:63">[<expr pos:start="73:62" pos:end="73:62"><literal type="number" pos:start="73:62" pos:end="73:62">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:65"><expr pos:start="75:9" pos:end="75:64"><call pos:start="75:9" pos:end="75:64"><name pos:start="75:9" pos:end="75:22">accumulate_bit</name><argument_list pos:start="75:23" pos:end="75:64">(<argument pos:start="75:24" pos:end="75:26"><expr pos:start="75:24" pos:end="75:26"><name pos:start="75:24" pos:end="75:26">acc</name></expr></argument>, <argument pos:start="75:29" pos:end="75:63"><expr pos:start="75:29" pos:end="75:63"><operator pos:start="75:29" pos:end="75:29">(</operator><operator pos:start="75:30" pos:end="75:30">(</operator><name pos:start="75:31" pos:end="75:41"><name pos:start="75:31" pos:end="75:34">buf0</name><index pos:start="75:35" pos:end="75:41">[<expr pos:start="75:36" pos:end="75:40"><name pos:start="75:36" pos:end="75:36">i</name> <operator pos:start="75:38" pos:end="75:38">+</operator> <literal type="number" pos:start="75:40" pos:end="75:40">4</literal></expr>]</index></name> <operator pos:start="75:43" pos:end="75:43">+</operator> <literal type="number" pos:start="75:45" pos:end="75:46">64</literal><operator pos:start="75:47" pos:end="75:47">)</operator> <operator pos:start="75:49" pos:end="75:50">&gt;&gt;</operator> <literal type="number" pos:start="75:52" pos:end="75:52">7</literal><operator pos:start="75:53" pos:end="75:53">)</operator> <operator pos:start="75:55" pos:end="75:55">+</operator> <name pos:start="75:57" pos:end="75:63"><name pos:start="75:57" pos:end="75:60">d128</name><index pos:start="75:61" pos:end="75:63">[<expr pos:start="75:62" pos:end="75:62"><literal type="number" pos:start="75:62" pos:end="75:62">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:65"><expr pos:start="77:9" pos:end="77:64"><call pos:start="77:9" pos:end="77:64"><name pos:start="77:9" pos:end="77:22">accumulate_bit</name><argument_list pos:start="77:23" pos:end="77:64">(<argument pos:start="77:24" pos:end="77:26"><expr pos:start="77:24" pos:end="77:26"><name pos:start="77:24" pos:end="77:26">acc</name></expr></argument>, <argument pos:start="77:29" pos:end="77:63"><expr pos:start="77:29" pos:end="77:63"><operator pos:start="77:29" pos:end="77:29">(</operator><operator pos:start="77:30" pos:end="77:30">(</operator><name pos:start="77:31" pos:end="77:41"><name pos:start="77:31" pos:end="77:34">buf0</name><index pos:start="77:35" pos:end="77:41">[<expr pos:start="77:36" pos:end="77:40"><name pos:start="77:36" pos:end="77:36">i</name> <operator pos:start="77:38" pos:end="77:38">+</operator> <literal type="number" pos:start="77:40" pos:end="77:40">5</literal></expr>]</index></name> <operator pos:start="77:43" pos:end="77:43">+</operator> <literal type="number" pos:start="77:45" pos:end="77:46">64</literal><operator pos:start="77:47" pos:end="77:47">)</operator> <operator pos:start="77:49" pos:end="77:50">&gt;&gt;</operator> <literal type="number" pos:start="77:52" pos:end="77:52">7</literal><operator pos:start="77:53" pos:end="77:53">)</operator> <operator pos:start="77:55" pos:end="77:55">+</operator> <name pos:start="77:57" pos:end="77:63"><name pos:start="77:57" pos:end="77:60">d128</name><index pos:start="77:61" pos:end="77:63">[<expr pos:start="77:62" pos:end="77:62"><literal type="number" pos:start="77:62" pos:end="77:62">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:65"><expr pos:start="79:9" pos:end="79:64"><call pos:start="79:9" pos:end="79:64"><name pos:start="79:9" pos:end="79:22">accumulate_bit</name><argument_list pos:start="79:23" pos:end="79:64">(<argument pos:start="79:24" pos:end="79:26"><expr pos:start="79:24" pos:end="79:26"><name pos:start="79:24" pos:end="79:26">acc</name></expr></argument>, <argument pos:start="79:29" pos:end="79:63"><expr pos:start="79:29" pos:end="79:63"><operator pos:start="79:29" pos:end="79:29">(</operator><operator pos:start="79:30" pos:end="79:30">(</operator><name pos:start="79:31" pos:end="79:41"><name pos:start="79:31" pos:end="79:34">buf0</name><index pos:start="79:35" pos:end="79:41">[<expr pos:start="79:36" pos:end="79:40"><name pos:start="79:36" pos:end="79:36">i</name> <operator pos:start="79:38" pos:end="79:38">+</operator> <literal type="number" pos:start="79:40" pos:end="79:40">6</literal></expr>]</index></name> <operator pos:start="79:43" pos:end="79:43">+</operator> <literal type="number" pos:start="79:45" pos:end="79:46">64</literal><operator pos:start="79:47" pos:end="79:47">)</operator> <operator pos:start="79:49" pos:end="79:50">&gt;&gt;</operator> <literal type="number" pos:start="79:52" pos:end="79:52">7</literal><operator pos:start="79:53" pos:end="79:53">)</operator> <operator pos:start="79:55" pos:end="79:55">+</operator> <name pos:start="79:57" pos:end="79:63"><name pos:start="79:57" pos:end="79:60">d128</name><index pos:start="79:61" pos:end="79:63">[<expr pos:start="79:62" pos:end="79:62"><literal type="number" pos:start="79:62" pos:end="79:62">6</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:65"><expr pos:start="81:9" pos:end="81:64"><call pos:start="81:9" pos:end="81:64"><name pos:start="81:9" pos:end="81:22">accumulate_bit</name><argument_list pos:start="81:23" pos:end="81:64">(<argument pos:start="81:24" pos:end="81:26"><expr pos:start="81:24" pos:end="81:26"><name pos:start="81:24" pos:end="81:26">acc</name></expr></argument>, <argument pos:start="81:29" pos:end="81:63"><expr pos:start="81:29" pos:end="81:63"><operator pos:start="81:29" pos:end="81:29">(</operator><operator pos:start="81:30" pos:end="81:30">(</operator><name pos:start="81:31" pos:end="81:41"><name pos:start="81:31" pos:end="81:34">buf0</name><index pos:start="81:35" pos:end="81:41">[<expr pos:start="81:36" pos:end="81:40"><name pos:start="81:36" pos:end="81:36">i</name> <operator pos:start="81:38" pos:end="81:38">+</operator> <literal type="number" pos:start="81:40" pos:end="81:40">7</literal></expr>]</index></name> <operator pos:start="81:43" pos:end="81:43">+</operator> <literal type="number" pos:start="81:45" pos:end="81:46">64</literal><operator pos:start="81:47" pos:end="81:47">)</operator> <operator pos:start="81:49" pos:end="81:50">&gt;&gt;</operator> <literal type="number" pos:start="81:52" pos:end="81:52">7</literal><operator pos:start="81:53" pos:end="81:53">)</operator> <operator pos:start="81:55" pos:end="81:55">+</operator> <name pos:start="81:57" pos:end="81:63"><name pos:start="81:57" pos:end="81:60">d128</name><index pos:start="81:61" pos:end="81:63">[<expr pos:start="81:62" pos:end="81:62"><literal type="number" pos:start="81:62" pos:end="81:62">7</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:35"><expr pos:start="85:9" pos:end="85:34"><call pos:start="85:9" pos:end="85:34"><name pos:start="85:9" pos:end="85:20">output_pixel</name><argument_list pos:start="85:21" pos:end="85:34">(<argument pos:start="85:22" pos:end="85:28"><expr pos:start="85:22" pos:end="85:28"><operator pos:start="85:22" pos:end="85:22">*</operator><name pos:start="85:23" pos:end="85:26">dest</name><operator pos:start="85:27" pos:end="85:28">++</operator></expr></argument>, <argument pos:start="85:31" pos:end="85:33"><expr pos:start="85:31" pos:end="85:33"><name pos:start="85:31" pos:end="85:33">acc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    </block_content>}</block></else></if_stmt>

</block_content>}</block>
</unit>
