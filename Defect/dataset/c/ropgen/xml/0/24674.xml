<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24674.c" pos:tabs="8"><function pos:start="1:1" pos:end="139:1"><type pos:start="1:1" pos:end="1:11"><name pos:start="1:1" pos:end="1:9">SwsFilter</name> <modifier pos:start="1:11" pos:end="1:11">*</modifier></type><name pos:start="1:12" pos:end="1:31">sws_getDefaultFilter</name><parameter_list pos:start="1:32" pos:end="7:44">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:37">float</name></type> <name pos:start="1:39" pos:end="1:47">lumaGBlur</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:66"><decl pos:start="1:50" pos:end="1:66"><type pos:start="1:50" pos:end="1:66"><name pos:start="1:50" pos:end="1:54">float</name></type> <name pos:start="1:56" pos:end="1:66">chromaGBlur</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:49"><decl pos:start="3:33" pos:end="3:49"><type pos:start="3:33" pos:end="3:49"><name pos:start="3:33" pos:end="3:37">float</name></type> <name pos:start="3:39" pos:end="3:49">lumaSharpen</name></decl></parameter>, <parameter pos:start="3:52" pos:end="3:70"><decl pos:start="3:52" pos:end="3:70"><type pos:start="3:52" pos:end="3:70"><name pos:start="3:52" pos:end="3:56">float</name></type> <name pos:start="3:58" pos:end="3:70">chromaSharpen</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:50"><decl pos:start="5:33" pos:end="5:50"><type pos:start="5:33" pos:end="5:50"><name pos:start="5:33" pos:end="5:37">float</name></type> <name pos:start="5:39" pos:end="5:50">chromaHShift</name></decl></parameter>, <parameter pos:start="5:53" pos:end="5:70"><decl pos:start="5:53" pos:end="5:70"><type pos:start="5:53" pos:end="5:70"><name pos:start="5:53" pos:end="5:57">float</name></type> <name pos:start="5:59" pos:end="5:70">chromaVShift</name></decl></parameter>,

                                <parameter pos:start="7:33" pos:end="7:43"><decl pos:start="7:33" pos:end="7:43"><type pos:start="7:33" pos:end="7:43"><name pos:start="7:33" pos:end="7:35">int</name></type> <name pos:start="7:37" pos:end="7:43">verbose</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="139:1">{<block_content pos:start="11:5" pos:end="137:18">

    <decl_stmt pos:start="11:5" pos:end="11:53"><decl pos:start="11:5" pos:end="11:52"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">SwsFilter</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">filter</name> <init pos:start="11:23" pos:end="11:52">= <expr pos:start="11:25" pos:end="11:52"><call pos:start="11:25" pos:end="11:52"><name pos:start="11:25" pos:end="11:33">av_malloc</name><argument_list pos:start="11:34" pos:end="11:52">(<argument pos:start="11:35" pos:end="11:51"><expr pos:start="11:35" pos:end="11:51"><sizeof pos:start="11:35" pos:end="11:51">sizeof<argument_list pos:start="11:41" pos:end="11:51">(<argument pos:start="11:42" pos:end="11:50"><expr pos:start="11:42" pos:end="11:50"><name pos:start="11:42" pos:end="11:50">SwsFilter</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="15:20"><if pos:start="13:5" pos:end="15:20">if <condition pos:start="13:8" pos:end="13:16">(<expr pos:start="13:9" pos:end="13:15"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:15">filter</name></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:20"><block_content pos:start="15:9" pos:end="15:20">

        <return pos:start="15:9" pos:end="15:20">return <expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">NULL</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="31:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:25">(<expr pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:17">lumaGBlur</name> <operator pos:start="19:19" pos:end="19:20">!=</operator> <literal type="number" pos:start="19:22" pos:end="19:24">0.0</literal></expr>)</condition> <block pos:start="19:27" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:58">

        <expr_stmt pos:start="21:9" pos:end="21:58"><expr pos:start="21:9" pos:end="21:57"><name pos:start="21:9" pos:end="21:20"><name pos:start="21:9" pos:end="21:14">filter</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:20">lumH</name></name> <operator pos:start="21:22" pos:end="21:22">=</operator> <call pos:start="21:24" pos:end="21:57"><name pos:start="21:24" pos:end="21:41">sws_getGaussianVec</name><argument_list pos:start="21:42" pos:end="21:57">(<argument pos:start="21:43" pos:end="21:51"><expr pos:start="21:43" pos:end="21:51"><name pos:start="21:43" pos:end="21:51">lumaGBlur</name></expr></argument>, <argument pos:start="21:54" pos:end="21:56"><expr pos:start="21:54" pos:end="21:56"><literal type="number" pos:start="21:54" pos:end="21:56">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:58"><expr pos:start="23:9" pos:end="23:57"><name pos:start="23:9" pos:end="23:20"><name pos:start="23:9" pos:end="23:14">filter</name><operator pos:start="23:15" pos:end="23:16">-&gt;</operator><name pos:start="23:17" pos:end="23:20">lumV</name></name> <operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:57"><name pos:start="23:24" pos:end="23:41">sws_getGaussianVec</name><argument_list pos:start="23:42" pos:end="23:57">(<argument pos:start="23:43" pos:end="23:51"><expr pos:start="23:43" pos:end="23:51"><name pos:start="23:43" pos:end="23:51">lumaGBlur</name></expr></argument>, <argument pos:start="23:54" pos:end="23:56"><expr pos:start="23:54" pos:end="23:56"><literal type="number" pos:start="23:54" pos:end="23:56">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="25:7" pos:end="31:5">else <block pos:start="25:12" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:44">

        <expr_stmt pos:start="27:9" pos:end="27:44"><expr pos:start="27:9" pos:end="27:43"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:14">filter</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:20">lumH</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <call pos:start="27:24" pos:end="27:43"><name pos:start="27:24" pos:end="27:41">sws_getIdentityVec</name><argument_list pos:start="27:42" pos:end="27:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:44"><expr pos:start="29:9" pos:end="29:43"><name pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:14">filter</name><operator pos:start="29:15" pos:end="29:16">-&gt;</operator><name pos:start="29:17" pos:end="29:20">lumV</name></name> <operator pos:start="29:22" pos:end="29:22">=</operator> <call pos:start="29:24" pos:end="29:43"><name pos:start="29:24" pos:end="29:41">sws_getIdentityVec</name><argument_list pos:start="29:42" pos:end="29:43">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="35:5" pos:end="47:5"><if pos:start="35:5" pos:end="41:5">if <condition pos:start="35:8" pos:end="35:27">(<expr pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:19">chromaGBlur</name> <operator pos:start="35:21" pos:end="35:22">!=</operator> <literal type="number" pos:start="35:24" pos:end="35:26">0.0</literal></expr>)</condition> <block pos:start="35:29" pos:end="41:5">{<block_content pos:start="37:9" pos:end="39:60">

        <expr_stmt pos:start="37:9" pos:end="37:60"><expr pos:start="37:9" pos:end="37:59"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:14">filter</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:20">chrH</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <call pos:start="37:24" pos:end="37:59"><name pos:start="37:24" pos:end="37:41">sws_getGaussianVec</name><argument_list pos:start="37:42" pos:end="37:59">(<argument pos:start="37:43" pos:end="37:53"><expr pos:start="37:43" pos:end="37:53"><name pos:start="37:43" pos:end="37:53">chromaGBlur</name></expr></argument>, <argument pos:start="37:56" pos:end="37:58"><expr pos:start="37:56" pos:end="37:58"><literal type="number" pos:start="37:56" pos:end="37:58">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:60"><expr pos:start="39:9" pos:end="39:59"><name pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:14">filter</name><operator pos:start="39:15" pos:end="39:16">-&gt;</operator><name pos:start="39:17" pos:end="39:20">chrV</name></name> <operator pos:start="39:22" pos:end="39:22">=</operator> <call pos:start="39:24" pos:end="39:59"><name pos:start="39:24" pos:end="39:41">sws_getGaussianVec</name><argument_list pos:start="39:42" pos:end="39:59">(<argument pos:start="39:43" pos:end="39:53"><expr pos:start="39:43" pos:end="39:53"><name pos:start="39:43" pos:end="39:53">chromaGBlur</name></expr></argument>, <argument pos:start="39:56" pos:end="39:58"><expr pos:start="39:56" pos:end="39:58"><literal type="number" pos:start="39:56" pos:end="39:58">3.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="41:7" pos:end="47:5">else <block pos:start="41:12" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:44">

        <expr_stmt pos:start="43:9" pos:end="43:44"><expr pos:start="43:9" pos:end="43:43"><name pos:start="43:9" pos:end="43:20"><name pos:start="43:9" pos:end="43:14">filter</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:20">chrH</name></name> <operator pos:start="43:22" pos:end="43:22">=</operator> <call pos:start="43:24" pos:end="43:43"><name pos:start="43:24" pos:end="43:41">sws_getIdentityVec</name><argument_list pos:start="43:42" pos:end="43:43">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:44"><expr pos:start="45:9" pos:end="45:43"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:14">filter</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:20">chrV</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <call pos:start="45:24" pos:end="45:43"><name pos:start="45:24" pos:end="45:41">sws_getIdentityVec</name><argument_list pos:start="45:42" pos:end="45:43">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="65:5">if <condition pos:start="51:8" pos:end="51:73">(<expr pos:start="51:9" pos:end="51:72"><operator pos:start="51:9" pos:end="51:9">!</operator><name pos:start="51:10" pos:end="51:21"><name pos:start="51:10" pos:end="51:15">filter</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:21">lumH</name></name> <operator pos:start="51:23" pos:end="51:24">||</operator> <operator pos:start="51:26" pos:end="51:26">!</operator><name pos:start="51:27" pos:end="51:38"><name pos:start="51:27" pos:end="51:32">filter</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:38">lumV</name></name> <operator pos:start="51:40" pos:end="51:41">||</operator> <operator pos:start="51:43" pos:end="51:43">!</operator><name pos:start="51:44" pos:end="51:55"><name pos:start="51:44" pos:end="51:49">filter</name><operator pos:start="51:50" pos:end="51:51">-&gt;</operator><name pos:start="51:52" pos:end="51:55">chrH</name></name> <operator pos:start="51:57" pos:end="51:58">||</operator> <operator pos:start="51:60" pos:end="51:60">!</operator><name pos:start="51:61" pos:end="51:72"><name pos:start="51:61" pos:end="51:66">filter</name><operator pos:start="51:67" pos:end="51:68">-&gt;</operator><name pos:start="51:69" pos:end="51:72">chrV</name></name></expr>)</condition> <block pos:start="51:75" pos:end="65:5">{<block_content pos:start="53:9" pos:end="63:20">

        <expr_stmt pos:start="53:9" pos:end="53:34"><expr pos:start="53:9" pos:end="53:33"><call pos:start="53:9" pos:end="53:33"><name pos:start="53:9" pos:end="53:19">sws_freeVec</name><argument_list pos:start="53:20" pos:end="53:33">(<argument pos:start="53:21" pos:end="53:32"><expr pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:32"><name pos:start="53:21" pos:end="53:26">filter</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:32">lumH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><call pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:19">sws_freeVec</name><argument_list pos:start="55:20" pos:end="55:33">(<argument pos:start="55:21" pos:end="55:32"><expr pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:32"><name pos:start="55:21" pos:end="55:26">filter</name><operator pos:start="55:27" pos:end="55:28">-&gt;</operator><name pos:start="55:29" pos:end="55:32">lumV</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:19">sws_freeVec</name><argument_list pos:start="57:20" pos:end="57:33">(<argument pos:start="57:21" pos:end="57:32"><expr pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:32"><name pos:start="57:21" pos:end="57:26">filter</name><operator pos:start="57:27" pos:end="57:28">-&gt;</operator><name pos:start="57:29" pos:end="57:32">chrH</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:34"><expr pos:start="59:9" pos:end="59:33"><call pos:start="59:9" pos:end="59:33"><name pos:start="59:9" pos:end="59:19">sws_freeVec</name><argument_list pos:start="59:20" pos:end="59:33">(<argument pos:start="59:21" pos:end="59:32"><expr pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:32"><name pos:start="59:21" pos:end="59:26">filter</name><operator pos:start="59:27" pos:end="59:28">-&gt;</operator><name pos:start="59:29" pos:end="59:32">chrV</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><call pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:16">av_freep</name><argument_list pos:start="61:17" pos:end="61:25">(<argument pos:start="61:18" pos:end="61:24"><expr pos:start="61:18" pos:end="61:24"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:24">filter</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:20">return <expr pos:start="63:16" pos:end="63:19"><name pos:start="63:16" pos:end="63:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="83:5"><if pos:start="69:5" pos:end="83:5">if <condition pos:start="69:8" pos:end="69:29">(<expr pos:start="69:9" pos:end="69:28"><name pos:start="69:9" pos:end="69:21">chromaSharpen</name> <operator pos:start="69:23" pos:end="69:24">!=</operator> <literal type="number" pos:start="69:26" pos:end="69:28">0.0</literal></expr>)</condition> <block pos:start="69:31" pos:end="83:5">{<block_content pos:start="71:9" pos:end="81:24">

        <decl_stmt pos:start="71:9" pos:end="71:45"><decl pos:start="71:9" pos:end="71:44"><type pos:start="71:9" pos:end="71:19"><name pos:start="71:9" pos:end="71:17">SwsVector</name> <modifier pos:start="71:19" pos:end="71:19">*</modifier></type><name pos:start="71:20" pos:end="71:21">id</name> <init pos:start="71:23" pos:end="71:44">= <expr pos:start="71:25" pos:end="71:44"><call pos:start="71:25" pos:end="71:44"><name pos:start="71:25" pos:end="71:42">sws_getIdentityVec</name><argument_list pos:start="71:43" pos:end="71:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:51"><expr pos:start="73:9" pos:end="73:50"><call pos:start="73:9" pos:end="73:50"><name pos:start="73:9" pos:end="73:20">sws_scaleVec</name><argument_list pos:start="73:21" pos:end="73:50">(<argument pos:start="73:22" pos:end="73:33"><expr pos:start="73:22" pos:end="73:33"><name pos:start="73:22" pos:end="73:33"><name pos:start="73:22" pos:end="73:27">filter</name><operator pos:start="73:28" pos:end="73:29">-&gt;</operator><name pos:start="73:30" pos:end="73:33">chrH</name></name></expr></argument>, <argument pos:start="73:36" pos:end="73:49"><expr pos:start="73:36" pos:end="73:49"><operator pos:start="73:36" pos:end="73:36">-</operator><name pos:start="73:37" pos:end="73:49">chromaSharpen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:51"><expr pos:start="75:9" pos:end="75:50"><call pos:start="75:9" pos:end="75:50"><name pos:start="75:9" pos:end="75:20">sws_scaleVec</name><argument_list pos:start="75:21" pos:end="75:50">(<argument pos:start="75:22" pos:end="75:33"><expr pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:33"><name pos:start="75:22" pos:end="75:27">filter</name><operator pos:start="75:28" pos:end="75:29">-&gt;</operator><name pos:start="75:30" pos:end="75:33">chrV</name></name></expr></argument>, <argument pos:start="75:36" pos:end="75:49"><expr pos:start="75:36" pos:end="75:49"><operator pos:start="75:36" pos:end="75:36">-</operator><name pos:start="75:37" pos:end="75:49">chromaSharpen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:37"><expr pos:start="77:9" pos:end="77:36"><call pos:start="77:9" pos:end="77:36"><name pos:start="77:9" pos:end="77:18">sws_addVec</name><argument_list pos:start="77:19" pos:end="77:36">(<argument pos:start="77:20" pos:end="77:31"><expr pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:25">filter</name><operator pos:start="77:26" pos:end="77:27">-&gt;</operator><name pos:start="77:28" pos:end="77:31">chrH</name></name></expr></argument>, <argument pos:start="77:34" pos:end="77:35"><expr pos:start="77:34" pos:end="77:35"><name pos:start="77:34" pos:end="77:35">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:37"><expr pos:start="79:9" pos:end="79:36"><call pos:start="79:9" pos:end="79:36"><name pos:start="79:9" pos:end="79:18">sws_addVec</name><argument_list pos:start="79:19" pos:end="79:36">(<argument pos:start="79:20" pos:end="79:31"><expr pos:start="79:20" pos:end="79:31"><name pos:start="79:20" pos:end="79:31"><name pos:start="79:20" pos:end="79:25">filter</name><operator pos:start="79:26" pos:end="79:27">-&gt;</operator><name pos:start="79:28" pos:end="79:31">chrV</name></name></expr></argument>, <argument pos:start="79:34" pos:end="79:35"><expr pos:start="79:34" pos:end="79:35"><name pos:start="79:34" pos:end="79:35">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:24"><expr pos:start="81:9" pos:end="81:23"><call pos:start="81:9" pos:end="81:23"><name pos:start="81:9" pos:end="81:19">sws_freeVec</name><argument_list pos:start="81:20" pos:end="81:23">(<argument pos:start="81:21" pos:end="81:22"><expr pos:start="81:21" pos:end="81:22"><name pos:start="81:21" pos:end="81:22">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="101:5"><if pos:start="87:5" pos:end="101:5">if <condition pos:start="87:8" pos:end="87:27">(<expr pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:19">lumaSharpen</name> <operator pos:start="87:21" pos:end="87:22">!=</operator> <literal type="number" pos:start="87:24" pos:end="87:26">0.0</literal></expr>)</condition> <block pos:start="87:29" pos:end="101:5">{<block_content pos:start="89:9" pos:end="99:24">

        <decl_stmt pos:start="89:9" pos:end="89:45"><decl pos:start="89:9" pos:end="89:44"><type pos:start="89:9" pos:end="89:19"><name pos:start="89:9" pos:end="89:17">SwsVector</name> <modifier pos:start="89:19" pos:end="89:19">*</modifier></type><name pos:start="89:20" pos:end="89:21">id</name> <init pos:start="89:23" pos:end="89:44">= <expr pos:start="89:25" pos:end="89:44"><call pos:start="89:25" pos:end="89:44"><name pos:start="89:25" pos:end="89:42">sws_getIdentityVec</name><argument_list pos:start="89:43" pos:end="89:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:49"><expr pos:start="91:9" pos:end="91:48"><call pos:start="91:9" pos:end="91:48"><name pos:start="91:9" pos:end="91:20">sws_scaleVec</name><argument_list pos:start="91:21" pos:end="91:48">(<argument pos:start="91:22" pos:end="91:33"><expr pos:start="91:22" pos:end="91:33"><name pos:start="91:22" pos:end="91:33"><name pos:start="91:22" pos:end="91:27">filter</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:33">lumH</name></name></expr></argument>, <argument pos:start="91:36" pos:end="91:47"><expr pos:start="91:36" pos:end="91:47"><operator pos:start="91:36" pos:end="91:36">-</operator><name pos:start="91:37" pos:end="91:47">lumaSharpen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:49"><expr pos:start="93:9" pos:end="93:48"><call pos:start="93:9" pos:end="93:48"><name pos:start="93:9" pos:end="93:20">sws_scaleVec</name><argument_list pos:start="93:21" pos:end="93:48">(<argument pos:start="93:22" pos:end="93:33"><expr pos:start="93:22" pos:end="93:33"><name pos:start="93:22" pos:end="93:33"><name pos:start="93:22" pos:end="93:27">filter</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:33">lumV</name></name></expr></argument>, <argument pos:start="93:36" pos:end="93:47"><expr pos:start="93:36" pos:end="93:47"><operator pos:start="93:36" pos:end="93:36">-</operator><name pos:start="93:37" pos:end="93:47">lumaSharpen</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:37"><expr pos:start="95:9" pos:end="95:36"><call pos:start="95:9" pos:end="95:36"><name pos:start="95:9" pos:end="95:18">sws_addVec</name><argument_list pos:start="95:19" pos:end="95:36">(<argument pos:start="95:20" pos:end="95:31"><expr pos:start="95:20" pos:end="95:31"><name pos:start="95:20" pos:end="95:31"><name pos:start="95:20" pos:end="95:25">filter</name><operator pos:start="95:26" pos:end="95:27">-&gt;</operator><name pos:start="95:28" pos:end="95:31">lumH</name></name></expr></argument>, <argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><name pos:start="95:34" pos:end="95:35">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:37"><expr pos:start="97:9" pos:end="97:36"><call pos:start="97:9" pos:end="97:36"><name pos:start="97:9" pos:end="97:18">sws_addVec</name><argument_list pos:start="97:19" pos:end="97:36">(<argument pos:start="97:20" pos:end="97:31"><expr pos:start="97:20" pos:end="97:31"><name pos:start="97:20" pos:end="97:31"><name pos:start="97:20" pos:end="97:25">filter</name><operator pos:start="97:26" pos:end="97:27">-&gt;</operator><name pos:start="97:28" pos:end="97:31">lumV</name></name></expr></argument>, <argument pos:start="97:34" pos:end="97:35"><expr pos:start="97:34" pos:end="97:35"><name pos:start="97:34" pos:end="97:35">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:24"><expr pos:start="99:9" pos:end="99:23"><call pos:start="99:9" pos:end="99:23"><name pos:start="99:9" pos:end="99:19">sws_freeVec</name><argument_list pos:start="99:20" pos:end="99:23">(<argument pos:start="99:21" pos:end="99:22"><expr pos:start="99:21" pos:end="99:22"><name pos:start="99:21" pos:end="99:22">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="105:5" pos:end="107:62"><if pos:start="105:5" pos:end="107:62">if <condition pos:start="105:8" pos:end="105:28">(<expr pos:start="105:9" pos:end="105:27"><name pos:start="105:9" pos:end="105:20">chromaHShift</name> <operator pos:start="105:22" pos:end="105:23">!=</operator> <literal type="number" pos:start="105:25" pos:end="105:27">0.0</literal></expr>)</condition><block type="pseudo" pos:start="107:9" pos:end="107:62"><block_content pos:start="107:9" pos:end="107:62">

        <expr_stmt pos:start="107:9" pos:end="107:62"><expr pos:start="107:9" pos:end="107:61"><call pos:start="107:9" pos:end="107:61"><name pos:start="107:9" pos:end="107:20">sws_shiftVec</name><argument_list pos:start="107:21" pos:end="107:61">(<argument pos:start="107:22" pos:end="107:33"><expr pos:start="107:22" pos:end="107:33"><name pos:start="107:22" pos:end="107:33"><name pos:start="107:22" pos:end="107:27">filter</name><operator pos:start="107:28" pos:end="107:29">-&gt;</operator><name pos:start="107:30" pos:end="107:33">chrH</name></name></expr></argument>, <argument pos:start="107:36" pos:end="107:60"><expr pos:start="107:36" pos:end="107:60"><operator pos:start="107:36" pos:end="107:36">(</operator><name pos:start="107:37" pos:end="107:39">int</name><operator pos:start="107:40" pos:end="107:40">)</operator><operator pos:start="107:41" pos:end="107:41">(</operator><name pos:start="107:42" pos:end="107:53">chromaHShift</name> <operator pos:start="107:55" pos:end="107:55">+</operator> <literal type="number" pos:start="107:57" pos:end="107:59">0.5</literal><operator pos:start="107:60" pos:end="107:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="113:62"><if pos:start="111:5" pos:end="113:62">if <condition pos:start="111:8" pos:end="111:28">(<expr pos:start="111:9" pos:end="111:27"><name pos:start="111:9" pos:end="111:20">chromaVShift</name> <operator pos:start="111:22" pos:end="111:23">!=</operator> <literal type="number" pos:start="111:25" pos:end="111:27">0.0</literal></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:62"><block_content pos:start="113:9" pos:end="113:62">

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><call pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:20">sws_shiftVec</name><argument_list pos:start="113:21" pos:end="113:61">(<argument pos:start="113:22" pos:end="113:33"><expr pos:start="113:22" pos:end="113:33"><name pos:start="113:22" pos:end="113:33"><name pos:start="113:22" pos:end="113:27">filter</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:33">chrV</name></name></expr></argument>, <argument pos:start="113:36" pos:end="113:60"><expr pos:start="113:36" pos:end="113:60"><operator pos:start="113:36" pos:end="113:36">(</operator><name pos:start="113:37" pos:end="113:39">int</name><operator pos:start="113:40" pos:end="113:40">)</operator><operator pos:start="113:41" pos:end="113:41">(</operator><name pos:start="113:42" pos:end="113:53">chromaVShift</name> <operator pos:start="113:55" pos:end="113:55">+</operator> <literal type="number" pos:start="113:57" pos:end="113:59">0.5</literal><operator pos:start="113:60" pos:end="113:60">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:40"><expr pos:start="117:5" pos:end="117:39"><call pos:start="117:5" pos:end="117:39"><name pos:start="117:5" pos:end="117:20">sws_normalizeVec</name><argument_list pos:start="117:21" pos:end="117:39">(<argument pos:start="117:22" pos:end="117:33"><expr pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:33"><name pos:start="117:22" pos:end="117:27">filter</name><operator pos:start="117:28" pos:end="117:29">-&gt;</operator><name pos:start="117:30" pos:end="117:33">chrH</name></name></expr></argument>, <argument pos:start="117:36" pos:end="117:38"><expr pos:start="117:36" pos:end="117:38"><literal type="number" pos:start="117:36" pos:end="117:38">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:40"><expr pos:start="119:5" pos:end="119:39"><call pos:start="119:5" pos:end="119:39"><name pos:start="119:5" pos:end="119:20">sws_normalizeVec</name><argument_list pos:start="119:21" pos:end="119:39">(<argument pos:start="119:22" pos:end="119:33"><expr pos:start="119:22" pos:end="119:33"><name pos:start="119:22" pos:end="119:33"><name pos:start="119:22" pos:end="119:27">filter</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:33">chrV</name></name></expr></argument>, <argument pos:start="119:36" pos:end="119:38"><expr pos:start="119:36" pos:end="119:38"><literal type="number" pos:start="119:36" pos:end="119:38">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="121:5" pos:end="121:40"><expr pos:start="121:5" pos:end="121:39"><call pos:start="121:5" pos:end="121:39"><name pos:start="121:5" pos:end="121:20">sws_normalizeVec</name><argument_list pos:start="121:21" pos:end="121:39">(<argument pos:start="121:22" pos:end="121:33"><expr pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:33"><name pos:start="121:22" pos:end="121:27">filter</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:33">lumH</name></name></expr></argument>, <argument pos:start="121:36" pos:end="121:38"><expr pos:start="121:36" pos:end="121:38"><literal type="number" pos:start="121:36" pos:end="121:38">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="123:5" pos:end="123:40"><expr pos:start="123:5" pos:end="123:39"><call pos:start="123:5" pos:end="123:39"><name pos:start="123:5" pos:end="123:20">sws_normalizeVec</name><argument_list pos:start="123:21" pos:end="123:39">(<argument pos:start="123:22" pos:end="123:33"><expr pos:start="123:22" pos:end="123:33"><name pos:start="123:22" pos:end="123:33"><name pos:start="123:22" pos:end="123:27">filter</name><operator pos:start="123:28" pos:end="123:29">-&gt;</operator><name pos:start="123:30" pos:end="123:33">lumV</name></name></expr></argument>, <argument pos:start="123:36" pos:end="123:38"><expr pos:start="123:36" pos:end="123:38"><literal type="number" pos:start="123:36" pos:end="123:38">1.0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="127:5" pos:end="129:56"><if pos:start="127:5" pos:end="129:56">if <condition pos:start="127:8" pos:end="127:16">(<expr pos:start="127:9" pos:end="127:15"><name pos:start="127:9" pos:end="127:15">verbose</name></expr>)</condition><block type="pseudo" pos:start="129:9" pos:end="129:56"><block_content pos:start="129:9" pos:end="129:56">

        <expr_stmt pos:start="129:9" pos:end="129:56"><expr pos:start="129:9" pos:end="129:55"><call pos:start="129:9" pos:end="129:55"><name pos:start="129:9" pos:end="129:21">sws_printVec2</name><argument_list pos:start="129:22" pos:end="129:55">(<argument pos:start="129:23" pos:end="129:34"><expr pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:34"><name pos:start="129:23" pos:end="129:28">filter</name><operator pos:start="129:29" pos:end="129:30">-&gt;</operator><name pos:start="129:31" pos:end="129:34">chrH</name></name></expr></argument>, <argument pos:start="129:37" pos:end="129:40"><expr pos:start="129:37" pos:end="129:40"><name pos:start="129:37" pos:end="129:40">NULL</name></expr></argument>, <argument pos:start="129:43" pos:end="129:54"><expr pos:start="129:43" pos:end="129:54"><name pos:start="129:43" pos:end="129:54">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="131:5" pos:end="133:56"><if pos:start="131:5" pos:end="133:56">if <condition pos:start="131:8" pos:end="131:16">(<expr pos:start="131:9" pos:end="131:15"><name pos:start="131:9" pos:end="131:15">verbose</name></expr>)</condition><block type="pseudo" pos:start="133:9" pos:end="133:56"><block_content pos:start="133:9" pos:end="133:56">

        <expr_stmt pos:start="133:9" pos:end="133:56"><expr pos:start="133:9" pos:end="133:55"><call pos:start="133:9" pos:end="133:55"><name pos:start="133:9" pos:end="133:21">sws_printVec2</name><argument_list pos:start="133:22" pos:end="133:55">(<argument pos:start="133:23" pos:end="133:34"><expr pos:start="133:23" pos:end="133:34"><name pos:start="133:23" pos:end="133:34"><name pos:start="133:23" pos:end="133:28">filter</name><operator pos:start="133:29" pos:end="133:30">-&gt;</operator><name pos:start="133:31" pos:end="133:34">lumH</name></name></expr></argument>, <argument pos:start="133:37" pos:end="133:40"><expr pos:start="133:37" pos:end="133:40"><name pos:start="133:37" pos:end="133:40">NULL</name></expr></argument>, <argument pos:start="133:43" pos:end="133:54"><expr pos:start="133:43" pos:end="133:54"><name pos:start="133:43" pos:end="133:54">AV_LOG_DEBUG</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="137:5" pos:end="137:18">return <expr pos:start="137:12" pos:end="137:17"><name pos:start="137:12" pos:end="137:17">filter</name></expr>;</return>

</block_content>}</block></function>
</unit>
