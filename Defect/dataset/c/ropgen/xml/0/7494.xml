<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7494.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">spapr_lmb_release</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><name pos:start="1:31" pos:end="1:41">DeviceState</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:46">dev</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:52">void</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:60">opaque</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:60">

    <decl_stmt pos:start="5:5" pos:end="5:65"><decl pos:start="5:5" pos:end="5:64"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">HotplugHandler</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:32">hotplug_ctrl</name> <init pos:start="5:34" pos:end="5:64">= <expr pos:start="5:36" pos:end="5:64"><call pos:start="5:36" pos:end="5:64"><name pos:start="5:36" pos:end="5:59">qdev_get_hotplug_handler</name><argument_list pos:start="5:60" pos:end="5:64">(<argument pos:start="5:61" pos:end="5:63"><expr pos:start="5:61" pos:end="5:63"><name pos:start="5:61" pos:end="5:63">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">sPAPRMachineState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:28">spapr</name> <init pos:start="7:30" pos:end="7:58">= <expr pos:start="7:32" pos:end="7:58"><call pos:start="7:32" pos:end="7:58"><name pos:start="7:32" pos:end="7:44">SPAPR_MACHINE</name><argument_list pos:start="7:45" pos:end="7:58">(<argument pos:start="7:46" pos:end="7:57"><expr pos:start="7:46" pos:end="7:57"><name pos:start="7:46" pos:end="7:57">hotplug_ctrl</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:78"><decl pos:start="9:5" pos:end="9:77"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">sPAPRDIMMState</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">ds</name> <init pos:start="9:24" pos:end="9:77">= <expr pos:start="9:26" pos:end="9:77"><call pos:start="9:26" pos:end="9:77"><name pos:start="9:26" pos:end="9:56">spapr_pending_dimm_unplugs_find</name><argument_list pos:start="9:57" pos:end="9:77">(<argument pos:start="9:58" pos:end="9:62"><expr pos:start="9:58" pos:end="9:62"><name pos:start="9:58" pos:end="9:62">spapr</name></expr></argument>, <argument pos:start="9:65" pos:end="9:76"><expr pos:start="9:65" pos:end="9:76"><call pos:start="9:65" pos:end="9:76"><name pos:start="9:65" pos:end="9:71">PC_DIMM</name><argument_list pos:start="9:72" pos:end="9:76">(<argument pos:start="9:73" pos:end="9:75"><expr pos:start="9:73" pos:end="9:75"><name pos:start="9:73" pos:end="9:75">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:22">(<expr pos:start="13:9" pos:end="13:21"><operator pos:start="13:9" pos:end="13:10">--</operator><name pos:start="13:11" pos:end="13:21"><name pos:start="13:11" pos:end="13:12">ds</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:21">nr_lmbs</name></name></expr>)</condition> <block pos:start="13:24" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:49"><expr pos:start="21:5" pos:end="21:48"><call pos:start="21:5" pos:end="21:48"><name pos:start="21:5" pos:end="21:37">spapr_pending_dimm_unplugs_remove</name><argument_list pos:start="21:38" pos:end="21:48">(<argument pos:start="21:39" pos:end="21:43"><expr pos:start="21:39" pos:end="21:43"><name pos:start="21:39" pos:end="21:43">spapr</name></expr></argument>, <argument pos:start="21:46" pos:end="21:47"><expr pos:start="21:46" pos:end="21:47"><name pos:start="21:46" pos:end="21:47">ds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="25:5" pos:end="31:7">/*

     * Now that all the LMBs have been removed by the guest, call the

     * pc-dimm unplug handler to cleanup up the pc-dimm device.

     */</comment>

    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><call pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:26">hotplug_handler_unplug</name><argument_list pos:start="33:27" pos:end="33:59">(<argument pos:start="33:28" pos:end="33:39"><expr pos:start="33:28" pos:end="33:39"><name pos:start="33:28" pos:end="33:39">hotplug_ctrl</name></expr></argument>, <argument pos:start="33:42" pos:end="33:44"><expr pos:start="33:42" pos:end="33:44"><name pos:start="33:42" pos:end="33:44">dev</name></expr></argument>, <argument pos:start="33:47" pos:end="33:58"><expr pos:start="33:47" pos:end="33:58"><operator pos:start="33:47" pos:end="33:47">&amp;</operator><name pos:start="33:48" pos:end="33:58">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
