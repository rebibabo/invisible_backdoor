<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7501.c" pos:tabs="8"><function pos:start="1:1" pos:end="551:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:29">tcg_out_op</name><parameter_list pos:start="1:30" pos:end="3:58">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">TCGContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:54">TCGOpcode</name></type> <name pos:start="1:56" pos:end="1:58">opc</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:34"><decl pos:start="3:17" pos:end="3:34"><type pos:start="3:17" pos:end="3:34"><specifier pos:start="3:17" pos:end="3:21">const</specifier> <name pos:start="3:23" pos:end="3:28">TCGArg</name> <modifier pos:start="3:30" pos:end="3:30">*</modifier></type><name pos:start="3:31" pos:end="3:34">args</name></decl></parameter>, <parameter pos:start="3:37" pos:end="3:57"><decl pos:start="3:37" pos:end="3:57"><type pos:start="3:37" pos:end="3:57"><specifier pos:start="3:37" pos:end="3:41">const</specifier> <name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:57">const_args</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="551:1">{<block_content pos:start="7:5" pos:end="549:5">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">c</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="549:5">switch <condition pos:start="11:12" pos:end="11:16">(<expr pos:start="11:13" pos:end="11:15"><name pos:start="11:13" pos:end="11:15">opc</name></expr>)</condition> <block pos:start="11:18" pos:end="549:5">{<block_content pos:start="13:5" pos:end="547:20">

    <case pos:start="13:5" pos:end="13:26">case <expr pos:start="13:10" pos:end="13:25"><name pos:start="13:10" pos:end="13:25">INDEX_op_exit_tb</name></expr>:</case>

        <block pos:start="15:9" pos:end="37:9">{<block_content pos:start="17:13" pos:end="35:13">

            <decl_stmt pos:start="17:13" pos:end="17:42"><decl pos:start="17:13" pos:end="17:41"><type pos:start="17:13" pos:end="17:21"><name pos:start="17:13" pos:end="17:19">uint8_t</name> <modifier pos:start="17:21" pos:end="17:21">*</modifier></type><name pos:start="17:22" pos:end="17:27">ld_ptr</name> <init pos:start="17:29" pos:end="17:41">= <expr pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:41"><name pos:start="17:31" pos:end="17:31">s</name><operator pos:start="17:32" pos:end="17:33">-&gt;</operator><name pos:start="17:34" pos:end="17:41">code_ptr</name></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="19:13" pos:end="25:79"><if pos:start="19:13" pos:end="21:71">if <condition pos:start="19:16" pos:end="19:29">(<expr pos:start="19:17" pos:end="19:28"><name pos:start="19:17" pos:end="19:23"><name pos:start="19:17" pos:end="19:20">args</name><index pos:start="19:21" pos:end="19:23">[<expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">0</literal></expr>]</index></name> <operator pos:start="19:25" pos:end="19:26">&gt;&gt;</operator> <literal type="number" pos:start="19:28" pos:end="19:28">8</literal></expr>)</condition><block type="pseudo" pos:start="21:17" pos:end="21:71"><block_content pos:start="21:17" pos:end="21:71">

                <expr_stmt pos:start="21:17" pos:end="21:71"><expr pos:start="21:17" pos:end="21:70"><call pos:start="21:17" pos:end="21:70"><name pos:start="21:17" pos:end="21:31">tcg_out_ld32_12</name><argument_list pos:start="21:32" pos:end="21:70">(<argument pos:start="21:33" pos:end="21:33"><expr pos:start="21:33" pos:end="21:33"><name pos:start="21:33" pos:end="21:33">s</name></expr></argument>, <argument pos:start="21:36" pos:end="21:42"><expr pos:start="21:36" pos:end="21:42"><name pos:start="21:36" pos:end="21:42">COND_AL</name></expr></argument>, <argument pos:start="21:45" pos:end="21:54"><expr pos:start="21:45" pos:end="21:54"><name pos:start="21:45" pos:end="21:54">TCG_REG_R0</name></expr></argument>, <argument pos:start="21:57" pos:end="21:66"><expr pos:start="21:57" pos:end="21:66"><name pos:start="21:57" pos:end="21:66">TCG_REG_PC</name></expr></argument>, <argument pos:start="21:69" pos:end="21:69"><expr pos:start="21:69" pos:end="21:69"><literal type="number" pos:start="21:69" pos:end="21:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="23:13" pos:end="25:79">else<block type="pseudo" pos:start="25:17" pos:end="25:79"><block_content pos:start="25:17" pos:end="25:79">

                <expr_stmt pos:start="25:17" pos:end="25:79"><expr pos:start="25:17" pos:end="25:78"><call pos:start="25:17" pos:end="25:78"><name pos:start="25:17" pos:end="25:31">tcg_out_dat_imm</name><argument_list pos:start="25:32" pos:end="25:78">(<argument pos:start="25:33" pos:end="25:33"><expr pos:start="25:33" pos:end="25:33"><name pos:start="25:33" pos:end="25:33">s</name></expr></argument>, <argument pos:start="25:36" pos:end="25:42"><expr pos:start="25:36" pos:end="25:42"><name pos:start="25:36" pos:end="25:42">COND_AL</name></expr></argument>, <argument pos:start="25:45" pos:end="25:53"><expr pos:start="25:45" pos:end="25:53"><name pos:start="25:45" pos:end="25:53">ARITH_MOV</name></expr></argument>, <argument pos:start="25:56" pos:end="25:65"><expr pos:start="25:56" pos:end="25:65"><name pos:start="25:56" pos:end="25:65">TCG_REG_R0</name></expr></argument>, <argument pos:start="25:68" pos:end="25:68"><expr pos:start="25:68" pos:end="25:68"><literal type="number" pos:start="25:68" pos:end="25:68">0</literal></expr></argument>, <argument pos:start="25:71" pos:end="25:77"><expr pos:start="25:71" pos:end="25:77"><name pos:start="25:71" pos:end="25:77"><name pos:start="25:71" pos:end="25:74">args</name><index pos:start="25:75" pos:end="25:77">[<expr pos:start="25:76" pos:end="25:76"><literal type="number" pos:start="25:76" pos:end="25:76">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:69"><expr pos:start="27:13" pos:end="27:68"><call pos:start="27:13" pos:end="27:68"><name pos:start="27:13" pos:end="27:24">tcg_out_goto</name><argument_list pos:start="27:25" pos:end="27:68">(<argument pos:start="27:26" pos:end="27:26"><expr pos:start="27:26" pos:end="27:26"><name pos:start="27:26" pos:end="27:26">s</name></expr></argument>, <argument pos:start="27:29" pos:end="27:35"><expr pos:start="27:29" pos:end="27:35"><name pos:start="27:29" pos:end="27:35">COND_AL</name></expr></argument>, <argument pos:start="27:38" pos:end="27:67"><expr pos:start="27:38" pos:end="27:67"><operator pos:start="27:38" pos:end="27:38">(</operator><name pos:start="27:39" pos:end="27:54">tcg_target_ulong</name><operator pos:start="27:55" pos:end="27:55">)</operator> <name pos:start="27:57" pos:end="27:67">tb_ret_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="35:13"><if pos:start="29:13" pos:end="35:13">if <condition pos:start="29:16" pos:end="29:29">(<expr pos:start="29:17" pos:end="29:28"><name pos:start="29:17" pos:end="29:23"><name pos:start="29:17" pos:end="29:20">args</name><index pos:start="29:21" pos:end="29:23">[<expr pos:start="29:22" pos:end="29:22"><literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>]</index></name> <operator pos:start="29:25" pos:end="29:26">&gt;&gt;</operator> <literal type="number" pos:start="29:28" pos:end="29:28">8</literal></expr>)</condition> <block pos:start="29:31" pos:end="35:13">{<block_content pos:start="31:17" pos:end="33:38">

                <expr_stmt pos:start="31:17" pos:end="31:63"><expr pos:start="31:17" pos:end="31:62"><operator pos:start="31:17" pos:end="31:17">*</operator><name pos:start="31:18" pos:end="31:23">ld_ptr</name> <operator pos:start="31:25" pos:end="31:25">=</operator> <operator pos:start="31:27" pos:end="31:27">(</operator><name pos:start="31:28" pos:end="31:34">uint8_t</name><operator pos:start="31:35" pos:end="31:35">)</operator> <operator pos:start="31:37" pos:end="31:37">(</operator><name pos:start="31:38" pos:end="31:48"><name pos:start="31:38" pos:end="31:38">s</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:48">code_ptr</name></name> <operator pos:start="31:50" pos:end="31:50">-</operator> <name pos:start="31:52" pos:end="31:57">ld_ptr</name><operator pos:start="31:58" pos:end="31:58">)</operator> <operator pos:start="31:60" pos:end="31:60">-</operator> <literal type="number" pos:start="31:62" pos:end="31:62">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="33:17" pos:end="33:38"><expr pos:start="33:17" pos:end="33:37"><call pos:start="33:17" pos:end="33:37"><name pos:start="33:17" pos:end="33:25">tcg_out32</name><argument_list pos:start="33:26" pos:end="33:37">(<argument pos:start="33:27" pos:end="33:27"><expr pos:start="33:27" pos:end="33:27"><name pos:start="33:27" pos:end="33:27">s</name></expr></argument>, <argument pos:start="33:30" pos:end="33:36"><expr pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:36"><name pos:start="33:30" pos:end="33:33">args</name><index pos:start="33:34" pos:end="33:36">[<expr pos:start="33:35" pos:end="33:35"><literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>

        <break pos:start="39:9" pos:end="39:14">break;</break>

    <case pos:start="41:5" pos:end="41:26">case <expr pos:start="41:10" pos:end="41:25"><name pos:start="41:10" pos:end="41:25">INDEX_op_goto_tb</name></expr>:</case>

        <if_stmt pos:start="43:9" pos:end="93:9"><if pos:start="43:9" pos:end="63:9">if <condition pos:start="43:12" pos:end="43:29">(<expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:13">s</name><operator pos:start="43:14" pos:end="43:15">-&gt;</operator><name pos:start="43:16" pos:end="43:28">tb_jmp_offset</name></name></expr>)</condition> <block pos:start="43:31" pos:end="63:9">{<block_content pos:start="49:13" pos:end="62:0">

            <comment type="block" pos:start="45:13" pos:end="45:36">/* Direct jump method */</comment>

<cpp:if pos:start="47:1" pos:end="47:28">#<cpp:directive pos:start="47:2" pos:end="47:3">if</cpp:directive> <expr pos:start="47:5" pos:end="47:28"><call pos:start="47:5" pos:end="47:28"><name pos:start="47:5" pos:end="47:11">defined</name><argument_list pos:start="47:12" pos:end="47:28">(<argument pos:start="47:13" pos:end="47:27"><expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:27">USE_DIRECT_JUMP</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <expr_stmt pos:start="49:13" pos:end="49:66"><expr pos:start="49:13" pos:end="49:65"><name pos:start="49:13" pos:end="49:37"><name pos:start="49:13" pos:end="49:13">s</name><operator pos:start="49:14" pos:end="49:15">-&gt;</operator><name pos:start="49:16" pos:end="49:28">tb_jmp_offset</name><index pos:start="49:29" pos:end="49:37">[<expr pos:start="49:30" pos:end="49:36"><name pos:start="49:30" pos:end="49:36"><name pos:start="49:30" pos:end="49:33">args</name><index pos:start="49:34" pos:end="49:36">[<expr pos:start="49:35" pos:end="49:35"><literal type="number" pos:start="49:35" pos:end="49:35">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <name pos:start="49:41" pos:end="49:51"><name pos:start="49:41" pos:end="49:41">s</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:51">code_ptr</name></name> <operator pos:start="49:53" pos:end="49:53">-</operator> <name pos:start="49:55" pos:end="49:65"><name pos:start="49:55" pos:end="49:55">s</name><operator pos:start="49:56" pos:end="49:57">-&gt;</operator><name pos:start="49:58" pos:end="49:65">code_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="54:0"><expr pos:start="51:13" pos:end="51:40"><call pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:28">tcg_out_b_noaddr</name><argument_list pos:start="51:29" pos:end="51:40">(<argument pos:start="51:30" pos:end="51:30"><expr pos:start="51:30" pos:end="51:30"><name pos:start="51:30" pos:end="51:30">s</name></expr></argument>, <argument pos:start="51:33" pos:end="51:39"><expr pos:start="51:33" pos:end="51:39"><name pos:start="51:33" pos:end="51:39">COND_AL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="53:1" pos:end="53:5">#<cpp:directive pos:start="53:2" pos:end="53:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="55:13" pos:end="55:68"><expr pos:start="55:13" pos:end="55:67"><call pos:start="55:13" pos:end="55:67"><name pos:start="55:13" pos:end="55:27">tcg_out_ld32_12</name><argument_list pos:start="55:28" pos:end="55:67">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><name pos:start="55:29" pos:end="55:29">s</name></expr></argument>, <argument pos:start="55:32" pos:end="55:38"><expr pos:start="55:32" pos:end="55:38"><name pos:start="55:32" pos:end="55:38">COND_AL</name></expr></argument>, <argument pos:start="55:41" pos:end="55:50"><expr pos:start="55:41" pos:end="55:50"><name pos:start="55:41" pos:end="55:50">TCG_REG_PC</name></expr></argument>, <argument pos:start="55:53" pos:end="55:62"><expr pos:start="55:53" pos:end="55:62"><name pos:start="55:53" pos:end="55:62">TCG_REG_PC</name></expr></argument>, <argument pos:start="55:65" pos:end="55:66"><expr pos:start="55:65" pos:end="55:66"><operator pos:start="55:65" pos:end="55:65">-</operator><literal type="number" pos:start="55:66" pos:end="55:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:66"><expr pos:start="57:13" pos:end="57:65"><name pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:13">s</name><operator pos:start="57:14" pos:end="57:15">-&gt;</operator><name pos:start="57:16" pos:end="57:28">tb_jmp_offset</name><index pos:start="57:29" pos:end="57:37">[<expr pos:start="57:30" pos:end="57:36"><name pos:start="57:30" pos:end="57:36"><name pos:start="57:30" pos:end="57:33">args</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><literal type="number" pos:start="57:35" pos:end="57:35">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="57:39" pos:end="57:39">=</operator> <name pos:start="57:41" pos:end="57:51"><name pos:start="57:41" pos:end="57:41">s</name><operator pos:start="57:42" pos:end="57:43">-&gt;</operator><name pos:start="57:44" pos:end="57:51">code_ptr</name></name> <operator pos:start="57:53" pos:end="57:53">-</operator> <name pos:start="57:55" pos:end="57:65"><name pos:start="57:55" pos:end="57:55">s</name><operator pos:start="57:56" pos:end="57:57">-&gt;</operator><name pos:start="57:58" pos:end="57:65">code_buf</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="62:0"><expr pos:start="59:13" pos:end="59:27"><call pos:start="59:13" pos:end="59:27"><name pos:start="59:13" pos:end="59:21">tcg_out32</name><argument_list pos:start="59:22" pos:end="59:27">(<argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><name pos:start="59:23" pos:end="59:23">s</name></expr></argument>, <argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><literal type="number" pos:start="59:26" pos:end="59:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="61:1" pos:end="61:6">#<cpp:directive pos:start="61:2" pos:end="61:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></if> <else pos:start="63:11" pos:end="93:9">else <block pos:start="63:16" pos:end="93:9">{<block_content pos:start="69:13" pos:end="92:0">

            <comment type="block" pos:start="65:13" pos:end="65:38">/* Indirect jump method */</comment>

<cpp:if pos:start="67:1" pos:end="67:5">#<cpp:directive pos:start="67:2" pos:end="67:3">if</cpp:directive> <expr pos:start="67:5" pos:end="67:5"><literal type="number" pos:start="67:5" pos:end="67:5">1</literal></expr></cpp:if>

            <expr_stmt pos:start="69:13" pos:end="69:71"><expr pos:start="69:13" pos:end="69:70"><name pos:start="69:13" pos:end="69:13">c</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <operator pos:start="69:17" pos:end="69:17">(</operator><name pos:start="69:18" pos:end="69:20">int</name><operator pos:start="69:21" pos:end="69:21">)</operator> <operator pos:start="69:23" pos:end="69:23">(</operator><name pos:start="69:24" pos:end="69:33"><name pos:start="69:24" pos:end="69:24">s</name><operator pos:start="69:25" pos:end="69:26">-&gt;</operator><name pos:start="69:27" pos:end="69:33">tb_next</name></name> <operator pos:start="69:35" pos:end="69:35">+</operator> <name pos:start="69:37" pos:end="69:43"><name pos:start="69:37" pos:end="69:40">args</name><index pos:start="69:41" pos:end="69:43">[<expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">0</literal></expr>]</index></name><operator pos:start="69:44" pos:end="69:44">)</operator> <operator pos:start="69:46" pos:end="69:46">-</operator> <operator pos:start="69:48" pos:end="69:48">(</operator><operator pos:start="69:49" pos:end="69:49">(</operator><name pos:start="69:50" pos:end="69:52">int</name><operator pos:start="69:53" pos:end="69:53">)</operator> <name pos:start="69:55" pos:end="69:65"><name pos:start="69:55" pos:end="69:55">s</name><operator pos:start="69:56" pos:end="69:57">-&gt;</operator><name pos:start="69:58" pos:end="69:65">code_ptr</name></name> <operator pos:start="69:67" pos:end="69:67">+</operator> <literal type="number" pos:start="69:69" pos:end="69:69">8</literal><operator pos:start="69:70" pos:end="69:70">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="84:0"><if pos:start="71:13" pos:end="79:13">if <condition pos:start="71:16" pos:end="71:40">(<expr pos:start="71:17" pos:end="71:39"><name pos:start="71:17" pos:end="71:17">c</name> <operator pos:start="71:19" pos:end="71:19">&gt;</operator> <literal type="number" pos:start="71:21" pos:end="71:25">0xfff</literal> <operator pos:start="71:27" pos:end="71:28">||</operator> <name pos:start="71:30" pos:end="71:30">c</name> <operator pos:start="71:32" pos:end="71:32">&lt;</operator> <operator pos:start="71:34" pos:end="71:34">-</operator><literal type="number" pos:start="71:35" pos:end="71:39">0xfff</literal></expr>)</condition> <block pos:start="71:42" pos:end="79:13">{<block_content pos:start="73:17" pos:end="77:71">

                <expr_stmt pos:start="73:17" pos:end="75:74"><expr pos:start="73:17" pos:end="75:73"><call pos:start="73:17" pos:end="75:73"><name pos:start="73:17" pos:end="73:30">tcg_out_movi32</name><argument_list pos:start="73:31" pos:end="75:73">(<argument pos:start="73:32" pos:end="73:32"><expr pos:start="73:32" pos:end="73:32"><name pos:start="73:32" pos:end="73:32">s</name></expr></argument>, <argument pos:start="73:35" pos:end="73:41"><expr pos:start="73:35" pos:end="73:41"><name pos:start="73:35" pos:end="73:41">COND_AL</name></expr></argument>, <argument pos:start="73:44" pos:end="73:53"><expr pos:start="73:44" pos:end="73:53"><name pos:start="73:44" pos:end="73:53">TCG_REG_R0</name></expr></argument>,

                                <argument pos:start="75:33" pos:end="75:72"><expr pos:start="75:33" pos:end="75:72"><operator pos:start="75:33" pos:end="75:33">(</operator><name pos:start="75:34" pos:end="75:48">tcg_target_long</name><operator pos:start="75:49" pos:end="75:49">)</operator> <operator pos:start="75:51" pos:end="75:51">(</operator><name pos:start="75:52" pos:end="75:61"><name pos:start="75:52" pos:end="75:52">s</name><operator pos:start="75:53" pos:end="75:54">-&gt;</operator><name pos:start="75:55" pos:end="75:61">tb_next</name></name> <operator pos:start="75:63" pos:end="75:63">+</operator> <name pos:start="75:65" pos:end="75:71"><name pos:start="75:65" pos:end="75:68">args</name><index pos:start="75:69" pos:end="75:71">[<expr pos:start="75:70" pos:end="75:70"><literal type="number" pos:start="75:70" pos:end="75:70">0</literal></expr>]</index></name><operator pos:start="75:72" pos:end="75:72">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="77:17" pos:end="77:71"><expr pos:start="77:17" pos:end="77:70"><call pos:start="77:17" pos:end="77:70"><name pos:start="77:17" pos:end="77:31">tcg_out_ld32_12</name><argument_list pos:start="77:32" pos:end="77:70">(<argument pos:start="77:33" pos:end="77:33"><expr pos:start="77:33" pos:end="77:33"><name pos:start="77:33" pos:end="77:33">s</name></expr></argument>, <argument pos:start="77:36" pos:end="77:42"><expr pos:start="77:36" pos:end="77:42"><name pos:start="77:36" pos:end="77:42">COND_AL</name></expr></argument>, <argument pos:start="77:45" pos:end="77:54"><expr pos:start="77:45" pos:end="77:54"><name pos:start="77:45" pos:end="77:54">TCG_REG_PC</name></expr></argument>, <argument pos:start="77:57" pos:end="77:66"><expr pos:start="77:57" pos:end="77:66"><name pos:start="77:57" pos:end="77:66">TCG_REG_R0</name></expr></argument>, <argument pos:start="77:69" pos:end="77:69"><expr pos:start="77:69" pos:end="77:69"><literal type="number" pos:start="77:69" pos:end="77:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="79:15" pos:end="84:0">else<block type="pseudo" pos:start="81:17" pos:end="84:0"><block_content pos:start="81:17" pos:end="84:0">

                <expr_stmt pos:start="81:17" pos:end="84:0"><expr pos:start="81:17" pos:end="81:70"><call pos:start="81:17" pos:end="81:70"><name pos:start="81:17" pos:end="81:31">tcg_out_ld32_12</name><argument_list pos:start="81:32" pos:end="81:70">(<argument pos:start="81:33" pos:end="81:33"><expr pos:start="81:33" pos:end="81:33"><name pos:start="81:33" pos:end="81:33">s</name></expr></argument>, <argument pos:start="81:36" pos:end="81:42"><expr pos:start="81:36" pos:end="81:42"><name pos:start="81:36" pos:end="81:42">COND_AL</name></expr></argument>, <argument pos:start="81:45" pos:end="81:54"><expr pos:start="81:45" pos:end="81:54"><name pos:start="81:45" pos:end="81:54">TCG_REG_PC</name></expr></argument>, <argument pos:start="81:57" pos:end="81:66"><expr pos:start="81:57" pos:end="81:66"><name pos:start="81:57" pos:end="81:66">TCG_REG_PC</name></expr></argument>, <argument pos:start="81:69" pos:end="81:69"><expr pos:start="81:69" pos:end="81:69"><name pos:start="81:69" pos:end="81:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<cpp:else pos:start="83:1" pos:end="83:5">#<cpp:directive pos:start="83:2" pos:end="83:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="85:13" pos:end="85:67"><expr pos:start="85:13" pos:end="85:66"><call pos:start="85:13" pos:end="85:66"><name pos:start="85:13" pos:end="85:27">tcg_out_ld32_12</name><argument_list pos:start="85:28" pos:end="85:66">(<argument pos:start="85:29" pos:end="85:29"><expr pos:start="85:29" pos:end="85:29"><name pos:start="85:29" pos:end="85:29">s</name></expr></argument>, <argument pos:start="85:32" pos:end="85:38"><expr pos:start="85:32" pos:end="85:38"><name pos:start="85:32" pos:end="85:38">COND_AL</name></expr></argument>, <argument pos:start="85:41" pos:end="85:50"><expr pos:start="85:41" pos:end="85:50"><name pos:start="85:41" pos:end="85:50">TCG_REG_R0</name></expr></argument>, <argument pos:start="85:53" pos:end="85:62"><expr pos:start="85:53" pos:end="85:62"><name pos:start="85:53" pos:end="85:62">TCG_REG_PC</name></expr></argument>, <argument pos:start="85:65" pos:end="85:65"><expr pos:start="85:65" pos:end="85:65"><literal type="number" pos:start="85:65" pos:end="85:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="87:13" pos:end="87:67"><expr pos:start="87:13" pos:end="87:66"><call pos:start="87:13" pos:end="87:66"><name pos:start="87:13" pos:end="87:27">tcg_out_ld32_12</name><argument_list pos:start="87:28" pos:end="87:66">(<argument pos:start="87:29" pos:end="87:29"><expr pos:start="87:29" pos:end="87:29"><name pos:start="87:29" pos:end="87:29">s</name></expr></argument>, <argument pos:start="87:32" pos:end="87:38"><expr pos:start="87:32" pos:end="87:38"><name pos:start="87:32" pos:end="87:38">COND_AL</name></expr></argument>, <argument pos:start="87:41" pos:end="87:50"><expr pos:start="87:41" pos:end="87:50"><name pos:start="87:41" pos:end="87:50">TCG_REG_PC</name></expr></argument>, <argument pos:start="87:53" pos:end="87:62"><expr pos:start="87:53" pos:end="87:62"><name pos:start="87:53" pos:end="87:62">TCG_REG_R0</name></expr></argument>, <argument pos:start="87:65" pos:end="87:65"><expr pos:start="87:65" pos:end="87:65"><literal type="number" pos:start="87:65" pos:end="87:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="89:13" pos:end="92:0"><expr pos:start="89:13" pos:end="89:66"><call pos:start="89:13" pos:end="89:66"><name pos:start="89:13" pos:end="89:21">tcg_out32</name><argument_list pos:start="89:22" pos:end="89:66">(<argument pos:start="89:23" pos:end="89:23"><expr pos:start="89:23" pos:end="89:23"><name pos:start="89:23" pos:end="89:23">s</name></expr></argument>, <argument pos:start="89:26" pos:end="89:65"><expr pos:start="89:26" pos:end="89:65"><operator pos:start="89:26" pos:end="89:26">(</operator><name pos:start="89:27" pos:end="89:41">tcg_target_long</name><operator pos:start="89:42" pos:end="89:42">)</operator> <operator pos:start="89:44" pos:end="89:44">(</operator><name pos:start="89:45" pos:end="89:54"><name pos:start="89:45" pos:end="89:45">s</name><operator pos:start="89:46" pos:end="89:47">-&gt;</operator><name pos:start="89:48" pos:end="89:54">tb_next</name></name> <operator pos:start="89:56" pos:end="89:56">+</operator> <name pos:start="89:58" pos:end="89:64"><name pos:start="89:58" pos:end="89:61">args</name><index pos:start="89:62" pos:end="89:64">[<expr pos:start="89:63" pos:end="89:63"><literal type="number" pos:start="89:63" pos:end="89:63">0</literal></expr>]</index></name><operator pos:start="89:65" pos:end="89:65">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="91:1" pos:end="91:6">#<cpp:directive pos:start="91:2" pos:end="91:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:63"><expr pos:start="95:9" pos:end="95:62"><name pos:start="95:9" pos:end="95:34"><name pos:start="95:9" pos:end="95:9">s</name><operator pos:start="95:10" pos:end="95:11">-&gt;</operator><name pos:start="95:12" pos:end="95:25">tb_next_offset</name><index pos:start="95:26" pos:end="95:34">[<expr pos:start="95:27" pos:end="95:33"><name pos:start="95:27" pos:end="95:33"><name pos:start="95:27" pos:end="95:30">args</name><index pos:start="95:31" pos:end="95:33">[<expr pos:start="95:32" pos:end="95:32"><literal type="number" pos:start="95:32" pos:end="95:32">0</literal></expr>]</index></name></expr>]</index></name> <operator pos:start="95:36" pos:end="95:36">=</operator> <name pos:start="95:38" pos:end="95:48"><name pos:start="95:38" pos:end="95:38">s</name><operator pos:start="95:39" pos:end="95:40">-&gt;</operator><name pos:start="95:41" pos:end="95:48">code_ptr</name></name> <operator pos:start="95:50" pos:end="95:50">-</operator> <name pos:start="95:52" pos:end="95:62"><name pos:start="95:52" pos:end="95:52">s</name><operator pos:start="95:53" pos:end="95:54">-&gt;</operator><name pos:start="95:55" pos:end="95:62">code_buf</name></name></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:23">case <expr pos:start="99:10" pos:end="99:22"><name pos:start="99:10" pos:end="99:22">INDEX_op_call</name></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="107:47"><if pos:start="101:9" pos:end="103:37">if <condition pos:start="101:12" pos:end="101:26">(<expr pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:25"><name pos:start="101:13" pos:end="101:22">const_args</name><index pos:start="101:23" pos:end="101:25">[<expr pos:start="101:24" pos:end="101:24"><literal type="number" pos:start="101:24" pos:end="101:24">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:37"><block_content pos:start="103:13" pos:end="103:37">

            <expr_stmt pos:start="103:13" pos:end="103:37"><expr pos:start="103:13" pos:end="103:36"><call pos:start="103:13" pos:end="103:36"><name pos:start="103:13" pos:end="103:24">tcg_out_call</name><argument_list pos:start="103:25" pos:end="103:36">(<argument pos:start="103:26" pos:end="103:26"><expr pos:start="103:26" pos:end="103:26"><name pos:start="103:26" pos:end="103:26">s</name></expr></argument>, <argument pos:start="103:29" pos:end="103:35"><expr pos:start="103:29" pos:end="103:35"><name pos:start="103:29" pos:end="103:35"><name pos:start="103:29" pos:end="103:32">args</name><index pos:start="103:33" pos:end="103:35">[<expr pos:start="103:34" pos:end="103:34"><literal type="number" pos:start="103:34" pos:end="103:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="105:9" pos:end="107:47">else<block type="pseudo" pos:start="107:13" pos:end="107:47"><block_content pos:start="107:13" pos:end="107:47">

            <expr_stmt pos:start="107:13" pos:end="107:47"><expr pos:start="107:13" pos:end="107:46"><call pos:start="107:13" pos:end="107:46"><name pos:start="107:13" pos:end="107:25">tcg_out_callr</name><argument_list pos:start="107:26" pos:end="107:46">(<argument pos:start="107:27" pos:end="107:27"><expr pos:start="107:27" pos:end="107:27"><name pos:start="107:27" pos:end="107:27">s</name></expr></argument>, <argument pos:start="107:30" pos:end="107:36"><expr pos:start="107:30" pos:end="107:36"><name pos:start="107:30" pos:end="107:36">COND_AL</name></expr></argument>, <argument pos:start="107:39" pos:end="107:45"><expr pos:start="107:39" pos:end="107:45"><name pos:start="107:39" pos:end="107:45"><name pos:start="107:39" pos:end="107:42">args</name><index pos:start="107:43" pos:end="107:45">[<expr pos:start="107:44" pos:end="107:44"><literal type="number" pos:start="107:44" pos:end="107:44">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <break pos:start="109:9" pos:end="109:14">break;</break>

    <case pos:start="111:5" pos:end="111:21">case <expr pos:start="111:10" pos:end="111:20"><name pos:start="111:10" pos:end="111:20">INDEX_op_br</name></expr>:</case>

        <expr_stmt pos:start="113:9" pos:end="113:48"><expr pos:start="113:9" pos:end="113:47"><call pos:start="113:9" pos:end="113:47"><name pos:start="113:9" pos:end="113:26">tcg_out_goto_label</name><argument_list pos:start="113:27" pos:end="113:47">(<argument pos:start="113:28" pos:end="113:28"><expr pos:start="113:28" pos:end="113:28"><name pos:start="113:28" pos:end="113:28">s</name></expr></argument>, <argument pos:start="113:31" pos:end="113:37"><expr pos:start="113:31" pos:end="113:37"><name pos:start="113:31" pos:end="113:37">COND_AL</name></expr></argument>, <argument pos:start="113:40" pos:end="113:46"><expr pos:start="113:40" pos:end="113:46"><name pos:start="113:40" pos:end="113:46"><name pos:start="113:40" pos:end="113:43">args</name><index pos:start="113:44" pos:end="113:46">[<expr pos:start="113:45" pos:end="113:45"><literal type="number" pos:start="113:45" pos:end="113:45">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>



    <case pos:start="119:5" pos:end="119:27">case <expr pos:start="119:10" pos:end="119:26"><name pos:start="119:10" pos:end="119:26">INDEX_op_ld8u_i32</name></expr>:</case>

        <expr_stmt pos:start="121:9" pos:end="121:60"><expr pos:start="121:9" pos:end="121:59"><call pos:start="121:9" pos:end="121:59"><name pos:start="121:9" pos:end="121:20">tcg_out_ld8u</name><argument_list pos:start="121:21" pos:end="121:59">(<argument pos:start="121:22" pos:end="121:22"><expr pos:start="121:22" pos:end="121:22"><name pos:start="121:22" pos:end="121:22">s</name></expr></argument>, <argument pos:start="121:25" pos:end="121:31"><expr pos:start="121:25" pos:end="121:31"><name pos:start="121:25" pos:end="121:31">COND_AL</name></expr></argument>, <argument pos:start="121:34" pos:end="121:40"><expr pos:start="121:34" pos:end="121:40"><name pos:start="121:34" pos:end="121:40"><name pos:start="121:34" pos:end="121:37">args</name><index pos:start="121:38" pos:end="121:40">[<expr pos:start="121:39" pos:end="121:39"><literal type="number" pos:start="121:39" pos:end="121:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:43" pos:end="121:49"><expr pos:start="121:43" pos:end="121:49"><name pos:start="121:43" pos:end="121:49"><name pos:start="121:43" pos:end="121:46">args</name><index pos:start="121:47" pos:end="121:49">[<expr pos:start="121:48" pos:end="121:48"><literal type="number" pos:start="121:48" pos:end="121:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:52" pos:end="121:58"><expr pos:start="121:52" pos:end="121:58"><name pos:start="121:52" pos:end="121:58"><name pos:start="121:52" pos:end="121:55">args</name><index pos:start="121:56" pos:end="121:58">[<expr pos:start="121:57" pos:end="121:57"><literal type="number" pos:start="121:57" pos:end="121:57">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:27">case <expr pos:start="125:10" pos:end="125:26"><name pos:start="125:10" pos:end="125:26">INDEX_op_ld8s_i32</name></expr>:</case>

        <expr_stmt pos:start="127:9" pos:end="127:60"><expr pos:start="127:9" pos:end="127:59"><call pos:start="127:9" pos:end="127:59"><name pos:start="127:9" pos:end="127:20">tcg_out_ld8s</name><argument_list pos:start="127:21" pos:end="127:59">(<argument pos:start="127:22" pos:end="127:22"><expr pos:start="127:22" pos:end="127:22"><name pos:start="127:22" pos:end="127:22">s</name></expr></argument>, <argument pos:start="127:25" pos:end="127:31"><expr pos:start="127:25" pos:end="127:31"><name pos:start="127:25" pos:end="127:31">COND_AL</name></expr></argument>, <argument pos:start="127:34" pos:end="127:40"><expr pos:start="127:34" pos:end="127:40"><name pos:start="127:34" pos:end="127:40"><name pos:start="127:34" pos:end="127:37">args</name><index pos:start="127:38" pos:end="127:40">[<expr pos:start="127:39" pos:end="127:39"><literal type="number" pos:start="127:39" pos:end="127:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:43" pos:end="127:49"><expr pos:start="127:43" pos:end="127:49"><name pos:start="127:43" pos:end="127:49"><name pos:start="127:43" pos:end="127:46">args</name><index pos:start="127:47" pos:end="127:49">[<expr pos:start="127:48" pos:end="127:48"><literal type="number" pos:start="127:48" pos:end="127:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="127:52" pos:end="127:58"><expr pos:start="127:52" pos:end="127:58"><name pos:start="127:52" pos:end="127:58"><name pos:start="127:52" pos:end="127:55">args</name><index pos:start="127:56" pos:end="127:58">[<expr pos:start="127:57" pos:end="127:57"><literal type="number" pos:start="127:57" pos:end="127:57">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <case pos:start="131:5" pos:end="131:28">case <expr pos:start="131:10" pos:end="131:27"><name pos:start="131:10" pos:end="131:27">INDEX_op_ld16u_i32</name></expr>:</case>

        <expr_stmt pos:start="133:9" pos:end="133:61"><expr pos:start="133:9" pos:end="133:60"><call pos:start="133:9" pos:end="133:60"><name pos:start="133:9" pos:end="133:21">tcg_out_ld16u</name><argument_list pos:start="133:22" pos:end="133:60">(<argument pos:start="133:23" pos:end="133:23"><expr pos:start="133:23" pos:end="133:23"><name pos:start="133:23" pos:end="133:23">s</name></expr></argument>, <argument pos:start="133:26" pos:end="133:32"><expr pos:start="133:26" pos:end="133:32"><name pos:start="133:26" pos:end="133:32">COND_AL</name></expr></argument>, <argument pos:start="133:35" pos:end="133:41"><expr pos:start="133:35" pos:end="133:41"><name pos:start="133:35" pos:end="133:41"><name pos:start="133:35" pos:end="133:38">args</name><index pos:start="133:39" pos:end="133:41">[<expr pos:start="133:40" pos:end="133:40"><literal type="number" pos:start="133:40" pos:end="133:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:44" pos:end="133:50"><expr pos:start="133:44" pos:end="133:50"><name pos:start="133:44" pos:end="133:50"><name pos:start="133:44" pos:end="133:47">args</name><index pos:start="133:48" pos:end="133:50">[<expr pos:start="133:49" pos:end="133:49"><literal type="number" pos:start="133:49" pos:end="133:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="133:53" pos:end="133:59"><expr pos:start="133:53" pos:end="133:59"><name pos:start="133:53" pos:end="133:59"><name pos:start="133:53" pos:end="133:56">args</name><index pos:start="133:57" pos:end="133:59">[<expr pos:start="133:58" pos:end="133:58"><literal type="number" pos:start="133:58" pos:end="133:58">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="135:9" pos:end="135:14">break;</break>

    <case pos:start="137:5" pos:end="137:28">case <expr pos:start="137:10" pos:end="137:27"><name pos:start="137:10" pos:end="137:27">INDEX_op_ld16s_i32</name></expr>:</case>

        <expr_stmt pos:start="139:9" pos:end="139:61"><expr pos:start="139:9" pos:end="139:60"><call pos:start="139:9" pos:end="139:60"><name pos:start="139:9" pos:end="139:21">tcg_out_ld16s</name><argument_list pos:start="139:22" pos:end="139:60">(<argument pos:start="139:23" pos:end="139:23"><expr pos:start="139:23" pos:end="139:23"><name pos:start="139:23" pos:end="139:23">s</name></expr></argument>, <argument pos:start="139:26" pos:end="139:32"><expr pos:start="139:26" pos:end="139:32"><name pos:start="139:26" pos:end="139:32">COND_AL</name></expr></argument>, <argument pos:start="139:35" pos:end="139:41"><expr pos:start="139:35" pos:end="139:41"><name pos:start="139:35" pos:end="139:41"><name pos:start="139:35" pos:end="139:38">args</name><index pos:start="139:39" pos:end="139:41">[<expr pos:start="139:40" pos:end="139:40"><literal type="number" pos:start="139:40" pos:end="139:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="139:44" pos:end="139:50"><expr pos:start="139:44" pos:end="139:50"><name pos:start="139:44" pos:end="139:50"><name pos:start="139:44" pos:end="139:47">args</name><index pos:start="139:48" pos:end="139:50">[<expr pos:start="139:49" pos:end="139:49"><literal type="number" pos:start="139:49" pos:end="139:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="139:53" pos:end="139:59"><expr pos:start="139:53" pos:end="139:59"><name pos:start="139:53" pos:end="139:59"><name pos:start="139:53" pos:end="139:56">args</name><index pos:start="139:57" pos:end="139:59">[<expr pos:start="139:58" pos:end="139:58"><literal type="number" pos:start="139:58" pos:end="139:58">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:25">case <expr pos:start="143:10" pos:end="143:24"><name pos:start="143:10" pos:end="143:24">INDEX_op_ld_i32</name></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:61"><expr pos:start="145:9" pos:end="145:60"><call pos:start="145:9" pos:end="145:60"><name pos:start="145:9" pos:end="145:21">tcg_out_ld32u</name><argument_list pos:start="145:22" pos:end="145:60">(<argument pos:start="145:23" pos:end="145:23"><expr pos:start="145:23" pos:end="145:23"><name pos:start="145:23" pos:end="145:23">s</name></expr></argument>, <argument pos:start="145:26" pos:end="145:32"><expr pos:start="145:26" pos:end="145:32"><name pos:start="145:26" pos:end="145:32">COND_AL</name></expr></argument>, <argument pos:start="145:35" pos:end="145:41"><expr pos:start="145:35" pos:end="145:41"><name pos:start="145:35" pos:end="145:41"><name pos:start="145:35" pos:end="145:38">args</name><index pos:start="145:39" pos:end="145:41">[<expr pos:start="145:40" pos:end="145:40"><literal type="number" pos:start="145:40" pos:end="145:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="145:44" pos:end="145:50"><expr pos:start="145:44" pos:end="145:50"><name pos:start="145:44" pos:end="145:50"><name pos:start="145:44" pos:end="145:47">args</name><index pos:start="145:48" pos:end="145:50">[<expr pos:start="145:49" pos:end="145:49"><literal type="number" pos:start="145:49" pos:end="145:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="145:53" pos:end="145:59"><expr pos:start="145:53" pos:end="145:59"><name pos:start="145:53" pos:end="145:59"><name pos:start="145:53" pos:end="145:56">args</name><index pos:start="145:57" pos:end="145:59">[<expr pos:start="145:58" pos:end="145:58"><literal type="number" pos:start="145:58" pos:end="145:58">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:26">case <expr pos:start="149:10" pos:end="149:25"><name pos:start="149:10" pos:end="149:25">INDEX_op_st8_i32</name></expr>:</case>

        <expr_stmt pos:start="151:9" pos:end="151:59"><expr pos:start="151:9" pos:end="151:58"><call pos:start="151:9" pos:end="151:58"><name pos:start="151:9" pos:end="151:19">tcg_out_st8</name><argument_list pos:start="151:20" pos:end="151:58">(<argument pos:start="151:21" pos:end="151:21"><expr pos:start="151:21" pos:end="151:21"><name pos:start="151:21" pos:end="151:21">s</name></expr></argument>, <argument pos:start="151:24" pos:end="151:30"><expr pos:start="151:24" pos:end="151:30"><name pos:start="151:24" pos:end="151:30">COND_AL</name></expr></argument>, <argument pos:start="151:33" pos:end="151:39"><expr pos:start="151:33" pos:end="151:39"><name pos:start="151:33" pos:end="151:39"><name pos:start="151:33" pos:end="151:36">args</name><index pos:start="151:37" pos:end="151:39">[<expr pos:start="151:38" pos:end="151:38"><literal type="number" pos:start="151:38" pos:end="151:38">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:42" pos:end="151:48"><expr pos:start="151:42" pos:end="151:48"><name pos:start="151:42" pos:end="151:48"><name pos:start="151:42" pos:end="151:45">args</name><index pos:start="151:46" pos:end="151:48">[<expr pos:start="151:47" pos:end="151:47"><literal type="number" pos:start="151:47" pos:end="151:47">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="151:51" pos:end="151:57"><expr pos:start="151:51" pos:end="151:57"><name pos:start="151:51" pos:end="151:57"><name pos:start="151:51" pos:end="151:54">args</name><index pos:start="151:55" pos:end="151:57">[<expr pos:start="151:56" pos:end="151:56"><literal type="number" pos:start="151:56" pos:end="151:56">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:27">case <expr pos:start="155:10" pos:end="155:26"><name pos:start="155:10" pos:end="155:26">INDEX_op_st16_i32</name></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:60"><expr pos:start="157:9" pos:end="157:59"><call pos:start="157:9" pos:end="157:59"><name pos:start="157:9" pos:end="157:20">tcg_out_st16</name><argument_list pos:start="157:21" pos:end="157:59">(<argument pos:start="157:22" pos:end="157:22"><expr pos:start="157:22" pos:end="157:22"><name pos:start="157:22" pos:end="157:22">s</name></expr></argument>, <argument pos:start="157:25" pos:end="157:31"><expr pos:start="157:25" pos:end="157:31"><name pos:start="157:25" pos:end="157:31">COND_AL</name></expr></argument>, <argument pos:start="157:34" pos:end="157:40"><expr pos:start="157:34" pos:end="157:40"><name pos:start="157:34" pos:end="157:40"><name pos:start="157:34" pos:end="157:37">args</name><index pos:start="157:38" pos:end="157:40">[<expr pos:start="157:39" pos:end="157:39"><literal type="number" pos:start="157:39" pos:end="157:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:43" pos:end="157:49"><expr pos:start="157:43" pos:end="157:49"><name pos:start="157:43" pos:end="157:49"><name pos:start="157:43" pos:end="157:46">args</name><index pos:start="157:47" pos:end="157:49">[<expr pos:start="157:48" pos:end="157:48"><literal type="number" pos:start="157:48" pos:end="157:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="157:52" pos:end="157:58"><expr pos:start="157:52" pos:end="157:58"><name pos:start="157:52" pos:end="157:58"><name pos:start="157:52" pos:end="157:55">args</name><index pos:start="157:56" pos:end="157:58">[<expr pos:start="157:57" pos:end="157:57"><literal type="number" pos:start="157:57" pos:end="157:57">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:25">case <expr pos:start="161:10" pos:end="161:24"><name pos:start="161:10" pos:end="161:24">INDEX_op_st_i32</name></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:60"><expr pos:start="163:9" pos:end="163:59"><call pos:start="163:9" pos:end="163:59"><name pos:start="163:9" pos:end="163:20">tcg_out_st32</name><argument_list pos:start="163:21" pos:end="163:59">(<argument pos:start="163:22" pos:end="163:22"><expr pos:start="163:22" pos:end="163:22"><name pos:start="163:22" pos:end="163:22">s</name></expr></argument>, <argument pos:start="163:25" pos:end="163:31"><expr pos:start="163:25" pos:end="163:31"><name pos:start="163:25" pos:end="163:31">COND_AL</name></expr></argument>, <argument pos:start="163:34" pos:end="163:40"><expr pos:start="163:34" pos:end="163:40"><name pos:start="163:34" pos:end="163:40"><name pos:start="163:34" pos:end="163:37">args</name><index pos:start="163:38" pos:end="163:40">[<expr pos:start="163:39" pos:end="163:39"><literal type="number" pos:start="163:39" pos:end="163:39">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="163:43" pos:end="163:49"><expr pos:start="163:43" pos:end="163:49"><name pos:start="163:43" pos:end="163:49"><name pos:start="163:43" pos:end="163:46">args</name><index pos:start="163:47" pos:end="163:49">[<expr pos:start="163:48" pos:end="163:48"><literal type="number" pos:start="163:48" pos:end="163:48">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="163:52" pos:end="163:58"><expr pos:start="163:52" pos:end="163:58"><name pos:start="163:52" pos:end="163:58"><name pos:start="163:52" pos:end="163:55">args</name><index pos:start="163:56" pos:end="163:58">[<expr pos:start="163:57" pos:end="163:57"><literal type="number" pos:start="163:57" pos:end="163:57">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="165:9" pos:end="165:14">break;</break>



    <case pos:start="169:5" pos:end="169:26">case <expr pos:start="169:10" pos:end="169:25"><name pos:start="169:10" pos:end="169:25">INDEX_op_mov_i32</name></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="173:63"><expr pos:start="171:9" pos:end="173:62"><call pos:start="171:9" pos:end="173:62"><name pos:start="171:9" pos:end="171:23">tcg_out_dat_reg</name><argument_list pos:start="171:24" pos:end="173:62">(<argument pos:start="171:25" pos:end="171:25"><expr pos:start="171:25" pos:end="171:25"><name pos:start="171:25" pos:end="171:25">s</name></expr></argument>, <argument pos:start="171:28" pos:end="171:34"><expr pos:start="171:28" pos:end="171:34"><name pos:start="171:28" pos:end="171:34">COND_AL</name></expr></argument>, <argument pos:start="171:37" pos:end="171:45"><expr pos:start="171:37" pos:end="171:45"><name pos:start="171:37" pos:end="171:45">ARITH_MOV</name></expr></argument>,

                        <argument pos:start="173:25" pos:end="173:31"><expr pos:start="173:25" pos:end="173:31"><name pos:start="173:25" pos:end="173:31"><name pos:start="173:25" pos:end="173:28">args</name><index pos:start="173:29" pos:end="173:31">[<expr pos:start="173:30" pos:end="173:30"><literal type="number" pos:start="173:30" pos:end="173:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:34" pos:end="173:34"><expr pos:start="173:34" pos:end="173:34"><literal type="number" pos:start="173:34" pos:end="173:34">0</literal></expr></argument>, <argument pos:start="173:37" pos:end="173:43"><expr pos:start="173:37" pos:end="173:43"><name pos:start="173:37" pos:end="173:43"><name pos:start="173:37" pos:end="173:40">args</name><index pos:start="173:41" pos:end="173:43">[<expr pos:start="173:42" pos:end="173:42"><literal type="number" pos:start="173:42" pos:end="173:42">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="173:46" pos:end="173:61"><expr pos:start="173:46" pos:end="173:61"><call pos:start="173:46" pos:end="173:61"><name pos:start="173:46" pos:end="173:58">SHIFT_IMM_LSL</name><argument_list pos:start="173:59" pos:end="173:61">(<argument pos:start="173:60" pos:end="173:60"><expr pos:start="173:60" pos:end="173:60"><literal type="number" pos:start="173:60" pos:end="173:60">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:27">case <expr pos:start="177:10" pos:end="177:26"><name pos:start="177:10" pos:end="177:26">INDEX_op_movi_i32</name></expr>:</case>

        <expr_stmt pos:start="179:9" pos:end="179:53"><expr pos:start="179:9" pos:end="179:52"><call pos:start="179:9" pos:end="179:52"><name pos:start="179:9" pos:end="179:22">tcg_out_movi32</name><argument_list pos:start="179:23" pos:end="179:52">(<argument pos:start="179:24" pos:end="179:24"><expr pos:start="179:24" pos:end="179:24"><name pos:start="179:24" pos:end="179:24">s</name></expr></argument>, <argument pos:start="179:27" pos:end="179:33"><expr pos:start="179:27" pos:end="179:33"><name pos:start="179:27" pos:end="179:33">COND_AL</name></expr></argument>, <argument pos:start="179:36" pos:end="179:42"><expr pos:start="179:36" pos:end="179:42"><name pos:start="179:36" pos:end="179:42"><name pos:start="179:36" pos:end="179:39">args</name><index pos:start="179:40" pos:end="179:42">[<expr pos:start="179:41" pos:end="179:41"><literal type="number" pos:start="179:41" pos:end="179:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="179:45" pos:end="179:51"><expr pos:start="179:45" pos:end="179:51"><name pos:start="179:45" pos:end="179:51"><name pos:start="179:45" pos:end="179:48">args</name><index pos:start="179:49" pos:end="179:51">[<expr pos:start="179:50" pos:end="179:50"><literal type="number" pos:start="179:50" pos:end="179:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <case pos:start="183:5" pos:end="183:30">case <expr pos:start="183:10" pos:end="183:29"><name pos:start="183:10" pos:end="183:29">INDEX_op_movcond_i32</name></expr>:</case>

        <comment type="block" pos:start="185:9" pos:end="189:11">/* Constraints mean that v2 is always in the same register as dest,

         * so we only need to do "if condition passed, move v1 to dest".

         */</comment>

        <expr_stmt pos:start="191:9" pos:end="193:56"><expr pos:start="191:9" pos:end="193:55"><call pos:start="191:9" pos:end="193:55"><name pos:start="191:9" pos:end="191:22">tcg_out_dat_rI</name><argument_list pos:start="191:23" pos:end="193:55">(<argument pos:start="191:24" pos:end="191:24"><expr pos:start="191:24" pos:end="191:24"><name pos:start="191:24" pos:end="191:24">s</name></expr></argument>, <argument pos:start="191:27" pos:end="191:33"><expr pos:start="191:27" pos:end="191:33"><name pos:start="191:27" pos:end="191:33">COND_AL</name></expr></argument>, <argument pos:start="191:36" pos:end="191:44"><expr pos:start="191:36" pos:end="191:44"><name pos:start="191:36" pos:end="191:44">ARITH_CMP</name></expr></argument>, <argument pos:start="191:47" pos:end="191:47"><expr pos:start="191:47" pos:end="191:47"><literal type="number" pos:start="191:47" pos:end="191:47">0</literal></expr></argument>,

                       <argument pos:start="193:24" pos:end="193:30"><expr pos:start="193:24" pos:end="193:30"><name pos:start="193:24" pos:end="193:30"><name pos:start="193:24" pos:end="193:27">args</name><index pos:start="193:28" pos:end="193:30">[<expr pos:start="193:29" pos:end="193:29"><literal type="number" pos:start="193:29" pos:end="193:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:33" pos:end="193:39"><expr pos:start="193:33" pos:end="193:39"><name pos:start="193:33" pos:end="193:39"><name pos:start="193:33" pos:end="193:36">args</name><index pos:start="193:37" pos:end="193:39">[<expr pos:start="193:38" pos:end="193:38"><literal type="number" pos:start="193:38" pos:end="193:38">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="193:42" pos:end="193:54"><expr pos:start="193:42" pos:end="193:54"><name pos:start="193:42" pos:end="193:54"><name pos:start="193:42" pos:end="193:51">const_args</name><index pos:start="193:52" pos:end="193:54">[<expr pos:start="193:53" pos:end="193:53"><literal type="number" pos:start="193:53" pos:end="193:53">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="195:9" pos:end="197:70"><expr pos:start="195:9" pos:end="197:69"><call pos:start="195:9" pos:end="197:69"><name pos:start="195:9" pos:end="195:22">tcg_out_dat_rI</name><argument_list pos:start="195:23" pos:end="197:69">(<argument pos:start="195:24" pos:end="195:24"><expr pos:start="195:24" pos:end="195:24"><name pos:start="195:24" pos:end="195:24">s</name></expr></argument>, <argument pos:start="195:27" pos:end="195:55"><expr pos:start="195:27" pos:end="195:55"><name pos:start="195:27" pos:end="195:55"><name pos:start="195:27" pos:end="195:46">tcg_cond_to_arm_cond</name><index pos:start="195:47" pos:end="195:55">[<expr pos:start="195:48" pos:end="195:54"><name pos:start="195:48" pos:end="195:54"><name pos:start="195:48" pos:end="195:51">args</name><index pos:start="195:52" pos:end="195:54">[<expr pos:start="195:53" pos:end="195:53"><literal type="number" pos:start="195:53" pos:end="195:53">5</literal></expr>]</index></name></expr>]</index></name></expr></argument>,

                       <argument pos:start="197:24" pos:end="197:32"><expr pos:start="197:24" pos:end="197:32"><name pos:start="197:24" pos:end="197:32">ARITH_MOV</name></expr></argument>, <argument pos:start="197:35" pos:end="197:41"><expr pos:start="197:35" pos:end="197:41"><name pos:start="197:35" pos:end="197:41"><name pos:start="197:35" pos:end="197:38">args</name><index pos:start="197:39" pos:end="197:41">[<expr pos:start="197:40" pos:end="197:40"><literal type="number" pos:start="197:40" pos:end="197:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="197:44" pos:end="197:44"><expr pos:start="197:44" pos:end="197:44"><literal type="number" pos:start="197:44" pos:end="197:44">0</literal></expr></argument>, <argument pos:start="197:47" pos:end="197:53"><expr pos:start="197:47" pos:end="197:53"><name pos:start="197:47" pos:end="197:53"><name pos:start="197:47" pos:end="197:50">args</name><index pos:start="197:51" pos:end="197:53">[<expr pos:start="197:52" pos:end="197:52"><literal type="number" pos:start="197:52" pos:end="197:52">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="197:56" pos:end="197:68"><expr pos:start="197:56" pos:end="197:68"><name pos:start="197:56" pos:end="197:68"><name pos:start="197:56" pos:end="197:65">const_args</name><index pos:start="197:66" pos:end="197:68">[<expr pos:start="197:67" pos:end="197:67"><literal type="number" pos:start="197:67" pos:end="197:67">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="199:9" pos:end="199:14">break;</break>

    <case pos:start="201:5" pos:end="201:26">case <expr pos:start="201:10" pos:end="201:25"><name pos:start="201:10" pos:end="201:25">INDEX_op_add_i32</name></expr>:</case>

        <expr_stmt pos:start="203:9" pos:end="203:22"><expr pos:start="203:9" pos:end="203:21"><name pos:start="203:9" pos:end="203:9">c</name> <operator pos:start="203:11" pos:end="203:11">=</operator> <name pos:start="203:13" pos:end="203:21">ARITH_ADD</name></expr>;</expr_stmt>

        <goto pos:start="205:9" pos:end="205:23">goto <name pos:start="205:14" pos:end="205:22">gen_arith</name>;</goto>

    <case pos:start="207:5" pos:end="207:26">case <expr pos:start="207:10" pos:end="207:25"><name pos:start="207:10" pos:end="207:25">INDEX_op_sub_i32</name></expr>:</case>

        <expr_stmt pos:start="209:9" pos:end="209:22"><expr pos:start="209:9" pos:end="209:21"><name pos:start="209:9" pos:end="209:9">c</name> <operator pos:start="209:11" pos:end="209:11">=</operator> <name pos:start="209:13" pos:end="209:21">ARITH_SUB</name></expr>;</expr_stmt>

        <goto pos:start="211:9" pos:end="211:23">goto <name pos:start="211:14" pos:end="211:22">gen_arith</name>;</goto>

    <case pos:start="213:5" pos:end="213:26">case <expr pos:start="213:10" pos:end="213:25"><name pos:start="213:10" pos:end="213:25">INDEX_op_and_i32</name></expr>:</case>

        <expr_stmt pos:start="215:9" pos:end="217:66"><expr pos:start="215:9" pos:end="217:65"><call pos:start="215:9" pos:end="217:65"><name pos:start="215:9" pos:end="215:23">tcg_out_dat_rIK</name><argument_list pos:start="215:24" pos:end="217:65">(<argument pos:start="215:25" pos:end="215:25"><expr pos:start="215:25" pos:end="215:25"><name pos:start="215:25" pos:end="215:25">s</name></expr></argument>, <argument pos:start="215:28" pos:end="215:34"><expr pos:start="215:28" pos:end="215:34"><name pos:start="215:28" pos:end="215:34">COND_AL</name></expr></argument>, <argument pos:start="215:37" pos:end="215:45"><expr pos:start="215:37" pos:end="215:45"><name pos:start="215:37" pos:end="215:45">ARITH_AND</name></expr></argument>, <argument pos:start="215:48" pos:end="215:56"><expr pos:start="215:48" pos:end="215:56"><name pos:start="215:48" pos:end="215:56">ARITH_BIC</name></expr></argument>,

                        <argument pos:start="217:25" pos:end="217:31"><expr pos:start="217:25" pos:end="217:31"><name pos:start="217:25" pos:end="217:31"><name pos:start="217:25" pos:end="217:28">args</name><index pos:start="217:29" pos:end="217:31">[<expr pos:start="217:30" pos:end="217:30"><literal type="number" pos:start="217:30" pos:end="217:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:34" pos:end="217:40"><expr pos:start="217:34" pos:end="217:40"><name pos:start="217:34" pos:end="217:40"><name pos:start="217:34" pos:end="217:37">args</name><index pos:start="217:38" pos:end="217:40">[<expr pos:start="217:39" pos:end="217:39"><literal type="number" pos:start="217:39" pos:end="217:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:43" pos:end="217:49"><expr pos:start="217:43" pos:end="217:49"><name pos:start="217:43" pos:end="217:49"><name pos:start="217:43" pos:end="217:46">args</name><index pos:start="217:47" pos:end="217:49">[<expr pos:start="217:48" pos:end="217:48"><literal type="number" pos:start="217:48" pos:end="217:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="217:52" pos:end="217:64"><expr pos:start="217:52" pos:end="217:64"><name pos:start="217:52" pos:end="217:64"><name pos:start="217:52" pos:end="217:61">const_args</name><index pos:start="217:62" pos:end="217:64">[<expr pos:start="217:63" pos:end="217:63"><literal type="number" pos:start="217:63" pos:end="217:63">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="219:9" pos:end="219:14">break;</break>

    <case pos:start="221:5" pos:end="221:27">case <expr pos:start="221:10" pos:end="221:26"><name pos:start="221:10" pos:end="221:26">INDEX_op_andc_i32</name></expr>:</case>

        <expr_stmt pos:start="223:9" pos:end="225:66"><expr pos:start="223:9" pos:end="225:65"><call pos:start="223:9" pos:end="225:65"><name pos:start="223:9" pos:end="223:23">tcg_out_dat_rIK</name><argument_list pos:start="223:24" pos:end="225:65">(<argument pos:start="223:25" pos:end="223:25"><expr pos:start="223:25" pos:end="223:25"><name pos:start="223:25" pos:end="223:25">s</name></expr></argument>, <argument pos:start="223:28" pos:end="223:34"><expr pos:start="223:28" pos:end="223:34"><name pos:start="223:28" pos:end="223:34">COND_AL</name></expr></argument>, <argument pos:start="223:37" pos:end="223:45"><expr pos:start="223:37" pos:end="223:45"><name pos:start="223:37" pos:end="223:45">ARITH_BIC</name></expr></argument>, <argument pos:start="223:48" pos:end="223:56"><expr pos:start="223:48" pos:end="223:56"><name pos:start="223:48" pos:end="223:56">ARITH_AND</name></expr></argument>,

                        <argument pos:start="225:25" pos:end="225:31"><expr pos:start="225:25" pos:end="225:31"><name pos:start="225:25" pos:end="225:31"><name pos:start="225:25" pos:end="225:28">args</name><index pos:start="225:29" pos:end="225:31">[<expr pos:start="225:30" pos:end="225:30"><literal type="number" pos:start="225:30" pos:end="225:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:34" pos:end="225:40"><expr pos:start="225:34" pos:end="225:40"><name pos:start="225:34" pos:end="225:40"><name pos:start="225:34" pos:end="225:37">args</name><index pos:start="225:38" pos:end="225:40">[<expr pos:start="225:39" pos:end="225:39"><literal type="number" pos:start="225:39" pos:end="225:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:43" pos:end="225:49"><expr pos:start="225:43" pos:end="225:49"><name pos:start="225:43" pos:end="225:49"><name pos:start="225:43" pos:end="225:46">args</name><index pos:start="225:47" pos:end="225:49">[<expr pos:start="225:48" pos:end="225:48"><literal type="number" pos:start="225:48" pos:end="225:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="225:52" pos:end="225:64"><expr pos:start="225:52" pos:end="225:64"><name pos:start="225:52" pos:end="225:64"><name pos:start="225:52" pos:end="225:61">const_args</name><index pos:start="225:62" pos:end="225:64">[<expr pos:start="225:63" pos:end="225:63"><literal type="number" pos:start="225:63" pos:end="225:63">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="227:9" pos:end="227:14">break;</break>

    <case pos:start="229:5" pos:end="229:25">case <expr pos:start="229:10" pos:end="229:24"><name pos:start="229:10" pos:end="229:24">INDEX_op_or_i32</name></expr>:</case>

        <expr_stmt pos:start="231:9" pos:end="231:22"><expr pos:start="231:9" pos:end="231:21"><name pos:start="231:9" pos:end="231:9">c</name> <operator pos:start="231:11" pos:end="231:11">=</operator> <name pos:start="231:13" pos:end="231:21">ARITH_ORR</name></expr>;</expr_stmt>

        <goto pos:start="233:9" pos:end="233:23">goto <name pos:start="233:14" pos:end="233:22">gen_arith</name>;</goto>

    <case pos:start="235:5" pos:end="235:26">case <expr pos:start="235:10" pos:end="235:25"><name pos:start="235:10" pos:end="235:25">INDEX_op_xor_i32</name></expr>:</case>

        <expr_stmt pos:start="237:9" pos:end="237:22"><expr pos:start="237:9" pos:end="237:21"><name pos:start="237:9" pos:end="237:9">c</name> <operator pos:start="237:11" pos:end="237:11">=</operator> <name pos:start="237:13" pos:end="237:21">ARITH_EOR</name></expr>;</expr_stmt>

        <comment type="block" pos:start="239:9" pos:end="239:28">/* Fall through.  */</comment>

    <label pos:start="241:5" pos:end="241:14"><name pos:start="241:5" pos:end="241:13">gen_arith</name>:</label>

        <expr_stmt pos:start="243:9" pos:end="243:80"><expr pos:start="243:9" pos:end="243:79"><call pos:start="243:9" pos:end="243:79"><name pos:start="243:9" pos:end="243:22">tcg_out_dat_rI</name><argument_list pos:start="243:23" pos:end="243:79">(<argument pos:start="243:24" pos:end="243:24"><expr pos:start="243:24" pos:end="243:24"><name pos:start="243:24" pos:end="243:24">s</name></expr></argument>, <argument pos:start="243:27" pos:end="243:33"><expr pos:start="243:27" pos:end="243:33"><name pos:start="243:27" pos:end="243:33">COND_AL</name></expr></argument>, <argument pos:start="243:36" pos:end="243:36"><expr pos:start="243:36" pos:end="243:36"><name pos:start="243:36" pos:end="243:36">c</name></expr></argument>, <argument pos:start="243:39" pos:end="243:45"><expr pos:start="243:39" pos:end="243:45"><name pos:start="243:39" pos:end="243:45"><name pos:start="243:39" pos:end="243:42">args</name><index pos:start="243:43" pos:end="243:45">[<expr pos:start="243:44" pos:end="243:44"><literal type="number" pos:start="243:44" pos:end="243:44">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:48" pos:end="243:54"><expr pos:start="243:48" pos:end="243:54"><name pos:start="243:48" pos:end="243:54"><name pos:start="243:48" pos:end="243:51">args</name><index pos:start="243:52" pos:end="243:54">[<expr pos:start="243:53" pos:end="243:53"><literal type="number" pos:start="243:53" pos:end="243:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:57" pos:end="243:63"><expr pos:start="243:57" pos:end="243:63"><name pos:start="243:57" pos:end="243:63"><name pos:start="243:57" pos:end="243:60">args</name><index pos:start="243:61" pos:end="243:63">[<expr pos:start="243:62" pos:end="243:62"><literal type="number" pos:start="243:62" pos:end="243:62">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="243:66" pos:end="243:78"><expr pos:start="243:66" pos:end="243:78"><name pos:start="243:66" pos:end="243:78"><name pos:start="243:66" pos:end="243:75">const_args</name><index pos:start="243:76" pos:end="243:78">[<expr pos:start="243:77" pos:end="243:77"><literal type="number" pos:start="243:77" pos:end="243:77">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="245:9" pos:end="245:14">break;</break>

    <case pos:start="247:5" pos:end="247:27">case <expr pos:start="247:10" pos:end="247:26"><name pos:start="247:10" pos:end="247:26">INDEX_op_add2_i32</name></expr>:</case>

        <expr_stmt pos:start="249:9" pos:end="253:60"><expr pos:start="249:9" pos:end="253:59"><call pos:start="249:9" pos:end="253:59"><name pos:start="249:9" pos:end="249:24">tcg_out_dat_reg2</name><argument_list pos:start="249:25" pos:end="253:59">(<argument pos:start="249:26" pos:end="249:26"><expr pos:start="249:26" pos:end="249:26"><name pos:start="249:26" pos:end="249:26">s</name></expr></argument>, <argument pos:start="249:29" pos:end="249:35"><expr pos:start="249:29" pos:end="249:35"><name pos:start="249:29" pos:end="249:35">COND_AL</name></expr></argument>, <argument pos:start="249:38" pos:end="249:46"><expr pos:start="249:38" pos:end="249:46"><name pos:start="249:38" pos:end="249:46">ARITH_ADD</name></expr></argument>, <argument pos:start="249:49" pos:end="249:57"><expr pos:start="249:49" pos:end="249:57"><name pos:start="249:49" pos:end="249:57">ARITH_ADC</name></expr></argument>,

                        <argument pos:start="251:25" pos:end="251:31"><expr pos:start="251:25" pos:end="251:31"><name pos:start="251:25" pos:end="251:31"><name pos:start="251:25" pos:end="251:28">args</name><index pos:start="251:29" pos:end="251:31">[<expr pos:start="251:30" pos:end="251:30"><literal type="number" pos:start="251:30" pos:end="251:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:34" pos:end="251:40"><expr pos:start="251:34" pos:end="251:40"><name pos:start="251:34" pos:end="251:40"><name pos:start="251:34" pos:end="251:37">args</name><index pos:start="251:38" pos:end="251:40">[<expr pos:start="251:39" pos:end="251:39"><literal type="number" pos:start="251:39" pos:end="251:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:43" pos:end="251:49"><expr pos:start="251:43" pos:end="251:49"><name pos:start="251:43" pos:end="251:49"><name pos:start="251:43" pos:end="251:46">args</name><index pos:start="251:47" pos:end="251:49">[<expr pos:start="251:48" pos:end="251:48"><literal type="number" pos:start="251:48" pos:end="251:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="251:52" pos:end="251:58"><expr pos:start="251:52" pos:end="251:58"><name pos:start="251:52" pos:end="251:58"><name pos:start="251:52" pos:end="251:55">args</name><index pos:start="251:56" pos:end="251:58">[<expr pos:start="251:57" pos:end="251:57"><literal type="number" pos:start="251:57" pos:end="251:57">3</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="253:25" pos:end="253:31"><expr pos:start="253:25" pos:end="253:31"><name pos:start="253:25" pos:end="253:31"><name pos:start="253:25" pos:end="253:28">args</name><index pos:start="253:29" pos:end="253:31">[<expr pos:start="253:30" pos:end="253:30"><literal type="number" pos:start="253:30" pos:end="253:30">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:34" pos:end="253:40"><expr pos:start="253:34" pos:end="253:40"><name pos:start="253:34" pos:end="253:40"><name pos:start="253:34" pos:end="253:37">args</name><index pos:start="253:38" pos:end="253:40">[<expr pos:start="253:39" pos:end="253:39"><literal type="number" pos:start="253:39" pos:end="253:39">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="253:43" pos:end="253:58"><expr pos:start="253:43" pos:end="253:58"><call pos:start="253:43" pos:end="253:58"><name pos:start="253:43" pos:end="253:55">SHIFT_IMM_LSL</name><argument_list pos:start="253:56" pos:end="253:58">(<argument pos:start="253:57" pos:end="253:57"><expr pos:start="253:57" pos:end="253:57"><literal type="number" pos:start="253:57" pos:end="253:57">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="255:9" pos:end="255:14">break;</break>

    <case pos:start="257:5" pos:end="257:27">case <expr pos:start="257:10" pos:end="257:26"><name pos:start="257:10" pos:end="257:26">INDEX_op_sub2_i32</name></expr>:</case>

        <expr_stmt pos:start="259:9" pos:end="263:60"><expr pos:start="259:9" pos:end="263:59"><call pos:start="259:9" pos:end="263:59"><name pos:start="259:9" pos:end="259:24">tcg_out_dat_reg2</name><argument_list pos:start="259:25" pos:end="263:59">(<argument pos:start="259:26" pos:end="259:26"><expr pos:start="259:26" pos:end="259:26"><name pos:start="259:26" pos:end="259:26">s</name></expr></argument>, <argument pos:start="259:29" pos:end="259:35"><expr pos:start="259:29" pos:end="259:35"><name pos:start="259:29" pos:end="259:35">COND_AL</name></expr></argument>, <argument pos:start="259:38" pos:end="259:46"><expr pos:start="259:38" pos:end="259:46"><name pos:start="259:38" pos:end="259:46">ARITH_SUB</name></expr></argument>, <argument pos:start="259:49" pos:end="259:57"><expr pos:start="259:49" pos:end="259:57"><name pos:start="259:49" pos:end="259:57">ARITH_SBC</name></expr></argument>,

                        <argument pos:start="261:25" pos:end="261:31"><expr pos:start="261:25" pos:end="261:31"><name pos:start="261:25" pos:end="261:31"><name pos:start="261:25" pos:end="261:28">args</name><index pos:start="261:29" pos:end="261:31">[<expr pos:start="261:30" pos:end="261:30"><literal type="number" pos:start="261:30" pos:end="261:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:34" pos:end="261:40"><expr pos:start="261:34" pos:end="261:40"><name pos:start="261:34" pos:end="261:40"><name pos:start="261:34" pos:end="261:37">args</name><index pos:start="261:38" pos:end="261:40">[<expr pos:start="261:39" pos:end="261:39"><literal type="number" pos:start="261:39" pos:end="261:39">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:43" pos:end="261:49"><expr pos:start="261:43" pos:end="261:49"><name pos:start="261:43" pos:end="261:49"><name pos:start="261:43" pos:end="261:46">args</name><index pos:start="261:47" pos:end="261:49">[<expr pos:start="261:48" pos:end="261:48"><literal type="number" pos:start="261:48" pos:end="261:48">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="261:52" pos:end="261:58"><expr pos:start="261:52" pos:end="261:58"><name pos:start="261:52" pos:end="261:58"><name pos:start="261:52" pos:end="261:55">args</name><index pos:start="261:56" pos:end="261:58">[<expr pos:start="261:57" pos:end="261:57"><literal type="number" pos:start="261:57" pos:end="261:57">3</literal></expr>]</index></name></expr></argument>,

                        <argument pos:start="263:25" pos:end="263:31"><expr pos:start="263:25" pos:end="263:31"><name pos:start="263:25" pos:end="263:31"><name pos:start="263:25" pos:end="263:28">args</name><index pos:start="263:29" pos:end="263:31">[<expr pos:start="263:30" pos:end="263:30"><literal type="number" pos:start="263:30" pos:end="263:30">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:34" pos:end="263:40"><expr pos:start="263:34" pos:end="263:40"><name pos:start="263:34" pos:end="263:40"><name pos:start="263:34" pos:end="263:37">args</name><index pos:start="263:38" pos:end="263:40">[<expr pos:start="263:39" pos:end="263:39"><literal type="number" pos:start="263:39" pos:end="263:39">5</literal></expr>]</index></name></expr></argument>, <argument pos:start="263:43" pos:end="263:58"><expr pos:start="263:43" pos:end="263:58"><call pos:start="263:43" pos:end="263:58"><name pos:start="263:43" pos:end="263:55">SHIFT_IMM_LSL</name><argument_list pos:start="263:56" pos:end="263:58">(<argument pos:start="263:57" pos:end="263:57"><expr pos:start="263:57" pos:end="263:57"><literal type="number" pos:start="263:57" pos:end="263:57">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="265:9" pos:end="265:14">break;</break>

    <case pos:start="267:5" pos:end="267:26">case <expr pos:start="267:10" pos:end="267:25"><name pos:start="267:10" pos:end="267:25">INDEX_op_neg_i32</name></expr>:</case>

        <expr_stmt pos:start="269:9" pos:end="269:68"><expr pos:start="269:9" pos:end="269:67"><call pos:start="269:9" pos:end="269:67"><name pos:start="269:9" pos:end="269:23">tcg_out_dat_imm</name><argument_list pos:start="269:24" pos:end="269:67">(<argument pos:start="269:25" pos:end="269:25"><expr pos:start="269:25" pos:end="269:25"><name pos:start="269:25" pos:end="269:25">s</name></expr></argument>, <argument pos:start="269:28" pos:end="269:34"><expr pos:start="269:28" pos:end="269:34"><name pos:start="269:28" pos:end="269:34">COND_AL</name></expr></argument>, <argument pos:start="269:37" pos:end="269:45"><expr pos:start="269:37" pos:end="269:45"><name pos:start="269:37" pos:end="269:45">ARITH_RSB</name></expr></argument>, <argument pos:start="269:48" pos:end="269:54"><expr pos:start="269:48" pos:end="269:54"><name pos:start="269:48" pos:end="269:54"><name pos:start="269:48" pos:end="269:51">args</name><index pos:start="269:52" pos:end="269:54">[<expr pos:start="269:53" pos:end="269:53"><literal type="number" pos:start="269:53" pos:end="269:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:57" pos:end="269:63"><expr pos:start="269:57" pos:end="269:63"><name pos:start="269:57" pos:end="269:63"><name pos:start="269:57" pos:end="269:60">args</name><index pos:start="269:61" pos:end="269:63">[<expr pos:start="269:62" pos:end="269:62"><literal type="number" pos:start="269:62" pos:end="269:62">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="269:66" pos:end="269:66"><expr pos:start="269:66" pos:end="269:66"><literal type="number" pos:start="269:66" pos:end="269:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="271:14">break;</break>

    <case pos:start="273:5" pos:end="273:26">case <expr pos:start="273:10" pos:end="273:25"><name pos:start="273:10" pos:end="273:25">INDEX_op_not_i32</name></expr>:</case>

        <expr_stmt pos:start="275:9" pos:end="277:74"><expr pos:start="275:9" pos:end="277:73"><call pos:start="275:9" pos:end="277:73"><name pos:start="275:9" pos:end="275:23">tcg_out_dat_reg</name><argument_list pos:start="275:24" pos:end="277:73">(<argument pos:start="275:25" pos:end="275:25"><expr pos:start="275:25" pos:end="275:25"><name pos:start="275:25" pos:end="275:25">s</name></expr></argument>, <argument pos:start="275:28" pos:end="275:34"><expr pos:start="275:28" pos:end="275:34"><name pos:start="275:28" pos:end="275:34">COND_AL</name></expr></argument>,

                        <argument pos:start="277:25" pos:end="277:33"><expr pos:start="277:25" pos:end="277:33"><name pos:start="277:25" pos:end="277:33">ARITH_MVN</name></expr></argument>, <argument pos:start="277:36" pos:end="277:42"><expr pos:start="277:36" pos:end="277:42"><name pos:start="277:36" pos:end="277:42"><name pos:start="277:36" pos:end="277:39">args</name><index pos:start="277:40" pos:end="277:42">[<expr pos:start="277:41" pos:end="277:41"><literal type="number" pos:start="277:41" pos:end="277:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:45" pos:end="277:45"><expr pos:start="277:45" pos:end="277:45"><literal type="number" pos:start="277:45" pos:end="277:45">0</literal></expr></argument>, <argument pos:start="277:48" pos:end="277:54"><expr pos:start="277:48" pos:end="277:54"><name pos:start="277:48" pos:end="277:54"><name pos:start="277:48" pos:end="277:51">args</name><index pos:start="277:52" pos:end="277:54">[<expr pos:start="277:53" pos:end="277:53"><literal type="number" pos:start="277:53" pos:end="277:53">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:57" pos:end="277:72"><expr pos:start="277:57" pos:end="277:72"><call pos:start="277:57" pos:end="277:72"><name pos:start="277:57" pos:end="277:69">SHIFT_IMM_LSL</name><argument_list pos:start="277:70" pos:end="277:72">(<argument pos:start="277:71" pos:end="277:71"><expr pos:start="277:71" pos:end="277:71"><literal type="number" pos:start="277:71" pos:end="277:71">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="279:9" pos:end="279:14">break;</break>

    <case pos:start="281:5" pos:end="281:26">case <expr pos:start="281:10" pos:end="281:25"><name pos:start="281:10" pos:end="281:25">INDEX_op_mul_i32</name></expr>:</case>

        <expr_stmt pos:start="283:9" pos:end="283:61"><expr pos:start="283:9" pos:end="283:60"><call pos:start="283:9" pos:end="283:60"><name pos:start="283:9" pos:end="283:21">tcg_out_mul32</name><argument_list pos:start="283:22" pos:end="283:60">(<argument pos:start="283:23" pos:end="283:23"><expr pos:start="283:23" pos:end="283:23"><name pos:start="283:23" pos:end="283:23">s</name></expr></argument>, <argument pos:start="283:26" pos:end="283:32"><expr pos:start="283:26" pos:end="283:32"><name pos:start="283:26" pos:end="283:32">COND_AL</name></expr></argument>, <argument pos:start="283:35" pos:end="283:41"><expr pos:start="283:35" pos:end="283:41"><name pos:start="283:35" pos:end="283:41"><name pos:start="283:35" pos:end="283:38">args</name><index pos:start="283:39" pos:end="283:41">[<expr pos:start="283:40" pos:end="283:40"><literal type="number" pos:start="283:40" pos:end="283:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:44" pos:end="283:50"><expr pos:start="283:44" pos:end="283:50"><name pos:start="283:44" pos:end="283:50"><name pos:start="283:44" pos:end="283:47">args</name><index pos:start="283:48" pos:end="283:50">[<expr pos:start="283:49" pos:end="283:49"><literal type="number" pos:start="283:49" pos:end="283:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="283:53" pos:end="283:59"><expr pos:start="283:53" pos:end="283:59"><name pos:start="283:53" pos:end="283:59"><name pos:start="283:53" pos:end="283:56">args</name><index pos:start="283:57" pos:end="283:59">[<expr pos:start="283:58" pos:end="283:58"><literal type="number" pos:start="283:58" pos:end="283:58">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="285:9" pos:end="285:14">break;</break>

    <case pos:start="287:5" pos:end="287:28">case <expr pos:start="287:10" pos:end="287:27"><name pos:start="287:10" pos:end="287:27">INDEX_op_mulu2_i32</name></expr>:</case>

        <expr_stmt pos:start="289:9" pos:end="289:72"><expr pos:start="289:9" pos:end="289:71"><call pos:start="289:9" pos:end="289:71"><name pos:start="289:9" pos:end="289:23">tcg_out_umull32</name><argument_list pos:start="289:24" pos:end="289:71">(<argument pos:start="289:25" pos:end="289:25"><expr pos:start="289:25" pos:end="289:25"><name pos:start="289:25" pos:end="289:25">s</name></expr></argument>, <argument pos:start="289:28" pos:end="289:34"><expr pos:start="289:28" pos:end="289:34"><name pos:start="289:28" pos:end="289:34">COND_AL</name></expr></argument>, <argument pos:start="289:37" pos:end="289:43"><expr pos:start="289:37" pos:end="289:43"><name pos:start="289:37" pos:end="289:43"><name pos:start="289:37" pos:end="289:40">args</name><index pos:start="289:41" pos:end="289:43">[<expr pos:start="289:42" pos:end="289:42"><literal type="number" pos:start="289:42" pos:end="289:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="289:46" pos:end="289:52"><expr pos:start="289:46" pos:end="289:52"><name pos:start="289:46" pos:end="289:52"><name pos:start="289:46" pos:end="289:49">args</name><index pos:start="289:50" pos:end="289:52">[<expr pos:start="289:51" pos:end="289:51"><literal type="number" pos:start="289:51" pos:end="289:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="289:55" pos:end="289:61"><expr pos:start="289:55" pos:end="289:61"><name pos:start="289:55" pos:end="289:61"><name pos:start="289:55" pos:end="289:58">args</name><index pos:start="289:59" pos:end="289:61">[<expr pos:start="289:60" pos:end="289:60"><literal type="number" pos:start="289:60" pos:end="289:60">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="289:64" pos:end="289:70"><expr pos:start="289:64" pos:end="289:70"><name pos:start="289:64" pos:end="289:70"><name pos:start="289:64" pos:end="289:67">args</name><index pos:start="289:68" pos:end="289:70">[<expr pos:start="289:69" pos:end="289:69"><literal type="number" pos:start="289:69" pos:end="289:69">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="291:14">break;</break>

    <case pos:start="293:5" pos:end="293:28">case <expr pos:start="293:10" pos:end="293:27"><name pos:start="293:10" pos:end="293:27">INDEX_op_muls2_i32</name></expr>:</case>

        <expr_stmt pos:start="295:9" pos:end="295:72"><expr pos:start="295:9" pos:end="295:71"><call pos:start="295:9" pos:end="295:71"><name pos:start="295:9" pos:end="295:23">tcg_out_smull32</name><argument_list pos:start="295:24" pos:end="295:71">(<argument pos:start="295:25" pos:end="295:25"><expr pos:start="295:25" pos:end="295:25"><name pos:start="295:25" pos:end="295:25">s</name></expr></argument>, <argument pos:start="295:28" pos:end="295:34"><expr pos:start="295:28" pos:end="295:34"><name pos:start="295:28" pos:end="295:34">COND_AL</name></expr></argument>, <argument pos:start="295:37" pos:end="295:43"><expr pos:start="295:37" pos:end="295:43"><name pos:start="295:37" pos:end="295:43"><name pos:start="295:37" pos:end="295:40">args</name><index pos:start="295:41" pos:end="295:43">[<expr pos:start="295:42" pos:end="295:42"><literal type="number" pos:start="295:42" pos:end="295:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="295:46" pos:end="295:52"><expr pos:start="295:46" pos:end="295:52"><name pos:start="295:46" pos:end="295:52"><name pos:start="295:46" pos:end="295:49">args</name><index pos:start="295:50" pos:end="295:52">[<expr pos:start="295:51" pos:end="295:51"><literal type="number" pos:start="295:51" pos:end="295:51">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="295:55" pos:end="295:61"><expr pos:start="295:55" pos:end="295:61"><name pos:start="295:55" pos:end="295:61"><name pos:start="295:55" pos:end="295:58">args</name><index pos:start="295:59" pos:end="295:61">[<expr pos:start="295:60" pos:end="295:60"><literal type="number" pos:start="295:60" pos:end="295:60">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="295:64" pos:end="295:70"><expr pos:start="295:64" pos:end="295:70"><name pos:start="295:64" pos:end="295:70"><name pos:start="295:64" pos:end="295:67">args</name><index pos:start="295:68" pos:end="295:70">[<expr pos:start="295:69" pos:end="295:69"><literal type="number" pos:start="295:69" pos:end="295:69">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="297:9" pos:end="297:14">break;</break>

    <comment type="block" pos:start="299:5" pos:end="299:46">/* XXX: Perhaps args[2] &amp; 0x1f is wrong */</comment>

    <case pos:start="301:5" pos:end="301:26">case <expr pos:start="301:10" pos:end="301:25"><name pos:start="301:10" pos:end="301:25">INDEX_op_shl_i32</name></expr>:</case>

        <expr_stmt pos:start="303:9" pos:end="305:71"><expr pos:start="303:9" pos:end="305:70"><name pos:start="303:9" pos:end="303:9">c</name> <operator pos:start="303:11" pos:end="303:11">=</operator> <ternary pos:start="303:13" pos:end="305:70"><condition pos:start="303:13" pos:end="303:27"><expr pos:start="303:13" pos:end="303:25"><name pos:start="303:13" pos:end="303:25"><name pos:start="303:13" pos:end="303:22">const_args</name><index pos:start="303:23" pos:end="303:25">[<expr pos:start="303:24" pos:end="303:24"><literal type="number" pos:start="303:24" pos:end="303:24">2</literal></expr>]</index></name></expr> ?</condition><then pos:start="305:17" pos:end="305:45">

                <expr pos:start="305:17" pos:end="305:45"><call pos:start="305:17" pos:end="305:45"><name pos:start="305:17" pos:end="305:29">SHIFT_IMM_LSL</name><argument_list pos:start="305:30" pos:end="305:45">(<argument pos:start="305:31" pos:end="305:44"><expr pos:start="305:31" pos:end="305:44"><name pos:start="305:31" pos:end="305:37"><name pos:start="305:31" pos:end="305:34">args</name><index pos:start="305:35" pos:end="305:37">[<expr pos:start="305:36" pos:end="305:36"><literal type="number" pos:start="305:36" pos:end="305:36">2</literal></expr>]</index></name> <operator pos:start="305:39" pos:end="305:39">&amp;</operator> <literal type="number" pos:start="305:41" pos:end="305:44">0x1f</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="305:47" pos:end="305:70">: <expr pos:start="305:49" pos:end="305:70"><call pos:start="305:49" pos:end="305:70"><name pos:start="305:49" pos:end="305:61">SHIFT_REG_LSL</name><argument_list pos:start="305:62" pos:end="305:70">(<argument pos:start="305:63" pos:end="305:69"><expr pos:start="305:63" pos:end="305:69"><name pos:start="305:63" pos:end="305:69"><name pos:start="305:63" pos:end="305:66">args</name><index pos:start="305:67" pos:end="305:69">[<expr pos:start="305:68" pos:end="305:68"><literal type="number" pos:start="305:68" pos:end="305:68">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <goto pos:start="307:9" pos:end="307:25">goto <name pos:start="307:14" pos:end="307:24">gen_shift32</name>;</goto>

    <case pos:start="309:5" pos:end="309:26">case <expr pos:start="309:10" pos:end="309:25"><name pos:start="309:10" pos:end="309:25">INDEX_op_shr_i32</name></expr>:</case>

        <expr_stmt pos:start="311:9" pos:end="313:58"><expr pos:start="311:9" pos:end="313:57"><name pos:start="311:9" pos:end="311:9">c</name> <operator pos:start="311:11" pos:end="311:11">=</operator> <ternary pos:start="311:13" pos:end="313:57"><condition pos:start="311:13" pos:end="311:27"><expr pos:start="311:13" pos:end="311:25"><name pos:start="311:13" pos:end="311:25"><name pos:start="311:13" pos:end="311:22">const_args</name><index pos:start="311:23" pos:end="311:25">[<expr pos:start="311:24" pos:end="311:24"><literal type="number" pos:start="311:24" pos:end="311:24">2</literal></expr>]</index></name></expr> ?</condition><then pos:start="311:29" pos:end="313:32"> <expr pos:start="311:29" pos:end="313:32"><ternary pos:start="311:29" pos:end="313:32"><condition pos:start="311:29" pos:end="311:46"><expr pos:start="311:29" pos:end="311:44"><operator pos:start="311:29" pos:end="311:29">(</operator><name pos:start="311:30" pos:end="311:36"><name pos:start="311:30" pos:end="311:33">args</name><index pos:start="311:34" pos:end="311:36">[<expr pos:start="311:35" pos:end="311:35"><literal type="number" pos:start="311:35" pos:end="311:35">2</literal></expr>]</index></name> <operator pos:start="311:38" pos:end="311:38">&amp;</operator> <literal type="number" pos:start="311:40" pos:end="311:43">0x1f</literal><operator pos:start="311:44" pos:end="311:44">)</operator></expr> ?</condition><then pos:start="311:48" pos:end="311:76"> <expr pos:start="311:48" pos:end="311:76"><call pos:start="311:48" pos:end="311:76"><name pos:start="311:48" pos:end="311:60">SHIFT_IMM_LSR</name><argument_list pos:start="311:61" pos:end="311:76">(<argument pos:start="311:62" pos:end="311:75"><expr pos:start="311:62" pos:end="311:75"><name pos:start="311:62" pos:end="311:68"><name pos:start="311:62" pos:end="311:65">args</name><index pos:start="311:66" pos:end="311:68">[<expr pos:start="311:67" pos:end="311:67"><literal type="number" pos:start="311:67" pos:end="311:67">2</literal></expr>]</index></name> <operator pos:start="311:70" pos:end="311:70">&amp;</operator> <literal type="number" pos:start="311:72" pos:end="311:75">0x1f</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="311:78" pos:end="313:32">:

                <expr pos:start="313:17" pos:end="313:32"><call pos:start="313:17" pos:end="313:32"><name pos:start="313:17" pos:end="313:29">SHIFT_IMM_LSL</name><argument_list pos:start="313:30" pos:end="313:32">(<argument pos:start="313:31" pos:end="313:31"><expr pos:start="313:31" pos:end="313:31"><literal type="number" pos:start="313:31" pos:end="313:31">0</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr> </then><else pos:start="313:34" pos:end="313:57">: <expr pos:start="313:36" pos:end="313:57"><call pos:start="313:36" pos:end="313:57"><name pos:start="313:36" pos:end="313:48">SHIFT_REG_LSR</name><argument_list pos:start="313:49" pos:end="313:57">(<argument pos:start="313:50" pos:end="313:56"><expr pos:start="313:50" pos:end="313:56"><name pos:start="313:50" pos:end="313:56"><name pos:start="313:50" pos:end="313:53">args</name><index pos:start="313:54" pos:end="313:56">[<expr pos:start="313:55" pos:end="313:55"><literal type="number" pos:start="313:55" pos:end="313:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <goto pos:start="315:9" pos:end="315:25">goto <name pos:start="315:14" pos:end="315:24">gen_shift32</name>;</goto>

    <case pos:start="317:5" pos:end="317:26">case <expr pos:start="317:10" pos:end="317:25"><name pos:start="317:10" pos:end="317:25">INDEX_op_sar_i32</name></expr>:</case>

        <expr_stmt pos:start="319:9" pos:end="321:58"><expr pos:start="319:9" pos:end="321:57"><name pos:start="319:9" pos:end="319:9">c</name> <operator pos:start="319:11" pos:end="319:11">=</operator> <ternary pos:start="319:13" pos:end="321:57"><condition pos:start="319:13" pos:end="319:27"><expr pos:start="319:13" pos:end="319:25"><name pos:start="319:13" pos:end="319:25"><name pos:start="319:13" pos:end="319:22">const_args</name><index pos:start="319:23" pos:end="319:25">[<expr pos:start="319:24" pos:end="319:24"><literal type="number" pos:start="319:24" pos:end="319:24">2</literal></expr>]</index></name></expr> ?</condition><then pos:start="319:29" pos:end="321:32"> <expr pos:start="319:29" pos:end="321:32"><ternary pos:start="319:29" pos:end="321:32"><condition pos:start="319:29" pos:end="319:46"><expr pos:start="319:29" pos:end="319:44"><operator pos:start="319:29" pos:end="319:29">(</operator><name pos:start="319:30" pos:end="319:36"><name pos:start="319:30" pos:end="319:33">args</name><index pos:start="319:34" pos:end="319:36">[<expr pos:start="319:35" pos:end="319:35"><literal type="number" pos:start="319:35" pos:end="319:35">2</literal></expr>]</index></name> <operator pos:start="319:38" pos:end="319:38">&amp;</operator> <literal type="number" pos:start="319:40" pos:end="319:43">0x1f</literal><operator pos:start="319:44" pos:end="319:44">)</operator></expr> ?</condition><then pos:start="319:48" pos:end="319:76"> <expr pos:start="319:48" pos:end="319:76"><call pos:start="319:48" pos:end="319:76"><name pos:start="319:48" pos:end="319:60">SHIFT_IMM_ASR</name><argument_list pos:start="319:61" pos:end="319:76">(<argument pos:start="319:62" pos:end="319:75"><expr pos:start="319:62" pos:end="319:75"><name pos:start="319:62" pos:end="319:68"><name pos:start="319:62" pos:end="319:65">args</name><index pos:start="319:66" pos:end="319:68">[<expr pos:start="319:67" pos:end="319:67"><literal type="number" pos:start="319:67" pos:end="319:67">2</literal></expr>]</index></name> <operator pos:start="319:70" pos:end="319:70">&amp;</operator> <literal type="number" pos:start="319:72" pos:end="319:75">0x1f</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="319:78" pos:end="321:32">:

                <expr pos:start="321:17" pos:end="321:32"><call pos:start="321:17" pos:end="321:32"><name pos:start="321:17" pos:end="321:29">SHIFT_IMM_LSL</name><argument_list pos:start="321:30" pos:end="321:32">(<argument pos:start="321:31" pos:end="321:31"><expr pos:start="321:31" pos:end="321:31"><literal type="number" pos:start="321:31" pos:end="321:31">0</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr> </then><else pos:start="321:34" pos:end="321:57">: <expr pos:start="321:36" pos:end="321:57"><call pos:start="321:36" pos:end="321:57"><name pos:start="321:36" pos:end="321:48">SHIFT_REG_ASR</name><argument_list pos:start="321:49" pos:end="321:57">(<argument pos:start="321:50" pos:end="321:56"><expr pos:start="321:50" pos:end="321:56"><name pos:start="321:50" pos:end="321:56"><name pos:start="321:50" pos:end="321:53">args</name><index pos:start="321:54" pos:end="321:56">[<expr pos:start="321:55" pos:end="321:55"><literal type="number" pos:start="321:55" pos:end="321:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <goto pos:start="323:9" pos:end="323:25">goto <name pos:start="323:14" pos:end="323:24">gen_shift32</name>;</goto>

    <case pos:start="325:5" pos:end="325:27">case <expr pos:start="325:10" pos:end="325:26"><name pos:start="325:10" pos:end="325:26">INDEX_op_rotr_i32</name></expr>:</case>

        <expr_stmt pos:start="327:9" pos:end="329:58"><expr pos:start="327:9" pos:end="329:57"><name pos:start="327:9" pos:end="327:9">c</name> <operator pos:start="327:11" pos:end="327:11">=</operator> <ternary pos:start="327:13" pos:end="329:57"><condition pos:start="327:13" pos:end="327:27"><expr pos:start="327:13" pos:end="327:25"><name pos:start="327:13" pos:end="327:25"><name pos:start="327:13" pos:end="327:22">const_args</name><index pos:start="327:23" pos:end="327:25">[<expr pos:start="327:24" pos:end="327:24"><literal type="number" pos:start="327:24" pos:end="327:24">2</literal></expr>]</index></name></expr> ?</condition><then pos:start="327:29" pos:end="329:32"> <expr pos:start="327:29" pos:end="329:32"><ternary pos:start="327:29" pos:end="329:32"><condition pos:start="327:29" pos:end="327:46"><expr pos:start="327:29" pos:end="327:44"><operator pos:start="327:29" pos:end="327:29">(</operator><name pos:start="327:30" pos:end="327:36"><name pos:start="327:30" pos:end="327:33">args</name><index pos:start="327:34" pos:end="327:36">[<expr pos:start="327:35" pos:end="327:35"><literal type="number" pos:start="327:35" pos:end="327:35">2</literal></expr>]</index></name> <operator pos:start="327:38" pos:end="327:38">&amp;</operator> <literal type="number" pos:start="327:40" pos:end="327:43">0x1f</literal><operator pos:start="327:44" pos:end="327:44">)</operator></expr> ?</condition><then pos:start="327:48" pos:end="327:76"> <expr pos:start="327:48" pos:end="327:76"><call pos:start="327:48" pos:end="327:76"><name pos:start="327:48" pos:end="327:60">SHIFT_IMM_ROR</name><argument_list pos:start="327:61" pos:end="327:76">(<argument pos:start="327:62" pos:end="327:75"><expr pos:start="327:62" pos:end="327:75"><name pos:start="327:62" pos:end="327:68"><name pos:start="327:62" pos:end="327:65">args</name><index pos:start="327:66" pos:end="327:68">[<expr pos:start="327:67" pos:end="327:67"><literal type="number" pos:start="327:67" pos:end="327:67">2</literal></expr>]</index></name> <operator pos:start="327:70" pos:end="327:70">&amp;</operator> <literal type="number" pos:start="327:72" pos:end="327:75">0x1f</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="327:78" pos:end="329:32">:

                <expr pos:start="329:17" pos:end="329:32"><call pos:start="329:17" pos:end="329:32"><name pos:start="329:17" pos:end="329:29">SHIFT_IMM_LSL</name><argument_list pos:start="329:30" pos:end="329:32">(<argument pos:start="329:31" pos:end="329:31"><expr pos:start="329:31" pos:end="329:31"><literal type="number" pos:start="329:31" pos:end="329:31">0</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr> </then><else pos:start="329:34" pos:end="329:57">: <expr pos:start="329:36" pos:end="329:57"><call pos:start="329:36" pos:end="329:57"><name pos:start="329:36" pos:end="329:48">SHIFT_REG_ROR</name><argument_list pos:start="329:49" pos:end="329:57">(<argument pos:start="329:50" pos:end="329:56"><expr pos:start="329:50" pos:end="329:56"><name pos:start="329:50" pos:end="329:56"><name pos:start="329:50" pos:end="329:53">args</name><index pos:start="329:54" pos:end="329:56">[<expr pos:start="329:55" pos:end="329:55"><literal type="number" pos:start="329:55" pos:end="329:55">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt>

        <comment type="block" pos:start="331:9" pos:end="331:28">/* Fall through.  */</comment>

    <label pos:start="333:5" pos:end="333:16"><name pos:start="333:5" pos:end="333:15">gen_shift32</name>:</label>

        <expr_stmt pos:start="335:9" pos:end="335:71"><expr pos:start="335:9" pos:end="335:70"><call pos:start="335:9" pos:end="335:70"><name pos:start="335:9" pos:end="335:23">tcg_out_dat_reg</name><argument_list pos:start="335:24" pos:end="335:70">(<argument pos:start="335:25" pos:end="335:25"><expr pos:start="335:25" pos:end="335:25"><name pos:start="335:25" pos:end="335:25">s</name></expr></argument>, <argument pos:start="335:28" pos:end="335:34"><expr pos:start="335:28" pos:end="335:34"><name pos:start="335:28" pos:end="335:34">COND_AL</name></expr></argument>, <argument pos:start="335:37" pos:end="335:45"><expr pos:start="335:37" pos:end="335:45"><name pos:start="335:37" pos:end="335:45">ARITH_MOV</name></expr></argument>, <argument pos:start="335:48" pos:end="335:54"><expr pos:start="335:48" pos:end="335:54"><name pos:start="335:48" pos:end="335:54"><name pos:start="335:48" pos:end="335:51">args</name><index pos:start="335:52" pos:end="335:54">[<expr pos:start="335:53" pos:end="335:53"><literal type="number" pos:start="335:53" pos:end="335:53">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="335:57" pos:end="335:57"><expr pos:start="335:57" pos:end="335:57"><literal type="number" pos:start="335:57" pos:end="335:57">0</literal></expr></argument>, <argument pos:start="335:60" pos:end="335:66"><expr pos:start="335:60" pos:end="335:66"><name pos:start="335:60" pos:end="335:66"><name pos:start="335:60" pos:end="335:63">args</name><index pos:start="335:64" pos:end="335:66">[<expr pos:start="335:65" pos:end="335:65"><literal type="number" pos:start="335:65" pos:end="335:65">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="335:69" pos:end="335:69"><expr pos:start="335:69" pos:end="335:69"><name pos:start="335:69" pos:end="335:69">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="337:9" pos:end="337:14">break;</break>



    <case pos:start="341:5" pos:end="341:27">case <expr pos:start="341:10" pos:end="341:26"><name pos:start="341:10" pos:end="341:26">INDEX_op_rotl_i32</name></expr>:</case>

        <if_stmt pos:start="343:9" pos:end="361:9"><if pos:start="343:9" pos:end="353:9">if <condition pos:start="343:12" pos:end="343:26">(<expr pos:start="343:13" pos:end="343:25"><name pos:start="343:13" pos:end="343:25"><name pos:start="343:13" pos:end="343:22">const_args</name><index pos:start="343:23" pos:end="343:25">[<expr pos:start="343:24" pos:end="343:24"><literal type="number" pos:start="343:24" pos:end="343:24">2</literal></expr>]</index></name></expr>)</condition> <block pos:start="343:28" pos:end="353:9">{<block_content pos:start="345:13" pos:end="351:46">

            <expr_stmt pos:start="345:13" pos:end="351:46"><expr pos:start="345:13" pos:end="351:45"><call pos:start="345:13" pos:end="351:45"><name pos:start="345:13" pos:end="345:27">tcg_out_dat_reg</name><argument_list pos:start="345:28" pos:end="351:45">(<argument pos:start="345:29" pos:end="345:29"><expr pos:start="345:29" pos:end="345:29"><name pos:start="345:29" pos:end="345:29">s</name></expr></argument>, <argument pos:start="345:32" pos:end="345:38"><expr pos:start="345:32" pos:end="345:38"><name pos:start="345:32" pos:end="345:38">COND_AL</name></expr></argument>, <argument pos:start="345:41" pos:end="345:49"><expr pos:start="345:41" pos:end="345:49"><name pos:start="345:41" pos:end="345:49">ARITH_MOV</name></expr></argument>, <argument pos:start="345:52" pos:end="345:58"><expr pos:start="345:52" pos:end="345:58"><name pos:start="345:52" pos:end="345:58"><name pos:start="345:52" pos:end="345:55">args</name><index pos:start="345:56" pos:end="345:58">[<expr pos:start="345:57" pos:end="345:57"><literal type="number" pos:start="345:57" pos:end="345:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="345:61" pos:end="345:61"><expr pos:start="345:61" pos:end="345:61"><literal type="number" pos:start="345:61" pos:end="345:61">0</literal></expr></argument>, <argument pos:start="345:64" pos:end="345:70"><expr pos:start="345:64" pos:end="345:70"><name pos:start="345:64" pos:end="345:70"><name pos:start="345:64" pos:end="345:67">args</name><index pos:start="345:68" pos:end="345:70">[<expr pos:start="345:69" pos:end="345:69"><literal type="number" pos:start="345:69" pos:end="345:69">1</literal></expr>]</index></name></expr></argument>,

                            <argument pos:start="347:29" pos:end="351:44"><expr pos:start="347:29" pos:end="351:44"><ternary pos:start="347:29" pos:end="351:44"><condition pos:start="347:29" pos:end="347:55"><expr pos:start="347:29" pos:end="347:53"><operator pos:start="347:29" pos:end="347:29">(</operator><operator pos:start="347:30" pos:end="347:30">(</operator><literal type="number" pos:start="347:31" pos:end="347:36">0x20</literal> <operator pos:start="347:36" pos:end="347:36">-</operator> <name pos:start="347:38" pos:end="347:44"><name pos:start="347:38" pos:end="347:41">args</name><index pos:start="347:42" pos:end="347:44">[<expr pos:start="347:43" pos:end="347:43"><literal type="number" pos:start="347:43" pos:end="347:43">2</literal></expr>]</index></name><operator pos:start="347:45" pos:end="347:45">)</operator> <operator pos:start="347:47" pos:end="347:47">&amp;</operator> <literal type="number" pos:start="347:49" pos:end="347:52">0x1f</literal><operator pos:start="347:53" pos:end="347:53">)</operator></expr> ?</condition><then pos:start="349:29" pos:end="349:66">

                            <expr pos:start="349:29" pos:end="349:66"><call pos:start="349:29" pos:end="349:66"><name pos:start="349:29" pos:end="349:41">SHIFT_IMM_ROR</name><argument_list pos:start="349:42" pos:end="349:66">(<argument pos:start="349:43" pos:end="349:65"><expr pos:start="349:43" pos:end="349:65"><operator pos:start="349:43" pos:end="349:43">(</operator><literal type="number" pos:start="349:44" pos:end="349:49">0x20</literal> <operator pos:start="349:49" pos:end="349:49">-</operator> <name pos:start="349:51" pos:end="349:57"><name pos:start="349:51" pos:end="349:54">args</name><index pos:start="349:55" pos:end="349:57">[<expr pos:start="349:56" pos:end="349:56"><literal type="number" pos:start="349:56" pos:end="349:56">2</literal></expr>]</index></name><operator pos:start="349:58" pos:end="349:58">)</operator> <operator pos:start="349:60" pos:end="349:60">&amp;</operator> <literal type="number" pos:start="349:62" pos:end="349:65">0x1f</literal></expr></argument>)</argument_list></call></expr> </then><else pos:start="349:68" pos:end="351:44">:

                            <expr pos:start="351:29" pos:end="351:44"><call pos:start="351:29" pos:end="351:44"><name pos:start="351:29" pos:end="351:41">SHIFT_IMM_LSL</name><argument_list pos:start="351:42" pos:end="351:44">(<argument pos:start="351:43" pos:end="351:43"><expr pos:start="351:43" pos:end="351:43"><literal type="number" pos:start="351:43" pos:end="351:43">0</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="353:11" pos:end="361:9">else <block pos:start="353:16" pos:end="361:9">{<block_content pos:start="355:13" pos:end="359:55">

            <expr_stmt pos:start="355:13" pos:end="355:78"><expr pos:start="355:13" pos:end="355:77"><call pos:start="355:13" pos:end="355:77"><name pos:start="355:13" pos:end="355:27">tcg_out_dat_imm</name><argument_list pos:start="355:28" pos:end="355:77">(<argument pos:start="355:29" pos:end="355:29"><expr pos:start="355:29" pos:end="355:29"><name pos:start="355:29" pos:end="355:29">s</name></expr></argument>, <argument pos:start="355:32" pos:end="355:38"><expr pos:start="355:32" pos:end="355:38"><name pos:start="355:32" pos:end="355:38">COND_AL</name></expr></argument>, <argument pos:start="355:41" pos:end="355:49"><expr pos:start="355:41" pos:end="355:49"><name pos:start="355:41" pos:end="355:49">ARITH_RSB</name></expr></argument>, <argument pos:start="355:52" pos:end="355:61"><expr pos:start="355:52" pos:end="355:61"><name pos:start="355:52" pos:end="355:61">TCG_REG_R8</name></expr></argument>, <argument pos:start="355:64" pos:end="355:70"><expr pos:start="355:64" pos:end="355:70"><name pos:start="355:64" pos:end="355:70"><name pos:start="355:64" pos:end="355:67">args</name><index pos:start="355:68" pos:end="355:70">[<expr pos:start="355:69" pos:end="355:69"><literal type="number" pos:start="355:69" pos:end="355:69">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="355:73" pos:end="355:76"><expr pos:start="355:73" pos:end="355:76"><literal type="number" pos:start="355:73" pos:end="355:76">0x20</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="357:13" pos:end="359:55"><expr pos:start="357:13" pos:end="359:54"><call pos:start="357:13" pos:end="359:54"><name pos:start="357:13" pos:end="357:27">tcg_out_dat_reg</name><argument_list pos:start="357:28" pos:end="359:54">(<argument pos:start="357:29" pos:end="357:29"><expr pos:start="357:29" pos:end="357:29"><name pos:start="357:29" pos:end="357:29">s</name></expr></argument>, <argument pos:start="357:32" pos:end="357:38"><expr pos:start="357:32" pos:end="357:38"><name pos:start="357:32" pos:end="357:38">COND_AL</name></expr></argument>, <argument pos:start="357:41" pos:end="357:49"><expr pos:start="357:41" pos:end="357:49"><name pos:start="357:41" pos:end="357:49">ARITH_MOV</name></expr></argument>, <argument pos:start="357:52" pos:end="357:58"><expr pos:start="357:52" pos:end="357:58"><name pos:start="357:52" pos:end="357:58"><name pos:start="357:52" pos:end="357:55">args</name><index pos:start="357:56" pos:end="357:58">[<expr pos:start="357:57" pos:end="357:57"><literal type="number" pos:start="357:57" pos:end="357:57">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="357:61" pos:end="357:61"><expr pos:start="357:61" pos:end="357:61"><literal type="number" pos:start="357:61" pos:end="357:61">0</literal></expr></argument>, <argument pos:start="357:64" pos:end="357:70"><expr pos:start="357:64" pos:end="357:70"><name pos:start="357:64" pos:end="357:70"><name pos:start="357:64" pos:end="357:67">args</name><index pos:start="357:68" pos:end="357:70">[<expr pos:start="357:69" pos:end="357:69"><literal type="number" pos:start="357:69" pos:end="357:69">1</literal></expr>]</index></name></expr></argument>,

                            <argument pos:start="359:29" pos:end="359:53"><expr pos:start="359:29" pos:end="359:53"><call pos:start="359:29" pos:end="359:53"><name pos:start="359:29" pos:end="359:41">SHIFT_REG_ROR</name><argument_list pos:start="359:42" pos:end="359:53">(<argument pos:start="359:43" pos:end="359:52"><expr pos:start="359:43" pos:end="359:52"><name pos:start="359:43" pos:end="359:52">TCG_REG_R8</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="363:9" pos:end="363:14">break;</break>



    <case pos:start="367:5" pos:end="367:29">case <expr pos:start="367:10" pos:end="367:28"><name pos:start="367:10" pos:end="367:28">INDEX_op_brcond_i32</name></expr>:</case>

        <expr_stmt pos:start="369:9" pos:end="371:56"><expr pos:start="369:9" pos:end="371:55"><call pos:start="369:9" pos:end="371:55"><name pos:start="369:9" pos:end="369:22">tcg_out_dat_rI</name><argument_list pos:start="369:23" pos:end="371:55">(<argument pos:start="369:24" pos:end="369:24"><expr pos:start="369:24" pos:end="369:24"><name pos:start="369:24" pos:end="369:24">s</name></expr></argument>, <argument pos:start="369:27" pos:end="369:33"><expr pos:start="369:27" pos:end="369:33"><name pos:start="369:27" pos:end="369:33">COND_AL</name></expr></argument>, <argument pos:start="369:36" pos:end="369:44"><expr pos:start="369:36" pos:end="369:44"><name pos:start="369:36" pos:end="369:44">ARITH_CMP</name></expr></argument>, <argument pos:start="369:47" pos:end="369:47"><expr pos:start="369:47" pos:end="369:47"><literal type="number" pos:start="369:47" pos:end="369:47">0</literal></expr></argument>,

                       <argument pos:start="371:24" pos:end="371:30"><expr pos:start="371:24" pos:end="371:30"><name pos:start="371:24" pos:end="371:30"><name pos:start="371:24" pos:end="371:27">args</name><index pos:start="371:28" pos:end="371:30">[<expr pos:start="371:29" pos:end="371:29"><literal type="number" pos:start="371:29" pos:end="371:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:33" pos:end="371:39"><expr pos:start="371:33" pos:end="371:39"><name pos:start="371:33" pos:end="371:39"><name pos:start="371:33" pos:end="371:36">args</name><index pos:start="371:37" pos:end="371:39">[<expr pos:start="371:38" pos:end="371:38"><literal type="number" pos:start="371:38" pos:end="371:38">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="371:42" pos:end="371:54"><expr pos:start="371:42" pos:end="371:54"><name pos:start="371:42" pos:end="371:54"><name pos:start="371:42" pos:end="371:51">const_args</name><index pos:start="371:52" pos:end="371:54">[<expr pos:start="371:53" pos:end="371:53"><literal type="number" pos:start="371:53" pos:end="371:53">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="373:9" pos:end="373:70"><expr pos:start="373:9" pos:end="373:69"><call pos:start="373:9" pos:end="373:69"><name pos:start="373:9" pos:end="373:26">tcg_out_goto_label</name><argument_list pos:start="373:27" pos:end="373:69">(<argument pos:start="373:28" pos:end="373:28"><expr pos:start="373:28" pos:end="373:28"><name pos:start="373:28" pos:end="373:28">s</name></expr></argument>, <argument pos:start="373:31" pos:end="373:59"><expr pos:start="373:31" pos:end="373:59"><name pos:start="373:31" pos:end="373:59"><name pos:start="373:31" pos:end="373:50">tcg_cond_to_arm_cond</name><index pos:start="373:51" pos:end="373:59">[<expr pos:start="373:52" pos:end="373:58"><name pos:start="373:52" pos:end="373:58"><name pos:start="373:52" pos:end="373:55">args</name><index pos:start="373:56" pos:end="373:58">[<expr pos:start="373:57" pos:end="373:57"><literal type="number" pos:start="373:57" pos:end="373:57">2</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="373:62" pos:end="373:68"><expr pos:start="373:62" pos:end="373:68"><name pos:start="373:62" pos:end="373:68"><name pos:start="373:62" pos:end="373:65">args</name><index pos:start="373:66" pos:end="373:68">[<expr pos:start="373:67" pos:end="373:67"><literal type="number" pos:start="373:67" pos:end="373:67">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="375:9" pos:end="375:14">break;</break>

    <case pos:start="377:5" pos:end="377:30">case <expr pos:start="377:10" pos:end="377:29"><name pos:start="377:10" pos:end="377:29">INDEX_op_brcond2_i32</name></expr>:</case>

        <comment type="block" pos:start="379:9" pos:end="393:11">/* The resulting conditions are:

         * TCG_COND_EQ    --&gt;  a0 == a2 &amp;&amp; a1 == a3,

         * TCG_COND_NE    --&gt; (a0 != a2 &amp;&amp; a1 == a3) ||  a1 != a3,

         * TCG_COND_LT(U) --&gt; (a0 &lt;  a2 &amp;&amp; a1 == a3) ||  a1 &lt;  a3,

         * TCG_COND_GE(U) --&gt; (a0 &gt;= a2 &amp;&amp; a1 == a3) || (a1 &gt;= a3 &amp;&amp; a1 != a3),

         * TCG_COND_LE(U) --&gt; (a0 &lt;= a2 &amp;&amp; a1 == a3) || (a1 &lt;= a3 &amp;&amp; a1 != a3),

         * TCG_COND_GT(U) --&gt; (a0 &gt;  a2 &amp;&amp; a1 == a3) ||  a1 &gt;  a3,

         */</comment>

        <expr_stmt pos:start="395:9" pos:end="397:60"><expr pos:start="395:9" pos:end="397:59"><call pos:start="395:9" pos:end="397:59"><name pos:start="395:9" pos:end="395:23">tcg_out_dat_reg</name><argument_list pos:start="395:24" pos:end="397:59">(<argument pos:start="395:25" pos:end="395:25"><expr pos:start="395:25" pos:end="395:25"><name pos:start="395:25" pos:end="395:25">s</name></expr></argument>, <argument pos:start="395:28" pos:end="395:34"><expr pos:start="395:28" pos:end="395:34"><name pos:start="395:28" pos:end="395:34">COND_AL</name></expr></argument>, <argument pos:start="395:37" pos:end="395:45"><expr pos:start="395:37" pos:end="395:45"><name pos:start="395:37" pos:end="395:45">ARITH_CMP</name></expr></argument>, <argument pos:start="395:48" pos:end="395:48"><expr pos:start="395:48" pos:end="395:48"><literal type="number" pos:start="395:48" pos:end="395:48">0</literal></expr></argument>,

                        <argument pos:start="397:25" pos:end="397:31"><expr pos:start="397:25" pos:end="397:31"><name pos:start="397:25" pos:end="397:31"><name pos:start="397:25" pos:end="397:28">args</name><index pos:start="397:29" pos:end="397:31">[<expr pos:start="397:30" pos:end="397:30"><literal type="number" pos:start="397:30" pos:end="397:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="397:34" pos:end="397:40"><expr pos:start="397:34" pos:end="397:40"><name pos:start="397:34" pos:end="397:40"><name pos:start="397:34" pos:end="397:37">args</name><index pos:start="397:38" pos:end="397:40">[<expr pos:start="397:39" pos:end="397:39"><literal type="number" pos:start="397:39" pos:end="397:39">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="397:43" pos:end="397:58"><expr pos:start="397:43" pos:end="397:58"><call pos:start="397:43" pos:end="397:58"><name pos:start="397:43" pos:end="397:55">SHIFT_IMM_LSL</name><argument_list pos:start="397:56" pos:end="397:58">(<argument pos:start="397:57" pos:end="397:57"><expr pos:start="397:57" pos:end="397:57"><literal type="number" pos:start="397:57" pos:end="397:57">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="399:9" pos:end="401:60"><expr pos:start="399:9" pos:end="401:59"><call pos:start="399:9" pos:end="401:59"><name pos:start="399:9" pos:end="399:23">tcg_out_dat_reg</name><argument_list pos:start="399:24" pos:end="401:59">(<argument pos:start="399:25" pos:end="399:25"><expr pos:start="399:25" pos:end="399:25"><name pos:start="399:25" pos:end="399:25">s</name></expr></argument>, <argument pos:start="399:28" pos:end="399:34"><expr pos:start="399:28" pos:end="399:34"><name pos:start="399:28" pos:end="399:34">COND_EQ</name></expr></argument>, <argument pos:start="399:37" pos:end="399:45"><expr pos:start="399:37" pos:end="399:45"><name pos:start="399:37" pos:end="399:45">ARITH_CMP</name></expr></argument>, <argument pos:start="399:48" pos:end="399:48"><expr pos:start="399:48" pos:end="399:48"><literal type="number" pos:start="399:48" pos:end="399:48">0</literal></expr></argument>,

                        <argument pos:start="401:25" pos:end="401:31"><expr pos:start="401:25" pos:end="401:31"><name pos:start="401:25" pos:end="401:31"><name pos:start="401:25" pos:end="401:28">args</name><index pos:start="401:29" pos:end="401:31">[<expr pos:start="401:30" pos:end="401:30"><literal type="number" pos:start="401:30" pos:end="401:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="401:34" pos:end="401:40"><expr pos:start="401:34" pos:end="401:40"><name pos:start="401:34" pos:end="401:40"><name pos:start="401:34" pos:end="401:37">args</name><index pos:start="401:38" pos:end="401:40">[<expr pos:start="401:39" pos:end="401:39"><literal type="number" pos:start="401:39" pos:end="401:39">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="401:43" pos:end="401:58"><expr pos:start="401:43" pos:end="401:58"><call pos:start="401:43" pos:end="401:58"><name pos:start="401:43" pos:end="401:55">SHIFT_IMM_LSL</name><argument_list pos:start="401:56" pos:end="401:58">(<argument pos:start="401:57" pos:end="401:57"><expr pos:start="401:57" pos:end="401:57"><literal type="number" pos:start="401:57" pos:end="401:57">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="403:9" pos:end="403:70"><expr pos:start="403:9" pos:end="403:69"><call pos:start="403:9" pos:end="403:69"><name pos:start="403:9" pos:end="403:26">tcg_out_goto_label</name><argument_list pos:start="403:27" pos:end="403:69">(<argument pos:start="403:28" pos:end="403:28"><expr pos:start="403:28" pos:end="403:28"><name pos:start="403:28" pos:end="403:28">s</name></expr></argument>, <argument pos:start="403:31" pos:end="403:59"><expr pos:start="403:31" pos:end="403:59"><name pos:start="403:31" pos:end="403:59"><name pos:start="403:31" pos:end="403:50">tcg_cond_to_arm_cond</name><index pos:start="403:51" pos:end="403:59">[<expr pos:start="403:52" pos:end="403:58"><name pos:start="403:52" pos:end="403:58"><name pos:start="403:52" pos:end="403:55">args</name><index pos:start="403:56" pos:end="403:58">[<expr pos:start="403:57" pos:end="403:57"><literal type="number" pos:start="403:57" pos:end="403:57">4</literal></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="403:62" pos:end="403:68"><expr pos:start="403:62" pos:end="403:68"><name pos:start="403:62" pos:end="403:68"><name pos:start="403:62" pos:end="403:65">args</name><index pos:start="403:66" pos:end="403:68">[<expr pos:start="403:67" pos:end="403:67"><literal type="number" pos:start="403:67" pos:end="403:67">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="405:9" pos:end="405:14">break;</break>

    <case pos:start="407:5" pos:end="407:30">case <expr pos:start="407:10" pos:end="407:29"><name pos:start="407:10" pos:end="407:29">INDEX_op_setcond_i32</name></expr>:</case>

        <expr_stmt pos:start="409:9" pos:end="411:56"><expr pos:start="409:9" pos:end="411:55"><call pos:start="409:9" pos:end="411:55"><name pos:start="409:9" pos:end="409:22">tcg_out_dat_rI</name><argument_list pos:start="409:23" pos:end="411:55">(<argument pos:start="409:24" pos:end="409:24"><expr pos:start="409:24" pos:end="409:24"><name pos:start="409:24" pos:end="409:24">s</name></expr></argument>, <argument pos:start="409:27" pos:end="409:33"><expr pos:start="409:27" pos:end="409:33"><name pos:start="409:27" pos:end="409:33">COND_AL</name></expr></argument>, <argument pos:start="409:36" pos:end="409:44"><expr pos:start="409:36" pos:end="409:44"><name pos:start="409:36" pos:end="409:44">ARITH_CMP</name></expr></argument>, <argument pos:start="409:47" pos:end="409:47"><expr pos:start="409:47" pos:end="409:47"><literal type="number" pos:start="409:47" pos:end="409:47">0</literal></expr></argument>,

                       <argument pos:start="411:24" pos:end="411:30"><expr pos:start="411:24" pos:end="411:30"><name pos:start="411:24" pos:end="411:30"><name pos:start="411:24" pos:end="411:27">args</name><index pos:start="411:28" pos:end="411:30">[<expr pos:start="411:29" pos:end="411:29"><literal type="number" pos:start="411:29" pos:end="411:29">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="411:33" pos:end="411:39"><expr pos:start="411:33" pos:end="411:39"><name pos:start="411:33" pos:end="411:39"><name pos:start="411:33" pos:end="411:36">args</name><index pos:start="411:37" pos:end="411:39">[<expr pos:start="411:38" pos:end="411:38"><literal type="number" pos:start="411:38" pos:end="411:38">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="411:42" pos:end="411:54"><expr pos:start="411:42" pos:end="411:54"><name pos:start="411:42" pos:end="411:54"><name pos:start="411:42" pos:end="411:51">const_args</name><index pos:start="411:52" pos:end="411:54">[<expr pos:start="411:53" pos:end="411:53"><literal type="number" pos:start="411:53" pos:end="411:53">2</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="413:9" pos:end="415:50"><expr pos:start="413:9" pos:end="415:49"><call pos:start="413:9" pos:end="415:49"><name pos:start="413:9" pos:end="413:23">tcg_out_dat_imm</name><argument_list pos:start="413:24" pos:end="415:49">(<argument pos:start="413:25" pos:end="413:25"><expr pos:start="413:25" pos:end="413:25"><name pos:start="413:25" pos:end="413:25">s</name></expr></argument>, <argument pos:start="413:28" pos:end="413:56"><expr pos:start="413:28" pos:end="413:56"><name pos:start="413:28" pos:end="413:56"><name pos:start="413:28" pos:end="413:47">tcg_cond_to_arm_cond</name><index pos:start="413:48" pos:end="413:56">[<expr pos:start="413:49" pos:end="413:55"><name pos:start="413:49" pos:end="413:55"><name pos:start="413:49" pos:end="413:52">args</name><index pos:start="413:53" pos:end="413:55">[<expr pos:start="413:54" pos:end="413:54"><literal type="number" pos:start="413:54" pos:end="413:54">3</literal></expr>]</index></name></expr>]</index></name></expr></argument>,

                        <argument pos:start="415:25" pos:end="415:33"><expr pos:start="415:25" pos:end="415:33"><name pos:start="415:25" pos:end="415:33">ARITH_MOV</name></expr></argument>, <argument pos:start="415:36" pos:end="415:42"><expr pos:start="415:36" pos:end="415:42"><name pos:start="415:36" pos:end="415:42"><name pos:start="415:36" pos:end="415:39">args</name><index pos:start="415:40" pos:end="415:42">[<expr pos:start="415:41" pos:end="415:41"><literal type="number" pos:start="415:41" pos:end="415:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="415:45" pos:end="415:45"><expr pos:start="415:45" pos:end="415:45"><literal type="number" pos:start="415:45" pos:end="415:45">0</literal></expr></argument>, <argument pos:start="415:48" pos:end="415:48"><expr pos:start="415:48" pos:end="415:48"><literal type="number" pos:start="415:48" pos:end="415:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="417:9" pos:end="419:50"><expr pos:start="417:9" pos:end="419:49"><call pos:start="417:9" pos:end="419:49"><name pos:start="417:9" pos:end="417:23">tcg_out_dat_imm</name><argument_list pos:start="417:24" pos:end="419:49">(<argument pos:start="417:25" pos:end="417:25"><expr pos:start="417:25" pos:end="417:25"><name pos:start="417:25" pos:end="417:25">s</name></expr></argument>, <argument pos:start="417:28" pos:end="417:73"><expr pos:start="417:28" pos:end="417:73"><name pos:start="417:28" pos:end="417:73"><name pos:start="417:28" pos:end="417:47">tcg_cond_to_arm_cond</name><index pos:start="417:48" pos:end="417:73">[<expr pos:start="417:49" pos:end="417:72"><call pos:start="417:49" pos:end="417:72"><name pos:start="417:49" pos:end="417:63">tcg_invert_cond</name><argument_list pos:start="417:64" pos:end="417:72">(<argument pos:start="417:65" pos:end="417:71"><expr pos:start="417:65" pos:end="417:71"><name pos:start="417:65" pos:end="417:71"><name pos:start="417:65" pos:end="417:68">args</name><index pos:start="417:69" pos:end="417:71">[<expr pos:start="417:70" pos:end="417:70"><literal type="number" pos:start="417:70" pos:end="417:70">3</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>,

                        <argument pos:start="419:25" pos:end="419:33"><expr pos:start="419:25" pos:end="419:33"><name pos:start="419:25" pos:end="419:33">ARITH_MOV</name></expr></argument>, <argument pos:start="419:36" pos:end="419:42"><expr pos:start="419:36" pos:end="419:42"><name pos:start="419:36" pos:end="419:42"><name pos:start="419:36" pos:end="419:39">args</name><index pos:start="419:40" pos:end="419:42">[<expr pos:start="419:41" pos:end="419:41"><literal type="number" pos:start="419:41" pos:end="419:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="419:45" pos:end="419:45"><expr pos:start="419:45" pos:end="419:45"><literal type="number" pos:start="419:45" pos:end="419:45">0</literal></expr></argument>, <argument pos:start="419:48" pos:end="419:48"><expr pos:start="419:48" pos:end="419:48"><literal type="number" pos:start="419:48" pos:end="419:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="421:9" pos:end="421:14">break;</break>

    <case pos:start="423:5" pos:end="423:31">case <expr pos:start="423:10" pos:end="423:30"><name pos:start="423:10" pos:end="423:30">INDEX_op_setcond2_i32</name></expr>:</case>

        <comment type="block" pos:start="425:9" pos:end="425:37">/* See brcond2_i32 comment */</comment>

        <expr_stmt pos:start="427:9" pos:end="429:60"><expr pos:start="427:9" pos:end="429:59"><call pos:start="427:9" pos:end="429:59"><name pos:start="427:9" pos:end="427:23">tcg_out_dat_reg</name><argument_list pos:start="427:24" pos:end="429:59">(<argument pos:start="427:25" pos:end="427:25"><expr pos:start="427:25" pos:end="427:25"><name pos:start="427:25" pos:end="427:25">s</name></expr></argument>, <argument pos:start="427:28" pos:end="427:34"><expr pos:start="427:28" pos:end="427:34"><name pos:start="427:28" pos:end="427:34">COND_AL</name></expr></argument>, <argument pos:start="427:37" pos:end="427:45"><expr pos:start="427:37" pos:end="427:45"><name pos:start="427:37" pos:end="427:45">ARITH_CMP</name></expr></argument>, <argument pos:start="427:48" pos:end="427:48"><expr pos:start="427:48" pos:end="427:48"><literal type="number" pos:start="427:48" pos:end="427:48">0</literal></expr></argument>,

                        <argument pos:start="429:25" pos:end="429:31"><expr pos:start="429:25" pos:end="429:31"><name pos:start="429:25" pos:end="429:31"><name pos:start="429:25" pos:end="429:28">args</name><index pos:start="429:29" pos:end="429:31">[<expr pos:start="429:30" pos:end="429:30"><literal type="number" pos:start="429:30" pos:end="429:30">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="429:34" pos:end="429:40"><expr pos:start="429:34" pos:end="429:40"><name pos:start="429:34" pos:end="429:40"><name pos:start="429:34" pos:end="429:37">args</name><index pos:start="429:38" pos:end="429:40">[<expr pos:start="429:39" pos:end="429:39"><literal type="number" pos:start="429:39" pos:end="429:39">4</literal></expr>]</index></name></expr></argument>, <argument pos:start="429:43" pos:end="429:58"><expr pos:start="429:43" pos:end="429:58"><call pos:start="429:43" pos:end="429:58"><name pos:start="429:43" pos:end="429:55">SHIFT_IMM_LSL</name><argument_list pos:start="429:56" pos:end="429:58">(<argument pos:start="429:57" pos:end="429:57"><expr pos:start="429:57" pos:end="429:57"><literal type="number" pos:start="429:57" pos:end="429:57">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="431:9" pos:end="433:60"><expr pos:start="431:9" pos:end="433:59"><call pos:start="431:9" pos:end="433:59"><name pos:start="431:9" pos:end="431:23">tcg_out_dat_reg</name><argument_list pos:start="431:24" pos:end="433:59">(<argument pos:start="431:25" pos:end="431:25"><expr pos:start="431:25" pos:end="431:25"><name pos:start="431:25" pos:end="431:25">s</name></expr></argument>, <argument pos:start="431:28" pos:end="431:34"><expr pos:start="431:28" pos:end="431:34"><name pos:start="431:28" pos:end="431:34">COND_EQ</name></expr></argument>, <argument pos:start="431:37" pos:end="431:45"><expr pos:start="431:37" pos:end="431:45"><name pos:start="431:37" pos:end="431:45">ARITH_CMP</name></expr></argument>, <argument pos:start="431:48" pos:end="431:48"><expr pos:start="431:48" pos:end="431:48"><literal type="number" pos:start="431:48" pos:end="431:48">0</literal></expr></argument>,

                        <argument pos:start="433:25" pos:end="433:31"><expr pos:start="433:25" pos:end="433:31"><name pos:start="433:25" pos:end="433:31"><name pos:start="433:25" pos:end="433:28">args</name><index pos:start="433:29" pos:end="433:31">[<expr pos:start="433:30" pos:end="433:30"><literal type="number" pos:start="433:30" pos:end="433:30">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="433:34" pos:end="433:40"><expr pos:start="433:34" pos:end="433:40"><name pos:start="433:34" pos:end="433:40"><name pos:start="433:34" pos:end="433:37">args</name><index pos:start="433:38" pos:end="433:40">[<expr pos:start="433:39" pos:end="433:39"><literal type="number" pos:start="433:39" pos:end="433:39">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="433:43" pos:end="433:58"><expr pos:start="433:43" pos:end="433:58"><call pos:start="433:43" pos:end="433:58"><name pos:start="433:43" pos:end="433:55">SHIFT_IMM_LSL</name><argument_list pos:start="433:56" pos:end="433:58">(<argument pos:start="433:57" pos:end="433:57"><expr pos:start="433:57" pos:end="433:57"><literal type="number" pos:start="433:57" pos:end="433:57">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="435:9" pos:end="437:50"><expr pos:start="435:9" pos:end="437:49"><call pos:start="435:9" pos:end="437:49"><name pos:start="435:9" pos:end="435:23">tcg_out_dat_imm</name><argument_list pos:start="435:24" pos:end="437:49">(<argument pos:start="435:25" pos:end="435:25"><expr pos:start="435:25" pos:end="435:25"><name pos:start="435:25" pos:end="435:25">s</name></expr></argument>, <argument pos:start="435:28" pos:end="435:56"><expr pos:start="435:28" pos:end="435:56"><name pos:start="435:28" pos:end="435:56"><name pos:start="435:28" pos:end="435:47">tcg_cond_to_arm_cond</name><index pos:start="435:48" pos:end="435:56">[<expr pos:start="435:49" pos:end="435:55"><name pos:start="435:49" pos:end="435:55"><name pos:start="435:49" pos:end="435:52">args</name><index pos:start="435:53" pos:end="435:55">[<expr pos:start="435:54" pos:end="435:54"><literal type="number" pos:start="435:54" pos:end="435:54">5</literal></expr>]</index></name></expr>]</index></name></expr></argument>,

                        <argument pos:start="437:25" pos:end="437:33"><expr pos:start="437:25" pos:end="437:33"><name pos:start="437:25" pos:end="437:33">ARITH_MOV</name></expr></argument>, <argument pos:start="437:36" pos:end="437:42"><expr pos:start="437:36" pos:end="437:42"><name pos:start="437:36" pos:end="437:42"><name pos:start="437:36" pos:end="437:39">args</name><index pos:start="437:40" pos:end="437:42">[<expr pos:start="437:41" pos:end="437:41"><literal type="number" pos:start="437:41" pos:end="437:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="437:45" pos:end="437:45"><expr pos:start="437:45" pos:end="437:45"><literal type="number" pos:start="437:45" pos:end="437:45">0</literal></expr></argument>, <argument pos:start="437:48" pos:end="437:48"><expr pos:start="437:48" pos:end="437:48"><literal type="number" pos:start="437:48" pos:end="437:48">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="439:9" pos:end="441:50"><expr pos:start="439:9" pos:end="441:49"><call pos:start="439:9" pos:end="441:49"><name pos:start="439:9" pos:end="439:23">tcg_out_dat_imm</name><argument_list pos:start="439:24" pos:end="441:49">(<argument pos:start="439:25" pos:end="439:25"><expr pos:start="439:25" pos:end="439:25"><name pos:start="439:25" pos:end="439:25">s</name></expr></argument>, <argument pos:start="439:28" pos:end="439:73"><expr pos:start="439:28" pos:end="439:73"><name pos:start="439:28" pos:end="439:73"><name pos:start="439:28" pos:end="439:47">tcg_cond_to_arm_cond</name><index pos:start="439:48" pos:end="439:73">[<expr pos:start="439:49" pos:end="439:72"><call pos:start="439:49" pos:end="439:72"><name pos:start="439:49" pos:end="439:63">tcg_invert_cond</name><argument_list pos:start="439:64" pos:end="439:72">(<argument pos:start="439:65" pos:end="439:71"><expr pos:start="439:65" pos:end="439:71"><name pos:start="439:65" pos:end="439:71"><name pos:start="439:65" pos:end="439:68">args</name><index pos:start="439:69" pos:end="439:71">[<expr pos:start="439:70" pos:end="439:70"><literal type="number" pos:start="439:70" pos:end="439:70">5</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>]</index></name></expr></argument>,

                        <argument pos:start="441:25" pos:end="441:33"><expr pos:start="441:25" pos:end="441:33"><name pos:start="441:25" pos:end="441:33">ARITH_MOV</name></expr></argument>, <argument pos:start="441:36" pos:end="441:42"><expr pos:start="441:36" pos:end="441:42"><name pos:start="441:36" pos:end="441:42"><name pos:start="441:36" pos:end="441:39">args</name><index pos:start="441:40" pos:end="441:42">[<expr pos:start="441:41" pos:end="441:41"><literal type="number" pos:start="441:41" pos:end="441:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="441:45" pos:end="441:45"><expr pos:start="441:45" pos:end="441:45"><literal type="number" pos:start="441:45" pos:end="441:45">0</literal></expr></argument>, <argument pos:start="441:48" pos:end="441:48"><expr pos:start="441:48" pos:end="441:48"><literal type="number" pos:start="441:48" pos:end="441:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="443:9" pos:end="443:14">break;</break>



    <case pos:start="447:5" pos:end="447:28">case <expr pos:start="447:10" pos:end="447:27"><name pos:start="447:10" pos:end="447:27">INDEX_op_qemu_ld8u</name></expr>:</case>

        <expr_stmt pos:start="449:9" pos:end="449:36"><expr pos:start="449:9" pos:end="449:35"><call pos:start="449:9" pos:end="449:35"><name pos:start="449:9" pos:end="449:23">tcg_out_qemu_ld</name><argument_list pos:start="449:24" pos:end="449:35">(<argument pos:start="449:25" pos:end="449:25"><expr pos:start="449:25" pos:end="449:25"><name pos:start="449:25" pos:end="449:25">s</name></expr></argument>, <argument pos:start="449:28" pos:end="449:31"><expr pos:start="449:28" pos:end="449:31"><name pos:start="449:28" pos:end="449:31">args</name></expr></argument>, <argument pos:start="449:34" pos:end="449:34"><expr pos:start="449:34" pos:end="449:34"><literal type="number" pos:start="449:34" pos:end="449:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="451:9" pos:end="451:14">break;</break>

    <case pos:start="453:5" pos:end="453:28">case <expr pos:start="453:10" pos:end="453:27"><name pos:start="453:10" pos:end="453:27">INDEX_op_qemu_ld8s</name></expr>:</case>

        <expr_stmt pos:start="455:9" pos:end="455:40"><expr pos:start="455:9" pos:end="455:39"><call pos:start="455:9" pos:end="455:39"><name pos:start="455:9" pos:end="455:23">tcg_out_qemu_ld</name><argument_list pos:start="455:24" pos:end="455:39">(<argument pos:start="455:25" pos:end="455:25"><expr pos:start="455:25" pos:end="455:25"><name pos:start="455:25" pos:end="455:25">s</name></expr></argument>, <argument pos:start="455:28" pos:end="455:31"><expr pos:start="455:28" pos:end="455:31"><name pos:start="455:28" pos:end="455:31">args</name></expr></argument>, <argument pos:start="455:34" pos:end="455:38"><expr pos:start="455:34" pos:end="455:38"><literal type="number" pos:start="455:34" pos:end="455:34">0</literal> <operator pos:start="455:36" pos:end="455:36">|</operator> <literal type="number" pos:start="455:38" pos:end="455:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="457:9" pos:end="457:14">break;</break>

    <case pos:start="459:5" pos:end="459:29">case <expr pos:start="459:10" pos:end="459:28"><name pos:start="459:10" pos:end="459:28">INDEX_op_qemu_ld16u</name></expr>:</case>

        <expr_stmt pos:start="461:9" pos:end="461:36"><expr pos:start="461:9" pos:end="461:35"><call pos:start="461:9" pos:end="461:35"><name pos:start="461:9" pos:end="461:23">tcg_out_qemu_ld</name><argument_list pos:start="461:24" pos:end="461:35">(<argument pos:start="461:25" pos:end="461:25"><expr pos:start="461:25" pos:end="461:25"><name pos:start="461:25" pos:end="461:25">s</name></expr></argument>, <argument pos:start="461:28" pos:end="461:31"><expr pos:start="461:28" pos:end="461:31"><name pos:start="461:28" pos:end="461:31">args</name></expr></argument>, <argument pos:start="461:34" pos:end="461:34"><expr pos:start="461:34" pos:end="461:34"><literal type="number" pos:start="461:34" pos:end="461:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="463:9" pos:end="463:14">break;</break>

    <case pos:start="465:5" pos:end="465:29">case <expr pos:start="465:10" pos:end="465:28"><name pos:start="465:10" pos:end="465:28">INDEX_op_qemu_ld16s</name></expr>:</case>

        <expr_stmt pos:start="467:9" pos:end="467:40"><expr pos:start="467:9" pos:end="467:39"><call pos:start="467:9" pos:end="467:39"><name pos:start="467:9" pos:end="467:23">tcg_out_qemu_ld</name><argument_list pos:start="467:24" pos:end="467:39">(<argument pos:start="467:25" pos:end="467:25"><expr pos:start="467:25" pos:end="467:25"><name pos:start="467:25" pos:end="467:25">s</name></expr></argument>, <argument pos:start="467:28" pos:end="467:31"><expr pos:start="467:28" pos:end="467:31"><name pos:start="467:28" pos:end="467:31">args</name></expr></argument>, <argument pos:start="467:34" pos:end="467:38"><expr pos:start="467:34" pos:end="467:38"><literal type="number" pos:start="467:34" pos:end="467:34">1</literal> <operator pos:start="467:36" pos:end="467:36">|</operator> <literal type="number" pos:start="467:38" pos:end="467:38">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="469:9" pos:end="469:14">break;</break>

    <case pos:start="471:5" pos:end="471:28">case <expr pos:start="471:10" pos:end="471:27"><name pos:start="471:10" pos:end="471:27">INDEX_op_qemu_ld32</name></expr>:</case>

        <expr_stmt pos:start="473:9" pos:end="473:36"><expr pos:start="473:9" pos:end="473:35"><call pos:start="473:9" pos:end="473:35"><name pos:start="473:9" pos:end="473:23">tcg_out_qemu_ld</name><argument_list pos:start="473:24" pos:end="473:35">(<argument pos:start="473:25" pos:end="473:25"><expr pos:start="473:25" pos:end="473:25"><name pos:start="473:25" pos:end="473:25">s</name></expr></argument>, <argument pos:start="473:28" pos:end="473:31"><expr pos:start="473:28" pos:end="473:31"><name pos:start="473:28" pos:end="473:31">args</name></expr></argument>, <argument pos:start="473:34" pos:end="473:34"><expr pos:start="473:34" pos:end="473:34"><literal type="number" pos:start="473:34" pos:end="473:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="475:9" pos:end="475:14">break;</break>

    <case pos:start="477:5" pos:end="477:28">case <expr pos:start="477:10" pos:end="477:27"><name pos:start="477:10" pos:end="477:27">INDEX_op_qemu_ld64</name></expr>:</case>

        <expr_stmt pos:start="479:9" pos:end="479:36"><expr pos:start="479:9" pos:end="479:35"><call pos:start="479:9" pos:end="479:35"><name pos:start="479:9" pos:end="479:23">tcg_out_qemu_ld</name><argument_list pos:start="479:24" pos:end="479:35">(<argument pos:start="479:25" pos:end="479:25"><expr pos:start="479:25" pos:end="479:25"><name pos:start="479:25" pos:end="479:25">s</name></expr></argument>, <argument pos:start="479:28" pos:end="479:31"><expr pos:start="479:28" pos:end="479:31"><name pos:start="479:28" pos:end="479:31">args</name></expr></argument>, <argument pos:start="479:34" pos:end="479:34"><expr pos:start="479:34" pos:end="479:34"><literal type="number" pos:start="479:34" pos:end="479:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="481:9" pos:end="481:14">break;</break>



    <case pos:start="485:5" pos:end="485:27">case <expr pos:start="485:10" pos:end="485:26"><name pos:start="485:10" pos:end="485:26">INDEX_op_qemu_st8</name></expr>:</case>

        <expr_stmt pos:start="487:9" pos:end="487:36"><expr pos:start="487:9" pos:end="487:35"><call pos:start="487:9" pos:end="487:35"><name pos:start="487:9" pos:end="487:23">tcg_out_qemu_st</name><argument_list pos:start="487:24" pos:end="487:35">(<argument pos:start="487:25" pos:end="487:25"><expr pos:start="487:25" pos:end="487:25"><name pos:start="487:25" pos:end="487:25">s</name></expr></argument>, <argument pos:start="487:28" pos:end="487:31"><expr pos:start="487:28" pos:end="487:31"><name pos:start="487:28" pos:end="487:31">args</name></expr></argument>, <argument pos:start="487:34" pos:end="487:34"><expr pos:start="487:34" pos:end="487:34"><literal type="number" pos:start="487:34" pos:end="487:34">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="489:9" pos:end="489:14">break;</break>

    <case pos:start="491:5" pos:end="491:28">case <expr pos:start="491:10" pos:end="491:27"><name pos:start="491:10" pos:end="491:27">INDEX_op_qemu_st16</name></expr>:</case>

        <expr_stmt pos:start="493:9" pos:end="493:36"><expr pos:start="493:9" pos:end="493:35"><call pos:start="493:9" pos:end="493:35"><name pos:start="493:9" pos:end="493:23">tcg_out_qemu_st</name><argument_list pos:start="493:24" pos:end="493:35">(<argument pos:start="493:25" pos:end="493:25"><expr pos:start="493:25" pos:end="493:25"><name pos:start="493:25" pos:end="493:25">s</name></expr></argument>, <argument pos:start="493:28" pos:end="493:31"><expr pos:start="493:28" pos:end="493:31"><name pos:start="493:28" pos:end="493:31">args</name></expr></argument>, <argument pos:start="493:34" pos:end="493:34"><expr pos:start="493:34" pos:end="493:34"><literal type="number" pos:start="493:34" pos:end="493:34">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="495:9" pos:end="495:14">break;</break>

    <case pos:start="497:5" pos:end="497:28">case <expr pos:start="497:10" pos:end="497:27"><name pos:start="497:10" pos:end="497:27">INDEX_op_qemu_st32</name></expr>:</case>

        <expr_stmt pos:start="499:9" pos:end="499:36"><expr pos:start="499:9" pos:end="499:35"><call pos:start="499:9" pos:end="499:35"><name pos:start="499:9" pos:end="499:23">tcg_out_qemu_st</name><argument_list pos:start="499:24" pos:end="499:35">(<argument pos:start="499:25" pos:end="499:25"><expr pos:start="499:25" pos:end="499:25"><name pos:start="499:25" pos:end="499:25">s</name></expr></argument>, <argument pos:start="499:28" pos:end="499:31"><expr pos:start="499:28" pos:end="499:31"><name pos:start="499:28" pos:end="499:31">args</name></expr></argument>, <argument pos:start="499:34" pos:end="499:34"><expr pos:start="499:34" pos:end="499:34"><literal type="number" pos:start="499:34" pos:end="499:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="501:9" pos:end="501:14">break;</break>

    <case pos:start="503:5" pos:end="503:28">case <expr pos:start="503:10" pos:end="503:27"><name pos:start="503:10" pos:end="503:27">INDEX_op_qemu_st64</name></expr>:</case>

        <expr_stmt pos:start="505:9" pos:end="505:36"><expr pos:start="505:9" pos:end="505:35"><call pos:start="505:9" pos:end="505:35"><name pos:start="505:9" pos:end="505:23">tcg_out_qemu_st</name><argument_list pos:start="505:24" pos:end="505:35">(<argument pos:start="505:25" pos:end="505:25"><expr pos:start="505:25" pos:end="505:25"><name pos:start="505:25" pos:end="505:25">s</name></expr></argument>, <argument pos:start="505:28" pos:end="505:31"><expr pos:start="505:28" pos:end="505:31"><name pos:start="505:28" pos:end="505:31">args</name></expr></argument>, <argument pos:start="505:34" pos:end="505:34"><expr pos:start="505:34" pos:end="505:34"><literal type="number" pos:start="505:34" pos:end="505:34">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="507:9" pos:end="507:14">break;</break>



    <case pos:start="511:5" pos:end="511:30">case <expr pos:start="511:10" pos:end="511:29"><name pos:start="511:10" pos:end="511:29">INDEX_op_bswap16_i32</name></expr>:</case>

        <expr_stmt pos:start="513:9" pos:end="513:54"><expr pos:start="513:9" pos:end="513:53"><call pos:start="513:9" pos:end="513:53"><name pos:start="513:9" pos:end="513:23">tcg_out_bswap16</name><argument_list pos:start="513:24" pos:end="513:53">(<argument pos:start="513:25" pos:end="513:25"><expr pos:start="513:25" pos:end="513:25"><name pos:start="513:25" pos:end="513:25">s</name></expr></argument>, <argument pos:start="513:28" pos:end="513:34"><expr pos:start="513:28" pos:end="513:34"><name pos:start="513:28" pos:end="513:34">COND_AL</name></expr></argument>, <argument pos:start="513:37" pos:end="513:43"><expr pos:start="513:37" pos:end="513:43"><name pos:start="513:37" pos:end="513:43"><name pos:start="513:37" pos:end="513:40">args</name><index pos:start="513:41" pos:end="513:43">[<expr pos:start="513:42" pos:end="513:42"><literal type="number" pos:start="513:42" pos:end="513:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="513:46" pos:end="513:52"><expr pos:start="513:46" pos:end="513:52"><name pos:start="513:46" pos:end="513:52"><name pos:start="513:46" pos:end="513:49">args</name><index pos:start="513:50" pos:end="513:52">[<expr pos:start="513:51" pos:end="513:51"><literal type="number" pos:start="513:51" pos:end="513:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="515:9" pos:end="515:14">break;</break>

    <case pos:start="517:5" pos:end="517:30">case <expr pos:start="517:10" pos:end="517:29"><name pos:start="517:10" pos:end="517:29">INDEX_op_bswap32_i32</name></expr>:</case>

        <expr_stmt pos:start="519:9" pos:end="519:54"><expr pos:start="519:9" pos:end="519:53"><call pos:start="519:9" pos:end="519:53"><name pos:start="519:9" pos:end="519:23">tcg_out_bswap32</name><argument_list pos:start="519:24" pos:end="519:53">(<argument pos:start="519:25" pos:end="519:25"><expr pos:start="519:25" pos:end="519:25"><name pos:start="519:25" pos:end="519:25">s</name></expr></argument>, <argument pos:start="519:28" pos:end="519:34"><expr pos:start="519:28" pos:end="519:34"><name pos:start="519:28" pos:end="519:34">COND_AL</name></expr></argument>, <argument pos:start="519:37" pos:end="519:43"><expr pos:start="519:37" pos:end="519:43"><name pos:start="519:37" pos:end="519:43"><name pos:start="519:37" pos:end="519:40">args</name><index pos:start="519:41" pos:end="519:43">[<expr pos:start="519:42" pos:end="519:42"><literal type="number" pos:start="519:42" pos:end="519:42">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="519:46" pos:end="519:52"><expr pos:start="519:46" pos:end="519:52"><name pos:start="519:46" pos:end="519:52"><name pos:start="519:46" pos:end="519:49">args</name><index pos:start="519:50" pos:end="519:52">[<expr pos:start="519:51" pos:end="519:51"><literal type="number" pos:start="519:51" pos:end="519:51">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="521:9" pos:end="521:14">break;</break>



    <case pos:start="525:5" pos:end="525:28">case <expr pos:start="525:10" pos:end="525:27"><name pos:start="525:10" pos:end="525:27">INDEX_op_ext8s_i32</name></expr>:</case>

        <expr_stmt pos:start="527:9" pos:end="527:52"><expr pos:start="527:9" pos:end="527:51"><call pos:start="527:9" pos:end="527:51"><name pos:start="527:9" pos:end="527:21">tcg_out_ext8s</name><argument_list pos:start="527:22" pos:end="527:51">(<argument pos:start="527:23" pos:end="527:23"><expr pos:start="527:23" pos:end="527:23"><name pos:start="527:23" pos:end="527:23">s</name></expr></argument>, <argument pos:start="527:26" pos:end="527:32"><expr pos:start="527:26" pos:end="527:32"><name pos:start="527:26" pos:end="527:32">COND_AL</name></expr></argument>, <argument pos:start="527:35" pos:end="527:41"><expr pos:start="527:35" pos:end="527:41"><name pos:start="527:35" pos:end="527:41"><name pos:start="527:35" pos:end="527:38">args</name><index pos:start="527:39" pos:end="527:41">[<expr pos:start="527:40" pos:end="527:40"><literal type="number" pos:start="527:40" pos:end="527:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="527:44" pos:end="527:50"><expr pos:start="527:44" pos:end="527:50"><name pos:start="527:44" pos:end="527:50"><name pos:start="527:44" pos:end="527:47">args</name><index pos:start="527:48" pos:end="527:50">[<expr pos:start="527:49" pos:end="527:49"><literal type="number" pos:start="527:49" pos:end="527:49">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="529:9" pos:end="529:14">break;</break>

    <case pos:start="531:5" pos:end="531:29">case <expr pos:start="531:10" pos:end="531:28"><name pos:start="531:10" pos:end="531:28">INDEX_op_ext16s_i32</name></expr>:</case>

        <expr_stmt pos:start="533:9" pos:end="533:53"><expr pos:start="533:9" pos:end="533:52"><call pos:start="533:9" pos:end="533:52"><name pos:start="533:9" pos:end="533:22">tcg_out_ext16s</name><argument_list pos:start="533:23" pos:end="533:52">(<argument pos:start="533:24" pos:end="533:24"><expr pos:start="533:24" pos:end="533:24"><name pos:start="533:24" pos:end="533:24">s</name></expr></argument>, <argument pos:start="533:27" pos:end="533:33"><expr pos:start="533:27" pos:end="533:33"><name pos:start="533:27" pos:end="533:33">COND_AL</name></expr></argument>, <argument pos:start="533:36" pos:end="533:42"><expr pos:start="533:36" pos:end="533:42"><name pos:start="533:36" pos:end="533:42"><name pos:start="533:36" pos:end="533:39">args</name><index pos:start="533:40" pos:end="533:42">[<expr pos:start="533:41" pos:end="533:41"><literal type="number" pos:start="533:41" pos:end="533:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="533:45" pos:end="533:51"><expr pos:start="533:45" pos:end="533:51"><name pos:start="533:45" pos:end="533:51"><name pos:start="533:45" pos:end="533:48">args</name><index pos:start="533:49" pos:end="533:51">[<expr pos:start="533:50" pos:end="533:50"><literal type="number" pos:start="533:50" pos:end="533:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="535:9" pos:end="535:14">break;</break>

    <case pos:start="537:5" pos:end="537:29">case <expr pos:start="537:10" pos:end="537:28"><name pos:start="537:10" pos:end="537:28">INDEX_op_ext16u_i32</name></expr>:</case>

        <expr_stmt pos:start="539:9" pos:end="539:53"><expr pos:start="539:9" pos:end="539:52"><call pos:start="539:9" pos:end="539:52"><name pos:start="539:9" pos:end="539:22">tcg_out_ext16u</name><argument_list pos:start="539:23" pos:end="539:52">(<argument pos:start="539:24" pos:end="539:24"><expr pos:start="539:24" pos:end="539:24"><name pos:start="539:24" pos:end="539:24">s</name></expr></argument>, <argument pos:start="539:27" pos:end="539:33"><expr pos:start="539:27" pos:end="539:33"><name pos:start="539:27" pos:end="539:33">COND_AL</name></expr></argument>, <argument pos:start="539:36" pos:end="539:42"><expr pos:start="539:36" pos:end="539:42"><name pos:start="539:36" pos:end="539:42"><name pos:start="539:36" pos:end="539:39">args</name><index pos:start="539:40" pos:end="539:42">[<expr pos:start="539:41" pos:end="539:41"><literal type="number" pos:start="539:41" pos:end="539:41">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="539:45" pos:end="539:51"><expr pos:start="539:45" pos:end="539:51"><name pos:start="539:45" pos:end="539:51"><name pos:start="539:45" pos:end="539:48">args</name><index pos:start="539:49" pos:end="539:51">[<expr pos:start="539:50" pos:end="539:50"><literal type="number" pos:start="539:50" pos:end="539:50">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="541:9" pos:end="541:14">break;</break>



    <default pos:start="545:5" pos:end="545:12">default:</default>

        <expr_stmt pos:start="547:9" pos:end="547:20"><expr pos:start="547:9" pos:end="547:19"><call pos:start="547:9" pos:end="547:19"><name pos:start="547:9" pos:end="547:17">tcg_abort</name><argument_list pos:start="547:18" pos:end="547:19">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
