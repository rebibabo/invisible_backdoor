<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25806.c" pos:tabs="8"><function pos:start="1:1" pos:end="237:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">uhci_process_frame</name><parameter_list pos:start="1:31" pos:end="1:44">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:42"><name pos:start="1:32" pos:end="1:40">UHCIState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="237:1">{<block_content pos:start="5:5" pos:end="235:36">

    <decl_stmt pos:start="5:5" pos:end="5:58"><decl pos:start="5:5" pos:end="5:23"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:23">frame_addr</name></decl>, <decl pos:start="5:26" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:26" pos:end="5:29">link</name></decl>, <decl pos:start="5:32" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:32" pos:end="5:42">old_td_ctrl</name></decl>, <decl pos:start="5:45" pos:end="5:47"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:45" pos:end="5:47">val</name></decl>, <decl pos:start="5:50" pos:end="5:57"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:50" pos:end="5:57">int_mask</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:20">curr_qh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">cnt</name></decl>, <decl pos:start="9:14" pos:end="9:16"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:16">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">UHCI_TD</name></type> <name pos:start="11:13" pos:end="11:14">td</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">UHCI_QH</name></type> <name pos:start="13:13" pos:end="13:14">qh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">QhDb</name></type> <name pos:start="15:10" pos:end="15:13">qhdb</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:61"><expr pos:start="19:5" pos:end="19:60"><name pos:start="19:5" pos:end="19:14">frame_addr</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:32"><name pos:start="19:18" pos:end="19:18">s</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:32">fl_base_addr</name></name> <operator pos:start="19:34" pos:end="19:34">+</operator> <operator pos:start="19:36" pos:end="19:36">(</operator><operator pos:start="19:37" pos:end="19:37">(</operator><name pos:start="19:38" pos:end="19:45"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:45">frnum</name></name> <operator pos:start="19:47" pos:end="19:47">&amp;</operator> <literal type="number" pos:start="19:49" pos:end="19:53">0x3ff</literal><operator pos:start="19:54" pos:end="19:54">)</operator> <operator pos:start="19:56" pos:end="19:57">&lt;&lt;</operator> <literal type="number" pos:start="19:59" pos:end="19:59">2</literal><operator pos:start="19:60" pos:end="19:60">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:76"><expr pos:start="23:5" pos:end="23:75"><call pos:start="23:5" pos:end="23:75"><name pos:start="23:5" pos:end="23:11">DPRINTF</name><argument_list pos:start="23:12" pos:end="23:75">(<argument pos:start="23:13" pos:end="23:51"><expr pos:start="23:13" pos:end="23:51"><literal type="string" pos:start="23:13" pos:end="23:51">"uhci: processing frame %d addr 0x%x\n"</literal></expr></argument> , <argument pos:start="23:55" pos:end="23:62"><expr pos:start="23:55" pos:end="23:62"><name pos:start="23:55" pos:end="23:62"><name pos:start="23:55" pos:end="23:55">s</name><operator pos:start="23:56" pos:end="23:57">-&gt;</operator><name pos:start="23:58" pos:end="23:62">frnum</name></name></expr></argument>, <argument pos:start="23:65" pos:end="23:74"><expr pos:start="23:65" pos:end="23:74"><name pos:start="23:65" pos:end="23:74">frame_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><call pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:28">cpu_physical_memory_read</name><argument_list pos:start="27:29" pos:end="27:61">(<argument pos:start="27:30" pos:end="27:39"><expr pos:start="27:30" pos:end="27:39"><name pos:start="27:30" pos:end="27:39">frame_addr</name></expr></argument>, <argument pos:start="27:42" pos:end="27:57"><expr pos:start="27:42" pos:end="27:57"><operator pos:start="27:42" pos:end="27:42">(</operator><name pos:start="27:43" pos:end="27:49">uint8_t</name> <operator pos:start="27:51" pos:end="27:51">*</operator><operator pos:start="27:52" pos:end="27:52">)</operator><operator pos:start="27:53" pos:end="27:53">&amp;</operator><name pos:start="27:54" pos:end="27:57">link</name></expr></argument>, <argument pos:start="27:60" pos:end="27:60"><expr pos:start="27:60" pos:end="27:60"><literal type="number" pos:start="27:60" pos:end="27:60">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:24"><expr pos:start="29:5" pos:end="29:23"><call pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:16">le32_to_cpus</name><argument_list pos:start="29:17" pos:end="29:23">(<argument pos:start="29:18" pos:end="29:22"><expr pos:start="29:18" pos:end="29:22"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:22">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:17"><expr pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:12">int_mask</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:17"><expr pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:11">curr_qh</name>  <operator pos:start="35:14" pos:end="35:14">=</operator> <literal type="number" pos:start="35:16" pos:end="35:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:22"><expr pos:start="39:5" pos:end="39:21"><call pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:14">qhdb_reset</name><argument_list pos:start="39:15" pos:end="39:21">(<argument pos:start="39:16" pos:end="39:20"><expr pos:start="39:16" pos:end="39:20"><operator pos:start="39:16" pos:end="39:16">&amp;</operator><name pos:start="39:17" pos:end="39:20">qhdb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="43:5" pos:end="231:5">for <control pos:start="43:9" pos:end="43:61">(<init pos:start="43:10" pos:end="43:31"><expr pos:start="43:10" pos:end="43:30"><name pos:start="43:10" pos:end="43:12">cnt</name> <operator pos:start="43:14" pos:end="43:14">=</operator> <name pos:start="43:16" pos:end="43:30">FRAME_MAX_LOOPS</name></expr>;</init> <condition pos:start="43:33" pos:end="43:54"><expr pos:start="43:33" pos:end="43:53"><call pos:start="43:33" pos:end="43:46"><name pos:start="43:33" pos:end="43:40">is_valid</name><argument_list pos:start="43:41" pos:end="43:46">(<argument pos:start="43:42" pos:end="43:45"><expr pos:start="43:42" pos:end="43:45"><name pos:start="43:42" pos:end="43:45">link</name></expr></argument>)</argument_list></call> <operator pos:start="43:48" pos:end="43:49">&amp;&amp;</operator> <name pos:start="43:51" pos:end="43:53">cnt</name></expr>;</condition> <incr pos:start="43:56" pos:end="43:60"><expr pos:start="43:56" pos:end="43:60"><name pos:start="43:56" pos:end="43:58">cnt</name><operator pos:start="43:59" pos:end="43:60">--</operator></expr></incr>)</control> <block pos:start="43:63" pos:end="231:5">{<block_content pos:start="45:9" pos:end="225:9">

        <if_stmt pos:start="45:9" pos:end="109:9"><if pos:start="45:9" pos:end="109:9">if <condition pos:start="45:12" pos:end="45:24">(<expr pos:start="45:13" pos:end="45:23"><call pos:start="45:13" pos:end="45:23"><name pos:start="45:13" pos:end="45:17">is_qh</name><argument_list pos:start="45:18" pos:end="45:23">(<argument pos:start="45:19" pos:end="45:22"><expr pos:start="45:19" pos:end="45:22"><name pos:start="45:19" pos:end="45:22">link</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:26" pos:end="109:9">{<block_content pos:start="51:13" pos:end="107:21">

            <comment type="block" pos:start="47:13" pos:end="47:20">/* QH */</comment>



            <if_stmt pos:start="51:13" pos:end="71:13"><if pos:start="51:13" pos:end="71:13">if <condition pos:start="51:16" pos:end="51:41">(<expr pos:start="51:17" pos:end="51:40"><call pos:start="51:17" pos:end="51:40"><name pos:start="51:17" pos:end="51:27">qhdb_insert</name><argument_list pos:start="51:28" pos:end="51:40">(<argument pos:start="51:29" pos:end="51:33"><expr pos:start="51:29" pos:end="51:33"><operator pos:start="51:29" pos:end="51:29">&amp;</operator><name pos:start="51:30" pos:end="51:33">qhdb</name></expr></argument>, <argument pos:start="51:36" pos:end="51:39"><expr pos:start="51:36" pos:end="51:39"><name pos:start="51:36" pos:end="51:39">link</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="51:43" pos:end="71:13">{<block_content pos:start="67:17" pos:end="69:22">

                <comment type="block" pos:start="53:17" pos:end="65:19">/*

                 * We're going in circles. Which is not a bug because

                 * HCD is allowed to do that as part of the BW management. 

                 * In our case though it makes no sense to spin here. Sync transations 

                 * are already done, and async completion handler will re-process 

                 * the frame when something is ready.

                 */</comment>

                <expr_stmt pos:start="67:17" pos:end="67:64"><expr pos:start="67:17" pos:end="67:63"><call pos:start="67:17" pos:end="67:63"><name pos:start="67:17" pos:end="67:23">DPRINTF</name><argument_list pos:start="67:24" pos:end="67:63">(<argument pos:start="67:25" pos:end="67:56"><expr pos:start="67:25" pos:end="67:56"><literal type="string" pos:start="67:25" pos:end="67:56">"uhci: detected loop. qh 0x%x\n"</literal></expr></argument>, <argument pos:start="67:59" pos:end="67:62"><expr pos:start="67:59" pos:end="67:62"><name pos:start="67:59" pos:end="67:62">link</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="69:17" pos:end="69:22">break;</break>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="75:13" pos:end="75:79"><expr pos:start="75:13" pos:end="75:78"><call pos:start="75:13" pos:end="75:78"><name pos:start="75:13" pos:end="75:36">cpu_physical_memory_read</name><argument_list pos:start="75:37" pos:end="75:78">(<argument pos:start="75:38" pos:end="75:48"><expr pos:start="75:38" pos:end="75:48"><name pos:start="75:38" pos:end="75:41">link</name> <operator pos:start="75:43" pos:end="75:43">&amp;</operator> <operator pos:start="75:45" pos:end="75:45">~</operator><literal type="number" pos:start="75:46" pos:end="75:48">0xf</literal></expr></argument>, <argument pos:start="75:51" pos:end="75:65"><expr pos:start="75:51" pos:end="75:65"><operator pos:start="75:51" pos:end="75:51">(</operator><name pos:start="75:52" pos:end="75:58">uint8_t</name> <operator pos:start="75:60" pos:end="75:60">*</operator><operator pos:start="75:61" pos:end="75:61">)</operator> <operator pos:start="75:63" pos:end="75:63">&amp;</operator><name pos:start="75:64" pos:end="75:65">qh</name></expr></argument>, <argument pos:start="75:68" pos:end="75:77"><expr pos:start="75:68" pos:end="75:77"><sizeof pos:start="75:68" pos:end="75:77">sizeof<argument_list pos:start="75:74" pos:end="75:77">(<argument pos:start="75:75" pos:end="75:76"><expr pos:start="75:75" pos:end="75:76"><name pos:start="75:75" pos:end="75:76">qh</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:35"><expr pos:start="77:13" pos:end="77:34"><call pos:start="77:13" pos:end="77:34"><name pos:start="77:13" pos:end="77:24">le32_to_cpus</name><argument_list pos:start="77:25" pos:end="77:34">(<argument pos:start="77:26" pos:end="77:33"><expr pos:start="77:26" pos:end="77:33"><operator pos:start="77:26" pos:end="77:26">&amp;</operator><name pos:start="77:27" pos:end="77:33"><name pos:start="77:27" pos:end="77:28">qh</name><operator pos:start="77:29" pos:end="77:29">.</operator><name pos:start="77:30" pos:end="77:33">link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:38"><expr pos:start="79:13" pos:end="79:37"><call pos:start="79:13" pos:end="79:37"><name pos:start="79:13" pos:end="79:24">le32_to_cpus</name><argument_list pos:start="79:25" pos:end="79:37">(<argument pos:start="79:26" pos:end="79:36"><expr pos:start="79:26" pos:end="79:36"><operator pos:start="79:26" pos:end="79:26">&amp;</operator><name pos:start="79:27" pos:end="79:36"><name pos:start="79:27" pos:end="79:28">qh</name><operator pos:start="79:29" pos:end="79:29">.</operator><name pos:start="79:30" pos:end="79:36">el_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="83:13" pos:end="85:47"><expr pos:start="83:13" pos:end="85:46"><call pos:start="83:13" pos:end="85:46"><name pos:start="83:13" pos:end="83:19">DPRINTF</name><argument_list pos:start="83:20" pos:end="85:46">(<argument pos:start="83:21" pos:end="83:64"><expr pos:start="83:21" pos:end="83:64"><literal type="string" pos:start="83:21" pos:end="83:64">"uhci: QH 0x%x load. link 0x%x elink 0x%x\n"</literal></expr></argument>,

                    <argument pos:start="85:21" pos:end="85:24"><expr pos:start="85:21" pos:end="85:24"><name pos:start="85:21" pos:end="85:24">link</name></expr></argument>, <argument pos:start="85:27" pos:end="85:33"><expr pos:start="85:27" pos:end="85:33"><name pos:start="85:27" pos:end="85:33"><name pos:start="85:27" pos:end="85:28">qh</name><operator pos:start="85:29" pos:end="85:29">.</operator><name pos:start="85:30" pos:end="85:33">link</name></name></expr></argument>, <argument pos:start="85:36" pos:end="85:45"><expr pos:start="85:36" pos:end="85:45"><name pos:start="85:36" pos:end="85:45"><name pos:start="85:36" pos:end="85:37">qh</name><operator pos:start="85:38" pos:end="85:38">.</operator><name pos:start="85:39" pos:end="85:45">el_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="89:13" pos:end="105:13"><if pos:start="89:13" pos:end="97:13">if <condition pos:start="89:16" pos:end="89:38">(<expr pos:start="89:17" pos:end="89:37"><operator pos:start="89:17" pos:end="89:17">!</operator><call pos:start="89:18" pos:end="89:37"><name pos:start="89:18" pos:end="89:25">is_valid</name><argument_list pos:start="89:26" pos:end="89:37">(<argument pos:start="89:27" pos:end="89:36"><expr pos:start="89:27" pos:end="89:36"><name pos:start="89:27" pos:end="89:36"><name pos:start="89:27" pos:end="89:28">qh</name><operator pos:start="89:29" pos:end="89:29">.</operator><name pos:start="89:30" pos:end="89:36">el_link</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="89:40" pos:end="97:13">{<block_content pos:start="93:17" pos:end="95:31">

                <comment type="block" pos:start="91:17" pos:end="91:37">/* QH w/o elements */</comment>

                <expr_stmt pos:start="93:17" pos:end="93:28"><expr pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:23">curr_qh</name> <operator pos:start="93:25" pos:end="93:25">=</operator> <literal type="number" pos:start="93:27" pos:end="93:27">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:31"><expr pos:start="95:17" pos:end="95:30"><name pos:start="95:17" pos:end="95:20">link</name> <operator pos:start="95:22" pos:end="95:22">=</operator> <name pos:start="95:24" pos:end="95:30"><name pos:start="95:24" pos:end="95:25">qh</name><operator pos:start="95:26" pos:end="95:26">.</operator><name pos:start="95:27" pos:end="95:30">link</name></name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="97:15" pos:end="105:13">else <block pos:start="97:20" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:34">

                <comment type="block" pos:start="99:17" pos:end="99:38">/* QH with elements */</comment>

            	<expr_stmt pos:start="101:17" pos:end="101:31"><expr pos:start="101:17" pos:end="101:30"><name pos:start="101:17" pos:end="101:23">curr_qh</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:30">link</name></expr>;</expr_stmt>

            	<expr_stmt pos:start="103:17" pos:end="103:34"><expr pos:start="103:17" pos:end="103:33"><name pos:start="103:17" pos:end="103:20">link</name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:33"><name pos:start="103:24" pos:end="103:25">qh</name><operator pos:start="103:26" pos:end="103:26">.</operator><name pos:start="103:27" pos:end="103:33">el_link</name></name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <continue pos:start="107:13" pos:end="107:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="113:9" pos:end="113:16">/* TD */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:75"><expr pos:start="115:9" pos:end="115:74"><call pos:start="115:9" pos:end="115:74"><name pos:start="115:9" pos:end="115:32">cpu_physical_memory_read</name><argument_list pos:start="115:33" pos:end="115:74">(<argument pos:start="115:34" pos:end="115:44"><expr pos:start="115:34" pos:end="115:44"><name pos:start="115:34" pos:end="115:37">link</name> <operator pos:start="115:39" pos:end="115:39">&amp;</operator> <operator pos:start="115:41" pos:end="115:41">~</operator><literal type="number" pos:start="115:42" pos:end="115:44">0xf</literal></expr></argument>, <argument pos:start="115:47" pos:end="115:61"><expr pos:start="115:47" pos:end="115:61"><operator pos:start="115:47" pos:end="115:47">(</operator><name pos:start="115:48" pos:end="115:54">uint8_t</name> <operator pos:start="115:56" pos:end="115:56">*</operator><operator pos:start="115:57" pos:end="115:57">)</operator> <operator pos:start="115:59" pos:end="115:59">&amp;</operator><name pos:start="115:60" pos:end="115:61">td</name></expr></argument>, <argument pos:start="115:64" pos:end="115:73"><expr pos:start="115:64" pos:end="115:73"><sizeof pos:start="115:64" pos:end="115:73">sizeof<argument_list pos:start="115:70" pos:end="115:73">(<argument pos:start="115:71" pos:end="115:72"><expr pos:start="115:71" pos:end="115:72"><name pos:start="115:71" pos:end="115:72">td</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:31"><expr pos:start="117:9" pos:end="117:30"><call pos:start="117:9" pos:end="117:30"><name pos:start="117:9" pos:end="117:20">le32_to_cpus</name><argument_list pos:start="117:21" pos:end="117:30">(<argument pos:start="117:22" pos:end="117:29"><expr pos:start="117:22" pos:end="117:29"><operator pos:start="117:22" pos:end="117:22">&amp;</operator><name pos:start="117:23" pos:end="117:29"><name pos:start="117:23" pos:end="117:24">td</name><operator pos:start="117:25" pos:end="117:25">.</operator><name pos:start="117:26" pos:end="117:29">link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:31"><expr pos:start="119:9" pos:end="119:30"><call pos:start="119:9" pos:end="119:30"><name pos:start="119:9" pos:end="119:20">le32_to_cpus</name><argument_list pos:start="119:21" pos:end="119:30">(<argument pos:start="119:22" pos:end="119:29"><expr pos:start="119:22" pos:end="119:29"><operator pos:start="119:22" pos:end="119:22">&amp;</operator><name pos:start="119:23" pos:end="119:29"><name pos:start="119:23" pos:end="119:24">td</name><operator pos:start="119:25" pos:end="119:25">.</operator><name pos:start="119:26" pos:end="119:29">ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:32"><expr pos:start="121:9" pos:end="121:31"><call pos:start="121:9" pos:end="121:31"><name pos:start="121:9" pos:end="121:20">le32_to_cpus</name><argument_list pos:start="121:21" pos:end="121:31">(<argument pos:start="121:22" pos:end="121:30"><expr pos:start="121:22" pos:end="121:30"><operator pos:start="121:22" pos:end="121:22">&amp;</operator><name pos:start="121:23" pos:end="121:30"><name pos:start="121:23" pos:end="121:24">td</name><operator pos:start="121:25" pos:end="121:25">.</operator><name pos:start="121:26" pos:end="121:30">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:33"><expr pos:start="123:9" pos:end="123:32"><call pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:20">le32_to_cpus</name><argument_list pos:start="123:21" pos:end="123:32">(<argument pos:start="123:22" pos:end="123:31"><expr pos:start="123:22" pos:end="123:31"><operator pos:start="123:22" pos:end="123:22">&amp;</operator><name pos:start="123:23" pos:end="123:31"><name pos:start="123:23" pos:end="123:24">td</name><operator pos:start="123:25" pos:end="123:25">.</operator><name pos:start="123:26" pos:end="123:31">buffer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="127:9" pos:end="129:59"><expr pos:start="127:9" pos:end="129:58"><call pos:start="127:9" pos:end="129:58"><name pos:start="127:9" pos:end="127:15">DPRINTF</name><argument_list pos:start="127:16" pos:end="129:58">(<argument pos:start="127:17" pos:end="127:78"><expr pos:start="127:17" pos:end="127:78"><literal type="string" pos:start="127:17" pos:end="127:78">"uhci: TD 0x%x load. link 0x%x ctrl 0x%x token 0x%x qh 0x%x\n"</literal></expr></argument>, 

                <argument pos:start="129:17" pos:end="129:20"><expr pos:start="129:17" pos:end="129:20"><name pos:start="129:17" pos:end="129:20">link</name></expr></argument>, <argument pos:start="129:23" pos:end="129:29"><expr pos:start="129:23" pos:end="129:29"><name pos:start="129:23" pos:end="129:29"><name pos:start="129:23" pos:end="129:24">td</name><operator pos:start="129:25" pos:end="129:25">.</operator><name pos:start="129:26" pos:end="129:29">link</name></name></expr></argument>, <argument pos:start="129:32" pos:end="129:38"><expr pos:start="129:32" pos:end="129:38"><name pos:start="129:32" pos:end="129:38"><name pos:start="129:32" pos:end="129:33">td</name><operator pos:start="129:34" pos:end="129:34">.</operator><name pos:start="129:35" pos:end="129:38">ctrl</name></name></expr></argument>, <argument pos:start="129:41" pos:end="129:48"><expr pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:48"><name pos:start="129:41" pos:end="129:42">td</name><operator pos:start="129:43" pos:end="129:43">.</operator><name pos:start="129:44" pos:end="129:48">token</name></name></expr></argument>, <argument pos:start="129:51" pos:end="129:57"><expr pos:start="129:51" pos:end="129:57"><name pos:start="129:51" pos:end="129:57">curr_qh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:30"><expr pos:start="133:9" pos:end="133:29"><name pos:start="133:9" pos:end="133:19">old_td_ctrl</name> <operator pos:start="133:21" pos:end="133:21">=</operator> <name pos:start="133:23" pos:end="133:29"><name pos:start="133:23" pos:end="133:24">td</name><operator pos:start="133:25" pos:end="133:25">.</operator><name pos:start="133:26" pos:end="133:29">ctrl</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:54"><expr pos:start="135:9" pos:end="135:53"><name pos:start="135:9" pos:end="135:11">ret</name> <operator pos:start="135:13" pos:end="135:13">=</operator> <call pos:start="135:15" pos:end="135:53"><name pos:start="135:15" pos:end="135:28">uhci_handle_td</name><argument_list pos:start="135:29" pos:end="135:53">(<argument pos:start="135:30" pos:end="135:30"><expr pos:start="135:30" pos:end="135:30"><name pos:start="135:30" pos:end="135:30">s</name></expr></argument>, <argument pos:start="135:33" pos:end="135:36"><expr pos:start="135:33" pos:end="135:36"><name pos:start="135:33" pos:end="135:36">link</name></expr></argument>, <argument pos:start="135:39" pos:end="135:41"><expr pos:start="135:39" pos:end="135:41"><operator pos:start="135:39" pos:end="135:39">&amp;</operator><name pos:start="135:40" pos:end="135:41">td</name></expr></argument>, <argument pos:start="135:44" pos:end="135:52"><expr pos:start="135:44" pos:end="135:52"><operator pos:start="135:44" pos:end="135:44">&amp;</operator><name pos:start="135:45" pos:end="135:52">int_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="137:9" pos:end="147:9"><if pos:start="137:9" pos:end="147:9">if <condition pos:start="137:12" pos:end="137:35">(<expr pos:start="137:13" pos:end="137:34"><name pos:start="137:13" pos:end="137:23">old_td_ctrl</name> <operator pos:start="137:25" pos:end="137:26">!=</operator> <name pos:start="137:28" pos:end="137:34"><name pos:start="137:28" pos:end="137:29">td</name><operator pos:start="137:30" pos:end="137:30">.</operator><name pos:start="137:31" pos:end="137:34">ctrl</name></name></expr>)</condition> <block pos:start="137:37" pos:end="147:9">{<block_content pos:start="141:13" pos:end="145:74">

            <comment type="block" pos:start="139:13" pos:end="139:50">/* update the status bits of the TD */</comment>

            <expr_stmt pos:start="141:13" pos:end="141:39"><expr pos:start="141:13" pos:end="141:38"><name pos:start="141:13" pos:end="141:15">val</name> <operator pos:start="141:17" pos:end="141:17">=</operator> <call pos:start="141:19" pos:end="141:38"><name pos:start="141:19" pos:end="141:29">cpu_to_le32</name><argument_list pos:start="141:30" pos:end="141:38">(<argument pos:start="141:31" pos:end="141:37"><expr pos:start="141:31" pos:end="141:37"><name pos:start="141:31" pos:end="141:37"><name pos:start="141:31" pos:end="141:32">td</name><operator pos:start="141:33" pos:end="141:33">.</operator><name pos:start="141:34" pos:end="141:37">ctrl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="143:13" pos:end="145:74"><expr pos:start="143:13" pos:end="145:73"><call pos:start="143:13" pos:end="145:73"><name pos:start="143:13" pos:end="143:37">cpu_physical_memory_write</name><argument_list pos:start="143:38" pos:end="145:73">(<argument pos:start="143:39" pos:end="143:55"><expr pos:start="143:39" pos:end="143:55"><operator pos:start="143:39" pos:end="143:39">(</operator><name pos:start="143:40" pos:end="143:43">link</name> <operator pos:start="143:45" pos:end="143:45">&amp;</operator> <operator pos:start="143:47" pos:end="143:47">~</operator><literal type="number" pos:start="143:48" pos:end="143:50">0xf</literal><operator pos:start="143:51" pos:end="143:51">)</operator> <operator pos:start="143:53" pos:end="143:53">+</operator> <literal type="number" pos:start="143:55" pos:end="143:55">4</literal></expr></argument>,

                                      <argument pos:start="145:39" pos:end="145:59"><expr pos:start="145:39" pos:end="145:59"><operator pos:start="145:39" pos:end="145:39">(</operator><specifier pos:start="145:40" pos:end="145:44">const</specifier> <name pos:start="145:46" pos:end="145:52">uint8_t</name> <operator pos:start="145:54" pos:end="145:54">*</operator><operator pos:start="145:55" pos:end="145:55">)</operator><operator pos:start="145:56" pos:end="145:56">&amp;</operator><name pos:start="145:57" pos:end="145:59">val</name></expr></argument>, <argument pos:start="145:62" pos:end="145:72"><expr pos:start="145:62" pos:end="145:72"><sizeof pos:start="145:62" pos:end="145:72">sizeof<argument_list pos:start="145:68" pos:end="145:72">(<argument pos:start="145:69" pos:end="145:71"><expr pos:start="145:69" pos:end="145:71"><name pos:start="145:69" pos:end="145:71">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="151:9" pos:end="157:9"><if pos:start="151:9" pos:end="157:9">if <condition pos:start="151:12" pos:end="151:20">(<expr pos:start="151:13" pos:end="151:19"><name pos:start="151:13" pos:end="151:15">ret</name> <operator pos:start="151:17" pos:end="151:17">&lt;</operator> <literal type="number" pos:start="151:19" pos:end="151:19">0</literal></expr>)</condition> <block pos:start="151:22" pos:end="157:9">{<block_content pos:start="155:13" pos:end="155:18">

            <comment type="block" pos:start="153:13" pos:end="153:35">/* interrupted frame */</comment>

            <break pos:start="155:13" pos:end="155:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="161:9" pos:end="175:9"><if pos:start="161:9" pos:end="175:9">if <condition pos:start="161:12" pos:end="161:33">(<expr pos:start="161:13" pos:end="161:32"><name pos:start="161:13" pos:end="161:15">ret</name> <operator pos:start="161:17" pos:end="161:18">==</operator> <literal type="number" pos:start="161:20" pos:end="161:20">2</literal> <operator pos:start="161:22" pos:end="161:23">||</operator> <name pos:start="161:25" pos:end="161:27">ret</name> <operator pos:start="161:29" pos:end="161:30">==</operator> <literal type="number" pos:start="161:32" pos:end="161:32">1</literal></expr>)</condition> <block pos:start="161:35" pos:end="175:9">{<block_content pos:start="163:13" pos:end="173:21">

            <expr_stmt pos:start="163:13" pos:end="167:57"><expr pos:start="163:13" pos:end="167:56"><call pos:start="163:13" pos:end="167:56"><name pos:start="163:13" pos:end="163:19">DPRINTF</name><argument_list pos:start="163:20" pos:end="167:56">(<argument pos:start="163:21" pos:end="163:80"><expr pos:start="163:21" pos:end="163:80"><literal type="string" pos:start="163:21" pos:end="163:80">"uhci: TD 0x%x %s. link 0x%x ctrl 0x%x token 0x%x qh 0x%x\n"</literal></expr></argument>,

                    <argument pos:start="165:21" pos:end="165:24"><expr pos:start="165:21" pos:end="165:24"><name pos:start="165:21" pos:end="165:24">link</name></expr></argument>, <argument pos:start="165:27" pos:end="165:52"><expr pos:start="165:27" pos:end="165:52"><ternary pos:start="165:27" pos:end="165:52"><condition pos:start="165:27" pos:end="165:36"><expr pos:start="165:27" pos:end="165:34"><name pos:start="165:27" pos:end="165:29">ret</name> <operator pos:start="165:31" pos:end="165:32">==</operator> <literal type="number" pos:start="165:34" pos:end="165:34">2</literal></expr> ?</condition><then pos:start="165:38" pos:end="165:43"> <expr pos:start="165:38" pos:end="165:43"><literal type="string" pos:start="165:38" pos:end="165:43">"pend"</literal></expr> </then><else pos:start="165:45" pos:end="165:52">: <expr pos:start="165:47" pos:end="165:52"><literal type="string" pos:start="165:47" pos:end="165:52">"skip"</literal></expr></else></ternary></expr></argument>,

                    <argument pos:start="167:21" pos:end="167:27"><expr pos:start="167:21" pos:end="167:27"><name pos:start="167:21" pos:end="167:27"><name pos:start="167:21" pos:end="167:22">td</name><operator pos:start="167:23" pos:end="167:23">.</operator><name pos:start="167:24" pos:end="167:27">link</name></name></expr></argument>, <argument pos:start="167:30" pos:end="167:36"><expr pos:start="167:30" pos:end="167:36"><name pos:start="167:30" pos:end="167:36"><name pos:start="167:30" pos:end="167:31">td</name><operator pos:start="167:32" pos:end="167:32">.</operator><name pos:start="167:33" pos:end="167:36">ctrl</name></name></expr></argument>, <argument pos:start="167:39" pos:end="167:46"><expr pos:start="167:39" pos:end="167:46"><name pos:start="167:39" pos:end="167:46"><name pos:start="167:39" pos:end="167:40">td</name><operator pos:start="167:41" pos:end="167:41">.</operator><name pos:start="167:42" pos:end="167:46">token</name></name></expr></argument>, <argument pos:start="167:49" pos:end="167:55"><expr pos:start="167:49" pos:end="167:55"><name pos:start="167:49" pos:end="167:55">curr_qh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="171:13" pos:end="171:47"><expr pos:start="171:13" pos:end="171:46"><name pos:start="171:13" pos:end="171:16">link</name> <operator pos:start="171:18" pos:end="171:18">=</operator> <ternary pos:start="171:20" pos:end="171:46"><condition pos:start="171:20" pos:end="171:28"><expr pos:start="171:20" pos:end="171:26"><name pos:start="171:20" pos:end="171:26">curr_qh</name></expr> ?</condition><then pos:start="171:30" pos:end="171:36"> <expr pos:start="171:30" pos:end="171:36"><name pos:start="171:30" pos:end="171:36"><name pos:start="171:30" pos:end="171:31">qh</name><operator pos:start="171:32" pos:end="171:32">.</operator><name pos:start="171:33" pos:end="171:36">link</name></name></expr> </then><else pos:start="171:38" pos:end="171:46">: <expr pos:start="171:40" pos:end="171:46"><name pos:start="171:40" pos:end="171:46"><name pos:start="171:40" pos:end="171:41">td</name><operator pos:start="171:42" pos:end="171:42">.</operator><name pos:start="171:43" pos:end="171:46">link</name></name></expr></else></ternary></expr>;</expr_stmt>

            <continue pos:start="173:13" pos:end="173:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="179:9" pos:end="179:26">/* completed TD */</comment>



        <expr_stmt pos:start="183:9" pos:end="185:59"><expr pos:start="183:9" pos:end="185:58"><call pos:start="183:9" pos:end="185:58"><name pos:start="183:9" pos:end="183:15">DPRINTF</name><argument_list pos:start="183:16" pos:end="185:58">(<argument pos:start="183:17" pos:end="183:78"><expr pos:start="183:17" pos:end="183:78"><literal type="string" pos:start="183:17" pos:end="183:78">"uhci: TD 0x%x done. link 0x%x ctrl 0x%x token 0x%x qh 0x%x\n"</literal></expr></argument>, 

                <argument pos:start="185:17" pos:end="185:20"><expr pos:start="185:17" pos:end="185:20"><name pos:start="185:17" pos:end="185:20">link</name></expr></argument>, <argument pos:start="185:23" pos:end="185:29"><expr pos:start="185:23" pos:end="185:29"><name pos:start="185:23" pos:end="185:29"><name pos:start="185:23" pos:end="185:24">td</name><operator pos:start="185:25" pos:end="185:25">.</operator><name pos:start="185:26" pos:end="185:29">link</name></name></expr></argument>, <argument pos:start="185:32" pos:end="185:38"><expr pos:start="185:32" pos:end="185:38"><name pos:start="185:32" pos:end="185:38"><name pos:start="185:32" pos:end="185:33">td</name><operator pos:start="185:34" pos:end="185:34">.</operator><name pos:start="185:35" pos:end="185:38">ctrl</name></name></expr></argument>, <argument pos:start="185:41" pos:end="185:48"><expr pos:start="185:41" pos:end="185:48"><name pos:start="185:41" pos:end="185:48"><name pos:start="185:41" pos:end="185:42">td</name><operator pos:start="185:43" pos:end="185:43">.</operator><name pos:start="185:44" pos:end="185:48">token</name></name></expr></argument>, <argument pos:start="185:51" pos:end="185:57"><expr pos:start="185:51" pos:end="185:57"><name pos:start="185:51" pos:end="185:57">curr_qh</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="189:23"><expr pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:12">link</name> <operator pos:start="189:14" pos:end="189:14">=</operator> <name pos:start="189:16" pos:end="189:22"><name pos:start="189:16" pos:end="189:17">td</name><operator pos:start="189:18" pos:end="189:18">.</operator><name pos:start="189:19" pos:end="189:22">link</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="193:9" pos:end="225:9"><if pos:start="193:9" pos:end="225:9">if <condition pos:start="193:12" pos:end="193:20">(<expr pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:19">curr_qh</name></expr>)</condition> <block pos:start="193:22" pos:end="225:9">{<block_content pos:start="197:13" pos:end="223:13">

	    <comment type="block" pos:start="195:13" pos:end="195:40">/* update QH element link */</comment>

            <expr_stmt pos:start="197:13" pos:end="197:30"><expr pos:start="197:13" pos:end="197:29"><name pos:start="197:13" pos:end="197:22"><name pos:start="197:13" pos:end="197:14">qh</name><operator pos:start="197:15" pos:end="197:15">.</operator><name pos:start="197:16" pos:end="197:22">el_link</name></name> <operator pos:start="197:24" pos:end="197:24">=</operator> <name pos:start="197:26" pos:end="197:29">link</name></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:42"><expr pos:start="199:13" pos:end="199:41"><name pos:start="199:13" pos:end="199:15">val</name> <operator pos:start="199:17" pos:end="199:17">=</operator> <call pos:start="199:19" pos:end="199:41"><name pos:start="199:19" pos:end="199:29">cpu_to_le32</name><argument_list pos:start="199:30" pos:end="199:41">(<argument pos:start="199:31" pos:end="199:40"><expr pos:start="199:31" pos:end="199:40"><name pos:start="199:31" pos:end="199:40"><name pos:start="199:31" pos:end="199:32">qh</name><operator pos:start="199:33" pos:end="199:33">.</operator><name pos:start="199:34" pos:end="199:40">el_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="203:78"><expr pos:start="201:13" pos:end="203:77"><call pos:start="201:13" pos:end="203:77"><name pos:start="201:13" pos:end="201:37">cpu_physical_memory_write</name><argument_list pos:start="201:38" pos:end="203:77">(<argument pos:start="201:39" pos:end="201:58"><expr pos:start="201:39" pos:end="201:58"><operator pos:start="201:39" pos:end="201:39">(</operator><name pos:start="201:40" pos:end="201:46">curr_qh</name> <operator pos:start="201:48" pos:end="201:48">&amp;</operator> <operator pos:start="201:50" pos:end="201:50">~</operator><literal type="number" pos:start="201:51" pos:end="201:53">0xf</literal><operator pos:start="201:54" pos:end="201:54">)</operator> <operator pos:start="201:56" pos:end="201:56">+</operator> <literal type="number" pos:start="201:58" pos:end="201:58">4</literal></expr></argument>,

                                          <argument pos:start="203:43" pos:end="203:63"><expr pos:start="203:43" pos:end="203:63"><operator pos:start="203:43" pos:end="203:43">(</operator><specifier pos:start="203:44" pos:end="203:48">const</specifier> <name pos:start="203:50" pos:end="203:56">uint8_t</name> <operator pos:start="203:58" pos:end="203:58">*</operator><operator pos:start="203:59" pos:end="203:59">)</operator><operator pos:start="203:60" pos:end="203:60">&amp;</operator><name pos:start="203:61" pos:end="203:63">val</name></expr></argument>, <argument pos:start="203:66" pos:end="203:76"><expr pos:start="203:66" pos:end="203:76"><sizeof pos:start="203:66" pos:end="203:76">sizeof<argument_list pos:start="203:72" pos:end="203:76">(<argument pos:start="203:73" pos:end="203:75"><expr pos:start="203:73" pos:end="203:75"><name pos:start="203:73" pos:end="203:75">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="207:13" pos:end="223:13"><if pos:start="207:13" pos:end="223:13">if <condition pos:start="207:16" pos:end="207:35">(<expr pos:start="207:17" pos:end="207:34"><operator pos:start="207:17" pos:end="207:17">!</operator><call pos:start="207:18" pos:end="207:34"><name pos:start="207:18" pos:end="207:28">depth_first</name><argument_list pos:start="207:29" pos:end="207:34">(<argument pos:start="207:30" pos:end="207:33"><expr pos:start="207:30" pos:end="207:33"><name pos:start="207:30" pos:end="207:33">link</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="207:37" pos:end="223:13">{<block_content pos:start="213:16" pos:end="221:33">

               <comment type="block" pos:start="209:16" pos:end="209:38">/* done with this QH */</comment>



               <expr_stmt pos:start="213:16" pos:end="215:53"><expr pos:start="213:16" pos:end="215:52"><call pos:start="213:16" pos:end="215:52"><name pos:start="213:16" pos:end="213:22">DPRINTF</name><argument_list pos:start="213:23" pos:end="215:52">(<argument pos:start="213:24" pos:end="213:67"><expr pos:start="213:24" pos:end="213:67"><literal type="string" pos:start="213:24" pos:end="213:67">"uhci: QH 0x%x done. link 0x%x elink 0x%x\n"</literal></expr></argument>,

                       <argument pos:start="215:24" pos:end="215:30"><expr pos:start="215:24" pos:end="215:30"><name pos:start="215:24" pos:end="215:30">curr_qh</name></expr></argument>, <argument pos:start="215:33" pos:end="215:39"><expr pos:start="215:33" pos:end="215:39"><name pos:start="215:33" pos:end="215:39"><name pos:start="215:33" pos:end="215:34">qh</name><operator pos:start="215:35" pos:end="215:35">.</operator><name pos:start="215:36" pos:end="215:39">link</name></name></expr></argument>, <argument pos:start="215:42" pos:end="215:51"><expr pos:start="215:42" pos:end="215:51"><name pos:start="215:42" pos:end="215:51"><name pos:start="215:42" pos:end="215:43">qh</name><operator pos:start="215:44" pos:end="215:44">.</operator><name pos:start="215:45" pos:end="215:51">el_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



               <expr_stmt pos:start="219:16" pos:end="219:27"><expr pos:start="219:16" pos:end="219:26"><name pos:start="219:16" pos:end="219:22">curr_qh</name> <operator pos:start="219:24" pos:end="219:24">=</operator> <literal type="number" pos:start="219:26" pos:end="219:26">0</literal></expr>;</expr_stmt>

               <expr_stmt pos:start="221:16" pos:end="221:33"><expr pos:start="221:16" pos:end="221:32"><name pos:start="221:16" pos:end="221:19">link</name>    <operator pos:start="221:24" pos:end="221:24">=</operator> <name pos:start="221:26" pos:end="221:32"><name pos:start="221:26" pos:end="221:27">qh</name><operator pos:start="221:28" pos:end="221:28">.</operator><name pos:start="221:29" pos:end="221:32">link</name></name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="229:9" pos:end="229:34">/* go to the next entry */</comment>

    </block_content>}</block></for>



    <expr_stmt pos:start="235:5" pos:end="235:36"><expr pos:start="235:5" pos:end="235:35"><name pos:start="235:5" pos:end="235:23"><name pos:start="235:5" pos:end="235:5">s</name><operator pos:start="235:6" pos:end="235:7">-&gt;</operator><name pos:start="235:8" pos:end="235:23">pending_int_mask</name></name> <operator pos:start="235:25" pos:end="235:26">|=</operator> <name pos:start="235:28" pos:end="235:35">int_mask</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
