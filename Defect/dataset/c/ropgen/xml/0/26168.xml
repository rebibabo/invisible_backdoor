<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26168.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:16">avcodec_open</name><parameter_list pos:start="1:17" pos:end="1:55">(<parameter pos:start="1:18" pos:end="1:38"><decl pos:start="1:18" pos:end="1:38"><type pos:start="1:18" pos:end="1:38"><name pos:start="1:18" pos:end="1:31">AVCodecContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:38">avctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:47">AVCodec</name> <modifier pos:start="1:49" pos:end="1:49">*</modifier></type><name pos:start="1:50" pos:end="1:54">codec</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="11:18"><if pos:start="9:5" pos:end="11:18">if<condition pos:start="9:7" pos:end="9:20">(<expr pos:start="9:8" pos:end="9:19"><name pos:start="9:8" pos:end="9:19"><name pos:start="9:8" pos:end="9:12">avctx</name><operator pos:start="9:13" pos:end="9:14">-&gt;</operator><name pos:start="9:15" pos:end="9:19">codec</name></name></expr>)</condition><block type="pseudo" pos:start="11:9" pos:end="11:18"><block_content pos:start="11:9" pos:end="11:18">

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:9">avctx</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:16">codec</name></name> <operator pos:start="15:18" pos:end="15:18">=</operator> <name pos:start="15:20" pos:end="15:24">codec</name></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:32"><expr pos:start="17:5" pos:end="17:31"><name pos:start="17:5" pos:end="17:19"><name pos:start="17:5" pos:end="17:9">avctx</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:19">codec_id</name></name> <operator pos:start="17:21" pos:end="17:21">=</operator> <name pos:start="17:23" pos:end="17:31"><name pos:start="17:23" pos:end="17:27">codec</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:31">id</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:23"><name pos:start="19:5" pos:end="19:9">avctx</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:23">frame_number</name></name> <operator pos:start="19:25" pos:end="19:25">=</operator> <literal type="number" pos:start="19:27" pos:end="19:27">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="33:5"><if pos:start="21:5" pos:end="29:5">if <condition pos:start="21:8" pos:end="21:34">(<expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:29"><name pos:start="21:9" pos:end="21:13">codec</name><operator pos:start="21:14" pos:end="21:15">-&gt;</operator><name pos:start="21:16" pos:end="21:29">priv_data_size</name></name> <operator pos:start="21:31" pos:end="21:31">&gt;</operator> <literal type="number" pos:start="21:33" pos:end="21:33">0</literal></expr>)</condition> <block pos:start="21:36" pos:end="29:5">{<block_content pos:start="23:9" pos:end="27:27">

        <expr_stmt pos:start="23:9" pos:end="23:61"><expr pos:start="23:9" pos:end="23:60"><name pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:13">avctx</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:24">priv_data</name></name> <operator pos:start="23:26" pos:end="23:26">=</operator> <call pos:start="23:28" pos:end="23:60"><name pos:start="23:28" pos:end="23:37">av_mallocz</name><argument_list pos:start="23:38" pos:end="23:60">(<argument pos:start="23:39" pos:end="23:59"><expr pos:start="23:39" pos:end="23:59"><name pos:start="23:39" pos:end="23:59"><name pos:start="23:39" pos:end="23:43">codec</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:59">priv_data_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="27:27"><if pos:start="25:9" pos:end="27:27">if <condition pos:start="25:12" pos:end="25:30">(<expr pos:start="25:13" pos:end="25:29"><operator pos:start="25:13" pos:end="25:13">!</operator><name pos:start="25:14" pos:end="25:29"><name pos:start="25:14" pos:end="25:18">avctx</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:29">priv_data</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="27:27"><block_content pos:start="27:13" pos:end="27:27"> 

            <return pos:start="27:13" pos:end="27:27">return <expr pos:start="27:20" pos:end="27:26"><operator pos:start="27:20" pos:end="27:20">-</operator><name pos:start="27:21" pos:end="27:26">ENOMEM</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="29:7" pos:end="33:5">else <block pos:start="29:12" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:32">

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:24"><name pos:start="31:9" pos:end="31:13">avctx</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:24">priv_data</name></name> <operator pos:start="31:26" pos:end="31:26">=</operator> <name pos:start="31:28" pos:end="31:31">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="37:5" pos:end="43:67"><if pos:start="37:5" pos:end="39:79">if<condition pos:start="37:7" pos:end="37:49">(<expr pos:start="37:8" pos:end="37:48"><name pos:start="37:8" pos:end="37:25"><name pos:start="37:8" pos:end="37:12">avctx</name><operator pos:start="37:13" pos:end="37:14">-&gt;</operator><name pos:start="37:15" pos:end="37:25">coded_width</name></name> <operator pos:start="37:27" pos:end="37:28">&amp;&amp;</operator> <name pos:start="37:30" pos:end="37:48"><name pos:start="37:30" pos:end="37:34">avctx</name><operator pos:start="37:35" pos:end="37:36">-&gt;</operator><name pos:start="37:37" pos:end="37:48">coded_height</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:79"><block_content pos:start="39:9" pos:end="39:79">

        <expr_stmt pos:start="39:9" pos:end="39:79"><expr pos:start="39:9" pos:end="39:78"><call pos:start="39:9" pos:end="39:78"><name pos:start="39:9" pos:end="39:30">avcodec_set_dimensions</name><argument_list pos:start="39:31" pos:end="39:78">(<argument pos:start="39:32" pos:end="39:36"><expr pos:start="39:32" pos:end="39:36"><name pos:start="39:32" pos:end="39:36">avctx</name></expr></argument>, <argument pos:start="39:39" pos:end="39:56"><expr pos:start="39:39" pos:end="39:56"><name pos:start="39:39" pos:end="39:56"><name pos:start="39:39" pos:end="39:43">avctx</name><operator pos:start="39:44" pos:end="39:45">-&gt;</operator><name pos:start="39:46" pos:end="39:56">coded_width</name></name></expr></argument>, <argument pos:start="39:59" pos:end="39:77"><expr pos:start="39:59" pos:end="39:77"><name pos:start="39:59" pos:end="39:77"><name pos:start="39:59" pos:end="39:63">avctx</name><operator pos:start="39:64" pos:end="39:65">-&gt;</operator><name pos:start="39:66" pos:end="39:77">coded_height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="41:5" pos:end="43:67">else if<condition pos:start="41:12" pos:end="41:42">(<expr pos:start="41:13" pos:end="41:41"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:17">avctx</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">width</name></name> <operator pos:start="41:26" pos:end="41:27">&amp;&amp;</operator> <name pos:start="41:29" pos:end="41:41"><name pos:start="41:29" pos:end="41:33">avctx</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:41">height</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:67"><block_content pos:start="43:9" pos:end="43:67">

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:30">avcodec_set_dimensions</name><argument_list pos:start="43:31" pos:end="43:66">(<argument pos:start="43:32" pos:end="43:36"><expr pos:start="43:32" pos:end="43:36"><name pos:start="43:32" pos:end="43:36">avctx</name></expr></argument>, <argument pos:start="43:39" pos:end="43:50"><expr pos:start="43:39" pos:end="43:50"><name pos:start="43:39" pos:end="43:50"><name pos:start="43:39" pos:end="43:43">avctx</name><operator pos:start="43:44" pos:end="43:45">-&gt;</operator><name pos:start="43:46" pos:end="43:50">width</name></name></expr></argument>, <argument pos:start="43:53" pos:end="43:65"><expr pos:start="43:53" pos:end="43:65"><name pos:start="43:53" pos:end="43:65"><name pos:start="43:53" pos:end="43:57">avctx</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:65">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if<condition pos:start="47:7" pos:end="47:123">(<expr pos:start="47:8" pos:end="47:122"><operator pos:start="47:8" pos:end="47:8">(</operator><name pos:start="47:9" pos:end="47:26"><name pos:start="47:9" pos:end="47:13">avctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:26">coded_width</name></name><operator pos:start="47:27" pos:end="47:28">||</operator><name pos:start="47:29" pos:end="47:47"><name pos:start="47:29" pos:end="47:33">avctx</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:47">coded_height</name></name><operator pos:start="47:48" pos:end="47:48">)</operator> <operator pos:start="47:50" pos:end="47:51">&amp;&amp;</operator> <call pos:start="47:53" pos:end="47:122"><name pos:start="47:53" pos:end="47:76">avcodec_check_dimensions</name><argument_list pos:start="47:77" pos:end="47:122">(<argument pos:start="47:78" pos:end="47:82"><expr pos:start="47:78" pos:end="47:82"><name pos:start="47:78" pos:end="47:82">avctx</name></expr></argument>,<argument pos:start="47:84" pos:end="47:101"><expr pos:start="47:84" pos:end="47:101"><name pos:start="47:84" pos:end="47:101"><name pos:start="47:84" pos:end="47:88">avctx</name><operator pos:start="47:89" pos:end="47:90">-&gt;</operator><name pos:start="47:91" pos:end="47:101">coded_width</name></name></expr></argument>,<argument pos:start="47:103" pos:end="47:121"><expr pos:start="47:103" pos:end="47:121"><name pos:start="47:103" pos:end="47:121"><name pos:start="47:103" pos:end="47:107">avctx</name><operator pos:start="47:108" pos:end="47:109">-&gt;</operator><name pos:start="47:110" pos:end="47:121">coded_height</name></name></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="47:124" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:18">

        <expr_stmt pos:start="49:9" pos:end="49:36"><expr pos:start="49:9" pos:end="49:35"><call pos:start="49:9" pos:end="49:35"><name pos:start="49:9" pos:end="49:16">av_freep</name><argument_list pos:start="49:17" pos:end="49:35">(<argument pos:start="49:18" pos:end="49:34"><expr pos:start="49:18" pos:end="49:34"><operator pos:start="49:18" pos:end="49:18">&amp;</operator><name pos:start="49:19" pos:end="49:34"><name pos:start="49:19" pos:end="49:23">avctx</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:34">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:36"><expr pos:start="57:5" pos:end="57:35"><name pos:start="57:5" pos:end="57:7">ret</name> <operator pos:start="57:9" pos:end="57:9">=</operator> <call pos:start="57:11" pos:end="57:35"><name pos:start="57:11" pos:end="57:28"><name pos:start="57:11" pos:end="57:15">avctx</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:22">codec</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:28">init</name></name><argument_list pos:start="57:29" pos:end="57:35">(<argument pos:start="57:30" pos:end="57:34"><expr pos:start="57:30" pos:end="57:34"><name pos:start="57:30" pos:end="57:34">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="65:5"><if pos:start="59:5" pos:end="65:5">if <condition pos:start="59:8" pos:end="59:16">(<expr pos:start="59:9" pos:end="59:15"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">&lt;</operator> <literal type="number" pos:start="59:15" pos:end="59:15">0</literal></expr>)</condition> <block pos:start="59:18" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:19">

        <expr_stmt pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:35"><call pos:start="61:9" pos:end="61:35"><name pos:start="61:9" pos:end="61:16">av_freep</name><argument_list pos:start="61:17" pos:end="61:35">(<argument pos:start="61:18" pos:end="61:34"><expr pos:start="61:18" pos:end="61:34"><operator pos:start="61:18" pos:end="61:18">&amp;</operator><name pos:start="61:19" pos:end="61:34"><name pos:start="61:19" pos:end="61:23">avctx</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:34">priv_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:19">return <expr pos:start="63:16" pos:end="63:18"><name pos:start="63:16" pos:end="63:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
