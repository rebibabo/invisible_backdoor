<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24434.c" pos:tabs="8"><function pos:start="1:1" pos:end="119:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">amovie_get_samples</name><parameter_list pos:start="1:30" pos:end="1:52">(<parameter pos:start="1:31" pos:end="1:51"><decl pos:start="1:31" pos:end="1:51"><type pos:start="1:31" pos:end="1:44"><name pos:start="1:31" pos:end="1:42">AVFilterLink</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:51">outlink</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="119:1">{<block_content pos:start="5:5" pos:end="117:13">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">MovieContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:23">movie</name> <init pos:start="5:25" pos:end="5:44">= <expr pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:44"><name pos:start="5:27" pos:end="5:33">outlink</name><operator pos:start="5:34" pos:end="5:35">-&gt;</operator><name pos:start="5:36" pos:end="5:38">src</name><operator pos:start="5:39" pos:end="5:40">-&gt;</operator><name pos:start="5:41" pos:end="5:44">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">AVPacket</name></type> <name pos:start="7:14" pos:end="7:16">pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:22">got_frame</name> <init pos:start="9:24" pos:end="9:26">= <expr pos:start="9:26" pos:end="9:26"><literal type="number" pos:start="9:26" pos:end="9:26">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:27"><if pos:start="13:5" pos:end="15:27">if <condition pos:start="13:8" pos:end="13:48">(<expr pos:start="13:9" pos:end="13:47"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:24"><name pos:start="13:10" pos:end="13:14">movie</name><operator pos:start="13:15" pos:end="13:16">-&gt;</operator><name pos:start="13:17" pos:end="13:19">pkt</name><operator pos:start="13:20" pos:end="13:20">.</operator><name pos:start="13:21" pos:end="13:24">size</name></name> <operator pos:start="13:26" pos:end="13:27">&amp;&amp;</operator> <name pos:start="13:29" pos:end="13:42"><name pos:start="13:29" pos:end="13:33">movie</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:42">is_done</name></name> <operator pos:start="13:44" pos:end="13:45">==</operator> <literal type="number" pos:start="13:47" pos:end="13:47">1</literal></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:27"><block_content pos:start="15:9" pos:end="15:27">

        <return pos:start="15:9" pos:end="15:27">return <expr pos:start="15:16" pos:end="15:26"><name pos:start="15:16" pos:end="15:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:83">/* check for another frame, in case the previous one was completely consumed */</comment>

    <if_stmt pos:start="21:5" pos:end="53:5"><if pos:start="21:5" pos:end="53:5">if <condition pos:start="21:8" pos:end="21:25">(<expr pos:start="21:9" pos:end="21:24"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:24"><name pos:start="21:10" pos:end="21:14">movie</name><operator pos:start="21:15" pos:end="21:16">-&gt;</operator><name pos:start="21:17" pos:end="21:19">pkt</name><operator pos:start="21:20" pos:end="21:20">.</operator><name pos:start="21:21" pos:end="21:24">size</name></name></expr>)</condition> <block pos:start="21:27" pos:end="53:5">{<block_content pos:start="23:9" pos:end="51:9">

        <while pos:start="23:9" pos:end="41:9">while <condition pos:start="23:15" pos:end="23:67">(<expr pos:start="23:16" pos:end="23:66"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:19">ret</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:60"><name pos:start="23:23" pos:end="23:35">av_read_frame</name><argument_list pos:start="23:36" pos:end="23:60">(<argument pos:start="23:37" pos:end="23:53"><expr pos:start="23:37" pos:end="23:53"><name pos:start="23:37" pos:end="23:53"><name pos:start="23:37" pos:end="23:41">movie</name><operator pos:start="23:42" pos:end="23:43">-&gt;</operator><name pos:start="23:44" pos:end="23:53">format_ctx</name></name></expr></argument>, <argument pos:start="23:56" pos:end="23:59"><expr pos:start="23:56" pos:end="23:59"><operator pos:start="23:56" pos:end="23:56">&amp;</operator><name pos:start="23:57" pos:end="23:59">pkt</name></expr></argument>)</argument_list></call><operator pos:start="23:61" pos:end="23:61">)</operator> <operator pos:start="23:63" pos:end="23:64">&gt;=</operator> <literal type="number" pos:start="23:66" pos:end="23:66">0</literal></expr>)</condition> <block pos:start="23:69" pos:end="41:9">{<block_content pos:start="27:13" pos:end="39:13">

            <comment type="line" pos:start="25:13" pos:end="25:57">// Is this a packet from the selected stream?</comment>

            <if_stmt pos:start="27:13" pos:end="39:13"><if pos:start="27:13" pos:end="33:13">if <condition pos:start="27:16" pos:end="27:56">(<expr pos:start="27:17" pos:end="27:55"><name pos:start="27:17" pos:end="27:32"><name pos:start="27:17" pos:end="27:19">pkt</name><operator pos:start="27:20" pos:end="27:20">.</operator><name pos:start="27:21" pos:end="27:32">stream_index</name></name> <operator pos:start="27:34" pos:end="27:35">!=</operator> <name pos:start="27:37" pos:end="27:55"><name pos:start="27:37" pos:end="27:41">movie</name><operator pos:start="27:42" pos:end="27:43">-&gt;</operator><name pos:start="27:44" pos:end="27:55">stream_index</name></name></expr>)</condition> <block pos:start="27:58" pos:end="33:13">{<block_content pos:start="29:17" pos:end="31:25">

                <expr_stmt pos:start="29:17" pos:end="29:37"><expr pos:start="29:17" pos:end="29:36"><call pos:start="29:17" pos:end="29:36"><name pos:start="29:17" pos:end="29:30">av_free_packet</name><argument_list pos:start="29:31" pos:end="29:36">(<argument pos:start="29:32" pos:end="29:35"><expr pos:start="29:32" pos:end="29:35"><operator pos:start="29:32" pos:end="29:32">&amp;</operator><name pos:start="29:33" pos:end="29:35">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="31:17" pos:end="31:25">continue;</continue>

            </block_content>}</block></if> <else pos:start="33:15" pos:end="39:13">else <block pos:start="33:20" pos:end="39:13">{<block_content pos:start="35:17" pos:end="37:22">

                <expr_stmt pos:start="35:17" pos:end="35:47"><expr pos:start="35:17" pos:end="35:46"><name pos:start="35:17" pos:end="35:27"><name pos:start="35:17" pos:end="35:21">movie</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:27">pkt0</name></name> <operator pos:start="35:29" pos:end="35:29">=</operator> <name pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:35">movie</name><operator pos:start="35:36" pos:end="35:37">-&gt;</operator><name pos:start="35:38" pos:end="35:40">pkt</name></name> <operator pos:start="35:42" pos:end="35:42">=</operator> <name pos:start="35:44" pos:end="35:46">pkt</name></expr>;</expr_stmt>

                <break pos:start="37:17" pos:end="37:22">break;</break>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></while>



        <if_stmt pos:start="45:9" pos:end="51:9"><if pos:start="45:9" pos:end="51:9">if <condition pos:start="45:12" pos:end="45:31">(<expr pos:start="45:13" pos:end="45:30"><name pos:start="45:13" pos:end="45:15">ret</name> <operator pos:start="45:17" pos:end="45:18">==</operator> <name pos:start="45:20" pos:end="45:30">AVERROR_EOF</name></expr>)</condition> <block pos:start="45:33" pos:end="51:9">{<block_content pos:start="47:13" pos:end="49:23">

            <expr_stmt pos:start="47:13" pos:end="47:31"><expr pos:start="47:13" pos:end="47:30"><name pos:start="47:13" pos:end="47:26"><name pos:start="47:13" pos:end="47:17">movie</name><operator pos:start="47:18" pos:end="47:19">-&gt;</operator><name pos:start="47:20" pos:end="47:26">is_done</name></name> <operator pos:start="47:28" pos:end="47:28">=</operator> <literal type="number" pos:start="47:30" pos:end="47:30">1</literal></expr>;</expr_stmt>

            <return pos:start="49:13" pos:end="49:23">return <expr pos:start="49:20" pos:end="49:22"><name pos:start="49:20" pos:end="49:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:41">/* decode and update the movie pkt */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:45"><expr pos:start="59:5" pos:end="59:44"><call pos:start="59:5" pos:end="59:44"><name pos:start="59:5" pos:end="59:30">avcodec_get_frame_defaults</name><argument_list pos:start="59:31" pos:end="59:44">(<argument pos:start="59:32" pos:end="59:43"><expr pos:start="59:32" pos:end="59:43"><name pos:start="59:32" pos:end="59:43"><name pos:start="59:32" pos:end="59:36">movie</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:43">frame</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:89"><expr pos:start="61:5" pos:end="61:88"><name pos:start="61:5" pos:end="61:7">ret</name> <operator pos:start="61:9" pos:end="61:9">=</operator> <call pos:start="61:11" pos:end="61:88"><name pos:start="61:11" pos:end="61:31">avcodec_decode_audio4</name><argument_list pos:start="61:32" pos:end="61:88">(<argument pos:start="61:33" pos:end="61:48"><expr pos:start="61:33" pos:end="61:48"><name pos:start="61:33" pos:end="61:48"><name pos:start="61:33" pos:end="61:37">movie</name><operator pos:start="61:38" pos:end="61:39">-&gt;</operator><name pos:start="61:40" pos:end="61:48">codec_ctx</name></name></expr></argument>, <argument pos:start="61:51" pos:end="61:62"><expr pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:62"><name pos:start="61:51" pos:end="61:55">movie</name><operator pos:start="61:56" pos:end="61:57">-&gt;</operator><name pos:start="61:58" pos:end="61:62">frame</name></name></expr></argument>, <argument pos:start="61:65" pos:end="61:74"><expr pos:start="61:65" pos:end="61:74"><operator pos:start="61:65" pos:end="61:65">&amp;</operator><name pos:start="61:66" pos:end="61:74">got_frame</name></expr></argument>, <argument pos:start="61:77" pos:end="61:87"><expr pos:start="61:77" pos:end="61:87"><operator pos:start="61:77" pos:end="61:77">&amp;</operator><name pos:start="61:78" pos:end="61:87"><name pos:start="61:78" pos:end="61:82">movie</name><operator pos:start="61:83" pos:end="61:84">-&gt;</operator><name pos:start="61:85" pos:end="61:87">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="63:5" pos:end="69:5"><if pos:start="63:5" pos:end="69:5">if <condition pos:start="63:8" pos:end="63:16">(<expr pos:start="63:9" pos:end="63:15"><name pos:start="63:9" pos:end="63:11">ret</name> <operator pos:start="63:13" pos:end="63:13">&lt;</operator> <literal type="number" pos:start="63:15" pos:end="63:15">0</literal></expr>)</condition> <block pos:start="63:18" pos:end="69:5">{<block_content pos:start="65:9" pos:end="67:19">

        <expr_stmt pos:start="65:9" pos:end="65:28"><expr pos:start="65:9" pos:end="65:27"><name pos:start="65:9" pos:end="65:23"><name pos:start="65:9" pos:end="65:13">movie</name><operator pos:start="65:14" pos:end="65:15">-&gt;</operator><name pos:start="65:16" pos:end="65:18">pkt</name><operator pos:start="65:19" pos:end="65:19">.</operator><name pos:start="65:20" pos:end="65:23">size</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <literal type="number" pos:start="65:27" pos:end="65:27">0</literal></expr>;</expr_stmt>

        <return pos:start="67:9" pos:end="67:19">return <expr pos:start="67:16" pos:end="67:18"><name pos:start="67:16" pos:end="67:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:19"><name pos:start="71:5" pos:end="71:9">movie</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:14">pkt</name><operator pos:start="71:15" pos:end="71:15">.</operator><name pos:start="71:16" pos:end="71:19">data</name></name> <operator pos:start="71:21" pos:end="71:22">+=</operator> <name pos:start="71:24" pos:end="71:26">ret</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:27"><expr pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:19"><name pos:start="73:5" pos:end="73:9">movie</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:14">pkt</name><operator pos:start="73:15" pos:end="73:15">.</operator><name pos:start="73:16" pos:end="73:19">size</name></name> <operator pos:start="73:21" pos:end="73:22">-=</operator> <name pos:start="73:24" pos:end="73:26">ret</name></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:47">/* wrap the decoded data in a samplesref */</comment>

    <if_stmt pos:start="79:5" pos:end="105:5"><if pos:start="79:5" pos:end="105:5">if <condition pos:start="79:8" pos:end="79:18">(<expr pos:start="79:9" pos:end="79:17"><name pos:start="79:9" pos:end="79:17">got_frame</name></expr>)</condition> <block pos:start="79:20" pos:end="105:5">{<block_content pos:start="81:9" pos:end="103:78">

        <decl_stmt pos:start="81:9" pos:end="81:50"><decl pos:start="81:9" pos:end="81:49"><type pos:start="81:9" pos:end="81:11"><name pos:start="81:9" pos:end="81:11">int</name></type> <name pos:start="81:13" pos:end="81:22">nb_samples</name> <init pos:start="81:24" pos:end="81:49">= <expr pos:start="81:26" pos:end="81:49"><name pos:start="81:26" pos:end="81:49"><name pos:start="81:26" pos:end="81:30">movie</name><operator pos:start="81:31" pos:end="81:32">-&gt;</operator><name pos:start="81:33" pos:end="81:37">frame</name><operator pos:start="81:38" pos:end="81:39">-&gt;</operator><name pos:start="81:40" pos:end="81:49">nb_samples</name></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="83:9" pos:end="87:84"><decl pos:start="83:9" pos:end="87:83"><type pos:start="83:9" pos:end="83:11"><name pos:start="83:9" pos:end="83:11">int</name></type> <name pos:start="83:13" pos:end="83:21">data_size</name> <init pos:start="83:23" pos:end="87:83">=

            <expr pos:start="85:13" pos:end="87:83"><call pos:start="85:13" pos:end="87:83"><name pos:start="85:13" pos:end="85:38">av_samples_get_buffer_size</name><argument_list pos:start="85:39" pos:end="87:83">(<argument pos:start="85:40" pos:end="85:43"><expr pos:start="85:40" pos:end="85:43"><name pos:start="85:40" pos:end="85:43">NULL</name></expr></argument>, <argument pos:start="85:46" pos:end="85:71"><expr pos:start="85:46" pos:end="85:71"><name pos:start="85:46" pos:end="85:71"><name pos:start="85:46" pos:end="85:50">movie</name><operator pos:start="85:51" pos:end="85:52">-&gt;</operator><name pos:start="85:53" pos:end="85:61">codec_ctx</name><operator pos:start="85:62" pos:end="85:63">-&gt;</operator><name pos:start="85:64" pos:end="85:71">channels</name></name></expr></argument>,

                                       <argument pos:start="87:40" pos:end="87:49"><expr pos:start="87:40" pos:end="87:49"><name pos:start="87:40" pos:end="87:49">nb_samples</name></expr></argument>, <argument pos:start="87:52" pos:end="87:79"><expr pos:start="87:52" pos:end="87:79"><name pos:start="87:52" pos:end="87:79"><name pos:start="87:52" pos:end="87:56">movie</name><operator pos:start="87:57" pos:end="87:58">-&gt;</operator><name pos:start="87:59" pos:end="87:67">codec_ctx</name><operator pos:start="87:68" pos:end="87:69">-&gt;</operator><name pos:start="87:70" pos:end="87:79">sample_fmt</name></name></expr></argument>, <argument pos:start="87:82" pos:end="87:82"><expr pos:start="87:82" pos:end="87:82"><literal type="number" pos:start="87:82" pos:end="87:82">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="89:9" pos:end="91:29"><if pos:start="89:9" pos:end="91:29">if <condition pos:start="89:12" pos:end="89:26">(<expr pos:start="89:13" pos:end="89:25"><name pos:start="89:13" pos:end="89:21">data_size</name> <operator pos:start="89:23" pos:end="89:23">&lt;</operator> <literal type="number" pos:start="89:25" pos:end="89:25">0</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:29"><block_content pos:start="91:13" pos:end="91:29">

            <return pos:start="91:13" pos:end="91:29">return <expr pos:start="91:20" pos:end="91:28"><name pos:start="91:20" pos:end="91:28">data_size</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="93:9" pos:end="95:68"><expr pos:start="93:9" pos:end="95:67"><name pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:13">movie</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:25">samplesref</name></name> <operator pos:start="93:27" pos:end="93:27">=</operator>

            <call pos:start="95:13" pos:end="95:67"><name pos:start="95:13" pos:end="95:31">ff_get_audio_buffer</name><argument_list pos:start="95:32" pos:end="95:67">(<argument pos:start="95:33" pos:end="95:39"><expr pos:start="95:33" pos:end="95:39"><name pos:start="95:33" pos:end="95:39">outlink</name></expr></argument>, <argument pos:start="95:42" pos:end="95:54"><expr pos:start="95:42" pos:end="95:54"><name pos:start="95:42" pos:end="95:54">AV_PERM_WRITE</name></expr></argument>, <argument pos:start="95:57" pos:end="95:66"><expr pos:start="95:57" pos:end="95:66"><name pos:start="95:57" pos:end="95:66">nb_samples</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:77"><expr pos:start="97:9" pos:end="97:76"><call pos:start="97:9" pos:end="97:76"><name pos:start="97:9" pos:end="97:14">memcpy</name><argument_list pos:start="97:15" pos:end="97:76">(<argument pos:start="97:16" pos:end="97:41"><expr pos:start="97:16" pos:end="97:41"><name pos:start="97:16" pos:end="97:41"><name pos:start="97:16" pos:end="97:20">movie</name><operator pos:start="97:21" pos:end="97:22">-&gt;</operator><name pos:start="97:23" pos:end="97:32">samplesref</name><operator pos:start="97:33" pos:end="97:34">-&gt;</operator><name pos:start="97:35" pos:end="97:38">data</name><index pos:start="97:39" pos:end="97:41">[<expr pos:start="97:40" pos:end="97:40"><literal type="number" pos:start="97:40" pos:end="97:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:44" pos:end="97:64"><expr pos:start="97:44" pos:end="97:64"><name pos:start="97:44" pos:end="97:64"><name pos:start="97:44" pos:end="97:48">movie</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:55">frame</name><operator pos:start="97:56" pos:end="97:57">-&gt;</operator><name pos:start="97:58" pos:end="97:61">data</name><index pos:start="97:62" pos:end="97:64">[<expr pos:start="97:63" pos:end="97:63"><literal type="number" pos:start="97:63" pos:end="97:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="97:67" pos:end="97:75"><expr pos:start="97:67" pos:end="97:75"><name pos:start="97:67" pos:end="97:75">data_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="99:48"><expr pos:start="99:9" pos:end="99:47"><name pos:start="99:9" pos:end="99:30"><name pos:start="99:9" pos:end="99:13">movie</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:25">samplesref</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:30">pts</name></name> <operator pos:start="99:32" pos:end="99:32">=</operator> <name pos:start="99:34" pos:end="99:47"><name pos:start="99:34" pos:end="99:38">movie</name><operator pos:start="99:39" pos:end="99:40">-&gt;</operator><name pos:start="99:41" pos:end="99:43">pkt</name><operator pos:start="99:44" pos:end="99:44">.</operator><name pos:start="99:45" pos:end="99:47">pts</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:48"><expr pos:start="101:9" pos:end="101:47"><name pos:start="101:9" pos:end="101:30"><name pos:start="101:9" pos:end="101:13">movie</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:25">samplesref</name><operator pos:start="101:26" pos:end="101:27">-&gt;</operator><name pos:start="101:28" pos:end="101:30">pos</name></name> <operator pos:start="101:32" pos:end="101:32">=</operator> <name pos:start="101:34" pos:end="101:47"><name pos:start="101:34" pos:end="101:38">movie</name><operator pos:start="101:39" pos:end="101:40">-&gt;</operator><name pos:start="101:41" pos:end="101:43">pkt</name><operator pos:start="101:44" pos:end="101:44">.</operator><name pos:start="101:45" pos:end="101:47">pos</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:78"><expr pos:start="103:9" pos:end="103:77"><name pos:start="103:9" pos:end="103:45"><name pos:start="103:9" pos:end="103:13">movie</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:25">samplesref</name><operator pos:start="103:26" pos:end="103:27">-&gt;</operator><name pos:start="103:28" pos:end="103:32">audio</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:45">sample_rate</name></name> <operator pos:start="103:47" pos:end="103:47">=</operator> <name pos:start="103:49" pos:end="103:77"><name pos:start="103:49" pos:end="103:53">movie</name><operator pos:start="103:54" pos:end="103:55">-&gt;</operator><name pos:start="103:56" pos:end="103:64">codec_ctx</name><operator pos:start="103:65" pos:end="103:66">-&gt;</operator><name pos:start="103:67" pos:end="103:77">sample_rate</name></name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="109:5" pos:end="109:56">// We got it. Free the packet since we are returning</comment>

    <if_stmt pos:start="111:5" pos:end="113:37"><if pos:start="111:5" pos:end="113:37">if <condition pos:start="111:8" pos:end="111:29">(<expr pos:start="111:9" pos:end="111:28"><name pos:start="111:9" pos:end="111:23"><name pos:start="111:9" pos:end="111:13">movie</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:18">pkt</name><operator pos:start="111:19" pos:end="111:19">.</operator><name pos:start="111:20" pos:end="111:23">size</name></name> <operator pos:start="111:25" pos:end="111:26">&lt;=</operator> <literal type="number" pos:start="111:28" pos:end="111:28">0</literal></expr>)</condition><block type="pseudo" pos:start="113:9" pos:end="113:37"><block_content pos:start="113:9" pos:end="113:37">

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><call pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:22">av_free_packet</name><argument_list pos:start="113:23" pos:end="113:36">(<argument pos:start="113:24" pos:end="113:35"><expr pos:start="113:24" pos:end="113:35"><operator pos:start="113:24" pos:end="113:24">&amp;</operator><name pos:start="113:25" pos:end="113:35"><name pos:start="113:25" pos:end="113:29">movie</name><operator pos:start="113:30" pos:end="113:31">-&gt;</operator><name pos:start="113:32" pos:end="113:35">pkt0</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="117:5" pos:end="117:13">return <expr pos:start="117:12" pos:end="117:12"><literal type="number" pos:start="117:12" pos:end="117:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
