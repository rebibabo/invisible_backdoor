<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20832.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:39">virtser_port_device_realize</name><parameter_list pos:start="1:40" pos:end="1:71">(<parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:51">DeviceState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">dev</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:70"><decl pos:start="1:59" pos:end="1:70"><type pos:start="1:59" pos:end="1:70"><name pos:start="1:59" pos:end="1:63">Error</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier><modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:70">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:27">

    <decl_stmt pos:start="5:5" pos:end="5:53"><decl pos:start="5:5" pos:end="5:52"><type pos:start="5:5" pos:end="5:22"><name pos:start="5:5" pos:end="5:20">VirtIOSerialPort</name> <modifier pos:start="5:22" pos:end="5:22">*</modifier></type><name pos:start="5:23" pos:end="5:26">port</name> <init pos:start="5:28" pos:end="5:52">= <expr pos:start="5:30" pos:end="5:52"><call pos:start="5:30" pos:end="5:52"><name pos:start="5:30" pos:end="5:47">VIRTIO_SERIAL_PORT</name><argument_list pos:start="5:48" pos:end="5:52">(<argument pos:start="5:49" pos:end="5:51"><expr pos:start="5:49" pos:end="5:51"><name pos:start="5:49" pos:end="5:51">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:68"><decl pos:start="7:5" pos:end="7:67"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">VirtIOSerialPortClass</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:30">vsc</name> <init pos:start="7:32" pos:end="7:67">= <expr pos:start="7:34" pos:end="7:67"><call pos:start="7:34" pos:end="7:67"><name pos:start="7:34" pos:end="7:61">VIRTIO_SERIAL_PORT_GET_CLASS</name><argument_list pos:start="7:62" pos:end="7:67">(<argument pos:start="7:63" pos:end="7:66"><expr pos:start="7:63" pos:end="7:66"><name pos:start="7:63" pos:end="7:66">port</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:71"><decl pos:start="9:5" pos:end="9:70"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">VirtIOSerialBus</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">bus</name> <init pos:start="9:26" pos:end="9:70">= <expr pos:start="9:28" pos:end="9:70"><call pos:start="9:28" pos:end="9:70"><name pos:start="9:28" pos:end="9:44">VIRTIO_SERIAL_BUS</name><argument_list pos:start="9:45" pos:end="9:70">(<argument pos:start="9:46" pos:end="9:69"><expr pos:start="9:46" pos:end="9:69"><call pos:start="9:46" pos:end="9:69"><name pos:start="9:46" pos:end="9:64">qdev_get_parent_bus</name><argument_list pos:start="9:65" pos:end="9:69">(<argument pos:start="9:66" pos:end="9:68"><expr pos:start="9:66" pos:end="9:68"><name pos:start="9:66" pos:end="9:68">dev</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:20">max_nr_ports</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:23">plugging_port0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:22"><decl pos:start="15:5" pos:end="15:21"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">Error</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:14">err</name> <init pos:start="15:16" pos:end="15:21">= <expr pos:start="15:18" pos:end="15:21"><name pos:start="15:18" pos:end="15:21">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:27"><expr pos:start="19:5" pos:end="19:26"><name pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:8">port</name><operator pos:start="19:9" pos:end="19:10">-&gt;</operator><name pos:start="19:11" pos:end="19:14">vser</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:26"><name pos:start="19:18" pos:end="19:20">bus</name><operator pos:start="19:21" pos:end="19:22">-&gt;</operator><name pos:start="19:23" pos:end="19:26">vser</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:55"><expr pos:start="21:5" pos:end="21:54"><name pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:8">port</name><operator pos:start="21:9" pos:end="21:10">-&gt;</operator><name pos:start="21:11" pos:end="21:12">bh</name></name> <operator pos:start="21:14" pos:end="21:14">=</operator> <call pos:start="21:16" pos:end="21:54"><name pos:start="21:16" pos:end="21:26">qemu_bh_new</name><argument_list pos:start="21:27" pos:end="21:54">(<argument pos:start="21:28" pos:end="21:47"><expr pos:start="21:28" pos:end="21:47"><name pos:start="21:28" pos:end="21:47">flush_queued_data_bh</name></expr></argument>, <argument pos:start="21:50" pos:end="21:53"><expr pos:start="21:50" pos:end="21:53"><name pos:start="21:50" pos:end="21:53">port</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:26">(<argument pos:start="25:12" pos:end="25:25"><expr pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:25"><name pos:start="25:12" pos:end="25:14">vsc</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:25">have_data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="37:7">/*

     * Is the first console port we're seeing? If so, put it up at

     * location 0. This is done for backward compatibility (old

     * kernel, new qemu).

     */</comment>

    <expr_stmt pos:start="39:5" pos:end="39:72"><expr pos:start="39:5" pos:end="39:71"><name pos:start="39:5" pos:end="39:18">plugging_port0</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <name pos:start="39:22" pos:end="39:36"><name pos:start="39:22" pos:end="39:24">vsc</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:36">is_console</name></name> <operator pos:start="39:38" pos:end="39:39">&amp;&amp;</operator> <operator pos:start="39:41" pos:end="39:41">!</operator><call pos:start="39:42" pos:end="39:71"><name pos:start="39:42" pos:end="39:56">find_port_by_id</name><argument_list pos:start="39:57" pos:end="39:71">(<argument pos:start="39:58" pos:end="39:67"><expr pos:start="39:58" pos:end="39:67"><name pos:start="39:58" pos:end="39:67"><name pos:start="39:58" pos:end="39:61">port</name><operator pos:start="39:62" pos:end="39:63">-&gt;</operator><name pos:start="39:64" pos:end="39:67">vser</name></name></expr></argument>, <argument pos:start="39:70" pos:end="39:70"><expr pos:start="39:70" pos:end="39:70"><literal type="number" pos:start="39:70" pos:end="39:70">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="43:5" pos:end="51:5"><if pos:start="43:5" pos:end="51:5">if <condition pos:start="43:8" pos:end="43:46">(<expr pos:start="43:9" pos:end="43:45"><call pos:start="43:9" pos:end="43:45"><name pos:start="43:9" pos:end="43:23">find_port_by_id</name><argument_list pos:start="43:24" pos:end="43:45">(<argument pos:start="43:25" pos:end="43:34"><expr pos:start="43:25" pos:end="43:34"><name pos:start="43:25" pos:end="43:34"><name pos:start="43:25" pos:end="43:28">port</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:34">vser</name></name></expr></argument>, <argument pos:start="43:37" pos:end="43:44"><expr pos:start="43:37" pos:end="43:44"><name pos:start="43:37" pos:end="43:44"><name pos:start="43:37" pos:end="43:40">port</name><operator pos:start="43:41" pos:end="43:42">-&gt;</operator><name pos:start="43:43" pos:end="43:44">id</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:48" pos:end="51:5">{<block_content pos:start="45:9" pos:end="49:15">

        <expr_stmt pos:start="45:9" pos:end="47:29"><expr pos:start="45:9" pos:end="47:28"><call pos:start="45:9" pos:end="47:28"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="47:28">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:76"><expr pos:start="45:26" pos:end="45:76"><literal type="string" pos:start="45:26" pos:end="45:76">"virtio-serial-bus: A port already exists at id %u"</literal></expr></argument>,

                   <argument pos:start="47:20" pos:end="47:27"><expr pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:23">port</name><operator pos:start="47:24" pos:end="47:25">-&gt;</operator><name pos:start="47:26" pos:end="47:27">id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="49:9" pos:end="49:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="55:5" pos:end="63:5"><if pos:start="55:5" pos:end="63:5">if <condition pos:start="55:8" pos:end="55:60">(<expr pos:start="55:9" pos:end="55:59"><name pos:start="55:9" pos:end="55:18"><name pos:start="55:9" pos:end="55:12">port</name><operator pos:start="55:13" pos:end="55:14">-&gt;</operator><name pos:start="55:15" pos:end="55:18">name</name></name> <operator pos:start="55:20" pos:end="55:21">!=</operator> <name pos:start="55:23" pos:end="55:26">NULL</name> <operator pos:start="55:28" pos:end="55:29">&amp;&amp;</operator> <call pos:start="55:31" pos:end="55:59"><name pos:start="55:31" pos:end="55:47">find_port_by_name</name><argument_list pos:start="55:48" pos:end="55:59">(<argument pos:start="55:49" pos:end="55:58"><expr pos:start="55:49" pos:end="55:58"><name pos:start="55:49" pos:end="55:58"><name pos:start="55:49" pos:end="55:52">port</name><operator pos:start="55:53" pos:end="55:54">-&gt;</operator><name pos:start="55:55" pos:end="55:58">name</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="55:62" pos:end="63:5">{<block_content pos:start="57:9" pos:end="61:15">

        <expr_stmt pos:start="57:9" pos:end="59:31"><expr pos:start="57:9" pos:end="59:30"><call pos:start="57:9" pos:end="59:30"><name pos:start="57:9" pos:end="57:18">error_setg</name><argument_list pos:start="57:19" pos:end="59:30">(<argument pos:start="57:20" pos:end="57:23"><expr pos:start="57:20" pos:end="57:23"><name pos:start="57:20" pos:end="57:23">errp</name></expr></argument>, <argument pos:start="57:26" pos:end="57:78"><expr pos:start="57:26" pos:end="57:78"><literal type="string" pos:start="57:26" pos:end="57:78">"virtio-serial-bus: A port already exists by name %s"</literal></expr></argument>,

                   <argument pos:start="59:20" pos:end="59:29"><expr pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:29"><name pos:start="59:20" pos:end="59:23">port</name><operator pos:start="59:24" pos:end="59:25">-&gt;</operator><name pos:start="59:26" pos:end="59:29">name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="89:5"><if pos:start="67:5" pos:end="89:5">if <condition pos:start="67:8" pos:end="67:42">(<expr pos:start="67:9" pos:end="67:41"><name pos:start="67:9" pos:end="67:16"><name pos:start="67:9" pos:end="67:12">port</name><operator pos:start="67:13" pos:end="67:14">-&gt;</operator><name pos:start="67:15" pos:end="67:16">id</name></name> <operator pos:start="67:18" pos:end="67:19">==</operator> <name pos:start="67:21" pos:end="67:41">VIRTIO_CONSOLE_BAD_ID</name></expr>)</condition> <block pos:start="67:44" pos:end="89:5">{<block_content pos:start="69:9" pos:end="87:9">

        <if_stmt pos:start="69:9" pos:end="87:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:27">(<expr pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:26">plugging_port0</name></expr>)</condition> <block pos:start="69:29" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:25">

            <expr_stmt pos:start="71:13" pos:end="71:25"><expr pos:start="71:13" pos:end="71:24"><name pos:start="71:13" pos:end="71:20"><name pos:start="71:13" pos:end="71:16">port</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:20">id</name></name> <operator pos:start="71:22" pos:end="71:22">=</operator> <literal type="number" pos:start="71:24" pos:end="71:24">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="87:9">else <block pos:start="73:16" pos:end="87:9">{<block_content pos:start="75:13" pos:end="85:13">

            <expr_stmt pos:start="75:13" pos:end="75:53"><expr pos:start="75:13" pos:end="75:52"><name pos:start="75:13" pos:end="75:20"><name pos:start="75:13" pos:end="75:16">port</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:20">id</name></name> <operator pos:start="75:22" pos:end="75:22">=</operator> <call pos:start="75:24" pos:end="75:52"><name pos:start="75:24" pos:end="75:40">find_free_port_id</name><argument_list pos:start="75:41" pos:end="75:52">(<argument pos:start="75:42" pos:end="75:51"><expr pos:start="75:42" pos:end="75:51"><name pos:start="75:42" pos:end="75:51"><name pos:start="75:42" pos:end="75:45">port</name><operator pos:start="75:46" pos:end="75:47">-&gt;</operator><name pos:start="75:48" pos:end="75:51">vser</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="77:13" pos:end="85:13"><if pos:start="77:13" pos:end="85:13">if <condition pos:start="77:16" pos:end="77:50">(<expr pos:start="77:17" pos:end="77:49"><name pos:start="77:17" pos:end="77:24"><name pos:start="77:17" pos:end="77:20">port</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:24">id</name></name> <operator pos:start="77:26" pos:end="77:27">==</operator> <name pos:start="77:29" pos:end="77:49">VIRTIO_CONSOLE_BAD_ID</name></expr>)</condition> <block pos:start="77:52" pos:end="85:13">{<block_content pos:start="79:17" pos:end="83:23">

                <expr_stmt pos:start="79:17" pos:end="81:56"><expr pos:start="79:17" pos:end="81:55"><call pos:start="79:17" pos:end="81:55"><name pos:start="79:17" pos:end="79:26">error_setg</name><argument_list pos:start="79:27" pos:end="81:55">(<argument pos:start="79:28" pos:end="79:31"><expr pos:start="79:28" pos:end="79:31"><name pos:start="79:28" pos:end="79:31">errp</name></expr></argument>, <argument pos:start="79:34" pos:end="81:54"><expr pos:start="79:34" pos:end="81:54"><literal type="string" pos:start="79:34" pos:end="79:77">"virtio-serial-bus: Maximum port limit for "</literal>

                                 <literal type="string" pos:start="81:34" pos:end="81:54">"this device reached"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="83:17" pos:end="83:23">return;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:59"><expr pos:start="93:5" pos:end="93:58"><name pos:start="93:5" pos:end="93:16">max_nr_ports</name> <operator pos:start="93:18" pos:end="93:18">=</operator> <name pos:start="93:20" pos:end="93:58"><name pos:start="93:20" pos:end="93:23">port</name><operator pos:start="93:24" pos:end="93:25">-&gt;</operator><name pos:start="93:26" pos:end="93:29">vser</name><operator pos:start="93:30" pos:end="93:31">-&gt;</operator><name pos:start="93:32" pos:end="93:37">serial</name><operator pos:start="93:38" pos:end="93:38">.</operator><name pos:start="93:39" pos:end="93:58">max_virtserial_ports</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="95:5" pos:end="103:5"><if pos:start="95:5" pos:end="103:5">if <condition pos:start="95:8" pos:end="95:33">(<expr pos:start="95:9" pos:end="95:32"><name pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:12">port</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:16">id</name></name> <operator pos:start="95:18" pos:end="95:19">&gt;=</operator> <name pos:start="95:21" pos:end="95:32">max_nr_ports</name></expr>)</condition> <block pos:start="95:35" pos:end="103:5">{<block_content pos:start="97:9" pos:end="101:15">

        <expr_stmt pos:start="97:9" pos:end="99:63"><expr pos:start="97:9" pos:end="99:62"><call pos:start="97:9" pos:end="99:62"><name pos:start="97:9" pos:end="97:18">error_setg</name><argument_list pos:start="97:19" pos:end="99:62">(<argument pos:start="97:20" pos:end="97:23"><expr pos:start="97:20" pos:end="97:23"><name pos:start="97:20" pos:end="97:23">errp</name></expr></argument>, <argument pos:start="97:26" pos:end="99:43"><expr pos:start="97:26" pos:end="99:43"><literal type="string" pos:start="97:26" pos:end="97:78">"virtio-serial-bus: Out-of-range port id specified, "</literal>

                         <literal type="string" pos:start="99:26" pos:end="99:43">"max. allowed: %u"</literal></expr></argument>, <argument pos:start="99:46" pos:end="99:61"><expr pos:start="99:46" pos:end="99:61"><name pos:start="99:46" pos:end="99:57">max_nr_ports</name> <operator pos:start="99:59" pos:end="99:59">-</operator> <literal type="number" pos:start="99:61" pos:end="99:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="101:9" pos:end="101:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="107:5" pos:end="107:28"><expr pos:start="107:5" pos:end="107:27"><call pos:start="107:5" pos:end="107:27"><name pos:start="107:5" pos:end="107:16"><name pos:start="107:5" pos:end="107:7">vsc</name><operator pos:start="107:8" pos:end="107:9">-&gt;</operator><name pos:start="107:10" pos:end="107:16">realize</name></name><argument_list pos:start="107:17" pos:end="107:27">(<argument pos:start="107:18" pos:end="107:20"><expr pos:start="107:18" pos:end="107:20"><name pos:start="107:18" pos:end="107:20">dev</name></expr></argument>, <argument pos:start="107:23" pos:end="107:26"><expr pos:start="107:23" pos:end="107:26"><operator pos:start="107:23" pos:end="107:23">&amp;</operator><name pos:start="107:24" pos:end="107:26">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:20">(<expr pos:start="109:9" pos:end="109:19"><name pos:start="109:9" pos:end="109:11">err</name> <operator pos:start="109:13" pos:end="109:14">!=</operator> <name pos:start="109:16" pos:end="109:19">NULL</name></expr>)</condition> <block pos:start="109:22" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:15">

        <expr_stmt pos:start="111:9" pos:end="111:35"><expr pos:start="111:9" pos:end="111:34"><call pos:start="111:9" pos:end="111:34"><name pos:start="111:9" pos:end="111:23">error_propagate</name><argument_list pos:start="111:24" pos:end="111:34">(<argument pos:start="111:25" pos:end="111:28"><expr pos:start="111:25" pos:end="111:28"><name pos:start="111:25" pos:end="111:28">errp</name></expr></argument>, <argument pos:start="111:31" pos:end="111:33"><expr pos:start="111:31" pos:end="111:33"><name pos:start="111:31" pos:end="111:33">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="113:9" pos:end="113:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="119:5" pos:end="119:27"><expr pos:start="119:5" pos:end="119:26"><name pos:start="119:5" pos:end="119:22"><name pos:start="119:5" pos:end="119:8">port</name><operator pos:start="119:9" pos:end="119:10">-&gt;</operator><name pos:start="119:11" pos:end="119:14">elem</name><operator pos:start="119:15" pos:end="119:15">.</operator><name pos:start="119:16" pos:end="119:22">out_num</name></name> <operator pos:start="119:24" pos:end="119:24">=</operator> <literal type="number" pos:start="119:26" pos:end="119:26">0</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
