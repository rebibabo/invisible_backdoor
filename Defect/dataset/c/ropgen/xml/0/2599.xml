<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2599.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:21"><name pos:start="1:1" pos:end="1:19">BlockDeviceInfoList</name> <modifier pos:start="1:21" pos:end="1:21">*</modifier></type><name pos:start="1:22" pos:end="1:42">bdrv_named_nodes_list</name><parameter_list pos:start="1:43" pos:end="1:56">(<parameter pos:start="1:44" pos:end="1:55"><decl pos:start="1:44" pos:end="1:55"><type pos:start="1:44" pos:end="1:51"><name pos:start="1:44" pos:end="1:48">Error</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier><modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="39:1">{<block_content pos:start="5:5" pos:end="37:16">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:29"><type pos:start="5:5" pos:end="5:25"><name pos:start="5:5" pos:end="5:23">BlockDeviceInfoList</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:29">list</name></decl>, <decl pos:start="5:32" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:25"><modifier pos:start="5:32" pos:end="5:32">*</modifier></type><name pos:start="5:33" pos:end="5:37">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">BlockDriverState</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:24">bs</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:16"><expr pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:8">list</name> <operator pos:start="11:10" pos:end="11:10">=</operator> <name pos:start="11:12" pos:end="11:15">NULL</name></expr>;</expr_stmt>

    <macro pos:start="13:5" pos:end="13:53"><name pos:start="13:5" pos:end="13:18">QTAILQ_FOREACH</name><argument_list pos:start="13:19" pos:end="13:53">(<argument pos:start="13:20" pos:end="13:21">bs</argument>, <argument pos:start="13:24" pos:end="13:41">&amp;graph_bdrv_states</argument>, <argument pos:start="13:44" pos:end="13:52">node_list</argument>)</argument_list></macro> <block pos:start="13:55" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:21">

        <decl_stmt pos:start="15:9" pos:end="15:65"><decl pos:start="15:9" pos:end="15:64"><type pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:23">BlockDeviceInfo</name> <modifier pos:start="15:25" pos:end="15:25">*</modifier></type><name pos:start="15:26" pos:end="15:29">info</name> <init pos:start="15:31" pos:end="15:64">= <expr pos:start="15:33" pos:end="15:64"><call pos:start="15:33" pos:end="15:64"><name pos:start="15:33" pos:end="15:54">bdrv_block_device_info</name><argument_list pos:start="15:55" pos:end="15:64">(<argument pos:start="15:56" pos:end="15:57"><expr pos:start="15:56" pos:end="15:57"><name pos:start="15:56" pos:end="15:57">bs</name></expr></argument>, <argument pos:start="15:60" pos:end="15:63"><expr pos:start="15:60" pos:end="15:63"><name pos:start="15:60" pos:end="15:63">errp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="17:9" pos:end="23:9"><if pos:start="17:9" pos:end="23:9">if <condition pos:start="17:12" pos:end="17:18">(<expr pos:start="17:13" pos:end="17:17"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:17">info</name></expr>)</condition> <block pos:start="17:20" pos:end="23:9">{<block_content pos:start="19:13" pos:end="21:24">

            <expr_stmt pos:start="19:13" pos:end="19:48"><expr pos:start="19:13" pos:end="19:47"><call pos:start="19:13" pos:end="19:47"><name pos:start="19:13" pos:end="19:41">qapi_free_BlockDeviceInfoList</name><argument_list pos:start="19:42" pos:end="19:47">(<argument pos:start="19:43" pos:end="19:46"><expr pos:start="19:43" pos:end="19:46"><name pos:start="19:43" pos:end="19:46">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="21:13" pos:end="21:24">return <expr pos:start="21:20" pos:end="21:23"><name pos:start="21:20" pos:end="21:23">NULL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:42"><expr pos:start="25:9" pos:end="25:41"><name pos:start="25:9" pos:end="25:13">entry</name> <operator pos:start="25:15" pos:end="25:15">=</operator> <call pos:start="25:17" pos:end="25:41"><name pos:start="25:17" pos:end="25:25">g_malloc0</name><argument_list pos:start="25:26" pos:end="25:41">(<argument pos:start="25:27" pos:end="25:40"><expr pos:start="25:27" pos:end="25:40"><sizeof pos:start="25:27" pos:end="25:40">sizeof<argument_list pos:start="25:33" pos:end="25:40">(<argument pos:start="25:34" pos:end="25:39"><expr pos:start="25:34" pos:end="25:39"><operator pos:start="25:34" pos:end="25:34">*</operator><name pos:start="25:35" pos:end="25:39">entry</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:28"><expr pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:13">entry</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:20">value</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:27">info</name></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:27"><expr pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:19"><name pos:start="29:9" pos:end="29:13">entry</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:19">next</name></name> <operator pos:start="29:21" pos:end="29:21">=</operator> <name pos:start="29:23" pos:end="29:26">list</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:21"><expr pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:12">list</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <name pos:start="31:16" pos:end="31:20">entry</name></expr>;</expr_stmt>

    </block_content>}</block>



    <return pos:start="37:5" pos:end="37:16">return <expr pos:start="37:12" pos:end="37:15"><name pos:start="37:12" pos:end="37:15">list</name></expr>;</return>

</block_content>}</block></function>
</unit>
