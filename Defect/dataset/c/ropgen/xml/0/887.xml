<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/887.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">vtd_do_iommu_translate</name><parameter_list pos:start="1:35" pos:end="5:56">(<parameter pos:start="1:36" pos:end="1:58"><decl pos:start="1:36" pos:end="1:58"><type pos:start="1:36" pos:end="1:58"><name pos:start="1:36" pos:end="1:50">VTDAddressSpace</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:58">vtd_as</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:71"><decl pos:start="1:61" pos:end="1:71"><type pos:start="1:61" pos:end="1:71"><name pos:start="1:61" pos:end="1:66">PCIBus</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type><name pos:start="1:69" pos:end="1:71">bus</name></decl></parameter>,

                                   <parameter pos:start="3:36" pos:end="3:48"><decl pos:start="3:36" pos:end="3:48"><type pos:start="3:36" pos:end="3:48"><name pos:start="3:36" pos:end="3:42">uint8_t</name></type> <name pos:start="3:44" pos:end="3:48">devfn</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:61"><decl pos:start="3:51" pos:end="3:61"><type pos:start="3:51" pos:end="3:61"><name pos:start="3:51" pos:end="3:56">hwaddr</name></type> <name pos:start="3:58" pos:end="3:61">addr</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:76"><decl pos:start="3:64" pos:end="3:76"><type pos:start="3:64" pos:end="3:76"><name pos:start="3:64" pos:end="3:67">bool</name></type> <name pos:start="3:69" pos:end="3:76">is_write</name></decl></parameter>,

                                   <parameter pos:start="5:36" pos:end="5:55"><decl pos:start="5:36" pos:end="5:55"><type pos:start="5:36" pos:end="5:55"><name pos:start="5:36" pos:end="5:48">IOMMUTLBEntry</name> <modifier pos:start="5:50" pos:end="5:50">*</modifier></type><name pos:start="5:51" pos:end="5:55">entry</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="203:1">{<block_content pos:start="9:5" pos:end="201:53">

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">IntelIOMMUState</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:22">s</name> <init pos:start="9:24" pos:end="9:44">= <expr pos:start="9:26" pos:end="9:44"><name pos:start="9:26" pos:end="9:44"><name pos:start="9:26" pos:end="9:31">vtd_as</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:44">iommu_state</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:19">VTDContextEntry</name></type> <name pos:start="11:21" pos:end="11:22">ce</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:19">bus_num</name> <init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><call pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:33">pci_bus_num</name><argument_list pos:start="13:34" pos:end="13:38">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">bus</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:66"><decl pos:start="15:5" pos:end="15:65"><type pos:start="15:5" pos:end="15:26"><name pos:start="15:5" pos:end="15:24">VTDContextCacheEntry</name> <modifier pos:start="15:26" pos:end="15:26">*</modifier></type><name pos:start="15:27" pos:end="15:34">cc_entry</name> <init pos:start="15:36" pos:end="15:65">= <expr pos:start="15:38" pos:end="15:65"><operator pos:start="15:38" pos:end="15:38">&amp;</operator><name pos:start="15:39" pos:end="15:65"><name pos:start="15:39" pos:end="15:44">vtd_as</name><operator pos:start="15:45" pos:end="15:46">-&gt;</operator><name pos:start="15:47" pos:end="15:65">context_cache_entry</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">uint64_t</name></type> <name pos:start="17:14" pos:end="17:18">slpte</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:12">uint32_t</name></type> <name pos:start="19:14" pos:end="19:18">level</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:60"><decl pos:start="21:5" pos:end="21:59"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:12">uint16_t</name></type> <name pos:start="21:14" pos:end="21:22">source_id</name> <init pos:start="21:24" pos:end="21:59">= <expr pos:start="21:26" pos:end="21:59"><call pos:start="21:26" pos:end="21:59"><name pos:start="21:26" pos:end="21:43">vtd_make_source_id</name><argument_list pos:start="21:44" pos:end="21:59">(<argument pos:start="21:45" pos:end="21:51"><expr pos:start="21:45" pos:end="21:51"><name pos:start="21:45" pos:end="21:51">bus_num</name></expr></argument>, <argument pos:start="21:54" pos:end="21:58"><expr pos:start="21:54" pos:end="21:58"><name pos:start="21:54" pos:end="21:58">devfn</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:15"><decl pos:start="23:5" pos:end="23:14"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:14">ret_fr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:28"><decl pos:start="25:5" pos:end="25:27"><type pos:start="25:5" pos:end="25:8"><name pos:start="25:5" pos:end="25:8">bool</name></type> <name pos:start="25:10" pos:end="25:19">is_fpd_set</name> <init pos:start="25:21" pos:end="25:27">= <expr pos:start="25:23" pos:end="25:27"><name pos:start="25:23" pos:end="25:27">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:8"><name pos:start="27:5" pos:end="27:8">bool</name></type> <name pos:start="27:10" pos:end="27:14">reads</name> <init pos:start="27:16" pos:end="27:21">= <expr pos:start="27:18" pos:end="27:21"><name pos:start="27:18" pos:end="27:21">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:8"><name pos:start="29:5" pos:end="29:8">bool</name></type> <name pos:start="29:10" pos:end="29:15">writes</name> <init pos:start="29:17" pos:end="29:22">= <expr pos:start="29:19" pos:end="29:22"><name pos:start="29:19" pos:end="29:22">true</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:31"><decl pos:start="31:5" pos:end="31:30"><type pos:start="31:5" pos:end="31:19"><name pos:start="31:5" pos:end="31:17">VTDIOTLBEntry</name> <modifier pos:start="31:19" pos:end="31:19">*</modifier></type><name pos:start="31:20" pos:end="31:30">iotlb_entry</name></decl>;</decl_stmt>



    <comment type="block" pos:start="35:5" pos:end="35:60">/* Check if the request is in interrupt address range */</comment>

    <if_stmt pos:start="37:5" pos:end="77:5"><if pos:start="37:5" pos:end="77:5">if <condition pos:start="37:8" pos:end="37:36">(<expr pos:start="37:9" pos:end="37:35"><call pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:29">vtd_is_interrupt_addr</name><argument_list pos:start="37:30" pos:end="37:35">(<argument pos:start="37:31" pos:end="37:34"><expr pos:start="37:31" pos:end="37:34"><name pos:start="37:31" pos:end="37:34">addr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:38" pos:end="77:5">{<block_content pos:start="39:9" pos:end="75:9">

        <if_stmt pos:start="39:9" pos:end="75:9"><if pos:start="39:9" pos:end="65:9">if <condition pos:start="39:12" pos:end="39:21">(<expr pos:start="39:13" pos:end="39:20"><name pos:start="39:13" pos:end="39:20">is_write</name></expr>)</condition> <block pos:start="39:23" pos:end="65:9">{<block_content pos:start="51:13" pos:end="63:19">

            <comment type="block" pos:start="41:13" pos:end="49:15">/* FIXME: since we don't know the length of the access here, we

             * treat Non-DWORD length write requests without PASID as

             * interrupt requests, too. Withoud interrupt remapping support,

             * we just use 1:1 mapping.

             */</comment>

            <expr_stmt pos:start="51:13" pos:end="53:47"><expr pos:start="51:13" pos:end="53:46"><call pos:start="51:13" pos:end="53:46"><name pos:start="51:13" pos:end="51:23">VTD_DPRINTF</name><argument_list pos:start="51:24" pos:end="53:46">(<argument pos:start="51:25" pos:end="51:27"><expr pos:start="51:25" pos:end="51:27"><name pos:start="51:25" pos:end="51:27">MMU</name></expr></argument>, <argument pos:start="51:30" pos:end="53:39"><expr pos:start="51:30" pos:end="53:39"><literal type="string" pos:start="51:30" pos:end="51:66">"write request to interrupt address "</literal>

                        <literal type="string" pos:start="53:25" pos:end="53:33">"gpa 0x%"</literal><name pos:start="53:34" pos:end="53:39">PRIx64</name></expr></argument>, <argument pos:start="53:42" pos:end="53:45"><expr pos:start="53:42" pos:end="53:45"><name pos:start="53:42" pos:end="53:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:50"><expr pos:start="55:13" pos:end="55:49"><name pos:start="55:13" pos:end="55:23"><name pos:start="55:13" pos:end="55:17">entry</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:23">iova</name></name> <operator pos:start="55:25" pos:end="55:25">=</operator> <name pos:start="55:27" pos:end="55:30">addr</name> <operator pos:start="55:32" pos:end="55:32">&amp;</operator> <name pos:start="55:34" pos:end="55:49">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:61"><expr pos:start="57:13" pos:end="57:60"><name pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:17">entry</name><operator pos:start="57:18" pos:end="57:19">-&gt;</operator><name pos:start="57:20" pos:end="57:34">translated_addr</name></name> <operator pos:start="57:36" pos:end="57:36">=</operator> <name pos:start="57:38" pos:end="57:41">addr</name> <operator pos:start="57:43" pos:end="57:43">&amp;</operator> <name pos:start="57:45" pos:end="57:60">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:49"><expr pos:start="59:13" pos:end="59:48"><name pos:start="59:13" pos:end="59:28"><name pos:start="59:13" pos:end="59:17">entry</name><operator pos:start="59:18" pos:end="59:19">-&gt;</operator><name pos:start="59:20" pos:end="59:28">addr_mask</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <operator pos:start="59:32" pos:end="59:32">~</operator><name pos:start="59:33" pos:end="59:48">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:35"><expr pos:start="61:13" pos:end="61:34"><name pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:17">entry</name><operator pos:start="61:18" pos:end="61:19">-&gt;</operator><name pos:start="61:20" pos:end="61:23">perm</name></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:34">IOMMU_WO</name></expr>;</expr_stmt>

            <return pos:start="63:13" pos:end="63:19">return;</return>

        </block_content>}</block></if> <else pos:start="65:11" pos:end="75:9">else <block pos:start="65:16" pos:end="75:9">{<block_content pos:start="67:13" pos:end="73:19">

            <expr_stmt pos:start="67:13" pos:end="69:47"><expr pos:start="67:13" pos:end="69:46"><call pos:start="67:13" pos:end="69:46"><name pos:start="67:13" pos:end="67:23">VTD_DPRINTF</name><argument_list pos:start="67:24" pos:end="69:46">(<argument pos:start="67:25" pos:end="67:31"><expr pos:start="67:25" pos:end="67:31"><name pos:start="67:25" pos:end="67:31">GENERAL</name></expr></argument>, <argument pos:start="67:34" pos:end="69:39"><expr pos:start="67:34" pos:end="69:39"><literal type="string" pos:start="67:34" pos:end="67:78">"error: read request from interrupt address "</literal>

                        <literal type="string" pos:start="69:25" pos:end="69:33">"gpa 0x%"</literal><name pos:start="69:34" pos:end="69:39">PRIx64</name></expr></argument>, <argument pos:start="69:42" pos:end="69:45"><expr pos:start="69:42" pos:end="69:45"><name pos:start="69:42" pos:end="69:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:77"><expr pos:start="71:13" pos:end="71:76"><call pos:start="71:13" pos:end="71:76"><name pos:start="71:13" pos:end="71:33">vtd_report_dmar_fault</name><argument_list pos:start="71:34" pos:end="71:76">(<argument pos:start="71:35" pos:end="71:35"><expr pos:start="71:35" pos:end="71:35"><name pos:start="71:35" pos:end="71:35">s</name></expr></argument>, <argument pos:start="71:38" pos:end="71:46"><expr pos:start="71:38" pos:end="71:46"><name pos:start="71:38" pos:end="71:46">source_id</name></expr></argument>, <argument pos:start="71:49" pos:end="71:52"><expr pos:start="71:49" pos:end="71:52"><name pos:start="71:49" pos:end="71:52">addr</name></expr></argument>, <argument pos:start="71:55" pos:end="71:65"><expr pos:start="71:55" pos:end="71:65"><name pos:start="71:55" pos:end="71:65">VTD_FR_READ</name></expr></argument>, <argument pos:start="71:68" pos:end="71:75"><expr pos:start="71:68" pos:end="71:75"><name pos:start="71:68" pos:end="71:75">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="73:13" pos:end="73:19">return;</return>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="79:5" pos:end="79:39">/* Try to fetch slpte form IOTLB */</comment>

    <expr_stmt pos:start="81:5" pos:end="81:55"><expr pos:start="81:5" pos:end="81:54"><name pos:start="81:5" pos:end="81:15">iotlb_entry</name> <operator pos:start="81:17" pos:end="81:17">=</operator> <call pos:start="81:19" pos:end="81:54"><name pos:start="81:19" pos:end="81:34">vtd_lookup_iotlb</name><argument_list pos:start="81:35" pos:end="81:54">(<argument pos:start="81:36" pos:end="81:36"><expr pos:start="81:36" pos:end="81:36"><name pos:start="81:36" pos:end="81:36">s</name></expr></argument>, <argument pos:start="81:39" pos:end="81:47"><expr pos:start="81:39" pos:end="81:47"><name pos:start="81:39" pos:end="81:47">source_id</name></expr></argument>, <argument pos:start="81:50" pos:end="81:53"><expr pos:start="81:50" pos:end="81:53"><name pos:start="81:50" pos:end="81:53">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="83:5" pos:end="99:5"><if pos:start="83:5" pos:end="99:5">if <condition pos:start="83:8" pos:end="83:20">(<expr pos:start="83:9" pos:end="83:19"><name pos:start="83:9" pos:end="83:19">iotlb_entry</name></expr>)</condition> <block pos:start="83:22" pos:end="99:5">{<block_content pos:start="85:9" pos:end="97:17">

        <expr_stmt pos:start="85:9" pos:end="89:64"><expr pos:start="85:9" pos:end="89:63"><call pos:start="85:9" pos:end="89:63"><name pos:start="85:9" pos:end="85:19">VTD_DPRINTF</name><argument_list pos:start="85:20" pos:end="89:63">(<argument pos:start="85:21" pos:end="85:25"><expr pos:start="85:21" pos:end="85:25"><name pos:start="85:21" pos:end="85:25">CACHE</name></expr></argument>, <argument pos:start="85:28" pos:end="87:55"><expr pos:start="85:28" pos:end="87:55"><literal type="string" pos:start="85:28" pos:end="85:46">"hit iotlb sid 0x%"</literal><name pos:start="85:47" pos:end="85:52">PRIx16</name> <literal type="string" pos:start="85:54" pos:end="85:63">" gpa 0x%"</literal><name pos:start="85:64" pos:end="85:69">PRIx64</name>

                    <literal type="string" pos:start="87:21" pos:end="87:32">" slpte 0x%"</literal><name pos:start="87:33" pos:end="87:38">PRIx64</name> <literal type="string" pos:start="87:40" pos:end="87:49">" did 0x%"</literal><name pos:start="87:50" pos:end="87:55">PRIx16</name></expr></argument>, <argument pos:start="87:58" pos:end="87:66"><expr pos:start="87:58" pos:end="87:66"><name pos:start="87:58" pos:end="87:66">source_id</name></expr></argument>, <argument pos:start="87:69" pos:end="87:72"><expr pos:start="87:69" pos:end="87:72"><name pos:start="87:69" pos:end="87:72">addr</name></expr></argument>,

                    <argument pos:start="89:21" pos:end="89:38"><expr pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:38"><name pos:start="89:21" pos:end="89:31">iotlb_entry</name><operator pos:start="89:32" pos:end="89:33">-&gt;</operator><name pos:start="89:34" pos:end="89:38">slpte</name></name></expr></argument>, <argument pos:start="89:41" pos:end="89:62"><expr pos:start="89:41" pos:end="89:62"><name pos:start="89:41" pos:end="89:62"><name pos:start="89:41" pos:end="89:51">iotlb_entry</name><operator pos:start="89:52" pos:end="89:53">-&gt;</operator><name pos:start="89:54" pos:end="89:62">domain_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:35"><expr pos:start="91:9" pos:end="91:34"><name pos:start="91:9" pos:end="91:13">slpte</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <name pos:start="91:17" pos:end="91:34"><name pos:start="91:17" pos:end="91:27">iotlb_entry</name><operator pos:start="91:28" pos:end="91:29">-&gt;</operator><name pos:start="91:30" pos:end="91:34">slpte</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:40"><expr pos:start="93:9" pos:end="93:39"><name pos:start="93:9" pos:end="93:13">reads</name> <operator pos:start="93:15" pos:end="93:15">=</operator> <name pos:start="93:17" pos:end="93:39"><name pos:start="93:17" pos:end="93:27">iotlb_entry</name><operator pos:start="93:28" pos:end="93:29">-&gt;</operator><name pos:start="93:30" pos:end="93:39">read_flags</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:42"><expr pos:start="95:9" pos:end="95:41"><name pos:start="95:9" pos:end="95:14">writes</name> <operator pos:start="95:16" pos:end="95:16">=</operator> <name pos:start="95:18" pos:end="95:41"><name pos:start="95:18" pos:end="95:28">iotlb_entry</name><operator pos:start="95:29" pos:end="95:30">-&gt;</operator><name pos:start="95:31" pos:end="95:41">write_flags</name></name></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:17">goto <name pos:start="97:14" pos:end="97:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="101:5" pos:end="101:53">/* Try to fetch context-entry from cache first */</comment>

    <if_stmt pos:start="103:5" pos:end="159:5"><if pos:start="103:5" pos:end="117:5">if <condition pos:start="103:8" pos:end="103:60">(<expr pos:start="103:9" pos:end="103:59"><name pos:start="103:9" pos:end="103:35"><name pos:start="103:9" pos:end="103:16">cc_entry</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:35">context_cache_gen</name></name> <operator pos:start="103:37" pos:end="103:38">==</operator> <name pos:start="103:40" pos:end="103:59"><name pos:start="103:40" pos:end="103:40">s</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:59">context_cache_gen</name></name></expr>)</condition> <block pos:start="103:62" pos:end="117:5">{<block_content pos:start="105:9" pos:end="115:51">

        <expr_stmt pos:start="105:9" pos:end="111:77"><expr pos:start="105:9" pos:end="111:76"><call pos:start="105:9" pos:end="111:76"><name pos:start="105:9" pos:end="105:19">VTD_DPRINTF</name><argument_list pos:start="105:20" pos:end="111:76">(<argument pos:start="105:21" pos:end="105:25"><expr pos:start="105:21" pos:end="105:25"><name pos:start="105:21" pos:end="105:25">CACHE</name></expr></argument>, <argument pos:start="105:28" pos:end="107:66"><expr pos:start="105:28" pos:end="107:66"><literal type="string" pos:start="105:28" pos:end="105:63">"hit context-cache bus %d devfn %d "</literal>

                    <literal type="string" pos:start="107:21" pos:end="107:27">"(hi %"</literal><name pos:start="107:28" pos:end="107:33">PRIx64</name> <literal type="string" pos:start="107:35" pos:end="107:41">" lo %"</literal><name pos:start="107:42" pos:end="107:47">PRIx64</name> <literal type="string" pos:start="107:49" pos:end="107:56">" gen %"</literal><name pos:start="107:57" pos:end="107:62">PRIu32</name> <literal type="string" pos:start="107:64" pos:end="107:66">")"</literal></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:27"><expr pos:start="109:21" pos:end="109:27"><name pos:start="109:21" pos:end="109:27">bus_num</name></expr></argument>, <argument pos:start="109:30" pos:end="109:34"><expr pos:start="109:30" pos:end="109:34"><name pos:start="109:30" pos:end="109:34">devfn</name></expr></argument>, <argument pos:start="109:37" pos:end="109:62"><expr pos:start="109:37" pos:end="109:62"><name pos:start="109:37" pos:end="109:62"><name pos:start="109:37" pos:end="109:44">cc_entry</name><operator pos:start="109:45" pos:end="109:46">-&gt;</operator><name pos:start="109:47" pos:end="109:59">context_entry</name><operator pos:start="109:60" pos:end="109:60">.</operator><name pos:start="109:61" pos:end="109:62">hi</name></name></expr></argument>,

                    <argument pos:start="111:21" pos:end="111:46"><expr pos:start="111:21" pos:end="111:46"><name pos:start="111:21" pos:end="111:46"><name pos:start="111:21" pos:end="111:28">cc_entry</name><operator pos:start="111:29" pos:end="111:30">-&gt;</operator><name pos:start="111:31" pos:end="111:43">context_entry</name><operator pos:start="111:44" pos:end="111:44">.</operator><name pos:start="111:45" pos:end="111:46">lo</name></name></expr></argument>, <argument pos:start="111:49" pos:end="111:75"><expr pos:start="111:49" pos:end="111:75"><name pos:start="111:49" pos:end="111:75"><name pos:start="111:49" pos:end="111:56">cc_entry</name><operator pos:start="111:57" pos:end="111:58">-&gt;</operator><name pos:start="111:59" pos:end="111:75">context_cache_gen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:10">ce</name> <operator pos:start="113:12" pos:end="113:12">=</operator> <name pos:start="113:14" pos:end="113:36"><name pos:start="113:14" pos:end="113:21">cc_entry</name><operator pos:start="113:22" pos:end="113:23">-&gt;</operator><name pos:start="113:24" pos:end="113:36">context_entry</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:51"><expr pos:start="115:9" pos:end="115:50"><name pos:start="115:9" pos:end="115:18">is_fpd_set</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:26"><name pos:start="115:22" pos:end="115:23">ce</name><operator pos:start="115:24" pos:end="115:24">.</operator><name pos:start="115:25" pos:end="115:26">lo</name></name> <operator pos:start="115:28" pos:end="115:28">&amp;</operator> <name pos:start="115:30" pos:end="115:50">VTD_CONTEXT_ENTRY_FPD</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="117:7" pos:end="159:5">else <block pos:start="117:12" pos:end="159:5">{<block_content pos:start="119:9" pos:end="157:59">

        <expr_stmt pos:start="119:9" pos:end="119:66"><expr pos:start="119:9" pos:end="119:65"><name pos:start="119:9" pos:end="119:14">ret_fr</name> <operator pos:start="119:16" pos:end="119:16">=</operator> <call pos:start="119:18" pos:end="119:65"><name pos:start="119:18" pos:end="119:41">vtd_dev_to_context_entry</name><argument_list pos:start="119:42" pos:end="119:65">(<argument pos:start="119:43" pos:end="119:43"><expr pos:start="119:43" pos:end="119:43"><name pos:start="119:43" pos:end="119:43">s</name></expr></argument>, <argument pos:start="119:46" pos:end="119:52"><expr pos:start="119:46" pos:end="119:52"><name pos:start="119:46" pos:end="119:52">bus_num</name></expr></argument>, <argument pos:start="119:55" pos:end="119:59"><expr pos:start="119:55" pos:end="119:59"><name pos:start="119:55" pos:end="119:59">devfn</name></expr></argument>, <argument pos:start="119:62" pos:end="119:64"><expr pos:start="119:62" pos:end="119:64"><operator pos:start="119:62" pos:end="119:62">&amp;</operator><name pos:start="119:63" pos:end="119:64">ce</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:51"><expr pos:start="121:9" pos:end="121:50"><name pos:start="121:9" pos:end="121:18">is_fpd_set</name> <operator pos:start="121:20" pos:end="121:20">=</operator> <name pos:start="121:22" pos:end="121:26"><name pos:start="121:22" pos:end="121:23">ce</name><operator pos:start="121:24" pos:end="121:24">.</operator><name pos:start="121:25" pos:end="121:26">lo</name></name> <operator pos:start="121:28" pos:end="121:28">&amp;</operator> <name pos:start="121:30" pos:end="121:50">VTD_CONTEXT_ENTRY_FPD</name></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="143:9"><if pos:start="123:9" pos:end="143:9">if <condition pos:start="123:12" pos:end="123:19">(<expr pos:start="123:13" pos:end="123:18"><name pos:start="123:13" pos:end="123:18">ret_fr</name></expr>)</condition> <block pos:start="123:21" pos:end="143:9">{<block_content pos:start="125:13" pos:end="141:19">

            <expr_stmt pos:start="125:13" pos:end="125:29"><expr pos:start="125:13" pos:end="125:28"><name pos:start="125:13" pos:end="125:18">ret_fr</name> <operator pos:start="125:20" pos:end="125:20">=</operator> <operator pos:start="125:22" pos:end="125:22">-</operator><name pos:start="125:23" pos:end="125:28">ret_fr</name></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="139:13"><if pos:start="127:13" pos:end="135:13">if <condition pos:start="127:16" pos:end="127:61">(<expr pos:start="127:17" pos:end="127:60"><name pos:start="127:17" pos:end="127:26">is_fpd_set</name> <operator pos:start="127:28" pos:end="127:29">&amp;&amp;</operator> <call pos:start="127:31" pos:end="127:60"><name pos:start="127:31" pos:end="127:52">vtd_is_qualified_fault</name><argument_list pos:start="127:53" pos:end="127:60">(<argument pos:start="127:54" pos:end="127:59"><expr pos:start="127:54" pos:end="127:59"><name pos:start="127:54" pos:end="127:59">ret_fr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="127:63" pos:end="135:13">{<block_content pos:start="129:17" pos:end="133:46">

                <expr_stmt pos:start="129:17" pos:end="133:46"><expr pos:start="129:17" pos:end="133:45"><call pos:start="129:17" pos:end="133:45"><name pos:start="129:17" pos:end="129:27">VTD_DPRINTF</name><argument_list pos:start="129:28" pos:end="133:45">(<argument pos:start="129:29" pos:end="129:32"><expr pos:start="129:29" pos:end="129:32"><name pos:start="129:29" pos:end="129:32">FLOG</name></expr></argument>, <argument pos:start="129:35" pos:end="133:44"><expr pos:start="129:35" pos:end="133:44"><literal type="string" pos:start="129:35" pos:end="129:73">"fault processing is disabled for DMA "</literal>

                            <literal type="string" pos:start="131:29" pos:end="131:66">"requests through this context-entry "</literal>

                            <literal type="string" pos:start="133:29" pos:end="133:44">"(with FPD Set)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="135:15" pos:end="139:13">else <block pos:start="135:20" pos:end="139:13">{<block_content pos:start="137:17" pos:end="137:76">

                <expr_stmt pos:start="137:17" pos:end="137:76"><expr pos:start="137:17" pos:end="137:75"><call pos:start="137:17" pos:end="137:75"><name pos:start="137:17" pos:end="137:37">vtd_report_dmar_fault</name><argument_list pos:start="137:38" pos:end="137:75">(<argument pos:start="137:39" pos:end="137:39"><expr pos:start="137:39" pos:end="137:39"><name pos:start="137:39" pos:end="137:39">s</name></expr></argument>, <argument pos:start="137:42" pos:end="137:50"><expr pos:start="137:42" pos:end="137:50"><name pos:start="137:42" pos:end="137:50">source_id</name></expr></argument>, <argument pos:start="137:53" pos:end="137:56"><expr pos:start="137:53" pos:end="137:56"><name pos:start="137:53" pos:end="137:56">addr</name></expr></argument>, <argument pos:start="137:59" pos:end="137:64"><expr pos:start="137:59" pos:end="137:64"><name pos:start="137:59" pos:end="137:64">ret_fr</name></expr></argument>, <argument pos:start="137:67" pos:end="137:74"><expr pos:start="137:67" pos:end="137:74"><name pos:start="137:67" pos:end="137:74">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <return pos:start="141:13" pos:end="141:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="145:9" pos:end="145:34">/* Update context-cache */</comment>

        <expr_stmt pos:start="147:9" pos:end="153:71"><expr pos:start="147:9" pos:end="153:70"><call pos:start="147:9" pos:end="153:70"><name pos:start="147:9" pos:end="147:19">VTD_DPRINTF</name><argument_list pos:start="147:20" pos:end="153:70">(<argument pos:start="147:21" pos:end="147:25"><expr pos:start="147:21" pos:end="147:25"><name pos:start="147:21" pos:end="147:25">CACHE</name></expr></argument>, <argument pos:start="147:28" pos:end="149:78"><expr pos:start="147:28" pos:end="149:78"><literal type="string" pos:start="147:28" pos:end="147:66">"update context-cache bus %d devfn %d "</literal>

                    <literal type="string" pos:start="149:21" pos:end="149:27">"(hi %"</literal><name pos:start="149:28" pos:end="149:33">PRIx64</name> <literal type="string" pos:start="149:35" pos:end="149:41">" lo %"</literal><name pos:start="149:42" pos:end="149:47">PRIx64</name> <literal type="string" pos:start="149:49" pos:end="149:56">" gen %"</literal><name pos:start="149:57" pos:end="149:62">PRIu32</name> <literal type="string" pos:start="149:64" pos:end="149:68">"-&gt;%"</literal><name pos:start="149:69" pos:end="149:74">PRIu32</name> <literal type="string" pos:start="149:76" pos:end="149:78">")"</literal></expr></argument>,

                    <argument pos:start="151:21" pos:end="151:27"><expr pos:start="151:21" pos:end="151:27"><name pos:start="151:21" pos:end="151:27">bus_num</name></expr></argument>, <argument pos:start="151:30" pos:end="151:34"><expr pos:start="151:30" pos:end="151:34"><name pos:start="151:30" pos:end="151:34">devfn</name></expr></argument>, <argument pos:start="151:37" pos:end="151:41"><expr pos:start="151:37" pos:end="151:41"><name pos:start="151:37" pos:end="151:41"><name pos:start="151:37" pos:end="151:38">ce</name><operator pos:start="151:39" pos:end="151:39">.</operator><name pos:start="151:40" pos:end="151:41">hi</name></name></expr></argument>, <argument pos:start="151:44" pos:end="151:48"><expr pos:start="151:44" pos:end="151:48"><name pos:start="151:44" pos:end="151:48"><name pos:start="151:44" pos:end="151:45">ce</name><operator pos:start="151:46" pos:end="151:46">.</operator><name pos:start="151:47" pos:end="151:48">lo</name></name></expr></argument>,

                    <argument pos:start="153:21" pos:end="153:47"><expr pos:start="153:21" pos:end="153:47"><name pos:start="153:21" pos:end="153:47"><name pos:start="153:21" pos:end="153:28">cc_entry</name><operator pos:start="153:29" pos:end="153:30">-&gt;</operator><name pos:start="153:31" pos:end="153:47">context_cache_gen</name></name></expr></argument>, <argument pos:start="153:50" pos:end="153:69"><expr pos:start="153:50" pos:end="153:69"><name pos:start="153:50" pos:end="153:69"><name pos:start="153:50" pos:end="153:50">s</name><operator pos:start="153:51" pos:end="153:52">-&gt;</operator><name pos:start="153:53" pos:end="153:69">context_cache_gen</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:37"><expr pos:start="155:9" pos:end="155:36"><name pos:start="155:9" pos:end="155:31"><name pos:start="155:9" pos:end="155:16">cc_entry</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:31">context_entry</name></name> <operator pos:start="155:33" pos:end="155:33">=</operator> <name pos:start="155:35" pos:end="155:36">ce</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:59"><expr pos:start="157:9" pos:end="157:58"><name pos:start="157:9" pos:end="157:35"><name pos:start="157:9" pos:end="157:16">cc_entry</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:35">context_cache_gen</name></name> <operator pos:start="157:37" pos:end="157:37">=</operator> <name pos:start="157:39" pos:end="157:58"><name pos:start="157:39" pos:end="157:39">s</name><operator pos:start="157:40" pos:end="157:41">-&gt;</operator><name pos:start="157:42" pos:end="157:58">context_cache_gen</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="163:5" pos:end="165:47"><expr pos:start="163:5" pos:end="165:46"><name pos:start="163:5" pos:end="163:10">ret_fr</name> <operator pos:start="163:12" pos:end="163:12">=</operator> <call pos:start="163:14" pos:end="165:46"><name pos:start="163:14" pos:end="163:29">vtd_gpa_to_slpte</name><argument_list pos:start="163:30" pos:end="165:46">(<argument pos:start="163:31" pos:end="163:33"><expr pos:start="163:31" pos:end="163:33"><operator pos:start="163:31" pos:end="163:31">&amp;</operator><name pos:start="163:32" pos:end="163:33">ce</name></expr></argument>, <argument pos:start="163:36" pos:end="163:39"><expr pos:start="163:36" pos:end="163:39"><name pos:start="163:36" pos:end="163:39">addr</name></expr></argument>, <argument pos:start="163:42" pos:end="163:49"><expr pos:start="163:42" pos:end="163:49"><name pos:start="163:42" pos:end="163:49">is_write</name></expr></argument>, <argument pos:start="163:52" pos:end="163:57"><expr pos:start="163:52" pos:end="163:57"><operator pos:start="163:52" pos:end="163:52">&amp;</operator><name pos:start="163:53" pos:end="163:57">slpte</name></expr></argument>, <argument pos:start="163:60" pos:end="163:65"><expr pos:start="163:60" pos:end="163:65"><operator pos:start="163:60" pos:end="163:60">&amp;</operator><name pos:start="163:61" pos:end="163:65">level</name></expr></argument>,

                              <argument pos:start="165:31" pos:end="165:36"><expr pos:start="165:31" pos:end="165:36"><operator pos:start="165:31" pos:end="165:31">&amp;</operator><name pos:start="165:32" pos:end="165:36">reads</name></expr></argument>, <argument pos:start="165:39" pos:end="165:45"><expr pos:start="165:39" pos:end="165:45"><operator pos:start="165:39" pos:end="165:39">&amp;</operator><name pos:start="165:40" pos:end="165:45">writes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="167:5" pos:end="185:5"><if pos:start="167:5" pos:end="185:5">if <condition pos:start="167:8" pos:end="167:15">(<expr pos:start="167:9" pos:end="167:14"><name pos:start="167:9" pos:end="167:14">ret_fr</name></expr>)</condition> <block pos:start="167:17" pos:end="185:5">{<block_content pos:start="169:9" pos:end="183:15">

        <expr_stmt pos:start="169:9" pos:end="169:25"><expr pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:14">ret_fr</name> <operator pos:start="169:16" pos:end="169:16">=</operator> <operator pos:start="169:18" pos:end="169:18">-</operator><name pos:start="169:19" pos:end="169:24">ret_fr</name></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="181:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:57">(<expr pos:start="171:13" pos:end="171:56"><name pos:start="171:13" pos:end="171:22">is_fpd_set</name> <operator pos:start="171:24" pos:end="171:25">&amp;&amp;</operator> <call pos:start="171:27" pos:end="171:56"><name pos:start="171:27" pos:end="171:48">vtd_is_qualified_fault</name><argument_list pos:start="171:49" pos:end="171:56">(<argument pos:start="171:50" pos:end="171:55"><expr pos:start="171:50" pos:end="171:55"><name pos:start="171:50" pos:end="171:55">ret_fr</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="171:59" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:69">

            <expr_stmt pos:start="173:13" pos:end="175:69"><expr pos:start="173:13" pos:end="175:68"><call pos:start="173:13" pos:end="175:68"><name pos:start="173:13" pos:end="173:23">VTD_DPRINTF</name><argument_list pos:start="173:24" pos:end="175:68">(<argument pos:start="173:25" pos:end="173:28"><expr pos:start="173:25" pos:end="173:28"><name pos:start="173:25" pos:end="173:28">FLOG</name></expr></argument>, <argument pos:start="173:31" pos:end="175:67"><expr pos:start="173:31" pos:end="175:67"><literal type="string" pos:start="173:31" pos:end="173:78">"fault processing is disabled for DMA requests "</literal>

                        <literal type="string" pos:start="175:25" pos:end="175:67">"through this context-entry (with FPD Set)"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="177:11" pos:end="181:9">else <block pos:start="177:16" pos:end="181:9">{<block_content pos:start="179:13" pos:end="179:72">

            <expr_stmt pos:start="179:13" pos:end="179:72"><expr pos:start="179:13" pos:end="179:71"><call pos:start="179:13" pos:end="179:71"><name pos:start="179:13" pos:end="179:33">vtd_report_dmar_fault</name><argument_list pos:start="179:34" pos:end="179:71">(<argument pos:start="179:35" pos:end="179:35"><expr pos:start="179:35" pos:end="179:35"><name pos:start="179:35" pos:end="179:35">s</name></expr></argument>, <argument pos:start="179:38" pos:end="179:46"><expr pos:start="179:38" pos:end="179:46"><name pos:start="179:38" pos:end="179:46">source_id</name></expr></argument>, <argument pos:start="179:49" pos:end="179:52"><expr pos:start="179:49" pos:end="179:52"><name pos:start="179:49" pos:end="179:52">addr</name></expr></argument>, <argument pos:start="179:55" pos:end="179:60"><expr pos:start="179:55" pos:end="179:60"><name pos:start="179:55" pos:end="179:60">ret_fr</name></expr></argument>, <argument pos:start="179:63" pos:end="179:70"><expr pos:start="179:63" pos:end="179:70"><name pos:start="179:63" pos:end="179:70">is_write</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <return pos:start="183:9" pos:end="183:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="191:36"><expr pos:start="189:5" pos:end="191:35"><call pos:start="189:5" pos:end="191:35"><name pos:start="189:5" pos:end="189:20">vtd_update_iotlb</name><argument_list pos:start="189:21" pos:end="191:35">(<argument pos:start="189:22" pos:end="189:22"><expr pos:start="189:22" pos:end="189:22"><name pos:start="189:22" pos:end="189:22">s</name></expr></argument>, <argument pos:start="189:25" pos:end="189:33"><expr pos:start="189:25" pos:end="189:33"><name pos:start="189:25" pos:end="189:33">source_id</name></expr></argument>, <argument pos:start="189:36" pos:end="189:63"><expr pos:start="189:36" pos:end="189:63"><call pos:start="189:36" pos:end="189:63"><name pos:start="189:36" pos:end="189:56">VTD_CONTEXT_ENTRY_DID</name><argument_list pos:start="189:57" pos:end="189:63">(<argument pos:start="189:58" pos:end="189:62"><expr pos:start="189:58" pos:end="189:62"><name pos:start="189:58" pos:end="189:62"><name pos:start="189:58" pos:end="189:59">ce</name><operator pos:start="189:60" pos:end="189:60">.</operator><name pos:start="189:61" pos:end="189:62">hi</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="189:66" pos:end="189:69"><expr pos:start="189:66" pos:end="189:69"><name pos:start="189:66" pos:end="189:69">addr</name></expr></argument>, <argument pos:start="189:72" pos:end="189:76"><expr pos:start="189:72" pos:end="189:76"><name pos:start="189:72" pos:end="189:76">slpte</name></expr></argument>,

                     <argument pos:start="191:22" pos:end="191:26"><expr pos:start="191:22" pos:end="191:26"><name pos:start="191:22" pos:end="191:26">reads</name></expr></argument>, <argument pos:start="191:29" pos:end="191:34"><expr pos:start="191:29" pos:end="191:34"><name pos:start="191:29" pos:end="191:34">writes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="193:1" pos:end="193:4"><name pos:start="193:1" pos:end="193:3">out</name>:</label>

    <expr_stmt pos:start="195:5" pos:end="195:42"><expr pos:start="195:5" pos:end="195:41"><name pos:start="195:5" pos:end="195:15"><name pos:start="195:5" pos:end="195:9">entry</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:15">iova</name></name> <operator pos:start="195:17" pos:end="195:17">=</operator> <name pos:start="195:19" pos:end="195:22">addr</name> <operator pos:start="195:24" pos:end="195:24">&amp;</operator> <name pos:start="195:26" pos:end="195:41">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:74"><expr pos:start="197:5" pos:end="197:73"><name pos:start="197:5" pos:end="197:26"><name pos:start="197:5" pos:end="197:9">entry</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:26">translated_addr</name></name> <operator pos:start="197:28" pos:end="197:28">=</operator> <call pos:start="197:30" pos:end="197:54"><name pos:start="197:30" pos:end="197:47">vtd_get_slpte_addr</name><argument_list pos:start="197:48" pos:end="197:54">(<argument pos:start="197:49" pos:end="197:53"><expr pos:start="197:49" pos:end="197:53"><name pos:start="197:49" pos:end="197:53">slpte</name></expr></argument>)</argument_list></call> <operator pos:start="197:56" pos:end="197:56">&amp;</operator> <name pos:start="197:58" pos:end="197:73">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

    <expr_stmt pos:start="199:5" pos:end="199:41"><expr pos:start="199:5" pos:end="199:40"><name pos:start="199:5" pos:end="199:20"><name pos:start="199:5" pos:end="199:9">entry</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:20">addr_mask</name></name> <operator pos:start="199:22" pos:end="199:22">=</operator> <operator pos:start="199:24" pos:end="199:24">~</operator><name pos:start="199:25" pos:end="199:40">VTD_PAGE_MASK_4K</name></expr>;</expr_stmt>

    <expr_stmt pos:start="201:5" pos:end="201:53"><expr pos:start="201:5" pos:end="201:52"><name pos:start="201:5" pos:end="201:15"><name pos:start="201:5" pos:end="201:9">entry</name><operator pos:start="201:10" pos:end="201:11">-&gt;</operator><name pos:start="201:12" pos:end="201:15">perm</name></name> <operator pos:start="201:17" pos:end="201:17">=</operator> <operator pos:start="201:19" pos:end="201:19">(</operator><ternary pos:start="201:20" pos:end="201:33"><condition pos:start="201:20" pos:end="201:27"><expr pos:start="201:20" pos:end="201:25"><name pos:start="201:20" pos:end="201:25">writes</name></expr> ?</condition><then pos:start="201:29" pos:end="201:29"> <expr pos:start="201:29" pos:end="201:29"><literal type="number" pos:start="201:29" pos:end="201:29">2</literal></expr> </then><else pos:start="201:31" pos:end="201:33">: <expr pos:start="201:33" pos:end="201:33"><literal type="number" pos:start="201:33" pos:end="201:33">0</literal></expr></else></ternary><operator pos:start="201:34" pos:end="201:34">)</operator> <operator pos:start="201:36" pos:end="201:36">+</operator> <operator pos:start="201:38" pos:end="201:38">(</operator><ternary pos:start="201:39" pos:end="201:51"><condition pos:start="201:39" pos:end="201:45"><expr pos:start="201:39" pos:end="201:43"><name pos:start="201:39" pos:end="201:43">reads</name></expr> ?</condition><then pos:start="201:47" pos:end="201:47"> <expr pos:start="201:47" pos:end="201:47"><literal type="number" pos:start="201:47" pos:end="201:47">1</literal></expr> </then><else pos:start="201:49" pos:end="201:51">: <expr pos:start="201:51" pos:end="201:51"><literal type="number" pos:start="201:51" pos:end="201:51">0</literal></expr></else></ternary><operator pos:start="201:52" pos:end="201:52">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
