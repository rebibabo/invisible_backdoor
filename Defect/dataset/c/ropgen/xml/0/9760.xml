<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9760.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">piix3_write_config</name><parameter_list pos:start="1:31" pos:end="3:71">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:40">PCIDevice</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:45">dev</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:47"><decl pos:start="3:32" pos:end="3:47"><type pos:start="3:32" pos:end="3:47"><name pos:start="3:32" pos:end="3:39">uint32_t</name></type> <name pos:start="3:41" pos:end="3:47">address</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:57">uint32_t</name></type> <name pos:start="3:59" pos:end="3:61">val</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:70"><decl pos:start="3:64" pos:end="3:70"><type pos:start="3:64" pos:end="3:70"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:70">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="29:1">{<block_content pos:start="7:5" pos:end="27:5">

    <expr_stmt pos:start="7:5" pos:end="7:53"><expr pos:start="7:5" pos:end="7:52"><call pos:start="7:5" pos:end="7:52"><name pos:start="7:5" pos:end="7:28">pci_default_write_config</name><argument_list pos:start="7:29" pos:end="7:52">(<argument pos:start="7:30" pos:end="7:32"><expr pos:start="7:30" pos:end="7:32"><name pos:start="7:30" pos:end="7:32">dev</name></expr></argument>, <argument pos:start="7:35" pos:end="7:41"><expr pos:start="7:35" pos:end="7:41"><name pos:start="7:35" pos:end="7:41">address</name></expr></argument>, <argument pos:start="7:44" pos:end="7:46"><expr pos:start="7:44" pos:end="7:46"><name pos:start="7:44" pos:end="7:46">val</name></expr></argument>, <argument pos:start="7:49" pos:end="7:51"><expr pos:start="7:49" pos:end="7:51"><name pos:start="7:49" pos:end="7:51">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="9:5" pos:end="27:5"><if pos:start="9:5" pos:end="27:5">if <condition pos:start="9:8" pos:end="9:52">(<expr pos:start="9:9" pos:end="9:51"><call pos:start="9:9" pos:end="9:51"><name pos:start="9:9" pos:end="9:22">ranges_overlap</name><argument_list pos:start="9:23" pos:end="9:51">(<argument pos:start="9:24" pos:end="9:30"><expr pos:start="9:24" pos:end="9:30"><name pos:start="9:24" pos:end="9:30">address</name></expr></argument>, <argument pos:start="9:33" pos:end="9:35"><expr pos:start="9:33" pos:end="9:35"><name pos:start="9:33" pos:end="9:35">len</name></expr></argument>, <argument pos:start="9:38" pos:end="9:47"><expr pos:start="9:38" pos:end="9:47"><name pos:start="9:38" pos:end="9:47">PIIX_PIRQC</name></expr></argument>, <argument pos:start="9:50" pos:end="9:50"><expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">4</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:54" pos:end="27:5">{<block_content pos:start="11:9" pos:end="25:9">

        <decl_stmt pos:start="11:9" pos:end="11:50"><decl pos:start="11:9" pos:end="11:49"><type pos:start="11:9" pos:end="11:20"><name pos:start="11:9" pos:end="11:18">PIIX3State</name> <modifier pos:start="11:20" pos:end="11:20">*</modifier></type><name pos:start="11:21" pos:end="11:25">piix3</name> <init pos:start="11:27" pos:end="11:49">= <expr pos:start="11:29" pos:end="11:49"><call pos:start="11:29" pos:end="11:49"><name pos:start="11:29" pos:end="11:44">PIIX3_PCI_DEVICE</name><argument_list pos:start="11:45" pos:end="11:49">(<argument pos:start="11:46" pos:end="11:48"><expr pos:start="11:46" pos:end="11:48"><name pos:start="11:46" pos:end="11:48">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="13:9" pos:end="13:20"><decl pos:start="13:9" pos:end="13:19"><type pos:start="13:9" pos:end="13:11"><name pos:start="13:9" pos:end="13:11">int</name></type> <name pos:start="13:13" pos:end="13:19">pic_irq</name></decl>;</decl_stmt>



        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:42">pci_bus_fire_intx_routing_notifier</name><argument_list pos:start="17:43" pos:end="17:58">(<argument pos:start="17:44" pos:end="17:57"><expr pos:start="17:44" pos:end="17:57"><name pos:start="17:44" pos:end="17:57"><name pos:start="17:44" pos:end="17:48">piix3</name><operator pos:start="17:49" pos:end="17:50">-&gt;</operator><name pos:start="17:51" pos:end="17:53">dev</name><operator pos:start="17:54" pos:end="17:54">.</operator><name pos:start="17:55" pos:end="17:57">bus</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:39"><expr pos:start="19:9" pos:end="19:38"><call pos:start="19:9" pos:end="19:38"><name pos:start="19:9" pos:end="19:31">piix3_update_irq_levels</name><argument_list pos:start="19:32" pos:end="19:38">(<argument pos:start="19:33" pos:end="19:37"><expr pos:start="19:33" pos:end="19:37"><name pos:start="19:33" pos:end="19:37">piix3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="21:9" pos:end="25:9">for <control pos:start="21:13" pos:end="21:65">(<init pos:start="21:14" pos:end="21:25"><expr pos:start="21:14" pos:end="21:24"><name pos:start="21:14" pos:end="21:20">pic_irq</name> <operator pos:start="21:22" pos:end="21:22">=</operator> <literal type="number" pos:start="21:24" pos:end="21:24">0</literal></expr>;</init> <condition pos:start="21:27" pos:end="21:54"><expr pos:start="21:27" pos:end="21:53"><name pos:start="21:27" pos:end="21:33">pic_irq</name> <operator pos:start="21:35" pos:end="21:35">&lt;</operator> <name pos:start="21:37" pos:end="21:53">PIIX_NUM_PIC_IRQS</name></expr>;</condition> <incr pos:start="21:56" pos:end="21:64"><expr pos:start="21:56" pos:end="21:64"><name pos:start="21:56" pos:end="21:62">pic_irq</name><operator pos:start="21:63" pos:end="21:64">++</operator></expr></incr>)</control> <block pos:start="21:67" pos:end="25:9">{<block_content pos:start="23:13" pos:end="23:46">

            <expr_stmt pos:start="23:13" pos:end="23:46"><expr pos:start="23:13" pos:end="23:45"><call pos:start="23:13" pos:end="23:45"><name pos:start="23:13" pos:end="23:29">piix3_set_irq_pic</name><argument_list pos:start="23:30" pos:end="23:45">(<argument pos:start="23:31" pos:end="23:35"><expr pos:start="23:31" pos:end="23:35"><name pos:start="23:31" pos:end="23:35">piix3</name></expr></argument>, <argument pos:start="23:38" pos:end="23:44"><expr pos:start="23:38" pos:end="23:44"><name pos:start="23:38" pos:end="23:44">pic_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
