<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24755.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">iscsi_refresh_limits</name><parameter_list pos:start="1:32" pos:end="1:53">(<parameter pos:start="1:33" pos:end="1:52"><decl pos:start="1:33" pos:end="1:52"><type pos:start="1:33" pos:end="1:50"><name pos:start="1:33" pos:end="1:48">BlockDriverState</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:52">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:12">IscsiLun</name> <modifier pos:start="5:14" pos:end="5:14">*</modifier></type><name pos:start="5:15" pos:end="5:22">iscsilun</name> <init pos:start="5:24" pos:end="5:35">= <expr pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:35"><name pos:start="5:26" pos:end="5:27">bs</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">opaque</name></name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="11:64">/* We don't actually refresh here, but just return data queried in

     * iscsi_open(): iscsi targets don't change their limits. */</comment>

    <if_stmt pos:start="13:5" pos:end="47:5"><if pos:start="13:5" pos:end="47:5">if <condition pos:start="13:8" pos:end="13:50">(<expr pos:start="13:9" pos:end="13:49"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:16">iscsilun</name><operator pos:start="13:17" pos:end="13:18">-&gt;</operator><name pos:start="13:19" pos:end="13:21">lbp</name><operator pos:start="13:22" pos:end="13:22">.</operator><name pos:start="13:23" pos:end="13:26">lbpu</name></name> <operator pos:start="13:28" pos:end="13:29">||</operator> <name pos:start="13:31" pos:end="13:49"><name pos:start="13:31" pos:end="13:38">iscsilun</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:43">lbp</name><operator pos:start="13:44" pos:end="13:44">.</operator><name pos:start="13:45" pos:end="13:49">lbpws</name></name></expr>)</condition> <block pos:start="13:52" pos:end="47:5">{<block_content pos:start="15:9" pos:end="45:63">

        <if_stmt pos:start="15:9" pos:end="21:9"><if pos:start="15:9" pos:end="21:9">if <condition pos:start="15:12" pos:end="15:48">(<expr pos:start="15:13" pos:end="15:47"><name pos:start="15:13" pos:end="15:34"><name pos:start="15:13" pos:end="15:20">iscsilun</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">bl</name><operator pos:start="15:25" pos:end="15:25">.</operator><name pos:start="15:26" pos:end="15:34">max_unmap</name></name> <operator pos:start="15:36" pos:end="15:36">&lt;</operator> <literal type="number" pos:start="15:38" pos:end="15:47">0xffffffff</literal></expr>)</condition> <block pos:start="15:50" pos:end="21:9">{<block_content pos:start="17:13" pos:end="19:59">

            <expr_stmt pos:start="17:13" pos:end="19:59"><expr pos:start="17:13" pos:end="19:58"><name pos:start="17:13" pos:end="17:30"><name pos:start="17:13" pos:end="17:14">bs</name><operator pos:start="17:15" pos:end="17:16">-&gt;</operator><name pos:start="17:17" pos:end="17:18">bl</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:30">max_discard</name></name> <operator pos:start="17:32" pos:end="17:32">=</operator> <call pos:start="17:34" pos:end="19:58"><name pos:start="17:34" pos:end="17:48">sector_lun2qemu</name><argument_list pos:start="17:49" pos:end="19:58">(<argument pos:start="17:50" pos:end="17:71"><expr pos:start="17:50" pos:end="17:71"><name pos:start="17:50" pos:end="17:71"><name pos:start="17:50" pos:end="17:57">iscsilun</name><operator pos:start="17:58" pos:end="17:59">-&gt;</operator><name pos:start="17:60" pos:end="17:61">bl</name><operator pos:start="17:62" pos:end="17:62">.</operator><name pos:start="17:63" pos:end="17:71">max_unmap</name></name></expr></argument>,

                                                 <argument pos:start="19:50" pos:end="19:57"><expr pos:start="19:50" pos:end="19:57"><name pos:start="19:50" pos:end="19:57">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="25:61"><expr pos:start="23:9" pos:end="25:60"><name pos:start="23:9" pos:end="23:32"><name pos:start="23:9" pos:end="23:10">bs</name><operator pos:start="23:11" pos:end="23:12">-&gt;</operator><name pos:start="23:13" pos:end="23:14">bl</name><operator pos:start="23:15" pos:end="23:15">.</operator><name pos:start="23:16" pos:end="23:32">discard_alignment</name></name> <operator pos:start="23:34" pos:end="23:34">=</operator> <call pos:start="23:36" pos:end="25:60"><name pos:start="23:36" pos:end="23:50">sector_lun2qemu</name><argument_list pos:start="23:51" pos:end="25:60">(<argument pos:start="23:52" pos:end="23:78"><expr pos:start="23:52" pos:end="23:78"><name pos:start="23:52" pos:end="23:78"><name pos:start="23:52" pos:end="23:59">iscsilun</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:63">bl</name><operator pos:start="23:64" pos:end="23:64">.</operator><name pos:start="23:65" pos:end="23:78">opt_unmap_gran</name></name></expr></argument>,

                                                   <argument pos:start="25:52" pos:end="25:59"><expr pos:start="25:52" pos:end="25:59"><name pos:start="25:52" pos:end="25:59">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="29:9" pos:end="35:9"><if pos:start="29:9" pos:end="35:9">if <condition pos:start="29:12" pos:end="29:49">(<expr pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:35"><name pos:start="29:13" pos:end="29:20">iscsilun</name><operator pos:start="29:21" pos:end="29:22">-&gt;</operator><name pos:start="29:23" pos:end="29:24">bl</name><operator pos:start="29:25" pos:end="29:25">.</operator><name pos:start="29:26" pos:end="29:35">max_ws_len</name></name> <operator pos:start="29:37" pos:end="29:37">&lt;</operator> <literal type="number" pos:start="29:39" pos:end="29:48">0xffffffff</literal></expr>)</condition> <block pos:start="29:51" pos:end="35:9">{<block_content pos:start="31:13" pos:end="33:64">

            <expr_stmt pos:start="31:13" pos:end="33:64"><expr pos:start="31:13" pos:end="33:63"><name pos:start="31:13" pos:end="31:35"><name pos:start="31:13" pos:end="31:14">bs</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:18">bl</name><operator pos:start="31:19" pos:end="31:19">.</operator><name pos:start="31:20" pos:end="31:35">max_write_zeroes</name></name> <operator pos:start="31:37" pos:end="31:37">=</operator> <call pos:start="31:39" pos:end="33:63"><name pos:start="31:39" pos:end="31:53">sector_lun2qemu</name><argument_list pos:start="31:54" pos:end="33:63">(<argument pos:start="31:55" pos:end="31:77"><expr pos:start="31:55" pos:end="31:77"><name pos:start="31:55" pos:end="31:77"><name pos:start="31:55" pos:end="31:62">iscsilun</name><operator pos:start="31:63" pos:end="31:64">-&gt;</operator><name pos:start="31:65" pos:end="31:66">bl</name><operator pos:start="31:67" pos:end="31:67">.</operator><name pos:start="31:68" pos:end="31:77">max_ws_len</name></name></expr></argument>,

                                                      <argument pos:start="33:55" pos:end="33:62"><expr pos:start="33:55" pos:end="33:62"><name pos:start="33:55" pos:end="33:62">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="39:66"><expr pos:start="37:9" pos:end="39:65"><name pos:start="37:9" pos:end="37:37"><name pos:start="37:9" pos:end="37:10">bs</name><operator pos:start="37:11" pos:end="37:12">-&gt;</operator><name pos:start="37:13" pos:end="37:14">bl</name><operator pos:start="37:15" pos:end="37:15">.</operator><name pos:start="37:16" pos:end="37:37">write_zeroes_alignment</name></name> <operator pos:start="37:39" pos:end="37:39">=</operator> <call pos:start="37:41" pos:end="39:65"><name pos:start="37:41" pos:end="37:55">sector_lun2qemu</name><argument_list pos:start="37:56" pos:end="39:65">(<argument pos:start="37:57" pos:end="37:83"><expr pos:start="37:57" pos:end="37:83"><name pos:start="37:57" pos:end="37:83"><name pos:start="37:57" pos:end="37:64">iscsilun</name><operator pos:start="37:65" pos:end="37:66">-&gt;</operator><name pos:start="37:67" pos:end="37:68">bl</name><operator pos:start="37:69" pos:end="37:69">.</operator><name pos:start="37:70" pos:end="37:83">opt_unmap_gran</name></name></expr></argument>,

                                                        <argument pos:start="39:57" pos:end="39:64"><expr pos:start="39:57" pos:end="39:64"><name pos:start="39:57" pos:end="39:64">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="43:9" pos:end="45:63"><expr pos:start="43:9" pos:end="45:62"><name pos:start="43:9" pos:end="43:34"><name pos:start="43:9" pos:end="43:10">bs</name><operator pos:start="43:11" pos:end="43:12">-&gt;</operator><name pos:start="43:13" pos:end="43:14">bl</name><operator pos:start="43:15" pos:end="43:15">.</operator><name pos:start="43:16" pos:end="43:34">opt_transfer_length</name></name> <operator pos:start="43:36" pos:end="43:36">=</operator> <call pos:start="43:38" pos:end="45:62"><name pos:start="43:38" pos:end="43:52">sector_lun2qemu</name><argument_list pos:start="43:53" pos:end="45:62">(<argument pos:start="43:54" pos:end="43:78"><expr pos:start="43:54" pos:end="43:78"><name pos:start="43:54" pos:end="43:78"><name pos:start="43:54" pos:end="43:61">iscsilun</name><operator pos:start="43:62" pos:end="43:63">-&gt;</operator><name pos:start="43:64" pos:end="43:65">bl</name><operator pos:start="43:66" pos:end="43:66">.</operator><name pos:start="43:67" pos:end="43:78">opt_xfer_len</name></name></expr></argument>,

                                                     <argument pos:start="45:54" pos:end="45:61"><expr pos:start="45:54" pos:end="45:61"><name pos:start="45:54" pos:end="45:61">iscsilun</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="49:5" pos:end="49:13">return <expr pos:start="49:12" pos:end="49:12"><literal type="number" pos:start="49:12" pos:end="49:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
