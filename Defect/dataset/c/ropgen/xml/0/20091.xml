<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20091.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">mpeg1_skip_picture</name><parameter_list pos:start="1:31" pos:end="1:63">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:48"><name pos:start="1:32" pos:end="1:45">MpegEncContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:53">int</name></type> <name pos:start="1:55" pos:end="1:62">pict_num</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:27">

    <expr_stmt pos:start="5:5" pos:end="5:47"><expr pos:start="5:5" pos:end="5:46"><call pos:start="5:5" pos:end="5:46"><name pos:start="5:5" pos:end="5:10">assert</name><argument_list pos:start="5:11" pos:end="5:46">(<argument pos:start="5:12" pos:end="5:45"><expr pos:start="5:12" pos:end="5:45"><name pos:start="5:12" pos:end="5:22"><name pos:start="5:12" pos:end="5:12">s</name><operator pos:start="5:13" pos:end="5:14">-&gt;</operator><name pos:start="5:15" pos:end="5:22">codec_id</name></name> <operator pos:start="5:24" pos:end="5:25">==</operator> <name pos:start="5:27" pos:end="5:45">CODEC_ID_MPEG1VIDEO</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="5:49" pos:end="5:83">// mpeg2 can do these repeat things</comment>



    <comment type="block" pos:start="9:5" pos:end="9:30">/* mpeg1 picture header */</comment>

    <expr_stmt pos:start="11:5" pos:end="11:38"><expr pos:start="11:5" pos:end="11:37"><call pos:start="11:5" pos:end="11:37"><name pos:start="11:5" pos:end="11:14">put_header</name><argument_list pos:start="11:15" pos:end="11:37">(<argument pos:start="11:16" pos:end="11:16"><expr pos:start="11:16" pos:end="11:16"><name pos:start="11:16" pos:end="11:16">s</name></expr></argument>, <argument pos:start="11:19" pos:end="11:36"><expr pos:start="11:19" pos:end="11:36"><name pos:start="11:19" pos:end="11:36">PICTURE_START_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:28">/* temporal reference */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:43"><expr pos:start="15:5" pos:end="15:42"><call pos:start="15:5" pos:end="15:42"><name pos:start="15:5" pos:end="15:12">put_bits</name><argument_list pos:start="15:13" pos:end="15:42">(<argument pos:start="15:14" pos:end="15:19"><expr pos:start="15:14" pos:end="15:19"><operator pos:start="15:14" pos:end="15:14">&amp;</operator><name pos:start="15:15" pos:end="15:19"><name pos:start="15:15" pos:end="15:15">s</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:19">pb</name></name></expr></argument>, <argument pos:start="15:22" pos:end="15:23"><expr pos:start="15:22" pos:end="15:23"><literal type="number" pos:start="15:22" pos:end="15:23">10</literal></expr></argument>, <argument pos:start="15:26" pos:end="15:41"><expr pos:start="15:26" pos:end="15:41"><name pos:start="15:26" pos:end="15:33">pict_num</name> <operator pos:start="15:35" pos:end="15:35">&amp;</operator> <literal type="number" pos:start="15:37" pos:end="15:41">0x3ff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

    

    <expr_stmt pos:start="19:5" pos:end="19:32"><expr pos:start="19:5" pos:end="19:31"><call pos:start="19:5" pos:end="19:31"><name pos:start="19:5" pos:end="19:12">put_bits</name><argument_list pos:start="19:13" pos:end="19:31">(<argument pos:start="19:14" pos:end="19:19"><expr pos:start="19:14" pos:end="19:19"><operator pos:start="19:14" pos:end="19:14">&amp;</operator><name pos:start="19:15" pos:end="19:19"><name pos:start="19:15" pos:end="19:15">s</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:19">pb</name></name></expr></argument>, <argument pos:start="19:22" pos:end="19:22"><expr pos:start="19:22" pos:end="19:22"><literal type="number" pos:start="19:22" pos:end="19:22">3</literal></expr></argument>, <argument pos:start="19:25" pos:end="19:30"><expr pos:start="19:25" pos:end="19:30"><name pos:start="19:25" pos:end="19:30">P_TYPE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:12">put_bits</name><argument_list pos:start="21:13" pos:end="21:32">(<argument pos:start="21:14" pos:end="21:19"><expr pos:start="21:14" pos:end="21:19"><operator pos:start="21:14" pos:end="21:14">&amp;</operator><name pos:start="21:15" pos:end="21:19"><name pos:start="21:15" pos:end="21:15">s</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:19">pb</name></name></expr></argument>, <argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><literal type="number" pos:start="21:22" pos:end="21:23">16</literal></expr></argument>, <argument pos:start="21:26" pos:end="21:31"><expr pos:start="21:26" pos:end="21:31"><literal type="number" pos:start="21:26" pos:end="21:31">0xffff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:35" pos:end="21:61">/* non constant bit rate */</comment>

    

    <expr_stmt pos:start="25:5" pos:end="25:27"><expr pos:start="25:5" pos:end="25:26"><call pos:start="25:5" pos:end="25:26"><name pos:start="25:5" pos:end="25:12">put_bits</name><argument_list pos:start="25:13" pos:end="25:26">(<argument pos:start="25:14" pos:end="25:19"><expr pos:start="25:14" pos:end="25:19"><operator pos:start="25:14" pos:end="25:14">&amp;</operator><name pos:start="25:15" pos:end="25:19"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:19">pb</name></name></expr></argument>, <argument pos:start="25:22" pos:end="25:22"><expr pos:start="25:22" pos:end="25:22"><literal type="number" pos:start="25:22" pos:end="25:22">1</literal></expr></argument>, <argument pos:start="25:25" pos:end="25:25"><expr pos:start="25:25" pos:end="25:25"><literal type="number" pos:start="25:25" pos:end="25:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:29" pos:end="25:53">/* integer coordinates */</comment>

    <expr_stmt pos:start="27:5" pos:end="27:27"><expr pos:start="27:5" pos:end="27:26"><call pos:start="27:5" pos:end="27:26"><name pos:start="27:5" pos:end="27:12">put_bits</name><argument_list pos:start="27:13" pos:end="27:26">(<argument pos:start="27:14" pos:end="27:19"><expr pos:start="27:14" pos:end="27:19"><operator pos:start="27:14" pos:end="27:14">&amp;</operator><name pos:start="27:15" pos:end="27:19"><name pos:start="27:15" pos:end="27:15">s</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:19">pb</name></name></expr></argument>, <argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><literal type="number" pos:start="27:22" pos:end="27:22">3</literal></expr></argument>, <argument pos:start="27:25" pos:end="27:25"><expr pos:start="27:25" pos:end="27:25"><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="27:29" pos:end="27:48">/* forward_f_code */</comment>

    

    <expr_stmt pos:start="31:5" pos:end="31:27"><expr pos:start="31:5" pos:end="31:26"><call pos:start="31:5" pos:end="31:26"><name pos:start="31:5" pos:end="31:12">put_bits</name><argument_list pos:start="31:13" pos:end="31:26">(<argument pos:start="31:14" pos:end="31:19"><expr pos:start="31:14" pos:end="31:19"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:19"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:19">pb</name></name></expr></argument>, <argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr></argument>, <argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="31:29" pos:end="31:51">/* extra bit picture */</comment>

    

    <comment type="block" pos:start="35:5" pos:end="35:24">/* only one slice */</comment>

    <expr_stmt pos:start="37:5" pos:end="37:40"><expr pos:start="37:5" pos:end="37:39"><call pos:start="37:5" pos:end="37:39"><name pos:start="37:5" pos:end="37:14">put_header</name><argument_list pos:start="37:15" pos:end="37:39">(<argument pos:start="37:16" pos:end="37:16"><expr pos:start="37:16" pos:end="37:16"><name pos:start="37:16" pos:end="37:16">s</name></expr></argument>, <argument pos:start="37:19" pos:end="37:38"><expr pos:start="37:19" pos:end="37:38"><name pos:start="37:19" pos:end="37:38">SLICE_MIN_START_CODE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:27"><expr pos:start="39:5" pos:end="39:26"><call pos:start="39:5" pos:end="39:26"><name pos:start="39:5" pos:end="39:12">put_bits</name><argument_list pos:start="39:13" pos:end="39:26">(<argument pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:19"><operator pos:start="39:14" pos:end="39:14">&amp;</operator><name pos:start="39:15" pos:end="39:19"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:19">pb</name></name></expr></argument>, <argument pos:start="39:22" pos:end="39:22"><expr pos:start="39:22" pos:end="39:22"><literal type="number" pos:start="39:22" pos:end="39:22">5</literal></expr></argument>, <argument pos:start="39:25" pos:end="39:25"><expr pos:start="39:25" pos:end="39:25"><literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:29" pos:end="39:49">/* quantizer scale */</comment>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><call pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:12">put_bits</name><argument_list pos:start="41:13" pos:end="41:26">(<argument pos:start="41:14" pos:end="41:19"><expr pos:start="41:14" pos:end="41:19"><operator pos:start="41:14" pos:end="41:14">&amp;</operator><name pos:start="41:15" pos:end="41:19"><name pos:start="41:15" pos:end="41:15">s</name><operator pos:start="41:16" pos:end="41:17">-&gt;</operator><name pos:start="41:18" pos:end="41:19">pb</name></name></expr></argument>, <argument pos:start="41:22" pos:end="41:22"><expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">1</literal></expr></argument>, <argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><literal type="number" pos:start="41:25" pos:end="41:25">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:29" pos:end="41:57">/* slice extra information */</comment>

    

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><call pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:22">encode_mb_skip_run</name><argument_list pos:start="45:23" pos:end="45:28">(<argument pos:start="45:24" pos:end="45:24"><expr pos:start="45:24" pos:end="45:24"><name pos:start="45:24" pos:end="45:24">s</name></expr></argument>, <argument pos:start="45:27" pos:end="45:27"><expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="49:5" pos:end="49:26">/* empty macroblock */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:27"><expr pos:start="51:5" pos:end="51:26"><call pos:start="51:5" pos:end="51:26"><name pos:start="51:5" pos:end="51:12">put_bits</name><argument_list pos:start="51:13" pos:end="51:26">(<argument pos:start="51:14" pos:end="51:19"><expr pos:start="51:14" pos:end="51:19"><operator pos:start="51:14" pos:end="51:14">&amp;</operator><name pos:start="51:15" pos:end="51:19"><name pos:start="51:15" pos:end="51:15">s</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:19">pb</name></name></expr></argument>, <argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><literal type="number" pos:start="51:22" pos:end="51:22">3</literal></expr></argument>, <argument pos:start="51:25" pos:end="51:25"><expr pos:start="51:25" pos:end="51:25"><literal type="number" pos:start="51:25" pos:end="51:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:29" pos:end="51:45">/* motion only */</comment>

    

    <comment type="block" pos:start="55:5" pos:end="55:27">/* zero motion x &amp; y */</comment>

    <expr_stmt pos:start="57:5" pos:end="57:27"><expr pos:start="57:5" pos:end="57:26"><call pos:start="57:5" pos:end="57:26"><name pos:start="57:5" pos:end="57:12">put_bits</name><argument_list pos:start="57:13" pos:end="57:26">(<argument pos:start="57:14" pos:end="57:19"><expr pos:start="57:14" pos:end="57:19"><operator pos:start="57:14" pos:end="57:14">&amp;</operator><name pos:start="57:15" pos:end="57:19"><name pos:start="57:15" pos:end="57:15">s</name><operator pos:start="57:16" pos:end="57:17">-&gt;</operator><name pos:start="57:18" pos:end="57:19">pb</name></name></expr></argument>, <argument pos:start="57:22" pos:end="57:22"><expr pos:start="57:22" pos:end="57:22"><literal type="number" pos:start="57:22" pos:end="57:22">1</literal></expr></argument>, <argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

    <expr_stmt pos:start="59:5" pos:end="59:27"><expr pos:start="59:5" pos:end="59:26"><call pos:start="59:5" pos:end="59:26"><name pos:start="59:5" pos:end="59:12">put_bits</name><argument_list pos:start="59:13" pos:end="59:26">(<argument pos:start="59:14" pos:end="59:19"><expr pos:start="59:14" pos:end="59:19"><operator pos:start="59:14" pos:end="59:14">&amp;</operator><name pos:start="59:15" pos:end="59:19"><name pos:start="59:15" pos:end="59:15">s</name><operator pos:start="59:16" pos:end="59:17">-&gt;</operator><name pos:start="59:18" pos:end="59:19">pb</name></name></expr></argument>, <argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><literal type="number" pos:start="59:22" pos:end="59:22">1</literal></expr></argument>, <argument pos:start="59:25" pos:end="59:25"><expr pos:start="59:25" pos:end="59:25"><literal type="number" pos:start="59:25" pos:end="59:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 



    <comment type="block" pos:start="63:5" pos:end="63:40">/* output a number of empty slice */</comment>

    <expr_stmt pos:start="65:5" pos:end="65:58"><expr pos:start="65:5" pos:end="65:57"><call pos:start="65:5" pos:end="65:57"><name pos:start="65:5" pos:end="65:22">encode_mb_skip_run</name><argument_list pos:start="65:23" pos:end="65:57">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">s</name></expr></argument>, <argument pos:start="65:27" pos:end="65:56"><expr pos:start="65:27" pos:end="65:56"><name pos:start="65:27" pos:end="65:37"><name pos:start="65:27" pos:end="65:27">s</name><operator pos:start="65:28" pos:end="65:29">-&gt;</operator><name pos:start="65:30" pos:end="65:37">mb_width</name></name> <operator pos:start="65:39" pos:end="65:39">*</operator> <name pos:start="65:41" pos:end="65:52"><name pos:start="65:41" pos:end="65:41">s</name><operator pos:start="65:42" pos:end="65:43">-&gt;</operator><name pos:start="65:44" pos:end="65:52">mb_height</name></name> <operator pos:start="65:54" pos:end="65:54">-</operator> <literal type="number" pos:start="65:56" pos:end="65:56">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <comment type="block" pos:start="69:5" pos:end="69:26">/* empty macroblock */</comment>

    <expr_stmt pos:start="71:5" pos:end="71:27"><expr pos:start="71:5" pos:end="71:26"><call pos:start="71:5" pos:end="71:26"><name pos:start="71:5" pos:end="71:12">put_bits</name><argument_list pos:start="71:13" pos:end="71:26">(<argument pos:start="71:14" pos:end="71:19"><expr pos:start="71:14" pos:end="71:19"><operator pos:start="71:14" pos:end="71:14">&amp;</operator><name pos:start="71:15" pos:end="71:19"><name pos:start="71:15" pos:end="71:15">s</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:19">pb</name></name></expr></argument>, <argument pos:start="71:22" pos:end="71:22"><expr pos:start="71:22" pos:end="71:22"><literal type="number" pos:start="71:22" pos:end="71:22">3</literal></expr></argument>, <argument pos:start="71:25" pos:end="71:25"><expr pos:start="71:25" pos:end="71:25"><literal type="number" pos:start="71:25" pos:end="71:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="71:29" pos:end="71:45">/* motion only */</comment>

    

    <comment type="block" pos:start="75:5" pos:end="75:27">/* zero motion x &amp; y */</comment>

    <expr_stmt pos:start="77:5" pos:end="77:27"><expr pos:start="77:5" pos:end="77:26"><call pos:start="77:5" pos:end="77:26"><name pos:start="77:5" pos:end="77:12">put_bits</name><argument_list pos:start="77:13" pos:end="77:26">(<argument pos:start="77:14" pos:end="77:19"><expr pos:start="77:14" pos:end="77:19"><operator pos:start="77:14" pos:end="77:14">&amp;</operator><name pos:start="77:15" pos:end="77:19"><name pos:start="77:15" pos:end="77:15">s</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:19">pb</name></name></expr></argument>, <argument pos:start="77:22" pos:end="77:22"><expr pos:start="77:22" pos:end="77:22"><literal type="number" pos:start="77:22" pos:end="77:22">1</literal></expr></argument>, <argument pos:start="77:25" pos:end="77:25"><expr pos:start="77:25" pos:end="77:25"><literal type="number" pos:start="77:25" pos:end="77:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

    <expr_stmt pos:start="79:5" pos:end="79:27"><expr pos:start="79:5" pos:end="79:26"><call pos:start="79:5" pos:end="79:26"><name pos:start="79:5" pos:end="79:12">put_bits</name><argument_list pos:start="79:13" pos:end="79:26">(<argument pos:start="79:14" pos:end="79:19"><expr pos:start="79:14" pos:end="79:19"><operator pos:start="79:14" pos:end="79:14">&amp;</operator><name pos:start="79:15" pos:end="79:19"><name pos:start="79:15" pos:end="79:15">s</name><operator pos:start="79:16" pos:end="79:17">-&gt;</operator><name pos:start="79:18" pos:end="79:19">pb</name></name></expr></argument>, <argument pos:start="79:22" pos:end="79:22"><expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">1</literal></expr></argument>, <argument pos:start="79:25" pos:end="79:25"><expr pos:start="79:25" pos:end="79:25"><literal type="number" pos:start="79:25" pos:end="79:25">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> 

</block_content>}</block></function>
</unit>
