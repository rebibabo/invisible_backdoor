<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9269.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:5"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">hls_start</name><parameter_list pos:start="1:21" pos:end="1:59">(<parameter pos:start="1:22" pos:end="1:39"><decl pos:start="1:22" pos:end="1:39"><type pos:start="1:22" pos:end="1:39"><name pos:start="1:22" pos:end="1:36">AVFormatContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:39">s</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:58"><decl pos:start="1:42" pos:end="1:58"><type pos:start="1:42" pos:end="1:58"><name pos:start="1:42" pos:end="1:54">VariantStream</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:58">vs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:5">{<block_content pos:start="5:5" pos:end="49:9">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">HLSContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">s</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:34"><decl pos:start="7:5" pos:end="7:33"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">AVFormatContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:23">oc</name> <init pos:start="7:25" pos:end="7:33">= <expr pos:start="7:27" pos:end="7:33"><name pos:start="7:27" pos:end="7:33"><name pos:start="7:27" pos:end="7:28">vs</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:33">avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:42"><decl pos:start="9:5" pos:end="9:41"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">AVFormatContext</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">vtt_oc</name> <init pos:start="9:29" pos:end="9:41">= <expr pos:start="9:31" pos:end="9:41"><name pos:start="9:31" pos:end="9:41"><name pos:start="9:31" pos:end="9:32">vs</name><operator pos:start="9:33" pos:end="9:34">-&gt;</operator><name pos:start="9:35" pos:end="9:41">vtt_avf</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:33"><decl pos:start="11:5" pos:end="11:32"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">AVDictionary</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:25">options</name> <init pos:start="11:27" pos:end="11:32">= <expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:45"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:10"><name pos:start="13:5" pos:end="13:8">char</name> <modifier pos:start="13:10" pos:end="13:10">*</modifier></type><name pos:start="13:11" pos:end="13:18">filename</name></decl>, <decl pos:start="13:21" pos:end="13:44"><type ref="prev" pos:start="13:5" pos:end="13:10"/><name pos:start="13:21" pos:end="13:44"><name pos:start="13:21" pos:end="13:29">iv_string</name><index pos:start="13:30" pos:end="13:44">[<expr pos:start="13:31" pos:end="13:43"><name pos:start="13:31" pos:end="13:37">KEYSIZE</name><operator pos:start="13:38" pos:end="13:38">*</operator><literal type="number" pos:start="13:39" pos:end="13:41">2</literal> <operator pos:start="13:41" pos:end="13:41">+</operator> <literal type="number" pos:start="13:43" pos:end="13:43">1</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">err</name> <init pos:start="15:13" pos:end="15:15">= <expr pos:start="15:15" pos:end="15:15"><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="49:9"><if pos:start="19:5" pos:end="31:5">if <condition pos:start="19:8" pos:end="19:35">(<expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:16">flags</name></name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <name pos:start="19:20" pos:end="19:34">HLS_SINGLE_FILE</name></expr>)</condition> <block pos:start="19:37" pos:end="31:5">{<block_content pos:start="21:9" pos:end="29:44">

        <expr_stmt pos:start="21:9" pos:end="23:41"><expr pos:start="21:9" pos:end="23:40"><call pos:start="21:9" pos:end="23:40"><name pos:start="21:9" pos:end="21:18">av_strlcpy</name><argument_list pos:start="21:19" pos:end="23:40">(<argument pos:start="21:20" pos:end="21:31"><expr pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:31"><name pos:start="21:20" pos:end="21:21">oc</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:31">filename</name></name></expr></argument>, <argument pos:start="21:34" pos:end="21:45"><expr pos:start="21:34" pos:end="21:45"><name pos:start="21:34" pos:end="21:45"><name pos:start="21:34" pos:end="21:35">vs</name><operator pos:start="21:36" pos:end="21:37">-&gt;</operator><name pos:start="21:38" pos:end="21:45">basename</name></name></expr></argument>,

                   <argument pos:start="23:20" pos:end="23:39"><expr pos:start="23:20" pos:end="23:39"><sizeof pos:start="23:20" pos:end="23:39">sizeof<argument_list pos:start="23:26" pos:end="23:39">(<argument pos:start="23:27" pos:end="23:38"><expr pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:38"><name pos:start="23:27" pos:end="23:28">oc</name><operator pos:start="23:29" pos:end="23:30">-&gt;</operator><name pos:start="23:31" pos:end="23:38">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="29:44"><if pos:start="25:9" pos:end="29:44">if <condition pos:start="25:12" pos:end="25:29">(<expr pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:28"><name pos:start="25:13" pos:end="25:14">vs</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:28">vtt_basename</name></name></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="29:44"><block_content pos:start="27:13" pos:end="29:44">

            <expr_stmt pos:start="27:13" pos:end="29:44"><expr pos:start="27:13" pos:end="29:43"><call pos:start="27:13" pos:end="29:43"><name pos:start="27:13" pos:end="27:22">av_strlcpy</name><argument_list pos:start="27:23" pos:end="29:43">(<argument pos:start="27:24" pos:end="27:39"><expr pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:39"><name pos:start="27:24" pos:end="27:29">vtt_oc</name><operator pos:start="27:30" pos:end="27:31">-&gt;</operator><name pos:start="27:32" pos:end="27:39">filename</name></name></expr></argument>, <argument pos:start="27:42" pos:end="27:57"><expr pos:start="27:42" pos:end="27:57"><name pos:start="27:42" pos:end="27:57"><name pos:start="27:42" pos:end="27:43">vs</name><operator pos:start="27:44" pos:end="27:45">-&gt;</operator><name pos:start="27:46" pos:end="27:57">vtt_basename</name></name></expr></argument>,

                  <argument pos:start="29:19" pos:end="29:42"><expr pos:start="29:19" pos:end="29:42"><sizeof pos:start="29:19" pos:end="29:42">sizeof<argument_list pos:start="29:25" pos:end="29:42">(<argument pos:start="29:26" pos:end="29:41"><expr pos:start="29:26" pos:end="29:41"><name pos:start="29:26" pos:end="29:41"><name pos:start="29:26" pos:end="29:31">vtt_oc</name><operator pos:start="29:32" pos:end="29:33">-&gt;</operator><name pos:start="29:34" pos:end="29:41">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="31:7" pos:end="49:9">else if <condition pos:start="31:15" pos:end="31:35">(<expr pos:start="31:16" pos:end="31:34"><name pos:start="31:16" pos:end="31:30"><name pos:start="31:16" pos:end="31:16">c</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:30">max_seg_size</name></name> <operator pos:start="31:32" pos:end="31:32">&gt;</operator> <literal type="number" pos:start="31:34" pos:end="31:34">0</literal></expr>)</condition> <block pos:start="31:37" pos:end="49:9">{<block_content pos:start="33:9" pos:end="41:49">

        <if_stmt pos:start="33:9" pos:end="41:48"><if pos:start="33:9" pos:end="41:48">if <condition pos:start="33:12" pos:end="37:84">(<expr pos:start="33:13" pos:end="37:83"><call pos:start="33:13" pos:end="37:79"><name pos:start="33:13" pos:end="33:40">replace_int_data_in_filename</name><argument_list pos:start="33:41" pos:end="37:79">(<argument pos:start="33:42" pos:end="33:53"><expr pos:start="33:42" pos:end="33:53"><name pos:start="33:42" pos:end="33:53"><name pos:start="33:42" pos:end="33:43">oc</name><operator pos:start="33:44" pos:end="33:45">-&gt;</operator><name pos:start="33:46" pos:end="33:53">filename</name></name></expr></argument>, <argument pos:start="33:56" pos:end="33:75"><expr pos:start="33:56" pos:end="33:75"><sizeof pos:start="33:56" pos:end="33:75">sizeof<argument_list pos:start="33:62" pos:end="33:75">(<argument pos:start="33:63" pos:end="33:74"><expr pos:start="33:63" pos:end="33:74"><name pos:start="33:63" pos:end="33:74"><name pos:start="33:63" pos:end="33:64">oc</name><operator pos:start="33:65" pos:end="33:66">-&gt;</operator><name pos:start="33:67" pos:end="33:74">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

<cpp:if pos:start="35:1" pos:end="35:19">#<cpp:directive pos:start="35:2" pos:end="35:3">if</cpp:directive> <expr pos:start="35:5" pos:end="35:19"><name pos:start="35:5" pos:end="35:19">FF_API_HLS_WRAP</name></expr></cpp:if>

            <argument pos:start="37:13" pos:end="37:24"><expr pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:14">vs</name><operator pos:start="37:15" pos:end="37:16">-&gt;</operator><name pos:start="37:17" pos:end="37:24">basename</name></name></expr></argument>, <argument pos:start="37:27" pos:end="37:29"><expr pos:start="37:27" pos:end="37:29"><literal type="char" pos:start="37:27" pos:end="37:29">'d'</literal></expr></argument>, <argument pos:start="37:32" pos:end="37:78"><expr pos:start="37:32" pos:end="37:78"><ternary pos:start="37:32" pos:end="37:78"><condition pos:start="37:32" pos:end="37:40"><expr pos:start="37:32" pos:end="37:38"><name pos:start="37:32" pos:end="37:38"><name pos:start="37:32" pos:end="37:32">c</name><operator pos:start="37:33" pos:end="37:34">-&gt;</operator><name pos:start="37:35" pos:end="37:38">wrap</name></name></expr> ?</condition><then pos:start="37:42" pos:end="37:63"> <expr pos:start="37:42" pos:end="37:63"><name pos:start="37:42" pos:end="37:53"><name pos:start="37:42" pos:end="37:43">vs</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:53">sequence</name></name> <operator pos:start="37:55" pos:end="37:55">%</operator> <name pos:start="37:57" pos:end="37:63"><name pos:start="37:57" pos:end="37:57">c</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:63">wrap</name></name></expr> </then><else pos:start="37:65" pos:end="37:78">: <expr pos:start="37:67" pos:end="37:78"><name pos:start="37:67" pos:end="37:78"><name pos:start="37:67" pos:end="37:68">vs</name><operator pos:start="37:69" pos:end="37:70">-&gt;</operator><name pos:start="37:71" pos:end="37:78">sequence</name></name></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="37:81" pos:end="37:81">&lt;</operator> <literal type="number" pos:start="37:83" pos:end="37:83">1</literal></expr>)</condition> <block pos:start="37:86" pos:end="41:48">{<block_content pos:start="41:13" pos:end="41:44">

<cpp:else pos:start="39:1" pos:end="39:5">#<cpp:directive pos:start="39:2" pos:end="39:5">else</cpp:directive></cpp:else>

            <expr_stmt pos:start="41:13" pos:end="41:43"><expr pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:14">vs</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:24">basename</name></name></expr><operator pos:start="41:25" pos:end="41:25">,</operator> <expr pos:start="41:27" pos:end="41:29"><literal type="char" pos:start="41:27" pos:end="41:29">'d'</literal></expr><operator pos:start="41:30" pos:end="41:30">,</operator> <expr pos:start="41:32" pos:end="41:43"><name pos:start="41:32" pos:end="41:43"><name pos:start="41:32" pos:end="41:33">vs</name><operator pos:start="41:34" pos:end="41:35">-&gt;</operator><name pos:start="41:36" pos:end="41:43">sequence</name></name></expr></expr_stmt>)</block_content> &lt; 1</block></if></if_stmt>)</block_content> <block pos:start="41:51" pos:end="49:9">{<block_content pos:start="45:17" pos:end="47:39">

<cpp:endif pos:start="43:1" pos:end="43:6">#<cpp:directive pos:start="43:2" pos:end="43:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="45:17" pos:end="45:144"><expr pos:start="45:17" pos:end="45:143"><call pos:start="45:17" pos:end="45:143"><name pos:start="45:17" pos:end="45:22">av_log</name><argument_list pos:start="45:23" pos:end="45:143">(<argument pos:start="45:24" pos:end="45:25"><expr pos:start="45:24" pos:end="45:25"><name pos:start="45:24" pos:end="45:25">oc</name></expr></argument>, <argument pos:start="45:28" pos:end="45:39"><expr pos:start="45:28" pos:end="45:39"><name pos:start="45:28" pos:end="45:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="45:42" pos:end="45:128"><expr pos:start="45:42" pos:end="45:128"><literal type="string" pos:start="45:42" pos:end="45:128">"Invalid segment filename template '%s', you can try to use -use_localtime 1 with it\n"</literal></expr></argument>, <argument pos:start="45:131" pos:end="45:142"><expr pos:start="45:131" pos:end="45:142"><name pos:start="45:131" pos:end="45:142"><name pos:start="45:131" pos:end="45:132">vs</name><operator pos:start="45:133" pos:end="45:134">-&gt;</operator><name pos:start="45:135" pos:end="45:142">basename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="47:17" pos:end="47:39">return <expr pos:start="47:24" pos:end="47:38"><call pos:start="47:24" pos:end="47:38"><name pos:start="47:24" pos:end="47:30">AVERROR</name><argument_list pos:start="47:31" pos:end="47:38">(<argument pos:start="47:32" pos:end="47:37"><expr pos:start="47:32" pos:end="47:37"><name pos:start="47:32" pos:end="47:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></block></if></if_stmt>

    </block_content>}</block></function> <if_stmt pos:start="51:7" pos:end="127:9"><else pos:start="51:7" pos:end="127:9">else <block pos:start="51:12" pos:end="127:9">{<block_content pos:start="53:9" pos:end="119:56">

        <if_stmt pos:start="53:9" pos:end="119:55"><if pos:start="53:9" pos:end="111:9">if <condition pos:start="53:12" pos:end="53:29">(<expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:13">c</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:28">use_localtime</name></name></expr>)</condition> <block pos:start="53:31" pos:end="111:9">{<block_content pos:start="55:13" pos:end="109:13">

            <decl_stmt pos:start="55:13" pos:end="55:24"><decl pos:start="55:13" pos:end="55:23"><type pos:start="55:13" pos:end="55:18"><name pos:start="55:13" pos:end="55:18">time_t</name></type> <name pos:start="55:20" pos:end="55:23">now0</name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:34"><decl pos:start="57:13" pos:end="57:25"><type pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:21"><name pos:start="57:13" pos:end="57:18">struct</name> <name pos:start="57:20" pos:end="57:21">tm</name></name> <modifier pos:start="57:23" pos:end="57:23">*</modifier></type><name pos:start="57:24" pos:end="57:25">tm</name></decl>, <decl pos:start="57:28" pos:end="57:33"><type ref="prev" pos:start="57:13" pos:end="57:23"/><name pos:start="57:28" pos:end="57:33">tmpbuf</name></decl>;</decl_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:24"><expr pos:start="59:13" pos:end="59:23"><call pos:start="59:13" pos:end="59:23"><name pos:start="59:13" pos:end="59:16">time</name><argument_list pos:start="59:17" pos:end="59:23">(<argument pos:start="59:18" pos:end="59:22"><expr pos:start="59:18" pos:end="59:22"><operator pos:start="59:18" pos:end="59:18">&amp;</operator><name pos:start="59:19" pos:end="59:22">now0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:45"><expr pos:start="61:13" pos:end="61:44"><name pos:start="61:13" pos:end="61:14">tm</name> <operator pos:start="61:16" pos:end="61:16">=</operator> <call pos:start="61:18" pos:end="61:44"><name pos:start="61:18" pos:end="61:28">localtime_r</name><argument_list pos:start="61:29" pos:end="61:44">(<argument pos:start="61:30" pos:end="61:34"><expr pos:start="61:30" pos:end="61:34"><operator pos:start="61:30" pos:end="61:30">&amp;</operator><name pos:start="61:31" pos:end="61:34">now0</name></expr></argument>, <argument pos:start="61:37" pos:end="61:43"><expr pos:start="61:37" pos:end="61:43"><operator pos:start="61:37" pos:end="61:37">&amp;</operator><name pos:start="61:38" pos:end="61:43">tmpbuf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="63:13" pos:end="69:13"><if pos:start="63:13" pos:end="69:13">if <condition pos:start="63:16" pos:end="63:80">(<expr pos:start="63:17" pos:end="63:79"><operator pos:start="63:17" pos:end="63:17">!</operator><call pos:start="63:18" pos:end="63:79"><name pos:start="63:18" pos:end="63:25">strftime</name><argument_list pos:start="63:26" pos:end="63:79">(<argument pos:start="63:27" pos:end="63:38"><expr pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:38"><name pos:start="63:27" pos:end="63:28">oc</name><operator pos:start="63:29" pos:end="63:30">-&gt;</operator><name pos:start="63:31" pos:end="63:38">filename</name></name></expr></argument>, <argument pos:start="63:41" pos:end="63:60"><expr pos:start="63:41" pos:end="63:60"><sizeof pos:start="63:41" pos:end="63:60">sizeof<argument_list pos:start="63:47" pos:end="63:60">(<argument pos:start="63:48" pos:end="63:59"><expr pos:start="63:48" pos:end="63:59"><name pos:start="63:48" pos:end="63:59"><name pos:start="63:48" pos:end="63:49">oc</name><operator pos:start="63:50" pos:end="63:51">-&gt;</operator><name pos:start="63:52" pos:end="63:59">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="63:63" pos:end="63:74"><expr pos:start="63:63" pos:end="63:74"><name pos:start="63:63" pos:end="63:74"><name pos:start="63:63" pos:end="63:64">vs</name><operator pos:start="63:65" pos:end="63:66">-&gt;</operator><name pos:start="63:67" pos:end="63:74">basename</name></name></expr></argument>, <argument pos:start="63:77" pos:end="63:78"><expr pos:start="63:77" pos:end="63:78"><name pos:start="63:77" pos:end="63:78">tm</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:82" pos:end="69:13">{<block_content pos:start="65:17" pos:end="67:39">

                <expr_stmt pos:start="65:17" pos:end="65:96"><expr pos:start="65:17" pos:end="65:95"><call pos:start="65:17" pos:end="65:95"><name pos:start="65:17" pos:end="65:22">av_log</name><argument_list pos:start="65:23" pos:end="65:95">(<argument pos:start="65:24" pos:end="65:25"><expr pos:start="65:24" pos:end="65:25"><name pos:start="65:24" pos:end="65:25">oc</name></expr></argument>, <argument pos:start="65:28" pos:end="65:39"><expr pos:start="65:28" pos:end="65:39"><name pos:start="65:28" pos:end="65:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:42" pos:end="65:94"><expr pos:start="65:42" pos:end="65:94"><literal type="string" pos:start="65:42" pos:end="65:94">"Could not get segment filename with use_localtime\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="67:17" pos:end="67:39">return <expr pos:start="67:24" pos:end="67:38"><call pos:start="67:24" pos:end="67:38"><name pos:start="67:24" pos:end="67:30">AVERROR</name><argument_list pos:start="67:31" pos:end="67:38">(<argument pos:start="67:32" pos:end="67:37"><expr pos:start="67:32" pos:end="67:37"><name pos:start="67:32" pos:end="67:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="73:13" pos:end="73:61"><expr pos:start="73:13" pos:end="73:60"><name pos:start="73:13" pos:end="73:15">err</name> <operator pos:start="73:17" pos:end="73:17">=</operator> <call pos:start="73:19" pos:end="73:60"><name pos:start="73:19" pos:end="73:49">sls_flag_use_localtime_filename</name><argument_list pos:start="73:50" pos:end="73:60">(<argument pos:start="73:51" pos:end="73:52"><expr pos:start="73:51" pos:end="73:52"><name pos:start="73:51" pos:end="73:52">oc</name></expr></argument>, <argument pos:start="73:55" pos:end="73:55"><expr pos:start="73:55" pos:end="73:55"><name pos:start="73:55" pos:end="73:55">c</name></expr></argument>, <argument pos:start="73:58" pos:end="73:59"><expr pos:start="73:58" pos:end="73:59"><name pos:start="73:58" pos:end="73:59">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="79:13"><if pos:start="75:13" pos:end="79:13">if <condition pos:start="75:16" pos:end="75:24">(<expr pos:start="75:17" pos:end="75:23"><name pos:start="75:17" pos:end="75:19">err</name> <operator pos:start="75:21" pos:end="75:21">&lt;</operator> <literal type="number" pos:start="75:23" pos:end="75:23">0</literal></expr>)</condition> <block pos:start="75:26" pos:end="79:13">{<block_content pos:start="77:17" pos:end="77:39">

                <return pos:start="77:17" pos:end="77:39">return <expr pos:start="77:24" pos:end="77:38"><call pos:start="77:24" pos:end="77:38"><name pos:start="77:24" pos:end="77:30">AVERROR</name><argument_list pos:start="77:31" pos:end="77:38">(<argument pos:start="77:32" pos:end="77:37"><expr pos:start="77:32" pos:end="77:37"><name pos:start="77:32" pos:end="77:37">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="83:13" pos:end="109:13"><if pos:start="83:13" pos:end="109:13">if <condition pos:start="83:16" pos:end="83:39">(<expr pos:start="83:17" pos:end="83:38"><name pos:start="83:17" pos:end="83:38"><name pos:start="83:17" pos:end="83:17">c</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:38">use_localtime_mkdir</name></name></expr>)</condition> <block pos:start="83:41" pos:end="109:13">{<block_content pos:start="85:17" pos:end="107:33">

                <decl_stmt pos:start="85:17" pos:end="85:32"><decl pos:start="85:17" pos:end="85:31"><type pos:start="85:17" pos:end="85:28"><specifier pos:start="85:17" pos:end="85:21">const</specifier> <name pos:start="85:23" pos:end="85:26">char</name> <modifier pos:start="85:28" pos:end="85:28">*</modifier></type><name pos:start="85:29" pos:end="85:31">dir</name></decl>;</decl_stmt>

                <decl_stmt pos:start="87:17" pos:end="87:56"><decl pos:start="87:17" pos:end="87:55"><type pos:start="87:17" pos:end="87:22"><name pos:start="87:17" pos:end="87:20">char</name> <modifier pos:start="87:22" pos:end="87:22">*</modifier></type><name pos:start="87:23" pos:end="87:29">fn_copy</name> <init pos:start="87:31" pos:end="87:55">= <expr pos:start="87:33" pos:end="87:55"><call pos:start="87:33" pos:end="87:55"><name pos:start="87:33" pos:end="87:41">av_strdup</name><argument_list pos:start="87:42" pos:end="87:55">(<argument pos:start="87:43" pos:end="87:54"><expr pos:start="87:43" pos:end="87:54"><name pos:start="87:43" pos:end="87:54"><name pos:start="87:43" pos:end="87:44">oc</name><operator pos:start="87:45" pos:end="87:46">-&gt;</operator><name pos:start="87:47" pos:end="87:54">filename</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="89:17" pos:end="93:17"><if pos:start="89:17" pos:end="93:17">if <condition pos:start="89:20" pos:end="89:29">(<expr pos:start="89:21" pos:end="89:28"><operator pos:start="89:21" pos:end="89:21">!</operator><name pos:start="89:22" pos:end="89:28">fn_copy</name></expr>)</condition> <block pos:start="89:31" pos:end="93:17">{<block_content pos:start="91:21" pos:end="91:43">

                    <return pos:start="91:21" pos:end="91:43">return <expr pos:start="91:28" pos:end="91:42"><call pos:start="91:28" pos:end="91:42"><name pos:start="91:28" pos:end="91:34">AVERROR</name><argument_list pos:start="91:35" pos:end="91:42">(<argument pos:start="91:36" pos:end="91:41"><expr pos:start="91:36" pos:end="91:41"><name pos:start="91:36" pos:end="91:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:42"><expr pos:start="95:17" pos:end="95:41"><name pos:start="95:17" pos:end="95:19">dir</name> <operator pos:start="95:21" pos:end="95:21">=</operator> <call pos:start="95:23" pos:end="95:41"><name pos:start="95:23" pos:end="95:32">av_dirname</name><argument_list pos:start="95:33" pos:end="95:41">(<argument pos:start="95:34" pos:end="95:40"><expr pos:start="95:34" pos:end="95:40"><name pos:start="95:34" pos:end="95:40">fn_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="97:17" pos:end="105:17"><if pos:start="97:17" pos:end="105:17">if <condition pos:start="97:20" pos:end="97:58">(<expr pos:start="97:21" pos:end="97:57"><call pos:start="97:21" pos:end="97:32"><name pos:start="97:21" pos:end="97:27">mkdir_p</name><argument_list pos:start="97:28" pos:end="97:32">(<argument pos:start="97:29" pos:end="97:31"><expr pos:start="97:29" pos:end="97:31"><name pos:start="97:29" pos:end="97:31">dir</name></expr></argument>)</argument_list></call> <operator pos:start="97:34" pos:end="97:35">==</operator> <operator pos:start="97:37" pos:end="97:37">-</operator><literal type="number" pos:start="97:38" pos:end="97:38">1</literal> <operator pos:start="97:40" pos:end="97:41">&amp;&amp;</operator> <name pos:start="97:43" pos:end="97:47">errno</name> <operator pos:start="97:49" pos:end="97:50">!=</operator> <name pos:start="97:52" pos:end="97:57">EEXIST</name></expr>)</condition> <block pos:start="97:60" pos:end="105:17">{<block_content pos:start="99:21" pos:end="103:42">

                    <expr_stmt pos:start="99:21" pos:end="99:110"><expr pos:start="99:21" pos:end="99:109"><call pos:start="99:21" pos:end="99:109"><name pos:start="99:21" pos:end="99:26">av_log</name><argument_list pos:start="99:27" pos:end="99:109">(<argument pos:start="99:28" pos:end="99:29"><expr pos:start="99:28" pos:end="99:29"><name pos:start="99:28" pos:end="99:29">oc</name></expr></argument>, <argument pos:start="99:32" pos:end="99:43"><expr pos:start="99:32" pos:end="99:43"><name pos:start="99:32" pos:end="99:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="99:46" pos:end="99:103"><expr pos:start="99:46" pos:end="99:103"><literal type="string" pos:start="99:46" pos:end="99:103">"Could not create directory %s with use_localtime_mkdir\n"</literal></expr></argument>, <argument pos:start="99:106" pos:end="99:108"><expr pos:start="99:106" pos:end="99:108"><name pos:start="99:106" pos:end="99:108">dir</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="101:21" pos:end="101:37"><expr pos:start="101:21" pos:end="101:36"><call pos:start="101:21" pos:end="101:36"><name pos:start="101:21" pos:end="101:27">av_free</name><argument_list pos:start="101:28" pos:end="101:36">(<argument pos:start="101:29" pos:end="101:35"><expr pos:start="101:29" pos:end="101:35"><name pos:start="101:29" pos:end="101:35">fn_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="103:21" pos:end="103:42">return <expr pos:start="103:28" pos:end="103:41"><call pos:start="103:28" pos:end="103:41"><name pos:start="103:28" pos:end="103:34">AVERROR</name><argument_list pos:start="103:35" pos:end="103:41">(<argument pos:start="103:36" pos:end="103:40"><expr pos:start="103:36" pos:end="103:40"><name pos:start="103:36" pos:end="103:40">errno</name></expr></argument>)</argument_list></call></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:33"><expr pos:start="107:17" pos:end="107:32"><call pos:start="107:17" pos:end="107:32"><name pos:start="107:17" pos:end="107:23">av_free</name><argument_list pos:start="107:24" pos:end="107:32">(<argument pos:start="107:25" pos:end="107:31"><expr pos:start="107:25" pos:end="107:31"><name pos:start="107:25" pos:end="107:31">fn_copy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="111:11" pos:end="119:55">else if <condition pos:start="111:19" pos:end="115:91">(<expr pos:start="111:20" pos:end="115:90"><call pos:start="111:20" pos:end="115:86"><name pos:start="111:20" pos:end="111:47">replace_int_data_in_filename</name><argument_list pos:start="111:48" pos:end="115:86">(<argument pos:start="111:49" pos:end="111:60"><expr pos:start="111:49" pos:end="111:60"><name pos:start="111:49" pos:end="111:60"><name pos:start="111:49" pos:end="111:50">oc</name><operator pos:start="111:51" pos:end="111:52">-&gt;</operator><name pos:start="111:53" pos:end="111:60">filename</name></name></expr></argument>, <argument pos:start="111:63" pos:end="111:82"><expr pos:start="111:63" pos:end="111:82"><sizeof pos:start="111:63" pos:end="111:82">sizeof<argument_list pos:start="111:69" pos:end="111:82">(<argument pos:start="111:70" pos:end="111:81"><expr pos:start="111:70" pos:end="111:81"><name pos:start="111:70" pos:end="111:81"><name pos:start="111:70" pos:end="111:71">oc</name><operator pos:start="111:72" pos:end="111:73">-&gt;</operator><name pos:start="111:74" pos:end="111:81">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

<cpp:if pos:start="113:1" pos:end="113:19">#<cpp:directive pos:start="113:2" pos:end="113:3">if</cpp:directive> <expr pos:start="113:5" pos:end="113:19"><name pos:start="113:5" pos:end="113:19">FF_API_HLS_WRAP</name></expr></cpp:if>

                   <argument pos:start="115:20" pos:end="115:31"><expr pos:start="115:20" pos:end="115:31"><name pos:start="115:20" pos:end="115:31"><name pos:start="115:20" pos:end="115:21">vs</name><operator pos:start="115:22" pos:end="115:23">-&gt;</operator><name pos:start="115:24" pos:end="115:31">basename</name></name></expr></argument>, <argument pos:start="115:34" pos:end="115:36"><expr pos:start="115:34" pos:end="115:36"><literal type="char" pos:start="115:34" pos:end="115:36">'d'</literal></expr></argument>, <argument pos:start="115:39" pos:end="115:85"><expr pos:start="115:39" pos:end="115:85"><ternary pos:start="115:39" pos:end="115:85"><condition pos:start="115:39" pos:end="115:47"><expr pos:start="115:39" pos:end="115:45"><name pos:start="115:39" pos:end="115:45"><name pos:start="115:39" pos:end="115:39">c</name><operator pos:start="115:40" pos:end="115:41">-&gt;</operator><name pos:start="115:42" pos:end="115:45">wrap</name></name></expr> ?</condition><then pos:start="115:49" pos:end="115:70"> <expr pos:start="115:49" pos:end="115:70"><name pos:start="115:49" pos:end="115:60"><name pos:start="115:49" pos:end="115:50">vs</name><operator pos:start="115:51" pos:end="115:52">-&gt;</operator><name pos:start="115:53" pos:end="115:60">sequence</name></name> <operator pos:start="115:62" pos:end="115:62">%</operator> <name pos:start="115:64" pos:end="115:70"><name pos:start="115:64" pos:end="115:64">c</name><operator pos:start="115:65" pos:end="115:66">-&gt;</operator><name pos:start="115:67" pos:end="115:70">wrap</name></name></expr> </then><else pos:start="115:72" pos:end="115:85">: <expr pos:start="115:74" pos:end="115:85"><name pos:start="115:74" pos:end="115:85"><name pos:start="115:74" pos:end="115:75">vs</name><operator pos:start="115:76" pos:end="115:77">-&gt;</operator><name pos:start="115:78" pos:end="115:85">sequence</name></name></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="115:88" pos:end="115:88">&lt;</operator> <literal type="number" pos:start="115:90" pos:end="115:90">1</literal></expr>)</condition> <block pos:start="115:93" pos:end="119:55">{<block_content pos:start="119:20" pos:end="119:51">

<cpp:else pos:start="117:1" pos:end="117:5">#<cpp:directive pos:start="117:2" pos:end="117:5">else</cpp:directive></cpp:else>

                   <expr_stmt pos:start="119:20" pos:end="119:50"><expr pos:start="119:20" pos:end="119:31"><name pos:start="119:20" pos:end="119:31"><name pos:start="119:20" pos:end="119:21">vs</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:31">basename</name></name></expr><operator pos:start="119:32" pos:end="119:32">,</operator> <expr pos:start="119:34" pos:end="119:36"><literal type="char" pos:start="119:34" pos:end="119:36">'d'</literal></expr><operator pos:start="119:37" pos:end="119:37">,</operator> <expr pos:start="119:39" pos:end="119:50"><name pos:start="119:39" pos:end="119:50"><name pos:start="119:39" pos:end="119:40">vs</name><operator pos:start="119:41" pos:end="119:42">-&gt;</operator><name pos:start="119:43" pos:end="119:50">sequence</name></name></expr></expr_stmt>)</block_content> &lt; 1</block></if></if_stmt>)</block_content> <block pos:start="119:58" pos:end="127:9">{<block_content pos:start="123:13" pos:end="125:35">

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

            <expr_stmt pos:start="123:13" pos:end="123:139"><expr pos:start="123:13" pos:end="123:138"><call pos:start="123:13" pos:end="123:138"><name pos:start="123:13" pos:end="123:18">av_log</name><argument_list pos:start="123:19" pos:end="123:138">(<argument pos:start="123:20" pos:end="123:21"><expr pos:start="123:20" pos:end="123:21"><name pos:start="123:20" pos:end="123:21">oc</name></expr></argument>, <argument pos:start="123:24" pos:end="123:35"><expr pos:start="123:24" pos:end="123:35"><name pos:start="123:24" pos:end="123:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="123:38" pos:end="123:123"><expr pos:start="123:38" pos:end="123:123"><literal type="string" pos:start="123:38" pos:end="123:123">"Invalid segment filename template '%s' you can try to use -use_localtime 1 with it\n"</literal></expr></argument>, <argument pos:start="123:126" pos:end="123:137"><expr pos:start="123:126" pos:end="123:137"><name pos:start="123:126" pos:end="123:137"><name pos:start="123:126" pos:end="123:127">vs</name><operator pos:start="123:128" pos:end="123:129">-&gt;</operator><name pos:start="123:130" pos:end="123:137">basename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="125:13" pos:end="125:35">return <expr pos:start="125:20" pos:end="125:34"><call pos:start="125:20" pos:end="125:34"><name pos:start="125:20" pos:end="125:26">AVERROR</name><argument_list pos:start="125:27" pos:end="125:34">(<argument pos:start="125:28" pos:end="125:33"><expr pos:start="125:28" pos:end="125:33"><name pos:start="125:28" pos:end="125:33">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></block></else></if_stmt>

        <if_stmt pos:start="129:9" pos:end="147:13"><if pos:start="129:9" pos:end="147:13">if<condition pos:start="129:11" pos:end="129:29">( <expr pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:28"><name pos:start="129:13" pos:end="129:14">vs</name><operator pos:start="129:15" pos:end="129:16">-&gt;</operator><name pos:start="129:17" pos:end="129:28">vtt_basename</name></name></expr>)</condition> <block pos:start="129:31" pos:end="147:13">{<block_content pos:start="131:13" pos:end="139:57">

            <if_stmt pos:start="131:13" pos:end="139:56"><if pos:start="131:13" pos:end="139:56">if <condition pos:start="131:16" pos:end="135:92">(<expr pos:start="131:17" pos:end="135:91"><call pos:start="131:17" pos:end="135:87"><name pos:start="131:17" pos:end="131:44">replace_int_data_in_filename</name><argument_list pos:start="131:45" pos:end="135:87">(<argument pos:start="131:46" pos:end="131:61"><expr pos:start="131:46" pos:end="131:61"><name pos:start="131:46" pos:end="131:61"><name pos:start="131:46" pos:end="131:51">vtt_oc</name><operator pos:start="131:52" pos:end="131:53">-&gt;</operator><name pos:start="131:54" pos:end="131:61">filename</name></name></expr></argument>, <argument pos:start="131:64" pos:end="131:87"><expr pos:start="131:64" pos:end="131:87"><sizeof pos:start="131:64" pos:end="131:87">sizeof<argument_list pos:start="131:70" pos:end="131:87">(<argument pos:start="131:71" pos:end="131:86"><expr pos:start="131:71" pos:end="131:86"><name pos:start="131:71" pos:end="131:86"><name pos:start="131:71" pos:end="131:76">vtt_oc</name><operator pos:start="131:77" pos:end="131:78">-&gt;</operator><name pos:start="131:79" pos:end="131:86">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>,

<cpp:if pos:start="133:1" pos:end="133:19">#<cpp:directive pos:start="133:2" pos:end="133:3">if</cpp:directive> <expr pos:start="133:5" pos:end="133:19"><name pos:start="133:5" pos:end="133:19">FF_API_HLS_WRAP</name></expr></cpp:if>

                <argument pos:start="135:17" pos:end="135:32"><expr pos:start="135:17" pos:end="135:32"><name pos:start="135:17" pos:end="135:32"><name pos:start="135:17" pos:end="135:18">vs</name><operator pos:start="135:19" pos:end="135:20">-&gt;</operator><name pos:start="135:21" pos:end="135:32">vtt_basename</name></name></expr></argument>, <argument pos:start="135:35" pos:end="135:37"><expr pos:start="135:35" pos:end="135:37"><literal type="char" pos:start="135:35" pos:end="135:37">'d'</literal></expr></argument>, <argument pos:start="135:40" pos:end="135:86"><expr pos:start="135:40" pos:end="135:86"><ternary pos:start="135:40" pos:end="135:86"><condition pos:start="135:40" pos:end="135:48"><expr pos:start="135:40" pos:end="135:46"><name pos:start="135:40" pos:end="135:46"><name pos:start="135:40" pos:end="135:40">c</name><operator pos:start="135:41" pos:end="135:42">-&gt;</operator><name pos:start="135:43" pos:end="135:46">wrap</name></name></expr> ?</condition><then pos:start="135:50" pos:end="135:71"> <expr pos:start="135:50" pos:end="135:71"><name pos:start="135:50" pos:end="135:61"><name pos:start="135:50" pos:end="135:51">vs</name><operator pos:start="135:52" pos:end="135:53">-&gt;</operator><name pos:start="135:54" pos:end="135:61">sequence</name></name> <operator pos:start="135:63" pos:end="135:63">%</operator> <name pos:start="135:65" pos:end="135:71"><name pos:start="135:65" pos:end="135:65">c</name><operator pos:start="135:66" pos:end="135:67">-&gt;</operator><name pos:start="135:68" pos:end="135:71">wrap</name></name></expr> </then><else pos:start="135:73" pos:end="135:86">: <expr pos:start="135:75" pos:end="135:86"><name pos:start="135:75" pos:end="135:86"><name pos:start="135:75" pos:end="135:76">vs</name><operator pos:start="135:77" pos:end="135:78">-&gt;</operator><name pos:start="135:79" pos:end="135:86">sequence</name></name></expr></else></ternary></expr></argument>)</argument_list></call> <operator pos:start="135:89" pos:end="135:89">&lt;</operator> <literal type="number" pos:start="135:91" pos:end="135:91">1</literal></expr>)</condition> <block pos:start="135:94" pos:end="139:56">{<block_content pos:start="139:17" pos:end="139:52">

<cpp:else pos:start="137:1" pos:end="137:5">#<cpp:directive pos:start="137:2" pos:end="137:5">else</cpp:directive></cpp:else>

                <expr_stmt pos:start="139:17" pos:end="139:51"><expr pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:18">vs</name><operator pos:start="139:19" pos:end="139:20">-&gt;</operator><name pos:start="139:21" pos:end="139:32">vtt_basename</name></name></expr><operator pos:start="139:33" pos:end="139:33">,</operator> <expr pos:start="139:35" pos:end="139:37"><literal type="char" pos:start="139:35" pos:end="139:37">'d'</literal></expr><operator pos:start="139:38" pos:end="139:38">,</operator> <expr pos:start="139:40" pos:end="139:51"><name pos:start="139:40" pos:end="139:51"><name pos:start="139:40" pos:end="139:41">vs</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:51">sequence</name></name></expr></expr_stmt>)</block_content> &lt; 1</block></if></if_stmt>)</block_content> <block pos:start="139:59" pos:end="147:13">{<block_content pos:start="143:17" pos:end="145:39">

<cpp:endif pos:start="141:1" pos:end="141:6">#<cpp:directive pos:start="141:2" pos:end="141:6">endif</cpp:directive></cpp:endif>

                <expr_stmt pos:start="143:17" pos:end="143:107"><expr pos:start="143:17" pos:end="143:106"><call pos:start="143:17" pos:end="143:106"><name pos:start="143:17" pos:end="143:22">av_log</name><argument_list pos:start="143:23" pos:end="143:106">(<argument pos:start="143:24" pos:end="143:29"><expr pos:start="143:24" pos:end="143:29"><name pos:start="143:24" pos:end="143:29">vtt_oc</name></expr></argument>, <argument pos:start="143:32" pos:end="143:43"><expr pos:start="143:32" pos:end="143:43"><name pos:start="143:32" pos:end="143:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="143:46" pos:end="143:87"><expr pos:start="143:46" pos:end="143:87"><literal type="string" pos:start="143:46" pos:end="143:87">"Invalid segment filename template '%s'\n"</literal></expr></argument>, <argument pos:start="143:90" pos:end="143:105"><expr pos:start="143:90" pos:end="143:105"><name pos:start="143:90" pos:end="143:105"><name pos:start="143:90" pos:end="143:91">vs</name><operator pos:start="143:92" pos:end="143:93">-&gt;</operator><name pos:start="143:94" pos:end="143:105">vtt_basename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="145:17" pos:end="145:39">return <expr pos:start="145:24" pos:end="145:38"><call pos:start="145:24" pos:end="145:38"><name pos:start="145:24" pos:end="145:30">AVERROR</name><argument_list pos:start="145:31" pos:end="145:38">(<argument pos:start="145:32" pos:end="145:37"><expr pos:start="145:32" pos:end="145:37"><name pos:start="145:32" pos:end="145:37">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></block></if></if_stmt>

       }

    }

    <expr_stmt pos:start="153:5" pos:end="153:17"><expr pos:start="153:5" pos:end="153:16"><name pos:start="153:5" pos:end="153:14"><name pos:start="153:5" pos:end="153:6">vs</name><operator pos:start="153:7" pos:end="153:8">-&gt;</operator><name pos:start="153:9" pos:end="153:14">number</name></name><operator pos:start="153:15" pos:end="153:16">++</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="157:5" pos:end="157:37"><expr pos:start="157:5" pos:end="157:36"><call pos:start="157:5" pos:end="157:36"><name pos:start="157:5" pos:end="157:20">set_http_options</name><argument_list pos:start="157:21" pos:end="157:36">(<argument pos:start="157:22" pos:end="157:22"><expr pos:start="157:22" pos:end="157:22"><name pos:start="157:22" pos:end="157:22">s</name></expr></argument>, <argument pos:start="157:25" pos:end="157:32"><expr pos:start="157:25" pos:end="157:32"><operator pos:start="157:25" pos:end="157:25">&amp;</operator><name pos:start="157:26" pos:end="157:32">options</name></expr></argument>, <argument pos:start="157:35" pos:end="157:35"><expr pos:start="157:35" pos:end="157:35"><name pos:start="157:35" pos:end="157:35">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="161:5" pos:end="165:5"><if pos:start="161:5" pos:end="165:5">if <condition pos:start="161:8" pos:end="161:33">(<expr pos:start="161:9" pos:end="161:32"><name pos:start="161:9" pos:end="161:16"><name pos:start="161:9" pos:end="161:9">c</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:16">flags</name></name> <operator pos:start="161:18" pos:end="161:18">&amp;</operator> <name pos:start="161:20" pos:end="161:32">HLS_TEMP_FILE</name></expr>)</condition> <block pos:start="161:35" pos:end="165:5">{<block_content pos:start="163:9" pos:end="163:63">

        <expr_stmt pos:start="163:9" pos:end="163:63"><expr pos:start="163:9" pos:end="163:62"><call pos:start="163:9" pos:end="163:62"><name pos:start="163:9" pos:end="163:18">av_strlcat</name><argument_list pos:start="163:19" pos:end="163:62">(<argument pos:start="163:20" pos:end="163:31"><expr pos:start="163:20" pos:end="163:31"><name pos:start="163:20" pos:end="163:31"><name pos:start="163:20" pos:end="163:21">oc</name><operator pos:start="163:22" pos:end="163:23">-&gt;</operator><name pos:start="163:24" pos:end="163:31">filename</name></name></expr></argument>, <argument pos:start="163:34" pos:end="163:39"><expr pos:start="163:34" pos:end="163:39"><literal type="string" pos:start="163:34" pos:end="163:39">".tmp"</literal></expr></argument>, <argument pos:start="163:42" pos:end="163:61"><expr pos:start="163:42" pos:end="163:61"><sizeof pos:start="163:42" pos:end="163:61">sizeof<argument_list pos:start="163:48" pos:end="163:61">(<argument pos:start="163:49" pos:end="163:60"><expr pos:start="163:49" pos:end="163:60"><name pos:start="163:49" pos:end="163:60"><name pos:start="163:49" pos:end="163:50">oc</name><operator pos:start="163:51" pos:end="163:52">-&gt;</operator><name pos:start="163:53" pos:end="163:60">filename</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="169:5" pos:end="245:5"><if pos:start="169:5" pos:end="239:5">if <condition pos:start="169:8" pos:end="169:39">(<expr pos:start="169:9" pos:end="169:38"><name pos:start="169:9" pos:end="169:24"><name pos:start="169:9" pos:end="169:9">c</name><operator pos:start="169:10" pos:end="169:11">-&gt;</operator><name pos:start="169:12" pos:end="169:24">key_info_file</name></name> <operator pos:start="169:26" pos:end="169:27">||</operator> <name pos:start="169:29" pos:end="169:38"><name pos:start="169:29" pos:end="169:29">c</name><operator pos:start="169:30" pos:end="169:31">-&gt;</operator><name pos:start="169:32" pos:end="169:38">encrypt</name></name></expr>)</condition> <block pos:start="169:41" pos:end="239:5">{<block_content pos:start="171:9" pos:end="237:23">

        <if_stmt pos:start="171:9" pos:end="177:9"><if pos:start="171:9" pos:end="177:9">if <condition pos:start="171:12" pos:end="171:43">(<expr pos:start="171:13" pos:end="171:42"><name pos:start="171:13" pos:end="171:28"><name pos:start="171:13" pos:end="171:13">c</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:28">key_info_file</name></name> <operator pos:start="171:30" pos:end="171:31">&amp;&amp;</operator> <name pos:start="171:33" pos:end="171:42"><name pos:start="171:33" pos:end="171:33">c</name><operator pos:start="171:34" pos:end="171:35">-&gt;</operator><name pos:start="171:36" pos:end="171:42">encrypt</name></name></expr>)</condition> <block pos:start="171:45" pos:end="177:9">{<block_content pos:start="173:13" pos:end="175:61">

            <expr_stmt pos:start="173:13" pos:end="175:61"><expr pos:start="173:13" pos:end="175:60"><call pos:start="173:13" pos:end="175:60"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="175:60">(<argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><name pos:start="173:20" pos:end="173:20">s</name></expr></argument>, <argument pos:start="173:23" pos:end="173:36"><expr pos:start="173:23" pos:end="173:36"><name pos:start="173:23" pos:end="173:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="173:39" pos:end="175:59"><expr pos:start="173:39" pos:end="175:59"><literal type="string" pos:start="173:39" pos:end="173:88">"Cannot use both -hls_key_info_file and -hls_enc,"</literal>

                  <literal type="string" pos:start="175:19" pos:end="175:59">" will use -hls_key_info_file priority\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="181:9" pos:end="199:9"><if pos:start="181:9" pos:end="199:9">if <condition pos:start="181:12" pos:end="181:67">(<expr pos:start="181:13" pos:end="181:66"><operator pos:start="181:13" pos:end="181:13">!</operator><name pos:start="181:14" pos:end="181:31"><name pos:start="181:14" pos:end="181:14">c</name><operator pos:start="181:15" pos:end="181:16">-&gt;</operator><name pos:start="181:17" pos:end="181:31">encrypt_started</name></name> <operator pos:start="181:33" pos:end="181:34">||</operator> <operator pos:start="181:36" pos:end="181:36">(</operator><name pos:start="181:37" pos:end="181:44"><name pos:start="181:37" pos:end="181:37">c</name><operator pos:start="181:38" pos:end="181:39">-&gt;</operator><name pos:start="181:40" pos:end="181:44">flags</name></name> <operator pos:start="181:46" pos:end="181:46">&amp;</operator> <name pos:start="181:48" pos:end="181:65">HLS_PERIODIC_REKEY</name><operator pos:start="181:66" pos:end="181:66">)</operator></expr>)</condition> <block pos:start="181:69" pos:end="199:9">{<block_content pos:start="183:13" pos:end="197:35">

            <if_stmt pos:start="183:13" pos:end="195:13"><if pos:start="183:13" pos:end="189:13">if <condition pos:start="183:16" pos:end="183:33">(<expr pos:start="183:17" pos:end="183:32"><name pos:start="183:17" pos:end="183:32"><name pos:start="183:17" pos:end="183:17">c</name><operator pos:start="183:18" pos:end="183:19">-&gt;</operator><name pos:start="183:20" pos:end="183:32">key_info_file</name></name></expr>)</condition> <block pos:start="183:35" pos:end="189:13">{<block_content pos:start="185:17" pos:end="187:30">

                <if_stmt pos:start="185:17" pos:end="187:30"><if pos:start="185:17" pos:end="187:30">if <condition pos:start="185:20" pos:end="185:56">(<expr pos:start="185:21" pos:end="185:55"><operator pos:start="185:21" pos:end="185:21">(</operator><name pos:start="185:22" pos:end="185:24">err</name> <operator pos:start="185:26" pos:end="185:26">=</operator> <call pos:start="185:28" pos:end="185:50"><name pos:start="185:28" pos:end="185:47">hls_encryption_start</name><argument_list pos:start="185:48" pos:end="185:50">(<argument pos:start="185:49" pos:end="185:49"><expr pos:start="185:49" pos:end="185:49"><name pos:start="185:49" pos:end="185:49">s</name></expr></argument>)</argument_list></call><operator pos:start="185:51" pos:end="185:51">)</operator> <operator pos:start="185:53" pos:end="185:53">&lt;</operator> <literal type="number" pos:start="185:55" pos:end="185:55">0</literal></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:30"><block_content pos:start="187:21" pos:end="187:30">

                    <goto pos:start="187:21" pos:end="187:30">goto <name pos:start="187:26" pos:end="187:29">fail</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="189:15" pos:end="195:13">else <block pos:start="189:20" pos:end="195:13">{<block_content pos:start="191:17" pos:end="193:30">

                <if_stmt pos:start="191:17" pos:end="193:30"><if pos:start="191:17" pos:end="193:30">if <condition pos:start="191:20" pos:end="191:50">(<expr pos:start="191:21" pos:end="191:49"><operator pos:start="191:21" pos:end="191:21">(</operator><name pos:start="191:22" pos:end="191:24">err</name> <operator pos:start="191:26" pos:end="191:26">=</operator> <call pos:start="191:28" pos:end="191:44"><name pos:start="191:28" pos:end="191:37">do_encrypt</name><argument_list pos:start="191:38" pos:end="191:44">(<argument pos:start="191:39" pos:end="191:39"><expr pos:start="191:39" pos:end="191:39"><name pos:start="191:39" pos:end="191:39">s</name></expr></argument>, <argument pos:start="191:42" pos:end="191:43"><expr pos:start="191:42" pos:end="191:43"><name pos:start="191:42" pos:end="191:43">vs</name></expr></argument>)</argument_list></call><operator pos:start="191:45" pos:end="191:45">)</operator> <operator pos:start="191:47" pos:end="191:47">&lt;</operator> <literal type="number" pos:start="191:49" pos:end="191:49">0</literal></expr>)</condition><block type="pseudo" pos:start="193:21" pos:end="193:30"><block_content pos:start="193:21" pos:end="193:30">

                    <goto pos:start="193:21" pos:end="193:30">goto <name pos:start="193:26" pos:end="193:29">fail</name>;</goto></block_content></block></if></if_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="197:13" pos:end="197:35"><expr pos:start="197:13" pos:end="197:34"><name pos:start="197:13" pos:end="197:30"><name pos:start="197:13" pos:end="197:13">c</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:30">encrypt_started</name></name> <operator pos:start="197:32" pos:end="197:32">=</operator> <literal type="number" pos:start="197:34" pos:end="197:34">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="201:9" pos:end="205:22"><if pos:start="201:9" pos:end="205:22">if <condition pos:start="201:12" pos:end="203:20">(<expr pos:start="201:13" pos:end="203:19"><operator pos:start="201:13" pos:end="201:13">(</operator><name pos:start="201:14" pos:end="201:16">err</name> <operator pos:start="201:18" pos:end="201:18">=</operator> <call pos:start="201:20" pos:end="201:76"><name pos:start="201:20" pos:end="201:30">av_dict_set</name><argument_list pos:start="201:31" pos:end="201:76">(<argument pos:start="201:32" pos:end="201:39"><expr pos:start="201:32" pos:end="201:39"><operator pos:start="201:32" pos:end="201:32">&amp;</operator><name pos:start="201:33" pos:end="201:39">options</name></expr></argument>, <argument pos:start="201:42" pos:end="201:57"><expr pos:start="201:42" pos:end="201:57"><literal type="string" pos:start="201:42" pos:end="201:57">"encryption_key"</literal></expr></argument>, <argument pos:start="201:60" pos:end="201:72"><expr pos:start="201:60" pos:end="201:72"><name pos:start="201:60" pos:end="201:72"><name pos:start="201:60" pos:end="201:60">c</name><operator pos:start="201:61" pos:end="201:62">-&gt;</operator><name pos:start="201:63" pos:end="201:72">key_string</name></name></expr></argument>, <argument pos:start="201:75" pos:end="201:75"><expr pos:start="201:75" pos:end="201:75"><literal type="number" pos:start="201:75" pos:end="201:75">0</literal></expr></argument>)</argument_list></call><operator pos:start="201:77" pos:end="201:77">)</operator>

                <operator pos:start="203:17" pos:end="203:17">&lt;</operator> <literal type="number" pos:start="203:19" pos:end="203:19">0</literal></expr>)</condition><block type="pseudo" pos:start="205:13" pos:end="205:22"><block_content pos:start="205:13" pos:end="205:22">

            <goto pos:start="205:13" pos:end="205:22">goto <name pos:start="205:18" pos:end="205:21">fail</name>;</goto></block_content></block></if></if_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:69"><expr pos:start="207:9" pos:end="207:68"><name pos:start="207:9" pos:end="207:11">err</name> <operator pos:start="207:13" pos:end="207:13">=</operator> <call pos:start="207:15" pos:end="207:68"><name pos:start="207:15" pos:end="207:24">av_strlcpy</name><argument_list pos:start="207:25" pos:end="207:68">(<argument pos:start="207:26" pos:end="207:34"><expr pos:start="207:26" pos:end="207:34"><name pos:start="207:26" pos:end="207:34">iv_string</name></expr></argument>, <argument pos:start="207:37" pos:end="207:48"><expr pos:start="207:37" pos:end="207:48"><name pos:start="207:37" pos:end="207:48"><name pos:start="207:37" pos:end="207:37">c</name><operator pos:start="207:38" pos:end="207:39">-&gt;</operator><name pos:start="207:40" pos:end="207:48">iv_string</name></name></expr></argument>, <argument pos:start="207:51" pos:end="207:67"><expr pos:start="207:51" pos:end="207:67"><sizeof pos:start="207:51" pos:end="207:67">sizeof<argument_list pos:start="207:57" pos:end="207:67">(<argument pos:start="207:58" pos:end="207:66"><expr pos:start="207:58" pos:end="207:66"><name pos:start="207:58" pos:end="207:66">iv_string</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="209:9" pos:end="211:79"><if pos:start="209:9" pos:end="211:79">if <condition pos:start="209:12" pos:end="209:17">(<expr pos:start="209:13" pos:end="209:16"><operator pos:start="209:13" pos:end="209:13">!</operator><name pos:start="209:14" pos:end="209:16">err</name></expr>)</condition><block type="pseudo" pos:start="211:13" pos:end="211:79"><block_content pos:start="211:13" pos:end="211:79">

            <expr_stmt pos:start="211:13" pos:end="211:79"><expr pos:start="211:13" pos:end="211:78"><call pos:start="211:13" pos:end="211:78"><name pos:start="211:13" pos:end="211:20">snprintf</name><argument_list pos:start="211:21" pos:end="211:78">(<argument pos:start="211:22" pos:end="211:30"><expr pos:start="211:22" pos:end="211:30"><name pos:start="211:22" pos:end="211:30">iv_string</name></expr></argument>, <argument pos:start="211:33" pos:end="211:49"><expr pos:start="211:33" pos:end="211:49"><sizeof pos:start="211:33" pos:end="211:49">sizeof<argument_list pos:start="211:39" pos:end="211:49">(<argument pos:start="211:40" pos:end="211:48"><expr pos:start="211:40" pos:end="211:48"><name pos:start="211:40" pos:end="211:48">iv_string</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="211:52" pos:end="211:63"><expr pos:start="211:52" pos:end="211:63"><literal type="string" pos:start="211:52" pos:end="211:57">"%032"</literal><name pos:start="211:58" pos:end="211:63">PRIx64</name></expr></argument>, <argument pos:start="211:66" pos:end="211:77"><expr pos:start="211:66" pos:end="211:77"><name pos:start="211:66" pos:end="211:77"><name pos:start="211:66" pos:end="211:67">vs</name><operator pos:start="211:68" pos:end="211:69">-&gt;</operator><name pos:start="211:70" pos:end="211:77">sequence</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="213:9" pos:end="215:21"><if pos:start="213:9" pos:end="215:21">if <condition pos:start="213:12" pos:end="213:77">(<expr pos:start="213:13" pos:end="213:76"><operator pos:start="213:13" pos:end="213:13">(</operator><name pos:start="213:14" pos:end="213:16">err</name> <operator pos:start="213:18" pos:end="213:18">=</operator> <call pos:start="213:20" pos:end="213:71"><name pos:start="213:20" pos:end="213:30">av_dict_set</name><argument_list pos:start="213:31" pos:end="213:71">(<argument pos:start="213:32" pos:end="213:39"><expr pos:start="213:32" pos:end="213:39"><operator pos:start="213:32" pos:end="213:32">&amp;</operator><name pos:start="213:33" pos:end="213:39">options</name></expr></argument>, <argument pos:start="213:42" pos:end="213:56"><expr pos:start="213:42" pos:end="213:56"><literal type="string" pos:start="213:42" pos:end="213:56">"encryption_iv"</literal></expr></argument>, <argument pos:start="213:59" pos:end="213:67"><expr pos:start="213:59" pos:end="213:67"><name pos:start="213:59" pos:end="213:67">iv_string</name></expr></argument>, <argument pos:start="213:70" pos:end="213:70"><expr pos:start="213:70" pos:end="213:70"><literal type="number" pos:start="213:70" pos:end="213:70">0</literal></expr></argument>)</argument_list></call><operator pos:start="213:72" pos:end="213:72">)</operator> <operator pos:start="213:74" pos:end="213:74">&lt;</operator> <literal type="number" pos:start="213:76" pos:end="213:76">0</literal></expr>)</condition><block type="pseudo" pos:start="215:12" pos:end="215:21"><block_content pos:start="215:12" pos:end="215:21">

           <goto pos:start="215:12" pos:end="215:21">goto <name pos:start="215:17" pos:end="215:20">fail</name>;</goto></block_content></block></if></if_stmt>



        <expr_stmt pos:start="219:9" pos:end="219:58"><expr pos:start="219:9" pos:end="219:57"><name pos:start="219:9" pos:end="219:16">filename</name> <operator pos:start="219:18" pos:end="219:18">=</operator> <call pos:start="219:20" pos:end="219:57"><name pos:start="219:20" pos:end="219:30">av_asprintf</name><argument_list pos:start="219:31" pos:end="219:57">(<argument pos:start="219:32" pos:end="219:42"><expr pos:start="219:32" pos:end="219:42"><literal type="string" pos:start="219:32" pos:end="219:42">"crypto:%s"</literal></expr></argument>, <argument pos:start="219:45" pos:end="219:56"><expr pos:start="219:45" pos:end="219:56"><name pos:start="219:45" pos:end="219:56"><name pos:start="219:45" pos:end="219:46">oc</name><operator pos:start="219:47" pos:end="219:48">-&gt;</operator><name pos:start="219:49" pos:end="219:56">filename</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="221:9" pos:end="227:9"><if pos:start="221:9" pos:end="227:9">if <condition pos:start="221:12" pos:end="221:22">(<expr pos:start="221:13" pos:end="221:21"><operator pos:start="221:13" pos:end="221:13">!</operator><name pos:start="221:14" pos:end="221:21">filename</name></expr>)</condition> <block pos:start="221:24" pos:end="227:9">{<block_content pos:start="223:13" pos:end="225:22">

            <expr_stmt pos:start="223:13" pos:end="223:34"><expr pos:start="223:13" pos:end="223:33"><name pos:start="223:13" pos:end="223:15">err</name> <operator pos:start="223:17" pos:end="223:17">=</operator> <call pos:start="223:19" pos:end="223:33"><name pos:start="223:19" pos:end="223:25">AVERROR</name><argument_list pos:start="223:26" pos:end="223:33">(<argument pos:start="223:27" pos:end="223:32"><expr pos:start="223:27" pos:end="223:32"><name pos:start="223:27" pos:end="223:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="225:13" pos:end="225:22">goto <name pos:start="225:18" pos:end="225:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="229:9" pos:end="229:61"><expr pos:start="229:9" pos:end="229:60"><name pos:start="229:9" pos:end="229:11">err</name> <operator pos:start="229:13" pos:end="229:13">=</operator> <call pos:start="229:15" pos:end="229:60"><name pos:start="229:15" pos:end="229:28">hlsenc_io_open</name><argument_list pos:start="229:29" pos:end="229:60">(<argument pos:start="229:30" pos:end="229:30"><expr pos:start="229:30" pos:end="229:30"><name pos:start="229:30" pos:end="229:30">s</name></expr></argument>, <argument pos:start="229:33" pos:end="229:39"><expr pos:start="229:33" pos:end="229:39"><operator pos:start="229:33" pos:end="229:33">&amp;</operator><name pos:start="229:34" pos:end="229:39"><name pos:start="229:34" pos:end="229:35">oc</name><operator pos:start="229:36" pos:end="229:37">-&gt;</operator><name pos:start="229:38" pos:end="229:39">pb</name></name></expr></argument>, <argument pos:start="229:42" pos:end="229:49"><expr pos:start="229:42" pos:end="229:49"><name pos:start="229:42" pos:end="229:49">filename</name></expr></argument>, <argument pos:start="229:52" pos:end="229:59"><expr pos:start="229:52" pos:end="229:59"><operator pos:start="229:52" pos:end="229:52">&amp;</operator><name pos:start="229:53" pos:end="229:59">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="231:9" pos:end="231:26"><expr pos:start="231:9" pos:end="231:25"><call pos:start="231:9" pos:end="231:25"><name pos:start="231:9" pos:end="231:15">av_free</name><argument_list pos:start="231:16" pos:end="231:25">(<argument pos:start="231:17" pos:end="231:24"><expr pos:start="231:17" pos:end="231:24"><name pos:start="231:17" pos:end="231:24">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:31"><expr pos:start="233:9" pos:end="233:30"><call pos:start="233:9" pos:end="233:30"><name pos:start="233:9" pos:end="233:20">av_dict_free</name><argument_list pos:start="233:21" pos:end="233:30">(<argument pos:start="233:22" pos:end="233:29"><expr pos:start="233:22" pos:end="233:29"><operator pos:start="233:22" pos:end="233:22">&amp;</operator><name pos:start="233:23" pos:end="233:29">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="235:9" pos:end="237:23"><if pos:start="235:9" pos:end="237:23">if <condition pos:start="235:12" pos:end="235:20">(<expr pos:start="235:13" pos:end="235:19"><name pos:start="235:13" pos:end="235:15">err</name> <operator pos:start="235:17" pos:end="235:17">&lt;</operator> <literal type="number" pos:start="235:19" pos:end="235:19">0</literal></expr>)</condition><block type="pseudo" pos:start="237:13" pos:end="237:23"><block_content pos:start="237:13" pos:end="237:23">

            <return pos:start="237:13" pos:end="237:23">return <expr pos:start="237:20" pos:end="237:22"><name pos:start="237:20" pos:end="237:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="239:7" pos:end="245:5">else if <condition pos:start="239:15" pos:end="239:52">(<expr pos:start="239:16" pos:end="239:51"><name pos:start="239:16" pos:end="239:30"><name pos:start="239:16" pos:end="239:16">c</name><operator pos:start="239:17" pos:end="239:18">-&gt;</operator><name pos:start="239:19" pos:end="239:30">segment_type</name></name> <operator pos:start="239:32" pos:end="239:33">!=</operator> <name pos:start="239:35" pos:end="239:51">SEGMENT_TYPE_FMP4</name></expr>)</condition> <block pos:start="239:54" pos:end="245:5">{<block_content pos:start="241:9" pos:end="243:22">

        <if_stmt pos:start="241:9" pos:end="243:22"><if pos:start="241:9" pos:end="243:22">if <condition pos:start="241:12" pos:end="241:75">(<expr pos:start="241:13" pos:end="241:74"><operator pos:start="241:13" pos:end="241:13">(</operator><name pos:start="241:14" pos:end="241:16">err</name> <operator pos:start="241:18" pos:end="241:18">=</operator> <call pos:start="241:20" pos:end="241:69"><name pos:start="241:20" pos:end="241:33">hlsenc_io_open</name><argument_list pos:start="241:34" pos:end="241:69">(<argument pos:start="241:35" pos:end="241:35"><expr pos:start="241:35" pos:end="241:35"><name pos:start="241:35" pos:end="241:35">s</name></expr></argument>, <argument pos:start="241:38" pos:end="241:44"><expr pos:start="241:38" pos:end="241:44"><operator pos:start="241:38" pos:end="241:38">&amp;</operator><name pos:start="241:39" pos:end="241:44"><name pos:start="241:39" pos:end="241:40">oc</name><operator pos:start="241:41" pos:end="241:42">-&gt;</operator><name pos:start="241:43" pos:end="241:44">pb</name></name></expr></argument>, <argument pos:start="241:47" pos:end="241:58"><expr pos:start="241:47" pos:end="241:58"><name pos:start="241:47" pos:end="241:58"><name pos:start="241:47" pos:end="241:48">oc</name><operator pos:start="241:49" pos:end="241:50">-&gt;</operator><name pos:start="241:51" pos:end="241:58">filename</name></name></expr></argument>, <argument pos:start="241:61" pos:end="241:68"><expr pos:start="241:61" pos:end="241:68"><operator pos:start="241:61" pos:end="241:61">&amp;</operator><name pos:start="241:62" pos:end="241:68">options</name></expr></argument>)</argument_list></call><operator pos:start="241:70" pos:end="241:70">)</operator> <operator pos:start="241:72" pos:end="241:72">&lt;</operator> <literal type="number" pos:start="241:74" pos:end="241:74">0</literal></expr>)</condition><block type="pseudo" pos:start="243:13" pos:end="243:22"><block_content pos:start="243:13" pos:end="243:22">

            <goto pos:start="243:13" pos:end="243:22">goto <name pos:start="243:18" pos:end="243:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="247:5" pos:end="255:5"><if pos:start="247:5" pos:end="255:5">if <condition pos:start="247:8" pos:end="247:25">(<expr pos:start="247:9" pos:end="247:24"><name pos:start="247:9" pos:end="247:24"><name pos:start="247:9" pos:end="247:10">vs</name><operator pos:start="247:11" pos:end="247:12">-&gt;</operator><name pos:start="247:13" pos:end="247:24">vtt_basename</name></name></expr>)</condition> <block pos:start="247:27" pos:end="255:5">{<block_content pos:start="249:9" pos:end="253:22">

        <expr_stmt pos:start="249:9" pos:end="249:41"><expr pos:start="249:9" pos:end="249:40"><call pos:start="249:9" pos:end="249:40"><name pos:start="249:9" pos:end="249:24">set_http_options</name><argument_list pos:start="249:25" pos:end="249:40">(<argument pos:start="249:26" pos:end="249:26"><expr pos:start="249:26" pos:end="249:26"><name pos:start="249:26" pos:end="249:26">s</name></expr></argument>, <argument pos:start="249:29" pos:end="249:36"><expr pos:start="249:29" pos:end="249:36"><operator pos:start="249:29" pos:end="249:29">&amp;</operator><name pos:start="249:30" pos:end="249:36">options</name></expr></argument>, <argument pos:start="249:39" pos:end="249:39"><expr pos:start="249:39" pos:end="249:39"><name pos:start="249:39" pos:end="249:39">c</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="251:9" pos:end="253:22"><if pos:start="251:9" pos:end="253:22">if <condition pos:start="251:12" pos:end="251:83">(<expr pos:start="251:13" pos:end="251:82"><operator pos:start="251:13" pos:end="251:13">(</operator><name pos:start="251:14" pos:end="251:16">err</name> <operator pos:start="251:18" pos:end="251:18">=</operator> <call pos:start="251:20" pos:end="251:77"><name pos:start="251:20" pos:end="251:33">hlsenc_io_open</name><argument_list pos:start="251:34" pos:end="251:77">(<argument pos:start="251:35" pos:end="251:35"><expr pos:start="251:35" pos:end="251:35"><name pos:start="251:35" pos:end="251:35">s</name></expr></argument>, <argument pos:start="251:38" pos:end="251:48"><expr pos:start="251:38" pos:end="251:48"><operator pos:start="251:38" pos:end="251:38">&amp;</operator><name pos:start="251:39" pos:end="251:48"><name pos:start="251:39" pos:end="251:44">vtt_oc</name><operator pos:start="251:45" pos:end="251:46">-&gt;</operator><name pos:start="251:47" pos:end="251:48">pb</name></name></expr></argument>, <argument pos:start="251:51" pos:end="251:66"><expr pos:start="251:51" pos:end="251:66"><name pos:start="251:51" pos:end="251:66"><name pos:start="251:51" pos:end="251:56">vtt_oc</name><operator pos:start="251:57" pos:end="251:58">-&gt;</operator><name pos:start="251:59" pos:end="251:66">filename</name></name></expr></argument>, <argument pos:start="251:69" pos:end="251:76"><expr pos:start="251:69" pos:end="251:76"><operator pos:start="251:69" pos:end="251:69">&amp;</operator><name pos:start="251:70" pos:end="251:76">options</name></expr></argument>)</argument_list></call><operator pos:start="251:78" pos:end="251:78">)</operator> <operator pos:start="251:80" pos:end="251:80">&lt;</operator> <literal type="number" pos:start="251:82" pos:end="251:82">0</literal></expr>)</condition><block type="pseudo" pos:start="253:13" pos:end="253:22"><block_content pos:start="253:13" pos:end="253:22">

            <goto pos:start="253:13" pos:end="253:22">goto <name pos:start="253:18" pos:end="253:21">fail</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="257:5" pos:end="257:27"><expr pos:start="257:5" pos:end="257:26"><call pos:start="257:5" pos:end="257:26"><name pos:start="257:5" pos:end="257:16">av_dict_free</name><argument_list pos:start="257:17" pos:end="257:26">(<argument pos:start="257:18" pos:end="257:25"><expr pos:start="257:18" pos:end="257:25"><operator pos:start="257:18" pos:end="257:18">&amp;</operator><name pos:start="257:19" pos:end="257:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="261:5" pos:end="283:5"><if pos:start="261:5" pos:end="283:5">if <condition pos:start="261:8" pos:end="261:45">(<expr pos:start="261:9" pos:end="261:44"><name pos:start="261:9" pos:end="261:23"><name pos:start="261:9" pos:end="261:9">c</name><operator pos:start="261:10" pos:end="261:11">-&gt;</operator><name pos:start="261:12" pos:end="261:23">segment_type</name></name> <operator pos:start="261:25" pos:end="261:26">!=</operator> <name pos:start="261:28" pos:end="261:44">SEGMENT_TYPE_FMP4</name></expr>)</condition> <block pos:start="261:47" pos:end="283:5">{<block_content pos:start="265:9" pos:end="281:9">

        <comment type="block" pos:start="263:9" pos:end="263:54">/* We only require one PAT/PMT per segment. */</comment>

        <if_stmt pos:start="265:9" pos:end="281:9"><if pos:start="265:9" pos:end="281:9">if <condition pos:start="265:12" pos:end="265:53">(<expr pos:start="265:13" pos:end="265:52"><name pos:start="265:13" pos:end="265:35"><name pos:start="265:13" pos:end="265:14">oc</name><operator pos:start="265:15" pos:end="265:16">-&gt;</operator><name pos:start="265:17" pos:end="265:23">oformat</name><operator pos:start="265:24" pos:end="265:25">-&gt;</operator><name pos:start="265:26" pos:end="265:35">priv_class</name></name> <operator pos:start="265:37" pos:end="265:38">&amp;&amp;</operator> <name pos:start="265:40" pos:end="265:52"><name pos:start="265:40" pos:end="265:41">oc</name><operator pos:start="265:42" pos:end="265:43">-&gt;</operator><name pos:start="265:44" pos:end="265:52">priv_data</name></name></expr>)</condition> <block pos:start="265:55" pos:end="281:9">{<block_content pos:start="267:13" pos:end="279:63">

            <decl_stmt pos:start="267:13" pos:end="267:28"><decl pos:start="267:13" pos:end="267:27"><type pos:start="267:13" pos:end="267:16"><name pos:start="267:13" pos:end="267:16">char</name></type> <name pos:start="267:18" pos:end="267:27"><name pos:start="267:18" pos:end="267:23">period</name><index pos:start="267:24" pos:end="267:27">[<expr pos:start="267:25" pos:end="267:26"><literal type="number" pos:start="267:25" pos:end="267:26">21</literal></expr>]</index></name></decl>;</decl_stmt>



            <expr_stmt pos:start="271:13" pos:end="271:70"><expr pos:start="271:13" pos:end="271:69"><call pos:start="271:13" pos:end="271:69"><name pos:start="271:13" pos:end="271:20">snprintf</name><argument_list pos:start="271:21" pos:end="271:69">(<argument pos:start="271:22" pos:end="271:27"><expr pos:start="271:22" pos:end="271:27"><name pos:start="271:22" pos:end="271:27">period</name></expr></argument>, <argument pos:start="271:30" pos:end="271:43"><expr pos:start="271:30" pos:end="271:43"><sizeof pos:start="271:30" pos:end="271:43">sizeof<argument_list pos:start="271:36" pos:end="271:43">(<argument pos:start="271:37" pos:end="271:42"><expr pos:start="271:37" pos:end="271:42"><name pos:start="271:37" pos:end="271:42">period</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="271:46" pos:end="271:49"><expr pos:start="271:46" pos:end="271:49"><literal type="string" pos:start="271:46" pos:end="271:49">"%d"</literal></expr></argument>, <argument pos:start="271:52" pos:end="271:68"><expr pos:start="271:52" pos:end="271:68"><operator pos:start="271:52" pos:end="271:52">(</operator><name pos:start="271:53" pos:end="271:59">INT_MAX</name> <operator pos:start="271:61" pos:end="271:61">/</operator> <literal type="number" pos:start="271:63" pos:end="271:63">2</literal><operator pos:start="271:64" pos:end="271:64">)</operator> <operator pos:start="271:66" pos:end="271:66">-</operator> <literal type="number" pos:start="271:68" pos:end="271:68">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="275:13" pos:end="275:75"><expr pos:start="275:13" pos:end="275:74"><call pos:start="275:13" pos:end="275:74"><name pos:start="275:13" pos:end="275:22">av_opt_set</name><argument_list pos:start="275:23" pos:end="275:74">(<argument pos:start="275:24" pos:end="275:36"><expr pos:start="275:24" pos:end="275:36"><name pos:start="275:24" pos:end="275:36"><name pos:start="275:24" pos:end="275:25">oc</name><operator pos:start="275:26" pos:end="275:27">-&gt;</operator><name pos:start="275:28" pos:end="275:36">priv_data</name></name></expr></argument>, <argument pos:start="275:39" pos:end="275:52"><expr pos:start="275:39" pos:end="275:52"><literal type="string" pos:start="275:39" pos:end="275:52">"mpegts_flags"</literal></expr></argument>, <argument pos:start="275:55" pos:end="275:70"><expr pos:start="275:55" pos:end="275:70"><literal type="string" pos:start="275:55" pos:end="275:70">"resend_headers"</literal></expr></argument>, <argument pos:start="275:73" pos:end="275:73"><expr pos:start="275:73" pos:end="275:73"><literal type="number" pos:start="275:73" pos:end="275:73">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="277:13" pos:end="277:63"><expr pos:start="277:13" pos:end="277:62"><call pos:start="277:13" pos:end="277:62"><name pos:start="277:13" pos:end="277:22">av_opt_set</name><argument_list pos:start="277:23" pos:end="277:62">(<argument pos:start="277:24" pos:end="277:36"><expr pos:start="277:24" pos:end="277:36"><name pos:start="277:24" pos:end="277:36"><name pos:start="277:24" pos:end="277:25">oc</name><operator pos:start="277:26" pos:end="277:27">-&gt;</operator><name pos:start="277:28" pos:end="277:36">priv_data</name></name></expr></argument>, <argument pos:start="277:39" pos:end="277:50"><expr pos:start="277:39" pos:end="277:50"><literal type="string" pos:start="277:39" pos:end="277:50">"sdt_period"</literal></expr></argument>, <argument pos:start="277:53" pos:end="277:58"><expr pos:start="277:53" pos:end="277:58"><name pos:start="277:53" pos:end="277:58">period</name></expr></argument>, <argument pos:start="277:61" pos:end="277:61"><expr pos:start="277:61" pos:end="277:61"><literal type="number" pos:start="277:61" pos:end="277:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:63"><expr pos:start="279:13" pos:end="279:62"><call pos:start="279:13" pos:end="279:62"><name pos:start="279:13" pos:end="279:22">av_opt_set</name><argument_list pos:start="279:23" pos:end="279:62">(<argument pos:start="279:24" pos:end="279:36"><expr pos:start="279:24" pos:end="279:36"><name pos:start="279:24" pos:end="279:36"><name pos:start="279:24" pos:end="279:25">oc</name><operator pos:start="279:26" pos:end="279:27">-&gt;</operator><name pos:start="279:28" pos:end="279:36">priv_data</name></name></expr></argument>, <argument pos:start="279:39" pos:end="279:50"><expr pos:start="279:39" pos:end="279:50"><literal type="string" pos:start="279:39" pos:end="279:50">"pat_period"</literal></expr></argument>, <argument pos:start="279:53" pos:end="279:58"><expr pos:start="279:53" pos:end="279:58"><name pos:start="279:53" pos:end="279:58">period</name></expr></argument>, <argument pos:start="279:61" pos:end="279:61"><expr pos:start="279:61" pos:end="279:61"><literal type="number" pos:start="279:61" pos:end="279:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="295:5"><if pos:start="287:5" pos:end="295:5">if <condition pos:start="287:8" pos:end="287:25">(<expr pos:start="287:9" pos:end="287:24"><name pos:start="287:9" pos:end="287:24"><name pos:start="287:9" pos:end="287:10">vs</name><operator pos:start="287:11" pos:end="287:12">-&gt;</operator><name pos:start="287:13" pos:end="287:24">vtt_basename</name></name></expr>)</condition> <block pos:start="287:27" pos:end="295:5">{<block_content pos:start="289:9" pos:end="293:23">

        <expr_stmt pos:start="289:9" pos:end="289:49"><expr pos:start="289:9" pos:end="289:48"><name pos:start="289:9" pos:end="289:11">err</name> <operator pos:start="289:13" pos:end="289:13">=</operator> <call pos:start="289:15" pos:end="289:48"><name pos:start="289:15" pos:end="289:35">avformat_write_header</name><argument_list pos:start="289:36" pos:end="289:48">(<argument pos:start="289:37" pos:end="289:42"><expr pos:start="289:37" pos:end="289:42"><name pos:start="289:37" pos:end="289:42">vtt_oc</name></expr></argument>,<argument pos:start="289:44" pos:end="289:47"><expr pos:start="289:44" pos:end="289:47"><name pos:start="289:44" pos:end="289:47">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="291:9" pos:end="293:23"><if pos:start="291:9" pos:end="293:23">if <condition pos:start="291:12" pos:end="291:20">(<expr pos:start="291:13" pos:end="291:19"><name pos:start="291:13" pos:end="291:15">err</name> <operator pos:start="291:17" pos:end="291:17">&lt;</operator> <literal type="number" pos:start="291:19" pos:end="291:19">0</literal></expr>)</condition><block type="pseudo" pos:start="293:13" pos:end="293:23"><block_content pos:start="293:13" pos:end="293:23">

            <return pos:start="293:13" pos:end="293:23">return <expr pos:start="293:20" pos:end="293:22"><name pos:start="293:20" pos:end="293:22">err</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="299:5" pos:end="299:13">return <expr pos:start="299:12" pos:end="299:12"><literal type="number" pos:start="299:12" pos:end="299:12">0</literal></expr>;</return>

<label pos:start="301:1" pos:end="301:5"><name pos:start="301:1" pos:end="301:4">fail</name>:</label>

    <expr_stmt pos:start="303:5" pos:end="303:27"><expr pos:start="303:5" pos:end="303:26"><call pos:start="303:5" pos:end="303:26"><name pos:start="303:5" pos:end="303:16">av_dict_free</name><argument_list pos:start="303:17" pos:end="303:26">(<argument pos:start="303:18" pos:end="303:25"><expr pos:start="303:18" pos:end="303:25"><operator pos:start="303:18" pos:end="303:18">&amp;</operator><name pos:start="303:19" pos:end="303:25">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="307:5" pos:end="307:15">return <expr pos:start="307:12" pos:end="307:14"><name pos:start="307:12" pos:end="307:14">err</name></expr>;</return>

}
</unit>
