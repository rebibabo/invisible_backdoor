<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21818.c" pos:tabs="8"><function pos:start="1:1" pos:end="579:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">ff_h263_decode_picture_header</name><parameter_list pos:start="1:34" pos:end="1:52">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:50"><name pos:start="1:35" pos:end="1:48">MpegEncContext</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="579:1">{<block_content pos:start="5:5" pos:end="577:13">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">format</name></decl>, <decl pos:start="5:17" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:21">width</name></decl>, <decl pos:start="5:24" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:29">height</name></decl>, <decl pos:start="5:32" pos:end="5:32"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:32" pos:end="5:32">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:22">startcode</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><call pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:18">align_get_bits</name><argument_list pos:start="11:19" pos:end="11:26">(<argument pos:start="11:20" pos:end="11:25"><expr pos:start="11:20" pos:end="11:25"><operator pos:start="11:20" pos:end="11:20">&amp;</operator><name pos:start="11:21" pos:end="11:25"><name pos:start="11:21" pos:end="11:21">s</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:65">(<expr pos:start="15:9" pos:end="15:64"><call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:17">show_bits</name><argument_list pos:start="15:18" pos:end="15:28">(<argument pos:start="15:19" pos:end="15:24"><expr pos:start="15:19" pos:end="15:24"><operator pos:start="15:19" pos:end="15:19">&amp;</operator><name pos:start="15:20" pos:end="15:24"><name pos:start="15:20" pos:end="15:20">s</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:24">gb</name></name></expr></argument>, <argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">2</literal></expr></argument>)</argument_list></call> <operator pos:start="15:30" pos:end="15:31">==</operator> <literal type="number" pos:start="15:33" pos:end="15:33">2</literal> <operator pos:start="15:35" pos:end="15:36">&amp;&amp;</operator> <name pos:start="15:38" pos:end="15:59"><name pos:start="15:38" pos:end="15:38">s</name><operator pos:start="15:39" pos:end="15:40">-&gt;</operator><name pos:start="15:41" pos:end="15:45">avctx</name><operator pos:start="15:46" pos:end="15:47">-&gt;</operator><name pos:start="15:48" pos:end="15:59">frame_number</name></name> <operator pos:start="15:61" pos:end="15:62">==</operator> <literal type="number" pos:start="15:64" pos:end="15:64">0</literal></expr>)</condition> <block pos:start="15:67" pos:end="19:5">{<block_content pos:start="17:10" pos:end="17:86">

         <expr_stmt pos:start="17:10" pos:end="17:86"><expr pos:start="17:10" pos:end="17:85"><call pos:start="17:10" pos:end="17:85"><name pos:start="17:10" pos:end="17:15">av_log</name><argument_list pos:start="17:16" pos:end="17:85">(<argument pos:start="17:17" pos:end="17:24"><expr pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:24"><name pos:start="17:17" pos:end="17:17">s</name><operator pos:start="17:18" pos:end="17:19">-&gt;</operator><name pos:start="17:20" pos:end="17:24">avctx</name></name></expr></argument>, <argument pos:start="17:27" pos:end="17:40"><expr pos:start="17:27" pos:end="17:40"><name pos:start="17:27" pos:end="17:40">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="17:43" pos:end="17:84"><expr pos:start="17:43" pos:end="17:84"><literal type="string" pos:start="17:43" pos:end="17:84">"Header looks like RTP instead of H.263\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:13">startcode</name><operator pos:start="23:14" pos:end="23:14">=</operator> <call pos:start="23:16" pos:end="23:37"><name pos:start="23:16" pos:end="23:23">get_bits</name><argument_list pos:start="23:24" pos:end="23:37">(<argument pos:start="23:25" pos:end="23:30"><expr pos:start="23:25" pos:end="23:30"><operator pos:start="23:25" pos:end="23:25">&amp;</operator><name pos:start="23:26" pos:end="23:30"><name pos:start="23:26" pos:end="23:26">s</name><operator pos:start="23:27" pos:end="23:28">-&gt;</operator><name pos:start="23:29" pos:end="23:30">gb</name></name></expr></argument>, <argument pos:start="23:33" pos:end="23:36"><expr pos:start="23:33" pos:end="23:36"><literal type="number" pos:start="23:33" pos:end="23:35">22</literal><operator pos:start="23:35" pos:end="23:35">-</operator><literal type="number" pos:start="23:36" pos:end="23:36">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="27:5" pos:end="37:5">for<control pos:start="27:8" pos:end="27:45">(<init pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:9">i</name><operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:32"><name pos:start="27:12" pos:end="27:24">get_bits_left</name><argument_list pos:start="27:25" pos:end="27:32">(<argument pos:start="27:26" pos:end="27:31"><expr pos:start="27:26" pos:end="27:31"><operator pos:start="27:26" pos:end="27:26">&amp;</operator><name pos:start="27:27" pos:end="27:31"><name pos:start="27:27" pos:end="27:27">s</name><operator pos:start="27:28" pos:end="27:29">-&gt;</operator><name pos:start="27:30" pos:end="27:31">gb</name></name></expr></argument>)</argument_list></call></expr>;</init> <condition pos:start="27:35" pos:end="27:39"><expr pos:start="27:35" pos:end="27:38"><name pos:start="27:35" pos:end="27:35">i</name><operator pos:start="27:36" pos:end="27:36">&gt;</operator><literal type="number" pos:start="27:37" pos:end="27:38">24</literal></expr>;</condition> <incr pos:start="27:41" pos:end="27:44"><expr pos:start="27:41" pos:end="27:44"><name pos:start="27:41" pos:end="27:41">i</name><operator pos:start="27:42" pos:end="27:43">-=</operator><literal type="number" pos:start="27:44" pos:end="27:44">8</literal></expr></incr>)</control> <block pos:start="27:47" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:18">

        <expr_stmt pos:start="29:9" pos:end="29:74"><expr pos:start="29:9" pos:end="29:73"><name pos:start="29:9" pos:end="29:17">startcode</name> <operator pos:start="29:19" pos:end="29:19">=</operator> <operator pos:start="29:21" pos:end="29:21">(</operator><operator pos:start="29:22" pos:end="29:22">(</operator><name pos:start="29:23" pos:end="29:31">startcode</name> <operator pos:start="29:33" pos:end="29:34">&lt;&lt;</operator> <literal type="number" pos:start="29:36" pos:end="29:36">8</literal><operator pos:start="29:37" pos:end="29:37">)</operator> <operator pos:start="29:39" pos:end="29:39">|</operator> <call pos:start="29:41" pos:end="29:59"><name pos:start="29:41" pos:end="29:48">get_bits</name><argument_list pos:start="29:49" pos:end="29:59">(<argument pos:start="29:50" pos:end="29:55"><expr pos:start="29:50" pos:end="29:55"><operator pos:start="29:50" pos:end="29:50">&amp;</operator><name pos:start="29:51" pos:end="29:55"><name pos:start="29:51" pos:end="29:51">s</name><operator pos:start="29:52" pos:end="29:53">-&gt;</operator><name pos:start="29:54" pos:end="29:55">gb</name></name></expr></argument>, <argument pos:start="29:58" pos:end="29:58"><expr pos:start="29:58" pos:end="29:58"><literal type="number" pos:start="29:58" pos:end="29:58">8</literal></expr></argument>)</argument_list></call><operator pos:start="29:60" pos:end="29:60">)</operator> <operator pos:start="29:62" pos:end="29:62">&amp;</operator> <literal type="number" pos:start="29:64" pos:end="29:73">0x003FFFFF</literal></expr>;</expr_stmt>



        <if_stmt pos:start="33:9" pos:end="35:18"><if pos:start="33:9" pos:end="35:18">if<condition pos:start="33:11" pos:end="33:29">(<expr pos:start="33:12" pos:end="33:28"><name pos:start="33:12" pos:end="33:20">startcode</name> <operator pos:start="33:22" pos:end="33:23">==</operator> <literal type="number" pos:start="33:25" pos:end="33:28">0x20</literal></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:18"><block_content pos:start="35:13" pos:end="35:18">

            <break pos:start="35:13" pos:end="35:18">break;</break></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="41:5" pos:end="47:5"><if pos:start="41:5" pos:end="47:5">if <condition pos:start="41:8" pos:end="41:26">(<expr pos:start="41:9" pos:end="41:25"><name pos:start="41:9" pos:end="41:17">startcode</name> <operator pos:start="41:19" pos:end="41:20">!=</operator> <literal type="number" pos:start="41:22" pos:end="41:25">0x20</literal></expr>)</condition> <block pos:start="41:28" pos:end="47:5">{<block_content pos:start="43:9" pos:end="45:18">

        <expr_stmt pos:start="43:9" pos:end="43:67"><expr pos:start="43:9" pos:end="43:66"><call pos:start="43:9" pos:end="43:66"><name pos:start="43:9" pos:end="43:14">av_log</name><argument_list pos:start="43:15" pos:end="43:66">(<argument pos:start="43:16" pos:end="43:23"><expr pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:23"><name pos:start="43:16" pos:end="43:16">s</name><operator pos:start="43:17" pos:end="43:18">-&gt;</operator><name pos:start="43:19" pos:end="43:23">avctx</name></name></expr></argument>, <argument pos:start="43:26" pos:end="43:37"><expr pos:start="43:26" pos:end="43:37"><name pos:start="43:26" pos:end="43:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="43:40" pos:end="43:65"><expr pos:start="43:40" pos:end="43:65"><literal type="string" pos:start="43:40" pos:end="43:65">"Bad picture start code\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="45:9" pos:end="45:18">return <expr pos:start="45:16" pos:end="45:17"><operator pos:start="45:16" pos:end="45:16">-</operator><literal type="number" pos:start="45:17" pos:end="45:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="49:5" pos:end="49:28">/* temporal reference */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:28"><expr pos:start="51:5" pos:end="51:27"><name pos:start="51:5" pos:end="51:5">i</name> <operator pos:start="51:7" pos:end="51:7">=</operator> <call pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:16">get_bits</name><argument_list pos:start="51:17" pos:end="51:27">(<argument pos:start="51:18" pos:end="51:23"><expr pos:start="51:18" pos:end="51:23"><operator pos:start="51:18" pos:end="51:18">&amp;</operator><name pos:start="51:19" pos:end="51:23"><name pos:start="51:19" pos:end="51:19">s</name><operator pos:start="51:20" pos:end="51:21">-&gt;</operator><name pos:start="51:22" pos:end="51:23">gb</name></name></expr></argument>, <argument pos:start="51:26" pos:end="51:26"><expr pos:start="51:26" pos:end="51:26"><literal type="number" pos:start="51:26" pos:end="51:26">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="51:30" pos:end="51:52">/* picture timestamp */</comment>

    <if_stmt pos:start="53:5" pos:end="55:16"><if pos:start="53:5" pos:end="55:16">if<condition pos:start="53:7" pos:end="53:56">( <expr pos:start="53:9" pos:end="53:55"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:26"><name pos:start="53:10" pos:end="53:10">s</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:26">picture_number</name></name><operator pos:start="53:27" pos:end="53:27">&amp;</operator><operator pos:start="53:28" pos:end="53:28">~</operator><literal type="number" pos:start="53:29" pos:end="53:32">0xFF</literal><operator pos:start="53:33" pos:end="53:33">)</operator><operator pos:start="53:34" pos:end="53:34">+</operator><name pos:start="53:35" pos:end="53:35">i</name> <operator pos:start="53:37" pos:end="53:37">&lt;</operator> <name pos:start="53:39" pos:end="53:55"><name pos:start="53:39" pos:end="53:39">s</name><operator pos:start="53:40" pos:end="53:41">-&gt;</operator><name pos:start="53:42" pos:end="53:55">picture_number</name></name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:16"><block_content pos:start="55:9" pos:end="55:16">

        <expr_stmt pos:start="55:9" pos:end="55:16"><expr pos:start="55:9" pos:end="55:15"><name pos:start="55:9" pos:end="55:9">i</name><operator pos:start="55:10" pos:end="55:11">+=</operator> <literal type="number" pos:start="55:13" pos:end="55:15">256</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:53"><expr pos:start="57:5" pos:end="57:52"><name pos:start="57:5" pos:end="57:21"><name pos:start="57:5" pos:end="57:5">s</name><operator pos:start="57:6" pos:end="57:7">-&gt;</operator><name pos:start="57:8" pos:end="57:21">picture_number</name></name><operator pos:start="57:22" pos:end="57:22">=</operator> <operator pos:start="57:24" pos:end="57:24">(</operator><name pos:start="57:25" pos:end="57:41"><name pos:start="57:25" pos:end="57:25">s</name><operator pos:start="57:26" pos:end="57:27">-&gt;</operator><name pos:start="57:28" pos:end="57:41">picture_number</name></name><operator pos:start="57:42" pos:end="57:42">&amp;</operator><operator pos:start="57:43" pos:end="57:43">~</operator><literal type="number" pos:start="57:44" pos:end="57:47">0xFF</literal><operator pos:start="57:48" pos:end="57:48">)</operator> <operator pos:start="57:50" pos:end="57:50">+</operator> <name pos:start="57:52" pos:end="57:52">i</name></expr>;</expr_stmt>



    <comment type="block" pos:start="61:5" pos:end="61:27">/* PTYPE starts here */</comment>

    <if_stmt pos:start="63:5" pos:end="71:5"><if pos:start="63:5" pos:end="71:5">if <condition pos:start="63:8" pos:end="63:31">(<expr pos:start="63:9" pos:end="63:30"><call pos:start="63:9" pos:end="63:25"><name pos:start="63:9" pos:end="63:17">get_bits1</name><argument_list pos:start="63:18" pos:end="63:25">(<argument pos:start="63:19" pos:end="63:24"><expr pos:start="63:19" pos:end="63:24"><operator pos:start="63:19" pos:end="63:19">&amp;</operator><name pos:start="63:20" pos:end="63:24"><name pos:start="63:20" pos:end="63:20">s</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:27" pos:end="63:28">!=</operator> <literal type="number" pos:start="63:30" pos:end="63:30">1</literal></expr>)</condition> <block pos:start="63:33" pos:end="71:5">{<block_content pos:start="67:9" pos:end="69:18">

        <comment type="block" pos:start="65:9" pos:end="65:20">/* marker */</comment>

        <expr_stmt pos:start="67:9" pos:end="67:55"><expr pos:start="67:9" pos:end="67:54"><call pos:start="67:9" pos:end="67:54"><name pos:start="67:9" pos:end="67:14">av_log</name><argument_list pos:start="67:15" pos:end="67:54">(<argument pos:start="67:16" pos:end="67:23"><expr pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:23"><name pos:start="67:16" pos:end="67:16">s</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:23">avctx</name></name></expr></argument>, <argument pos:start="67:26" pos:end="67:37"><expr pos:start="67:26" pos:end="67:37"><name pos:start="67:26" pos:end="67:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="67:40" pos:end="67:53"><expr pos:start="67:40" pos:end="67:53"><literal type="string" pos:start="67:40" pos:end="67:53">"Bad marker\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="69:9" pos:end="69:18">return <expr pos:start="69:16" pos:end="69:17"><operator pos:start="69:16" pos:end="69:16">-</operator><literal type="number" pos:start="69:17" pos:end="69:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="73:5" pos:end="79:5"><if pos:start="73:5" pos:end="79:5">if <condition pos:start="73:8" pos:end="73:31">(<expr pos:start="73:9" pos:end="73:30"><call pos:start="73:9" pos:end="73:25"><name pos:start="73:9" pos:end="73:17">get_bits1</name><argument_list pos:start="73:18" pos:end="73:25">(<argument pos:start="73:19" pos:end="73:24"><expr pos:start="73:19" pos:end="73:24"><operator pos:start="73:19" pos:end="73:19">&amp;</operator><name pos:start="73:20" pos:end="73:24"><name pos:start="73:20" pos:end="73:20">s</name><operator pos:start="73:21" pos:end="73:22">-&gt;</operator><name pos:start="73:23" pos:end="73:24">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="73:27" pos:end="73:28">!=</operator> <literal type="number" pos:start="73:30" pos:end="73:30">0</literal></expr>)</condition> <block pos:start="73:33" pos:end="79:5">{<block_content pos:start="75:9" pos:end="77:18">

        <expr_stmt pos:start="75:9" pos:end="75:56"><expr pos:start="75:9" pos:end="75:55"><call pos:start="75:9" pos:end="75:55"><name pos:start="75:9" pos:end="75:14">av_log</name><argument_list pos:start="75:15" pos:end="75:55">(<argument pos:start="75:16" pos:end="75:23"><expr pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:23"><name pos:start="75:16" pos:end="75:16">s</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:23">avctx</name></name></expr></argument>, <argument pos:start="75:26" pos:end="75:37"><expr pos:start="75:26" pos:end="75:37"><name pos:start="75:26" pos:end="75:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="75:40" pos:end="75:54"><expr pos:start="75:40" pos:end="75:54"><literal type="string" pos:start="75:40" pos:end="75:54">"Bad H263 id\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return>      <comment type="block" pos:start="77:25" pos:end="77:37">/* h263 id */</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:23"><expr pos:start="81:5" pos:end="81:22"><call pos:start="81:5" pos:end="81:22"><name pos:start="81:5" pos:end="81:14">skip_bits1</name><argument_list pos:start="81:15" pos:end="81:22">(<argument pos:start="81:16" pos:end="81:21"><expr pos:start="81:16" pos:end="81:21"><operator pos:start="81:16" pos:end="81:16">&amp;</operator><name pos:start="81:17" pos:end="81:21"><name pos:start="81:17" pos:end="81:17">s</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="81:33" pos:end="81:54">/* split screen off */</comment>

    <expr_stmt pos:start="83:5" pos:end="83:23"><expr pos:start="83:5" pos:end="83:22"><call pos:start="83:5" pos:end="83:22"><name pos:start="83:5" pos:end="83:14">skip_bits1</name><argument_list pos:start="83:15" pos:end="83:22">(<argument pos:start="83:16" pos:end="83:21"><expr pos:start="83:16" pos:end="83:21"><operator pos:start="83:16" pos:end="83:16">&amp;</operator><name pos:start="83:17" pos:end="83:21"><name pos:start="83:17" pos:end="83:17">s</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="83:33" pos:end="83:49">/* camera  off */</comment>

    <expr_stmt pos:start="85:5" pos:end="85:23"><expr pos:start="85:5" pos:end="85:22"><call pos:start="85:5" pos:end="85:22"><name pos:start="85:5" pos:end="85:14">skip_bits1</name><argument_list pos:start="85:15" pos:end="85:22">(<argument pos:start="85:16" pos:end="85:21"><expr pos:start="85:16" pos:end="85:21"><operator pos:start="85:16" pos:end="85:16">&amp;</operator><name pos:start="85:17" pos:end="85:21"><name pos:start="85:17" pos:end="85:17">s</name><operator pos:start="85:18" pos:end="85:19">-&gt;</operator><name pos:start="85:20" pos:end="85:21">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>         <comment type="block" pos:start="85:33" pos:end="85:64">/* freeze picture release off */</comment>



    <expr_stmt pos:start="89:5" pos:end="89:33"><expr pos:start="89:5" pos:end="89:32"><name pos:start="89:5" pos:end="89:10">format</name> <operator pos:start="89:12" pos:end="89:12">=</operator> <call pos:start="89:14" pos:end="89:32"><name pos:start="89:14" pos:end="89:21">get_bits</name><argument_list pos:start="89:22" pos:end="89:32">(<argument pos:start="89:23" pos:end="89:28"><expr pos:start="89:23" pos:end="89:28"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:28"><name pos:start="89:24" pos:end="89:24">s</name><operator pos:start="89:25" pos:end="89:26">-&gt;</operator><name pos:start="89:27" pos:end="89:28">gb</name></name></expr></argument>, <argument pos:start="89:31" pos:end="89:31"><expr pos:start="89:31" pos:end="89:31"><literal type="number" pos:start="89:31" pos:end="89:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="91:5" pos:end="101:6">/*

        0    forbidden

        1    sub-QCIF

        10   QCIF

        7       extended PTYPE (PLUSPTYPE)

    */</comment>



    <if_stmt pos:start="105:5" pos:end="425:5"><if pos:start="105:5" pos:end="159:5">if <condition pos:start="105:8" pos:end="105:35">(<expr pos:start="105:9" pos:end="105:34"><name pos:start="105:9" pos:end="105:14">format</name> <operator pos:start="105:16" pos:end="105:17">!=</operator> <literal type="number" pos:start="105:19" pos:end="105:19">7</literal> <operator pos:start="105:21" pos:end="105:22">&amp;&amp;</operator> <name pos:start="105:24" pos:end="105:29">format</name> <operator pos:start="105:31" pos:end="105:32">!=</operator> <literal type="number" pos:start="105:34" pos:end="105:34">6</literal></expr>)</condition> <block pos:start="105:37" pos:end="159:5">{<block_content pos:start="107:9" pos:end="157:58">

        <expr_stmt pos:start="107:9" pos:end="107:25"><expr pos:start="107:9" pos:end="107:24"><name pos:start="107:9" pos:end="107:20"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:20">h263_plus</name></name> <operator pos:start="107:22" pos:end="107:22">=</operator> <literal type="number" pos:start="107:24" pos:end="107:24">0</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="109:9" pos:end="109:21">/* H.263v1 */</comment>

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:13">width</name> <operator pos:start="111:15" pos:end="111:15">=</operator> <name pos:start="111:17" pos:end="111:41"><name pos:start="111:17" pos:end="111:30">ff_h263_format</name><index pos:start="111:31" pos:end="111:38">[<expr pos:start="111:32" pos:end="111:37"><name pos:start="111:32" pos:end="111:37">format</name></expr>]</index><index pos:start="111:39" pos:end="111:41">[<expr pos:start="111:40" pos:end="111:40"><literal type="number" pos:start="111:40" pos:end="111:40">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:43"><expr pos:start="113:9" pos:end="113:42"><name pos:start="113:9" pos:end="113:14">height</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <name pos:start="113:18" pos:end="113:42"><name pos:start="113:18" pos:end="113:31">ff_h263_format</name><index pos:start="113:32" pos:end="113:39">[<expr pos:start="113:33" pos:end="113:38"><name pos:start="113:33" pos:end="113:38">format</name></expr>]</index><index pos:start="113:40" pos:end="113:42">[<expr pos:start="113:41" pos:end="113:41"><literal type="number" pos:start="113:41" pos:end="113:41">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="115:9" pos:end="117:22"><if pos:start="115:9" pos:end="117:22">if <condition pos:start="115:12" pos:end="115:19">(<expr pos:start="115:13" pos:end="115:18"><operator pos:start="115:13" pos:end="115:13">!</operator><name pos:start="115:14" pos:end="115:18">width</name></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:22"><block_content pos:start="117:13" pos:end="117:22">

            <return pos:start="117:13" pos:end="117:22">return <expr pos:start="117:20" pos:end="117:21"><operator pos:start="117:20" pos:end="117:20">-</operator><literal type="number" pos:start="117:21" pos:end="117:21">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="121:9" pos:end="121:61"><expr pos:start="121:9" pos:end="121:60"><name pos:start="121:9" pos:end="121:20"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:20">pict_type</name></name> <operator pos:start="121:22" pos:end="121:22">=</operator> <name pos:start="121:24" pos:end="121:40">AV_PICTURE_TYPE_I</name> <operator pos:start="121:42" pos:end="121:42">+</operator> <call pos:start="121:44" pos:end="121:60"><name pos:start="121:44" pos:end="121:52">get_bits1</name><argument_list pos:start="121:53" pos:end="121:60">(<argument pos:start="121:54" pos:end="121:59"><expr pos:start="121:54" pos:end="121:59"><operator pos:start="121:54" pos:end="121:54">&amp;</operator><name pos:start="121:55" pos:end="121:59"><name pos:start="121:55" pos:end="121:55">s</name><operator pos:start="121:56" pos:end="121:57">-&gt;</operator><name pos:start="121:58" pos:end="121:59">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:49"><expr pos:start="125:9" pos:end="125:48"><name pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:9">s</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:28">h263_long_vectors</name></name> <operator pos:start="125:30" pos:end="125:30">=</operator> <call pos:start="125:32" pos:end="125:48"><name pos:start="125:32" pos:end="125:40">get_bits1</name><argument_list pos:start="125:41" pos:end="125:48">(<argument pos:start="125:42" pos:end="125:47"><expr pos:start="125:42" pos:end="125:47"><operator pos:start="125:42" pos:end="125:42">&amp;</operator><name pos:start="125:43" pos:end="125:47"><name pos:start="125:43" pos:end="125:43">s</name><operator pos:start="125:44" pos:end="125:45">-&gt;</operator><name pos:start="125:46" pos:end="125:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="129:9" pos:end="135:9"><if pos:start="129:9" pos:end="135:9">if <condition pos:start="129:12" pos:end="129:35">(<expr pos:start="129:13" pos:end="129:34"><call pos:start="129:13" pos:end="129:29"><name pos:start="129:13" pos:end="129:21">get_bits1</name><argument_list pos:start="129:22" pos:end="129:29">(<argument pos:start="129:23" pos:end="129:28"><expr pos:start="129:23" pos:end="129:28"><operator pos:start="129:23" pos:end="129:23">&amp;</operator><name pos:start="129:24" pos:end="129:28"><name pos:start="129:24" pos:end="129:24">s</name><operator pos:start="129:25" pos:end="129:26">-&gt;</operator><name pos:start="129:27" pos:end="129:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="129:31" pos:end="129:32">!=</operator> <literal type="number" pos:start="129:34" pos:end="129:34">0</literal></expr>)</condition> <block pos:start="129:37" pos:end="135:9">{<block_content pos:start="131:13" pos:end="133:22">

            <expr_stmt pos:start="131:13" pos:end="131:71"><expr pos:start="131:13" pos:end="131:70"><call pos:start="131:13" pos:end="131:70"><name pos:start="131:13" pos:end="131:18">av_log</name><argument_list pos:start="131:19" pos:end="131:70">(<argument pos:start="131:20" pos:end="131:27"><expr pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:27"><name pos:start="131:20" pos:end="131:20">s</name><operator pos:start="131:21" pos:end="131:22">-&gt;</operator><name pos:start="131:23" pos:end="131:27">avctx</name></name></expr></argument>, <argument pos:start="131:30" pos:end="131:41"><expr pos:start="131:30" pos:end="131:41"><name pos:start="131:30" pos:end="131:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="131:44" pos:end="131:69"><expr pos:start="131:44" pos:end="131:69"><literal type="string" pos:start="131:44" pos:end="131:69">"H263 SAC not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="133:13" pos:end="133:22">return <expr pos:start="133:20" pos:end="133:21"><operator pos:start="133:20" pos:end="133:20">-</operator><literal type="number" pos:start="133:21" pos:end="133:21">1</literal></expr>;</return> <comment type="block" pos:start="133:24" pos:end="133:37">/* SAC: off */</comment>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:35"><expr pos:start="137:9" pos:end="137:34"><name pos:start="137:9" pos:end="137:15"><name pos:start="137:9" pos:end="137:9">s</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:15">obmc</name></name><operator pos:start="137:16" pos:end="137:16">=</operator> <call pos:start="137:18" pos:end="137:34"><name pos:start="137:18" pos:end="137:26">get_bits1</name><argument_list pos:start="137:27" pos:end="137:34">(<argument pos:start="137:28" pos:end="137:33"><expr pos:start="137:28" pos:end="137:33"><operator pos:start="137:28" pos:end="137:28">&amp;</operator><name pos:start="137:29" pos:end="137:33"><name pos:start="137:29" pos:end="137:29">s</name><operator pos:start="137:30" pos:end="137:31">-&gt;</operator><name pos:start="137:32" pos:end="137:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="137:37" pos:end="137:66">/* Advanced prediction mode */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:61"><expr pos:start="139:9" pos:end="139:60"><name pos:start="139:9" pos:end="139:26"><name pos:start="139:9" pos:end="139:9">s</name><operator pos:start="139:10" pos:end="139:11">-&gt;</operator><name pos:start="139:12" pos:end="139:26">unrestricted_mv</name></name> <operator pos:start="139:28" pos:end="139:28">=</operator> <name pos:start="139:30" pos:end="139:49"><name pos:start="139:30" pos:end="139:30">s</name><operator pos:start="139:31" pos:end="139:32">-&gt;</operator><name pos:start="139:33" pos:end="139:49">h263_long_vectors</name></name> <operator pos:start="139:51" pos:end="139:52">||</operator> <name pos:start="139:54" pos:end="139:60"><name pos:start="139:54" pos:end="139:54">s</name><operator pos:start="139:55" pos:end="139:56">-&gt;</operator><name pos:start="139:57" pos:end="139:60">obmc</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="143:9" pos:end="143:40"><expr pos:start="143:9" pos:end="143:39"><name pos:start="143:9" pos:end="143:19"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:19">pb_frame</name></name> <operator pos:start="143:21" pos:end="143:21">=</operator> <call pos:start="143:23" pos:end="143:39"><name pos:start="143:23" pos:end="143:31">get_bits1</name><argument_list pos:start="143:32" pos:end="143:39">(<argument pos:start="143:33" pos:end="143:38"><expr pos:start="143:33" pos:end="143:38"><operator pos:start="143:33" pos:end="143:33">&amp;</operator><name pos:start="143:34" pos:end="143:38"><name pos:start="143:34" pos:end="143:34">s</name><operator pos:start="143:35" pos:end="143:36">-&gt;</operator><name pos:start="143:37" pos:end="143:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:58"><expr pos:start="145:9" pos:end="145:57"><name pos:start="145:9" pos:end="145:24"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:24">chroma_qscale</name></name><operator pos:start="145:25" pos:end="145:25">=</operator> <name pos:start="145:27" pos:end="145:35"><name pos:start="145:27" pos:end="145:27">s</name><operator pos:start="145:28" pos:end="145:29">-&gt;</operator><name pos:start="145:30" pos:end="145:35">qscale</name></name> <operator pos:start="145:37" pos:end="145:37">=</operator> <call pos:start="145:39" pos:end="145:57"><name pos:start="145:39" pos:end="145:46">get_bits</name><argument_list pos:start="145:47" pos:end="145:57">(<argument pos:start="145:48" pos:end="145:53"><expr pos:start="145:48" pos:end="145:53"><operator pos:start="145:48" pos:end="145:48">&amp;</operator><name pos:start="145:49" pos:end="145:53"><name pos:start="145:49" pos:end="145:49">s</name><operator pos:start="145:50" pos:end="145:51">-&gt;</operator><name pos:start="145:52" pos:end="145:53">gb</name></name></expr></argument>, <argument pos:start="145:56" pos:end="145:56"><expr pos:start="145:56" pos:end="145:56"><literal type="number" pos:start="145:56" pos:end="145:56">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:27"><expr pos:start="147:9" pos:end="147:26"><call pos:start="147:9" pos:end="147:26"><name pos:start="147:9" pos:end="147:18">skip_bits1</name><argument_list pos:start="147:19" pos:end="147:26">(<argument pos:start="147:20" pos:end="147:25"><expr pos:start="147:20" pos:end="147:25"><operator pos:start="147:20" pos:end="147:20">&amp;</operator><name pos:start="147:21" pos:end="147:25"><name pos:start="147:21" pos:end="147:21">s</name><operator pos:start="147:22" pos:end="147:23">-&gt;</operator><name pos:start="147:24" pos:end="147:25">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="147:29" pos:end="147:74">/* Continuous Presence Multipoint mode: off */</comment>



        <expr_stmt pos:start="151:9" pos:end="151:25"><expr pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:16"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:16">width</name></name> <operator pos:start="151:18" pos:end="151:18">=</operator> <name pos:start="151:20" pos:end="151:24">width</name></expr>;</expr_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:27"><expr pos:start="153:9" pos:end="153:26"><name pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:17">height</name></name> <operator pos:start="153:19" pos:end="153:19">=</operator> <name pos:start="153:21" pos:end="153:26">height</name></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:59"><expr pos:start="155:9" pos:end="155:58"><name pos:start="155:9" pos:end="155:37"><name pos:start="155:9" pos:end="155:9">s</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:16">avctx</name><operator pos:start="155:17" pos:end="155:18">-&gt;</operator><name pos:start="155:19" pos:end="155:37">sample_aspect_ratio</name></name><operator pos:start="155:38" pos:end="155:38">=</operator> <operator pos:start="155:40" pos:end="155:40">(</operator><name pos:start="155:41" pos:end="155:50">AVRational</name><operator pos:start="155:51" pos:end="155:51">)</operator><block pos:start="155:52" pos:end="155:58">{<expr pos:start="155:53" pos:end="155:54"><literal type="number" pos:start="155:53" pos:end="155:54">12</literal></expr>,<expr pos:start="155:56" pos:end="155:57"><literal type="number" pos:start="155:56" pos:end="155:57">11</literal></expr>}</block></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:58"><expr pos:start="157:9" pos:end="157:57"><name pos:start="157:9" pos:end="157:27"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:16">avctx</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:27">framerate</name></name> <operator pos:start="157:29" pos:end="157:29">=</operator> <operator pos:start="157:31" pos:end="157:31">(</operator><name pos:start="157:32" pos:end="157:41">AVRational</name><operator pos:start="157:42" pos:end="157:42">)</operator><block pos:start="157:43" pos:end="157:57">{ <expr pos:start="157:45" pos:end="157:49"><literal type="number" pos:start="157:45" pos:end="157:49">30000</literal></expr>, <expr pos:start="157:52" pos:end="157:55"><literal type="number" pos:start="157:52" pos:end="157:55">1001</literal></expr> }</block></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="159:7" pos:end="425:5">else <block pos:start="159:12" pos:end="425:5">{<block_content pos:start="161:9" pos:end="423:40">

        <decl_stmt pos:start="161:9" pos:end="161:17"><decl pos:start="161:9" pos:end="161:16"><type pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:11">int</name></type> <name pos:start="161:13" pos:end="161:16">ufep</name></decl>;</decl_stmt>



        <comment type="block" pos:start="165:9" pos:end="165:21">/* H.263v2 */</comment>

        <expr_stmt pos:start="167:9" pos:end="167:25"><expr pos:start="167:9" pos:end="167:24"><name pos:start="167:9" pos:end="167:20"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:20">h263_plus</name></name> <operator pos:start="167:22" pos:end="167:22">=</operator> <literal type="number" pos:start="167:24" pos:end="167:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="169:9" pos:end="169:35"><expr pos:start="169:9" pos:end="169:34"><name pos:start="169:9" pos:end="169:12">ufep</name> <operator pos:start="169:14" pos:end="169:14">=</operator> <call pos:start="169:16" pos:end="169:34"><name pos:start="169:16" pos:end="169:23">get_bits</name><argument_list pos:start="169:24" pos:end="169:34">(<argument pos:start="169:25" pos:end="169:30"><expr pos:start="169:25" pos:end="169:30"><operator pos:start="169:25" pos:end="169:25">&amp;</operator><name pos:start="169:26" pos:end="169:30"><name pos:start="169:26" pos:end="169:26">s</name><operator pos:start="169:27" pos:end="169:28">-&gt;</operator><name pos:start="169:29" pos:end="169:30">gb</name></name></expr></argument>, <argument pos:start="169:33" pos:end="169:33"><expr pos:start="169:33" pos:end="169:33"><literal type="number" pos:start="169:33" pos:end="169:33">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="169:37" pos:end="169:68">/* Update Full Extended PTYPE */</comment>



        <comment type="block" pos:start="173:9" pos:end="173:50">/* ufep other than 0 and 1 are reserved */</comment>

        <if_stmt pos:start="175:9" pos:end="243:9"><if pos:start="175:9" pos:end="237:9">if <condition pos:start="175:12" pos:end="175:22">(<expr pos:start="175:13" pos:end="175:21"><name pos:start="175:13" pos:end="175:16">ufep</name> <operator pos:start="175:18" pos:end="175:19">==</operator> <literal type="number" pos:start="175:21" pos:end="175:21">1</literal></expr>)</condition> <block pos:start="175:24" pos:end="237:9">{<block_content pos:start="179:13" pos:end="235:33">

            <comment type="block" pos:start="177:13" pos:end="177:25">/* OPPTYPE */</comment>

            <expr_stmt pos:start="179:13" pos:end="179:41"><expr pos:start="179:13" pos:end="179:40"><name pos:start="179:13" pos:end="179:18">format</name> <operator pos:start="179:20" pos:end="179:20">=</operator> <call pos:start="179:22" pos:end="179:40"><name pos:start="179:22" pos:end="179:29">get_bits</name><argument_list pos:start="179:30" pos:end="179:40">(<argument pos:start="179:31" pos:end="179:36"><expr pos:start="179:31" pos:end="179:36"><operator pos:start="179:31" pos:end="179:31">&amp;</operator><name pos:start="179:32" pos:end="179:36"><name pos:start="179:32" pos:end="179:32">s</name><operator pos:start="179:33" pos:end="179:34">-&gt;</operator><name pos:start="179:35" pos:end="179:36">gb</name></name></expr></argument>, <argument pos:start="179:39" pos:end="179:39"><expr pos:start="179:39" pos:end="179:39"><literal type="number" pos:start="179:39" pos:end="179:39">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="181:13" pos:end="181:62"><expr pos:start="181:13" pos:end="181:61"><call pos:start="181:13" pos:end="181:61"><name pos:start="181:13" pos:end="181:19">av_dlog</name><argument_list pos:start="181:20" pos:end="181:61">(<argument pos:start="181:21" pos:end="181:28"><expr pos:start="181:21" pos:end="181:28"><name pos:start="181:21" pos:end="181:28"><name pos:start="181:21" pos:end="181:21">s</name><operator pos:start="181:22" pos:end="181:23">-&gt;</operator><name pos:start="181:24" pos:end="181:28">avctx</name></name></expr></argument>, <argument pos:start="181:31" pos:end="181:52"><expr pos:start="181:31" pos:end="181:52"><literal type="string" pos:start="181:31" pos:end="181:52">"ufep=1, format: %d\n"</literal></expr></argument>, <argument pos:start="181:55" pos:end="181:60"><expr pos:start="181:55" pos:end="181:60"><name pos:start="181:55" pos:end="181:60">format</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="183:13" pos:end="183:45"><expr pos:start="183:13" pos:end="183:44"><name pos:start="183:13" pos:end="183:25"><name pos:start="183:13" pos:end="183:13">s</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:25">custom_pcf</name></name><operator pos:start="183:26" pos:end="183:26">=</operator> <call pos:start="183:28" pos:end="183:44"><name pos:start="183:28" pos:end="183:36">get_bits1</name><argument_list pos:start="183:37" pos:end="183:44">(<argument pos:start="183:38" pos:end="183:43"><expr pos:start="183:38" pos:end="183:43"><operator pos:start="183:38" pos:end="183:38">&amp;</operator><name pos:start="183:39" pos:end="183:43"><name pos:start="183:39" pos:end="183:39">s</name><operator pos:start="183:40" pos:end="183:41">-&gt;</operator><name pos:start="183:42" pos:end="183:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:43"><expr pos:start="185:13" pos:end="185:42"><name pos:start="185:13" pos:end="185:22"><name pos:start="185:13" pos:end="185:13">s</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:22">umvplus</name></name> <operator pos:start="185:24" pos:end="185:24">=</operator> <call pos:start="185:26" pos:end="185:42"><name pos:start="185:26" pos:end="185:34">get_bits1</name><argument_list pos:start="185:35" pos:end="185:42">(<argument pos:start="185:36" pos:end="185:41"><expr pos:start="185:36" pos:end="185:41"><operator pos:start="185:36" pos:end="185:36">&amp;</operator><name pos:start="185:37" pos:end="185:41"><name pos:start="185:37" pos:end="185:37">s</name><operator pos:start="185:38" pos:end="185:39">-&gt;</operator><name pos:start="185:40" pos:end="185:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="185:45" pos:end="185:76">/* Unrestricted Motion Vector */</comment>

            <if_stmt pos:start="187:13" pos:end="191:13"><if pos:start="187:13" pos:end="191:13">if <condition pos:start="187:16" pos:end="187:39">(<expr pos:start="187:17" pos:end="187:38"><call pos:start="187:17" pos:end="187:33"><name pos:start="187:17" pos:end="187:25">get_bits1</name><argument_list pos:start="187:26" pos:end="187:33">(<argument pos:start="187:27" pos:end="187:32"><expr pos:start="187:27" pos:end="187:32"><operator pos:start="187:27" pos:end="187:27">&amp;</operator><name pos:start="187:28" pos:end="187:32"><name pos:start="187:28" pos:end="187:28">s</name><operator pos:start="187:29" pos:end="187:30">-&gt;</operator><name pos:start="187:31" pos:end="187:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="187:35" pos:end="187:36">!=</operator> <literal type="number" pos:start="187:38" pos:end="187:38">0</literal></expr>)</condition> <block pos:start="187:41" pos:end="191:13">{<block_content pos:start="189:17" pos:end="189:103">

                <expr_stmt pos:start="189:17" pos:end="189:103"><expr pos:start="189:17" pos:end="189:102"><call pos:start="189:17" pos:end="189:102"><name pos:start="189:17" pos:end="189:22">av_log</name><argument_list pos:start="189:23" pos:end="189:102">(<argument pos:start="189:24" pos:end="189:31"><expr pos:start="189:24" pos:end="189:31"><name pos:start="189:24" pos:end="189:31"><name pos:start="189:24" pos:end="189:24">s</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:31">avctx</name></name></expr></argument>, <argument pos:start="189:34" pos:end="189:45"><expr pos:start="189:34" pos:end="189:45"><name pos:start="189:34" pos:end="189:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:48" pos:end="189:101"><expr pos:start="189:48" pos:end="189:101"><literal type="string" pos:start="189:48" pos:end="189:101">"Syntax-based Arithmetic Coding (SAC) not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="193:13" pos:end="193:39"><expr pos:start="193:13" pos:end="193:38"><name pos:start="193:13" pos:end="193:19"><name pos:start="193:13" pos:end="193:13">s</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:19">obmc</name></name><operator pos:start="193:20" pos:end="193:20">=</operator> <call pos:start="193:22" pos:end="193:38"><name pos:start="193:22" pos:end="193:30">get_bits1</name><argument_list pos:start="193:31" pos:end="193:38">(<argument pos:start="193:32" pos:end="193:37"><expr pos:start="193:32" pos:end="193:37"><operator pos:start="193:32" pos:end="193:32">&amp;</operator><name pos:start="193:33" pos:end="193:37"><name pos:start="193:33" pos:end="193:33">s</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="193:41" pos:end="193:70">/* Advanced prediction mode */</comment>

            <expr_stmt pos:start="195:13" pos:end="195:44"><expr pos:start="195:13" pos:end="195:43"><name pos:start="195:13" pos:end="195:23"><name pos:start="195:13" pos:end="195:13">s</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:23">h263_aic</name></name> <operator pos:start="195:25" pos:end="195:25">=</operator> <call pos:start="195:27" pos:end="195:43"><name pos:start="195:27" pos:end="195:35">get_bits1</name><argument_list pos:start="195:36" pos:end="195:43">(<argument pos:start="195:37" pos:end="195:42"><expr pos:start="195:37" pos:end="195:42"><operator pos:start="195:37" pos:end="195:37">&amp;</operator><name pos:start="195:38" pos:end="195:42"><name pos:start="195:38" pos:end="195:38">s</name><operator pos:start="195:39" pos:end="195:40">-&gt;</operator><name pos:start="195:41" pos:end="195:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="195:46" pos:end="195:78">/* Advanced Intra Coding (AIC) */</comment>

            <expr_stmt pos:start="197:13" pos:end="197:46"><expr pos:start="197:13" pos:end="197:45"><name pos:start="197:13" pos:end="197:26"><name pos:start="197:13" pos:end="197:13">s</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:26">loop_filter</name></name><operator pos:start="197:27" pos:end="197:27">=</operator> <call pos:start="197:29" pos:end="197:45"><name pos:start="197:29" pos:end="197:37">get_bits1</name><argument_list pos:start="197:38" pos:end="197:45">(<argument pos:start="197:39" pos:end="197:44"><expr pos:start="197:39" pos:end="197:44"><operator pos:start="197:39" pos:end="197:39">&amp;</operator><name pos:start="197:40" pos:end="197:44"><name pos:start="197:40" pos:end="197:40">s</name><operator pos:start="197:41" pos:end="197:42">-&gt;</operator><name pos:start="197:43" pos:end="197:44">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:73"><expr pos:start="199:13" pos:end="199:72"><name pos:start="199:13" pos:end="199:30"><name pos:start="199:13" pos:end="199:13">s</name><operator pos:start="199:14" pos:end="199:15">-&gt;</operator><name pos:start="199:16" pos:end="199:30">unrestricted_mv</name></name> <operator pos:start="199:32" pos:end="199:32">=</operator> <name pos:start="199:34" pos:end="199:43"><name pos:start="199:34" pos:end="199:34">s</name><operator pos:start="199:35" pos:end="199:36">-&gt;</operator><name pos:start="199:37" pos:end="199:43">umvplus</name></name> <operator pos:start="199:45" pos:end="199:46">||</operator> <name pos:start="199:48" pos:end="199:54"><name pos:start="199:48" pos:end="199:48">s</name><operator pos:start="199:49" pos:end="199:50">-&gt;</operator><name pos:start="199:51" pos:end="199:54">obmc</name></name> <operator pos:start="199:56" pos:end="199:57">||</operator> <name pos:start="199:59" pos:end="199:72"><name pos:start="199:59" pos:end="199:59">s</name><operator pos:start="199:60" pos:end="199:61">-&gt;</operator><name pos:start="199:62" pos:end="199:72">loop_filter</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="201:13" pos:end="203:35"><if pos:start="201:13" pos:end="203:35">if<condition pos:start="201:15" pos:end="201:32">(<expr pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:31"><name pos:start="201:16" pos:end="201:16">s</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:23">avctx</name><operator pos:start="201:24" pos:end="201:25">-&gt;</operator><name pos:start="201:26" pos:end="201:31">lowres</name></name></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:35"><block_content pos:start="203:17" pos:end="203:35">

                <expr_stmt pos:start="203:17" pos:end="203:35"><expr pos:start="203:17" pos:end="203:34"><name pos:start="203:17" pos:end="203:30"><name pos:start="203:17" pos:end="203:17">s</name><operator pos:start="203:18" pos:end="203:19">-&gt;</operator><name pos:start="203:20" pos:end="203:30">loop_filter</name></name> <operator pos:start="203:32" pos:end="203:32">=</operator> <literal type="number" pos:start="203:34" pos:end="203:34">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="207:13" pos:end="207:56"><expr pos:start="207:13" pos:end="207:55"><name pos:start="207:13" pos:end="207:36"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:36">h263_slice_structured</name></name><operator pos:start="207:37" pos:end="207:37">=</operator> <call pos:start="207:39" pos:end="207:55"><name pos:start="207:39" pos:end="207:47">get_bits1</name><argument_list pos:start="207:48" pos:end="207:55">(<argument pos:start="207:49" pos:end="207:54"><expr pos:start="207:49" pos:end="207:54"><operator pos:start="207:49" pos:end="207:49">&amp;</operator><name pos:start="207:50" pos:end="207:54"><name pos:start="207:50" pos:end="207:50">s</name><operator pos:start="207:51" pos:end="207:52">-&gt;</operator><name pos:start="207:53" pos:end="207:54">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="209:13" pos:end="213:13"><if pos:start="209:13" pos:end="213:13">if <condition pos:start="209:16" pos:end="209:39">(<expr pos:start="209:17" pos:end="209:38"><call pos:start="209:17" pos:end="209:33"><name pos:start="209:17" pos:end="209:25">get_bits1</name><argument_list pos:start="209:26" pos:end="209:33">(<argument pos:start="209:27" pos:end="209:32"><expr pos:start="209:27" pos:end="209:32"><operator pos:start="209:27" pos:end="209:27">&amp;</operator><name pos:start="209:28" pos:end="209:32"><name pos:start="209:28" pos:end="209:28">s</name><operator pos:start="209:29" pos:end="209:30">-&gt;</operator><name pos:start="209:31" pos:end="209:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="209:35" pos:end="209:36">!=</operator> <literal type="number" pos:start="209:38" pos:end="209:38">0</literal></expr>)</condition> <block pos:start="209:41" pos:end="213:13">{<block_content pos:start="211:17" pos:end="211:94">

                <expr_stmt pos:start="211:17" pos:end="211:94"><expr pos:start="211:17" pos:end="211:93"><call pos:start="211:17" pos:end="211:93"><name pos:start="211:17" pos:end="211:22">av_log</name><argument_list pos:start="211:23" pos:end="211:93">(<argument pos:start="211:24" pos:end="211:31"><expr pos:start="211:24" pos:end="211:31"><name pos:start="211:24" pos:end="211:31"><name pos:start="211:24" pos:end="211:24">s</name><operator pos:start="211:25" pos:end="211:26">-&gt;</operator><name pos:start="211:27" pos:end="211:31">avctx</name></name></expr></argument>, <argument pos:start="211:34" pos:end="211:45"><expr pos:start="211:34" pos:end="211:45"><name pos:start="211:34" pos:end="211:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="211:48" pos:end="211:92"><expr pos:start="211:48" pos:end="211:92"><literal type="string" pos:start="211:48" pos:end="211:92">"Reference Picture Selection not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="215:13" pos:end="219:13"><if pos:start="215:13" pos:end="219:13">if <condition pos:start="215:16" pos:end="215:39">(<expr pos:start="215:17" pos:end="215:38"><call pos:start="215:17" pos:end="215:33"><name pos:start="215:17" pos:end="215:25">get_bits1</name><argument_list pos:start="215:26" pos:end="215:33">(<argument pos:start="215:27" pos:end="215:32"><expr pos:start="215:27" pos:end="215:32"><operator pos:start="215:27" pos:end="215:27">&amp;</operator><name pos:start="215:28" pos:end="215:32"><name pos:start="215:28" pos:end="215:28">s</name><operator pos:start="215:29" pos:end="215:30">-&gt;</operator><name pos:start="215:31" pos:end="215:32">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="215:35" pos:end="215:36">!=</operator> <literal type="number" pos:start="215:38" pos:end="215:38">0</literal></expr>)</condition> <block pos:start="215:41" pos:end="219:13">{<block_content pos:start="217:17" pos:end="217:95">

                <expr_stmt pos:start="217:17" pos:end="217:95"><expr pos:start="217:17" pos:end="217:94"><call pos:start="217:17" pos:end="217:94"><name pos:start="217:17" pos:end="217:22">av_log</name><argument_list pos:start="217:23" pos:end="217:94">(<argument pos:start="217:24" pos:end="217:31"><expr pos:start="217:24" pos:end="217:31"><name pos:start="217:24" pos:end="217:31"><name pos:start="217:24" pos:end="217:24">s</name><operator pos:start="217:25" pos:end="217:26">-&gt;</operator><name pos:start="217:27" pos:end="217:31">avctx</name></name></expr></argument>, <argument pos:start="217:34" pos:end="217:45"><expr pos:start="217:34" pos:end="217:45"><name pos:start="217:34" pos:end="217:45">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="217:48" pos:end="217:93"><expr pos:start="217:48" pos:end="217:93"><literal type="string" pos:start="217:48" pos:end="217:93">"Independent Segment Decoding not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="221:13" pos:end="221:48"><expr pos:start="221:13" pos:end="221:47"><name pos:start="221:13" pos:end="221:28"><name pos:start="221:13" pos:end="221:13">s</name><operator pos:start="221:14" pos:end="221:15">-&gt;</operator><name pos:start="221:16" pos:end="221:28">alt_inter_vlc</name></name><operator pos:start="221:29" pos:end="221:29">=</operator> <call pos:start="221:31" pos:end="221:47"><name pos:start="221:31" pos:end="221:39">get_bits1</name><argument_list pos:start="221:40" pos:end="221:47">(<argument pos:start="221:41" pos:end="221:46"><expr pos:start="221:41" pos:end="221:46"><operator pos:start="221:41" pos:end="221:41">&amp;</operator><name pos:start="221:42" pos:end="221:46"><name pos:start="221:42" pos:end="221:42">s</name><operator pos:start="221:43" pos:end="221:44">-&gt;</operator><name pos:start="221:45" pos:end="221:46">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="223:13" pos:end="223:49"><expr pos:start="223:13" pos:end="223:48"><name pos:start="223:13" pos:end="223:29"><name pos:start="223:13" pos:end="223:13">s</name><operator pos:start="223:14" pos:end="223:15">-&gt;</operator><name pos:start="223:16" pos:end="223:29">modified_quant</name></name><operator pos:start="223:30" pos:end="223:30">=</operator> <call pos:start="223:32" pos:end="223:48"><name pos:start="223:32" pos:end="223:40">get_bits1</name><argument_list pos:start="223:41" pos:end="223:48">(<argument pos:start="223:42" pos:end="223:47"><expr pos:start="223:42" pos:end="223:47"><operator pos:start="223:42" pos:end="223:42">&amp;</operator><name pos:start="223:43" pos:end="223:47"><name pos:start="223:43" pos:end="223:43">s</name><operator pos:start="223:44" pos:end="223:45">-&gt;</operator><name pos:start="223:46" pos:end="223:47">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="225:13" pos:end="227:68"><if pos:start="225:13" pos:end="227:68">if<condition pos:start="225:15" pos:end="225:33">(<expr pos:start="225:16" pos:end="225:32"><name pos:start="225:16" pos:end="225:32"><name pos:start="225:16" pos:end="225:16">s</name><operator pos:start="225:17" pos:end="225:18">-&gt;</operator><name pos:start="225:19" pos:end="225:32">modified_quant</name></name></expr>)</condition><block type="pseudo" pos:start="227:17" pos:end="227:68"><block_content pos:start="227:17" pos:end="227:68">

                <expr_stmt pos:start="227:17" pos:end="227:68"><expr pos:start="227:17" pos:end="227:67"><name pos:start="227:17" pos:end="227:38"><name pos:start="227:17" pos:end="227:17">s</name><operator pos:start="227:18" pos:end="227:19">-&gt;</operator><name pos:start="227:20" pos:end="227:38">chroma_qscale_table</name></name><operator pos:start="227:39" pos:end="227:39">=</operator> <name pos:start="227:41" pos:end="227:67">ff_h263_chroma_qscale_table</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="231:13" pos:end="231:33"><expr pos:start="231:13" pos:end="231:32"><call pos:start="231:13" pos:end="231:32"><name pos:start="231:13" pos:end="231:21">skip_bits</name><argument_list pos:start="231:22" pos:end="231:32">(<argument pos:start="231:23" pos:end="231:28"><expr pos:start="231:23" pos:end="231:28"><operator pos:start="231:23" pos:end="231:23">&amp;</operator><name pos:start="231:24" pos:end="231:28"><name pos:start="231:24" pos:end="231:24">s</name><operator pos:start="231:25" pos:end="231:26">-&gt;</operator><name pos:start="231:27" pos:end="231:28">gb</name></name></expr></argument>, <argument pos:start="231:31" pos:end="231:31"><expr pos:start="231:31" pos:end="231:31"><literal type="number" pos:start="231:31" pos:end="231:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="231:35" pos:end="231:68">/* Prevent start code emulation */</comment>



            <expr_stmt pos:start="235:13" pos:end="235:33"><expr pos:start="235:13" pos:end="235:32"><call pos:start="235:13" pos:end="235:32"><name pos:start="235:13" pos:end="235:21">skip_bits</name><argument_list pos:start="235:22" pos:end="235:32">(<argument pos:start="235:23" pos:end="235:28"><expr pos:start="235:23" pos:end="235:28"><operator pos:start="235:23" pos:end="235:23">&amp;</operator><name pos:start="235:24" pos:end="235:28"><name pos:start="235:24" pos:end="235:24">s</name><operator pos:start="235:25" pos:end="235:26">-&gt;</operator><name pos:start="235:27" pos:end="235:28">gb</name></name></expr></argument>, <argument pos:start="235:31" pos:end="235:31"><expr pos:start="235:31" pos:end="235:31"><literal type="number" pos:start="235:31" pos:end="235:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="235:35" pos:end="235:48">/* Reserved */</comment>

        </block_content>}</block></if> <if type="elseif" pos:start="237:11" pos:end="243:9">else if <condition pos:start="237:19" pos:end="237:29">(<expr pos:start="237:20" pos:end="237:28"><name pos:start="237:20" pos:end="237:23">ufep</name> <operator pos:start="237:25" pos:end="237:26">!=</operator> <literal type="number" pos:start="237:28" pos:end="237:28">0</literal></expr>)</condition> <block pos:start="237:31" pos:end="243:9">{<block_content pos:start="239:13" pos:end="241:22">

            <expr_stmt pos:start="239:13" pos:end="239:73"><expr pos:start="239:13" pos:end="239:72"><call pos:start="239:13" pos:end="239:72"><name pos:start="239:13" pos:end="239:18">av_log</name><argument_list pos:start="239:19" pos:end="239:72">(<argument pos:start="239:20" pos:end="239:27"><expr pos:start="239:20" pos:end="239:27"><name pos:start="239:20" pos:end="239:27"><name pos:start="239:20" pos:end="239:20">s</name><operator pos:start="239:21" pos:end="239:22">-&gt;</operator><name pos:start="239:23" pos:end="239:27">avctx</name></name></expr></argument>, <argument pos:start="239:30" pos:end="239:41"><expr pos:start="239:30" pos:end="239:41"><name pos:start="239:30" pos:end="239:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="239:44" pos:end="239:65"><expr pos:start="239:44" pos:end="239:65"><literal type="string" pos:start="239:44" pos:end="239:65">"Bad UFEP type (%d)\n"</literal></expr></argument>, <argument pos:start="239:68" pos:end="239:71"><expr pos:start="239:68" pos:end="239:71"><name pos:start="239:68" pos:end="239:71">ufep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="241:13" pos:end="241:22">return <expr pos:start="241:20" pos:end="241:21"><operator pos:start="241:20" pos:end="241:20">-</operator><literal type="number" pos:start="241:21" pos:end="241:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <comment type="block" pos:start="247:9" pos:end="247:21">/* MPPTYPE */</comment>

        <expr_stmt pos:start="249:9" pos:end="249:43"><expr pos:start="249:9" pos:end="249:42"><name pos:start="249:9" pos:end="249:20"><name pos:start="249:9" pos:end="249:9">s</name><operator pos:start="249:10" pos:end="249:11">-&gt;</operator><name pos:start="249:12" pos:end="249:20">pict_type</name></name> <operator pos:start="249:22" pos:end="249:22">=</operator> <call pos:start="249:24" pos:end="249:42"><name pos:start="249:24" pos:end="249:31">get_bits</name><argument_list pos:start="249:32" pos:end="249:42">(<argument pos:start="249:33" pos:end="249:38"><expr pos:start="249:33" pos:end="249:38"><operator pos:start="249:33" pos:end="249:33">&amp;</operator><name pos:start="249:34" pos:end="249:38"><name pos:start="249:34" pos:end="249:34">s</name><operator pos:start="249:35" pos:end="249:36">-&gt;</operator><name pos:start="249:37" pos:end="249:38">gb</name></name></expr></argument>, <argument pos:start="249:41" pos:end="249:41"><expr pos:start="249:41" pos:end="249:41"><literal type="number" pos:start="249:41" pos:end="249:41">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <switch pos:start="251:9" pos:end="267:9">switch<condition pos:start="251:15" pos:end="251:28">(<expr pos:start="251:16" pos:end="251:27"><name pos:start="251:16" pos:end="251:27"><name pos:start="251:16" pos:end="251:16">s</name><operator pos:start="251:17" pos:end="251:18">-&gt;</operator><name pos:start="251:19" pos:end="251:27">pict_type</name></name></expr>)</condition><block pos:start="251:29" pos:end="267:9">{<block_content pos:start="253:9" pos:end="265:22">

        <case pos:start="253:9" pos:end="253:15">case <expr pos:start="253:14" pos:end="253:14"><literal type="number" pos:start="253:14" pos:end="253:14">0</literal></expr>:</case> <expr_stmt pos:start="253:17" pos:end="253:48"><expr pos:start="253:17" pos:end="253:47"><name pos:start="253:17" pos:end="253:28"><name pos:start="253:17" pos:end="253:17">s</name><operator pos:start="253:18" pos:end="253:19">-&gt;</operator><name pos:start="253:20" pos:end="253:28">pict_type</name></name><operator pos:start="253:29" pos:end="253:29">=</operator> <name pos:start="253:31" pos:end="253:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt><break pos:start="253:49" pos:end="253:54">break;</break>

        <case pos:start="255:9" pos:end="255:15">case <expr pos:start="255:14" pos:end="255:14"><literal type="number" pos:start="255:14" pos:end="255:14">1</literal></expr>:</case> <expr_stmt pos:start="255:17" pos:end="255:48"><expr pos:start="255:17" pos:end="255:47"><name pos:start="255:17" pos:end="255:28"><name pos:start="255:17" pos:end="255:17">s</name><operator pos:start="255:18" pos:end="255:19">-&gt;</operator><name pos:start="255:20" pos:end="255:28">pict_type</name></name><operator pos:start="255:29" pos:end="255:29">=</operator> <name pos:start="255:31" pos:end="255:47">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt><break pos:start="255:49" pos:end="255:54">break;</break>

        <case pos:start="257:9" pos:end="257:15">case <expr pos:start="257:14" pos:end="257:14"><literal type="number" pos:start="257:14" pos:end="257:14">2</literal></expr>:</case> <expr_stmt pos:start="257:17" pos:end="257:48"><expr pos:start="257:17" pos:end="257:47"><name pos:start="257:17" pos:end="257:28"><name pos:start="257:17" pos:end="257:17">s</name><operator pos:start="257:18" pos:end="257:19">-&gt;</operator><name pos:start="257:20" pos:end="257:28">pict_type</name></name><operator pos:start="257:29" pos:end="257:29">=</operator> <name pos:start="257:31" pos:end="257:47">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt><expr_stmt pos:start="257:49" pos:end="257:64"><expr pos:start="257:49" pos:end="257:63"><name pos:start="257:49" pos:end="257:59"><name pos:start="257:49" pos:end="257:49">s</name><operator pos:start="257:50" pos:end="257:51">-&gt;</operator><name pos:start="257:52" pos:end="257:59">pb_frame</name></name> <operator pos:start="257:61" pos:end="257:61">=</operator> <literal type="number" pos:start="257:63" pos:end="257:63">3</literal></expr>;</expr_stmt><break pos:start="257:65" pos:end="257:70">break;</break>

        <case pos:start="259:9" pos:end="259:15">case <expr pos:start="259:14" pos:end="259:14"><literal type="number" pos:start="259:14" pos:end="259:14">3</literal></expr>:</case> <expr_stmt pos:start="259:17" pos:end="259:48"><expr pos:start="259:17" pos:end="259:47"><name pos:start="259:17" pos:end="259:28"><name pos:start="259:17" pos:end="259:17">s</name><operator pos:start="259:18" pos:end="259:19">-&gt;</operator><name pos:start="259:20" pos:end="259:28">pict_type</name></name><operator pos:start="259:29" pos:end="259:29">=</operator> <name pos:start="259:31" pos:end="259:47">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt><break pos:start="259:49" pos:end="259:54">break;</break>

        <case pos:start="261:9" pos:end="261:15">case <expr pos:start="261:14" pos:end="261:14"><literal type="number" pos:start="261:14" pos:end="261:14">7</literal></expr>:</case> <expr_stmt pos:start="261:17" pos:end="261:48"><expr pos:start="261:17" pos:end="261:47"><name pos:start="261:17" pos:end="261:28"><name pos:start="261:17" pos:end="261:17">s</name><operator pos:start="261:18" pos:end="261:19">-&gt;</operator><name pos:start="261:20" pos:end="261:28">pict_type</name></name><operator pos:start="261:29" pos:end="261:29">=</operator> <name pos:start="261:31" pos:end="261:47">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt><break pos:start="261:49" pos:end="261:54">break;</break> <comment type="line" pos:start="261:56" pos:end="261:61">//ZYGO</comment>

        <default pos:start="263:9" pos:end="263:16">default:</default>

            <return pos:start="265:13" pos:end="265:22">return <expr pos:start="265:20" pos:end="265:21"><operator pos:start="265:20" pos:end="265:20">-</operator><literal type="number" pos:start="265:21" pos:end="265:21">1</literal></expr>;</return>

        </block_content>}</block></switch>

        <expr_stmt pos:start="269:9" pos:end="269:29"><expr pos:start="269:9" pos:end="269:28"><call pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:17">skip_bits</name><argument_list pos:start="269:18" pos:end="269:28">(<argument pos:start="269:19" pos:end="269:24"><expr pos:start="269:19" pos:end="269:24"><operator pos:start="269:19" pos:end="269:19">&amp;</operator><name pos:start="269:20" pos:end="269:24"><name pos:start="269:20" pos:end="269:20">s</name><operator pos:start="269:21" pos:end="269:22">-&gt;</operator><name pos:start="269:23" pos:end="269:24">gb</name></name></expr></argument>, <argument pos:start="269:27" pos:end="269:27"><expr pos:start="269:27" pos:end="269:27"><literal type="number" pos:start="269:27" pos:end="269:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="271:9" pos:end="271:43"><expr pos:start="271:9" pos:end="271:42"><name pos:start="271:9" pos:end="271:22"><name pos:start="271:9" pos:end="271:9">s</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:22">no_rounding</name></name> <operator pos:start="271:24" pos:end="271:24">=</operator> <call pos:start="271:26" pos:end="271:42"><name pos:start="271:26" pos:end="271:34">get_bits1</name><argument_list pos:start="271:35" pos:end="271:42">(<argument pos:start="271:36" pos:end="271:41"><expr pos:start="271:36" pos:end="271:41"><operator pos:start="271:36" pos:end="271:36">&amp;</operator><name pos:start="271:37" pos:end="271:41"><name pos:start="271:37" pos:end="271:37">s</name><operator pos:start="271:38" pos:end="271:39">-&gt;</operator><name pos:start="271:40" pos:end="271:41">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:29"><expr pos:start="273:9" pos:end="273:28"><call pos:start="273:9" pos:end="273:28"><name pos:start="273:9" pos:end="273:17">skip_bits</name><argument_list pos:start="273:18" pos:end="273:28">(<argument pos:start="273:19" pos:end="273:24"><expr pos:start="273:19" pos:end="273:24"><operator pos:start="273:19" pos:end="273:19">&amp;</operator><name pos:start="273:20" pos:end="273:24"><name pos:start="273:20" pos:end="273:20">s</name><operator pos:start="273:21" pos:end="273:22">-&gt;</operator><name pos:start="273:23" pos:end="273:24">gb</name></name></expr></argument>, <argument pos:start="273:27" pos:end="273:27"><expr pos:start="273:27" pos:end="273:27"><literal type="number" pos:start="273:27" pos:end="273:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="277:9" pos:end="277:40">/* Get the picture dimensions */</comment>

        <if_stmt pos:start="279:9" pos:end="381:9"><if pos:start="279:9" pos:end="381:9">if <condition pos:start="279:12" pos:end="279:17">(<expr pos:start="279:13" pos:end="279:16"><name pos:start="279:13" pos:end="279:16">ufep</name></expr>)</condition> <block pos:start="279:19" pos:end="381:9">{<block_content pos:start="281:13" pos:end="379:13">

            <if_stmt pos:start="281:13" pos:end="337:13"><if pos:start="281:13" pos:end="329:13">if <condition pos:start="281:16" pos:end="281:28">(<expr pos:start="281:17" pos:end="281:27"><name pos:start="281:17" pos:end="281:22">format</name> <operator pos:start="281:24" pos:end="281:25">==</operator> <literal type="number" pos:start="281:27" pos:end="281:27">6</literal></expr>)</condition> <block pos:start="281:30" pos:end="329:13">{<block_content pos:start="285:17" pos:end="327:17">

                <comment type="block" pos:start="283:17" pos:end="283:51">/* Custom Picture Format (CPFMT) */</comment>

                <expr_stmt pos:start="285:17" pos:end="285:59"><expr pos:start="285:17" pos:end="285:58"><name pos:start="285:17" pos:end="285:36"><name pos:start="285:17" pos:end="285:17">s</name><operator pos:start="285:18" pos:end="285:19">-&gt;</operator><name pos:start="285:20" pos:end="285:36">aspect_ratio_info</name></name> <operator pos:start="285:38" pos:end="285:38">=</operator> <call pos:start="285:40" pos:end="285:58"><name pos:start="285:40" pos:end="285:47">get_bits</name><argument_list pos:start="285:48" pos:end="285:58">(<argument pos:start="285:49" pos:end="285:54"><expr pos:start="285:49" pos:end="285:54"><operator pos:start="285:49" pos:end="285:49">&amp;</operator><name pos:start="285:50" pos:end="285:54"><name pos:start="285:50" pos:end="285:50">s</name><operator pos:start="285:51" pos:end="285:52">-&gt;</operator><name pos:start="285:53" pos:end="285:54">gb</name></name></expr></argument>, <argument pos:start="285:57" pos:end="285:57"><expr pos:start="285:57" pos:end="285:57"><literal type="number" pos:start="285:57" pos:end="285:57">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:72"><expr pos:start="287:17" pos:end="287:71"><call pos:start="287:17" pos:end="287:71"><name pos:start="287:17" pos:end="287:23">av_dlog</name><argument_list pos:start="287:24" pos:end="287:71">(<argument pos:start="287:25" pos:end="287:32"><expr pos:start="287:25" pos:end="287:32"><name pos:start="287:25" pos:end="287:32"><name pos:start="287:25" pos:end="287:25">s</name><operator pos:start="287:26" pos:end="287:27">-&gt;</operator><name pos:start="287:28" pos:end="287:32">avctx</name></name></expr></argument>, <argument pos:start="287:35" pos:end="287:48"><expr pos:start="287:35" pos:end="287:48"><literal type="string" pos:start="287:35" pos:end="287:48">"aspect: %d\n"</literal></expr></argument>, <argument pos:start="287:51" pos:end="287:70"><expr pos:start="287:51" pos:end="287:70"><name pos:start="287:51" pos:end="287:70"><name pos:start="287:51" pos:end="287:51">s</name><operator pos:start="287:52" pos:end="287:53">-&gt;</operator><name pos:start="287:54" pos:end="287:70">aspect_ratio_info</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="289:17" pos:end="305:18">/* aspect ratios:

                0 - forbidden

                1 - 1:1

                2 - 12:11 (CIF 4:3)

                3 - 10:11 (525-type 4:3)

                4 - 16:11 (CIF 16:9)

                5 - 40:33 (525-type 16:9)

                6-14 - reserved

                */</comment>

                <expr_stmt pos:start="307:17" pos:end="307:54"><expr pos:start="307:17" pos:end="307:53"><name pos:start="307:17" pos:end="307:21">width</name> <operator pos:start="307:23" pos:end="307:23">=</operator> <operator pos:start="307:25" pos:end="307:25">(</operator><call pos:start="307:26" pos:end="307:44"><name pos:start="307:26" pos:end="307:33">get_bits</name><argument_list pos:start="307:34" pos:end="307:44">(<argument pos:start="307:35" pos:end="307:40"><expr pos:start="307:35" pos:end="307:40"><operator pos:start="307:35" pos:end="307:35">&amp;</operator><name pos:start="307:36" pos:end="307:40"><name pos:start="307:36" pos:end="307:36">s</name><operator pos:start="307:37" pos:end="307:38">-&gt;</operator><name pos:start="307:39" pos:end="307:40">gb</name></name></expr></argument>, <argument pos:start="307:43" pos:end="307:43"><expr pos:start="307:43" pos:end="307:43"><literal type="number" pos:start="307:43" pos:end="307:43">9</literal></expr></argument>)</argument_list></call> <operator pos:start="307:46" pos:end="307:46">+</operator> <literal type="number" pos:start="307:48" pos:end="307:48">1</literal><operator pos:start="307:49" pos:end="307:49">)</operator> <operator pos:start="307:51" pos:end="307:51">*</operator> <literal type="number" pos:start="307:53" pos:end="307:53">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:35"><expr pos:start="309:17" pos:end="309:34"><call pos:start="309:17" pos:end="309:34"><name pos:start="309:17" pos:end="309:26">skip_bits1</name><argument_list pos:start="309:27" pos:end="309:34">(<argument pos:start="309:28" pos:end="309:33"><expr pos:start="309:28" pos:end="309:33"><operator pos:start="309:28" pos:end="309:28">&amp;</operator><name pos:start="309:29" pos:end="309:33"><name pos:start="309:29" pos:end="309:29">s</name><operator pos:start="309:30" pos:end="309:31">-&gt;</operator><name pos:start="309:32" pos:end="309:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:49"><expr pos:start="311:17" pos:end="311:48"><name pos:start="311:17" pos:end="311:22">height</name> <operator pos:start="311:24" pos:end="311:24">=</operator> <call pos:start="311:26" pos:end="311:44"><name pos:start="311:26" pos:end="311:33">get_bits</name><argument_list pos:start="311:34" pos:end="311:44">(<argument pos:start="311:35" pos:end="311:40"><expr pos:start="311:35" pos:end="311:40"><operator pos:start="311:35" pos:end="311:35">&amp;</operator><name pos:start="311:36" pos:end="311:40"><name pos:start="311:36" pos:end="311:36">s</name><operator pos:start="311:37" pos:end="311:38">-&gt;</operator><name pos:start="311:39" pos:end="311:40">gb</name></name></expr></argument>, <argument pos:start="311:43" pos:end="311:43"><expr pos:start="311:43" pos:end="311:43"><literal type="number" pos:start="311:43" pos:end="311:43">9</literal></expr></argument>)</argument_list></call> <operator pos:start="311:46" pos:end="311:46">*</operator> <literal type="number" pos:start="311:48" pos:end="311:48">4</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="313:17" pos:end="313:83"><expr pos:start="313:17" pos:end="313:82"><call pos:start="313:17" pos:end="313:82"><name pos:start="313:17" pos:end="313:23">av_dlog</name><argument_list pos:start="313:24" pos:end="313:82">(<argument pos:start="313:25" pos:end="313:32"><expr pos:start="313:25" pos:end="313:32"><name pos:start="313:25" pos:end="313:32"><name pos:start="313:25" pos:end="313:25">s</name><operator pos:start="313:26" pos:end="313:27">-&gt;</operator><name pos:start="313:28" pos:end="313:32">avctx</name></name></expr></argument>, <argument pos:start="313:35" pos:end="313:68"><expr pos:start="313:35" pos:end="313:68"><literal type="string" pos:start="313:35" pos:end="313:68">"\nH.263+ Custom picture: %dx%d\n"</literal></expr></argument>,<argument pos:start="313:70" pos:end="313:74"><expr pos:start="313:70" pos:end="313:74"><name pos:start="313:70" pos:end="313:74">width</name></expr></argument>,<argument pos:start="313:76" pos:end="313:81"><expr pos:start="313:76" pos:end="313:81"><name pos:start="313:76" pos:end="313:81">height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="315:17" pos:end="327:17"><if pos:start="315:17" pos:end="323:17">if <condition pos:start="315:20" pos:end="315:63">(<expr pos:start="315:21" pos:end="315:62"><name pos:start="315:21" pos:end="315:40"><name pos:start="315:21" pos:end="315:21">s</name><operator pos:start="315:22" pos:end="315:23">-&gt;</operator><name pos:start="315:24" pos:end="315:40">aspect_ratio_info</name></name> <operator pos:start="315:42" pos:end="315:43">==</operator> <name pos:start="315:45" pos:end="315:62">FF_ASPECT_EXTENDED</name></expr>)</condition> <block pos:start="315:65" pos:end="323:17">{<block_content pos:start="319:21" pos:end="321:75">

                    <comment type="block" pos:start="317:21" pos:end="317:45">/* aspected dimensions */</comment>

                    <expr_stmt pos:start="319:21" pos:end="319:75"><expr pos:start="319:21" pos:end="319:74"><name pos:start="319:21" pos:end="319:53"><name pos:start="319:21" pos:end="319:21">s</name><operator pos:start="319:22" pos:end="319:23">-&gt;</operator><name pos:start="319:24" pos:end="319:28">avctx</name><operator pos:start="319:29" pos:end="319:30">-&gt;</operator><name pos:start="319:31" pos:end="319:49">sample_aspect_ratio</name><operator pos:start="319:50" pos:end="319:50">.</operator><name pos:start="319:51" pos:end="319:53">num</name></name><operator pos:start="319:54" pos:end="319:54">=</operator> <call pos:start="319:56" pos:end="319:74"><name pos:start="319:56" pos:end="319:63">get_bits</name><argument_list pos:start="319:64" pos:end="319:74">(<argument pos:start="319:65" pos:end="319:70"><expr pos:start="319:65" pos:end="319:70"><operator pos:start="319:65" pos:end="319:65">&amp;</operator><name pos:start="319:66" pos:end="319:70"><name pos:start="319:66" pos:end="319:66">s</name><operator pos:start="319:67" pos:end="319:68">-&gt;</operator><name pos:start="319:69" pos:end="319:70">gb</name></name></expr></argument>, <argument pos:start="319:73" pos:end="319:73"><expr pos:start="319:73" pos:end="319:73"><literal type="number" pos:start="319:73" pos:end="319:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="321:21" pos:end="321:75"><expr pos:start="321:21" pos:end="321:74"><name pos:start="321:21" pos:end="321:53"><name pos:start="321:21" pos:end="321:21">s</name><operator pos:start="321:22" pos:end="321:23">-&gt;</operator><name pos:start="321:24" pos:end="321:28">avctx</name><operator pos:start="321:29" pos:end="321:30">-&gt;</operator><name pos:start="321:31" pos:end="321:49">sample_aspect_ratio</name><operator pos:start="321:50" pos:end="321:50">.</operator><name pos:start="321:51" pos:end="321:53">den</name></name><operator pos:start="321:54" pos:end="321:54">=</operator> <call pos:start="321:56" pos:end="321:74"><name pos:start="321:56" pos:end="321:63">get_bits</name><argument_list pos:start="321:64" pos:end="321:74">(<argument pos:start="321:65" pos:end="321:70"><expr pos:start="321:65" pos:end="321:70"><operator pos:start="321:65" pos:end="321:65">&amp;</operator><name pos:start="321:66" pos:end="321:70"><name pos:start="321:66" pos:end="321:66">s</name><operator pos:start="321:67" pos:end="321:68">-&gt;</operator><name pos:start="321:69" pos:end="321:70">gb</name></name></expr></argument>, <argument pos:start="321:73" pos:end="321:73"><expr pos:start="321:73" pos:end="321:73"><literal type="number" pos:start="321:73" pos:end="321:73">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if><else pos:start="323:18" pos:end="327:17">else<block pos:start="323:22" pos:end="327:17">{<block_content pos:start="325:21" pos:end="325:94">

                    <expr_stmt pos:start="325:21" pos:end="325:94"><expr pos:start="325:21" pos:end="325:93"><name pos:start="325:21" pos:end="325:49"><name pos:start="325:21" pos:end="325:21">s</name><operator pos:start="325:22" pos:end="325:23">-&gt;</operator><name pos:start="325:24" pos:end="325:28">avctx</name><operator pos:start="325:29" pos:end="325:30">-&gt;</operator><name pos:start="325:31" pos:end="325:49">sample_aspect_ratio</name></name><operator pos:start="325:50" pos:end="325:50">=</operator> <name pos:start="325:52" pos:end="325:93"><name pos:start="325:52" pos:end="325:71">ff_h263_pixel_aspect</name><index pos:start="325:72" pos:end="325:93">[<expr pos:start="325:73" pos:end="325:92"><name pos:start="325:73" pos:end="325:92"><name pos:start="325:73" pos:end="325:73">s</name><operator pos:start="325:74" pos:end="325:75">-&gt;</operator><name pos:start="325:76" pos:end="325:92">aspect_ratio_info</name></name></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="329:15" pos:end="337:13">else <block pos:start="329:20" pos:end="337:13">{<block_content pos:start="331:17" pos:end="335:67">

                <expr_stmt pos:start="331:17" pos:end="331:50"><expr pos:start="331:17" pos:end="331:49"><name pos:start="331:17" pos:end="331:21">width</name> <operator pos:start="331:23" pos:end="331:23">=</operator> <name pos:start="331:25" pos:end="331:49"><name pos:start="331:25" pos:end="331:38">ff_h263_format</name><index pos:start="331:39" pos:end="331:46">[<expr pos:start="331:40" pos:end="331:45"><name pos:start="331:40" pos:end="331:45">format</name></expr>]</index><index pos:start="331:47" pos:end="331:49">[<expr pos:start="331:48" pos:end="331:48"><literal type="number" pos:start="331:48" pos:end="331:48">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="333:17" pos:end="333:51"><expr pos:start="333:17" pos:end="333:50"><name pos:start="333:17" pos:end="333:22">height</name> <operator pos:start="333:24" pos:end="333:24">=</operator> <name pos:start="333:26" pos:end="333:50"><name pos:start="333:26" pos:end="333:39">ff_h263_format</name><index pos:start="333:40" pos:end="333:47">[<expr pos:start="333:41" pos:end="333:46"><name pos:start="333:41" pos:end="333:46">format</name></expr>]</index><index pos:start="333:48" pos:end="333:50">[<expr pos:start="333:49" pos:end="333:49"><literal type="number" pos:start="333:49" pos:end="333:49">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="335:17" pos:end="335:67"><expr pos:start="335:17" pos:end="335:66"><name pos:start="335:17" pos:end="335:45"><name pos:start="335:17" pos:end="335:17">s</name><operator pos:start="335:18" pos:end="335:19">-&gt;</operator><name pos:start="335:20" pos:end="335:24">avctx</name><operator pos:start="335:25" pos:end="335:26">-&gt;</operator><name pos:start="335:27" pos:end="335:45">sample_aspect_ratio</name></name><operator pos:start="335:46" pos:end="335:46">=</operator> <operator pos:start="335:48" pos:end="335:48">(</operator><name pos:start="335:49" pos:end="335:58">AVRational</name><operator pos:start="335:59" pos:end="335:59">)</operator><block pos:start="335:60" pos:end="335:66">{<expr pos:start="335:61" pos:end="335:62"><literal type="number" pos:start="335:61" pos:end="335:62">12</literal></expr>,<expr pos:start="335:64" pos:end="335:65"><literal type="number" pos:start="335:64" pos:end="335:65">11</literal></expr>}</block></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:62"><expr pos:start="339:13" pos:end="339:61"><name pos:start="339:13" pos:end="339:45"><name pos:start="339:13" pos:end="339:13">s</name><operator pos:start="339:14" pos:end="339:15">-&gt;</operator><name pos:start="339:16" pos:end="339:20">avctx</name><operator pos:start="339:21" pos:end="339:22">-&gt;</operator><name pos:start="339:23" pos:end="339:41">sample_aspect_ratio</name><operator pos:start="339:42" pos:end="339:42">.</operator><name pos:start="339:43" pos:end="339:45">den</name></name> <operator pos:start="339:47" pos:end="339:49">&lt;&lt;=</operator> <name pos:start="339:51" pos:end="339:61"><name pos:start="339:51" pos:end="339:51">s</name><operator pos:start="339:52" pos:end="339:53">-&gt;</operator><name pos:start="339:54" pos:end="339:61">ehc_mode</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="341:13" pos:end="343:26"><if pos:start="341:13" pos:end="343:26">if <condition pos:start="341:16" pos:end="341:46">(<expr pos:start="341:17" pos:end="341:45"><operator pos:start="341:17" pos:end="341:17">(</operator><name pos:start="341:18" pos:end="341:22">width</name> <operator pos:start="341:24" pos:end="341:25">==</operator> <literal type="number" pos:start="341:27" pos:end="341:27">0</literal><operator pos:start="341:28" pos:end="341:28">)</operator> <operator pos:start="341:30" pos:end="341:31">||</operator> <operator pos:start="341:33" pos:end="341:33">(</operator><name pos:start="341:34" pos:end="341:39">height</name> <operator pos:start="341:41" pos:end="341:42">==</operator> <literal type="number" pos:start="341:44" pos:end="341:44">0</literal><operator pos:start="341:45" pos:end="341:45">)</operator></expr>)</condition><block type="pseudo" pos:start="343:17" pos:end="343:26"><block_content pos:start="343:17" pos:end="343:26">

                <return pos:start="343:17" pos:end="343:26">return <expr pos:start="343:24" pos:end="343:25"><operator pos:start="343:24" pos:end="343:24">-</operator><literal type="number" pos:start="343:25" pos:end="343:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="345:13" pos:end="345:29"><expr pos:start="345:13" pos:end="345:28"><name pos:start="345:13" pos:end="345:20"><name pos:start="345:13" pos:end="345:13">s</name><operator pos:start="345:14" pos:end="345:15">-&gt;</operator><name pos:start="345:16" pos:end="345:20">width</name></name> <operator pos:start="345:22" pos:end="345:22">=</operator> <name pos:start="345:24" pos:end="345:28">width</name></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:31"><expr pos:start="347:13" pos:end="347:30"><name pos:start="347:13" pos:end="347:21"><name pos:start="347:13" pos:end="347:13">s</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:21">height</name></name> <operator pos:start="347:23" pos:end="347:23">=</operator> <name pos:start="347:25" pos:end="347:30">height</name></expr>;</expr_stmt>



            <if_stmt pos:start="351:13" pos:end="379:13"><if pos:start="351:13" pos:end="375:13">if<condition pos:start="351:15" pos:end="351:29">(<expr pos:start="351:16" pos:end="351:28"><name pos:start="351:16" pos:end="351:28"><name pos:start="351:16" pos:end="351:16">s</name><operator pos:start="351:17" pos:end="351:18">-&gt;</operator><name pos:start="351:19" pos:end="351:28">custom_pcf</name></name></expr>)</condition><block pos:start="351:30" pos:end="375:13">{<block_content pos:start="353:17" pos:end="373:47">

                <decl_stmt pos:start="353:17" pos:end="353:24"><decl pos:start="353:17" pos:end="353:23"><type pos:start="353:17" pos:end="353:19"><name pos:start="353:17" pos:end="353:19">int</name></type> <name pos:start="353:21" pos:end="353:23">gcd</name></decl>;</decl_stmt>

                <expr_stmt pos:start="355:17" pos:end="355:51"><expr pos:start="355:17" pos:end="355:50"><name pos:start="355:17" pos:end="355:39"><name pos:start="355:17" pos:end="355:17">s</name><operator pos:start="355:18" pos:end="355:19">-&gt;</operator><name pos:start="355:20" pos:end="355:24">avctx</name><operator pos:start="355:25" pos:end="355:26">-&gt;</operator><name pos:start="355:27" pos:end="355:35">framerate</name><operator pos:start="355:36" pos:end="355:36">.</operator><name pos:start="355:37" pos:end="355:39">num</name></name>  <operator pos:start="355:42" pos:end="355:42">=</operator> <literal type="number" pos:start="355:44" pos:end="355:50">1800000</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="357:17" pos:end="357:68"><expr pos:start="357:17" pos:end="357:67"><name pos:start="357:17" pos:end="357:39"><name pos:start="357:17" pos:end="357:17">s</name><operator pos:start="357:18" pos:end="357:19">-&gt;</operator><name pos:start="357:20" pos:end="357:24">avctx</name><operator pos:start="357:25" pos:end="357:26">-&gt;</operator><name pos:start="357:27" pos:end="357:35">framerate</name><operator pos:start="357:36" pos:end="357:36">.</operator><name pos:start="357:37" pos:end="357:39">den</name></name>  <operator pos:start="357:42" pos:end="357:42">=</operator> <literal type="number" pos:start="357:44" pos:end="357:49">1000</literal> <operator pos:start="357:49" pos:end="357:49">+</operator> <call pos:start="357:51" pos:end="357:67"><name pos:start="357:51" pos:end="357:59">get_bits1</name><argument_list pos:start="357:60" pos:end="357:67">(<argument pos:start="357:61" pos:end="357:66"><expr pos:start="357:61" pos:end="357:66"><operator pos:start="357:61" pos:end="357:61">&amp;</operator><name pos:start="357:62" pos:end="357:66"><name pos:start="357:62" pos:end="357:62">s</name><operator pos:start="357:63" pos:end="357:64">-&gt;</operator><name pos:start="357:65" pos:end="357:66">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="359:17" pos:end="359:63"><expr pos:start="359:17" pos:end="359:62"><name pos:start="359:17" pos:end="359:39"><name pos:start="359:17" pos:end="359:17">s</name><operator pos:start="359:18" pos:end="359:19">-&gt;</operator><name pos:start="359:20" pos:end="359:24">avctx</name><operator pos:start="359:25" pos:end="359:26">-&gt;</operator><name pos:start="359:27" pos:end="359:35">framerate</name><operator pos:start="359:36" pos:end="359:36">.</operator><name pos:start="359:37" pos:end="359:39">den</name></name> <operator pos:start="359:41" pos:end="359:42">*=</operator> <call pos:start="359:44" pos:end="359:62"><name pos:start="359:44" pos:end="359:51">get_bits</name><argument_list pos:start="359:52" pos:end="359:62">(<argument pos:start="359:53" pos:end="359:58"><expr pos:start="359:53" pos:end="359:58"><operator pos:start="359:53" pos:end="359:53">&amp;</operator><name pos:start="359:54" pos:end="359:58"><name pos:start="359:54" pos:end="359:54">s</name><operator pos:start="359:55" pos:end="359:56">-&gt;</operator><name pos:start="359:57" pos:end="359:58">gb</name></name></expr></argument>, <argument pos:start="359:61" pos:end="359:61"><expr pos:start="359:61" pos:end="359:61"><literal type="number" pos:start="359:61" pos:end="359:61">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="361:17" pos:end="367:17"><if pos:start="361:17" pos:end="367:17">if<condition pos:start="361:19" pos:end="361:48">(<expr pos:start="361:20" pos:end="361:47"><name pos:start="361:20" pos:end="361:42"><name pos:start="361:20" pos:end="361:20">s</name><operator pos:start="361:21" pos:end="361:22">-&gt;</operator><name pos:start="361:23" pos:end="361:27">avctx</name><operator pos:start="361:28" pos:end="361:29">-&gt;</operator><name pos:start="361:30" pos:end="361:38">framerate</name><operator pos:start="361:39" pos:end="361:39">.</operator><name pos:start="361:40" pos:end="361:42">den</name></name> <operator pos:start="361:44" pos:end="361:45">==</operator> <literal type="number" pos:start="361:47" pos:end="361:47">0</literal></expr>)</condition><block pos:start="361:49" pos:end="367:17">{<block_content pos:start="363:21" pos:end="365:30">

                    <expr_stmt pos:start="363:21" pos:end="363:64"><expr pos:start="363:21" pos:end="363:63"><call pos:start="363:21" pos:end="363:63"><name pos:start="363:21" pos:end="363:26">av_log</name><argument_list pos:start="363:27" pos:end="363:63">(<argument pos:start="363:28" pos:end="363:28"><expr pos:start="363:28" pos:end="363:28"><name pos:start="363:28" pos:end="363:28">s</name></expr></argument>, <argument pos:start="363:31" pos:end="363:42"><expr pos:start="363:31" pos:end="363:42"><name pos:start="363:31" pos:end="363:42">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="363:45" pos:end="363:62"><expr pos:start="363:45" pos:end="363:62"><literal type="string" pos:start="363:45" pos:end="363:62">"zero framerate\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="365:21" pos:end="365:30">return <expr pos:start="365:28" pos:end="365:29"><operator pos:start="365:28" pos:end="365:28">-</operator><literal type="number" pos:start="365:29" pos:end="365:29">1</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="369:17" pos:end="369:78"><expr pos:start="369:17" pos:end="369:77"><name pos:start="369:17" pos:end="369:19">gcd</name><operator pos:start="369:20" pos:end="369:20">=</operator> <call pos:start="369:22" pos:end="369:77"><name pos:start="369:22" pos:end="369:27">av_gcd</name><argument_list pos:start="369:28" pos:end="369:77">(<argument pos:start="369:29" pos:end="369:51"><expr pos:start="369:29" pos:end="369:51"><name pos:start="369:29" pos:end="369:51"><name pos:start="369:29" pos:end="369:29">s</name><operator pos:start="369:30" pos:end="369:31">-&gt;</operator><name pos:start="369:32" pos:end="369:36">avctx</name><operator pos:start="369:37" pos:end="369:38">-&gt;</operator><name pos:start="369:39" pos:end="369:47">framerate</name><operator pos:start="369:48" pos:end="369:48">.</operator><name pos:start="369:49" pos:end="369:51">den</name></name></expr></argument>, <argument pos:start="369:54" pos:end="369:76"><expr pos:start="369:54" pos:end="369:76"><name pos:start="369:54" pos:end="369:76"><name pos:start="369:54" pos:end="369:54">s</name><operator pos:start="369:55" pos:end="369:56">-&gt;</operator><name pos:start="369:57" pos:end="369:61">avctx</name><operator pos:start="369:62" pos:end="369:63">-&gt;</operator><name pos:start="369:64" pos:end="369:72">framerate</name><operator pos:start="369:73" pos:end="369:73">.</operator><name pos:start="369:74" pos:end="369:76">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="371:17" pos:end="371:47"><expr pos:start="371:17" pos:end="371:46"><name pos:start="371:17" pos:end="371:39"><name pos:start="371:17" pos:end="371:17">s</name><operator pos:start="371:18" pos:end="371:19">-&gt;</operator><name pos:start="371:20" pos:end="371:24">avctx</name><operator pos:start="371:25" pos:end="371:26">-&gt;</operator><name pos:start="371:27" pos:end="371:35">framerate</name><operator pos:start="371:36" pos:end="371:36">.</operator><name pos:start="371:37" pos:end="371:39">den</name></name> <operator pos:start="371:41" pos:end="371:42">/=</operator> <name pos:start="371:44" pos:end="371:46">gcd</name></expr>;</expr_stmt>

                <expr_stmt pos:start="373:17" pos:end="373:47"><expr pos:start="373:17" pos:end="373:46"><name pos:start="373:17" pos:end="373:39"><name pos:start="373:17" pos:end="373:17">s</name><operator pos:start="373:18" pos:end="373:19">-&gt;</operator><name pos:start="373:20" pos:end="373:24">avctx</name><operator pos:start="373:25" pos:end="373:26">-&gt;</operator><name pos:start="373:27" pos:end="373:35">framerate</name><operator pos:start="373:36" pos:end="373:36">.</operator><name pos:start="373:37" pos:end="373:39">num</name></name> <operator pos:start="373:41" pos:end="373:42">/=</operator> <name pos:start="373:44" pos:end="373:46">gcd</name></expr>;</expr_stmt>

            </block_content>}</block></if><else pos:start="375:14" pos:end="379:13">else<block pos:start="375:18" pos:end="379:13">{<block_content pos:start="377:17" pos:end="377:66">

                <expr_stmt pos:start="377:17" pos:end="377:66"><expr pos:start="377:17" pos:end="377:65"><name pos:start="377:17" pos:end="377:35"><name pos:start="377:17" pos:end="377:17">s</name><operator pos:start="377:18" pos:end="377:19">-&gt;</operator><name pos:start="377:20" pos:end="377:24">avctx</name><operator pos:start="377:25" pos:end="377:26">-&gt;</operator><name pos:start="377:27" pos:end="377:35">framerate</name></name> <operator pos:start="377:37" pos:end="377:37">=</operator> <operator pos:start="377:39" pos:end="377:39">(</operator><name pos:start="377:40" pos:end="377:49">AVRational</name><operator pos:start="377:50" pos:end="377:50">)</operator><block pos:start="377:51" pos:end="377:65">{ <expr pos:start="377:53" pos:end="377:57"><literal type="number" pos:start="377:53" pos:end="377:57">30000</literal></expr>, <expr pos:start="377:60" pos:end="377:63"><literal type="number" pos:start="377:60" pos:end="377:63">1001</literal></expr> }</block></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="385:9" pos:end="389:9"><if pos:start="385:9" pos:end="389:9">if<condition pos:start="385:11" pos:end="385:25">(<expr pos:start="385:12" pos:end="385:24"><name pos:start="385:12" pos:end="385:24"><name pos:start="385:12" pos:end="385:12">s</name><operator pos:start="385:13" pos:end="385:14">-&gt;</operator><name pos:start="385:15" pos:end="385:24">custom_pcf</name></name></expr>)</condition><block pos:start="385:26" pos:end="389:9">{<block_content pos:start="387:13" pos:end="387:33">

            <expr_stmt pos:start="387:13" pos:end="387:33"><expr pos:start="387:13" pos:end="387:32"><call pos:start="387:13" pos:end="387:32"><name pos:start="387:13" pos:end="387:21">skip_bits</name><argument_list pos:start="387:22" pos:end="387:32">(<argument pos:start="387:23" pos:end="387:28"><expr pos:start="387:23" pos:end="387:28"><operator pos:start="387:23" pos:end="387:23">&amp;</operator><name pos:start="387:24" pos:end="387:28"><name pos:start="387:24" pos:end="387:24">s</name><operator pos:start="387:25" pos:end="387:26">-&gt;</operator><name pos:start="387:27" pos:end="387:28">gb</name></name></expr></argument>, <argument pos:start="387:31" pos:end="387:31"><expr pos:start="387:31" pos:end="387:31"><literal type="number" pos:start="387:31" pos:end="387:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="387:35" pos:end="387:63">//extended Temporal reference</comment>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="393:9" pos:end="419:9"><if pos:start="393:9" pos:end="419:9">if <condition pos:start="393:12" pos:end="393:17">(<expr pos:start="393:13" pos:end="393:16"><name pos:start="393:13" pos:end="393:16">ufep</name></expr>)</condition> <block pos:start="393:19" pos:end="419:9">{<block_content pos:start="395:13" pos:end="417:13">

            <if_stmt pos:start="395:13" pos:end="401:13"><if pos:start="395:13" pos:end="401:13">if <condition pos:start="395:16" pos:end="395:27">(<expr pos:start="395:17" pos:end="395:26"><name pos:start="395:17" pos:end="395:26"><name pos:start="395:17" pos:end="395:17">s</name><operator pos:start="395:18" pos:end="395:19">-&gt;</operator><name pos:start="395:20" pos:end="395:26">umvplus</name></name></expr>)</condition> <block pos:start="395:29" pos:end="401:13">{<block_content pos:start="397:17" pos:end="399:39">

                <if_stmt pos:start="397:17" pos:end="399:39"><if pos:start="397:17" pos:end="399:39">if<condition pos:start="397:19" pos:end="397:40">(<expr pos:start="397:20" pos:end="397:39"><call pos:start="397:20" pos:end="397:36"><name pos:start="397:20" pos:end="397:28">get_bits1</name><argument_list pos:start="397:29" pos:end="397:36">(<argument pos:start="397:30" pos:end="397:35"><expr pos:start="397:30" pos:end="397:35"><operator pos:start="397:30" pos:end="397:30">&amp;</operator><name pos:start="397:31" pos:end="397:35"><name pos:start="397:31" pos:end="397:31">s</name><operator pos:start="397:32" pos:end="397:33">-&gt;</operator><name pos:start="397:34" pos:end="397:35">gb</name></name></expr></argument>)</argument_list></call><operator pos:start="397:37" pos:end="397:38">==</operator><literal type="number" pos:start="397:39" pos:end="397:39">0</literal></expr>)</condition><block type="pseudo" pos:start="399:21" pos:end="399:39"><block_content pos:start="399:21" pos:end="399:39"> <comment type="block" pos:start="397:42" pos:end="397:100">/* Unlimited Unrestricted Motion Vectors Indicator (UUI) */</comment>

                    <expr_stmt pos:start="399:21" pos:end="399:39"><expr pos:start="399:21" pos:end="399:38"><call pos:start="399:21" pos:end="399:38"><name pos:start="399:21" pos:end="399:30">skip_bits1</name><argument_list pos:start="399:31" pos:end="399:38">(<argument pos:start="399:32" pos:end="399:37"><expr pos:start="399:32" pos:end="399:37"><operator pos:start="399:32" pos:end="399:32">&amp;</operator><name pos:start="399:33" pos:end="399:37"><name pos:start="399:33" pos:end="399:33">s</name><operator pos:start="399:34" pos:end="399:35">-&gt;</operator><name pos:start="399:36" pos:end="399:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="403:13" pos:end="417:13"><if pos:start="403:13" pos:end="417:13">if<condition pos:start="403:15" pos:end="403:40">(<expr pos:start="403:16" pos:end="403:39"><name pos:start="403:16" pos:end="403:39"><name pos:start="403:16" pos:end="403:16">s</name><operator pos:start="403:17" pos:end="403:18">-&gt;</operator><name pos:start="403:19" pos:end="403:39">h263_slice_structured</name></name></expr>)</condition><block pos:start="403:41" pos:end="417:13">{<block_content pos:start="405:17" pos:end="415:17">

                <if_stmt pos:start="405:17" pos:end="409:17"><if pos:start="405:17" pos:end="409:17">if <condition pos:start="405:20" pos:end="405:43">(<expr pos:start="405:21" pos:end="405:42"><call pos:start="405:21" pos:end="405:37"><name pos:start="405:21" pos:end="405:29">get_bits1</name><argument_list pos:start="405:30" pos:end="405:37">(<argument pos:start="405:31" pos:end="405:36"><expr pos:start="405:31" pos:end="405:36"><operator pos:start="405:31" pos:end="405:31">&amp;</operator><name pos:start="405:32" pos:end="405:36"><name pos:start="405:32" pos:end="405:32">s</name><operator pos:start="405:33" pos:end="405:34">-&gt;</operator><name pos:start="405:35" pos:end="405:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="405:39" pos:end="405:40">!=</operator> <literal type="number" pos:start="405:42" pos:end="405:42">0</literal></expr>)</condition> <block pos:start="405:45" pos:end="409:17">{<block_content pos:start="407:21" pos:end="407:89">

                    <expr_stmt pos:start="407:21" pos:end="407:89"><expr pos:start="407:21" pos:end="407:88"><call pos:start="407:21" pos:end="407:88"><name pos:start="407:21" pos:end="407:26">av_log</name><argument_list pos:start="407:27" pos:end="407:88">(<argument pos:start="407:28" pos:end="407:35"><expr pos:start="407:28" pos:end="407:35"><name pos:start="407:28" pos:end="407:35"><name pos:start="407:28" pos:end="407:28">s</name><operator pos:start="407:29" pos:end="407:30">-&gt;</operator><name pos:start="407:31" pos:end="407:35">avctx</name></name></expr></argument>, <argument pos:start="407:38" pos:end="407:49"><expr pos:start="407:38" pos:end="407:49"><name pos:start="407:38" pos:end="407:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="407:52" pos:end="407:87"><expr pos:start="407:52" pos:end="407:87"><literal type="string" pos:start="407:52" pos:end="407:87">"rectangular slices not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="411:17" pos:end="415:17"><if pos:start="411:17" pos:end="415:17">if <condition pos:start="411:20" pos:end="411:43">(<expr pos:start="411:21" pos:end="411:42"><call pos:start="411:21" pos:end="411:37"><name pos:start="411:21" pos:end="411:29">get_bits1</name><argument_list pos:start="411:30" pos:end="411:37">(<argument pos:start="411:31" pos:end="411:36"><expr pos:start="411:31" pos:end="411:36"><operator pos:start="411:31" pos:end="411:31">&amp;</operator><name pos:start="411:32" pos:end="411:36"><name pos:start="411:32" pos:end="411:32">s</name><operator pos:start="411:33" pos:end="411:34">-&gt;</operator><name pos:start="411:35" pos:end="411:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="411:39" pos:end="411:40">!=</operator> <literal type="number" pos:start="411:42" pos:end="411:42">0</literal></expr>)</condition> <block pos:start="411:45" pos:end="415:17">{<block_content pos:start="413:21" pos:end="413:87">

                    <expr_stmt pos:start="413:21" pos:end="413:87"><expr pos:start="413:21" pos:end="413:86"><call pos:start="413:21" pos:end="413:86"><name pos:start="413:21" pos:end="413:26">av_log</name><argument_list pos:start="413:27" pos:end="413:86">(<argument pos:start="413:28" pos:end="413:35"><expr pos:start="413:28" pos:end="413:35"><name pos:start="413:28" pos:end="413:35"><name pos:start="413:28" pos:end="413:28">s</name><operator pos:start="413:29" pos:end="413:30">-&gt;</operator><name pos:start="413:31" pos:end="413:35">avctx</name></name></expr></argument>, <argument pos:start="413:38" pos:end="413:49"><expr pos:start="413:38" pos:end="413:49"><name pos:start="413:38" pos:end="413:49">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="413:52" pos:end="413:85"><expr pos:start="413:52" pos:end="413:85"><literal type="string" pos:start="413:52" pos:end="413:85">"unordered slices not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="423:9" pos:end="423:40"><expr pos:start="423:9" pos:end="423:39"><name pos:start="423:9" pos:end="423:17"><name pos:start="423:9" pos:end="423:9">s</name><operator pos:start="423:10" pos:end="423:11">-&gt;</operator><name pos:start="423:12" pos:end="423:17">qscale</name></name> <operator pos:start="423:19" pos:end="423:19">=</operator> <call pos:start="423:21" pos:end="423:39"><name pos:start="423:21" pos:end="423:28">get_bits</name><argument_list pos:start="423:29" pos:end="423:39">(<argument pos:start="423:30" pos:end="423:35"><expr pos:start="423:30" pos:end="423:35"><operator pos:start="423:30" pos:end="423:30">&amp;</operator><name pos:start="423:31" pos:end="423:35"><name pos:start="423:31" pos:end="423:31">s</name><operator pos:start="423:32" pos:end="423:33">-&gt;</operator><name pos:start="423:34" pos:end="423:35">gb</name></name></expr></argument>, <argument pos:start="423:38" pos:end="423:38"><expr pos:start="423:38" pos:end="423:38"><literal type="number" pos:start="423:38" pos:end="423:38">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="429:5" pos:end="435:5"><if pos:start="429:5" pos:end="435:5">if <condition pos:start="429:8" pos:end="429:40">(<expr pos:start="429:9" pos:end="429:39"><name pos:start="429:9" pos:end="429:16"><name pos:start="429:9" pos:end="429:9">s</name><operator pos:start="429:10" pos:end="429:11">-&gt;</operator><name pos:start="429:12" pos:end="429:16">width</name></name> <operator pos:start="429:18" pos:end="429:19">==</operator> <literal type="number" pos:start="429:21" pos:end="429:21">0</literal> <operator pos:start="429:23" pos:end="429:24">||</operator> <name pos:start="429:26" pos:end="429:34"><name pos:start="429:26" pos:end="429:26">s</name><operator pos:start="429:27" pos:end="429:28">-&gt;</operator><name pos:start="429:29" pos:end="429:34">height</name></name> <operator pos:start="429:36" pos:end="429:37">==</operator> <literal type="number" pos:start="429:39" pos:end="429:39">0</literal></expr>)</condition> <block pos:start="429:42" pos:end="435:5">{<block_content pos:start="431:9" pos:end="433:18">

        <expr_stmt pos:start="431:9" pos:end="431:57"><expr pos:start="431:9" pos:end="431:56"><call pos:start="431:9" pos:end="431:56"><name pos:start="431:9" pos:end="431:14">av_log</name><argument_list pos:start="431:15" pos:end="431:56">(<argument pos:start="431:16" pos:end="431:23"><expr pos:start="431:16" pos:end="431:23"><name pos:start="431:16" pos:end="431:23"><name pos:start="431:16" pos:end="431:16">s</name><operator pos:start="431:17" pos:end="431:18">-&gt;</operator><name pos:start="431:19" pos:end="431:23">avctx</name></name></expr></argument>, <argument pos:start="431:26" pos:end="431:37"><expr pos:start="431:26" pos:end="431:37"><name pos:start="431:26" pos:end="431:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="431:40" pos:end="431:55"><expr pos:start="431:40" pos:end="431:55"><literal type="string" pos:start="431:40" pos:end="431:55">"dimensions 0\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="433:9" pos:end="433:18">return <expr pos:start="433:16" pos:end="433:17"><operator pos:start="433:16" pos:end="433:16">-</operator><literal type="number" pos:start="433:17" pos:end="433:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="437:5" pos:end="437:40"><expr pos:start="437:5" pos:end="437:39"><name pos:start="437:5" pos:end="437:15"><name pos:start="437:5" pos:end="437:5">s</name><operator pos:start="437:6" pos:end="437:7">-&gt;</operator><name pos:start="437:8" pos:end="437:15">mb_width</name></name> <operator pos:start="437:17" pos:end="437:17">=</operator> <operator pos:start="437:19" pos:end="437:19">(</operator><name pos:start="437:20" pos:end="437:27"><name pos:start="437:20" pos:end="437:20">s</name><operator pos:start="437:21" pos:end="437:22">-&gt;</operator><name pos:start="437:23" pos:end="437:27">width</name></name>  <operator pos:start="437:30" pos:end="437:30">+</operator> <literal type="number" pos:start="437:32" pos:end="437:33">15</literal><operator pos:start="437:34" pos:end="437:34">)</operator> <operator pos:start="437:36" pos:end="437:36">/</operator> <literal type="number" pos:start="437:38" pos:end="437:39">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="439:5" pos:end="439:42"><expr pos:start="439:5" pos:end="439:41"><name pos:start="439:5" pos:end="439:16"><name pos:start="439:5" pos:end="439:5">s</name><operator pos:start="439:6" pos:end="439:7">-&gt;</operator><name pos:start="439:8" pos:end="439:16">mb_height</name></name> <operator pos:start="439:18" pos:end="439:18">=</operator> <operator pos:start="439:20" pos:end="439:20">(</operator><name pos:start="439:21" pos:end="439:29"><name pos:start="439:21" pos:end="439:21">s</name><operator pos:start="439:22" pos:end="439:23">-&gt;</operator><name pos:start="439:24" pos:end="439:29">height</name></name>  <operator pos:start="439:32" pos:end="439:32">+</operator> <literal type="number" pos:start="439:34" pos:end="439:35">15</literal><operator pos:start="439:36" pos:end="439:36">)</operator> <operator pos:start="439:38" pos:end="439:38">/</operator> <literal type="number" pos:start="439:40" pos:end="439:41">16</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="441:5" pos:end="441:43"><expr pos:start="441:5" pos:end="441:42"><name pos:start="441:5" pos:end="441:13"><name pos:start="441:5" pos:end="441:5">s</name><operator pos:start="441:6" pos:end="441:7">-&gt;</operator><name pos:start="441:8" pos:end="441:13">mb_num</name></name> <operator pos:start="441:15" pos:end="441:15">=</operator> <name pos:start="441:17" pos:end="441:27"><name pos:start="441:17" pos:end="441:17">s</name><operator pos:start="441:18" pos:end="441:19">-&gt;</operator><name pos:start="441:20" pos:end="441:27">mb_width</name></name> <operator pos:start="441:29" pos:end="441:29">*</operator> <name pos:start="441:31" pos:end="441:42"><name pos:start="441:31" pos:end="441:31">s</name><operator pos:start="441:32" pos:end="441:33">-&gt;</operator><name pos:start="441:34" pos:end="441:42">mb_height</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="445:5" pos:end="455:5"><if pos:start="445:5" pos:end="455:5">if <condition pos:start="445:8" pos:end="445:20">(<expr pos:start="445:9" pos:end="445:19"><name pos:start="445:9" pos:end="445:19"><name pos:start="445:9" pos:end="445:9">s</name><operator pos:start="445:10" pos:end="445:11">-&gt;</operator><name pos:start="445:12" pos:end="445:19">pb_frame</name></name></expr>)</condition> <block pos:start="445:22" pos:end="455:5">{<block_content pos:start="447:9" pos:end="453:29">

        <expr_stmt pos:start="447:9" pos:end="447:29"><expr pos:start="447:9" pos:end="447:28"><call pos:start="447:9" pos:end="447:28"><name pos:start="447:9" pos:end="447:17">skip_bits</name><argument_list pos:start="447:18" pos:end="447:28">(<argument pos:start="447:19" pos:end="447:24"><expr pos:start="447:19" pos:end="447:24"><operator pos:start="447:19" pos:end="447:19">&amp;</operator><name pos:start="447:20" pos:end="447:24"><name pos:start="447:20" pos:end="447:20">s</name><operator pos:start="447:21" pos:end="447:22">-&gt;</operator><name pos:start="447:23" pos:end="447:24">gb</name></name></expr></argument>, <argument pos:start="447:27" pos:end="447:27"><expr pos:start="447:27" pos:end="447:27"><literal type="number" pos:start="447:27" pos:end="447:27">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="447:31" pos:end="447:69">/* Temporal reference for B-pictures */</comment>

        <if_stmt pos:start="449:9" pos:end="451:33"><if pos:start="449:9" pos:end="451:33">if <condition pos:start="449:12" pos:end="449:26">(<expr pos:start="449:13" pos:end="449:25"><name pos:start="449:13" pos:end="449:25"><name pos:start="449:13" pos:end="449:13">s</name><operator pos:start="449:14" pos:end="449:15">-&gt;</operator><name pos:start="449:16" pos:end="449:25">custom_pcf</name></name></expr>)</condition><block type="pseudo" pos:start="451:13" pos:end="451:33"><block_content pos:start="451:13" pos:end="451:33">

            <expr_stmt pos:start="451:13" pos:end="451:33"><expr pos:start="451:13" pos:end="451:32"><call pos:start="451:13" pos:end="451:32"><name pos:start="451:13" pos:end="451:21">skip_bits</name><argument_list pos:start="451:22" pos:end="451:32">(<argument pos:start="451:23" pos:end="451:28"><expr pos:start="451:23" pos:end="451:28"><operator pos:start="451:23" pos:end="451:23">&amp;</operator><name pos:start="451:24" pos:end="451:28"><name pos:start="451:24" pos:end="451:24">s</name><operator pos:start="451:25" pos:end="451:26">-&gt;</operator><name pos:start="451:27" pos:end="451:28">gb</name></name></expr></argument>, <argument pos:start="451:31" pos:end="451:31"><expr pos:start="451:31" pos:end="451:31"><literal type="number" pos:start="451:31" pos:end="451:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="451:35" pos:end="451:63">//extended Temporal reference</comment>

        <expr_stmt pos:start="453:9" pos:end="453:29"><expr pos:start="453:9" pos:end="453:28"><call pos:start="453:9" pos:end="453:28"><name pos:start="453:9" pos:end="453:17">skip_bits</name><argument_list pos:start="453:18" pos:end="453:28">(<argument pos:start="453:19" pos:end="453:24"><expr pos:start="453:19" pos:end="453:24"><operator pos:start="453:19" pos:end="453:19">&amp;</operator><name pos:start="453:20" pos:end="453:24"><name pos:start="453:20" pos:end="453:20">s</name><operator pos:start="453:21" pos:end="453:22">-&gt;</operator><name pos:start="453:23" pos:end="453:24">gb</name></name></expr></argument>, <argument pos:start="453:27" pos:end="453:27"><expr pos:start="453:27" pos:end="453:27"><literal type="number" pos:start="453:27" pos:end="453:27">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="453:31" pos:end="453:75">/* Quantization information for B-pictures */</comment>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="459:5" pos:end="487:5"><if pos:start="459:5" pos:end="467:5">if <condition pos:start="459:8" pos:end="459:40">(<expr pos:start="459:9" pos:end="459:39"><name pos:start="459:9" pos:end="459:20"><name pos:start="459:9" pos:end="459:9">s</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:20">pict_type</name></name><operator pos:start="459:21" pos:end="459:22">!=</operator><name pos:start="459:23" pos:end="459:39">AV_PICTURE_TYPE_B</name></expr>)</condition> <block pos:start="459:42" pos:end="467:5">{<block_content pos:start="461:9" pos:end="465:37">

        <expr_stmt pos:start="461:9" pos:end="461:47"><expr pos:start="461:9" pos:end="461:46"><name pos:start="461:9" pos:end="461:15"><name pos:start="461:9" pos:end="461:9">s</name><operator pos:start="461:10" pos:end="461:11">-&gt;</operator><name pos:start="461:12" pos:end="461:15">time</name></name>            <operator pos:start="461:28" pos:end="461:28">=</operator> <name pos:start="461:30" pos:end="461:46"><name pos:start="461:30" pos:end="461:30">s</name><operator pos:start="461:31" pos:end="461:32">-&gt;</operator><name pos:start="461:33" pos:end="461:46">picture_number</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="463:9" pos:end="463:58"><expr pos:start="463:9" pos:end="463:57"><name pos:start="463:9" pos:end="463:18"><name pos:start="463:9" pos:end="463:9">s</name><operator pos:start="463:10" pos:end="463:11">-&gt;</operator><name pos:start="463:12" pos:end="463:18">pp_time</name></name>         <operator pos:start="463:28" pos:end="463:28">=</operator> <name pos:start="463:30" pos:end="463:36"><name pos:start="463:30" pos:end="463:30">s</name><operator pos:start="463:31" pos:end="463:32">-&gt;</operator><name pos:start="463:33" pos:end="463:36">time</name></name> <operator pos:start="463:38" pos:end="463:38">-</operator> <name pos:start="463:40" pos:end="463:57"><name pos:start="463:40" pos:end="463:40">s</name><operator pos:start="463:41" pos:end="463:42">-&gt;</operator><name pos:start="463:43" pos:end="463:57">last_non_b_time</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="465:9" pos:end="465:37"><expr pos:start="465:9" pos:end="465:36"><name pos:start="465:9" pos:end="465:26"><name pos:start="465:9" pos:end="465:9">s</name><operator pos:start="465:10" pos:end="465:11">-&gt;</operator><name pos:start="465:12" pos:end="465:26">last_non_b_time</name></name> <operator pos:start="465:28" pos:end="465:28">=</operator> <name pos:start="465:30" pos:end="465:36"><name pos:start="465:30" pos:end="465:30">s</name><operator pos:start="465:31" pos:end="465:32">-&gt;</operator><name pos:start="465:33" pos:end="465:36">time</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="467:6" pos:end="487:5">else<block pos:start="467:10" pos:end="487:5">{<block_content pos:start="469:9" pos:end="485:35">

        <expr_stmt pos:start="469:9" pos:end="469:39"><expr pos:start="469:9" pos:end="469:38"><name pos:start="469:9" pos:end="469:15"><name pos:start="469:9" pos:end="469:9">s</name><operator pos:start="469:10" pos:end="469:11">-&gt;</operator><name pos:start="469:12" pos:end="469:15">time</name></name>    <operator pos:start="469:20" pos:end="469:20">=</operator> <name pos:start="469:22" pos:end="469:38"><name pos:start="469:22" pos:end="469:22">s</name><operator pos:start="469:23" pos:end="469:24">-&gt;</operator><name pos:start="469:25" pos:end="469:38">picture_number</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="471:9" pos:end="471:65"><expr pos:start="471:9" pos:end="471:64"><name pos:start="471:9" pos:end="471:18"><name pos:start="471:9" pos:end="471:9">s</name><operator pos:start="471:10" pos:end="471:11">-&gt;</operator><name pos:start="471:12" pos:end="471:18">pb_time</name></name> <operator pos:start="471:20" pos:end="471:20">=</operator> <name pos:start="471:22" pos:end="471:31"><name pos:start="471:22" pos:end="471:22">s</name><operator pos:start="471:23" pos:end="471:24">-&gt;</operator><name pos:start="471:25" pos:end="471:31">pp_time</name></name> <operator pos:start="471:33" pos:end="471:33">-</operator> <operator pos:start="471:35" pos:end="471:35">(</operator><name pos:start="471:36" pos:end="471:53"><name pos:start="471:36" pos:end="471:36">s</name><operator pos:start="471:37" pos:end="471:38">-&gt;</operator><name pos:start="471:39" pos:end="471:53">last_non_b_time</name></name> <operator pos:start="471:55" pos:end="471:55">-</operator> <name pos:start="471:57" pos:end="471:63"><name pos:start="471:57" pos:end="471:57">s</name><operator pos:start="471:58" pos:end="471:59">-&gt;</operator><name pos:start="471:60" pos:end="471:63">time</name></name><operator pos:start="471:64" pos:end="471:64">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="473:9" pos:end="483:9"><if pos:start="473:9" pos:end="483:9">if <condition pos:start="473:12" pos:end="477:28">(<expr pos:start="473:13" pos:end="477:27"><name pos:start="473:13" pos:end="473:22"><name pos:start="473:13" pos:end="473:13">s</name><operator pos:start="473:14" pos:end="473:15">-&gt;</operator><name pos:start="473:16" pos:end="473:22">pp_time</name></name> <operator pos:start="473:24" pos:end="473:25">&lt;=</operator><name pos:start="473:26" pos:end="473:35"><name pos:start="473:26" pos:end="473:26">s</name><operator pos:start="473:27" pos:end="473:28">-&gt;</operator><name pos:start="473:29" pos:end="473:35">pb_time</name></name> <operator pos:start="473:37" pos:end="473:38">||</operator>

            <name pos:start="475:13" pos:end="475:22"><name pos:start="475:13" pos:end="475:13">s</name><operator pos:start="475:14" pos:end="475:15">-&gt;</operator><name pos:start="475:16" pos:end="475:22">pp_time</name></name> <operator pos:start="475:24" pos:end="475:25">&lt;=</operator> <name pos:start="475:27" pos:end="475:36"><name pos:start="475:27" pos:end="475:27">s</name><operator pos:start="475:28" pos:end="475:29">-&gt;</operator><name pos:start="475:30" pos:end="475:36">pp_time</name></name> <operator pos:start="475:38" pos:end="475:38">-</operator> <name pos:start="475:40" pos:end="475:49"><name pos:start="475:40" pos:end="475:40">s</name><operator pos:start="475:41" pos:end="475:42">-&gt;</operator><name pos:start="475:43" pos:end="475:49">pb_time</name></name> <operator pos:start="475:51" pos:end="475:52">||</operator>

            <name pos:start="477:13" pos:end="477:22"><name pos:start="477:13" pos:end="477:13">s</name><operator pos:start="477:14" pos:end="477:15">-&gt;</operator><name pos:start="477:16" pos:end="477:22">pp_time</name></name> <operator pos:start="477:24" pos:end="477:25">&lt;=</operator> <literal type="number" pos:start="477:27" pos:end="477:27">0</literal></expr>)</condition><block pos:start="477:29" pos:end="483:9">{<block_content pos:start="479:13" pos:end="481:27">

            <expr_stmt pos:start="479:13" pos:end="479:27"><expr pos:start="479:13" pos:end="479:26"><name pos:start="479:13" pos:end="479:22"><name pos:start="479:13" pos:end="479:13">s</name><operator pos:start="479:14" pos:end="479:15">-&gt;</operator><name pos:start="479:16" pos:end="479:22">pp_time</name></name> <operator pos:start="479:24" pos:end="479:24">=</operator> <literal type="number" pos:start="479:26" pos:end="479:26">2</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="481:13" pos:end="481:27"><expr pos:start="481:13" pos:end="481:26"><name pos:start="481:13" pos:end="481:22"><name pos:start="481:13" pos:end="481:13">s</name><operator pos:start="481:14" pos:end="481:15">-&gt;</operator><name pos:start="481:16" pos:end="481:22">pb_time</name></name> <operator pos:start="481:24" pos:end="481:24">=</operator> <literal type="number" pos:start="481:26" pos:end="481:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="485:9" pos:end="485:35"><expr pos:start="485:9" pos:end="485:34"><call pos:start="485:9" pos:end="485:34"><name pos:start="485:9" pos:end="485:31">ff_mpeg4_init_direct_mv</name><argument_list pos:start="485:32" pos:end="485:34">(<argument pos:start="485:33" pos:end="485:33"><expr pos:start="485:33" pos:end="485:33"><name pos:start="485:33" pos:end="485:33">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="491:5" pos:end="491:13">/* PEI */</comment>

    <if_stmt pos:start="493:5" pos:end="495:35"><if pos:start="493:5" pos:end="495:35">if <condition pos:start="493:8" pos:end="493:42">(<expr pos:start="493:9" pos:end="493:41"><call pos:start="493:9" pos:end="493:37"><name pos:start="493:9" pos:end="493:29">skip_1stop_8data_bits</name><argument_list pos:start="493:30" pos:end="493:37">(<argument pos:start="493:31" pos:end="493:36"><expr pos:start="493:31" pos:end="493:36"><operator pos:start="493:31" pos:end="493:31">&amp;</operator><name pos:start="493:32" pos:end="493:36"><name pos:start="493:32" pos:end="493:32">s</name><operator pos:start="493:33" pos:end="493:34">-&gt;</operator><name pos:start="493:35" pos:end="493:36">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="493:39" pos:end="493:39">&lt;</operator> <literal type="number" pos:start="493:41" pos:end="493:41">0</literal></expr>)</condition><block type="pseudo" pos:start="495:9" pos:end="495:35"><block_content pos:start="495:9" pos:end="495:35">

        <return pos:start="495:9" pos:end="495:35">return <expr pos:start="495:16" pos:end="495:34"><name pos:start="495:16" pos:end="495:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="499:5" pos:end="523:5"><if pos:start="499:5" pos:end="523:5">if<condition pos:start="499:7" pos:end="499:32">(<expr pos:start="499:8" pos:end="499:31"><name pos:start="499:8" pos:end="499:31"><name pos:start="499:8" pos:end="499:8">s</name><operator pos:start="499:9" pos:end="499:10">-&gt;</operator><name pos:start="499:11" pos:end="499:31">h263_slice_structured</name></name></expr>)</condition><block pos:start="499:33" pos:end="523:5">{<block_content pos:start="501:9" pos:end="521:9">

        <if_stmt pos:start="501:9" pos:end="507:9"><if pos:start="501:9" pos:end="507:9">if <condition pos:start="501:12" pos:end="501:35">(<expr pos:start="501:13" pos:end="501:34"><call pos:start="501:13" pos:end="501:29"><name pos:start="501:13" pos:end="501:21">get_bits1</name><argument_list pos:start="501:22" pos:end="501:29">(<argument pos:start="501:23" pos:end="501:28"><expr pos:start="501:23" pos:end="501:28"><operator pos:start="501:23" pos:end="501:23">&amp;</operator><name pos:start="501:24" pos:end="501:28"><name pos:start="501:24" pos:end="501:24">s</name><operator pos:start="501:25" pos:end="501:26">-&gt;</operator><name pos:start="501:27" pos:end="501:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="501:31" pos:end="501:32">!=</operator> <literal type="number" pos:start="501:34" pos:end="501:34">1</literal></expr>)</condition> <block pos:start="501:37" pos:end="507:9">{<block_content pos:start="503:13" pos:end="505:22">

            <expr_stmt pos:start="503:13" pos:end="503:69"><expr pos:start="503:13" pos:end="503:68"><call pos:start="503:13" pos:end="503:68"><name pos:start="503:13" pos:end="503:18">av_log</name><argument_list pos:start="503:19" pos:end="503:68">(<argument pos:start="503:20" pos:end="503:27"><expr pos:start="503:20" pos:end="503:27"><name pos:start="503:20" pos:end="503:27"><name pos:start="503:20" pos:end="503:20">s</name><operator pos:start="503:21" pos:end="503:22">-&gt;</operator><name pos:start="503:23" pos:end="503:27">avctx</name></name></expr></argument>, <argument pos:start="503:30" pos:end="503:41"><expr pos:start="503:30" pos:end="503:41"><name pos:start="503:30" pos:end="503:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="503:44" pos:end="503:67"><expr pos:start="503:44" pos:end="503:67"><literal type="string" pos:start="503:44" pos:end="503:67">"SEPB1 marker missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="505:13" pos:end="505:22">return <expr pos:start="505:20" pos:end="505:21"><operator pos:start="505:20" pos:end="505:20">-</operator><literal type="number" pos:start="505:21" pos:end="505:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="511:9" pos:end="511:30"><expr pos:start="511:9" pos:end="511:29"><call pos:start="511:9" pos:end="511:29"><name pos:start="511:9" pos:end="511:26">ff_h263_decode_mba</name><argument_list pos:start="511:27" pos:end="511:29">(<argument pos:start="511:28" pos:end="511:28"><expr pos:start="511:28" pos:end="511:28"><name pos:start="511:28" pos:end="511:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="515:9" pos:end="521:9"><if pos:start="515:9" pos:end="521:9">if <condition pos:start="515:12" pos:end="515:35">(<expr pos:start="515:13" pos:end="515:34"><call pos:start="515:13" pos:end="515:29"><name pos:start="515:13" pos:end="515:21">get_bits1</name><argument_list pos:start="515:22" pos:end="515:29">(<argument pos:start="515:23" pos:end="515:28"><expr pos:start="515:23" pos:end="515:28"><operator pos:start="515:23" pos:end="515:23">&amp;</operator><name pos:start="515:24" pos:end="515:28"><name pos:start="515:24" pos:end="515:24">s</name><operator pos:start="515:25" pos:end="515:26">-&gt;</operator><name pos:start="515:27" pos:end="515:28">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="515:31" pos:end="515:32">!=</operator> <literal type="number" pos:start="515:34" pos:end="515:34">1</literal></expr>)</condition> <block pos:start="515:37" pos:end="521:9">{<block_content pos:start="517:13" pos:end="519:22">

            <expr_stmt pos:start="517:13" pos:end="517:69"><expr pos:start="517:13" pos:end="517:68"><call pos:start="517:13" pos:end="517:68"><name pos:start="517:13" pos:end="517:18">av_log</name><argument_list pos:start="517:19" pos:end="517:68">(<argument pos:start="517:20" pos:end="517:27"><expr pos:start="517:20" pos:end="517:27"><name pos:start="517:20" pos:end="517:27"><name pos:start="517:20" pos:end="517:20">s</name><operator pos:start="517:21" pos:end="517:22">-&gt;</operator><name pos:start="517:23" pos:end="517:27">avctx</name></name></expr></argument>, <argument pos:start="517:30" pos:end="517:41"><expr pos:start="517:30" pos:end="517:41"><name pos:start="517:30" pos:end="517:41">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="517:44" pos:end="517:67"><expr pos:start="517:44" pos:end="517:67"><literal type="string" pos:start="517:44" pos:end="517:67">"SEPB2 marker missing\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="519:13" pos:end="519:22">return <expr pos:start="519:20" pos:end="519:21"><operator pos:start="519:20" pos:end="519:20">-</operator><literal type="number" pos:start="519:21" pos:end="519:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="525:5" pos:end="525:18"><expr pos:start="525:5" pos:end="525:17"><name pos:start="525:5" pos:end="525:13"><name pos:start="525:5" pos:end="525:5">s</name><operator pos:start="525:6" pos:end="525:7">-&gt;</operator><name pos:start="525:8" pos:end="525:13">f_code</name></name> <operator pos:start="525:15" pos:end="525:15">=</operator> <literal type="number" pos:start="525:17" pos:end="525:17">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="529:5" pos:end="541:5"><if pos:start="529:5" pos:end="535:5">if<condition pos:start="529:7" pos:end="529:19">(<expr pos:start="529:8" pos:end="529:18"><name pos:start="529:8" pos:end="529:18"><name pos:start="529:8" pos:end="529:8">s</name><operator pos:start="529:9" pos:end="529:10">-&gt;</operator><name pos:start="529:11" pos:end="529:18">h263_aic</name></name></expr>)</condition><block pos:start="529:20" pos:end="535:5">{<block_content pos:start="531:10" pos:end="533:52">

         <expr_stmt pos:start="531:10" pos:end="533:52"><expr pos:start="531:10" pos:end="533:51"><name pos:start="531:10" pos:end="531:28"><name pos:start="531:10" pos:end="531:10">s</name><operator pos:start="531:11" pos:end="531:12">-&gt;</operator><name pos:start="531:13" pos:end="531:28">y_dc_scale_table</name></name><operator pos:start="531:29" pos:end="531:29">=</operator>

         <name pos:start="533:10" pos:end="533:28"><name pos:start="533:10" pos:end="533:10">s</name><operator pos:start="533:11" pos:end="533:12">-&gt;</operator><name pos:start="533:13" pos:end="533:28">c_dc_scale_table</name></name><operator pos:start="533:29" pos:end="533:29">=</operator> <name pos:start="533:31" pos:end="533:51">ff_aic_dc_scale_table</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="535:6" pos:end="541:5">else<block pos:start="535:10" pos:end="541:5">{<block_content pos:start="537:9" pos:end="539:53">

        <expr_stmt pos:start="537:9" pos:end="539:53"><expr pos:start="537:9" pos:end="539:52"><name pos:start="537:9" pos:end="537:27"><name pos:start="537:9" pos:end="537:9">s</name><operator pos:start="537:10" pos:end="537:11">-&gt;</operator><name pos:start="537:12" pos:end="537:27">y_dc_scale_table</name></name><operator pos:start="537:28" pos:end="537:28">=</operator>

        <name pos:start="539:9" pos:end="539:27"><name pos:start="539:9" pos:end="539:9">s</name><operator pos:start="539:10" pos:end="539:11">-&gt;</operator><name pos:start="539:12" pos:end="539:27">c_dc_scale_table</name></name><operator pos:start="539:28" pos:end="539:28">=</operator> <name pos:start="539:30" pos:end="539:52">ff_mpeg1_dc_scale_table</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="545:9" pos:end="545:34"><expr pos:start="545:9" pos:end="545:33"><call pos:start="545:9" pos:end="545:33"><name pos:start="545:9" pos:end="545:30">ff_h263_show_pict_info</name><argument_list pos:start="545:31" pos:end="545:33">(<argument pos:start="545:32" pos:end="545:32"><expr pos:start="545:32" pos:end="545:32"><name pos:start="545:32" pos:end="545:32">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="547:5" pos:end="573:5"><if pos:start="547:5" pos:end="573:5">if <condition pos:start="547:8" pos:end="547:123">(<expr pos:start="547:9" pos:end="547:122"><name pos:start="547:9" pos:end="547:20"><name pos:start="547:9" pos:end="547:9">s</name><operator pos:start="547:10" pos:end="547:11">-&gt;</operator><name pos:start="547:12" pos:end="547:20">pict_type</name></name> <operator pos:start="547:22" pos:end="547:23">==</operator> <name pos:start="547:25" pos:end="547:41">AV_PICTURE_TYPE_I</name> <operator pos:start="547:43" pos:end="547:44">&amp;&amp;</operator> <name pos:start="547:46" pos:end="547:57"><name pos:start="547:46" pos:end="547:46">s</name><operator pos:start="547:47" pos:end="547:48">-&gt;</operator><name pos:start="547:49" pos:end="547:57">codec_tag</name></name> <operator pos:start="547:59" pos:end="547:60">==</operator> <call pos:start="547:62" pos:end="547:76"><name pos:start="547:62" pos:end="547:68">AV_RL32</name><argument_list pos:start="547:69" pos:end="547:76">(<argument pos:start="547:70" pos:end="547:75"><expr pos:start="547:70" pos:end="547:75"><literal type="string" pos:start="547:70" pos:end="547:75">"ZYGO"</literal></expr></argument>)</argument_list></call> <operator pos:start="547:78" pos:end="547:79">&amp;&amp;</operator> <call pos:start="547:81" pos:end="547:101"><name pos:start="547:81" pos:end="547:93">get_bits_left</name><argument_list pos:start="547:94" pos:end="547:101">(<argument pos:start="547:95" pos:end="547:100"><expr pos:start="547:95" pos:end="547:100"><operator pos:start="547:95" pos:end="547:95">&amp;</operator><name pos:start="547:96" pos:end="547:100"><name pos:start="547:96" pos:end="547:96">s</name><operator pos:start="547:97" pos:end="547:98">-&gt;</operator><name pos:start="547:99" pos:end="547:100">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="547:103" pos:end="547:104">&gt;=</operator> <literal type="number" pos:start="547:106" pos:end="547:109">85</literal> <operator pos:start="547:109" pos:end="547:109">+</operator> <literal type="number" pos:start="547:111" pos:end="547:112">13</literal><operator pos:start="547:113" pos:end="547:113">*</operator><literal type="number" pos:start="547:114" pos:end="547:114">3</literal><operator pos:start="547:115" pos:end="547:115">*</operator><literal type="number" pos:start="547:116" pos:end="547:119">16</literal> <operator pos:start="547:119" pos:end="547:119">+</operator> <literal type="number" pos:start="547:121" pos:end="547:122">50</literal></expr>)</condition><block pos:start="547:124" pos:end="573:5">{<block_content pos:start="549:9" pos:end="571:84">

        <decl_stmt pos:start="549:9" pos:end="549:16"><decl pos:start="549:9" pos:end="549:13"><type pos:start="549:9" pos:end="549:11"><name pos:start="549:9" pos:end="549:11">int</name></type> <name pos:start="549:13" pos:end="549:13">i</name></decl>,<decl pos:start="549:15" pos:end="549:15"><type ref="prev" pos:start="549:9" pos:end="549:11"/><name pos:start="549:15" pos:end="549:15">j</name></decl>;</decl_stmt>

        <for pos:start="551:9" pos:end="551:84">for<control pos:start="551:12" pos:end="551:27">(<init pos:start="551:13" pos:end="551:16"><expr pos:start="551:13" pos:end="551:15"><name pos:start="551:13" pos:end="551:13">i</name><operator pos:start="551:14" pos:end="551:14">=</operator><literal type="number" pos:start="551:15" pos:end="551:15">0</literal></expr>;</init> <condition pos:start="551:18" pos:end="551:22"><expr pos:start="551:18" pos:end="551:21"><name pos:start="551:18" pos:end="551:18">i</name><operator pos:start="551:19" pos:end="551:19">&lt;</operator><literal type="number" pos:start="551:20" pos:end="551:21">85</literal></expr>;</condition> <incr pos:start="551:24" pos:end="551:26"><expr pos:start="551:24" pos:end="551:26"><name pos:start="551:24" pos:end="551:24">i</name><operator pos:start="551:25" pos:end="551:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="551:29" pos:end="551:84"><block_content pos:start="551:29" pos:end="551:84"> <expr_stmt pos:start="551:29" pos:end="551:84"><expr pos:start="551:29" pos:end="551:83"><call pos:start="551:29" pos:end="551:83"><name pos:start="551:29" pos:end="551:34">av_log</name><argument_list pos:start="551:35" pos:end="551:83">(<argument pos:start="551:36" pos:end="551:43"><expr pos:start="551:36" pos:end="551:43"><name pos:start="551:36" pos:end="551:43"><name pos:start="551:36" pos:end="551:36">s</name><operator pos:start="551:37" pos:end="551:38">-&gt;</operator><name pos:start="551:39" pos:end="551:43">avctx</name></name></expr></argument>, <argument pos:start="551:46" pos:end="551:57"><expr pos:start="551:46" pos:end="551:57"><name pos:start="551:46" pos:end="551:57">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="551:60" pos:end="551:63"><expr pos:start="551:60" pos:end="551:63"><literal type="string" pos:start="551:60" pos:end="551:63">"%d"</literal></expr></argument>, <argument pos:start="551:66" pos:end="551:82"><expr pos:start="551:66" pos:end="551:82"><call pos:start="551:66" pos:end="551:82"><name pos:start="551:66" pos:end="551:74">get_bits1</name><argument_list pos:start="551:75" pos:end="551:82">(<argument pos:start="551:76" pos:end="551:81"><expr pos:start="551:76" pos:end="551:81"><operator pos:start="551:76" pos:end="551:76">&amp;</operator><name pos:start="551:77" pos:end="551:81"><name pos:start="551:77" pos:end="551:77">s</name><operator pos:start="551:78" pos:end="551:79">-&gt;</operator><name pos:start="551:80" pos:end="551:81">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

        <expr_stmt pos:start="553:9" pos:end="553:45"><expr pos:start="553:9" pos:end="553:44"><call pos:start="553:9" pos:end="553:44"><name pos:start="553:9" pos:end="553:14">av_log</name><argument_list pos:start="553:15" pos:end="553:44">(<argument pos:start="553:16" pos:end="553:23"><expr pos:start="553:16" pos:end="553:23"><name pos:start="553:16" pos:end="553:23"><name pos:start="553:16" pos:end="553:16">s</name><operator pos:start="553:17" pos:end="553:18">-&gt;</operator><name pos:start="553:19" pos:end="553:23">avctx</name></name></expr></argument>, <argument pos:start="553:26" pos:end="553:37"><expr pos:start="553:26" pos:end="553:37"><name pos:start="553:26" pos:end="553:37">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="553:40" pos:end="553:43"><expr pos:start="553:40" pos:end="553:43"><literal type="string" pos:start="553:40" pos:end="553:43">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="555:9" pos:end="569:9">for<control pos:start="555:12" pos:end="555:27">(<init pos:start="555:13" pos:end="555:16"><expr pos:start="555:13" pos:end="555:15"><name pos:start="555:13" pos:end="555:13">i</name><operator pos:start="555:14" pos:end="555:14">=</operator><literal type="number" pos:start="555:15" pos:end="555:15">0</literal></expr>;</init> <condition pos:start="555:18" pos:end="555:22"><expr pos:start="555:18" pos:end="555:21"><name pos:start="555:18" pos:end="555:18">i</name><operator pos:start="555:19" pos:end="555:19">&lt;</operator><literal type="number" pos:start="555:20" pos:end="555:21">13</literal></expr>;</condition> <incr pos:start="555:24" pos:end="555:26"><expr pos:start="555:24" pos:end="555:26"><name pos:start="555:24" pos:end="555:24">i</name><operator pos:start="555:25" pos:end="555:26">++</operator></expr></incr>)</control><block pos:start="555:28" pos:end="569:9">{<block_content pos:start="557:13" pos:end="567:49">

            <for pos:start="557:13" pos:end="565:13">for<control pos:start="557:16" pos:end="557:30">(<init pos:start="557:17" pos:end="557:20"><expr pos:start="557:17" pos:end="557:19"><name pos:start="557:17" pos:end="557:17">j</name><operator pos:start="557:18" pos:end="557:18">=</operator><literal type="number" pos:start="557:19" pos:end="557:19">0</literal></expr>;</init> <condition pos:start="557:22" pos:end="557:25"><expr pos:start="557:22" pos:end="557:24"><name pos:start="557:22" pos:end="557:22">j</name><operator pos:start="557:23" pos:end="557:23">&lt;</operator><literal type="number" pos:start="557:24" pos:end="557:24">3</literal></expr>;</condition> <incr pos:start="557:27" pos:end="557:29"><expr pos:start="557:27" pos:end="557:29"><name pos:start="557:27" pos:end="557:27">j</name><operator pos:start="557:28" pos:end="557:29">++</operator></expr></incr>)</control><block pos:start="557:31" pos:end="565:13">{<block_content pos:start="559:17" pos:end="563:58">

                <decl_stmt pos:start="559:17" pos:end="559:43"><decl pos:start="559:17" pos:end="559:42"><type pos:start="559:17" pos:end="559:19"><name pos:start="559:17" pos:end="559:19">int</name></type> <name pos:start="559:21" pos:end="559:21">v</name><init pos:start="559:22" pos:end="559:42">= <expr pos:start="559:24" pos:end="559:42"><call pos:start="559:24" pos:end="559:42"><name pos:start="559:24" pos:end="559:31">get_bits</name><argument_list pos:start="559:32" pos:end="559:42">(<argument pos:start="559:33" pos:end="559:38"><expr pos:start="559:33" pos:end="559:38"><operator pos:start="559:33" pos:end="559:33">&amp;</operator><name pos:start="559:34" pos:end="559:38"><name pos:start="559:34" pos:end="559:34">s</name><operator pos:start="559:35" pos:end="559:36">-&gt;</operator><name pos:start="559:37" pos:end="559:38">gb</name></name></expr></argument>, <argument pos:start="559:41" pos:end="559:41"><expr pos:start="559:41" pos:end="559:41"><literal type="number" pos:start="559:41" pos:end="559:41">8</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="561:17" pos:end="561:45"><expr pos:start="561:17" pos:end="561:44"><name pos:start="561:17" pos:end="561:17">v</name> <operator pos:start="561:19" pos:end="561:20">|=</operator> <call pos:start="561:22" pos:end="561:41"><name pos:start="561:22" pos:end="561:30">get_sbits</name><argument_list pos:start="561:31" pos:end="561:41">(<argument pos:start="561:32" pos:end="561:37"><expr pos:start="561:32" pos:end="561:37"><operator pos:start="561:32" pos:end="561:32">&amp;</operator><name pos:start="561:33" pos:end="561:37"><name pos:start="561:33" pos:end="561:33">s</name><operator pos:start="561:34" pos:end="561:35">-&gt;</operator><name pos:start="561:36" pos:end="561:37">gb</name></name></expr></argument>, <argument pos:start="561:40" pos:end="561:40"><expr pos:start="561:40" pos:end="561:40"><literal type="number" pos:start="561:40" pos:end="561:40">8</literal></expr></argument>)</argument_list></call><operator pos:start="561:42" pos:end="561:43">&lt;&lt;</operator><literal type="number" pos:start="561:44" pos:end="561:44">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="563:17" pos:end="563:58"><expr pos:start="563:17" pos:end="563:57"><call pos:start="563:17" pos:end="563:57"><name pos:start="563:17" pos:end="563:22">av_log</name><argument_list pos:start="563:23" pos:end="563:57">(<argument pos:start="563:24" pos:end="563:31"><expr pos:start="563:24" pos:end="563:31"><name pos:start="563:24" pos:end="563:31"><name pos:start="563:24" pos:end="563:24">s</name><operator pos:start="563:25" pos:end="563:26">-&gt;</operator><name pos:start="563:27" pos:end="563:31">avctx</name></name></expr></argument>, <argument pos:start="563:34" pos:end="563:45"><expr pos:start="563:34" pos:end="563:45"><name pos:start="563:34" pos:end="563:45">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="563:48" pos:end="563:53"><expr pos:start="563:48" pos:end="563:53"><literal type="string" pos:start="563:48" pos:end="563:53">" %5d"</literal></expr></argument>, <argument pos:start="563:56" pos:end="563:56"><expr pos:start="563:56" pos:end="563:56"><name pos:start="563:56" pos:end="563:56">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="567:13" pos:end="567:49"><expr pos:start="567:13" pos:end="567:48"><call pos:start="567:13" pos:end="567:48"><name pos:start="567:13" pos:end="567:18">av_log</name><argument_list pos:start="567:19" pos:end="567:48">(<argument pos:start="567:20" pos:end="567:27"><expr pos:start="567:20" pos:end="567:27"><name pos:start="567:20" pos:end="567:27"><name pos:start="567:20" pos:end="567:20">s</name><operator pos:start="567:21" pos:end="567:22">-&gt;</operator><name pos:start="567:23" pos:end="567:27">avctx</name></name></expr></argument>, <argument pos:start="567:30" pos:end="567:41"><expr pos:start="567:30" pos:end="567:41"><name pos:start="567:30" pos:end="567:41">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="567:44" pos:end="567:47"><expr pos:start="567:44" pos:end="567:47"><literal type="string" pos:start="567:44" pos:end="567:47">"\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="571:9" pos:end="571:84">for<control pos:start="571:12" pos:end="571:27">(<init pos:start="571:13" pos:end="571:16"><expr pos:start="571:13" pos:end="571:15"><name pos:start="571:13" pos:end="571:13">i</name><operator pos:start="571:14" pos:end="571:14">=</operator><literal type="number" pos:start="571:15" pos:end="571:15">0</literal></expr>;</init> <condition pos:start="571:18" pos:end="571:22"><expr pos:start="571:18" pos:end="571:21"><name pos:start="571:18" pos:end="571:18">i</name><operator pos:start="571:19" pos:end="571:19">&lt;</operator><literal type="number" pos:start="571:20" pos:end="571:21">50</literal></expr>;</condition> <incr pos:start="571:24" pos:end="571:26"><expr pos:start="571:24" pos:end="571:26"><name pos:start="571:24" pos:end="571:24">i</name><operator pos:start="571:25" pos:end="571:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="571:29" pos:end="571:84"><block_content pos:start="571:29" pos:end="571:84"> <expr_stmt pos:start="571:29" pos:end="571:84"><expr pos:start="571:29" pos:end="571:83"><call pos:start="571:29" pos:end="571:83"><name pos:start="571:29" pos:end="571:34">av_log</name><argument_list pos:start="571:35" pos:end="571:83">(<argument pos:start="571:36" pos:end="571:43"><expr pos:start="571:36" pos:end="571:43"><name pos:start="571:36" pos:end="571:43"><name pos:start="571:36" pos:end="571:36">s</name><operator pos:start="571:37" pos:end="571:38">-&gt;</operator><name pos:start="571:39" pos:end="571:43">avctx</name></name></expr></argument>, <argument pos:start="571:46" pos:end="571:57"><expr pos:start="571:46" pos:end="571:57"><name pos:start="571:46" pos:end="571:57">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="571:60" pos:end="571:63"><expr pos:start="571:60" pos:end="571:63"><literal type="string" pos:start="571:60" pos:end="571:63">"%d"</literal></expr></argument>, <argument pos:start="571:66" pos:end="571:82"><expr pos:start="571:66" pos:end="571:82"><call pos:start="571:66" pos:end="571:82"><name pos:start="571:66" pos:end="571:74">get_bits1</name><argument_list pos:start="571:75" pos:end="571:82">(<argument pos:start="571:76" pos:end="571:81"><expr pos:start="571:76" pos:end="571:81"><operator pos:start="571:76" pos:end="571:76">&amp;</operator><name pos:start="571:77" pos:end="571:81"><name pos:start="571:77" pos:end="571:77">s</name><operator pos:start="571:78" pos:end="571:79">-&gt;</operator><name pos:start="571:80" pos:end="571:81">gb</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="577:5" pos:end="577:13">return <expr pos:start="577:12" pos:end="577:12"><literal type="number" pos:start="577:12" pos:end="577:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
