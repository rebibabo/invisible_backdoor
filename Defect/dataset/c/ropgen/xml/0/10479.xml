<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/10479.c" pos:tabs="8"><macro pos:start="1:1" pos:end="15:44"><name pos:start="1:1" pos:end="1:21">yuv2yuvX_altivec_real</name><argument_list pos:start="1:22" pos:end="15:44">(<argument pos:start="1:23" pos:end="1:35">SwsContext *c</argument>,

                      <argument pos:start="3:23" pos:end="3:46">const int16_t *lumFilter</argument>, <argument pos:start="3:49" pos:end="3:70">const int16_t **lumSrc</argument>,

                      <argument pos:start="5:23" pos:end="5:39">int lumFilterSize</argument>, <argument pos:start="5:42" pos:end="5:65">const int16_t *chrFilter</argument>,

                      <argument pos:start="7:23" pos:end="7:45">const int16_t **chrUSrc</argument>, <argument pos:start="7:48" pos:end="7:70">const int16_t **chrVSrc</argument>,

                      <argument pos:start="9:23" pos:end="9:39">int chrFilterSize</argument>, <argument pos:start="9:42" pos:end="9:63">const int16_t **alpSrc</argument>,

                      <argument pos:start="11:23" pos:end="11:35">uint8_t *dest</argument>, <argument pos:start="11:38" pos:end="11:51">uint8_t *uDest</argument>,

                      <argument pos:start="13:23" pos:end="13:36">uint8_t *vDest</argument>, <argument pos:start="13:39" pos:end="13:52">uint8_t *aDest</argument>,

                      <argument pos:start="15:23" pos:end="15:30">int dstW</argument>, <argument pos:start="15:33" pos:end="15:43">int chrDstW</argument>)</argument_list></macro>

<block pos:start="17:1" pos:end="253:1">{<block_content pos:start="19:5" pos:end="251:5">

    <decl_stmt pos:start="19:5" pos:end="19:80"><decl pos:start="19:5" pos:end="19:79"><type pos:start="19:5" pos:end="19:27"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:16">vector</name> <name pos:start="19:18" pos:end="19:23">signed</name> <name pos:start="19:25" pos:end="19:27">int</name></type> <name pos:start="19:29" pos:end="19:32">vini</name> <init pos:start="19:34" pos:end="19:79">= <expr pos:start="19:36" pos:end="19:79"><block pos:start="19:36" pos:end="19:79">{<expr pos:start="19:37" pos:end="19:45"><operator pos:start="19:37" pos:end="19:37">(</operator><literal type="number" pos:start="19:38" pos:end="19:38">1</literal> <operator pos:start="19:40" pos:end="19:41">&lt;&lt;</operator> <literal type="number" pos:start="19:43" pos:end="19:44">18</literal><operator pos:start="19:45" pos:end="19:45">)</operator></expr>, <expr pos:start="19:48" pos:end="19:56"><operator pos:start="19:48" pos:end="19:48">(</operator><literal type="number" pos:start="19:49" pos:end="19:49">1</literal> <operator pos:start="19:51" pos:end="19:52">&lt;&lt;</operator> <literal type="number" pos:start="19:54" pos:end="19:55">18</literal><operator pos:start="19:56" pos:end="19:56">)</operator></expr>, <expr pos:start="19:59" pos:end="19:67"><operator pos:start="19:59" pos:end="19:59">(</operator><literal type="number" pos:start="19:60" pos:end="19:60">1</literal> <operator pos:start="19:62" pos:end="19:63">&lt;&lt;</operator> <literal type="number" pos:start="19:65" pos:end="19:66">18</literal><operator pos:start="19:67" pos:end="19:67">)</operator></expr>, <expr pos:start="19:70" pos:end="19:78"><operator pos:start="19:70" pos:end="19:70">(</operator><literal type="number" pos:start="19:71" pos:end="19:71">1</literal> <operator pos:start="19:73" pos:end="19:74">&lt;&lt;</operator> <literal type="number" pos:start="19:76" pos:end="19:77">18</literal><operator pos:start="19:78" pos:end="19:78">)</operator></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:22"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:16"><specifier pos:start="21:5" pos:end="21:12">register</specifier> <name pos:start="21:14" pos:end="21:16">int</name></type> <name pos:start="21:18" pos:end="21:18">i</name></decl>, <decl pos:start="21:21" pos:end="21:21"><type ref="prev" pos:start="21:5" pos:end="21:16"/><name pos:start="21:21" pos:end="21:21">j</name></decl>;</decl_stmt>

    <block pos:start="23:5" pos:end="117:5">{<block_content pos:start="25:9" pos:end="115:57">

        <expr_stmt pos:start="25:9" pos:end="25:44"><expr pos:start="25:9" pos:end="25:43"><call pos:start="25:9" pos:end="25:37"><name pos:start="25:9" pos:end="25:23">DECLARE_ALIGNED</name><argument_list pos:start="25:24" pos:end="25:37">(<argument pos:start="25:25" pos:end="25:26"><expr pos:start="25:25" pos:end="25:26"><literal type="number" pos:start="25:25" pos:end="25:26">16</literal></expr></argument>, <argument pos:start="25:29" pos:end="25:31"><expr pos:start="25:29" pos:end="25:31"><name pos:start="25:29" pos:end="25:31">int</name></expr></argument>, <argument pos:start="25:34" pos:end="25:36"><expr pos:start="25:34" pos:end="25:36"><name pos:start="25:34" pos:end="25:36">val</name></expr></argument>)</argument_list></call><index pos:start="25:38" pos:end="25:43">[<expr pos:start="25:39" pos:end="25:42"><name pos:start="25:39" pos:end="25:42">dstW</name></expr>]</index></expr>;</expr_stmt>



        <for pos:start="29:9" pos:end="33:9">for <control pos:start="29:13" pos:end="29:40">(<init pos:start="29:14" pos:end="29:19"><expr pos:start="29:14" pos:end="29:18"><name pos:start="29:14" pos:end="29:14">i</name> <operator pos:start="29:16" pos:end="29:16">=</operator> <literal type="number" pos:start="29:18" pos:end="29:18">0</literal></expr>;</init> <condition pos:start="29:21" pos:end="29:34"><expr pos:start="29:21" pos:end="29:33"><name pos:start="29:21" pos:end="29:21">i</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <operator pos:start="29:25" pos:end="29:25">(</operator><name pos:start="29:26" pos:end="29:29">dstW</name> <operator pos:start="29:31" pos:end="29:31">-</operator><literal type="number" pos:start="29:32" pos:end="29:32">7</literal><operator pos:start="29:33" pos:end="29:33">)</operator></expr>;</condition> <incr pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><name pos:start="29:36" pos:end="29:36">i</name><operator pos:start="29:37" pos:end="29:38">+=</operator><literal type="number" pos:start="29:39" pos:end="29:39">4</literal></expr></incr>)</control> <block pos:start="29:42" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:38">

            <expr_stmt pos:start="31:13" pos:end="31:38"><expr pos:start="31:13" pos:end="31:37"><call pos:start="31:13" pos:end="31:37"><name pos:start="31:13" pos:end="31:18">vec_st</name><argument_list pos:start="31:19" pos:end="31:37">(<argument pos:start="31:20" pos:end="31:23"><expr pos:start="31:20" pos:end="31:23"><name pos:start="31:20" pos:end="31:23">vini</name></expr></argument>, <argument pos:start="31:26" pos:end="31:31"><expr pos:start="31:26" pos:end="31:31"><name pos:start="31:26" pos:end="31:26">i</name> <operator pos:start="31:28" pos:end="31:29">&lt;&lt;</operator> <literal type="number" pos:start="31:31" pos:end="31:31">2</literal></expr></argument>, <argument pos:start="31:34" pos:end="31:36"><expr pos:start="31:34" pos:end="31:36"><name pos:start="31:34" pos:end="31:36">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="35:9" pos:end="39:9">for <control pos:start="35:13" pos:end="35:29">(<init pos:start="35:14" pos:end="35:14">;</init> <condition pos:start="35:16" pos:end="35:24"><expr pos:start="35:16" pos:end="35:23"><name pos:start="35:16" pos:end="35:16">i</name> <operator pos:start="35:18" pos:end="35:18">&lt;</operator> <name pos:start="35:20" pos:end="35:23">dstW</name></expr>;</condition> <incr pos:start="35:26" pos:end="35:28"><expr pos:start="35:26" pos:end="35:28"><name pos:start="35:26" pos:end="35:26">i</name><operator pos:start="35:27" pos:end="35:28">++</operator></expr></incr>)</control> <block pos:start="35:31" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:31">

            <expr_stmt pos:start="37:13" pos:end="37:31"><expr pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:15">val</name><index pos:start="37:16" pos:end="37:18">[<expr pos:start="37:17" pos:end="37:17"><name pos:start="37:17" pos:end="37:17">i</name></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <operator pos:start="37:22" pos:end="37:22">(</operator><literal type="number" pos:start="37:23" pos:end="37:23">1</literal> <operator pos:start="37:25" pos:end="37:26">&lt;&lt;</operator> <literal type="number" pos:start="37:28" pos:end="37:29">18</literal><operator pos:start="37:30" pos:end="37:30">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="43:9" pos:end="113:9">for <control pos:start="43:13" pos:end="43:43">(<init pos:start="43:14" pos:end="43:19"><expr pos:start="43:14" pos:end="43:18"><name pos:start="43:14" pos:end="43:14">j</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</init> <condition pos:start="43:21" pos:end="43:38"><expr pos:start="43:21" pos:end="43:37"><name pos:start="43:21" pos:end="43:21">j</name> <operator pos:start="43:23" pos:end="43:23">&lt;</operator> <name pos:start="43:25" pos:end="43:37">lumFilterSize</name></expr>;</condition> <incr pos:start="43:40" pos:end="43:42"><expr pos:start="43:40" pos:end="43:42"><name pos:start="43:40" pos:end="43:40">j</name><operator pos:start="43:41" pos:end="43:42">++</operator></expr></incr>)</control> <block pos:start="43:45" pos:end="113:9">{<block_content pos:start="45:13" pos:end="111:13">

            <decl_stmt pos:start="45:13" pos:end="45:75"><decl pos:start="45:13" pos:end="45:34"><type pos:start="45:13" pos:end="45:31"><name pos:start="45:13" pos:end="45:18">vector</name> <name pos:start="45:20" pos:end="45:25">signed</name> <name pos:start="45:27" pos:end="45:31">short</name></type> <name pos:start="45:33" pos:end="45:34">l1</name></decl>, <decl pos:start="45:37" pos:end="45:74"><type ref="prev" pos:start="45:13" pos:end="45:31"/><name pos:start="45:37" pos:end="45:46">vLumFilter</name> <init pos:start="45:48" pos:end="45:74">= <expr pos:start="45:50" pos:end="45:74"><call pos:start="45:50" pos:end="45:74"><name pos:start="45:50" pos:end="45:55">vec_ld</name><argument_list pos:start="45:56" pos:end="45:74">(<argument pos:start="45:57" pos:end="45:62"><expr pos:start="45:57" pos:end="45:62"><name pos:start="45:57" pos:end="45:57">j</name> <operator pos:start="45:59" pos:end="45:60">&lt;&lt;</operator> <literal type="number" pos:start="45:62" pos:end="45:62">1</literal></expr></argument>, <argument pos:start="45:65" pos:end="45:73"><expr pos:start="45:65" pos:end="45:73"><name pos:start="45:65" pos:end="45:73">lumFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="47:13" pos:end="47:75"><decl pos:start="47:13" pos:end="47:37"><type pos:start="47:13" pos:end="47:32"><name pos:start="47:13" pos:end="47:18">vector</name> <name pos:start="47:20" pos:end="47:27">unsigned</name> <name pos:start="47:29" pos:end="47:32">char</name></type> <name pos:start="47:34" pos:end="47:37">perm</name></decl>, <decl pos:start="47:40" pos:end="47:74"><type ref="prev" pos:start="47:13" pos:end="47:32"/><name pos:start="47:40" pos:end="47:44">perm0</name> <init pos:start="47:46" pos:end="47:74">= <expr pos:start="47:48" pos:end="47:74"><call pos:start="47:48" pos:end="47:74"><name pos:start="47:48" pos:end="47:55">vec_lvsl</name><argument_list pos:start="47:56" pos:end="47:74">(<argument pos:start="47:57" pos:end="47:62"><expr pos:start="47:57" pos:end="47:62"><name pos:start="47:57" pos:end="47:57">j</name> <operator pos:start="47:59" pos:end="47:60">&lt;&lt;</operator> <literal type="number" pos:start="47:62" pos:end="47:62">1</literal></expr></argument>, <argument pos:start="47:65" pos:end="47:73"><expr pos:start="47:65" pos:end="47:73"><name pos:start="47:65" pos:end="47:73">lumFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:65"><expr pos:start="49:13" pos:end="49:64"><name pos:start="49:13" pos:end="49:22">vLumFilter</name> <operator pos:start="49:24" pos:end="49:24">=</operator> <call pos:start="49:26" pos:end="49:64"><name pos:start="49:26" pos:end="49:33">vec_perm</name><argument_list pos:start="49:34" pos:end="49:64">(<argument pos:start="49:35" pos:end="49:44"><expr pos:start="49:35" pos:end="49:44"><name pos:start="49:35" pos:end="49:44">vLumFilter</name></expr></argument>, <argument pos:start="49:47" pos:end="49:56"><expr pos:start="49:47" pos:end="49:56"><name pos:start="49:47" pos:end="49:56">vLumFilter</name></expr></argument>, <argument pos:start="49:59" pos:end="49:63"><expr pos:start="49:59" pos:end="49:63"><name pos:start="49:59" pos:end="49:63">perm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:50"><expr pos:start="51:13" pos:end="51:49"><name pos:start="51:13" pos:end="51:22">vLumFilter</name> <operator pos:start="51:24" pos:end="51:24">=</operator> <call pos:start="51:26" pos:end="51:49"><name pos:start="51:26" pos:end="51:34">vec_splat</name><argument_list pos:start="51:35" pos:end="51:49">(<argument pos:start="51:36" pos:end="51:45"><expr pos:start="51:36" pos:end="51:45"><name pos:start="51:36" pos:end="51:45">vLumFilter</name></expr></argument>, <argument pos:start="51:48" pos:end="51:48"><expr pos:start="51:48" pos:end="51:48"><literal type="number" pos:start="51:48" pos:end="51:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="51:52" pos:end="51:98">// lumFilter[j] is loaded 8 times in vLumFilter</comment>



            <expr_stmt pos:start="55:13" pos:end="55:42"><expr pos:start="55:13" pos:end="55:41"><name pos:start="55:13" pos:end="55:16">perm</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:41"><name pos:start="55:20" pos:end="55:27">vec_lvsl</name><argument_list pos:start="55:28" pos:end="55:41">(<argument pos:start="55:29" pos:end="55:29"><expr pos:start="55:29" pos:end="55:29"><literal type="number" pos:start="55:29" pos:end="55:29">0</literal></expr></argument>, <argument pos:start="55:32" pos:end="55:40"><expr pos:start="55:32" pos:end="55:40"><name pos:start="55:32" pos:end="55:40"><name pos:start="55:32" pos:end="55:37">lumSrc</name><index pos:start="55:38" pos:end="55:40">[<expr pos:start="55:39" pos:end="55:39"><name pos:start="55:39" pos:end="55:39">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:38"><expr pos:start="57:13" pos:end="57:37"><name pos:start="57:13" pos:end="57:14">l1</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <call pos:start="57:18" pos:end="57:37"><name pos:start="57:18" pos:end="57:23">vec_ld</name><argument_list pos:start="57:24" pos:end="57:37">(<argument pos:start="57:25" pos:end="57:25"><expr pos:start="57:25" pos:end="57:25"><literal type="number" pos:start="57:25" pos:end="57:25">0</literal></expr></argument>, <argument pos:start="57:28" pos:end="57:36"><expr pos:start="57:28" pos:end="57:36"><name pos:start="57:28" pos:end="57:36"><name pos:start="57:28" pos:end="57:33">lumSrc</name><index pos:start="57:34" pos:end="57:36">[<expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="61:13" pos:end="105:13">for <control pos:start="61:17" pos:end="61:45">(<init pos:start="61:18" pos:end="61:23"><expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:18">i</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <literal type="number" pos:start="61:22" pos:end="61:22">0</literal></expr>;</init> <condition pos:start="61:25" pos:end="61:39"><expr pos:start="61:25" pos:end="61:38"><name pos:start="61:25" pos:end="61:25">i</name> <operator pos:start="61:27" pos:end="61:27">&lt;</operator> <operator pos:start="61:29" pos:end="61:29">(</operator><name pos:start="61:30" pos:end="61:33">dstW</name> <operator pos:start="61:35" pos:end="61:35">-</operator> <literal type="number" pos:start="61:37" pos:end="61:37">7</literal><operator pos:start="61:38" pos:end="61:38">)</operator></expr>;</condition> <incr pos:start="61:41" pos:end="61:44"><expr pos:start="61:41" pos:end="61:44"><name pos:start="61:41" pos:end="61:41">i</name><operator pos:start="61:42" pos:end="61:43">+=</operator><literal type="number" pos:start="61:44" pos:end="61:44">8</literal></expr></incr>)</control> <block pos:start="61:47" pos:end="105:13">{<block_content pos:start="63:17" pos:end="103:24">

                <decl_stmt pos:start="63:17" pos:end="63:36"><decl pos:start="63:17" pos:end="63:35"><type pos:start="63:17" pos:end="63:19"><name pos:start="63:17" pos:end="63:19">int</name></type> <name pos:start="63:21" pos:end="63:26">offset</name> <init pos:start="63:28" pos:end="63:35">= <expr pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:30">i</name> <operator pos:start="63:32" pos:end="63:33">&lt;&lt;</operator> <literal type="number" pos:start="63:35" pos:end="63:35">2</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="65:17" pos:end="65:74"><decl pos:start="65:17" pos:end="65:73"><type pos:start="65:17" pos:end="65:35"><name pos:start="65:17" pos:end="65:22">vector</name> <name pos:start="65:24" pos:end="65:29">signed</name> <name pos:start="65:31" pos:end="65:35">short</name></type> <name pos:start="65:37" pos:end="65:38">l2</name> <init pos:start="65:40" pos:end="65:73">= <expr pos:start="65:42" pos:end="65:73"><call pos:start="65:42" pos:end="65:73"><name pos:start="65:42" pos:end="65:47">vec_ld</name><argument_list pos:start="65:48" pos:end="65:73">(<argument pos:start="65:49" pos:end="65:61"><expr pos:start="65:49" pos:end="65:61"><operator pos:start="65:49" pos:end="65:49">(</operator><name pos:start="65:50" pos:end="65:50">i</name> <operator pos:start="65:52" pos:end="65:53">&lt;&lt;</operator> <literal type="number" pos:start="65:55" pos:end="65:55">1</literal><operator pos:start="65:56" pos:end="65:56">)</operator> <operator pos:start="65:58" pos:end="65:58">+</operator> <literal type="number" pos:start="65:60" pos:end="65:61">16</literal></expr></argument>, <argument pos:start="65:64" pos:end="65:72"><expr pos:start="65:64" pos:end="65:72"><name pos:start="65:64" pos:end="65:72"><name pos:start="65:64" pos:end="65:69">lumSrc</name><index pos:start="65:70" pos:end="65:72">[<expr pos:start="65:71" pos:end="65:71"><name pos:start="65:71" pos:end="65:71">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="69:17" pos:end="69:59"><decl pos:start="69:17" pos:end="69:58"><type pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:22">vector</name> <name pos:start="69:24" pos:end="69:29">signed</name> <name pos:start="69:31" pos:end="69:33">int</name></type> <name pos:start="69:35" pos:end="69:36">v1</name> <init pos:start="69:38" pos:end="69:58">= <expr pos:start="69:40" pos:end="69:58"><call pos:start="69:40" pos:end="69:58"><name pos:start="69:40" pos:end="69:45">vec_ld</name><argument_list pos:start="69:46" pos:end="69:58">(<argument pos:start="69:47" pos:end="69:52"><expr pos:start="69:47" pos:end="69:52"><name pos:start="69:47" pos:end="69:52">offset</name></expr></argument>, <argument pos:start="69:55" pos:end="69:57"><expr pos:start="69:55" pos:end="69:57"><name pos:start="69:55" pos:end="69:57">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="71:17" pos:end="71:64"><decl pos:start="71:17" pos:end="71:63"><type pos:start="71:17" pos:end="71:33"><name pos:start="71:17" pos:end="71:22">vector</name> <name pos:start="71:24" pos:end="71:29">signed</name> <name pos:start="71:31" pos:end="71:33">int</name></type> <name pos:start="71:35" pos:end="71:36">v2</name> <init pos:start="71:38" pos:end="71:63">= <expr pos:start="71:40" pos:end="71:63"><call pos:start="71:40" pos:end="71:63"><name pos:start="71:40" pos:end="71:45">vec_ld</name><argument_list pos:start="71:46" pos:end="71:63">(<argument pos:start="71:47" pos:end="71:57"><expr pos:start="71:47" pos:end="71:57"><name pos:start="71:47" pos:end="71:52">offset</name> <operator pos:start="71:54" pos:end="71:54">+</operator> <literal type="number" pos:start="71:56" pos:end="71:57">16</literal></expr></argument>, <argument pos:start="71:60" pos:end="71:62"><expr pos:start="71:60" pos:end="71:62"><name pos:start="71:60" pos:end="71:62">val</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="75:17" pos:end="75:64"><decl pos:start="75:17" pos:end="75:63"><type pos:start="75:17" pos:end="75:35"><name pos:start="75:17" pos:end="75:22">vector</name> <name pos:start="75:24" pos:end="75:29">signed</name> <name pos:start="75:31" pos:end="75:35">short</name></type> <name pos:start="75:37" pos:end="75:38">ls</name> <init pos:start="75:40" pos:end="75:63">= <expr pos:start="75:42" pos:end="75:63"><call pos:start="75:42" pos:end="75:63"><name pos:start="75:42" pos:end="75:49">vec_perm</name><argument_list pos:start="75:50" pos:end="75:63">(<argument pos:start="75:51" pos:end="75:52"><expr pos:start="75:51" pos:end="75:52"><name pos:start="75:51" pos:end="75:52">l1</name></expr></argument>, <argument pos:start="75:55" pos:end="75:56"><expr pos:start="75:55" pos:end="75:56"><name pos:start="75:55" pos:end="75:56">l2</name></expr></argument>, <argument pos:start="75:59" pos:end="75:62"><expr pos:start="75:59" pos:end="75:62"><name pos:start="75:59" pos:end="75:62">perm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="75:66" pos:end="75:99">// lumSrc[j][i] ... lumSrc[j][i+7]</comment>



                <decl_stmt pos:start="79:17" pos:end="79:64"><decl pos:start="79:17" pos:end="79:63"><type pos:start="79:17" pos:end="79:33"><name pos:start="79:17" pos:end="79:22">vector</name> <name pos:start="79:24" pos:end="79:29">signed</name> <name pos:start="79:31" pos:end="79:33">int</name></type> <name pos:start="79:35" pos:end="79:36">i1</name> <init pos:start="79:38" pos:end="79:63">= <expr pos:start="79:40" pos:end="79:63"><call pos:start="79:40" pos:end="79:63"><name pos:start="79:40" pos:end="79:47">vec_mule</name><argument_list pos:start="79:48" pos:end="79:63">(<argument pos:start="79:49" pos:end="79:58"><expr pos:start="79:49" pos:end="79:58"><name pos:start="79:49" pos:end="79:58">vLumFilter</name></expr></argument>, <argument pos:start="79:61" pos:end="79:62"><expr pos:start="79:61" pos:end="79:62"><name pos:start="79:61" pos:end="79:62">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="81:17" pos:end="81:64"><decl pos:start="81:17" pos:end="81:63"><type pos:start="81:17" pos:end="81:33"><name pos:start="81:17" pos:end="81:22">vector</name> <name pos:start="81:24" pos:end="81:29">signed</name> <name pos:start="81:31" pos:end="81:33">int</name></type> <name pos:start="81:35" pos:end="81:36">i2</name> <init pos:start="81:38" pos:end="81:63">= <expr pos:start="81:40" pos:end="81:63"><call pos:start="81:40" pos:end="81:63"><name pos:start="81:40" pos:end="81:47">vec_mulo</name><argument_list pos:start="81:48" pos:end="81:63">(<argument pos:start="81:49" pos:end="81:58"><expr pos:start="81:49" pos:end="81:58"><name pos:start="81:49" pos:end="81:58">vLumFilter</name></expr></argument>, <argument pos:start="81:61" pos:end="81:62"><expr pos:start="81:61" pos:end="81:62"><name pos:start="81:61" pos:end="81:62">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="85:17" pos:end="85:59"><decl pos:start="85:17" pos:end="85:58"><type pos:start="85:17" pos:end="85:33"><name pos:start="85:17" pos:end="85:22">vector</name> <name pos:start="85:24" pos:end="85:29">signed</name> <name pos:start="85:31" pos:end="85:33">int</name></type> <name pos:start="85:35" pos:end="85:37">vf1</name> <init pos:start="85:39" pos:end="85:58">= <expr pos:start="85:41" pos:end="85:58"><call pos:start="85:41" pos:end="85:58"><name pos:start="85:41" pos:end="85:50">vec_mergeh</name><argument_list pos:start="85:51" pos:end="85:58">(<argument pos:start="85:52" pos:end="85:53"><expr pos:start="85:52" pos:end="85:53"><name pos:start="85:52" pos:end="85:53">i1</name></expr></argument>, <argument pos:start="85:56" pos:end="85:57"><expr pos:start="85:56" pos:end="85:57"><name pos:start="85:56" pos:end="85:57">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="87:17" pos:end="87:59"><decl pos:start="87:17" pos:end="87:58"><type pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:22">vector</name> <name pos:start="87:24" pos:end="87:29">signed</name> <name pos:start="87:31" pos:end="87:33">int</name></type> <name pos:start="87:35" pos:end="87:37">vf2</name> <init pos:start="87:39" pos:end="87:58">= <expr pos:start="87:41" pos:end="87:58"><call pos:start="87:41" pos:end="87:58"><name pos:start="87:41" pos:end="87:50">vec_mergel</name><argument_list pos:start="87:51" pos:end="87:58">(<argument pos:start="87:52" pos:end="87:53"><expr pos:start="87:52" pos:end="87:53"><name pos:start="87:52" pos:end="87:53">i1</name></expr></argument>, <argument pos:start="87:56" pos:end="87:57"><expr pos:start="87:56" pos:end="87:57"><name pos:start="87:56" pos:end="87:57">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="87:61" pos:end="87:124">// lumSrc[j][i] * lumFilter[j] ... lumSrc[j][i+7] * lumFilter[j]</comment>



                <decl_stmt pos:start="91:17" pos:end="91:57"><decl pos:start="91:17" pos:end="91:56"><type pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:22">vector</name> <name pos:start="91:24" pos:end="91:29">signed</name> <name pos:start="91:31" pos:end="91:33">int</name></type> <name pos:start="91:35" pos:end="91:37">vo1</name> <init pos:start="91:39" pos:end="91:56">= <expr pos:start="91:41" pos:end="91:56"><call pos:start="91:41" pos:end="91:56"><name pos:start="91:41" pos:end="91:47">vec_add</name><argument_list pos:start="91:48" pos:end="91:56">(<argument pos:start="91:49" pos:end="91:50"><expr pos:start="91:49" pos:end="91:50"><name pos:start="91:49" pos:end="91:50">v1</name></expr></argument>, <argument pos:start="91:53" pos:end="91:55"><expr pos:start="91:53" pos:end="91:55"><name pos:start="91:53" pos:end="91:55">vf1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="93:17" pos:end="93:57"><decl pos:start="93:17" pos:end="93:56"><type pos:start="93:17" pos:end="93:33"><name pos:start="93:17" pos:end="93:22">vector</name> <name pos:start="93:24" pos:end="93:29">signed</name> <name pos:start="93:31" pos:end="93:33">int</name></type> <name pos:start="93:35" pos:end="93:37">vo2</name> <init pos:start="93:39" pos:end="93:56">= <expr pos:start="93:41" pos:end="93:56"><call pos:start="93:41" pos:end="93:56"><name pos:start="93:41" pos:end="93:47">vec_add</name><argument_list pos:start="93:48" pos:end="93:56">(<argument pos:start="93:49" pos:end="93:50"><expr pos:start="93:49" pos:end="93:50"><name pos:start="93:49" pos:end="93:50">v2</name></expr></argument>, <argument pos:start="93:53" pos:end="93:55"><expr pos:start="93:53" pos:end="93:55"><name pos:start="93:53" pos:end="93:55">vf2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="97:17" pos:end="97:41"><expr pos:start="97:17" pos:end="97:40"><call pos:start="97:17" pos:end="97:40"><name pos:start="97:17" pos:end="97:22">vec_st</name><argument_list pos:start="97:23" pos:end="97:40">(<argument pos:start="97:24" pos:end="97:26"><expr pos:start="97:24" pos:end="97:26"><name pos:start="97:24" pos:end="97:26">vo1</name></expr></argument>, <argument pos:start="97:29" pos:end="97:34"><expr pos:start="97:29" pos:end="97:34"><name pos:start="97:29" pos:end="97:34">offset</name></expr></argument>, <argument pos:start="97:37" pos:end="97:39"><expr pos:start="97:37" pos:end="97:39"><name pos:start="97:37" pos:end="97:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:46"><expr pos:start="99:17" pos:end="99:45"><call pos:start="99:17" pos:end="99:45"><name pos:start="99:17" pos:end="99:22">vec_st</name><argument_list pos:start="99:23" pos:end="99:45">(<argument pos:start="99:24" pos:end="99:26"><expr pos:start="99:24" pos:end="99:26"><name pos:start="99:24" pos:end="99:26">vo2</name></expr></argument>, <argument pos:start="99:29" pos:end="99:39"><expr pos:start="99:29" pos:end="99:39"><name pos:start="99:29" pos:end="99:34">offset</name> <operator pos:start="99:36" pos:end="99:36">+</operator> <literal type="number" pos:start="99:38" pos:end="99:39">16</literal></expr></argument>, <argument pos:start="99:42" pos:end="99:44"><expr pos:start="99:42" pos:end="99:44"><name pos:start="99:42" pos:end="99:44">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="103:17" pos:end="103:24"><expr pos:start="103:17" pos:end="103:23"><name pos:start="103:17" pos:end="103:18">l1</name> <operator pos:start="103:20" pos:end="103:20">=</operator> <name pos:start="103:22" pos:end="103:23">l2</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="107:13" pos:end="111:13">for <control pos:start="107:17" pos:end="107:34">( <init pos:start="107:19" pos:end="107:19">;</init> <condition pos:start="107:21" pos:end="107:29"><expr pos:start="107:21" pos:end="107:28"><name pos:start="107:21" pos:end="107:21">i</name> <operator pos:start="107:23" pos:end="107:23">&lt;</operator> <name pos:start="107:25" pos:end="107:28">dstW</name></expr>;</condition> <incr pos:start="107:31" pos:end="107:33"><expr pos:start="107:31" pos:end="107:33"><name pos:start="107:31" pos:end="107:31">i</name><operator pos:start="107:32" pos:end="107:33">++</operator></expr></incr>)</control> <block pos:start="107:36" pos:end="111:13">{<block_content pos:start="109:17" pos:end="109:54">

                <expr_stmt pos:start="109:17" pos:end="109:54"><expr pos:start="109:17" pos:end="109:53"><name pos:start="109:17" pos:end="109:22"><name pos:start="109:17" pos:end="109:19">val</name><index pos:start="109:20" pos:end="109:22">[<expr pos:start="109:21" pos:end="109:21"><name pos:start="109:21" pos:end="109:21">i</name></expr>]</index></name> <operator pos:start="109:24" pos:end="109:25">+=</operator> <name pos:start="109:27" pos:end="109:38"><name pos:start="109:27" pos:end="109:32">lumSrc</name><index pos:start="109:33" pos:end="109:35">[<expr pos:start="109:34" pos:end="109:34"><name pos:start="109:34" pos:end="109:34">j</name></expr>]</index><index pos:start="109:36" pos:end="109:38">[<expr pos:start="109:37" pos:end="109:37"><name pos:start="109:37" pos:end="109:37">i</name></expr>]</index></name> <operator pos:start="109:40" pos:end="109:40">*</operator> <name pos:start="109:42" pos:end="109:53"><name pos:start="109:42" pos:end="109:50">lumFilter</name><index pos:start="109:51" pos:end="109:53">[<expr pos:start="109:52" pos:end="109:52"><name pos:start="109:52" pos:end="109:52">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="115:9" pos:end="115:57"><expr pos:start="115:9" pos:end="115:56"><call pos:start="115:9" pos:end="115:56"><name pos:start="115:9" pos:end="115:39">altivec_packIntArrayToCharArray</name><argument_list pos:start="115:40" pos:end="115:56">(<argument pos:start="115:41" pos:end="115:43"><expr pos:start="115:41" pos:end="115:43"><name pos:start="115:41" pos:end="115:43">val</name></expr></argument>, <argument pos:start="115:46" pos:end="115:49"><expr pos:start="115:46" pos:end="115:49"><name pos:start="115:46" pos:end="115:49">dest</name></expr></argument>, <argument pos:start="115:52" pos:end="115:55"><expr pos:start="115:52" pos:end="115:55"><name pos:start="115:52" pos:end="115:55">dstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <if_stmt pos:start="119:5" pos:end="251:5"><if pos:start="119:5" pos:end="251:5">if <condition pos:start="119:8" pos:end="119:19">(<expr pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:13">uDest</name> <operator pos:start="119:15" pos:end="119:16">!=</operator> <literal type="number" pos:start="119:18" pos:end="119:18">0</literal></expr>)</condition> <block pos:start="119:21" pos:end="251:5">{<block_content pos:start="121:9" pos:end="249:59">

        <expr_stmt pos:start="121:9" pos:end="121:45"><expr pos:start="121:9" pos:end="121:44"><call pos:start="121:9" pos:end="121:35"><name pos:start="121:9" pos:end="121:23">DECLARE_ALIGNED</name><argument_list pos:start="121:24" pos:end="121:35">(<argument pos:start="121:25" pos:end="121:26"><expr pos:start="121:25" pos:end="121:26"><literal type="number" pos:start="121:25" pos:end="121:26">16</literal></expr></argument>, <argument pos:start="121:29" pos:end="121:31"><expr pos:start="121:29" pos:end="121:31"><name pos:start="121:29" pos:end="121:31">int</name></expr></argument>, <argument pos:start="121:34" pos:end="121:34"><expr pos:start="121:34" pos:end="121:34"><name pos:start="121:34" pos:end="121:34">u</name></expr></argument>)</argument_list></call><index pos:start="121:36" pos:end="121:44">[<expr pos:start="121:37" pos:end="121:43"><name pos:start="121:37" pos:end="121:43">chrDstW</name></expr>]</index></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:45"><expr pos:start="123:9" pos:end="123:44"><call pos:start="123:9" pos:end="123:35"><name pos:start="123:9" pos:end="123:23">DECLARE_ALIGNED</name><argument_list pos:start="123:24" pos:end="123:35">(<argument pos:start="123:25" pos:end="123:26"><expr pos:start="123:25" pos:end="123:26"><literal type="number" pos:start="123:25" pos:end="123:26">16</literal></expr></argument>, <argument pos:start="123:29" pos:end="123:31"><expr pos:start="123:29" pos:end="123:31"><name pos:start="123:29" pos:end="123:31">int</name></expr></argument>, <argument pos:start="123:34" pos:end="123:34"><expr pos:start="123:34" pos:end="123:34"><name pos:start="123:34" pos:end="123:34">v</name></expr></argument>)</argument_list></call><index pos:start="123:36" pos:end="123:44">[<expr pos:start="123:37" pos:end="123:43"><name pos:start="123:37" pos:end="123:43">chrDstW</name></expr>]</index></expr>;</expr_stmt>



        <for pos:start="127:9" pos:end="133:9">for <control pos:start="127:13" pos:end="127:43">(<init pos:start="127:14" pos:end="127:19"><expr pos:start="127:14" pos:end="127:18"><name pos:start="127:14" pos:end="127:14">i</name> <operator pos:start="127:16" pos:end="127:16">=</operator> <literal type="number" pos:start="127:18" pos:end="127:18">0</literal></expr>;</init> <condition pos:start="127:21" pos:end="127:37"><expr pos:start="127:21" pos:end="127:36"><name pos:start="127:21" pos:end="127:21">i</name> <operator pos:start="127:23" pos:end="127:23">&lt;</operator> <operator pos:start="127:25" pos:end="127:25">(</operator><name pos:start="127:26" pos:end="127:32">chrDstW</name> <operator pos:start="127:34" pos:end="127:34">-</operator><literal type="number" pos:start="127:35" pos:end="127:35">7</literal><operator pos:start="127:36" pos:end="127:36">)</operator></expr>;</condition> <incr pos:start="127:39" pos:end="127:42"><expr pos:start="127:39" pos:end="127:42"><name pos:start="127:39" pos:end="127:39">i</name><operator pos:start="127:40" pos:end="127:41">+=</operator><literal type="number" pos:start="127:42" pos:end="127:42">4</literal></expr></incr>)</control> <block pos:start="127:45" pos:end="133:9">{<block_content pos:start="129:13" pos:end="131:36">

            <expr_stmt pos:start="129:13" pos:end="129:36"><expr pos:start="129:13" pos:end="129:35"><call pos:start="129:13" pos:end="129:35"><name pos:start="129:13" pos:end="129:18">vec_st</name><argument_list pos:start="129:19" pos:end="129:35">(<argument pos:start="129:20" pos:end="129:23"><expr pos:start="129:20" pos:end="129:23"><name pos:start="129:20" pos:end="129:23">vini</name></expr></argument>, <argument pos:start="129:26" pos:end="129:31"><expr pos:start="129:26" pos:end="129:31"><name pos:start="129:26" pos:end="129:26">i</name> <operator pos:start="129:28" pos:end="129:29">&lt;&lt;</operator> <literal type="number" pos:start="129:31" pos:end="129:31">2</literal></expr></argument>, <argument pos:start="129:34" pos:end="129:34"><expr pos:start="129:34" pos:end="129:34"><name pos:start="129:34" pos:end="129:34">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:36"><expr pos:start="131:13" pos:end="131:35"><call pos:start="131:13" pos:end="131:35"><name pos:start="131:13" pos:end="131:18">vec_st</name><argument_list pos:start="131:19" pos:end="131:35">(<argument pos:start="131:20" pos:end="131:23"><expr pos:start="131:20" pos:end="131:23"><name pos:start="131:20" pos:end="131:23">vini</name></expr></argument>, <argument pos:start="131:26" pos:end="131:31"><expr pos:start="131:26" pos:end="131:31"><name pos:start="131:26" pos:end="131:26">i</name> <operator pos:start="131:28" pos:end="131:29">&lt;&lt;</operator> <literal type="number" pos:start="131:31" pos:end="131:31">2</literal></expr></argument>, <argument pos:start="131:34" pos:end="131:34"><expr pos:start="131:34" pos:end="131:34"><name pos:start="131:34" pos:end="131:34">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>

        <for pos:start="135:9" pos:end="141:9">for <control pos:start="135:13" pos:end="135:32">(<init pos:start="135:14" pos:end="135:14">;</init> <condition pos:start="135:16" pos:end="135:27"><expr pos:start="135:16" pos:end="135:26"><name pos:start="135:16" pos:end="135:16">i</name> <operator pos:start="135:18" pos:end="135:18">&lt;</operator> <name pos:start="135:20" pos:end="135:26">chrDstW</name></expr>;</condition> <incr pos:start="135:29" pos:end="135:31"><expr pos:start="135:29" pos:end="135:31"><name pos:start="135:29" pos:end="135:29">i</name><operator pos:start="135:30" pos:end="135:31">++</operator></expr></incr>)</control> <block pos:start="135:34" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:29">

            <expr_stmt pos:start="137:13" pos:end="137:29"><expr pos:start="137:13" pos:end="137:28"><name pos:start="137:13" pos:end="137:16"><name pos:start="137:13" pos:end="137:13">u</name><index pos:start="137:14" pos:end="137:16">[<expr pos:start="137:15" pos:end="137:15"><name pos:start="137:15" pos:end="137:15">i</name></expr>]</index></name> <operator pos:start="137:18" pos:end="137:18">=</operator> <operator pos:start="137:20" pos:end="137:20">(</operator><literal type="number" pos:start="137:21" pos:end="137:21">1</literal> <operator pos:start="137:23" pos:end="137:24">&lt;&lt;</operator> <literal type="number" pos:start="137:26" pos:end="137:27">18</literal><operator pos:start="137:28" pos:end="137:28">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="139:13" pos:end="139:29"><expr pos:start="139:13" pos:end="139:28"><name pos:start="139:13" pos:end="139:16"><name pos:start="139:13" pos:end="139:13">v</name><index pos:start="139:14" pos:end="139:16">[<expr pos:start="139:15" pos:end="139:15"><name pos:start="139:15" pos:end="139:15">i</name></expr>]</index></name> <operator pos:start="139:18" pos:end="139:18">=</operator> <operator pos:start="139:20" pos:end="139:20">(</operator><literal type="number" pos:start="139:21" pos:end="139:21">1</literal> <operator pos:start="139:23" pos:end="139:24">&lt;&lt;</operator> <literal type="number" pos:start="139:26" pos:end="139:27">18</literal><operator pos:start="139:28" pos:end="139:28">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>



        <for pos:start="145:9" pos:end="245:9">for <control pos:start="145:13" pos:end="145:43">(<init pos:start="145:14" pos:end="145:19"><expr pos:start="145:14" pos:end="145:18"><name pos:start="145:14" pos:end="145:14">j</name> <operator pos:start="145:16" pos:end="145:16">=</operator> <literal type="number" pos:start="145:18" pos:end="145:18">0</literal></expr>;</init> <condition pos:start="145:21" pos:end="145:38"><expr pos:start="145:21" pos:end="145:37"><name pos:start="145:21" pos:end="145:21">j</name> <operator pos:start="145:23" pos:end="145:23">&lt;</operator> <name pos:start="145:25" pos:end="145:37">chrFilterSize</name></expr>;</condition> <incr pos:start="145:40" pos:end="145:42"><expr pos:start="145:40" pos:end="145:42"><name pos:start="145:40" pos:end="145:40">j</name><operator pos:start="145:41" pos:end="145:42">++</operator></expr></incr>)</control> <block pos:start="145:45" pos:end="245:9">{<block_content pos:start="147:13" pos:end="243:13">

            <decl_stmt pos:start="147:13" pos:end="147:81"><decl pos:start="147:13" pos:end="147:34"><type pos:start="147:13" pos:end="147:31"><name pos:start="147:13" pos:end="147:18">vector</name> <name pos:start="147:20" pos:end="147:25">signed</name> <name pos:start="147:27" pos:end="147:31">short</name></type> <name pos:start="147:33" pos:end="147:34">l1</name></decl>, <decl pos:start="147:37" pos:end="147:40"><type ref="prev" pos:start="147:13" pos:end="147:31"/><name pos:start="147:37" pos:end="147:40">l1_V</name></decl>, <decl pos:start="147:43" pos:end="147:80"><type ref="prev" pos:start="147:13" pos:end="147:31"/><name pos:start="147:43" pos:end="147:52">vChrFilter</name> <init pos:start="147:54" pos:end="147:80">= <expr pos:start="147:56" pos:end="147:80"><call pos:start="147:56" pos:end="147:80"><name pos:start="147:56" pos:end="147:61">vec_ld</name><argument_list pos:start="147:62" pos:end="147:80">(<argument pos:start="147:63" pos:end="147:68"><expr pos:start="147:63" pos:end="147:68"><name pos:start="147:63" pos:end="147:63">j</name> <operator pos:start="147:65" pos:end="147:66">&lt;&lt;</operator> <literal type="number" pos:start="147:68" pos:end="147:68">1</literal></expr></argument>, <argument pos:start="147:71" pos:end="147:79"><expr pos:start="147:71" pos:end="147:79"><name pos:start="147:71" pos:end="147:79">chrFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:75"><decl pos:start="149:13" pos:end="149:37"><type pos:start="149:13" pos:end="149:32"><name pos:start="149:13" pos:end="149:18">vector</name> <name pos:start="149:20" pos:end="149:27">unsigned</name> <name pos:start="149:29" pos:end="149:32">char</name></type> <name pos:start="149:34" pos:end="149:37">perm</name></decl>, <decl pos:start="149:40" pos:end="149:74"><type ref="prev" pos:start="149:13" pos:end="149:32"/><name pos:start="149:40" pos:end="149:44">perm0</name> <init pos:start="149:46" pos:end="149:74">= <expr pos:start="149:48" pos:end="149:74"><call pos:start="149:48" pos:end="149:74"><name pos:start="149:48" pos:end="149:55">vec_lvsl</name><argument_list pos:start="149:56" pos:end="149:74">(<argument pos:start="149:57" pos:end="149:62"><expr pos:start="149:57" pos:end="149:62"><name pos:start="149:57" pos:end="149:57">j</name> <operator pos:start="149:59" pos:end="149:60">&lt;&lt;</operator> <literal type="number" pos:start="149:62" pos:end="149:62">1</literal></expr></argument>, <argument pos:start="149:65" pos:end="149:73"><expr pos:start="149:65" pos:end="149:73"><name pos:start="149:65" pos:end="149:73">chrFilter</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:65"><expr pos:start="151:13" pos:end="151:64"><name pos:start="151:13" pos:end="151:22">vChrFilter</name> <operator pos:start="151:24" pos:end="151:24">=</operator> <call pos:start="151:26" pos:end="151:64"><name pos:start="151:26" pos:end="151:33">vec_perm</name><argument_list pos:start="151:34" pos:end="151:64">(<argument pos:start="151:35" pos:end="151:44"><expr pos:start="151:35" pos:end="151:44"><name pos:start="151:35" pos:end="151:44">vChrFilter</name></expr></argument>, <argument pos:start="151:47" pos:end="151:56"><expr pos:start="151:47" pos:end="151:56"><name pos:start="151:47" pos:end="151:56">vChrFilter</name></expr></argument>, <argument pos:start="151:59" pos:end="151:63"><expr pos:start="151:59" pos:end="151:63"><name pos:start="151:59" pos:end="151:63">perm0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:50"><expr pos:start="153:13" pos:end="153:49"><name pos:start="153:13" pos:end="153:22">vChrFilter</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <call pos:start="153:26" pos:end="153:49"><name pos:start="153:26" pos:end="153:34">vec_splat</name><argument_list pos:start="153:35" pos:end="153:49">(<argument pos:start="153:36" pos:end="153:45"><expr pos:start="153:36" pos:end="153:45"><name pos:start="153:36" pos:end="153:45">vChrFilter</name></expr></argument>, <argument pos:start="153:48" pos:end="153:48"><expr pos:start="153:48" pos:end="153:48"><literal type="number" pos:start="153:48" pos:end="153:48">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="153:52" pos:end="153:98">// chrFilter[j] is loaded 8 times in vChrFilter</comment>



            <expr_stmt pos:start="157:13" pos:end="157:43"><expr pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:16">perm</name> <operator pos:start="157:18" pos:end="157:18">=</operator> <call pos:start="157:20" pos:end="157:42"><name pos:start="157:20" pos:end="157:27">vec_lvsl</name><argument_list pos:start="157:28" pos:end="157:42">(<argument pos:start="157:29" pos:end="157:29"><expr pos:start="157:29" pos:end="157:29"><literal type="number" pos:start="157:29" pos:end="157:29">0</literal></expr></argument>, <argument pos:start="157:32" pos:end="157:41"><expr pos:start="157:32" pos:end="157:41"><name pos:start="157:32" pos:end="157:41"><name pos:start="157:32" pos:end="157:38">chrUSrc</name><index pos:start="157:39" pos:end="157:41">[<expr pos:start="157:40" pos:end="157:40"><name pos:start="157:40" pos:end="157:40">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:39"><expr pos:start="159:13" pos:end="159:38"><name pos:start="159:13" pos:end="159:14">l1</name> <operator pos:start="159:16" pos:end="159:16">=</operator> <call pos:start="159:18" pos:end="159:38"><name pos:start="159:18" pos:end="159:23">vec_ld</name><argument_list pos:start="159:24" pos:end="159:38">(<argument pos:start="159:25" pos:end="159:25"><expr pos:start="159:25" pos:end="159:25"><literal type="number" pos:start="159:25" pos:end="159:25">0</literal></expr></argument>, <argument pos:start="159:28" pos:end="159:37"><expr pos:start="159:28" pos:end="159:37"><name pos:start="159:28" pos:end="159:37"><name pos:start="159:28" pos:end="159:34">chrUSrc</name><index pos:start="159:35" pos:end="159:37">[<expr pos:start="159:36" pos:end="159:36"><name pos:start="159:36" pos:end="159:36">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:41"><expr pos:start="161:13" pos:end="161:40"><name pos:start="161:13" pos:end="161:16">l1_V</name> <operator pos:start="161:18" pos:end="161:18">=</operator> <call pos:start="161:20" pos:end="161:40"><name pos:start="161:20" pos:end="161:25">vec_ld</name><argument_list pos:start="161:26" pos:end="161:40">(<argument pos:start="161:27" pos:end="161:27"><expr pos:start="161:27" pos:end="161:27"><literal type="number" pos:start="161:27" pos:end="161:27">0</literal></expr></argument>, <argument pos:start="161:30" pos:end="161:39"><expr pos:start="161:30" pos:end="161:39"><name pos:start="161:30" pos:end="161:39"><name pos:start="161:30" pos:end="161:36">chrVSrc</name><index pos:start="161:37" pos:end="161:39">[<expr pos:start="161:38" pos:end="161:38"><name pos:start="161:38" pos:end="161:38">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="165:13" pos:end="235:13">for <control pos:start="165:17" pos:end="165:48">(<init pos:start="165:18" pos:end="165:23"><expr pos:start="165:18" pos:end="165:22"><name pos:start="165:18" pos:end="165:18">i</name> <operator pos:start="165:20" pos:end="165:20">=</operator> <literal type="number" pos:start="165:22" pos:end="165:22">0</literal></expr>;</init> <condition pos:start="165:25" pos:end="165:42"><expr pos:start="165:25" pos:end="165:41"><name pos:start="165:25" pos:end="165:25">i</name> <operator pos:start="165:27" pos:end="165:27">&lt;</operator> <operator pos:start="165:29" pos:end="165:29">(</operator><name pos:start="165:30" pos:end="165:36">chrDstW</name> <operator pos:start="165:38" pos:end="165:38">-</operator> <literal type="number" pos:start="165:40" pos:end="165:40">7</literal><operator pos:start="165:41" pos:end="165:41">)</operator></expr>;</condition> <incr pos:start="165:44" pos:end="165:47"><expr pos:start="165:44" pos:end="165:47"><name pos:start="165:44" pos:end="165:44">i</name><operator pos:start="165:45" pos:end="165:46">+=</operator><literal type="number" pos:start="165:47" pos:end="165:47">8</literal></expr></incr>)</control> <block pos:start="165:50" pos:end="235:13">{<block_content pos:start="167:17" pos:end="233:28">

                <decl_stmt pos:start="167:17" pos:end="167:36"><decl pos:start="167:17" pos:end="167:35"><type pos:start="167:17" pos:end="167:19"><name pos:start="167:17" pos:end="167:19">int</name></type> <name pos:start="167:21" pos:end="167:26">offset</name> <init pos:start="167:28" pos:end="167:35">= <expr pos:start="167:30" pos:end="167:35"><name pos:start="167:30" pos:end="167:30">i</name> <operator pos:start="167:32" pos:end="167:33">&lt;&lt;</operator> <literal type="number" pos:start="167:35" pos:end="167:35">2</literal></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="169:17" pos:end="169:75"><decl pos:start="169:17" pos:end="169:74"><type pos:start="169:17" pos:end="169:35"><name pos:start="169:17" pos:end="169:22">vector</name> <name pos:start="169:24" pos:end="169:29">signed</name> <name pos:start="169:31" pos:end="169:35">short</name></type> <name pos:start="169:37" pos:end="169:38">l2</name> <init pos:start="169:40" pos:end="169:74">= <expr pos:start="169:42" pos:end="169:74"><call pos:start="169:42" pos:end="169:74"><name pos:start="169:42" pos:end="169:47">vec_ld</name><argument_list pos:start="169:48" pos:end="169:74">(<argument pos:start="169:49" pos:end="169:61"><expr pos:start="169:49" pos:end="169:61"><operator pos:start="169:49" pos:end="169:49">(</operator><name pos:start="169:50" pos:end="169:50">i</name> <operator pos:start="169:52" pos:end="169:53">&lt;&lt;</operator> <literal type="number" pos:start="169:55" pos:end="169:55">1</literal><operator pos:start="169:56" pos:end="169:56">)</operator> <operator pos:start="169:58" pos:end="169:58">+</operator> <literal type="number" pos:start="169:60" pos:end="169:61">16</literal></expr></argument>, <argument pos:start="169:64" pos:end="169:73"><expr pos:start="169:64" pos:end="169:73"><name pos:start="169:64" pos:end="169:73"><name pos:start="169:64" pos:end="169:70">chrUSrc</name><index pos:start="169:71" pos:end="169:73">[<expr pos:start="169:72" pos:end="169:72"><name pos:start="169:72" pos:end="169:72">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="171:17" pos:end="171:77"><decl pos:start="171:17" pos:end="171:76"><type pos:start="171:17" pos:end="171:35"><name pos:start="171:17" pos:end="171:22">vector</name> <name pos:start="171:24" pos:end="171:29">signed</name> <name pos:start="171:31" pos:end="171:35">short</name></type> <name pos:start="171:37" pos:end="171:40">l2_V</name> <init pos:start="171:42" pos:end="171:76">= <expr pos:start="171:44" pos:end="171:76"><call pos:start="171:44" pos:end="171:76"><name pos:start="171:44" pos:end="171:49">vec_ld</name><argument_list pos:start="171:50" pos:end="171:76">(<argument pos:start="171:51" pos:end="171:63"><expr pos:start="171:51" pos:end="171:63"><operator pos:start="171:51" pos:end="171:51">(</operator><name pos:start="171:52" pos:end="171:52">i</name> <operator pos:start="171:54" pos:end="171:55">&lt;&lt;</operator> <literal type="number" pos:start="171:57" pos:end="171:57">1</literal><operator pos:start="171:58" pos:end="171:58">)</operator> <operator pos:start="171:60" pos:end="171:60">+</operator> <literal type="number" pos:start="171:62" pos:end="171:63">16</literal></expr></argument>, <argument pos:start="171:66" pos:end="171:75"><expr pos:start="171:66" pos:end="171:75"><name pos:start="171:66" pos:end="171:75"><name pos:start="171:66" pos:end="171:72">chrVSrc</name><index pos:start="171:73" pos:end="171:75">[<expr pos:start="171:74" pos:end="171:74"><name pos:start="171:74" pos:end="171:74">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="175:17" pos:end="175:57"><decl pos:start="175:17" pos:end="175:56"><type pos:start="175:17" pos:end="175:33"><name pos:start="175:17" pos:end="175:22">vector</name> <name pos:start="175:24" pos:end="175:29">signed</name> <name pos:start="175:31" pos:end="175:33">int</name></type> <name pos:start="175:35" pos:end="175:36">v1</name> <init pos:start="175:38" pos:end="175:56">= <expr pos:start="175:40" pos:end="175:56"><call pos:start="175:40" pos:end="175:56"><name pos:start="175:40" pos:end="175:45">vec_ld</name><argument_list pos:start="175:46" pos:end="175:56">(<argument pos:start="175:47" pos:end="175:52"><expr pos:start="175:47" pos:end="175:52"><name pos:start="175:47" pos:end="175:52">offset</name></expr></argument>, <argument pos:start="175:55" pos:end="175:55"><expr pos:start="175:55" pos:end="175:55"><name pos:start="175:55" pos:end="175:55">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="177:17" pos:end="177:62"><decl pos:start="177:17" pos:end="177:61"><type pos:start="177:17" pos:end="177:33"><name pos:start="177:17" pos:end="177:22">vector</name> <name pos:start="177:24" pos:end="177:29">signed</name> <name pos:start="177:31" pos:end="177:33">int</name></type> <name pos:start="177:35" pos:end="177:36">v2</name> <init pos:start="177:38" pos:end="177:61">= <expr pos:start="177:40" pos:end="177:61"><call pos:start="177:40" pos:end="177:61"><name pos:start="177:40" pos:end="177:45">vec_ld</name><argument_list pos:start="177:46" pos:end="177:61">(<argument pos:start="177:47" pos:end="177:57"><expr pos:start="177:47" pos:end="177:57"><name pos:start="177:47" pos:end="177:52">offset</name> <operator pos:start="177:54" pos:end="177:54">+</operator> <literal type="number" pos:start="177:56" pos:end="177:57">16</literal></expr></argument>, <argument pos:start="177:60" pos:end="177:60"><expr pos:start="177:60" pos:end="177:60"><name pos:start="177:60" pos:end="177:60">u</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="179:17" pos:end="179:59"><decl pos:start="179:17" pos:end="179:58"><type pos:start="179:17" pos:end="179:33"><name pos:start="179:17" pos:end="179:22">vector</name> <name pos:start="179:24" pos:end="179:29">signed</name> <name pos:start="179:31" pos:end="179:33">int</name></type> <name pos:start="179:35" pos:end="179:38">v1_V</name> <init pos:start="179:40" pos:end="179:58">= <expr pos:start="179:42" pos:end="179:58"><call pos:start="179:42" pos:end="179:58"><name pos:start="179:42" pos:end="179:47">vec_ld</name><argument_list pos:start="179:48" pos:end="179:58">(<argument pos:start="179:49" pos:end="179:54"><expr pos:start="179:49" pos:end="179:54"><name pos:start="179:49" pos:end="179:54">offset</name></expr></argument>, <argument pos:start="179:57" pos:end="179:57"><expr pos:start="179:57" pos:end="179:57"><name pos:start="179:57" pos:end="179:57">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="181:17" pos:end="181:64"><decl pos:start="181:17" pos:end="181:63"><type pos:start="181:17" pos:end="181:33"><name pos:start="181:17" pos:end="181:22">vector</name> <name pos:start="181:24" pos:end="181:29">signed</name> <name pos:start="181:31" pos:end="181:33">int</name></type> <name pos:start="181:35" pos:end="181:38">v2_V</name> <init pos:start="181:40" pos:end="181:63">= <expr pos:start="181:42" pos:end="181:63"><call pos:start="181:42" pos:end="181:63"><name pos:start="181:42" pos:end="181:47">vec_ld</name><argument_list pos:start="181:48" pos:end="181:63">(<argument pos:start="181:49" pos:end="181:59"><expr pos:start="181:49" pos:end="181:59"><name pos:start="181:49" pos:end="181:54">offset</name> <operator pos:start="181:56" pos:end="181:56">+</operator> <literal type="number" pos:start="181:58" pos:end="181:59">16</literal></expr></argument>, <argument pos:start="181:62" pos:end="181:62"><expr pos:start="181:62" pos:end="181:62"><name pos:start="181:62" pos:end="181:62">v</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="185:17" pos:end="185:64"><decl pos:start="185:17" pos:end="185:63"><type pos:start="185:17" pos:end="185:35"><name pos:start="185:17" pos:end="185:22">vector</name> <name pos:start="185:24" pos:end="185:29">signed</name> <name pos:start="185:31" pos:end="185:35">short</name></type> <name pos:start="185:37" pos:end="185:38">ls</name> <init pos:start="185:40" pos:end="185:63">= <expr pos:start="185:42" pos:end="185:63"><call pos:start="185:42" pos:end="185:63"><name pos:start="185:42" pos:end="185:49">vec_perm</name><argument_list pos:start="185:50" pos:end="185:63">(<argument pos:start="185:51" pos:end="185:52"><expr pos:start="185:51" pos:end="185:52"><name pos:start="185:51" pos:end="185:52">l1</name></expr></argument>, <argument pos:start="185:55" pos:end="185:56"><expr pos:start="185:55" pos:end="185:56"><name pos:start="185:55" pos:end="185:56">l2</name></expr></argument>, <argument pos:start="185:59" pos:end="185:62"><expr pos:start="185:59" pos:end="185:62"><name pos:start="185:59" pos:end="185:62">perm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="185:66" pos:end="185:101">// chrUSrc[j][i] ... chrUSrc[j][i+7]</comment>

                <decl_stmt pos:start="187:17" pos:end="187:70"><decl pos:start="187:17" pos:end="187:69"><type pos:start="187:17" pos:end="187:35"><name pos:start="187:17" pos:end="187:22">vector</name> <name pos:start="187:24" pos:end="187:29">signed</name> <name pos:start="187:31" pos:end="187:35">short</name></type> <name pos:start="187:37" pos:end="187:40">ls_V</name> <init pos:start="187:42" pos:end="187:69">= <expr pos:start="187:44" pos:end="187:69"><call pos:start="187:44" pos:end="187:69"><name pos:start="187:44" pos:end="187:51">vec_perm</name><argument_list pos:start="187:52" pos:end="187:69">(<argument pos:start="187:53" pos:end="187:56"><expr pos:start="187:53" pos:end="187:56"><name pos:start="187:53" pos:end="187:56">l1_V</name></expr></argument>, <argument pos:start="187:59" pos:end="187:62"><expr pos:start="187:59" pos:end="187:62"><name pos:start="187:59" pos:end="187:62">l2_V</name></expr></argument>, <argument pos:start="187:65" pos:end="187:68"><expr pos:start="187:65" pos:end="187:68"><name pos:start="187:65" pos:end="187:68">perm</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="187:72" pos:end="187:105">// chrVSrc[j][i] ... chrVSrc[j][i]</comment>



                <decl_stmt pos:start="191:17" pos:end="191:64"><decl pos:start="191:17" pos:end="191:63"><type pos:start="191:17" pos:end="191:33"><name pos:start="191:17" pos:end="191:22">vector</name> <name pos:start="191:24" pos:end="191:29">signed</name> <name pos:start="191:31" pos:end="191:33">int</name></type> <name pos:start="191:35" pos:end="191:36">i1</name> <init pos:start="191:38" pos:end="191:63">= <expr pos:start="191:40" pos:end="191:63"><call pos:start="191:40" pos:end="191:63"><name pos:start="191:40" pos:end="191:47">vec_mule</name><argument_list pos:start="191:48" pos:end="191:63">(<argument pos:start="191:49" pos:end="191:58"><expr pos:start="191:49" pos:end="191:58"><name pos:start="191:49" pos:end="191:58">vChrFilter</name></expr></argument>, <argument pos:start="191:61" pos:end="191:62"><expr pos:start="191:61" pos:end="191:62"><name pos:start="191:61" pos:end="191:62">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="193:17" pos:end="193:64"><decl pos:start="193:17" pos:end="193:63"><type pos:start="193:17" pos:end="193:33"><name pos:start="193:17" pos:end="193:22">vector</name> <name pos:start="193:24" pos:end="193:29">signed</name> <name pos:start="193:31" pos:end="193:33">int</name></type> <name pos:start="193:35" pos:end="193:36">i2</name> <init pos:start="193:38" pos:end="193:63">= <expr pos:start="193:40" pos:end="193:63"><call pos:start="193:40" pos:end="193:63"><name pos:start="193:40" pos:end="193:47">vec_mulo</name><argument_list pos:start="193:48" pos:end="193:63">(<argument pos:start="193:49" pos:end="193:58"><expr pos:start="193:49" pos:end="193:58"><name pos:start="193:49" pos:end="193:58">vChrFilter</name></expr></argument>, <argument pos:start="193:61" pos:end="193:62"><expr pos:start="193:61" pos:end="193:62"><name pos:start="193:61" pos:end="193:62">ls</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="195:17" pos:end="195:68"><decl pos:start="195:17" pos:end="195:67"><type pos:start="195:17" pos:end="195:33"><name pos:start="195:17" pos:end="195:22">vector</name> <name pos:start="195:24" pos:end="195:29">signed</name> <name pos:start="195:31" pos:end="195:33">int</name></type> <name pos:start="195:35" pos:end="195:38">i1_V</name> <init pos:start="195:40" pos:end="195:67">= <expr pos:start="195:42" pos:end="195:67"><call pos:start="195:42" pos:end="195:67"><name pos:start="195:42" pos:end="195:49">vec_mule</name><argument_list pos:start="195:50" pos:end="195:67">(<argument pos:start="195:51" pos:end="195:60"><expr pos:start="195:51" pos:end="195:60"><name pos:start="195:51" pos:end="195:60">vChrFilter</name></expr></argument>, <argument pos:start="195:63" pos:end="195:66"><expr pos:start="195:63" pos:end="195:66"><name pos:start="195:63" pos:end="195:66">ls_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="197:17" pos:end="197:68"><decl pos:start="197:17" pos:end="197:67"><type pos:start="197:17" pos:end="197:33"><name pos:start="197:17" pos:end="197:22">vector</name> <name pos:start="197:24" pos:end="197:29">signed</name> <name pos:start="197:31" pos:end="197:33">int</name></type> <name pos:start="197:35" pos:end="197:38">i2_V</name> <init pos:start="197:40" pos:end="197:67">= <expr pos:start="197:42" pos:end="197:67"><call pos:start="197:42" pos:end="197:67"><name pos:start="197:42" pos:end="197:49">vec_mulo</name><argument_list pos:start="197:50" pos:end="197:67">(<argument pos:start="197:51" pos:end="197:60"><expr pos:start="197:51" pos:end="197:60"><name pos:start="197:51" pos:end="197:60">vChrFilter</name></expr></argument>, <argument pos:start="197:63" pos:end="197:66"><expr pos:start="197:63" pos:end="197:66"><name pos:start="197:63" pos:end="197:66">ls_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <decl_stmt pos:start="201:17" pos:end="201:59"><decl pos:start="201:17" pos:end="201:58"><type pos:start="201:17" pos:end="201:33"><name pos:start="201:17" pos:end="201:22">vector</name> <name pos:start="201:24" pos:end="201:29">signed</name> <name pos:start="201:31" pos:end="201:33">int</name></type> <name pos:start="201:35" pos:end="201:37">vf1</name> <init pos:start="201:39" pos:end="201:58">= <expr pos:start="201:41" pos:end="201:58"><call pos:start="201:41" pos:end="201:58"><name pos:start="201:41" pos:end="201:50">vec_mergeh</name><argument_list pos:start="201:51" pos:end="201:58">(<argument pos:start="201:52" pos:end="201:53"><expr pos:start="201:52" pos:end="201:53"><name pos:start="201:52" pos:end="201:53">i1</name></expr></argument>, <argument pos:start="201:56" pos:end="201:57"><expr pos:start="201:56" pos:end="201:57"><name pos:start="201:56" pos:end="201:57">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="203:17" pos:end="203:59"><decl pos:start="203:17" pos:end="203:58"><type pos:start="203:17" pos:end="203:33"><name pos:start="203:17" pos:end="203:22">vector</name> <name pos:start="203:24" pos:end="203:29">signed</name> <name pos:start="203:31" pos:end="203:33">int</name></type> <name pos:start="203:35" pos:end="203:37">vf2</name> <init pos:start="203:39" pos:end="203:58">= <expr pos:start="203:41" pos:end="203:58"><call pos:start="203:41" pos:end="203:58"><name pos:start="203:41" pos:end="203:50">vec_mergel</name><argument_list pos:start="203:51" pos:end="203:58">(<argument pos:start="203:52" pos:end="203:53"><expr pos:start="203:52" pos:end="203:53"><name pos:start="203:52" pos:end="203:53">i1</name></expr></argument>, <argument pos:start="203:56" pos:end="203:57"><expr pos:start="203:56" pos:end="203:57"><name pos:start="203:56" pos:end="203:57">i2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="203:61" pos:end="203:126">// chrUSrc[j][i] * chrFilter[j] ... chrUSrc[j][i+7] * chrFilter[j]</comment>

                <decl_stmt pos:start="205:17" pos:end="205:65"><decl pos:start="205:17" pos:end="205:64"><type pos:start="205:17" pos:end="205:33"><name pos:start="205:17" pos:end="205:22">vector</name> <name pos:start="205:24" pos:end="205:29">signed</name> <name pos:start="205:31" pos:end="205:33">int</name></type> <name pos:start="205:35" pos:end="205:39">vf1_V</name> <init pos:start="205:41" pos:end="205:64">= <expr pos:start="205:43" pos:end="205:64"><call pos:start="205:43" pos:end="205:64"><name pos:start="205:43" pos:end="205:52">vec_mergeh</name><argument_list pos:start="205:53" pos:end="205:64">(<argument pos:start="205:54" pos:end="205:57"><expr pos:start="205:54" pos:end="205:57"><name pos:start="205:54" pos:end="205:57">i1_V</name></expr></argument>, <argument pos:start="205:60" pos:end="205:63"><expr pos:start="205:60" pos:end="205:63"><name pos:start="205:60" pos:end="205:63">i2_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="207:17" pos:end="207:65"><decl pos:start="207:17" pos:end="207:64"><type pos:start="207:17" pos:end="207:33"><name pos:start="207:17" pos:end="207:22">vector</name> <name pos:start="207:24" pos:end="207:29">signed</name> <name pos:start="207:31" pos:end="207:33">int</name></type> <name pos:start="207:35" pos:end="207:39">vf2_V</name> <init pos:start="207:41" pos:end="207:64">= <expr pos:start="207:43" pos:end="207:64"><call pos:start="207:43" pos:end="207:64"><name pos:start="207:43" pos:end="207:52">vec_mergel</name><argument_list pos:start="207:53" pos:end="207:64">(<argument pos:start="207:54" pos:end="207:57"><expr pos:start="207:54" pos:end="207:57"><name pos:start="207:54" pos:end="207:57">i1_V</name></expr></argument>, <argument pos:start="207:60" pos:end="207:63"><expr pos:start="207:60" pos:end="207:63"><name pos:start="207:60" pos:end="207:63">i2_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="207:67" pos:end="207:132">// chrVSrc[j][i] * chrFilter[j] ... chrVSrc[j][i+7] * chrFilter[j]</comment>



                <decl_stmt pos:start="211:17" pos:end="211:57"><decl pos:start="211:17" pos:end="211:56"><type pos:start="211:17" pos:end="211:33"><name pos:start="211:17" pos:end="211:22">vector</name> <name pos:start="211:24" pos:end="211:29">signed</name> <name pos:start="211:31" pos:end="211:33">int</name></type> <name pos:start="211:35" pos:end="211:37">vo1</name> <init pos:start="211:39" pos:end="211:56">= <expr pos:start="211:41" pos:end="211:56"><call pos:start="211:41" pos:end="211:56"><name pos:start="211:41" pos:end="211:47">vec_add</name><argument_list pos:start="211:48" pos:end="211:56">(<argument pos:start="211:49" pos:end="211:50"><expr pos:start="211:49" pos:end="211:50"><name pos:start="211:49" pos:end="211:50">v1</name></expr></argument>, <argument pos:start="211:53" pos:end="211:55"><expr pos:start="211:53" pos:end="211:55"><name pos:start="211:53" pos:end="211:55">vf1</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="213:17" pos:end="213:57"><decl pos:start="213:17" pos:end="213:56"><type pos:start="213:17" pos:end="213:33"><name pos:start="213:17" pos:end="213:22">vector</name> <name pos:start="213:24" pos:end="213:29">signed</name> <name pos:start="213:31" pos:end="213:33">int</name></type> <name pos:start="213:35" pos:end="213:37">vo2</name> <init pos:start="213:39" pos:end="213:56">= <expr pos:start="213:41" pos:end="213:56"><call pos:start="213:41" pos:end="213:56"><name pos:start="213:41" pos:end="213:47">vec_add</name><argument_list pos:start="213:48" pos:end="213:56">(<argument pos:start="213:49" pos:end="213:50"><expr pos:start="213:49" pos:end="213:50"><name pos:start="213:49" pos:end="213:50">v2</name></expr></argument>, <argument pos:start="213:53" pos:end="213:55"><expr pos:start="213:53" pos:end="213:55"><name pos:start="213:53" pos:end="213:55">vf2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="215:17" pos:end="215:63"><decl pos:start="215:17" pos:end="215:62"><type pos:start="215:17" pos:end="215:33"><name pos:start="215:17" pos:end="215:22">vector</name> <name pos:start="215:24" pos:end="215:29">signed</name> <name pos:start="215:31" pos:end="215:33">int</name></type> <name pos:start="215:35" pos:end="215:39">vo1_V</name> <init pos:start="215:41" pos:end="215:62">= <expr pos:start="215:43" pos:end="215:62"><call pos:start="215:43" pos:end="215:62"><name pos:start="215:43" pos:end="215:49">vec_add</name><argument_list pos:start="215:50" pos:end="215:62">(<argument pos:start="215:51" pos:end="215:54"><expr pos:start="215:51" pos:end="215:54"><name pos:start="215:51" pos:end="215:54">v1_V</name></expr></argument>, <argument pos:start="215:57" pos:end="215:61"><expr pos:start="215:57" pos:end="215:61"><name pos:start="215:57" pos:end="215:61">vf1_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="217:17" pos:end="217:63"><decl pos:start="217:17" pos:end="217:62"><type pos:start="217:17" pos:end="217:33"><name pos:start="217:17" pos:end="217:22">vector</name> <name pos:start="217:24" pos:end="217:29">signed</name> <name pos:start="217:31" pos:end="217:33">int</name></type> <name pos:start="217:35" pos:end="217:39">vo2_V</name> <init pos:start="217:41" pos:end="217:62">= <expr pos:start="217:43" pos:end="217:62"><call pos:start="217:43" pos:end="217:62"><name pos:start="217:43" pos:end="217:49">vec_add</name><argument_list pos:start="217:50" pos:end="217:62">(<argument pos:start="217:51" pos:end="217:54"><expr pos:start="217:51" pos:end="217:54"><name pos:start="217:51" pos:end="217:54">v2_V</name></expr></argument>, <argument pos:start="217:57" pos:end="217:61"><expr pos:start="217:57" pos:end="217:61"><name pos:start="217:57" pos:end="217:61">vf2_V</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="221:17" pos:end="221:39"><expr pos:start="221:17" pos:end="221:38"><call pos:start="221:17" pos:end="221:38"><name pos:start="221:17" pos:end="221:22">vec_st</name><argument_list pos:start="221:23" pos:end="221:38">(<argument pos:start="221:24" pos:end="221:26"><expr pos:start="221:24" pos:end="221:26"><name pos:start="221:24" pos:end="221:26">vo1</name></expr></argument>, <argument pos:start="221:29" pos:end="221:34"><expr pos:start="221:29" pos:end="221:34"><name pos:start="221:29" pos:end="221:34">offset</name></expr></argument>, <argument pos:start="221:37" pos:end="221:37"><expr pos:start="221:37" pos:end="221:37"><name pos:start="221:37" pos:end="221:37">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="223:17" pos:end="223:44"><expr pos:start="223:17" pos:end="223:43"><call pos:start="223:17" pos:end="223:43"><name pos:start="223:17" pos:end="223:22">vec_st</name><argument_list pos:start="223:23" pos:end="223:43">(<argument pos:start="223:24" pos:end="223:26"><expr pos:start="223:24" pos:end="223:26"><name pos:start="223:24" pos:end="223:26">vo2</name></expr></argument>, <argument pos:start="223:29" pos:end="223:39"><expr pos:start="223:29" pos:end="223:39"><name pos:start="223:29" pos:end="223:34">offset</name> <operator pos:start="223:36" pos:end="223:36">+</operator> <literal type="number" pos:start="223:38" pos:end="223:39">16</literal></expr></argument>, <argument pos:start="223:42" pos:end="223:42"><expr pos:start="223:42" pos:end="223:42"><name pos:start="223:42" pos:end="223:42">u</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="225:17" pos:end="225:41"><expr pos:start="225:17" pos:end="225:40"><call pos:start="225:17" pos:end="225:40"><name pos:start="225:17" pos:end="225:22">vec_st</name><argument_list pos:start="225:23" pos:end="225:40">(<argument pos:start="225:24" pos:end="225:28"><expr pos:start="225:24" pos:end="225:28"><name pos:start="225:24" pos:end="225:28">vo1_V</name></expr></argument>, <argument pos:start="225:31" pos:end="225:36"><expr pos:start="225:31" pos:end="225:36"><name pos:start="225:31" pos:end="225:36">offset</name></expr></argument>, <argument pos:start="225:39" pos:end="225:39"><expr pos:start="225:39" pos:end="225:39"><name pos:start="225:39" pos:end="225:39">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="227:17" pos:end="227:46"><expr pos:start="227:17" pos:end="227:45"><call pos:start="227:17" pos:end="227:45"><name pos:start="227:17" pos:end="227:22">vec_st</name><argument_list pos:start="227:23" pos:end="227:45">(<argument pos:start="227:24" pos:end="227:28"><expr pos:start="227:24" pos:end="227:28"><name pos:start="227:24" pos:end="227:28">vo2_V</name></expr></argument>, <argument pos:start="227:31" pos:end="227:41"><expr pos:start="227:31" pos:end="227:41"><name pos:start="227:31" pos:end="227:36">offset</name> <operator pos:start="227:38" pos:end="227:38">+</operator> <literal type="number" pos:start="227:40" pos:end="227:41">16</literal></expr></argument>, <argument pos:start="227:44" pos:end="227:44"><expr pos:start="227:44" pos:end="227:44"><name pos:start="227:44" pos:end="227:44">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="231:17" pos:end="231:24"><expr pos:start="231:17" pos:end="231:23"><name pos:start="231:17" pos:end="231:18">l1</name> <operator pos:start="231:20" pos:end="231:20">=</operator> <name pos:start="231:22" pos:end="231:23">l2</name></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:28"><expr pos:start="233:17" pos:end="233:27"><name pos:start="233:17" pos:end="233:20">l1_V</name> <operator pos:start="233:22" pos:end="233:22">=</operator> <name pos:start="233:24" pos:end="233:27">l2_V</name></expr>;</expr_stmt>

            </block_content>}</block></for>

            <for pos:start="237:13" pos:end="243:13">for <control pos:start="237:17" pos:end="237:37">( <init pos:start="237:19" pos:end="237:19">;</init> <condition pos:start="237:21" pos:end="237:32"><expr pos:start="237:21" pos:end="237:31"><name pos:start="237:21" pos:end="237:21">i</name> <operator pos:start="237:23" pos:end="237:23">&lt;</operator> <name pos:start="237:25" pos:end="237:31">chrDstW</name></expr>;</condition> <incr pos:start="237:34" pos:end="237:36"><expr pos:start="237:34" pos:end="237:36"><name pos:start="237:34" pos:end="237:34">i</name><operator pos:start="237:35" pos:end="237:36">++</operator></expr></incr>)</control> <block pos:start="237:39" pos:end="243:13">{<block_content pos:start="239:17" pos:end="241:53">

                <expr_stmt pos:start="239:17" pos:end="239:53"><expr pos:start="239:17" pos:end="239:52"><name pos:start="239:17" pos:end="239:20"><name pos:start="239:17" pos:end="239:17">u</name><index pos:start="239:18" pos:end="239:20">[<expr pos:start="239:19" pos:end="239:19"><name pos:start="239:19" pos:end="239:19">i</name></expr>]</index></name> <operator pos:start="239:22" pos:end="239:23">+=</operator> <name pos:start="239:25" pos:end="239:37"><name pos:start="239:25" pos:end="239:31">chrUSrc</name><index pos:start="239:32" pos:end="239:34">[<expr pos:start="239:33" pos:end="239:33"><name pos:start="239:33" pos:end="239:33">j</name></expr>]</index><index pos:start="239:35" pos:end="239:37">[<expr pos:start="239:36" pos:end="239:36"><name pos:start="239:36" pos:end="239:36">i</name></expr>]</index></name> <operator pos:start="239:39" pos:end="239:39">*</operator> <name pos:start="239:41" pos:end="239:52"><name pos:start="239:41" pos:end="239:49">chrFilter</name><index pos:start="239:50" pos:end="239:52">[<expr pos:start="239:51" pos:end="239:51"><name pos:start="239:51" pos:end="239:51">j</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="241:17" pos:end="241:53"><expr pos:start="241:17" pos:end="241:52"><name pos:start="241:17" pos:end="241:20"><name pos:start="241:17" pos:end="241:17">v</name><index pos:start="241:18" pos:end="241:20">[<expr pos:start="241:19" pos:end="241:19"><name pos:start="241:19" pos:end="241:19">i</name></expr>]</index></name> <operator pos:start="241:22" pos:end="241:23">+=</operator> <name pos:start="241:25" pos:end="241:37"><name pos:start="241:25" pos:end="241:31">chrVSrc</name><index pos:start="241:32" pos:end="241:34">[<expr pos:start="241:33" pos:end="241:33"><name pos:start="241:33" pos:end="241:33">j</name></expr>]</index><index pos:start="241:35" pos:end="241:37">[<expr pos:start="241:36" pos:end="241:36"><name pos:start="241:36" pos:end="241:36">i</name></expr>]</index></name> <operator pos:start="241:39" pos:end="241:39">*</operator> <name pos:start="241:41" pos:end="241:52"><name pos:start="241:41" pos:end="241:49">chrFilter</name><index pos:start="241:50" pos:end="241:52">[<expr pos:start="241:51" pos:end="241:51"><name pos:start="241:51" pos:end="241:51">j</name></expr>]</index></name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

        <expr_stmt pos:start="247:9" pos:end="247:59"><expr pos:start="247:9" pos:end="247:58"><call pos:start="247:9" pos:end="247:58"><name pos:start="247:9" pos:end="247:39">altivec_packIntArrayToCharArray</name><argument_list pos:start="247:40" pos:end="247:58">(<argument pos:start="247:41" pos:end="247:41"><expr pos:start="247:41" pos:end="247:41"><name pos:start="247:41" pos:end="247:41">u</name></expr></argument>, <argument pos:start="247:44" pos:end="247:48"><expr pos:start="247:44" pos:end="247:48"><name pos:start="247:44" pos:end="247:48">uDest</name></expr></argument>, <argument pos:start="247:51" pos:end="247:57"><expr pos:start="247:51" pos:end="247:57"><name pos:start="247:51" pos:end="247:57">chrDstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="249:9" pos:end="249:59"><expr pos:start="249:9" pos:end="249:58"><call pos:start="249:9" pos:end="249:58"><name pos:start="249:9" pos:end="249:39">altivec_packIntArrayToCharArray</name><argument_list pos:start="249:40" pos:end="249:58">(<argument pos:start="249:41" pos:end="249:41"><expr pos:start="249:41" pos:end="249:41"><name pos:start="249:41" pos:end="249:41">v</name></expr></argument>, <argument pos:start="249:44" pos:end="249:48"><expr pos:start="249:44" pos:end="249:48"><name pos:start="249:44" pos:end="249:48">vDest</name></expr></argument>, <argument pos:start="249:51" pos:end="249:57"><expr pos:start="249:51" pos:end="249:57"><name pos:start="249:51" pos:end="249:57">chrDstW</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block>
</unit>
