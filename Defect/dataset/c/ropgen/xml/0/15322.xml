<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15322.c" pos:tabs="8"><function pos:start="1:1" pos:end="361:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">asf_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="361:1">{<block_content pos:start="5:5" pos:end="359:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">ASFContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">asf</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:15"><name pos:start="7:5" pos:end="7:13">ASFStream</name> <modifier pos:start="7:15" pos:end="7:15">*</modifier></type><name pos:start="7:16" pos:end="7:21">asf_st</name> <init pos:start="7:23" pos:end="7:25">= <expr pos:start="7:25" pos:end="7:25"><literal type="number" pos:start="7:25" pos:end="7:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:31"><decl pos:start="9:5" pos:end="9:30"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">ByteIOContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">pb</name> <init pos:start="9:23" pos:end="9:30">= <expr pos:start="9:25" pos:end="9:30"><operator pos:start="9:25" pos:end="9:25">&amp;</operator><name pos:start="9:26" pos:end="9:30"><name pos:start="9:26" pos:end="9:26">s</name><operator pos:start="9:27" pos:end="9:28">-&gt;</operator><name pos:start="9:29" pos:end="9:30">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:14"><specifier pos:start="11:5" pos:end="11:10">static</specifier> <name pos:start="11:12" pos:end="11:14">int</name></type> <name pos:start="11:16" pos:end="11:17">pc</name> <init pos:start="11:19" pos:end="11:21">= <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr></init></decl>;</decl_stmt>

    <for pos:start="13:5" pos:end="357:5">for <control pos:start="13:9" pos:end="13:12">(<init pos:start="13:10" pos:end="13:10">;</init><condition pos:start="13:11" pos:end="13:11">;</condition><incr/>)</control> <block pos:start="13:14" pos:end="357:5">{<block_content pos:start="15:9" pos:end="355:9">

	<decl_stmt pos:start="15:9" pos:end="15:22"><decl pos:start="15:9" pos:end="15:21"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:17">rsize</name> <init pos:start="15:19" pos:end="15:21">= <expr pos:start="15:21" pos:end="15:21"><literal type="number" pos:start="15:21" pos:end="15:21">0</literal></expr></init></decl>;</decl_stmt>

	<if_stmt pos:start="17:9" pos:end="49:9"><if pos:start="17:9" pos:end="49:9">if <condition pos:start="17:12" pos:end="19:40">(<expr pos:start="17:13" pos:end="19:39"><name pos:start="17:13" pos:end="17:33"><name pos:start="17:13" pos:end="17:15">asf</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:33">packet_size_left</name></name> <operator pos:start="17:35" pos:end="17:35">&lt;</operator> <name pos:start="17:37" pos:end="17:53">FRAME_HEADER_SIZE</name>

	    <operator pos:start="19:13" pos:end="19:14">||</operator> <name pos:start="19:16" pos:end="19:35"><name pos:start="19:16" pos:end="19:18">asf</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:35">packet_segments</name></name> <operator pos:start="19:37" pos:end="19:37">&lt;</operator> <literal type="number" pos:start="19:39" pos:end="19:39">0</literal></expr>)</condition> <block pos:start="19:42" pos:end="49:9">{<block_content pos:start="23:13" pos:end="47:21">

	    <comment type="line" pos:start="21:13" pos:end="21:61">//asf-&gt;packet_size_left &lt;= asf-&gt;packet_padsize) {</comment>

	    <decl_stmt pos:start="23:13" pos:end="23:20"><decl pos:start="23:13" pos:end="23:19"><type pos:start="23:13" pos:end="23:15"><name pos:start="23:13" pos:end="23:15">int</name></type> <name pos:start="23:17" pos:end="23:19">ret</name></decl>;</decl_stmt>

	    <comment type="line" pos:start="25:13" pos:end="25:68">//printf("PACKETLEFTSIZE  %d\n", asf-&gt;packet_size_left);</comment>

            <comment type="block" pos:start="27:13" pos:end="27:27">/* fail safe */</comment>

            <if_stmt pos:start="29:13" pos:end="31:53"><if pos:start="29:13" pos:end="31:53">if <condition pos:start="29:16" pos:end="29:38">(<expr pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:37"><name pos:start="29:17" pos:end="29:19">asf</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:37">packet_size_left</name></name></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:53"><block_content pos:start="31:17" pos:end="31:53">

		<expr_stmt pos:start="31:17" pos:end="31:53"><expr pos:start="31:17" pos:end="31:52"><call pos:start="31:17" pos:end="31:52"><name pos:start="31:17" pos:end="31:25">url_fskip</name><argument_list pos:start="31:26" pos:end="31:52">(<argument pos:start="31:27" pos:end="31:28"><expr pos:start="31:27" pos:end="31:28"><name pos:start="31:27" pos:end="31:28">pb</name></expr></argument>, <argument pos:start="31:31" pos:end="31:51"><expr pos:start="31:31" pos:end="31:51"><name pos:start="31:31" pos:end="31:51"><name pos:start="31:31" pos:end="31:33">asf</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:51">packet_size_left</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="33:13" pos:end="35:51"><if pos:start="33:13" pos:end="35:51">if <condition pos:start="33:16" pos:end="33:36">(<expr pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:35"><name pos:start="33:17" pos:end="33:19">asf</name><operator pos:start="33:20" pos:end="33:21">-&gt;</operator><name pos:start="33:22" pos:end="33:35">packet_padsize</name></name></expr>)</condition><block type="pseudo" pos:start="35:17" pos:end="35:51"><block_content pos:start="35:17" pos:end="35:51">

		<expr_stmt pos:start="35:17" pos:end="35:51"><expr pos:start="35:17" pos:end="35:50"><call pos:start="35:17" pos:end="35:50"><name pos:start="35:17" pos:end="35:25">url_fskip</name><argument_list pos:start="35:26" pos:end="35:50">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">pb</name></expr></argument>, <argument pos:start="35:31" pos:end="35:49"><expr pos:start="35:31" pos:end="35:49"><name pos:start="35:31" pos:end="35:49"><name pos:start="35:31" pos:end="35:33">asf</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:49">packet_padsize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="37:13" pos:end="37:36"><expr pos:start="37:13" pos:end="37:35"><name pos:start="37:13" pos:end="37:15">ret</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:35"><name pos:start="37:19" pos:end="37:32">asf_get_packet</name><argument_list pos:start="37:33" pos:end="37:35">(<argument pos:start="37:34" pos:end="37:34"><expr pos:start="37:34" pos:end="37:34"><name pos:start="37:34" pos:end="37:34">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <comment type="line" pos:start="39:13" pos:end="39:94">//printf("READ ASF PACKET  %d   r:%d   c:%d\n", ret, asf-&gt;packet_size_left, pc++);</comment>

	    <if_stmt pos:start="41:13" pos:end="43:28"><if pos:start="41:13" pos:end="43:28">if <condition pos:start="41:16" pos:end="41:24">(<expr pos:start="41:17" pos:end="41:23"><name pos:start="41:17" pos:end="41:19">ret</name> <operator pos:start="41:21" pos:end="41:21">&lt;</operator> <literal type="number" pos:start="41:23" pos:end="41:23">0</literal></expr>)</condition><block type="pseudo" pos:start="43:17" pos:end="43:28"><block_content pos:start="43:17" pos:end="43:28">

		<return pos:start="43:17" pos:end="43:28">return <expr pos:start="43:24" pos:end="43:27"><operator pos:start="43:24" pos:end="43:24">-</operator><name pos:start="43:25" pos:end="43:27">EIO</name></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:39"><expr pos:start="45:13" pos:end="45:38"><name pos:start="45:13" pos:end="45:34"><name pos:start="45:13" pos:end="45:15">asf</name><operator pos:start="45:16" pos:end="45:17">-&gt;</operator><name pos:start="45:18" pos:end="45:34">packet_time_start</name></name> <operator pos:start="45:36" pos:end="45:36">=</operator> <literal type="number" pos:start="45:38" pos:end="45:38">0</literal></expr>;</expr_stmt>

            <continue pos:start="47:13" pos:end="47:21">continue;</continue>

	</block_content>}</block></if></if_stmt>

	<if_stmt pos:start="51:9" pos:end="171:9"><if pos:start="51:9" pos:end="171:9">if <condition pos:start="51:12" pos:end="51:40">(<expr pos:start="51:13" pos:end="51:39"><name pos:start="51:13" pos:end="51:34"><name pos:start="51:13" pos:end="51:15">asf</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:34">packet_time_start</name></name> <operator pos:start="51:36" pos:end="51:37">==</operator> <literal type="number" pos:start="51:39" pos:end="51:39">0</literal></expr>)</condition> <block pos:start="51:42" pos:end="171:9">{<block_content pos:start="53:13" pos:end="167:43">

            <decl_stmt pos:start="53:13" pos:end="53:20"><decl pos:start="53:13" pos:end="53:19"><type pos:start="53:13" pos:end="53:15"><name pos:start="53:13" pos:end="53:15">int</name></type> <name pos:start="53:17" pos:end="53:19">num</name></decl>;</decl_stmt>

	    <if_stmt pos:start="55:13" pos:end="57:25"><if pos:start="55:13" pos:end="57:25">if <condition pos:start="55:16" pos:end="55:43">(<expr pos:start="55:17" pos:end="55:42"><operator pos:start="55:17" pos:end="55:18">--</operator><name pos:start="55:19" pos:end="55:38"><name pos:start="55:19" pos:end="55:21">asf</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:38">packet_segments</name></name> <operator pos:start="55:40" pos:end="55:40">&lt;</operator> <literal type="number" pos:start="55:42" pos:end="55:42">0</literal></expr>)</condition><block type="pseudo" pos:start="57:17" pos:end="57:25"><block_content pos:start="57:17" pos:end="57:25">

		<continue pos:start="57:17" pos:end="57:25">continue;</continue></block_content></block></if></if_stmt>

	    <comment type="block" pos:start="59:13" pos:end="59:35">/* read frame header */</comment>

	    <expr_stmt pos:start="61:13" pos:end="61:31"><expr pos:start="61:13" pos:end="61:30"><name pos:start="61:13" pos:end="61:15">num</name> <operator pos:start="61:17" pos:end="61:17">=</operator> <call pos:start="61:19" pos:end="61:30"><name pos:start="61:19" pos:end="61:26">get_byte</name><argument_list pos:start="61:27" pos:end="61:30">(<argument pos:start="61:28" pos:end="61:29"><expr pos:start="61:28" pos:end="61:29"><name pos:start="61:28" pos:end="61:29">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="63:13" pos:end="63:20"><expr pos:start="63:13" pos:end="63:19"><name pos:start="63:13" pos:end="63:17">rsize</name><operator pos:start="63:18" pos:end="63:19">++</operator></expr>;</expr_stmt>

	    <expr_stmt pos:start="65:13" pos:end="65:54"><expr pos:start="65:13" pos:end="65:53"><name pos:start="65:13" pos:end="65:33"><name pos:start="65:13" pos:end="65:15">asf</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:33">packet_key_frame</name></name> <operator pos:start="65:35" pos:end="65:35">=</operator> <operator pos:start="65:37" pos:end="65:37">(</operator><name pos:start="65:38" pos:end="65:40">num</name> <operator pos:start="65:42" pos:end="65:42">&amp;</operator> <literal type="number" pos:start="65:44" pos:end="65:47">0x80</literal><operator pos:start="65:48" pos:end="65:48">)</operator> <operator pos:start="65:50" pos:end="65:51">&gt;&gt;</operator> <literal type="number" pos:start="65:53" pos:end="65:53">7</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="67:13" pos:end="67:60"><expr pos:start="67:13" pos:end="67:59"><name pos:start="67:13" pos:end="67:29"><name pos:start="67:13" pos:end="67:15">asf</name><operator pos:start="67:16" pos:end="67:17">-&gt;</operator><name pos:start="67:18" pos:end="67:29">stream_index</name></name> <operator pos:start="67:31" pos:end="67:31">=</operator> <name pos:start="67:33" pos:end="67:59"><name pos:start="67:33" pos:end="67:35">asf</name><operator pos:start="67:36" pos:end="67:37">-&gt;</operator><name pos:start="67:38" pos:end="67:47">asfid2avid</name><index pos:start="67:48" pos:end="67:59">[<expr pos:start="67:49" pos:end="67:58"><name pos:start="67:49" pos:end="67:51">num</name> <operator pos:start="67:53" pos:end="67:53">&amp;</operator> <literal type="number" pos:start="67:55" pos:end="67:58">0x7f</literal></expr>]</index></name></expr>;</expr_stmt>

	    <if_stmt pos:start="69:13" pos:end="83:13"><if pos:start="69:13" pos:end="83:13">if <condition pos:start="69:16" pos:end="69:38">(<expr pos:start="69:17" pos:end="69:37"><name pos:start="69:17" pos:end="69:33"><name pos:start="69:17" pos:end="69:19">asf</name><operator pos:start="69:20" pos:end="69:21">-&gt;</operator><name pos:start="69:22" pos:end="69:33">stream_index</name></name> <operator pos:start="69:35" pos:end="69:35">&lt;</operator> <literal type="number" pos:start="69:37" pos:end="69:37">0</literal></expr>)</condition>

	    <block pos:start="71:13" pos:end="83:13">{<block_content pos:start="75:17" pos:end="81:25">

		<comment type="block" pos:start="73:17" pos:end="73:58">/* unhandled packet (should not happen) */</comment>

		<expr_stmt pos:start="75:17" pos:end="75:53"><expr pos:start="75:17" pos:end="75:52"><call pos:start="75:17" pos:end="75:52"><name pos:start="75:17" pos:end="75:25">url_fskip</name><argument_list pos:start="75:26" pos:end="75:52">(<argument pos:start="75:27" pos:end="75:28"><expr pos:start="75:27" pos:end="75:28"><name pos:start="75:27" pos:end="75:28">pb</name></expr></argument>, <argument pos:start="75:31" pos:end="75:51"><expr pos:start="75:31" pos:end="75:51"><name pos:start="75:31" pos:end="75:51"><name pos:start="75:31" pos:end="75:33">asf</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:51">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="77:17" pos:end="77:63"><expr pos:start="77:17" pos:end="77:62"><name pos:start="77:17" pos:end="77:37"><name pos:start="77:17" pos:end="77:19">asf</name><operator pos:start="77:20" pos:end="77:21">-&gt;</operator><name pos:start="77:22" pos:end="77:37">packet_size_left</name></name> <operator pos:start="77:39" pos:end="77:40">-=</operator> <name pos:start="77:42" pos:end="77:62"><name pos:start="77:42" pos:end="77:44">asf</name><operator pos:start="77:45" pos:end="77:46">-&gt;</operator><name pos:start="77:47" pos:end="77:62">packet_frag_size</name></name></expr>;</expr_stmt>

		<expr_stmt pos:start="79:17" pos:end="79:81"><expr pos:start="79:17" pos:end="79:80"><call pos:start="79:17" pos:end="79:80"><name pos:start="79:17" pos:end="79:22">printf</name><argument_list pos:start="79:23" pos:end="79:80">(<argument pos:start="79:24" pos:end="79:45"><expr pos:start="79:24" pos:end="79:45"><literal type="string" pos:start="79:24" pos:end="79:45">"ff asf skip %d  %d\n"</literal></expr></argument>, <argument pos:start="79:48" pos:end="79:68"><expr pos:start="79:48" pos:end="79:68"><name pos:start="79:48" pos:end="79:68"><name pos:start="79:48" pos:end="79:50">asf</name><operator pos:start="79:51" pos:end="79:52">-&gt;</operator><name pos:start="79:53" pos:end="79:68">packet_frag_size</name></name></expr></argument>, <argument pos:start="79:71" pos:end="79:79"><expr pos:start="79:71" pos:end="79:79"><name pos:start="79:71" pos:end="79:73">num</name> <operator pos:start="79:75" pos:end="79:75">&amp;</operator><literal type="number" pos:start="79:76" pos:end="79:79">0x7f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <continue pos:start="81:17" pos:end="81:25">continue;</continue>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="85:13" pos:end="85:67"><expr pos:start="85:13" pos:end="85:66"><name pos:start="85:13" pos:end="85:23"><name pos:start="85:13" pos:end="85:15">asf</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:23">asf_st</name></name> <operator pos:start="85:25" pos:end="85:25">=</operator> <name pos:start="85:27" pos:end="85:55"><name pos:start="85:27" pos:end="85:27">s</name><operator pos:start="85:28" pos:end="85:29">-&gt;</operator><name pos:start="85:30" pos:end="85:36">streams</name><index pos:start="85:37" pos:end="85:55">[<expr pos:start="85:38" pos:end="85:54"><name pos:start="85:38" pos:end="85:54"><name pos:start="85:38" pos:end="85:40">asf</name><operator pos:start="85:41" pos:end="85:42">-&gt;</operator><name pos:start="85:43" pos:end="85:54">stream_index</name></name></expr>]</index></name><operator pos:start="85:56" pos:end="85:57">-&gt;</operator><name pos:start="85:58" pos:end="85:66">priv_data</name></expr>;</expr_stmt>

	    <comment type="line" pos:start="87:13" pos:end="87:92">//printf("ASFST  %p    %d &lt;&gt; %d\n", asf-&gt;asf_st, asf-&gt;stream_index, num &amp; 0x7f);</comment>

	    <comment type="line" pos:start="89:13" pos:end="89:42">// sequence should be ignored!</comment>

	    <expr_stmt pos:start="91:13" pos:end="91:68"><expr pos:start="91:13" pos:end="91:67"><call pos:start="91:13" pos:end="91:67"><name pos:start="91:13" pos:end="91:20">DO_2BITS</name><argument_list pos:start="91:21" pos:end="91:67">(<argument pos:start="91:22" pos:end="91:46"><expr pos:start="91:22" pos:end="91:46"><name pos:start="91:22" pos:end="91:41"><name pos:start="91:22" pos:end="91:24">asf</name><operator pos:start="91:25" pos:end="91:26">-&gt;</operator><name pos:start="91:27" pos:end="91:41">packet_property</name></name> <operator pos:start="91:43" pos:end="91:44">&gt;&gt;</operator> <literal type="number" pos:start="91:46" pos:end="91:46">4</literal></expr></argument>, <argument pos:start="91:49" pos:end="91:63"><expr pos:start="91:49" pos:end="91:63"><name pos:start="91:49" pos:end="91:63"><name pos:start="91:49" pos:end="91:51">asf</name><operator pos:start="91:52" pos:end="91:53">-&gt;</operator><name pos:start="91:54" pos:end="91:63">packet_seq</name></name></expr></argument>, <argument pos:start="91:66" pos:end="91:66"><expr pos:start="91:66" pos:end="91:66"><literal type="number" pos:start="91:66" pos:end="91:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="93:13" pos:end="93:76"><expr pos:start="93:13" pos:end="93:75"><call pos:start="93:13" pos:end="93:75"><name pos:start="93:13" pos:end="93:20">DO_2BITS</name><argument_list pos:start="93:21" pos:end="93:75">(<argument pos:start="93:22" pos:end="93:46"><expr pos:start="93:22" pos:end="93:46"><name pos:start="93:22" pos:end="93:41"><name pos:start="93:22" pos:end="93:24">asf</name><operator pos:start="93:25" pos:end="93:26">-&gt;</operator><name pos:start="93:27" pos:end="93:41">packet_property</name></name> <operator pos:start="93:43" pos:end="93:44">&gt;&gt;</operator> <literal type="number" pos:start="93:46" pos:end="93:46">2</literal></expr></argument>, <argument pos:start="93:49" pos:end="93:71"><expr pos:start="93:49" pos:end="93:71"><name pos:start="93:49" pos:end="93:71"><name pos:start="93:49" pos:end="93:51">asf</name><operator pos:start="93:52" pos:end="93:53">-&gt;</operator><name pos:start="93:54" pos:end="93:71">packet_frag_offset</name></name></expr></argument>, <argument pos:start="93:74" pos:end="93:74"><expr pos:start="93:74" pos:end="93:74"><literal type="number" pos:start="93:74" pos:end="93:74">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="95:13" pos:end="95:71"><expr pos:start="95:13" pos:end="95:70"><call pos:start="95:13" pos:end="95:70"><name pos:start="95:13" pos:end="95:20">DO_2BITS</name><argument_list pos:start="95:21" pos:end="95:70">(<argument pos:start="95:22" pos:end="95:41"><expr pos:start="95:22" pos:end="95:41"><name pos:start="95:22" pos:end="95:41"><name pos:start="95:22" pos:end="95:24">asf</name><operator pos:start="95:25" pos:end="95:26">-&gt;</operator><name pos:start="95:27" pos:end="95:41">packet_property</name></name></expr></argument>, <argument pos:start="95:44" pos:end="95:66"><expr pos:start="95:44" pos:end="95:66"><name pos:start="95:44" pos:end="95:66"><name pos:start="95:44" pos:end="95:46">asf</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:66">packet_replic_size</name></name></expr></argument>, <argument pos:start="95:69" pos:end="95:69"><expr pos:start="95:69" pos:end="95:69"><literal type="number" pos:start="95:69" pos:end="95:69">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



	    <if_stmt pos:start="99:13" pos:end="129:13"><if pos:start="99:13" pos:end="109:13">if <condition pos:start="99:16" pos:end="99:44">(<expr pos:start="99:17" pos:end="99:43"><name pos:start="99:17" pos:end="99:39"><name pos:start="99:17" pos:end="99:19">asf</name><operator pos:start="99:20" pos:end="99:21">-&gt;</operator><name pos:start="99:22" pos:end="99:39">packet_replic_size</name></name> <operator pos:start="99:41" pos:end="99:41">&gt;</operator> <literal type="number" pos:start="99:43" pos:end="99:43">1</literal></expr>)</condition> <block pos:start="99:46" pos:end="109:13">{<block_content pos:start="103:17" pos:end="107:49">

                <comment type="line" pos:start="101:17" pos:end="101:72">// it should be always at least 8 bytes - FIXME validate</comment>

		<expr_stmt pos:start="103:17" pos:end="103:52"><expr pos:start="103:17" pos:end="103:51"><name pos:start="103:17" pos:end="103:36"><name pos:start="103:17" pos:end="103:19">asf</name><operator pos:start="103:20" pos:end="103:21">-&gt;</operator><name pos:start="103:22" pos:end="103:36">packet_obj_size</name></name> <operator pos:start="103:38" pos:end="103:38">=</operator> <call pos:start="103:40" pos:end="103:51"><name pos:start="103:40" pos:end="103:47">get_le32</name><argument_list pos:start="103:48" pos:end="103:51">(<argument pos:start="103:49" pos:end="103:50"><expr pos:start="103:49" pos:end="103:50"><name pos:start="103:49" pos:end="103:50">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="105:17" pos:end="105:58"><expr pos:start="105:17" pos:end="105:57"><name pos:start="105:17" pos:end="105:42"><name pos:start="105:17" pos:end="105:19">asf</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:42">packet_frag_timestamp</name></name> <operator pos:start="105:44" pos:end="105:44">=</operator> <call pos:start="105:46" pos:end="105:57"><name pos:start="105:46" pos:end="105:53">get_le32</name><argument_list pos:start="105:54" pos:end="105:57">(<argument pos:start="105:55" pos:end="105:56"><expr pos:start="105:55" pos:end="105:56"><name pos:start="105:55" pos:end="105:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="105:60" pos:end="105:71">// timestamp</comment>

		<expr_stmt pos:start="107:17" pos:end="107:49"><expr pos:start="107:17" pos:end="107:48"><name pos:start="107:17" pos:end="107:21">rsize</name> <operator pos:start="107:23" pos:end="107:24">+=</operator> <name pos:start="107:26" pos:end="107:48"><name pos:start="107:26" pos:end="107:28">asf</name><operator pos:start="107:29" pos:end="107:30">-&gt;</operator><name pos:start="107:31" pos:end="107:48">packet_replic_size</name></name></expr>;</expr_stmt> <comment type="line" pos:start="107:51" pos:end="107:75">// FIXME - check validity</comment>

	    </block_content>}</block></if> <else pos:start="109:15" pos:end="129:13">else <block pos:start="109:20" pos:end="129:13">{<block_content pos:start="113:17" pos:end="127:17">

		<comment type="line" pos:start="111:17" pos:end="111:65">// multipacket - frag_offset is beginig timestamp</comment>

		<expr_stmt pos:start="113:17" pos:end="113:65"><expr pos:start="113:17" pos:end="113:64"><name pos:start="113:17" pos:end="113:38"><name pos:start="113:17" pos:end="113:19">asf</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:38">packet_time_start</name></name> <operator pos:start="113:40" pos:end="113:40">=</operator> <name pos:start="113:42" pos:end="113:64"><name pos:start="113:42" pos:end="113:44">asf</name><operator pos:start="113:45" pos:end="113:46">-&gt;</operator><name pos:start="113:47" pos:end="113:64">packet_frag_offset</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="115:17" pos:end="115:44"><expr pos:start="115:17" pos:end="115:43"><name pos:start="115:17" pos:end="115:39"><name pos:start="115:17" pos:end="115:19">asf</name><operator pos:start="115:20" pos:end="115:21">-&gt;</operator><name pos:start="115:22" pos:end="115:39">packet_frag_offset</name></name> <operator pos:start="115:41" pos:end="115:41">=</operator> <literal type="number" pos:start="115:43" pos:end="115:43">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="117:17" pos:end="117:67"><expr pos:start="117:17" pos:end="117:66"><name pos:start="117:17" pos:end="117:42"><name pos:start="117:17" pos:end="117:19">asf</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:42">packet_frag_timestamp</name></name> <operator pos:start="117:44" pos:end="117:44">=</operator> <name pos:start="117:46" pos:end="117:66"><name pos:start="117:46" pos:end="117:48">asf</name><operator pos:start="117:49" pos:end="117:50">-&gt;</operator><name pos:start="117:51" pos:end="117:66">packet_timestamp</name></name></expr>;</expr_stmt>



		<if_stmt pos:start="121:17" pos:end="127:17"><if pos:start="121:17" pos:end="127:17">if <condition pos:start="121:20" pos:end="121:49">(<expr pos:start="121:21" pos:end="121:48"><name pos:start="121:21" pos:end="121:43"><name pos:start="121:21" pos:end="121:23">asf</name><operator pos:start="121:24" pos:end="121:25">-&gt;</operator><name pos:start="121:26" pos:end="121:43">packet_replic_size</name></name> <operator pos:start="121:45" pos:end="121:46">==</operator> <literal type="number" pos:start="121:48" pos:end="121:48">1</literal></expr>)</condition> <block pos:start="121:51" pos:end="127:17">{<block_content pos:start="123:21" pos:end="125:28">

		    <expr_stmt pos:start="123:21" pos:end="123:58"><expr pos:start="123:21" pos:end="123:57"><name pos:start="123:21" pos:end="123:42"><name pos:start="123:21" pos:end="123:23">asf</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:42">packet_time_delta</name></name> <operator pos:start="123:44" pos:end="123:44">=</operator> <call pos:start="123:46" pos:end="123:57"><name pos:start="123:46" pos:end="123:53">get_byte</name><argument_list pos:start="123:54" pos:end="123:57">(<argument pos:start="123:55" pos:end="123:56"><expr pos:start="123:55" pos:end="123:56"><name pos:start="123:55" pos:end="123:56">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="125:21" pos:end="125:28"><expr pos:start="125:21" pos:end="125:27"><name pos:start="125:21" pos:end="125:25">rsize</name><operator pos:start="125:26" pos:end="125:27">++</operator></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></else></if_stmt>



	    <if_stmt pos:start="133:13" pos:end="145:13"><if pos:start="133:13" pos:end="139:13">if <condition pos:start="133:16" pos:end="133:41">(<expr pos:start="133:17" pos:end="133:40"><name pos:start="133:17" pos:end="133:33"><name pos:start="133:17" pos:end="133:19">asf</name><operator pos:start="133:20" pos:end="133:21">-&gt;</operator><name pos:start="133:22" pos:end="133:33">packet_flags</name></name> <operator pos:start="133:35" pos:end="133:35">&amp;</operator> <literal type="number" pos:start="133:37" pos:end="133:40">0x01</literal></expr>)</condition> <block pos:start="133:43" pos:end="139:13">{<block_content pos:start="135:17" pos:end="135:81">

		<expr_stmt pos:start="135:17" pos:end="135:81"><expr pos:start="135:17" pos:end="135:80"><call pos:start="135:17" pos:end="135:80"><name pos:start="135:17" pos:end="135:24">DO_2BITS</name><argument_list pos:start="135:25" pos:end="135:80">(<argument pos:start="135:26" pos:end="135:53"><expr pos:start="135:26" pos:end="135:53"><name pos:start="135:26" pos:end="135:48"><name pos:start="135:26" pos:end="135:28">asf</name><operator pos:start="135:29" pos:end="135:30">-&gt;</operator><name pos:start="135:31" pos:end="135:48">packet_segsizetype</name></name> <operator pos:start="135:50" pos:end="135:51">&gt;&gt;</operator> <literal type="number" pos:start="135:53" pos:end="135:53">6</literal></expr></argument>, <argument pos:start="135:56" pos:end="135:76"><expr pos:start="135:56" pos:end="135:76"><name pos:start="135:56" pos:end="135:76"><name pos:start="135:56" pos:end="135:58">asf</name><operator pos:start="135:59" pos:end="135:60">-&gt;</operator><name pos:start="135:61" pos:end="135:76">packet_frag_size</name></name></expr></argument>, <argument pos:start="135:79" pos:end="135:79"><expr pos:start="135:79" pos:end="135:79"><literal type="number" pos:start="135:79" pos:end="135:79">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="135:83" pos:end="135:97">// 0 is illegal</comment>

		<comment type="line" pos:start="137:17" pos:end="137:65">//printf("Fragsize %d\n", asf-&gt;packet_frag_size);</comment>

	    </block_content>}</block></if> <else pos:start="139:15" pos:end="145:13">else <block pos:start="139:20" pos:end="145:13">{<block_content pos:start="141:17" pos:end="141:70">

		<expr_stmt pos:start="141:17" pos:end="141:70"><expr pos:start="141:17" pos:end="141:69"><name pos:start="141:17" pos:end="141:37"><name pos:start="141:17" pos:end="141:19">asf</name><operator pos:start="141:20" pos:end="141:21">-&gt;</operator><name pos:start="141:22" pos:end="141:37">packet_frag_size</name></name> <operator pos:start="141:39" pos:end="141:39">=</operator> <name pos:start="141:41" pos:end="141:61"><name pos:start="141:41" pos:end="141:43">asf</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:61">packet_size_left</name></name> <operator pos:start="141:63" pos:end="141:63">-</operator> <name pos:start="141:65" pos:end="141:69">rsize</name></expr>;</expr_stmt>

		<comment type="line" pos:start="143:17" pos:end="143:104">//printf("Using rest  %d %d %d\n", asf-&gt;packet_frag_size, asf-&gt;packet_size_left, rsize);</comment>

	    </block_content>}</block></else></if_stmt>

	    <if_stmt pos:start="147:13" pos:end="166:0"><if pos:start="147:13" pos:end="166:0">if <condition pos:start="147:16" pos:end="147:45">(<expr pos:start="147:17" pos:end="147:44"><name pos:start="147:17" pos:end="147:39"><name pos:start="147:17" pos:end="147:19">asf</name><operator pos:start="147:20" pos:end="147:21">-&gt;</operator><name pos:start="147:22" pos:end="147:39">packet_replic_size</name></name> <operator pos:start="147:41" pos:end="147:42">==</operator> <literal type="number" pos:start="147:44" pos:end="147:44">1</literal></expr>)</condition>

	    <block pos:start="149:13" pos:end="166:0">{<block_content pos:start="151:17" pos:end="161:17">

		<expr_stmt pos:start="151:17" pos:end="151:63"><expr pos:start="151:17" pos:end="151:62"><name pos:start="151:17" pos:end="151:38"><name pos:start="151:17" pos:end="151:19">asf</name><operator pos:start="151:20" pos:end="151:21">-&gt;</operator><name pos:start="151:22" pos:end="151:38">packet_multi_size</name></name> <operator pos:start="151:40" pos:end="151:40">=</operator> <name pos:start="151:42" pos:end="151:62"><name pos:start="151:42" pos:end="151:44">asf</name><operator pos:start="151:45" pos:end="151:46">-&gt;</operator><name pos:start="151:47" pos:end="151:62">packet_frag_size</name></name></expr>;</expr_stmt>

		<if_stmt pos:start="153:17" pos:end="161:17"><if pos:start="153:17" pos:end="161:17">if <condition pos:start="153:20" pos:end="153:67">(<expr pos:start="153:21" pos:end="153:66"><name pos:start="153:21" pos:end="153:42"><name pos:start="153:21" pos:end="153:23">asf</name><operator pos:start="153:24" pos:end="153:25">-&gt;</operator><name pos:start="153:26" pos:end="153:42">packet_multi_size</name></name> <operator pos:start="153:44" pos:end="153:44">&gt;</operator> <name pos:start="153:46" pos:end="153:66"><name pos:start="153:46" pos:end="153:48">asf</name><operator pos:start="153:49" pos:end="153:50">-&gt;</operator><name pos:start="153:51" pos:end="153:66">packet_size_left</name></name></expr>)</condition>

		<block pos:start="155:17" pos:end="161:17">{<block_content pos:start="157:21" pos:end="159:29">

		    <expr_stmt pos:start="157:21" pos:end="157:45"><expr pos:start="157:21" pos:end="157:44"><name pos:start="157:21" pos:end="157:40"><name pos:start="157:21" pos:end="157:23">asf</name><operator pos:start="157:24" pos:end="157:25">-&gt;</operator><name pos:start="157:26" pos:end="157:40">packet_segments</name></name> <operator pos:start="157:42" pos:end="157:42">=</operator> <literal type="number" pos:start="157:44" pos:end="157:44">0</literal></expr>;</expr_stmt>

                    <continue pos:start="159:21" pos:end="159:29">continue;</continue>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></if></if_stmt>

<cpp:undef pos:start="165:1" pos:end="165:15">#<cpp:directive pos:start="165:2" pos:end="165:6">undef</cpp:directive> <name pos:start="165:8" pos:end="165:15">DO_2BITS</name></cpp:undef>

	    <expr_stmt pos:start="167:13" pos:end="167:43"><expr pos:start="167:13" pos:end="167:42"><name pos:start="167:13" pos:end="167:33"><name pos:start="167:13" pos:end="167:15">asf</name><operator pos:start="167:16" pos:end="167:17">-&gt;</operator><name pos:start="167:18" pos:end="167:33">packet_size_left</name></name> <operator pos:start="167:35" pos:end="167:36">-=</operator> <name pos:start="167:38" pos:end="167:42">rsize</name></expr>;</expr_stmt>

	    <comment type="line" pos:start="169:13" pos:end="169:113">//printf("___objsize____  %d   %d    rs:%d\n", asf-&gt;packet_obj_size, asf-&gt;packet_frag_offset, rsize);</comment>

	</block_content>}</block></if></if_stmt>

	<expr_stmt pos:start="173:9" pos:end="173:29"><expr pos:start="173:9" pos:end="173:28"><name pos:start="173:9" pos:end="173:14">asf_st</name> <operator pos:start="173:16" pos:end="173:16">=</operator> <name pos:start="173:18" pos:end="173:28"><name pos:start="173:18" pos:end="173:20">asf</name><operator pos:start="173:21" pos:end="173:22">-&gt;</operator><name pos:start="173:23" pos:end="173:28">asf_st</name></name></expr>;</expr_stmt>



	<if_stmt pos:start="177:9" pos:end="217:9"><if pos:start="177:9" pos:end="217:9">if <condition pos:start="177:12" pos:end="183:12">(<expr pos:start="177:13" pos:end="181:52"><operator pos:start="177:13" pos:end="177:13">(</operator><name pos:start="177:14" pos:end="177:36"><name pos:start="177:14" pos:end="177:16">asf</name><operator pos:start="177:17" pos:end="177:18">-&gt;</operator><name pos:start="177:19" pos:end="177:36">packet_frag_offset</name></name> <operator pos:start="177:38" pos:end="177:39">!=</operator> <name pos:start="177:41" pos:end="177:59"><name pos:start="177:41" pos:end="177:46">asf_st</name><operator pos:start="177:47" pos:end="177:48">-&gt;</operator><name pos:start="177:49" pos:end="177:59">frag_offset</name></name>

	     <operator pos:start="179:14" pos:end="179:15">||</operator> <operator pos:start="179:17" pos:end="179:17">(</operator><name pos:start="179:18" pos:end="179:40"><name pos:start="179:18" pos:end="179:20">asf</name><operator pos:start="179:21" pos:end="179:22">-&gt;</operator><name pos:start="179:23" pos:end="179:40">packet_frag_offset</name></name>

		 <operator pos:start="181:18" pos:end="181:19">&amp;&amp;</operator> <name pos:start="181:21" pos:end="181:35"><name pos:start="181:21" pos:end="181:23">asf</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:35">packet_seq</name></name> <operator pos:start="181:37" pos:end="181:38">!=</operator> <name pos:start="181:40" pos:end="181:50"><name pos:start="181:40" pos:end="181:45">asf_st</name><operator pos:start="181:46" pos:end="181:47">-&gt;</operator><name pos:start="181:48" pos:end="181:50">seq</name></name><operator pos:start="181:51" pos:end="181:51">)</operator><operator pos:start="181:52" pos:end="181:52">)</operator></expr> <comment type="line" pos:start="181:54" pos:end="181:77">// seq should be ignored</comment>

	   )</condition> <block pos:start="183:14" pos:end="217:9">{<block_content pos:start="189:13" pos:end="215:13">

	    <comment type="block" pos:start="185:13" pos:end="185:57">/* cannot continue current packet: free it */</comment>

	    <comment type="line" pos:start="187:13" pos:end="187:65">// FIXME better check if packet was already allocated</comment>

	    <expr_stmt pos:start="189:13" pos:end="197:72"><expr pos:start="189:13" pos:end="197:71"><call pos:start="189:13" pos:end="197:71"><name pos:start="189:13" pos:end="189:18">printf</name><argument_list pos:start="189:19" pos:end="197:71">(<argument pos:start="189:20" pos:end="189:82"><expr pos:start="189:20" pos:end="189:82"><literal type="string" pos:start="189:20" pos:end="189:82">"ff asf parser skips: %d - %d     o:%d - %d    %d %d   fl:%d\n"</literal></expr></argument>,

		   <argument pos:start="191:20" pos:end="191:35"><expr pos:start="191:20" pos:end="191:35"><name pos:start="191:20" pos:end="191:35"><name pos:start="191:20" pos:end="191:25">asf_st</name><operator pos:start="191:26" pos:end="191:27">-&gt;</operator><name pos:start="191:28" pos:end="191:30">pkt</name><operator pos:start="191:31" pos:end="191:31">.</operator><name pos:start="191:32" pos:end="191:35">size</name></name></expr></argument>,

		   <argument pos:start="193:20" pos:end="193:39"><expr pos:start="193:20" pos:end="193:39"><name pos:start="193:20" pos:end="193:39"><name pos:start="193:20" pos:end="193:22">asf</name><operator pos:start="193:23" pos:end="193:24">-&gt;</operator><name pos:start="193:25" pos:end="193:39">packet_obj_size</name></name></expr></argument>,

		   <argument pos:start="195:20" pos:end="195:42"><expr pos:start="195:20" pos:end="195:42"><name pos:start="195:20" pos:end="195:42"><name pos:start="195:20" pos:end="195:22">asf</name><operator pos:start="195:23" pos:end="195:24">-&gt;</operator><name pos:start="195:25" pos:end="195:42">packet_frag_offset</name></name></expr></argument>, <argument pos:start="195:45" pos:end="195:63"><expr pos:start="195:45" pos:end="195:63"><name pos:start="195:45" pos:end="195:63"><name pos:start="195:45" pos:end="195:50">asf_st</name><operator pos:start="195:51" pos:end="195:52">-&gt;</operator><name pos:start="195:53" pos:end="195:63">frag_offset</name></name></expr></argument>,

		   <argument pos:start="197:20" pos:end="197:34"><expr pos:start="197:20" pos:end="197:34"><name pos:start="197:20" pos:end="197:34"><name pos:start="197:20" pos:end="197:22">asf</name><operator pos:start="197:23" pos:end="197:24">-&gt;</operator><name pos:start="197:25" pos:end="197:34">packet_seq</name></name></expr></argument>, <argument pos:start="197:37" pos:end="197:47"><expr pos:start="197:37" pos:end="197:47"><name pos:start="197:37" pos:end="197:47"><name pos:start="197:37" pos:end="197:42">asf_st</name><operator pos:start="197:43" pos:end="197:44">-&gt;</operator><name pos:start="197:45" pos:end="197:47">seq</name></name></expr></argument>, <argument pos:start="197:50" pos:end="197:70"><expr pos:start="197:50" pos:end="197:70"><name pos:start="197:50" pos:end="197:70"><name pos:start="197:50" pos:end="197:52">asf</name><operator pos:start="197:53" pos:end="197:54">-&gt;</operator><name pos:start="197:55" pos:end="197:70">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <if_stmt pos:start="199:13" pos:end="201:45"><if pos:start="199:13" pos:end="201:45">if <condition pos:start="199:16" pos:end="199:33">(<expr pos:start="199:17" pos:end="199:32"><name pos:start="199:17" pos:end="199:32"><name pos:start="199:17" pos:end="199:22">asf_st</name><operator pos:start="199:23" pos:end="199:24">-&gt;</operator><name pos:start="199:25" pos:end="199:27">pkt</name><operator pos:start="199:28" pos:end="199:28">.</operator><name pos:start="199:29" pos:end="199:32">size</name></name></expr>)</condition><block type="pseudo" pos:start="201:17" pos:end="201:45"><block_content pos:start="201:17" pos:end="201:45">

		<expr_stmt pos:start="201:17" pos:end="201:45"><expr pos:start="201:17" pos:end="201:44"><call pos:start="201:17" pos:end="201:44"><name pos:start="201:17" pos:end="201:30">av_free_packet</name><argument_list pos:start="201:31" pos:end="201:44">(<argument pos:start="201:32" pos:end="201:43"><expr pos:start="201:32" pos:end="201:43"><operator pos:start="201:32" pos:end="201:32">&amp;</operator><name pos:start="201:33" pos:end="201:43"><name pos:start="201:33" pos:end="201:38">asf_st</name><operator pos:start="201:39" pos:end="201:40">-&gt;</operator><name pos:start="201:41" pos:end="201:43">pkt</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	    <expr_stmt pos:start="203:13" pos:end="203:36"><expr pos:start="203:13" pos:end="203:35"><name pos:start="203:13" pos:end="203:31"><name pos:start="203:13" pos:end="203:18">asf_st</name><operator pos:start="203:19" pos:end="203:20">-&gt;</operator><name pos:start="203:21" pos:end="203:31">frag_offset</name></name> <operator pos:start="203:33" pos:end="203:33">=</operator> <literal type="number" pos:start="203:35" pos:end="203:35">0</literal></expr>;</expr_stmt>

	    <if_stmt pos:start="205:13" pos:end="215:13"><if pos:start="205:13" pos:end="215:13">if <condition pos:start="205:16" pos:end="205:45">(<expr pos:start="205:17" pos:end="205:44"><name pos:start="205:17" pos:end="205:39"><name pos:start="205:17" pos:end="205:19">asf</name><operator pos:start="205:20" pos:end="205:21">-&gt;</operator><name pos:start="205:22" pos:end="205:39">packet_frag_offset</name></name> <operator pos:start="205:41" pos:end="205:42">!=</operator> <literal type="number" pos:start="205:44" pos:end="205:44">0</literal></expr>)</condition> <block pos:start="205:47" pos:end="215:13">{<block_content pos:start="207:17" pos:end="213:25">

		<expr_stmt pos:start="207:17" pos:end="207:53"><expr pos:start="207:17" pos:end="207:52"><call pos:start="207:17" pos:end="207:52"><name pos:start="207:17" pos:end="207:25">url_fskip</name><argument_list pos:start="207:26" pos:end="207:52">(<argument pos:start="207:27" pos:end="207:28"><expr pos:start="207:27" pos:end="207:28"><name pos:start="207:27" pos:end="207:28">pb</name></expr></argument>, <argument pos:start="207:31" pos:end="207:51"><expr pos:start="207:31" pos:end="207:51"><name pos:start="207:31" pos:end="207:51"><name pos:start="207:31" pos:end="207:33">asf</name><operator pos:start="207:34" pos:end="207:35">-&gt;</operator><name pos:start="207:36" pos:end="207:51">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="209:17" pos:end="209:77"><expr pos:start="209:17" pos:end="209:76"><call pos:start="209:17" pos:end="209:76"><name pos:start="209:17" pos:end="209:22">printf</name><argument_list pos:start="209:23" pos:end="209:76">(<argument pos:start="209:24" pos:end="209:52"><expr pos:start="209:24" pos:end="209:52"><literal type="string" pos:start="209:24" pos:end="209:52">"ff asf parser skiping %db\n"</literal></expr></argument>, <argument pos:start="209:55" pos:end="209:75"><expr pos:start="209:55" pos:end="209:75"><name pos:start="209:55" pos:end="209:75"><name pos:start="209:55" pos:end="209:57">asf</name><operator pos:start="209:58" pos:end="209:59">-&gt;</operator><name pos:start="209:60" pos:end="209:75">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="211:17" pos:end="211:63"><expr pos:start="211:17" pos:end="211:62"><name pos:start="211:17" pos:end="211:37"><name pos:start="211:17" pos:end="211:19">asf</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:37">packet_size_left</name></name> <operator pos:start="211:39" pos:end="211:40">-=</operator> <name pos:start="211:42" pos:end="211:62"><name pos:start="211:42" pos:end="211:44">asf</name><operator pos:start="211:45" pos:end="211:46">-&gt;</operator><name pos:start="211:47" pos:end="211:62">packet_frag_size</name></name></expr>;</expr_stmt>

		<continue pos:start="213:17" pos:end="213:25">continue;</continue>

	    </block_content>}</block></if></if_stmt>

	</block_content>}</block></if></if_stmt>

	<if_stmt pos:start="219:9" pos:end="251:9"><if pos:start="219:9" pos:end="251:9">if <condition pos:start="219:12" pos:end="219:41">(<expr pos:start="219:13" pos:end="219:40"><name pos:start="219:13" pos:end="219:35"><name pos:start="219:13" pos:end="219:15">asf</name><operator pos:start="219:16" pos:end="219:17">-&gt;</operator><name pos:start="219:18" pos:end="219:35">packet_replic_size</name></name> <operator pos:start="219:37" pos:end="219:38">==</operator> <literal type="number" pos:start="219:40" pos:end="219:40">1</literal></expr>)</condition> <block pos:start="219:43" pos:end="251:9">{<block_content pos:start="223:13" pos:end="247:59">

	    <comment type="line" pos:start="221:13" pos:end="221:65">// frag_offset is here used as the begining timestamp</comment>

	    <expr_stmt pos:start="223:13" pos:end="223:64"><expr pos:start="223:13" pos:end="223:63"><name pos:start="223:13" pos:end="223:38"><name pos:start="223:13" pos:end="223:15">asf</name><operator pos:start="223:16" pos:end="223:17">-&gt;</operator><name pos:start="223:18" pos:end="223:38">packet_frag_timestamp</name></name> <operator pos:start="223:40" pos:end="223:40">=</operator> <name pos:start="223:42" pos:end="223:63"><name pos:start="223:42" pos:end="223:44">asf</name><operator pos:start="223:45" pos:end="223:46">-&gt;</operator><name pos:start="223:47" pos:end="223:63">packet_time_start</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="225:13" pos:end="225:61"><expr pos:start="225:13" pos:end="225:60"><name pos:start="225:13" pos:end="225:34"><name pos:start="225:13" pos:end="225:15">asf</name><operator pos:start="225:16" pos:end="225:17">-&gt;</operator><name pos:start="225:18" pos:end="225:34">packet_time_start</name></name> <operator pos:start="225:36" pos:end="225:37">+=</operator> <name pos:start="225:39" pos:end="225:60"><name pos:start="225:39" pos:end="225:41">asf</name><operator pos:start="225:42" pos:end="225:43">-&gt;</operator><name pos:start="225:44" pos:end="225:60">packet_time_delta</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="227:13" pos:end="227:72"><expr pos:start="227:13" pos:end="227:71"><name pos:start="227:13" pos:end="227:32"><name pos:start="227:13" pos:end="227:15">asf</name><operator pos:start="227:16" pos:end="227:17">-&gt;</operator><name pos:start="227:18" pos:end="227:32">packet_obj_size</name></name> <operator pos:start="227:34" pos:end="227:34">=</operator> <name pos:start="227:36" pos:end="227:56"><name pos:start="227:36" pos:end="227:38">asf</name><operator pos:start="227:39" pos:end="227:40">-&gt;</operator><name pos:start="227:41" pos:end="227:56">packet_frag_size</name></name> <operator pos:start="227:58" pos:end="227:58">=</operator> <call pos:start="227:60" pos:end="227:71"><name pos:start="227:60" pos:end="227:67">get_byte</name><argument_list pos:start="227:68" pos:end="227:71">(<argument pos:start="227:69" pos:end="227:70"><expr pos:start="227:69" pos:end="227:70"><name pos:start="227:69" pos:end="227:70">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="229:13" pos:end="229:36"><expr pos:start="229:13" pos:end="229:35"><name pos:start="229:13" pos:end="229:33"><name pos:start="229:13" pos:end="229:15">asf</name><operator pos:start="229:16" pos:end="229:17">-&gt;</operator><name pos:start="229:18" pos:end="229:33">packet_size_left</name></name><operator pos:start="229:34" pos:end="229:35">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:37"><expr pos:start="231:13" pos:end="231:36"><name pos:start="231:13" pos:end="231:34"><name pos:start="231:13" pos:end="231:15">asf</name><operator pos:start="231:16" pos:end="231:17">-&gt;</operator><name pos:start="231:18" pos:end="231:34">packet_multi_size</name></name><operator pos:start="231:35" pos:end="231:36">--</operator></expr>;</expr_stmt>

	    <if_stmt pos:start="233:13" pos:end="245:13"><if pos:start="233:13" pos:end="245:13">if <condition pos:start="233:16" pos:end="233:62">(<expr pos:start="233:17" pos:end="233:61"><name pos:start="233:17" pos:end="233:38"><name pos:start="233:17" pos:end="233:19">asf</name><operator pos:start="233:20" pos:end="233:21">-&gt;</operator><name pos:start="233:22" pos:end="233:38">packet_multi_size</name></name> <operator pos:start="233:40" pos:end="233:40">&lt;</operator> <name pos:start="233:42" pos:end="233:61"><name pos:start="233:42" pos:end="233:44">asf</name><operator pos:start="233:45" pos:end="233:46">-&gt;</operator><name pos:start="233:47" pos:end="233:61">packet_obj_size</name></name></expr>)</condition>

	    <block pos:start="235:13" pos:end="245:13">{<block_content pos:start="237:17" pos:end="243:25">

		<expr_stmt pos:start="237:17" pos:end="237:43"><expr pos:start="237:17" pos:end="237:42"><name pos:start="237:17" pos:end="237:38"><name pos:start="237:17" pos:end="237:19">asf</name><operator pos:start="237:20" pos:end="237:21">-&gt;</operator><name pos:start="237:22" pos:end="237:38">packet_time_start</name></name> <operator pos:start="237:40" pos:end="237:40">=</operator> <literal type="number" pos:start="237:42" pos:end="237:42">0</literal></expr>;</expr_stmt>

		<expr_stmt pos:start="239:17" pos:end="239:54"><expr pos:start="239:17" pos:end="239:53"><call pos:start="239:17" pos:end="239:53"><name pos:start="239:17" pos:end="239:25">url_fskip</name><argument_list pos:start="239:26" pos:end="239:53">(<argument pos:start="239:27" pos:end="239:28"><expr pos:start="239:27" pos:end="239:28"><name pos:start="239:27" pos:end="239:28">pb</name></expr></argument>, <argument pos:start="239:31" pos:end="239:52"><expr pos:start="239:31" pos:end="239:52"><name pos:start="239:31" pos:end="239:52"><name pos:start="239:31" pos:end="239:33">asf</name><operator pos:start="239:34" pos:end="239:35">-&gt;</operator><name pos:start="239:36" pos:end="239:52">packet_multi_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		<expr_stmt pos:start="241:17" pos:end="241:64"><expr pos:start="241:17" pos:end="241:63"><name pos:start="241:17" pos:end="241:37"><name pos:start="241:17" pos:end="241:19">asf</name><operator pos:start="241:20" pos:end="241:21">-&gt;</operator><name pos:start="241:22" pos:end="241:37">packet_size_left</name></name> <operator pos:start="241:39" pos:end="241:40">-=</operator> <name pos:start="241:42" pos:end="241:63"><name pos:start="241:42" pos:end="241:44">asf</name><operator pos:start="241:45" pos:end="241:46">-&gt;</operator><name pos:start="241:47" pos:end="241:63">packet_multi_size</name></name></expr>;</expr_stmt>

                <continue pos:start="243:17" pos:end="243:25">continue;</continue>

	    </block_content>}</block></if></if_stmt>

	    <expr_stmt pos:start="247:13" pos:end="247:59"><expr pos:start="247:13" pos:end="247:58"><name pos:start="247:13" pos:end="247:34"><name pos:start="247:13" pos:end="247:15">asf</name><operator pos:start="247:16" pos:end="247:17">-&gt;</operator><name pos:start="247:18" pos:end="247:34">packet_multi_size</name></name> <operator pos:start="247:36" pos:end="247:37">-=</operator> <name pos:start="247:39" pos:end="247:58"><name pos:start="247:39" pos:end="247:41">asf</name><operator pos:start="247:42" pos:end="247:43">-&gt;</operator><name pos:start="247:44" pos:end="247:58">packet_obj_size</name></name></expr>;</expr_stmt>

	    <comment type="line" pos:start="249:13" pos:end="249:157">//printf("COMPRESS size  %d  %d  %d   ms:%d\n", asf-&gt;packet_obj_size, asf-&gt;packet_frag_timestamp, asf-&gt;packet_size_left, asf-&gt;packet_multi_size);</comment>

	</block_content>}</block></if></if_stmt>



	<if_stmt pos:start="255:9" pos:end="271:9"><if pos:start="255:9" pos:end="271:9">if <condition pos:start="255:12" pos:end="255:37">(<expr pos:start="255:13" pos:end="255:36"><name pos:start="255:13" pos:end="255:31"><name pos:start="255:13" pos:end="255:18">asf_st</name><operator pos:start="255:19" pos:end="255:20">-&gt;</operator><name pos:start="255:21" pos:end="255:31">frag_offset</name></name> <operator pos:start="255:33" pos:end="255:34">==</operator> <literal type="number" pos:start="255:36" pos:end="255:36">0</literal></expr>)</condition> <block pos:start="255:39" pos:end="271:9">{<block_content pos:start="259:13" pos:end="269:50">

	    <comment type="block" pos:start="257:13" pos:end="257:28">/* new packet */</comment>

	    <expr_stmt pos:start="259:13" pos:end="259:62"><expr pos:start="259:13" pos:end="259:61"><call pos:start="259:13" pos:end="259:61"><name pos:start="259:13" pos:end="259:25">av_new_packet</name><argument_list pos:start="259:26" pos:end="259:61">(<argument pos:start="259:27" pos:end="259:38"><expr pos:start="259:27" pos:end="259:38"><operator pos:start="259:27" pos:end="259:27">&amp;</operator><name pos:start="259:28" pos:end="259:38"><name pos:start="259:28" pos:end="259:33">asf_st</name><operator pos:start="259:34" pos:end="259:35">-&gt;</operator><name pos:start="259:36" pos:end="259:38">pkt</name></name></expr></argument>, <argument pos:start="259:41" pos:end="259:60"><expr pos:start="259:41" pos:end="259:60"><name pos:start="259:41" pos:end="259:60"><name pos:start="259:41" pos:end="259:43">asf</name><operator pos:start="259:44" pos:end="259:45">-&gt;</operator><name pos:start="259:46" pos:end="259:60">packet_obj_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <expr_stmt pos:start="261:13" pos:end="261:42"><expr pos:start="261:13" pos:end="261:41"><name pos:start="261:13" pos:end="261:23"><name pos:start="261:13" pos:end="261:18">asf_st</name><operator pos:start="261:19" pos:end="261:20">-&gt;</operator><name pos:start="261:21" pos:end="261:23">seq</name></name> <operator pos:start="261:25" pos:end="261:25">=</operator> <name pos:start="261:27" pos:end="261:41"><name pos:start="261:27" pos:end="261:29">asf</name><operator pos:start="261:30" pos:end="261:31">-&gt;</operator><name pos:start="261:32" pos:end="261:41">packet_seq</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="263:13" pos:end="263:76"><expr pos:start="263:13" pos:end="263:75"><name pos:start="263:13" pos:end="263:27"><name pos:start="263:13" pos:end="263:18">asf_st</name><operator pos:start="263:19" pos:end="263:20">-&gt;</operator><name pos:start="263:21" pos:end="263:23">pkt</name><operator pos:start="263:24" pos:end="263:24">.</operator><name pos:start="263:25" pos:end="263:27">pts</name></name> <operator pos:start="263:29" pos:end="263:29">=</operator> <name pos:start="263:31" pos:end="263:56"><name pos:start="263:31" pos:end="263:33">asf</name><operator pos:start="263:34" pos:end="263:35">-&gt;</operator><name pos:start="263:36" pos:end="263:56">packet_frag_timestamp</name></name> <operator pos:start="263:58" pos:end="263:58">-</operator> <name pos:start="263:60" pos:end="263:75"><name pos:start="263:60" pos:end="263:62">asf</name><operator pos:start="263:63" pos:end="263:64">-&gt;</operator><name pos:start="263:65" pos:end="263:67">hdr</name><operator pos:start="263:68" pos:end="263:68">.</operator><name pos:start="263:69" pos:end="263:75">preroll</name></name></expr>;</expr_stmt>

	    <expr_stmt pos:start="265:13" pos:end="265:57"><expr pos:start="265:13" pos:end="265:56"><name pos:start="265:13" pos:end="265:36"><name pos:start="265:13" pos:end="265:18">asf_st</name><operator pos:start="265:19" pos:end="265:20">-&gt;</operator><name pos:start="265:21" pos:end="265:23">pkt</name><operator pos:start="265:24" pos:end="265:24">.</operator><name pos:start="265:25" pos:end="265:36">stream_index</name></name> <operator pos:start="265:38" pos:end="265:38">=</operator> <name pos:start="265:40" pos:end="265:56"><name pos:start="265:40" pos:end="265:42">asf</name><operator pos:start="265:43" pos:end="265:44">-&gt;</operator><name pos:start="265:45" pos:end="265:56">stream_index</name></name></expr>;</expr_stmt>

	    <if_stmt pos:start="267:13" pos:end="269:50"><if pos:start="267:13" pos:end="269:50">if <condition pos:start="267:16" pos:end="267:38">(<expr pos:start="267:17" pos:end="267:37"><name pos:start="267:17" pos:end="267:37"><name pos:start="267:17" pos:end="267:19">asf</name><operator pos:start="267:20" pos:end="267:21">-&gt;</operator><name pos:start="267:22" pos:end="267:37">packet_key_frame</name></name></expr>)</condition><block type="pseudo" pos:start="269:17" pos:end="269:50"><block_content pos:start="269:17" pos:end="269:50">

		<expr_stmt pos:start="269:17" pos:end="269:50"><expr pos:start="269:17" pos:end="269:49"><name pos:start="269:17" pos:end="269:33"><name pos:start="269:17" pos:end="269:22">asf_st</name><operator pos:start="269:23" pos:end="269:24">-&gt;</operator><name pos:start="269:25" pos:end="269:27">pkt</name><operator pos:start="269:28" pos:end="269:28">.</operator><name pos:start="269:29" pos:end="269:33">flags</name></name> <operator pos:start="269:35" pos:end="269:36">|=</operator> <name pos:start="269:38" pos:end="269:49">PKT_FLAG_KEY</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	</block_content>}</block></if></if_stmt>



	<comment type="block" pos:start="275:9" pos:end="275:23">/* read data */</comment>

	<comment type="line" pos:start="277:9" pos:end="277:70">//printf("READ PACKET s:%d  os:%d  o:%d,%d  l:%d   DATA:%p\n",</comment>

	<comment type="line" pos:start="279:9" pos:end="279:77">//       asf-&gt;packet_size, asf_st-&gt;pkt.size, asf-&gt;packet_frag_offset,</comment>

	<comment type="line" pos:start="281:9" pos:end="281:79">//       asf_st-&gt;frag_offset, asf-&gt;packet_frag_size, asf_st-&gt;pkt.data);</comment>

	<expr_stmt pos:start="283:9" pos:end="283:55"><expr pos:start="283:9" pos:end="283:54"><name pos:start="283:9" pos:end="283:29"><name pos:start="283:9" pos:end="283:11">asf</name><operator pos:start="283:12" pos:end="283:13">-&gt;</operator><name pos:start="283:14" pos:end="283:29">packet_size_left</name></name> <operator pos:start="283:31" pos:end="283:32">-=</operator> <name pos:start="283:34" pos:end="283:54"><name pos:start="283:34" pos:end="283:36">asf</name><operator pos:start="283:37" pos:end="283:38">-&gt;</operator><name pos:start="283:39" pos:end="283:54">packet_frag_size</name></name></expr>;</expr_stmt>

	<if_stmt pos:start="285:9" pos:end="287:21"><if pos:start="285:9" pos:end="287:21">if <condition pos:start="285:12" pos:end="285:38">(<expr pos:start="285:13" pos:end="285:37"><name pos:start="285:13" pos:end="285:33"><name pos:start="285:13" pos:end="285:15">asf</name><operator pos:start="285:16" pos:end="285:17">-&gt;</operator><name pos:start="285:18" pos:end="285:33">packet_size_left</name></name> <operator pos:start="285:35" pos:end="285:35">&lt;</operator> <literal type="number" pos:start="285:37" pos:end="285:37">0</literal></expr>)</condition><block type="pseudo" pos:start="287:13" pos:end="287:21"><block_content pos:start="287:13" pos:end="287:21">

            <continue pos:start="287:13" pos:end="287:21">continue;</continue></block_content></block></if></if_stmt>

	<expr_stmt pos:start="289:9" pos:end="291:42"><expr pos:start="289:9" pos:end="291:41"><call pos:start="289:9" pos:end="291:41"><name pos:start="289:9" pos:end="289:18">get_buffer</name><argument_list pos:start="289:19" pos:end="291:41">(<argument pos:start="289:20" pos:end="289:21"><expr pos:start="289:20" pos:end="289:21"><name pos:start="289:20" pos:end="289:21">pb</name></expr></argument>, <argument pos:start="289:24" pos:end="289:65"><expr pos:start="289:24" pos:end="289:65"><name pos:start="289:24" pos:end="289:39"><name pos:start="289:24" pos:end="289:29">asf_st</name><operator pos:start="289:30" pos:end="289:31">-&gt;</operator><name pos:start="289:32" pos:end="289:34">pkt</name><operator pos:start="289:35" pos:end="289:35">.</operator><name pos:start="289:36" pos:end="289:39">data</name></name> <operator pos:start="289:41" pos:end="289:41">+</operator> <name pos:start="289:43" pos:end="289:65"><name pos:start="289:43" pos:end="289:45">asf</name><operator pos:start="289:46" pos:end="289:47">-&gt;</operator><name pos:start="289:48" pos:end="289:65">packet_frag_offset</name></name></expr></argument>,

		   <argument pos:start="291:20" pos:end="291:40"><expr pos:start="291:20" pos:end="291:40"><name pos:start="291:20" pos:end="291:40"><name pos:start="291:20" pos:end="291:22">asf</name><operator pos:start="291:23" pos:end="291:24">-&gt;</operator><name pos:start="291:25" pos:end="291:40">packet_frag_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="293:9" pos:end="293:53"><expr pos:start="293:9" pos:end="293:52"><name pos:start="293:9" pos:end="293:27"><name pos:start="293:9" pos:end="293:14">asf_st</name><operator pos:start="293:15" pos:end="293:16">-&gt;</operator><name pos:start="293:17" pos:end="293:27">frag_offset</name></name> <operator pos:start="293:29" pos:end="293:30">+=</operator> <name pos:start="293:32" pos:end="293:52"><name pos:start="293:32" pos:end="293:34">asf</name><operator pos:start="293:35" pos:end="293:36">-&gt;</operator><name pos:start="293:37" pos:end="293:52">packet_frag_size</name></name></expr>;</expr_stmt>

	<comment type="block" pos:start="295:9" pos:end="295:42">/* test if whole packet is read */</comment>

	<if_stmt pos:start="297:9" pos:end="355:9"><if pos:start="297:9" pos:end="355:9">if <condition pos:start="297:12" pos:end="297:52">(<expr pos:start="297:13" pos:end="297:51"><name pos:start="297:13" pos:end="297:31"><name pos:start="297:13" pos:end="297:18">asf_st</name><operator pos:start="297:19" pos:end="297:20">-&gt;</operator><name pos:start="297:21" pos:end="297:31">frag_offset</name></name> <operator pos:start="297:33" pos:end="297:34">==</operator> <name pos:start="297:36" pos:end="297:51"><name pos:start="297:36" pos:end="297:41">asf_st</name><operator pos:start="297:42" pos:end="297:43">-&gt;</operator><name pos:start="297:44" pos:end="297:46">pkt</name><operator pos:start="297:47" pos:end="297:47">.</operator><name pos:start="297:48" pos:end="297:51">size</name></name></expr>)</condition> <block pos:start="297:54" pos:end="355:9">{<block_content pos:start="301:13" pos:end="353:18">

	    <comment type="block" pos:start="299:13" pos:end="299:31">/* return packet */</comment>

	    <if_stmt pos:start="301:13" pos:end="339:13"><if pos:start="301:13" pos:end="339:13">if <condition pos:start="301:16" pos:end="301:36">(<expr pos:start="301:17" pos:end="301:35"><name pos:start="301:17" pos:end="301:31"><name pos:start="301:17" pos:end="301:22">asf_st</name><operator pos:start="301:23" pos:end="301:24">-&gt;</operator><name pos:start="301:25" pos:end="301:31">ds_span</name></name> <operator pos:start="301:33" pos:end="301:33">&gt;</operator> <literal type="number" pos:start="301:35" pos:end="301:35">1</literal></expr>)</condition> <block pos:start="301:38" pos:end="339:13">{<block_content pos:start="305:17" pos:end="337:17">

		<comment type="block" pos:start="303:17" pos:end="303:41">/* packet descrambling */</comment>

		<decl_stmt pos:start="305:17" pos:end="305:60"><decl pos:start="305:17" pos:end="305:59"><type pos:start="305:17" pos:end="305:21"><name pos:start="305:17" pos:end="305:20">char</name><modifier pos:start="305:21" pos:end="305:21">*</modifier></type> <name pos:start="305:23" pos:end="305:29">newdata</name> <init pos:start="305:31" pos:end="305:59">= <expr pos:start="305:33" pos:end="305:59"><call pos:start="305:33" pos:end="305:59"><name pos:start="305:33" pos:end="305:41">av_malloc</name><argument_list pos:start="305:42" pos:end="305:59">(<argument pos:start="305:43" pos:end="305:58"><expr pos:start="305:43" pos:end="305:58"><name pos:start="305:43" pos:end="305:58"><name pos:start="305:43" pos:end="305:48">asf_st</name><operator pos:start="305:49" pos:end="305:50">-&gt;</operator><name pos:start="305:51" pos:end="305:53">pkt</name><operator pos:start="305:54" pos:end="305:54">.</operator><name pos:start="305:55" pos:end="305:58">size</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

		<if_stmt pos:start="307:17" pos:end="337:17"><if pos:start="307:17" pos:end="337:17">if <condition pos:start="307:20" pos:end="307:28">(<expr pos:start="307:21" pos:end="307:27"><name pos:start="307:21" pos:end="307:27">newdata</name></expr>)</condition> <block pos:start="307:30" pos:end="337:17">{<block_content pos:start="309:21" pos:end="335:47">

		    <decl_stmt pos:start="309:21" pos:end="309:35"><decl pos:start="309:21" pos:end="309:34"><type pos:start="309:21" pos:end="309:23"><name pos:start="309:21" pos:end="309:23">int</name></type> <name pos:start="309:25" pos:end="309:30">offset</name> <init pos:start="309:32" pos:end="309:34">= <expr pos:start="309:34" pos:end="309:34"><literal type="number" pos:start="309:34" pos:end="309:34">0</literal></expr></init></decl>;</decl_stmt>

		    <while pos:start="311:21" pos:end="331:21">while <condition pos:start="311:27" pos:end="311:53">(<expr pos:start="311:28" pos:end="311:52"><name pos:start="311:28" pos:end="311:33">offset</name> <operator pos:start="311:35" pos:end="311:35">&lt;</operator> <name pos:start="311:37" pos:end="311:52"><name pos:start="311:37" pos:end="311:42">asf_st</name><operator pos:start="311:43" pos:end="311:44">-&gt;</operator><name pos:start="311:45" pos:end="311:47">pkt</name><operator pos:start="311:48" pos:end="311:48">.</operator><name pos:start="311:49" pos:end="311:52">size</name></name></expr>)</condition> <block pos:start="311:55" pos:end="331:21">{<block_content pos:start="313:25" pos:end="329:56">

			<decl_stmt pos:start="313:25" pos:end="313:65"><decl pos:start="313:25" pos:end="313:64"><type pos:start="313:25" pos:end="313:27"><name pos:start="313:25" pos:end="313:27">int</name></type> <name pos:start="313:29" pos:end="313:31">off</name> <init pos:start="313:33" pos:end="313:64">= <expr pos:start="313:35" pos:end="313:64"><name pos:start="313:35" pos:end="313:40">offset</name> <operator pos:start="313:42" pos:end="313:42">/</operator> <name pos:start="313:44" pos:end="313:64"><name pos:start="313:44" pos:end="313:49">asf_st</name><operator pos:start="313:50" pos:end="313:51">-&gt;</operator><name pos:start="313:52" pos:end="313:64">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="315:25" pos:end="315:56"><decl pos:start="315:25" pos:end="315:55"><type pos:start="315:25" pos:end="315:27"><name pos:start="315:25" pos:end="315:27">int</name></type> <name pos:start="315:29" pos:end="315:31">row</name> <init pos:start="315:33" pos:end="315:55">= <expr pos:start="315:35" pos:end="315:55"><name pos:start="315:35" pos:end="315:37">off</name> <operator pos:start="315:39" pos:end="315:39">/</operator> <name pos:start="315:41" pos:end="315:55"><name pos:start="315:41" pos:end="315:46">asf_st</name><operator pos:start="315:47" pos:end="315:48">-&gt;</operator><name pos:start="315:49" pos:end="315:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="317:25" pos:end="317:56"><decl pos:start="317:25" pos:end="317:55"><type pos:start="317:25" pos:end="317:27"><name pos:start="317:25" pos:end="317:27">int</name></type> <name pos:start="317:29" pos:end="317:31">col</name> <init pos:start="317:33" pos:end="317:55">= <expr pos:start="317:35" pos:end="317:55"><name pos:start="317:35" pos:end="317:37">off</name> <operator pos:start="317:39" pos:end="317:39">%</operator> <name pos:start="317:41" pos:end="317:55"><name pos:start="317:41" pos:end="317:46">asf_st</name><operator pos:start="317:47" pos:end="317:48">-&gt;</operator><name pos:start="317:49" pos:end="317:55">ds_span</name></name></expr></init></decl>;</decl_stmt>

			<decl_stmt pos:start="319:25" pos:end="319:93"><decl pos:start="319:25" pos:end="319:92"><type pos:start="319:25" pos:end="319:27"><name pos:start="319:25" pos:end="319:27">int</name></type> <name pos:start="319:29" pos:end="319:31">idx</name> <init pos:start="319:33" pos:end="319:92">= <expr pos:start="319:35" pos:end="319:92"><name pos:start="319:35" pos:end="319:37">row</name> <operator pos:start="319:39" pos:end="319:39">+</operator> <name pos:start="319:41" pos:end="319:43">col</name> <operator pos:start="319:45" pos:end="319:45">*</operator> <name pos:start="319:47" pos:end="319:68"><name pos:start="319:47" pos:end="319:52">asf_st</name><operator pos:start="319:53" pos:end="319:54">-&gt;</operator><name pos:start="319:55" pos:end="319:68">ds_packet_size</name></name> <operator pos:start="319:70" pos:end="319:70">/</operator> <name pos:start="319:72" pos:end="319:92"><name pos:start="319:72" pos:end="319:77">asf_st</name><operator pos:start="319:78" pos:end="319:79">-&gt;</operator><name pos:start="319:80" pos:end="319:92">ds_chunk_size</name></name></expr></init></decl>;</decl_stmt>

			<comment type="line" pos:start="321:25" pos:end="321:89">//printf("off:%d  row:%d  col:%d  idx:%d\n", off, row, col, idx);</comment>

			<expr_stmt pos:start="323:25" pos:end="327:54"><expr pos:start="323:25" pos:end="327:53"><call pos:start="323:25" pos:end="327:53"><name pos:start="323:25" pos:end="323:30">memcpy</name><argument_list pos:start="323:31" pos:end="327:53">(<argument pos:start="323:32" pos:end="323:47"><expr pos:start="323:32" pos:end="323:47"><name pos:start="323:32" pos:end="323:38">newdata</name> <operator pos:start="323:40" pos:end="323:40">+</operator> <name pos:start="323:42" pos:end="323:47">offset</name></expr></argument>,

			       <argument pos:start="325:32" pos:end="325:77"><expr pos:start="325:32" pos:end="325:77"><name pos:start="325:32" pos:end="325:47"><name pos:start="325:32" pos:end="325:37">asf_st</name><operator pos:start="325:38" pos:end="325:39">-&gt;</operator><name pos:start="325:40" pos:end="325:42">pkt</name><operator pos:start="325:43" pos:end="325:43">.</operator><name pos:start="325:44" pos:end="325:47">data</name></name> <operator pos:start="325:49" pos:end="325:49">+</operator> <name pos:start="325:51" pos:end="325:53">idx</name> <operator pos:start="325:55" pos:end="325:55">*</operator> <name pos:start="325:57" pos:end="325:77"><name pos:start="325:57" pos:end="325:62">asf_st</name><operator pos:start="325:63" pos:end="325:64">-&gt;</operator><name pos:start="325:65" pos:end="325:77">ds_chunk_size</name></name></expr></argument>,

			       <argument pos:start="327:32" pos:end="327:52"><expr pos:start="327:32" pos:end="327:52"><name pos:start="327:32" pos:end="327:52"><name pos:start="327:32" pos:end="327:37">asf_st</name><operator pos:start="327:38" pos:end="327:39">-&gt;</operator><name pos:start="327:40" pos:end="327:52">ds_chunk_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="329:25" pos:end="329:56"><expr pos:start="329:25" pos:end="329:55"><name pos:start="329:25" pos:end="329:30">offset</name> <operator pos:start="329:32" pos:end="329:33">+=</operator> <name pos:start="329:35" pos:end="329:55"><name pos:start="329:35" pos:end="329:40">asf_st</name><operator pos:start="329:41" pos:end="329:42">-&gt;</operator><name pos:start="329:43" pos:end="329:55">ds_chunk_size</name></name></expr>;</expr_stmt>

		    </block_content>}</block></while>

		    <expr_stmt pos:start="333:21" pos:end="333:46"><expr pos:start="333:21" pos:end="333:45"><call pos:start="333:21" pos:end="333:45"><name pos:start="333:21" pos:end="333:27">av_free</name><argument_list pos:start="333:28" pos:end="333:45">(<argument pos:start="333:29" pos:end="333:44"><expr pos:start="333:29" pos:end="333:44"><name pos:start="333:29" pos:end="333:44"><name pos:start="333:29" pos:end="333:34">asf_st</name><operator pos:start="333:35" pos:end="333:36">-&gt;</operator><name pos:start="333:37" pos:end="333:39">pkt</name><operator pos:start="333:40" pos:end="333:40">.</operator><name pos:start="333:41" pos:end="333:44">data</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

		    <expr_stmt pos:start="335:21" pos:end="335:47"><expr pos:start="335:21" pos:end="335:46"><name pos:start="335:21" pos:end="335:36"><name pos:start="335:21" pos:end="335:26">asf_st</name><operator pos:start="335:27" pos:end="335:28">-&gt;</operator><name pos:start="335:29" pos:end="335:31">pkt</name><operator pos:start="335:32" pos:end="335:32">.</operator><name pos:start="335:33" pos:end="335:36">data</name></name> <operator pos:start="335:38" pos:end="335:38">=</operator> <name pos:start="335:40" pos:end="335:46">newdata</name></expr>;</expr_stmt>

		</block_content>}</block></if></if_stmt>

	    </block_content>}</block></if></if_stmt>



	    <expr_stmt pos:start="343:13" pos:end="343:36"><expr pos:start="343:13" pos:end="343:35"><name pos:start="343:13" pos:end="343:31"><name pos:start="343:13" pos:end="343:18">asf_st</name><operator pos:start="343:19" pos:end="343:20">-&gt;</operator><name pos:start="343:21" pos:end="343:31">frag_offset</name></name> <operator pos:start="343:33" pos:end="343:33">=</operator> <literal type="number" pos:start="343:35" pos:end="343:35">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="345:13" pos:end="345:56"><expr pos:start="345:13" pos:end="345:55"><call pos:start="345:13" pos:end="345:55"><name pos:start="345:13" pos:end="345:18">memcpy</name><argument_list pos:start="345:19" pos:end="345:55">(<argument pos:start="345:20" pos:end="345:22"><expr pos:start="345:20" pos:end="345:22"><name pos:start="345:20" pos:end="345:22">pkt</name></expr></argument>, <argument pos:start="345:25" pos:end="345:36"><expr pos:start="345:25" pos:end="345:36"><operator pos:start="345:25" pos:end="345:25">&amp;</operator><name pos:start="345:26" pos:end="345:36"><name pos:start="345:26" pos:end="345:31">asf_st</name><operator pos:start="345:32" pos:end="345:33">-&gt;</operator><name pos:start="345:34" pos:end="345:36">pkt</name></name></expr></argument>, <argument pos:start="345:39" pos:end="345:54"><expr pos:start="345:39" pos:end="345:54"><sizeof pos:start="345:39" pos:end="345:54">sizeof<argument_list pos:start="345:45" pos:end="345:54">(<argument pos:start="345:46" pos:end="345:53"><expr pos:start="345:46" pos:end="345:53"><name pos:start="345:46" pos:end="345:53">AVPacket</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	    <comment type="line" pos:start="347:13" pos:end="347:80">//printf("packet %d %d\n", asf_st-&gt;pkt.size, asf-&gt;packet_frag_size);</comment>

	    <expr_stmt pos:start="349:13" pos:end="349:33"><expr pos:start="349:13" pos:end="349:32"><name pos:start="349:13" pos:end="349:28"><name pos:start="349:13" pos:end="349:18">asf_st</name><operator pos:start="349:19" pos:end="349:20">-&gt;</operator><name pos:start="349:21" pos:end="349:23">pkt</name><operator pos:start="349:24" pos:end="349:24">.</operator><name pos:start="349:25" pos:end="349:28">size</name></name> <operator pos:start="349:30" pos:end="349:30">=</operator> <literal type="number" pos:start="349:32" pos:end="349:32">0</literal></expr>;</expr_stmt>

	    <expr_stmt pos:start="351:13" pos:end="351:33"><expr pos:start="351:13" pos:end="351:32"><name pos:start="351:13" pos:end="351:28"><name pos:start="351:13" pos:end="351:18">asf_st</name><operator pos:start="351:19" pos:end="351:20">-&gt;</operator><name pos:start="351:21" pos:end="351:23">pkt</name><operator pos:start="351:24" pos:end="351:24">.</operator><name pos:start="351:25" pos:end="351:28">data</name></name> <operator pos:start="351:30" pos:end="351:30">=</operator> <literal type="number" pos:start="351:32" pos:end="351:32">0</literal></expr>;</expr_stmt>

	    <break pos:start="353:13" pos:end="353:18">break;</break> <comment type="line" pos:start="353:20" pos:end="353:38">// packet completed</comment>

	</block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <return pos:start="359:5" pos:end="359:13">return <expr pos:start="359:12" pos:end="359:12"><literal type="number" pos:start="359:12" pos:end="359:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
