<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21343.c" pos:tabs="8"><function pos:start="1:1" pos:end="231:1"><type pos:start="1:1" pos:end="1:27"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name> <name pos:start="1:16" pos:end="1:27">coroutine_fn</name></type> <name pos:start="1:29" pos:end="1:52">bdrv_co_get_block_status</name><parameter_list pos:start="1:53" pos:end="9:77">(<parameter pos:start="1:54" pos:end="1:73"><decl pos:start="1:54" pos:end="1:73"><type pos:start="1:54" pos:end="1:73"><name pos:start="1:54" pos:end="1:69">BlockDriverState</name> <modifier pos:start="1:71" pos:end="1:71">*</modifier></type><name pos:start="1:72" pos:end="1:73">bs</name></decl></parameter>,

                                                     <parameter pos:start="3:54" pos:end="3:67"><decl pos:start="3:54" pos:end="3:67"><type pos:start="3:54" pos:end="3:67"><name pos:start="3:54" pos:end="3:57">bool</name></type> <name pos:start="3:59" pos:end="3:67">want_zero</name></decl></parameter>,

                                                     <parameter pos:start="5:54" pos:end="5:71"><decl pos:start="5:54" pos:end="5:71"><type pos:start="5:54" pos:end="5:71"><name pos:start="5:54" pos:end="5:60">int64_t</name></type> <name pos:start="5:62" pos:end="5:71">sector_num</name></decl></parameter>,

                                                     <parameter pos:start="7:54" pos:end="7:67"><decl pos:start="7:54" pos:end="7:67"><type pos:start="7:54" pos:end="7:67"><name pos:start="7:54" pos:end="7:56">int</name></type> <name pos:start="7:58" pos:end="7:67">nb_sectors</name></decl></parameter>, <parameter pos:start="7:70" pos:end="7:78"><decl pos:start="7:70" pos:end="7:78"><type pos:start="7:70" pos:end="7:78"><name pos:start="7:70" pos:end="7:72">int</name> <modifier pos:start="7:74" pos:end="7:74">*</modifier></type><name pos:start="7:75" pos:end="7:78">pnum</name></decl></parameter>,

                                                     <parameter pos:start="9:54" pos:end="9:76"><decl pos:start="9:54" pos:end="9:76"><type pos:start="9:54" pos:end="9:76"><name pos:start="9:54" pos:end="9:69">BlockDriverState</name> <modifier pos:start="9:71" pos:end="9:71">*</modifier><modifier pos:start="9:72" pos:end="9:72">*</modifier></type><name pos:start="9:73" pos:end="9:76">file</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="231:1">{<block_content pos:start="13:5" pos:end="229:15">

    <decl_stmt pos:start="13:5" pos:end="13:26"><decl pos:start="13:5" pos:end="13:25"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:25">total_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:11">int64_t</name></type> <name pos:start="15:13" pos:end="15:13">n</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:15"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:15">ret</name></decl>, <decl pos:start="17:18" pos:end="17:21"><type ref="prev" pos:start="17:5" pos:end="17:11"/><name pos:start="17:18" pos:end="17:21">ret2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:40"><decl pos:start="19:5" pos:end="19:39"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">BlockDriverState</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:32">local_file</name> <init pos:start="19:34" pos:end="19:39">= <expr pos:start="19:36" pos:end="19:39"><name pos:start="19:36" pos:end="19:39">NULL</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><call pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:16">(<argument pos:start="23:12" pos:end="23:15"><expr pos:start="23:12" pos:end="23:15"><name pos:start="23:12" pos:end="23:15">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:14"><expr pos:start="25:5" pos:end="25:13"><operator pos:start="25:5" pos:end="25:5">*</operator><name pos:start="25:6" pos:end="25:9">pnum</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <literal type="number" pos:start="25:13" pos:end="25:13">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:40"><expr pos:start="27:5" pos:end="27:39"><name pos:start="27:5" pos:end="27:17">total_sectors</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <call pos:start="27:21" pos:end="27:39"><name pos:start="27:21" pos:end="27:35">bdrv_nb_sectors</name><argument_list pos:start="27:36" pos:end="27:39">(<argument pos:start="27:37" pos:end="27:38"><expr pos:start="27:37" pos:end="27:38"><name pos:start="27:37" pos:end="27:38">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:26">(<expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21">total_sectors</name> <operator pos:start="29:23" pos:end="29:23">&lt;</operator> <literal type="number" pos:start="29:25" pos:end="29:25">0</literal></expr>)</condition> <block pos:start="29:28" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:23">

        <expr_stmt pos:start="31:9" pos:end="31:28"><expr pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:27">total_sectors</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:23">goto <name pos:start="33:14" pos:end="33:22">early_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="45:5"><if pos:start="39:5" pos:end="45:5">if <condition pos:start="39:8" pos:end="39:36">(<expr pos:start="39:9" pos:end="39:35"><name pos:start="39:9" pos:end="39:18">sector_num</name> <operator pos:start="39:20" pos:end="39:21">&gt;=</operator> <name pos:start="39:23" pos:end="39:35">total_sectors</name></expr>)</condition> <block pos:start="39:38" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:23">

        <expr_stmt pos:start="41:9" pos:end="41:29"><expr pos:start="41:9" pos:end="41:28"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <name pos:start="41:15" pos:end="41:28">BDRV_BLOCK_EOF</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:23">goto <name pos:start="43:14" pos:end="43:22">early_out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="47:5" pos:end="53:5"><if pos:start="47:5" pos:end="53:5">if <condition pos:start="47:8" pos:end="47:20">(<expr pos:start="47:9" pos:end="47:19"><operator pos:start="47:9" pos:end="47:9">!</operator><name pos:start="47:10" pos:end="47:19">nb_sectors</name></expr>)</condition> <block pos:start="47:22" pos:end="53:5">{<block_content pos:start="49:9" pos:end="51:23">

        <expr_stmt pos:start="49:9" pos:end="49:16"><expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">=</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>;</expr_stmt>

        <goto pos:start="51:9" pos:end="51:23">goto <name pos:start="51:14" pos:end="51:22">early_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:35"><expr pos:start="57:5" pos:end="57:34"><name pos:start="57:5" pos:end="57:5">n</name> <operator pos:start="57:7" pos:end="57:7">=</operator> <name pos:start="57:9" pos:end="57:21">total_sectors</name> <operator pos:start="57:23" pos:end="57:23">-</operator> <name pos:start="57:25" pos:end="57:34">sector_num</name></expr>;</expr_stmt>

    <if_stmt pos:start="59:5" pos:end="63:5"><if pos:start="59:5" pos:end="63:5">if <condition pos:start="59:8" pos:end="59:23">(<expr pos:start="59:9" pos:end="59:22"><name pos:start="59:9" pos:end="59:9">n</name> <operator pos:start="59:11" pos:end="59:11">&lt;</operator> <name pos:start="59:13" pos:end="59:22">nb_sectors</name></expr>)</condition> <block pos:start="59:25" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:23">

        <expr_stmt pos:start="61:9" pos:end="61:23"><expr pos:start="61:9" pos:end="61:22"><name pos:start="61:9" pos:end="61:18">nb_sectors</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:22">n</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="67:5" pos:end="89:5"><if pos:start="67:5" pos:end="89:5">if <condition pos:start="67:8" pos:end="67:43">(<expr pos:start="67:9" pos:end="67:42"><operator pos:start="67:9" pos:end="67:9">!</operator><name pos:start="67:10" pos:end="67:42"><name pos:start="67:10" pos:end="67:11">bs</name><operator pos:start="67:12" pos:end="67:13">-&gt;</operator><name pos:start="67:14" pos:end="67:16">drv</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:42">bdrv_co_get_block_status</name></name></expr>)</condition> <block pos:start="67:45" pos:end="89:5">{<block_content pos:start="69:9" pos:end="87:23">

        <expr_stmt pos:start="69:9" pos:end="69:27"><expr pos:start="69:9" pos:end="69:26"><operator pos:start="69:9" pos:end="69:9">*</operator><name pos:start="69:10" pos:end="69:13">pnum</name> <operator pos:start="69:15" pos:end="69:15">=</operator> <name pos:start="69:17" pos:end="69:26">nb_sectors</name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:53"><expr pos:start="71:9" pos:end="71:52"><name pos:start="71:9" pos:end="71:11">ret</name> <operator pos:start="71:13" pos:end="71:13">=</operator> <name pos:start="71:15" pos:end="71:29">BDRV_BLOCK_DATA</name> <operator pos:start="71:31" pos:end="71:31">|</operator> <name pos:start="71:33" pos:end="71:52">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:53">(<expr pos:start="73:13" pos:end="73:52"><name pos:start="73:13" pos:end="73:22">sector_num</name> <operator pos:start="73:24" pos:end="73:24">+</operator> <name pos:start="73:26" pos:end="73:35">nb_sectors</name> <operator pos:start="73:37" pos:end="73:38">==</operator> <name pos:start="73:40" pos:end="73:52">total_sectors</name></expr>)</condition> <block pos:start="73:55" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:34">

            <expr_stmt pos:start="75:13" pos:end="75:34"><expr pos:start="75:13" pos:end="75:33"><name pos:start="75:13" pos:end="75:15">ret</name> <operator pos:start="75:17" pos:end="75:18">|=</operator> <name pos:start="75:20" pos:end="75:33">BDRV_BLOCK_EOF</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="79:9" pos:end="85:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:35">(<expr pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:34"><name pos:start="79:13" pos:end="79:14">bs</name><operator pos:start="79:15" pos:end="79:16">-&gt;</operator><name pos:start="79:17" pos:end="79:19">drv</name><operator pos:start="79:20" pos:end="79:21">-&gt;</operator><name pos:start="79:22" pos:end="79:34">protocol_name</name></name></expr>)</condition> <block pos:start="79:37" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:28">

            <expr_stmt pos:start="81:13" pos:end="81:77"><expr pos:start="81:13" pos:end="81:76"><name pos:start="81:13" pos:end="81:15">ret</name> <operator pos:start="81:17" pos:end="81:18">|=</operator> <name pos:start="81:20" pos:end="81:42">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="81:44" pos:end="81:44">|</operator> <operator pos:start="81:46" pos:end="81:46">(</operator><name pos:start="81:47" pos:end="81:56">sector_num</name> <operator pos:start="81:58" pos:end="81:58">*</operator> <name pos:start="81:60" pos:end="81:75">BDRV_SECTOR_SIZE</name><operator pos:start="81:76" pos:end="81:76">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:28"><expr pos:start="83:13" pos:end="83:27"><name pos:start="83:13" pos:end="83:22">local_file</name> <operator pos:start="83:24" pos:end="83:24">=</operator> <name pos:start="83:26" pos:end="83:27">bs</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <goto pos:start="87:9" pos:end="87:23">goto <name pos:start="87:14" pos:end="87:22">early_out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="93:5" pos:end="93:27"><expr pos:start="93:5" pos:end="93:26"><call pos:start="93:5" pos:end="93:26"><name pos:start="93:5" pos:end="93:22">bdrv_inc_in_flight</name><argument_list pos:start="93:23" pos:end="93:26">(<argument pos:start="93:24" pos:end="93:25"><expr pos:start="93:24" pos:end="93:25"><name pos:start="93:24" pos:end="93:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:57"><expr pos:start="95:5" pos:end="97:56"><name pos:start="95:5" pos:end="95:7">ret</name> <operator pos:start="95:9" pos:end="95:9">=</operator> <call pos:start="95:11" pos:end="97:56"><name pos:start="95:11" pos:end="95:43"><name pos:start="95:11" pos:end="95:12">bs</name><operator pos:start="95:13" pos:end="95:14">-&gt;</operator><name pos:start="95:15" pos:end="95:17">drv</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:43">bdrv_co_get_block_status</name></name><argument_list pos:start="95:44" pos:end="97:56">(<argument pos:start="95:45" pos:end="95:46"><expr pos:start="95:45" pos:end="95:46"><name pos:start="95:45" pos:end="95:46">bs</name></expr></argument>, <argument pos:start="95:49" pos:end="95:58"><expr pos:start="95:49" pos:end="95:58"><name pos:start="95:49" pos:end="95:58">sector_num</name></expr></argument>, <argument pos:start="95:61" pos:end="95:70"><expr pos:start="95:61" pos:end="95:70"><name pos:start="95:61" pos:end="95:70">nb_sectors</name></expr></argument>, <argument pos:start="95:73" pos:end="95:76"><expr pos:start="95:73" pos:end="95:76"><name pos:start="95:73" pos:end="95:76">pnum</name></expr></argument>,

                                            <argument pos:start="97:45" pos:end="97:55"><expr pos:start="97:45" pos:end="97:55"><operator pos:start="97:45" pos:end="97:45">&amp;</operator><name pos:start="97:46" pos:end="97:55">local_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="105:5"><if pos:start="99:5" pos:end="105:5">if <condition pos:start="99:8" pos:end="99:16">(<expr pos:start="99:9" pos:end="99:15"><name pos:start="99:9" pos:end="99:11">ret</name> <operator pos:start="99:13" pos:end="99:13">&lt;</operator> <literal type="number" pos:start="99:15" pos:end="99:15">0</literal></expr>)</condition> <block pos:start="99:18" pos:end="105:5">{<block_content pos:start="101:9" pos:end="103:17">

        <expr_stmt pos:start="101:9" pos:end="101:18"><expr pos:start="101:9" pos:end="101:17"><operator pos:start="101:9" pos:end="101:9">*</operator><name pos:start="101:10" pos:end="101:13">pnum</name> <operator pos:start="101:15" pos:end="101:15">=</operator> <literal type="number" pos:start="101:17" pos:end="101:17">0</literal></expr>;</expr_stmt>

        <goto pos:start="103:9" pos:end="103:17">goto <name pos:start="103:14" pos:end="103:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="121:5"><if pos:start="109:5" pos:end="121:5">if <condition pos:start="109:8" pos:end="109:29">(<expr pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:11">ret</name> <operator pos:start="109:13" pos:end="109:13">&amp;</operator> <name pos:start="109:15" pos:end="109:28">BDRV_BLOCK_RAW</name></expr>)</condition> <block pos:start="109:31" pos:end="121:5">{<block_content pos:start="111:9" pos:end="119:17">

        <expr_stmt pos:start="111:9" pos:end="111:60"><expr pos:start="111:9" pos:end="111:59"><call pos:start="111:9" pos:end="111:59"><name pos:start="111:9" pos:end="111:14">assert</name><argument_list pos:start="111:15" pos:end="111:59">(<argument pos:start="111:16" pos:end="111:58"><expr pos:start="111:16" pos:end="111:58"><name pos:start="111:16" pos:end="111:18">ret</name> <operator pos:start="111:20" pos:end="111:20">&amp;</operator> <name pos:start="111:22" pos:end="111:44">BDRV_BLOCK_OFFSET_VALID</name> <operator pos:start="111:46" pos:end="111:47">&amp;&amp;</operator> <name pos:start="111:49" pos:end="111:58">local_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="117:65"><expr pos:start="113:9" pos:end="117:64"><name pos:start="113:9" pos:end="113:11">ret</name> <operator pos:start="113:13" pos:end="113:13">=</operator> <call pos:start="113:15" pos:end="117:64"><name pos:start="113:15" pos:end="113:38">bdrv_co_get_block_status</name><argument_list pos:start="113:39" pos:end="117:64">(<argument pos:start="113:40" pos:end="113:49"><expr pos:start="113:40" pos:end="113:49"><name pos:start="113:40" pos:end="113:49">local_file</name></expr></argument>, <argument pos:start="113:52" pos:end="113:60"><expr pos:start="113:52" pos:end="113:60"><name pos:start="113:52" pos:end="113:60">want_zero</name></expr></argument>,

                                       <argument pos:start="115:40" pos:end="115:62"><expr pos:start="115:40" pos:end="115:62"><name pos:start="115:40" pos:end="115:42">ret</name> <operator pos:start="115:44" pos:end="115:45">&gt;&gt;</operator> <name pos:start="115:47" pos:end="115:62">BDRV_SECTOR_BITS</name></expr></argument>,

                                       <argument pos:start="117:40" pos:end="117:44"><expr pos:start="117:40" pos:end="117:44"><operator pos:start="117:40" pos:end="117:40">*</operator><name pos:start="117:41" pos:end="117:44">pnum</name></expr></argument>, <argument pos:start="117:47" pos:end="117:50"><expr pos:start="117:47" pos:end="117:50"><name pos:start="117:47" pos:end="117:50">pnum</name></expr></argument>, <argument pos:start="117:53" pos:end="117:63"><expr pos:start="117:53" pos:end="117:63"><operator pos:start="117:53" pos:end="117:53">&amp;</operator><name pos:start="117:54" pos:end="117:63">local_file</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="119:9" pos:end="119:17">goto <name pos:start="119:14" pos:end="119:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="125:5" pos:end="151:5"><if pos:start="125:5" pos:end="129:5">if <condition pos:start="125:8" pos:end="125:50">(<expr pos:start="125:9" pos:end="125:49"><name pos:start="125:9" pos:end="125:11">ret</name> <operator pos:start="125:13" pos:end="125:13">&amp;</operator> <operator pos:start="125:15" pos:end="125:15">(</operator><name pos:start="125:16" pos:end="125:30">BDRV_BLOCK_DATA</name> <operator pos:start="125:32" pos:end="125:32">|</operator> <name pos:start="125:34" pos:end="125:48">BDRV_BLOCK_ZERO</name><operator pos:start="125:49" pos:end="125:49">)</operator></expr>)</condition> <block pos:start="125:52" pos:end="129:5">{<block_content pos:start="127:9" pos:end="127:36">

        <expr_stmt pos:start="127:9" pos:end="127:36"><expr pos:start="127:9" pos:end="127:35"><name pos:start="127:9" pos:end="127:11">ret</name> <operator pos:start="127:13" pos:end="127:14">|=</operator> <name pos:start="127:16" pos:end="127:35">BDRV_BLOCK_ALLOCATED</name></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="129:7" pos:end="151:5">else if <condition pos:start="129:15" pos:end="129:25">(<expr pos:start="129:16" pos:end="129:24"><name pos:start="129:16" pos:end="129:24">want_zero</name></expr>)</condition> <block pos:start="129:27" pos:end="151:5">{<block_content pos:start="131:9" pos:end="149:9">

        <if_stmt pos:start="131:9" pos:end="149:9"><if pos:start="131:9" pos:end="135:9">if <condition pos:start="131:12" pos:end="131:49">(<expr pos:start="131:13" pos:end="131:48"><call pos:start="131:13" pos:end="131:48"><name pos:start="131:13" pos:end="131:44">bdrv_unallocated_blocks_are_zero</name><argument_list pos:start="131:45" pos:end="131:48">(<argument pos:start="131:46" pos:end="131:47"><expr pos:start="131:46" pos:end="131:47"><name pos:start="131:46" pos:end="131:47">bs</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="131:51" pos:end="135:9">{<block_content pos:start="133:13" pos:end="133:35">

            <expr_stmt pos:start="133:13" pos:end="133:35"><expr pos:start="133:13" pos:end="133:34"><name pos:start="133:13" pos:end="133:15">ret</name> <operator pos:start="133:17" pos:end="133:18">|=</operator> <name pos:start="133:20" pos:end="133:34">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="135:11" pos:end="149:9">else if <condition pos:start="135:19" pos:end="135:31">(<expr pos:start="135:20" pos:end="135:30"><name pos:start="135:20" pos:end="135:30"><name pos:start="135:20" pos:end="135:21">bs</name><operator pos:start="135:22" pos:end="135:23">-&gt;</operator><name pos:start="135:24" pos:end="135:30">backing</name></name></expr>)</condition> <block pos:start="135:33" pos:end="149:9">{<block_content pos:start="137:13" pos:end="147:13">

            <decl_stmt pos:start="137:13" pos:end="137:52"><decl pos:start="137:13" pos:end="137:51"><type pos:start="137:13" pos:end="137:30"><name pos:start="137:13" pos:end="137:28">BlockDriverState</name> <modifier pos:start="137:30" pos:end="137:30">*</modifier></type><name pos:start="137:31" pos:end="137:33">bs2</name> <init pos:start="137:35" pos:end="137:51">= <expr pos:start="137:37" pos:end="137:51"><name pos:start="137:37" pos:end="137:51"><name pos:start="137:37" pos:end="137:38">bs</name><operator pos:start="137:39" pos:end="137:40">-&gt;</operator><name pos:start="137:41" pos:end="137:47">backing</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:51">bs</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="139:13" pos:end="139:55"><decl pos:start="139:13" pos:end="139:54"><type pos:start="139:13" pos:end="139:19"><name pos:start="139:13" pos:end="139:19">int64_t</name></type> <name pos:start="139:21" pos:end="139:31">nb_sectors2</name> <init pos:start="139:33" pos:end="139:54">= <expr pos:start="139:35" pos:end="139:54"><call pos:start="139:35" pos:end="139:54"><name pos:start="139:35" pos:end="139:49">bdrv_nb_sectors</name><argument_list pos:start="139:50" pos:end="139:54">(<argument pos:start="139:51" pos:end="139:53"><expr pos:start="139:51" pos:end="139:53"><name pos:start="139:51" pos:end="139:53">bs2</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="143:13" pos:end="147:13"><if pos:start="143:13" pos:end="147:13">if <condition pos:start="143:16" pos:end="143:62">(<expr pos:start="143:17" pos:end="143:61"><name pos:start="143:17" pos:end="143:27">nb_sectors2</name> <operator pos:start="143:29" pos:end="143:30">&gt;=</operator> <literal type="number" pos:start="143:32" pos:end="143:32">0</literal> <operator pos:start="143:34" pos:end="143:35">&amp;&amp;</operator> <name pos:start="143:37" pos:end="143:46">sector_num</name> <operator pos:start="143:48" pos:end="143:49">&gt;=</operator> <name pos:start="143:51" pos:end="143:61">nb_sectors2</name></expr>)</condition> <block pos:start="143:64" pos:end="147:13">{<block_content pos:start="145:17" pos:end="145:39">

                <expr_stmt pos:start="145:17" pos:end="145:39"><expr pos:start="145:17" pos:end="145:38"><name pos:start="145:17" pos:end="145:19">ret</name> <operator pos:start="145:21" pos:end="145:22">|=</operator> <name pos:start="145:24" pos:end="145:38">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="155:5" pos:end="207:5"><if pos:start="155:5" pos:end="207:5">if <condition pos:start="155:8" pos:end="159:40">(<expr pos:start="155:9" pos:end="159:39"><name pos:start="155:9" pos:end="155:17">want_zero</name> <operator pos:start="155:19" pos:end="155:20">&amp;&amp;</operator> <name pos:start="155:22" pos:end="155:31">local_file</name> <operator pos:start="155:33" pos:end="155:34">&amp;&amp;</operator> <name pos:start="155:36" pos:end="155:45">local_file</name> <operator pos:start="155:47" pos:end="155:48">!=</operator> <name pos:start="155:50" pos:end="155:51">bs</name> <operator pos:start="155:53" pos:end="155:54">&amp;&amp;</operator>

        <operator pos:start="157:9" pos:end="157:9">(</operator><name pos:start="157:10" pos:end="157:12">ret</name> <operator pos:start="157:14" pos:end="157:14">&amp;</operator> <name pos:start="157:16" pos:end="157:30">BDRV_BLOCK_DATA</name><operator pos:start="157:31" pos:end="157:31">)</operator> <operator pos:start="157:33" pos:end="157:34">&amp;&amp;</operator> <operator pos:start="157:36" pos:end="157:36">!</operator><operator pos:start="157:37" pos:end="157:37">(</operator><name pos:start="157:38" pos:end="157:40">ret</name> <operator pos:start="157:42" pos:end="157:42">&amp;</operator> <name pos:start="157:44" pos:end="157:58">BDRV_BLOCK_ZERO</name><operator pos:start="157:59" pos:end="157:59">)</operator> <operator pos:start="157:61" pos:end="157:62">&amp;&amp;</operator>

        <operator pos:start="159:9" pos:end="159:9">(</operator><name pos:start="159:10" pos:end="159:12">ret</name> <operator pos:start="159:14" pos:end="159:14">&amp;</operator> <name pos:start="159:16" pos:end="159:38">BDRV_BLOCK_OFFSET_VALID</name><operator pos:start="159:39" pos:end="159:39">)</operator></expr>)</condition> <block pos:start="159:42" pos:end="207:5">{<block_content pos:start="161:9" pos:end="205:9">

        <decl_stmt pos:start="161:9" pos:end="161:22"><decl pos:start="161:9" pos:end="161:21"><type pos:start="161:9" pos:end="161:11"><name pos:start="161:9" pos:end="161:11">int</name></type> <name pos:start="161:13" pos:end="161:21">file_pnum</name></decl>;</decl_stmt>



        <expr_stmt pos:start="165:9" pos:end="169:65"><expr pos:start="165:9" pos:end="169:64"><name pos:start="165:9" pos:end="165:12">ret2</name> <operator pos:start="165:14" pos:end="165:14">=</operator> <call pos:start="165:16" pos:end="169:64"><name pos:start="165:16" pos:end="165:39">bdrv_co_get_block_status</name><argument_list pos:start="165:40" pos:end="169:64">(<argument pos:start="165:41" pos:end="165:50"><expr pos:start="165:41" pos:end="165:50"><name pos:start="165:41" pos:end="165:50">local_file</name></expr></argument>, <argument pos:start="165:53" pos:end="165:61"><expr pos:start="165:53" pos:end="165:61"><name pos:start="165:53" pos:end="165:61">want_zero</name></expr></argument>,

                                        <argument pos:start="167:41" pos:end="167:63"><expr pos:start="167:41" pos:end="167:63"><name pos:start="167:41" pos:end="167:43">ret</name> <operator pos:start="167:45" pos:end="167:46">&gt;&gt;</operator> <name pos:start="167:48" pos:end="167:63">BDRV_SECTOR_BITS</name></expr></argument>,

                                        <argument pos:start="169:41" pos:end="169:45"><expr pos:start="169:41" pos:end="169:45"><operator pos:start="169:41" pos:end="169:41">*</operator><name pos:start="169:42" pos:end="169:45">pnum</name></expr></argument>, <argument pos:start="169:48" pos:end="169:57"><expr pos:start="169:48" pos:end="169:57"><operator pos:start="169:48" pos:end="169:48">&amp;</operator><name pos:start="169:49" pos:end="169:57">file_pnum</name></expr></argument>, <argument pos:start="169:60" pos:end="169:63"><expr pos:start="169:60" pos:end="169:63"><name pos:start="169:60" pos:end="169:63">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="205:9"><if pos:start="171:9" pos:end="205:9">if <condition pos:start="171:12" pos:end="171:22">(<expr pos:start="171:13" pos:end="171:21"><name pos:start="171:13" pos:end="171:16">ret2</name> <operator pos:start="171:18" pos:end="171:19">&gt;=</operator> <literal type="number" pos:start="171:21" pos:end="171:21">0</literal></expr>)</condition> <block pos:start="171:24" pos:end="205:9">{<block_content pos:start="179:13" pos:end="203:13">

            <comment type="block" pos:start="173:13" pos:end="177:15">/* Ignore errors.  This is just providing extra information, it

             * is useful but not necessary.

             */</comment>

            <if_stmt pos:start="179:13" pos:end="203:13"><if pos:start="179:13" pos:end="195:13">if <condition pos:start="179:16" pos:end="181:55">(<expr pos:start="179:17" pos:end="181:54"><name pos:start="179:17" pos:end="179:20">ret2</name> <operator pos:start="179:22" pos:end="179:22">&amp;</operator> <name pos:start="179:24" pos:end="179:37">BDRV_BLOCK_EOF</name> <operator pos:start="179:39" pos:end="179:40">&amp;&amp;</operator>

                <operator pos:start="181:17" pos:end="181:17">(</operator><operator pos:start="181:18" pos:end="181:18">!</operator><name pos:start="181:19" pos:end="181:27">file_pnum</name> <operator pos:start="181:29" pos:end="181:30">||</operator> <name pos:start="181:32" pos:end="181:35">ret2</name> <operator pos:start="181:37" pos:end="181:37">&amp;</operator> <name pos:start="181:39" pos:end="181:53">BDRV_BLOCK_ZERO</name><operator pos:start="181:54" pos:end="181:54">)</operator></expr>)</condition> <block pos:start="181:57" pos:end="195:13">{<block_content pos:start="193:17" pos:end="193:39">

                <comment type="block" pos:start="183:17" pos:end="191:19">/*

                 * It is valid for the format block driver to read

                 * beyond the end of the underlying file's current

                 * size; such areas read as zero.

                 */</comment>

                <expr_stmt pos:start="193:17" pos:end="193:39"><expr pos:start="193:17" pos:end="193:38"><name pos:start="193:17" pos:end="193:19">ret</name> <operator pos:start="193:21" pos:end="193:22">|=</operator> <name pos:start="193:24" pos:end="193:38">BDRV_BLOCK_ZERO</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="195:15" pos:end="203:13">else <block pos:start="195:20" pos:end="203:13">{<block_content pos:start="199:17" pos:end="201:48">

                <comment type="block" pos:start="197:17" pos:end="197:80">/* Limit request to the range reported by the protocol driver */</comment>

                <expr_stmt pos:start="199:17" pos:end="199:34"><expr pos:start="199:17" pos:end="199:33"><operator pos:start="199:17" pos:end="199:17">*</operator><name pos:start="199:18" pos:end="199:21">pnum</name> <operator pos:start="199:23" pos:end="199:23">=</operator> <name pos:start="199:25" pos:end="199:33">file_pnum</name></expr>;</expr_stmt>

                <expr_stmt pos:start="201:17" pos:end="201:48"><expr pos:start="201:17" pos:end="201:47"><name pos:start="201:17" pos:end="201:19">ret</name> <operator pos:start="201:21" pos:end="201:22">|=</operator> <operator pos:start="201:24" pos:end="201:24">(</operator><name pos:start="201:25" pos:end="201:28">ret2</name> <operator pos:start="201:30" pos:end="201:30">&amp;</operator> <name pos:start="201:32" pos:end="201:46">BDRV_BLOCK_ZERO</name><operator pos:start="201:47" pos:end="201:47">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="211:1" pos:end="211:4"><name pos:start="211:1" pos:end="211:3">out</name>:</label>

    <expr_stmt pos:start="213:5" pos:end="213:27"><expr pos:start="213:5" pos:end="213:26"><call pos:start="213:5" pos:end="213:26"><name pos:start="213:5" pos:end="213:22">bdrv_dec_in_flight</name><argument_list pos:start="213:23" pos:end="213:26">(<argument pos:start="213:24" pos:end="213:25"><expr pos:start="213:24" pos:end="213:25"><name pos:start="213:24" pos:end="213:25">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="215:5" pos:end="219:5"><if pos:start="215:5" pos:end="219:5">if <condition pos:start="215:8" pos:end="215:56">(<expr pos:start="215:9" pos:end="215:55"><name pos:start="215:9" pos:end="215:11">ret</name> <operator pos:start="215:13" pos:end="215:14">&gt;=</operator> <literal type="number" pos:start="215:16" pos:end="215:16">0</literal> <operator pos:start="215:18" pos:end="215:19">&amp;&amp;</operator> <name pos:start="215:21" pos:end="215:30">sector_num</name> <operator pos:start="215:32" pos:end="215:32">+</operator> <operator pos:start="215:34" pos:end="215:34">*</operator><name pos:start="215:35" pos:end="215:38">pnum</name> <operator pos:start="215:40" pos:end="215:41">==</operator> <name pos:start="215:43" pos:end="215:55">total_sectors</name></expr>)</condition> <block pos:start="215:58" pos:end="219:5">{<block_content pos:start="217:9" pos:end="217:30">

        <expr_stmt pos:start="217:9" pos:end="217:30"><expr pos:start="217:9" pos:end="217:29"><name pos:start="217:9" pos:end="217:11">ret</name> <operator pos:start="217:13" pos:end="217:14">|=</operator> <name pos:start="217:16" pos:end="217:29">BDRV_BLOCK_EOF</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

<label pos:start="221:1" pos:end="221:10"><name pos:start="221:1" pos:end="221:9">early_out</name>:</label>

    <if_stmt pos:start="223:5" pos:end="227:5"><if pos:start="223:5" pos:end="227:5">if <condition pos:start="223:8" pos:end="223:13">(<expr pos:start="223:9" pos:end="223:12"><name pos:start="223:9" pos:end="223:12">file</name></expr>)</condition> <block pos:start="223:15" pos:end="227:5">{<block_content pos:start="225:9" pos:end="225:27">

        <expr_stmt pos:start="225:9" pos:end="225:27"><expr pos:start="225:9" pos:end="225:26"><operator pos:start="225:9" pos:end="225:9">*</operator><name pos:start="225:10" pos:end="225:13">file</name> <operator pos:start="225:15" pos:end="225:15">=</operator> <name pos:start="225:17" pos:end="225:26">local_file</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="229:5" pos:end="229:15">return <expr pos:start="229:12" pos:end="229:14"><name pos:start="229:12" pos:end="229:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
