<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23398.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:7"><name pos:start="1:1" pos:end="1:7">float64</name></type> <name pos:start="1:9" pos:end="1:25">helper_sub_cmpf64</name><parameter_list pos:start="1:26" pos:end="1:72">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:38">CPUM68KState</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">env</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:52">float64</name></type> <name pos:start="1:54" pos:end="1:57">src0</name></decl></parameter>, <parameter pos:start="1:60" pos:end="1:71"><decl pos:start="1:60" pos:end="1:71"><type pos:start="1:60" pos:end="1:71"><name pos:start="1:60" pos:end="1:66">float64</name></type> <name pos:start="1:68" pos:end="1:71">src1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="9:5" pos:end="31:15">

    <comment type="block" pos:start="5:5" pos:end="5:53">/* ??? This may incorrectly raise exceptions.  */</comment>

    <comment type="block" pos:start="7:5" pos:end="7:46">/* ??? Should flush denormals to zero.  */</comment>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">float64</name></type> <name pos:start="9:13" pos:end="9:15">res</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:51"><expr pos:start="11:5" pos:end="11:50"><name pos:start="11:5" pos:end="11:7">res</name> <operator pos:start="11:9" pos:end="11:9">=</operator> <call pos:start="11:11" pos:end="11:50"><name pos:start="11:11" pos:end="11:21">float64_sub</name><argument_list pos:start="11:22" pos:end="11:50">(<argument pos:start="11:23" pos:end="11:26"><expr pos:start="11:23" pos:end="11:26"><name pos:start="11:23" pos:end="11:26">src0</name></expr></argument>, <argument pos:start="11:29" pos:end="11:32"><expr pos:start="11:29" pos:end="11:32"><name pos:start="11:29" pos:end="11:32">src1</name></expr></argument>, <argument pos:start="11:35" pos:end="11:49"><expr pos:start="11:35" pos:end="11:49"><operator pos:start="11:35" pos:end="11:35">&amp;</operator><name pos:start="11:36" pos:end="11:49"><name pos:start="11:36" pos:end="11:38">env</name><operator pos:start="11:39" pos:end="11:40">-&gt;</operator><name pos:start="11:41" pos:end="11:49">fp_status</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="29:5"><if pos:start="13:5" pos:end="29:5">if <condition pos:start="13:8" pos:end="13:28">(<expr pos:start="13:9" pos:end="13:27"><call pos:start="13:9" pos:end="13:27"><name pos:start="13:9" pos:end="13:22">float64_is_nan</name><argument_list pos:start="13:23" pos:end="13:27">(<argument pos:start="13:24" pos:end="13:26"><expr pos:start="13:24" pos:end="13:26"><name pos:start="13:24" pos:end="13:26">res</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="13:30" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:9">

        <comment type="block" pos:start="15:9" pos:end="15:73">/* +/-inf compares equal against itself, but sub returns nan.  */</comment>

        <if_stmt pos:start="17:9" pos:end="27:9"><if pos:start="17:9" pos:end="27:9">if <condition pos:start="17:12" pos:end="19:37">(<expr pos:start="17:13" pos:end="19:36"><operator pos:start="17:13" pos:end="17:13">!</operator><call pos:start="17:14" pos:end="17:33"><name pos:start="17:14" pos:end="17:27">float64_is_nan</name><argument_list pos:start="17:28" pos:end="17:33">(<argument pos:start="17:29" pos:end="17:32"><expr pos:start="17:29" pos:end="17:32"><name pos:start="17:29" pos:end="17:32">src0</name></expr></argument>)</argument_list></call>

            <operator pos:start="19:13" pos:end="19:14">&amp;&amp;</operator> <operator pos:start="19:16" pos:end="19:16">!</operator><call pos:start="19:17" pos:end="19:36"><name pos:start="19:17" pos:end="19:30">float64_is_nan</name><argument_list pos:start="19:31" pos:end="19:36">(<argument pos:start="19:32" pos:end="19:35"><expr pos:start="19:32" pos:end="19:35"><name pos:start="19:32" pos:end="19:35">src1</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:39" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:39">

            <expr_stmt pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:15">res</name> <operator pos:start="21:17" pos:end="21:17">=</operator> <literal type="number" pos:start="21:19" pos:end="21:19">0</literal></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="25:39"><if pos:start="23:13" pos:end="25:39">if <condition pos:start="23:16" pos:end="23:61">(<expr pos:start="23:17" pos:end="23:60"><call pos:start="23:17" pos:end="23:60"><name pos:start="23:17" pos:end="23:32">float64_lt_quiet</name><argument_list pos:start="23:33" pos:end="23:60">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">src0</name></expr></argument>, <argument pos:start="23:40" pos:end="23:42"><expr pos:start="23:40" pos:end="23:42"><name pos:start="23:40" pos:end="23:42">res</name></expr></argument>, <argument pos:start="23:45" pos:end="23:59"><expr pos:start="23:45" pos:end="23:59"><operator pos:start="23:45" pos:end="23:45">&amp;</operator><name pos:start="23:46" pos:end="23:59"><name pos:start="23:46" pos:end="23:48">env</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:59">fp_status</name></name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="25:17" pos:end="25:39"><block_content pos:start="25:17" pos:end="25:39">

                <expr_stmt pos:start="25:17" pos:end="25:39"><expr pos:start="25:17" pos:end="25:38"><name pos:start="25:17" pos:end="25:19">res</name> <operator pos:start="25:21" pos:end="25:21">=</operator> <call pos:start="25:23" pos:end="25:38"><name pos:start="25:23" pos:end="25:33">float64_chs</name><argument_list pos:start="25:34" pos:end="25:38">(<argument pos:start="25:35" pos:end="25:37"><expr pos:start="25:35" pos:end="25:37"><name pos:start="25:35" pos:end="25:37">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="31:5" pos:end="31:15">return <expr pos:start="31:12" pos:end="31:14"><name pos:start="31:12" pos:end="31:14">res</name></expr>;</return>

</block_content>}</block></function>
</unit>
