<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20893.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">walk_memory_regions</name><parameter_list pos:start="1:24" pos:end="1:62">(<parameter pos:start="1:25" pos:end="1:34"><decl pos:start="1:25" pos:end="1:34"><type pos:start="1:25" pos:end="1:34"><name pos:start="1:25" pos:end="1:28">void</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier></type><name pos:start="1:31" pos:end="1:34">priv</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:61"><decl pos:start="1:37" pos:end="1:61"><type pos:start="1:37" pos:end="1:61"><name pos:start="1:37" pos:end="1:58">walk_memory_regions_fn</name></type> <name pos:start="1:60" pos:end="1:61">fn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:48">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:35"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:35">walk_memory_regions_data</name></name></type> <name pos:start="5:37" pos:end="5:40">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:16"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:13">uintptr_t</name></type> <name pos:start="7:15" pos:end="7:15">i</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:17"><expr pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:8">data</name><operator pos:start="11:9" pos:end="11:9">.</operator><name pos:start="11:10" pos:end="11:11">fn</name></name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:16">fn</name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:21"><expr pos:start="13:5" pos:end="13:20"><name pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:8">data</name><operator pos:start="13:9" pos:end="13:9">.</operator><name pos:start="13:10" pos:end="13:13">priv</name></name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:20">priv</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:8">data</name><operator pos:start="15:9" pos:end="15:9">.</operator><name pos:start="15:10" pos:end="15:14">start</name></name> <operator pos:start="15:16" pos:end="15:16">=</operator> <operator pos:start="15:18" pos:end="15:18">-</operator><literal type="number" pos:start="15:19" pos:end="15:21">1ul</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:18"><expr pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:8">data</name><operator pos:start="17:9" pos:end="17:9">.</operator><name pos:start="17:10" pos:end="17:13">prot</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <literal type="number" pos:start="17:17" pos:end="17:17">0</literal></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="35:5">for <control pos:start="21:9" pos:end="21:35">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:30"><expr pos:start="21:17" pos:end="21:29"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:29">V_L1_SIZE</name></expr>;</condition> <incr pos:start="21:32" pos:end="21:34"><expr pos:start="21:32" pos:end="21:34"><name pos:start="21:32" pos:end="21:32">i</name><operator pos:start="21:33" pos:end="21:34">++</operator></expr></incr>)</control> <block pos:start="21:37" pos:end="35:5">{<block_content pos:start="23:9" pos:end="33:9">

        <decl_stmt pos:start="23:9" pos:end="25:77"><decl pos:start="23:9" pos:end="25:76"><type pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:11">int</name></type> <name pos:start="23:13" pos:end="23:14">rc</name> <init pos:start="23:16" pos:end="25:76">= <expr pos:start="23:18" pos:end="25:76"><call pos:start="23:18" pos:end="25:76"><name pos:start="23:18" pos:end="23:38">walk_memory_regions_1</name><argument_list pos:start="23:39" pos:end="25:76">(<argument pos:start="23:40" pos:end="23:44"><expr pos:start="23:40" pos:end="23:44"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:44">data</name></expr></argument>, <argument pos:start="23:47" pos:end="23:72"><expr pos:start="23:47" pos:end="23:72"><operator pos:start="23:47" pos:end="23:47">(</operator><name pos:start="23:48" pos:end="23:56">abi_ulong</name><operator pos:start="23:57" pos:end="23:57">)</operator><name pos:start="23:58" pos:end="23:58">i</name> <operator pos:start="23:60" pos:end="23:61">&lt;&lt;</operator> <name pos:start="23:63" pos:end="23:72">V_L1_SHIFT</name></expr></argument>,

                                       <argument pos:start="25:40" pos:end="25:63"><expr pos:start="25:40" pos:end="25:63"><name pos:start="25:40" pos:end="25:49">V_L1_SHIFT</name> <operator pos:start="25:51" pos:end="25:51">/</operator> <name pos:start="25:53" pos:end="25:59">L2_BITS</name> <operator pos:start="25:61" pos:end="25:61">-</operator> <literal type="number" pos:start="25:63" pos:end="25:63">1</literal></expr></argument>, <argument pos:start="25:66" pos:end="25:75"><expr pos:start="25:66" pos:end="25:75"><name pos:start="25:66" pos:end="25:71">l1_map</name> <operator pos:start="25:73" pos:end="25:73">+</operator> <name pos:start="25:75" pos:end="25:75">i</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="29:9" pos:end="33:9"><if pos:start="29:9" pos:end="33:9">if <condition pos:start="29:12" pos:end="29:20">(<expr pos:start="29:13" pos:end="29:19"><name pos:start="29:13" pos:end="29:14">rc</name> <operator pos:start="29:16" pos:end="29:17">!=</operator> <literal type="number" pos:start="29:19" pos:end="29:19">0</literal></expr>)</condition> <block pos:start="29:22" pos:end="33:9">{<block_content pos:start="31:13" pos:end="31:22">

            <return pos:start="31:13" pos:end="31:22">return <expr pos:start="31:20" pos:end="31:21"><name pos:start="31:20" pos:end="31:21">rc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="39:5" pos:end="39:48">return <expr pos:start="39:12" pos:end="39:47"><call pos:start="39:12" pos:end="39:47"><name pos:start="39:12" pos:end="39:34">walk_memory_regions_end</name><argument_list pos:start="39:35" pos:end="39:47">(<argument pos:start="39:36" pos:end="39:40"><expr pos:start="39:36" pos:end="39:40"><operator pos:start="39:36" pos:end="39:36">&amp;</operator><name pos:start="39:37" pos:end="39:40">data</name></expr></argument>, <argument pos:start="39:43" pos:end="39:43"><expr pos:start="39:43" pos:end="39:43"><literal type="number" pos:start="39:43" pos:end="39:43">0</literal></expr></argument>, <argument pos:start="39:46" pos:end="39:46"><expr pos:start="39:46" pos:end="39:46"><literal type="number" pos:start="39:46" pos:end="39:46">0</literal></expr></argument>)</argument_list></call></expr>;</return>

</block_content>}</block></function>
</unit>
