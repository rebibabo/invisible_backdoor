<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8937.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:36">bios_linker_loader_add_checksum</name><parameter_list pos:start="1:37" pos:end="7:55">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:43">GArray</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:51">linker</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:69"><decl pos:start="1:54" pos:end="1:69"><type pos:start="1:54" pos:end="1:69"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:63">char</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:69">file</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:43">GArray</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:50">table</name></decl></parameter>,

                                     <parameter pos:start="5:38" pos:end="5:48"><decl pos:start="5:38" pos:end="5:48"><type pos:start="5:38" pos:end="5:48"><name pos:start="5:38" pos:end="5:41">void</name> <modifier pos:start="5:43" pos:end="5:43">*</modifier></type><name pos:start="5:44" pos:end="5:48">start</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:63"><decl pos:start="5:51" pos:end="5:63"><type pos:start="5:51" pos:end="5:63"><name pos:start="5:51" pos:end="5:58">unsigned</name></type> <name pos:start="5:60" pos:end="5:63">size</name></decl></parameter>,

                                     <parameter pos:start="7:38" pos:end="7:54"><decl pos:start="7:38" pos:end="7:54"><type pos:start="7:38" pos:end="7:54"><name pos:start="7:38" pos:end="7:44">uint8_t</name> <modifier pos:start="7:46" pos:end="7:46">*</modifier></type><name pos:start="7:47" pos:end="7:54">checksum</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="47:1">{<block_content pos:start="11:5" pos:end="45:54">

    <decl_stmt pos:start="11:5" pos:end="11:32"><decl pos:start="11:5" pos:end="11:31"><type pos:start="11:5" pos:end="11:25"><name pos:start="11:5" pos:end="11:25">BiosLinkerLoaderEntry</name></type> <name pos:start="11:27" pos:end="11:31">entry</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:64"><decl pos:start="13:5" pos:end="13:63"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:13">ptrdiff_t</name></type> <name pos:start="13:15" pos:end="13:29">checksum_offset</name> <init pos:start="13:31" pos:end="13:63">= <expr pos:start="13:33" pos:end="13:63"><operator pos:start="13:33" pos:end="13:33">(</operator><name pos:start="13:34" pos:end="13:38">gchar</name> <operator pos:start="13:40" pos:end="13:40">*</operator><operator pos:start="13:41" pos:end="13:41">)</operator><name pos:start="13:42" pos:end="13:49">checksum</name> <operator pos:start="13:51" pos:end="13:51">-</operator> <name pos:start="13:53" pos:end="13:63"><name pos:start="13:53" pos:end="13:57">table</name><operator pos:start="13:58" pos:end="13:59">-&gt;</operator><name pos:start="13:60" pos:end="13:63">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:58"><decl pos:start="15:5" pos:end="15:57"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">ptrdiff_t</name></type> <name pos:start="15:15" pos:end="15:26">start_offset</name> <init pos:start="15:28" pos:end="15:57">= <expr pos:start="15:30" pos:end="15:57"><operator pos:start="15:30" pos:end="15:30">(</operator><name pos:start="15:31" pos:end="15:35">gchar</name> <operator pos:start="15:37" pos:end="15:37">*</operator><operator pos:start="15:38" pos:end="15:38">)</operator><name pos:start="15:39" pos:end="15:43">start</name> <operator pos:start="15:45" pos:end="15:45">-</operator> <name pos:start="15:47" pos:end="15:57"><name pos:start="15:47" pos:end="15:51">table</name><operator pos:start="15:52" pos:end="15:53">-&gt;</operator><name pos:start="15:54" pos:end="15:57">data</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:33"><expr pos:start="19:5" pos:end="19:32"><call pos:start="19:5" pos:end="19:32"><name pos:start="19:5" pos:end="19:10">assert</name><argument_list pos:start="19:11" pos:end="19:32">(<argument pos:start="19:12" pos:end="19:31"><expr pos:start="19:12" pos:end="19:31"><name pos:start="19:12" pos:end="19:26">checksum_offset</name> <operator pos:start="19:28" pos:end="19:29">&gt;=</operator> <literal type="number" pos:start="19:31" pos:end="19:31">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><call pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:10">assert</name><argument_list pos:start="21:11" pos:end="21:29">(<argument pos:start="21:12" pos:end="21:28"><expr pos:start="21:12" pos:end="21:28"><name pos:start="21:12" pos:end="21:23">start_offset</name> <operator pos:start="21:25" pos:end="21:26">&gt;=</operator> <literal type="number" pos:start="21:28" pos:end="21:28">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><call pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:10">assert</name><argument_list pos:start="23:11" pos:end="23:45">(<argument pos:start="23:12" pos:end="23:44"><expr pos:start="23:12" pos:end="23:44"><name pos:start="23:12" pos:end="23:26">checksum_offset</name> <operator pos:start="23:28" pos:end="23:28">+</operator> <literal type="number" pos:start="23:30" pos:end="23:30">1</literal> <operator pos:start="23:32" pos:end="23:33">&lt;=</operator> <name pos:start="23:35" pos:end="23:44"><name pos:start="23:35" pos:end="23:39">table</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:44">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:10">assert</name><argument_list pos:start="25:11" pos:end="25:45">(<argument pos:start="25:12" pos:end="25:44"><expr pos:start="25:12" pos:end="25:44"><name pos:start="25:12" pos:end="25:23">start_offset</name> <operator pos:start="25:25" pos:end="25:25">+</operator> <name pos:start="25:27" pos:end="25:30">size</name> <operator pos:start="25:32" pos:end="25:33">&lt;=</operator> <name pos:start="25:35" pos:end="25:44"><name pos:start="25:35" pos:end="25:39">table</name><operator pos:start="25:40" pos:end="25:41">-&gt;</operator><name pos:start="25:42" pos:end="25:44">len</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:29"><expr pos:start="27:5" pos:end="27:28"><call pos:start="27:5" pos:end="27:28"><name pos:start="27:5" pos:end="27:10">assert</name><argument_list pos:start="27:11" pos:end="27:28">(<argument pos:start="27:12" pos:end="27:27"><expr pos:start="27:12" pos:end="27:27"><operator pos:start="27:12" pos:end="27:12">*</operator><name pos:start="27:13" pos:end="27:20">checksum</name> <operator pos:start="27:22" pos:end="27:23">==</operator> <literal type="number" pos:start="27:25" pos:end="27:27">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:36"><expr pos:start="31:5" pos:end="31:35"><call pos:start="31:5" pos:end="31:35"><name pos:start="31:5" pos:end="31:10">memset</name><argument_list pos:start="31:11" pos:end="31:35">(<argument pos:start="31:12" pos:end="31:17"><expr pos:start="31:12" pos:end="31:17"><operator pos:start="31:12" pos:end="31:12">&amp;</operator><name pos:start="31:13" pos:end="31:17">entry</name></expr></argument>, <argument pos:start="31:20" pos:end="31:20"><expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr></argument>, <argument pos:start="31:23" pos:end="31:34"><expr pos:start="31:23" pos:end="31:34"><sizeof pos:start="31:23" pos:end="31:34">sizeof <name pos:start="31:30" pos:end="31:34">entry</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:65"><expr pos:start="33:5" pos:end="33:64"><call pos:start="33:5" pos:end="33:64"><name pos:start="33:5" pos:end="33:11">strncpy</name><argument_list pos:start="33:12" pos:end="33:64">(<argument pos:start="33:13" pos:end="33:28"><expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:17">entry</name><operator pos:start="33:18" pos:end="33:18">.</operator><name pos:start="33:19" pos:end="33:23">cksum</name><operator pos:start="33:24" pos:end="33:24">.</operator><name pos:start="33:25" pos:end="33:28">file</name></name></expr></argument>, <argument pos:start="33:31" pos:end="33:34"><expr pos:start="33:31" pos:end="33:34"><name pos:start="33:31" pos:end="33:34">file</name></expr></argument>, <argument pos:start="33:37" pos:end="33:63"><expr pos:start="33:37" pos:end="33:63"><sizeof pos:start="33:37" pos:end="33:59">sizeof <name pos:start="33:44" pos:end="33:59"><name pos:start="33:44" pos:end="33:48">entry</name><operator pos:start="33:49" pos:end="33:49">.</operator><name pos:start="33:50" pos:end="33:54">cksum</name><operator pos:start="33:55" pos:end="33:55">.</operator><name pos:start="33:56" pos:end="33:59">file</name></name></sizeof> <operator pos:start="33:61" pos:end="33:61">-</operator> <literal type="number" pos:start="33:63" pos:end="33:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:73"><expr pos:start="35:5" pos:end="35:72"><name pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:9">entry</name><operator pos:start="35:10" pos:end="35:10">.</operator><name pos:start="35:11" pos:end="35:17">command</name></name> <operator pos:start="35:19" pos:end="35:19">=</operator> <call pos:start="35:21" pos:end="35:72"><name pos:start="35:21" pos:end="35:31">cpu_to_le32</name><argument_list pos:start="35:32" pos:end="35:72">(<argument pos:start="35:33" pos:end="35:71"><expr pos:start="35:33" pos:end="35:71"><name pos:start="35:33" pos:end="35:71">BIOS_LINKER_LOADER_COMMAND_ADD_CHECKSUM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:54"><expr pos:start="37:5" pos:end="37:53"><name pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:9">entry</name><operator pos:start="37:10" pos:end="37:10">.</operator><name pos:start="37:11" pos:end="37:15">cksum</name><operator pos:start="37:16" pos:end="37:16">.</operator><name pos:start="37:17" pos:end="37:22">offset</name></name> <operator pos:start="37:24" pos:end="37:24">=</operator> <call pos:start="37:26" pos:end="37:53"><name pos:start="37:26" pos:end="37:36">cpu_to_le32</name><argument_list pos:start="37:37" pos:end="37:53">(<argument pos:start="37:38" pos:end="37:52"><expr pos:start="37:38" pos:end="37:52"><name pos:start="37:38" pos:end="37:52">checksum_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:50"><expr pos:start="39:5" pos:end="39:49"><name pos:start="39:5" pos:end="39:21"><name pos:start="39:5" pos:end="39:9">entry</name><operator pos:start="39:10" pos:end="39:10">.</operator><name pos:start="39:11" pos:end="39:15">cksum</name><operator pos:start="39:16" pos:end="39:16">.</operator><name pos:start="39:17" pos:end="39:21">start</name></name> <operator pos:start="39:23" pos:end="39:23">=</operator> <call pos:start="39:25" pos:end="39:49"><name pos:start="39:25" pos:end="39:35">cpu_to_le32</name><argument_list pos:start="39:36" pos:end="39:49">(<argument pos:start="39:37" pos:end="39:48"><expr pos:start="39:37" pos:end="39:48"><name pos:start="39:37" pos:end="39:48">start_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:43"><expr pos:start="41:5" pos:end="41:42"><name pos:start="41:5" pos:end="41:22"><name pos:start="41:5" pos:end="41:9">entry</name><operator pos:start="41:10" pos:end="41:10">.</operator><name pos:start="41:11" pos:end="41:15">cksum</name><operator pos:start="41:16" pos:end="41:16">.</operator><name pos:start="41:17" pos:end="41:22">length</name></name> <operator pos:start="41:24" pos:end="41:24">=</operator> <call pos:start="41:26" pos:end="41:42"><name pos:start="41:26" pos:end="41:36">cpu_to_le32</name><argument_list pos:start="41:37" pos:end="41:42">(<argument pos:start="41:38" pos:end="41:41"><expr pos:start="41:38" pos:end="41:41"><name pos:start="41:38" pos:end="41:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:54"><expr pos:start="45:5" pos:end="45:53"><call pos:start="45:5" pos:end="45:53"><name pos:start="45:5" pos:end="45:23">g_array_append_vals</name><argument_list pos:start="45:24" pos:end="45:53">(<argument pos:start="45:25" pos:end="45:30"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:30">linker</name></expr></argument>, <argument pos:start="45:33" pos:end="45:38"><expr pos:start="45:33" pos:end="45:38"><operator pos:start="45:33" pos:end="45:33">&amp;</operator><name pos:start="45:34" pos:end="45:38">entry</name></expr></argument>, <argument pos:start="45:41" pos:end="45:52"><expr pos:start="45:41" pos:end="45:52"><sizeof pos:start="45:41" pos:end="45:52">sizeof <name pos:start="45:48" pos:end="45:52">entry</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
