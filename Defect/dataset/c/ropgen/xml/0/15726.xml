<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15726.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">intel_hda_corb_run</name><parameter_list pos:start="1:31" pos:end="1:48">(<parameter pos:start="1:32" pos:end="1:47"><decl pos:start="1:32" pos:end="1:47"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:44">IntelHDAState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">d</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:5">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">hwaddr</name></type> <name pos:start="5:12" pos:end="5:15">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">rp</name></decl>, <decl pos:start="7:18" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:21">verb</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:31">(<expr pos:start="11:9" pos:end="11:30"><name pos:start="11:9" pos:end="11:14"><name pos:start="11:9" pos:end="11:9">d</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:14">ics</name></name> <operator pos:start="11:16" pos:end="11:16">&amp;</operator> <name pos:start="11:18" pos:end="11:30">ICH6_IRS_BUSY</name></expr>)</condition> <block pos:start="11:33" pos:end="19:5">{<block_content pos:start="13:9" pos:end="17:15">

        <expr_stmt pos:start="13:9" pos:end="13:70"><expr pos:start="13:9" pos:end="13:69"><call pos:start="13:9" pos:end="13:69"><name pos:start="13:9" pos:end="13:14">dprint</name><argument_list pos:start="13:15" pos:end="13:69">(<argument pos:start="13:16" pos:end="13:16"><expr pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">d</name></expr></argument>, <argument pos:start="13:19" pos:end="13:19"><expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">2</literal></expr></argument>, <argument pos:start="13:22" pos:end="13:46"><expr pos:start="13:22" pos:end="13:46"><literal type="string" pos:start="13:22" pos:end="13:46">"%s: [icw] verb 0x%08x\n"</literal></expr></argument>, <argument pos:start="13:49" pos:end="13:60"><expr pos:start="13:49" pos:end="13:60"><name pos:start="13:49" pos:end="13:60">__FUNCTION__</name></expr></argument>, <argument pos:start="13:63" pos:end="13:68"><expr pos:start="13:63" pos:end="13:68"><name pos:start="13:63" pos:end="13:68"><name pos:start="13:63" pos:end="13:63">d</name><operator pos:start="13:64" pos:end="13:65">-&gt;</operator><name pos:start="13:66" pos:end="13:68">icw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:42"><expr pos:start="15:9" pos:end="15:41"><call pos:start="15:9" pos:end="15:41"><name pos:start="15:9" pos:end="15:30">intel_hda_send_command</name><argument_list pos:start="15:31" pos:end="15:41">(<argument pos:start="15:32" pos:end="15:32"><expr pos:start="15:32" pos:end="15:32"><name pos:start="15:32" pos:end="15:32">d</name></expr></argument>, <argument pos:start="15:35" pos:end="15:40"><expr pos:start="15:35" pos:end="15:40"><name pos:start="15:35" pos:end="15:40"><name pos:start="15:35" pos:end="15:35">d</name><operator pos:start="15:36" pos:end="15:37">-&gt;</operator><name pos:start="15:38" pos:end="15:40">icw</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="23:5" pos:end="65:5">for <control pos:start="23:9" pos:end="23:12">(<init pos:start="23:10" pos:end="23:10">;</init><condition pos:start="23:11" pos:end="23:11">;</condition><incr/>)</control> <block pos:start="23:14" pos:end="65:5">{<block_content pos:start="25:9" pos:end="63:40">

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:46">(<expr pos:start="25:13" pos:end="25:45"><operator pos:start="25:13" pos:end="25:13">!</operator><operator pos:start="25:14" pos:end="25:14">(</operator><name pos:start="25:15" pos:end="25:25"><name pos:start="25:15" pos:end="25:15">d</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:25">corb_ctl</name></name> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <name pos:start="25:29" pos:end="25:44">ICH6_CORBCTL_RUN</name><operator pos:start="25:45" pos:end="25:45">)</operator></expr>)</condition> <block pos:start="25:48" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:19">

            <expr_stmt pos:start="27:13" pos:end="27:53"><expr pos:start="27:13" pos:end="27:52"><call pos:start="27:13" pos:end="27:52"><name pos:start="27:13" pos:end="27:18">dprint</name><argument_list pos:start="27:19" pos:end="27:52">(<argument pos:start="27:20" pos:end="27:20"><expr pos:start="27:20" pos:end="27:20"><name pos:start="27:20" pos:end="27:20">d</name></expr></argument>, <argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><literal type="number" pos:start="27:23" pos:end="27:23">2</literal></expr></argument>, <argument pos:start="27:26" pos:end="27:37"><expr pos:start="27:26" pos:end="27:37"><literal type="string" pos:start="27:26" pos:end="27:37">"%s: !run\n"</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:51"><expr pos:start="27:40" pos:end="27:51"><name pos:start="27:40" pos:end="27:51">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="39:9"><if pos:start="33:9" pos:end="39:9">if <condition pos:start="33:12" pos:end="33:46">(<expr pos:start="33:13" pos:end="33:45"><operator pos:start="33:13" pos:end="33:13">(</operator><name pos:start="33:14" pos:end="33:23"><name pos:start="33:14" pos:end="33:14">d</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:23">corb_rp</name></name> <operator pos:start="33:25" pos:end="33:25">&amp;</operator> <literal type="number" pos:start="33:27" pos:end="33:30">0xff</literal><operator pos:start="33:31" pos:end="33:31">)</operator> <operator pos:start="33:33" pos:end="33:34">==</operator> <name pos:start="33:36" pos:end="33:45"><name pos:start="33:36" pos:end="33:36">d</name><operator pos:start="33:37" pos:end="33:38">-&gt;</operator><name pos:start="33:39" pos:end="33:45">corb_wp</name></name></expr>)</condition> <block pos:start="33:48" pos:end="39:9">{<block_content pos:start="35:13" pos:end="37:19">

            <expr_stmt pos:start="35:13" pos:end="35:64"><expr pos:start="35:13" pos:end="35:63"><call pos:start="35:13" pos:end="35:63"><name pos:start="35:13" pos:end="35:18">dprint</name><argument_list pos:start="35:19" pos:end="35:63">(<argument pos:start="35:20" pos:end="35:20"><expr pos:start="35:20" pos:end="35:20"><name pos:start="35:20" pos:end="35:20">d</name></expr></argument>, <argument pos:start="35:23" pos:end="35:23"><expr pos:start="35:23" pos:end="35:23"><literal type="number" pos:start="35:23" pos:end="35:23">2</literal></expr></argument>, <argument pos:start="35:26" pos:end="35:48"><expr pos:start="35:26" pos:end="35:48"><literal type="string" pos:start="35:26" pos:end="35:48">"%s: corb ring empty\n"</literal></expr></argument>, <argument pos:start="35:51" pos:end="35:62"><expr pos:start="35:51" pos:end="35:62"><name pos:start="35:51" pos:end="35:62">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="37:13" pos:end="37:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="41:9" pos:end="47:9"><if pos:start="41:9" pos:end="47:9">if <condition pos:start="41:12" pos:end="41:41">(<expr pos:start="41:13" pos:end="41:40"><name pos:start="41:13" pos:end="41:25"><name pos:start="41:13" pos:end="41:13">d</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:25">rirb_count</name></name> <operator pos:start="41:27" pos:end="41:28">==</operator> <name pos:start="41:30" pos:end="41:40"><name pos:start="41:30" pos:end="41:30">d</name><operator pos:start="41:31" pos:end="41:32">-&gt;</operator><name pos:start="41:33" pos:end="41:40">rirb_cnt</name></name></expr>)</condition> <block pos:start="41:43" pos:end="47:9">{<block_content pos:start="43:13" pos:end="45:19">

            <expr_stmt pos:start="43:13" pos:end="43:67"><expr pos:start="43:13" pos:end="43:66"><call pos:start="43:13" pos:end="43:66"><name pos:start="43:13" pos:end="43:18">dprint</name><argument_list pos:start="43:19" pos:end="43:66">(<argument pos:start="43:20" pos:end="43:20"><expr pos:start="43:20" pos:end="43:20"><name pos:start="43:20" pos:end="43:20">d</name></expr></argument>, <argument pos:start="43:23" pos:end="43:23"><expr pos:start="43:23" pos:end="43:23"><literal type="number" pos:start="43:23" pos:end="43:23">2</literal></expr></argument>, <argument pos:start="43:26" pos:end="43:51"><expr pos:start="43:26" pos:end="43:51"><literal type="string" pos:start="43:26" pos:end="43:51">"%s: rirb count reached\n"</literal></expr></argument>, <argument pos:start="43:54" pos:end="43:65"><expr pos:start="43:54" pos:end="43:65"><name pos:start="43:54" pos:end="43:65">__FUNCTION__</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="45:13" pos:end="45:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:37"><expr pos:start="51:9" pos:end="51:36"><name pos:start="51:9" pos:end="51:10">rp</name> <operator pos:start="51:12" pos:end="51:12">=</operator> <operator pos:start="51:14" pos:end="51:14">(</operator><name pos:start="51:15" pos:end="51:24"><name pos:start="51:15" pos:end="51:15">d</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">corb_rp</name></name> <operator pos:start="51:26" pos:end="51:26">+</operator> <literal type="number" pos:start="51:28" pos:end="51:28">1</literal><operator pos:start="51:29" pos:end="51:29">)</operator> <operator pos:start="51:31" pos:end="51:31">&amp;</operator> <literal type="number" pos:start="51:33" pos:end="51:36">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:60"><expr pos:start="53:9" pos:end="53:59"><name pos:start="53:9" pos:end="53:12">addr</name> <operator pos:start="53:14" pos:end="53:14">=</operator> <call pos:start="53:16" pos:end="53:59"><name pos:start="53:16" pos:end="53:29">intel_hda_addr</name><argument_list pos:start="53:30" pos:end="53:59">(<argument pos:start="53:31" pos:end="53:43"><expr pos:start="53:31" pos:end="53:43"><name pos:start="53:31" pos:end="53:43"><name pos:start="53:31" pos:end="53:31">d</name><operator pos:start="53:32" pos:end="53:33">-&gt;</operator><name pos:start="53:34" pos:end="53:43">corb_lbase</name></name></expr></argument>, <argument pos:start="53:46" pos:end="53:58"><expr pos:start="53:46" pos:end="53:58"><name pos:start="53:46" pos:end="53:58"><name pos:start="53:46" pos:end="53:46">d</name><operator pos:start="53:47" pos:end="53:48">-&gt;</operator><name pos:start="53:49" pos:end="53:58">corb_ubase</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:52"><expr pos:start="55:9" pos:end="55:51"><name pos:start="55:9" pos:end="55:12">verb</name> <operator pos:start="55:14" pos:end="55:14">=</operator> <call pos:start="55:16" pos:end="55:51"><name pos:start="55:16" pos:end="55:29">ldl_le_pci_dma</name><argument_list pos:start="55:30" pos:end="55:51">(<argument pos:start="55:31" pos:end="55:37"><expr pos:start="55:31" pos:end="55:37"><operator pos:start="55:31" pos:end="55:31">&amp;</operator><name pos:start="55:32" pos:end="55:37"><name pos:start="55:32" pos:end="55:32">d</name><operator pos:start="55:33" pos:end="55:34">-&gt;</operator><name pos:start="55:35" pos:end="55:37">pci</name></name></expr></argument>, <argument pos:start="55:40" pos:end="55:50"><expr pos:start="55:40" pos:end="55:50"><name pos:start="55:40" pos:end="55:43">addr</name> <operator pos:start="55:45" pos:end="55:45">+</operator> <literal type="number" pos:start="55:47" pos:end="55:47">4</literal><operator pos:start="55:48" pos:end="55:48">*</operator><name pos:start="55:49" pos:end="55:50">rp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:18"><name pos:start="57:9" pos:end="57:9">d</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">corb_rp</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:23">rp</name></expr>;</expr_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:76"><expr pos:start="61:9" pos:end="61:75"><call pos:start="61:9" pos:end="61:75"><name pos:start="61:9" pos:end="61:14">dprint</name><argument_list pos:start="61:15" pos:end="61:75">(<argument pos:start="61:16" pos:end="61:16"><expr pos:start="61:16" pos:end="61:16"><name pos:start="61:16" pos:end="61:16">d</name></expr></argument>, <argument pos:start="61:19" pos:end="61:19"><expr pos:start="61:19" pos:end="61:19"><literal type="number" pos:start="61:19" pos:end="61:19">2</literal></expr></argument>, <argument pos:start="61:22" pos:end="61:50"><expr pos:start="61:22" pos:end="61:50"><literal type="string" pos:start="61:22" pos:end="61:50">"%s: [rp 0x%x] verb 0x%08x\n"</literal></expr></argument>, <argument pos:start="61:53" pos:end="61:64"><expr pos:start="61:53" pos:end="61:64"><name pos:start="61:53" pos:end="61:64">__FUNCTION__</name></expr></argument>, <argument pos:start="61:67" pos:end="61:68"><expr pos:start="61:67" pos:end="61:68"><name pos:start="61:67" pos:end="61:68">rp</name></expr></argument>, <argument pos:start="61:71" pos:end="61:74"><expr pos:start="61:71" pos:end="61:74"><name pos:start="61:71" pos:end="61:74">verb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:40"><expr pos:start="63:9" pos:end="63:39"><call pos:start="63:9" pos:end="63:39"><name pos:start="63:9" pos:end="63:30">intel_hda_send_command</name><argument_list pos:start="63:31" pos:end="63:39">(<argument pos:start="63:32" pos:end="63:32"><expr pos:start="63:32" pos:end="63:32"><name pos:start="63:32" pos:end="63:32">d</name></expr></argument>, <argument pos:start="63:35" pos:end="63:38"><expr pos:start="63:35" pos:end="63:38"><name pos:start="63:35" pos:end="63:38">verb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
