<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/996.c" pos:tabs="8"><function pos:start="1:1" pos:end="121:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:23">ff_xvmc_field_start</name><parameter_list pos:start="1:24" pos:end="1:64">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:38">MpegEncContext</name><modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:40">s</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:63"><decl pos:start="1:43" pos:end="1:63"><type pos:start="1:43" pos:end="1:63"><name pos:start="1:43" pos:end="1:56">AVCodecContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:63">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="121:1">{<block_content pos:start="5:5" pos:end="119:10">

    <decl_stmt pos:start="5:5" pos:end="5:109"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:29"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:29">xvmc_pixfmt_render</name></name> <modifier pos:start="5:31" pos:end="5:31">*</modifier></type><name pos:start="5:32" pos:end="5:35">last</name></decl>, <decl pos:start="5:38" pos:end="5:42"><type ref="prev" pos:start="5:5" pos:end="5:31"><modifier pos:start="5:38" pos:end="5:38">*</modifier></type><name pos:start="5:39" pos:end="5:42">next</name></decl>, <decl pos:start="5:45" pos:end="5:108"><type ref="prev" pos:start="5:5" pos:end="5:31"><modifier pos:start="5:45" pos:end="5:45">*</modifier></type><name pos:start="5:46" pos:end="5:51">render</name> <init pos:start="5:53" pos:end="5:108">= <expr pos:start="5:55" pos:end="5:108"><operator pos:start="5:55" pos:end="5:55">(</operator>struct <name pos:start="5:63" pos:end="5:80">xvmc_pixfmt_render</name><operator pos:start="5:81" pos:end="5:81">*</operator><operator pos:start="5:82" pos:end="5:82">)</operator><name pos:start="5:83" pos:end="5:108"><name pos:start="5:83" pos:end="5:83">s</name><operator pos:start="5:84" pos:end="5:85">-&gt;</operator><name pos:start="5:86" pos:end="5:100">current_picture</name><operator pos:start="5:101" pos:end="5:101">.</operator><name pos:start="5:102" pos:end="5:105">data</name><index pos:start="5:106" pos:end="5:108">[<expr pos:start="5:107" pos:end="5:107"><literal type="number" pos:start="5:107" pos:end="5:107">2</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:59"><decl pos:start="7:5" pos:end="7:58"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:28">mb_block_count</name> <init pos:start="7:30" pos:end="7:58">= <expr pos:start="7:32" pos:end="7:58"><literal type="number" pos:start="7:32" pos:end="7:34">4</literal> <operator pos:start="7:34" pos:end="7:34">+</operator> <operator pos:start="7:36" pos:end="7:36">(</operator><literal type="number" pos:start="7:37" pos:end="7:37">1</literal> <operator pos:start="7:39" pos:end="7:40">&lt;&lt;</operator> <name pos:start="7:42" pos:end="7:57"><name pos:start="7:42" pos:end="7:42">s</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:57">chroma_format</name></name><operator pos:start="7:58" pos:end="7:58">)</operator></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><call pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:17">(<argument pos:start="11:12" pos:end="11:16"><expr pos:start="11:12" pos:end="11:16"><name pos:start="11:12" pos:end="11:16">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="23:5">if <condition pos:start="13:8" pos:end="15:51">(<expr pos:start="13:9" pos:end="15:50"><operator pos:start="13:9" pos:end="13:9">!</operator><name pos:start="13:10" pos:end="13:15">render</name> <operator pos:start="13:17" pos:end="13:18">||</operator> <name pos:start="13:20" pos:end="13:35"><name pos:start="13:20" pos:end="13:25">render</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:35">magic_id</name></name> <operator pos:start="13:37" pos:end="13:38">!=</operator> <name pos:start="13:40" pos:end="13:59">AV_XVMC_RENDER_MAGIC</name> <operator pos:start="13:61" pos:end="13:62">||</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><name pos:start="15:10" pos:end="15:28"><name pos:start="15:10" pos:end="15:15">render</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:28">data_blocks</name></name> <operator pos:start="15:30" pos:end="15:31">||</operator> <operator pos:start="15:33" pos:end="15:33">!</operator><name pos:start="15:34" pos:end="15:50"><name pos:start="15:34" pos:end="15:39">render</name><operator pos:start="15:40" pos:end="15:41">-&gt;</operator><name pos:start="15:42" pos:end="15:50">mv_blocks</name></name></expr>)</condition><block pos:start="15:52" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:18">

        <expr_stmt pos:start="17:9" pos:end="19:59"><expr pos:start="17:9" pos:end="19:58"><call pos:start="17:9" pos:end="19:58"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="19:58">(<argument pos:start="17:16" pos:end="17:20"><expr pos:start="17:16" pos:end="17:20"><name pos:start="17:16" pos:end="17:20">avctx</name></expr></argument>, <argument pos:start="17:23" pos:end="17:34"><expr pos:start="17:23" pos:end="17:34"><name pos:start="17:23" pos:end="17:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="19:16" pos:end="19:57"><expr pos:start="19:16" pos:end="19:57"><literal type="string" pos:start="19:16" pos:end="19:57">"Render token doesn't look as expected.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:18">return <expr pos:start="21:16" pos:end="21:17"><operator pos:start="21:16" pos:end="21:16">-</operator><literal type="number" pos:start="21:17" pos:end="21:17">1</literal></expr>;</return> <comment type="line" pos:start="21:20" pos:end="21:60">// make sure that this is a render packet</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:53"><expr pos:start="27:5" pos:end="27:52"><name pos:start="27:5" pos:end="27:29"><name pos:start="27:5" pos:end="27:10">render</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:29">picture_structure</name></name> <operator pos:start="27:31" pos:end="27:31">=</operator> <name pos:start="27:33" pos:end="27:52"><name pos:start="27:33" pos:end="27:33">s</name><operator pos:start="27:34" pos:end="27:35">-&gt;</operator><name pos:start="27:36" pos:end="27:52">picture_structure</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:71"><expr pos:start="29:5" pos:end="29:70"><name pos:start="29:5" pos:end="29:17"><name pos:start="29:5" pos:end="29:10">render</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:17">flags</name></name>             <operator pos:start="29:31" pos:end="29:31">=</operator> <ternary pos:start="29:33" pos:end="29:70"><condition pos:start="29:33" pos:end="29:48"><expr pos:start="29:33" pos:end="29:46"><name pos:start="29:33" pos:end="29:46"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:46">first_field</name></name></expr> ?</condition><then pos:start="29:50" pos:end="29:50"> <expr pos:start="29:50" pos:end="29:50"><literal type="number" pos:start="29:50" pos:end="29:50">0</literal></expr> </then><else pos:start="29:52" pos:end="29:70">: <expr pos:start="29:54" pos:end="29:70"><name pos:start="29:54" pos:end="29:70">XVMC_SECOND_FIELD</name></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="33:5" pos:end="43:5"><if pos:start="33:5" pos:end="43:5">if <condition pos:start="33:8" pos:end="33:37">(<expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:14">render</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:36">filled_mv_blocks_num</name></name></expr>)</condition> <block pos:start="33:39" pos:end="43:5">{<block_content pos:start="35:9" pos:end="41:18">

        <expr_stmt pos:start="35:9" pos:end="39:45"><expr pos:start="35:9" pos:end="39:44"><call pos:start="35:9" pos:end="39:44"><name pos:start="35:9" pos:end="35:14">av_log</name><argument_list pos:start="35:15" pos:end="39:44">(<argument pos:start="35:16" pos:end="35:20"><expr pos:start="35:16" pos:end="35:20"><name pos:start="35:16" pos:end="35:20">avctx</name></expr></argument>, <argument pos:start="35:23" pos:end="35:34"><expr pos:start="35:23" pos:end="35:34"><name pos:start="35:23" pos:end="35:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="37:16" pos:end="37:68"><expr pos:start="37:16" pos:end="37:68"><literal type="string" pos:start="37:16" pos:end="37:68">"Rendering surface contains %i unprocessed blocks.\n"</literal></expr></argument>,

               <argument pos:start="39:16" pos:end="39:43"><expr pos:start="39:16" pos:end="39:43"><name pos:start="39:16" pos:end="39:43"><name pos:start="39:16" pos:end="39:21">render</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:43">filled_mv_blocks_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="45:5" pos:end="55:5"><if pos:start="45:5" pos:end="55:5">if <condition pos:start="45:8" pos:end="47:61">(<expr pos:start="45:9" pos:end="47:60"><name pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:14">render</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:41">total_number_of_mv_blocks</name></name>   <operator pos:start="45:45" pos:end="45:45">&lt;</operator> <literal type="number" pos:start="45:47" pos:end="45:47">1</literal> <operator pos:start="45:49" pos:end="45:50">||</operator>

        <name pos:start="47:9" pos:end="47:43"><name pos:start="47:9" pos:end="47:14">render</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:43">total_number_of_data_blocks</name></name> <operator pos:start="47:45" pos:end="47:45">&lt;</operator> <name pos:start="47:47" pos:end="47:60">mb_block_count</name></expr>)</condition> <block pos:start="47:63" pos:end="55:5">{<block_content pos:start="49:9" pos:end="53:18">

        <expr_stmt pos:start="49:9" pos:end="51:92"><expr pos:start="49:9" pos:end="51:91"><call pos:start="49:9" pos:end="51:91"><name pos:start="49:9" pos:end="49:14">av_log</name><argument_list pos:start="49:15" pos:end="51:91">(<argument pos:start="49:16" pos:end="49:20"><expr pos:start="49:16" pos:end="49:20"><name pos:start="49:16" pos:end="49:20">avctx</name></expr></argument>, <argument pos:start="49:23" pos:end="49:34"><expr pos:start="49:23" pos:end="49:34"><name pos:start="49:23" pos:end="49:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="51:16" pos:end="51:90"><expr pos:start="51:16" pos:end="51:90"><literal type="string" pos:start="51:16" pos:end="51:90">"Rendering surface doesn't provide enough block structures to work with.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="67:5"><if pos:start="57:5" pos:end="67:5">if <condition pos:start="57:8" pos:end="59:61">(<expr pos:start="57:9" pos:end="59:60"><name pos:start="57:9" pos:end="57:41"><name pos:start="57:9" pos:end="57:14">render</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:41">total_number_of_mv_blocks</name></name>   <operator pos:start="57:45" pos:end="57:45">&lt;</operator> <literal type="number" pos:start="57:47" pos:end="57:47">1</literal> <operator pos:start="57:49" pos:end="57:50">||</operator>

        <name pos:start="59:9" pos:end="59:43"><name pos:start="59:9" pos:end="59:14">render</name><operator pos:start="59:15" pos:end="59:16">-&gt;</operator><name pos:start="59:17" pos:end="59:43">total_number_of_data_blocks</name></name> <operator pos:start="59:45" pos:end="59:45">&lt;</operator> <name pos:start="59:47" pos:end="59:60">mb_block_count</name></expr>)</condition> <block pos:start="59:63" pos:end="67:5">{<block_content pos:start="61:9" pos:end="65:18">

        <expr_stmt pos:start="61:9" pos:end="63:92"><expr pos:start="61:9" pos:end="63:91"><call pos:start="61:9" pos:end="63:91"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="63:91">(<argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">avctx</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="63:16" pos:end="63:90"><expr pos:start="63:16" pos:end="63:90"><literal type="string" pos:start="63:16" pos:end="63:90">"Rendering surface doesn't provide enough block structures to work with.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:36"><expr pos:start="71:5" pos:end="71:35"><name pos:start="71:5" pos:end="71:28"><name pos:start="71:5" pos:end="71:10">render</name><operator pos:start="71:11" pos:end="71:12">-&gt;</operator><name pos:start="71:13" pos:end="71:28">p_future_surface</name></name> <operator pos:start="71:30" pos:end="71:30">=</operator> <name pos:start="71:32" pos:end="71:35">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:36"><expr pos:start="73:5" pos:end="73:35"><name pos:start="73:5" pos:end="73:26"><name pos:start="73:5" pos:end="73:10">render</name><operator pos:start="73:11" pos:end="73:12">-&gt;</operator><name pos:start="73:13" pos:end="73:26">p_past_surface</name></name>   <operator pos:start="73:30" pos:end="73:30">=</operator> <name pos:start="73:32" pos:end="73:35">NULL</name></expr>;</expr_stmt>



    <switch pos:start="77:5" pos:end="115:5">switch<condition pos:start="77:11" pos:end="77:24">(<expr pos:start="77:12" pos:end="77:23"><name pos:start="77:12" pos:end="77:23"><name pos:start="77:12" pos:end="77:12">s</name><operator pos:start="77:13" pos:end="77:14">-&gt;</operator><name pos:start="77:15" pos:end="77:23">pict_type</name></name></expr>)</condition> <block pos:start="77:26" pos:end="115:5">{<block_content pos:start="79:9" pos:end="113:21">

        <case pos:start="79:9" pos:end="79:24">case  <expr pos:start="79:15" pos:end="79:23"><name pos:start="79:15" pos:end="79:23">FF_I_TYPE</name></expr>:</case>

            <return pos:start="81:13" pos:end="81:21">return <expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">0</literal></expr>;</return> <comment type="line" pos:start="81:23" pos:end="81:56">// no prediction from other frames</comment>

        <case pos:start="83:9" pos:end="83:24">case  <expr pos:start="83:15" pos:end="83:23"><name pos:start="83:15" pos:end="83:23">FF_B_TYPE</name></expr>:</case>

            <expr_stmt pos:start="85:13" pos:end="85:71"><expr pos:start="85:13" pos:end="85:70"><name pos:start="85:13" pos:end="85:16">next</name> <operator pos:start="85:18" pos:end="85:18">=</operator> <operator pos:start="85:20" pos:end="85:20">(</operator>struct <name pos:start="85:28" pos:end="85:45">xvmc_pixfmt_render</name><operator pos:start="85:46" pos:end="85:46">*</operator><operator pos:start="85:47" pos:end="85:47">)</operator><name pos:start="85:48" pos:end="85:70"><name pos:start="85:48" pos:end="85:48">s</name><operator pos:start="85:49" pos:end="85:50">-&gt;</operator><name pos:start="85:51" pos:end="85:62">next_picture</name><operator pos:start="85:63" pos:end="85:63">.</operator><name pos:start="85:64" pos:end="85:67">data</name><index pos:start="85:68" pos:end="85:70">[<expr pos:start="85:69" pos:end="85:69"><literal type="number" pos:start="85:69" pos:end="85:69">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="87:13" pos:end="89:26"><if pos:start="87:13" pos:end="89:26">if <condition pos:start="87:16" pos:end="87:22">(<expr pos:start="87:17" pos:end="87:21"><operator pos:start="87:17" pos:end="87:17">!</operator><name pos:start="87:18" pos:end="87:21">next</name></expr>)</condition><block type="pseudo" pos:start="89:17" pos:end="89:26"><block_content pos:start="89:17" pos:end="89:26">

                <return pos:start="89:17" pos:end="89:26">return <expr pos:start="89:24" pos:end="89:25"><operator pos:start="89:24" pos:end="89:24">-</operator><literal type="number" pos:start="89:25" pos:end="89:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <if_stmt pos:start="91:13" pos:end="93:26"><if pos:start="91:13" pos:end="93:26">if <condition pos:start="91:16" pos:end="91:55">(<expr pos:start="91:17" pos:end="91:54"><name pos:start="91:17" pos:end="91:30"><name pos:start="91:17" pos:end="91:20">next</name><operator pos:start="91:21" pos:end="91:22">-&gt;</operator><name pos:start="91:23" pos:end="91:30">magic_id</name></name> <operator pos:start="91:32" pos:end="91:33">!=</operator> <name pos:start="91:35" pos:end="91:54">AV_XVMC_RENDER_MAGIC</name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="93:26"><block_content pos:start="93:17" pos:end="93:26">

                <return pos:start="93:17" pos:end="93:26">return <expr pos:start="93:24" pos:end="93:25"><operator pos:start="93:24" pos:end="93:24">-</operator><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:55"><expr pos:start="95:13" pos:end="95:54"><name pos:start="95:13" pos:end="95:36"><name pos:start="95:13" pos:end="95:18">render</name><operator pos:start="95:19" pos:end="95:20">-&gt;</operator><name pos:start="95:21" pos:end="95:36">p_future_surface</name></name> <operator pos:start="95:38" pos:end="95:38">=</operator> <name pos:start="95:40" pos:end="95:54"><name pos:start="95:40" pos:end="95:43">next</name><operator pos:start="95:44" pos:end="95:45">-&gt;</operator><name pos:start="95:46" pos:end="95:54">p_surface</name></name></expr>;</expr_stmt>

            <comment type="line" pos:start="97:13" pos:end="97:62">// no return here, going to set forward prediction</comment>

        <case pos:start="99:9" pos:end="99:24">case  <expr pos:start="99:15" pos:end="99:23"><name pos:start="99:15" pos:end="99:23">FF_P_TYPE</name></expr>:</case>

            <expr_stmt pos:start="101:13" pos:end="101:71"><expr pos:start="101:13" pos:end="101:70"><name pos:start="101:13" pos:end="101:16">last</name> <operator pos:start="101:18" pos:end="101:18">=</operator> <operator pos:start="101:20" pos:end="101:20">(</operator>struct <name pos:start="101:28" pos:end="101:45">xvmc_pixfmt_render</name><operator pos:start="101:46" pos:end="101:46">*</operator><operator pos:start="101:47" pos:end="101:47">)</operator><name pos:start="101:48" pos:end="101:70"><name pos:start="101:48" pos:end="101:48">s</name><operator pos:start="101:49" pos:end="101:50">-&gt;</operator><name pos:start="101:51" pos:end="101:62">last_picture</name><operator pos:start="101:63" pos:end="101:63">.</operator><name pos:start="101:64" pos:end="101:67">data</name><index pos:start="101:68" pos:end="101:70">[<expr pos:start="101:69" pos:end="101:69"><literal type="number" pos:start="101:69" pos:end="101:69">2</literal></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="103:13" pos:end="105:30"><if pos:start="103:13" pos:end="105:30">if <condition pos:start="103:16" pos:end="103:22">(<expr pos:start="103:17" pos:end="103:21"><operator pos:start="103:17" pos:end="103:17">!</operator><name pos:start="103:18" pos:end="103:21">last</name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:30"><block_content pos:start="105:17" pos:end="105:30">

                <expr_stmt pos:start="105:17" pos:end="105:30"><expr pos:start="105:17" pos:end="105:29"><name pos:start="105:17" pos:end="105:20">last</name> <operator pos:start="105:22" pos:end="105:22">=</operator> <name pos:start="105:24" pos:end="105:29">render</name></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="105:32" pos:end="105:69">// predict second field from the first</comment>

            <if_stmt pos:start="107:13" pos:end="109:26"><if pos:start="107:13" pos:end="109:26">if <condition pos:start="107:16" pos:end="107:55">(<expr pos:start="107:17" pos:end="107:54"><name pos:start="107:17" pos:end="107:30"><name pos:start="107:17" pos:end="107:20">last</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:30">magic_id</name></name> <operator pos:start="107:32" pos:end="107:33">!=</operator> <name pos:start="107:35" pos:end="107:54">AV_XVMC_RENDER_MAGIC</name></expr>)</condition><block type="pseudo" pos:start="109:17" pos:end="109:26"><block_content pos:start="109:17" pos:end="109:26">

                <return pos:start="109:17" pos:end="109:26">return <expr pos:start="109:24" pos:end="109:25"><operator pos:start="109:24" pos:end="109:24">-</operator><literal type="number" pos:start="109:25" pos:end="109:25">1</literal></expr>;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:53"><expr pos:start="111:13" pos:end="111:52"><name pos:start="111:13" pos:end="111:34"><name pos:start="111:13" pos:end="111:18">render</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:34">p_past_surface</name></name> <operator pos:start="111:36" pos:end="111:36">=</operator> <name pos:start="111:38" pos:end="111:52"><name pos:start="111:38" pos:end="111:41">last</name><operator pos:start="111:42" pos:end="111:43">-&gt;</operator><name pos:start="111:44" pos:end="111:52">p_surface</name></name></expr>;</expr_stmt>

            <return pos:start="113:13" pos:end="113:21">return <expr pos:start="113:20" pos:end="113:20"><literal type="number" pos:start="113:20" pos:end="113:20">0</literal></expr>;</return>

    </block_content>}</block></switch>



<return pos:start="119:1" pos:end="119:10">return <expr pos:start="119:8" pos:end="119:9"><operator pos:start="119:8" pos:end="119:8">-</operator><literal type="number" pos:start="119:9" pos:end="119:9">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
