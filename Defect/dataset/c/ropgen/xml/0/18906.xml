<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18906.c" pos:tabs="8"><function pos:start="1:1" pos:end="749:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:29">build_memory_hotplug_aml</name><parameter_list pos:start="1:30" pos:end="7:63">(<parameter pos:start="1:31" pos:end="1:40"><decl pos:start="1:31" pos:end="1:40"><type pos:start="1:31" pos:end="1:40"><name pos:start="1:31" pos:end="1:33">Aml</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:40">table</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:57"><decl pos:start="1:43" pos:end="1:57"><type pos:start="1:43" pos:end="1:57"><name pos:start="1:43" pos:end="1:50">uint32_t</name></type> <name pos:start="1:52" pos:end="1:57">nr_mem</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:46"><decl pos:start="3:31" pos:end="3:46"><type pos:start="3:31" pos:end="3:46"><name pos:start="3:31" pos:end="3:38">uint16_t</name></type> <name pos:start="3:40" pos:end="3:46">io_base</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:63"><decl pos:start="3:49" pos:end="3:63"><type pos:start="3:49" pos:end="3:63"><name pos:start="3:49" pos:end="3:56">uint16_t</name></type> <name pos:start="3:58" pos:end="3:63">io_len</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:50"><decl pos:start="5:31" pos:end="5:50"><type pos:start="5:31" pos:end="5:50"><specifier pos:start="5:31" pos:end="5:35">const</specifier> <name pos:start="5:37" pos:end="5:40">char</name> <modifier pos:start="5:42" pos:end="5:42">*</modifier></type><name pos:start="5:43" pos:end="5:50">res_root</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:62"><decl pos:start="7:31" pos:end="7:62"><type pos:start="7:31" pos:end="7:62"><specifier pos:start="7:31" pos:end="7:35">const</specifier> <name pos:start="7:37" pos:end="7:40">char</name> <modifier pos:start="7:42" pos:end="7:42">*</modifier></type><name pos:start="7:43" pos:end="7:62">event_handler_method</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="749:1">{<block_content pos:start="11:5" pos:end="747:25">

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:15"><decl pos:start="13:5" pos:end="13:14"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:7">Aml</name> <modifier pos:start="13:9" pos:end="13:9">*</modifier></type><name pos:start="13:10" pos:end="13:14">ifctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:16"><decl pos:start="15:5" pos:end="15:15"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:7">Aml</name> <modifier pos:start="15:9" pos:end="15:9">*</modifier></type><name pos:start="15:10" pos:end="15:15">method</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:18"><decl pos:start="17:5" pos:end="17:17"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:7">Aml</name> <modifier pos:start="17:9" pos:end="17:9">*</modifier></type><name pos:start="17:10" pos:end="17:17">sb_scope</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:22"><decl pos:start="19:5" pos:end="19:21"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">Aml</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:21">mem_ctrl_dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:20"><decl pos:start="21:5" pos:end="21:19"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:8">char</name> <modifier pos:start="21:10" pos:end="21:10">*</modifier></type><name pos:start="21:11" pos:end="21:19">scan_path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:80"><decl pos:start="23:5" pos:end="23:79"><type pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:8">char</name> <modifier pos:start="23:10" pos:end="23:10">*</modifier></type><name pos:start="23:11" pos:end="23:22">mhp_res_path</name> <init pos:start="23:24" pos:end="23:79">= <expr pos:start="23:26" pos:end="23:79"><call pos:start="23:26" pos:end="23:79"><name pos:start="23:26" pos:end="23:40">g_strdup_printf</name><argument_list pos:start="23:41" pos:end="23:79">(<argument pos:start="23:42" pos:end="23:68"><expr pos:start="23:42" pos:end="23:68"><literal type="string" pos:start="23:42" pos:end="23:46">"%s."</literal> <name pos:start="23:48" pos:end="23:68">MEMORY_HOTPLUG_DEVICE</name></expr></argument>, <argument pos:start="23:71" pos:end="23:78"><expr pos:start="23:71" pos:end="23:78"><name pos:start="23:71" pos:end="23:78">res_root</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:16">mem_ctrl_dev</name> <operator pos:start="27:18" pos:end="27:18">=</operator> <call pos:start="27:20" pos:end="27:49"><name pos:start="27:20" pos:end="27:29">aml_device</name><argument_list pos:start="27:30" pos:end="27:49">(<argument pos:start="27:31" pos:end="27:34"><expr pos:start="27:31" pos:end="27:34"><literal type="string" pos:start="27:31" pos:end="27:34">"%s"</literal></expr></argument>, <argument pos:start="27:37" pos:end="27:48"><expr pos:start="27:37" pos:end="27:48"><name pos:start="27:37" pos:end="27:48">mhp_res_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <block pos:start="29:5" pos:end="607:5">{<block_content pos:start="31:9" pos:end="605:41">

        <decl_stmt pos:start="31:9" pos:end="31:17"><decl pos:start="31:9" pos:end="31:16"><type pos:start="31:9" pos:end="31:13"><name pos:start="31:9" pos:end="31:11">Aml</name> <modifier pos:start="31:13" pos:end="31:13">*</modifier></type><name pos:start="31:14" pos:end="31:16">crs</name></decl>;</decl_stmt>

        <decl_stmt pos:start="33:9" pos:end="33:19"><decl pos:start="33:9" pos:end="33:18"><type pos:start="33:9" pos:end="33:13"><name pos:start="33:9" pos:end="33:11">Aml</name> <modifier pos:start="33:13" pos:end="33:13">*</modifier></type><name pos:start="33:14" pos:end="33:18">field</name></decl>;</decl_stmt>

        <decl_stmt pos:start="35:9" pos:end="35:30"><decl pos:start="35:9" pos:end="35:29"><type pos:start="35:9" pos:end="35:13"><name pos:start="35:9" pos:end="35:11">Aml</name> <modifier pos:start="35:13" pos:end="35:13">*</modifier></type><name pos:start="35:14" pos:end="35:16">one</name> <init pos:start="35:18" pos:end="35:29">= <expr pos:start="35:20" pos:end="35:29"><call pos:start="35:20" pos:end="35:29"><name pos:start="35:20" pos:end="35:26">aml_int</name><argument_list pos:start="35:27" pos:end="35:29">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><literal type="number" pos:start="35:28" pos:end="35:28">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:31"><decl pos:start="37:9" pos:end="37:30"><type pos:start="37:9" pos:end="37:13"><name pos:start="37:9" pos:end="37:11">Aml</name> <modifier pos:start="37:13" pos:end="37:13">*</modifier></type><name pos:start="37:14" pos:end="37:17">zero</name> <init pos:start="37:19" pos:end="37:30">= <expr pos:start="37:21" pos:end="37:30"><call pos:start="37:21" pos:end="37:30"><name pos:start="37:21" pos:end="37:27">aml_int</name><argument_list pos:start="37:28" pos:end="37:30">(<argument pos:start="37:29" pos:end="37:29"><expr pos:start="37:29" pos:end="37:29"><literal type="number" pos:start="37:29" pos:end="37:29">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:36"><decl pos:start="39:9" pos:end="39:35"><type pos:start="39:9" pos:end="39:13"><name pos:start="39:9" pos:end="39:11">Aml</name> <modifier pos:start="39:13" pos:end="39:13">*</modifier></type><name pos:start="39:14" pos:end="39:20">ret_val</name> <init pos:start="39:22" pos:end="39:35">= <expr pos:start="39:24" pos:end="39:35"><call pos:start="39:24" pos:end="39:35"><name pos:start="39:24" pos:end="39:32">aml_local</name><argument_list pos:start="39:33" pos:end="39:35">(<argument pos:start="39:34" pos:end="39:34"><expr pos:start="39:34" pos:end="39:34"><literal type="number" pos:start="39:34" pos:end="39:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:36"><decl pos:start="41:9" pos:end="41:35"><type pos:start="41:9" pos:end="41:13"><name pos:start="41:9" pos:end="41:11">Aml</name> <modifier pos:start="41:13" pos:end="41:13">*</modifier></type><name pos:start="41:14" pos:end="41:22">slot_arg0</name> <init pos:start="41:24" pos:end="41:35">= <expr pos:start="41:26" pos:end="41:35"><call pos:start="41:26" pos:end="41:35"><name pos:start="41:26" pos:end="41:32">aml_arg</name><argument_list pos:start="41:33" pos:end="41:35">(<argument pos:start="41:34" pos:end="41:34"><expr pos:start="41:34" pos:end="41:34"><literal type="number" pos:start="41:34" pos:end="41:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:54"><decl pos:start="43:9" pos:end="43:53"><type pos:start="43:9" pos:end="43:13"><name pos:start="43:9" pos:end="43:11">Aml</name> <modifier pos:start="43:13" pos:end="43:13">*</modifier></type><name pos:start="43:14" pos:end="43:21">slots_nr</name> <init pos:start="43:23" pos:end="43:53">= <expr pos:start="43:25" pos:end="43:53"><call pos:start="43:25" pos:end="43:53"><name pos:start="43:25" pos:end="43:32">aml_name</name><argument_list pos:start="43:33" pos:end="43:53">(<argument pos:start="43:34" pos:end="43:52"><expr pos:start="43:34" pos:end="43:52"><name pos:start="43:34" pos:end="43:52">MEMORY_SLOTS_NUMBER</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="45:9" pos:end="45:52"><decl pos:start="45:9" pos:end="45:51"><type pos:start="45:9" pos:end="45:13"><name pos:start="45:9" pos:end="45:11">Aml</name> <modifier pos:start="45:13" pos:end="45:13">*</modifier></type><name pos:start="45:14" pos:end="45:22">ctrl_lock</name> <init pos:start="45:24" pos:end="45:51">= <expr pos:start="45:26" pos:end="45:51"><call pos:start="45:26" pos:end="45:51"><name pos:start="45:26" pos:end="45:33">aml_name</name><argument_list pos:start="45:34" pos:end="45:51">(<argument pos:start="45:35" pos:end="45:50"><expr pos:start="45:35" pos:end="45:50"><name pos:start="45:35" pos:end="45:50">MEMORY_SLOT_LOCK</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:59"><decl pos:start="47:9" pos:end="47:58"><type pos:start="47:9" pos:end="47:13"><name pos:start="47:9" pos:end="47:11">Aml</name> <modifier pos:start="47:13" pos:end="47:13">*</modifier></type><name pos:start="47:14" pos:end="47:26">slot_selector</name> <init pos:start="47:28" pos:end="47:58">= <expr pos:start="47:30" pos:end="47:58"><call pos:start="47:30" pos:end="47:58"><name pos:start="47:30" pos:end="47:37">aml_name</name><argument_list pos:start="47:38" pos:end="47:58">(<argument pos:start="47:39" pos:end="47:57"><expr pos:start="47:39" pos:end="47:57"><name pos:start="47:39" pos:end="47:57">MEMORY_SLOT_SLECTOR</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:79"><expr pos:start="51:9" pos:end="51:78"><call pos:start="51:9" pos:end="51:78"><name pos:start="51:9" pos:end="51:18">aml_append</name><argument_list pos:start="51:19" pos:end="51:78">(<argument pos:start="51:20" pos:end="51:31"><expr pos:start="51:20" pos:end="51:31"><name pos:start="51:20" pos:end="51:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="51:34" pos:end="51:77"><expr pos:start="51:34" pos:end="51:77"><call pos:start="51:34" pos:end="51:77"><name pos:start="51:34" pos:end="51:46">aml_name_decl</name><argument_list pos:start="51:47" pos:end="51:77">(<argument pos:start="51:48" pos:end="51:53"><expr pos:start="51:48" pos:end="51:53"><literal type="string" pos:start="51:48" pos:end="51:53">"_HID"</literal></expr></argument>, <argument pos:start="51:56" pos:end="51:76"><expr pos:start="51:56" pos:end="51:76"><call pos:start="51:56" pos:end="51:76"><name pos:start="51:56" pos:end="51:65">aml_string</name><argument_list pos:start="51:66" pos:end="51:76">(<argument pos:start="51:67" pos:end="51:75"><expr pos:start="51:67" pos:end="51:75"><literal type="string" pos:start="51:67" pos:end="51:75">"PNP0A06"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="55:75"><expr pos:start="53:9" pos:end="55:74"><call pos:start="53:9" pos:end="55:74"><name pos:start="53:9" pos:end="53:18">aml_append</name><argument_list pos:start="53:19" pos:end="55:74">(<argument pos:start="53:20" pos:end="53:31"><expr pos:start="53:20" pos:end="53:31"><name pos:start="53:20" pos:end="53:31">mem_ctrl_dev</name></expr></argument>,

            <argument pos:start="55:13" pos:end="55:73"><expr pos:start="55:13" pos:end="55:73"><call pos:start="55:13" pos:end="55:73"><name pos:start="55:13" pos:end="55:25">aml_name_decl</name><argument_list pos:start="55:26" pos:end="55:73">(<argument pos:start="55:27" pos:end="55:32"><expr pos:start="55:27" pos:end="55:32"><literal type="string" pos:start="55:27" pos:end="55:32">"_UID"</literal></expr></argument>, <argument pos:start="55:35" pos:end="55:72"><expr pos:start="55:35" pos:end="55:72"><call pos:start="55:35" pos:end="55:72"><name pos:start="55:35" pos:end="55:44">aml_string</name><argument_list pos:start="55:45" pos:end="55:72">(<argument pos:start="55:46" pos:end="55:71"><expr pos:start="55:46" pos:end="55:71"><literal type="string" pos:start="55:46" pos:end="55:71">"Memory hotplug resources"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:45"><expr pos:start="59:9" pos:end="59:44"><call pos:start="59:9" pos:end="59:44"><name pos:start="59:9" pos:end="59:14">assert</name><argument_list pos:start="59:15" pos:end="59:44">(<argument pos:start="59:16" pos:end="59:43"><expr pos:start="59:16" pos:end="59:43"><name pos:start="59:16" pos:end="59:21">nr_mem</name> <operator pos:start="59:23" pos:end="59:24">&lt;=</operator> <name pos:start="59:26" pos:end="59:43">ACPI_MAX_RAM_SLOTS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="65:10"><expr pos:start="61:9" pos:end="65:9"><call pos:start="61:9" pos:end="65:9"><name pos:start="61:9" pos:end="61:18">aml_append</name><argument_list pos:start="61:19" pos:end="65:9">(<argument pos:start="61:20" pos:end="61:31"><expr pos:start="61:20" pos:end="61:31"><name pos:start="61:20" pos:end="61:31">mem_ctrl_dev</name></expr></argument>,

            <argument pos:start="63:13" pos:end="63:63"><expr pos:start="63:13" pos:end="63:63"><call pos:start="63:13" pos:end="63:63"><name pos:start="63:13" pos:end="63:25">aml_name_decl</name><argument_list pos:start="63:26" pos:end="63:63">(<argument pos:start="63:27" pos:end="63:45"><expr pos:start="63:27" pos:end="63:45"><name pos:start="63:27" pos:end="63:45">MEMORY_SLOTS_NUMBER</name></expr></argument>, <argument pos:start="63:48" pos:end="63:62"><expr pos:start="63:48" pos:end="63:62"><call pos:start="63:48" pos:end="63:62"><name pos:start="63:48" pos:end="63:54">aml_int</name><argument_list pos:start="63:55" pos:end="63:62">(<argument pos:start="63:56" pos:end="63:61"><expr pos:start="63:56" pos:end="63:61"><name pos:start="63:56" pos:end="63:61">nr_mem</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:38"><expr pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:11">crs</name> <operator pos:start="69:13" pos:end="69:13">=</operator> <call pos:start="69:15" pos:end="69:37"><name pos:start="69:15" pos:end="69:35">aml_resource_template</name><argument_list pos:start="69:36" pos:end="69:37">()</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="75:10"><expr pos:start="71:9" pos:end="75:9"><call pos:start="71:9" pos:end="75:9"><name pos:start="71:9" pos:end="71:18">aml_append</name><argument_list pos:start="71:19" pos:end="75:9">(<argument pos:start="71:20" pos:end="71:22"><expr pos:start="71:20" pos:end="71:22"><name pos:start="71:20" pos:end="71:22">crs</name></expr></argument>,

            <argument pos:start="73:13" pos:end="73:61"><expr pos:start="73:13" pos:end="73:61"><call pos:start="73:13" pos:end="73:61"><name pos:start="73:13" pos:end="73:18">aml_io</name><argument_list pos:start="73:19" pos:end="73:61">(<argument pos:start="73:20" pos:end="73:31"><expr pos:start="73:20" pos:end="73:31"><name pos:start="73:20" pos:end="73:31">AML_DECODE16</name></expr></argument>, <argument pos:start="73:34" pos:end="73:40"><expr pos:start="73:34" pos:end="73:40"><name pos:start="73:34" pos:end="73:40">io_base</name></expr></argument>, <argument pos:start="73:43" pos:end="73:49"><expr pos:start="73:43" pos:end="73:49"><name pos:start="73:43" pos:end="73:49">io_base</name></expr></argument>, <argument pos:start="73:52" pos:end="73:52"><expr pos:start="73:52" pos:end="73:52"><literal type="number" pos:start="73:52" pos:end="73:52">0</literal></expr></argument>, <argument pos:start="73:55" pos:end="73:60"><expr pos:start="73:55" pos:end="73:60"><name pos:start="73:55" pos:end="73:60">io_len</name></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:61"><expr pos:start="77:9" pos:end="77:60"><call pos:start="77:9" pos:end="77:60"><name pos:start="77:9" pos:end="77:18">aml_append</name><argument_list pos:start="77:19" pos:end="77:60">(<argument pos:start="77:20" pos:end="77:31"><expr pos:start="77:20" pos:end="77:31"><name pos:start="77:20" pos:end="77:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="77:34" pos:end="77:59"><expr pos:start="77:34" pos:end="77:59"><call pos:start="77:34" pos:end="77:59"><name pos:start="77:34" pos:end="77:46">aml_name_decl</name><argument_list pos:start="77:47" pos:end="77:59">(<argument pos:start="77:48" pos:end="77:53"><expr pos:start="77:48" pos:end="77:53"><literal type="string" pos:start="77:48" pos:end="77:53">"_CRS"</literal></expr></argument>, <argument pos:start="77:56" pos:end="77:58"><expr pos:start="77:56" pos:end="77:58"><name pos:start="77:56" pos:end="77:58">crs</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="81:9" pos:end="87:10"><expr pos:start="81:9" pos:end="87:9"><call pos:start="81:9" pos:end="87:9"><name pos:start="81:9" pos:end="81:18">aml_append</name><argument_list pos:start="81:19" pos:end="87:9">(<argument pos:start="81:20" pos:end="81:31"><expr pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="81:34" pos:end="85:37"><expr pos:start="81:34" pos:end="85:37"><call pos:start="81:34" pos:end="85:37"><name pos:start="81:34" pos:end="81:53">aml_operation_region</name><argument_list pos:start="81:54" pos:end="85:37">(

            <argument pos:start="83:13" pos:end="83:36"><expr pos:start="83:13" pos:end="83:36"><name pos:start="83:13" pos:end="83:36">MEMORY_HOTPLUG_IO_REGION</name></expr></argument>, <argument pos:start="83:39" pos:end="83:51"><expr pos:start="83:39" pos:end="83:51"><name pos:start="83:39" pos:end="83:51">AML_SYSTEM_IO</name></expr></argument>,

            <argument pos:start="85:13" pos:end="85:28"><expr pos:start="85:13" pos:end="85:28"><call pos:start="85:13" pos:end="85:28"><name pos:start="85:13" pos:end="85:19">aml_int</name><argument_list pos:start="85:20" pos:end="85:28">(<argument pos:start="85:21" pos:end="85:27"><expr pos:start="85:21" pos:end="85:27"><name pos:start="85:21" pos:end="85:27">io_base</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:31" pos:end="85:36"><expr pos:start="85:31" pos:end="85:36"><name pos:start="85:31" pos:end="85:36">io_len</name></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="91:9" pos:end="93:52"><expr pos:start="91:9" pos:end="93:51"><name pos:start="91:9" pos:end="91:13">field</name> <operator pos:start="91:15" pos:end="91:15">=</operator> <call pos:start="91:17" pos:end="93:51"><name pos:start="91:17" pos:end="91:25">aml_field</name><argument_list pos:start="91:26" pos:end="93:51">(<argument pos:start="91:27" pos:end="91:50"><expr pos:start="91:27" pos:end="91:50"><name pos:start="91:27" pos:end="91:50">MEMORY_HOTPLUG_IO_REGION</name></expr></argument>, <argument pos:start="91:53" pos:end="91:65"><expr pos:start="91:53" pos:end="91:65"><name pos:start="91:53" pos:end="91:65">AML_DWORD_ACC</name></expr></argument>,

                          <argument pos:start="93:27" pos:end="93:36"><expr pos:start="93:27" pos:end="93:36"><name pos:start="93:27" pos:end="93:36">AML_NOLOCK</name></expr></argument>, <argument pos:start="93:39" pos:end="93:50"><expr pos:start="93:39" pos:end="93:50"><name pos:start="93:39" pos:end="93:50">AML_PRESERVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="97:55"><expr pos:start="95:9" pos:end="97:54"><call pos:start="95:9" pos:end="97:54"><name pos:start="95:9" pos:end="95:18">aml_append</name><argument_list pos:start="95:19" pos:end="97:54">(<argument pos:start="95:20" pos:end="95:24"><expr pos:start="95:20" pos:end="95:24"><name pos:start="95:20" pos:end="95:24">field</name></expr></argument>, <comment type="block" pos:start="95:27" pos:end="95:41">/* read only */</comment>

            <argument pos:start="97:13" pos:end="97:53"><expr pos:start="97:13" pos:end="97:53"><call pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:27">aml_named_field</name><argument_list pos:start="97:28" pos:end="97:53">(<argument pos:start="97:29" pos:end="97:48"><expr pos:start="97:29" pos:end="97:48"><name pos:start="97:29" pos:end="97:48">MEMORY_SLOT_ADDR_LOW</name></expr></argument>, <argument pos:start="97:51" pos:end="97:52"><expr pos:start="97:51" pos:end="97:52"><literal type="number" pos:start="97:51" pos:end="97:52">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="101:56"><expr pos:start="99:9" pos:end="101:55"><call pos:start="99:9" pos:end="101:55"><name pos:start="99:9" pos:end="99:18">aml_append</name><argument_list pos:start="99:19" pos:end="101:55">(<argument pos:start="99:20" pos:end="99:24"><expr pos:start="99:20" pos:end="99:24"><name pos:start="99:20" pos:end="99:24">field</name></expr></argument>, <comment type="block" pos:start="99:27" pos:end="99:41">/* read only */</comment>

            <argument pos:start="101:13" pos:end="101:54"><expr pos:start="101:13" pos:end="101:54"><call pos:start="101:13" pos:end="101:54"><name pos:start="101:13" pos:end="101:27">aml_named_field</name><argument_list pos:start="101:28" pos:end="101:54">(<argument pos:start="101:29" pos:end="101:49"><expr pos:start="101:29" pos:end="101:49"><name pos:start="101:29" pos:end="101:49">MEMORY_SLOT_ADDR_HIGH</name></expr></argument>, <argument pos:start="101:52" pos:end="101:53"><expr pos:start="101:52" pos:end="101:53"><literal type="number" pos:start="101:52" pos:end="101:53">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="105:55"><expr pos:start="103:9" pos:end="105:54"><call pos:start="103:9" pos:end="105:54"><name pos:start="103:9" pos:end="103:18">aml_append</name><argument_list pos:start="103:19" pos:end="105:54">(<argument pos:start="103:20" pos:end="103:24"><expr pos:start="103:20" pos:end="103:24"><name pos:start="103:20" pos:end="103:24">field</name></expr></argument>, <comment type="block" pos:start="103:27" pos:end="103:41">/* read only */</comment>

            <argument pos:start="105:13" pos:end="105:53"><expr pos:start="105:13" pos:end="105:53"><call pos:start="105:13" pos:end="105:53"><name pos:start="105:13" pos:end="105:27">aml_named_field</name><argument_list pos:start="105:28" pos:end="105:53">(<argument pos:start="105:29" pos:end="105:48"><expr pos:start="105:29" pos:end="105:48"><name pos:start="105:29" pos:end="105:48">MEMORY_SLOT_SIZE_LOW</name></expr></argument>, <argument pos:start="105:51" pos:end="105:52"><expr pos:start="105:51" pos:end="105:52"><literal type="number" pos:start="105:51" pos:end="105:52">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="107:9" pos:end="109:56"><expr pos:start="107:9" pos:end="109:55"><call pos:start="107:9" pos:end="109:55"><name pos:start="107:9" pos:end="107:18">aml_append</name><argument_list pos:start="107:19" pos:end="109:55">(<argument pos:start="107:20" pos:end="107:24"><expr pos:start="107:20" pos:end="107:24"><name pos:start="107:20" pos:end="107:24">field</name></expr></argument>, <comment type="block" pos:start="107:27" pos:end="107:41">/* read only */</comment>

            <argument pos:start="109:13" pos:end="109:54"><expr pos:start="109:13" pos:end="109:54"><call pos:start="109:13" pos:end="109:54"><name pos:start="109:13" pos:end="109:27">aml_named_field</name><argument_list pos:start="109:28" pos:end="109:54">(<argument pos:start="109:29" pos:end="109:49"><expr pos:start="109:29" pos:end="109:49"><name pos:start="109:29" pos:end="109:49">MEMORY_SLOT_SIZE_HIGH</name></expr></argument>, <argument pos:start="109:52" pos:end="109:53"><expr pos:start="109:52" pos:end="109:53"><literal type="number" pos:start="109:52" pos:end="109:53">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="113:56"><expr pos:start="111:9" pos:end="113:55"><call pos:start="111:9" pos:end="113:55"><name pos:start="111:9" pos:end="111:18">aml_append</name><argument_list pos:start="111:19" pos:end="113:55">(<argument pos:start="111:20" pos:end="111:24"><expr pos:start="111:20" pos:end="111:24"><name pos:start="111:20" pos:end="111:24">field</name></expr></argument>, <comment type="block" pos:start="111:27" pos:end="111:41">/* read only */</comment>

            <argument pos:start="113:13" pos:end="113:54"><expr pos:start="113:13" pos:end="113:54"><call pos:start="113:13" pos:end="113:54"><name pos:start="113:13" pos:end="113:27">aml_named_field</name><argument_list pos:start="113:28" pos:end="113:54">(<argument pos:start="113:29" pos:end="113:49"><expr pos:start="113:29" pos:end="113:49"><name pos:start="113:29" pos:end="113:49">MEMORY_SLOT_PROXIMITY</name></expr></argument>, <argument pos:start="113:52" pos:end="113:53"><expr pos:start="113:52" pos:end="113:53"><literal type="number" pos:start="113:52" pos:end="113:53">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:40"><expr pos:start="115:9" pos:end="115:39"><call pos:start="115:9" pos:end="115:39"><name pos:start="115:9" pos:end="115:18">aml_append</name><argument_list pos:start="115:19" pos:end="115:39">(<argument pos:start="115:20" pos:end="115:31"><expr pos:start="115:20" pos:end="115:31"><name pos:start="115:20" pos:end="115:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="115:34" pos:end="115:38"><expr pos:start="115:34" pos:end="115:38"><name pos:start="115:34" pos:end="115:38">field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="119:9" pos:end="121:58"><expr pos:start="119:9" pos:end="121:57"><name pos:start="119:9" pos:end="119:13">field</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <call pos:start="119:17" pos:end="121:57"><name pos:start="119:17" pos:end="119:25">aml_field</name><argument_list pos:start="119:26" pos:end="121:57">(<argument pos:start="119:27" pos:end="119:50"><expr pos:start="119:27" pos:end="119:50"><name pos:start="119:27" pos:end="119:50">MEMORY_HOTPLUG_IO_REGION</name></expr></argument>, <argument pos:start="119:53" pos:end="119:64"><expr pos:start="119:53" pos:end="119:64"><name pos:start="119:53" pos:end="119:64">AML_BYTE_ACC</name></expr></argument>,

                          <argument pos:start="121:27" pos:end="121:36"><expr pos:start="121:27" pos:end="121:36"><name pos:start="121:27" pos:end="121:36">AML_NOLOCK</name></expr></argument>, <argument pos:start="121:39" pos:end="121:56"><expr pos:start="121:39" pos:end="121:56"><name pos:start="121:39" pos:end="121:56">AML_WRITE_AS_ZEROS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="123:9" pos:end="123:74"><expr pos:start="123:9" pos:end="123:73"><call pos:start="123:9" pos:end="123:73"><name pos:start="123:9" pos:end="123:18">aml_append</name><argument_list pos:start="123:19" pos:end="123:73">(<argument pos:start="123:20" pos:end="123:24"><expr pos:start="123:20" pos:end="123:24"><name pos:start="123:20" pos:end="123:24">field</name></expr></argument>, <argument pos:start="123:27" pos:end="123:72"><expr pos:start="123:27" pos:end="123:72"><call pos:start="123:27" pos:end="123:72"><name pos:start="123:27" pos:end="123:44">aml_reserved_field</name><argument_list pos:start="123:45" pos:end="123:72">(<argument pos:start="123:46" pos:end="123:48"><expr pos:start="123:46" pos:end="123:48"><literal type="number" pos:start="123:46" pos:end="123:48">160</literal></expr></argument> <comment type="block" pos:start="123:50" pos:end="123:71">/* bits, Offset(20) */</comment>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="125:9" pos:end="127:53"><expr pos:start="125:9" pos:end="127:52"><call pos:start="125:9" pos:end="127:52"><name pos:start="125:9" pos:end="125:18">aml_append</name><argument_list pos:start="125:19" pos:end="127:52">(<argument pos:start="125:20" pos:end="125:24"><expr pos:start="125:20" pos:end="125:24"><name pos:start="125:20" pos:end="125:24">field</name></expr></argument>, <comment type="block" pos:start="125:27" pos:end="125:55">/* 1 if enabled, read only */</comment>

            <argument pos:start="127:13" pos:end="127:51"><expr pos:start="127:13" pos:end="127:51"><call pos:start="127:13" pos:end="127:51"><name pos:start="127:13" pos:end="127:27">aml_named_field</name><argument_list pos:start="127:28" pos:end="127:51">(<argument pos:start="127:29" pos:end="127:47"><expr pos:start="127:29" pos:end="127:47"><name pos:start="127:29" pos:end="127:47">MEMORY_SLOT_ENABLED</name></expr></argument>, <argument pos:start="127:50" pos:end="127:50"><expr pos:start="127:50" pos:end="127:50"><literal type="number" pos:start="127:50" pos:end="127:50">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="133:58"><expr pos:start="129:9" pos:end="133:57"><call pos:start="129:9" pos:end="133:57"><name pos:start="129:9" pos:end="129:18">aml_append</name><argument_list pos:start="129:19" pos:end="133:57">(<argument pos:start="129:20" pos:end="129:24"><expr pos:start="129:20" pos:end="129:24"><name pos:start="129:20" pos:end="129:24">field</name></expr></argument>,

            <comment type="block" pos:start="131:13" pos:end="131:73">/*(read) 1 if has a insert event. (write) 1 to clear event */</comment>

            <argument pos:start="133:13" pos:end="133:56"><expr pos:start="133:13" pos:end="133:56"><call pos:start="133:13" pos:end="133:56"><name pos:start="133:13" pos:end="133:27">aml_named_field</name><argument_list pos:start="133:28" pos:end="133:56">(<argument pos:start="133:29" pos:end="133:52"><expr pos:start="133:29" pos:end="133:52"><name pos:start="133:29" pos:end="133:52">MEMORY_SLOT_INSERT_EVENT</name></expr></argument>, <argument pos:start="133:55" pos:end="133:55"><expr pos:start="133:55" pos:end="133:55"><literal type="number" pos:start="133:55" pos:end="133:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="139:58"><expr pos:start="135:9" pos:end="139:57"><call pos:start="135:9" pos:end="139:57"><name pos:start="135:9" pos:end="135:18">aml_append</name><argument_list pos:start="135:19" pos:end="139:57">(<argument pos:start="135:20" pos:end="135:24"><expr pos:start="135:20" pos:end="135:24"><name pos:start="135:20" pos:end="135:24">field</name></expr></argument>,

            <comment type="block" pos:start="137:13" pos:end="137:74">/* (read) 1 if has a remove event. (write) 1 to clear event */</comment>

            <argument pos:start="139:13" pos:end="139:56"><expr pos:start="139:13" pos:end="139:56"><call pos:start="139:13" pos:end="139:56"><name pos:start="139:13" pos:end="139:27">aml_named_field</name><argument_list pos:start="139:28" pos:end="139:56">(<argument pos:start="139:29" pos:end="139:52"><expr pos:start="139:29" pos:end="139:52"><name pos:start="139:29" pos:end="139:52">MEMORY_SLOT_REMOVE_EVENT</name></expr></argument>, <argument pos:start="139:55" pos:end="139:55"><expr pos:start="139:55" pos:end="139:55"><literal type="number" pos:start="139:55" pos:end="139:55">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="145:51"><expr pos:start="141:9" pos:end="145:50"><call pos:start="141:9" pos:end="145:50"><name pos:start="141:9" pos:end="141:18">aml_append</name><argument_list pos:start="141:19" pos:end="145:50">(<argument pos:start="141:20" pos:end="141:24"><expr pos:start="141:20" pos:end="141:24"><name pos:start="141:20" pos:end="141:24">field</name></expr></argument>,

            <comment type="block" pos:start="143:13" pos:end="143:52">/* initiates device eject, write only */</comment>

            <argument pos:start="145:13" pos:end="145:49"><expr pos:start="145:13" pos:end="145:49"><call pos:start="145:13" pos:end="145:49"><name pos:start="145:13" pos:end="145:27">aml_named_field</name><argument_list pos:start="145:28" pos:end="145:49">(<argument pos:start="145:29" pos:end="145:45"><expr pos:start="145:29" pos:end="145:45"><name pos:start="145:29" pos:end="145:45">MEMORY_SLOT_EJECT</name></expr></argument>, <argument pos:start="145:48" pos:end="145:48"><expr pos:start="145:48" pos:end="145:48"><literal type="number" pos:start="145:48" pos:end="145:48">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="147:9" pos:end="147:40"><expr pos:start="147:9" pos:end="147:39"><call pos:start="147:9" pos:end="147:39"><name pos:start="147:9" pos:end="147:18">aml_append</name><argument_list pos:start="147:19" pos:end="147:39">(<argument pos:start="147:20" pos:end="147:31"><expr pos:start="147:20" pos:end="147:31"><name pos:start="147:20" pos:end="147:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="147:34" pos:end="147:38"><expr pos:start="147:34" pos:end="147:38"><name pos:start="147:34" pos:end="147:38">field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="151:9" pos:end="153:52"><expr pos:start="151:9" pos:end="153:51"><name pos:start="151:9" pos:end="151:13">field</name> <operator pos:start="151:15" pos:end="151:15">=</operator> <call pos:start="151:17" pos:end="153:51"><name pos:start="151:17" pos:end="151:25">aml_field</name><argument_list pos:start="151:26" pos:end="153:51">(<argument pos:start="151:27" pos:end="151:50"><expr pos:start="151:27" pos:end="151:50"><name pos:start="151:27" pos:end="151:50">MEMORY_HOTPLUG_IO_REGION</name></expr></argument>, <argument pos:start="151:53" pos:end="151:65"><expr pos:start="151:53" pos:end="151:65"><name pos:start="151:53" pos:end="151:65">AML_DWORD_ACC</name></expr></argument>,

                          <argument pos:start="153:27" pos:end="153:36"><expr pos:start="153:27" pos:end="153:36"><name pos:start="153:27" pos:end="153:36">AML_NOLOCK</name></expr></argument>, <argument pos:start="153:39" pos:end="153:50"><expr pos:start="153:39" pos:end="153:50"><name pos:start="153:39" pos:end="153:50">AML_PRESERVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="157:54"><expr pos:start="155:9" pos:end="157:53"><call pos:start="155:9" pos:end="157:53"><name pos:start="155:9" pos:end="155:18">aml_append</name><argument_list pos:start="155:19" pos:end="157:53">(<argument pos:start="155:20" pos:end="155:24"><expr pos:start="155:20" pos:end="155:24"><name pos:start="155:20" pos:end="155:24">field</name></expr></argument>, <comment type="block" pos:start="155:27" pos:end="155:57">/* DIMM selector, write only */</comment>

            <argument pos:start="157:13" pos:end="157:52"><expr pos:start="157:13" pos:end="157:52"><call pos:start="157:13" pos:end="157:52"><name pos:start="157:13" pos:end="157:27">aml_named_field</name><argument_list pos:start="157:28" pos:end="157:52">(<argument pos:start="157:29" pos:end="157:47"><expr pos:start="157:29" pos:end="157:47"><name pos:start="157:29" pos:end="157:47">MEMORY_SLOT_SLECTOR</name></expr></argument>, <argument pos:start="157:50" pos:end="157:51"><expr pos:start="157:50" pos:end="157:51"><literal type="number" pos:start="157:50" pos:end="157:51">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="161:56"><expr pos:start="159:9" pos:end="161:55"><call pos:start="159:9" pos:end="161:55"><name pos:start="159:9" pos:end="159:18">aml_append</name><argument_list pos:start="159:19" pos:end="161:55">(<argument pos:start="159:20" pos:end="159:24"><expr pos:start="159:20" pos:end="159:24"><name pos:start="159:20" pos:end="159:24">field</name></expr></argument>, <comment type="block" pos:start="159:27" pos:end="159:59">/* _OST event code, write only */</comment>

            <argument pos:start="161:13" pos:end="161:54"><expr pos:start="161:13" pos:end="161:54"><call pos:start="161:13" pos:end="161:54"><name pos:start="161:13" pos:end="161:27">aml_named_field</name><argument_list pos:start="161:28" pos:end="161:54">(<argument pos:start="161:29" pos:end="161:49"><expr pos:start="161:29" pos:end="161:49"><name pos:start="161:29" pos:end="161:49">MEMORY_SLOT_OST_EVENT</name></expr></argument>, <argument pos:start="161:52" pos:end="161:53"><expr pos:start="161:52" pos:end="161:53"><literal type="number" pos:start="161:52" pos:end="161:53">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="165:57"><expr pos:start="163:9" pos:end="165:56"><call pos:start="163:9" pos:end="165:56"><name pos:start="163:9" pos:end="163:18">aml_append</name><argument_list pos:start="163:19" pos:end="165:56">(<argument pos:start="163:20" pos:end="163:24"><expr pos:start="163:20" pos:end="163:24"><name pos:start="163:20" pos:end="163:24">field</name></expr></argument>, <comment type="block" pos:start="163:27" pos:end="163:60">/* _OST status code, write only */</comment>

            <argument pos:start="165:13" pos:end="165:55"><expr pos:start="165:13" pos:end="165:55"><call pos:start="165:13" pos:end="165:55"><name pos:start="165:13" pos:end="165:27">aml_named_field</name><argument_list pos:start="165:28" pos:end="165:55">(<argument pos:start="165:29" pos:end="165:50"><expr pos:start="165:29" pos:end="165:50"><name pos:start="165:29" pos:end="165:50">MEMORY_SLOT_OST_STATUS</name></expr></argument>, <argument pos:start="165:53" pos:end="165:54"><expr pos:start="165:53" pos:end="165:54"><literal type="number" pos:start="165:53" pos:end="165:54">32</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:40"><expr pos:start="167:9" pos:end="167:39"><call pos:start="167:9" pos:end="167:39"><name pos:start="167:9" pos:end="167:18">aml_append</name><argument_list pos:start="167:19" pos:end="167:39">(<argument pos:start="167:20" pos:end="167:31"><expr pos:start="167:20" pos:end="167:31"><name pos:start="167:20" pos:end="167:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="167:34" pos:end="167:38"><expr pos:start="167:34" pos:end="167:38"><name pos:start="167:34" pos:end="167:38">field</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="171:9" pos:end="171:58"><expr pos:start="171:9" pos:end="171:57"><name pos:start="171:9" pos:end="171:14">method</name> <operator pos:start="171:16" pos:end="171:16">=</operator> <call pos:start="171:18" pos:end="171:57"><name pos:start="171:18" pos:end="171:27">aml_method</name><argument_list pos:start="171:28" pos:end="171:57">(<argument pos:start="171:29" pos:end="171:34"><expr pos:start="171:29" pos:end="171:34"><literal type="string" pos:start="171:29" pos:end="171:34">"_STA"</literal></expr></argument>, <argument pos:start="171:37" pos:end="171:37"><expr pos:start="171:37" pos:end="171:37"><literal type="number" pos:start="171:37" pos:end="171:37">0</literal></expr></argument>, <argument pos:start="171:40" pos:end="171:56"><expr pos:start="171:40" pos:end="171:56"><name pos:start="171:40" pos:end="171:56">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:50"><expr pos:start="173:9" pos:end="173:49"><name pos:start="173:9" pos:end="173:13">ifctx</name> <operator pos:start="173:15" pos:end="173:15">=</operator> <call pos:start="173:17" pos:end="173:49"><name pos:start="173:17" pos:end="173:22">aml_if</name><argument_list pos:start="173:23" pos:end="173:49">(<argument pos:start="173:24" pos:end="173:48"><expr pos:start="173:24" pos:end="173:48"><call pos:start="173:24" pos:end="173:48"><name pos:start="173:24" pos:end="173:32">aml_equal</name><argument_list pos:start="173:33" pos:end="173:48">(<argument pos:start="173:34" pos:end="173:41"><expr pos:start="173:34" pos:end="173:41"><name pos:start="173:34" pos:end="173:41">slots_nr</name></expr></argument>, <argument pos:start="173:44" pos:end="173:47"><expr pos:start="173:44" pos:end="173:47"><name pos:start="173:44" pos:end="173:47">zero</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="175:9" pos:end="179:9">{<block_content pos:start="177:13" pos:end="177:48">

            <expr_stmt pos:start="177:13" pos:end="177:48"><expr pos:start="177:13" pos:end="177:47"><call pos:start="177:13" pos:end="177:47"><name pos:start="177:13" pos:end="177:22">aml_append</name><argument_list pos:start="177:23" pos:end="177:47">(<argument pos:start="177:24" pos:end="177:28"><expr pos:start="177:24" pos:end="177:28"><name pos:start="177:24" pos:end="177:28">ifctx</name></expr></argument>, <argument pos:start="177:31" pos:end="177:46"><expr pos:start="177:31" pos:end="177:46"><call pos:start="177:31" pos:end="177:46"><name pos:start="177:31" pos:end="177:40">aml_return</name><argument_list pos:start="177:41" pos:end="177:46">(<argument pos:start="177:42" pos:end="177:45"><expr pos:start="177:42" pos:end="177:45"><name pos:start="177:42" pos:end="177:45">zero</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="181:9" pos:end="181:34"><expr pos:start="181:9" pos:end="181:33"><call pos:start="181:9" pos:end="181:33"><name pos:start="181:9" pos:end="181:18">aml_append</name><argument_list pos:start="181:19" pos:end="181:33">(<argument pos:start="181:20" pos:end="181:25"><expr pos:start="181:20" pos:end="181:25"><name pos:start="181:20" pos:end="181:25">method</name></expr></argument>, <argument pos:start="181:28" pos:end="181:32"><expr pos:start="181:28" pos:end="181:32"><name pos:start="181:28" pos:end="181:32">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="183:9" pos:end="183:61">/* present, functioning, decoding, not shown in UI */</comment>

        <expr_stmt pos:start="185:9" pos:end="185:53"><expr pos:start="185:9" pos:end="185:52"><call pos:start="185:9" pos:end="185:52"><name pos:start="185:9" pos:end="185:18">aml_append</name><argument_list pos:start="185:19" pos:end="185:52">(<argument pos:start="185:20" pos:end="185:25"><expr pos:start="185:20" pos:end="185:25"><name pos:start="185:20" pos:end="185:25">method</name></expr></argument>, <argument pos:start="185:28" pos:end="185:51"><expr pos:start="185:28" pos:end="185:51"><call pos:start="185:28" pos:end="185:51"><name pos:start="185:28" pos:end="185:37">aml_return</name><argument_list pos:start="185:38" pos:end="185:51">(<argument pos:start="185:39" pos:end="185:50"><expr pos:start="185:39" pos:end="185:50"><call pos:start="185:39" pos:end="185:50"><name pos:start="185:39" pos:end="185:45">aml_int</name><argument_list pos:start="185:46" pos:end="185:50">(<argument pos:start="185:47" pos:end="185:49"><expr pos:start="185:47" pos:end="185:49"><literal type="number" pos:start="185:47" pos:end="185:49">0xB</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:41"><expr pos:start="187:9" pos:end="187:40"><call pos:start="187:9" pos:end="187:40"><name pos:start="187:9" pos:end="187:18">aml_append</name><argument_list pos:start="187:19" pos:end="187:40">(<argument pos:start="187:20" pos:end="187:31"><expr pos:start="187:20" pos:end="187:31"><name pos:start="187:20" pos:end="187:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="187:34" pos:end="187:39"><expr pos:start="187:34" pos:end="187:39"><name pos:start="187:34" pos:end="187:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="191:9" pos:end="191:65"><expr pos:start="191:9" pos:end="191:64"><call pos:start="191:9" pos:end="191:64"><name pos:start="191:9" pos:end="191:18">aml_append</name><argument_list pos:start="191:19" pos:end="191:64">(<argument pos:start="191:20" pos:end="191:31"><expr pos:start="191:20" pos:end="191:31"><name pos:start="191:20" pos:end="191:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="191:34" pos:end="191:63"><expr pos:start="191:34" pos:end="191:63"><call pos:start="191:34" pos:end="191:63"><name pos:start="191:34" pos:end="191:42">aml_mutex</name><argument_list pos:start="191:43" pos:end="191:63">(<argument pos:start="191:44" pos:end="191:59"><expr pos:start="191:44" pos:end="191:59"><name pos:start="191:44" pos:end="191:59">MEMORY_SLOT_LOCK</name></expr></argument>, <argument pos:start="191:62" pos:end="191:62"><expr pos:start="191:62" pos:end="191:62"><literal type="number" pos:start="191:62" pos:end="191:62">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:75"><expr pos:start="195:9" pos:end="195:74"><name pos:start="195:9" pos:end="195:14">method</name> <operator pos:start="195:16" pos:end="195:16">=</operator> <call pos:start="195:18" pos:end="195:74"><name pos:start="195:18" pos:end="195:27">aml_method</name><argument_list pos:start="195:28" pos:end="195:74">(<argument pos:start="195:29" pos:end="195:51"><expr pos:start="195:29" pos:end="195:51"><name pos:start="195:29" pos:end="195:51">MEMORY_SLOT_SCAN_METHOD</name></expr></argument>, <argument pos:start="195:54" pos:end="195:54"><expr pos:start="195:54" pos:end="195:54"><literal type="number" pos:start="195:54" pos:end="195:54">0</literal></expr></argument>, <argument pos:start="195:57" pos:end="195:73"><expr pos:start="195:57" pos:end="195:73"><name pos:start="195:57" pos:end="195:73">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="197:9" pos:end="301:9">{<block_content pos:start="199:13" pos:end="299:48">

            <decl_stmt pos:start="199:13" pos:end="199:26"><decl pos:start="199:13" pos:end="199:25"><type pos:start="199:13" pos:end="199:17"><name pos:start="199:13" pos:end="199:15">Aml</name> <modifier pos:start="199:17" pos:end="199:17">*</modifier></type><name pos:start="199:18" pos:end="199:25">else_ctx</name></decl>;</decl_stmt>

            <decl_stmt pos:start="201:13" pos:end="201:27"><decl pos:start="201:13" pos:end="201:26"><type pos:start="201:13" pos:end="201:17"><name pos:start="201:13" pos:end="201:15">Aml</name> <modifier pos:start="201:17" pos:end="201:17">*</modifier></type><name pos:start="201:18" pos:end="201:26">while_ctx</name></decl>;</decl_stmt>

            <decl_stmt pos:start="203:13" pos:end="203:36"><decl pos:start="203:13" pos:end="203:35"><type pos:start="203:13" pos:end="203:17"><name pos:start="203:13" pos:end="203:15">Aml</name> <modifier pos:start="203:17" pos:end="203:17">*</modifier></type><name pos:start="203:18" pos:end="203:20">idx</name> <init pos:start="203:22" pos:end="203:35">= <expr pos:start="203:24" pos:end="203:35"><call pos:start="203:24" pos:end="203:35"><name pos:start="203:24" pos:end="203:32">aml_local</name><argument_list pos:start="203:33" pos:end="203:35">(<argument pos:start="203:34" pos:end="203:34"><expr pos:start="203:34" pos:end="203:34"><literal type="number" pos:start="203:34" pos:end="203:34">0</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="205:13" pos:end="205:40"><decl pos:start="205:13" pos:end="205:39"><type pos:start="205:13" pos:end="205:17"><name pos:start="205:13" pos:end="205:15">Aml</name> <modifier pos:start="205:17" pos:end="205:17">*</modifier></type><name pos:start="205:18" pos:end="205:26">eject_req</name> <init pos:start="205:28" pos:end="205:39">= <expr pos:start="205:30" pos:end="205:39"><call pos:start="205:30" pos:end="205:39"><name pos:start="205:30" pos:end="205:36">aml_int</name><argument_list pos:start="205:37" pos:end="205:39">(<argument pos:start="205:38" pos:end="205:38"><expr pos:start="205:38" pos:end="205:38"><literal type="number" pos:start="205:38" pos:end="205:38">3</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="207:13" pos:end="207:38"><decl pos:start="207:13" pos:end="207:37"><type pos:start="207:13" pos:end="207:17"><name pos:start="207:13" pos:end="207:15">Aml</name> <modifier pos:start="207:17" pos:end="207:17">*</modifier></type><name pos:start="207:18" pos:end="207:24">dev_chk</name> <init pos:start="207:26" pos:end="207:37">= <expr pos:start="207:28" pos:end="207:37"><call pos:start="207:28" pos:end="207:37"><name pos:start="207:28" pos:end="207:34">aml_int</name><argument_list pos:start="207:35" pos:end="207:37">(<argument pos:start="207:36" pos:end="207:36"><expr pos:start="207:36" pos:end="207:36"><literal type="number" pos:start="207:36" pos:end="207:36">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="211:13" pos:end="211:54"><expr pos:start="211:13" pos:end="211:53"><name pos:start="211:13" pos:end="211:17">ifctx</name> <operator pos:start="211:19" pos:end="211:19">=</operator> <call pos:start="211:21" pos:end="211:53"><name pos:start="211:21" pos:end="211:26">aml_if</name><argument_list pos:start="211:27" pos:end="211:53">(<argument pos:start="211:28" pos:end="211:52"><expr pos:start="211:28" pos:end="211:52"><call pos:start="211:28" pos:end="211:52"><name pos:start="211:28" pos:end="211:36">aml_equal</name><argument_list pos:start="211:37" pos:end="211:52">(<argument pos:start="211:38" pos:end="211:45"><expr pos:start="211:38" pos:end="211:45"><name pos:start="211:38" pos:end="211:45">slots_nr</name></expr></argument>, <argument pos:start="211:48" pos:end="211:51"><expr pos:start="211:48" pos:end="211:51"><name pos:start="211:48" pos:end="211:51">zero</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="213:13" pos:end="217:13">{<block_content pos:start="215:17" pos:end="215:52">

                <expr_stmt pos:start="215:17" pos:end="215:52"><expr pos:start="215:17" pos:end="215:51"><call pos:start="215:17" pos:end="215:51"><name pos:start="215:17" pos:end="215:26">aml_append</name><argument_list pos:start="215:27" pos:end="215:51">(<argument pos:start="215:28" pos:end="215:32"><expr pos:start="215:28" pos:end="215:32"><name pos:start="215:28" pos:end="215:32">ifctx</name></expr></argument>, <argument pos:start="215:35" pos:end="215:50"><expr pos:start="215:35" pos:end="215:50"><call pos:start="215:35" pos:end="215:50"><name pos:start="215:35" pos:end="215:44">aml_return</name><argument_list pos:start="215:45" pos:end="215:50">(<argument pos:start="215:46" pos:end="215:49"><expr pos:start="215:46" pos:end="215:49"><name pos:start="215:46" pos:end="215:49">zero</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="219:13" pos:end="219:38"><expr pos:start="219:13" pos:end="219:37"><call pos:start="219:13" pos:end="219:37"><name pos:start="219:13" pos:end="219:22">aml_append</name><argument_list pos:start="219:23" pos:end="219:37">(<argument pos:start="219:24" pos:end="219:29"><expr pos:start="219:24" pos:end="219:29"><name pos:start="219:24" pos:end="219:29">method</name></expr></argument>, <argument pos:start="219:32" pos:end="219:36"><expr pos:start="219:32" pos:end="219:36"><name pos:start="219:32" pos:end="219:36">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="223:13" pos:end="223:53"><expr pos:start="223:13" pos:end="223:52"><call pos:start="223:13" pos:end="223:52"><name pos:start="223:13" pos:end="223:22">aml_append</name><argument_list pos:start="223:23" pos:end="223:52">(<argument pos:start="223:24" pos:end="223:29"><expr pos:start="223:24" pos:end="223:29"><name pos:start="223:24" pos:end="223:29">method</name></expr></argument>, <argument pos:start="223:32" pos:end="223:51"><expr pos:start="223:32" pos:end="223:51"><call pos:start="223:32" pos:end="223:51"><name pos:start="223:32" pos:end="223:40">aml_store</name><argument_list pos:start="223:41" pos:end="223:51">(<argument pos:start="223:42" pos:end="223:45"><expr pos:start="223:42" pos:end="223:45"><name pos:start="223:42" pos:end="223:45">zero</name></expr></argument>, <argument pos:start="223:48" pos:end="223:50"><expr pos:start="223:48" pos:end="223:50"><name pos:start="223:48" pos:end="223:50">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="225:13" pos:end="225:63"><expr pos:start="225:13" pos:end="225:62"><call pos:start="225:13" pos:end="225:62"><name pos:start="225:13" pos:end="225:22">aml_append</name><argument_list pos:start="225:23" pos:end="225:62">(<argument pos:start="225:24" pos:end="225:29"><expr pos:start="225:24" pos:end="225:29"><name pos:start="225:24" pos:end="225:29">method</name></expr></argument>, <argument pos:start="225:32" pos:end="225:61"><expr pos:start="225:32" pos:end="225:61"><call pos:start="225:32" pos:end="225:61"><name pos:start="225:32" pos:end="225:42">aml_acquire</name><argument_list pos:start="225:43" pos:end="225:61">(<argument pos:start="225:44" pos:end="225:52"><expr pos:start="225:44" pos:end="225:52"><name pos:start="225:44" pos:end="225:52">ctrl_lock</name></expr></argument>, <argument pos:start="225:55" pos:end="225:60"><expr pos:start="225:55" pos:end="225:60"><literal type="number" pos:start="225:55" pos:end="225:60">0xFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="227:13" pos:end="237:15">/* build AML that:

             * loops over all slots and Notifies DIMMs with

             * Device Check or Eject Request notifications if

             * slot has corresponding status bit set and clears

             * slot status.

             */</comment>

            <expr_stmt pos:start="239:13" pos:end="239:60"><expr pos:start="239:13" pos:end="239:59"><name pos:start="239:13" pos:end="239:21">while_ctx</name> <operator pos:start="239:23" pos:end="239:23">=</operator> <call pos:start="239:25" pos:end="239:59"><name pos:start="239:25" pos:end="239:33">aml_while</name><argument_list pos:start="239:34" pos:end="239:59">(<argument pos:start="239:35" pos:end="239:58"><expr pos:start="239:35" pos:end="239:58"><call pos:start="239:35" pos:end="239:58"><name pos:start="239:35" pos:end="239:43">aml_lless</name><argument_list pos:start="239:44" pos:end="239:58">(<argument pos:start="239:45" pos:end="239:47"><expr pos:start="239:45" pos:end="239:47"><name pos:start="239:45" pos:end="239:47">idx</name></expr></argument>, <argument pos:start="239:50" pos:end="239:57"><expr pos:start="239:50" pos:end="239:57"><name pos:start="239:50" pos:end="239:57">slots_nr</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="241:13" pos:end="293:13">{<block_content pos:start="243:17" pos:end="291:62">

                <decl_stmt pos:start="243:17" pos:end="243:66"><decl pos:start="243:17" pos:end="243:65"><type pos:start="243:17" pos:end="243:21"><name pos:start="243:17" pos:end="243:19">Aml</name> <modifier pos:start="243:21" pos:end="243:21">*</modifier></type><name pos:start="243:22" pos:end="243:28">ins_evt</name> <init pos:start="243:30" pos:end="243:65">= <expr pos:start="243:32" pos:end="243:65"><call pos:start="243:32" pos:end="243:65"><name pos:start="243:32" pos:end="243:39">aml_name</name><argument_list pos:start="243:40" pos:end="243:65">(<argument pos:start="243:41" pos:end="243:64"><expr pos:start="243:41" pos:end="243:64"><name pos:start="243:41" pos:end="243:64">MEMORY_SLOT_INSERT_EVENT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="245:17" pos:end="245:65"><decl pos:start="245:17" pos:end="245:64"><type pos:start="245:17" pos:end="245:21"><name pos:start="245:17" pos:end="245:19">Aml</name> <modifier pos:start="245:21" pos:end="245:21">*</modifier></type><name pos:start="245:22" pos:end="245:27">rm_evt</name> <init pos:start="245:29" pos:end="245:64">= <expr pos:start="245:31" pos:end="245:64"><call pos:start="245:31" pos:end="245:64"><name pos:start="245:31" pos:end="245:38">aml_name</name><argument_list pos:start="245:39" pos:end="245:64">(<argument pos:start="245:40" pos:end="245:63"><expr pos:start="245:40" pos:end="245:63"><name pos:start="245:40" pos:end="245:63">MEMORY_SLOT_REMOVE_EVENT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="249:17" pos:end="249:69"><expr pos:start="249:17" pos:end="249:68"><call pos:start="249:17" pos:end="249:68"><name pos:start="249:17" pos:end="249:26">aml_append</name><argument_list pos:start="249:27" pos:end="249:68">(<argument pos:start="249:28" pos:end="249:36"><expr pos:start="249:28" pos:end="249:36"><name pos:start="249:28" pos:end="249:36">while_ctx</name></expr></argument>, <argument pos:start="249:39" pos:end="249:67"><expr pos:start="249:39" pos:end="249:67"><call pos:start="249:39" pos:end="249:67"><name pos:start="249:39" pos:end="249:47">aml_store</name><argument_list pos:start="249:48" pos:end="249:67">(<argument pos:start="249:49" pos:end="249:51"><expr pos:start="249:49" pos:end="249:51"><name pos:start="249:49" pos:end="249:51">idx</name></expr></argument>, <argument pos:start="249:54" pos:end="249:66"><expr pos:start="249:54" pos:end="249:66"><name pos:start="249:54" pos:end="249:66">slot_selector</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="251:17" pos:end="251:56"><expr pos:start="251:17" pos:end="251:55"><name pos:start="251:17" pos:end="251:21">ifctx</name> <operator pos:start="251:23" pos:end="251:23">=</operator> <call pos:start="251:25" pos:end="251:55"><name pos:start="251:25" pos:end="251:30">aml_if</name><argument_list pos:start="251:31" pos:end="251:55">(<argument pos:start="251:32" pos:end="251:54"><expr pos:start="251:32" pos:end="251:54"><call pos:start="251:32" pos:end="251:54"><name pos:start="251:32" pos:end="251:40">aml_equal</name><argument_list pos:start="251:41" pos:end="251:54">(<argument pos:start="251:42" pos:end="251:48"><expr pos:start="251:42" pos:end="251:48"><name pos:start="251:42" pos:end="251:48">ins_evt</name></expr></argument>, <argument pos:start="251:51" pos:end="251:53"><expr pos:start="251:51" pos:end="251:53"><name pos:start="251:51" pos:end="251:53">one</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="253:17" pos:end="263:17">{<block_content pos:start="255:21" pos:end="261:63">

                    <expr_stmt pos:start="255:21" pos:end="259:56"><expr pos:start="255:21" pos:end="259:55"><call pos:start="255:21" pos:end="259:55"><name pos:start="255:21" pos:end="255:30">aml_append</name><argument_list pos:start="255:31" pos:end="259:55">(<argument pos:start="255:32" pos:end="255:36"><expr pos:start="255:32" pos:end="255:36"><name pos:start="255:32" pos:end="255:36">ifctx</name></expr></argument>,

                               <argument pos:start="257:32" pos:end="259:54"><expr pos:start="257:32" pos:end="259:54"><call pos:start="257:32" pos:end="259:54"><name pos:start="257:32" pos:end="257:40">aml_call2</name><argument_list pos:start="257:41" pos:end="259:54">(<argument pos:start="257:42" pos:end="257:66"><expr pos:start="257:42" pos:end="257:66"><name pos:start="257:42" pos:end="257:66">MEMORY_SLOT_NOTIFY_METHOD</name></expr></argument>,

                                         <argument pos:start="259:42" pos:end="259:44"><expr pos:start="259:42" pos:end="259:44"><name pos:start="259:42" pos:end="259:44">idx</name></expr></argument>, <argument pos:start="259:47" pos:end="259:53"><expr pos:start="259:47" pos:end="259:53"><name pos:start="259:47" pos:end="259:53">dev_chk</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="261:21" pos:end="261:63"><expr pos:start="261:21" pos:end="261:62"><call pos:start="261:21" pos:end="261:62"><name pos:start="261:21" pos:end="261:30">aml_append</name><argument_list pos:start="261:31" pos:end="261:62">(<argument pos:start="261:32" pos:end="261:36"><expr pos:start="261:32" pos:end="261:36"><name pos:start="261:32" pos:end="261:36">ifctx</name></expr></argument>, <argument pos:start="261:39" pos:end="261:61"><expr pos:start="261:39" pos:end="261:61"><call pos:start="261:39" pos:end="261:61"><name pos:start="261:39" pos:end="261:47">aml_store</name><argument_list pos:start="261:48" pos:end="261:61">(<argument pos:start="261:49" pos:end="261:51"><expr pos:start="261:49" pos:end="261:51"><name pos:start="261:49" pos:end="261:51">one</name></expr></argument>, <argument pos:start="261:54" pos:end="261:60"><expr pos:start="261:54" pos:end="261:60"><name pos:start="261:54" pos:end="261:60">ins_evt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <expr_stmt pos:start="265:17" pos:end="265:45"><expr pos:start="265:17" pos:end="265:44"><call pos:start="265:17" pos:end="265:44"><name pos:start="265:17" pos:end="265:26">aml_append</name><argument_list pos:start="265:27" pos:end="265:44">(<argument pos:start="265:28" pos:end="265:36"><expr pos:start="265:28" pos:end="265:36"><name pos:start="265:28" pos:end="265:36">while_ctx</name></expr></argument>, <argument pos:start="265:39" pos:end="265:43"><expr pos:start="265:39" pos:end="265:43"><name pos:start="265:39" pos:end="265:43">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="269:17" pos:end="269:38"><expr pos:start="269:17" pos:end="269:37"><name pos:start="269:17" pos:end="269:24">else_ctx</name> <operator pos:start="269:26" pos:end="269:26">=</operator> <call pos:start="269:28" pos:end="269:37"><name pos:start="269:28" pos:end="269:35">aml_else</name><argument_list pos:start="269:36" pos:end="269:37">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="271:17" pos:end="271:55"><expr pos:start="271:17" pos:end="271:54"><name pos:start="271:17" pos:end="271:21">ifctx</name> <operator pos:start="271:23" pos:end="271:23">=</operator> <call pos:start="271:25" pos:end="271:54"><name pos:start="271:25" pos:end="271:30">aml_if</name><argument_list pos:start="271:31" pos:end="271:54">(<argument pos:start="271:32" pos:end="271:53"><expr pos:start="271:32" pos:end="271:53"><call pos:start="271:32" pos:end="271:53"><name pos:start="271:32" pos:end="271:40">aml_equal</name><argument_list pos:start="271:41" pos:end="271:53">(<argument pos:start="271:42" pos:end="271:47"><expr pos:start="271:42" pos:end="271:47"><name pos:start="271:42" pos:end="271:47">rm_evt</name></expr></argument>, <argument pos:start="271:50" pos:end="271:52"><expr pos:start="271:50" pos:end="271:52"><name pos:start="271:50" pos:end="271:52">one</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <block pos:start="273:17" pos:end="283:17">{<block_content pos:start="275:21" pos:end="281:62">

                    <expr_stmt pos:start="275:21" pos:end="279:51"><expr pos:start="275:21" pos:end="279:50"><call pos:start="275:21" pos:end="279:50"><name pos:start="275:21" pos:end="275:30">aml_append</name><argument_list pos:start="275:31" pos:end="279:50">(<argument pos:start="275:32" pos:end="275:36"><expr pos:start="275:32" pos:end="275:36"><name pos:start="275:32" pos:end="275:36">ifctx</name></expr></argument>,

                        <argument pos:start="277:25" pos:end="279:49"><expr pos:start="277:25" pos:end="279:49"><call pos:start="277:25" pos:end="279:49"><name pos:start="277:25" pos:end="277:33">aml_call2</name><argument_list pos:start="277:34" pos:end="279:49">(<argument pos:start="277:35" pos:end="277:59"><expr pos:start="277:35" pos:end="277:59"><name pos:start="277:35" pos:end="277:59">MEMORY_SLOT_NOTIFY_METHOD</name></expr></argument>,

                                  <argument pos:start="279:35" pos:end="279:37"><expr pos:start="279:35" pos:end="279:37"><name pos:start="279:35" pos:end="279:37">idx</name></expr></argument>, <argument pos:start="279:40" pos:end="279:48"><expr pos:start="279:40" pos:end="279:48"><name pos:start="279:40" pos:end="279:48">eject_req</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="281:21" pos:end="281:62"><expr pos:start="281:21" pos:end="281:61"><call pos:start="281:21" pos:end="281:61"><name pos:start="281:21" pos:end="281:30">aml_append</name><argument_list pos:start="281:31" pos:end="281:61">(<argument pos:start="281:32" pos:end="281:36"><expr pos:start="281:32" pos:end="281:36"><name pos:start="281:32" pos:end="281:36">ifctx</name></expr></argument>, <argument pos:start="281:39" pos:end="281:60"><expr pos:start="281:39" pos:end="281:60"><call pos:start="281:39" pos:end="281:60"><name pos:start="281:39" pos:end="281:47">aml_store</name><argument_list pos:start="281:48" pos:end="281:60">(<argument pos:start="281:49" pos:end="281:51"><expr pos:start="281:49" pos:end="281:51"><name pos:start="281:49" pos:end="281:51">one</name></expr></argument>, <argument pos:start="281:54" pos:end="281:59"><expr pos:start="281:54" pos:end="281:59"><name pos:start="281:54" pos:end="281:59">rm_evt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block>

                <expr_stmt pos:start="285:17" pos:end="285:44"><expr pos:start="285:17" pos:end="285:43"><call pos:start="285:17" pos:end="285:43"><name pos:start="285:17" pos:end="285:26">aml_append</name><argument_list pos:start="285:27" pos:end="285:43">(<argument pos:start="285:28" pos:end="285:35"><expr pos:start="285:28" pos:end="285:35"><name pos:start="285:28" pos:end="285:35">else_ctx</name></expr></argument>, <argument pos:start="285:38" pos:end="285:42"><expr pos:start="285:38" pos:end="285:42"><name pos:start="285:38" pos:end="285:42">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:48"><expr pos:start="287:17" pos:end="287:47"><call pos:start="287:17" pos:end="287:47"><name pos:start="287:17" pos:end="287:26">aml_append</name><argument_list pos:start="287:27" pos:end="287:47">(<argument pos:start="287:28" pos:end="287:36"><expr pos:start="287:28" pos:end="287:36"><name pos:start="287:28" pos:end="287:36">while_ctx</name></expr></argument>, <argument pos:start="287:39" pos:end="287:46"><expr pos:start="287:39" pos:end="287:46"><name pos:start="287:39" pos:end="287:46">else_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="291:17" pos:end="291:62"><expr pos:start="291:17" pos:end="291:61"><call pos:start="291:17" pos:end="291:61"><name pos:start="291:17" pos:end="291:26">aml_append</name><argument_list pos:start="291:27" pos:end="291:61">(<argument pos:start="291:28" pos:end="291:36"><expr pos:start="291:28" pos:end="291:36"><name pos:start="291:28" pos:end="291:36">while_ctx</name></expr></argument>, <argument pos:start="291:39" pos:end="291:60"><expr pos:start="291:39" pos:end="291:60"><call pos:start="291:39" pos:end="291:60"><name pos:start="291:39" pos:end="291:45">aml_add</name><argument_list pos:start="291:46" pos:end="291:60">(<argument pos:start="291:47" pos:end="291:49"><expr pos:start="291:47" pos:end="291:49"><name pos:start="291:47" pos:end="291:49">idx</name></expr></argument>, <argument pos:start="291:52" pos:end="291:54"><expr pos:start="291:52" pos:end="291:54"><name pos:start="291:52" pos:end="291:54">one</name></expr></argument>, <argument pos:start="291:57" pos:end="291:59"><expr pos:start="291:57" pos:end="291:59"><name pos:start="291:57" pos:end="291:59">idx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="295:13" pos:end="295:42"><expr pos:start="295:13" pos:end="295:41"><call pos:start="295:13" pos:end="295:41"><name pos:start="295:13" pos:end="295:22">aml_append</name><argument_list pos:start="295:23" pos:end="295:41">(<argument pos:start="295:24" pos:end="295:29"><expr pos:start="295:24" pos:end="295:29"><name pos:start="295:24" pos:end="295:29">method</name></expr></argument>, <argument pos:start="295:32" pos:end="295:40"><expr pos:start="295:32" pos:end="295:40"><name pos:start="295:32" pos:end="295:40">while_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="297:13" pos:end="297:55"><expr pos:start="297:13" pos:end="297:54"><call pos:start="297:13" pos:end="297:54"><name pos:start="297:13" pos:end="297:22">aml_append</name><argument_list pos:start="297:23" pos:end="297:54">(<argument pos:start="297:24" pos:end="297:29"><expr pos:start="297:24" pos:end="297:29"><name pos:start="297:24" pos:end="297:29">method</name></expr></argument>, <argument pos:start="297:32" pos:end="297:53"><expr pos:start="297:32" pos:end="297:53"><call pos:start="297:32" pos:end="297:53"><name pos:start="297:32" pos:end="297:42">aml_release</name><argument_list pos:start="297:43" pos:end="297:53">(<argument pos:start="297:44" pos:end="297:52"><expr pos:start="297:44" pos:end="297:52"><name pos:start="297:44" pos:end="297:52">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="299:13" pos:end="299:48"><expr pos:start="299:13" pos:end="299:47"><call pos:start="299:13" pos:end="299:47"><name pos:start="299:13" pos:end="299:22">aml_append</name><argument_list pos:start="299:23" pos:end="299:47">(<argument pos:start="299:24" pos:end="299:29"><expr pos:start="299:24" pos:end="299:29"><name pos:start="299:24" pos:end="299:29">method</name></expr></argument>, <argument pos:start="299:32" pos:end="299:46"><expr pos:start="299:32" pos:end="299:46"><call pos:start="299:32" pos:end="299:46"><name pos:start="299:32" pos:end="299:41">aml_return</name><argument_list pos:start="299:42" pos:end="299:46">(<argument pos:start="299:43" pos:end="299:45"><expr pos:start="299:43" pos:end="299:45"><name pos:start="299:43" pos:end="299:45">one</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="303:9" pos:end="303:41"><expr pos:start="303:9" pos:end="303:40"><call pos:start="303:9" pos:end="303:40"><name pos:start="303:9" pos:end="303:18">aml_append</name><argument_list pos:start="303:19" pos:end="303:40">(<argument pos:start="303:20" pos:end="303:31"><expr pos:start="303:20" pos:end="303:31"><name pos:start="303:20" pos:end="303:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="303:34" pos:end="303:39"><expr pos:start="303:34" pos:end="303:39"><name pos:start="303:34" pos:end="303:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:77"><expr pos:start="307:9" pos:end="307:76"><name pos:start="307:9" pos:end="307:14">method</name> <operator pos:start="307:16" pos:end="307:16">=</operator> <call pos:start="307:18" pos:end="307:76"><name pos:start="307:18" pos:end="307:27">aml_method</name><argument_list pos:start="307:28" pos:end="307:76">(<argument pos:start="307:29" pos:end="307:53"><expr pos:start="307:29" pos:end="307:53"><name pos:start="307:29" pos:end="307:53">MEMORY_SLOT_STATUS_METHOD</name></expr></argument>, <argument pos:start="307:56" pos:end="307:56"><expr pos:start="307:56" pos:end="307:56"><literal type="number" pos:start="307:56" pos:end="307:56">1</literal></expr></argument>, <argument pos:start="307:59" pos:end="307:75"><expr pos:start="307:59" pos:end="307:75"><name pos:start="307:59" pos:end="307:75">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="309:9" pos:end="341:9">{<block_content pos:start="311:13" pos:end="339:52">

            <decl_stmt pos:start="311:13" pos:end="311:62"><decl pos:start="311:13" pos:end="311:61"><type pos:start="311:13" pos:end="311:17"><name pos:start="311:13" pos:end="311:15">Aml</name> <modifier pos:start="311:17" pos:end="311:17">*</modifier></type><name pos:start="311:18" pos:end="311:29">slot_enabled</name> <init pos:start="311:31" pos:end="311:61">= <expr pos:start="311:33" pos:end="311:61"><call pos:start="311:33" pos:end="311:61"><name pos:start="311:33" pos:end="311:40">aml_name</name><argument_list pos:start="311:41" pos:end="311:61">(<argument pos:start="311:42" pos:end="311:60"><expr pos:start="311:42" pos:end="311:60"><name pos:start="311:42" pos:end="311:60">MEMORY_SLOT_ENABLED</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="315:13" pos:end="315:57"><expr pos:start="315:13" pos:end="315:56"><call pos:start="315:13" pos:end="315:56"><name pos:start="315:13" pos:end="315:22">aml_append</name><argument_list pos:start="315:23" pos:end="315:56">(<argument pos:start="315:24" pos:end="315:29"><expr pos:start="315:24" pos:end="315:29"><name pos:start="315:24" pos:end="315:29">method</name></expr></argument>, <argument pos:start="315:32" pos:end="315:55"><expr pos:start="315:32" pos:end="315:55"><call pos:start="315:32" pos:end="315:55"><name pos:start="315:32" pos:end="315:40">aml_store</name><argument_list pos:start="315:41" pos:end="315:55">(<argument pos:start="315:42" pos:end="315:45"><expr pos:start="315:42" pos:end="315:45"><name pos:start="315:42" pos:end="315:45">zero</name></expr></argument>, <argument pos:start="315:48" pos:end="315:54"><expr pos:start="315:48" pos:end="315:54"><name pos:start="315:48" pos:end="315:54">ret_val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="317:13" pos:end="317:63"><expr pos:start="317:13" pos:end="317:62"><call pos:start="317:13" pos:end="317:62"><name pos:start="317:13" pos:end="317:22">aml_append</name><argument_list pos:start="317:23" pos:end="317:62">(<argument pos:start="317:24" pos:end="317:29"><expr pos:start="317:24" pos:end="317:29"><name pos:start="317:24" pos:end="317:29">method</name></expr></argument>, <argument pos:start="317:32" pos:end="317:61"><expr pos:start="317:32" pos:end="317:61"><call pos:start="317:32" pos:end="317:61"><name pos:start="317:32" pos:end="317:42">aml_acquire</name><argument_list pos:start="317:43" pos:end="317:61">(<argument pos:start="317:44" pos:end="317:52"><expr pos:start="317:44" pos:end="317:52"><name pos:start="317:44" pos:end="317:52">ctrl_lock</name></expr></argument>, <argument pos:start="317:55" pos:end="317:60"><expr pos:start="317:55" pos:end="317:60"><literal type="number" pos:start="317:55" pos:end="317:60">0xFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="319:13" pos:end="321:69"><expr pos:start="319:13" pos:end="321:68"><call pos:start="319:13" pos:end="321:68"><name pos:start="319:13" pos:end="319:22">aml_append</name><argument_list pos:start="319:23" pos:end="321:68">(<argument pos:start="319:24" pos:end="319:29"><expr pos:start="319:24" pos:end="319:29"><name pos:start="319:24" pos:end="319:29">method</name></expr></argument>,

                <argument pos:start="321:17" pos:end="321:67"><expr pos:start="321:17" pos:end="321:67"><call pos:start="321:17" pos:end="321:67"><name pos:start="321:17" pos:end="321:25">aml_store</name><argument_list pos:start="321:26" pos:end="321:67">(<argument pos:start="321:27" pos:end="321:51"><expr pos:start="321:27" pos:end="321:51"><call pos:start="321:27" pos:end="321:51"><name pos:start="321:27" pos:end="321:40">aml_to_integer</name><argument_list pos:start="321:41" pos:end="321:51">(<argument pos:start="321:42" pos:end="321:50"><expr pos:start="321:42" pos:end="321:50"><name pos:start="321:42" pos:end="321:50">slot_arg0</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="321:54" pos:end="321:66"><expr pos:start="321:54" pos:end="321:66"><name pos:start="321:54" pos:end="321:66">slot_selector</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="325:13" pos:end="325:57"><expr pos:start="325:13" pos:end="325:56"><name pos:start="325:13" pos:end="325:17">ifctx</name> <operator pos:start="325:19" pos:end="325:19">=</operator> <call pos:start="325:21" pos:end="325:56"><name pos:start="325:21" pos:end="325:26">aml_if</name><argument_list pos:start="325:27" pos:end="325:56">(<argument pos:start="325:28" pos:end="325:55"><expr pos:start="325:28" pos:end="325:55"><call pos:start="325:28" pos:end="325:55"><name pos:start="325:28" pos:end="325:36">aml_equal</name><argument_list pos:start="325:37" pos:end="325:55">(<argument pos:start="325:38" pos:end="325:49"><expr pos:start="325:38" pos:end="325:49"><name pos:start="325:38" pos:end="325:49">slot_enabled</name></expr></argument>, <argument pos:start="325:52" pos:end="325:54"><expr pos:start="325:52" pos:end="325:54"><name pos:start="325:52" pos:end="325:54">one</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="327:13" pos:end="331:13">{<block_content pos:start="329:17" pos:end="329:68">

                <expr_stmt pos:start="329:17" pos:end="329:68"><expr pos:start="329:17" pos:end="329:67"><call pos:start="329:17" pos:end="329:67"><name pos:start="329:17" pos:end="329:26">aml_append</name><argument_list pos:start="329:27" pos:end="329:67">(<argument pos:start="329:28" pos:end="329:32"><expr pos:start="329:28" pos:end="329:32"><name pos:start="329:28" pos:end="329:32">ifctx</name></expr></argument>, <argument pos:start="329:35" pos:end="329:66"><expr pos:start="329:35" pos:end="329:66"><call pos:start="329:35" pos:end="329:66"><name pos:start="329:35" pos:end="329:43">aml_store</name><argument_list pos:start="329:44" pos:end="329:66">(<argument pos:start="329:45" pos:end="329:56"><expr pos:start="329:45" pos:end="329:56"><call pos:start="329:45" pos:end="329:56"><name pos:start="329:45" pos:end="329:51">aml_int</name><argument_list pos:start="329:52" pos:end="329:56">(<argument pos:start="329:53" pos:end="329:55"><expr pos:start="329:53" pos:end="329:55"><literal type="number" pos:start="329:53" pos:end="329:55">0xF</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="329:59" pos:end="329:65"><expr pos:start="329:59" pos:end="329:65"><name pos:start="329:59" pos:end="329:65">ret_val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="333:13" pos:end="333:38"><expr pos:start="333:13" pos:end="333:37"><call pos:start="333:13" pos:end="333:37"><name pos:start="333:13" pos:end="333:22">aml_append</name><argument_list pos:start="333:23" pos:end="333:37">(<argument pos:start="333:24" pos:end="333:29"><expr pos:start="333:24" pos:end="333:29"><name pos:start="333:24" pos:end="333:29">method</name></expr></argument>, <argument pos:start="333:32" pos:end="333:36"><expr pos:start="333:32" pos:end="333:36"><name pos:start="333:32" pos:end="333:36">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="337:13" pos:end="337:55"><expr pos:start="337:13" pos:end="337:54"><call pos:start="337:13" pos:end="337:54"><name pos:start="337:13" pos:end="337:22">aml_append</name><argument_list pos:start="337:23" pos:end="337:54">(<argument pos:start="337:24" pos:end="337:29"><expr pos:start="337:24" pos:end="337:29"><name pos:start="337:24" pos:end="337:29">method</name></expr></argument>, <argument pos:start="337:32" pos:end="337:53"><expr pos:start="337:32" pos:end="337:53"><call pos:start="337:32" pos:end="337:53"><name pos:start="337:32" pos:end="337:42">aml_release</name><argument_list pos:start="337:43" pos:end="337:53">(<argument pos:start="337:44" pos:end="337:52"><expr pos:start="337:44" pos:end="337:52"><name pos:start="337:44" pos:end="337:52">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:52"><expr pos:start="339:13" pos:end="339:51"><call pos:start="339:13" pos:end="339:51"><name pos:start="339:13" pos:end="339:22">aml_append</name><argument_list pos:start="339:23" pos:end="339:51">(<argument pos:start="339:24" pos:end="339:29"><expr pos:start="339:24" pos:end="339:29"><name pos:start="339:24" pos:end="339:29">method</name></expr></argument>, <argument pos:start="339:32" pos:end="339:50"><expr pos:start="339:32" pos:end="339:50"><call pos:start="339:32" pos:end="339:50"><name pos:start="339:32" pos:end="339:41">aml_return</name><argument_list pos:start="339:42" pos:end="339:50">(<argument pos:start="339:43" pos:end="339:49"><expr pos:start="339:43" pos:end="339:49"><name pos:start="339:43" pos:end="339:49">ret_val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="343:9" pos:end="343:41"><expr pos:start="343:9" pos:end="343:40"><call pos:start="343:9" pos:end="343:40"><name pos:start="343:9" pos:end="343:18">aml_append</name><argument_list pos:start="343:19" pos:end="343:40">(<argument pos:start="343:20" pos:end="343:31"><expr pos:start="343:20" pos:end="343:31"><name pos:start="343:20" pos:end="343:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="343:34" pos:end="343:39"><expr pos:start="343:34" pos:end="343:39"><name pos:start="343:34" pos:end="343:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="347:9" pos:end="347:71"><expr pos:start="347:9" pos:end="347:70"><name pos:start="347:9" pos:end="347:14">method</name> <operator pos:start="347:16" pos:end="347:16">=</operator> <call pos:start="347:18" pos:end="347:70"><name pos:start="347:18" pos:end="347:27">aml_method</name><argument_list pos:start="347:28" pos:end="347:70">(<argument pos:start="347:29" pos:end="347:50"><expr pos:start="347:29" pos:end="347:50"><name pos:start="347:29" pos:end="347:50">MEMORY_SLOT_CRS_METHOD</name></expr></argument>, <argument pos:start="347:53" pos:end="347:53"><expr pos:start="347:53" pos:end="347:53"><literal type="number" pos:start="347:53" pos:end="347:53">1</literal></expr></argument>, <argument pos:start="347:56" pos:end="347:69"><expr pos:start="347:56" pos:end="347:69"><name pos:start="347:56" pos:end="347:69">AML_SERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="349:9" pos:end="523:9">{<block_content pos:start="351:13" pos:end="521:49">

            <decl_stmt pos:start="351:13" pos:end="351:41"><decl pos:start="351:13" pos:end="351:40"><type pos:start="351:13" pos:end="351:17"><name pos:start="351:13" pos:end="351:15">Aml</name> <modifier pos:start="351:17" pos:end="351:17">*</modifier></type><name pos:start="351:18" pos:end="351:21">mr64</name> <init pos:start="351:23" pos:end="351:40">= <expr pos:start="351:25" pos:end="351:40"><call pos:start="351:25" pos:end="351:40"><name pos:start="351:25" pos:end="351:32">aml_name</name><argument_list pos:start="351:33" pos:end="351:40">(<argument pos:start="351:34" pos:end="351:39"><expr pos:start="351:34" pos:end="351:39"><literal type="string" pos:start="351:34" pos:end="351:39">"MR64"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="353:13" pos:end="353:41"><decl pos:start="353:13" pos:end="353:40"><type pos:start="353:13" pos:end="353:17"><name pos:start="353:13" pos:end="353:15">Aml</name> <modifier pos:start="353:17" pos:end="353:17">*</modifier></type><name pos:start="353:18" pos:end="353:21">mr32</name> <init pos:start="353:23" pos:end="353:40">= <expr pos:start="353:25" pos:end="353:40"><call pos:start="353:25" pos:end="353:40"><name pos:start="353:25" pos:end="353:32">aml_name</name><argument_list pos:start="353:33" pos:end="353:40">(<argument pos:start="353:34" pos:end="353:39"><expr pos:start="353:34" pos:end="353:39"><literal type="string" pos:start="353:34" pos:end="353:39">"MR32"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="355:13" pos:end="355:52"><decl pos:start="355:13" pos:end="355:51"><type pos:start="355:13" pos:end="355:17"><name pos:start="355:13" pos:end="355:15">Aml</name> <modifier pos:start="355:17" pos:end="355:17">*</modifier></type><name pos:start="355:18" pos:end="355:25">crs_tmpl</name> <init pos:start="355:27" pos:end="355:51">= <expr pos:start="355:29" pos:end="355:51"><call pos:start="355:29" pos:end="355:51"><name pos:start="355:29" pos:end="355:49">aml_resource_template</name><argument_list pos:start="355:50" pos:end="355:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="357:13" pos:end="357:41"><decl pos:start="357:13" pos:end="357:40"><type pos:start="357:13" pos:end="357:17"><name pos:start="357:13" pos:end="357:15">Aml</name> <modifier pos:start="357:17" pos:end="357:17">*</modifier></type><name pos:start="357:18" pos:end="357:21">minl</name> <init pos:start="357:23" pos:end="357:40">= <expr pos:start="357:25" pos:end="357:40"><call pos:start="357:25" pos:end="357:40"><name pos:start="357:25" pos:end="357:32">aml_name</name><argument_list pos:start="357:33" pos:end="357:40">(<argument pos:start="357:34" pos:end="357:39"><expr pos:start="357:34" pos:end="357:39"><literal type="string" pos:start="357:34" pos:end="357:39">"MINL"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="359:13" pos:end="359:41"><decl pos:start="359:13" pos:end="359:40"><type pos:start="359:13" pos:end="359:17"><name pos:start="359:13" pos:end="359:15">Aml</name> <modifier pos:start="359:17" pos:end="359:17">*</modifier></type><name pos:start="359:18" pos:end="359:21">minh</name> <init pos:start="359:23" pos:end="359:40">= <expr pos:start="359:25" pos:end="359:40"><call pos:start="359:25" pos:end="359:40"><name pos:start="359:25" pos:end="359:32">aml_name</name><argument_list pos:start="359:33" pos:end="359:40">(<argument pos:start="359:34" pos:end="359:39"><expr pos:start="359:34" pos:end="359:39"><literal type="string" pos:start="359:34" pos:end="359:39">"MINH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="361:13" pos:end="361:42"><decl pos:start="361:13" pos:end="361:41"><type pos:start="361:13" pos:end="361:17"><name pos:start="361:13" pos:end="361:15">Aml</name> <modifier pos:start="361:17" pos:end="361:17">*</modifier></type><name pos:start="361:18" pos:end="361:21">maxl</name> <init pos:start="361:23" pos:end="361:41">=  <expr pos:start="361:26" pos:end="361:41"><call pos:start="361:26" pos:end="361:41"><name pos:start="361:26" pos:end="361:33">aml_name</name><argument_list pos:start="361:34" pos:end="361:41">(<argument pos:start="361:35" pos:end="361:40"><expr pos:start="361:35" pos:end="361:40"><literal type="string" pos:start="361:35" pos:end="361:40">"MAXL"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="363:13" pos:end="363:42"><decl pos:start="363:13" pos:end="363:41"><type pos:start="363:13" pos:end="363:17"><name pos:start="363:13" pos:end="363:15">Aml</name> <modifier pos:start="363:17" pos:end="363:17">*</modifier></type><name pos:start="363:18" pos:end="363:21">maxh</name> <init pos:start="363:23" pos:end="363:41">=  <expr pos:start="363:26" pos:end="363:41"><call pos:start="363:26" pos:end="363:41"><name pos:start="363:26" pos:end="363:33">aml_name</name><argument_list pos:start="363:34" pos:end="363:41">(<argument pos:start="363:35" pos:end="363:40"><expr pos:start="363:35" pos:end="363:40"><literal type="string" pos:start="363:35" pos:end="363:40">"MAXH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="365:13" pos:end="365:41"><decl pos:start="365:13" pos:end="365:40"><type pos:start="365:13" pos:end="365:17"><name pos:start="365:13" pos:end="365:15">Aml</name> <modifier pos:start="365:17" pos:end="365:17">*</modifier></type><name pos:start="365:18" pos:end="365:21">lenl</name> <init pos:start="365:23" pos:end="365:40">= <expr pos:start="365:25" pos:end="365:40"><call pos:start="365:25" pos:end="365:40"><name pos:start="365:25" pos:end="365:32">aml_name</name><argument_list pos:start="365:33" pos:end="365:40">(<argument pos:start="365:34" pos:end="365:39"><expr pos:start="365:34" pos:end="365:39"><literal type="string" pos:start="365:34" pos:end="365:39">"LENL"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="367:13" pos:end="367:41"><decl pos:start="367:13" pos:end="367:40"><type pos:start="367:13" pos:end="367:17"><name pos:start="367:13" pos:end="367:15">Aml</name> <modifier pos:start="367:17" pos:end="367:17">*</modifier></type><name pos:start="367:18" pos:end="367:21">lenh</name> <init pos:start="367:23" pos:end="367:40">= <expr pos:start="367:25" pos:end="367:40"><call pos:start="367:25" pos:end="367:40"><name pos:start="367:25" pos:end="367:32">aml_name</name><argument_list pos:start="367:33" pos:end="367:40">(<argument pos:start="367:34" pos:end="367:39"><expr pos:start="367:34" pos:end="367:39"><literal type="string" pos:start="367:34" pos:end="367:39">"LENH"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="371:13" pos:end="371:63"><expr pos:start="371:13" pos:end="371:62"><call pos:start="371:13" pos:end="371:62"><name pos:start="371:13" pos:end="371:22">aml_append</name><argument_list pos:start="371:23" pos:end="371:62">(<argument pos:start="371:24" pos:end="371:29"><expr pos:start="371:24" pos:end="371:29"><name pos:start="371:24" pos:end="371:29">method</name></expr></argument>, <argument pos:start="371:32" pos:end="371:61"><expr pos:start="371:32" pos:end="371:61"><call pos:start="371:32" pos:end="371:61"><name pos:start="371:32" pos:end="371:42">aml_acquire</name><argument_list pos:start="371:43" pos:end="371:61">(<argument pos:start="371:44" pos:end="371:52"><expr pos:start="371:44" pos:end="371:52"><name pos:start="371:44" pos:end="371:52">ctrl_lock</name></expr></argument>, <argument pos:start="371:55" pos:end="371:60"><expr pos:start="371:55" pos:end="371:60"><literal type="number" pos:start="371:55" pos:end="371:60">0xFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="373:13" pos:end="375:57"><expr pos:start="373:13" pos:end="375:56"><call pos:start="373:13" pos:end="375:56"><name pos:start="373:13" pos:end="373:22">aml_append</name><argument_list pos:start="373:23" pos:end="375:56">(<argument pos:start="373:24" pos:end="373:29"><expr pos:start="373:24" pos:end="373:29"><name pos:start="373:24" pos:end="373:29">method</name></expr></argument>, <argument pos:start="373:32" pos:end="375:55"><expr pos:start="373:32" pos:end="375:55"><call pos:start="373:32" pos:end="375:55"><name pos:start="373:32" pos:end="373:40">aml_store</name><argument_list pos:start="373:41" pos:end="375:55">(<argument pos:start="373:42" pos:end="373:66"><expr pos:start="373:42" pos:end="373:66"><call pos:start="373:42" pos:end="373:66"><name pos:start="373:42" pos:end="373:55">aml_to_integer</name><argument_list pos:start="373:56" pos:end="373:66">(<argument pos:start="373:57" pos:end="373:65"><expr pos:start="373:57" pos:end="373:65"><name pos:start="373:57" pos:end="373:65">slot_arg0</name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="375:42" pos:end="375:54"><expr pos:start="375:42" pos:end="375:54"><name pos:start="375:42" pos:end="375:54">slot_selector</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="379:13" pos:end="387:57"><expr pos:start="379:13" pos:end="387:56"><call pos:start="379:13" pos:end="387:56"><name pos:start="379:13" pos:end="379:22">aml_append</name><argument_list pos:start="379:23" pos:end="387:56">(<argument pos:start="379:24" pos:end="379:31"><expr pos:start="379:24" pos:end="379:31"><name pos:start="379:24" pos:end="379:31">crs_tmpl</name></expr></argument>,

                <argument pos:start="381:17" pos:end="387:55"><expr pos:start="381:17" pos:end="387:55"><call pos:start="381:17" pos:end="387:55"><name pos:start="381:17" pos:end="381:32">aml_qword_memory</name><argument_list pos:start="381:33" pos:end="387:55">(<argument pos:start="381:34" pos:end="381:47"><expr pos:start="381:34" pos:end="381:47"><name pos:start="381:34" pos:end="381:47">AML_POS_DECODE</name></expr></argument>, <argument pos:start="381:50" pos:end="381:62"><expr pos:start="381:50" pos:end="381:62"><name pos:start="381:50" pos:end="381:62">AML_MIN_FIXED</name></expr></argument>, <argument pos:start="381:65" pos:end="381:77"><expr pos:start="381:65" pos:end="381:77"><name pos:start="381:65" pos:end="381:77">AML_MAX_FIXED</name></expr></argument>,

                                 <argument pos:start="383:34" pos:end="383:46"><expr pos:start="383:34" pos:end="383:46"><name pos:start="383:34" pos:end="383:46">AML_CACHEABLE</name></expr></argument>, <argument pos:start="383:49" pos:end="383:62"><expr pos:start="383:49" pos:end="383:62"><name pos:start="383:49" pos:end="383:62">AML_READ_WRITE</name></expr></argument>,

                                 <argument pos:start="385:34" pos:end="385:34"><expr pos:start="385:34" pos:end="385:34"><literal type="number" pos:start="385:34" pos:end="385:34">0</literal></expr></argument>, <argument pos:start="385:37" pos:end="385:39"><expr pos:start="385:37" pos:end="385:39"><literal type="number" pos:start="385:37" pos:end="385:39">0x0</literal></expr></argument>, <argument pos:start="385:42" pos:end="385:62"><expr pos:start="385:42" pos:end="385:62"><literal type="number" pos:start="385:42" pos:end="385:62">0xFFFFFFFFFFFFFFFEULL</literal></expr></argument>, <argument pos:start="385:65" pos:end="385:65"><expr pos:start="385:65" pos:end="385:65"><literal type="number" pos:start="385:65" pos:end="385:65">0</literal></expr></argument>,

                                 <argument pos:start="387:34" pos:end="387:54"><expr pos:start="387:34" pos:end="387:54"><literal type="number" pos:start="387:34" pos:end="387:54">0xFFFFFFFFFFFFFFFFULL</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="389:13" pos:end="389:64"><expr pos:start="389:13" pos:end="389:63"><call pos:start="389:13" pos:end="389:63"><name pos:start="389:13" pos:end="389:22">aml_append</name><argument_list pos:start="389:23" pos:end="389:63">(<argument pos:start="389:24" pos:end="389:29"><expr pos:start="389:24" pos:end="389:29"><name pos:start="389:24" pos:end="389:29">method</name></expr></argument>, <argument pos:start="389:32" pos:end="389:62"><expr pos:start="389:32" pos:end="389:62"><call pos:start="389:32" pos:end="389:62"><name pos:start="389:32" pos:end="389:44">aml_name_decl</name><argument_list pos:start="389:45" pos:end="389:62">(<argument pos:start="389:46" pos:end="389:51"><expr pos:start="389:46" pos:end="389:51"><literal type="string" pos:start="389:46" pos:end="389:51">"MR64"</literal></expr></argument>, <argument pos:start="389:54" pos:end="389:61"><expr pos:start="389:54" pos:end="389:61"><name pos:start="389:54" pos:end="389:61">crs_tmpl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="393:67"><expr pos:start="391:13" pos:end="393:66"><call pos:start="391:13" pos:end="393:66"><name pos:start="391:13" pos:end="391:22">aml_append</name><argument_list pos:start="391:23" pos:end="393:66">(<argument pos:start="391:24" pos:end="391:29"><expr pos:start="391:24" pos:end="391:29"><name pos:start="391:24" pos:end="391:29">method</name></expr></argument>,

                <argument pos:start="393:17" pos:end="393:65"><expr pos:start="393:17" pos:end="393:65"><call pos:start="393:17" pos:end="393:65"><name pos:start="393:17" pos:end="393:38">aml_create_dword_field</name><argument_list pos:start="393:39" pos:end="393:65">(<argument pos:start="393:40" pos:end="393:43"><expr pos:start="393:40" pos:end="393:43"><name pos:start="393:40" pos:end="393:43">mr64</name></expr></argument>, <argument pos:start="393:46" pos:end="393:56"><expr pos:start="393:46" pos:end="393:56"><call pos:start="393:46" pos:end="393:56"><name pos:start="393:46" pos:end="393:52">aml_int</name><argument_list pos:start="393:53" pos:end="393:56">(<argument pos:start="393:54" pos:end="393:55"><expr pos:start="393:54" pos:end="393:55"><literal type="number" pos:start="393:54" pos:end="393:55">14</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="393:59" pos:end="393:64"><expr pos:start="393:59" pos:end="393:64"><literal type="string" pos:start="393:59" pos:end="393:64">"MINL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="395:13" pos:end="397:67"><expr pos:start="395:13" pos:end="397:66"><call pos:start="395:13" pos:end="397:66"><name pos:start="395:13" pos:end="395:22">aml_append</name><argument_list pos:start="395:23" pos:end="397:66">(<argument pos:start="395:24" pos:end="395:29"><expr pos:start="395:24" pos:end="395:29"><name pos:start="395:24" pos:end="395:29">method</name></expr></argument>,

                <argument pos:start="397:17" pos:end="397:65"><expr pos:start="397:17" pos:end="397:65"><call pos:start="397:17" pos:end="397:65"><name pos:start="397:17" pos:end="397:38">aml_create_dword_field</name><argument_list pos:start="397:39" pos:end="397:65">(<argument pos:start="397:40" pos:end="397:43"><expr pos:start="397:40" pos:end="397:43"><name pos:start="397:40" pos:end="397:43">mr64</name></expr></argument>, <argument pos:start="397:46" pos:end="397:56"><expr pos:start="397:46" pos:end="397:56"><call pos:start="397:46" pos:end="397:56"><name pos:start="397:46" pos:end="397:52">aml_int</name><argument_list pos:start="397:53" pos:end="397:56">(<argument pos:start="397:54" pos:end="397:55"><expr pos:start="397:54" pos:end="397:55"><literal type="number" pos:start="397:54" pos:end="397:55">18</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="397:59" pos:end="397:64"><expr pos:start="397:59" pos:end="397:64"><literal type="string" pos:start="397:59" pos:end="397:64">"MINH"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="401:67"><expr pos:start="399:13" pos:end="401:66"><call pos:start="399:13" pos:end="401:66"><name pos:start="399:13" pos:end="399:22">aml_append</name><argument_list pos:start="399:23" pos:end="401:66">(<argument pos:start="399:24" pos:end="399:29"><expr pos:start="399:24" pos:end="399:29"><name pos:start="399:24" pos:end="399:29">method</name></expr></argument>,

                <argument pos:start="401:17" pos:end="401:65"><expr pos:start="401:17" pos:end="401:65"><call pos:start="401:17" pos:end="401:65"><name pos:start="401:17" pos:end="401:38">aml_create_dword_field</name><argument_list pos:start="401:39" pos:end="401:65">(<argument pos:start="401:40" pos:end="401:43"><expr pos:start="401:40" pos:end="401:43"><name pos:start="401:40" pos:end="401:43">mr64</name></expr></argument>, <argument pos:start="401:46" pos:end="401:56"><expr pos:start="401:46" pos:end="401:56"><call pos:start="401:46" pos:end="401:56"><name pos:start="401:46" pos:end="401:52">aml_int</name><argument_list pos:start="401:53" pos:end="401:56">(<argument pos:start="401:54" pos:end="401:55"><expr pos:start="401:54" pos:end="401:55"><literal type="number" pos:start="401:54" pos:end="401:55">38</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="401:59" pos:end="401:64"><expr pos:start="401:59" pos:end="401:64"><literal type="string" pos:start="401:59" pos:end="401:64">"LENL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="403:13" pos:end="405:67"><expr pos:start="403:13" pos:end="405:66"><call pos:start="403:13" pos:end="405:66"><name pos:start="403:13" pos:end="403:22">aml_append</name><argument_list pos:start="403:23" pos:end="405:66">(<argument pos:start="403:24" pos:end="403:29"><expr pos:start="403:24" pos:end="403:29"><name pos:start="403:24" pos:end="403:29">method</name></expr></argument>,

                <argument pos:start="405:17" pos:end="405:65"><expr pos:start="405:17" pos:end="405:65"><call pos:start="405:17" pos:end="405:65"><name pos:start="405:17" pos:end="405:38">aml_create_dword_field</name><argument_list pos:start="405:39" pos:end="405:65">(<argument pos:start="405:40" pos:end="405:43"><expr pos:start="405:40" pos:end="405:43"><name pos:start="405:40" pos:end="405:43">mr64</name></expr></argument>, <argument pos:start="405:46" pos:end="405:56"><expr pos:start="405:46" pos:end="405:56"><call pos:start="405:46" pos:end="405:56"><name pos:start="405:46" pos:end="405:52">aml_int</name><argument_list pos:start="405:53" pos:end="405:56">(<argument pos:start="405:54" pos:end="405:55"><expr pos:start="405:54" pos:end="405:55"><literal type="number" pos:start="405:54" pos:end="405:55">42</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="405:59" pos:end="405:64"><expr pos:start="405:59" pos:end="405:64"><literal type="string" pos:start="405:59" pos:end="405:64">"LENH"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="409:67"><expr pos:start="407:13" pos:end="409:66"><call pos:start="407:13" pos:end="409:66"><name pos:start="407:13" pos:end="407:22">aml_append</name><argument_list pos:start="407:23" pos:end="409:66">(<argument pos:start="407:24" pos:end="407:29"><expr pos:start="407:24" pos:end="407:29"><name pos:start="407:24" pos:end="407:29">method</name></expr></argument>,

                <argument pos:start="409:17" pos:end="409:65"><expr pos:start="409:17" pos:end="409:65"><call pos:start="409:17" pos:end="409:65"><name pos:start="409:17" pos:end="409:38">aml_create_dword_field</name><argument_list pos:start="409:39" pos:end="409:65">(<argument pos:start="409:40" pos:end="409:43"><expr pos:start="409:40" pos:end="409:43"><name pos:start="409:40" pos:end="409:43">mr64</name></expr></argument>, <argument pos:start="409:46" pos:end="409:56"><expr pos:start="409:46" pos:end="409:56"><call pos:start="409:46" pos:end="409:56"><name pos:start="409:46" pos:end="409:52">aml_int</name><argument_list pos:start="409:53" pos:end="409:56">(<argument pos:start="409:54" pos:end="409:55"><expr pos:start="409:54" pos:end="409:55"><literal type="number" pos:start="409:54" pos:end="409:55">22</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="409:59" pos:end="409:64"><expr pos:start="409:59" pos:end="409:64"><literal type="string" pos:start="409:59" pos:end="409:64">"MAXL"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="411:13" pos:end="413:67"><expr pos:start="411:13" pos:end="413:66"><call pos:start="411:13" pos:end="413:66"><name pos:start="411:13" pos:end="411:22">aml_append</name><argument_list pos:start="411:23" pos:end="413:66">(<argument pos:start="411:24" pos:end="411:29"><expr pos:start="411:24" pos:end="411:29"><name pos:start="411:24" pos:end="411:29">method</name></expr></argument>,

                <argument pos:start="413:17" pos:end="413:65"><expr pos:start="413:17" pos:end="413:65"><call pos:start="413:17" pos:end="413:65"><name pos:start="413:17" pos:end="413:38">aml_create_dword_field</name><argument_list pos:start="413:39" pos:end="413:65">(<argument pos:start="413:40" pos:end="413:43"><expr pos:start="413:40" pos:end="413:43"><name pos:start="413:40" pos:end="413:43">mr64</name></expr></argument>, <argument pos:start="413:46" pos:end="413:56"><expr pos:start="413:46" pos:end="413:56"><call pos:start="413:46" pos:end="413:56"><name pos:start="413:46" pos:end="413:52">aml_int</name><argument_list pos:start="413:53" pos:end="413:56">(<argument pos:start="413:54" pos:end="413:55"><expr pos:start="413:54" pos:end="413:55"><literal type="number" pos:start="413:54" pos:end="413:55">26</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="413:59" pos:end="413:64"><expr pos:start="413:59" pos:end="413:64"><literal type="string" pos:start="413:59" pos:end="413:64">"MAXH"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="417:13" pos:end="419:66"><expr pos:start="417:13" pos:end="419:65"><call pos:start="417:13" pos:end="419:65"><name pos:start="417:13" pos:end="417:22">aml_append</name><argument_list pos:start="417:23" pos:end="419:65">(<argument pos:start="417:24" pos:end="417:29"><expr pos:start="417:24" pos:end="417:29"><name pos:start="417:24" pos:end="417:29">method</name></expr></argument>,

                <argument pos:start="419:17" pos:end="419:64"><expr pos:start="419:17" pos:end="419:64"><call pos:start="419:17" pos:end="419:64"><name pos:start="419:17" pos:end="419:25">aml_store</name><argument_list pos:start="419:26" pos:end="419:64">(<argument pos:start="419:27" pos:end="419:57"><expr pos:start="419:27" pos:end="419:57"><call pos:start="419:27" pos:end="419:57"><name pos:start="419:27" pos:end="419:34">aml_name</name><argument_list pos:start="419:35" pos:end="419:57">(<argument pos:start="419:36" pos:end="419:56"><expr pos:start="419:36" pos:end="419:56"><name pos:start="419:36" pos:end="419:56">MEMORY_SLOT_ADDR_HIGH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="419:60" pos:end="419:63"><expr pos:start="419:60" pos:end="419:63"><name pos:start="419:60" pos:end="419:63">minh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="421:13" pos:end="423:65"><expr pos:start="421:13" pos:end="423:64"><call pos:start="421:13" pos:end="423:64"><name pos:start="421:13" pos:end="421:22">aml_append</name><argument_list pos:start="421:23" pos:end="423:64">(<argument pos:start="421:24" pos:end="421:29"><expr pos:start="421:24" pos:end="421:29"><name pos:start="421:24" pos:end="421:29">method</name></expr></argument>,

                <argument pos:start="423:17" pos:end="423:63"><expr pos:start="423:17" pos:end="423:63"><call pos:start="423:17" pos:end="423:63"><name pos:start="423:17" pos:end="423:25">aml_store</name><argument_list pos:start="423:26" pos:end="423:63">(<argument pos:start="423:27" pos:end="423:56"><expr pos:start="423:27" pos:end="423:56"><call pos:start="423:27" pos:end="423:56"><name pos:start="423:27" pos:end="423:34">aml_name</name><argument_list pos:start="423:35" pos:end="423:56">(<argument pos:start="423:36" pos:end="423:55"><expr pos:start="423:36" pos:end="423:55"><name pos:start="423:36" pos:end="423:55">MEMORY_SLOT_ADDR_LOW</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="423:59" pos:end="423:62"><expr pos:start="423:59" pos:end="423:62"><name pos:start="423:59" pos:end="423:62">minl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="425:13" pos:end="427:66"><expr pos:start="425:13" pos:end="427:65"><call pos:start="425:13" pos:end="427:65"><name pos:start="425:13" pos:end="425:22">aml_append</name><argument_list pos:start="425:23" pos:end="427:65">(<argument pos:start="425:24" pos:end="425:29"><expr pos:start="425:24" pos:end="425:29"><name pos:start="425:24" pos:end="425:29">method</name></expr></argument>,

                <argument pos:start="427:17" pos:end="427:64"><expr pos:start="427:17" pos:end="427:64"><call pos:start="427:17" pos:end="427:64"><name pos:start="427:17" pos:end="427:25">aml_store</name><argument_list pos:start="427:26" pos:end="427:64">(<argument pos:start="427:27" pos:end="427:57"><expr pos:start="427:27" pos:end="427:57"><call pos:start="427:27" pos:end="427:57"><name pos:start="427:27" pos:end="427:34">aml_name</name><argument_list pos:start="427:35" pos:end="427:57">(<argument pos:start="427:36" pos:end="427:56"><expr pos:start="427:36" pos:end="427:56"><name pos:start="427:36" pos:end="427:56">MEMORY_SLOT_SIZE_HIGH</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="427:60" pos:end="427:63"><expr pos:start="427:60" pos:end="427:63"><name pos:start="427:60" pos:end="427:63">lenh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="429:13" pos:end="431:65"><expr pos:start="429:13" pos:end="431:64"><call pos:start="429:13" pos:end="431:64"><name pos:start="429:13" pos:end="429:22">aml_append</name><argument_list pos:start="429:23" pos:end="431:64">(<argument pos:start="429:24" pos:end="429:29"><expr pos:start="429:24" pos:end="429:29"><name pos:start="429:24" pos:end="429:29">method</name></expr></argument>,

                <argument pos:start="431:17" pos:end="431:63"><expr pos:start="431:17" pos:end="431:63"><call pos:start="431:17" pos:end="431:63"><name pos:start="431:17" pos:end="431:25">aml_store</name><argument_list pos:start="431:26" pos:end="431:63">(<argument pos:start="431:27" pos:end="431:56"><expr pos:start="431:27" pos:end="431:56"><call pos:start="431:27" pos:end="431:56"><name pos:start="431:27" pos:end="431:34">aml_name</name><argument_list pos:start="431:35" pos:end="431:56">(<argument pos:start="431:36" pos:end="431:55"><expr pos:start="431:36" pos:end="431:55"><name pos:start="431:36" pos:end="431:55">MEMORY_SLOT_SIZE_LOW</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="431:59" pos:end="431:62"><expr pos:start="431:59" pos:end="431:62"><name pos:start="431:59" pos:end="431:62">lenl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="435:13" pos:end="435:50">/* 64-bit math: MAX = MIN + LEN - 1 */</comment>

            <expr_stmt pos:start="437:13" pos:end="437:58"><expr pos:start="437:13" pos:end="437:57"><call pos:start="437:13" pos:end="437:57"><name pos:start="437:13" pos:end="437:22">aml_append</name><argument_list pos:start="437:23" pos:end="437:57">(<argument pos:start="437:24" pos:end="437:29"><expr pos:start="437:24" pos:end="437:29"><name pos:start="437:24" pos:end="437:29">method</name></expr></argument>, <argument pos:start="437:32" pos:end="437:56"><expr pos:start="437:32" pos:end="437:56"><call pos:start="437:32" pos:end="437:56"><name pos:start="437:32" pos:end="437:38">aml_add</name><argument_list pos:start="437:39" pos:end="437:56">(<argument pos:start="437:40" pos:end="437:43"><expr pos:start="437:40" pos:end="437:43"><name pos:start="437:40" pos:end="437:43">minl</name></expr></argument>, <argument pos:start="437:46" pos:end="437:49"><expr pos:start="437:46" pos:end="437:49"><name pos:start="437:46" pos:end="437:49">lenl</name></expr></argument>, <argument pos:start="437:52" pos:end="437:55"><expr pos:start="437:52" pos:end="437:55"><name pos:start="437:52" pos:end="437:55">maxl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="439:13" pos:end="439:58"><expr pos:start="439:13" pos:end="439:57"><call pos:start="439:13" pos:end="439:57"><name pos:start="439:13" pos:end="439:22">aml_append</name><argument_list pos:start="439:23" pos:end="439:57">(<argument pos:start="439:24" pos:end="439:29"><expr pos:start="439:24" pos:end="439:29"><name pos:start="439:24" pos:end="439:29">method</name></expr></argument>, <argument pos:start="439:32" pos:end="439:56"><expr pos:start="439:32" pos:end="439:56"><call pos:start="439:32" pos:end="439:56"><name pos:start="439:32" pos:end="439:38">aml_add</name><argument_list pos:start="439:39" pos:end="439:56">(<argument pos:start="439:40" pos:end="439:43"><expr pos:start="439:40" pos:end="439:43"><name pos:start="439:40" pos:end="439:43">minh</name></expr></argument>, <argument pos:start="439:46" pos:end="439:49"><expr pos:start="439:46" pos:end="439:49"><name pos:start="439:46" pos:end="439:49">lenh</name></expr></argument>, <argument pos:start="439:52" pos:end="439:55"><expr pos:start="439:52" pos:end="439:55"><name pos:start="439:52" pos:end="439:55">maxh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:50"><expr pos:start="441:13" pos:end="441:49"><name pos:start="441:13" pos:end="441:17">ifctx</name> <operator pos:start="441:19" pos:end="441:19">=</operator> <call pos:start="441:21" pos:end="441:49"><name pos:start="441:21" pos:end="441:26">aml_if</name><argument_list pos:start="441:27" pos:end="441:49">(<argument pos:start="441:28" pos:end="441:48"><expr pos:start="441:28" pos:end="441:48"><call pos:start="441:28" pos:end="441:48"><name pos:start="441:28" pos:end="441:36">aml_lless</name><argument_list pos:start="441:37" pos:end="441:48">(<argument pos:start="441:38" pos:end="441:41"><expr pos:start="441:38" pos:end="441:41"><name pos:start="441:38" pos:end="441:41">maxl</name></expr></argument>, <argument pos:start="441:44" pos:end="441:47"><expr pos:start="441:44" pos:end="441:47"><name pos:start="441:44" pos:end="441:47">minl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="443:13" pos:end="447:13">{<block_content pos:start="445:17" pos:end="445:60">

                <expr_stmt pos:start="445:17" pos:end="445:60"><expr pos:start="445:17" pos:end="445:59"><call pos:start="445:17" pos:end="445:59"><name pos:start="445:17" pos:end="445:26">aml_append</name><argument_list pos:start="445:27" pos:end="445:59">(<argument pos:start="445:28" pos:end="445:32"><expr pos:start="445:28" pos:end="445:32"><name pos:start="445:28" pos:end="445:32">ifctx</name></expr></argument>, <argument pos:start="445:35" pos:end="445:58"><expr pos:start="445:35" pos:end="445:58"><call pos:start="445:35" pos:end="445:58"><name pos:start="445:35" pos:end="445:41">aml_add</name><argument_list pos:start="445:42" pos:end="445:58">(<argument pos:start="445:43" pos:end="445:46"><expr pos:start="445:43" pos:end="445:46"><name pos:start="445:43" pos:end="445:46">maxh</name></expr></argument>, <argument pos:start="445:49" pos:end="445:51"><expr pos:start="445:49" pos:end="445:51"><name pos:start="445:49" pos:end="445:51">one</name></expr></argument>, <argument pos:start="445:54" pos:end="445:57"><expr pos:start="445:54" pos:end="445:57"><name pos:start="445:54" pos:end="445:57">maxh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="449:13" pos:end="449:38"><expr pos:start="449:13" pos:end="449:37"><call pos:start="449:13" pos:end="449:37"><name pos:start="449:13" pos:end="449:22">aml_append</name><argument_list pos:start="449:23" pos:end="449:37">(<argument pos:start="449:24" pos:end="449:29"><expr pos:start="449:24" pos:end="449:29"><name pos:start="449:24" pos:end="449:29">method</name></expr></argument>, <argument pos:start="449:32" pos:end="449:36"><expr pos:start="449:32" pos:end="449:36"><name pos:start="449:32" pos:end="449:36">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:49"><expr pos:start="451:13" pos:end="451:48"><name pos:start="451:13" pos:end="451:17">ifctx</name> <operator pos:start="451:19" pos:end="451:19">=</operator> <call pos:start="451:21" pos:end="451:48"><name pos:start="451:21" pos:end="451:26">aml_if</name><argument_list pos:start="451:27" pos:end="451:48">(<argument pos:start="451:28" pos:end="451:47"><expr pos:start="451:28" pos:end="451:47"><call pos:start="451:28" pos:end="451:47"><name pos:start="451:28" pos:end="451:36">aml_lless</name><argument_list pos:start="451:37" pos:end="451:47">(<argument pos:start="451:38" pos:end="451:41"><expr pos:start="451:38" pos:end="451:41"><name pos:start="451:38" pos:end="451:41">maxl</name></expr></argument>, <argument pos:start="451:44" pos:end="451:46"><expr pos:start="451:44" pos:end="451:46"><name pos:start="451:44" pos:end="451:46">one</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="453:13" pos:end="457:13">{<block_content pos:start="455:17" pos:end="455:65">

                <expr_stmt pos:start="455:17" pos:end="455:65"><expr pos:start="455:17" pos:end="455:64"><call pos:start="455:17" pos:end="455:64"><name pos:start="455:17" pos:end="455:26">aml_append</name><argument_list pos:start="455:27" pos:end="455:64">(<argument pos:start="455:28" pos:end="455:32"><expr pos:start="455:28" pos:end="455:32"><name pos:start="455:28" pos:end="455:32">ifctx</name></expr></argument>, <argument pos:start="455:35" pos:end="455:63"><expr pos:start="455:35" pos:end="455:63"><call pos:start="455:35" pos:end="455:63"><name pos:start="455:35" pos:end="455:46">aml_subtract</name><argument_list pos:start="455:47" pos:end="455:63">(<argument pos:start="455:48" pos:end="455:51"><expr pos:start="455:48" pos:end="455:51"><name pos:start="455:48" pos:end="455:51">maxh</name></expr></argument>, <argument pos:start="455:54" pos:end="455:56"><expr pos:start="455:54" pos:end="455:56"><name pos:start="455:54" pos:end="455:56">one</name></expr></argument>, <argument pos:start="455:59" pos:end="455:62"><expr pos:start="455:59" pos:end="455:62"><name pos:start="455:59" pos:end="455:62">maxh</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="459:13" pos:end="459:38"><expr pos:start="459:13" pos:end="459:37"><call pos:start="459:13" pos:end="459:37"><name pos:start="459:13" pos:end="459:22">aml_append</name><argument_list pos:start="459:23" pos:end="459:37">(<argument pos:start="459:24" pos:end="459:29"><expr pos:start="459:24" pos:end="459:29"><name pos:start="459:24" pos:end="459:29">method</name></expr></argument>, <argument pos:start="459:32" pos:end="459:36"><expr pos:start="459:32" pos:end="459:36"><name pos:start="459:32" pos:end="459:36">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:62"><expr pos:start="461:13" pos:end="461:61"><call pos:start="461:13" pos:end="461:61"><name pos:start="461:13" pos:end="461:22">aml_append</name><argument_list pos:start="461:23" pos:end="461:61">(<argument pos:start="461:24" pos:end="461:29"><expr pos:start="461:24" pos:end="461:29"><name pos:start="461:24" pos:end="461:29">method</name></expr></argument>, <argument pos:start="461:32" pos:end="461:60"><expr pos:start="461:32" pos:end="461:60"><call pos:start="461:32" pos:end="461:60"><name pos:start="461:32" pos:end="461:43">aml_subtract</name><argument_list pos:start="461:44" pos:end="461:60">(<argument pos:start="461:45" pos:end="461:48"><expr pos:start="461:45" pos:end="461:48"><name pos:start="461:45" pos:end="461:48">maxl</name></expr></argument>, <argument pos:start="461:51" pos:end="461:53"><expr pos:start="461:51" pos:end="461:53"><name pos:start="461:51" pos:end="461:53">one</name></expr></argument>, <argument pos:start="461:56" pos:end="461:59"><expr pos:start="461:56" pos:end="461:59"><name pos:start="461:56" pos:end="461:59">maxl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="465:13" pos:end="465:63">/* return 32-bit _CRS if addr/size is in low mem */</comment>

            <comment type="block" pos:start="467:13" pos:end="467:76">/* TODO: remove it since all hotplugged DIMMs are in high mem */</comment>

            <expr_stmt pos:start="469:13" pos:end="469:50"><expr pos:start="469:13" pos:end="469:49"><name pos:start="469:13" pos:end="469:17">ifctx</name> <operator pos:start="469:19" pos:end="469:19">=</operator> <call pos:start="469:21" pos:end="469:49"><name pos:start="469:21" pos:end="469:26">aml_if</name><argument_list pos:start="469:27" pos:end="469:49">(<argument pos:start="469:28" pos:end="469:48"><expr pos:start="469:28" pos:end="469:48"><call pos:start="469:28" pos:end="469:48"><name pos:start="469:28" pos:end="469:36">aml_equal</name><argument_list pos:start="469:37" pos:end="469:48">(<argument pos:start="469:38" pos:end="469:41"><expr pos:start="469:38" pos:end="469:41"><name pos:start="469:38" pos:end="469:41">maxh</name></expr></argument>, <argument pos:start="469:44" pos:end="469:47"><expr pos:start="469:44" pos:end="469:47"><name pos:start="469:44" pos:end="469:47">zero</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <block pos:start="471:13" pos:end="513:13">{<block_content pos:start="473:17" pos:end="511:52">

                <expr_stmt pos:start="473:17" pos:end="473:51"><expr pos:start="473:17" pos:end="473:50"><name pos:start="473:17" pos:end="473:24">crs_tmpl</name> <operator pos:start="473:26" pos:end="473:26">=</operator> <call pos:start="473:28" pos:end="473:50"><name pos:start="473:28" pos:end="473:48">aml_resource_template</name><argument_list pos:start="473:49" pos:end="473:50">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="475:17" pos:end="485:50"><expr pos:start="475:17" pos:end="485:49"><call pos:start="475:17" pos:end="485:49"><name pos:start="475:17" pos:end="475:26">aml_append</name><argument_list pos:start="475:27" pos:end="485:49">(<argument pos:start="475:28" pos:end="475:35"><expr pos:start="475:28" pos:end="475:35"><name pos:start="475:28" pos:end="475:35">crs_tmpl</name></expr></argument>,

                    <argument pos:start="477:21" pos:end="485:48"><expr pos:start="477:21" pos:end="485:48"><call pos:start="477:21" pos:end="485:48"><name pos:start="477:21" pos:end="477:36">aml_dword_memory</name><argument_list pos:start="477:37" pos:end="485:48">(<argument pos:start="477:38" pos:end="477:51"><expr pos:start="477:38" pos:end="477:51"><name pos:start="477:38" pos:end="477:51">AML_POS_DECODE</name></expr></argument>, <argument pos:start="477:54" pos:end="477:66"><expr pos:start="477:54" pos:end="477:66"><name pos:start="477:54" pos:end="477:66">AML_MIN_FIXED</name></expr></argument>,

                                     <argument pos:start="479:38" pos:end="479:50"><expr pos:start="479:38" pos:end="479:50"><name pos:start="479:38" pos:end="479:50">AML_MAX_FIXED</name></expr></argument>, <argument pos:start="479:53" pos:end="479:65"><expr pos:start="479:53" pos:end="479:65"><name pos:start="479:53" pos:end="479:65">AML_CACHEABLE</name></expr></argument>,

                                     <argument pos:start="481:38" pos:end="481:51"><expr pos:start="481:38" pos:end="481:51"><name pos:start="481:38" pos:end="481:51">AML_READ_WRITE</name></expr></argument>,

                                     <argument pos:start="483:38" pos:end="483:38"><expr pos:start="483:38" pos:end="483:38"><literal type="number" pos:start="483:38" pos:end="483:38">0</literal></expr></argument>, <argument pos:start="483:41" pos:end="483:43"><expr pos:start="483:41" pos:end="483:43"><literal type="number" pos:start="483:41" pos:end="483:43">0x0</literal></expr></argument>, <argument pos:start="483:46" pos:end="483:55"><expr pos:start="483:46" pos:end="483:55"><literal type="number" pos:start="483:46" pos:end="483:55">0xFFFFFFFE</literal></expr></argument>, <argument pos:start="483:58" pos:end="483:58"><expr pos:start="483:58" pos:end="483:58"><literal type="number" pos:start="483:58" pos:end="483:58">0</literal></expr></argument>,

                                     <argument pos:start="485:38" pos:end="485:47"><expr pos:start="485:38" pos:end="485:47"><literal type="number" pos:start="485:38" pos:end="485:47">0xFFFFFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="487:17" pos:end="487:67"><expr pos:start="487:17" pos:end="487:66"><call pos:start="487:17" pos:end="487:66"><name pos:start="487:17" pos:end="487:26">aml_append</name><argument_list pos:start="487:27" pos:end="487:66">(<argument pos:start="487:28" pos:end="487:32"><expr pos:start="487:28" pos:end="487:32"><name pos:start="487:28" pos:end="487:32">ifctx</name></expr></argument>, <argument pos:start="487:35" pos:end="487:65"><expr pos:start="487:35" pos:end="487:65"><call pos:start="487:35" pos:end="487:65"><name pos:start="487:35" pos:end="487:47">aml_name_decl</name><argument_list pos:start="487:48" pos:end="487:65">(<argument pos:start="487:49" pos:end="487:54"><expr pos:start="487:49" pos:end="487:54"><literal type="string" pos:start="487:49" pos:end="487:54">"MR32"</literal></expr></argument>, <argument pos:start="487:57" pos:end="487:64"><expr pos:start="487:57" pos:end="487:64"><name pos:start="487:57" pos:end="487:64">crs_tmpl</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="489:17" pos:end="491:70"><expr pos:start="489:17" pos:end="491:69"><call pos:start="489:17" pos:end="491:69"><name pos:start="489:17" pos:end="489:26">aml_append</name><argument_list pos:start="489:27" pos:end="491:69">(<argument pos:start="489:28" pos:end="489:32"><expr pos:start="489:28" pos:end="489:32"><name pos:start="489:28" pos:end="489:32">ifctx</name></expr></argument>,

                    <argument pos:start="491:21" pos:end="491:68"><expr pos:start="491:21" pos:end="491:68"><call pos:start="491:21" pos:end="491:68"><name pos:start="491:21" pos:end="491:42">aml_create_dword_field</name><argument_list pos:start="491:43" pos:end="491:68">(<argument pos:start="491:44" pos:end="491:47"><expr pos:start="491:44" pos:end="491:47"><name pos:start="491:44" pos:end="491:47">mr32</name></expr></argument>, <argument pos:start="491:50" pos:end="491:60"><expr pos:start="491:50" pos:end="491:60"><call pos:start="491:50" pos:end="491:60"><name pos:start="491:50" pos:end="491:56">aml_int</name><argument_list pos:start="491:57" pos:end="491:60">(<argument pos:start="491:58" pos:end="491:59"><expr pos:start="491:58" pos:end="491:59"><literal type="number" pos:start="491:58" pos:end="491:59">10</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="491:63" pos:end="491:67"><expr pos:start="491:63" pos:end="491:67"><literal type="string" pos:start="491:63" pos:end="491:67">"MIN"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="493:17" pos:end="495:70"><expr pos:start="493:17" pos:end="495:69"><call pos:start="493:17" pos:end="495:69"><name pos:start="493:17" pos:end="493:26">aml_append</name><argument_list pos:start="493:27" pos:end="495:69">(<argument pos:start="493:28" pos:end="493:32"><expr pos:start="493:28" pos:end="493:32"><name pos:start="493:28" pos:end="493:32">ifctx</name></expr></argument>,

                    <argument pos:start="495:21" pos:end="495:68"><expr pos:start="495:21" pos:end="495:68"><call pos:start="495:21" pos:end="495:68"><name pos:start="495:21" pos:end="495:42">aml_create_dword_field</name><argument_list pos:start="495:43" pos:end="495:68">(<argument pos:start="495:44" pos:end="495:47"><expr pos:start="495:44" pos:end="495:47"><name pos:start="495:44" pos:end="495:47">mr32</name></expr></argument>, <argument pos:start="495:50" pos:end="495:60"><expr pos:start="495:50" pos:end="495:60"><call pos:start="495:50" pos:end="495:60"><name pos:start="495:50" pos:end="495:56">aml_int</name><argument_list pos:start="495:57" pos:end="495:60">(<argument pos:start="495:58" pos:end="495:59"><expr pos:start="495:58" pos:end="495:59"><literal type="number" pos:start="495:58" pos:end="495:59">14</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="495:63" pos:end="495:67"><expr pos:start="495:63" pos:end="495:67"><literal type="string" pos:start="495:63" pos:end="495:67">"MAX"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="497:17" pos:end="499:70"><expr pos:start="497:17" pos:end="499:69"><call pos:start="497:17" pos:end="499:69"><name pos:start="497:17" pos:end="497:26">aml_append</name><argument_list pos:start="497:27" pos:end="499:69">(<argument pos:start="497:28" pos:end="497:32"><expr pos:start="497:28" pos:end="497:32"><name pos:start="497:28" pos:end="497:32">ifctx</name></expr></argument>,

                    <argument pos:start="499:21" pos:end="499:68"><expr pos:start="499:21" pos:end="499:68"><call pos:start="499:21" pos:end="499:68"><name pos:start="499:21" pos:end="499:42">aml_create_dword_field</name><argument_list pos:start="499:43" pos:end="499:68">(<argument pos:start="499:44" pos:end="499:47"><expr pos:start="499:44" pos:end="499:47"><name pos:start="499:44" pos:end="499:47">mr32</name></expr></argument>, <argument pos:start="499:50" pos:end="499:60"><expr pos:start="499:50" pos:end="499:60"><call pos:start="499:50" pos:end="499:60"><name pos:start="499:50" pos:end="499:56">aml_int</name><argument_list pos:start="499:57" pos:end="499:60">(<argument pos:start="499:58" pos:end="499:59"><expr pos:start="499:58" pos:end="499:59"><literal type="number" pos:start="499:58" pos:end="499:59">22</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="499:63" pos:end="499:67"><expr pos:start="499:63" pos:end="499:67"><literal type="string" pos:start="499:63" pos:end="499:67">"LEN"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="501:17" pos:end="501:68"><expr pos:start="501:17" pos:end="501:67"><call pos:start="501:17" pos:end="501:67"><name pos:start="501:17" pos:end="501:26">aml_append</name><argument_list pos:start="501:27" pos:end="501:67">(<argument pos:start="501:28" pos:end="501:32"><expr pos:start="501:28" pos:end="501:32"><name pos:start="501:28" pos:end="501:32">ifctx</name></expr></argument>, <argument pos:start="501:35" pos:end="501:66"><expr pos:start="501:35" pos:end="501:66"><call pos:start="501:35" pos:end="501:66"><name pos:start="501:35" pos:end="501:43">aml_store</name><argument_list pos:start="501:44" pos:end="501:66">(<argument pos:start="501:45" pos:end="501:48"><expr pos:start="501:45" pos:end="501:48"><name pos:start="501:45" pos:end="501:48">minl</name></expr></argument>, <argument pos:start="501:51" pos:end="501:65"><expr pos:start="501:51" pos:end="501:65"><call pos:start="501:51" pos:end="501:65"><name pos:start="501:51" pos:end="501:58">aml_name</name><argument_list pos:start="501:59" pos:end="501:65">(<argument pos:start="501:60" pos:end="501:64"><expr pos:start="501:60" pos:end="501:64"><literal type="string" pos:start="501:60" pos:end="501:64">"MIN"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="503:17" pos:end="503:68"><expr pos:start="503:17" pos:end="503:67"><call pos:start="503:17" pos:end="503:67"><name pos:start="503:17" pos:end="503:26">aml_append</name><argument_list pos:start="503:27" pos:end="503:67">(<argument pos:start="503:28" pos:end="503:32"><expr pos:start="503:28" pos:end="503:32"><name pos:start="503:28" pos:end="503:32">ifctx</name></expr></argument>, <argument pos:start="503:35" pos:end="503:66"><expr pos:start="503:35" pos:end="503:66"><call pos:start="503:35" pos:end="503:66"><name pos:start="503:35" pos:end="503:43">aml_store</name><argument_list pos:start="503:44" pos:end="503:66">(<argument pos:start="503:45" pos:end="503:48"><expr pos:start="503:45" pos:end="503:48"><name pos:start="503:45" pos:end="503:48">maxl</name></expr></argument>, <argument pos:start="503:51" pos:end="503:65"><expr pos:start="503:51" pos:end="503:65"><call pos:start="503:51" pos:end="503:65"><name pos:start="503:51" pos:end="503:58">aml_name</name><argument_list pos:start="503:59" pos:end="503:65">(<argument pos:start="503:60" pos:end="503:64"><expr pos:start="503:60" pos:end="503:64"><literal type="string" pos:start="503:60" pos:end="503:64">"MAX"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="505:17" pos:end="505:68"><expr pos:start="505:17" pos:end="505:67"><call pos:start="505:17" pos:end="505:67"><name pos:start="505:17" pos:end="505:26">aml_append</name><argument_list pos:start="505:27" pos:end="505:67">(<argument pos:start="505:28" pos:end="505:32"><expr pos:start="505:28" pos:end="505:32"><name pos:start="505:28" pos:end="505:32">ifctx</name></expr></argument>, <argument pos:start="505:35" pos:end="505:66"><expr pos:start="505:35" pos:end="505:66"><call pos:start="505:35" pos:end="505:66"><name pos:start="505:35" pos:end="505:43">aml_store</name><argument_list pos:start="505:44" pos:end="505:66">(<argument pos:start="505:45" pos:end="505:48"><expr pos:start="505:45" pos:end="505:48"><name pos:start="505:45" pos:end="505:48">lenl</name></expr></argument>, <argument pos:start="505:51" pos:end="505:65"><expr pos:start="505:51" pos:end="505:65"><call pos:start="505:51" pos:end="505:65"><name pos:start="505:51" pos:end="505:58">aml_name</name><argument_list pos:start="505:59" pos:end="505:65">(<argument pos:start="505:60" pos:end="505:64"><expr pos:start="505:60" pos:end="505:64"><literal type="string" pos:start="505:60" pos:end="505:64">"LEN"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="509:17" pos:end="509:58"><expr pos:start="509:17" pos:end="509:57"><call pos:start="509:17" pos:end="509:57"><name pos:start="509:17" pos:end="509:26">aml_append</name><argument_list pos:start="509:27" pos:end="509:57">(<argument pos:start="509:28" pos:end="509:32"><expr pos:start="509:28" pos:end="509:32"><name pos:start="509:28" pos:end="509:32">ifctx</name></expr></argument>, <argument pos:start="509:35" pos:end="509:56"><expr pos:start="509:35" pos:end="509:56"><call pos:start="509:35" pos:end="509:56"><name pos:start="509:35" pos:end="509:45">aml_release</name><argument_list pos:start="509:46" pos:end="509:56">(<argument pos:start="509:47" pos:end="509:55"><expr pos:start="509:47" pos:end="509:55"><name pos:start="509:47" pos:end="509:55">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="511:17" pos:end="511:52"><expr pos:start="511:17" pos:end="511:51"><call pos:start="511:17" pos:end="511:51"><name pos:start="511:17" pos:end="511:26">aml_append</name><argument_list pos:start="511:27" pos:end="511:51">(<argument pos:start="511:28" pos:end="511:32"><expr pos:start="511:28" pos:end="511:32"><name pos:start="511:28" pos:end="511:32">ifctx</name></expr></argument>, <argument pos:start="511:35" pos:end="511:50"><expr pos:start="511:35" pos:end="511:50"><call pos:start="511:35" pos:end="511:50"><name pos:start="511:35" pos:end="511:44">aml_return</name><argument_list pos:start="511:45" pos:end="511:50">(<argument pos:start="511:46" pos:end="511:49"><expr pos:start="511:46" pos:end="511:49"><name pos:start="511:46" pos:end="511:49">mr32</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block>

            <expr_stmt pos:start="515:13" pos:end="515:38"><expr pos:start="515:13" pos:end="515:37"><call pos:start="515:13" pos:end="515:37"><name pos:start="515:13" pos:end="515:22">aml_append</name><argument_list pos:start="515:23" pos:end="515:37">(<argument pos:start="515:24" pos:end="515:29"><expr pos:start="515:24" pos:end="515:29"><name pos:start="515:24" pos:end="515:29">method</name></expr></argument>, <argument pos:start="515:32" pos:end="515:36"><expr pos:start="515:32" pos:end="515:36"><name pos:start="515:32" pos:end="515:36">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="519:13" pos:end="519:55"><expr pos:start="519:13" pos:end="519:54"><call pos:start="519:13" pos:end="519:54"><name pos:start="519:13" pos:end="519:22">aml_append</name><argument_list pos:start="519:23" pos:end="519:54">(<argument pos:start="519:24" pos:end="519:29"><expr pos:start="519:24" pos:end="519:29"><name pos:start="519:24" pos:end="519:29">method</name></expr></argument>, <argument pos:start="519:32" pos:end="519:53"><expr pos:start="519:32" pos:end="519:53"><call pos:start="519:32" pos:end="519:53"><name pos:start="519:32" pos:end="519:42">aml_release</name><argument_list pos:start="519:43" pos:end="519:53">(<argument pos:start="519:44" pos:end="519:52"><expr pos:start="519:44" pos:end="519:52"><name pos:start="519:44" pos:end="519:52">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="521:13" pos:end="521:49"><expr pos:start="521:13" pos:end="521:48"><call pos:start="521:13" pos:end="521:48"><name pos:start="521:13" pos:end="521:22">aml_append</name><argument_list pos:start="521:23" pos:end="521:48">(<argument pos:start="521:24" pos:end="521:29"><expr pos:start="521:24" pos:end="521:29"><name pos:start="521:24" pos:end="521:29">method</name></expr></argument>, <argument pos:start="521:32" pos:end="521:47"><expr pos:start="521:32" pos:end="521:47"><call pos:start="521:32" pos:end="521:47"><name pos:start="521:32" pos:end="521:41">aml_return</name><argument_list pos:start="521:42" pos:end="521:47">(<argument pos:start="521:43" pos:end="521:46"><expr pos:start="521:43" pos:end="521:46"><name pos:start="521:43" pos:end="521:46">mr64</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="525:9" pos:end="525:41"><expr pos:start="525:9" pos:end="525:40"><call pos:start="525:9" pos:end="525:40"><name pos:start="525:9" pos:end="525:18">aml_append</name><argument_list pos:start="525:19" pos:end="525:40">(<argument pos:start="525:20" pos:end="525:31"><expr pos:start="525:20" pos:end="525:31"><name pos:start="525:20" pos:end="525:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="525:34" pos:end="525:39"><expr pos:start="525:34" pos:end="525:39"><name pos:start="525:34" pos:end="525:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="529:9" pos:end="531:47"><expr pos:start="529:9" pos:end="531:46"><name pos:start="529:9" pos:end="529:14">method</name> <operator pos:start="529:16" pos:end="529:16">=</operator> <call pos:start="529:18" pos:end="531:46"><name pos:start="529:18" pos:end="529:27">aml_method</name><argument_list pos:start="529:28" pos:end="531:46">(<argument pos:start="529:29" pos:end="529:56"><expr pos:start="529:29" pos:end="529:56"><name pos:start="529:29" pos:end="529:56">MEMORY_SLOT_PROXIMITY_METHOD</name></expr></argument>, <argument pos:start="529:59" pos:end="529:59"><expr pos:start="529:59" pos:end="529:59"><literal type="number" pos:start="529:59" pos:end="529:59">1</literal></expr></argument>,

                            <argument pos:start="531:29" pos:end="531:45"><expr pos:start="531:29" pos:end="531:45"><name pos:start="531:29" pos:end="531:45">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="533:9" pos:end="551:9">{<block_content pos:start="535:13" pos:end="549:52">

            <decl_stmt pos:start="535:13" pos:end="535:61"><decl pos:start="535:13" pos:end="535:60"><type pos:start="535:13" pos:end="535:17"><name pos:start="535:13" pos:end="535:15">Aml</name> <modifier pos:start="535:17" pos:end="535:17">*</modifier></type><name pos:start="535:18" pos:end="535:26">proximity</name> <init pos:start="535:28" pos:end="535:60">= <expr pos:start="535:30" pos:end="535:60"><call pos:start="535:30" pos:end="535:60"><name pos:start="535:30" pos:end="535:37">aml_name</name><argument_list pos:start="535:38" pos:end="535:60">(<argument pos:start="535:39" pos:end="535:59"><expr pos:start="535:39" pos:end="535:59"><name pos:start="535:39" pos:end="535:59">MEMORY_SLOT_PROXIMITY</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="539:13" pos:end="539:63"><expr pos:start="539:13" pos:end="539:62"><call pos:start="539:13" pos:end="539:62"><name pos:start="539:13" pos:end="539:22">aml_append</name><argument_list pos:start="539:23" pos:end="539:62">(<argument pos:start="539:24" pos:end="539:29"><expr pos:start="539:24" pos:end="539:29"><name pos:start="539:24" pos:end="539:29">method</name></expr></argument>, <argument pos:start="539:32" pos:end="539:61"><expr pos:start="539:32" pos:end="539:61"><call pos:start="539:32" pos:end="539:61"><name pos:start="539:32" pos:end="539:42">aml_acquire</name><argument_list pos:start="539:43" pos:end="539:61">(<argument pos:start="539:44" pos:end="539:52"><expr pos:start="539:44" pos:end="539:52"><name pos:start="539:44" pos:end="539:52">ctrl_lock</name></expr></argument>, <argument pos:start="539:55" pos:end="539:60"><expr pos:start="539:55" pos:end="539:60"><literal type="number" pos:start="539:55" pos:end="539:60">0xFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="541:13" pos:end="543:57"><expr pos:start="541:13" pos:end="543:56"><call pos:start="541:13" pos:end="543:56"><name pos:start="541:13" pos:end="541:22">aml_append</name><argument_list pos:start="541:23" pos:end="543:56">(<argument pos:start="541:24" pos:end="541:29"><expr pos:start="541:24" pos:end="541:29"><name pos:start="541:24" pos:end="541:29">method</name></expr></argument>, <argument pos:start="541:32" pos:end="543:55"><expr pos:start="541:32" pos:end="543:55"><call pos:start="541:32" pos:end="543:55"><name pos:start="541:32" pos:end="541:40">aml_store</name><argument_list pos:start="541:41" pos:end="543:55">(<argument pos:start="541:42" pos:end="541:66"><expr pos:start="541:42" pos:end="541:66"><call pos:start="541:42" pos:end="541:66"><name pos:start="541:42" pos:end="541:55">aml_to_integer</name><argument_list pos:start="541:56" pos:end="541:66">(<argument pos:start="541:57" pos:end="541:65"><expr pos:start="541:57" pos:end="541:65"><name pos:start="541:57" pos:end="541:65">slot_arg0</name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="543:42" pos:end="543:54"><expr pos:start="543:42" pos:end="543:54"><name pos:start="543:42" pos:end="543:54">slot_selector</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="545:13" pos:end="545:62"><expr pos:start="545:13" pos:end="545:61"><call pos:start="545:13" pos:end="545:61"><name pos:start="545:13" pos:end="545:22">aml_append</name><argument_list pos:start="545:23" pos:end="545:61">(<argument pos:start="545:24" pos:end="545:29"><expr pos:start="545:24" pos:end="545:29"><name pos:start="545:24" pos:end="545:29">method</name></expr></argument>, <argument pos:start="545:32" pos:end="545:60"><expr pos:start="545:32" pos:end="545:60"><call pos:start="545:32" pos:end="545:60"><name pos:start="545:32" pos:end="545:40">aml_store</name><argument_list pos:start="545:41" pos:end="545:60">(<argument pos:start="545:42" pos:end="545:50"><expr pos:start="545:42" pos:end="545:50"><name pos:start="545:42" pos:end="545:50">proximity</name></expr></argument>, <argument pos:start="545:53" pos:end="545:59"><expr pos:start="545:53" pos:end="545:59"><name pos:start="545:53" pos:end="545:59">ret_val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="547:13" pos:end="547:55"><expr pos:start="547:13" pos:end="547:54"><call pos:start="547:13" pos:end="547:54"><name pos:start="547:13" pos:end="547:22">aml_append</name><argument_list pos:start="547:23" pos:end="547:54">(<argument pos:start="547:24" pos:end="547:29"><expr pos:start="547:24" pos:end="547:29"><name pos:start="547:24" pos:end="547:29">method</name></expr></argument>, <argument pos:start="547:32" pos:end="547:53"><expr pos:start="547:32" pos:end="547:53"><call pos:start="547:32" pos:end="547:53"><name pos:start="547:32" pos:end="547:42">aml_release</name><argument_list pos:start="547:43" pos:end="547:53">(<argument pos:start="547:44" pos:end="547:52"><expr pos:start="547:44" pos:end="547:52"><name pos:start="547:44" pos:end="547:52">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="549:13" pos:end="549:52"><expr pos:start="549:13" pos:end="549:51"><call pos:start="549:13" pos:end="549:51"><name pos:start="549:13" pos:end="549:22">aml_append</name><argument_list pos:start="549:23" pos:end="549:51">(<argument pos:start="549:24" pos:end="549:29"><expr pos:start="549:24" pos:end="549:29"><name pos:start="549:24" pos:end="549:29">method</name></expr></argument>, <argument pos:start="549:32" pos:end="549:50"><expr pos:start="549:32" pos:end="549:50"><call pos:start="549:32" pos:end="549:50"><name pos:start="549:32" pos:end="549:41">aml_return</name><argument_list pos:start="549:42" pos:end="549:50">(<argument pos:start="549:43" pos:end="549:49"><expr pos:start="549:43" pos:end="549:49"><name pos:start="549:43" pos:end="549:49">ret_val</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="553:9" pos:end="553:41"><expr pos:start="553:9" pos:end="553:40"><call pos:start="553:9" pos:end="553:40"><name pos:start="553:9" pos:end="553:18">aml_append</name><argument_list pos:start="553:19" pos:end="553:40">(<argument pos:start="553:20" pos:end="553:31"><expr pos:start="553:20" pos:end="553:31"><name pos:start="553:20" pos:end="553:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="553:34" pos:end="553:39"><expr pos:start="553:34" pos:end="553:39"><name pos:start="553:34" pos:end="553:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="557:9" pos:end="557:74"><expr pos:start="557:9" pos:end="557:73"><name pos:start="557:9" pos:end="557:14">method</name> <operator pos:start="557:16" pos:end="557:16">=</operator> <call pos:start="557:18" pos:end="557:73"><name pos:start="557:18" pos:end="557:27">aml_method</name><argument_list pos:start="557:28" pos:end="557:73">(<argument pos:start="557:29" pos:end="557:50"><expr pos:start="557:29" pos:end="557:50"><name pos:start="557:29" pos:end="557:50">MEMORY_SLOT_OST_METHOD</name></expr></argument>, <argument pos:start="557:53" pos:end="557:53"><expr pos:start="557:53" pos:end="557:53"><literal type="number" pos:start="557:53" pos:end="557:53">4</literal></expr></argument>, <argument pos:start="557:56" pos:end="557:72"><expr pos:start="557:56" pos:end="557:72"><name pos:start="557:56" pos:end="557:72">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="559:9" pos:end="579:9">{<block_content pos:start="561:13" pos:end="577:55">

            <decl_stmt pos:start="561:13" pos:end="561:59"><decl pos:start="561:13" pos:end="561:58"><type pos:start="561:13" pos:end="561:17"><name pos:start="561:13" pos:end="561:15">Aml</name> <modifier pos:start="561:17" pos:end="561:17">*</modifier></type><name pos:start="561:18" pos:end="561:24">ost_evt</name> <init pos:start="561:26" pos:end="561:58">= <expr pos:start="561:28" pos:end="561:58"><call pos:start="561:28" pos:end="561:58"><name pos:start="561:28" pos:end="561:35">aml_name</name><argument_list pos:start="561:36" pos:end="561:58">(<argument pos:start="561:37" pos:end="561:57"><expr pos:start="561:37" pos:end="561:57"><name pos:start="561:37" pos:end="561:57">MEMORY_SLOT_OST_EVENT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="563:13" pos:end="563:63"><decl pos:start="563:13" pos:end="563:62"><type pos:start="563:13" pos:end="563:17"><name pos:start="563:13" pos:end="563:15">Aml</name> <modifier pos:start="563:17" pos:end="563:17">*</modifier></type><name pos:start="563:18" pos:end="563:27">ost_status</name> <init pos:start="563:29" pos:end="563:62">= <expr pos:start="563:31" pos:end="563:62"><call pos:start="563:31" pos:end="563:62"><name pos:start="563:31" pos:end="563:38">aml_name</name><argument_list pos:start="563:39" pos:end="563:62">(<argument pos:start="563:40" pos:end="563:61"><expr pos:start="563:40" pos:end="563:61"><name pos:start="563:40" pos:end="563:61">MEMORY_SLOT_OST_STATUS</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="567:13" pos:end="567:63"><expr pos:start="567:13" pos:end="567:62"><call pos:start="567:13" pos:end="567:62"><name pos:start="567:13" pos:end="567:22">aml_append</name><argument_list pos:start="567:23" pos:end="567:62">(<argument pos:start="567:24" pos:end="567:29"><expr pos:start="567:24" pos:end="567:29"><name pos:start="567:24" pos:end="567:29">method</name></expr></argument>, <argument pos:start="567:32" pos:end="567:61"><expr pos:start="567:32" pos:end="567:61"><call pos:start="567:32" pos:end="567:61"><name pos:start="567:32" pos:end="567:42">aml_acquire</name><argument_list pos:start="567:43" pos:end="567:61">(<argument pos:start="567:44" pos:end="567:52"><expr pos:start="567:44" pos:end="567:52"><name pos:start="567:44" pos:end="567:52">ctrl_lock</name></expr></argument>, <argument pos:start="567:55" pos:end="567:60"><expr pos:start="567:55" pos:end="567:60"><literal type="number" pos:start="567:55" pos:end="567:60">0xFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="569:13" pos:end="571:57"><expr pos:start="569:13" pos:end="571:56"><call pos:start="569:13" pos:end="571:56"><name pos:start="569:13" pos:end="569:22">aml_append</name><argument_list pos:start="569:23" pos:end="571:56">(<argument pos:start="569:24" pos:end="569:29"><expr pos:start="569:24" pos:end="569:29"><name pos:start="569:24" pos:end="569:29">method</name></expr></argument>, <argument pos:start="569:32" pos:end="571:55"><expr pos:start="569:32" pos:end="571:55"><call pos:start="569:32" pos:end="571:55"><name pos:start="569:32" pos:end="569:40">aml_store</name><argument_list pos:start="569:41" pos:end="571:55">(<argument pos:start="569:42" pos:end="569:66"><expr pos:start="569:42" pos:end="569:66"><call pos:start="569:42" pos:end="569:66"><name pos:start="569:42" pos:end="569:55">aml_to_integer</name><argument_list pos:start="569:56" pos:end="569:66">(<argument pos:start="569:57" pos:end="569:65"><expr pos:start="569:57" pos:end="569:65"><name pos:start="569:57" pos:end="569:65">slot_arg0</name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="571:42" pos:end="571:54"><expr pos:start="571:42" pos:end="571:54"><name pos:start="571:42" pos:end="571:54">slot_selector</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="573:13" pos:end="573:63"><expr pos:start="573:13" pos:end="573:62"><call pos:start="573:13" pos:end="573:62"><name pos:start="573:13" pos:end="573:22">aml_append</name><argument_list pos:start="573:23" pos:end="573:62">(<argument pos:start="573:24" pos:end="573:29"><expr pos:start="573:24" pos:end="573:29"><name pos:start="573:24" pos:end="573:29">method</name></expr></argument>, <argument pos:start="573:32" pos:end="573:61"><expr pos:start="573:32" pos:end="573:61"><call pos:start="573:32" pos:end="573:61"><name pos:start="573:32" pos:end="573:40">aml_store</name><argument_list pos:start="573:41" pos:end="573:61">(<argument pos:start="573:42" pos:end="573:51"><expr pos:start="573:42" pos:end="573:51"><call pos:start="573:42" pos:end="573:51"><name pos:start="573:42" pos:end="573:48">aml_arg</name><argument_list pos:start="573:49" pos:end="573:51">(<argument pos:start="573:50" pos:end="573:50"><expr pos:start="573:50" pos:end="573:50"><literal type="number" pos:start="573:50" pos:end="573:50">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="573:54" pos:end="573:60"><expr pos:start="573:54" pos:end="573:60"><name pos:start="573:54" pos:end="573:60">ost_evt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="575:13" pos:end="575:66"><expr pos:start="575:13" pos:end="575:65"><call pos:start="575:13" pos:end="575:65"><name pos:start="575:13" pos:end="575:22">aml_append</name><argument_list pos:start="575:23" pos:end="575:65">(<argument pos:start="575:24" pos:end="575:29"><expr pos:start="575:24" pos:end="575:29"><name pos:start="575:24" pos:end="575:29">method</name></expr></argument>, <argument pos:start="575:32" pos:end="575:64"><expr pos:start="575:32" pos:end="575:64"><call pos:start="575:32" pos:end="575:64"><name pos:start="575:32" pos:end="575:40">aml_store</name><argument_list pos:start="575:41" pos:end="575:64">(<argument pos:start="575:42" pos:end="575:51"><expr pos:start="575:42" pos:end="575:51"><call pos:start="575:42" pos:end="575:51"><name pos:start="575:42" pos:end="575:48">aml_arg</name><argument_list pos:start="575:49" pos:end="575:51">(<argument pos:start="575:50" pos:end="575:50"><expr pos:start="575:50" pos:end="575:50"><literal type="number" pos:start="575:50" pos:end="575:50">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="575:54" pos:end="575:63"><expr pos:start="575:54" pos:end="575:63"><name pos:start="575:54" pos:end="575:63">ost_status</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="577:13" pos:end="577:55"><expr pos:start="577:13" pos:end="577:54"><call pos:start="577:13" pos:end="577:54"><name pos:start="577:13" pos:end="577:22">aml_append</name><argument_list pos:start="577:23" pos:end="577:54">(<argument pos:start="577:24" pos:end="577:29"><expr pos:start="577:24" pos:end="577:29"><name pos:start="577:24" pos:end="577:29">method</name></expr></argument>, <argument pos:start="577:32" pos:end="577:53"><expr pos:start="577:32" pos:end="577:53"><call pos:start="577:32" pos:end="577:53"><name pos:start="577:32" pos:end="577:42">aml_release</name><argument_list pos:start="577:43" pos:end="577:53">(<argument pos:start="577:44" pos:end="577:52"><expr pos:start="577:44" pos:end="577:52"><name pos:start="577:44" pos:end="577:52">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="581:9" pos:end="581:41"><expr pos:start="581:9" pos:end="581:40"><call pos:start="581:9" pos:end="581:40"><name pos:start="581:9" pos:end="581:18">aml_append</name><argument_list pos:start="581:19" pos:end="581:40">(<argument pos:start="581:20" pos:end="581:31"><expr pos:start="581:20" pos:end="581:31"><name pos:start="581:20" pos:end="581:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="581:34" pos:end="581:39"><expr pos:start="581:34" pos:end="581:39"><name pos:start="581:34" pos:end="581:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="585:9" pos:end="585:76"><expr pos:start="585:9" pos:end="585:75"><name pos:start="585:9" pos:end="585:14">method</name> <operator pos:start="585:16" pos:end="585:16">=</operator> <call pos:start="585:18" pos:end="585:75"><name pos:start="585:18" pos:end="585:27">aml_method</name><argument_list pos:start="585:28" pos:end="585:75">(<argument pos:start="585:29" pos:end="585:52"><expr pos:start="585:29" pos:end="585:52"><name pos:start="585:29" pos:end="585:52">MEMORY_SLOT_EJECT_METHOD</name></expr></argument>, <argument pos:start="585:55" pos:end="585:55"><expr pos:start="585:55" pos:end="585:55"><literal type="number" pos:start="585:55" pos:end="585:55">2</literal></expr></argument>, <argument pos:start="585:58" pos:end="585:74"><expr pos:start="585:58" pos:end="585:74"><name pos:start="585:58" pos:end="585:74">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="587:9" pos:end="603:9">{<block_content pos:start="589:13" pos:end="601:55">

            <decl_stmt pos:start="589:13" pos:end="589:53"><decl pos:start="589:13" pos:end="589:52"><type pos:start="589:13" pos:end="589:17"><name pos:start="589:13" pos:end="589:15">Aml</name> <modifier pos:start="589:17" pos:end="589:17">*</modifier></type><name pos:start="589:18" pos:end="589:22">eject</name> <init pos:start="589:24" pos:end="589:52">= <expr pos:start="589:26" pos:end="589:52"><call pos:start="589:26" pos:end="589:52"><name pos:start="589:26" pos:end="589:33">aml_name</name><argument_list pos:start="589:34" pos:end="589:52">(<argument pos:start="589:35" pos:end="589:51"><expr pos:start="589:35" pos:end="589:51"><name pos:start="589:35" pos:end="589:51">MEMORY_SLOT_EJECT</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="593:13" pos:end="593:63"><expr pos:start="593:13" pos:end="593:62"><call pos:start="593:13" pos:end="593:62"><name pos:start="593:13" pos:end="593:22">aml_append</name><argument_list pos:start="593:23" pos:end="593:62">(<argument pos:start="593:24" pos:end="593:29"><expr pos:start="593:24" pos:end="593:29"><name pos:start="593:24" pos:end="593:29">method</name></expr></argument>, <argument pos:start="593:32" pos:end="593:61"><expr pos:start="593:32" pos:end="593:61"><call pos:start="593:32" pos:end="593:61"><name pos:start="593:32" pos:end="593:42">aml_acquire</name><argument_list pos:start="593:43" pos:end="593:61">(<argument pos:start="593:44" pos:end="593:52"><expr pos:start="593:44" pos:end="593:52"><name pos:start="593:44" pos:end="593:52">ctrl_lock</name></expr></argument>, <argument pos:start="593:55" pos:end="593:60"><expr pos:start="593:55" pos:end="593:60"><literal type="number" pos:start="593:55" pos:end="593:60">0xFFFF</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="595:13" pos:end="597:57"><expr pos:start="595:13" pos:end="597:56"><call pos:start="595:13" pos:end="597:56"><name pos:start="595:13" pos:end="595:22">aml_append</name><argument_list pos:start="595:23" pos:end="597:56">(<argument pos:start="595:24" pos:end="595:29"><expr pos:start="595:24" pos:end="595:29"><name pos:start="595:24" pos:end="595:29">method</name></expr></argument>, <argument pos:start="595:32" pos:end="597:55"><expr pos:start="595:32" pos:end="597:55"><call pos:start="595:32" pos:end="597:55"><name pos:start="595:32" pos:end="595:40">aml_store</name><argument_list pos:start="595:41" pos:end="597:55">(<argument pos:start="595:42" pos:end="595:66"><expr pos:start="595:42" pos:end="595:66"><call pos:start="595:42" pos:end="595:66"><name pos:start="595:42" pos:end="595:55">aml_to_integer</name><argument_list pos:start="595:56" pos:end="595:66">(<argument pos:start="595:57" pos:end="595:65"><expr pos:start="595:57" pos:end="595:65"><name pos:start="595:57" pos:end="595:65">slot_arg0</name></expr></argument>)</argument_list></call></expr></argument>,

                                         <argument pos:start="597:42" pos:end="597:54"><expr pos:start="597:42" pos:end="597:54"><name pos:start="597:42" pos:end="597:54">slot_selector</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="599:13" pos:end="599:54"><expr pos:start="599:13" pos:end="599:53"><call pos:start="599:13" pos:end="599:53"><name pos:start="599:13" pos:end="599:22">aml_append</name><argument_list pos:start="599:23" pos:end="599:53">(<argument pos:start="599:24" pos:end="599:29"><expr pos:start="599:24" pos:end="599:29"><name pos:start="599:24" pos:end="599:29">method</name></expr></argument>, <argument pos:start="599:32" pos:end="599:52"><expr pos:start="599:32" pos:end="599:52"><call pos:start="599:32" pos:end="599:52"><name pos:start="599:32" pos:end="599:40">aml_store</name><argument_list pos:start="599:41" pos:end="599:52">(<argument pos:start="599:42" pos:end="599:44"><expr pos:start="599:42" pos:end="599:44"><name pos:start="599:42" pos:end="599:44">one</name></expr></argument>, <argument pos:start="599:47" pos:end="599:51"><expr pos:start="599:47" pos:end="599:51"><name pos:start="599:47" pos:end="599:51">eject</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="601:13" pos:end="601:55"><expr pos:start="601:13" pos:end="601:54"><call pos:start="601:13" pos:end="601:54"><name pos:start="601:13" pos:end="601:22">aml_append</name><argument_list pos:start="601:23" pos:end="601:54">(<argument pos:start="601:24" pos:end="601:29"><expr pos:start="601:24" pos:end="601:29"><name pos:start="601:24" pos:end="601:29">method</name></expr></argument>, <argument pos:start="601:32" pos:end="601:53"><expr pos:start="601:32" pos:end="601:53"><call pos:start="601:32" pos:end="601:53"><name pos:start="601:32" pos:end="601:42">aml_release</name><argument_list pos:start="601:43" pos:end="601:53">(<argument pos:start="601:44" pos:end="601:52"><expr pos:start="601:44" pos:end="601:52"><name pos:start="601:44" pos:end="601:52">ctrl_lock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <expr_stmt pos:start="605:9" pos:end="605:41"><expr pos:start="605:9" pos:end="605:40"><call pos:start="605:9" pos:end="605:40"><name pos:start="605:9" pos:end="605:18">aml_append</name><argument_list pos:start="605:19" pos:end="605:40">(<argument pos:start="605:20" pos:end="605:31"><expr pos:start="605:20" pos:end="605:31"><name pos:start="605:20" pos:end="605:31">mem_ctrl_dev</name></expr></argument>, <argument pos:start="605:34" pos:end="605:39"><expr pos:start="605:34" pos:end="605:39"><name pos:start="605:34" pos:end="605:39">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="609:5" pos:end="609:36"><expr pos:start="609:5" pos:end="609:35"><call pos:start="609:5" pos:end="609:35"><name pos:start="609:5" pos:end="609:14">aml_append</name><argument_list pos:start="609:15" pos:end="609:35">(<argument pos:start="609:16" pos:end="609:20"><expr pos:start="609:16" pos:end="609:20"><name pos:start="609:16" pos:end="609:20">table</name></expr></argument>, <argument pos:start="609:23" pos:end="609:34"><expr pos:start="609:23" pos:end="609:34"><name pos:start="609:23" pos:end="609:34">mem_ctrl_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="613:5" pos:end="613:32"><expr pos:start="613:5" pos:end="613:31"><name pos:start="613:5" pos:end="613:12">sb_scope</name> <operator pos:start="613:14" pos:end="613:14">=</operator> <call pos:start="613:16" pos:end="613:31"><name pos:start="613:16" pos:end="613:24">aml_scope</name><argument_list pos:start="613:25" pos:end="613:31">(<argument pos:start="613:26" pos:end="613:30"><expr pos:start="613:26" pos:end="613:30"><literal type="string" pos:start="613:26" pos:end="613:30">"_SB"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="615:5" pos:end="615:30">/* build memory devices */</comment>

    <for pos:start="617:5" pos:end="703:5">for <control pos:start="617:9" pos:end="617:32">(<init pos:start="617:10" pos:end="617:15"><expr pos:start="617:10" pos:end="617:14"><name pos:start="617:10" pos:end="617:10">i</name> <operator pos:start="617:12" pos:end="617:12">=</operator> <literal type="number" pos:start="617:14" pos:end="617:14">0</literal></expr>;</init> <condition pos:start="617:17" pos:end="617:27"><expr pos:start="617:17" pos:end="617:26"><name pos:start="617:17" pos:end="617:17">i</name> <operator pos:start="617:19" pos:end="617:19">&lt;</operator> <name pos:start="617:21" pos:end="617:26">nr_mem</name></expr>;</condition> <incr pos:start="617:29" pos:end="617:31"><expr pos:start="617:29" pos:end="617:31"><name pos:start="617:29" pos:end="617:29">i</name><operator pos:start="617:30" pos:end="617:31">++</operator></expr></incr>)</control> <block pos:start="617:34" pos:end="703:5">{<block_content pos:start="619:9" pos:end="701:34">

        <decl_stmt pos:start="619:9" pos:end="619:17"><decl pos:start="619:9" pos:end="619:16"><type pos:start="619:9" pos:end="619:13"><name pos:start="619:9" pos:end="619:11">Aml</name> <modifier pos:start="619:13" pos:end="619:13">*</modifier></type><name pos:start="619:14" pos:end="619:16">dev</name></decl>;</decl_stmt>

        <decl_stmt pos:start="621:9" pos:end="621:16"><decl pos:start="621:9" pos:end="621:15"><type pos:start="621:9" pos:end="621:14"><name pos:start="621:9" pos:end="621:12">char</name> <modifier pos:start="621:14" pos:end="621:14">*</modifier></type><name pos:start="621:15" pos:end="621:15">s</name></decl>;</decl_stmt>



        <expr_stmt pos:start="625:9" pos:end="625:38"><expr pos:start="625:9" pos:end="625:37"><name pos:start="625:9" pos:end="625:11">dev</name> <operator pos:start="625:13" pos:end="625:13">=</operator> <call pos:start="625:15" pos:end="625:37"><name pos:start="625:15" pos:end="625:24">aml_device</name><argument_list pos:start="625:25" pos:end="625:37">(<argument pos:start="625:26" pos:end="625:33"><expr pos:start="625:26" pos:end="625:33"><literal type="string" pos:start="625:26" pos:end="625:33">"MP%02X"</literal></expr></argument>, <argument pos:start="625:36" pos:end="625:36"><expr pos:start="625:36" pos:end="625:36"><name pos:start="625:36" pos:end="625:36">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="627:9" pos:end="627:72"><expr pos:start="627:9" pos:end="627:71"><call pos:start="627:9" pos:end="627:71"><name pos:start="627:9" pos:end="627:18">aml_append</name><argument_list pos:start="627:19" pos:end="627:71">(<argument pos:start="627:20" pos:end="627:22"><expr pos:start="627:20" pos:end="627:22"><name pos:start="627:20" pos:end="627:22">dev</name></expr></argument>, <argument pos:start="627:25" pos:end="627:70"><expr pos:start="627:25" pos:end="627:70"><call pos:start="627:25" pos:end="627:70"><name pos:start="627:25" pos:end="627:37">aml_name_decl</name><argument_list pos:start="627:38" pos:end="627:70">(<argument pos:start="627:39" pos:end="627:44"><expr pos:start="627:39" pos:end="627:44"><literal type="string" pos:start="627:39" pos:end="627:44">"_UID"</literal></expr></argument>, <argument pos:start="627:47" pos:end="627:69"><expr pos:start="627:47" pos:end="627:69"><call pos:start="627:47" pos:end="627:69"><name pos:start="627:47" pos:end="627:56">aml_string</name><argument_list pos:start="627:57" pos:end="627:69">(<argument pos:start="627:58" pos:end="627:65"><expr pos:start="627:58" pos:end="627:65"><literal type="string" pos:start="627:58" pos:end="627:65">"0x%02X"</literal></expr></argument>, <argument pos:start="627:68" pos:end="627:68"><expr pos:start="627:68" pos:end="627:68"><name pos:start="627:68" pos:end="627:68">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="629:9" pos:end="629:70"><expr pos:start="629:9" pos:end="629:69"><call pos:start="629:9" pos:end="629:69"><name pos:start="629:9" pos:end="629:18">aml_append</name><argument_list pos:start="629:19" pos:end="629:69">(<argument pos:start="629:20" pos:end="629:22"><expr pos:start="629:20" pos:end="629:22"><name pos:start="629:20" pos:end="629:22">dev</name></expr></argument>, <argument pos:start="629:25" pos:end="629:68"><expr pos:start="629:25" pos:end="629:68"><call pos:start="629:25" pos:end="629:68"><name pos:start="629:25" pos:end="629:37">aml_name_decl</name><argument_list pos:start="629:38" pos:end="629:68">(<argument pos:start="629:39" pos:end="629:44"><expr pos:start="629:39" pos:end="629:44"><literal type="string" pos:start="629:39" pos:end="629:44">"_HID"</literal></expr></argument>, <argument pos:start="629:47" pos:end="629:67"><expr pos:start="629:47" pos:end="629:67"><call pos:start="629:47" pos:end="629:67"><name pos:start="629:47" pos:end="629:56">aml_eisaid</name><argument_list pos:start="629:57" pos:end="629:67">(<argument pos:start="629:58" pos:end="629:66"><expr pos:start="629:58" pos:end="629:66"><literal type="string" pos:start="629:58" pos:end="629:66">"PNP0C80"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="633:9" pos:end="633:58"><expr pos:start="633:9" pos:end="633:57"><name pos:start="633:9" pos:end="633:14">method</name> <operator pos:start="633:16" pos:end="633:16">=</operator> <call pos:start="633:18" pos:end="633:57"><name pos:start="633:18" pos:end="633:27">aml_method</name><argument_list pos:start="633:28" pos:end="633:57">(<argument pos:start="633:29" pos:end="633:34"><expr pos:start="633:29" pos:end="633:34"><literal type="string" pos:start="633:29" pos:end="633:34">"_CRS"</literal></expr></argument>, <argument pos:start="633:37" pos:end="633:37"><expr pos:start="633:37" pos:end="633:37"><literal type="number" pos:start="633:37" pos:end="633:37">0</literal></expr></argument>, <argument pos:start="633:40" pos:end="633:56"><expr pos:start="633:40" pos:end="633:56"><name pos:start="633:40" pos:end="633:56">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="635:9" pos:end="635:75"><expr pos:start="635:9" pos:end="635:74"><name pos:start="635:9" pos:end="635:9">s</name> <operator pos:start="635:11" pos:end="635:11">=</operator> <call pos:start="635:13" pos:end="635:74"><name pos:start="635:13" pos:end="635:27">g_strdup_printf</name><argument_list pos:start="635:28" pos:end="635:74">(<argument pos:start="635:29" pos:end="635:35"><expr pos:start="635:29" pos:end="635:35"><literal type="string" pos:start="635:29" pos:end="635:35">"%s.%s"</literal></expr></argument>, <argument pos:start="635:38" pos:end="635:49"><expr pos:start="635:38" pos:end="635:49"><name pos:start="635:38" pos:end="635:49">mhp_res_path</name></expr></argument>, <argument pos:start="635:52" pos:end="635:73"><expr pos:start="635:52" pos:end="635:73"><name pos:start="635:52" pos:end="635:73">MEMORY_SLOT_CRS_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="637:9" pos:end="637:71"><expr pos:start="637:9" pos:end="637:70"><call pos:start="637:9" pos:end="637:70"><name pos:start="637:9" pos:end="637:18">aml_append</name><argument_list pos:start="637:19" pos:end="637:70">(<argument pos:start="637:20" pos:end="637:25"><expr pos:start="637:20" pos:end="637:25"><name pos:start="637:20" pos:end="637:25">method</name></expr></argument>, <argument pos:start="637:28" pos:end="637:69"><expr pos:start="637:28" pos:end="637:69"><call pos:start="637:28" pos:end="637:69"><name pos:start="637:28" pos:end="637:37">aml_return</name><argument_list pos:start="637:38" pos:end="637:69">(<argument pos:start="637:39" pos:end="637:68"><expr pos:start="637:39" pos:end="637:68"><call pos:start="637:39" pos:end="637:68"><name pos:start="637:39" pos:end="637:47">aml_call1</name><argument_list pos:start="637:48" pos:end="637:68">(<argument pos:start="637:49" pos:end="637:49"><expr pos:start="637:49" pos:end="637:49"><name pos:start="637:49" pos:end="637:49">s</name></expr></argument>, <argument pos:start="637:52" pos:end="637:67"><expr pos:start="637:52" pos:end="637:67"><call pos:start="637:52" pos:end="637:67"><name pos:start="637:52" pos:end="637:59">aml_name</name><argument_list pos:start="637:60" pos:end="637:67">(<argument pos:start="637:61" pos:end="637:66"><expr pos:start="637:61" pos:end="637:66"><literal type="string" pos:start="637:61" pos:end="637:66">"_UID"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="639:9" pos:end="639:18"><expr pos:start="639:9" pos:end="639:17"><call pos:start="639:9" pos:end="639:17"><name pos:start="639:9" pos:end="639:14">g_free</name><argument_list pos:start="639:15" pos:end="639:17">(<argument pos:start="639:16" pos:end="639:16"><expr pos:start="639:16" pos:end="639:16"><name pos:start="639:16" pos:end="639:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="641:9" pos:end="641:32"><expr pos:start="641:9" pos:end="641:31"><call pos:start="641:9" pos:end="641:31"><name pos:start="641:9" pos:end="641:18">aml_append</name><argument_list pos:start="641:19" pos:end="641:31">(<argument pos:start="641:20" pos:end="641:22"><expr pos:start="641:20" pos:end="641:22"><name pos:start="641:20" pos:end="641:22">dev</name></expr></argument>, <argument pos:start="641:25" pos:end="641:30"><expr pos:start="641:25" pos:end="641:30"><name pos:start="641:25" pos:end="641:30">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="645:9" pos:end="645:58"><expr pos:start="645:9" pos:end="645:57"><name pos:start="645:9" pos:end="645:14">method</name> <operator pos:start="645:16" pos:end="645:16">=</operator> <call pos:start="645:18" pos:end="645:57"><name pos:start="645:18" pos:end="645:27">aml_method</name><argument_list pos:start="645:28" pos:end="645:57">(<argument pos:start="645:29" pos:end="645:34"><expr pos:start="645:29" pos:end="645:34"><literal type="string" pos:start="645:29" pos:end="645:34">"_STA"</literal></expr></argument>, <argument pos:start="645:37" pos:end="645:37"><expr pos:start="645:37" pos:end="645:37"><literal type="number" pos:start="645:37" pos:end="645:37">0</literal></expr></argument>, <argument pos:start="645:40" pos:end="645:56"><expr pos:start="645:40" pos:end="645:56"><name pos:start="645:40" pos:end="645:56">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="647:9" pos:end="647:78"><expr pos:start="647:9" pos:end="647:77"><name pos:start="647:9" pos:end="647:9">s</name> <operator pos:start="647:11" pos:end="647:11">=</operator> <call pos:start="647:13" pos:end="647:77"><name pos:start="647:13" pos:end="647:27">g_strdup_printf</name><argument_list pos:start="647:28" pos:end="647:77">(<argument pos:start="647:29" pos:end="647:35"><expr pos:start="647:29" pos:end="647:35"><literal type="string" pos:start="647:29" pos:end="647:35">"%s.%s"</literal></expr></argument>, <argument pos:start="647:38" pos:end="647:49"><expr pos:start="647:38" pos:end="647:49"><name pos:start="647:38" pos:end="647:49">mhp_res_path</name></expr></argument>, <argument pos:start="647:52" pos:end="647:76"><expr pos:start="647:52" pos:end="647:76"><name pos:start="647:52" pos:end="647:76">MEMORY_SLOT_STATUS_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="649:9" pos:end="649:71"><expr pos:start="649:9" pos:end="649:70"><call pos:start="649:9" pos:end="649:70"><name pos:start="649:9" pos:end="649:18">aml_append</name><argument_list pos:start="649:19" pos:end="649:70">(<argument pos:start="649:20" pos:end="649:25"><expr pos:start="649:20" pos:end="649:25"><name pos:start="649:20" pos:end="649:25">method</name></expr></argument>, <argument pos:start="649:28" pos:end="649:69"><expr pos:start="649:28" pos:end="649:69"><call pos:start="649:28" pos:end="649:69"><name pos:start="649:28" pos:end="649:37">aml_return</name><argument_list pos:start="649:38" pos:end="649:69">(<argument pos:start="649:39" pos:end="649:68"><expr pos:start="649:39" pos:end="649:68"><call pos:start="649:39" pos:end="649:68"><name pos:start="649:39" pos:end="649:47">aml_call1</name><argument_list pos:start="649:48" pos:end="649:68">(<argument pos:start="649:49" pos:end="649:49"><expr pos:start="649:49" pos:end="649:49"><name pos:start="649:49" pos:end="649:49">s</name></expr></argument>, <argument pos:start="649:52" pos:end="649:67"><expr pos:start="649:52" pos:end="649:67"><call pos:start="649:52" pos:end="649:67"><name pos:start="649:52" pos:end="649:59">aml_name</name><argument_list pos:start="649:60" pos:end="649:67">(<argument pos:start="649:61" pos:end="649:66"><expr pos:start="649:61" pos:end="649:66"><literal type="string" pos:start="649:61" pos:end="649:66">"_UID"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="651:9" pos:end="651:18"><expr pos:start="651:9" pos:end="651:17"><call pos:start="651:9" pos:end="651:17"><name pos:start="651:9" pos:end="651:14">g_free</name><argument_list pos:start="651:15" pos:end="651:17">(<argument pos:start="651:16" pos:end="651:16"><expr pos:start="651:16" pos:end="651:16"><name pos:start="651:16" pos:end="651:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:32"><expr pos:start="653:9" pos:end="653:31"><call pos:start="653:9" pos:end="653:31"><name pos:start="653:9" pos:end="653:18">aml_append</name><argument_list pos:start="653:19" pos:end="653:31">(<argument pos:start="653:20" pos:end="653:22"><expr pos:start="653:20" pos:end="653:22"><name pos:start="653:20" pos:end="653:22">dev</name></expr></argument>, <argument pos:start="653:25" pos:end="653:30"><expr pos:start="653:25" pos:end="653:30"><name pos:start="653:25" pos:end="653:30">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="657:9" pos:end="657:58"><expr pos:start="657:9" pos:end="657:57"><name pos:start="657:9" pos:end="657:14">method</name> <operator pos:start="657:16" pos:end="657:16">=</operator> <call pos:start="657:18" pos:end="657:57"><name pos:start="657:18" pos:end="657:27">aml_method</name><argument_list pos:start="657:28" pos:end="657:57">(<argument pos:start="657:29" pos:end="657:34"><expr pos:start="657:29" pos:end="657:34"><literal type="string" pos:start="657:29" pos:end="657:34">"_PXM"</literal></expr></argument>, <argument pos:start="657:37" pos:end="657:37"><expr pos:start="657:37" pos:end="657:37"><literal type="number" pos:start="657:37" pos:end="657:37">0</literal></expr></argument>, <argument pos:start="657:40" pos:end="657:56"><expr pos:start="657:40" pos:end="657:56"><name pos:start="657:40" pos:end="657:56">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="659:9" pos:end="661:58"><expr pos:start="659:9" pos:end="661:57"><name pos:start="659:9" pos:end="659:9">s</name> <operator pos:start="659:11" pos:end="659:11">=</operator> <call pos:start="659:13" pos:end="661:57"><name pos:start="659:13" pos:end="659:27">g_strdup_printf</name><argument_list pos:start="659:28" pos:end="661:57">(<argument pos:start="659:29" pos:end="659:35"><expr pos:start="659:29" pos:end="659:35"><literal type="string" pos:start="659:29" pos:end="659:35">"%s.%s"</literal></expr></argument>, <argument pos:start="659:38" pos:end="659:49"><expr pos:start="659:38" pos:end="659:49"><name pos:start="659:38" pos:end="659:49">mhp_res_path</name></expr></argument>,

                            <argument pos:start="661:29" pos:end="661:56"><expr pos:start="661:29" pos:end="661:56"><name pos:start="661:29" pos:end="661:56">MEMORY_SLOT_PROXIMITY_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:71"><expr pos:start="663:9" pos:end="663:70"><call pos:start="663:9" pos:end="663:70"><name pos:start="663:9" pos:end="663:18">aml_append</name><argument_list pos:start="663:19" pos:end="663:70">(<argument pos:start="663:20" pos:end="663:25"><expr pos:start="663:20" pos:end="663:25"><name pos:start="663:20" pos:end="663:25">method</name></expr></argument>, <argument pos:start="663:28" pos:end="663:69"><expr pos:start="663:28" pos:end="663:69"><call pos:start="663:28" pos:end="663:69"><name pos:start="663:28" pos:end="663:37">aml_return</name><argument_list pos:start="663:38" pos:end="663:69">(<argument pos:start="663:39" pos:end="663:68"><expr pos:start="663:39" pos:end="663:68"><call pos:start="663:39" pos:end="663:68"><name pos:start="663:39" pos:end="663:47">aml_call1</name><argument_list pos:start="663:48" pos:end="663:68">(<argument pos:start="663:49" pos:end="663:49"><expr pos:start="663:49" pos:end="663:49"><name pos:start="663:49" pos:end="663:49">s</name></expr></argument>, <argument pos:start="663:52" pos:end="663:67"><expr pos:start="663:52" pos:end="663:67"><call pos:start="663:52" pos:end="663:67"><name pos:start="663:52" pos:end="663:59">aml_name</name><argument_list pos:start="663:60" pos:end="663:67">(<argument pos:start="663:61" pos:end="663:66"><expr pos:start="663:61" pos:end="663:66"><literal type="string" pos:start="663:61" pos:end="663:66">"_UID"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="665:9" pos:end="665:18"><expr pos:start="665:9" pos:end="665:17"><call pos:start="665:9" pos:end="665:17"><name pos:start="665:9" pos:end="665:14">g_free</name><argument_list pos:start="665:15" pos:end="665:17">(<argument pos:start="665:16" pos:end="665:16"><expr pos:start="665:16" pos:end="665:16"><name pos:start="665:16" pos:end="665:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="667:9" pos:end="667:32"><expr pos:start="667:9" pos:end="667:31"><call pos:start="667:9" pos:end="667:31"><name pos:start="667:9" pos:end="667:18">aml_append</name><argument_list pos:start="667:19" pos:end="667:31">(<argument pos:start="667:20" pos:end="667:22"><expr pos:start="667:20" pos:end="667:22"><name pos:start="667:20" pos:end="667:22">dev</name></expr></argument>, <argument pos:start="667:25" pos:end="667:30"><expr pos:start="667:25" pos:end="667:30"><name pos:start="667:25" pos:end="667:30">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="671:9" pos:end="671:58"><expr pos:start="671:9" pos:end="671:57"><name pos:start="671:9" pos:end="671:14">method</name> <operator pos:start="671:16" pos:end="671:16">=</operator> <call pos:start="671:18" pos:end="671:57"><name pos:start="671:18" pos:end="671:27">aml_method</name><argument_list pos:start="671:28" pos:end="671:57">(<argument pos:start="671:29" pos:end="671:34"><expr pos:start="671:29" pos:end="671:34"><literal type="string" pos:start="671:29" pos:end="671:34">"_OST"</literal></expr></argument>, <argument pos:start="671:37" pos:end="671:37"><expr pos:start="671:37" pos:end="671:37"><literal type="number" pos:start="671:37" pos:end="671:37">3</literal></expr></argument>, <argument pos:start="671:40" pos:end="671:56"><expr pos:start="671:40" pos:end="671:56"><name pos:start="671:40" pos:end="671:56">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:75"><expr pos:start="673:9" pos:end="673:74"><name pos:start="673:9" pos:end="673:9">s</name> <operator pos:start="673:11" pos:end="673:11">=</operator> <call pos:start="673:13" pos:end="673:74"><name pos:start="673:13" pos:end="673:27">g_strdup_printf</name><argument_list pos:start="673:28" pos:end="673:74">(<argument pos:start="673:29" pos:end="673:35"><expr pos:start="673:29" pos:end="673:35"><literal type="string" pos:start="673:29" pos:end="673:35">"%s.%s"</literal></expr></argument>, <argument pos:start="673:38" pos:end="673:49"><expr pos:start="673:38" pos:end="673:49"><name pos:start="673:38" pos:end="673:49">mhp_res_path</name></expr></argument>, <argument pos:start="673:52" pos:end="673:73"><expr pos:start="673:52" pos:end="673:73"><name pos:start="673:52" pos:end="673:73">MEMORY_SLOT_OST_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="675:9" pos:end="679:12"><expr pos:start="675:9" pos:end="679:11"><call pos:start="675:9" pos:end="679:11"><name pos:start="675:9" pos:end="675:18">aml_append</name><argument_list pos:start="675:19" pos:end="679:11">(<argument pos:start="675:20" pos:end="675:25"><expr pos:start="675:20" pos:end="675:25"><name pos:start="675:20" pos:end="675:25">method</name></expr></argument>, <argument pos:start="675:28" pos:end="679:10"><expr pos:start="675:28" pos:end="679:10"><call pos:start="675:28" pos:end="679:10"><name pos:start="675:28" pos:end="675:37">aml_return</name><argument_list pos:start="675:38" pos:end="679:10">(<argument pos:start="675:39" pos:end="679:9"><expr pos:start="675:39" pos:end="679:9"><call pos:start="675:39" pos:end="679:9"><name pos:start="675:39" pos:end="675:47">aml_call4</name><argument_list pos:start="675:48" pos:end="679:9">(

            <argument pos:start="677:13" pos:end="677:13"><expr pos:start="677:13" pos:end="677:13"><name pos:start="677:13" pos:end="677:13">s</name></expr></argument>, <argument pos:start="677:16" pos:end="677:31"><expr pos:start="677:16" pos:end="677:31"><call pos:start="677:16" pos:end="677:31"><name pos:start="677:16" pos:end="677:23">aml_name</name><argument_list pos:start="677:24" pos:end="677:31">(<argument pos:start="677:25" pos:end="677:30"><expr pos:start="677:25" pos:end="677:30"><literal type="string" pos:start="677:25" pos:end="677:30">"_UID"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="677:34" pos:end="677:43"><expr pos:start="677:34" pos:end="677:43"><call pos:start="677:34" pos:end="677:43"><name pos:start="677:34" pos:end="677:40">aml_arg</name><argument_list pos:start="677:41" pos:end="677:43">(<argument pos:start="677:42" pos:end="677:42"><expr pos:start="677:42" pos:end="677:42"><literal type="number" pos:start="677:42" pos:end="677:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="677:46" pos:end="677:55"><expr pos:start="677:46" pos:end="677:55"><call pos:start="677:46" pos:end="677:55"><name pos:start="677:46" pos:end="677:52">aml_arg</name><argument_list pos:start="677:53" pos:end="677:55">(<argument pos:start="677:54" pos:end="677:54"><expr pos:start="677:54" pos:end="677:54"><literal type="number" pos:start="677:54" pos:end="677:54">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="677:58" pos:end="677:67"><expr pos:start="677:58" pos:end="677:67"><call pos:start="677:58" pos:end="677:67"><name pos:start="677:58" pos:end="677:64">aml_arg</name><argument_list pos:start="677:65" pos:end="677:67">(<argument pos:start="677:66" pos:end="677:66"><expr pos:start="677:66" pos:end="677:66"><literal type="number" pos:start="677:66" pos:end="677:66">2</literal></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="681:9" pos:end="681:18"><expr pos:start="681:9" pos:end="681:17"><call pos:start="681:9" pos:end="681:17"><name pos:start="681:9" pos:end="681:14">g_free</name><argument_list pos:start="681:15" pos:end="681:17">(<argument pos:start="681:16" pos:end="681:16"><expr pos:start="681:16" pos:end="681:16"><name pos:start="681:16" pos:end="681:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="683:9" pos:end="683:32"><expr pos:start="683:9" pos:end="683:31"><call pos:start="683:9" pos:end="683:31"><name pos:start="683:9" pos:end="683:18">aml_append</name><argument_list pos:start="683:19" pos:end="683:31">(<argument pos:start="683:20" pos:end="683:22"><expr pos:start="683:20" pos:end="683:22"><name pos:start="683:20" pos:end="683:22">dev</name></expr></argument>, <argument pos:start="683:25" pos:end="683:30"><expr pos:start="683:25" pos:end="683:30"><name pos:start="683:25" pos:end="683:30">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="687:9" pos:end="687:58"><expr pos:start="687:9" pos:end="687:57"><name pos:start="687:9" pos:end="687:14">method</name> <operator pos:start="687:16" pos:end="687:16">=</operator> <call pos:start="687:18" pos:end="687:57"><name pos:start="687:18" pos:end="687:27">aml_method</name><argument_list pos:start="687:28" pos:end="687:57">(<argument pos:start="687:29" pos:end="687:34"><expr pos:start="687:29" pos:end="687:34"><literal type="string" pos:start="687:29" pos:end="687:34">"_EJ0"</literal></expr></argument>, <argument pos:start="687:37" pos:end="687:37"><expr pos:start="687:37" pos:end="687:37"><literal type="number" pos:start="687:37" pos:end="687:37">1</literal></expr></argument>, <argument pos:start="687:40" pos:end="687:56"><expr pos:start="687:40" pos:end="687:56"><name pos:start="687:40" pos:end="687:56">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="689:9" pos:end="689:77"><expr pos:start="689:9" pos:end="689:76"><name pos:start="689:9" pos:end="689:9">s</name> <operator pos:start="689:11" pos:end="689:11">=</operator> <call pos:start="689:13" pos:end="689:76"><name pos:start="689:13" pos:end="689:27">g_strdup_printf</name><argument_list pos:start="689:28" pos:end="689:76">(<argument pos:start="689:29" pos:end="689:35"><expr pos:start="689:29" pos:end="689:35"><literal type="string" pos:start="689:29" pos:end="689:35">"%s.%s"</literal></expr></argument>, <argument pos:start="689:38" pos:end="689:49"><expr pos:start="689:38" pos:end="689:49"><name pos:start="689:38" pos:end="689:49">mhp_res_path</name></expr></argument>, <argument pos:start="689:52" pos:end="689:75"><expr pos:start="689:52" pos:end="689:75"><name pos:start="689:52" pos:end="689:75">MEMORY_SLOT_EJECT_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="691:9" pos:end="693:54"><expr pos:start="691:9" pos:end="693:53"><call pos:start="691:9" pos:end="693:53"><name pos:start="691:9" pos:end="691:18">aml_append</name><argument_list pos:start="691:19" pos:end="693:53">(<argument pos:start="691:20" pos:end="691:25"><expr pos:start="691:20" pos:end="691:25"><name pos:start="691:20" pos:end="691:25">method</name></expr></argument>, <argument pos:start="691:28" pos:end="693:52"><expr pos:start="691:28" pos:end="693:52"><call pos:start="691:28" pos:end="693:52"><name pos:start="691:28" pos:end="691:37">aml_return</name><argument_list pos:start="691:38" pos:end="693:52">(<argument pos:start="691:39" pos:end="693:51"><expr pos:start="691:39" pos:end="693:51"><call pos:start="691:39" pos:end="693:51"><name pos:start="691:39" pos:end="691:47">aml_call2</name><argument_list pos:start="691:48" pos:end="693:51">(

                   <argument pos:start="693:20" pos:end="693:20"><expr pos:start="693:20" pos:end="693:20"><name pos:start="693:20" pos:end="693:20">s</name></expr></argument>, <argument pos:start="693:23" pos:end="693:38"><expr pos:start="693:23" pos:end="693:38"><call pos:start="693:23" pos:end="693:38"><name pos:start="693:23" pos:end="693:30">aml_name</name><argument_list pos:start="693:31" pos:end="693:38">(<argument pos:start="693:32" pos:end="693:37"><expr pos:start="693:32" pos:end="693:37"><literal type="string" pos:start="693:32" pos:end="693:37">"_UID"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="693:41" pos:end="693:50"><expr pos:start="693:41" pos:end="693:50"><call pos:start="693:41" pos:end="693:50"><name pos:start="693:41" pos:end="693:47">aml_arg</name><argument_list pos:start="693:48" pos:end="693:50">(<argument pos:start="693:49" pos:end="693:49"><expr pos:start="693:49" pos:end="693:49"><literal type="number" pos:start="693:49" pos:end="693:49">0</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="695:9" pos:end="695:18"><expr pos:start="695:9" pos:end="695:17"><call pos:start="695:9" pos:end="695:17"><name pos:start="695:9" pos:end="695:14">g_free</name><argument_list pos:start="695:15" pos:end="695:17">(<argument pos:start="695:16" pos:end="695:16"><expr pos:start="695:16" pos:end="695:16"><name pos:start="695:16" pos:end="695:16">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="697:9" pos:end="697:32"><expr pos:start="697:9" pos:end="697:31"><call pos:start="697:9" pos:end="697:31"><name pos:start="697:9" pos:end="697:18">aml_append</name><argument_list pos:start="697:19" pos:end="697:31">(<argument pos:start="697:20" pos:end="697:22"><expr pos:start="697:20" pos:end="697:22"><name pos:start="697:20" pos:end="697:22">dev</name></expr></argument>, <argument pos:start="697:25" pos:end="697:30"><expr pos:start="697:25" pos:end="697:30"><name pos:start="697:25" pos:end="697:30">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="701:9" pos:end="701:34"><expr pos:start="701:9" pos:end="701:33"><call pos:start="701:9" pos:end="701:33"><name pos:start="701:9" pos:end="701:18">aml_append</name><argument_list pos:start="701:19" pos:end="701:33">(<argument pos:start="701:20" pos:end="701:27"><expr pos:start="701:20" pos:end="701:27"><name pos:start="701:20" pos:end="701:27">sb_scope</name></expr></argument>, <argument pos:start="701:30" pos:end="701:32"><expr pos:start="701:30" pos:end="701:32"><name pos:start="701:30" pos:end="701:32">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="707:5" pos:end="711:7">/* build Method(MEMORY_SLOT_NOTIFY_METHOD, 2) {

     *     If (LEqual(Arg0, 0x00)) {Notify(MP00, Arg1)} ... }

     */</comment>

    <expr_stmt pos:start="713:5" pos:end="713:73"><expr pos:start="713:5" pos:end="713:72"><name pos:start="713:5" pos:end="713:10">method</name> <operator pos:start="713:12" pos:end="713:12">=</operator> <call pos:start="713:14" pos:end="713:72"><name pos:start="713:14" pos:end="713:23">aml_method</name><argument_list pos:start="713:24" pos:end="713:72">(<argument pos:start="713:25" pos:end="713:49"><expr pos:start="713:25" pos:end="713:49"><name pos:start="713:25" pos:end="713:49">MEMORY_SLOT_NOTIFY_METHOD</name></expr></argument>, <argument pos:start="713:52" pos:end="713:52"><expr pos:start="713:52" pos:end="713:52"><literal type="number" pos:start="713:52" pos:end="713:52">2</literal></expr></argument>, <argument pos:start="713:55" pos:end="713:71"><expr pos:start="713:55" pos:end="713:71"><name pos:start="713:55" pos:end="713:71">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="715:5" pos:end="727:5">for <control pos:start="715:9" pos:end="715:32">(<init pos:start="715:10" pos:end="715:15"><expr pos:start="715:10" pos:end="715:14"><name pos:start="715:10" pos:end="715:10">i</name> <operator pos:start="715:12" pos:end="715:12">=</operator> <literal type="number" pos:start="715:14" pos:end="715:14">0</literal></expr>;</init> <condition pos:start="715:17" pos:end="715:27"><expr pos:start="715:17" pos:end="715:26"><name pos:start="715:17" pos:end="715:17">i</name> <operator pos:start="715:19" pos:end="715:19">&lt;</operator> <name pos:start="715:21" pos:end="715:26">nr_mem</name></expr>;</condition> <incr pos:start="715:29" pos:end="715:31"><expr pos:start="715:29" pos:end="715:31"><name pos:start="715:29" pos:end="715:29">i</name><operator pos:start="715:30" pos:end="715:31">++</operator></expr></incr>)</control> <block pos:start="715:34" pos:end="727:5">{<block_content pos:start="717:9" pos:end="725:34">

        <expr_stmt pos:start="717:9" pos:end="717:58"><expr pos:start="717:9" pos:end="717:57"><name pos:start="717:9" pos:end="717:13">ifctx</name> <operator pos:start="717:15" pos:end="717:15">=</operator> <call pos:start="717:17" pos:end="717:57"><name pos:start="717:17" pos:end="717:22">aml_if</name><argument_list pos:start="717:23" pos:end="717:57">(<argument pos:start="717:24" pos:end="717:56"><expr pos:start="717:24" pos:end="717:56"><call pos:start="717:24" pos:end="717:56"><name pos:start="717:24" pos:end="717:32">aml_equal</name><argument_list pos:start="717:33" pos:end="717:56">(<argument pos:start="717:34" pos:end="717:43"><expr pos:start="717:34" pos:end="717:43"><call pos:start="717:34" pos:end="717:43"><name pos:start="717:34" pos:end="717:40">aml_arg</name><argument_list pos:start="717:41" pos:end="717:43">(<argument pos:start="717:42" pos:end="717:42"><expr pos:start="717:42" pos:end="717:42"><literal type="number" pos:start="717:42" pos:end="717:42">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="717:46" pos:end="717:55"><expr pos:start="717:46" pos:end="717:55"><call pos:start="717:46" pos:end="717:55"><name pos:start="717:46" pos:end="717:52">aml_int</name><argument_list pos:start="717:53" pos:end="717:55">(<argument pos:start="717:54" pos:end="717:54"><expr pos:start="717:54" pos:end="717:54"><name pos:start="717:54" pos:end="717:54">i</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="719:9" pos:end="723:10"><expr pos:start="719:9" pos:end="723:9"><call pos:start="719:9" pos:end="723:9"><name pos:start="719:9" pos:end="719:18">aml_append</name><argument_list pos:start="719:19" pos:end="723:9">(<argument pos:start="719:20" pos:end="719:24"><expr pos:start="719:20" pos:end="719:24"><name pos:start="719:20" pos:end="719:24">ifctx</name></expr></argument>,

            <argument pos:start="721:13" pos:end="721:58"><expr pos:start="721:13" pos:end="721:58"><call pos:start="721:13" pos:end="721:58"><name pos:start="721:13" pos:end="721:22">aml_notify</name><argument_list pos:start="721:23" pos:end="721:58">(<argument pos:start="721:24" pos:end="721:45"><expr pos:start="721:24" pos:end="721:45"><call pos:start="721:24" pos:end="721:45"><name pos:start="721:24" pos:end="721:31">aml_name</name><argument_list pos:start="721:32" pos:end="721:45">(<argument pos:start="721:33" pos:end="721:41"><expr pos:start="721:33" pos:end="721:41"><literal type="string" pos:start="721:33" pos:end="721:41">"MP%.02X"</literal></expr></argument>, <argument pos:start="721:44" pos:end="721:44"><expr pos:start="721:44" pos:end="721:44"><name pos:start="721:44" pos:end="721:44">i</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="721:48" pos:end="721:57"><expr pos:start="721:48" pos:end="721:57"><call pos:start="721:48" pos:end="721:57"><name pos:start="721:48" pos:end="721:54">aml_arg</name><argument_list pos:start="721:55" pos:end="721:57">(<argument pos:start="721:56" pos:end="721:56"><expr pos:start="721:56" pos:end="721:56"><literal type="number" pos:start="721:56" pos:end="721:56">1</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="725:9" pos:end="725:34"><expr pos:start="725:9" pos:end="725:33"><call pos:start="725:9" pos:end="725:33"><name pos:start="725:9" pos:end="725:18">aml_append</name><argument_list pos:start="725:19" pos:end="725:33">(<argument pos:start="725:20" pos:end="725:25"><expr pos:start="725:20" pos:end="725:25"><name pos:start="725:20" pos:end="725:25">method</name></expr></argument>, <argument pos:start="725:28" pos:end="725:32"><expr pos:start="725:28" pos:end="725:32"><name pos:start="725:28" pos:end="725:32">ifctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="729:5" pos:end="729:33"><expr pos:start="729:5" pos:end="729:32"><call pos:start="729:5" pos:end="729:32"><name pos:start="729:5" pos:end="729:14">aml_append</name><argument_list pos:start="729:15" pos:end="729:32">(<argument pos:start="729:16" pos:end="729:23"><expr pos:start="729:16" pos:end="729:23"><name pos:start="729:16" pos:end="729:23">sb_scope</name></expr></argument>, <argument pos:start="729:26" pos:end="729:31"><expr pos:start="729:26" pos:end="729:31"><name pos:start="729:26" pos:end="729:31">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="731:5" pos:end="731:32"><expr pos:start="731:5" pos:end="731:31"><call pos:start="731:5" pos:end="731:31"><name pos:start="731:5" pos:end="731:14">aml_append</name><argument_list pos:start="731:15" pos:end="731:31">(<argument pos:start="731:16" pos:end="731:20"><expr pos:start="731:16" pos:end="731:20"><name pos:start="731:16" pos:end="731:20">table</name></expr></argument>, <argument pos:start="731:23" pos:end="731:30"><expr pos:start="731:23" pos:end="731:30"><name pos:start="731:23" pos:end="731:30">sb_scope</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="735:5" pos:end="735:68"><expr pos:start="735:5" pos:end="735:67"><name pos:start="735:5" pos:end="735:10">method</name> <operator pos:start="735:12" pos:end="735:12">=</operator> <call pos:start="735:14" pos:end="735:67"><name pos:start="735:14" pos:end="735:23">aml_method</name><argument_list pos:start="735:24" pos:end="735:67">(<argument pos:start="735:25" pos:end="735:44"><expr pos:start="735:25" pos:end="735:44"><name pos:start="735:25" pos:end="735:44">event_handler_method</name></expr></argument>, <argument pos:start="735:47" pos:end="735:47"><expr pos:start="735:47" pos:end="735:47"><literal type="number" pos:start="735:47" pos:end="735:47">0</literal></expr></argument>, <argument pos:start="735:50" pos:end="735:66"><expr pos:start="735:50" pos:end="735:66"><name pos:start="735:50" pos:end="735:66">AML_NOTSERIALIZED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="737:5" pos:end="737:80"><expr pos:start="737:5" pos:end="737:79"><name pos:start="737:5" pos:end="737:13">scan_path</name> <operator pos:start="737:15" pos:end="737:15">=</operator> <call pos:start="737:17" pos:end="737:79"><name pos:start="737:17" pos:end="737:31">g_strdup_printf</name><argument_list pos:start="737:32" pos:end="737:79">(<argument pos:start="737:33" pos:end="737:39"><expr pos:start="737:33" pos:end="737:39"><literal type="string" pos:start="737:33" pos:end="737:39">"%s.%s"</literal></expr></argument>, <argument pos:start="737:42" pos:end="737:53"><expr pos:start="737:42" pos:end="737:53"><name pos:start="737:42" pos:end="737:53">mhp_res_path</name></expr></argument>, <argument pos:start="737:56" pos:end="737:78"><expr pos:start="737:56" pos:end="737:78"><name pos:start="737:56" pos:end="737:78">MEMORY_SLOT_SCAN_METHOD</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="739:5" pos:end="739:45"><expr pos:start="739:5" pos:end="739:44"><call pos:start="739:5" pos:end="739:44"><name pos:start="739:5" pos:end="739:14">aml_append</name><argument_list pos:start="739:15" pos:end="739:44">(<argument pos:start="739:16" pos:end="739:21"><expr pos:start="739:16" pos:end="739:21"><name pos:start="739:16" pos:end="739:21">method</name></expr></argument>, <argument pos:start="739:24" pos:end="739:43"><expr pos:start="739:24" pos:end="739:43"><call pos:start="739:24" pos:end="739:43"><name pos:start="739:24" pos:end="739:32">aml_call0</name><argument_list pos:start="739:33" pos:end="739:43">(<argument pos:start="739:34" pos:end="739:42"><expr pos:start="739:34" pos:end="739:42"><name pos:start="739:34" pos:end="739:42">scan_path</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="741:5" pos:end="741:22"><expr pos:start="741:5" pos:end="741:21"><call pos:start="741:5" pos:end="741:21"><name pos:start="741:5" pos:end="741:10">g_free</name><argument_list pos:start="741:11" pos:end="741:21">(<argument pos:start="741:12" pos:end="741:20"><expr pos:start="741:12" pos:end="741:20"><name pos:start="741:12" pos:end="741:20">scan_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="743:5" pos:end="743:30"><expr pos:start="743:5" pos:end="743:29"><call pos:start="743:5" pos:end="743:29"><name pos:start="743:5" pos:end="743:14">aml_append</name><argument_list pos:start="743:15" pos:end="743:29">(<argument pos:start="743:16" pos:end="743:20"><expr pos:start="743:16" pos:end="743:20"><name pos:start="743:16" pos:end="743:20">table</name></expr></argument>, <argument pos:start="743:23" pos:end="743:28"><expr pos:start="743:23" pos:end="743:28"><name pos:start="743:23" pos:end="743:28">method</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="747:5" pos:end="747:25"><expr pos:start="747:5" pos:end="747:24"><call pos:start="747:5" pos:end="747:24"><name pos:start="747:5" pos:end="747:10">g_free</name><argument_list pos:start="747:11" pos:end="747:24">(<argument pos:start="747:12" pos:end="747:23"><expr pos:start="747:12" pos:end="747:23"><name pos:start="747:12" pos:end="747:23">mhp_res_path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
