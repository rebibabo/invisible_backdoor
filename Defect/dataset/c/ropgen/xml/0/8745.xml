<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8745.c" pos:tabs="8"><function pos:start="1:1" pos:end="31:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:34">virtio_pci_vector_mask</name><parameter_list pos:start="1:35" pos:end="1:67">(<parameter pos:start="1:36" pos:end="1:49"><decl pos:start="1:36" pos:end="1:49"><type pos:start="1:36" pos:end="1:49"><name pos:start="1:36" pos:end="1:44">PCIDevice</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">dev</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:59">unsigned</name></type> <name pos:start="1:61" pos:end="1:66">vector</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="31:1">{<block_content pos:start="5:5" pos:end="29:5">

    <decl_stmt pos:start="5:5" pos:end="5:71"><decl pos:start="5:5" pos:end="5:70"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtIOPCIProxy</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">proxy</name> <init pos:start="5:27" pos:end="5:70">= <expr pos:start="5:29" pos:end="5:70"><call pos:start="5:29" pos:end="5:70"><name pos:start="5:29" pos:end="5:40">container_of</name><argument_list pos:start="5:41" pos:end="5:70">(<argument pos:start="5:42" pos:end="5:44"><expr pos:start="5:42" pos:end="5:44"><name pos:start="5:42" pos:end="5:44">dev</name></expr></argument>, <argument pos:start="5:47" pos:end="5:60"><expr pos:start="5:47" pos:end="5:60"><name pos:start="5:47" pos:end="5:60">VirtIOPCIProxy</name></expr></argument>, <argument pos:start="5:63" pos:end="5:69"><expr pos:start="5:63" pos:end="5:69"><name pos:start="5:63" pos:end="5:69">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:16">VirtIODevice</name> <modifier pos:start="7:18" pos:end="7:18">*</modifier></type><name pos:start="7:19" pos:end="7:22">vdev</name> <init pos:start="7:24" pos:end="7:59">= <expr pos:start="7:26" pos:end="7:59"><call pos:start="7:26" pos:end="7:59"><name pos:start="7:26" pos:end="7:46">virtio_bus_get_device</name><argument_list pos:start="7:47" pos:end="7:59">(<argument pos:start="7:48" pos:end="7:58"><expr pos:start="7:48" pos:end="7:58"><operator pos:start="7:48" pos:end="7:48">&amp;</operator><name pos:start="7:49" pos:end="7:58"><name pos:start="7:49" pos:end="7:53">proxy</name><operator pos:start="7:54" pos:end="7:55">-&gt;</operator><name pos:start="7:56" pos:end="7:58">bus</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:60"><decl pos:start="9:5" pos:end="9:59"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">VirtQueue</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:17">vq</name> <init pos:start="9:19" pos:end="9:59">= <expr pos:start="9:21" pos:end="9:59"><call pos:start="9:21" pos:end="9:59"><name pos:start="9:21" pos:end="9:45">virtio_vector_first_queue</name><argument_list pos:start="9:46" pos:end="9:59">(<argument pos:start="9:47" pos:end="9:50"><expr pos:start="9:47" pos:end="9:50"><name pos:start="9:47" pos:end="9:50">vdev</name></expr></argument>, <argument pos:start="9:53" pos:end="9:58"><expr pos:start="9:53" pos:end="9:58"><name pos:start="9:53" pos:end="9:58">vector</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">index</name></decl>;</decl_stmt>



    <while pos:start="15:5" pos:end="29:5">while <condition pos:start="15:11" pos:end="15:14">(<expr pos:start="15:12" pos:end="15:13"><name pos:start="15:12" pos:end="15:13">vq</name></expr>)</condition> <block pos:start="15:16" pos:end="29:5">{<block_content pos:start="17:9" pos:end="27:42">

        <expr_stmt pos:start="17:9" pos:end="17:43"><expr pos:start="17:9" pos:end="17:42"><name pos:start="17:9" pos:end="17:13">index</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:42"><name pos:start="17:17" pos:end="17:38">virtio_get_queue_index</name><argument_list pos:start="17:39" pos:end="17:42">(<argument pos:start="17:40" pos:end="17:41"><expr pos:start="17:40" pos:end="17:41"><name pos:start="17:40" pos:end="17:41">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="19:9" pos:end="23:9"><if pos:start="19:9" pos:end="23:9">if <condition pos:start="19:12" pos:end="19:47">(<expr pos:start="19:13" pos:end="19:46"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:46"><name pos:start="19:14" pos:end="19:33">virtio_queue_get_num</name><argument_list pos:start="19:34" pos:end="19:46">(<argument pos:start="19:35" pos:end="19:38"><expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">vdev</name></expr></argument>, <argument pos:start="19:41" pos:end="19:45"><expr pos:start="19:41" pos:end="19:45"><name pos:start="19:41" pos:end="19:45">index</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:49" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:18">

            <break pos:start="21:13" pos:end="21:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:56"><expr pos:start="25:9" pos:end="25:55"><call pos:start="25:9" pos:end="25:55"><name pos:start="25:9" pos:end="25:33">virtio_pci_vq_vector_mask</name><argument_list pos:start="25:34" pos:end="25:55">(<argument pos:start="25:35" pos:end="25:39"><expr pos:start="25:35" pos:end="25:39"><name pos:start="25:35" pos:end="25:39">proxy</name></expr></argument>, <argument pos:start="25:42" pos:end="25:46"><expr pos:start="25:42" pos:end="25:46"><name pos:start="25:42" pos:end="25:46">index</name></expr></argument>, <argument pos:start="25:49" pos:end="25:54"><expr pos:start="25:49" pos:end="25:54"><name pos:start="25:49" pos:end="25:54">vector</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:42"><expr pos:start="27:9" pos:end="27:41"><name pos:start="27:9" pos:end="27:10">vq</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <call pos:start="27:14" pos:end="27:41"><name pos:start="27:14" pos:end="27:37">virtio_vector_next_queue</name><argument_list pos:start="27:38" pos:end="27:41">(<argument pos:start="27:39" pos:end="27:40"><expr pos:start="27:39" pos:end="27:40"><name pos:start="27:39" pos:end="27:40">vq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
