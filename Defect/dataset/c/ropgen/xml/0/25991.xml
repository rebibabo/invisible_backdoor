<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25991.c" pos:tabs="8"><function pos:start="1:1" pos:end="97:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:26">omap_sti_write</name><parameter_list pos:start="1:27" pos:end="3:57">(<parameter pos:start="1:28" pos:end="1:39"><decl pos:start="1:28" pos:end="1:39"><type pos:start="1:28" pos:end="1:39"><name pos:start="1:28" pos:end="1:31">void</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:39">opaque</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:64"><decl pos:start="1:42" pos:end="1:64"><type pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:59">target_phys_addr_t</name></type> <name pos:start="1:61" pos:end="1:64">addr</name></decl></parameter>,

                           <parameter pos:start="3:28" pos:end="3:41"><decl pos:start="3:28" pos:end="3:41"><type pos:start="3:28" pos:end="3:41"><name pos:start="3:28" pos:end="3:35">uint64_t</name></type> <name pos:start="3:37" pos:end="3:41">value</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">unsigned</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="97:1">{<block_content pos:start="7:5" pos:end="95:5">

    <decl_stmt pos:start="7:5" pos:end="7:56"><decl pos:start="7:5" pos:end="7:55"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:21">omap_sti_s</name></name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:55">= <expr pos:start="7:28" pos:end="7:55"><operator pos:start="7:28" pos:end="7:28">(</operator>struct <name pos:start="7:36" pos:end="7:45">omap_sti_s</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator> <name pos:start="7:50" pos:end="7:55">opaque</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:12">size</name> <operator pos:start="11:14" pos:end="11:15">!=</operator> <literal type="number" pos:start="11:17" pos:end="11:17">4</literal></expr>)</condition> <block pos:start="11:20" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:58">

        <return pos:start="13:9" pos:end="13:58">return <expr pos:start="13:16" pos:end="13:57"><call pos:start="13:16" pos:end="13:57"><name pos:start="13:16" pos:end="13:36">omap_badwidth_write32</name><argument_list pos:start="13:37" pos:end="13:57">(<argument pos:start="13:38" pos:end="13:43"><expr pos:start="13:38" pos:end="13:43"><name pos:start="13:38" pos:end="13:43">opaque</name></expr></argument>, <argument pos:start="13:46" pos:end="13:49"><expr pos:start="13:46" pos:end="13:49"><name pos:start="13:46" pos:end="13:49">addr</name></expr></argument>, <argument pos:start="13:52" pos:end="13:56"><expr pos:start="13:52" pos:end="13:56"><name pos:start="13:52" pos:end="13:56">value</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="19:5" pos:end="95:5">switch <condition pos:start="19:12" pos:end="19:17">(<expr pos:start="19:13" pos:end="19:16"><name pos:start="19:13" pos:end="19:16">addr</name></expr>)</condition> <block pos:start="19:19" pos:end="95:5">{<block_content pos:start="21:5" pos:end="93:15">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case>	<comment type="block" pos:start="21:17" pos:end="21:34">/* STI_REVISION */</comment>

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x14</literal></expr>:</case>	<comment type="block" pos:start="23:17" pos:end="23:67">/* STI_SYSSTATUS / STI_RX_STATUS / XTI_SYSSTATUS */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:26"><expr pos:start="25:9" pos:end="25:25"><call pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:19">OMAP_RO_REG</name><argument_list pos:start="25:20" pos:end="25:25">(<argument pos:start="25:21" pos:end="25:24"><expr pos:start="25:21" pos:end="25:24"><name pos:start="25:21" pos:end="25:24">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:15">return;</return>



    <case pos:start="31:5" pos:end="31:14">case <expr pos:start="31:10" pos:end="31:13"><literal type="number" pos:start="31:10" pos:end="31:13">0x10</literal></expr>:</case>	<comment type="block" pos:start="31:17" pos:end="31:35">/* STI_SYSCONFIG */</comment>

        <if_stmt pos:start="33:9" pos:end="35:30"><if pos:start="33:9" pos:end="35:30">if <condition pos:start="33:12" pos:end="33:29">(<expr pos:start="33:13" pos:end="33:28"><name pos:start="33:13" pos:end="33:17">value</name> <operator pos:start="33:19" pos:end="33:19">&amp;</operator> <operator pos:start="33:21" pos:end="33:21">(</operator><literal type="number" pos:start="33:22" pos:end="33:22">1</literal> <operator pos:start="33:24" pos:end="33:25">&lt;&lt;</operator> <literal type="number" pos:start="33:27" pos:end="33:27">1</literal><operator pos:start="33:28" pos:end="33:28">)</operator></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:30"><block_content pos:start="35:13" pos:end="35:30">				<comment type="block" pos:start="33:57" pos:end="33:71">/* SOFTRESET */</comment>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><call pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:26">omap_sti_reset</name><argument_list pos:start="35:27" pos:end="35:29">(<argument pos:start="35:28" pos:end="35:28"><expr pos:start="35:28" pos:end="35:28"><name pos:start="35:28" pos:end="35:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:20"><name pos:start="37:9" pos:end="37:9">s</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:20">sysconfig</name></name> <operator pos:start="37:22" pos:end="37:22">=</operator> <name pos:start="37:24" pos:end="37:28">value</name> <operator pos:start="37:30" pos:end="37:30">&amp;</operator> <literal type="number" pos:start="37:32" pos:end="37:35">0xfe</literal></expr>;</expr_stmt>

        <break pos:start="39:9" pos:end="39:14">break;</break>



    <case pos:start="43:5" pos:end="43:14">case <expr pos:start="43:10" pos:end="43:13"><literal type="number" pos:start="43:10" pos:end="43:13">0x18</literal></expr>:</case>	<comment type="block" pos:start="43:17" pos:end="43:35">/* STI_IRQSTATUS */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:27"><expr pos:start="45:9" pos:end="45:26"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">irqst</name></name> <operator pos:start="45:18" pos:end="45:19">&amp;=</operator> <operator pos:start="45:21" pos:end="45:21">~</operator><name pos:start="45:22" pos:end="45:26">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:37"><expr pos:start="47:9" pos:end="47:36"><call pos:start="47:9" pos:end="47:36"><name pos:start="47:9" pos:end="47:33">omap_sti_interrupt_update</name><argument_list pos:start="47:34" pos:end="47:36">(<argument pos:start="47:35" pos:end="47:35"><expr pos:start="47:35" pos:end="47:35"><name pos:start="47:35" pos:end="47:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>



    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x1c</literal></expr>:</case>	<comment type="block" pos:start="53:17" pos:end="53:49">/* STI_IRQSETEN / STI_IRQCLREN */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:16"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">irqen</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <name pos:start="55:20" pos:end="55:24">value</name> <operator pos:start="55:26" pos:end="55:26">&amp;</operator> <literal type="number" pos:start="55:28" pos:end="55:33">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:37"><expr pos:start="57:9" pos:end="57:36"><call pos:start="57:9" pos:end="57:36"><name pos:start="57:9" pos:end="57:33">omap_sti_interrupt_update</name><argument_list pos:start="57:34" pos:end="57:36">(<argument pos:start="57:35" pos:end="57:35"><expr pos:start="57:35" pos:end="57:35"><name pos:start="57:35" pos:end="57:35">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x2c</literal></expr>:</case>	<comment type="block" pos:start="63:17" pos:end="63:49">/* STI_CLK_CTRL / XTI_SCLKCRTL */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:37"><expr pos:start="65:9" pos:end="65:36"><name pos:start="65:9" pos:end="65:21"><name pos:start="65:9" pos:end="65:9">s</name><operator pos:start="65:10" pos:end="65:11">-&gt;</operator><name pos:start="65:12" pos:end="65:21">clkcontrol</name></name> <operator pos:start="65:23" pos:end="65:23">=</operator> <name pos:start="65:25" pos:end="65:29">value</name> <operator pos:start="65:31" pos:end="65:31">&amp;</operator> <literal type="number" pos:start="65:33" pos:end="65:36">0xff</literal></expr>;</expr_stmt>

        <break pos:start="67:9" pos:end="67:14">break;</break>



    <case pos:start="71:5" pos:end="71:14">case <expr pos:start="71:10" pos:end="71:13"><literal type="number" pos:start="71:10" pos:end="71:13">0x30</literal></expr>:</case>	<comment type="block" pos:start="71:17" pos:end="71:50">/* STI_SERIAL_CFG / XTI_SCONFIG */</comment>

        <expr_stmt pos:start="73:9" pos:end="73:40"><expr pos:start="73:9" pos:end="73:39"><name pos:start="73:9" pos:end="73:24"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:24">serial_config</name></name> <operator pos:start="73:26" pos:end="73:26">=</operator> <name pos:start="73:28" pos:end="73:32">value</name> <operator pos:start="73:34" pos:end="73:34">&amp;</operator> <literal type="number" pos:start="73:36" pos:end="73:39">0xff</literal></expr>;</expr_stmt>

        <break pos:start="75:9" pos:end="75:14">break;</break>



    <case pos:start="79:5" pos:end="79:14">case <expr pos:start="79:10" pos:end="79:13"><literal type="number" pos:start="79:10" pos:end="79:13">0x24</literal></expr>:</case>	<comment type="block" pos:start="79:17" pos:end="79:55">/* STI_ER / STI_DR / XTI_TRACESELECT */</comment>

    <case pos:start="81:5" pos:end="81:14">case <expr pos:start="81:10" pos:end="81:13"><literal type="number" pos:start="81:10" pos:end="81:13">0x28</literal></expr>:</case>	<comment type="block" pos:start="81:17" pos:end="81:44">/* STI_RX_DR / XTI_RXDATA */</comment>

        <comment type="block" pos:start="83:9" pos:end="83:18">/* TODO */</comment>

        <return pos:start="85:9" pos:end="85:15">return;</return>



    <default pos:start="89:5" pos:end="89:12">default:</default>

        <expr_stmt pos:start="91:9" pos:end="91:27"><expr pos:start="91:9" pos:end="91:26"><call pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:20">OMAP_BAD_REG</name><argument_list pos:start="91:21" pos:end="91:26">(<argument pos:start="91:22" pos:end="91:25"><expr pos:start="91:22" pos:end="91:25"><name pos:start="91:22" pos:end="91:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:15">return;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
