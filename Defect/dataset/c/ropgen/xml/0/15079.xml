<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15079.c" pos:tabs="8"><function pos:start="1:1" pos:end="33:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">helper_memalign</name><parameter_list pos:start="1:21" pos:end="1:76">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:29">uint32_t</name></type> <name pos:start="1:31" pos:end="1:34">addr</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:47"><decl pos:start="1:37" pos:end="1:47"><type pos:start="1:37" pos:end="1:47"><name pos:start="1:37" pos:end="1:44">uint32_t</name></type> <name pos:start="1:46" pos:end="1:47">dr</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:60"><decl pos:start="1:50" pos:end="1:60"><type pos:start="1:50" pos:end="1:60"><name pos:start="1:50" pos:end="1:57">uint32_t</name></type> <name pos:start="1:59" pos:end="1:60">wr</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:75"><decl pos:start="1:63" pos:end="1:75"><type pos:start="1:63" pos:end="1:75"><name pos:start="1:63" pos:end="1:70">uint32_t</name></type> <name pos:start="1:72" pos:end="1:75">mask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="33:1">{<block_content pos:start="5:5" pos:end="31:5">

    <if_stmt pos:start="5:5" pos:end="31:5"><if pos:start="5:5" pos:end="31:5">if <condition pos:start="5:8" pos:end="5:20">(<expr pos:start="5:9" pos:end="5:19"><name pos:start="5:9" pos:end="5:12">addr</name> <operator pos:start="5:14" pos:end="5:14">&amp;</operator> <name pos:start="5:16" pos:end="5:19">mask</name></expr>)</condition> <block pos:start="5:22" pos:end="31:5">{<block_content pos:start="7:13" pos:end="29:49">

            <expr_stmt pos:start="7:13" pos:end="9:37"><expr pos:start="7:13" pos:end="9:36"><call pos:start="7:13" pos:end="9:36"><name pos:start="7:13" pos:end="7:20">qemu_log</name><argument_list pos:start="7:21" pos:end="9:36">(<argument pos:start="7:22" pos:end="7:64"><expr pos:start="7:22" pos:end="7:64"><literal type="string" pos:start="7:22" pos:end="7:64">"unaligned access addr=%x mask=%x, wr=%d\n"</literal></expr></argument>,

                     <argument pos:start="9:22" pos:end="9:25"><expr pos:start="9:22" pos:end="9:25"><name pos:start="9:22" pos:end="9:25">addr</name></expr></argument>, <argument pos:start="9:28" pos:end="9:31"><expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">mask</name></expr></argument>, <argument pos:start="9:34" pos:end="9:35"><expr pos:start="9:34" pos:end="9:35"><name pos:start="9:34" pos:end="9:35">wr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="11:13" pos:end="15:13"><if pos:start="11:13" pos:end="15:13">if <condition pos:start="11:16" pos:end="11:47">(<expr pos:start="11:17" pos:end="11:46"><operator pos:start="11:17" pos:end="11:17">!</operator><operator pos:start="11:18" pos:end="11:18">(</operator><name pos:start="11:19" pos:end="11:36"><name pos:start="11:19" pos:end="11:21">env</name><operator pos:start="11:22" pos:end="11:23">-&gt;</operator><name pos:start="11:24" pos:end="11:28">sregs</name><index pos:start="11:29" pos:end="11:36">[<expr pos:start="11:30" pos:end="11:35"><name pos:start="11:30" pos:end="11:35">SR_MSR</name></expr>]</index></name> <operator pos:start="11:38" pos:end="11:38">&amp;</operator> <name pos:start="11:40" pos:end="11:45">MSR_EE</name><operator pos:start="11:46" pos:end="11:46">)</operator></expr>)</condition> <block pos:start="11:49" pos:end="15:13">{<block_content pos:start="13:17" pos:end="13:23">

                <return pos:start="13:17" pos:end="13:23">return;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="19:13" pos:end="21:50"><expr pos:start="19:13" pos:end="21:49"><name pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:15">env</name><operator pos:start="19:16" pos:end="19:17">-&gt;</operator><name pos:start="19:18" pos:end="19:22">sregs</name><index pos:start="19:23" pos:end="19:30">[<expr pos:start="19:24" pos:end="19:29"><name pos:start="19:24" pos:end="19:29">SR_ESR</name></expr>]</index></name> <operator pos:start="19:32" pos:end="19:32">=</operator> <name pos:start="19:34" pos:end="19:54">ESR_EC_UNALIGNED_DATA</name> <operator pos:start="19:56" pos:end="19:56">|</operator> <operator pos:start="19:58" pos:end="19:58">(</operator><name pos:start="19:59" pos:end="19:60">wr</name> <operator pos:start="19:62" pos:end="19:63">&lt;&lt;</operator> <literal type="number" pos:start="19:65" pos:end="19:66">10</literal><operator pos:start="19:67" pos:end="19:67">)</operator> \

                                 <operator pos:start="21:34" pos:end="21:34">|</operator> <operator pos:start="21:36" pos:end="21:36">(</operator><name pos:start="21:37" pos:end="21:38">dr</name> <operator pos:start="21:40" pos:end="21:40">&amp;</operator> <literal type="number" pos:start="21:42" pos:end="21:43">31</literal><operator pos:start="21:44" pos:end="21:44">)</operator> <operator pos:start="21:46" pos:end="21:47">&lt;&lt;</operator> <literal type="number" pos:start="21:49" pos:end="21:49">5</literal></expr>;</expr_stmt>

            <if_stmt pos:start="23:13" pos:end="27:13"><if pos:start="23:13" pos:end="27:13">if <condition pos:start="23:16" pos:end="23:26">(<expr pos:start="23:17" pos:end="23:25"><name pos:start="23:17" pos:end="23:20">mask</name> <operator pos:start="23:22" pos:end="23:23">==</operator> <literal type="number" pos:start="23:25" pos:end="23:25">3</literal></expr>)</condition> <block pos:start="23:28" pos:end="27:13">{<block_content pos:start="25:17" pos:end="25:46">

                <expr_stmt pos:start="25:17" pos:end="25:46"><expr pos:start="25:17" pos:end="25:45"><name pos:start="25:17" pos:end="25:34"><name pos:start="25:17" pos:end="25:19">env</name><operator pos:start="25:20" pos:end="25:21">-&gt;</operator><name pos:start="25:22" pos:end="25:26">sregs</name><index pos:start="25:27" pos:end="25:34">[<expr pos:start="25:28" pos:end="25:33"><name pos:start="25:28" pos:end="25:33">SR_ESR</name></expr>]</index></name> <operator pos:start="25:36" pos:end="25:37">|=</operator> <literal type="number" pos:start="25:39" pos:end="25:39">1</literal> <operator pos:start="25:41" pos:end="25:42">&lt;&lt;</operator> <literal type="number" pos:start="25:44" pos:end="25:45">11</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:49"><expr pos:start="29:13" pos:end="29:48"><call pos:start="29:13" pos:end="29:48"><name pos:start="29:13" pos:end="29:34">helper_raise_exception</name><argument_list pos:start="29:35" pos:end="29:48">(<argument pos:start="29:36" pos:end="29:47"><expr pos:start="29:36" pos:end="29:47"><name pos:start="29:36" pos:end="29:47">EXCP_HW_EXCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
