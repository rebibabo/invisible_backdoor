<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12870.c" pos:tabs="8"><function pos:start="1:1" pos:end="75:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:21">kvm_set_phys_mem</name><parameter_list pos:start="1:22" pos:end="5:45">(<parameter pos:start="1:23" pos:end="1:51"><decl pos:start="1:23" pos:end="1:51"><type pos:start="1:23" pos:end="1:51"><name pos:start="1:23" pos:end="1:40">target_phys_addr_t</name></type> <name pos:start="1:42" pos:end="1:51">start_addr</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:32">ram_addr_t</name></type> <name pos:start="3:34" pos:end="3:37">size</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:44"><decl pos:start="5:23" pos:end="5:44"><type pos:start="5:23" pos:end="5:44"><name pos:start="5:23" pos:end="5:32">ram_addr_t</name></type> <name pos:start="5:34" pos:end="5:44">phys_offset</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="75:1">{<block_content pos:start="9:5" pos:end="71:53">

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">KVMState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">s</name> <init pos:start="9:17" pos:end="9:27">= <expr pos:start="9:19" pos:end="9:27"><name pos:start="9:19" pos:end="9:27">kvm_state</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:55"><decl pos:start="11:5" pos:end="11:54"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:14">ram_addr_t</name></type> <name pos:start="11:16" pos:end="11:20">flags</name> <init pos:start="11:22" pos:end="11:54">= <expr pos:start="11:24" pos:end="11:54"><name pos:start="11:24" pos:end="11:34">phys_offset</name> <operator pos:start="11:36" pos:end="11:36">&amp;</operator> <operator pos:start="11:38" pos:end="11:38">~</operator><name pos:start="11:39" pos:end="11:54">TARGET_PAGE_MASK</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:17"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">KVMSlot</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:16">mem</name></decl>;</decl_stmt>



    <comment type="block" pos:start="17:5" pos:end="17:46">/* KVM does not support read-only slots */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:31"><expr pos:start="19:5" pos:end="19:30"><name pos:start="19:5" pos:end="19:15">phys_offset</name> <operator pos:start="19:17" pos:end="19:18">&amp;=</operator> <operator pos:start="19:20" pos:end="19:20">~</operator><name pos:start="19:21" pos:end="19:30">IO_MEM_ROM</name></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:41"><expr pos:start="23:5" pos:end="23:40"><name pos:start="23:5" pos:end="23:7">mem</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:40"><name pos:start="23:11" pos:end="23:25">kvm_lookup_slot</name><argument_list pos:start="23:26" pos:end="23:40">(<argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><name pos:start="23:27" pos:end="23:27">s</name></expr></argument>, <argument pos:start="23:30" pos:end="23:39"><expr pos:start="23:30" pos:end="23:39"><name pos:start="23:30" pos:end="23:39">start_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="47:5"><if pos:start="25:5" pos:end="47:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:11">mem</name></expr>)</condition> <block pos:start="25:14" pos:end="47:5">{<block_content pos:start="27:9" pos:end="45:19">

        <if_stmt pos:start="27:9" pos:end="45:19"><if pos:start="27:9" pos:end="41:9">if <condition pos:start="27:12" pos:end="27:39">(<expr pos:start="27:13" pos:end="27:38"><name pos:start="27:13" pos:end="27:17">flags</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <name pos:start="27:22" pos:end="27:38">IO_MEM_UNASSIGNED</name></expr>)</condition> <block pos:start="27:41" pos:end="41:9">{<block_content pos:start="29:13" pos:end="39:61">

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:15">mem</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:28">memory_size</name></name> <operator pos:start="29:30" pos:end="29:30">=</operator> <literal type="number" pos:start="29:32" pos:end="29:32">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:46"><expr pos:start="31:13" pos:end="31:45"><name pos:start="31:13" pos:end="31:32"><name pos:start="31:13" pos:end="31:15">mem</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:32">guest_phys_addr</name></name> <operator pos:start="31:34" pos:end="31:34">=</operator> <name pos:start="31:36" pos:end="31:45">start_addr</name></expr>;</expr_stmt>

            <expr_stmt pos:start="33:13" pos:end="33:36"><expr pos:start="33:13" pos:end="33:35"><name pos:start="33:13" pos:end="33:31"><name pos:start="33:13" pos:end="33:15">mem</name><operator pos:start="33:16" pos:end="33:17">-&gt;</operator><name pos:start="33:18" pos:end="33:31">userspace_addr</name></name> <operator pos:start="33:33" pos:end="33:33">=</operator> <literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">mem</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">flags</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="39:13" pos:end="39:61"><expr pos:start="39:13" pos:end="39:60"><call pos:start="39:13" pos:end="39:60"><name pos:start="39:13" pos:end="39:24">kvm_vm_ioctl</name><argument_list pos:start="39:25" pos:end="39:60">(<argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><name pos:start="39:26" pos:end="39:26">s</name></expr></argument>, <argument pos:start="39:29" pos:end="39:54"><expr pos:start="39:29" pos:end="39:54"><name pos:start="39:29" pos:end="39:54">KVM_SET_USER_MEMORY_REGION</name></expr></argument>, <argument pos:start="39:57" pos:end="39:59"><expr pos:start="39:57" pos:end="39:59"><name pos:start="39:57" pos:end="39:59">mem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="41:11" pos:end="45:19">else if <condition pos:start="41:19" pos:end="43:84">(<expr pos:start="41:20" pos:end="43:83"><name pos:start="41:20" pos:end="41:29">start_addr</name> <operator pos:start="41:31" pos:end="41:32">&gt;=</operator> <name pos:start="41:34" pos:end="41:53"><name pos:start="41:34" pos:end="41:36">mem</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:53">guest_phys_addr</name></name> <operator pos:start="41:55" pos:end="41:56">&amp;&amp;</operator>

                   <operator pos:start="43:20" pos:end="43:20">(</operator><name pos:start="43:21" pos:end="43:30">start_addr</name> <operator pos:start="43:32" pos:end="43:32">+</operator> <name pos:start="43:34" pos:end="43:37">size</name><operator pos:start="43:38" pos:end="43:38">)</operator> <operator pos:start="43:40" pos:end="43:41">&lt;=</operator> <operator pos:start="43:43" pos:end="43:43">(</operator><name pos:start="43:44" pos:end="43:63"><name pos:start="43:44" pos:end="43:46">mem</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:63">guest_phys_addr</name></name> <operator pos:start="43:65" pos:end="43:65">+</operator> <name pos:start="43:67" pos:end="43:82"><name pos:start="43:67" pos:end="43:69">mem</name><operator pos:start="43:70" pos:end="43:71">-&gt;</operator><name pos:start="43:72" pos:end="43:82">memory_size</name></name><operator pos:start="43:83" pos:end="43:83">)</operator></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:19"><block_content pos:start="45:13" pos:end="45:19">

            <return pos:start="45:13" pos:end="45:19">return;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:53">/* KVM does not need to know about this memory */</comment>

    <if_stmt pos:start="53:5" pos:end="55:15"><if pos:start="53:5" pos:end="55:15">if <condition pos:start="53:8" pos:end="53:35">(<expr pos:start="53:9" pos:end="53:34"><name pos:start="53:9" pos:end="53:13">flags</name> <operator pos:start="53:15" pos:end="53:16">&gt;=</operator> <name pos:start="53:18" pos:end="53:34">IO_MEM_UNASSIGNED</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:15"><block_content pos:start="55:9" pos:end="55:15">

        <return pos:start="55:9" pos:end="55:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:28"><expr pos:start="59:5" pos:end="59:27"><name pos:start="59:5" pos:end="59:7">mem</name> <operator pos:start="59:9" pos:end="59:9">=</operator> <call pos:start="59:11" pos:end="59:27"><name pos:start="59:11" pos:end="59:24">kvm_alloc_slot</name><argument_list pos:start="59:25" pos:end="59:27">(<argument pos:start="59:26" pos:end="59:26"><expr pos:start="59:26" pos:end="59:26"><name pos:start="59:26" pos:end="59:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:28"><expr pos:start="61:5" pos:end="61:27"><name pos:start="61:5" pos:end="61:20"><name pos:start="61:5" pos:end="61:7">mem</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:20">memory_size</name></name> <operator pos:start="61:22" pos:end="61:22">=</operator> <name pos:start="61:24" pos:end="61:27">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:38"><expr pos:start="63:5" pos:end="63:37"><name pos:start="63:5" pos:end="63:24"><name pos:start="63:5" pos:end="63:7">mem</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:24">guest_phys_addr</name></name> <operator pos:start="63:26" pos:end="63:26">=</operator> <name pos:start="63:28" pos:end="63:37">start_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:71"><expr pos:start="65:5" pos:end="65:70"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:7">mem</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:23">userspace_addr</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <operator pos:start="65:27" pos:end="65:27">(</operator><name pos:start="65:28" pos:end="65:35">unsigned</name> <name pos:start="65:37" pos:end="65:40">long</name><operator pos:start="65:41" pos:end="65:41">)</operator><operator pos:start="65:42" pos:end="65:42">(</operator><name pos:start="65:43" pos:end="65:55">phys_ram_base</name> <operator pos:start="65:57" pos:end="65:57">+</operator> <name pos:start="65:59" pos:end="65:69">phys_offset</name><operator pos:start="65:70" pos:end="65:70">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:19"><expr pos:start="67:5" pos:end="67:18"><name pos:start="67:5" pos:end="67:14"><name pos:start="67:5" pos:end="67:7">mem</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:14">flags</name></name> <operator pos:start="67:16" pos:end="67:16">=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:53"><expr pos:start="71:5" pos:end="71:52"><call pos:start="71:5" pos:end="71:52"><name pos:start="71:5" pos:end="71:16">kvm_vm_ioctl</name><argument_list pos:start="71:17" pos:end="71:52">(<argument pos:start="71:18" pos:end="71:18"><expr pos:start="71:18" pos:end="71:18"><name pos:start="71:18" pos:end="71:18">s</name></expr></argument>, <argument pos:start="71:21" pos:end="71:46"><expr pos:start="71:21" pos:end="71:46"><name pos:start="71:21" pos:end="71:46">KVM_SET_USER_MEMORY_REGION</name></expr></argument>, <argument pos:start="71:49" pos:end="71:51"><expr pos:start="71:49" pos:end="71:51"><name pos:start="71:49" pos:end="71:51">mem</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:32">/* FIXME deal with errors */</comment>

</block_content>}</block></function>
</unit>
