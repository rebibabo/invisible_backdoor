<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21212.c" pos:tabs="8"><function pos:start="1:1" pos:end="25:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:33">virtio_pci_dc_realize</name><parameter_list pos:start="1:34" pos:end="1:66">(<parameter pos:start="1:35" pos:end="1:51"><decl pos:start="1:35" pos:end="1:51"><type pos:start="1:35" pos:end="1:51"><name pos:start="1:35" pos:end="1:45">DeviceState</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:51">qdev</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:65"><decl pos:start="1:54" pos:end="1:65"><type pos:start="1:54" pos:end="1:65"><name pos:start="1:54" pos:end="1:58">Error</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier><modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="25:1">{<block_content pos:start="5:5" pos:end="23:45">

    <decl_stmt pos:start="5:5" pos:end="5:59"><decl pos:start="5:5" pos:end="5:58"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">VirtioPCIClass</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:29">vpciklass</name> <init pos:start="5:31" pos:end="5:58">= <expr pos:start="5:33" pos:end="5:58"><call pos:start="5:33" pos:end="5:58"><name pos:start="5:33" pos:end="5:52">VIRTIO_PCI_GET_CLASS</name><argument_list pos:start="5:53" pos:end="5:58">(<argument pos:start="5:54" pos:end="5:57"><expr pos:start="5:54" pos:end="5:57"><name pos:start="5:54" pos:end="5:57">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">VirtIOPCIProxy</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">proxy</name> <init pos:start="7:27" pos:end="7:44">= <expr pos:start="7:29" pos:end="7:44"><call pos:start="7:29" pos:end="7:44"><name pos:start="7:29" pos:end="7:38">VIRTIO_PCI</name><argument_list pos:start="7:39" pos:end="7:44">(<argument pos:start="7:40" pos:end="7:43"><expr pos:start="7:40" pos:end="7:43"><name pos:start="7:40" pos:end="7:43">qdev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:40"><type pos:start="9:5" pos:end="9:15"><name pos:start="9:5" pos:end="9:13">PCIDevice</name> <modifier pos:start="9:15" pos:end="9:15">*</modifier></type><name pos:start="9:16" pos:end="9:22">pci_dev</name> <init pos:start="9:24" pos:end="9:40">= <expr pos:start="9:26" pos:end="9:40"><operator pos:start="9:26" pos:end="9:26">&amp;</operator><name pos:start="9:27" pos:end="9:40"><name pos:start="9:27" pos:end="9:31">proxy</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:40">pci_dev</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="19:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="15:57">(<expr pos:start="13:9" pos:end="15:56"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:22"><name pos:start="13:11" pos:end="13:15">proxy</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:22">flags</name></name> <operator pos:start="13:24" pos:end="13:24">&amp;</operator> <name pos:start="13:26" pos:end="13:53">VIRTIO_PCI_FLAG_DISABLE_PCIE</name><operator pos:start="13:54" pos:end="13:54">)</operator> <operator pos:start="13:56" pos:end="13:57">&amp;&amp;</operator>

        <operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:22"><name pos:start="15:11" pos:end="15:15">proxy</name><operator pos:start="15:16" pos:end="15:17">-&gt;</operator><name pos:start="15:18" pos:end="15:22">flags</name></name> <operator pos:start="15:24" pos:end="15:24">&amp;</operator> <name pos:start="15:26" pos:end="15:55">VIRTIO_PCI_FLAG_DISABLE_MODERN</name><operator pos:start="15:56" pos:end="15:56">)</operator></expr>)</condition> <block pos:start="15:59" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:53">

        <expr_stmt pos:start="17:9" pos:end="17:53"><expr pos:start="17:9" pos:end="17:52"><name pos:start="17:9" pos:end="17:28"><name pos:start="17:9" pos:end="17:15">pci_dev</name><operator pos:start="17:16" pos:end="17:17">-&gt;</operator><name pos:start="17:18" pos:end="17:28">cap_present</name></name> <operator pos:start="17:30" pos:end="17:31">|=</operator> <name pos:start="17:33" pos:end="17:52">QEMU_PCI_CAP_EXPRESS</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><call pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:13">vpciklass</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:32">parent_dc_realize</name></name><argument_list pos:start="23:33" pos:end="23:44">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">qdev</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><name pos:start="23:40" pos:end="23:43">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
