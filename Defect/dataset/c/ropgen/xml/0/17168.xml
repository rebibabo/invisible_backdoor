<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17168.c" pos:tabs="8"><function pos:start="1:1" pos:end="537:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">decode_slice_header</name><parameter_list pos:start="1:31" pos:end="1:46">(<parameter pos:start="1:32" pos:end="1:45"><decl pos:start="1:32" pos:end="1:45"><type pos:start="1:32" pos:end="1:44"><name pos:start="1:32" pos:end="1:42">H264Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">h</name></decl></parameter>)</parameter_list><block pos:start="1:47" pos:end="537:1">{<block_content pos:start="3:5" pos:end="535:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:25">first_mb_in_slice</name></decl>, <decl pos:start="5:28" pos:end="5:33"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:28" pos:end="5:33">pps_id</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:40">num_ref_idx_active_override_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:87"><decl pos:start="9:5" pos:end="9:86"><type pos:start="9:5" pos:end="9:24"><specifier pos:start="9:5" pos:end="9:10">static</specifier> <specifier pos:start="9:12" pos:end="9:16">const</specifier> <name pos:start="9:18" pos:end="9:24">uint8_t</name></type> <name pos:start="9:26" pos:end="9:42"><name pos:start="9:26" pos:end="9:39">slice_type_map</name><index pos:start="9:40" pos:end="9:42">[<expr pos:start="9:41" pos:end="9:41"><literal type="number" pos:start="9:41" pos:end="9:41">5</literal></expr>]</index></name><init pos:start="9:43" pos:end="9:86">= <expr pos:start="9:45" pos:end="9:86"><block pos:start="9:45" pos:end="9:86">{<expr pos:start="9:46" pos:end="9:51"><name pos:start="9:46" pos:end="9:51">P_TYPE</name></expr>, <expr pos:start="9:54" pos:end="9:59"><name pos:start="9:54" pos:end="9:59">B_TYPE</name></expr>, <expr pos:start="9:62" pos:end="9:67"><name pos:start="9:62" pos:end="9:67">I_TYPE</name></expr>, <expr pos:start="9:70" pos:end="9:76"><name pos:start="9:70" pos:end="9:76">SP_TYPE</name></expr>, <expr pos:start="9:79" pos:end="9:85"><name pos:start="9:79" pos:end="9:85">SI_TYPE</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:19"><decl pos:start="11:5" pos:end="11:18"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">slice_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:29">default_ref_list_done</name> <init pos:start="13:31" pos:end="13:33">= <expr pos:start="13:33" pos:end="13:33"><literal type="number" pos:start="13:33" pos:end="13:33">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:54"><expr pos:start="17:5" pos:end="17:53"><name pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:22">current_picture</name><operator pos:start="17:23" pos:end="17:23">.</operator><name pos:start="17:24" pos:end="17:32">reference</name></name><operator pos:start="17:33" pos:end="17:33">=</operator> <name pos:start="17:35" pos:end="17:48"><name pos:start="17:35" pos:end="17:35">h</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:48">nal_ref_idc</name></name> <operator pos:start="17:50" pos:end="17:51">!=</operator> <literal type="number" pos:start="17:53" pos:end="17:53">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:37"><expr pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:15"><name pos:start="19:5" pos:end="19:5">s</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:15">dropable</name></name><operator pos:start="19:16" pos:end="19:16">=</operator> <name pos:start="19:18" pos:end="19:31"><name pos:start="19:18" pos:end="19:18">h</name><operator pos:start="19:19" pos:end="19:20">-&gt;</operator><name pos:start="19:21" pos:end="19:31">nal_ref_idc</name></name> <operator pos:start="19:33" pos:end="19:34">==</operator> <literal type="number" pos:start="19:36" pos:end="19:36">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:45"><expr pos:start="23:5" pos:end="23:44"><name pos:start="23:5" pos:end="23:21">first_mb_in_slice</name><operator pos:start="23:22" pos:end="23:22">=</operator> <call pos:start="23:24" pos:end="23:44"><name pos:start="23:24" pos:end="23:36">get_ue_golomb</name><argument_list pos:start="23:37" pos:end="23:44">(<argument pos:start="23:38" pos:end="23:43"><expr pos:start="23:38" pos:end="23:43"><operator pos:start="23:38" pos:end="23:38">&amp;</operator><name pos:start="23:39" pos:end="23:43"><name pos:start="23:39" pos:end="23:39">s</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:43">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:38"><expr pos:start="27:5" pos:end="27:37"><name pos:start="27:5" pos:end="27:14">slice_type</name><operator pos:start="27:15" pos:end="27:15">=</operator> <call pos:start="27:17" pos:end="27:37"><name pos:start="27:17" pos:end="27:29">get_ue_golomb</name><argument_list pos:start="27:30" pos:end="27:37">(<argument pos:start="27:31" pos:end="27:36"><expr pos:start="27:31" pos:end="27:36"><operator pos:start="27:31" pos:end="27:31">&amp;</operator><name pos:start="27:32" pos:end="27:36"><name pos:start="27:32" pos:end="27:32">s</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:36">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if<condition pos:start="29:7" pos:end="29:22">(<expr pos:start="29:8" pos:end="29:21"><name pos:start="29:8" pos:end="29:17">slice_type</name> <operator pos:start="29:19" pos:end="29:19">&gt;</operator> <literal type="number" pos:start="29:21" pos:end="29:21">9</literal></expr>)</condition><block pos:start="29:23" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:114"><expr pos:start="31:9" pos:end="31:113"><call pos:start="31:9" pos:end="31:113"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:113">(<argument pos:start="31:16" pos:end="31:25"><expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:16">h</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:20">.</operator><name pos:start="31:21" pos:end="31:25">avctx</name></name></expr></argument>, <argument pos:start="31:28" pos:end="31:39"><expr pos:start="31:28" pos:end="31:39"><name pos:start="31:28" pos:end="31:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:42" pos:end="31:79"><expr pos:start="31:42" pos:end="31:79"><literal type="string" pos:start="31:42" pos:end="31:79">"slice type too large (%d) at %d %d\n"</literal></expr></argument>, <argument pos:start="31:82" pos:end="31:94"><expr pos:start="31:82" pos:end="31:94"><name pos:start="31:82" pos:end="31:94"><name pos:start="31:82" pos:end="31:82">h</name><operator pos:start="31:83" pos:end="31:84">-&gt;</operator><name pos:start="31:85" pos:end="31:94">slice_type</name></name></expr></argument>, <argument pos:start="31:97" pos:end="31:103"><expr pos:start="31:97" pos:end="31:103"><name pos:start="31:97" pos:end="31:103"><name pos:start="31:97" pos:end="31:97">s</name><operator pos:start="31:98" pos:end="31:99">-&gt;</operator><name pos:start="31:100" pos:end="31:103">mb_x</name></name></expr></argument>, <argument pos:start="31:106" pos:end="31:112"><expr pos:start="31:106" pos:end="31:112"><name pos:start="31:106" pos:end="31:112"><name pos:start="31:106" pos:end="31:106">s</name><operator pos:start="31:107" pos:end="31:108">-&gt;</operator><name pos:start="31:109" pos:end="31:112">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="45:30"><if pos:start="37:5" pos:end="43:5">if<condition pos:start="37:7" pos:end="37:22">(<expr pos:start="37:8" pos:end="37:21"><name pos:start="37:8" pos:end="37:17">slice_type</name> <operator pos:start="37:19" pos:end="37:19">&gt;</operator> <literal type="number" pos:start="37:21" pos:end="37:21">4</literal></expr>)</condition><block pos:start="37:23" pos:end="43:5">{<block_content pos:start="39:9" pos:end="41:30">

        <expr_stmt pos:start="39:9" pos:end="39:24"><expr pos:start="39:9" pos:end="39:23"><name pos:start="39:9" pos:end="39:18">slice_type</name> <operator pos:start="39:20" pos:end="39:21">-=</operator> <literal type="number" pos:start="39:23" pos:end="39:23">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:30"><expr pos:start="41:9" pos:end="41:29"><name pos:start="41:9" pos:end="41:27"><name pos:start="41:9" pos:end="41:9">h</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:27">slice_type_fixed</name></name><operator pos:start="41:28" pos:end="41:28">=</operator><literal type="number" pos:start="41:29" pos:end="41:29">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="43:6" pos:end="45:30">else<block type="pseudo" pos:start="45:9" pos:end="45:30"><block_content pos:start="45:9" pos:end="45:30">

        <expr_stmt pos:start="45:9" pos:end="45:30"><expr pos:start="45:9" pos:end="45:29"><name pos:start="45:9" pos:end="45:27"><name pos:start="45:9" pos:end="45:9">h</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:27">slice_type_fixed</name></name><operator pos:start="45:28" pos:end="45:28">=</operator><literal type="number" pos:start="45:29" pos:end="45:29">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <expr_stmt pos:start="49:5" pos:end="49:45"><expr pos:start="49:5" pos:end="49:44"><name pos:start="49:5" pos:end="49:14">slice_type</name><operator pos:start="49:15" pos:end="49:15">=</operator> <name pos:start="49:17" pos:end="49:44"><name pos:start="49:17" pos:end="49:30">slice_type_map</name><index pos:start="49:31" pos:end="49:44">[ <expr pos:start="49:33" pos:end="49:42"><name pos:start="49:33" pos:end="49:42">slice_type</name></expr> ]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="51:5" pos:end="57:5"><if pos:start="51:5" pos:end="57:5">if <condition pos:start="51:8" pos:end="53:63">(<expr pos:start="51:9" pos:end="53:61"><name pos:start="51:9" pos:end="51:18">slice_type</name> <operator pos:start="51:20" pos:end="51:21">==</operator> <name pos:start="51:23" pos:end="51:28">I_TYPE</name>

        <operator pos:start="53:9" pos:end="53:10">||</operator> <operator pos:start="53:12" pos:end="53:12">(</operator><name pos:start="53:13" pos:end="53:24"><name pos:start="53:13" pos:end="53:13">h</name><operator pos:start="53:14" pos:end="53:15">-&gt;</operator><name pos:start="53:16" pos:end="53:24">slice_num</name></name> <operator pos:start="53:26" pos:end="53:27">!=</operator> <literal type="number" pos:start="53:29" pos:end="53:29">0</literal> <operator pos:start="53:31" pos:end="53:32">&amp;&amp;</operator> <name pos:start="53:34" pos:end="53:43">slice_type</name> <operator pos:start="53:45" pos:end="53:46">==</operator> <name pos:start="53:48" pos:end="53:60"><name pos:start="53:48" pos:end="53:48">h</name><operator pos:start="53:49" pos:end="53:50">-&gt;</operator><name pos:start="53:51" pos:end="53:60">slice_type</name></name><operator pos:start="53:61" pos:end="53:61">)</operator></expr> )</condition> <block pos:start="53:65" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:34">

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:29">default_ref_list_done</name> <operator pos:start="55:31" pos:end="55:31">=</operator> <literal type="number" pos:start="55:33" pos:end="55:33">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:30"><expr pos:start="59:5" pos:end="59:29"><name pos:start="59:5" pos:end="59:17"><name pos:start="59:5" pos:end="59:5">h</name><operator pos:start="59:6" pos:end="59:7">-&gt;</operator><name pos:start="59:8" pos:end="59:17">slice_type</name></name><operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:29">slice_type</name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:5">s</name><operator pos:start="63:6" pos:end="63:7">-&gt;</operator><name pos:start="63:8" pos:end="63:16">pict_type</name></name><operator pos:start="63:17" pos:end="63:17">=</operator> <name pos:start="63:19" pos:end="63:31"><name pos:start="63:19" pos:end="63:19">h</name><operator pos:start="63:20" pos:end="63:21">-&gt;</operator><name pos:start="63:22" pos:end="63:31">slice_type</name></name></expr>;</expr_stmt> <comment type="line" pos:start="63:34" pos:end="63:83">// to make a few old func happy, it's wrong though</comment>

        

    <expr_stmt pos:start="67:5" pos:end="67:34"><expr pos:start="67:5" pos:end="67:33"><name pos:start="67:5" pos:end="67:10">pps_id</name><operator pos:start="67:11" pos:end="67:11">=</operator> <call pos:start="67:13" pos:end="67:33"><name pos:start="67:13" pos:end="67:25">get_ue_golomb</name><argument_list pos:start="67:26" pos:end="67:33">(<argument pos:start="67:27" pos:end="67:32"><expr pos:start="67:27" pos:end="67:32"><operator pos:start="67:27" pos:end="67:27">&amp;</operator><name pos:start="67:28" pos:end="67:32"><name pos:start="67:28" pos:end="67:28">s</name><operator pos:start="67:29" pos:end="67:30">-&gt;</operator><name pos:start="67:31" pos:end="67:32">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if<condition pos:start="69:7" pos:end="69:18">(<expr pos:start="69:8" pos:end="69:17"><name pos:start="69:8" pos:end="69:13">pps_id</name><operator pos:start="69:14" pos:end="69:14">&gt;</operator><literal type="number" pos:start="69:15" pos:end="69:17">255</literal></expr>)</condition><block pos:start="69:19" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <expr_stmt pos:start="71:9" pos:end="71:66"><expr pos:start="71:9" pos:end="71:65"><call pos:start="71:9" pos:end="71:65"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:65">(<argument pos:start="71:16" pos:end="71:25"><expr pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:25"><name pos:start="71:16" pos:end="71:16">h</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:19">s</name><operator pos:start="71:20" pos:end="71:20">.</operator><name pos:start="71:21" pos:end="71:25">avctx</name></name></expr></argument>, <argument pos:start="71:28" pos:end="71:39"><expr pos:start="71:28" pos:end="71:39"><name pos:start="71:28" pos:end="71:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:42" pos:end="71:64"><expr pos:start="71:42" pos:end="71:64"><literal type="string" pos:start="71:42" pos:end="71:64">"pps_id out of range\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:34"><expr pos:start="77:5" pos:end="77:33"><name pos:start="77:5" pos:end="77:10"><name pos:start="77:5" pos:end="77:5">h</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:10">pps</name></name><operator pos:start="77:11" pos:end="77:11">=</operator> <name pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:13">h</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:25">pps_buffer</name><index pos:start="77:26" pos:end="77:33">[<expr pos:start="77:27" pos:end="77:32"><name pos:start="77:27" pos:end="77:32">pps_id</name></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="79:5" pos:end="85:5"><if pos:start="79:5" pos:end="85:5">if<condition pos:start="79:7" pos:end="79:37">(<expr pos:start="79:8" pos:end="79:36"><name pos:start="79:8" pos:end="79:31"><name pos:start="79:8" pos:end="79:8">h</name><operator pos:start="79:9" pos:end="79:10">-&gt;</operator><name pos:start="79:11" pos:end="79:13">pps</name><operator pos:start="79:14" pos:end="79:14">.</operator><name pos:start="79:15" pos:end="79:31">slice_group_count</name></name> <operator pos:start="79:33" pos:end="79:34">==</operator> <literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr>)</condition><block pos:start="79:38" pos:end="85:5">{<block_content pos:start="81:9" pos:end="83:18">

        <expr_stmt pos:start="81:9" pos:end="81:74"><expr pos:start="81:9" pos:end="81:73"><call pos:start="81:9" pos:end="81:73"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:73">(<argument pos:start="81:16" pos:end="81:25"><expr pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:25"><name pos:start="81:16" pos:end="81:16">h</name><operator pos:start="81:17" pos:end="81:18">-&gt;</operator><name pos:start="81:19" pos:end="81:19">s</name><operator pos:start="81:20" pos:end="81:20">.</operator><name pos:start="81:21" pos:end="81:25">avctx</name></name></expr></argument>, <argument pos:start="81:28" pos:end="81:39"><expr pos:start="81:28" pos:end="81:39"><name pos:start="81:28" pos:end="81:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:42" pos:end="81:72"><expr pos:start="81:42" pos:end="81:72"><literal type="string" pos:start="81:42" pos:end="81:72">"non existing PPS referenced\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="83:9" pos:end="83:18">return <expr pos:start="83:16" pos:end="83:17"><operator pos:start="83:16" pos:end="83:16">-</operator><literal type="number" pos:start="83:17" pos:end="83:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="89:5" pos:end="89:43"><expr pos:start="89:5" pos:end="89:42"><name pos:start="89:5" pos:end="89:10"><name pos:start="89:5" pos:end="89:5">h</name><operator pos:start="89:6" pos:end="89:7">-&gt;</operator><name pos:start="89:8" pos:end="89:10">sps</name></name><operator pos:start="89:11" pos:end="89:11">=</operator> <name pos:start="89:13" pos:end="89:42"><name pos:start="89:13" pos:end="89:13">h</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:25">sps_buffer</name><index pos:start="89:26" pos:end="89:42">[ <expr pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:40"><name pos:start="89:28" pos:end="89:28">h</name><operator pos:start="89:29" pos:end="89:30">-&gt;</operator><name pos:start="89:31" pos:end="89:33">pps</name><operator pos:start="89:34" pos:end="89:34">.</operator><name pos:start="89:35" pos:end="89:40">sps_id</name></name></expr> ]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="91:5" pos:end="97:5"><if pos:start="91:5" pos:end="97:5">if<condition pos:start="91:7" pos:end="91:38">(<expr pos:start="91:8" pos:end="91:37"><name pos:start="91:8" pos:end="91:32"><name pos:start="91:8" pos:end="91:8">h</name><operator pos:start="91:9" pos:end="91:10">-&gt;</operator><name pos:start="91:11" pos:end="91:13">sps</name><operator pos:start="91:14" pos:end="91:14">.</operator><name pos:start="91:15" pos:end="91:32">log2_max_frame_num</name></name> <operator pos:start="91:34" pos:end="91:35">==</operator> <literal type="number" pos:start="91:37" pos:end="91:37">0</literal></expr>)</condition><block pos:start="91:39" pos:end="97:5">{<block_content pos:start="93:9" pos:end="95:18">

        <expr_stmt pos:start="93:9" pos:end="93:74"><expr pos:start="93:9" pos:end="93:73"><call pos:start="93:9" pos:end="93:73"><name pos:start="93:9" pos:end="93:14">av_log</name><argument_list pos:start="93:15" pos:end="93:73">(<argument pos:start="93:16" pos:end="93:25"><expr pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:25"><name pos:start="93:16" pos:end="93:16">h</name><operator pos:start="93:17" pos:end="93:18">-&gt;</operator><name pos:start="93:19" pos:end="93:19">s</name><operator pos:start="93:20" pos:end="93:20">.</operator><name pos:start="93:21" pos:end="93:25">avctx</name></name></expr></argument>, <argument pos:start="93:28" pos:end="93:39"><expr pos:start="93:28" pos:end="93:39"><name pos:start="93:28" pos:end="93:39">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="93:42" pos:end="93:72"><expr pos:start="93:42" pos:end="93:72"><literal type="string" pos:start="93:42" pos:end="93:72">"non existing SPS referenced\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="95:9" pos:end="95:18">return <expr pos:start="95:16" pos:end="95:17"><operator pos:start="95:16" pos:end="95:16">-</operator><literal type="number" pos:start="95:17" pos:end="95:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if<condition pos:start="101:7" pos:end="101:38">(<expr pos:start="101:8" pos:end="101:37"><name pos:start="101:8" pos:end="101:27"><name pos:start="101:8" pos:end="101:8">h</name><operator pos:start="101:9" pos:end="101:10">-&gt;</operator><name pos:start="101:11" pos:end="101:27">dequant_coeff_pps</name></name> <operator pos:start="101:29" pos:end="101:30">!=</operator> <name pos:start="101:32" pos:end="101:37">pps_id</name></expr>)</condition><block pos:start="101:39" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:31">

        <expr_stmt pos:start="103:9" pos:end="103:38"><expr pos:start="103:9" pos:end="103:37"><name pos:start="103:9" pos:end="103:28"><name pos:start="103:9" pos:end="103:9">h</name><operator pos:start="103:10" pos:end="103:11">-&gt;</operator><name pos:start="103:12" pos:end="103:28">dequant_coeff_pps</name></name> <operator pos:start="103:30" pos:end="103:30">=</operator> <name pos:start="103:32" pos:end="103:37">pps_id</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:31"><expr pos:start="105:9" pos:end="105:30"><call pos:start="105:9" pos:end="105:30"><name pos:start="105:9" pos:end="105:27">init_dequant_tables</name><argument_list pos:start="105:28" pos:end="105:30">(<argument pos:start="105:29" pos:end="105:29"><expr pos:start="105:29" pos:end="105:29"><name pos:start="105:29" pos:end="105:29">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="111:5" pos:end="111:33"><expr pos:start="111:5" pos:end="111:32"><name pos:start="111:5" pos:end="111:15"><name pos:start="111:5" pos:end="111:5">s</name><operator pos:start="111:6" pos:end="111:7">-&gt;</operator><name pos:start="111:8" pos:end="111:15">mb_width</name></name><operator pos:start="111:16" pos:end="111:16">=</operator> <name pos:start="111:18" pos:end="111:32"><name pos:start="111:18" pos:end="111:18">h</name><operator pos:start="111:19" pos:end="111:20">-&gt;</operator><name pos:start="111:21" pos:end="111:23">sps</name><operator pos:start="111:24" pos:end="111:24">.</operator><name pos:start="111:25" pos:end="111:32">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:70"><expr pos:start="113:5" pos:end="113:69"><name pos:start="113:5" pos:end="113:16"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:16">mb_height</name></name><operator pos:start="113:17" pos:end="113:17">=</operator> <name pos:start="113:19" pos:end="113:34"><name pos:start="113:19" pos:end="113:19">h</name><operator pos:start="113:20" pos:end="113:21">-&gt;</operator><name pos:start="113:22" pos:end="113:24">sps</name><operator pos:start="113:25" pos:end="113:25">.</operator><name pos:start="113:26" pos:end="113:34">mb_height</name></name> <operator pos:start="113:36" pos:end="113:36">*</operator> <operator pos:start="113:38" pos:end="113:38">(</operator><literal type="number" pos:start="113:39" pos:end="113:41">2</literal> <operator pos:start="113:41" pos:end="113:41">-</operator> <name pos:start="113:43" pos:end="113:68"><name pos:start="113:43" pos:end="113:43">h</name><operator pos:start="113:44" pos:end="113:45">-&gt;</operator><name pos:start="113:46" pos:end="113:48">sps</name><operator pos:start="113:49" pos:end="113:49">.</operator><name pos:start="113:50" pos:end="113:68">frame_mbs_only_flag</name></name><operator pos:start="113:69" pos:end="113:69">)</operator></expr>;</expr_stmt>

    

    <expr_stmt pos:start="117:5" pos:end="117:36"><expr pos:start="117:5" pos:end="117:35"><name pos:start="117:5" pos:end="117:15"><name pos:start="117:5" pos:end="117:5">h</name><operator pos:start="117:6" pos:end="117:7">-&gt;</operator><name pos:start="117:8" pos:end="117:15">b_stride</name></name><operator pos:start="117:16" pos:end="117:16">=</operator>  <name pos:start="117:19" pos:end="117:29"><name pos:start="117:19" pos:end="117:19">s</name><operator pos:start="117:20" pos:end="117:21">-&gt;</operator><name pos:start="117:22" pos:end="117:29">mb_width</name></name><operator pos:start="117:30" pos:end="117:30">*</operator><literal type="number" pos:start="117:31" pos:end="117:33">4</literal> <operator pos:start="117:33" pos:end="117:33">+</operator> <literal type="number" pos:start="117:35" pos:end="117:35">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:36"><expr pos:start="119:5" pos:end="119:35"><name pos:start="119:5" pos:end="119:16"><name pos:start="119:5" pos:end="119:5">h</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:16">b8_stride</name></name><operator pos:start="119:17" pos:end="119:17">=</operator> <name pos:start="119:19" pos:end="119:29"><name pos:start="119:19" pos:end="119:19">s</name><operator pos:start="119:20" pos:end="119:21">-&gt;</operator><name pos:start="119:22" pos:end="119:29">mb_width</name></name><operator pos:start="119:30" pos:end="119:30">*</operator><literal type="number" pos:start="119:31" pos:end="119:33">2</literal> <operator pos:start="119:33" pos:end="119:33">+</operator> <literal type="number" pos:start="119:35" pos:end="119:35">1</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:74"><expr pos:start="123:5" pos:end="123:73"><name pos:start="123:5" pos:end="123:12"><name pos:start="123:5" pos:end="123:5">s</name><operator pos:start="123:6" pos:end="123:7">-&gt;</operator><name pos:start="123:8" pos:end="123:12">width</name></name> <operator pos:start="123:14" pos:end="123:14">=</operator> <literal type="number" pos:start="123:16" pos:end="123:17">16</literal><operator pos:start="123:18" pos:end="123:18">*</operator><name pos:start="123:19" pos:end="123:29"><name pos:start="123:19" pos:end="123:19">s</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:29">mb_width</name></name> <operator pos:start="123:31" pos:end="123:31">-</operator> <literal type="number" pos:start="123:33" pos:end="123:33">2</literal><operator pos:start="123:34" pos:end="123:34">*</operator><operator pos:start="123:35" pos:end="123:35">(</operator><name pos:start="123:36" pos:end="123:51"><name pos:start="123:36" pos:end="123:36">h</name><operator pos:start="123:37" pos:end="123:38">-&gt;</operator><name pos:start="123:39" pos:end="123:41">sps</name><operator pos:start="123:42" pos:end="123:42">.</operator><name pos:start="123:43" pos:end="123:51">crop_left</name></name> <operator pos:start="123:53" pos:end="123:53">+</operator> <name pos:start="123:55" pos:end="123:71"><name pos:start="123:55" pos:end="123:55">h</name><operator pos:start="123:56" pos:end="123:57">-&gt;</operator><name pos:start="123:58" pos:end="123:60">sps</name><operator pos:start="123:61" pos:end="123:61">.</operator><name pos:start="123:62" pos:end="123:71">crop_right</name></name> <operator pos:start="123:73" pos:end="123:73">)</operator></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="131:79"><if pos:start="125:5" pos:end="127:79">if<condition pos:start="125:7" pos:end="125:34">(<expr pos:start="125:8" pos:end="125:33"><name pos:start="125:8" pos:end="125:33"><name pos:start="125:8" pos:end="125:8">h</name><operator pos:start="125:9" pos:end="125:10">-&gt;</operator><name pos:start="125:11" pos:end="125:13">sps</name><operator pos:start="125:14" pos:end="125:14">.</operator><name pos:start="125:15" pos:end="125:33">frame_mbs_only_flag</name></name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:79"><block_content pos:start="127:9" pos:end="127:79">

        <expr_stmt pos:start="127:9" pos:end="127:79"><expr pos:start="127:9" pos:end="127:78"><name pos:start="127:9" pos:end="127:17"><name pos:start="127:9" pos:end="127:9">s</name><operator pos:start="127:10" pos:end="127:11">-&gt;</operator><name pos:start="127:12" pos:end="127:17">height</name></name><operator pos:start="127:18" pos:end="127:18">=</operator> <literal type="number" pos:start="127:20" pos:end="127:21">16</literal><operator pos:start="127:22" pos:end="127:22">*</operator><name pos:start="127:23" pos:end="127:34"><name pos:start="127:23" pos:end="127:23">s</name><operator pos:start="127:24" pos:end="127:25">-&gt;</operator><name pos:start="127:26" pos:end="127:34">mb_height</name></name> <operator pos:start="127:36" pos:end="127:36">-</operator> <literal type="number" pos:start="127:38" pos:end="127:38">2</literal><operator pos:start="127:39" pos:end="127:39">*</operator><operator pos:start="127:40" pos:end="127:40">(</operator><name pos:start="127:41" pos:end="127:55"><name pos:start="127:41" pos:end="127:41">h</name><operator pos:start="127:42" pos:end="127:43">-&gt;</operator><name pos:start="127:44" pos:end="127:46">sps</name><operator pos:start="127:47" pos:end="127:47">.</operator><name pos:start="127:48" pos:end="127:55">crop_top</name></name>  <operator pos:start="127:58" pos:end="127:58">+</operator> <name pos:start="127:60" pos:end="127:77"><name pos:start="127:60" pos:end="127:60">h</name><operator pos:start="127:61" pos:end="127:62">-&gt;</operator><name pos:start="127:63" pos:end="127:65">sps</name><operator pos:start="127:66" pos:end="127:66">.</operator><name pos:start="127:67" pos:end="127:77">crop_bottom</name></name><operator pos:start="127:78" pos:end="127:78">)</operator></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="129:5" pos:end="131:79">else<block type="pseudo" pos:start="131:9" pos:end="131:79"><block_content pos:start="131:9" pos:end="131:79">

        <expr_stmt pos:start="131:9" pos:end="131:79"><expr pos:start="131:9" pos:end="131:78"><name pos:start="131:9" pos:end="131:17"><name pos:start="131:9" pos:end="131:9">s</name><operator pos:start="131:10" pos:end="131:11">-&gt;</operator><name pos:start="131:12" pos:end="131:17">height</name></name><operator pos:start="131:18" pos:end="131:18">=</operator> <literal type="number" pos:start="131:20" pos:end="131:21">16</literal><operator pos:start="131:22" pos:end="131:22">*</operator><name pos:start="131:23" pos:end="131:34"><name pos:start="131:23" pos:end="131:23">s</name><operator pos:start="131:24" pos:end="131:25">-&gt;</operator><name pos:start="131:26" pos:end="131:34">mb_height</name></name> <operator pos:start="131:36" pos:end="131:36">-</operator> <literal type="number" pos:start="131:38" pos:end="131:38">4</literal><operator pos:start="131:39" pos:end="131:39">*</operator><operator pos:start="131:40" pos:end="131:40">(</operator><name pos:start="131:41" pos:end="131:55"><name pos:start="131:41" pos:end="131:41">h</name><operator pos:start="131:42" pos:end="131:43">-&gt;</operator><name pos:start="131:44" pos:end="131:46">sps</name><operator pos:start="131:47" pos:end="131:47">.</operator><name pos:start="131:48" pos:end="131:55">crop_top</name></name>  <operator pos:start="131:58" pos:end="131:58">+</operator> <name pos:start="131:60" pos:end="131:77"><name pos:start="131:60" pos:end="131:60">h</name><operator pos:start="131:61" pos:end="131:62">-&gt;</operator><name pos:start="131:63" pos:end="131:65">sps</name><operator pos:start="131:66" pos:end="131:66">.</operator><name pos:start="131:67" pos:end="131:77">crop_bottom</name></name><operator pos:start="131:78" pos:end="131:78">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt> <comment type="line" pos:start="131:81" pos:end="131:95">//FIXME recheck</comment>

    

    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="137:77">(<expr pos:start="135:9" pos:end="137:76"><name pos:start="135:9" pos:end="135:30"><name pos:start="135:9" pos:end="135:9">s</name><operator pos:start="135:10" pos:end="135:11">-&gt;</operator><name pos:start="135:12" pos:end="135:30">context_initialized</name></name> 

        <operator pos:start="137:9" pos:end="137:10">&amp;&amp;</operator> <operator pos:start="137:12" pos:end="137:12">(</operator>   <name pos:start="137:16" pos:end="137:23"><name pos:start="137:16" pos:end="137:16">s</name><operator pos:start="137:17" pos:end="137:18">-&gt;</operator><name pos:start="137:19" pos:end="137:23">width</name></name> <operator pos:start="137:25" pos:end="137:26">!=</operator> <name pos:start="137:28" pos:end="137:42"><name pos:start="137:28" pos:end="137:28">s</name><operator pos:start="137:29" pos:end="137:30">-&gt;</operator><name pos:start="137:31" pos:end="137:35">avctx</name><operator pos:start="137:36" pos:end="137:37">-&gt;</operator><name pos:start="137:38" pos:end="137:42">width</name></name> <operator pos:start="137:44" pos:end="137:45">||</operator> <name pos:start="137:47" pos:end="137:55"><name pos:start="137:47" pos:end="137:47">s</name><operator pos:start="137:48" pos:end="137:49">-&gt;</operator><name pos:start="137:50" pos:end="137:55">height</name></name> <operator pos:start="137:57" pos:end="137:58">!=</operator> <name pos:start="137:60" pos:end="137:75"><name pos:start="137:60" pos:end="137:60">s</name><operator pos:start="137:61" pos:end="137:62">-&gt;</operator><name pos:start="137:63" pos:end="137:67">avctx</name><operator pos:start="137:68" pos:end="137:69">-&gt;</operator><name pos:start="137:70" pos:end="137:75">height</name></name><operator pos:start="137:76" pos:end="137:76">)</operator></expr>)</condition> <block pos:start="137:79" pos:end="143:5">{<block_content pos:start="139:9" pos:end="141:26">

        <expr_stmt pos:start="139:9" pos:end="139:23"><expr pos:start="139:9" pos:end="139:22"><call pos:start="139:9" pos:end="139:22"><name pos:start="139:9" pos:end="139:19">free_tables</name><argument_list pos:start="139:20" pos:end="139:22">(<argument pos:start="139:21" pos:end="139:21"><expr pos:start="139:21" pos:end="139:21"><name pos:start="139:21" pos:end="139:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="141:9" pos:end="141:26"><expr pos:start="141:9" pos:end="141:25"><call pos:start="141:9" pos:end="141:25"><name pos:start="141:9" pos:end="141:22">MPV_common_end</name><argument_list pos:start="141:23" pos:end="141:25">(<argument pos:start="141:24" pos:end="141:24"><expr pos:start="141:24" pos:end="141:24"><name pos:start="141:24" pos:end="141:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="145:5" pos:end="213:5"><if pos:start="145:5" pos:end="213:5">if <condition pos:start="145:8" pos:end="145:32">(<expr pos:start="145:9" pos:end="145:31"><operator pos:start="145:9" pos:end="145:9">!</operator><name pos:start="145:10" pos:end="145:31"><name pos:start="145:10" pos:end="145:10">s</name><operator pos:start="145:11" pos:end="145:12">-&gt;</operator><name pos:start="145:13" pos:end="145:31">context_initialized</name></name></expr>)</condition> <block pos:start="145:34" pos:end="213:5">{<block_content pos:start="147:9" pos:end="211:9">

        <if_stmt pos:start="147:9" pos:end="149:22"><if pos:start="147:9" pos:end="149:22">if <condition pos:start="147:12" pos:end="147:35">(<expr pos:start="147:13" pos:end="147:34"><call pos:start="147:13" pos:end="147:30"><name pos:start="147:13" pos:end="147:27">MPV_common_init</name><argument_list pos:start="147:28" pos:end="147:30">(<argument pos:start="147:29" pos:end="147:29"><expr pos:start="147:29" pos:end="147:29"><name pos:start="147:29" pos:end="147:29">s</name></expr></argument>)</argument_list></call> <operator pos:start="147:32" pos:end="147:32">&lt;</operator> <literal type="number" pos:start="147:34" pos:end="147:34">0</literal></expr>)</condition><block type="pseudo" pos:start="149:13" pos:end="149:22"><block_content pos:start="149:13" pos:end="149:22">

            <return pos:start="149:13" pos:end="149:22">return <expr pos:start="149:20" pos:end="149:21"><operator pos:start="149:20" pos:end="149:20">-</operator><literal type="number" pos:start="149:21" pos:end="149:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

            

        <if_stmt pos:start="153:9" pos:end="173:9"><if pos:start="153:9" pos:end="159:9">if<condition pos:start="153:11" pos:end="153:54">(<expr pos:start="153:12" pos:end="153:53"><name pos:start="153:12" pos:end="153:31"><name pos:start="153:12" pos:end="153:12">s</name><operator pos:start="153:13" pos:end="153:14">-&gt;</operator><name pos:start="153:15" pos:end="153:17">dsp</name><operator pos:start="153:18" pos:end="153:18">.</operator><name pos:start="153:19" pos:end="153:31">h264_idct_add</name></name> <operator pos:start="153:33" pos:end="153:34">==</operator> <name pos:start="153:36" pos:end="153:53">ff_h264_idct_add_c</name></expr>)</condition><block pos:start="153:55" pos:end="159:9">{<block_content pos:start="155:13" pos:end="157:68"> <comment type="line" pos:start="153:57" pos:end="153:75">//FIXME little ugly</comment>

            <expr_stmt pos:start="155:13" pos:end="155:68"><expr pos:start="155:13" pos:end="155:67"><call pos:start="155:13" pos:end="155:67"><name pos:start="155:13" pos:end="155:18">memcpy</name><argument_list pos:start="155:19" pos:end="155:67">(<argument pos:start="155:20" pos:end="155:33"><expr pos:start="155:20" pos:end="155:33"><name pos:start="155:20" pos:end="155:33"><name pos:start="155:20" pos:end="155:20">h</name><operator pos:start="155:21" pos:end="155:22">-&gt;</operator><name pos:start="155:23" pos:end="155:33">zigzag_scan</name></name></expr></argument>, <argument pos:start="155:36" pos:end="155:46"><expr pos:start="155:36" pos:end="155:46"><name pos:start="155:36" pos:end="155:46">zigzag_scan</name></expr></argument>, <argument pos:start="155:49" pos:end="155:66"><expr pos:start="155:49" pos:end="155:66"><literal type="number" pos:start="155:49" pos:end="155:50">16</literal><operator pos:start="155:51" pos:end="155:51">*</operator><sizeof pos:start="155:52" pos:end="155:66">sizeof<argument_list pos:start="155:58" pos:end="155:66">(<argument pos:start="155:59" pos:end="155:65"><expr pos:start="155:59" pos:end="155:65"><name pos:start="155:59" pos:end="155:65">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:68"><expr pos:start="157:13" pos:end="157:67"><call pos:start="157:13" pos:end="157:67"><name pos:start="157:13" pos:end="157:18">memcpy</name><argument_list pos:start="157:19" pos:end="157:67">(<argument pos:start="157:20" pos:end="157:33"><expr pos:start="157:20" pos:end="157:33"><name pos:start="157:20" pos:end="157:33"><name pos:start="157:20" pos:end="157:20">h</name><operator pos:start="157:21" pos:end="157:22">-&gt;</operator> <name pos:start="157:24" pos:end="157:33">field_scan</name></name></expr></argument>,  <argument pos:start="157:37" pos:end="157:46"><expr pos:start="157:37" pos:end="157:46"><name pos:start="157:37" pos:end="157:46">field_scan</name></expr></argument>, <argument pos:start="157:49" pos:end="157:66"><expr pos:start="157:49" pos:end="157:66"><literal type="number" pos:start="157:49" pos:end="157:50">16</literal><operator pos:start="157:51" pos:end="157:51">*</operator><sizeof pos:start="157:52" pos:end="157:66">sizeof<argument_list pos:start="157:58" pos:end="157:66">(<argument pos:start="157:59" pos:end="157:65"><expr pos:start="157:59" pos:end="157:65"><name pos:start="157:59" pos:end="157:65">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="159:10" pos:end="173:9">else<block pos:start="159:14" pos:end="173:9">{<block_content pos:start="161:13" pos:end="171:13">

            <decl_stmt pos:start="161:13" pos:end="161:18"><decl pos:start="161:13" pos:end="161:17"><type pos:start="161:13" pos:end="161:15"><name pos:start="161:13" pos:end="161:15">int</name></type> <name pos:start="161:17" pos:end="161:17">i</name></decl>;</decl_stmt>

            <for pos:start="163:13" pos:end="171:13">for<control pos:start="163:16" pos:end="163:31">(<init pos:start="163:17" pos:end="163:20"><expr pos:start="163:17" pos:end="163:19"><name pos:start="163:17" pos:end="163:17">i</name><operator pos:start="163:18" pos:end="163:18">=</operator><literal type="number" pos:start="163:19" pos:end="163:19">0</literal></expr>;</init> <condition pos:start="163:22" pos:end="163:26"><expr pos:start="163:22" pos:end="163:25"><name pos:start="163:22" pos:end="163:22">i</name><operator pos:start="163:23" pos:end="163:23">&lt;</operator><literal type="number" pos:start="163:24" pos:end="163:25">16</literal></expr>;</condition> <incr pos:start="163:28" pos:end="163:30"><expr pos:start="163:28" pos:end="163:30"><name pos:start="163:28" pos:end="163:28">i</name><operator pos:start="163:29" pos:end="163:30">++</operator></expr></incr>)</control><block pos:start="163:32" pos:end="171:13">{<block_content pos:start="167:17" pos:end="169:54">

<cpp:define pos:start="165:1" pos:end="165:36">#<cpp:directive pos:start="165:2" pos:end="165:7">define</cpp:directive> <cpp:macro pos:start="165:9" pos:end="165:12"><name pos:start="165:9" pos:end="165:9">T</name><parameter_list pos:start="165:10" pos:end="165:12">(<parameter pos:start="165:11" pos:end="165:11"><type pos:start="165:11" pos:end="165:11"><name pos:start="165:11" pos:end="165:11">x</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="165:14" pos:end="165:36">(x&gt;&gt;2) | ((x&lt;&lt;2) &amp; 0xF)</cpp:value></cpp:define>

                <expr_stmt pos:start="167:17" pos:end="167:54"><expr pos:start="167:17" pos:end="167:53"><name pos:start="167:17" pos:end="167:33"><name pos:start="167:17" pos:end="167:17">h</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:30">zigzag_scan</name><index pos:start="167:31" pos:end="167:33">[<expr pos:start="167:32" pos:end="167:32"><name pos:start="167:32" pos:end="167:32">i</name></expr>]</index></name> <operator pos:start="167:35" pos:end="167:35">=</operator> <call pos:start="167:37" pos:end="167:53"><name pos:start="167:37" pos:end="167:37">T</name><argument_list pos:start="167:38" pos:end="167:53">(<argument pos:start="167:39" pos:end="167:52"><expr pos:start="167:39" pos:end="167:52"><name pos:start="167:39" pos:end="167:52"><name pos:start="167:39" pos:end="167:49">zigzag_scan</name><index pos:start="167:50" pos:end="167:52">[<expr pos:start="167:51" pos:end="167:51"><name pos:start="167:51" pos:end="167:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="169:17" pos:end="169:54"><expr pos:start="169:17" pos:end="169:53"><name pos:start="169:17" pos:end="169:33"><name pos:start="169:17" pos:end="169:17">h</name><operator pos:start="169:18" pos:end="169:19">-&gt;</operator> <name pos:start="169:21" pos:end="169:30">field_scan</name><index pos:start="169:31" pos:end="169:33">[<expr pos:start="169:32" pos:end="169:32"><name pos:start="169:32" pos:end="169:32">i</name></expr>]</index></name> <operator pos:start="169:35" pos:end="169:35">=</operator> <call pos:start="169:37" pos:end="169:53"><name pos:start="169:37" pos:end="169:37">T</name><argument_list pos:start="169:38" pos:end="169:53">( <argument pos:start="169:40" pos:end="169:52"><expr pos:start="169:40" pos:end="169:52"><name pos:start="169:40" pos:end="169:52"><name pos:start="169:40" pos:end="169:49">field_scan</name><index pos:start="169:50" pos:end="169:52">[<expr pos:start="169:51" pos:end="169:51"><name pos:start="169:51" pos:end="169:51">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="175:9" pos:end="187:9"><if pos:start="175:9" pos:end="181:9">if<condition pos:start="175:11" pos:end="175:35">(<expr pos:start="175:12" pos:end="175:34"><name pos:start="175:12" pos:end="175:34"><name pos:start="175:12" pos:end="175:12">h</name><operator pos:start="175:13" pos:end="175:14">-&gt;</operator><name pos:start="175:15" pos:end="175:17">sps</name><operator pos:start="175:18" pos:end="175:18">.</operator><name pos:start="175:19" pos:end="175:34">transform_bypass</name></name></expr>)</condition><block pos:start="175:36" pos:end="181:9">{<block_content pos:start="177:13" pos:end="179:42"> <comment type="line" pos:start="175:38" pos:end="175:54">//FIXME same ugly</comment>

            <expr_stmt pos:start="177:13" pos:end="177:44"><expr pos:start="177:13" pos:end="177:43"><name pos:start="177:13" pos:end="177:29"><name pos:start="177:13" pos:end="177:13">h</name><operator pos:start="177:14" pos:end="177:15">-&gt;</operator><name pos:start="177:16" pos:end="177:29">zigzag_scan_q0</name></name> <operator pos:start="177:31" pos:end="177:31">=</operator> <name pos:start="177:33" pos:end="177:43">zigzag_scan</name></expr>;</expr_stmt>

            <expr_stmt pos:start="179:13" pos:end="179:42"><expr pos:start="179:13" pos:end="179:41"><name pos:start="179:13" pos:end="179:28"><name pos:start="179:13" pos:end="179:13">h</name><operator pos:start="179:14" pos:end="179:15">-&gt;</operator><name pos:start="179:16" pos:end="179:28">field_scan_q0</name></name> <operator pos:start="179:30" pos:end="179:30">=</operator> <name pos:start="179:32" pos:end="179:41">field_scan</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="181:10" pos:end="187:9">else<block pos:start="181:14" pos:end="187:9">{<block_content pos:start="183:13" pos:end="185:45">

            <expr_stmt pos:start="183:13" pos:end="183:47"><expr pos:start="183:13" pos:end="183:46"><name pos:start="183:13" pos:end="183:29"><name pos:start="183:13" pos:end="183:13">h</name><operator pos:start="183:14" pos:end="183:15">-&gt;</operator><name pos:start="183:16" pos:end="183:29">zigzag_scan_q0</name></name> <operator pos:start="183:31" pos:end="183:31">=</operator> <name pos:start="183:33" pos:end="183:46"><name pos:start="183:33" pos:end="183:33">h</name><operator pos:start="183:34" pos:end="183:35">-&gt;</operator><name pos:start="183:36" pos:end="183:46">zigzag_scan</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="185:13" pos:end="185:45"><expr pos:start="185:13" pos:end="185:44"><name pos:start="185:13" pos:end="185:28"><name pos:start="185:13" pos:end="185:13">h</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:28">field_scan_q0</name></name> <operator pos:start="185:30" pos:end="185:30">=</operator> <name pos:start="185:32" pos:end="185:44"><name pos:start="185:32" pos:end="185:32">h</name><operator pos:start="185:33" pos:end="185:34">-&gt;</operator><name pos:start="185:35" pos:end="185:44">field_scan</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="191:9" pos:end="191:24"><expr pos:start="191:9" pos:end="191:23"><call pos:start="191:9" pos:end="191:23"><name pos:start="191:9" pos:end="191:20">alloc_tables</name><argument_list pos:start="191:21" pos:end="191:23">(<argument pos:start="191:22" pos:end="191:22"><expr pos:start="191:22" pos:end="191:22"><name pos:start="191:22" pos:end="191:22">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:35"><expr pos:start="195:9" pos:end="195:34"><name pos:start="195:9" pos:end="195:23"><name pos:start="195:9" pos:end="195:9">s</name><operator pos:start="195:10" pos:end="195:11">-&gt;</operator><name pos:start="195:12" pos:end="195:16">avctx</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:23">width</name></name> <operator pos:start="195:25" pos:end="195:25">=</operator> <name pos:start="195:27" pos:end="195:34"><name pos:start="195:27" pos:end="195:27">s</name><operator pos:start="195:28" pos:end="195:29">-&gt;</operator><name pos:start="195:30" pos:end="195:34">width</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:37"><expr pos:start="197:9" pos:end="197:36"><name pos:start="197:9" pos:end="197:24"><name pos:start="197:9" pos:end="197:9">s</name><operator pos:start="197:10" pos:end="197:11">-&gt;</operator><name pos:start="197:12" pos:end="197:16">avctx</name><operator pos:start="197:17" pos:end="197:18">-&gt;</operator><name pos:start="197:19" pos:end="197:24">height</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:36"><name pos:start="197:28" pos:end="197:28">s</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:36">height</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:50"><expr pos:start="199:9" pos:end="199:49"><name pos:start="199:9" pos:end="199:37"><name pos:start="199:9" pos:end="199:9">s</name><operator pos:start="199:10" pos:end="199:11">-&gt;</operator><name pos:start="199:12" pos:end="199:16">avctx</name><operator pos:start="199:17" pos:end="199:18">-&gt;</operator><name pos:start="199:19" pos:end="199:37">sample_aspect_ratio</name></name><operator pos:start="199:38" pos:end="199:38">=</operator> <name pos:start="199:40" pos:end="199:49"><name pos:start="199:40" pos:end="199:40">h</name><operator pos:start="199:41" pos:end="199:42">-&gt;</operator><name pos:start="199:43" pos:end="199:45">sps</name><operator pos:start="199:46" pos:end="199:46">.</operator><name pos:start="199:47" pos:end="199:49">sar</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="201:9" pos:end="203:50"><if pos:start="201:9" pos:end="203:50">if<condition pos:start="201:11" pos:end="201:46">(<expr pos:start="201:12" pos:end="201:45"><operator pos:start="201:12" pos:end="201:12">!</operator><name pos:start="201:13" pos:end="201:45"><name pos:start="201:13" pos:end="201:13">s</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:20">avctx</name><operator pos:start="201:21" pos:end="201:22">-&gt;</operator><name pos:start="201:23" pos:end="201:41">sample_aspect_ratio</name><operator pos:start="201:42" pos:end="201:42">.</operator><name pos:start="201:43" pos:end="201:45">den</name></name></expr>)</condition><block type="pseudo" pos:start="203:13" pos:end="203:50"><block_content pos:start="203:13" pos:end="203:50">

            <expr_stmt pos:start="203:13" pos:end="203:50"><expr pos:start="203:13" pos:end="203:49"><name pos:start="203:13" pos:end="203:45"><name pos:start="203:13" pos:end="203:13">s</name><operator pos:start="203:14" pos:end="203:15">-&gt;</operator><name pos:start="203:16" pos:end="203:20">avctx</name><operator pos:start="203:21" pos:end="203:22">-&gt;</operator><name pos:start="203:23" pos:end="203:41">sample_aspect_ratio</name><operator pos:start="203:42" pos:end="203:42">.</operator><name pos:start="203:43" pos:end="203:45">den</name></name> <operator pos:start="203:47" pos:end="203:47">=</operator> <literal type="number" pos:start="203:49" pos:end="203:49">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="207:9" pos:end="211:9"><if pos:start="207:9" pos:end="211:9">if<condition pos:start="207:11" pos:end="207:43">(<expr pos:start="207:12" pos:end="207:42"><name pos:start="207:12" pos:end="207:42"><name pos:start="207:12" pos:end="207:12">h</name><operator pos:start="207:13" pos:end="207:14">-&gt;</operator><name pos:start="207:15" pos:end="207:17">sps</name><operator pos:start="207:18" pos:end="207:18">.</operator><name pos:start="207:19" pos:end="207:42">timing_info_present_flag</name></name></expr>)</condition><block pos:start="207:44" pos:end="211:9">{<block_content pos:start="209:13" pos:end="209:91">

            <expr_stmt pos:start="209:13" pos:end="209:91"><expr pos:start="209:13" pos:end="209:90"><name pos:start="209:13" pos:end="209:31"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:20">avctx</name><operator pos:start="209:21" pos:end="209:22">-&gt;</operator><name pos:start="209:23" pos:end="209:31">time_base</name></name><operator pos:start="209:32" pos:end="209:32">=</operator> <operator pos:start="209:34" pos:end="209:34">(</operator><name pos:start="209:35" pos:end="209:44">AVRational</name><operator pos:start="209:45" pos:end="209:45">)</operator><block pos:start="209:46" pos:end="209:90">{<expr pos:start="209:47" pos:end="209:70"><name pos:start="209:47" pos:end="209:70"><name pos:start="209:47" pos:end="209:47">h</name><operator pos:start="209:48" pos:end="209:49">-&gt;</operator><name pos:start="209:50" pos:end="209:52">sps</name><operator pos:start="209:53" pos:end="209:53">.</operator><name pos:start="209:54" pos:end="209:70">num_units_in_tick</name></name></expr>, <expr pos:start="209:73" pos:end="209:89"><name pos:start="209:73" pos:end="209:89"><name pos:start="209:73" pos:end="209:73">h</name><operator pos:start="209:74" pos:end="209:75">-&gt;</operator><name pos:start="209:76" pos:end="209:78">sps</name><operator pos:start="209:79" pos:end="209:79">.</operator><name pos:start="209:80" pos:end="209:89">time_scale</name></name></expr>}</block></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="217:5" pos:end="221:5"><if pos:start="217:5" pos:end="221:5">if<condition pos:start="217:7" pos:end="217:25">(<expr pos:start="217:8" pos:end="217:24"><name pos:start="217:8" pos:end="217:19"><name pos:start="217:8" pos:end="217:8">h</name><operator pos:start="217:9" pos:end="217:10">-&gt;</operator><name pos:start="217:11" pos:end="217:19">slice_num</name></name> <operator pos:start="217:21" pos:end="217:22">==</operator> <literal type="number" pos:start="217:24" pos:end="217:24">0</literal></expr>)</condition><block pos:start="217:26" pos:end="221:5">{<block_content pos:start="219:9" pos:end="219:23">

        <expr_stmt pos:start="219:9" pos:end="219:23"><expr pos:start="219:9" pos:end="219:22"><call pos:start="219:9" pos:end="219:22"><name pos:start="219:9" pos:end="219:19">frame_start</name><argument_list pos:start="219:20" pos:end="219:22">(<argument pos:start="219:21" pos:end="219:21"><expr pos:start="219:21" pos:end="219:21"><name pos:start="219:21" pos:end="219:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="225:5" pos:end="227:62"><expr pos:start="225:5" pos:end="227:61"><name pos:start="225:5" pos:end="225:37"><name pos:start="225:5" pos:end="225:5">s</name><operator pos:start="225:6" pos:end="225:7">-&gt;</operator><name pos:start="225:8" pos:end="225:26">current_picture_ptr</name><operator pos:start="225:27" pos:end="225:28">-&gt;</operator><name pos:start="225:29" pos:end="225:37">frame_num</name></name><operator pos:start="225:38" pos:end="225:38">=</operator> <comment type="line" pos:start="225:40" pos:end="225:64">//FIXME frame_num cleanup</comment>

    <name pos:start="227:5" pos:end="227:16"><name pos:start="227:5" pos:end="227:5">h</name><operator pos:start="227:6" pos:end="227:7">-&gt;</operator><name pos:start="227:8" pos:end="227:16">frame_num</name></name><operator pos:start="227:17" pos:end="227:17">=</operator> <call pos:start="227:19" pos:end="227:61"><name pos:start="227:19" pos:end="227:26">get_bits</name><argument_list pos:start="227:27" pos:end="227:61">(<argument pos:start="227:28" pos:end="227:33"><expr pos:start="227:28" pos:end="227:33"><operator pos:start="227:28" pos:end="227:28">&amp;</operator><name pos:start="227:29" pos:end="227:33"><name pos:start="227:29" pos:end="227:29">s</name><operator pos:start="227:30" pos:end="227:31">-&gt;</operator><name pos:start="227:32" pos:end="227:33">gb</name></name></expr></argument>, <argument pos:start="227:36" pos:end="227:60"><expr pos:start="227:36" pos:end="227:60"><name pos:start="227:36" pos:end="227:60"><name pos:start="227:36" pos:end="227:36">h</name><operator pos:start="227:37" pos:end="227:38">-&gt;</operator><name pos:start="227:39" pos:end="227:41">sps</name><operator pos:start="227:42" pos:end="227:42">.</operator><name pos:start="227:43" pos:end="227:60">log2_max_frame_num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="231:5" pos:end="231:24"><expr pos:start="231:5" pos:end="231:23"><name pos:start="231:5" pos:end="231:19"><name pos:start="231:5" pos:end="231:5">h</name><operator pos:start="231:6" pos:end="231:7">-&gt;</operator><name pos:start="231:8" pos:end="231:19">mb_aff_frame</name></name> <operator pos:start="231:21" pos:end="231:21">=</operator> <literal type="number" pos:start="231:23" pos:end="231:23">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="233:5" pos:end="253:5"><if pos:start="233:5" pos:end="237:5">if<condition pos:start="233:7" pos:end="233:34">(<expr pos:start="233:8" pos:end="233:33"><name pos:start="233:8" pos:end="233:33"><name pos:start="233:8" pos:end="233:8">h</name><operator pos:start="233:9" pos:end="233:10">-&gt;</operator><name pos:start="233:11" pos:end="233:13">sps</name><operator pos:start="233:14" pos:end="233:14">.</operator><name pos:start="233:15" pos:end="233:33">frame_mbs_only_flag</name></name></expr>)</condition><block pos:start="233:35" pos:end="237:5">{<block_content pos:start="235:9" pos:end="235:41">

        <expr_stmt pos:start="235:9" pos:end="235:41"><expr pos:start="235:9" pos:end="235:40"><name pos:start="235:9" pos:end="235:28"><name pos:start="235:9" pos:end="235:9">s</name><operator pos:start="235:10" pos:end="235:11">-&gt;</operator><name pos:start="235:12" pos:end="235:28">picture_structure</name></name><operator pos:start="235:29" pos:end="235:29">=</operator> <name pos:start="235:31" pos:end="235:40">PICT_FRAME</name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="237:6" pos:end="253:5">else<block pos:start="237:10" pos:end="253:5">{<block_content pos:start="239:9" pos:end="251:9">

        <if_stmt pos:start="239:9" pos:end="251:9"><if pos:start="239:9" pos:end="243:9">if<condition pos:start="239:11" pos:end="239:29">(<expr pos:start="239:12" pos:end="239:28"><call pos:start="239:12" pos:end="239:28"><name pos:start="239:12" pos:end="239:20">get_bits1</name><argument_list pos:start="239:21" pos:end="239:28">(<argument pos:start="239:22" pos:end="239:27"><expr pos:start="239:22" pos:end="239:27"><operator pos:start="239:22" pos:end="239:22">&amp;</operator><name pos:start="239:23" pos:end="239:27"><name pos:start="239:23" pos:end="239:23">s</name><operator pos:start="239:24" pos:end="239:25">-&gt;</operator><name pos:start="239:26" pos:end="239:27">gb</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="239:31" pos:end="243:9">{<block_content pos:start="241:13" pos:end="241:69"> <comment type="line" pos:start="239:33" pos:end="239:48">//field_pic_flag</comment>

            <expr_stmt pos:start="241:13" pos:end="241:69"><expr pos:start="241:13" pos:end="241:68"><name pos:start="241:13" pos:end="241:32"><name pos:start="241:13" pos:end="241:13">s</name><operator pos:start="241:14" pos:end="241:15">-&gt;</operator><name pos:start="241:16" pos:end="241:32">picture_structure</name></name><operator pos:start="241:33" pos:end="241:33">=</operator> <name pos:start="241:35" pos:end="241:48">PICT_TOP_FIELD</name> <operator pos:start="241:50" pos:end="241:50">+</operator> <call pos:start="241:52" pos:end="241:68"><name pos:start="241:52" pos:end="241:60">get_bits1</name><argument_list pos:start="241:61" pos:end="241:68">(<argument pos:start="241:62" pos:end="241:67"><expr pos:start="241:62" pos:end="241:67"><operator pos:start="241:62" pos:end="241:62">&amp;</operator><name pos:start="241:63" pos:end="241:67"><name pos:start="241:63" pos:end="241:63">s</name><operator pos:start="241:64" pos:end="241:65">-&gt;</operator><name pos:start="241:66" pos:end="241:67">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="241:71" pos:end="241:89">//bottom_field_flag</comment>

        </block_content>}</block></if> <else pos:start="243:11" pos:end="251:9">else <block pos:start="243:16" pos:end="251:9">{<block_content pos:start="245:13" pos:end="249:44">

            <expr_stmt pos:start="245:13" pos:end="245:45"><expr pos:start="245:13" pos:end="245:44"><name pos:start="245:13" pos:end="245:32"><name pos:start="245:13" pos:end="245:13">s</name><operator pos:start="245:14" pos:end="245:15">-&gt;</operator><name pos:start="245:16" pos:end="245:32">picture_structure</name></name><operator pos:start="245:33" pos:end="245:33">=</operator> <name pos:start="245:35" pos:end="245:44">PICT_FRAME</name></expr>;</expr_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:48"><expr pos:start="247:13" pos:end="247:47"><name pos:start="247:13" pos:end="247:29">first_mb_in_slice</name> <operator pos:start="247:31" pos:end="247:33">&lt;&lt;=</operator> <name pos:start="247:35" pos:end="247:47"><name pos:start="247:35" pos:end="247:35">h</name><operator pos:start="247:36" pos:end="247:37">-&gt;</operator><name pos:start="247:38" pos:end="247:40">sps</name><operator pos:start="247:41" pos:end="247:41">.</operator><name pos:start="247:42" pos:end="247:47">mb_aff</name></name></expr>;</expr_stmt>

            <expr_stmt pos:start="249:13" pos:end="249:44"><expr pos:start="249:13" pos:end="249:43"><name pos:start="249:13" pos:end="249:27"><name pos:start="249:13" pos:end="249:13">h</name><operator pos:start="249:14" pos:end="249:15">-&gt;</operator><name pos:start="249:16" pos:end="249:27">mb_aff_frame</name></name> <operator pos:start="249:29" pos:end="249:29">=</operator> <name pos:start="249:31" pos:end="249:43"><name pos:start="249:31" pos:end="249:31">h</name><operator pos:start="249:32" pos:end="249:33">-&gt;</operator><name pos:start="249:34" pos:end="249:36">sps</name><operator pos:start="249:37" pos:end="249:37">.</operator><name pos:start="249:38" pos:end="249:43">mb_aff</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="257:5" pos:end="257:63"><expr pos:start="257:5" pos:end="257:62"><name pos:start="257:5" pos:end="257:18"><name pos:start="257:5" pos:end="257:5">s</name><operator pos:start="257:6" pos:end="257:7">-&gt;</operator><name pos:start="257:8" pos:end="257:18">resync_mb_x</name></name> <operator pos:start="257:20" pos:end="257:20">=</operator> <name pos:start="257:22" pos:end="257:28"><name pos:start="257:22" pos:end="257:22">s</name><operator pos:start="257:23" pos:end="257:24">-&gt;</operator><name pos:start="257:25" pos:end="257:28">mb_x</name></name> <operator pos:start="257:30" pos:end="257:30">=</operator> <name pos:start="257:32" pos:end="257:48">first_mb_in_slice</name> <operator pos:start="257:50" pos:end="257:50">%</operator> <name pos:start="257:52" pos:end="257:62"><name pos:start="257:52" pos:end="257:52">s</name><operator pos:start="257:53" pos:end="257:54">-&gt;</operator><name pos:start="257:55" pos:end="257:62">mb_width</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="259:5" pos:end="259:63"><expr pos:start="259:5" pos:end="259:62"><name pos:start="259:5" pos:end="259:18"><name pos:start="259:5" pos:end="259:5">s</name><operator pos:start="259:6" pos:end="259:7">-&gt;</operator><name pos:start="259:8" pos:end="259:18">resync_mb_y</name></name> <operator pos:start="259:20" pos:end="259:20">=</operator> <name pos:start="259:22" pos:end="259:28"><name pos:start="259:22" pos:end="259:22">s</name><operator pos:start="259:23" pos:end="259:24">-&gt;</operator><name pos:start="259:25" pos:end="259:28">mb_y</name></name> <operator pos:start="259:30" pos:end="259:30">=</operator> <name pos:start="259:32" pos:end="259:48">first_mb_in_slice</name> <operator pos:start="259:50" pos:end="259:50">/</operator> <name pos:start="259:52" pos:end="259:62"><name pos:start="259:52" pos:end="259:52">s</name><operator pos:start="259:53" pos:end="259:54">-&gt;</operator><name pos:start="259:55" pos:end="259:62">mb_width</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="261:5" pos:end="265:5"><if pos:start="261:5" pos:end="265:5">if<condition pos:start="261:7" pos:end="261:31">(<expr pos:start="261:8" pos:end="261:30"><name pos:start="261:8" pos:end="261:14"><name pos:start="261:8" pos:end="261:8">s</name><operator pos:start="261:9" pos:end="261:10">-&gt;</operator><name pos:start="261:11" pos:end="261:14">mb_y</name></name> <operator pos:start="261:16" pos:end="261:17">&gt;=</operator> <name pos:start="261:19" pos:end="261:30"><name pos:start="261:19" pos:end="261:19">s</name><operator pos:start="261:20" pos:end="261:21">-&gt;</operator><name pos:start="261:22" pos:end="261:30">mb_height</name></name></expr>)</condition><block pos:start="261:32" pos:end="265:5">{<block_content pos:start="263:9" pos:end="263:18">

        <return pos:start="263:9" pos:end="263:18">return <expr pos:start="263:16" pos:end="263:17"><operator pos:start="263:16" pos:end="263:16">-</operator><literal type="number" pos:start="263:17" pos:end="263:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="269:5" pos:end="281:5"><if pos:start="269:5" pos:end="275:5">if<condition pos:start="269:7" pos:end="269:40">(<expr pos:start="269:8" pos:end="269:39"><name pos:start="269:8" pos:end="269:27"><name pos:start="269:8" pos:end="269:8">s</name><operator pos:start="269:9" pos:end="269:10">-&gt;</operator><name pos:start="269:11" pos:end="269:27">picture_structure</name></name><operator pos:start="269:28" pos:end="269:29">==</operator><name pos:start="269:30" pos:end="269:39">PICT_FRAME</name></expr>)</condition><block pos:start="269:41" pos:end="275:5">{<block_content pos:start="271:9" pos:end="273:54">

        <expr_stmt pos:start="271:9" pos:end="271:40"><expr pos:start="271:9" pos:end="271:39"><name pos:start="271:9" pos:end="271:23"><name pos:start="271:9" pos:end="271:9">h</name><operator pos:start="271:10" pos:end="271:11">-&gt;</operator><name pos:start="271:12" pos:end="271:23">curr_pic_num</name></name><operator pos:start="271:24" pos:end="271:24">=</operator>   <name pos:start="271:28" pos:end="271:39"><name pos:start="271:28" pos:end="271:28">h</name><operator pos:start="271:29" pos:end="271:30">-&gt;</operator><name pos:start="271:31" pos:end="271:39">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="273:9" pos:end="273:54"><expr pos:start="273:9" pos:end="273:53"><name pos:start="273:9" pos:end="273:22"><name pos:start="273:9" pos:end="273:9">h</name><operator pos:start="273:10" pos:end="273:11">-&gt;</operator><name pos:start="273:12" pos:end="273:22">max_pic_num</name></name><operator pos:start="273:23" pos:end="273:23">=</operator> <literal type="number" pos:start="273:25" pos:end="273:25">1</literal><operator pos:start="273:26" pos:end="273:27">&lt;&lt;</operator> <name pos:start="273:29" pos:end="273:53"><name pos:start="273:29" pos:end="273:29">h</name><operator pos:start="273:30" pos:end="273:31">-&gt;</operator><name pos:start="273:32" pos:end="273:34">sps</name><operator pos:start="273:35" pos:end="273:35">.</operator><name pos:start="273:36" pos:end="273:53">log2_max_frame_num</name></name></expr>;</expr_stmt>

    </block_content>}</block></if><else pos:start="275:6" pos:end="281:5">else<block pos:start="275:10" pos:end="281:5">{<block_content pos:start="277:9" pos:end="279:59">

        <expr_stmt pos:start="277:9" pos:end="277:40"><expr pos:start="277:9" pos:end="277:39"><name pos:start="277:9" pos:end="277:23"><name pos:start="277:9" pos:end="277:9">h</name><operator pos:start="277:10" pos:end="277:11">-&gt;</operator><name pos:start="277:12" pos:end="277:23">curr_pic_num</name></name><operator pos:start="277:24" pos:end="277:24">=</operator> <literal type="number" pos:start="277:26" pos:end="277:26">2</literal><operator pos:start="277:27" pos:end="277:27">*</operator><name pos:start="277:28" pos:end="277:39"><name pos:start="277:28" pos:end="277:28">h</name><operator pos:start="277:29" pos:end="277:30">-&gt;</operator><name pos:start="277:31" pos:end="277:39">frame_num</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="279:9" pos:end="279:59"><expr pos:start="279:9" pos:end="279:58"><name pos:start="279:9" pos:end="279:22"><name pos:start="279:9" pos:end="279:9">h</name><operator pos:start="279:10" pos:end="279:11">-&gt;</operator><name pos:start="279:12" pos:end="279:22">max_pic_num</name></name><operator pos:start="279:23" pos:end="279:23">=</operator> <literal type="number" pos:start="279:25" pos:end="279:25">1</literal><operator pos:start="279:26" pos:end="279:27">&lt;&lt;</operator><operator pos:start="279:28" pos:end="279:28">(</operator><name pos:start="279:29" pos:end="279:53"><name pos:start="279:29" pos:end="279:29">h</name><operator pos:start="279:30" pos:end="279:31">-&gt;</operator><name pos:start="279:32" pos:end="279:34">sps</name><operator pos:start="279:35" pos:end="279:35">.</operator><name pos:start="279:36" pos:end="279:53">log2_max_frame_num</name></name> <operator pos:start="279:55" pos:end="279:55">+</operator> <literal type="number" pos:start="279:57" pos:end="279:57">1</literal><operator pos:start="279:58" pos:end="279:58">)</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

        

    <if_stmt pos:start="285:5" pos:end="289:5"><if pos:start="285:5" pos:end="289:5">if<condition pos:start="285:7" pos:end="285:41">(<expr pos:start="285:8" pos:end="285:40"><name pos:start="285:8" pos:end="285:23"><name pos:start="285:8" pos:end="285:8">h</name><operator pos:start="285:9" pos:end="285:10">-&gt;</operator><name pos:start="285:11" pos:end="285:23">nal_unit_type</name></name> <operator pos:start="285:25" pos:end="285:26">==</operator> <name pos:start="285:28" pos:end="285:40">NAL_IDR_SLICE</name></expr>)</condition><block pos:start="285:42" pos:end="289:5">{<block_content pos:start="287:9" pos:end="287:30">

        <expr_stmt pos:start="287:9" pos:end="287:30"><expr pos:start="287:9" pos:end="287:29"><call pos:start="287:9" pos:end="287:29"><name pos:start="287:9" pos:end="287:21">get_ue_golomb</name><argument_list pos:start="287:22" pos:end="287:29">(<argument pos:start="287:23" pos:end="287:28"><expr pos:start="287:23" pos:end="287:28"><operator pos:start="287:23" pos:end="287:23">&amp;</operator><name pos:start="287:24" pos:end="287:28"><name pos:start="287:24" pos:end="287:24">s</name><operator pos:start="287:25" pos:end="287:26">-&gt;</operator><name pos:start="287:27" pos:end="287:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="287:32" pos:end="287:47">/* idr_pic_id */</comment>

    </block_content>}</block></if></if_stmt>

   

    <if_stmt pos:start="293:5" pos:end="305:5"><if pos:start="293:5" pos:end="305:5">if<condition pos:start="293:7" pos:end="293:26">(<expr pos:start="293:8" pos:end="293:25"><name pos:start="293:8" pos:end="293:22"><name pos:start="293:8" pos:end="293:8">h</name><operator pos:start="293:9" pos:end="293:10">-&gt;</operator><name pos:start="293:11" pos:end="293:13">sps</name><operator pos:start="293:14" pos:end="293:14">.</operator><name pos:start="293:15" pos:end="293:22">poc_type</name></name><operator pos:start="293:23" pos:end="293:24">==</operator><literal type="number" pos:start="293:25" pos:end="293:25">0</literal></expr>)</condition><block pos:start="293:27" pos:end="305:5">{<block_content pos:start="295:9" pos:end="303:9">

        <expr_stmt pos:start="295:9" pos:end="295:62"><expr pos:start="295:9" pos:end="295:61"><name pos:start="295:9" pos:end="295:18"><name pos:start="295:9" pos:end="295:9">h</name><operator pos:start="295:10" pos:end="295:11">-&gt;</operator><name pos:start="295:12" pos:end="295:18">poc_lsb</name></name><operator pos:start="295:19" pos:end="295:19">=</operator> <call pos:start="295:21" pos:end="295:61"><name pos:start="295:21" pos:end="295:28">get_bits</name><argument_list pos:start="295:29" pos:end="295:61">(<argument pos:start="295:30" pos:end="295:35"><expr pos:start="295:30" pos:end="295:35"><operator pos:start="295:30" pos:end="295:30">&amp;</operator><name pos:start="295:31" pos:end="295:35"><name pos:start="295:31" pos:end="295:31">s</name><operator pos:start="295:32" pos:end="295:33">-&gt;</operator><name pos:start="295:34" pos:end="295:35">gb</name></name></expr></argument>, <argument pos:start="295:38" pos:end="295:60"><expr pos:start="295:38" pos:end="295:60"><name pos:start="295:38" pos:end="295:60"><name pos:start="295:38" pos:end="295:38">h</name><operator pos:start="295:39" pos:end="295:40">-&gt;</operator><name pos:start="295:41" pos:end="295:43">sps</name><operator pos:start="295:44" pos:end="295:44">.</operator><name pos:start="295:45" pos:end="295:60">log2_max_poc_lsb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="299:9" pos:end="303:9"><if pos:start="299:9" pos:end="303:9">if<condition pos:start="299:11" pos:end="299:75">(<expr pos:start="299:12" pos:end="299:74"><name pos:start="299:12" pos:end="299:35"><name pos:start="299:12" pos:end="299:12">h</name><operator pos:start="299:13" pos:end="299:14">-&gt;</operator><name pos:start="299:15" pos:end="299:17">pps</name><operator pos:start="299:18" pos:end="299:18">.</operator><name pos:start="299:19" pos:end="299:35">pic_order_present</name></name><operator pos:start="299:36" pos:end="299:37">==</operator><literal type="number" pos:start="299:38" pos:end="299:38">1</literal> <operator pos:start="299:40" pos:end="299:41">&amp;&amp;</operator> <name pos:start="299:43" pos:end="299:62"><name pos:start="299:43" pos:end="299:43">s</name><operator pos:start="299:44" pos:end="299:45">-&gt;</operator><name pos:start="299:46" pos:end="299:62">picture_structure</name></name><operator pos:start="299:63" pos:end="299:64">==</operator><name pos:start="299:65" pos:end="299:74">PICT_FRAME</name></expr>)</condition><block pos:start="299:76" pos:end="303:9">{<block_content pos:start="301:13" pos:end="301:55">

            <expr_stmt pos:start="301:13" pos:end="301:55"><expr pos:start="301:13" pos:end="301:54"><name pos:start="301:13" pos:end="301:31"><name pos:start="301:13" pos:end="301:13">h</name><operator pos:start="301:14" pos:end="301:15">-&gt;</operator><name pos:start="301:16" pos:end="301:31">delta_poc_bottom</name></name><operator pos:start="301:32" pos:end="301:32">=</operator> <call pos:start="301:34" pos:end="301:54"><name pos:start="301:34" pos:end="301:46">get_se_golomb</name><argument_list pos:start="301:47" pos:end="301:54">(<argument pos:start="301:48" pos:end="301:53"><expr pos:start="301:48" pos:end="301:53"><operator pos:start="301:48" pos:end="301:48">&amp;</operator><name pos:start="301:49" pos:end="301:53"><name pos:start="301:49" pos:end="301:49">s</name><operator pos:start="301:50" pos:end="301:51">-&gt;</operator><name pos:start="301:52" pos:end="301:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <if_stmt pos:start="309:5" pos:end="319:5"><if pos:start="309:5" pos:end="319:5">if<condition pos:start="309:7" pos:end="309:70">(<expr pos:start="309:8" pos:end="309:69"><name pos:start="309:8" pos:end="309:22"><name pos:start="309:8" pos:end="309:8">h</name><operator pos:start="309:9" pos:end="309:10">-&gt;</operator><name pos:start="309:11" pos:end="309:13">sps</name><operator pos:start="309:14" pos:end="309:14">.</operator><name pos:start="309:15" pos:end="309:22">poc_type</name></name><operator pos:start="309:23" pos:end="309:24">==</operator><literal type="number" pos:start="309:25" pos:end="309:25">1</literal> <operator pos:start="309:27" pos:end="309:28">&amp;&amp;</operator> <operator pos:start="309:30" pos:end="309:30">!</operator><name pos:start="309:31" pos:end="309:69"><name pos:start="309:31" pos:end="309:31">h</name><operator pos:start="309:32" pos:end="309:33">-&gt;</operator><name pos:start="309:34" pos:end="309:36">sps</name><operator pos:start="309:37" pos:end="309:37">.</operator><name pos:start="309:38" pos:end="309:69">delta_pic_order_always_zero_flag</name></name></expr>)</condition><block pos:start="309:71" pos:end="319:5">{<block_content pos:start="311:9" pos:end="317:51">

        <expr_stmt pos:start="311:9" pos:end="311:47"><expr pos:start="311:9" pos:end="311:46"><name pos:start="311:9" pos:end="311:23"><name pos:start="311:9" pos:end="311:9">h</name><operator pos:start="311:10" pos:end="311:11">-&gt;</operator><name pos:start="311:12" pos:end="311:20">delta_poc</name><index pos:start="311:21" pos:end="311:23">[<expr pos:start="311:22" pos:end="311:22"><literal type="number" pos:start="311:22" pos:end="311:22">0</literal></expr>]</index></name><operator pos:start="311:24" pos:end="311:24">=</operator> <call pos:start="311:26" pos:end="311:46"><name pos:start="311:26" pos:end="311:38">get_se_golomb</name><argument_list pos:start="311:39" pos:end="311:46">(<argument pos:start="311:40" pos:end="311:45"><expr pos:start="311:40" pos:end="311:45"><operator pos:start="311:40" pos:end="311:40">&amp;</operator><name pos:start="311:41" pos:end="311:45"><name pos:start="311:41" pos:end="311:41">s</name><operator pos:start="311:42" pos:end="311:43">-&gt;</operator><name pos:start="311:44" pos:end="311:45">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        

        <if_stmt pos:start="315:9" pos:end="317:51"><if pos:start="315:9" pos:end="317:51">if<condition pos:start="315:11" pos:end="315:75">(<expr pos:start="315:12" pos:end="315:74"><name pos:start="315:12" pos:end="315:35"><name pos:start="315:12" pos:end="315:12">h</name><operator pos:start="315:13" pos:end="315:14">-&gt;</operator><name pos:start="315:15" pos:end="315:17">pps</name><operator pos:start="315:18" pos:end="315:18">.</operator><name pos:start="315:19" pos:end="315:35">pic_order_present</name></name><operator pos:start="315:36" pos:end="315:37">==</operator><literal type="number" pos:start="315:38" pos:end="315:38">1</literal> <operator pos:start="315:40" pos:end="315:41">&amp;&amp;</operator> <name pos:start="315:43" pos:end="315:62"><name pos:start="315:43" pos:end="315:43">s</name><operator pos:start="315:44" pos:end="315:45">-&gt;</operator><name pos:start="315:46" pos:end="315:62">picture_structure</name></name><operator pos:start="315:63" pos:end="315:64">==</operator><name pos:start="315:65" pos:end="315:74">PICT_FRAME</name></expr>)</condition><block type="pseudo" pos:start="317:13" pos:end="317:51"><block_content pos:start="317:13" pos:end="317:51">

            <expr_stmt pos:start="317:13" pos:end="317:51"><expr pos:start="317:13" pos:end="317:50"><name pos:start="317:13" pos:end="317:27"><name pos:start="317:13" pos:end="317:13">h</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:24">delta_poc</name><index pos:start="317:25" pos:end="317:27">[<expr pos:start="317:26" pos:end="317:26"><literal type="number" pos:start="317:26" pos:end="317:26">1</literal></expr>]</index></name><operator pos:start="317:28" pos:end="317:28">=</operator> <call pos:start="317:30" pos:end="317:50"><name pos:start="317:30" pos:end="317:42">get_se_golomb</name><argument_list pos:start="317:43" pos:end="317:50">(<argument pos:start="317:44" pos:end="317:49"><expr pos:start="317:44" pos:end="317:49"><operator pos:start="317:44" pos:end="317:44">&amp;</operator><name pos:start="317:45" pos:end="317:49"><name pos:start="317:45" pos:end="317:45">s</name><operator pos:start="317:46" pos:end="317:47">-&gt;</operator><name pos:start="317:48" pos:end="317:49">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    

    <expr_stmt pos:start="323:5" pos:end="323:16"><expr pos:start="323:5" pos:end="323:15"><call pos:start="323:5" pos:end="323:15"><name pos:start="323:5" pos:end="323:12">init_poc</name><argument_list pos:start="323:13" pos:end="323:15">(<argument pos:start="323:14" pos:end="323:14"><expr pos:start="323:14" pos:end="323:14"><name pos:start="323:14" pos:end="323:14">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

    <if_stmt pos:start="327:5" pos:end="331:5"><if pos:start="327:5" pos:end="331:5">if<condition pos:start="327:7" pos:end="327:40">(<expr pos:start="327:8" pos:end="327:39"><name pos:start="327:8" pos:end="327:39"><name pos:start="327:8" pos:end="327:8">h</name><operator pos:start="327:9" pos:end="327:10">-&gt;</operator><name pos:start="327:11" pos:end="327:13">pps</name><operator pos:start="327:14" pos:end="327:14">.</operator><name pos:start="327:15" pos:end="327:39">redundant_pic_cnt_present</name></name></expr>)</condition><block pos:start="327:41" pos:end="331:5">{<block_content pos:start="329:9" pos:end="329:54">

        <expr_stmt pos:start="329:9" pos:end="329:54"><expr pos:start="329:9" pos:end="329:53"><name pos:start="329:9" pos:end="329:30"><name pos:start="329:9" pos:end="329:9">h</name><operator pos:start="329:10" pos:end="329:11">-&gt;</operator><name pos:start="329:12" pos:end="329:30">redundant_pic_count</name></name><operator pos:start="329:31" pos:end="329:31">=</operator> <call pos:start="329:33" pos:end="329:53"><name pos:start="329:33" pos:end="329:45">get_ue_golomb</name><argument_list pos:start="329:46" pos:end="329:53">(<argument pos:start="329:47" pos:end="329:52"><expr pos:start="329:47" pos:end="329:52"><operator pos:start="329:47" pos:end="329:47">&amp;</operator><name pos:start="329:48" pos:end="329:52"><name pos:start="329:48" pos:end="329:48">s</name><operator pos:start="329:49" pos:end="329:50">-&gt;</operator><name pos:start="329:51" pos:end="329:52">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="335:5" pos:end="335:55">//set defaults, might be overriden a few line later</comment>

    <expr_stmt pos:start="337:5" pos:end="337:41"><expr pos:start="337:5" pos:end="337:40"><name pos:start="337:5" pos:end="337:19"><name pos:start="337:5" pos:end="337:5">h</name><operator pos:start="337:6" pos:end="337:7">-&gt;</operator><name pos:start="337:8" pos:end="337:16">ref_count</name><index pos:start="337:17" pos:end="337:19">[<expr pos:start="337:18" pos:end="337:18"><literal type="number" pos:start="337:18" pos:end="337:18">0</literal></expr>]</index></name><operator pos:start="337:20" pos:end="337:20">=</operator> <name pos:start="337:22" pos:end="337:40"><name pos:start="337:22" pos:end="337:22">h</name><operator pos:start="337:23" pos:end="337:24">-&gt;</operator><name pos:start="337:25" pos:end="337:27">pps</name><operator pos:start="337:28" pos:end="337:28">.</operator><name pos:start="337:29" pos:end="337:37">ref_count</name><index pos:start="337:38" pos:end="337:40">[<expr pos:start="337:39" pos:end="337:39"><literal type="number" pos:start="337:39" pos:end="337:39">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="339:5" pos:end="339:41"><expr pos:start="339:5" pos:end="339:40"><name pos:start="339:5" pos:end="339:19"><name pos:start="339:5" pos:end="339:5">h</name><operator pos:start="339:6" pos:end="339:7">-&gt;</operator><name pos:start="339:8" pos:end="339:16">ref_count</name><index pos:start="339:17" pos:end="339:19">[<expr pos:start="339:18" pos:end="339:18"><literal type="number" pos:start="339:18" pos:end="339:18">1</literal></expr>]</index></name><operator pos:start="339:20" pos:end="339:20">=</operator> <name pos:start="339:22" pos:end="339:40"><name pos:start="339:22" pos:end="339:22">h</name><operator pos:start="339:23" pos:end="339:24">-&gt;</operator><name pos:start="339:25" pos:end="339:27">pps</name><operator pos:start="339:28" pos:end="339:28">.</operator><name pos:start="339:29" pos:end="339:37">ref_count</name><index pos:start="339:38" pos:end="339:40">[<expr pos:start="339:39" pos:end="339:39"><literal type="number" pos:start="339:39" pos:end="339:39">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <if_stmt pos:start="343:5" pos:end="375:5"><if pos:start="343:5" pos:end="375:5">if<condition pos:start="343:7" pos:end="343:86">(<expr pos:start="343:8" pos:end="343:85"><name pos:start="343:8" pos:end="343:20"><name pos:start="343:8" pos:end="343:8">h</name><operator pos:start="343:9" pos:end="343:10">-&gt;</operator><name pos:start="343:11" pos:end="343:20">slice_type</name></name> <operator pos:start="343:22" pos:end="343:23">==</operator> <name pos:start="343:25" pos:end="343:30">P_TYPE</name> <operator pos:start="343:32" pos:end="343:33">||</operator> <name pos:start="343:35" pos:end="343:47"><name pos:start="343:35" pos:end="343:35">h</name><operator pos:start="343:36" pos:end="343:37">-&gt;</operator><name pos:start="343:38" pos:end="343:47">slice_type</name></name> <operator pos:start="343:49" pos:end="343:50">==</operator> <name pos:start="343:52" pos:end="343:58">SP_TYPE</name> <operator pos:start="343:60" pos:end="343:61">||</operator> <name pos:start="343:63" pos:end="343:75"><name pos:start="343:63" pos:end="343:63">h</name><operator pos:start="343:64" pos:end="343:65">-&gt;</operator><name pos:start="343:66" pos:end="343:75">slice_type</name></name> <operator pos:start="343:77" pos:end="343:78">==</operator> <name pos:start="343:80" pos:end="343:85">B_TYPE</name></expr>)</condition><block pos:start="343:87" pos:end="375:5">{<block_content pos:start="345:9" pos:end="373:9">

        <if_stmt pos:start="345:9" pos:end="349:9"><if pos:start="345:9" pos:end="349:9">if<condition pos:start="345:11" pos:end="345:35">(<expr pos:start="345:12" pos:end="345:34"><name pos:start="345:12" pos:end="345:24"><name pos:start="345:12" pos:end="345:12">h</name><operator pos:start="345:13" pos:end="345:14">-&gt;</operator><name pos:start="345:15" pos:end="345:24">slice_type</name></name> <operator pos:start="345:26" pos:end="345:27">==</operator> <name pos:start="345:29" pos:end="345:34">B_TYPE</name></expr>)</condition><block pos:start="345:36" pos:end="349:9">{<block_content pos:start="347:13" pos:end="347:57">

            <expr_stmt pos:start="347:13" pos:end="347:57"><expr pos:start="347:13" pos:end="347:56"><name pos:start="347:13" pos:end="347:37"><name pos:start="347:13" pos:end="347:13">h</name><operator pos:start="347:14" pos:end="347:15">-&gt;</operator><name pos:start="347:16" pos:end="347:37">direct_spatial_mv_pred</name></name><operator pos:start="347:38" pos:end="347:38">=</operator> <call pos:start="347:40" pos:end="347:56"><name pos:start="347:40" pos:end="347:48">get_bits1</name><argument_list pos:start="347:49" pos:end="347:56">(<argument pos:start="347:50" pos:end="347:55"><expr pos:start="347:50" pos:end="347:55"><operator pos:start="347:50" pos:end="347:50">&amp;</operator><name pos:start="347:51" pos:end="347:55"><name pos:start="347:51" pos:end="347:51">s</name><operator pos:start="347:52" pos:end="347:53">-&gt;</operator><name pos:start="347:54" pos:end="347:55">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="351:9" pos:end="351:60"><expr pos:start="351:9" pos:end="351:59"><name pos:start="351:9" pos:end="351:40">num_ref_idx_active_override_flag</name><operator pos:start="351:41" pos:end="351:41">=</operator> <call pos:start="351:43" pos:end="351:59"><name pos:start="351:43" pos:end="351:51">get_bits1</name><argument_list pos:start="351:52" pos:end="351:59">(<argument pos:start="351:53" pos:end="351:58"><expr pos:start="351:53" pos:end="351:58"><operator pos:start="351:53" pos:end="351:53">&amp;</operator><name pos:start="351:54" pos:end="351:58"><name pos:start="351:54" pos:end="351:54">s</name><operator pos:start="351:55" pos:end="351:56">-&gt;</operator><name pos:start="351:57" pos:end="351:58">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    

        <if_stmt pos:start="355:9" pos:end="373:9"><if pos:start="355:9" pos:end="373:9">if<condition pos:start="355:11" pos:end="355:44">(<expr pos:start="355:12" pos:end="355:43"><name pos:start="355:12" pos:end="355:43">num_ref_idx_active_override_flag</name></expr>)</condition><block pos:start="355:45" pos:end="373:9">{<block_content pos:start="357:13" pos:end="371:13">

            <expr_stmt pos:start="357:13" pos:end="357:55"><expr pos:start="357:13" pos:end="357:54"><name pos:start="357:13" pos:end="357:27"><name pos:start="357:13" pos:end="357:13">h</name><operator pos:start="357:14" pos:end="357:15">-&gt;</operator><name pos:start="357:16" pos:end="357:24">ref_count</name><index pos:start="357:25" pos:end="357:27">[<expr pos:start="357:26" pos:end="357:26"><literal type="number" pos:start="357:26" pos:end="357:26">0</literal></expr>]</index></name><operator pos:start="357:28" pos:end="357:28">=</operator> <call pos:start="357:30" pos:end="357:50"><name pos:start="357:30" pos:end="357:42">get_ue_golomb</name><argument_list pos:start="357:43" pos:end="357:50">(<argument pos:start="357:44" pos:end="357:49"><expr pos:start="357:44" pos:end="357:49"><operator pos:start="357:44" pos:end="357:44">&amp;</operator><name pos:start="357:45" pos:end="357:49"><name pos:start="357:45" pos:end="357:45">s</name><operator pos:start="357:46" pos:end="357:47">-&gt;</operator><name pos:start="357:48" pos:end="357:49">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="357:52" pos:end="357:52">+</operator> <literal type="number" pos:start="357:54" pos:end="357:54">1</literal></expr>;</expr_stmt>

            <if_stmt pos:start="359:13" pos:end="361:59"><if pos:start="359:13" pos:end="361:59">if<condition pos:start="359:15" pos:end="359:37">(<expr pos:start="359:16" pos:end="359:36"><name pos:start="359:16" pos:end="359:28"><name pos:start="359:16" pos:end="359:16">h</name><operator pos:start="359:17" pos:end="359:18">-&gt;</operator><name pos:start="359:19" pos:end="359:28">slice_type</name></name><operator pos:start="359:29" pos:end="359:30">==</operator><name pos:start="359:31" pos:end="359:36">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="361:17" pos:end="361:59"><block_content pos:start="361:17" pos:end="361:59">

                <expr_stmt pos:start="361:17" pos:end="361:59"><expr pos:start="361:17" pos:end="361:58"><name pos:start="361:17" pos:end="361:31"><name pos:start="361:17" pos:end="361:17">h</name><operator pos:start="361:18" pos:end="361:19">-&gt;</operator><name pos:start="361:20" pos:end="361:28">ref_count</name><index pos:start="361:29" pos:end="361:31">[<expr pos:start="361:30" pos:end="361:30"><literal type="number" pos:start="361:30" pos:end="361:30">1</literal></expr>]</index></name><operator pos:start="361:32" pos:end="361:32">=</operator> <call pos:start="361:34" pos:end="361:54"><name pos:start="361:34" pos:end="361:46">get_ue_golomb</name><argument_list pos:start="361:47" pos:end="361:54">(<argument pos:start="361:48" pos:end="361:53"><expr pos:start="361:48" pos:end="361:53"><operator pos:start="361:48" pos:end="361:48">&amp;</operator><name pos:start="361:49" pos:end="361:53"><name pos:start="361:49" pos:end="361:49">s</name><operator pos:start="361:50" pos:end="361:51">-&gt;</operator><name pos:start="361:52" pos:end="361:53">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="361:56" pos:end="361:56">+</operator> <literal type="number" pos:start="361:58" pos:end="361:58">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <if_stmt pos:start="365:13" pos:end="371:13"><if pos:start="365:13" pos:end="371:13">if<condition pos:start="365:15" pos:end="365:60">(<expr pos:start="365:16" pos:end="365:59"><name pos:start="365:16" pos:end="365:30"><name pos:start="365:16" pos:end="365:16">h</name><operator pos:start="365:17" pos:end="365:18">-&gt;</operator><name pos:start="365:19" pos:end="365:27">ref_count</name><index pos:start="365:28" pos:end="365:30">[<expr pos:start="365:29" pos:end="365:29"><literal type="number" pos:start="365:29" pos:end="365:29">0</literal></expr>]</index></name> <operator pos:start="365:32" pos:end="365:32">&gt;</operator> <literal type="number" pos:start="365:34" pos:end="365:35">32</literal> <operator pos:start="365:37" pos:end="365:38">||</operator> <name pos:start="365:40" pos:end="365:54"><name pos:start="365:40" pos:end="365:40">h</name><operator pos:start="365:41" pos:end="365:42">-&gt;</operator><name pos:start="365:43" pos:end="365:51">ref_count</name><index pos:start="365:52" pos:end="365:54">[<expr pos:start="365:53" pos:end="365:53"><literal type="number" pos:start="365:53" pos:end="365:53">1</literal></expr>]</index></name> <operator pos:start="365:56" pos:end="365:56">&gt;</operator> <literal type="number" pos:start="365:58" pos:end="365:59">32</literal></expr>)</condition><block pos:start="365:61" pos:end="371:13">{<block_content pos:start="367:17" pos:end="369:26">

                <expr_stmt pos:start="367:17" pos:end="367:73"><expr pos:start="367:17" pos:end="367:72"><call pos:start="367:17" pos:end="367:72"><name pos:start="367:17" pos:end="367:22">av_log</name><argument_list pos:start="367:23" pos:end="367:72">(<argument pos:start="367:24" pos:end="367:33"><expr pos:start="367:24" pos:end="367:33"><name pos:start="367:24" pos:end="367:33"><name pos:start="367:24" pos:end="367:24">h</name><operator pos:start="367:25" pos:end="367:26">-&gt;</operator><name pos:start="367:27" pos:end="367:27">s</name><operator pos:start="367:28" pos:end="367:28">.</operator><name pos:start="367:29" pos:end="367:33">avctx</name></name></expr></argument>, <argument pos:start="367:36" pos:end="367:47"><expr pos:start="367:36" pos:end="367:47"><name pos:start="367:36" pos:end="367:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="367:50" pos:end="367:71"><expr pos:start="367:50" pos:end="367:71"><literal type="string" pos:start="367:50" pos:end="367:71">"reference overflow\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="369:17" pos:end="369:26">return <expr pos:start="369:24" pos:end="369:25"><operator pos:start="369:24" pos:end="369:24">-</operator><literal type="number" pos:start="369:25" pos:end="369:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="379:5" pos:end="383:5"><if pos:start="379:5" pos:end="383:5">if<condition pos:start="379:7" pos:end="379:30">(<expr pos:start="379:8" pos:end="379:29"><operator pos:start="379:8" pos:end="379:8">!</operator><name pos:start="379:9" pos:end="379:29">default_ref_list_done</name></expr>)</condition><block pos:start="379:31" pos:end="383:5">{<block_content pos:start="381:9" pos:end="381:33">

        <expr_stmt pos:start="381:9" pos:end="381:33"><expr pos:start="381:9" pos:end="381:32"><call pos:start="381:9" pos:end="381:32"><name pos:start="381:9" pos:end="381:29">fill_default_ref_list</name><argument_list pos:start="381:30" pos:end="381:32">(<argument pos:start="381:31" pos:end="381:31"><expr pos:start="381:31" pos:end="381:31"><name pos:start="381:31" pos:end="381:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="387:5" pos:end="389:18"><if pos:start="387:5" pos:end="389:18">if<condition pos:start="387:7" pos:end="387:45">(<expr pos:start="387:8" pos:end="387:44"><call pos:start="387:8" pos:end="387:40"><name pos:start="387:8" pos:end="387:37">decode_ref_pic_list_reordering</name><argument_list pos:start="387:38" pos:end="387:40">(<argument pos:start="387:39" pos:end="387:39"><expr pos:start="387:39" pos:end="387:39"><name pos:start="387:39" pos:end="387:39">h</name></expr></argument>)</argument_list></call> <operator pos:start="387:42" pos:end="387:42">&lt;</operator> <literal type="number" pos:start="387:44" pos:end="387:44">0</literal></expr>)</condition><block type="pseudo" pos:start="389:9" pos:end="389:18"><block_content pos:start="389:9" pos:end="389:18">

        <return pos:start="389:9" pos:end="389:18">return <expr pos:start="389:16" pos:end="389:17"><operator pos:start="389:16" pos:end="389:16">-</operator><literal type="number" pos:start="389:17" pos:end="389:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="393:5" pos:end="405:26"><if pos:start="393:5" pos:end="397:29">if<condition pos:start="393:7" pos:end="395:69">(   <expr pos:start="393:11" pos:end="395:67"><operator pos:start="393:11" pos:end="393:11">(</operator><name pos:start="393:12" pos:end="393:31"><name pos:start="393:12" pos:end="393:12">h</name><operator pos:start="393:13" pos:end="393:14">-&gt;</operator><name pos:start="393:15" pos:end="393:17">pps</name><operator pos:start="393:18" pos:end="393:18">.</operator><name pos:start="393:19" pos:end="393:31">weighted_pred</name></name>          <operator pos:start="393:42" pos:end="393:43">&amp;&amp;</operator> <operator pos:start="393:45" pos:end="393:45">(</operator><name pos:start="393:46" pos:end="393:58"><name pos:start="393:46" pos:end="393:46">h</name><operator pos:start="393:47" pos:end="393:48">-&gt;</operator><name pos:start="393:49" pos:end="393:58">slice_type</name></name> <operator pos:start="393:60" pos:end="393:61">==</operator> <name pos:start="393:63" pos:end="393:68">P_TYPE</name> <operator pos:start="393:70" pos:end="393:71">||</operator> <name pos:start="393:73" pos:end="393:85"><name pos:start="393:73" pos:end="393:73">h</name><operator pos:start="393:74" pos:end="393:75">-&gt;</operator><name pos:start="393:76" pos:end="393:85">slice_type</name></name> <operator pos:start="393:87" pos:end="393:88">==</operator> <name pos:start="393:90" pos:end="393:96">SP_TYPE</name> <operator pos:start="393:98" pos:end="393:98">)</operator><operator pos:start="393:99" pos:end="393:99">)</operator> 

       <operator pos:start="395:8" pos:end="395:9">||</operator> <operator pos:start="395:11" pos:end="395:11">(</operator><name pos:start="395:12" pos:end="395:37"><name pos:start="395:12" pos:end="395:12">h</name><operator pos:start="395:13" pos:end="395:14">-&gt;</operator><name pos:start="395:15" pos:end="395:17">pps</name><operator pos:start="395:18" pos:end="395:18">.</operator><name pos:start="395:19" pos:end="395:37">weighted_bipred_idc</name></name><operator pos:start="395:38" pos:end="395:39">==</operator><literal type="number" pos:start="395:40" pos:end="395:40">1</literal> <operator pos:start="395:42" pos:end="395:43">&amp;&amp;</operator> <name pos:start="395:45" pos:end="395:57"><name pos:start="395:45" pos:end="395:45">h</name><operator pos:start="395:46" pos:end="395:47">-&gt;</operator><name pos:start="395:48" pos:end="395:57">slice_type</name></name><operator pos:start="395:58" pos:end="395:59">==</operator><name pos:start="395:60" pos:end="395:65">B_TYPE</name> <operator pos:start="395:67" pos:end="395:67">)</operator></expr> )</condition><block type="pseudo" pos:start="397:9" pos:end="397:29"><block_content pos:start="397:9" pos:end="397:29">

        <expr_stmt pos:start="397:9" pos:end="397:29"><expr pos:start="397:9" pos:end="397:28"><call pos:start="397:9" pos:end="397:28"><name pos:start="397:9" pos:end="397:25">pred_weight_table</name><argument_list pos:start="397:26" pos:end="397:28">(<argument pos:start="397:27" pos:end="397:27"><expr pos:start="397:27" pos:end="397:27"><name pos:start="397:27" pos:end="397:27">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <if type="elseif" pos:start="399:5" pos:end="401:33">else if<condition pos:start="399:12" pos:end="399:67">(<expr pos:start="399:13" pos:end="399:66"><name pos:start="399:13" pos:end="399:38"><name pos:start="399:13" pos:end="399:13">h</name><operator pos:start="399:14" pos:end="399:15">-&gt;</operator><name pos:start="399:16" pos:end="399:18">pps</name><operator pos:start="399:19" pos:end="399:19">.</operator><name pos:start="399:20" pos:end="399:38">weighted_bipred_idc</name></name><operator pos:start="399:39" pos:end="399:40">==</operator><literal type="number" pos:start="399:41" pos:end="399:41">2</literal> <operator pos:start="399:43" pos:end="399:44">&amp;&amp;</operator> <name pos:start="399:46" pos:end="399:58"><name pos:start="399:46" pos:end="399:46">h</name><operator pos:start="399:47" pos:end="399:48">-&gt;</operator><name pos:start="399:49" pos:end="399:58">slice_type</name></name><operator pos:start="399:59" pos:end="399:60">==</operator><name pos:start="399:61" pos:end="399:66">B_TYPE</name></expr>)</condition><block type="pseudo" pos:start="401:9" pos:end="401:33"><block_content pos:start="401:9" pos:end="401:33">

        <expr_stmt pos:start="401:9" pos:end="401:33"><expr pos:start="401:9" pos:end="401:32"><call pos:start="401:9" pos:end="401:32"><name pos:start="401:9" pos:end="401:29">implicit_weight_table</name><argument_list pos:start="401:30" pos:end="401:32">(<argument pos:start="401:31" pos:end="401:31"><expr pos:start="401:31" pos:end="401:31"><name pos:start="401:31" pos:end="401:31">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="403:5" pos:end="405:26">else<block type="pseudo" pos:start="405:9" pos:end="405:26"><block_content pos:start="405:9" pos:end="405:26">

        <expr_stmt pos:start="405:9" pos:end="405:26"><expr pos:start="405:9" pos:end="405:25"><name pos:start="405:9" pos:end="405:21"><name pos:start="405:9" pos:end="405:9">h</name><operator pos:start="405:10" pos:end="405:11">-&gt;</operator><name pos:start="405:12" pos:end="405:21">use_weight</name></name> <operator pos:start="405:23" pos:end="405:23">=</operator> <literal type="number" pos:start="405:25" pos:end="405:25">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

    

    <if_stmt pos:start="409:5" pos:end="411:34"><if pos:start="409:5" pos:end="411:34">if<condition pos:start="409:7" pos:end="409:36">(<expr pos:start="409:8" pos:end="409:35"><name pos:start="409:8" pos:end="409:35"><name pos:start="409:8" pos:end="409:8">s</name><operator pos:start="409:9" pos:end="409:10">-&gt;</operator><name pos:start="409:11" pos:end="409:25">current_picture</name><operator pos:start="409:26" pos:end="409:26">.</operator><name pos:start="409:27" pos:end="409:35">reference</name></name></expr>)</condition><block type="pseudo" pos:start="411:9" pos:end="411:34"><block_content pos:start="411:9" pos:end="411:34">

        <expr_stmt pos:start="411:9" pos:end="411:34"><expr pos:start="411:9" pos:end="411:33"><call pos:start="411:9" pos:end="411:33"><name pos:start="411:9" pos:end="411:30">decode_ref_pic_marking</name><argument_list pos:start="411:31" pos:end="411:33">(<argument pos:start="411:32" pos:end="411:32"><expr pos:start="411:32" pos:end="411:32"><name pos:start="411:32" pos:end="411:32">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="415:5" pos:end="417:50"><if pos:start="415:5" pos:end="417:50">if<condition pos:start="415:7" pos:end="415:77">( <expr pos:start="415:9" pos:end="415:75"><name pos:start="415:9" pos:end="415:21"><name pos:start="415:9" pos:end="415:9">h</name><operator pos:start="415:10" pos:end="415:11">-&gt;</operator><name pos:start="415:12" pos:end="415:21">slice_type</name></name> <operator pos:start="415:23" pos:end="415:24">!=</operator> <name pos:start="415:26" pos:end="415:31">I_TYPE</name> <operator pos:start="415:33" pos:end="415:34">&amp;&amp;</operator> <name pos:start="415:36" pos:end="415:48"><name pos:start="415:36" pos:end="415:36">h</name><operator pos:start="415:37" pos:end="415:38">-&gt;</operator><name pos:start="415:39" pos:end="415:48">slice_type</name></name> <operator pos:start="415:50" pos:end="415:51">!=</operator> <name pos:start="415:53" pos:end="415:59">SI_TYPE</name> <operator pos:start="415:61" pos:end="415:62">&amp;&amp;</operator> <name pos:start="415:64" pos:end="415:75"><name pos:start="415:64" pos:end="415:64">h</name><operator pos:start="415:65" pos:end="415:66">-&gt;</operator><name pos:start="415:67" pos:end="415:69">pps</name><operator pos:start="415:70" pos:end="415:70">.</operator><name pos:start="415:71" pos:end="415:75">cabac</name></name></expr> )</condition><block type="pseudo" pos:start="417:9" pos:end="417:50"><block_content pos:start="417:9" pos:end="417:50">

        <expr_stmt pos:start="417:9" pos:end="417:50"><expr pos:start="417:9" pos:end="417:49"><name pos:start="417:9" pos:end="417:25"><name pos:start="417:9" pos:end="417:9">h</name><operator pos:start="417:10" pos:end="417:11">-&gt;</operator><name pos:start="417:12" pos:end="417:25">cabac_init_idc</name></name> <operator pos:start="417:27" pos:end="417:27">=</operator> <call pos:start="417:29" pos:end="417:49"><name pos:start="417:29" pos:end="417:41">get_ue_golomb</name><argument_list pos:start="417:42" pos:end="417:49">(<argument pos:start="417:43" pos:end="417:48"><expr pos:start="417:43" pos:end="417:48"><operator pos:start="417:43" pos:end="417:43">&amp;</operator><name pos:start="417:44" pos:end="417:48"><name pos:start="417:44" pos:end="417:44">s</name><operator pos:start="417:45" pos:end="417:46">-&gt;</operator><name pos:start="417:47" pos:end="417:48">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="421:5" pos:end="421:28"><expr pos:start="421:5" pos:end="421:27"><name pos:start="421:5" pos:end="421:23"><name pos:start="421:5" pos:end="421:5">h</name><operator pos:start="421:6" pos:end="421:7">-&gt;</operator><name pos:start="421:8" pos:end="421:23">last_qscale_diff</name></name> <operator pos:start="421:25" pos:end="421:25">=</operator> <literal type="number" pos:start="421:27" pos:end="421:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="423:5" pos:end="423:55"><expr pos:start="423:5" pos:end="423:54"><name pos:start="423:5" pos:end="423:13"><name pos:start="423:5" pos:end="423:5">s</name><operator pos:start="423:6" pos:end="423:7">-&gt;</operator><name pos:start="423:8" pos:end="423:13">qscale</name></name> <operator pos:start="423:15" pos:end="423:15">=</operator> <name pos:start="423:17" pos:end="423:30"><name pos:start="423:17" pos:end="423:17">h</name><operator pos:start="423:18" pos:end="423:19">-&gt;</operator><name pos:start="423:20" pos:end="423:22">pps</name><operator pos:start="423:23" pos:end="423:23">.</operator><name pos:start="423:24" pos:end="423:30">init_qp</name></name> <operator pos:start="423:32" pos:end="423:32">+</operator> <call pos:start="423:34" pos:end="423:54"><name pos:start="423:34" pos:end="423:46">get_se_golomb</name><argument_list pos:start="423:47" pos:end="423:54">(<argument pos:start="423:48" pos:end="423:53"><expr pos:start="423:48" pos:end="423:53"><operator pos:start="423:48" pos:end="423:48">&amp;</operator><name pos:start="423:49" pos:end="423:53"><name pos:start="423:49" pos:end="423:49">s</name><operator pos:start="423:50" pos:end="423:51">-&gt;</operator><name pos:start="423:52" pos:end="423:53">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="425:5" pos:end="431:5"><if pos:start="425:5" pos:end="431:5">if<condition pos:start="425:7" pos:end="425:35">(<expr pos:start="425:8" pos:end="425:34"><name pos:start="425:8" pos:end="425:16"><name pos:start="425:8" pos:end="425:8">s</name><operator pos:start="425:9" pos:end="425:10">-&gt;</operator><name pos:start="425:11" pos:end="425:16">qscale</name></name><operator pos:start="425:17" pos:end="425:17">&lt;</operator><literal type="number" pos:start="425:18" pos:end="425:18">0</literal> <operator pos:start="425:20" pos:end="425:21">||</operator> <name pos:start="425:23" pos:end="425:31"><name pos:start="425:23" pos:end="425:23">s</name><operator pos:start="425:24" pos:end="425:25">-&gt;</operator><name pos:start="425:26" pos:end="425:31">qscale</name></name><operator pos:start="425:32" pos:end="425:32">&gt;</operator><literal type="number" pos:start="425:33" pos:end="425:34">51</literal></expr>)</condition><block pos:start="425:36" pos:end="431:5">{<block_content pos:start="427:9" pos:end="429:18">

        <expr_stmt pos:start="427:9" pos:end="427:74"><expr pos:start="427:9" pos:end="427:73"><call pos:start="427:9" pos:end="427:73"><name pos:start="427:9" pos:end="427:14">av_log</name><argument_list pos:start="427:15" pos:end="427:73">(<argument pos:start="427:16" pos:end="427:23"><expr pos:start="427:16" pos:end="427:23"><name pos:start="427:16" pos:end="427:23"><name pos:start="427:16" pos:end="427:16">s</name><operator pos:start="427:17" pos:end="427:18">-&gt;</operator><name pos:start="427:19" pos:end="427:23">avctx</name></name></expr></argument>, <argument pos:start="427:26" pos:end="427:37"><expr pos:start="427:26" pos:end="427:37"><name pos:start="427:26" pos:end="427:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="427:40" pos:end="427:61"><expr pos:start="427:40" pos:end="427:61"><literal type="string" pos:start="427:40" pos:end="427:61">"QP %d out of range\n"</literal></expr></argument>, <argument pos:start="427:64" pos:end="427:72"><expr pos:start="427:64" pos:end="427:72"><name pos:start="427:64" pos:end="427:72"><name pos:start="427:64" pos:end="427:64">s</name><operator pos:start="427:65" pos:end="427:66">-&gt;</operator><name pos:start="427:67" pos:end="427:72">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="429:9" pos:end="429:18">return <expr pos:start="429:16" pos:end="429:17"><operator pos:start="429:16" pos:end="429:16">-</operator><literal type="number" pos:start="429:17" pos:end="429:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="433:5" pos:end="433:75"><expr pos:start="433:5" pos:end="433:74"><name pos:start="433:5" pos:end="433:16"><name pos:start="433:5" pos:end="433:5">h</name><operator pos:start="433:6" pos:end="433:7">-&gt;</operator><name pos:start="433:8" pos:end="433:16">chroma_qp</name></name> <operator pos:start="433:18" pos:end="433:18">=</operator> <call pos:start="433:20" pos:end="433:74"><name pos:start="433:20" pos:end="433:32">get_chroma_qp</name><argument_list pos:start="433:33" pos:end="433:74">(<argument pos:start="433:34" pos:end="433:62"><expr pos:start="433:34" pos:end="433:62"><name pos:start="433:34" pos:end="433:62"><name pos:start="433:34" pos:end="433:34">h</name><operator pos:start="433:35" pos:end="433:36">-&gt;</operator><name pos:start="433:37" pos:end="433:39">pps</name><operator pos:start="433:40" pos:end="433:40">.</operator><name pos:start="433:41" pos:end="433:62">chroma_qp_index_offset</name></name></expr></argument>, <argument pos:start="433:65" pos:end="433:73"><expr pos:start="433:65" pos:end="433:73"><name pos:start="433:65" pos:end="433:73"><name pos:start="433:65" pos:end="433:65">s</name><operator pos:start="433:66" pos:end="433:67">-&gt;</operator><name pos:start="433:68" pos:end="433:73">qscale</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="line" pos:start="435:5" pos:end="435:33">//FIXME qscale / qp ... stuff</comment>

    <if_stmt pos:start="437:5" pos:end="441:5"><if pos:start="437:5" pos:end="441:5">if<condition pos:start="437:7" pos:end="437:32">(<expr pos:start="437:8" pos:end="437:31"><name pos:start="437:8" pos:end="437:20"><name pos:start="437:8" pos:end="437:8">h</name><operator pos:start="437:9" pos:end="437:10">-&gt;</operator><name pos:start="437:11" pos:end="437:20">slice_type</name></name> <operator pos:start="437:22" pos:end="437:23">==</operator> <name pos:start="437:25" pos:end="437:31">SP_TYPE</name></expr>)</condition><block pos:start="437:33" pos:end="441:5">{<block_content pos:start="439:9" pos:end="439:26">

        <expr_stmt pos:start="439:9" pos:end="439:26"><expr pos:start="439:9" pos:end="439:25"><call pos:start="439:9" pos:end="439:25"><name pos:start="439:9" pos:end="439:17">get_bits1</name><argument_list pos:start="439:18" pos:end="439:25">(<argument pos:start="439:19" pos:end="439:24"><expr pos:start="439:19" pos:end="439:24"><operator pos:start="439:19" pos:end="439:19">&amp;</operator><name pos:start="439:20" pos:end="439:24"><name pos:start="439:20" pos:end="439:20">s</name><operator pos:start="439:21" pos:end="439:22">-&gt;</operator><name pos:start="439:23" pos:end="439:24">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="439:28" pos:end="439:51">/* sp_for_switch_flag */</comment>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="443:5" pos:end="447:5"><if pos:start="443:5" pos:end="447:5">if<condition pos:start="443:7" pos:end="443:58">(<expr pos:start="443:8" pos:end="443:57"><name pos:start="443:8" pos:end="443:20"><name pos:start="443:8" pos:end="443:8">h</name><operator pos:start="443:9" pos:end="443:10">-&gt;</operator><name pos:start="443:11" pos:end="443:20">slice_type</name></name><operator pos:start="443:21" pos:end="443:22">==</operator><name pos:start="443:23" pos:end="443:29">SP_TYPE</name> <operator pos:start="443:31" pos:end="443:32">||</operator> <name pos:start="443:34" pos:end="443:46"><name pos:start="443:34" pos:end="443:34">h</name><operator pos:start="443:35" pos:end="443:36">-&gt;</operator><name pos:start="443:37" pos:end="443:46">slice_type</name></name> <operator pos:start="443:48" pos:end="443:49">==</operator> <name pos:start="443:51" pos:end="443:57">SI_TYPE</name></expr>)</condition><block pos:start="443:59" pos:end="447:5">{<block_content pos:start="445:9" pos:end="445:30">

        <expr_stmt pos:start="445:9" pos:end="445:30"><expr pos:start="445:9" pos:end="445:29"><call pos:start="445:9" pos:end="445:29"><name pos:start="445:9" pos:end="445:21">get_se_golomb</name><argument_list pos:start="445:22" pos:end="445:29">(<argument pos:start="445:23" pos:end="445:28"><expr pos:start="445:23" pos:end="445:28"><operator pos:start="445:23" pos:end="445:23">&amp;</operator><name pos:start="445:24" pos:end="445:28"><name pos:start="445:24" pos:end="445:24">s</name><operator pos:start="445:25" pos:end="445:26">-&gt;</operator><name pos:start="445:27" pos:end="445:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="445:32" pos:end="445:51">/* slice_qs_delta */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="451:5" pos:end="451:29"><expr pos:start="451:5" pos:end="451:28"><name pos:start="451:5" pos:end="451:24"><name pos:start="451:5" pos:end="451:5">h</name><operator pos:start="451:6" pos:end="451:7">-&gt;</operator><name pos:start="451:8" pos:end="451:24">deblocking_filter</name></name> <operator pos:start="451:26" pos:end="451:26">=</operator> <literal type="number" pos:start="451:28" pos:end="451:28">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="453:5" pos:end="453:33"><expr pos:start="453:5" pos:end="453:32"><name pos:start="453:5" pos:end="453:28"><name pos:start="453:5" pos:end="453:5">h</name><operator pos:start="453:6" pos:end="453:7">-&gt;</operator><name pos:start="453:8" pos:end="453:28">slice_alpha_c0_offset</name></name> <operator pos:start="453:30" pos:end="453:30">=</operator> <literal type="number" pos:start="453:32" pos:end="453:32">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="455:5" pos:end="455:29"><expr pos:start="455:5" pos:end="455:28"><name pos:start="455:5" pos:end="455:24"><name pos:start="455:5" pos:end="455:5">h</name><operator pos:start="455:6" pos:end="455:7">-&gt;</operator><name pos:start="455:8" pos:end="455:24">slice_beta_offset</name></name> <operator pos:start="455:26" pos:end="455:26">=</operator> <literal type="number" pos:start="455:28" pos:end="455:28">0</literal></expr>;</expr_stmt>

    <if_stmt pos:start="457:5" pos:end="475:5"><if pos:start="457:5" pos:end="475:5">if<condition pos:start="457:7" pos:end="457:53">( <expr pos:start="457:9" pos:end="457:51"><name pos:start="457:9" pos:end="457:51"><name pos:start="457:9" pos:end="457:9">h</name><operator pos:start="457:10" pos:end="457:11">-&gt;</operator><name pos:start="457:12" pos:end="457:14">pps</name><operator pos:start="457:15" pos:end="457:15">.</operator><name pos:start="457:16" pos:end="457:51">deblocking_filter_parameters_present</name></name></expr> )</condition> <block pos:start="457:55" pos:end="475:5">{<block_content pos:start="459:9" pos:end="473:9">

        <expr_stmt pos:start="459:9" pos:end="459:52"><expr pos:start="459:9" pos:end="459:51"><name pos:start="459:9" pos:end="459:28"><name pos:start="459:9" pos:end="459:9">h</name><operator pos:start="459:10" pos:end="459:11">-&gt;</operator><name pos:start="459:12" pos:end="459:28">deblocking_filter</name></name><operator pos:start="459:29" pos:end="459:29">=</operator> <call pos:start="459:31" pos:end="459:51"><name pos:start="459:31" pos:end="459:43">get_ue_golomb</name><argument_list pos:start="459:44" pos:end="459:51">(<argument pos:start="459:45" pos:end="459:50"><expr pos:start="459:45" pos:end="459:50"><operator pos:start="459:45" pos:end="459:45">&amp;</operator><name pos:start="459:46" pos:end="459:50"><name pos:start="459:46" pos:end="459:46">s</name><operator pos:start="459:47" pos:end="459:48">-&gt;</operator><name pos:start="459:49" pos:end="459:50">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="461:9" pos:end="463:37"><if pos:start="461:9" pos:end="463:37">if<condition pos:start="461:11" pos:end="461:36">(<expr pos:start="461:12" pos:end="461:35"><name pos:start="461:12" pos:end="461:31"><name pos:start="461:12" pos:end="461:12">h</name><operator pos:start="461:13" pos:end="461:14">-&gt;</operator><name pos:start="461:15" pos:end="461:31">deblocking_filter</name></name> <operator pos:start="461:33" pos:end="461:33">&lt;</operator> <literal type="number" pos:start="461:35" pos:end="461:35">2</literal></expr>)</condition><block type="pseudo" pos:start="463:13" pos:end="463:37"><block_content pos:start="463:13" pos:end="463:37"> 

            <expr_stmt pos:start="463:13" pos:end="463:37"><expr pos:start="463:13" pos:end="463:36"><name pos:start="463:13" pos:end="463:32"><name pos:start="463:13" pos:end="463:13">h</name><operator pos:start="463:14" pos:end="463:15">-&gt;</operator><name pos:start="463:16" pos:end="463:32">deblocking_filter</name></name><operator pos:start="463:33" pos:end="463:34">^=</operator> <literal type="number" pos:start="463:36" pos:end="463:36">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="463:39" pos:end="463:46">// 1&lt;-&gt;0</comment>



        <if_stmt pos:start="467:9" pos:end="473:9"><if pos:start="467:9" pos:end="473:9">if<condition pos:start="467:11" pos:end="467:34">( <expr pos:start="467:13" pos:end="467:32"><name pos:start="467:13" pos:end="467:32"><name pos:start="467:13" pos:end="467:13">h</name><operator pos:start="467:14" pos:end="467:15">-&gt;</operator><name pos:start="467:16" pos:end="467:32">deblocking_filter</name></name></expr> )</condition> <block pos:start="467:36" pos:end="473:9">{<block_content pos:start="469:13" pos:end="471:62">

            <expr_stmt pos:start="469:13" pos:end="469:66"><expr pos:start="469:13" pos:end="469:65"><name pos:start="469:13" pos:end="469:36"><name pos:start="469:13" pos:end="469:13">h</name><operator pos:start="469:14" pos:end="469:15">-&gt;</operator><name pos:start="469:16" pos:end="469:36">slice_alpha_c0_offset</name></name> <operator pos:start="469:38" pos:end="469:38">=</operator> <call pos:start="469:40" pos:end="469:60"><name pos:start="469:40" pos:end="469:52">get_se_golomb</name><argument_list pos:start="469:53" pos:end="469:60">(<argument pos:start="469:54" pos:end="469:59"><expr pos:start="469:54" pos:end="469:59"><operator pos:start="469:54" pos:end="469:54">&amp;</operator><name pos:start="469:55" pos:end="469:59"><name pos:start="469:55" pos:end="469:55">s</name><operator pos:start="469:56" pos:end="469:57">-&gt;</operator><name pos:start="469:58" pos:end="469:59">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="469:62" pos:end="469:63">&lt;&lt;</operator> <literal type="number" pos:start="469:65" pos:end="469:65">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:62"><expr pos:start="471:13" pos:end="471:61"><name pos:start="471:13" pos:end="471:32"><name pos:start="471:13" pos:end="471:13">h</name><operator pos:start="471:14" pos:end="471:15">-&gt;</operator><name pos:start="471:16" pos:end="471:32">slice_beta_offset</name></name> <operator pos:start="471:34" pos:end="471:34">=</operator> <call pos:start="471:36" pos:end="471:56"><name pos:start="471:36" pos:end="471:48">get_se_golomb</name><argument_list pos:start="471:49" pos:end="471:56">(<argument pos:start="471:50" pos:end="471:55"><expr pos:start="471:50" pos:end="471:55"><operator pos:start="471:50" pos:end="471:50">&amp;</operator><name pos:start="471:51" pos:end="471:55"><name pos:start="471:51" pos:end="471:51">s</name><operator pos:start="471:52" pos:end="471:53">-&gt;</operator><name pos:start="471:54" pos:end="471:55">gb</name></name></expr></argument>)</argument_list></call> <operator pos:start="471:58" pos:end="471:59">&lt;&lt;</operator> <literal type="number" pos:start="471:61" pos:end="471:61">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="477:5" pos:end="496:0"><if pos:start="477:5" pos:end="496:0">if<condition pos:start="477:7" pos:end="483:81">(   <expr pos:start="477:11" pos:end="483:80"><name pos:start="477:11" pos:end="477:36"><name pos:start="477:11" pos:end="477:11">s</name><operator pos:start="477:12" pos:end="477:13">-&gt;</operator><name pos:start="477:14" pos:end="477:18">avctx</name><operator pos:start="477:19" pos:end="477:20">-&gt;</operator><name pos:start="477:21" pos:end="477:36">skip_loop_filter</name></name> <operator pos:start="477:38" pos:end="477:39">&gt;=</operator> <name pos:start="477:41" pos:end="477:53">AVDISCARD_ALL</name>

       <operator pos:start="479:8" pos:end="479:9">||</operator><operator pos:start="479:10" pos:end="479:10">(</operator><name pos:start="479:11" pos:end="479:36"><name pos:start="479:11" pos:end="479:11">s</name><operator pos:start="479:12" pos:end="479:13">-&gt;</operator><name pos:start="479:14" pos:end="479:18">avctx</name><operator pos:start="479:19" pos:end="479:20">-&gt;</operator><name pos:start="479:21" pos:end="479:36">skip_loop_filter</name></name> <operator pos:start="479:38" pos:end="479:39">&gt;=</operator> <name pos:start="479:41" pos:end="479:56">AVDISCARD_NONKEY</name> <operator pos:start="479:58" pos:end="479:59">&amp;&amp;</operator> <name pos:start="479:61" pos:end="479:73"><name pos:start="479:61" pos:end="479:61">h</name><operator pos:start="479:62" pos:end="479:63">-&gt;</operator><name pos:start="479:64" pos:end="479:73">slice_type</name></name> <operator pos:start="479:75" pos:end="479:76">!=</operator> <name pos:start="479:78" pos:end="479:83">I_TYPE</name><operator pos:start="479:84" pos:end="479:84">)</operator>

       <operator pos:start="481:8" pos:end="481:9">||</operator><operator pos:start="481:10" pos:end="481:10">(</operator><name pos:start="481:11" pos:end="481:36"><name pos:start="481:11" pos:end="481:11">s</name><operator pos:start="481:12" pos:end="481:13">-&gt;</operator><name pos:start="481:14" pos:end="481:18">avctx</name><operator pos:start="481:19" pos:end="481:20">-&gt;</operator><name pos:start="481:21" pos:end="481:36">skip_loop_filter</name></name> <operator pos:start="481:38" pos:end="481:39">&gt;=</operator> <name pos:start="481:41" pos:end="481:55">AVDISCARD_BIDIR</name>  <operator pos:start="481:58" pos:end="481:59">&amp;&amp;</operator> <name pos:start="481:61" pos:end="481:73"><name pos:start="481:61" pos:end="481:61">h</name><operator pos:start="481:62" pos:end="481:63">-&gt;</operator><name pos:start="481:64" pos:end="481:73">slice_type</name></name> <operator pos:start="481:75" pos:end="481:76">==</operator> <name pos:start="481:78" pos:end="481:83">B_TYPE</name><operator pos:start="481:84" pos:end="481:84">)</operator>

       <operator pos:start="483:8" pos:end="483:9">||</operator><operator pos:start="483:10" pos:end="483:10">(</operator><name pos:start="483:11" pos:end="483:36"><name pos:start="483:11" pos:end="483:11">s</name><operator pos:start="483:12" pos:end="483:13">-&gt;</operator><name pos:start="483:14" pos:end="483:18">avctx</name><operator pos:start="483:19" pos:end="483:20">-&gt;</operator><name pos:start="483:21" pos:end="483:36">skip_loop_filter</name></name> <operator pos:start="483:38" pos:end="483:39">&gt;=</operator> <name pos:start="483:41" pos:end="483:56">AVDISCARD_NONREF</name> <operator pos:start="483:58" pos:end="483:59">&amp;&amp;</operator> <name pos:start="483:61" pos:end="483:74"><name pos:start="483:61" pos:end="483:61">h</name><operator pos:start="483:62" pos:end="483:63">-&gt;</operator><name pos:start="483:64" pos:end="483:74">nal_ref_idc</name></name> <operator pos:start="483:76" pos:end="483:77">==</operator> <literal type="number" pos:start="483:79" pos:end="483:79">0</literal><operator pos:start="483:80" pos:end="483:80">)</operator></expr>)</condition><block type="pseudo" pos:start="485:9" pos:end="496:0"><block_content pos:start="485:9" pos:end="496:0">

        <expr_stmt pos:start="485:9" pos:end="496:0"><expr pos:start="485:9" pos:end="485:31"><name pos:start="485:9" pos:end="485:28"><name pos:start="485:9" pos:end="485:9">h</name><operator pos:start="485:10" pos:end="485:11">-&gt;</operator><name pos:start="485:12" pos:end="485:28">deblocking_filter</name></name><operator pos:start="485:29" pos:end="485:29">=</operator> <literal type="number" pos:start="485:31" pos:end="485:31">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>



<cpp:if pos:start="489:1" pos:end="489:5">#<cpp:directive pos:start="489:2" pos:end="489:3">if</cpp:directive> <expr pos:start="489:5" pos:end="489:5"><literal type="number" pos:start="489:5" pos:end="489:5">0</literal></expr></cpp:if> <comment type="line" pos:start="489:7" pos:end="489:11">//FMO</comment>

    if( h-&gt;pps.num_slice_groups &gt; 1  &amp;&amp; h-&gt;pps.mb_slice_group_map_type &gt;= 3 &amp;&amp; h-&gt;pps.mb_slice_group_map_type &lt;= 5)

        slice_group_change_cycle= get_bits(&amp;s-&gt;gb, ?);

<cpp:endif pos:start="495:1" pos:end="495:6">#<cpp:directive pos:start="495:2" pos:end="495:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="499:5" pos:end="499:19"><expr pos:start="499:5" pos:end="499:18"><name pos:start="499:5" pos:end="499:16"><name pos:start="499:5" pos:end="499:5">h</name><operator pos:start="499:6" pos:end="499:7">-&gt;</operator><name pos:start="499:8" pos:end="499:16">slice_num</name></name><operator pos:start="499:17" pos:end="499:18">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="503:5" pos:end="531:5"><if pos:start="503:5" pos:end="531:5">if<condition pos:start="503:7" pos:end="503:42">(<expr pos:start="503:8" pos:end="503:41"><name pos:start="503:8" pos:end="503:22"><name pos:start="503:8" pos:end="503:8">s</name><operator pos:start="503:9" pos:end="503:10">-&gt;</operator><name pos:start="503:11" pos:end="503:15">avctx</name><operator pos:start="503:16" pos:end="503:17">-&gt;</operator><name pos:start="503:18" pos:end="503:22">debug</name></name><operator pos:start="503:23" pos:end="503:23">&amp;</operator><name pos:start="503:24" pos:end="503:41">FF_DEBUG_PICT_INFO</name></expr>)</condition><block pos:start="503:43" pos:end="531:5">{<block_content pos:start="505:9" pos:end="529:17">

        <expr_stmt pos:start="505:9" pos:end="529:17"><expr pos:start="505:9" pos:end="529:16"><call pos:start="505:9" pos:end="529:16"><name pos:start="505:9" pos:end="505:14">av_log</name><argument_list pos:start="505:15" pos:end="529:16">(<argument pos:start="505:16" pos:end="505:25"><expr pos:start="505:16" pos:end="505:25"><name pos:start="505:16" pos:end="505:25"><name pos:start="505:16" pos:end="505:16">h</name><operator pos:start="505:17" pos:end="505:18">-&gt;</operator><name pos:start="505:19" pos:end="505:19">s</name><operator pos:start="505:20" pos:end="505:20">.</operator><name pos:start="505:21" pos:end="505:25">avctx</name></name></expr></argument>, <argument pos:start="505:28" pos:end="505:39"><expr pos:start="505:28" pos:end="505:39"><name pos:start="505:28" pos:end="505:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="505:42" pos:end="505:133"><expr pos:start="505:42" pos:end="505:133"><literal type="string" pos:start="505:42" pos:end="505:133">"slice:%d %s mb:%d %c pps:%d frame:%d poc:%d/%d ref:%d/%d qp:%d loop:%d:%d:%d weight:%d%s\n"</literal></expr></argument>, 

               <argument pos:start="507:16" pos:end="507:27"><expr pos:start="507:16" pos:end="507:27"><name pos:start="507:16" pos:end="507:27"><name pos:start="507:16" pos:end="507:16">h</name><operator pos:start="507:17" pos:end="507:18">-&gt;</operator><name pos:start="507:19" pos:end="507:27">slice_num</name></name></expr></argument>,

               <argument pos:start="509:16" pos:end="509:106"><expr pos:start="509:16" pos:end="509:106"><operator pos:start="509:16" pos:end="509:16">(</operator><ternary pos:start="509:17" pos:end="509:105"><condition pos:start="509:17" pos:end="509:50"><expr pos:start="509:17" pos:end="509:48"><name pos:start="509:17" pos:end="509:36"><name pos:start="509:17" pos:end="509:17">s</name><operator pos:start="509:18" pos:end="509:19">-&gt;</operator><name pos:start="509:20" pos:end="509:36">picture_structure</name></name><operator pos:start="509:37" pos:end="509:38">==</operator><name pos:start="509:39" pos:end="509:48">PICT_FRAME</name></expr> ?</condition><then pos:start="509:52" pos:end="509:54"> <expr pos:start="509:52" pos:end="509:54"><literal type="string" pos:start="509:52" pos:end="509:54">"F"</literal></expr> </then><else pos:start="509:56" pos:end="509:105">: <expr pos:start="509:58" pos:end="509:105"><ternary pos:start="509:58" pos:end="509:105"><condition pos:start="509:58" pos:end="509:95"><expr pos:start="509:58" pos:end="509:93"><name pos:start="509:58" pos:end="509:77"><name pos:start="509:58" pos:end="509:58">s</name><operator pos:start="509:59" pos:end="509:60">-&gt;</operator><name pos:start="509:61" pos:end="509:77">picture_structure</name></name><operator pos:start="509:78" pos:end="509:79">==</operator><name pos:start="509:80" pos:end="509:93">PICT_TOP_FIELD</name></expr> ?</condition><then pos:start="509:97" pos:end="509:99"> <expr pos:start="509:97" pos:end="509:99"><literal type="string" pos:start="509:97" pos:end="509:99">"T"</literal></expr> </then><else pos:start="509:101" pos:end="509:105">: <expr pos:start="509:103" pos:end="509:105"><literal type="string" pos:start="509:103" pos:end="509:105">"B"</literal></expr></else></ternary></expr></else></ternary><operator pos:start="509:106" pos:end="509:106">)</operator></expr></argument>,

               <argument pos:start="511:16" pos:end="511:32"><expr pos:start="511:16" pos:end="511:32"><name pos:start="511:16" pos:end="511:32">first_mb_in_slice</name></expr></argument>, 

               <argument pos:start="513:16" pos:end="513:51"><expr pos:start="513:16" pos:end="513:51"><call pos:start="513:16" pos:end="513:51"><name pos:start="513:16" pos:end="513:36">av_get_pict_type_char</name><argument_list pos:start="513:37" pos:end="513:51">(<argument pos:start="513:38" pos:end="513:50"><expr pos:start="513:38" pos:end="513:50"><name pos:start="513:38" pos:end="513:50"><name pos:start="513:38" pos:end="513:38">h</name><operator pos:start="513:39" pos:end="513:40">-&gt;</operator><name pos:start="513:41" pos:end="513:50">slice_type</name></name></expr></argument>)</argument_list></call></expr></argument>,

               <argument pos:start="515:16" pos:end="515:21"><expr pos:start="515:16" pos:end="515:21"><name pos:start="515:16" pos:end="515:21">pps_id</name></expr></argument>, <argument pos:start="515:24" pos:end="515:35"><expr pos:start="515:24" pos:end="515:35"><name pos:start="515:24" pos:end="515:35"><name pos:start="515:24" pos:end="515:24">h</name><operator pos:start="515:25" pos:end="515:26">-&gt;</operator><name pos:start="515:27" pos:end="515:35">frame_num</name></name></expr></argument>,

               <argument pos:start="517:16" pos:end="517:51"><expr pos:start="517:16" pos:end="517:51"><name pos:start="517:16" pos:end="517:51"><name pos:start="517:16" pos:end="517:16">s</name><operator pos:start="517:17" pos:end="517:18">-&gt;</operator><name pos:start="517:19" pos:end="517:37">current_picture_ptr</name><operator pos:start="517:38" pos:end="517:39">-&gt;</operator><name pos:start="517:40" pos:end="517:48">field_poc</name><index pos:start="517:49" pos:end="517:51">[<expr pos:start="517:50" pos:end="517:50"><literal type="number" pos:start="517:50" pos:end="517:50">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="517:54" pos:end="517:89"><expr pos:start="517:54" pos:end="517:89"><name pos:start="517:54" pos:end="517:89"><name pos:start="517:54" pos:end="517:54">s</name><operator pos:start="517:55" pos:end="517:56">-&gt;</operator><name pos:start="517:57" pos:end="517:75">current_picture_ptr</name><operator pos:start="517:76" pos:end="517:77">-&gt;</operator><name pos:start="517:78" pos:end="517:86">field_poc</name><index pos:start="517:87" pos:end="517:89">[<expr pos:start="517:88" pos:end="517:88"><literal type="number" pos:start="517:88" pos:end="517:88">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="519:16" pos:end="519:30"><expr pos:start="519:16" pos:end="519:30"><name pos:start="519:16" pos:end="519:30"><name pos:start="519:16" pos:end="519:16">h</name><operator pos:start="519:17" pos:end="519:18">-&gt;</operator><name pos:start="519:19" pos:end="519:27">ref_count</name><index pos:start="519:28" pos:end="519:30">[<expr pos:start="519:29" pos:end="519:29"><literal type="number" pos:start="519:29" pos:end="519:29">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="519:33" pos:end="519:47"><expr pos:start="519:33" pos:end="519:47"><name pos:start="519:33" pos:end="519:47"><name pos:start="519:33" pos:end="519:33">h</name><operator pos:start="519:34" pos:end="519:35">-&gt;</operator><name pos:start="519:36" pos:end="519:44">ref_count</name><index pos:start="519:45" pos:end="519:47">[<expr pos:start="519:46" pos:end="519:46"><literal type="number" pos:start="519:46" pos:end="519:46">1</literal></expr>]</index></name></expr></argument>,

               <argument pos:start="521:16" pos:end="521:24"><expr pos:start="521:16" pos:end="521:24"><name pos:start="521:16" pos:end="521:24"><name pos:start="521:16" pos:end="521:16">s</name><operator pos:start="521:17" pos:end="521:18">-&gt;</operator><name pos:start="521:19" pos:end="521:24">qscale</name></name></expr></argument>,

               <argument pos:start="523:16" pos:end="523:35"><expr pos:start="523:16" pos:end="523:35"><name pos:start="523:16" pos:end="523:35"><name pos:start="523:16" pos:end="523:16">h</name><operator pos:start="523:17" pos:end="523:18">-&gt;</operator><name pos:start="523:19" pos:end="523:35">deblocking_filter</name></name></expr></argument>, <argument pos:start="523:38" pos:end="523:63"><expr pos:start="523:38" pos:end="523:63"><name pos:start="523:38" pos:end="523:61"><name pos:start="523:38" pos:end="523:38">h</name><operator pos:start="523:39" pos:end="523:40">-&gt;</operator><name pos:start="523:41" pos:end="523:61">slice_alpha_c0_offset</name></name><operator pos:start="523:62" pos:end="523:62">/</operator><literal type="number" pos:start="523:63" pos:end="523:63">2</literal></expr></argument>, <argument pos:start="523:66" pos:end="523:87"><expr pos:start="523:66" pos:end="523:87"><name pos:start="523:66" pos:end="523:85"><name pos:start="523:66" pos:end="523:66">h</name><operator pos:start="523:67" pos:end="523:68">-&gt;</operator><name pos:start="523:69" pos:end="523:85">slice_beta_offset</name></name><operator pos:start="523:86" pos:end="523:86">/</operator><literal type="number" pos:start="523:87" pos:end="523:87">2</literal></expr></argument>,

               <argument pos:start="525:16" pos:end="525:28"><expr pos:start="525:16" pos:end="525:28"><name pos:start="525:16" pos:end="525:28"><name pos:start="525:16" pos:end="525:16">h</name><operator pos:start="525:17" pos:end="525:18">-&gt;</operator><name pos:start="525:19" pos:end="525:28">use_weight</name></name></expr></argument>,

               <argument pos:start="527:16" pos:end="527:66"><expr pos:start="527:16" pos:end="527:66"><ternary pos:start="527:16" pos:end="527:66"><condition pos:start="527:16" pos:end="527:57"><expr pos:start="527:16" pos:end="527:55"><name pos:start="527:16" pos:end="527:28"><name pos:start="527:16" pos:end="527:16">h</name><operator pos:start="527:17" pos:end="527:18">-&gt;</operator><name pos:start="527:19" pos:end="527:28">use_weight</name></name><operator pos:start="527:29" pos:end="527:30">==</operator><literal type="number" pos:start="527:31" pos:end="527:31">1</literal> <operator pos:start="527:33" pos:end="527:34">&amp;&amp;</operator> <name pos:start="527:36" pos:end="527:55"><name pos:start="527:36" pos:end="527:36">h</name><operator pos:start="527:37" pos:end="527:38">-&gt;</operator><name pos:start="527:39" pos:end="527:55">use_weight_chroma</name></name></expr> ?</condition><then pos:start="527:59" pos:end="527:61"> <expr pos:start="527:59" pos:end="527:61"><literal type="string" pos:start="527:59" pos:end="527:61">"c"</literal></expr> </then><else pos:start="527:63" pos:end="527:66">: <expr pos:start="527:65" pos:end="527:66"><literal type="string" pos:start="527:65" pos:end="527:66">""</literal></expr></else></ternary></expr></argument>

               )</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="535:5" pos:end="535:13">return <expr pos:start="535:12" pos:end="535:12"><literal type="number" pos:start="535:12" pos:end="535:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
