<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/313.c" pos:tabs="8"><function pos:start="1:1" pos:end="29:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">bdrv_aio_cancel</name><parameter_list pos:start="1:21" pos:end="1:37">(<parameter pos:start="1:22" pos:end="1:36"><decl pos:start="1:22" pos:end="1:36"><type pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:31">BlockAIOCB</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">acb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="29:1">{<block_content pos:start="5:5" pos:end="27:24">

    <expr_stmt pos:start="5:5" pos:end="5:22"><expr pos:start="5:5" pos:end="5:21"><call pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:16">qemu_aio_ref</name><argument_list pos:start="5:17" pos:end="5:21">(<argument pos:start="5:18" pos:end="5:20"><expr pos:start="5:18" pos:end="5:20"><name pos:start="5:18" pos:end="5:20">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:31"><expr pos:start="7:5" pos:end="7:30"><call pos:start="7:5" pos:end="7:30"><name pos:start="7:5" pos:end="7:25">bdrv_aio_cancel_async</name><argument_list pos:start="7:26" pos:end="7:30">(<argument pos:start="7:27" pos:end="7:29"><expr pos:start="7:27" pos:end="7:29"><name pos:start="7:27" pos:end="7:29">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <while pos:start="9:5" pos:end="25:5">while <condition pos:start="9:11" pos:end="9:27">(<expr pos:start="9:12" pos:end="9:26"><name pos:start="9:12" pos:end="9:22"><name pos:start="9:12" pos:end="9:14">acb</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:22">refcnt</name></name> <operator pos:start="9:24" pos:end="9:24">&gt;</operator> <literal type="number" pos:start="9:26" pos:end="9:26">1</literal></expr>)</condition> <block pos:start="9:29" pos:end="25:5">{<block_content pos:start="11:9" pos:end="23:9">

        <if_stmt pos:start="11:9" pos:end="23:9"><if pos:start="11:9" pos:end="15:9">if <condition pos:start="11:12" pos:end="11:45">(<expr pos:start="11:13" pos:end="11:44"><name pos:start="11:13" pos:end="11:44"><name pos:start="11:13" pos:end="11:15">acb</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:27">aiocb_info</name><operator pos:start="11:28" pos:end="11:29">-&gt;</operator><name pos:start="11:30" pos:end="11:44">get_aio_context</name></name></expr>)</condition> <block pos:start="11:47" pos:end="15:9">{<block_content pos:start="13:13" pos:end="13:66">

            <expr_stmt pos:start="13:13" pos:end="13:66"><expr pos:start="13:13" pos:end="13:65"><call pos:start="13:13" pos:end="13:65"><name pos:start="13:13" pos:end="13:20">aio_poll</name><argument_list pos:start="13:21" pos:end="13:65">(<argument pos:start="13:22" pos:end="13:58"><expr pos:start="13:22" pos:end="13:58"><call pos:start="13:22" pos:end="13:58"><name pos:start="13:22" pos:end="13:53"><name pos:start="13:22" pos:end="13:24">acb</name><operator pos:start="13:25" pos:end="13:26">-&gt;</operator><name pos:start="13:27" pos:end="13:36">aiocb_info</name><operator pos:start="13:37" pos:end="13:38">-&gt;</operator><name pos:start="13:39" pos:end="13:53">get_aio_context</name></name><argument_list pos:start="13:54" pos:end="13:58">(<argument pos:start="13:55" pos:end="13:57"><expr pos:start="13:55" pos:end="13:57"><name pos:start="13:55" pos:end="13:57">acb</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:61" pos:end="13:64"><expr pos:start="13:61" pos:end="13:64"><name pos:start="13:61" pos:end="13:64">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="15:11" pos:end="19:9">else if <condition pos:start="15:19" pos:end="15:27">(<expr pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:26"><name pos:start="15:20" pos:end="15:22">acb</name><operator pos:start="15:23" pos:end="15:24">-&gt;</operator><name pos:start="15:25" pos:end="15:26">bs</name></name></expr>)</condition> <block pos:start="15:29" pos:end="19:9">{<block_content pos:start="17:13" pos:end="17:58">

            <expr_stmt pos:start="17:13" pos:end="17:58"><expr pos:start="17:13" pos:end="17:57"><call pos:start="17:13" pos:end="17:57"><name pos:start="17:13" pos:end="17:20">aio_poll</name><argument_list pos:start="17:21" pos:end="17:57">(<argument pos:start="17:22" pos:end="17:50"><expr pos:start="17:22" pos:end="17:50"><call pos:start="17:22" pos:end="17:50"><name pos:start="17:22" pos:end="17:41">bdrv_get_aio_context</name><argument_list pos:start="17:42" pos:end="17:50">(<argument pos:start="17:43" pos:end="17:49"><expr pos:start="17:43" pos:end="17:49"><name pos:start="17:43" pos:end="17:49"><name pos:start="17:43" pos:end="17:45">acb</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:49">bs</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="17:53" pos:end="17:56"><expr pos:start="17:53" pos:end="17:56"><name pos:start="17:53" pos:end="17:56">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="19:11" pos:end="23:9">else <block pos:start="19:16" pos:end="23:9">{<block_content pos:start="21:13" pos:end="21:20">

            <expr_stmt pos:start="21:13" pos:end="21:20"><expr pos:start="21:13" pos:end="21:19"><call pos:start="21:13" pos:end="21:19"><name pos:start="21:13" pos:end="21:17">abort</name><argument_list pos:start="21:18" pos:end="21:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></while>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><call pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:18">qemu_aio_unref</name><argument_list pos:start="27:19" pos:end="27:23">(<argument pos:start="27:20" pos:end="27:22"><expr pos:start="27:20" pos:end="27:22"><name pos:start="27:20" pos:end="27:22">acb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
