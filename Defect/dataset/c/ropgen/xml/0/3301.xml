<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3301.c" pos:tabs="8"><function pos:start="1:1" pos:end="43:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">cpu_get_dump_info</name><parameter_list pos:start="1:22" pos:end="3:73">(<parameter pos:start="1:23" pos:end="1:40"><decl pos:start="1:23" pos:end="1:40"><type pos:start="1:23" pos:end="1:40"><name pos:start="1:23" pos:end="1:34">ArchDumpInfo</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:40">info</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:72"><decl pos:start="3:23" pos:end="3:72"><type pos:start="3:23" pos:end="3:72"><specifier pos:start="3:23" pos:end="3:27">const</specifier> <name pos:start="3:29" pos:end="3:53"><name pos:start="3:29" pos:end="3:34">struct</name> <name pos:start="3:36" pos:end="3:53">GuestPhysBlockList</name></name> <modifier pos:start="3:55" pos:end="3:55">*</modifier></type><name pos:start="3:56" pos:end="3:72">guest_phys_blocks</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="43:1">{<block_content pos:start="7:5" pos:end="41:13">

    <decl_stmt pos:start="7:5" pos:end="7:45"><decl pos:start="7:5" pos:end="7:44"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PowerPCCPU</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">cpu</name> <init pos:start="7:21" pos:end="7:44">= <expr pos:start="7:23" pos:end="7:44"><call pos:start="7:23" pos:end="7:44"><name pos:start="7:23" pos:end="7:33">POWERPC_CPU</name><argument_list pos:start="7:34" pos:end="7:44">(<argument pos:start="7:35" pos:end="7:43"><expr pos:start="7:35" pos:end="7:43"><name pos:start="7:35" pos:end="7:43">first_cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:21"><name pos:start="9:5" pos:end="9:19">PowerPCCPUClass</name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:24">pcc</name> <init pos:start="9:26" pos:end="9:53">= <expr pos:start="9:28" pos:end="9:53"><call pos:start="9:28" pos:end="9:53"><name pos:start="9:28" pos:end="9:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="9:49" pos:end="9:53">(<argument pos:start="9:50" pos:end="9:52"><expr pos:start="9:50" pos:end="9:52"><name pos:start="9:50" pos:end="9:52">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:38"><expr pos:start="13:5" pos:end="13:37"><name pos:start="13:5" pos:end="13:19"><name pos:start="13:5" pos:end="13:8">info</name><operator pos:start="13:9" pos:end="13:10">-&gt;</operator><name pos:start="13:11" pos:end="13:19">d_machine</name></name> <operator pos:start="13:21" pos:end="13:21">=</operator> <name pos:start="13:23" pos:end="13:37">PPC_ELF_MACHINE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:17"><name pos:start="15:5" pos:end="15:8">info</name><operator pos:start="15:9" pos:end="15:10">-&gt;</operator><name pos:start="15:11" pos:end="15:17">d_class</name></name> <operator pos:start="15:19" pos:end="15:19">=</operator> <name pos:start="15:21" pos:end="15:28">ELFCLASS</name></expr>;</expr_stmt>



    <if_stmt pos:start="19:5" pos:end="27:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:43">(<expr pos:start="19:9" pos:end="19:42"><call pos:start="19:9" pos:end="19:42">(<modifier pos:start="19:10" pos:end="19:10">*</modifier><name pos:start="19:11" pos:end="19:36"><name pos:start="19:11" pos:end="19:13">pcc</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:36">interrupts_big_endian</name></name>)<argument_list pos:start="19:38" pos:end="19:42">(<argument pos:start="19:39" pos:end="19:41"><expr pos:start="19:39" pos:end="19:41"><name pos:start="19:39" pos:end="19:41">cpu</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:45" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:37">

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:12">info</name><operator pos:start="21:13" pos:end="21:14">-&gt;</operator><name pos:start="21:15" pos:end="21:22">d_endian</name></name> <operator pos:start="21:24" pos:end="21:24">=</operator> <name pos:start="21:26" pos:end="21:36">ELFDATA2MSB</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="23:7" pos:end="27:5">else <block pos:start="23:12" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:37">

        <expr_stmt pos:start="25:9" pos:end="25:37"><expr pos:start="25:9" pos:end="25:36"><name pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:12">info</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:22">d_endian</name></name> <operator pos:start="25:24" pos:end="25:24">=</operator> <name pos:start="25:26" pos:end="25:36">ELFDATA2LSB</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="29:5" pos:end="29:54">/* 64KB is the max page size for pseries kernel */</comment>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="33:36">(<expr pos:start="31:9" pos:end="33:35"><call pos:start="31:9" pos:end="33:30"><name pos:start="31:9" pos:end="31:15">strncmp</name><argument_list pos:start="31:16" pos:end="33:30">(<argument pos:start="31:17" pos:end="31:55"><expr pos:start="31:17" pos:end="31:55"><call pos:start="31:17" pos:end="31:55"><name pos:start="31:17" pos:end="31:35">object_get_typename</name><argument_list pos:start="31:36" pos:end="31:55">(<argument pos:start="31:37" pos:end="31:54"><expr pos:start="31:37" pos:end="31:54"><call pos:start="31:37" pos:end="31:54"><name pos:start="31:37" pos:end="31:52">qdev_get_machine</name><argument_list pos:start="31:53" pos:end="31:54">()</argument_list></call></expr></argument>)</argument_list></call></expr></argument>,

                <argument pos:start="33:17" pos:end="33:26"><expr pos:start="33:17" pos:end="33:26"><literal type="string" pos:start="33:17" pos:end="33:26">"pseries-"</literal></expr></argument>, <argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">8</literal></expr></argument>)</argument_list></call> <operator pos:start="33:32" pos:end="33:33">==</operator> <literal type="number" pos:start="33:35" pos:end="33:35">0</literal></expr>)</condition> <block pos:start="33:38" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:37">

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:12">info</name><operator pos:start="35:13" pos:end="35:14">-&gt;</operator><name pos:start="35:15" pos:end="35:23">page_size</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <operator pos:start="35:27" pos:end="35:27">(</operator><literal type="number" pos:start="35:28" pos:end="35:29">1U</literal> <operator pos:start="35:31" pos:end="35:32">&lt;&lt;</operator> <literal type="number" pos:start="35:34" pos:end="35:35">16</literal><operator pos:start="35:36" pos:end="35:36">)</operator></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="41:5" pos:end="41:13">return <expr pos:start="41:12" pos:end="41:12"><literal type="number" pos:start="41:12" pos:end="41:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
