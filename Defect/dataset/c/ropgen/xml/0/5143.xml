<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5143.c" pos:tabs="8"><function pos:start="1:1" pos:end="133:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">decode_mb_i</name><parameter_list pos:start="1:23" pos:end="1:51">(<parameter pos:start="1:24" pos:end="1:36"><decl pos:start="1:24" pos:end="1:36"><type pos:start="1:24" pos:end="1:36"><name pos:start="1:24" pos:end="1:33">AVSContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">h</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:41">int</name></type> <name pos:start="1:43" pos:end="1:50">cbp_code</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="133:1">{<block_content pos:start="5:5" pos:end="131:13">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:30"><name pos:start="5:26" pos:end="5:26">h</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">unsigned</name></type> <name pos:start="7:14" pos:end="7:25">pred_mode_uv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">block</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:15">top</name><index pos:start="11:16" pos:end="11:19">[<expr pos:start="11:17" pos:end="11:18"><literal type="number" pos:start="11:17" pos:end="11:18">18</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:25"><decl pos:start="13:5" pos:end="13:24"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:17">left</name> <init pos:start="13:19" pos:end="13:24">= <expr pos:start="13:21" pos:end="13:24"><name pos:start="13:21" pos:end="13:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:11">uint8_t</name> <modifier pos:start="15:13" pos:end="15:13">*</modifier></type><name pos:start="15:14" pos:end="15:14">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:23"><expr pos:start="19:5" pos:end="19:22"><call pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:19">ff_cavs_init_mb</name><argument_list pos:start="19:20" pos:end="19:22">(<argument pos:start="19:21" pos:end="19:21"><expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:48">/* get intra prediction modes from stream */</comment>

    <for pos:start="25:5" pos:end="53:5">for <control pos:start="25:9" pos:end="25:39">(<init pos:start="25:10" pos:end="25:19"><expr pos:start="25:10" pos:end="25:18"><name pos:start="25:10" pos:end="25:14">block</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <literal type="number" pos:start="25:18" pos:end="25:18">0</literal></expr>;</init> <condition pos:start="25:21" pos:end="25:30"><expr pos:start="25:21" pos:end="25:29"><name pos:start="25:21" pos:end="25:25">block</name> <operator pos:start="25:27" pos:end="25:27">&lt;</operator> <literal type="number" pos:start="25:29" pos:end="25:29">4</literal></expr>;</condition> <incr pos:start="25:32" pos:end="25:38"><expr pos:start="25:32" pos:end="25:38"><name pos:start="25:32" pos:end="25:36">block</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control> <block pos:start="25:41" pos:end="53:5">{<block_content pos:start="27:9" pos:end="51:39">

        <decl_stmt pos:start="27:9" pos:end="27:29"><decl pos:start="27:9" pos:end="27:14"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:14">nA</name></decl>, <decl pos:start="27:17" pos:end="27:18"><type ref="prev" pos:start="27:9" pos:end="27:11"/><name pos:start="27:17" pos:end="27:18">nB</name></decl>, <decl pos:start="27:21" pos:end="27:28"><type ref="prev" pos:start="27:9" pos:end="27:11"/><name pos:start="27:21" pos:end="27:28">predpred</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:33"><decl pos:start="29:9" pos:end="29:32"><type pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">int</name></type> <name pos:start="29:13" pos:end="29:15">pos</name> <init pos:start="29:17" pos:end="29:32">= <expr pos:start="29:19" pos:end="29:32"><name pos:start="29:19" pos:end="29:32"><name pos:start="29:19" pos:end="29:25">scan3x3</name><index pos:start="29:26" pos:end="29:32">[<expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31">block</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:37"><expr pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:10">nA</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <name pos:start="33:14" pos:end="33:36"><name pos:start="33:14" pos:end="33:14">h</name><operator pos:start="33:15" pos:end="33:16">-&gt;</operator><name pos:start="33:17" pos:end="33:27">pred_mode_Y</name><index pos:start="33:28" pos:end="33:36">[<expr pos:start="33:29" pos:end="33:35"><name pos:start="33:29" pos:end="33:31">pos</name> <operator pos:start="33:33" pos:end="33:33">-</operator> <literal type="number" pos:start="33:35" pos:end="33:35">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:37"><expr pos:start="35:9" pos:end="35:36"><name pos:start="35:9" pos:end="35:10">nB</name> <operator pos:start="35:12" pos:end="35:12">=</operator> <name pos:start="35:14" pos:end="35:36"><name pos:start="35:14" pos:end="35:14">h</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:27">pred_mode_Y</name><index pos:start="35:28" pos:end="35:36">[<expr pos:start="35:29" pos:end="35:35"><name pos:start="35:29" pos:end="35:31">pos</name> <operator pos:start="35:33" pos:end="35:33">-</operator> <literal type="number" pos:start="35:35" pos:end="35:35">3</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:33"><expr pos:start="37:9" pos:end="37:32"><name pos:start="37:9" pos:end="37:16">predpred</name> <operator pos:start="37:18" pos:end="37:18">=</operator> <call pos:start="37:20" pos:end="37:32"><name pos:start="37:20" pos:end="37:24">FFMIN</name><argument_list pos:start="37:25" pos:end="37:32">(<argument pos:start="37:26" pos:end="37:27"><expr pos:start="37:26" pos:end="37:27"><name pos:start="37:26" pos:end="37:27">nA</name></expr></argument>, <argument pos:start="37:30" pos:end="37:31"><expr pos:start="37:30" pos:end="37:31"><name pos:start="37:30" pos:end="37:31">nB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="41:34"><if pos:start="39:9" pos:end="41:34">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:20">predpred</name> <operator pos:start="39:22" pos:end="39:23">==</operator> <name pos:start="39:25" pos:end="39:33">NOT_AVAIL</name></expr>)</condition><block type="pseudo" pos:start="41:13" pos:end="41:34"><block_content pos:start="41:13" pos:end="41:34"> <comment type="line" pos:start="39:36" pos:end="39:64">// if either is not available</comment>

            <expr_stmt pos:start="41:13" pos:end="41:34"><expr pos:start="41:13" pos:end="41:33"><name pos:start="41:13" pos:end="41:20">predpred</name> <operator pos:start="41:22" pos:end="41:22">=</operator> <name pos:start="41:24" pos:end="41:33">INTRA_L_LP</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="43:9" pos:end="49:9"><if pos:start="43:9" pos:end="49:9">if <condition pos:start="43:12" pos:end="43:27">(<expr pos:start="43:13" pos:end="43:26"><operator pos:start="43:13" pos:end="43:13">!</operator><call pos:start="43:14" pos:end="43:26"><name pos:start="43:14" pos:end="43:22">get_bits1</name><argument_list pos:start="43:23" pos:end="43:26">(<argument pos:start="43:24" pos:end="43:25"><expr pos:start="43:24" pos:end="43:25"><name pos:start="43:24" pos:end="43:25">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:29" pos:end="49:9">{<block_content pos:start="45:13" pos:end="47:61">

            <decl_stmt pos:start="45:13" pos:end="45:43"><decl pos:start="45:13" pos:end="45:42"><type pos:start="45:13" pos:end="45:15"><name pos:start="45:13" pos:end="45:15">int</name></type> <name pos:start="45:17" pos:end="45:24">rem_mode</name> <init pos:start="45:26" pos:end="45:42">= <expr pos:start="45:28" pos:end="45:42"><call pos:start="45:28" pos:end="45:42"><name pos:start="45:28" pos:end="45:35">get_bits</name><argument_list pos:start="45:36" pos:end="45:42">(<argument pos:start="45:37" pos:end="45:38"><expr pos:start="45:37" pos:end="45:38"><name pos:start="45:37" pos:end="45:38">gb</name></expr></argument>, <argument pos:start="45:41" pos:end="45:41"><expr pos:start="45:41" pos:end="45:41"><literal type="number" pos:start="45:41" pos:end="45:41">2</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:61"><expr pos:start="47:13" pos:end="47:60"><name pos:start="47:13" pos:end="47:20">predpred</name>     <operator pos:start="47:26" pos:end="47:26">=</operator> <name pos:start="47:28" pos:end="47:35">rem_mode</name> <operator pos:start="47:37" pos:end="47:37">+</operator> <operator pos:start="47:39" pos:end="47:39">(</operator><name pos:start="47:40" pos:end="47:47">rem_mode</name> <operator pos:start="47:49" pos:end="47:50">&gt;=</operator> <name pos:start="47:52" pos:end="47:59">predpred</name><operator pos:start="47:60" pos:end="47:60">)</operator></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:39"><expr pos:start="51:9" pos:end="51:38"><name pos:start="51:9" pos:end="51:27"><name pos:start="51:9" pos:end="51:9">h</name><operator pos:start="51:10" pos:end="51:11">-&gt;</operator><name pos:start="51:12" pos:end="51:22">pred_mode_Y</name><index pos:start="51:23" pos:end="51:27">[<expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">pos</name></expr>]</index></name> <operator pos:start="51:29" pos:end="51:29">=</operator> <name pos:start="51:31" pos:end="51:38">predpred</name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="55:5" pos:end="55:37"><expr pos:start="55:5" pos:end="55:36"><name pos:start="55:5" pos:end="55:16">pred_mode_uv</name> <operator pos:start="55:18" pos:end="55:18">=</operator> <call pos:start="55:20" pos:end="55:36"><name pos:start="55:20" pos:end="55:32">get_ue_golomb</name><argument_list pos:start="55:33" pos:end="55:36">(<argument pos:start="55:34" pos:end="55:35"><expr pos:start="55:34" pos:end="55:35"><name pos:start="55:34" pos:end="55:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:25">(<expr pos:start="57:9" pos:end="57:24"><name pos:start="57:9" pos:end="57:20">pred_mode_uv</name> <operator pos:start="57:22" pos:end="57:22">&gt;</operator> <literal type="number" pos:start="57:24" pos:end="57:24">6</literal></expr>)</condition> <block pos:start="57:27" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:35">

        <expr_stmt pos:start="59:9" pos:end="59:75"><expr pos:start="59:9" pos:end="59:74"><call pos:start="59:9" pos:end="59:74"><name pos:start="59:9" pos:end="59:14">av_log</name><argument_list pos:start="59:15" pos:end="59:74">(<argument pos:start="59:16" pos:end="59:23"><expr pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:23"><name pos:start="59:16" pos:end="59:16">h</name><operator pos:start="59:17" pos:end="59:18">-&gt;</operator><name pos:start="59:19" pos:end="59:23">avctx</name></name></expr></argument>, <argument pos:start="59:26" pos:end="59:37"><expr pos:start="59:26" pos:end="59:37"><name pos:start="59:26" pos:end="59:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="59:40" pos:end="59:73"><expr pos:start="59:40" pos:end="59:73"><literal type="string" pos:start="59:40" pos:end="59:73">"illegal intra chroma pred mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="61:9" pos:end="61:35">return <expr pos:start="61:16" pos:end="61:34"><name pos:start="61:16" pos:end="61:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:23">ff_cavs_modify_mb_i</name><argument_list pos:start="65:24" pos:end="65:41">(<argument pos:start="65:25" pos:end="65:25"><expr pos:start="65:25" pos:end="65:25"><name pos:start="65:25" pos:end="65:25">h</name></expr></argument>, <argument pos:start="65:28" pos:end="65:40"><expr pos:start="65:28" pos:end="65:40"><operator pos:start="65:28" pos:end="65:28">&amp;</operator><name pos:start="65:29" pos:end="65:40">pred_mode_uv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:33">/* get coded block pattern */</comment>

    <if_stmt pos:start="71:5" pos:end="73:37"><if pos:start="71:5" pos:end="73:37">if <condition pos:start="71:8" pos:end="71:49">(<expr pos:start="71:9" pos:end="71:48"><name pos:start="71:9" pos:end="71:27"><name pos:start="71:9" pos:end="71:9">h</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:14">cur</name><operator pos:start="71:15" pos:end="71:15">.</operator><name pos:start="71:16" pos:end="71:16">f</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:27">pict_type</name></name> <operator pos:start="71:29" pos:end="71:30">==</operator> <name pos:start="71:32" pos:end="71:48">AV_PICTURE_TYPE_I</name></expr>)</condition><block type="pseudo" pos:start="73:9" pos:end="73:37"><block_content pos:start="73:9" pos:end="73:37">

        <expr_stmt pos:start="73:9" pos:end="73:37"><expr pos:start="73:9" pos:end="73:36"><name pos:start="73:9" pos:end="73:16">cbp_code</name> <operator pos:start="73:18" pos:end="73:18">=</operator> <call pos:start="73:20" pos:end="73:36"><name pos:start="73:20" pos:end="73:32">get_ue_golomb</name><argument_list pos:start="73:33" pos:end="73:36">(<argument pos:start="73:34" pos:end="73:35"><expr pos:start="73:34" pos:end="73:35"><name pos:start="73:34" pos:end="73:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="75:5" pos:end="81:5"><if pos:start="75:5" pos:end="81:5">if <condition pos:start="75:8" pos:end="75:22">(<expr pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:16">cbp_code</name> <operator pos:start="75:18" pos:end="75:18">&gt;</operator> <literal type="number" pos:start="75:20" pos:end="75:21">63</literal></expr>)</condition> <block pos:start="75:24" pos:end="81:5">{<block_content pos:start="77:9" pos:end="79:35">

        <expr_stmt pos:start="77:9" pos:end="77:62"><expr pos:start="77:9" pos:end="77:61"><call pos:start="77:9" pos:end="77:61"><name pos:start="77:9" pos:end="77:14">av_log</name><argument_list pos:start="77:15" pos:end="77:61">(<argument pos:start="77:16" pos:end="77:23"><expr pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:23"><name pos:start="77:16" pos:end="77:16">h</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:23">avctx</name></name></expr></argument>, <argument pos:start="77:26" pos:end="77:37"><expr pos:start="77:26" pos:end="77:37"><name pos:start="77:26" pos:end="77:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="77:40" pos:end="77:60"><expr pos:start="77:40" pos:end="77:60"><literal type="string" pos:start="77:40" pos:end="77:60">"illegal intra cbp\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="79:9" pos:end="79:35">return <expr pos:start="79:16" pos:end="79:34"><name pos:start="79:16" pos:end="79:34">AVERROR_INVALIDDATA</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:34"><expr pos:start="83:5" pos:end="83:33"><name pos:start="83:5" pos:end="83:10"><name pos:start="83:5" pos:end="83:5">h</name><operator pos:start="83:6" pos:end="83:7">-&gt;</operator><name pos:start="83:8" pos:end="83:10">cbp</name></name> <operator pos:start="83:12" pos:end="83:12">=</operator> <name pos:start="83:14" pos:end="83:33"><name pos:start="83:14" pos:end="83:20">cbp_tab</name><index pos:start="83:21" pos:end="83:30">[<expr pos:start="83:22" pos:end="83:29"><name pos:start="83:22" pos:end="83:29">cbp_code</name></expr>]</index><index pos:start="83:31" pos:end="83:33">[<expr pos:start="83:32" pos:end="83:32"><literal type="number" pos:start="83:32" pos:end="83:32">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="85:5" pos:end="87:49"><if pos:start="85:5" pos:end="87:49">if <condition pos:start="85:8" pos:end="85:31">(<expr pos:start="85:9" pos:end="85:30"><name pos:start="85:9" pos:end="85:14"><name pos:start="85:9" pos:end="85:9">h</name><operator pos:start="85:10" pos:end="85:11">-&gt;</operator><name pos:start="85:12" pos:end="85:14">cbp</name></name> <operator pos:start="85:16" pos:end="85:17">&amp;&amp;</operator> <operator pos:start="85:19" pos:end="85:19">!</operator><name pos:start="85:20" pos:end="85:30"><name pos:start="85:20" pos:end="85:20">h</name><operator pos:start="85:21" pos:end="85:22">-&gt;</operator><name pos:start="85:23" pos:end="85:30">qp_fixed</name></name></expr>)</condition><block type="pseudo" pos:start="87:9" pos:end="87:49"><block_content pos:start="87:9" pos:end="87:49">

        <expr_stmt pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:48"><name pos:start="87:9" pos:end="87:13"><name pos:start="87:9" pos:end="87:9">h</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:13">qp</name></name> <operator pos:start="87:15" pos:end="87:15">=</operator> <operator pos:start="87:17" pos:end="87:17">(</operator><name pos:start="87:18" pos:end="87:22"><name pos:start="87:18" pos:end="87:18">h</name><operator pos:start="87:19" pos:end="87:20">-&gt;</operator><name pos:start="87:21" pos:end="87:22">qp</name></name> <operator pos:start="87:24" pos:end="87:24">+</operator> <call pos:start="87:26" pos:end="87:42"><name pos:start="87:26" pos:end="87:38">get_se_golomb</name><argument_list pos:start="87:39" pos:end="87:42">(<argument pos:start="87:40" pos:end="87:41"><expr pos:start="87:40" pos:end="87:41"><name pos:start="87:40" pos:end="87:41">gb</name></expr></argument>)</argument_list></call><operator pos:start="87:43" pos:end="87:43">)</operator> <operator pos:start="87:45" pos:end="87:45">&amp;</operator> <literal type="number" pos:start="87:47" pos:end="87:48">63</literal></expr>;</expr_stmt></block_content></block></if></if_stmt> <comment type="line" pos:start="87:51" pos:end="87:60">//qp_delta</comment>



    <comment type="block" pos:start="91:5" pos:end="91:78">/* luma intra prediction interleaved with residual decode/transform/add */</comment>

    <for pos:start="93:5" pos:end="107:5">for <control pos:start="93:9" pos:end="93:39">(<init pos:start="93:10" pos:end="93:19"><expr pos:start="93:10" pos:end="93:18"><name pos:start="93:10" pos:end="93:14">block</name> <operator pos:start="93:16" pos:end="93:16">=</operator> <literal type="number" pos:start="93:18" pos:end="93:18">0</literal></expr>;</init> <condition pos:start="93:21" pos:end="93:30"><expr pos:start="93:21" pos:end="93:29"><name pos:start="93:21" pos:end="93:25">block</name> <operator pos:start="93:27" pos:end="93:27">&lt;</operator> <literal type="number" pos:start="93:29" pos:end="93:29">4</literal></expr>;</condition> <incr pos:start="93:32" pos:end="93:38"><expr pos:start="93:32" pos:end="93:38"><name pos:start="93:32" pos:end="93:36">block</name><operator pos:start="93:37" pos:end="93:38">++</operator></expr></incr>)</control> <block pos:start="93:41" pos:end="107:5">{<block_content pos:start="95:9" pos:end="105:78">

        <expr_stmt pos:start="95:9" pos:end="95:40"><expr pos:start="95:9" pos:end="95:39"><name pos:start="95:9" pos:end="95:9">d</name> <operator pos:start="95:11" pos:end="95:11">=</operator> <name pos:start="95:13" pos:end="95:17"><name pos:start="95:13" pos:end="95:13">h</name><operator pos:start="95:14" pos:end="95:15">-&gt;</operator><name pos:start="95:16" pos:end="95:17">cy</name></name> <operator pos:start="95:19" pos:end="95:19">+</operator> <name pos:start="95:21" pos:end="95:39"><name pos:start="95:21" pos:end="95:21">h</name><operator pos:start="95:22" pos:end="95:23">-&gt;</operator><name pos:start="95:24" pos:end="95:32">luma_scan</name><index pos:start="95:33" pos:end="95:39">[<expr pos:start="95:34" pos:end="95:38"><name pos:start="95:34" pos:end="95:38">block</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:59"><expr pos:start="97:9" pos:end="97:58"><call pos:start="97:9" pos:end="97:58"><name pos:start="97:9" pos:end="97:36">ff_cavs_load_intra_pred_luma</name><argument_list pos:start="97:37" pos:end="97:58">(<argument pos:start="97:38" pos:end="97:38"><expr pos:start="97:38" pos:end="97:38"><name pos:start="97:38" pos:end="97:38">h</name></expr></argument>, <argument pos:start="97:41" pos:end="97:43"><expr pos:start="97:41" pos:end="97:43"><name pos:start="97:41" pos:end="97:43">top</name></expr></argument>, <argument pos:start="97:46" pos:end="97:50"><expr pos:start="97:46" pos:end="97:50"><operator pos:start="97:46" pos:end="97:46">&amp;</operator><name pos:start="97:47" pos:end="97:50">left</name></expr></argument>, <argument pos:start="97:53" pos:end="97:57"><expr pos:start="97:53" pos:end="97:57"><name pos:start="97:53" pos:end="97:57">block</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="99:9" pos:end="101:40"><expr pos:start="99:9" pos:end="101:39"><name pos:start="99:9" pos:end="99:55"><name pos:start="99:9" pos:end="99:9">h</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:23">intra_pred_l</name><index pos:start="99:24" pos:end="99:55">[<expr pos:start="99:25" pos:end="99:54"><name pos:start="99:25" pos:end="99:54"><name pos:start="99:25" pos:end="99:25">h</name><operator pos:start="99:26" pos:end="99:27">-&gt;</operator><name pos:start="99:28" pos:end="99:38">pred_mode_Y</name><index pos:start="99:39" pos:end="99:54">[<expr pos:start="99:40" pos:end="99:53"><name pos:start="99:40" pos:end="99:53"><name pos:start="99:40" pos:end="99:46">scan3x3</name><index pos:start="99:47" pos:end="99:53">[<expr pos:start="99:48" pos:end="99:52"><name pos:start="99:48" pos:end="99:52">block</name></expr>]</index></name></expr>]</index></name></expr>]</index></name>

            <operator pos:start="101:13" pos:end="101:13">(</operator><name pos:start="101:14" pos:end="101:14">d</name><operator pos:start="101:15" pos:end="101:15">,</operator> <name pos:start="101:17" pos:end="101:19">top</name><operator pos:start="101:20" pos:end="101:20">,</operator> <name pos:start="101:22" pos:end="101:25">left</name><operator pos:start="101:26" pos:end="101:26">,</operator> <name pos:start="101:28" pos:end="101:38"><name pos:start="101:28" pos:end="101:28">h</name><operator pos:start="101:29" pos:end="101:30">-&gt;</operator><name pos:start="101:31" pos:end="101:38">l_stride</name></name><operator pos:start="101:39" pos:end="101:39">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="103:9" pos:end="105:78"><if pos:start="103:9" pos:end="105:78">if <condition pos:start="103:12" pos:end="103:32">(<expr pos:start="103:13" pos:end="103:31"><name pos:start="103:13" pos:end="103:18"><name pos:start="103:13" pos:end="103:13">h</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:18">cbp</name></name> <operator pos:start="103:20" pos:end="103:20">&amp;</operator> <operator pos:start="103:22" pos:end="103:22">(</operator><literal type="number" pos:start="103:23" pos:end="103:23">1</literal><operator pos:start="103:24" pos:end="103:25">&lt;&lt;</operator><name pos:start="103:26" pos:end="103:30">block</name><operator pos:start="103:31" pos:end="103:31">)</operator></expr>)</condition><block type="pseudo" pos:start="105:13" pos:end="105:78"><block_content pos:start="105:13" pos:end="105:78">

            <expr_stmt pos:start="105:13" pos:end="105:78"><expr pos:start="105:13" pos:end="105:77"><call pos:start="105:13" pos:end="105:77"><name pos:start="105:13" pos:end="105:33">decode_residual_block</name><argument_list pos:start="105:34" pos:end="105:77">(<argument pos:start="105:35" pos:end="105:35"><expr pos:start="105:35" pos:end="105:35"><name pos:start="105:35" pos:end="105:35">h</name></expr></argument>, <argument pos:start="105:38" pos:end="105:39"><expr pos:start="105:38" pos:end="105:39"><name pos:start="105:38" pos:end="105:39">gb</name></expr></argument>, <argument pos:start="105:42" pos:end="105:50"><expr pos:start="105:42" pos:end="105:50"><name pos:start="105:42" pos:end="105:50">intra_dec</name></expr></argument>, <argument pos:start="105:53" pos:end="105:53"><expr pos:start="105:53" pos:end="105:53"><literal type="number" pos:start="105:53" pos:end="105:53">1</literal></expr></argument>, <argument pos:start="105:56" pos:end="105:60"><expr pos:start="105:56" pos:end="105:60"><name pos:start="105:56" pos:end="105:60"><name pos:start="105:56" pos:end="105:56">h</name><operator pos:start="105:57" pos:end="105:58">-&gt;</operator><name pos:start="105:59" pos:end="105:60">qp</name></name></expr></argument>, <argument pos:start="105:63" pos:end="105:63"><expr pos:start="105:63" pos:end="105:63"><name pos:start="105:63" pos:end="105:63">d</name></expr></argument>, <argument pos:start="105:66" pos:end="105:76"><expr pos:start="105:66" pos:end="105:76"><name pos:start="105:66" pos:end="105:76"><name pos:start="105:66" pos:end="105:66">h</name><operator pos:start="105:67" pos:end="105:68">-&gt;</operator><name pos:start="105:69" pos:end="105:76">l_stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="111:5" pos:end="111:33">/* chroma intra prediction */</comment>

    <expr_stmt pos:start="113:5" pos:end="113:38"><expr pos:start="113:5" pos:end="113:37"><call pos:start="113:5" pos:end="113:37"><name pos:start="113:5" pos:end="113:34">ff_cavs_load_intra_pred_chroma</name><argument_list pos:start="113:35" pos:end="113:37">(<argument pos:start="113:36" pos:end="113:36"><expr pos:start="113:36" pos:end="113:36"><name pos:start="113:36" pos:end="113:36">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="117:65"><expr pos:start="115:5" pos:end="117:64"><name pos:start="115:5" pos:end="115:33"><name pos:start="115:5" pos:end="115:5">h</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:19">intra_pred_c</name><index pos:start="115:20" pos:end="115:33">[<expr pos:start="115:21" pos:end="115:32"><name pos:start="115:21" pos:end="115:32">pred_mode_uv</name></expr>]</index></name><operator pos:start="115:34" pos:end="115:34">(</operator><name pos:start="115:35" pos:end="115:39"><name pos:start="115:35" pos:end="115:35">h</name><operator pos:start="115:36" pos:end="115:37">-&gt;</operator><name pos:start="115:38" pos:end="115:39">cu</name></name><operator pos:start="115:40" pos:end="115:40">,</operator> <operator pos:start="115:42" pos:end="115:42">&amp;</operator><name pos:start="115:43" pos:end="115:70"><name pos:start="115:43" pos:end="115:43">h</name><operator pos:start="115:44" pos:end="115:45">-&gt;</operator><name pos:start="115:46" pos:end="115:57">top_border_u</name><index pos:start="115:58" pos:end="115:70">[<expr pos:start="115:59" pos:end="115:69"><name pos:start="115:59" pos:end="115:64"><name pos:start="115:59" pos:end="115:59">h</name><operator pos:start="115:60" pos:end="115:61">-&gt;</operator><name pos:start="115:62" pos:end="115:64">mbx</name></name> <operator pos:start="115:66" pos:end="115:66">*</operator> <literal type="number" pos:start="115:68" pos:end="115:69">10</literal></expr>]</index></name><operator pos:start="115:71" pos:end="115:71">,</operator>

                                  <name pos:start="117:35" pos:end="117:50"><name pos:start="117:35" pos:end="117:35">h</name><operator pos:start="117:36" pos:end="117:37">-&gt;</operator><name pos:start="117:38" pos:end="117:50">left_border_u</name></name><operator pos:start="117:51" pos:end="117:51">,</operator> <name pos:start="117:53" pos:end="117:63"><name pos:start="117:53" pos:end="117:53">h</name><operator pos:start="117:54" pos:end="117:55">-&gt;</operator><name pos:start="117:56" pos:end="117:63">c_stride</name></name><operator pos:start="117:64" pos:end="117:64">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="121:65"><expr pos:start="119:5" pos:end="121:64"><name pos:start="119:5" pos:end="119:33"><name pos:start="119:5" pos:end="119:5">h</name><operator pos:start="119:6" pos:end="119:7">-&gt;</operator><name pos:start="119:8" pos:end="119:19">intra_pred_c</name><index pos:start="119:20" pos:end="119:33">[<expr pos:start="119:21" pos:end="119:32"><name pos:start="119:21" pos:end="119:32">pred_mode_uv</name></expr>]</index></name><operator pos:start="119:34" pos:end="119:34">(</operator><name pos:start="119:35" pos:end="119:39"><name pos:start="119:35" pos:end="119:35">h</name><operator pos:start="119:36" pos:end="119:37">-&gt;</operator><name pos:start="119:38" pos:end="119:39">cv</name></name><operator pos:start="119:40" pos:end="119:40">,</operator> <operator pos:start="119:42" pos:end="119:42">&amp;</operator><name pos:start="119:43" pos:end="119:70"><name pos:start="119:43" pos:end="119:43">h</name><operator pos:start="119:44" pos:end="119:45">-&gt;</operator><name pos:start="119:46" pos:end="119:57">top_border_v</name><index pos:start="119:58" pos:end="119:70">[<expr pos:start="119:59" pos:end="119:69"><name pos:start="119:59" pos:end="119:64"><name pos:start="119:59" pos:end="119:59">h</name><operator pos:start="119:60" pos:end="119:61">-&gt;</operator><name pos:start="119:62" pos:end="119:64">mbx</name></name> <operator pos:start="119:66" pos:end="119:66">*</operator> <literal type="number" pos:start="119:68" pos:end="119:69">10</literal></expr>]</index></name><operator pos:start="119:71" pos:end="119:71">,</operator>

                                  <name pos:start="121:35" pos:end="121:50"><name pos:start="121:35" pos:end="121:35">h</name><operator pos:start="121:36" pos:end="121:37">-&gt;</operator><name pos:start="121:38" pos:end="121:50">left_border_v</name></name><operator pos:start="121:51" pos:end="121:51">,</operator> <name pos:start="121:53" pos:end="121:63"><name pos:start="121:53" pos:end="121:53">h</name><operator pos:start="121:54" pos:end="121:55">-&gt;</operator><name pos:start="121:56" pos:end="121:63">c_stride</name></name><operator pos:start="121:64" pos:end="121:64">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="125:5" pos:end="125:30"><expr pos:start="125:5" pos:end="125:29"><call pos:start="125:5" pos:end="125:29"><name pos:start="125:5" pos:end="125:26">decode_residual_chroma</name><argument_list pos:start="125:27" pos:end="125:29">(<argument pos:start="125:28" pos:end="125:28"><expr pos:start="125:28" pos:end="125:28"><name pos:start="125:28" pos:end="125:28">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:29"><expr pos:start="127:5" pos:end="127:28"><call pos:start="127:5" pos:end="127:28"><name pos:start="127:5" pos:end="127:18">ff_cavs_filter</name><argument_list pos:start="127:19" pos:end="127:28">(<argument pos:start="127:20" pos:end="127:20"><expr pos:start="127:20" pos:end="127:20"><name pos:start="127:20" pos:end="127:20">h</name></expr></argument>, <argument pos:start="127:23" pos:end="127:27"><expr pos:start="127:23" pos:end="127:27"><name pos:start="127:23" pos:end="127:27">I_8X8</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:20"><expr pos:start="129:5" pos:end="129:19"><call pos:start="129:5" pos:end="129:19"><name pos:start="129:5" pos:end="129:16">set_mv_intra</name><argument_list pos:start="129:17" pos:end="129:19">(<argument pos:start="129:18" pos:end="129:18"><expr pos:start="129:18" pos:end="129:18"><name pos:start="129:18" pos:end="129:18">h</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="131:5" pos:end="131:13">return <expr pos:start="131:12" pos:end="131:12"><literal type="number" pos:start="131:12" pos:end="131:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
