<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6845.c" pos:tabs="8"><function pos:start="1:1" pos:end="79:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">qxl_dirty_surfaces</name><parameter_list pos:start="1:31" pos:end="1:49">(<parameter pos:start="1:32" pos:end="1:48"><decl pos:start="1:32" pos:end="1:48"><type pos:start="1:32" pos:end="1:45"><name pos:start="1:32" pos:end="1:43">PCIQXLDevice</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">qxl</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="79:1">{<block_content pos:start="5:5" pos:end="77:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:13">uintptr_t</name></type> <name pos:start="5:15" pos:end="5:24">vram_start</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="15:5"><if pos:start="11:5" pos:end="15:5">if <condition pos:start="11:8" pos:end="11:69">(<expr pos:start="11:9" pos:end="11:68"><name pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:11">qxl</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:17">mode</name></name> <operator pos:start="11:19" pos:end="11:20">!=</operator> <name pos:start="11:22" pos:end="11:36">QXL_MODE_NATIVE</name> <operator pos:start="11:38" pos:end="11:39">&amp;&amp;</operator> <name pos:start="11:41" pos:end="11:49"><name pos:start="11:41" pos:end="11:43">qxl</name><operator pos:start="11:44" pos:end="11:45">-&gt;</operator><name pos:start="11:46" pos:end="11:49">mode</name></name> <operator pos:start="11:51" pos:end="11:52">!=</operator> <name pos:start="11:54" pos:end="11:68">QXL_MODE_COMPAT</name></expr>)</condition> <block pos:start="11:71" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:15">

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:35">/* dirty the primary surface */</comment>

    <expr_stmt pos:start="21:5" pos:end="23:54"><expr pos:start="21:5" pos:end="23:53"><call pos:start="21:5" pos:end="23:53"><name pos:start="21:5" pos:end="21:17">qxl_set_dirty</name><argument_list pos:start="21:18" pos:end="23:53">(<argument pos:start="21:19" pos:end="21:32"><expr pos:start="21:19" pos:end="21:32"><operator pos:start="21:19" pos:end="21:19">&amp;</operator><name pos:start="21:20" pos:end="21:32"><name pos:start="21:20" pos:end="21:22">qxl</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:27">vga</name><operator pos:start="21:28" pos:end="21:28">.</operator><name pos:start="21:29" pos:end="21:32">vram</name></name></expr></argument>, <argument pos:start="21:35" pos:end="21:66"><expr pos:start="21:35" pos:end="21:66"><name pos:start="21:35" pos:end="21:66"><name pos:start="21:35" pos:end="21:37">qxl</name><operator pos:start="21:38" pos:end="21:39">-&gt;</operator><name pos:start="21:40" pos:end="21:49">shadow_rom</name><operator pos:start="21:50" pos:end="21:50">.</operator><name pos:start="21:51" pos:end="21:66">draw_area_offset</name></name></expr></argument>,

                  <argument pos:start="23:19" pos:end="23:52"><expr pos:start="23:19" pos:end="23:52"><name pos:start="23:19" pos:end="23:52"><name pos:start="23:19" pos:end="23:21">qxl</name><operator pos:start="23:22" pos:end="23:23">-&gt;</operator><name pos:start="23:24" pos:end="23:33">shadow_rom</name><operator pos:start="23:34" pos:end="23:34">.</operator><name pos:start="23:35" pos:end="23:52">surface0_area_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:70"><expr pos:start="27:5" pos:end="27:69"><name pos:start="27:5" pos:end="27:14">vram_start</name> <operator pos:start="27:16" pos:end="27:16">=</operator> <operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:27">uintptr_t</name><operator pos:start="27:28" pos:end="27:28">)</operator><call pos:start="27:29" pos:end="27:69"><name pos:start="27:29" pos:end="27:53">memory_region_get_ram_ptr</name><argument_list pos:start="27:54" pos:end="27:69">(<argument pos:start="27:55" pos:end="27:68"><expr pos:start="27:55" pos:end="27:68"><operator pos:start="27:55" pos:end="27:55">&amp;</operator><name pos:start="27:56" pos:end="27:68"><name pos:start="27:56" pos:end="27:58">qxl</name><operator pos:start="27:59" pos:end="27:60">-&gt;</operator><name pos:start="27:61" pos:end="27:68">vram_bar</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="31:5" pos:end="31:39">/* dirty the off-screen surfaces */</comment>

    <for pos:start="33:5" pos:end="77:5">for <control pos:start="33:9" pos:end="33:47">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:42"><expr pos:start="33:17" pos:end="33:41"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:41"><name pos:start="33:21" pos:end="33:23">qxl</name><operator pos:start="33:24" pos:end="33:25">-&gt;</operator><name pos:start="33:26" pos:end="33:28">ssd</name><operator pos:start="33:29" pos:end="33:29">.</operator><name pos:start="33:30" pos:end="33:41">num_surfaces</name></name></expr>;</condition> <incr pos:start="33:44" pos:end="33:46"><expr pos:start="33:44" pos:end="33:46"><name pos:start="33:44" pos:end="33:44">i</name><operator pos:start="33:45" pos:end="33:46">++</operator></expr></incr>)</control> <block pos:start="33:49" pos:end="77:5">{<block_content pos:start="35:9" pos:end="75:68">

        <decl_stmt pos:start="35:9" pos:end="35:27"><decl pos:start="35:9" pos:end="35:26"><type pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:21">QXLSurfaceCmd</name> <modifier pos:start="35:23" pos:end="35:23">*</modifier></type><name pos:start="35:24" pos:end="35:26">cmd</name></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:32"><decl pos:start="37:9" pos:end="37:31"><type pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:16">intptr_t</name></type> <name pos:start="37:18" pos:end="37:31">surface_offset</name></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:25"><decl pos:start="39:9" pos:end="39:24"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:24">surface_size</name></decl>;</decl_stmt>



        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:45">(<expr pos:start="43:13" pos:end="43:44"><name pos:start="43:13" pos:end="43:39"><name pos:start="43:13" pos:end="43:15">qxl</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:31">guest_surfaces</name><operator pos:start="43:32" pos:end="43:32">.</operator><name pos:start="43:33" pos:end="43:36">cmds</name><index pos:start="43:37" pos:end="43:39">[<expr pos:start="43:38" pos:end="43:38"><name pos:start="43:38" pos:end="43:38">i</name></expr>]</index></name> <operator pos:start="43:41" pos:end="43:42">==</operator> <literal type="number" pos:start="43:44" pos:end="43:44">0</literal></expr>)</condition> <block pos:start="43:47" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:21">

            <continue pos:start="45:13" pos:end="45:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="51:9" pos:end="53:49"><expr pos:start="51:9" pos:end="53:48"><name pos:start="51:9" pos:end="51:11">cmd</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="53:48"><name pos:start="51:15" pos:end="51:27">qxl_phys2virt</name><argument_list pos:start="51:28" pos:end="53:48">(<argument pos:start="51:29" pos:end="51:31"><expr pos:start="51:29" pos:end="51:31"><name pos:start="51:29" pos:end="51:31">qxl</name></expr></argument>, <argument pos:start="51:34" pos:end="51:60"><expr pos:start="51:34" pos:end="51:60"><name pos:start="51:34" pos:end="51:60"><name pos:start="51:34" pos:end="51:36">qxl</name><operator pos:start="51:37" pos:end="51:38">-&gt;</operator><name pos:start="51:39" pos:end="51:52">guest_surfaces</name><operator pos:start="51:53" pos:end="51:53">.</operator><name pos:start="51:54" pos:end="51:57">cmds</name><index pos:start="51:58" pos:end="51:60">[<expr pos:start="51:59" pos:end="51:59"><name pos:start="51:59" pos:end="51:59">i</name></expr>]</index></name></expr></argument>,

                            <argument pos:start="53:29" pos:end="53:47"><expr pos:start="53:29" pos:end="53:47"><name pos:start="53:29" pos:end="53:47">MEMSLOT_GROUP_GUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:20"><expr pos:start="55:9" pos:end="55:19"><call pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:14">assert</name><argument_list pos:start="55:15" pos:end="55:19">(<argument pos:start="55:16" pos:end="55:18"><expr pos:start="55:16" pos:end="55:18"><name pos:start="55:16" pos:end="55:18">cmd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:52"><expr pos:start="57:9" pos:end="57:51"><call pos:start="57:9" pos:end="57:51"><name pos:start="57:9" pos:end="57:14">assert</name><argument_list pos:start="57:15" pos:end="57:51">(<argument pos:start="57:16" pos:end="57:50"><expr pos:start="57:16" pos:end="57:50"><name pos:start="57:16" pos:end="57:24"><name pos:start="57:16" pos:end="57:18">cmd</name><operator pos:start="57:19" pos:end="57:20">-&gt;</operator><name pos:start="57:21" pos:end="57:24">type</name></name> <operator pos:start="57:26" pos:end="57:27">==</operator> <name pos:start="57:29" pos:end="57:50">QXL_SURFACE_CMD_CREATE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="63:70"><expr pos:start="59:9" pos:end="63:69"><name pos:start="59:9" pos:end="59:22">surface_offset</name> <operator pos:start="59:24" pos:end="59:24">=</operator> <operator pos:start="59:26" pos:end="59:26">(</operator><name pos:start="59:27" pos:end="59:34">intptr_t</name><operator pos:start="59:35" pos:end="59:35">)</operator><call pos:start="59:36" pos:end="63:69"><name pos:start="59:36" pos:end="59:48">qxl_phys2virt</name><argument_list pos:start="59:49" pos:end="63:69">(<argument pos:start="59:50" pos:end="59:52"><expr pos:start="59:50" pos:end="59:52"><name pos:start="59:50" pos:end="59:52">qxl</name></expr></argument>,

                                                 <argument pos:start="61:50" pos:end="61:75"><expr pos:start="61:50" pos:end="61:75"><name pos:start="61:50" pos:end="61:75"><name pos:start="61:50" pos:end="61:52">cmd</name><operator pos:start="61:53" pos:end="61:54">-&gt;</operator><name pos:start="61:55" pos:end="61:55">u</name><operator pos:start="61:56" pos:end="61:56">.</operator><name pos:start="61:57" pos:end="61:70">surface_create</name><operator pos:start="61:71" pos:end="61:71">.</operator><name pos:start="61:72" pos:end="61:75">data</name></name></expr></argument>,

                                                 <argument pos:start="63:50" pos:end="63:68"><expr pos:start="63:50" pos:end="63:68"><name pos:start="63:50" pos:end="63:68">MEMSLOT_GROUP_GUEST</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:31"><expr pos:start="65:9" pos:end="65:30"><call pos:start="65:9" pos:end="65:30"><name pos:start="65:9" pos:end="65:14">assert</name><argument_list pos:start="65:15" pos:end="65:30">(<argument pos:start="65:16" pos:end="65:29"><expr pos:start="65:16" pos:end="65:29"><name pos:start="65:16" pos:end="65:29">surface_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:37"><expr pos:start="67:9" pos:end="67:36"><name pos:start="67:9" pos:end="67:22">surface_offset</name> <operator pos:start="67:24" pos:end="67:25">-=</operator> <name pos:start="67:27" pos:end="67:36">vram_start</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:57"><expr pos:start="69:9" pos:end="71:56"><name pos:start="69:9" pos:end="69:20">surface_size</name> <operator pos:start="69:22" pos:end="69:22">=</operator> <name pos:start="69:24" pos:end="69:51"><name pos:start="69:24" pos:end="69:26">cmd</name><operator pos:start="69:27" pos:end="69:28">-&gt;</operator><name pos:start="69:29" pos:end="69:29">u</name><operator pos:start="69:30" pos:end="69:30">.</operator><name pos:start="69:31" pos:end="69:44">surface_create</name><operator pos:start="69:45" pos:end="69:45">.</operator><name pos:start="69:46" pos:end="69:51">height</name></name> <operator pos:start="69:53" pos:end="69:53">*</operator>

                       <call pos:start="71:24" pos:end="71:56"><name pos:start="71:24" pos:end="71:26">abs</name><argument_list pos:start="71:27" pos:end="71:56">(<argument pos:start="71:28" pos:end="71:55"><expr pos:start="71:28" pos:end="71:55"><name pos:start="71:28" pos:end="71:55"><name pos:start="71:28" pos:end="71:30">cmd</name><operator pos:start="71:31" pos:end="71:32">-&gt;</operator><name pos:start="71:33" pos:end="71:33">u</name><operator pos:start="71:34" pos:end="71:34">.</operator><name pos:start="71:35" pos:end="71:48">surface_create</name><operator pos:start="71:49" pos:end="71:49">.</operator><name pos:start="71:50" pos:end="71:55">stride</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:80"><expr pos:start="73:9" pos:end="73:79"><call pos:start="73:9" pos:end="73:79"><name pos:start="73:9" pos:end="73:32">trace_qxl_surfaces_dirty</name><argument_list pos:start="73:33" pos:end="73:79">(<argument pos:start="73:34" pos:end="73:40"><expr pos:start="73:34" pos:end="73:40"><name pos:start="73:34" pos:end="73:40"><name pos:start="73:34" pos:end="73:36">qxl</name><operator pos:start="73:37" pos:end="73:38">-&gt;</operator><name pos:start="73:39" pos:end="73:40">id</name></name></expr></argument>, <argument pos:start="73:43" pos:end="73:43"><expr pos:start="73:43" pos:end="73:43"><name pos:start="73:43" pos:end="73:43">i</name></expr></argument>, <argument pos:start="73:46" pos:end="73:64"><expr pos:start="73:46" pos:end="73:64"><operator pos:start="73:46" pos:end="73:46">(</operator><name pos:start="73:47" pos:end="73:49">int</name><operator pos:start="73:50" pos:end="73:50">)</operator><name pos:start="73:51" pos:end="73:64">surface_offset</name></expr></argument>, <argument pos:start="73:67" pos:end="73:78"><expr pos:start="73:67" pos:end="73:78"><name pos:start="73:67" pos:end="73:78">surface_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:68"><expr pos:start="75:9" pos:end="75:67"><call pos:start="75:9" pos:end="75:67"><name pos:start="75:9" pos:end="75:21">qxl_set_dirty</name><argument_list pos:start="75:22" pos:end="75:67">(<argument pos:start="75:23" pos:end="75:36"><expr pos:start="75:23" pos:end="75:36"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:36"><name pos:start="75:24" pos:end="75:26">qxl</name><operator pos:start="75:27" pos:end="75:28">-&gt;</operator><name pos:start="75:29" pos:end="75:36">vram_bar</name></name></expr></argument>, <argument pos:start="75:39" pos:end="75:52"><expr pos:start="75:39" pos:end="75:52"><name pos:start="75:39" pos:end="75:52">surface_offset</name></expr></argument>, <argument pos:start="75:55" pos:end="75:66"><expr pos:start="75:55" pos:end="75:66"><name pos:start="75:55" pos:end="75:66">surface_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
