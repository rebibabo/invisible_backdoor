<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6226.c" pos:tabs="8"><function pos:start="1:1" pos:end="149:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">uhci_handle_td</name><parameter_list pos:start="1:26" pos:end="1:87">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:35">UHCIState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:53"><decl pos:start="1:41" pos:end="1:53"><type pos:start="1:41" pos:end="1:53"><name pos:start="1:41" pos:end="1:48">uint32_t</name></type> <name pos:start="1:50" pos:end="1:53">addr</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:66"><decl pos:start="1:56" pos:end="1:66"><type pos:start="1:56" pos:end="1:66"><name pos:start="1:56" pos:end="1:62">UHCI_TD</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:66">td</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:86"><decl pos:start="1:69" pos:end="1:86"><type pos:start="1:69" pos:end="1:86"><name pos:start="1:69" pos:end="1:76">uint32_t</name> <modifier pos:start="1:78" pos:end="1:78">*</modifier></type><name pos:start="1:79" pos:end="1:86">int_mask</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="149:1">{<block_content pos:start="5:5" pos:end="147:15">

    <decl_stmt pos:start="5:5" pos:end="5:21"><decl pos:start="5:5" pos:end="5:20"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">UHCIAsync</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:20">async</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">len</name> <init pos:start="7:13" pos:end="7:15">= <expr pos:start="7:15" pos:end="7:15"><literal type="number" pos:start="7:15" pos:end="7:15">0</literal></expr></init></decl>, <decl pos:start="7:18" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:24">max_len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:15">pid</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:21">/* Is active ? */</comment>

    <if_stmt pos:start="15:5" pos:end="17:17"><if pos:start="15:5" pos:end="17:17">if <condition pos:start="15:8" pos:end="15:37">(<expr pos:start="15:9" pos:end="15:36"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:18"><name pos:start="15:11" pos:end="15:12">td</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:18">ctrl</name></name> <operator pos:start="15:20" pos:end="15:20">&amp;</operator> <name pos:start="15:22" pos:end="15:35">TD_CTRL_ACTIVE</name><operator pos:start="15:36" pos:end="15:36">)</operator></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:17"><block_content pos:start="17:9" pos:end="17:17">

        <return pos:start="17:9" pos:end="17:17">return <expr pos:start="17:16" pos:end="17:16"><literal type="number" pos:start="17:16" pos:end="17:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:51"><expr pos:start="21:5" pos:end="21:50"><name pos:start="21:5" pos:end="21:9">async</name> <operator pos:start="21:11" pos:end="21:11">=</operator> <call pos:start="21:13" pos:end="21:50"><name pos:start="21:13" pos:end="21:30">uhci_async_find_td</name><argument_list pos:start="21:31" pos:end="21:50">(<argument pos:start="21:32" pos:end="21:32"><expr pos:start="21:32" pos:end="21:32"><name pos:start="21:32" pos:end="21:32">s</name></expr></argument>, <argument pos:start="21:35" pos:end="21:38"><expr pos:start="21:35" pos:end="21:38"><name pos:start="21:35" pos:end="21:38">addr</name></expr></argument>, <argument pos:start="21:41" pos:end="21:49"><expr pos:start="21:41" pos:end="21:49"><name pos:start="21:41" pos:end="21:49"><name pos:start="21:41" pos:end="21:42">td</name><operator pos:start="21:43" pos:end="21:44">-&gt;</operator><name pos:start="21:45" pos:end="21:49">token</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="23:5" pos:end="41:5"><if pos:start="23:5" pos:end="41:5">if <condition pos:start="23:8" pos:end="23:14">(<expr pos:start="23:9" pos:end="23:13"><name pos:start="23:9" pos:end="23:13">async</name></expr>)</condition> <block pos:start="23:16" pos:end="41:5">{<block_content pos:start="27:9" pos:end="39:18">

        <comment type="block" pos:start="25:9" pos:end="25:31">/* Already submitted */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:26"><expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:13">async</name><operator pos:start="27:14" pos:end="27:15">-&gt;</operator><name pos:start="27:16" pos:end="27:20">valid</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <literal type="number" pos:start="27:24" pos:end="27:25">32</literal></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="33:21"><if pos:start="31:9" pos:end="33:21">if <condition pos:start="31:12" pos:end="31:25">(<expr pos:start="31:13" pos:end="31:24"><operator pos:start="31:13" pos:end="31:13">!</operator><name pos:start="31:14" pos:end="31:24"><name pos:start="31:14" pos:end="31:18">async</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:24">done</name></name></expr>)</condition><block type="pseudo" pos:start="33:13" pos:end="33:21"><block_content pos:start="33:13" pos:end="33:21">

            <return pos:start="33:13" pos:end="33:21">return <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">1</literal></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:36"><expr pos:start="37:9" pos:end="37:35"><call pos:start="37:9" pos:end="37:35"><name pos:start="37:9" pos:end="37:25">uhci_async_unlink</name><argument_list pos:start="37:26" pos:end="37:35">(<argument pos:start="37:27" pos:end="37:27"><expr pos:start="37:27" pos:end="37:27"><name pos:start="37:27" pos:end="37:27">s</name></expr></argument>, <argument pos:start="37:30" pos:end="37:34"><expr pos:start="37:30" pos:end="37:34"><name pos:start="37:30" pos:end="37:34">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="39:9" pos:end="39:18">goto <name pos:start="39:14" pos:end="39:17">done</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:29">/* Allocate new packet */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:9">async</name> <operator pos:start="47:11" pos:end="47:11">=</operator> <call pos:start="47:13" pos:end="47:31"><name pos:start="47:13" pos:end="47:28">uhci_async_alloc</name><argument_list pos:start="47:29" pos:end="47:31">(<argument pos:start="47:30" pos:end="47:30"><expr pos:start="47:30" pos:end="47:30"><name pos:start="47:30" pos:end="47:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="51:17"><if pos:start="49:5" pos:end="51:17">if <condition pos:start="49:8" pos:end="49:15">(<expr pos:start="49:9" pos:end="49:14"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:14">async</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:17"><block_content pos:start="51:9" pos:end="51:17">

        <return pos:start="51:9" pos:end="51:17">return <expr pos:start="51:16" pos:end="51:16"><literal type="number" pos:start="51:16" pos:end="51:16">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:22"><expr pos:start="55:5" pos:end="55:21"><name pos:start="55:5" pos:end="55:16"><name pos:start="55:5" pos:end="55:9">async</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">valid</name></name> <operator pos:start="55:18" pos:end="55:18">=</operator> <literal type="number" pos:start="55:20" pos:end="55:21">10</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:24"><expr pos:start="57:5" pos:end="57:23"><name pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:9">async</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:13">td</name></name>    <operator pos:start="57:18" pos:end="57:18">=</operator> <name pos:start="57:20" pos:end="57:23">addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:29"><expr pos:start="59:5" pos:end="59:28"><name pos:start="59:5" pos:end="59:16"><name pos:start="59:5" pos:end="59:9">async</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">token</name></name> <operator pos:start="59:18" pos:end="59:18">=</operator> <name pos:start="59:20" pos:end="59:28"><name pos:start="59:20" pos:end="59:21">td</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:28">token</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:11">max_len</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <operator pos:start="63:15" pos:end="63:15">(</operator><operator pos:start="63:16" pos:end="63:16">(</operator><name pos:start="63:17" pos:end="63:25"><name pos:start="63:17" pos:end="63:18">td</name><operator pos:start="63:19" pos:end="63:20">-&gt;</operator><name pos:start="63:21" pos:end="63:25">token</name></name> <operator pos:start="63:27" pos:end="63:28">&gt;&gt;</operator> <literal type="number" pos:start="63:30" pos:end="63:31">21</literal><operator pos:start="63:32" pos:end="63:32">)</operator> <operator pos:start="63:34" pos:end="63:34">+</operator> <literal type="number" pos:start="63:36" pos:end="63:36">1</literal><operator pos:start="63:37" pos:end="63:37">)</operator> <operator pos:start="63:39" pos:end="63:39">&amp;</operator> <literal type="number" pos:start="63:41" pos:end="63:45">0x7ff</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:7">pid</name> <operator pos:start="65:9" pos:end="65:9">=</operator> <name pos:start="65:11" pos:end="65:19"><name pos:start="65:11" pos:end="65:12">td</name><operator pos:start="65:13" pos:end="65:14">-&gt;</operator><name pos:start="65:15" pos:end="65:19">token</name></name> <operator pos:start="65:21" pos:end="65:21">&amp;</operator> <literal type="number" pos:start="65:23" pos:end="65:26">0xff</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:32"><expr pos:start="69:5" pos:end="69:31"><name pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:9">async</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:17">packet</name><operator pos:start="69:18" pos:end="69:18">.</operator><name pos:start="69:19" pos:end="69:21">pid</name></name>     <operator pos:start="69:27" pos:end="69:27">=</operator> <name pos:start="69:29" pos:end="69:31">pid</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:52"><expr pos:start="71:5" pos:end="71:51"><name pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:9">async</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:17">packet</name><operator pos:start="71:18" pos:end="71:18">.</operator><name pos:start="71:19" pos:end="71:25">devaddr</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <operator pos:start="71:29" pos:end="71:29">(</operator><name pos:start="71:30" pos:end="71:38"><name pos:start="71:30" pos:end="71:31">td</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:38">token</name></name> <operator pos:start="71:40" pos:end="71:41">&gt;&gt;</operator> <literal type="number" pos:start="71:43" pos:end="71:43">8</literal><operator pos:start="71:44" pos:end="71:44">)</operator> <operator pos:start="71:46" pos:end="71:46">&amp;</operator> <literal type="number" pos:start="71:48" pos:end="71:51">0x7f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:52"><expr pos:start="73:5" pos:end="73:51"><name pos:start="73:5" pos:end="73:23"><name pos:start="73:5" pos:end="73:9">async</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:17">packet</name><operator pos:start="73:18" pos:end="73:18">.</operator><name pos:start="73:19" pos:end="73:23">devep</name></name>   <operator pos:start="73:27" pos:end="73:27">=</operator> <operator pos:start="73:29" pos:end="73:29">(</operator><name pos:start="73:30" pos:end="73:38"><name pos:start="73:30" pos:end="73:31">td</name><operator pos:start="73:32" pos:end="73:33">-&gt;</operator><name pos:start="73:34" pos:end="73:38">token</name></name> <operator pos:start="73:40" pos:end="73:41">&gt;&gt;</operator> <literal type="number" pos:start="73:43" pos:end="73:44">15</literal><operator pos:start="73:45" pos:end="73:45">)</operator> <operator pos:start="73:47" pos:end="73:47">&amp;</operator> <literal type="number" pos:start="73:49" pos:end="73:51">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:42"><expr pos:start="75:5" pos:end="75:41"><name pos:start="75:5" pos:end="75:22"><name pos:start="75:5" pos:end="75:9">async</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:17">packet</name><operator pos:start="75:18" pos:end="75:18">.</operator><name pos:start="75:19" pos:end="75:22">data</name></name>    <operator pos:start="75:27" pos:end="75:27">=</operator> <name pos:start="75:29" pos:end="75:41"><name pos:start="75:29" pos:end="75:33">async</name><operator pos:start="75:34" pos:end="75:35">-&gt;</operator><name pos:start="75:36" pos:end="75:41">buffer</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:36"><expr pos:start="77:5" pos:end="77:35"><name pos:start="77:5" pos:end="77:21"><name pos:start="77:5" pos:end="77:9">async</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:17">packet</name><operator pos:start="77:18" pos:end="77:18">.</operator><name pos:start="77:19" pos:end="77:21">len</name></name>     <operator pos:start="77:27" pos:end="77:27">=</operator> <name pos:start="77:29" pos:end="77:35">max_len</name></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:56"><expr pos:start="79:5" pos:end="79:55"><name pos:start="79:5" pos:end="79:29"><name pos:start="79:5" pos:end="79:9">async</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:17">packet</name><operator pos:start="79:18" pos:end="79:18">.</operator><name pos:start="79:19" pos:end="79:29">complete_cb</name></name>     <operator pos:start="79:35" pos:end="79:35">=</operator> <name pos:start="79:37" pos:end="79:55">uhci_async_complete</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:38"><expr pos:start="81:5" pos:end="81:37"><name pos:start="81:5" pos:end="81:33"><name pos:start="81:5" pos:end="81:9">async</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:17">packet</name><operator pos:start="81:18" pos:end="81:18">.</operator><name pos:start="81:19" pos:end="81:33">complete_opaque</name></name> <operator pos:start="81:35" pos:end="81:35">=</operator> <name pos:start="81:37" pos:end="81:37">s</name></expr>;</expr_stmt>



    <switch pos:start="85:5" pos:end="123:5">switch<condition pos:start="85:11" pos:end="85:15">(<expr pos:start="85:12" pos:end="85:14"><name pos:start="85:12" pos:end="85:14">pid</name></expr>)</condition> <block pos:start="85:17" pos:end="123:5">{<block_content pos:start="87:5" pos:end="121:18">

    <case pos:start="87:5" pos:end="87:23">case <expr pos:start="87:10" pos:end="87:22"><name pos:start="87:10" pos:end="87:22">USB_TOKEN_OUT</name></expr>:</case>

    <case pos:start="89:5" pos:end="89:25">case <expr pos:start="89:10" pos:end="89:24"><name pos:start="89:10" pos:end="89:24">USB_TOKEN_SETUP</name></expr>:</case>

        <expr_stmt pos:start="91:9" pos:end="91:69"><expr pos:start="91:9" pos:end="91:68"><call pos:start="91:9" pos:end="91:68"><name pos:start="91:9" pos:end="91:32">cpu_physical_memory_read</name><argument_list pos:start="91:33" pos:end="91:68">(<argument pos:start="91:34" pos:end="91:43"><expr pos:start="91:34" pos:end="91:43"><name pos:start="91:34" pos:end="91:43"><name pos:start="91:34" pos:end="91:35">td</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:43">buffer</name></name></expr></argument>, <argument pos:start="91:46" pos:end="91:58"><expr pos:start="91:46" pos:end="91:58"><name pos:start="91:46" pos:end="91:58"><name pos:start="91:46" pos:end="91:50">async</name><operator pos:start="91:51" pos:end="91:52">-&gt;</operator><name pos:start="91:53" pos:end="91:58">buffer</name></name></expr></argument>, <argument pos:start="91:61" pos:end="91:67"><expr pos:start="91:61" pos:end="91:67"><name pos:start="91:61" pos:end="91:67">max_len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:55"><expr pos:start="93:9" pos:end="93:54"><name pos:start="93:9" pos:end="93:11">len</name> <operator pos:start="93:13" pos:end="93:13">=</operator> <call pos:start="93:15" pos:end="93:54"><name pos:start="93:15" pos:end="93:35">uhci_broadcast_packet</name><argument_list pos:start="93:36" pos:end="93:54">(<argument pos:start="93:37" pos:end="93:37"><expr pos:start="93:37" pos:end="93:37"><name pos:start="93:37" pos:end="93:37">s</name></expr></argument>, <argument pos:start="93:40" pos:end="93:53"><expr pos:start="93:40" pos:end="93:53"><operator pos:start="93:40" pos:end="93:40">&amp;</operator><name pos:start="93:41" pos:end="93:53"><name pos:start="93:41" pos:end="93:45">async</name><operator pos:start="93:46" pos:end="93:47">-&gt;</operator><name pos:start="93:48" pos:end="93:53">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="95:9" pos:end="97:26"><if pos:start="95:9" pos:end="97:26">if <condition pos:start="95:12" pos:end="95:21">(<expr pos:start="95:13" pos:end="95:20"><name pos:start="95:13" pos:end="95:15">len</name> <operator pos:start="95:17" pos:end="95:18">&gt;=</operator> <literal type="number" pos:start="95:20" pos:end="95:20">0</literal></expr>)</condition><block type="pseudo" pos:start="97:13" pos:end="97:26"><block_content pos:start="97:13" pos:end="97:26">

            <expr_stmt pos:start="97:13" pos:end="97:26"><expr pos:start="97:13" pos:end="97:25"><name pos:start="97:13" pos:end="97:15">len</name> <operator pos:start="97:17" pos:end="97:17">=</operator> <name pos:start="97:19" pos:end="97:25">max_len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="99:9" pos:end="99:14">break;</break>



    <case pos:start="103:5" pos:end="103:22">case <expr pos:start="103:10" pos:end="103:21"><name pos:start="103:10" pos:end="103:21">USB_TOKEN_IN</name></expr>:</case>

        <expr_stmt pos:start="105:9" pos:end="105:55"><expr pos:start="105:9" pos:end="105:54"><name pos:start="105:9" pos:end="105:11">len</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:54"><name pos:start="105:15" pos:end="105:35">uhci_broadcast_packet</name><argument_list pos:start="105:36" pos:end="105:54">(<argument pos:start="105:37" pos:end="105:37"><expr pos:start="105:37" pos:end="105:37"><name pos:start="105:37" pos:end="105:37">s</name></expr></argument>, <argument pos:start="105:40" pos:end="105:53"><expr pos:start="105:40" pos:end="105:53"><operator pos:start="105:40" pos:end="105:40">&amp;</operator><name pos:start="105:41" pos:end="105:53"><name pos:start="105:41" pos:end="105:45">async</name><operator pos:start="105:46" pos:end="105:47">-&gt;</operator><name pos:start="105:48" pos:end="105:53">packet</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="107:9" pos:end="107:14">break;</break>



    <default pos:start="111:5" pos:end="111:12">default:</default>

        <comment type="block" pos:start="113:9" pos:end="113:45">/* invalid pid : frame interrupted */</comment>

        <expr_stmt pos:start="115:9" pos:end="115:34"><expr pos:start="115:9" pos:end="115:33"><call pos:start="115:9" pos:end="115:33"><name pos:start="115:9" pos:end="115:23">uhci_async_free</name><argument_list pos:start="115:24" pos:end="115:33">(<argument pos:start="115:25" pos:end="115:25"><expr pos:start="115:25" pos:end="115:25"><name pos:start="115:25" pos:end="115:25">s</name></expr></argument>, <argument pos:start="115:28" pos:end="115:32"><expr pos:start="115:28" pos:end="115:32"><name pos:start="115:28" pos:end="115:32">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:17"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:17">status</name></name> <operator pos:start="117:19" pos:end="117:20">|=</operator> <name pos:start="117:22" pos:end="117:36">UHCI_STS_HCPERR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:27"><expr pos:start="119:9" pos:end="119:26"><call pos:start="119:9" pos:end="119:26"><name pos:start="119:9" pos:end="119:23">uhci_update_irq</name><argument_list pos:start="119:24" pos:end="119:26">(<argument pos:start="119:25" pos:end="119:25"><expr pos:start="119:25" pos:end="119:25"><name pos:start="119:25" pos:end="119:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="121:9" pos:end="121:18">return <expr pos:start="121:16" pos:end="121:17"><operator pos:start="121:16" pos:end="121:16">-</operator><literal type="number" pos:start="121:17" pos:end="121:17">1</literal></expr>;</return>

    </block_content>}</block></switch>

 

    <if_stmt pos:start="127:5" pos:end="133:5"><if pos:start="127:5" pos:end="133:5">if <condition pos:start="127:8" pos:end="127:29">(<expr pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:11">len</name> <operator pos:start="127:13" pos:end="127:14">==</operator> <name pos:start="127:16" pos:end="127:28">USB_RET_ASYNC</name></expr>)</condition> <block pos:start="127:31" pos:end="133:5">{<block_content pos:start="129:9" pos:end="131:17">

        <expr_stmt pos:start="129:9" pos:end="129:34"><expr pos:start="129:9" pos:end="129:33"><call pos:start="129:9" pos:end="129:33"><name pos:start="129:9" pos:end="129:23">uhci_async_link</name><argument_list pos:start="129:24" pos:end="129:33">(<argument pos:start="129:25" pos:end="129:25"><expr pos:start="129:25" pos:end="129:25"><name pos:start="129:25" pos:end="129:25">s</name></expr></argument>, <argument pos:start="129:28" pos:end="129:32"><expr pos:start="129:28" pos:end="129:32"><name pos:start="129:28" pos:end="129:32">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:17">return <expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">2</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="137:5" pos:end="137:28"><expr pos:start="137:5" pos:end="137:27"><name pos:start="137:5" pos:end="137:21"><name pos:start="137:5" pos:end="137:9">async</name><operator pos:start="137:10" pos:end="137:11">-&gt;</operator><name pos:start="137:12" pos:end="137:17">packet</name><operator pos:start="137:18" pos:end="137:18">.</operator><name pos:start="137:19" pos:end="137:21">len</name></name> <operator pos:start="137:23" pos:end="137:23">=</operator> <name pos:start="137:25" pos:end="137:27">len</name></expr>;</expr_stmt>



<label pos:start="141:1" pos:end="141:5"><name pos:start="141:1" pos:end="141:4">done</name>:</label>

    <expr_stmt pos:start="143:5" pos:end="143:51"><expr pos:start="143:5" pos:end="143:50"><name pos:start="143:5" pos:end="143:7">len</name> <operator pos:start="143:9" pos:end="143:9">=</operator> <call pos:start="143:11" pos:end="143:50"><name pos:start="143:11" pos:end="143:26">uhci_complete_td</name><argument_list pos:start="143:27" pos:end="143:50">(<argument pos:start="143:28" pos:end="143:28"><expr pos:start="143:28" pos:end="143:28"><name pos:start="143:28" pos:end="143:28">s</name></expr></argument>, <argument pos:start="143:31" pos:end="143:32"><expr pos:start="143:31" pos:end="143:32"><name pos:start="143:31" pos:end="143:32">td</name></expr></argument>, <argument pos:start="143:35" pos:end="143:39"><expr pos:start="143:35" pos:end="143:39"><name pos:start="143:35" pos:end="143:39">async</name></expr></argument>, <argument pos:start="143:42" pos:end="143:49"><expr pos:start="143:42" pos:end="143:49"><name pos:start="143:42" pos:end="143:49">int_mask</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="145:30"><expr pos:start="145:5" pos:end="145:29"><call pos:start="145:5" pos:end="145:29"><name pos:start="145:5" pos:end="145:19">uhci_async_free</name><argument_list pos:start="145:20" pos:end="145:29">(<argument pos:start="145:21" pos:end="145:21"><expr pos:start="145:21" pos:end="145:21"><name pos:start="145:21" pos:end="145:21">s</name></expr></argument>, <argument pos:start="145:24" pos:end="145:28"><expr pos:start="145:24" pos:end="145:28"><name pos:start="145:24" pos:end="145:28">async</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="147:5" pos:end="147:15">return <expr pos:start="147:12" pos:end="147:14"><name pos:start="147:12" pos:end="147:14">len</name></expr>;</return>

</block_content>}</block></function>
</unit>
