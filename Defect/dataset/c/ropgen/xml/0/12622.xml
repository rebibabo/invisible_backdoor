<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12622.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:33">kvm_arch_remove_sw_breakpoint</name><parameter_list pos:start="1:34" pos:end="1:78">(<parameter pos:start="1:35" pos:end="1:47"><decl pos:start="1:35" pos:end="1:47"><type pos:start="1:35" pos:end="1:47"><name pos:start="1:35" pos:end="1:42">CPUState</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:47">env</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:77"><decl pos:start="1:50" pos:end="1:77"><type pos:start="1:50" pos:end="1:77"><name pos:start="1:50" pos:end="1:73"><name pos:start="1:50" pos:end="1:55">struct</name> <name pos:start="1:57" pos:end="1:73">kvm_sw_breakpoint</name></name> <modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:77">bp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="17:1">{<block_content pos:start="5:5" pos:end="15:13">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">uint8_t</name></type> <name pos:start="5:13" pos:end="5:16">int3</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="13:23"><if pos:start="9:5" pos:end="13:23">if <condition pos:start="9:8" pos:end="11:75">(<expr pos:start="9:9" pos:end="11:74"><call pos:start="9:9" pos:end="9:53"><name pos:start="9:9" pos:end="9:27">cpu_memory_rw_debug</name><argument_list pos:start="9:28" pos:end="9:53">(<argument pos:start="9:29" pos:end="9:31"><expr pos:start="9:29" pos:end="9:31"><name pos:start="9:29" pos:end="9:31">env</name></expr></argument>, <argument pos:start="9:34" pos:end="9:39"><expr pos:start="9:34" pos:end="9:39"><name pos:start="9:34" pos:end="9:39"><name pos:start="9:34" pos:end="9:35">bp</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:39">pc</name></name></expr></argument>, <argument pos:start="9:42" pos:end="9:46"><expr pos:start="9:42" pos:end="9:46"><operator pos:start="9:42" pos:end="9:42">&amp;</operator><name pos:start="9:43" pos:end="9:46">int3</name></expr></argument>, <argument pos:start="9:49" pos:end="9:49"><expr pos:start="9:49" pos:end="9:49"><literal type="number" pos:start="9:49" pos:end="9:49">1</literal></expr></argument>, <argument pos:start="9:52" pos:end="9:52"><expr pos:start="9:52" pos:end="9:52"><literal type="number" pos:start="9:52" pos:end="9:52">0</literal></expr></argument>)</argument_list></call> <operator pos:start="9:55" pos:end="9:56">||</operator> <name pos:start="9:58" pos:end="9:61">int3</name> <operator pos:start="9:63" pos:end="9:64">!=</operator> <literal type="number" pos:start="9:66" pos:end="9:69">0xcc</literal> <operator pos:start="9:71" pos:end="9:72">||</operator>

        <call pos:start="11:9" pos:end="11:74"><name pos:start="11:9" pos:end="11:27">cpu_memory_rw_debug</name><argument_list pos:start="11:28" pos:end="11:74">(<argument pos:start="11:29" pos:end="11:31"><expr pos:start="11:29" pos:end="11:31"><name pos:start="11:29" pos:end="11:31">env</name></expr></argument>, <argument pos:start="11:34" pos:end="11:39"><expr pos:start="11:34" pos:end="11:39"><name pos:start="11:34" pos:end="11:39"><name pos:start="11:34" pos:end="11:35">bp</name><operator pos:start="11:36" pos:end="11:37">-&gt;</operator><name pos:start="11:38" pos:end="11:39">pc</name></name></expr></argument>, <argument pos:start="11:42" pos:end="11:67"><expr pos:start="11:42" pos:end="11:67"><operator pos:start="11:42" pos:end="11:42">(</operator><name pos:start="11:43" pos:end="11:49">uint8_t</name> <operator pos:start="11:51" pos:end="11:51">*</operator><operator pos:start="11:52" pos:end="11:52">)</operator><operator pos:start="11:53" pos:end="11:53">&amp;</operator><name pos:start="11:54" pos:end="11:67"><name pos:start="11:54" pos:end="11:55">bp</name><operator pos:start="11:56" pos:end="11:57">-&gt;</operator><name pos:start="11:58" pos:end="11:67">saved_insn</name></name></expr></argument>, <argument pos:start="11:70" pos:end="11:70"><expr pos:start="11:70" pos:end="11:70"><literal type="number" pos:start="11:70" pos:end="11:70">1</literal></expr></argument>, <argument pos:start="11:73" pos:end="11:73"><expr pos:start="11:73" pos:end="11:73"><literal type="number" pos:start="11:73" pos:end="11:73">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:23"><block_content pos:start="13:9" pos:end="13:23">

        <return pos:start="13:9" pos:end="13:23">return <expr pos:start="13:16" pos:end="13:22"><operator pos:start="13:16" pos:end="13:16">-</operator><name pos:start="13:17" pos:end="13:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>

    <return pos:start="15:5" pos:end="15:13">return <expr pos:start="15:12" pos:end="15:12"><literal type="number" pos:start="15:12" pos:end="15:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
