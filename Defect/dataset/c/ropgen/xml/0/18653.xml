<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18653.c" pos:tabs="8"><function pos:start="1:1" pos:end="19:1"><type pos:start="1:1" pos:end="1:22"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:22">uint32_t</name></type> <name pos:start="1:24" pos:end="1:39">ne2000_mem_readl</name><parameter_list pos:start="1:40" pos:end="1:70">(<parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:51">NE2000State</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:64">uint32_t</name></type> <name pos:start="1:66" pos:end="1:69">addr</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="19:1">{<block_content pos:start="5:5" pos:end="17:5">

    <expr_stmt pos:start="5:5" pos:end="5:15"><expr pos:start="5:5" pos:end="5:14"><name pos:start="5:5" pos:end="5:8">addr</name> <operator pos:start="5:10" pos:end="5:11">&amp;=</operator> <operator pos:start="5:13" pos:end="5:13">~</operator><literal type="number" pos:start="5:14" pos:end="5:14">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="5:17" pos:end="5:60">/* XXX: check exact behaviour if not even */</comment>

    <if_stmt pos:start="7:5" pos:end="17:5"><if pos:start="7:5" pos:end="13:5">if <condition pos:start="7:8" pos:end="9:62">(<expr pos:start="7:9" pos:end="9:61"><name pos:start="7:9" pos:end="7:12">addr</name> <operator pos:start="7:14" pos:end="7:14">&lt;</operator> <literal type="number" pos:start="7:16" pos:end="7:17">32</literal> <operator pos:start="7:19" pos:end="7:20">||</operator>

        <operator pos:start="9:9" pos:end="9:9">(</operator><name pos:start="9:10" pos:end="9:13">addr</name> <operator pos:start="9:15" pos:end="9:16">&gt;=</operator> <name pos:start="9:18" pos:end="9:34">NE2000_PMEM_START</name> <operator pos:start="9:36" pos:end="9:37">&amp;&amp;</operator> <name pos:start="9:39" pos:end="9:42">addr</name> <operator pos:start="9:44" pos:end="9:44">&lt;</operator> <name pos:start="9:46" pos:end="9:60">NE2000_MEM_SIZE</name><operator pos:start="9:61" pos:end="9:61">)</operator></expr>)</condition> <block pos:start="9:64" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:39">

        <return pos:start="11:9" pos:end="11:39">return <expr pos:start="11:16" pos:end="11:38"><call pos:start="11:16" pos:end="11:38"><name pos:start="11:16" pos:end="11:23">ldl_le_p</name><argument_list pos:start="11:24" pos:end="11:38">(<argument pos:start="11:25" pos:end="11:37"><expr pos:start="11:25" pos:end="11:37"><name pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:25">s</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:30">mem</name></name> <operator pos:start="11:32" pos:end="11:32">+</operator> <name pos:start="11:34" pos:end="11:37">addr</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if> <else pos:start="13:7" pos:end="17:5">else <block pos:start="13:12" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:26">

        <return pos:start="15:9" pos:end="15:26">return <expr pos:start="15:16" pos:end="15:25"><literal type="number" pos:start="15:16" pos:end="15:25">0xffffffff</literal></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
