<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6855.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:25">uart_read</name><parameter_list pos:start="1:26" pos:end="3:40">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:63"><decl pos:start="1:41" pos:end="1:63"><type pos:start="1:41" pos:end="1:63"><name pos:start="1:41" pos:end="1:58">target_phys_addr_t</name></type> <name pos:start="1:60" pos:end="1:63">addr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:34">unsigned</name></type> <name pos:start="3:36" pos:end="3:39">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="67:1">{<block_content pos:start="7:5" pos:end="65:13">

    <decl_stmt pos:start="7:5" pos:end="7:30"><decl pos:start="7:5" pos:end="7:29"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">LM32UartState</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:29">= <expr pos:start="7:24" pos:end="7:29"><name pos:start="7:24" pos:end="7:29">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:14">r</name> <init pos:start="9:16" pos:end="9:18">= <expr pos:start="9:18" pos:end="9:18"><literal type="number" pos:start="9:18" pos:end="9:18">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:15"><expr pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:8">addr</name> <operator pos:start="13:10" pos:end="13:12">&gt;&gt;=</operator> <literal type="number" pos:start="13:14" pos:end="13:14">2</literal></expr>;</expr_stmt>

    <switch pos:start="15:5" pos:end="59:5">switch <condition pos:start="15:12" pos:end="15:17">(<expr pos:start="15:13" pos:end="15:16"><name pos:start="15:13" pos:end="15:16">addr</name></expr>)</condition> <block pos:start="15:19" pos:end="59:5">{<block_content pos:start="17:5" pos:end="57:14">

    <case pos:start="17:5" pos:end="17:16">case <expr pos:start="17:10" pos:end="17:15"><name pos:start="17:10" pos:end="17:15">R_RXTX</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:28"><expr pos:start="19:9" pos:end="19:27"><name pos:start="19:9" pos:end="19:9">r</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <name pos:start="19:13" pos:end="19:27"><name pos:start="19:13" pos:end="19:13">s</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:19">regs</name><index pos:start="19:20" pos:end="19:27">[<expr pos:start="19:21" pos:end="19:26"><name pos:start="19:21" pos:end="19:26">R_RXTX</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:34"><expr pos:start="21:9" pos:end="21:33"><name pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:9">s</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:15">regs</name><index pos:start="21:16" pos:end="21:22">[<expr pos:start="21:17" pos:end="21:21"><name pos:start="21:17" pos:end="21:21">R_LSR</name></expr>]</index></name> <operator pos:start="21:24" pos:end="21:25">&amp;=</operator> <operator pos:start="21:27" pos:end="21:27">~</operator><name pos:start="21:28" pos:end="21:33">LSR_DR</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><call pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:23">uart_update_irq</name><argument_list pos:start="23:24" pos:end="23:26">(<argument pos:start="23:25" pos:end="23:25"><expr pos:start="23:25" pos:end="23:25"><name pos:start="23:25" pos:end="23:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="25:9" pos:end="25:14">break;</break>

    <case pos:start="27:5" pos:end="27:15">case <expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:14">R_IIR</name></expr>:</case>

    <case pos:start="29:5" pos:end="29:15">case <expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:14">R_LSR</name></expr>:</case>

    <case pos:start="31:5" pos:end="31:15">case <expr pos:start="31:10" pos:end="31:14"><name pos:start="31:10" pos:end="31:14">R_MSR</name></expr>:</case>

        <expr_stmt pos:start="33:9" pos:end="33:26"><expr pos:start="33:9" pos:end="33:25"><name pos:start="33:9" pos:end="33:9">r</name> <operator pos:start="33:11" pos:end="33:11">=</operator> <name pos:start="33:13" pos:end="33:25"><name pos:start="33:13" pos:end="33:13">s</name><operator pos:start="33:14" pos:end="33:15">-&gt;</operator><name pos:start="33:16" pos:end="33:19">regs</name><index pos:start="33:20" pos:end="33:25">[<expr pos:start="33:21" pos:end="33:24"><name pos:start="33:21" pos:end="33:24">addr</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:15">case <expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:14">R_IER</name></expr>:</case>

    <case pos:start="39:5" pos:end="39:15">case <expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:14">R_LCR</name></expr>:</case>

    <case pos:start="41:5" pos:end="41:15">case <expr pos:start="41:10" pos:end="41:14"><name pos:start="41:10" pos:end="41:14">R_MCR</name></expr>:</case>

    <case pos:start="43:5" pos:end="43:15">case <expr pos:start="43:10" pos:end="43:14"><name pos:start="43:10" pos:end="43:14">R_DIV</name></expr>:</case>

        <expr_stmt pos:start="45:9" pos:end="47:43"><expr pos:start="45:9" pos:end="47:42"><call pos:start="45:9" pos:end="47:42"><name pos:start="45:9" pos:end="45:20">error_report</name><argument_list pos:start="45:21" pos:end="47:42">(<argument pos:start="45:22" pos:end="47:30"><expr pos:start="45:22" pos:end="47:30"><literal type="string" pos:start="45:22" pos:end="45:71">"lm32_uart: read access to write only register 0x"</literal>

                <name pos:start="47:17" pos:end="47:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="47:33" pos:end="47:41"><expr pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:36">addr</name> <operator pos:start="47:38" pos:end="47:39">&lt;&lt;</operator> <literal type="number" pos:start="47:41" pos:end="47:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="49:9" pos:end="49:14">break;</break>

    <default pos:start="51:5" pos:end="51:12">default:</default>

        <expr_stmt pos:start="53:9" pos:end="55:43"><expr pos:start="53:9" pos:end="55:42"><call pos:start="53:9" pos:end="55:42"><name pos:start="53:9" pos:end="53:20">error_report</name><argument_list pos:start="53:21" pos:end="55:42">(<argument pos:start="53:22" pos:end="55:30"><expr pos:start="53:22" pos:end="55:30"><literal type="string" pos:start="53:22" pos:end="53:68">"lm32_uart: read access to unknown register 0x"</literal>

                <name pos:start="55:17" pos:end="55:30">TARGET_FMT_plx</name></expr></argument>, <argument pos:start="55:33" pos:end="55:41"><expr pos:start="55:33" pos:end="55:41"><name pos:start="55:33" pos:end="55:36">addr</name> <operator pos:start="55:38" pos:end="55:39">&lt;&lt;</operator> <literal type="number" pos:start="55:41" pos:end="55:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="63:5" pos:end="63:46"><expr pos:start="63:5" pos:end="63:45"><call pos:start="63:5" pos:end="63:45"><name pos:start="63:5" pos:end="63:31">trace_lm32_uart_memory_read</name><argument_list pos:start="63:32" pos:end="63:45">(<argument pos:start="63:33" pos:end="63:41"><expr pos:start="63:33" pos:end="63:41"><name pos:start="63:33" pos:end="63:36">addr</name> <operator pos:start="63:38" pos:end="63:39">&lt;&lt;</operator> <literal type="number" pos:start="63:41" pos:end="63:41">2</literal></expr></argument>, <argument pos:start="63:44" pos:end="63:44"><expr pos:start="63:44" pos:end="63:44"><name pos:start="63:44" pos:end="63:44">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:13">return <expr pos:start="65:12" pos:end="65:12"><name pos:start="65:12" pos:end="65:12">r</name></expr>;</return>

</block_content>}</block></function>
</unit>
