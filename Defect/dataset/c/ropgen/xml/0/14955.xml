<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14955.c" pos:tabs="8"><function pos:start="1:1" pos:end="191:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:25">mcf_fec_write</name><parameter_list pos:start="1:26" pos:end="3:56">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:30">void</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:38">opaque</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:51"><decl pos:start="1:41" pos:end="1:51"><type pos:start="1:41" pos:end="1:51"><name pos:start="1:41" pos:end="1:46">hwaddr</name></type> <name pos:start="1:48" pos:end="1:51">addr</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:40"><decl pos:start="3:27" pos:end="3:40"><type pos:start="3:27" pos:end="3:40"><name pos:start="3:27" pos:end="3:34">uint64_t</name></type> <name pos:start="3:36" pos:end="3:40">value</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:55"><decl pos:start="3:43" pos:end="3:55"><type pos:start="3:43" pos:end="3:55"><name pos:start="3:43" pos:end="3:50">unsigned</name></type> <name pos:start="3:52" pos:end="3:55">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="191:1">{<block_content pos:start="7:5" pos:end="189:22">

    <decl_stmt pos:start="7:5" pos:end="7:47"><decl pos:start="7:5" pos:end="7:46"><type pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:17">mcf_fec_state</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:20">s</name> <init pos:start="7:22" pos:end="7:46">= <expr pos:start="7:24" pos:end="7:46"><operator pos:start="7:24" pos:end="7:24">(</operator><name pos:start="7:25" pos:end="7:37">mcf_fec_state</name> <operator pos:start="7:39" pos:end="7:39">*</operator><operator pos:start="7:40" pos:end="7:40">)</operator><name pos:start="7:41" pos:end="7:46">opaque</name></expr></init></decl>;</decl_stmt>

    <switch pos:start="9:5" pos:end="187:5">switch <condition pos:start="9:12" pos:end="9:25">(<expr pos:start="9:13" pos:end="9:24"><name pos:start="9:13" pos:end="9:16">addr</name> <operator pos:start="9:18" pos:end="9:18">&amp;</operator> <literal type="number" pos:start="9:20" pos:end="9:24">0x3ff</literal></expr>)</condition> <block pos:start="9:27" pos:end="187:5">{<block_content pos:start="11:5" pos:end="185:64">

    <case pos:start="11:5" pos:end="11:15">case <expr pos:start="11:10" pos:end="11:14"><literal type="number" pos:start="11:10" pos:end="11:14">0x004</literal></expr>:</case>

        <expr_stmt pos:start="13:9" pos:end="13:25"><expr pos:start="13:9" pos:end="13:24"><name pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">s</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">eir</name></name> <operator pos:start="13:16" pos:end="13:17">&amp;=</operator> <operator pos:start="13:19" pos:end="13:19">~</operator><name pos:start="13:20" pos:end="13:24">value</name></expr>;</expr_stmt>

        <break pos:start="15:9" pos:end="15:14">break;</break>

    <case pos:start="17:5" pos:end="17:15">case <expr pos:start="17:10" pos:end="17:14"><literal type="number" pos:start="17:10" pos:end="17:14">0x008</literal></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:24"><expr pos:start="19:9" pos:end="19:23"><name pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:9">s</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:15">eimr</name></name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:23">value</name></expr>;</expr_stmt>

        <break pos:start="21:9" pos:end="21:14">break;</break>

    <case pos:start="23:5" pos:end="23:15">case <expr pos:start="23:10" pos:end="23:14"><literal type="number" pos:start="23:10" pos:end="23:14">0x010</literal></expr>:</case> <comment type="block" pos:start="23:17" pos:end="23:26">/* RDAR */</comment>

        <if_stmt pos:start="25:9" pos:end="31:9"><if pos:start="25:9" pos:end="31:9">if <condition pos:start="25:12" pos:end="25:48">(<expr pos:start="25:13" pos:end="25:47"><operator pos:start="25:13" pos:end="25:13">(</operator><name pos:start="25:14" pos:end="25:19"><name pos:start="25:14" pos:end="25:14">s</name><operator pos:start="25:15" pos:end="25:16">-&gt;</operator><name pos:start="25:17" pos:end="25:19">ecr</name></name> <operator pos:start="25:21" pos:end="25:21">&amp;</operator> <name pos:start="25:23" pos:end="25:28">FEC_EN</name><operator pos:start="25:29" pos:end="25:29">)</operator> <operator pos:start="25:31" pos:end="25:32">&amp;&amp;</operator> <operator pos:start="25:34" pos:end="25:34">!</operator><name pos:start="25:35" pos:end="25:47"><name pos:start="25:35" pos:end="25:35">s</name><operator pos:start="25:36" pos:end="25:37">-&gt;</operator><name pos:start="25:38" pos:end="25:47">rx_enabled</name></name></expr>)</condition> <block pos:start="25:50" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:33">

            <expr_stmt pos:start="27:13" pos:end="27:35"><expr pos:start="27:13" pos:end="27:34"><call pos:start="27:13" pos:end="27:34"><name pos:start="27:13" pos:end="27:19">DPRINTF</name><argument_list pos:start="27:20" pos:end="27:34">(<argument pos:start="27:21" pos:end="27:33"><expr pos:start="27:21" pos:end="27:33"><literal type="string" pos:start="27:21" pos:end="27:33">"RX enable\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:33"><expr pos:start="29:13" pos:end="29:32"><call pos:start="29:13" pos:end="29:32"><name pos:start="29:13" pos:end="29:29">mcf_fec_enable_rx</name><argument_list pos:start="29:30" pos:end="29:32">(<argument pos:start="29:31" pos:end="29:31"><expr pos:start="29:31" pos:end="29:31"><name pos:start="29:31" pos:end="29:31">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>

    <case pos:start="35:5" pos:end="35:15">case <expr pos:start="35:10" pos:end="35:14"><literal type="number" pos:start="35:10" pos:end="35:14">0x014</literal></expr>:</case> <comment type="block" pos:start="35:17" pos:end="35:26">/* TDAR */</comment>

        <if_stmt pos:start="37:9" pos:end="41:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:28">(<expr pos:start="37:13" pos:end="37:27"><name pos:start="37:13" pos:end="37:18"><name pos:start="37:13" pos:end="37:13">s</name><operator pos:start="37:14" pos:end="37:15">-&gt;</operator><name pos:start="37:16" pos:end="37:18">ecr</name></name> <operator pos:start="37:20" pos:end="37:20">&amp;</operator> <name pos:start="37:22" pos:end="37:27">FEC_EN</name></expr>)</condition> <block pos:start="37:30" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:29">

            <expr_stmt pos:start="39:13" pos:end="39:29"><expr pos:start="39:13" pos:end="39:28"><call pos:start="39:13" pos:end="39:28"><name pos:start="39:13" pos:end="39:25">mcf_fec_do_tx</name><argument_list pos:start="39:26" pos:end="39:28">(<argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><name pos:start="39:27" pos:end="39:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:15">case <expr pos:start="45:10" pos:end="45:14"><literal type="number" pos:start="45:10" pos:end="45:14">0x024</literal></expr>:</case>

        <expr_stmt pos:start="47:9" pos:end="47:23"><expr pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:14"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:14">ecr</name></name> <operator pos:start="47:16" pos:end="47:16">=</operator> <name pos:start="47:18" pos:end="47:22">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="49:9" pos:end="55:9"><if pos:start="49:9" pos:end="55:9">if <condition pos:start="49:12" pos:end="49:30">(<expr pos:start="49:13" pos:end="49:29"><name pos:start="49:13" pos:end="49:17">value</name> <operator pos:start="49:19" pos:end="49:19">&amp;</operator> <name pos:start="49:21" pos:end="49:29">FEC_RESET</name></expr>)</condition> <block pos:start="49:32" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:29">

            <expr_stmt pos:start="51:13" pos:end="51:31"><expr pos:start="51:13" pos:end="51:30"><call pos:start="51:13" pos:end="51:30"><name pos:start="51:13" pos:end="51:19">DPRINTF</name><argument_list pos:start="51:20" pos:end="51:30">(<argument pos:start="51:21" pos:end="51:29"><expr pos:start="51:21" pos:end="51:29"><literal type="string" pos:start="51:21" pos:end="51:29">"Reset\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:28"><call pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:25">mcf_fec_reset</name><argument_list pos:start="53:26" pos:end="53:28">(<argument pos:start="53:27" pos:end="53:27"><expr pos:start="53:27" pos:end="53:27"><name pos:start="53:27" pos:end="53:27">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="61:9"><if pos:start="57:9" pos:end="61:9">if <condition pos:start="57:12" pos:end="57:35">(<expr pos:start="57:13" pos:end="57:34"><operator pos:start="57:13" pos:end="57:13">(</operator><name pos:start="57:14" pos:end="57:19"><name pos:start="57:14" pos:end="57:14">s</name><operator pos:start="57:15" pos:end="57:16">-&gt;</operator><name pos:start="57:17" pos:end="57:19">ecr</name></name> <operator pos:start="57:21" pos:end="57:21">&amp;</operator> <name pos:start="57:23" pos:end="57:28">FEC_EN</name><operator pos:start="57:29" pos:end="57:29">)</operator> <operator pos:start="57:31" pos:end="57:32">==</operator> <literal type="number" pos:start="57:34" pos:end="57:34">0</literal></expr>)</condition> <block pos:start="57:37" pos:end="61:9">{<block_content pos:start="59:13" pos:end="59:30">

            <expr_stmt pos:start="59:13" pos:end="59:30"><expr pos:start="59:13" pos:end="59:29"><name pos:start="59:13" pos:end="59:25"><name pos:start="59:13" pos:end="59:13">s</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:25">rx_enabled</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <literal type="number" pos:start="59:29" pos:end="59:29">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <case pos:start="65:5" pos:end="65:15">case <expr pos:start="65:10" pos:end="65:14"><literal type="number" pos:start="65:10" pos:end="65:14">0x040</literal></expr>:</case>

        <expr_stmt pos:start="67:9" pos:end="67:24"><expr pos:start="67:9" pos:end="67:23"><name pos:start="67:9" pos:end="67:15"><name pos:start="67:9" pos:end="67:9">s</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:15">mmfr</name></name> <operator pos:start="67:17" pos:end="67:17">=</operator> <name pos:start="67:19" pos:end="67:23">value</name></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="69:30"><expr pos:start="69:9" pos:end="69:29"><name pos:start="69:9" pos:end="69:14"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:14">eir</name></name> <operator pos:start="69:16" pos:end="69:17">|=</operator> <name pos:start="69:19" pos:end="69:29">FEC_INT_MII</name></expr>;</expr_stmt>

        <break pos:start="71:9" pos:end="71:14">break;</break>

    <case pos:start="73:5" pos:end="73:15">case <expr pos:start="73:10" pos:end="73:14"><literal type="number" pos:start="73:10" pos:end="73:14">0x044</literal></expr>:</case>

        <expr_stmt pos:start="75:9" pos:end="75:31"><expr pos:start="75:9" pos:end="75:30"><name pos:start="75:9" pos:end="75:15"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:15">mscr</name></name> <operator pos:start="75:17" pos:end="75:17">=</operator> <name pos:start="75:19" pos:end="75:23">value</name> <operator pos:start="75:25" pos:end="75:25">&amp;</operator> <literal type="number" pos:start="75:27" pos:end="75:30">0xfe</literal></expr>;</expr_stmt>

        <break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:15">case <expr pos:start="79:10" pos:end="79:14"><literal type="number" pos:start="79:10" pos:end="79:14">0x064</literal></expr>:</case>

        <comment type="block" pos:start="81:9" pos:end="81:35">/* TODO: Implement MIB.  */</comment>

        <break pos:start="83:9" pos:end="83:14">break;</break>

    <case pos:start="85:5" pos:end="85:15">case <expr pos:start="85:10" pos:end="85:14"><literal type="number" pos:start="85:10" pos:end="85:14">0x084</literal></expr>:</case>

        <expr_stmt pos:start="87:9" pos:end="87:36"><expr pos:start="87:9" pos:end="87:35"><name pos:start="87:9" pos:end="87:14"><name pos:start="87:9" pos:end="87:9">s</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:14">rcr</name></name> <operator pos:start="87:16" pos:end="87:16">=</operator> <name pos:start="87:18" pos:end="87:22">value</name> <operator pos:start="87:24" pos:end="87:24">&amp;</operator> <literal type="number" pos:start="87:26" pos:end="87:35">0x07ff003f</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="89:9" pos:end="89:41">/* TODO: Implement LOOP mode.  */</comment>

        <break pos:start="91:9" pos:end="91:14">break;</break>

    <case pos:start="93:5" pos:end="93:15">case <expr pos:start="93:10" pos:end="93:14"><literal type="number" pos:start="93:10" pos:end="93:14">0x0c4</literal></expr>:</case> <comment type="block" pos:start="93:17" pos:end="93:25">/* TCR */</comment>

        <comment type="block" pos:start="95:9" pos:end="95:65">/* We transmit immediately, so raise GRA immediately.  */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:23"><expr pos:start="97:9" pos:end="97:22"><name pos:start="97:9" pos:end="97:14"><name pos:start="97:9" pos:end="97:9">s</name><operator pos:start="97:10" pos:end="97:11">-&gt;</operator><name pos:start="97:12" pos:end="97:14">tcr</name></name> <operator pos:start="97:16" pos:end="97:16">=</operator> <name pos:start="97:18" pos:end="97:22">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="99:9" pos:end="101:34"><if pos:start="99:9" pos:end="101:34">if <condition pos:start="99:12" pos:end="99:22">(<expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:17">value</name> <operator pos:start="99:19" pos:end="99:19">&amp;</operator> <literal type="number" pos:start="99:21" pos:end="99:21">1</literal></expr>)</condition><block type="pseudo" pos:start="101:13" pos:end="101:34"><block_content pos:start="101:13" pos:end="101:34">

            <expr_stmt pos:start="101:13" pos:end="101:34"><expr pos:start="101:13" pos:end="101:33"><name pos:start="101:13" pos:end="101:18"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:18">eir</name></name> <operator pos:start="101:20" pos:end="101:21">|=</operator> <name pos:start="101:23" pos:end="101:33">FEC_INT_GRA</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="103:9" pos:end="103:14">break;</break>

    <case pos:start="105:5" pos:end="105:15">case <expr pos:start="105:10" pos:end="105:14"><literal type="number" pos:start="105:10" pos:end="105:14">0x0e4</literal></expr>:</case> <comment type="block" pos:start="105:17" pos:end="105:26">/* PALR */</comment>

        <expr_stmt pos:start="107:9" pos:end="107:43"><expr pos:start="107:9" pos:end="107:42"><name pos:start="107:9" pos:end="107:28"><name pos:start="107:9" pos:end="107:9">s</name><operator pos:start="107:10" pos:end="107:11">-&gt;</operator><name pos:start="107:12" pos:end="107:15">conf</name><operator pos:start="107:16" pos:end="107:16">.</operator><name pos:start="107:17" pos:end="107:23">macaddr</name><operator pos:start="107:24" pos:end="107:24">.</operator><name pos:start="107:25" pos:end="107:25">a</name><index pos:start="107:26" pos:end="107:28">[<expr pos:start="107:27" pos:end="107:27"><literal type="number" pos:start="107:27" pos:end="107:27">0</literal></expr>]</index></name> <operator pos:start="107:30" pos:end="107:30">=</operator> <name pos:start="107:32" pos:end="107:36">value</name> <operator pos:start="107:38" pos:end="107:39">&gt;&gt;</operator> <literal type="number" pos:start="107:41" pos:end="107:42">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="109:43"><expr pos:start="109:9" pos:end="109:42"><name pos:start="109:9" pos:end="109:28"><name pos:start="109:9" pos:end="109:9">s</name><operator pos:start="109:10" pos:end="109:11">-&gt;</operator><name pos:start="109:12" pos:end="109:15">conf</name><operator pos:start="109:16" pos:end="109:16">.</operator><name pos:start="109:17" pos:end="109:23">macaddr</name><operator pos:start="109:24" pos:end="109:24">.</operator><name pos:start="109:25" pos:end="109:25">a</name><index pos:start="109:26" pos:end="109:28">[<expr pos:start="109:27" pos:end="109:27"><literal type="number" pos:start="109:27" pos:end="109:27">1</literal></expr>]</index></name> <operator pos:start="109:30" pos:end="109:30">=</operator> <name pos:start="109:32" pos:end="109:36">value</name> <operator pos:start="109:38" pos:end="109:39">&gt;&gt;</operator> <literal type="number" pos:start="109:41" pos:end="109:42">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:42"><expr pos:start="111:9" pos:end="111:41"><name pos:start="111:9" pos:end="111:28"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:15">conf</name><operator pos:start="111:16" pos:end="111:16">.</operator><name pos:start="111:17" pos:end="111:23">macaddr</name><operator pos:start="111:24" pos:end="111:24">.</operator><name pos:start="111:25" pos:end="111:25">a</name><index pos:start="111:26" pos:end="111:28">[<expr pos:start="111:27" pos:end="111:27"><literal type="number" pos:start="111:27" pos:end="111:27">2</literal></expr>]</index></name> <operator pos:start="111:30" pos:end="111:30">=</operator> <name pos:start="111:32" pos:end="111:36">value</name> <operator pos:start="111:38" pos:end="111:39">&gt;&gt;</operator> <literal type="number" pos:start="111:41" pos:end="111:41">8</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:37"><expr pos:start="113:9" pos:end="113:36"><name pos:start="113:9" pos:end="113:28"><name pos:start="113:9" pos:end="113:9">s</name><operator pos:start="113:10" pos:end="113:11">-&gt;</operator><name pos:start="113:12" pos:end="113:15">conf</name><operator pos:start="113:16" pos:end="113:16">.</operator><name pos:start="113:17" pos:end="113:23">macaddr</name><operator pos:start="113:24" pos:end="113:24">.</operator><name pos:start="113:25" pos:end="113:25">a</name><index pos:start="113:26" pos:end="113:28">[<expr pos:start="113:27" pos:end="113:27"><literal type="number" pos:start="113:27" pos:end="113:27">3</literal></expr>]</index></name> <operator pos:start="113:30" pos:end="113:30">=</operator> <name pos:start="113:32" pos:end="113:36">value</name></expr>;</expr_stmt>

        <break pos:start="115:9" pos:end="115:14">break;</break>

    <case pos:start="117:5" pos:end="117:15">case <expr pos:start="117:10" pos:end="117:14"><literal type="number" pos:start="117:10" pos:end="117:14">0x0e8</literal></expr>:</case> <comment type="block" pos:start="117:17" pos:end="117:26">/* PAUR */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:43"><expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:28"><name pos:start="119:9" pos:end="119:9">s</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:15">conf</name><operator pos:start="119:16" pos:end="119:16">.</operator><name pos:start="119:17" pos:end="119:23">macaddr</name><operator pos:start="119:24" pos:end="119:24">.</operator><name pos:start="119:25" pos:end="119:25">a</name><index pos:start="119:26" pos:end="119:28">[<expr pos:start="119:27" pos:end="119:27"><literal type="number" pos:start="119:27" pos:end="119:27">4</literal></expr>]</index></name> <operator pos:start="119:30" pos:end="119:30">=</operator> <name pos:start="119:32" pos:end="119:36">value</name> <operator pos:start="119:38" pos:end="119:39">&gt;&gt;</operator> <literal type="number" pos:start="119:41" pos:end="119:42">24</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:43"><expr pos:start="121:9" pos:end="121:42"><name pos:start="121:9" pos:end="121:28"><name pos:start="121:9" pos:end="121:9">s</name><operator pos:start="121:10" pos:end="121:11">-&gt;</operator><name pos:start="121:12" pos:end="121:15">conf</name><operator pos:start="121:16" pos:end="121:16">.</operator><name pos:start="121:17" pos:end="121:23">macaddr</name><operator pos:start="121:24" pos:end="121:24">.</operator><name pos:start="121:25" pos:end="121:25">a</name><index pos:start="121:26" pos:end="121:28">[<expr pos:start="121:27" pos:end="121:27"><literal type="number" pos:start="121:27" pos:end="121:27">5</literal></expr>]</index></name> <operator pos:start="121:30" pos:end="121:30">=</operator> <name pos:start="121:32" pos:end="121:36">value</name> <operator pos:start="121:38" pos:end="121:39">&gt;&gt;</operator> <literal type="number" pos:start="121:41" pos:end="121:42">16</literal></expr>;</expr_stmt>

        <break pos:start="123:9" pos:end="123:14">break;</break>

    <case pos:start="125:5" pos:end="125:15">case <expr pos:start="125:10" pos:end="125:14"><literal type="number" pos:start="125:10" pos:end="125:14">0x0ec</literal></expr>:</case>

        <comment type="block" pos:start="127:9" pos:end="127:17">/* OPD */</comment>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    <case pos:start="131:5" pos:end="131:15">case <expr pos:start="131:10" pos:end="131:14"><literal type="number" pos:start="131:10" pos:end="131:14">0x118</literal></expr>:</case>

    <case pos:start="133:5" pos:end="133:15">case <expr pos:start="133:10" pos:end="133:14"><literal type="number" pos:start="133:10" pos:end="133:14">0x11c</literal></expr>:</case>

    <case pos:start="135:5" pos:end="135:15">case <expr pos:start="135:10" pos:end="135:14"><literal type="number" pos:start="135:10" pos:end="135:14">0x120</literal></expr>:</case>

    <case pos:start="137:5" pos:end="137:15">case <expr pos:start="137:10" pos:end="137:14"><literal type="number" pos:start="137:10" pos:end="137:14">0x124</literal></expr>:</case>

        <comment type="block" pos:start="139:9" pos:end="139:50">/* TODO: implement MAC hash filtering.  */</comment>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <case pos:start="143:5" pos:end="143:15">case <expr pos:start="143:10" pos:end="143:14"><literal type="number" pos:start="143:10" pos:end="143:14">0x144</literal></expr>:</case>

        <expr_stmt pos:start="145:9" pos:end="145:28"><expr pos:start="145:9" pos:end="145:27"><name pos:start="145:9" pos:end="145:15"><name pos:start="145:9" pos:end="145:9">s</name><operator pos:start="145:10" pos:end="145:11">-&gt;</operator><name pos:start="145:12" pos:end="145:15">tfwr</name></name> <operator pos:start="145:17" pos:end="145:17">=</operator> <name pos:start="145:19" pos:end="145:23">value</name> <operator pos:start="145:25" pos:end="145:25">&amp;</operator> <literal type="number" pos:start="145:27" pos:end="145:27">3</literal></expr>;</expr_stmt>

        <break pos:start="147:9" pos:end="147:14">break;</break>

    <case pos:start="149:5" pos:end="149:15">case <expr pos:start="149:10" pos:end="149:14"><literal type="number" pos:start="149:10" pos:end="149:14">0x14c</literal></expr>:</case>

        <comment type="block" pos:start="151:9" pos:end="151:35">/* FRBR writes ignored.  */</comment>

        <break pos:start="153:9" pos:end="153:14">break;</break>

    <case pos:start="155:5" pos:end="155:15">case <expr pos:start="155:10" pos:end="155:14"><literal type="number" pos:start="155:10" pos:end="155:14">0x150</literal></expr>:</case>

        <expr_stmt pos:start="157:9" pos:end="157:42"><expr pos:start="157:9" pos:end="157:41"><name pos:start="157:9" pos:end="157:15"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:15">rfsr</name></name> <operator pos:start="157:17" pos:end="157:17">=</operator> <operator pos:start="157:19" pos:end="157:19">(</operator><name pos:start="157:20" pos:end="157:24">value</name> <operator pos:start="157:26" pos:end="157:26">&amp;</operator> <literal type="number" pos:start="157:28" pos:end="157:32">0x3fc</literal><operator pos:start="157:33" pos:end="157:33">)</operator> <operator pos:start="157:35" pos:end="157:35">|</operator> <literal type="number" pos:start="157:37" pos:end="157:41">0x400</literal></expr>;</expr_stmt>

        <break pos:start="159:9" pos:end="159:14">break;</break>

    <case pos:start="161:5" pos:end="161:15">case <expr pos:start="161:10" pos:end="161:14"><literal type="number" pos:start="161:10" pos:end="161:14">0x180</literal></expr>:</case>

        <expr_stmt pos:start="163:9" pos:end="163:30"><expr pos:start="163:9" pos:end="163:29"><name pos:start="163:9" pos:end="163:16"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:16">erdsr</name></name> <operator pos:start="163:18" pos:end="163:18">=</operator> <name pos:start="163:20" pos:end="163:24">value</name> <operator pos:start="163:26" pos:end="163:26">&amp;</operator> <operator pos:start="163:28" pos:end="163:28">~</operator><literal type="number" pos:start="163:29" pos:end="163:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:36"><expr pos:start="165:9" pos:end="165:35"><name pos:start="165:9" pos:end="165:24"><name pos:start="165:9" pos:end="165:9">s</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:24">rx_descriptor</name></name> <operator pos:start="165:26" pos:end="165:26">=</operator> <name pos:start="165:28" pos:end="165:35"><name pos:start="165:28" pos:end="165:28">s</name><operator pos:start="165:29" pos:end="165:30">-&gt;</operator><name pos:start="165:31" pos:end="165:35">erdsr</name></name></expr>;</expr_stmt>

        <break pos:start="167:9" pos:end="167:14">break;</break>

    <case pos:start="169:5" pos:end="169:15">case <expr pos:start="169:10" pos:end="169:14"><literal type="number" pos:start="169:10" pos:end="169:14">0x184</literal></expr>:</case>

        <expr_stmt pos:start="171:9" pos:end="171:30"><expr pos:start="171:9" pos:end="171:29"><name pos:start="171:9" pos:end="171:16"><name pos:start="171:9" pos:end="171:9">s</name><operator pos:start="171:10" pos:end="171:11">-&gt;</operator><name pos:start="171:12" pos:end="171:16">etdsr</name></name> <operator pos:start="171:18" pos:end="171:18">=</operator> <name pos:start="171:20" pos:end="171:24">value</name> <operator pos:start="171:26" pos:end="171:26">&amp;</operator> <operator pos:start="171:28" pos:end="171:28">~</operator><literal type="number" pos:start="171:29" pos:end="171:29">3</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="173:9" pos:end="173:36"><expr pos:start="173:9" pos:end="173:35"><name pos:start="173:9" pos:end="173:24"><name pos:start="173:9" pos:end="173:9">s</name><operator pos:start="173:10" pos:end="173:11">-&gt;</operator><name pos:start="173:12" pos:end="173:24">tx_descriptor</name></name> <operator pos:start="173:26" pos:end="173:26">=</operator> <name pos:start="173:28" pos:end="173:35"><name pos:start="173:28" pos:end="173:28">s</name><operator pos:start="173:29" pos:end="173:30">-&gt;</operator><name pos:start="173:31" pos:end="173:35">etdsr</name></name></expr>;</expr_stmt>

        <break pos:start="175:9" pos:end="175:14">break;</break>

    <case pos:start="177:5" pos:end="177:15">case <expr pos:start="177:10" pos:end="177:14"><literal type="number" pos:start="177:10" pos:end="177:14">0x188</literal></expr>:</case>

        <expr_stmt pos:start="179:9" pos:end="179:33"><expr pos:start="179:9" pos:end="179:32"><name pos:start="179:9" pos:end="179:16"><name pos:start="179:9" pos:end="179:9">s</name><operator pos:start="179:10" pos:end="179:11">-&gt;</operator><name pos:start="179:12" pos:end="179:16">emrbr</name></name> <operator pos:start="179:18" pos:end="179:18">=</operator> <name pos:start="179:20" pos:end="179:24">value</name> <operator pos:start="179:26" pos:end="179:26">&amp;</operator> <literal type="number" pos:start="179:28" pos:end="179:32">0x7f0</literal></expr>;</expr_stmt>

        <break pos:start="181:9" pos:end="181:14">break;</break>

    <default pos:start="183:5" pos:end="183:12">default:</default>

        <expr_stmt pos:start="185:9" pos:end="185:64"><expr pos:start="185:9" pos:end="185:63"><call pos:start="185:9" pos:end="185:63"><name pos:start="185:9" pos:end="185:16">hw_error</name><argument_list pos:start="185:17" pos:end="185:63">(<argument pos:start="185:18" pos:end="185:51"><expr pos:start="185:18" pos:end="185:51"><literal type="string" pos:start="185:18" pos:end="185:51">"mcf_fec_write Bad address 0x%x\n"</literal></expr></argument>, <argument pos:start="185:54" pos:end="185:62"><expr pos:start="185:54" pos:end="185:62"><operator pos:start="185:54" pos:end="185:54">(</operator><name pos:start="185:55" pos:end="185:57">int</name><operator pos:start="185:58" pos:end="185:58">)</operator><name pos:start="185:59" pos:end="185:62">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

    <expr_stmt pos:start="189:5" pos:end="189:22"><expr pos:start="189:5" pos:end="189:21"><call pos:start="189:5" pos:end="189:21"><name pos:start="189:5" pos:end="189:18">mcf_fec_update</name><argument_list pos:start="189:19" pos:end="189:21">(<argument pos:start="189:20" pos:end="189:20"><expr pos:start="189:20" pos:end="189:20"><name pos:start="189:20" pos:end="189:20">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
