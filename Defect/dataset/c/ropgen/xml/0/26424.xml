<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26424.c" pos:tabs="8"><function pos:start="1:1" pos:end="23:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:21">check_mct</name><parameter_list pos:start="1:22" pos:end="3:66">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:29">uint8_t</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">ref0</name></decl></parameter>, <parameter pos:start="1:38" pos:end="1:50"><decl pos:start="1:38" pos:end="1:50"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:44">uint8_t</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">ref1</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:59">uint8_t</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:65">ref2</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:35"><decl pos:start="3:23" pos:end="3:35"><type pos:start="3:23" pos:end="3:35"><name pos:start="3:23" pos:end="3:29">uint8_t</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:35">new0</name></decl></parameter>, <parameter pos:start="3:38" pos:end="3:50"><decl pos:start="3:38" pos:end="3:50"><type pos:start="3:38" pos:end="3:50"><name pos:start="3:38" pos:end="3:44">uint8_t</name> <modifier pos:start="3:46" pos:end="3:46">*</modifier></type><name pos:start="3:47" pos:end="3:50">new1</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:65"><decl pos:start="3:53" pos:end="3:65"><type pos:start="3:53" pos:end="3:65"><name pos:start="3:53" pos:end="3:59">uint8_t</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:65">new2</name></decl></parameter>)</parameter_list> <block pos:start="3:68" pos:end="23:1">{<block_content pos:start="5:5" pos:end="21:60">

    <macro pos:start="5:5" pos:end="5:69"><name pos:start="5:5" pos:end="5:16">declare_func</name><argument_list pos:start="5:17" pos:end="5:69">(<argument pos:start="5:18" pos:end="5:21">void</argument>, <argument pos:start="5:24" pos:end="5:33">void *src0</argument>, <argument pos:start="5:36" pos:end="5:45">void *src1</argument>, <argument pos:start="5:48" pos:end="5:57">void *src2</argument>, <argument pos:start="5:60" pos:end="5:68">int csize</argument>)</argument_list></macro><empty_stmt pos:start="5:70" pos:end="5:70">;</empty_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:24"><expr pos:start="9:5" pos:end="9:23"><call pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">randomize_buffers</name><argument_list pos:start="9:22" pos:end="9:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:59"><expr pos:start="11:5" pos:end="11:58"><call pos:start="11:5" pos:end="11:58"><name pos:start="11:5" pos:end="11:12">call_ref</name><argument_list pos:start="11:13" pos:end="11:58">(<argument pos:start="11:14" pos:end="11:17"><expr pos:start="11:14" pos:end="11:17"><name pos:start="11:14" pos:end="11:17">ref0</name></expr></argument>, <argument pos:start="11:20" pos:end="11:23"><expr pos:start="11:20" pos:end="11:23"><name pos:start="11:20" pos:end="11:23">ref1</name></expr></argument>, <argument pos:start="11:26" pos:end="11:29"><expr pos:start="11:26" pos:end="11:29"><name pos:start="11:26" pos:end="11:29">ref2</name></expr></argument>, <argument pos:start="11:32" pos:end="11:57"><expr pos:start="11:32" pos:end="11:57"><name pos:start="11:32" pos:end="11:39">BUF_SIZE</name> <operator pos:start="11:41" pos:end="11:41">/</operator> <sizeof pos:start="11:43" pos:end="11:57">sizeof<argument_list pos:start="11:49" pos:end="11:57">(<argument pos:start="11:50" pos:end="11:56"><expr pos:start="11:50" pos:end="11:56"><name pos:start="11:50" pos:end="11:56">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:59"><expr pos:start="13:5" pos:end="13:58"><call pos:start="13:5" pos:end="13:58"><name pos:start="13:5" pos:end="13:12">call_new</name><argument_list pos:start="13:13" pos:end="13:58">(<argument pos:start="13:14" pos:end="13:17"><expr pos:start="13:14" pos:end="13:17"><name pos:start="13:14" pos:end="13:17">new0</name></expr></argument>, <argument pos:start="13:20" pos:end="13:23"><expr pos:start="13:20" pos:end="13:23"><name pos:start="13:20" pos:end="13:23">new1</name></expr></argument>, <argument pos:start="13:26" pos:end="13:29"><expr pos:start="13:26" pos:end="13:29"><name pos:start="13:26" pos:end="13:29">new2</name></expr></argument>, <argument pos:start="13:32" pos:end="13:57"><expr pos:start="13:32" pos:end="13:57"><name pos:start="13:32" pos:end="13:39">BUF_SIZE</name> <operator pos:start="13:41" pos:end="13:41">/</operator> <sizeof pos:start="13:43" pos:end="13:57">sizeof<argument_list pos:start="13:49" pos:end="13:57">(<argument pos:start="13:50" pos:end="13:56"><expr pos:start="13:50" pos:end="13:56"><name pos:start="13:50" pos:end="13:56">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="19:15"><if pos:start="15:5" pos:end="19:15">if <condition pos:start="15:8" pos:end="17:37">(<expr pos:start="15:9" pos:end="17:36"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:14">memcmp</name><argument_list pos:start="15:15" pos:end="15:36">(<argument pos:start="15:16" pos:end="15:19"><expr pos:start="15:16" pos:end="15:19"><name pos:start="15:16" pos:end="15:19">ref0</name></expr></argument>, <argument pos:start="15:22" pos:end="15:25"><expr pos:start="15:22" pos:end="15:25"><name pos:start="15:22" pos:end="15:25">new0</name></expr></argument>, <argument pos:start="15:28" pos:end="15:35"><expr pos:start="15:28" pos:end="15:35"><name pos:start="15:28" pos:end="15:35">BUF_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:39">||</operator> <call pos:start="15:41" pos:end="15:68"><name pos:start="15:41" pos:end="15:46">memcmp</name><argument_list pos:start="15:47" pos:end="15:68">(<argument pos:start="15:48" pos:end="15:51"><expr pos:start="15:48" pos:end="15:51"><name pos:start="15:48" pos:end="15:51">ref1</name></expr></argument>, <argument pos:start="15:54" pos:end="15:57"><expr pos:start="15:54" pos:end="15:57"><name pos:start="15:54" pos:end="15:57">new1</name></expr></argument>, <argument pos:start="15:60" pos:end="15:67"><expr pos:start="15:60" pos:end="15:67"><name pos:start="15:60" pos:end="15:67">BUF_SIZE</name></expr></argument>)</argument_list></call> <operator pos:start="15:70" pos:end="15:71">||</operator>

        <call pos:start="17:9" pos:end="17:36"><name pos:start="17:9" pos:end="17:14">memcmp</name><argument_list pos:start="17:15" pos:end="17:36">(<argument pos:start="17:16" pos:end="17:19"><expr pos:start="17:16" pos:end="17:19"><name pos:start="17:16" pos:end="17:19">ref2</name></expr></argument>, <argument pos:start="17:22" pos:end="17:25"><expr pos:start="17:22" pos:end="17:25"><name pos:start="17:22" pos:end="17:25">new2</name></expr></argument>, <argument pos:start="17:28" pos:end="17:35"><expr pos:start="17:28" pos:end="17:35"><name pos:start="17:28" pos:end="17:35">BUF_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:15"><block_content pos:start="19:9" pos:end="19:15">

        <expr_stmt pos:start="19:9" pos:end="19:15"><expr pos:start="19:9" pos:end="19:14"><call pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:12">fail</name><argument_list pos:start="19:13" pos:end="19:14">()</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><call pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:13">bench_new</name><argument_list pos:start="21:14" pos:end="21:59">(<argument pos:start="21:15" pos:end="21:18"><expr pos:start="21:15" pos:end="21:18"><name pos:start="21:15" pos:end="21:18">new0</name></expr></argument>, <argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">new1</name></expr></argument>, <argument pos:start="21:27" pos:end="21:30"><expr pos:start="21:27" pos:end="21:30"><name pos:start="21:27" pos:end="21:30">new2</name></expr></argument>, <argument pos:start="21:33" pos:end="21:58"><expr pos:start="21:33" pos:end="21:58"><name pos:start="21:33" pos:end="21:40">BUF_SIZE</name> <operator pos:start="21:42" pos:end="21:42">/</operator> <sizeof pos:start="21:44" pos:end="21:58">sizeof<argument_list pos:start="21:50" pos:end="21:58">(<argument pos:start="21:51" pos:end="21:57"><expr pos:start="21:51" pos:end="21:57"><name pos:start="21:51" pos:end="21:57">int32_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
