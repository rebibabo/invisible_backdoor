<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4888.c" pos:tabs="8"><function pos:start="1:1" pos:end="177:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">xen_add_to_physmap</name><parameter_list pos:start="1:30" pos:end="9:58">(<parameter pos:start="1:31" pos:end="1:47"><decl pos:start="1:31" pos:end="1:47"><type pos:start="1:31" pos:end="1:47"><name pos:start="1:31" pos:end="1:40">XenIOState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:47">state</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:47"><decl pos:start="3:31" pos:end="3:47"><type pos:start="3:31" pos:end="3:47"><name pos:start="3:31" pos:end="3:36">hwaddr</name></type> <name pos:start="3:38" pos:end="3:47">start_addr</name></decl></parameter>,

                              <parameter pos:start="5:31" pos:end="5:45"><decl pos:start="5:31" pos:end="5:45"><type pos:start="5:31" pos:end="5:45"><name pos:start="5:31" pos:end="5:40">ram_addr_t</name></type> <name pos:start="5:42" pos:end="5:45">size</name></decl></parameter>,

                              <parameter pos:start="7:31" pos:end="7:46"><decl pos:start="7:31" pos:end="7:46"><type pos:start="7:31" pos:end="7:46"><name pos:start="7:31" pos:end="7:42">MemoryRegion</name> <modifier pos:start="7:44" pos:end="7:44">*</modifier></type><name pos:start="7:45" pos:end="7:46">mr</name></decl></parameter>,

                              <parameter pos:start="9:31" pos:end="9:57"><decl pos:start="9:31" pos:end="9:57"><type pos:start="9:31" pos:end="9:57"><name pos:start="9:31" pos:end="9:36">hwaddr</name></type> <name pos:start="9:38" pos:end="9:57">offset_within_region</name></decl></parameter>)</parameter_list>

<block pos:start="11:1" pos:end="177:1">{<block_content pos:start="13:5" pos:end="175:13">

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:17">long</name></type> <name pos:start="13:19" pos:end="13:19">i</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:15"><decl pos:start="15:5" pos:end="15:14"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:10">rc</name> <init pos:start="15:12" pos:end="15:14">= <expr pos:start="15:14" pos:end="15:14"><literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:30"><type pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:14">XenPhysmap</name> <modifier pos:start="17:16" pos:end="17:16">*</modifier></type><name pos:start="17:17" pos:end="17:23">physmap</name> <init pos:start="17:25" pos:end="17:30">= <expr pos:start="17:27" pos:end="17:30"><name pos:start="17:27" pos:end="17:30">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:27"><decl pos:start="19:5" pos:end="19:14"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">hwaddr</name></type> <name pos:start="19:12" pos:end="19:14">pfn</name></decl>, <decl pos:start="19:17" pos:end="19:26"><type ref="prev" pos:start="19:5" pos:end="19:10"/><name pos:start="19:17" pos:end="19:26">start_gpfn</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:56"><decl pos:start="21:5" pos:end="21:55"><type pos:start="21:5" pos:end="21:10"><name pos:start="21:5" pos:end="21:10">hwaddr</name></type> <name pos:start="21:12" pos:end="21:22">phys_offset</name> <init pos:start="21:24" pos:end="21:55">= <expr pos:start="21:26" pos:end="21:55"><call pos:start="21:26" pos:end="21:55"><name pos:start="21:26" pos:end="21:51">memory_region_get_ram_addr</name><argument_list pos:start="21:52" pos:end="21:55">(<argument pos:start="21:53" pos:end="21:54"><expr pos:start="21:53" pos:end="21:54"><name pos:start="21:53" pos:end="21:54">mr</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:29"><decl pos:start="23:5" pos:end="23:17"><type pos:start="23:5" pos:end="23:8"><name pos:start="23:5" pos:end="23:8">char</name></type> <name pos:start="23:10" pos:end="23:17"><name pos:start="23:10" pos:end="23:13">path</name><index pos:start="23:14" pos:end="23:17">[<expr pos:start="23:15" pos:end="23:16"><literal type="number" pos:start="23:15" pos:end="23:16">80</literal></expr>]</index></name></decl>, <decl pos:start="23:20" pos:end="23:28"><type ref="prev" pos:start="23:5" pos:end="23:8"/><name pos:start="23:20" pos:end="23:28"><name pos:start="23:20" pos:end="23:24">value</name><index pos:start="23:25" pos:end="23:28">[<expr pos:start="23:26" pos:end="23:27"><literal type="number" pos:start="23:26" pos:end="23:27">17</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:24"><decl pos:start="25:5" pos:end="25:23"><type pos:start="25:5" pos:end="25:16"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:14">char</name> <modifier pos:start="25:16" pos:end="25:16">*</modifier></type><name pos:start="25:17" pos:end="25:23">mr_name</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:49">(<expr pos:start="29:9" pos:end="29:48"><call pos:start="29:9" pos:end="29:48"><name pos:start="29:9" pos:end="29:23">get_physmapping</name><argument_list pos:start="29:24" pos:end="29:48">(<argument pos:start="29:25" pos:end="29:29"><expr pos:start="29:25" pos:end="29:29"><name pos:start="29:25" pos:end="29:29">state</name></expr></argument>, <argument pos:start="29:32" pos:end="29:41"><expr pos:start="29:32" pos:end="29:41"><name pos:start="29:32" pos:end="29:41">start_addr</name></expr></argument>, <argument pos:start="29:44" pos:end="29:47"><expr pos:start="29:44" pos:end="29:47"><name pos:start="29:44" pos:end="29:47">size</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:51" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:17">

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:18">(<expr pos:start="35:9" pos:end="35:17"><name pos:start="35:9" pos:end="35:12">size</name> <operator pos:start="35:14" pos:end="35:15">&lt;=</operator> <literal type="number" pos:start="35:17" pos:end="35:17">0</literal></expr>)</condition> <block pos:start="35:20" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:18">

        <return pos:start="37:9" pos:end="37:18">return <expr pos:start="37:16" pos:end="37:17"><operator pos:start="37:16" pos:end="37:16">-</operator><literal type="number" pos:start="37:17" pos:end="37:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="43:5" pos:end="49:32">/* Xen can only handle a single dirty log region for now and we want

     * the linear framebuffer to be that region.

     * Avoid tracking any regions that is not videoram and avoid tracking

     * the legacy vga region. */</comment>

    <if_stmt pos:start="51:5" pos:end="55:5"><if pos:start="51:5" pos:end="55:5">if <condition pos:start="51:8" pos:end="51:50">(<expr pos:start="51:9" pos:end="51:49"><name pos:start="51:9" pos:end="51:10">mr</name> <operator pos:start="51:12" pos:end="51:13">==</operator> <name pos:start="51:15" pos:end="51:25">framebuffer</name> <operator pos:start="51:27" pos:end="51:28">&amp;&amp;</operator> <name pos:start="51:30" pos:end="51:39">start_addr</name> <operator pos:start="51:41" pos:end="51:41">&gt;</operator> <literal type="number" pos:start="51:43" pos:end="51:49">0xbffff</literal></expr>)</condition> <block pos:start="51:52" pos:end="55:5">{<block_content pos:start="53:9" pos:end="53:24">

        <goto pos:start="53:9" pos:end="53:24">goto <name pos:start="53:14" pos:end="53:23">go_physmap</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <return pos:start="57:5" pos:end="57:14">return <expr pos:start="57:12" pos:end="57:13"><operator pos:start="57:12" pos:end="57:12">-</operator><literal type="number" pos:start="57:13" pos:end="57:13">1</literal></expr>;</return>



<label pos:start="61:1" pos:end="61:11"><name pos:start="61:1" pos:end="61:10">go_physmap</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="65:43"><expr pos:start="63:5" pos:end="65:42"><call pos:start="63:5" pos:end="65:42"><name pos:start="63:5" pos:end="63:11">DPRINTF</name><argument_list pos:start="63:12" pos:end="65:42">(<argument pos:start="63:13" pos:end="63:63"><expr pos:start="63:13" pos:end="63:63"><literal type="string" pos:start="63:13" pos:end="63:31">"mapping vram to %"</literal><name pos:start="63:32" pos:end="63:42">HWADDR_PRIx</name><literal type="string" pos:start="63:43" pos:end="63:48">" - %"</literal><name pos:start="63:49" pos:end="63:59">HWADDR_PRIx</name><literal type="string" pos:start="63:60" pos:end="63:63">"\n"</literal></expr></argument>,

            <argument pos:start="65:13" pos:end="65:22"><expr pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:22">start_addr</name></expr></argument>, <argument pos:start="65:25" pos:end="65:41"><expr pos:start="65:25" pos:end="65:41"><name pos:start="65:25" pos:end="65:34">start_addr</name> <operator pos:start="65:36" pos:end="65:36">+</operator> <name pos:start="65:38" pos:end="65:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:42"><expr pos:start="69:5" pos:end="69:41"><name pos:start="69:5" pos:end="69:7">pfn</name> <operator pos:start="69:9" pos:end="69:9">=</operator> <name pos:start="69:11" pos:end="69:21">phys_offset</name> <operator pos:start="69:23" pos:end="69:24">&gt;&gt;</operator> <name pos:start="69:26" pos:end="69:41">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:48"><expr pos:start="71:5" pos:end="71:47"><name pos:start="71:5" pos:end="71:14">start_gpfn</name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:27">start_addr</name> <operator pos:start="71:29" pos:end="71:30">&gt;&gt;</operator> <name pos:start="71:32" pos:end="71:47">TARGET_PAGE_BITS</name></expr>;</expr_stmt>

    <for pos:start="73:5" pos:end="93:5">for <control pos:start="73:9" pos:end="73:50">(<init pos:start="73:10" pos:end="73:15"><expr pos:start="73:10" pos:end="73:14"><name pos:start="73:10" pos:end="73:10">i</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <literal type="number" pos:start="73:14" pos:end="73:14">0</literal></expr>;</init> <condition pos:start="73:17" pos:end="73:45"><expr pos:start="73:17" pos:end="73:44"><name pos:start="73:17" pos:end="73:26"><name pos:start="73:17" pos:end="73:17">i</name> <argument_list type="generic" pos:start="73:19" pos:end="73:26">&lt; <argument pos:start="73:21" pos:end="73:24"><expr pos:start="73:21" pos:end="73:24"><name pos:start="73:21" pos:end="73:24">size</name></expr></argument> &gt;</argument_list></name><operator pos:start="73:27" pos:end="73:27">&gt;</operator> <name pos:start="73:29" pos:end="73:44">TARGET_PAGE_BITS</name></expr>;</condition> <incr pos:start="73:47" pos:end="73:49"><expr pos:start="73:47" pos:end="73:49"><name pos:start="73:47" pos:end="73:47">i</name><operator pos:start="73:48" pos:end="73:49">++</operator></expr></incr>)</control> <block pos:start="73:52" pos:end="93:5">{<block_content pos:start="75:9" pos:end="91:9">

        <decl_stmt pos:start="75:9" pos:end="75:36"><decl pos:start="75:9" pos:end="75:35"><type pos:start="75:9" pos:end="75:21"><name pos:start="75:9" pos:end="75:16">unsigned</name> <name pos:start="75:18" pos:end="75:21">long</name></type> <name pos:start="75:23" pos:end="75:25">idx</name> <init pos:start="75:27" pos:end="75:35">= <expr pos:start="75:29" pos:end="75:35"><name pos:start="75:29" pos:end="75:31">pfn</name> <operator pos:start="75:33" pos:end="75:33">+</operator> <name pos:start="75:35" pos:end="75:35">i</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="77:9" pos:end="77:40"><decl pos:start="77:9" pos:end="77:39"><type pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:17">xen_pfn_t</name></type> <name pos:start="77:19" pos:end="77:22">gpfn</name> <init pos:start="77:24" pos:end="77:39">= <expr pos:start="77:26" pos:end="77:39"><name pos:start="77:26" pos:end="77:35">start_gpfn</name> <operator pos:start="77:37" pos:end="77:37">+</operator> <name pos:start="77:39" pos:end="77:39">i</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="81:9" pos:end="81:86"><expr pos:start="81:9" pos:end="81:85"><name pos:start="81:9" pos:end="81:10">rc</name> <operator pos:start="81:12" pos:end="81:12">=</operator> <call pos:start="81:14" pos:end="81:85"><name pos:start="81:14" pos:end="81:37">xc_domain_add_to_physmap</name><argument_list pos:start="81:38" pos:end="81:85">(<argument pos:start="81:39" pos:end="81:44"><expr pos:start="81:39" pos:end="81:44"><name pos:start="81:39" pos:end="81:44">xen_xc</name></expr></argument>, <argument pos:start="81:47" pos:end="81:55"><expr pos:start="81:47" pos:end="81:55"><name pos:start="81:47" pos:end="81:55">xen_domid</name></expr></argument>, <argument pos:start="81:58" pos:end="81:73"><expr pos:start="81:58" pos:end="81:73"><name pos:start="81:58" pos:end="81:73">XENMAPSPACE_gmfn</name></expr></argument>, <argument pos:start="81:76" pos:end="81:78"><expr pos:start="81:76" pos:end="81:78"><name pos:start="81:76" pos:end="81:78">idx</name></expr></argument>, <argument pos:start="81:81" pos:end="81:84"><expr pos:start="81:81" pos:end="81:84"><name pos:start="81:81" pos:end="81:84">gpfn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="91:9"><if pos:start="83:9" pos:end="91:9">if <condition pos:start="83:12" pos:end="83:15">(<expr pos:start="83:13" pos:end="83:14"><name pos:start="83:13" pos:end="83:14">rc</name></expr>)</condition> <block pos:start="83:17" pos:end="91:9">{<block_content pos:start="85:13" pos:end="89:23">

            <expr_stmt pos:start="85:13" pos:end="87:82"><expr pos:start="85:13" pos:end="87:81"><call pos:start="85:13" pos:end="87:81"><name pos:start="85:13" pos:end="85:19">DPRINTF</name><argument_list pos:start="85:20" pos:end="87:81">(<argument pos:start="85:21" pos:end="87:58"><expr pos:start="85:21" pos:end="87:58"><literal type="string" pos:start="85:21" pos:end="85:42">"add_to_physmap MFN %"</literal><name pos:start="85:43" pos:end="85:53">PRI_xen_pfn</name><literal type="string" pos:start="85:54" pos:end="85:64">" to PFN %"</literal>

                    <name pos:start="87:21" pos:end="87:31">PRI_xen_pfn</name><literal type="string" pos:start="87:32" pos:end="87:58">" failed: %d (errno: %d)\n"</literal></expr></argument>, <argument pos:start="87:61" pos:end="87:63"><expr pos:start="87:61" pos:end="87:63"><name pos:start="87:61" pos:end="87:63">idx</name></expr></argument>, <argument pos:start="87:66" pos:end="87:69"><expr pos:start="87:66" pos:end="87:69"><name pos:start="87:66" pos:end="87:69">gpfn</name></expr></argument>, <argument pos:start="87:72" pos:end="87:73"><expr pos:start="87:72" pos:end="87:73"><name pos:start="87:72" pos:end="87:73">rc</name></expr></argument>, <argument pos:start="87:76" pos:end="87:80"><expr pos:start="87:76" pos:end="87:80"><name pos:start="87:76" pos:end="87:80">errno</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="89:13" pos:end="89:23">return <expr pos:start="89:20" pos:end="89:22"><operator pos:start="89:20" pos:end="89:20">-</operator><name pos:start="89:21" pos:end="89:22">rc</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="97:5" pos:end="97:37"><expr pos:start="97:5" pos:end="97:36"><name pos:start="97:5" pos:end="97:11">mr_name</name> <operator pos:start="97:13" pos:end="97:13">=</operator> <call pos:start="97:15" pos:end="97:36"><name pos:start="97:15" pos:end="97:32">memory_region_name</name><argument_list pos:start="97:33" pos:end="97:36">(<argument pos:start="97:34" pos:end="97:35"><expr pos:start="97:34" pos:end="97:35"><name pos:start="97:34" pos:end="97:35">mr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="101:44"><expr pos:start="101:5" pos:end="101:43"><name pos:start="101:5" pos:end="101:11">physmap</name> <operator pos:start="101:13" pos:end="101:13">=</operator> <call pos:start="101:15" pos:end="101:43"><name pos:start="101:15" pos:end="101:22">g_malloc</name><argument_list pos:start="101:23" pos:end="101:43">(<argument pos:start="101:24" pos:end="101:42"><expr pos:start="101:24" pos:end="101:42"><sizeof pos:start="101:24" pos:end="101:42">sizeof <argument_list pos:start="101:31" pos:end="101:42">(<argument pos:start="101:32" pos:end="101:41"><expr pos:start="101:32" pos:end="101:41"><name pos:start="101:32" pos:end="101:41">XenPhysmap</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:37"><expr pos:start="105:5" pos:end="105:36"><name pos:start="105:5" pos:end="105:23"><name pos:start="105:5" pos:end="105:11">physmap</name><operator pos:start="105:12" pos:end="105:13">-&gt;</operator><name pos:start="105:14" pos:end="105:23">start_addr</name></name> <operator pos:start="105:25" pos:end="105:25">=</operator> <name pos:start="105:27" pos:end="105:36">start_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:25"><expr pos:start="107:5" pos:end="107:24"><name pos:start="107:5" pos:end="107:17"><name pos:start="107:5" pos:end="107:11">physmap</name><operator pos:start="107:12" pos:end="107:13">-&gt;</operator><name pos:start="107:14" pos:end="107:17">size</name></name> <operator pos:start="107:19" pos:end="107:19">=</operator> <name pos:start="107:21" pos:end="107:24">size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="109:28"><expr pos:start="109:5" pos:end="109:27"><name pos:start="109:5" pos:end="109:17"><name pos:start="109:5" pos:end="109:11">physmap</name><operator pos:start="109:12" pos:end="109:13">-&gt;</operator><name pos:start="109:14" pos:end="109:17">name</name></name> <operator pos:start="109:19" pos:end="109:19">=</operator> <name pos:start="109:21" pos:end="109:27">mr_name</name></expr>;</expr_stmt>

    <expr_stmt pos:start="111:5" pos:end="111:39"><expr pos:start="111:5" pos:end="111:38"><name pos:start="111:5" pos:end="111:24"><name pos:start="111:5" pos:end="111:11">physmap</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:24">phys_offset</name></name> <operator pos:start="111:26" pos:end="111:26">=</operator> <name pos:start="111:28" pos:end="111:38">phys_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="115:5" pos:end="115:54"><expr pos:start="115:5" pos:end="115:53"><call pos:start="115:5" pos:end="115:53"><name pos:start="115:5" pos:end="115:21">QLIST_INSERT_HEAD</name><argument_list pos:start="115:22" pos:end="115:53">(<argument pos:start="115:23" pos:end="115:37"><expr pos:start="115:23" pos:end="115:37"><operator pos:start="115:23" pos:end="115:23">&amp;</operator><name pos:start="115:24" pos:end="115:37"><name pos:start="115:24" pos:end="115:28">state</name><operator pos:start="115:29" pos:end="115:30">-&gt;</operator><name pos:start="115:31" pos:end="115:37">physmap</name></name></expr></argument>, <argument pos:start="115:40" pos:end="115:46"><expr pos:start="115:40" pos:end="115:46"><name pos:start="115:40" pos:end="115:46">physmap</name></expr></argument>, <argument pos:start="115:49" pos:end="115:52"><expr pos:start="115:49" pos:end="115:52"><name pos:start="115:49" pos:end="115:52">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="119:5" pos:end="125:64"><expr pos:start="119:5" pos:end="125:63"><call pos:start="119:5" pos:end="125:63"><name pos:start="119:5" pos:end="119:34">xc_domain_pin_memory_cacheattr</name><argument_list pos:start="119:35" pos:end="125:63">(<argument pos:start="119:36" pos:end="119:41"><expr pos:start="119:36" pos:end="119:41"><name pos:start="119:36" pos:end="119:41">xen_xc</name></expr></argument>, <argument pos:start="119:44" pos:end="119:52"><expr pos:start="119:44" pos:end="119:52"><name pos:start="119:44" pos:end="119:52">xen_domid</name></expr></argument>,

                                   <argument pos:start="121:36" pos:end="121:65"><expr pos:start="121:36" pos:end="121:65"><name pos:start="121:36" pos:end="121:45">start_addr</name> <operator pos:start="121:47" pos:end="121:48">&gt;&gt;</operator> <name pos:start="121:50" pos:end="121:65">TARGET_PAGE_BITS</name></expr></argument>,

                                   <argument pos:start="123:36" pos:end="123:78"><expr pos:start="123:36" pos:end="123:78"><operator pos:start="123:36" pos:end="123:36">(</operator><name pos:start="123:37" pos:end="123:46">start_addr</name> <operator pos:start="123:48" pos:end="123:48">+</operator> <name pos:start="123:50" pos:end="123:53">size</name> <operator pos:start="123:55" pos:end="123:55">-</operator> <literal type="number" pos:start="123:57" pos:end="123:57">1</literal><operator pos:start="123:58" pos:end="123:58">)</operator> <operator pos:start="123:60" pos:end="123:61">&gt;&gt;</operator> <name pos:start="123:63" pos:end="123:78">TARGET_PAGE_BITS</name></expr></argument>,

                                   <argument pos:start="125:36" pos:end="125:62"><expr pos:start="125:36" pos:end="125:62"><name pos:start="125:36" pos:end="125:62">XEN_DOMCTL_MEM_CACHEATTR_WB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="129:5" pos:end="133:46"><expr pos:start="129:5" pos:end="133:45"><call pos:start="129:5" pos:end="133:45"><name pos:start="129:5" pos:end="129:12">snprintf</name><argument_list pos:start="129:13" pos:end="133:45">(<argument pos:start="129:14" pos:end="129:17"><expr pos:start="129:14" pos:end="129:17"><name pos:start="129:14" pos:end="129:17">path</name></expr></argument>, <argument pos:start="129:20" pos:end="129:31"><expr pos:start="129:20" pos:end="129:31"><sizeof pos:start="129:20" pos:end="129:31">sizeof<argument_list pos:start="129:26" pos:end="129:31">(<argument pos:start="129:27" pos:end="129:30"><expr pos:start="129:27" pos:end="129:30"><name pos:start="129:27" pos:end="129:30">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="131:13" pos:end="131:74"><expr pos:start="131:13" pos:end="131:74"><literal type="string" pos:start="131:13" pos:end="131:55">"/local/domain/0/device-model/%d/physmap/%"</literal><name pos:start="131:56" pos:end="131:61">PRIx64</name><literal type="string" pos:start="131:62" pos:end="131:74">"/start_addr"</literal></expr></argument>,

            <argument pos:start="133:13" pos:end="133:21"><expr pos:start="133:13" pos:end="133:21"><name pos:start="133:13" pos:end="133:21">xen_domid</name></expr></argument>, <argument pos:start="133:24" pos:end="133:44"><expr pos:start="133:24" pos:end="133:44"><operator pos:start="133:24" pos:end="133:24">(</operator><name pos:start="133:25" pos:end="133:32">uint64_t</name><operator pos:start="133:33" pos:end="133:33">)</operator><name pos:start="133:34" pos:end="133:44">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:68"><expr pos:start="135:5" pos:end="135:67"><call pos:start="135:5" pos:end="135:67"><name pos:start="135:5" pos:end="135:12">snprintf</name><argument_list pos:start="135:13" pos:end="135:67">(<argument pos:start="135:14" pos:end="135:18"><expr pos:start="135:14" pos:end="135:18"><name pos:start="135:14" pos:end="135:18">value</name></expr></argument>, <argument pos:start="135:21" pos:end="135:33"><expr pos:start="135:21" pos:end="135:33"><sizeof pos:start="135:21" pos:end="135:33">sizeof<argument_list pos:start="135:27" pos:end="135:33">(<argument pos:start="135:28" pos:end="135:32"><expr pos:start="135:28" pos:end="135:32"><name pos:start="135:28" pos:end="135:32">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="135:36" pos:end="135:44"><expr pos:start="135:36" pos:end="135:44"><literal type="string" pos:start="135:36" pos:end="135:38">"%"</literal><name pos:start="135:39" pos:end="135:44">PRIx64</name></expr></argument>, <argument pos:start="135:47" pos:end="135:66"><expr pos:start="135:47" pos:end="135:66"><operator pos:start="135:47" pos:end="135:47">(</operator><name pos:start="135:48" pos:end="135:55">uint64_t</name><operator pos:start="135:56" pos:end="135:56">)</operator><name pos:start="135:57" pos:end="135:66">start_addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="137:5" pos:end="141:5"><if pos:start="137:5" pos:end="141:5">if <condition pos:start="137:8" pos:end="137:66">(<expr pos:start="137:9" pos:end="137:65"><operator pos:start="137:9" pos:end="137:9">!</operator><call pos:start="137:10" pos:end="137:65"><name pos:start="137:10" pos:end="137:17">xs_write</name><argument_list pos:start="137:18" pos:end="137:65">(<argument pos:start="137:19" pos:end="137:33"><expr pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:23">state</name><operator pos:start="137:24" pos:end="137:25">-&gt;</operator><name pos:start="137:26" pos:end="137:33">xenstore</name></name></expr></argument>, <argument pos:start="137:36" pos:end="137:36"><expr pos:start="137:36" pos:end="137:36"><literal type="number" pos:start="137:36" pos:end="137:36">0</literal></expr></argument>, <argument pos:start="137:39" pos:end="137:42"><expr pos:start="137:39" pos:end="137:42"><name pos:start="137:39" pos:end="137:42">path</name></expr></argument>, <argument pos:start="137:45" pos:end="137:49"><expr pos:start="137:45" pos:end="137:49"><name pos:start="137:45" pos:end="137:49">value</name></expr></argument>, <argument pos:start="137:52" pos:end="137:64"><expr pos:start="137:52" pos:end="137:64"><call pos:start="137:52" pos:end="137:64"><name pos:start="137:52" pos:end="137:57">strlen</name><argument_list pos:start="137:58" pos:end="137:64">(<argument pos:start="137:59" pos:end="137:63"><expr pos:start="137:59" pos:end="137:63"><name pos:start="137:59" pos:end="137:63">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:68" pos:end="141:5">{<block_content pos:start="139:9" pos:end="139:18">

        <return pos:start="139:9" pos:end="139:18">return <expr pos:start="139:16" pos:end="139:17"><operator pos:start="139:16" pos:end="139:16">-</operator><literal type="number" pos:start="139:17" pos:end="139:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="143:5" pos:end="147:46"><expr pos:start="143:5" pos:end="147:45"><call pos:start="143:5" pos:end="147:45"><name pos:start="143:5" pos:end="143:12">snprintf</name><argument_list pos:start="143:13" pos:end="147:45">(<argument pos:start="143:14" pos:end="143:17"><expr pos:start="143:14" pos:end="143:17"><name pos:start="143:14" pos:end="143:17">path</name></expr></argument>, <argument pos:start="143:20" pos:end="143:31"><expr pos:start="143:20" pos:end="143:31"><sizeof pos:start="143:20" pos:end="143:31">sizeof<argument_list pos:start="143:26" pos:end="143:31">(<argument pos:start="143:27" pos:end="143:30"><expr pos:start="143:27" pos:end="143:30"><name pos:start="143:27" pos:end="143:30">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

            <argument pos:start="145:13" pos:end="145:68"><expr pos:start="145:13" pos:end="145:68"><literal type="string" pos:start="145:13" pos:end="145:55">"/local/domain/0/device-model/%d/physmap/%"</literal><name pos:start="145:56" pos:end="145:61">PRIx64</name><literal type="string" pos:start="145:62" pos:end="145:68">"/size"</literal></expr></argument>,

            <argument pos:start="147:13" pos:end="147:21"><expr pos:start="147:13" pos:end="147:21"><name pos:start="147:13" pos:end="147:21">xen_domid</name></expr></argument>, <argument pos:start="147:24" pos:end="147:44"><expr pos:start="147:24" pos:end="147:44"><operator pos:start="147:24" pos:end="147:24">(</operator><name pos:start="147:25" pos:end="147:32">uint64_t</name><operator pos:start="147:33" pos:end="147:33">)</operator><name pos:start="147:34" pos:end="147:44">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:62"><expr pos:start="149:5" pos:end="149:61"><call pos:start="149:5" pos:end="149:61"><name pos:start="149:5" pos:end="149:12">snprintf</name><argument_list pos:start="149:13" pos:end="149:61">(<argument pos:start="149:14" pos:end="149:18"><expr pos:start="149:14" pos:end="149:18"><name pos:start="149:14" pos:end="149:18">value</name></expr></argument>, <argument pos:start="149:21" pos:end="149:33"><expr pos:start="149:21" pos:end="149:33"><sizeof pos:start="149:21" pos:end="149:33">sizeof<argument_list pos:start="149:27" pos:end="149:33">(<argument pos:start="149:28" pos:end="149:32"><expr pos:start="149:28" pos:end="149:32"><name pos:start="149:28" pos:end="149:32">value</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="149:36" pos:end="149:44"><expr pos:start="149:36" pos:end="149:44"><literal type="string" pos:start="149:36" pos:end="149:38">"%"</literal><name pos:start="149:39" pos:end="149:44">PRIx64</name></expr></argument>, <argument pos:start="149:47" pos:end="149:60"><expr pos:start="149:47" pos:end="149:60"><operator pos:start="149:47" pos:end="149:47">(</operator><name pos:start="149:48" pos:end="149:55">uint64_t</name><operator pos:start="149:56" pos:end="149:56">)</operator><name pos:start="149:57" pos:end="149:60">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="155:5"><if pos:start="151:5" pos:end="155:5">if <condition pos:start="151:8" pos:end="151:66">(<expr pos:start="151:9" pos:end="151:65"><operator pos:start="151:9" pos:end="151:9">!</operator><call pos:start="151:10" pos:end="151:65"><name pos:start="151:10" pos:end="151:17">xs_write</name><argument_list pos:start="151:18" pos:end="151:65">(<argument pos:start="151:19" pos:end="151:33"><expr pos:start="151:19" pos:end="151:33"><name pos:start="151:19" pos:end="151:33"><name pos:start="151:19" pos:end="151:23">state</name><operator pos:start="151:24" pos:end="151:25">-&gt;</operator><name pos:start="151:26" pos:end="151:33">xenstore</name></name></expr></argument>, <argument pos:start="151:36" pos:end="151:36"><expr pos:start="151:36" pos:end="151:36"><literal type="number" pos:start="151:36" pos:end="151:36">0</literal></expr></argument>, <argument pos:start="151:39" pos:end="151:42"><expr pos:start="151:39" pos:end="151:42"><name pos:start="151:39" pos:end="151:42">path</name></expr></argument>, <argument pos:start="151:45" pos:end="151:49"><expr pos:start="151:45" pos:end="151:49"><name pos:start="151:45" pos:end="151:49">value</name></expr></argument>, <argument pos:start="151:52" pos:end="151:64"><expr pos:start="151:52" pos:end="151:64"><call pos:start="151:52" pos:end="151:64"><name pos:start="151:52" pos:end="151:57">strlen</name><argument_list pos:start="151:58" pos:end="151:64">(<argument pos:start="151:59" pos:end="151:63"><expr pos:start="151:59" pos:end="151:63"><name pos:start="151:59" pos:end="151:63">value</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="151:68" pos:end="155:5">{<block_content pos:start="153:9" pos:end="153:18">

        <return pos:start="153:9" pos:end="153:18">return <expr pos:start="153:16" pos:end="153:17"><operator pos:start="153:16" pos:end="153:16">-</operator><literal type="number" pos:start="153:17" pos:end="153:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="157:5" pos:end="171:5"><if pos:start="157:5" pos:end="171:5">if <condition pos:start="157:8" pos:end="157:16">(<expr pos:start="157:9" pos:end="157:15"><name pos:start="157:9" pos:end="157:15">mr_name</name></expr>)</condition> <block pos:start="157:18" pos:end="171:5">{<block_content pos:start="159:9" pos:end="169:9">

        <expr_stmt pos:start="159:9" pos:end="163:50"><expr pos:start="159:9" pos:end="163:49"><call pos:start="159:9" pos:end="163:49"><name pos:start="159:9" pos:end="159:16">snprintf</name><argument_list pos:start="159:17" pos:end="163:49">(<argument pos:start="159:18" pos:end="159:21"><expr pos:start="159:18" pos:end="159:21"><name pos:start="159:18" pos:end="159:21">path</name></expr></argument>, <argument pos:start="159:24" pos:end="159:35"><expr pos:start="159:24" pos:end="159:35"><sizeof pos:start="159:24" pos:end="159:35">sizeof<argument_list pos:start="159:30" pos:end="159:35">(<argument pos:start="159:31" pos:end="159:34"><expr pos:start="159:31" pos:end="159:34"><name pos:start="159:31" pos:end="159:34">path</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                <argument pos:start="161:17" pos:end="161:72"><expr pos:start="161:17" pos:end="161:72"><literal type="string" pos:start="161:17" pos:end="161:59">"/local/domain/0/device-model/%d/physmap/%"</literal><name pos:start="161:60" pos:end="161:65">PRIx64</name><literal type="string" pos:start="161:66" pos:end="161:72">"/name"</literal></expr></argument>,

                <argument pos:start="163:17" pos:end="163:25"><expr pos:start="163:17" pos:end="163:25"><name pos:start="163:17" pos:end="163:25">xen_domid</name></expr></argument>, <argument pos:start="163:28" pos:end="163:48"><expr pos:start="163:28" pos:end="163:48"><operator pos:start="163:28" pos:end="163:28">(</operator><name pos:start="163:29" pos:end="163:36">uint64_t</name><operator pos:start="163:37" pos:end="163:37">)</operator><name pos:start="163:38" pos:end="163:48">phys_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="169:9"><if pos:start="165:9" pos:end="169:9">if <condition pos:start="165:12" pos:end="165:74">(<expr pos:start="165:13" pos:end="165:73"><operator pos:start="165:13" pos:end="165:13">!</operator><call pos:start="165:14" pos:end="165:73"><name pos:start="165:14" pos:end="165:21">xs_write</name><argument_list pos:start="165:22" pos:end="165:73">(<argument pos:start="165:23" pos:end="165:37"><expr pos:start="165:23" pos:end="165:37"><name pos:start="165:23" pos:end="165:37"><name pos:start="165:23" pos:end="165:27">state</name><operator pos:start="165:28" pos:end="165:29">-&gt;</operator><name pos:start="165:30" pos:end="165:37">xenstore</name></name></expr></argument>, <argument pos:start="165:40" pos:end="165:40"><expr pos:start="165:40" pos:end="165:40"><literal type="number" pos:start="165:40" pos:end="165:40">0</literal></expr></argument>, <argument pos:start="165:43" pos:end="165:46"><expr pos:start="165:43" pos:end="165:46"><name pos:start="165:43" pos:end="165:46">path</name></expr></argument>, <argument pos:start="165:49" pos:end="165:55"><expr pos:start="165:49" pos:end="165:55"><name pos:start="165:49" pos:end="165:55">mr_name</name></expr></argument>, <argument pos:start="165:58" pos:end="165:72"><expr pos:start="165:58" pos:end="165:72"><call pos:start="165:58" pos:end="165:72"><name pos:start="165:58" pos:end="165:63">strlen</name><argument_list pos:start="165:64" pos:end="165:72">(<argument pos:start="165:65" pos:end="165:71"><expr pos:start="165:65" pos:end="165:71"><name pos:start="165:65" pos:end="165:71">mr_name</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="165:76" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:22">

            <return pos:start="167:13" pos:end="167:22">return <expr pos:start="167:20" pos:end="167:21"><operator pos:start="167:20" pos:end="167:20">-</operator><literal type="number" pos:start="167:21" pos:end="167:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="175:5" pos:end="175:13">return <expr pos:start="175:12" pos:end="175:12"><literal type="number" pos:start="175:12" pos:end="175:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
