<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4462.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:6">soread</name><argument_list pos:start="1:7" pos:end="1:10">(<argument pos:start="1:8" pos:end="1:9">so</argument>)</argument_list></macro>

	<decl_stmt pos:start="3:9" pos:end="3:26"><decl pos:start="3:9" pos:end="3:25"><type pos:start="3:9" pos:end="3:23"><name pos:start="3:9" pos:end="3:21"><name pos:start="3:9" pos:end="3:14">struct</name> <name pos:start="3:16" pos:end="3:21">socket</name></name> <modifier pos:start="3:23" pos:end="3:23">*</modifier></type><name pos:start="3:24" pos:end="3:25">so</name></decl>;</decl_stmt>

<block pos:start="5:1" pos:end="195:1">{<block_content pos:start="7:9" pos:end="193:18">

	<decl_stmt pos:start="7:9" pos:end="7:30"><decl pos:start="7:9" pos:end="7:13"><type pos:start="7:9" pos:end="7:11"><name pos:start="7:9" pos:end="7:11">int</name></type> <name pos:start="7:13" pos:end="7:13">n</name></decl>, <decl pos:start="7:16" pos:end="7:17"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:16" pos:end="7:17">nn</name></decl>, <decl pos:start="7:20" pos:end="7:22"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:20" pos:end="7:22">lss</name></decl>, <decl pos:start="7:25" pos:end="7:29"><type ref="prev" pos:start="7:9" pos:end="7:11"/><name pos:start="7:25" pos:end="7:29">total</name></decl>;</decl_stmt>

	<decl_stmt pos:start="9:9" pos:end="9:38"><decl pos:start="9:9" pos:end="9:37"><type pos:start="9:9" pos:end="9:21"><name pos:start="9:9" pos:end="9:19"><name pos:start="9:9" pos:end="9:14">struct</name> <name pos:start="9:16" pos:end="9:19">sbuf</name></name> <modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:23">sb</name> <init pos:start="9:25" pos:end="9:37">= <expr pos:start="9:27" pos:end="9:37"><operator pos:start="9:27" pos:end="9:27">&amp;</operator><name pos:start="9:28" pos:end="9:37"><name pos:start="9:28" pos:end="9:29">so</name><operator pos:start="9:30" pos:end="9:31">-&gt;</operator><name pos:start="9:32" pos:end="9:37">so_snd</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="11:9" pos:end="11:45"><decl pos:start="11:9" pos:end="11:44"><type pos:start="11:9" pos:end="11:11"><name pos:start="11:9" pos:end="11:11">int</name></type> <name pos:start="11:13" pos:end="11:15">len</name> <init pos:start="11:17" pos:end="11:44">= <expr pos:start="11:19" pos:end="11:44"><name pos:start="11:19" pos:end="11:32"><name pos:start="11:19" pos:end="11:20">sb</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:32">sb_datalen</name></name> <operator pos:start="11:34" pos:end="11:34">-</operator> <name pos:start="11:36" pos:end="11:44"><name pos:start="11:36" pos:end="11:37">sb</name><operator pos:start="11:38" pos:end="11:39">-&gt;</operator><name pos:start="11:40" pos:end="11:44">sb_cc</name></name></expr></init></decl>;</decl_stmt>

	<decl_stmt pos:start="13:9" pos:end="13:28"><decl pos:start="13:9" pos:end="13:27"><type pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:14">struct</name> <name pos:start="13:16" pos:end="13:20">iovec</name></name></type> <name pos:start="13:22" pos:end="13:27"><name pos:start="13:22" pos:end="13:24">iov</name><index pos:start="13:25" pos:end="13:27">[<expr pos:start="13:26" pos:end="13:26"><literal type="number" pos:start="13:26" pos:end="13:26">2</literal></expr>]</index></name></decl>;</decl_stmt>

	<decl_stmt pos:start="15:9" pos:end="15:41"><decl pos:start="15:9" pos:end="15:40"><type pos:start="15:9" pos:end="15:11"><name pos:start="15:9" pos:end="15:11">int</name></type> <name pos:start="15:13" pos:end="15:15">mss</name> <init pos:start="15:17" pos:end="15:40">= <expr pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:20">so</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:30">so_tcpcb</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:40">t_maxseg</name></name></expr></init></decl>;</decl_stmt>

	

	<expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><call pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:18">DEBUG_CALL</name><argument_list pos:start="19:19" pos:end="19:28">(<argument pos:start="19:20" pos:end="19:27"><expr pos:start="19:20" pos:end="19:27"><literal type="string" pos:start="19:20" pos:end="19:27">"soread"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="21:9" pos:end="21:41"><expr pos:start="21:9" pos:end="21:40"><call pos:start="21:9" pos:end="21:40"><name pos:start="21:9" pos:end="21:17">DEBUG_ARG</name><argument_list pos:start="21:18" pos:end="21:40">(<argument pos:start="21:19" pos:end="21:28"><expr pos:start="21:19" pos:end="21:28"><literal type="string" pos:start="21:19" pos:end="21:28">"so = %lx"</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:39"><expr pos:start="21:31" pos:end="21:39"><operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:35">long</name> <operator pos:start="21:37" pos:end="21:37">)</operator><name pos:start="21:38" pos:end="21:39">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	

	<comment type="block" pos:start="25:9" pos:end="31:11">/* 

	 * No need to check if there's enough room to read.

	 * soread wouldn't have been called if there weren't

	 */</comment>

	

	<expr_stmt pos:start="35:9" pos:end="35:41"><expr pos:start="35:9" pos:end="35:40"><name pos:start="35:9" pos:end="35:11">len</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <name pos:start="35:15" pos:end="35:28"><name pos:start="35:15" pos:end="35:16">sb</name><operator pos:start="35:17" pos:end="35:18">-&gt;</operator><name pos:start="35:19" pos:end="35:28">sb_datalen</name></name> <operator pos:start="35:30" pos:end="35:30">-</operator> <name pos:start="35:32" pos:end="35:40"><name pos:start="35:32" pos:end="35:33">sb</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:40">sb_cc</name></name></expr>;</expr_stmt>

	

	<expr_stmt pos:start="39:9" pos:end="39:38"><expr pos:start="39:9" pos:end="39:37"><name pos:start="39:9" pos:end="39:14"><name pos:start="39:9" pos:end="39:11">iov</name><index pos:start="39:12" pos:end="39:14">[<expr pos:start="39:13" pos:end="39:13"><literal type="number" pos:start="39:13" pos:end="39:13">0</literal></expr>]</index></name><operator pos:start="39:15" pos:end="39:15">.</operator><name pos:start="39:16" pos:end="39:23">iov_base</name> <operator pos:start="39:25" pos:end="39:25">=</operator> <name pos:start="39:27" pos:end="39:37"><name pos:start="39:27" pos:end="39:28">sb</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:37">sb_wptr</name></name></expr>;</expr_stmt>

	<if_stmt pos:start="41:9" pos:end="118:0"><if pos:start="41:9" pos:end="57:9">if <condition pos:start="41:12" pos:end="41:38">(<expr pos:start="41:13" pos:end="41:37"><name pos:start="41:13" pos:end="41:23"><name pos:start="41:13" pos:end="41:14">sb</name><operator pos:start="41:15" pos:end="41:16">-&gt;</operator><name pos:start="41:17" pos:end="41:23">sb_wptr</name></name> <operator pos:start="41:25" pos:end="41:25">&lt;</operator> <name pos:start="41:27" pos:end="41:37"><name pos:start="41:27" pos:end="41:28">sb</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:37">sb_rptr</name></name></expr>)</condition> <block pos:start="41:40" pos:end="57:9">{<block_content pos:start="43:17" pos:end="55:22">

		<expr_stmt pos:start="43:17" pos:end="43:59"><expr pos:start="43:17" pos:end="43:58"><name pos:start="43:17" pos:end="43:22"><name pos:start="43:17" pos:end="43:19">iov</name><index pos:start="43:20" pos:end="43:22">[<expr pos:start="43:21" pos:end="43:21"><literal type="number" pos:start="43:21" pos:end="43:21">0</literal></expr>]</index></name><operator pos:start="43:23" pos:end="43:23">.</operator><name pos:start="43:24" pos:end="43:30">iov_len</name> <operator pos:start="43:32" pos:end="43:32">=</operator> <name pos:start="43:34" pos:end="43:44"><name pos:start="43:34" pos:end="43:35">sb</name><operator pos:start="43:36" pos:end="43:37">-&gt;</operator><name pos:start="43:38" pos:end="43:44">sb_rptr</name></name> <operator pos:start="43:46" pos:end="43:46">-</operator> <name pos:start="43:48" pos:end="43:58"><name pos:start="43:48" pos:end="43:49">sb</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:58">sb_wptr</name></name></expr>;</expr_stmt>

		<comment type="block" pos:start="45:17" pos:end="45:50">/* Should never succeed, but... */</comment>

		<if_stmt pos:start="47:17" pos:end="49:40"><if pos:start="47:17" pos:end="49:40">if <condition pos:start="47:20" pos:end="47:41">(<expr pos:start="47:21" pos:end="47:40"><name pos:start="47:21" pos:end="47:26"><name pos:start="47:21" pos:end="47:23">iov</name><index pos:start="47:24" pos:end="47:26">[<expr pos:start="47:25" pos:end="47:25"><literal type="number" pos:start="47:25" pos:end="47:25">0</literal></expr>]</index></name><operator pos:start="47:27" pos:end="47:27">.</operator><name pos:start="47:28" pos:end="47:34">iov_len</name> <operator pos:start="47:36" pos:end="47:36">&gt;</operator> <name pos:start="47:38" pos:end="47:40">len</name></expr>)</condition><block type="pseudo" pos:start="49:20" pos:end="49:40"><block_content pos:start="49:20" pos:end="49:40">

		   <expr_stmt pos:start="49:20" pos:end="49:40"><expr pos:start="49:20" pos:end="49:39"><name pos:start="49:20" pos:end="49:25"><name pos:start="49:20" pos:end="49:22">iov</name><index pos:start="49:23" pos:end="49:25">[<expr pos:start="49:24" pos:end="49:24"><literal type="number" pos:start="49:24" pos:end="49:24">0</literal></expr>]</index></name><operator pos:start="49:26" pos:end="49:26">.</operator><name pos:start="49:27" pos:end="49:33">iov_len</name> <operator pos:start="49:35" pos:end="49:35">=</operator> <name pos:start="49:37" pos:end="49:39">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<if_stmt pos:start="51:17" pos:end="53:56"><if pos:start="51:17" pos:end="53:56">if <condition pos:start="51:20" pos:end="51:41">(<expr pos:start="51:21" pos:end="51:40"><name pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:23">iov</name><index pos:start="51:24" pos:end="51:26">[<expr pos:start="51:25" pos:end="51:25"><literal type="number" pos:start="51:25" pos:end="51:25">0</literal></expr>]</index></name><operator pos:start="51:27" pos:end="51:27">.</operator><name pos:start="51:28" pos:end="51:34">iov_len</name> <operator pos:start="51:36" pos:end="51:36">&gt;</operator> <name pos:start="51:38" pos:end="51:40">mss</name></expr>)</condition><block type="pseudo" pos:start="53:20" pos:end="53:56"><block_content pos:start="53:20" pos:end="53:56">

		   <expr_stmt pos:start="53:20" pos:end="53:56"><expr pos:start="53:20" pos:end="53:55"><name pos:start="53:20" pos:end="53:25"><name pos:start="53:20" pos:end="53:22">iov</name><index pos:start="53:23" pos:end="53:25">[<expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>]</index></name><operator pos:start="53:26" pos:end="53:26">.</operator><name pos:start="53:27" pos:end="53:33">iov_len</name> <operator pos:start="53:35" pos:end="53:36">-=</operator> <name pos:start="53:38" pos:end="53:43"><name pos:start="53:38" pos:end="53:40">iov</name><index pos:start="53:41" pos:end="53:43">[<expr pos:start="53:42" pos:end="53:42"><literal type="number" pos:start="53:42" pos:end="53:42">0</literal></expr>]</index></name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:51">iov_len</name><operator pos:start="53:52" pos:end="53:52">%</operator><name pos:start="53:53" pos:end="53:55">mss</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="55:17" pos:end="55:22"><expr pos:start="55:17" pos:end="55:21"><name pos:start="55:17" pos:end="55:17">n</name> <operator pos:start="55:19" pos:end="55:19">=</operator> <literal type="number" pos:start="55:21" pos:end="55:21">1</literal></expr>;</expr_stmt>

	</block_content>}</block></if> <else pos:start="57:11" pos:end="118:0">else <block pos:start="57:16" pos:end="118:0">{<block_content pos:start="59:17" pos:end="111:17">

		<expr_stmt pos:start="59:17" pos:end="59:78"><expr pos:start="59:17" pos:end="59:77"><name pos:start="59:17" pos:end="59:22"><name pos:start="59:17" pos:end="59:19">iov</name><index pos:start="59:20" pos:end="59:22">[<expr pos:start="59:21" pos:end="59:21"><literal type="number" pos:start="59:21" pos:end="59:21">0</literal></expr>]</index></name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:30">iov_len</name> <operator pos:start="59:32" pos:end="59:32">=</operator> <operator pos:start="59:34" pos:end="59:34">(</operator><name pos:start="59:35" pos:end="59:45"><name pos:start="59:35" pos:end="59:36">sb</name><operator pos:start="59:37" pos:end="59:38">-&gt;</operator><name pos:start="59:39" pos:end="59:45">sb_data</name></name> <operator pos:start="59:47" pos:end="59:47">+</operator> <name pos:start="59:49" pos:end="59:62"><name pos:start="59:49" pos:end="59:50">sb</name><operator pos:start="59:51" pos:end="59:52">-&gt;</operator><name pos:start="59:53" pos:end="59:62">sb_datalen</name></name><operator pos:start="59:63" pos:end="59:63">)</operator> <operator pos:start="59:65" pos:end="59:65">-</operator> <name pos:start="59:67" pos:end="59:77"><name pos:start="59:67" pos:end="59:68">sb</name><operator pos:start="59:69" pos:end="59:70">-&gt;</operator><name pos:start="59:71" pos:end="59:77">sb_wptr</name></name></expr>;</expr_stmt>

		<comment type="block" pos:start="61:17" pos:end="61:50">/* Should never succeed, but... */</comment>

		<if_stmt pos:start="63:17" pos:end="63:63"><if pos:start="63:17" pos:end="63:63">if <condition pos:start="63:20" pos:end="63:41">(<expr pos:start="63:21" pos:end="63:40"><name pos:start="63:21" pos:end="63:26"><name pos:start="63:21" pos:end="63:23">iov</name><index pos:start="63:24" pos:end="63:26">[<expr pos:start="63:25" pos:end="63:25"><literal type="number" pos:start="63:25" pos:end="63:25">0</literal></expr>]</index></name><operator pos:start="63:27" pos:end="63:27">.</operator><name pos:start="63:28" pos:end="63:34">iov_len</name> <operator pos:start="63:36" pos:end="63:36">&gt;</operator> <name pos:start="63:38" pos:end="63:40">len</name></expr>)</condition><block type="pseudo" pos:start="63:43" pos:end="63:63"><block_content pos:start="63:43" pos:end="63:63"> <expr_stmt pos:start="63:43" pos:end="63:63"><expr pos:start="63:43" pos:end="63:62"><name pos:start="63:43" pos:end="63:48"><name pos:start="63:43" pos:end="63:45">iov</name><index pos:start="63:46" pos:end="63:48">[<expr pos:start="63:47" pos:end="63:47"><literal type="number" pos:start="63:47" pos:end="63:47">0</literal></expr>]</index></name><operator pos:start="63:49" pos:end="63:49">.</operator><name pos:start="63:50" pos:end="63:56">iov_len</name> <operator pos:start="63:58" pos:end="63:58">=</operator> <name pos:start="63:60" pos:end="63:62">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="65:17" pos:end="65:38"><expr pos:start="65:17" pos:end="65:37"><name pos:start="65:17" pos:end="65:19">len</name> <operator pos:start="65:21" pos:end="65:22">-=</operator> <name pos:start="65:24" pos:end="65:29"><name pos:start="65:24" pos:end="65:26">iov</name><index pos:start="65:27" pos:end="65:29">[<expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr>]</index></name><operator pos:start="65:30" pos:end="65:30">.</operator><name pos:start="65:31" pos:end="65:37">iov_len</name></expr>;</expr_stmt>

		<if_stmt pos:start="67:17" pos:end="111:17"><if pos:start="67:17" pos:end="103:17">if <condition pos:start="67:20" pos:end="67:24">(<expr pos:start="67:21" pos:end="67:23"><name pos:start="67:21" pos:end="67:23">len</name></expr>)</condition> <block pos:start="67:26" pos:end="103:17">{<block_content pos:start="69:25" pos:end="101:38">

			<expr_stmt pos:start="69:25" pos:end="69:54"><expr pos:start="69:25" pos:end="69:53"><name pos:start="69:25" pos:end="69:30"><name pos:start="69:25" pos:end="69:27">iov</name><index pos:start="69:28" pos:end="69:30">[<expr pos:start="69:29" pos:end="69:29"><literal type="number" pos:start="69:29" pos:end="69:29">1</literal></expr>]</index></name><operator pos:start="69:31" pos:end="69:31">.</operator><name pos:start="69:32" pos:end="69:39">iov_base</name> <operator pos:start="69:41" pos:end="69:41">=</operator> <name pos:start="69:43" pos:end="69:53"><name pos:start="69:43" pos:end="69:44">sb</name><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:53">sb_data</name></name></expr>;</expr_stmt>

			<expr_stmt pos:start="71:25" pos:end="71:67"><expr pos:start="71:25" pos:end="71:66"><name pos:start="71:25" pos:end="71:30"><name pos:start="71:25" pos:end="71:27">iov</name><index pos:start="71:28" pos:end="71:30">[<expr pos:start="71:29" pos:end="71:29"><literal type="number" pos:start="71:29" pos:end="71:29">1</literal></expr>]</index></name><operator pos:start="71:31" pos:end="71:31">.</operator><name pos:start="71:32" pos:end="71:38">iov_len</name> <operator pos:start="71:40" pos:end="71:40">=</operator> <name pos:start="71:42" pos:end="71:52"><name pos:start="71:42" pos:end="71:43">sb</name><operator pos:start="71:44" pos:end="71:45">-&gt;</operator><name pos:start="71:46" pos:end="71:52">sb_rptr</name></name> <operator pos:start="71:54" pos:end="71:54">-</operator> <name pos:start="71:56" pos:end="71:66"><name pos:start="71:56" pos:end="71:57">sb</name><operator pos:start="71:58" pos:end="71:59">-&gt;</operator><name pos:start="71:60" pos:end="71:66">sb_data</name></name></expr>;</expr_stmt>

			<if_stmt pos:start="73:25" pos:end="75:48"><if pos:start="73:25" pos:end="75:48">if<condition pos:start="73:27" pos:end="73:48">(<expr pos:start="73:28" pos:end="73:47"><name pos:start="73:28" pos:end="73:33"><name pos:start="73:28" pos:end="73:30">iov</name><index pos:start="73:31" pos:end="73:33">[<expr pos:start="73:32" pos:end="73:32"><literal type="number" pos:start="73:32" pos:end="73:32">1</literal></expr>]</index></name><operator pos:start="73:34" pos:end="73:34">.</operator><name pos:start="73:35" pos:end="73:41">iov_len</name> <operator pos:start="73:43" pos:end="73:43">&gt;</operator> <name pos:start="73:45" pos:end="73:47">len</name></expr>)</condition><block type="pseudo" pos:start="75:28" pos:end="75:48"><block_content pos:start="75:28" pos:end="75:48">

			   <expr_stmt pos:start="75:28" pos:end="75:48"><expr pos:start="75:28" pos:end="75:47"><name pos:start="75:28" pos:end="75:33"><name pos:start="75:28" pos:end="75:30">iov</name><index pos:start="75:31" pos:end="75:33">[<expr pos:start="75:32" pos:end="75:32"><literal type="number" pos:start="75:32" pos:end="75:32">1</literal></expr>]</index></name><operator pos:start="75:34" pos:end="75:34">.</operator><name pos:start="75:35" pos:end="75:41">iov_len</name> <operator pos:start="75:43" pos:end="75:43">=</operator> <name pos:start="75:45" pos:end="75:47">len</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt pos:start="77:25" pos:end="77:64"><expr pos:start="77:25" pos:end="77:63"><name pos:start="77:25" pos:end="77:29">total</name> <operator pos:start="77:31" pos:end="77:31">=</operator> <name pos:start="77:33" pos:end="77:38"><name pos:start="77:33" pos:end="77:35">iov</name><index pos:start="77:36" pos:end="77:38">[<expr pos:start="77:37" pos:end="77:37"><literal type="number" pos:start="77:37" pos:end="77:37">0</literal></expr>]</index></name><operator pos:start="77:39" pos:end="77:39">.</operator><name pos:start="77:40" pos:end="77:46">iov_len</name> <operator pos:start="77:48" pos:end="77:48">+</operator> <name pos:start="77:50" pos:end="77:55"><name pos:start="77:50" pos:end="77:52">iov</name><index pos:start="77:53" pos:end="77:55">[<expr pos:start="77:54" pos:end="77:54"><literal type="number" pos:start="77:54" pos:end="77:54">1</literal></expr>]</index></name><operator pos:start="77:56" pos:end="77:56">.</operator><name pos:start="77:57" pos:end="77:63">iov_len</name></expr>;</expr_stmt>

			<if_stmt pos:start="79:25" pos:end="101:38"><if pos:start="79:25" pos:end="99:25">if <condition pos:start="79:28" pos:end="79:40">(<expr pos:start="79:29" pos:end="79:39"><name pos:start="79:29" pos:end="79:33">total</name> <operator pos:start="79:35" pos:end="79:35">&gt;</operator> <name pos:start="79:37" pos:end="79:39">mss</name></expr>)</condition> <block pos:start="79:42" pos:end="99:25">{<block_content pos:start="81:33" pos:end="97:33">

				<expr_stmt pos:start="81:33" pos:end="81:48"><expr pos:start="81:33" pos:end="81:47"><name pos:start="81:33" pos:end="81:35">lss</name> <operator pos:start="81:37" pos:end="81:37">=</operator> <name pos:start="81:39" pos:end="81:43">total</name><operator pos:start="81:44" pos:end="81:44">%</operator><name pos:start="81:45" pos:end="81:47">mss</name></expr>;</expr_stmt>

				<if_stmt pos:start="83:33" pos:end="97:33"><if pos:start="83:33" pos:end="89:33">if <condition pos:start="83:36" pos:end="83:57">(<expr pos:start="83:37" pos:end="83:56"><name pos:start="83:37" pos:end="83:42"><name pos:start="83:37" pos:end="83:39">iov</name><index pos:start="83:40" pos:end="83:42">[<expr pos:start="83:41" pos:end="83:41"><literal type="number" pos:start="83:41" pos:end="83:41">1</literal></expr>]</index></name><operator pos:start="83:43" pos:end="83:43">.</operator><name pos:start="83:44" pos:end="83:50">iov_len</name> <operator pos:start="83:52" pos:end="83:52">&gt;</operator> <name pos:start="83:54" pos:end="83:56">lss</name></expr>)</condition> <block pos:start="83:59" pos:end="89:33">{<block_content pos:start="85:41" pos:end="87:46">

					<expr_stmt pos:start="85:41" pos:end="85:62"><expr pos:start="85:41" pos:end="85:61"><name pos:start="85:41" pos:end="85:46"><name pos:start="85:41" pos:end="85:43">iov</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><literal type="number" pos:start="85:45" pos:end="85:45">1</literal></expr>]</index></name><operator pos:start="85:47" pos:end="85:47">.</operator><name pos:start="85:48" pos:end="85:54">iov_len</name> <operator pos:start="85:56" pos:end="85:57">-=</operator> <name pos:start="85:59" pos:end="85:61">lss</name></expr>;</expr_stmt>

					<expr_stmt pos:start="87:41" pos:end="87:46"><expr pos:start="87:41" pos:end="87:45"><name pos:start="87:41" pos:end="87:41">n</name> <operator pos:start="87:43" pos:end="87:43">=</operator> <literal type="number" pos:start="87:45" pos:end="87:45">2</literal></expr>;</expr_stmt>

				</block_content>}</block></if> <else pos:start="89:35" pos:end="97:33">else <block pos:start="89:40" pos:end="97:33">{<block_content pos:start="91:41" pos:end="95:46">

					<expr_stmt pos:start="91:41" pos:end="91:62"><expr pos:start="91:41" pos:end="91:61"><name pos:start="91:41" pos:end="91:43">lss</name> <operator pos:start="91:45" pos:end="91:46">-=</operator> <name pos:start="91:48" pos:end="91:53"><name pos:start="91:48" pos:end="91:50">iov</name><index pos:start="91:51" pos:end="91:53">[<expr pos:start="91:52" pos:end="91:52"><literal type="number" pos:start="91:52" pos:end="91:52">1</literal></expr>]</index></name><operator pos:start="91:54" pos:end="91:54">.</operator><name pos:start="91:55" pos:end="91:61">iov_len</name></expr>;</expr_stmt>

					<expr_stmt pos:start="93:41" pos:end="93:62"><expr pos:start="93:41" pos:end="93:61"><name pos:start="93:41" pos:end="93:46"><name pos:start="93:41" pos:end="93:43">iov</name><index pos:start="93:44" pos:end="93:46">[<expr pos:start="93:45" pos:end="93:45"><literal type="number" pos:start="93:45" pos:end="93:45">0</literal></expr>]</index></name><operator pos:start="93:47" pos:end="93:47">.</operator><name pos:start="93:48" pos:end="93:54">iov_len</name> <operator pos:start="93:56" pos:end="93:57">-=</operator> <name pos:start="93:59" pos:end="93:61">lss</name></expr>;</expr_stmt>

					<expr_stmt pos:start="95:41" pos:end="95:46"><expr pos:start="95:41" pos:end="95:45"><name pos:start="95:41" pos:end="95:41">n</name> <operator pos:start="95:43" pos:end="95:43">=</operator> <literal type="number" pos:start="95:45" pos:end="95:45">1</literal></expr>;</expr_stmt>

				</block_content>}</block></else></if_stmt>

			</block_content>}</block></if> <else pos:start="99:27" pos:end="101:38">else<block type="pseudo" pos:start="101:33" pos:end="101:38"><block_content pos:start="101:33" pos:end="101:38">

				<expr_stmt pos:start="101:33" pos:end="101:38"><expr pos:start="101:33" pos:end="101:37"><name pos:start="101:33" pos:end="101:33">n</name> <operator pos:start="101:35" pos:end="101:35">=</operator> <literal type="number" pos:start="101:37" pos:end="101:37">2</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

		</block_content>}</block></if> <else pos:start="103:19" pos:end="111:17">else <block pos:start="103:24" pos:end="111:17">{<block_content pos:start="105:25" pos:end="109:30">

			<if_stmt pos:start="105:25" pos:end="107:64"><if pos:start="105:25" pos:end="107:64">if <condition pos:start="105:28" pos:end="105:49">(<expr pos:start="105:29" pos:end="105:48"><name pos:start="105:29" pos:end="105:34"><name pos:start="105:29" pos:end="105:31">iov</name><index pos:start="105:32" pos:end="105:34">[<expr pos:start="105:33" pos:end="105:33"><literal type="number" pos:start="105:33" pos:end="105:33">0</literal></expr>]</index></name><operator pos:start="105:35" pos:end="105:35">.</operator><name pos:start="105:36" pos:end="105:42">iov_len</name> <operator pos:start="105:44" pos:end="105:44">&gt;</operator> <name pos:start="105:46" pos:end="105:48">mss</name></expr>)</condition><block type="pseudo" pos:start="107:28" pos:end="107:64"><block_content pos:start="107:28" pos:end="107:64">

			   <expr_stmt pos:start="107:28" pos:end="107:64"><expr pos:start="107:28" pos:end="107:63"><name pos:start="107:28" pos:end="107:33"><name pos:start="107:28" pos:end="107:30">iov</name><index pos:start="107:31" pos:end="107:33">[<expr pos:start="107:32" pos:end="107:32"><literal type="number" pos:start="107:32" pos:end="107:32">0</literal></expr>]</index></name><operator pos:start="107:34" pos:end="107:34">.</operator><name pos:start="107:35" pos:end="107:41">iov_len</name> <operator pos:start="107:43" pos:end="107:44">-=</operator> <name pos:start="107:46" pos:end="107:51"><name pos:start="107:46" pos:end="107:48">iov</name><index pos:start="107:49" pos:end="107:51">[<expr pos:start="107:50" pos:end="107:50"><literal type="number" pos:start="107:50" pos:end="107:50">0</literal></expr>]</index></name><operator pos:start="107:52" pos:end="107:52">.</operator><name pos:start="107:53" pos:end="107:59">iov_len</name><operator pos:start="107:60" pos:end="107:60">%</operator><name pos:start="107:61" pos:end="107:63">mss</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

			<expr_stmt pos:start="109:25" pos:end="109:30"><expr pos:start="109:25" pos:end="109:29"><name pos:start="109:25" pos:end="109:25">n</name> <operator pos:start="109:27" pos:end="109:27">=</operator> <literal type="number" pos:start="109:29" pos:end="109:29">1</literal></expr>;</expr_stmt>

		</block_content>}</block></else></if_stmt>

	</block_content>}</block></else></if_stmt>

	

<cpp:ifdef pos:start="117:1" pos:end="117:17">#<cpp:directive pos:start="117:2" pos:end="117:6">ifdef</cpp:directive> <name pos:start="117:8" pos:end="117:17">HAVE_READV</name></cpp:ifdef>

	<expr_stmt pos:start="119:9" pos:end="119:50"><expr pos:start="119:9" pos:end="119:49"><name pos:start="119:9" pos:end="119:10">nn</name> <operator pos:start="119:12" pos:end="119:12">=</operator> <call pos:start="119:14" pos:end="119:49"><name pos:start="119:14" pos:end="119:18">readv</name><argument_list pos:start="119:19" pos:end="119:49">(<argument pos:start="119:20" pos:end="119:24"><expr pos:start="119:20" pos:end="119:24"><name pos:start="119:20" pos:end="119:24"><name pos:start="119:20" pos:end="119:21">so</name><operator pos:start="119:22" pos:end="119:23">-&gt;</operator><name pos:start="119:24" pos:end="119:24">s</name></name></expr></argument>, <argument pos:start="119:27" pos:end="119:45"><expr pos:start="119:27" pos:end="119:45"><operator pos:start="119:27" pos:end="119:27">(</operator>struct <name pos:start="119:35" pos:end="119:39">iovec</name> <operator pos:start="119:41" pos:end="119:41">*</operator><operator pos:start="119:42" pos:end="119:42">)</operator><name pos:start="119:43" pos:end="119:45">iov</name></expr></argument>, <argument pos:start="119:48" pos:end="119:48"><expr pos:start="119:48" pos:end="119:48"><name pos:start="119:48" pos:end="119:48">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="121:9" pos:end="124:0"><expr pos:start="121:9" pos:end="121:58"><call pos:start="121:9" pos:end="121:58"><name pos:start="121:9" pos:end="121:18">DEBUG_MISC</name><argument_list pos:start="121:19" pos:end="121:58">(<argument pos:start="121:20" pos:end="121:57"><expr pos:start="121:20" pos:end="121:57"><operator pos:start="121:20" pos:end="121:20">(</operator><name pos:start="121:21" pos:end="121:23">dfd</name><operator pos:start="121:24" pos:end="121:24">,</operator> <literal type="string" pos:start="121:26" pos:end="121:52">" ... read nn = %d bytes\n"</literal><operator pos:start="121:53" pos:end="121:53">,</operator> <name pos:start="121:55" pos:end="121:56">nn</name><operator pos:start="121:57" pos:end="121:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="123:1" pos:end="123:5">#<cpp:directive pos:start="123:2" pos:end="123:5">else</cpp:directive></cpp:else>

	<expr_stmt pos:start="125:9" pos:end="128:0"><expr pos:start="125:9" pos:end="125:59"><name pos:start="125:9" pos:end="125:10">nn</name> <operator pos:start="125:12" pos:end="125:12">=</operator> <call pos:start="125:14" pos:end="125:59"><name pos:start="125:14" pos:end="125:17">recv</name><argument_list pos:start="125:18" pos:end="125:59">(<argument pos:start="125:19" pos:end="125:23"><expr pos:start="125:19" pos:end="125:23"><name pos:start="125:19" pos:end="125:23"><name pos:start="125:19" pos:end="125:20">so</name><operator pos:start="125:21" pos:end="125:22">-&gt;</operator><name pos:start="125:23" pos:end="125:23">s</name></name></expr></argument>, <argument pos:start="125:26" pos:end="125:40"><expr pos:start="125:26" pos:end="125:40"><name pos:start="125:26" pos:end="125:31"><name pos:start="125:26" pos:end="125:28">iov</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>]</index></name><operator pos:start="125:32" pos:end="125:32">.</operator><name pos:start="125:33" pos:end="125:40">iov_base</name></expr></argument>, <argument pos:start="125:43" pos:end="125:56"><expr pos:start="125:43" pos:end="125:56"><name pos:start="125:43" pos:end="125:48"><name pos:start="125:43" pos:end="125:45">iov</name><index pos:start="125:46" pos:end="125:48">[<expr pos:start="125:47" pos:end="125:47"><literal type="number" pos:start="125:47" pos:end="125:47">0</literal></expr>]</index></name><operator pos:start="125:49" pos:end="125:49">.</operator><name pos:start="125:50" pos:end="125:56">iov_len</name></expr></argument>,<argument pos:start="125:58" pos:end="125:58"><expr pos:start="125:58" pos:end="125:58"><literal type="number" pos:start="125:58" pos:end="125:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="127:1" pos:end="127:6">#<cpp:directive pos:start="127:2" pos:end="127:6">endif</cpp:directive></cpp:endif>	

	<if_stmt pos:start="129:9" pos:end="152:0"><if pos:start="129:9" pos:end="152:0">if <condition pos:start="129:12" pos:end="129:20">(<expr pos:start="129:13" pos:end="129:19"><name pos:start="129:13" pos:end="129:14">nn</name> <operator pos:start="129:16" pos:end="129:17">&lt;=</operator> <literal type="number" pos:start="129:19" pos:end="129:19">0</literal></expr>)</condition> <block pos:start="129:22" pos:end="152:0">{<block_content pos:start="131:17" pos:end="145:17">

		<if_stmt pos:start="131:17" pos:end="145:17"><if pos:start="131:17" pos:end="133:33">if <condition pos:start="131:20" pos:end="131:66">(<expr pos:start="131:21" pos:end="131:65"><name pos:start="131:21" pos:end="131:22">nn</name> <operator pos:start="131:24" pos:end="131:24">&lt;</operator> <literal type="number" pos:start="131:26" pos:end="131:26">0</literal> <operator pos:start="131:28" pos:end="131:29">&amp;&amp;</operator> <operator pos:start="131:31" pos:end="131:31">(</operator><name pos:start="131:32" pos:end="131:36">errno</name> <operator pos:start="131:38" pos:end="131:39">==</operator> <name pos:start="131:41" pos:end="131:45">EINTR</name> <operator pos:start="131:47" pos:end="131:48">||</operator> <name pos:start="131:50" pos:end="131:54">errno</name> <operator pos:start="131:56" pos:end="131:57">==</operator> <name pos:start="131:59" pos:end="131:64">EAGAIN</name><operator pos:start="131:65" pos:end="131:65">)</operator></expr>)</condition><block type="pseudo" pos:start="133:25" pos:end="133:33"><block_content pos:start="133:25" pos:end="133:33">

			<return pos:start="133:25" pos:end="133:33">return <expr pos:start="133:32" pos:end="133:32"><literal type="number" pos:start="133:32" pos:end="133:32">0</literal></expr>;</return></block_content></block></if>

		<else pos:start="135:17" pos:end="145:17">else <block pos:start="135:22" pos:end="145:17">{<block_content pos:start="137:25" pos:end="143:34">

			<expr_stmt pos:start="137:25" pos:end="137:125"><expr pos:start="137:25" pos:end="137:124"><call pos:start="137:25" pos:end="137:124"><name pos:start="137:25" pos:end="137:34">DEBUG_MISC</name><argument_list pos:start="137:35" pos:end="137:124">(<argument pos:start="137:36" pos:end="137:123"><expr pos:start="137:36" pos:end="137:123"><operator pos:start="137:36" pos:end="137:36">(</operator><name pos:start="137:37" pos:end="137:39">dfd</name><operator pos:start="137:40" pos:end="137:40">,</operator> <literal type="string" pos:start="137:42" pos:end="137:95">" --- soread() disconnected, nn = %d, errno = %d-%s\n"</literal><operator pos:start="137:96" pos:end="137:96">,</operator> <name pos:start="137:98" pos:end="137:99">nn</name><operator pos:start="137:100" pos:end="137:100">,</operator> <name pos:start="137:102" pos:end="137:106">errno</name><operator pos:start="137:107" pos:end="137:107">,</operator><call pos:start="137:108" pos:end="137:122"><name pos:start="137:108" pos:end="137:115">strerror</name><argument_list pos:start="137:116" pos:end="137:122">(<argument pos:start="137:117" pos:end="137:121"><expr pos:start="137:117" pos:end="137:121"><name pos:start="137:117" pos:end="137:121">errno</name></expr></argument>)</argument_list></call><operator pos:start="137:123" pos:end="137:123">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="139:25" pos:end="139:43"><expr pos:start="139:25" pos:end="139:42"><call pos:start="139:25" pos:end="139:42"><name pos:start="139:25" pos:end="139:38">sofcantrcvmore</name><argument_list pos:start="139:39" pos:end="139:42">(<argument pos:start="139:40" pos:end="139:41"><expr pos:start="139:40" pos:end="139:41"><name pos:start="139:40" pos:end="139:41">so</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<expr_stmt pos:start="141:25" pos:end="141:54"><expr pos:start="141:25" pos:end="141:53"><call pos:start="141:25" pos:end="141:53"><name pos:start="141:25" pos:end="141:38">tcp_sockclosed</name><argument_list pos:start="141:39" pos:end="141:53">(<argument pos:start="141:40" pos:end="141:52"><expr pos:start="141:40" pos:end="141:52"><call pos:start="141:40" pos:end="141:52"><name pos:start="141:40" pos:end="141:48">sototcpcb</name><argument_list pos:start="141:49" pos:end="141:52">(<argument pos:start="141:50" pos:end="141:51"><expr pos:start="141:50" pos:end="141:51"><name pos:start="141:50" pos:end="141:51">so</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

			<return pos:start="143:25" pos:end="143:34">return <expr pos:start="143:32" pos:end="143:33"><operator pos:start="143:32" pos:end="143:32">-</operator><literal type="number" pos:start="143:33" pos:end="143:33">1</literal></expr>;</return>

		</block_content>}</block></else></if_stmt>

	</block_content>}</block></if></if_stmt>

	

<cpp:ifndef pos:start="151:1" pos:end="151:18">#<cpp:directive pos:start="151:2" pos:end="151:7">ifndef</cpp:directive> <name pos:start="151:9" pos:end="151:18">HAVE_READV</name></cpp:ifndef>

	<comment type="block" pos:start="153:9" pos:end="169:11">/*

	 * If there was no error, try and read the second time round

	 * We read again if n = 2 (ie, there's another part of the buffer)

	 * and we read as much as we could in the first read

	 * We don't test for &lt;= 0 this time, because there legitimately

	 * might not be any more data (since the socket is non-blocking),

	 * a close will be detected on next iteration.

	 * A return of -1 wont (shouldn't) happen, since it didn't happen above

	 */</comment>

	<if_stmt pos:start="171:9" pos:end="173:64"><if pos:start="171:9" pos:end="173:64">if <condition pos:start="171:12" pos:end="171:43">(<expr pos:start="171:13" pos:end="171:42"><name pos:start="171:13" pos:end="171:13">n</name> <operator pos:start="171:15" pos:end="171:16">==</operator> <literal type="number" pos:start="171:18" pos:end="171:18">2</literal> <operator pos:start="171:20" pos:end="171:21">&amp;&amp;</operator> <name pos:start="171:23" pos:end="171:24">nn</name> <operator pos:start="171:26" pos:end="171:27">==</operator> <name pos:start="171:29" pos:end="171:34"><name pos:start="171:29" pos:end="171:31">iov</name><index pos:start="171:32" pos:end="171:34">[<expr pos:start="171:33" pos:end="171:33"><literal type="number" pos:start="171:33" pos:end="171:33">0</literal></expr>]</index></name><operator pos:start="171:35" pos:end="171:35">.</operator><name pos:start="171:36" pos:end="171:42">iov_len</name></expr>)</condition><block type="pseudo" pos:start="173:12" pos:end="173:64"><block_content pos:start="173:12" pos:end="173:64">

	   <expr_stmt pos:start="173:12" pos:end="173:64"><expr pos:start="173:12" pos:end="173:63"><name pos:start="173:12" pos:end="173:13">nn</name> <operator pos:start="173:15" pos:end="173:16">+=</operator> <call pos:start="173:18" pos:end="173:63"><name pos:start="173:18" pos:end="173:21">recv</name><argument_list pos:start="173:22" pos:end="173:63">(<argument pos:start="173:23" pos:end="173:27"><expr pos:start="173:23" pos:end="173:27"><name pos:start="173:23" pos:end="173:27"><name pos:start="173:23" pos:end="173:24">so</name><operator pos:start="173:25" pos:end="173:26">-&gt;</operator><name pos:start="173:27" pos:end="173:27">s</name></name></expr></argument>, <argument pos:start="173:30" pos:end="173:44"><expr pos:start="173:30" pos:end="173:44"><name pos:start="173:30" pos:end="173:35"><name pos:start="173:30" pos:end="173:32">iov</name><index pos:start="173:33" pos:end="173:35">[<expr pos:start="173:34" pos:end="173:34"><literal type="number" pos:start="173:34" pos:end="173:34">1</literal></expr>]</index></name><operator pos:start="173:36" pos:end="173:36">.</operator><name pos:start="173:37" pos:end="173:44">iov_base</name></expr></argument>, <argument pos:start="173:47" pos:end="173:60"><expr pos:start="173:47" pos:end="173:60"><name pos:start="173:47" pos:end="173:52"><name pos:start="173:47" pos:end="173:49">iov</name><index pos:start="173:50" pos:end="173:52">[<expr pos:start="173:51" pos:end="173:51"><literal type="number" pos:start="173:51" pos:end="173:51">1</literal></expr>]</index></name><operator pos:start="173:53" pos:end="173:53">.</operator><name pos:start="173:54" pos:end="173:60">iov_len</name></expr></argument>,<argument pos:start="173:62" pos:end="173:62"><expr pos:start="173:62" pos:end="173:62"><literal type="number" pos:start="173:62" pos:end="173:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	

	<expr_stmt pos:start="177:9" pos:end="180:0"><expr pos:start="177:9" pos:end="177:58"><call pos:start="177:9" pos:end="177:58"><name pos:start="177:9" pos:end="177:18">DEBUG_MISC</name><argument_list pos:start="177:19" pos:end="177:58">(<argument pos:start="177:20" pos:end="177:57"><expr pos:start="177:20" pos:end="177:57"><operator pos:start="177:20" pos:end="177:20">(</operator><name pos:start="177:21" pos:end="177:23">dfd</name><operator pos:start="177:24" pos:end="177:24">,</operator> <literal type="string" pos:start="177:26" pos:end="177:52">" ... read nn = %d bytes\n"</literal><operator pos:start="177:53" pos:end="177:53">,</operator> <name pos:start="177:55" pos:end="177:56">nn</name><operator pos:start="177:57" pos:end="177:57">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="179:1" pos:end="179:6">#<cpp:directive pos:start="179:2" pos:end="179:6">endif</cpp:directive></cpp:endif>

	

	<comment type="block" pos:start="183:9" pos:end="183:27">/* Update fields */</comment>

	<expr_stmt pos:start="185:9" pos:end="185:24"><expr pos:start="185:9" pos:end="185:23"><name pos:start="185:9" pos:end="185:17"><name pos:start="185:9" pos:end="185:10">sb</name><operator pos:start="185:11" pos:end="185:12">-&gt;</operator><name pos:start="185:13" pos:end="185:17">sb_cc</name></name> <operator pos:start="185:19" pos:end="185:20">+=</operator> <name pos:start="185:22" pos:end="185:23">nn</name></expr>;</expr_stmt>

	<expr_stmt pos:start="187:9" pos:end="187:26"><expr pos:start="187:9" pos:end="187:25"><name pos:start="187:9" pos:end="187:19"><name pos:start="187:9" pos:end="187:10">sb</name><operator pos:start="187:11" pos:end="187:12">-&gt;</operator><name pos:start="187:13" pos:end="187:19">sb_wptr</name></name> <operator pos:start="187:21" pos:end="187:22">+=</operator> <name pos:start="187:24" pos:end="187:25">nn</name></expr>;</expr_stmt>

	<if_stmt pos:start="189:9" pos:end="191:46"><if pos:start="189:9" pos:end="191:46">if <condition pos:start="189:12" pos:end="189:58">(<expr pos:start="189:13" pos:end="189:57"><name pos:start="189:13" pos:end="189:23"><name pos:start="189:13" pos:end="189:14">sb</name><operator pos:start="189:15" pos:end="189:16">-&gt;</operator><name pos:start="189:17" pos:end="189:23">sb_wptr</name></name> <operator pos:start="189:25" pos:end="189:26">&gt;=</operator> <operator pos:start="189:28" pos:end="189:28">(</operator><name pos:start="189:29" pos:end="189:39"><name pos:start="189:29" pos:end="189:30">sb</name><operator pos:start="189:31" pos:end="189:32">-&gt;</operator><name pos:start="189:33" pos:end="189:39">sb_data</name></name> <operator pos:start="189:41" pos:end="189:41">+</operator> <name pos:start="189:43" pos:end="189:56"><name pos:start="189:43" pos:end="189:44">sb</name><operator pos:start="189:45" pos:end="189:46">-&gt;</operator><name pos:start="189:47" pos:end="189:56">sb_datalen</name></name><operator pos:start="189:57" pos:end="189:57">)</operator></expr>)</condition><block type="pseudo" pos:start="191:17" pos:end="191:46"><block_content pos:start="191:17" pos:end="191:46">

		<expr_stmt pos:start="191:17" pos:end="191:46"><expr pos:start="191:17" pos:end="191:45"><name pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:18">sb</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:27">sb_wptr</name></name> <operator pos:start="191:29" pos:end="191:30">-=</operator> <name pos:start="191:32" pos:end="191:45"><name pos:start="191:32" pos:end="191:33">sb</name><operator pos:start="191:34" pos:end="191:35">-&gt;</operator><name pos:start="191:36" pos:end="191:45">sb_datalen</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<return pos:start="193:9" pos:end="193:18">return <expr pos:start="193:16" pos:end="193:17"><name pos:start="193:16" pos:end="193:17">nn</name></expr>;</return>

</block_content>}</block>
</unit>
