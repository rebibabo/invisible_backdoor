<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5030.c" pos:tabs="8"><function pos:start="1:1" pos:end="221:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">qemu_loadvm_state</name><parameter_list pos:start="1:22" pos:end="1:34">(<parameter pos:start="1:23" pos:end="1:33"><decl pos:start="1:23" pos:end="1:33"><type pos:start="1:23" pos:end="1:32"><name pos:start="1:23" pos:end="1:30">QEMUFile</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:33">f</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="221:1">{<block_content pos:start="5:5" pos:end="219:15">

    <macro pos:start="5:5" pos:end="5:31"><name pos:start="5:5" pos:end="5:13">LIST_HEAD</name><argument_list pos:start="5:14" pos:end="5:31">(<argument/>, <argument pos:start="5:17" pos:end="5:30">LoadStateEntry</argument>)</argument_list></macro> <expr_stmt pos:start="5:33" pos:end="7:47"><expr pos:start="5:33" pos:end="7:46"><name pos:start="5:33" pos:end="5:47">loadvm_handlers</name> <operator pos:start="5:49" pos:end="5:49">=</operator>

        <call pos:start="7:9" pos:end="7:46"><name pos:start="7:9" pos:end="7:29">LIST_HEAD_INITIALIZER</name><argument_list pos:start="7:30" pos:end="7:46">(<argument pos:start="7:31" pos:end="7:45"><expr pos:start="7:31" pos:end="7:45"><name pos:start="7:31" pos:end="7:45">loadvm_handlers</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:22"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">LoadStateEntry</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:22">le</name></decl>, <decl pos:start="9:25" pos:end="9:31"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:31">new_le</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">uint8_t</name></type> <name pos:start="11:13" pos:end="11:24">section_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:19"><decl pos:start="13:5" pos:end="13:18"><type pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:12">unsigned</name> <name pos:start="13:14" pos:end="13:16">int</name></type> <name pos:start="13:18" pos:end="13:18">v</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:25"><expr pos:start="19:5" pos:end="19:24"><name pos:start="19:5" pos:end="19:5">v</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <call pos:start="19:9" pos:end="19:24"><name pos:start="19:9" pos:end="19:21">qemu_get_be32</name><argument_list pos:start="19:22" pos:end="19:24">(<argument pos:start="19:23" pos:end="19:23"><expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:23"><if pos:start="21:5" pos:end="23:23">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:9">v</name> <operator pos:start="21:11" pos:end="21:12">!=</operator> <name pos:start="21:14" pos:end="21:31">QEMU_VM_FILE_MAGIC</name></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:23"><block_content pos:start="23:9" pos:end="23:23">

        <return pos:start="23:9" pos:end="23:23">return <expr pos:start="23:16" pos:end="23:22"><operator pos:start="23:16" pos:end="23:16">-</operator><name pos:start="23:17" pos:end="23:22">EINVAL</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:25"><expr pos:start="27:5" pos:end="27:24"><name pos:start="27:5" pos:end="27:5">v</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:24"><name pos:start="27:9" pos:end="27:21">qemu_get_be32</name><argument_list pos:start="27:22" pos:end="27:24">(<argument pos:start="27:23" pos:end="27:23"><expr pos:start="27:23" pos:end="27:23"><name pos:start="27:23" pos:end="27:23">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="35:5"><if pos:start="29:5" pos:end="35:5">if <condition pos:start="29:8" pos:end="29:41">(<expr pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:9">v</name> <operator pos:start="29:11" pos:end="29:12">==</operator> <name pos:start="29:14" pos:end="29:40">QEMU_VM_FILE_VERSION_COMPAT</name></expr>)</condition> <block pos:start="29:43" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:24">

        <expr_stmt pos:start="31:9" pos:end="31:81"><expr pos:start="31:9" pos:end="31:80"><call pos:start="31:9" pos:end="31:80"><name pos:start="31:9" pos:end="31:15">fprintf</name><argument_list pos:start="31:16" pos:end="31:80">(<argument pos:start="31:17" pos:end="31:22"><expr pos:start="31:17" pos:end="31:22"><name pos:start="31:17" pos:end="31:22">stderr</name></expr></argument>, <argument pos:start="31:25" pos:end="31:79"><expr pos:start="31:25" pos:end="31:79"><literal type="string" pos:start="31:25" pos:end="31:79">"SaveVM v2 format is obsolete and don't work anymore\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:24">return <expr pos:start="33:16" pos:end="33:23"><operator pos:start="33:16" pos:end="33:16">-</operator><name pos:start="33:17" pos:end="33:23">ENOTSUP</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="37:5" pos:end="39:24"><if pos:start="37:5" pos:end="39:24">if <condition pos:start="37:8" pos:end="37:34">(<expr pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:9">v</name> <operator pos:start="37:11" pos:end="37:12">!=</operator> <name pos:start="37:14" pos:end="37:33">QEMU_VM_FILE_VERSION</name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:24"><block_content pos:start="39:9" pos:end="39:24">

        <return pos:start="39:9" pos:end="39:24">return <expr pos:start="39:16" pos:end="39:23"><operator pos:start="39:16" pos:end="39:16">-</operator><name pos:start="39:17" pos:end="39:23">ENOTSUP</name></expr>;</return></block_content></block></if></if_stmt>



    <while pos:start="43:5" pos:end="193:5">while <condition pos:start="43:11" pos:end="43:60">(<expr pos:start="43:12" pos:end="43:59"><operator pos:start="43:12" pos:end="43:12">(</operator><name pos:start="43:13" pos:end="43:24">section_type</name> <operator pos:start="43:26" pos:end="43:26">=</operator> <call pos:start="43:28" pos:end="43:43"><name pos:start="43:28" pos:end="43:40">qemu_get_byte</name><argument_list pos:start="43:41" pos:end="43:43">(<argument pos:start="43:42" pos:end="43:42"><expr pos:start="43:42" pos:end="43:42"><name pos:start="43:42" pos:end="43:42">f</name></expr></argument>)</argument_list></call><operator pos:start="43:44" pos:end="43:44">)</operator> <operator pos:start="43:46" pos:end="43:47">!=</operator> <name pos:start="43:49" pos:end="43:59">QEMU_VM_EOF</name></expr>)</condition> <block pos:start="43:62" pos:end="193:5">{<block_content pos:start="45:9" pos:end="191:9">

        <decl_stmt pos:start="45:9" pos:end="45:53"><decl pos:start="45:9" pos:end="45:28"><type pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:16">uint32_t</name></type> <name pos:start="45:18" pos:end="45:28">instance_id</name></decl>, <decl pos:start="45:31" pos:end="45:40"><type ref="prev" pos:start="45:9" pos:end="45:16"/><name pos:start="45:31" pos:end="45:40">version_id</name></decl>, <decl pos:start="45:43" pos:end="45:52"><type ref="prev" pos:start="45:9" pos:end="45:16"/><name pos:start="45:43" pos:end="45:52">section_id</name></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:27"><decl pos:start="47:9" pos:end="47:26"><type pos:start="47:9" pos:end="47:24"><name pos:start="47:9" pos:end="47:22">SaveStateEntry</name> <modifier pos:start="47:24" pos:end="47:24">*</modifier></type><name pos:start="47:25" pos:end="47:26">se</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:24"><decl pos:start="49:9" pos:end="49:23"><type pos:start="49:9" pos:end="49:12"><name pos:start="49:9" pos:end="49:12">char</name></type> <name pos:start="49:14" pos:end="49:23"><name pos:start="49:14" pos:end="49:18">idstr</name><index pos:start="49:19" pos:end="49:23">[<expr pos:start="49:20" pos:end="49:22"><literal type="number" pos:start="49:20" pos:end="49:22">257</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="51:9" pos:end="51:16"><decl pos:start="51:9" pos:end="51:15"><type pos:start="51:9" pos:end="51:11"><name pos:start="51:9" pos:end="51:11">int</name></type> <name pos:start="51:13" pos:end="51:15">len</name></decl>;</decl_stmt>



        <switch pos:start="55:9" pos:end="191:9">switch <condition pos:start="55:16" pos:end="55:29">(<expr pos:start="55:17" pos:end="55:28"><name pos:start="55:17" pos:end="55:28">section_type</name></expr>)</condition> <block pos:start="55:31" pos:end="191:9">{<block_content pos:start="57:9" pos:end="189:21">

        <case pos:start="57:9" pos:end="57:35">case <expr pos:start="57:14" pos:end="57:34"><name pos:start="57:14" pos:end="57:34">QEMU_VM_SECTION_START</name></expr>:</case>

        <case pos:start="59:9" pos:end="59:34">case <expr pos:start="59:14" pos:end="59:33"><name pos:start="59:14" pos:end="59:33">QEMU_VM_SECTION_FULL</name></expr>:</case>

            <comment type="block" pos:start="61:13" pos:end="61:36">/* Read section start */</comment>

            <expr_stmt pos:start="63:13" pos:end="63:42"><expr pos:start="63:13" pos:end="63:41"><name pos:start="63:13" pos:end="63:22">section_id</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <call pos:start="63:26" pos:end="63:41"><name pos:start="63:26" pos:end="63:38">qemu_get_be32</name><argument_list pos:start="63:39" pos:end="63:41">(<argument pos:start="63:40" pos:end="63:40"><expr pos:start="63:40" pos:end="63:40"><name pos:start="63:40" pos:end="63:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:35"><expr pos:start="65:13" pos:end="65:34"><name pos:start="65:13" pos:end="65:15">len</name> <operator pos:start="65:17" pos:end="65:17">=</operator> <call pos:start="65:19" pos:end="65:34"><name pos:start="65:19" pos:end="65:31">qemu_get_byte</name><argument_list pos:start="65:32" pos:end="65:34">(<argument pos:start="65:33" pos:end="65:33"><expr pos:start="65:33" pos:end="65:33"><name pos:start="65:33" pos:end="65:33">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="67:13" pos:end="67:54"><expr pos:start="67:13" pos:end="67:53"><call pos:start="67:13" pos:end="67:53"><name pos:start="67:13" pos:end="67:27">qemu_get_buffer</name><argument_list pos:start="67:28" pos:end="67:53">(<argument pos:start="67:29" pos:end="67:29"><expr pos:start="67:29" pos:end="67:29"><name pos:start="67:29" pos:end="67:29">f</name></expr></argument>, <argument pos:start="67:32" pos:end="67:47"><expr pos:start="67:32" pos:end="67:47"><operator pos:start="67:32" pos:end="67:32">(</operator><name pos:start="67:33" pos:end="67:39">uint8_t</name> <operator pos:start="67:41" pos:end="67:41">*</operator><operator pos:start="67:42" pos:end="67:42">)</operator><name pos:start="67:43" pos:end="67:47">idstr</name></expr></argument>, <argument pos:start="67:50" pos:end="67:52"><expr pos:start="67:50" pos:end="67:52"><name pos:start="67:50" pos:end="67:52">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="69:13" pos:end="69:27"><expr pos:start="69:13" pos:end="69:26"><name pos:start="69:13" pos:end="69:22"><name pos:start="69:13" pos:end="69:17">idstr</name><index pos:start="69:18" pos:end="69:22">[<expr pos:start="69:19" pos:end="69:21"><name pos:start="69:19" pos:end="69:21">len</name></expr>]</index></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:43"><expr pos:start="71:13" pos:end="71:42"><name pos:start="71:13" pos:end="71:23">instance_id</name> <operator pos:start="71:25" pos:end="71:25">=</operator> <call pos:start="71:27" pos:end="71:42"><name pos:start="71:27" pos:end="71:39">qemu_get_be32</name><argument_list pos:start="71:40" pos:end="71:42">(<argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><name pos:start="71:41" pos:end="71:41">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:42"><expr pos:start="73:13" pos:end="73:41"><name pos:start="73:13" pos:end="73:22">version_id</name> <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:41"><name pos:start="73:26" pos:end="73:38">qemu_get_be32</name><argument_list pos:start="73:39" pos:end="73:41">(<argument pos:start="73:40" pos:end="73:40"><expr pos:start="73:40" pos:end="73:40"><name pos:start="73:40" pos:end="73:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <comment type="block" pos:start="77:13" pos:end="77:37">/* Find savevm section */</comment>

            <expr_stmt pos:start="79:13" pos:end="79:45"><expr pos:start="79:13" pos:end="79:44"><name pos:start="79:13" pos:end="79:14">se</name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:44"><name pos:start="79:18" pos:end="79:24">find_se</name><argument_list pos:start="79:25" pos:end="79:44">(<argument pos:start="79:26" pos:end="79:30"><expr pos:start="79:26" pos:end="79:30"><name pos:start="79:26" pos:end="79:30">idstr</name></expr></argument>, <argument pos:start="79:33" pos:end="79:43"><expr pos:start="79:33" pos:end="79:43"><name pos:start="79:33" pos:end="79:43">instance_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="81:13" pos:end="89:13"><if pos:start="81:13" pos:end="89:13">if <condition pos:start="81:16" pos:end="81:27">(<expr pos:start="81:17" pos:end="81:26"><name pos:start="81:17" pos:end="81:18">se</name> <operator pos:start="81:20" pos:end="81:21">==</operator> <name pos:start="81:23" pos:end="81:26">NULL</name></expr>)</condition> <block pos:start="81:29" pos:end="89:13">{<block_content pos:start="83:17" pos:end="87:25">

                <expr_stmt pos:start="83:17" pos:end="83:100"><expr pos:start="83:17" pos:end="83:99"><call pos:start="83:17" pos:end="83:99"><name pos:start="83:17" pos:end="83:23">fprintf</name><argument_list pos:start="83:24" pos:end="83:99">(<argument pos:start="83:25" pos:end="83:30"><expr pos:start="83:25" pos:end="83:30"><name pos:start="83:25" pos:end="83:30">stderr</name></expr></argument>, <argument pos:start="83:33" pos:end="83:78"><expr pos:start="83:33" pos:end="83:78"><literal type="string" pos:start="83:33" pos:end="83:78">"Unknown savevm section or instance '%s' %d\n"</literal></expr></argument>, <argument pos:start="83:81" pos:end="83:85"><expr pos:start="83:81" pos:end="83:85"><name pos:start="83:81" pos:end="83:85">idstr</name></expr></argument>, <argument pos:start="83:88" pos:end="83:98"><expr pos:start="83:88" pos:end="83:98"><name pos:start="83:88" pos:end="83:98">instance_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:30"><expr pos:start="85:17" pos:end="85:29"><name pos:start="85:17" pos:end="85:19">ret</name> <operator pos:start="85:21" pos:end="85:21">=</operator> <operator pos:start="85:23" pos:end="85:23">-</operator><name pos:start="85:24" pos:end="85:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="87:17" pos:end="87:25">goto <name pos:start="87:22" pos:end="87:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="93:13" pos:end="93:34">/* Validate version */</comment>

            <if_stmt pos:start="95:13" pos:end="105:13"><if pos:start="95:13" pos:end="105:13">if <condition pos:start="95:16" pos:end="95:44">(<expr pos:start="95:17" pos:end="95:43"><name pos:start="95:17" pos:end="95:26">version_id</name> <operator pos:start="95:28" pos:end="95:28">&gt;</operator> <name pos:start="95:30" pos:end="95:43"><name pos:start="95:30" pos:end="95:31">se</name><operator pos:start="95:32" pos:end="95:33">-&gt;</operator><name pos:start="95:34" pos:end="95:43">version_id</name></name></expr>)</condition> <block pos:start="95:46" pos:end="105:13">{<block_content pos:start="97:17" pos:end="103:25">

                <expr_stmt pos:start="97:17" pos:end="99:59"><expr pos:start="97:17" pos:end="99:58"><call pos:start="97:17" pos:end="99:58"><name pos:start="97:17" pos:end="97:23">fprintf</name><argument_list pos:start="97:24" pos:end="99:58">(<argument pos:start="97:25" pos:end="97:30"><expr pos:start="97:25" pos:end="97:30"><name pos:start="97:25" pos:end="97:30">stderr</name></expr></argument>, <argument pos:start="97:33" pos:end="97:79"><expr pos:start="97:33" pos:end="97:79"><literal type="string" pos:start="97:33" pos:end="97:79">"savevm: unsupported version %d for '%s' v%d\n"</literal></expr></argument>,

                        <argument pos:start="99:25" pos:end="99:34"><expr pos:start="99:25" pos:end="99:34"><name pos:start="99:25" pos:end="99:34">version_id</name></expr></argument>, <argument pos:start="99:37" pos:end="99:41"><expr pos:start="99:37" pos:end="99:41"><name pos:start="99:37" pos:end="99:41">idstr</name></expr></argument>, <argument pos:start="99:44" pos:end="99:57"><expr pos:start="99:44" pos:end="99:57"><name pos:start="99:44" pos:end="99:57"><name pos:start="99:44" pos:end="99:45">se</name><operator pos:start="99:46" pos:end="99:47">-&gt;</operator><name pos:start="99:48" pos:end="99:57">version_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="101:17" pos:end="101:30"><expr pos:start="101:17" pos:end="101:29"><name pos:start="101:17" pos:end="101:19">ret</name> <operator pos:start="101:21" pos:end="101:21">=</operator> <operator pos:start="101:23" pos:end="101:23">-</operator><name pos:start="101:24" pos:end="101:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="103:17" pos:end="103:25">goto <name pos:start="103:22" pos:end="103:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <comment type="block" pos:start="109:13" pos:end="109:27">/* Add entry */</comment>

            <expr_stmt pos:start="111:13" pos:end="111:43"><expr pos:start="111:13" pos:end="111:42"><name pos:start="111:13" pos:end="111:14">le</name> <operator pos:start="111:16" pos:end="111:16">=</operator> <call pos:start="111:18" pos:end="111:42"><name pos:start="111:18" pos:end="111:29">qemu_mallocz</name><argument_list pos:start="111:30" pos:end="111:42">(<argument pos:start="111:31" pos:end="111:41"><expr pos:start="111:31" pos:end="111:41"><sizeof pos:start="111:31" pos:end="111:41">sizeof<argument_list pos:start="111:37" pos:end="111:41">(<argument pos:start="111:38" pos:end="111:40"><expr pos:start="111:38" pos:end="111:40"><operator pos:start="111:38" pos:end="111:38">*</operator><name pos:start="111:39" pos:end="111:40">le</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="115:13" pos:end="115:24"><expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:18"><name pos:start="115:13" pos:end="115:14">le</name><operator pos:start="115:15" pos:end="115:16">-&gt;</operator><name pos:start="115:17" pos:end="115:18">se</name></name> <operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:23">se</name></expr>;</expr_stmt>

            <expr_stmt pos:start="117:13" pos:end="117:40"><expr pos:start="117:13" pos:end="117:39"><name pos:start="117:13" pos:end="117:26"><name pos:start="117:13" pos:end="117:14">le</name><operator pos:start="117:15" pos:end="117:16">-&gt;</operator><name pos:start="117:17" pos:end="117:26">section_id</name></name> <operator pos:start="117:28" pos:end="117:28">=</operator> <name pos:start="117:30" pos:end="117:39">section_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="119:13" pos:end="119:40"><expr pos:start="119:13" pos:end="119:39"><name pos:start="119:13" pos:end="119:26"><name pos:start="119:13" pos:end="119:14">le</name><operator pos:start="119:15" pos:end="119:16">-&gt;</operator><name pos:start="119:17" pos:end="119:26">version_id</name></name> <operator pos:start="119:28" pos:end="119:28">=</operator> <name pos:start="119:30" pos:end="119:39">version_id</name></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:58"><expr pos:start="121:13" pos:end="121:57"><call pos:start="121:13" pos:end="121:57"><name pos:start="121:13" pos:end="121:28">LIST_INSERT_HEAD</name><argument_list pos:start="121:29" pos:end="121:57">(<argument pos:start="121:30" pos:end="121:45"><expr pos:start="121:30" pos:end="121:45"><operator pos:start="121:30" pos:end="121:30">&amp;</operator><name pos:start="121:31" pos:end="121:45">loadvm_handlers</name></expr></argument>, <argument pos:start="121:48" pos:end="121:49"><expr pos:start="121:48" pos:end="121:49"><name pos:start="121:48" pos:end="121:49">le</name></expr></argument>, <argument pos:start="121:52" pos:end="121:56"><expr pos:start="121:52" pos:end="121:56"><name pos:start="121:52" pos:end="121:56">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="125:13" pos:end="125:58"><expr pos:start="125:13" pos:end="125:57"><name pos:start="125:13" pos:end="125:15">ret</name> <operator pos:start="125:17" pos:end="125:17">=</operator> <call pos:start="125:19" pos:end="125:57"><name pos:start="125:19" pos:end="125:30">vmstate_load</name><argument_list pos:start="125:31" pos:end="125:57">(<argument pos:start="125:32" pos:end="125:32"><expr pos:start="125:32" pos:end="125:32"><name pos:start="125:32" pos:end="125:32">f</name></expr></argument>, <argument pos:start="125:35" pos:end="125:40"><expr pos:start="125:35" pos:end="125:40"><name pos:start="125:35" pos:end="125:40"><name pos:start="125:35" pos:end="125:36">le</name><operator pos:start="125:37" pos:end="125:38">-&gt;</operator><name pos:start="125:39" pos:end="125:40">se</name></name></expr></argument>, <argument pos:start="125:43" pos:end="125:56"><expr pos:start="125:43" pos:end="125:56"><name pos:start="125:43" pos:end="125:56"><name pos:start="125:43" pos:end="125:44">le</name><operator pos:start="125:45" pos:end="125:46">-&gt;</operator><name pos:start="125:47" pos:end="125:56">version_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="127:13" pos:end="135:13"><if pos:start="127:13" pos:end="135:13">if <condition pos:start="127:16" pos:end="127:24">(<expr pos:start="127:17" pos:end="127:23"><name pos:start="127:17" pos:end="127:19">ret</name> <operator pos:start="127:21" pos:end="127:21">&lt;</operator> <literal type="number" pos:start="127:23" pos:end="127:23">0</literal></expr>)</condition> <block pos:start="127:26" pos:end="135:13">{<block_content pos:start="129:17" pos:end="133:25">

                <expr_stmt pos:start="129:17" pos:end="131:44"><expr pos:start="129:17" pos:end="131:43"><call pos:start="129:17" pos:end="131:43"><name pos:start="129:17" pos:end="129:23">fprintf</name><argument_list pos:start="129:24" pos:end="131:43">(<argument pos:start="129:25" pos:end="129:30"><expr pos:start="129:25" pos:end="129:30"><name pos:start="129:25" pos:end="129:30">stderr</name></expr></argument>, <argument pos:start="129:33" pos:end="129:109"><expr pos:start="129:33" pos:end="129:109"><literal type="string" pos:start="129:33" pos:end="129:109">"qemu: warning: error while loading state for instance 0x%x of device '%s'\n"</literal></expr></argument>,

                        <argument pos:start="131:25" pos:end="131:35"><expr pos:start="131:25" pos:end="131:35"><name pos:start="131:25" pos:end="131:35">instance_id</name></expr></argument>, <argument pos:start="131:38" pos:end="131:42"><expr pos:start="131:38" pos:end="131:42"><name pos:start="131:38" pos:end="131:42">idstr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="133:17" pos:end="133:25">goto <name pos:start="133:22" pos:end="133:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="137:13" pos:end="137:18">break;</break>

        <case pos:start="139:9" pos:end="139:34">case <expr pos:start="139:14" pos:end="139:33"><name pos:start="139:14" pos:end="139:33">QEMU_VM_SECTION_PART</name></expr>:</case>

        <case pos:start="141:9" pos:end="141:33">case <expr pos:start="141:14" pos:end="141:32"><name pos:start="141:14" pos:end="141:32">QEMU_VM_SECTION_END</name></expr>:</case>

            <expr_stmt pos:start="143:13" pos:end="143:42"><expr pos:start="143:13" pos:end="143:41"><name pos:start="143:13" pos:end="143:22">section_id</name> <operator pos:start="143:24" pos:end="143:24">=</operator> <call pos:start="143:26" pos:end="143:41"><name pos:start="143:26" pos:end="143:38">qemu_get_be32</name><argument_list pos:start="143:39" pos:end="143:41">(<argument pos:start="143:40" pos:end="143:40"><expr pos:start="143:40" pos:end="143:40"><name pos:start="143:40" pos:end="143:40">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <macro pos:start="147:13" pos:end="147:53"><name pos:start="147:13" pos:end="147:24">LIST_FOREACH</name><argument_list pos:start="147:25" pos:end="147:53">(<argument pos:start="147:26" pos:end="147:27">le</argument>, <argument pos:start="147:30" pos:end="147:45">&amp;loadvm_handlers</argument>, <argument pos:start="147:48" pos:end="147:52">entry</argument>)</argument_list></macro> <block pos:start="147:55" pos:end="155:13">{<block_content pos:start="149:17" pos:end="153:17">

                <if_stmt pos:start="149:17" pos:end="153:17"><if pos:start="149:17" pos:end="153:17">if <condition pos:start="149:20" pos:end="149:49">(<expr pos:start="149:21" pos:end="149:48"><name pos:start="149:21" pos:end="149:34"><name pos:start="149:21" pos:end="149:22">le</name><operator pos:start="149:23" pos:end="149:24">-&gt;</operator><name pos:start="149:25" pos:end="149:34">section_id</name></name> <operator pos:start="149:36" pos:end="149:37">==</operator> <name pos:start="149:39" pos:end="149:48">section_id</name></expr>)</condition> <block pos:start="149:51" pos:end="153:17">{<block_content pos:start="151:21" pos:end="151:26">

                    <break pos:start="151:21" pos:end="151:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block>

            <if_stmt pos:start="157:13" pos:end="165:13"><if pos:start="157:13" pos:end="165:13">if <condition pos:start="157:16" pos:end="157:27">(<expr pos:start="157:17" pos:end="157:26"><name pos:start="157:17" pos:end="157:18">le</name> <operator pos:start="157:20" pos:end="157:21">==</operator> <name pos:start="157:23" pos:end="157:26">NULL</name></expr>)</condition> <block pos:start="157:29" pos:end="165:13">{<block_content pos:start="159:17" pos:end="163:25">

                <expr_stmt pos:start="159:17" pos:end="159:75"><expr pos:start="159:17" pos:end="159:74"><call pos:start="159:17" pos:end="159:74"><name pos:start="159:17" pos:end="159:23">fprintf</name><argument_list pos:start="159:24" pos:end="159:74">(<argument pos:start="159:25" pos:end="159:30"><expr pos:start="159:25" pos:end="159:30"><name pos:start="159:25" pos:end="159:30">stderr</name></expr></argument>, <argument pos:start="159:33" pos:end="159:61"><expr pos:start="159:33" pos:end="159:61"><literal type="string" pos:start="159:33" pos:end="159:61">"Unknown savevm section %d\n"</literal></expr></argument>, <argument pos:start="159:64" pos:end="159:73"><expr pos:start="159:64" pos:end="159:73"><name pos:start="159:64" pos:end="159:73">section_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="161:17" pos:end="161:30"><expr pos:start="161:17" pos:end="161:29"><name pos:start="161:17" pos:end="161:19">ret</name> <operator pos:start="161:21" pos:end="161:21">=</operator> <operator pos:start="161:23" pos:end="161:23">-</operator><name pos:start="161:24" pos:end="161:29">EINVAL</name></expr>;</expr_stmt>

                <goto pos:start="163:17" pos:end="163:25">goto <name pos:start="163:22" pos:end="163:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="169:13" pos:end="169:58"><expr pos:start="169:13" pos:end="169:57"><name pos:start="169:13" pos:end="169:15">ret</name> <operator pos:start="169:17" pos:end="169:17">=</operator> <call pos:start="169:19" pos:end="169:57"><name pos:start="169:19" pos:end="169:30">vmstate_load</name><argument_list pos:start="169:31" pos:end="169:57">(<argument pos:start="169:32" pos:end="169:32"><expr pos:start="169:32" pos:end="169:32"><name pos:start="169:32" pos:end="169:32">f</name></expr></argument>, <argument pos:start="169:35" pos:end="169:40"><expr pos:start="169:35" pos:end="169:40"><name pos:start="169:35" pos:end="169:40"><name pos:start="169:35" pos:end="169:36">le</name><operator pos:start="169:37" pos:end="169:38">-&gt;</operator><name pos:start="169:39" pos:end="169:40">se</name></name></expr></argument>, <argument pos:start="169:43" pos:end="169:56"><expr pos:start="169:43" pos:end="169:56"><name pos:start="169:43" pos:end="169:56"><name pos:start="169:43" pos:end="169:44">le</name><operator pos:start="169:45" pos:end="169:46">-&gt;</operator><name pos:start="169:47" pos:end="169:56">version_id</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="171:13" pos:end="179:13"><if pos:start="171:13" pos:end="179:13">if <condition pos:start="171:16" pos:end="171:24">(<expr pos:start="171:17" pos:end="171:23"><name pos:start="171:17" pos:end="171:19">ret</name> <operator pos:start="171:21" pos:end="171:21">&lt;</operator> <literal type="number" pos:start="171:23" pos:end="171:23">0</literal></expr>)</condition> <block pos:start="171:26" pos:end="179:13">{<block_content pos:start="173:17" pos:end="177:25">

                <expr_stmt pos:start="173:17" pos:end="175:36"><expr pos:start="173:17" pos:end="175:35"><call pos:start="173:17" pos:end="175:35"><name pos:start="173:17" pos:end="173:23">fprintf</name><argument_list pos:start="173:24" pos:end="175:35">(<argument pos:start="173:25" pos:end="173:30"><expr pos:start="173:25" pos:end="173:30"><name pos:start="173:25" pos:end="173:30">stderr</name></expr></argument>, <argument pos:start="173:33" pos:end="173:90"><expr pos:start="173:33" pos:end="173:90"><literal type="string" pos:start="173:33" pos:end="173:90">"qemu: warning: error while loading state section id %d\n"</literal></expr></argument>,

                        <argument pos:start="175:25" pos:end="175:34"><expr pos:start="175:25" pos:end="175:34"><name pos:start="175:25" pos:end="175:34">section_id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="177:17" pos:end="177:25">goto <name pos:start="177:22" pos:end="177:24">out</name>;</goto>

            </block_content>}</block></if></if_stmt>

            <break pos:start="181:13" pos:end="181:18">break;</break>

        <default pos:start="183:9" pos:end="183:16">default:</default>

            <expr_stmt pos:start="185:13" pos:end="185:78"><expr pos:start="185:13" pos:end="185:77"><call pos:start="185:13" pos:end="185:77"><name pos:start="185:13" pos:end="185:19">fprintf</name><argument_list pos:start="185:20" pos:end="185:77">(<argument pos:start="185:21" pos:end="185:26"><expr pos:start="185:21" pos:end="185:26"><name pos:start="185:21" pos:end="185:26">stderr</name></expr></argument>, <argument pos:start="185:29" pos:end="185:62"><expr pos:start="185:29" pos:end="185:62"><literal type="string" pos:start="185:29" pos:end="185:62">"Unknown savevm section type %d\n"</literal></expr></argument>, <argument pos:start="185:65" pos:end="185:76"><expr pos:start="185:65" pos:end="185:76"><name pos:start="185:65" pos:end="185:76">section_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="187:13" pos:end="187:26"><expr pos:start="187:13" pos:end="187:25"><name pos:start="187:13" pos:end="187:15">ret</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <operator pos:start="187:19" pos:end="187:19">-</operator><name pos:start="187:20" pos:end="187:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="189:13" pos:end="189:21">goto <name pos:start="189:18" pos:end="189:20">out</name>;</goto>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <expr_stmt pos:start="197:5" pos:end="197:12"><expr pos:start="197:5" pos:end="197:11"><name pos:start="197:5" pos:end="197:7">ret</name> <operator pos:start="197:9" pos:end="197:9">=</operator> <literal type="number" pos:start="197:11" pos:end="197:11">0</literal></expr>;</expr_stmt>



<label pos:start="201:1" pos:end="201:4"><name pos:start="201:1" pos:end="201:3">out</name>:</label>

    <macro pos:start="203:5" pos:end="203:58"><name pos:start="203:5" pos:end="203:21">LIST_FOREACH_SAFE</name><argument_list pos:start="203:22" pos:end="203:58">(<argument pos:start="203:23" pos:end="203:24">le</argument>, <argument pos:start="203:27" pos:end="203:42">&amp;loadvm_handlers</argument>, <argument pos:start="203:45" pos:end="203:49">entry</argument>, <argument pos:start="203:52" pos:end="203:57">new_le</argument>)</argument_list></macro> <block pos:start="203:60" pos:end="209:5">{<block_content pos:start="205:9" pos:end="207:22">

        <expr_stmt pos:start="205:9" pos:end="205:31"><expr pos:start="205:9" pos:end="205:30"><call pos:start="205:9" pos:end="205:30"><name pos:start="205:9" pos:end="205:19">LIST_REMOVE</name><argument_list pos:start="205:20" pos:end="205:30">(<argument pos:start="205:21" pos:end="205:22"><expr pos:start="205:21" pos:end="205:22"><name pos:start="205:21" pos:end="205:22">le</name></expr></argument>, <argument pos:start="205:25" pos:end="205:29"><expr pos:start="205:25" pos:end="205:29"><name pos:start="205:25" pos:end="205:29">entry</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="207:9" pos:end="207:22"><expr pos:start="207:9" pos:end="207:21"><call pos:start="207:9" pos:end="207:21"><name pos:start="207:9" pos:end="207:17">qemu_free</name><argument_list pos:start="207:18" pos:end="207:21">(<argument pos:start="207:19" pos:end="207:20"><expr pos:start="207:19" pos:end="207:20"><name pos:start="207:19" pos:end="207:20">le</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="213:5" pos:end="215:19"><if pos:start="213:5" pos:end="215:19">if <condition pos:start="213:8" pos:end="213:31">(<expr pos:start="213:9" pos:end="213:30"><call pos:start="213:9" pos:end="213:30"><name pos:start="213:9" pos:end="213:27">qemu_file_has_error</name><argument_list pos:start="213:28" pos:end="213:30">(<argument pos:start="213:29" pos:end="213:29"><expr pos:start="213:29" pos:end="213:29"><name pos:start="213:29" pos:end="213:29">f</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="215:9" pos:end="215:19"><block_content pos:start="215:9" pos:end="215:19">

        <expr_stmt pos:start="215:9" pos:end="215:19"><expr pos:start="215:9" pos:end="215:18"><name pos:start="215:9" pos:end="215:11">ret</name> <operator pos:start="215:13" pos:end="215:13">=</operator> <operator pos:start="215:15" pos:end="215:15">-</operator><name pos:start="215:16" pos:end="215:18">EIO</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="219:5" pos:end="219:15">return <expr pos:start="219:12" pos:end="219:14"><name pos:start="219:12" pos:end="219:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
