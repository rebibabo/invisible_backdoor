<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16322.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">ff_intrax8_decode_picture</name><parameter_list pos:start="1:30" pos:end="3:47">(<parameter pos:start="1:31" pos:end="1:53"><decl pos:start="1:31" pos:end="1:53"><type pos:start="1:31" pos:end="1:53"><name pos:start="1:31" pos:end="1:44">IntraX8Context</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier><specifier pos:start="1:47" pos:end="1:51">const</specifier></type> <name pos:start="1:53" pos:end="1:53">w</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:65"><decl pos:start="1:56" pos:end="1:65"><type pos:start="1:56" pos:end="1:65"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:65">dquant</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:46"><decl pos:start="3:31" pos:end="3:46"><type pos:start="3:31" pos:end="3:46"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:46">quant_offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="127:1">{<block_content pos:start="7:5" pos:end="125:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:18">MpegEncContext</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier><specifier pos:start="7:21" pos:end="7:25">const</specifier></type> <name pos:start="7:27" pos:end="7:27">s</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:31">w</name><operator pos:start="7:32" pos:end="7:33">-&gt;</operator><name pos:start="7:34" pos:end="7:34">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:14"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">mb_xy</name></decl>;</decl_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:14"><expr pos:start="11:5" pos:end="11:13"><call pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:10">assert</name><argument_list pos:start="11:11" pos:end="11:13">(<argument pos:start="11:12" pos:end="11:12"><expr pos:start="11:12" pos:end="11:12"><name pos:start="11:12" pos:end="11:12">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:44"><expr pos:start="13:5" pos:end="13:43"><name pos:start="13:5" pos:end="13:23"><name pos:start="13:5" pos:end="13:5">w</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:23">use_quant_matrix</name></name> <operator pos:start="13:25" pos:end="13:25">=</operator> <call pos:start="13:27" pos:end="13:43"><name pos:start="13:27" pos:end="13:35">get_bits1</name><argument_list pos:start="13:36" pos:end="13:43">(<argument pos:start="13:37" pos:end="13:42"><expr pos:start="13:37" pos:end="13:42"><operator pos:start="13:37" pos:end="13:37">&amp;</operator><name pos:start="13:38" pos:end="13:42"><name pos:start="13:38" pos:end="13:38">s</name><operator pos:start="13:39" pos:end="13:40">-&gt;</operator><name pos:start="13:41" pos:end="13:42">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:5">w</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:13">dquant</name></name> <operator pos:start="17:15" pos:end="17:15">=</operator> <name pos:start="17:17" pos:end="17:22">dquant</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:28"><expr pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:12"><name pos:start="19:5" pos:end="19:5">w</name><operator pos:start="19:6" pos:end="19:7">-&gt;</operator><name pos:start="19:8" pos:end="19:12">quant</name></name>  <operator pos:start="19:15" pos:end="19:15">=</operator> <name pos:start="19:17" pos:end="19:22">dquant</name> <operator pos:start="19:24" pos:end="19:25">&gt;&gt;</operator> <literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:29"><expr pos:start="21:5" pos:end="21:28"><name pos:start="21:5" pos:end="21:11"><name pos:start="21:5" pos:end="21:5">w</name><operator pos:start="21:6" pos:end="21:7">-&gt;</operator><name pos:start="21:8" pos:end="21:11">qsum</name></name>   <operator pos:start="21:15" pos:end="21:15">=</operator> <name pos:start="21:17" pos:end="21:28">quant_offset</name></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:71"><expr pos:start="25:5" pos:end="25:70"><name pos:start="25:5" pos:end="25:27"><name pos:start="25:5" pos:end="25:5">w</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:27">divide_quant_dc_luma</name></name> <operator pos:start="25:29" pos:end="25:29">=</operator> <operator pos:start="25:31" pos:end="25:31">(</operator><operator pos:start="25:32" pos:end="25:32">(</operator><literal type="number" pos:start="25:33" pos:end="25:33">1</literal> <operator pos:start="25:35" pos:end="25:36">&lt;&lt;</operator> <literal type="number" pos:start="25:38" pos:end="25:39">16</literal><operator pos:start="25:40" pos:end="25:40">)</operator> <operator pos:start="25:42" pos:end="25:42">+</operator> <operator pos:start="25:44" pos:end="25:44">(</operator><name pos:start="25:45" pos:end="25:52"><name pos:start="25:45" pos:end="25:45">w</name><operator pos:start="25:46" pos:end="25:47">-&gt;</operator><name pos:start="25:48" pos:end="25:52">quant</name></name> <operator pos:start="25:54" pos:end="25:55">&gt;&gt;</operator> <literal type="number" pos:start="25:57" pos:end="25:57">1</literal><operator pos:start="25:58" pos:end="25:58">)</operator><operator pos:start="25:59" pos:end="25:59">)</operator> <operator pos:start="25:61" pos:end="25:61">/</operator> <name pos:start="25:63" pos:end="25:70"><name pos:start="25:63" pos:end="25:63">w</name><operator pos:start="25:64" pos:end="25:65">-&gt;</operator><name pos:start="25:66" pos:end="25:70">quant</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="39:5"><if pos:start="27:5" pos:end="33:5">if <condition pos:start="27:8" pos:end="27:21">(<expr pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:16"><name pos:start="27:9" pos:end="27:9">w</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:16">quant</name></name> <operator pos:start="27:18" pos:end="27:18">&lt;</operator> <literal type="number" pos:start="27:20" pos:end="27:20">5</literal></expr>)</condition> <block pos:start="27:23" pos:end="33:5">{<block_content pos:start="29:9" pos:end="31:60">

        <expr_stmt pos:start="29:9" pos:end="29:45"><expr pos:start="29:9" pos:end="29:44"><name pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:9">w</name><operator pos:start="29:10" pos:end="29:11">-&gt;</operator><name pos:start="29:12" pos:end="29:26">quant_dc_chroma</name></name>        <operator pos:start="29:35" pos:end="29:35">=</operator> <name pos:start="29:37" pos:end="29:44"><name pos:start="29:37" pos:end="29:37">w</name><operator pos:start="29:38" pos:end="29:39">-&gt;</operator><name pos:start="29:40" pos:end="29:44">quant</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:60"><expr pos:start="31:9" pos:end="31:59"><name pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:9">w</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:33">divide_quant_dc_chroma</name></name> <operator pos:start="31:35" pos:end="31:35">=</operator> <name pos:start="31:37" pos:end="31:59"><name pos:start="31:37" pos:end="31:37">w</name><operator pos:start="31:38" pos:end="31:39">-&gt;</operator><name pos:start="31:40" pos:end="31:59">divide_quant_dc_luma</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="39:5">else <block pos:start="33:12" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:97">

        <expr_stmt pos:start="35:9" pos:end="35:69"><expr pos:start="35:9" pos:end="35:68"><name pos:start="35:9" pos:end="35:26"><name pos:start="35:9" pos:end="35:9">w</name><operator pos:start="35:10" pos:end="35:11">-&gt;</operator><name pos:start="35:12" pos:end="35:26">quant_dc_chroma</name></name>        <operator pos:start="35:35" pos:end="35:35">=</operator> <name pos:start="35:37" pos:end="35:44"><name pos:start="35:37" pos:end="35:37">w</name><operator pos:start="35:38" pos:end="35:39">-&gt;</operator><name pos:start="35:40" pos:end="35:44">quant</name></name> <operator pos:start="35:46" pos:end="35:46">+</operator> <operator pos:start="35:48" pos:end="35:48">(</operator><operator pos:start="35:49" pos:end="35:49">(</operator><name pos:start="35:50" pos:end="35:57"><name pos:start="35:50" pos:end="35:50">w</name><operator pos:start="35:51" pos:end="35:52">-&gt;</operator><name pos:start="35:53" pos:end="35:57">quant</name></name> <operator pos:start="35:59" pos:end="35:59">+</operator> <literal type="number" pos:start="35:61" pos:end="35:61">3</literal><operator pos:start="35:62" pos:end="35:62">)</operator> <operator pos:start="35:64" pos:end="35:65">&gt;&gt;</operator> <literal type="number" pos:start="35:67" pos:end="35:67">3</literal><operator pos:start="35:68" pos:end="35:68">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:97"><expr pos:start="37:9" pos:end="37:96"><name pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:9">w</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:33">divide_quant_dc_chroma</name></name> <operator pos:start="37:35" pos:end="37:35">=</operator> <operator pos:start="37:37" pos:end="37:37">(</operator><operator pos:start="37:38" pos:end="37:38">(</operator><literal type="number" pos:start="37:39" pos:end="37:39">1</literal> <operator pos:start="37:41" pos:end="37:42">&lt;&lt;</operator> <literal type="number" pos:start="37:44" pos:end="37:45">16</literal><operator pos:start="37:46" pos:end="37:46">)</operator> <operator pos:start="37:48" pos:end="37:48">+</operator> <operator pos:start="37:50" pos:end="37:50">(</operator><name pos:start="37:51" pos:end="37:68"><name pos:start="37:51" pos:end="37:51">w</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:68">quant_dc_chroma</name></name> <operator pos:start="37:70" pos:end="37:71">&gt;&gt;</operator> <literal type="number" pos:start="37:73" pos:end="37:73">1</literal><operator pos:start="37:74" pos:end="37:74">)</operator><operator pos:start="37:75" pos:end="37:75">)</operator> <operator pos:start="37:77" pos:end="37:77">/</operator> <name pos:start="37:79" pos:end="37:96"><name pos:start="37:79" pos:end="37:79">w</name><operator pos:start="37:80" pos:end="37:81">-&gt;</operator><name pos:start="37:82" pos:end="37:96">quant_dc_chroma</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:27"><expr pos:start="41:5" pos:end="41:26"><call pos:start="41:5" pos:end="41:26"><name pos:start="41:5" pos:end="41:23">x8_reset_vlc_tables</name><argument_list pos:start="41:24" pos:end="41:26">(<argument pos:start="41:25" pos:end="41:25"><expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="45:5" pos:end="119:5">for <control pos:start="45:9" pos:end="45:60">(<init pos:start="45:10" pos:end="45:21"><expr pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:16"><name pos:start="45:10" pos:end="45:10">s</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:16">mb_y</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr>;</init> <condition pos:start="45:23" pos:end="45:49"><expr pos:start="45:23" pos:end="45:48"><name pos:start="45:23" pos:end="45:29"><name pos:start="45:23" pos:end="45:23">s</name><operator pos:start="45:24" pos:end="45:25">-&gt;</operator><name pos:start="45:26" pos:end="45:29">mb_y</name></name> <operator pos:start="45:31" pos:end="45:31">&lt;</operator> <name pos:start="45:33" pos:end="45:44"><name pos:start="45:33" pos:end="45:33">s</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:44">mb_height</name></name> <operator pos:start="45:46" pos:end="45:46">*</operator> <literal type="number" pos:start="45:48" pos:end="45:48">2</literal></expr>;</condition> <incr pos:start="45:51" pos:end="45:59"><expr pos:start="45:51" pos:end="45:59"><name pos:start="45:51" pos:end="45:57"><name pos:start="45:51" pos:end="45:51">s</name><operator pos:start="45:52" pos:end="45:53">-&gt;</operator><name pos:start="45:54" pos:end="45:57">mb_y</name></name><operator pos:start="45:58" pos:end="45:59">++</operator></expr></incr>)</control> <block pos:start="45:62" pos:end="119:5">{<block_content pos:start="47:9" pos:end="117:62">

        <expr_stmt pos:start="47:9" pos:end="47:62"><expr pos:start="47:9" pos:end="47:61"><call pos:start="47:9" pos:end="47:61"><name pos:start="47:9" pos:end="47:27">x8_init_block_index</name><argument_list pos:start="47:28" pos:end="47:61">(<argument pos:start="47:29" pos:end="47:29"><expr pos:start="47:29" pos:end="47:29"><name pos:start="47:29" pos:end="47:29">w</name></expr></argument>, <argument pos:start="47:32" pos:end="47:51"><expr pos:start="47:32" pos:end="47:51"><name pos:start="47:32" pos:end="47:51"><name pos:start="47:32" pos:end="47:32">s</name><operator pos:start="47:33" pos:end="47:34">-&gt;</operator><name pos:start="47:35" pos:end="47:49">current_picture</name><operator pos:start="47:50" pos:end="47:50">.</operator><name pos:start="47:51" pos:end="47:51">f</name></name></expr></argument>, <argument pos:start="47:54" pos:end="47:60"><expr pos:start="47:54" pos:end="47:60"><name pos:start="47:54" pos:end="47:60"><name pos:start="47:54" pos:end="47:54">s</name><operator pos:start="47:55" pos:end="47:56">-&gt;</operator><name pos:start="47:57" pos:end="47:60">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:46"><expr pos:start="49:9" pos:end="49:45"><name pos:start="49:9" pos:end="49:13">mb_xy</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <operator pos:start="49:17" pos:end="49:17">(</operator><name pos:start="49:18" pos:end="49:24"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:24">mb_y</name></name> <operator pos:start="49:26" pos:end="49:27">&gt;&gt;</operator> <literal type="number" pos:start="49:29" pos:end="49:29">1</literal><operator pos:start="49:30" pos:end="49:30">)</operator> <operator pos:start="49:32" pos:end="49:32">*</operator> <name pos:start="49:34" pos:end="49:45"><name pos:start="49:34" pos:end="49:34">s</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:45">mb_stride</name></name></expr>;</expr_stmt>



        <for pos:start="53:9" pos:end="113:9">for <control pos:start="53:13" pos:end="53:63">(<init pos:start="53:14" pos:end="53:25"><expr pos:start="53:14" pos:end="53:24"><name pos:start="53:14" pos:end="53:20"><name pos:start="53:14" pos:end="53:14">s</name><operator pos:start="53:15" pos:end="53:16">-&gt;</operator><name pos:start="53:17" pos:end="53:20">mb_x</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>;</init> <condition pos:start="53:27" pos:end="53:52"><expr pos:start="53:27" pos:end="53:51"><name pos:start="53:27" pos:end="53:33"><name pos:start="53:27" pos:end="53:27">s</name><operator pos:start="53:28" pos:end="53:29">-&gt;</operator><name pos:start="53:30" pos:end="53:33">mb_x</name></name> <operator pos:start="53:35" pos:end="53:35">&lt;</operator> <name pos:start="53:37" pos:end="53:47"><name pos:start="53:37" pos:end="53:37">s</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:47">mb_width</name></name> <operator pos:start="53:49" pos:end="53:49">*</operator> <literal type="number" pos:start="53:51" pos:end="53:51">2</literal></expr>;</condition> <incr pos:start="53:54" pos:end="53:62"><expr pos:start="53:54" pos:end="53:62"><name pos:start="53:54" pos:end="53:60"><name pos:start="53:54" pos:end="53:54">s</name><operator pos:start="53:55" pos:end="53:56">-&gt;</operator><name pos:start="53:57" pos:end="53:60">mb_x</name></name><operator pos:start="53:61" pos:end="53:62">++</operator></expr></incr>)</control> <block pos:start="53:65" pos:end="113:9">{<block_content pos:start="55:13" pos:end="111:28">

            <expr_stmt pos:start="55:13" pos:end="55:33"><expr pos:start="55:13" pos:end="55:32"><call pos:start="55:13" pos:end="55:32"><name pos:start="55:13" pos:end="55:29">x8_get_prediction</name><argument_list pos:start="55:30" pos:end="55:32">(<argument pos:start="55:31" pos:end="55:31"><expr pos:start="55:31" pos:end="55:31"><name pos:start="55:31" pos:end="55:31">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="59:27"><if pos:start="57:13" pos:end="59:27">if <condition pos:start="57:16" pos:end="57:49">(<expr pos:start="57:17" pos:end="57:48"><call pos:start="57:17" pos:end="57:48"><name pos:start="57:17" pos:end="57:42">x8_setup_spatial_predictor</name><argument_list pos:start="57:43" pos:end="57:48">(<argument pos:start="57:44" pos:end="57:44"><expr pos:start="57:44" pos:end="57:44"><name pos:start="57:44" pos:end="57:44">w</name></expr></argument>, <argument pos:start="57:47" pos:end="57:47"><expr pos:start="57:47" pos:end="57:47"><literal type="number" pos:start="57:47" pos:end="57:47">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:27"><block_content pos:start="59:17" pos:end="59:27">

                <goto pos:start="59:17" pos:end="59:27">goto <name pos:start="59:22" pos:end="59:26">error</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="61:13" pos:end="63:27"><if pos:start="61:13" pos:end="63:27">if <condition pos:start="61:16" pos:end="61:41">(<expr pos:start="61:17" pos:end="61:40"><call pos:start="61:17" pos:end="61:40"><name pos:start="61:17" pos:end="61:34">x8_decode_intra_mb</name><argument_list pos:start="61:35" pos:end="61:40">(<argument pos:start="61:36" pos:end="61:36"><expr pos:start="61:36" pos:end="61:36"><name pos:start="61:36" pos:end="61:36">w</name></expr></argument>, <argument pos:start="61:39" pos:end="61:39"><expr pos:start="61:39" pos:end="61:39"><literal type="number" pos:start="61:39" pos:end="61:39">0</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:27"><block_content pos:start="63:17" pos:end="63:27">

                <goto pos:start="63:17" pos:end="63:27">goto <name pos:start="63:22" pos:end="63:26">error</name>;</goto></block_content></block></if></if_stmt>



            <if_stmt pos:start="67:13" pos:end="109:13"><if pos:start="67:13" pos:end="109:13">if <condition pos:start="67:16" pos:end="67:38">(<expr pos:start="67:17" pos:end="67:37"><name pos:start="67:17" pos:end="67:23"><name pos:start="67:17" pos:end="67:17">s</name><operator pos:start="67:18" pos:end="67:19">-&gt;</operator><name pos:start="67:20" pos:end="67:23">mb_x</name></name> <operator pos:start="67:25" pos:end="67:25">&amp;</operator> <name pos:start="67:27" pos:end="67:33"><name pos:start="67:27" pos:end="67:27">s</name><operator pos:start="67:28" pos:end="67:29">-&gt;</operator><name pos:start="67:30" pos:end="67:33">mb_y</name></name> <operator pos:start="67:35" pos:end="67:35">&amp;</operator> <literal type="number" pos:start="67:37" pos:end="67:37">1</literal></expr>)</condition> <block pos:start="67:40" pos:end="109:13">{<block_content pos:start="69:17" pos:end="107:24">

                <expr_stmt pos:start="69:17" pos:end="69:44"><expr pos:start="69:17" pos:end="69:43"><call pos:start="69:17" pos:end="69:43"><name pos:start="69:17" pos:end="69:40">x8_get_prediction_chroma</name><argument_list pos:start="69:41" pos:end="69:43">(<argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><name pos:start="69:42" pos:end="69:42">w</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <comment type="block" pos:start="73:17" pos:end="75:58">/* when setting up chroma, no vlc is read,

                 * so no error condition can be reached */</comment>

                <expr_stmt pos:start="77:17" pos:end="77:49"><expr pos:start="77:17" pos:end="77:48"><call pos:start="77:17" pos:end="77:48"><name pos:start="77:17" pos:end="77:42">x8_setup_spatial_predictor</name><argument_list pos:start="77:43" pos:end="77:48">(<argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><name pos:start="77:44" pos:end="77:44">w</name></expr></argument>, <argument pos:start="77:47" pos:end="77:47"><expr pos:start="77:47" pos:end="77:47"><literal type="number" pos:start="77:47" pos:end="77:47">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="79:17" pos:end="81:31"><if pos:start="79:17" pos:end="81:31">if <condition pos:start="79:20" pos:end="79:45">(<expr pos:start="79:21" pos:end="79:44"><call pos:start="79:21" pos:end="79:44"><name pos:start="79:21" pos:end="79:38">x8_decode_intra_mb</name><argument_list pos:start="79:39" pos:end="79:44">(<argument pos:start="79:40" pos:end="79:40"><expr pos:start="79:40" pos:end="79:40"><name pos:start="79:40" pos:end="79:40">w</name></expr></argument>, <argument pos:start="79:43" pos:end="79:43"><expr pos:start="79:43" pos:end="79:43"><literal type="number" pos:start="79:43" pos:end="79:43">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="81:21" pos:end="81:31"><block_content pos:start="81:21" pos:end="81:31">

                    <goto pos:start="81:21" pos:end="81:31">goto <name pos:start="81:26" pos:end="81:30">error</name>;</goto></block_content></block></if></if_stmt>



                <expr_stmt pos:start="85:17" pos:end="85:49"><expr pos:start="85:17" pos:end="85:48"><call pos:start="85:17" pos:end="85:48"><name pos:start="85:17" pos:end="85:42">x8_setup_spatial_predictor</name><argument_list pos:start="85:43" pos:end="85:48">(<argument pos:start="85:44" pos:end="85:44"><expr pos:start="85:44" pos:end="85:44"><name pos:start="85:44" pos:end="85:44">w</name></expr></argument>, <argument pos:start="85:47" pos:end="85:47"><expr pos:start="85:47" pos:end="85:47"><literal type="number" pos:start="85:47" pos:end="85:47">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="87:17" pos:end="89:31"><if pos:start="87:17" pos:end="89:31">if <condition pos:start="87:20" pos:end="87:45">(<expr pos:start="87:21" pos:end="87:44"><call pos:start="87:21" pos:end="87:44"><name pos:start="87:21" pos:end="87:38">x8_decode_intra_mb</name><argument_list pos:start="87:39" pos:end="87:44">(<argument pos:start="87:40" pos:end="87:40"><expr pos:start="87:40" pos:end="87:40"><name pos:start="87:40" pos:end="87:40">w</name></expr></argument>, <argument pos:start="87:43" pos:end="87:43"><expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">2</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="89:21" pos:end="89:31"><block_content pos:start="89:21" pos:end="89:31">

                    <goto pos:start="89:21" pos:end="89:31">goto <name pos:start="89:26" pos:end="89:30">error</name>;</goto></block_content></block></if></if_stmt>



                <expr_stmt pos:start="93:17" pos:end="93:32"><expr pos:start="93:17" pos:end="93:31"><name pos:start="93:17" pos:end="93:26"><name pos:start="93:17" pos:end="93:17">w</name><operator pos:start="93:18" pos:end="93:19">-&gt;</operator><name pos:start="93:20" pos:end="93:23">dest</name><index pos:start="93:24" pos:end="93:26">[<expr pos:start="93:25" pos:end="93:25"><literal type="number" pos:start="93:25" pos:end="93:25">1</literal></expr>]</index></name> <operator pos:start="93:28" pos:end="93:29">+=</operator> <literal type="number" pos:start="93:31" pos:end="93:31">8</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="95:17" pos:end="95:32"><expr pos:start="95:17" pos:end="95:31"><name pos:start="95:17" pos:end="95:26"><name pos:start="95:17" pos:end="95:17">w</name><operator pos:start="95:18" pos:end="95:19">-&gt;</operator><name pos:start="95:20" pos:end="95:23">dest</name><index pos:start="95:24" pos:end="95:26">[<expr pos:start="95:25" pos:end="95:25"><literal type="number" pos:start="95:25" pos:end="95:25">2</literal></expr>]</index></name> <operator pos:start="95:28" pos:end="95:29">+=</operator> <literal type="number" pos:start="95:31" pos:end="95:31">8</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="99:17" pos:end="99:60">/* emulate MB info in the relevant tables */</comment>

                <expr_stmt pos:start="101:17" pos:end="101:59"><expr pos:start="101:17" pos:end="101:58"><name pos:start="101:17" pos:end="101:38"><name pos:start="101:17" pos:end="101:17">s</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:31">mbskip_table</name><index pos:start="101:32" pos:end="101:38">[<expr pos:start="101:33" pos:end="101:37"><name pos:start="101:33" pos:end="101:37">mb_xy</name></expr>]</index></name>                 <operator pos:start="101:56" pos:end="101:56">=</operator> <literal type="number" pos:start="101:58" pos:end="101:58">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:59"><expr pos:start="103:17" pos:end="103:58"><name pos:start="103:17" pos:end="103:39"><name pos:start="103:17" pos:end="103:17">s</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:32">mbintra_table</name><index pos:start="103:33" pos:end="103:39">[<expr pos:start="103:34" pos:end="103:38"><name pos:start="103:34" pos:end="103:38">mb_xy</name></expr>]</index></name>                <operator pos:start="103:56" pos:end="103:56">=</operator> <literal type="number" pos:start="103:58" pos:end="103:58">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="105:17" pos:end="105:66"><expr pos:start="105:17" pos:end="105:65"><name pos:start="105:17" pos:end="105:54"><name pos:start="105:17" pos:end="105:17">s</name><operator pos:start="105:18" pos:end="105:19">-&gt;</operator><name pos:start="105:20" pos:end="105:34">current_picture</name><operator pos:start="105:35" pos:end="105:35">.</operator><name pos:start="105:36" pos:end="105:47">qscale_table</name><index pos:start="105:48" pos:end="105:54">[<expr pos:start="105:49" pos:end="105:53"><name pos:start="105:49" pos:end="105:53">mb_xy</name></expr>]</index></name> <operator pos:start="105:56" pos:end="105:56">=</operator> <name pos:start="105:58" pos:end="105:65"><name pos:start="105:58" pos:end="105:58">w</name><operator pos:start="105:59" pos:end="105:60">-&gt;</operator><name pos:start="105:61" pos:end="105:65">quant</name></name></expr>;</expr_stmt>

                <expr_stmt pos:start="107:17" pos:end="107:24"><expr pos:start="107:17" pos:end="107:23"><name pos:start="107:17" pos:end="107:21">mb_xy</name><operator pos:start="107:22" pos:end="107:23">++</operator></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:28"><expr pos:start="111:13" pos:end="111:27"><name pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:13">w</name><operator pos:start="111:14" pos:end="111:15">-&gt;</operator><name pos:start="111:16" pos:end="111:19">dest</name><index pos:start="111:20" pos:end="111:22">[<expr pos:start="111:21" pos:end="111:21"><literal type="number" pos:start="111:21" pos:end="111:21">0</literal></expr>]</index></name> <operator pos:start="111:24" pos:end="111:25">+=</operator> <literal type="number" pos:start="111:27" pos:end="111:27">8</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="115:9" pos:end="117:62"><if pos:start="115:9" pos:end="117:62">if <condition pos:start="115:12" pos:end="115:24">(<expr pos:start="115:13" pos:end="115:23"><name pos:start="115:13" pos:end="115:19"><name pos:start="115:13" pos:end="115:13">s</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:19">mb_y</name></name> <operator pos:start="115:21" pos:end="115:21">&amp;</operator> <literal type="number" pos:start="115:23" pos:end="115:23">1</literal></expr>)</condition><block type="pseudo" pos:start="117:13" pos:end="117:62"><block_content pos:start="117:13" pos:end="117:62">

            <expr_stmt pos:start="117:13" pos:end="117:62"><expr pos:start="117:13" pos:end="117:61"><call pos:start="117:13" pos:end="117:61"><name pos:start="117:13" pos:end="117:35">ff_mpeg_draw_horiz_band</name><argument_list pos:start="117:36" pos:end="117:61">(<argument pos:start="117:37" pos:end="117:37"><expr pos:start="117:37" pos:end="117:37"><name pos:start="117:37" pos:end="117:37">s</name></expr></argument>, <argument pos:start="117:40" pos:end="117:56"><expr pos:start="117:40" pos:end="117:56"><operator pos:start="117:40" pos:end="117:40">(</operator><name pos:start="117:41" pos:end="117:47"><name pos:start="117:41" pos:end="117:41">s</name><operator pos:start="117:42" pos:end="117:43">-&gt;</operator><name pos:start="117:44" pos:end="117:47">mb_y</name></name> <operator pos:start="117:49" pos:end="117:49">-</operator> <literal type="number" pos:start="117:51" pos:end="117:51">1</literal><operator pos:start="117:52" pos:end="117:52">)</operator> <operator pos:start="117:54" pos:end="117:54">*</operator> <literal type="number" pos:start="117:56" pos:end="117:56">8</literal></expr></argument>, <argument pos:start="117:59" pos:end="117:60"><expr pos:start="117:59" pos:end="117:60"><literal type="number" pos:start="117:59" pos:end="117:60">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></for>



<label pos:start="123:1" pos:end="123:6"><name pos:start="123:1" pos:end="123:5">error</name>:</label>

    <return pos:start="125:5" pos:end="125:13">return <expr pos:start="125:12" pos:end="125:12"><literal type="number" pos:start="125:12" pos:end="125:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
