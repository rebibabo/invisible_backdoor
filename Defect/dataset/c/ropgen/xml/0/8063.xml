<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8063.c" pos:tabs="8"><function pos:start="1:1" pos:end="53:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">qcow2_mark_dirty</name><parameter_list pos:start="1:28" pos:end="1:49">(<parameter pos:start="1:29" pos:end="1:48"><decl pos:start="1:29" pos:end="1:48"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:44">BlockDriverState</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:48">bs</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="53:1">{<block_content pos:start="5:5" pos:end="51:13">

    <decl_stmt pos:start="5:5" pos:end="5:34"><decl pos:start="5:5" pos:end="5:33"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">BDRVQcowState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:33">= <expr pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:33"><name pos:start="5:24" pos:end="5:25">bs</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:33">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:12"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:33"><expr pos:start="13:5" pos:end="13:32"><call pos:start="13:5" pos:end="13:32"><name pos:start="13:5" pos:end="13:10">assert</name><argument_list pos:start="13:11" pos:end="13:32">(<argument pos:start="13:12" pos:end="13:31"><expr pos:start="13:12" pos:end="13:31"><name pos:start="13:12" pos:end="13:26"><name pos:start="13:12" pos:end="13:12">s</name><operator pos:start="13:13" pos:end="13:14">-&gt;</operator><name pos:start="13:15" pos:end="13:26">qcow_version</name></name> <operator pos:start="13:28" pos:end="13:29">&gt;=</operator> <literal type="number" pos:start="13:31" pos:end="13:31">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:56">(<expr pos:start="17:9" pos:end="17:55"><name pos:start="17:9" pos:end="17:32"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:32">incompatible_features</name></name> <operator pos:start="17:34" pos:end="17:34">&amp;</operator> <name pos:start="17:36" pos:end="17:55">QCOW2_INCOMPAT_DIRTY</name></expr>)</condition> <block pos:start="17:58" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return> <comment type="block" pos:start="19:19" pos:end="19:37">/* already dirty */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:71"><expr pos:start="25:5" pos:end="25:70"><name pos:start="25:5" pos:end="25:7">val</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:70"><name pos:start="25:11" pos:end="25:21">cpu_to_be64</name><argument_list pos:start="25:22" pos:end="25:70">(<argument pos:start="25:23" pos:end="25:69"><expr pos:start="25:23" pos:end="25:69"><name pos:start="25:23" pos:end="25:46"><name pos:start="25:23" pos:end="25:23">s</name><operator pos:start="25:24" pos:end="25:25">-&gt;</operator><name pos:start="25:26" pos:end="25:46">incompatible_features</name></name> <operator pos:start="25:48" pos:end="25:48">|</operator> <name pos:start="25:50" pos:end="25:69">QCOW2_INCOMPAT_DIRTY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="29:41"><expr pos:start="27:5" pos:end="29:40"><name pos:start="27:5" pos:end="27:7">ret</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="29:40"><name pos:start="27:11" pos:end="27:21">bdrv_pwrite</name><argument_list pos:start="27:22" pos:end="29:40">(<argument pos:start="27:23" pos:end="27:30"><expr pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:30"><name pos:start="27:23" pos:end="27:24">bs</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:30">file</name></name></expr></argument>, <argument pos:start="27:33" pos:end="27:75"><expr pos:start="27:33" pos:end="27:75"><call pos:start="27:33" pos:end="27:75"><name pos:start="27:33" pos:end="27:40">offsetof</name><argument_list pos:start="27:41" pos:end="27:75">(<argument pos:start="27:42" pos:end="27:51"><expr pos:start="27:42" pos:end="27:51"><name pos:start="27:42" pos:end="27:51">QCowHeader</name></expr></argument>, <argument pos:start="27:54" pos:end="27:74"><expr pos:start="27:54" pos:end="27:74"><name pos:start="27:54" pos:end="27:74">incompatible_features</name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="29:23" pos:end="29:26"><expr pos:start="29:23" pos:end="29:26"><operator pos:start="29:23" pos:end="29:23">&amp;</operator><name pos:start="29:24" pos:end="29:26">val</name></expr></argument>, <argument pos:start="29:29" pos:end="29:39"><expr pos:start="29:29" pos:end="29:39"><sizeof pos:start="29:29" pos:end="29:39">sizeof<argument_list pos:start="29:35" pos:end="29:39">(<argument pos:start="29:36" pos:end="29:38"><expr pos:start="29:36" pos:end="29:38"><name pos:start="29:36" pos:end="29:38">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:19">

        <return pos:start="33:9" pos:end="33:19">return <expr pos:start="33:16" pos:end="33:18"><name pos:start="33:16" pos:end="33:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:31"><expr pos:start="37:5" pos:end="37:30"><name pos:start="37:5" pos:end="37:7">ret</name> <operator pos:start="37:9" pos:end="37:9">=</operator> <call pos:start="37:11" pos:end="37:30"><name pos:start="37:11" pos:end="37:20">bdrv_flush</name><argument_list pos:start="37:21" pos:end="37:30">(<argument pos:start="37:22" pos:end="37:29"><expr pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:29"><name pos:start="37:22" pos:end="37:23">bs</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:29">file</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="43:5"><if pos:start="39:5" pos:end="43:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">ret</name> <operator pos:start="39:13" pos:end="39:13">&lt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="43:5">{<block_content pos:start="41:9" pos:end="41:19">

        <return pos:start="41:9" pos:end="41:19">return <expr pos:start="41:16" pos:end="41:18"><name pos:start="41:16" pos:end="41:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="47:5" pos:end="47:74">/* Only treat image as dirty if the header was updated successfully */</comment>

    <expr_stmt pos:start="49:5" pos:end="49:53"><expr pos:start="49:5" pos:end="49:52"><name pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:5">s</name><operator pos:start="49:6" pos:end="49:7">-&gt;</operator><name pos:start="49:8" pos:end="49:28">incompatible_features</name></name> <operator pos:start="49:30" pos:end="49:31">|=</operator> <name pos:start="49:33" pos:end="49:52">QCOW2_INCOMPAT_DIRTY</name></expr>;</expr_stmt>

    <return pos:start="51:5" pos:end="51:13">return <expr pos:start="51:12" pos:end="51:12"><literal type="number" pos:start="51:12" pos:end="51:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
