<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6297.c" pos:tabs="8"><function pos:start="1:1" pos:end="263:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:20">cpu_ppc_register</name> <parameter_list pos:start="1:22" pos:end="1:55">(<parameter pos:start="1:23" pos:end="1:38"><decl pos:start="1:23" pos:end="1:38"><type pos:start="1:23" pos:end="1:38"><name pos:start="1:23" pos:end="1:33">CPUPPCState</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">env</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:54"><decl pos:start="1:41" pos:end="1:54"><type pos:start="1:41" pos:end="1:54"><name pos:start="1:41" pos:end="1:49">ppc_def_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">def</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="263:1">{<block_content pos:start="5:5" pos:end="261:13">

    <expr_stmt pos:start="5:5" pos:end="5:34"><expr pos:start="5:5" pos:end="5:33"><name pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:7">env</name><operator pos:start="5:8" pos:end="5:9">-&gt;</operator><name pos:start="5:10" pos:end="5:17">msr_mask</name></name> <operator pos:start="5:19" pos:end="5:19">=</operator> <name pos:start="5:21" pos:end="5:33"><name pos:start="5:21" pos:end="5:23">def</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:33">msr_mask</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="7:5" pos:end="7:36"><expr pos:start="7:5" pos:end="7:35"><name pos:start="7:5" pos:end="7:18"><name pos:start="7:5" pos:end="7:7">env</name><operator pos:start="7:8" pos:end="7:9">-&gt;</operator><name pos:start="7:10" pos:end="7:18">mmu_model</name></name> <operator pos:start="7:20" pos:end="7:20">=</operator> <name pos:start="7:22" pos:end="7:35"><name pos:start="7:22" pos:end="7:24">def</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">mmu_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:38"><expr pos:start="9:5" pos:end="9:37"><name pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:7">env</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:19">excp_model</name></name> <operator pos:start="9:21" pos:end="9:21">=</operator> <name pos:start="9:23" pos:end="9:37"><name pos:start="9:23" pos:end="9:25">def</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:37">excp_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:36"><expr pos:start="11:5" pos:end="11:35"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:7">env</name><operator pos:start="11:8" pos:end="11:9">-&gt;</operator><name pos:start="11:10" pos:end="11:18">bus_model</name></name> <operator pos:start="11:20" pos:end="11:20">=</operator> <name pos:start="11:22" pos:end="11:35"><name pos:start="11:22" pos:end="11:24">def</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:35">bus_model</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:34"><expr pos:start="13:5" pos:end="13:33"><name pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:7">env</name><operator pos:start="13:8" pos:end="13:9">-&gt;</operator><name pos:start="13:10" pos:end="13:17">bfd_mach</name></name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:33"><name pos:start="13:21" pos:end="13:23">def</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:33">bfd_mach</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="17:18"><if pos:start="15:5" pos:end="17:18">if <condition pos:start="15:8" pos:end="15:41">(<expr pos:start="15:9" pos:end="15:40"><call pos:start="15:9" pos:end="15:36"><name pos:start="15:9" pos:end="15:26">create_ppc_opcodes</name><argument_list pos:start="15:27" pos:end="15:36">(<argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">env</name></expr></argument>, <argument pos:start="15:33" pos:end="15:35"><expr pos:start="15:33" pos:end="15:35"><name pos:start="15:33" pos:end="15:35">def</name></expr></argument>)</argument_list></call> <operator pos:start="15:38" pos:end="15:38">&lt;</operator> <literal type="number" pos:start="15:40" pos:end="15:40">0</literal></expr>)</condition><block type="pseudo" pos:start="17:9" pos:end="17:18"><block_content pos:start="17:9" pos:end="17:18">

        <return pos:start="17:9" pos:end="17:18">return <expr pos:start="17:16" pos:end="17:17"><operator pos:start="17:16" pos:end="17:16">-</operator><literal type="number" pos:start="17:17" pos:end="17:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="19:5" pos:end="22:0"><expr pos:start="19:5" pos:end="19:27"><call pos:start="19:5" pos:end="19:27"><name pos:start="19:5" pos:end="19:17">init_ppc_proc</name><argument_list pos:start="19:18" pos:end="19:27">(<argument pos:start="19:19" pos:end="19:21"><expr pos:start="19:19" pos:end="19:21"><name pos:start="19:19" pos:end="19:21">env</name></expr></argument>, <argument pos:start="19:24" pos:end="19:26"><expr pos:start="19:24" pos:end="19:26"><name pos:start="19:24" pos:end="19:26">def</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:if pos:start="21:1" pos:end="21:25">#<cpp:directive pos:start="21:2" pos:end="21:3">if</cpp:directive> <expr pos:start="21:5" pos:end="21:25"><call pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:11">defined</name><argument_list pos:start="21:12" pos:end="21:25">(<argument pos:start="21:13" pos:end="21:24"><expr pos:start="21:13" pos:end="21:24"><name pos:start="21:13" pos:end="21:24">PPC_DUMP_CPU</name></expr></argument>)</argument_list></call></expr></cpp:if>

    <block pos:start="23:5" pos:end="249:5">{<block_content pos:start="25:9" pos:end="247:38">

        <decl_stmt pos:start="25:9" pos:end="25:64"><decl pos:start="25:9" pos:end="25:38"><type pos:start="25:9" pos:end="25:29"><specifier pos:start="25:9" pos:end="25:13">const</specifier> <name pos:start="25:15" pos:end="25:22">unsigned</name> <name pos:start="25:24" pos:end="25:27">char</name> <modifier pos:start="25:29" pos:end="25:29">*</modifier></type><name pos:start="25:30" pos:end="25:38">mmu_model</name></decl>, <decl pos:start="25:41" pos:end="25:51"><type ref="prev" pos:start="25:9" pos:end="25:29"><modifier pos:start="25:41" pos:end="25:41">*</modifier></type><name pos:start="25:42" pos:end="25:51">excp_model</name></decl>, <decl pos:start="25:54" pos:end="25:63"><type ref="prev" pos:start="25:9" pos:end="25:29"><modifier pos:start="25:54" pos:end="25:54">*</modifier></type><name pos:start="25:55" pos:end="25:63">bus_model</name></decl>;</decl_stmt>

        <switch pos:start="27:9" pos:end="103:9">switch <condition pos:start="27:16" pos:end="27:31">(<expr pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:30"><name pos:start="27:17" pos:end="27:19">env</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:30">mmu_model</name></name></expr>)</condition> <block pos:start="27:33" pos:end="103:9">{<block_content pos:start="29:9" pos:end="101:18">

        <case pos:start="29:9" pos:end="29:29">case <expr pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:28">POWERPC_MMU_32B</name></expr>:</case>

            <expr_stmt pos:start="31:13" pos:end="31:37"><expr pos:start="31:13" pos:end="31:36"><name pos:start="31:13" pos:end="31:21">mmu_model</name> <operator pos:start="31:23" pos:end="31:23">=</operator> <literal type="string" pos:start="31:25" pos:end="31:36">"PowerPC 32"</literal></expr>;</expr_stmt>

            <break pos:start="33:13" pos:end="33:18">break;</break>

        <case pos:start="35:9" pos:end="35:29">case <expr pos:start="35:14" pos:end="35:28"><name pos:start="35:14" pos:end="35:28">POWERPC_MMU_64B</name></expr>:</case>

            <expr_stmt pos:start="37:13" pos:end="37:37"><expr pos:start="37:13" pos:end="37:36"><name pos:start="37:13" pos:end="37:21">mmu_model</name> <operator pos:start="37:23" pos:end="37:23">=</operator> <literal type="string" pos:start="37:25" pos:end="37:36">"PowerPC 64"</literal></expr>;</expr_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:29">case <expr pos:start="41:14" pos:end="41:28"><name pos:start="41:14" pos:end="41:28">POWERPC_MMU_601</name></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:38"><expr pos:start="43:13" pos:end="43:37"><name pos:start="43:13" pos:end="43:21">mmu_model</name> <operator pos:start="43:23" pos:end="43:23">=</operator> <literal type="string" pos:start="43:25" pos:end="43:37">"PowerPC 601"</literal></expr>;</expr_stmt>

            <break pos:start="45:13" pos:end="45:18">break;</break>

        <case pos:start="47:9" pos:end="47:34">case <expr pos:start="47:14" pos:end="47:33"><name pos:start="47:14" pos:end="47:33">POWERPC_MMU_SOFT_6xx</name></expr>:</case>

            <expr_stmt pos:start="49:13" pos:end="49:68"><expr pos:start="49:13" pos:end="49:67"><name pos:start="49:13" pos:end="49:21">mmu_model</name> <operator pos:start="49:23" pos:end="49:23">=</operator> <literal type="string" pos:start="49:25" pos:end="49:67">"PowerPC 6xx/7xx with software driven TLBs"</literal></expr>;</expr_stmt>

            <break pos:start="51:13" pos:end="51:18">break;</break>

        <case pos:start="53:9" pos:end="53:35">case <expr pos:start="53:14" pos:end="53:34"><name pos:start="53:14" pos:end="53:34">POWERPC_MMU_SOFT_74xx</name></expr>:</case>

            <expr_stmt pos:start="55:13" pos:end="55:65"><expr pos:start="55:13" pos:end="55:64"><name pos:start="55:13" pos:end="55:21">mmu_model</name> <operator pos:start="55:23" pos:end="55:23">=</operator> <literal type="string" pos:start="55:25" pos:end="55:64">"PowerPC 74xx with software driven TLBs"</literal></expr>;</expr_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:34">case <expr pos:start="59:14" pos:end="59:33"><name pos:start="59:14" pos:end="59:33">POWERPC_MMU_SOFT_4xx</name></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:64"><expr pos:start="61:13" pos:end="61:63"><name pos:start="61:13" pos:end="61:21">mmu_model</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="string" pos:start="61:25" pos:end="61:63">"PowerPC 4xx with software driven TLBs"</literal></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <case pos:start="65:9" pos:end="65:36">case <expr pos:start="65:14" pos:end="65:35"><name pos:start="65:14" pos:end="65:35">POWERPC_MMU_SOFT_4xx_Z</name></expr>:</case>

            <expr_stmt pos:start="67:13" pos:end="69:40"><expr pos:start="67:13" pos:end="69:39"><name pos:start="67:13" pos:end="67:21">mmu_model</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <literal type="string" pos:start="67:25" pos:end="67:64">"PowerPC 4xx with software driven TLBs "</literal>

                <literal type="string" pos:start="69:17" pos:end="69:39">"and zones protections"</literal></expr>;</expr_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        <case pos:start="73:9" pos:end="73:34">case <expr pos:start="73:14" pos:end="73:33"><name pos:start="73:14" pos:end="73:33">POWERPC_MMU_REAL_4xx</name></expr>:</case>

            <expr_stmt pos:start="75:13" pos:end="75:53"><expr pos:start="75:13" pos:end="75:52"><name pos:start="75:13" pos:end="75:21">mmu_model</name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="string" pos:start="75:25" pos:end="75:52">"PowerPC 4xx real mode only"</literal></expr>;</expr_stmt>

            <break pos:start="77:13" pos:end="77:18">break;</break>

        <case pos:start="79:9" pos:end="79:31">case <expr pos:start="79:14" pos:end="79:30"><name pos:start="79:14" pos:end="79:30">POWERPC_MMU_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="81:13" pos:end="81:40"><expr pos:start="81:13" pos:end="81:39"><name pos:start="81:13" pos:end="81:21">mmu_model</name> <operator pos:start="81:23" pos:end="81:23">=</operator> <literal type="string" pos:start="81:25" pos:end="81:39">"PowerPC BookE"</literal></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:35">case <expr pos:start="85:14" pos:end="85:34"><name pos:start="85:14" pos:end="85:34">POWERPC_MMU_BOOKE_FSL</name></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="87:44"><expr pos:start="87:13" pos:end="87:43"><name pos:start="87:13" pos:end="87:21">mmu_model</name> <operator pos:start="87:23" pos:end="87:23">=</operator> <literal type="string" pos:start="87:25" pos:end="87:43">"PowerPC BookE FSL"</literal></expr>;</expr_stmt>

            <break pos:start="89:13" pos:end="89:18">break;</break>

        <case pos:start="91:9" pos:end="91:34">case <expr pos:start="91:14" pos:end="91:33"><name pos:start="91:14" pos:end="91:33">POWERPC_MMU_64BRIDGE</name></expr>:</case>

            <expr_stmt pos:start="93:13" pos:end="93:44"><expr pos:start="93:13" pos:end="93:43"><name pos:start="93:13" pos:end="93:21">mmu_model</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <literal type="string" pos:start="93:25" pos:end="93:43">"PowerPC 64 bridge"</literal></expr>;</expr_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <default pos:start="97:9" pos:end="97:16">default:</default>

            <expr_stmt pos:start="99:13" pos:end="99:45"><expr pos:start="99:13" pos:end="99:44"><name pos:start="99:13" pos:end="99:21">mmu_model</name> <operator pos:start="99:23" pos:end="99:23">=</operator> <literal type="string" pos:start="99:25" pos:end="99:44">"Unknown or invalid"</literal></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>

        </block_content>}</block></switch>

        <switch pos:start="105:9" pos:end="185:9">switch <condition pos:start="105:16" pos:end="105:32">(<expr pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:31"><name pos:start="105:17" pos:end="105:19">env</name><operator pos:start="105:20" pos:end="105:21">-&gt;</operator><name pos:start="105:22" pos:end="105:31">excp_model</name></name></expr>)</condition> <block pos:start="105:34" pos:end="185:9">{<block_content pos:start="107:9" pos:end="183:18">

        <case pos:start="107:9" pos:end="107:30">case <expr pos:start="107:14" pos:end="107:29"><name pos:start="107:14" pos:end="107:29">POWERPC_EXCP_STD</name></expr>:</case>

            <expr_stmt pos:start="109:13" pos:end="109:35"><expr pos:start="109:13" pos:end="109:34"><name pos:start="109:13" pos:end="109:22">excp_model</name> <operator pos:start="109:24" pos:end="109:24">=</operator> <literal type="string" pos:start="109:26" pos:end="109:34">"PowerPC"</literal></expr>;</expr_stmt>

            <break pos:start="111:13" pos:end="111:18">break;</break>

        <case pos:start="113:9" pos:end="113:30">case <expr pos:start="113:14" pos:end="113:29"><name pos:start="113:14" pos:end="113:29">POWERPC_EXCP_40x</name></expr>:</case>

            <expr_stmt pos:start="115:13" pos:end="115:39"><expr pos:start="115:13" pos:end="115:38"><name pos:start="115:13" pos:end="115:22">excp_model</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="string" pos:start="115:26" pos:end="115:38">"PowerPC 40x"</literal></expr>;</expr_stmt>

            <break pos:start="117:13" pos:end="117:18">break;</break>

        <case pos:start="119:9" pos:end="119:30">case <expr pos:start="119:14" pos:end="119:29"><name pos:start="119:14" pos:end="119:29">POWERPC_EXCP_601</name></expr>:</case>

            <expr_stmt pos:start="121:13" pos:end="121:39"><expr pos:start="121:13" pos:end="121:38"><name pos:start="121:13" pos:end="121:22">excp_model</name> <operator pos:start="121:24" pos:end="121:24">=</operator> <literal type="string" pos:start="121:26" pos:end="121:38">"PowerPC 601"</literal></expr>;</expr_stmt>

            <break pos:start="123:13" pos:end="123:18">break;</break>

        <case pos:start="125:9" pos:end="125:30">case <expr pos:start="125:14" pos:end="125:29"><name pos:start="125:14" pos:end="125:29">POWERPC_EXCP_602</name></expr>:</case>

            <expr_stmt pos:start="127:13" pos:end="127:39"><expr pos:start="127:13" pos:end="127:38"><name pos:start="127:13" pos:end="127:22">excp_model</name> <operator pos:start="127:24" pos:end="127:24">=</operator> <literal type="string" pos:start="127:26" pos:end="127:38">"PowerPC 602"</literal></expr>;</expr_stmt>

            <break pos:start="129:13" pos:end="129:18">break;</break>

        <case pos:start="131:9" pos:end="131:30">case <expr pos:start="131:14" pos:end="131:29"><name pos:start="131:14" pos:end="131:29">POWERPC_EXCP_603</name></expr>:</case>

            <expr_stmt pos:start="133:13" pos:end="133:39"><expr pos:start="133:13" pos:end="133:38"><name pos:start="133:13" pos:end="133:22">excp_model</name> <operator pos:start="133:24" pos:end="133:24">=</operator> <literal type="string" pos:start="133:26" pos:end="133:38">"PowerPC 603"</literal></expr>;</expr_stmt>

            <break pos:start="135:13" pos:end="135:18">break;</break>

        <case pos:start="137:9" pos:end="137:31">case <expr pos:start="137:14" pos:end="137:30"><name pos:start="137:14" pos:end="137:30">POWERPC_EXCP_603E</name></expr>:</case>

            <expr_stmt pos:start="139:13" pos:end="139:40"><expr pos:start="139:13" pos:end="139:39"><name pos:start="139:13" pos:end="139:22">excp_model</name> <operator pos:start="139:24" pos:end="139:24">=</operator> <literal type="string" pos:start="139:26" pos:end="139:39">"PowerPC 603e"</literal></expr>;</expr_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

        <case pos:start="143:9" pos:end="143:30">case <expr pos:start="143:14" pos:end="143:29"><name pos:start="143:14" pos:end="143:29">POWERPC_EXCP_604</name></expr>:</case>

            <expr_stmt pos:start="145:13" pos:end="145:39"><expr pos:start="145:13" pos:end="145:38"><name pos:start="145:13" pos:end="145:22">excp_model</name> <operator pos:start="145:24" pos:end="145:24">=</operator> <literal type="string" pos:start="145:26" pos:end="145:38">"PowerPC 604"</literal></expr>;</expr_stmt>

            <break pos:start="147:13" pos:end="147:18">break;</break>

        <case pos:start="149:9" pos:end="149:30">case <expr pos:start="149:14" pos:end="149:29"><name pos:start="149:14" pos:end="149:29">POWERPC_EXCP_7x0</name></expr>:</case>

            <expr_stmt pos:start="151:13" pos:end="151:43"><expr pos:start="151:13" pos:end="151:42"><name pos:start="151:13" pos:end="151:22">excp_model</name> <operator pos:start="151:24" pos:end="151:24">=</operator> <literal type="string" pos:start="151:26" pos:end="151:42">"PowerPC 740/750"</literal></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        <case pos:start="155:9" pos:end="155:30">case <expr pos:start="155:14" pos:end="155:29"><name pos:start="155:14" pos:end="155:29">POWERPC_EXCP_7x5</name></expr>:</case>

            <expr_stmt pos:start="157:13" pos:end="157:43"><expr pos:start="157:13" pos:end="157:42"><name pos:start="157:13" pos:end="157:22">excp_model</name> <operator pos:start="157:24" pos:end="157:24">=</operator> <literal type="string" pos:start="157:26" pos:end="157:42">"PowerPC 745/755"</literal></expr>;</expr_stmt>

            <break pos:start="159:13" pos:end="159:18">break;</break>

        <case pos:start="161:9" pos:end="161:31">case <expr pos:start="161:14" pos:end="161:30"><name pos:start="161:14" pos:end="161:30">POWERPC_EXCP_74xx</name></expr>:</case>

            <expr_stmt pos:start="163:13" pos:end="163:40"><expr pos:start="163:13" pos:end="163:39"><name pos:start="163:13" pos:end="163:22">excp_model</name> <operator pos:start="163:24" pos:end="163:24">=</operator> <literal type="string" pos:start="163:26" pos:end="163:39">"PowerPC 74xx"</literal></expr>;</expr_stmt>

            <break pos:start="165:13" pos:end="165:18">break;</break>

        <case pos:start="167:9" pos:end="167:30">case <expr pos:start="167:14" pos:end="167:29"><name pos:start="167:14" pos:end="167:29">POWERPC_EXCP_970</name></expr>:</case>

            <expr_stmt pos:start="169:13" pos:end="169:39"><expr pos:start="169:13" pos:end="169:38"><name pos:start="169:13" pos:end="169:22">excp_model</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <literal type="string" pos:start="169:26" pos:end="169:38">"PowerPC 970"</literal></expr>;</expr_stmt>

            <break pos:start="171:13" pos:end="171:18">break;</break>

        <case pos:start="173:9" pos:end="173:32">case <expr pos:start="173:14" pos:end="173:31"><name pos:start="173:14" pos:end="173:31">POWERPC_EXCP_BOOKE</name></expr>:</case>

            <expr_stmt pos:start="175:13" pos:end="175:41"><expr pos:start="175:13" pos:end="175:40"><name pos:start="175:13" pos:end="175:22">excp_model</name> <operator pos:start="175:24" pos:end="175:24">=</operator> <literal type="string" pos:start="175:26" pos:end="175:40">"PowerPC BookE"</literal></expr>;</expr_stmt>

            <break pos:start="177:13" pos:end="177:18">break;</break>

        <default pos:start="179:9" pos:end="179:16">default:</default>

            <expr_stmt pos:start="181:13" pos:end="181:46"><expr pos:start="181:13" pos:end="181:45"><name pos:start="181:13" pos:end="181:22">excp_model</name> <operator pos:start="181:24" pos:end="181:24">=</operator> <literal type="string" pos:start="181:26" pos:end="181:45">"Unknown or invalid"</literal></expr>;</expr_stmt>

            <break pos:start="183:13" pos:end="183:18">break;</break>

        </block_content>}</block></switch>

        <switch pos:start="187:9" pos:end="225:9">switch <condition pos:start="187:16" pos:end="187:31">(<expr pos:start="187:17" pos:end="187:30"><name pos:start="187:17" pos:end="187:30"><name pos:start="187:17" pos:end="187:19">env</name><operator pos:start="187:20" pos:end="187:21">-&gt;</operator><name pos:start="187:22" pos:end="187:30">bus_model</name></name></expr>)</condition> <block pos:start="187:33" pos:end="225:9">{<block_content pos:start="189:9" pos:end="223:18">

        <case pos:start="189:9" pos:end="189:33">case <expr pos:start="189:14" pos:end="189:32"><name pos:start="189:14" pos:end="189:32">PPC_FLAGS_INPUT_6xx</name></expr>:</case>

            <expr_stmt pos:start="191:13" pos:end="191:38"><expr pos:start="191:13" pos:end="191:37"><name pos:start="191:13" pos:end="191:21">bus_model</name> <operator pos:start="191:23" pos:end="191:23">=</operator> <literal type="string" pos:start="191:25" pos:end="191:37">"PowerPC 6xx"</literal></expr>;</expr_stmt>

            <break pos:start="193:13" pos:end="193:18">break;</break>

        <case pos:start="195:9" pos:end="195:35">case <expr pos:start="195:14" pos:end="195:34"><name pos:start="195:14" pos:end="195:34">PPC_FLAGS_INPUT_BookE</name></expr>:</case>

            <expr_stmt pos:start="197:13" pos:end="197:40"><expr pos:start="197:13" pos:end="197:39"><name pos:start="197:13" pos:end="197:21">bus_model</name> <operator pos:start="197:23" pos:end="197:23">=</operator> <literal type="string" pos:start="197:25" pos:end="197:39">"PowerPC BookE"</literal></expr>;</expr_stmt>

            <break pos:start="199:13" pos:end="199:18">break;</break>

        <case pos:start="201:9" pos:end="201:33">case <expr pos:start="201:14" pos:end="201:32"><name pos:start="201:14" pos:end="201:32">PPC_FLAGS_INPUT_405</name></expr>:</case>

            <expr_stmt pos:start="203:13" pos:end="203:38"><expr pos:start="203:13" pos:end="203:37"><name pos:start="203:13" pos:end="203:21">bus_model</name> <operator pos:start="203:23" pos:end="203:23">=</operator> <literal type="string" pos:start="203:25" pos:end="203:37">"PowerPC 405"</literal></expr>;</expr_stmt>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:33">case <expr pos:start="207:14" pos:end="207:32"><name pos:start="207:14" pos:end="207:32">PPC_FLAGS_INPUT_970</name></expr>:</case>

            <expr_stmt pos:start="209:13" pos:end="209:38"><expr pos:start="209:13" pos:end="209:37"><name pos:start="209:13" pos:end="209:21">bus_model</name> <operator pos:start="209:23" pos:end="209:23">=</operator> <literal type="string" pos:start="209:25" pos:end="209:37">"PowerPC 970"</literal></expr>;</expr_stmt>

            <break pos:start="211:13" pos:end="211:18">break;</break>

        <case pos:start="213:9" pos:end="213:33">case <expr pos:start="213:14" pos:end="213:32"><name pos:start="213:14" pos:end="213:32">PPC_FLAGS_INPUT_401</name></expr>:</case>

            <expr_stmt pos:start="215:13" pos:end="215:42"><expr pos:start="215:13" pos:end="215:41"><name pos:start="215:13" pos:end="215:21">bus_model</name> <operator pos:start="215:23" pos:end="215:23">=</operator> <literal type="string" pos:start="215:25" pos:end="215:41">"PowerPC 401/403"</literal></expr>;</expr_stmt>

            <break pos:start="217:13" pos:end="217:18">break;</break>

        <default pos:start="219:9" pos:end="219:16">default:</default>

            <expr_stmt pos:start="221:13" pos:end="221:45"><expr pos:start="221:13" pos:end="221:44"><name pos:start="221:13" pos:end="221:21">bus_model</name> <operator pos:start="221:23" pos:end="221:23">=</operator> <literal type="string" pos:start="221:25" pos:end="221:44">"Unknown or invalid"</literal></expr>;</expr_stmt>

            <break pos:start="223:13" pos:end="223:18">break;</break>

        </block_content>}</block></switch>

        <expr_stmt pos:start="227:9" pos:end="231:62"><expr pos:start="227:9" pos:end="231:61"><call pos:start="227:9" pos:end="231:61"><name pos:start="227:9" pos:end="227:14">printf</name><argument_list pos:start="227:15" pos:end="231:61">(<argument pos:start="227:16" pos:end="229:44"><expr pos:start="227:16" pos:end="229:44"><literal type="string" pos:start="227:16" pos:end="227:50">"PowerPC %-12s : PVR %08x MSR %016"</literal> <name pos:start="227:52" pos:end="227:57">PRIx64</name> <literal type="string" pos:start="227:59" pos:end="227:62">"\n"</literal>

               <literal type="string" pos:start="229:16" pos:end="229:44">"    MMU model        : %s\n"</literal></expr></argument>,

               <argument pos:start="231:16" pos:end="231:24"><expr pos:start="231:16" pos:end="231:24"><name pos:start="231:16" pos:end="231:24"><name pos:start="231:16" pos:end="231:18">def</name><operator pos:start="231:19" pos:end="231:20">-&gt;</operator><name pos:start="231:21" pos:end="231:24">name</name></name></expr></argument>, <argument pos:start="231:27" pos:end="231:34"><expr pos:start="231:27" pos:end="231:34"><name pos:start="231:27" pos:end="231:34"><name pos:start="231:27" pos:end="231:29">def</name><operator pos:start="231:30" pos:end="231:31">-&gt;</operator><name pos:start="231:32" pos:end="231:34">pvr</name></name></expr></argument>, <argument pos:start="231:37" pos:end="231:49"><expr pos:start="231:37" pos:end="231:49"><name pos:start="231:37" pos:end="231:49"><name pos:start="231:37" pos:end="231:39">def</name><operator pos:start="231:40" pos:end="231:41">-&gt;</operator><name pos:start="231:42" pos:end="231:49">msr_mask</name></name></expr></argument>, <argument pos:start="231:52" pos:end="231:60"><expr pos:start="231:52" pos:end="231:60"><name pos:start="231:52" pos:end="231:60">mmu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="233:9" pos:end="241:9"><if pos:start="233:9" pos:end="241:9">if <condition pos:start="233:12" pos:end="233:29">(<expr pos:start="233:13" pos:end="233:28"><name pos:start="233:13" pos:end="233:20"><name pos:start="233:13" pos:end="233:15">env</name><operator pos:start="233:16" pos:end="233:17">-&gt;</operator><name pos:start="233:18" pos:end="233:20">tlb</name></name> <operator pos:start="233:22" pos:end="233:23">!=</operator> <name pos:start="233:25" pos:end="233:28">NULL</name></expr>)</condition> <block pos:start="233:31" pos:end="241:9">{<block_content pos:start="235:13" pos:end="239:33">

            <expr_stmt pos:start="235:13" pos:end="239:33"><expr pos:start="235:13" pos:end="239:32"><call pos:start="235:13" pos:end="239:32"><name pos:start="235:13" pos:end="235:18">printf</name><argument_list pos:start="235:19" pos:end="239:32">(<argument pos:start="235:20" pos:end="235:66"><expr pos:start="235:20" pos:end="235:66"><literal type="string" pos:start="235:20" pos:end="235:66">"                       %d %s TLB in %d ways\n"</literal></expr></argument>,

                   <argument pos:start="237:20" pos:end="237:30"><expr pos:start="237:20" pos:end="237:30"><name pos:start="237:20" pos:end="237:30"><name pos:start="237:20" pos:end="237:22">env</name><operator pos:start="237:23" pos:end="237:24">-&gt;</operator><name pos:start="237:25" pos:end="237:30">nb_tlb</name></name></expr></argument>, <argument pos:start="237:33" pos:end="237:68"><expr pos:start="237:33" pos:end="237:68"><ternary pos:start="237:33" pos:end="237:68"><condition pos:start="237:33" pos:end="237:46"><expr pos:start="237:33" pos:end="237:44"><name pos:start="237:33" pos:end="237:44"><name pos:start="237:33" pos:end="237:35">env</name><operator pos:start="237:36" pos:end="237:37">-&gt;</operator><name pos:start="237:38" pos:end="237:44">id_tlbs</name></name></expr> ?</condition><then pos:start="237:48" pos:end="237:57"> <expr pos:start="237:48" pos:end="237:57"><literal type="string" pos:start="237:48" pos:end="237:57">"splitted"</literal></expr> </then><else pos:start="237:59" pos:end="237:68">: <expr pos:start="237:61" pos:end="237:68"><literal type="string" pos:start="237:61" pos:end="237:68">"merged"</literal></expr></else></ternary></expr></argument>,

                   <argument pos:start="239:20" pos:end="239:31"><expr pos:start="239:20" pos:end="239:31"><name pos:start="239:20" pos:end="239:31"><name pos:start="239:20" pos:end="239:22">env</name><operator pos:start="239:23" pos:end="239:24">-&gt;</operator><name pos:start="239:25" pos:end="239:31">nb_ways</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="243:9" pos:end="247:38"><expr pos:start="243:9" pos:end="247:37"><call pos:start="243:9" pos:end="247:37"><name pos:start="243:9" pos:end="243:14">printf</name><argument_list pos:start="243:15" pos:end="247:37">(<argument pos:start="243:16" pos:end="245:44"><expr pos:start="243:16" pos:end="245:44"><literal type="string" pos:start="243:16" pos:end="243:44">"    Exceptions model : %s\n"</literal>

               <literal type="string" pos:start="245:16" pos:end="245:44">"    Bus model        : %s\n"</literal></expr></argument>,

               <argument pos:start="247:16" pos:end="247:25"><expr pos:start="247:16" pos:end="247:25"><name pos:start="247:16" pos:end="247:25">excp_model</name></expr></argument>, <argument pos:start="247:28" pos:end="247:36"><expr pos:start="247:28" pos:end="247:36"><name pos:start="247:28" pos:end="247:36">bus_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block>

    <expr_stmt pos:start="251:5" pos:end="251:24"><expr pos:start="251:5" pos:end="251:23"><call pos:start="251:5" pos:end="251:23"><name pos:start="251:5" pos:end="251:18">dump_ppc_insns</name><argument_list pos:start="251:19" pos:end="251:23">(<argument pos:start="251:20" pos:end="251:22"><expr pos:start="251:20" pos:end="251:22"><name pos:start="251:20" pos:end="251:22">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="253:5" pos:end="253:23"><expr pos:start="253:5" pos:end="253:22"><call pos:start="253:5" pos:end="253:22"><name pos:start="253:5" pos:end="253:17">dump_ppc_sprs</name><argument_list pos:start="253:18" pos:end="253:22">(<argument pos:start="253:19" pos:end="253:21"><expr pos:start="253:19" pos:end="253:21"><name pos:start="253:19" pos:end="253:21">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="255:5" pos:end="258:0"><expr pos:start="255:5" pos:end="255:18"><call pos:start="255:5" pos:end="255:18"><name pos:start="255:5" pos:end="255:10">fflush</name><argument_list pos:start="255:11" pos:end="255:18">(<argument pos:start="255:12" pos:end="255:17"><expr pos:start="255:12" pos:end="255:17"><name pos:start="255:12" pos:end="255:17">stdout</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="257:1" pos:end="257:6">#<cpp:directive pos:start="257:2" pos:end="257:6">endif</cpp:directive></cpp:endif>



    <return pos:start="261:5" pos:end="261:13">return <expr pos:start="261:12" pos:end="261:12"><literal type="number" pos:start="261:12" pos:end="261:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
