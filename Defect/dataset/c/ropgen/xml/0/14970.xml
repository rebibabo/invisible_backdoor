<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14970.c" pos:tabs="8"><function pos:start="1:1" pos:end="157:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">qemu_rbd_create</name><parameter_list pos:start="1:27" pos:end="1:78">(<parameter pos:start="1:28" pos:end="1:47"><decl pos:start="1:28" pos:end="1:47"><type pos:start="1:28" pos:end="1:47"><specifier pos:start="1:28" pos:end="1:32">const</specifier> <name pos:start="1:34" pos:end="1:37">char</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:47">filename</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:77"><decl pos:start="1:50" pos:end="1:77"><type pos:start="1:50" pos:end="1:77"><name pos:start="1:50" pos:end="1:68">QEMUOptionParameter</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:77">options</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="157:1">{<block_content pos:start="5:5" pos:end="155:15">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:17">bytes</name> <init pos:start="5:19" pos:end="5:21">= <expr pos:start="5:21" pos:end="5:21"><literal type="number" pos:start="5:21" pos:end="5:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">int64_t</name></type> <name pos:start="7:13" pos:end="7:19">objsize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:17">obj_order</name> <init pos:start="9:19" pos:end="9:21">= <expr pos:start="9:21" pos:end="9:21"><literal type="number" pos:start="9:21" pos:end="9:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:37"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">char</name></type> <name pos:start="11:10" pos:end="11:37"><name pos:start="11:10" pos:end="11:13">pool</name><index pos:start="11:14" pos:end="11:37">[<expr pos:start="11:15" pos:end="11:36"><name pos:start="11:15" pos:end="11:36">RBD_MAX_POOL_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">char</name></type> <name pos:start="13:10" pos:end="13:38"><name pos:start="13:10" pos:end="13:13">name</name><index pos:start="13:14" pos:end="13:38">[<expr pos:start="13:15" pos:end="13:37"><name pos:start="13:15" pos:end="13:37">RBD_MAX_IMAGE_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:42"><decl pos:start="15:5" pos:end="15:41"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">char</name></type> <name pos:start="15:10" pos:end="15:41"><name pos:start="15:10" pos:end="15:17">snap_buf</name><index pos:start="15:18" pos:end="15:41">[<expr pos:start="15:19" pos:end="15:40"><name pos:start="15:19" pos:end="15:40">RBD_MAX_SNAP_NAME_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:32"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:32"><name pos:start="17:10" pos:end="17:13">conf</name><index pos:start="17:14" pos:end="17:32">[<expr pos:start="17:15" pos:end="17:31"><name pos:start="17:15" pos:end="17:31">RBD_MAX_CONF_SIZE</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:20"><decl pos:start="19:5" pos:end="19:19"><type pos:start="19:5" pos:end="19:11"><name pos:start="19:5" pos:end="19:11">rados_t</name></type> <name pos:start="19:13" pos:end="19:19">cluster</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:25"><decl pos:start="21:5" pos:end="21:24"><type pos:start="21:5" pos:end="21:17"><name pos:start="21:5" pos:end="21:17">rados_ioctx_t</name></type> <name pos:start="21:19" pos:end="21:24">io_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:12"><decl pos:start="23:5" pos:end="23:11"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="37:5"><if pos:start="27:5" pos:end="37:5">if <condition pos:start="27:8" pos:end="33:51">(<expr pos:start="27:9" pos:end="33:50"><call pos:start="27:9" pos:end="33:46"><name pos:start="27:9" pos:end="27:26">qemu_rbd_parsename</name><argument_list pos:start="27:27" pos:end="33:46">(<argument pos:start="27:28" pos:end="27:35"><expr pos:start="27:28" pos:end="27:35"><name pos:start="27:28" pos:end="27:35">filename</name></expr></argument>, <argument pos:start="27:38" pos:end="27:41"><expr pos:start="27:38" pos:end="27:41"><name pos:start="27:38" pos:end="27:41">pool</name></expr></argument>, <argument pos:start="27:44" pos:end="27:55"><expr pos:start="27:44" pos:end="27:55"><sizeof pos:start="27:44" pos:end="27:55">sizeof<argument_list pos:start="27:50" pos:end="27:55">(<argument pos:start="27:51" pos:end="27:54"><expr pos:start="27:51" pos:end="27:54"><name pos:start="27:51" pos:end="27:54">pool</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="29:28" pos:end="29:35"><expr pos:start="29:28" pos:end="29:35"><name pos:start="29:28" pos:end="29:35">snap_buf</name></expr></argument>, <argument pos:start="29:38" pos:end="29:53"><expr pos:start="29:38" pos:end="29:53"><sizeof pos:start="29:38" pos:end="29:53">sizeof<argument_list pos:start="29:44" pos:end="29:53">(<argument pos:start="29:45" pos:end="29:52"><expr pos:start="29:45" pos:end="29:52"><name pos:start="29:45" pos:end="29:52">snap_buf</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="31:28" pos:end="31:31"><expr pos:start="31:28" pos:end="31:31"><name pos:start="31:28" pos:end="31:31">name</name></expr></argument>, <argument pos:start="31:34" pos:end="31:45"><expr pos:start="31:34" pos:end="31:45"><sizeof pos:start="31:34" pos:end="31:45">sizeof<argument_list pos:start="31:40" pos:end="31:45">(<argument pos:start="31:41" pos:end="31:44"><expr pos:start="31:41" pos:end="31:44"><name pos:start="31:41" pos:end="31:44">name</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                           <argument pos:start="33:28" pos:end="33:31"><expr pos:start="33:28" pos:end="33:31"><name pos:start="33:28" pos:end="33:31">conf</name></expr></argument>, <argument pos:start="33:34" pos:end="33:45"><expr pos:start="33:34" pos:end="33:45"><sizeof pos:start="33:34" pos:end="33:45">sizeof<argument_list pos:start="33:40" pos:end="33:45">(<argument pos:start="33:41" pos:end="33:44"><expr pos:start="33:41" pos:end="33:44"><name pos:start="33:41" pos:end="33:44">conf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="33:48" pos:end="33:48">&lt;</operator> <literal type="number" pos:start="33:50" pos:end="33:50">0</literal></expr>)</condition> <block pos:start="33:53" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:23">

        <return pos:start="35:9" pos:end="35:23">return <expr pos:start="35:16" pos:end="35:22"><operator pos:start="35:16" pos:end="35:16">-</operator><name pos:start="35:17" pos:end="35:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:26">/* Read out options */</comment>

    <while pos:start="43:5" pos:end="79:5">while <condition pos:start="43:11" pos:end="43:36">(<expr pos:start="43:12" pos:end="43:35"><name pos:start="43:12" pos:end="43:18">options</name> <operator pos:start="43:20" pos:end="43:21">&amp;&amp;</operator> <name pos:start="43:23" pos:end="43:35"><name pos:start="43:23" pos:end="43:29">options</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:35">name</name></name></expr>)</condition> <block pos:start="43:38" pos:end="79:5">{<block_content pos:start="45:9" pos:end="77:18">

        <if_stmt pos:start="45:9" pos:end="75:9"><if pos:start="45:9" pos:end="49:9">if <condition pos:start="45:12" pos:end="45:51">(<expr pos:start="45:13" pos:end="45:50"><operator pos:start="45:13" pos:end="45:13">!</operator><call pos:start="45:14" pos:end="45:50"><name pos:start="45:14" pos:end="45:19">strcmp</name><argument_list pos:start="45:20" pos:end="45:50">(<argument pos:start="45:21" pos:end="45:33"><expr pos:start="45:21" pos:end="45:33"><name pos:start="45:21" pos:end="45:33"><name pos:start="45:21" pos:end="45:27">options</name><operator pos:start="45:28" pos:end="45:29">-&gt;</operator><name pos:start="45:30" pos:end="45:33">name</name></name></expr></argument>, <argument pos:start="45:36" pos:end="45:49"><expr pos:start="45:36" pos:end="45:49"><name pos:start="45:36" pos:end="45:49">BLOCK_OPT_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="45:53" pos:end="49:9">{<block_content pos:start="47:13" pos:end="47:37">

            <expr_stmt pos:start="47:13" pos:end="47:37"><expr pos:start="47:13" pos:end="47:36"><name pos:start="47:13" pos:end="47:17">bytes</name> <operator pos:start="47:19" pos:end="47:19">=</operator> <name pos:start="47:21" pos:end="47:36"><name pos:start="47:21" pos:end="47:27">options</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:34">value</name><operator pos:start="47:35" pos:end="47:35">.</operator><name pos:start="47:36" pos:end="47:36">n</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="49:11" pos:end="75:9">else if <condition pos:start="49:19" pos:end="49:66">(<expr pos:start="49:20" pos:end="49:65"><operator pos:start="49:20" pos:end="49:20">!</operator><call pos:start="49:21" pos:end="49:65"><name pos:start="49:21" pos:end="49:26">strcmp</name><argument_list pos:start="49:27" pos:end="49:65">(<argument pos:start="49:28" pos:end="49:40"><expr pos:start="49:28" pos:end="49:40"><name pos:start="49:28" pos:end="49:40"><name pos:start="49:28" pos:end="49:34">options</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:40">name</name></name></expr></argument>, <argument pos:start="49:43" pos:end="49:64"><expr pos:start="49:43" pos:end="49:64"><name pos:start="49:43" pos:end="49:64">BLOCK_OPT_CLUSTER_SIZE</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:68" pos:end="75:9">{<block_content pos:start="51:13" pos:end="73:13">

            <if_stmt pos:start="51:13" pos:end="73:13"><if pos:start="51:13" pos:end="73:13">if <condition pos:start="51:16" pos:end="51:33">(<expr pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:32"><name pos:start="51:17" pos:end="51:23">options</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:30">value</name><operator pos:start="51:31" pos:end="51:31">.</operator><name pos:start="51:32" pos:end="51:32">n</name></name></expr>)</condition> <block pos:start="51:35" pos:end="73:13">{<block_content pos:start="53:17" pos:end="71:45">

                <expr_stmt pos:start="53:17" pos:end="53:43"><expr pos:start="53:17" pos:end="53:42"><name pos:start="53:17" pos:end="53:23">objsize</name> <operator pos:start="53:25" pos:end="53:25">=</operator> <name pos:start="53:27" pos:end="53:42"><name pos:start="53:27" pos:end="53:33">options</name><operator pos:start="53:34" pos:end="53:35">-&gt;</operator><name pos:start="53:36" pos:end="53:40">value</name><operator pos:start="53:41" pos:end="53:41">.</operator><name pos:start="53:42" pos:end="53:42">n</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="55:17" pos:end="61:17"><if pos:start="55:17" pos:end="61:17">if <condition pos:start="55:20" pos:end="55:44">(<expr pos:start="55:21" pos:end="55:43"><operator pos:start="55:21" pos:end="55:21">(</operator><name pos:start="55:22" pos:end="55:28">objsize</name> <operator pos:start="55:30" pos:end="55:30">-</operator> <literal type="number" pos:start="55:32" pos:end="55:32">1</literal><operator pos:start="55:33" pos:end="55:33">)</operator> <operator pos:start="55:35" pos:end="55:35">&amp;</operator> <name pos:start="55:37" pos:end="55:43">objsize</name></expr>)</condition> <block pos:start="55:46" pos:end="61:17">{<block_content pos:start="57:21" pos:end="59:35">    <comment type="block" pos:start="55:51" pos:end="55:73">/* not a power of 2? */</comment>

                    <expr_stmt pos:start="57:21" pos:end="57:68"><expr pos:start="57:21" pos:end="57:67"><call pos:start="57:21" pos:end="57:67"><name pos:start="57:21" pos:end="57:32">error_report</name><argument_list pos:start="57:33" pos:end="57:67">(<argument pos:start="57:34" pos:end="57:66"><expr pos:start="57:34" pos:end="57:66"><literal type="string" pos:start="57:34" pos:end="57:66">"obj size needs to be power of 2"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="59:21" pos:end="59:35">return <expr pos:start="59:28" pos:end="59:34"><operator pos:start="59:28" pos:end="59:28">-</operator><name pos:start="59:29" pos:end="59:34">EINVAL</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="63:17" pos:end="69:17"><if pos:start="63:17" pos:end="69:17">if <condition pos:start="63:20" pos:end="63:35">(<expr pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:27">objsize</name> <operator pos:start="63:29" pos:end="63:29">&lt;</operator> <literal type="number" pos:start="63:31" pos:end="63:34">4096</literal></expr>)</condition> <block pos:start="63:37" pos:end="69:17">{<block_content pos:start="65:21" pos:end="67:35">

                    <expr_stmt pos:start="65:21" pos:end="65:55"><expr pos:start="65:21" pos:end="65:54"><call pos:start="65:21" pos:end="65:54"><name pos:start="65:21" pos:end="65:32">error_report</name><argument_list pos:start="65:33" pos:end="65:54">(<argument pos:start="65:34" pos:end="65:53"><expr pos:start="65:34" pos:end="65:53"><literal type="string" pos:start="65:34" pos:end="65:53">"obj size too small"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="67:21" pos:end="67:35">return <expr pos:start="67:28" pos:end="67:34"><operator pos:start="67:28" pos:end="67:28">-</operator><name pos:start="67:29" pos:end="67:34">EINVAL</name></expr>;</return>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:45"><expr pos:start="71:17" pos:end="71:44"><name pos:start="71:17" pos:end="71:25">obj_order</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <call pos:start="71:29" pos:end="71:40"><name pos:start="71:29" pos:end="71:31">ffs</name><argument_list pos:start="71:32" pos:end="71:40">(<argument pos:start="71:33" pos:end="71:39"><expr pos:start="71:33" pos:end="71:39"><name pos:start="71:33" pos:end="71:39">objsize</name></expr></argument>)</argument_list></call> <operator pos:start="71:42" pos:end="71:42">-</operator> <literal type="number" pos:start="71:44" pos:end="71:44">1</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:18"><expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:15">options</name><operator pos:start="77:16" pos:end="77:17">++</operator></expr>;</expr_stmt>

    </block_content>}</block></while>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:41">(<expr pos:start="83:9" pos:end="83:40"><call pos:start="83:9" pos:end="83:36"><name pos:start="83:9" pos:end="83:20">rados_create</name><argument_list pos:start="83:21" pos:end="83:36">(<argument pos:start="83:22" pos:end="83:29"><expr pos:start="83:22" pos:end="83:29"><operator pos:start="83:22" pos:end="83:22">&amp;</operator><name pos:start="83:23" pos:end="83:29">cluster</name></expr></argument>, <argument pos:start="83:32" pos:end="83:35"><expr pos:start="83:32" pos:end="83:35"><name pos:start="83:32" pos:end="83:35">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="83:38" pos:end="83:38">&lt;</operator> <literal type="number" pos:start="83:40" pos:end="83:40">0</literal></expr>)</condition> <block pos:start="83:43" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:20">

        <expr_stmt pos:start="85:9" pos:end="85:43"><expr pos:start="85:9" pos:end="85:42"><call pos:start="85:9" pos:end="85:42"><name pos:start="85:9" pos:end="85:20">error_report</name><argument_list pos:start="85:21" pos:end="85:42">(<argument pos:start="85:22" pos:end="85:41"><expr pos:start="85:22" pos:end="85:41"><literal type="string" pos:start="85:22" pos:end="85:41">"error initializing"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:20">return <expr pos:start="87:16" pos:end="87:19"><operator pos:start="87:16" pos:end="87:16">-</operator><name pos:start="87:17" pos:end="87:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="93:5" pos:end="105:5"><if pos:start="93:5" pos:end="105:5">if <condition pos:start="93:8" pos:end="93:38">(<expr pos:start="93:9" pos:end="93:37"><call pos:start="93:9" pos:end="93:29"><name pos:start="93:9" pos:end="93:14">strstr</name><argument_list pos:start="93:15" pos:end="93:29">(<argument pos:start="93:16" pos:end="93:19"><expr pos:start="93:16" pos:end="93:19"><name pos:start="93:16" pos:end="93:19">conf</name></expr></argument>, <argument pos:start="93:22" pos:end="93:28"><expr pos:start="93:22" pos:end="93:28"><literal type="string" pos:start="93:22" pos:end="93:28">"conf="</literal></expr></argument>)</argument_list></call> <operator pos:start="93:31" pos:end="93:32">==</operator> <name pos:start="93:34" pos:end="93:37">NULL</name></expr>)</condition> <block pos:start="93:40" pos:end="105:5">{<block_content pos:start="95:9" pos:end="103:9">

        <if_stmt pos:start="95:9" pos:end="103:9"><if pos:start="95:9" pos:end="103:9">if <condition pos:start="95:12" pos:end="95:52">(<expr pos:start="95:13" pos:end="95:51"><call pos:start="95:13" pos:end="95:47"><name pos:start="95:13" pos:end="95:32">rados_conf_read_file</name><argument_list pos:start="95:33" pos:end="95:47">(<argument pos:start="95:34" pos:end="95:40"><expr pos:start="95:34" pos:end="95:40"><name pos:start="95:34" pos:end="95:40">cluster</name></expr></argument>, <argument pos:start="95:43" pos:end="95:46"><expr pos:start="95:43" pos:end="95:46"><name pos:start="95:43" pos:end="95:46">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="95:49" pos:end="95:49">&lt;</operator> <literal type="number" pos:start="95:51" pos:end="95:51">0</literal></expr>)</condition> <block pos:start="95:54" pos:end="103:9">{<block_content pos:start="97:13" pos:end="101:24">

            <expr_stmt pos:start="97:13" pos:end="97:54"><expr pos:start="97:13" pos:end="97:53"><call pos:start="97:13" pos:end="97:53"><name pos:start="97:13" pos:end="97:24">error_report</name><argument_list pos:start="97:25" pos:end="97:53">(<argument pos:start="97:26" pos:end="97:52"><expr pos:start="97:26" pos:end="97:52"><literal type="string" pos:start="97:26" pos:end="97:52">"error reading config file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:36"><expr pos:start="99:13" pos:end="99:35"><call pos:start="99:13" pos:end="99:35"><name pos:start="99:13" pos:end="99:26">rados_shutdown</name><argument_list pos:start="99:27" pos:end="99:35">(<argument pos:start="99:28" pos:end="99:34"><expr pos:start="99:28" pos:end="99:34"><name pos:start="99:28" pos:end="99:34">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:24">return <expr pos:start="101:20" pos:end="101:23"><operator pos:start="101:20" pos:end="101:20">-</operator><name pos:start="101:21" pos:end="101:23">EIO</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="109:5" pos:end="119:5"><if pos:start="109:5" pos:end="119:5">if <condition pos:start="109:8" pos:end="111:45">(<expr pos:start="109:9" pos:end="111:44"><name pos:start="109:9" pos:end="109:15"><name pos:start="109:9" pos:end="109:12">conf</name><index pos:start="109:13" pos:end="109:15">[<expr pos:start="109:14" pos:end="109:14"><literal type="number" pos:start="109:14" pos:end="109:14">0</literal></expr>]</index></name> <operator pos:start="109:17" pos:end="109:18">!=</operator> <literal type="char" pos:start="109:20" pos:end="109:23">'\0'</literal> <operator pos:start="109:25" pos:end="109:26">&amp;&amp;</operator>

        <call pos:start="111:9" pos:end="111:40"><name pos:start="111:9" pos:end="111:25">qemu_rbd_set_conf</name><argument_list pos:start="111:26" pos:end="111:40">(<argument pos:start="111:27" pos:end="111:33"><expr pos:start="111:27" pos:end="111:33"><name pos:start="111:27" pos:end="111:33">cluster</name></expr></argument>, <argument pos:start="111:36" pos:end="111:39"><expr pos:start="111:36" pos:end="111:39"><name pos:start="111:36" pos:end="111:39">conf</name></expr></argument>)</argument_list></call> <operator pos:start="111:42" pos:end="111:42">&lt;</operator> <literal type="number" pos:start="111:44" pos:end="111:44">0</literal></expr>)</condition> <block pos:start="111:47" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:20">

        <expr_stmt pos:start="113:9" pos:end="113:53"><expr pos:start="113:9" pos:end="113:52"><call pos:start="113:9" pos:end="113:52"><name pos:start="113:9" pos:end="113:20">error_report</name><argument_list pos:start="113:21" pos:end="113:52">(<argument pos:start="113:22" pos:end="113:51"><expr pos:start="113:22" pos:end="113:51"><literal type="string" pos:start="113:22" pos:end="113:51">"error setting config options"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:32"><expr pos:start="115:9" pos:end="115:31"><call pos:start="115:9" pos:end="115:31"><name pos:start="115:9" pos:end="115:22">rados_shutdown</name><argument_list pos:start="115:23" pos:end="115:31">(<argument pos:start="115:24" pos:end="115:30"><expr pos:start="115:24" pos:end="115:30"><name pos:start="115:24" pos:end="115:30">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:20">return <expr pos:start="117:16" pos:end="117:19"><operator pos:start="117:16" pos:end="117:16">-</operator><name pos:start="117:17" pos:end="117:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="123:5" pos:end="131:5"><if pos:start="123:5" pos:end="131:5">if <condition pos:start="123:8" pos:end="123:35">(<expr pos:start="123:9" pos:end="123:34"><call pos:start="123:9" pos:end="123:30"><name pos:start="123:9" pos:end="123:21">rados_connect</name><argument_list pos:start="123:22" pos:end="123:30">(<argument pos:start="123:23" pos:end="123:29"><expr pos:start="123:23" pos:end="123:29"><name pos:start="123:23" pos:end="123:29">cluster</name></expr></argument>)</argument_list></call> <operator pos:start="123:32" pos:end="123:32">&lt;</operator> <literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>)</condition> <block pos:start="123:37" pos:end="131:5">{<block_content pos:start="125:9" pos:end="129:20">

        <expr_stmt pos:start="125:9" pos:end="125:41"><expr pos:start="125:9" pos:end="125:40"><call pos:start="125:9" pos:end="125:40"><name pos:start="125:9" pos:end="125:20">error_report</name><argument_list pos:start="125:21" pos:end="125:40">(<argument pos:start="125:22" pos:end="125:39"><expr pos:start="125:22" pos:end="125:39"><literal type="string" pos:start="125:22" pos:end="125:39">"error connecting"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:32"><expr pos:start="127:9" pos:end="127:31"><call pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:22">rados_shutdown</name><argument_list pos:start="127:23" pos:end="127:31">(<argument pos:start="127:24" pos:end="127:30"><expr pos:start="127:24" pos:end="127:30"><name pos:start="127:24" pos:end="127:30">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="129:9" pos:end="129:20">return <expr pos:start="129:16" pos:end="129:19"><operator pos:start="129:16" pos:end="129:16">-</operator><name pos:start="129:17" pos:end="129:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="143:5"><if pos:start="135:5" pos:end="143:5">if <condition pos:start="135:8" pos:end="135:55">(<expr pos:start="135:9" pos:end="135:54"><call pos:start="135:9" pos:end="135:50"><name pos:start="135:9" pos:end="135:26">rados_ioctx_create</name><argument_list pos:start="135:27" pos:end="135:50">(<argument pos:start="135:28" pos:end="135:34"><expr pos:start="135:28" pos:end="135:34"><name pos:start="135:28" pos:end="135:34">cluster</name></expr></argument>, <argument pos:start="135:37" pos:end="135:40"><expr pos:start="135:37" pos:end="135:40"><name pos:start="135:37" pos:end="135:40">pool</name></expr></argument>, <argument pos:start="135:43" pos:end="135:49"><expr pos:start="135:43" pos:end="135:49"><operator pos:start="135:43" pos:end="135:43">&amp;</operator><name pos:start="135:44" pos:end="135:49">io_ctx</name></expr></argument>)</argument_list></call> <operator pos:start="135:52" pos:end="135:52">&lt;</operator> <literal type="number" pos:start="135:54" pos:end="135:54">0</literal></expr>)</condition> <block pos:start="135:57" pos:end="143:5">{<block_content pos:start="137:9" pos:end="141:20">

        <expr_stmt pos:start="137:9" pos:end="137:52"><expr pos:start="137:9" pos:end="137:51"><call pos:start="137:9" pos:end="137:51"><name pos:start="137:9" pos:end="137:20">error_report</name><argument_list pos:start="137:21" pos:end="137:51">(<argument pos:start="137:22" pos:end="137:44"><expr pos:start="137:22" pos:end="137:44"><literal type="string" pos:start="137:22" pos:end="137:44">"error opening pool %s"</literal></expr></argument>, <argument pos:start="137:47" pos:end="137:50"><expr pos:start="137:47" pos:end="137:50"><name pos:start="137:47" pos:end="137:50">pool</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:32"><expr pos:start="139:9" pos:end="139:31"><call pos:start="139:9" pos:end="139:31"><name pos:start="139:9" pos:end="139:22">rados_shutdown</name><argument_list pos:start="139:23" pos:end="139:31">(<argument pos:start="139:24" pos:end="139:30"><expr pos:start="139:24" pos:end="139:30"><name pos:start="139:24" pos:end="139:30">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="141:9" pos:end="141:20">return <expr pos:start="141:16" pos:end="141:19"><operator pos:start="141:16" pos:end="141:16">-</operator><name pos:start="141:17" pos:end="141:19">EIO</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="147:5" pos:end="147:54"><expr pos:start="147:5" pos:end="147:53"><name pos:start="147:5" pos:end="147:7">ret</name> <operator pos:start="147:9" pos:end="147:9">=</operator> <call pos:start="147:11" pos:end="147:53"><name pos:start="147:11" pos:end="147:20">rbd_create</name><argument_list pos:start="147:21" pos:end="147:53">(<argument pos:start="147:22" pos:end="147:27"><expr pos:start="147:22" pos:end="147:27"><name pos:start="147:22" pos:end="147:27">io_ctx</name></expr></argument>, <argument pos:start="147:30" pos:end="147:33"><expr pos:start="147:30" pos:end="147:33"><name pos:start="147:30" pos:end="147:33">name</name></expr></argument>, <argument pos:start="147:36" pos:end="147:40"><expr pos:start="147:36" pos:end="147:40"><name pos:start="147:36" pos:end="147:40">bytes</name></expr></argument>, <argument pos:start="147:43" pos:end="147:52"><expr pos:start="147:43" pos:end="147:52"><operator pos:start="147:43" pos:end="147:43">&amp;</operator><name pos:start="147:44" pos:end="147:52">obj_order</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:32"><expr pos:start="149:5" pos:end="149:31"><call pos:start="149:5" pos:end="149:31"><name pos:start="149:5" pos:end="149:23">rados_ioctx_destroy</name><argument_list pos:start="149:24" pos:end="149:31">(<argument pos:start="149:25" pos:end="149:30"><expr pos:start="149:25" pos:end="149:30"><name pos:start="149:25" pos:end="149:30">io_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:28"><expr pos:start="151:5" pos:end="151:27"><call pos:start="151:5" pos:end="151:27"><name pos:start="151:5" pos:end="151:18">rados_shutdown</name><argument_list pos:start="151:19" pos:end="151:27">(<argument pos:start="151:20" pos:end="151:26"><expr pos:start="151:20" pos:end="151:26"><name pos:start="151:20" pos:end="151:26">cluster</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="155:5" pos:end="155:15">return <expr pos:start="155:12" pos:end="155:14"><name pos:start="155:12" pos:end="155:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
