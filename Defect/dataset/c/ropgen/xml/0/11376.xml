<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11376.c" pos:tabs="8"><function pos:start="1:1" pos:end="27:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">quantize_coefs</name><parameter_list pos:start="1:26" pos:end="1:72">(<parameter pos:start="1:27" pos:end="1:38"><decl pos:start="1:27" pos:end="1:38"><type pos:start="1:27" pos:end="1:38"><name pos:start="1:27" pos:end="1:32">double</name> <modifier pos:start="1:34" pos:end="1:34">*</modifier></type><name pos:start="1:35" pos:end="1:38">coef</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:48"><decl pos:start="1:41" pos:end="1:48"><type pos:start="1:41" pos:end="1:48"><name pos:start="1:41" pos:end="1:43">int</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:48">idx</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:60"><decl pos:start="1:51" pos:end="1:60"><type pos:start="1:51" pos:end="1:60"><name pos:start="1:51" pos:end="1:55">float</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">lpc</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:71"><decl pos:start="1:63" pos:end="1:71"><type pos:start="1:63" pos:end="1:71"><name pos:start="1:63" pos:end="1:65">int</name></type> <name pos:start="1:67" pos:end="1:71">order</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="27:1">{<block_content pos:start="5:5" pos:end="25:17">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:18">u_coef</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:59"><decl pos:start="9:5" pos:end="9:58"><type pos:start="9:5" pos:end="9:17"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:15">float</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:26">quant_arr</name> <init pos:start="9:28" pos:end="9:58">= <expr pos:start="9:30" pos:end="9:58"><name pos:start="9:30" pos:end="9:58"><name pos:start="9:30" pos:end="9:41">tns_tmp2_map</name><index pos:start="9:42" pos:end="9:58">[<expr pos:start="9:43" pos:end="9:57"><name pos:start="9:43" pos:end="9:52">TNS_Q_BITS</name> <operator pos:start="9:54" pos:end="9:55">==</operator> <literal type="number" pos:start="9:57" pos:end="9:57">4</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:68"><decl pos:start="11:5" pos:end="11:67"><type pos:start="11:5" pos:end="11:16"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:16">double</name></type> <name pos:start="11:18" pos:end="11:24">iqfac_p</name> <init pos:start="11:26" pos:end="11:67">= <expr pos:start="11:28" pos:end="11:67"><operator pos:start="11:28" pos:end="11:28">(</operator><operator pos:start="11:29" pos:end="11:29">(</operator><literal type="number" pos:start="11:30" pos:end="11:30">1</literal> <operator pos:start="11:32" pos:end="11:33">&lt;&lt;</operator> <operator pos:start="11:35" pos:end="11:35">(</operator><name pos:start="11:36" pos:end="11:45">TNS_Q_BITS</name><operator pos:start="11:46" pos:end="11:46">-</operator><literal type="number" pos:start="11:47" pos:end="11:47">1</literal><operator pos:start="11:48" pos:end="11:48">)</operator><operator pos:start="11:49" pos:end="11:49">)</operator> <operator pos:start="11:51" pos:end="11:51">-</operator> <literal type="number" pos:start="11:53" pos:end="11:55">0.5</literal><operator pos:start="11:56" pos:end="11:56">)</operator><operator pos:start="11:57" pos:end="11:57">/</operator><operator pos:start="11:58" pos:end="11:58">(</operator><name pos:start="11:59" pos:end="11:62">M_PI</name><operator pos:start="11:63" pos:end="11:63">/</operator><literal type="number" pos:start="11:64" pos:end="11:66">2.0</literal><operator pos:start="11:67" pos:end="11:67">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:68"><decl pos:start="13:5" pos:end="13:67"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:16">double</name></type> <name pos:start="13:18" pos:end="13:24">iqfac_m</name> <init pos:start="13:26" pos:end="13:67">= <expr pos:start="13:28" pos:end="13:67"><operator pos:start="13:28" pos:end="13:28">(</operator><operator pos:start="13:29" pos:end="13:29">(</operator><literal type="number" pos:start="13:30" pos:end="13:30">1</literal> <operator pos:start="13:32" pos:end="13:33">&lt;&lt;</operator> <operator pos:start="13:35" pos:end="13:35">(</operator><name pos:start="13:36" pos:end="13:45">TNS_Q_BITS</name><operator pos:start="13:46" pos:end="13:46">-</operator><literal type="number" pos:start="13:47" pos:end="13:47">1</literal><operator pos:start="13:48" pos:end="13:48">)</operator><operator pos:start="13:49" pos:end="13:49">)</operator> <operator pos:start="13:51" pos:end="13:51">+</operator> <literal type="number" pos:start="13:53" pos:end="13:55">0.5</literal><operator pos:start="13:56" pos:end="13:56">)</operator><operator pos:start="13:57" pos:end="13:57">/</operator><operator pos:start="13:58" pos:end="13:58">(</operator><name pos:start="13:59" pos:end="13:62">M_PI</name><operator pos:start="13:63" pos:end="13:63">/</operator><literal type="number" pos:start="13:64" pos:end="13:66">2.0</literal><operator pos:start="13:67" pos:end="13:67">)</operator></expr></init></decl>;</decl_stmt>

    <for pos:start="15:5" pos:end="23:5">for <control pos:start="15:9" pos:end="15:31">(<init pos:start="15:10" pos:end="15:15"><expr pos:start="15:10" pos:end="15:14"><name pos:start="15:10" pos:end="15:10">i</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <literal type="number" pos:start="15:14" pos:end="15:14">0</literal></expr>;</init> <condition pos:start="15:17" pos:end="15:26"><expr pos:start="15:17" pos:end="15:25"><name pos:start="15:17" pos:end="15:17">i</name> <operator pos:start="15:19" pos:end="15:19">&lt;</operator> <name pos:start="15:21" pos:end="15:25">order</name></expr>;</condition> <incr pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:28">i</name><operator pos:start="15:29" pos:end="15:30">++</operator></expr></incr>)</control> <block pos:start="15:33" pos:end="23:5">{<block_content pos:start="17:9" pos:end="21:35">

        <expr_stmt pos:start="17:9" pos:end="17:75"><expr pos:start="17:9" pos:end="17:74"><name pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:11">idx</name><index pos:start="17:12" pos:end="17:14">[<expr pos:start="17:13" pos:end="17:13"><name pos:start="17:13" pos:end="17:13">i</name></expr>]</index></name> <operator pos:start="17:16" pos:end="17:16">=</operator> <call pos:start="17:18" pos:end="17:74"><name pos:start="17:18" pos:end="17:22">ceilf</name><argument_list pos:start="17:23" pos:end="17:74">(<argument pos:start="17:24" pos:end="17:73"><expr pos:start="17:24" pos:end="17:73"><call pos:start="17:24" pos:end="17:36"><name pos:start="17:24" pos:end="17:27">asin</name><argument_list pos:start="17:28" pos:end="17:36">(<argument pos:start="17:29" pos:end="17:35"><expr pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:35"><name pos:start="17:29" pos:end="17:32">coef</name><index pos:start="17:33" pos:end="17:35">[<expr pos:start="17:34" pos:end="17:34"><name pos:start="17:34" pos:end="17:34">i</name></expr>]</index></name></expr></argument>)</argument_list></call><operator pos:start="17:37" pos:end="17:37">*</operator><operator pos:start="17:38" pos:end="17:38">(</operator><ternary pos:start="17:39" pos:end="17:72"><condition pos:start="17:39" pos:end="17:54"><expr pos:start="17:39" pos:end="17:52"><operator pos:start="17:39" pos:end="17:39">(</operator><name pos:start="17:40" pos:end="17:46"><name pos:start="17:40" pos:end="17:43">coef</name><index pos:start="17:44" pos:end="17:46">[<expr pos:start="17:45" pos:end="17:45"><name pos:start="17:45" pos:end="17:45">i</name></expr>]</index></name> <operator pos:start="17:48" pos:end="17:49">&gt;=</operator> <literal type="number" pos:start="17:51" pos:end="17:51">0</literal><operator pos:start="17:52" pos:end="17:52">)</operator></expr> ?</condition><then pos:start="17:56" pos:end="17:62"> <expr pos:start="17:56" pos:end="17:62"><name pos:start="17:56" pos:end="17:62">iqfac_p</name></expr> </then><else pos:start="17:64" pos:end="17:72">: <expr pos:start="17:66" pos:end="17:72"><name pos:start="17:66" pos:end="17:72">iqfac_m</name></expr></else></ternary><operator pos:start="17:73" pos:end="17:73">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:46"><expr pos:start="19:9" pos:end="19:45"><name pos:start="19:9" pos:end="19:14">u_coef</name> <operator pos:start="19:16" pos:end="19:16">=</operator> <operator pos:start="19:18" pos:end="19:18">(</operator><name pos:start="19:19" pos:end="19:24"><name pos:start="19:19" pos:end="19:21">idx</name><index pos:start="19:22" pos:end="19:24">[<expr pos:start="19:23" pos:end="19:23"><name pos:start="19:23" pos:end="19:23">i</name></expr>]</index></name><operator pos:start="19:25" pos:end="19:25">)</operator><operator pos:start="19:26" pos:end="19:26">&amp;</operator><operator pos:start="19:27" pos:end="19:27">(</operator><operator pos:start="19:28" pos:end="19:28">~</operator><operator pos:start="19:29" pos:end="19:29">(</operator><operator pos:start="19:30" pos:end="19:30">~</operator><literal type="number" pos:start="19:31" pos:end="19:31">0</literal><operator pos:start="19:32" pos:end="19:33">&lt;&lt;</operator><name pos:start="19:34" pos:end="19:43">TNS_Q_BITS</name><operator pos:start="19:44" pos:end="19:44">)</operator><operator pos:start="19:45" pos:end="19:45">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:14"><name pos:start="21:9" pos:end="21:11">lpc</name><index pos:start="21:12" pos:end="21:14">[<expr pos:start="21:13" pos:end="21:13"><name pos:start="21:13" pos:end="21:13">i</name></expr>]</index></name> <operator pos:start="21:16" pos:end="21:16">=</operator> <name pos:start="21:18" pos:end="21:34"><name pos:start="21:18" pos:end="21:26">quant_arr</name><index pos:start="21:27" pos:end="21:34">[<expr pos:start="21:28" pos:end="21:33"><name pos:start="21:28" pos:end="21:33">u_coef</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>

    <return pos:start="25:5" pos:end="25:17">return <expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">order</name></expr>;</return>

</block_content>}</block></function>
</unit>
