<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/626.c" pos:tabs="8"><function pos:start="1:1" pos:end="45:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint32_t</name></type> <name pos:start="1:17" pos:end="1:40">calc_optimal_rice_params</name><parameter_list pos:start="1:41" pos:end="3:79">(<parameter pos:start="1:42" pos:end="1:56"><decl pos:start="1:42" pos:end="1:56"><type pos:start="1:42" pos:end="1:56"><name pos:start="1:42" pos:end="1:52">RiceContext</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier></type><name pos:start="1:55" pos:end="1:56">rc</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:68"><decl pos:start="1:59" pos:end="1:68"><type pos:start="1:59" pos:end="1:68"><name pos:start="1:59" pos:end="1:61">int</name></type> <name pos:start="1:63" pos:end="1:68">porder</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:55"><decl pos:start="3:42" pos:end="3:55"><type pos:start="3:42" pos:end="3:55"><name pos:start="3:42" pos:end="3:49">uint32_t</name> <modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">sums</name></decl></parameter>, <parameter pos:start="3:58" pos:end="3:62"><decl pos:start="3:58" pos:end="3:62"><type pos:start="3:58" pos:end="3:62"><name pos:start="3:58" pos:end="3:60">int</name></type> <name pos:start="3:62" pos:end="3:62">n</name></decl></parameter>, <parameter pos:start="3:65" pos:end="3:78"><decl pos:start="3:65" pos:end="3:78"><type pos:start="3:65" pos:end="3:78"><name pos:start="3:65" pos:end="3:67">int</name></type> <name pos:start="3:69" pos:end="3:78">pred_order</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="45:1">{<block_content pos:start="7:5" pos:end="43:20">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">k</name></decl>, <decl pos:start="9:12" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:12" pos:end="9:14">cnt</name></decl>, <decl pos:start="9:17" pos:end="9:20"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:20">part</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:21">all_bits</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:25"><expr pos:start="15:5" pos:end="15:24"><name pos:start="15:5" pos:end="15:8">part</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <operator pos:start="15:12" pos:end="15:12">(</operator><literal type="number" pos:start="15:13" pos:end="15:13">1</literal> <operator pos:start="15:15" pos:end="15:16">&lt;&lt;</operator> <name pos:start="15:18" pos:end="15:23">porder</name><operator pos:start="15:24" pos:end="15:24">)</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:17"><expr pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:12">all_bits</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <literal type="number" pos:start="17:16" pos:end="17:16">0</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:37"><expr pos:start="21:5" pos:end="21:36"><name pos:start="21:5" pos:end="21:7">cnt</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <operator pos:start="21:11" pos:end="21:11">(</operator><name pos:start="21:12" pos:end="21:12">n</name> <operator pos:start="21:14" pos:end="21:15">&gt;&gt;</operator> <name pos:start="21:17" pos:end="21:22">porder</name><operator pos:start="21:23" pos:end="21:23">)</operator> <operator pos:start="21:25" pos:end="21:25">-</operator> <name pos:start="21:27" pos:end="21:36">pred_order</name></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="33:5">for<control pos:start="23:8" pos:end="23:25">(<init pos:start="23:9" pos:end="23:12"><expr pos:start="23:9" pos:end="23:11"><name pos:start="23:9" pos:end="23:9">i</name><operator pos:start="23:10" pos:end="23:10">=</operator><literal type="number" pos:start="23:11" pos:end="23:11">0</literal></expr>;</init> <condition pos:start="23:14" pos:end="23:20"><expr pos:start="23:14" pos:end="23:19"><name pos:start="23:14" pos:end="23:14">i</name><operator pos:start="23:15" pos:end="23:15">&lt;</operator><name pos:start="23:16" pos:end="23:19">part</name></expr>;</condition> <incr pos:start="23:22" pos:end="23:24"><expr pos:start="23:22" pos:end="23:24"><name pos:start="23:22" pos:end="23:22">i</name><operator pos:start="23:23" pos:end="23:24">++</operator></expr></incr>)</control> <block pos:start="23:27" pos:end="33:5">{<block_content pos:start="25:9" pos:end="31:55">

        <if_stmt pos:start="25:9" pos:end="25:39"><if pos:start="25:9" pos:end="25:39">if<condition pos:start="25:11" pos:end="25:18">(<expr pos:start="25:12" pos:end="25:17"><name pos:start="25:12" pos:end="25:12">i</name> <operator pos:start="25:14" pos:end="25:15">==</operator> <literal type="number" pos:start="25:17" pos:end="25:17">1</literal></expr>)</condition><block type="pseudo" pos:start="25:20" pos:end="25:39"><block_content pos:start="25:20" pos:end="25:39"> <expr_stmt pos:start="25:20" pos:end="25:39"><expr pos:start="25:20" pos:end="25:38"><name pos:start="25:20" pos:end="25:22">cnt</name> <operator pos:start="25:24" pos:end="25:24">=</operator> <operator pos:start="25:26" pos:end="25:26">(</operator><name pos:start="25:27" pos:end="25:27">n</name> <operator pos:start="25:29" pos:end="25:30">&gt;&gt;</operator> <name pos:start="25:32" pos:end="25:37">porder</name><operator pos:start="25:38" pos:end="25:38">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:45"><expr pos:start="27:9" pos:end="27:44"><name pos:start="27:9" pos:end="27:9">k</name> <operator pos:start="27:11" pos:end="27:11">=</operator> <call pos:start="27:13" pos:end="27:44"><name pos:start="27:13" pos:end="27:30">find_optimal_param</name><argument_list pos:start="27:31" pos:end="27:44">(<argument pos:start="27:32" pos:end="27:38"><expr pos:start="27:32" pos:end="27:38"><name pos:start="27:32" pos:end="27:38"><name pos:start="27:32" pos:end="27:35">sums</name><index pos:start="27:36" pos:end="27:38">[<expr pos:start="27:37" pos:end="27:37"><name pos:start="27:37" pos:end="27:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:41" pos:end="27:43"><expr pos:start="27:41" pos:end="27:43"><name pos:start="27:41" pos:end="27:43">cnt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:26"><expr pos:start="29:9" pos:end="29:25"><name pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:10">rc</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:18">params</name><index pos:start="29:19" pos:end="29:21">[<expr pos:start="29:20" pos:end="29:20"><name pos:start="29:20" pos:end="29:20">i</name></expr>]</index></name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:25">k</name></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:16">all_bits</name> <operator pos:start="31:18" pos:end="31:19">+=</operator> <call pos:start="31:21" pos:end="31:54"><name pos:start="31:21" pos:end="31:37">rice_encode_count</name><argument_list pos:start="31:38" pos:end="31:54">(<argument pos:start="31:39" pos:end="31:45"><expr pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:45"><name pos:start="31:39" pos:end="31:42">sums</name><index pos:start="31:43" pos:end="31:45">[<expr pos:start="31:44" pos:end="31:44"><name pos:start="31:44" pos:end="31:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="31:48" pos:end="31:50"><expr pos:start="31:48" pos:end="31:50"><name pos:start="31:48" pos:end="31:50">cnt</name></expr></argument>, <argument pos:start="31:53" pos:end="31:53"><expr pos:start="31:53" pos:end="31:53"><name pos:start="31:53" pos:end="31:53">k</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="35:5" pos:end="35:27"><expr pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:12">all_bits</name> <operator pos:start="35:14" pos:end="35:15">+=</operator> <operator pos:start="35:17" pos:end="35:17">(</operator><literal type="number" pos:start="35:18" pos:end="35:18">4</literal> <operator pos:start="35:20" pos:end="35:20">*</operator> <name pos:start="35:22" pos:end="35:25">part</name><operator pos:start="35:26" pos:end="35:26">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:24"><expr pos:start="39:5" pos:end="39:23"><name pos:start="39:5" pos:end="39:14"><name pos:start="39:5" pos:end="39:6">rc</name><operator pos:start="39:7" pos:end="39:8">-&gt;</operator><name pos:start="39:9" pos:end="39:14">porder</name></name> <operator pos:start="39:16" pos:end="39:16">=</operator> <name pos:start="39:18" pos:end="39:23">porder</name></expr>;</expr_stmt>



    <return pos:start="43:5" pos:end="43:20">return <expr pos:start="43:12" pos:end="43:19"><name pos:start="43:12" pos:end="43:19">all_bits</name></expr>;</return>

</block_content>}</block></function>
</unit>
