<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9673.c" pos:tabs="8"><function pos:start="1:1" pos:end="461:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:36">cuvid_decode_init</name><parameter_list pos:start="1:37" pos:end="1:59">(<parameter pos:start="1:38" pos:end="1:58"><decl pos:start="1:38" pos:end="1:58"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:51">AVCodecContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:58">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="461:1">{<block_content pos:start="5:5" pos:end="459:15">

    <decl_stmt pos:start="5:5" pos:end="5:41"><decl pos:start="5:5" pos:end="5:40"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">CuvidContext</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:21">ctx</name> <init pos:start="5:23" pos:end="5:40">= <expr pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:40"><name pos:start="5:25" pos:end="5:29">avctx</name><operator pos:start="5:30" pos:end="5:31">-&gt;</operator><name pos:start="5:32" pos:end="5:40">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">AVCUDADeviceContext</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:37">device_hwctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:34"><decl pos:start="9:5" pos:end="9:33"><type pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:21">AVHWDeviceContext</name> <modifier pos:start="9:23" pos:end="9:23">*</modifier></type><name pos:start="9:24" pos:end="9:33">device_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVHWFramesContext</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:34">hwframe_ctx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:34"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:25">CUVIDSOURCEDATAPACKET</name></type> <name pos:start="13:27" pos:end="13:33">seq_pkt</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:30"><decl pos:start="15:5" pos:end="15:29"><type pos:start="15:5" pos:end="15:13"><name pos:start="15:5" pos:end="15:13">CUcontext</name></type> <name pos:start="15:15" pos:end="15:22">cuda_ctx</name> <init pos:start="15:24" pos:end="15:29">= <expr pos:start="15:26" pos:end="15:29"><name pos:start="15:26" pos:end="15:29">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:20"><decl pos:start="17:5" pos:end="17:19"><type pos:start="17:5" pos:end="17:13"><name pos:start="17:5" pos:end="17:13">CUcontext</name></type> <name pos:start="17:15" pos:end="17:19">dummy</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:29"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:27">AVBitStreamFilter</name> <modifier pos:start="19:29" pos:end="19:29">*</modifier></type><name pos:start="19:30" pos:end="19:32">bsf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:11">ret</name> <init pos:start="21:13" pos:end="21:15">= <expr pos:start="21:15" pos:end="21:15"><literal type="number" pos:start="21:15" pos:end="21:15">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="29:57"><decl pos:start="25:5" pos:end="29:56"><type pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:22"><name pos:start="25:5" pos:end="25:8">enum</name> <name pos:start="25:10" pos:end="25:22">AVPixelFormat</name></name></type> <name pos:start="25:24" pos:end="25:34"><name pos:start="25:24" pos:end="25:31">pix_fmts</name><index pos:start="25:32" pos:end="25:34">[<expr pos:start="25:33" pos:end="25:33"><literal type="number" pos:start="25:33" pos:end="25:33">3</literal></expr>]</index></name> <init pos:start="25:36" pos:end="29:56">= <expr pos:start="25:38" pos:end="29:56"><block pos:start="25:38" pos:end="29:56">{ <expr pos:start="25:40" pos:end="25:54"><name pos:start="25:40" pos:end="25:54">AV_PIX_FMT_CUDA</name></expr>,

                                       <expr pos:start="27:40" pos:end="27:54"><name pos:start="27:40" pos:end="27:54">AV_PIX_FMT_NV12</name></expr>,

                                       <expr pos:start="29:40" pos:end="29:54"><name pos:start="29:40" pos:end="29:54">AV_PIX_FMT_NONE</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="33:5" pos:end="33:70"><decl pos:start="33:5" pos:end="33:69"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:20">probed_width</name> <init pos:start="33:22" pos:end="33:69">= <expr pos:start="33:24" pos:end="33:69"><ternary pos:start="33:24" pos:end="33:69"><condition pos:start="33:24" pos:end="33:43"><expr pos:start="33:24" pos:end="33:41"><name pos:start="33:24" pos:end="33:41"><name pos:start="33:24" pos:end="33:28">avctx</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:41">coded_width</name></name></expr> ?</condition><then pos:start="33:45" pos:end="33:62"> <expr pos:start="33:45" pos:end="33:62"><name pos:start="33:45" pos:end="33:62"><name pos:start="33:45" pos:end="33:49">avctx</name><operator pos:start="33:50" pos:end="33:51">-&gt;</operator><name pos:start="33:52" pos:end="33:62">coded_width</name></name></expr> </then><else pos:start="33:64" pos:end="33:69">: <expr pos:start="33:66" pos:end="33:69"><literal type="number" pos:start="33:66" pos:end="33:69">1280</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:72"><decl pos:start="35:5" pos:end="35:71"><type pos:start="35:5" pos:end="35:7"><name pos:start="35:5" pos:end="35:7">int</name></type> <name pos:start="35:9" pos:end="35:21">probed_height</name> <init pos:start="35:23" pos:end="35:71">= <expr pos:start="35:25" pos:end="35:71"><ternary pos:start="35:25" pos:end="35:71"><condition pos:start="35:25" pos:end="35:45"><expr pos:start="35:25" pos:end="35:43"><name pos:start="35:25" pos:end="35:43"><name pos:start="35:25" pos:end="35:29">avctx</name><operator pos:start="35:30" pos:end="35:31">-&gt;</operator><name pos:start="35:32" pos:end="35:43">coded_height</name></name></expr> ?</condition><then pos:start="35:47" pos:end="35:65"> <expr pos:start="35:47" pos:end="35:65"><name pos:start="35:47" pos:end="35:65"><name pos:start="35:47" pos:end="35:51">avctx</name><operator pos:start="35:52" pos:end="35:53">-&gt;</operator><name pos:start="35:54" pos:end="35:65">coded_height</name></name></expr> </then><else pos:start="35:67" pos:end="35:71">: <expr pos:start="35:69" pos:end="35:71"><literal type="number" pos:start="35:69" pos:end="35:71">720</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <comment type="line" pos:start="39:5" pos:end="39:71">// Accelerated transcoding scenarios with 'ffmpeg' require that the</comment>

    <comment type="line" pos:start="41:5" pos:end="41:71">// pix_fmt be set to AV_PIX_FMT_CUDA early. The sw_pix_fmt, and the</comment>

    <comment type="line" pos:start="43:5" pos:end="43:73">// pix_fmt for non-accelerated transcoding, do not need to be correct</comment>

    <comment type="line" pos:start="45:5" pos:end="45:65">// but need to be set to something. We arbitrarily pick NV12.</comment>

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:40"><name pos:start="47:11" pos:end="47:23">ff_get_format</name><argument_list pos:start="47:24" pos:end="47:40">(<argument pos:start="47:25" pos:end="47:29"><expr pos:start="47:25" pos:end="47:29"><name pos:start="47:25" pos:end="47:29">avctx</name></expr></argument>, <argument pos:start="47:32" pos:end="47:39"><expr pos:start="47:32" pos:end="47:39"><name pos:start="47:32" pos:end="47:39">pix_fmts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="55:5"><if pos:start="49:5" pos:end="55:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">&lt;</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>)</condition> <block pos:start="49:18" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:19">

        <expr_stmt pos:start="51:9" pos:end="51:71"><expr pos:start="51:9" pos:end="51:70"><call pos:start="51:9" pos:end="51:70"><name pos:start="51:9" pos:end="51:14">av_log</name><argument_list pos:start="51:15" pos:end="51:70">(<argument pos:start="51:16" pos:end="51:20"><expr pos:start="51:16" pos:end="51:20"><name pos:start="51:16" pos:end="51:20">avctx</name></expr></argument>, <argument pos:start="51:23" pos:end="51:34"><expr pos:start="51:23" pos:end="51:34"><name pos:start="51:23" pos:end="51:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="51:37" pos:end="51:64"><expr pos:start="51:37" pos:end="51:64"><literal type="string" pos:start="51:37" pos:end="51:64">"ff_get_format failed: %d\n"</literal></expr></argument>, <argument pos:start="51:67" pos:end="51:69"><expr pos:start="51:67" pos:end="51:69"><name pos:start="51:67" pos:end="51:69">ret</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:19">return <expr pos:start="53:16" pos:end="53:18"><name pos:start="53:16" pos:end="53:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:25"><expr pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:18"><name pos:start="57:5" pos:end="57:9">avctx</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:18">pix_fmt</name></name> <operator pos:start="57:20" pos:end="57:20">=</operator> <name pos:start="57:22" pos:end="57:24">ret</name></expr>;</expr_stmt>



    <if_stmt pos:start="61:5" pos:end="71:5"><if pos:start="61:5" pos:end="71:5">if <condition pos:start="61:8" pos:end="63:81">(<expr pos:start="61:9" pos:end="63:80"><name pos:start="61:9" pos:end="61:24"><name pos:start="61:9" pos:end="61:11">ctx</name><operator pos:start="61:12" pos:end="61:13">-&gt;</operator><name pos:start="61:14" pos:end="61:24">resize_expr</name></name> <operator pos:start="61:26" pos:end="61:27">&amp;&amp;</operator> <call pos:start="61:29" pos:end="63:75"><name pos:start="61:29" pos:end="61:34">sscanf</name><argument_list pos:start="61:35" pos:end="63:75">(<argument pos:start="61:36" pos:end="61:51"><expr pos:start="61:36" pos:end="61:51"><name pos:start="61:36" pos:end="61:51"><name pos:start="61:36" pos:end="61:38">ctx</name><operator pos:start="61:39" pos:end="61:40">-&gt;</operator><name pos:start="61:41" pos:end="61:51">resize_expr</name></name></expr></argument>, <argument pos:start="61:54" pos:end="61:60"><expr pos:start="61:54" pos:end="61:60"><literal type="string" pos:start="61:54" pos:end="61:60">"%dx%d"</literal></expr></argument>,

                                   <argument pos:start="63:36" pos:end="63:53"><expr pos:start="63:36" pos:end="63:53"><operator pos:start="63:36" pos:end="63:36">&amp;</operator><name pos:start="63:37" pos:end="63:53"><name pos:start="63:37" pos:end="63:39">ctx</name><operator pos:start="63:40" pos:end="63:41">-&gt;</operator><name pos:start="63:42" pos:end="63:47">resize</name><operator pos:start="63:48" pos:end="63:48">.</operator><name pos:start="63:49" pos:end="63:53">width</name></name></expr></argument>, <argument pos:start="63:56" pos:end="63:74"><expr pos:start="63:56" pos:end="63:74"><operator pos:start="63:56" pos:end="63:56">&amp;</operator><name pos:start="63:57" pos:end="63:74"><name pos:start="63:57" pos:end="63:59">ctx</name><operator pos:start="63:60" pos:end="63:61">-&gt;</operator><name pos:start="63:62" pos:end="63:67">resize</name><operator pos:start="63:68" pos:end="63:68">.</operator><name pos:start="63:69" pos:end="63:74">height</name></name></expr></argument>)</argument_list></call> <operator pos:start="63:77" pos:end="63:78">!=</operator> <literal type="number" pos:start="63:80" pos:end="63:80">2</literal></expr>)</condition> <block pos:start="63:83" pos:end="71:5">{<block_content pos:start="65:9" pos:end="69:19">

        <expr_stmt pos:start="65:9" pos:end="65:68"><expr pos:start="65:9" pos:end="65:67"><call pos:start="65:9" pos:end="65:67"><name pos:start="65:9" pos:end="65:14">av_log</name><argument_list pos:start="65:15" pos:end="65:67">(<argument pos:start="65:16" pos:end="65:20"><expr pos:start="65:16" pos:end="65:20"><name pos:start="65:16" pos:end="65:20">avctx</name></expr></argument>, <argument pos:start="65:23" pos:end="65:34"><expr pos:start="65:23" pos:end="65:34"><name pos:start="65:23" pos:end="65:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="65:37" pos:end="65:66"><expr pos:start="65:37" pos:end="65:66"><literal type="string" pos:start="65:37" pos:end="65:66">"Invalid resize expressions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:30"><expr pos:start="67:9" pos:end="67:29"><name pos:start="67:9" pos:end="67:11">ret</name> <operator pos:start="67:13" pos:end="67:13">=</operator> <call pos:start="67:15" pos:end="67:29"><name pos:start="67:15" pos:end="67:21">AVERROR</name><argument_list pos:start="67:22" pos:end="67:29">(<argument pos:start="67:23" pos:end="67:28"><expr pos:start="67:23" pos:end="67:28"><name pos:start="67:23" pos:end="67:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="69:9" pos:end="69:19">goto <name pos:start="69:14" pos:end="69:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="75:5" pos:end="87:5"><if pos:start="75:5" pos:end="87:5">if <condition pos:start="75:8" pos:end="79:73">(<expr pos:start="75:9" pos:end="79:72"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:11">ctx</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:22">crop_expr</name></name> <operator pos:start="75:24" pos:end="75:25">&amp;&amp;</operator> <call pos:start="75:27" pos:end="79:67"><name pos:start="75:27" pos:end="75:32">sscanf</name><argument_list pos:start="75:33" pos:end="79:67">(<argument pos:start="75:34" pos:end="75:47"><expr pos:start="75:34" pos:end="75:47"><name pos:start="75:34" pos:end="75:47"><name pos:start="75:34" pos:end="75:36">ctx</name><operator pos:start="75:37" pos:end="75:38">-&gt;</operator><name pos:start="75:39" pos:end="75:47">crop_expr</name></name></expr></argument>, <argument pos:start="75:50" pos:end="75:62"><expr pos:start="75:50" pos:end="75:62"><literal type="string" pos:start="75:50" pos:end="75:62">"%dx%dx%dx%d"</literal></expr></argument>,

                                 <argument pos:start="77:34" pos:end="77:47"><expr pos:start="77:34" pos:end="77:47"><operator pos:start="77:34" pos:end="77:34">&amp;</operator><name pos:start="77:35" pos:end="77:47"><name pos:start="77:35" pos:end="77:37">ctx</name><operator pos:start="77:38" pos:end="77:39">-&gt;</operator><name pos:start="77:40" pos:end="77:43">crop</name><operator pos:start="77:44" pos:end="77:44">.</operator><name pos:start="77:45" pos:end="77:47">top</name></name></expr></argument>, <argument pos:start="77:50" pos:end="77:66"><expr pos:start="77:50" pos:end="77:66"><operator pos:start="77:50" pos:end="77:50">&amp;</operator><name pos:start="77:51" pos:end="77:66"><name pos:start="77:51" pos:end="77:53">ctx</name><operator pos:start="77:54" pos:end="77:55">-&gt;</operator><name pos:start="77:56" pos:end="77:59">crop</name><operator pos:start="77:60" pos:end="77:60">.</operator><name pos:start="77:61" pos:end="77:66">bottom</name></name></expr></argument>,

                                 <argument pos:start="79:34" pos:end="79:48"><expr pos:start="79:34" pos:end="79:48"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:48"><name pos:start="79:35" pos:end="79:37">ctx</name><operator pos:start="79:38" pos:end="79:39">-&gt;</operator><name pos:start="79:40" pos:end="79:43">crop</name><operator pos:start="79:44" pos:end="79:44">.</operator><name pos:start="79:45" pos:end="79:48">left</name></name></expr></argument>, <argument pos:start="79:51" pos:end="79:66"><expr pos:start="79:51" pos:end="79:66"><operator pos:start="79:51" pos:end="79:51">&amp;</operator><name pos:start="79:52" pos:end="79:66"><name pos:start="79:52" pos:end="79:54">ctx</name><operator pos:start="79:55" pos:end="79:56">-&gt;</operator><name pos:start="79:57" pos:end="79:60">crop</name><operator pos:start="79:61" pos:end="79:61">.</operator><name pos:start="79:62" pos:end="79:66">right</name></name></expr></argument>)</argument_list></call> <operator pos:start="79:69" pos:end="79:70">!=</operator> <literal type="number" pos:start="79:72" pos:end="79:72">4</literal></expr>)</condition> <block pos:start="79:75" pos:end="87:5">{<block_content pos:start="81:9" pos:end="85:19">

        <expr_stmt pos:start="81:9" pos:end="81:70"><expr pos:start="81:9" pos:end="81:69"><call pos:start="81:9" pos:end="81:69"><name pos:start="81:9" pos:end="81:14">av_log</name><argument_list pos:start="81:15" pos:end="81:69">(<argument pos:start="81:16" pos:end="81:20"><expr pos:start="81:16" pos:end="81:20"><name pos:start="81:16" pos:end="81:20">avctx</name></expr></argument>, <argument pos:start="81:23" pos:end="81:34"><expr pos:start="81:23" pos:end="81:34"><name pos:start="81:23" pos:end="81:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="81:37" pos:end="81:68"><expr pos:start="81:37" pos:end="81:68"><literal type="string" pos:start="81:37" pos:end="81:68">"Invalid cropping expressions\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="83:9" pos:end="83:30"><expr pos:start="83:9" pos:end="83:29"><name pos:start="83:9" pos:end="83:11">ret</name> <operator pos:start="83:13" pos:end="83:13">=</operator> <call pos:start="83:15" pos:end="83:29"><name pos:start="83:15" pos:end="83:21">AVERROR</name><argument_list pos:start="83:22" pos:end="83:29">(<argument pos:start="83:23" pos:end="83:28"><expr pos:start="83:23" pos:end="83:28"><name pos:start="83:23" pos:end="83:28">EINVAL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="85:9" pos:end="85:19">goto <name pos:start="85:14" pos:end="85:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="91:5" pos:end="91:43"><expr pos:start="91:5" pos:end="91:42"><name pos:start="91:5" pos:end="91:7">ret</name> <operator pos:start="91:9" pos:end="91:9">=</operator> <call pos:start="91:11" pos:end="91:42"><name pos:start="91:11" pos:end="91:30">cuvid_load_functions</name><argument_list pos:start="91:31" pos:end="91:42">(<argument pos:start="91:32" pos:end="91:41"><expr pos:start="91:32" pos:end="91:41"><operator pos:start="91:32" pos:end="91:32">&amp;</operator><name pos:start="91:33" pos:end="91:41"><name pos:start="91:33" pos:end="91:35">ctx</name><operator pos:start="91:36" pos:end="91:37">-&gt;</operator><name pos:start="91:38" pos:end="91:41">cvdl</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="93:5" pos:end="99:5"><if pos:start="93:5" pos:end="99:5">if <condition pos:start="93:8" pos:end="93:16">(<expr pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:11">ret</name> <operator pos:start="93:13" pos:end="93:13">&lt;</operator> <literal type="number" pos:start="93:15" pos:end="93:15">0</literal></expr>)</condition> <block pos:start="93:18" pos:end="99:5">{<block_content pos:start="95:9" pos:end="97:19">

        <expr_stmt pos:start="95:9" pos:end="95:65"><expr pos:start="95:9" pos:end="95:64"><call pos:start="95:9" pos:end="95:64"><name pos:start="95:9" pos:end="95:14">av_log</name><argument_list pos:start="95:15" pos:end="95:64">(<argument pos:start="95:16" pos:end="95:20"><expr pos:start="95:16" pos:end="95:20"><name pos:start="95:16" pos:end="95:20">avctx</name></expr></argument>, <argument pos:start="95:23" pos:end="95:34"><expr pos:start="95:23" pos:end="95:34"><name pos:start="95:23" pos:end="95:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="95:37" pos:end="95:63"><expr pos:start="95:37" pos:end="95:63"><literal type="string" pos:start="95:37" pos:end="95:63">"Failed loading nvcuvid.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:19">goto <name pos:start="97:14" pos:end="97:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="103:5" pos:end="103:82"><expr pos:start="103:5" pos:end="103:81"><name pos:start="103:5" pos:end="103:20"><name pos:start="103:5" pos:end="103:7">ctx</name><operator pos:start="103:8" pos:end="103:9">-&gt;</operator><name pos:start="103:10" pos:end="103:20">frame_queue</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <call pos:start="103:24" pos:end="103:81"><name pos:start="103:24" pos:end="103:36">av_fifo_alloc</name><argument_list pos:start="103:37" pos:end="103:81">(<argument pos:start="103:38" pos:end="103:80"><expr pos:start="103:38" pos:end="103:80"><name pos:start="103:38" pos:end="103:53"><name pos:start="103:38" pos:end="103:40">ctx</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:53">nb_surfaces</name></name> <operator pos:start="103:55" pos:end="103:55">*</operator> <sizeof pos:start="103:57" pos:end="103:80">sizeof<argument_list pos:start="103:63" pos:end="103:80">(<argument pos:start="103:64" pos:end="103:79"><expr pos:start="103:64" pos:end="103:79"><name pos:start="103:64" pos:end="103:79">CuvidParsedFrame</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="105:5" pos:end="111:5"><if pos:start="105:5" pos:end="111:5">if <condition pos:start="105:8" pos:end="105:26">(<expr pos:start="105:9" pos:end="105:25"><operator pos:start="105:9" pos:end="105:9">!</operator><name pos:start="105:10" pos:end="105:25"><name pos:start="105:10" pos:end="105:12">ctx</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:25">frame_queue</name></name></expr>)</condition> <block pos:start="105:28" pos:end="111:5">{<block_content pos:start="107:9" pos:end="109:19">

        <expr_stmt pos:start="107:9" pos:end="107:30"><expr pos:start="107:9" pos:end="107:29"><name pos:start="107:9" pos:end="107:11">ret</name> <operator pos:start="107:13" pos:end="107:13">=</operator> <call pos:start="107:15" pos:end="107:29"><name pos:start="107:15" pos:end="107:21">AVERROR</name><argument_list pos:start="107:22" pos:end="107:29">(<argument pos:start="107:23" pos:end="107:28"><expr pos:start="107:23" pos:end="107:28"><name pos:start="107:23" pos:end="107:28">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="109:9" pos:end="109:19">goto <name pos:start="109:14" pos:end="109:18">error</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="115:5" pos:end="185:5"><if pos:start="115:5" pos:end="143:5">if <condition pos:start="115:8" pos:end="115:29">(<expr pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:28"><name pos:start="115:9" pos:end="115:13">avctx</name><operator pos:start="115:14" pos:end="115:15">-&gt;</operator><name pos:start="115:16" pos:end="115:28">hw_frames_ctx</name></name></expr>)</condition> <block pos:start="115:31" pos:end="143:5">{<block_content pos:start="117:9" pos:end="141:9">

        <expr_stmt pos:start="117:9" pos:end="117:59"><expr pos:start="117:9" pos:end="117:58"><name pos:start="117:9" pos:end="117:20"><name pos:start="117:9" pos:end="117:11">ctx</name><operator pos:start="117:12" pos:end="117:13">-&gt;</operator><name pos:start="117:14" pos:end="117:20">hwframe</name></name> <operator pos:start="117:22" pos:end="117:22">=</operator> <call pos:start="117:24" pos:end="117:58"><name pos:start="117:24" pos:end="117:36">av_buffer_ref</name><argument_list pos:start="117:37" pos:end="117:58">(<argument pos:start="117:38" pos:end="117:57"><expr pos:start="117:38" pos:end="117:57"><name pos:start="117:38" pos:end="117:57"><name pos:start="117:38" pos:end="117:42">avctx</name><operator pos:start="117:43" pos:end="117:44">-&gt;</operator><name pos:start="117:45" pos:end="117:57">hw_frames_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="119:9" pos:end="125:9"><if pos:start="119:9" pos:end="125:9">if <condition pos:start="119:12" pos:end="119:26">(<expr pos:start="119:13" pos:end="119:25"><operator pos:start="119:13" pos:end="119:13">!</operator><name pos:start="119:14" pos:end="119:25"><name pos:start="119:14" pos:end="119:16">ctx</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:25">hwframe</name></name></expr>)</condition> <block pos:start="119:28" pos:end="125:9">{<block_content pos:start="121:13" pos:end="123:23">

            <expr_stmt pos:start="121:13" pos:end="121:34"><expr pos:start="121:13" pos:end="121:33"><name pos:start="121:13" pos:end="121:15">ret</name> <operator pos:start="121:17" pos:end="121:17">=</operator> <call pos:start="121:19" pos:end="121:33"><name pos:start="121:19" pos:end="121:25">AVERROR</name><argument_list pos:start="121:26" pos:end="121:33">(<argument pos:start="121:27" pos:end="121:32"><expr pos:start="121:27" pos:end="121:32"><name pos:start="121:27" pos:end="121:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="123:13" pos:end="123:23">goto <name pos:start="123:18" pos:end="123:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="129:9" pos:end="129:61"><expr pos:start="129:9" pos:end="129:60"><name pos:start="129:9" pos:end="129:19">hwframe_ctx</name> <operator pos:start="129:21" pos:end="129:21">=</operator> <operator pos:start="129:23" pos:end="129:23">(</operator><name pos:start="129:24" pos:end="129:40">AVHWFramesContext</name><operator pos:start="129:41" pos:end="129:41">*</operator><operator pos:start="129:42" pos:end="129:42">)</operator><name pos:start="129:43" pos:end="129:60"><name pos:start="129:43" pos:end="129:45">ctx</name><operator pos:start="129:46" pos:end="129:47">-&gt;</operator><name pos:start="129:48" pos:end="129:54">hwframe</name><operator pos:start="129:55" pos:end="129:56">-&gt;</operator><name pos:start="129:57" pos:end="129:60">data</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:63"><expr pos:start="133:9" pos:end="133:62"><name pos:start="133:9" pos:end="133:21"><name pos:start="133:9" pos:end="133:11">ctx</name><operator pos:start="133:12" pos:end="133:13">-&gt;</operator><name pos:start="133:14" pos:end="133:21">hwdevice</name></name> <operator pos:start="133:23" pos:end="133:23">=</operator> <call pos:start="133:25" pos:end="133:62"><name pos:start="133:25" pos:end="133:37">av_buffer_ref</name><argument_list pos:start="133:38" pos:end="133:62">(<argument pos:start="133:39" pos:end="133:61"><expr pos:start="133:39" pos:end="133:61"><name pos:start="133:39" pos:end="133:61"><name pos:start="133:39" pos:end="133:49">hwframe_ctx</name><operator pos:start="133:50" pos:end="133:51">-&gt;</operator><name pos:start="133:52" pos:end="133:61">device_ref</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="141:9"><if pos:start="135:9" pos:end="141:9">if <condition pos:start="135:12" pos:end="135:27">(<expr pos:start="135:13" pos:end="135:26"><operator pos:start="135:13" pos:end="135:13">!</operator><name pos:start="135:14" pos:end="135:26"><name pos:start="135:14" pos:end="135:16">ctx</name><operator pos:start="135:17" pos:end="135:18">-&gt;</operator><name pos:start="135:19" pos:end="135:26">hwdevice</name></name></expr>)</condition> <block pos:start="135:29" pos:end="141:9">{<block_content pos:start="137:13" pos:end="139:23">

            <expr_stmt pos:start="137:13" pos:end="137:34"><expr pos:start="137:13" pos:end="137:33"><name pos:start="137:13" pos:end="137:15">ret</name> <operator pos:start="137:17" pos:end="137:17">=</operator> <call pos:start="137:19" pos:end="137:33"><name pos:start="137:19" pos:end="137:25">AVERROR</name><argument_list pos:start="137:26" pos:end="137:33">(<argument pos:start="137:27" pos:end="137:32"><expr pos:start="137:27" pos:end="137:32"><name pos:start="137:27" pos:end="137:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="139:13" pos:end="139:23">goto <name pos:start="139:18" pos:end="139:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="143:7" pos:end="185:5">else <block pos:start="143:12" pos:end="185:5">{<block_content pos:start="145:9" pos:end="183:61">

        <if_stmt pos:start="145:9" pos:end="165:9"><if pos:start="145:9" pos:end="157:9">if <condition pos:start="145:12" pos:end="145:33">(<expr pos:start="145:13" pos:end="145:32"><name pos:start="145:13" pos:end="145:32"><name pos:start="145:13" pos:end="145:17">avctx</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:32">hw_device_ctx</name></name></expr>)</condition> <block pos:start="145:35" pos:end="157:9">{<block_content pos:start="147:13" pos:end="155:13">

            <expr_stmt pos:start="147:13" pos:end="147:64"><expr pos:start="147:13" pos:end="147:63"><name pos:start="147:13" pos:end="147:25"><name pos:start="147:13" pos:end="147:15">ctx</name><operator pos:start="147:16" pos:end="147:17">-&gt;</operator><name pos:start="147:18" pos:end="147:25">hwdevice</name></name> <operator pos:start="147:27" pos:end="147:27">=</operator> <call pos:start="147:29" pos:end="147:63"><name pos:start="147:29" pos:end="147:41">av_buffer_ref</name><argument_list pos:start="147:42" pos:end="147:63">(<argument pos:start="147:43" pos:end="147:62"><expr pos:start="147:43" pos:end="147:62"><name pos:start="147:43" pos:end="147:62"><name pos:start="147:43" pos:end="147:47">avctx</name><operator pos:start="147:48" pos:end="147:49">-&gt;</operator><name pos:start="147:50" pos:end="147:62">hw_device_ctx</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="149:13" pos:end="155:13"><if pos:start="149:13" pos:end="155:13">if <condition pos:start="149:16" pos:end="149:31">(<expr pos:start="149:17" pos:end="149:30"><operator pos:start="149:17" pos:end="149:17">!</operator><name pos:start="149:18" pos:end="149:30"><name pos:start="149:18" pos:end="149:20">ctx</name><operator pos:start="149:21" pos:end="149:22">-&gt;</operator><name pos:start="149:23" pos:end="149:30">hwdevice</name></name></expr>)</condition> <block pos:start="149:33" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:27">

                <expr_stmt pos:start="151:17" pos:end="151:38"><expr pos:start="151:17" pos:end="151:37"><name pos:start="151:17" pos:end="151:19">ret</name> <operator pos:start="151:21" pos:end="151:21">=</operator> <call pos:start="151:23" pos:end="151:37"><name pos:start="151:23" pos:end="151:29">AVERROR</name><argument_list pos:start="151:30" pos:end="151:37">(<argument pos:start="151:31" pos:end="151:36"><expr pos:start="151:31" pos:end="151:36"><name pos:start="151:31" pos:end="151:36">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <goto pos:start="153:17" pos:end="153:27">goto <name pos:start="153:22" pos:end="153:26">error</name>;</goto>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="157:11" pos:end="165:9">else <block pos:start="157:16" pos:end="165:9">{<block_content pos:start="159:13" pos:end="163:27">

            <expr_stmt pos:start="159:13" pos:end="159:102"><expr pos:start="159:13" pos:end="159:101"><name pos:start="159:13" pos:end="159:15">ret</name> <operator pos:start="159:17" pos:end="159:17">=</operator> <call pos:start="159:19" pos:end="159:101"><name pos:start="159:19" pos:end="159:40">av_hwdevice_ctx_create</name><argument_list pos:start="159:41" pos:end="159:101">(<argument pos:start="159:42" pos:end="159:55"><expr pos:start="159:42" pos:end="159:55"><operator pos:start="159:42" pos:end="159:42">&amp;</operator><name pos:start="159:43" pos:end="159:55"><name pos:start="159:43" pos:end="159:45">ctx</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:55">hwdevice</name></name></expr></argument>, <argument pos:start="159:58" pos:end="159:78"><expr pos:start="159:58" pos:end="159:78"><name pos:start="159:58" pos:end="159:78">AV_HWDEVICE_TYPE_CUDA</name></expr></argument>, <argument pos:start="159:81" pos:end="159:91"><expr pos:start="159:81" pos:end="159:91"><name pos:start="159:81" pos:end="159:91"><name pos:start="159:81" pos:end="159:83">ctx</name><operator pos:start="159:84" pos:end="159:85">-&gt;</operator><name pos:start="159:86" pos:end="159:91">cu_gpu</name></name></expr></argument>, <argument pos:start="159:94" pos:end="159:97"><expr pos:start="159:94" pos:end="159:97"><name pos:start="159:94" pos:end="159:97">NULL</name></expr></argument>, <argument pos:start="159:100" pos:end="159:100"><expr pos:start="159:100" pos:end="159:100"><literal type="number" pos:start="159:100" pos:end="159:100">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="163:27"><if pos:start="161:13" pos:end="163:27">if <condition pos:start="161:16" pos:end="161:24">(<expr pos:start="161:17" pos:end="161:23"><name pos:start="161:17" pos:end="161:19">ret</name> <operator pos:start="161:21" pos:end="161:21">&lt;</operator> <literal type="number" pos:start="161:23" pos:end="161:23">0</literal></expr>)</condition><block type="pseudo" pos:start="163:17" pos:end="163:27"><block_content pos:start="163:17" pos:end="163:27">

                <goto pos:start="163:17" pos:end="163:27">goto <name pos:start="163:22" pos:end="163:26">error</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="169:9" pos:end="169:59"><expr pos:start="169:9" pos:end="169:58"><name pos:start="169:9" pos:end="169:20"><name pos:start="169:9" pos:end="169:11">ctx</name><operator pos:start="169:12" pos:end="169:13">-&gt;</operator><name pos:start="169:14" pos:end="169:20">hwframe</name></name> <operator pos:start="169:22" pos:end="169:22">=</operator> <call pos:start="169:24" pos:end="169:58"><name pos:start="169:24" pos:end="169:43">av_hwframe_ctx_alloc</name><argument_list pos:start="169:44" pos:end="169:58">(<argument pos:start="169:45" pos:end="169:57"><expr pos:start="169:45" pos:end="169:57"><name pos:start="169:45" pos:end="169:57"><name pos:start="169:45" pos:end="169:47">ctx</name><operator pos:start="169:48" pos:end="169:49">-&gt;</operator><name pos:start="169:50" pos:end="169:57">hwdevice</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="171:9" pos:end="179:9"><if pos:start="171:9" pos:end="179:9">if <condition pos:start="171:12" pos:end="171:26">(<expr pos:start="171:13" pos:end="171:25"><operator pos:start="171:13" pos:end="171:13">!</operator><name pos:start="171:14" pos:end="171:25"><name pos:start="171:14" pos:end="171:16">ctx</name><operator pos:start="171:17" pos:end="171:18">-&gt;</operator><name pos:start="171:19" pos:end="171:25">hwframe</name></name></expr>)</condition> <block pos:start="171:28" pos:end="179:9">{<block_content pos:start="173:13" pos:end="177:23">

            <expr_stmt pos:start="173:13" pos:end="173:73"><expr pos:start="173:13" pos:end="173:72"><call pos:start="173:13" pos:end="173:72"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="173:72">(<argument pos:start="173:20" pos:end="173:24"><expr pos:start="173:20" pos:end="173:24"><name pos:start="173:20" pos:end="173:24">avctx</name></expr></argument>, <argument pos:start="173:27" pos:end="173:38"><expr pos:start="173:27" pos:end="173:38"><name pos:start="173:27" pos:end="173:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="173:41" pos:end="173:71"><expr pos:start="173:41" pos:end="173:71"><literal type="string" pos:start="173:41" pos:end="173:71">"av_hwframe_ctx_alloc failed\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="175:13" pos:end="175:34"><expr pos:start="175:13" pos:end="175:33"><name pos:start="175:13" pos:end="175:15">ret</name> <operator pos:start="175:17" pos:end="175:17">=</operator> <call pos:start="175:19" pos:end="175:33"><name pos:start="175:19" pos:end="175:25">AVERROR</name><argument_list pos:start="175:26" pos:end="175:33">(<argument pos:start="175:27" pos:end="175:32"><expr pos:start="175:27" pos:end="175:32"><name pos:start="175:27" pos:end="175:32">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="177:13" pos:end="177:23">goto <name pos:start="177:18" pos:end="177:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="183:9" pos:end="183:61"><expr pos:start="183:9" pos:end="183:60"><name pos:start="183:9" pos:end="183:19">hwframe_ctx</name> <operator pos:start="183:21" pos:end="183:21">=</operator> <operator pos:start="183:23" pos:end="183:23">(</operator><name pos:start="183:24" pos:end="183:40">AVHWFramesContext</name><operator pos:start="183:41" pos:end="183:41">*</operator><operator pos:start="183:42" pos:end="183:42">)</operator><name pos:start="183:43" pos:end="183:60"><name pos:start="183:43" pos:end="183:45">ctx</name><operator pos:start="183:46" pos:end="183:47">-&gt;</operator><name pos:start="183:48" pos:end="183:54">hwframe</name><operator pos:start="183:55" pos:end="183:56">-&gt;</operator><name pos:start="183:57" pos:end="183:60">data</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="189:5" pos:end="189:41"><expr pos:start="189:5" pos:end="189:40"><name pos:start="189:5" pos:end="189:14">device_ctx</name> <operator pos:start="189:16" pos:end="189:16">=</operator> <name pos:start="189:18" pos:end="189:40"><name pos:start="189:18" pos:end="189:28">hwframe_ctx</name><operator pos:start="189:29" pos:end="189:30">-&gt;</operator><name pos:start="189:31" pos:end="189:40">device_ctx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="191:5" pos:end="191:37"><expr pos:start="191:5" pos:end="191:36"><name pos:start="191:5" pos:end="191:16">device_hwctx</name> <operator pos:start="191:18" pos:end="191:18">=</operator> <name pos:start="191:20" pos:end="191:36"><name pos:start="191:20" pos:end="191:29">device_ctx</name><operator pos:start="191:30" pos:end="191:31">-&gt;</operator><name pos:start="191:32" pos:end="191:36">hwctx</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="195:5" pos:end="195:38"><expr pos:start="195:5" pos:end="195:37"><name pos:start="195:5" pos:end="195:12">cuda_ctx</name> <operator pos:start="195:14" pos:end="195:14">=</operator> <name pos:start="195:16" pos:end="195:37"><name pos:start="195:16" pos:end="195:27">device_hwctx</name><operator pos:start="195:28" pos:end="195:29">-&gt;</operator><name pos:start="195:30" pos:end="195:37">cuda_ctx</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:48"><expr pos:start="197:5" pos:end="197:47"><name pos:start="197:5" pos:end="197:13"><name pos:start="197:5" pos:end="197:7">ctx</name><operator pos:start="197:8" pos:end="197:9">-&gt;</operator><name pos:start="197:10" pos:end="197:13">cudl</name></name> <operator pos:start="197:15" pos:end="197:15">=</operator> <name pos:start="197:17" pos:end="197:47"><name pos:start="197:17" pos:end="197:28">device_hwctx</name><operator pos:start="197:29" pos:end="197:30">-&gt;</operator><name pos:start="197:31" pos:end="197:38">internal</name><operator pos:start="197:39" pos:end="197:40">-&gt;</operator><name pos:start="197:41" pos:end="197:47">cuda_dl</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="201:5" pos:end="201:59"><expr pos:start="201:5" pos:end="201:58"><call pos:start="201:5" pos:end="201:58"><name pos:start="201:5" pos:end="201:10">memset</name><argument_list pos:start="201:11" pos:end="201:58">(<argument pos:start="201:12" pos:end="201:28"><expr pos:start="201:12" pos:end="201:28"><operator pos:start="201:12" pos:end="201:12">&amp;</operator><name pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:15">ctx</name><operator pos:start="201:16" pos:end="201:17">-&gt;</operator><name pos:start="201:18" pos:end="201:28">cuparseinfo</name></name></expr></argument>, <argument pos:start="201:31" pos:end="201:31"><expr pos:start="201:31" pos:end="201:31"><literal type="number" pos:start="201:31" pos:end="201:31">0</literal></expr></argument>, <argument pos:start="201:34" pos:end="201:57"><expr pos:start="201:34" pos:end="201:57"><sizeof pos:start="201:34" pos:end="201:57">sizeof<argument_list pos:start="201:40" pos:end="201:57">(<argument pos:start="201:41" pos:end="201:56"><expr pos:start="201:41" pos:end="201:56"><name pos:start="201:41" pos:end="201:56"><name pos:start="201:41" pos:end="201:43">ctx</name><operator pos:start="201:44" pos:end="201:45">-&gt;</operator><name pos:start="201:46" pos:end="201:56">cuparseinfo</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="203:5" pos:end="203:59"><expr pos:start="203:5" pos:end="203:58"><call pos:start="203:5" pos:end="203:58"><name pos:start="203:5" pos:end="203:10">memset</name><argument_list pos:start="203:11" pos:end="203:58">(<argument pos:start="203:12" pos:end="203:28"><expr pos:start="203:12" pos:end="203:28"><operator pos:start="203:12" pos:end="203:12">&amp;</operator><name pos:start="203:13" pos:end="203:28"><name pos:start="203:13" pos:end="203:15">ctx</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:28">cuparse_ext</name></name></expr></argument>, <argument pos:start="203:31" pos:end="203:31"><expr pos:start="203:31" pos:end="203:31"><literal type="number" pos:start="203:31" pos:end="203:31">0</literal></expr></argument>, <argument pos:start="203:34" pos:end="203:57"><expr pos:start="203:34" pos:end="203:57"><sizeof pos:start="203:34" pos:end="203:57">sizeof<argument_list pos:start="203:40" pos:end="203:57">(<argument pos:start="203:41" pos:end="203:56"><expr pos:start="203:41" pos:end="203:56"><name pos:start="203:41" pos:end="203:56"><name pos:start="203:41" pos:end="203:43">ctx</name><operator pos:start="203:44" pos:end="203:45">-&gt;</operator><name pos:start="203:46" pos:end="203:56">cuparse_ext</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="205:5" pos:end="205:41"><expr pos:start="205:5" pos:end="205:40"><call pos:start="205:5" pos:end="205:40"><name pos:start="205:5" pos:end="205:10">memset</name><argument_list pos:start="205:11" pos:end="205:40">(<argument pos:start="205:12" pos:end="205:19"><expr pos:start="205:12" pos:end="205:19"><operator pos:start="205:12" pos:end="205:12">&amp;</operator><name pos:start="205:13" pos:end="205:19">seq_pkt</name></expr></argument>, <argument pos:start="205:22" pos:end="205:22"><expr pos:start="205:22" pos:end="205:22"><literal type="number" pos:start="205:22" pos:end="205:22">0</literal></expr></argument>, <argument pos:start="205:25" pos:end="205:39"><expr pos:start="205:25" pos:end="205:39"><sizeof pos:start="205:25" pos:end="205:39">sizeof<argument_list pos:start="205:31" pos:end="205:39">(<argument pos:start="205:32" pos:end="205:38"><expr pos:start="205:32" pos:end="205:38"><name pos:start="205:32" pos:end="205:38">seq_pkt</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="209:5" pos:end="209:55"><expr pos:start="209:5" pos:end="209:54"><name pos:start="209:5" pos:end="209:34"><name pos:start="209:5" pos:end="209:7">ctx</name><operator pos:start="209:8" pos:end="209:9">-&gt;</operator><name pos:start="209:10" pos:end="209:20">cuparseinfo</name><operator pos:start="209:21" pos:end="209:21">.</operator><name pos:start="209:22" pos:end="209:34">pExtVideoInfo</name></name> <operator pos:start="209:36" pos:end="209:36">=</operator> <operator pos:start="209:38" pos:end="209:38">&amp;</operator><name pos:start="209:39" pos:end="209:54"><name pos:start="209:39" pos:end="209:41">ctx</name><operator pos:start="209:42" pos:end="209:43">-&gt;</operator><name pos:start="209:44" pos:end="209:54">cuparse_ext</name></name></expr>;</expr_stmt>



    <switch pos:start="213:5" pos:end="311:5">switch <condition pos:start="213:12" pos:end="213:29">(<expr pos:start="213:13" pos:end="213:28"><name pos:start="213:13" pos:end="213:28"><name pos:start="213:13" pos:end="213:17">avctx</name><operator pos:start="213:18" pos:end="213:19">-&gt;</operator><name pos:start="213:20" pos:end="213:24">codec</name><operator pos:start="213:25" pos:end="213:26">-&gt;</operator><name pos:start="213:27" pos:end="213:28">id</name></name></expr>)</condition> <block pos:start="213:31" pos:end="311:5">{<block_content pos:start="217:5" pos:end="309:27">

<cpp:if pos:start="215:1" pos:end="215:29">#<cpp:directive pos:start="215:2" pos:end="215:3">if</cpp:directive> <expr pos:start="215:5" pos:end="215:29"><name pos:start="215:5" pos:end="215:29">CONFIG_H264_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="217:5" pos:end="217:26">case <expr pos:start="217:10" pos:end="217:25"><name pos:start="217:10" pos:end="217:25">AV_CODEC_ID_H264</name></expr>:</case>

        <expr_stmt pos:start="219:9" pos:end="219:57"><expr pos:start="219:9" pos:end="219:56"><name pos:start="219:9" pos:end="219:34"><name pos:start="219:9" pos:end="219:11">ctx</name><operator pos:start="219:12" pos:end="219:13">-&gt;</operator><name pos:start="219:14" pos:end="219:24">cuparseinfo</name><operator pos:start="219:25" pos:end="219:25">.</operator><name pos:start="219:26" pos:end="219:34">CodecType</name></name> <operator pos:start="219:36" pos:end="219:36">=</operator> <name pos:start="219:38" pos:end="219:56">cudaVideoCodec_H264</name></expr>;</expr_stmt>

        <break pos:start="221:9" pos:end="226:0">break;</break>

<cpp:endif pos:start="223:1" pos:end="223:6">#<cpp:directive pos:start="223:2" pos:end="223:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="225:1" pos:end="225:29">#<cpp:directive pos:start="225:2" pos:end="225:3">if</cpp:directive> <expr pos:start="225:5" pos:end="225:29"><name pos:start="225:5" pos:end="225:29">CONFIG_HEVC_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="227:5" pos:end="227:26">case <expr pos:start="227:10" pos:end="227:25"><name pos:start="227:10" pos:end="227:25">AV_CODEC_ID_HEVC</name></expr>:</case>

        <expr_stmt pos:start="229:9" pos:end="229:57"><expr pos:start="229:9" pos:end="229:56"><name pos:start="229:9" pos:end="229:34"><name pos:start="229:9" pos:end="229:11">ctx</name><operator pos:start="229:12" pos:end="229:13">-&gt;</operator><name pos:start="229:14" pos:end="229:24">cuparseinfo</name><operator pos:start="229:25" pos:end="229:25">.</operator><name pos:start="229:26" pos:end="229:34">CodecType</name></name> <operator pos:start="229:36" pos:end="229:36">=</operator> <name pos:start="229:38" pos:end="229:56">cudaVideoCodec_HEVC</name></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="236:0">break;</break>

<cpp:endif pos:start="233:1" pos:end="233:6">#<cpp:directive pos:start="233:2" pos:end="233:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="235:1" pos:end="235:30">#<cpp:directive pos:start="235:2" pos:end="235:3">if</cpp:directive> <expr pos:start="235:5" pos:end="235:30"><name pos:start="235:5" pos:end="235:30">CONFIG_MJPEG_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="237:5" pos:end="237:27">case <expr pos:start="237:10" pos:end="237:26"><name pos:start="237:10" pos:end="237:26">AV_CODEC_ID_MJPEG</name></expr>:</case>

        <expr_stmt pos:start="239:9" pos:end="239:57"><expr pos:start="239:9" pos:end="239:56"><name pos:start="239:9" pos:end="239:34"><name pos:start="239:9" pos:end="239:11">ctx</name><operator pos:start="239:12" pos:end="239:13">-&gt;</operator><name pos:start="239:14" pos:end="239:24">cuparseinfo</name><operator pos:start="239:25" pos:end="239:25">.</operator><name pos:start="239:26" pos:end="239:34">CodecType</name></name> <operator pos:start="239:36" pos:end="239:36">=</operator> <name pos:start="239:38" pos:end="239:56">cudaVideoCodec_JPEG</name></expr>;</expr_stmt>

        <break pos:start="241:9" pos:end="246:0">break;</break>

<cpp:endif pos:start="243:1" pos:end="243:6">#<cpp:directive pos:start="243:2" pos:end="243:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="245:1" pos:end="245:30">#<cpp:directive pos:start="245:2" pos:end="245:3">if</cpp:directive> <expr pos:start="245:5" pos:end="245:30"><name pos:start="245:5" pos:end="245:30">CONFIG_MPEG1_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="247:5" pos:end="247:32">case <expr pos:start="247:10" pos:end="247:31"><name pos:start="247:10" pos:end="247:31">AV_CODEC_ID_MPEG1VIDEO</name></expr>:</case>

        <expr_stmt pos:start="249:9" pos:end="249:58"><expr pos:start="249:9" pos:end="249:57"><name pos:start="249:9" pos:end="249:34"><name pos:start="249:9" pos:end="249:11">ctx</name><operator pos:start="249:12" pos:end="249:13">-&gt;</operator><name pos:start="249:14" pos:end="249:24">cuparseinfo</name><operator pos:start="249:25" pos:end="249:25">.</operator><name pos:start="249:26" pos:end="249:34">CodecType</name></name> <operator pos:start="249:36" pos:end="249:36">=</operator> <name pos:start="249:38" pos:end="249:57">cudaVideoCodec_MPEG1</name></expr>;</expr_stmt>

        <break pos:start="251:9" pos:end="256:0">break;</break>

<cpp:endif pos:start="253:1" pos:end="253:6">#<cpp:directive pos:start="253:2" pos:end="253:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="255:1" pos:end="255:30">#<cpp:directive pos:start="255:2" pos:end="255:3">if</cpp:directive> <expr pos:start="255:5" pos:end="255:30"><name pos:start="255:5" pos:end="255:30">CONFIG_MPEG2_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="257:5" pos:end="257:32">case <expr pos:start="257:10" pos:end="257:31"><name pos:start="257:10" pos:end="257:31">AV_CODEC_ID_MPEG2VIDEO</name></expr>:</case>

        <expr_stmt pos:start="259:9" pos:end="259:58"><expr pos:start="259:9" pos:end="259:57"><name pos:start="259:9" pos:end="259:34"><name pos:start="259:9" pos:end="259:11">ctx</name><operator pos:start="259:12" pos:end="259:13">-&gt;</operator><name pos:start="259:14" pos:end="259:24">cuparseinfo</name><operator pos:start="259:25" pos:end="259:25">.</operator><name pos:start="259:26" pos:end="259:34">CodecType</name></name> <operator pos:start="259:36" pos:end="259:36">=</operator> <name pos:start="259:38" pos:end="259:57">cudaVideoCodec_MPEG2</name></expr>;</expr_stmt>

        <break pos:start="261:9" pos:end="266:0">break;</break>

<cpp:endif pos:start="263:1" pos:end="263:6">#<cpp:directive pos:start="263:2" pos:end="263:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="265:1" pos:end="265:30">#<cpp:directive pos:start="265:2" pos:end="265:3">if</cpp:directive> <expr pos:start="265:5" pos:end="265:30"><name pos:start="265:5" pos:end="265:30">CONFIG_MPEG4_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="267:5" pos:end="267:27">case <expr pos:start="267:10" pos:end="267:26"><name pos:start="267:10" pos:end="267:26">AV_CODEC_ID_MPEG4</name></expr>:</case>

        <expr_stmt pos:start="269:9" pos:end="269:58"><expr pos:start="269:9" pos:end="269:57"><name pos:start="269:9" pos:end="269:34"><name pos:start="269:9" pos:end="269:11">ctx</name><operator pos:start="269:12" pos:end="269:13">-&gt;</operator><name pos:start="269:14" pos:end="269:24">cuparseinfo</name><operator pos:start="269:25" pos:end="269:25">.</operator><name pos:start="269:26" pos:end="269:34">CodecType</name></name> <operator pos:start="269:36" pos:end="269:36">=</operator> <name pos:start="269:38" pos:end="269:57">cudaVideoCodec_MPEG4</name></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="276:0">break;</break>

<cpp:endif pos:start="273:1" pos:end="273:6">#<cpp:directive pos:start="273:2" pos:end="273:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="275:1" pos:end="275:28">#<cpp:directive pos:start="275:2" pos:end="275:3">if</cpp:directive> <expr pos:start="275:5" pos:end="275:28"><name pos:start="275:5" pos:end="275:28">CONFIG_VP8_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="277:5" pos:end="277:25">case <expr pos:start="277:10" pos:end="277:24"><name pos:start="277:10" pos:end="277:24">AV_CODEC_ID_VP8</name></expr>:</case>

        <expr_stmt pos:start="279:9" pos:end="279:56"><expr pos:start="279:9" pos:end="279:55"><name pos:start="279:9" pos:end="279:34"><name pos:start="279:9" pos:end="279:11">ctx</name><operator pos:start="279:12" pos:end="279:13">-&gt;</operator><name pos:start="279:14" pos:end="279:24">cuparseinfo</name><operator pos:start="279:25" pos:end="279:25">.</operator><name pos:start="279:26" pos:end="279:34">CodecType</name></name> <operator pos:start="279:36" pos:end="279:36">=</operator> <name pos:start="279:38" pos:end="279:55">cudaVideoCodec_VP8</name></expr>;</expr_stmt>

        <break pos:start="281:9" pos:end="286:0">break;</break>

<cpp:endif pos:start="283:1" pos:end="283:6">#<cpp:directive pos:start="283:2" pos:end="283:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="285:1" pos:end="285:28">#<cpp:directive pos:start="285:2" pos:end="285:3">if</cpp:directive> <expr pos:start="285:5" pos:end="285:28"><name pos:start="285:5" pos:end="285:28">CONFIG_VP9_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="287:5" pos:end="287:25">case <expr pos:start="287:10" pos:end="287:24"><name pos:start="287:10" pos:end="287:24">AV_CODEC_ID_VP9</name></expr>:</case>

        <expr_stmt pos:start="289:9" pos:end="289:56"><expr pos:start="289:9" pos:end="289:55"><name pos:start="289:9" pos:end="289:34"><name pos:start="289:9" pos:end="289:11">ctx</name><operator pos:start="289:12" pos:end="289:13">-&gt;</operator><name pos:start="289:14" pos:end="289:24">cuparseinfo</name><operator pos:start="289:25" pos:end="289:25">.</operator><name pos:start="289:26" pos:end="289:34">CodecType</name></name> <operator pos:start="289:36" pos:end="289:36">=</operator> <name pos:start="289:38" pos:end="289:55">cudaVideoCodec_VP9</name></expr>;</expr_stmt>

        <break pos:start="291:9" pos:end="296:0">break;</break>

<cpp:endif pos:start="293:1" pos:end="293:6">#<cpp:directive pos:start="293:2" pos:end="293:6">endif</cpp:directive></cpp:endif>

<cpp:if pos:start="295:1" pos:end="295:28">#<cpp:directive pos:start="295:2" pos:end="295:3">if</cpp:directive> <expr pos:start="295:5" pos:end="295:28"><name pos:start="295:5" pos:end="295:28">CONFIG_VC1_CUVID_DECODER</name></expr></cpp:if>

    <case pos:start="297:5" pos:end="297:25">case <expr pos:start="297:10" pos:end="297:24"><name pos:start="297:10" pos:end="297:24">AV_CODEC_ID_VC1</name></expr>:</case>

        <expr_stmt pos:start="299:9" pos:end="299:56"><expr pos:start="299:9" pos:end="299:55"><name pos:start="299:9" pos:end="299:34"><name pos:start="299:9" pos:end="299:11">ctx</name><operator pos:start="299:12" pos:end="299:13">-&gt;</operator><name pos:start="299:14" pos:end="299:24">cuparseinfo</name><operator pos:start="299:25" pos:end="299:25">.</operator><name pos:start="299:26" pos:end="299:34">CodecType</name></name> <operator pos:start="299:36" pos:end="299:36">=</operator> <name pos:start="299:38" pos:end="299:55">cudaVideoCodec_VC1</name></expr>;</expr_stmt>

        <break pos:start="301:9" pos:end="304:0">break;</break>

<cpp:endif pos:start="303:1" pos:end="303:6">#<cpp:directive pos:start="303:2" pos:end="303:6">endif</cpp:directive></cpp:endif>

    <default pos:start="305:5" pos:end="305:12">default:</default>

        <expr_stmt pos:start="307:9" pos:end="307:62"><expr pos:start="307:9" pos:end="307:61"><call pos:start="307:9" pos:end="307:61"><name pos:start="307:9" pos:end="307:14">av_log</name><argument_list pos:start="307:15" pos:end="307:61">(<argument pos:start="307:16" pos:end="307:20"><expr pos:start="307:16" pos:end="307:20"><name pos:start="307:16" pos:end="307:20">avctx</name></expr></argument>, <argument pos:start="307:23" pos:end="307:34"><expr pos:start="307:23" pos:end="307:34"><name pos:start="307:23" pos:end="307:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="307:37" pos:end="307:60"><expr pos:start="307:37" pos:end="307:60"><literal type="string" pos:start="307:37" pos:end="307:60">"Invalid CUVID codec!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="309:9" pos:end="309:27">return <expr pos:start="309:16" pos:end="309:26"><name pos:start="309:16" pos:end="309:26">AVERROR_BUG</name></expr>;</return>

    </block_content>}</block></switch>



    <if_stmt pos:start="315:5" pos:end="369:5"><if pos:start="315:5" pos:end="359:5">if <condition pos:start="315:8" pos:end="315:85">(<expr pos:start="315:9" pos:end="315:84"><name pos:start="315:9" pos:end="315:24"><name pos:start="315:9" pos:end="315:13">avctx</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:20">codec</name><operator pos:start="315:21" pos:end="315:22">-&gt;</operator><name pos:start="315:23" pos:end="315:24">id</name></name> <operator pos:start="315:26" pos:end="315:27">==</operator> <name pos:start="315:29" pos:end="315:44">AV_CODEC_ID_H264</name> <operator pos:start="315:46" pos:end="315:47">||</operator> <name pos:start="315:49" pos:end="315:64"><name pos:start="315:49" pos:end="315:53">avctx</name><operator pos:start="315:54" pos:end="315:55">-&gt;</operator><name pos:start="315:56" pos:end="315:60">codec</name><operator pos:start="315:61" pos:end="315:62">-&gt;</operator><name pos:start="315:63" pos:end="315:64">id</name></name> <operator pos:start="315:66" pos:end="315:67">==</operator> <name pos:start="315:69" pos:end="315:84">AV_CODEC_ID_HEVC</name></expr>)</condition> <block pos:start="315:87" pos:end="359:5">{<block_content pos:start="317:9" pos:end="357:99">

        <if_stmt pos:start="317:9" pos:end="323:57"><if pos:start="317:9" pos:end="319:57">if <condition pos:start="317:12" pos:end="317:49">(<expr pos:start="317:13" pos:end="317:48"><name pos:start="317:13" pos:end="317:28"><name pos:start="317:13" pos:end="317:17">avctx</name><operator pos:start="317:18" pos:end="317:19">-&gt;</operator><name pos:start="317:20" pos:end="317:24">codec</name><operator pos:start="317:25" pos:end="317:26">-&gt;</operator><name pos:start="317:27" pos:end="317:28">id</name></name> <operator pos:start="317:30" pos:end="317:31">==</operator> <name pos:start="317:33" pos:end="317:48">AV_CODEC_ID_H264</name></expr>)</condition><block type="pseudo" pos:start="319:13" pos:end="319:57"><block_content pos:start="319:13" pos:end="319:57">

            <expr_stmt pos:start="319:13" pos:end="319:57"><expr pos:start="319:13" pos:end="319:56"><name pos:start="319:13" pos:end="319:15">bsf</name> <operator pos:start="319:17" pos:end="319:17">=</operator> <call pos:start="319:19" pos:end="319:56"><name pos:start="319:19" pos:end="319:36">av_bsf_get_by_name</name><argument_list pos:start="319:37" pos:end="319:56">(<argument pos:start="319:38" pos:end="319:55"><expr pos:start="319:38" pos:end="319:55"><literal type="string" pos:start="319:38" pos:end="319:55">"h264_mp4toannexb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="321:9" pos:end="323:57">else<block type="pseudo" pos:start="323:13" pos:end="323:57"><block_content pos:start="323:13" pos:end="323:57">

            <expr_stmt pos:start="323:13" pos:end="323:57"><expr pos:start="323:13" pos:end="323:56"><name pos:start="323:13" pos:end="323:15">bsf</name> <operator pos:start="323:17" pos:end="323:17">=</operator> <call pos:start="323:19" pos:end="323:56"><name pos:start="323:19" pos:end="323:36">av_bsf_get_by_name</name><argument_list pos:start="323:37" pos:end="323:56">(<argument pos:start="323:38" pos:end="323:55"><expr pos:start="323:38" pos:end="323:55"><literal type="string" pos:start="323:38" pos:end="323:55">"hevc_mp4toannexb"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <if_stmt pos:start="327:9" pos:end="333:9"><if pos:start="327:9" pos:end="333:9">if <condition pos:start="327:12" pos:end="327:17">(<expr pos:start="327:13" pos:end="327:16"><operator pos:start="327:13" pos:end="327:13">!</operator><name pos:start="327:14" pos:end="327:16">bsf</name></expr>)</condition> <block pos:start="327:19" pos:end="333:9">{<block_content pos:start="329:13" pos:end="331:23">

            <expr_stmt pos:start="329:13" pos:end="329:40"><expr pos:start="329:13" pos:end="329:39"><name pos:start="329:13" pos:end="329:15">ret</name> <operator pos:start="329:17" pos:end="329:17">=</operator> <name pos:start="329:19" pos:end="329:39">AVERROR_BSF_NOT_FOUND</name></expr>;</expr_stmt>

            <goto pos:start="331:13" pos:end="331:23">goto <name pos:start="331:18" pos:end="331:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="335:9" pos:end="339:9"><if pos:start="335:9" pos:end="339:9">if <condition pos:start="335:12" pos:end="335:47">(<expr pos:start="335:13" pos:end="335:46"><name pos:start="335:13" pos:end="335:15">ret</name> <operator pos:start="335:17" pos:end="335:17">=</operator> <call pos:start="335:19" pos:end="335:46"><name pos:start="335:19" pos:end="335:30">av_bsf_alloc</name><argument_list pos:start="335:31" pos:end="335:46">(<argument pos:start="335:32" pos:end="335:34"><expr pos:start="335:32" pos:end="335:34"><name pos:start="335:32" pos:end="335:34">bsf</name></expr></argument>, <argument pos:start="335:37" pos:end="335:45"><expr pos:start="335:37" pos:end="335:45"><operator pos:start="335:37" pos:end="335:37">&amp;</operator><name pos:start="335:38" pos:end="335:45"><name pos:start="335:38" pos:end="335:40">ctx</name><operator pos:start="335:41" pos:end="335:42">-&gt;</operator><name pos:start="335:43" pos:end="335:45">bsf</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="335:49" pos:end="339:9">{<block_content pos:start="337:13" pos:end="337:23">

            <goto pos:start="337:13" pos:end="337:23">goto <name pos:start="337:18" pos:end="337:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="341:9" pos:end="347:9"><if pos:start="341:9" pos:end="347:9">if <condition pos:start="341:12" pos:end="341:122">(<expr pos:start="341:13" pos:end="341:121"><operator pos:start="341:13" pos:end="341:13">(</operator><operator pos:start="341:14" pos:end="341:14">(</operator><name pos:start="341:15" pos:end="341:17">ret</name> <operator pos:start="341:19" pos:end="341:19">=</operator> <call pos:start="341:21" pos:end="341:76"><name pos:start="341:21" pos:end="341:51">avcodec_parameters_from_context</name><argument_list pos:start="341:52" pos:end="341:76">(<argument pos:start="341:53" pos:end="341:68"><expr pos:start="341:53" pos:end="341:68"><name pos:start="341:53" pos:end="341:68"><name pos:start="341:53" pos:end="341:55">ctx</name><operator pos:start="341:56" pos:end="341:57">-&gt;</operator><name pos:start="341:58" pos:end="341:60">bsf</name><operator pos:start="341:61" pos:end="341:62">-&gt;</operator><name pos:start="341:63" pos:end="341:68">par_in</name></name></expr></argument>, <argument pos:start="341:71" pos:end="341:75"><expr pos:start="341:71" pos:end="341:75"><name pos:start="341:71" pos:end="341:75">avctx</name></expr></argument>)</argument_list></call><operator pos:start="341:77" pos:end="341:77">)</operator> <operator pos:start="341:79" pos:end="341:79">&lt;</operator> <literal type="number" pos:start="341:81" pos:end="341:81">0</literal><operator pos:start="341:82" pos:end="341:82">)</operator> <operator pos:start="341:84" pos:end="341:85">||</operator> <operator pos:start="341:87" pos:end="341:87">(</operator><operator pos:start="341:88" pos:end="341:88">(</operator><name pos:start="341:89" pos:end="341:91">ret</name> <operator pos:start="341:93" pos:end="341:93">=</operator> <call pos:start="341:95" pos:end="341:115"><name pos:start="341:95" pos:end="341:105">av_bsf_init</name><argument_list pos:start="341:106" pos:end="341:115">(<argument pos:start="341:107" pos:end="341:114"><expr pos:start="341:107" pos:end="341:114"><name pos:start="341:107" pos:end="341:114"><name pos:start="341:107" pos:end="341:109">ctx</name><operator pos:start="341:110" pos:end="341:111">-&gt;</operator><name pos:start="341:112" pos:end="341:114">bsf</name></name></expr></argument>)</argument_list></call><operator pos:start="341:116" pos:end="341:116">)</operator> <operator pos:start="341:118" pos:end="341:118">&lt;</operator> <literal type="number" pos:start="341:120" pos:end="341:120">0</literal><operator pos:start="341:121" pos:end="341:121">)</operator></expr>)</condition> <block pos:start="341:124" pos:end="347:9">{<block_content pos:start="343:13" pos:end="345:23">

            <expr_stmt pos:start="343:13" pos:end="343:35"><expr pos:start="343:13" pos:end="343:34"><call pos:start="343:13" pos:end="343:34"><name pos:start="343:13" pos:end="343:23">av_bsf_free</name><argument_list pos:start="343:24" pos:end="343:34">(<argument pos:start="343:25" pos:end="343:33"><expr pos:start="343:25" pos:end="343:33"><operator pos:start="343:25" pos:end="343:25">&amp;</operator><name pos:start="343:26" pos:end="343:33"><name pos:start="343:26" pos:end="343:28">ctx</name><operator pos:start="343:29" pos:end="343:30">-&gt;</operator><name pos:start="343:31" pos:end="343:33">bsf</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="345:13" pos:end="345:23">goto <name pos:start="345:18" pos:end="345:22">error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="351:9" pos:end="351:87"><expr pos:start="351:9" pos:end="351:86"><name pos:start="351:9" pos:end="351:50"><name pos:start="351:9" pos:end="351:11">ctx</name><operator pos:start="351:12" pos:end="351:13">-&gt;</operator><name pos:start="351:14" pos:end="351:24">cuparse_ext</name><operator pos:start="351:25" pos:end="351:25">.</operator><name pos:start="351:26" pos:end="351:31">format</name><operator pos:start="351:32" pos:end="351:32">.</operator><name pos:start="351:33" pos:end="351:50">seqhdr_data_length</name></name> <operator pos:start="351:52" pos:end="351:52">=</operator> <name pos:start="351:54" pos:end="351:86"><name pos:start="351:54" pos:end="351:56">ctx</name><operator pos:start="351:57" pos:end="351:58">-&gt;</operator><name pos:start="351:59" pos:end="351:61">bsf</name><operator pos:start="351:62" pos:end="351:63">-&gt;</operator><name pos:start="351:64" pos:end="351:70">par_out</name><operator pos:start="351:71" pos:end="351:72">-&gt;</operator><name pos:start="351:73" pos:end="351:86">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="353:9" pos:end="357:99"><expr pos:start="353:9" pos:end="357:98"><call pos:start="353:9" pos:end="357:98"><name pos:start="353:9" pos:end="353:14">memcpy</name><argument_list pos:start="353:15" pos:end="357:98">(<argument pos:start="353:16" pos:end="353:47"><expr pos:start="353:16" pos:end="353:47"><name pos:start="353:16" pos:end="353:47"><name pos:start="353:16" pos:end="353:18">ctx</name><operator pos:start="353:19" pos:end="353:20">-&gt;</operator><name pos:start="353:21" pos:end="353:31">cuparse_ext</name><operator pos:start="353:32" pos:end="353:32">.</operator><name pos:start="353:33" pos:end="353:47">raw_seqhdr_data</name></name></expr></argument>,

               <argument pos:start="355:16" pos:end="355:43"><expr pos:start="355:16" pos:end="355:43"><name pos:start="355:16" pos:end="355:43"><name pos:start="355:16" pos:end="355:18">ctx</name><operator pos:start="355:19" pos:end="355:20">-&gt;</operator><name pos:start="355:21" pos:end="355:23">bsf</name><operator pos:start="355:24" pos:end="355:25">-&gt;</operator><name pos:start="355:26" pos:end="355:32">par_out</name><operator pos:start="355:33" pos:end="355:34">-&gt;</operator><name pos:start="355:35" pos:end="355:43">extradata</name></name></expr></argument>,

               <argument pos:start="357:16" pos:end="357:97"><expr pos:start="357:16" pos:end="357:97"><call pos:start="357:16" pos:end="357:97"><name pos:start="357:16" pos:end="357:20">FFMIN</name><argument_list pos:start="357:21" pos:end="357:97">(<argument pos:start="357:22" pos:end="357:61"><expr pos:start="357:22" pos:end="357:61"><sizeof pos:start="357:22" pos:end="357:61">sizeof<argument_list pos:start="357:28" pos:end="357:61">(<argument pos:start="357:29" pos:end="357:60"><expr pos:start="357:29" pos:end="357:60"><name pos:start="357:29" pos:end="357:60"><name pos:start="357:29" pos:end="357:31">ctx</name><operator pos:start="357:32" pos:end="357:33">-&gt;</operator><name pos:start="357:34" pos:end="357:44">cuparse_ext</name><operator pos:start="357:45" pos:end="357:45">.</operator><name pos:start="357:46" pos:end="357:60">raw_seqhdr_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="357:64" pos:end="357:96"><expr pos:start="357:64" pos:end="357:96"><name pos:start="357:64" pos:end="357:96"><name pos:start="357:64" pos:end="357:66">ctx</name><operator pos:start="357:67" pos:end="357:68">-&gt;</operator><name pos:start="357:69" pos:end="357:71">bsf</name><operator pos:start="357:72" pos:end="357:73">-&gt;</operator><name pos:start="357:74" pos:end="357:80">par_out</name><operator pos:start="357:81" pos:end="357:82">-&gt;</operator><name pos:start="357:83" pos:end="357:96">extradata_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="359:7" pos:end="369:5">else if <condition pos:start="359:15" pos:end="359:41">(<expr pos:start="359:16" pos:end="359:40"><name pos:start="359:16" pos:end="359:36"><name pos:start="359:16" pos:end="359:20">avctx</name><operator pos:start="359:21" pos:end="359:22">-&gt;</operator><name pos:start="359:23" pos:end="359:36">extradata_size</name></name> <operator pos:start="359:38" pos:end="359:38">&gt;</operator> <literal type="number" pos:start="359:40" pos:end="359:40">0</literal></expr>)</condition> <block pos:start="359:43" pos:end="369:5">{<block_content pos:start="361:9" pos:end="367:87">

        <expr_stmt pos:start="361:9" pos:end="361:75"><expr pos:start="361:9" pos:end="361:74"><name pos:start="361:9" pos:end="361:50"><name pos:start="361:9" pos:end="361:11">ctx</name><operator pos:start="361:12" pos:end="361:13">-&gt;</operator><name pos:start="361:14" pos:end="361:24">cuparse_ext</name><operator pos:start="361:25" pos:end="361:25">.</operator><name pos:start="361:26" pos:end="361:31">format</name><operator pos:start="361:32" pos:end="361:32">.</operator><name pos:start="361:33" pos:end="361:50">seqhdr_data_length</name></name> <operator pos:start="361:52" pos:end="361:52">=</operator> <name pos:start="361:54" pos:end="361:74"><name pos:start="361:54" pos:end="361:58">avctx</name><operator pos:start="361:59" pos:end="361:60">-&gt;</operator><name pos:start="361:61" pos:end="361:74">extradata_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="367:87"><expr pos:start="363:9" pos:end="367:86"><call pos:start="363:9" pos:end="367:86"><name pos:start="363:9" pos:end="363:14">memcpy</name><argument_list pos:start="363:15" pos:end="367:86">(<argument pos:start="363:16" pos:end="363:47"><expr pos:start="363:16" pos:end="363:47"><name pos:start="363:16" pos:end="363:47"><name pos:start="363:16" pos:end="363:18">ctx</name><operator pos:start="363:19" pos:end="363:20">-&gt;</operator><name pos:start="363:21" pos:end="363:31">cuparse_ext</name><operator pos:start="363:32" pos:end="363:32">.</operator><name pos:start="363:33" pos:end="363:47">raw_seqhdr_data</name></name></expr></argument>,

               <argument pos:start="365:16" pos:end="365:31"><expr pos:start="365:16" pos:end="365:31"><name pos:start="365:16" pos:end="365:31"><name pos:start="365:16" pos:end="365:20">avctx</name><operator pos:start="365:21" pos:end="365:22">-&gt;</operator><name pos:start="365:23" pos:end="365:31">extradata</name></name></expr></argument>,

               <argument pos:start="367:16" pos:end="367:85"><expr pos:start="367:16" pos:end="367:85"><call pos:start="367:16" pos:end="367:85"><name pos:start="367:16" pos:end="367:20">FFMIN</name><argument_list pos:start="367:21" pos:end="367:85">(<argument pos:start="367:22" pos:end="367:61"><expr pos:start="367:22" pos:end="367:61"><sizeof pos:start="367:22" pos:end="367:61">sizeof<argument_list pos:start="367:28" pos:end="367:61">(<argument pos:start="367:29" pos:end="367:60"><expr pos:start="367:29" pos:end="367:60"><name pos:start="367:29" pos:end="367:60"><name pos:start="367:29" pos:end="367:31">ctx</name><operator pos:start="367:32" pos:end="367:33">-&gt;</operator><name pos:start="367:34" pos:end="367:44">cuparse_ext</name><operator pos:start="367:45" pos:end="367:45">.</operator><name pos:start="367:46" pos:end="367:60">raw_seqhdr_data</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="367:64" pos:end="367:84"><expr pos:start="367:64" pos:end="367:84"><name pos:start="367:64" pos:end="367:84"><name pos:start="367:64" pos:end="367:68">avctx</name><operator pos:start="367:69" pos:end="367:70">-&gt;</operator><name pos:start="367:71" pos:end="367:84">extradata_size</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="373:5" pos:end="373:63"><expr pos:start="373:5" pos:end="373:62"><name pos:start="373:5" pos:end="373:43"><name pos:start="373:5" pos:end="373:7">ctx</name><operator pos:start="373:8" pos:end="373:9">-&gt;</operator><name pos:start="373:10" pos:end="373:20">cuparseinfo</name><operator pos:start="373:21" pos:end="373:21">.</operator><name pos:start="373:22" pos:end="373:43">ulMaxNumDecodeSurfaces</name></name> <operator pos:start="373:45" pos:end="373:45">=</operator> <name pos:start="373:47" pos:end="373:62"><name pos:start="373:47" pos:end="373:49">ctx</name><operator pos:start="373:50" pos:end="373:51">-&gt;</operator><name pos:start="373:52" pos:end="373:62">nb_surfaces</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="375:5" pos:end="375:43"><expr pos:start="375:5" pos:end="375:42"><name pos:start="375:5" pos:end="375:38"><name pos:start="375:5" pos:end="375:7">ctx</name><operator pos:start="375:8" pos:end="375:9">-&gt;</operator><name pos:start="375:10" pos:end="375:20">cuparseinfo</name><operator pos:start="375:21" pos:end="375:21">.</operator><name pos:start="375:22" pos:end="375:38">ulMaxDisplayDelay</name></name> <operator pos:start="375:40" pos:end="375:40">=</operator> <literal type="number" pos:start="375:42" pos:end="375:42">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="377:5" pos:end="377:39"><expr pos:start="377:5" pos:end="377:38"><name pos:start="377:5" pos:end="377:30"><name pos:start="377:5" pos:end="377:7">ctx</name><operator pos:start="377:8" pos:end="377:9">-&gt;</operator><name pos:start="377:10" pos:end="377:20">cuparseinfo</name><operator pos:start="377:21" pos:end="377:21">.</operator><name pos:start="377:22" pos:end="377:30">pUserData</name></name> <operator pos:start="377:32" pos:end="377:32">=</operator> <name pos:start="377:34" pos:end="377:38">avctx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="379:5" pos:end="379:71"><expr pos:start="379:5" pos:end="379:70"><name pos:start="379:5" pos:end="379:40"><name pos:start="379:5" pos:end="379:7">ctx</name><operator pos:start="379:8" pos:end="379:9">-&gt;</operator><name pos:start="379:10" pos:end="379:20">cuparseinfo</name><operator pos:start="379:21" pos:end="379:21">.</operator><name pos:start="379:22" pos:end="379:40">pfnSequenceCallback</name></name> <operator pos:start="379:42" pos:end="379:42">=</operator> <name pos:start="379:44" pos:end="379:70">cuvid_handle_video_sequence</name></expr>;</expr_stmt>

    <expr_stmt pos:start="381:5" pos:end="381:68"><expr pos:start="381:5" pos:end="381:67"><name pos:start="381:5" pos:end="381:37"><name pos:start="381:5" pos:end="381:7">ctx</name><operator pos:start="381:8" pos:end="381:9">-&gt;</operator><name pos:start="381:10" pos:end="381:20">cuparseinfo</name><operator pos:start="381:21" pos:end="381:21">.</operator><name pos:start="381:22" pos:end="381:37">pfnDecodePicture</name></name> <operator pos:start="381:39" pos:end="381:39">=</operator> <name pos:start="381:41" pos:end="381:67">cuvid_handle_picture_decode</name></expr>;</expr_stmt>

    <expr_stmt pos:start="383:5" pos:end="383:70"><expr pos:start="383:5" pos:end="383:69"><name pos:start="383:5" pos:end="383:38"><name pos:start="383:5" pos:end="383:7">ctx</name><operator pos:start="383:8" pos:end="383:9">-&gt;</operator><name pos:start="383:10" pos:end="383:20">cuparseinfo</name><operator pos:start="383:21" pos:end="383:21">.</operator><name pos:start="383:22" pos:end="383:38">pfnDisplayPicture</name></name> <operator pos:start="383:40" pos:end="383:40">=</operator> <name pos:start="383:42" pos:end="383:69">cuvid_handle_picture_display</name></expr>;</expr_stmt>



    <expr_stmt pos:start="387:5" pos:end="387:58"><expr pos:start="387:5" pos:end="387:57"><name pos:start="387:5" pos:end="387:7">ret</name> <operator pos:start="387:9" pos:end="387:9">=</operator> <call pos:start="387:11" pos:end="387:57"><name pos:start="387:11" pos:end="387:18">CHECK_CU</name><argument_list pos:start="387:19" pos:end="387:57">(<argument pos:start="387:20" pos:end="387:56"><expr pos:start="387:20" pos:end="387:56"><call pos:start="387:20" pos:end="387:56"><name pos:start="387:20" pos:end="387:46"><name pos:start="387:20" pos:end="387:22">ctx</name><operator pos:start="387:23" pos:end="387:24">-&gt;</operator><name pos:start="387:25" pos:end="387:28">cudl</name><operator pos:start="387:29" pos:end="387:30">-&gt;</operator><name pos:start="387:31" pos:end="387:46">cuCtxPushCurrent</name></name><argument_list pos:start="387:47" pos:end="387:56">(<argument pos:start="387:48" pos:end="387:55"><expr pos:start="387:48" pos:end="387:55"><name pos:start="387:48" pos:end="387:55">cuda_ctx</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="389:5" pos:end="391:19"><if pos:start="389:5" pos:end="391:19">if <condition pos:start="389:8" pos:end="389:16">(<expr pos:start="389:9" pos:end="389:15"><name pos:start="389:9" pos:end="389:11">ret</name> <operator pos:start="389:13" pos:end="389:13">&lt;</operator> <literal type="number" pos:start="389:15" pos:end="389:15">0</literal></expr>)</condition><block type="pseudo" pos:start="391:9" pos:end="391:19"><block_content pos:start="391:9" pos:end="391:19">

        <goto pos:start="391:9" pos:end="391:19">goto <name pos:start="391:14" pos:end="391:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="395:5" pos:end="399:50"><expr pos:start="395:5" pos:end="399:49"><name pos:start="395:5" pos:end="395:7">ret</name> <operator pos:start="395:9" pos:end="395:9">=</operator> <call pos:start="395:11" pos:end="399:49"><name pos:start="395:11" pos:end="395:34">cuvid_test_dummy_decoder</name><argument_list pos:start="395:35" pos:end="399:49">(<argument pos:start="395:36" pos:end="395:40"><expr pos:start="395:36" pos:end="395:40"><name pos:start="395:36" pos:end="395:40">avctx</name></expr></argument>, <argument pos:start="395:43" pos:end="395:59"><expr pos:start="395:43" pos:end="395:59"><operator pos:start="395:43" pos:end="395:43">&amp;</operator><name pos:start="395:44" pos:end="395:59"><name pos:start="395:44" pos:end="395:46">ctx</name><operator pos:start="395:47" pos:end="395:48">-&gt;</operator><name pos:start="395:49" pos:end="395:59">cuparseinfo</name></name></expr></argument>,

                                   <argument pos:start="397:36" pos:end="397:47"><expr pos:start="397:36" pos:end="397:47"><name pos:start="397:36" pos:end="397:47">probed_width</name></expr></argument>,

                                   <argument pos:start="399:36" pos:end="399:48"><expr pos:start="399:36" pos:end="399:48"><name pos:start="399:36" pos:end="399:48">probed_height</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="401:5" pos:end="403:19"><if pos:start="401:5" pos:end="403:19">if <condition pos:start="401:8" pos:end="401:16">(<expr pos:start="401:9" pos:end="401:15"><name pos:start="401:9" pos:end="401:11">ret</name> <operator pos:start="401:13" pos:end="401:13">&lt;</operator> <literal type="number" pos:start="401:15" pos:end="401:15">0</literal></expr>)</condition><block type="pseudo" pos:start="403:9" pos:end="403:19"><block_content pos:start="403:9" pos:end="403:19">

        <goto pos:start="403:9" pos:end="403:19">goto <name pos:start="403:14" pos:end="403:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="407:5" pos:end="407:89"><expr pos:start="407:5" pos:end="407:88"><name pos:start="407:5" pos:end="407:7">ret</name> <operator pos:start="407:9" pos:end="407:9">=</operator> <call pos:start="407:11" pos:end="407:88"><name pos:start="407:11" pos:end="407:18">CHECK_CU</name><argument_list pos:start="407:19" pos:end="407:88">(<argument pos:start="407:20" pos:end="407:87"><expr pos:start="407:20" pos:end="407:87"><call pos:start="407:20" pos:end="407:87"><name pos:start="407:20" pos:end="407:52"><name pos:start="407:20" pos:end="407:22">ctx</name><operator pos:start="407:23" pos:end="407:24">-&gt;</operator><name pos:start="407:25" pos:end="407:28">cvdl</name><operator pos:start="407:29" pos:end="407:30">-&gt;</operator><name pos:start="407:31" pos:end="407:52">cuvidCreateVideoParser</name></name><argument_list pos:start="407:53" pos:end="407:87">(<argument pos:start="407:54" pos:end="407:67"><expr pos:start="407:54" pos:end="407:67"><operator pos:start="407:54" pos:end="407:54">&amp;</operator><name pos:start="407:55" pos:end="407:67"><name pos:start="407:55" pos:end="407:57">ctx</name><operator pos:start="407:58" pos:end="407:59">-&gt;</operator><name pos:start="407:60" pos:end="407:67">cuparser</name></name></expr></argument>, <argument pos:start="407:70" pos:end="407:86"><expr pos:start="407:70" pos:end="407:86"><operator pos:start="407:70" pos:end="407:70">&amp;</operator><name pos:start="407:71" pos:end="407:86"><name pos:start="407:71" pos:end="407:73">ctx</name><operator pos:start="407:74" pos:end="407:75">-&gt;</operator><name pos:start="407:76" pos:end="407:86">cuparseinfo</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="409:5" pos:end="411:19"><if pos:start="409:5" pos:end="411:19">if <condition pos:start="409:8" pos:end="409:16">(<expr pos:start="409:9" pos:end="409:15"><name pos:start="409:9" pos:end="409:11">ret</name> <operator pos:start="409:13" pos:end="409:13">&lt;</operator> <literal type="number" pos:start="409:15" pos:end="409:15">0</literal></expr>)</condition><block type="pseudo" pos:start="411:9" pos:end="411:19"><block_content pos:start="411:9" pos:end="411:19">

        <goto pos:start="411:9" pos:end="411:19">goto <name pos:start="411:14" pos:end="411:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="415:5" pos:end="415:55"><expr pos:start="415:5" pos:end="415:54"><name pos:start="415:5" pos:end="415:19"><name pos:start="415:5" pos:end="415:11">seq_pkt</name><operator pos:start="415:12" pos:end="415:12">.</operator><name pos:start="415:13" pos:end="415:19">payload</name></name> <operator pos:start="415:21" pos:end="415:21">=</operator> <name pos:start="415:23" pos:end="415:54"><name pos:start="415:23" pos:end="415:25">ctx</name><operator pos:start="415:26" pos:end="415:27">-&gt;</operator><name pos:start="415:28" pos:end="415:38">cuparse_ext</name><operator pos:start="415:39" pos:end="415:39">.</operator><name pos:start="415:40" pos:end="415:54">raw_seqhdr_data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="417:5" pos:end="417:70"><expr pos:start="417:5" pos:end="417:69"><name pos:start="417:5" pos:end="417:24"><name pos:start="417:5" pos:end="417:11">seq_pkt</name><operator pos:start="417:12" pos:end="417:12">.</operator><name pos:start="417:13" pos:end="417:24">payload_size</name></name> <operator pos:start="417:26" pos:end="417:26">=</operator> <name pos:start="417:28" pos:end="417:69"><name pos:start="417:28" pos:end="417:30">ctx</name><operator pos:start="417:31" pos:end="417:32">-&gt;</operator><name pos:start="417:33" pos:end="417:43">cuparse_ext</name><operator pos:start="417:44" pos:end="417:44">.</operator><name pos:start="417:45" pos:end="417:50">format</name><operator pos:start="417:51" pos:end="417:51">.</operator><name pos:start="417:52" pos:end="417:69">seqhdr_data_length</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="421:5" pos:end="429:5"><if pos:start="421:5" pos:end="429:5">if <condition pos:start="421:8" pos:end="421:48">(<expr pos:start="421:9" pos:end="421:47"><name pos:start="421:9" pos:end="421:23"><name pos:start="421:9" pos:end="421:15">seq_pkt</name><operator pos:start="421:16" pos:end="421:16">.</operator><name pos:start="421:17" pos:end="421:23">payload</name></name> <operator pos:start="421:25" pos:end="421:26">&amp;&amp;</operator> <name pos:start="421:28" pos:end="421:47"><name pos:start="421:28" pos:end="421:34">seq_pkt</name><operator pos:start="421:35" pos:end="421:35">.</operator><name pos:start="421:36" pos:end="421:47">payload_size</name></name></expr>)</condition> <block pos:start="421:50" pos:end="429:5">{<block_content pos:start="423:9" pos:end="427:23">

        <expr_stmt pos:start="423:9" pos:end="423:80"><expr pos:start="423:9" pos:end="423:79"><name pos:start="423:9" pos:end="423:11">ret</name> <operator pos:start="423:13" pos:end="423:13">=</operator> <call pos:start="423:15" pos:end="423:79"><name pos:start="423:15" pos:end="423:22">CHECK_CU</name><argument_list pos:start="423:23" pos:end="423:79">(<argument pos:start="423:24" pos:end="423:78"><expr pos:start="423:24" pos:end="423:78"><call pos:start="423:24" pos:end="423:78"><name pos:start="423:24" pos:end="423:53"><name pos:start="423:24" pos:end="423:26">ctx</name><operator pos:start="423:27" pos:end="423:28">-&gt;</operator><name pos:start="423:29" pos:end="423:32">cvdl</name><operator pos:start="423:33" pos:end="423:34">-&gt;</operator><name pos:start="423:35" pos:end="423:53">cuvidParseVideoData</name></name><argument_list pos:start="423:54" pos:end="423:78">(<argument pos:start="423:55" pos:end="423:67"><expr pos:start="423:55" pos:end="423:67"><name pos:start="423:55" pos:end="423:67"><name pos:start="423:55" pos:end="423:57">ctx</name><operator pos:start="423:58" pos:end="423:59">-&gt;</operator><name pos:start="423:60" pos:end="423:67">cuparser</name></name></expr></argument>, <argument pos:start="423:70" pos:end="423:77"><expr pos:start="423:70" pos:end="423:77"><operator pos:start="423:70" pos:end="423:70">&amp;</operator><name pos:start="423:71" pos:end="423:77">seq_pkt</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="425:9" pos:end="427:23"><if pos:start="425:9" pos:end="427:23">if <condition pos:start="425:12" pos:end="425:20">(<expr pos:start="425:13" pos:end="425:19"><name pos:start="425:13" pos:end="425:15">ret</name> <operator pos:start="425:17" pos:end="425:17">&lt;</operator> <literal type="number" pos:start="425:19" pos:end="425:19">0</literal></expr>)</condition><block type="pseudo" pos:start="427:13" pos:end="427:23"><block_content pos:start="427:13" pos:end="427:23">

            <goto pos:start="427:13" pos:end="427:23">goto <name pos:start="427:18" pos:end="427:22">error</name>;</goto></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="433:5" pos:end="433:55"><expr pos:start="433:5" pos:end="433:54"><name pos:start="433:5" pos:end="433:7">ret</name> <operator pos:start="433:9" pos:end="433:9">=</operator> <call pos:start="433:11" pos:end="433:54"><name pos:start="433:11" pos:end="433:18">CHECK_CU</name><argument_list pos:start="433:19" pos:end="433:54">(<argument pos:start="433:20" pos:end="433:53"><expr pos:start="433:20" pos:end="433:53"><call pos:start="433:20" pos:end="433:53"><name pos:start="433:20" pos:end="433:45"><name pos:start="433:20" pos:end="433:22">ctx</name><operator pos:start="433:23" pos:end="433:24">-&gt;</operator><name pos:start="433:25" pos:end="433:28">cudl</name><operator pos:start="433:29" pos:end="433:30">-&gt;</operator><name pos:start="433:31" pos:end="433:45">cuCtxPopCurrent</name></name><argument_list pos:start="433:46" pos:end="433:53">(<argument pos:start="433:47" pos:end="433:52"><expr pos:start="433:47" pos:end="433:52"><operator pos:start="433:47" pos:end="433:47">&amp;</operator><name pos:start="433:48" pos:end="433:52">dummy</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="435:5" pos:end="437:19"><if pos:start="435:5" pos:end="437:19">if <condition pos:start="435:8" pos:end="435:16">(<expr pos:start="435:9" pos:end="435:15"><name pos:start="435:9" pos:end="435:11">ret</name> <operator pos:start="435:13" pos:end="435:13">&lt;</operator> <literal type="number" pos:start="435:15" pos:end="435:15">0</literal></expr>)</condition><block type="pseudo" pos:start="437:9" pos:end="437:19"><block_content pos:start="437:9" pos:end="437:19">

        <goto pos:start="437:9" pos:end="437:19">goto <name pos:start="437:14" pos:end="437:18">error</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="441:5" pos:end="441:30"><expr pos:start="441:5" pos:end="441:29"><name pos:start="441:5" pos:end="441:17"><name pos:start="441:5" pos:end="441:7">ctx</name><operator pos:start="441:8" pos:end="441:9">-&gt;</operator><name pos:start="441:10" pos:end="441:17">prev_pts</name></name> <operator pos:start="441:19" pos:end="441:19">=</operator> <name pos:start="441:21" pos:end="441:29">INT64_MIN</name></expr>;</expr_stmt>



    <if_stmt pos:start="445:5" pos:end="447:91"><if pos:start="445:5" pos:end="447:91">if <condition pos:start="445:8" pos:end="445:61">(<expr pos:start="445:9" pos:end="445:60"><operator pos:start="445:9" pos:end="445:9">!</operator><name pos:start="445:10" pos:end="445:32"><name pos:start="445:10" pos:end="445:14">avctx</name><operator pos:start="445:15" pos:end="445:16">-&gt;</operator><name pos:start="445:17" pos:end="445:28">pkt_timebase</name><operator pos:start="445:29" pos:end="445:29">.</operator><name pos:start="445:30" pos:end="445:32">num</name></name> <operator pos:start="445:34" pos:end="445:35">||</operator> <operator pos:start="445:37" pos:end="445:37">!</operator><name pos:start="445:38" pos:end="445:60"><name pos:start="445:38" pos:end="445:42">avctx</name><operator pos:start="445:43" pos:end="445:44">-&gt;</operator><name pos:start="445:45" pos:end="445:56">pkt_timebase</name><operator pos:start="445:57" pos:end="445:57">.</operator><name pos:start="445:58" pos:end="445:60">den</name></name></expr>)</condition><block type="pseudo" pos:start="447:9" pos:end="447:91"><block_content pos:start="447:9" pos:end="447:91">

        <expr_stmt pos:start="447:9" pos:end="447:91"><expr pos:start="447:9" pos:end="447:90"><call pos:start="447:9" pos:end="447:90"><name pos:start="447:9" pos:end="447:14">av_log</name><argument_list pos:start="447:15" pos:end="447:90">(<argument pos:start="447:16" pos:end="447:20"><expr pos:start="447:16" pos:end="447:20"><name pos:start="447:16" pos:end="447:20">avctx</name></expr></argument>, <argument pos:start="447:23" pos:end="447:36"><expr pos:start="447:23" pos:end="447:36"><name pos:start="447:23" pos:end="447:36">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="447:39" pos:end="447:89"><expr pos:start="447:39" pos:end="447:89"><literal type="string" pos:start="447:39" pos:end="447:89">"Invalid pkt_timebase, passing timestamps as-is.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="451:5" pos:end="451:13">return <expr pos:start="451:12" pos:end="451:12"><literal type="number" pos:start="451:12" pos:end="451:12">0</literal></expr>;</return>



<label pos:start="455:1" pos:end="455:6"><name pos:start="455:1" pos:end="455:5">error</name>:</label>

    <expr_stmt pos:start="457:5" pos:end="457:28"><expr pos:start="457:5" pos:end="457:27"><call pos:start="457:5" pos:end="457:27"><name pos:start="457:5" pos:end="457:20">cuvid_decode_end</name><argument_list pos:start="457:21" pos:end="457:27">(<argument pos:start="457:22" pos:end="457:26"><expr pos:start="457:22" pos:end="457:26"><name pos:start="457:22" pos:end="457:26">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="459:5" pos:end="459:15">return <expr pos:start="459:12" pos:end="459:14"><name pos:start="459:12" pos:end="459:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
