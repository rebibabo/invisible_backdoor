<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3078.c" pos:tabs="8"><function pos:start="1:1" pos:end="341:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">yuv4_read_header</name><parameter_list pos:start="1:28" pos:end="1:47">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:45"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="341:1">{<block_content pos:start="5:5" pos:end="339:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:8"><name pos:start="5:5" pos:end="5:8">char</name></type> <name pos:start="5:10" pos:end="5:37"><name pos:start="5:10" pos:end="5:15">header</name><index pos:start="5:16" pos:end="5:37">[<expr pos:start="5:17" pos:end="5:36"><name pos:start="5:17" pos:end="5:31">MAX_YUV4_HEADER</name> <operator pos:start="5:33" pos:end="5:33">+</operator> <literal type="number" pos:start="5:35" pos:end="5:36">10</literal></expr>]</index></name></decl>;</decl_stmt>  <comment type="line" pos:start="5:41" pos:end="5:63">// Include headroom for</comment>

                                        <comment type="line" pos:start="7:41" pos:end="7:61">// the longest option</comment>

    <decl_stmt pos:start="9:5" pos:end="9:41"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:18">tokstart</name></decl>, <decl pos:start="9:21" pos:end="9:27"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:21" pos:end="9:21">*</modifier></type><name pos:start="9:22" pos:end="9:27">tokend</name></decl>, <decl pos:start="9:30" pos:end="9:40"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:30" pos:end="9:30">*</modifier></type><name pos:start="9:31" pos:end="9:40">header_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:28"><decl pos:start="13:5" pos:end="13:27"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:19">pb</name> <init pos:start="13:21" pos:end="13:27">= <expr pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:27"><name pos:start="13:23" pos:end="13:23">s</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="17:46"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:13">width</name> <init pos:start="15:15" pos:end="15:18">= <expr pos:start="15:17" pos:end="15:18"><operator pos:start="15:17" pos:end="15:17">-</operator><literal type="number" pos:start="15:18" pos:end="15:18">1</literal></expr></init></decl>, <decl pos:start="15:21" pos:end="15:32"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:21" pos:end="15:26">height</name>  <init pos:start="15:29" pos:end="15:32">= <expr pos:start="15:31" pos:end="15:32"><operator pos:start="15:31" pos:end="15:31">-</operator><literal type="number" pos:start="15:32" pos:end="15:32">1</literal></expr></init></decl>, <decl pos:start="15:35" pos:end="15:45"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:35" pos:end="15:39">raten</name>   <init pos:start="15:43" pos:end="15:45">= <expr pos:start="15:45" pos:end="15:45"><literal type="number" pos:start="15:45" pos:end="15:45">0</literal></expr></init></decl>,

        <decl pos:start="17:9" pos:end="17:18"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="17:9" pos:end="17:13">rated</name> <init pos:start="17:15" pos:end="17:18">=  <expr pos:start="17:18" pos:end="17:18"><literal type="number" pos:start="17:18" pos:end="17:18">0</literal></expr></init></decl>, <decl pos:start="17:21" pos:end="17:32"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="17:21" pos:end="17:27">aspectn</name> <init pos:start="17:29" pos:end="17:32">=  <expr pos:start="17:32" pos:end="17:32"><literal type="number" pos:start="17:32" pos:end="17:32">0</literal></expr></init></decl>, <decl pos:start="17:35" pos:end="17:45"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="17:35" pos:end="17:41">aspectd</name> <init pos:start="17:43" pos:end="17:45">= <expr pos:start="17:45" pos:end="17:45"><literal type="number" pos:start="17:45" pos:end="17:45">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:80"><decl pos:start="19:5" pos:end="19:48"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:8">enum</name> <name pos:start="19:10" pos:end="19:22">AVPixelFormat</name></name></type> <name pos:start="19:24" pos:end="19:30">pix_fmt</name> <init pos:start="19:32" pos:end="19:48">= <expr pos:start="19:34" pos:end="19:48"><name pos:start="19:34" pos:end="19:48">AV_PIX_FMT_NONE</name></expr></init></decl>, <decl pos:start="19:51" pos:end="19:79"><type ref="prev" pos:start="19:5" pos:end="19:22"/><name pos:start="19:51" pos:end="19:61">alt_pix_fmt</name> <init pos:start="19:63" pos:end="19:79">= <expr pos:start="19:65" pos:end="19:79"><name pos:start="19:65" pos:end="19:79">AV_PIX_FMT_NONE</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:76"><decl pos:start="21:5" pos:end="21:75"><type pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:25"><name pos:start="21:5" pos:end="21:8">enum</name> <name pos:start="21:10" pos:end="21:25">AVChromaLocation</name></name></type> <name pos:start="21:27" pos:end="21:48">chroma_sample_location</name> <init pos:start="21:50" pos:end="21:75">= <expr pos:start="21:52" pos:end="21:75"><name pos:start="21:52" pos:end="21:75">AVCHROMA_LOC_UNSPECIFIED</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:17"><decl pos:start="23:5" pos:end="23:16"><type pos:start="23:5" pos:end="23:14"><name pos:start="23:5" pos:end="23:12">AVStream</name> <modifier pos:start="23:14" pos:end="23:14">*</modifier></type><name pos:start="23:15" pos:end="23:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:21"><name pos:start="25:5" pos:end="25:8">enum</name> <name pos:start="25:10" pos:end="25:21">AVFieldOrder</name></name></type> <name pos:start="25:23" pos:end="25:33">field_order</name></decl>;</decl_stmt>



    <for pos:start="29:5" pos:end="45:5">for <control pos:start="29:9" pos:end="29:41">(<init pos:start="29:10" pos:end="29:15"><expr pos:start="29:10" pos:end="29:14"><name pos:start="29:10" pos:end="29:10">i</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>;</init> <condition pos:start="29:17" pos:end="29:36"><expr pos:start="29:17" pos:end="29:35"><name pos:start="29:17" pos:end="29:17">i</name> <operator pos:start="29:19" pos:end="29:19">&lt;</operator> <name pos:start="29:21" pos:end="29:35">MAX_YUV4_HEADER</name></expr>;</condition> <incr pos:start="29:38" pos:end="29:40"><expr pos:start="29:38" pos:end="29:40"><name pos:start="29:38" pos:end="29:38">i</name><operator pos:start="29:39" pos:end="29:40">++</operator></expr></incr>)</control> <block pos:start="29:43" pos:end="45:5">{<block_content pos:start="31:9" pos:end="43:9">

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:17"><name pos:start="31:9" pos:end="31:14">header</name><index pos:start="31:15" pos:end="31:17">[<expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">i</name></expr>]</index></name> <operator pos:start="31:19" pos:end="31:19">=</operator> <call pos:start="31:21" pos:end="31:31"><name pos:start="31:21" pos:end="31:27">avio_r8</name><argument_list pos:start="31:28" pos:end="31:31">(<argument pos:start="31:29" pos:end="31:30"><expr pos:start="31:29" pos:end="31:30"><name pos:start="31:29" pos:end="31:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="33:9" pos:end="43:9"><if pos:start="33:9" pos:end="43:9">if <condition pos:start="33:12" pos:end="33:30">(<expr pos:start="33:13" pos:end="33:29"><name pos:start="33:13" pos:end="33:21"><name pos:start="33:13" pos:end="33:18">header</name><index pos:start="33:19" pos:end="33:21">[<expr pos:start="33:20" pos:end="33:20"><name pos:start="33:20" pos:end="33:20">i</name></expr>]</index></name> <operator pos:start="33:23" pos:end="33:24">==</operator> <literal type="char" pos:start="33:26" pos:end="33:29">'\n'</literal></expr>)</condition> <block pos:start="33:32" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:18">

            <expr_stmt pos:start="35:13" pos:end="35:33"><expr pos:start="35:13" pos:end="35:32"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:18">header</name><index pos:start="35:19" pos:end="35:25">[<expr pos:start="35:20" pos:end="35:24"><name pos:start="35:20" pos:end="35:20">i</name> <operator pos:start="35:22" pos:end="35:22">+</operator> <literal type="number" pos:start="35:24" pos:end="35:24">1</literal></expr>]</index></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <literal type="number" pos:start="35:29" pos:end="35:32">0x20</literal></expr>;</expr_stmt>  <comment type="line" pos:start="35:36" pos:end="35:68">// Add a space after last option.</comment>

                                   <comment type="line" pos:start="37:36" pos:end="37:79">// Makes parsing "444" vs "444alpha" easier.</comment>

            <expr_stmt pos:start="39:13" pos:end="39:30"><expr pos:start="39:13" pos:end="39:29"><name pos:start="39:13" pos:end="39:25"><name pos:start="39:13" pos:end="39:18">header</name><index pos:start="39:19" pos:end="39:25">[<expr pos:start="39:20" pos:end="39:24"><name pos:start="39:20" pos:end="39:20">i</name> <operator pos:start="39:22" pos:end="39:22">+</operator> <literal type="number" pos:start="39:24" pos:end="39:24">2</literal></expr>]</index></name> <operator pos:start="39:27" pos:end="39:27">=</operator> <literal type="number" pos:start="39:29" pos:end="39:29">0</literal></expr>;</expr_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="47:5" pos:end="49:18"><if pos:start="47:5" pos:end="49:18">if <condition pos:start="47:8" pos:end="47:29">(<expr pos:start="47:9" pos:end="47:28"><name pos:start="47:9" pos:end="47:9">i</name> <operator pos:start="47:11" pos:end="47:12">==</operator> <name pos:start="47:14" pos:end="47:28">MAX_YUV4_HEADER</name></expr>)</condition><block type="pseudo" pos:start="49:9" pos:end="49:18"><block_content pos:start="49:9" pos:end="49:18">

        <return pos:start="49:9" pos:end="49:18">return <expr pos:start="49:16" pos:end="49:17"><operator pos:start="49:16" pos:end="49:16">-</operator><literal type="number" pos:start="49:17" pos:end="49:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="51:5" pos:end="53:18"><if pos:start="51:5" pos:end="53:18">if <condition pos:start="51:8" pos:end="51:54">(<expr pos:start="51:9" pos:end="51:53"><call pos:start="51:9" pos:end="51:53"><name pos:start="51:9" pos:end="51:15">strncmp</name><argument_list pos:start="51:16" pos:end="51:53">(<argument pos:start="51:17" pos:end="51:22"><expr pos:start="51:17" pos:end="51:22"><name pos:start="51:17" pos:end="51:22">header</name></expr></argument>, <argument pos:start="51:25" pos:end="51:33"><expr pos:start="51:25" pos:end="51:33"><name pos:start="51:25" pos:end="51:33">Y4M_MAGIC</name></expr></argument>, <argument pos:start="51:36" pos:end="51:52"><expr pos:start="51:36" pos:end="51:52"><call pos:start="51:36" pos:end="51:52"><name pos:start="51:36" pos:end="51:41">strlen</name><argument_list pos:start="51:42" pos:end="51:52">(<argument pos:start="51:43" pos:end="51:51"><expr pos:start="51:43" pos:end="51:51"><name pos:start="51:43" pos:end="51:51">Y4M_MAGIC</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="53:9" pos:end="53:18"><block_content pos:start="53:9" pos:end="53:18">

        <return pos:start="53:9" pos:end="53:18">return <expr pos:start="53:16" pos:end="53:17"><operator pos:start="53:16" pos:end="53:16">-</operator><literal type="number" pos:start="53:17" pos:end="53:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="57:5" pos:end="57:32"><expr pos:start="57:5" pos:end="57:31"><name pos:start="57:5" pos:end="57:14">header_end</name> <operator pos:start="57:16" pos:end="57:16">=</operator> <operator pos:start="57:18" pos:end="57:18">&amp;</operator><name pos:start="57:19" pos:end="57:31"><name pos:start="57:19" pos:end="57:24">header</name><index pos:start="57:25" pos:end="57:31">[<expr pos:start="57:26" pos:end="57:30"><name pos:start="57:26" pos:end="57:26">i</name> <operator pos:start="57:28" pos:end="57:28">+</operator> <literal type="number" pos:start="57:30" pos:end="57:30">1</literal></expr>]</index></name></expr>;</expr_stmt> <comment type="line" pos:start="57:34" pos:end="57:49">// Include space</comment>

    <for pos:start="59:5" pos:end="259:5">for <control pos:start="59:9" pos:end="61:43">(<init pos:start="59:10" pos:end="59:51"><expr pos:start="59:10" pos:end="59:50"><name pos:start="59:10" pos:end="59:17">tokstart</name> <operator pos:start="59:19" pos:end="59:19">=</operator> <operator pos:start="59:21" pos:end="59:21">&amp;</operator><name pos:start="59:22" pos:end="59:50"><name pos:start="59:22" pos:end="59:27">header</name><index pos:start="59:28" pos:end="59:50">[<expr pos:start="59:29" pos:end="59:49"><call pos:start="59:29" pos:end="59:45"><name pos:start="59:29" pos:end="59:34">strlen</name><argument_list pos:start="59:35" pos:end="59:45">(<argument pos:start="59:36" pos:end="59:44"><expr pos:start="59:36" pos:end="59:44"><name pos:start="59:36" pos:end="59:44">Y4M_MAGIC</name></expr></argument>)</argument_list></call> <operator pos:start="59:47" pos:end="59:47">+</operator> <literal type="number" pos:start="59:49" pos:end="59:49">1</literal></expr>]</index></name></expr>;</init>

         <condition pos:start="61:10" pos:end="61:31"><expr pos:start="61:10" pos:end="61:30"><name pos:start="61:10" pos:end="61:17">tokstart</name> <operator pos:start="61:19" pos:end="61:19">&lt;</operator> <name pos:start="61:21" pos:end="61:30">header_end</name></expr>;</condition> <incr pos:start="61:33" pos:end="61:42"><expr pos:start="61:33" pos:end="61:42"><name pos:start="61:33" pos:end="61:40">tokstart</name><operator pos:start="61:41" pos:end="61:42">++</operator></expr></incr>)</control> <block pos:start="61:45" pos:end="259:5">{<block_content pos:start="63:9" pos:end="257:9">

        <if_stmt pos:start="63:9" pos:end="65:21"><if pos:start="63:9" pos:end="65:21">if <condition pos:start="63:12" pos:end="63:30">(<expr pos:start="63:13" pos:end="63:29"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:21">tokstart</name> <operator pos:start="63:23" pos:end="63:24">==</operator> <literal type="number" pos:start="63:26" pos:end="63:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="65:13" pos:end="65:21"><block_content pos:start="65:13" pos:end="65:21">

            <continue pos:start="65:13" pos:end="65:21">continue;</continue></block_content></block></if></if_stmt>

        <switch pos:start="67:9" pos:end="257:9">switch <condition pos:start="67:16" pos:end="67:28">(<expr pos:start="67:17" pos:end="67:27"><operator pos:start="67:17" pos:end="67:17">*</operator><name pos:start="67:18" pos:end="67:25">tokstart</name><operator pos:start="67:26" pos:end="67:27">++</operator></expr>)</condition> <block pos:start="67:30" pos:end="257:9">{<block_content pos:start="69:9" pos:end="255:18">

        <case pos:start="69:9" pos:end="69:17">case <expr pos:start="69:14" pos:end="69:16"><literal type="char" pos:start="69:14" pos:end="69:16">'W'</literal></expr>:</case> <comment type="line" pos:start="69:19" pos:end="69:37">// Width. Required.</comment>

            <expr_stmt pos:start="71:13" pos:end="71:53"><expr pos:start="71:13" pos:end="71:52"><name pos:start="71:13" pos:end="71:17">width</name>    <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:52"><name pos:start="71:24" pos:end="71:29">strtol</name><argument_list pos:start="71:30" pos:end="71:52">(<argument pos:start="71:31" pos:end="71:38"><expr pos:start="71:31" pos:end="71:38"><name pos:start="71:31" pos:end="71:38">tokstart</name></expr></argument>, <argument pos:start="71:41" pos:end="71:47"><expr pos:start="71:41" pos:end="71:47"><operator pos:start="71:41" pos:end="71:41">&amp;</operator><name pos:start="71:42" pos:end="71:47">tokend</name></expr></argument>, <argument pos:start="71:50" pos:end="71:51"><expr pos:start="71:50" pos:end="71:51"><literal type="number" pos:start="71:50" pos:end="71:51">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:30"><expr pos:start="73:13" pos:end="73:29"><name pos:start="73:13" pos:end="73:20">tokstart</name> <operator pos:start="73:22" pos:end="73:22">=</operator> <name pos:start="73:24" pos:end="73:29">tokend</name></expr>;</expr_stmt>

            <break pos:start="75:13" pos:end="75:18">break;</break>

        <case pos:start="77:9" pos:end="77:17">case <expr pos:start="77:14" pos:end="77:16"><literal type="char" pos:start="77:14" pos:end="77:16">'H'</literal></expr>:</case> <comment type="line" pos:start="77:19" pos:end="77:38">// Height. Required.</comment>

            <expr_stmt pos:start="79:13" pos:end="79:53"><expr pos:start="79:13" pos:end="79:52"><name pos:start="79:13" pos:end="79:18">height</name>   <operator pos:start="79:22" pos:end="79:22">=</operator> <call pos:start="79:24" pos:end="79:52"><name pos:start="79:24" pos:end="79:29">strtol</name><argument_list pos:start="79:30" pos:end="79:52">(<argument pos:start="79:31" pos:end="79:38"><expr pos:start="79:31" pos:end="79:38"><name pos:start="79:31" pos:end="79:38">tokstart</name></expr></argument>, <argument pos:start="79:41" pos:end="79:47"><expr pos:start="79:41" pos:end="79:47"><operator pos:start="79:41" pos:end="79:41">&amp;</operator><name pos:start="79:42" pos:end="79:47">tokend</name></expr></argument>, <argument pos:start="79:50" pos:end="79:51"><expr pos:start="79:50" pos:end="79:51"><literal type="number" pos:start="79:50" pos:end="79:51">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:30"><expr pos:start="81:13" pos:end="81:29"><name pos:start="81:13" pos:end="81:20">tokstart</name> <operator pos:start="81:22" pos:end="81:22">=</operator> <name pos:start="81:24" pos:end="81:29">tokend</name></expr>;</expr_stmt>

            <break pos:start="83:13" pos:end="83:18">break;</break>

        <case pos:start="85:9" pos:end="85:17">case <expr pos:start="85:14" pos:end="85:16"><literal type="char" pos:start="85:14" pos:end="85:16">'C'</literal></expr>:</case> <comment type="line" pos:start="85:19" pos:end="85:32">// Color space</comment>

            <if_stmt pos:start="87:13" pos:end="143:13"><if pos:start="87:13" pos:end="93:13">if <condition pos:start="87:16" pos:end="87:53">(<expr pos:start="87:17" pos:end="87:52"><call pos:start="87:17" pos:end="87:47"><name pos:start="87:17" pos:end="87:23">strncmp</name><argument_list pos:start="87:24" pos:end="87:47">(<argument pos:start="87:25" pos:end="87:33"><expr pos:start="87:25" pos:end="87:33"><literal type="string" pos:start="87:25" pos:end="87:33">"420jpeg"</literal></expr></argument>, <argument pos:start="87:36" pos:end="87:43"><expr pos:start="87:36" pos:end="87:43"><name pos:start="87:36" pos:end="87:43">tokstart</name></expr></argument>, <argument pos:start="87:46" pos:end="87:46"><expr pos:start="87:46" pos:end="87:46"><literal type="number" pos:start="87:46" pos:end="87:46">7</literal></expr></argument>)</argument_list></call> <operator pos:start="87:49" pos:end="87:50">==</operator> <literal type="number" pos:start="87:52" pos:end="87:52">0</literal></expr>)</condition> <block pos:start="87:55" pos:end="93:13">{<block_content pos:start="89:17" pos:end="91:61">

                <expr_stmt pos:start="89:17" pos:end="89:45"><expr pos:start="89:17" pos:end="89:44"><name pos:start="89:17" pos:end="89:23">pix_fmt</name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:44">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:61"><expr pos:start="91:17" pos:end="91:60"><name pos:start="91:17" pos:end="91:38">chroma_sample_location</name> <operator pos:start="91:40" pos:end="91:40">=</operator> <name pos:start="91:42" pos:end="91:60">AVCHROMA_LOC_CENTER</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="93:15" pos:end="99:13">else if <condition pos:start="93:23" pos:end="93:61">(<expr pos:start="93:24" pos:end="93:60"><call pos:start="93:24" pos:end="93:55"><name pos:start="93:24" pos:end="93:30">strncmp</name><argument_list pos:start="93:31" pos:end="93:55">(<argument pos:start="93:32" pos:end="93:41"><expr pos:start="93:32" pos:end="93:41"><literal type="string" pos:start="93:32" pos:end="93:41">"420mpeg2"</literal></expr></argument>, <argument pos:start="93:44" pos:end="93:51"><expr pos:start="93:44" pos:end="93:51"><name pos:start="93:44" pos:end="93:51">tokstart</name></expr></argument>, <argument pos:start="93:54" pos:end="93:54"><expr pos:start="93:54" pos:end="93:54"><literal type="number" pos:start="93:54" pos:end="93:54">8</literal></expr></argument>)</argument_list></call> <operator pos:start="93:57" pos:end="93:58">==</operator> <literal type="number" pos:start="93:60" pos:end="93:60">0</literal></expr>)</condition> <block pos:start="93:63" pos:end="99:13">{<block_content pos:start="95:17" pos:end="97:59">

                <expr_stmt pos:start="95:17" pos:end="95:45"><expr pos:start="95:17" pos:end="95:44"><name pos:start="95:17" pos:end="95:23">pix_fmt</name> <operator pos:start="95:25" pos:end="95:25">=</operator> <name pos:start="95:27" pos:end="95:44">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:59"><expr pos:start="97:17" pos:end="97:58"><name pos:start="97:17" pos:end="97:38">chroma_sample_location</name> <operator pos:start="97:40" pos:end="97:40">=</operator> <name pos:start="97:42" pos:end="97:58">AVCHROMA_LOC_LEFT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="99:15" pos:end="105:13">else if <condition pos:start="99:23" pos:end="99:61">(<expr pos:start="99:24" pos:end="99:60"><call pos:start="99:24" pos:end="99:55"><name pos:start="99:24" pos:end="99:30">strncmp</name><argument_list pos:start="99:31" pos:end="99:55">(<argument pos:start="99:32" pos:end="99:41"><expr pos:start="99:32" pos:end="99:41"><literal type="string" pos:start="99:32" pos:end="99:41">"420paldv"</literal></expr></argument>, <argument pos:start="99:44" pos:end="99:51"><expr pos:start="99:44" pos:end="99:51"><name pos:start="99:44" pos:end="99:51">tokstart</name></expr></argument>, <argument pos:start="99:54" pos:end="99:54"><expr pos:start="99:54" pos:end="99:54"><literal type="number" pos:start="99:54" pos:end="99:54">8</literal></expr></argument>)</argument_list></call> <operator pos:start="99:57" pos:end="99:58">==</operator> <literal type="number" pos:start="99:60" pos:end="99:60">0</literal></expr>)</condition> <block pos:start="99:63" pos:end="105:13">{<block_content pos:start="101:17" pos:end="103:62">

                <expr_stmt pos:start="101:17" pos:end="101:45"><expr pos:start="101:17" pos:end="101:44"><name pos:start="101:17" pos:end="101:23">pix_fmt</name> <operator pos:start="101:25" pos:end="101:25">=</operator> <name pos:start="101:27" pos:end="101:44">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                <expr_stmt pos:start="103:17" pos:end="103:62"><expr pos:start="103:17" pos:end="103:61"><name pos:start="103:17" pos:end="103:38">chroma_sample_location</name> <operator pos:start="103:40" pos:end="103:40">=</operator> <name pos:start="103:42" pos:end="103:61">AVCHROMA_LOC_TOPLEFT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="105:15" pos:end="111:13">else if <condition pos:start="105:23" pos:end="105:56">(<expr pos:start="105:24" pos:end="105:55"><call pos:start="105:24" pos:end="105:50"><name pos:start="105:24" pos:end="105:30">strncmp</name><argument_list pos:start="105:31" pos:end="105:50">(<argument pos:start="105:32" pos:end="105:36"><expr pos:start="105:32" pos:end="105:36"><literal type="string" pos:start="105:32" pos:end="105:36">"420"</literal></expr></argument>, <argument pos:start="105:39" pos:end="105:46"><expr pos:start="105:39" pos:end="105:46"><name pos:start="105:39" pos:end="105:46">tokstart</name></expr></argument>, <argument pos:start="105:49" pos:end="105:49"><expr pos:start="105:49" pos:end="105:49"><literal type="number" pos:start="105:49" pos:end="105:49">3</literal></expr></argument>)</argument_list></call> <operator pos:start="105:52" pos:end="105:53">==</operator> <literal type="number" pos:start="105:55" pos:end="105:55">0</literal></expr>)</condition> <block pos:start="105:58" pos:end="111:13">{<block_content pos:start="107:17" pos:end="109:61">

                <expr_stmt pos:start="107:17" pos:end="107:45"><expr pos:start="107:17" pos:end="107:44"><name pos:start="107:17" pos:end="107:23">pix_fmt</name> <operator pos:start="107:25" pos:end="107:25">=</operator> <name pos:start="107:27" pos:end="107:44">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt>

                <expr_stmt pos:start="109:17" pos:end="109:61"><expr pos:start="109:17" pos:end="109:60"><name pos:start="109:17" pos:end="109:38">chroma_sample_location</name> <operator pos:start="109:40" pos:end="109:40">=</operator> <name pos:start="109:42" pos:end="109:60">AVCHROMA_LOC_CENTER</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="111:15" pos:end="113:45">else if <condition pos:start="111:23" pos:end="111:56">(<expr pos:start="111:24" pos:end="111:55"><call pos:start="111:24" pos:end="111:50"><name pos:start="111:24" pos:end="111:30">strncmp</name><argument_list pos:start="111:31" pos:end="111:50">(<argument pos:start="111:32" pos:end="111:36"><expr pos:start="111:32" pos:end="111:36"><literal type="string" pos:start="111:32" pos:end="111:36">"411"</literal></expr></argument>, <argument pos:start="111:39" pos:end="111:46"><expr pos:start="111:39" pos:end="111:46"><name pos:start="111:39" pos:end="111:46">tokstart</name></expr></argument>, <argument pos:start="111:49" pos:end="111:49"><expr pos:start="111:49" pos:end="111:49"><literal type="number" pos:start="111:49" pos:end="111:49">3</literal></expr></argument>)</argument_list></call> <operator pos:start="111:52" pos:end="111:53">==</operator> <literal type="number" pos:start="111:55" pos:end="111:55">0</literal></expr>)</condition><block type="pseudo" pos:start="113:17" pos:end="113:45"><block_content pos:start="113:17" pos:end="113:45">

                <expr_stmt pos:start="113:17" pos:end="113:45"><expr pos:start="113:17" pos:end="113:44"><name pos:start="113:17" pos:end="113:23">pix_fmt</name> <operator pos:start="113:25" pos:end="113:25">=</operator> <name pos:start="113:27" pos:end="113:44">AV_PIX_FMT_YUV411P</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="115:13" pos:end="117:45">else if <condition pos:start="115:21" pos:end="115:54">(<expr pos:start="115:22" pos:end="115:53"><call pos:start="115:22" pos:end="115:48"><name pos:start="115:22" pos:end="115:28">strncmp</name><argument_list pos:start="115:29" pos:end="115:48">(<argument pos:start="115:30" pos:end="115:34"><expr pos:start="115:30" pos:end="115:34"><literal type="string" pos:start="115:30" pos:end="115:34">"422"</literal></expr></argument>, <argument pos:start="115:37" pos:end="115:44"><expr pos:start="115:37" pos:end="115:44"><name pos:start="115:37" pos:end="115:44">tokstart</name></expr></argument>, <argument pos:start="115:47" pos:end="115:47"><expr pos:start="115:47" pos:end="115:47"><literal type="number" pos:start="115:47" pos:end="115:47">3</literal></expr></argument>)</argument_list></call> <operator pos:start="115:50" pos:end="115:51">==</operator> <literal type="number" pos:start="115:53" pos:end="115:53">0</literal></expr>)</condition><block type="pseudo" pos:start="117:17" pos:end="117:45"><block_content pos:start="117:17" pos:end="117:45">

                <expr_stmt pos:start="117:17" pos:end="117:45"><expr pos:start="117:17" pos:end="117:44"><name pos:start="117:17" pos:end="117:23">pix_fmt</name> <operator pos:start="117:25" pos:end="117:25">=</operator> <name pos:start="117:27" pos:end="117:44">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="119:13" pos:end="127:13">else if <condition pos:start="119:21" pos:end="119:60">(<expr pos:start="119:22" pos:end="119:58"><call pos:start="119:22" pos:end="119:53"><name pos:start="119:22" pos:end="119:28">strncmp</name><argument_list pos:start="119:29" pos:end="119:53">(<argument pos:start="119:30" pos:end="119:39"><expr pos:start="119:30" pos:end="119:39"><literal type="string" pos:start="119:30" pos:end="119:39">"444alpha"</literal></expr></argument>, <argument pos:start="119:42" pos:end="119:49"><expr pos:start="119:42" pos:end="119:49"><name pos:start="119:42" pos:end="119:49">tokstart</name></expr></argument>, <argument pos:start="119:52" pos:end="119:52"><expr pos:start="119:52" pos:end="119:52"><literal type="number" pos:start="119:52" pos:end="119:52">8</literal></expr></argument>)</argument_list></call> <operator pos:start="119:55" pos:end="119:56">==</operator> <literal type="number" pos:start="119:58" pos:end="119:58">0</literal></expr> )</condition> <block pos:start="119:62" pos:end="127:13">{<block_content pos:start="121:17" pos:end="125:26">

                <expr_stmt pos:start="121:17" pos:end="123:45"><expr pos:start="121:17" pos:end="123:44"><call pos:start="121:17" pos:end="123:44"><name pos:start="121:17" pos:end="121:22">av_log</name><argument_list pos:start="121:23" pos:end="123:44">(<argument pos:start="121:24" pos:end="121:24"><expr pos:start="121:24" pos:end="121:24"><name pos:start="121:24" pos:end="121:24">s</name></expr></argument>, <argument pos:start="121:27" pos:end="121:38"><expr pos:start="121:27" pos:end="121:38"><name pos:start="121:27" pos:end="121:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="121:41" pos:end="123:43"><expr pos:start="121:41" pos:end="123:43"><literal type="string" pos:start="121:41" pos:end="121:64">"Cannot handle 4:4:4:4 "</literal>

                       <literal type="string" pos:start="123:24" pos:end="123:43">"YUV4MPEG stream.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="125:17" pos:end="125:26">return <expr pos:start="125:24" pos:end="125:25"><operator pos:start="125:24" pos:end="125:24">-</operator><literal type="number" pos:start="125:25" pos:end="125:25">1</literal></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="127:15" pos:end="129:45">else if <condition pos:start="127:23" pos:end="127:56">(<expr pos:start="127:24" pos:end="127:55"><call pos:start="127:24" pos:end="127:50"><name pos:start="127:24" pos:end="127:30">strncmp</name><argument_list pos:start="127:31" pos:end="127:50">(<argument pos:start="127:32" pos:end="127:36"><expr pos:start="127:32" pos:end="127:36"><literal type="string" pos:start="127:32" pos:end="127:36">"444"</literal></expr></argument>, <argument pos:start="127:39" pos:end="127:46"><expr pos:start="127:39" pos:end="127:46"><name pos:start="127:39" pos:end="127:46">tokstart</name></expr></argument>, <argument pos:start="127:49" pos:end="127:49"><expr pos:start="127:49" pos:end="127:49"><literal type="number" pos:start="127:49" pos:end="127:49">3</literal></expr></argument>)</argument_list></call> <operator pos:start="127:52" pos:end="127:53">==</operator> <literal type="number" pos:start="127:55" pos:end="127:55">0</literal></expr>)</condition><block type="pseudo" pos:start="129:17" pos:end="129:45"><block_content pos:start="129:17" pos:end="129:45">

                <expr_stmt pos:start="129:17" pos:end="129:45"><expr pos:start="129:17" pos:end="129:44"><name pos:start="129:17" pos:end="129:23">pix_fmt</name> <operator pos:start="129:25" pos:end="129:25">=</operator> <name pos:start="129:27" pos:end="129:44">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="131:13" pos:end="135:13">else if <condition pos:start="131:21" pos:end="131:55">(<expr pos:start="131:22" pos:end="131:54"><call pos:start="131:22" pos:end="131:49"><name pos:start="131:22" pos:end="131:28">strncmp</name><argument_list pos:start="131:29" pos:end="131:49">(<argument pos:start="131:30" pos:end="131:35"><expr pos:start="131:30" pos:end="131:35"><literal type="string" pos:start="131:30" pos:end="131:35">"mono"</literal></expr></argument>, <argument pos:start="131:38" pos:end="131:45"><expr pos:start="131:38" pos:end="131:45"><name pos:start="131:38" pos:end="131:45">tokstart</name></expr></argument>, <argument pos:start="131:48" pos:end="131:48"><expr pos:start="131:48" pos:end="131:48"><literal type="number" pos:start="131:48" pos:end="131:48">4</literal></expr></argument>)</argument_list></call> <operator pos:start="131:51" pos:end="131:52">==</operator> <literal type="number" pos:start="131:54" pos:end="131:54">0</literal></expr>)</condition> <block pos:start="131:57" pos:end="135:13">{<block_content pos:start="133:17" pos:end="133:43">

                <expr_stmt pos:start="133:17" pos:end="133:43"><expr pos:start="133:17" pos:end="133:42"><name pos:start="133:17" pos:end="133:23">pix_fmt</name> <operator pos:start="133:25" pos:end="133:25">=</operator> <name pos:start="133:27" pos:end="133:42">AV_PIX_FMT_GRAY8</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="135:15" pos:end="143:13">else <block pos:start="135:20" pos:end="143:13">{<block_content pos:start="137:17" pos:end="141:26">

                <expr_stmt pos:start="137:17" pos:end="139:42"><expr pos:start="137:17" pos:end="139:41"><call pos:start="137:17" pos:end="139:41"><name pos:start="137:17" pos:end="137:22">av_log</name><argument_list pos:start="137:23" pos:end="139:41">(<argument pos:start="137:24" pos:end="137:24"><expr pos:start="137:24" pos:end="137:24"><name pos:start="137:24" pos:end="137:24">s</name></expr></argument>, <argument pos:start="137:27" pos:end="137:38"><expr pos:start="137:27" pos:end="137:38"><name pos:start="137:27" pos:end="137:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="137:41" pos:end="139:40"><expr pos:start="137:41" pos:end="139:40"><literal type="string" pos:start="137:41" pos:end="137:78">"YUV4MPEG stream contains an unknown "</literal>

                       <literal type="string" pos:start="139:24" pos:end="139:40">"pixel format.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="141:17" pos:end="141:26">return <expr pos:start="141:24" pos:end="141:25"><operator pos:start="141:24" pos:end="141:24">-</operator><literal type="number" pos:start="141:25" pos:end="141:25">1</literal></expr>;</return>

            </block_content>}</block></else></if_stmt>

            <while pos:start="145:13" pos:end="147:27">while <condition pos:start="145:19" pos:end="145:62">(<expr pos:start="145:20" pos:end="145:61"><name pos:start="145:20" pos:end="145:27">tokstart</name> <operator pos:start="145:29" pos:end="145:29">&lt;</operator> <name pos:start="145:31" pos:end="145:40">header_end</name> <operator pos:start="145:42" pos:end="145:43">&amp;&amp;</operator> <operator pos:start="145:45" pos:end="145:45">*</operator><name pos:start="145:46" pos:end="145:53">tokstart</name> <operator pos:start="145:55" pos:end="145:56">!=</operator> <literal type="number" pos:start="145:58" pos:end="145:61">0x20</literal></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="147:27"><block_content pos:start="147:17" pos:end="147:27">

                <expr_stmt pos:start="147:17" pos:end="147:27"><expr pos:start="147:17" pos:end="147:26"><name pos:start="147:17" pos:end="147:24">tokstart</name><operator pos:start="147:25" pos:end="147:26">++</operator></expr>;</expr_stmt></block_content></block></while>

            <break pos:start="149:13" pos:end="149:18">break;</break>

        <case pos:start="151:9" pos:end="151:17">case <expr pos:start="151:14" pos:end="151:16"><literal type="char" pos:start="151:14" pos:end="151:16">'I'</literal></expr>:</case> <comment type="line" pos:start="151:19" pos:end="151:35">// Interlace type</comment>

            <switch pos:start="153:13" pos:end="193:13">switch <condition pos:start="153:20" pos:end="153:32">(<expr pos:start="153:21" pos:end="153:31"><operator pos:start="153:21" pos:end="153:21">*</operator><name pos:start="153:22" pos:end="153:29">tokstart</name><operator pos:start="153:30" pos:end="153:31">++</operator></expr>)</condition><block pos:start="153:33" pos:end="193:13">{<block_content pos:start="155:13" pos:end="191:26">

            <case pos:start="155:13" pos:end="155:21">case <expr pos:start="155:18" pos:end="155:20"><literal type="char" pos:start="155:18" pos:end="155:20">'?'</literal></expr>:</case>

                <expr_stmt pos:start="157:17" pos:end="157:47"><expr pos:start="157:17" pos:end="157:46"><name pos:start="157:17" pos:end="157:27">field_order</name> <operator pos:start="157:29" pos:end="157:29">=</operator> <name pos:start="157:31" pos:end="157:46">AV_FIELD_UNKNOWN</name></expr>;</expr_stmt>

                <break pos:start="159:17" pos:end="159:22">break;</break>

            <case pos:start="161:13" pos:end="161:21">case <expr pos:start="161:18" pos:end="161:20"><literal type="char" pos:start="161:18" pos:end="161:20">'p'</literal></expr>:</case>

                <expr_stmt pos:start="163:17" pos:end="163:51"><expr pos:start="163:17" pos:end="163:50"><name pos:start="163:17" pos:end="163:27">field_order</name> <operator pos:start="163:29" pos:end="163:29">=</operator> <name pos:start="163:31" pos:end="163:50">AV_FIELD_PROGRESSIVE</name></expr>;</expr_stmt>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <case pos:start="167:13" pos:end="167:21">case <expr pos:start="167:18" pos:end="167:20"><literal type="char" pos:start="167:18" pos:end="167:20">'t'</literal></expr>:</case>

                <expr_stmt pos:start="169:17" pos:end="169:42"><expr pos:start="169:17" pos:end="169:41"><name pos:start="169:17" pos:end="169:27">field_order</name> <operator pos:start="169:29" pos:end="169:29">=</operator> <name pos:start="169:31" pos:end="169:41">AV_FIELD_TT</name></expr>;</expr_stmt>

                <break pos:start="171:17" pos:end="171:22">break;</break>

            <case pos:start="173:13" pos:end="173:21">case <expr pos:start="173:18" pos:end="173:20"><literal type="char" pos:start="173:18" pos:end="173:20">'b'</literal></expr>:</case>

                <expr_stmt pos:start="175:17" pos:end="175:42"><expr pos:start="175:17" pos:end="175:41"><name pos:start="175:17" pos:end="175:27">field_order</name> <operator pos:start="175:29" pos:end="175:29">=</operator> <name pos:start="175:31" pos:end="175:41">AV_FIELD_BB</name></expr>;</expr_stmt>

                <break pos:start="177:17" pos:end="177:22">break;</break>

            <case pos:start="179:13" pos:end="179:21">case <expr pos:start="179:18" pos:end="179:20"><literal type="char" pos:start="179:18" pos:end="179:20">'m'</literal></expr>:</case>

                <expr_stmt pos:start="181:17" pos:end="183:66"><expr pos:start="181:17" pos:end="183:65"><call pos:start="181:17" pos:end="183:65"><name pos:start="181:17" pos:end="181:22">av_log</name><argument_list pos:start="181:23" pos:end="183:65">(<argument pos:start="181:24" pos:end="181:24"><expr pos:start="181:24" pos:end="181:24"><name pos:start="181:24" pos:end="181:24">s</name></expr></argument>, <argument pos:start="181:27" pos:end="181:38"><expr pos:start="181:27" pos:end="181:38"><name pos:start="181:27" pos:end="181:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:41" pos:end="183:64"><expr pos:start="181:41" pos:end="183:64"><literal type="string" pos:start="181:41" pos:end="181:73">"YUV4MPEG stream contains mixed "</literal>

                       <literal type="string" pos:start="183:24" pos:end="183:64">"interlaced and non-interlaced frames.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="185:17" pos:end="185:26">return <expr pos:start="185:24" pos:end="185:25"><operator pos:start="185:24" pos:end="185:24">-</operator><literal type="number" pos:start="185:25" pos:end="185:25">1</literal></expr>;</return>

            <default pos:start="187:13" pos:end="187:20">default:</default>

                <expr_stmt pos:start="189:17" pos:end="189:74"><expr pos:start="189:17" pos:end="189:73"><call pos:start="189:17" pos:end="189:73"><name pos:start="189:17" pos:end="189:22">av_log</name><argument_list pos:start="189:23" pos:end="189:73">(<argument pos:start="189:24" pos:end="189:24"><expr pos:start="189:24" pos:end="189:24"><name pos:start="189:24" pos:end="189:24">s</name></expr></argument>, <argument pos:start="189:27" pos:end="189:38"><expr pos:start="189:27" pos:end="189:38"><name pos:start="189:27" pos:end="189:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="189:41" pos:end="189:72"><expr pos:start="189:41" pos:end="189:72"><literal type="string" pos:start="189:41" pos:end="189:72">"YUV4MPEG has invalid header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="191:17" pos:end="191:26">return <expr pos:start="191:24" pos:end="191:25"><operator pos:start="191:24" pos:end="191:24">-</operator><literal type="number" pos:start="191:25" pos:end="191:25">1</literal></expr>;</return>

            </block_content>}</block></switch>

            <break pos:start="195:13" pos:end="195:18">break;</break>

        <case pos:start="197:9" pos:end="197:17">case <expr pos:start="197:14" pos:end="197:16"><literal type="char" pos:start="197:14" pos:end="197:16">'F'</literal></expr>:</case> <comment type="line" pos:start="197:19" pos:end="197:31">// Frame rate</comment>

            <expr_stmt pos:start="199:13" pos:end="199:54"><expr pos:start="199:13" pos:end="199:53"><call pos:start="199:13" pos:end="199:53"><name pos:start="199:13" pos:end="199:18">sscanf</name><argument_list pos:start="199:19" pos:end="199:53">(<argument pos:start="199:20" pos:end="199:27"><expr pos:start="199:20" pos:end="199:27"><name pos:start="199:20" pos:end="199:27">tokstart</name></expr></argument>, <argument pos:start="199:30" pos:end="199:36"><expr pos:start="199:30" pos:end="199:36"><literal type="string" pos:start="199:30" pos:end="199:36">"%d:%d"</literal></expr></argument>, <argument pos:start="199:39" pos:end="199:44"><expr pos:start="199:39" pos:end="199:44"><operator pos:start="199:39" pos:end="199:39">&amp;</operator><name pos:start="199:40" pos:end="199:44">raten</name></expr></argument>, <argument pos:start="199:47" pos:end="199:52"><expr pos:start="199:47" pos:end="199:52"><operator pos:start="199:47" pos:end="199:47">&amp;</operator><name pos:start="199:48" pos:end="199:52">rated</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="199:56" pos:end="199:72">// 0:0 if unknown</comment>

            <while pos:start="201:13" pos:end="203:27">while <condition pos:start="201:19" pos:end="201:62">(<expr pos:start="201:20" pos:end="201:61"><name pos:start="201:20" pos:end="201:27">tokstart</name> <operator pos:start="201:29" pos:end="201:29">&lt;</operator> <name pos:start="201:31" pos:end="201:40">header_end</name> <operator pos:start="201:42" pos:end="201:43">&amp;&amp;</operator> <operator pos:start="201:45" pos:end="201:45">*</operator><name pos:start="201:46" pos:end="201:53">tokstart</name> <operator pos:start="201:55" pos:end="201:56">!=</operator> <literal type="number" pos:start="201:58" pos:end="201:61">0x20</literal></expr>)</condition><block type="pseudo" pos:start="203:17" pos:end="203:27"><block_content pos:start="203:17" pos:end="203:27">

                <expr_stmt pos:start="203:17" pos:end="203:27"><expr pos:start="203:17" pos:end="203:26"><name pos:start="203:17" pos:end="203:24">tokstart</name><operator pos:start="203:25" pos:end="203:26">++</operator></expr>;</expr_stmt></block_content></block></while>

            <break pos:start="205:13" pos:end="205:18">break;</break>

        <case pos:start="207:9" pos:end="207:17">case <expr pos:start="207:14" pos:end="207:16"><literal type="char" pos:start="207:14" pos:end="207:16">'A'</literal></expr>:</case> <comment type="line" pos:start="207:19" pos:end="207:33">// Pixel aspect</comment>

            <expr_stmt pos:start="209:13" pos:end="209:58"><expr pos:start="209:13" pos:end="209:57"><call pos:start="209:13" pos:end="209:57"><name pos:start="209:13" pos:end="209:18">sscanf</name><argument_list pos:start="209:19" pos:end="209:57">(<argument pos:start="209:20" pos:end="209:27"><expr pos:start="209:20" pos:end="209:27"><name pos:start="209:20" pos:end="209:27">tokstart</name></expr></argument>, <argument pos:start="209:30" pos:end="209:36"><expr pos:start="209:30" pos:end="209:36"><literal type="string" pos:start="209:30" pos:end="209:36">"%d:%d"</literal></expr></argument>, <argument pos:start="209:39" pos:end="209:46"><expr pos:start="209:39" pos:end="209:46"><operator pos:start="209:39" pos:end="209:39">&amp;</operator><name pos:start="209:40" pos:end="209:46">aspectn</name></expr></argument>, <argument pos:start="209:49" pos:end="209:56"><expr pos:start="209:49" pos:end="209:56"><operator pos:start="209:49" pos:end="209:49">&amp;</operator><name pos:start="209:50" pos:end="209:56">aspectd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="line" pos:start="209:60" pos:end="209:76">// 0:0 if unknown</comment>

            <while pos:start="211:13" pos:end="213:27">while <condition pos:start="211:19" pos:end="211:62">(<expr pos:start="211:20" pos:end="211:61"><name pos:start="211:20" pos:end="211:27">tokstart</name> <operator pos:start="211:29" pos:end="211:29">&lt;</operator> <name pos:start="211:31" pos:end="211:40">header_end</name> <operator pos:start="211:42" pos:end="211:43">&amp;&amp;</operator> <operator pos:start="211:45" pos:end="211:45">*</operator><name pos:start="211:46" pos:end="211:53">tokstart</name> <operator pos:start="211:55" pos:end="211:56">!=</operator> <literal type="number" pos:start="211:58" pos:end="211:61">0x20</literal></expr>)</condition><block type="pseudo" pos:start="213:17" pos:end="213:27"><block_content pos:start="213:17" pos:end="213:27">

                <expr_stmt pos:start="213:17" pos:end="213:27"><expr pos:start="213:17" pos:end="213:26"><name pos:start="213:17" pos:end="213:24">tokstart</name><operator pos:start="213:25" pos:end="213:26">++</operator></expr>;</expr_stmt></block_content></block></while>

            <break pos:start="215:13" pos:end="215:18">break;</break>

        <case pos:start="217:9" pos:end="217:17">case <expr pos:start="217:14" pos:end="217:16"><literal type="char" pos:start="217:14" pos:end="217:16">'X'</literal></expr>:</case> <comment type="line" pos:start="217:19" pos:end="217:38">// Vendor extensions</comment>

            <if_stmt pos:start="219:13" pos:end="249:13"><if pos:start="219:13" pos:end="249:13">if <condition pos:start="219:16" pos:end="219:52">(<expr pos:start="219:17" pos:end="219:51"><call pos:start="219:17" pos:end="219:46"><name pos:start="219:17" pos:end="219:23">strncmp</name><argument_list pos:start="219:24" pos:end="219:46">(<argument pos:start="219:25" pos:end="219:32"><expr pos:start="219:25" pos:end="219:32"><literal type="string" pos:start="219:25" pos:end="219:32">"YSCSS="</literal></expr></argument>, <argument pos:start="219:35" pos:end="219:42"><expr pos:start="219:35" pos:end="219:42"><name pos:start="219:35" pos:end="219:42">tokstart</name></expr></argument>, <argument pos:start="219:45" pos:end="219:45"><expr pos:start="219:45" pos:end="219:45"><literal type="number" pos:start="219:45" pos:end="219:45">6</literal></expr></argument>)</argument_list></call> <operator pos:start="219:48" pos:end="219:49">==</operator> <literal type="number" pos:start="219:51" pos:end="219:51">0</literal></expr>)</condition> <block pos:start="219:54" pos:end="249:13">{<block_content pos:start="223:17" pos:end="247:53">

                <comment type="line" pos:start="221:17" pos:end="221:64">// Older nonstandard pixel format representation</comment>

                <expr_stmt pos:start="223:17" pos:end="223:30"><expr pos:start="223:17" pos:end="223:29"><name pos:start="223:17" pos:end="223:24">tokstart</name> <operator pos:start="223:26" pos:end="223:27">+=</operator> <literal type="number" pos:start="223:29" pos:end="223:29">6</literal></expr>;</expr_stmt>

                <if_stmt pos:start="225:17" pos:end="247:53"><if pos:start="225:17" pos:end="227:53">if <condition pos:start="225:20" pos:end="225:57">(<expr pos:start="225:21" pos:end="225:56"><call pos:start="225:21" pos:end="225:51"><name pos:start="225:21" pos:end="225:27">strncmp</name><argument_list pos:start="225:28" pos:end="225:51">(<argument pos:start="225:29" pos:end="225:37"><expr pos:start="225:29" pos:end="225:37"><literal type="string" pos:start="225:29" pos:end="225:37">"420JPEG"</literal></expr></argument>, <argument pos:start="225:40" pos:end="225:47"><expr pos:start="225:40" pos:end="225:47"><name pos:start="225:40" pos:end="225:47">tokstart</name></expr></argument>, <argument pos:start="225:50" pos:end="225:50"><expr pos:start="225:50" pos:end="225:50"><literal type="number" pos:start="225:50" pos:end="225:50">7</literal></expr></argument>)</argument_list></call> <operator pos:start="225:53" pos:end="225:54">==</operator> <literal type="number" pos:start="225:56" pos:end="225:56">0</literal></expr>)</condition><block type="pseudo" pos:start="227:21" pos:end="227:53"><block_content pos:start="227:21" pos:end="227:53">

                    <expr_stmt pos:start="227:21" pos:end="227:53"><expr pos:start="227:21" pos:end="227:52"><name pos:start="227:21" pos:end="227:31">alt_pix_fmt</name> <operator pos:start="227:33" pos:end="227:33">=</operator> <name pos:start="227:35" pos:end="227:52">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="229:17" pos:end="231:53">else if <condition pos:start="229:25" pos:end="229:63">(<expr pos:start="229:26" pos:end="229:62"><call pos:start="229:26" pos:end="229:57"><name pos:start="229:26" pos:end="229:32">strncmp</name><argument_list pos:start="229:33" pos:end="229:57">(<argument pos:start="229:34" pos:end="229:43"><expr pos:start="229:34" pos:end="229:43"><literal type="string" pos:start="229:34" pos:end="229:43">"420MPEG2"</literal></expr></argument>, <argument pos:start="229:46" pos:end="229:53"><expr pos:start="229:46" pos:end="229:53"><name pos:start="229:46" pos:end="229:53">tokstart</name></expr></argument>, <argument pos:start="229:56" pos:end="229:56"><expr pos:start="229:56" pos:end="229:56"><literal type="number" pos:start="229:56" pos:end="229:56">8</literal></expr></argument>)</argument_list></call> <operator pos:start="229:59" pos:end="229:60">==</operator> <literal type="number" pos:start="229:62" pos:end="229:62">0</literal></expr>)</condition><block type="pseudo" pos:start="231:21" pos:end="231:53"><block_content pos:start="231:21" pos:end="231:53">

                    <expr_stmt pos:start="231:21" pos:end="231:53"><expr pos:start="231:21" pos:end="231:52"><name pos:start="231:21" pos:end="231:31">alt_pix_fmt</name> <operator pos:start="231:33" pos:end="231:33">=</operator> <name pos:start="231:35" pos:end="231:52">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="233:17" pos:end="235:53">else if <condition pos:start="233:25" pos:end="233:63">(<expr pos:start="233:26" pos:end="233:62"><call pos:start="233:26" pos:end="233:57"><name pos:start="233:26" pos:end="233:32">strncmp</name><argument_list pos:start="233:33" pos:end="233:57">(<argument pos:start="233:34" pos:end="233:43"><expr pos:start="233:34" pos:end="233:43"><literal type="string" pos:start="233:34" pos:end="233:43">"420PALDV"</literal></expr></argument>, <argument pos:start="233:46" pos:end="233:53"><expr pos:start="233:46" pos:end="233:53"><name pos:start="233:46" pos:end="233:53">tokstart</name></expr></argument>, <argument pos:start="233:56" pos:end="233:56"><expr pos:start="233:56" pos:end="233:56"><literal type="number" pos:start="233:56" pos:end="233:56">8</literal></expr></argument>)</argument_list></call> <operator pos:start="233:59" pos:end="233:60">==</operator> <literal type="number" pos:start="233:62" pos:end="233:62">0</literal></expr>)</condition><block type="pseudo" pos:start="235:21" pos:end="235:53"><block_content pos:start="235:21" pos:end="235:53">

                    <expr_stmt pos:start="235:21" pos:end="235:53"><expr pos:start="235:21" pos:end="235:52"><name pos:start="235:21" pos:end="235:31">alt_pix_fmt</name> <operator pos:start="235:33" pos:end="235:33">=</operator> <name pos:start="235:35" pos:end="235:52">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="237:17" pos:end="239:53">else if <condition pos:start="237:25" pos:end="237:58">(<expr pos:start="237:26" pos:end="237:57"><call pos:start="237:26" pos:end="237:52"><name pos:start="237:26" pos:end="237:32">strncmp</name><argument_list pos:start="237:33" pos:end="237:52">(<argument pos:start="237:34" pos:end="237:38"><expr pos:start="237:34" pos:end="237:38"><literal type="string" pos:start="237:34" pos:end="237:38">"411"</literal></expr></argument>, <argument pos:start="237:41" pos:end="237:48"><expr pos:start="237:41" pos:end="237:48"><name pos:start="237:41" pos:end="237:48">tokstart</name></expr></argument>, <argument pos:start="237:51" pos:end="237:51"><expr pos:start="237:51" pos:end="237:51"><literal type="number" pos:start="237:51" pos:end="237:51">3</literal></expr></argument>)</argument_list></call> <operator pos:start="237:54" pos:end="237:55">==</operator> <literal type="number" pos:start="237:57" pos:end="237:57">0</literal></expr>)</condition><block type="pseudo" pos:start="239:21" pos:end="239:53"><block_content pos:start="239:21" pos:end="239:53">

                    <expr_stmt pos:start="239:21" pos:end="239:53"><expr pos:start="239:21" pos:end="239:52"><name pos:start="239:21" pos:end="239:31">alt_pix_fmt</name> <operator pos:start="239:33" pos:end="239:33">=</operator> <name pos:start="239:35" pos:end="239:52">AV_PIX_FMT_YUV411P</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="241:17" pos:end="243:53">else if <condition pos:start="241:25" pos:end="241:58">(<expr pos:start="241:26" pos:end="241:57"><call pos:start="241:26" pos:end="241:52"><name pos:start="241:26" pos:end="241:32">strncmp</name><argument_list pos:start="241:33" pos:end="241:52">(<argument pos:start="241:34" pos:end="241:38"><expr pos:start="241:34" pos:end="241:38"><literal type="string" pos:start="241:34" pos:end="241:38">"422"</literal></expr></argument>, <argument pos:start="241:41" pos:end="241:48"><expr pos:start="241:41" pos:end="241:48"><name pos:start="241:41" pos:end="241:48">tokstart</name></expr></argument>, <argument pos:start="241:51" pos:end="241:51"><expr pos:start="241:51" pos:end="241:51"><literal type="number" pos:start="241:51" pos:end="241:51">3</literal></expr></argument>)</argument_list></call> <operator pos:start="241:54" pos:end="241:55">==</operator> <literal type="number" pos:start="241:57" pos:end="241:57">0</literal></expr>)</condition><block type="pseudo" pos:start="243:21" pos:end="243:53"><block_content pos:start="243:21" pos:end="243:53">

                    <expr_stmt pos:start="243:21" pos:end="243:53"><expr pos:start="243:21" pos:end="243:52"><name pos:start="243:21" pos:end="243:31">alt_pix_fmt</name> <operator pos:start="243:33" pos:end="243:33">=</operator> <name pos:start="243:35" pos:end="243:52">AV_PIX_FMT_YUV422P</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="245:17" pos:end="247:53">else if <condition pos:start="245:25" pos:end="245:58">(<expr pos:start="245:26" pos:end="245:57"><call pos:start="245:26" pos:end="245:52"><name pos:start="245:26" pos:end="245:32">strncmp</name><argument_list pos:start="245:33" pos:end="245:52">(<argument pos:start="245:34" pos:end="245:38"><expr pos:start="245:34" pos:end="245:38"><literal type="string" pos:start="245:34" pos:end="245:38">"444"</literal></expr></argument>, <argument pos:start="245:41" pos:end="245:48"><expr pos:start="245:41" pos:end="245:48"><name pos:start="245:41" pos:end="245:48">tokstart</name></expr></argument>, <argument pos:start="245:51" pos:end="245:51"><expr pos:start="245:51" pos:end="245:51"><literal type="number" pos:start="245:51" pos:end="245:51">3</literal></expr></argument>)</argument_list></call> <operator pos:start="245:54" pos:end="245:55">==</operator> <literal type="number" pos:start="245:57" pos:end="245:57">0</literal></expr>)</condition><block type="pseudo" pos:start="247:21" pos:end="247:53"><block_content pos:start="247:21" pos:end="247:53">

                    <expr_stmt pos:start="247:21" pos:end="247:53"><expr pos:start="247:21" pos:end="247:52"><name pos:start="247:21" pos:end="247:31">alt_pix_fmt</name> <operator pos:start="247:33" pos:end="247:33">=</operator> <name pos:start="247:35" pos:end="247:52">AV_PIX_FMT_YUV444P</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <while pos:start="251:13" pos:end="253:27">while <condition pos:start="251:19" pos:end="251:62">(<expr pos:start="251:20" pos:end="251:61"><name pos:start="251:20" pos:end="251:27">tokstart</name> <operator pos:start="251:29" pos:end="251:29">&lt;</operator> <name pos:start="251:31" pos:end="251:40">header_end</name> <operator pos:start="251:42" pos:end="251:43">&amp;&amp;</operator> <operator pos:start="251:45" pos:end="251:45">*</operator><name pos:start="251:46" pos:end="251:53">tokstart</name> <operator pos:start="251:55" pos:end="251:56">!=</operator> <literal type="number" pos:start="251:58" pos:end="251:61">0x20</literal></expr>)</condition><block type="pseudo" pos:start="253:17" pos:end="253:27"><block_content pos:start="253:17" pos:end="253:27">

                <expr_stmt pos:start="253:17" pos:end="253:27"><expr pos:start="253:17" pos:end="253:26"><name pos:start="253:17" pos:end="253:24">tokstart</name><operator pos:start="253:25" pos:end="253:26">++</operator></expr>;</expr_stmt></block_content></block></while>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <if_stmt pos:start="263:5" pos:end="269:5"><if pos:start="263:5" pos:end="269:5">if <condition pos:start="263:8" pos:end="263:36">(<expr pos:start="263:9" pos:end="263:35"><name pos:start="263:9" pos:end="263:13">width</name> <operator pos:start="263:15" pos:end="263:16">==</operator> <operator pos:start="263:18" pos:end="263:18">-</operator><literal type="number" pos:start="263:19" pos:end="263:19">1</literal> <operator pos:start="263:21" pos:end="263:22">||</operator> <name pos:start="263:24" pos:end="263:29">height</name> <operator pos:start="263:31" pos:end="263:32">==</operator> <operator pos:start="263:34" pos:end="263:34">-</operator><literal type="number" pos:start="263:35" pos:end="263:35">1</literal></expr>)</condition> <block pos:start="263:38" pos:end="269:5">{<block_content pos:start="265:9" pos:end="267:18">

        <expr_stmt pos:start="265:9" pos:end="265:66"><expr pos:start="265:9" pos:end="265:65"><call pos:start="265:9" pos:end="265:65"><name pos:start="265:9" pos:end="265:14">av_log</name><argument_list pos:start="265:15" pos:end="265:65">(<argument pos:start="265:16" pos:end="265:16"><expr pos:start="265:16" pos:end="265:16"><name pos:start="265:16" pos:end="265:16">s</name></expr></argument>, <argument pos:start="265:19" pos:end="265:30"><expr pos:start="265:19" pos:end="265:30"><name pos:start="265:19" pos:end="265:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="265:33" pos:end="265:64"><expr pos:start="265:33" pos:end="265:64"><literal type="string" pos:start="265:33" pos:end="265:64">"YUV4MPEG has invalid header.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="267:9" pos:end="267:18">return <expr pos:start="267:16" pos:end="267:17"><operator pos:start="267:16" pos:end="267:16">-</operator><literal type="number" pos:start="267:17" pos:end="267:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="273:5" pos:end="283:5"><if pos:start="273:5" pos:end="283:5">if <condition pos:start="273:8" pos:end="273:35">(<expr pos:start="273:9" pos:end="273:34"><name pos:start="273:9" pos:end="273:15">pix_fmt</name> <operator pos:start="273:17" pos:end="273:18">==</operator> <name pos:start="273:20" pos:end="273:34">AV_PIX_FMT_NONE</name></expr>)</condition> <block pos:start="273:37" pos:end="283:5">{<block_content pos:start="275:9" pos:end="281:34">

        <if_stmt pos:start="275:9" pos:end="281:34"><if pos:start="275:9" pos:end="277:41">if <condition pos:start="275:12" pos:end="275:43">(<expr pos:start="275:13" pos:end="275:42"><name pos:start="275:13" pos:end="275:23">alt_pix_fmt</name> <operator pos:start="275:25" pos:end="275:26">==</operator> <name pos:start="275:28" pos:end="275:42">AV_PIX_FMT_NONE</name></expr>)</condition><block type="pseudo" pos:start="277:13" pos:end="277:41"><block_content pos:start="277:13" pos:end="277:41">

            <expr_stmt pos:start="277:13" pos:end="277:41"><expr pos:start="277:13" pos:end="277:40"><name pos:start="277:13" pos:end="277:19">pix_fmt</name> <operator pos:start="277:21" pos:end="277:21">=</operator> <name pos:start="277:23" pos:end="277:40">AV_PIX_FMT_YUV420P</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="279:9" pos:end="281:34">else<block type="pseudo" pos:start="281:13" pos:end="281:34"><block_content pos:start="281:13" pos:end="281:34">

            <expr_stmt pos:start="281:13" pos:end="281:34"><expr pos:start="281:13" pos:end="281:33"><name pos:start="281:13" pos:end="281:19">pix_fmt</name> <operator pos:start="281:21" pos:end="281:21">=</operator> <name pos:start="281:23" pos:end="281:33">alt_pix_fmt</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="287:5" pos:end="295:5"><if pos:start="287:5" pos:end="295:5">if <condition pos:start="287:8" pos:end="287:33">(<expr pos:start="287:9" pos:end="287:32"><name pos:start="287:9" pos:end="287:13">raten</name> <operator pos:start="287:15" pos:end="287:16">&lt;=</operator> <literal type="number" pos:start="287:18" pos:end="287:18">0</literal> <operator pos:start="287:20" pos:end="287:21">||</operator> <name pos:start="287:23" pos:end="287:27">rated</name> <operator pos:start="287:29" pos:end="287:30">&lt;=</operator> <literal type="number" pos:start="287:32" pos:end="287:32">0</literal></expr>)</condition> <block pos:start="287:35" pos:end="295:5">{<block_content pos:start="291:9" pos:end="293:18">

        <comment type="line" pos:start="289:9" pos:end="289:29">// Frame rate unknown</comment>

        <expr_stmt pos:start="291:9" pos:end="291:19"><expr pos:start="291:9" pos:end="291:18"><name pos:start="291:9" pos:end="291:13">raten</name> <operator pos:start="291:15" pos:end="291:15">=</operator> <literal type="number" pos:start="291:17" pos:end="291:18">25</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="293:9" pos:end="293:18"><expr pos:start="293:9" pos:end="293:17"><name pos:start="293:9" pos:end="293:13">rated</name> <operator pos:start="293:15" pos:end="293:15">=</operator> <literal type="number" pos:start="293:17" pos:end="293:17">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="299:5" pos:end="305:5"><if pos:start="299:5" pos:end="305:5">if <condition pos:start="299:8" pos:end="299:37">(<expr pos:start="299:9" pos:end="299:36"><name pos:start="299:9" pos:end="299:15">aspectn</name> <operator pos:start="299:17" pos:end="299:18">==</operator> <literal type="number" pos:start="299:20" pos:end="299:20">0</literal> <operator pos:start="299:22" pos:end="299:23">&amp;&amp;</operator> <name pos:start="299:25" pos:end="299:31">aspectd</name> <operator pos:start="299:33" pos:end="299:34">==</operator> <literal type="number" pos:start="299:36" pos:end="299:36">0</literal></expr>)</condition> <block pos:start="299:39" pos:end="305:5">{<block_content pos:start="303:9" pos:end="303:20">

        <comment type="line" pos:start="301:9" pos:end="301:31">// Pixel aspect unknown</comment>

        <expr_stmt pos:start="303:9" pos:end="303:20"><expr pos:start="303:9" pos:end="303:19"><name pos:start="303:9" pos:end="303:15">aspectd</name> <operator pos:start="303:17" pos:end="303:17">=</operator> <literal type="number" pos:start="303:19" pos:end="303:19">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="309:5" pos:end="309:38"><expr pos:start="309:5" pos:end="309:37"><name pos:start="309:5" pos:end="309:6">st</name> <operator pos:start="309:8" pos:end="309:8">=</operator> <call pos:start="309:10" pos:end="309:37"><name pos:start="309:10" pos:end="309:28">avformat_new_stream</name><argument_list pos:start="309:29" pos:end="309:37">(<argument pos:start="309:30" pos:end="309:30"><expr pos:start="309:30" pos:end="309:30"><name pos:start="309:30" pos:end="309:30">s</name></expr></argument>, <argument pos:start="309:33" pos:end="309:36"><expr pos:start="309:33" pos:end="309:36"><name pos:start="309:33" pos:end="309:36">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="311:5" pos:end="313:31"><if pos:start="311:5" pos:end="313:31">if <condition pos:start="311:8" pos:end="311:12">(<expr pos:start="311:9" pos:end="311:11"><operator pos:start="311:9" pos:end="311:9">!</operator><name pos:start="311:10" pos:end="311:11">st</name></expr>)</condition><block type="pseudo" pos:start="313:9" pos:end="313:31"><block_content pos:start="313:9" pos:end="313:31">

        <return pos:start="313:9" pos:end="313:31">return <expr pos:start="313:16" pos:end="313:30"><call pos:start="313:16" pos:end="313:30"><name pos:start="313:16" pos:end="313:22">AVERROR</name><argument_list pos:start="313:23" pos:end="313:30">(<argument pos:start="313:24" pos:end="313:29"><expr pos:start="313:24" pos:end="313:29"><name pos:start="313:24" pos:end="313:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="315:5" pos:end="315:30"><expr pos:start="315:5" pos:end="315:29"><name pos:start="315:5" pos:end="315:20"><name pos:start="315:5" pos:end="315:6">st</name><operator pos:start="315:7" pos:end="315:8">-&gt;</operator><name pos:start="315:9" pos:end="315:13">codec</name><operator pos:start="315:14" pos:end="315:15">-&gt;</operator><name pos:start="315:16" pos:end="315:20">width</name></name>  <operator pos:start="315:23" pos:end="315:23">=</operator> <name pos:start="315:25" pos:end="315:29">width</name></expr>;</expr_stmt>

    <expr_stmt pos:start="317:5" pos:end="317:31"><expr pos:start="317:5" pos:end="317:30"><name pos:start="317:5" pos:end="317:21"><name pos:start="317:5" pos:end="317:6">st</name><operator pos:start="317:7" pos:end="317:8">-&gt;</operator><name pos:start="317:9" pos:end="317:13">codec</name><operator pos:start="317:14" pos:end="317:15">-&gt;</operator><name pos:start="317:16" pos:end="317:21">height</name></name> <operator pos:start="317:23" pos:end="317:23">=</operator> <name pos:start="317:25" pos:end="317:30">height</name></expr>;</expr_stmt>

    <expr_stmt pos:start="319:5" pos:end="319:61"><expr pos:start="319:5" pos:end="319:60"><call pos:start="319:5" pos:end="319:60"><name pos:start="319:5" pos:end="319:13">av_reduce</name><argument_list pos:start="319:14" pos:end="319:60">(<argument pos:start="319:15" pos:end="319:20"><expr pos:start="319:15" pos:end="319:20"><operator pos:start="319:15" pos:end="319:15">&amp;</operator><name pos:start="319:16" pos:end="319:20">raten</name></expr></argument>, <argument pos:start="319:23" pos:end="319:28"><expr pos:start="319:23" pos:end="319:28"><operator pos:start="319:23" pos:end="319:23">&amp;</operator><name pos:start="319:24" pos:end="319:28">rated</name></expr></argument>, <argument pos:start="319:31" pos:end="319:35"><expr pos:start="319:31" pos:end="319:35"><name pos:start="319:31" pos:end="319:35">raten</name></expr></argument>, <argument pos:start="319:38" pos:end="319:42"><expr pos:start="319:38" pos:end="319:42"><name pos:start="319:38" pos:end="319:42">rated</name></expr></argument>, <argument pos:start="319:45" pos:end="319:59"><expr pos:start="319:45" pos:end="319:59"><operator pos:start="319:45" pos:end="319:45">(</operator><literal type="number" pos:start="319:46" pos:end="319:48">1UL</literal> <operator pos:start="319:50" pos:end="319:51">&lt;&lt;</operator> <literal type="number" pos:start="319:53" pos:end="319:54">31</literal><operator pos:start="319:55" pos:end="319:55">)</operator> <operator pos:start="319:57" pos:end="319:57">-</operator> <literal type="number" pos:start="319:59" pos:end="319:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="321:5" pos:end="321:46"><expr pos:start="321:5" pos:end="321:45"><call pos:start="321:5" pos:end="321:45"><name pos:start="321:5" pos:end="321:23">avpriv_set_pts_info</name><argument_list pos:start="321:24" pos:end="321:45">(<argument pos:start="321:25" pos:end="321:26"><expr pos:start="321:25" pos:end="321:26"><name pos:start="321:25" pos:end="321:26">st</name></expr></argument>, <argument pos:start="321:29" pos:end="321:30"><expr pos:start="321:29" pos:end="321:30"><literal type="number" pos:start="321:29" pos:end="321:30">64</literal></expr></argument>, <argument pos:start="321:33" pos:end="321:37"><expr pos:start="321:33" pos:end="321:37"><name pos:start="321:33" pos:end="321:37">rated</name></expr></argument>, <argument pos:start="321:40" pos:end="321:44"><expr pos:start="321:40" pos:end="321:44"><name pos:start="321:40" pos:end="321:44">raten</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="323:5" pos:end="323:64"><expr pos:start="323:5" pos:end="323:63"><name pos:start="323:5" pos:end="323:22"><name pos:start="323:5" pos:end="323:6">st</name><operator pos:start="323:7" pos:end="323:8">-&gt;</operator><name pos:start="323:9" pos:end="323:22">avg_frame_rate</name></name>                <operator pos:start="323:39" pos:end="323:39">=</operator> <call pos:start="323:41" pos:end="323:63"><name pos:start="323:41" pos:end="323:48">av_inv_q</name><argument_list pos:start="323:49" pos:end="323:63">(<argument pos:start="323:50" pos:end="323:62"><expr pos:start="323:50" pos:end="323:62"><name pos:start="323:50" pos:end="323:62"><name pos:start="323:50" pos:end="323:51">st</name><operator pos:start="323:52" pos:end="323:53">-&gt;</operator><name pos:start="323:54" pos:end="323:62">time_base</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="325:5" pos:end="325:48"><expr pos:start="325:5" pos:end="325:47"><name pos:start="325:5" pos:end="325:22"><name pos:start="325:5" pos:end="325:6">st</name><operator pos:start="325:7" pos:end="325:8">-&gt;</operator><name pos:start="325:9" pos:end="325:13">codec</name><operator pos:start="325:14" pos:end="325:15">-&gt;</operator><name pos:start="325:16" pos:end="325:22">pix_fmt</name></name>                <operator pos:start="325:39" pos:end="325:39">=</operator> <name pos:start="325:41" pos:end="325:47">pix_fmt</name></expr>;</expr_stmt>

    <expr_stmt pos:start="327:5" pos:end="327:59"><expr pos:start="327:5" pos:end="327:58"><name pos:start="327:5" pos:end="327:25"><name pos:start="327:5" pos:end="327:6">st</name><operator pos:start="327:7" pos:end="327:8">-&gt;</operator><name pos:start="327:9" pos:end="327:13">codec</name><operator pos:start="327:14" pos:end="327:15">-&gt;</operator><name pos:start="327:16" pos:end="327:25">codec_type</name></name>             <operator pos:start="327:39" pos:end="327:39">=</operator> <name pos:start="327:41" pos:end="327:58">AVMEDIA_TYPE_VIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="329:5" pos:end="329:61"><expr pos:start="329:5" pos:end="329:60"><name pos:start="329:5" pos:end="329:23"><name pos:start="329:5" pos:end="329:6">st</name><operator pos:start="329:7" pos:end="329:8">-&gt;</operator><name pos:start="329:9" pos:end="329:13">codec</name><operator pos:start="329:14" pos:end="329:15">-&gt;</operator><name pos:start="329:16" pos:end="329:23">codec_id</name></name>               <operator pos:start="329:39" pos:end="329:39">=</operator> <name pos:start="329:41" pos:end="329:60">AV_CODEC_ID_RAWVIDEO</name></expr>;</expr_stmt>

    <expr_stmt pos:start="331:5" pos:end="331:73"><expr pos:start="331:5" pos:end="331:72"><name pos:start="331:5" pos:end="331:27"><name pos:start="331:5" pos:end="331:6">st</name><operator pos:start="331:7" pos:end="331:8">-&gt;</operator><name pos:start="331:9" pos:end="331:27">sample_aspect_ratio</name></name>           <operator pos:start="331:39" pos:end="331:39">=</operator> <operator pos:start="331:41" pos:end="331:41">(</operator><name pos:start="331:42" pos:end="331:51">AVRational</name><operator pos:start="331:52" pos:end="331:52">)</operator><block pos:start="331:53" pos:end="331:72">{ <expr pos:start="331:55" pos:end="331:61"><name pos:start="331:55" pos:end="331:61">aspectn</name></expr>, <expr pos:start="331:64" pos:end="331:70"><name pos:start="331:64" pos:end="331:70">aspectd</name></expr> }</block></expr>;</expr_stmt>

    <expr_stmt pos:start="333:5" pos:end="333:63"><expr pos:start="333:5" pos:end="333:62"><name pos:start="333:5" pos:end="333:37"><name pos:start="333:5" pos:end="333:6">st</name><operator pos:start="333:7" pos:end="333:8">-&gt;</operator><name pos:start="333:9" pos:end="333:13">codec</name><operator pos:start="333:14" pos:end="333:15">-&gt;</operator><name pos:start="333:16" pos:end="333:37">chroma_sample_location</name></name> <operator pos:start="333:39" pos:end="333:39">=</operator> <name pos:start="333:41" pos:end="333:62">chroma_sample_location</name></expr>;</expr_stmt>

    <expr_stmt pos:start="335:5" pos:end="335:52"><expr pos:start="335:5" pos:end="335:51"><name pos:start="335:5" pos:end="335:26"><name pos:start="335:5" pos:end="335:6">st</name><operator pos:start="335:7" pos:end="335:8">-&gt;</operator><name pos:start="335:9" pos:end="335:13">codec</name><operator pos:start="335:14" pos:end="335:15">-&gt;</operator><name pos:start="335:16" pos:end="335:26">field_order</name></name>            <operator pos:start="335:39" pos:end="335:39">=</operator> <name pos:start="335:41" pos:end="335:51">field_order</name></expr>;</expr_stmt>



    <return pos:start="339:5" pos:end="339:13">return <expr pos:start="339:12" pos:end="339:12"><literal type="number" pos:start="339:12" pos:end="339:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
