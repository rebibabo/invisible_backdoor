<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11311.c" pos:tabs="8"><function pos:start="1:1" pos:end="17:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:36">ne2000_mem_writel</name><parameter_list pos:start="1:37" pos:end="3:50">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:51"><name pos:start="1:38" pos:end="1:48">NE2000State</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">s</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:66"><decl pos:start="1:54" pos:end="1:66"><type pos:start="1:54" pos:end="1:66"><name pos:start="1:54" pos:end="1:61">uint32_t</name></type> <name pos:start="1:63" pos:end="1:66">addr</name></decl></parameter>,

                                     <parameter pos:start="3:38" pos:end="3:49"><decl pos:start="3:38" pos:end="3:49"><type pos:start="3:38" pos:end="3:49"><name pos:start="3:38" pos:end="3:45">uint32_t</name></type> <name pos:start="3:47" pos:end="3:49">val</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="17:1">{<block_content pos:start="7:5" pos:end="15:5">

    <expr_stmt pos:start="7:5" pos:end="7:15"><expr pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:8">addr</name> <operator pos:start="7:10" pos:end="7:11">&amp;=</operator> <operator pos:start="7:13" pos:end="7:13">~</operator><literal type="number" pos:start="7:14" pos:end="7:14">1</literal></expr>;</expr_stmt> <comment type="block" pos:start="7:17" pos:end="7:60">/* XXX: check exact behaviour if not even */</comment>

    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="11:62">(<expr pos:start="9:9" pos:end="11:61"><name pos:start="9:9" pos:end="9:12">addr</name> <operator pos:start="9:14" pos:end="9:14">&lt;</operator> <literal type="number" pos:start="9:16" pos:end="9:17">32</literal> <operator pos:start="9:19" pos:end="9:20">||</operator>

        <operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:13">addr</name> <operator pos:start="11:15" pos:end="11:16">&gt;=</operator> <name pos:start="11:18" pos:end="11:34">NE2000_PMEM_START</name> <operator pos:start="11:36" pos:end="11:37">&amp;&amp;</operator> <name pos:start="11:39" pos:end="11:42">addr</name> <operator pos:start="11:44" pos:end="11:44">&lt;</operator> <name pos:start="11:46" pos:end="11:60">NE2000_MEM_SIZE</name><operator pos:start="11:61" pos:end="11:61">)</operator></expr>)</condition> <block pos:start="11:64" pos:end="15:5">{<block_content pos:start="13:9" pos:end="13:37">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><call pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:16">stl_le_p</name><argument_list pos:start="13:17" pos:end="13:36">(<argument pos:start="13:18" pos:end="13:30"><expr pos:start="13:18" pos:end="13:30"><name pos:start="13:18" pos:end="13:23"><name pos:start="13:18" pos:end="13:18">s</name><operator pos:start="13:19" pos:end="13:20">-&gt;</operator><name pos:start="13:21" pos:end="13:23">mem</name></name> <operator pos:start="13:25" pos:end="13:25">+</operator> <name pos:start="13:27" pos:end="13:30">addr</name></expr></argument>, <argument pos:start="13:33" pos:end="13:35"><expr pos:start="13:33" pos:end="13:35"><name pos:start="13:33" pos:end="13:35">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
