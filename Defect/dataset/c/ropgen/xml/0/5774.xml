<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5774.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:17"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:17">int</name></type> <name pos:start="1:19" pos:end="1:35">svq3_decode_block</name><parameter_list pos:start="1:36" pos:end="3:62">(<parameter pos:start="1:37" pos:end="1:53"><decl pos:start="1:37" pos:end="1:53"><type pos:start="1:37" pos:end="1:53"><name pos:start="1:37" pos:end="1:49">GetBitContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">gb</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:69"><decl pos:start="1:56" pos:end="1:69"><type pos:start="1:56" pos:end="1:69"><name pos:start="1:56" pos:end="1:62">DCTELEM</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">block</name></decl></parameter>,

                                    <parameter pos:start="3:37" pos:end="3:45"><decl pos:start="3:37" pos:end="3:45"><type pos:start="3:37" pos:end="3:45"><name pos:start="3:37" pos:end="3:39">int</name></type> <name pos:start="3:41" pos:end="3:45">index</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:61"><decl pos:start="3:48" pos:end="3:61"><type pos:start="3:48" pos:end="3:61"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:56">int</name></type> <name pos:start="3:58" pos:end="3:61">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="111:1">{<block_content pos:start="7:5" pos:end="109:13">

    <decl_stmt pos:start="7:5" pos:end="9:68"><decl pos:start="7:5" pos:end="9:67"><type pos:start="7:5" pos:end="7:31"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name> <modifier pos:start="7:26" pos:end="7:26">*</modifier><specifier pos:start="7:27" pos:end="7:31">const</specifier></type> <name pos:start="7:33" pos:end="7:48"><name pos:start="7:33" pos:end="7:45">scan_patterns</name><index pos:start="7:46" pos:end="7:48">[<expr pos:start="7:47" pos:end="7:47"><literal type="number" pos:start="7:47" pos:end="7:47">4</literal></expr>]</index></name> <init pos:start="7:50" pos:end="9:67">=

    <expr pos:start="9:5" pos:end="9:67"><block pos:start="9:5" pos:end="9:67">{ <expr pos:start="9:7" pos:end="9:25"><name pos:start="9:7" pos:end="9:25">luma_dc_zigzag_scan</name></expr>, <expr pos:start="9:28" pos:end="9:38"><name pos:start="9:28" pos:end="9:38">zigzag_scan</name></expr>, <expr pos:start="9:41" pos:end="9:49"><name pos:start="9:41" pos:end="9:49">svq3_scan</name></expr>, <expr pos:start="9:52" pos:end="9:65"><name pos:start="9:52" pos:end="9:65">chroma_dc_scan</name></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="13:5" pos:end="13:37"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">run</name></decl>, <decl pos:start="13:14" pos:end="13:18"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:14" pos:end="13:18">level</name></decl>, <decl pos:start="13:21" pos:end="13:24"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:21" pos:end="13:24">sign</name></decl>, <decl pos:start="13:27" pos:end="13:29"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:27" pos:end="13:29">vlc</name></decl>, <decl pos:start="13:32" pos:end="13:36"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:32" pos:end="13:36">limit</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:38"><decl pos:start="15:5" pos:end="15:37"><type pos:start="15:5" pos:end="15:13"><specifier pos:start="15:5" pos:end="15:9">const</specifier> <name pos:start="15:11" pos:end="15:13">int</name></type> <name pos:start="15:15" pos:end="15:19">intra</name> <init pos:start="15:21" pos:end="15:37">= <expr pos:start="15:23" pos:end="15:37"><operator pos:start="15:23" pos:end="15:23">(</operator><literal type="number" pos:start="15:24" pos:end="15:24">3</literal> <operator pos:start="15:26" pos:end="15:26">*</operator> <name pos:start="15:28" pos:end="15:31">type</name><operator pos:start="15:32" pos:end="15:32">)</operator> <operator pos:start="15:34" pos:end="15:35">&gt;&gt;</operator> <literal type="number" pos:start="15:37" pos:end="15:37">2</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:52"><decl pos:start="17:5" pos:end="17:51"><type pos:start="17:5" pos:end="17:24"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:17">uint8_t</name> <modifier pos:start="17:19" pos:end="17:19">*</modifier><specifier pos:start="17:20" pos:end="17:24">const</specifier></type> <name pos:start="17:26" pos:end="17:29">scan</name> <init pos:start="17:31" pos:end="17:51">= <expr pos:start="17:33" pos:end="17:51"><name pos:start="17:33" pos:end="17:51"><name pos:start="17:33" pos:end="17:45">scan_patterns</name><index pos:start="17:46" pos:end="17:51">[<expr pos:start="17:47" pos:end="17:50"><name pos:start="17:47" pos:end="17:50">type</name></expr>]</index></name></expr></init></decl>;</decl_stmt>



    <for pos:start="21:5" pos:end="105:5">for <control pos:start="21:9" pos:end="21:70">(<init pos:start="21:10" pos:end="21:31"><expr pos:start="21:10" pos:end="21:30"><name pos:start="21:10" pos:end="21:14">limit</name> <operator pos:start="21:16" pos:end="21:16">=</operator> <operator pos:start="21:18" pos:end="21:18">(</operator><literal type="number" pos:start="21:19" pos:end="21:20">16</literal> <operator pos:start="21:22" pos:end="21:23">&gt;&gt;</operator> <name pos:start="21:25" pos:end="21:29">intra</name><operator pos:start="21:30" pos:end="21:30">)</operator></expr>;</init> <condition pos:start="21:33" pos:end="21:43"><expr pos:start="21:33" pos:end="21:42"><name pos:start="21:33" pos:end="21:37">index</name> <operator pos:start="21:39" pos:end="21:39">&lt;</operator> <literal type="number" pos:start="21:41" pos:end="21:42">16</literal></expr>;</condition> <incr pos:start="21:45" pos:end="21:69"><expr pos:start="21:45" pos:end="21:57"><name pos:start="21:45" pos:end="21:49">index</name> <operator pos:start="21:51" pos:end="21:51">=</operator> <name pos:start="21:53" pos:end="21:57">limit</name></expr><operator pos:start="21:58" pos:end="21:58">,</operator> <expr pos:start="21:60" pos:end="21:69"><name pos:start="21:60" pos:end="21:64">limit</name> <operator pos:start="21:66" pos:end="21:67">+=</operator> <literal type="number" pos:start="21:69" pos:end="21:69">8</literal></expr></incr>)</control> <block pos:start="21:72" pos:end="105:5">{<block_content pos:start="23:9" pos:end="103:9">

        <for pos:start="23:9" pos:end="95:9">for <control pos:start="23:13" pos:end="23:60">(<init pos:start="23:14" pos:end="23:14">;</init> <condition pos:start="23:16" pos:end="23:51"><expr pos:start="23:16" pos:end="23:50"><operator pos:start="23:16" pos:end="23:16">(</operator><name pos:start="23:17" pos:end="23:19">vlc</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <call pos:start="23:23" pos:end="23:44"><name pos:start="23:23" pos:end="23:40">svq3_get_ue_golomb</name><argument_list pos:start="23:41" pos:end="23:44">(<argument pos:start="23:42" pos:end="23:43"><expr pos:start="23:42" pos:end="23:43"><name pos:start="23:42" pos:end="23:43">gb</name></expr></argument>)</argument_list></call><operator pos:start="23:45" pos:end="23:45">)</operator> <operator pos:start="23:47" pos:end="23:48">!=</operator> <literal type="number" pos:start="23:50" pos:end="23:50">0</literal></expr>;</condition> <incr pos:start="23:53" pos:end="23:59"><expr pos:start="23:53" pos:end="23:59"><name pos:start="23:53" pos:end="23:57">index</name><operator pos:start="23:58" pos:end="23:59">++</operator></expr></incr>)</control> <block pos:start="23:62" pos:end="95:9">{<block_content pos:start="27:11" pos:end="93:53">



          <if_stmt pos:start="27:11" pos:end="29:24"><if pos:start="27:11" pos:end="29:24">if <condition pos:start="27:14" pos:end="27:33">(<expr pos:start="27:15" pos:end="27:32"><name pos:start="27:15" pos:end="27:17">vlc</name> <operator pos:start="27:19" pos:end="27:20">==</operator> <name pos:start="27:22" pos:end="27:32">INVALID_VLC</name></expr>)</condition><block type="pseudo" pos:start="29:15" pos:end="29:24"><block_content pos:start="29:15" pos:end="29:24">

              <return pos:start="29:15" pos:end="29:24">return <expr pos:start="29:22" pos:end="29:23"><operator pos:start="29:22" pos:end="29:22">-</operator><literal type="number" pos:start="29:23" pos:end="29:23">1</literal></expr>;</return></block_content></block></if></if_stmt>



          <expr_stmt pos:start="33:11" pos:end="33:33"><expr pos:start="33:11" pos:end="33:32"><name pos:start="33:11" pos:end="33:14">sign</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <operator pos:start="33:18" pos:end="33:18">(</operator><name pos:start="33:19" pos:end="33:21">vlc</name> <operator pos:start="33:23" pos:end="33:23">&amp;</operator> <literal type="number" pos:start="33:25" pos:end="33:27">0x1</literal><operator pos:start="33:28" pos:end="33:28">)</operator> <operator pos:start="33:30" pos:end="33:30">-</operator> <literal type="number" pos:start="33:32" pos:end="33:32">1</literal></expr>;</expr_stmt>

          <expr_stmt pos:start="35:11" pos:end="35:32"><expr pos:start="35:11" pos:end="35:31"><name pos:start="35:11" pos:end="35:13">vlc</name>  <operator pos:start="35:16" pos:end="35:16">=</operator> <operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:21">vlc</name> <operator pos:start="35:23" pos:end="35:23">+</operator> <literal type="number" pos:start="35:25" pos:end="35:25">1</literal><operator pos:start="35:26" pos:end="35:26">)</operator> <operator pos:start="35:28" pos:end="35:29">&gt;&gt;</operator> <literal type="number" pos:start="35:31" pos:end="35:31">1</literal></expr>;</expr_stmt>



          <if_stmt pos:start="39:11" pos:end="83:11"><if pos:start="39:11" pos:end="61:11">if <condition pos:start="39:14" pos:end="39:24">(<expr pos:start="39:15" pos:end="39:23"><name pos:start="39:15" pos:end="39:18">type</name> <operator pos:start="39:20" pos:end="39:21">==</operator> <literal type="number" pos:start="39:23" pos:end="39:23">3</literal></expr>)</condition> <block pos:start="39:26" pos:end="61:11">{<block_content pos:start="41:15" pos:end="59:15">

              <if_stmt pos:start="41:15" pos:end="59:15"><if pos:start="41:15" pos:end="47:15">if <condition pos:start="41:18" pos:end="41:26">(<expr pos:start="41:19" pos:end="41:25"><name pos:start="41:19" pos:end="41:21">vlc</name> <operator pos:start="41:23" pos:end="41:23">&lt;</operator> <literal type="number" pos:start="41:25" pos:end="41:25">3</literal></expr>)</condition> <block pos:start="41:28" pos:end="47:15">{<block_content pos:start="43:19" pos:end="45:30">

                  <expr_stmt pos:start="43:19" pos:end="43:28"><expr pos:start="43:19" pos:end="43:27"><name pos:start="43:19" pos:end="43:21">run</name>   <operator pos:start="43:25" pos:end="43:25">=</operator> <literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr>;</expr_stmt>

                  <expr_stmt pos:start="45:19" pos:end="45:30"><expr pos:start="45:19" pos:end="45:29"><name pos:start="45:19" pos:end="45:23">level</name> <operator pos:start="45:25" pos:end="45:25">=</operator> <name pos:start="45:27" pos:end="45:29">vlc</name></expr>;</expr_stmt>

              </block_content>}</block></if> <if type="elseif" pos:start="47:17" pos:end="53:15">else if <condition pos:start="47:25" pos:end="47:33">(<expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:28">vlc</name> <operator pos:start="47:30" pos:end="47:30">&lt;</operator> <literal type="number" pos:start="47:32" pos:end="47:32">4</literal></expr>)</condition> <block pos:start="47:35" pos:end="53:15">{<block_content pos:start="49:19" pos:end="51:28">

                  <expr_stmt pos:start="49:19" pos:end="49:28"><expr pos:start="49:19" pos:end="49:27"><name pos:start="49:19" pos:end="49:21">run</name>   <operator pos:start="49:25" pos:end="49:25">=</operator> <literal type="number" pos:start="49:27" pos:end="49:27">1</literal></expr>;</expr_stmt>

                  <expr_stmt pos:start="51:19" pos:end="51:28"><expr pos:start="51:19" pos:end="51:27"><name pos:start="51:19" pos:end="51:23">level</name> <operator pos:start="51:25" pos:end="51:25">=</operator> <literal type="number" pos:start="51:27" pos:end="51:27">1</literal></expr>;</expr_stmt>

              </block_content>}</block></if> <else pos:start="53:17" pos:end="59:15">else <block pos:start="53:22" pos:end="59:15">{<block_content pos:start="55:19" pos:end="57:49">

                  <expr_stmt pos:start="55:19" pos:end="55:38"><expr pos:start="55:19" pos:end="55:37"><name pos:start="55:19" pos:end="55:21">run</name>   <operator pos:start="55:25" pos:end="55:25">=</operator> <operator pos:start="55:27" pos:end="55:27">(</operator><name pos:start="55:28" pos:end="55:30">vlc</name> <operator pos:start="55:32" pos:end="55:32">&amp;</operator> <literal type="number" pos:start="55:34" pos:end="55:36">0x3</literal><operator pos:start="55:37" pos:end="55:37">)</operator></expr>;</expr_stmt>

                  <expr_stmt pos:start="57:19" pos:end="57:49"><expr pos:start="57:19" pos:end="57:48"><name pos:start="57:19" pos:end="57:23">level</name> <operator pos:start="57:25" pos:end="57:25">=</operator> <operator pos:start="57:27" pos:end="57:27">(</operator><operator pos:start="57:28" pos:end="57:28">(</operator><name pos:start="57:29" pos:end="57:31">vlc</name> <operator pos:start="57:33" pos:end="57:33">+</operator> <literal type="number" pos:start="57:35" pos:end="57:35">9</literal><operator pos:start="57:36" pos:end="57:36">)</operator> <operator pos:start="57:38" pos:end="57:39">&gt;&gt;</operator> <literal type="number" pos:start="57:41" pos:end="57:41">2</literal><operator pos:start="57:42" pos:end="57:42">)</operator> <operator pos:start="57:44" pos:end="57:44">-</operator> <name pos:start="57:46" pos:end="57:48">run</name></expr>;</expr_stmt>

              </block_content>}</block></else></if_stmt>

          </block_content>}</block></if> <else pos:start="61:13" pos:end="83:11">else <block pos:start="61:18" pos:end="83:11">{<block_content pos:start="63:15" pos:end="81:15">

              <if_stmt pos:start="63:15" pos:end="81:15"><if pos:start="63:15" pos:end="69:15">if <condition pos:start="63:18" pos:end="63:27">(<expr pos:start="63:19" pos:end="63:26"><name pos:start="63:19" pos:end="63:21">vlc</name> <operator pos:start="63:23" pos:end="63:23">&lt;</operator> <literal type="number" pos:start="63:25" pos:end="63:26">16</literal></expr>)</condition> <block pos:start="63:29" pos:end="69:15">{<block_content pos:start="65:19" pos:end="67:60">

                  <expr_stmt pos:start="65:19" pos:end="65:58"><expr pos:start="65:19" pos:end="65:57"><name pos:start="65:19" pos:end="65:21">run</name>   <operator pos:start="65:25" pos:end="65:25">=</operator> <name pos:start="65:27" pos:end="65:53"><name pos:start="65:27" pos:end="65:41">svq3_dct_tables</name><index pos:start="65:42" pos:end="65:48">[<expr pos:start="65:43" pos:end="65:47"><name pos:start="65:43" pos:end="65:47">intra</name></expr>]</index><index pos:start="65:49" pos:end="65:53">[<expr pos:start="65:50" pos:end="65:52"><name pos:start="65:50" pos:end="65:52">vlc</name></expr>]</index></name><operator pos:start="65:54" pos:end="65:54">.</operator><name pos:start="65:55" pos:end="65:57">run</name></expr>;</expr_stmt>

                  <expr_stmt pos:start="67:19" pos:end="67:60"><expr pos:start="67:19" pos:end="67:59"><name pos:start="67:19" pos:end="67:23">level</name> <operator pos:start="67:25" pos:end="67:25">=</operator> <name pos:start="67:27" pos:end="67:53"><name pos:start="67:27" pos:end="67:41">svq3_dct_tables</name><index pos:start="67:42" pos:end="67:48">[<expr pos:start="67:43" pos:end="67:47"><name pos:start="67:43" pos:end="67:47">intra</name></expr>]</index><index pos:start="67:49" pos:end="67:53">[<expr pos:start="67:50" pos:end="67:52"><name pos:start="67:50" pos:end="67:52">vlc</name></expr>]</index></name><operator pos:start="67:54" pos:end="67:54">.</operator><name pos:start="67:55" pos:end="67:59">level</name></expr>;</expr_stmt>

              </block_content>}</block></if> <if type="elseif" pos:start="69:17" pos:end="75:15">else if <condition pos:start="69:25" pos:end="69:31">(<expr pos:start="69:26" pos:end="69:30"><name pos:start="69:26" pos:end="69:30">intra</name></expr>)</condition> <block pos:start="69:33" pos:end="75:15">{<block_content pos:start="71:19" pos:end="73:97">

                  <expr_stmt pos:start="71:19" pos:end="71:38"><expr pos:start="71:19" pos:end="71:37"><name pos:start="71:19" pos:end="71:21">run</name>   <operator pos:start="71:25" pos:end="71:25">=</operator> <operator pos:start="71:27" pos:end="71:27">(</operator><name pos:start="71:28" pos:end="71:30">vlc</name> <operator pos:start="71:32" pos:end="71:32">&amp;</operator> <literal type="number" pos:start="71:34" pos:end="71:36">0x7</literal><operator pos:start="71:37" pos:end="71:37">)</operator></expr>;</expr_stmt>

                  <expr_stmt pos:start="73:19" pos:end="73:97"><expr pos:start="73:19" pos:end="73:96"><name pos:start="73:19" pos:end="73:23">level</name> <operator pos:start="73:25" pos:end="73:25">=</operator> <operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:30">vlc</name> <operator pos:start="73:32" pos:end="73:33">&gt;&gt;</operator> <literal type="number" pos:start="73:35" pos:end="73:35">3</literal><operator pos:start="73:36" pos:end="73:36">)</operator> <operator pos:start="73:38" pos:end="73:38">+</operator> <operator pos:start="73:40" pos:end="73:40">(</operator><ternary pos:start="73:41" pos:end="73:95"><condition pos:start="73:41" pos:end="73:52"><expr pos:start="73:41" pos:end="73:50"><operator pos:start="73:41" pos:end="73:41">(</operator><name pos:start="73:42" pos:end="73:44">run</name> <operator pos:start="73:46" pos:end="73:47">==</operator> <literal type="number" pos:start="73:49" pos:end="73:49">0</literal><operator pos:start="73:50" pos:end="73:50">)</operator></expr> ?</condition><then pos:start="73:54" pos:end="73:54"> <expr pos:start="73:54" pos:end="73:54"><literal type="number" pos:start="73:54" pos:end="73:54">8</literal></expr> </then><else pos:start="73:56" pos:end="73:95">: <expr pos:start="73:58" pos:end="73:95"><operator pos:start="73:58" pos:end="73:58">(</operator><ternary pos:start="73:59" pos:end="73:94"><condition pos:start="73:59" pos:end="73:69"><expr pos:start="73:59" pos:end="73:67"><operator pos:start="73:59" pos:end="73:59">(</operator><name pos:start="73:60" pos:end="73:62">run</name> <operator pos:start="73:64" pos:end="73:64">&lt;</operator> <literal type="number" pos:start="73:66" pos:end="73:66">2</literal><operator pos:start="73:67" pos:end="73:67">)</operator></expr> ?</condition><then pos:start="73:71" pos:end="73:71"> <expr pos:start="73:71" pos:end="73:71"><literal type="number" pos:start="73:71" pos:end="73:71">2</literal></expr> </then><else pos:start="73:73" pos:end="73:94">: <expr pos:start="73:75" pos:end="73:94"><operator pos:start="73:75" pos:end="73:75">(</operator><ternary pos:start="73:76" pos:end="73:93"><condition pos:start="73:76" pos:end="73:86"><expr pos:start="73:76" pos:end="73:84"><operator pos:start="73:76" pos:end="73:76">(</operator><name pos:start="73:77" pos:end="73:79">run</name> <operator pos:start="73:81" pos:end="73:81">&lt;</operator> <literal type="number" pos:start="73:83" pos:end="73:83">5</literal><operator pos:start="73:84" pos:end="73:84">)</operator></expr> ?</condition><then pos:start="73:88" pos:end="73:88"> <expr pos:start="73:88" pos:end="73:88"><literal type="number" pos:start="73:88" pos:end="73:88">0</literal></expr> </then><else pos:start="73:90" pos:end="73:93">: <expr pos:start="73:92" pos:end="73:93"><operator pos:start="73:92" pos:end="73:92">-</operator><literal type="number" pos:start="73:93" pos:end="73:93">1</literal></expr></else></ternary><operator pos:start="73:94" pos:end="73:94">)</operator></expr></else></ternary><operator pos:start="73:95" pos:end="73:95">)</operator></expr></else></ternary><operator pos:start="73:96" pos:end="73:96">)</operator></expr>;</expr_stmt>

              </block_content>}</block></if> <else pos:start="75:17" pos:end="81:15">else <block pos:start="75:22" pos:end="81:15">{<block_content pos:start="77:19" pos:end="79:97">

                  <expr_stmt pos:start="77:19" pos:end="77:38"><expr pos:start="77:19" pos:end="77:37"><name pos:start="77:19" pos:end="77:21">run</name>   <operator pos:start="77:25" pos:end="77:25">=</operator> <operator pos:start="77:27" pos:end="77:27">(</operator><name pos:start="77:28" pos:end="77:30">vlc</name> <operator pos:start="77:32" pos:end="77:32">&amp;</operator> <literal type="number" pos:start="77:34" pos:end="77:36">0xF</literal><operator pos:start="77:37" pos:end="77:37">)</operator></expr>;</expr_stmt>

                  <expr_stmt pos:start="79:19" pos:end="79:97"><expr pos:start="79:19" pos:end="79:96"><name pos:start="79:19" pos:end="79:23">level</name> <operator pos:start="79:25" pos:end="79:25">=</operator> <operator pos:start="79:27" pos:end="79:27">(</operator><name pos:start="79:28" pos:end="79:30">vlc</name> <operator pos:start="79:32" pos:end="79:33">&gt;&gt;</operator> <literal type="number" pos:start="79:35" pos:end="79:35">4</literal><operator pos:start="79:36" pos:end="79:36">)</operator> <operator pos:start="79:38" pos:end="79:38">+</operator> <operator pos:start="79:40" pos:end="79:40">(</operator><ternary pos:start="79:41" pos:end="79:95"><condition pos:start="79:41" pos:end="79:52"><expr pos:start="79:41" pos:end="79:50"><operator pos:start="79:41" pos:end="79:41">(</operator><name pos:start="79:42" pos:end="79:44">run</name> <operator pos:start="79:46" pos:end="79:47">==</operator> <literal type="number" pos:start="79:49" pos:end="79:49">0</literal><operator pos:start="79:50" pos:end="79:50">)</operator></expr> ?</condition><then pos:start="79:54" pos:end="79:54"> <expr pos:start="79:54" pos:end="79:54"><literal type="number" pos:start="79:54" pos:end="79:54">4</literal></expr> </then><else pos:start="79:56" pos:end="79:95">: <expr pos:start="79:58" pos:end="79:95"><operator pos:start="79:58" pos:end="79:58">(</operator><ternary pos:start="79:59" pos:end="79:94"><condition pos:start="79:59" pos:end="79:69"><expr pos:start="79:59" pos:end="79:67"><operator pos:start="79:59" pos:end="79:59">(</operator><name pos:start="79:60" pos:end="79:62">run</name> <operator pos:start="79:64" pos:end="79:64">&lt;</operator> <literal type="number" pos:start="79:66" pos:end="79:66">3</literal><operator pos:start="79:67" pos:end="79:67">)</operator></expr> ?</condition><then pos:start="79:71" pos:end="79:71"> <expr pos:start="79:71" pos:end="79:71"><literal type="number" pos:start="79:71" pos:end="79:71">2</literal></expr> </then><else pos:start="79:73" pos:end="79:94">: <expr pos:start="79:75" pos:end="79:94"><operator pos:start="79:75" pos:end="79:75">(</operator><ternary pos:start="79:76" pos:end="79:93"><condition pos:start="79:76" pos:end="79:87"><expr pos:start="79:76" pos:end="79:85"><operator pos:start="79:76" pos:end="79:76">(</operator><name pos:start="79:77" pos:end="79:79">run</name> <operator pos:start="79:81" pos:end="79:81">&lt;</operator> <literal type="number" pos:start="79:83" pos:end="79:84">10</literal><operator pos:start="79:85" pos:end="79:85">)</operator></expr> ?</condition><then pos:start="79:89" pos:end="79:89"> <expr pos:start="79:89" pos:end="79:89"><literal type="number" pos:start="79:89" pos:end="79:89">1</literal></expr> </then><else pos:start="79:91" pos:end="79:93">: <expr pos:start="79:93" pos:end="79:93"><literal type="number" pos:start="79:93" pos:end="79:93">0</literal></expr></else></ternary><operator pos:start="79:94" pos:end="79:94">)</operator></expr></else></ternary><operator pos:start="79:95" pos:end="79:95">)</operator></expr></else></ternary><operator pos:start="79:96" pos:end="79:96">)</operator></expr>;</expr_stmt>

              </block_content>}</block></else></if_stmt>

          </block_content>}</block></else></if_stmt>



          <if_stmt pos:start="87:11" pos:end="89:24"><if pos:start="87:11" pos:end="89:24">if <condition pos:start="87:14" pos:end="87:38">(<expr pos:start="87:15" pos:end="87:37"><operator pos:start="87:15" pos:end="87:15">(</operator><name pos:start="87:16" pos:end="87:20">index</name> <operator pos:start="87:22" pos:end="87:23">+=</operator> <name pos:start="87:25" pos:end="87:27">run</name><operator pos:start="87:28" pos:end="87:28">)</operator> <operator pos:start="87:30" pos:end="87:31">&gt;=</operator> <name pos:start="87:33" pos:end="87:37">limit</name></expr>)</condition><block type="pseudo" pos:start="89:15" pos:end="89:24"><block_content pos:start="89:15" pos:end="89:24">

              <return pos:start="89:15" pos:end="89:24">return <expr pos:start="89:22" pos:end="89:23"><operator pos:start="89:22" pos:end="89:22">-</operator><literal type="number" pos:start="89:23" pos:end="89:23">1</literal></expr>;</return></block_content></block></if></if_stmt>



          <expr_stmt pos:start="93:11" pos:end="93:53"><expr pos:start="93:11" pos:end="93:52"><name pos:start="93:11" pos:end="93:28"><name pos:start="93:11" pos:end="93:15">block</name><index pos:start="93:16" pos:end="93:28">[<expr pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:27"><name pos:start="93:17" pos:end="93:20">scan</name><index pos:start="93:21" pos:end="93:27">[<expr pos:start="93:22" pos:end="93:26"><name pos:start="93:22" pos:end="93:26">index</name></expr>]</index></name></expr>]</index></name> <operator pos:start="93:30" pos:end="93:30">=</operator> <operator pos:start="93:32" pos:end="93:32">(</operator><name pos:start="93:33" pos:end="93:37">level</name> <operator pos:start="93:39" pos:end="93:39">^</operator> <name pos:start="93:41" pos:end="93:44">sign</name><operator pos:start="93:45" pos:end="93:45">)</operator> <operator pos:start="93:47" pos:end="93:47">-</operator> <name pos:start="93:49" pos:end="93:52">sign</name></expr>;</expr_stmt>

        </block_content>}</block></for>



        <if_stmt pos:start="99:9" pos:end="103:9"><if pos:start="99:9" pos:end="103:9">if <condition pos:start="99:12" pos:end="99:22">(<expr pos:start="99:13" pos:end="99:21"><name pos:start="99:13" pos:end="99:16">type</name> <operator pos:start="99:18" pos:end="99:19">!=</operator> <literal type="number" pos:start="99:21" pos:end="99:21">2</literal></expr>)</condition> <block pos:start="99:24" pos:end="103:9">{<block_content pos:start="101:13" pos:end="101:18">

            <break pos:start="101:13" pos:end="101:18">break;</break>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="109:5" pos:end="109:13">return <expr pos:start="109:12" pos:end="109:12"><literal type="number" pos:start="109:12" pos:end="109:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
