<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/12933.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">set_expr</name><parameter_list pos:start="1:20" pos:end="1:68">(<parameter pos:start="1:21" pos:end="1:34"><decl pos:start="1:21" pos:end="1:34"><type pos:start="1:21" pos:end="1:34"><name pos:start="1:21" pos:end="1:26">AVExpr</name> <modifier pos:start="1:28" pos:end="1:28">*</modifier><modifier pos:start="1:29" pos:end="1:29">*</modifier></type><name pos:start="1:30" pos:end="1:34">pexpr</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:52"><decl pos:start="1:37" pos:end="1:52"><type pos:start="1:37" pos:end="1:52"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:46">char</name> <modifier pos:start="1:48" pos:end="1:48">*</modifier></type><name pos:start="1:49" pos:end="1:52">expr</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:67"><decl pos:start="1:55" pos:end="1:67"><type pos:start="1:55" pos:end="1:67"><name pos:start="1:55" pos:end="1:58">void</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:67">log_ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="37:1">{<block_content pos:start="5:5" pos:end="35:13">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:10">AVExpr</name> <modifier pos:start="7:12" pos:end="7:12">*</modifier></type><name pos:start="7:13" pos:end="7:15">old</name> <init pos:start="7:17" pos:end="7:22">= <expr pos:start="7:19" pos:end="7:22"><name pos:start="7:19" pos:end="7:22">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:21"><if pos:start="11:5" pos:end="13:21">if <condition pos:start="11:8" pos:end="11:15">(<expr pos:start="11:9" pos:end="11:14"><operator pos:start="11:9" pos:end="11:9">*</operator><name pos:start="11:10" pos:end="11:14">pexpr</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:21"><block_content pos:start="13:9" pos:end="13:21">

        <expr_stmt pos:start="13:9" pos:end="13:21"><expr pos:start="13:9" pos:end="13:20"><name pos:start="13:9" pos:end="13:11">old</name> <operator pos:start="13:13" pos:end="13:13">=</operator> <operator pos:start="13:15" pos:end="13:15">*</operator><name pos:start="13:16" pos:end="13:20">pexpr</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:60"><expr pos:start="15:5" pos:end="17:59"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="17:59"><name pos:start="15:11" pos:end="15:23">av_expr_parse</name><argument_list pos:start="15:24" pos:end="17:59">(<argument pos:start="15:25" pos:end="15:29"><expr pos:start="15:25" pos:end="15:29"><name pos:start="15:25" pos:end="15:29">pexpr</name></expr></argument>, <argument pos:start="15:32" pos:end="15:35"><expr pos:start="15:32" pos:end="15:35"><name pos:start="15:32" pos:end="15:35">expr</name></expr></argument>, <argument pos:start="15:38" pos:end="15:46"><expr pos:start="15:38" pos:end="15:46"><name pos:start="15:38" pos:end="15:46">var_names</name></expr></argument>,

                        <argument pos:start="17:25" pos:end="17:28"><expr pos:start="17:25" pos:end="17:28"><name pos:start="17:25" pos:end="17:28">NULL</name></expr></argument>, <argument pos:start="17:31" pos:end="17:34"><expr pos:start="17:31" pos:end="17:34"><name pos:start="17:31" pos:end="17:34">NULL</name></expr></argument>, <argument pos:start="17:37" pos:end="17:40"><expr pos:start="17:37" pos:end="17:40"><name pos:start="17:37" pos:end="17:40">NULL</name></expr></argument>, <argument pos:start="17:43" pos:end="17:46"><expr pos:start="17:43" pos:end="17:46"><name pos:start="17:43" pos:end="17:46">NULL</name></expr></argument>, <argument pos:start="17:49" pos:end="17:49"><expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">0</literal></expr></argument>, <argument pos:start="17:52" pos:end="17:58"><expr pos:start="17:52" pos:end="17:58"><name pos:start="17:52" pos:end="17:58">log_ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="29:5"><if pos:start="19:5" pos:end="29:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="29:5">{<block_content pos:start="21:9" pos:end="27:19">

        <expr_stmt pos:start="21:9" pos:end="23:68"><expr pos:start="21:9" pos:end="23:67"><call pos:start="21:9" pos:end="23:67"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="23:67">(<argument pos:start="21:16" pos:end="21:22"><expr pos:start="21:16" pos:end="21:22"><name pos:start="21:16" pos:end="21:22">log_ctx</name></expr></argument>, <argument pos:start="21:25" pos:end="21:36"><expr pos:start="21:25" pos:end="21:36"><name pos:start="21:25" pos:end="21:36">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="23:16" pos:end="23:60"><expr pos:start="23:16" pos:end="23:60"><literal type="string" pos:start="23:16" pos:end="23:60">"Error when evaluating the expression '%s'\n"</literal></expr></argument>, <argument pos:start="23:63" pos:end="23:66"><expr pos:start="23:63" pos:end="23:66"><name pos:start="23:63" pos:end="23:66">expr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:21"><expr pos:start="25:9" pos:end="25:20"><operator pos:start="25:9" pos:end="25:9">*</operator><name pos:start="25:10" pos:end="25:14">pexpr</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:20">old</name></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:22"><expr pos:start="33:5" pos:end="33:21"><call pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:16">av_expr_free</name><argument_list pos:start="33:17" pos:end="33:21">(<argument pos:start="33:18" pos:end="33:20"><expr pos:start="33:18" pos:end="33:20"><name pos:start="33:18" pos:end="33:20">old</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="35:5" pos:end="35:13">return <expr pos:start="35:12" pos:end="35:12"><literal type="number" pos:start="35:12" pos:end="35:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
