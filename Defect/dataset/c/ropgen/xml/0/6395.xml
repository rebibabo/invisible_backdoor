<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6395.c" pos:tabs="8"><function pos:start="1:1" pos:end="107:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">dec_pattern</name><parameter_list pos:start="1:24" pos:end="1:41">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:36">DisasContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="107:1">{<block_content pos:start="5:5" pos:end="105:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:21"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:12">unsigned</name> <name pos:start="5:14" pos:end="5:16">int</name></type> <name pos:start="5:18" pos:end="5:21">mode</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:11"><decl pos:start="7:5" pos:end="7:10"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:10">l1</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="21:5"><if pos:start="11:5" pos:end="21:5">if <condition pos:start="11:8" pos:end="15:61">(<expr pos:start="11:9" pos:end="15:60"><operator pos:start="11:9" pos:end="11:9">(</operator><name pos:start="11:10" pos:end="11:21"><name pos:start="11:10" pos:end="11:11">dc</name><operator pos:start="11:12" pos:end="11:13">-&gt;</operator><name pos:start="11:14" pos:end="11:21">tb_flags</name></name> <operator pos:start="11:23" pos:end="11:23">&amp;</operator> <name pos:start="11:25" pos:end="11:35">MSR_EE_FLAG</name><operator pos:start="11:36" pos:end="11:36">)</operator>

          <operator pos:start="13:11" pos:end="13:12">&amp;&amp;</operator> <operator pos:start="13:14" pos:end="13:14">!</operator><operator pos:start="13:15" pos:end="13:15">(</operator><name pos:start="13:16" pos:end="13:35"><name pos:start="13:16" pos:end="13:17">dc</name><operator pos:start="13:18" pos:end="13:19">-&gt;</operator><name pos:start="13:20" pos:end="13:22">env</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:27">pvr</name><operator pos:start="13:28" pos:end="13:28">.</operator><name pos:start="13:29" pos:end="13:32">regs</name><index pos:start="13:33" pos:end="13:35">[<expr pos:start="13:34" pos:end="13:34"><literal type="number" pos:start="13:34" pos:end="13:34">2</literal></expr>]</index></name> <operator pos:start="13:37" pos:end="13:37">&amp;</operator> <name pos:start="13:39" pos:end="13:62">PVR2_ILL_OPCODE_EXC_MASK</name><operator pos:start="13:63" pos:end="13:63">)</operator>

          <operator pos:start="15:11" pos:end="15:12">&amp;&amp;</operator> <operator pos:start="15:14" pos:end="15:14">!</operator><operator pos:start="15:15" pos:end="15:15">(</operator><operator pos:start="15:16" pos:end="15:16">(</operator><name pos:start="15:17" pos:end="15:36"><name pos:start="15:17" pos:end="15:18">dc</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:23">env</name><operator pos:start="15:24" pos:end="15:25">-&gt;</operator><name pos:start="15:26" pos:end="15:28">pvr</name><operator pos:start="15:29" pos:end="15:29">.</operator><name pos:start="15:30" pos:end="15:33">regs</name><index pos:start="15:34" pos:end="15:36">[<expr pos:start="15:35" pos:end="15:35"><literal type="number" pos:start="15:35" pos:end="15:35">2</literal></expr>]</index></name> <operator pos:start="15:38" pos:end="15:38">&amp;</operator> <name pos:start="15:40" pos:end="15:58">PVR2_USE_PCMP_INSTR</name><operator pos:start="15:59" pos:end="15:59">)</operator><operator pos:start="15:60" pos:end="15:60">)</operator></expr>)</condition> <block pos:start="15:63" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:48">

        <expr_stmt pos:start="17:9" pos:end="17:59"><expr pos:start="17:9" pos:end="17:58"><call pos:start="17:9" pos:end="17:58"><name pos:start="17:9" pos:end="17:23">tcg_gen_movi_tl</name><argument_list pos:start="17:24" pos:end="17:58">(<argument pos:start="17:25" pos:end="17:38"><expr pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:38"><name pos:start="17:25" pos:end="17:30">cpu_SR</name><index pos:start="17:31" pos:end="17:38">[<expr pos:start="17:32" pos:end="17:37"><name pos:start="17:32" pos:end="17:37">SR_ESR</name></expr>]</index></name></expr></argument>, <argument pos:start="17:41" pos:end="17:57"><expr pos:start="17:41" pos:end="17:57"><name pos:start="17:41" pos:end="17:57">ESR_EC_ILLEGAL_OP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="19:9" pos:end="19:48"><expr pos:start="19:9" pos:end="19:47"><call pos:start="19:9" pos:end="19:47"><name pos:start="19:9" pos:end="19:29">t_gen_raise_exception</name><argument_list pos:start="19:30" pos:end="19:47">(<argument pos:start="19:31" pos:end="19:32"><expr pos:start="19:31" pos:end="19:32"><name pos:start="19:31" pos:end="19:32">dc</name></expr></argument>, <argument pos:start="19:35" pos:end="19:46"><expr pos:start="19:35" pos:end="19:46"><name pos:start="19:35" pos:end="19:46">EXCP_HW_EXCP</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:8">mode</name> <operator pos:start="25:10" pos:end="25:10">=</operator> <name pos:start="25:12" pos:end="25:21"><name pos:start="25:12" pos:end="25:13">dc</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:21">opcode</name></name> <operator pos:start="25:23" pos:end="25:23">&amp;</operator> <literal type="number" pos:start="25:25" pos:end="25:25">3</literal></expr>;</expr_stmt>

    <switch pos:start="27:5" pos:end="105:5">switch <condition pos:start="27:12" pos:end="27:17">(<expr pos:start="27:13" pos:end="27:16"><name pos:start="27:13" pos:end="27:16">mode</name></expr>)</condition> <block pos:start="27:19" pos:end="105:5">{<block_content pos:start="29:9" pos:end="103:18">

        <case pos:start="29:9" pos:end="29:15">case <expr pos:start="29:14" pos:end="29:14"><literal type="number" pos:start="29:14" pos:end="29:14">0</literal></expr>:</case>

            <comment type="block" pos:start="31:13" pos:end="31:26">/* pcmpbf.  */</comment>

            <expr_stmt pos:start="33:13" pos:end="33:68"><expr pos:start="33:13" pos:end="33:67"><call pos:start="33:13" pos:end="33:67"><name pos:start="33:13" pos:end="33:19">LOG_DIS</name><argument_list pos:start="33:20" pos:end="33:67">(<argument pos:start="33:21" pos:end="33:42"><expr pos:start="33:21" pos:end="33:42"><literal type="string" pos:start="33:21" pos:end="33:42">"pcmpbf r%d r%d r%d\n"</literal></expr></argument>, <argument pos:start="33:45" pos:end="33:50"><expr pos:start="33:45" pos:end="33:50"><name pos:start="33:45" pos:end="33:50"><name pos:start="33:45" pos:end="33:46">dc</name><operator pos:start="33:47" pos:end="33:48">-&gt;</operator><name pos:start="33:49" pos:end="33:50">rd</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:58"><expr pos:start="33:53" pos:end="33:58"><name pos:start="33:53" pos:end="33:58"><name pos:start="33:53" pos:end="33:54">dc</name><operator pos:start="33:55" pos:end="33:56">-&gt;</operator><name pos:start="33:57" pos:end="33:58">ra</name></name></expr></argument>, <argument pos:start="33:61" pos:end="33:66"><expr pos:start="33:61" pos:end="33:66"><name pos:start="33:61" pos:end="33:66"><name pos:start="33:61" pos:end="33:62">dc</name><operator pos:start="33:63" pos:end="33:64">-&gt;</operator><name pos:start="33:65" pos:end="33:66">rb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="37:79"><if pos:start="35:13" pos:end="37:79">if <condition pos:start="35:16" pos:end="35:23">(<expr pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:22"><name pos:start="35:17" pos:end="35:18">dc</name><operator pos:start="35:19" pos:end="35:20">-&gt;</operator><name pos:start="35:21" pos:end="35:22">rd</name></name></expr>)</condition><block type="pseudo" pos:start="37:17" pos:end="37:79"><block_content pos:start="37:17" pos:end="37:79">

                <expr_stmt pos:start="37:17" pos:end="37:79"><expr pos:start="37:17" pos:end="37:78"><call pos:start="37:17" pos:end="37:78"><name pos:start="37:17" pos:end="37:33">gen_helper_pcmpbf</name><argument_list pos:start="37:34" pos:end="37:78">(<argument pos:start="37:35" pos:end="37:47"><expr pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:47"><name pos:start="37:35" pos:end="37:39">cpu_R</name><index pos:start="37:40" pos:end="37:47">[<expr pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:42">dc</name><operator pos:start="37:43" pos:end="37:44">-&gt;</operator><name pos:start="37:45" pos:end="37:46">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="37:50" pos:end="37:62"><expr pos:start="37:50" pos:end="37:62"><name pos:start="37:50" pos:end="37:62"><name pos:start="37:50" pos:end="37:54">cpu_R</name><index pos:start="37:55" pos:end="37:62">[<expr pos:start="37:56" pos:end="37:61"><name pos:start="37:56" pos:end="37:61"><name pos:start="37:56" pos:end="37:57">dc</name><operator pos:start="37:58" pos:end="37:59">-&gt;</operator><name pos:start="37:60" pos:end="37:61">ra</name></name></expr>]</index></name></expr></argument>, <argument pos:start="37:65" pos:end="37:77"><expr pos:start="37:65" pos:end="37:77"><name pos:start="37:65" pos:end="37:77"><name pos:start="37:65" pos:end="37:69">cpu_R</name><index pos:start="37:70" pos:end="37:77">[<expr pos:start="37:71" pos:end="37:76"><name pos:start="37:71" pos:end="37:76"><name pos:start="37:71" pos:end="37:72">dc</name><operator pos:start="37:73" pos:end="37:74">-&gt;</operator><name pos:start="37:75" pos:end="37:76">rb</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="39:13" pos:end="39:18">break;</break>

        <case pos:start="41:9" pos:end="41:15">case <expr pos:start="41:14" pos:end="41:14"><literal type="number" pos:start="41:14" pos:end="41:14">2</literal></expr>:</case>

            <expr_stmt pos:start="43:13" pos:end="43:68"><expr pos:start="43:13" pos:end="43:67"><call pos:start="43:13" pos:end="43:67"><name pos:start="43:13" pos:end="43:19">LOG_DIS</name><argument_list pos:start="43:20" pos:end="43:67">(<argument pos:start="43:21" pos:end="43:42"><expr pos:start="43:21" pos:end="43:42"><literal type="string" pos:start="43:21" pos:end="43:42">"pcmpeq r%d r%d r%d\n"</literal></expr></argument>, <argument pos:start="43:45" pos:end="43:50"><expr pos:start="43:45" pos:end="43:50"><name pos:start="43:45" pos:end="43:50"><name pos:start="43:45" pos:end="43:46">dc</name><operator pos:start="43:47" pos:end="43:48">-&gt;</operator><name pos:start="43:49" pos:end="43:50">rd</name></name></expr></argument>, <argument pos:start="43:53" pos:end="43:58"><expr pos:start="43:53" pos:end="43:58"><name pos:start="43:53" pos:end="43:58"><name pos:start="43:53" pos:end="43:54">dc</name><operator pos:start="43:55" pos:end="43:56">-&gt;</operator><name pos:start="43:57" pos:end="43:58">ra</name></name></expr></argument>, <argument pos:start="43:61" pos:end="43:66"><expr pos:start="43:61" pos:end="43:66"><name pos:start="43:61" pos:end="43:66"><name pos:start="43:61" pos:end="43:62">dc</name><operator pos:start="43:63" pos:end="43:64">-&gt;</operator><name pos:start="43:65" pos:end="43:66">rb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="45:13" pos:end="65:13"><if pos:start="45:13" pos:end="65:13">if <condition pos:start="45:16" pos:end="45:23">(<expr pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:22"><name pos:start="45:17" pos:end="45:18">dc</name><operator pos:start="45:19" pos:end="45:20">-&gt;</operator><name pos:start="45:21" pos:end="45:22">rd</name></name></expr>)</condition> <block pos:start="45:25" pos:end="65:13">{<block_content pos:start="47:17" pos:end="63:34">

                <decl_stmt pos:start="47:17" pos:end="47:47"><decl pos:start="47:17" pos:end="47:46"><type pos:start="47:17" pos:end="47:20"><name pos:start="47:17" pos:end="47:20">TCGv</name></type> <name pos:start="47:22" pos:end="47:23">t0</name> <init pos:start="47:25" pos:end="47:46">= <expr pos:start="47:27" pos:end="47:46"><call pos:start="47:27" pos:end="47:46"><name pos:start="47:27" pos:end="47:44">tcg_temp_local_new</name><argument_list pos:start="47:45" pos:end="47:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:37"><expr pos:start="49:17" pos:end="49:36"><name pos:start="49:17" pos:end="49:18">l1</name> <operator pos:start="49:20" pos:end="49:20">=</operator> <call pos:start="49:22" pos:end="49:36"><name pos:start="49:22" pos:end="49:34">gen_new_label</name><argument_list pos:start="49:35" pos:end="49:36">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="51:17" pos:end="51:39"><expr pos:start="51:17" pos:end="51:38"><call pos:start="51:17" pos:end="51:38"><name pos:start="51:17" pos:end="51:31">tcg_gen_movi_tl</name><argument_list pos:start="51:32" pos:end="51:38">(<argument pos:start="51:33" pos:end="51:34"><expr pos:start="51:33" pos:end="51:34"><name pos:start="51:33" pos:end="51:34">t0</name></expr></argument>, <argument pos:start="51:37" pos:end="51:37"><expr pos:start="51:37" pos:end="51:37"><literal type="number" pos:start="51:37" pos:end="51:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="55:68"><expr pos:start="53:17" pos:end="55:67"><call pos:start="53:17" pos:end="55:67"><name pos:start="53:17" pos:end="53:33">tcg_gen_brcond_tl</name><argument_list pos:start="53:34" pos:end="55:67">(<argument pos:start="53:35" pos:end="53:45"><expr pos:start="53:35" pos:end="53:45"><name pos:start="53:35" pos:end="53:45">TCG_COND_EQ</name></expr></argument>,

                                  <argument pos:start="55:35" pos:end="55:47"><expr pos:start="55:35" pos:end="55:47"><name pos:start="55:35" pos:end="55:47"><name pos:start="55:35" pos:end="55:39">cpu_R</name><index pos:start="55:40" pos:end="55:47">[<expr pos:start="55:41" pos:end="55:46"><name pos:start="55:41" pos:end="55:46"><name pos:start="55:41" pos:end="55:42">dc</name><operator pos:start="55:43" pos:end="55:44">-&gt;</operator><name pos:start="55:45" pos:end="55:46">ra</name></name></expr>]</index></name></expr></argument>, <argument pos:start="55:50" pos:end="55:62"><expr pos:start="55:50" pos:end="55:62"><name pos:start="55:50" pos:end="55:62"><name pos:start="55:50" pos:end="55:54">cpu_R</name><index pos:start="55:55" pos:end="55:62">[<expr pos:start="55:56" pos:end="55:61"><name pos:start="55:56" pos:end="55:61"><name pos:start="55:56" pos:end="55:57">dc</name><operator pos:start="55:58" pos:end="55:59">-&gt;</operator><name pos:start="55:60" pos:end="55:61">rb</name></name></expr>]</index></name></expr></argument>, <argument pos:start="55:65" pos:end="55:66"><expr pos:start="55:65" pos:end="55:66"><name pos:start="55:65" pos:end="55:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:39"><expr pos:start="57:17" pos:end="57:38"><call pos:start="57:17" pos:end="57:38"><name pos:start="57:17" pos:end="57:31">tcg_gen_movi_tl</name><argument_list pos:start="57:32" pos:end="57:38">(<argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">t0</name></expr></argument>, <argument pos:start="57:37" pos:end="57:37"><expr pos:start="57:37" pos:end="57:37"><literal type="number" pos:start="57:37" pos:end="57:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="59:17" pos:end="59:34"><expr pos:start="59:17" pos:end="59:33"><call pos:start="59:17" pos:end="59:33"><name pos:start="59:17" pos:end="59:29">gen_set_label</name><argument_list pos:start="59:30" pos:end="59:33">(<argument pos:start="59:31" pos:end="59:32"><expr pos:start="59:31" pos:end="59:32"><name pos:start="59:31" pos:end="59:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="61:17" pos:end="61:50"><expr pos:start="61:17" pos:end="61:49"><call pos:start="61:17" pos:end="61:49"><name pos:start="61:17" pos:end="61:30">tcg_gen_mov_tl</name><argument_list pos:start="61:31" pos:end="61:49">(<argument pos:start="61:32" pos:end="61:44"><expr pos:start="61:32" pos:end="61:44"><name pos:start="61:32" pos:end="61:44"><name pos:start="61:32" pos:end="61:36">cpu_R</name><index pos:start="61:37" pos:end="61:44">[<expr pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:39">dc</name><operator pos:start="61:40" pos:end="61:41">-&gt;</operator><name pos:start="61:42" pos:end="61:43">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="61:47" pos:end="61:48"><expr pos:start="61:47" pos:end="61:48"><name pos:start="61:47" pos:end="61:48">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="63:17" pos:end="63:34"><expr pos:start="63:17" pos:end="63:33"><call pos:start="63:17" pos:end="63:33"><name pos:start="63:17" pos:end="63:29">tcg_temp_free</name><argument_list pos:start="63:30" pos:end="63:33">(<argument pos:start="63:31" pos:end="63:32"><expr pos:start="63:31" pos:end="63:32"><name pos:start="63:31" pos:end="63:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>

        <case pos:start="69:9" pos:end="69:15">case <expr pos:start="69:14" pos:end="69:14"><literal type="number" pos:start="69:14" pos:end="69:14">3</literal></expr>:</case>

            <expr_stmt pos:start="71:13" pos:end="71:68"><expr pos:start="71:13" pos:end="71:67"><call pos:start="71:13" pos:end="71:67"><name pos:start="71:13" pos:end="71:19">LOG_DIS</name><argument_list pos:start="71:20" pos:end="71:67">(<argument pos:start="71:21" pos:end="71:42"><expr pos:start="71:21" pos:end="71:42"><literal type="string" pos:start="71:21" pos:end="71:42">"pcmpne r%d r%d r%d\n"</literal></expr></argument>, <argument pos:start="71:45" pos:end="71:50"><expr pos:start="71:45" pos:end="71:50"><name pos:start="71:45" pos:end="71:50"><name pos:start="71:45" pos:end="71:46">dc</name><operator pos:start="71:47" pos:end="71:48">-&gt;</operator><name pos:start="71:49" pos:end="71:50">rd</name></name></expr></argument>, <argument pos:start="71:53" pos:end="71:58"><expr pos:start="71:53" pos:end="71:58"><name pos:start="71:53" pos:end="71:58"><name pos:start="71:53" pos:end="71:54">dc</name><operator pos:start="71:55" pos:end="71:56">-&gt;</operator><name pos:start="71:57" pos:end="71:58">ra</name></name></expr></argument>, <argument pos:start="71:61" pos:end="71:66"><expr pos:start="71:61" pos:end="71:66"><name pos:start="71:61" pos:end="71:66"><name pos:start="71:61" pos:end="71:62">dc</name><operator pos:start="71:63" pos:end="71:64">-&gt;</operator><name pos:start="71:65" pos:end="71:66">rb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:33"><expr pos:start="73:13" pos:end="73:32"><name pos:start="73:13" pos:end="73:14">l1</name> <operator pos:start="73:16" pos:end="73:16">=</operator> <call pos:start="73:18" pos:end="73:32"><name pos:start="73:18" pos:end="73:30">gen_new_label</name><argument_list pos:start="73:31" pos:end="73:32">()</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="75:13" pos:end="93:13"><if pos:start="75:13" pos:end="93:13">if <condition pos:start="75:16" pos:end="75:23">(<expr pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:22"><name pos:start="75:17" pos:end="75:18">dc</name><operator pos:start="75:19" pos:end="75:20">-&gt;</operator><name pos:start="75:21" pos:end="75:22">rd</name></name></expr>)</condition> <block pos:start="75:25" pos:end="93:13">{<block_content pos:start="77:17" pos:end="91:34">

                <decl_stmt pos:start="77:17" pos:end="77:47"><decl pos:start="77:17" pos:end="77:46"><type pos:start="77:17" pos:end="77:20"><name pos:start="77:17" pos:end="77:20">TCGv</name></type> <name pos:start="77:22" pos:end="77:23">t0</name> <init pos:start="77:25" pos:end="77:46">= <expr pos:start="77:27" pos:end="77:46"><call pos:start="77:27" pos:end="77:46"><name pos:start="77:27" pos:end="77:44">tcg_temp_local_new</name><argument_list pos:start="77:45" pos:end="77:46">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="79:17" pos:end="79:39"><expr pos:start="79:17" pos:end="79:38"><call pos:start="79:17" pos:end="79:38"><name pos:start="79:17" pos:end="79:31">tcg_gen_movi_tl</name><argument_list pos:start="79:32" pos:end="79:38">(<argument pos:start="79:33" pos:end="79:34"><expr pos:start="79:33" pos:end="79:34"><name pos:start="79:33" pos:end="79:34">t0</name></expr></argument>, <argument pos:start="79:37" pos:end="79:37"><expr pos:start="79:37" pos:end="79:37"><literal type="number" pos:start="79:37" pos:end="79:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="81:17" pos:end="83:68"><expr pos:start="81:17" pos:end="83:67"><call pos:start="81:17" pos:end="83:67"><name pos:start="81:17" pos:end="81:33">tcg_gen_brcond_tl</name><argument_list pos:start="81:34" pos:end="83:67">(<argument pos:start="81:35" pos:end="81:45"><expr pos:start="81:35" pos:end="81:45"><name pos:start="81:35" pos:end="81:45">TCG_COND_NE</name></expr></argument>,

                                  <argument pos:start="83:35" pos:end="83:47"><expr pos:start="83:35" pos:end="83:47"><name pos:start="83:35" pos:end="83:47"><name pos:start="83:35" pos:end="83:39">cpu_R</name><index pos:start="83:40" pos:end="83:47">[<expr pos:start="83:41" pos:end="83:46"><name pos:start="83:41" pos:end="83:46"><name pos:start="83:41" pos:end="83:42">dc</name><operator pos:start="83:43" pos:end="83:44">-&gt;</operator><name pos:start="83:45" pos:end="83:46">ra</name></name></expr>]</index></name></expr></argument>, <argument pos:start="83:50" pos:end="83:62"><expr pos:start="83:50" pos:end="83:62"><name pos:start="83:50" pos:end="83:62"><name pos:start="83:50" pos:end="83:54">cpu_R</name><index pos:start="83:55" pos:end="83:62">[<expr pos:start="83:56" pos:end="83:61"><name pos:start="83:56" pos:end="83:61"><name pos:start="83:56" pos:end="83:57">dc</name><operator pos:start="83:58" pos:end="83:59">-&gt;</operator><name pos:start="83:60" pos:end="83:61">rb</name></name></expr>]</index></name></expr></argument>, <argument pos:start="83:65" pos:end="83:66"><expr pos:start="83:65" pos:end="83:66"><name pos:start="83:65" pos:end="83:66">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="85:17" pos:end="85:39"><expr pos:start="85:17" pos:end="85:38"><call pos:start="85:17" pos:end="85:38"><name pos:start="85:17" pos:end="85:31">tcg_gen_movi_tl</name><argument_list pos:start="85:32" pos:end="85:38">(<argument pos:start="85:33" pos:end="85:34"><expr pos:start="85:33" pos:end="85:34"><name pos:start="85:33" pos:end="85:34">t0</name></expr></argument>, <argument pos:start="85:37" pos:end="85:37"><expr pos:start="85:37" pos:end="85:37"><literal type="number" pos:start="85:37" pos:end="85:37">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="87:17" pos:end="87:34"><expr pos:start="87:17" pos:end="87:33"><call pos:start="87:17" pos:end="87:33"><name pos:start="87:17" pos:end="87:29">gen_set_label</name><argument_list pos:start="87:30" pos:end="87:33">(<argument pos:start="87:31" pos:end="87:32"><expr pos:start="87:31" pos:end="87:32"><name pos:start="87:31" pos:end="87:32">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="89:17" pos:end="89:50"><expr pos:start="89:17" pos:end="89:49"><call pos:start="89:17" pos:end="89:49"><name pos:start="89:17" pos:end="89:30">tcg_gen_mov_tl</name><argument_list pos:start="89:31" pos:end="89:49">(<argument pos:start="89:32" pos:end="89:44"><expr pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:44"><name pos:start="89:32" pos:end="89:36">cpu_R</name><index pos:start="89:37" pos:end="89:44">[<expr pos:start="89:38" pos:end="89:43"><name pos:start="89:38" pos:end="89:43"><name pos:start="89:38" pos:end="89:39">dc</name><operator pos:start="89:40" pos:end="89:41">-&gt;</operator><name pos:start="89:42" pos:end="89:43">rd</name></name></expr>]</index></name></expr></argument>, <argument pos:start="89:47" pos:end="89:48"><expr pos:start="89:47" pos:end="89:48"><name pos:start="89:47" pos:end="89:48">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="91:17" pos:end="91:34"><expr pos:start="91:17" pos:end="91:33"><call pos:start="91:17" pos:end="91:33"><name pos:start="91:17" pos:end="91:29">tcg_temp_free</name><argument_list pos:start="91:30" pos:end="91:33">(<argument pos:start="91:31" pos:end="91:32"><expr pos:start="91:31" pos:end="91:32"><name pos:start="91:31" pos:end="91:32">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="95:13" pos:end="95:18">break;</break>

        <default pos:start="97:9" pos:end="97:16">default:</default>

            <expr_stmt pos:start="99:13" pos:end="101:74"><expr pos:start="99:13" pos:end="101:73"><call pos:start="99:13" pos:end="101:73"><name pos:start="99:13" pos:end="99:21">cpu_abort</name><argument_list pos:start="99:22" pos:end="101:73">(<argument pos:start="99:23" pos:end="99:29"><expr pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:29"><name pos:start="99:23" pos:end="99:24">dc</name><operator pos:start="99:25" pos:end="99:26">-&gt;</operator><name pos:start="99:27" pos:end="99:29">env</name></name></expr></argument>,

                      <argument pos:start="101:23" pos:end="101:60"><expr pos:start="101:23" pos:end="101:60"><literal type="string" pos:start="101:23" pos:end="101:60">"unsupported pattern insn opcode=%x\n"</literal></expr></argument>, <argument pos:start="101:63" pos:end="101:72"><expr pos:start="101:63" pos:end="101:72"><name pos:start="101:63" pos:end="101:72"><name pos:start="101:63" pos:end="101:64">dc</name><operator pos:start="101:65" pos:end="101:66">-&gt;</operator><name pos:start="101:67" pos:end="101:72">opcode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="103:13" pos:end="103:18">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
