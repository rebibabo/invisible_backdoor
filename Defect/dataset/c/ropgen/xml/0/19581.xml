<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19581.c" pos:tabs="8"><function pos:start="1:1" pos:end="67:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">do_create</name><parameter_list pos:start="1:21" pos:end="1:41">(<parameter pos:start="1:22" pos:end="1:40"><decl pos:start="1:22" pos:end="1:40"><type pos:start="1:22" pos:end="1:40"><name pos:start="1:22" pos:end="1:33"><name pos:start="1:22" pos:end="1:27">struct</name> <name pos:start="1:29" pos:end="1:33">iovec</name></name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:40">iovec</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="67:1">{<block_content pos:start="5:5" pos:end="65:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:20"><decl pos:start="7:5" pos:end="7:19"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:14">V9fsString</name></type> <name pos:start="7:16" pos:end="7:19">path</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:48"><decl pos:start="9:5" pos:end="9:13"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:13">flags</name></decl>, <decl pos:start="9:16" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:16" pos:end="9:19">mode</name></decl>, <decl pos:start="9:22" pos:end="9:24"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:22" pos:end="9:24">uid</name></decl>, <decl pos:start="9:27" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:27" pos:end="9:29">gid</name></decl>, <decl pos:start="9:32" pos:end="9:38"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:32" pos:end="9:38">cur_uid</name></decl>, <decl pos:start="9:41" pos:end="9:47"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:41" pos:end="9:47">cur_gid</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:28"><expr pos:start="13:5" pos:end="13:27"><call pos:start="13:5" pos:end="13:27"><name pos:start="13:5" pos:end="13:20">v9fs_string_init</name><argument_list pos:start="13:21" pos:end="13:27">(<argument pos:start="13:22" pos:end="13:26"><expr pos:start="13:22" pos:end="13:26"><operator pos:start="13:22" pos:end="13:22">&amp;</operator><name pos:start="13:23" pos:end="13:26">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="17:60"><expr pos:start="15:5" pos:end="17:59"><name pos:start="15:5" pos:end="15:7">ret</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="17:59"><name pos:start="15:11" pos:end="15:25">proxy_unmarshal</name><argument_list pos:start="15:26" pos:end="17:59">(<argument pos:start="15:27" pos:end="15:31"><expr pos:start="15:27" pos:end="15:31"><name pos:start="15:27" pos:end="15:31">iovec</name></expr></argument>, <argument pos:start="15:34" pos:end="15:45"><expr pos:start="15:34" pos:end="15:45"><name pos:start="15:34" pos:end="15:45">PROXY_HDR_SZ</name></expr></argument>, <argument pos:start="15:48" pos:end="15:54"><expr pos:start="15:48" pos:end="15:54"><literal type="string" pos:start="15:48" pos:end="15:54">"sdddd"</literal></expr></argument>,

                          <argument pos:start="17:27" pos:end="17:31"><expr pos:start="17:27" pos:end="17:31"><operator pos:start="17:27" pos:end="17:27">&amp;</operator><name pos:start="17:28" pos:end="17:31">path</name></expr></argument>, <argument pos:start="17:34" pos:end="17:39"><expr pos:start="17:34" pos:end="17:39"><operator pos:start="17:34" pos:end="17:34">&amp;</operator><name pos:start="17:35" pos:end="17:39">flags</name></expr></argument>, <argument pos:start="17:42" pos:end="17:46"><expr pos:start="17:42" pos:end="17:46"><operator pos:start="17:42" pos:end="17:42">&amp;</operator><name pos:start="17:43" pos:end="17:46">mode</name></expr></argument>, <argument pos:start="17:49" pos:end="17:52"><expr pos:start="17:49" pos:end="17:52"><operator pos:start="17:49" pos:end="17:49">&amp;</operator><name pos:start="17:50" pos:end="17:52">uid</name></expr></argument>, <argument pos:start="17:55" pos:end="17:58"><expr pos:start="17:55" pos:end="17:58"><operator pos:start="17:55" pos:end="17:55">&amp;</operator><name pos:start="17:56" pos:end="17:58">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:16">(<expr pos:start="19:9" pos:end="19:15"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <literal type="number" pos:start="19:15" pos:end="19:15">0</literal></expr>)</condition> <block pos:start="19:18" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:31">

        <goto pos:start="21:9" pos:end="21:31">goto <name pos:start="21:14" pos:end="21:30">unmarshal_err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:24"><expr pos:start="25:5" pos:end="25:23"><name pos:start="25:5" pos:end="25:11">cur_uid</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <call pos:start="25:15" pos:end="25:23"><name pos:start="25:15" pos:end="25:21">geteuid</name><argument_list pos:start="25:22" pos:end="25:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:24"><expr pos:start="27:5" pos:end="27:23"><name pos:start="27:5" pos:end="27:11">cur_gid</name> <operator pos:start="27:13" pos:end="27:13">=</operator> <call pos:start="27:15" pos:end="27:23"><name pos:start="27:15" pos:end="27:21">getegid</name><argument_list pos:start="27:22" pos:end="27:23">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:7">ret</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:29"><name pos:start="29:11" pos:end="29:19">setfsugid</name><argument_list pos:start="29:20" pos:end="29:29">(<argument pos:start="29:21" pos:end="29:23"><expr pos:start="29:21" pos:end="29:23"><name pos:start="29:21" pos:end="29:23">uid</name></expr></argument>, <argument pos:start="29:26" pos:end="29:28"><expr pos:start="29:26" pos:end="29:28"><name pos:start="29:26" pos:end="29:28">gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="45:5"><if pos:start="31:5" pos:end="45:5">if <condition pos:start="31:8" pos:end="31:16">(<expr pos:start="31:9" pos:end="31:15"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">&lt;</operator> <literal type="number" pos:start="31:15" pos:end="31:15">0</literal></expr>)</condition> <block pos:start="31:18" pos:end="45:5">{<block_content pos:start="41:9" pos:end="43:21">

        <comment type="block" pos:start="33:9" pos:end="39:11">/*

         * On failure reset back to the

         * old uid/gid

         */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:21"><expr pos:start="41:9" pos:end="41:20"><name pos:start="41:9" pos:end="41:11">ret</name> <operator pos:start="41:13" pos:end="41:13">=</operator> <operator pos:start="41:15" pos:end="41:15">-</operator><name pos:start="41:16" pos:end="41:20">errno</name></expr>;</expr_stmt>

        <goto pos:start="43:9" pos:end="43:21">goto <name pos:start="43:14" pos:end="43:20">err_out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:39"><expr pos:start="47:5" pos:end="47:38"><name pos:start="47:5" pos:end="47:7">ret</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <call pos:start="47:11" pos:end="47:38"><name pos:start="47:11" pos:end="47:14">open</name><argument_list pos:start="47:15" pos:end="47:38">(<argument pos:start="47:16" pos:end="47:24"><expr pos:start="47:16" pos:end="47:24"><name pos:start="47:16" pos:end="47:24"><name pos:start="47:16" pos:end="47:19">path</name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:24">data</name></name></expr></argument>, <argument pos:start="47:27" pos:end="47:31"><expr pos:start="47:27" pos:end="47:31"><name pos:start="47:27" pos:end="47:31">flags</name></expr></argument>, <argument pos:start="47:34" pos:end="47:37"><expr pos:start="47:34" pos:end="47:37"><name pos:start="47:34" pos:end="47:37">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="49:5" pos:end="53:5"><if pos:start="49:5" pos:end="53:5">if <condition pos:start="49:8" pos:end="49:16">(<expr pos:start="49:9" pos:end="49:15"><name pos:start="49:9" pos:end="49:11">ret</name> <operator pos:start="49:13" pos:end="49:13">&lt;</operator> <literal type="number" pos:start="49:15" pos:end="49:15">0</literal></expr>)</condition> <block pos:start="49:18" pos:end="53:5">{<block_content pos:start="51:9" pos:end="51:21">

        <expr_stmt pos:start="51:9" pos:end="51:21"><expr pos:start="51:9" pos:end="51:20"><name pos:start="51:9" pos:end="51:11">ret</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <operator pos:start="51:15" pos:end="51:15">-</operator><name pos:start="51:16" pos:end="51:20">errno</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



<label pos:start="57:1" pos:end="57:8"><name pos:start="57:1" pos:end="57:7">err_out</name>:</label>

    <expr_stmt pos:start="59:5" pos:end="59:32"><expr pos:start="59:5" pos:end="59:31"><call pos:start="59:5" pos:end="59:31"><name pos:start="59:5" pos:end="59:13">setfsugid</name><argument_list pos:start="59:14" pos:end="59:31">(<argument pos:start="59:15" pos:end="59:21"><expr pos:start="59:15" pos:end="59:21"><name pos:start="59:15" pos:end="59:21">cur_uid</name></expr></argument>, <argument pos:start="59:24" pos:end="59:30"><expr pos:start="59:24" pos:end="59:30"><name pos:start="59:24" pos:end="59:30">cur_gid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="61:1" pos:end="61:18"><name pos:start="61:1" pos:end="61:17">unmarshal_err_out</name>:</label>

    <expr_stmt pos:start="63:5" pos:end="63:28"><expr pos:start="63:5" pos:end="63:27"><call pos:start="63:5" pos:end="63:27"><name pos:start="63:5" pos:end="63:20">v9fs_string_free</name><argument_list pos:start="63:21" pos:end="63:27">(<argument pos:start="63:22" pos:end="63:26"><expr pos:start="63:22" pos:end="63:26"><operator pos:start="63:22" pos:end="63:22">&amp;</operator><name pos:start="63:23" pos:end="63:26">path</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="65:5" pos:end="65:15">return <expr pos:start="65:12" pos:end="65:14"><name pos:start="65:12" pos:end="65:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
