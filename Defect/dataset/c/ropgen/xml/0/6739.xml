<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6739.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:19"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:19">target_ulong</name></type> <name pos:start="1:21" pos:end="1:54">h_set_mode_resouce_addr_trans_mode</name><parameter_list pos:start="1:55" pos:end="7:75">(<parameter pos:start="1:56" pos:end="1:70"><decl pos:start="1:56" pos:end="1:70"><type pos:start="1:56" pos:end="1:70"><name pos:start="1:56" pos:end="1:65">PowerPCCPU</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:70">cpu</name></decl></parameter>,

                                                       <parameter pos:start="3:56" pos:end="3:74"><decl pos:start="3:56" pos:end="3:74"><type pos:start="3:56" pos:end="3:74"><name pos:start="3:56" pos:end="3:67">target_ulong</name></type> <name pos:start="3:69" pos:end="3:74">mflags</name></decl></parameter>,

                                                       <parameter pos:start="5:56" pos:end="5:74"><decl pos:start="5:56" pos:end="5:74"><type pos:start="5:56" pos:end="5:74"><name pos:start="5:56" pos:end="5:67">target_ulong</name></type> <name pos:start="5:69" pos:end="5:74">value1</name></decl></parameter>,

                                                       <parameter pos:start="7:56" pos:end="7:74"><decl pos:start="7:56" pos:end="7:74"><type pos:start="7:56" pos:end="7:74"><name pos:start="7:56" pos:end="7:67">target_ulong</name></type> <name pos:start="7:69" pos:end="7:74">value2</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="83:1">{<block_content pos:start="11:5" pos:end="81:21">

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">CPUState</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">cs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:54"><decl pos:start="13:5" pos:end="13:53"><type pos:start="13:5" pos:end="13:21"><name pos:start="13:5" pos:end="13:19">PowerPCCPUClass</name> <modifier pos:start="13:21" pos:end="13:21">*</modifier></type><name pos:start="13:22" pos:end="13:24">pcc</name> <init pos:start="13:26" pos:end="13:53">= <expr pos:start="13:28" pos:end="13:53"><call pos:start="13:28" pos:end="13:53"><name pos:start="13:28" pos:end="13:48">POWERPC_CPU_GET_CLASS</name><argument_list pos:start="13:49" pos:end="13:53">(<argument pos:start="13:50" pos:end="13:52"><expr pos:start="13:50" pos:end="13:52"><name pos:start="13:50" pos:end="13:52">cpu</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:24"><decl pos:start="15:5" pos:end="15:23"><type pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">target_ulong</name></type> <name pos:start="15:18" pos:end="15:23">prefix</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="23:5"><if pos:start="19:5" pos:end="23:5">if <condition pos:start="19:8" pos:end="19:44">(<expr pos:start="19:9" pos:end="19:43"><operator pos:start="19:9" pos:end="19:9">!</operator><operator pos:start="19:10" pos:end="19:10">(</operator><name pos:start="19:11" pos:end="19:27"><name pos:start="19:11" pos:end="19:13">pcc</name><operator pos:start="19:14" pos:end="19:15">-&gt;</operator><name pos:start="19:16" pos:end="19:27">insns_flags2</name></name> <operator pos:start="19:29" pos:end="19:29">&amp;</operator> <name pos:start="19:31" pos:end="19:42">PPC2_ISA207S</name><operator pos:start="19:43" pos:end="19:43">)</operator></expr>)</condition> <block pos:start="19:46" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:20">

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">H_P2</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:15">(<expr pos:start="25:9" pos:end="25:14"><name pos:start="25:9" pos:end="25:14">value1</name></expr>)</condition> <block pos:start="25:17" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">H_P3</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="31:5" pos:end="35:5"><if pos:start="31:5" pos:end="35:5">if <condition pos:start="31:8" pos:end="31:15">(<expr pos:start="31:9" pos:end="31:14"><name pos:start="31:9" pos:end="31:14">value2</name></expr>)</condition> <block pos:start="31:17" pos:end="35:5">{<block_content pos:start="33:9" pos:end="33:20">

        <return pos:start="33:9" pos:end="33:20">return <expr pos:start="33:16" pos:end="33:19"><name pos:start="33:16" pos:end="33:19">H_P4</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="39:5" pos:end="63:5">switch <condition pos:start="39:12" pos:end="39:19">(<expr pos:start="39:13" pos:end="39:18"><name pos:start="39:13" pos:end="39:18">mflags</name></expr>)</condition> <block pos:start="39:21" pos:end="63:5">{<block_content pos:start="41:5" pos:end="61:34">

    <case pos:start="41:5" pos:end="41:36">case <expr pos:start="41:10" pos:end="41:35"><name pos:start="41:10" pos:end="41:35">H_SET_MODE_ADDR_TRANS_NONE</name></expr>:</case>

        <expr_stmt pos:start="43:9" pos:end="43:19"><expr pos:start="43:9" pos:end="43:18"><name pos:start="43:9" pos:end="43:14">prefix</name> <operator pos:start="43:16" pos:end="43:16">=</operator> <literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>;</expr_stmt>

        <break pos:start="45:9" pos:end="45:14">break;</break>

    <case pos:start="47:5" pos:end="47:41">case <expr pos:start="47:10" pos:end="47:40"><name pos:start="47:10" pos:end="47:40">H_SET_MODE_ADDR_TRANS_0001_8000</name></expr>:</case>

        <expr_stmt pos:start="49:9" pos:end="49:25"><expr pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:14">prefix</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:24">0x18000</literal></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:51">case <expr pos:start="53:10" pos:end="53:50"><name pos:start="53:10" pos:end="53:50">H_SET_MODE_ADDR_TRANS_C000_0000_0000_4000</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:36"><expr pos:start="55:9" pos:end="55:35"><name pos:start="55:9" pos:end="55:14">prefix</name> <operator pos:start="55:16" pos:end="55:16">=</operator> <literal type="number" pos:start="55:18" pos:end="55:35">0xC000000000004000</literal></expr>;</expr_stmt>

        <break pos:start="57:9" pos:end="57:14">break;</break>

    <default pos:start="59:5" pos:end="59:12">default:</default>

        <return pos:start="61:9" pos:end="61:34">return <expr pos:start="61:16" pos:end="61:33"><name pos:start="61:16" pos:end="61:33">H_UNSUPPORTED_FLAG</name></expr>;</return>

    </block_content>}</block></switch>



    <macro pos:start="67:5" pos:end="67:19"><name pos:start="67:5" pos:end="67:15">CPU_FOREACH</name><argument_list pos:start="67:16" pos:end="67:19">(<argument pos:start="67:17" pos:end="67:18">cs</argument>)</argument_list></macro> <block pos:start="67:21" pos:end="77:5">{<block_content pos:start="69:9" pos:end="75:34">

        <decl_stmt pos:start="69:9" pos:end="69:50"><decl pos:start="69:9" pos:end="69:49"><type pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:19">CPUPPCState</name> <modifier pos:start="69:21" pos:end="69:21">*</modifier></type><name pos:start="69:22" pos:end="69:24">env</name> <init pos:start="69:26" pos:end="69:49">= <expr pos:start="69:28" pos:end="69:49"><operator pos:start="69:28" pos:end="69:28">&amp;</operator><call pos:start="69:29" pos:end="69:44"><name pos:start="69:29" pos:end="69:39">POWERPC_CPU</name><argument_list pos:start="69:40" pos:end="69:44">(<argument pos:start="69:41" pos:end="69:43"><expr pos:start="69:41" pos:end="69:43"><name pos:start="69:41" pos:end="69:43">cpu</name></expr></argument>)</argument_list></call><operator pos:start="69:45" pos:end="69:46">-&gt;</operator><name pos:start="69:47" pos:end="69:49">env</name></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:66"><expr pos:start="73:9" pos:end="73:65"><call pos:start="73:9" pos:end="73:65"><name pos:start="73:9" pos:end="73:15">set_spr</name><argument_list pos:start="73:16" pos:end="73:65">(<argument pos:start="73:17" pos:end="73:18"><expr pos:start="73:17" pos:end="73:18"><name pos:start="73:17" pos:end="73:18">cs</name></expr></argument>, <argument pos:start="73:21" pos:end="73:28"><expr pos:start="73:21" pos:end="73:28"><name pos:start="73:21" pos:end="73:28">SPR_LPCR</name></expr></argument>, <argument pos:start="73:31" pos:end="73:54"><expr pos:start="73:31" pos:end="73:54"><name pos:start="73:31" pos:end="73:36">mflags</name> <operator pos:start="73:38" pos:end="73:39">&lt;&lt;</operator> <name pos:start="73:41" pos:end="73:54">LPCR_AIL_SHIFT</name></expr></argument>, <argument pos:start="73:57" pos:end="73:64"><expr pos:start="73:57" pos:end="73:64"><name pos:start="73:57" pos:end="73:64">LPCR_AIL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:34"><expr pos:start="75:9" pos:end="75:33"><name pos:start="75:9" pos:end="75:24"><name pos:start="75:9" pos:end="75:11">env</name><operator pos:start="75:12" pos:end="75:13">-&gt;</operator><name pos:start="75:14" pos:end="75:24">excp_prefix</name></name> <operator pos:start="75:26" pos:end="75:26">=</operator> <name pos:start="75:28" pos:end="75:33">prefix</name></expr>;</expr_stmt>

    </block_content>}</block>



    <return pos:start="81:5" pos:end="81:21">return <expr pos:start="81:12" pos:end="81:20"><name pos:start="81:12" pos:end="81:20">H_SUCCESS</name></expr>;</return>

</block_content>}</block></function>
</unit>
