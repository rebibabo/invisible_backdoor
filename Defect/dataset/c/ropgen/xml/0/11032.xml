<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11032.c" pos:tabs="8"><macro pos:start="1:1" pos:end="9:79"><name pos:start="1:1" pos:end="1:28">yuv2rgba64_full_2_c_template</name><argument_list pos:start="1:29" pos:end="9:79">(<argument pos:start="1:30" pos:end="1:42">SwsContext *c</argument>, <argument pos:start="1:45" pos:end="1:65">const int32_t *buf[<literal type="number" pos:start="1:64" pos:end="1:64">2</literal>]</argument>,

                       <argument pos:start="3:24" pos:end="3:45">const int32_t *ubuf[<literal type="number" pos:start="3:44" pos:end="3:44">2</literal>]</argument>, <argument pos:start="3:48" pos:end="3:69">const int32_t *vbuf[<literal type="number" pos:start="3:68" pos:end="3:68">2</literal>]</argument>,

                       <argument pos:start="5:24" pos:end="5:45">const int32_t *abuf[<literal type="number" pos:start="5:44" pos:end="5:44">2</literal>]</argument>, <argument pos:start="5:48" pos:end="5:61">uint16_t *dest</argument>, <argument pos:start="5:64" pos:end="5:71">int dstW</argument>,

                       <argument pos:start="7:24" pos:end="7:33">int yalpha</argument>, <argument pos:start="7:36" pos:end="7:46">int uvalpha</argument>, <argument pos:start="7:49" pos:end="7:53">int y</argument>,

                       <argument pos:start="9:24" pos:end="9:48">enum AVPixelFormat target</argument>, <argument pos:start="9:51" pos:end="9:62">int hasAlpha</argument>, <argument pos:start="9:65" pos:end="9:78">int eightbytes</argument>)</argument_list></macro>

<block pos:start="11:1" pos:end="93:1">{<block_content pos:start="13:5" pos:end="91:5">

    <decl_stmt pos:start="13:5" pos:end="21:53"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">int32_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:23">buf0</name>  <init pos:start="13:26" pos:end="13:33">= <expr pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:33"><name pos:start="13:28" pos:end="13:30">buf</name><index pos:start="13:31" pos:end="13:33">[<expr pos:start="13:32" pos:end="13:32"><literal type="number" pos:start="13:32" pos:end="13:32">0</literal></expr>]</index></name></expr></init></decl>,  <decl pos:start="13:37" pos:end="13:51"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="13:37" pos:end="13:37">*</modifier></type><name pos:start="13:38" pos:end="13:41">buf1</name>  <init pos:start="13:44" pos:end="13:51">= <expr pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:51"><name pos:start="13:46" pos:end="13:48">buf</name><index pos:start="13:49" pos:end="13:51">[<expr pos:start="13:50" pos:end="13:50"><literal type="number" pos:start="13:50" pos:end="13:50">1</literal></expr>]</index></name></expr></init></decl>,

                  <decl pos:start="15:19" pos:end="15:34"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="15:19" pos:end="15:19">*</modifier></type><name pos:start="15:20" pos:end="15:24">ubuf0</name> <init pos:start="15:26" pos:end="15:34">= <expr pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:34"><name pos:start="15:28" pos:end="15:31">ubuf</name><index pos:start="15:32" pos:end="15:34">[<expr pos:start="15:33" pos:end="15:33"><literal type="number" pos:start="15:33" pos:end="15:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="15:37" pos:end="15:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="15:37" pos:end="15:37">*</modifier></type><name pos:start="15:38" pos:end="15:42">ubuf1</name> <init pos:start="15:44" pos:end="15:52">= <expr pos:start="15:46" pos:end="15:52"><name pos:start="15:46" pos:end="15:52"><name pos:start="15:46" pos:end="15:49">ubuf</name><index pos:start="15:50" pos:end="15:52">[<expr pos:start="15:51" pos:end="15:51"><literal type="number" pos:start="15:51" pos:end="15:51">1</literal></expr>]</index></name></expr></init></decl>,

                  <decl pos:start="17:19" pos:end="17:34"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="17:19" pos:end="17:19">*</modifier></type><name pos:start="17:20" pos:end="17:24">vbuf0</name> <init pos:start="17:26" pos:end="17:34">= <expr pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:34"><name pos:start="17:28" pos:end="17:31">vbuf</name><index pos:start="17:32" pos:end="17:34">[<expr pos:start="17:33" pos:end="17:33"><literal type="number" pos:start="17:33" pos:end="17:33">0</literal></expr>]</index></name></expr></init></decl>, <decl pos:start="17:37" pos:end="17:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="17:37" pos:end="17:37">*</modifier></type><name pos:start="17:38" pos:end="17:42">vbuf1</name> <init pos:start="17:44" pos:end="17:52">= <expr pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:52"><name pos:start="17:46" pos:end="17:49">vbuf</name><index pos:start="17:50" pos:end="17:52">[<expr pos:start="17:51" pos:end="17:51"><literal type="number" pos:start="17:51" pos:end="17:51">1</literal></expr>]</index></name></expr></init></decl>,

                  <decl pos:start="19:19" pos:end="19:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:24">abuf0</name> <init pos:start="19:26" pos:end="19:52">= <expr pos:start="19:28" pos:end="19:52"><ternary pos:start="19:28" pos:end="19:52"><condition pos:start="19:28" pos:end="19:37"><expr pos:start="19:28" pos:end="19:35"><name pos:start="19:28" pos:end="19:35">hasAlpha</name></expr> ?</condition><then pos:start="19:39" pos:end="19:45"> <expr pos:start="19:39" pos:end="19:45"><name pos:start="19:39" pos:end="19:45"><name pos:start="19:39" pos:end="19:42">abuf</name><index pos:start="19:43" pos:end="19:45">[<expr pos:start="19:44" pos:end="19:44"><literal type="number" pos:start="19:44" pos:end="19:44">0</literal></expr>]</index></name></expr> </then><else pos:start="19:47" pos:end="19:52">: <expr pos:start="19:49" pos:end="19:52"><name pos:start="19:49" pos:end="19:52">NULL</name></expr></else></ternary></expr></init></decl>,

                  <decl pos:start="21:19" pos:end="21:52"><type ref="prev" pos:start="13:5" pos:end="13:19"><modifier pos:start="21:19" pos:end="21:19">*</modifier></type><name pos:start="21:20" pos:end="21:24">abuf1</name> <init pos:start="21:26" pos:end="21:52">= <expr pos:start="21:28" pos:end="21:52"><ternary pos:start="21:28" pos:end="21:52"><condition pos:start="21:28" pos:end="21:37"><expr pos:start="21:28" pos:end="21:35"><name pos:start="21:28" pos:end="21:35">hasAlpha</name></expr> ?</condition><then pos:start="21:39" pos:end="21:45"> <expr pos:start="21:39" pos:end="21:45"><name pos:start="21:39" pos:end="21:45"><name pos:start="21:39" pos:end="21:42">abuf</name><index pos:start="21:43" pos:end="21:45">[<expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">1</literal></expr>]</index></name></expr> </then><else pos:start="21:47" pos:end="21:52">: <expr pos:start="21:49" pos:end="21:52"><name pos:start="21:49" pos:end="21:52">NULL</name></expr></else></ternary></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:33"><decl pos:start="23:5" pos:end="23:32"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type>  <name pos:start="23:10" pos:end="23:16">yalpha1</name> <init pos:start="23:18" pos:end="23:32">= <expr pos:start="23:20" pos:end="23:32"><literal type="number" pos:start="23:20" pos:end="23:25">4096</literal> <operator pos:start="23:25" pos:end="23:25">-</operator> <name pos:start="23:27" pos:end="23:32">yalpha</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:34"><decl pos:start="25:5" pos:end="25:33"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">uvalpha1</name> <init pos:start="25:18" pos:end="25:33">= <expr pos:start="25:20" pos:end="25:33"><literal type="number" pos:start="25:20" pos:end="25:25">4096</literal> <operator pos:start="25:25" pos:end="25:25">-</operator> <name pos:start="25:27" pos:end="25:33">uvalpha</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:10"><decl pos:start="27:5" pos:end="27:9"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:9">A</name> <init pos:start="29:11" pos:end="29:22">= <expr pos:start="29:13" pos:end="29:22"><literal type="number" pos:start="29:13" pos:end="29:18">0xffff</literal><operator pos:start="29:19" pos:end="29:20">&lt;&lt;</operator><literal type="number" pos:start="29:21" pos:end="29:22">14</literal></expr></init></decl>;</decl_stmt>



    <for pos:start="33:5" pos:end="91:5">for <control pos:start="33:9" pos:end="33:30">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:25"><expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:24">dstW</name></expr>;</condition> <incr pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:27">i</name><operator pos:start="33:28" pos:end="33:29">++</operator></expr></incr>)</control> <block pos:start="33:32" pos:end="91:5">{<block_content pos:start="35:9" pos:end="89:9">

        <decl_stmt pos:start="35:9" pos:end="35:71"><decl pos:start="35:9" pos:end="35:70"><type pos:start="35:9" pos:end="35:11"><name pos:start="35:9" pos:end="35:11">int</name></type> <name pos:start="35:13" pos:end="35:13">Y</name>  <init pos:start="35:16" pos:end="35:70">= <expr pos:start="35:18" pos:end="35:70"><operator pos:start="35:18" pos:end="35:18">(</operator><name pos:start="35:19" pos:end="35:25"><name pos:start="35:19" pos:end="35:22">buf0</name><index pos:start="35:23" pos:end="35:25">[<expr pos:start="35:24" pos:end="35:24"><name pos:start="35:24" pos:end="35:24">i</name></expr>]</index></name>     <operator pos:start="35:31" pos:end="35:31">*</operator> <name pos:start="35:33" pos:end="35:39">yalpha1</name>  <operator pos:start="35:42" pos:end="35:42">+</operator> <name pos:start="35:44" pos:end="35:50"><name pos:start="35:44" pos:end="35:47">buf1</name><index pos:start="35:48" pos:end="35:50">[<expr pos:start="35:49" pos:end="35:49"><name pos:start="35:49" pos:end="35:49">i</name></expr>]</index></name>     <operator pos:start="35:56" pos:end="35:56">*</operator> <name pos:start="35:58" pos:end="35:63">yalpha</name><operator pos:start="35:64" pos:end="35:64">)</operator> <operator pos:start="35:66" pos:end="35:67">&gt;&gt;</operator> <literal type="number" pos:start="35:69" pos:end="35:70">14</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="37:9" pos:end="37:87"><decl pos:start="37:9" pos:end="37:86"><type pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">int</name></type> <name pos:start="37:13" pos:end="37:13">U</name>  <init pos:start="37:16" pos:end="37:86">= <expr pos:start="37:18" pos:end="37:86"><operator pos:start="37:18" pos:end="37:18">(</operator><name pos:start="37:19" pos:end="37:26"><name pos:start="37:19" pos:end="37:23">ubuf0</name><index pos:start="37:24" pos:end="37:26">[<expr pos:start="37:25" pos:end="37:25"><name pos:start="37:25" pos:end="37:25">i</name></expr>]</index></name>   <operator pos:start="37:30" pos:end="37:30">*</operator> <name pos:start="37:32" pos:end="37:39">uvalpha1</name> <operator pos:start="37:41" pos:end="37:41">+</operator> <name pos:start="37:43" pos:end="37:50"><name pos:start="37:43" pos:end="37:47">ubuf1</name><index pos:start="37:48" pos:end="37:50">[<expr pos:start="37:49" pos:end="37:49"><name pos:start="37:49" pos:end="37:49">i</name></expr>]</index></name>     <operator pos:start="37:56" pos:end="37:56">*</operator> <name pos:start="37:58" pos:end="37:64">uvalpha</name> <operator pos:start="37:66" pos:end="37:66">+</operator> <operator pos:start="37:68" pos:end="37:68">(</operator><operator pos:start="37:69" pos:end="37:69">-</operator><literal type="number" pos:start="37:70" pos:end="37:72">128</literal> <operator pos:start="37:74" pos:end="37:75">&lt;&lt;</operator> <literal type="number" pos:start="37:77" pos:end="37:78">23</literal><operator pos:start="37:79" pos:end="37:79">)</operator><operator pos:start="37:80" pos:end="37:80">)</operator> <operator pos:start="37:82" pos:end="37:83">&gt;&gt;</operator> <literal type="number" pos:start="37:85" pos:end="37:86">14</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="39:9" pos:end="39:87"><decl pos:start="39:9" pos:end="39:86"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:13">V</name>  <init pos:start="39:16" pos:end="39:86">= <expr pos:start="39:18" pos:end="39:86"><operator pos:start="39:18" pos:end="39:18">(</operator><name pos:start="39:19" pos:end="39:26"><name pos:start="39:19" pos:end="39:23">vbuf0</name><index pos:start="39:24" pos:end="39:26">[<expr pos:start="39:25" pos:end="39:25"><name pos:start="39:25" pos:end="39:25">i</name></expr>]</index></name>   <operator pos:start="39:30" pos:end="39:30">*</operator> <name pos:start="39:32" pos:end="39:39">uvalpha1</name> <operator pos:start="39:41" pos:end="39:41">+</operator> <name pos:start="39:43" pos:end="39:50"><name pos:start="39:43" pos:end="39:47">vbuf1</name><index pos:start="39:48" pos:end="39:50">[<expr pos:start="39:49" pos:end="39:49"><name pos:start="39:49" pos:end="39:49">i</name></expr>]</index></name>     <operator pos:start="39:56" pos:end="39:56">*</operator> <name pos:start="39:58" pos:end="39:64">uvalpha</name> <operator pos:start="39:66" pos:end="39:66">+</operator> <operator pos:start="39:68" pos:end="39:68">(</operator><operator pos:start="39:69" pos:end="39:69">-</operator><literal type="number" pos:start="39:70" pos:end="39:72">128</literal> <operator pos:start="39:74" pos:end="39:75">&lt;&lt;</operator> <literal type="number" pos:start="39:77" pos:end="39:78">23</literal><operator pos:start="39:79" pos:end="39:79">)</operator><operator pos:start="39:80" pos:end="39:80">)</operator> <operator pos:start="39:82" pos:end="39:83">&gt;&gt;</operator> <literal type="number" pos:start="39:85" pos:end="39:86">14</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:20"><decl pos:start="41:9" pos:end="41:13"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:13">R</name></decl>, <decl pos:start="41:16" pos:end="41:16"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:16" pos:end="41:16">G</name></decl>, <decl pos:start="41:19" pos:end="41:19"><type ref="prev" pos:start="41:9" pos:end="41:11"/><name pos:start="41:19" pos:end="41:19">B</name></decl>;</decl_stmt>



        <expr_stmt pos:start="45:9" pos:end="45:33"><expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:9">Y</name> <operator pos:start="45:11" pos:end="45:12">-=</operator> <name pos:start="45:14" pos:end="45:32"><name pos:start="45:14" pos:end="45:14">c</name><operator pos:start="45:15" pos:end="45:16">-&gt;</operator><name pos:start="45:17" pos:end="45:32">yuv2rgb_y_offset</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:32"><expr pos:start="47:9" pos:end="47:31"><name pos:start="47:9" pos:end="47:9">Y</name> <operator pos:start="47:11" pos:end="47:12">*=</operator> <name pos:start="47:14" pos:end="47:31"><name pos:start="47:14" pos:end="47:14">c</name><operator pos:start="47:15" pos:end="47:16">-&gt;</operator><name pos:start="47:17" pos:end="47:31">yuv2rgb_y_coeff</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:21"><expr pos:start="49:9" pos:end="49:20"><name pos:start="49:9" pos:end="49:9">Y</name> <operator pos:start="49:11" pos:end="49:12">+=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">1</literal> <operator pos:start="49:16" pos:end="49:17">&lt;&lt;</operator> <literal type="number" pos:start="49:19" pos:end="49:20">13</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="53:9" pos:end="53:37"><expr pos:start="53:9" pos:end="53:36"><name pos:start="53:9" pos:end="53:9">R</name> <operator pos:start="53:11" pos:end="53:11">=</operator> <name pos:start="53:13" pos:end="53:13">V</name> <operator pos:start="53:15" pos:end="53:15">*</operator> <name pos:start="53:17" pos:end="53:36"><name pos:start="53:17" pos:end="53:17">c</name><operator pos:start="53:18" pos:end="53:19">-&gt;</operator><name pos:start="53:20" pos:end="53:36">yuv2rgb_v2r_coeff</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:64"><expr pos:start="55:9" pos:end="55:63"><name pos:start="55:9" pos:end="55:9">G</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <name pos:start="55:13" pos:end="55:13">V</name> <operator pos:start="55:15" pos:end="55:15">*</operator> <name pos:start="55:17" pos:end="55:36"><name pos:start="55:17" pos:end="55:17">c</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:36">yuv2rgb_v2g_coeff</name></name> <operator pos:start="55:38" pos:end="55:38">+</operator> <name pos:start="55:40" pos:end="55:40">U</name> <operator pos:start="55:42" pos:end="55:42">*</operator> <name pos:start="55:44" pos:end="55:63"><name pos:start="55:44" pos:end="55:44">c</name><operator pos:start="55:45" pos:end="55:46">-&gt;</operator><name pos:start="55:47" pos:end="55:63">yuv2rgb_u2g_coeff</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:64"><expr pos:start="57:9" pos:end="57:63"><name pos:start="57:9" pos:end="57:9">B</name> <operator pos:start="57:11" pos:end="57:11">=</operator>                            <name pos:start="57:40" pos:end="57:40">U</name> <operator pos:start="57:42" pos:end="57:42">*</operator> <name pos:start="57:44" pos:end="57:63"><name pos:start="57:44" pos:end="57:44">c</name><operator pos:start="57:45" pos:end="57:46">-&gt;</operator><name pos:start="57:47" pos:end="57:63">yuv2rgb_u2b_coeff</name></name></expr>;</expr_stmt>



        <if_stmt pos:start="61:9" pos:end="69:9"><if pos:start="61:9" pos:end="69:9">if <condition pos:start="61:12" pos:end="61:21">(<expr pos:start="61:13" pos:end="61:20"><name pos:start="61:13" pos:end="61:20">hasAlpha</name></expr>)</condition> <block pos:start="61:23" pos:end="69:9">{<block_content pos:start="63:13" pos:end="67:25">

            <expr_stmt pos:start="63:13" pos:end="63:62"><expr pos:start="63:13" pos:end="63:61"><name pos:start="63:13" pos:end="63:13">A</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <operator pos:start="63:17" pos:end="63:17">(</operator><name pos:start="63:18" pos:end="63:25"><name pos:start="63:18" pos:end="63:22">abuf0</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><name pos:start="63:24" pos:end="63:24">i</name></expr>]</index></name> <operator pos:start="63:27" pos:end="63:27">*</operator> <name pos:start="63:29" pos:end="63:35">yalpha1</name> <operator pos:start="63:37" pos:end="63:37">+</operator> <name pos:start="63:39" pos:end="63:46"><name pos:start="63:39" pos:end="63:43">abuf1</name><index pos:start="63:44" pos:end="63:46">[<expr pos:start="63:45" pos:end="63:45"><name pos:start="63:45" pos:end="63:45">i</name></expr>]</index></name> <operator pos:start="63:48" pos:end="63:48">*</operator> <name pos:start="63:50" pos:end="63:55">yalpha</name><operator pos:start="63:56" pos:end="63:56">)</operator> <operator pos:start="63:58" pos:end="63:59">&gt;&gt;</operator> <literal type="number" pos:start="63:61" pos:end="63:61">1</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="67:13" pos:end="67:25"><expr pos:start="67:13" pos:end="67:24"><name pos:start="67:13" pos:end="67:13">A</name> <operator pos:start="67:15" pos:end="67:16">+=</operator> <literal type="number" pos:start="67:18" pos:end="67:18">1</literal> <operator pos:start="67:20" pos:end="67:21">&lt;&lt;</operator> <literal type="number" pos:start="67:23" pos:end="67:24">13</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="73:9" pos:end="73:66"><expr pos:start="73:9" pos:end="73:65"><call pos:start="73:9" pos:end="73:65"><name pos:start="73:9" pos:end="73:20">output_pixel</name><argument_list pos:start="73:21" pos:end="73:65">(<argument pos:start="73:22" pos:end="73:29"><expr pos:start="73:22" pos:end="73:29"><operator pos:start="73:22" pos:end="73:22">&amp;</operator><name pos:start="73:23" pos:end="73:29"><name pos:start="73:23" pos:end="73:26">dest</name><index pos:start="73:27" pos:end="73:29">[<expr pos:start="73:28" pos:end="73:28"><literal type="number" pos:start="73:28" pos:end="73:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="73:32" pos:end="73:64"><expr pos:start="73:32" pos:end="73:64"><call pos:start="73:32" pos:end="73:58"><name pos:start="73:32" pos:end="73:45">av_clip_uintp2</name><argument_list pos:start="73:46" pos:end="73:58">(<argument pos:start="73:47" pos:end="73:53"><expr pos:start="73:47" pos:end="73:53"><name pos:start="73:47" pos:end="73:49">R_B</name> <operator pos:start="73:51" pos:end="73:51">+</operator> <name pos:start="73:53" pos:end="73:53">Y</name></expr></argument>, <argument pos:start="73:56" pos:end="73:57"><expr pos:start="73:56" pos:end="73:57"><literal type="number" pos:start="73:56" pos:end="73:57">30</literal></expr></argument>)</argument_list></call> <operator pos:start="73:60" pos:end="73:61">&gt;&gt;</operator> <literal type="number" pos:start="73:63" pos:end="73:64">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:66"><expr pos:start="75:9" pos:end="75:65"><call pos:start="75:9" pos:end="75:65"><name pos:start="75:9" pos:end="75:20">output_pixel</name><argument_list pos:start="75:21" pos:end="75:65">(<argument pos:start="75:22" pos:end="75:29"><expr pos:start="75:22" pos:end="75:29"><operator pos:start="75:22" pos:end="75:22">&amp;</operator><name pos:start="75:23" pos:end="75:29"><name pos:start="75:23" pos:end="75:26">dest</name><index pos:start="75:27" pos:end="75:29">[<expr pos:start="75:28" pos:end="75:28"><literal type="number" pos:start="75:28" pos:end="75:28">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="75:32" pos:end="75:64"><expr pos:start="75:32" pos:end="75:64"><call pos:start="75:32" pos:end="75:58"><name pos:start="75:32" pos:end="75:45">av_clip_uintp2</name><argument_list pos:start="75:46" pos:end="75:58">(  <argument pos:start="75:49" pos:end="75:53"><expr pos:start="75:49" pos:end="75:53"><name pos:start="75:49" pos:end="75:49">G</name> <operator pos:start="75:51" pos:end="75:51">+</operator> <name pos:start="75:53" pos:end="75:53">Y</name></expr></argument>, <argument pos:start="75:56" pos:end="75:57"><expr pos:start="75:56" pos:end="75:57"><literal type="number" pos:start="75:56" pos:end="75:57">30</literal></expr></argument>)</argument_list></call> <operator pos:start="75:60" pos:end="75:61">&gt;&gt;</operator> <literal type="number" pos:start="75:63" pos:end="75:64">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:66"><expr pos:start="77:9" pos:end="77:65"><call pos:start="77:9" pos:end="77:65"><name pos:start="77:9" pos:end="77:20">output_pixel</name><argument_list pos:start="77:21" pos:end="77:65">(<argument pos:start="77:22" pos:end="77:29"><expr pos:start="77:22" pos:end="77:29"><operator pos:start="77:22" pos:end="77:22">&amp;</operator><name pos:start="77:23" pos:end="77:29"><name pos:start="77:23" pos:end="77:26">dest</name><index pos:start="77:27" pos:end="77:29">[<expr pos:start="77:28" pos:end="77:28"><literal type="number" pos:start="77:28" pos:end="77:28">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="77:32" pos:end="77:64"><expr pos:start="77:32" pos:end="77:64"><call pos:start="77:32" pos:end="77:58"><name pos:start="77:32" pos:end="77:45">av_clip_uintp2</name><argument_list pos:start="77:46" pos:end="77:58">(<argument pos:start="77:47" pos:end="77:53"><expr pos:start="77:47" pos:end="77:53"><name pos:start="77:47" pos:end="77:49">B_R</name> <operator pos:start="77:51" pos:end="77:51">+</operator> <name pos:start="77:53" pos:end="77:53">Y</name></expr></argument>, <argument pos:start="77:56" pos:end="77:57"><expr pos:start="77:56" pos:end="77:57"><literal type="number" pos:start="77:56" pos:end="77:57">30</literal></expr></argument>)</argument_list></call> <operator pos:start="77:60" pos:end="77:61">&gt;&gt;</operator> <literal type="number" pos:start="77:63" pos:end="77:64">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="89:9"><if pos:start="79:9" pos:end="85:9">if <condition pos:start="79:12" pos:end="79:23">(<expr pos:start="79:13" pos:end="79:22"><name pos:start="79:13" pos:end="79:22">eightbytes</name></expr>)</condition> <block pos:start="79:25" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:22">

            <expr_stmt pos:start="81:13" pos:end="81:64"><expr pos:start="81:13" pos:end="81:63"><call pos:start="81:13" pos:end="81:63"><name pos:start="81:13" pos:end="81:24">output_pixel</name><argument_list pos:start="81:25" pos:end="81:63">(<argument pos:start="81:26" pos:end="81:33"><expr pos:start="81:26" pos:end="81:33"><operator pos:start="81:26" pos:end="81:26">&amp;</operator><name pos:start="81:27" pos:end="81:33"><name pos:start="81:27" pos:end="81:30">dest</name><index pos:start="81:31" pos:end="81:33">[<expr pos:start="81:32" pos:end="81:32"><literal type="number" pos:start="81:32" pos:end="81:32">3</literal></expr>]</index></name></expr></argument>, <argument pos:start="81:36" pos:end="81:62"><expr pos:start="81:36" pos:end="81:62"><call pos:start="81:36" pos:end="81:56"><name pos:start="81:36" pos:end="81:49">av_clip_uintp2</name><argument_list pos:start="81:50" pos:end="81:56">(<argument pos:start="81:51" pos:end="81:51"><expr pos:start="81:51" pos:end="81:51"><name pos:start="81:51" pos:end="81:51">A</name></expr></argument>, <argument pos:start="81:54" pos:end="81:55"><expr pos:start="81:54" pos:end="81:55"><literal type="number" pos:start="81:54" pos:end="81:55">30</literal></expr></argument>)</argument_list></call> <operator pos:start="81:58" pos:end="81:59">&gt;&gt;</operator> <literal type="number" pos:start="81:61" pos:end="81:62">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:22"><expr pos:start="83:13" pos:end="83:21"><name pos:start="83:13" pos:end="83:16">dest</name> <operator pos:start="83:18" pos:end="83:19">+=</operator> <literal type="number" pos:start="83:21" pos:end="83:21">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="85:11" pos:end="89:9">else <block pos:start="85:16" pos:end="89:9">{<block_content pos:start="87:13" pos:end="87:22">

            <expr_stmt pos:start="87:13" pos:end="87:22"><expr pos:start="87:13" pos:end="87:21"><name pos:start="87:13" pos:end="87:16">dest</name> <operator pos:start="87:18" pos:end="87:19">+=</operator> <literal type="number" pos:start="87:21" pos:end="87:21">3</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

</block_content>}</block>
</unit>
