<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11000.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:35">g726_decode_init</name><parameter_list pos:start="1:36" pos:end="1:58">(<parameter pos:start="1:37" pos:end="1:57"><decl pos:start="1:37" pos:end="1:57"><type pos:start="1:37" pos:end="1:52"><name pos:start="1:37" pos:end="1:50">AVCodecContext</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:57">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:37"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:15">G726Context</name><modifier pos:start="5:16" pos:end="5:16">*</modifier></type> <name pos:start="5:18" pos:end="5:18">c</name> <init pos:start="5:20" pos:end="5:37">= <expr pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:37"><name pos:start="5:22" pos:end="5:26">avctx</name><operator pos:start="5:27" pos:end="5:28">-&gt;</operator><name pos:start="5:29" pos:end="5:37">priv_data</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:32">(<expr pos:start="9:9" pos:end="9:31"><name pos:start="9:9" pos:end="9:26"><name pos:start="9:9" pos:end="9:13">avctx</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:26">sample_rate</name></name> <operator pos:start="9:28" pos:end="9:29">&lt;=</operator> <literal type="number" pos:start="9:31" pos:end="9:31">0</literal></expr>)</condition> <block pos:start="9:34" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:18">

        <expr_stmt pos:start="11:9" pos:end="11:63"><expr pos:start="11:9" pos:end="11:62"><call pos:start="11:9" pos:end="11:62"><name pos:start="11:9" pos:end="11:14">av_log</name><argument_list pos:start="11:15" pos:end="11:62">(<argument pos:start="11:16" pos:end="11:20"><expr pos:start="11:16" pos:end="11:20"><name pos:start="11:16" pos:end="11:20">avctx</name></expr></argument>, <argument pos:start="11:23" pos:end="11:34"><expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="11:37" pos:end="11:61"><expr pos:start="11:37" pos:end="11:61"><literal type="string" pos:start="11:37" pos:end="11:61">"Samplerate is invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:18">return <expr pos:start="13:16" pos:end="13:17"><operator pos:start="13:16" pos:end="13:16">-</operator><literal type="number" pos:start="13:17" pos:end="13:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if<condition pos:start="19:7" pos:end="19:28">(<expr pos:start="19:8" pos:end="19:27"><name pos:start="19:8" pos:end="19:22"><name pos:start="19:8" pos:end="19:12">avctx</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:22">channels</name></name> <operator pos:start="19:24" pos:end="19:25">!=</operator> <literal type="number" pos:start="19:27" pos:end="19:27">1</literal></expr>)</condition><block pos:start="19:29" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:18">

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:14">av_log</name><argument_list pos:start="21:15" pos:end="21:63">(<argument pos:start="21:16" pos:end="21:20"><expr pos:start="21:16" pos:end="21:20"><name pos:start="21:16" pos:end="21:20">avctx</name></expr></argument>, <argument pos:start="21:23" pos:end="21:34"><expr pos:start="21:23" pos:end="21:34"><name pos:start="21:23" pos:end="21:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:37" pos:end="21:62"><expr pos:start="21:37" pos:end="21:62"><literal type="string" pos:start="21:37" pos:end="21:62">"Only mono is supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:18">return <expr pos:start="23:16" pos:end="23:17"><operator pos:start="23:16" pos:end="23:16">-</operator><literal type="number" pos:start="23:17" pos:end="23:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:16"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:16">code_size</name></name> <operator pos:start="29:18" pos:end="29:18">=</operator> <name pos:start="29:20" pos:end="29:47"><name pos:start="29:20" pos:end="29:24">avctx</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:47">bits_per_coded_sample</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:45">(<expr pos:start="31:9" pos:end="31:44"><name pos:start="31:9" pos:end="31:20"><name pos:start="31:9" pos:end="31:9">c</name><operator pos:start="31:10" pos:end="31:11">-&gt;</operator><name pos:start="31:12" pos:end="31:20">code_size</name></name> <operator pos:start="31:22" pos:end="31:22">&lt;</operator> <literal type="number" pos:start="31:24" pos:end="31:24">2</literal> <operator pos:start="31:26" pos:end="31:27">||</operator> <name pos:start="31:29" pos:end="31:40"><name pos:start="31:29" pos:end="31:29">c</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:40">code_size</name></name> <operator pos:start="31:42" pos:end="31:42">&gt;</operator> <literal type="number" pos:start="31:44" pos:end="31:44">5</literal></expr>)</condition> <block pos:start="31:47" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:31">

        <expr_stmt pos:start="33:9" pos:end="33:81"><expr pos:start="33:9" pos:end="33:80"><call pos:start="33:9" pos:end="33:80"><name pos:start="33:9" pos:end="33:14">av_log</name><argument_list pos:start="33:15" pos:end="33:80">(<argument pos:start="33:16" pos:end="33:20"><expr pos:start="33:16" pos:end="33:20"><name pos:start="33:16" pos:end="33:20">avctx</name></expr></argument>, <argument pos:start="33:23" pos:end="33:34"><expr pos:start="33:23" pos:end="33:34"><name pos:start="33:23" pos:end="33:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:37" pos:end="33:65"><expr pos:start="33:37" pos:end="33:65"><literal type="string" pos:start="33:37" pos:end="33:65">"Invalid number of bits %d\n"</literal></expr></argument>, <argument pos:start="33:68" pos:end="33:79"><expr pos:start="33:68" pos:end="33:79"><name pos:start="33:68" pos:end="33:79"><name pos:start="33:68" pos:end="33:68">c</name><operator pos:start="33:69" pos:end="33:70">-&gt;</operator><name pos:start="33:71" pos:end="33:79">code_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="35:9" pos:end="35:31">return <expr pos:start="35:16" pos:end="35:30"><call pos:start="35:16" pos:end="35:30"><name pos:start="35:16" pos:end="35:22">AVERROR</name><argument_list pos:start="35:23" pos:end="35:30">(<argument pos:start="35:24" pos:end="35:29"><expr pos:start="35:24" pos:end="35:29"><name pos:start="35:24" pos:end="35:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:36"><expr pos:start="39:5" pos:end="39:35"><call pos:start="39:5" pos:end="39:35"><name pos:start="39:5" pos:end="39:14">g726_reset</name><argument_list pos:start="39:15" pos:end="39:35">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">c</name></expr></argument>, <argument pos:start="39:19" pos:end="39:34"><expr pos:start="39:19" pos:end="39:34"><name pos:start="39:19" pos:end="39:30"><name pos:start="39:19" pos:end="39:19">c</name><operator pos:start="39:20" pos:end="39:21">-&gt;</operator><name pos:start="39:22" pos:end="39:30">code_size</name></name> <operator pos:start="39:32" pos:end="39:32">-</operator> <literal type="number" pos:start="39:34" pos:end="39:34">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:42"><expr pos:start="43:5" pos:end="43:41"><name pos:start="43:5" pos:end="43:21"><name pos:start="43:5" pos:end="43:9">avctx</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:21">sample_fmt</name></name> <operator pos:start="43:23" pos:end="43:23">=</operator> <name pos:start="43:25" pos:end="43:41">AV_SAMPLE_FMT_S16</name></expr>;</expr_stmt>



    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
