<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24596.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">con_init</name><parameter_list pos:start="1:20" pos:end="1:45">(<parameter pos:start="1:21" pos:end="1:44"><decl pos:start="1:21" pos:end="1:44"><type pos:start="1:21" pos:end="1:44"><name pos:start="1:21" pos:end="1:36"><name pos:start="1:21" pos:end="1:26">struct</name> <name pos:start="1:28" pos:end="1:36">XenDevice</name></name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">xendev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:15">

    <decl_stmt pos:start="5:5" pos:end="5:77"><decl pos:start="5:5" pos:end="5:76"><type pos:start="5:5" pos:end="5:23"><name pos:start="5:5" pos:end="5:21"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:21">XenConsole</name></name> <modifier pos:start="5:23" pos:end="5:23">*</modifier></type><name pos:start="5:24" pos:end="5:26">con</name> <init pos:start="5:28" pos:end="5:76">= <expr pos:start="5:30" pos:end="5:76"><call pos:start="5:30" pos:end="5:76"><name pos:start="5:30" pos:end="5:41">container_of</name><argument_list pos:start="5:42" pos:end="5:76">(<argument pos:start="5:43" pos:end="5:48"><expr pos:start="5:43" pos:end="5:48"><name pos:start="5:43" pos:end="5:48">xendev</name></expr></argument>, <argument pos:start="5:51" pos:end="5:67"><expr pos:start="5:51" pos:end="5:67">struct <name pos:start="5:58" pos:end="5:67">XenConsole</name></expr></argument>, <argument pos:start="5:70" pos:end="5:75"><expr pos:start="5:70" pos:end="5:75"><name pos:start="5:70" pos:end="5:75">xendev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:10"><name pos:start="7:5" pos:end="7:8">char</name> <modifier pos:start="7:10" pos:end="7:10">*</modifier></type><name pos:start="7:11" pos:end="7:14">type</name></decl>, <decl pos:start="7:17" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:10"><modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">dom</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name> <init pos:start="9:13" pos:end="9:15">= <expr pos:start="9:15" pos:end="9:15"><literal type="number" pos:start="9:15" pos:end="9:15">0</literal></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:15">/* setup */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:7">dom</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:55"><name pos:start="15:11" pos:end="15:28">xs_get_domain_path</name><argument_list pos:start="15:29" pos:end="15:55">(<argument pos:start="15:30" pos:end="15:37"><expr pos:start="15:30" pos:end="15:37"><name pos:start="15:30" pos:end="15:37">xenstore</name></expr></argument>, <argument pos:start="15:40" pos:end="15:54"><expr pos:start="15:40" pos:end="15:54"><name pos:start="15:40" pos:end="15:54"><name pos:start="15:40" pos:end="15:42">con</name><operator pos:start="15:43" pos:end="15:44">-&gt;</operator><name pos:start="15:45" pos:end="15:50">xendev</name><operator pos:start="15:51" pos:end="15:51">.</operator><name pos:start="15:52" pos:end="15:54">dom</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:68"><expr pos:start="17:5" pos:end="17:67"><call pos:start="17:5" pos:end="17:67"><name pos:start="17:5" pos:end="17:12">snprintf</name><argument_list pos:start="17:13" pos:end="17:67">(<argument pos:start="17:14" pos:end="17:25"><expr pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:25"><name pos:start="17:14" pos:end="17:16">con</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:25">console</name></name></expr></argument>, <argument pos:start="17:28" pos:end="17:47"><expr pos:start="17:28" pos:end="17:47"><sizeof pos:start="17:28" pos:end="17:47">sizeof<argument_list pos:start="17:34" pos:end="17:47">(<argument pos:start="17:35" pos:end="17:46"><expr pos:start="17:35" pos:end="17:46"><name pos:start="17:35" pos:end="17:46"><name pos:start="17:35" pos:end="17:37">con</name><operator pos:start="17:38" pos:end="17:39">-&gt;</operator><name pos:start="17:40" pos:end="17:46">console</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="17:50" pos:end="17:61"><expr pos:start="17:50" pos:end="17:61"><literal type="string" pos:start="17:50" pos:end="17:61">"%s/console"</literal></expr></argument>, <argument pos:start="17:64" pos:end="17:66"><expr pos:start="17:64" pos:end="17:66"><name pos:start="17:64" pos:end="17:66">dom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><call pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:8">free</name><argument_list pos:start="19:9" pos:end="19:13">(<argument pos:start="19:10" pos:end="19:12"><expr pos:start="19:10" pos:end="19:12"><name pos:start="19:10" pos:end="19:12">dom</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:51"><expr pos:start="23:5" pos:end="23:50"><name pos:start="23:5" pos:end="23:8">type</name> <operator pos:start="23:10" pos:end="23:10">=</operator> <call pos:start="23:12" pos:end="23:50"><name pos:start="23:12" pos:end="23:28">xenstore_read_str</name><argument_list pos:start="23:29" pos:end="23:50">(<argument pos:start="23:30" pos:end="23:41"><expr pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:41"><name pos:start="23:30" pos:end="23:32">con</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:41">console</name></name></expr></argument>, <argument pos:start="23:44" pos:end="23:49"><expr pos:start="23:44" pos:end="23:49"><literal type="string" pos:start="23:44" pos:end="23:49">"type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="25:5" pos:end="33:5"><if pos:start="25:5" pos:end="33:5">if <condition pos:start="25:8" pos:end="25:44">(<expr pos:start="25:9" pos:end="25:43"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:13">type</name> <operator pos:start="25:15" pos:end="25:16">||</operator> <call pos:start="25:18" pos:end="25:38"><name pos:start="25:18" pos:end="25:23">strcmp</name><argument_list pos:start="25:24" pos:end="25:38">(<argument pos:start="25:25" pos:end="25:28"><expr pos:start="25:25" pos:end="25:28"><name pos:start="25:25" pos:end="25:28">type</name></expr></argument>, <argument pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:37"><literal type="string" pos:start="25:31" pos:end="25:37">"ioemu"</literal></expr></argument>)</argument_list></call> <operator pos:start="25:40" pos:end="25:41">!=</operator> <literal type="number" pos:start="25:43" pos:end="25:43">0</literal></expr>)</condition> <block pos:start="25:46" pos:end="33:5">{<block_content pos:start="27:9" pos:end="31:17">

	<expr_stmt pos:start="27:9" pos:end="27:65"><expr pos:start="27:9" pos:end="27:64"><call pos:start="27:9" pos:end="27:64"><name pos:start="27:9" pos:end="27:21">xen_be_printf</name><argument_list pos:start="27:22" pos:end="27:64">(<argument pos:start="27:23" pos:end="27:28"><expr pos:start="27:23" pos:end="27:28"><name pos:start="27:23" pos:end="27:28">xendev</name></expr></argument>, <argument pos:start="27:31" pos:end="27:31"><expr pos:start="27:31" pos:end="27:31"><literal type="number" pos:start="27:31" pos:end="27:31">1</literal></expr></argument>, <argument pos:start="27:34" pos:end="27:57"><expr pos:start="27:34" pos:end="27:57"><literal type="string" pos:start="27:34" pos:end="27:57">"not for me (type=%s)\n"</literal></expr></argument>, <argument pos:start="27:60" pos:end="27:63"><expr pos:start="27:60" pos:end="27:63"><name pos:start="27:60" pos:end="27:63">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:17"><expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:11">ret</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <operator pos:start="29:15" pos:end="29:15">-</operator><literal type="number" pos:start="29:16" pos:end="29:16">1</literal></expr>;</expr_stmt>

        <goto pos:start="31:9" pos:end="31:17">goto <name pos:start="31:14" pos:end="31:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="45:47"><if pos:start="37:5" pos:end="41:39">if <condition pos:start="37:8" pos:end="37:37">(<expr pos:start="37:9" pos:end="37:36"><operator pos:start="37:9" pos:end="37:9">!</operator><name pos:start="37:10" pos:end="37:36"><name pos:start="37:10" pos:end="37:19">serial_hds</name><index pos:start="37:20" pos:end="37:36">[<expr pos:start="37:21" pos:end="37:35"><name pos:start="37:21" pos:end="37:35"><name pos:start="37:21" pos:end="37:23">con</name><operator pos:start="37:24" pos:end="37:25">-&gt;</operator><name pos:start="37:26" pos:end="37:31">xendev</name><operator pos:start="37:32" pos:end="37:32">.</operator><name pos:start="37:33" pos:end="37:35">dev</name></name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="41:39"><block_content pos:start="39:9" pos:end="41:39">

	<expr_stmt pos:start="39:9" pos:end="41:39"><expr pos:start="39:9" pos:end="41:38"><call pos:start="39:9" pos:end="41:38"><name pos:start="39:9" pos:end="39:21">xen_be_printf</name><argument_list pos:start="39:22" pos:end="41:38">(<argument pos:start="39:23" pos:end="39:28"><expr pos:start="39:23" pos:end="39:28"><name pos:start="39:23" pos:end="39:28">xendev</name></expr></argument>, <argument pos:start="39:31" pos:end="39:31"><expr pos:start="39:31" pos:end="39:31"><literal type="number" pos:start="39:31" pos:end="39:31">1</literal></expr></argument>, <argument pos:start="39:34" pos:end="39:75"><expr pos:start="39:34" pos:end="39:75"><literal type="string" pos:start="39:34" pos:end="39:75">"WARNING: serial line %d not configured\n"</literal></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:37"><expr pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:37"><name pos:start="41:23" pos:end="41:25">con</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:33">xendev</name><operator pos:start="41:34" pos:end="41:34">.</operator><name pos:start="41:35" pos:end="41:37">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="43:5" pos:end="45:47">else<block type="pseudo" pos:start="45:9" pos:end="45:47"><block_content pos:start="45:9" pos:end="45:47">

        <expr_stmt pos:start="45:9" pos:end="45:47"><expr pos:start="45:9" pos:end="45:46"><name pos:start="45:9" pos:end="45:16"><name pos:start="45:9" pos:end="45:11">con</name><operator pos:start="45:12" pos:end="45:13">-&gt;</operator><name pos:start="45:14" pos:end="45:16">chr</name></name> <operator pos:start="45:18" pos:end="45:18">=</operator> <name pos:start="45:20" pos:end="45:46"><name pos:start="45:20" pos:end="45:29">serial_hds</name><index pos:start="45:30" pos:end="45:46">[<expr pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:45"><name pos:start="45:31" pos:end="45:33">con</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:41">xendev</name><operator pos:start="45:42" pos:end="45:42">.</operator><name pos:start="45:43" pos:end="45:45">dev</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



<label pos:start="49:1" pos:end="49:4"><name pos:start="49:1" pos:end="49:3">out</name>:</label>

    <expr_stmt pos:start="51:5" pos:end="51:20"><expr pos:start="51:5" pos:end="51:19"><call pos:start="51:5" pos:end="51:19"><name pos:start="51:5" pos:end="51:13">qemu_free</name><argument_list pos:start="51:14" pos:end="51:19">(<argument pos:start="51:15" pos:end="51:18"><expr pos:start="51:15" pos:end="51:18"><name pos:start="51:15" pos:end="51:18">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="53:5" pos:end="53:15">return <expr pos:start="53:12" pos:end="53:14"><name pos:start="53:12" pos:end="53:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
