<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16590.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:16">PCIDevice</name> <modifier pos:start="1:18" pos:end="1:18">*</modifier></type><name pos:start="1:19" pos:end="1:40">do_pci_register_device</name><parameter_list pos:start="1:41" pos:end="7:74">(<parameter pos:start="1:42" pos:end="1:59"><decl pos:start="1:42" pos:end="1:59"><type pos:start="1:42" pos:end="1:59"><name pos:start="1:42" pos:end="1:50">PCIDevice</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">pci_dev</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:72"><decl pos:start="1:62" pos:end="1:72"><type pos:start="1:62" pos:end="1:72"><name pos:start="1:62" pos:end="1:67">PCIBus</name> <modifier pos:start="1:69" pos:end="1:69">*</modifier></type><name pos:start="1:70" pos:end="1:72">bus</name></decl></parameter>,

                                         <parameter pos:start="3:42" pos:end="3:57"><decl pos:start="3:42" pos:end="3:57"><type pos:start="3:42" pos:end="3:57"><specifier pos:start="3:42" pos:end="3:46">const</specifier> <name pos:start="3:48" pos:end="3:51">char</name> <modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">name</name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:68"><decl pos:start="3:60" pos:end="3:68"><type pos:start="3:60" pos:end="3:68"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:68">devfn</name></decl></parameter>,

                                         <parameter pos:start="5:42" pos:end="5:71"><decl pos:start="5:42" pos:end="5:71"><type pos:start="5:42" pos:end="5:71"><name pos:start="5:42" pos:end="5:58">PCIConfigReadFunc</name> <modifier pos:start="5:60" pos:end="5:60">*</modifier></type><name pos:start="5:61" pos:end="5:71">config_read</name></decl></parameter>,

                                         <parameter pos:start="7:42" pos:end="7:73"><decl pos:start="7:42" pos:end="7:73"><type pos:start="7:42" pos:end="7:73"><name pos:start="7:42" pos:end="7:59">PCIConfigWriteFunc</name> <modifier pos:start="7:61" pos:end="7:61">*</modifier></type><name pos:start="7:62" pos:end="7:73">config_write</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="69:1">{<block_content pos:start="11:5" pos:end="67:19">

    <if_stmt pos:start="11:5" pos:end="29:5"><if pos:start="11:5" pos:end="25:5">if <condition pos:start="11:8" pos:end="11:18">(<expr pos:start="11:9" pos:end="11:17"><name pos:start="11:9" pos:end="11:13">devfn</name> <operator pos:start="11:15" pos:end="11:15">&lt;</operator> <literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr>)</condition> <block pos:start="11:20" pos:end="25:5">{<block_content pos:start="13:9" pos:end="23:12">

        <for pos:start="13:9" pos:end="19:9">for<control pos:start="13:12" pos:end="13:61">(<init pos:start="13:13" pos:end="13:36"><expr pos:start="13:13" pos:end="13:34"><name pos:start="13:13" pos:end="13:17">devfn</name> <operator pos:start="13:19" pos:end="13:19">=</operator> <name pos:start="13:21" pos:end="13:34"><name pos:start="13:21" pos:end="13:23">bus</name><operator pos:start="13:24" pos:end="13:25">-&gt;</operator><name pos:start="13:26" pos:end="13:34">devfn_min</name></name></expr> ;</init> <condition pos:start="13:38" pos:end="13:49"><expr pos:start="13:38" pos:end="13:48"><name pos:start="13:38" pos:end="13:42">devfn</name> <operator pos:start="13:44" pos:end="13:44">&lt;</operator> <literal type="number" pos:start="13:46" pos:end="13:48">256</literal></expr>;</condition> <incr pos:start="13:51" pos:end="13:60"><expr pos:start="13:51" pos:end="13:60"><name pos:start="13:51" pos:end="13:55">devfn</name> <operator pos:start="13:57" pos:end="13:58">+=</operator> <literal type="number" pos:start="13:60" pos:end="13:60">8</literal></expr></incr>)</control> <block pos:start="13:63" pos:end="19:9">{<block_content pos:start="15:13" pos:end="17:27">

            <if_stmt pos:start="15:13" pos:end="17:27"><if pos:start="15:13" pos:end="17:27">if <condition pos:start="15:16" pos:end="15:37">(<expr pos:start="15:17" pos:end="15:36"><operator pos:start="15:17" pos:end="15:17">!</operator><name pos:start="15:18" pos:end="15:36"><name pos:start="15:18" pos:end="15:20">bus</name><operator pos:start="15:21" pos:end="15:22">-&gt;</operator><name pos:start="15:23" pos:end="15:29">devices</name><index pos:start="15:30" pos:end="15:36">[<expr pos:start="15:31" pos:end="15:35"><name pos:start="15:31" pos:end="15:35">devfn</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="17:17" pos:end="17:27"><block_content pos:start="17:17" pos:end="17:27">

                <goto pos:start="17:17" pos:end="17:27">goto <name pos:start="17:22" pos:end="17:26">found</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></for>

        <return pos:start="21:9" pos:end="21:20">return <expr pos:start="21:16" pos:end="21:19"><name pos:start="21:16" pos:end="21:19">NULL</name></expr>;</return>

    <label pos:start="23:5" pos:end="23:10"><name pos:start="23:5" pos:end="23:9">found</name>:</label> <empty_stmt pos:start="23:12" pos:end="23:12">;</empty_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="25:7" pos:end="29:5">else if <condition pos:start="25:15" pos:end="25:35">(<expr pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:34"><name pos:start="25:16" pos:end="25:18">bus</name><operator pos:start="25:19" pos:end="25:20">-&gt;</operator><name pos:start="25:21" pos:end="25:27">devices</name><index pos:start="25:28" pos:end="25:34">[<expr pos:start="25:29" pos:end="25:33"><name pos:start="25:29" pos:end="25:33">devfn</name></expr>]</index></name></expr>)</condition> <block pos:start="25:37" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:20">

        <return pos:start="27:9" pos:end="27:20">return <expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:16"><name pos:start="31:5" pos:end="31:11">pci_dev</name><operator pos:start="31:12" pos:end="31:13">-&gt;</operator><name pos:start="31:14" pos:end="31:16">bus</name></name> <operator pos:start="31:18" pos:end="31:18">=</operator> <name pos:start="31:20" pos:end="31:22">bus</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:11">pci_dev</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:18">devfn</name></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <name pos:start="33:22" pos:end="33:26">devfn</name></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:56"><expr pos:start="35:5" pos:end="35:55"><call pos:start="35:5" pos:end="35:55"><name pos:start="35:5" pos:end="35:11">pstrcpy</name><argument_list pos:start="35:12" pos:end="35:55">(<argument pos:start="35:13" pos:end="35:25"><expr pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:25"><name pos:start="35:13" pos:end="35:19">pci_dev</name><operator pos:start="35:20" pos:end="35:21">-&gt;</operator><name pos:start="35:22" pos:end="35:25">name</name></name></expr></argument>, <argument pos:start="35:28" pos:end="35:48"><expr pos:start="35:28" pos:end="35:48"><sizeof pos:start="35:28" pos:end="35:48">sizeof<argument_list pos:start="35:34" pos:end="35:48">(<argument pos:start="35:35" pos:end="35:47"><expr pos:start="35:35" pos:end="35:47"><name pos:start="35:35" pos:end="35:47"><name pos:start="35:35" pos:end="35:41">pci_dev</name><operator pos:start="35:42" pos:end="35:43">-&gt;</operator><name pos:start="35:44" pos:end="35:47">name</name></name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="35:51" pos:end="35:54"><expr pos:start="35:51" pos:end="35:54"><name pos:start="35:51" pos:end="35:54">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:62"><expr pos:start="37:5" pos:end="37:61"><call pos:start="37:5" pos:end="37:61"><name pos:start="37:5" pos:end="37:10">memset</name><argument_list pos:start="37:11" pos:end="37:61">(<argument pos:start="37:12" pos:end="37:29"><expr pos:start="37:12" pos:end="37:29"><name pos:start="37:12" pos:end="37:29"><name pos:start="37:12" pos:end="37:18">pci_dev</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:29">irq_state</name></name></expr></argument>, <argument pos:start="37:32" pos:end="37:32"><expr pos:start="37:32" pos:end="37:32"><literal type="number" pos:start="37:32" pos:end="37:32">0</literal></expr></argument>, <argument pos:start="37:35" pos:end="37:60"><expr pos:start="37:35" pos:end="37:60"><sizeof pos:start="37:35" pos:end="37:60">sizeof<argument_list pos:start="37:41" pos:end="37:60">(<argument pos:start="37:42" pos:end="37:59"><expr pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:59"><name pos:start="37:42" pos:end="37:48">pci_dev</name><operator pos:start="37:49" pos:end="37:50">-&gt;</operator><name pos:start="37:51" pos:end="37:59">irq_state</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:30"><expr pos:start="39:5" pos:end="39:29"><call pos:start="39:5" pos:end="39:29"><name pos:start="39:5" pos:end="39:20">pci_config_alloc</name><argument_list pos:start="39:21" pos:end="39:29">(<argument pos:start="39:22" pos:end="39:28"><expr pos:start="39:22" pos:end="39:28"><name pos:start="39:22" pos:end="39:28">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><call pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:32">pci_set_default_subsystem_id</name><argument_list pos:start="41:33" pos:end="41:41">(<argument pos:start="41:34" pos:end="41:40"><expr pos:start="41:34" pos:end="41:40"><name pos:start="41:34" pos:end="41:40">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:28"><expr pos:start="43:5" pos:end="43:27"><call pos:start="43:5" pos:end="43:27"><name pos:start="43:5" pos:end="43:18">pci_init_cmask</name><argument_list pos:start="43:19" pos:end="43:27">(<argument pos:start="43:20" pos:end="43:26"><expr pos:start="43:20" pos:end="43:26"><name pos:start="43:20" pos:end="43:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:28"><expr pos:start="45:5" pos:end="45:27"><call pos:start="45:5" pos:end="45:27"><name pos:start="45:5" pos:end="45:18">pci_init_wmask</name><argument_list pos:start="45:19" pos:end="45:27">(<argument pos:start="45:20" pos:end="45:26"><expr pos:start="45:20" pos:end="45:26"><name pos:start="45:20" pos:end="45:26">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="51:46"><if pos:start="49:5" pos:end="51:46">if <condition pos:start="49:8" pos:end="49:21">(<expr pos:start="49:9" pos:end="49:20"><operator pos:start="49:9" pos:end="49:9">!</operator><name pos:start="49:10" pos:end="49:20">config_read</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:46"><block_content pos:start="51:9" pos:end="51:46">

        <expr_stmt pos:start="51:9" pos:end="51:46"><expr pos:start="51:9" pos:end="51:45"><name pos:start="51:9" pos:end="51:19">config_read</name> <operator pos:start="51:21" pos:end="51:21">=</operator> <name pos:start="51:23" pos:end="51:45">pci_default_read_config</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:48"><if pos:start="53:5" pos:end="55:48">if <condition pos:start="53:8" pos:end="53:22">(<expr pos:start="53:9" pos:end="53:21"><operator pos:start="53:9" pos:end="53:9">!</operator><name pos:start="53:10" pos:end="53:21">config_write</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:48"><block_content pos:start="55:9" pos:end="55:48">

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:20">config_write</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <name pos:start="55:24" pos:end="55:47">pci_default_write_config</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:39"><expr pos:start="57:5" pos:end="57:38"><name pos:start="57:5" pos:end="57:24"><name pos:start="57:5" pos:end="57:11">pci_dev</name><operator pos:start="57:12" pos:end="57:13">-&gt;</operator><name pos:start="57:14" pos:end="57:24">config_read</name></name> <operator pos:start="57:26" pos:end="57:26">=</operator> <name pos:start="57:28" pos:end="57:38">config_read</name></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:41"><expr pos:start="59:5" pos:end="59:40"><name pos:start="59:5" pos:end="59:25"><name pos:start="59:5" pos:end="59:11">pci_dev</name><operator pos:start="59:12" pos:end="59:13">-&gt;</operator><name pos:start="59:14" pos:end="59:25">config_write</name></name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:40">config_write</name></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:34"><expr pos:start="61:5" pos:end="61:33"><name pos:start="61:5" pos:end="61:23"><name pos:start="61:5" pos:end="61:7">bus</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:16">devices</name><index pos:start="61:17" pos:end="61:23">[<expr pos:start="61:18" pos:end="61:22"><name pos:start="61:18" pos:end="61:22">devfn</name></expr>]</index></name> <operator pos:start="61:25" pos:end="61:25">=</operator> <name pos:start="61:27" pos:end="61:33">pci_dev</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:74"><expr pos:start="63:5" pos:end="63:73"><name pos:start="63:5" pos:end="63:16"><name pos:start="63:5" pos:end="63:11">pci_dev</name><operator pos:start="63:12" pos:end="63:13">-&gt;</operator><name pos:start="63:14" pos:end="63:16">irq</name></name> <operator pos:start="63:18" pos:end="63:18">=</operator> <call pos:start="63:20" pos:end="63:73"><name pos:start="63:20" pos:end="63:37">qemu_allocate_irqs</name><argument_list pos:start="63:38" pos:end="63:73">(<argument pos:start="63:39" pos:end="63:49"><expr pos:start="63:39" pos:end="63:49"><name pos:start="63:39" pos:end="63:49">pci_set_irq</name></expr></argument>, <argument pos:start="63:52" pos:end="63:58"><expr pos:start="63:52" pos:end="63:58"><name pos:start="63:52" pos:end="63:58">pci_dev</name></expr></argument>, <argument pos:start="63:61" pos:end="63:72"><expr pos:start="63:61" pos:end="63:72"><name pos:start="63:61" pos:end="63:72">PCI_NUM_PINS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:23"><name pos:start="65:5" pos:end="65:11">pci_dev</name><operator pos:start="65:12" pos:end="65:13">-&gt;</operator><name pos:start="65:14" pos:end="65:23">version_id</name></name> <operator pos:start="65:25" pos:end="65:25">=</operator> <literal type="number" pos:start="65:27" pos:end="65:27">2</literal></expr>;</expr_stmt> <comment type="block" pos:start="65:30" pos:end="65:69">/* Current pci device vmstate version */</comment>

    <return pos:start="67:5" pos:end="67:19">return <expr pos:start="67:12" pos:end="67:18"><name pos:start="67:12" pos:end="67:18">pci_dev</name></expr>;</return>

</block_content>}</block></function>
</unit>
