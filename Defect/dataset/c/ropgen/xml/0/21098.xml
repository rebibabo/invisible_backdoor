<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21098.c" pos:tabs="8"><function pos:start="1:1" pos:end="131:1"><type pos:start="1:1" pos:end="1:9"><name pos:start="1:1" pos:end="1:7">VncInfo</name> <modifier pos:start="1:9" pos:end="1:9">*</modifier></type><name pos:start="1:10" pos:end="1:22">qmp_query_vnc</name><parameter_list pos:start="1:23" pos:end="1:36">(<parameter pos:start="1:24" pos:end="1:35"><decl pos:start="1:24" pos:end="1:35"><type pos:start="1:24" pos:end="1:31"><name pos:start="1:24" pos:end="1:28">Error</name> <modifier pos:start="1:30" pos:end="1:30">*</modifier><modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:35">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="131:1">{<block_content pos:start="5:5" pos:end="129:16">

    <decl_stmt pos:start="5:5" pos:end="5:45"><decl pos:start="5:5" pos:end="5:44"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">VncInfo</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">info</name> <init pos:start="5:19" pos:end="5:44">= <expr pos:start="5:21" pos:end="5:44"><call pos:start="5:21" pos:end="5:44"><name pos:start="5:21" pos:end="5:29">g_malloc0</name><argument_list pos:start="5:30" pos:end="5:44">(<argument pos:start="5:31" pos:end="5:43"><expr pos:start="5:31" pos:end="5:43"><sizeof pos:start="5:31" pos:end="5:43">sizeof<argument_list pos:start="5:37" pos:end="5:43">(<argument pos:start="5:38" pos:end="5:42"><expr pos:start="5:38" pos:end="5:42"><operator pos:start="5:38" pos:end="5:38">*</operator><name pos:start="5:39" pos:end="5:42">info</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:44"><decl pos:start="7:5" pos:end="7:43"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VncDisplay</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:18">vd</name> <init pos:start="7:20" pos:end="7:43">= <expr pos:start="7:22" pos:end="7:43"><call pos:start="7:22" pos:end="7:43"><name pos:start="7:22" pos:end="7:37">vnc_display_find</name><argument_list pos:start="7:38" pos:end="7:43">(<argument pos:start="7:39" pos:end="7:42"><expr pos:start="7:39" pos:end="7:42"><name pos:start="7:39" pos:end="7:42">NULL</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23">SocketAddressLegacy</name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:29">addr</name> <init pos:start="9:31" pos:end="9:36">= <expr pos:start="9:33" pos:end="9:36"><name pos:start="9:33" pos:end="9:36">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="113:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:34">(<expr pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:10">vd</name> <operator pos:start="13:12" pos:end="13:13">==</operator> <name pos:start="13:15" pos:end="13:18">NULL</name> <operator pos:start="13:20" pos:end="13:21">||</operator> <operator pos:start="13:23" pos:end="13:23">!</operator><name pos:start="13:24" pos:end="13:33"><name pos:start="13:24" pos:end="13:25">vd</name><operator pos:start="13:26" pos:end="13:27">-&gt;</operator><name pos:start="13:28" pos:end="13:33">nlsock</name></name></expr>)</condition> <block pos:start="13:36" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:30">

        <expr_stmt pos:start="15:9" pos:end="15:30"><expr pos:start="15:9" pos:end="15:29"><name pos:start="15:9" pos:end="15:21"><name pos:start="15:9" pos:end="15:12">info</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:21">enabled</name></name> <operator pos:start="15:23" pos:end="15:23">=</operator> <name pos:start="15:25" pos:end="15:29">false</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="113:5">else <block pos:start="17:12" pos:end="113:5">{<block_content pos:start="19:9" pos:end="111:49">

        <expr_stmt pos:start="19:9" pos:end="19:29"><expr pos:start="19:9" pos:end="19:28"><name pos:start="19:9" pos:end="19:21"><name pos:start="19:9" pos:end="19:12">info</name><operator pos:start="19:13" pos:end="19:14">-&gt;</operator><name pos:start="19:15" pos:end="19:21">enabled</name></name> <operator pos:start="19:23" pos:end="19:23">=</operator> <name pos:start="19:25" pos:end="19:28">true</name></expr>;</expr_stmt>



        <comment type="block" pos:start="23:9" pos:end="23:57">/* for compatibility with the original command */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:25"><name pos:start="25:9" pos:end="25:12">info</name><operator pos:start="25:13" pos:end="25:14">-&gt;</operator><name pos:start="25:15" pos:end="25:25">has_clients</name></name> <operator pos:start="25:27" pos:end="25:27">=</operator> <name pos:start="25:29" pos:end="25:32">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:50"><expr pos:start="27:9" pos:end="27:49"><name pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:12">info</name><operator pos:start="27:13" pos:end="27:14">-&gt;</operator><name pos:start="27:15" pos:end="27:21">clients</name></name> <operator pos:start="27:23" pos:end="27:23">=</operator> <call pos:start="27:25" pos:end="27:49"><name pos:start="27:25" pos:end="27:45">qmp_query_client_list</name><argument_list pos:start="27:46" pos:end="27:49">(<argument pos:start="27:47" pos:end="27:48"><expr pos:start="27:47" pos:end="27:48"><name pos:start="27:47" pos:end="27:48">vd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="31:9" pos:end="35:9"><if pos:start="31:9" pos:end="35:9">if <condition pos:start="31:12" pos:end="31:30">(<expr pos:start="31:13" pos:end="31:29"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:14">vd</name><operator pos:start="31:15" pos:end="31:16">-&gt;</operator><name pos:start="31:17" pos:end="31:21">lsock</name></name> <operator pos:start="31:23" pos:end="31:24">==</operator> <name pos:start="31:26" pos:end="31:29">NULL</name></expr>)</condition> <block pos:start="31:32" pos:end="35:9">{<block_content pos:start="33:13" pos:end="33:24">

            <return pos:start="33:13" pos:end="33:24">return <expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">info</name></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="39:9" pos:end="39:72"><expr pos:start="39:9" pos:end="39:71"><name pos:start="39:9" pos:end="39:12">addr</name> <operator pos:start="39:14" pos:end="39:14">=</operator> <call pos:start="39:16" pos:end="39:71"><name pos:start="39:16" pos:end="39:51">qio_channel_socket_get_local_address</name><argument_list pos:start="39:52" pos:end="39:71">(<argument pos:start="39:53" pos:end="39:64"><expr pos:start="39:53" pos:end="39:64"><name pos:start="39:53" pos:end="39:64"><name pos:start="39:53" pos:end="39:54">vd</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:61">lsock</name><index pos:start="39:62" pos:end="39:64">[<expr pos:start="39:63" pos:end="39:63"><literal type="number" pos:start="39:63" pos:end="39:63">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="39:67" pos:end="39:70"><expr pos:start="39:67" pos:end="39:70"><name pos:start="39:67" pos:end="39:70">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="41:9" pos:end="45:9"><if pos:start="41:9" pos:end="45:9">if <condition pos:start="41:12" pos:end="41:18">(<expr pos:start="41:13" pos:end="41:17"><operator pos:start="41:13" pos:end="41:13">!</operator><name pos:start="41:14" pos:end="41:17">addr</name></expr>)</condition> <block pos:start="41:20" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:27">

            <goto pos:start="43:13" pos:end="43:27">goto <name pos:start="43:18" pos:end="43:26">out_error</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <switch pos:start="49:9" pos:end="97:9">switch <condition pos:start="49:16" pos:end="49:27">(<expr pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:26"><name pos:start="49:17" pos:end="49:20">addr</name><operator pos:start="49:21" pos:end="49:22">-&gt;</operator><name pos:start="49:23" pos:end="49:26">type</name></name></expr>)</condition> <block pos:start="49:29" pos:end="97:9">{<block_content pos:start="51:9" pos:end="95:20">

        <case pos:start="51:9" pos:end="51:45">case <expr pos:start="51:14" pos:end="51:44"><name pos:start="51:14" pos:end="51:44">SOCKET_ADDRESS_LEGACY_KIND_INET</name></expr>:</case>

            <expr_stmt pos:start="53:13" pos:end="53:59"><expr pos:start="53:13" pos:end="53:58"><name pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:16">info</name><operator pos:start="53:17" pos:end="53:18">-&gt;</operator><name pos:start="53:19" pos:end="53:22">host</name></name> <operator pos:start="53:24" pos:end="53:24">=</operator> <call pos:start="53:26" pos:end="53:58"><name pos:start="53:26" pos:end="53:33">g_strdup</name><argument_list pos:start="53:34" pos:end="53:58">(<argument pos:start="53:35" pos:end="53:57"><expr pos:start="53:35" pos:end="53:57"><name pos:start="53:35" pos:end="53:57"><name pos:start="53:35" pos:end="53:38">addr</name><operator pos:start="53:39" pos:end="53:40">-&gt;</operator><name pos:start="53:41" pos:end="53:41">u</name><operator pos:start="53:42" pos:end="53:42">.</operator><name pos:start="53:43" pos:end="53:46">inet</name><operator pos:start="53:47" pos:end="53:47">.</operator><name pos:start="53:48" pos:end="53:51">data</name><operator pos:start="53:52" pos:end="53:53">-&gt;</operator><name pos:start="53:54" pos:end="53:57">host</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:62"><expr pos:start="55:13" pos:end="55:61"><name pos:start="55:13" pos:end="55:25"><name pos:start="55:13" pos:end="55:16">info</name><operator pos:start="55:17" pos:end="55:18">-&gt;</operator><name pos:start="55:19" pos:end="55:25">service</name></name> <operator pos:start="55:27" pos:end="55:27">=</operator> <call pos:start="55:29" pos:end="55:61"><name pos:start="55:29" pos:end="55:36">g_strdup</name><argument_list pos:start="55:37" pos:end="55:61">(<argument pos:start="55:38" pos:end="55:60"><expr pos:start="55:38" pos:end="55:60"><name pos:start="55:38" pos:end="55:60"><name pos:start="55:38" pos:end="55:41">addr</name><operator pos:start="55:42" pos:end="55:43">-&gt;</operator><name pos:start="55:44" pos:end="55:44">u</name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:49">inet</name><operator pos:start="55:50" pos:end="55:50">.</operator><name pos:start="55:51" pos:end="55:54">data</name><operator pos:start="55:55" pos:end="55:56">-&gt;</operator><name pos:start="55:57" pos:end="55:60">port</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="57:13" pos:end="65:13"><if pos:start="57:13" pos:end="61:13">if <condition pos:start="57:16" pos:end="57:40">(<expr pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:39"><name pos:start="57:17" pos:end="57:20">addr</name><operator pos:start="57:21" pos:end="57:22">-&gt;</operator><name pos:start="57:23" pos:end="57:23">u</name><operator pos:start="57:24" pos:end="57:24">.</operator><name pos:start="57:25" pos:end="57:28">inet</name><operator pos:start="57:29" pos:end="57:29">.</operator><name pos:start="57:30" pos:end="57:33">data</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:39">ipv6</name></name></expr>)</condition> <block pos:start="57:42" pos:end="61:13">{<block_content pos:start="59:17" pos:end="59:59">

                <expr_stmt pos:start="59:17" pos:end="59:59"><expr pos:start="59:17" pos:end="59:58"><name pos:start="59:17" pos:end="59:28"><name pos:start="59:17" pos:end="59:20">info</name><operator pos:start="59:21" pos:end="59:22">-&gt;</operator><name pos:start="59:23" pos:end="59:28">family</name></name> <operator pos:start="59:30" pos:end="59:30">=</operator> <name pos:start="59:32" pos:end="59:58">NETWORK_ADDRESS_FAMILY_IPV6</name></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="61:15" pos:end="65:13">else <block pos:start="61:20" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:59">

                <expr_stmt pos:start="63:17" pos:end="63:59"><expr pos:start="63:17" pos:end="63:58"><name pos:start="63:17" pos:end="63:28"><name pos:start="63:17" pos:end="63:20">info</name><operator pos:start="63:21" pos:end="63:22">-&gt;</operator><name pos:start="63:23" pos:end="63:28">family</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:58">NETWORK_ADDRESS_FAMILY_IPV4</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="67:13" pos:end="67:18">break;</break>



        <case pos:start="71:9" pos:end="71:45">case <expr pos:start="71:14" pos:end="71:44"><name pos:start="71:14" pos:end="71:44">SOCKET_ADDRESS_LEGACY_KIND_UNIX</name></expr>:</case>

            <expr_stmt pos:start="73:13" pos:end="73:38"><expr pos:start="73:13" pos:end="73:37"><name pos:start="73:13" pos:end="73:22"><name pos:start="73:13" pos:end="73:16">info</name><operator pos:start="73:17" pos:end="73:18">-&gt;</operator><name pos:start="73:19" pos:end="73:22">host</name></name> <operator pos:start="73:24" pos:end="73:24">=</operator> <call pos:start="73:26" pos:end="73:37"><name pos:start="73:26" pos:end="73:33">g_strdup</name><argument_list pos:start="73:34" pos:end="73:37">(<argument pos:start="73:35" pos:end="73:36"><expr pos:start="73:35" pos:end="73:36"><literal type="string" pos:start="73:35" pos:end="73:36">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:64"><expr pos:start="75:13" pos:end="75:63"><name pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:16">info</name><operator pos:start="75:17" pos:end="75:18">-&gt;</operator><name pos:start="75:19" pos:end="75:25">service</name></name> <operator pos:start="75:27" pos:end="75:27">=</operator> <call pos:start="75:29" pos:end="75:63"><name pos:start="75:29" pos:end="75:36">g_strdup</name><argument_list pos:start="75:37" pos:end="75:63">(<argument pos:start="75:38" pos:end="75:62"><expr pos:start="75:38" pos:end="75:62"><name pos:start="75:38" pos:end="75:62"><name pos:start="75:38" pos:end="75:41">addr</name><operator pos:start="75:42" pos:end="75:43">-&gt;</operator><name pos:start="75:44" pos:end="75:44">u</name><operator pos:start="75:45" pos:end="75:45">.</operator><name pos:start="75:46" pos:end="75:51">q_unix</name><operator pos:start="75:52" pos:end="75:52">.</operator><name pos:start="75:53" pos:end="75:56">data</name><operator pos:start="75:57" pos:end="75:58">-&gt;</operator><name pos:start="75:59" pos:end="75:62">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:55"><expr pos:start="77:13" pos:end="77:54"><name pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:16">info</name><operator pos:start="77:17" pos:end="77:18">-&gt;</operator><name pos:start="77:19" pos:end="77:24">family</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:54">NETWORK_ADDRESS_FAMILY_UNIX</name></expr>;</expr_stmt>

            <break pos:start="79:13" pos:end="79:18">break;</break>



        <case pos:start="83:9" pos:end="83:46">case <expr pos:start="83:14" pos:end="83:45"><name pos:start="83:14" pos:end="83:45">SOCKET_ADDRESS_LEGACY_KIND_VSOCK</name></expr>:</case>

        <case pos:start="85:9" pos:end="85:43">case <expr pos:start="85:14" pos:end="85:42"><name pos:start="85:14" pos:end="85:42">SOCKET_ADDRESS_LEGACY_KIND_FD</name></expr>:</case>

            <expr_stmt pos:start="87:13" pos:end="89:67"><expr pos:start="87:13" pos:end="89:66"><call pos:start="87:13" pos:end="89:66"><name pos:start="87:13" pos:end="87:22">error_setg</name><argument_list pos:start="87:23" pos:end="89:66">(<argument pos:start="87:24" pos:end="87:27"><expr pos:start="87:24" pos:end="87:27"><name pos:start="87:24" pos:end="87:27">errp</name></expr></argument>, <argument pos:start="87:30" pos:end="87:65"><expr pos:start="87:30" pos:end="87:65"><literal type="string" pos:start="87:30" pos:end="87:65">"Unsupported socket address type %s"</literal></expr></argument>,

                       <argument pos:start="89:24" pos:end="89:65"><expr pos:start="89:24" pos:end="89:65"><name pos:start="89:24" pos:end="89:65"><name pos:start="89:24" pos:end="89:53">SocketAddressLegacyKind_lookup</name><index pos:start="89:54" pos:end="89:65">[<expr pos:start="89:55" pos:end="89:64"><name pos:start="89:55" pos:end="89:64"><name pos:start="89:55" pos:end="89:58">addr</name><operator pos:start="89:59" pos:end="89:60">-&gt;</operator><name pos:start="89:61" pos:end="89:64">type</name></name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="91:13" pos:end="91:27">goto <name pos:start="91:18" pos:end="91:26">out_error</name>;</goto>

        <default pos:start="93:9" pos:end="93:16">default:</default>

            <expr_stmt pos:start="95:13" pos:end="95:20"><expr pos:start="95:13" pos:end="95:19"><call pos:start="95:13" pos:end="95:19"><name pos:start="95:13" pos:end="95:17">abort</name><argument_list pos:start="95:18" pos:end="95:19">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></switch>



        <expr_stmt pos:start="101:9" pos:end="101:30"><expr pos:start="101:9" pos:end="101:29"><name pos:start="101:9" pos:end="101:22"><name pos:start="101:9" pos:end="101:12">info</name><operator pos:start="101:13" pos:end="101:14">-&gt;</operator><name pos:start="101:15" pos:end="101:22">has_host</name></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <name pos:start="101:26" pos:end="101:29">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:33"><expr pos:start="103:9" pos:end="103:32"><name pos:start="103:9" pos:end="103:25"><name pos:start="103:9" pos:end="103:12">info</name><operator pos:start="103:13" pos:end="103:14">-&gt;</operator><name pos:start="103:15" pos:end="103:25">has_service</name></name> <operator pos:start="103:27" pos:end="103:27">=</operator> <name pos:start="103:29" pos:end="103:32">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:32"><expr pos:start="105:9" pos:end="105:31"><name pos:start="105:9" pos:end="105:24"><name pos:start="105:9" pos:end="105:12">info</name><operator pos:start="105:13" pos:end="105:14">-&gt;</operator><name pos:start="105:15" pos:end="105:24">has_family</name></name> <operator pos:start="105:26" pos:end="105:26">=</operator> <name pos:start="105:28" pos:end="105:31">true</name></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:30"><expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:22"><name pos:start="109:9" pos:end="109:12">info</name><operator pos:start="109:13" pos:end="109:14">-&gt;</operator><name pos:start="109:15" pos:end="109:22">has_auth</name></name> <operator pos:start="109:24" pos:end="109:24">=</operator> <name pos:start="109:26" pos:end="109:29">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:49"><expr pos:start="111:9" pos:end="111:48"><name pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:12">info</name><operator pos:start="111:13" pos:end="111:14">-&gt;</operator><name pos:start="111:15" pos:end="111:18">auth</name></name> <operator pos:start="111:20" pos:end="111:20">=</operator> <call pos:start="111:22" pos:end="111:48"><name pos:start="111:22" pos:end="111:29">g_strdup</name><argument_list pos:start="111:30" pos:end="111:48">(<argument pos:start="111:31" pos:end="111:47"><expr pos:start="111:31" pos:end="111:47"><call pos:start="111:31" pos:end="111:47"><name pos:start="111:31" pos:end="111:43">vnc_auth_name</name><argument_list pos:start="111:44" pos:end="111:47">(<argument pos:start="111:45" pos:end="111:46"><expr pos:start="111:45" pos:end="111:46"><name pos:start="111:45" pos:end="111:46">vd</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="117:5" pos:end="117:40"><expr pos:start="117:5" pos:end="117:39"><call pos:start="117:5" pos:end="117:39"><name pos:start="117:5" pos:end="117:33">qapi_free_SocketAddressLegacy</name><argument_list pos:start="117:34" pos:end="117:39">(<argument pos:start="117:35" pos:end="117:38"><expr pos:start="117:35" pos:end="117:38"><name pos:start="117:35" pos:end="117:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="119:5" pos:end="119:16">return <expr pos:start="119:12" pos:end="119:15"><name pos:start="119:12" pos:end="119:15">info</name></expr>;</return>



<label pos:start="123:1" pos:end="123:10"><name pos:start="123:1" pos:end="123:9">out_error</name>:</label>

    <expr_stmt pos:start="125:5" pos:end="125:40"><expr pos:start="125:5" pos:end="125:39"><call pos:start="125:5" pos:end="125:39"><name pos:start="125:5" pos:end="125:33">qapi_free_SocketAddressLegacy</name><argument_list pos:start="125:34" pos:end="125:39">(<argument pos:start="125:35" pos:end="125:38"><expr pos:start="125:35" pos:end="125:38"><name pos:start="125:35" pos:end="125:38">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="127:5" pos:end="127:28"><expr pos:start="127:5" pos:end="127:27"><call pos:start="127:5" pos:end="127:27"><name pos:start="127:5" pos:end="127:21">qapi_free_VncInfo</name><argument_list pos:start="127:22" pos:end="127:27">(<argument pos:start="127:23" pos:end="127:26"><expr pos:start="127:23" pos:end="127:26"><name pos:start="127:23" pos:end="127:26">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="129:5" pos:end="129:16">return <expr pos:start="129:12" pos:end="129:15"><name pos:start="129:12" pos:end="129:15">NULL</name></expr>;</return>

</block_content>}</block></function>
</unit>
