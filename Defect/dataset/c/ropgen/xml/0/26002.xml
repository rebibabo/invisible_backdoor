<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26002.c" pos:tabs="8"><function pos:start="1:1" pos:end="89:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">virtio_setup</name><parameter_list pos:start="1:25" pos:end="1:43">(<parameter pos:start="1:26" pos:end="1:42"><decl pos:start="1:26" pos:end="1:42"><type pos:start="1:26" pos:end="1:33"><name pos:start="1:26" pos:end="1:33">uint64_t</name></type> <name pos:start="1:35" pos:end="1:42">dev_info</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="89:1">{<block_content pos:start="5:5" pos:end="87:34">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:10">struct</name> <name pos:start="5:12" pos:end="5:16">schib</name></name></type> <name pos:start="5:18" pos:end="5:22">schib</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">bool</name></type> <name pos:start="11:10" pos:end="11:14">found</name> <init pos:start="11:16" pos:end="11:22">= <expr pos:start="11:18" pos:end="11:22"><name pos:start="11:18" pos:end="11:22">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:29"><decl pos:start="13:5" pos:end="13:28"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">bool</name></type> <name pos:start="13:10" pos:end="13:20">check_devno</name> <init pos:start="13:22" pos:end="13:28">= <expr pos:start="13:24" pos:end="13:28"><name pos:start="13:24" pos:end="13:28">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint16_t</name></type> <name pos:start="15:14" pos:end="15:19">dev_no</name> <init pos:start="15:21" pos:end="15:24">= <expr pos:start="15:23" pos:end="15:24"><operator pos:start="15:23" pos:end="15:23">-</operator><literal type="number" pos:start="15:24" pos:end="15:24">1</literal></expr></init></decl>;</decl_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:22"><expr pos:start="17:5" pos:end="17:21"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:13">blk_schid</name><operator pos:start="17:14" pos:end="17:14">.</operator><name pos:start="17:15" pos:end="17:17">one</name></name> <operator pos:start="17:19" pos:end="17:19">=</operator> <literal type="number" pos:start="17:21" pos:end="17:21">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="21:5" pos:end="43:5"><if pos:start="21:5" pos:end="43:5">if <condition pos:start="21:8" pos:end="21:23">(<expr pos:start="21:9" pos:end="21:22"><name pos:start="21:9" pos:end="21:16">dev_info</name> <operator pos:start="21:18" pos:end="21:19">!=</operator> <operator pos:start="21:21" pos:end="21:21">-</operator><literal type="number" pos:start="21:22" pos:end="21:22">1</literal></expr>)</condition> <block pos:start="21:25" pos:end="43:5">{<block_content pos:start="23:9" pos:end="41:9">

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:19">check_devno</name> <operator pos:start="23:21" pos:end="23:21">=</operator> <name pos:start="23:23" pos:end="23:26">true</name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:35"><expr pos:start="25:9" pos:end="25:34"><name pos:start="25:9" pos:end="25:14">dev_no</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <name pos:start="25:18" pos:end="25:25">dev_info</name> <operator pos:start="25:27" pos:end="25:27">&amp;</operator> <literal type="number" pos:start="25:29" pos:end="25:34">0xffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:47"><expr pos:start="27:9" pos:end="27:46"><call pos:start="27:9" pos:end="27:46"><name pos:start="27:9" pos:end="27:23">debug_print_int</name><argument_list pos:start="27:24" pos:end="27:46">(<argument pos:start="27:25" pos:end="27:37"><expr pos:start="27:25" pos:end="27:37"><literal type="string" pos:start="27:25" pos:end="27:37">"device no. "</literal></expr></argument>, <argument pos:start="27:40" pos:end="27:45"><expr pos:start="27:40" pos:end="27:45"><name pos:start="27:40" pos:end="27:45">dev_no</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:48"><expr pos:start="29:9" pos:end="29:47"><name pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:17">blk_schid</name><operator pos:start="29:18" pos:end="29:18">.</operator><name pos:start="29:19" pos:end="29:22">ssid</name></name> <operator pos:start="29:24" pos:end="29:24">=</operator> <operator pos:start="29:26" pos:end="29:26">(</operator><name pos:start="29:27" pos:end="29:34">dev_info</name> <operator pos:start="29:36" pos:end="29:37">&gt;&gt;</operator> <literal type="number" pos:start="29:39" pos:end="29:40">16</literal><operator pos:start="29:41" pos:end="29:41">)</operator> <operator pos:start="29:43" pos:end="29:43">&amp;</operator> <literal type="number" pos:start="29:45" pos:end="29:47">0x3</literal></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="41:9"><if pos:start="31:9" pos:end="41:9">if <condition pos:start="31:12" pos:end="31:32">(<expr pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:26"><name pos:start="31:13" pos:end="31:21">blk_schid</name><operator pos:start="31:22" pos:end="31:22">.</operator><name pos:start="31:23" pos:end="31:26">ssid</name></name> <operator pos:start="31:28" pos:end="31:29">!=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">0</literal></expr>)</condition> <block pos:start="31:34" pos:end="41:9">{<block_content pos:start="33:13" pos:end="39:13">

            <expr_stmt pos:start="33:13" pos:end="33:53"><expr pos:start="33:13" pos:end="33:52"><call pos:start="33:13" pos:end="33:52"><name pos:start="33:13" pos:end="33:27">debug_print_int</name><argument_list pos:start="33:28" pos:end="33:52">(<argument pos:start="33:29" pos:end="33:35"><expr pos:start="33:29" pos:end="33:35"><literal type="string" pos:start="33:29" pos:end="33:35">"ssid "</literal></expr></argument>, <argument pos:start="33:38" pos:end="33:51"><expr pos:start="33:38" pos:end="33:51"><name pos:start="33:38" pos:end="33:51"><name pos:start="33:38" pos:end="33:46">blk_schid</name><operator pos:start="33:47" pos:end="33:47">.</operator><name pos:start="33:48" pos:end="33:51">ssid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="35:13" pos:end="39:13"><if pos:start="35:13" pos:end="39:13">if <condition pos:start="35:16" pos:end="35:43">(<expr pos:start="35:17" pos:end="35:42"><call pos:start="35:17" pos:end="35:37"><name pos:start="35:17" pos:end="35:35">enable_mss_facility</name><argument_list pos:start="35:36" pos:end="35:37">()</argument_list></call> <operator pos:start="35:39" pos:end="35:40">!=</operator> <literal type="number" pos:start="35:42" pos:end="35:42">0</literal></expr>)</condition> <block pos:start="35:45" pos:end="39:13">{<block_content pos:start="37:17" pos:end="37:64">

                <expr_stmt pos:start="37:17" pos:end="37:64"><expr pos:start="37:17" pos:end="37:63"><call pos:start="37:17" pos:end="37:63"><name pos:start="37:17" pos:end="37:28">virtio_panic</name><argument_list pos:start="37:29" pos:end="37:63">(<argument pos:start="37:30" pos:end="37:62"><expr pos:start="37:30" pos:end="37:62"><literal type="string" pos:start="37:30" pos:end="37:62">"Failed to enable mss facility\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="47:5" pos:end="75:5">for <control pos:start="47:9" pos:end="47:33">(<init pos:start="47:10" pos:end="47:15"><expr pos:start="47:10" pos:end="47:14"><name pos:start="47:10" pos:end="47:10">i</name> <operator pos:start="47:12" pos:end="47:12">=</operator> <literal type="number" pos:start="47:14" pos:end="47:14">0</literal></expr>;</init> <condition pos:start="47:17" pos:end="47:28"><expr pos:start="47:17" pos:end="47:27"><name pos:start="47:17" pos:end="47:17">i</name> <operator pos:start="47:19" pos:end="47:19">&lt;</operator> <literal type="number" pos:start="47:21" pos:end="47:27">0x10000</literal></expr>;</condition> <incr pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:30">i</name><operator pos:start="47:31" pos:end="47:32">++</operator></expr></incr>)</control> <block pos:start="47:35" pos:end="75:5">{<block_content pos:start="49:9" pos:end="73:9">

        <expr_stmt pos:start="49:9" pos:end="49:29"><expr pos:start="49:9" pos:end="49:28"><name pos:start="49:9" pos:end="49:24"><name pos:start="49:9" pos:end="49:17">blk_schid</name><operator pos:start="49:18" pos:end="49:18">.</operator><name pos:start="49:19" pos:end="49:24">sch_no</name></name> <operator pos:start="49:26" pos:end="49:26">=</operator> <name pos:start="49:28" pos:end="49:28">i</name></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:41"><expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:9">r</name> <operator pos:start="51:11" pos:end="51:11">=</operator> <call pos:start="51:13" pos:end="51:40"><name pos:start="51:13" pos:end="51:21">stsch_err</name><argument_list pos:start="51:22" pos:end="51:40">(<argument pos:start="51:23" pos:end="51:31"><expr pos:start="51:23" pos:end="51:31"><name pos:start="51:23" pos:end="51:31">blk_schid</name></expr></argument>, <argument pos:start="51:34" pos:end="51:39"><expr pos:start="51:34" pos:end="51:39"><operator pos:start="51:34" pos:end="51:34">&amp;</operator><name pos:start="51:35" pos:end="51:39">schib</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="53:9" pos:end="57:9"><if pos:start="53:9" pos:end="57:9">if <condition pos:start="53:12" pos:end="53:19">(<expr pos:start="53:13" pos:end="53:18"><name pos:start="53:13" pos:end="53:13">r</name> <operator pos:start="53:15" pos:end="53:16">==</operator> <literal type="number" pos:start="53:18" pos:end="53:18">3</literal></expr>)</condition> <block pos:start="53:21" pos:end="57:9">{<block_content pos:start="55:13" pos:end="55:18">

            <break pos:start="55:13" pos:end="55:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="59:9" pos:end="73:9"><if pos:start="59:9" pos:end="73:9">if <condition pos:start="59:12" pos:end="59:27">(<expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:17">schib</name><operator pos:start="59:18" pos:end="59:18">.</operator><name pos:start="59:19" pos:end="59:22">pmcw</name><operator pos:start="59:23" pos:end="59:23">.</operator><name pos:start="59:24" pos:end="59:26">dnv</name></name></expr>)</condition> <block pos:start="59:29" pos:end="73:9">{<block_content pos:start="61:13" pos:end="71:13">

            <if_stmt pos:start="61:13" pos:end="71:13"><if pos:start="61:13" pos:end="71:13">if <condition pos:start="61:16" pos:end="61:59">(<expr pos:start="61:17" pos:end="61:58"><operator pos:start="61:17" pos:end="61:17">!</operator><name pos:start="61:18" pos:end="61:28">check_devno</name> <operator pos:start="61:30" pos:end="61:31">||</operator> <operator pos:start="61:33" pos:end="61:33">(</operator><name pos:start="61:34" pos:end="61:47"><name pos:start="61:34" pos:end="61:38">schib</name><operator pos:start="61:39" pos:end="61:39">.</operator><name pos:start="61:40" pos:end="61:43">pmcw</name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:47">dev</name></name> <operator pos:start="61:49" pos:end="61:50">==</operator> <name pos:start="61:52" pos:end="61:57">dev_no</name><operator pos:start="61:58" pos:end="61:58">)</operator></expr>)</condition> <block pos:start="61:61" pos:end="71:13">{<block_content pos:start="63:17" pos:end="69:17">

                <if_stmt pos:start="63:17" pos:end="69:17"><if pos:start="63:17" pos:end="69:17">if <condition pos:start="63:20" pos:end="63:45">(<expr pos:start="63:21" pos:end="63:44"><call pos:start="63:21" pos:end="63:44"><name pos:start="63:21" pos:end="63:33">virtio_is_blk</name><argument_list pos:start="63:34" pos:end="63:44">(<argument pos:start="63:35" pos:end="63:43"><expr pos:start="63:35" pos:end="63:43"><name pos:start="63:35" pos:end="63:43">blk_schid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:47" pos:end="69:17">{<block_content pos:start="65:21" pos:end="67:26">

                    <expr_stmt pos:start="65:21" pos:end="65:33"><expr pos:start="65:21" pos:end="65:32"><name pos:start="65:21" pos:end="65:25">found</name> <operator pos:start="65:27" pos:end="65:27">=</operator> <name pos:start="65:29" pos:end="65:32">true</name></expr>;</expr_stmt>

                    <break pos:start="67:21" pos:end="67:26">break;</break>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="79:5" pos:end="83:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:15">(<expr pos:start="79:9" pos:end="79:14"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:14">found</name></expr>)</condition> <block pos:start="79:17" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:54">

        <expr_stmt pos:start="81:9" pos:end="81:54"><expr pos:start="81:9" pos:end="81:53"><call pos:start="81:9" pos:end="81:53"><name pos:start="81:9" pos:end="81:20">virtio_panic</name><argument_list pos:start="81:21" pos:end="81:53">(<argument pos:start="81:22" pos:end="81:52"><expr pos:start="81:22" pos:end="81:52"><literal type="string" pos:start="81:22" pos:end="81:52">"No virtio-blk device found!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:34"><expr pos:start="87:5" pos:end="87:33"><call pos:start="87:5" pos:end="87:33"><name pos:start="87:5" pos:end="87:22">virtio_setup_block</name><argument_list pos:start="87:23" pos:end="87:33">(<argument pos:start="87:24" pos:end="87:32"><expr pos:start="87:24" pos:end="87:32"><name pos:start="87:24" pos:end="87:32">blk_schid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
