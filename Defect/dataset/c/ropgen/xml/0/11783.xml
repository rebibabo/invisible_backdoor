<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11783.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">h261_encode_motion</name><parameter_list pos:start="1:31" pos:end="1:56">(<parameter pos:start="1:32" pos:end="1:46"><decl pos:start="1:32" pos:end="1:46"><type pos:start="1:32" pos:end="1:46"><name pos:start="1:32" pos:end="1:42">H261Context</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type> <name pos:start="1:46" pos:end="1:46">h</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:55"><decl pos:start="1:49" pos:end="1:55"><type pos:start="1:49" pos:end="1:55"><name pos:start="1:49" pos:end="1:51">int</name></type> <name pos:start="1:53" pos:end="1:55">val</name></decl></parameter>)</parameter_list><block pos:start="1:57" pos:end="35:1">{<block_content pos:start="3:5" pos:end="33:5">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:19"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">sign</name></decl>, <decl pos:start="5:15" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:18">code</name></decl>;</decl_stmt>

    <if_stmt pos:start="7:5" pos:end="33:5"><if pos:start="7:5" pos:end="13:5">if<condition pos:start="7:7" pos:end="7:14">(<expr pos:start="7:8" pos:end="7:13"><name pos:start="7:8" pos:end="7:10">val</name><operator pos:start="7:11" pos:end="7:12">==</operator><literal type="number" pos:start="7:13" pos:end="7:13">0</literal></expr>)</condition><block pos:start="7:15" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:67">

        <expr_stmt pos:start="9:9" pos:end="9:17"><expr pos:start="9:9" pos:end="9:16"><name pos:start="9:9" pos:end="9:12">code</name> <operator pos:start="9:14" pos:end="9:14">=</operator> <literal type="number" pos:start="9:16" pos:end="9:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:67"><expr pos:start="11:9" pos:end="11:66"><call pos:start="11:9" pos:end="11:66"><name pos:start="11:9" pos:end="11:16">put_bits</name><argument_list pos:start="11:17" pos:end="11:66">(<argument pos:start="11:18" pos:end="11:23"><expr pos:start="11:18" pos:end="11:23"><operator pos:start="11:18" pos:end="11:18">&amp;</operator><name pos:start="11:19" pos:end="11:23"><name pos:start="11:19" pos:end="11:19">s</name><operator pos:start="11:20" pos:end="11:21">-&gt;</operator><name pos:start="11:22" pos:end="11:23">pb</name></name></expr></argument>,<argument pos:start="11:25" pos:end="11:44"><expr pos:start="11:25" pos:end="11:44"><name pos:start="11:25" pos:end="11:44"><name pos:start="11:25" pos:end="11:35">h261_mv_tab</name><index pos:start="11:36" pos:end="11:41">[<expr pos:start="11:37" pos:end="11:40"><name pos:start="11:37" pos:end="11:40">code</name></expr>]</index><index pos:start="11:42" pos:end="11:44">[<expr pos:start="11:43" pos:end="11:43"><literal type="number" pos:start="11:43" pos:end="11:43">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="11:46" pos:end="11:65"><expr pos:start="11:46" pos:end="11:65"><name pos:start="11:46" pos:end="11:65"><name pos:start="11:46" pos:end="11:56">h261_mv_tab</name><index pos:start="11:57" pos:end="11:62">[<expr pos:start="11:58" pos:end="11:61"><name pos:start="11:58" pos:end="11:61">code</name></expr>]</index><index pos:start="11:63" pos:end="11:65">[<expr pos:start="11:64" pos:end="11:64"><literal type="number" pos:start="11:64" pos:end="11:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> 

    <else pos:start="15:5" pos:end="33:5">else<block pos:start="15:9" pos:end="33:5">{<block_content pos:start="17:9" pos:end="31:32">

        <if_stmt pos:start="17:9" pos:end="19:21"><if pos:start="17:9" pos:end="19:21">if<condition pos:start="17:11" pos:end="17:20">(<expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:14">val</name> <operator pos:start="17:16" pos:end="17:16">&gt;</operator> <literal type="number" pos:start="17:18" pos:end="17:19">16</literal></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:21"><block_content pos:start="19:13" pos:end="19:21">

            <expr_stmt pos:start="19:13" pos:end="19:21"><expr pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">val</name> <operator pos:start="19:17" pos:end="19:18">-=</operator><literal type="number" pos:start="19:19" pos:end="19:20">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="23:20"><if pos:start="21:9" pos:end="23:20">if<condition pos:start="21:11" pos:end="21:21">(<expr pos:start="21:12" pos:end="21:20"><name pos:start="21:12" pos:end="21:14">val</name> <operator pos:start="21:16" pos:end="21:16">&lt;</operator> <operator pos:start="21:18" pos:end="21:18">-</operator><literal type="number" pos:start="21:19" pos:end="21:20">16</literal></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:20"><block_content pos:start="23:13" pos:end="23:20">

            <expr_stmt pos:start="23:13" pos:end="23:20"><expr pos:start="23:13" pos:end="23:19"><name pos:start="23:13" pos:end="23:15">val</name><operator pos:start="23:16" pos:end="23:17">+=</operator><literal type="number" pos:start="23:18" pos:end="23:19">32</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:12">sign</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:18">val</name> <operator pos:start="25:20" pos:end="25:20">&lt;</operator> <literal type="number" pos:start="25:22" pos:end="25:22">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:33"><expr pos:start="27:9" pos:end="27:32"><name pos:start="27:9" pos:end="27:12">code</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <ternary pos:start="27:16" pos:end="27:32"><condition pos:start="27:16" pos:end="27:21"><expr pos:start="27:16" pos:end="27:19"><name pos:start="27:16" pos:end="27:19">sign</name></expr> ?</condition><then pos:start="27:23" pos:end="27:26"> <expr pos:start="27:23" pos:end="27:26"><operator pos:start="27:23" pos:end="27:23">-</operator><name pos:start="27:24" pos:end="27:26">val</name></expr> </then><else pos:start="27:28" pos:end="27:32">: <expr pos:start="27:30" pos:end="27:32"><name pos:start="27:30" pos:end="27:32">val</name></expr></else></ternary></expr>;</expr_stmt> 

        <expr_stmt pos:start="29:9" pos:end="29:67"><expr pos:start="29:9" pos:end="29:66"><call pos:start="29:9" pos:end="29:66"><name pos:start="29:9" pos:end="29:16">put_bits</name><argument_list pos:start="29:17" pos:end="29:66">(<argument pos:start="29:18" pos:end="29:23"><expr pos:start="29:18" pos:end="29:23"><operator pos:start="29:18" pos:end="29:18">&amp;</operator><name pos:start="29:19" pos:end="29:23"><name pos:start="29:19" pos:end="29:19">s</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:23">pb</name></name></expr></argument>,<argument pos:start="29:25" pos:end="29:44"><expr pos:start="29:25" pos:end="29:44"><name pos:start="29:25" pos:end="29:44"><name pos:start="29:25" pos:end="29:35">h261_mv_tab</name><index pos:start="29:36" pos:end="29:41">[<expr pos:start="29:37" pos:end="29:40"><name pos:start="29:37" pos:end="29:40">code</name></expr>]</index><index pos:start="29:42" pos:end="29:44">[<expr pos:start="29:43" pos:end="29:43"><literal type="number" pos:start="29:43" pos:end="29:43">1</literal></expr>]</index></name></expr></argument>,<argument pos:start="29:46" pos:end="29:65"><expr pos:start="29:46" pos:end="29:65"><name pos:start="29:46" pos:end="29:65"><name pos:start="29:46" pos:end="29:56">h261_mv_tab</name><index pos:start="29:57" pos:end="29:62">[<expr pos:start="29:58" pos:end="29:61"><name pos:start="29:58" pos:end="29:61">code</name></expr>]</index><index pos:start="29:63" pos:end="29:65">[<expr pos:start="29:64" pos:end="29:64"><literal type="number" pos:start="29:64" pos:end="29:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><call pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:16">put_bits</name><argument_list pos:start="31:17" pos:end="31:31">(<argument pos:start="31:18" pos:end="31:23"><expr pos:start="31:18" pos:end="31:23"><operator pos:start="31:18" pos:end="31:18">&amp;</operator><name pos:start="31:19" pos:end="31:23"><name pos:start="31:19" pos:end="31:19">s</name><operator pos:start="31:20" pos:end="31:21">-&gt;</operator><name pos:start="31:22" pos:end="31:23">pb</name></name></expr></argument>,<argument pos:start="31:25" pos:end="31:25"><expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">1</literal></expr></argument>,<argument pos:start="31:27" pos:end="31:30"><expr pos:start="31:27" pos:end="31:30"><name pos:start="31:27" pos:end="31:30">sign</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
