<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23258.c" pos:tabs="8"><function pos:start="1:1" pos:end="291:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">amf_parse_object</name><parameter_list pos:start="1:28" pos:end="5:55">(<parameter pos:start="1:29" pos:end="1:46"><decl pos:start="1:29" pos:end="1:46"><type pos:start="1:29" pos:end="1:46"><name pos:start="1:29" pos:end="1:43">AVFormatContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:65"><decl pos:start="1:49" pos:end="1:65"><type pos:start="1:49" pos:end="1:65"><name pos:start="1:49" pos:end="1:56">AVStream</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:65">astream</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:45"><decl pos:start="3:29" pos:end="3:45"><type pos:start="3:29" pos:end="3:45"><name pos:start="3:29" pos:end="3:36">AVStream</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:45">vstream</name></decl></parameter>, <parameter pos:start="3:48" pos:end="3:62"><decl pos:start="3:48" pos:end="3:62"><type pos:start="3:48" pos:end="3:62"><specifier pos:start="3:48" pos:end="3:52">const</specifier> <name pos:start="3:54" pos:end="3:57">char</name> <modifier pos:start="3:59" pos:end="3:59">*</modifier></type><name pos:start="3:60" pos:end="3:62">key</name></decl></parameter>,

                            <parameter pos:start="5:29" pos:end="5:43"><decl pos:start="5:29" pos:end="5:43"><type pos:start="5:29" pos:end="5:43"><name pos:start="5:29" pos:end="5:35">int64_t</name></type> <name pos:start="5:37" pos:end="5:43">max_pos</name></decl></parameter>, <parameter pos:start="5:46" pos:end="5:54"><decl pos:start="5:46" pos:end="5:54"><type pos:start="5:46" pos:end="5:54"><name pos:start="5:46" pos:end="5:48">int</name></type> <name pos:start="5:50" pos:end="5:54">depth</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="291:1">{<block_content pos:start="9:5" pos:end="289:13">

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18">AVCodecContext</name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:26">acodec</name></decl>, <decl pos:start="9:29" pos:end="9:35"><type ref="prev" pos:start="9:5" pos:end="9:20"><modifier pos:start="9:29" pos:end="9:29">*</modifier></type><name pos:start="9:30" pos:end="9:35">vcodec</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:35"><decl pos:start="11:5" pos:end="11:34"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:14">FLVContext</name> <modifier pos:start="11:16" pos:end="11:16">*</modifier></type><name pos:start="11:17" pos:end="11:19">flv</name> <init pos:start="11:21" pos:end="11:34">= <expr pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:34"><name pos:start="11:23" pos:end="11:23">s</name><operator pos:start="11:24" pos:end="11:25">-&gt;</operator><name pos:start="11:26" pos:end="11:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:17"><name pos:start="13:5" pos:end="13:15">AVIOContext</name> <modifier pos:start="13:17" pos:end="13:17">*</modifier></type><name pos:start="13:18" pos:end="13:20">ioc</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:25"><decl pos:start="15:5" pos:end="15:24"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:15">AMFDataType</name></type> <name pos:start="15:17" pos:end="15:24">amf_type</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:22"><decl pos:start="17:5" pos:end="17:21"><type pos:start="17:5" pos:end="17:8"><name pos:start="17:5" pos:end="17:8">char</name></type> <name pos:start="17:10" pos:end="17:21"><name pos:start="17:10" pos:end="17:16">str_val</name><index pos:start="17:17" pos:end="17:21">[<expr pos:start="17:18" pos:end="17:20"><literal type="number" pos:start="17:18" pos:end="17:20">256</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:19"><decl pos:start="19:5" pos:end="19:18"><type pos:start="19:5" pos:end="19:10"><name pos:start="19:5" pos:end="19:10">double</name></type> <name pos:start="19:12" pos:end="19:18">num_val</name></decl>;</decl_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:17"><expr pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:11">num_val</name>  <operator pos:start="23:14" pos:end="23:14">=</operator> <literal type="number" pos:start="23:16" pos:end="23:16">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:21"><expr pos:start="25:5" pos:end="25:20"><name pos:start="25:5" pos:end="25:7">ioc</name>      <operator pos:start="25:14" pos:end="25:14">=</operator> <name pos:start="25:16" pos:end="25:20"><name pos:start="25:16" pos:end="25:16">s</name><operator pos:start="25:17" pos:end="25:18">-&gt;</operator><name pos:start="25:19" pos:end="25:20">pb</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:12">amf_type</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:27"><name pos:start="27:16" pos:end="27:22">avio_r8</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="31:5" pos:end="147:5">switch <condition pos:start="31:12" pos:end="31:21">(<expr pos:start="31:13" pos:end="31:20"><name pos:start="31:13" pos:end="31:20">amf_type</name></expr>)</condition> <block pos:start="31:23" pos:end="147:5">{<block_content pos:start="33:5" pos:end="145:18">

    <case pos:start="33:5" pos:end="33:30">case <expr pos:start="33:10" pos:end="33:29"><name pos:start="33:10" pos:end="33:29">AMF_DATA_TYPE_NUMBER</name></expr>:</case>

        <expr_stmt pos:start="35:9" pos:end="35:48"><expr pos:start="35:9" pos:end="35:47"><name pos:start="35:9" pos:end="35:15">num_val</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:47"><name pos:start="35:19" pos:end="35:31">av_int2double</name><argument_list pos:start="35:32" pos:end="35:47">(<argument pos:start="35:33" pos:end="35:46"><expr pos:start="35:33" pos:end="35:46"><call pos:start="35:33" pos:end="35:46"><name pos:start="35:33" pos:end="35:41">avio_rb64</name><argument_list pos:start="35:42" pos:end="35:46">(<argument pos:start="35:43" pos:end="35:45"><expr pos:start="35:43" pos:end="35:45"><name pos:start="35:43" pos:end="35:45">ioc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="37:9" pos:end="37:14">break;</break>

    <case pos:start="39:5" pos:end="39:28">case <expr pos:start="39:10" pos:end="39:27"><name pos:start="39:10" pos:end="39:27">AMF_DATA_TYPE_BOOL</name></expr>:</case>

        <expr_stmt pos:start="41:9" pos:end="41:31"><expr pos:start="41:9" pos:end="41:30"><name pos:start="41:9" pos:end="41:15">num_val</name> <operator pos:start="41:17" pos:end="41:17">=</operator> <call pos:start="41:19" pos:end="41:30"><name pos:start="41:19" pos:end="41:25">avio_r8</name><argument_list pos:start="41:26" pos:end="41:30">(<argument pos:start="41:27" pos:end="41:29"><expr pos:start="41:27" pos:end="41:29"><name pos:start="41:27" pos:end="41:29">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:30">case <expr pos:start="45:10" pos:end="45:29"><name pos:start="45:10" pos:end="45:29">AMF_DATA_TYPE_STRING</name></expr>:</case>

        <if_stmt pos:start="47:9" pos:end="49:22"><if pos:start="47:9" pos:end="49:22">if <condition pos:start="47:12" pos:end="47:62">(<expr pos:start="47:13" pos:end="47:61"><call pos:start="47:13" pos:end="47:57"><name pos:start="47:13" pos:end="47:26">amf_get_string</name><argument_list pos:start="47:27" pos:end="47:57">(<argument pos:start="47:28" pos:end="47:30"><expr pos:start="47:28" pos:end="47:30"><name pos:start="47:28" pos:end="47:30">ioc</name></expr></argument>, <argument pos:start="47:33" pos:end="47:39"><expr pos:start="47:33" pos:end="47:39"><name pos:start="47:33" pos:end="47:39">str_val</name></expr></argument>, <argument pos:start="47:42" pos:end="47:56"><expr pos:start="47:42" pos:end="47:56"><sizeof pos:start="47:42" pos:end="47:56">sizeof<argument_list pos:start="47:48" pos:end="47:56">(<argument pos:start="47:49" pos:end="47:55"><expr pos:start="47:49" pos:end="47:55"><name pos:start="47:49" pos:end="47:55">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="47:59" pos:end="47:59">&lt;</operator> <literal type="number" pos:start="47:61" pos:end="47:61">0</literal></expr>)</condition><block type="pseudo" pos:start="49:13" pos:end="49:22"><block_content pos:start="49:13" pos:end="49:22">

            <return pos:start="49:13" pos:end="49:22">return <expr pos:start="49:20" pos:end="49:21"><operator pos:start="49:20" pos:end="49:20">-</operator><literal type="number" pos:start="49:21" pos:end="49:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:30">case <expr pos:start="53:10" pos:end="53:29"><name pos:start="53:10" pos:end="53:29">AMF_DATA_TYPE_OBJECT</name></expr>:</case>

        <if_stmt pos:start="55:9" pos:end="63:26"><if pos:start="55:9" pos:end="63:26">if <condition pos:start="55:12" pos:end="57:54">(<expr pos:start="55:13" pos:end="57:53"><operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:20">vstream</name> <operator pos:start="55:22" pos:end="55:23">||</operator> <name pos:start="55:25" pos:end="55:31">astream</name><operator pos:start="55:32" pos:end="55:32">)</operator> <operator pos:start="55:34" pos:end="55:35">&amp;&amp;</operator> <name pos:start="55:37" pos:end="55:39">key</name> <operator pos:start="55:41" pos:end="55:42">&amp;&amp;</operator>

            <operator pos:start="57:13" pos:end="57:13">!</operator><call pos:start="57:14" pos:end="57:39"><name pos:start="57:14" pos:end="57:19">strcmp</name><argument_list pos:start="57:20" pos:end="57:39">(<argument pos:start="57:21" pos:end="57:33"><expr pos:start="57:21" pos:end="57:33"><name pos:start="57:21" pos:end="57:33">KEYFRAMES_TAG</name></expr></argument>, <argument pos:start="57:36" pos:end="57:38"><expr pos:start="57:36" pos:end="57:38"><name pos:start="57:36" pos:end="57:38">key</name></expr></argument>)</argument_list></call> <operator pos:start="57:41" pos:end="57:42">&amp;&amp;</operator> <name pos:start="57:44" pos:end="57:48">depth</name> <operator pos:start="57:50" pos:end="57:51">==</operator> <literal type="number" pos:start="57:53" pos:end="57:53">1</literal></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="63:26"><block_content pos:start="59:13" pos:end="63:26">

            <if_stmt pos:start="59:13" pos:end="63:26"><if pos:start="59:13" pos:end="63:26">if <condition pos:start="59:16" pos:end="61:51">(<expr pos:start="59:17" pos:end="61:50"><call pos:start="59:17" pos:end="61:46"><name pos:start="59:17" pos:end="59:37">parse_keyframes_index</name><argument_list pos:start="59:38" pos:end="61:46">(<argument pos:start="59:39" pos:end="59:39"><expr pos:start="59:39" pos:end="59:39"><name pos:start="59:39" pos:end="59:39">s</name></expr></argument>, <argument pos:start="59:42" pos:end="59:44"><expr pos:start="59:42" pos:end="59:44"><name pos:start="59:42" pos:end="59:44">ioc</name></expr></argument>, <argument pos:start="59:47" pos:end="59:73"><expr pos:start="59:47" pos:end="59:73"><ternary pos:start="59:47" pos:end="59:73"><condition pos:start="59:47" pos:end="59:55"><expr pos:start="59:47" pos:end="59:53"><name pos:start="59:47" pos:end="59:53">vstream</name></expr> ?</condition><then pos:start="59:57" pos:end="59:63"> <expr pos:start="59:57" pos:end="59:63"><name pos:start="59:57" pos:end="59:63">vstream</name></expr> </then><else pos:start="59:65" pos:end="59:73">: <expr pos:start="59:67" pos:end="59:73"><name pos:start="59:67" pos:end="59:73">astream</name></expr></else></ternary></expr></argument>,

                                      <argument pos:start="61:39" pos:end="61:45"><expr pos:start="61:39" pos:end="61:45"><name pos:start="61:39" pos:end="61:45">max_pos</name></expr></argument>)</argument_list></call> <operator pos:start="61:48" pos:end="61:48">&lt;</operator> <literal type="number" pos:start="61:50" pos:end="61:50">0</literal></expr>)</condition><block type="pseudo" pos:start="63:17" pos:end="63:26"><block_content pos:start="63:17" pos:end="63:26">

                <return pos:start="63:17" pos:end="63:26">return <expr pos:start="63:24" pos:end="63:25"><operator pos:start="63:24" pos:end="63:24">-</operator><literal type="number" pos:start="63:25" pos:end="63:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></if></if_stmt>



        <while pos:start="67:9" pos:end="75:26">while <condition pos:start="67:15" pos:end="69:65">(<expr pos:start="67:16" pos:end="69:64"><call pos:start="67:16" pos:end="67:29"><name pos:start="67:16" pos:end="67:24">avio_tell</name><argument_list pos:start="67:25" pos:end="67:29">(<argument pos:start="67:26" pos:end="67:28"><expr pos:start="67:26" pos:end="67:28"><name pos:start="67:26" pos:end="67:28">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="67:31" pos:end="67:31">&lt;</operator> <name pos:start="67:33" pos:end="67:39">max_pos</name> <operator pos:start="67:41" pos:end="67:41">-</operator> <literal type="number" pos:start="67:43" pos:end="67:43">2</literal> <operator pos:start="67:45" pos:end="67:46">&amp;&amp;</operator>

               <call pos:start="69:16" pos:end="69:60"><name pos:start="69:16" pos:end="69:29">amf_get_string</name><argument_list pos:start="69:30" pos:end="69:60">(<argument pos:start="69:31" pos:end="69:33"><expr pos:start="69:31" pos:end="69:33"><name pos:start="69:31" pos:end="69:33">ioc</name></expr></argument>, <argument pos:start="69:36" pos:end="69:42"><expr pos:start="69:36" pos:end="69:42"><name pos:start="69:36" pos:end="69:42">str_val</name></expr></argument>, <argument pos:start="69:45" pos:end="69:59"><expr pos:start="69:45" pos:end="69:59"><sizeof pos:start="69:45" pos:end="69:59">sizeof<argument_list pos:start="69:51" pos:end="69:59">(<argument pos:start="69:52" pos:end="69:58"><expr pos:start="69:52" pos:end="69:58"><name pos:start="69:52" pos:end="69:58">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="69:62" pos:end="69:62">&gt;</operator> <literal type="number" pos:start="69:64" pos:end="69:64">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="75:26"><block_content pos:start="71:13" pos:end="75:26">

            <if_stmt pos:start="71:13" pos:end="75:26"><if pos:start="71:13" pos:end="75:26">if <condition pos:start="71:16" pos:end="73:48">(<expr pos:start="71:17" pos:end="73:47"><call pos:start="71:17" pos:end="73:43"><name pos:start="71:17" pos:end="71:32">amf_parse_object</name><argument_list pos:start="71:33" pos:end="73:43">(<argument pos:start="71:34" pos:end="71:34"><expr pos:start="71:34" pos:end="71:34"><name pos:start="71:34" pos:end="71:34">s</name></expr></argument>, <argument pos:start="71:37" pos:end="71:43"><expr pos:start="71:37" pos:end="71:43"><name pos:start="71:37" pos:end="71:43">astream</name></expr></argument>, <argument pos:start="71:46" pos:end="71:52"><expr pos:start="71:46" pos:end="71:52"><name pos:start="71:46" pos:end="71:52">vstream</name></expr></argument>, <argument pos:start="71:55" pos:end="71:61"><expr pos:start="71:55" pos:end="71:61"><name pos:start="71:55" pos:end="71:61">str_val</name></expr></argument>, <argument pos:start="71:64" pos:end="71:70"><expr pos:start="71:64" pos:end="71:70"><name pos:start="71:64" pos:end="71:70">max_pos</name></expr></argument>,

                                 <argument pos:start="73:34" pos:end="73:42"><expr pos:start="73:34" pos:end="73:42"><name pos:start="73:34" pos:end="73:38">depth</name> <operator pos:start="73:40" pos:end="73:40">+</operator> <literal type="number" pos:start="73:42" pos:end="73:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="73:45" pos:end="73:45">&lt;</operator> <literal type="number" pos:start="73:47" pos:end="73:47">0</literal></expr>)</condition><block type="pseudo" pos:start="75:17" pos:end="75:26"><block_content pos:start="75:17" pos:end="75:26">

                <return pos:start="75:17" pos:end="75:26">return <expr pos:start="75:24" pos:end="75:25"><operator pos:start="75:24" pos:end="75:24">-</operator><literal type="number" pos:start="75:25" pos:end="75:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></while>     <comment type="line" pos:start="75:32" pos:end="75:64">// if we couldn't skip, bomb out.</comment>

        <if_stmt pos:start="77:9" pos:end="79:22"><if pos:start="77:9" pos:end="79:22">if <condition pos:start="77:12" pos:end="77:46">(<expr pos:start="77:13" pos:end="77:45"><call pos:start="77:13" pos:end="77:24"><name pos:start="77:13" pos:end="77:19">avio_r8</name><argument_list pos:start="77:20" pos:end="77:24">(<argument pos:start="77:21" pos:end="77:23"><expr pos:start="77:21" pos:end="77:23"><name pos:start="77:21" pos:end="77:23">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="77:26" pos:end="77:27">!=</operator> <name pos:start="77:29" pos:end="77:45">AMF_END_OF_OBJECT</name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:22"><block_content pos:start="79:13" pos:end="79:22">

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="81:9" pos:end="81:14">break;</break>

    <case pos:start="83:5" pos:end="83:28">case <expr pos:start="83:10" pos:end="83:27"><name pos:start="83:10" pos:end="83:27">AMF_DATA_TYPE_NULL</name></expr>:</case>

    <case pos:start="85:5" pos:end="85:33">case <expr pos:start="85:10" pos:end="85:32"><name pos:start="85:10" pos:end="85:32">AMF_DATA_TYPE_UNDEFINED</name></expr>:</case>

    <case pos:start="87:5" pos:end="87:35">case <expr pos:start="87:10" pos:end="87:34"><name pos:start="87:10" pos:end="87:34">AMF_DATA_TYPE_UNSUPPORTED</name></expr>:</case>

        <break pos:start="89:9" pos:end="89:14">break;</break>     <comment type="line" pos:start="89:20" pos:end="89:55">// these take up no additional space</comment>

    <case pos:start="91:5" pos:end="91:34">case <expr pos:start="91:10" pos:end="91:33"><name pos:start="91:10" pos:end="91:33">AMF_DATA_TYPE_MIXEDARRAY</name></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:26"><expr pos:start="93:9" pos:end="93:25"><call pos:start="93:9" pos:end="93:25"><name pos:start="93:9" pos:end="93:17">avio_skip</name><argument_list pos:start="93:18" pos:end="93:25">(<argument pos:start="93:19" pos:end="93:21"><expr pos:start="93:19" pos:end="93:21"><name pos:start="93:19" pos:end="93:21">ioc</name></expr></argument>, <argument pos:start="93:24" pos:end="93:24"><expr pos:start="93:24" pos:end="93:24"><literal type="number" pos:start="93:24" pos:end="93:24">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>     <comment type="line" pos:start="93:32" pos:end="93:61">// skip 32-bit max array index</comment>

        <while pos:start="95:9" pos:end="107:26">while <condition pos:start="95:15" pos:end="97:65">(<expr pos:start="95:16" pos:end="97:64"><call pos:start="95:16" pos:end="95:29"><name pos:start="95:16" pos:end="95:24">avio_tell</name><argument_list pos:start="95:25" pos:end="95:29">(<argument pos:start="95:26" pos:end="95:28"><expr pos:start="95:26" pos:end="95:28"><name pos:start="95:26" pos:end="95:28">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="95:31" pos:end="95:31">&lt;</operator> <name pos:start="95:33" pos:end="95:39">max_pos</name> <operator pos:start="95:41" pos:end="95:41">-</operator> <literal type="number" pos:start="95:43" pos:end="95:43">2</literal> <operator pos:start="95:45" pos:end="95:46">&amp;&amp;</operator>

               <call pos:start="97:16" pos:end="97:60"><name pos:start="97:16" pos:end="97:29">amf_get_string</name><argument_list pos:start="97:30" pos:end="97:60">(<argument pos:start="97:31" pos:end="97:33"><expr pos:start="97:31" pos:end="97:33"><name pos:start="97:31" pos:end="97:33">ioc</name></expr></argument>, <argument pos:start="97:36" pos:end="97:42"><expr pos:start="97:36" pos:end="97:42"><name pos:start="97:36" pos:end="97:42">str_val</name></expr></argument>, <argument pos:start="97:45" pos:end="97:59"><expr pos:start="97:45" pos:end="97:59"><sizeof pos:start="97:45" pos:end="97:59">sizeof<argument_list pos:start="97:51" pos:end="97:59">(<argument pos:start="97:52" pos:end="97:58"><expr pos:start="97:52" pos:end="97:58"><name pos:start="97:52" pos:end="97:58">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call> <operator pos:start="97:62" pos:end="97:62">&gt;</operator> <literal type="number" pos:start="97:64" pos:end="97:64">0</literal></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="107:26"><block_content pos:start="103:13" pos:end="107:26">

            <comment type="line" pos:start="99:13" pos:end="99:68">// this is the only case in which we would want a nested</comment>

            <comment type="line" pos:start="101:13" pos:end="101:48">// parse to not skip over the object</comment>

            <if_stmt pos:start="103:13" pos:end="107:26"><if pos:start="103:13" pos:end="107:26">if <condition pos:start="103:16" pos:end="105:48">(<expr pos:start="103:17" pos:end="105:47"><call pos:start="103:17" pos:end="105:43"><name pos:start="103:17" pos:end="103:32">amf_parse_object</name><argument_list pos:start="103:33" pos:end="105:43">(<argument pos:start="103:34" pos:end="103:34"><expr pos:start="103:34" pos:end="103:34"><name pos:start="103:34" pos:end="103:34">s</name></expr></argument>, <argument pos:start="103:37" pos:end="103:43"><expr pos:start="103:37" pos:end="103:43"><name pos:start="103:37" pos:end="103:43">astream</name></expr></argument>, <argument pos:start="103:46" pos:end="103:52"><expr pos:start="103:46" pos:end="103:52"><name pos:start="103:46" pos:end="103:52">vstream</name></expr></argument>, <argument pos:start="103:55" pos:end="103:61"><expr pos:start="103:55" pos:end="103:61"><name pos:start="103:55" pos:end="103:61">str_val</name></expr></argument>, <argument pos:start="103:64" pos:end="103:70"><expr pos:start="103:64" pos:end="103:70"><name pos:start="103:64" pos:end="103:70">max_pos</name></expr></argument>,

                                 <argument pos:start="105:34" pos:end="105:42"><expr pos:start="105:34" pos:end="105:42"><name pos:start="105:34" pos:end="105:38">depth</name> <operator pos:start="105:40" pos:end="105:40">+</operator> <literal type="number" pos:start="105:42" pos:end="105:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="105:45" pos:end="105:45">&lt;</operator> <literal type="number" pos:start="105:47" pos:end="105:47">0</literal></expr>)</condition><block type="pseudo" pos:start="107:17" pos:end="107:26"><block_content pos:start="107:17" pos:end="107:26">

                <return pos:start="107:17" pos:end="107:26">return <expr pos:start="107:24" pos:end="107:25"><operator pos:start="107:24" pos:end="107:24">-</operator><literal type="number" pos:start="107:25" pos:end="107:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></while>

        <if_stmt pos:start="109:9" pos:end="111:22"><if pos:start="109:9" pos:end="111:22">if <condition pos:start="109:12" pos:end="109:46">(<expr pos:start="109:13" pos:end="109:45"><call pos:start="109:13" pos:end="109:24"><name pos:start="109:13" pos:end="109:19">avio_r8</name><argument_list pos:start="109:20" pos:end="109:24">(<argument pos:start="109:21" pos:end="109:23"><expr pos:start="109:21" pos:end="109:23"><name pos:start="109:21" pos:end="109:23">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="109:26" pos:end="109:27">!=</operator> <name pos:start="109:29" pos:end="109:45">AMF_END_OF_OBJECT</name></expr>)</condition><block type="pseudo" pos:start="111:13" pos:end="111:22"><block_content pos:start="111:13" pos:end="111:22">

            <return pos:start="111:13" pos:end="111:22">return <expr pos:start="111:20" pos:end="111:21"><operator pos:start="111:20" pos:end="111:20">-</operator><literal type="number" pos:start="111:21" pos:end="111:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>

    <case pos:start="115:5" pos:end="115:29">case <expr pos:start="115:10" pos:end="115:28"><name pos:start="115:10" pos:end="115:28">AMF_DATA_TYPE_ARRAY</name></expr>:</case>

    <block pos:start="117:5" pos:end="133:5">{<block_content pos:start="119:9" pos:end="131:26">

        <decl_stmt pos:start="119:9" pos:end="119:33"><decl pos:start="119:9" pos:end="119:29"><type pos:start="119:9" pos:end="119:20"><name pos:start="119:9" pos:end="119:16">unsigned</name> <name pos:start="119:18" pos:end="119:20">int</name></type> <name pos:start="119:22" pos:end="119:29">arraylen</name></decl>, <decl pos:start="119:32" pos:end="119:32"><type ref="prev" pos:start="119:9" pos:end="119:20"/><name pos:start="119:32" pos:end="119:32">i</name></decl>;</decl_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:34"><expr pos:start="123:9" pos:end="123:33"><name pos:start="123:9" pos:end="123:16">arraylen</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <call pos:start="123:20" pos:end="123:33"><name pos:start="123:20" pos:end="123:28">avio_rb32</name><argument_list pos:start="123:29" pos:end="123:33">(<argument pos:start="123:30" pos:end="123:32"><expr pos:start="123:30" pos:end="123:32"><name pos:start="123:30" pos:end="123:32">ioc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <for pos:start="125:9" pos:end="131:26">for <control pos:start="125:13" pos:end="125:70">(<init pos:start="125:14" pos:end="125:19"><expr pos:start="125:14" pos:end="125:18"><name pos:start="125:14" pos:end="125:14">i</name> <operator pos:start="125:16" pos:end="125:16">=</operator> <literal type="number" pos:start="125:18" pos:end="125:18">0</literal></expr>;</init> <condition pos:start="125:21" pos:end="125:65"><expr pos:start="125:21" pos:end="125:64"><name pos:start="125:21" pos:end="125:21">i</name> <operator pos:start="125:23" pos:end="125:23">&lt;</operator> <name pos:start="125:25" pos:end="125:32">arraylen</name> <operator pos:start="125:34" pos:end="125:35">&amp;&amp;</operator> <call pos:start="125:37" pos:end="125:50"><name pos:start="125:37" pos:end="125:45">avio_tell</name><argument_list pos:start="125:46" pos:end="125:50">(<argument pos:start="125:47" pos:end="125:49"><expr pos:start="125:47" pos:end="125:49"><name pos:start="125:47" pos:end="125:49">ioc</name></expr></argument>)</argument_list></call> <operator pos:start="125:52" pos:end="125:52">&lt;</operator> <name pos:start="125:54" pos:end="125:60">max_pos</name> <operator pos:start="125:62" pos:end="125:62">-</operator> <literal type="number" pos:start="125:64" pos:end="125:64">1</literal></expr>;</condition> <incr pos:start="125:67" pos:end="125:69"><expr pos:start="125:67" pos:end="125:69"><name pos:start="125:67" pos:end="125:67">i</name><operator pos:start="125:68" pos:end="125:69">++</operator></expr></incr>)</control><block type="pseudo" pos:start="127:13" pos:end="131:26"><block_content pos:start="127:13" pos:end="131:26">

            <if_stmt pos:start="127:13" pos:end="131:26"><if pos:start="127:13" pos:end="131:26">if <condition pos:start="127:16" pos:end="129:48">(<expr pos:start="127:17" pos:end="129:47"><call pos:start="127:17" pos:end="129:43"><name pos:start="127:17" pos:end="127:32">amf_parse_object</name><argument_list pos:start="127:33" pos:end="129:43">(<argument pos:start="127:34" pos:end="127:34"><expr pos:start="127:34" pos:end="127:34"><name pos:start="127:34" pos:end="127:34">s</name></expr></argument>, <argument pos:start="127:37" pos:end="127:40"><expr pos:start="127:37" pos:end="127:40"><name pos:start="127:37" pos:end="127:40">NULL</name></expr></argument>, <argument pos:start="127:43" pos:end="127:46"><expr pos:start="127:43" pos:end="127:46"><name pos:start="127:43" pos:end="127:46">NULL</name></expr></argument>, <argument pos:start="127:49" pos:end="127:52"><expr pos:start="127:49" pos:end="127:52"><name pos:start="127:49" pos:end="127:52">NULL</name></expr></argument>, <argument pos:start="127:55" pos:end="127:61"><expr pos:start="127:55" pos:end="127:61"><name pos:start="127:55" pos:end="127:61">max_pos</name></expr></argument>,

                                 <argument pos:start="129:34" pos:end="129:42"><expr pos:start="129:34" pos:end="129:42"><name pos:start="129:34" pos:end="129:38">depth</name> <operator pos:start="129:40" pos:end="129:40">+</operator> <literal type="number" pos:start="129:42" pos:end="129:42">1</literal></expr></argument>)</argument_list></call> <operator pos:start="129:45" pos:end="129:45">&lt;</operator> <literal type="number" pos:start="129:47" pos:end="129:47">0</literal></expr>)</condition><block type="pseudo" pos:start="131:17" pos:end="131:26"><block_content pos:start="131:17" pos:end="131:26">

                <return pos:start="131:17" pos:end="131:26">return <expr pos:start="131:24" pos:end="131:25"><operator pos:start="131:24" pos:end="131:24">-</operator><literal type="number" pos:start="131:25" pos:end="131:25">1</literal></expr>;</return></block_content></block></if></if_stmt></block_content></block></for>      <comment type="line" pos:start="131:33" pos:end="131:65">// if we couldn't skip, bomb out.</comment>

    </block_content>}</block>

    <break pos:start="135:5" pos:end="135:10">break;</break>

    <case pos:start="137:5" pos:end="137:28">case <expr pos:start="137:10" pos:end="137:27"><name pos:start="137:10" pos:end="137:27">AMF_DATA_TYPE_DATE</name></expr>:</case>

        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><call pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:17">avio_skip</name><argument_list pos:start="139:18" pos:end="139:29">(<argument pos:start="139:19" pos:end="139:21"><expr pos:start="139:19" pos:end="139:21"><name pos:start="139:19" pos:end="139:21">ioc</name></expr></argument>, <argument pos:start="139:24" pos:end="139:28"><expr pos:start="139:24" pos:end="139:28"><literal type="number" pos:start="139:24" pos:end="139:26">8</literal> <operator pos:start="139:26" pos:end="139:26">+</operator> <literal type="number" pos:start="139:28" pos:end="139:28">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>  <comment type="line" pos:start="139:33" pos:end="139:76">// timestamp (double) and UTC offset (int16)</comment>

        <break pos:start="141:9" pos:end="141:14">break;</break>

    <default pos:start="143:5" pos:end="143:12">default:</default>                    <comment type="line" pos:start="143:33" pos:end="143:69">// unsupported type, we couldn't skip</comment>

        <return pos:start="145:9" pos:end="145:18">return <expr pos:start="145:16" pos:end="145:17"><operator pos:start="145:16" pos:end="145:16">-</operator><literal type="number" pos:start="145:17" pos:end="145:17">1</literal></expr>;</return>

    </block_content>}</block></switch>



    <comment type="line" pos:start="151:5" pos:end="151:75">// only look for metadata values when we are not nested and key != NULL</comment>

    <if_stmt pos:start="153:5" pos:end="285:5"><if pos:start="153:5" pos:end="285:5">if <condition pos:start="153:8" pos:end="153:26">(<expr pos:start="153:9" pos:end="153:25"><name pos:start="153:9" pos:end="153:13">depth</name> <operator pos:start="153:15" pos:end="153:16">==</operator> <literal type="number" pos:start="153:18" pos:end="153:18">1</literal> <operator pos:start="153:20" pos:end="153:21">&amp;&amp;</operator> <name pos:start="153:23" pos:end="153:25">key</name></expr>)</condition> <block pos:start="153:28" pos:end="285:5">{<block_content pos:start="155:9" pos:end="283:55">

        <expr_stmt pos:start="155:9" pos:end="155:49"><expr pos:start="155:9" pos:end="155:48"><name pos:start="155:9" pos:end="155:14">acodec</name> <operator pos:start="155:16" pos:end="155:16">=</operator> <ternary pos:start="155:18" pos:end="155:48"><condition pos:start="155:18" pos:end="155:26"><expr pos:start="155:18" pos:end="155:24"><name pos:start="155:18" pos:end="155:24">astream</name></expr> ?</condition><then pos:start="155:28" pos:end="155:41"> <expr pos:start="155:28" pos:end="155:41"><name pos:start="155:28" pos:end="155:41"><name pos:start="155:28" pos:end="155:34">astream</name><operator pos:start="155:35" pos:end="155:36">-&gt;</operator><name pos:start="155:37" pos:end="155:41">codec</name></name></expr> </then><else pos:start="155:43" pos:end="155:48">: <expr pos:start="155:45" pos:end="155:48"><name pos:start="155:45" pos:end="155:48">NULL</name></expr></else></ternary></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="157:49"><expr pos:start="157:9" pos:end="157:48"><name pos:start="157:9" pos:end="157:14">vcodec</name> <operator pos:start="157:16" pos:end="157:16">=</operator> <ternary pos:start="157:18" pos:end="157:48"><condition pos:start="157:18" pos:end="157:26"><expr pos:start="157:18" pos:end="157:24"><name pos:start="157:18" pos:end="157:24">vstream</name></expr> ?</condition><then pos:start="157:28" pos:end="157:41"> <expr pos:start="157:28" pos:end="157:41"><name pos:start="157:28" pos:end="157:41"><name pos:start="157:28" pos:end="157:34">vstream</name><operator pos:start="157:35" pos:end="157:36">-&gt;</operator><name pos:start="157:37" pos:end="157:41">codec</name></name></expr> </then><else pos:start="157:43" pos:end="157:48">: <expr pos:start="157:45" pos:end="157:48"><name pos:start="157:45" pos:end="157:48">NULL</name></expr></else></ternary></expr>;</expr_stmt>



        <if_stmt pos:start="161:9" pos:end="233:9"><if pos:start="161:9" pos:end="233:9">if <condition pos:start="161:12" pos:end="163:43">(<expr pos:start="161:13" pos:end="163:42"><name pos:start="161:13" pos:end="161:20">amf_type</name> <operator pos:start="161:22" pos:end="161:23">==</operator> <name pos:start="161:25" pos:end="161:44">AMF_DATA_TYPE_NUMBER</name> <operator pos:start="161:46" pos:end="161:47">||</operator>

            <name pos:start="163:13" pos:end="163:20">amf_type</name> <operator pos:start="163:22" pos:end="163:23">==</operator> <name pos:start="163:25" pos:end="163:42">AMF_DATA_TYPE_BOOL</name></expr>)</condition> <block pos:start="163:45" pos:end="233:9">{<block_content pos:start="165:13" pos:end="231:13">

            <if_stmt pos:start="165:13" pos:end="231:13"><if pos:start="165:13" pos:end="167:53">if <condition pos:start="165:16" pos:end="165:41">(<expr pos:start="165:17" pos:end="165:40"><operator pos:start="165:17" pos:end="165:17">!</operator><call pos:start="165:18" pos:end="165:40"><name pos:start="165:18" pos:end="165:23">strcmp</name><argument_list pos:start="165:24" pos:end="165:40">(<argument pos:start="165:25" pos:end="165:27"><expr pos:start="165:25" pos:end="165:27"><name pos:start="165:25" pos:end="165:27">key</name></expr></argument>, <argument pos:start="165:30" pos:end="165:39"><expr pos:start="165:30" pos:end="165:39"><literal type="string" pos:start="165:30" pos:end="165:39">"duration"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="167:17" pos:end="167:53"><block_content pos:start="167:17" pos:end="167:53">

                <expr_stmt pos:start="167:17" pos:end="167:53"><expr pos:start="167:17" pos:end="167:52"><name pos:start="167:17" pos:end="167:27"><name pos:start="167:17" pos:end="167:17">s</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:27">duration</name></name> <operator pos:start="167:29" pos:end="167:29">=</operator> <name pos:start="167:31" pos:end="167:37">num_val</name> <operator pos:start="167:39" pos:end="167:39">*</operator> <name pos:start="167:41" pos:end="167:52">AV_TIME_BASE</name></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="169:13" pos:end="173:52">else if <condition pos:start="169:21" pos:end="171:50">(<expr pos:start="169:22" pos:end="171:49"><operator pos:start="169:22" pos:end="169:22">!</operator><call pos:start="169:23" pos:end="169:50"><name pos:start="169:23" pos:end="169:28">strcmp</name><argument_list pos:start="169:29" pos:end="169:50">(<argument pos:start="169:30" pos:end="169:32"><expr pos:start="169:30" pos:end="169:32"><name pos:start="169:30" pos:end="169:32">key</name></expr></argument>, <argument pos:start="169:35" pos:end="169:49"><expr pos:start="169:35" pos:end="169:49"><literal type="string" pos:start="169:35" pos:end="169:49">"videodatarate"</literal></expr></argument>)</argument_list></call> <operator pos:start="169:52" pos:end="169:53">&amp;&amp;</operator> <name pos:start="169:55" pos:end="169:60">vcodec</name> <operator pos:start="169:62" pos:end="169:63">&amp;&amp;</operator>

                     <literal type="number" pos:start="171:22" pos:end="171:22">0</literal> <operator pos:start="171:24" pos:end="171:25">&lt;=</operator> <operator pos:start="171:27" pos:end="171:27">(</operator><name pos:start="171:28" pos:end="171:30">int</name><operator pos:start="171:31" pos:end="171:31">)</operator><operator pos:start="171:32" pos:end="171:32">(</operator><name pos:start="171:33" pos:end="171:39">num_val</name> <operator pos:start="171:41" pos:end="171:41">*</operator> <literal type="number" pos:start="171:43" pos:end="171:48">1024.0</literal><operator pos:start="171:49" pos:end="171:49">)</operator></expr>)</condition><block type="pseudo" pos:start="173:17" pos:end="173:52"><block_content pos:start="173:17" pos:end="173:52">

                <expr_stmt pos:start="173:17" pos:end="173:52"><expr pos:start="173:17" pos:end="173:51"><name pos:start="173:17" pos:end="173:32"><name pos:start="173:17" pos:end="173:22">vcodec</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:32">bit_rate</name></name> <operator pos:start="173:34" pos:end="173:34">=</operator> <name pos:start="173:36" pos:end="173:42">num_val</name> <operator pos:start="173:44" pos:end="173:44">*</operator> <literal type="number" pos:start="173:46" pos:end="173:51">1024.0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="175:13" pos:end="179:52">else if <condition pos:start="175:21" pos:end="177:50">(<expr pos:start="175:22" pos:end="177:49"><operator pos:start="175:22" pos:end="175:22">!</operator><call pos:start="175:23" pos:end="175:50"><name pos:start="175:23" pos:end="175:28">strcmp</name><argument_list pos:start="175:29" pos:end="175:50">(<argument pos:start="175:30" pos:end="175:32"><expr pos:start="175:30" pos:end="175:32"><name pos:start="175:30" pos:end="175:32">key</name></expr></argument>, <argument pos:start="175:35" pos:end="175:49"><expr pos:start="175:35" pos:end="175:49"><literal type="string" pos:start="175:35" pos:end="175:49">"audiodatarate"</literal></expr></argument>)</argument_list></call> <operator pos:start="175:52" pos:end="175:53">&amp;&amp;</operator> <name pos:start="175:55" pos:end="175:60">acodec</name> <operator pos:start="175:62" pos:end="175:63">&amp;&amp;</operator>

                     <literal type="number" pos:start="177:22" pos:end="177:22">0</literal> <operator pos:start="177:24" pos:end="177:25">&lt;=</operator> <operator pos:start="177:27" pos:end="177:27">(</operator><name pos:start="177:28" pos:end="177:30">int</name><operator pos:start="177:31" pos:end="177:31">)</operator><operator pos:start="177:32" pos:end="177:32">(</operator><name pos:start="177:33" pos:end="177:39">num_val</name> <operator pos:start="177:41" pos:end="177:41">*</operator> <literal type="number" pos:start="177:43" pos:end="177:48">1024.0</literal><operator pos:start="177:49" pos:end="177:49">)</operator></expr>)</condition><block type="pseudo" pos:start="179:17" pos:end="179:52"><block_content pos:start="179:17" pos:end="179:52">

                <expr_stmt pos:start="179:17" pos:end="179:52"><expr pos:start="179:17" pos:end="179:51"><name pos:start="179:17" pos:end="179:32"><name pos:start="179:17" pos:end="179:22">acodec</name><operator pos:start="179:23" pos:end="179:24">-&gt;</operator><name pos:start="179:25" pos:end="179:32">bit_rate</name></name> <operator pos:start="179:34" pos:end="179:34">=</operator> <name pos:start="179:36" pos:end="179:42">num_val</name> <operator pos:start="179:44" pos:end="179:44">*</operator> <literal type="number" pos:start="179:46" pos:end="179:51">1024.0</literal></expr>;</expr_stmt></block_content></block></if>

            <if type="elseif" pos:start="181:13" pos:end="191:13">else if <condition pos:start="181:21" pos:end="181:48">(<expr pos:start="181:22" pos:end="181:47"><operator pos:start="181:22" pos:end="181:22">!</operator><call pos:start="181:23" pos:end="181:47"><name pos:start="181:23" pos:end="181:28">strcmp</name><argument_list pos:start="181:29" pos:end="181:47">(<argument pos:start="181:30" pos:end="181:32"><expr pos:start="181:30" pos:end="181:32"><name pos:start="181:30" pos:end="181:32">key</name></expr></argument>, <argument pos:start="181:35" pos:end="181:46"><expr pos:start="181:35" pos:end="181:46"><literal type="string" pos:start="181:35" pos:end="181:46">"datastream"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="181:50" pos:end="191:13">{<block_content pos:start="183:17" pos:end="189:55">

                <decl_stmt pos:start="183:17" pos:end="183:67"><decl pos:start="183:17" pos:end="183:66"><type pos:start="183:17" pos:end="183:26"><name pos:start="183:17" pos:end="183:24">AVStream</name> <modifier pos:start="183:26" pos:end="183:26">*</modifier></type><name pos:start="183:27" pos:end="183:28">st</name> <init pos:start="183:30" pos:end="183:66">= <expr pos:start="183:32" pos:end="183:66"><call pos:start="183:32" pos:end="183:66"><name pos:start="183:32" pos:end="183:44">create_stream</name><argument_list pos:start="183:45" pos:end="183:66">(<argument pos:start="183:46" pos:end="183:46"><expr pos:start="183:46" pos:end="183:46"><name pos:start="183:46" pos:end="183:46">s</name></expr></argument>, <argument pos:start="183:49" pos:end="183:65"><expr pos:start="183:49" pos:end="183:65"><name pos:start="183:49" pos:end="183:65">AVMEDIA_TYPE_DATA</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="185:17" pos:end="187:43"><if pos:start="185:17" pos:end="187:43">if <condition pos:start="185:20" pos:end="185:24">(<expr pos:start="185:21" pos:end="185:23"><operator pos:start="185:21" pos:end="185:21">!</operator><name pos:start="185:22" pos:end="185:23">st</name></expr>)</condition><block type="pseudo" pos:start="187:21" pos:end="187:43"><block_content pos:start="187:21" pos:end="187:43">

                    <return pos:start="187:21" pos:end="187:43">return <expr pos:start="187:28" pos:end="187:42"><call pos:start="187:28" pos:end="187:42"><name pos:start="187:28" pos:end="187:34">AVERROR</name><argument_list pos:start="187:35" pos:end="187:42">(<argument pos:start="187:36" pos:end="187:41"><expr pos:start="187:36" pos:end="187:41"><name pos:start="187:36" pos:end="187:41">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <expr_stmt pos:start="189:17" pos:end="189:55"><expr pos:start="189:17" pos:end="189:54"><name pos:start="189:17" pos:end="189:35"><name pos:start="189:17" pos:end="189:18">st</name><operator pos:start="189:19" pos:end="189:20">-&gt;</operator><name pos:start="189:21" pos:end="189:25">codec</name><operator pos:start="189:26" pos:end="189:27">-&gt;</operator><name pos:start="189:28" pos:end="189:35">codec_id</name></name> <operator pos:start="189:37" pos:end="189:37">=</operator> <name pos:start="189:39" pos:end="189:54">AV_CODEC_ID_TEXT</name></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="191:15" pos:end="231:13">else if <condition pos:start="191:23" pos:end="191:43">(<expr pos:start="191:24" pos:end="191:42"><name pos:start="191:24" pos:end="191:42"><name pos:start="191:24" pos:end="191:26">flv</name><operator pos:start="191:27" pos:end="191:28">-&gt;</operator><name pos:start="191:29" pos:end="191:42">trust_metadata</name></name></expr>)</condition> <block pos:start="191:45" pos:end="231:13">{<block_content pos:start="193:17" pos:end="229:17">

                <if_stmt pos:start="193:17" pos:end="229:17"><if pos:start="193:17" pos:end="197:17">if <condition pos:start="193:20" pos:end="193:59">(<expr pos:start="193:21" pos:end="193:58"><operator pos:start="193:21" pos:end="193:21">!</operator><call pos:start="193:22" pos:end="193:48"><name pos:start="193:22" pos:end="193:27">strcmp</name><argument_list pos:start="193:28" pos:end="193:48">(<argument pos:start="193:29" pos:end="193:31"><expr pos:start="193:29" pos:end="193:31"><name pos:start="193:29" pos:end="193:31">key</name></expr></argument>, <argument pos:start="193:34" pos:end="193:47"><expr pos:start="193:34" pos:end="193:47"><literal type="string" pos:start="193:34" pos:end="193:47">"videocodecid"</literal></expr></argument>)</argument_list></call> <operator pos:start="193:50" pos:end="193:51">&amp;&amp;</operator> <name pos:start="193:53" pos:end="193:58">vcodec</name></expr>)</condition> <block pos:start="193:61" pos:end="197:17">{<block_content pos:start="195:21" pos:end="195:64">

                    <expr_stmt pos:start="195:21" pos:end="195:64"><expr pos:start="195:21" pos:end="195:63"><call pos:start="195:21" pos:end="195:63"><name pos:start="195:21" pos:end="195:39">flv_set_video_codec</name><argument_list pos:start="195:40" pos:end="195:63">(<argument pos:start="195:41" pos:end="195:41"><expr pos:start="195:41" pos:end="195:41"><name pos:start="195:41" pos:end="195:41">s</name></expr></argument>, <argument pos:start="195:44" pos:end="195:50"><expr pos:start="195:44" pos:end="195:50"><name pos:start="195:44" pos:end="195:50">vstream</name></expr></argument>, <argument pos:start="195:53" pos:end="195:59"><expr pos:start="195:53" pos:end="195:59"><name pos:start="195:53" pos:end="195:59">num_val</name></expr></argument>, <argument pos:start="195:62" pos:end="195:62"><expr pos:start="195:62" pos:end="195:62"><literal type="number" pos:start="195:62" pos:end="195:62">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="197:19" pos:end="203:17">else if <condition pos:start="197:27" pos:end="197:66">(<expr pos:start="197:28" pos:end="197:65"><operator pos:start="197:28" pos:end="197:28">!</operator><call pos:start="197:29" pos:end="197:55"><name pos:start="197:29" pos:end="197:34">strcmp</name><argument_list pos:start="197:35" pos:end="197:55">(<argument pos:start="197:36" pos:end="197:38"><expr pos:start="197:36" pos:end="197:38"><name pos:start="197:36" pos:end="197:38">key</name></expr></argument>, <argument pos:start="197:41" pos:end="197:54"><expr pos:start="197:41" pos:end="197:54"><literal type="string" pos:start="197:41" pos:end="197:54">"audiocodecid"</literal></expr></argument>)</argument_list></call> <operator pos:start="197:57" pos:end="197:58">&amp;&amp;</operator> <name pos:start="197:60" pos:end="197:65">acodec</name></expr>)</condition> <block pos:start="197:68" pos:end="203:17">{<block_content pos:start="199:21" pos:end="201:64">

                    <decl_stmt pos:start="199:21" pos:end="199:72"><decl pos:start="199:21" pos:end="199:71"><type pos:start="199:21" pos:end="199:23"><name pos:start="199:21" pos:end="199:23">int</name></type> <name pos:start="199:25" pos:end="199:26">id</name> <init pos:start="199:28" pos:end="199:71">= <expr pos:start="199:30" pos:end="199:71"><operator pos:start="199:30" pos:end="199:30">(</operator><operator pos:start="199:31" pos:end="199:31">(</operator><name pos:start="199:32" pos:end="199:34">int</name><operator pos:start="199:35" pos:end="199:35">)</operator><name pos:start="199:36" pos:end="199:42">num_val</name><operator pos:start="199:43" pos:end="199:43">)</operator> <operator pos:start="199:45" pos:end="199:46">&lt;&lt;</operator> <name pos:start="199:48" pos:end="199:71">FLV_AUDIO_CODECID_OFFSET</name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:64"><expr pos:start="201:21" pos:end="201:63"><call pos:start="201:21" pos:end="201:63"><name pos:start="201:21" pos:end="201:39">flv_set_audio_codec</name><argument_list pos:start="201:40" pos:end="201:63">(<argument pos:start="201:41" pos:end="201:41"><expr pos:start="201:41" pos:end="201:41"><name pos:start="201:41" pos:end="201:41">s</name></expr></argument>, <argument pos:start="201:44" pos:end="201:50"><expr pos:start="201:44" pos:end="201:50"><name pos:start="201:44" pos:end="201:50">astream</name></expr></argument>, <argument pos:start="201:53" pos:end="201:58"><expr pos:start="201:53" pos:end="201:58"><name pos:start="201:53" pos:end="201:58">acodec</name></expr></argument>, <argument pos:start="201:61" pos:end="201:62"><expr pos:start="201:61" pos:end="201:62"><name pos:start="201:61" pos:end="201:62">id</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="203:19" pos:end="207:17">else if <condition pos:start="203:27" pos:end="203:69">(<expr pos:start="203:28" pos:end="203:68"><operator pos:start="203:28" pos:end="203:28">!</operator><call pos:start="203:29" pos:end="203:58"><name pos:start="203:29" pos:end="203:34">strcmp</name><argument_list pos:start="203:35" pos:end="203:58">(<argument pos:start="203:36" pos:end="203:38"><expr pos:start="203:36" pos:end="203:38"><name pos:start="203:36" pos:end="203:38">key</name></expr></argument>, <argument pos:start="203:41" pos:end="203:57"><expr pos:start="203:41" pos:end="203:57"><literal type="string" pos:start="203:41" pos:end="203:57">"audiosamplerate"</literal></expr></argument>)</argument_list></call> <operator pos:start="203:60" pos:end="203:61">&amp;&amp;</operator> <name pos:start="203:63" pos:end="203:68">acodec</name></expr>)</condition> <block pos:start="203:71" pos:end="207:17">{<block_content pos:start="205:21" pos:end="205:50">

                    <expr_stmt pos:start="205:21" pos:end="205:50"><expr pos:start="205:21" pos:end="205:49"><name pos:start="205:21" pos:end="205:39"><name pos:start="205:21" pos:end="205:26">acodec</name><operator pos:start="205:27" pos:end="205:28">-&gt;</operator><name pos:start="205:29" pos:end="205:39">sample_rate</name></name> <operator pos:start="205:41" pos:end="205:41">=</operator> <name pos:start="205:43" pos:end="205:49">num_val</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="207:19" pos:end="211:17">else if <condition pos:start="207:27" pos:end="207:69">(<expr pos:start="207:28" pos:end="207:68"><operator pos:start="207:28" pos:end="207:28">!</operator><call pos:start="207:29" pos:end="207:58"><name pos:start="207:29" pos:end="207:34">strcmp</name><argument_list pos:start="207:35" pos:end="207:58">(<argument pos:start="207:36" pos:end="207:38"><expr pos:start="207:36" pos:end="207:38"><name pos:start="207:36" pos:end="207:38">key</name></expr></argument>, <argument pos:start="207:41" pos:end="207:57"><expr pos:start="207:41" pos:end="207:57"><literal type="string" pos:start="207:41" pos:end="207:57">"audiosamplesize"</literal></expr></argument>)</argument_list></call> <operator pos:start="207:60" pos:end="207:61">&amp;&amp;</operator> <name pos:start="207:63" pos:end="207:68">acodec</name></expr>)</condition> <block pos:start="207:71" pos:end="211:17">{<block_content pos:start="209:21" pos:end="209:60">

                    <expr_stmt pos:start="209:21" pos:end="209:60"><expr pos:start="209:21" pos:end="209:59"><name pos:start="209:21" pos:end="209:49"><name pos:start="209:21" pos:end="209:26">acodec</name><operator pos:start="209:27" pos:end="209:28">-&gt;</operator><name pos:start="209:29" pos:end="209:49">bits_per_coded_sample</name></name> <operator pos:start="209:51" pos:end="209:51">=</operator> <name pos:start="209:53" pos:end="209:59">num_val</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="211:19" pos:end="221:17">else if <condition pos:start="211:27" pos:end="211:60">(<expr pos:start="211:28" pos:end="211:59"><operator pos:start="211:28" pos:end="211:28">!</operator><call pos:start="211:29" pos:end="211:49"><name pos:start="211:29" pos:end="211:34">strcmp</name><argument_list pos:start="211:35" pos:end="211:49">(<argument pos:start="211:36" pos:end="211:38"><expr pos:start="211:36" pos:end="211:38"><name pos:start="211:36" pos:end="211:38">key</name></expr></argument>, <argument pos:start="211:41" pos:end="211:48"><expr pos:start="211:41" pos:end="211:48"><literal type="string" pos:start="211:41" pos:end="211:48">"stereo"</literal></expr></argument>)</argument_list></call> <operator pos:start="211:51" pos:end="211:52">&amp;&amp;</operator> <name pos:start="211:54" pos:end="211:59">acodec</name></expr>)</condition> <block pos:start="211:62" pos:end="221:17">{<block_content pos:start="213:21" pos:end="219:63">

                    <expr_stmt pos:start="213:21" pos:end="213:57"><expr pos:start="213:21" pos:end="213:56"><name pos:start="213:21" pos:end="213:36"><name pos:start="213:21" pos:end="213:26">acodec</name><operator pos:start="213:27" pos:end="213:28">-&gt;</operator><name pos:start="213:29" pos:end="213:36">channels</name></name>       <operator pos:start="213:44" pos:end="213:44">=</operator> <name pos:start="213:46" pos:end="213:52">num_val</name> <operator pos:start="213:54" pos:end="213:54">+</operator> <literal type="number" pos:start="213:56" pos:end="213:56">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="215:21" pos:end="219:63"><expr pos:start="215:21" pos:end="219:62"><name pos:start="215:21" pos:end="215:42"><name pos:start="215:21" pos:end="215:26">acodec</name><operator pos:start="215:27" pos:end="215:28">-&gt;</operator><name pos:start="215:29" pos:end="215:42">channel_layout</name></name> <operator pos:start="215:44" pos:end="215:44">=</operator> <ternary pos:start="215:46" pos:end="219:62"><condition pos:start="215:46" pos:end="215:68"><expr pos:start="215:46" pos:end="215:66"><name pos:start="215:46" pos:end="215:61"><name pos:start="215:46" pos:end="215:51">acodec</name><operator pos:start="215:52" pos:end="215:53">-&gt;</operator><name pos:start="215:54" pos:end="215:61">channels</name></name> <operator pos:start="215:63" pos:end="215:64">==</operator> <literal type="number" pos:start="215:66" pos:end="215:66">2</literal></expr> ?</condition><then pos:start="217:46" pos:end="217:64">

                                             <expr pos:start="217:46" pos:end="217:64"><name pos:start="217:46" pos:end="217:64">AV_CH_LAYOUT_STEREO</name></expr> </then><else pos:start="217:66" pos:end="219:62">:

                                             <expr pos:start="219:46" pos:end="219:62"><name pos:start="219:46" pos:end="219:62">AV_CH_LAYOUT_MONO</name></expr></else></ternary></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="221:19" pos:end="225:17">else if <condition pos:start="221:27" pos:end="221:59">(<expr pos:start="221:28" pos:end="221:58"><operator pos:start="221:28" pos:end="221:28">!</operator><call pos:start="221:29" pos:end="221:48"><name pos:start="221:29" pos:end="221:34">strcmp</name><argument_list pos:start="221:35" pos:end="221:48">(<argument pos:start="221:36" pos:end="221:38"><expr pos:start="221:36" pos:end="221:38"><name pos:start="221:36" pos:end="221:38">key</name></expr></argument>, <argument pos:start="221:41" pos:end="221:47"><expr pos:start="221:41" pos:end="221:47"><literal type="string" pos:start="221:41" pos:end="221:47">"width"</literal></expr></argument>)</argument_list></call> <operator pos:start="221:50" pos:end="221:51">&amp;&amp;</operator> <name pos:start="221:53" pos:end="221:58">vcodec</name></expr>)</condition> <block pos:start="221:61" pos:end="225:17">{<block_content pos:start="223:21" pos:end="223:44">

                    <expr_stmt pos:start="223:21" pos:end="223:44"><expr pos:start="223:21" pos:end="223:43"><name pos:start="223:21" pos:end="223:33"><name pos:start="223:21" pos:end="223:26">vcodec</name><operator pos:start="223:27" pos:end="223:28">-&gt;</operator><name pos:start="223:29" pos:end="223:33">width</name></name> <operator pos:start="223:35" pos:end="223:35">=</operator> <name pos:start="223:37" pos:end="223:43">num_val</name></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="225:19" pos:end="229:17">else if <condition pos:start="225:27" pos:end="225:60">(<expr pos:start="225:28" pos:end="225:59"><operator pos:start="225:28" pos:end="225:28">!</operator><call pos:start="225:29" pos:end="225:49"><name pos:start="225:29" pos:end="225:34">strcmp</name><argument_list pos:start="225:35" pos:end="225:49">(<argument pos:start="225:36" pos:end="225:38"><expr pos:start="225:36" pos:end="225:38"><name pos:start="225:36" pos:end="225:38">key</name></expr></argument>, <argument pos:start="225:41" pos:end="225:48"><expr pos:start="225:41" pos:end="225:48"><literal type="string" pos:start="225:41" pos:end="225:48">"height"</literal></expr></argument>)</argument_list></call> <operator pos:start="225:51" pos:end="225:52">&amp;&amp;</operator> <name pos:start="225:54" pos:end="225:59">vcodec</name></expr>)</condition> <block pos:start="225:62" pos:end="229:17">{<block_content pos:start="227:21" pos:end="227:45">

                    <expr_stmt pos:start="227:21" pos:end="227:45"><expr pos:start="227:21" pos:end="227:44"><name pos:start="227:21" pos:end="227:34"><name pos:start="227:21" pos:end="227:26">vcodec</name><operator pos:start="227:27" pos:end="227:28">-&gt;</operator><name pos:start="227:29" pos:end="227:34">height</name></name> <operator pos:start="227:36" pos:end="227:36">=</operator> <name pos:start="227:38" pos:end="227:44">num_val</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="237:9" pos:end="263:21"><if pos:start="237:9" pos:end="263:21">if <condition pos:start="237:12" pos:end="261:39">(<expr pos:start="237:13" pos:end="261:38"><operator pos:start="237:13" pos:end="237:13">!</operator><call pos:start="237:14" pos:end="237:36"><name pos:start="237:14" pos:end="237:19">strcmp</name><argument_list pos:start="237:20" pos:end="237:36">(<argument pos:start="237:21" pos:end="237:23"><expr pos:start="237:21" pos:end="237:23"><name pos:start="237:21" pos:end="237:23">key</name></expr></argument>, <argument pos:start="237:26" pos:end="237:35"><expr pos:start="237:26" pos:end="237:35"><literal type="string" pos:start="237:26" pos:end="237:35">"duration"</literal></expr></argument>)</argument_list></call>        <operator pos:start="237:45" pos:end="237:46">||</operator>

            <operator pos:start="239:13" pos:end="239:13">!</operator><call pos:start="239:14" pos:end="239:36"><name pos:start="239:14" pos:end="239:19">strcmp</name><argument_list pos:start="239:20" pos:end="239:36">(<argument pos:start="239:21" pos:end="239:23"><expr pos:start="239:21" pos:end="239:23"><name pos:start="239:21" pos:end="239:23">key</name></expr></argument>, <argument pos:start="239:26" pos:end="239:35"><expr pos:start="239:26" pos:end="239:35"><literal type="string" pos:start="239:26" pos:end="239:35">"filesize"</literal></expr></argument>)</argument_list></call>        <operator pos:start="239:45" pos:end="239:46">||</operator>

            <operator pos:start="241:13" pos:end="241:13">!</operator><call pos:start="241:14" pos:end="241:33"><name pos:start="241:14" pos:end="241:19">strcmp</name><argument_list pos:start="241:20" pos:end="241:33">(<argument pos:start="241:21" pos:end="241:23"><expr pos:start="241:21" pos:end="241:23"><name pos:start="241:21" pos:end="241:23">key</name></expr></argument>, <argument pos:start="241:26" pos:end="241:32"><expr pos:start="241:26" pos:end="241:32"><literal type="string" pos:start="241:26" pos:end="241:32">"width"</literal></expr></argument>)</argument_list></call>           <operator pos:start="241:45" pos:end="241:46">||</operator>

            <operator pos:start="243:13" pos:end="243:13">!</operator><call pos:start="243:14" pos:end="243:34"><name pos:start="243:14" pos:end="243:19">strcmp</name><argument_list pos:start="243:20" pos:end="243:34">(<argument pos:start="243:21" pos:end="243:23"><expr pos:start="243:21" pos:end="243:23"><name pos:start="243:21" pos:end="243:23">key</name></expr></argument>, <argument pos:start="243:26" pos:end="243:33"><expr pos:start="243:26" pos:end="243:33"><literal type="string" pos:start="243:26" pos:end="243:33">"height"</literal></expr></argument>)</argument_list></call>          <operator pos:start="243:45" pos:end="243:46">||</operator>

            <operator pos:start="245:13" pos:end="245:13">!</operator><call pos:start="245:14" pos:end="245:41"><name pos:start="245:14" pos:end="245:19">strcmp</name><argument_list pos:start="245:20" pos:end="245:41">(<argument pos:start="245:21" pos:end="245:23"><expr pos:start="245:21" pos:end="245:23"><name pos:start="245:21" pos:end="245:23">key</name></expr></argument>, <argument pos:start="245:26" pos:end="245:40"><expr pos:start="245:26" pos:end="245:40"><literal type="string" pos:start="245:26" pos:end="245:40">"videodatarate"</literal></expr></argument>)</argument_list></call>   <operator pos:start="245:45" pos:end="245:46">||</operator>

            <operator pos:start="247:13" pos:end="247:13">!</operator><call pos:start="247:14" pos:end="247:37"><name pos:start="247:14" pos:end="247:19">strcmp</name><argument_list pos:start="247:20" pos:end="247:37">(<argument pos:start="247:21" pos:end="247:23"><expr pos:start="247:21" pos:end="247:23"><name pos:start="247:21" pos:end="247:23">key</name></expr></argument>, <argument pos:start="247:26" pos:end="247:36"><expr pos:start="247:26" pos:end="247:36"><literal type="string" pos:start="247:26" pos:end="247:36">"framerate"</literal></expr></argument>)</argument_list></call>       <operator pos:start="247:45" pos:end="247:46">||</operator>

            <operator pos:start="249:13" pos:end="249:13">!</operator><call pos:start="249:14" pos:end="249:40"><name pos:start="249:14" pos:end="249:19">strcmp</name><argument_list pos:start="249:20" pos:end="249:40">(<argument pos:start="249:21" pos:end="249:23"><expr pos:start="249:21" pos:end="249:23"><name pos:start="249:21" pos:end="249:23">key</name></expr></argument>, <argument pos:start="249:26" pos:end="249:39"><expr pos:start="249:26" pos:end="249:39"><literal type="string" pos:start="249:26" pos:end="249:39">"videocodecid"</literal></expr></argument>)</argument_list></call>    <operator pos:start="249:45" pos:end="249:46">||</operator>

            <operator pos:start="251:13" pos:end="251:13">!</operator><call pos:start="251:14" pos:end="251:41"><name pos:start="251:14" pos:end="251:19">strcmp</name><argument_list pos:start="251:20" pos:end="251:41">(<argument pos:start="251:21" pos:end="251:23"><expr pos:start="251:21" pos:end="251:23"><name pos:start="251:21" pos:end="251:23">key</name></expr></argument>, <argument pos:start="251:26" pos:end="251:40"><expr pos:start="251:26" pos:end="251:40"><literal type="string" pos:start="251:26" pos:end="251:40">"audiodatarate"</literal></expr></argument>)</argument_list></call>   <operator pos:start="251:45" pos:end="251:46">||</operator>

            <operator pos:start="253:13" pos:end="253:13">!</operator><call pos:start="253:14" pos:end="253:43"><name pos:start="253:14" pos:end="253:19">strcmp</name><argument_list pos:start="253:20" pos:end="253:43">(<argument pos:start="253:21" pos:end="253:23"><expr pos:start="253:21" pos:end="253:23"><name pos:start="253:21" pos:end="253:23">key</name></expr></argument>, <argument pos:start="253:26" pos:end="253:42"><expr pos:start="253:26" pos:end="253:42"><literal type="string" pos:start="253:26" pos:end="253:42">"audiosamplerate"</literal></expr></argument>)</argument_list></call> <operator pos:start="253:45" pos:end="253:46">||</operator>

            <operator pos:start="255:13" pos:end="255:13">!</operator><call pos:start="255:14" pos:end="255:43"><name pos:start="255:14" pos:end="255:19">strcmp</name><argument_list pos:start="255:20" pos:end="255:43">(<argument pos:start="255:21" pos:end="255:23"><expr pos:start="255:21" pos:end="255:23"><name pos:start="255:21" pos:end="255:23">key</name></expr></argument>, <argument pos:start="255:26" pos:end="255:42"><expr pos:start="255:26" pos:end="255:42"><literal type="string" pos:start="255:26" pos:end="255:42">"audiosamplesize"</literal></expr></argument>)</argument_list></call> <operator pos:start="255:45" pos:end="255:46">||</operator>

            <operator pos:start="257:13" pos:end="257:13">!</operator><call pos:start="257:14" pos:end="257:34"><name pos:start="257:14" pos:end="257:19">strcmp</name><argument_list pos:start="257:20" pos:end="257:34">(<argument pos:start="257:21" pos:end="257:23"><expr pos:start="257:21" pos:end="257:23"><name pos:start="257:21" pos:end="257:23">key</name></expr></argument>, <argument pos:start="257:26" pos:end="257:33"><expr pos:start="257:26" pos:end="257:33"><literal type="string" pos:start="257:26" pos:end="257:33">"stereo"</literal></expr></argument>)</argument_list></call>          <operator pos:start="257:45" pos:end="257:46">||</operator>

            <operator pos:start="259:13" pos:end="259:13">!</operator><call pos:start="259:14" pos:end="259:40"><name pos:start="259:14" pos:end="259:19">strcmp</name><argument_list pos:start="259:20" pos:end="259:40">(<argument pos:start="259:21" pos:end="259:23"><expr pos:start="259:21" pos:end="259:23"><name pos:start="259:21" pos:end="259:23">key</name></expr></argument>, <argument pos:start="259:26" pos:end="259:39"><expr pos:start="259:26" pos:end="259:39"><literal type="string" pos:start="259:26" pos:end="259:39">"audiocodecid"</literal></expr></argument>)</argument_list></call>    <operator pos:start="259:45" pos:end="259:46">||</operator>

            <operator pos:start="261:13" pos:end="261:13">!</operator><call pos:start="261:14" pos:end="261:38"><name pos:start="261:14" pos:end="261:19">strcmp</name><argument_list pos:start="261:20" pos:end="261:38">(<argument pos:start="261:21" pos:end="261:23"><expr pos:start="261:21" pos:end="261:23"><name pos:start="261:21" pos:end="261:23">key</name></expr></argument>, <argument pos:start="261:26" pos:end="261:37"><expr pos:start="261:26" pos:end="261:37"><literal type="string" pos:start="261:26" pos:end="261:37">"datastream"</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="263:13" pos:end="263:21"><block_content pos:start="263:13" pos:end="263:21">

            <return pos:start="263:13" pos:end="263:21">return <expr pos:start="263:20" pos:end="263:20"><literal type="number" pos:start="263:20" pos:end="263:20">0</literal></expr>;</return></block_content></block></if></if_stmt>



        <if_stmt pos:start="267:9" pos:end="283:55"><if pos:start="267:9" pos:end="275:9">if <condition pos:start="267:12" pos:end="267:43">(<expr pos:start="267:13" pos:end="267:42"><name pos:start="267:13" pos:end="267:20">amf_type</name> <operator pos:start="267:22" pos:end="267:23">==</operator> <name pos:start="267:25" pos:end="267:42">AMF_DATA_TYPE_BOOL</name></expr>)</condition> <block pos:start="267:45" pos:end="275:9">{<block_content pos:start="269:13" pos:end="273:55">

            <expr_stmt pos:start="269:13" pos:end="271:40"><expr pos:start="269:13" pos:end="271:39"><call pos:start="269:13" pos:end="271:39"><name pos:start="269:13" pos:end="269:22">av_strlcpy</name><argument_list pos:start="269:23" pos:end="271:39">(<argument pos:start="269:24" pos:end="269:30"><expr pos:start="269:24" pos:end="269:30"><name pos:start="269:24" pos:end="269:30">str_val</name></expr></argument>, <argument pos:start="269:33" pos:end="269:62"><expr pos:start="269:33" pos:end="269:62"><ternary pos:start="269:33" pos:end="269:62"><condition pos:start="269:33" pos:end="269:45"><expr pos:start="269:33" pos:end="269:43"><name pos:start="269:33" pos:end="269:39">num_val</name> <operator pos:start="269:41" pos:end="269:41">&gt;</operator> <literal type="number" pos:start="269:43" pos:end="269:43">0</literal></expr> ?</condition><then pos:start="269:47" pos:end="269:52"> <expr pos:start="269:47" pos:end="269:52"><literal type="string" pos:start="269:47" pos:end="269:52">"true"</literal></expr> </then><else pos:start="269:54" pos:end="269:62">: <expr pos:start="269:56" pos:end="269:62"><literal type="string" pos:start="269:56" pos:end="269:62">"false"</literal></expr></else></ternary></expr></argument>,

                       <argument pos:start="271:24" pos:end="271:38"><expr pos:start="271:24" pos:end="271:38"><sizeof pos:start="271:24" pos:end="271:38">sizeof<argument_list pos:start="271:30" pos:end="271:38">(<argument pos:start="271:31" pos:end="271:37"><expr pos:start="271:31" pos:end="271:37"><name pos:start="271:31" pos:end="271:37">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="273:13" pos:end="273:55"><expr pos:start="273:13" pos:end="273:54"><call pos:start="273:13" pos:end="273:54"><name pos:start="273:13" pos:end="273:23">av_dict_set</name><argument_list pos:start="273:24" pos:end="273:54">(<argument pos:start="273:25" pos:end="273:36"><expr pos:start="273:25" pos:end="273:36"><operator pos:start="273:25" pos:end="273:25">&amp;</operator><name pos:start="273:26" pos:end="273:36"><name pos:start="273:26" pos:end="273:26">s</name><operator pos:start="273:27" pos:end="273:28">-&gt;</operator><name pos:start="273:29" pos:end="273:36">metadata</name></name></expr></argument>, <argument pos:start="273:39" pos:end="273:41"><expr pos:start="273:39" pos:end="273:41"><name pos:start="273:39" pos:end="273:41">key</name></expr></argument>, <argument pos:start="273:44" pos:end="273:50"><expr pos:start="273:44" pos:end="273:50"><name pos:start="273:44" pos:end="273:50">str_val</name></expr></argument>, <argument pos:start="273:53" pos:end="273:53"><expr pos:start="273:53" pos:end="273:53"><literal type="number" pos:start="273:53" pos:end="273:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="275:11" pos:end="281:9">else if <condition pos:start="275:19" pos:end="275:52">(<expr pos:start="275:20" pos:end="275:51"><name pos:start="275:20" pos:end="275:27">amf_type</name> <operator pos:start="275:29" pos:end="275:30">==</operator> <name pos:start="275:32" pos:end="275:51">AMF_DATA_TYPE_NUMBER</name></expr>)</condition> <block pos:start="275:54" pos:end="281:9">{<block_content pos:start="277:13" pos:end="279:55">

            <expr_stmt pos:start="277:13" pos:end="277:63"><expr pos:start="277:13" pos:end="277:62"><call pos:start="277:13" pos:end="277:62"><name pos:start="277:13" pos:end="277:20">snprintf</name><argument_list pos:start="277:21" pos:end="277:62">(<argument pos:start="277:22" pos:end="277:28"><expr pos:start="277:22" pos:end="277:28"><name pos:start="277:22" pos:end="277:28">str_val</name></expr></argument>, <argument pos:start="277:31" pos:end="277:45"><expr pos:start="277:31" pos:end="277:45"><sizeof pos:start="277:31" pos:end="277:45">sizeof<argument_list pos:start="277:37" pos:end="277:45">(<argument pos:start="277:38" pos:end="277:44"><expr pos:start="277:38" pos:end="277:44"><name pos:start="277:38" pos:end="277:44">str_val</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="277:48" pos:end="277:52"><expr pos:start="277:48" pos:end="277:52"><literal type="string" pos:start="277:48" pos:end="277:52">"%.f"</literal></expr></argument>, <argument pos:start="277:55" pos:end="277:61"><expr pos:start="277:55" pos:end="277:61"><name pos:start="277:55" pos:end="277:61">num_val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="279:13" pos:end="279:55"><expr pos:start="279:13" pos:end="279:54"><call pos:start="279:13" pos:end="279:54"><name pos:start="279:13" pos:end="279:23">av_dict_set</name><argument_list pos:start="279:24" pos:end="279:54">(<argument pos:start="279:25" pos:end="279:36"><expr pos:start="279:25" pos:end="279:36"><operator pos:start="279:25" pos:end="279:25">&amp;</operator><name pos:start="279:26" pos:end="279:36"><name pos:start="279:26" pos:end="279:26">s</name><operator pos:start="279:27" pos:end="279:28">-&gt;</operator><name pos:start="279:29" pos:end="279:36">metadata</name></name></expr></argument>, <argument pos:start="279:39" pos:end="279:41"><expr pos:start="279:39" pos:end="279:41"><name pos:start="279:39" pos:end="279:41">key</name></expr></argument>, <argument pos:start="279:44" pos:end="279:50"><expr pos:start="279:44" pos:end="279:50"><name pos:start="279:44" pos:end="279:50">str_val</name></expr></argument>, <argument pos:start="279:53" pos:end="279:53"><expr pos:start="279:53" pos:end="279:53"><literal type="number" pos:start="279:53" pos:end="279:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="281:11" pos:end="283:55">else if <condition pos:start="281:19" pos:end="281:52">(<expr pos:start="281:20" pos:end="281:51"><name pos:start="281:20" pos:end="281:27">amf_type</name> <operator pos:start="281:29" pos:end="281:30">==</operator> <name pos:start="281:32" pos:end="281:51">AMF_DATA_TYPE_STRING</name></expr>)</condition><block type="pseudo" pos:start="283:13" pos:end="283:55"><block_content pos:start="283:13" pos:end="283:55">

            <expr_stmt pos:start="283:13" pos:end="283:55"><expr pos:start="283:13" pos:end="283:54"><call pos:start="283:13" pos:end="283:54"><name pos:start="283:13" pos:end="283:23">av_dict_set</name><argument_list pos:start="283:24" pos:end="283:54">(<argument pos:start="283:25" pos:end="283:36"><expr pos:start="283:25" pos:end="283:36"><operator pos:start="283:25" pos:end="283:25">&amp;</operator><name pos:start="283:26" pos:end="283:36"><name pos:start="283:26" pos:end="283:26">s</name><operator pos:start="283:27" pos:end="283:28">-&gt;</operator><name pos:start="283:29" pos:end="283:36">metadata</name></name></expr></argument>, <argument pos:start="283:39" pos:end="283:41"><expr pos:start="283:39" pos:end="283:41"><name pos:start="283:39" pos:end="283:41">key</name></expr></argument>, <argument pos:start="283:44" pos:end="283:50"><expr pos:start="283:44" pos:end="283:50"><name pos:start="283:44" pos:end="283:50">str_val</name></expr></argument>, <argument pos:start="283:53" pos:end="283:53"><expr pos:start="283:53" pos:end="283:53"><literal type="number" pos:start="283:53" pos:end="283:53">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="289:5" pos:end="289:13">return <expr pos:start="289:12" pos:end="289:12"><literal type="number" pos:start="289:12" pos:end="289:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
