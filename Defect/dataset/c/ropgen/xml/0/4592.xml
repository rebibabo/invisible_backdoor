<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4592.c" pos:tabs="8"><function pos:start="1:1" pos:end="1017:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:32">ff_hevc_hls_residual_coding</name><parameter_list pos:start="1:33" pos:end="5:42">(<parameter pos:start="1:34" pos:end="1:47"><decl pos:start="1:34" pos:end="1:47"><type pos:start="1:34" pos:end="1:47"><name pos:start="1:34" pos:end="1:44">HEVCContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:47">s</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:55"><decl pos:start="1:50" pos:end="1:55"><type pos:start="1:50" pos:end="1:55"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:55">x0</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:63"><decl pos:start="1:58" pos:end="1:63"><type pos:start="1:58" pos:end="1:63"><name pos:start="1:58" pos:end="1:60">int</name></type> <name pos:start="1:62" pos:end="1:63">y0</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:51"><decl pos:start="3:33" pos:end="3:51"><type pos:start="3:33" pos:end="3:51"><name pos:start="3:33" pos:end="3:35">int</name></type> <name pos:start="3:37" pos:end="3:51">log2_trafo_size</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:75"><decl pos:start="3:54" pos:end="3:75"><type pos:start="3:54" pos:end="3:75"><name pos:start="3:54" pos:end="3:66"><name pos:start="3:54" pos:end="3:57">enum</name> <name pos:start="3:59" pos:end="3:66">ScanType</name></name></type> <name pos:start="3:68" pos:end="3:75">scan_idx</name></decl></parameter>,

                                <parameter pos:start="5:33" pos:end="5:41"><decl pos:start="5:33" pos:end="5:41"><type pos:start="5:33" pos:end="5:41"><name pos:start="5:33" pos:end="5:35">int</name></type> <name pos:start="5:37" pos:end="5:41">c_idx</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="1017:1">{<block_content pos:start="19:5" pos:end="1015:69">

<cpp:define pos:start="9:1" pos:end="17:15">#<cpp:directive pos:start="9:2" pos:end="9:7">define</cpp:directive> <cpp:macro pos:start="9:9" pos:end="9:28"><name pos:start="9:9" pos:end="9:17">GET_COORD</name><parameter_list pos:start="9:18" pos:end="9:28">(<parameter pos:start="9:19" pos:end="9:24"><type pos:start="9:19" pos:end="9:24"><name pos:start="9:19" pos:end="9:24">offset</name></type></parameter>, <parameter pos:start="9:27" pos:end="9:27"><type pos:start="9:27" pos:end="9:27"><name pos:start="9:27" pos:end="9:27">n</name></type></parameter>)</parameter_list></cpp:macro>                                    \

    <cpp:value pos:start="11:5" pos:end="17:15">do {                                                        \

        x_c = (x_cg &lt;&lt; 2) + scan_x_off[n];                      \

        y_c = (y_cg &lt;&lt; 2) + scan_y_off[n];                      \

    } while (0)</cpp:value></cpp:define>

    <decl_stmt pos:start="19:5" pos:end="19:37"><decl pos:start="19:5" pos:end="19:36"><type pos:start="19:5" pos:end="19:22"><name pos:start="19:5" pos:end="19:20">HEVCLocalContext</name> <modifier pos:start="19:22" pos:end="19:22">*</modifier></type><name pos:start="19:23" pos:end="19:24">lc</name> <init pos:start="19:26" pos:end="19:36">= <expr pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:36"><name pos:start="19:28" pos:end="19:28">s</name><operator pos:start="19:29" pos:end="19:30">-&gt;</operator><name pos:start="19:31" pos:end="19:36">HEVClc</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:32"><decl pos:start="21:5" pos:end="21:31"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:27">transform_skip_flag</name> <init pos:start="21:29" pos:end="21:31">= <expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">0</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="25:5" pos:end="25:59"><decl pos:start="25:5" pos:end="25:32"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:32">last_significant_coeff_x</name></decl>, <decl pos:start="25:35" pos:end="25:58"><type ref="prev" pos:start="25:5" pos:end="25:7"/><name pos:start="25:35" pos:end="25:58">last_significant_coeff_y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:22"><decl pos:start="27:5" pos:end="27:21"><type pos:start="27:5" pos:end="27:7"><name pos:start="27:5" pos:end="27:7">int</name></type> <name pos:start="27:9" pos:end="27:21">last_scan_pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:14"><decl pos:start="29:5" pos:end="29:13"><type pos:start="29:5" pos:end="29:7"><name pos:start="29:5" pos:end="29:7">int</name></type> <name pos:start="29:9" pos:end="29:13">n_end</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:22"><decl pos:start="31:5" pos:end="31:21"><type pos:start="31:5" pos:end="31:7"><name pos:start="31:5" pos:end="31:7">int</name></type> <name pos:start="31:9" pos:end="31:17">num_coeff</name> <init pos:start="31:19" pos:end="31:21">= <expr pos:start="31:21" pos:end="31:21"><literal type="number" pos:start="31:21" pos:end="31:21">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:25"><decl pos:start="33:5" pos:end="33:24"><type pos:start="33:5" pos:end="33:7"><name pos:start="33:5" pos:end="33:7">int</name></type> <name pos:start="33:9" pos:end="33:20">greater1_ctx</name> <init pos:start="33:22" pos:end="33:24">= <expr pos:start="33:24" pos:end="33:24"><literal type="number" pos:start="33:24" pos:end="33:24">1</literal></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="37:5" pos:end="37:24"><decl pos:start="37:5" pos:end="37:23"><type pos:start="37:5" pos:end="37:7"><name pos:start="37:5" pos:end="37:7">int</name></type> <name pos:start="37:9" pos:end="37:23">num_last_subset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:37"><decl pos:start="39:5" pos:end="39:21"><type pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:7">int</name></type> <name pos:start="39:9" pos:end="39:21">x_cg_last_sig</name></decl>, <decl pos:start="39:24" pos:end="39:36"><type ref="prev" pos:start="39:5" pos:end="39:7"/><name pos:start="39:24" pos:end="39:36">y_cg_last_sig</name></decl>;</decl_stmt>



    <decl_stmt pos:start="43:5" pos:end="43:67"><decl pos:start="43:5" pos:end="43:28"><type pos:start="43:5" pos:end="43:19"><specifier pos:start="43:5" pos:end="43:9">const</specifier> <name pos:start="43:11" pos:end="43:17">uint8_t</name> <modifier pos:start="43:19" pos:end="43:19">*</modifier></type><name pos:start="43:20" pos:end="43:28">scan_x_cg</name></decl>, <decl pos:start="43:31" pos:end="43:40"><type ref="prev" pos:start="43:5" pos:end="43:19"><modifier pos:start="43:31" pos:end="43:31">*</modifier></type><name pos:start="43:32" pos:end="43:40">scan_y_cg</name></decl>, <decl pos:start="43:43" pos:end="43:53"><type ref="prev" pos:start="43:5" pos:end="43:19"><modifier pos:start="43:43" pos:end="43:43">*</modifier></type><name pos:start="43:44" pos:end="43:53">scan_x_off</name></decl>, <decl pos:start="43:56" pos:end="43:66"><type ref="prev" pos:start="43:5" pos:end="43:19"><modifier pos:start="43:56" pos:end="43:56">*</modifier></type><name pos:start="43:57" pos:end="43:66">scan_y_off</name></decl>;</decl_stmt>



    <decl_stmt pos:start="47:5" pos:end="47:49"><decl pos:start="47:5" pos:end="47:48"><type pos:start="47:5" pos:end="47:13"><name pos:start="47:5" pos:end="47:13">ptrdiff_t</name></type> <name pos:start="47:15" pos:end="47:20">stride</name> <init pos:start="47:22" pos:end="47:48">= <expr pos:start="47:24" pos:end="47:48"><name pos:start="47:24" pos:end="47:48"><name pos:start="47:24" pos:end="47:24">s</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:31">frame</name><operator pos:start="47:32" pos:end="47:33">-&gt;</operator><name pos:start="47:34" pos:end="47:41">linesize</name><index pos:start="47:42" pos:end="47:48">[<expr pos:start="47:43" pos:end="47:47"><name pos:start="47:43" pos:end="47:47">c_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:39"><decl pos:start="49:5" pos:end="49:38"><type pos:start="49:5" pos:end="49:7"><name pos:start="49:5" pos:end="49:7">int</name></type> <name pos:start="49:9" pos:end="49:14">hshift</name> <init pos:start="49:16" pos:end="49:38">= <expr pos:start="49:18" pos:end="49:38"><name pos:start="49:18" pos:end="49:38"><name pos:start="49:18" pos:end="49:18">s</name><operator pos:start="49:19" pos:end="49:20">-&gt;</operator><name pos:start="49:21" pos:end="49:23">sps</name><operator pos:start="49:24" pos:end="49:25">-&gt;</operator><name pos:start="49:26" pos:end="49:31">hshift</name><index pos:start="49:32" pos:end="49:38">[<expr pos:start="49:33" pos:end="49:37"><name pos:start="49:33" pos:end="49:37">c_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:39"><decl pos:start="51:5" pos:end="51:38"><type pos:start="51:5" pos:end="51:7"><name pos:start="51:5" pos:end="51:7">int</name></type> <name pos:start="51:9" pos:end="51:14">vshift</name> <init pos:start="51:16" pos:end="51:38">= <expr pos:start="51:18" pos:end="51:38"><name pos:start="51:18" pos:end="51:38"><name pos:start="51:18" pos:end="51:18">s</name><operator pos:start="51:19" pos:end="51:20">-&gt;</operator><name pos:start="51:21" pos:end="51:23">sps</name><operator pos:start="51:24" pos:end="51:25">-&gt;</operator><name pos:start="51:26" pos:end="51:31">vshift</name><index pos:start="51:32" pos:end="51:38">[<expr pos:start="51:33" pos:end="51:37"><name pos:start="51:33" pos:end="51:37">c_idx</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="53:5" pos:end="55:83"><decl pos:start="53:5" pos:end="55:82"><type pos:start="53:5" pos:end="53:13"><name pos:start="53:5" pos:end="53:11">uint8_t</name> <modifier pos:start="53:13" pos:end="53:13">*</modifier></type><name pos:start="53:14" pos:end="53:16">dst</name> <init pos:start="53:18" pos:end="55:82">= <expr pos:start="53:20" pos:end="55:82"><operator pos:start="53:20" pos:end="53:20">&amp;</operator><name pos:start="53:21" pos:end="55:82"><name pos:start="53:21" pos:end="53:21">s</name><operator pos:start="53:22" pos:end="53:23">-&gt;</operator><name pos:start="53:24" pos:end="53:28">frame</name><operator pos:start="53:29" pos:end="53:30">-&gt;</operator><name pos:start="53:31" pos:end="53:34">data</name><index pos:start="53:35" pos:end="53:41">[<expr pos:start="53:36" pos:end="53:40"><name pos:start="53:36" pos:end="53:40">c_idx</name></expr>]</index><index pos:start="53:42" pos:end="55:82">[<expr pos:start="53:43" pos:end="55:81"><operator pos:start="53:43" pos:end="53:43">(</operator><name pos:start="53:44" pos:end="53:45">y0</name> <operator pos:start="53:47" pos:end="53:48">&gt;&gt;</operator> <name pos:start="53:50" pos:end="53:55">vshift</name><operator pos:start="53:56" pos:end="53:56">)</operator> <operator pos:start="53:58" pos:end="53:58">*</operator> <name pos:start="53:60" pos:end="53:65">stride</name> <operator pos:start="53:67" pos:end="53:67">+</operator>

                                          <operator pos:start="55:43" pos:end="55:43">(</operator><operator pos:start="55:44" pos:end="55:44">(</operator><name pos:start="55:45" pos:end="55:46">x0</name> <operator pos:start="55:48" pos:end="55:49">&gt;&gt;</operator> <name pos:start="55:51" pos:end="55:56">hshift</name><operator pos:start="55:57" pos:end="55:57">)</operator> <operator pos:start="55:59" pos:end="55:60">&lt;&lt;</operator> <name pos:start="55:62" pos:end="55:80"><name pos:start="55:62" pos:end="55:62">s</name><operator pos:start="55:63" pos:end="55:64">-&gt;</operator><name pos:start="55:65" pos:end="55:67">sps</name><operator pos:start="55:68" pos:end="55:69">-&gt;</operator><name pos:start="55:70" pos:end="55:80">pixel_shift</name></name><operator pos:start="55:81" pos:end="55:81">)</operator></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="57:5" pos:end="57:47"><decl pos:start="57:5" pos:end="57:46"><type pos:start="57:5" pos:end="57:13"><name pos:start="57:5" pos:end="57:11">int16_t</name> <modifier pos:start="57:13" pos:end="57:13">*</modifier></type><name pos:start="57:14" pos:end="57:19">coeffs</name> <init pos:start="57:21" pos:end="57:46">= <expr pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:46"><name pos:start="57:23" pos:end="57:24">lc</name><operator pos:start="57:25" pos:end="57:26">-&gt;</operator><name pos:start="57:27" pos:end="57:28">tu</name><operator pos:start="57:29" pos:end="57:29">.</operator><name pos:start="57:30" pos:end="57:35">coeffs</name><index pos:start="57:36" pos:end="57:46">[<expr pos:start="57:37" pos:end="57:45"><name pos:start="57:37" pos:end="57:41">c_idx</name> <operator pos:start="57:43" pos:end="57:43">&gt;</operator> <literal type="number" pos:start="57:45" pos:end="57:45">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="59:5" pos:end="59:55"><decl pos:start="59:5" pos:end="59:54"><type pos:start="59:5" pos:end="59:11"><name pos:start="59:5" pos:end="59:11">uint8_t</name></type> <name pos:start="59:13" pos:end="59:46"><name pos:start="59:13" pos:end="59:40">significant_coeff_group_flag</name><index pos:start="59:41" pos:end="59:43">[<expr pos:start="59:42" pos:end="59:42"><literal type="number" pos:start="59:42" pos:end="59:42">8</literal></expr>]</index><index pos:start="59:44" pos:end="59:46">[<expr pos:start="59:45" pos:end="59:45"><literal type="number" pos:start="59:45" pos:end="59:45">8</literal></expr>]</index></name> <init pos:start="59:48" pos:end="59:54">= <expr pos:start="59:50" pos:end="59:54"><block pos:start="59:50" pos:end="59:54">{<expr pos:start="59:51" pos:end="59:53"><block pos:start="59:51" pos:end="59:53">{<expr pos:start="59:52" pos:end="59:52"><literal type="number" pos:start="59:52" pos:end="59:52">0</literal></expr>}</block></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="61:5" pos:end="61:32"><decl pos:start="61:5" pos:end="61:31"><type pos:start="61:5" pos:end="61:7"><name pos:start="61:5" pos:end="61:7">int</name></type> <name pos:start="61:9" pos:end="61:27">explicit_rdpcm_flag</name> <init pos:start="61:29" pos:end="61:31">= <expr pos:start="61:31" pos:end="61:31"><literal type="number" pos:start="61:31" pos:end="61:31">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="63:5" pos:end="63:32"><decl pos:start="63:5" pos:end="63:31"><type pos:start="63:5" pos:end="63:7"><name pos:start="63:5" pos:end="63:7">int</name></type> <name pos:start="63:9" pos:end="63:31">explicit_rdpcm_dir_flag</name></decl>;</decl_stmt>



    <decl_stmt pos:start="67:5" pos:end="67:42"><decl pos:start="67:5" pos:end="67:41"><type pos:start="67:5" pos:end="67:7"><name pos:start="67:5" pos:end="67:7">int</name></type> <name pos:start="67:9" pos:end="67:18">trafo_size</name> <init pos:start="67:20" pos:end="67:41">= <expr pos:start="67:22" pos:end="67:41"><literal type="number" pos:start="67:22" pos:end="67:22">1</literal> <operator pos:start="67:24" pos:end="67:25">&lt;&lt;</operator> <name pos:start="67:27" pos:end="67:41">log2_trafo_size</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="69:5" pos:end="69:10"><decl pos:start="69:5" pos:end="69:9"><type pos:start="69:5" pos:end="69:7"><name pos:start="69:5" pos:end="69:7">int</name></type> <name pos:start="69:9" pos:end="69:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="71:5" pos:end="71:35"><decl pos:start="71:5" pos:end="71:10"><type pos:start="71:5" pos:end="71:7"><name pos:start="71:5" pos:end="71:7">int</name></type> <name pos:start="71:9" pos:end="71:10">qp</name></decl>,<decl pos:start="71:12" pos:end="71:16"><type ref="prev" pos:start="71:5" pos:end="71:7"/><name pos:start="71:12" pos:end="71:16">shift</name></decl>,<decl pos:start="71:18" pos:end="71:20"><type ref="prev" pos:start="71:5" pos:end="71:7"/><name pos:start="71:18" pos:end="71:20">add</name></decl>,<decl pos:start="71:22" pos:end="71:26"><type ref="prev" pos:start="71:5" pos:end="71:7"/><name pos:start="71:22" pos:end="71:26">scale</name></decl>,<decl pos:start="71:28" pos:end="71:34"><type ref="prev" pos:start="71:5" pos:end="71:7"/><name pos:start="71:28" pos:end="71:34">scale_m</name></decl>;</decl_stmt>

    <decl_stmt pos:start="73:5" pos:end="73:61"><decl pos:start="73:5" pos:end="73:60"><type pos:start="73:5" pos:end="73:17"><specifier pos:start="73:5" pos:end="73:9">const</specifier> <name pos:start="73:11" pos:end="73:17">uint8_t</name></type> <name pos:start="73:19" pos:end="73:31"><name pos:start="73:19" pos:end="73:29">level_scale</name><index pos:start="73:30" pos:end="73:31">[]</index></name> <init pos:start="73:33" pos:end="73:60">= <expr pos:start="73:35" pos:end="73:60"><block pos:start="73:35" pos:end="73:60">{ <expr pos:start="73:37" pos:end="73:38"><literal type="number" pos:start="73:37" pos:end="73:38">40</literal></expr>, <expr pos:start="73:41" pos:end="73:42"><literal type="number" pos:start="73:41" pos:end="73:42">45</literal></expr>, <expr pos:start="73:45" pos:end="73:46"><literal type="number" pos:start="73:45" pos:end="73:46">51</literal></expr>, <expr pos:start="73:49" pos:end="73:50"><literal type="number" pos:start="73:49" pos:end="73:50">57</literal></expr>, <expr pos:start="73:53" pos:end="73:54"><literal type="number" pos:start="73:53" pos:end="73:54">64</literal></expr>, <expr pos:start="73:57" pos:end="73:58"><literal type="number" pos:start="73:57" pos:end="73:58">72</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="75:5" pos:end="75:39"><decl pos:start="75:5" pos:end="75:38"><type pos:start="75:5" pos:end="75:19"><specifier pos:start="75:5" pos:end="75:9">const</specifier> <name pos:start="75:11" pos:end="75:17">uint8_t</name> <modifier pos:start="75:19" pos:end="75:19">*</modifier></type><name pos:start="75:20" pos:end="75:31">scale_matrix</name> <init pos:start="75:33" pos:end="75:38">= <expr pos:start="75:35" pos:end="75:38"><name pos:start="75:35" pos:end="75:38">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="77:5" pos:end="77:21"><decl pos:start="77:5" pos:end="77:20"><type pos:start="77:5" pos:end="77:11"><name pos:start="77:5" pos:end="77:11">uint8_t</name></type> <name pos:start="77:13" pos:end="77:20">dc_scale</name></decl>;</decl_stmt>

    <decl_stmt pos:start="79:5" pos:end="81:66"><decl pos:start="79:5" pos:end="81:65"><type pos:start="79:5" pos:end="79:7"><name pos:start="79:5" pos:end="79:7">int</name></type> <name pos:start="79:9" pos:end="79:23">pred_mode_intra</name> <init pos:start="79:25" pos:end="81:65">= <expr pos:start="79:27" pos:end="81:65"><ternary pos:start="79:27" pos:end="81:65"><condition pos:start="79:27" pos:end="79:40"><expr pos:start="79:27" pos:end="79:38"><operator pos:start="79:27" pos:end="79:27">(</operator><name pos:start="79:28" pos:end="79:32">c_idx</name> <operator pos:start="79:34" pos:end="79:35">==</operator> <literal type="number" pos:start="79:37" pos:end="79:37">0</literal><operator pos:start="79:38" pos:end="79:38">)</operator></expr> ?</condition><then pos:start="79:42" pos:end="79:63"> <expr pos:start="79:42" pos:end="79:63"><name pos:start="79:42" pos:end="79:63"><name pos:start="79:42" pos:end="79:43">lc</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:47">tu</name><operator pos:start="79:48" pos:end="79:48">.</operator><name pos:start="79:49" pos:end="79:63">intra_pred_mode</name></name></expr> </then><else pos:start="79:65" pos:end="81:65">:

                                         <expr pos:start="81:42" pos:end="81:65"><name pos:start="81:42" pos:end="81:65"><name pos:start="81:42" pos:end="81:43">lc</name><operator pos:start="81:44" pos:end="81:45">-&gt;</operator><name pos:start="81:46" pos:end="81:47">tu</name><operator pos:start="81:48" pos:end="81:48">.</operator><name pos:start="81:49" pos:end="81:65">intra_pred_mode_c</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="85:5" pos:end="85:65"><expr pos:start="85:5" pos:end="85:64"><call pos:start="85:5" pos:end="85:64"><name pos:start="85:5" pos:end="85:10">memset</name><argument_list pos:start="85:11" pos:end="85:64">(<argument pos:start="85:12" pos:end="85:17"><expr pos:start="85:12" pos:end="85:17"><name pos:start="85:12" pos:end="85:17">coeffs</name></expr></argument>, <argument pos:start="85:20" pos:end="85:20"><expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr></argument>, <argument pos:start="85:23" pos:end="85:63"><expr pos:start="85:23" pos:end="85:63"><name pos:start="85:23" pos:end="85:32">trafo_size</name> <operator pos:start="85:34" pos:end="85:34">*</operator> <name pos:start="85:36" pos:end="85:45">trafo_size</name> <operator pos:start="85:47" pos:end="85:47">*</operator> <sizeof pos:start="85:49" pos:end="85:63">sizeof<argument_list pos:start="85:55" pos:end="85:63">(<argument pos:start="85:56" pos:end="85:62"><expr pos:start="85:56" pos:end="85:62"><name pos:start="85:56" pos:end="85:62">int16_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="line" pos:start="89:5" pos:end="89:28">// Derive QP for dequant</comment>

    <if_stmt pos:start="91:5" pos:end="239:5"><if pos:start="91:5" pos:end="229:5">if <condition pos:start="91:8" pos:end="91:42">(<expr pos:start="91:9" pos:end="91:41"><operator pos:start="91:9" pos:end="91:9">!</operator><name pos:start="91:10" pos:end="91:41"><name pos:start="91:10" pos:end="91:11">lc</name><operator pos:start="91:12" pos:end="91:13">-&gt;</operator><name pos:start="91:14" pos:end="91:15">cu</name><operator pos:start="91:16" pos:end="91:16">.</operator><name pos:start="91:17" pos:end="91:41">cu_transquant_bypass_flag</name></name></expr>)</condition> <block pos:start="91:44" pos:end="229:5">{<block_content pos:start="93:9" pos:end="227:9">

        <decl_stmt pos:start="93:9" pos:end="93:93"><decl pos:start="93:9" pos:end="93:92"><type pos:start="93:9" pos:end="93:24"><specifier pos:start="93:9" pos:end="93:14">static</specifier> <specifier pos:start="93:16" pos:end="93:20">const</specifier> <name pos:start="93:22" pos:end="93:24">int</name></type> <name pos:start="93:26" pos:end="93:31"><name pos:start="93:26" pos:end="93:29">qp_c</name><index pos:start="93:30" pos:end="93:31">[]</index></name> <init pos:start="93:33" pos:end="93:92">= <expr pos:start="93:35" pos:end="93:92"><block pos:start="93:35" pos:end="93:92">{ <expr pos:start="93:37" pos:end="93:38"><literal type="number" pos:start="93:37" pos:end="93:38">29</literal></expr>, <expr pos:start="93:41" pos:end="93:42"><literal type="number" pos:start="93:41" pos:end="93:42">30</literal></expr>, <expr pos:start="93:45" pos:end="93:46"><literal type="number" pos:start="93:45" pos:end="93:46">31</literal></expr>, <expr pos:start="93:49" pos:end="93:50"><literal type="number" pos:start="93:49" pos:end="93:50">32</literal></expr>, <expr pos:start="93:53" pos:end="93:54"><literal type="number" pos:start="93:53" pos:end="93:54">33</literal></expr>, <expr pos:start="93:57" pos:end="93:58"><literal type="number" pos:start="93:57" pos:end="93:58">33</literal></expr>, <expr pos:start="93:61" pos:end="93:62"><literal type="number" pos:start="93:61" pos:end="93:62">34</literal></expr>, <expr pos:start="93:65" pos:end="93:66"><literal type="number" pos:start="93:65" pos:end="93:66">34</literal></expr>, <expr pos:start="93:69" pos:end="93:70"><literal type="number" pos:start="93:69" pos:end="93:70">35</literal></expr>, <expr pos:start="93:73" pos:end="93:74"><literal type="number" pos:start="93:73" pos:end="93:74">35</literal></expr>, <expr pos:start="93:77" pos:end="93:78"><literal type="number" pos:start="93:77" pos:end="93:78">36</literal></expr>, <expr pos:start="93:81" pos:end="93:82"><literal type="number" pos:start="93:81" pos:end="93:82">36</literal></expr>, <expr pos:start="93:85" pos:end="93:86"><literal type="number" pos:start="93:85" pos:end="93:86">37</literal></expr>, <expr pos:start="93:89" pos:end="93:90"><literal type="number" pos:start="93:89" pos:end="93:90">37</literal></expr> }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="95:9" pos:end="105:10"><decl pos:start="95:9" pos:end="105:9"><type pos:start="95:9" pos:end="95:28"><specifier pos:start="95:9" pos:end="95:14">static</specifier> <specifier pos:start="95:16" pos:end="95:20">const</specifier> <name pos:start="95:22" pos:end="95:28">uint8_t</name></type> <name pos:start="95:30" pos:end="95:49"><name pos:start="95:30" pos:end="95:33">rem6</name><index pos:start="95:34" pos:end="95:49">[<expr pos:start="95:35" pos:end="95:48"><literal type="number" pos:start="95:35" pos:end="95:38">51</literal> <operator pos:start="95:38" pos:end="95:38">+</operator> <literal type="number" pos:start="95:40" pos:end="95:40">4</literal> <operator pos:start="95:42" pos:end="95:42">*</operator> <literal type="number" pos:start="95:44" pos:end="95:46">6</literal> <operator pos:start="95:46" pos:end="95:46">+</operator> <literal type="number" pos:start="95:48" pos:end="95:48">1</literal></expr>]</index></name> <init pos:start="95:51" pos:end="105:9">= <expr pos:start="95:53" pos:end="105:9"><block pos:start="95:53" pos:end="105:9">{

            <expr pos:start="97:13" pos:end="97:13"><literal type="number" pos:start="97:13" pos:end="97:13">0</literal></expr>, <expr pos:start="97:16" pos:end="97:16"><literal type="number" pos:start="97:16" pos:end="97:16">1</literal></expr>, <expr pos:start="97:19" pos:end="97:19"><literal type="number" pos:start="97:19" pos:end="97:19">2</literal></expr>, <expr pos:start="97:22" pos:end="97:22"><literal type="number" pos:start="97:22" pos:end="97:22">3</literal></expr>, <expr pos:start="97:25" pos:end="97:25"><literal type="number" pos:start="97:25" pos:end="97:25">4</literal></expr>, <expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">5</literal></expr>, <expr pos:start="97:31" pos:end="97:31"><literal type="number" pos:start="97:31" pos:end="97:31">0</literal></expr>, <expr pos:start="97:34" pos:end="97:34"><literal type="number" pos:start="97:34" pos:end="97:34">1</literal></expr>, <expr pos:start="97:37" pos:end="97:37"><literal type="number" pos:start="97:37" pos:end="97:37">2</literal></expr>, <expr pos:start="97:40" pos:end="97:40"><literal type="number" pos:start="97:40" pos:end="97:40">3</literal></expr>, <expr pos:start="97:43" pos:end="97:43"><literal type="number" pos:start="97:43" pos:end="97:43">4</literal></expr>, <expr pos:start="97:46" pos:end="97:46"><literal type="number" pos:start="97:46" pos:end="97:46">5</literal></expr>, <expr pos:start="97:49" pos:end="97:49"><literal type="number" pos:start="97:49" pos:end="97:49">0</literal></expr>, <expr pos:start="97:52" pos:end="97:52"><literal type="number" pos:start="97:52" pos:end="97:52">1</literal></expr>, <expr pos:start="97:55" pos:end="97:55"><literal type="number" pos:start="97:55" pos:end="97:55">2</literal></expr>, <expr pos:start="97:58" pos:end="97:58"><literal type="number" pos:start="97:58" pos:end="97:58">3</literal></expr>, <expr pos:start="97:61" pos:end="97:61"><literal type="number" pos:start="97:61" pos:end="97:61">4</literal></expr>, <expr pos:start="97:64" pos:end="97:64"><literal type="number" pos:start="97:64" pos:end="97:64">5</literal></expr>, <expr pos:start="97:67" pos:end="97:67"><literal type="number" pos:start="97:67" pos:end="97:67">0</literal></expr>, <expr pos:start="97:70" pos:end="97:70"><literal type="number" pos:start="97:70" pos:end="97:70">1</literal></expr>, <expr pos:start="97:73" pos:end="97:73"><literal type="number" pos:start="97:73" pos:end="97:73">2</literal></expr>,

            <expr pos:start="99:13" pos:end="99:13"><literal type="number" pos:start="99:13" pos:end="99:13">3</literal></expr>, <expr pos:start="99:16" pos:end="99:16"><literal type="number" pos:start="99:16" pos:end="99:16">4</literal></expr>, <expr pos:start="99:19" pos:end="99:19"><literal type="number" pos:start="99:19" pos:end="99:19">5</literal></expr>, <expr pos:start="99:22" pos:end="99:22"><literal type="number" pos:start="99:22" pos:end="99:22">0</literal></expr>, <expr pos:start="99:25" pos:end="99:25"><literal type="number" pos:start="99:25" pos:end="99:25">1</literal></expr>, <expr pos:start="99:28" pos:end="99:28"><literal type="number" pos:start="99:28" pos:end="99:28">2</literal></expr>, <expr pos:start="99:31" pos:end="99:31"><literal type="number" pos:start="99:31" pos:end="99:31">3</literal></expr>, <expr pos:start="99:34" pos:end="99:34"><literal type="number" pos:start="99:34" pos:end="99:34">4</literal></expr>, <expr pos:start="99:37" pos:end="99:37"><literal type="number" pos:start="99:37" pos:end="99:37">5</literal></expr>, <expr pos:start="99:40" pos:end="99:40"><literal type="number" pos:start="99:40" pos:end="99:40">0</literal></expr>, <expr pos:start="99:43" pos:end="99:43"><literal type="number" pos:start="99:43" pos:end="99:43">1</literal></expr>, <expr pos:start="99:46" pos:end="99:46"><literal type="number" pos:start="99:46" pos:end="99:46">2</literal></expr>, <expr pos:start="99:49" pos:end="99:49"><literal type="number" pos:start="99:49" pos:end="99:49">3</literal></expr>, <expr pos:start="99:52" pos:end="99:52"><literal type="number" pos:start="99:52" pos:end="99:52">4</literal></expr>, <expr pos:start="99:55" pos:end="99:55"><literal type="number" pos:start="99:55" pos:end="99:55">5</literal></expr>, <expr pos:start="99:58" pos:end="99:58"><literal type="number" pos:start="99:58" pos:end="99:58">0</literal></expr>, <expr pos:start="99:61" pos:end="99:61"><literal type="number" pos:start="99:61" pos:end="99:61">1</literal></expr>, <expr pos:start="99:64" pos:end="99:64"><literal type="number" pos:start="99:64" pos:end="99:64">2</literal></expr>, <expr pos:start="99:67" pos:end="99:67"><literal type="number" pos:start="99:67" pos:end="99:67">3</literal></expr>, <expr pos:start="99:70" pos:end="99:70"><literal type="number" pos:start="99:70" pos:end="99:70">4</literal></expr>, <expr pos:start="99:73" pos:end="99:73"><literal type="number" pos:start="99:73" pos:end="99:73">5</literal></expr>,

            <expr pos:start="101:13" pos:end="101:13"><literal type="number" pos:start="101:13" pos:end="101:13">0</literal></expr>, <expr pos:start="101:16" pos:end="101:16"><literal type="number" pos:start="101:16" pos:end="101:16">1</literal></expr>, <expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">2</literal></expr>, <expr pos:start="101:22" pos:end="101:22"><literal type="number" pos:start="101:22" pos:end="101:22">3</literal></expr>, <expr pos:start="101:25" pos:end="101:25"><literal type="number" pos:start="101:25" pos:end="101:25">4</literal></expr>, <expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">5</literal></expr>, <expr pos:start="101:31" pos:end="101:31"><literal type="number" pos:start="101:31" pos:end="101:31">0</literal></expr>, <expr pos:start="101:34" pos:end="101:34"><literal type="number" pos:start="101:34" pos:end="101:34">1</literal></expr>, <expr pos:start="101:37" pos:end="101:37"><literal type="number" pos:start="101:37" pos:end="101:37">2</literal></expr>, <expr pos:start="101:40" pos:end="101:40"><literal type="number" pos:start="101:40" pos:end="101:40">3</literal></expr>, <expr pos:start="101:43" pos:end="101:43"><literal type="number" pos:start="101:43" pos:end="101:43">4</literal></expr>, <expr pos:start="101:46" pos:end="101:46"><literal type="number" pos:start="101:46" pos:end="101:46">5</literal></expr>, <expr pos:start="101:49" pos:end="101:49"><literal type="number" pos:start="101:49" pos:end="101:49">0</literal></expr>, <expr pos:start="101:52" pos:end="101:52"><literal type="number" pos:start="101:52" pos:end="101:52">1</literal></expr>, <expr pos:start="101:55" pos:end="101:55"><literal type="number" pos:start="101:55" pos:end="101:55">2</literal></expr>, <expr pos:start="101:58" pos:end="101:58"><literal type="number" pos:start="101:58" pos:end="101:58">3</literal></expr>, <expr pos:start="101:61" pos:end="101:61"><literal type="number" pos:start="101:61" pos:end="101:61">4</literal></expr>, <expr pos:start="101:64" pos:end="101:64"><literal type="number" pos:start="101:64" pos:end="101:64">5</literal></expr>, <expr pos:start="101:67" pos:end="101:67"><literal type="number" pos:start="101:67" pos:end="101:67">0</literal></expr>, <expr pos:start="101:70" pos:end="101:70"><literal type="number" pos:start="101:70" pos:end="101:70">1</literal></expr>, <expr pos:start="101:73" pos:end="101:73"><literal type="number" pos:start="101:73" pos:end="101:73">2</literal></expr>, <expr pos:start="101:76" pos:end="101:76"><literal type="number" pos:start="101:76" pos:end="101:76">3</literal></expr>,

            <expr pos:start="103:13" pos:end="103:13"><literal type="number" pos:start="103:13" pos:end="103:13">4</literal></expr>, <expr pos:start="103:16" pos:end="103:16"><literal type="number" pos:start="103:16" pos:end="103:16">5</literal></expr>, <expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">0</literal></expr>, <expr pos:start="103:22" pos:end="103:22"><literal type="number" pos:start="103:22" pos:end="103:22">1</literal></expr>, <expr pos:start="103:25" pos:end="103:25"><literal type="number" pos:start="103:25" pos:end="103:25">2</literal></expr>, <expr pos:start="103:28" pos:end="103:28"><literal type="number" pos:start="103:28" pos:end="103:28">3</literal></expr>, <expr pos:start="103:31" pos:end="103:31"><literal type="number" pos:start="103:31" pos:end="103:31">4</literal></expr>, <expr pos:start="103:34" pos:end="103:34"><literal type="number" pos:start="103:34" pos:end="103:34">5</literal></expr>, <expr pos:start="103:37" pos:end="103:37"><literal type="number" pos:start="103:37" pos:end="103:37">0</literal></expr>, <expr pos:start="103:40" pos:end="103:40"><literal type="number" pos:start="103:40" pos:end="103:40">1</literal></expr>

        }</block></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="109:9" pos:end="119:10"><decl pos:start="109:9" pos:end="119:9"><type pos:start="109:9" pos:end="109:28"><specifier pos:start="109:9" pos:end="109:14">static</specifier> <specifier pos:start="109:16" pos:end="109:20">const</specifier> <name pos:start="109:22" pos:end="109:28">uint8_t</name></type> <name pos:start="109:30" pos:end="109:49"><name pos:start="109:30" pos:end="109:33">div6</name><index pos:start="109:34" pos:end="109:49">[<expr pos:start="109:35" pos:end="109:48"><literal type="number" pos:start="109:35" pos:end="109:38">51</literal> <operator pos:start="109:38" pos:end="109:38">+</operator> <literal type="number" pos:start="109:40" pos:end="109:40">4</literal> <operator pos:start="109:42" pos:end="109:42">*</operator> <literal type="number" pos:start="109:44" pos:end="109:46">6</literal> <operator pos:start="109:46" pos:end="109:46">+</operator> <literal type="number" pos:start="109:48" pos:end="109:48">1</literal></expr>]</index></name> <init pos:start="109:51" pos:end="119:9">= <expr pos:start="109:53" pos:end="119:9"><block pos:start="109:53" pos:end="119:9">{

            <expr pos:start="111:13" pos:end="111:13"><literal type="number" pos:start="111:13" pos:end="111:13">0</literal></expr>, <expr pos:start="111:16" pos:end="111:16"><literal type="number" pos:start="111:16" pos:end="111:16">0</literal></expr>, <expr pos:start="111:19" pos:end="111:19"><literal type="number" pos:start="111:19" pos:end="111:19">0</literal></expr>, <expr pos:start="111:22" pos:end="111:22"><literal type="number" pos:start="111:22" pos:end="111:22">0</literal></expr>, <expr pos:start="111:25" pos:end="111:25"><literal type="number" pos:start="111:25" pos:end="111:25">0</literal></expr>, <expr pos:start="111:28" pos:end="111:28"><literal type="number" pos:start="111:28" pos:end="111:28">0</literal></expr>, <expr pos:start="111:31" pos:end="111:31"><literal type="number" pos:start="111:31" pos:end="111:31">1</literal></expr>, <expr pos:start="111:34" pos:end="111:34"><literal type="number" pos:start="111:34" pos:end="111:34">1</literal></expr>, <expr pos:start="111:37" pos:end="111:37"><literal type="number" pos:start="111:37" pos:end="111:37">1</literal></expr>, <expr pos:start="111:40" pos:end="111:40"><literal type="number" pos:start="111:40" pos:end="111:40">1</literal></expr>, <expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">1</literal></expr>, <expr pos:start="111:46" pos:end="111:46"><literal type="number" pos:start="111:46" pos:end="111:46">1</literal></expr>, <expr pos:start="111:49" pos:end="111:49"><literal type="number" pos:start="111:49" pos:end="111:49">2</literal></expr>, <expr pos:start="111:52" pos:end="111:52"><literal type="number" pos:start="111:52" pos:end="111:52">2</literal></expr>, <expr pos:start="111:55" pos:end="111:55"><literal type="number" pos:start="111:55" pos:end="111:55">2</literal></expr>, <expr pos:start="111:58" pos:end="111:58"><literal type="number" pos:start="111:58" pos:end="111:58">2</literal></expr>, <expr pos:start="111:61" pos:end="111:61"><literal type="number" pos:start="111:61" pos:end="111:61">2</literal></expr>, <expr pos:start="111:64" pos:end="111:64"><literal type="number" pos:start="111:64" pos:end="111:64">2</literal></expr>, <expr pos:start="111:67" pos:end="111:67"><literal type="number" pos:start="111:67" pos:end="111:67">3</literal></expr>,  <expr pos:start="111:71" pos:end="111:71"><literal type="number" pos:start="111:71" pos:end="111:71">3</literal></expr>,  <expr pos:start="111:75" pos:end="111:75"><literal type="number" pos:start="111:75" pos:end="111:75">3</literal></expr>,

            <expr pos:start="113:13" pos:end="113:13"><literal type="number" pos:start="113:13" pos:end="113:13">3</literal></expr>, <expr pos:start="113:16" pos:end="113:16"><literal type="number" pos:start="113:16" pos:end="113:16">3</literal></expr>, <expr pos:start="113:19" pos:end="113:19"><literal type="number" pos:start="113:19" pos:end="113:19">3</literal></expr>, <expr pos:start="113:22" pos:end="113:22"><literal type="number" pos:start="113:22" pos:end="113:22">4</literal></expr>, <expr pos:start="113:25" pos:end="113:25"><literal type="number" pos:start="113:25" pos:end="113:25">4</literal></expr>, <expr pos:start="113:28" pos:end="113:28"><literal type="number" pos:start="113:28" pos:end="113:28">4</literal></expr>, <expr pos:start="113:31" pos:end="113:31"><literal type="number" pos:start="113:31" pos:end="113:31">4</literal></expr>, <expr pos:start="113:34" pos:end="113:34"><literal type="number" pos:start="113:34" pos:end="113:34">4</literal></expr>, <expr pos:start="113:37" pos:end="113:37"><literal type="number" pos:start="113:37" pos:end="113:37">4</literal></expr>, <expr pos:start="113:40" pos:end="113:40"><literal type="number" pos:start="113:40" pos:end="113:40">5</literal></expr>, <expr pos:start="113:43" pos:end="113:43"><literal type="number" pos:start="113:43" pos:end="113:43">5</literal></expr>, <expr pos:start="113:46" pos:end="113:46"><literal type="number" pos:start="113:46" pos:end="113:46">5</literal></expr>, <expr pos:start="113:49" pos:end="113:49"><literal type="number" pos:start="113:49" pos:end="113:49">5</literal></expr>, <expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">5</literal></expr>, <expr pos:start="113:55" pos:end="113:55"><literal type="number" pos:start="113:55" pos:end="113:55">5</literal></expr>, <expr pos:start="113:58" pos:end="113:58"><literal type="number" pos:start="113:58" pos:end="113:58">6</literal></expr>, <expr pos:start="113:61" pos:end="113:61"><literal type="number" pos:start="113:61" pos:end="113:61">6</literal></expr>, <expr pos:start="113:64" pos:end="113:64"><literal type="number" pos:start="113:64" pos:end="113:64">6</literal></expr>, <expr pos:start="113:67" pos:end="113:67"><literal type="number" pos:start="113:67" pos:end="113:67">6</literal></expr>,  <expr pos:start="113:71" pos:end="113:71"><literal type="number" pos:start="113:71" pos:end="113:71">6</literal></expr>,  <expr pos:start="113:75" pos:end="113:75"><literal type="number" pos:start="113:75" pos:end="113:75">6</literal></expr>,

            <expr pos:start="115:13" pos:end="115:13"><literal type="number" pos:start="115:13" pos:end="115:13">7</literal></expr>, <expr pos:start="115:16" pos:end="115:16"><literal type="number" pos:start="115:16" pos:end="115:16">7</literal></expr>, <expr pos:start="115:19" pos:end="115:19"><literal type="number" pos:start="115:19" pos:end="115:19">7</literal></expr>, <expr pos:start="115:22" pos:end="115:22"><literal type="number" pos:start="115:22" pos:end="115:22">7</literal></expr>, <expr pos:start="115:25" pos:end="115:25"><literal type="number" pos:start="115:25" pos:end="115:25">7</literal></expr>, <expr pos:start="115:28" pos:end="115:28"><literal type="number" pos:start="115:28" pos:end="115:28">7</literal></expr>, <expr pos:start="115:31" pos:end="115:31"><literal type="number" pos:start="115:31" pos:end="115:31">8</literal></expr>, <expr pos:start="115:34" pos:end="115:34"><literal type="number" pos:start="115:34" pos:end="115:34">8</literal></expr>, <expr pos:start="115:37" pos:end="115:37"><literal type="number" pos:start="115:37" pos:end="115:37">8</literal></expr>, <expr pos:start="115:40" pos:end="115:40"><literal type="number" pos:start="115:40" pos:end="115:40">8</literal></expr>, <expr pos:start="115:43" pos:end="115:43"><literal type="number" pos:start="115:43" pos:end="115:43">8</literal></expr>, <expr pos:start="115:46" pos:end="115:46"><literal type="number" pos:start="115:46" pos:end="115:46">8</literal></expr>, <expr pos:start="115:49" pos:end="115:49"><literal type="number" pos:start="115:49" pos:end="115:49">9</literal></expr>, <expr pos:start="115:52" pos:end="115:52"><literal type="number" pos:start="115:52" pos:end="115:52">9</literal></expr>, <expr pos:start="115:55" pos:end="115:55"><literal type="number" pos:start="115:55" pos:end="115:55">9</literal></expr>, <expr pos:start="115:58" pos:end="115:58"><literal type="number" pos:start="115:58" pos:end="115:58">9</literal></expr>, <expr pos:start="115:61" pos:end="115:61"><literal type="number" pos:start="115:61" pos:end="115:61">9</literal></expr>, <expr pos:start="115:64" pos:end="115:64"><literal type="number" pos:start="115:64" pos:end="115:64">9</literal></expr>, <expr pos:start="115:67" pos:end="115:68"><literal type="number" pos:start="115:67" pos:end="115:68">10</literal></expr>, <expr pos:start="115:71" pos:end="115:72"><literal type="number" pos:start="115:71" pos:end="115:72">10</literal></expr>, <expr pos:start="115:75" pos:end="115:76"><literal type="number" pos:start="115:75" pos:end="115:76">10</literal></expr>, <expr pos:start="115:79" pos:end="115:80"><literal type="number" pos:start="115:79" pos:end="115:80">10</literal></expr>,

            <expr pos:start="117:13" pos:end="117:14"><literal type="number" pos:start="117:13" pos:end="117:14">10</literal></expr>, <expr pos:start="117:17" pos:end="117:18"><literal type="number" pos:start="117:17" pos:end="117:18">10</literal></expr>, <expr pos:start="117:21" pos:end="117:22"><literal type="number" pos:start="117:21" pos:end="117:22">11</literal></expr>, <expr pos:start="117:25" pos:end="117:26"><literal type="number" pos:start="117:25" pos:end="117:26">11</literal></expr>, <expr pos:start="117:29" pos:end="117:30"><literal type="number" pos:start="117:29" pos:end="117:30">11</literal></expr>, <expr pos:start="117:33" pos:end="117:34"><literal type="number" pos:start="117:33" pos:end="117:34">11</literal></expr>, <expr pos:start="117:37" pos:end="117:38"><literal type="number" pos:start="117:37" pos:end="117:38">11</literal></expr>, <expr pos:start="117:41" pos:end="117:42"><literal type="number" pos:start="117:41" pos:end="117:42">11</literal></expr>, <expr pos:start="117:45" pos:end="117:46"><literal type="number" pos:start="117:45" pos:end="117:46">12</literal></expr>, <expr pos:start="117:49" pos:end="117:50"><literal type="number" pos:start="117:49" pos:end="117:50">12</literal></expr>

        }</block></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="121:9" pos:end="121:28"><decl pos:start="121:9" pos:end="121:27"><type pos:start="121:9" pos:end="121:11"><name pos:start="121:9" pos:end="121:11">int</name></type> <name pos:start="121:13" pos:end="121:16">qp_y</name> <init pos:start="121:18" pos:end="121:27">= <expr pos:start="121:20" pos:end="121:27"><name pos:start="121:20" pos:end="121:27"><name pos:start="121:20" pos:end="121:21">lc</name><operator pos:start="121:22" pos:end="121:23">-&gt;</operator><name pos:start="121:24" pos:end="121:27">qp_y</name></name></expr></init></decl>;</decl_stmt>



        <if_stmt pos:start="125:9" pos:end="131:9"><if pos:start="125:9" pos:end="131:9">if <condition pos:start="125:12" pos:end="127:74">(<expr pos:start="125:13" pos:end="127:73"><name pos:start="125:13" pos:end="125:47"><name pos:start="125:13" pos:end="125:13">s</name><operator pos:start="125:14" pos:end="125:15">-&gt;</operator><name pos:start="125:16" pos:end="125:18">pps</name><operator pos:start="125:19" pos:end="125:20">-&gt;</operator><name pos:start="125:21" pos:end="125:47">transform_skip_enabled_flag</name></name> <operator pos:start="125:49" pos:end="125:50">&amp;&amp;</operator>

            <name pos:start="127:13" pos:end="127:27">log2_trafo_size</name> <operator pos:start="127:29" pos:end="127:30">&lt;=</operator> <name pos:start="127:32" pos:end="127:73"><name pos:start="127:32" pos:end="127:32">s</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:37">pps</name><operator pos:start="127:38" pos:end="127:39">-&gt;</operator><name pos:start="127:40" pos:end="127:73">log2_max_transform_skip_block_size</name></name></expr>)</condition> <block pos:start="127:76" pos:end="131:9">{<block_content pos:start="129:13" pos:end="129:79">

            <expr_stmt pos:start="129:13" pos:end="129:79"><expr pos:start="129:13" pos:end="129:78"><name pos:start="129:13" pos:end="129:31">transform_skip_flag</name> <operator pos:start="129:33" pos:end="129:33">=</operator> <call pos:start="129:35" pos:end="129:78"><name pos:start="129:35" pos:end="129:68">ff_hevc_transform_skip_flag_decode</name><argument_list pos:start="129:69" pos:end="129:78">(<argument pos:start="129:70" pos:end="129:70"><expr pos:start="129:70" pos:end="129:70"><name pos:start="129:70" pos:end="129:70">s</name></expr></argument>, <argument pos:start="129:73" pos:end="129:77"><expr pos:start="129:73" pos:end="129:77"><name pos:start="129:73" pos:end="129:77">c_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="135:9" pos:end="191:9"><if pos:start="135:9" pos:end="139:9">if <condition pos:start="135:12" pos:end="135:23">(<expr pos:start="135:13" pos:end="135:22"><name pos:start="135:13" pos:end="135:17">c_idx</name> <operator pos:start="135:19" pos:end="135:20">==</operator> <literal type="number" pos:start="135:22" pos:end="135:22">0</literal></expr>)</condition> <block pos:start="135:25" pos:end="139:9">{<block_content pos:start="137:13" pos:end="137:45">

            <expr_stmt pos:start="137:13" pos:end="137:45"><expr pos:start="137:13" pos:end="137:44"><name pos:start="137:13" pos:end="137:14">qp</name> <operator pos:start="137:16" pos:end="137:16">=</operator> <name pos:start="137:18" pos:end="137:21">qp_y</name> <operator pos:start="137:23" pos:end="137:23">+</operator> <name pos:start="137:25" pos:end="137:44"><name pos:start="137:25" pos:end="137:25">s</name><operator pos:start="137:26" pos:end="137:27">-&gt;</operator><name pos:start="137:28" pos:end="137:30">sps</name><operator pos:start="137:31" pos:end="137:32">-&gt;</operator><name pos:start="137:33" pos:end="137:44">qp_bd_offset</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="139:11" pos:end="191:9">else <block pos:start="139:16" pos:end="191:9">{<block_content pos:start="141:13" pos:end="189:39">

            <decl_stmt pos:start="141:13" pos:end="141:29"><decl pos:start="141:13" pos:end="141:20"><type pos:start="141:13" pos:end="141:15"><name pos:start="141:13" pos:end="141:15">int</name></type> <name pos:start="141:17" pos:end="141:20">qp_i</name></decl>, <decl pos:start="141:23" pos:end="141:28"><type ref="prev" pos:start="141:13" pos:end="141:15"/><name pos:start="141:23" pos:end="141:28">offset</name></decl>;</decl_stmt>



            <if_stmt pos:start="145:13" pos:end="155:48"><if pos:start="145:13" pos:end="149:48">if <condition pos:start="145:16" pos:end="145:27">(<expr pos:start="145:17" pos:end="145:26"><name pos:start="145:17" pos:end="145:21">c_idx</name> <operator pos:start="145:23" pos:end="145:24">==</operator> <literal type="number" pos:start="145:26" pos:end="145:26">1</literal></expr>)</condition><block type="pseudo" pos:start="147:17" pos:end="149:48"><block_content pos:start="147:17" pos:end="149:48">

                <expr_stmt pos:start="147:17" pos:end="149:48"><expr pos:start="147:17" pos:end="149:47"><name pos:start="147:17" pos:end="147:22">offset</name> <operator pos:start="147:24" pos:end="147:24">=</operator> <name pos:start="147:26" pos:end="147:45"><name pos:start="147:26" pos:end="147:26">s</name><operator pos:start="147:27" pos:end="147:28">-&gt;</operator><name pos:start="147:29" pos:end="147:31">pps</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:45">cb_qp_offset</name></name> <operator pos:start="147:47" pos:end="147:47">+</operator> <name pos:start="147:49" pos:end="147:72"><name pos:start="147:49" pos:end="147:49">s</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:53">sh</name><operator pos:start="147:54" pos:end="147:54">.</operator><name pos:start="147:55" pos:end="147:72">slice_cb_qp_offset</name></name> <operator pos:start="147:74" pos:end="147:74">+</operator>

                         <name pos:start="149:26" pos:end="149:47"><name pos:start="149:26" pos:end="149:27">lc</name><operator pos:start="149:28" pos:end="149:29">-&gt;</operator><name pos:start="149:30" pos:end="149:31">tu</name><operator pos:start="149:32" pos:end="149:32">.</operator><name pos:start="149:33" pos:end="149:47">cu_qp_offset_cb</name></name></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="151:13" pos:end="155:48">else<block type="pseudo" pos:start="153:17" pos:end="155:48"><block_content pos:start="153:17" pos:end="155:48">

                <expr_stmt pos:start="153:17" pos:end="155:48"><expr pos:start="153:17" pos:end="155:47"><name pos:start="153:17" pos:end="153:22">offset</name> <operator pos:start="153:24" pos:end="153:24">=</operator> <name pos:start="153:26" pos:end="153:45"><name pos:start="153:26" pos:end="153:26">s</name><operator pos:start="153:27" pos:end="153:28">-&gt;</operator><name pos:start="153:29" pos:end="153:31">pps</name><operator pos:start="153:32" pos:end="153:33">-&gt;</operator><name pos:start="153:34" pos:end="153:45">cr_qp_offset</name></name> <operator pos:start="153:47" pos:end="153:47">+</operator> <name pos:start="153:49" pos:end="153:72"><name pos:start="153:49" pos:end="153:49">s</name><operator pos:start="153:50" pos:end="153:51">-&gt;</operator><name pos:start="153:52" pos:end="153:53">sh</name><operator pos:start="153:54" pos:end="153:54">.</operator><name pos:start="153:55" pos:end="153:72">slice_cr_qp_offset</name></name> <operator pos:start="153:74" pos:end="153:74">+</operator>

                         <name pos:start="155:26" pos:end="155:47"><name pos:start="155:26" pos:end="155:27">lc</name><operator pos:start="155:28" pos:end="155:29">-&gt;</operator><name pos:start="155:30" pos:end="155:31">tu</name><operator pos:start="155:32" pos:end="155:32">.</operator><name pos:start="155:33" pos:end="155:47">cu_qp_offset_cr</name></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <expr_stmt pos:start="159:13" pos:end="159:70"><expr pos:start="159:13" pos:end="159:69"><name pos:start="159:13" pos:end="159:16">qp_i</name> <operator pos:start="159:18" pos:end="159:18">=</operator> <call pos:start="159:20" pos:end="159:69"><name pos:start="159:20" pos:end="159:26">av_clip</name><argument_list pos:start="159:27" pos:end="159:69">(<argument pos:start="159:28" pos:end="159:40"><expr pos:start="159:28" pos:end="159:40"><name pos:start="159:28" pos:end="159:31">qp_y</name> <operator pos:start="159:33" pos:end="159:33">+</operator> <name pos:start="159:35" pos:end="159:40">offset</name></expr></argument>, <argument pos:start="159:43" pos:end="159:64"><expr pos:start="159:43" pos:end="159:64"><operator pos:start="159:43" pos:end="159:43">-</operator> <name pos:start="159:45" pos:end="159:64"><name pos:start="159:45" pos:end="159:45">s</name><operator pos:start="159:46" pos:end="159:47">-&gt;</operator><name pos:start="159:48" pos:end="159:50">sps</name><operator pos:start="159:51" pos:end="159:52">-&gt;</operator><name pos:start="159:53" pos:end="159:64">qp_bd_offset</name></name></expr></argument>, <argument pos:start="159:67" pos:end="159:68"><expr pos:start="159:67" pos:end="159:68"><literal type="number" pos:start="159:67" pos:end="159:68">57</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="161:13" pos:end="185:13"><if pos:start="161:13" pos:end="175:13">if <condition pos:start="161:16" pos:end="161:47">(<expr pos:start="161:17" pos:end="161:46"><name pos:start="161:17" pos:end="161:41"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:22">sps</name><operator pos:start="161:23" pos:end="161:24">-&gt;</operator><name pos:start="161:25" pos:end="161:41">chroma_format_idc</name></name> <operator pos:start="161:43" pos:end="161:44">==</operator> <literal type="number" pos:start="161:46" pos:end="161:46">1</literal></expr>)</condition> <block pos:start="161:49" pos:end="175:13">{<block_content pos:start="163:17" pos:end="173:41">

                <if_stmt pos:start="163:17" pos:end="173:41"><if pos:start="163:17" pos:end="165:30">if <condition pos:start="163:20" pos:end="163:30">(<expr pos:start="163:21" pos:end="163:29"><name pos:start="163:21" pos:end="163:24">qp_i</name> <operator pos:start="163:26" pos:end="163:26">&lt;</operator> <literal type="number" pos:start="163:28" pos:end="163:29">30</literal></expr>)</condition><block type="pseudo" pos:start="165:21" pos:end="165:30"><block_content pos:start="165:21" pos:end="165:30">

                    <expr_stmt pos:start="165:21" pos:end="165:30"><expr pos:start="165:21" pos:end="165:29"><name pos:start="165:21" pos:end="165:22">qp</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <name pos:start="165:26" pos:end="165:29">qp_i</name></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="167:17" pos:end="169:34">else if <condition pos:start="167:25" pos:end="167:35">(<expr pos:start="167:26" pos:end="167:34"><name pos:start="167:26" pos:end="167:29">qp_i</name> <operator pos:start="167:31" pos:end="167:31">&gt;</operator> <literal type="number" pos:start="167:33" pos:end="167:34">43</literal></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:34"><block_content pos:start="169:21" pos:end="169:34">

                    <expr_stmt pos:start="169:21" pos:end="169:34"><expr pos:start="169:21" pos:end="169:33"><name pos:start="169:21" pos:end="169:22">qp</name> <operator pos:start="169:24" pos:end="169:24">=</operator> <name pos:start="169:26" pos:end="169:29">qp_i</name> <operator pos:start="169:31" pos:end="169:31">-</operator> <literal type="number" pos:start="169:33" pos:end="169:33">6</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="171:17" pos:end="173:41">else<block type="pseudo" pos:start="173:21" pos:end="173:41"><block_content pos:start="173:21" pos:end="173:41">

                    <expr_stmt pos:start="173:21" pos:end="173:41"><expr pos:start="173:21" pos:end="173:40"><name pos:start="173:21" pos:end="173:22">qp</name> <operator pos:start="173:24" pos:end="173:24">=</operator> <name pos:start="173:26" pos:end="173:40"><name pos:start="173:26" pos:end="173:29">qp_c</name><index pos:start="173:30" pos:end="173:40">[<expr pos:start="173:31" pos:end="173:39"><name pos:start="173:31" pos:end="173:34">qp_i</name> <operator pos:start="173:36" pos:end="173:36">-</operator> <literal type="number" pos:start="173:38" pos:end="173:39">30</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="175:15" pos:end="185:13">else <block pos:start="175:20" pos:end="185:13">{<block_content pos:start="177:17" pos:end="183:30">

                <if_stmt pos:start="177:17" pos:end="183:30"><if pos:start="177:17" pos:end="179:28">if <condition pos:start="177:20" pos:end="177:30">(<expr pos:start="177:21" pos:end="177:29"><name pos:start="177:21" pos:end="177:24">qp_i</name> <operator pos:start="177:26" pos:end="177:26">&gt;</operator> <literal type="number" pos:start="177:28" pos:end="177:29">51</literal></expr>)</condition><block type="pseudo" pos:start="179:21" pos:end="179:28"><block_content pos:start="179:21" pos:end="179:28">

                    <expr_stmt pos:start="179:21" pos:end="179:28"><expr pos:start="179:21" pos:end="179:27"><name pos:start="179:21" pos:end="179:22">qp</name> <operator pos:start="179:24" pos:end="179:24">=</operator> <literal type="number" pos:start="179:26" pos:end="179:27">51</literal></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="181:17" pos:end="183:30">else<block type="pseudo" pos:start="183:21" pos:end="183:30"><block_content pos:start="183:21" pos:end="183:30">

                    <expr_stmt pos:start="183:21" pos:end="183:30"><expr pos:start="183:21" pos:end="183:29"><name pos:start="183:21" pos:end="183:22">qp</name> <operator pos:start="183:24" pos:end="183:24">=</operator> <name pos:start="183:26" pos:end="183:29">qp_i</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

            </block_content>}</block></else></if_stmt>



            <expr_stmt pos:start="189:13" pos:end="189:39"><expr pos:start="189:13" pos:end="189:38"><name pos:start="189:13" pos:end="189:14">qp</name> <operator pos:start="189:16" pos:end="189:17">+=</operator> <name pos:start="189:19" pos:end="189:38"><name pos:start="189:19" pos:end="189:19">s</name><operator pos:start="189:20" pos:end="189:21">-&gt;</operator><name pos:start="189:22" pos:end="189:24">sps</name><operator pos:start="189:25" pos:end="189:26">-&gt;</operator><name pos:start="189:27" pos:end="189:38">qp_bd_offset</name></name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="195:9" pos:end="195:59"><expr pos:start="195:9" pos:end="195:58"><name pos:start="195:9" pos:end="195:13">shift</name>    <operator pos:start="195:18" pos:end="195:18">=</operator> <name pos:start="195:20" pos:end="195:36"><name pos:start="195:20" pos:end="195:20">s</name><operator pos:start="195:21" pos:end="195:22">-&gt;</operator><name pos:start="195:23" pos:end="195:25">sps</name><operator pos:start="195:26" pos:end="195:27">-&gt;</operator><name pos:start="195:28" pos:end="195:36">bit_depth</name></name> <operator pos:start="195:38" pos:end="195:38">+</operator> <name pos:start="195:40" pos:end="195:54">log2_trafo_size</name> <operator pos:start="195:56" pos:end="195:56">-</operator> <literal type="number" pos:start="195:58" pos:end="195:58">5</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="197:9" pos:end="197:34"><expr pos:start="197:9" pos:end="197:33"><name pos:start="197:9" pos:end="197:11">add</name>      <operator pos:start="197:18" pos:end="197:18">=</operator> <literal type="number" pos:start="197:20" pos:end="197:20">1</literal> <operator pos:start="197:22" pos:end="197:23">&lt;&lt;</operator> <operator pos:start="197:25" pos:end="197:25">(</operator><name pos:start="197:26" pos:end="197:30">shift</name><operator pos:start="197:31" pos:end="197:31">-</operator><literal type="number" pos:start="197:32" pos:end="197:32">1</literal><operator pos:start="197:33" pos:end="197:33">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="199:9" pos:end="199:55"><expr pos:start="199:9" pos:end="199:54"><name pos:start="199:9" pos:end="199:13">scale</name>    <operator pos:start="199:18" pos:end="199:18">=</operator> <name pos:start="199:20" pos:end="199:40"><name pos:start="199:20" pos:end="199:30">level_scale</name><index pos:start="199:31" pos:end="199:40">[<expr pos:start="199:32" pos:end="199:39"><name pos:start="199:32" pos:end="199:39"><name pos:start="199:32" pos:end="199:35">rem6</name><index pos:start="199:36" pos:end="199:39">[<expr pos:start="199:37" pos:end="199:38"><name pos:start="199:37" pos:end="199:38">qp</name></expr>]</index></name></expr>]</index></name> <operator pos:start="199:42" pos:end="199:43">&lt;&lt;</operator> <operator pos:start="199:45" pos:end="199:45">(</operator><name pos:start="199:46" pos:end="199:53"><name pos:start="199:46" pos:end="199:49">div6</name><index pos:start="199:50" pos:end="199:53">[<expr pos:start="199:51" pos:end="199:52"><name pos:start="199:51" pos:end="199:52">qp</name></expr>]</index></name><operator pos:start="199:54" pos:end="199:54">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="201:9" pos:end="201:22"><expr pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:15">scale_m</name>  <operator pos:start="201:18" pos:end="201:18">=</operator> <literal type="number" pos:start="201:20" pos:end="201:21">16</literal></expr>;</expr_stmt> <comment type="line" pos:start="201:24" pos:end="201:63">// default when no custom scaling lists.</comment>

        <expr_stmt pos:start="203:9" pos:end="203:22"><expr pos:start="203:9" pos:end="203:21"><name pos:start="203:9" pos:end="203:16">dc_scale</name> <operator pos:start="203:18" pos:end="203:18">=</operator> <literal type="number" pos:start="203:20" pos:end="203:21">16</literal></expr>;</expr_stmt>



        <if_stmt pos:start="207:9" pos:end="227:9"><if pos:start="207:9" pos:end="227:9">if <condition pos:start="207:12" pos:end="207:94">(<expr pos:start="207:13" pos:end="207:93"><name pos:start="207:13" pos:end="207:44"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:18">sps</name><operator pos:start="207:19" pos:end="207:20">-&gt;</operator><name pos:start="207:21" pos:end="207:44">scaling_list_enable_flag</name></name> <operator pos:start="207:46" pos:end="207:47">&amp;&amp;</operator> <operator pos:start="207:49" pos:end="207:49">!</operator><operator pos:start="207:50" pos:end="207:50">(</operator><name pos:start="207:51" pos:end="207:69">transform_skip_flag</name> <operator pos:start="207:71" pos:end="207:72">&amp;&amp;</operator> <name pos:start="207:74" pos:end="207:88">log2_trafo_size</name> <operator pos:start="207:90" pos:end="207:90">&gt;</operator> <literal type="number" pos:start="207:92" pos:end="207:92">2</literal><operator pos:start="207:93" pos:end="207:93">)</operator></expr>)</condition> <block pos:start="207:96" pos:end="227:9">{<block_content pos:start="209:13" pos:end="225:69">

            <decl_stmt pos:start="209:13" pos:end="211:58"><decl pos:start="209:13" pos:end="211:57"><type pos:start="209:13" pos:end="209:31"><specifier pos:start="209:13" pos:end="209:17">const</specifier> <name pos:start="209:19" pos:end="209:29">ScalingList</name> <modifier pos:start="209:31" pos:end="209:31">*</modifier></type><name pos:start="209:32" pos:end="209:33">sl</name> <init pos:start="209:35" pos:end="211:57">= <expr pos:start="209:37" pos:end="211:57"><ternary pos:start="209:37" pos:end="211:57"><condition pos:start="209:37" pos:end="209:76"><expr pos:start="209:37" pos:end="209:74"><name pos:start="209:37" pos:end="209:74"><name pos:start="209:37" pos:end="209:37">s</name><operator pos:start="209:38" pos:end="209:39">-&gt;</operator><name pos:start="209:40" pos:end="209:42">pps</name><operator pos:start="209:43" pos:end="209:44">-&gt;</operator><name pos:start="209:45" pos:end="209:74">scaling_list_data_present_flag</name></name></expr> ?</condition><then pos:start="211:13" pos:end="211:33">

            <expr pos:start="211:13" pos:end="211:33"><operator pos:start="211:13" pos:end="211:13">&amp;</operator><name pos:start="211:14" pos:end="211:33"><name pos:start="211:14" pos:end="211:14">s</name><operator pos:start="211:15" pos:end="211:16">-&gt;</operator><name pos:start="211:17" pos:end="211:19">pps</name><operator pos:start="211:20" pos:end="211:21">-&gt;</operator><name pos:start="211:22" pos:end="211:33">scaling_list</name></name></expr> </then><else pos:start="211:35" pos:end="211:57">: <expr pos:start="211:37" pos:end="211:57"><operator pos:start="211:37" pos:end="211:37">&amp;</operator><name pos:start="211:38" pos:end="211:57"><name pos:start="211:38" pos:end="211:38">s</name><operator pos:start="211:39" pos:end="211:40">-&gt;</operator><name pos:start="211:41" pos:end="211:43">sps</name><operator pos:start="211:44" pos:end="211:45">-&gt;</operator><name pos:start="211:46" pos:end="211:57">scaling_list</name></name></expr></else></ternary></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="213:13" pos:end="213:59"><decl pos:start="213:13" pos:end="213:58"><type pos:start="213:13" pos:end="213:15"><name pos:start="213:13" pos:end="213:15">int</name></type> <name pos:start="213:17" pos:end="213:25">matrix_id</name> <init pos:start="213:27" pos:end="213:58">= <expr pos:start="213:29" pos:end="213:58"><name pos:start="213:29" pos:end="213:44"><name pos:start="213:29" pos:end="213:30">lc</name><operator pos:start="213:31" pos:end="213:32">-&gt;</operator><name pos:start="213:33" pos:end="213:34">cu</name><operator pos:start="213:35" pos:end="213:35">.</operator><name pos:start="213:36" pos:end="213:44">pred_mode</name></name> <operator pos:start="213:46" pos:end="213:47">!=</operator> <name pos:start="213:49" pos:end="213:58">MODE_INTRA</name></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="217:13" pos:end="217:46"><expr pos:start="217:13" pos:end="217:45"><name pos:start="217:13" pos:end="217:21">matrix_id</name> <operator pos:start="217:23" pos:end="217:23">=</operator> <literal type="number" pos:start="217:25" pos:end="217:25">3</literal> <operator pos:start="217:27" pos:end="217:27">*</operator> <name pos:start="217:29" pos:end="217:37">matrix_id</name> <operator pos:start="217:39" pos:end="217:39">+</operator> <name pos:start="217:41" pos:end="217:45">c_idx</name></expr>;</expr_stmt>



            <expr_stmt pos:start="221:13" pos:end="221:66"><expr pos:start="221:13" pos:end="221:65"><name pos:start="221:13" pos:end="221:24">scale_matrix</name> <operator pos:start="221:26" pos:end="221:26">=</operator> <name pos:start="221:28" pos:end="221:65"><name pos:start="221:28" pos:end="221:29">sl</name><operator pos:start="221:30" pos:end="221:31">-&gt;</operator><name pos:start="221:32" pos:end="221:33">sl</name><index pos:start="221:34" pos:end="221:54">[<expr pos:start="221:35" pos:end="221:53"><name pos:start="221:35" pos:end="221:49">log2_trafo_size</name> <operator pos:start="221:51" pos:end="221:51">-</operator> <literal type="number" pos:start="221:53" pos:end="221:53">2</literal></expr>]</index><index pos:start="221:55" pos:end="221:65">[<expr pos:start="221:56" pos:end="221:64"><name pos:start="221:56" pos:end="221:64">matrix_id</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="223:13" pos:end="225:69"><if pos:start="223:13" pos:end="225:69">if <condition pos:start="223:16" pos:end="223:37">(<expr pos:start="223:17" pos:end="223:36"><name pos:start="223:17" pos:end="223:31">log2_trafo_size</name> <operator pos:start="223:33" pos:end="223:34">&gt;=</operator> <literal type="number" pos:start="223:36" pos:end="223:36">4</literal></expr>)</condition><block type="pseudo" pos:start="225:17" pos:end="225:69"><block_content pos:start="225:17" pos:end="225:69">

                <expr_stmt pos:start="225:17" pos:end="225:69"><expr pos:start="225:17" pos:end="225:68"><name pos:start="225:17" pos:end="225:24">dc_scale</name> <operator pos:start="225:26" pos:end="225:26">=</operator> <name pos:start="225:28" pos:end="225:68"><name pos:start="225:28" pos:end="225:29">sl</name><operator pos:start="225:30" pos:end="225:31">-&gt;</operator><name pos:start="225:32" pos:end="225:36">sl_dc</name><index pos:start="225:37" pos:end="225:57">[<expr pos:start="225:38" pos:end="225:56"><name pos:start="225:38" pos:end="225:52">log2_trafo_size</name> <operator pos:start="225:54" pos:end="225:54">-</operator> <literal type="number" pos:start="225:56" pos:end="225:56">4</literal></expr>]</index><index pos:start="225:58" pos:end="225:68">[<expr pos:start="225:59" pos:end="225:67"><name pos:start="225:59" pos:end="225:67">matrix_id</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="229:7" pos:end="239:5">else <block pos:start="229:12" pos:end="239:5">{<block_content pos:start="231:9" pos:end="237:25">

        <expr_stmt pos:start="231:9" pos:end="231:25"><expr pos:start="231:9" pos:end="231:24"><name pos:start="231:9" pos:end="231:13">shift</name>        <operator pos:start="231:22" pos:end="231:22">=</operator> <literal type="number" pos:start="231:24" pos:end="231:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="233:9" pos:end="233:25"><expr pos:start="233:9" pos:end="233:24"><name pos:start="233:9" pos:end="233:11">add</name>          <operator pos:start="233:22" pos:end="233:22">=</operator> <literal type="number" pos:start="233:24" pos:end="233:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="235:9" pos:end="235:25"><expr pos:start="235:9" pos:end="235:24"><name pos:start="235:9" pos:end="235:13">scale</name>        <operator pos:start="235:22" pos:end="235:22">=</operator> <literal type="number" pos:start="235:24" pos:end="235:24">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="237:9" pos:end="237:25"><expr pos:start="237:9" pos:end="237:24"><name pos:start="237:9" pos:end="237:16">dc_scale</name>     <operator pos:start="237:22" pos:end="237:22">=</operator> <literal type="number" pos:start="237:24" pos:end="237:24">0</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="243:5" pos:end="255:5"><if pos:start="243:5" pos:end="255:5">if <condition pos:start="243:8" pos:end="245:66">(<expr pos:start="243:9" pos:end="245:65"><name pos:start="243:9" pos:end="243:24"><name pos:start="243:9" pos:end="243:10">lc</name><operator pos:start="243:11" pos:end="243:12">-&gt;</operator><name pos:start="243:13" pos:end="243:14">cu</name><operator pos:start="243:15" pos:end="243:15">.</operator><name pos:start="243:16" pos:end="243:24">pred_mode</name></name> <operator pos:start="243:26" pos:end="243:27">==</operator> <name pos:start="243:29" pos:end="243:38">MODE_INTER</name> <operator pos:start="243:40" pos:end="243:41">&amp;&amp;</operator> <name pos:start="243:43" pos:end="243:77"><name pos:start="243:43" pos:end="243:43">s</name><operator pos:start="243:44" pos:end="243:45">-&gt;</operator><name pos:start="243:46" pos:end="243:48">sps</name><operator pos:start="243:49" pos:end="243:50">-&gt;</operator><name pos:start="243:51" pos:end="243:77">explicit_rdpcm_enabled_flag</name></name> <operator pos:start="243:79" pos:end="243:80">&amp;&amp;</operator>

        <operator pos:start="245:9" pos:end="245:9">(</operator><name pos:start="245:10" pos:end="245:28">transform_skip_flag</name> <operator pos:start="245:30" pos:end="245:31">||</operator> <name pos:start="245:33" pos:end="245:64"><name pos:start="245:33" pos:end="245:34">lc</name><operator pos:start="245:35" pos:end="245:36">-&gt;</operator><name pos:start="245:37" pos:end="245:38">cu</name><operator pos:start="245:39" pos:end="245:39">.</operator><name pos:start="245:40" pos:end="245:64">cu_transquant_bypass_flag</name></name><operator pos:start="245:65" pos:end="245:65">)</operator></expr>)</condition> <block pos:start="245:68" pos:end="255:5">{<block_content pos:start="247:9" pos:end="253:9">

        <expr_stmt pos:start="247:9" pos:end="247:67"><expr pos:start="247:9" pos:end="247:66"><name pos:start="247:9" pos:end="247:27">explicit_rdpcm_flag</name> <operator pos:start="247:29" pos:end="247:29">=</operator> <call pos:start="247:31" pos:end="247:66"><name pos:start="247:31" pos:end="247:56">explicit_rdpcm_flag_decode</name><argument_list pos:start="247:57" pos:end="247:66">(<argument pos:start="247:58" pos:end="247:58"><expr pos:start="247:58" pos:end="247:58"><name pos:start="247:58" pos:end="247:58">s</name></expr></argument>, <argument pos:start="247:61" pos:end="247:65"><expr pos:start="247:61" pos:end="247:65"><name pos:start="247:61" pos:end="247:65">c_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="249:9" pos:end="253:9"><if pos:start="249:9" pos:end="253:9">if <condition pos:start="249:12" pos:end="249:32">(<expr pos:start="249:13" pos:end="249:31"><name pos:start="249:13" pos:end="249:31">explicit_rdpcm_flag</name></expr>)</condition> <block pos:start="249:34" pos:end="253:9">{<block_content pos:start="251:13" pos:end="251:79">

            <expr_stmt pos:start="251:13" pos:end="251:79"><expr pos:start="251:13" pos:end="251:78"><name pos:start="251:13" pos:end="251:35">explicit_rdpcm_dir_flag</name> <operator pos:start="251:37" pos:end="251:37">=</operator> <call pos:start="251:39" pos:end="251:78"><name pos:start="251:39" pos:end="251:68">explicit_rdpcm_dir_flag_decode</name><argument_list pos:start="251:69" pos:end="251:78">(<argument pos:start="251:70" pos:end="251:70"><expr pos:start="251:70" pos:end="251:70"><name pos:start="251:70" pos:end="251:70">s</name></expr></argument>, <argument pos:start="251:73" pos:end="251:77"><expr pos:start="251:73" pos:end="251:77"><name pos:start="251:73" pos:end="251:77">c_idx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="259:5" pos:end="261:97"><expr pos:start="259:5" pos:end="261:96"><call pos:start="259:5" pos:end="261:96"><name pos:start="259:5" pos:end="259:43">last_significant_coeff_xy_prefix_decode</name><argument_list pos:start="259:44" pos:end="261:96">(<argument pos:start="259:45" pos:end="259:45"><expr pos:start="259:45" pos:end="259:45"><name pos:start="259:45" pos:end="259:45">s</name></expr></argument>, <argument pos:start="259:48" pos:end="259:52"><expr pos:start="259:48" pos:end="259:52"><name pos:start="259:48" pos:end="259:52">c_idx</name></expr></argument>, <argument pos:start="259:55" pos:end="259:69"><expr pos:start="259:55" pos:end="259:69"><name pos:start="259:55" pos:end="259:69">log2_trafo_size</name></expr></argument>,

                                           <argument pos:start="261:44" pos:end="261:68"><expr pos:start="261:44" pos:end="261:68"><operator pos:start="261:44" pos:end="261:44">&amp;</operator><name pos:start="261:45" pos:end="261:68">last_significant_coeff_x</name></expr></argument>, <argument pos:start="261:71" pos:end="261:95"><expr pos:start="261:71" pos:end="261:95"><operator pos:start="261:71" pos:end="261:71">&amp;</operator><name pos:start="261:72" pos:end="261:95">last_significant_coeff_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="265:5" pos:end="275:5"><if pos:start="265:5" pos:end="275:5">if <condition pos:start="265:8" pos:end="265:37">(<expr pos:start="265:9" pos:end="265:36"><name pos:start="265:9" pos:end="265:32">last_significant_coeff_x</name> <operator pos:start="265:34" pos:end="265:34">&gt;</operator> <literal type="number" pos:start="265:36" pos:end="265:36">3</literal></expr>)</condition> <block pos:start="265:39" pos:end="275:5">{<block_content pos:start="267:9" pos:end="273:15">

        <decl_stmt pos:start="267:9" pos:end="267:87"><decl pos:start="267:9" pos:end="267:86"><type pos:start="267:9" pos:end="267:11"><name pos:start="267:9" pos:end="267:11">int</name></type> <name pos:start="267:13" pos:end="267:18">suffix</name> <init pos:start="267:20" pos:end="267:86">= <expr pos:start="267:22" pos:end="267:86"><call pos:start="267:22" pos:end="267:86"><name pos:start="267:22" pos:end="267:57">last_significant_coeff_suffix_decode</name><argument_list pos:start="267:58" pos:end="267:86">(<argument pos:start="267:59" pos:end="267:59"><expr pos:start="267:59" pos:end="267:59"><name pos:start="267:59" pos:end="267:59">s</name></expr></argument>, <argument pos:start="267:62" pos:end="267:85"><expr pos:start="267:62" pos:end="267:85"><name pos:start="267:62" pos:end="267:85">last_significant_coeff_x</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="269:9" pos:end="273:15"><expr pos:start="269:9" pos:end="273:14"><name pos:start="269:9" pos:end="269:32">last_significant_coeff_x</name> <operator pos:start="269:34" pos:end="269:34">=</operator> <operator pos:start="269:36" pos:end="269:36">(</operator><literal type="number" pos:start="269:37" pos:end="269:37">1</literal> <operator pos:start="269:39" pos:end="269:40">&lt;&lt;</operator> <operator pos:start="269:42" pos:end="269:42">(</operator><operator pos:start="269:43" pos:end="269:43">(</operator><name pos:start="269:44" pos:end="269:67">last_significant_coeff_x</name> <operator pos:start="269:69" pos:end="269:70">&gt;&gt;</operator> <literal type="number" pos:start="269:72" pos:end="269:72">1</literal><operator pos:start="269:73" pos:end="269:73">)</operator> <operator pos:start="269:75" pos:end="269:75">-</operator> <literal type="number" pos:start="269:77" pos:end="269:77">1</literal><operator pos:start="269:78" pos:end="269:78">)</operator><operator pos:start="269:79" pos:end="269:79">)</operator> <operator pos:start="269:81" pos:end="269:81">*</operator>

        <operator pos:start="271:9" pos:end="271:9">(</operator><literal type="number" pos:start="271:10" pos:end="271:12">2</literal> <operator pos:start="271:12" pos:end="271:12">+</operator> <operator pos:start="271:14" pos:end="271:14">(</operator><name pos:start="271:15" pos:end="271:38">last_significant_coeff_x</name> <operator pos:start="271:40" pos:end="271:40">&amp;</operator> <literal type="number" pos:start="271:42" pos:end="271:42">1</literal><operator pos:start="271:43" pos:end="271:43">)</operator><operator pos:start="271:44" pos:end="271:44">)</operator> <operator pos:start="271:46" pos:end="271:46">+</operator>

        <name pos:start="273:9" pos:end="273:14">suffix</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="279:5" pos:end="289:5"><if pos:start="279:5" pos:end="289:5">if <condition pos:start="279:8" pos:end="279:37">(<expr pos:start="279:9" pos:end="279:36"><name pos:start="279:9" pos:end="279:32">last_significant_coeff_y</name> <operator pos:start="279:34" pos:end="279:34">&gt;</operator> <literal type="number" pos:start="279:36" pos:end="279:36">3</literal></expr>)</condition> <block pos:start="279:39" pos:end="289:5">{<block_content pos:start="281:9" pos:end="287:15">

        <decl_stmt pos:start="281:9" pos:end="281:87"><decl pos:start="281:9" pos:end="281:86"><type pos:start="281:9" pos:end="281:11"><name pos:start="281:9" pos:end="281:11">int</name></type> <name pos:start="281:13" pos:end="281:18">suffix</name> <init pos:start="281:20" pos:end="281:86">= <expr pos:start="281:22" pos:end="281:86"><call pos:start="281:22" pos:end="281:86"><name pos:start="281:22" pos:end="281:57">last_significant_coeff_suffix_decode</name><argument_list pos:start="281:58" pos:end="281:86">(<argument pos:start="281:59" pos:end="281:59"><expr pos:start="281:59" pos:end="281:59"><name pos:start="281:59" pos:end="281:59">s</name></expr></argument>, <argument pos:start="281:62" pos:end="281:85"><expr pos:start="281:62" pos:end="281:85"><name pos:start="281:62" pos:end="281:85">last_significant_coeff_y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="283:9" pos:end="287:15"><expr pos:start="283:9" pos:end="287:14"><name pos:start="283:9" pos:end="283:32">last_significant_coeff_y</name> <operator pos:start="283:34" pos:end="283:34">=</operator> <operator pos:start="283:36" pos:end="283:36">(</operator><literal type="number" pos:start="283:37" pos:end="283:37">1</literal> <operator pos:start="283:39" pos:end="283:40">&lt;&lt;</operator> <operator pos:start="283:42" pos:end="283:42">(</operator><operator pos:start="283:43" pos:end="283:43">(</operator><name pos:start="283:44" pos:end="283:67">last_significant_coeff_y</name> <operator pos:start="283:69" pos:end="283:70">&gt;&gt;</operator> <literal type="number" pos:start="283:72" pos:end="283:72">1</literal><operator pos:start="283:73" pos:end="283:73">)</operator> <operator pos:start="283:75" pos:end="283:75">-</operator> <literal type="number" pos:start="283:77" pos:end="283:77">1</literal><operator pos:start="283:78" pos:end="283:78">)</operator><operator pos:start="283:79" pos:end="283:79">)</operator> <operator pos:start="283:81" pos:end="283:81">*</operator>

        <operator pos:start="285:9" pos:end="285:9">(</operator><literal type="number" pos:start="285:10" pos:end="285:12">2</literal> <operator pos:start="285:12" pos:end="285:12">+</operator> <operator pos:start="285:14" pos:end="285:14">(</operator><name pos:start="285:15" pos:end="285:38">last_significant_coeff_y</name> <operator pos:start="285:40" pos:end="285:40">&amp;</operator> <literal type="number" pos:start="285:42" pos:end="285:42">1</literal><operator pos:start="285:43" pos:end="285:43">)</operator><operator pos:start="285:44" pos:end="285:44">)</operator> <operator pos:start="285:46" pos:end="285:46">+</operator>

        <name pos:start="287:9" pos:end="287:14">suffix</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="293:5" pos:end="295:72"><if pos:start="293:5" pos:end="295:72">if <condition pos:start="293:8" pos:end="293:30">(<expr pos:start="293:9" pos:end="293:29"><name pos:start="293:9" pos:end="293:16">scan_idx</name> <operator pos:start="293:18" pos:end="293:19">==</operator> <name pos:start="293:21" pos:end="293:29">SCAN_VERT</name></expr>)</condition><block type="pseudo" pos:start="295:9" pos:end="295:72"><block_content pos:start="295:9" pos:end="295:72">

        <expr_stmt pos:start="295:9" pos:end="295:72"><expr pos:start="295:9" pos:end="295:71"><call pos:start="295:9" pos:end="295:71"><name pos:start="295:9" pos:end="295:14">FFSWAP</name><argument_list pos:start="295:15" pos:end="295:71">(<argument pos:start="295:16" pos:end="295:18"><expr pos:start="295:16" pos:end="295:18"><name pos:start="295:16" pos:end="295:18">int</name></expr></argument>, <argument pos:start="295:21" pos:end="295:44"><expr pos:start="295:21" pos:end="295:44"><name pos:start="295:21" pos:end="295:44">last_significant_coeff_x</name></expr></argument>, <argument pos:start="295:47" pos:end="295:70"><expr pos:start="295:47" pos:end="295:70"><name pos:start="295:47" pos:end="295:70">last_significant_coeff_y</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="299:5" pos:end="299:50"><expr pos:start="299:5" pos:end="299:49"><name pos:start="299:5" pos:end="299:17">x_cg_last_sig</name> <operator pos:start="299:19" pos:end="299:19">=</operator> <name pos:start="299:21" pos:end="299:44">last_significant_coeff_x</name> <operator pos:start="299:46" pos:end="299:47">&gt;&gt;</operator> <literal type="number" pos:start="299:49" pos:end="299:49">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="301:5" pos:end="301:50"><expr pos:start="301:5" pos:end="301:49"><name pos:start="301:5" pos:end="301:17">y_cg_last_sig</name> <operator pos:start="301:19" pos:end="301:19">=</operator> <name pos:start="301:21" pos:end="301:44">last_significant_coeff_y</name> <operator pos:start="301:46" pos:end="301:47">&gt;&gt;</operator> <literal type="number" pos:start="301:49" pos:end="301:49">2</literal></expr>;</expr_stmt>



    <switch pos:start="305:5" pos:end="385:5">switch <condition pos:start="305:12" pos:end="305:21">(<expr pos:start="305:13" pos:end="305:20"><name pos:start="305:13" pos:end="305:20">scan_idx</name></expr>)</condition> <block pos:start="305:23" pos:end="385:5">{<block_content pos:start="307:5" pos:end="383:14">

    <case pos:start="307:5" pos:end="307:19">case <expr pos:start="307:10" pos:end="307:18"><name pos:start="307:10" pos:end="307:18">SCAN_DIAG</name></expr>:</case> <block pos:start="307:21" pos:end="355:5">{<block_content pos:start="309:9" pos:end="353:14">

        <decl_stmt pos:start="309:9" pos:end="309:52"><decl pos:start="309:9" pos:end="309:51"><type pos:start="309:9" pos:end="309:11"><name pos:start="309:9" pos:end="309:11">int</name></type> <name pos:start="309:13" pos:end="309:20">last_x_c</name> <init pos:start="309:22" pos:end="309:51">= <expr pos:start="309:24" pos:end="309:51"><name pos:start="309:24" pos:end="309:47">last_significant_coeff_x</name> <operator pos:start="309:49" pos:end="309:49">&amp;</operator> <literal type="number" pos:start="309:51" pos:end="309:51">3</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="311:9" pos:end="311:52"><decl pos:start="311:9" pos:end="311:51"><type pos:start="311:9" pos:end="311:11"><name pos:start="311:9" pos:end="311:11">int</name></type> <name pos:start="311:13" pos:end="311:20">last_y_c</name> <init pos:start="311:22" pos:end="311:51">= <expr pos:start="311:24" pos:end="311:51"><name pos:start="311:24" pos:end="311:47">last_significant_coeff_y</name> <operator pos:start="311:49" pos:end="311:49">&amp;</operator> <literal type="number" pos:start="311:51" pos:end="311:51">3</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="315:9" pos:end="315:44"><expr pos:start="315:9" pos:end="315:43"><name pos:start="315:9" pos:end="315:18">scan_x_off</name> <operator pos:start="315:20" pos:end="315:20">=</operator> <name pos:start="315:22" pos:end="315:43">ff_hevc_diag_scan4x4_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:44"><expr pos:start="317:9" pos:end="317:43"><name pos:start="317:9" pos:end="317:18">scan_y_off</name> <operator pos:start="317:20" pos:end="317:20">=</operator> <name pos:start="317:22" pos:end="317:43">ff_hevc_diag_scan4x4_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="319:9" pos:end="319:57"><expr pos:start="319:9" pos:end="319:56"><name pos:start="319:9" pos:end="319:17">num_coeff</name> <operator pos:start="319:19" pos:end="319:19">=</operator> <name pos:start="319:21" pos:end="319:56"><name pos:start="319:21" pos:end="319:36">diag_scan4x4_inv</name><index pos:start="319:37" pos:end="319:46">[<expr pos:start="319:38" pos:end="319:45"><name pos:start="319:38" pos:end="319:45">last_y_c</name></expr>]</index><index pos:start="319:47" pos:end="319:56">[<expr pos:start="319:48" pos:end="319:55"><name pos:start="319:48" pos:end="319:55">last_x_c</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="321:9" pos:end="351:9"><if pos:start="321:9" pos:end="327:9">if <condition pos:start="321:12" pos:end="321:28">(<expr pos:start="321:13" pos:end="321:27"><name pos:start="321:13" pos:end="321:22">trafo_size</name> <operator pos:start="321:24" pos:end="321:25">==</operator> <literal type="number" pos:start="321:27" pos:end="321:27">4</literal></expr>)</condition> <block pos:start="321:30" pos:end="327:9">{<block_content pos:start="323:13" pos:end="325:33">

            <expr_stmt pos:start="323:13" pos:end="323:33"><expr pos:start="323:13" pos:end="323:32"><name pos:start="323:13" pos:end="323:21">scan_x_cg</name> <operator pos:start="323:23" pos:end="323:23">=</operator> <name pos:start="323:25" pos:end="323:32">scan_1x1</name></expr>;</expr_stmt>

            <expr_stmt pos:start="325:13" pos:end="325:33"><expr pos:start="325:13" pos:end="325:32"><name pos:start="325:13" pos:end="325:21">scan_y_cg</name> <operator pos:start="325:23" pos:end="325:23">=</operator> <name pos:start="325:25" pos:end="325:32">scan_1x1</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="327:11" pos:end="335:9">else if <condition pos:start="327:19" pos:end="327:35">(<expr pos:start="327:20" pos:end="327:34"><name pos:start="327:20" pos:end="327:29">trafo_size</name> <operator pos:start="327:31" pos:end="327:32">==</operator> <literal type="number" pos:start="327:34" pos:end="327:34">8</literal></expr>)</condition> <block pos:start="327:37" pos:end="335:9">{<block_content pos:start="329:13" pos:end="333:39">

            <expr_stmt pos:start="329:13" pos:end="329:77"><expr pos:start="329:13" pos:end="329:76"><name pos:start="329:13" pos:end="329:21">num_coeff</name> <operator pos:start="329:23" pos:end="329:24">+=</operator> <name pos:start="329:26" pos:end="329:71"><name pos:start="329:26" pos:end="329:41">diag_scan2x2_inv</name><index pos:start="329:42" pos:end="329:56">[<expr pos:start="329:43" pos:end="329:55"><name pos:start="329:43" pos:end="329:55">y_cg_last_sig</name></expr>]</index><index pos:start="329:57" pos:end="329:71">[<expr pos:start="329:58" pos:end="329:70"><name pos:start="329:58" pos:end="329:70">x_cg_last_sig</name></expr>]</index></name> <operator pos:start="329:73" pos:end="329:74">&lt;&lt;</operator> <literal type="number" pos:start="329:76" pos:end="329:76">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="331:13" pos:end="331:39"><expr pos:start="331:13" pos:end="331:38"><name pos:start="331:13" pos:end="331:21">scan_x_cg</name> <operator pos:start="331:23" pos:end="331:23">=</operator> <name pos:start="331:25" pos:end="331:38">diag_scan2x2_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="333:13" pos:end="333:39"><expr pos:start="333:13" pos:end="333:38"><name pos:start="333:13" pos:end="333:21">scan_y_cg</name> <operator pos:start="333:23" pos:end="333:23">=</operator> <name pos:start="333:25" pos:end="333:38">diag_scan2x2_y</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="335:11" pos:end="343:9">else if <condition pos:start="335:19" pos:end="335:36">(<expr pos:start="335:20" pos:end="335:35"><name pos:start="335:20" pos:end="335:29">trafo_size</name> <operator pos:start="335:31" pos:end="335:32">==</operator> <literal type="number" pos:start="335:34" pos:end="335:35">16</literal></expr>)</condition> <block pos:start="335:38" pos:end="343:9">{<block_content pos:start="337:13" pos:end="341:47">

            <expr_stmt pos:start="337:13" pos:end="337:77"><expr pos:start="337:13" pos:end="337:76"><name pos:start="337:13" pos:end="337:21">num_coeff</name> <operator pos:start="337:23" pos:end="337:24">+=</operator> <name pos:start="337:26" pos:end="337:71"><name pos:start="337:26" pos:end="337:41">diag_scan4x4_inv</name><index pos:start="337:42" pos:end="337:56">[<expr pos:start="337:43" pos:end="337:55"><name pos:start="337:43" pos:end="337:55">y_cg_last_sig</name></expr>]</index><index pos:start="337:57" pos:end="337:71">[<expr pos:start="337:58" pos:end="337:70"><name pos:start="337:58" pos:end="337:70">x_cg_last_sig</name></expr>]</index></name> <operator pos:start="337:73" pos:end="337:74">&lt;&lt;</operator> <literal type="number" pos:start="337:76" pos:end="337:76">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="339:13" pos:end="339:47"><expr pos:start="339:13" pos:end="339:46"><name pos:start="339:13" pos:end="339:21">scan_x_cg</name> <operator pos:start="339:23" pos:end="339:23">=</operator> <name pos:start="339:25" pos:end="339:46">ff_hevc_diag_scan4x4_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="341:13" pos:end="341:47"><expr pos:start="341:13" pos:end="341:46"><name pos:start="341:13" pos:end="341:21">scan_y_cg</name> <operator pos:start="341:23" pos:end="341:23">=</operator> <name pos:start="341:25" pos:end="341:46">ff_hevc_diag_scan4x4_y</name></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="343:11" pos:end="351:9">else <block pos:start="343:16" pos:end="351:9">{<block_content pos:start="345:13" pos:end="349:47"> <comment type="line" pos:start="343:18" pos:end="343:36">// trafo_size == 32</comment>

            <expr_stmt pos:start="345:13" pos:end="345:77"><expr pos:start="345:13" pos:end="345:76"><name pos:start="345:13" pos:end="345:21">num_coeff</name> <operator pos:start="345:23" pos:end="345:24">+=</operator> <name pos:start="345:26" pos:end="345:71"><name pos:start="345:26" pos:end="345:41">diag_scan8x8_inv</name><index pos:start="345:42" pos:end="345:56">[<expr pos:start="345:43" pos:end="345:55"><name pos:start="345:43" pos:end="345:55">y_cg_last_sig</name></expr>]</index><index pos:start="345:57" pos:end="345:71">[<expr pos:start="345:58" pos:end="345:70"><name pos:start="345:58" pos:end="345:70">x_cg_last_sig</name></expr>]</index></name> <operator pos:start="345:73" pos:end="345:74">&lt;&lt;</operator> <literal type="number" pos:start="345:76" pos:end="345:76">4</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="347:13" pos:end="347:47"><expr pos:start="347:13" pos:end="347:46"><name pos:start="347:13" pos:end="347:21">scan_x_cg</name> <operator pos:start="347:23" pos:end="347:23">=</operator> <name pos:start="347:25" pos:end="347:46">ff_hevc_diag_scan8x8_x</name></expr>;</expr_stmt>

            <expr_stmt pos:start="349:13" pos:end="349:47"><expr pos:start="349:13" pos:end="349:46"><name pos:start="349:13" pos:end="349:21">scan_y_cg</name> <operator pos:start="349:23" pos:end="349:23">=</operator> <name pos:start="349:25" pos:end="349:46">ff_hevc_diag_scan8x8_y</name></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="353:9" pos:end="353:14">break;</break>

    </block_content>}</block>

    <case pos:start="357:5" pos:end="357:20">case <expr pos:start="357:10" pos:end="357:19"><name pos:start="357:10" pos:end="357:19">SCAN_HORIZ</name></expr>:</case>

        <expr_stmt pos:start="359:9" pos:end="359:36"><expr pos:start="359:9" pos:end="359:35"><name pos:start="359:9" pos:end="359:17">scan_x_cg</name> <operator pos:start="359:19" pos:end="359:19">=</operator> <name pos:start="359:21" pos:end="359:35">horiz_scan2x2_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="361:9" pos:end="361:36"><expr pos:start="361:9" pos:end="361:35"><name pos:start="361:9" pos:end="361:17">scan_y_cg</name> <operator pos:start="361:19" pos:end="361:19">=</operator> <name pos:start="361:21" pos:end="361:35">horiz_scan2x2_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="363:9" pos:end="363:37"><expr pos:start="363:9" pos:end="363:36"><name pos:start="363:9" pos:end="363:18">scan_x_off</name> <operator pos:start="363:20" pos:end="363:20">=</operator> <name pos:start="363:22" pos:end="363:36">horiz_scan4x4_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="365:9" pos:end="365:37"><expr pos:start="365:9" pos:end="365:36"><name pos:start="365:9" pos:end="365:18">scan_y_off</name> <operator pos:start="365:20" pos:end="365:20">=</operator> <name pos:start="365:22" pos:end="365:36">horiz_scan4x4_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="367:9" pos:end="367:90"><expr pos:start="367:9" pos:end="367:89"><name pos:start="367:9" pos:end="367:17">num_coeff</name> <operator pos:start="367:19" pos:end="367:19">=</operator> <name pos:start="367:21" pos:end="367:89"><name pos:start="367:21" pos:end="367:37">horiz_scan8x8_inv</name><index pos:start="367:38" pos:end="367:63">[<expr pos:start="367:39" pos:end="367:62"><name pos:start="367:39" pos:end="367:62">last_significant_coeff_y</name></expr>]</index><index pos:start="367:64" pos:end="367:89">[<expr pos:start="367:65" pos:end="367:88"><name pos:start="367:65" pos:end="367:88">last_significant_coeff_x</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="369:9" pos:end="369:14">break;</break>

    <default pos:start="371:5" pos:end="371:12">default:</default> <comment type="line" pos:start="371:14" pos:end="371:24">//SCAN_VERT</comment>

        <expr_stmt pos:start="373:9" pos:end="373:36"><expr pos:start="373:9" pos:end="373:35"><name pos:start="373:9" pos:end="373:17">scan_x_cg</name> <operator pos:start="373:19" pos:end="373:19">=</operator> <name pos:start="373:21" pos:end="373:35">horiz_scan2x2_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="375:9" pos:end="375:36"><expr pos:start="375:9" pos:end="375:35"><name pos:start="375:9" pos:end="375:17">scan_y_cg</name> <operator pos:start="375:19" pos:end="375:19">=</operator> <name pos:start="375:21" pos:end="375:35">horiz_scan2x2_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="377:9" pos:end="377:37"><expr pos:start="377:9" pos:end="377:36"><name pos:start="377:9" pos:end="377:18">scan_x_off</name> <operator pos:start="377:20" pos:end="377:20">=</operator> <name pos:start="377:22" pos:end="377:36">horiz_scan4x4_y</name></expr>;</expr_stmt>

        <expr_stmt pos:start="379:9" pos:end="379:37"><expr pos:start="379:9" pos:end="379:36"><name pos:start="379:9" pos:end="379:18">scan_y_off</name> <operator pos:start="379:20" pos:end="379:20">=</operator> <name pos:start="379:22" pos:end="379:36">horiz_scan4x4_x</name></expr>;</expr_stmt>

        <expr_stmt pos:start="381:9" pos:end="381:90"><expr pos:start="381:9" pos:end="381:89"><name pos:start="381:9" pos:end="381:17">num_coeff</name> <operator pos:start="381:19" pos:end="381:19">=</operator> <name pos:start="381:21" pos:end="381:89"><name pos:start="381:21" pos:end="381:37">horiz_scan8x8_inv</name><index pos:start="381:38" pos:end="381:63">[<expr pos:start="381:39" pos:end="381:62"><name pos:start="381:39" pos:end="381:62">last_significant_coeff_x</name></expr>]</index><index pos:start="381:64" pos:end="381:89">[<expr pos:start="381:65" pos:end="381:88"><name pos:start="381:65" pos:end="381:88">last_significant_coeff_y</name></expr>]</index></name></expr>;</expr_stmt>

        <break pos:start="383:9" pos:end="383:14">break;</break>

    </block_content>}</block></switch>

    <expr_stmt pos:start="387:5" pos:end="387:16"><expr pos:start="387:5" pos:end="387:15"><name pos:start="387:5" pos:end="387:13">num_coeff</name><operator pos:start="387:14" pos:end="387:15">++</operator></expr>;</expr_stmt>

    <expr_stmt pos:start="389:5" pos:end="389:43"><expr pos:start="389:5" pos:end="389:42"><name pos:start="389:5" pos:end="389:19">num_last_subset</name> <operator pos:start="389:21" pos:end="389:21">=</operator> <operator pos:start="389:23" pos:end="389:23">(</operator><name pos:start="389:24" pos:end="389:32">num_coeff</name> <operator pos:start="389:34" pos:end="389:34">-</operator> <literal type="number" pos:start="389:36" pos:end="389:36">1</literal><operator pos:start="389:37" pos:end="389:37">)</operator> <operator pos:start="389:39" pos:end="389:40">&gt;&gt;</operator> <literal type="number" pos:start="389:42" pos:end="389:42">4</literal></expr>;</expr_stmt>



    <for pos:start="393:5" pos:end="909:5">for <control pos:start="393:9" pos:end="393:42">(<init pos:start="393:10" pos:end="393:29"><expr pos:start="393:10" pos:end="393:28"><name pos:start="393:10" pos:end="393:10">i</name> <operator pos:start="393:12" pos:end="393:12">=</operator> <name pos:start="393:14" pos:end="393:28">num_last_subset</name></expr>;</init> <condition pos:start="393:31" pos:end="393:37"><expr pos:start="393:31" pos:end="393:36"><name pos:start="393:31" pos:end="393:31">i</name> <operator pos:start="393:33" pos:end="393:34">&gt;=</operator> <literal type="number" pos:start="393:36" pos:end="393:36">0</literal></expr>;</condition> <incr pos:start="393:39" pos:end="393:41"><expr pos:start="393:39" pos:end="393:41"><name pos:start="393:39" pos:end="393:39">i</name><operator pos:start="393:40" pos:end="393:41">--</operator></expr></incr>)</control> <block pos:start="393:44" pos:end="909:5">{<block_content pos:start="395:9" pos:end="907:9">

        <decl_stmt pos:start="395:9" pos:end="395:17"><decl pos:start="395:9" pos:end="395:13"><type pos:start="395:9" pos:end="395:11"><name pos:start="395:9" pos:end="395:11">int</name></type> <name pos:start="395:13" pos:end="395:13">n</name></decl>, <decl pos:start="395:16" pos:end="395:16"><type ref="prev" pos:start="395:9" pos:end="395:11"/><name pos:start="395:16" pos:end="395:16">m</name></decl>;</decl_stmt>

        <decl_stmt pos:start="397:9" pos:end="397:38"><decl pos:start="397:9" pos:end="397:16"><type pos:start="397:9" pos:end="397:11"><name pos:start="397:9" pos:end="397:11">int</name></type> <name pos:start="397:13" pos:end="397:16">x_cg</name></decl>, <decl pos:start="397:19" pos:end="397:22"><type ref="prev" pos:start="397:9" pos:end="397:11"/><name pos:start="397:19" pos:end="397:22">y_cg</name></decl>, <decl pos:start="397:25" pos:end="397:27"><type ref="prev" pos:start="397:9" pos:end="397:11"/><name pos:start="397:25" pos:end="397:27">x_c</name></decl>, <decl pos:start="397:30" pos:end="397:32"><type ref="prev" pos:start="397:9" pos:end="397:11"/><name pos:start="397:30" pos:end="397:32">y_c</name></decl>, <decl pos:start="397:35" pos:end="397:37"><type ref="prev" pos:start="397:9" pos:end="397:11"/><name pos:start="397:35" pos:end="397:37">pos</name></decl>;</decl_stmt>

        <decl_stmt pos:start="399:9" pos:end="399:40"><decl pos:start="399:9" pos:end="399:39"><type pos:start="399:9" pos:end="399:11"><name pos:start="399:9" pos:end="399:11">int</name></type> <name pos:start="399:13" pos:end="399:35">implicit_non_zero_coeff</name> <init pos:start="399:37" pos:end="399:39">= <expr pos:start="399:39" pos:end="399:39"><literal type="number" pos:start="399:39" pos:end="399:39">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="401:9" pos:end="401:34"><decl pos:start="401:9" pos:end="401:33"><type pos:start="401:9" pos:end="401:15"><name pos:start="401:9" pos:end="401:15">int64_t</name></type> <name pos:start="401:17" pos:end="401:33">trans_coeff_level</name></decl>;</decl_stmt>

        <decl_stmt pos:start="403:9" pos:end="403:25"><decl pos:start="403:9" pos:end="403:24"><type pos:start="403:9" pos:end="403:11"><name pos:start="403:9" pos:end="403:11">int</name></type> <name pos:start="403:13" pos:end="403:20">prev_sig</name> <init pos:start="403:22" pos:end="403:24">= <expr pos:start="403:24" pos:end="403:24"><literal type="number" pos:start="403:24" pos:end="403:24">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="405:9" pos:end="405:28"><decl pos:start="405:9" pos:end="405:27"><type pos:start="405:9" pos:end="405:11"><name pos:start="405:9" pos:end="405:11">int</name></type> <name pos:start="405:13" pos:end="405:18">offset</name> <init pos:start="405:20" pos:end="405:27">= <expr pos:start="405:22" pos:end="405:27"><name pos:start="405:22" pos:end="405:22">i</name> <operator pos:start="405:24" pos:end="405:25">&lt;&lt;</operator> <literal type="number" pos:start="405:27" pos:end="405:27">4</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="407:9" pos:end="407:26"><decl pos:start="407:9" pos:end="407:25"><type pos:start="407:9" pos:end="407:11"><name pos:start="407:9" pos:end="407:11">int</name></type> <name pos:start="407:13" pos:end="407:21">rice_init</name> <init pos:start="407:23" pos:end="407:25">= <expr pos:start="407:25" pos:end="407:25"><literal type="number" pos:start="407:25" pos:end="407:25">0</literal></expr></init></decl>;</decl_stmt>



        <decl_stmt pos:start="411:9" pos:end="411:47"><decl pos:start="411:9" pos:end="411:46"><type pos:start="411:9" pos:end="411:15"><name pos:start="411:9" pos:end="411:15">uint8_t</name></type> <name pos:start="411:17" pos:end="411:46"><name pos:start="411:17" pos:end="411:42">significant_coeff_flag_idx</name><index pos:start="411:43" pos:end="411:46">[<expr pos:start="411:44" pos:end="411:45"><literal type="number" pos:start="411:44" pos:end="411:45">16</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="413:9" pos:end="413:46"><decl pos:start="413:9" pos:end="413:45"><type pos:start="413:9" pos:end="413:15"><name pos:start="413:9" pos:end="413:15">uint8_t</name></type> <name pos:start="413:17" pos:end="413:41">nb_significant_coeff_flag</name> <init pos:start="413:43" pos:end="413:45">= <expr pos:start="413:45" pos:end="413:45"><literal type="number" pos:start="413:45" pos:end="413:45">0</literal></expr></init></decl>;</decl_stmt>



        <expr_stmt pos:start="417:9" pos:end="417:28"><expr pos:start="417:9" pos:end="417:27"><name pos:start="417:9" pos:end="417:12">x_cg</name> <operator pos:start="417:14" pos:end="417:14">=</operator> <name pos:start="417:16" pos:end="417:27"><name pos:start="417:16" pos:end="417:24">scan_x_cg</name><index pos:start="417:25" pos:end="417:27">[<expr pos:start="417:26" pos:end="417:26"><name pos:start="417:26" pos:end="417:26">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="419:9" pos:end="419:28"><expr pos:start="419:9" pos:end="419:27"><name pos:start="419:9" pos:end="419:12">y_cg</name> <operator pos:start="419:14" pos:end="419:14">=</operator> <name pos:start="419:16" pos:end="419:27"><name pos:start="419:16" pos:end="419:24">scan_y_cg</name><index pos:start="419:25" pos:end="419:27">[<expr pos:start="419:26" pos:end="419:26"><name pos:start="419:26" pos:end="419:26">i</name></expr>]</index></name></expr>;</expr_stmt>



        <if_stmt pos:start="423:9" pos:end="451:9"><if pos:start="423:9" pos:end="443:9">if <condition pos:start="423:12" pos:end="423:45">(<expr pos:start="423:13" pos:end="423:44"><operator pos:start="423:13" pos:end="423:13">(</operator><name pos:start="423:14" pos:end="423:14">i</name> <operator pos:start="423:16" pos:end="423:16">&lt;</operator> <name pos:start="423:18" pos:end="423:32">num_last_subset</name><operator pos:start="423:33" pos:end="423:33">)</operator> <operator pos:start="423:35" pos:end="423:36">&amp;&amp;</operator> <operator pos:start="423:38" pos:end="423:38">(</operator><name pos:start="423:39" pos:end="423:39">i</name> <operator pos:start="423:41" pos:end="423:41">&gt;</operator> <literal type="number" pos:start="423:43" pos:end="423:43">0</literal><operator pos:start="423:44" pos:end="423:44">)</operator></expr>)</condition> <block pos:start="423:47" pos:end="443:9">{<block_content pos:start="425:13" pos:end="441:40">

            <decl_stmt pos:start="425:13" pos:end="425:27"><decl pos:start="425:13" pos:end="425:26"><type pos:start="425:13" pos:end="425:15"><name pos:start="425:13" pos:end="425:15">int</name></type> <name pos:start="425:17" pos:end="425:22">ctx_cg</name> <init pos:start="425:24" pos:end="425:26">= <expr pos:start="425:26" pos:end="425:26"><literal type="number" pos:start="425:26" pos:end="425:26">0</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="427:13" pos:end="429:71"><if pos:start="427:13" pos:end="429:71">if <condition pos:start="427:16" pos:end="427:56">(<expr pos:start="427:17" pos:end="427:55"><name pos:start="427:17" pos:end="427:20">x_cg</name> <operator pos:start="427:22" pos:end="427:22">&lt;</operator> <operator pos:start="427:24" pos:end="427:24">(</operator><literal type="number" pos:start="427:25" pos:end="427:25">1</literal> <operator pos:start="427:27" pos:end="427:28">&lt;&lt;</operator> <operator pos:start="427:30" pos:end="427:30">(</operator><name pos:start="427:31" pos:end="427:45">log2_trafo_size</name> <operator pos:start="427:47" pos:end="427:47">-</operator> <literal type="number" pos:start="427:49" pos:end="427:49">2</literal><operator pos:start="427:50" pos:end="427:50">)</operator><operator pos:start="427:51" pos:end="427:51">)</operator> <operator pos:start="427:53" pos:end="427:53">-</operator> <literal type="number" pos:start="427:55" pos:end="427:55">1</literal></expr>)</condition><block type="pseudo" pos:start="429:17" pos:end="429:71"><block_content pos:start="429:17" pos:end="429:71">

                <expr_stmt pos:start="429:17" pos:end="429:71"><expr pos:start="429:17" pos:end="429:70"><name pos:start="429:17" pos:end="429:22">ctx_cg</name> <operator pos:start="429:24" pos:end="429:25">+=</operator> <name pos:start="429:27" pos:end="429:70"><name pos:start="429:27" pos:end="429:54">significant_coeff_group_flag</name><index pos:start="429:55" pos:end="429:64">[<expr pos:start="429:56" pos:end="429:63"><name pos:start="429:56" pos:end="429:59">x_cg</name> <operator pos:start="429:61" pos:end="429:61">+</operator> <literal type="number" pos:start="429:63" pos:end="429:63">1</literal></expr>]</index><index pos:start="429:65" pos:end="429:70">[<expr pos:start="429:66" pos:end="429:69"><name pos:start="429:66" pos:end="429:69">y_cg</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="431:13" pos:end="433:71"><if pos:start="431:13" pos:end="433:71">if <condition pos:start="431:16" pos:end="431:56">(<expr pos:start="431:17" pos:end="431:55"><name pos:start="431:17" pos:end="431:20">y_cg</name> <operator pos:start="431:22" pos:end="431:22">&lt;</operator> <operator pos:start="431:24" pos:end="431:24">(</operator><literal type="number" pos:start="431:25" pos:end="431:25">1</literal> <operator pos:start="431:27" pos:end="431:28">&lt;&lt;</operator> <operator pos:start="431:30" pos:end="431:30">(</operator><name pos:start="431:31" pos:end="431:45">log2_trafo_size</name> <operator pos:start="431:47" pos:end="431:47">-</operator> <literal type="number" pos:start="431:49" pos:end="431:49">2</literal><operator pos:start="431:50" pos:end="431:50">)</operator><operator pos:start="431:51" pos:end="431:51">)</operator> <operator pos:start="431:53" pos:end="431:53">-</operator> <literal type="number" pos:start="431:55" pos:end="431:55">1</literal></expr>)</condition><block type="pseudo" pos:start="433:17" pos:end="433:71"><block_content pos:start="433:17" pos:end="433:71">

                <expr_stmt pos:start="433:17" pos:end="433:71"><expr pos:start="433:17" pos:end="433:70"><name pos:start="433:17" pos:end="433:22">ctx_cg</name> <operator pos:start="433:24" pos:end="433:25">+=</operator> <name pos:start="433:27" pos:end="433:70"><name pos:start="433:27" pos:end="433:54">significant_coeff_group_flag</name><index pos:start="433:55" pos:end="433:60">[<expr pos:start="433:56" pos:end="433:59"><name pos:start="433:56" pos:end="433:59">x_cg</name></expr>]</index><index pos:start="433:61" pos:end="433:70">[<expr pos:start="433:62" pos:end="433:69"><name pos:start="433:62" pos:end="433:65">y_cg</name> <operator pos:start="433:67" pos:end="433:67">+</operator> <literal type="number" pos:start="433:69" pos:end="433:69">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="437:13" pos:end="439:70"><expr pos:start="437:13" pos:end="439:69"><name pos:start="437:13" pos:end="437:52"><name pos:start="437:13" pos:end="437:40">significant_coeff_group_flag</name><index pos:start="437:41" pos:end="437:46">[<expr pos:start="437:42" pos:end="437:45"><name pos:start="437:42" pos:end="437:45">x_cg</name></expr>]</index><index pos:start="437:47" pos:end="437:52">[<expr pos:start="437:48" pos:end="437:51"><name pos:start="437:48" pos:end="437:51">y_cg</name></expr>]</index></name> <operator pos:start="437:54" pos:end="437:54">=</operator>

                <call pos:start="439:17" pos:end="439:69"><name pos:start="439:17" pos:end="439:51">significant_coeff_group_flag_decode</name><argument_list pos:start="439:52" pos:end="439:69">(<argument pos:start="439:53" pos:end="439:53"><expr pos:start="439:53" pos:end="439:53"><name pos:start="439:53" pos:end="439:53">s</name></expr></argument>, <argument pos:start="439:56" pos:end="439:60"><expr pos:start="439:56" pos:end="439:60"><name pos:start="439:56" pos:end="439:60">c_idx</name></expr></argument>, <argument pos:start="439:63" pos:end="439:68"><expr pos:start="439:63" pos:end="439:68"><name pos:start="439:63" pos:end="439:68">ctx_cg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="441:13" pos:end="441:40"><expr pos:start="441:13" pos:end="441:39"><name pos:start="441:13" pos:end="441:35">implicit_non_zero_coeff</name> <operator pos:start="441:37" pos:end="441:37">=</operator> <literal type="number" pos:start="441:39" pos:end="441:39">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="443:11" pos:end="451:9">else <block pos:start="443:16" pos:end="451:9">{<block_content pos:start="445:13" pos:end="449:39">

            <expr_stmt pos:start="445:13" pos:end="449:39"><expr pos:start="445:13" pos:end="449:38"><name pos:start="445:13" pos:end="445:52"><name pos:start="445:13" pos:end="445:40">significant_coeff_group_flag</name><index pos:start="445:41" pos:end="445:46">[<expr pos:start="445:42" pos:end="445:45"><name pos:start="445:42" pos:end="445:45">x_cg</name></expr>]</index><index pos:start="445:47" pos:end="445:52">[<expr pos:start="445:48" pos:end="445:51"><name pos:start="445:48" pos:end="445:51">y_cg</name></expr>]</index></name> <operator pos:start="445:54" pos:end="445:54">=</operator>

            <operator pos:start="447:13" pos:end="447:13">(</operator><operator pos:start="447:14" pos:end="447:14">(</operator><name pos:start="447:15" pos:end="447:18">x_cg</name> <operator pos:start="447:20" pos:end="447:21">==</operator> <name pos:start="447:23" pos:end="447:35">x_cg_last_sig</name> <operator pos:start="447:37" pos:end="447:38">&amp;&amp;</operator> <name pos:start="447:40" pos:end="447:43">y_cg</name> <operator pos:start="447:45" pos:end="447:46">==</operator> <name pos:start="447:48" pos:end="447:60">y_cg_last_sig</name><operator pos:start="447:61" pos:end="447:61">)</operator> <operator pos:start="447:63" pos:end="447:64">||</operator>

             <operator pos:start="449:14" pos:end="449:14">(</operator><name pos:start="449:15" pos:end="449:18">x_cg</name> <operator pos:start="449:20" pos:end="449:21">==</operator> <literal type="number" pos:start="449:23" pos:end="449:23">0</literal> <operator pos:start="449:25" pos:end="449:26">&amp;&amp;</operator> <name pos:start="449:28" pos:end="449:31">y_cg</name> <operator pos:start="449:33" pos:end="449:34">==</operator> <literal type="number" pos:start="449:36" pos:end="449:36">0</literal><operator pos:start="449:37" pos:end="449:37">)</operator><operator pos:start="449:38" pos:end="449:38">)</operator></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <expr_stmt pos:start="455:9" pos:end="455:47"><expr pos:start="455:9" pos:end="455:46"><name pos:start="455:9" pos:end="455:21">last_scan_pos</name> <operator pos:start="455:23" pos:end="455:23">=</operator> <name pos:start="455:25" pos:end="455:33">num_coeff</name> <operator pos:start="455:35" pos:end="455:35">-</operator> <name pos:start="455:37" pos:end="455:42">offset</name> <operator pos:start="455:44" pos:end="455:44">-</operator> <literal type="number" pos:start="455:46" pos:end="455:46">1</literal></expr>;</expr_stmt>



        <if_stmt pos:start="459:9" pos:end="471:9"><if pos:start="459:9" pos:end="467:9">if <condition pos:start="459:12" pos:end="459:33">(<expr pos:start="459:13" pos:end="459:32"><name pos:start="459:13" pos:end="459:13">i</name> <operator pos:start="459:15" pos:end="459:16">==</operator> <name pos:start="459:18" pos:end="459:32">num_last_subset</name></expr>)</condition> <block pos:start="459:35" pos:end="467:9">{<block_content pos:start="461:13" pos:end="465:42">

            <expr_stmt pos:start="461:13" pos:end="461:38"><expr pos:start="461:13" pos:end="461:37"><name pos:start="461:13" pos:end="461:17">n_end</name> <operator pos:start="461:19" pos:end="461:19">=</operator> <name pos:start="461:21" pos:end="461:33">last_scan_pos</name> <operator pos:start="461:35" pos:end="461:35">-</operator> <literal type="number" pos:start="461:37" pos:end="461:37">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:58"><expr pos:start="463:13" pos:end="463:57"><name pos:start="463:13" pos:end="463:41"><name pos:start="463:13" pos:end="463:38">significant_coeff_flag_idx</name><index pos:start="463:39" pos:end="463:41">[<expr pos:start="463:40" pos:end="463:40"><literal type="number" pos:start="463:40" pos:end="463:40">0</literal></expr>]</index></name> <operator pos:start="463:43" pos:end="463:43">=</operator> <name pos:start="463:45" pos:end="463:57">last_scan_pos</name></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:42"><expr pos:start="465:13" pos:end="465:41"><name pos:start="465:13" pos:end="465:37">nb_significant_coeff_flag</name> <operator pos:start="465:39" pos:end="465:39">=</operator> <literal type="number" pos:start="465:41" pos:end="465:41">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="467:11" pos:end="471:9">else <block pos:start="467:16" pos:end="471:9">{<block_content pos:start="469:13" pos:end="469:23">

            <expr_stmt pos:start="469:13" pos:end="469:23"><expr pos:start="469:13" pos:end="469:22"><name pos:start="469:13" pos:end="469:17">n_end</name> <operator pos:start="469:19" pos:end="469:19">=</operator> <literal type="number" pos:start="469:21" pos:end="469:22">15</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>



        <if_stmt pos:start="475:9" pos:end="477:70"><if pos:start="475:9" pos:end="477:70">if <condition pos:start="475:12" pos:end="475:53">(<expr pos:start="475:13" pos:end="475:52"><name pos:start="475:13" pos:end="475:49"><name pos:start="475:13" pos:end="475:16">x_cg</name> <argument_list type="generic" pos:start="475:18" pos:end="475:49">&lt; <argument pos:start="475:20" pos:end="475:47"><expr pos:start="475:20" pos:end="475:47"><operator pos:start="475:20" pos:end="475:20">(</operator><operator pos:start="475:21" pos:end="475:21">(</operator><literal type="number" pos:start="475:22" pos:end="475:22">1</literal> <operator pos:start="475:24" pos:end="475:25">&lt;&lt;</operator> <name pos:start="475:27" pos:end="475:41">log2_trafo_size</name><operator pos:start="475:42" pos:end="475:42">)</operator> <operator pos:start="475:44" pos:end="475:44">-</operator> <literal type="number" pos:start="475:46" pos:end="475:46">1</literal><operator pos:start="475:47" pos:end="475:47">)</operator></expr></argument> &gt;</argument_list></name><operator pos:start="475:50" pos:end="475:50">&gt;</operator> <literal type="number" pos:start="475:52" pos:end="475:52">2</literal></expr>)</condition><block type="pseudo" pos:start="477:13" pos:end="477:70"><block_content pos:start="477:13" pos:end="477:70">

            <expr_stmt pos:start="477:13" pos:end="477:70"><expr pos:start="477:13" pos:end="477:69"><name pos:start="477:13" pos:end="477:20">prev_sig</name> <operator pos:start="477:22" pos:end="477:22">=</operator> <operator pos:start="477:24" pos:end="477:24">!</operator><operator pos:start="477:25" pos:end="477:25">!</operator><name pos:start="477:26" pos:end="477:69"><name pos:start="477:26" pos:end="477:53">significant_coeff_group_flag</name><index pos:start="477:54" pos:end="477:63">[<expr pos:start="477:55" pos:end="477:62"><name pos:start="477:55" pos:end="477:58">x_cg</name> <operator pos:start="477:60" pos:end="477:60">+</operator> <literal type="number" pos:start="477:62" pos:end="477:62">1</literal></expr>]</index><index pos:start="477:64" pos:end="477:69">[<expr pos:start="477:65" pos:end="477:68"><name pos:start="477:65" pos:end="477:68">y_cg</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="479:9" pos:end="481:78"><if pos:start="479:9" pos:end="481:78">if <condition pos:start="479:12" pos:end="479:53">(<expr pos:start="479:13" pos:end="479:52"><name pos:start="479:13" pos:end="479:49"><name pos:start="479:13" pos:end="479:16">y_cg</name> <argument_list type="generic" pos:start="479:18" pos:end="479:49">&lt; <argument pos:start="479:20" pos:end="479:47"><expr pos:start="479:20" pos:end="479:47"><operator pos:start="479:20" pos:end="479:20">(</operator><operator pos:start="479:21" pos:end="479:21">(</operator><literal type="number" pos:start="479:22" pos:end="479:22">1</literal> <operator pos:start="479:24" pos:end="479:25">&lt;&lt;</operator> <name pos:start="479:27" pos:end="479:41">log2_trafo_size</name><operator pos:start="479:42" pos:end="479:42">)</operator> <operator pos:start="479:44" pos:end="479:44">-</operator> <literal type="number" pos:start="479:46" pos:end="479:46">1</literal><operator pos:start="479:47" pos:end="479:47">)</operator></expr></argument> &gt;</argument_list></name><operator pos:start="479:50" pos:end="479:50">&gt;</operator> <literal type="number" pos:start="479:52" pos:end="479:52">2</literal></expr>)</condition><block type="pseudo" pos:start="481:13" pos:end="481:78"><block_content pos:start="481:13" pos:end="481:78">

            <expr_stmt pos:start="481:13" pos:end="481:78"><expr pos:start="481:13" pos:end="481:77"><name pos:start="481:13" pos:end="481:20">prev_sig</name> <operator pos:start="481:22" pos:end="481:23">+=</operator> <operator pos:start="481:25" pos:end="481:25">(</operator><operator pos:start="481:26" pos:end="481:26">!</operator><operator pos:start="481:27" pos:end="481:27">!</operator><name pos:start="481:28" pos:end="481:71"><name pos:start="481:28" pos:end="481:55">significant_coeff_group_flag</name><index pos:start="481:56" pos:end="481:61">[<expr pos:start="481:57" pos:end="481:60"><name pos:start="481:57" pos:end="481:60">x_cg</name></expr>]</index><index pos:start="481:62" pos:end="481:71">[<expr pos:start="481:63" pos:end="481:70"><name pos:start="481:63" pos:end="481:66">y_cg</name> <operator pos:start="481:68" pos:end="481:68">+</operator> <literal type="number" pos:start="481:70" pos:end="481:70">1</literal></expr>]</index></name> <operator pos:start="481:73" pos:end="481:74">&lt;&lt;</operator> <literal type="number" pos:start="481:76" pos:end="481:76">1</literal><operator pos:start="481:77" pos:end="481:77">)</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <if_stmt pos:start="485:9" pos:end="637:9"><if pos:start="485:9" pos:end="637:9">if <condition pos:start="485:12" pos:end="485:67">(<expr pos:start="485:13" pos:end="485:66"><name pos:start="485:13" pos:end="485:52"><name pos:start="485:13" pos:end="485:40">significant_coeff_group_flag</name><index pos:start="485:41" pos:end="485:46">[<expr pos:start="485:42" pos:end="485:45"><name pos:start="485:42" pos:end="485:45">x_cg</name></expr>]</index><index pos:start="485:47" pos:end="485:52">[<expr pos:start="485:48" pos:end="485:51"><name pos:start="485:48" pos:end="485:51">y_cg</name></expr>]</index></name> <operator pos:start="485:54" pos:end="485:55">&amp;&amp;</operator> <name pos:start="485:57" pos:end="485:61">n_end</name> <operator pos:start="485:63" pos:end="485:64">&gt;=</operator> <literal type="number" pos:start="485:66" pos:end="485:66">0</literal></expr>)</condition> <block pos:start="485:69" pos:end="637:9">{<block_content pos:start="487:13" pos:end="635:13">

            <decl_stmt pos:start="487:13" pos:end="499:14"><decl pos:start="487:13" pos:end="499:13"><type pos:start="487:13" pos:end="487:32"><specifier pos:start="487:13" pos:end="487:18">static</specifier> <specifier pos:start="487:20" pos:end="487:24">const</specifier> <name pos:start="487:26" pos:end="487:32">uint8_t</name></type> <name pos:start="487:34" pos:end="487:46"><name pos:start="487:34" pos:end="487:44">ctx_idx_map</name><index pos:start="487:45" pos:end="487:46">[]</index></name> <init pos:start="487:48" pos:end="499:13">= <expr pos:start="487:50" pos:end="499:13"><block pos:start="487:50" pos:end="499:13">{

                <expr pos:start="489:17" pos:end="489:17"><literal type="number" pos:start="489:17" pos:end="489:17">0</literal></expr>, <expr pos:start="489:20" pos:end="489:20"><literal type="number" pos:start="489:20" pos:end="489:20">1</literal></expr>, <expr pos:start="489:23" pos:end="489:23"><literal type="number" pos:start="489:23" pos:end="489:23">4</literal></expr>, <expr pos:start="489:26" pos:end="489:26"><literal type="number" pos:start="489:26" pos:end="489:26">5</literal></expr>, <expr pos:start="489:29" pos:end="489:29"><literal type="number" pos:start="489:29" pos:end="489:29">2</literal></expr>, <expr pos:start="489:32" pos:end="489:32"><literal type="number" pos:start="489:32" pos:end="489:32">3</literal></expr>, <expr pos:start="489:35" pos:end="489:35"><literal type="number" pos:start="489:35" pos:end="489:35">4</literal></expr>, <expr pos:start="489:38" pos:end="489:38"><literal type="number" pos:start="489:38" pos:end="489:38">5</literal></expr>, <expr pos:start="489:41" pos:end="489:41"><literal type="number" pos:start="489:41" pos:end="489:41">6</literal></expr>, <expr pos:start="489:44" pos:end="489:44"><literal type="number" pos:start="489:44" pos:end="489:44">6</literal></expr>, <expr pos:start="489:47" pos:end="489:47"><literal type="number" pos:start="489:47" pos:end="489:47">8</literal></expr>, <expr pos:start="489:50" pos:end="489:50"><literal type="number" pos:start="489:50" pos:end="489:50">8</literal></expr>, <expr pos:start="489:53" pos:end="489:53"><literal type="number" pos:start="489:53" pos:end="489:53">7</literal></expr>, <expr pos:start="489:56" pos:end="489:56"><literal type="number" pos:start="489:56" pos:end="489:56">7</literal></expr>, <expr pos:start="489:59" pos:end="489:59"><literal type="number" pos:start="489:59" pos:end="489:59">8</literal></expr>, <expr pos:start="489:62" pos:end="489:62"><literal type="number" pos:start="489:62" pos:end="489:62">8</literal></expr>, <comment type="line" pos:start="489:65" pos:end="489:87">// log2_trafo_size == 2</comment>

                <expr pos:start="491:17" pos:end="491:17"><literal type="number" pos:start="491:17" pos:end="491:17">1</literal></expr>, <expr pos:start="491:20" pos:end="491:20"><literal type="number" pos:start="491:20" pos:end="491:20">1</literal></expr>, <expr pos:start="491:23" pos:end="491:23"><literal type="number" pos:start="491:23" pos:end="491:23">1</literal></expr>, <expr pos:start="491:26" pos:end="491:26"><literal type="number" pos:start="491:26" pos:end="491:26">0</literal></expr>, <expr pos:start="491:29" pos:end="491:29"><literal type="number" pos:start="491:29" pos:end="491:29">1</literal></expr>, <expr pos:start="491:32" pos:end="491:32"><literal type="number" pos:start="491:32" pos:end="491:32">1</literal></expr>, <expr pos:start="491:35" pos:end="491:35"><literal type="number" pos:start="491:35" pos:end="491:35">0</literal></expr>, <expr pos:start="491:38" pos:end="491:38"><literal type="number" pos:start="491:38" pos:end="491:38">0</literal></expr>, <expr pos:start="491:41" pos:end="491:41"><literal type="number" pos:start="491:41" pos:end="491:41">1</literal></expr>, <expr pos:start="491:44" pos:end="491:44"><literal type="number" pos:start="491:44" pos:end="491:44">0</literal></expr>, <expr pos:start="491:47" pos:end="491:47"><literal type="number" pos:start="491:47" pos:end="491:47">0</literal></expr>, <expr pos:start="491:50" pos:end="491:50"><literal type="number" pos:start="491:50" pos:end="491:50">0</literal></expr>, <expr pos:start="491:53" pos:end="491:53"><literal type="number" pos:start="491:53" pos:end="491:53">0</literal></expr>, <expr pos:start="491:56" pos:end="491:56"><literal type="number" pos:start="491:56" pos:end="491:56">0</literal></expr>, <expr pos:start="491:59" pos:end="491:59"><literal type="number" pos:start="491:59" pos:end="491:59">0</literal></expr>, <expr pos:start="491:62" pos:end="491:62"><literal type="number" pos:start="491:62" pos:end="491:62">0</literal></expr>, <comment type="line" pos:start="491:65" pos:end="491:80">// prev_sig == 0</comment>

                <expr pos:start="493:17" pos:end="493:17"><literal type="number" pos:start="493:17" pos:end="493:17">2</literal></expr>, <expr pos:start="493:20" pos:end="493:20"><literal type="number" pos:start="493:20" pos:end="493:20">2</literal></expr>, <expr pos:start="493:23" pos:end="493:23"><literal type="number" pos:start="493:23" pos:end="493:23">2</literal></expr>, <expr pos:start="493:26" pos:end="493:26"><literal type="number" pos:start="493:26" pos:end="493:26">2</literal></expr>, <expr pos:start="493:29" pos:end="493:29"><literal type="number" pos:start="493:29" pos:end="493:29">1</literal></expr>, <expr pos:start="493:32" pos:end="493:32"><literal type="number" pos:start="493:32" pos:end="493:32">1</literal></expr>, <expr pos:start="493:35" pos:end="493:35"><literal type="number" pos:start="493:35" pos:end="493:35">1</literal></expr>, <expr pos:start="493:38" pos:end="493:38"><literal type="number" pos:start="493:38" pos:end="493:38">1</literal></expr>, <expr pos:start="493:41" pos:end="493:41"><literal type="number" pos:start="493:41" pos:end="493:41">0</literal></expr>, <expr pos:start="493:44" pos:end="493:44"><literal type="number" pos:start="493:44" pos:end="493:44">0</literal></expr>, <expr pos:start="493:47" pos:end="493:47"><literal type="number" pos:start="493:47" pos:end="493:47">0</literal></expr>, <expr pos:start="493:50" pos:end="493:50"><literal type="number" pos:start="493:50" pos:end="493:50">0</literal></expr>, <expr pos:start="493:53" pos:end="493:53"><literal type="number" pos:start="493:53" pos:end="493:53">0</literal></expr>, <expr pos:start="493:56" pos:end="493:56"><literal type="number" pos:start="493:56" pos:end="493:56">0</literal></expr>, <expr pos:start="493:59" pos:end="493:59"><literal type="number" pos:start="493:59" pos:end="493:59">0</literal></expr>, <expr pos:start="493:62" pos:end="493:62"><literal type="number" pos:start="493:62" pos:end="493:62">0</literal></expr>, <comment type="line" pos:start="493:65" pos:end="493:80">// prev_sig == 1</comment>

                <expr pos:start="495:17" pos:end="495:17"><literal type="number" pos:start="495:17" pos:end="495:17">2</literal></expr>, <expr pos:start="495:20" pos:end="495:20"><literal type="number" pos:start="495:20" pos:end="495:20">1</literal></expr>, <expr pos:start="495:23" pos:end="495:23"><literal type="number" pos:start="495:23" pos:end="495:23">0</literal></expr>, <expr pos:start="495:26" pos:end="495:26"><literal type="number" pos:start="495:26" pos:end="495:26">0</literal></expr>, <expr pos:start="495:29" pos:end="495:29"><literal type="number" pos:start="495:29" pos:end="495:29">2</literal></expr>, <expr pos:start="495:32" pos:end="495:32"><literal type="number" pos:start="495:32" pos:end="495:32">1</literal></expr>, <expr pos:start="495:35" pos:end="495:35"><literal type="number" pos:start="495:35" pos:end="495:35">0</literal></expr>, <expr pos:start="495:38" pos:end="495:38"><literal type="number" pos:start="495:38" pos:end="495:38">0</literal></expr>, <expr pos:start="495:41" pos:end="495:41"><literal type="number" pos:start="495:41" pos:end="495:41">2</literal></expr>, <expr pos:start="495:44" pos:end="495:44"><literal type="number" pos:start="495:44" pos:end="495:44">1</literal></expr>, <expr pos:start="495:47" pos:end="495:47"><literal type="number" pos:start="495:47" pos:end="495:47">0</literal></expr>, <expr pos:start="495:50" pos:end="495:50"><literal type="number" pos:start="495:50" pos:end="495:50">0</literal></expr>, <expr pos:start="495:53" pos:end="495:53"><literal type="number" pos:start="495:53" pos:end="495:53">2</literal></expr>, <expr pos:start="495:56" pos:end="495:56"><literal type="number" pos:start="495:56" pos:end="495:56">1</literal></expr>, <expr pos:start="495:59" pos:end="495:59"><literal type="number" pos:start="495:59" pos:end="495:59">0</literal></expr>, <expr pos:start="495:62" pos:end="495:62"><literal type="number" pos:start="495:62" pos:end="495:62">0</literal></expr>, <comment type="line" pos:start="495:65" pos:end="495:80">// prev_sig == 2</comment>

                <expr pos:start="497:17" pos:end="497:17"><literal type="number" pos:start="497:17" pos:end="497:17">2</literal></expr>, <expr pos:start="497:20" pos:end="497:20"><literal type="number" pos:start="497:20" pos:end="497:20">2</literal></expr>, <expr pos:start="497:23" pos:end="497:23"><literal type="number" pos:start="497:23" pos:end="497:23">2</literal></expr>, <expr pos:start="497:26" pos:end="497:26"><literal type="number" pos:start="497:26" pos:end="497:26">2</literal></expr>, <expr pos:start="497:29" pos:end="497:29"><literal type="number" pos:start="497:29" pos:end="497:29">2</literal></expr>, <expr pos:start="497:32" pos:end="497:32"><literal type="number" pos:start="497:32" pos:end="497:32">2</literal></expr>, <expr pos:start="497:35" pos:end="497:35"><literal type="number" pos:start="497:35" pos:end="497:35">2</literal></expr>, <expr pos:start="497:38" pos:end="497:38"><literal type="number" pos:start="497:38" pos:end="497:38">2</literal></expr>, <expr pos:start="497:41" pos:end="497:41"><literal type="number" pos:start="497:41" pos:end="497:41">2</literal></expr>, <expr pos:start="497:44" pos:end="497:44"><literal type="number" pos:start="497:44" pos:end="497:44">2</literal></expr>, <expr pos:start="497:47" pos:end="497:47"><literal type="number" pos:start="497:47" pos:end="497:47">2</literal></expr>, <expr pos:start="497:50" pos:end="497:50"><literal type="number" pos:start="497:50" pos:end="497:50">2</literal></expr>, <expr pos:start="497:53" pos:end="497:53"><literal type="number" pos:start="497:53" pos:end="497:53">2</literal></expr>, <expr pos:start="497:56" pos:end="497:56"><literal type="number" pos:start="497:56" pos:end="497:56">2</literal></expr>, <expr pos:start="497:59" pos:end="497:59"><literal type="number" pos:start="497:59" pos:end="497:59">2</literal></expr>, <expr pos:start="497:62" pos:end="497:62"><literal type="number" pos:start="497:62" pos:end="497:62">2</literal></expr>  <comment type="line" pos:start="497:65" pos:end="497:74">// default</comment>

            }</block></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="501:13" pos:end="501:41"><decl pos:start="501:13" pos:end="501:40"><type pos:start="501:13" pos:end="501:27"><specifier pos:start="501:13" pos:end="501:17">const</specifier> <name pos:start="501:19" pos:end="501:25">uint8_t</name> <modifier pos:start="501:27" pos:end="501:27">*</modifier></type><name pos:start="501:28" pos:end="501:40">ctx_idx_map_p</name></decl>;</decl_stmt>

            <decl_stmt pos:start="503:13" pos:end="503:31"><decl pos:start="503:13" pos:end="503:30"><type pos:start="503:13" pos:end="503:15"><name pos:start="503:13" pos:end="503:15">int</name></type> <name pos:start="503:17" pos:end="503:26">scf_offset</name> <init pos:start="503:28" pos:end="503:30">= <expr pos:start="503:30" pos:end="503:30"><literal type="number" pos:start="503:30" pos:end="503:30">0</literal></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="505:13" pos:end="565:13"><if pos:start="505:13" pos:end="521:13">if <condition pos:start="505:16" pos:end="507:74">(<expr pos:start="505:17" pos:end="507:73"><name pos:start="505:17" pos:end="505:59"><name pos:start="505:17" pos:end="505:17">s</name><operator pos:start="505:18" pos:end="505:19">-&gt;</operator><name pos:start="505:20" pos:end="505:22">sps</name><operator pos:start="505:23" pos:end="505:24">-&gt;</operator><name pos:start="505:25" pos:end="505:59">transform_skip_context_enabled_flag</name></name> <operator pos:start="505:61" pos:end="505:62">&amp;&amp;</operator>

                <operator pos:start="507:17" pos:end="507:17">(</operator><name pos:start="507:18" pos:end="507:36">transform_skip_flag</name> <operator pos:start="507:38" pos:end="507:39">||</operator> <name pos:start="507:41" pos:end="507:72"><name pos:start="507:41" pos:end="507:42">lc</name><operator pos:start="507:43" pos:end="507:44">-&gt;</operator><name pos:start="507:45" pos:end="507:46">cu</name><operator pos:start="507:47" pos:end="507:47">.</operator><name pos:start="507:48" pos:end="507:72">cu_transquant_bypass_flag</name></name><operator pos:start="507:73" pos:end="507:73">)</operator></expr>)</condition> <block pos:start="507:76" pos:end="521:13">{<block_content pos:start="509:17" pos:end="519:17">

                <expr_stmt pos:start="509:17" pos:end="509:64"><expr pos:start="509:17" pos:end="509:63"><name pos:start="509:17" pos:end="509:29">ctx_idx_map_p</name> <operator pos:start="509:31" pos:end="509:31">=</operator> <operator pos:start="509:33" pos:end="509:33">(</operator><name pos:start="509:34" pos:end="509:40">uint8_t</name><operator pos:start="509:41" pos:end="509:41">*</operator><operator pos:start="509:42" pos:end="509:42">)</operator> <operator pos:start="509:44" pos:end="509:44">&amp;</operator><name pos:start="509:45" pos:end="509:63"><name pos:start="509:45" pos:end="509:55">ctx_idx_map</name><index pos:start="509:56" pos:end="509:63">[<expr pos:start="509:57" pos:end="509:62"><literal type="number" pos:start="509:57" pos:end="509:57">4</literal> <operator pos:start="509:59" pos:end="509:59">*</operator> <literal type="number" pos:start="509:61" pos:end="509:62">16</literal></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="511:17" pos:end="519:17"><if pos:start="511:17" pos:end="515:17">if <condition pos:start="511:20" pos:end="511:31">(<expr pos:start="511:21" pos:end="511:30"><name pos:start="511:21" pos:end="511:25">c_idx</name> <operator pos:start="511:27" pos:end="511:28">==</operator> <literal type="number" pos:start="511:30" pos:end="511:30">0</literal></expr>)</condition> <block pos:start="511:33" pos:end="515:17">{<block_content pos:start="513:21" pos:end="513:36">

                    <expr_stmt pos:start="513:21" pos:end="513:36"><expr pos:start="513:21" pos:end="513:35"><name pos:start="513:21" pos:end="513:30">scf_offset</name> <operator pos:start="513:32" pos:end="513:32">=</operator> <literal type="number" pos:start="513:34" pos:end="513:35">40</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="515:19" pos:end="519:17">else <block pos:start="515:24" pos:end="519:17">{<block_content pos:start="517:21" pos:end="517:41">

                    <expr_stmt pos:start="517:21" pos:end="517:41"><expr pos:start="517:21" pos:end="517:40"><name pos:start="517:21" pos:end="517:30">scf_offset</name> <operator pos:start="517:32" pos:end="517:32">=</operator> <literal type="number" pos:start="517:34" pos:end="517:37">14</literal> <operator pos:start="517:37" pos:end="517:37">+</operator> <literal type="number" pos:start="517:39" pos:end="517:40">27</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="521:15" pos:end="565:13">else <block pos:start="521:20" pos:end="565:13">{<block_content pos:start="523:17" pos:end="563:17">

                <if_stmt pos:start="523:17" pos:end="525:36"><if pos:start="523:17" pos:end="525:36">if <condition pos:start="523:20" pos:end="523:31">(<expr pos:start="523:21" pos:end="523:30"><name pos:start="523:21" pos:end="523:25">c_idx</name> <operator pos:start="523:27" pos:end="523:28">!=</operator> <literal type="number" pos:start="523:30" pos:end="523:30">0</literal></expr>)</condition><block type="pseudo" pos:start="525:21" pos:end="525:36"><block_content pos:start="525:21" pos:end="525:36">

                    <expr_stmt pos:start="525:21" pos:end="525:36"><expr pos:start="525:21" pos:end="525:35"><name pos:start="525:21" pos:end="525:30">scf_offset</name> <operator pos:start="525:32" pos:end="525:32">=</operator> <literal type="number" pos:start="525:34" pos:end="525:35">27</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="527:17" pos:end="563:17"><if pos:start="527:17" pos:end="531:17">if <condition pos:start="527:20" pos:end="527:41">(<expr pos:start="527:21" pos:end="527:40"><name pos:start="527:21" pos:end="527:35">log2_trafo_size</name> <operator pos:start="527:37" pos:end="527:38">==</operator> <literal type="number" pos:start="527:40" pos:end="527:40">2</literal></expr>)</condition> <block pos:start="527:43" pos:end="531:17">{<block_content pos:start="529:21" pos:end="529:63">

                    <expr_stmt pos:start="529:21" pos:end="529:63"><expr pos:start="529:21" pos:end="529:62"><name pos:start="529:21" pos:end="529:33">ctx_idx_map_p</name> <operator pos:start="529:35" pos:end="529:35">=</operator> <operator pos:start="529:37" pos:end="529:37">(</operator><name pos:start="529:38" pos:end="529:44">uint8_t</name><operator pos:start="529:45" pos:end="529:45">*</operator><operator pos:start="529:46" pos:end="529:46">)</operator> <operator pos:start="529:48" pos:end="529:48">&amp;</operator><name pos:start="529:49" pos:end="529:62"><name pos:start="529:49" pos:end="529:59">ctx_idx_map</name><index pos:start="529:60" pos:end="529:62">[<expr pos:start="529:61" pos:end="529:61"><literal type="number" pos:start="529:61" pos:end="529:61">0</literal></expr>]</index></name></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="531:19" pos:end="563:17">else <block pos:start="531:24" pos:end="563:17">{<block_content pos:start="533:21" pos:end="561:21">

                    <expr_stmt pos:start="533:21" pos:end="533:81"><expr pos:start="533:21" pos:end="533:80"><name pos:start="533:21" pos:end="533:33">ctx_idx_map_p</name> <operator pos:start="533:35" pos:end="533:35">=</operator> <operator pos:start="533:37" pos:end="533:37">(</operator><name pos:start="533:38" pos:end="533:44">uint8_t</name><operator pos:start="533:45" pos:end="533:45">*</operator><operator pos:start="533:46" pos:end="533:46">)</operator> <operator pos:start="533:48" pos:end="533:48">&amp;</operator><name pos:start="533:49" pos:end="533:80"><name pos:start="533:49" pos:end="533:59">ctx_idx_map</name><index pos:start="533:60" pos:end="533:80">[<expr pos:start="533:61" pos:end="533:79"><operator pos:start="533:61" pos:end="533:61">(</operator><name pos:start="533:62" pos:end="533:69">prev_sig</name> <operator pos:start="533:71" pos:end="533:71">+</operator> <literal type="number" pos:start="533:73" pos:end="533:73">1</literal><operator pos:start="533:74" pos:end="533:74">)</operator> <operator pos:start="533:76" pos:end="533:77">&lt;&lt;</operator> <literal type="number" pos:start="533:79" pos:end="533:79">4</literal></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="535:21" pos:end="561:21"><if pos:start="535:21" pos:end="551:21">if <condition pos:start="535:24" pos:end="535:35">(<expr pos:start="535:25" pos:end="535:34"><name pos:start="535:25" pos:end="535:29">c_idx</name> <operator pos:start="535:31" pos:end="535:32">==</operator> <literal type="number" pos:start="535:34" pos:end="535:34">0</literal></expr>)</condition> <block pos:start="535:37" pos:end="551:21">{<block_content pos:start="537:25" pos:end="549:25">

                        <if_stmt pos:start="537:25" pos:end="539:44"><if pos:start="537:25" pos:end="539:44">if <condition pos:start="537:28" pos:end="537:51">(<expr pos:start="537:29" pos:end="537:50"><operator pos:start="537:29" pos:end="537:29">(</operator><name pos:start="537:30" pos:end="537:33">x_cg</name> <operator pos:start="537:35" pos:end="537:35">&gt;</operator> <literal type="number" pos:start="537:37" pos:end="537:37">0</literal> <operator pos:start="537:39" pos:end="537:40">||</operator> <name pos:start="537:42" pos:end="537:45">y_cg</name> <operator pos:start="537:47" pos:end="537:47">&gt;</operator> <literal type="number" pos:start="537:49" pos:end="537:49">0</literal><operator pos:start="537:50" pos:end="537:50">)</operator></expr>)</condition><block type="pseudo" pos:start="539:29" pos:end="539:44"><block_content pos:start="539:29" pos:end="539:44">

                            <expr_stmt pos:start="539:29" pos:end="539:44"><expr pos:start="539:29" pos:end="539:43"><name pos:start="539:29" pos:end="539:38">scf_offset</name> <operator pos:start="539:40" pos:end="539:41">+=</operator> <literal type="number" pos:start="539:43" pos:end="539:43">3</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="541:25" pos:end="549:25"><if pos:start="541:25" pos:end="545:25">if <condition pos:start="541:28" pos:end="541:49">(<expr pos:start="541:29" pos:end="541:48"><name pos:start="541:29" pos:end="541:43">log2_trafo_size</name> <operator pos:start="541:45" pos:end="541:46">==</operator> <literal type="number" pos:start="541:48" pos:end="541:48">3</literal></expr>)</condition> <block pos:start="541:51" pos:end="545:25">{<block_content pos:start="543:29" pos:end="543:75">

                            <expr_stmt pos:start="543:29" pos:end="543:75"><expr pos:start="543:29" pos:end="543:74"><name pos:start="543:29" pos:end="543:38">scf_offset</name> <operator pos:start="543:40" pos:end="543:41">+=</operator> <ternary pos:start="543:43" pos:end="543:74"><condition pos:start="543:43" pos:end="543:67"><expr pos:start="543:43" pos:end="543:65"><operator pos:start="543:43" pos:end="543:43">(</operator><name pos:start="543:44" pos:end="543:51">scan_idx</name> <operator pos:start="543:53" pos:end="543:54">==</operator> <name pos:start="543:56" pos:end="543:64">SCAN_DIAG</name><operator pos:start="543:65" pos:end="543:65">)</operator></expr> ?</condition><then pos:start="543:69" pos:end="543:69"> <expr pos:start="543:69" pos:end="543:69"><literal type="number" pos:start="543:69" pos:end="543:69">9</literal></expr> </then><else pos:start="543:71" pos:end="543:74">: <expr pos:start="543:73" pos:end="543:74"><literal type="number" pos:start="543:73" pos:end="543:74">15</literal></expr></else></ternary></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="545:27" pos:end="549:25">else <block pos:start="545:32" pos:end="549:25">{<block_content pos:start="547:29" pos:end="547:45">

                            <expr_stmt pos:start="547:29" pos:end="547:45"><expr pos:start="547:29" pos:end="547:44"><name pos:start="547:29" pos:end="547:38">scf_offset</name> <operator pos:start="547:40" pos:end="547:41">+=</operator> <literal type="number" pos:start="547:43" pos:end="547:44">21</literal></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="551:23" pos:end="561:21">else <block pos:start="551:28" pos:end="561:21">{<block_content pos:start="553:25" pos:end="559:45">

                        <if_stmt pos:start="553:25" pos:end="559:45"><if pos:start="553:25" pos:end="555:44">if <condition pos:start="553:28" pos:end="553:49">(<expr pos:start="553:29" pos:end="553:48"><name pos:start="553:29" pos:end="553:43">log2_trafo_size</name> <operator pos:start="553:45" pos:end="553:46">==</operator> <literal type="number" pos:start="553:48" pos:end="553:48">3</literal></expr>)</condition><block type="pseudo" pos:start="555:29" pos:end="555:44"><block_content pos:start="555:29" pos:end="555:44">

                            <expr_stmt pos:start="555:29" pos:end="555:44"><expr pos:start="555:29" pos:end="555:43"><name pos:start="555:29" pos:end="555:38">scf_offset</name> <operator pos:start="555:40" pos:end="555:41">+=</operator> <literal type="number" pos:start="555:43" pos:end="555:43">9</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="557:25" pos:end="559:45">else<block type="pseudo" pos:start="559:29" pos:end="559:45"><block_content pos:start="559:29" pos:end="559:45">

                            <expr_stmt pos:start="559:29" pos:end="559:45"><expr pos:start="559:29" pos:end="559:44"><name pos:start="559:29" pos:end="559:38">scf_offset</name> <operator pos:start="559:40" pos:end="559:41">+=</operator> <literal type="number" pos:start="559:43" pos:end="559:44">12</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

            <for pos:start="567:13" pos:end="583:13">for <control pos:start="567:17" pos:end="567:39">(<init pos:start="567:18" pos:end="567:27"><expr pos:start="567:18" pos:end="567:26"><name pos:start="567:18" pos:end="567:18">n</name> <operator pos:start="567:20" pos:end="567:20">=</operator> <name pos:start="567:22" pos:end="567:26">n_end</name></expr>;</init> <condition pos:start="567:29" pos:end="567:34"><expr pos:start="567:29" pos:end="567:33"><name pos:start="567:29" pos:end="567:29">n</name> <operator pos:start="567:31" pos:end="567:31">&gt;</operator> <literal type="number" pos:start="567:33" pos:end="567:33">0</literal></expr>;</condition> <incr pos:start="567:36" pos:end="567:38"><expr pos:start="567:36" pos:end="567:38"><name pos:start="567:36" pos:end="567:36">n</name><operator pos:start="567:37" pos:end="567:38">--</operator></expr></incr>)</control> <block pos:start="567:41" pos:end="583:13">{<block_content pos:start="569:17" pos:end="581:17">

                <expr_stmt pos:start="569:17" pos:end="569:36"><expr pos:start="569:17" pos:end="569:35"><name pos:start="569:17" pos:end="569:19">x_c</name> <operator pos:start="569:21" pos:end="569:21">=</operator> <name pos:start="569:23" pos:end="569:35"><name pos:start="569:23" pos:end="569:32">scan_x_off</name><index pos:start="569:33" pos:end="569:35">[<expr pos:start="569:34" pos:end="569:34"><name pos:start="569:34" pos:end="569:34">n</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="571:17" pos:end="571:36"><expr pos:start="571:17" pos:end="571:35"><name pos:start="571:17" pos:end="571:19">y_c</name> <operator pos:start="571:21" pos:end="571:21">=</operator> <name pos:start="571:23" pos:end="571:35"><name pos:start="571:23" pos:end="571:32">scan_y_off</name><index pos:start="571:33" pos:end="571:35">[<expr pos:start="571:34" pos:end="571:34"><name pos:start="571:34" pos:end="571:34">n</name></expr>]</index></name></expr>;</expr_stmt>

                <if_stmt pos:start="573:17" pos:end="581:17"><if pos:start="573:17" pos:end="581:17">if <condition pos:start="573:20" pos:end="573:90">(<expr pos:start="573:21" pos:end="573:89"><call pos:start="573:21" pos:end="573:89"><name pos:start="573:21" pos:end="573:49">significant_coeff_flag_decode</name><argument_list pos:start="573:50" pos:end="573:89">(<argument pos:start="573:51" pos:end="573:51"><expr pos:start="573:51" pos:end="573:51"><name pos:start="573:51" pos:end="573:51">s</name></expr></argument>, <argument pos:start="573:54" pos:end="573:56"><expr pos:start="573:54" pos:end="573:56"><name pos:start="573:54" pos:end="573:56">x_c</name></expr></argument>, <argument pos:start="573:59" pos:end="573:61"><expr pos:start="573:59" pos:end="573:61"><name pos:start="573:59" pos:end="573:61">y_c</name></expr></argument>, <argument pos:start="573:64" pos:end="573:73"><expr pos:start="573:64" pos:end="573:73"><name pos:start="573:64" pos:end="573:73">scf_offset</name></expr></argument>, <argument pos:start="573:76" pos:end="573:88"><expr pos:start="573:76" pos:end="573:88"><name pos:start="573:76" pos:end="573:88">ctx_idx_map_p</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="573:92" pos:end="581:17">{<block_content pos:start="575:21" pos:end="579:48">

                    <expr_stmt pos:start="575:21" pos:end="575:78"><expr pos:start="575:21" pos:end="575:77"><name pos:start="575:21" pos:end="575:73"><name pos:start="575:21" pos:end="575:46">significant_coeff_flag_idx</name><index pos:start="575:47" pos:end="575:73">[<expr pos:start="575:48" pos:end="575:72"><name pos:start="575:48" pos:end="575:72">nb_significant_coeff_flag</name></expr>]</index></name> <operator pos:start="575:75" pos:end="575:75">=</operator> <name pos:start="575:77" pos:end="575:77">n</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="577:21" pos:end="577:48"><expr pos:start="577:21" pos:end="577:47"><name pos:start="577:21" pos:end="577:45">nb_significant_coeff_flag</name><operator pos:start="577:46" pos:end="577:47">++</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="579:21" pos:end="579:48"><expr pos:start="579:21" pos:end="579:47"><name pos:start="579:21" pos:end="579:43">implicit_non_zero_coeff</name> <operator pos:start="579:45" pos:end="579:45">=</operator> <literal type="number" pos:start="579:47" pos:end="579:47">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <if_stmt pos:start="585:13" pos:end="635:13"><if pos:start="585:13" pos:end="629:13">if <condition pos:start="585:16" pos:end="585:45">(<expr pos:start="585:17" pos:end="585:44"><name pos:start="585:17" pos:end="585:39">implicit_non_zero_coeff</name> <operator pos:start="585:41" pos:end="585:42">==</operator> <literal type="number" pos:start="585:44" pos:end="585:44">0</literal></expr>)</condition> <block pos:start="585:47" pos:end="629:13">{<block_content pos:start="587:17" pos:end="627:17">

                <if_stmt pos:start="587:17" pos:end="619:17"><if pos:start="587:17" pos:end="601:17">if <condition pos:start="587:20" pos:end="589:78">(<expr pos:start="587:21" pos:end="589:77"><name pos:start="587:21" pos:end="587:63"><name pos:start="587:21" pos:end="587:21">s</name><operator pos:start="587:22" pos:end="587:23">-&gt;</operator><name pos:start="587:24" pos:end="587:26">sps</name><operator pos:start="587:27" pos:end="587:28">-&gt;</operator><name pos:start="587:29" pos:end="587:63">transform_skip_context_enabled_flag</name></name> <operator pos:start="587:65" pos:end="587:66">&amp;&amp;</operator>

                    <operator pos:start="589:21" pos:end="589:21">(</operator><name pos:start="589:22" pos:end="589:40">transform_skip_flag</name> <operator pos:start="589:42" pos:end="589:43">||</operator> <name pos:start="589:45" pos:end="589:76"><name pos:start="589:45" pos:end="589:46">lc</name><operator pos:start="589:47" pos:end="589:48">-&gt;</operator><name pos:start="589:49" pos:end="589:50">cu</name><operator pos:start="589:51" pos:end="589:51">.</operator><name pos:start="589:52" pos:end="589:76">cu_transquant_bypass_flag</name></name><operator pos:start="589:77" pos:end="589:77">)</operator></expr>)</condition> <block pos:start="589:80" pos:end="601:17">{<block_content pos:start="591:21" pos:end="599:21">

                    <if_stmt pos:start="591:21" pos:end="599:21"><if pos:start="591:21" pos:end="595:21">if <condition pos:start="591:24" pos:end="591:35">(<expr pos:start="591:25" pos:end="591:34"><name pos:start="591:25" pos:end="591:29">c_idx</name> <operator pos:start="591:31" pos:end="591:32">==</operator> <literal type="number" pos:start="591:34" pos:end="591:34">0</literal></expr>)</condition> <block pos:start="591:37" pos:end="595:21">{<block_content pos:start="593:25" pos:end="593:40">

                        <expr_stmt pos:start="593:25" pos:end="593:40"><expr pos:start="593:25" pos:end="593:39"><name pos:start="593:25" pos:end="593:34">scf_offset</name> <operator pos:start="593:36" pos:end="593:36">=</operator> <literal type="number" pos:start="593:38" pos:end="593:39">42</literal></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="595:23" pos:end="599:21">else <block pos:start="595:28" pos:end="599:21">{<block_content pos:start="597:25" pos:end="597:45">

                        <expr_stmt pos:start="597:25" pos:end="597:45"><expr pos:start="597:25" pos:end="597:44"><name pos:start="597:25" pos:end="597:34">scf_offset</name> <operator pos:start="597:36" pos:end="597:36">=</operator> <literal type="number" pos:start="597:38" pos:end="597:41">16</literal> <operator pos:start="597:41" pos:end="597:41">+</operator> <literal type="number" pos:start="597:43" pos:end="597:44">27</literal></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if> <else pos:start="601:19" pos:end="619:17">else <block pos:start="601:24" pos:end="619:17">{<block_content pos:start="603:21" pos:end="617:21">

                    <if_stmt pos:start="603:21" pos:end="617:21"><if pos:start="603:21" pos:end="613:21">if <condition pos:start="603:24" pos:end="603:31">(<expr pos:start="603:25" pos:end="603:30"><name pos:start="603:25" pos:end="603:25">i</name> <operator pos:start="603:27" pos:end="603:28">==</operator> <literal type="number" pos:start="603:30" pos:end="603:30">0</literal></expr>)</condition> <block pos:start="603:33" pos:end="613:21">{<block_content pos:start="605:25" pos:end="611:44">

                        <if_stmt pos:start="605:25" pos:end="611:44"><if pos:start="605:25" pos:end="607:43">if <condition pos:start="605:28" pos:end="605:39">(<expr pos:start="605:29" pos:end="605:38"><name pos:start="605:29" pos:end="605:33">c_idx</name> <operator pos:start="605:35" pos:end="605:36">==</operator> <literal type="number" pos:start="605:38" pos:end="605:38">0</literal></expr>)</condition><block type="pseudo" pos:start="607:29" pos:end="607:43"><block_content pos:start="607:29" pos:end="607:43">

                            <expr_stmt pos:start="607:29" pos:end="607:43"><expr pos:start="607:29" pos:end="607:42"><name pos:start="607:29" pos:end="607:38">scf_offset</name> <operator pos:start="607:40" pos:end="607:40">=</operator> <literal type="number" pos:start="607:42" pos:end="607:42">0</literal></expr>;</expr_stmt></block_content></block></if>

                        <else pos:start="609:25" pos:end="611:44">else<block type="pseudo" pos:start="611:29" pos:end="611:44"><block_content pos:start="611:29" pos:end="611:44">

                            <expr_stmt pos:start="611:29" pos:end="611:44"><expr pos:start="611:29" pos:end="611:43"><name pos:start="611:29" pos:end="611:38">scf_offset</name> <operator pos:start="611:40" pos:end="611:40">=</operator> <literal type="number" pos:start="611:42" pos:end="611:43">27</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="613:23" pos:end="617:21">else <block pos:start="613:28" pos:end="617:21">{<block_content pos:start="615:25" pos:end="615:52">

                        <expr_stmt pos:start="615:25" pos:end="615:52"><expr pos:start="615:25" pos:end="615:51"><name pos:start="615:25" pos:end="615:34">scf_offset</name> <operator pos:start="615:36" pos:end="615:36">=</operator> <literal type="number" pos:start="615:38" pos:end="615:40">2</literal> <operator pos:start="615:40" pos:end="615:40">+</operator> <name pos:start="615:42" pos:end="615:51">scf_offset</name></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="621:17" pos:end="627:17"><if pos:start="621:17" pos:end="627:17">if <condition pos:start="621:20" pos:end="621:79">(<expr pos:start="621:21" pos:end="621:78"><call pos:start="621:21" pos:end="621:73"><name pos:start="621:21" pos:end="621:51">significant_coeff_flag_decode_0</name><argument_list pos:start="621:52" pos:end="621:73">(<argument pos:start="621:53" pos:end="621:53"><expr pos:start="621:53" pos:end="621:53"><name pos:start="621:53" pos:end="621:53">s</name></expr></argument>, <argument pos:start="621:56" pos:end="621:60"><expr pos:start="621:56" pos:end="621:60"><name pos:start="621:56" pos:end="621:60">c_idx</name></expr></argument>, <argument pos:start="621:63" pos:end="621:72"><expr pos:start="621:63" pos:end="621:72"><name pos:start="621:63" pos:end="621:72">scf_offset</name></expr></argument>)</argument_list></call> <operator pos:start="621:75" pos:end="621:76">==</operator> <literal type="number" pos:start="621:78" pos:end="621:78">1</literal></expr>)</condition> <block pos:start="621:81" pos:end="627:17">{<block_content pos:start="623:21" pos:end="625:48">

                    <expr_stmt pos:start="623:21" pos:end="623:78"><expr pos:start="623:21" pos:end="623:77"><name pos:start="623:21" pos:end="623:73"><name pos:start="623:21" pos:end="623:46">significant_coeff_flag_idx</name><index pos:start="623:47" pos:end="623:73">[<expr pos:start="623:48" pos:end="623:72"><name pos:start="623:48" pos:end="623:72">nb_significant_coeff_flag</name></expr>]</index></name> <operator pos:start="623:75" pos:end="623:75">=</operator> <literal type="number" pos:start="623:77" pos:end="623:77">0</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="625:21" pos:end="625:48"><expr pos:start="625:21" pos:end="625:47"><name pos:start="625:21" pos:end="625:45">nb_significant_coeff_flag</name><operator pos:start="625:46" pos:end="625:47">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="629:15" pos:end="635:13">else <block pos:start="629:20" pos:end="635:13">{<block_content pos:start="631:17" pos:end="633:44">

                <expr_stmt pos:start="631:17" pos:end="631:74"><expr pos:start="631:17" pos:end="631:73"><name pos:start="631:17" pos:end="631:69"><name pos:start="631:17" pos:end="631:42">significant_coeff_flag_idx</name><index pos:start="631:43" pos:end="631:69">[<expr pos:start="631:44" pos:end="631:68"><name pos:start="631:44" pos:end="631:68">nb_significant_coeff_flag</name></expr>]</index></name> <operator pos:start="631:71" pos:end="631:71">=</operator> <literal type="number" pos:start="631:73" pos:end="631:73">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="633:17" pos:end="633:44"><expr pos:start="633:17" pos:end="633:43"><name pos:start="633:17" pos:end="633:41">nb_significant_coeff_flag</name><operator pos:start="633:42" pos:end="633:43">++</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="641:9" pos:end="641:42"><expr pos:start="641:9" pos:end="641:41"><name pos:start="641:9" pos:end="641:13">n_end</name> <operator pos:start="641:15" pos:end="641:15">=</operator> <name pos:start="641:17" pos:end="641:41">nb_significant_coeff_flag</name></expr>;</expr_stmt>





        <if_stmt pos:start="647:9" pos:end="907:9"><if pos:start="647:9" pos:end="907:9">if <condition pos:start="647:12" pos:end="647:18">(<expr pos:start="647:13" pos:end="647:17"><name pos:start="647:13" pos:end="647:17">n_end</name></expr>)</condition> <block pos:start="647:20" pos:end="907:9">{<block_content pos:start="649:13" pos:end="905:13">

            <decl_stmt pos:start="649:13" pos:end="649:35"><decl pos:start="649:13" pos:end="649:34"><type pos:start="649:13" pos:end="649:15"><name pos:start="649:13" pos:end="649:15">int</name></type> <name pos:start="649:17" pos:end="649:34">first_nz_pos_in_cg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="651:13" pos:end="651:34"><decl pos:start="651:13" pos:end="651:33"><type pos:start="651:13" pos:end="651:15"><name pos:start="651:13" pos:end="651:15">int</name></type> <name pos:start="651:17" pos:end="651:33">last_nz_pos_in_cg</name></decl>;</decl_stmt>

            <decl_stmt pos:start="653:13" pos:end="653:33"><decl pos:start="653:13" pos:end="653:32"><type pos:start="653:13" pos:end="653:15"><name pos:start="653:13" pos:end="653:15">int</name></type> <name pos:start="653:17" pos:end="653:28">c_rice_param</name> <init pos:start="653:30" pos:end="653:32">= <expr pos:start="653:32" pos:end="653:32"><literal type="number" pos:start="653:32" pos:end="653:32">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="655:13" pos:end="655:46"><decl pos:start="655:13" pos:end="655:45"><type pos:start="655:13" pos:end="655:15"><name pos:start="655:13" pos:end="655:15">int</name></type> <name pos:start="655:17" pos:end="655:40">first_greater1_coeff_idx</name> <init pos:start="655:42" pos:end="655:45">= <expr pos:start="655:44" pos:end="655:45"><operator pos:start="655:44" pos:end="655:44">-</operator><literal type="number" pos:start="655:45" pos:end="655:45">1</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="657:13" pos:end="657:53"><decl pos:start="657:13" pos:end="657:52"><type pos:start="657:13" pos:end="657:19"><name pos:start="657:13" pos:end="657:19">uint8_t</name></type> <name pos:start="657:21" pos:end="657:52"><name pos:start="657:21" pos:end="657:49">coeff_abs_level_greater1_flag</name><index pos:start="657:50" pos:end="657:52">[<expr pos:start="657:51" pos:end="657:51"><literal type="number" pos:start="657:51" pos:end="657:51">8</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="659:13" pos:end="659:37"><decl pos:start="659:13" pos:end="659:36"><type pos:start="659:13" pos:end="659:20"><name pos:start="659:13" pos:end="659:20">uint16_t</name></type> <name pos:start="659:22" pos:end="659:36">coeff_sign_flag</name></decl>;</decl_stmt>

            <decl_stmt pos:start="661:13" pos:end="661:28"><decl pos:start="661:13" pos:end="661:27"><type pos:start="661:13" pos:end="661:15"><name pos:start="661:13" pos:end="661:15">int</name></type> <name pos:start="661:17" pos:end="661:23">sum_abs</name> <init pos:start="661:25" pos:end="661:27">= <expr pos:start="661:27" pos:end="661:27"><literal type="number" pos:start="661:27" pos:end="661:27">0</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="663:13" pos:end="663:28"><decl pos:start="663:13" pos:end="663:27"><type pos:start="663:13" pos:end="663:15"><name pos:start="663:13" pos:end="663:15">int</name></type> <name pos:start="663:17" pos:end="663:27">sign_hidden</name></decl>;</decl_stmt>

            <decl_stmt pos:start="665:13" pos:end="665:24"><decl pos:start="665:13" pos:end="665:23"><type pos:start="665:13" pos:end="665:15"><name pos:start="665:13" pos:end="665:15">int</name></type> <name pos:start="665:17" pos:end="665:23">sb_type</name></decl>;</decl_stmt>





            <comment type="line" pos:start="671:13" pos:end="671:69">// initialize first elem of coeff_bas_level_greater1_flag</comment>

            <decl_stmt pos:start="673:13" pos:end="673:56"><decl pos:start="673:13" pos:end="673:55"><type pos:start="673:13" pos:end="673:15"><name pos:start="673:13" pos:end="673:15">int</name></type> <name pos:start="673:17" pos:end="673:23">ctx_set</name> <init pos:start="673:25" pos:end="673:55">= <expr pos:start="673:27" pos:end="673:55"><ternary pos:start="673:27" pos:end="673:55"><condition pos:start="673:27" pos:end="673:49"><expr pos:start="673:27" pos:end="673:47"><operator pos:start="673:27" pos:end="673:27">(</operator><name pos:start="673:28" pos:end="673:28">i</name> <operator pos:start="673:30" pos:end="673:30">&gt;</operator> <literal type="number" pos:start="673:32" pos:end="673:32">0</literal> <operator pos:start="673:34" pos:end="673:35">&amp;&amp;</operator> <name pos:start="673:37" pos:end="673:41">c_idx</name> <operator pos:start="673:43" pos:end="673:44">==</operator> <literal type="number" pos:start="673:46" pos:end="673:46">0</literal><operator pos:start="673:47" pos:end="673:47">)</operator></expr> ?</condition><then pos:start="673:51" pos:end="673:51"> <expr pos:start="673:51" pos:end="673:51"><literal type="number" pos:start="673:51" pos:end="673:51">2</literal></expr> </then><else pos:start="673:53" pos:end="673:55">: <expr pos:start="673:55" pos:end="673:55"><literal type="number" pos:start="673:55" pos:end="673:55">0</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <if_stmt pos:start="677:13" pos:end="689:13"><if pos:start="677:13" pos:end="689:13">if <condition pos:start="677:16" pos:end="677:64">(<expr pos:start="677:17" pos:end="677:63"><name pos:start="677:17" pos:end="677:63"><name pos:start="677:17" pos:end="677:17">s</name><operator pos:start="677:18" pos:end="677:19">-&gt;</operator><name pos:start="677:20" pos:end="677:22">sps</name><operator pos:start="677:23" pos:end="677:24">-&gt;</operator><name pos:start="677:25" pos:end="677:63">persistent_rice_adaptation_enabled_flag</name></name></expr>)</condition> <block pos:start="677:66" pos:end="689:13">{<block_content pos:start="679:17" pos:end="687:59">

                <if_stmt pos:start="679:17" pos:end="685:59"><if pos:start="679:17" pos:end="681:55">if <condition pos:start="679:20" pos:end="679:78">(<expr pos:start="679:21" pos:end="679:77"><operator pos:start="679:21" pos:end="679:21">!</operator><name pos:start="679:22" pos:end="679:40">transform_skip_flag</name> <operator pos:start="679:42" pos:end="679:43">&amp;&amp;</operator> <operator pos:start="679:45" pos:end="679:45">!</operator><name pos:start="679:46" pos:end="679:77"><name pos:start="679:46" pos:end="679:47">lc</name><operator pos:start="679:48" pos:end="679:49">-&gt;</operator><name pos:start="679:50" pos:end="679:51">cu</name><operator pos:start="679:52" pos:end="679:52">.</operator><name pos:start="679:53" pos:end="679:77">cu_transquant_bypass_flag</name></name></expr>)</condition><block type="pseudo" pos:start="681:21" pos:end="681:55"><block_content pos:start="681:21" pos:end="681:55">

                    <expr_stmt pos:start="681:21" pos:end="681:55"><expr pos:start="681:21" pos:end="681:54"><name pos:start="681:21" pos:end="681:27">sb_type</name> <operator pos:start="681:29" pos:end="681:29">=</operator> <literal type="number" pos:start="681:31" pos:end="681:31">2</literal> <operator pos:start="681:33" pos:end="681:33">*</operator> <operator pos:start="681:35" pos:end="681:35">(</operator><ternary pos:start="681:36" pos:end="681:53"><condition pos:start="681:36" pos:end="681:47"><expr pos:start="681:36" pos:end="681:45"><name pos:start="681:36" pos:end="681:40">c_idx</name> <operator pos:start="681:42" pos:end="681:43">==</operator> <literal type="number" pos:start="681:45" pos:end="681:45">0</literal></expr> ?</condition><then pos:start="681:49" pos:end="681:49"> <expr pos:start="681:49" pos:end="681:49"><literal type="number" pos:start="681:49" pos:end="681:49">1</literal></expr> </then><else pos:start="681:51" pos:end="681:53">: <expr pos:start="681:53" pos:end="681:53"><literal type="number" pos:start="681:53" pos:end="681:53">0</literal></expr></else></ternary><operator pos:start="681:54" pos:end="681:54">)</operator></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="683:17" pos:end="685:59">else<block type="pseudo" pos:start="685:21" pos:end="685:59"><block_content pos:start="685:21" pos:end="685:59">

                    <expr_stmt pos:start="685:21" pos:end="685:59"><expr pos:start="685:21" pos:end="685:58"><name pos:start="685:21" pos:end="685:27">sb_type</name> <operator pos:start="685:29" pos:end="685:29">=</operator> <literal type="number" pos:start="685:31" pos:end="685:31">2</literal> <operator pos:start="685:33" pos:end="685:33">*</operator> <operator pos:start="685:35" pos:end="685:35">(</operator><ternary pos:start="685:36" pos:end="685:53"><condition pos:start="685:36" pos:end="685:47"><expr pos:start="685:36" pos:end="685:45"><name pos:start="685:36" pos:end="685:40">c_idx</name> <operator pos:start="685:42" pos:end="685:43">==</operator> <literal type="number" pos:start="685:45" pos:end="685:45">0</literal></expr> ?</condition><then pos:start="685:49" pos:end="685:49"> <expr pos:start="685:49" pos:end="685:49"><literal type="number" pos:start="685:49" pos:end="685:49">1</literal></expr> </then><else pos:start="685:51" pos:end="685:53">: <expr pos:start="685:53" pos:end="685:53"><literal type="number" pos:start="685:53" pos:end="685:53">0</literal></expr></else></ternary><operator pos:start="685:54" pos:end="685:54">)</operator> <operator pos:start="685:56" pos:end="685:56">+</operator> <literal type="number" pos:start="685:58" pos:end="685:58">1</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="687:17" pos:end="687:59"><expr pos:start="687:17" pos:end="687:58"><name pos:start="687:17" pos:end="687:28">c_rice_param</name> <operator pos:start="687:30" pos:end="687:30">=</operator> <name pos:start="687:32" pos:end="687:54"><name pos:start="687:32" pos:end="687:33">lc</name><operator pos:start="687:34" pos:end="687:35">-&gt;</operator><name pos:start="687:36" pos:end="687:45">stat_coeff</name><index pos:start="687:46" pos:end="687:54">[<expr pos:start="687:47" pos:end="687:53"><name pos:start="687:47" pos:end="687:53">sb_type</name></expr>]</index></name> <operator pos:start="687:56" pos:end="687:56">/</operator> <literal type="number" pos:start="687:58" pos:end="687:58">4</literal></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="693:13" pos:end="695:26"><if pos:start="693:13" pos:end="695:26">if <condition pos:start="693:16" pos:end="693:61">(<expr pos:start="693:17" pos:end="693:60"><operator pos:start="693:17" pos:end="693:17">!</operator><operator pos:start="693:18" pos:end="693:18">(</operator><name pos:start="693:19" pos:end="693:19">i</name> <operator pos:start="693:21" pos:end="693:22">==</operator> <name pos:start="693:24" pos:end="693:38">num_last_subset</name><operator pos:start="693:39" pos:end="693:39">)</operator> <operator pos:start="693:41" pos:end="693:42">&amp;&amp;</operator> <name pos:start="693:44" pos:end="693:55">greater1_ctx</name> <operator pos:start="693:57" pos:end="693:58">==</operator> <literal type="number" pos:start="693:60" pos:end="693:60">0</literal></expr>)</condition><block type="pseudo" pos:start="695:17" pos:end="695:26"><block_content pos:start="695:17" pos:end="695:26">

                <expr_stmt pos:start="695:17" pos:end="695:26"><expr pos:start="695:17" pos:end="695:25"><name pos:start="695:17" pos:end="695:23">ctx_set</name><operator pos:start="695:24" pos:end="695:25">++</operator></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="697:13" pos:end="697:29"><expr pos:start="697:13" pos:end="697:28"><name pos:start="697:13" pos:end="697:24">greater1_ctx</name> <operator pos:start="697:26" pos:end="697:26">=</operator> <literal type="number" pos:start="697:28" pos:end="697:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="699:13" pos:end="699:62"><expr pos:start="699:13" pos:end="699:61"><name pos:start="699:13" pos:end="699:29">last_nz_pos_in_cg</name> <operator pos:start="699:31" pos:end="699:31">=</operator> <name pos:start="699:33" pos:end="699:61"><name pos:start="699:33" pos:end="699:58">significant_coeff_flag_idx</name><index pos:start="699:59" pos:end="699:61">[<expr pos:start="699:60" pos:end="699:60"><literal type="number" pos:start="699:60" pos:end="699:60">0</literal></expr>]</index></name></expr>;</expr_stmt>



            <for pos:start="703:13" pos:end="725:13">for <control pos:start="703:17" pos:end="703:57">(<init pos:start="703:18" pos:end="703:23"><expr pos:start="703:18" pos:end="703:22"><name pos:start="703:18" pos:end="703:18">m</name> <operator pos:start="703:20" pos:end="703:20">=</operator> <literal type="number" pos:start="703:22" pos:end="703:22">0</literal></expr>;</init> <condition pos:start="703:25" pos:end="703:52"><expr pos:start="703:25" pos:end="703:51"><name pos:start="703:25" pos:end="703:25">m</name> <operator pos:start="703:27" pos:end="703:27">&lt;</operator> <operator pos:start="703:29" pos:end="703:29">(</operator><ternary pos:start="703:30" pos:end="703:50"><condition pos:start="703:30" pos:end="703:40"><expr pos:start="703:30" pos:end="703:38"><name pos:start="703:30" pos:end="703:34">n_end</name> <operator pos:start="703:36" pos:end="703:36">&gt;</operator> <literal type="number" pos:start="703:38" pos:end="703:38">8</literal></expr> ?</condition><then pos:start="703:42" pos:end="703:42"> <expr pos:start="703:42" pos:end="703:42"><literal type="number" pos:start="703:42" pos:end="703:42">8</literal></expr> </then><else pos:start="703:44" pos:end="703:50">: <expr pos:start="703:46" pos:end="703:50"><name pos:start="703:46" pos:end="703:50">n_end</name></expr></else></ternary><operator pos:start="703:51" pos:end="703:51">)</operator></expr>;</condition> <incr pos:start="703:54" pos:end="703:56"><expr pos:start="703:54" pos:end="703:56"><name pos:start="703:54" pos:end="703:54">m</name><operator pos:start="703:55" pos:end="703:56">++</operator></expr></incr>)</control> <block pos:start="703:59" pos:end="725:13">{<block_content pos:start="705:17" pos:end="723:17">

                <decl_stmt pos:start="705:17" pos:end="705:56"><decl pos:start="705:17" pos:end="705:55"><type pos:start="705:17" pos:end="705:19"><name pos:start="705:17" pos:end="705:19">int</name></type> <name pos:start="705:21" pos:end="705:23">inc</name> <init pos:start="705:25" pos:end="705:55">= <expr pos:start="705:27" pos:end="705:55"><operator pos:start="705:27" pos:end="705:27">(</operator><name pos:start="705:28" pos:end="705:34">ctx_set</name> <operator pos:start="705:36" pos:end="705:37">&lt;&lt;</operator> <literal type="number" pos:start="705:39" pos:end="705:39">2</literal><operator pos:start="705:40" pos:end="705:40">)</operator> <operator pos:start="705:42" pos:end="705:42">+</operator> <name pos:start="705:44" pos:end="705:55">greater1_ctx</name></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="707:17" pos:end="709:72"><expr pos:start="707:17" pos:end="709:71"><name pos:start="707:17" pos:end="707:48"><name pos:start="707:17" pos:end="707:45">coeff_abs_level_greater1_flag</name><index pos:start="707:46" pos:end="707:48">[<expr pos:start="707:47" pos:end="707:47"><name pos:start="707:47" pos:end="707:47">m</name></expr>]</index></name> <operator pos:start="707:50" pos:end="707:50">=</operator>

                    <call pos:start="709:21" pos:end="709:71"><name pos:start="709:21" pos:end="709:56">coeff_abs_level_greater1_flag_decode</name><argument_list pos:start="709:57" pos:end="709:71">(<argument pos:start="709:58" pos:end="709:58"><expr pos:start="709:58" pos:end="709:58"><name pos:start="709:58" pos:end="709:58">s</name></expr></argument>, <argument pos:start="709:61" pos:end="709:65"><expr pos:start="709:61" pos:end="709:65"><name pos:start="709:61" pos:end="709:65">c_idx</name></expr></argument>, <argument pos:start="709:68" pos:end="709:70"><expr pos:start="709:68" pos:end="709:70"><name pos:start="709:68" pos:end="709:70">inc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="711:17" pos:end="723:17"><if pos:start="711:17" pos:end="719:17">if <condition pos:start="711:20" pos:end="711:53">(<expr pos:start="711:21" pos:end="711:52"><name pos:start="711:21" pos:end="711:52"><name pos:start="711:21" pos:end="711:49">coeff_abs_level_greater1_flag</name><index pos:start="711:50" pos:end="711:52">[<expr pos:start="711:51" pos:end="711:51"><name pos:start="711:51" pos:end="711:51">m</name></expr>]</index></name></expr>)</condition> <block pos:start="711:55" pos:end="719:17">{<block_content pos:start="713:21" pos:end="717:53">

                    <expr_stmt pos:start="713:21" pos:end="713:37"><expr pos:start="713:21" pos:end="713:36"><name pos:start="713:21" pos:end="713:32">greater1_ctx</name> <operator pos:start="713:34" pos:end="713:34">=</operator> <literal type="number" pos:start="713:36" pos:end="713:36">0</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="715:21" pos:end="717:53"><if pos:start="715:21" pos:end="717:53">if <condition pos:start="715:24" pos:end="715:55">(<expr pos:start="715:25" pos:end="715:54"><name pos:start="715:25" pos:end="715:48">first_greater1_coeff_idx</name> <operator pos:start="715:50" pos:end="715:51">==</operator> <operator pos:start="715:53" pos:end="715:53">-</operator><literal type="number" pos:start="715:54" pos:end="715:54">1</literal></expr>)</condition><block type="pseudo" pos:start="717:25" pos:end="717:53"><block_content pos:start="717:25" pos:end="717:53">

                        <expr_stmt pos:start="717:25" pos:end="717:53"><expr pos:start="717:25" pos:end="717:52"><name pos:start="717:25" pos:end="717:48">first_greater1_coeff_idx</name> <operator pos:start="717:50" pos:end="717:50">=</operator> <name pos:start="717:52" pos:end="717:52">m</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="719:19" pos:end="723:17">else if <condition pos:start="719:27" pos:end="719:64">(<expr pos:start="719:28" pos:end="719:63"><name pos:start="719:28" pos:end="719:39">greater1_ctx</name> <operator pos:start="719:41" pos:end="719:41">&gt;</operator> <literal type="number" pos:start="719:43" pos:end="719:43">0</literal> <operator pos:start="719:45" pos:end="719:46">&amp;&amp;</operator> <name pos:start="719:48" pos:end="719:59">greater1_ctx</name> <operator pos:start="719:61" pos:end="719:61">&lt;</operator> <literal type="number" pos:start="719:63" pos:end="719:63">3</literal></expr>)</condition> <block pos:start="719:66" pos:end="723:17">{<block_content pos:start="721:21" pos:end="721:35">

                    <expr_stmt pos:start="721:21" pos:end="721:35"><expr pos:start="721:21" pos:end="721:34"><name pos:start="721:21" pos:end="721:32">greater1_ctx</name><operator pos:start="721:33" pos:end="721:34">++</operator></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="727:13" pos:end="727:71"><expr pos:start="727:13" pos:end="727:70"><name pos:start="727:13" pos:end="727:30">first_nz_pos_in_cg</name> <operator pos:start="727:32" pos:end="727:32">=</operator> <name pos:start="727:34" pos:end="727:70"><name pos:start="727:34" pos:end="727:59">significant_coeff_flag_idx</name><index pos:start="727:60" pos:end="727:70">[<expr pos:start="727:61" pos:end="727:69"><name pos:start="727:61" pos:end="727:65">n_end</name> <operator pos:start="727:67" pos:end="727:67">-</operator> <literal type="number" pos:start="727:69" pos:end="727:69">1</literal></expr>]</index></name></expr>;</expr_stmt>



            <if_stmt pos:start="731:13" pos:end="745:76"><if pos:start="731:13" pos:end="741:32">if <condition pos:start="731:16" pos:end="739:37">(<expr pos:start="731:17" pos:end="739:36"><name pos:start="731:17" pos:end="731:48"><name pos:start="731:17" pos:end="731:18">lc</name><operator pos:start="731:19" pos:end="731:20">-&gt;</operator><name pos:start="731:21" pos:end="731:22">cu</name><operator pos:start="731:23" pos:end="731:23">.</operator><name pos:start="731:24" pos:end="731:48">cu_transquant_bypass_flag</name></name> <operator pos:start="731:50" pos:end="731:51">||</operator>

                <operator pos:start="733:17" pos:end="733:17">(</operator><name pos:start="733:18" pos:end="733:33"><name pos:start="733:18" pos:end="733:19">lc</name><operator pos:start="733:20" pos:end="733:21">-&gt;</operator><name pos:start="733:22" pos:end="733:23">cu</name><operator pos:start="733:24" pos:end="733:24">.</operator><name pos:start="733:25" pos:end="733:33">pred_mode</name></name> <operator pos:start="733:35" pos:end="733:36">==</operator>  <name pos:start="733:39" pos:end="733:48">MODE_INTRA</name>  <operator pos:start="733:51" pos:end="733:52">&amp;&amp;</operator>

                 <name pos:start="735:18" pos:end="735:52"><name pos:start="735:18" pos:end="735:18">s</name><operator pos:start="735:19" pos:end="735:20">-&gt;</operator><name pos:start="735:21" pos:end="735:23">sps</name><operator pos:start="735:24" pos:end="735:25">-&gt;</operator><name pos:start="735:26" pos:end="735:52">implicit_rdpcm_enabled_flag</name></name>  <operator pos:start="735:55" pos:end="735:56">&amp;&amp;</operator>  <name pos:start="735:59" pos:end="735:77">transform_skip_flag</name>  <operator pos:start="735:80" pos:end="735:81">&amp;&amp;</operator>

                 <operator pos:start="737:18" pos:end="737:18">(</operator><name pos:start="737:19" pos:end="737:33">pred_mode_intra</name> <operator pos:start="737:35" pos:end="737:36">==</operator> <literal type="number" pos:start="737:38" pos:end="737:39">10</literal> <operator pos:start="737:41" pos:end="737:42">||</operator> <name pos:start="737:44" pos:end="737:58">pred_mode_intra</name>  <operator pos:start="737:61" pos:end="737:62">==</operator>  <literal type="number" pos:start="737:65" pos:end="737:66">26</literal> <operator pos:start="737:68" pos:end="737:68">)</operator><operator pos:start="737:69" pos:end="737:69">)</operator> <operator pos:start="737:71" pos:end="737:72">||</operator>

                 <name pos:start="739:18" pos:end="739:36">explicit_rdpcm_flag</name></expr>)</condition><block type="pseudo" pos:start="741:17" pos:end="741:32"><block_content pos:start="741:17" pos:end="741:32">

                <expr_stmt pos:start="741:17" pos:end="741:32"><expr pos:start="741:17" pos:end="741:31"><name pos:start="741:17" pos:end="741:27">sign_hidden</name> <operator pos:start="741:29" pos:end="741:29">=</operator> <literal type="number" pos:start="741:31" pos:end="741:31">0</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="743:13" pos:end="745:76">else<block type="pseudo" pos:start="745:17" pos:end="745:76"><block_content pos:start="745:17" pos:end="745:76">

                <expr_stmt pos:start="745:17" pos:end="745:76"><expr pos:start="745:17" pos:end="745:75"><name pos:start="745:17" pos:end="745:27">sign_hidden</name> <operator pos:start="745:29" pos:end="745:29">=</operator> <operator pos:start="745:31" pos:end="745:31">(</operator><name pos:start="745:32" pos:end="745:48">last_nz_pos_in_cg</name> <operator pos:start="745:50" pos:end="745:50">-</operator> <name pos:start="745:52" pos:end="745:69">first_nz_pos_in_cg</name> <operator pos:start="745:71" pos:end="745:72">&gt;=</operator> <literal type="number" pos:start="745:74" pos:end="745:74">4</literal><operator pos:start="745:75" pos:end="745:75">)</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



            <if_stmt pos:start="749:13" pos:end="753:13"><if pos:start="749:13" pos:end="753:13">if <condition pos:start="749:16" pos:end="749:47">(<expr pos:start="749:17" pos:end="749:46"><name pos:start="749:17" pos:end="749:40">first_greater1_coeff_idx</name> <operator pos:start="749:42" pos:end="749:43">!=</operator> <operator pos:start="749:45" pos:end="749:45">-</operator><literal type="number" pos:start="749:46" pos:end="749:46">1</literal></expr>)</condition> <block pos:start="749:49" pos:end="753:13">{<block_content pos:start="751:17" pos:end="751:131">

                <expr_stmt pos:start="751:17" pos:end="751:131"><expr pos:start="751:17" pos:end="751:130"><name pos:start="751:17" pos:end="751:71"><name pos:start="751:17" pos:end="751:45">coeff_abs_level_greater1_flag</name><index pos:start="751:46" pos:end="751:71">[<expr pos:start="751:47" pos:end="751:70"><name pos:start="751:47" pos:end="751:70">first_greater1_coeff_idx</name></expr>]</index></name> <operator pos:start="751:73" pos:end="751:74">+=</operator> <call pos:start="751:76" pos:end="751:130"><name pos:start="751:76" pos:end="751:111">coeff_abs_level_greater2_flag_decode</name><argument_list pos:start="751:112" pos:end="751:130">(<argument pos:start="751:113" pos:end="751:113"><expr pos:start="751:113" pos:end="751:113"><name pos:start="751:113" pos:end="751:113">s</name></expr></argument>, <argument pos:start="751:116" pos:end="751:120"><expr pos:start="751:116" pos:end="751:120"><name pos:start="751:116" pos:end="751:120">c_idx</name></expr></argument>, <argument pos:start="751:123" pos:end="751:129"><expr pos:start="751:123" pos:end="751:129"><name pos:start="751:123" pos:end="751:129">ctx_set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <if_stmt pos:start="755:13" pos:end="763:13"><if pos:start="755:13" pos:end="759:13">if <condition pos:start="755:16" pos:end="755:64">(<expr pos:start="755:17" pos:end="755:62"><operator pos:start="755:17" pos:end="755:17">!</operator><name pos:start="755:18" pos:end="755:46"><name pos:start="755:18" pos:end="755:18">s</name><operator pos:start="755:19" pos:end="755:20">-&gt;</operator><name pos:start="755:21" pos:end="755:23">pps</name><operator pos:start="755:24" pos:end="755:25">-&gt;</operator><name pos:start="755:26" pos:end="755:46">sign_data_hiding_flag</name></name> <operator pos:start="755:48" pos:end="755:49">||</operator> <operator pos:start="755:51" pos:end="755:51">!</operator><name pos:start="755:52" pos:end="755:62">sign_hidden</name></expr> )</condition> <block pos:start="755:66" pos:end="759:13">{<block_content pos:start="757:17" pos:end="757:123">

                <expr_stmt pos:start="757:17" pos:end="757:123"><expr pos:start="757:17" pos:end="757:122"><name pos:start="757:17" pos:end="757:31">coeff_sign_flag</name> <operator pos:start="757:33" pos:end="757:33">=</operator> <call pos:start="757:35" pos:end="757:86"><name pos:start="757:35" pos:end="757:56">coeff_sign_flag_decode</name><argument_list pos:start="757:57" pos:end="757:86">(<argument pos:start="757:58" pos:end="757:58"><expr pos:start="757:58" pos:end="757:58"><name pos:start="757:58" pos:end="757:58">s</name></expr></argument>, <argument pos:start="757:61" pos:end="757:85"><expr pos:start="757:61" pos:end="757:85"><name pos:start="757:61" pos:end="757:85">nb_significant_coeff_flag</name></expr></argument>)</argument_list></call> <operator pos:start="757:88" pos:end="757:89">&lt;&lt;</operator> <operator pos:start="757:91" pos:end="757:91">(</operator><literal type="number" pos:start="757:92" pos:end="757:95">16</literal> <operator pos:start="757:95" pos:end="757:95">-</operator> <name pos:start="757:97" pos:end="757:121">nb_significant_coeff_flag</name><operator pos:start="757:122" pos:end="757:122">)</operator></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="759:15" pos:end="763:13">else <block pos:start="759:20" pos:end="763:13">{<block_content pos:start="761:17" pos:end="761:133">

                <expr_stmt pos:start="761:17" pos:end="761:133"><expr pos:start="761:17" pos:end="761:132"><name pos:start="761:17" pos:end="761:31">coeff_sign_flag</name> <operator pos:start="761:33" pos:end="761:33">=</operator> <call pos:start="761:35" pos:end="761:90"><name pos:start="761:35" pos:end="761:56">coeff_sign_flag_decode</name><argument_list pos:start="761:57" pos:end="761:90">(<argument pos:start="761:58" pos:end="761:58"><expr pos:start="761:58" pos:end="761:58"><name pos:start="761:58" pos:end="761:58">s</name></expr></argument>, <argument pos:start="761:61" pos:end="761:89"><expr pos:start="761:61" pos:end="761:89"><name pos:start="761:61" pos:end="761:85">nb_significant_coeff_flag</name> <operator pos:start="761:87" pos:end="761:87">-</operator> <literal type="number" pos:start="761:89" pos:end="761:89">1</literal></expr></argument>)</argument_list></call> <operator pos:start="761:92" pos:end="761:93">&lt;&lt;</operator> <operator pos:start="761:95" pos:end="761:95">(</operator><literal type="number" pos:start="761:96" pos:end="761:99">16</literal> <operator pos:start="761:99" pos:end="761:99">-</operator> <operator pos:start="761:101" pos:end="761:101">(</operator><name pos:start="761:102" pos:end="761:126">nb_significant_coeff_flag</name> <operator pos:start="761:128" pos:end="761:128">-</operator> <literal type="number" pos:start="761:130" pos:end="761:130">1</literal><operator pos:start="761:131" pos:end="761:131">)</operator><operator pos:start="761:132" pos:end="761:132">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>



            <for pos:start="767:13" pos:end="905:13">for <control pos:start="767:17" pos:end="767:39">(<init pos:start="767:18" pos:end="767:23"><expr pos:start="767:18" pos:end="767:22"><name pos:start="767:18" pos:end="767:18">m</name> <operator pos:start="767:20" pos:end="767:20">=</operator> <literal type="number" pos:start="767:22" pos:end="767:22">0</literal></expr>;</init> <condition pos:start="767:25" pos:end="767:34"><expr pos:start="767:25" pos:end="767:33"><name pos:start="767:25" pos:end="767:25">m</name> <operator pos:start="767:27" pos:end="767:27">&lt;</operator> <name pos:start="767:29" pos:end="767:33">n_end</name></expr>;</condition> <incr pos:start="767:36" pos:end="767:38"><expr pos:start="767:36" pos:end="767:38"><name pos:start="767:36" pos:end="767:36">m</name><operator pos:start="767:37" pos:end="767:38">++</operator></expr></incr>)</control> <block pos:start="767:41" pos:end="905:13">{<block_content pos:start="769:17" pos:end="903:67">

                <expr_stmt pos:start="769:17" pos:end="769:50"><expr pos:start="769:17" pos:end="769:49"><name pos:start="769:17" pos:end="769:17">n</name> <operator pos:start="769:19" pos:end="769:19">=</operator> <name pos:start="769:21" pos:end="769:49"><name pos:start="769:21" pos:end="769:46">significant_coeff_flag_idx</name><index pos:start="769:47" pos:end="769:49">[<expr pos:start="769:48" pos:end="769:48"><name pos:start="769:48" pos:end="769:48">m</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="771:17" pos:end="771:37"><expr pos:start="771:17" pos:end="771:36"><call pos:start="771:17" pos:end="771:36"><name pos:start="771:17" pos:end="771:25">GET_COORD</name><argument_list pos:start="771:26" pos:end="771:36">(<argument pos:start="771:27" pos:end="771:32"><expr pos:start="771:27" pos:end="771:32"><name pos:start="771:27" pos:end="771:32">offset</name></expr></argument>, <argument pos:start="771:35" pos:end="771:35"><expr pos:start="771:35" pos:end="771:35"><name pos:start="771:35" pos:end="771:35">n</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="773:17" pos:end="839:17"><if pos:start="773:17" pos:end="809:17">if <condition pos:start="773:20" pos:end="773:26">(<expr pos:start="773:21" pos:end="773:25"><name pos:start="773:21" pos:end="773:21">m</name> <operator pos:start="773:23" pos:end="773:23">&lt;</operator> <literal type="number" pos:start="773:25" pos:end="773:25">8</literal></expr>)</condition> <block pos:start="773:28" pos:end="809:17">{<block_content pos:start="775:21" pos:end="807:21">

                    <expr_stmt pos:start="775:21" pos:end="775:77"><expr pos:start="775:21" pos:end="775:76"><name pos:start="775:21" pos:end="775:37">trans_coeff_level</name> <operator pos:start="775:39" pos:end="775:39">=</operator> <literal type="number" pos:start="775:41" pos:end="775:43">1</literal> <operator pos:start="775:43" pos:end="775:43">+</operator> <name pos:start="775:45" pos:end="775:76"><name pos:start="775:45" pos:end="775:73">coeff_abs_level_greater1_flag</name><index pos:start="775:74" pos:end="775:76">[<expr pos:start="775:75" pos:end="775:75"><name pos:start="775:75" pos:end="775:75">m</name></expr>]</index></name></expr>;</expr_stmt>

                    <if_stmt pos:start="777:21" pos:end="807:21"><if pos:start="777:21" pos:end="807:21">if <condition pos:start="777:24" pos:end="777:87">(<expr pos:start="777:25" pos:end="777:86"><name pos:start="777:25" pos:end="777:41">trans_coeff_level</name> <operator pos:start="777:43" pos:end="777:44">==</operator> <operator pos:start="777:46" pos:end="777:46">(</operator><ternary pos:start="777:47" pos:end="777:85"><condition pos:start="777:47" pos:end="777:79"><expr pos:start="777:47" pos:end="777:77"><operator pos:start="777:47" pos:end="777:47">(</operator><name pos:start="777:48" pos:end="777:48">m</name> <operator pos:start="777:50" pos:end="777:51">==</operator> <name pos:start="777:53" pos:end="777:76">first_greater1_coeff_idx</name><operator pos:start="777:77" pos:end="777:77">)</operator></expr> ?</condition><then pos:start="777:81" pos:end="777:81"> <expr pos:start="777:81" pos:end="777:81"><literal type="number" pos:start="777:81" pos:end="777:81">3</literal></expr> </then><else pos:start="777:83" pos:end="777:85">: <expr pos:start="777:85" pos:end="777:85"><literal type="number" pos:start="777:85" pos:end="777:85">2</literal></expr></else></ternary><operator pos:start="777:86" pos:end="777:86">)</operator></expr>)</condition> <block pos:start="777:89" pos:end="807:21">{<block_content pos:start="779:25" pos:end="805:25">

                        <decl_stmt pos:start="779:25" pos:end="779:111"><decl pos:start="779:25" pos:end="779:110"><type pos:start="779:25" pos:end="779:27"><name pos:start="779:25" pos:end="779:27">int</name></type> <name pos:start="779:29" pos:end="779:58">last_coeff_abs_level_remaining</name> <init pos:start="779:60" pos:end="779:110">= <expr pos:start="779:62" pos:end="779:110"><call pos:start="779:62" pos:end="779:110"><name pos:start="779:62" pos:end="779:93">coeff_abs_level_remaining_decode</name><argument_list pos:start="779:94" pos:end="779:110">(<argument pos:start="779:95" pos:end="779:95"><expr pos:start="779:95" pos:end="779:95"><name pos:start="779:95" pos:end="779:95">s</name></expr></argument>, <argument pos:start="779:98" pos:end="779:109"><expr pos:start="779:98" pos:end="779:109"><name pos:start="779:98" pos:end="779:109">c_rice_param</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                        <expr_stmt pos:start="783:25" pos:end="783:76"><expr pos:start="783:25" pos:end="783:75"><name pos:start="783:25" pos:end="783:41">trans_coeff_level</name> <operator pos:start="783:43" pos:end="783:44">+=</operator> <name pos:start="783:46" pos:end="783:75">last_coeff_abs_level_remaining</name></expr>;</expr_stmt>

                        <if_stmt pos:start="785:25" pos:end="787:139"><if pos:start="785:25" pos:end="787:139">if <condition pos:start="785:28" pos:end="785:68">(<expr pos:start="785:29" pos:end="785:67"><name pos:start="785:29" pos:end="785:45">trans_coeff_level</name> <operator pos:start="785:47" pos:end="785:47">&gt;</operator> <operator pos:start="785:49" pos:end="785:49">(</operator><literal type="number" pos:start="785:50" pos:end="785:50">3</literal> <operator pos:start="785:52" pos:end="785:53">&lt;&lt;</operator> <name pos:start="785:55" pos:end="785:66">c_rice_param</name><operator pos:start="785:67" pos:end="785:67">)</operator></expr>)</condition><block type="pseudo" pos:start="787:29" pos:end="787:139"><block_content pos:start="787:29" pos:end="787:139">

                            <expr_stmt pos:start="787:29" pos:end="787:139"><expr pos:start="787:29" pos:end="787:138"><name pos:start="787:29" pos:end="787:40">c_rice_param</name> <operator pos:start="787:42" pos:end="787:42">=</operator> <ternary pos:start="787:44" pos:end="787:138"><condition pos:start="787:44" pos:end="787:92"><expr pos:start="787:44" pos:end="787:90"><name pos:start="787:44" pos:end="787:90"><name pos:start="787:44" pos:end="787:44">s</name><operator pos:start="787:45" pos:end="787:46">-&gt;</operator><name pos:start="787:47" pos:end="787:49">sps</name><operator pos:start="787:50" pos:end="787:51">-&gt;</operator><name pos:start="787:52" pos:end="787:90">persistent_rice_adaptation_enabled_flag</name></name></expr> ?</condition><then pos:start="787:94" pos:end="787:109"> <expr pos:start="787:94" pos:end="787:109"><name pos:start="787:94" pos:end="787:105">c_rice_param</name> <operator pos:start="787:107" pos:end="787:107">+</operator> <literal type="number" pos:start="787:109" pos:end="787:109">1</literal></expr> </then><else pos:start="787:111" pos:end="787:138">: <expr pos:start="787:113" pos:end="787:138"><call pos:start="787:113" pos:end="787:138"><name pos:start="787:113" pos:end="787:117">FFMIN</name><argument_list pos:start="787:118" pos:end="787:138">(<argument pos:start="787:119" pos:end="787:134"><expr pos:start="787:119" pos:end="787:134"><name pos:start="787:119" pos:end="787:130">c_rice_param</name> <operator pos:start="787:132" pos:end="787:132">+</operator> <literal type="number" pos:start="787:134" pos:end="787:134">1</literal></expr></argument>, <argument pos:start="787:137" pos:end="787:137"><expr pos:start="787:137" pos:end="787:137"><literal type="number" pos:start="787:137" pos:end="787:137">4</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <if_stmt pos:start="789:25" pos:end="805:25"><if pos:start="789:25" pos:end="805:25">if <condition pos:start="789:28" pos:end="789:90">(<expr pos:start="789:29" pos:end="789:89"><name pos:start="789:29" pos:end="789:75"><name pos:start="789:29" pos:end="789:29">s</name><operator pos:start="789:30" pos:end="789:31">-&gt;</operator><name pos:start="789:32" pos:end="789:34">sps</name><operator pos:start="789:35" pos:end="789:36">-&gt;</operator><name pos:start="789:37" pos:end="789:75">persistent_rice_adaptation_enabled_flag</name></name> <operator pos:start="789:77" pos:end="789:78">&amp;&amp;</operator> <operator pos:start="789:80" pos:end="789:80">!</operator><name pos:start="789:81" pos:end="789:89">rice_init</name></expr>)</condition> <block pos:start="789:92" pos:end="805:25">{<block_content pos:start="791:29" pos:end="803:42">

                            <decl_stmt pos:start="791:29" pos:end="791:76"><decl pos:start="791:29" pos:end="791:75"><type pos:start="791:29" pos:end="791:31"><name pos:start="791:29" pos:end="791:31">int</name></type> <name pos:start="791:33" pos:end="791:45">c_rice_p_init</name> <init pos:start="791:47" pos:end="791:75">= <expr pos:start="791:49" pos:end="791:75"><name pos:start="791:49" pos:end="791:71"><name pos:start="791:49" pos:end="791:50">lc</name><operator pos:start="791:51" pos:end="791:52">-&gt;</operator><name pos:start="791:53" pos:end="791:62">stat_coeff</name><index pos:start="791:63" pos:end="791:71">[<expr pos:start="791:64" pos:end="791:70"><name pos:start="791:64" pos:end="791:70">sb_type</name></expr>]</index></name> <operator pos:start="791:73" pos:end="791:73">/</operator> <literal type="number" pos:start="791:75" pos:end="791:75">4</literal></expr></init></decl>;</decl_stmt>

                            <if_stmt pos:start="793:29" pos:end="801:62"><if pos:start="793:29" pos:end="795:58">if <condition pos:start="793:32" pos:end="793:87">(<expr pos:start="793:33" pos:end="793:86"><name pos:start="793:33" pos:end="793:62">last_coeff_abs_level_remaining</name> <operator pos:start="793:64" pos:end="793:65">&gt;=</operator> <operator pos:start="793:67" pos:end="793:67">(</operator><literal type="number" pos:start="793:68" pos:end="793:68">3</literal> <operator pos:start="793:70" pos:end="793:71">&lt;&lt;</operator> <name pos:start="793:73" pos:end="793:85">c_rice_p_init</name><operator pos:start="793:86" pos:end="793:86">)</operator></expr>)</condition><block type="pseudo" pos:start="795:33" pos:end="795:58"><block_content pos:start="795:33" pos:end="795:58">

                                <expr_stmt pos:start="795:33" pos:end="795:58"><expr pos:start="795:33" pos:end="795:57"><name pos:start="795:33" pos:end="795:55"><name pos:start="795:33" pos:end="795:34">lc</name><operator pos:start="795:35" pos:end="795:36">-&gt;</operator><name pos:start="795:37" pos:end="795:46">stat_coeff</name><index pos:start="795:47" pos:end="795:55">[<expr pos:start="795:48" pos:end="795:54"><name pos:start="795:48" pos:end="795:54">sb_type</name></expr>]</index></name><operator pos:start="795:56" pos:end="795:57">++</operator></expr>;</expr_stmt></block_content></block></if>

                            <if type="elseif" pos:start="797:29" pos:end="801:62">else if <condition pos:start="797:37" pos:end="797:95">(<expr pos:start="797:38" pos:end="797:94"><literal type="number" pos:start="797:38" pos:end="797:38">2</literal> <operator pos:start="797:40" pos:end="797:40">*</operator> <name pos:start="797:42" pos:end="797:71">last_coeff_abs_level_remaining</name> <operator pos:start="797:73" pos:end="797:73">&lt;</operator> <operator pos:start="797:75" pos:end="797:75">(</operator><literal type="number" pos:start="797:76" pos:end="797:76">1</literal> <operator pos:start="797:78" pos:end="797:79">&lt;&lt;</operator> <name pos:start="797:81" pos:end="797:93">c_rice_p_init</name><operator pos:start="797:94" pos:end="797:94">)</operator></expr>)</condition><block type="pseudo" pos:start="799:33" pos:end="801:62"><block_content pos:start="799:33" pos:end="801:62">

                                <if_stmt pos:start="799:33" pos:end="801:62"><if pos:start="799:33" pos:end="801:62">if <condition pos:start="799:36" pos:end="799:64">(<expr pos:start="799:37" pos:end="799:63"><name pos:start="799:37" pos:end="799:59"><name pos:start="799:37" pos:end="799:38">lc</name><operator pos:start="799:39" pos:end="799:40">-&gt;</operator><name pos:start="799:41" pos:end="799:50">stat_coeff</name><index pos:start="799:51" pos:end="799:59">[<expr pos:start="799:52" pos:end="799:58"><name pos:start="799:52" pos:end="799:58">sb_type</name></expr>]</index></name> <operator pos:start="799:61" pos:end="799:61">&gt;</operator> <literal type="number" pos:start="799:63" pos:end="799:63">0</literal></expr>)</condition><block type="pseudo" pos:start="801:37" pos:end="801:62"><block_content pos:start="801:37" pos:end="801:62">

                                    <expr_stmt pos:start="801:37" pos:end="801:62"><expr pos:start="801:37" pos:end="801:61"><name pos:start="801:37" pos:end="801:59"><name pos:start="801:37" pos:end="801:38">lc</name><operator pos:start="801:39" pos:end="801:40">-&gt;</operator><name pos:start="801:41" pos:end="801:50">stat_coeff</name><index pos:start="801:51" pos:end="801:59">[<expr pos:start="801:52" pos:end="801:58"><name pos:start="801:52" pos:end="801:58">sb_type</name></expr>]</index></name><operator pos:start="801:60" pos:end="801:61">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

                            <expr_stmt pos:start="803:29" pos:end="803:42"><expr pos:start="803:29" pos:end="803:41"><name pos:start="803:29" pos:end="803:37">rice_init</name> <operator pos:start="803:39" pos:end="803:39">=</operator> <literal type="number" pos:start="803:41" pos:end="803:41">1</literal></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="809:19" pos:end="839:17">else <block pos:start="809:24" pos:end="839:17">{<block_content pos:start="811:21" pos:end="837:21">

                    <decl_stmt pos:start="811:21" pos:end="811:107"><decl pos:start="811:21" pos:end="811:106"><type pos:start="811:21" pos:end="811:23"><name pos:start="811:21" pos:end="811:23">int</name></type> <name pos:start="811:25" pos:end="811:54">last_coeff_abs_level_remaining</name> <init pos:start="811:56" pos:end="811:106">= <expr pos:start="811:58" pos:end="811:106"><call pos:start="811:58" pos:end="811:106"><name pos:start="811:58" pos:end="811:89">coeff_abs_level_remaining_decode</name><argument_list pos:start="811:90" pos:end="811:106">(<argument pos:start="811:91" pos:end="811:91"><expr pos:start="811:91" pos:end="811:91"><name pos:start="811:91" pos:end="811:91">s</name></expr></argument>, <argument pos:start="811:94" pos:end="811:105"><expr pos:start="811:94" pos:end="811:105"><name pos:start="811:94" pos:end="811:105">c_rice_param</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



                    <expr_stmt pos:start="815:21" pos:end="815:75"><expr pos:start="815:21" pos:end="815:74"><name pos:start="815:21" pos:end="815:37">trans_coeff_level</name> <operator pos:start="815:39" pos:end="815:39">=</operator> <literal type="number" pos:start="815:41" pos:end="815:43">1</literal> <operator pos:start="815:43" pos:end="815:43">+</operator> <name pos:start="815:45" pos:end="815:74">last_coeff_abs_level_remaining</name></expr>;</expr_stmt>

                    <if_stmt pos:start="817:21" pos:end="819:135"><if pos:start="817:21" pos:end="819:135">if <condition pos:start="817:24" pos:end="817:64">(<expr pos:start="817:25" pos:end="817:63"><name pos:start="817:25" pos:end="817:41">trans_coeff_level</name> <operator pos:start="817:43" pos:end="817:43">&gt;</operator> <operator pos:start="817:45" pos:end="817:45">(</operator><literal type="number" pos:start="817:46" pos:end="817:46">3</literal> <operator pos:start="817:48" pos:end="817:49">&lt;&lt;</operator> <name pos:start="817:51" pos:end="817:62">c_rice_param</name><operator pos:start="817:63" pos:end="817:63">)</operator></expr>)</condition><block type="pseudo" pos:start="819:25" pos:end="819:135"><block_content pos:start="819:25" pos:end="819:135">

                        <expr_stmt pos:start="819:25" pos:end="819:135"><expr pos:start="819:25" pos:end="819:134"><name pos:start="819:25" pos:end="819:36">c_rice_param</name> <operator pos:start="819:38" pos:end="819:38">=</operator> <ternary pos:start="819:40" pos:end="819:134"><condition pos:start="819:40" pos:end="819:88"><expr pos:start="819:40" pos:end="819:86"><name pos:start="819:40" pos:end="819:86"><name pos:start="819:40" pos:end="819:40">s</name><operator pos:start="819:41" pos:end="819:42">-&gt;</operator><name pos:start="819:43" pos:end="819:45">sps</name><operator pos:start="819:46" pos:end="819:47">-&gt;</operator><name pos:start="819:48" pos:end="819:86">persistent_rice_adaptation_enabled_flag</name></name></expr> ?</condition><then pos:start="819:90" pos:end="819:105"> <expr pos:start="819:90" pos:end="819:105"><name pos:start="819:90" pos:end="819:101">c_rice_param</name> <operator pos:start="819:103" pos:end="819:103">+</operator> <literal type="number" pos:start="819:105" pos:end="819:105">1</literal></expr> </then><else pos:start="819:107" pos:end="819:134">: <expr pos:start="819:109" pos:end="819:134"><call pos:start="819:109" pos:end="819:134"><name pos:start="819:109" pos:end="819:113">FFMIN</name><argument_list pos:start="819:114" pos:end="819:134">(<argument pos:start="819:115" pos:end="819:130"><expr pos:start="819:115" pos:end="819:130"><name pos:start="819:115" pos:end="819:126">c_rice_param</name> <operator pos:start="819:128" pos:end="819:128">+</operator> <literal type="number" pos:start="819:130" pos:end="819:130">1</literal></expr></argument>, <argument pos:start="819:133" pos:end="819:133"><expr pos:start="819:133" pos:end="819:133"><literal type="number" pos:start="819:133" pos:end="819:133">4</literal></expr></argument>)</argument_list></call></expr></else></ternary></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <if_stmt pos:start="821:21" pos:end="837:21"><if pos:start="821:21" pos:end="837:21">if <condition pos:start="821:24" pos:end="821:86">(<expr pos:start="821:25" pos:end="821:85"><name pos:start="821:25" pos:end="821:71"><name pos:start="821:25" pos:end="821:25">s</name><operator pos:start="821:26" pos:end="821:27">-&gt;</operator><name pos:start="821:28" pos:end="821:30">sps</name><operator pos:start="821:31" pos:end="821:32">-&gt;</operator><name pos:start="821:33" pos:end="821:71">persistent_rice_adaptation_enabled_flag</name></name> <operator pos:start="821:73" pos:end="821:74">&amp;&amp;</operator> <operator pos:start="821:76" pos:end="821:76">!</operator><name pos:start="821:77" pos:end="821:85">rice_init</name></expr>)</condition> <block pos:start="821:88" pos:end="837:21">{<block_content pos:start="823:25" pos:end="835:38">

                        <decl_stmt pos:start="823:25" pos:end="823:72"><decl pos:start="823:25" pos:end="823:71"><type pos:start="823:25" pos:end="823:27"><name pos:start="823:25" pos:end="823:27">int</name></type> <name pos:start="823:29" pos:end="823:41">c_rice_p_init</name> <init pos:start="823:43" pos:end="823:71">= <expr pos:start="823:45" pos:end="823:71"><name pos:start="823:45" pos:end="823:67"><name pos:start="823:45" pos:end="823:46">lc</name><operator pos:start="823:47" pos:end="823:48">-&gt;</operator><name pos:start="823:49" pos:end="823:58">stat_coeff</name><index pos:start="823:59" pos:end="823:67">[<expr pos:start="823:60" pos:end="823:66"><name pos:start="823:60" pos:end="823:66">sb_type</name></expr>]</index></name> <operator pos:start="823:69" pos:end="823:69">/</operator> <literal type="number" pos:start="823:71" pos:end="823:71">4</literal></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="825:25" pos:end="833:58"><if pos:start="825:25" pos:end="827:54">if <condition pos:start="825:28" pos:end="825:83">(<expr pos:start="825:29" pos:end="825:82"><name pos:start="825:29" pos:end="825:58">last_coeff_abs_level_remaining</name> <operator pos:start="825:60" pos:end="825:61">&gt;=</operator> <operator pos:start="825:63" pos:end="825:63">(</operator><literal type="number" pos:start="825:64" pos:end="825:64">3</literal> <operator pos:start="825:66" pos:end="825:67">&lt;&lt;</operator> <name pos:start="825:69" pos:end="825:81">c_rice_p_init</name><operator pos:start="825:82" pos:end="825:82">)</operator></expr>)</condition><block type="pseudo" pos:start="827:29" pos:end="827:54"><block_content pos:start="827:29" pos:end="827:54">

                            <expr_stmt pos:start="827:29" pos:end="827:54"><expr pos:start="827:29" pos:end="827:53"><name pos:start="827:29" pos:end="827:51"><name pos:start="827:29" pos:end="827:30">lc</name><operator pos:start="827:31" pos:end="827:32">-&gt;</operator><name pos:start="827:33" pos:end="827:42">stat_coeff</name><index pos:start="827:43" pos:end="827:51">[<expr pos:start="827:44" pos:end="827:50"><name pos:start="827:44" pos:end="827:50">sb_type</name></expr>]</index></name><operator pos:start="827:52" pos:end="827:53">++</operator></expr>;</expr_stmt></block_content></block></if>

                        <if type="elseif" pos:start="829:25" pos:end="833:58">else if <condition pos:start="829:33" pos:end="829:91">(<expr pos:start="829:34" pos:end="829:90"><literal type="number" pos:start="829:34" pos:end="829:34">2</literal> <operator pos:start="829:36" pos:end="829:36">*</operator> <name pos:start="829:38" pos:end="829:67">last_coeff_abs_level_remaining</name> <operator pos:start="829:69" pos:end="829:69">&lt;</operator> <operator pos:start="829:71" pos:end="829:71">(</operator><literal type="number" pos:start="829:72" pos:end="829:72">1</literal> <operator pos:start="829:74" pos:end="829:75">&lt;&lt;</operator> <name pos:start="829:77" pos:end="829:89">c_rice_p_init</name><operator pos:start="829:90" pos:end="829:90">)</operator></expr>)</condition><block type="pseudo" pos:start="831:29" pos:end="833:58"><block_content pos:start="831:29" pos:end="833:58">

                            <if_stmt pos:start="831:29" pos:end="833:58"><if pos:start="831:29" pos:end="833:58">if <condition pos:start="831:32" pos:end="831:60">(<expr pos:start="831:33" pos:end="831:59"><name pos:start="831:33" pos:end="831:55"><name pos:start="831:33" pos:end="831:34">lc</name><operator pos:start="831:35" pos:end="831:36">-&gt;</operator><name pos:start="831:37" pos:end="831:46">stat_coeff</name><index pos:start="831:47" pos:end="831:55">[<expr pos:start="831:48" pos:end="831:54"><name pos:start="831:48" pos:end="831:54">sb_type</name></expr>]</index></name> <operator pos:start="831:57" pos:end="831:57">&gt;</operator> <literal type="number" pos:start="831:59" pos:end="831:59">0</literal></expr>)</condition><block type="pseudo" pos:start="833:33" pos:end="833:58"><block_content pos:start="833:33" pos:end="833:58">

                                <expr_stmt pos:start="833:33" pos:end="833:58"><expr pos:start="833:33" pos:end="833:57"><name pos:start="833:33" pos:end="833:55"><name pos:start="833:33" pos:end="833:34">lc</name><operator pos:start="833:35" pos:end="833:36">-&gt;</operator><name pos:start="833:37" pos:end="833:46">stat_coeff</name><index pos:start="833:47" pos:end="833:55">[<expr pos:start="833:48" pos:end="833:54"><name pos:start="833:48" pos:end="833:54">sb_type</name></expr>]</index></name><operator pos:start="833:56" pos:end="833:57">--</operator></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="835:25" pos:end="835:38"><expr pos:start="835:25" pos:end="835:37"><name pos:start="835:25" pos:end="835:33">rice_init</name> <operator pos:start="835:35" pos:end="835:35">=</operator> <literal type="number" pos:start="835:37" pos:end="835:37">1</literal></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="841:17" pos:end="849:17"><if pos:start="841:17" pos:end="849:17">if <condition pos:start="841:20" pos:end="841:65">(<expr pos:start="841:21" pos:end="841:64"><name pos:start="841:21" pos:end="841:49"><name pos:start="841:21" pos:end="841:21">s</name><operator pos:start="841:22" pos:end="841:23">-&gt;</operator><name pos:start="841:24" pos:end="841:26">pps</name><operator pos:start="841:27" pos:end="841:28">-&gt;</operator><name pos:start="841:29" pos:end="841:49">sign_data_hiding_flag</name></name> <operator pos:start="841:51" pos:end="841:52">&amp;&amp;</operator> <name pos:start="841:54" pos:end="841:64">sign_hidden</name></expr>)</condition> <block pos:start="841:67" pos:end="849:17">{<block_content pos:start="843:21" pos:end="847:63">

                    <expr_stmt pos:start="843:21" pos:end="843:49"><expr pos:start="843:21" pos:end="843:48"><name pos:start="843:21" pos:end="843:27">sum_abs</name> <operator pos:start="843:29" pos:end="843:30">+=</operator> <name pos:start="843:32" pos:end="843:48">trans_coeff_level</name></expr>;</expr_stmt>

                    <if_stmt pos:start="845:21" pos:end="847:63"><if pos:start="845:21" pos:end="847:63">if <condition pos:start="845:24" pos:end="845:63">(<expr pos:start="845:25" pos:end="845:62"><name pos:start="845:25" pos:end="845:25">n</name> <operator pos:start="845:27" pos:end="845:28">==</operator> <name pos:start="845:30" pos:end="845:47">first_nz_pos_in_cg</name> <operator pos:start="845:49" pos:end="845:50">&amp;&amp;</operator> <operator pos:start="845:52" pos:end="845:52">(</operator><name pos:start="845:53" pos:end="845:59">sum_abs</name><operator pos:start="845:60" pos:end="845:60">&amp;</operator><literal type="number" pos:start="845:61" pos:end="845:61">1</literal><operator pos:start="845:62" pos:end="845:62">)</operator></expr>)</condition><block type="pseudo" pos:start="847:25" pos:end="847:63"><block_content pos:start="847:25" pos:end="847:63">

                        <expr_stmt pos:start="847:25" pos:end="847:63"><expr pos:start="847:25" pos:end="847:62"><name pos:start="847:25" pos:end="847:41">trans_coeff_level</name> <operator pos:start="847:43" pos:end="847:43">=</operator> <operator pos:start="847:45" pos:end="847:45">-</operator><name pos:start="847:46" pos:end="847:62">trans_coeff_level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="851:17" pos:end="853:59"><if pos:start="851:17" pos:end="853:59">if <condition pos:start="851:20" pos:end="851:42">(<expr pos:start="851:21" pos:end="851:41"><name pos:start="851:21" pos:end="851:35">coeff_sign_flag</name> <operator pos:start="851:37" pos:end="851:38">&gt;&gt;</operator> <literal type="number" pos:start="851:40" pos:end="851:41">15</literal></expr>)</condition><block type="pseudo" pos:start="853:21" pos:end="853:59"><block_content pos:start="853:21" pos:end="853:59">

                    <expr_stmt pos:start="853:21" pos:end="853:59"><expr pos:start="853:21" pos:end="853:58"><name pos:start="853:21" pos:end="853:37">trans_coeff_level</name> <operator pos:start="853:39" pos:end="853:39">=</operator> <operator pos:start="853:41" pos:end="853:41">-</operator><name pos:start="853:42" pos:end="853:58">trans_coeff_level</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="855:17" pos:end="855:38"><expr pos:start="855:17" pos:end="855:37"><name pos:start="855:17" pos:end="855:31">coeff_sign_flag</name> <operator pos:start="855:33" pos:end="855:35">&lt;&lt;=</operator> <literal type="number" pos:start="855:37" pos:end="855:37">1</literal></expr>;</expr_stmt>

                <if_stmt pos:start="857:17" pos:end="901:17"><if pos:start="857:17" pos:end="901:17">if<condition pos:start="857:19" pos:end="857:53">(<expr pos:start="857:20" pos:end="857:52"><operator pos:start="857:20" pos:end="857:20">!</operator><name pos:start="857:21" pos:end="857:52"><name pos:start="857:21" pos:end="857:22">lc</name><operator pos:start="857:23" pos:end="857:24">-&gt;</operator><name pos:start="857:25" pos:end="857:26">cu</name><operator pos:start="857:27" pos:end="857:27">.</operator><name pos:start="857:28" pos:end="857:52">cu_transquant_bypass_flag</name></name></expr>)</condition> <block pos:start="857:55" pos:end="901:17">{<block_content pos:start="859:21" pos:end="899:21">

                    <if_stmt pos:start="859:21" pos:end="883:21"><if pos:start="859:21" pos:end="883:21">if <condition pos:start="859:24" pos:end="859:106">(<expr pos:start="859:25" pos:end="859:105"><name pos:start="859:25" pos:end="859:56"><name pos:start="859:25" pos:end="859:25">s</name><operator pos:start="859:26" pos:end="859:27">-&gt;</operator><name pos:start="859:28" pos:end="859:30">sps</name><operator pos:start="859:31" pos:end="859:32">-&gt;</operator><name pos:start="859:33" pos:end="859:56">scaling_list_enable_flag</name></name> <operator pos:start="859:58" pos:end="859:59">&amp;&amp;</operator> <operator pos:start="859:61" pos:end="859:61">!</operator><operator pos:start="859:62" pos:end="859:62">(</operator><name pos:start="859:63" pos:end="859:81">transform_skip_flag</name> <operator pos:start="859:83" pos:end="859:84">&amp;&amp;</operator> <name pos:start="859:86" pos:end="859:100">log2_trafo_size</name> <operator pos:start="859:102" pos:end="859:102">&gt;</operator> <literal type="number" pos:start="859:104" pos:end="859:104">2</literal><operator pos:start="859:105" pos:end="859:105">)</operator></expr>)</condition> <block pos:start="859:108" pos:end="883:21">{<block_content pos:start="861:25" pos:end="881:25">

                        <if_stmt pos:start="861:25" pos:end="881:25"><if pos:start="861:25" pos:end="877:25">if<condition pos:start="861:27" pos:end="861:61">(<expr pos:start="861:28" pos:end="861:60"><name pos:start="861:28" pos:end="861:30">y_c</name> <operator pos:start="861:32" pos:end="861:33">||</operator> <name pos:start="861:35" pos:end="861:37">x_c</name> <operator pos:start="861:39" pos:end="861:40">||</operator> <name pos:start="861:42" pos:end="861:56">log2_trafo_size</name> <operator pos:start="861:58" pos:end="861:58">&lt;</operator> <literal type="number" pos:start="861:60" pos:end="861:60">4</literal></expr>)</condition> <block pos:start="861:63" pos:end="877:25">{<block_content pos:start="863:29" pos:end="875:56">

                            <switch pos:start="863:29" pos:end="873:29">switch<condition pos:start="863:35" pos:end="863:51">(<expr pos:start="863:36" pos:end="863:50"><name pos:start="863:36" pos:end="863:50">log2_trafo_size</name></expr>)</condition> <block pos:start="863:53" pos:end="873:29">{<block_content pos:start="865:33" pos:end="871:71">

                                <case pos:start="865:33" pos:end="865:39">case <expr pos:start="865:38" pos:end="865:38"><literal type="number" pos:start="865:38" pos:end="865:38">3</literal></expr>:</case> <expr_stmt pos:start="865:41" pos:end="865:63"><expr pos:start="865:41" pos:end="865:62"><name pos:start="865:41" pos:end="865:43">pos</name> <operator pos:start="865:45" pos:end="865:45">=</operator> <operator pos:start="865:47" pos:end="865:47">(</operator><name pos:start="865:48" pos:end="865:50">y_c</name> <operator pos:start="865:52" pos:end="865:53">&lt;&lt;</operator> <literal type="number" pos:start="865:55" pos:end="865:55">3</literal><operator pos:start="865:56" pos:end="865:56">)</operator> <operator pos:start="865:58" pos:end="865:58">+</operator> <name pos:start="865:60" pos:end="865:62">x_c</name></expr>;</expr_stmt> <break pos:start="865:65" pos:end="865:70">break;</break>

                                <case pos:start="867:33" pos:end="867:39">case <expr pos:start="867:38" pos:end="867:38"><literal type="number" pos:start="867:38" pos:end="867:38">4</literal></expr>:</case> <expr_stmt pos:start="867:41" pos:end="867:77"><expr pos:start="867:41" pos:end="867:76"><name pos:start="867:41" pos:end="867:43">pos</name> <operator pos:start="867:45" pos:end="867:45">=</operator> <operator pos:start="867:47" pos:end="867:47">(</operator><operator pos:start="867:48" pos:end="867:48">(</operator><name pos:start="867:49" pos:end="867:51">y_c</name> <operator pos:start="867:53" pos:end="867:54">&gt;&gt;</operator> <literal type="number" pos:start="867:56" pos:end="867:56">1</literal><operator pos:start="867:57" pos:end="867:57">)</operator> <operator pos:start="867:59" pos:end="867:60">&lt;&lt;</operator> <literal type="number" pos:start="867:62" pos:end="867:62">3</literal><operator pos:start="867:63" pos:end="867:63">)</operator> <operator pos:start="867:65" pos:end="867:65">+</operator> <operator pos:start="867:67" pos:end="867:67">(</operator><name pos:start="867:68" pos:end="867:70">x_c</name> <operator pos:start="867:72" pos:end="867:73">&gt;&gt;</operator> <literal type="number" pos:start="867:75" pos:end="867:75">1</literal><operator pos:start="867:76" pos:end="867:76">)</operator></expr>;</expr_stmt> <break pos:start="867:79" pos:end="867:84">break;</break>

                                <case pos:start="869:33" pos:end="869:39">case <expr pos:start="869:38" pos:end="869:38"><literal type="number" pos:start="869:38" pos:end="869:38">5</literal></expr>:</case> <expr_stmt pos:start="869:41" pos:end="869:77"><expr pos:start="869:41" pos:end="869:76"><name pos:start="869:41" pos:end="869:43">pos</name> <operator pos:start="869:45" pos:end="869:45">=</operator> <operator pos:start="869:47" pos:end="869:47">(</operator><operator pos:start="869:48" pos:end="869:48">(</operator><name pos:start="869:49" pos:end="869:51">y_c</name> <operator pos:start="869:53" pos:end="869:54">&gt;&gt;</operator> <literal type="number" pos:start="869:56" pos:end="869:56">2</literal><operator pos:start="869:57" pos:end="869:57">)</operator> <operator pos:start="869:59" pos:end="869:60">&lt;&lt;</operator> <literal type="number" pos:start="869:62" pos:end="869:62">3</literal><operator pos:start="869:63" pos:end="869:63">)</operator> <operator pos:start="869:65" pos:end="869:65">+</operator> <operator pos:start="869:67" pos:end="869:67">(</operator><name pos:start="869:68" pos:end="869:70">x_c</name> <operator pos:start="869:72" pos:end="869:73">&gt;&gt;</operator> <literal type="number" pos:start="869:75" pos:end="869:75">2</literal><operator pos:start="869:76" pos:end="869:76">)</operator></expr>;</expr_stmt> <break pos:start="869:79" pos:end="869:84">break;</break>

                                <default pos:start="871:33" pos:end="871:40">default:</default> <expr_stmt pos:start="871:42" pos:end="871:64"><expr pos:start="871:42" pos:end="871:63"><name pos:start="871:42" pos:end="871:44">pos</name> <operator pos:start="871:46" pos:end="871:46">=</operator> <operator pos:start="871:48" pos:end="871:48">(</operator><name pos:start="871:49" pos:end="871:51">y_c</name> <operator pos:start="871:53" pos:end="871:54">&lt;&lt;</operator> <literal type="number" pos:start="871:56" pos:end="871:56">2</literal><operator pos:start="871:57" pos:end="871:57">)</operator> <operator pos:start="871:59" pos:end="871:59">+</operator> <name pos:start="871:61" pos:end="871:63">x_c</name></expr>;</expr_stmt> <break pos:start="871:66" pos:end="871:71">break;</break>

                            </block_content>}</block></switch>

                            <expr_stmt pos:start="875:29" pos:end="875:56"><expr pos:start="875:29" pos:end="875:55"><name pos:start="875:29" pos:end="875:35">scale_m</name> <operator pos:start="875:37" pos:end="875:37">=</operator> <name pos:start="875:39" pos:end="875:55"><name pos:start="875:39" pos:end="875:50">scale_matrix</name><index pos:start="875:51" pos:end="875:55">[<expr pos:start="875:52" pos:end="875:54"><name pos:start="875:52" pos:end="875:54">pos</name></expr>]</index></name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="877:27" pos:end="881:25">else <block pos:start="877:32" pos:end="881:25">{<block_content pos:start="879:29" pos:end="879:47">

                            <expr_stmt pos:start="879:29" pos:end="879:47"><expr pos:start="879:29" pos:end="879:46"><name pos:start="879:29" pos:end="879:35">scale_m</name> <operator pos:start="879:37" pos:end="879:37">=</operator> <name pos:start="879:39" pos:end="879:46">dc_scale</name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="885:21" pos:end="885:111"><expr pos:start="885:21" pos:end="885:110"><name pos:start="885:21" pos:end="885:37">trans_coeff_level</name> <operator pos:start="885:39" pos:end="885:39">=</operator> <operator pos:start="885:41" pos:end="885:41">(</operator><name pos:start="885:42" pos:end="885:58">trans_coeff_level</name> <operator pos:start="885:60" pos:end="885:60">*</operator> <operator pos:start="885:62" pos:end="885:62">(</operator><name pos:start="885:63" pos:end="885:69">int64_t</name><operator pos:start="885:70" pos:end="885:70">)</operator><name pos:start="885:71" pos:end="885:75">scale</name> <operator pos:start="885:77" pos:end="885:77">*</operator> <operator pos:start="885:79" pos:end="885:79">(</operator><name pos:start="885:80" pos:end="885:86">int64_t</name><operator pos:start="885:87" pos:end="885:87">)</operator><name pos:start="885:88" pos:end="885:94">scale_m</name> <operator pos:start="885:96" pos:end="885:96">+</operator> <name pos:start="885:98" pos:end="885:100">add</name><operator pos:start="885:101" pos:end="885:101">)</operator> <operator pos:start="885:103" pos:end="885:104">&gt;&gt;</operator> <name pos:start="885:106" pos:end="885:110">shift</name></expr>;</expr_stmt>

                    <if_stmt pos:start="887:21" pos:end="899:21"><if pos:start="887:21" pos:end="893:21">if<condition pos:start="887:23" pos:end="887:45">(<expr pos:start="887:24" pos:end="887:44"><name pos:start="887:24" pos:end="887:40">trans_coeff_level</name> <operator pos:start="887:42" pos:end="887:42">&lt;</operator> <literal type="number" pos:start="887:44" pos:end="887:44">0</literal></expr>)</condition> <block pos:start="887:47" pos:end="893:21">{<block_content pos:start="889:25" pos:end="891:55">

                        <if_stmt pos:start="889:25" pos:end="891:55"><if pos:start="889:25" pos:end="891:55">if<condition pos:start="889:27" pos:end="889:68">(<expr pos:start="889:28" pos:end="889:67"><operator pos:start="889:28" pos:end="889:28">(</operator><operator pos:start="889:29" pos:end="889:29">~</operator><name pos:start="889:30" pos:end="889:46">trans_coeff_level</name><operator pos:start="889:47" pos:end="889:47">)</operator> <operator pos:start="889:49" pos:end="889:49">&amp;</operator> <literal type="number" pos:start="889:51" pos:end="889:67">0xFffffffffff8000</literal></expr>)</condition><block type="pseudo" pos:start="891:29" pos:end="891:55"><block_content pos:start="891:29" pos:end="891:55">

                            <expr_stmt pos:start="891:29" pos:end="891:55"><expr pos:start="891:29" pos:end="891:54"><name pos:start="891:29" pos:end="891:45">trans_coeff_level</name> <operator pos:start="891:47" pos:end="891:47">=</operator> <operator pos:start="891:49" pos:end="891:49">-</operator><literal type="number" pos:start="891:50" pos:end="891:54">32768</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></if> <else pos:start="893:23" pos:end="899:21">else <block pos:start="893:28" pos:end="899:21">{<block_content pos:start="895:25" pos:end="897:54">

                        <if_stmt pos:start="895:25" pos:end="897:54"><if pos:start="895:25" pos:end="897:54">if<condition pos:start="895:27" pos:end="895:66">(<expr pos:start="895:28" pos:end="895:65"><name pos:start="895:28" pos:end="895:44">trans_coeff_level</name> <operator pos:start="895:46" pos:end="895:46">&amp;</operator> <literal type="number" pos:start="895:48" pos:end="895:65">0xffffffffffff8000</literal></expr>)</condition><block type="pseudo" pos:start="897:29" pos:end="897:54"><block_content pos:start="897:29" pos:end="897:54">

                            <expr_stmt pos:start="897:29" pos:end="897:54"><expr pos:start="897:29" pos:end="897:53"><name pos:start="897:29" pos:end="897:45">trans_coeff_level</name> <operator pos:start="897:47" pos:end="897:47">=</operator> <literal type="number" pos:start="897:49" pos:end="897:53">32767</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="903:17" pos:end="903:67"><expr pos:start="903:17" pos:end="903:66"><name pos:start="903:17" pos:end="903:46"><name pos:start="903:17" pos:end="903:22">coeffs</name><index pos:start="903:23" pos:end="903:46">[<expr pos:start="903:24" pos:end="903:45"><name pos:start="903:24" pos:end="903:26">y_c</name> <operator pos:start="903:28" pos:end="903:28">*</operator> <name pos:start="903:30" pos:end="903:39">trafo_size</name> <operator pos:start="903:41" pos:end="903:41">+</operator> <name pos:start="903:43" pos:end="903:45">x_c</name></expr>]</index></name> <operator pos:start="903:48" pos:end="903:48">=</operator> <name pos:start="903:50" pos:end="903:66">trans_coeff_level</name></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="913:5" pos:end="999:5"><if pos:start="913:5" pos:end="927:5">if <condition pos:start="913:8" pos:end="913:41">(<expr pos:start="913:9" pos:end="913:40"><name pos:start="913:9" pos:end="913:40"><name pos:start="913:9" pos:end="913:10">lc</name><operator pos:start="913:11" pos:end="913:12">-&gt;</operator><name pos:start="913:13" pos:end="913:14">cu</name><operator pos:start="913:15" pos:end="913:15">.</operator><name pos:start="913:16" pos:end="913:40">cu_transquant_bypass_flag</name></name></expr>)</condition> <block pos:start="913:43" pos:end="927:5">{<block_content pos:start="915:9" pos:end="925:9">

        <if_stmt pos:start="915:9" pos:end="925:9"><if pos:start="915:9" pos:end="925:9">if <condition pos:start="915:12" pos:end="917:86">(<expr pos:start="915:13" pos:end="917:85"><name pos:start="915:13" pos:end="915:31">explicit_rdpcm_flag</name> <operator pos:start="915:33" pos:end="915:34">||</operator> <operator pos:start="915:36" pos:end="915:36">(</operator><name pos:start="915:37" pos:end="915:71"><name pos:start="915:37" pos:end="915:37">s</name><operator pos:start="915:38" pos:end="915:39">-&gt;</operator><name pos:start="915:40" pos:end="915:42">sps</name><operator pos:start="915:43" pos:end="915:44">-&gt;</operator><name pos:start="915:45" pos:end="915:71">implicit_rdpcm_enabled_flag</name></name> <operator pos:start="915:73" pos:end="915:74">&amp;&amp;</operator>

                                    <operator pos:start="917:37" pos:end="917:37">(</operator><name pos:start="917:38" pos:end="917:52">pred_mode_intra</name> <operator pos:start="917:54" pos:end="917:55">==</operator> <literal type="number" pos:start="917:57" pos:end="917:58">10</literal> <operator pos:start="917:60" pos:end="917:61">||</operator> <name pos:start="917:63" pos:end="917:77">pred_mode_intra</name> <operator pos:start="917:79" pos:end="917:80">==</operator> <literal type="number" pos:start="917:82" pos:end="917:83">26</literal><operator pos:start="917:84" pos:end="917:84">)</operator><operator pos:start="917:85" pos:end="917:85">)</operator></expr>)</condition> <block pos:start="917:88" pos:end="925:9">{<block_content pos:start="919:13" pos:end="923:70">

            <decl_stmt pos:start="919:13" pos:end="919:111"><decl pos:start="919:13" pos:end="919:110"><type pos:start="919:13" pos:end="919:15"><name pos:start="919:13" pos:end="919:15">int</name></type> <name pos:start="919:17" pos:end="919:20">mode</name> <init pos:start="919:22" pos:end="919:110">= <expr pos:start="919:24" pos:end="919:110"><ternary pos:start="919:24" pos:end="919:110"><condition pos:start="919:24" pos:end="919:60"><expr pos:start="919:24" pos:end="919:58"><name pos:start="919:24" pos:end="919:58"><name pos:start="919:24" pos:end="919:24">s</name><operator pos:start="919:25" pos:end="919:26">-&gt;</operator><name pos:start="919:27" pos:end="919:29">sps</name><operator pos:start="919:30" pos:end="919:31">-&gt;</operator><name pos:start="919:32" pos:end="919:58">implicit_rdpcm_enabled_flag</name></name></expr> ?</condition><then pos:start="919:62" pos:end="919:84"> <expr pos:start="919:62" pos:end="919:84"><operator pos:start="919:62" pos:end="919:62">(</operator><name pos:start="919:63" pos:end="919:77">pred_mode_intra</name> <operator pos:start="919:79" pos:end="919:80">==</operator> <literal type="number" pos:start="919:82" pos:end="919:83">26</literal><operator pos:start="919:84" pos:end="919:84">)</operator></expr> </then><else pos:start="919:86" pos:end="919:110">: <expr pos:start="919:88" pos:end="919:110"><name pos:start="919:88" pos:end="919:110">explicit_rdpcm_dir_flag</name></expr></else></ternary></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="923:13" pos:end="923:70"><expr pos:start="923:13" pos:end="923:69"><call pos:start="923:13" pos:end="923:69"><name pos:start="923:13" pos:end="923:38"><name pos:start="923:13" pos:end="923:13">s</name><operator pos:start="923:14" pos:end="923:15">-&gt;</operator><name pos:start="923:16" pos:end="923:22">hevcdsp</name><operator pos:start="923:23" pos:end="923:23">.</operator><name pos:start="923:24" pos:end="923:38">transform_rdpcm</name></name><argument_list pos:start="923:39" pos:end="923:69">(<argument pos:start="923:40" pos:end="923:45"><expr pos:start="923:40" pos:end="923:45"><name pos:start="923:40" pos:end="923:45">coeffs</name></expr></argument>, <argument pos:start="923:48" pos:end="923:62"><expr pos:start="923:48" pos:end="923:62"><name pos:start="923:48" pos:end="923:62">log2_trafo_size</name></expr></argument>, <argument pos:start="923:65" pos:end="923:68"><expr pos:start="923:65" pos:end="923:68"><name pos:start="923:65" pos:end="923:68">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="927:7" pos:end="999:5">else <block pos:start="927:12" pos:end="999:5">{<block_content pos:start="929:9" pos:end="997:9">

        <if_stmt pos:start="929:9" pos:end="997:9"><if pos:start="929:9" pos:end="965:9">if <condition pos:start="929:12" pos:end="929:32">(<expr pos:start="929:13" pos:end="929:31"><name pos:start="929:13" pos:end="929:31">transform_skip_flag</name></expr>)</condition> <block pos:start="929:34" pos:end="965:9">{<block_content pos:start="931:13" pos:end="963:13">

            <decl_stmt pos:start="931:13" pos:end="935:53"><decl pos:start="931:13" pos:end="935:52"><type pos:start="931:13" pos:end="931:15"><name pos:start="931:13" pos:end="931:15">int</name></type> <name pos:start="931:17" pos:end="931:19">rot</name> <init pos:start="931:21" pos:end="935:52">= <expr pos:start="931:23" pos:end="935:52"><name pos:start="931:23" pos:end="931:66"><name pos:start="931:23" pos:end="931:23">s</name><operator pos:start="931:24" pos:end="931:25">-&gt;</operator><name pos:start="931:26" pos:end="931:28">sps</name><operator pos:start="931:29" pos:end="931:30">-&gt;</operator><name pos:start="931:31" pos:end="931:66">transform_skip_rotation_enabled_flag</name></name> <operator pos:start="931:68" pos:end="931:69">&amp;&amp;</operator>

                      <name pos:start="933:23" pos:end="933:37">log2_trafo_size</name> <operator pos:start="933:39" pos:end="933:40">==</operator> <literal type="number" pos:start="933:42" pos:end="933:42">2</literal> <operator pos:start="933:44" pos:end="933:45">&amp;&amp;</operator>

                      <name pos:start="935:23" pos:end="935:38"><name pos:start="935:23" pos:end="935:24">lc</name><operator pos:start="935:25" pos:end="935:26">-&gt;</operator><name pos:start="935:27" pos:end="935:28">cu</name><operator pos:start="935:29" pos:end="935:29">.</operator><name pos:start="935:30" pos:end="935:38">pred_mode</name></name> <operator pos:start="935:40" pos:end="935:41">==</operator> <name pos:start="935:43" pos:end="935:52">MODE_INTRA</name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="937:13" pos:end="943:13"><if pos:start="937:13" pos:end="943:13">if <condition pos:start="937:16" pos:end="937:20">(<expr pos:start="937:17" pos:end="937:19"><name pos:start="937:17" pos:end="937:19">rot</name></expr>)</condition> <block pos:start="937:22" pos:end="943:13">{<block_content pos:start="939:17" pos:end="941:67">

                <for pos:start="939:17" pos:end="941:67">for <control pos:start="939:21" pos:end="939:39">(<init pos:start="939:22" pos:end="939:27"><expr pos:start="939:22" pos:end="939:26"><name pos:start="939:22" pos:end="939:22">i</name> <operator pos:start="939:24" pos:end="939:24">=</operator> <literal type="number" pos:start="939:26" pos:end="939:26">0</literal></expr>;</init> <condition pos:start="939:29" pos:end="939:34"><expr pos:start="939:29" pos:end="939:33"><name pos:start="939:29" pos:end="939:29">i</name> <operator pos:start="939:31" pos:end="939:31">&lt;</operator> <literal type="number" pos:start="939:33" pos:end="939:33">8</literal></expr>;</condition> <incr pos:start="939:36" pos:end="939:38"><expr pos:start="939:36" pos:end="939:38"><name pos:start="939:36" pos:end="939:36">i</name><operator pos:start="939:37" pos:end="939:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="941:21" pos:end="941:67"><block_content pos:start="941:21" pos:end="941:67">

                    <expr_stmt pos:start="941:21" pos:end="941:67"><expr pos:start="941:21" pos:end="941:66"><call pos:start="941:21" pos:end="941:66"><name pos:start="941:21" pos:end="941:26">FFSWAP</name><argument_list pos:start="941:27" pos:end="941:66">(<argument pos:start="941:28" pos:end="941:34"><expr pos:start="941:28" pos:end="941:34"><name pos:start="941:28" pos:end="941:34">int16_t</name></expr></argument>, <argument pos:start="941:37" pos:end="941:45"><expr pos:start="941:37" pos:end="941:45"><name pos:start="941:37" pos:end="941:45"><name pos:start="941:37" pos:end="941:42">coeffs</name><index pos:start="941:43" pos:end="941:45">[<expr pos:start="941:44" pos:end="941:44"><name pos:start="941:44" pos:end="941:44">i</name></expr>]</index></name></expr></argument>, <argument pos:start="941:48" pos:end="941:65"><expr pos:start="941:48" pos:end="941:65"><name pos:start="941:48" pos:end="941:65"><name pos:start="941:48" pos:end="941:53">coeffs</name><index pos:start="941:54" pos:end="941:65">[<expr pos:start="941:55" pos:end="941:64"><literal type="number" pos:start="941:55" pos:end="941:58">16</literal> <operator pos:start="941:58" pos:end="941:58">-</operator> <name pos:start="941:60" pos:end="941:60">i</name> <operator pos:start="941:62" pos:end="941:62">-</operator> <literal type="number" pos:start="941:64" pos:end="941:64">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="947:13" pos:end="947:63"><expr pos:start="947:13" pos:end="947:62"><call pos:start="947:13" pos:end="947:62"><name pos:start="947:13" pos:end="947:37"><name pos:start="947:13" pos:end="947:13">s</name><operator pos:start="947:14" pos:end="947:15">-&gt;</operator><name pos:start="947:16" pos:end="947:22">hevcdsp</name><operator pos:start="947:23" pos:end="947:23">.</operator><name pos:start="947:24" pos:end="947:37">transform_skip</name></name><argument_list pos:start="947:38" pos:end="947:62">(<argument pos:start="947:39" pos:end="947:44"><expr pos:start="947:39" pos:end="947:44"><name pos:start="947:39" pos:end="947:44">coeffs</name></expr></argument>, <argument pos:start="947:47" pos:end="947:61"><expr pos:start="947:47" pos:end="947:61"><name pos:start="947:47" pos:end="947:61">log2_trafo_size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="951:13" pos:end="963:13"><if pos:start="951:13" pos:end="963:13">if <condition pos:start="951:16" pos:end="955:90">(<expr pos:start="951:17" pos:end="955:89"><name pos:start="951:17" pos:end="951:35">explicit_rdpcm_flag</name> <operator pos:start="951:37" pos:end="951:38">||</operator> <operator pos:start="951:40" pos:end="951:40">(</operator><name pos:start="951:41" pos:end="951:75"><name pos:start="951:41" pos:end="951:41">s</name><operator pos:start="951:42" pos:end="951:43">-&gt;</operator><name pos:start="951:44" pos:end="951:46">sps</name><operator pos:start="951:47" pos:end="951:48">-&gt;</operator><name pos:start="951:49" pos:end="951:75">implicit_rdpcm_enabled_flag</name></name> <operator pos:start="951:77" pos:end="951:78">&amp;&amp;</operator>

                                        <name pos:start="953:41" pos:end="953:56"><name pos:start="953:41" pos:end="953:42">lc</name><operator pos:start="953:43" pos:end="953:44">-&gt;</operator><name pos:start="953:45" pos:end="953:46">cu</name><operator pos:start="953:47" pos:end="953:47">.</operator><name pos:start="953:48" pos:end="953:56">pred_mode</name></name> <operator pos:start="953:58" pos:end="953:59">==</operator> <name pos:start="953:61" pos:end="953:70">MODE_INTRA</name> <operator pos:start="953:72" pos:end="953:73">&amp;&amp;</operator>

                                        <operator pos:start="955:41" pos:end="955:41">(</operator><name pos:start="955:42" pos:end="955:56">pred_mode_intra</name> <operator pos:start="955:58" pos:end="955:59">==</operator> <literal type="number" pos:start="955:61" pos:end="955:62">10</literal> <operator pos:start="955:64" pos:end="955:65">||</operator> <name pos:start="955:67" pos:end="955:81">pred_mode_intra</name> <operator pos:start="955:83" pos:end="955:84">==</operator> <literal type="number" pos:start="955:86" pos:end="955:87">26</literal><operator pos:start="955:88" pos:end="955:88">)</operator><operator pos:start="955:89" pos:end="955:89">)</operator></expr>)</condition> <block pos:start="955:92" pos:end="963:13">{<block_content pos:start="957:17" pos:end="961:74">

                <decl_stmt pos:start="957:17" pos:end="957:99"><decl pos:start="957:17" pos:end="957:98"><type pos:start="957:17" pos:end="957:19"><name pos:start="957:17" pos:end="957:19">int</name></type> <name pos:start="957:21" pos:end="957:24">mode</name> <init pos:start="957:26" pos:end="957:98">= <expr pos:start="957:28" pos:end="957:98"><ternary pos:start="957:28" pos:end="957:98"><condition pos:start="957:28" pos:end="957:48"><expr pos:start="957:28" pos:end="957:46"><name pos:start="957:28" pos:end="957:46">explicit_rdpcm_flag</name></expr> ?</condition><then pos:start="957:50" pos:end="957:72"> <expr pos:start="957:50" pos:end="957:72"><name pos:start="957:50" pos:end="957:72">explicit_rdpcm_dir_flag</name></expr> </then><else pos:start="957:74" pos:end="957:98">: <expr pos:start="957:76" pos:end="957:98"><operator pos:start="957:76" pos:end="957:76">(</operator><name pos:start="957:77" pos:end="957:91">pred_mode_intra</name> <operator pos:start="957:93" pos:end="957:94">==</operator> <literal type="number" pos:start="957:96" pos:end="957:97">26</literal><operator pos:start="957:98" pos:end="957:98">)</operator></expr></else></ternary></expr></init></decl>;</decl_stmt>



                <expr_stmt pos:start="961:17" pos:end="961:74"><expr pos:start="961:17" pos:end="961:73"><call pos:start="961:17" pos:end="961:73"><name pos:start="961:17" pos:end="961:42"><name pos:start="961:17" pos:end="961:17">s</name><operator pos:start="961:18" pos:end="961:19">-&gt;</operator><name pos:start="961:20" pos:end="961:26">hevcdsp</name><operator pos:start="961:27" pos:end="961:27">.</operator><name pos:start="961:28" pos:end="961:42">transform_rdpcm</name></name><argument_list pos:start="961:43" pos:end="961:73">(<argument pos:start="961:44" pos:end="961:49"><expr pos:start="961:44" pos:end="961:49"><name pos:start="961:44" pos:end="961:49">coeffs</name></expr></argument>, <argument pos:start="961:52" pos:end="961:66"><expr pos:start="961:52" pos:end="961:66"><name pos:start="961:52" pos:end="961:66">log2_trafo_size</name></expr></argument>, <argument pos:start="961:69" pos:end="961:72"><expr pos:start="961:69" pos:end="961:72"><name pos:start="961:69" pos:end="961:72">mode</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="965:11" pos:end="969:9">else if <condition pos:start="965:19" pos:end="965:88">(<expr pos:start="965:20" pos:end="965:87"><name pos:start="965:20" pos:end="965:35"><name pos:start="965:20" pos:end="965:21">lc</name><operator pos:start="965:22" pos:end="965:23">-&gt;</operator><name pos:start="965:24" pos:end="965:25">cu</name><operator pos:start="965:26" pos:end="965:26">.</operator><name pos:start="965:27" pos:end="965:35">pred_mode</name></name> <operator pos:start="965:37" pos:end="965:38">==</operator> <name pos:start="965:40" pos:end="965:49">MODE_INTRA</name> <operator pos:start="965:51" pos:end="965:52">&amp;&amp;</operator> <name pos:start="965:54" pos:end="965:58">c_idx</name> <operator pos:start="965:60" pos:end="965:61">==</operator> <literal type="number" pos:start="965:63" pos:end="965:63">0</literal> <operator pos:start="965:65" pos:end="965:66">&amp;&amp;</operator> <name pos:start="965:68" pos:end="965:82">log2_trafo_size</name> <operator pos:start="965:84" pos:end="965:85">==</operator> <literal type="number" pos:start="965:87" pos:end="965:87">2</literal></expr>)</condition> <block pos:start="965:90" pos:end="969:9">{<block_content pos:start="967:13" pos:end="967:45">

            <expr_stmt pos:start="967:13" pos:end="967:45"><expr pos:start="967:13" pos:end="967:44"><call pos:start="967:13" pos:end="967:44"><name pos:start="967:13" pos:end="967:36"><name pos:start="967:13" pos:end="967:13">s</name><operator pos:start="967:14" pos:end="967:15">-&gt;</operator><name pos:start="967:16" pos:end="967:22">hevcdsp</name><operator pos:start="967:23" pos:end="967:23">.</operator><name pos:start="967:24" pos:end="967:36">idct_4x4_luma</name></name><argument_list pos:start="967:37" pos:end="967:44">(<argument pos:start="967:38" pos:end="967:43"><expr pos:start="967:38" pos:end="967:43"><name pos:start="967:38" pos:end="967:43">coeffs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="969:11" pos:end="997:9">else <block pos:start="969:16" pos:end="997:9">{<block_content pos:start="971:13" pos:end="995:13">

            <decl_stmt pos:start="971:13" pos:end="971:83"><decl pos:start="971:13" pos:end="971:82"><type pos:start="971:13" pos:end="971:15"><name pos:start="971:13" pos:end="971:15">int</name></type> <name pos:start="971:17" pos:end="971:22">max_xy</name> <init pos:start="971:24" pos:end="971:82">= <expr pos:start="971:26" pos:end="971:82"><call pos:start="971:26" pos:end="971:82"><name pos:start="971:26" pos:end="971:30">FFMAX</name><argument_list pos:start="971:31" pos:end="971:82">(<argument pos:start="971:32" pos:end="971:55"><expr pos:start="971:32" pos:end="971:55"><name pos:start="971:32" pos:end="971:55">last_significant_coeff_x</name></expr></argument>, <argument pos:start="971:58" pos:end="971:81"><expr pos:start="971:58" pos:end="971:81"><name pos:start="971:58" pos:end="971:81">last_significant_coeff_y</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="973:13" pos:end="995:13"><if pos:start="973:13" pos:end="975:62">if <condition pos:start="973:16" pos:end="973:28">(<expr pos:start="973:17" pos:end="973:27"><name pos:start="973:17" pos:end="973:22">max_xy</name> <operator pos:start="973:24" pos:end="973:25">==</operator> <literal type="number" pos:start="973:27" pos:end="973:27">0</literal></expr>)</condition><block type="pseudo" pos:start="975:17" pos:end="975:62"><block_content pos:start="975:17" pos:end="975:62">

                <expr_stmt pos:start="975:17" pos:end="975:62"><expr pos:start="975:17" pos:end="975:61"><name pos:start="975:17" pos:end="975:53"><name pos:start="975:17" pos:end="975:17">s</name><operator pos:start="975:18" pos:end="975:19">-&gt;</operator><name pos:start="975:20" pos:end="975:26">hevcdsp</name><operator pos:start="975:27" pos:end="975:27">.</operator><name pos:start="975:28" pos:end="975:34">idct_dc</name><index pos:start="975:35" pos:end="975:53">[<expr pos:start="975:36" pos:end="975:52"><name pos:start="975:36" pos:end="975:50">log2_trafo_size</name><operator pos:start="975:51" pos:end="975:51">-</operator><literal type="number" pos:start="975:52" pos:end="975:52">2</literal></expr>]</index></name><operator pos:start="975:54" pos:end="975:54">(</operator><name pos:start="975:55" pos:end="975:60">coeffs</name><operator pos:start="975:61" pos:end="975:61">)</operator></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="977:13" pos:end="995:13">else <block pos:start="977:18" pos:end="995:13">{<block_content pos:start="979:17" pos:end="993:70">

                <decl_stmt pos:start="979:17" pos:end="979:88"><decl pos:start="979:17" pos:end="979:87"><type pos:start="979:17" pos:end="979:19"><name pos:start="979:17" pos:end="979:19">int</name></type> <name pos:start="979:21" pos:end="979:29">col_limit</name> <init pos:start="979:31" pos:end="979:87">= <expr pos:start="979:33" pos:end="979:87"><name pos:start="979:33" pos:end="979:56">last_significant_coeff_x</name> <operator pos:start="979:58" pos:end="979:58">+</operator> <name pos:start="979:60" pos:end="979:83">last_significant_coeff_y</name> <operator pos:start="979:85" pos:end="979:85">+</operator> <literal type="number" pos:start="979:87" pos:end="979:87">4</literal></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="981:17" pos:end="991:53"><if pos:start="981:17" pos:end="983:52">if <condition pos:start="981:20" pos:end="981:31">(<expr pos:start="981:21" pos:end="981:30"><name pos:start="981:21" pos:end="981:26">max_xy</name> <operator pos:start="981:28" pos:end="981:28">&lt;</operator> <literal type="number" pos:start="981:30" pos:end="981:30">4</literal></expr>)</condition><block type="pseudo" pos:start="983:21" pos:end="983:52"><block_content pos:start="983:21" pos:end="983:52">

                    <expr_stmt pos:start="983:21" pos:end="983:52"><expr pos:start="983:21" pos:end="983:51"><name pos:start="983:21" pos:end="983:29">col_limit</name> <operator pos:start="983:31" pos:end="983:31">=</operator> <call pos:start="983:33" pos:end="983:51"><name pos:start="983:33" pos:end="983:37">FFMIN</name><argument_list pos:start="983:38" pos:end="983:51">(<argument pos:start="983:39" pos:end="983:39"><expr pos:start="983:39" pos:end="983:39"><literal type="number" pos:start="983:39" pos:end="983:39">4</literal></expr></argument>, <argument pos:start="983:42" pos:end="983:50"><expr pos:start="983:42" pos:end="983:50"><name pos:start="983:42" pos:end="983:50">col_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="985:17" pos:end="987:52">else if <condition pos:start="985:25" pos:end="985:36">(<expr pos:start="985:26" pos:end="985:35"><name pos:start="985:26" pos:end="985:31">max_xy</name> <operator pos:start="985:33" pos:end="985:33">&lt;</operator> <literal type="number" pos:start="985:35" pos:end="985:35">8</literal></expr>)</condition><block type="pseudo" pos:start="987:21" pos:end="987:52"><block_content pos:start="987:21" pos:end="987:52">

                    <expr_stmt pos:start="987:21" pos:end="987:52"><expr pos:start="987:21" pos:end="987:51"><name pos:start="987:21" pos:end="987:29">col_limit</name> <operator pos:start="987:31" pos:end="987:31">=</operator> <call pos:start="987:33" pos:end="987:51"><name pos:start="987:33" pos:end="987:37">FFMIN</name><argument_list pos:start="987:38" pos:end="987:51">(<argument pos:start="987:39" pos:end="987:39"><expr pos:start="987:39" pos:end="987:39"><literal type="number" pos:start="987:39" pos:end="987:39">8</literal></expr></argument>, <argument pos:start="987:42" pos:end="987:50"><expr pos:start="987:42" pos:end="987:50"><name pos:start="987:42" pos:end="987:50">col_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <if type="elseif" pos:start="989:17" pos:end="991:53">else if <condition pos:start="989:25" pos:end="989:37">(<expr pos:start="989:26" pos:end="989:36"><name pos:start="989:26" pos:end="989:31">max_xy</name> <operator pos:start="989:33" pos:end="989:33">&lt;</operator> <literal type="number" pos:start="989:35" pos:end="989:36">12</literal></expr>)</condition><block type="pseudo" pos:start="991:21" pos:end="991:53"><block_content pos:start="991:21" pos:end="991:53">

                    <expr_stmt pos:start="991:21" pos:end="991:53"><expr pos:start="991:21" pos:end="991:52"><name pos:start="991:21" pos:end="991:29">col_limit</name> <operator pos:start="991:31" pos:end="991:31">=</operator> <call pos:start="991:33" pos:end="991:52"><name pos:start="991:33" pos:end="991:37">FFMIN</name><argument_list pos:start="991:38" pos:end="991:52">(<argument pos:start="991:39" pos:end="991:40"><expr pos:start="991:39" pos:end="991:40"><literal type="number" pos:start="991:39" pos:end="991:40">24</literal></expr></argument>, <argument pos:start="991:43" pos:end="991:51"><expr pos:start="991:43" pos:end="991:51"><name pos:start="991:43" pos:end="991:51">col_limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="993:17" pos:end="993:70"><expr pos:start="993:17" pos:end="993:69"><name pos:start="993:17" pos:end="993:50"><name pos:start="993:17" pos:end="993:17">s</name><operator pos:start="993:18" pos:end="993:19">-&gt;</operator><name pos:start="993:20" pos:end="993:26">hevcdsp</name><operator pos:start="993:27" pos:end="993:27">.</operator><name pos:start="993:28" pos:end="993:31">idct</name><index pos:start="993:32" pos:end="993:50">[<expr pos:start="993:33" pos:end="993:49"><name pos:start="993:33" pos:end="993:47">log2_trafo_size</name><operator pos:start="993:48" pos:end="993:48">-</operator><literal type="number" pos:start="993:49" pos:end="993:49">2</literal></expr>]</index></name><operator pos:start="993:51" pos:end="993:51">(</operator><name pos:start="993:52" pos:end="993:57">coeffs</name><operator pos:start="993:58" pos:end="993:58">,</operator> <name pos:start="993:60" pos:end="993:68">col_limit</name><operator pos:start="993:69" pos:end="993:69">)</operator></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="1001:5" pos:end="1013:5"><if pos:start="1001:5" pos:end="1013:5">if <condition pos:start="1001:8" pos:end="1001:24">(<expr pos:start="1001:9" pos:end="1001:23"><name pos:start="1001:9" pos:end="1001:23"><name pos:start="1001:9" pos:end="1001:10">lc</name><operator pos:start="1001:11" pos:end="1001:12">-&gt;</operator><name pos:start="1001:13" pos:end="1001:14">tu</name><operator pos:start="1001:15" pos:end="1001:15">.</operator><name pos:start="1001:16" pos:end="1001:23">cross_pf</name></name></expr>)</condition> <block pos:start="1001:26" pos:end="1013:5">{<block_content pos:start="1003:9" pos:end="1011:9">

        <decl_stmt pos:start="1003:9" pos:end="1003:45"><decl pos:start="1003:9" pos:end="1003:44"><type pos:start="1003:9" pos:end="1003:17"><name pos:start="1003:9" pos:end="1003:15">int16_t</name> <modifier pos:start="1003:17" pos:end="1003:17">*</modifier></type><name pos:start="1003:18" pos:end="1003:25">coeffs_y</name> <init pos:start="1003:27" pos:end="1003:44">= <expr pos:start="1003:29" pos:end="1003:44"><name pos:start="1003:29" pos:end="1003:44"><name pos:start="1003:29" pos:end="1003:30">lc</name><operator pos:start="1003:31" pos:end="1003:32">-&gt;</operator><name pos:start="1003:33" pos:end="1003:34">tu</name><operator pos:start="1003:35" pos:end="1003:35">.</operator><name pos:start="1003:36" pos:end="1003:41">coeffs</name><index pos:start="1003:42" pos:end="1003:44">[<expr pos:start="1003:43" pos:end="1003:43"><literal type="number" pos:start="1003:43" pos:end="1003:43">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>



        <for pos:start="1007:9" pos:end="1011:9">for <control pos:start="1007:13" pos:end="1007:55">(<init pos:start="1007:14" pos:end="1007:19"><expr pos:start="1007:14" pos:end="1007:18"><name pos:start="1007:14" pos:end="1007:14">i</name> <operator pos:start="1007:16" pos:end="1007:16">=</operator> <literal type="number" pos:start="1007:18" pos:end="1007:18">0</literal></expr>;</init> <condition pos:start="1007:21" pos:end="1007:50"><expr pos:start="1007:21" pos:end="1007:49"><name pos:start="1007:21" pos:end="1007:21">i</name> <operator pos:start="1007:23" pos:end="1007:23">&lt;</operator> <operator pos:start="1007:25" pos:end="1007:25">(</operator><name pos:start="1007:26" pos:end="1007:35">trafo_size</name> <operator pos:start="1007:37" pos:end="1007:37">*</operator> <name pos:start="1007:39" pos:end="1007:48">trafo_size</name><operator pos:start="1007:49" pos:end="1007:49">)</operator></expr>;</condition> <incr pos:start="1007:52" pos:end="1007:54"><expr pos:start="1007:52" pos:end="1007:54"><name pos:start="1007:52" pos:end="1007:52">i</name><operator pos:start="1007:53" pos:end="1007:54">++</operator></expr></incr>)</control> <block pos:start="1007:57" pos:end="1011:9">{<block_content pos:start="1009:13" pos:end="1009:80">

            <expr_stmt pos:start="1009:13" pos:end="1009:80"><expr pos:start="1009:13" pos:end="1009:79"><name pos:start="1009:13" pos:end="1009:21"><name pos:start="1009:13" pos:end="1009:18">coeffs</name><index pos:start="1009:19" pos:end="1009:21">[<expr pos:start="1009:20" pos:end="1009:20"><name pos:start="1009:20" pos:end="1009:20">i</name></expr>]</index></name> <operator pos:start="1009:23" pos:end="1009:23">=</operator> <name pos:start="1009:25" pos:end="1009:33"><name pos:start="1009:25" pos:end="1009:30">coeffs</name><index pos:start="1009:31" pos:end="1009:33">[<expr pos:start="1009:32" pos:end="1009:32"><name pos:start="1009:32" pos:end="1009:32">i</name></expr>]</index></name> <operator pos:start="1009:35" pos:end="1009:35">+</operator> <operator pos:start="1009:37" pos:end="1009:37">(</operator><operator pos:start="1009:38" pos:end="1009:38">(</operator><name pos:start="1009:39" pos:end="1009:58"><name pos:start="1009:39" pos:end="1009:40">lc</name><operator pos:start="1009:41" pos:end="1009:42">-&gt;</operator><name pos:start="1009:43" pos:end="1009:44">tu</name><operator pos:start="1009:45" pos:end="1009:45">.</operator><name pos:start="1009:46" pos:end="1009:58">res_scale_val</name></name> <operator pos:start="1009:60" pos:end="1009:60">*</operator> <name pos:start="1009:62" pos:end="1009:72"><name pos:start="1009:62" pos:end="1009:69">coeffs_y</name><index pos:start="1009:70" pos:end="1009:72">[<expr pos:start="1009:71" pos:end="1009:71"><name pos:start="1009:71" pos:end="1009:71">i</name></expr>]</index></name><operator pos:start="1009:73" pos:end="1009:73">)</operator> <operator pos:start="1009:75" pos:end="1009:76">&gt;&gt;</operator> <literal type="number" pos:start="1009:78" pos:end="1009:78">3</literal><operator pos:start="1009:79" pos:end="1009:79">)</operator></expr>;</expr_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="1015:5" pos:end="1015:69"><expr pos:start="1015:5" pos:end="1015:68"><name pos:start="1015:5" pos:end="1015:47"><name pos:start="1015:5" pos:end="1015:5">s</name><operator pos:start="1015:6" pos:end="1015:7">-&gt;</operator><name pos:start="1015:8" pos:end="1015:14">hevcdsp</name><operator pos:start="1015:15" pos:end="1015:15">.</operator><name pos:start="1015:16" pos:end="1015:28">transform_add</name><index pos:start="1015:29" pos:end="1015:47">[<expr pos:start="1015:30" pos:end="1015:46"><name pos:start="1015:30" pos:end="1015:44">log2_trafo_size</name><operator pos:start="1015:45" pos:end="1015:45">-</operator><literal type="number" pos:start="1015:46" pos:end="1015:46">2</literal></expr>]</index></name><operator pos:start="1015:48" pos:end="1015:48">(</operator><name pos:start="1015:49" pos:end="1015:51">dst</name><operator pos:start="1015:52" pos:end="1015:52">,</operator> <name pos:start="1015:54" pos:end="1015:59">coeffs</name><operator pos:start="1015:60" pos:end="1015:60">,</operator> <name pos:start="1015:62" pos:end="1015:67">stride</name><operator pos:start="1015:68" pos:end="1015:68">)</operator></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
