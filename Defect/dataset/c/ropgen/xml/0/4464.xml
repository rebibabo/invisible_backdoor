<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4464.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:31">mpcore_scu_read</name><parameter_list pos:start="1:32" pos:end="3:46">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:71"><decl pos:start="1:47" pos:end="1:71"><type pos:start="1:47" pos:end="1:71"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:71">offset</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:45"><decl pos:start="3:33" pos:end="3:45"><type pos:start="3:33" pos:end="3:45"><name pos:start="3:33" pos:end="3:40">unsigned</name></type> <name pos:start="3:42" pos:end="3:45">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="39:1">{<block_content pos:start="7:5" pos:end="37:5">

    <decl_stmt pos:start="7:5" pos:end="7:55"><decl pos:start="7:5" pos:end="7:54"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">mpcore_priv_state</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:54">= <expr pos:start="7:28" pos:end="7:54"><operator pos:start="7:28" pos:end="7:28">(</operator><name pos:start="7:29" pos:end="7:45">mpcore_priv_state</name> <operator pos:start="7:47" pos:end="7:47">*</operator><operator pos:start="7:48" pos:end="7:48">)</operator><name pos:start="7:49" pos:end="7:54">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:11"><decl pos:start="9:5" pos:end="9:10"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:10">id</name></decl>;</decl_stmt>

    <comment type="block" pos:start="11:5" pos:end="11:13">/* SCU */</comment>

    <switch pos:start="13:5" pos:end="37:5">switch <condition pos:start="13:12" pos:end="13:19">(<expr pos:start="13:13" pos:end="13:18"><name pos:start="13:13" pos:end="13:18">offset</name></expr>)</condition> <block pos:start="13:21" pos:end="37:5">{<block_content pos:start="15:5" pos:end="35:67">

    <case pos:start="15:5" pos:end="15:14">case <expr pos:start="15:10" pos:end="15:13"><literal type="number" pos:start="15:10" pos:end="15:13">0x00</literal></expr>:</case> <comment type="block" pos:start="15:16" pos:end="15:30">/* Control.  */</comment>

        <return pos:start="17:9" pos:end="17:30">return <expr pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:29"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:29">scu_control</name></name></expr>;</return>

    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><literal type="number" pos:start="19:10" pos:end="19:13">0x04</literal></expr>:</case> <comment type="block" pos:start="19:16" pos:end="19:36">/* Configuration.  */</comment>

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:10">id</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <operator pos:start="21:14" pos:end="21:14">(</operator><operator pos:start="21:15" pos:end="21:15">(</operator><literal type="number" pos:start="21:16" pos:end="21:16">1</literal> <operator pos:start="21:18" pos:end="21:19">&lt;&lt;</operator> <name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:30">num_cpu</name></name><operator pos:start="21:31" pos:end="21:31">)</operator> <operator pos:start="21:33" pos:end="21:33">-</operator> <literal type="number" pos:start="21:35" pos:end="21:35">1</literal><operator pos:start="21:36" pos:end="21:36">)</operator> <operator pos:start="21:38" pos:end="21:39">&lt;&lt;</operator> <literal type="number" pos:start="21:41" pos:end="21:41">4</literal></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:37">return <expr pos:start="23:16" pos:end="23:36"><name pos:start="23:16" pos:end="23:17">id</name> <operator pos:start="23:19" pos:end="23:19">|</operator> <operator pos:start="23:21" pos:end="23:21">(</operator><name pos:start="23:22" pos:end="23:31"><name pos:start="23:22" pos:end="23:22">s</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:31">num_cpu</name></name> <operator pos:start="23:33" pos:end="23:33">-</operator> <literal type="number" pos:start="23:35" pos:end="23:35">1</literal><operator pos:start="23:36" pos:end="23:36">)</operator></expr>;</return>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x08</literal></expr>:</case> <comment type="block" pos:start="25:16" pos:end="25:33">/* CPU status.  */</comment>

        <return pos:start="27:9" pos:end="27:17">return <expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr>;</return>

    <case pos:start="29:5" pos:end="29:14">case <expr pos:start="29:10" pos:end="29:13"><literal type="number" pos:start="29:10" pos:end="29:13">0x0c</literal></expr>:</case> <comment type="block" pos:start="29:16" pos:end="29:37">/* Invalidate all.  */</comment>

        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return>

    <default pos:start="33:5" pos:end="33:12">default:</default>

        <expr_stmt pos:start="35:9" pos:end="35:67"><expr pos:start="35:9" pos:end="35:66"><call pos:start="35:9" pos:end="35:66"><name pos:start="35:9" pos:end="35:16">hw_error</name><argument_list pos:start="35:17" pos:end="35:66">(<argument pos:start="35:18" pos:end="35:52"><expr pos:start="35:18" pos:end="35:52"><literal type="string" pos:start="35:18" pos:end="35:52">"mpcore_priv_read: Bad offset %x\n"</literal></expr></argument>, <argument pos:start="35:55" pos:end="35:65"><expr pos:start="35:55" pos:end="35:65"><operator pos:start="35:55" pos:end="35:55">(</operator><name pos:start="35:56" pos:end="35:58">int</name><operator pos:start="35:59" pos:end="35:59">)</operator><name pos:start="35:60" pos:end="35:65">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
