<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/853.c" pos:tabs="8"><function pos:start="1:1" pos:end="261:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">mpegts_push_data</name><parameter_list pos:start="1:29" pos:end="3:76">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:47"><decl pos:start="3:30" pos:end="3:47"><type pos:start="3:30" pos:end="3:47"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">uint8_t</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:47">buf</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:61"><decl pos:start="3:50" pos:end="3:61"><type pos:start="3:50" pos:end="3:61"><name pos:start="3:50" pos:end="3:52">int</name></type> <name pos:start="3:54" pos:end="3:61">buf_size</name></decl></parameter>, <parameter pos:start="3:64" pos:end="3:75"><decl pos:start="3:64" pos:end="3:75"><type pos:start="3:64" pos:end="3:75"><name pos:start="3:64" pos:end="3:66">int</name></type> <name pos:start="3:68" pos:end="3:75">is_start</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="261:1">{<block_content pos:start="7:5" pos:end="259:5">

    <decl_stmt pos:start="7:5" pos:end="7:29"><decl pos:start="7:5" pos:end="7:28"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">PESContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">pes</name> <init pos:start="7:21" pos:end="7:28">= <expr pos:start="7:23" pos:end="7:28"><name pos:start="7:23" pos:end="7:28">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:19"><name pos:start="9:5" pos:end="9:17">MpegTSContext</name> <modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:21">ts</name> <init pos:start="9:23" pos:end="9:46">= <expr pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:46"><name pos:start="9:25" pos:end="9:27">pes</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:35">stream</name><operator pos:start="9:36" pos:end="9:37">-&gt;</operator><name pos:start="9:38" pos:end="9:46">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:14"><name pos:start="11:5" pos:end="11:12">AVStream</name> <modifier pos:start="11:14" pos:end="11:14">*</modifier></type><name pos:start="11:15" pos:end="11:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:20">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:40"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">len</name></decl>, <decl pos:start="15:14" pos:end="15:17"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:14" pos:end="15:17">code</name></decl>, <decl pos:start="15:20" pos:end="15:29"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:20" pos:end="15:29">codec_type</name></decl>, <decl pos:start="15:32" pos:end="15:39"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:32" pos:end="15:39">codec_id</name></decl>;</decl_stmt>

    

    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:17">(<expr pos:start="19:9" pos:end="19:16"><name pos:start="19:9" pos:end="19:16">is_start</name></expr>)</condition> <block pos:start="19:19" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:28">

        <expr_stmt pos:start="21:9" pos:end="21:35"><expr pos:start="21:9" pos:end="21:34"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">pes</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">state</name></name> <operator pos:start="21:20" pos:end="21:20">=</operator> <name pos:start="21:22" pos:end="21:34">MPEGTS_HEADER</name></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:23"><name pos:start="23:9" pos:end="23:11">pes</name><operator pos:start="23:12" pos:end="23:13">-&gt;</operator><name pos:start="23:14" pos:end="23:23">data_index</name></name> <operator pos:start="23:25" pos:end="23:25">=</operator> <literal type="number" pos:start="23:27" pos:end="23:27">0</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:12"><expr pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:5">p</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <name pos:start="27:9" pos:end="27:11">buf</name></expr>;</expr_stmt>

    <while pos:start="29:5" pos:end="259:5">while <condition pos:start="29:11" pos:end="29:24">(<expr pos:start="29:12" pos:end="29:23"><name pos:start="29:12" pos:end="29:19">buf_size</name> <operator pos:start="29:21" pos:end="29:21">&gt;</operator> <literal type="number" pos:start="29:23" pos:end="29:23">0</literal></expr>)</condition> <block pos:start="29:26" pos:end="259:5">{<block_content pos:start="31:9" pos:end="257:9">

        <switch pos:start="31:9" pos:end="257:9">switch<condition pos:start="31:15" pos:end="31:26">(<expr pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:25"><name pos:start="31:16" pos:end="31:18">pes</name><operator pos:start="31:19" pos:end="31:20">-&gt;</operator><name pos:start="31:21" pos:end="31:25">state</name></name></expr>)</condition> <block pos:start="31:28" pos:end="257:9">{<block_content pos:start="33:9" pos:end="255:18">

        <case pos:start="33:9" pos:end="33:27">case <expr pos:start="33:14" pos:end="33:26"><name pos:start="33:14" pos:end="33:26">MPEGTS_HEADER</name></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:51"><expr pos:start="35:13" pos:end="35:50"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <name pos:start="35:19" pos:end="35:32">PES_START_SIZE</name> <operator pos:start="35:34" pos:end="35:34">-</operator> <name pos:start="35:36" pos:end="35:50"><name pos:start="35:36" pos:end="35:38">pes</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:50">data_index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="39:31"><if pos:start="37:13" pos:end="39:31">if <condition pos:start="37:16" pos:end="37:31">(<expr pos:start="37:17" pos:end="37:30"><name pos:start="37:17" pos:end="37:19">len</name> <operator pos:start="37:21" pos:end="37:21">&gt;</operator> <name pos:start="37:23" pos:end="37:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:31"><block_content pos:start="39:17" pos:end="39:31">

                <expr_stmt pos:start="39:17" pos:end="39:31"><expr pos:start="39:17" pos:end="39:30"><name pos:start="39:17" pos:end="39:19">len</name> <operator pos:start="39:21" pos:end="39:21">=</operator> <name pos:start="39:23" pos:end="39:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="41:13" pos:end="41:58"><expr pos:start="41:13" pos:end="41:57"><call pos:start="41:13" pos:end="41:57"><name pos:start="41:13" pos:end="41:18">memcpy</name><argument_list pos:start="41:19" pos:end="41:57">(<argument pos:start="41:20" pos:end="41:48"><expr pos:start="41:20" pos:end="41:48"><name pos:start="41:20" pos:end="41:30"><name pos:start="41:20" pos:end="41:22">pes</name><operator pos:start="41:23" pos:end="41:24">-&gt;</operator><name pos:start="41:25" pos:end="41:30">header</name></name> <operator pos:start="41:32" pos:end="41:32">+</operator> <name pos:start="41:34" pos:end="41:48"><name pos:start="41:34" pos:end="41:36">pes</name><operator pos:start="41:37" pos:end="41:38">-&gt;</operator><name pos:start="41:39" pos:end="41:48">data_index</name></name></expr></argument>, <argument pos:start="41:51" pos:end="41:51"><expr pos:start="41:51" pos:end="41:51"><name pos:start="41:51" pos:end="41:51">p</name></expr></argument>, <argument pos:start="41:54" pos:end="41:56"><expr pos:start="41:54" pos:end="41:56"><name pos:start="41:54" pos:end="41:56">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="43:13" pos:end="43:35"><expr pos:start="43:13" pos:end="43:34"><name pos:start="43:13" pos:end="43:27"><name pos:start="43:13" pos:end="43:15">pes</name><operator pos:start="43:16" pos:end="43:17">-&gt;</operator><name pos:start="43:18" pos:end="43:27">data_index</name></name> <operator pos:start="43:29" pos:end="43:30">+=</operator> <name pos:start="43:32" pos:end="43:34">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:21"><expr pos:start="45:13" pos:end="45:20"><name pos:start="45:13" pos:end="45:13">p</name> <operator pos:start="45:15" pos:end="45:16">+=</operator> <name pos:start="45:18" pos:end="45:20">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:28"><expr pos:start="47:13" pos:end="47:27"><name pos:start="47:13" pos:end="47:20">buf_size</name> <operator pos:start="47:22" pos:end="47:23">-=</operator> <name pos:start="47:25" pos:end="47:27">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="139:13"><if pos:start="49:13" pos:end="139:13">if <condition pos:start="49:16" pos:end="49:50">(<expr pos:start="49:17" pos:end="49:49"><name pos:start="49:17" pos:end="49:31"><name pos:start="49:17" pos:end="49:19">pes</name><operator pos:start="49:20" pos:end="49:21">-&gt;</operator><name pos:start="49:22" pos:end="49:31">data_index</name></name> <operator pos:start="49:33" pos:end="49:34">==</operator> <name pos:start="49:36" pos:end="49:49">PES_START_SIZE</name></expr>)</condition> <block pos:start="49:52" pos:end="139:13">{<block_content pos:start="61:17" pos:end="137:17">

                <comment type="block" pos:start="51:17" pos:end="53:28">/* we got all the PES or section header. We can now

                   decide */</comment>

<cpp:if pos:start="55:1" pos:end="55:5">#<cpp:directive pos:start="55:2" pos:end="55:3">if</cpp:directive> <expr pos:start="55:5" pos:end="55:5"><literal type="number" pos:start="55:5" pos:end="55:5">0</literal></expr></cpp:if>

                av_hex_dump(pes-&gt;header, pes-&gt;data_index);

<cpp:endif pos:start="59:1" pos:end="59:6">#<cpp:directive pos:start="59:2" pos:end="59:6">endif</cpp:directive></cpp:endif>

                <if_stmt pos:start="61:17" pos:end="137:17"><if pos:start="61:17" pos:end="125:17">if <condition pos:start="61:20" pos:end="63:43">(<expr pos:start="61:21" pos:end="63:42"><name pos:start="61:21" pos:end="61:34"><name pos:start="61:21" pos:end="61:23">pes</name><operator pos:start="61:24" pos:end="61:25">-&gt;</operator><name pos:start="61:26" pos:end="61:31">header</name><index pos:start="61:32" pos:end="61:34">[<expr pos:start="61:33" pos:end="61:33"><literal type="number" pos:start="61:33" pos:end="61:33">0</literal></expr>]</index></name> <operator pos:start="61:36" pos:end="61:37">==</operator> <literal type="number" pos:start="61:39" pos:end="61:42">0x00</literal> <operator pos:start="61:44" pos:end="61:45">&amp;&amp;</operator> <name pos:start="61:47" pos:end="61:60"><name pos:start="61:47" pos:end="61:49">pes</name><operator pos:start="61:50" pos:end="61:51">-&gt;</operator><name pos:start="61:52" pos:end="61:57">header</name><index pos:start="61:58" pos:end="61:60">[<expr pos:start="61:59" pos:end="61:59"><literal type="number" pos:start="61:59" pos:end="61:59">1</literal></expr>]</index></name> <operator pos:start="61:62" pos:end="61:63">==</operator> <literal type="number" pos:start="61:65" pos:end="61:68">0x00</literal> <operator pos:start="61:70" pos:end="61:71">&amp;&amp;</operator>

                    <name pos:start="63:21" pos:end="63:34"><name pos:start="63:21" pos:end="63:23">pes</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:31">header</name><index pos:start="63:32" pos:end="63:34">[<expr pos:start="63:33" pos:end="63:33"><literal type="number" pos:start="63:33" pos:end="63:33">2</literal></expr>]</index></name> <operator pos:start="63:36" pos:end="63:37">==</operator> <literal type="number" pos:start="63:39" pos:end="63:42">0x01</literal></expr>)</condition> <block pos:start="63:45" pos:end="125:17">{<block_content pos:start="69:21" pos:end="123:62">

                    <comment type="block" pos:start="65:21" pos:end="65:56">/* it must be an mpeg2 PES stream */</comment>

                    <comment type="block" pos:start="67:21" pos:end="67:46">/* XXX: add AC3 support */</comment>

                    <expr_stmt pos:start="69:21" pos:end="69:50"><expr pos:start="69:21" pos:end="69:49"><name pos:start="69:21" pos:end="69:24">code</name> <operator pos:start="69:26" pos:end="69:26">=</operator> <name pos:start="69:28" pos:end="69:41"><name pos:start="69:28" pos:end="69:30">pes</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:38">header</name><index pos:start="69:39" pos:end="69:41">[<expr pos:start="69:40" pos:end="69:40"><literal type="number" pos:start="69:40" pos:end="69:40">3</literal></expr>]</index></name> <operator pos:start="69:43" pos:end="69:43">|</operator> <literal type="number" pos:start="69:45" pos:end="69:49">0x100</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="71:21" pos:end="75:34"><if pos:start="71:21" pos:end="75:34">if <condition pos:start="71:24" pos:end="73:60">(<expr pos:start="71:25" pos:end="73:59"><operator pos:start="71:25" pos:end="71:25">!</operator><operator pos:start="71:26" pos:end="71:26">(</operator><operator pos:start="71:27" pos:end="71:27">(</operator><name pos:start="71:28" pos:end="71:31">code</name> <operator pos:start="71:33" pos:end="71:34">&gt;=</operator> <literal type="number" pos:start="71:36" pos:end="71:40">0x1c0</literal> <operator pos:start="71:42" pos:end="71:43">&amp;&amp;</operator> <name pos:start="71:45" pos:end="71:48">code</name> <operator pos:start="71:50" pos:end="71:51">&lt;=</operator> <literal type="number" pos:start="71:53" pos:end="71:57">0x1df</literal><operator pos:start="71:58" pos:end="71:58">)</operator> <operator pos:start="71:60" pos:end="71:61">||</operator>

                          <operator pos:start="73:27" pos:end="73:27">(</operator><name pos:start="73:28" pos:end="73:31">code</name> <operator pos:start="73:33" pos:end="73:34">&gt;=</operator> <literal type="number" pos:start="73:36" pos:end="73:40">0x1e0</literal> <operator pos:start="73:42" pos:end="73:43">&amp;&amp;</operator> <name pos:start="73:45" pos:end="73:48">code</name> <operator pos:start="73:50" pos:end="73:51">&lt;=</operator> <literal type="number" pos:start="73:53" pos:end="73:57">0x1ef</literal><operator pos:start="73:58" pos:end="73:58">)</operator><operator pos:start="73:59" pos:end="73:59">)</operator></expr>)</condition><block type="pseudo" pos:start="75:25" pos:end="75:34"><block_content pos:start="75:25" pos:end="75:34">

                        <goto pos:start="75:25" pos:end="75:34">goto <name pos:start="75:30" pos:end="75:33">skip</name>;</goto></block_content></block></if></if_stmt>

                    <if_stmt pos:start="77:21" pos:end="109:21"><if pos:start="77:21" pos:end="109:21">if <condition pos:start="77:24" pos:end="77:33">(<expr pos:start="77:25" pos:end="77:32"><operator pos:start="77:25" pos:end="77:25">!</operator><name pos:start="77:26" pos:end="77:32"><name pos:start="77:26" pos:end="77:28">pes</name><operator pos:start="77:29" pos:end="77:30">-&gt;</operator><name pos:start="77:31" pos:end="77:32">st</name></name></expr>)</condition> <block pos:start="77:35" pos:end="109:21">{<block_content pos:start="81:25" pos:end="107:25">

                        <comment type="block" pos:start="79:25" pos:end="79:45">/* allocate stream */</comment>

                        <if_stmt pos:start="81:25" pos:end="93:25"><if pos:start="81:25" pos:end="87:25">if <condition pos:start="81:28" pos:end="81:59">(<expr pos:start="81:29" pos:end="81:58"><name pos:start="81:29" pos:end="81:32">code</name> <operator pos:start="81:34" pos:end="81:35">&gt;=</operator> <literal type="number" pos:start="81:37" pos:end="81:41">0x1c0</literal> <operator pos:start="81:43" pos:end="81:44">&amp;&amp;</operator> <name pos:start="81:46" pos:end="81:49">code</name> <operator pos:start="81:51" pos:end="81:52">&lt;=</operator> <literal type="number" pos:start="81:54" pos:end="81:58">0x1df</literal></expr>)</condition> <block pos:start="81:61" pos:end="87:25">{<block_content pos:start="83:29" pos:end="85:52">

                            <expr_stmt pos:start="83:29" pos:end="83:58"><expr pos:start="83:29" pos:end="83:57"><name pos:start="83:29" pos:end="83:38">codec_type</name> <operator pos:start="83:40" pos:end="83:40">=</operator> <name pos:start="83:42" pos:end="83:57">CODEC_TYPE_AUDIO</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="85:29" pos:end="85:52"><expr pos:start="85:29" pos:end="85:51"><name pos:start="85:29" pos:end="85:36">codec_id</name> <operator pos:start="85:38" pos:end="85:38">=</operator> <name pos:start="85:40" pos:end="85:51">CODEC_ID_MP2</name></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="87:27" pos:end="93:25">else <block pos:start="87:32" pos:end="93:25">{<block_content pos:start="89:29" pos:end="91:59">

                            <expr_stmt pos:start="89:29" pos:end="89:58"><expr pos:start="89:29" pos:end="89:57"><name pos:start="89:29" pos:end="89:38">codec_type</name> <operator pos:start="89:40" pos:end="89:40">=</operator> <name pos:start="89:42" pos:end="89:57">CODEC_TYPE_VIDEO</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="91:29" pos:end="91:59"><expr pos:start="91:29" pos:end="91:58"><name pos:start="91:29" pos:end="91:36">codec_id</name> <operator pos:start="91:38" pos:end="91:38">=</operator> <name pos:start="91:40" pos:end="91:58">CODEC_ID_MPEG1VIDEO</name></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="95:25" pos:end="95:66"><expr pos:start="95:25" pos:end="95:65"><name pos:start="95:25" pos:end="95:26">st</name> <operator pos:start="95:28" pos:end="95:28">=</operator> <call pos:start="95:30" pos:end="95:65"><name pos:start="95:30" pos:end="95:42">av_new_stream</name><argument_list pos:start="95:43" pos:end="95:65">(<argument pos:start="95:44" pos:end="95:54"><expr pos:start="95:44" pos:end="95:54"><name pos:start="95:44" pos:end="95:54"><name pos:start="95:44" pos:end="95:46">pes</name><operator pos:start="95:47" pos:end="95:48">-&gt;</operator><name pos:start="95:49" pos:end="95:54">stream</name></name></expr></argument>, <argument pos:start="95:57" pos:end="95:64"><expr pos:start="95:57" pos:end="95:64"><name pos:start="95:57" pos:end="95:64"><name pos:start="95:57" pos:end="95:59">pes</name><operator pos:start="95:60" pos:end="95:61">-&gt;</operator><name pos:start="95:62" pos:end="95:64">pid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="97:25" pos:end="107:25"><if pos:start="97:25" pos:end="107:25">if <condition pos:start="97:28" pos:end="97:31">(<expr pos:start="97:29" pos:end="97:30"><name pos:start="97:29" pos:end="97:30">st</name></expr>)</condition> <block pos:start="97:33" pos:end="107:25">{<block_content pos:start="99:29" pos:end="105:41">

                            <expr_stmt pos:start="99:29" pos:end="99:48"><expr pos:start="99:29" pos:end="99:47"><name pos:start="99:29" pos:end="99:41"><name pos:start="99:29" pos:end="99:30">st</name><operator pos:start="99:31" pos:end="99:32">-&gt;</operator><name pos:start="99:33" pos:end="99:41">priv_data</name></name> <operator pos:start="99:43" pos:end="99:43">=</operator> <name pos:start="99:45" pos:end="99:47">pes</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="101:29" pos:end="101:62"><expr pos:start="101:29" pos:end="101:61"><name pos:start="101:29" pos:end="101:48"><name pos:start="101:29" pos:end="101:30">st</name><operator pos:start="101:31" pos:end="101:32">-&gt;</operator><name pos:start="101:33" pos:end="101:37">codec</name><operator pos:start="101:38" pos:end="101:38">.</operator><name pos:start="101:39" pos:end="101:48">codec_type</name></name> <operator pos:start="101:50" pos:end="101:50">=</operator> <name pos:start="101:52" pos:end="101:61">codec_type</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="103:29" pos:end="103:58"><expr pos:start="103:29" pos:end="103:57"><name pos:start="103:29" pos:end="103:46"><name pos:start="103:29" pos:end="103:30">st</name><operator pos:start="103:31" pos:end="103:32">-&gt;</operator><name pos:start="103:33" pos:end="103:37">codec</name><operator pos:start="103:38" pos:end="103:38">.</operator><name pos:start="103:39" pos:end="103:46">codec_id</name></name> <operator pos:start="103:48" pos:end="103:48">=</operator> <name pos:start="103:50" pos:end="103:57">codec_id</name></expr>;</expr_stmt>

                            <expr_stmt pos:start="105:29" pos:end="105:41"><expr pos:start="105:29" pos:end="105:40"><name pos:start="105:29" pos:end="105:35"><name pos:start="105:29" pos:end="105:31">pes</name><operator pos:start="105:32" pos:end="105:33">-&gt;</operator><name pos:start="105:34" pos:end="105:35">st</name></name> <operator pos:start="105:37" pos:end="105:37">=</operator> <name pos:start="105:39" pos:end="105:40">st</name></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="111:21" pos:end="111:55"><expr pos:start="111:21" pos:end="111:54"><name pos:start="111:21" pos:end="111:30"><name pos:start="111:21" pos:end="111:23">pes</name><operator pos:start="111:24" pos:end="111:25">-&gt;</operator><name pos:start="111:26" pos:end="111:30">state</name></name> <operator pos:start="111:32" pos:end="111:32">=</operator> <name pos:start="111:34" pos:end="111:54">MPEGTS_PESHEADER_FILL</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="113:21" pos:end="113:77"><expr pos:start="113:21" pos:end="113:76"><name pos:start="113:21" pos:end="113:35"><name pos:start="113:21" pos:end="113:23">pes</name><operator pos:start="113:24" pos:end="113:25">-&gt;</operator><name pos:start="113:26" pos:end="113:35">total_size</name></name> <operator pos:start="113:37" pos:end="113:37">=</operator> <operator pos:start="113:39" pos:end="113:39">(</operator><name pos:start="113:40" pos:end="113:53"><name pos:start="113:40" pos:end="113:42">pes</name><operator pos:start="113:43" pos:end="113:44">-&gt;</operator><name pos:start="113:45" pos:end="113:50">header</name><index pos:start="113:51" pos:end="113:53">[<expr pos:start="113:52" pos:end="113:52"><literal type="number" pos:start="113:52" pos:end="113:52">4</literal></expr>]</index></name> <operator pos:start="113:55" pos:end="113:56">&lt;&lt;</operator> <literal type="number" pos:start="113:58" pos:end="113:58">8</literal><operator pos:start="113:59" pos:end="113:59">)</operator> <operator pos:start="113:61" pos:end="113:61">|</operator> <name pos:start="113:63" pos:end="113:76"><name pos:start="113:63" pos:end="113:65">pes</name><operator pos:start="113:66" pos:end="113:67">-&gt;</operator><name pos:start="113:68" pos:end="113:73">header</name><index pos:start="113:74" pos:end="113:76">[<expr pos:start="113:75" pos:end="113:75"><literal type="number" pos:start="113:75" pos:end="113:75">5</literal></expr>]</index></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="115:21" pos:end="117:35">/* NOTE: a zero total size means the PES size is

                       unbounded */</comment>

                    <if_stmt pos:start="119:21" pos:end="121:45"><if pos:start="119:21" pos:end="121:45">if <condition pos:start="119:24" pos:end="119:40">(<expr pos:start="119:25" pos:end="119:39"><name pos:start="119:25" pos:end="119:39"><name pos:start="119:25" pos:end="119:27">pes</name><operator pos:start="119:28" pos:end="119:29">-&gt;</operator><name pos:start="119:30" pos:end="119:39">total_size</name></name></expr>)</condition><block type="pseudo" pos:start="121:25" pos:end="121:45"><block_content pos:start="121:25" pos:end="121:45">

                        <expr_stmt pos:start="121:25" pos:end="121:45"><expr pos:start="121:25" pos:end="121:44"><name pos:start="121:25" pos:end="121:39"><name pos:start="121:25" pos:end="121:27">pes</name><operator pos:start="121:28" pos:end="121:29">-&gt;</operator><name pos:start="121:30" pos:end="121:39">total_size</name></name> <operator pos:start="121:41" pos:end="121:42">+=</operator> <literal type="number" pos:start="121:44" pos:end="121:44">6</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="123:21" pos:end="123:62"><expr pos:start="123:21" pos:end="123:61"><name pos:start="123:21" pos:end="123:40"><name pos:start="123:21" pos:end="123:23">pes</name><operator pos:start="123:24" pos:end="123:25">-&gt;</operator><name pos:start="123:26" pos:end="123:40">pes_header_size</name></name> <operator pos:start="123:42" pos:end="123:42">=</operator> <name pos:start="123:44" pos:end="123:57"><name pos:start="123:44" pos:end="123:46">pes</name><operator pos:start="123:47" pos:end="123:48">-&gt;</operator><name pos:start="123:49" pos:end="123:54">header</name><index pos:start="123:55" pos:end="123:57">[<expr pos:start="123:56" pos:end="123:56"><literal type="number" pos:start="123:56" pos:end="123:56">8</literal></expr>]</index></name> <operator pos:start="123:59" pos:end="123:59">+</operator> <literal type="number" pos:start="123:61" pos:end="123:61">9</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="125:19" pos:end="137:17">else <block pos:start="125:24" pos:end="137:17">{<block_content pos:start="131:17" pos:end="135:29">

                    <comment type="block" pos:start="127:21" pos:end="127:57">/* otherwise, it should be a table */</comment>

                    <comment type="block" pos:start="129:21" pos:end="129:37">/* skip packet */</comment>

                <label pos:start="131:17" pos:end="131:21"><name pos:start="131:17" pos:end="131:20">skip</name>:</label>

                    <expr_stmt pos:start="133:21" pos:end="133:45"><expr pos:start="133:21" pos:end="133:44"><name pos:start="133:21" pos:end="133:30"><name pos:start="133:21" pos:end="133:23">pes</name><operator pos:start="133:24" pos:end="133:25">-&gt;</operator><name pos:start="133:26" pos:end="133:30">state</name></name> <operator pos:start="133:32" pos:end="133:32">=</operator> <name pos:start="133:34" pos:end="133:44">MPEGTS_SKIP</name></expr>;</expr_stmt>

                    <continue pos:start="135:21" pos:end="135:29">continue;</continue>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="141:13" pos:end="141:18">break;</break>

            <comment type="block" format="doxygen" pos:start="143:13" pos:end="143:60">/**********************************************/</comment>

            <comment type="block" pos:start="145:13" pos:end="145:37">/* PES packing parsing */</comment>

        <case pos:start="147:9" pos:end="147:35">case <expr pos:start="147:14" pos:end="147:34"><name pos:start="147:14" pos:end="147:34">MPEGTS_PESHEADER_FILL</name></expr>:</case>

            <expr_stmt pos:start="149:13" pos:end="149:57"><expr pos:start="149:13" pos:end="149:56"><name pos:start="149:13" pos:end="149:15">len</name> <operator pos:start="149:17" pos:end="149:17">=</operator> <name pos:start="149:19" pos:end="149:38"><name pos:start="149:19" pos:end="149:21">pes</name><operator pos:start="149:22" pos:end="149:23">-&gt;</operator><name pos:start="149:24" pos:end="149:38">pes_header_size</name></name> <operator pos:start="149:40" pos:end="149:40">-</operator> <name pos:start="149:42" pos:end="149:56"><name pos:start="149:42" pos:end="149:44">pes</name><operator pos:start="149:45" pos:end="149:46">-&gt;</operator><name pos:start="149:47" pos:end="149:56">data_index</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="151:13" pos:end="153:31"><if pos:start="151:13" pos:end="153:31">if <condition pos:start="151:16" pos:end="151:31">(<expr pos:start="151:17" pos:end="151:30"><name pos:start="151:17" pos:end="151:19">len</name> <operator pos:start="151:21" pos:end="151:21">&gt;</operator> <name pos:start="151:23" pos:end="151:30">buf_size</name></expr>)</condition><block type="pseudo" pos:start="153:17" pos:end="153:31"><block_content pos:start="153:17" pos:end="153:31">

                <expr_stmt pos:start="153:17" pos:end="153:31"><expr pos:start="153:17" pos:end="153:30"><name pos:start="153:17" pos:end="153:19">len</name> <operator pos:start="153:21" pos:end="153:21">=</operator> <name pos:start="153:23" pos:end="153:30">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:58"><expr pos:start="155:13" pos:end="155:57"><call pos:start="155:13" pos:end="155:57"><name pos:start="155:13" pos:end="155:18">memcpy</name><argument_list pos:start="155:19" pos:end="155:57">(<argument pos:start="155:20" pos:end="155:48"><expr pos:start="155:20" pos:end="155:48"><name pos:start="155:20" pos:end="155:30"><name pos:start="155:20" pos:end="155:22">pes</name><operator pos:start="155:23" pos:end="155:24">-&gt;</operator><name pos:start="155:25" pos:end="155:30">header</name></name> <operator pos:start="155:32" pos:end="155:32">+</operator> <name pos:start="155:34" pos:end="155:48"><name pos:start="155:34" pos:end="155:36">pes</name><operator pos:start="155:37" pos:end="155:38">-&gt;</operator><name pos:start="155:39" pos:end="155:48">data_index</name></name></expr></argument>, <argument pos:start="155:51" pos:end="155:51"><expr pos:start="155:51" pos:end="155:51"><name pos:start="155:51" pos:end="155:51">p</name></expr></argument>, <argument pos:start="155:54" pos:end="155:56"><expr pos:start="155:54" pos:end="155:56"><name pos:start="155:54" pos:end="155:56">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:35"><expr pos:start="157:13" pos:end="157:34"><name pos:start="157:13" pos:end="157:27"><name pos:start="157:13" pos:end="157:15">pes</name><operator pos:start="157:16" pos:end="157:17">-&gt;</operator><name pos:start="157:18" pos:end="157:27">data_index</name></name> <operator pos:start="157:29" pos:end="157:30">+=</operator> <name pos:start="157:32" pos:end="157:34">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:21"><expr pos:start="159:13" pos:end="159:20"><name pos:start="159:13" pos:end="159:13">p</name> <operator pos:start="159:15" pos:end="159:16">+=</operator> <name pos:start="159:18" pos:end="159:20">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:28"><expr pos:start="161:13" pos:end="161:27"><name pos:start="161:13" pos:end="161:20">buf_size</name> <operator pos:start="161:22" pos:end="161:23">-=</operator> <name pos:start="161:25" pos:end="161:27">len</name></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="201:13"><if pos:start="163:13" pos:end="201:13">if <condition pos:start="163:16" pos:end="163:56">(<expr pos:start="163:17" pos:end="163:55"><name pos:start="163:17" pos:end="163:31"><name pos:start="163:17" pos:end="163:19">pes</name><operator pos:start="163:20" pos:end="163:21">-&gt;</operator><name pos:start="163:22" pos:end="163:31">data_index</name></name> <operator pos:start="163:33" pos:end="163:34">==</operator> <name pos:start="163:36" pos:end="163:55"><name pos:start="163:36" pos:end="163:38">pes</name><operator pos:start="163:39" pos:end="163:40">-&gt;</operator><name pos:start="163:41" pos:end="163:55">pes_header_size</name></name></expr>)</condition> <block pos:start="163:58" pos:end="201:13">{<block_content pos:start="165:17" pos:end="199:44">

                <decl_stmt pos:start="165:17" pos:end="165:33"><decl pos:start="165:17" pos:end="165:32"><type pos:start="165:17" pos:end="165:31"><specifier pos:start="165:17" pos:end="165:21">const</specifier> <name pos:start="165:23" pos:end="165:29">uint8_t</name> <modifier pos:start="165:31" pos:end="165:31">*</modifier></type><name pos:start="165:32" pos:end="165:32">r</name></decl>;</decl_stmt>

                <decl_stmt pos:start="167:17" pos:end="167:35"><decl pos:start="167:17" pos:end="167:34"><type pos:start="167:17" pos:end="167:28"><name pos:start="167:17" pos:end="167:24">unsigned</name> <name pos:start="167:26" pos:end="167:28">int</name></type> <name pos:start="167:30" pos:end="167:34">flags</name></decl>;</decl_stmt>



                <expr_stmt pos:start="171:17" pos:end="171:39"><expr pos:start="171:17" pos:end="171:38"><name pos:start="171:17" pos:end="171:21">flags</name> <operator pos:start="171:23" pos:end="171:23">=</operator> <name pos:start="171:25" pos:end="171:38"><name pos:start="171:25" pos:end="171:27">pes</name><operator pos:start="171:28" pos:end="171:29">-&gt;</operator><name pos:start="171:30" pos:end="171:35">header</name><index pos:start="171:36" pos:end="171:38">[<expr pos:start="171:37" pos:end="171:37"><literal type="number" pos:start="171:37" pos:end="171:37">7</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="173:17" pos:end="173:36"><expr pos:start="173:17" pos:end="173:35"><name pos:start="173:17" pos:end="173:17">r</name> <operator pos:start="173:19" pos:end="173:19">=</operator> <name pos:start="173:21" pos:end="173:31"><name pos:start="173:21" pos:end="173:23">pes</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:31">header</name></name> <operator pos:start="173:33" pos:end="173:33">+</operator> <literal type="number" pos:start="173:35" pos:end="173:35">9</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="175:17" pos:end="175:42"><expr pos:start="175:17" pos:end="175:41"><name pos:start="175:17" pos:end="175:24"><name pos:start="175:17" pos:end="175:19">pes</name><operator pos:start="175:20" pos:end="175:21">-&gt;</operator><name pos:start="175:22" pos:end="175:24">pts</name></name> <operator pos:start="175:26" pos:end="175:26">=</operator> <name pos:start="175:28" pos:end="175:41">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                <expr_stmt pos:start="177:17" pos:end="177:42"><expr pos:start="177:17" pos:end="177:41"><name pos:start="177:17" pos:end="177:24"><name pos:start="177:17" pos:end="177:19">pes</name><operator pos:start="177:20" pos:end="177:21">-&gt;</operator><name pos:start="177:22" pos:end="177:24">dts</name></name> <operator pos:start="177:26" pos:end="177:26">=</operator> <name pos:start="177:28" pos:end="177:41">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                <if_stmt pos:start="179:17" pos:end="195:17"><if pos:start="179:17" pos:end="185:17">if <condition pos:start="179:20" pos:end="179:43">(<expr pos:start="179:21" pos:end="179:42"><operator pos:start="179:21" pos:end="179:21">(</operator><name pos:start="179:22" pos:end="179:26">flags</name> <operator pos:start="179:28" pos:end="179:28">&amp;</operator> <literal type="number" pos:start="179:30" pos:end="179:33">0xc0</literal><operator pos:start="179:34" pos:end="179:34">)</operator> <operator pos:start="179:36" pos:end="179:37">==</operator> <literal type="number" pos:start="179:39" pos:end="179:42">0x80</literal></expr>)</condition> <block pos:start="179:45" pos:end="185:17">{<block_content pos:start="181:21" pos:end="183:27">

                    <expr_stmt pos:start="181:21" pos:end="181:42"><expr pos:start="181:21" pos:end="181:41"><name pos:start="181:21" pos:end="181:28"><name pos:start="181:21" pos:end="181:23">pes</name><operator pos:start="181:24" pos:end="181:25">-&gt;</operator><name pos:start="181:26" pos:end="181:28">pts</name></name> <operator pos:start="181:30" pos:end="181:30">=</operator> <call pos:start="181:32" pos:end="181:41"><name pos:start="181:32" pos:end="181:38">get_pts</name><argument_list pos:start="181:39" pos:end="181:41">(<argument pos:start="181:40" pos:end="181:40"><expr pos:start="181:40" pos:end="181:40"><name pos:start="181:40" pos:end="181:40">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="183:21" pos:end="183:27"><expr pos:start="183:21" pos:end="183:26"><name pos:start="183:21" pos:end="183:21">r</name> <operator pos:start="183:23" pos:end="183:24">+=</operator> <literal type="number" pos:start="183:26" pos:end="183:26">5</literal></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="185:19" pos:end="195:17">else if <condition pos:start="185:27" pos:end="185:50">(<expr pos:start="185:28" pos:end="185:49"><operator pos:start="185:28" pos:end="185:28">(</operator><name pos:start="185:29" pos:end="185:33">flags</name> <operator pos:start="185:35" pos:end="185:35">&amp;</operator> <literal type="number" pos:start="185:37" pos:end="185:40">0xc0</literal><operator pos:start="185:41" pos:end="185:41">)</operator> <operator pos:start="185:43" pos:end="185:44">==</operator> <literal type="number" pos:start="185:46" pos:end="185:49">0xc0</literal></expr>)</condition> <block pos:start="185:52" pos:end="195:17">{<block_content pos:start="187:21" pos:end="193:27">

                    <expr_stmt pos:start="187:21" pos:end="187:42"><expr pos:start="187:21" pos:end="187:41"><name pos:start="187:21" pos:end="187:28"><name pos:start="187:21" pos:end="187:23">pes</name><operator pos:start="187:24" pos:end="187:25">-&gt;</operator><name pos:start="187:26" pos:end="187:28">pts</name></name> <operator pos:start="187:30" pos:end="187:30">=</operator> <call pos:start="187:32" pos:end="187:41"><name pos:start="187:32" pos:end="187:38">get_pts</name><argument_list pos:start="187:39" pos:end="187:41">(<argument pos:start="187:40" pos:end="187:40"><expr pos:start="187:40" pos:end="187:40"><name pos:start="187:40" pos:end="187:40">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:27"><expr pos:start="189:21" pos:end="189:26"><name pos:start="189:21" pos:end="189:21">r</name> <operator pos:start="189:23" pos:end="189:24">+=</operator> <literal type="number" pos:start="189:26" pos:end="189:26">5</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:42"><expr pos:start="191:21" pos:end="191:41"><name pos:start="191:21" pos:end="191:28"><name pos:start="191:21" pos:end="191:23">pes</name><operator pos:start="191:24" pos:end="191:25">-&gt;</operator><name pos:start="191:26" pos:end="191:28">dts</name></name> <operator pos:start="191:30" pos:end="191:30">=</operator> <call pos:start="191:32" pos:end="191:41"><name pos:start="191:32" pos:end="191:38">get_pts</name><argument_list pos:start="191:39" pos:end="191:41">(<argument pos:start="191:40" pos:end="191:40"><expr pos:start="191:40" pos:end="191:40"><name pos:start="191:40" pos:end="191:40">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="193:21" pos:end="193:27"><expr pos:start="193:21" pos:end="193:26"><name pos:start="193:21" pos:end="193:21">r</name> <operator pos:start="193:23" pos:end="193:24">+=</operator> <literal type="number" pos:start="193:26" pos:end="193:26">5</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <comment type="block" pos:start="197:17" pos:end="197:77">/* we got the full header. We parse it and get the payload */</comment>

                <expr_stmt pos:start="199:17" pos:end="199:44"><expr pos:start="199:17" pos:end="199:43"><name pos:start="199:17" pos:end="199:26"><name pos:start="199:17" pos:end="199:19">pes</name><operator pos:start="199:20" pos:end="199:21">-&gt;</operator><name pos:start="199:22" pos:end="199:26">state</name></name> <operator pos:start="199:28" pos:end="199:28">=</operator> <name pos:start="199:30" pos:end="199:43">MPEGTS_PAYLOAD</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <break pos:start="203:13" pos:end="203:18">break;</break>

        <case pos:start="205:9" pos:end="205:28">case <expr pos:start="205:14" pos:end="205:27"><name pos:start="205:14" pos:end="205:27">MPEGTS_PAYLOAD</name></expr>:</case>

            <if_stmt pos:start="207:13" pos:end="219:13"><if pos:start="207:13" pos:end="215:13">if <condition pos:start="207:16" pos:end="207:32">(<expr pos:start="207:17" pos:end="207:31"><name pos:start="207:17" pos:end="207:31"><name pos:start="207:17" pos:end="207:19">pes</name><operator pos:start="207:20" pos:end="207:21">-&gt;</operator><name pos:start="207:22" pos:end="207:31">total_size</name></name></expr>)</condition> <block pos:start="207:34" pos:end="215:13">{<block_content pos:start="209:17" pos:end="213:35">

                <expr_stmt pos:start="209:17" pos:end="209:56"><expr pos:start="209:17" pos:end="209:55"><name pos:start="209:17" pos:end="209:19">len</name> <operator pos:start="209:21" pos:end="209:21">=</operator> <name pos:start="209:23" pos:end="209:37"><name pos:start="209:23" pos:end="209:25">pes</name><operator pos:start="209:26" pos:end="209:27">-&gt;</operator><name pos:start="209:28" pos:end="209:37">total_size</name></name> <operator pos:start="209:39" pos:end="209:39">-</operator> <name pos:start="209:41" pos:end="209:55"><name pos:start="209:41" pos:end="209:43">pes</name><operator pos:start="209:44" pos:end="209:45">-&gt;</operator><name pos:start="209:46" pos:end="209:55">data_index</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="211:17" pos:end="213:35"><if pos:start="211:17" pos:end="213:35">if <condition pos:start="211:20" pos:end="211:35">(<expr pos:start="211:21" pos:end="211:34"><name pos:start="211:21" pos:end="211:23">len</name> <operator pos:start="211:25" pos:end="211:25">&gt;</operator> <name pos:start="211:27" pos:end="211:34">buf_size</name></expr>)</condition><block type="pseudo" pos:start="213:21" pos:end="213:35"><block_content pos:start="213:21" pos:end="213:35">

                    <expr_stmt pos:start="213:21" pos:end="213:35"><expr pos:start="213:21" pos:end="213:34"><name pos:start="213:21" pos:end="213:23">len</name> <operator pos:start="213:25" pos:end="213:25">=</operator> <name pos:start="213:27" pos:end="213:34">buf_size</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="215:15" pos:end="219:13">else <block pos:start="215:20" pos:end="219:13">{<block_content pos:start="217:17" pos:end="217:31">

                <expr_stmt pos:start="217:17" pos:end="217:31"><expr pos:start="217:17" pos:end="217:30"><name pos:start="217:17" pos:end="217:19">len</name> <operator pos:start="217:21" pos:end="217:21">=</operator> <name pos:start="217:23" pos:end="217:30">buf_size</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <if_stmt pos:start="221:13" pos:end="245:13"><if pos:start="221:13" pos:end="245:13">if <condition pos:start="221:16" pos:end="221:24">(<expr pos:start="221:17" pos:end="221:23"><name pos:start="221:17" pos:end="221:19">len</name> <operator pos:start="221:21" pos:end="221:21">&gt;</operator> <literal type="number" pos:start="221:23" pos:end="221:23">0</literal></expr>)</condition> <block pos:start="221:26" pos:end="245:13">{<block_content pos:start="223:17" pos:end="243:17">

                <decl_stmt pos:start="223:17" pos:end="223:40"><decl pos:start="223:17" pos:end="223:39"><type pos:start="223:17" pos:end="223:26"><name pos:start="223:17" pos:end="223:24">AVPacket</name> <modifier pos:start="223:26" pos:end="223:26">*</modifier></type><name pos:start="223:27" pos:end="223:29">pkt</name> <init pos:start="223:31" pos:end="223:39">= <expr pos:start="223:33" pos:end="223:39"><name pos:start="223:33" pos:end="223:39"><name pos:start="223:33" pos:end="223:34">ts</name><operator pos:start="223:35" pos:end="223:36">-&gt;</operator><name pos:start="223:37" pos:end="223:39">pkt</name></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="225:17" pos:end="243:17"><if pos:start="225:17" pos:end="243:17">if <condition pos:start="225:20" pos:end="225:60">(<expr pos:start="225:21" pos:end="225:59"><name pos:start="225:21" pos:end="225:27"><name pos:start="225:21" pos:end="225:23">pes</name><operator pos:start="225:24" pos:end="225:25">-&gt;</operator><name pos:start="225:26" pos:end="225:27">st</name></name> <operator pos:start="225:29" pos:end="225:30">&amp;&amp;</operator> <call pos:start="225:32" pos:end="225:54"><name pos:start="225:32" pos:end="225:44">av_new_packet</name><argument_list pos:start="225:45" pos:end="225:54">(<argument pos:start="225:46" pos:end="225:48"><expr pos:start="225:46" pos:end="225:48"><name pos:start="225:46" pos:end="225:48">pkt</name></expr></argument>, <argument pos:start="225:51" pos:end="225:53"><expr pos:start="225:51" pos:end="225:53"><name pos:start="225:51" pos:end="225:53">len</name></expr></argument>)</argument_list></call> <operator pos:start="225:56" pos:end="225:57">==</operator> <literal type="number" pos:start="225:59" pos:end="225:59">0</literal></expr>)</condition> <block pos:start="225:62" pos:end="243:17">{<block_content pos:start="227:21" pos:end="241:27">

                    <expr_stmt pos:start="227:21" pos:end="227:46"><expr pos:start="227:21" pos:end="227:45"><call pos:start="227:21" pos:end="227:45"><name pos:start="227:21" pos:end="227:26">memcpy</name><argument_list pos:start="227:27" pos:end="227:45">(<argument pos:start="227:28" pos:end="227:36"><expr pos:start="227:28" pos:end="227:36"><name pos:start="227:28" pos:end="227:36"><name pos:start="227:28" pos:end="227:30">pkt</name><operator pos:start="227:31" pos:end="227:32">-&gt;</operator><name pos:start="227:33" pos:end="227:36">data</name></name></expr></argument>, <argument pos:start="227:39" pos:end="227:39"><expr pos:start="227:39" pos:end="227:39"><name pos:start="227:39" pos:end="227:39">p</name></expr></argument>, <argument pos:start="227:42" pos:end="227:44"><expr pos:start="227:42" pos:end="227:44"><name pos:start="227:42" pos:end="227:44">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="229:21" pos:end="229:55"><expr pos:start="229:21" pos:end="229:54"><name pos:start="229:21" pos:end="229:37"><name pos:start="229:21" pos:end="229:23">pkt</name><operator pos:start="229:24" pos:end="229:25">-&gt;</operator><name pos:start="229:26" pos:end="229:37">stream_index</name></name> <operator pos:start="229:39" pos:end="229:39">=</operator> <name pos:start="229:41" pos:end="229:54"><name pos:start="229:41" pos:end="229:43">pes</name><operator pos:start="229:44" pos:end="229:45">-&gt;</operator><name pos:start="229:46" pos:end="229:47">st</name><operator pos:start="229:48" pos:end="229:49">-&gt;</operator><name pos:start="229:50" pos:end="229:54">index</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="231:21" pos:end="231:40"><expr pos:start="231:21" pos:end="231:39"><name pos:start="231:21" pos:end="231:28"><name pos:start="231:21" pos:end="231:23">pkt</name><operator pos:start="231:24" pos:end="231:25">-&gt;</operator><name pos:start="231:26" pos:end="231:28">pts</name></name> <operator pos:start="231:30" pos:end="231:30">=</operator> <name pos:start="231:32" pos:end="231:39"><name pos:start="231:32" pos:end="231:34">pes</name><operator pos:start="231:35" pos:end="231:36">-&gt;</operator><name pos:start="231:37" pos:end="231:39">pts</name></name></expr>;</expr_stmt>

                    <comment type="block" pos:start="233:21" pos:end="233:42">/* reset pts values */</comment>

                    <expr_stmt pos:start="235:21" pos:end="235:46"><expr pos:start="235:21" pos:end="235:45"><name pos:start="235:21" pos:end="235:28"><name pos:start="235:21" pos:end="235:23">pes</name><operator pos:start="235:24" pos:end="235:25">-&gt;</operator><name pos:start="235:26" pos:end="235:28">pts</name></name> <operator pos:start="235:30" pos:end="235:30">=</operator> <name pos:start="235:32" pos:end="235:45">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="237:21" pos:end="237:46"><expr pos:start="237:21" pos:end="237:45"><name pos:start="237:21" pos:end="237:28"><name pos:start="237:21" pos:end="237:23">pes</name><operator pos:start="237:24" pos:end="237:25">-&gt;</operator><name pos:start="237:26" pos:end="237:28">dts</name></name> <operator pos:start="237:30" pos:end="237:30">=</operator> <name pos:start="237:32" pos:end="237:45">AV_NOPTS_VALUE</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="239:21" pos:end="239:39"><expr pos:start="239:21" pos:end="239:38"><name pos:start="239:21" pos:end="239:34"><name pos:start="239:21" pos:end="239:22">ts</name><operator pos:start="239:23" pos:end="239:24">-&gt;</operator><name pos:start="239:25" pos:end="239:34">stop_parse</name></name> <operator pos:start="239:36" pos:end="239:36">=</operator> <literal type="number" pos:start="239:38" pos:end="239:38">1</literal></expr>;</expr_stmt>

                    <return pos:start="241:21" pos:end="241:27">return;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="247:13" pos:end="247:25"><expr pos:start="247:13" pos:end="247:24"><name pos:start="247:13" pos:end="247:20">buf_size</name> <operator pos:start="247:22" pos:end="247:22">=</operator> <literal type="number" pos:start="247:24" pos:end="247:24">0</literal></expr>;</expr_stmt>

            <break pos:start="249:13" pos:end="249:18">break;</break>

        <case pos:start="251:9" pos:end="251:25">case <expr pos:start="251:14" pos:end="251:24"><name pos:start="251:14" pos:end="251:24">MPEGTS_SKIP</name></expr>:</case>

            <expr_stmt pos:start="253:13" pos:end="253:25"><expr pos:start="253:13" pos:end="253:24"><name pos:start="253:13" pos:end="253:20">buf_size</name> <operator pos:start="253:22" pos:end="253:22">=</operator> <literal type="number" pos:start="253:24" pos:end="253:24">0</literal></expr>;</expr_stmt>

            <break pos:start="255:13" pos:end="255:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></while>

</block_content>}</block></function>
</unit>
