<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20078.c" pos:tabs="8"><function pos:start="1:1" pos:end="179:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:35">read_braindead_odml_indx</name><parameter_list pos:start="1:36" pos:end="1:70">(<parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><name pos:start="1:37" pos:end="1:51">AVFormatContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:54">s</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:69"><decl pos:start="1:57" pos:end="1:69"><type pos:start="1:57" pos:end="1:69"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:69">frame_num</name></decl></parameter>)</parameter_list><block pos:start="1:71" pos:end="179:1">{<block_content pos:start="3:5" pos:end="177:13">

    <decl_stmt pos:start="3:5" pos:end="3:35"><decl pos:start="3:5" pos:end="3:34"><type pos:start="3:5" pos:end="3:16"><name pos:start="3:5" pos:end="3:14">AVIContext</name> <modifier pos:start="3:16" pos:end="3:16">*</modifier></type><name pos:start="3:17" pos:end="3:19">avi</name> <init pos:start="3:21" pos:end="3:34">= <expr pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:34"><name pos:start="3:23" pos:end="3:23">s</name><operator pos:start="3:24" pos:end="3:25">-&gt;</operator><name pos:start="3:26" pos:end="3:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">AVIOContext</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:19">pb</name> <init pos:start="5:21" pos:end="5:27">= <expr pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:27"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:23">longs_pre_entry</name><init pos:start="7:24" pos:end="7:38">= <expr pos:start="7:26" pos:end="7:38"><call pos:start="7:26" pos:end="7:38"><name pos:start="7:26" pos:end="7:34">avio_rl16</name><argument_list pos:start="7:35" pos:end="7:38">(<argument pos:start="7:36" pos:end="7:37"><expr pos:start="7:36" pos:end="7:37"><name pos:start="7:36" pos:end="7:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:22">index_sub_type</name> <init pos:start="9:24" pos:end="9:36">= <expr pos:start="9:26" pos:end="9:36"><call pos:start="9:26" pos:end="9:36"><name pos:start="9:26" pos:end="9:32">avio_r8</name><argument_list pos:start="9:33" pos:end="9:36">(<argument pos:start="9:34" pos:end="9:35"><expr pos:start="9:34" pos:end="9:35"><name pos:start="9:34" pos:end="9:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:37"><decl pos:start="11:5" pos:end="11:36"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:18">index_type</name>     <init pos:start="11:24" pos:end="11:36">= <expr pos:start="11:26" pos:end="11:36"><call pos:start="11:26" pos:end="11:36"><name pos:start="11:26" pos:end="11:32">avio_r8</name><argument_list pos:start="11:33" pos:end="11:36">(<argument pos:start="11:34" pos:end="11:35"><expr pos:start="11:34" pos:end="11:35"><name pos:start="11:34" pos:end="11:35">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:22">entries_in_use</name> <init pos:start="13:24" pos:end="13:38">= <expr pos:start="13:26" pos:end="13:38"><call pos:start="13:26" pos:end="13:38"><name pos:start="13:26" pos:end="13:34">avio_rl32</name><argument_list pos:start="13:35" pos:end="13:38">(<argument pos:start="13:36" pos:end="13:37"><expr pos:start="13:36" pos:end="13:37"><name pos:start="13:36" pos:end="13:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">chunk_id</name>       <init pos:start="15:24" pos:end="15:38">= <expr pos:start="15:26" pos:end="15:38"><call pos:start="15:26" pos:end="15:38"><name pos:start="15:26" pos:end="15:34">avio_rl32</name><argument_list pos:start="15:35" pos:end="15:38">(<argument pos:start="15:36" pos:end="15:37"><expr pos:start="15:36" pos:end="15:37"><name pos:start="15:36" pos:end="15:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:39"><decl pos:start="17:5" pos:end="17:38"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:11">int64_t</name></type> <name pos:start="17:13" pos:end="17:16">base</name>       <init pos:start="17:24" pos:end="17:38">= <expr pos:start="17:26" pos:end="17:38"><call pos:start="17:26" pos:end="17:38"><name pos:start="17:26" pos:end="17:34">avio_rl64</name><argument_list pos:start="17:35" pos:end="17:38">(<argument pos:start="17:36" pos:end="17:37"><expr pos:start="17:36" pos:end="17:37"><name pos:start="17:36" pos:end="17:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:77"><decl pos:start="19:5" pos:end="19:76"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:17">stream_id</name><init pos:start="19:18" pos:end="19:76">= <expr pos:start="19:20" pos:end="19:76"><literal type="number" pos:start="19:20" pos:end="19:21">10</literal><operator pos:start="19:22" pos:end="19:22">*</operator><operator pos:start="19:23" pos:end="19:23">(</operator><operator pos:start="19:24" pos:end="19:24">(</operator><name pos:start="19:25" pos:end="19:32">chunk_id</name><operator pos:start="19:33" pos:end="19:33">&amp;</operator><literal type="number" pos:start="19:34" pos:end="19:37">0xFF</literal><operator pos:start="19:38" pos:end="19:38">)</operator> <operator pos:start="19:40" pos:end="19:40">-</operator> <literal type="char" pos:start="19:42" pos:end="19:44">'0'</literal><operator pos:start="19:45" pos:end="19:45">)</operator> <operator pos:start="19:47" pos:end="19:47">+</operator> <operator pos:start="19:49" pos:end="19:49">(</operator><operator pos:start="19:50" pos:end="19:50">(</operator><operator pos:start="19:51" pos:end="19:51">(</operator><name pos:start="19:52" pos:end="19:59">chunk_id</name><operator pos:start="19:60" pos:end="19:61">&gt;&gt;</operator><literal type="number" pos:start="19:62" pos:end="19:62">8</literal><operator pos:start="19:63" pos:end="19:63">)</operator><operator pos:start="19:64" pos:end="19:64">&amp;</operator><literal type="number" pos:start="19:65" pos:end="19:68">0xFF</literal><operator pos:start="19:69" pos:end="19:69">)</operator> <operator pos:start="19:71" pos:end="19:71">-</operator> <literal type="char" pos:start="19:73" pos:end="19:75">'0'</literal><operator pos:start="19:76" pos:end="19:76">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:17"><decl pos:start="21:5" pos:end="21:16"><type pos:start="21:5" pos:end="21:14"><name pos:start="21:5" pos:end="21:12">AVStream</name> <modifier pos:start="21:14" pos:end="21:14">*</modifier></type><name pos:start="21:15" pos:end="21:16">st</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:19"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:15"><name pos:start="23:5" pos:end="23:13">AVIStream</name> <modifier pos:start="23:15" pos:end="23:15">*</modifier></type><name pos:start="23:16" pos:end="23:18">ast</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:10"><decl pos:start="25:5" pos:end="25:9"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:25"><decl pos:start="27:5" pos:end="27:24"><type pos:start="27:5" pos:end="27:11"><name pos:start="27:5" pos:end="27:11">int64_t</name></type> <name pos:start="27:13" pos:end="27:20">last_pos</name><init pos:start="27:21" pos:end="27:24">= <expr pos:start="27:23" pos:end="27:24"><operator pos:start="27:23" pos:end="27:23">-</operator><literal type="number" pos:start="27:24" pos:end="27:24">1</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:39"><decl pos:start="29:5" pos:end="29:38"><type pos:start="29:5" pos:end="29:11"><name pos:start="29:5" pos:end="29:11">int64_t</name></type> <name pos:start="29:13" pos:end="29:20">filesize</name><init pos:start="29:21" pos:end="29:38">= <expr pos:start="29:23" pos:end="29:38"><call pos:start="29:23" pos:end="29:38"><name pos:start="29:23" pos:end="29:31">avio_size</name><argument_list pos:start="29:32" pos:end="29:38">(<argument pos:start="29:33" pos:end="29:37"><expr pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:37"><name pos:start="29:33" pos:end="29:33">s</name><operator pos:start="29:34" pos:end="29:35">-&gt;</operator><name pos:start="29:36" pos:end="29:37">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:72"><expr pos:start="33:5" pos:end="35:71"><call pos:start="33:5" pos:end="35:71"><name pos:start="33:5" pos:end="33:11">av_dlog</name><argument_list pos:start="33:12" pos:end="35:71">(<argument pos:start="33:13" pos:end="33:13"><expr pos:start="33:13" pos:end="33:13"><name pos:start="33:13" pos:end="33:13">s</name></expr></argument>, <argument pos:start="33:16" pos:end="33:98"><expr pos:start="33:16" pos:end="33:98"><literal type="string" pos:start="33:16" pos:end="33:88">"longs_pre_entry:%d index_type:%d entries_in_use:%d chunk_id:%X base:%16"</literal><name pos:start="33:89" pos:end="33:94">PRIX64</name><literal type="string" pos:start="33:95" pos:end="33:98">"\n"</literal></expr></argument>,

            <argument pos:start="35:13" pos:end="35:27"><expr pos:start="35:13" pos:end="35:27"><name pos:start="35:13" pos:end="35:27">longs_pre_entry</name></expr></argument>,<argument pos:start="35:29" pos:end="35:38"><expr pos:start="35:29" pos:end="35:38"><name pos:start="35:29" pos:end="35:38">index_type</name></expr></argument>, <argument pos:start="35:41" pos:end="35:54"><expr pos:start="35:41" pos:end="35:54"><name pos:start="35:41" pos:end="35:54">entries_in_use</name></expr></argument>, <argument pos:start="35:57" pos:end="35:64"><expr pos:start="35:57" pos:end="35:64"><name pos:start="35:57" pos:end="35:64">chunk_id</name></expr></argument>, <argument pos:start="35:67" pos:end="35:70"><expr pos:start="35:67" pos:end="35:70"><name pos:start="35:67" pos:end="35:70">base</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="41:18"><if pos:start="39:5" pos:end="41:18">if<condition pos:start="39:7" pos:end="39:51">(<expr pos:start="39:8" pos:end="39:50"><name pos:start="39:8" pos:end="39:16">stream_id</name> <operator pos:start="39:18" pos:end="39:19">&gt;=</operator> <name pos:start="39:21" pos:end="39:33"><name pos:start="39:21" pos:end="39:21">s</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:33">nb_streams</name></name> <operator pos:start="39:35" pos:end="39:36">||</operator> <name pos:start="39:38" pos:end="39:46">stream_id</name> <operator pos:start="39:48" pos:end="39:48">&lt;</operator> <literal type="number" pos:start="39:50" pos:end="39:50">0</literal></expr>)</condition><block type="pseudo" pos:start="41:9" pos:end="41:18"><block_content pos:start="41:9" pos:end="41:18">

        <return pos:start="41:9" pos:end="41:18">return <expr pos:start="41:16" pos:end="41:17"><operator pos:start="41:16" pos:end="41:16">-</operator><literal type="number" pos:start="41:17" pos:end="41:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:30"><expr pos:start="43:5" pos:end="43:29"><name pos:start="43:5" pos:end="43:6">st</name><operator pos:start="43:7" pos:end="43:7">=</operator> <name pos:start="43:9" pos:end="43:29"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:18">streams</name><index pos:start="43:19" pos:end="43:29">[<expr pos:start="43:20" pos:end="43:28"><name pos:start="43:20" pos:end="43:28">stream_id</name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:24"><expr pos:start="45:5" pos:end="45:23"><name pos:start="45:5" pos:end="45:7">ast</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <name pos:start="45:11" pos:end="45:23"><name pos:start="45:11" pos:end="45:12">st</name><operator pos:start="45:13" pos:end="45:14">-&gt;</operator><name pos:start="45:15" pos:end="45:23">priv_data</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="49:5" pos:end="51:18"><if pos:start="49:5" pos:end="51:18">if<condition pos:start="49:7" pos:end="49:22">(<expr pos:start="49:8" pos:end="49:21"><name pos:start="49:8" pos:end="49:21">index_sub_type</name></expr>)</condition><block type="pseudo" pos:start="51:9" pos:end="51:18"><block_content pos:start="51:9" pos:end="51:18">

        <return pos:start="51:9" pos:end="51:18">return <expr pos:start="51:16" pos:end="51:17"><operator pos:start="51:16" pos:end="51:16">-</operator><literal type="number" pos:start="51:17" pos:end="51:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:18"><expr pos:start="55:5" pos:end="55:17"><call pos:start="55:5" pos:end="55:17"><name pos:start="55:5" pos:end="55:13">avio_rl32</name><argument_list pos:start="55:14" pos:end="55:17">(<argument pos:start="55:15" pos:end="55:16"><expr pos:start="55:15" pos:end="55:16"><name pos:start="55:15" pos:end="55:16">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="59:5" pos:end="61:18"><if pos:start="59:5" pos:end="61:18">if<condition pos:start="59:7" pos:end="59:42">(<expr pos:start="59:8" pos:end="59:41"><name pos:start="59:8" pos:end="59:17">index_type</name> <operator pos:start="59:19" pos:end="59:20">&amp;&amp;</operator> <name pos:start="59:22" pos:end="59:36">longs_pre_entry</name> <operator pos:start="59:38" pos:end="59:39">!=</operator> <literal type="number" pos:start="59:41" pos:end="59:41">2</literal></expr>)</condition><block type="pseudo" pos:start="61:9" pos:end="61:18"><block_content pos:start="61:9" pos:end="61:18">

        <return pos:start="61:9" pos:end="61:18">return <expr pos:start="61:16" pos:end="61:17"><operator pos:start="61:16" pos:end="61:16">-</operator><literal type="number" pos:start="61:17" pos:end="61:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="63:5" pos:end="65:18"><if pos:start="63:5" pos:end="65:18">if<condition pos:start="63:7" pos:end="63:20">(<expr pos:start="63:8" pos:end="63:19"><name pos:start="63:8" pos:end="63:17">index_type</name><operator pos:start="63:18" pos:end="63:18">&gt;</operator><literal type="number" pos:start="63:19" pos:end="63:19">1</literal></expr>)</condition><block type="pseudo" pos:start="65:9" pos:end="65:18"><block_content pos:start="65:9" pos:end="65:18">

        <return pos:start="65:9" pos:end="65:18">return <expr pos:start="65:16" pos:end="65:17"><operator pos:start="65:16" pos:end="65:16">-</operator><literal type="number" pos:start="65:17" pos:end="65:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="81:5"><if pos:start="69:5" pos:end="81:5">if<condition pos:start="69:7" pos:end="69:40">(<expr pos:start="69:8" pos:end="69:39"><name pos:start="69:8" pos:end="69:15">filesize</name> <operator pos:start="69:17" pos:end="69:17">&gt;</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal> <operator pos:start="69:21" pos:end="69:22">&amp;&amp;</operator> <name pos:start="69:24" pos:end="69:27">base</name> <operator pos:start="69:29" pos:end="69:30">&gt;=</operator> <name pos:start="69:32" pos:end="69:39">filesize</name></expr>)</condition><block pos:start="69:41" pos:end="81:5">{<block_content pos:start="71:9" pos:end="79:22">

        <expr_stmt pos:start="71:9" pos:end="71:56"><expr pos:start="71:9" pos:end="71:55"><call pos:start="71:9" pos:end="71:55"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:55">(<argument pos:start="71:16" pos:end="71:16"><expr pos:start="71:16" pos:end="71:16"><name pos:start="71:16" pos:end="71:16">s</name></expr></argument>, <argument pos:start="71:19" pos:end="71:30"><expr pos:start="71:19" pos:end="71:30"><name pos:start="71:19" pos:end="71:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:33" pos:end="71:54"><expr pos:start="71:33" pos:end="71:54"><literal type="string" pos:start="71:33" pos:end="71:54">"ODML index invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="73:9" pos:end="79:22"><if pos:start="73:9" pos:end="75:31">if<condition pos:start="73:11" pos:end="73:103">(<expr pos:start="73:12" pos:end="73:102"><name pos:start="73:12" pos:end="73:15">base</name><operator pos:start="73:16" pos:end="73:17">&gt;&gt;</operator><literal type="number" pos:start="73:18" pos:end="73:19">32</literal> <operator pos:start="73:21" pos:end="73:22">==</operator> <operator pos:start="73:24" pos:end="73:24">(</operator><name pos:start="73:25" pos:end="73:28">base</name> <operator pos:start="73:30" pos:end="73:30">&amp;</operator> <literal type="number" pos:start="73:32" pos:end="73:41">0xFFFFFFFF</literal><operator pos:start="73:42" pos:end="73:42">)</operator> <operator pos:start="73:44" pos:end="73:45">&amp;&amp;</operator> <operator pos:start="73:47" pos:end="73:47">(</operator><name pos:start="73:48" pos:end="73:51">base</name> <operator pos:start="73:53" pos:end="73:53">&amp;</operator> <literal type="number" pos:start="73:55" pos:end="73:64">0xFFFFFFFF</literal><operator pos:start="73:65" pos:end="73:65">)</operator> <operator pos:start="73:67" pos:end="73:67">&lt;</operator> <name pos:start="73:69" pos:end="73:76">filesize</name> <operator pos:start="73:78" pos:end="73:79">&amp;&amp;</operator> <name pos:start="73:81" pos:end="73:88">filesize</name> <operator pos:start="73:90" pos:end="73:91">&lt;=</operator> <literal type="number" pos:start="73:93" pos:end="73:102">0xFFFFFFFF</literal></expr>)</condition><block type="pseudo" pos:start="75:13" pos:end="75:31"><block_content pos:start="75:13" pos:end="75:31">

            <expr_stmt pos:start="75:13" pos:end="75:31"><expr pos:start="75:13" pos:end="75:30"><name pos:start="75:13" pos:end="75:16">base</name> <operator pos:start="75:18" pos:end="75:19">&amp;=</operator> <literal type="number" pos:start="75:21" pos:end="75:30">0xFFFFFFFF</literal></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="77:9" pos:end="79:22">else<block type="pseudo" pos:start="79:13" pos:end="79:22"><block_content pos:start="79:13" pos:end="79:22">

            <return pos:start="79:13" pos:end="79:22">return <expr pos:start="79:20" pos:end="79:21"><operator pos:start="79:20" pos:end="79:20">-</operator><literal type="number" pos:start="79:21" pos:end="79:21">1</literal></expr>;</return></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="85:5" pos:end="173:5">for<control pos:start="85:8" pos:end="85:35">(<init pos:start="85:9" pos:end="85:12"><expr pos:start="85:9" pos:end="85:11"><name pos:start="85:9" pos:end="85:9">i</name><operator pos:start="85:10" pos:end="85:10">=</operator><literal type="number" pos:start="85:11" pos:end="85:11">0</literal></expr>;</init> <condition pos:start="85:14" pos:end="85:30"><expr pos:start="85:14" pos:end="85:29"><name pos:start="85:14" pos:end="85:14">i</name><operator pos:start="85:15" pos:end="85:15">&lt;</operator><name pos:start="85:16" pos:end="85:29">entries_in_use</name></expr>;</condition> <incr pos:start="85:32" pos:end="85:34"><expr pos:start="85:32" pos:end="85:34"><name pos:start="85:32" pos:end="85:32">i</name><operator pos:start="85:33" pos:end="85:34">++</operator></expr></incr>)</control><block pos:start="85:36" pos:end="173:5">{<block_content pos:start="87:9" pos:end="171:9">

        <if_stmt pos:start="87:9" pos:end="171:9"><if pos:start="87:9" pos:end="123:9">if<condition pos:start="87:11" pos:end="87:22">(<expr pos:start="87:12" pos:end="87:21"><name pos:start="87:12" pos:end="87:21">index_type</name></expr>)</condition><block pos:start="87:23" pos:end="123:9">{<block_content pos:start="89:13" pos:end="121:26">

            <decl_stmt pos:start="89:13" pos:end="89:50"><decl pos:start="89:13" pos:end="89:49"><type pos:start="89:13" pos:end="89:19"><name pos:start="89:13" pos:end="89:19">int64_t</name></type> <name pos:start="89:21" pos:end="89:23">pos</name><init pos:start="89:24" pos:end="89:49">= <expr pos:start="89:26" pos:end="89:49"><call pos:start="89:26" pos:end="89:38"><name pos:start="89:26" pos:end="89:34">avio_rl32</name><argument_list pos:start="89:35" pos:end="89:38">(<argument pos:start="89:36" pos:end="89:37"><expr pos:start="89:36" pos:end="89:37"><name pos:start="89:36" pos:end="89:37">pb</name></expr></argument>)</argument_list></call> <operator pos:start="89:40" pos:end="89:40">+</operator> <name pos:start="89:42" pos:end="89:45">base</name> <operator pos:start="89:47" pos:end="89:47">-</operator> <literal type="number" pos:start="89:49" pos:end="89:49">8</literal></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="91:13" pos:end="91:39"><decl pos:start="91:13" pos:end="91:38"><type pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:15">int</name></type> <name pos:start="91:17" pos:end="91:19">len</name>    <init pos:start="91:24" pos:end="91:38">= <expr pos:start="91:26" pos:end="91:38"><call pos:start="91:26" pos:end="91:38"><name pos:start="91:26" pos:end="91:34">avio_rl32</name><argument_list pos:start="91:35" pos:end="91:38">(<argument pos:start="91:36" pos:end="91:37"><expr pos:start="91:36" pos:end="91:37"><name pos:start="91:36" pos:end="91:37">pb</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="93:13" pos:end="93:30"><decl pos:start="93:13" pos:end="93:29"><type pos:start="93:13" pos:end="93:15"><name pos:start="93:13" pos:end="93:15">int</name></type> <name pos:start="93:17" pos:end="93:19">key</name><init pos:start="93:20" pos:end="93:29">= <expr pos:start="93:22" pos:end="93:29"><name pos:start="93:22" pos:end="93:24">len</name> <operator pos:start="93:26" pos:end="93:27">&gt;=</operator> <literal type="number" pos:start="93:29" pos:end="93:29">0</literal></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:30"><expr pos:start="95:13" pos:end="95:29"><name pos:start="95:13" pos:end="95:15">len</name> <operator pos:start="95:17" pos:end="95:18">&amp;=</operator> <literal type="number" pos:start="95:20" pos:end="95:29">0x7FFFFFFF</literal></expr>;</expr_stmt>



            <expr_stmt pos:start="99:13" pos:end="99:60"><expr pos:start="99:13" pos:end="99:59"><call pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:19">av_dlog</name><argument_list pos:start="99:20" pos:end="99:59">(<argument pos:start="99:21" pos:end="99:21"><expr pos:start="99:21" pos:end="99:21"><name pos:start="99:21" pos:end="99:21">s</name></expr></argument>, <argument pos:start="99:24" pos:end="99:48"><expr pos:start="99:24" pos:end="99:48"><literal type="string" pos:start="99:24" pos:end="99:30">"pos:%"</literal><name pos:start="99:31" pos:end="99:36">PRId64</name><literal type="string" pos:start="99:37" pos:end="99:48">", len:%X\n"</literal></expr></argument>, <argument pos:start="99:51" pos:end="99:53"><expr pos:start="99:51" pos:end="99:53"><name pos:start="99:51" pos:end="99:53">pos</name></expr></argument>, <argument pos:start="99:56" pos:end="99:58"><expr pos:start="99:56" pos:end="99:58"><name pos:start="99:56" pos:end="99:58">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="103:13" pos:end="105:26"><if pos:start="103:13" pos:end="105:26">if<condition pos:start="103:15" pos:end="103:31">(<expr pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:30"><name pos:start="103:16" pos:end="103:17">pb</name><operator pos:start="103:18" pos:end="103:19">-&gt;</operator><name pos:start="103:20" pos:end="103:30">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="105:17" pos:end="105:26"><block_content pos:start="105:17" pos:end="105:26">

                <return pos:start="105:17" pos:end="105:26">return <expr pos:start="105:24" pos:end="105:25"><operator pos:start="105:24" pos:end="105:24">-</operator><literal type="number" pos:start="105:25" pos:end="105:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <if_stmt pos:start="109:13" pos:end="111:40"><if pos:start="109:13" pos:end="111:40">if<condition pos:start="109:15" pos:end="109:50">(<expr pos:start="109:16" pos:end="109:49"><name pos:start="109:16" pos:end="109:23">last_pos</name> <operator pos:start="109:25" pos:end="109:26">==</operator> <name pos:start="109:28" pos:end="109:30">pos</name> <operator pos:start="109:32" pos:end="109:33">||</operator> <name pos:start="109:35" pos:end="109:37">pos</name> <operator pos:start="109:39" pos:end="109:40">==</operator> <name pos:start="109:42" pos:end="109:45">base</name> <operator pos:start="109:47" pos:end="109:47">-</operator> <literal type="number" pos:start="109:49" pos:end="109:49">8</literal></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="111:40"><block_content pos:start="111:17" pos:end="111:40">

                <expr_stmt pos:start="111:17" pos:end="111:40"><expr pos:start="111:17" pos:end="111:39"><name pos:start="111:17" pos:end="111:36"><name pos:start="111:17" pos:end="111:19">avi</name><operator pos:start="111:20" pos:end="111:21">-&gt;</operator><name pos:start="111:22" pos:end="111:36">non_interleaved</name></name><operator pos:start="111:37" pos:end="111:37">=</operator> <literal type="number" pos:start="111:39" pos:end="111:39">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <if_stmt pos:start="113:13" pos:end="115:94"><if pos:start="113:13" pos:end="115:94">if<condition pos:start="113:15" pos:end="113:61">(<expr pos:start="113:16" pos:end="113:60"><name pos:start="113:16" pos:end="113:23">last_pos</name> <operator pos:start="113:25" pos:end="113:26">!=</operator> <name pos:start="113:28" pos:end="113:30">pos</name> <operator pos:start="113:32" pos:end="113:33">&amp;&amp;</operator> <operator pos:start="113:35" pos:end="113:35">(</operator><name pos:start="113:36" pos:end="113:38">len</name> <operator pos:start="113:40" pos:end="113:41">||</operator> <operator pos:start="113:43" pos:end="113:43">!</operator><name pos:start="113:44" pos:end="113:59"><name pos:start="113:44" pos:end="113:46">ast</name><operator pos:start="113:47" pos:end="113:48">-&gt;</operator><name pos:start="113:49" pos:end="113:59">sample_size</name></name><operator pos:start="113:60" pos:end="113:60">)</operator></expr>)</condition><block type="pseudo" pos:start="115:17" pos:end="115:94"><block_content pos:start="115:17" pos:end="115:94">

                <expr_stmt pos:start="115:17" pos:end="115:94"><expr pos:start="115:17" pos:end="115:93"><call pos:start="115:17" pos:end="115:93"><name pos:start="115:17" pos:end="115:34">av_add_index_entry</name><argument_list pos:start="115:35" pos:end="115:93">(<argument pos:start="115:36" pos:end="115:37"><expr pos:start="115:36" pos:end="115:37"><name pos:start="115:36" pos:end="115:37">st</name></expr></argument>, <argument pos:start="115:40" pos:end="115:42"><expr pos:start="115:40" pos:end="115:42"><name pos:start="115:40" pos:end="115:42">pos</name></expr></argument>, <argument pos:start="115:45" pos:end="115:56"><expr pos:start="115:45" pos:end="115:56"><name pos:start="115:45" pos:end="115:56"><name pos:start="115:45" pos:end="115:47">ast</name><operator pos:start="115:48" pos:end="115:49">-&gt;</operator><name pos:start="115:50" pos:end="115:56">cum_len</name></name></expr></argument>, <argument pos:start="115:59" pos:end="115:61"><expr pos:start="115:59" pos:end="115:61"><name pos:start="115:59" pos:end="115:61">len</name></expr></argument>, <argument pos:start="115:64" pos:end="115:64"><expr pos:start="115:64" pos:end="115:64"><literal type="number" pos:start="115:64" pos:end="115:64">0</literal></expr></argument>, <argument pos:start="115:67" pos:end="115:92"><expr pos:start="115:67" pos:end="115:92"><ternary pos:start="115:67" pos:end="115:92"><condition pos:start="115:67" pos:end="115:71"><expr pos:start="115:67" pos:end="115:69"><name pos:start="115:67" pos:end="115:69">key</name></expr> ?</condition><then pos:start="115:73" pos:end="115:88"> <expr pos:start="115:73" pos:end="115:88"><name pos:start="115:73" pos:end="115:88">AVINDEX_KEYFRAME</name></expr> </then><else pos:start="115:90" pos:end="115:92">: <expr pos:start="115:92" pos:end="115:92"><literal type="number" pos:start="115:92" pos:end="115:92">0</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:51"><expr pos:start="119:13" pos:end="119:50"><name pos:start="119:13" pos:end="119:24"><name pos:start="119:13" pos:end="119:15">ast</name><operator pos:start="119:16" pos:end="119:17">-&gt;</operator><name pos:start="119:18" pos:end="119:24">cum_len</name></name> <operator pos:start="119:26" pos:end="119:27">+=</operator> <call pos:start="119:29" pos:end="119:50"><name pos:start="119:29" pos:end="119:40">get_duration</name><argument_list pos:start="119:41" pos:end="119:50">(<argument pos:start="119:42" pos:end="119:44"><expr pos:start="119:42" pos:end="119:44"><name pos:start="119:42" pos:end="119:44">ast</name></expr></argument>, <argument pos:start="119:47" pos:end="119:49"><expr pos:start="119:47" pos:end="119:49"><name pos:start="119:47" pos:end="119:49">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="121:13" pos:end="121:26"><expr pos:start="121:13" pos:end="121:25"><name pos:start="121:13" pos:end="121:20">last_pos</name><operator pos:start="121:21" pos:end="121:21">=</operator> <name pos:start="121:23" pos:end="121:25">pos</name></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="123:10" pos:end="171:9">else<block pos:start="123:14" pos:end="171:9">{<block_content pos:start="125:13" pos:end="169:41">

            <decl_stmt pos:start="125:13" pos:end="125:32"><decl pos:start="125:13" pos:end="125:26"><type pos:start="125:13" pos:end="125:19"><name pos:start="125:13" pos:end="125:19">int64_t</name></type> <name pos:start="125:21" pos:end="125:26">offset</name></decl>, <decl pos:start="125:29" pos:end="125:31"><type ref="prev" pos:start="125:13" pos:end="125:19"/><name pos:start="125:29" pos:end="125:31">pos</name></decl>;</decl_stmt>

            <decl_stmt pos:start="127:13" pos:end="127:25"><decl pos:start="127:13" pos:end="127:24"><type pos:start="127:13" pos:end="127:15"><name pos:start="127:13" pos:end="127:15">int</name></type> <name pos:start="127:17" pos:end="127:24">duration</name></decl>;</decl_stmt>

            <expr_stmt pos:start="129:13" pos:end="129:35"><expr pos:start="129:13" pos:end="129:34"><name pos:start="129:13" pos:end="129:18">offset</name> <operator pos:start="129:20" pos:end="129:20">=</operator> <call pos:start="129:22" pos:end="129:34"><name pos:start="129:22" pos:end="129:30">avio_rl64</name><argument_list pos:start="129:31" pos:end="129:34">(<argument pos:start="129:32" pos:end="129:33"><expr pos:start="129:32" pos:end="129:33"><name pos:start="129:32" pos:end="129:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="131:13" pos:end="131:26"><expr pos:start="131:13" pos:end="131:25"><call pos:start="131:13" pos:end="131:25"><name pos:start="131:13" pos:end="131:21">avio_rl32</name><argument_list pos:start="131:22" pos:end="131:25">(<argument pos:start="131:23" pos:end="131:24"><expr pos:start="131:23" pos:end="131:24"><name pos:start="131:23" pos:end="131:24">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>       <comment type="block" pos:start="131:34" pos:end="131:43">/* size */</comment>

            <expr_stmt pos:start="133:13" pos:end="133:37"><expr pos:start="133:13" pos:end="133:36"><name pos:start="133:13" pos:end="133:20">duration</name> <operator pos:start="133:22" pos:end="133:22">=</operator> <call pos:start="133:24" pos:end="133:36"><name pos:start="133:24" pos:end="133:32">avio_rl32</name><argument_list pos:start="133:33" pos:end="133:36">(<argument pos:start="133:34" pos:end="133:35"><expr pos:start="133:34" pos:end="133:35"><name pos:start="133:34" pos:end="133:35">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="137:13" pos:end="139:26"><if pos:start="137:13" pos:end="139:26">if<condition pos:start="137:15" pos:end="137:31">(<expr pos:start="137:16" pos:end="137:30"><name pos:start="137:16" pos:end="137:30"><name pos:start="137:16" pos:end="137:17">pb</name><operator pos:start="137:18" pos:end="137:19">-&gt;</operator><name pos:start="137:20" pos:end="137:30">eof_reached</name></name></expr>)</condition><block type="pseudo" pos:start="139:17" pos:end="139:26"><block_content pos:start="139:17" pos:end="139:26">

                <return pos:start="139:17" pos:end="139:26">return <expr pos:start="139:24" pos:end="139:25"><operator pos:start="139:24" pos:end="139:24">-</operator><literal type="number" pos:start="139:25" pos:end="139:25">1</literal></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="143:13" pos:end="143:32"><expr pos:start="143:13" pos:end="143:31"><name pos:start="143:13" pos:end="143:15">pos</name> <operator pos:start="143:17" pos:end="143:17">=</operator> <call pos:start="143:19" pos:end="143:31"><name pos:start="143:19" pos:end="143:27">avio_tell</name><argument_list pos:start="143:28" pos:end="143:31">(<argument pos:start="143:29" pos:end="143:30"><expr pos:start="143:29" pos:end="143:30"><name pos:start="143:29" pos:end="143:30">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="147:13" pos:end="153:13"><if pos:start="147:13" pos:end="153:13">if<condition pos:start="147:15" pos:end="147:48">(<expr pos:start="147:16" pos:end="147:47"><name pos:start="147:16" pos:end="147:30"><name pos:start="147:16" pos:end="147:18">avi</name><operator pos:start="147:19" pos:end="147:20">-&gt;</operator><name pos:start="147:21" pos:end="147:30">odml_depth</name></name> <operator pos:start="147:32" pos:end="147:32">&gt;</operator> <name pos:start="147:34" pos:end="147:47">MAX_ODML_DEPTH</name></expr>)</condition><block pos:start="147:49" pos:end="153:13">{<block_content pos:start="149:17" pos:end="151:26">

                <expr_stmt pos:start="149:17" pos:end="149:76"><expr pos:start="149:17" pos:end="149:75"><call pos:start="149:17" pos:end="149:75"><name pos:start="149:17" pos:end="149:22">av_log</name><argument_list pos:start="149:23" pos:end="149:75">(<argument pos:start="149:24" pos:end="149:24"><expr pos:start="149:24" pos:end="149:24"><name pos:start="149:24" pos:end="149:24">s</name></expr></argument>, <argument pos:start="149:27" pos:end="149:38"><expr pos:start="149:27" pos:end="149:38"><name pos:start="149:27" pos:end="149:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="149:41" pos:end="149:74"><expr pos:start="149:41" pos:end="149:74"><literal type="string" pos:start="149:41" pos:end="149:74">"Too deeply nested ODML indexes\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="151:17" pos:end="151:26">return <expr pos:start="151:24" pos:end="151:25"><operator pos:start="151:24" pos:end="151:24">-</operator><literal type="number" pos:start="151:25" pos:end="151:25">1</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="157:13" pos:end="157:46"><expr pos:start="157:13" pos:end="157:45"><call pos:start="157:13" pos:end="157:45"><name pos:start="157:13" pos:end="157:21">avio_seek</name><argument_list pos:start="157:22" pos:end="157:45">(<argument pos:start="157:23" pos:end="157:24"><expr pos:start="157:23" pos:end="157:24"><name pos:start="157:23" pos:end="157:24">pb</name></expr></argument>, <argument pos:start="157:27" pos:end="157:34"><expr pos:start="157:27" pos:end="157:34"><name pos:start="157:27" pos:end="157:32">offset</name><operator pos:start="157:33" pos:end="157:33">+</operator><literal type="number" pos:start="157:34" pos:end="157:34">8</literal></expr></argument>, <argument pos:start="157:37" pos:end="157:44"><expr pos:start="157:37" pos:end="157:44"><name pos:start="157:37" pos:end="157:44">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:30"><expr pos:start="159:13" pos:end="159:29"><name pos:start="159:13" pos:end="159:27"><name pos:start="159:13" pos:end="159:15">avi</name><operator pos:start="159:16" pos:end="159:17">-&gt;</operator><name pos:start="159:18" pos:end="159:27">odml_depth</name></name><operator pos:start="159:28" pos:end="159:29">++</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:51"><expr pos:start="161:13" pos:end="161:50"><call pos:start="161:13" pos:end="161:50"><name pos:start="161:13" pos:end="161:36">read_braindead_odml_indx</name><argument_list pos:start="161:37" pos:end="161:50">(<argument pos:start="161:38" pos:end="161:38"><expr pos:start="161:38" pos:end="161:38"><name pos:start="161:38" pos:end="161:38">s</name></expr></argument>, <argument pos:start="161:41" pos:end="161:49"><expr pos:start="161:41" pos:end="161:49"><name pos:start="161:41" pos:end="161:49">frame_num</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:30"><expr pos:start="163:13" pos:end="163:29"><name pos:start="163:13" pos:end="163:27"><name pos:start="163:13" pos:end="163:15">avi</name><operator pos:start="163:16" pos:end="163:17">-&gt;</operator><name pos:start="163:18" pos:end="163:27">odml_depth</name></name><operator pos:start="163:28" pos:end="163:29">--</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:34"><expr pos:start="165:13" pos:end="165:33"><name pos:start="165:13" pos:end="165:21">frame_num</name> <operator pos:start="165:23" pos:end="165:24">+=</operator> <name pos:start="165:26" pos:end="165:33">duration</name></expr>;</expr_stmt>



            <expr_stmt pos:start="169:13" pos:end="169:41"><expr pos:start="169:13" pos:end="169:40"><call pos:start="169:13" pos:end="169:40"><name pos:start="169:13" pos:end="169:21">avio_seek</name><argument_list pos:start="169:22" pos:end="169:40">(<argument pos:start="169:23" pos:end="169:24"><expr pos:start="169:23" pos:end="169:24"><name pos:start="169:23" pos:end="169:24">pb</name></expr></argument>, <argument pos:start="169:27" pos:end="169:29"><expr pos:start="169:27" pos:end="169:29"><name pos:start="169:27" pos:end="169:29">pos</name></expr></argument>, <argument pos:start="169:32" pos:end="169:39"><expr pos:start="169:32" pos:end="169:39"><name pos:start="169:32" pos:end="169:39">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="175:5" pos:end="175:24"><expr pos:start="175:5" pos:end="175:23"><name pos:start="175:5" pos:end="175:21"><name pos:start="175:5" pos:end="175:7">avi</name><operator pos:start="175:8" pos:end="175:9">-&gt;</operator><name pos:start="175:10" pos:end="175:21">index_loaded</name></name><operator pos:start="175:22" pos:end="175:22">=</operator><literal type="number" pos:start="175:23" pos:end="175:23">1</literal></expr>;</expr_stmt>

    <return pos:start="177:5" pos:end="177:13">return <expr pos:start="177:12" pos:end="177:12"><literal type="number" pos:start="177:12" pos:end="177:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
