<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21266.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:8">qemu_irq</name></type> <name pos:start="1:10" pos:end="1:27">spapr_allocate_irq</name><parameter_list pos:start="1:28" pos:end="3:52">(<parameter pos:start="1:29" pos:end="1:41"><decl pos:start="1:29" pos:end="1:41"><type pos:start="1:29" pos:end="1:41"><name pos:start="1:29" pos:end="1:36">uint32_t</name></type> <name pos:start="1:38" pos:end="1:41">hint</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:60"><decl pos:start="1:44" pos:end="1:60"><type pos:start="1:44" pos:end="1:60"><name pos:start="1:44" pos:end="1:51">uint32_t</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:60">irq_num</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:51"><decl pos:start="3:29" pos:end="3:51"><type pos:start="3:29" pos:end="3:51"><name pos:start="3:29" pos:end="3:46"><name pos:start="3:29" pos:end="3:32">enum</name> <name pos:start="3:34" pos:end="3:46">xics_irq_type</name></name></type> <name pos:start="3:48" pos:end="3:51">type</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:16">

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">irq</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:18"><decl pos:start="9:5" pos:end="9:17"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">qemu_irq</name></type> <name pos:start="9:14" pos:end="9:17">qirq</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="23:5"><if pos:start="13:5" pos:end="19:5">if <condition pos:start="13:8" pos:end="13:13">(<expr pos:start="13:9" pos:end="13:12"><name pos:start="13:9" pos:end="13:12">hint</name></expr>)</condition> <block pos:start="13:15" pos:end="19:5">{<block_content pos:start="15:9" pos:end="15:19">

        <expr_stmt pos:start="15:9" pos:end="15:19"><expr pos:start="15:9" pos:end="15:18"><name pos:start="15:9" pos:end="15:11">irq</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <name pos:start="15:15" pos:end="15:18">hint</name></expr>;</expr_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:68">/* FIXME: we should probably check for collisions somehow */</comment>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="23:5">else <block pos:start="19:12" pos:end="23:5">{<block_content pos:start="21:9" pos:end="21:32">

        <expr_stmt pos:start="21:9" pos:end="21:32"><expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:11">irq</name> <operator pos:start="21:13" pos:end="21:13">=</operator> <name pos:start="21:15" pos:end="21:29"><name pos:start="21:15" pos:end="21:19">spapr</name><operator pos:start="21:20" pos:end="21:21">-&gt;</operator><name pos:start="21:22" pos:end="21:29">next_irq</name></name><operator pos:start="21:30" pos:end="21:31">++</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:50"><expr pos:start="27:5" pos:end="27:49"><name pos:start="27:5" pos:end="27:8">qirq</name> <operator pos:start="27:10" pos:end="27:10">=</operator> <call pos:start="27:12" pos:end="27:49"><name pos:start="27:12" pos:end="27:26">xics_assign_irq</name><argument_list pos:start="27:27" pos:end="27:49">(<argument pos:start="27:28" pos:end="27:37"><expr pos:start="27:28" pos:end="27:37"><name pos:start="27:28" pos:end="27:37"><name pos:start="27:28" pos:end="27:32">spapr</name><operator pos:start="27:33" pos:end="27:34">-&gt;</operator><name pos:start="27:35" pos:end="27:37">icp</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">irq</name></expr></argument>, <argument pos:start="27:45" pos:end="27:48"><expr pos:start="27:45" pos:end="27:48"><name pos:start="27:45" pos:end="27:48">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:14">(<expr pos:start="29:9" pos:end="29:13"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:13">qirq</name></expr>)</condition> <block pos:start="29:16" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:20">

        <return pos:start="31:9" pos:end="31:20">return <expr pos:start="31:16" pos:end="31:19"><name pos:start="31:16" pos:end="31:19">NULL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:16">(<expr pos:start="37:9" pos:end="37:15"><name pos:start="37:9" pos:end="37:15">irq_num</name></expr>)</condition> <block pos:start="37:18" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:23">

        <expr_stmt pos:start="39:9" pos:end="39:23"><expr pos:start="39:9" pos:end="39:22"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:16">irq_num</name> <operator pos:start="39:18" pos:end="39:18">=</operator> <name pos:start="39:20" pos:end="39:22">irq</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:16">return <expr pos:start="45:12" pos:end="45:15"><name pos:start="45:12" pos:end="45:15">qirq</name></expr>;</return>

</block_content>}</block></function>
</unit>
