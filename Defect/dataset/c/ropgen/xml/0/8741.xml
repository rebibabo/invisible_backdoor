<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/8741.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:36">ff_h264_check_intra4x4_pred_mode</name><parameter_list pos:start="1:37" pos:end="1:52">(<parameter pos:start="1:38" pos:end="1:51"><decl pos:start="1:38" pos:end="1:51"><type pos:start="1:38" pos:end="1:50"><name pos:start="1:38" pos:end="1:48">H264Context</name> <modifier pos:start="1:50" pos:end="1:50">*</modifier></type><name pos:start="1:51" pos:end="1:51">h</name></decl></parameter>)</parameter_list><block pos:start="1:53" pos:end="69:1">{<block_content pos:start="3:5" pos:end="67:13">

    <decl_stmt pos:start="3:5" pos:end="3:37"><decl pos:start="3:5" pos:end="3:36"><type pos:start="3:5" pos:end="3:26"><name pos:start="3:5" pos:end="3:18">MpegEncContext</name> <modifier pos:start="3:20" pos:end="3:20">*</modifier> <specifier pos:start="3:22" pos:end="3:26">const</specifier></type> <name pos:start="3:28" pos:end="3:28">s</name> <init pos:start="3:30" pos:end="3:36">= <expr pos:start="3:32" pos:end="3:36"><operator pos:start="3:32" pos:end="3:32">&amp;</operator><name pos:start="3:33" pos:end="3:36"><name pos:start="3:33" pos:end="3:33">h</name><operator pos:start="3:34" pos:end="3:35">-&gt;</operator><name pos:start="3:36" pos:end="3:36">s</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="5:5" pos:end="5:73"><decl pos:start="5:5" pos:end="5:72"><type pos:start="5:5" pos:end="5:23"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:23">int8_t</name></type> <name pos:start="5:25" pos:end="5:32"><name pos:start="5:25" pos:end="5:27">top</name> <index pos:start="5:29" pos:end="5:32">[<expr pos:start="5:30" pos:end="5:31"><literal type="number" pos:start="5:30" pos:end="5:31">12</literal></expr>]</index></name><init pos:start="5:33" pos:end="5:72">= <expr pos:start="5:35" pos:end="5:72"><block pos:start="5:35" pos:end="5:72">{<expr pos:start="5:36" pos:end="5:37"><operator pos:start="5:36" pos:end="5:36">-</operator><literal type="number" pos:start="5:37" pos:end="5:37">1</literal></expr>, <expr pos:start="5:40" pos:end="5:40"><literal type="number" pos:start="5:40" pos:end="5:40">0</literal></expr>,<expr pos:start="5:42" pos:end="5:53"><name pos:start="5:42" pos:end="5:53">LEFT_DC_PRED</name></expr>,<expr pos:start="5:55" pos:end="5:56"><operator pos:start="5:55" pos:end="5:55">-</operator><literal type="number" pos:start="5:56" pos:end="5:56">1</literal></expr>,<expr pos:start="5:58" pos:end="5:59"><operator pos:start="5:58" pos:end="5:58">-</operator><literal type="number" pos:start="5:59" pos:end="5:59">1</literal></expr>,<expr pos:start="5:61" pos:end="5:62"><operator pos:start="5:61" pos:end="5:61">-</operator><literal type="number" pos:start="5:62" pos:end="5:62">1</literal></expr>,<expr pos:start="5:64" pos:end="5:65"><operator pos:start="5:64" pos:end="5:64">-</operator><literal type="number" pos:start="5:65" pos:end="5:65">1</literal></expr>,<expr pos:start="5:67" pos:end="5:68"><operator pos:start="5:67" pos:end="5:67">-</operator><literal type="number" pos:start="5:68" pos:end="5:68">1</literal></expr>, <expr pos:start="5:71" pos:end="5:71"><literal type="number" pos:start="5:71" pos:end="5:71">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:85"><decl pos:start="7:5" pos:end="7:84"><type pos:start="7:5" pos:end="7:23"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:23">int8_t</name></type> <name pos:start="7:25" pos:end="7:32"><name pos:start="7:25" pos:end="7:28">left</name><index pos:start="7:29" pos:end="7:32">[<expr pos:start="7:30" pos:end="7:31"><literal type="number" pos:start="7:30" pos:end="7:31">12</literal></expr>]</index></name><init pos:start="7:33" pos:end="7:84">= <expr pos:start="7:35" pos:end="7:84"><block pos:start="7:35" pos:end="7:84">{ <expr pos:start="7:37" pos:end="7:37"><literal type="number" pos:start="7:37" pos:end="7:37">0</literal></expr>,<expr pos:start="7:39" pos:end="7:40"><operator pos:start="7:39" pos:end="7:39">-</operator><literal type="number" pos:start="7:40" pos:end="7:40">1</literal></expr>, <expr pos:start="7:43" pos:end="7:53"><name pos:start="7:43" pos:end="7:53">TOP_DC_PRED</name></expr>, <expr pos:start="7:56" pos:end="7:56"><literal type="number" pos:start="7:56" pos:end="7:56">0</literal></expr>,<expr pos:start="7:58" pos:end="7:59"><operator pos:start="7:58" pos:end="7:58">-</operator><literal type="number" pos:start="7:59" pos:end="7:59">1</literal></expr>,<expr pos:start="7:61" pos:end="7:62"><operator pos:start="7:61" pos:end="7:61">-</operator><literal type="number" pos:start="7:62" pos:end="7:62">1</literal></expr>,<expr pos:start="7:64" pos:end="7:65"><operator pos:start="7:64" pos:end="7:64">-</operator><literal type="number" pos:start="7:65" pos:end="7:65">1</literal></expr>, <expr pos:start="7:68" pos:end="7:68"><literal type="number" pos:start="7:68" pos:end="7:68">0</literal></expr>,<expr pos:start="7:70" pos:end="7:71"><operator pos:start="7:70" pos:end="7:70">-</operator><literal type="number" pos:start="7:71" pos:end="7:71">1</literal></expr>,<expr pos:start="7:73" pos:end="7:83"><name pos:start="7:73" pos:end="7:83">DC_128_PRED</name></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="33:5"><if pos:start="13:5" pos:end="33:5">if<condition pos:start="13:7" pos:end="13:42">(<expr pos:start="13:8" pos:end="13:41"><operator pos:start="13:8" pos:end="13:8">!</operator><operator pos:start="13:9" pos:end="13:9">(</operator><name pos:start="13:10" pos:end="13:33"><name pos:start="13:10" pos:end="13:10">h</name><operator pos:start="13:11" pos:end="13:12">-&gt;</operator><name pos:start="13:13" pos:end="13:33">top_samples_available</name></name><operator pos:start="13:34" pos:end="13:34">&amp;</operator><literal type="number" pos:start="13:35" pos:end="13:40">0x8000</literal><operator pos:start="13:41" pos:end="13:41">)</operator></expr>)</condition><block pos:start="13:43" pos:end="33:5">{<block_content pos:start="15:9" pos:end="31:9">

        <for pos:start="15:9" pos:end="31:9">for<control pos:start="15:12" pos:end="15:26">(<init pos:start="15:13" pos:end="15:16"><expr pos:start="15:13" pos:end="15:15"><name pos:start="15:13" pos:end="15:13">i</name><operator pos:start="15:14" pos:end="15:14">=</operator><literal type="number" pos:start="15:15" pos:end="15:15">0</literal></expr>;</init> <condition pos:start="15:18" pos:end="15:21"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:18">i</name><operator pos:start="15:19" pos:end="15:19">&lt;</operator><literal type="number" pos:start="15:20" pos:end="15:20">4</literal></expr>;</condition> <incr pos:start="15:23" pos:end="15:25"><expr pos:start="15:23" pos:end="15:25"><name pos:start="15:23" pos:end="15:23">i</name><operator pos:start="15:24" pos:end="15:25">++</operator></expr></incr>)</control><block pos:start="15:27" pos:end="31:9">{<block_content pos:start="17:13" pos:end="29:13">

            <decl_stmt pos:start="17:13" pos:end="17:73"><decl pos:start="17:13" pos:end="17:72"><type pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">int</name></type> <name pos:start="17:17" pos:end="17:22">status</name><init pos:start="17:23" pos:end="17:72">= <expr pos:start="17:25" pos:end="17:72"><name pos:start="17:25" pos:end="17:72"><name pos:start="17:25" pos:end="17:27">top</name><index pos:start="17:28" pos:end="17:72">[ <expr pos:start="17:30" pos:end="17:70"><name pos:start="17:30" pos:end="17:70"><name pos:start="17:30" pos:end="17:30">h</name><operator pos:start="17:31" pos:end="17:32">-&gt;</operator><name pos:start="17:33" pos:end="17:56">intra4x4_pred_mode_cache</name><index pos:start="17:57" pos:end="17:70">[<expr pos:start="17:58" pos:end="17:69"><name pos:start="17:58" pos:end="17:65"><name pos:start="17:58" pos:end="17:62">scan8</name><index pos:start="17:63" pos:end="17:65">[<expr pos:start="17:64" pos:end="17:64"><literal type="number" pos:start="17:64" pos:end="17:64">0</literal></expr>]</index></name> <operator pos:start="17:67" pos:end="17:67">+</operator> <name pos:start="17:69" pos:end="17:69">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="19:13" pos:end="29:13"><if pos:start="19:13" pos:end="25:13">if<condition pos:start="19:15" pos:end="19:24">(<expr pos:start="19:16" pos:end="19:23"><name pos:start="19:16" pos:end="19:21">status</name><operator pos:start="19:22" pos:end="19:22">&lt;</operator><literal type="number" pos:start="19:23" pos:end="19:23">0</literal></expr>)</condition><block pos:start="19:25" pos:end="25:13">{<block_content pos:start="21:17" pos:end="23:26">

                <expr_stmt pos:start="21:17" pos:end="21:142"><expr pos:start="21:17" pos:end="21:141"><call pos:start="21:17" pos:end="21:141"><name pos:start="21:17" pos:end="21:22">av_log</name><argument_list pos:start="21:23" pos:end="21:141">(<argument pos:start="21:24" pos:end="21:33"><expr pos:start="21:24" pos:end="21:33"><name pos:start="21:24" pos:end="21:33"><name pos:start="21:24" pos:end="21:24">h</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:27">s</name><operator pos:start="21:28" pos:end="21:28">.</operator><name pos:start="21:29" pos:end="21:33">avctx</name></name></expr></argument>, <argument pos:start="21:36" pos:end="21:47"><expr pos:start="21:36" pos:end="21:47"><name pos:start="21:36" pos:end="21:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="21:50" pos:end="21:114"><expr pos:start="21:50" pos:end="21:114"><literal type="string" pos:start="21:50" pos:end="21:114">"top block unavailable for requested intra4x4 mode %d at %d %d\n"</literal></expr></argument>, <argument pos:start="21:117" pos:end="21:122"><expr pos:start="21:117" pos:end="21:122"><name pos:start="21:117" pos:end="21:122">status</name></expr></argument>, <argument pos:start="21:125" pos:end="21:131"><expr pos:start="21:125" pos:end="21:131"><name pos:start="21:125" pos:end="21:131"><name pos:start="21:125" pos:end="21:125">s</name><operator pos:start="21:126" pos:end="21:127">-&gt;</operator><name pos:start="21:128" pos:end="21:131">mb_x</name></name></expr></argument>, <argument pos:start="21:134" pos:end="21:140"><expr pos:start="21:134" pos:end="21:140"><name pos:start="21:134" pos:end="21:140"><name pos:start="21:134" pos:end="21:134">s</name><operator pos:start="21:135" pos:end="21:136">-&gt;</operator><name pos:start="21:137" pos:end="21:140">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="23:17" pos:end="23:26">return <expr pos:start="23:24" pos:end="23:25"><operator pos:start="23:24" pos:end="23:24">-</operator><literal type="number" pos:start="23:25" pos:end="23:25">1</literal></expr>;</return>

            </block_content>}</block></if> <if type="elseif" pos:start="25:15" pos:end="29:13">else if<condition pos:start="25:22" pos:end="25:29">(<expr pos:start="25:23" pos:end="25:28"><name pos:start="25:23" pos:end="25:28">status</name></expr>)</condition><block pos:start="25:30" pos:end="29:13">{<block_content pos:start="27:17" pos:end="27:66">

                <expr_stmt pos:start="27:17" pos:end="27:66"><expr pos:start="27:17" pos:end="27:65"><name pos:start="27:17" pos:end="27:57"><name pos:start="27:17" pos:end="27:17">h</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:43">intra4x4_pred_mode_cache</name><index pos:start="27:44" pos:end="27:57">[<expr pos:start="27:45" pos:end="27:56"><name pos:start="27:45" pos:end="27:52"><name pos:start="27:45" pos:end="27:49">scan8</name><index pos:start="27:50" pos:end="27:52">[<expr pos:start="27:51" pos:end="27:51"><literal type="number" pos:start="27:51" pos:end="27:51">0</literal></expr>]</index></name> <operator pos:start="27:54" pos:end="27:54">+</operator> <name pos:start="27:56" pos:end="27:56">i</name></expr>]</index></name><operator pos:start="27:58" pos:end="27:58">=</operator> <name pos:start="27:60" pos:end="27:65">status</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="63:5"><if pos:start="37:5" pos:end="63:5">if<condition pos:start="37:7" pos:end="37:50">(<expr pos:start="37:8" pos:end="37:49"><operator pos:start="37:8" pos:end="37:8">(</operator><name pos:start="37:9" pos:end="37:33"><name pos:start="37:9" pos:end="37:9">h</name><operator pos:start="37:10" pos:end="37:11">-&gt;</operator><name pos:start="37:12" pos:end="37:33">left_samples_available</name></name><operator pos:start="37:34" pos:end="37:34">&amp;</operator><literal type="number" pos:start="37:35" pos:end="37:40">0x8888</literal><operator pos:start="37:41" pos:end="37:41">)</operator><operator pos:start="37:42" pos:end="37:43">!=</operator><literal type="number" pos:start="37:44" pos:end="37:49">0x8888</literal></expr>)</condition><block pos:start="37:51" pos:end="63:5">{<block_content pos:start="39:9" pos:end="61:9">

        <decl_stmt pos:start="39:9" pos:end="39:59"><decl pos:start="39:9" pos:end="39:58"><type pos:start="39:9" pos:end="39:24"><specifier pos:start="39:9" pos:end="39:14">static</specifier> <specifier pos:start="39:16" pos:end="39:20">const</specifier> <name pos:start="39:22" pos:end="39:24">int</name></type> <name pos:start="39:26" pos:end="39:32"><name pos:start="39:26" pos:end="39:29">mask</name><index pos:start="39:30" pos:end="39:32">[<expr pos:start="39:31" pos:end="39:31"><literal type="number" pos:start="39:31" pos:end="39:31">4</literal></expr>]</index></name><init pos:start="39:33" pos:end="39:58">=<expr pos:start="39:34" pos:end="39:58"><block pos:start="39:34" pos:end="39:58">{<expr pos:start="39:35" pos:end="39:40"><literal type="number" pos:start="39:35" pos:end="39:40">0x8000</literal></expr>,<expr pos:start="39:42" pos:end="39:47"><literal type="number" pos:start="39:42" pos:end="39:47">0x2000</literal></expr>,<expr pos:start="39:49" pos:end="39:52"><literal type="number" pos:start="39:49" pos:end="39:52">0x80</literal></expr>,<expr pos:start="39:54" pos:end="39:57"><literal type="number" pos:start="39:54" pos:end="39:57">0x20</literal></expr>}</block></expr></init></decl>;</decl_stmt>

        <for pos:start="41:9" pos:end="61:9">for<control pos:start="41:12" pos:end="41:26">(<init pos:start="41:13" pos:end="41:16"><expr pos:start="41:13" pos:end="41:15"><name pos:start="41:13" pos:end="41:13">i</name><operator pos:start="41:14" pos:end="41:14">=</operator><literal type="number" pos:start="41:15" pos:end="41:15">0</literal></expr>;</init> <condition pos:start="41:18" pos:end="41:21"><expr pos:start="41:18" pos:end="41:20"><name pos:start="41:18" pos:end="41:18">i</name><operator pos:start="41:19" pos:end="41:19">&lt;</operator><literal type="number" pos:start="41:20" pos:end="41:20">4</literal></expr>;</condition> <incr pos:start="41:23" pos:end="41:25"><expr pos:start="41:23" pos:end="41:25"><name pos:start="41:23" pos:end="41:23">i</name><operator pos:start="41:24" pos:end="41:25">++</operator></expr></incr>)</control><block pos:start="41:27" pos:end="61:9">{<block_content pos:start="43:13" pos:end="59:13">

            <if_stmt pos:start="43:13" pos:end="59:13"><if pos:start="43:13" pos:end="59:13">if<condition pos:start="43:15" pos:end="43:52">(<expr pos:start="43:16" pos:end="43:51"><operator pos:start="43:16" pos:end="43:16">!</operator><operator pos:start="43:17" pos:end="43:17">(</operator><name pos:start="43:18" pos:end="43:42"><name pos:start="43:18" pos:end="43:18">h</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:42">left_samples_available</name></name><operator pos:start="43:43" pos:end="43:43">&amp;</operator><name pos:start="43:44" pos:end="43:50"><name pos:start="43:44" pos:end="43:47">mask</name><index pos:start="43:48" pos:end="43:50">[<expr pos:start="43:49" pos:end="43:49"><name pos:start="43:49" pos:end="43:49">i</name></expr>]</index></name><operator pos:start="43:51" pos:end="43:51">)</operator></expr>)</condition><block pos:start="43:53" pos:end="59:13">{<block_content pos:start="45:17" pos:end="57:17">

                <decl_stmt pos:start="45:17" pos:end="45:80"><decl pos:start="45:17" pos:end="45:79"><type pos:start="45:17" pos:end="45:19"><name pos:start="45:17" pos:end="45:19">int</name></type> <name pos:start="45:21" pos:end="45:26">status</name><init pos:start="45:27" pos:end="45:79">= <expr pos:start="45:29" pos:end="45:79"><name pos:start="45:29" pos:end="45:79"><name pos:start="45:29" pos:end="45:32">left</name><index pos:start="45:33" pos:end="45:79">[ <expr pos:start="45:35" pos:end="45:77"><name pos:start="45:35" pos:end="45:77"><name pos:start="45:35" pos:end="45:35">h</name><operator pos:start="45:36" pos:end="45:37">-&gt;</operator><name pos:start="45:38" pos:end="45:61">intra4x4_pred_mode_cache</name><index pos:start="45:62" pos:end="45:77">[<expr pos:start="45:63" pos:end="45:76"><name pos:start="45:63" pos:end="45:70"><name pos:start="45:63" pos:end="45:67">scan8</name><index pos:start="45:68" pos:end="45:70">[<expr pos:start="45:69" pos:end="45:69"><literal type="number" pos:start="45:69" pos:end="45:69">0</literal></expr>]</index></name> <operator pos:start="45:72" pos:end="45:72">+</operator> <literal type="number" pos:start="45:74" pos:end="45:74">8</literal><operator pos:start="45:75" pos:end="45:75">*</operator><name pos:start="45:76" pos:end="45:76">i</name></expr>]</index></name></expr> ]</index></name></expr></init></decl>;</decl_stmt>

                <if_stmt pos:start="47:17" pos:end="57:17"><if pos:start="47:17" pos:end="53:17">if<condition pos:start="47:19" pos:end="47:28">(<expr pos:start="47:20" pos:end="47:27"><name pos:start="47:20" pos:end="47:25">status</name><operator pos:start="47:26" pos:end="47:26">&lt;</operator><literal type="number" pos:start="47:27" pos:end="47:27">0</literal></expr>)</condition><block pos:start="47:29" pos:end="53:17">{<block_content pos:start="49:21" pos:end="51:30">

                    <expr_stmt pos:start="49:21" pos:end="49:147"><expr pos:start="49:21" pos:end="49:146"><call pos:start="49:21" pos:end="49:146"><name pos:start="49:21" pos:end="49:26">av_log</name><argument_list pos:start="49:27" pos:end="49:146">(<argument pos:start="49:28" pos:end="49:37"><expr pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:37"><name pos:start="49:28" pos:end="49:28">h</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:31">s</name><operator pos:start="49:32" pos:end="49:32">.</operator><name pos:start="49:33" pos:end="49:37">avctx</name></name></expr></argument>, <argument pos:start="49:40" pos:end="49:51"><expr pos:start="49:40" pos:end="49:51"><name pos:start="49:40" pos:end="49:51">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="49:54" pos:end="49:119"><expr pos:start="49:54" pos:end="49:119"><literal type="string" pos:start="49:54" pos:end="49:119">"left block unavailable for requested intra4x4 mode %d at %d %d\n"</literal></expr></argument>, <argument pos:start="49:122" pos:end="49:127"><expr pos:start="49:122" pos:end="49:127"><name pos:start="49:122" pos:end="49:127">status</name></expr></argument>, <argument pos:start="49:130" pos:end="49:136"><expr pos:start="49:130" pos:end="49:136"><name pos:start="49:130" pos:end="49:136"><name pos:start="49:130" pos:end="49:130">s</name><operator pos:start="49:131" pos:end="49:132">-&gt;</operator><name pos:start="49:133" pos:end="49:136">mb_x</name></name></expr></argument>, <argument pos:start="49:139" pos:end="49:145"><expr pos:start="49:139" pos:end="49:145"><name pos:start="49:139" pos:end="49:145"><name pos:start="49:139" pos:end="49:139">s</name><operator pos:start="49:140" pos:end="49:141">-&gt;</operator><name pos:start="49:142" pos:end="49:145">mb_y</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <return pos:start="51:21" pos:end="51:30">return <expr pos:start="51:28" pos:end="51:29"><operator pos:start="51:28" pos:end="51:28">-</operator><literal type="number" pos:start="51:29" pos:end="51:29">1</literal></expr>;</return>

                </block_content>}</block></if> <if type="elseif" pos:start="53:19" pos:end="57:17">else if<condition pos:start="53:26" pos:end="53:33">(<expr pos:start="53:27" pos:end="53:32"><name pos:start="53:27" pos:end="53:32">status</name></expr>)</condition><block pos:start="53:34" pos:end="57:17">{<block_content pos:start="55:21" pos:end="55:72">

                    <expr_stmt pos:start="55:21" pos:end="55:72"><expr pos:start="55:21" pos:end="55:71"><name pos:start="55:21" pos:end="55:63"><name pos:start="55:21" pos:end="55:21">h</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:47">intra4x4_pred_mode_cache</name><index pos:start="55:48" pos:end="55:63">[<expr pos:start="55:49" pos:end="55:62"><name pos:start="55:49" pos:end="55:56"><name pos:start="55:49" pos:end="55:53">scan8</name><index pos:start="55:54" pos:end="55:56">[<expr pos:start="55:55" pos:end="55:55"><literal type="number" pos:start="55:55" pos:end="55:55">0</literal></expr>]</index></name> <operator pos:start="55:58" pos:end="55:58">+</operator> <literal type="number" pos:start="55:60" pos:end="55:60">8</literal><operator pos:start="55:61" pos:end="55:61">*</operator><name pos:start="55:62" pos:end="55:62">i</name></expr>]</index></name><operator pos:start="55:64" pos:end="55:64">=</operator> <name pos:start="55:66" pos:end="55:71">status</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <return pos:start="67:5" pos:end="67:13">return <expr pos:start="67:12" pos:end="67:12"><literal type="number" pos:start="67:12" pos:end="67:12">0</literal></expr>;</return>

</block_content>}</block></function> <comment type="line" pos:start="69:3" pos:end="69:52">//FIXME cleanup like ff_h264_check_intra_pred_mode</comment>
</unit>
