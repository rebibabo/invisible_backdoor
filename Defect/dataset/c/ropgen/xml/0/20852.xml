<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20852.c" pos:tabs="8"><function pos:start="1:1" pos:end="105:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">thp_read_packet</name><parameter_list pos:start="1:27" pos:end="3:42">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>,

                            <parameter pos:start="3:29" pos:end="3:41"><decl pos:start="3:29" pos:end="3:41"><type pos:start="3:29" pos:end="3:41"><name pos:start="3:29" pos:end="3:36">AVPacket</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:41">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="105:1">{<block_content pos:start="7:5" pos:end="103:13">

    <decl_stmt pos:start="7:5" pos:end="7:40"><decl pos:start="7:5" pos:end="7:39"><type pos:start="7:5" pos:end="7:21"><name pos:start="7:5" pos:end="7:19">ThpDemuxContext</name> <modifier pos:start="7:21" pos:end="7:21">*</modifier></type><name pos:start="7:22" pos:end="7:24">thp</name> <init pos:start="7:26" pos:end="7:39">= <expr pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:39"><name pos:start="7:28" pos:end="7:28">s</name><operator pos:start="7:29" pos:end="7:30">-&gt;</operator><name pos:start="7:31" pos:end="7:39">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">AVIOContext</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:19">pb</name> <init pos:start="9:21" pos:end="9:27">= <expr pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:27"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:27">pb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:16"><name pos:start="11:5" pos:end="11:12">unsigned</name> <name pos:start="11:14" pos:end="11:16">int</name></type> <name pos:start="11:18" pos:end="11:21">size</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="99:5"><if pos:start="17:5" pos:end="73:5">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:11">thp</name><operator pos:start="17:12" pos:end="17:13">-&gt;</operator><name pos:start="17:14" pos:end="17:22">audiosize</name></name> <operator pos:start="17:24" pos:end="17:25">==</operator> <literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>)</condition> <block pos:start="17:30" pos:end="73:5">{<block_content pos:start="21:9" pos:end="71:52">

        <comment type="block" pos:start="19:9" pos:end="19:52">/* Terminate when last frame is reached.  */</comment>

        <if_stmt pos:start="21:9" pos:end="23:31"><if pos:start="21:9" pos:end="23:31">if <condition pos:start="21:12" pos:end="21:40">(<expr pos:start="21:13" pos:end="21:39"><name pos:start="21:13" pos:end="21:22"><name pos:start="21:13" pos:end="21:15">thp</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:22">frame</name></name> <operator pos:start="21:24" pos:end="21:25">&gt;=</operator> <name pos:start="21:27" pos:end="21:39"><name pos:start="21:27" pos:end="21:29">thp</name><operator pos:start="21:30" pos:end="21:31">-&gt;</operator><name pos:start="21:32" pos:end="21:39">framecnt</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:31"><block_content pos:start="23:13" pos:end="23:31">

            <return pos:start="23:13" pos:end="23:31">return <expr pos:start="23:20" pos:end="23:30"><name pos:start="23:20" pos:end="23:30">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="27:9" pos:end="27:49"><expr pos:start="27:9" pos:end="27:48"><call pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:17">avio_seek</name><argument_list pos:start="27:18" pos:end="27:48">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">pb</name></expr></argument>, <argument pos:start="27:23" pos:end="27:37"><expr pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:37"><name pos:start="27:23" pos:end="27:25">thp</name><operator pos:start="27:26" pos:end="27:27">-&gt;</operator><name pos:start="27:28" pos:end="27:37">next_frame</name></name></expr></argument>, <argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:47">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="31:9" pos:end="31:59">/* Locate the next frame and read out its size.  */</comment>

        <expr_stmt pos:start="33:9" pos:end="33:45"><expr pos:start="33:9" pos:end="33:44"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:11">thp</name><operator pos:start="33:12" pos:end="33:13">-&gt;</operator><name pos:start="33:14" pos:end="33:23">next_frame</name></name> <operator pos:start="33:25" pos:end="33:26">+=</operator> <name pos:start="33:28" pos:end="33:44"><name pos:start="33:28" pos:end="33:30">thp</name><operator pos:start="33:31" pos:end="33:32">-&gt;</operator><name pos:start="33:33" pos:end="33:44">next_framesz</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:25"><name pos:start="35:9" pos:end="35:11">thp</name><operator pos:start="35:12" pos:end="35:13">-&gt;</operator><name pos:start="35:14" pos:end="35:25">next_framesz</name></name> <operator pos:start="35:27" pos:end="35:27">=</operator> <call pos:start="35:29" pos:end="35:41"><name pos:start="35:29" pos:end="35:37">avio_rb32</name><argument_list pos:start="35:38" pos:end="35:41">(<argument pos:start="35:39" pos:end="35:40"><expr pos:start="35:39" pos:end="35:40"><name pos:start="35:39" pos:end="35:40">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                        <expr_stmt pos:start="39:25" pos:end="39:38"><expr pos:start="39:25" pos:end="39:37"><call pos:start="39:25" pos:end="39:37"><name pos:start="39:25" pos:end="39:33">avio_rb32</name><argument_list pos:start="39:34" pos:end="39:37">(<argument pos:start="39:35" pos:end="39:36"><expr pos:start="39:35" pos:end="39:36"><name pos:start="39:35" pos:end="39:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="39:40" pos:end="39:66">/* Previous total size.  */</comment>

        <expr_stmt pos:start="41:9" pos:end="41:38"><expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:12">size</name>          <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:37"><name pos:start="41:25" pos:end="41:33">avio_rb32</name><argument_list pos:start="41:34" pos:end="41:37">(<argument pos:start="41:35" pos:end="41:36"><expr pos:start="41:35" pos:end="41:36"><name pos:start="41:35" pos:end="41:36">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="41:40" pos:end="41:71">/* Total size of this frame.  */</comment>



        <comment type="block" pos:start="45:9" pos:end="47:37">/* Store the audiosize so the next time this function is called,

           the audio can be read.  */</comment>

        <if_stmt pos:start="49:9" pos:end="55:25"><if pos:start="49:9" pos:end="51:43">if <condition pos:start="49:12" pos:end="49:27">(<expr pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:26"><name pos:start="49:13" pos:end="49:15">thp</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:26">has_audio</name></name></expr>)</condition><block type="pseudo" pos:start="51:13" pos:end="51:43"><block_content pos:start="51:13" pos:end="51:43">

            <expr_stmt pos:start="51:13" pos:end="51:43"><expr pos:start="51:13" pos:end="51:42"><name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:15">thp</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:26">audiosize</name></name> <operator pos:start="51:28" pos:end="51:28">=</operator> <call pos:start="51:30" pos:end="51:42"><name pos:start="51:30" pos:end="51:38">avio_rb32</name><argument_list pos:start="51:39" pos:end="51:42">(<argument pos:start="51:40" pos:end="51:41"><expr pos:start="51:40" pos:end="51:41"><name pos:start="51:40" pos:end="51:41">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if> <comment type="block" pos:start="51:45" pos:end="51:62">/* Audio size.  */</comment>

        <else pos:start="53:9" pos:end="55:25">else<block type="pseudo" pos:start="55:13" pos:end="55:25"><block_content pos:start="55:13" pos:end="55:25">

            <expr_stmt pos:start="55:13" pos:end="55:25"><expr pos:start="55:13" pos:end="55:24"><name pos:start="55:13" pos:end="55:22"><name pos:start="55:13" pos:end="55:15">thp</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:22">frame</name></name><operator pos:start="55:23" pos:end="55:24">++</operator></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="59:9" pos:end="59:43"><expr pos:start="59:9" pos:end="59:42"><name pos:start="59:9" pos:end="59:11">ret</name> <operator pos:start="59:13" pos:end="59:13">=</operator> <call pos:start="59:15" pos:end="59:42"><name pos:start="59:15" pos:end="59:27">av_get_packet</name><argument_list pos:start="59:28" pos:end="59:42">(<argument pos:start="59:29" pos:end="59:30"><expr pos:start="59:29" pos:end="59:30"><name pos:start="59:29" pos:end="59:30">pb</name></expr></argument>, <argument pos:start="59:33" pos:end="59:35"><expr pos:start="59:33" pos:end="59:35"><name pos:start="59:33" pos:end="59:35">pkt</name></expr></argument>, <argument pos:start="59:38" pos:end="59:41"><expr pos:start="59:38" pos:end="59:41"><name pos:start="59:38" pos:end="59:41">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="61:9" pos:end="67:9"><if pos:start="61:9" pos:end="67:9">if <condition pos:start="61:12" pos:end="61:24">(<expr pos:start="61:13" pos:end="61:23"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:18">!=</operator> <name pos:start="61:20" pos:end="61:23">size</name></expr>)</condition> <block pos:start="61:26" pos:end="67:9">{<block_content pos:start="63:13" pos:end="65:32">

            <expr_stmt pos:start="63:13" pos:end="63:32"><expr pos:start="63:13" pos:end="63:31"><call pos:start="63:13" pos:end="63:31"><name pos:start="63:13" pos:end="63:26">av_free_packet</name><argument_list pos:start="63:27" pos:end="63:31">(<argument pos:start="63:28" pos:end="63:30"><expr pos:start="63:28" pos:end="63:30"><name pos:start="63:28" pos:end="63:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="65:13" pos:end="65:32">return <expr pos:start="65:20" pos:end="65:31"><call pos:start="65:20" pos:end="65:31"><name pos:start="65:20" pos:end="65:26">AVERROR</name><argument_list pos:start="65:27" pos:end="65:31">(<argument pos:start="65:28" pos:end="65:30"><expr pos:start="65:28" pos:end="65:30"><name pos:start="65:28" pos:end="65:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="71:9" pos:end="71:52"><expr pos:start="71:9" pos:end="71:51"><name pos:start="71:9" pos:end="71:25"><name pos:start="71:9" pos:end="71:11">pkt</name><operator pos:start="71:12" pos:end="71:13">-&gt;</operator><name pos:start="71:14" pos:end="71:25">stream_index</name></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <name pos:start="71:29" pos:end="71:51"><name pos:start="71:29" pos:end="71:31">thp</name><operator pos:start="71:32" pos:end="71:33">-&gt;</operator><name pos:start="71:34" pos:end="71:51">video_stream_index</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="73:7" pos:end="99:5">else <block pos:start="73:12" pos:end="99:5">{<block_content pos:start="75:9" pos:end="97:21">

        <expr_stmt pos:start="75:9" pos:end="75:53"><expr pos:start="75:9" pos:end="75:52"><name pos:start="75:9" pos:end="75:11">ret</name> <operator pos:start="75:13" pos:end="75:13">=</operator> <call pos:start="75:15" pos:end="75:52"><name pos:start="75:15" pos:end="75:27">av_get_packet</name><argument_list pos:start="75:28" pos:end="75:52">(<argument pos:start="75:29" pos:end="75:30"><expr pos:start="75:29" pos:end="75:30"><name pos:start="75:29" pos:end="75:30">pb</name></expr></argument>, <argument pos:start="75:33" pos:end="75:35"><expr pos:start="75:33" pos:end="75:35"><name pos:start="75:33" pos:end="75:35">pkt</name></expr></argument>, <argument pos:start="75:38" pos:end="75:51"><expr pos:start="75:38" pos:end="75:51"><name pos:start="75:38" pos:end="75:51"><name pos:start="75:38" pos:end="75:40">thp</name><operator pos:start="75:41" pos:end="75:42">-&gt;</operator><name pos:start="75:43" pos:end="75:51">audiosize</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:34">(<expr pos:start="77:13" pos:end="77:33"><name pos:start="77:13" pos:end="77:15">ret</name> <operator pos:start="77:17" pos:end="77:18">!=</operator> <name pos:start="77:20" pos:end="77:33"><name pos:start="77:20" pos:end="77:22">thp</name><operator pos:start="77:23" pos:end="77:24">-&gt;</operator><name pos:start="77:25" pos:end="77:33">audiosize</name></name></expr>)</condition> <block pos:start="77:36" pos:end="83:9">{<block_content pos:start="79:13" pos:end="81:32">

            <expr_stmt pos:start="79:13" pos:end="79:32"><expr pos:start="79:13" pos:end="79:31"><call pos:start="79:13" pos:end="79:31"><name pos:start="79:13" pos:end="79:26">av_free_packet</name><argument_list pos:start="79:27" pos:end="79:31">(<argument pos:start="79:28" pos:end="79:30"><expr pos:start="79:28" pos:end="79:30"><name pos:start="79:28" pos:end="79:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="81:13" pos:end="81:32">return <expr pos:start="81:20" pos:end="81:31"><call pos:start="81:20" pos:end="81:31"><name pos:start="81:20" pos:end="81:26">AVERROR</name><argument_list pos:start="81:27" pos:end="81:31">(<argument pos:start="81:28" pos:end="81:30"><expr pos:start="81:28" pos:end="81:30"><name pos:start="81:28" pos:end="81:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:52"><expr pos:start="87:9" pos:end="87:51"><name pos:start="87:9" pos:end="87:25"><name pos:start="87:9" pos:end="87:11">pkt</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:25">stream_index</name></name> <operator pos:start="87:27" pos:end="87:27">=</operator> <name pos:start="87:29" pos:end="87:51"><name pos:start="87:29" pos:end="87:31">thp</name><operator pos:start="87:32" pos:end="87:33">-&gt;</operator><name pos:start="87:34" pos:end="87:51">audio_stream_index</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="89:9" pos:end="91:51"><if pos:start="89:9" pos:end="91:51">if <condition pos:start="89:12" pos:end="89:32">(<expr pos:start="89:13" pos:end="89:31"><name pos:start="89:13" pos:end="89:26"><name pos:start="89:13" pos:end="89:15">thp</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:26">audiosize</name></name> <operator pos:start="89:28" pos:end="89:29">&gt;=</operator> <literal type="number" pos:start="89:31" pos:end="89:31">8</literal></expr>)</condition><block type="pseudo" pos:start="91:13" pos:end="91:51"><block_content pos:start="91:13" pos:end="91:51">

            <expr_stmt pos:start="91:13" pos:end="91:51"><expr pos:start="91:13" pos:end="91:50"><name pos:start="91:13" pos:end="91:25"><name pos:start="91:13" pos:end="91:15">pkt</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:25">duration</name></name> <operator pos:start="91:27" pos:end="91:27">=</operator> <call pos:start="91:29" pos:end="91:50"><name pos:start="91:29" pos:end="91:35">AV_RB32</name><argument_list pos:start="91:36" pos:end="91:50">(<argument pos:start="91:37" pos:end="91:49"><expr pos:start="91:37" pos:end="91:49"><operator pos:start="91:37" pos:end="91:37">&amp;</operator><name pos:start="91:38" pos:end="91:49"><name pos:start="91:38" pos:end="91:40">pkt</name><operator pos:start="91:41" pos:end="91:42">-&gt;</operator><name pos:start="91:43" pos:end="91:46">data</name><index pos:start="91:47" pos:end="91:49">[<expr pos:start="91:48" pos:end="91:48"><literal type="number" pos:start="91:48" pos:end="91:48">4</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:22"><name pos:start="95:9" pos:end="95:11">thp</name><operator pos:start="95:12" pos:end="95:13">-&gt;</operator><name pos:start="95:14" pos:end="95:22">audiosize</name></name> <operator pos:start="95:24" pos:end="95:24">=</operator> <literal type="number" pos:start="95:26" pos:end="95:26">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="97:9" pos:end="97:21"><expr pos:start="97:9" pos:end="97:20"><name pos:start="97:9" pos:end="97:18"><name pos:start="97:9" pos:end="97:11">thp</name><operator pos:start="97:12" pos:end="97:13">-&gt;</operator><name pos:start="97:14" pos:end="97:18">frame</name></name><operator pos:start="97:19" pos:end="97:20">++</operator></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <return pos:start="103:5" pos:end="103:13">return <expr pos:start="103:12" pos:end="103:12"><literal type="number" pos:start="103:12" pos:end="103:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
