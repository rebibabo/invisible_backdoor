<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15107.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:18">av_noinline</name> <name pos:start="1:20" pos:end="1:23">void</name> <name pos:start="1:25" pos:end="1:28">FUNC</name></type>(<name pos:start="1:30" pos:end="1:45">hl_decode_mb_444</name>)<parameter_list pos:start="1:47" pos:end="1:62">(<parameter pos:start="1:48" pos:end="1:61"><decl pos:start="1:48" pos:end="1:61"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:58">H264Context</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">h</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:5">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:13"><specifier pos:start="5:5" pos:end="5:9">const</specifier> <name pos:start="5:11" pos:end="5:13">int</name></type> <name pos:start="5:15" pos:end="5:18">mb_x</name>    <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><name pos:start="5:25" pos:end="5:31"><name pos:start="5:25" pos:end="5:25">h</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:31">mb_x</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:31"><type pos:start="7:5" pos:end="7:13"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:13">int</name></type> <name pos:start="7:15" pos:end="7:18">mb_y</name>    <init pos:start="7:23" pos:end="7:31">= <expr pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:31"><name pos:start="7:25" pos:end="7:25">h</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:31">mb_y</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:13"><specifier pos:start="9:5" pos:end="9:9">const</specifier> <name pos:start="9:11" pos:end="9:13">int</name></type> <name pos:start="9:15" pos:end="9:19">mb_xy</name>   <init pos:start="9:23" pos:end="9:32">= <expr pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:32"><name pos:start="9:25" pos:end="9:25">h</name><operator pos:start="9:26" pos:end="9:27">-&gt;</operator><name pos:start="9:28" pos:end="9:32">mb_xy</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:52"><decl pos:start="11:5" pos:end="11:51"><type pos:start="11:5" pos:end="11:13"><specifier pos:start="11:5" pos:end="11:9">const</specifier> <name pos:start="11:11" pos:end="11:13">int</name></type> <name pos:start="11:15" pos:end="11:21">mb_type</name> <init pos:start="11:23" pos:end="11:51">= <expr pos:start="11:25" pos:end="11:51"><name pos:start="11:25" pos:end="11:51"><name pos:start="11:25" pos:end="11:25">h</name><operator pos:start="11:26" pos:end="11:27">-&gt;</operator><name pos:start="11:28" pos:end="11:34">cur_pic</name><operator pos:start="11:35" pos:end="11:35">.</operator><name pos:start="11:36" pos:end="11:36">f</name><operator pos:start="11:37" pos:end="11:37">.</operator><name pos:start="11:38" pos:end="11:44">mb_type</name><index pos:start="11:45" pos:end="11:51">[<expr pos:start="11:46" pos:end="11:50"><name pos:start="11:46" pos:end="11:50">mb_xy</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20"><name pos:start="13:14" pos:end="13:17">dest</name><index pos:start="13:18" pos:end="13:20">[<expr pos:start="13:19" pos:end="13:19"><literal type="number" pos:start="13:19" pos:end="13:19">3</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:16">linesize</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:16"><decl pos:start="17:5" pos:end="17:9"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:9">i</name></decl>, <decl pos:start="17:12" pos:end="17:12"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:12" pos:end="17:12">j</name></decl>, <decl pos:start="17:15" pos:end="17:15"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:15" pos:end="17:15">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:44"><decl pos:start="19:5" pos:end="19:43"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:7">int</name> <modifier pos:start="19:9" pos:end="19:9">*</modifier></type><name pos:start="19:10" pos:end="19:21">block_offset</name> <init pos:start="19:23" pos:end="19:43">= <expr pos:start="19:25" pos:end="19:43"><operator pos:start="19:25" pos:end="19:25">&amp;</operator><name pos:start="19:26" pos:end="19:43"><name pos:start="19:26" pos:end="19:26">h</name><operator pos:start="19:27" pos:end="19:28">-&gt;</operator><name pos:start="19:29" pos:end="19:40">block_offset</name><index pos:start="19:41" pos:end="19:43">[<expr pos:start="19:42" pos:end="19:42"><literal type="number" pos:start="19:42" pos:end="19:42">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:88"><decl pos:start="21:5" pos:end="21:87"><type pos:start="21:5" pos:end="21:13"><specifier pos:start="21:5" pos:end="21:9">const</specifier> <name pos:start="21:11" pos:end="21:13">int</name></type> <name pos:start="21:15" pos:end="21:30">transform_bypass</name> <init pos:start="21:32" pos:end="21:87">= <expr pos:start="21:34" pos:end="21:87"><operator pos:start="21:34" pos:end="21:34">!</operator><name pos:start="21:35" pos:end="21:40">SIMPLE</name> <operator pos:start="21:42" pos:end="21:43">&amp;&amp;</operator> <operator pos:start="21:45" pos:end="21:45">(</operator><name pos:start="21:46" pos:end="21:54"><name pos:start="21:46" pos:end="21:46">h</name><operator pos:start="21:47" pos:end="21:48">-&gt;</operator><name pos:start="21:49" pos:end="21:54">qscale</name></name> <operator pos:start="21:56" pos:end="21:57">==</operator> <literal type="number" pos:start="21:59" pos:end="21:59">0</literal> <operator pos:start="21:61" pos:end="21:62">&amp;&amp;</operator> <name pos:start="21:64" pos:end="21:86"><name pos:start="21:64" pos:end="21:64">h</name><operator pos:start="21:65" pos:end="21:66">-&gt;</operator><name pos:start="21:67" pos:end="21:69">sps</name><operator pos:start="21:70" pos:end="21:70">.</operator><name pos:start="21:71" pos:end="21:86">transform_bypass</name></name><operator pos:start="21:87" pos:end="21:87">)</operator></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:99"><decl pos:start="23:5" pos:end="23:98"><type pos:start="23:5" pos:end="23:13"><specifier pos:start="23:5" pos:end="23:9">const</specifier> <name pos:start="23:11" pos:end="23:13">int</name></type> <name pos:start="23:15" pos:end="23:25">plane_count</name>      <init pos:start="23:32" pos:end="23:98">= <expr pos:start="23:34" pos:end="23:98"><ternary pos:start="23:34" pos:end="23:98"><condition pos:start="23:34" pos:end="23:92"><expr pos:start="23:34" pos:end="23:90"><operator pos:start="23:34" pos:end="23:34">(</operator><name pos:start="23:35" pos:end="23:40">SIMPLE</name> <operator pos:start="23:42" pos:end="23:43">||</operator> <operator pos:start="23:45" pos:end="23:45">!</operator><name pos:start="23:46" pos:end="23:56">CONFIG_GRAY</name> <operator pos:start="23:58" pos:end="23:59">||</operator> <operator pos:start="23:61" pos:end="23:61">!</operator><operator pos:start="23:62" pos:end="23:62">(</operator><name pos:start="23:63" pos:end="23:70"><name pos:start="23:63" pos:end="23:63">h</name><operator pos:start="23:64" pos:end="23:65">-&gt;</operator><name pos:start="23:66" pos:end="23:70">flags</name></name> <operator pos:start="23:72" pos:end="23:72">&amp;</operator> <name pos:start="23:74" pos:end="23:88">CODEC_FLAG_GRAY</name><operator pos:start="23:89" pos:end="23:89">)</operator><operator pos:start="23:90" pos:end="23:90">)</operator></expr> ?</condition><then pos:start="23:94" pos:end="23:94"> <expr pos:start="23:94" pos:end="23:94"><literal type="number" pos:start="23:94" pos:end="23:94">3</literal></expr> </then><else pos:start="23:96" pos:end="23:98">: <expr pos:start="23:98" pos:end="23:98"><literal type="number" pos:start="23:98" pos:end="23:98">1</literal></expr></else></ternary></expr></init></decl>;</decl_stmt>



    <for pos:start="27:5" pos:end="37:5">for <control pos:start="27:9" pos:end="27:37">(<init pos:start="27:10" pos:end="27:15"><expr pos:start="27:10" pos:end="27:14"><name pos:start="27:10" pos:end="27:10">p</name> <operator pos:start="27:12" pos:end="27:12">=</operator> <literal type="number" pos:start="27:14" pos:end="27:14">0</literal></expr>;</init> <condition pos:start="27:17" pos:end="27:32"><expr pos:start="27:17" pos:end="27:31"><name pos:start="27:17" pos:end="27:17">p</name> <operator pos:start="27:19" pos:end="27:19">&lt;</operator> <name pos:start="27:21" pos:end="27:31">plane_count</name></expr>;</condition> <incr pos:start="27:34" pos:end="27:36"><expr pos:start="27:34" pos:end="27:36"><name pos:start="27:34" pos:end="27:34">p</name><operator pos:start="27:35" pos:end="27:36">++</operator></expr></incr>)</control> <block pos:start="27:39" pos:end="37:5">{<block_content pos:start="29:9" pos:end="35:41">

        <expr_stmt pos:start="29:9" pos:end="31:68"><expr pos:start="29:9" pos:end="31:67"><name pos:start="29:9" pos:end="29:15"><name pos:start="29:9" pos:end="29:12">dest</name><index pos:start="29:13" pos:end="29:15">[<expr pos:start="29:14" pos:end="29:14"><name pos:start="29:14" pos:end="29:14">p</name></expr>]</index></name> <operator pos:start="29:17" pos:end="29:17">=</operator> <name pos:start="29:19" pos:end="29:38"><name pos:start="29:19" pos:end="29:19">h</name><operator pos:start="29:20" pos:end="29:21">-&gt;</operator><name pos:start="29:22" pos:end="29:28">cur_pic</name><operator pos:start="29:29" pos:end="29:29">.</operator><name pos:start="29:30" pos:end="29:30">f</name><operator pos:start="29:31" pos:end="29:31">.</operator><name pos:start="29:32" pos:end="29:35">data</name><index pos:start="29:36" pos:end="29:38">[<expr pos:start="29:37" pos:end="29:37"><name pos:start="29:37" pos:end="29:37">p</name></expr>]</index></name> <operator pos:start="29:40" pos:end="29:40">+</operator>

                  <operator pos:start="31:19" pos:end="31:19">(</operator><operator pos:start="31:20" pos:end="31:20">(</operator><name pos:start="31:21" pos:end="31:24">mb_x</name> <operator pos:start="31:26" pos:end="31:27">&lt;&lt;</operator> <name pos:start="31:29" pos:end="31:39">PIXEL_SHIFT</name><operator pos:start="31:40" pos:end="31:40">)</operator> <operator pos:start="31:42" pos:end="31:42">+</operator> <name pos:start="31:44" pos:end="31:47">mb_y</name> <operator pos:start="31:49" pos:end="31:49">*</operator> <name pos:start="31:51" pos:end="31:61"><name pos:start="31:51" pos:end="31:51">h</name><operator pos:start="31:52" pos:end="31:53">-&gt;</operator><name pos:start="31:54" pos:end="31:61">linesize</name></name><operator pos:start="31:62" pos:end="31:62">)</operator> <operator pos:start="31:64" pos:end="31:64">*</operator> <literal type="number" pos:start="31:66" pos:end="31:67">16</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="35:41"><expr pos:start="33:9" pos:end="35:40"><call pos:start="33:9" pos:end="35:40"><name pos:start="33:9" pos:end="33:24"><name pos:start="33:9" pos:end="33:9">h</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:15">vdsp</name><operator pos:start="33:16" pos:end="33:16">.</operator><name pos:start="33:17" pos:end="33:24">prefetch</name></name><argument_list pos:start="33:25" pos:end="35:40">(<argument pos:start="33:26" pos:end="33:88"><expr pos:start="33:26" pos:end="33:88"><name pos:start="33:26" pos:end="33:32"><name pos:start="33:26" pos:end="33:29">dest</name><index pos:start="33:30" pos:end="33:32">[<expr pos:start="33:31" pos:end="33:31"><name pos:start="33:31" pos:end="33:31">p</name></expr>]</index></name> <operator pos:start="33:34" pos:end="33:34">+</operator> <operator pos:start="33:36" pos:end="33:36">(</operator><name pos:start="33:37" pos:end="33:43"><name pos:start="33:37" pos:end="33:37">h</name><operator pos:start="33:38" pos:end="33:39">-&gt;</operator><name pos:start="33:40" pos:end="33:43">mb_x</name></name> <operator pos:start="33:45" pos:end="33:45">&amp;</operator> <literal type="number" pos:start="33:47" pos:end="33:47">3</literal><operator pos:start="33:48" pos:end="33:48">)</operator> <operator pos:start="33:50" pos:end="33:50">*</operator> <literal type="number" pos:start="33:52" pos:end="33:52">4</literal> <operator pos:start="33:54" pos:end="33:54">*</operator> <name pos:start="33:56" pos:end="33:66"><name pos:start="33:56" pos:end="33:56">h</name><operator pos:start="33:57" pos:end="33:58">-&gt;</operator><name pos:start="33:59" pos:end="33:66">linesize</name></name> <operator pos:start="33:68" pos:end="33:68">+</operator> <operator pos:start="33:70" pos:end="33:70">(</operator><literal type="number" pos:start="33:71" pos:end="33:72">64</literal> <operator pos:start="33:74" pos:end="33:75">&lt;&lt;</operator> <name pos:start="33:77" pos:end="33:87">PIXEL_SHIFT</name><operator pos:start="33:88" pos:end="33:88">)</operator></expr></argument>,

                         <argument pos:start="35:26" pos:end="35:36"><expr pos:start="35:26" pos:end="35:36"><name pos:start="35:26" pos:end="35:36"><name pos:start="35:26" pos:end="35:26">h</name><operator pos:start="35:27" pos:end="35:28">-&gt;</operator><name pos:start="35:29" pos:end="35:36">linesize</name></name></expr></argument>, <argument pos:start="35:39" pos:end="35:39"><expr pos:start="35:39" pos:end="35:39"><literal type="number" pos:start="35:39" pos:end="35:39">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="41:5" pos:end="41:42"><expr pos:start="41:5" pos:end="41:41"><name pos:start="41:5" pos:end="41:25"><name pos:start="41:5" pos:end="41:5">h</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:18">list_counts</name><index pos:start="41:19" pos:end="41:25">[<expr pos:start="41:20" pos:end="41:24"><name pos:start="41:20" pos:end="41:24">mb_xy</name></expr>]</index></name> <operator pos:start="41:27" pos:end="41:27">=</operator> <name pos:start="41:29" pos:end="41:41"><name pos:start="41:29" pos:end="41:29">h</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:41">list_count</name></name></expr>;</expr_stmt>



    <if_stmt pos:start="45:5" pos:end="97:5"><if pos:start="45:5" pos:end="93:5">if <condition pos:start="45:8" pos:end="45:28">(<expr pos:start="45:9" pos:end="45:27"><operator pos:start="45:9" pos:end="45:9">!</operator><name pos:start="45:10" pos:end="45:15">SIMPLE</name> <operator pos:start="45:17" pos:end="45:18">&amp;&amp;</operator> <name pos:start="45:20" pos:end="45:27">MB_FIELD</name></expr>)</condition> <block pos:start="45:30" pos:end="93:5">{<block_content pos:start="47:9" pos:end="91:9">

        <expr_stmt pos:start="47:9" pos:end="47:75"><expr pos:start="47:9" pos:end="47:74"><name pos:start="47:9" pos:end="47:16">linesize</name>     <operator pos:start="47:22" pos:end="47:22">=</operator> <name pos:start="47:24" pos:end="47:37"><name pos:start="47:24" pos:end="47:24">h</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:37">mb_linesize</name></name> <operator pos:start="47:39" pos:end="47:39">=</operator> <name pos:start="47:41" pos:end="47:56"><name pos:start="47:41" pos:end="47:41">h</name><operator pos:start="47:42" pos:end="47:43">-&gt;</operator><name pos:start="47:44" pos:end="47:56">mb_uvlinesize</name></name> <operator pos:start="47:58" pos:end="47:58">=</operator> <name pos:start="47:60" pos:end="47:70"><name pos:start="47:60" pos:end="47:60">h</name><operator pos:start="47:61" pos:end="47:62">-&gt;</operator><name pos:start="47:63" pos:end="47:70">linesize</name></name> <operator pos:start="47:72" pos:end="47:72">*</operator> <literal type="number" pos:start="47:74" pos:end="47:74">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:44"><expr pos:start="49:9" pos:end="49:43"><name pos:start="49:9" pos:end="49:20">block_offset</name> <operator pos:start="49:22" pos:end="49:22">=</operator> <operator pos:start="49:24" pos:end="49:24">&amp;</operator><name pos:start="49:25" pos:end="49:43"><name pos:start="49:25" pos:end="49:25">h</name><operator pos:start="49:26" pos:end="49:27">-&gt;</operator><name pos:start="49:28" pos:end="49:39">block_offset</name><index pos:start="49:40" pos:end="49:43">[<expr pos:start="49:41" pos:end="49:42"><literal type="number" pos:start="49:41" pos:end="49:42">48</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="55:44"><if pos:start="51:9" pos:end="55:44">if <condition pos:start="51:12" pos:end="51:21">(<expr pos:start="51:13" pos:end="51:20"><name pos:start="51:13" pos:end="51:16">mb_y</name> <operator pos:start="51:18" pos:end="51:18">&amp;</operator> <literal type="number" pos:start="51:20" pos:end="51:20">1</literal></expr>)</condition><block type="pseudo" pos:start="53:13" pos:end="55:44"><block_content pos:start="53:13" pos:end="55:44"> <comment type="line" pos:start="51:23" pos:end="51:57">// FIXME move out of this function?</comment>

            <for pos:start="53:13" pos:end="55:44">for <control pos:start="53:17" pos:end="53:35">(<init pos:start="53:18" pos:end="53:23"><expr pos:start="53:18" pos:end="53:22"><name pos:start="53:18" pos:end="53:18">p</name> <operator pos:start="53:20" pos:end="53:20">=</operator> <literal type="number" pos:start="53:22" pos:end="53:22">0</literal></expr>;</init> <condition pos:start="53:25" pos:end="53:30"><expr pos:start="53:25" pos:end="53:29"><name pos:start="53:25" pos:end="53:25">p</name> <operator pos:start="53:27" pos:end="53:27">&lt;</operator> <literal type="number" pos:start="53:29" pos:end="53:29">3</literal></expr>;</condition> <incr pos:start="53:32" pos:end="53:34"><expr pos:start="53:32" pos:end="53:34"><name pos:start="53:32" pos:end="53:32">p</name><operator pos:start="53:33" pos:end="53:34">++</operator></expr></incr>)</control><block type="pseudo" pos:start="55:17" pos:end="55:44"><block_content pos:start="55:17" pos:end="55:44">

                <expr_stmt pos:start="55:17" pos:end="55:44"><expr pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:23"><name pos:start="55:17" pos:end="55:20">dest</name><index pos:start="55:21" pos:end="55:23">[<expr pos:start="55:22" pos:end="55:22"><name pos:start="55:22" pos:end="55:22">p</name></expr>]</index></name> <operator pos:start="55:25" pos:end="55:26">-=</operator> <name pos:start="55:28" pos:end="55:38"><name pos:start="55:28" pos:end="55:28">h</name><operator pos:start="55:29" pos:end="55:30">-&gt;</operator><name pos:start="55:31" pos:end="55:38">linesize</name></name> <operator pos:start="55:40" pos:end="55:40">*</operator> <literal type="number" pos:start="55:42" pos:end="55:43">15</literal></expr>;</expr_stmt></block_content></block></for></block_content></block></if></if_stmt>

        <if_stmt pos:start="57:9" pos:end="91:9"><if pos:start="57:9" pos:end="91:9">if <condition pos:start="57:12" pos:end="57:24">(<expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:23">FRAME_MBAFF</name></expr>)</condition> <block pos:start="57:26" pos:end="91:9">{<block_content pos:start="59:13" pos:end="89:13">

            <decl_stmt pos:start="59:13" pos:end="59:21"><decl pos:start="59:13" pos:end="59:20"><type pos:start="59:13" pos:end="59:15"><name pos:start="59:13" pos:end="59:15">int</name></type> <name pos:start="59:17" pos:end="59:20">list</name></decl>;</decl_stmt>

            <for pos:start="61:13" pos:end="89:13">for <control pos:start="61:17" pos:end="61:56">(<init pos:start="61:18" pos:end="61:26"><expr pos:start="61:18" pos:end="61:25"><name pos:start="61:18" pos:end="61:21">list</name> <operator pos:start="61:23" pos:end="61:23">=</operator> <literal type="number" pos:start="61:25" pos:end="61:25">0</literal></expr>;</init> <condition pos:start="61:28" pos:end="61:48"><expr pos:start="61:28" pos:end="61:47"><name pos:start="61:28" pos:end="61:31">list</name> <operator pos:start="61:33" pos:end="61:33">&lt;</operator> <name pos:start="61:35" pos:end="61:47"><name pos:start="61:35" pos:end="61:35">h</name><operator pos:start="61:36" pos:end="61:37">-&gt;</operator><name pos:start="61:38" pos:end="61:47">list_count</name></name></expr>;</condition> <incr pos:start="61:50" pos:end="61:55"><expr pos:start="61:50" pos:end="61:55"><name pos:start="61:50" pos:end="61:53">list</name><operator pos:start="61:54" pos:end="61:55">++</operator></expr></incr>)</control> <block pos:start="61:58" pos:end="89:13">{<block_content pos:start="63:17" pos:end="87:17">

                <if_stmt pos:start="63:17" pos:end="65:29"><if pos:start="63:17" pos:end="65:29">if <condition pos:start="63:20" pos:end="63:46">(<expr pos:start="63:21" pos:end="63:45"><operator pos:start="63:21" pos:end="63:21">!</operator><call pos:start="63:22" pos:end="63:45"><name pos:start="63:22" pos:end="63:30">USES_LIST</name><argument_list pos:start="63:31" pos:end="63:45">(<argument pos:start="63:32" pos:end="63:38"><expr pos:start="63:32" pos:end="63:38"><name pos:start="63:32" pos:end="63:38">mb_type</name></expr></argument>, <argument pos:start="63:41" pos:end="63:44"><expr pos:start="63:41" pos:end="63:44"><name pos:start="63:41" pos:end="63:44">list</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="65:21" pos:end="65:29"><block_content pos:start="65:21" pos:end="65:29">

                    <continue pos:start="65:21" pos:end="65:29">continue;</continue></block_content></block></if></if_stmt>

                <if_stmt pos:start="67:17" pos:end="87:17"><if pos:start="67:17" pos:end="73:17">if <condition pos:start="67:20" pos:end="67:38">(<expr pos:start="67:21" pos:end="67:37"><call pos:start="67:21" pos:end="67:37"><name pos:start="67:21" pos:end="67:28">IS_16X16</name><argument_list pos:start="67:29" pos:end="67:37">(<argument pos:start="67:30" pos:end="67:36"><expr pos:start="67:30" pos:end="67:36"><name pos:start="67:30" pos:end="67:36">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="67:40" pos:end="73:17">{<block_content pos:start="69:21" pos:end="71:81">

                    <decl_stmt pos:start="69:21" pos:end="69:64"><decl pos:start="69:21" pos:end="69:63"><type pos:start="69:21" pos:end="69:28"><name pos:start="69:21" pos:end="69:26">int8_t</name> <modifier pos:start="69:28" pos:end="69:28">*</modifier></type><name pos:start="69:29" pos:end="69:31">ref</name> <init pos:start="69:33" pos:end="69:63">= <expr pos:start="69:35" pos:end="69:63"><operator pos:start="69:35" pos:end="69:35">&amp;</operator><name pos:start="69:36" pos:end="69:63"><name pos:start="69:36" pos:end="69:36">h</name><operator pos:start="69:37" pos:end="69:38">-&gt;</operator><name pos:start="69:39" pos:end="69:47">ref_cache</name><index pos:start="69:48" pos:end="69:53">[<expr pos:start="69:49" pos:end="69:52"><name pos:start="69:49" pos:end="69:52">list</name></expr>]</index><index pos:start="69:54" pos:end="69:63">[<expr pos:start="69:55" pos:end="69:62"><name pos:start="69:55" pos:end="69:62"><name pos:start="69:55" pos:end="69:59">scan8</name><index pos:start="69:60" pos:end="69:62">[<expr pos:start="69:61" pos:end="69:61"><literal type="number" pos:start="69:61" pos:end="69:61">0</literal></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                    <expr_stmt pos:start="71:21" pos:end="71:81"><expr pos:start="71:21" pos:end="71:80"><call pos:start="71:21" pos:end="71:80"><name pos:start="71:21" pos:end="71:34">fill_rectangle</name><argument_list pos:start="71:35" pos:end="71:80">(<argument pos:start="71:36" pos:end="71:38"><expr pos:start="71:36" pos:end="71:38"><name pos:start="71:36" pos:end="71:38">ref</name></expr></argument>, <argument pos:start="71:41" pos:end="71:41"><expr pos:start="71:41" pos:end="71:41"><literal type="number" pos:start="71:41" pos:end="71:41">4</literal></expr></argument>, <argument pos:start="71:44" pos:end="71:44"><expr pos:start="71:44" pos:end="71:44"><literal type="number" pos:start="71:44" pos:end="71:44">4</literal></expr></argument>, <argument pos:start="71:47" pos:end="71:47"><expr pos:start="71:47" pos:end="71:47"><literal type="number" pos:start="71:47" pos:end="71:47">8</literal></expr></argument>, <argument pos:start="71:50" pos:end="71:76"><expr pos:start="71:50" pos:end="71:76"><operator pos:start="71:50" pos:end="71:50">(</operator><literal type="number" pos:start="71:51" pos:end="71:54">16</literal> <operator pos:start="71:54" pos:end="71:54">+</operator> <operator pos:start="71:56" pos:end="71:56">*</operator><name pos:start="71:57" pos:end="71:59">ref</name><operator pos:start="71:60" pos:end="71:60">)</operator> <operator pos:start="71:62" pos:end="71:62">^</operator> <operator pos:start="71:64" pos:end="71:64">(</operator><name pos:start="71:65" pos:end="71:71"><name pos:start="71:65" pos:end="71:65">h</name><operator pos:start="71:66" pos:end="71:67">-&gt;</operator><name pos:start="71:68" pos:end="71:71">mb_y</name></name> <operator pos:start="71:73" pos:end="71:73">&amp;</operator> <literal type="number" pos:start="71:75" pos:end="71:75">1</literal><operator pos:start="71:76" pos:end="71:76">)</operator></expr></argument>, <argument pos:start="71:79" pos:end="71:79"><expr pos:start="71:79" pos:end="71:79"><literal type="number" pos:start="71:79" pos:end="71:79">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="73:19" pos:end="87:17">else <block pos:start="73:24" pos:end="87:17">{<block_content pos:start="75:21" pos:end="85:21">

                    <for pos:start="75:21" pos:end="85:21">for <control pos:start="75:25" pos:end="75:47">(<init pos:start="75:26" pos:end="75:31"><expr pos:start="75:26" pos:end="75:30"><name pos:start="75:26" pos:end="75:26">i</name> <operator pos:start="75:28" pos:end="75:28">=</operator> <literal type="number" pos:start="75:30" pos:end="75:30">0</literal></expr>;</init> <condition pos:start="75:33" pos:end="75:39"><expr pos:start="75:33" pos:end="75:38"><name pos:start="75:33" pos:end="75:33">i</name> <operator pos:start="75:35" pos:end="75:35">&lt;</operator> <literal type="number" pos:start="75:37" pos:end="75:38">16</literal></expr>;</condition> <incr pos:start="75:41" pos:end="75:46"><expr pos:start="75:41" pos:end="75:46"><name pos:start="75:41" pos:end="75:41">i</name> <operator pos:start="75:43" pos:end="75:44">+=</operator> <literal type="number" pos:start="75:46" pos:end="75:46">4</literal></expr></incr>)</control> <block pos:start="75:49" pos:end="85:21">{<block_content pos:start="77:25" pos:end="83:77">

                        <decl_stmt pos:start="77:25" pos:end="77:63"><decl pos:start="77:25" pos:end="77:62"><type pos:start="77:25" pos:end="77:27"><name pos:start="77:25" pos:end="77:27">int</name></type> <name pos:start="77:29" pos:end="77:31">ref</name> <init pos:start="77:33" pos:end="77:62">= <expr pos:start="77:35" pos:end="77:62"><name pos:start="77:35" pos:end="77:62"><name pos:start="77:35" pos:end="77:35">h</name><operator pos:start="77:36" pos:end="77:37">-&gt;</operator><name pos:start="77:38" pos:end="77:46">ref_cache</name><index pos:start="77:47" pos:end="77:52">[<expr pos:start="77:48" pos:end="77:51"><name pos:start="77:48" pos:end="77:51">list</name></expr>]</index><index pos:start="77:53" pos:end="77:62">[<expr pos:start="77:54" pos:end="77:61"><name pos:start="77:54" pos:end="77:61"><name pos:start="77:54" pos:end="77:58">scan8</name><index pos:start="77:59" pos:end="77:61">[<expr pos:start="77:60" pos:end="77:60"><name pos:start="77:60" pos:end="77:60">i</name></expr>]</index></name></expr>]</index></name></expr></init></decl>;</decl_stmt>

                        <if_stmt pos:start="79:25" pos:end="83:77"><if pos:start="79:25" pos:end="83:77">if <condition pos:start="79:28" pos:end="79:37">(<expr pos:start="79:29" pos:end="79:36"><name pos:start="79:29" pos:end="79:31">ref</name> <operator pos:start="79:33" pos:end="79:34">&gt;=</operator> <literal type="number" pos:start="79:36" pos:end="79:36">0</literal></expr>)</condition><block type="pseudo" pos:start="81:29" pos:end="83:77"><block_content pos:start="81:29" pos:end="83:77">

                            <expr_stmt pos:start="81:29" pos:end="83:77"><expr pos:start="81:29" pos:end="83:76"><call pos:start="81:29" pos:end="83:76"><name pos:start="81:29" pos:end="81:42">fill_rectangle</name><argument_list pos:start="81:43" pos:end="83:76">(<argument pos:start="81:44" pos:end="81:72"><expr pos:start="81:44" pos:end="81:72"><operator pos:start="81:44" pos:end="81:44">&amp;</operator><name pos:start="81:45" pos:end="81:72"><name pos:start="81:45" pos:end="81:45">h</name><operator pos:start="81:46" pos:end="81:47">-&gt;</operator><name pos:start="81:48" pos:end="81:56">ref_cache</name><index pos:start="81:57" pos:end="81:62">[<expr pos:start="81:58" pos:end="81:61"><name pos:start="81:58" pos:end="81:61">list</name></expr>]</index><index pos:start="81:63" pos:end="81:72">[<expr pos:start="81:64" pos:end="81:71"><name pos:start="81:64" pos:end="81:71"><name pos:start="81:64" pos:end="81:68">scan8</name><index pos:start="81:69" pos:end="81:71">[<expr pos:start="81:70" pos:end="81:70"><name pos:start="81:70" pos:end="81:70">i</name></expr>]</index></name></expr>]</index></name></expr></argument>, <argument pos:start="81:75" pos:end="81:75"><expr pos:start="81:75" pos:end="81:75"><literal type="number" pos:start="81:75" pos:end="81:75">2</literal></expr></argument>, <argument pos:start="81:78" pos:end="81:78"><expr pos:start="81:78" pos:end="81:78"><literal type="number" pos:start="81:78" pos:end="81:78">2</literal></expr></argument>,

                                           <argument pos:start="83:44" pos:end="83:44"><expr pos:start="83:44" pos:end="83:44"><literal type="number" pos:start="83:44" pos:end="83:44">8</literal></expr></argument>, <argument pos:start="83:47" pos:end="83:72"><expr pos:start="83:47" pos:end="83:72"><operator pos:start="83:47" pos:end="83:47">(</operator><literal type="number" pos:start="83:48" pos:end="83:51">16</literal> <operator pos:start="83:51" pos:end="83:51">+</operator> <name pos:start="83:53" pos:end="83:55">ref</name><operator pos:start="83:56" pos:end="83:56">)</operator> <operator pos:start="83:58" pos:end="83:58">^</operator> <operator pos:start="83:60" pos:end="83:60">(</operator><name pos:start="83:61" pos:end="83:67"><name pos:start="83:61" pos:end="83:61">h</name><operator pos:start="83:62" pos:end="83:63">-&gt;</operator><name pos:start="83:64" pos:end="83:67">mb_y</name></name> <operator pos:start="83:69" pos:end="83:69">&amp;</operator> <literal type="number" pos:start="83:71" pos:end="83:71">1</literal><operator pos:start="83:72" pos:end="83:72">)</operator></expr></argument>, <argument pos:start="83:75" pos:end="83:75"><expr pos:start="83:75" pos:end="83:75"><literal type="number" pos:start="83:75" pos:end="83:75">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    </block_content>}</block></for>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="93:7" pos:end="97:5">else <block pos:start="93:12" pos:end="97:5">{<block_content pos:start="95:9" pos:end="95:67">

        <expr_stmt pos:start="95:9" pos:end="95:67"><expr pos:start="95:9" pos:end="95:66"><name pos:start="95:9" pos:end="95:16">linesize</name> <operator pos:start="95:18" pos:end="95:18">=</operator> <name pos:start="95:20" pos:end="95:33"><name pos:start="95:20" pos:end="95:20">h</name><operator pos:start="95:21" pos:end="95:22">-&gt;</operator><name pos:start="95:23" pos:end="95:33">mb_linesize</name></name> <operator pos:start="95:35" pos:end="95:35">=</operator> <name pos:start="95:37" pos:end="95:52"><name pos:start="95:37" pos:end="95:37">h</name><operator pos:start="95:38" pos:end="95:39">-&gt;</operator><name pos:start="95:40" pos:end="95:52">mb_uvlinesize</name></name> <operator pos:start="95:54" pos:end="95:54">=</operator> <name pos:start="95:56" pos:end="95:66"><name pos:start="95:56" pos:end="95:56">h</name><operator pos:start="95:57" pos:end="95:58">-&gt;</operator><name pos:start="95:59" pos:end="95:66">linesize</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="101:5" pos:end="199:5"><if pos:start="101:5" pos:end="137:5">if <condition pos:start="101:8" pos:end="101:41">(<expr pos:start="101:9" pos:end="101:40"><operator pos:start="101:9" pos:end="101:9">!</operator><name pos:start="101:10" pos:end="101:15">SIMPLE</name> <operator pos:start="101:17" pos:end="101:18">&amp;&amp;</operator> <call pos:start="101:20" pos:end="101:40"><name pos:start="101:20" pos:end="101:31">IS_INTRA_PCM</name><argument_list pos:start="101:32" pos:end="101:40">(<argument pos:start="101:33" pos:end="101:39"><expr pos:start="101:33" pos:end="101:39"><name pos:start="101:33" pos:end="101:39">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="101:43" pos:end="137:5">{<block_content pos:start="103:9" pos:end="135:9">

        <if_stmt pos:start="103:9" pos:end="135:9"><if pos:start="103:9" pos:end="125:9">if <condition pos:start="103:12" pos:end="103:24">(<expr pos:start="103:13" pos:end="103:23"><name pos:start="103:13" pos:end="103:23">PIXEL_SHIFT</name></expr>)</condition> <block pos:start="103:26" pos:end="125:9">{<block_content pos:start="105:13" pos:end="123:17">

            <decl_stmt pos:start="105:13" pos:end="105:56"><decl pos:start="105:13" pos:end="105:55"><type pos:start="105:13" pos:end="105:21"><specifier pos:start="105:13" pos:end="105:17">const</specifier> <name pos:start="105:19" pos:end="105:21">int</name></type> <name pos:start="105:23" pos:end="105:31">bit_depth</name> <init pos:start="105:33" pos:end="105:55">= <expr pos:start="105:35" pos:end="105:55"><name pos:start="105:35" pos:end="105:55"><name pos:start="105:35" pos:end="105:35">h</name><operator pos:start="105:36" pos:end="105:37">-&gt;</operator><name pos:start="105:38" pos:end="105:40">sps</name><operator pos:start="105:41" pos:end="105:41">.</operator><name pos:start="105:42" pos:end="105:55">bit_depth_luma</name></name></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="107:13" pos:end="107:29"><decl pos:start="107:13" pos:end="107:28"><type pos:start="107:13" pos:end="107:25"><name pos:start="107:13" pos:end="107:25">GetBitContext</name></type> <name pos:start="107:27" pos:end="107:28">gb</name></decl>;</decl_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:77"><expr pos:start="109:13" pos:end="109:76"><call pos:start="109:13" pos:end="109:76"><name pos:start="109:13" pos:end="109:25">init_get_bits</name><argument_list pos:start="109:26" pos:end="109:76">(<argument pos:start="109:27" pos:end="109:29"><expr pos:start="109:27" pos:end="109:29"><operator pos:start="109:27" pos:end="109:27">&amp;</operator><name pos:start="109:28" pos:end="109:29">gb</name></expr></argument>, <argument pos:start="109:32" pos:end="109:58"><expr pos:start="109:32" pos:end="109:58"><operator pos:start="109:32" pos:end="109:32">(</operator><name pos:start="109:33" pos:end="109:39">uint8_t</name> <operator pos:start="109:41" pos:end="109:41">*</operator><operator pos:start="109:42" pos:end="109:42">)</operator><name pos:start="109:43" pos:end="109:58"><name pos:start="109:43" pos:end="109:43">h</name><operator pos:start="109:44" pos:end="109:45">-&gt;</operator><name pos:start="109:46" pos:end="109:58">intra_pcm_ptr</name></name></expr></argument>, <argument pos:start="109:61" pos:end="109:75"><expr pos:start="109:61" pos:end="109:75"><literal type="number" pos:start="109:61" pos:end="109:63">768</literal> <operator pos:start="109:65" pos:end="109:65">*</operator> <name pos:start="109:67" pos:end="109:75">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <for pos:start="113:13" pos:end="123:17">for <control pos:start="113:17" pos:end="113:45">(<init pos:start="113:18" pos:end="113:23"><expr pos:start="113:18" pos:end="113:22"><name pos:start="113:18" pos:end="113:18">p</name> <operator pos:start="113:20" pos:end="113:20">=</operator> <literal type="number" pos:start="113:22" pos:end="113:22">0</literal></expr>;</init> <condition pos:start="113:25" pos:end="113:40"><expr pos:start="113:25" pos:end="113:39"><name pos:start="113:25" pos:end="113:25">p</name> <operator pos:start="113:27" pos:end="113:27">&lt;</operator> <name pos:start="113:29" pos:end="113:39">plane_count</name></expr>;</condition> <incr pos:start="113:42" pos:end="113:44"><expr pos:start="113:42" pos:end="113:44"><name pos:start="113:42" pos:end="113:42">p</name><operator pos:start="113:43" pos:end="113:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="115:17" pos:end="123:17"><block_content pos:start="115:17" pos:end="123:17">

                <for pos:start="115:17" pos:end="123:17">for <control pos:start="115:21" pos:end="115:40">(<init pos:start="115:22" pos:end="115:27"><expr pos:start="115:22" pos:end="115:26"><name pos:start="115:22" pos:end="115:22">i</name> <operator pos:start="115:24" pos:end="115:24">=</operator> <literal type="number" pos:start="115:26" pos:end="115:26">0</literal></expr>;</init> <condition pos:start="115:29" pos:end="115:35"><expr pos:start="115:29" pos:end="115:34"><name pos:start="115:29" pos:end="115:29">i</name> <operator pos:start="115:31" pos:end="115:31">&lt;</operator> <literal type="number" pos:start="115:33" pos:end="115:34">16</literal></expr>;</condition> <incr pos:start="115:37" pos:end="115:39"><expr pos:start="115:37" pos:end="115:39"><name pos:start="115:37" pos:end="115:37">i</name><operator pos:start="115:38" pos:end="115:39">++</operator></expr></incr>)</control> <block pos:start="115:42" pos:end="123:17">{<block_content pos:start="117:21" pos:end="121:58">

                    <decl_stmt pos:start="117:21" pos:end="117:73"><decl pos:start="117:21" pos:end="117:72"><type pos:start="117:21" pos:end="117:30"><name pos:start="117:21" pos:end="117:28">uint16_t</name> <modifier pos:start="117:30" pos:end="117:30">*</modifier></type><name pos:start="117:31" pos:end="117:33">tmp</name> <init pos:start="117:35" pos:end="117:72">= <expr pos:start="117:37" pos:end="117:72"><operator pos:start="117:37" pos:end="117:37">(</operator><name pos:start="117:38" pos:end="117:45">uint16_t</name> <operator pos:start="117:47" pos:end="117:47">*</operator><operator pos:start="117:48" pos:end="117:48">)</operator><operator pos:start="117:49" pos:end="117:49">(</operator><name pos:start="117:50" pos:end="117:56"><name pos:start="117:50" pos:end="117:53">dest</name><index pos:start="117:54" pos:end="117:56">[<expr pos:start="117:55" pos:end="117:55"><name pos:start="117:55" pos:end="117:55">p</name></expr>]</index></name> <operator pos:start="117:58" pos:end="117:58">+</operator> <name pos:start="117:60" pos:end="117:60">i</name> <operator pos:start="117:62" pos:end="117:62">*</operator> <name pos:start="117:64" pos:end="117:71">linesize</name><operator pos:start="117:72" pos:end="117:72">)</operator></expr></init></decl>;</decl_stmt>

                    <for pos:start="119:21" pos:end="121:58">for <control pos:start="119:25" pos:end="119:44">(<init pos:start="119:26" pos:end="119:31"><expr pos:start="119:26" pos:end="119:30"><name pos:start="119:26" pos:end="119:26">j</name> <operator pos:start="119:28" pos:end="119:28">=</operator> <literal type="number" pos:start="119:30" pos:end="119:30">0</literal></expr>;</init> <condition pos:start="119:33" pos:end="119:39"><expr pos:start="119:33" pos:end="119:38"><name pos:start="119:33" pos:end="119:33">j</name> <operator pos:start="119:35" pos:end="119:35">&lt;</operator> <literal type="number" pos:start="119:37" pos:end="119:38">16</literal></expr>;</condition> <incr pos:start="119:41" pos:end="119:43"><expr pos:start="119:41" pos:end="119:43"><name pos:start="119:41" pos:end="119:41">j</name><operator pos:start="119:42" pos:end="119:43">++</operator></expr></incr>)</control><block type="pseudo" pos:start="121:25" pos:end="121:58"><block_content pos:start="121:25" pos:end="121:58">

                        <expr_stmt pos:start="121:25" pos:end="121:58"><expr pos:start="121:25" pos:end="121:57"><name pos:start="121:25" pos:end="121:30"><name pos:start="121:25" pos:end="121:27">tmp</name><index pos:start="121:28" pos:end="121:30">[<expr pos:start="121:29" pos:end="121:29"><name pos:start="121:29" pos:end="121:29">j</name></expr>]</index></name> <operator pos:start="121:32" pos:end="121:32">=</operator> <call pos:start="121:34" pos:end="121:57"><name pos:start="121:34" pos:end="121:41">get_bits</name><argument_list pos:start="121:42" pos:end="121:57">(<argument pos:start="121:43" pos:end="121:45"><expr pos:start="121:43" pos:end="121:45"><operator pos:start="121:43" pos:end="121:43">&amp;</operator><name pos:start="121:44" pos:end="121:45">gb</name></expr></argument>, <argument pos:start="121:48" pos:end="121:56"><expr pos:start="121:48" pos:end="121:56"><name pos:start="121:48" pos:end="121:56">bit_depth</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

                </block_content>}</block></for></block_content></block></for>

        </block_content>}</block></if> <else pos:start="125:11" pos:end="135:9">else <block pos:start="125:16" pos:end="135:9">{<block_content pos:start="127:13" pos:end="133:79">

            <for pos:start="127:13" pos:end="133:79">for <control pos:start="127:17" pos:end="127:45">(<init pos:start="127:18" pos:end="127:23"><expr pos:start="127:18" pos:end="127:22"><name pos:start="127:18" pos:end="127:18">p</name> <operator pos:start="127:20" pos:end="127:20">=</operator> <literal type="number" pos:start="127:22" pos:end="127:22">0</literal></expr>;</init> <condition pos:start="127:25" pos:end="127:40"><expr pos:start="127:25" pos:end="127:39"><name pos:start="127:25" pos:end="127:25">p</name> <operator pos:start="127:27" pos:end="127:27">&lt;</operator> <name pos:start="127:29" pos:end="127:39">plane_count</name></expr>;</condition> <incr pos:start="127:42" pos:end="127:44"><expr pos:start="127:42" pos:end="127:44"><name pos:start="127:42" pos:end="127:42">p</name><operator pos:start="127:43" pos:end="127:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="129:17" pos:end="133:79"><block_content pos:start="129:17" pos:end="133:79">

                <for pos:start="129:17" pos:end="133:79">for <control pos:start="129:21" pos:end="129:40">(<init pos:start="129:22" pos:end="129:27"><expr pos:start="129:22" pos:end="129:26"><name pos:start="129:22" pos:end="129:22">i</name> <operator pos:start="129:24" pos:end="129:24">=</operator> <literal type="number" pos:start="129:26" pos:end="129:26">0</literal></expr>;</init> <condition pos:start="129:29" pos:end="129:35"><expr pos:start="129:29" pos:end="129:34"><name pos:start="129:29" pos:end="129:29">i</name> <operator pos:start="129:31" pos:end="129:31">&lt;</operator> <literal type="number" pos:start="129:33" pos:end="129:34">16</literal></expr>;</condition> <incr pos:start="129:37" pos:end="129:39"><expr pos:start="129:37" pos:end="129:39"><name pos:start="129:37" pos:end="129:37">i</name><operator pos:start="129:38" pos:end="129:39">++</operator></expr></incr>)</control><block type="pseudo" pos:start="131:21" pos:end="133:79"><block_content pos:start="131:21" pos:end="133:79">

                    <expr_stmt pos:start="131:21" pos:end="133:79"><expr pos:start="131:21" pos:end="133:78"><call pos:start="131:21" pos:end="133:78"><name pos:start="131:21" pos:end="131:26">memcpy</name><argument_list pos:start="131:27" pos:end="133:78">(<argument pos:start="131:28" pos:end="131:49"><expr pos:start="131:28" pos:end="131:49"><name pos:start="131:28" pos:end="131:34"><name pos:start="131:28" pos:end="131:31">dest</name><index pos:start="131:32" pos:end="131:34">[<expr pos:start="131:33" pos:end="131:33"><name pos:start="131:33" pos:end="131:33">p</name></expr>]</index></name> <operator pos:start="131:36" pos:end="131:36">+</operator> <name pos:start="131:38" pos:end="131:38">i</name> <operator pos:start="131:40" pos:end="131:40">*</operator> <name pos:start="131:42" pos:end="131:49">linesize</name></expr></argument>,

                           <argument pos:start="133:28" pos:end="133:73"><expr pos:start="133:28" pos:end="133:73"><operator pos:start="133:28" pos:end="133:28">(</operator><name pos:start="133:29" pos:end="133:35">uint8_t</name> <operator pos:start="133:37" pos:end="133:37">*</operator><operator pos:start="133:38" pos:end="133:38">)</operator><name pos:start="133:39" pos:end="133:54"><name pos:start="133:39" pos:end="133:39">h</name><operator pos:start="133:40" pos:end="133:41">-&gt;</operator><name pos:start="133:42" pos:end="133:54">intra_pcm_ptr</name></name> <operator pos:start="133:56" pos:end="133:56">+</operator> <name pos:start="133:58" pos:end="133:58">p</name> <operator pos:start="133:60" pos:end="133:60">*</operator> <literal type="number" pos:start="133:62" pos:end="133:66">256</literal> <operator pos:start="133:66" pos:end="133:66">+</operator> <name pos:start="133:68" pos:end="133:68">i</name> <operator pos:start="133:70" pos:end="133:70">*</operator> <literal type="number" pos:start="133:72" pos:end="133:73">16</literal></expr></argument>, <argument pos:start="133:76" pos:end="133:77"><expr pos:start="133:76" pos:end="133:77"><literal type="number" pos:start="133:76" pos:end="133:77">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for></block_content></block></for>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="137:7" pos:end="199:5">else <block pos:start="137:12" pos:end="199:5">{<block_content pos:start="139:9" pos:end="197:9">

        <if_stmt pos:start="139:9" pos:end="177:9"><if pos:start="139:9" pos:end="165:9">if <condition pos:start="139:12" pos:end="139:30">(<expr pos:start="139:13" pos:end="139:29"><call pos:start="139:13" pos:end="139:29"><name pos:start="139:13" pos:end="139:20">IS_INTRA</name><argument_list pos:start="139:21" pos:end="139:29">(<argument pos:start="139:22" pos:end="139:28"><expr pos:start="139:22" pos:end="139:28"><name pos:start="139:22" pos:end="139:28">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="139:32" pos:end="165:9">{<block_content pos:start="141:13" pos:end="163:68">

            <if_stmt pos:start="141:13" pos:end="145:68"><if pos:start="141:13" pos:end="145:68">if <condition pos:start="141:16" pos:end="141:37">(<expr pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:36"><name pos:start="141:17" pos:end="141:17">h</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:36">deblocking_filter</name></name></expr>)</condition><block type="pseudo" pos:start="143:17" pos:end="145:68"><block_content pos:start="143:17" pos:end="145:68">

                <expr_stmt pos:start="143:17" pos:end="145:68"><expr pos:start="143:17" pos:end="145:67"><call pos:start="143:17" pos:end="145:67"><name pos:start="143:17" pos:end="143:30">xchg_mb_border</name><argument_list pos:start="143:31" pos:end="145:67">(<argument pos:start="143:32" pos:end="143:32"><expr pos:start="143:32" pos:end="143:32"><name pos:start="143:32" pos:end="143:32">h</name></expr></argument>, <argument pos:start="143:35" pos:end="143:41"><expr pos:start="143:35" pos:end="143:41"><name pos:start="143:35" pos:end="143:41"><name pos:start="143:35" pos:end="143:38">dest</name><index pos:start="143:39" pos:end="143:41">[<expr pos:start="143:40" pos:end="143:40"><literal type="number" pos:start="143:40" pos:end="143:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:44" pos:end="143:50"><expr pos:start="143:44" pos:end="143:50"><name pos:start="143:44" pos:end="143:50"><name pos:start="143:44" pos:end="143:47">dest</name><index pos:start="143:48" pos:end="143:50">[<expr pos:start="143:49" pos:end="143:49"><literal type="number" pos:start="143:49" pos:end="143:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:53" pos:end="143:59"><expr pos:start="143:53" pos:end="143:59"><name pos:start="143:53" pos:end="143:59"><name pos:start="143:53" pos:end="143:56">dest</name><index pos:start="143:57" pos:end="143:59">[<expr pos:start="143:58" pos:end="143:58"><literal type="number" pos:start="143:58" pos:end="143:58">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="143:62" pos:end="143:69"><expr pos:start="143:62" pos:end="143:69"><name pos:start="143:62" pos:end="143:69">linesize</name></expr></argument>,

                               <argument pos:start="145:32" pos:end="145:39"><expr pos:start="145:32" pos:end="145:39"><name pos:start="145:32" pos:end="145:39">linesize</name></expr></argument>, <argument pos:start="145:42" pos:end="145:42"><expr pos:start="145:42" pos:end="145:42"><literal type="number" pos:start="145:42" pos:end="145:42">1</literal></expr></argument>, <argument pos:start="145:45" pos:end="145:45"><expr pos:start="145:45" pos:end="145:45"><literal type="number" pos:start="145:45" pos:end="145:45">1</literal></expr></argument>, <argument pos:start="145:48" pos:end="145:53"><expr pos:start="145:48" pos:end="145:53"><name pos:start="145:48" pos:end="145:53">SIMPLE</name></expr></argument>, <argument pos:start="145:56" pos:end="145:66"><expr pos:start="145:56" pos:end="145:66"><name pos:start="145:56" pos:end="145:66">PIXEL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <for pos:start="149:13" pos:end="155:78">for <control pos:start="149:17" pos:end="149:45">(<init pos:start="149:18" pos:end="149:23"><expr pos:start="149:18" pos:end="149:22"><name pos:start="149:18" pos:end="149:18">p</name> <operator pos:start="149:20" pos:end="149:20">=</operator> <literal type="number" pos:start="149:22" pos:end="149:22">0</literal></expr>;</init> <condition pos:start="149:25" pos:end="149:40"><expr pos:start="149:25" pos:end="149:39"><name pos:start="149:25" pos:end="149:25">p</name> <operator pos:start="149:27" pos:end="149:27">&lt;</operator> <name pos:start="149:29" pos:end="149:39">plane_count</name></expr>;</condition> <incr pos:start="149:42" pos:end="149:44"><expr pos:start="149:42" pos:end="149:44"><name pos:start="149:42" pos:end="149:42">p</name><operator pos:start="149:43" pos:end="149:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="151:17" pos:end="155:78"><block_content pos:start="151:17" pos:end="155:78">

                <expr_stmt pos:start="151:17" pos:end="155:78"><expr pos:start="151:17" pos:end="155:77"><call pos:start="151:17" pos:end="155:77"><name pos:start="151:17" pos:end="151:41">hl_decode_mb_predict_luma</name><argument_list pos:start="151:42" pos:end="155:77">(<argument pos:start="151:43" pos:end="151:43"><expr pos:start="151:43" pos:end="151:43"><name pos:start="151:43" pos:end="151:43">h</name></expr></argument>, <argument pos:start="151:46" pos:end="151:52"><expr pos:start="151:46" pos:end="151:52"><name pos:start="151:46" pos:end="151:52">mb_type</name></expr></argument>, <argument pos:start="151:55" pos:end="151:55"><expr pos:start="151:55" pos:end="151:55"><literal type="number" pos:start="151:55" pos:end="151:55">1</literal></expr></argument>, <argument pos:start="151:58" pos:end="151:63"><expr pos:start="151:58" pos:end="151:63"><name pos:start="151:58" pos:end="151:63">SIMPLE</name></expr></argument>,

                                          <argument pos:start="153:43" pos:end="153:58"><expr pos:start="153:43" pos:end="153:58"><name pos:start="153:43" pos:end="153:58">transform_bypass</name></expr></argument>, <argument pos:start="153:61" pos:end="153:71"><expr pos:start="153:61" pos:end="153:71"><name pos:start="153:61" pos:end="153:71">PIXEL_SHIFT</name></expr></argument>,

                                          <argument pos:start="155:43" pos:end="155:54"><expr pos:start="155:43" pos:end="155:54"><name pos:start="155:43" pos:end="155:54">block_offset</name></expr></argument>, <argument pos:start="155:57" pos:end="155:64"><expr pos:start="155:57" pos:end="155:64"><name pos:start="155:57" pos:end="155:64">linesize</name></expr></argument>, <argument pos:start="155:67" pos:end="155:73"><expr pos:start="155:67" pos:end="155:73"><name pos:start="155:67" pos:end="155:73"><name pos:start="155:67" pos:end="155:70">dest</name><index pos:start="155:71" pos:end="155:73">[<expr pos:start="155:72" pos:end="155:72"><name pos:start="155:72" pos:end="155:72">p</name></expr>]</index></name></expr></argument>, <argument pos:start="155:76" pos:end="155:76"><expr pos:start="155:76" pos:end="155:76"><name pos:start="155:76" pos:end="155:76">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



            <if_stmt pos:start="159:13" pos:end="163:68"><if pos:start="159:13" pos:end="163:68">if <condition pos:start="159:16" pos:end="159:37">(<expr pos:start="159:17" pos:end="159:36"><name pos:start="159:17" pos:end="159:36"><name pos:start="159:17" pos:end="159:17">h</name><operator pos:start="159:18" pos:end="159:19">-&gt;</operator><name pos:start="159:20" pos:end="159:36">deblocking_filter</name></name></expr>)</condition><block type="pseudo" pos:start="161:17" pos:end="163:68"><block_content pos:start="161:17" pos:end="163:68">

                <expr_stmt pos:start="161:17" pos:end="163:68"><expr pos:start="161:17" pos:end="163:67"><call pos:start="161:17" pos:end="163:67"><name pos:start="161:17" pos:end="161:30">xchg_mb_border</name><argument_list pos:start="161:31" pos:end="163:67">(<argument pos:start="161:32" pos:end="161:32"><expr pos:start="161:32" pos:end="161:32"><name pos:start="161:32" pos:end="161:32">h</name></expr></argument>, <argument pos:start="161:35" pos:end="161:41"><expr pos:start="161:35" pos:end="161:41"><name pos:start="161:35" pos:end="161:41"><name pos:start="161:35" pos:end="161:38">dest</name><index pos:start="161:39" pos:end="161:41">[<expr pos:start="161:40" pos:end="161:40"><literal type="number" pos:start="161:40" pos:end="161:40">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:44" pos:end="161:50"><expr pos:start="161:44" pos:end="161:50"><name pos:start="161:44" pos:end="161:50"><name pos:start="161:44" pos:end="161:47">dest</name><index pos:start="161:48" pos:end="161:50">[<expr pos:start="161:49" pos:end="161:49"><literal type="number" pos:start="161:49" pos:end="161:49">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:53" pos:end="161:59"><expr pos:start="161:53" pos:end="161:59"><name pos:start="161:53" pos:end="161:59"><name pos:start="161:53" pos:end="161:56">dest</name><index pos:start="161:57" pos:end="161:59">[<expr pos:start="161:58" pos:end="161:58"><literal type="number" pos:start="161:58" pos:end="161:58">2</literal></expr>]</index></name></expr></argument>, <argument pos:start="161:62" pos:end="161:69"><expr pos:start="161:62" pos:end="161:69"><name pos:start="161:62" pos:end="161:69">linesize</name></expr></argument>,

                               <argument pos:start="163:32" pos:end="163:39"><expr pos:start="163:32" pos:end="163:39"><name pos:start="163:32" pos:end="163:39">linesize</name></expr></argument>, <argument pos:start="163:42" pos:end="163:42"><expr pos:start="163:42" pos:end="163:42"><literal type="number" pos:start="163:42" pos:end="163:42">0</literal></expr></argument>, <argument pos:start="163:45" pos:end="163:45"><expr pos:start="163:45" pos:end="163:45"><literal type="number" pos:start="163:45" pos:end="163:45">1</literal></expr></argument>, <argument pos:start="163:48" pos:end="163:53"><expr pos:start="163:48" pos:end="163:53"><name pos:start="163:48" pos:end="163:53">SIMPLE</name></expr></argument>, <argument pos:start="163:56" pos:end="163:66"><expr pos:start="163:56" pos:end="163:66"><name pos:start="163:56" pos:end="163:66">PIXEL_SHIFT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="165:11" pos:end="177:9">else <block pos:start="165:16" pos:end="177:9">{<block_content pos:start="167:13" pos:end="175:59">

            <function_decl pos:start="167:13" pos:end="175:59"><type pos:start="167:13" pos:end="167:16"><name pos:start="167:13" pos:end="167:16">FUNC</name></type>(<name pos:start="167:18" pos:end="167:30">hl_motion_444</name>)<parameter_list pos:start="167:32" pos:end="175:58">(<parameter pos:start="167:33" pos:end="167:33"><decl pos:start="167:33" pos:end="167:33"><type pos:start="167:33" pos:end="167:33"><name pos:start="167:33" pos:end="167:33">h</name></type></decl></parameter>, <parameter pos:start="167:36" pos:end="167:42"><decl pos:start="167:36" pos:end="167:42"><type pos:start="167:36" pos:end="167:42"><name pos:start="167:36" pos:end="167:42"><name pos:start="167:36" pos:end="167:39">dest</name><index pos:start="167:40" pos:end="167:42">[<expr pos:start="167:41" pos:end="167:41"><literal type="number" pos:start="167:41" pos:end="167:41">0</literal></expr>]</index></name></type></decl></parameter>, <parameter pos:start="167:45" pos:end="167:51"><decl pos:start="167:45" pos:end="167:51"><type pos:start="167:45" pos:end="167:51"><name pos:start="167:45" pos:end="167:51"><name pos:start="167:45" pos:end="167:48">dest</name><index pos:start="167:49" pos:end="167:51">[<expr pos:start="167:50" pos:end="167:50"><literal type="number" pos:start="167:50" pos:end="167:50">1</literal></expr>]</index></name></type></decl></parameter>, <parameter pos:start="167:54" pos:end="167:60"><decl pos:start="167:54" pos:end="167:60"><type pos:start="167:54" pos:end="167:60"><name pos:start="167:54" pos:end="167:60"><name pos:start="167:54" pos:end="167:57">dest</name><index pos:start="167:58" pos:end="167:60">[<expr pos:start="167:59" pos:end="167:59"><literal type="number" pos:start="167:59" pos:end="167:59">2</literal></expr>]</index></name></type></decl></parameter>,

                      <parameter pos:start="169:23" pos:end="169:36"><decl pos:start="169:23" pos:end="169:36"><type pos:start="169:23" pos:end="169:36"><name pos:start="169:23" pos:end="169:36"><name pos:start="169:23" pos:end="169:23">h</name><operator pos:start="169:24" pos:end="169:25">-&gt;</operator><name pos:start="169:26" pos:end="169:27">me</name><operator pos:start="169:28" pos:end="169:28">.</operator><name pos:start="169:29" pos:end="169:36">qpel_put</name></name></type></decl></parameter>, <parameter pos:start="169:39" pos:end="169:78"><decl pos:start="169:39" pos:end="169:78"><type pos:start="169:39" pos:end="169:78"><name pos:start="169:39" pos:end="169:78"><name pos:start="169:39" pos:end="169:39">h</name><operator pos:start="169:40" pos:end="169:41">-&gt;</operator><name pos:start="169:42" pos:end="169:51">h264chroma</name><operator pos:start="169:52" pos:end="169:52">.</operator><name pos:start="169:53" pos:end="169:78">put_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                      <parameter pos:start="171:23" pos:end="171:36"><decl pos:start="171:23" pos:end="171:36"><type pos:start="171:23" pos:end="171:36"><name pos:start="171:23" pos:end="171:36"><name pos:start="171:23" pos:end="171:23">h</name><operator pos:start="171:24" pos:end="171:25">-&gt;</operator><name pos:start="171:26" pos:end="171:27">me</name><operator pos:start="171:28" pos:end="171:28">.</operator><name pos:start="171:29" pos:end="171:36">qpel_avg</name></name></type></decl></parameter>, <parameter pos:start="171:39" pos:end="171:78"><decl pos:start="171:39" pos:end="171:78"><type pos:start="171:39" pos:end="171:78"><name pos:start="171:39" pos:end="171:78"><name pos:start="171:39" pos:end="171:39">h</name><operator pos:start="171:40" pos:end="171:41">-&gt;</operator><name pos:start="171:42" pos:end="171:51">h264chroma</name><operator pos:start="171:52" pos:end="171:52">.</operator><name pos:start="171:53" pos:end="171:78">avg_h264_chroma_pixels_tab</name></name></type></decl></parameter>,

                      <parameter pos:start="173:23" pos:end="173:55"><decl pos:start="173:23" pos:end="173:55"><type pos:start="173:23" pos:end="173:55"><name pos:start="173:23" pos:end="173:55"><name pos:start="173:23" pos:end="173:23">h</name><operator pos:start="173:24" pos:end="173:25">-&gt;</operator><name pos:start="173:26" pos:end="173:32">h264dsp</name><operator pos:start="173:33" pos:end="173:33">.</operator><name pos:start="173:34" pos:end="173:55">weight_h264_pixels_tab</name></name></type></decl></parameter>,

                      <parameter pos:start="175:23" pos:end="175:57"><decl pos:start="175:23" pos:end="175:57"><type pos:start="175:23" pos:end="175:57"><name pos:start="175:23" pos:end="175:57"><name pos:start="175:23" pos:end="175:23">h</name><operator pos:start="175:24" pos:end="175:25">-&gt;</operator><name pos:start="175:26" pos:end="175:32">h264dsp</name><operator pos:start="175:33" pos:end="175:33">.</operator><name pos:start="175:34" pos:end="175:57">biweight_h264_pixels_tab</name></name></type></decl></parameter>)</parameter_list>;</function_decl>

        </block_content>}</block></else></if_stmt>



        <for pos:start="181:9" pos:end="187:47">for <control pos:start="181:13" pos:end="181:41">(<init pos:start="181:14" pos:end="181:19"><expr pos:start="181:14" pos:end="181:18"><name pos:start="181:14" pos:end="181:14">p</name> <operator pos:start="181:16" pos:end="181:16">=</operator> <literal type="number" pos:start="181:18" pos:end="181:18">0</literal></expr>;</init> <condition pos:start="181:21" pos:end="181:36"><expr pos:start="181:21" pos:end="181:35"><name pos:start="181:21" pos:end="181:21">p</name> <operator pos:start="181:23" pos:end="181:23">&lt;</operator> <name pos:start="181:25" pos:end="181:35">plane_count</name></expr>;</condition> <incr pos:start="181:38" pos:end="181:40"><expr pos:start="181:38" pos:end="181:40"><name pos:start="181:38" pos:end="181:38">p</name><operator pos:start="181:39" pos:end="181:40">++</operator></expr></incr>)</control><block type="pseudo" pos:start="183:13" pos:end="187:47"><block_content pos:start="183:13" pos:end="187:47">

            <expr_stmt pos:start="183:13" pos:end="187:47"><expr pos:start="183:13" pos:end="187:46"><call pos:start="183:13" pos:end="187:46"><name pos:start="183:13" pos:end="183:34">hl_decode_mb_idct_luma</name><argument_list pos:start="183:35" pos:end="187:46">(<argument pos:start="183:36" pos:end="183:36"><expr pos:start="183:36" pos:end="183:36"><name pos:start="183:36" pos:end="183:36">h</name></expr></argument>, <argument pos:start="183:39" pos:end="183:45"><expr pos:start="183:39" pos:end="183:45"><name pos:start="183:39" pos:end="183:45">mb_type</name></expr></argument>, <argument pos:start="183:48" pos:end="183:48"><expr pos:start="183:48" pos:end="183:48"><literal type="number" pos:start="183:48" pos:end="183:48">1</literal></expr></argument>, <argument pos:start="183:51" pos:end="183:56"><expr pos:start="183:51" pos:end="183:56"><name pos:start="183:51" pos:end="183:56">SIMPLE</name></expr></argument>, <argument pos:start="183:59" pos:end="183:74"><expr pos:start="183:59" pos:end="183:74"><name pos:start="183:59" pos:end="183:74">transform_bypass</name></expr></argument>,

                                   <argument pos:start="185:36" pos:end="185:46"><expr pos:start="185:36" pos:end="185:46"><name pos:start="185:36" pos:end="185:46">PIXEL_SHIFT</name></expr></argument>, <argument pos:start="185:49" pos:end="185:60"><expr pos:start="185:49" pos:end="185:60"><name pos:start="185:49" pos:end="185:60">block_offset</name></expr></argument>, <argument pos:start="185:63" pos:end="185:70"><expr pos:start="185:63" pos:end="185:70"><name pos:start="185:63" pos:end="185:70">linesize</name></expr></argument>,

                                   <argument pos:start="187:36" pos:end="187:42"><expr pos:start="187:36" pos:end="187:42"><name pos:start="187:36" pos:end="187:42"><name pos:start="187:36" pos:end="187:39">dest</name><index pos:start="187:40" pos:end="187:42">[<expr pos:start="187:41" pos:end="187:41"><name pos:start="187:41" pos:end="187:41">p</name></expr>]</index></name></expr></argument>, <argument pos:start="187:45" pos:end="187:45"><expr pos:start="187:45" pos:end="187:45"><name pos:start="187:45" pos:end="187:45">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>



        <if_stmt pos:start="191:9" pos:end="197:9"><if pos:start="191:9" pos:end="197:9">if <condition pos:start="191:12" pos:end="191:40">(<expr pos:start="191:13" pos:end="191:39"><name pos:start="191:13" pos:end="191:18"><name pos:start="191:13" pos:end="191:13">h</name><operator pos:start="191:14" pos:end="191:15">-&gt;</operator><name pos:start="191:16" pos:end="191:18">cbp</name></name> <operator pos:start="191:20" pos:end="191:21">||</operator> <call pos:start="191:23" pos:end="191:39"><name pos:start="191:23" pos:end="191:30">IS_INTRA</name><argument_list pos:start="191:31" pos:end="191:39">(<argument pos:start="191:32" pos:end="191:38"><expr pos:start="191:32" pos:end="191:38"><name pos:start="191:32" pos:end="191:38">mb_type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="191:42" pos:end="197:9">{<block_content pos:start="193:13" pos:end="195:66">

            <expr_stmt pos:start="193:13" pos:end="193:39"><expr pos:start="193:13" pos:end="193:38"><call pos:start="193:13" pos:end="193:38"><name pos:start="193:13" pos:end="193:31"><name pos:start="193:13" pos:end="193:13">h</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:18">dsp</name><operator pos:start="193:19" pos:end="193:19">.</operator><name pos:start="193:20" pos:end="193:31">clear_blocks</name></name><argument_list pos:start="193:32" pos:end="193:38">(<argument pos:start="193:33" pos:end="193:37"><expr pos:start="193:33" pos:end="193:37"><name pos:start="193:33" pos:end="193:37"><name pos:start="193:33" pos:end="193:33">h</name><operator pos:start="193:34" pos:end="193:35">-&gt;</operator><name pos:start="193:36" pos:end="193:37">mb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="195:13" pos:end="195:66"><expr pos:start="195:13" pos:end="195:65"><call pos:start="195:13" pos:end="195:65"><name pos:start="195:13" pos:end="195:31"><name pos:start="195:13" pos:end="195:13">h</name><operator pos:start="195:14" pos:end="195:15">-&gt;</operator><name pos:start="195:16" pos:end="195:18">dsp</name><operator pos:start="195:19" pos:end="195:19">.</operator><name pos:start="195:20" pos:end="195:31">clear_blocks</name></name><argument_list pos:start="195:32" pos:end="195:65">(<argument pos:start="195:33" pos:end="195:64"><expr pos:start="195:33" pos:end="195:64"><name pos:start="195:33" pos:end="195:37"><name pos:start="195:33" pos:end="195:33">h</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:37">mb</name></name> <operator pos:start="195:39" pos:end="195:39">+</operator> <operator pos:start="195:41" pos:end="195:41">(</operator><literal type="number" pos:start="195:42" pos:end="195:43">24</literal> <operator pos:start="195:45" pos:end="195:45">*</operator> <literal type="number" pos:start="195:47" pos:end="195:48">16</literal> <operator pos:start="195:50" pos:end="195:51">&lt;&lt;</operator> <name pos:start="195:53" pos:end="195:63">PIXEL_SHIFT</name><operator pos:start="195:64" pos:end="195:64">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
