<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/23873.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:27">targa_decode_rle</name><parameter_list pos:start="1:28" pos:end="1:150">(<parameter pos:start="1:29" pos:end="1:49"><decl pos:start="1:29" pos:end="1:49"><type pos:start="1:29" pos:end="1:49"><name pos:start="1:29" pos:end="1:42">AVCodecContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:49">avctx</name></decl></parameter>, <parameter pos:start="1:52" pos:end="1:66"><decl pos:start="1:52" pos:end="1:66"><type pos:start="1:52" pos:end="1:66"><name pos:start="1:52" pos:end="1:63">TargaContext</name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">s</name></decl></parameter>, <parameter pos:start="1:69" pos:end="1:86"><decl pos:start="1:69" pos:end="1:86"><type pos:start="1:69" pos:end="1:86"><specifier pos:start="1:69" pos:end="1:73">const</specifier> <name pos:start="1:75" pos:end="1:81">uint8_t</name> <modifier pos:start="1:83" pos:end="1:83">*</modifier></type><name pos:start="1:84" pos:end="1:86">src</name></decl></parameter>, <parameter pos:start="1:89" pos:end="1:100"><decl pos:start="1:89" pos:end="1:100"><type pos:start="1:89" pos:end="1:100"><name pos:start="1:89" pos:end="1:91">int</name></type> <name pos:start="1:93" pos:end="1:100">src_size</name></decl></parameter>, <parameter pos:start="1:103" pos:end="1:114"><decl pos:start="1:103" pos:end="1:114"><type pos:start="1:103" pos:end="1:114"><name pos:start="1:103" pos:end="1:109">uint8_t</name> <modifier pos:start="1:111" pos:end="1:111">*</modifier></type><name pos:start="1:112" pos:end="1:114">dst</name></decl></parameter>, <parameter pos:start="1:117" pos:end="1:121"><decl pos:start="1:117" pos:end="1:121"><type pos:start="1:117" pos:end="1:121"><name pos:start="1:117" pos:end="1:119">int</name></type> <name pos:start="1:121" pos:end="1:121">w</name></decl></parameter>, <parameter pos:start="1:124" pos:end="1:128"><decl pos:start="1:124" pos:end="1:128"><type pos:start="1:124" pos:end="1:128"><name pos:start="1:124" pos:end="1:126">int</name></type> <name pos:start="1:128" pos:end="1:128">h</name></decl></parameter>, <parameter pos:start="1:131" pos:end="1:140"><decl pos:start="1:131" pos:end="1:140"><type pos:start="1:131" pos:end="1:140"><name pos:start="1:131" pos:end="1:133">int</name></type> <name pos:start="1:135" pos:end="1:140">stride</name></decl></parameter>, <parameter pos:start="1:143" pos:end="1:149"><decl pos:start="1:143" pos:end="1:149"><type pos:start="1:143" pos:end="1:149"><name pos:start="1:143" pos:end="1:145">int</name></type> <name pos:start="1:147" pos:end="1:149">bpp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="113:1">{<block_content pos:start="5:5" pos:end="111:20">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">x</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">y</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:31"><decl pos:start="7:5" pos:end="7:30"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:13">depth</name> <init pos:start="7:15" pos:end="7:30">= <expr pos:start="7:17" pos:end="7:30"><operator pos:start="7:17" pos:end="7:17">(</operator><name pos:start="7:18" pos:end="7:20">bpp</name> <operator pos:start="7:22" pos:end="7:22">+</operator> <literal type="number" pos:start="7:24" pos:end="7:24">1</literal><operator pos:start="7:25" pos:end="7:25">)</operator> <operator pos:start="7:27" pos:end="7:28">&gt;&gt;</operator> <literal type="number" pos:start="7:30" pos:end="7:30">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:20"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">type</name></decl>, <decl pos:start="9:15" pos:end="9:19"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:19">count</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:13"><decl pos:start="11:5" pos:end="11:12"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:12">diff</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:44"><decl pos:start="13:5" pos:end="13:43"><type pos:start="13:5" pos:end="13:19"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:17">uint8_t</name> <modifier pos:start="13:19" pos:end="13:19">*</modifier></type><name pos:start="13:20" pos:end="13:26">src_end</name> <init pos:start="13:28" pos:end="13:43">= <expr pos:start="13:30" pos:end="13:43"><name pos:start="13:30" pos:end="13:32">src</name> <operator pos:start="13:34" pos:end="13:34">+</operator> <name pos:start="13:36" pos:end="13:43">src_size</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:30"><expr pos:start="17:5" pos:end="17:29"><name pos:start="17:5" pos:end="17:8">diff</name> <operator pos:start="17:10" pos:end="17:10">=</operator> <name pos:start="17:12" pos:end="17:17">stride</name> <operator pos:start="17:19" pos:end="17:19">-</operator> <name pos:start="17:21" pos:end="17:21">w</name> <operator pos:start="17:23" pos:end="17:23">*</operator> <name pos:start="17:25" pos:end="17:29">depth</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:14"><expr pos:start="19:5" pos:end="19:13"><name pos:start="19:5" pos:end="19:5">x</name> <operator pos:start="19:7" pos:end="19:7">=</operator> <name pos:start="19:9" pos:end="19:9">y</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <literal type="number" pos:start="19:13" pos:end="19:13">0</literal></expr>;</expr_stmt>

    <while pos:start="21:5" pos:end="109:5">while<condition pos:start="21:10" pos:end="21:16">(<expr pos:start="21:11" pos:end="21:15"><name pos:start="21:11" pos:end="21:11">y</name> <operator pos:start="21:13" pos:end="21:13">&lt;</operator> <name pos:start="21:15" pos:end="21:15">h</name></expr>)</condition><block pos:start="21:17" pos:end="109:5">{<block_content pos:start="23:9" pos:end="107:25">

        <expr_stmt pos:start="23:9" pos:end="23:57"><expr pos:start="23:9" pos:end="23:56"><call pos:start="23:9" pos:end="23:56"><name pos:start="23:9" pos:end="23:25">CHECK_BUFFER_SIZE</name><argument_list pos:start="23:26" pos:end="23:56">(<argument pos:start="23:27" pos:end="23:29"><expr pos:start="23:27" pos:end="23:29"><name pos:start="23:27" pos:end="23:29">src</name></expr></argument>, <argument pos:start="23:32" pos:end="23:38"><expr pos:start="23:32" pos:end="23:38"><name pos:start="23:32" pos:end="23:38">src_end</name></expr></argument>, <argument pos:start="23:41" pos:end="23:41"><expr pos:start="23:41" pos:end="23:41"><literal type="number" pos:start="23:41" pos:end="23:41">1</literal></expr></argument>, <argument pos:start="23:44" pos:end="23:55"><expr pos:start="23:44" pos:end="23:55"><literal type="string" pos:start="23:44" pos:end="23:55">"image type"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:22"><expr pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:12">type</name> <operator pos:start="25:14" pos:end="25:14">=</operator> <operator pos:start="25:16" pos:end="25:16">*</operator><name pos:start="25:17" pos:end="25:19">src</name><operator pos:start="25:20" pos:end="25:21">++</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:34"><expr pos:start="27:9" pos:end="27:33"><name pos:start="27:9" pos:end="27:13">count</name> <operator pos:start="27:15" pos:end="27:15">=</operator> <operator pos:start="27:17" pos:end="27:17">(</operator><name pos:start="27:18" pos:end="27:21">type</name> <operator pos:start="27:23" pos:end="27:23">&amp;</operator> <literal type="number" pos:start="27:25" pos:end="27:28">0x7F</literal><operator pos:start="27:29" pos:end="27:29">)</operator> <operator pos:start="27:31" pos:end="27:31">+</operator> <literal type="number" pos:start="27:33" pos:end="27:33">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:21"><expr pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:12">type</name> <operator pos:start="29:14" pos:end="29:15">&amp;=</operator> <literal type="number" pos:start="29:17" pos:end="29:20">0x80</literal></expr>;</expr_stmt>

        <if_stmt pos:start="31:9" pos:end="37:9"><if pos:start="31:9" pos:end="37:9">if<condition pos:start="31:11" pos:end="31:60">(<expr pos:start="31:12" pos:end="31:59"><operator pos:start="31:12" pos:end="31:12">(</operator><name pos:start="31:13" pos:end="31:13">x</name> <operator pos:start="31:15" pos:end="31:15">+</operator> <name pos:start="31:17" pos:end="31:21">count</name> <operator pos:start="31:23" pos:end="31:23">&gt;</operator> <name pos:start="31:25" pos:end="31:25">w</name><operator pos:start="31:26" pos:end="31:26">)</operator> <operator pos:start="31:28" pos:end="31:29">&amp;&amp;</operator> <operator pos:start="31:31" pos:end="31:31">(</operator><name pos:start="31:32" pos:end="31:32">x</name> <operator pos:start="31:34" pos:end="31:34">+</operator> <name pos:start="31:36" pos:end="31:40">count</name> <operator pos:start="31:42" pos:end="31:42">+</operator> <literal type="number" pos:start="31:44" pos:end="31:44">1</literal> <operator pos:start="31:46" pos:end="31:46">&gt;</operator> <operator pos:start="31:48" pos:end="31:48">(</operator><name pos:start="31:49" pos:end="31:49">h</name> <operator pos:start="31:51" pos:end="31:51">-</operator> <name pos:start="31:53" pos:end="31:53">y</name><operator pos:start="31:54" pos:end="31:54">)</operator> <operator pos:start="31:56" pos:end="31:56">*</operator> <name pos:start="31:58" pos:end="31:58">w</name><operator pos:start="31:59" pos:end="31:59">)</operator></expr>)</condition><block pos:start="31:61" pos:end="37:9">{<block_content pos:start="33:13" pos:end="35:22">

            <expr_stmt pos:start="33:13" pos:end="33:110"><expr pos:start="33:13" pos:end="33:109"><call pos:start="33:13" pos:end="33:109"><name pos:start="33:13" pos:end="33:18">av_log</name><argument_list pos:start="33:19" pos:end="33:109">(<argument pos:start="33:20" pos:end="33:24"><expr pos:start="33:20" pos:end="33:24"><name pos:start="33:20" pos:end="33:24">avctx</name></expr></argument>, <argument pos:start="33:27" pos:end="33:38"><expr pos:start="33:27" pos:end="33:38"><name pos:start="33:27" pos:end="33:38">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="33:41" pos:end="33:95"><expr pos:start="33:41" pos:end="33:95"><literal type="string" pos:start="33:41" pos:end="33:95">"Packet went out of bounds: position (%i,%i) size %i\n"</literal></expr></argument>, <argument pos:start="33:98" pos:end="33:98"><expr pos:start="33:98" pos:end="33:98"><name pos:start="33:98" pos:end="33:98">x</name></expr></argument>, <argument pos:start="33:101" pos:end="33:101"><expr pos:start="33:101" pos:end="33:101"><name pos:start="33:101" pos:end="33:101">y</name></expr></argument>, <argument pos:start="33:104" pos:end="33:108"><expr pos:start="33:104" pos:end="33:108"><name pos:start="33:104" pos:end="33:108">count</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="35:13" pos:end="35:22">return <expr pos:start="35:20" pos:end="35:21"><operator pos:start="35:20" pos:end="35:20">-</operator><literal type="number" pos:start="35:21" pos:end="35:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="47:9"><if pos:start="39:9" pos:end="43:9">if<condition pos:start="39:11" pos:end="39:16">(<expr pos:start="39:12" pos:end="39:15"><name pos:start="39:12" pos:end="39:15">type</name></expr>)</condition><block pos:start="39:17" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:65">

            <expr_stmt pos:start="41:13" pos:end="41:65"><expr pos:start="41:13" pos:end="41:64"><call pos:start="41:13" pos:end="41:64"><name pos:start="41:13" pos:end="41:29">CHECK_BUFFER_SIZE</name><argument_list pos:start="41:30" pos:end="41:64">(<argument pos:start="41:31" pos:end="41:33"><expr pos:start="41:31" pos:end="41:33"><name pos:start="41:31" pos:end="41:33">src</name></expr></argument>, <argument pos:start="41:36" pos:end="41:42"><expr pos:start="41:36" pos:end="41:42"><name pos:start="41:36" pos:end="41:42">src_end</name></expr></argument>, <argument pos:start="41:45" pos:end="41:49"><expr pos:start="41:45" pos:end="41:49"><name pos:start="41:45" pos:end="41:49">depth</name></expr></argument>, <argument pos:start="41:52" pos:end="41:63"><expr pos:start="41:52" pos:end="41:63"><literal type="string" pos:start="41:52" pos:end="41:63">"image data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if><else pos:start="43:10" pos:end="47:9">else<block pos:start="43:14" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:73">

            <expr_stmt pos:start="45:13" pos:end="45:73"><expr pos:start="45:13" pos:end="45:72"><call pos:start="45:13" pos:end="45:72"><name pos:start="45:13" pos:end="45:29">CHECK_BUFFER_SIZE</name><argument_list pos:start="45:30" pos:end="45:72">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">src</name></expr></argument>, <argument pos:start="45:36" pos:end="45:42"><expr pos:start="45:36" pos:end="45:42"><name pos:start="45:36" pos:end="45:42">src_end</name></expr></argument>, <argument pos:start="45:45" pos:end="45:57"><expr pos:start="45:45" pos:end="45:57"><name pos:start="45:45" pos:end="45:49">count</name> <operator pos:start="45:51" pos:end="45:51">*</operator> <name pos:start="45:53" pos:end="45:57">depth</name></expr></argument>, <argument pos:start="45:60" pos:end="45:71"><expr pos:start="45:60" pos:end="45:71"><literal type="string" pos:start="45:60" pos:end="45:71">"image data"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <for pos:start="49:9" pos:end="103:9">for<control pos:start="49:12" pos:end="49:34">(<init pos:start="49:13" pos:end="49:18"><expr pos:start="49:13" pos:end="49:17"><name pos:start="49:13" pos:end="49:13">i</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">0</literal></expr>;</init> <condition pos:start="49:20" pos:end="49:29"><expr pos:start="49:20" pos:end="49:28"><name pos:start="49:20" pos:end="49:20">i</name> <operator pos:start="49:22" pos:end="49:22">&lt;</operator> <name pos:start="49:24" pos:end="49:28">count</name></expr>;</condition> <incr pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:31">i</name><operator pos:start="49:32" pos:end="49:33">++</operator></expr></incr>)</control><block pos:start="49:35" pos:end="103:9">{<block_content pos:start="51:13" pos:end="101:13">

            <switch pos:start="51:13" pos:end="81:13">switch<condition pos:start="51:19" pos:end="51:25">(<expr pos:start="51:20" pos:end="51:24"><name pos:start="51:20" pos:end="51:24">depth</name></expr>)</condition><block pos:start="51:26" pos:end="81:13">{<block_content pos:start="53:13" pos:end="79:22">

            <case pos:start="53:13" pos:end="53:19">case <expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">1</literal></expr>:</case>

                <expr_stmt pos:start="55:17" pos:end="55:28"><expr pos:start="55:17" pos:end="55:27"><operator pos:start="55:17" pos:end="55:17">*</operator><name pos:start="55:18" pos:end="55:20">dst</name> <operator pos:start="55:22" pos:end="55:22">=</operator> <operator pos:start="55:24" pos:end="55:24">*</operator><name pos:start="55:25" pos:end="55:27">src</name></expr>;</expr_stmt>

                <break pos:start="57:17" pos:end="57:22">break;</break>

            <case pos:start="59:13" pos:end="59:19">case <expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">2</literal></expr>:</case>

                <expr_stmt pos:start="61:17" pos:end="61:45"><expr pos:start="61:17" pos:end="61:44"><call pos:start="61:17" pos:end="61:44"><name pos:start="61:17" pos:end="61:24">AV_WN16A</name><argument_list pos:start="61:25" pos:end="61:44">(<argument pos:start="61:26" pos:end="61:28"><expr pos:start="61:26" pos:end="61:28"><name pos:start="61:26" pos:end="61:28">dst</name></expr></argument>, <argument pos:start="61:31" pos:end="61:43"><expr pos:start="61:31" pos:end="61:43"><call pos:start="61:31" pos:end="61:43"><name pos:start="61:31" pos:end="61:38">AV_RN16A</name><argument_list pos:start="61:39" pos:end="61:43">(<argument pos:start="61:40" pos:end="61:42"><expr pos:start="61:40" pos:end="61:42"><name pos:start="61:40" pos:end="61:42">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="63:17" pos:end="63:22">break;</break>

            <case pos:start="65:13" pos:end="65:19">case <expr pos:start="65:18" pos:end="65:18"><literal type="number" pos:start="65:18" pos:end="65:18">3</literal></expr>:</case>

                <expr_stmt pos:start="67:17" pos:end="67:32"><expr pos:start="67:17" pos:end="67:31"><name pos:start="67:17" pos:end="67:22"><name pos:start="67:17" pos:end="67:19">dst</name><index pos:start="67:20" pos:end="67:22">[<expr pos:start="67:21" pos:end="67:21"><literal type="number" pos:start="67:21" pos:end="67:21">0</literal></expr>]</index></name> <operator pos:start="67:24" pos:end="67:24">=</operator> <name pos:start="67:26" pos:end="67:31"><name pos:start="67:26" pos:end="67:28">src</name><index pos:start="67:29" pos:end="67:31">[<expr pos:start="67:30" pos:end="67:30"><literal type="number" pos:start="67:30" pos:end="67:30">0</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="69:17" pos:end="69:32"><expr pos:start="69:17" pos:end="69:31"><name pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:19">dst</name><index pos:start="69:20" pos:end="69:22">[<expr pos:start="69:21" pos:end="69:21"><literal type="number" pos:start="69:21" pos:end="69:21">1</literal></expr>]</index></name> <operator pos:start="69:24" pos:end="69:24">=</operator> <name pos:start="69:26" pos:end="69:31"><name pos:start="69:26" pos:end="69:28">src</name><index pos:start="69:29" pos:end="69:31">[<expr pos:start="69:30" pos:end="69:30"><literal type="number" pos:start="69:30" pos:end="69:30">1</literal></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="71:17" pos:end="71:32"><expr pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:22"><name pos:start="71:17" pos:end="71:19">dst</name><index pos:start="71:20" pos:end="71:22">[<expr pos:start="71:21" pos:end="71:21"><literal type="number" pos:start="71:21" pos:end="71:21">2</literal></expr>]</index></name> <operator pos:start="71:24" pos:end="71:24">=</operator> <name pos:start="71:26" pos:end="71:31"><name pos:start="71:26" pos:end="71:28">src</name><index pos:start="71:29" pos:end="71:31">[<expr pos:start="71:30" pos:end="71:30"><literal type="number" pos:start="71:30" pos:end="71:30">2</literal></expr>]</index></name></expr>;</expr_stmt>

                <break pos:start="73:17" pos:end="73:22">break;</break>

            <case pos:start="75:13" pos:end="75:19">case <expr pos:start="75:18" pos:end="75:18"><literal type="number" pos:start="75:18" pos:end="75:18">4</literal></expr>:</case>

                <expr_stmt pos:start="77:17" pos:end="77:45"><expr pos:start="77:17" pos:end="77:44"><call pos:start="77:17" pos:end="77:44"><name pos:start="77:17" pos:end="77:24">AV_WN32A</name><argument_list pos:start="77:25" pos:end="77:44">(<argument pos:start="77:26" pos:end="77:28"><expr pos:start="77:26" pos:end="77:28"><name pos:start="77:26" pos:end="77:28">dst</name></expr></argument>, <argument pos:start="77:31" pos:end="77:43"><expr pos:start="77:31" pos:end="77:43"><call pos:start="77:31" pos:end="77:43"><name pos:start="77:31" pos:end="77:38">AV_RN32A</name><argument_list pos:start="77:39" pos:end="77:43">(<argument pos:start="77:40" pos:end="77:42"><expr pos:start="77:40" pos:end="77:42"><name pos:start="77:40" pos:end="77:42">src</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="79:17" pos:end="79:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="83:13" pos:end="83:25"><expr pos:start="83:13" pos:end="83:24"><name pos:start="83:13" pos:end="83:15">dst</name> <operator pos:start="83:17" pos:end="83:18">+=</operator> <name pos:start="83:20" pos:end="83:24">depth</name></expr>;</expr_stmt>

            <if_stmt pos:start="85:13" pos:end="87:29"><if pos:start="85:13" pos:end="87:29">if<condition pos:start="85:15" pos:end="85:21">(<expr pos:start="85:16" pos:end="85:20"><operator pos:start="85:16" pos:end="85:16">!</operator><name pos:start="85:17" pos:end="85:20">type</name></expr>)</condition><block type="pseudo" pos:start="87:17" pos:end="87:29"><block_content pos:start="87:17" pos:end="87:29">

                <expr_stmt pos:start="87:17" pos:end="87:29"><expr pos:start="87:17" pos:end="87:28"><name pos:start="87:17" pos:end="87:19">src</name> <operator pos:start="87:21" pos:end="87:22">+=</operator> <name pos:start="87:24" pos:end="87:28">depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



            <expr_stmt pos:start="91:13" pos:end="91:16"><expr pos:start="91:13" pos:end="91:15"><name pos:start="91:13" pos:end="91:13">x</name><operator pos:start="91:14" pos:end="91:15">++</operator></expr>;</expr_stmt>

            <if_stmt pos:start="93:13" pos:end="101:13"><if pos:start="93:13" pos:end="101:13">if<condition pos:start="93:15" pos:end="93:22">(<expr pos:start="93:16" pos:end="93:21"><name pos:start="93:16" pos:end="93:16">x</name> <operator pos:start="93:18" pos:end="93:19">==</operator> <name pos:start="93:21" pos:end="93:21">w</name></expr>)</condition><block pos:start="93:23" pos:end="101:13">{<block_content pos:start="95:17" pos:end="99:28">

                <expr_stmt pos:start="95:17" pos:end="95:22"><expr pos:start="95:17" pos:end="95:21"><name pos:start="95:17" pos:end="95:17">x</name> <operator pos:start="95:19" pos:end="95:19">=</operator> <literal type="number" pos:start="95:21" pos:end="95:21">0</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="97:17" pos:end="97:20"><expr pos:start="97:17" pos:end="97:19"><name pos:start="97:17" pos:end="97:17">y</name><operator pos:start="97:18" pos:end="97:19">++</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="99:17" pos:end="99:28"><expr pos:start="99:17" pos:end="99:27"><name pos:start="99:17" pos:end="99:19">dst</name> <operator pos:start="99:21" pos:end="99:22">+=</operator> <name pos:start="99:24" pos:end="99:27">diff</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

        <if_stmt pos:start="105:9" pos:end="107:25"><if pos:start="105:9" pos:end="107:25">if<condition pos:start="105:11" pos:end="105:16">(<expr pos:start="105:12" pos:end="105:15"><name pos:start="105:12" pos:end="105:15">type</name></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:25"><block_content pos:start="107:13" pos:end="107:25">

            <expr_stmt pos:start="107:13" pos:end="107:25"><expr pos:start="107:13" pos:end="107:24"><name pos:start="107:13" pos:end="107:15">src</name> <operator pos:start="107:17" pos:end="107:18">+=</operator> <name pos:start="107:20" pos:end="107:24">depth</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="111:5" pos:end="111:20">return <expr pos:start="111:12" pos:end="111:19"><name pos:start="111:12" pos:end="111:19">src_size</name></expr>;</return>

</block_content>}</block></function>
</unit>
