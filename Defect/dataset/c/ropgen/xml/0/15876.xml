<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15876.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:44">block_dirty_bitmap_clear_prepare</name><parameter_list pos:start="1:45" pos:end="3:58">(<parameter pos:start="1:46" pos:end="1:67"><decl pos:start="1:46" pos:end="1:67"><type pos:start="1:46" pos:end="1:67"><name pos:start="1:46" pos:end="1:59">BlkActionState</name> <modifier pos:start="1:61" pos:end="1:61">*</modifier></type><name pos:start="1:62" pos:end="1:67">common</name></decl></parameter>,

                                             <parameter pos:start="3:46" pos:end="3:57"><decl pos:start="3:46" pos:end="3:57"><type pos:start="3:46" pos:end="3:57"><name pos:start="3:46" pos:end="3:50">Error</name> <modifier pos:start="3:52" pos:end="3:52">*</modifier><modifier pos:start="3:53" pos:end="3:53">*</modifier></type><name pos:start="3:54" pos:end="3:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="59:59">

    <decl_stmt pos:start="7:5" pos:end="9:61"><decl pos:start="7:5" pos:end="9:60"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:25">BlockDirtyBitmapState</name> <modifier pos:start="7:27" pos:end="7:27">*</modifier></type><name pos:start="7:28" pos:end="7:32">state</name> <init pos:start="7:34" pos:end="9:60">= <expr pos:start="7:36" pos:end="9:60"><call pos:start="7:36" pos:end="9:60"><name pos:start="7:36" pos:end="7:44">DO_UPCAST</name><argument_list pos:start="7:45" pos:end="9:60">(<argument pos:start="7:46" pos:end="7:66"><expr pos:start="7:46" pos:end="7:66"><name pos:start="7:46" pos:end="7:66">BlockDirtyBitmapState</name></expr></argument>,

                                             <argument pos:start="9:46" pos:end="9:51"><expr pos:start="9:46" pos:end="9:51"><name pos:start="9:46" pos:end="9:51">common</name></expr></argument>, <argument pos:start="9:54" pos:end="9:59"><expr pos:start="9:54" pos:end="9:59"><name pos:start="9:54" pos:end="9:59">common</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:29"><decl pos:start="11:5" pos:end="11:28"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:20">BlockDirtyBitmap</name> <modifier pos:start="11:22" pos:end="11:22">*</modifier></type><name pos:start="11:23" pos:end="11:28">action</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="19:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:55">(<expr pos:start="15:9" pos:end="15:54"><call pos:start="15:9" pos:end="15:50"><name pos:start="15:9" pos:end="15:36">action_check_completion_mode</name><argument_list pos:start="15:37" pos:end="15:50">(<argument pos:start="15:38" pos:end="15:43"><expr pos:start="15:38" pos:end="15:43"><name pos:start="15:38" pos:end="15:43">common</name></expr></argument>, <argument pos:start="15:46" pos:end="15:49"><expr pos:start="15:46" pos:end="15:49"><name pos:start="15:46" pos:end="15:49">errp</name></expr></argument>)</argument_list></call> <operator pos:start="15:52" pos:end="15:52">&lt;</operator> <literal type="number" pos:start="15:54" pos:end="15:54">0</literal></expr>)</condition> <block pos:start="15:57" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:15">

        <return pos:start="17:9" pos:end="17:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:61"><expr pos:start="23:5" pos:end="23:60"><name pos:start="23:5" pos:end="23:10">action</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <name pos:start="23:14" pos:end="23:60"><name pos:start="23:14" pos:end="23:19">common</name><operator pos:start="23:20" pos:end="23:21">-&gt;</operator><name pos:start="23:22" pos:end="23:27">action</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:30">u</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:55">block_dirty_bitmap_clear</name><operator pos:start="23:56" pos:end="23:56">.</operator><name pos:start="23:57" pos:end="23:60">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="33:52"><expr pos:start="25:5" pos:end="33:51"><name pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:9">state</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:17">bitmap</name></name> <operator pos:start="25:19" pos:end="25:19">=</operator> <call pos:start="25:21" pos:end="33:51"><name pos:start="25:21" pos:end="25:45">block_dirty_bitmap_lookup</name><argument_list pos:start="25:46" pos:end="33:51">(<argument pos:start="25:47" pos:end="25:58"><expr pos:start="25:47" pos:end="25:58"><name pos:start="25:47" pos:end="25:58"><name pos:start="25:47" pos:end="25:52">action</name><operator pos:start="25:53" pos:end="25:54">-&gt;</operator><name pos:start="25:55" pos:end="25:58">node</name></name></expr></argument>,

                                              <argument pos:start="27:47" pos:end="27:58"><expr pos:start="27:47" pos:end="27:58"><name pos:start="27:47" pos:end="27:58"><name pos:start="27:47" pos:end="27:52">action</name><operator pos:start="27:53" pos:end="27:54">-&gt;</operator><name pos:start="27:55" pos:end="27:58">name</name></name></expr></argument>,

                                              <argument pos:start="29:47" pos:end="29:56"><expr pos:start="29:47" pos:end="29:56"><operator pos:start="29:47" pos:end="29:47">&amp;</operator><name pos:start="29:48" pos:end="29:56"><name pos:start="29:48" pos:end="29:52">state</name><operator pos:start="29:53" pos:end="29:54">-&gt;</operator><name pos:start="29:55" pos:end="29:56">bs</name></name></expr></argument>,

                                              <argument pos:start="31:47" pos:end="31:65"><expr pos:start="31:47" pos:end="31:65"><operator pos:start="31:47" pos:end="31:47">&amp;</operator><name pos:start="31:48" pos:end="31:65"><name pos:start="31:48" pos:end="31:52">state</name><operator pos:start="31:53" pos:end="31:54">-&gt;</operator><name pos:start="31:55" pos:end="31:65">aio_context</name></name></expr></argument>,

                                              <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="35:5" pos:end="39:5"><if pos:start="35:5" pos:end="39:5">if <condition pos:start="35:8" pos:end="35:23">(<expr pos:start="35:9" pos:end="35:22"><operator pos:start="35:9" pos:end="35:9">!</operator><name pos:start="35:10" pos:end="35:22"><name pos:start="35:10" pos:end="35:14">state</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:22">bitmap</name></name></expr>)</condition> <block pos:start="35:25" pos:end="39:5">{<block_content pos:start="37:9" pos:end="37:15">

        <return pos:start="37:9" pos:end="37:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="43:5" pos:end="55:5"><if pos:start="43:5" pos:end="49:5">if <condition pos:start="43:8" pos:end="43:48">(<expr pos:start="43:9" pos:end="43:47"><call pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:32">bdrv_dirty_bitmap_frozen</name><argument_list pos:start="43:33" pos:end="43:47">(<argument pos:start="43:34" pos:end="43:46"><expr pos:start="43:34" pos:end="43:46"><name pos:start="43:34" pos:end="43:46"><name pos:start="43:34" pos:end="43:38">state</name><operator pos:start="43:39" pos:end="43:40">-&gt;</operator><name pos:start="43:41" pos:end="43:46">bitmap</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="43:50" pos:end="49:5">{<block_content pos:start="45:9" pos:end="47:15">

        <expr_stmt pos:start="45:9" pos:end="45:58"><expr pos:start="45:9" pos:end="45:57"><call pos:start="45:9" pos:end="45:57"><name pos:start="45:9" pos:end="45:18">error_setg</name><argument_list pos:start="45:19" pos:end="45:57">(<argument pos:start="45:20" pos:end="45:23"><expr pos:start="45:20" pos:end="45:23"><name pos:start="45:20" pos:end="45:23">errp</name></expr></argument>, <argument pos:start="45:26" pos:end="45:56"><expr pos:start="45:26" pos:end="45:56"><literal type="string" pos:start="45:26" pos:end="45:56">"Cannot modify a frozen bitmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:15">return;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="49:7" pos:end="55:5">else if <condition pos:start="49:15" pos:end="49:57">(<expr pos:start="49:16" pos:end="49:56"><operator pos:start="49:16" pos:end="49:16">!</operator><call pos:start="49:17" pos:end="49:56"><name pos:start="49:17" pos:end="49:41">bdrv_dirty_bitmap_enabled</name><argument_list pos:start="49:42" pos:end="49:56">(<argument pos:start="49:43" pos:end="49:55"><expr pos:start="49:43" pos:end="49:55"><name pos:start="49:43" pos:end="49:55"><name pos:start="49:43" pos:end="49:47">state</name><operator pos:start="49:48" pos:end="49:49">-&gt;</operator><name pos:start="49:50" pos:end="49:55">bitmap</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="49:59" pos:end="55:5">{<block_content pos:start="51:9" pos:end="53:15">

        <expr_stmt pos:start="51:9" pos:end="51:59"><expr pos:start="51:9" pos:end="51:58"><call pos:start="51:9" pos:end="51:58"><name pos:start="51:9" pos:end="51:18">error_setg</name><argument_list pos:start="51:19" pos:end="51:58">(<argument pos:start="51:20" pos:end="51:23"><expr pos:start="51:20" pos:end="51:23"><name pos:start="51:20" pos:end="51:23">errp</name></expr></argument>, <argument pos:start="51:26" pos:end="51:57"><expr pos:start="51:26" pos:end="51:57"><literal type="string" pos:start="51:26" pos:end="51:57">"Cannot clear a disabled bitmap"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="53:9" pos:end="53:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:59"><expr pos:start="59:5" pos:end="59:58"><call pos:start="59:5" pos:end="59:58"><name pos:start="59:5" pos:end="59:27">bdrv_clear_dirty_bitmap</name><argument_list pos:start="59:28" pos:end="59:58">(<argument pos:start="59:29" pos:end="59:41"><expr pos:start="59:29" pos:end="59:41"><name pos:start="59:29" pos:end="59:41"><name pos:start="59:29" pos:end="59:33">state</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:41">bitmap</name></name></expr></argument>, <argument pos:start="59:44" pos:end="59:57"><expr pos:start="59:44" pos:end="59:57"><operator pos:start="59:44" pos:end="59:44">&amp;</operator><name pos:start="59:45" pos:end="59:57"><name pos:start="59:45" pos:end="59:49">state</name><operator pos:start="59:50" pos:end="59:51">-&gt;</operator><name pos:start="59:52" pos:end="59:57">backup</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="61:5" pos:end="61:44">/* AioContext is released in .clean() */</comment>

</block_content>}</block></function>
</unit>
