<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15329.c" pos:tabs="8"><function pos:start="1:1" pos:end="153:1"><type pos:start="1:1" pos:end="1:28"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:23">av_always_inline</name> <name pos:start="1:25" pos:end="1:28">void</name></type> <name pos:start="1:30" pos:end="1:51">dnxhd_decode_dct_block</name><parameter_list pos:start="1:52" pos:end="11:68">(<parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:64">DNXHDContext</name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:69">ctx</name></decl></parameter>,

                                                    <parameter pos:start="3:53" pos:end="3:66"><decl pos:start="3:53" pos:end="3:66"><type pos:start="3:53" pos:end="3:66"><name pos:start="3:53" pos:end="3:59">DCTELEM</name> <modifier pos:start="3:61" pos:end="3:61">*</modifier></type><name pos:start="3:62" pos:end="3:66">block</name></decl></parameter>, <parameter pos:start="3:69" pos:end="3:73"><decl pos:start="3:69" pos:end="3:73"><type pos:start="3:69" pos:end="3:73"><name pos:start="3:69" pos:end="3:71">int</name></type> <name pos:start="3:73" pos:end="3:73">n</name></decl></parameter>,

                                                    <parameter pos:start="5:53" pos:end="5:62"><decl pos:start="5:53" pos:end="5:62"><type pos:start="5:53" pos:end="5:62"><name pos:start="5:53" pos:end="5:55">int</name></type> <name pos:start="5:57" pos:end="5:62">qscale</name></decl></parameter>,

                                                    <parameter pos:start="7:53" pos:end="7:66"><decl pos:start="7:53" pos:end="7:66"><type pos:start="7:53" pos:end="7:66"><name pos:start="7:53" pos:end="7:55">int</name></type> <name pos:start="7:57" pos:end="7:66">index_bits</name></decl></parameter>,

                                                    <parameter pos:start="9:53" pos:end="9:66"><decl pos:start="9:53" pos:end="9:66"><type pos:start="9:53" pos:end="9:66"><name pos:start="9:53" pos:end="9:55">int</name></type> <name pos:start="9:57" pos:end="9:66">level_bias</name></decl></parameter>,

                                                    <parameter pos:start="11:53" pos:end="11:67"><decl pos:start="11:53" pos:end="11:67"><type pos:start="11:53" pos:end="11:67"><name pos:start="11:53" pos:end="11:55">int</name></type> <name pos:start="11:57" pos:end="11:67">level_shift</name></decl></parameter>)</parameter_list>

<block pos:start="13:1" pos:end="153:1">{<block_content pos:start="15:5" pos:end="151:31">

    <decl_stmt pos:start="15:5" pos:end="15:34"><decl pos:start="15:5" pos:end="15:9"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:9">i</name></decl>, <decl pos:start="15:12" pos:end="15:12"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:12" pos:end="15:12">j</name></decl>, <decl pos:start="15:15" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:15" pos:end="15:20">index1</name></decl>, <decl pos:start="15:23" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:23" pos:end="15:28">index2</name></decl>, <decl pos:start="15:31" pos:end="15:33"><type ref="prev" pos:start="15:5" pos:end="15:7"/><name pos:start="15:31" pos:end="15:33">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:31"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:7"><name pos:start="17:5" pos:end="17:7">int</name></type> <name pos:start="17:9" pos:end="17:13">level</name></decl>, <decl pos:start="17:16" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:16" pos:end="17:24">component</name></decl>, <decl pos:start="17:27" pos:end="17:30"><type ref="prev" pos:start="17:5" pos:end="17:7"/><name pos:start="17:27" pos:end="17:30">sign</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:33"><decl pos:start="19:5" pos:end="19:32"><type pos:start="19:5" pos:end="19:19"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:17">uint8_t</name> <modifier pos:start="19:19" pos:end="19:19">*</modifier></type><name pos:start="19:20" pos:end="19:32">weight_matrix</name></decl>;</decl_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:30"><expr pos:start="21:5" pos:end="21:29"><call pos:start="21:5" pos:end="21:29"><name pos:start="21:5" pos:end="21:15">OPEN_READER</name><argument_list pos:start="21:16" pos:end="21:29">(<argument pos:start="21:17" pos:end="21:18"><expr pos:start="21:17" pos:end="21:18"><name pos:start="21:17" pos:end="21:18">bs</name></expr></argument>, <argument pos:start="21:21" pos:end="21:28"><expr pos:start="21:21" pos:end="21:28"><operator pos:start="21:21" pos:end="21:21">&amp;</operator><name pos:start="21:22" pos:end="21:28"><name pos:start="21:22" pos:end="21:24">ctx</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:28">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="31:5">if <condition pos:start="25:8" pos:end="25:12">(<expr pos:start="25:9" pos:end="25:11"><name pos:start="25:9" pos:end="25:9">n</name><operator pos:start="25:10" pos:end="25:10">&amp;</operator><literal type="number" pos:start="25:11" pos:end="25:11">2</literal></expr>)</condition> <block pos:start="25:14" pos:end="31:5">{<block_content pos:start="27:9" pos:end="29:54">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:17">component</name> <operator pos:start="27:19" pos:end="27:19">=</operator> <literal type="number" pos:start="27:21" pos:end="27:23">1</literal> <operator pos:start="27:23" pos:end="27:23">+</operator> <operator pos:start="27:25" pos:end="27:25">(</operator><name pos:start="27:26" pos:end="27:26">n</name><operator pos:start="27:27" pos:end="27:27">&amp;</operator><literal type="number" pos:start="27:28" pos:end="27:28">1</literal><operator pos:start="27:29" pos:end="27:29">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:54"><expr pos:start="29:9" pos:end="29:53"><name pos:start="29:9" pos:end="29:21">weight_matrix</name> <operator pos:start="29:23" pos:end="29:23">=</operator> <name pos:start="29:25" pos:end="29:53"><name pos:start="29:25" pos:end="29:27">ctx</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:38">cid_table</name><operator pos:start="29:39" pos:end="29:40">-&gt;</operator><name pos:start="29:41" pos:end="29:53">chroma_weight</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="31:7" pos:end="37:5">else <block pos:start="31:12" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:52">

        <expr_stmt pos:start="33:9" pos:end="33:22"><expr pos:start="33:9" pos:end="33:21"><name pos:start="33:9" pos:end="33:17">component</name> <operator pos:start="33:19" pos:end="33:19">=</operator> <literal type="number" pos:start="33:21" pos:end="33:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:52"><expr pos:start="35:9" pos:end="35:51"><name pos:start="35:9" pos:end="35:21">weight_matrix</name> <operator pos:start="35:23" pos:end="35:23">=</operator> <name pos:start="35:25" pos:end="35:51"><name pos:start="35:25" pos:end="35:27">ctx</name><operator pos:start="35:28" pos:end="35:29">-&gt;</operator><name pos:start="35:30" pos:end="35:38">cid_table</name><operator pos:start="35:39" pos:end="35:40">-&gt;</operator><name pos:start="35:41" pos:end="35:51">luma_weight</name></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:31"><expr pos:start="41:5" pos:end="41:30"><call pos:start="41:5" pos:end="41:30"><name pos:start="41:5" pos:end="41:16">UPDATE_CACHE</name><argument_list pos:start="41:17" pos:end="41:30">(<argument pos:start="41:18" pos:end="41:19"><expr pos:start="41:18" pos:end="41:19"><name pos:start="41:18" pos:end="41:19">bs</name></expr></argument>, <argument pos:start="41:22" pos:end="41:29"><expr pos:start="41:22" pos:end="41:29"><operator pos:start="41:22" pos:end="41:22">&amp;</operator><name pos:start="41:23" pos:end="41:29"><name pos:start="41:23" pos:end="41:25">ctx</name><operator pos:start="41:26" pos:end="41:27">-&gt;</operator><name pos:start="41:28" pos:end="41:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:72"><expr pos:start="43:5" pos:end="43:71"><call pos:start="43:5" pos:end="43:71"><name pos:start="43:5" pos:end="43:11">GET_VLC</name><argument_list pos:start="43:12" pos:end="43:71">(<argument pos:start="43:13" pos:end="43:15"><expr pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">len</name></expr></argument>, <argument pos:start="43:18" pos:end="43:19"><expr pos:start="43:18" pos:end="43:19"><name pos:start="43:18" pos:end="43:19">bs</name></expr></argument>, <argument pos:start="43:22" pos:end="43:29"><expr pos:start="43:22" pos:end="43:29"><operator pos:start="43:22" pos:end="43:22">&amp;</operator><name pos:start="43:23" pos:end="43:29"><name pos:start="43:23" pos:end="43:25">ctx</name><operator pos:start="43:26" pos:end="43:27">-&gt;</operator><name pos:start="43:28" pos:end="43:29">gb</name></name></expr></argument>, <argument pos:start="43:32" pos:end="43:48"><expr pos:start="43:32" pos:end="43:48"><name pos:start="43:32" pos:end="43:48"><name pos:start="43:32" pos:end="43:34">ctx</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:42">dc_vlc</name><operator pos:start="43:43" pos:end="43:43">.</operator><name pos:start="43:44" pos:end="43:48">table</name></name></expr></argument>, <argument pos:start="43:51" pos:end="43:67"><expr pos:start="43:51" pos:end="43:67"><name pos:start="43:51" pos:end="43:67">DNXHD_DC_VLC_BITS</name></expr></argument>, <argument pos:start="43:70" pos:end="43:70"><expr pos:start="43:70" pos:end="43:70"><literal type="number" pos:start="43:70" pos:end="43:70">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="57:5"><if pos:start="45:5" pos:end="57:5">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">len</name></expr>)</condition> <block pos:start="45:14" pos:end="57:5">{<block_content pos:start="47:9" pos:end="55:41">

        <expr_stmt pos:start="47:9" pos:end="47:40"><expr pos:start="47:9" pos:end="47:39"><name pos:start="47:9" pos:end="47:13">level</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:39"><name pos:start="47:17" pos:end="47:25">GET_CACHE</name><argument_list pos:start="47:26" pos:end="47:39">(<argument pos:start="47:27" pos:end="47:28"><expr pos:start="47:27" pos:end="47:28"><name pos:start="47:27" pos:end="47:28">bs</name></expr></argument>, <argument pos:start="47:31" pos:end="47:38"><expr pos:start="47:31" pos:end="47:38"><operator pos:start="47:31" pos:end="47:31">&amp;</operator><name pos:start="47:32" pos:end="47:38"><name pos:start="47:32" pos:end="47:34">ctx</name><operator pos:start="47:35" pos:end="47:36">-&gt;</operator><name pos:start="47:37" pos:end="47:38">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:42"><expr pos:start="49:9" pos:end="49:41"><call pos:start="49:9" pos:end="49:41"><name pos:start="49:9" pos:end="49:22">LAST_SKIP_BITS</name><argument_list pos:start="49:23" pos:end="49:41">(<argument pos:start="49:24" pos:end="49:25"><expr pos:start="49:24" pos:end="49:25"><name pos:start="49:24" pos:end="49:25">bs</name></expr></argument>, <argument pos:start="49:28" pos:end="49:35"><expr pos:start="49:28" pos:end="49:35"><operator pos:start="49:28" pos:end="49:28">&amp;</operator><name pos:start="49:29" pos:end="49:35"><name pos:start="49:29" pos:end="49:31">ctx</name><operator pos:start="49:32" pos:end="49:33">-&gt;</operator><name pos:start="49:34" pos:end="49:35">gb</name></name></expr></argument>, <argument pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:40">len</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="51:9" pos:end="51:29"><expr pos:start="51:9" pos:end="51:28"><name pos:start="51:9" pos:end="51:12">sign</name>  <operator pos:start="51:15" pos:end="51:15">=</operator> <operator pos:start="51:17" pos:end="51:17">~</operator><name pos:start="51:18" pos:end="51:22">level</name> <operator pos:start="51:24" pos:end="51:25">&gt;&gt;</operator> <literal type="number" pos:start="51:27" pos:end="51:28">31</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:61"><expr pos:start="53:9" pos:end="53:60"><name pos:start="53:9" pos:end="53:13">level</name> <operator pos:start="53:15" pos:end="53:15">=</operator> <operator pos:start="53:17" pos:end="53:17">(</operator><call pos:start="53:18" pos:end="53:45"><name pos:start="53:18" pos:end="53:26">NEG_USR32</name><argument_list pos:start="53:27" pos:end="53:45">(<argument pos:start="53:28" pos:end="53:39"><expr pos:start="53:28" pos:end="53:39"><name pos:start="53:28" pos:end="53:31">sign</name> <operator pos:start="53:33" pos:end="53:33">^</operator> <name pos:start="53:35" pos:end="53:39">level</name></expr></argument>, <argument pos:start="53:42" pos:end="53:44"><expr pos:start="53:42" pos:end="53:44"><name pos:start="53:42" pos:end="53:44">len</name></expr></argument>)</argument_list></call> <operator pos:start="53:47" pos:end="53:47">^</operator> <name pos:start="53:49" pos:end="53:52">sign</name><operator pos:start="53:53" pos:end="53:53">)</operator> <operator pos:start="53:55" pos:end="53:55">-</operator> <name pos:start="53:57" pos:end="53:60">sign</name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:31"><name pos:start="55:9" pos:end="55:11">ctx</name><operator pos:start="55:12" pos:end="55:13">-&gt;</operator><name pos:start="55:14" pos:end="55:20">last_dc</name><index pos:start="55:21" pos:end="55:31">[<expr pos:start="55:22" pos:end="55:30"><name pos:start="55:22" pos:end="55:30">component</name></expr>]</index></name> <operator pos:start="55:33" pos:end="55:34">+=</operator> <name pos:start="55:36" pos:end="55:40">level</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:39"><expr pos:start="59:5" pos:end="59:38"><name pos:start="59:5" pos:end="59:12"><name pos:start="59:5" pos:end="59:9">block</name><index pos:start="59:10" pos:end="59:12">[<expr pos:start="59:11" pos:end="59:11"><literal type="number" pos:start="59:11" pos:end="59:11">0</literal></expr>]</index></name> <operator pos:start="59:14" pos:end="59:14">=</operator> <name pos:start="59:16" pos:end="59:38"><name pos:start="59:16" pos:end="59:18">ctx</name><operator pos:start="59:19" pos:end="59:20">-&gt;</operator><name pos:start="59:21" pos:end="59:27">last_dc</name><index pos:start="59:28" pos:end="59:38">[<expr pos:start="59:29" pos:end="59:37"><name pos:start="59:29" pos:end="59:37">component</name></expr>]</index></name></expr>;</expr_stmt>

    <comment type="line" pos:start="61:5" pos:end="61:60">//av_log(ctx-&gt;avctx, AV_LOG_DEBUG, "dc %d\n", block[0]);</comment>



    <for pos:start="65:5" pos:end="147:5">for <control pos:start="65:9" pos:end="65:22">(<init pos:start="65:10" pos:end="65:15"><expr pos:start="65:10" pos:end="65:14"><name pos:start="65:10" pos:end="65:10">i</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <literal type="number" pos:start="65:14" pos:end="65:14">1</literal></expr>;</init> <condition pos:start="65:17" pos:end="65:17">;</condition> <incr pos:start="65:19" pos:end="65:21"><expr pos:start="65:19" pos:end="65:21"><name pos:start="65:19" pos:end="65:19">i</name><operator pos:start="65:20" pos:end="65:21">++</operator></expr></incr>)</control> <block pos:start="65:24" pos:end="147:5">{<block_content pos:start="67:9" pos:end="145:39">

        <expr_stmt pos:start="67:9" pos:end="67:35"><expr pos:start="67:9" pos:end="67:34"><call pos:start="67:9" pos:end="67:34"><name pos:start="67:9" pos:end="67:20">UPDATE_CACHE</name><argument_list pos:start="67:21" pos:end="67:34">(<argument pos:start="67:22" pos:end="67:23"><expr pos:start="67:22" pos:end="67:23"><name pos:start="67:22" pos:end="67:23">bs</name></expr></argument>, <argument pos:start="67:26" pos:end="67:33"><expr pos:start="67:26" pos:end="67:33"><operator pos:start="67:26" pos:end="67:26">&amp;</operator><name pos:start="67:27" pos:end="67:33"><name pos:start="67:27" pos:end="67:29">ctx</name><operator pos:start="67:30" pos:end="67:31">-&gt;</operator><name pos:start="67:32" pos:end="67:33">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="69:9" pos:end="71:35"><expr pos:start="69:9" pos:end="71:34"><call pos:start="69:9" pos:end="71:34"><name pos:start="69:9" pos:end="69:15">GET_VLC</name><argument_list pos:start="69:16" pos:end="71:34">(<argument pos:start="69:17" pos:end="69:22"><expr pos:start="69:17" pos:end="69:22"><name pos:start="69:17" pos:end="69:22">index1</name></expr></argument>, <argument pos:start="69:25" pos:end="69:26"><expr pos:start="69:25" pos:end="69:26"><name pos:start="69:25" pos:end="69:26">bs</name></expr></argument>, <argument pos:start="69:29" pos:end="69:36"><expr pos:start="69:29" pos:end="69:36"><operator pos:start="69:29" pos:end="69:29">&amp;</operator><name pos:start="69:30" pos:end="69:36"><name pos:start="69:30" pos:end="69:32">ctx</name><operator pos:start="69:33" pos:end="69:34">-&gt;</operator><name pos:start="69:35" pos:end="69:36">gb</name></name></expr></argument>, <argument pos:start="69:39" pos:end="69:55"><expr pos:start="69:39" pos:end="69:55"><name pos:start="69:39" pos:end="69:55"><name pos:start="69:39" pos:end="69:41">ctx</name><operator pos:start="69:42" pos:end="69:43">-&gt;</operator><name pos:start="69:44" pos:end="69:49">ac_vlc</name><operator pos:start="69:50" pos:end="69:50">.</operator><name pos:start="69:51" pos:end="69:55">table</name></name></expr></argument>,

                <argument pos:start="71:17" pos:end="71:30"><expr pos:start="71:17" pos:end="71:30"><name pos:start="71:17" pos:end="71:30">DNXHD_VLC_BITS</name></expr></argument>, <argument pos:start="71:33" pos:end="71:33"><expr pos:start="71:33" pos:end="71:33"><literal type="number" pos:start="71:33" pos:end="71:33">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="line" pos:start="73:9" pos:end="73:65">//av_log(ctx-&gt;avctx, AV_LOG_DEBUG, "index %d\n", index1);</comment>

        <expr_stmt pos:start="75:9" pos:end="75:49"><expr pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:13">level</name> <operator pos:start="75:15" pos:end="75:15">=</operator> <name pos:start="75:17" pos:end="75:48"><name pos:start="75:17" pos:end="75:19">ctx</name><operator pos:start="75:20" pos:end="75:21">-&gt;</operator><name pos:start="75:22" pos:end="75:30">cid_table</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:40">ac_level</name><index pos:start="75:41" pos:end="75:48">[<expr pos:start="75:42" pos:end="75:47"><name pos:start="75:42" pos:end="75:47">index1</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="77:9" pos:end="83:9"><if pos:start="77:9" pos:end="83:9">if <condition pos:start="77:12" pos:end="77:19">(<expr pos:start="77:13" pos:end="77:18"><operator pos:start="77:13" pos:end="77:13">!</operator><name pos:start="77:14" pos:end="77:18">level</name></expr>)</condition> <block pos:start="77:21" pos:end="83:9">{<block_content pos:start="81:13" pos:end="81:18"> <comment type="block" pos:start="77:23" pos:end="77:31">/* EOB */</comment>

            <comment type="line" pos:start="79:13" pos:end="79:56">//av_log(ctx-&gt;avctx, AV_LOG_DEBUG, "EOB\n");</comment>

            <break pos:start="81:13" pos:end="81:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="87:9" pos:end="87:43"><expr pos:start="87:9" pos:end="87:42"><name pos:start="87:9" pos:end="87:12">sign</name> <operator pos:start="87:14" pos:end="87:14">=</operator> <call pos:start="87:16" pos:end="87:42"><name pos:start="87:16" pos:end="87:25">SHOW_SBITS</name><argument_list pos:start="87:26" pos:end="87:42">(<argument pos:start="87:27" pos:end="87:28"><expr pos:start="87:27" pos:end="87:28"><name pos:start="87:27" pos:end="87:28">bs</name></expr></argument>, <argument pos:start="87:31" pos:end="87:38"><expr pos:start="87:31" pos:end="87:38"><operator pos:start="87:31" pos:end="87:31">&amp;</operator><name pos:start="87:32" pos:end="87:38"><name pos:start="87:32" pos:end="87:34">ctx</name><operator pos:start="87:35" pos:end="87:36">-&gt;</operator><name pos:start="87:37" pos:end="87:38">gb</name></name></expr></argument>, <argument pos:start="87:41" pos:end="87:41"><expr pos:start="87:41" pos:end="87:41"><literal type="number" pos:start="87:41" pos:end="87:41">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:35"><expr pos:start="89:9" pos:end="89:34"><call pos:start="89:9" pos:end="89:34"><name pos:start="89:9" pos:end="89:17">SKIP_BITS</name><argument_list pos:start="89:18" pos:end="89:34">(<argument pos:start="89:19" pos:end="89:20"><expr pos:start="89:19" pos:end="89:20"><name pos:start="89:19" pos:end="89:20">bs</name></expr></argument>, <argument pos:start="89:23" pos:end="89:30"><expr pos:start="89:23" pos:end="89:30"><operator pos:start="89:23" pos:end="89:23">&amp;</operator><name pos:start="89:24" pos:end="89:30"><name pos:start="89:24" pos:end="89:26">ctx</name><operator pos:start="89:27" pos:end="89:28">-&gt;</operator><name pos:start="89:29" pos:end="89:30">gb</name></name></expr></argument>, <argument pos:start="89:33" pos:end="89:33"><expr pos:start="89:33" pos:end="89:33"><literal type="number" pos:start="89:33" pos:end="89:33">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="93:9" pos:end="99:9"><if pos:start="93:9" pos:end="99:9">if <condition pos:start="93:12" pos:end="93:50">(<expr pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:49"><name pos:start="93:13" pos:end="93:15">ctx</name><operator pos:start="93:16" pos:end="93:17">-&gt;</operator><name pos:start="93:18" pos:end="93:26">cid_table</name><operator pos:start="93:27" pos:end="93:28">-&gt;</operator><name pos:start="93:29" pos:end="93:41">ac_index_flag</name><index pos:start="93:42" pos:end="93:49">[<expr pos:start="93:43" pos:end="93:48"><name pos:start="93:43" pos:end="93:48">index1</name></expr>]</index></name></expr>)</condition> <block pos:start="93:52" pos:end="99:9">{<block_content pos:start="95:13" pos:end="97:48">

            <expr_stmt pos:start="95:13" pos:end="95:63"><expr pos:start="95:13" pos:end="95:62"><name pos:start="95:13" pos:end="95:17">level</name> <operator pos:start="95:19" pos:end="95:20">+=</operator> <call pos:start="95:22" pos:end="95:57"><name pos:start="95:22" pos:end="95:31">SHOW_UBITS</name><argument_list pos:start="95:32" pos:end="95:57">(<argument pos:start="95:33" pos:end="95:34"><expr pos:start="95:33" pos:end="95:34"><name pos:start="95:33" pos:end="95:34">bs</name></expr></argument>, <argument pos:start="95:37" pos:end="95:44"><expr pos:start="95:37" pos:end="95:44"><operator pos:start="95:37" pos:end="95:37">&amp;</operator><name pos:start="95:38" pos:end="95:44"><name pos:start="95:38" pos:end="95:40">ctx</name><operator pos:start="95:41" pos:end="95:42">-&gt;</operator><name pos:start="95:43" pos:end="95:44">gb</name></name></expr></argument>, <argument pos:start="95:47" pos:end="95:56"><expr pos:start="95:47" pos:end="95:56"><name pos:start="95:47" pos:end="95:56">index_bits</name></expr></argument>)</argument_list></call> <operator pos:start="95:59" pos:end="95:60">&lt;&lt;</operator> <literal type="number" pos:start="95:62" pos:end="95:62">6</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><call pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:21">SKIP_BITS</name><argument_list pos:start="97:22" pos:end="97:47">(<argument pos:start="97:23" pos:end="97:24"><expr pos:start="97:23" pos:end="97:24"><name pos:start="97:23" pos:end="97:24">bs</name></expr></argument>, <argument pos:start="97:27" pos:end="97:34"><expr pos:start="97:27" pos:end="97:34"><operator pos:start="97:27" pos:end="97:27">&amp;</operator><name pos:start="97:28" pos:end="97:34"><name pos:start="97:28" pos:end="97:30">ctx</name><operator pos:start="97:31" pos:end="97:32">-&gt;</operator><name pos:start="97:33" pos:end="97:34">gb</name></name></expr></argument>, <argument pos:start="97:37" pos:end="97:46"><expr pos:start="97:37" pos:end="97:46"><name pos:start="97:37" pos:end="97:46">index_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="103:9" pos:end="113:9"><if pos:start="103:9" pos:end="113:9">if <condition pos:start="103:12" pos:end="103:48">(<expr pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:47"><name pos:start="103:13" pos:end="103:15">ctx</name><operator pos:start="103:16" pos:end="103:17">-&gt;</operator><name pos:start="103:18" pos:end="103:26">cid_table</name><operator pos:start="103:27" pos:end="103:28">-&gt;</operator><name pos:start="103:29" pos:end="103:39">ac_run_flag</name><index pos:start="103:40" pos:end="103:47">[<expr pos:start="103:41" pos:end="103:46"><name pos:start="103:41" pos:end="103:46">index1</name></expr>]</index></name></expr>)</condition> <block pos:start="103:50" pos:end="113:9">{<block_content pos:start="105:13" pos:end="111:45">

            <expr_stmt pos:start="105:13" pos:end="105:39"><expr pos:start="105:13" pos:end="105:38"><call pos:start="105:13" pos:end="105:38"><name pos:start="105:13" pos:end="105:24">UPDATE_CACHE</name><argument_list pos:start="105:25" pos:end="105:38">(<argument pos:start="105:26" pos:end="105:27"><expr pos:start="105:26" pos:end="105:27"><name pos:start="105:26" pos:end="105:27">bs</name></expr></argument>, <argument pos:start="105:30" pos:end="105:37"><expr pos:start="105:30" pos:end="105:37"><operator pos:start="105:30" pos:end="105:30">&amp;</operator><name pos:start="105:31" pos:end="105:37"><name pos:start="105:31" pos:end="105:33">ctx</name><operator pos:start="105:34" pos:end="105:35">-&gt;</operator><name pos:start="105:36" pos:end="105:37">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="107:13" pos:end="109:39"><expr pos:start="107:13" pos:end="109:38"><call pos:start="107:13" pos:end="109:38"><name pos:start="107:13" pos:end="107:19">GET_VLC</name><argument_list pos:start="107:20" pos:end="109:38">(<argument pos:start="107:21" pos:end="107:26"><expr pos:start="107:21" pos:end="107:26"><name pos:start="107:21" pos:end="107:26">index2</name></expr></argument>, <argument pos:start="107:29" pos:end="107:30"><expr pos:start="107:29" pos:end="107:30"><name pos:start="107:29" pos:end="107:30">bs</name></expr></argument>, <argument pos:start="107:33" pos:end="107:40"><expr pos:start="107:33" pos:end="107:40"><operator pos:start="107:33" pos:end="107:33">&amp;</operator><name pos:start="107:34" pos:end="107:40"><name pos:start="107:34" pos:end="107:36">ctx</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:40">gb</name></name></expr></argument>, <argument pos:start="107:43" pos:end="107:60"><expr pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:60"><name pos:start="107:43" pos:end="107:45">ctx</name><operator pos:start="107:46" pos:end="107:47">-&gt;</operator><name pos:start="107:48" pos:end="107:54">run_vlc</name><operator pos:start="107:55" pos:end="107:55">.</operator><name pos:start="107:56" pos:end="107:60">table</name></name></expr></argument>,

                    <argument pos:start="109:21" pos:end="109:34"><expr pos:start="109:21" pos:end="109:34"><name pos:start="109:21" pos:end="109:34">DNXHD_VLC_BITS</name></expr></argument>, <argument pos:start="109:37" pos:end="109:37"><expr pos:start="109:37" pos:end="109:37"><literal type="number" pos:start="109:37" pos:end="109:37">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="111:13" pos:end="111:45"><expr pos:start="111:13" pos:end="111:44"><name pos:start="111:13" pos:end="111:13">i</name> <operator pos:start="111:15" pos:end="111:16">+=</operator> <name pos:start="111:18" pos:end="111:44"><name pos:start="111:18" pos:end="111:20">ctx</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:31">cid_table</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:36">run</name><index pos:start="111:37" pos:end="111:44">[<expr pos:start="111:38" pos:end="111:43"><name pos:start="111:38" pos:end="111:43">index2</name></expr>]</index></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="117:9" pos:end="123:9"><if pos:start="117:9" pos:end="123:9">if <condition pos:start="117:12" pos:end="117:19">(<expr pos:start="117:13" pos:end="117:18"><name pos:start="117:13" pos:end="117:13">i</name> <operator pos:start="117:15" pos:end="117:15">&gt;</operator> <literal type="number" pos:start="117:17" pos:end="117:18">63</literal></expr>)</condition> <block pos:start="117:21" pos:end="123:9">{<block_content pos:start="119:13" pos:end="121:18">

            <expr_stmt pos:start="119:13" pos:end="119:78"><expr pos:start="119:13" pos:end="119:77"><call pos:start="119:13" pos:end="119:77"><name pos:start="119:13" pos:end="119:18">av_log</name><argument_list pos:start="119:19" pos:end="119:77">(<argument pos:start="119:20" pos:end="119:29"><expr pos:start="119:20" pos:end="119:29"><name pos:start="119:20" pos:end="119:29"><name pos:start="119:20" pos:end="119:22">ctx</name><operator pos:start="119:23" pos:end="119:24">-&gt;</operator><name pos:start="119:25" pos:end="119:29">avctx</name></name></expr></argument>, <argument pos:start="119:32" pos:end="119:43"><expr pos:start="119:32" pos:end="119:43"><name pos:start="119:32" pos:end="119:43">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="119:46" pos:end="119:70"><expr pos:start="119:46" pos:end="119:70"><literal type="string" pos:start="119:46" pos:end="119:70">"ac tex damaged %d, %d\n"</literal></expr></argument>, <argument pos:start="119:73" pos:end="119:73"><expr pos:start="119:73" pos:end="119:73"><name pos:start="119:73" pos:end="119:73">n</name></expr></argument>, <argument pos:start="119:76" pos:end="119:76"><expr pos:start="119:76" pos:end="119:76"><name pos:start="119:76" pos:end="119:76">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="121:13" pos:end="121:18">break;</break>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="127:9" pos:end="127:41"><expr pos:start="127:9" pos:end="127:40"><name pos:start="127:9" pos:end="127:9">j</name> <operator pos:start="127:11" pos:end="127:11">=</operator> <name pos:start="127:13" pos:end="127:40"><name pos:start="127:13" pos:end="127:15">ctx</name><operator pos:start="127:16" pos:end="127:17">-&gt;</operator><name pos:start="127:18" pos:end="127:26">scantable</name><operator pos:start="127:27" pos:end="127:27">.</operator><name pos:start="127:28" pos:end="127:37">permutated</name><index pos:start="127:38" pos:end="127:40">[<expr pos:start="127:39" pos:end="127:39"><name pos:start="127:39" pos:end="127:39">i</name></expr>]</index></name></expr>;</expr_stmt>

        <comment type="line" pos:start="129:9" pos:end="129:56">//av_log(ctx-&gt;avctx, AV_LOG_DEBUG, "j %d\n", j);</comment>

        <comment type="line" pos:start="131:9" pos:end="131:93">//av_log(ctx-&gt;avctx, AV_LOG_DEBUG, "level %d, weight %d\n", level, weight_matrix[i]);</comment>

        <expr_stmt pos:start="133:9" pos:end="133:56"><expr pos:start="133:9" pos:end="133:55"><name pos:start="133:9" pos:end="133:13">level</name> <operator pos:start="133:15" pos:end="133:15">=</operator> <operator pos:start="133:17" pos:end="133:17">(</operator><literal type="number" pos:start="133:18" pos:end="133:18">2</literal><operator pos:start="133:19" pos:end="133:19">*</operator><name pos:start="133:20" pos:end="133:24">level</name><operator pos:start="133:25" pos:end="133:25">+</operator><literal type="number" pos:start="133:26" pos:end="133:26">1</literal><operator pos:start="133:27" pos:end="133:27">)</operator> <operator pos:start="133:29" pos:end="133:29">*</operator> <name pos:start="133:31" pos:end="133:36">qscale</name> <operator pos:start="133:38" pos:end="133:38">*</operator> <name pos:start="133:40" pos:end="133:55"><name pos:start="133:40" pos:end="133:52">weight_matrix</name><index pos:start="133:53" pos:end="133:55">[<expr pos:start="133:54" pos:end="133:54"><name pos:start="133:54" pos:end="133:54">i</name></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="135:9" pos:end="137:32"><if pos:start="135:9" pos:end="137:32">if <condition pos:start="135:12" pos:end="135:62">(<expr pos:start="135:13" pos:end="135:61"><name pos:start="135:13" pos:end="135:22">level_bias</name> <operator pos:start="135:24" pos:end="135:24">&lt;</operator> <literal type="number" pos:start="135:26" pos:end="135:27">32</literal> <operator pos:start="135:29" pos:end="135:30">||</operator> <name pos:start="135:32" pos:end="135:47"><name pos:start="135:32" pos:end="135:44">weight_matrix</name><index pos:start="135:45" pos:end="135:47">[<expr pos:start="135:46" pos:end="135:46"><name pos:start="135:46" pos:end="135:46">i</name></expr>]</index></name> <operator pos:start="135:49" pos:end="135:50">!=</operator> <name pos:start="135:52" pos:end="135:61">level_bias</name></expr>)</condition><block type="pseudo" pos:start="137:13" pos:end="137:32"><block_content pos:start="137:13" pos:end="137:32">

            <expr_stmt pos:start="137:13" pos:end="137:32"><expr pos:start="137:13" pos:end="137:31"><name pos:start="137:13" pos:end="137:17">level</name> <operator pos:start="137:19" pos:end="137:20">+=</operator> <name pos:start="137:22" pos:end="137:31">level_bias</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="139:9" pos:end="139:30"><expr pos:start="139:9" pos:end="139:29"><name pos:start="139:9" pos:end="139:13">level</name> <operator pos:start="139:15" pos:end="139:17">&gt;&gt;=</operator> <name pos:start="139:19" pos:end="139:29">level_shift</name></expr>;</expr_stmt>



        <comment type="line" pos:start="143:9" pos:end="143:80">//av_log(NULL, AV_LOG_DEBUG, "i %d, j %d, end level %d\n", i, j, level);</comment>

        <expr_stmt pos:start="145:9" pos:end="145:39"><expr pos:start="145:9" pos:end="145:38"><name pos:start="145:9" pos:end="145:16"><name pos:start="145:9" pos:end="145:13">block</name><index pos:start="145:14" pos:end="145:16">[<expr pos:start="145:15" pos:end="145:15"><name pos:start="145:15" pos:end="145:15">j</name></expr>]</index></name> <operator pos:start="145:18" pos:end="145:18">=</operator> <operator pos:start="145:20" pos:end="145:20">(</operator><name pos:start="145:21" pos:end="145:25">level</name><operator pos:start="145:26" pos:end="145:26">^</operator><name pos:start="145:27" pos:end="145:30">sign</name><operator pos:start="145:31" pos:end="145:31">)</operator> <operator pos:start="145:33" pos:end="145:33">-</operator> <name pos:start="145:35" pos:end="145:38">sign</name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <expr_stmt pos:start="151:5" pos:end="151:31"><expr pos:start="151:5" pos:end="151:30"><call pos:start="151:5" pos:end="151:30"><name pos:start="151:5" pos:end="151:16">CLOSE_READER</name><argument_list pos:start="151:17" pos:end="151:30">(<argument pos:start="151:18" pos:end="151:19"><expr pos:start="151:18" pos:end="151:19"><name pos:start="151:18" pos:end="151:19">bs</name></expr></argument>, <argument pos:start="151:22" pos:end="151:29"><expr pos:start="151:22" pos:end="151:29"><operator pos:start="151:22" pos:end="151:22">&amp;</operator><name pos:start="151:23" pos:end="151:29"><name pos:start="151:23" pos:end="151:25">ctx</name><operator pos:start="151:26" pos:end="151:27">-&gt;</operator><name pos:start="151:28" pos:end="151:29">gb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
