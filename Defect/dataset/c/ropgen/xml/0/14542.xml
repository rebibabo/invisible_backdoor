<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14542.c" pos:tabs="8"><function pos:start="1:1" pos:end="55:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">qnull_visit_test</name><parameter_list pos:start="1:29" pos:end="1:34">(<parameter pos:start="1:30" pos:end="1:33"><decl pos:start="1:30" pos:end="1:33"><type pos:start="1:30" pos:end="1:33"><name pos:start="1:30" pos:end="1:33">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="55:1">{<block_content pos:start="5:5" pos:end="53:33">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">QObject</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:16">obj</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:22"><name pos:start="7:5" pos:end="7:20">QmpOutputVisitor</name> <modifier pos:start="7:22" pos:end="7:22">*</modifier></type><name pos:start="7:23" pos:end="7:25">qov</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:13"><name pos:start="9:5" pos:end="9:11">Visitor</name> <modifier pos:start="9:13" pos:end="9:13">*</modifier></type><name pos:start="9:14" pos:end="9:14">v</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="21:7">/*

     * Most tests of interactions between QObject and visitors are in

     * test-qmp-*-visitor; but these tests live here because they

     * depend on layering violations to check qnull_ refcnt.

     */</comment>



    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><call pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:12">g_assert</name><argument_list pos:start="25:13" pos:end="25:32">(<argument pos:start="25:14" pos:end="25:31"><expr pos:start="25:14" pos:end="25:31"><name pos:start="25:14" pos:end="25:26"><name pos:start="25:14" pos:end="25:19">qnull_</name><operator pos:start="25:20" pos:end="25:20">.</operator><name pos:start="25:21" pos:end="25:26">refcnt</name></name> <operator pos:start="25:28" pos:end="25:29">==</operator> <literal type="number" pos:start="25:31" pos:end="25:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:18"><expr pos:start="27:5" pos:end="27:17"><name pos:start="27:5" pos:end="27:7">obj</name> <operator pos:start="27:9" pos:end="27:9">=</operator> <call pos:start="27:11" pos:end="27:17"><name pos:start="27:11" pos:end="27:15">qnull</name><argument_list pos:start="27:16" pos:end="27:17">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:5">v</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:40"><name pos:start="29:9" pos:end="29:29">qmp_input_visitor_new</name><argument_list pos:start="29:30" pos:end="29:40">(<argument pos:start="29:31" pos:end="29:33"><expr pos:start="29:31" pos:end="29:33"><name pos:start="29:31" pos:end="29:33">obj</name></expr></argument>, <argument pos:start="29:36" pos:end="29:39"><expr pos:start="29:36" pos:end="29:39"><name pos:start="29:36" pos:end="29:39">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:24"><expr pos:start="31:5" pos:end="31:23"><call pos:start="31:5" pos:end="31:23"><name pos:start="31:5" pos:end="31:18">qobject_decref</name><argument_list pos:start="31:19" pos:end="31:23">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:43"><expr pos:start="33:5" pos:end="33:42"><call pos:start="33:5" pos:end="33:42"><name pos:start="33:5" pos:end="33:19">visit_type_null</name><argument_list pos:start="33:20" pos:end="33:42">(<argument pos:start="33:21" pos:end="33:21"><expr pos:start="33:21" pos:end="33:21"><name pos:start="33:21" pos:end="33:21">v</name></expr></argument>, <argument pos:start="33:24" pos:end="33:27"><expr pos:start="33:24" pos:end="33:27"><name pos:start="33:24" pos:end="33:27">NULL</name></expr></argument>, <argument pos:start="33:30" pos:end="33:41"><expr pos:start="33:30" pos:end="33:41"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:41">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:18"><expr pos:start="35:5" pos:end="35:17"><call pos:start="35:5" pos:end="35:17"><name pos:start="35:5" pos:end="35:14">visit_free</name><argument_list pos:start="35:15" pos:end="35:17">(<argument pos:start="35:16" pos:end="35:16"><expr pos:start="35:16" pos:end="35:16"><name pos:start="35:16" pos:end="35:16">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:35"><expr pos:start="39:5" pos:end="39:34"><name pos:start="39:5" pos:end="39:7">qov</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:34"><name pos:start="39:11" pos:end="39:32">qmp_output_visitor_new</name><argument_list pos:start="39:33" pos:end="39:34">()</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:69"><expr pos:start="41:5" pos:end="41:68"><call pos:start="41:5" pos:end="41:68"><name pos:start="41:5" pos:end="41:19">visit_type_null</name><argument_list pos:start="41:20" pos:end="41:68">(<argument pos:start="41:21" pos:end="41:47"><expr pos:start="41:21" pos:end="41:47"><call pos:start="41:21" pos:end="41:47"><name pos:start="41:21" pos:end="41:42">qmp_output_get_visitor</name><argument_list pos:start="41:43" pos:end="41:47">(<argument pos:start="41:44" pos:end="41:46"><expr pos:start="41:44" pos:end="41:46"><name pos:start="41:44" pos:end="41:46">qov</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="41:50" pos:end="41:53"><expr pos:start="41:50" pos:end="41:53"><name pos:start="41:50" pos:end="41:53">NULL</name></expr></argument>, <argument pos:start="41:56" pos:end="41:67"><expr pos:start="41:56" pos:end="41:67"><operator pos:start="41:56" pos:end="41:56">&amp;</operator><name pos:start="41:57" pos:end="41:67">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:38"><expr pos:start="43:5" pos:end="43:37"><name pos:start="43:5" pos:end="43:7">obj</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:37"><name pos:start="43:11" pos:end="43:32">qmp_output_get_qobject</name><argument_list pos:start="43:33" pos:end="43:37">(<argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">qov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><call pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:12">g_assert</name><argument_list pos:start="45:13" pos:end="45:28">(<argument pos:start="45:14" pos:end="45:27"><expr pos:start="45:14" pos:end="45:27"><name pos:start="45:14" pos:end="45:16">obj</name> <operator pos:start="45:18" pos:end="45:19">==</operator> <operator pos:start="45:21" pos:end="45:21">&amp;</operator><name pos:start="45:22" pos:end="45:27">qnull_</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:24"><expr pos:start="47:5" pos:end="47:23"><call pos:start="47:5" pos:end="47:23"><name pos:start="47:5" pos:end="47:18">qobject_decref</name><argument_list pos:start="47:19" pos:end="47:23">(<argument pos:start="47:20" pos:end="47:22"><expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">obj</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:36"><expr pos:start="49:5" pos:end="49:35"><call pos:start="49:5" pos:end="49:35"><name pos:start="49:5" pos:end="49:30">qmp_output_visitor_cleanup</name><argument_list pos:start="49:31" pos:end="49:35">(<argument pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:34">qov</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:33"><expr pos:start="53:5" pos:end="53:32"><call pos:start="53:5" pos:end="53:32"><name pos:start="53:5" pos:end="53:12">g_assert</name><argument_list pos:start="53:13" pos:end="53:32">(<argument pos:start="53:14" pos:end="53:31"><expr pos:start="53:14" pos:end="53:31"><name pos:start="53:14" pos:end="53:26"><name pos:start="53:14" pos:end="53:19">qnull_</name><operator pos:start="53:20" pos:end="53:20">.</operator><name pos:start="53:21" pos:end="53:26">refcnt</name></name> <operator pos:start="53:28" pos:end="53:29">==</operator> <literal type="number" pos:start="53:31" pos:end="53:31">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
