<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25277.c" pos:tabs="8"><function pos:start="1:1" pos:end="193:1"><type pos:start="1:1" pos:end="1:6"><name pos:start="1:1" pos:end="1:6">size_t</name></type> <name pos:start="1:8" pos:end="1:21">v9fs_unmarshal</name><parameter_list pos:start="1:22" pos:end="3:54">(<parameter pos:start="1:23" pos:end="1:42"><decl pos:start="1:23" pos:end="1:42"><type pos:start="1:23" pos:end="1:42"><name pos:start="1:23" pos:end="1:34"><name pos:start="1:23" pos:end="1:28">struct</name> <name pos:start="1:30" pos:end="1:34">iovec</name></name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">out_sg</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:55"><decl pos:start="1:45" pos:end="1:55"><type pos:start="1:45" pos:end="1:55"><name pos:start="1:45" pos:end="1:47">int</name></type> <name pos:start="1:49" pos:end="1:55">out_num</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:70"><decl pos:start="1:58" pos:end="1:70"><type pos:start="1:58" pos:end="1:70"><name pos:start="1:58" pos:end="1:63">size_t</name></type> <name pos:start="1:65" pos:end="1:70">offset</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:31"><decl pos:start="3:23" pos:end="3:31"><type pos:start="3:23" pos:end="3:31"><name pos:start="3:23" pos:end="3:25">int</name></type> <name pos:start="3:27" pos:end="3:31">bswap</name></decl></parameter>, <parameter pos:start="3:34" pos:end="3:48"><decl pos:start="3:34" pos:end="3:48"><type pos:start="3:34" pos:end="3:48"><specifier pos:start="3:34" pos:end="3:38">const</specifier> <name pos:start="3:40" pos:end="3:43">char</name> <modifier pos:start="3:45" pos:end="3:45">*</modifier></type><name pos:start="3:46" pos:end="3:48">fmt</name></decl></parameter>, <parameter pos:start="3:51" pos:end="3:53"><decl pos:start="3:51" pos:end="3:53"><type pos:start="3:51" pos:end="3:53"><modifier pos:start="3:51" pos:end="3:53">...</modifier></type></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="193:1">{<block_content pos:start="7:5" pos:end="191:31">

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:15"><decl pos:start="9:5" pos:end="9:14"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">va_list</name></type> <name pos:start="9:13" pos:end="9:14">ap</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:10"><name pos:start="11:5" pos:end="11:10">size_t</name></type> <name pos:start="11:12" pos:end="11:21">old_offset</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><name pos:start="11:25" pos:end="11:30">offset</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:22"><expr pos:start="15:5" pos:end="15:21"><call pos:start="15:5" pos:end="15:21"><name pos:start="15:5" pos:end="15:12">va_start</name><argument_list pos:start="15:13" pos:end="15:21">(<argument pos:start="15:14" pos:end="15:15"><expr pos:start="15:14" pos:end="15:15"><name pos:start="15:14" pos:end="15:15">ap</name></expr></argument>, <argument pos:start="15:18" pos:end="15:20"><expr pos:start="15:18" pos:end="15:20"><name pos:start="15:18" pos:end="15:20">fmt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="17:5" pos:end="183:5">for <control pos:start="17:9" pos:end="17:28">(<init pos:start="17:10" pos:end="17:15"><expr pos:start="17:10" pos:end="17:14"><name pos:start="17:10" pos:end="17:10">i</name> <operator pos:start="17:12" pos:end="17:12">=</operator> <literal type="number" pos:start="17:14" pos:end="17:14">0</literal></expr>;</init> <condition pos:start="17:17" pos:end="17:23"><expr pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:22"><name pos:start="17:17" pos:end="17:19">fmt</name><index pos:start="17:20" pos:end="17:22">[<expr pos:start="17:21" pos:end="17:21"><name pos:start="17:21" pos:end="17:21">i</name></expr>]</index></name></expr>;</condition> <incr pos:start="17:25" pos:end="17:27"><expr pos:start="17:25" pos:end="17:27"><name pos:start="17:25" pos:end="17:25">i</name><operator pos:start="17:26" pos:end="17:27">++</operator></expr></incr>)</control> <block pos:start="17:30" pos:end="183:5">{<block_content pos:start="19:9" pos:end="181:9">

        <switch pos:start="19:9" pos:end="181:9">switch <condition pos:start="19:16" pos:end="19:23">(<expr pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:22"><name pos:start="19:17" pos:end="19:19">fmt</name><index pos:start="19:20" pos:end="19:22">[<expr pos:start="19:21" pos:end="19:21"><name pos:start="19:21" pos:end="19:21">i</name></expr>]</index></name></expr>)</condition> <block pos:start="19:25" pos:end="181:9">{<block_content pos:start="21:9" pos:end="179:18">

        <case pos:start="21:9" pos:end="21:17">case <expr pos:start="21:14" pos:end="21:16"><literal type="char" pos:start="21:14" pos:end="21:16">'b'</literal></expr>:</case> <block pos:start="21:19" pos:end="29:9">{<block_content pos:start="23:13" pos:end="27:18">

            <decl_stmt pos:start="23:13" pos:end="23:50"><decl pos:start="23:13" pos:end="23:49"><type pos:start="23:13" pos:end="23:21"><name pos:start="23:13" pos:end="23:19">uint8_t</name> <modifier pos:start="23:21" pos:end="23:21">*</modifier></type><name pos:start="23:22" pos:end="23:25">valp</name> <init pos:start="23:27" pos:end="23:49">= <expr pos:start="23:29" pos:end="23:49"><call pos:start="23:29" pos:end="23:49"><name pos:start="23:29" pos:end="23:34">va_arg</name><argument_list pos:start="23:35" pos:end="23:49">(<argument pos:start="23:36" pos:end="23:37"><expr pos:start="23:36" pos:end="23:37"><name pos:start="23:36" pos:end="23:37">ap</name></expr></argument>, <argument pos:start="23:40" pos:end="23:48"><expr pos:start="23:40" pos:end="23:48"><name pos:start="23:40" pos:end="23:46">uint8_t</name> <operator pos:start="23:48" pos:end="23:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="25:13" pos:end="25:80"><expr pos:start="25:13" pos:end="25:79"><name pos:start="25:13" pos:end="25:18">offset</name> <operator pos:start="25:20" pos:end="25:21">+=</operator> <call pos:start="25:23" pos:end="25:79"><name pos:start="25:23" pos:end="25:33">v9fs_unpack</name><argument_list pos:start="25:34" pos:end="25:79">(<argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">valp</name></expr></argument>, <argument pos:start="25:41" pos:end="25:46"><expr pos:start="25:41" pos:end="25:46"><name pos:start="25:41" pos:end="25:46">out_sg</name></expr></argument>, <argument pos:start="25:49" pos:end="25:55"><expr pos:start="25:49" pos:end="25:55"><name pos:start="25:49" pos:end="25:55">out_num</name></expr></argument>, <argument pos:start="25:58" pos:end="25:63"><expr pos:start="25:58" pos:end="25:63"><name pos:start="25:58" pos:end="25:63">offset</name></expr></argument>, <argument pos:start="25:66" pos:end="25:78"><expr pos:start="25:66" pos:end="25:78"><sizeof pos:start="25:66" pos:end="25:78">sizeof<argument_list pos:start="25:72" pos:end="25:78">(<argument pos:start="25:73" pos:end="25:77"><expr pos:start="25:73" pos:end="25:77"><operator pos:start="25:73" pos:end="25:73">*</operator><name pos:start="25:74" pos:end="25:77">valp</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="27:13" pos:end="27:18">break;</break>

        </block_content>}</block>

        <case pos:start="31:9" pos:end="31:17">case <expr pos:start="31:14" pos:end="31:16"><literal type="char" pos:start="31:14" pos:end="31:16">'w'</literal></expr>:</case> <block pos:start="31:19" pos:end="51:9">{<block_content pos:start="33:13" pos:end="49:18">

            <decl_stmt pos:start="33:13" pos:end="33:32"><decl pos:start="33:13" pos:end="33:24"><type pos:start="33:13" pos:end="33:20"><name pos:start="33:13" pos:end="33:20">uint16_t</name></type> <name pos:start="33:22" pos:end="33:24">val</name></decl>, <decl pos:start="33:27" pos:end="33:31"><type ref="prev" pos:start="33:13" pos:end="33:20"><modifier pos:start="33:27" pos:end="33:27">*</modifier></type><name pos:start="33:28" pos:end="33:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="35:13" pos:end="35:42"><expr pos:start="35:13" pos:end="35:41"><name pos:start="35:13" pos:end="35:16">valp</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <call pos:start="35:20" pos:end="35:41"><name pos:start="35:20" pos:end="35:25">va_arg</name><argument_list pos:start="35:26" pos:end="35:41">(<argument pos:start="35:27" pos:end="35:28"><expr pos:start="35:27" pos:end="35:28"><name pos:start="35:27" pos:end="35:28">ap</name></expr></argument>, <argument pos:start="35:31" pos:end="35:40"><expr pos:start="35:31" pos:end="35:40"><name pos:start="35:31" pos:end="35:38">uint16_t</name> <operator pos:start="35:40" pos:end="35:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:78"><expr pos:start="37:13" pos:end="37:77"><name pos:start="37:13" pos:end="37:18">offset</name> <operator pos:start="37:20" pos:end="37:21">+=</operator> <call pos:start="37:23" pos:end="37:77"><name pos:start="37:23" pos:end="37:33">v9fs_unpack</name><argument_list pos:start="37:34" pos:end="37:77">(<argument pos:start="37:35" pos:end="37:38"><expr pos:start="37:35" pos:end="37:38"><operator pos:start="37:35" pos:end="37:35">&amp;</operator><name pos:start="37:36" pos:end="37:38">val</name></expr></argument>, <argument pos:start="37:41" pos:end="37:46"><expr pos:start="37:41" pos:end="37:46"><name pos:start="37:41" pos:end="37:46">out_sg</name></expr></argument>, <argument pos:start="37:49" pos:end="37:55"><expr pos:start="37:49" pos:end="37:55"><name pos:start="37:49" pos:end="37:55">out_num</name></expr></argument>, <argument pos:start="37:58" pos:end="37:63"><expr pos:start="37:58" pos:end="37:63"><name pos:start="37:58" pos:end="37:63">offset</name></expr></argument>, <argument pos:start="37:66" pos:end="37:76"><expr pos:start="37:66" pos:end="37:76"><sizeof pos:start="37:66" pos:end="37:76">sizeof<argument_list pos:start="37:72" pos:end="37:76">(<argument pos:start="37:73" pos:end="37:75"><expr pos:start="37:73" pos:end="37:75"><name pos:start="37:73" pos:end="37:75">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="47:13"><if pos:start="39:13" pos:end="43:13">if <condition pos:start="39:16" pos:end="39:22">(<expr pos:start="39:17" pos:end="39:21"><name pos:start="39:17" pos:end="39:21">bswap</name></expr>)</condition> <block pos:start="39:24" pos:end="43:13">{<block_content pos:start="41:17" pos:end="41:41">

                <expr_stmt pos:start="41:17" pos:end="41:41"><expr pos:start="41:17" pos:end="41:40"><operator pos:start="41:17" pos:end="41:17">*</operator><name pos:start="41:18" pos:end="41:21">valp</name> <operator pos:start="41:23" pos:end="41:23">=</operator> <call pos:start="41:25" pos:end="41:40"><name pos:start="41:25" pos:end="41:35">le16_to_cpu</name><argument_list pos:start="41:36" pos:end="41:40">(<argument pos:start="41:37" pos:end="41:39"><expr pos:start="41:37" pos:end="41:39"><name pos:start="41:37" pos:end="41:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="43:15" pos:end="47:13">else <block pos:start="43:20" pos:end="47:13">{<block_content pos:start="45:17" pos:end="45:28">

                <expr_stmt pos:start="45:17" pos:end="45:28"><expr pos:start="45:17" pos:end="45:27"><operator pos:start="45:17" pos:end="45:17">*</operator><name pos:start="45:18" pos:end="45:21">valp</name> <operator pos:start="45:23" pos:end="45:23">=</operator> <name pos:start="45:25" pos:end="45:27">val</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="49:13" pos:end="49:18">break;</break>

        </block_content>}</block>

        <case pos:start="53:9" pos:end="53:17">case <expr pos:start="53:14" pos:end="53:16"><literal type="char" pos:start="53:14" pos:end="53:16">'d'</literal></expr>:</case> <block pos:start="53:19" pos:end="73:9">{<block_content pos:start="55:13" pos:end="71:18">

            <decl_stmt pos:start="55:13" pos:end="55:32"><decl pos:start="55:13" pos:end="55:24"><type pos:start="55:13" pos:end="55:20"><name pos:start="55:13" pos:end="55:20">uint32_t</name></type> <name pos:start="55:22" pos:end="55:24">val</name></decl>, <decl pos:start="55:27" pos:end="55:31"><type ref="prev" pos:start="55:13" pos:end="55:20"><modifier pos:start="55:27" pos:end="55:27">*</modifier></type><name pos:start="55:28" pos:end="55:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:42"><expr pos:start="57:13" pos:end="57:41"><name pos:start="57:13" pos:end="57:16">valp</name> <operator pos:start="57:18" pos:end="57:18">=</operator> <call pos:start="57:20" pos:end="57:41"><name pos:start="57:20" pos:end="57:25">va_arg</name><argument_list pos:start="57:26" pos:end="57:41">(<argument pos:start="57:27" pos:end="57:28"><expr pos:start="57:27" pos:end="57:28"><name pos:start="57:27" pos:end="57:28">ap</name></expr></argument>, <argument pos:start="57:31" pos:end="57:40"><expr pos:start="57:31" pos:end="57:40"><name pos:start="57:31" pos:end="57:38">uint32_t</name> <operator pos:start="57:40" pos:end="57:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:78"><expr pos:start="59:13" pos:end="59:77"><name pos:start="59:13" pos:end="59:18">offset</name> <operator pos:start="59:20" pos:end="59:21">+=</operator> <call pos:start="59:23" pos:end="59:77"><name pos:start="59:23" pos:end="59:33">v9fs_unpack</name><argument_list pos:start="59:34" pos:end="59:77">(<argument pos:start="59:35" pos:end="59:38"><expr pos:start="59:35" pos:end="59:38"><operator pos:start="59:35" pos:end="59:35">&amp;</operator><name pos:start="59:36" pos:end="59:38">val</name></expr></argument>, <argument pos:start="59:41" pos:end="59:46"><expr pos:start="59:41" pos:end="59:46"><name pos:start="59:41" pos:end="59:46">out_sg</name></expr></argument>, <argument pos:start="59:49" pos:end="59:55"><expr pos:start="59:49" pos:end="59:55"><name pos:start="59:49" pos:end="59:55">out_num</name></expr></argument>, <argument pos:start="59:58" pos:end="59:63"><expr pos:start="59:58" pos:end="59:63"><name pos:start="59:58" pos:end="59:63">offset</name></expr></argument>, <argument pos:start="59:66" pos:end="59:76"><expr pos:start="59:66" pos:end="59:76"><sizeof pos:start="59:66" pos:end="59:76">sizeof<argument_list pos:start="59:72" pos:end="59:76">(<argument pos:start="59:73" pos:end="59:75"><expr pos:start="59:73" pos:end="59:75"><name pos:start="59:73" pos:end="59:75">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="61:13" pos:end="69:13"><if pos:start="61:13" pos:end="65:13">if <condition pos:start="61:16" pos:end="61:22">(<expr pos:start="61:17" pos:end="61:21"><name pos:start="61:17" pos:end="61:21">bswap</name></expr>)</condition> <block pos:start="61:24" pos:end="65:13">{<block_content pos:start="63:17" pos:end="63:41">

                <expr_stmt pos:start="63:17" pos:end="63:41"><expr pos:start="63:17" pos:end="63:40"><operator pos:start="63:17" pos:end="63:17">*</operator><name pos:start="63:18" pos:end="63:21">valp</name> <operator pos:start="63:23" pos:end="63:23">=</operator> <call pos:start="63:25" pos:end="63:40"><name pos:start="63:25" pos:end="63:35">le32_to_cpu</name><argument_list pos:start="63:36" pos:end="63:40">(<argument pos:start="63:37" pos:end="63:39"><expr pos:start="63:37" pos:end="63:39"><name pos:start="63:37" pos:end="63:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="65:15" pos:end="69:13">else <block pos:start="65:20" pos:end="69:13">{<block_content pos:start="67:17" pos:end="67:28">

                <expr_stmt pos:start="67:17" pos:end="67:28"><expr pos:start="67:17" pos:end="67:27"><operator pos:start="67:17" pos:end="67:17">*</operator><name pos:start="67:18" pos:end="67:21">valp</name> <operator pos:start="67:23" pos:end="67:23">=</operator> <name pos:start="67:25" pos:end="67:27">val</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="71:13" pos:end="71:18">break;</break>

        </block_content>}</block>

        <case pos:start="75:9" pos:end="75:17">case <expr pos:start="75:14" pos:end="75:16"><literal type="char" pos:start="75:14" pos:end="75:16">'q'</literal></expr>:</case> <block pos:start="75:19" pos:end="95:9">{<block_content pos:start="77:13" pos:end="93:18">

            <decl_stmt pos:start="77:13" pos:end="77:32"><decl pos:start="77:13" pos:end="77:24"><type pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:20">uint64_t</name></type> <name pos:start="77:22" pos:end="77:24">val</name></decl>, <decl pos:start="77:27" pos:end="77:31"><type ref="prev" pos:start="77:13" pos:end="77:20"><modifier pos:start="77:27" pos:end="77:27">*</modifier></type><name pos:start="77:28" pos:end="77:31">valp</name></decl>;</decl_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:42"><expr pos:start="79:13" pos:end="79:41"><name pos:start="79:13" pos:end="79:16">valp</name> <operator pos:start="79:18" pos:end="79:18">=</operator> <call pos:start="79:20" pos:end="79:41"><name pos:start="79:20" pos:end="79:25">va_arg</name><argument_list pos:start="79:26" pos:end="79:41">(<argument pos:start="79:27" pos:end="79:28"><expr pos:start="79:27" pos:end="79:28"><name pos:start="79:27" pos:end="79:28">ap</name></expr></argument>, <argument pos:start="79:31" pos:end="79:40"><expr pos:start="79:31" pos:end="79:40"><name pos:start="79:31" pos:end="79:38">uint64_t</name> <operator pos:start="79:40" pos:end="79:40">*</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:78"><expr pos:start="81:13" pos:end="81:77"><name pos:start="81:13" pos:end="81:18">offset</name> <operator pos:start="81:20" pos:end="81:21">+=</operator> <call pos:start="81:23" pos:end="81:77"><name pos:start="81:23" pos:end="81:33">v9fs_unpack</name><argument_list pos:start="81:34" pos:end="81:77">(<argument pos:start="81:35" pos:end="81:38"><expr pos:start="81:35" pos:end="81:38"><operator pos:start="81:35" pos:end="81:35">&amp;</operator><name pos:start="81:36" pos:end="81:38">val</name></expr></argument>, <argument pos:start="81:41" pos:end="81:46"><expr pos:start="81:41" pos:end="81:46"><name pos:start="81:41" pos:end="81:46">out_sg</name></expr></argument>, <argument pos:start="81:49" pos:end="81:55"><expr pos:start="81:49" pos:end="81:55"><name pos:start="81:49" pos:end="81:55">out_num</name></expr></argument>, <argument pos:start="81:58" pos:end="81:63"><expr pos:start="81:58" pos:end="81:63"><name pos:start="81:58" pos:end="81:63">offset</name></expr></argument>, <argument pos:start="81:66" pos:end="81:76"><expr pos:start="81:66" pos:end="81:76"><sizeof pos:start="81:66" pos:end="81:76">sizeof<argument_list pos:start="81:72" pos:end="81:76">(<argument pos:start="81:73" pos:end="81:75"><expr pos:start="81:73" pos:end="81:75"><name pos:start="81:73" pos:end="81:75">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="91:13"><if pos:start="83:13" pos:end="87:13">if <condition pos:start="83:16" pos:end="83:22">(<expr pos:start="83:17" pos:end="83:21"><name pos:start="83:17" pos:end="83:21">bswap</name></expr>)</condition> <block pos:start="83:24" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:41">

                <expr_stmt pos:start="85:17" pos:end="85:41"><expr pos:start="85:17" pos:end="85:40"><operator pos:start="85:17" pos:end="85:17">*</operator><name pos:start="85:18" pos:end="85:21">valp</name> <operator pos:start="85:23" pos:end="85:23">=</operator> <call pos:start="85:25" pos:end="85:40"><name pos:start="85:25" pos:end="85:35">le64_to_cpu</name><argument_list pos:start="85:36" pos:end="85:40">(<argument pos:start="85:37" pos:end="85:39"><expr pos:start="85:37" pos:end="85:39"><name pos:start="85:37" pos:end="85:39">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="87:15" pos:end="91:13">else <block pos:start="87:20" pos:end="91:13">{<block_content pos:start="89:17" pos:end="89:28">

                <expr_stmt pos:start="89:17" pos:end="89:28"><expr pos:start="89:17" pos:end="89:27"><operator pos:start="89:17" pos:end="89:17">*</operator><name pos:start="89:18" pos:end="89:21">valp</name> <operator pos:start="89:23" pos:end="89:23">=</operator> <name pos:start="89:25" pos:end="89:27">val</name></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="93:13" pos:end="93:18">break;</break>

        </block_content>}</block>

        <case pos:start="97:9" pos:end="97:17">case <expr pos:start="97:14" pos:end="97:16"><literal type="char" pos:start="97:14" pos:end="97:16">'s'</literal></expr>:</case> <block pos:start="97:19" pos:end="117:9">{<block_content pos:start="99:13" pos:end="115:18">

            <decl_stmt pos:start="99:13" pos:end="99:55"><decl pos:start="99:13" pos:end="99:54"><type pos:start="99:13" pos:end="99:24"><name pos:start="99:13" pos:end="99:22">V9fsString</name> <modifier pos:start="99:24" pos:end="99:24">*</modifier></type><name pos:start="99:25" pos:end="99:27">str</name> <init pos:start="99:29" pos:end="99:54">= <expr pos:start="99:31" pos:end="99:54"><call pos:start="99:31" pos:end="99:54"><name pos:start="99:31" pos:end="99:36">va_arg</name><argument_list pos:start="99:37" pos:end="99:54">(<argument pos:start="99:38" pos:end="99:39"><expr pos:start="99:38" pos:end="99:39"><name pos:start="99:38" pos:end="99:39">ap</name></expr></argument>, <argument pos:start="99:42" pos:end="99:53"><expr pos:start="99:42" pos:end="99:53"><name pos:start="99:42" pos:end="99:51">V9fsString</name> <operator pos:start="99:53" pos:end="99:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="101:13" pos:end="103:45"><expr pos:start="101:13" pos:end="103:44"><name pos:start="101:13" pos:end="101:18">offset</name> <operator pos:start="101:20" pos:end="101:21">+=</operator> <call pos:start="101:23" pos:end="103:44"><name pos:start="101:23" pos:end="101:36">v9fs_unmarshal</name><argument_list pos:start="101:37" pos:end="103:44">(<argument pos:start="101:38" pos:end="101:43"><expr pos:start="101:38" pos:end="101:43"><name pos:start="101:38" pos:end="101:43">out_sg</name></expr></argument>, <argument pos:start="101:46" pos:end="101:52"><expr pos:start="101:46" pos:end="101:52"><name pos:start="101:46" pos:end="101:52">out_num</name></expr></argument>, <argument pos:start="101:55" pos:end="101:60"><expr pos:start="101:55" pos:end="101:60"><name pos:start="101:55" pos:end="101:60">offset</name></expr></argument>, <argument pos:start="101:63" pos:end="101:67"><expr pos:start="101:63" pos:end="101:67"><name pos:start="101:63" pos:end="101:67">bswap</name></expr></argument>,

                            <argument pos:start="103:29" pos:end="103:31"><expr pos:start="103:29" pos:end="103:31"><literal type="string" pos:start="103:29" pos:end="103:31">"w"</literal></expr></argument>, <argument pos:start="103:34" pos:end="103:43"><expr pos:start="103:34" pos:end="103:43"><operator pos:start="103:34" pos:end="103:34">&amp;</operator><name pos:start="103:35" pos:end="103:43"><name pos:start="103:35" pos:end="103:37">str</name><operator pos:start="103:38" pos:end="103:39">-&gt;</operator><name pos:start="103:40" pos:end="103:43">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="105:13" pos:end="105:47">/* FIXME: sanity check str-&gt;size */</comment>

            <expr_stmt pos:start="107:13" pos:end="107:48"><expr pos:start="107:13" pos:end="107:47"><name pos:start="107:13" pos:end="107:21"><name pos:start="107:13" pos:end="107:15">str</name><operator pos:start="107:16" pos:end="107:17">-&gt;</operator><name pos:start="107:18" pos:end="107:21">data</name></name> <operator pos:start="107:23" pos:end="107:23">=</operator> <call pos:start="107:25" pos:end="107:47"><name pos:start="107:25" pos:end="107:32">g_malloc</name><argument_list pos:start="107:33" pos:end="107:47">(<argument pos:start="107:34" pos:end="107:46"><expr pos:start="107:34" pos:end="107:46"><name pos:start="107:34" pos:end="107:42"><name pos:start="107:34" pos:end="107:36">str</name><operator pos:start="107:37" pos:end="107:38">-&gt;</operator><name pos:start="107:39" pos:end="107:42">size</name></name> <operator pos:start="107:44" pos:end="107:44">+</operator> <literal type="number" pos:start="107:46" pos:end="107:46">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="111:39"><expr pos:start="109:13" pos:end="111:38"><name pos:start="109:13" pos:end="109:18">offset</name> <operator pos:start="109:20" pos:end="109:21">+=</operator> <call pos:start="109:23" pos:end="111:38"><name pos:start="109:23" pos:end="109:33">v9fs_unpack</name><argument_list pos:start="109:34" pos:end="111:38">(<argument pos:start="109:35" pos:end="109:43"><expr pos:start="109:35" pos:end="109:43"><name pos:start="109:35" pos:end="109:43"><name pos:start="109:35" pos:end="109:37">str</name><operator pos:start="109:38" pos:end="109:39">-&gt;</operator><name pos:start="109:40" pos:end="109:43">data</name></name></expr></argument>, <argument pos:start="109:46" pos:end="109:51"><expr pos:start="109:46" pos:end="109:51"><name pos:start="109:46" pos:end="109:51">out_sg</name></expr></argument>, <argument pos:start="109:54" pos:end="109:60"><expr pos:start="109:54" pos:end="109:60"><name pos:start="109:54" pos:end="109:60">out_num</name></expr></argument>, <argument pos:start="109:63" pos:end="109:68"><expr pos:start="109:63" pos:end="109:68"><name pos:start="109:63" pos:end="109:68">offset</name></expr></argument>,

                            <argument pos:start="111:29" pos:end="111:37"><expr pos:start="111:29" pos:end="111:37"><name pos:start="111:29" pos:end="111:37"><name pos:start="111:29" pos:end="111:31">str</name><operator pos:start="111:32" pos:end="111:33">-&gt;</operator><name pos:start="111:34" pos:end="111:37">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="113:13" pos:end="113:37"><expr pos:start="113:13" pos:end="113:36"><name pos:start="113:13" pos:end="113:32"><name pos:start="113:13" pos:end="113:15">str</name><operator pos:start="113:16" pos:end="113:17">-&gt;</operator><name pos:start="113:18" pos:end="113:21">data</name><index pos:start="113:22" pos:end="113:32">[<expr pos:start="113:23" pos:end="113:31"><name pos:start="113:23" pos:end="113:31"><name pos:start="113:23" pos:end="113:25">str</name><operator pos:start="113:26" pos:end="113:27">-&gt;</operator><name pos:start="113:28" pos:end="113:31">size</name></name></expr>]</index></name> <operator pos:start="113:34" pos:end="113:34">=</operator> <literal type="number" pos:start="113:36" pos:end="113:36">0</literal></expr>;</expr_stmt>

            <break pos:start="115:13" pos:end="115:18">break;</break>

        </block_content>}</block>

        <case pos:start="119:9" pos:end="119:17">case <expr pos:start="119:14" pos:end="119:16"><literal type="char" pos:start="119:14" pos:end="119:16">'Q'</literal></expr>:</case> <block pos:start="119:19" pos:end="129:9">{<block_content pos:start="121:13" pos:end="127:18">

            <decl_stmt pos:start="121:13" pos:end="121:50"><decl pos:start="121:13" pos:end="121:49"><type pos:start="121:13" pos:end="121:21"><name pos:start="121:13" pos:end="121:19">V9fsQID</name> <modifier pos:start="121:21" pos:end="121:21">*</modifier></type><name pos:start="121:22" pos:end="121:25">qidp</name> <init pos:start="121:27" pos:end="121:49">= <expr pos:start="121:29" pos:end="121:49"><call pos:start="121:29" pos:end="121:49"><name pos:start="121:29" pos:end="121:34">va_arg</name><argument_list pos:start="121:35" pos:end="121:49">(<argument pos:start="121:36" pos:end="121:37"><expr pos:start="121:36" pos:end="121:37"><name pos:start="121:36" pos:end="121:37">ap</name></expr></argument>, <argument pos:start="121:40" pos:end="121:48"><expr pos:start="121:40" pos:end="121:48"><name pos:start="121:40" pos:end="121:46">V9fsQID</name> <operator pos:start="121:48" pos:end="121:48">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="123:13" pos:end="125:79"><expr pos:start="123:13" pos:end="125:78"><name pos:start="123:13" pos:end="123:18">offset</name> <operator pos:start="123:20" pos:end="123:21">+=</operator> <call pos:start="123:23" pos:end="125:78"><name pos:start="123:23" pos:end="123:36">v9fs_unmarshal</name><argument_list pos:start="123:37" pos:end="125:78">(<argument pos:start="123:38" pos:end="123:43"><expr pos:start="123:38" pos:end="123:43"><name pos:start="123:38" pos:end="123:43">out_sg</name></expr></argument>, <argument pos:start="123:46" pos:end="123:52"><expr pos:start="123:46" pos:end="123:52"><name pos:start="123:46" pos:end="123:52">out_num</name></expr></argument>, <argument pos:start="123:55" pos:end="123:60"><expr pos:start="123:55" pos:end="123:60"><name pos:start="123:55" pos:end="123:60">offset</name></expr></argument>, <argument pos:start="123:63" pos:end="123:67"><expr pos:start="123:63" pos:end="123:67"><name pos:start="123:63" pos:end="123:67">bswap</name></expr></argument>, <argument pos:start="123:70" pos:end="123:74"><expr pos:start="123:70" pos:end="123:74"><literal type="string" pos:start="123:70" pos:end="123:74">"bdq"</literal></expr></argument>,

                                     <argument pos:start="125:38" pos:end="125:48"><expr pos:start="125:38" pos:end="125:48"><operator pos:start="125:38" pos:end="125:38">&amp;</operator><name pos:start="125:39" pos:end="125:48"><name pos:start="125:39" pos:end="125:42">qidp</name><operator pos:start="125:43" pos:end="125:44">-&gt;</operator><name pos:start="125:45" pos:end="125:48">type</name></name></expr></argument>, <argument pos:start="125:51" pos:end="125:64"><expr pos:start="125:51" pos:end="125:64"><operator pos:start="125:51" pos:end="125:51">&amp;</operator><name pos:start="125:52" pos:end="125:64"><name pos:start="125:52" pos:end="125:55">qidp</name><operator pos:start="125:56" pos:end="125:57">-&gt;</operator><name pos:start="125:58" pos:end="125:64">version</name></name></expr></argument>, <argument pos:start="125:67" pos:end="125:77"><expr pos:start="125:67" pos:end="125:77"><operator pos:start="125:67" pos:end="125:67">&amp;</operator><name pos:start="125:68" pos:end="125:77"><name pos:start="125:68" pos:end="125:71">qidp</name><operator pos:start="125:72" pos:end="125:73">-&gt;</operator><name pos:start="125:74" pos:end="125:77">path</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="127:13" pos:end="127:18">break;</break>

        </block_content>}</block>

        <case pos:start="131:9" pos:end="131:17">case <expr pos:start="131:14" pos:end="131:16"><literal type="char" pos:start="131:14" pos:end="131:16">'S'</literal></expr>:</case> <block pos:start="131:19" pos:end="155:9">{<block_content pos:start="133:13" pos:end="153:18">

            <decl_stmt pos:start="133:13" pos:end="133:53"><decl pos:start="133:13" pos:end="133:52"><type pos:start="133:13" pos:end="133:22"><name pos:start="133:13" pos:end="133:20">V9fsStat</name> <modifier pos:start="133:22" pos:end="133:22">*</modifier></type><name pos:start="133:23" pos:end="133:27">statp</name> <init pos:start="133:29" pos:end="133:52">= <expr pos:start="133:31" pos:end="133:52"><call pos:start="133:31" pos:end="133:52"><name pos:start="133:31" pos:end="133:36">va_arg</name><argument_list pos:start="133:37" pos:end="133:52">(<argument pos:start="133:38" pos:end="133:39"><expr pos:start="133:38" pos:end="133:39"><name pos:start="133:38" pos:end="133:39">ap</name></expr></argument>, <argument pos:start="133:42" pos:end="133:51"><expr pos:start="133:42" pos:end="133:51"><name pos:start="133:42" pos:end="133:49">V9fsStat</name> <operator pos:start="133:51" pos:end="133:51">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="135:13" pos:end="151:53"><expr pos:start="135:13" pos:end="151:52"><name pos:start="135:13" pos:end="135:18">offset</name> <operator pos:start="135:20" pos:end="135:21">+=</operator> <call pos:start="135:23" pos:end="151:52"><name pos:start="135:23" pos:end="135:36">v9fs_unmarshal</name><argument_list pos:start="135:37" pos:end="151:52">(<argument pos:start="135:38" pos:end="135:43"><expr pos:start="135:38" pos:end="135:43"><name pos:start="135:38" pos:end="135:43">out_sg</name></expr></argument>, <argument pos:start="135:46" pos:end="135:52"><expr pos:start="135:46" pos:end="135:52"><name pos:start="135:46" pos:end="135:52">out_num</name></expr></argument>, <argument pos:start="135:55" pos:end="135:60"><expr pos:start="135:55" pos:end="135:60"><name pos:start="135:55" pos:end="135:60">offset</name></expr></argument>, <argument pos:start="135:63" pos:end="135:67"><expr pos:start="135:63" pos:end="135:67"><name pos:start="135:63" pos:end="135:67">bswap</name></expr></argument>,

                                    <argument pos:start="137:37" pos:end="137:54"><expr pos:start="137:37" pos:end="137:54"><literal type="string" pos:start="137:37" pos:end="137:54">"wwdQdddqsssssddd"</literal></expr></argument>,

                                     <argument pos:start="139:38" pos:end="139:49"><expr pos:start="139:38" pos:end="139:49"><operator pos:start="139:38" pos:end="139:38">&amp;</operator><name pos:start="139:39" pos:end="139:49"><name pos:start="139:39" pos:end="139:43">statp</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:49">size</name></name></expr></argument>, <argument pos:start="139:52" pos:end="139:63"><expr pos:start="139:52" pos:end="139:63"><operator pos:start="139:52" pos:end="139:52">&amp;</operator><name pos:start="139:53" pos:end="139:63"><name pos:start="139:53" pos:end="139:57">statp</name><operator pos:start="139:58" pos:end="139:59">-&gt;</operator><name pos:start="139:60" pos:end="139:63">type</name></name></expr></argument>, <argument pos:start="139:66" pos:end="139:76"><expr pos:start="139:66" pos:end="139:76"><operator pos:start="139:66" pos:end="139:66">&amp;</operator><name pos:start="139:67" pos:end="139:76"><name pos:start="139:67" pos:end="139:71">statp</name><operator pos:start="139:72" pos:end="139:73">-&gt;</operator><name pos:start="139:74" pos:end="139:76">dev</name></name></expr></argument>,

                                     <argument pos:start="141:38" pos:end="141:48"><expr pos:start="141:38" pos:end="141:48"><operator pos:start="141:38" pos:end="141:38">&amp;</operator><name pos:start="141:39" pos:end="141:48"><name pos:start="141:39" pos:end="141:43">statp</name><operator pos:start="141:44" pos:end="141:45">-&gt;</operator><name pos:start="141:46" pos:end="141:48">qid</name></name></expr></argument>, <argument pos:start="141:51" pos:end="141:62"><expr pos:start="141:51" pos:end="141:62"><operator pos:start="141:51" pos:end="141:51">&amp;</operator><name pos:start="141:52" pos:end="141:62"><name pos:start="141:52" pos:end="141:56">statp</name><operator pos:start="141:57" pos:end="141:58">-&gt;</operator><name pos:start="141:59" pos:end="141:62">mode</name></name></expr></argument>, <argument pos:start="141:65" pos:end="141:77"><expr pos:start="141:65" pos:end="141:77"><operator pos:start="141:65" pos:end="141:65">&amp;</operator><name pos:start="141:66" pos:end="141:77"><name pos:start="141:66" pos:end="141:70">statp</name><operator pos:start="141:71" pos:end="141:72">-&gt;</operator><name pos:start="141:73" pos:end="141:77">atime</name></name></expr></argument>,

                                     <argument pos:start="143:38" pos:end="143:50"><expr pos:start="143:38" pos:end="143:50"><operator pos:start="143:38" pos:end="143:38">&amp;</operator><name pos:start="143:39" pos:end="143:50"><name pos:start="143:39" pos:end="143:43">statp</name><operator pos:start="143:44" pos:end="143:45">-&gt;</operator><name pos:start="143:46" pos:end="143:50">mtime</name></name></expr></argument>, <argument pos:start="143:53" pos:end="143:66"><expr pos:start="143:53" pos:end="143:66"><operator pos:start="143:53" pos:end="143:53">&amp;</operator><name pos:start="143:54" pos:end="143:66"><name pos:start="143:54" pos:end="143:58">statp</name><operator pos:start="143:59" pos:end="143:60">-&gt;</operator><name pos:start="143:61" pos:end="143:66">length</name></name></expr></argument>,

                                     <argument pos:start="145:38" pos:end="145:49"><expr pos:start="145:38" pos:end="145:49"><operator pos:start="145:38" pos:end="145:38">&amp;</operator><name pos:start="145:39" pos:end="145:49"><name pos:start="145:39" pos:end="145:43">statp</name><operator pos:start="145:44" pos:end="145:45">-&gt;</operator><name pos:start="145:46" pos:end="145:49">name</name></name></expr></argument>, <argument pos:start="145:52" pos:end="145:62"><expr pos:start="145:52" pos:end="145:62"><operator pos:start="145:52" pos:end="145:52">&amp;</operator><name pos:start="145:53" pos:end="145:62"><name pos:start="145:53" pos:end="145:57">statp</name><operator pos:start="145:58" pos:end="145:59">-&gt;</operator><name pos:start="145:60" pos:end="145:62">uid</name></name></expr></argument>, <argument pos:start="145:65" pos:end="145:75"><expr pos:start="145:65" pos:end="145:75"><operator pos:start="145:65" pos:end="145:65">&amp;</operator><name pos:start="145:66" pos:end="145:75"><name pos:start="145:66" pos:end="145:70">statp</name><operator pos:start="145:71" pos:end="145:72">-&gt;</operator><name pos:start="145:73" pos:end="145:75">gid</name></name></expr></argument>,

                                     <argument pos:start="147:38" pos:end="147:49"><expr pos:start="147:38" pos:end="147:49"><operator pos:start="147:38" pos:end="147:38">&amp;</operator><name pos:start="147:39" pos:end="147:49"><name pos:start="147:39" pos:end="147:43">statp</name><operator pos:start="147:44" pos:end="147:45">-&gt;</operator><name pos:start="147:46" pos:end="147:49">muid</name></name></expr></argument>, <argument pos:start="147:52" pos:end="147:68"><expr pos:start="147:52" pos:end="147:68"><operator pos:start="147:52" pos:end="147:52">&amp;</operator><name pos:start="147:53" pos:end="147:68"><name pos:start="147:53" pos:end="147:57">statp</name><operator pos:start="147:58" pos:end="147:59">-&gt;</operator><name pos:start="147:60" pos:end="147:68">extension</name></name></expr></argument>,

                                     <argument pos:start="149:38" pos:end="149:50"><expr pos:start="149:38" pos:end="149:50"><operator pos:start="149:38" pos:end="149:38">&amp;</operator><name pos:start="149:39" pos:end="149:50"><name pos:start="149:39" pos:end="149:43">statp</name><operator pos:start="149:44" pos:end="149:45">-&gt;</operator><name pos:start="149:46" pos:end="149:50">n_uid</name></name></expr></argument>, <argument pos:start="149:53" pos:end="149:65"><expr pos:start="149:53" pos:end="149:65"><operator pos:start="149:53" pos:end="149:53">&amp;</operator><name pos:start="149:54" pos:end="149:65"><name pos:start="149:54" pos:end="149:58">statp</name><operator pos:start="149:59" pos:end="149:60">-&gt;</operator><name pos:start="149:61" pos:end="149:65">n_gid</name></name></expr></argument>,

                                     <argument pos:start="151:38" pos:end="151:51"><expr pos:start="151:38" pos:end="151:51"><operator pos:start="151:38" pos:end="151:38">&amp;</operator><name pos:start="151:39" pos:end="151:51"><name pos:start="151:39" pos:end="151:43">statp</name><operator pos:start="151:44" pos:end="151:45">-&gt;</operator><name pos:start="151:46" pos:end="151:51">n_muid</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="153:13" pos:end="153:18">break;</break>

        </block_content>}</block>

        <case pos:start="157:9" pos:end="157:17">case <expr pos:start="157:14" pos:end="157:16"><literal type="char" pos:start="157:14" pos:end="157:16">'I'</literal></expr>:</case> <block pos:start="157:19" pos:end="175:9">{<block_content pos:start="159:13" pos:end="173:18">

            <decl_stmt pos:start="159:13" pos:end="159:55"><decl pos:start="159:13" pos:end="159:54"><type pos:start="159:13" pos:end="159:23"><name pos:start="159:13" pos:end="159:21">V9fsIattr</name> <modifier pos:start="159:23" pos:end="159:23">*</modifier></type><name pos:start="159:24" pos:end="159:28">iattr</name> <init pos:start="159:30" pos:end="159:54">= <expr pos:start="159:32" pos:end="159:54"><call pos:start="159:32" pos:end="159:54"><name pos:start="159:32" pos:end="159:37">va_arg</name><argument_list pos:start="159:38" pos:end="159:54">(<argument pos:start="159:39" pos:end="159:40"><expr pos:start="159:39" pos:end="159:40"><name pos:start="159:39" pos:end="159:40">ap</name></expr></argument>, <argument pos:start="159:43" pos:end="159:53"><expr pos:start="159:43" pos:end="159:53"><name pos:start="159:43" pos:end="159:51">V9fsIattr</name> <operator pos:start="159:53" pos:end="159:53">*</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="161:13" pos:end="171:76"><expr pos:start="161:13" pos:end="171:75"><name pos:start="161:13" pos:end="161:18">offset</name> <operator pos:start="161:20" pos:end="161:21">+=</operator> <call pos:start="161:23" pos:end="171:75"><name pos:start="161:23" pos:end="161:36">v9fs_unmarshal</name><argument_list pos:start="161:37" pos:end="171:75">(<argument pos:start="161:38" pos:end="161:43"><expr pos:start="161:38" pos:end="161:43"><name pos:start="161:38" pos:end="161:43">out_sg</name></expr></argument>, <argument pos:start="161:46" pos:end="161:52"><expr pos:start="161:46" pos:end="161:52"><name pos:start="161:46" pos:end="161:52">out_num</name></expr></argument>, <argument pos:start="161:55" pos:end="161:60"><expr pos:start="161:55" pos:end="161:60"><name pos:start="161:55" pos:end="161:60">offset</name></expr></argument>, <argument pos:start="161:63" pos:end="161:67"><expr pos:start="161:63" pos:end="161:67"><name pos:start="161:63" pos:end="161:67">bswap</name></expr></argument>,

                                     <argument pos:start="163:38" pos:end="163:48"><expr pos:start="163:38" pos:end="163:48"><literal type="string" pos:start="163:38" pos:end="163:48">"ddddqqqqq"</literal></expr></argument>,

                                     <argument pos:start="165:38" pos:end="165:50"><expr pos:start="165:38" pos:end="165:50"><operator pos:start="165:38" pos:end="165:38">&amp;</operator><name pos:start="165:39" pos:end="165:50"><name pos:start="165:39" pos:end="165:43">iattr</name><operator pos:start="165:44" pos:end="165:45">-&gt;</operator><name pos:start="165:46" pos:end="165:50">valid</name></name></expr></argument>, <argument pos:start="165:53" pos:end="165:64"><expr pos:start="165:53" pos:end="165:64"><operator pos:start="165:53" pos:end="165:53">&amp;</operator><name pos:start="165:54" pos:end="165:64"><name pos:start="165:54" pos:end="165:58">iattr</name><operator pos:start="165:59" pos:end="165:60">-&gt;</operator><name pos:start="165:61" pos:end="165:64">mode</name></name></expr></argument>,

                                     <argument pos:start="167:38" pos:end="167:48"><expr pos:start="167:38" pos:end="167:48"><operator pos:start="167:38" pos:end="167:38">&amp;</operator><name pos:start="167:39" pos:end="167:48"><name pos:start="167:39" pos:end="167:43">iattr</name><operator pos:start="167:44" pos:end="167:45">-&gt;</operator><name pos:start="167:46" pos:end="167:48">uid</name></name></expr></argument>, <argument pos:start="167:51" pos:end="167:61"><expr pos:start="167:51" pos:end="167:61"><operator pos:start="167:51" pos:end="167:51">&amp;</operator><name pos:start="167:52" pos:end="167:61"><name pos:start="167:52" pos:end="167:56">iattr</name><operator pos:start="167:57" pos:end="167:58">-&gt;</operator><name pos:start="167:59" pos:end="167:61">gid</name></name></expr></argument>, <argument pos:start="167:64" pos:end="167:75"><expr pos:start="167:64" pos:end="167:75"><operator pos:start="167:64" pos:end="167:64">&amp;</operator><name pos:start="167:65" pos:end="167:75"><name pos:start="167:65" pos:end="167:69">iattr</name><operator pos:start="167:70" pos:end="167:71">-&gt;</operator><name pos:start="167:72" pos:end="167:75">size</name></name></expr></argument>,

                                     <argument pos:start="169:38" pos:end="169:54"><expr pos:start="169:38" pos:end="169:54"><operator pos:start="169:38" pos:end="169:38">&amp;</operator><name pos:start="169:39" pos:end="169:54"><name pos:start="169:39" pos:end="169:43">iattr</name><operator pos:start="169:44" pos:end="169:45">-&gt;</operator><name pos:start="169:46" pos:end="169:54">atime_sec</name></name></expr></argument>, <argument pos:start="169:57" pos:end="169:74"><expr pos:start="169:57" pos:end="169:74"><operator pos:start="169:57" pos:end="169:57">&amp;</operator><name pos:start="169:58" pos:end="169:74"><name pos:start="169:58" pos:end="169:62">iattr</name><operator pos:start="169:63" pos:end="169:64">-&gt;</operator><name pos:start="169:65" pos:end="169:74">atime_nsec</name></name></expr></argument>,

                                     <argument pos:start="171:38" pos:end="171:54"><expr pos:start="171:38" pos:end="171:54"><operator pos:start="171:38" pos:end="171:38">&amp;</operator><name pos:start="171:39" pos:end="171:54"><name pos:start="171:39" pos:end="171:43">iattr</name><operator pos:start="171:44" pos:end="171:45">-&gt;</operator><name pos:start="171:46" pos:end="171:54">mtime_sec</name></name></expr></argument>, <argument pos:start="171:57" pos:end="171:74"><expr pos:start="171:57" pos:end="171:74"><operator pos:start="171:57" pos:end="171:57">&amp;</operator><name pos:start="171:58" pos:end="171:74"><name pos:start="171:58" pos:end="171:62">iattr</name><operator pos:start="171:63" pos:end="171:64">-&gt;</operator><name pos:start="171:65" pos:end="171:74">mtime_nsec</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="173:13" pos:end="173:18">break;</break>

        </block_content>}</block>

        <default pos:start="177:9" pos:end="177:16">default:</default>

            <break pos:start="179:13" pos:end="179:18">break;</break>

        </block_content>}</block></switch>

    </block_content>}</block></for>



    <expr_stmt pos:start="187:5" pos:end="187:15"><expr pos:start="187:5" pos:end="187:14"><call pos:start="187:5" pos:end="187:14"><name pos:start="187:5" pos:end="187:10">va_end</name><argument_list pos:start="187:11" pos:end="187:14">(<argument pos:start="187:12" pos:end="187:13"><expr pos:start="187:12" pos:end="187:13"><name pos:start="187:12" pos:end="187:13">ap</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="191:5" pos:end="191:31">return <expr pos:start="191:12" pos:end="191:30"><name pos:start="191:12" pos:end="191:17">offset</name> <operator pos:start="191:19" pos:end="191:19">-</operator> <name pos:start="191:21" pos:end="191:30">old_offset</name></expr>;</return>

</block_content>}</block></function>
</unit>
