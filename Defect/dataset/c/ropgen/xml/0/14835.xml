<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14835.c" pos:tabs="8"><function pos:start="1:1" pos:end="203:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:19">i440fx_init</name><parameter_list pos:start="1:20" pos:end="21:45">(<parameter pos:start="1:21" pos:end="1:41"><decl pos:start="1:21" pos:end="1:41"><type pos:start="1:21" pos:end="1:41"><specifier pos:start="1:21" pos:end="1:25">const</specifier> <name pos:start="1:27" pos:end="1:30">char</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:41">host_type</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">pci_type</name></decl></parameter>,

                    <parameter pos:start="3:21" pos:end="3:50"><decl pos:start="3:21" pos:end="3:50"><type pos:start="3:21" pos:end="3:50"><name pos:start="3:21" pos:end="3:34">PCII440FXState</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier><modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:50">pi440fx_state</name></decl></parameter>,

                    <parameter pos:start="5:21" pos:end="5:36"><decl pos:start="5:21" pos:end="5:36"><type pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:23">int</name> <modifier pos:start="5:25" pos:end="5:25">*</modifier></type><name pos:start="5:26" pos:end="5:36">piix3_devfn</name></decl></parameter>,

                    <parameter pos:start="7:21" pos:end="7:36"><decl pos:start="7:21" pos:end="7:36"><type pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:26">ISABus</name> <modifier pos:start="7:28" pos:end="7:28">*</modifier><modifier pos:start="7:29" pos:end="7:29">*</modifier></type><name pos:start="7:30" pos:end="7:36">isa_bus</name></decl></parameter>, <parameter pos:start="7:39" pos:end="7:51"><decl pos:start="7:39" pos:end="7:51"><type pos:start="7:39" pos:end="7:51"><name pos:start="7:39" pos:end="7:46">qemu_irq</name> <modifier pos:start="7:48" pos:end="7:48">*</modifier></type><name pos:start="7:49" pos:end="7:51">pic</name></decl></parameter>,

                    <parameter pos:start="9:21" pos:end="9:51"><decl pos:start="9:21" pos:end="9:51"><type pos:start="9:21" pos:end="9:51"><name pos:start="9:21" pos:end="9:32">MemoryRegion</name> <modifier pos:start="9:34" pos:end="9:34">*</modifier></type><name pos:start="9:35" pos:end="9:51">address_space_mem</name></decl></parameter>,

                    <parameter pos:start="11:21" pos:end="11:50"><decl pos:start="11:21" pos:end="11:50"><type pos:start="11:21" pos:end="11:50"><name pos:start="11:21" pos:end="11:32">MemoryRegion</name> <modifier pos:start="11:34" pos:end="11:34">*</modifier></type><name pos:start="11:35" pos:end="11:50">address_space_io</name></decl></parameter>,

                    <parameter pos:start="13:21" pos:end="13:39"><decl pos:start="13:21" pos:end="13:39"><type pos:start="13:21" pos:end="13:39"><name pos:start="13:21" pos:end="13:30">ram_addr_t</name></type> <name pos:start="13:32" pos:end="13:39">ram_size</name></decl></parameter>,

                    <parameter pos:start="15:21" pos:end="15:48"><decl pos:start="15:21" pos:end="15:48"><type pos:start="15:21" pos:end="15:48"><name pos:start="15:21" pos:end="15:30">ram_addr_t</name></type> <name pos:start="15:32" pos:end="15:48">below_4g_mem_size</name></decl></parameter>,

                    <parameter pos:start="17:21" pos:end="17:48"><decl pos:start="17:21" pos:end="17:48"><type pos:start="17:21" pos:end="17:48"><name pos:start="17:21" pos:end="17:30">ram_addr_t</name></type> <name pos:start="17:32" pos:end="17:48">above_4g_mem_size</name></decl></parameter>,

                    <parameter pos:start="19:21" pos:end="19:51"><decl pos:start="19:21" pos:end="19:51"><type pos:start="19:21" pos:end="19:51"><name pos:start="19:21" pos:end="19:32">MemoryRegion</name> <modifier pos:start="19:34" pos:end="19:34">*</modifier></type><name pos:start="19:35" pos:end="19:51">pci_address_space</name></decl></parameter>,

                    <parameter pos:start="21:21" pos:end="21:44"><decl pos:start="21:21" pos:end="21:44"><type pos:start="21:21" pos:end="21:44"><name pos:start="21:21" pos:end="21:32">MemoryRegion</name> <modifier pos:start="21:34" pos:end="21:34">*</modifier></type><name pos:start="21:35" pos:end="21:44">ram_memory</name></decl></parameter>)</parameter_list>

<block pos:start="23:1" pos:end="203:1">{<block_content pos:start="25:5" pos:end="201:13">

    <decl_stmt pos:start="25:5" pos:end="25:21"><decl pos:start="25:5" pos:end="25:20"><type pos:start="25:5" pos:end="25:17"><name pos:start="25:5" pos:end="25:15">DeviceState</name> <modifier pos:start="25:17" pos:end="25:17">*</modifier></type><name pos:start="25:18" pos:end="25:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:14"><decl pos:start="27:5" pos:end="27:13"><type pos:start="27:5" pos:end="27:12"><name pos:start="27:5" pos:end="27:10">PCIBus</name> <modifier pos:start="27:12" pos:end="27:12">*</modifier></type><name pos:start="27:13" pos:end="27:13">b</name></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:17"><decl pos:start="29:5" pos:end="29:16"><type pos:start="29:5" pos:end="29:15"><name pos:start="29:5" pos:end="29:13">PCIDevice</name> <modifier pos:start="29:15" pos:end="29:15">*</modifier></type><name pos:start="29:16" pos:end="29:16">d</name></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:20"><decl pos:start="31:5" pos:end="31:19"><type pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:16">PCIHostState</name> <modifier pos:start="31:18" pos:end="31:18">*</modifier></type><name pos:start="31:19" pos:end="31:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:22"><decl pos:start="33:5" pos:end="33:21"><type pos:start="33:5" pos:end="33:16"><name pos:start="33:5" pos:end="33:14">PIIX3State</name> <modifier pos:start="33:16" pos:end="33:16">*</modifier></type><name pos:start="33:17" pos:end="33:21">piix3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:22"><decl pos:start="35:5" pos:end="35:21"><type pos:start="35:5" pos:end="35:20"><name pos:start="35:5" pos:end="35:18">PCII440FXState</name> <modifier pos:start="35:20" pos:end="35:20">*</modifier></type><name pos:start="35:21" pos:end="35:21">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:15"><decl pos:start="37:5" pos:end="37:14"><type pos:start="37:5" pos:end="37:12"><name pos:start="37:5" pos:end="37:12">unsigned</name></type> <name pos:start="37:14" pos:end="37:14">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:24"><decl pos:start="39:5" pos:end="39:23"><type pos:start="39:5" pos:end="39:17"><name pos:start="39:5" pos:end="39:15">I440FXState</name> <modifier pos:start="39:17" pos:end="39:17">*</modifier></type><name pos:start="39:18" pos:end="39:23">i440fx</name></decl>;</decl_stmt>



    <expr_stmt pos:start="43:5" pos:end="43:39"><expr pos:start="43:5" pos:end="43:38"><name pos:start="43:5" pos:end="43:7">dev</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:38"><name pos:start="43:11" pos:end="43:21">qdev_create</name><argument_list pos:start="43:22" pos:end="43:38">(<argument pos:start="43:23" pos:end="43:26"><expr pos:start="43:23" pos:end="43:26"><name pos:start="43:23" pos:end="43:26">NULL</name></expr></argument>, <argument pos:start="43:29" pos:end="43:37"><expr pos:start="43:29" pos:end="43:37"><name pos:start="43:29" pos:end="43:37">host_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:29"><expr pos:start="45:5" pos:end="45:28"><name pos:start="45:5" pos:end="45:5">s</name> <operator pos:start="45:7" pos:end="45:7">=</operator> <call pos:start="45:9" pos:end="45:28"><name pos:start="45:9" pos:end="45:23">PCI_HOST_BRIDGE</name><argument_list pos:start="45:24" pos:end="45:28">(<argument pos:start="45:25" pos:end="45:27"><expr pos:start="45:25" pos:end="45:27"><name pos:start="45:25" pos:end="45:27">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="49:55"><expr pos:start="47:5" pos:end="49:54"><name pos:start="47:5" pos:end="47:5">b</name> <operator pos:start="47:7" pos:end="47:7">=</operator> <call pos:start="47:9" pos:end="49:54"><name pos:start="47:9" pos:end="47:19">pci_bus_new</name><argument_list pos:start="47:20" pos:end="49:54">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">dev</name></expr></argument>, <argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">NULL</name></expr></argument>, <argument pos:start="47:32" pos:end="47:48"><expr pos:start="47:32" pos:end="47:48"><name pos:start="47:32" pos:end="47:48">pci_address_space</name></expr></argument>,

                    <argument pos:start="49:21" pos:end="49:36"><expr pos:start="49:21" pos:end="49:36"><name pos:start="49:21" pos:end="49:36">address_space_io</name></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr></argument>, <argument pos:start="49:42" pos:end="49:53"><expr pos:start="49:42" pos:end="49:53"><name pos:start="49:42" pos:end="49:53">TYPE_PCI_BUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:15"><expr pos:start="51:5" pos:end="51:14"><name pos:start="51:5" pos:end="51:10"><name pos:start="51:5" pos:end="51:5">s</name><operator pos:start="51:6" pos:end="51:7">-&gt;</operator><name pos:start="51:8" pos:end="51:10">bus</name></name> <operator pos:start="51:12" pos:end="51:12">=</operator> <name pos:start="51:14" pos:end="51:14">b</name></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:79"><expr pos:start="53:5" pos:end="53:78"><call pos:start="53:5" pos:end="53:78"><name pos:start="53:5" pos:end="53:29">object_property_add_child</name><argument_list pos:start="53:30" pos:end="53:78">(<argument pos:start="53:31" pos:end="53:48"><expr pos:start="53:31" pos:end="53:48"><call pos:start="53:31" pos:end="53:48"><name pos:start="53:31" pos:end="53:46">qdev_get_machine</name><argument_list pos:start="53:47" pos:end="53:48">()</argument_list></call></expr></argument>, <argument pos:start="53:51" pos:end="53:58"><expr pos:start="53:51" pos:end="53:58"><literal type="string" pos:start="53:51" pos:end="53:58">"i440fx"</literal></expr></argument>, <argument pos:start="53:61" pos:end="53:71"><expr pos:start="53:61" pos:end="53:71"><call pos:start="53:61" pos:end="53:71"><name pos:start="53:61" pos:end="53:66">OBJECT</name><argument_list pos:start="53:67" pos:end="53:71">(<argument pos:start="53:68" pos:end="53:70"><expr pos:start="53:68" pos:end="53:70"><name pos:start="53:68" pos:end="53:70">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="53:74" pos:end="53:77"><expr pos:start="53:74" pos:end="53:77"><name pos:start="53:74" pos:end="53:77">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:26"><expr pos:start="55:5" pos:end="55:25"><call pos:start="55:5" pos:end="55:25"><name pos:start="55:5" pos:end="55:20">qdev_init_nofail</name><argument_list pos:start="55:21" pos:end="55:25">(<argument pos:start="55:22" pos:end="55:24"><expr pos:start="55:22" pos:end="55:24"><name pos:start="55:22" pos:end="55:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:42"><expr pos:start="59:5" pos:end="59:41"><name pos:start="59:5" pos:end="59:5">d</name> <operator pos:start="59:7" pos:end="59:7">=</operator> <call pos:start="59:9" pos:end="59:41"><name pos:start="59:9" pos:end="59:25">pci_create_simple</name><argument_list pos:start="59:26" pos:end="59:41">(<argument pos:start="59:27" pos:end="59:27"><expr pos:start="59:27" pos:end="59:27"><name pos:start="59:27" pos:end="59:27">b</name></expr></argument>, <argument pos:start="59:30" pos:end="59:30"><expr pos:start="59:30" pos:end="59:30"><literal type="number" pos:start="59:30" pos:end="59:30">0</literal></expr></argument>, <argument pos:start="59:33" pos:end="59:40"><expr pos:start="59:33" pos:end="59:40"><name pos:start="59:33" pos:end="59:40">pci_type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:42"><expr pos:start="61:5" pos:end="61:41"><operator pos:start="61:5" pos:end="61:5">*</operator><name pos:start="61:6" pos:end="61:18">pi440fx_state</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <call pos:start="61:22" pos:end="61:41"><name pos:start="61:22" pos:end="61:38">I440FX_PCI_DEVICE</name><argument_list pos:start="61:39" pos:end="61:41">(<argument pos:start="61:40" pos:end="61:40"><expr pos:start="61:40" pos:end="61:40"><name pos:start="61:40" pos:end="61:40">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:23"><expr pos:start="63:5" pos:end="63:22"><name pos:start="63:5" pos:end="63:5">f</name> <operator pos:start="63:7" pos:end="63:7">=</operator> <operator pos:start="63:9" pos:end="63:9">*</operator><name pos:start="63:10" pos:end="63:22">pi440fx_state</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:41"><expr pos:start="65:5" pos:end="65:40"><name pos:start="65:5" pos:end="65:20"><name pos:start="65:5" pos:end="65:5">f</name><operator pos:start="65:6" pos:end="65:7">-&gt;</operator><name pos:start="65:8" pos:end="65:20">system_memory</name></name> <operator pos:start="65:22" pos:end="65:22">=</operator> <name pos:start="65:24" pos:end="65:40">address_space_mem</name></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:45"><expr pos:start="67:5" pos:end="67:44"><name pos:start="67:5" pos:end="67:24"><name pos:start="67:5" pos:end="67:5">f</name><operator pos:start="67:6" pos:end="67:7">-&gt;</operator><name pos:start="67:8" pos:end="67:24">pci_address_space</name></name> <operator pos:start="67:26" pos:end="67:26">=</operator> <name pos:start="67:28" pos:end="67:44">pci_address_space</name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:31"><expr pos:start="69:5" pos:end="69:30"><name pos:start="69:5" pos:end="69:17"><name pos:start="69:5" pos:end="69:5">f</name><operator pos:start="69:6" pos:end="69:7">-&gt;</operator><name pos:start="69:8" pos:end="69:17">ram_memory</name></name> <operator pos:start="69:19" pos:end="69:19">=</operator> <name pos:start="69:21" pos:end="69:30">ram_memory</name></expr>;</expr_stmt>



    <expr_stmt pos:start="73:5" pos:end="73:41"><expr pos:start="73:5" pos:end="73:40"><name pos:start="73:5" pos:end="73:10">i440fx</name> <operator pos:start="73:12" pos:end="73:12">=</operator> <call pos:start="73:14" pos:end="73:40"><name pos:start="73:14" pos:end="73:35">I440FX_PCI_HOST_BRIDGE</name><argument_list pos:start="73:36" pos:end="73:40">(<argument pos:start="73:37" pos:end="73:39"><expr pos:start="73:37" pos:end="73:39"><name pos:start="73:37" pos:end="73:39">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:47"><expr pos:start="75:5" pos:end="75:46"><name pos:start="75:5" pos:end="75:26"><name pos:start="75:5" pos:end="75:10">i440fx</name><operator pos:start="75:11" pos:end="75:12">-&gt;</operator><name pos:start="75:13" pos:end="75:20">pci_hole</name><operator pos:start="75:21" pos:end="75:21">.</operator><name pos:start="75:22" pos:end="75:26">begin</name></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <name pos:start="75:30" pos:end="75:46">below_4g_mem_size</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:51"><expr pos:start="77:5" pos:end="77:50"><name pos:start="77:5" pos:end="77:24"><name pos:start="77:5" pos:end="77:10">i440fx</name><operator pos:start="77:11" pos:end="77:12">-&gt;</operator><name pos:start="77:13" pos:end="77:20">pci_hole</name><operator pos:start="77:21" pos:end="77:21">.</operator><name pos:start="77:22" pos:end="77:24">end</name></name> <operator pos:start="77:26" pos:end="77:26">=</operator> <name pos:start="77:28" pos:end="77:50">IO_APIC_DEFAULT_ADDRESS</name></expr>;</expr_stmt>



    <comment type="block" pos:start="81:5" pos:end="81:34">/* setup pci memory mapping */</comment>

    <expr_stmt pos:start="83:5" pos:end="85:49"><expr pos:start="83:5" pos:end="85:48"><call pos:start="83:5" pos:end="85:48"><name pos:start="83:5" pos:end="83:26">pc_pci_as_mapping_init</name><argument_list pos:start="83:27" pos:end="85:48">(<argument pos:start="83:28" pos:end="83:36"><expr pos:start="83:28" pos:end="83:36"><call pos:start="83:28" pos:end="83:36"><name pos:start="83:28" pos:end="83:33">OBJECT</name><argument_list pos:start="83:34" pos:end="83:36">(<argument pos:start="83:35" pos:end="83:35"><expr pos:start="83:35" pos:end="83:35"><name pos:start="83:35" pos:end="83:35">f</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="83:39" pos:end="83:54"><expr pos:start="83:39" pos:end="83:54"><name pos:start="83:39" pos:end="83:54"><name pos:start="83:39" pos:end="83:39">f</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:54">system_memory</name></name></expr></argument>,

                           <argument pos:start="85:28" pos:end="85:47"><expr pos:start="85:28" pos:end="85:47"><name pos:start="85:28" pos:end="85:47"><name pos:start="85:28" pos:end="85:28">f</name><operator pos:start="85:29" pos:end="85:30">-&gt;</operator><name pos:start="85:31" pos:end="85:47">pci_address_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="89:5" pos:end="89:46">/* if *disabled* show SMRAM to all CPUs */</comment>

    <expr_stmt pos:start="91:5" pos:end="93:69"><expr pos:start="91:5" pos:end="93:68"><call pos:start="91:5" pos:end="93:68"><name pos:start="91:5" pos:end="91:28">memory_region_init_alias</name><argument_list pos:start="91:29" pos:end="93:68">(<argument pos:start="91:30" pos:end="91:45"><expr pos:start="91:30" pos:end="91:45"><operator pos:start="91:30" pos:end="91:30">&amp;</operator><name pos:start="91:31" pos:end="91:45"><name pos:start="91:31" pos:end="91:31">f</name><operator pos:start="91:32" pos:end="91:33">-&gt;</operator><name pos:start="91:34" pos:end="91:45">smram_region</name></name></expr></argument>, <argument pos:start="91:48" pos:end="91:56"><expr pos:start="91:48" pos:end="91:56"><call pos:start="91:48" pos:end="91:56"><name pos:start="91:48" pos:end="91:53">OBJECT</name><argument_list pos:start="91:54" pos:end="91:56">(<argument pos:start="91:55" pos:end="91:55"><expr pos:start="91:55" pos:end="91:55"><name pos:start="91:55" pos:end="91:55">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="91:59" pos:end="91:72"><expr pos:start="91:59" pos:end="91:72"><literal type="string" pos:start="91:59" pos:end="91:72">"smram-region"</literal></expr></argument>,

                             <argument pos:start="93:30" pos:end="93:49"><expr pos:start="93:30" pos:end="93:49"><name pos:start="93:30" pos:end="93:49"><name pos:start="93:30" pos:end="93:30">f</name><operator pos:start="93:31" pos:end="93:32">-&gt;</operator><name pos:start="93:33" pos:end="93:49">pci_address_space</name></name></expr></argument>, <argument pos:start="93:52" pos:end="93:58"><expr pos:start="93:52" pos:end="93:58"><literal type="number" pos:start="93:52" pos:end="93:58">0xa0000</literal></expr></argument>, <argument pos:start="93:61" pos:end="93:67"><expr pos:start="93:61" pos:end="93:67"><literal type="number" pos:start="93:61" pos:end="93:67">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:61"><expr pos:start="95:5" pos:end="97:60"><call pos:start="95:5" pos:end="97:60"><name pos:start="95:5" pos:end="95:39">memory_region_add_subregion_overlap</name><argument_list pos:start="95:40" pos:end="97:60">(<argument pos:start="95:41" pos:end="95:56"><expr pos:start="95:41" pos:end="95:56"><name pos:start="95:41" pos:end="95:56"><name pos:start="95:41" pos:end="95:41">f</name><operator pos:start="95:42" pos:end="95:43">-&gt;</operator><name pos:start="95:44" pos:end="95:56">system_memory</name></name></expr></argument>, <argument pos:start="95:59" pos:end="95:65"><expr pos:start="95:59" pos:end="95:65"><literal type="number" pos:start="95:59" pos:end="95:65">0xa0000</literal></expr></argument>,

                                        <argument pos:start="97:41" pos:end="97:56"><expr pos:start="97:41" pos:end="97:56"><operator pos:start="97:41" pos:end="97:41">&amp;</operator><name pos:start="97:42" pos:end="97:56"><name pos:start="97:42" pos:end="97:42">f</name><operator pos:start="97:43" pos:end="97:44">-&gt;</operator><name pos:start="97:45" pos:end="97:56">smram_region</name></name></expr></argument>, <argument pos:start="97:59" pos:end="97:59"><expr pos:start="97:59" pos:end="97:59"><literal type="number" pos:start="97:59" pos:end="97:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="99:5" pos:end="99:54"><expr pos:start="99:5" pos:end="99:53"><call pos:start="99:5" pos:end="99:53"><name pos:start="99:5" pos:end="99:29">memory_region_set_enabled</name><argument_list pos:start="99:30" pos:end="99:53">(<argument pos:start="99:31" pos:end="99:46"><expr pos:start="99:31" pos:end="99:46"><operator pos:start="99:31" pos:end="99:31">&amp;</operator><name pos:start="99:32" pos:end="99:46"><name pos:start="99:32" pos:end="99:32">f</name><operator pos:start="99:33" pos:end="99:34">-&gt;</operator><name pos:start="99:35" pos:end="99:46">smram_region</name></name></expr></argument>, <argument pos:start="99:49" pos:end="99:52"><expr pos:start="99:49" pos:end="99:52"><name pos:start="99:49" pos:end="99:52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:36">/* smram, as seen by SMM CPUs */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:66"><expr pos:start="105:5" pos:end="105:65"><call pos:start="105:5" pos:end="105:65"><name pos:start="105:5" pos:end="105:22">memory_region_init</name><argument_list pos:start="105:23" pos:end="105:65">(<argument pos:start="105:24" pos:end="105:32"><expr pos:start="105:24" pos:end="105:32"><operator pos:start="105:24" pos:end="105:24">&amp;</operator><name pos:start="105:25" pos:end="105:32"><name pos:start="105:25" pos:end="105:25">f</name><operator pos:start="105:26" pos:end="105:27">-&gt;</operator><name pos:start="105:28" pos:end="105:32">smram</name></name></expr></argument>, <argument pos:start="105:35" pos:end="105:43"><expr pos:start="105:35" pos:end="105:43"><call pos:start="105:35" pos:end="105:43"><name pos:start="105:35" pos:end="105:40">OBJECT</name><argument_list pos:start="105:41" pos:end="105:43">(<argument pos:start="105:42" pos:end="105:42"><expr pos:start="105:42" pos:end="105:42"><name pos:start="105:42" pos:end="105:42">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="105:46" pos:end="105:52"><expr pos:start="105:46" pos:end="105:52"><literal type="string" pos:start="105:46" pos:end="105:52">"smram"</literal></expr></argument>, <argument pos:start="105:55" pos:end="105:64"><expr pos:start="105:55" pos:end="105:64"><literal type="number" pos:start="105:55" pos:end="105:58">1ull</literal> <operator pos:start="105:60" pos:end="105:61">&lt;&lt;</operator> <literal type="number" pos:start="105:63" pos:end="105:64">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="107:5" pos:end="107:47"><expr pos:start="107:5" pos:end="107:46"><call pos:start="107:5" pos:end="107:46"><name pos:start="107:5" pos:end="107:29">memory_region_set_enabled</name><argument_list pos:start="107:30" pos:end="107:46">(<argument pos:start="107:31" pos:end="107:39"><expr pos:start="107:31" pos:end="107:39"><operator pos:start="107:31" pos:end="107:31">&amp;</operator><name pos:start="107:32" pos:end="107:39"><name pos:start="107:32" pos:end="107:32">f</name><operator pos:start="107:33" pos:end="107:34">-&gt;</operator><name pos:start="107:35" pos:end="107:39">smram</name></name></expr></argument>, <argument pos:start="107:42" pos:end="107:45"><expr pos:start="107:42" pos:end="107:45"><name pos:start="107:42" pos:end="107:45">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="109:5" pos:end="111:62"><expr pos:start="109:5" pos:end="111:61"><call pos:start="109:5" pos:end="111:61"><name pos:start="109:5" pos:end="109:28">memory_region_init_alias</name><argument_list pos:start="109:29" pos:end="111:61">(<argument pos:start="109:30" pos:end="109:42"><expr pos:start="109:30" pos:end="109:42"><operator pos:start="109:30" pos:end="109:30">&amp;</operator><name pos:start="109:31" pos:end="109:42"><name pos:start="109:31" pos:end="109:31">f</name><operator pos:start="109:32" pos:end="109:33">-&gt;</operator><name pos:start="109:34" pos:end="109:42">low_smram</name></name></expr></argument>, <argument pos:start="109:45" pos:end="109:53"><expr pos:start="109:45" pos:end="109:53"><call pos:start="109:45" pos:end="109:53"><name pos:start="109:45" pos:end="109:50">OBJECT</name><argument_list pos:start="109:51" pos:end="109:53">(<argument pos:start="109:52" pos:end="109:52"><expr pos:start="109:52" pos:end="109:52"><name pos:start="109:52" pos:end="109:52">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:56" pos:end="109:66"><expr pos:start="109:56" pos:end="109:66"><literal type="string" pos:start="109:56" pos:end="109:66">"smram-low"</literal></expr></argument>,

                             <argument pos:start="111:30" pos:end="111:42"><expr pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:42"><name pos:start="111:30" pos:end="111:30">f</name><operator pos:start="111:31" pos:end="111:32">-&gt;</operator><name pos:start="111:33" pos:end="111:42">ram_memory</name></name></expr></argument>, <argument pos:start="111:45" pos:end="111:51"><expr pos:start="111:45" pos:end="111:51"><literal type="number" pos:start="111:45" pos:end="111:51">0xa0000</literal></expr></argument>, <argument pos:start="111:54" pos:end="111:60"><expr pos:start="111:54" pos:end="111:60"><literal type="number" pos:start="111:54" pos:end="111:60">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:51"><expr pos:start="113:5" pos:end="113:50"><call pos:start="113:5" pos:end="113:50"><name pos:start="113:5" pos:end="113:29">memory_region_set_enabled</name><argument_list pos:start="113:30" pos:end="113:50">(<argument pos:start="113:31" pos:end="113:43"><expr pos:start="113:31" pos:end="113:43"><operator pos:start="113:31" pos:end="113:31">&amp;</operator><name pos:start="113:32" pos:end="113:43"><name pos:start="113:32" pos:end="113:32">f</name><operator pos:start="113:33" pos:end="113:34">-&gt;</operator><name pos:start="113:35" pos:end="113:43">low_smram</name></name></expr></argument>, <argument pos:start="113:46" pos:end="113:49"><expr pos:start="113:46" pos:end="113:49"><name pos:start="113:46" pos:end="113:49">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:67"><expr pos:start="115:5" pos:end="115:66"><call pos:start="115:5" pos:end="115:66"><name pos:start="115:5" pos:end="115:31">memory_region_add_subregion</name><argument_list pos:start="115:32" pos:end="115:66">(<argument pos:start="115:33" pos:end="115:41"><expr pos:start="115:33" pos:end="115:41"><operator pos:start="115:33" pos:end="115:33">&amp;</operator><name pos:start="115:34" pos:end="115:41"><name pos:start="115:34" pos:end="115:34">f</name><operator pos:start="115:35" pos:end="115:36">-&gt;</operator><name pos:start="115:37" pos:end="115:41">smram</name></name></expr></argument>, <argument pos:start="115:44" pos:end="115:50"><expr pos:start="115:44" pos:end="115:50"><literal type="number" pos:start="115:44" pos:end="115:50">0xa0000</literal></expr></argument>, <argument pos:start="115:53" pos:end="115:65"><expr pos:start="115:53" pos:end="115:65"><operator pos:start="115:53" pos:end="115:53">&amp;</operator><name pos:start="115:54" pos:end="115:65"><name pos:start="115:54" pos:end="115:54">f</name><operator pos:start="115:55" pos:end="115:56">-&gt;</operator><name pos:start="115:57" pos:end="115:65">low_smram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="119:68"><expr pos:start="117:5" pos:end="119:67"><call pos:start="117:5" pos:end="119:67"><name pos:start="117:5" pos:end="117:34">object_property_add_const_link</name><argument_list pos:start="117:35" pos:end="119:67">(<argument pos:start="117:36" pos:end="117:53"><expr pos:start="117:36" pos:end="117:53"><call pos:start="117:36" pos:end="117:53"><name pos:start="117:36" pos:end="117:51">qdev_get_machine</name><argument_list pos:start="117:52" pos:end="117:53">()</argument_list></call></expr></argument>, <argument pos:start="117:56" pos:end="117:62"><expr pos:start="117:56" pos:end="117:62"><literal type="string" pos:start="117:56" pos:end="117:62">"smram"</literal></expr></argument>,

                                   <argument pos:start="119:36" pos:end="119:52"><expr pos:start="119:36" pos:end="119:52"><call pos:start="119:36" pos:end="119:52"><name pos:start="119:36" pos:end="119:41">OBJECT</name><argument_list pos:start="119:42" pos:end="119:52">(<argument pos:start="119:43" pos:end="119:51"><expr pos:start="119:43" pos:end="119:51"><operator pos:start="119:43" pos:end="119:43">&amp;</operator><name pos:start="119:44" pos:end="119:51"><name pos:start="119:44" pos:end="119:44">f</name><operator pos:start="119:45" pos:end="119:46">-&gt;</operator><name pos:start="119:47" pos:end="119:51">smram</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="119:55" pos:end="119:66"><expr pos:start="119:55" pos:end="119:66"><operator pos:start="119:55" pos:end="119:55">&amp;</operator><name pos:start="119:56" pos:end="119:66">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="123:5" pos:end="125:63"><expr pos:start="123:5" pos:end="125:62"><call pos:start="123:5" pos:end="125:62"><name pos:start="123:5" pos:end="123:12">init_pam</name><argument_list pos:start="123:13" pos:end="125:62">(<argument pos:start="123:14" pos:end="123:16"><expr pos:start="123:14" pos:end="123:16"><name pos:start="123:14" pos:end="123:16">dev</name></expr></argument>, <argument pos:start="123:19" pos:end="123:31"><expr pos:start="123:19" pos:end="123:31"><name pos:start="123:19" pos:end="123:31"><name pos:start="123:19" pos:end="123:19">f</name><operator pos:start="123:20" pos:end="123:21">-&gt;</operator><name pos:start="123:22" pos:end="123:31">ram_memory</name></name></expr></argument>, <argument pos:start="123:34" pos:end="123:49"><expr pos:start="123:34" pos:end="123:49"><name pos:start="123:34" pos:end="123:49"><name pos:start="123:34" pos:end="123:34">f</name><operator pos:start="123:35" pos:end="123:36">-&gt;</operator><name pos:start="123:37" pos:end="123:49">system_memory</name></name></expr></argument>, <argument pos:start="123:52" pos:end="123:71"><expr pos:start="123:52" pos:end="123:71"><name pos:start="123:52" pos:end="123:71"><name pos:start="123:52" pos:end="123:52">f</name><operator pos:start="123:53" pos:end="123:54">-&gt;</operator><name pos:start="123:55" pos:end="123:71">pci_address_space</name></name></expr></argument>,

             <argument pos:start="125:14" pos:end="125:31"><expr pos:start="125:14" pos:end="125:31"><operator pos:start="125:14" pos:end="125:14">&amp;</operator><name pos:start="125:15" pos:end="125:31"><name pos:start="125:15" pos:end="125:15">f</name><operator pos:start="125:16" pos:end="125:17">-&gt;</operator><name pos:start="125:18" pos:end="125:28">pam_regions</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><literal type="number" pos:start="125:30" pos:end="125:30">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="125:34" pos:end="125:46"><expr pos:start="125:34" pos:end="125:46"><name pos:start="125:34" pos:end="125:46">PAM_BIOS_BASE</name></expr></argument>, <argument pos:start="125:49" pos:end="125:61"><expr pos:start="125:49" pos:end="125:61"><name pos:start="125:49" pos:end="125:61">PAM_BIOS_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="127:5" pos:end="135:5">for <control pos:start="127:9" pos:end="127:28">(<init pos:start="127:10" pos:end="127:15"><expr pos:start="127:10" pos:end="127:14"><name pos:start="127:10" pos:end="127:10">i</name> <operator pos:start="127:12" pos:end="127:12">=</operator> <literal type="number" pos:start="127:14" pos:end="127:14">0</literal></expr>;</init> <condition pos:start="127:17" pos:end="127:23"><expr pos:start="127:17" pos:end="127:22"><name pos:start="127:17" pos:end="127:17">i</name> <operator pos:start="127:19" pos:end="127:19">&lt;</operator> <literal type="number" pos:start="127:21" pos:end="127:22">12</literal></expr>;</condition> <incr pos:start="127:25" pos:end="127:27"><expr pos:start="127:25" pos:end="127:27"><operator pos:start="127:25" pos:end="127:26">++</operator><name pos:start="127:27" pos:end="127:27">i</name></expr></incr>)</control> <block pos:start="127:30" pos:end="135:5">{<block_content pos:start="129:9" pos:end="133:33">

        <expr_stmt pos:start="129:9" pos:end="133:33"><expr pos:start="129:9" pos:end="133:32"><call pos:start="129:9" pos:end="133:32"><name pos:start="129:9" pos:end="129:16">init_pam</name><argument_list pos:start="129:17" pos:end="133:32">(<argument pos:start="129:18" pos:end="129:20"><expr pos:start="129:18" pos:end="129:20"><name pos:start="129:18" pos:end="129:20">dev</name></expr></argument>, <argument pos:start="129:23" pos:end="129:35"><expr pos:start="129:23" pos:end="129:35"><name pos:start="129:23" pos:end="129:35"><name pos:start="129:23" pos:end="129:23">f</name><operator pos:start="129:24" pos:end="129:25">-&gt;</operator><name pos:start="129:26" pos:end="129:35">ram_memory</name></name></expr></argument>, <argument pos:start="129:38" pos:end="129:53"><expr pos:start="129:38" pos:end="129:53"><name pos:start="129:38" pos:end="129:53"><name pos:start="129:38" pos:end="129:38">f</name><operator pos:start="129:39" pos:end="129:40">-&gt;</operator><name pos:start="129:41" pos:end="129:53">system_memory</name></name></expr></argument>, <argument pos:start="129:56" pos:end="129:75"><expr pos:start="129:56" pos:end="129:75"><name pos:start="129:56" pos:end="129:75"><name pos:start="129:56" pos:end="129:56">f</name><operator pos:start="129:57" pos:end="129:58">-&gt;</operator><name pos:start="129:59" pos:end="129:75">pci_address_space</name></name></expr></argument>,

                 <argument pos:start="131:18" pos:end="131:37"><expr pos:start="131:18" pos:end="131:37"><operator pos:start="131:18" pos:end="131:18">&amp;</operator><name pos:start="131:19" pos:end="131:37"><name pos:start="131:19" pos:end="131:19">f</name><operator pos:start="131:20" pos:end="131:21">-&gt;</operator><name pos:start="131:22" pos:end="131:32">pam_regions</name><index pos:start="131:33" pos:end="131:37">[<expr pos:start="131:34" pos:end="131:36"><name pos:start="131:34" pos:end="131:34">i</name><operator pos:start="131:35" pos:end="131:35">+</operator><literal type="number" pos:start="131:36" pos:end="131:36">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="131:40" pos:end="131:74"><expr pos:start="131:40" pos:end="131:74"><name pos:start="131:40" pos:end="131:53">PAM_EXPAN_BASE</name> <operator pos:start="131:55" pos:end="131:55">+</operator> <name pos:start="131:57" pos:end="131:57">i</name> <operator pos:start="131:59" pos:end="131:59">*</operator> <name pos:start="131:61" pos:end="131:74">PAM_EXPAN_SIZE</name></expr></argument>,

                 <argument pos:start="133:18" pos:end="133:31"><expr pos:start="133:18" pos:end="133:31"><name pos:start="133:18" pos:end="133:31">PAM_EXPAN_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="139:5" pos:end="145:65">/* Xen supports additional interrupt routes from the PCI devices to

     * the IOAPIC: the four pins of each PCI device on the bus are also

     * connected to the IOAPIC directly.

     * These additional routes can be discovered through ACPI. */</comment>

    <if_stmt pos:start="147:5" pos:end="173:5"><if pos:start="147:5" pos:end="159:5">if <condition pos:start="147:8" pos:end="147:22">(<expr pos:start="147:9" pos:end="147:21"><call pos:start="147:9" pos:end="147:21"><name pos:start="147:9" pos:end="147:19">xen_enabled</name><argument_list pos:start="147:20" pos:end="147:21">()</argument_list></call></expr>)</condition> <block pos:start="147:24" pos:end="159:5">{<block_content pos:start="149:9" pos:end="157:43">

        <decl_stmt pos:start="149:9" pos:end="151:52"><decl pos:start="149:9" pos:end="151:51"><type pos:start="149:9" pos:end="149:19"><name pos:start="149:9" pos:end="149:17">PCIDevice</name> <modifier pos:start="149:19" pos:end="149:19">*</modifier></type><name pos:start="149:20" pos:end="149:26">pci_dev</name> <init pos:start="149:28" pos:end="151:51">= <expr pos:start="149:30" pos:end="151:51"><call pos:start="149:30" pos:end="151:51"><name pos:start="149:30" pos:end="149:60">pci_create_simple_multifunction</name><argument_list pos:start="149:61" pos:end="151:51">(<argument pos:start="149:62" pos:end="149:62"><expr pos:start="149:62" pos:end="149:62"><name pos:start="149:62" pos:end="149:62">b</name></expr></argument>,

                             <argument pos:start="151:30" pos:end="151:31"><expr pos:start="151:30" pos:end="151:31"><operator pos:start="151:30" pos:end="151:30">-</operator><literal type="number" pos:start="151:31" pos:end="151:31">1</literal></expr></argument>, <argument pos:start="151:34" pos:end="151:37"><expr pos:start="151:34" pos:end="151:37"><name pos:start="151:34" pos:end="151:37">true</name></expr></argument>, <argument pos:start="151:40" pos:end="151:50"><expr pos:start="151:40" pos:end="151:50"><literal type="string" pos:start="151:40" pos:end="151:50">"PIIX3-xen"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="153:9" pos:end="153:42"><expr pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:13">piix3</name> <operator pos:start="153:15" pos:end="153:15">=</operator> <call pos:start="153:17" pos:end="153:41"><name pos:start="153:17" pos:end="153:32">PIIX3_PCI_DEVICE</name><argument_list pos:start="153:33" pos:end="153:41">(<argument pos:start="153:34" pos:end="153:40"><expr pos:start="153:34" pos:end="153:40"><name pos:start="153:34" pos:end="153:40">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="157:43"><expr pos:start="155:9" pos:end="157:42"><call pos:start="155:9" pos:end="157:42"><name pos:start="155:9" pos:end="155:20">pci_bus_irqs</name><argument_list pos:start="155:21" pos:end="157:42">(<argument pos:start="155:22" pos:end="155:22"><expr pos:start="155:22" pos:end="155:22"><name pos:start="155:22" pos:end="155:22">b</name></expr></argument>, <argument pos:start="155:25" pos:end="155:41"><expr pos:start="155:25" pos:end="155:41"><name pos:start="155:25" pos:end="155:41">xen_piix3_set_irq</name></expr></argument>, <argument pos:start="155:44" pos:end="155:64"><expr pos:start="155:44" pos:end="155:64"><name pos:start="155:44" pos:end="155:64">xen_pci_slot_get_pirq</name></expr></argument>,

                <argument pos:start="157:17" pos:end="157:21"><expr pos:start="157:17" pos:end="157:21"><name pos:start="157:17" pos:end="157:21">piix3</name></expr></argument>, <argument pos:start="157:24" pos:end="157:41"><expr pos:start="157:24" pos:end="157:41"><name pos:start="157:24" pos:end="157:41">XEN_PIIX_NUM_PIRQS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="159:7" pos:end="173:5">else <block pos:start="159:12" pos:end="173:5">{<block_content pos:start="161:9" pos:end="171:65">

        <decl_stmt pos:start="161:9" pos:end="163:48"><decl pos:start="161:9" pos:end="163:47"><type pos:start="161:9" pos:end="161:19"><name pos:start="161:9" pos:end="161:17">PCIDevice</name> <modifier pos:start="161:19" pos:end="161:19">*</modifier></type><name pos:start="161:20" pos:end="161:26">pci_dev</name> <init pos:start="161:28" pos:end="163:47">= <expr pos:start="161:30" pos:end="163:47"><call pos:start="161:30" pos:end="163:47"><name pos:start="161:30" pos:end="161:60">pci_create_simple_multifunction</name><argument_list pos:start="161:61" pos:end="163:47">(<argument pos:start="161:62" pos:end="161:62"><expr pos:start="161:62" pos:end="161:62"><name pos:start="161:62" pos:end="161:62">b</name></expr></argument>,

                             <argument pos:start="163:30" pos:end="163:31"><expr pos:start="163:30" pos:end="163:31"><operator pos:start="163:30" pos:end="163:30">-</operator><literal type="number" pos:start="163:31" pos:end="163:31">1</literal></expr></argument>, <argument pos:start="163:34" pos:end="163:37"><expr pos:start="163:34" pos:end="163:37"><name pos:start="163:34" pos:end="163:37">true</name></expr></argument>, <argument pos:start="163:40" pos:end="163:46"><expr pos:start="163:40" pos:end="163:46"><literal type="string" pos:start="163:40" pos:end="163:46">"PIIX3"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="165:9" pos:end="165:42"><expr pos:start="165:9" pos:end="165:41"><name pos:start="165:9" pos:end="165:13">piix3</name> <operator pos:start="165:15" pos:end="165:15">=</operator> <call pos:start="165:17" pos:end="165:41"><name pos:start="165:17" pos:end="165:32">PIIX3_PCI_DEVICE</name><argument_list pos:start="165:33" pos:end="165:41">(<argument pos:start="165:34" pos:end="165:40"><expr pos:start="165:34" pos:end="165:40"><name pos:start="165:34" pos:end="165:40">pci_dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="167:9" pos:end="169:32"><expr pos:start="167:9" pos:end="169:31"><call pos:start="167:9" pos:end="169:31"><name pos:start="167:9" pos:end="167:20">pci_bus_irqs</name><argument_list pos:start="167:21" pos:end="169:31">(<argument pos:start="167:22" pos:end="167:22"><expr pos:start="167:22" pos:end="167:22"><name pos:start="167:22" pos:end="167:22">b</name></expr></argument>, <argument pos:start="167:25" pos:end="167:37"><expr pos:start="167:25" pos:end="167:37"><name pos:start="167:25" pos:end="167:37">piix3_set_irq</name></expr></argument>, <argument pos:start="167:40" pos:end="167:56"><expr pos:start="167:40" pos:end="167:56"><name pos:start="167:40" pos:end="167:56">pci_slot_get_pirq</name></expr></argument>, <argument pos:start="167:59" pos:end="167:63"><expr pos:start="167:59" pos:end="167:63"><name pos:start="167:59" pos:end="167:63">piix3</name></expr></argument>,

                <argument pos:start="169:17" pos:end="169:30"><expr pos:start="169:17" pos:end="169:30"><name pos:start="169:17" pos:end="169:30">PIIX_NUM_PIRQS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="171:9" pos:end="171:65"><expr pos:start="171:9" pos:end="171:64"><call pos:start="171:9" pos:end="171:64"><name pos:start="171:9" pos:end="171:32">pci_bus_set_route_irq_fn</name><argument_list pos:start="171:33" pos:end="171:64">(<argument pos:start="171:34" pos:end="171:34"><expr pos:start="171:34" pos:end="171:34"><name pos:start="171:34" pos:end="171:34">b</name></expr></argument>, <argument pos:start="171:37" pos:end="171:63"><expr pos:start="171:37" pos:end="171:63"><name pos:start="171:37" pos:end="171:63">piix3_route_intx_pin_to_irq</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="175:5" pos:end="175:21"><expr pos:start="175:5" pos:end="175:20"><name pos:start="175:5" pos:end="175:14"><name pos:start="175:5" pos:end="175:9">piix3</name><operator pos:start="175:10" pos:end="175:11">-&gt;</operator><name pos:start="175:12" pos:end="175:14">pic</name></name> <operator pos:start="175:16" pos:end="175:16">=</operator> <name pos:start="175:18" pos:end="175:20">pic</name></expr>;</expr_stmt>

    <expr_stmt pos:start="177:5" pos:end="177:67"><expr pos:start="177:5" pos:end="177:66"><operator pos:start="177:5" pos:end="177:5">*</operator><name pos:start="177:6" pos:end="177:12">isa_bus</name> <operator pos:start="177:14" pos:end="177:14">=</operator> <call pos:start="177:16" pos:end="177:66"><name pos:start="177:16" pos:end="177:22">ISA_BUS</name><argument_list pos:start="177:23" pos:end="177:66">(<argument pos:start="177:24" pos:end="177:65"><expr pos:start="177:24" pos:end="177:65"><call pos:start="177:24" pos:end="177:65"><name pos:start="177:24" pos:end="177:41">qdev_get_child_bus</name><argument_list pos:start="177:42" pos:end="177:65">(<argument pos:start="177:43" pos:end="177:55"><expr pos:start="177:43" pos:end="177:55"><call pos:start="177:43" pos:end="177:55"><name pos:start="177:43" pos:end="177:48">DEVICE</name><argument_list pos:start="177:49" pos:end="177:55">(<argument pos:start="177:50" pos:end="177:54"><expr pos:start="177:50" pos:end="177:54"><name pos:start="177:50" pos:end="177:54">piix3</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="177:58" pos:end="177:64"><expr pos:start="177:58" pos:end="177:64"><literal type="string" pos:start="177:58" pos:end="177:64">"isa.0"</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:36"><expr pos:start="181:5" pos:end="181:35"><operator pos:start="181:5" pos:end="181:5">*</operator><name pos:start="181:6" pos:end="181:16">piix3_devfn</name> <operator pos:start="181:18" pos:end="181:18">=</operator> <name pos:start="181:20" pos:end="181:35"><name pos:start="181:20" pos:end="181:24">piix3</name><operator pos:start="181:25" pos:end="181:26">-&gt;</operator><name pos:start="181:27" pos:end="181:29">dev</name><operator pos:start="181:30" pos:end="181:30">.</operator><name pos:start="181:31" pos:end="181:35">devfn</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="185:5" pos:end="185:42"><expr pos:start="185:5" pos:end="185:41"><name pos:start="185:5" pos:end="185:12">ram_size</name> <operator pos:start="185:14" pos:end="185:14">=</operator> <name pos:start="185:16" pos:end="185:23">ram_size</name> <operator pos:start="185:25" pos:end="185:25">/</operator> <literal type="number" pos:start="185:27" pos:end="185:27">8</literal> <operator pos:start="185:29" pos:end="185:29">/</operator> <literal type="number" pos:start="185:31" pos:end="185:34">1024</literal> <operator pos:start="185:36" pos:end="185:36">/</operator> <literal type="number" pos:start="185:38" pos:end="185:41">1024</literal></expr>;</expr_stmt>

    <if_stmt pos:start="187:5" pos:end="191:5"><if pos:start="187:5" pos:end="191:5">if <condition pos:start="187:8" pos:end="187:23">(<expr pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:16">ram_size</name> <operator pos:start="187:18" pos:end="187:18">&gt;</operator> <literal type="number" pos:start="187:20" pos:end="187:22">255</literal></expr>)</condition> <block pos:start="187:25" pos:end="191:5">{<block_content pos:start="189:9" pos:end="189:23">

        <expr_stmt pos:start="189:9" pos:end="189:23"><expr pos:start="189:9" pos:end="189:22"><name pos:start="189:9" pos:end="189:16">ram_size</name> <operator pos:start="189:18" pos:end="189:18">=</operator> <literal type="number" pos:start="189:20" pos:end="189:22">255</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="193:5" pos:end="193:51"><expr pos:start="193:5" pos:end="193:50"><name pos:start="193:5" pos:end="193:39"><name pos:start="193:5" pos:end="193:5">d</name><operator pos:start="193:6" pos:end="193:7">-&gt;</operator><name pos:start="193:8" pos:end="193:13">config</name><index pos:start="193:14" pos:end="193:39">[<expr pos:start="193:15" pos:end="193:38"><name pos:start="193:15" pos:end="193:38">I440FX_COREBOOT_RAM_SIZE</name></expr>]</index></name> <operator pos:start="193:41" pos:end="193:41">=</operator> <name pos:start="193:43" pos:end="193:50">ram_size</name></expr>;</expr_stmt>



    <expr_stmt pos:start="197:5" pos:end="197:37"><expr pos:start="197:5" pos:end="197:36"><call pos:start="197:5" pos:end="197:36"><name pos:start="197:5" pos:end="197:33">i440fx_update_memory_mappings</name><argument_list pos:start="197:34" pos:end="197:36">(<argument pos:start="197:35" pos:end="197:35"><expr pos:start="197:35" pos:end="197:35"><name pos:start="197:35" pos:end="197:35">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="201:5" pos:end="201:13">return <expr pos:start="201:12" pos:end="201:12"><name pos:start="201:12" pos:end="201:12">b</name></expr>;</return>

</block_content>}</block></function>
</unit>
