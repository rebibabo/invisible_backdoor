<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/4505.c" pos:tabs="8"><function pos:start="1:1" pos:end="63:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">tcx_rstip_writel</name><parameter_list pos:start="1:29" pos:end="3:57">(<parameter pos:start="1:30" pos:end="1:41"><decl pos:start="1:30" pos:end="1:41"><type pos:start="1:30" pos:end="1:41"><name pos:start="1:30" pos:end="1:33">void</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:41">opaque</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:54"><decl pos:start="1:44" pos:end="1:54"><type pos:start="1:44" pos:end="1:54"><name pos:start="1:44" pos:end="1:49">hwaddr</name></type> <name pos:start="1:51" pos:end="1:54">addr</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:41"><decl pos:start="3:30" pos:end="3:41"><type pos:start="3:30" pos:end="3:41"><name pos:start="3:30" pos:end="3:37">uint64_t</name></type> <name pos:start="3:39" pos:end="3:41">val</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:56"><decl pos:start="3:44" pos:end="3:56"><type pos:start="3:44" pos:end="3:56"><name pos:start="3:44" pos:end="3:51">unsigned</name></type> <name pos:start="3:53" pos:end="3:56">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="63:1">{<block_content pos:start="7:5" pos:end="61:5">

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:24"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">TCXState</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:15">s</name> <init pos:start="7:17" pos:end="7:24">= <expr pos:start="7:19" pos:end="7:24"><name pos:start="7:19" pos:end="7:24">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:17"><decl pos:start="11:5" pos:end="11:16"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:16">col</name></decl>;</decl_stmt>



    <if_stmt pos:start="15:5" pos:end="61:5"><if pos:start="15:5" pos:end="19:5">if <condition pos:start="15:8" pos:end="15:20">(<expr pos:start="15:9" pos:end="15:19"><operator pos:start="15:9" pos:end="15:9">!</operator><operator pos:start="15:10" pos:end="15:10">(</operator><name pos:start="15:11" pos:end="15:14">addr</name> <operator pos:start="15:16" pos:end="15:16">&amp;</operator> <literal type="number" pos:start="15:18" pos:end="15:18">4</literal><operator pos:start="15:19" pos:end="15:19">)</operator></expr>)</condition> <block pos:start="15:22" pos:end="19:5">{<block_content pos:start="17:9" pos:end="17:25">

        <expr_stmt pos:start="17:9" pos:end="17:25"><expr pos:start="17:9" pos:end="17:24"><name pos:start="17:9" pos:end="17:18"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:18">tmpblit</name></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <name pos:start="17:22" pos:end="17:24">val</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="19:7" pos:end="61:5">else <block pos:start="19:12" pos:end="61:5">{<block_content pos:start="21:9" pos:end="59:56">

        <expr_stmt pos:start="21:9" pos:end="21:37"><expr pos:start="21:9" pos:end="21:36"><name pos:start="21:9" pos:end="21:12">addr</name> <operator pos:start="21:14" pos:end="21:14">=</operator> <operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:20">addr</name> <operator pos:start="21:22" pos:end="21:23">&gt;&gt;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">3</literal><operator pos:start="21:26" pos:end="21:26">)</operator> <operator pos:start="21:28" pos:end="21:28">&amp;</operator> <literal type="number" pos:start="21:30" pos:end="21:36">0xfffff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:11">col</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:37"><name pos:start="23:15" pos:end="23:25">cpu_to_be32</name><argument_list pos:start="23:26" pos:end="23:37">(<argument pos:start="23:27" pos:end="23:36"><expr pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:36"><name pos:start="23:27" pos:end="23:27">s</name><operator pos:start="23:28" pos:end="23:29">-&gt;</operator><name pos:start="23:30" pos:end="23:36">tmpblit</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="57:9"><if pos:start="25:9" pos:end="43:9">if <condition pos:start="25:12" pos:end="25:27">(<expr pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:20"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:20">depth</name></name> <operator pos:start="25:22" pos:end="25:23">==</operator> <literal type="number" pos:start="25:25" pos:end="25:26">24</literal></expr>)</condition> <block pos:start="25:29" pos:end="43:9">{<block_content pos:start="27:13" pos:end="41:13">

            <for pos:start="27:13" pos:end="41:13">for <control pos:start="27:17" pos:end="27:36">(<init pos:start="27:18" pos:end="27:23"><expr pos:start="27:18" pos:end="27:22"><name pos:start="27:18" pos:end="27:18">i</name> <operator pos:start="27:20" pos:end="27:20">=</operator> <literal type="number" pos:start="27:22" pos:end="27:22">0</literal></expr>;</init> <condition pos:start="27:25" pos:end="27:31"><expr pos:start="27:25" pos:end="27:30"><name pos:start="27:25" pos:end="27:25">i</name> <operator pos:start="27:27" pos:end="27:27">&lt;</operator> <literal type="number" pos:start="27:29" pos:end="27:30">32</literal></expr>;</condition> <incr pos:start="27:33" pos:end="27:35"><expr pos:start="27:33" pos:end="27:35"><name pos:start="27:33" pos:end="27:33">i</name><operator pos:start="27:34" pos:end="27:35">++</operator></expr></incr>)</control> <block pos:start="27:38" pos:end="41:13">{<block_content pos:start="29:17" pos:end="39:26">

                <if_stmt pos:start="29:17" pos:end="37:17"><if pos:start="29:17" pos:end="37:17">if <condition pos:start="29:20" pos:end="29:37">(<expr pos:start="29:21" pos:end="29:36"><name pos:start="29:21" pos:end="29:23">val</name> <operator pos:start="29:25" pos:end="29:25">&amp;</operator> <literal type="number" pos:start="29:27" pos:end="29:36">0x80000000</literal></expr>)</condition> <block pos:start="29:39" pos:end="37:17">{<block_content pos:start="31:21" pos:end="35:46">

                    <expr_stmt pos:start="31:21" pos:end="31:51"><expr pos:start="31:21" pos:end="31:50"><name pos:start="31:21" pos:end="31:37"><name pos:start="31:21" pos:end="31:21">s</name><operator pos:start="31:22" pos:end="31:23">-&gt;</operator><name pos:start="31:24" pos:end="31:27">vram</name><index pos:start="31:28" pos:end="31:37">[<expr pos:start="31:29" pos:end="31:36"><name pos:start="31:29" pos:end="31:32">addr</name> <operator pos:start="31:34" pos:end="31:34">+</operator> <name pos:start="31:36" pos:end="31:36">i</name></expr>]</index></name> <operator pos:start="31:39" pos:end="31:39">=</operator> <name pos:start="31:41" pos:end="31:50"><name pos:start="31:41" pos:end="31:41">s</name><operator pos:start="31:42" pos:end="31:43">-&gt;</operator><name pos:start="31:44" pos:end="31:50">tmpblit</name></name></expr>;</expr_stmt>

                    <expr_stmt pos:start="33:21" pos:end="33:46"><expr pos:start="33:21" pos:end="33:45"><name pos:start="33:21" pos:end="33:39"><name pos:start="33:21" pos:end="33:21">s</name><operator pos:start="33:22" pos:end="33:23">-&gt;</operator><name pos:start="33:24" pos:end="33:29">vram24</name><index pos:start="33:30" pos:end="33:39">[<expr pos:start="33:31" pos:end="33:38"><name pos:start="33:31" pos:end="33:34">addr</name> <operator pos:start="33:36" pos:end="33:36">+</operator> <name pos:start="33:38" pos:end="33:38">i</name></expr>]</index></name> <operator pos:start="33:41" pos:end="33:41">=</operator> <name pos:start="33:43" pos:end="33:45">col</name></expr>;</expr_stmt>

                    <expr_stmt pos:start="35:21" pos:end="35:46"><expr pos:start="35:21" pos:end="35:45"><name pos:start="35:21" pos:end="35:39"><name pos:start="35:21" pos:end="35:21">s</name><operator pos:start="35:22" pos:end="35:23">-&gt;</operator><name pos:start="35:24" pos:end="35:29">cplane</name><index pos:start="35:30" pos:end="35:39">[<expr pos:start="35:31" pos:end="35:38"><name pos:start="35:31" pos:end="35:34">addr</name> <operator pos:start="35:36" pos:end="35:36">+</operator> <name pos:start="35:38" pos:end="35:38">i</name></expr>]</index></name> <operator pos:start="35:41" pos:end="35:41">=</operator> <name pos:start="35:43" pos:end="35:45">col</name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="39:17" pos:end="39:26"><expr pos:start="39:17" pos:end="39:25"><name pos:start="39:17" pos:end="39:19">val</name> <operator pos:start="39:21" pos:end="39:23">&lt;&lt;=</operator> <literal type="number" pos:start="39:25" pos:end="39:25">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></if> <else pos:start="43:11" pos:end="57:9">else <block pos:start="43:16" pos:end="57:9">{<block_content pos:start="45:13" pos:end="55:13">

            <for pos:start="45:13" pos:end="55:13">for <control pos:start="45:17" pos:end="45:36">(<init pos:start="45:18" pos:end="45:23"><expr pos:start="45:18" pos:end="45:22"><name pos:start="45:18" pos:end="45:18">i</name> <operator pos:start="45:20" pos:end="45:20">=</operator> <literal type="number" pos:start="45:22" pos:end="45:22">0</literal></expr>;</init> <condition pos:start="45:25" pos:end="45:31"><expr pos:start="45:25" pos:end="45:30"><name pos:start="45:25" pos:end="45:25">i</name> <operator pos:start="45:27" pos:end="45:27">&lt;</operator> <literal type="number" pos:start="45:29" pos:end="45:30">32</literal></expr>;</condition> <incr pos:start="45:33" pos:end="45:35"><expr pos:start="45:33" pos:end="45:35"><name pos:start="45:33" pos:end="45:33">i</name><operator pos:start="45:34" pos:end="45:35">++</operator></expr></incr>)</control>  <block pos:start="45:39" pos:end="55:13">{<block_content pos:start="47:17" pos:end="53:26">

                <if_stmt pos:start="47:17" pos:end="51:17"><if pos:start="47:17" pos:end="51:17">if <condition pos:start="47:20" pos:end="47:37">(<expr pos:start="47:21" pos:end="47:36"><name pos:start="47:21" pos:end="47:23">val</name> <operator pos:start="47:25" pos:end="47:25">&amp;</operator> <literal type="number" pos:start="47:27" pos:end="47:36">0x80000000</literal></expr>)</condition> <block pos:start="47:39" pos:end="51:17">{<block_content pos:start="49:21" pos:end="49:51">

                    <expr_stmt pos:start="49:21" pos:end="49:51"><expr pos:start="49:21" pos:end="49:50"><name pos:start="49:21" pos:end="49:37"><name pos:start="49:21" pos:end="49:21">s</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:27">vram</name><index pos:start="49:28" pos:end="49:37">[<expr pos:start="49:29" pos:end="49:36"><name pos:start="49:29" pos:end="49:32">addr</name> <operator pos:start="49:34" pos:end="49:34">+</operator> <name pos:start="49:36" pos:end="49:36">i</name></expr>]</index></name> <operator pos:start="49:39" pos:end="49:39">=</operator> <name pos:start="49:41" pos:end="49:50"><name pos:start="49:41" pos:end="49:41">s</name><operator pos:start="49:42" pos:end="49:43">-&gt;</operator><name pos:start="49:44" pos:end="49:50">tmpblit</name></name></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:26"><expr pos:start="53:17" pos:end="53:25"><name pos:start="53:17" pos:end="53:19">val</name> <operator pos:start="53:21" pos:end="53:23">&lt;&lt;=</operator> <literal type="number" pos:start="53:25" pos:end="53:25">1</literal></expr>;</expr_stmt>

            </block_content>}</block></for>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:31">memory_region_set_dirty</name><argument_list pos:start="59:32" pos:end="59:55">(<argument pos:start="59:33" pos:end="59:44"><expr pos:start="59:33" pos:end="59:44"><operator pos:start="59:33" pos:end="59:33">&amp;</operator><name pos:start="59:34" pos:end="59:44"><name pos:start="59:34" pos:end="59:34">s</name><operator pos:start="59:35" pos:end="59:36">-&gt;</operator><name pos:start="59:37" pos:end="59:44">vram_mem</name></name></expr></argument>, <argument pos:start="59:47" pos:end="59:50"><expr pos:start="59:47" pos:end="59:50"><name pos:start="59:47" pos:end="59:50">addr</name></expr></argument>, <argument pos:start="59:53" pos:end="59:54"><expr pos:start="59:53" pos:end="59:54"><literal type="number" pos:start="59:53" pos:end="59:54">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
