<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5090.c" pos:tabs="8"><function pos:start="1:1" pos:end="141:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">cadence_ttc_write</name><parameter_list pos:start="1:30" pos:end="3:38">(<parameter pos:start="1:31" pos:end="1:42"><decl pos:start="1:31" pos:end="1:42"><type pos:start="1:31" pos:end="1:42"><name pos:start="1:31" pos:end="1:34">void</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:42">opaque</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:69"><decl pos:start="1:45" pos:end="1:69"><type pos:start="1:45" pos:end="1:69"><name pos:start="1:45" pos:end="1:62">target_phys_addr_t</name></type> <name pos:start="1:64" pos:end="1:69">offset</name></decl></parameter>,

        <parameter pos:start="3:9" pos:end="3:22"><decl pos:start="3:9" pos:end="3:22"><type pos:start="3:9" pos:end="3:22"><name pos:start="3:9" pos:end="3:16">uint64_t</name></type> <name pos:start="3:18" pos:end="3:22">value</name></decl></parameter>, <parameter pos:start="3:25" pos:end="3:37"><decl pos:start="3:25" pos:end="3:37"><type pos:start="3:25" pos:end="3:37"><name pos:start="3:25" pos:end="3:32">unsigned</name></type> <name pos:start="3:34" pos:end="3:37">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="141:1">{<block_content pos:start="7:5" pos:end="139:28">

    <decl_stmt pos:start="7:5" pos:end="7:67"><decl pos:start="7:5" pos:end="7:66"><type pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:21">CadenceTimerState</name> <modifier pos:start="7:23" pos:end="7:23">*</modifier></type><name pos:start="7:24" pos:end="7:24">s</name> <init pos:start="7:26" pos:end="7:66">= <expr pos:start="7:28" pos:end="7:66"><call pos:start="7:28" pos:end="7:66"><name pos:start="7:28" pos:end="7:50">cadence_timer_from_addr</name><argument_list pos:start="7:51" pos:end="7:66">(<argument pos:start="7:52" pos:end="7:57"><expr pos:start="7:52" pos:end="7:57"><name pos:start="7:52" pos:end="7:57">opaque</name></expr></argument>, <argument pos:start="7:60" pos:end="7:65"><expr pos:start="7:60" pos:end="7:65"><name pos:start="7:60" pos:end="7:65">offset</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:64"><expr pos:start="11:5" pos:end="11:63"><call pos:start="11:5" pos:end="11:63"><name pos:start="11:5" pos:end="11:12">DB_PRINT</name><argument_list pos:start="11:13" pos:end="11:63">(<argument pos:start="11:14" pos:end="11:37"><expr pos:start="11:14" pos:end="11:37"><literal type="string" pos:start="11:14" pos:end="11:37">"addr: %08x data %08x\n"</literal></expr></argument>, <argument pos:start="11:40" pos:end="11:45"><expr pos:start="11:40" pos:end="11:45"><name pos:start="11:40" pos:end="11:45">offset</name></expr></argument>, <argument pos:start="11:48" pos:end="11:62"><expr pos:start="11:48" pos:end="11:62"><operator pos:start="11:48" pos:end="11:48">(</operator><name pos:start="11:49" pos:end="11:56">unsigned</name><operator pos:start="11:57" pos:end="11:57">)</operator><name pos:start="11:58" pos:end="11:62">value</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><call pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:22">cadence_timer_sync</name><argument_list pos:start="15:23" pos:end="15:25">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="19:5" pos:end="133:5">switch <condition pos:start="19:12" pos:end="19:19">(<expr pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:18">offset</name></expr>)</condition> <block pos:start="19:21" pos:end="133:5">{<block_content pos:start="21:5" pos:end="131:15">

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x00</literal></expr>:</case> <comment type="block" pos:start="21:16" pos:end="21:34">/* clock control */</comment>

    <case pos:start="23:5" pos:end="23:14">case <expr pos:start="23:10" pos:end="23:13"><literal type="number" pos:start="23:10" pos:end="23:13">0x04</literal></expr>:</case>

    <case pos:start="25:5" pos:end="25:14">case <expr pos:start="25:10" pos:end="25:13"><literal type="number" pos:start="25:10" pos:end="25:13">0x08</literal></expr>:</case>

        <expr_stmt pos:start="27:9" pos:end="27:36"><expr pos:start="27:9" pos:end="27:35"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">s</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">reg_clock</name></name> <operator pos:start="27:22" pos:end="27:22">=</operator> <name pos:start="27:24" pos:end="27:28">value</name> <operator pos:start="27:30" pos:end="27:30">&amp;</operator> <literal type="number" pos:start="27:32" pos:end="27:35">0x3F</literal></expr>;</expr_stmt>

        <break pos:start="29:9" pos:end="29:14">break;</break>



    <case pos:start="33:5" pos:end="33:14">case <expr pos:start="33:10" pos:end="33:13"><literal type="number" pos:start="33:10" pos:end="33:13">0x0c</literal></expr>:</case> <comment type="block" pos:start="33:16" pos:end="33:36">/* counter control */</comment>

    <case pos:start="35:5" pos:end="35:14">case <expr pos:start="35:10" pos:end="35:13"><literal type="number" pos:start="35:10" pos:end="35:13">0x10</literal></expr>:</case>

    <case pos:start="37:5" pos:end="37:14">case <expr pos:start="37:10" pos:end="37:13"><literal type="number" pos:start="37:10" pos:end="37:13">0x14</literal></expr>:</case>

        <if_stmt pos:start="39:9" pos:end="43:9"><if pos:start="39:9" pos:end="43:9">if <condition pos:start="39:12" pos:end="39:37">(<expr pos:start="39:13" pos:end="39:36"><name pos:start="39:13" pos:end="39:17">value</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <name pos:start="39:21" pos:end="39:36">COUNTER_CTRL_RST</name></expr>)</condition> <block pos:start="39:39" pos:end="43:9">{<block_content pos:start="41:13" pos:end="41:29">

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:24"><name pos:start="41:13" pos:end="41:13">s</name><operator pos:start="41:14" pos:end="41:15">-&gt;</operator><name pos:start="41:16" pos:end="41:24">reg_value</name></name> <operator pos:start="41:26" pos:end="41:26">=</operator> <literal type="number" pos:start="41:28" pos:end="41:28">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:56"><expr pos:start="45:9" pos:end="45:55"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:20">reg_count</name></name> <operator pos:start="45:22" pos:end="45:22">=</operator> <name pos:start="45:24" pos:end="45:28">value</name> <operator pos:start="45:30" pos:end="45:30">&amp;</operator> <literal type="number" pos:start="45:32" pos:end="45:35">0x3f</literal> <operator pos:start="45:37" pos:end="45:37">&amp;</operator> <operator pos:start="45:39" pos:end="45:39">~</operator><name pos:start="45:40" pos:end="45:55">COUNTER_CTRL_RST</name></expr>;</expr_stmt>

        <break pos:start="47:9" pos:end="47:14">break;</break>



    <case pos:start="51:5" pos:end="51:14">case <expr pos:start="51:10" pos:end="51:13"><literal type="number" pos:start="51:10" pos:end="51:13">0x24</literal></expr>:</case> <comment type="block" pos:start="51:16" pos:end="51:38">/* interval register */</comment>

    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x28</literal></expr>:</case>

    <case pos:start="55:5" pos:end="55:14">case <expr pos:start="55:10" pos:end="55:13"><literal type="number" pos:start="55:10" pos:end="55:13">0x2c</literal></expr>:</case>

        <expr_stmt pos:start="57:9" pos:end="57:41"><expr pos:start="57:9" pos:end="57:40"><name pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:23">reg_interval</name></name> <operator pos:start="57:25" pos:end="57:25">=</operator> <name pos:start="57:27" pos:end="57:31">value</name> <operator pos:start="57:33" pos:end="57:33">&amp;</operator> <literal type="number" pos:start="57:35" pos:end="57:40">0xffff</literal></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x30</literal></expr>:</case> <comment type="block" pos:start="63:16" pos:end="63:35">/* match register */</comment>

    <case pos:start="65:5" pos:end="65:14">case <expr pos:start="65:10" pos:end="65:13"><literal type="number" pos:start="65:10" pos:end="65:13">0x34</literal></expr>:</case>

    <case pos:start="67:5" pos:end="67:14">case <expr pos:start="67:10" pos:end="67:13"><literal type="number" pos:start="67:10" pos:end="67:13">0x38</literal></expr>:</case>

        <expr_stmt pos:start="69:9" pos:end="69:41"><expr pos:start="69:9" pos:end="69:40"><name pos:start="69:9" pos:end="69:23"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:20">reg_match</name><index pos:start="69:21" pos:end="69:23">[<expr pos:start="69:22" pos:end="69:22"><literal type="number" pos:start="69:22" pos:end="69:22">0</literal></expr>]</index></name> <operator pos:start="69:25" pos:end="69:25">=</operator> <name pos:start="69:27" pos:end="69:31">value</name> <operator pos:start="69:33" pos:end="69:33">&amp;</operator> <literal type="number" pos:start="69:35" pos:end="69:40">0xffff</literal></expr>;</expr_stmt>



    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><literal type="number" pos:start="73:10" pos:end="73:13">0x3c</literal></expr>:</case> <comment type="block" pos:start="73:16" pos:end="73:35">/* match register */</comment>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><literal type="number" pos:start="75:10" pos:end="75:13">0x40</literal></expr>:</case>

    <case pos:start="77:5" pos:end="77:14">case <expr pos:start="77:10" pos:end="77:13"><literal type="number" pos:start="77:10" pos:end="77:13">0x44</literal></expr>:</case>

        <expr_stmt pos:start="79:9" pos:end="79:41"><expr pos:start="79:9" pos:end="79:40"><name pos:start="79:9" pos:end="79:23"><name pos:start="79:9" pos:end="79:9">s</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:20">reg_match</name><index pos:start="79:21" pos:end="79:23">[<expr pos:start="79:22" pos:end="79:22"><literal type="number" pos:start="79:22" pos:end="79:22">1</literal></expr>]</index></name> <operator pos:start="79:25" pos:end="79:25">=</operator> <name pos:start="79:27" pos:end="79:31">value</name> <operator pos:start="79:33" pos:end="79:33">&amp;</operator> <literal type="number" pos:start="79:35" pos:end="79:40">0xffff</literal></expr>;</expr_stmt>



    <case pos:start="83:5" pos:end="83:14">case <expr pos:start="83:10" pos:end="83:13"><literal type="number" pos:start="83:10" pos:end="83:13">0x48</literal></expr>:</case> <comment type="block" pos:start="83:16" pos:end="83:35">/* match register */</comment>

    <case pos:start="85:5" pos:end="85:14">case <expr pos:start="85:10" pos:end="85:13"><literal type="number" pos:start="85:10" pos:end="85:13">0x4c</literal></expr>:</case>

    <case pos:start="87:5" pos:end="87:14">case <expr pos:start="87:10" pos:end="87:13"><literal type="number" pos:start="87:10" pos:end="87:13">0x50</literal></expr>:</case>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:23"><name pos:start="89:9" pos:end="89:9">s</name><operator pos:start="89:10" pos:end="89:11">-&gt;</operator><name pos:start="89:12" pos:end="89:20">reg_match</name><index pos:start="89:21" pos:end="89:23">[<expr pos:start="89:22" pos:end="89:22"><literal type="number" pos:start="89:22" pos:end="89:22">2</literal></expr>]</index></name> <operator pos:start="89:25" pos:end="89:25">=</operator> <name pos:start="89:27" pos:end="89:31">value</name> <operator pos:start="89:33" pos:end="89:33">&amp;</operator> <literal type="number" pos:start="89:35" pos:end="89:40">0xffff</literal></expr>;</expr_stmt>

        <break pos:start="91:9" pos:end="91:14">break;</break>



    <case pos:start="95:5" pos:end="95:14">case <expr pos:start="95:10" pos:end="95:13"><literal type="number" pos:start="95:10" pos:end="95:13">0x54</literal></expr>:</case> <comment type="block" pos:start="95:16" pos:end="95:39">/* interrupt register */</comment>

    <case pos:start="97:5" pos:end="97:14">case <expr pos:start="97:10" pos:end="97:13"><literal type="number" pos:start="97:10" pos:end="97:13">0x58</literal></expr>:</case>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x5c</literal></expr>:</case>

        <break pos:start="101:9" pos:end="101:14">break;</break>



    <case pos:start="105:5" pos:end="105:14">case <expr pos:start="105:10" pos:end="105:13"><literal type="number" pos:start="105:10" pos:end="105:13">0x60</literal></expr>:</case> <comment type="block" pos:start="105:16" pos:end="105:37">/* interrupt enable */</comment>

    <case pos:start="107:5" pos:end="107:14">case <expr pos:start="107:10" pos:end="107:13"><literal type="number" pos:start="107:10" pos:end="107:13">0x64</literal></expr>:</case>

    <case pos:start="109:5" pos:end="109:14">case <expr pos:start="109:10" pos:end="109:13"><literal type="number" pos:start="109:10" pos:end="109:13">0x68</literal></expr>:</case>

        <expr_stmt pos:start="111:9" pos:end="111:38"><expr pos:start="111:9" pos:end="111:37"><name pos:start="111:9" pos:end="111:22"><name pos:start="111:9" pos:end="111:9">s</name><operator pos:start="111:10" pos:end="111:11">-&gt;</operator><name pos:start="111:12" pos:end="111:22">reg_intr_en</name></name> <operator pos:start="111:24" pos:end="111:24">=</operator> <name pos:start="111:26" pos:end="111:30">value</name> <operator pos:start="111:32" pos:end="111:32">&amp;</operator> <literal type="number" pos:start="111:34" pos:end="111:37">0x3f</literal></expr>;</expr_stmt>

        <break pos:start="113:9" pos:end="113:14">break;</break>



    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x6c</literal></expr>:</case> <comment type="block" pos:start="117:16" pos:end="117:34">/* event control */</comment>

    <case pos:start="119:5" pos:end="119:14">case <expr pos:start="119:10" pos:end="119:13"><literal type="number" pos:start="119:10" pos:end="119:13">0x70</literal></expr>:</case>

    <case pos:start="121:5" pos:end="121:14">case <expr pos:start="121:10" pos:end="121:13"><literal type="number" pos:start="121:10" pos:end="121:13">0x74</literal></expr>:</case>

        <expr_stmt pos:start="123:9" pos:end="123:41"><expr pos:start="123:9" pos:end="123:40"><name pos:start="123:9" pos:end="123:25"><name pos:start="123:9" pos:end="123:9">s</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:25">reg_event_ctrl</name></name> <operator pos:start="123:27" pos:end="123:27">=</operator> <name pos:start="123:29" pos:end="123:33">value</name> <operator pos:start="123:35" pos:end="123:35">&amp;</operator> <literal type="number" pos:start="123:37" pos:end="123:40">0x07</literal></expr>;</expr_stmt>

        <break pos:start="125:9" pos:end="125:14">break;</break>



    <default pos:start="129:5" pos:end="129:12">default:</default>

        <return pos:start="131:9" pos:end="131:15">return;</return>

    </block_content>}</block></switch>



    <expr_stmt pos:start="137:5" pos:end="137:25"><expr pos:start="137:5" pos:end="137:24"><call pos:start="137:5" pos:end="137:24"><name pos:start="137:5" pos:end="137:21">cadence_timer_run</name><argument_list pos:start="137:22" pos:end="137:24">(<argument pos:start="137:23" pos:end="137:23"><expr pos:start="137:23" pos:end="137:23"><name pos:start="137:23" pos:end="137:23">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:28"><expr pos:start="139:5" pos:end="139:27"><call pos:start="139:5" pos:end="139:27"><name pos:start="139:5" pos:end="139:24">cadence_timer_update</name><argument_list pos:start="139:25" pos:end="139:27">(<argument pos:start="139:26" pos:end="139:26"><expr pos:start="139:26" pos:end="139:26"><name pos:start="139:26" pos:end="139:26">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
