<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16046.c" pos:tabs="8"><function pos:start="1:1" pos:end="129:1"><type pos:start="1:1" pos:end="1:10"><name pos:start="1:1" pos:end="1:8">CPUState</name> <modifier pos:start="1:10" pos:end="1:10">*</modifier></type><name pos:start="1:11" pos:end="1:23">ppc440ep_init</name><parameter_list pos:start="1:24" pos:end="5:46">(<parameter pos:start="1:25" pos:end="1:44"><decl pos:start="1:25" pos:end="1:44"><type pos:start="1:25" pos:end="1:44"><name pos:start="1:25" pos:end="1:34">ram_addr_t</name> <modifier pos:start="1:36" pos:end="1:36">*</modifier></type><name pos:start="1:37" pos:end="1:44">ram_size</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:59"><decl pos:start="1:47" pos:end="1:59"><type pos:start="1:47" pos:end="1:59"><name pos:start="1:47" pos:end="1:52">PCIBus</name> <modifier pos:start="1:54" pos:end="1:54">*</modifier><modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:59">pcip</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:57"><decl pos:start="3:25" pos:end="3:57"><type pos:start="3:25" pos:end="3:54"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:38">unsigned</name> <name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:57"><name pos:start="3:44" pos:end="3:54">pci_irq_nrs</name><index pos:start="3:55" pos:end="3:57">[<expr pos:start="3:56" pos:end="3:56"><literal type="number" pos:start="3:56" pos:end="3:56">4</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="3:60" pos:end="3:70"><decl pos:start="3:60" pos:end="3:70"><type pos:start="3:60" pos:end="3:70"><name pos:start="3:60" pos:end="3:62">int</name></type> <name pos:start="3:64" pos:end="3:70">do_init</name></decl></parameter>,

                        <parameter pos:start="5:25" pos:end="5:45"><decl pos:start="5:25" pos:end="5:45"><type pos:start="5:25" pos:end="5:45"><specifier pos:start="5:25" pos:end="5:29">const</specifier> <name pos:start="5:31" pos:end="5:34">char</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:45">cpu_model</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="129:1">{<block_content pos:start="9:5" pos:end="127:15">

    <decl_stmt pos:start="9:5" pos:end="9:58"><decl pos:start="9:5" pos:end="9:57"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:22">target_phys_addr_t</name></type> <name pos:start="9:24" pos:end="9:57"><name pos:start="9:24" pos:end="9:32">ram_bases</name><index pos:start="9:33" pos:end="9:57">[<expr pos:start="9:34" pos:end="9:56"><name pos:start="9:34" pos:end="9:56">PPC440EP_SDRAM_NR_BANKS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:58"><decl pos:start="11:5" pos:end="11:57"><type pos:start="11:5" pos:end="11:22"><name pos:start="11:5" pos:end="11:22">target_phys_addr_t</name></type> <name pos:start="11:24" pos:end="11:57"><name pos:start="11:24" pos:end="11:32">ram_sizes</name><index pos:start="11:33" pos:end="11:57">[<expr pos:start="11:34" pos:end="11:56"><name pos:start="11:34" pos:end="11:56">PPC440EP_SDRAM_NR_BANKS</name></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:18"><decl pos:start="13:5" pos:end="13:17"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">CPUState</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:17">env</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:18"><decl pos:start="15:5" pos:end="15:17"><type pos:start="15:5" pos:end="15:14"><name pos:start="15:5" pos:end="15:12">qemu_irq</name> <modifier pos:start="15:14" pos:end="15:14">*</modifier></type><name pos:start="15:15" pos:end="15:17">pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:14"><name pos:start="17:5" pos:end="17:12">qemu_irq</name> <modifier pos:start="17:14" pos:end="17:14">*</modifier></type><name pos:start="17:15" pos:end="17:18">irqs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:23"><decl pos:start="19:5" pos:end="19:22"><type pos:start="19:5" pos:end="19:14"><name pos:start="19:5" pos:end="19:12">qemu_irq</name> <modifier pos:start="19:14" pos:end="19:14">*</modifier></type><name pos:start="19:15" pos:end="19:22">pci_irqs</name></decl>;</decl_stmt>



    <if_stmt pos:start="23:5" pos:end="27:5"><if pos:start="23:5" pos:end="27:5">if <condition pos:start="23:8" pos:end="23:26">(<expr pos:start="23:9" pos:end="23:25"><name pos:start="23:9" pos:end="23:17">cpu_model</name> <operator pos:start="23:19" pos:end="23:20">==</operator> <name pos:start="23:22" pos:end="23:25">NULL</name></expr>)</condition> <block pos:start="23:28" pos:end="27:5">{<block_content pos:start="25:9" pos:end="25:33">

        <expr_stmt pos:start="25:9" pos:end="25:33"><expr pos:start="25:9" pos:end="25:32"><name pos:start="25:9" pos:end="25:17">cpu_model</name> <operator pos:start="25:19" pos:end="25:19">=</operator> <literal type="string" pos:start="25:21" pos:end="25:32">"440-Xilinx"</literal></expr>;</expr_stmt> <comment type="line" pos:start="25:35" pos:end="25:57">// XXX: should be 440EP</comment>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:30"><expr pos:start="29:5" pos:end="29:29"><name pos:start="29:5" pos:end="29:7">env</name> <operator pos:start="29:9" pos:end="29:9">=</operator> <call pos:start="29:11" pos:end="29:29"><name pos:start="29:11" pos:end="29:18">cpu_init</name><argument_list pos:start="29:19" pos:end="29:29">(<argument pos:start="29:20" pos:end="29:28"><expr pos:start="29:20" pos:end="29:28"><name pos:start="29:20" pos:end="29:28">cpu_model</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="31:5" pos:end="37:5"><if pos:start="31:5" pos:end="37:5">if <condition pos:start="31:8" pos:end="31:13">(<expr pos:start="31:9" pos:end="31:12"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:12">env</name></expr>)</condition> <block pos:start="31:15" pos:end="37:5">{<block_content pos:start="33:9" pos:end="35:16">

        <expr_stmt pos:start="33:9" pos:end="33:55"><expr pos:start="33:9" pos:end="33:54"><call pos:start="33:9" pos:end="33:54"><name pos:start="33:9" pos:end="33:15">fprintf</name><argument_list pos:start="33:16" pos:end="33:54">(<argument pos:start="33:17" pos:end="33:22"><expr pos:start="33:17" pos:end="33:22"><name pos:start="33:17" pos:end="33:22">stderr</name></expr></argument>, <argument pos:start="33:25" pos:end="33:53"><expr pos:start="33:25" pos:end="33:53"><literal type="string" pos:start="33:25" pos:end="33:53">"Unable to initialize CPU!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:16"><expr pos:start="35:9" pos:end="35:15"><call pos:start="35:9" pos:end="35:15"><name pos:start="35:9" pos:end="35:12">exit</name><argument_list pos:start="35:13" pos:end="35:15">(<argument pos:start="35:14" pos:end="35:14"><expr pos:start="35:14" pos:end="35:14"><literal type="number" pos:start="35:14" pos:end="35:14">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="41:5" pos:end="41:34"><expr pos:start="41:5" pos:end="41:33"><call pos:start="41:5" pos:end="41:33"><name pos:start="41:5" pos:end="41:16">ppc_dcr_init</name><argument_list pos:start="41:17" pos:end="41:33">(<argument pos:start="41:18" pos:end="41:20"><expr pos:start="41:18" pos:end="41:20"><name pos:start="41:18" pos:end="41:20">env</name></expr></argument>, <argument pos:start="41:23" pos:end="41:26"><expr pos:start="41:23" pos:end="41:26"><name pos:start="41:23" pos:end="41:26">NULL</name></expr></argument>, <argument pos:start="41:29" pos:end="41:32"><expr pos:start="41:29" pos:end="41:32"><name pos:start="41:29" pos:end="41:32">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:30">/* interrupt controller */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:58"><expr pos:start="47:5" pos:end="47:57"><name pos:start="47:5" pos:end="47:8">irqs</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <call pos:start="47:12" pos:end="47:57"><name pos:start="47:12" pos:end="47:20">g_malloc0</name><argument_list pos:start="47:21" pos:end="47:57">(<argument pos:start="47:22" pos:end="47:56"><expr pos:start="47:22" pos:end="47:56"><sizeof pos:start="47:22" pos:end="47:37">sizeof<argument_list pos:start="47:28" pos:end="47:37">(<argument pos:start="47:29" pos:end="47:36"><expr pos:start="47:29" pos:end="47:36"><name pos:start="47:29" pos:end="47:36">qemu_irq</name></expr></argument>)</argument_list></sizeof> <operator pos:start="47:39" pos:end="47:39">*</operator> <name pos:start="47:41" pos:end="47:56">PPCUIC_OUTPUT_NB</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:78"><expr pos:start="49:5" pos:end="49:77"><name pos:start="49:5" pos:end="49:27"><name pos:start="49:5" pos:end="49:8">irqs</name><index pos:start="49:9" pos:end="49:27">[<expr pos:start="49:10" pos:end="49:26"><name pos:start="49:10" pos:end="49:26">PPCUIC_OUTPUT_INT</name></expr>]</index></name> <operator pos:start="49:29" pos:end="49:29">=</operator> <operator pos:start="49:31" pos:end="49:31">(</operator><operator pos:start="49:32" pos:end="49:32">(</operator><name pos:start="49:33" pos:end="49:40">qemu_irq</name> <operator pos:start="49:42" pos:end="49:42">*</operator><operator pos:start="49:43" pos:end="49:43">)</operator><name pos:start="49:44" pos:end="49:58"><name pos:start="49:44" pos:end="49:46">env</name><operator pos:start="49:47" pos:end="49:48">-&gt;</operator><name pos:start="49:49" pos:end="49:58">irq_inputs</name></name><operator pos:start="49:59" pos:end="49:59">)</operator><index pos:start="49:60" pos:end="49:77">[<expr pos:start="49:61" pos:end="49:76"><name pos:start="49:61" pos:end="49:76">PPC40x_INPUT_INT</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:80"><expr pos:start="51:5" pos:end="51:79"><name pos:start="51:5" pos:end="51:28"><name pos:start="51:5" pos:end="51:8">irqs</name><index pos:start="51:9" pos:end="51:28">[<expr pos:start="51:10" pos:end="51:27"><name pos:start="51:10" pos:end="51:27">PPCUIC_OUTPUT_CINT</name></expr>]</index></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <operator pos:start="51:32" pos:end="51:32">(</operator><operator pos:start="51:33" pos:end="51:33">(</operator><name pos:start="51:34" pos:end="51:41">qemu_irq</name> <operator pos:start="51:43" pos:end="51:43">*</operator><operator pos:start="51:44" pos:end="51:44">)</operator><name pos:start="51:45" pos:end="51:59"><name pos:start="51:45" pos:end="51:47">env</name><operator pos:start="51:48" pos:end="51:49">-&gt;</operator><name pos:start="51:50" pos:end="51:59">irq_inputs</name></name><operator pos:start="51:60" pos:end="51:60">)</operator><index pos:start="51:61" pos:end="51:79">[<expr pos:start="51:62" pos:end="51:78"><name pos:start="51:62" pos:end="51:78">PPC40x_INPUT_CINT</name></expr>]</index></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:46"><expr pos:start="53:5" pos:end="53:45"><name pos:start="53:5" pos:end="53:7">pic</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <call pos:start="53:11" pos:end="53:45"><name pos:start="53:11" pos:end="53:21">ppcuic_init</name><argument_list pos:start="53:22" pos:end="53:45">(<argument pos:start="53:23" pos:end="53:25"><expr pos:start="53:23" pos:end="53:25"><name pos:start="53:23" pos:end="53:25">env</name></expr></argument>, <argument pos:start="53:28" pos:end="53:31"><expr pos:start="53:28" pos:end="53:31"><name pos:start="53:28" pos:end="53:31">irqs</name></expr></argument>, <argument pos:start="53:34" pos:end="53:38"><expr pos:start="53:34" pos:end="53:38"><literal type="number" pos:start="53:34" pos:end="53:38">0x0C0</literal></expr></argument>, <argument pos:start="53:41" pos:end="53:41"><expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">0</literal></expr></argument>, <argument pos:start="53:44" pos:end="53:44"><expr pos:start="53:44" pos:end="53:44"><literal type="number" pos:start="53:44" pos:end="53:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="57:5" pos:end="57:26">/* SDRAM controller */</comment>

    <expr_stmt pos:start="59:5" pos:end="59:44"><expr pos:start="59:5" pos:end="59:43"><call pos:start="59:5" pos:end="59:43"><name pos:start="59:5" pos:end="59:10">memset</name><argument_list pos:start="59:11" pos:end="59:43">(<argument pos:start="59:12" pos:end="59:20"><expr pos:start="59:12" pos:end="59:20"><name pos:start="59:12" pos:end="59:20">ram_bases</name></expr></argument>, <argument pos:start="59:23" pos:end="59:23"><expr pos:start="59:23" pos:end="59:23"><literal type="number" pos:start="59:23" pos:end="59:23">0</literal></expr></argument>, <argument pos:start="59:26" pos:end="59:42"><expr pos:start="59:26" pos:end="59:42"><sizeof pos:start="59:26" pos:end="59:42">sizeof<argument_list pos:start="59:32" pos:end="59:42">(<argument pos:start="59:33" pos:end="59:41"><expr pos:start="59:33" pos:end="59:41"><name pos:start="59:33" pos:end="59:41">ram_bases</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:44"><expr pos:start="61:5" pos:end="61:43"><call pos:start="61:5" pos:end="61:43"><name pos:start="61:5" pos:end="61:10">memset</name><argument_list pos:start="61:11" pos:end="61:43">(<argument pos:start="61:12" pos:end="61:20"><expr pos:start="61:12" pos:end="61:20"><name pos:start="61:12" pos:end="61:20">ram_sizes</name></expr></argument>, <argument pos:start="61:23" pos:end="61:23"><expr pos:start="61:23" pos:end="61:23"><literal type="number" pos:start="61:23" pos:end="61:23">0</literal></expr></argument>, <argument pos:start="61:26" pos:end="61:42"><expr pos:start="61:26" pos:end="61:42"><sizeof pos:start="61:26" pos:end="61:42">sizeof<argument_list pos:start="61:32" pos:end="61:42">(<argument pos:start="61:33" pos:end="61:41"><expr pos:start="61:33" pos:end="61:41"><name pos:start="61:33" pos:end="61:41">ram_sizes</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="67:63"><expr pos:start="63:5" pos:end="67:62"><operator pos:start="63:5" pos:end="63:5">*</operator><name pos:start="63:6" pos:end="63:13">ram_size</name> <operator pos:start="63:15" pos:end="63:15">=</operator> <call pos:start="63:17" pos:end="67:62"><name pos:start="63:17" pos:end="63:35">ppc4xx_sdram_adjust</name><argument_list pos:start="63:36" pos:end="67:62">(<argument pos:start="63:37" pos:end="63:45"><expr pos:start="63:37" pos:end="63:45"><operator pos:start="63:37" pos:end="63:37">*</operator><name pos:start="63:38" pos:end="63:45">ram_size</name></expr></argument>, <argument pos:start="63:48" pos:end="63:70"><expr pos:start="63:48" pos:end="63:70"><name pos:start="63:48" pos:end="63:70">PPC440EP_SDRAM_NR_BANKS</name></expr></argument>,

                                    <argument pos:start="65:37" pos:end="65:45"><expr pos:start="65:37" pos:end="65:45"><name pos:start="65:37" pos:end="65:45">ram_bases</name></expr></argument>, <argument pos:start="65:48" pos:end="65:56"><expr pos:start="65:48" pos:end="65:56"><name pos:start="65:48" pos:end="65:56">ram_sizes</name></expr></argument>,

                                    <argument pos:start="67:37" pos:end="67:61"><expr pos:start="67:37" pos:end="67:61"><name pos:start="67:37" pos:end="67:61">ppc440ep_sdram_bank_sizes</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="69:5" pos:end="69:78">/* XXX 440EP's ECC interrupts are on UIC1, but we've only created UIC0. */</comment>

    <expr_stmt pos:start="71:5" pos:end="73:42"><expr pos:start="71:5" pos:end="73:41"><call pos:start="71:5" pos:end="73:41"><name pos:start="71:5" pos:end="71:21">ppc4xx_sdram_init</name><argument_list pos:start="71:22" pos:end="73:41">(<argument pos:start="71:23" pos:end="71:25"><expr pos:start="71:23" pos:end="71:25"><name pos:start="71:23" pos:end="71:25">env</name></expr></argument>, <argument pos:start="71:28" pos:end="71:34"><expr pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:34"><name pos:start="71:28" pos:end="71:30">pic</name><index pos:start="71:31" pos:end="71:34">[<expr pos:start="71:32" pos:end="71:33"><literal type="number" pos:start="71:32" pos:end="71:33">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="71:37" pos:end="71:59"><expr pos:start="71:37" pos:end="71:59"><name pos:start="71:37" pos:end="71:59">PPC440EP_SDRAM_NR_BANKS</name></expr></argument>, <argument pos:start="71:62" pos:end="71:70"><expr pos:start="71:62" pos:end="71:70"><name pos:start="71:62" pos:end="71:70">ram_bases</name></expr></argument>,

                      <argument pos:start="73:23" pos:end="73:31"><expr pos:start="73:23" pos:end="73:31"><name pos:start="73:23" pos:end="73:31">ram_sizes</name></expr></argument>, <argument pos:start="73:34" pos:end="73:40"><expr pos:start="73:34" pos:end="73:40"><name pos:start="73:34" pos:end="73:40">do_init</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:13">/* PCI */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:46"><expr pos:start="79:5" pos:end="79:45"><name pos:start="79:5" pos:end="79:12">pci_irqs</name> <operator pos:start="79:14" pos:end="79:14">=</operator> <call pos:start="79:16" pos:end="79:45"><name pos:start="79:16" pos:end="79:23">g_malloc</name><argument_list pos:start="79:24" pos:end="79:45">(<argument pos:start="79:25" pos:end="79:44"><expr pos:start="79:25" pos:end="79:44"><sizeof pos:start="79:25" pos:end="79:40">sizeof<argument_list pos:start="79:31" pos:end="79:40">(<argument pos:start="79:32" pos:end="79:39"><expr pos:start="79:32" pos:end="79:39"><name pos:start="79:32" pos:end="79:39">qemu_irq</name></expr></argument>)</argument_list></sizeof> <operator pos:start="79:42" pos:end="79:42">*</operator> <literal type="number" pos:start="79:44" pos:end="79:44">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:38"><expr pos:start="81:5" pos:end="81:37"><name pos:start="81:5" pos:end="81:15"><name pos:start="81:5" pos:end="81:12">pci_irqs</name><index pos:start="81:13" pos:end="81:15">[<expr pos:start="81:14" pos:end="81:14"><literal type="number" pos:start="81:14" pos:end="81:14">0</literal></expr>]</index></name> <operator pos:start="81:17" pos:end="81:17">=</operator> <name pos:start="81:19" pos:end="81:37"><name pos:start="81:19" pos:end="81:21">pic</name><index pos:start="81:22" pos:end="81:37">[<expr pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:36"><name pos:start="81:23" pos:end="81:33">pci_irq_nrs</name><index pos:start="81:34" pos:end="81:36">[<expr pos:start="81:35" pos:end="81:35"><literal type="number" pos:start="81:35" pos:end="81:35">0</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:38"><expr pos:start="83:5" pos:end="83:37"><name pos:start="83:5" pos:end="83:15"><name pos:start="83:5" pos:end="83:12">pci_irqs</name><index pos:start="83:13" pos:end="83:15">[<expr pos:start="83:14" pos:end="83:14"><literal type="number" pos:start="83:14" pos:end="83:14">1</literal></expr>]</index></name> <operator pos:start="83:17" pos:end="83:17">=</operator> <name pos:start="83:19" pos:end="83:37"><name pos:start="83:19" pos:end="83:21">pic</name><index pos:start="83:22" pos:end="83:37">[<expr pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:36"><name pos:start="83:23" pos:end="83:33">pci_irq_nrs</name><index pos:start="83:34" pos:end="83:36">[<expr pos:start="83:35" pos:end="83:35"><literal type="number" pos:start="83:35" pos:end="83:35">1</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="85:38"><expr pos:start="85:5" pos:end="85:37"><name pos:start="85:5" pos:end="85:15"><name pos:start="85:5" pos:end="85:12">pci_irqs</name><index pos:start="85:13" pos:end="85:15">[<expr pos:start="85:14" pos:end="85:14"><literal type="number" pos:start="85:14" pos:end="85:14">2</literal></expr>]</index></name> <operator pos:start="85:17" pos:end="85:17">=</operator> <name pos:start="85:19" pos:end="85:37"><name pos:start="85:19" pos:end="85:21">pic</name><index pos:start="85:22" pos:end="85:37">[<expr pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:36"><name pos:start="85:23" pos:end="85:33">pci_irq_nrs</name><index pos:start="85:34" pos:end="85:36">[<expr pos:start="85:35" pos:end="85:35"><literal type="number" pos:start="85:35" pos:end="85:35">2</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="87:5" pos:end="87:38"><expr pos:start="87:5" pos:end="87:37"><name pos:start="87:5" pos:end="87:15"><name pos:start="87:5" pos:end="87:12">pci_irqs</name><index pos:start="87:13" pos:end="87:15">[<expr pos:start="87:14" pos:end="87:14"><literal type="number" pos:start="87:14" pos:end="87:14">3</literal></expr>]</index></name> <operator pos:start="87:17" pos:end="87:17">=</operator> <name pos:start="87:19" pos:end="87:37"><name pos:start="87:19" pos:end="87:21">pic</name><index pos:start="87:22" pos:end="87:37">[<expr pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:36"><name pos:start="87:23" pos:end="87:33">pci_irq_nrs</name><index pos:start="87:34" pos:end="87:36">[<expr pos:start="87:35" pos:end="87:35"><literal type="number" pos:start="87:35" pos:end="87:35">3</literal></expr>]</index></name></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="97:47"><expr pos:start="89:5" pos:end="97:46"><operator pos:start="89:5" pos:end="89:5">*</operator><name pos:start="89:6" pos:end="89:9">pcip</name> <operator pos:start="89:11" pos:end="89:11">=</operator> <call pos:start="89:13" pos:end="97:46"><name pos:start="89:13" pos:end="89:27">ppc4xx_pci_init</name><argument_list pos:start="89:28" pos:end="97:46">(<argument pos:start="89:29" pos:end="89:31"><expr pos:start="89:29" pos:end="89:31"><name pos:start="89:29" pos:end="89:31">env</name></expr></argument>, <argument pos:start="89:34" pos:end="89:41"><expr pos:start="89:34" pos:end="89:41"><name pos:start="89:34" pos:end="89:41">pci_irqs</name></expr></argument>,

                            <argument pos:start="91:29" pos:end="91:47"><expr pos:start="91:29" pos:end="91:47"><name pos:start="91:29" pos:end="91:47">PPC440EP_PCI_CONFIG</name></expr></argument>,

                            <argument pos:start="93:29" pos:end="93:47"><expr pos:start="93:29" pos:end="93:47"><name pos:start="93:29" pos:end="93:47">PPC440EP_PCI_INTACK</name></expr></argument>,

                            <argument pos:start="95:29" pos:end="95:48"><expr pos:start="95:29" pos:end="95:48"><name pos:start="95:29" pos:end="95:48">PPC440EP_PCI_SPECIAL</name></expr></argument>,

                            <argument pos:start="97:29" pos:end="97:45"><expr pos:start="97:29" pos:end="97:45"><name pos:start="97:29" pos:end="97:45">PPC440EP_PCI_REGS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="99:5" pos:end="101:52"><if pos:start="99:5" pos:end="101:52">if <condition pos:start="99:8" pos:end="99:15">(<expr pos:start="99:9" pos:end="99:14"><operator pos:start="99:9" pos:end="99:9">!</operator><operator pos:start="99:10" pos:end="99:10">*</operator><name pos:start="99:11" pos:end="99:14">pcip</name></expr>)</condition><block type="pseudo" pos:start="101:9" pos:end="101:52"><block_content pos:start="101:9" pos:end="101:52">

        <expr_stmt pos:start="101:9" pos:end="101:52"><expr pos:start="101:9" pos:end="101:51"><call pos:start="101:9" pos:end="101:51"><name pos:start="101:9" pos:end="101:14">printf</name><argument_list pos:start="101:15" pos:end="101:51">(<argument pos:start="101:16" pos:end="101:50"><expr pos:start="101:16" pos:end="101:50"><literal type="string" pos:start="101:16" pos:end="101:50">"couldn't create PCI controller!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="105:5" pos:end="105:55"><expr pos:start="105:5" pos:end="105:54"><call pos:start="105:5" pos:end="105:54"><name pos:start="105:5" pos:end="105:17">isa_mmio_init</name><argument_list pos:start="105:18" pos:end="105:54">(<argument pos:start="105:19" pos:end="105:33"><expr pos:start="105:19" pos:end="105:33"><name pos:start="105:19" pos:end="105:33">PPC440EP_PCI_IO</name></expr></argument>, <argument pos:start="105:36" pos:end="105:53"><expr pos:start="105:36" pos:end="105:53"><name pos:start="105:36" pos:end="105:53">PPC440EP_PCI_IOLEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="109:5" pos:end="115:5"><if pos:start="109:5" pos:end="115:5">if <condition pos:start="109:8" pos:end="109:30">(<expr pos:start="109:9" pos:end="109:29"><name pos:start="109:9" pos:end="109:21"><name pos:start="109:9" pos:end="109:18">serial_hds</name><index pos:start="109:19" pos:end="109:21">[<expr pos:start="109:20" pos:end="109:20"><literal type="number" pos:start="109:20" pos:end="109:20">0</literal></expr>]</index></name> <operator pos:start="109:23" pos:end="109:24">!=</operator> <name pos:start="109:26" pos:end="109:29">NULL</name></expr>)</condition> <block pos:start="109:32" pos:end="115:5">{<block_content pos:start="111:9" pos:end="113:44">

        <expr_stmt pos:start="111:9" pos:end="113:44"><expr pos:start="111:9" pos:end="113:43"><call pos:start="111:9" pos:end="113:43"><name pos:start="111:9" pos:end="111:22">serial_mm_init</name><argument_list pos:start="111:23" pos:end="113:43">(<argument pos:start="111:24" pos:end="111:33"><expr pos:start="111:24" pos:end="111:33"><literal type="number" pos:start="111:24" pos:end="111:33">0xef600300</literal></expr></argument>, <argument pos:start="111:36" pos:end="111:36"><expr pos:start="111:36" pos:end="111:36"><literal type="number" pos:start="111:36" pos:end="111:36">0</literal></expr></argument>, <argument pos:start="111:39" pos:end="111:44"><expr pos:start="111:39" pos:end="111:44"><name pos:start="111:39" pos:end="111:44"><name pos:start="111:39" pos:end="111:41">pic</name><index pos:start="111:42" pos:end="111:44">[<expr pos:start="111:43" pos:end="111:43"><literal type="number" pos:start="111:43" pos:end="111:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="111:47" pos:end="111:68"><expr pos:start="111:47" pos:end="111:68"><name pos:start="111:47" pos:end="111:68">PPC_SERIAL_MM_BAUDBASE</name></expr></argument>,

                       <argument pos:start="113:24" pos:end="113:36"><expr pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:36"><name pos:start="113:24" pos:end="113:33">serial_hds</name><index pos:start="113:34" pos:end="113:36">[<expr pos:start="113:35" pos:end="113:35"><literal type="number" pos:start="113:35" pos:end="113:35">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="113:39" pos:end="113:39"><expr pos:start="113:39" pos:end="113:39"><literal type="number" pos:start="113:39" pos:end="113:39">1</literal></expr></argument>, <argument pos:start="113:42" pos:end="113:42"><expr pos:start="113:42" pos:end="113:42"><literal type="number" pos:start="113:42" pos:end="113:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="117:5" pos:end="123:5"><if pos:start="117:5" pos:end="123:5">if <condition pos:start="117:8" pos:end="117:30">(<expr pos:start="117:9" pos:end="117:29"><name pos:start="117:9" pos:end="117:21"><name pos:start="117:9" pos:end="117:18">serial_hds</name><index pos:start="117:19" pos:end="117:21">[<expr pos:start="117:20" pos:end="117:20"><literal type="number" pos:start="117:20" pos:end="117:20">1</literal></expr>]</index></name> <operator pos:start="117:23" pos:end="117:24">!=</operator> <name pos:start="117:26" pos:end="117:29">NULL</name></expr>)</condition> <block pos:start="117:32" pos:end="123:5">{<block_content pos:start="119:9" pos:end="121:44">

        <expr_stmt pos:start="119:9" pos:end="121:44"><expr pos:start="119:9" pos:end="121:43"><call pos:start="119:9" pos:end="121:43"><name pos:start="119:9" pos:end="119:22">serial_mm_init</name><argument_list pos:start="119:23" pos:end="121:43">(<argument pos:start="119:24" pos:end="119:33"><expr pos:start="119:24" pos:end="119:33"><literal type="number" pos:start="119:24" pos:end="119:33">0xef600400</literal></expr></argument>, <argument pos:start="119:36" pos:end="119:36"><expr pos:start="119:36" pos:end="119:36"><literal type="number" pos:start="119:36" pos:end="119:36">0</literal></expr></argument>, <argument pos:start="119:39" pos:end="119:44"><expr pos:start="119:39" pos:end="119:44"><name pos:start="119:39" pos:end="119:44"><name pos:start="119:39" pos:end="119:41">pic</name><index pos:start="119:42" pos:end="119:44">[<expr pos:start="119:43" pos:end="119:43"><literal type="number" pos:start="119:43" pos:end="119:43">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="119:47" pos:end="119:68"><expr pos:start="119:47" pos:end="119:68"><name pos:start="119:47" pos:end="119:68">PPC_SERIAL_MM_BAUDBASE</name></expr></argument>,

                       <argument pos:start="121:24" pos:end="121:36"><expr pos:start="121:24" pos:end="121:36"><name pos:start="121:24" pos:end="121:36"><name pos:start="121:24" pos:end="121:33">serial_hds</name><index pos:start="121:34" pos:end="121:36">[<expr pos:start="121:35" pos:end="121:35"><literal type="number" pos:start="121:35" pos:end="121:35">1</literal></expr>]</index></name></expr></argument>, <argument pos:start="121:39" pos:end="121:39"><expr pos:start="121:39" pos:end="121:39"><literal type="number" pos:start="121:39" pos:end="121:39">1</literal></expr></argument>, <argument pos:start="121:42" pos:end="121:42"><expr pos:start="121:42" pos:end="121:42"><literal type="number" pos:start="121:42" pos:end="121:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="127:5" pos:end="127:15">return <expr pos:start="127:12" pos:end="127:14"><name pos:start="127:12" pos:end="127:14">env</name></expr>;</return>

</block_content>}</block></function>
</unit>
