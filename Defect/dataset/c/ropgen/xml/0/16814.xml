<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16814.c" pos:tabs="8"><function pos:start="1:1" pos:end="197:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">aio_write_f</name><parameter_list pos:start="1:23" pos:end="1:64">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:35">BlockBackend</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">blk</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:50"><decl pos:start="1:43" pos:end="1:50"><type pos:start="1:43" pos:end="1:50"><name pos:start="1:43" pos:end="1:45">int</name></type> <name pos:start="1:47" pos:end="1:50">argc</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:63"><decl pos:start="1:53" pos:end="1:63"><type pos:start="1:53" pos:end="1:63"><name pos:start="1:53" pos:end="1:56">char</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier><modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:63">argv</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="197:1">{<block_content pos:start="5:5" pos:end="195:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:14"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:14">nr_iov</name></decl>, <decl pos:start="5:17" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:17" pos:end="5:17">c</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:23"><decl pos:start="7:5" pos:end="7:22"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">pattern</name> <init pos:start="7:17" pos:end="7:22">= <expr pos:start="7:19" pos:end="7:22"><literal type="number" pos:start="7:19" pos:end="7:22">0xcd</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:52"><decl pos:start="9:5" pos:end="9:51"><type pos:start="9:5" pos:end="9:20"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:18">aio_ctx</name></name> <modifier pos:start="9:20" pos:end="9:20">*</modifier></type><name pos:start="9:21" pos:end="9:23">ctx</name> <init pos:start="9:25" pos:end="9:51">= <expr pos:start="9:27" pos:end="9:51"><call pos:start="9:27" pos:end="9:51"><name pos:start="9:27" pos:end="9:32">g_new0</name><argument_list pos:start="9:33" pos:end="9:51">(<argument pos:start="9:34" pos:end="9:47"><expr pos:start="9:34" pos:end="9:47">struct <name pos:start="9:41" pos:end="9:47">aio_ctx</name></expr></argument>, <argument pos:start="9:50" pos:end="9:50"><expr pos:start="9:50" pos:end="9:50"><literal type="number" pos:start="9:50" pos:end="9:50">1</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:18"><decl pos:start="11:5" pos:end="11:17"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:13">flags</name> <init pos:start="11:15" pos:end="11:17">= <expr pos:start="11:17" pos:end="11:17"><literal type="number" pos:start="11:17" pos:end="11:17">0</literal></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:19"><expr pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:7">ctx</name><operator pos:start="15:8" pos:end="15:9">-&gt;</operator><name pos:start="15:10" pos:end="15:12">blk</name></name> <operator pos:start="15:14" pos:end="15:14">=</operator> <name pos:start="15:16" pos:end="15:18">blk</name></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="73:5">while <condition pos:start="17:11" pos:end="17:53">(<expr pos:start="17:12" pos:end="17:52"><operator pos:start="17:12" pos:end="17:12">(</operator><name pos:start="17:13" pos:end="17:13">c</name> <operator pos:start="17:15" pos:end="17:15">=</operator> <call pos:start="17:17" pos:end="17:45"><name pos:start="17:17" pos:end="17:22">getopt</name><argument_list pos:start="17:23" pos:end="17:45">(<argument pos:start="17:24" pos:end="17:27"><expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">argc</name></expr></argument>, <argument pos:start="17:30" pos:end="17:33"><expr pos:start="17:30" pos:end="17:33"><name pos:start="17:30" pos:end="17:33">argv</name></expr></argument>, <argument pos:start="17:36" pos:end="17:44"><expr pos:start="17:36" pos:end="17:44"><literal type="string" pos:start="17:36" pos:end="17:44">"CfqP:uz"</literal></expr></argument>)</argument_list></call><operator pos:start="17:46" pos:end="17:46">)</operator> <operator pos:start="17:48" pos:end="17:49">!=</operator> <operator pos:start="17:51" pos:end="17:51">-</operator><literal type="number" pos:start="17:52" pos:end="17:52">1</literal></expr>)</condition> <block pos:start="17:55" pos:end="73:5">{<block_content pos:start="19:9" pos:end="71:9">

        <switch pos:start="19:9" pos:end="71:9">switch <condition pos:start="19:16" pos:end="19:18">(<expr pos:start="19:17" pos:end="19:17"><name pos:start="19:17" pos:end="19:17">c</name></expr>)</condition> <block pos:start="19:20" pos:end="71:9">{<block_content pos:start="21:9" pos:end="69:56">

        <case pos:start="21:9" pos:end="21:17">case <expr pos:start="21:14" pos:end="21:16"><literal type="char" pos:start="21:14" pos:end="21:16">'C'</literal></expr>:</case>

            <expr_stmt pos:start="23:13" pos:end="23:30"><expr pos:start="23:13" pos:end="23:29"><name pos:start="23:13" pos:end="23:22"><name pos:start="23:13" pos:end="23:15">ctx</name><operator pos:start="23:16" pos:end="23:17">-&gt;</operator><name pos:start="23:18" pos:end="23:22">Cflag</name></name> <operator pos:start="23:24" pos:end="23:24">=</operator> <name pos:start="23:26" pos:end="23:29">true</name></expr>;</expr_stmt>

            <break pos:start="25:13" pos:end="25:18">break;</break>

        <case pos:start="27:9" pos:end="27:17">case <expr pos:start="27:14" pos:end="27:16"><literal type="char" pos:start="27:14" pos:end="27:16">'f'</literal></expr>:</case>

            <expr_stmt pos:start="29:13" pos:end="29:34"><expr pos:start="29:13" pos:end="29:33"><name pos:start="29:13" pos:end="29:17">flags</name> <operator pos:start="29:19" pos:end="29:20">|=</operator> <name pos:start="29:22" pos:end="29:33">BDRV_REQ_FUA</name></expr>;</expr_stmt>

            <break pos:start="31:13" pos:end="31:18">break;</break>

        <case pos:start="33:9" pos:end="33:17">case <expr pos:start="33:14" pos:end="33:16"><literal type="char" pos:start="33:14" pos:end="33:16">'q'</literal></expr>:</case>

            <expr_stmt pos:start="35:13" pos:end="35:30"><expr pos:start="35:13" pos:end="35:29"><name pos:start="35:13" pos:end="35:22"><name pos:start="35:13" pos:end="35:15">ctx</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">qflag</name></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <name pos:start="35:26" pos:end="35:29">true</name></expr>;</expr_stmt>

            <break pos:start="37:13" pos:end="37:18">break;</break>

        <case pos:start="39:9" pos:end="39:17">case <expr pos:start="39:14" pos:end="39:16"><literal type="char" pos:start="39:14" pos:end="39:16">'u'</literal></expr>:</case>

            <expr_stmt pos:start="41:13" pos:end="41:40"><expr pos:start="41:13" pos:end="41:39"><name pos:start="41:13" pos:end="41:17">flags</name> <operator pos:start="41:19" pos:end="41:20">|=</operator> <name pos:start="41:22" pos:end="41:39">BDRV_REQ_MAY_UNMAP</name></expr>;</expr_stmt>

            <break pos:start="43:13" pos:end="43:18">break;</break>

        <case pos:start="45:9" pos:end="45:17">case <expr pos:start="45:14" pos:end="45:16"><literal type="char" pos:start="45:14" pos:end="45:16">'P'</literal></expr>:</case>

            <expr_stmt pos:start="47:13" pos:end="47:44"><expr pos:start="47:13" pos:end="47:43"><name pos:start="47:13" pos:end="47:19">pattern</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <call pos:start="47:23" pos:end="47:43"><name pos:start="47:23" pos:end="47:35">parse_pattern</name><argument_list pos:start="47:36" pos:end="47:43">(<argument pos:start="47:37" pos:end="47:42"><expr pos:start="47:37" pos:end="47:42"><name pos:start="47:37" pos:end="47:42">optarg</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="49:13" pos:end="55:13"><if pos:start="49:13" pos:end="55:13">if <condition pos:start="49:16" pos:end="49:28">(<expr pos:start="49:17" pos:end="49:27"><name pos:start="49:17" pos:end="49:23">pattern</name> <operator pos:start="49:25" pos:end="49:25">&lt;</operator> <literal type="number" pos:start="49:27" pos:end="49:27">0</literal></expr>)</condition> <block pos:start="49:30" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:25">

                <expr_stmt pos:start="51:17" pos:end="51:28"><expr pos:start="51:17" pos:end="51:27"><call pos:start="51:17" pos:end="51:27"><name pos:start="51:17" pos:end="51:22">g_free</name><argument_list pos:start="51:23" pos:end="51:27">(<argument pos:start="51:24" pos:end="51:26"><expr pos:start="51:24" pos:end="51:26"><name pos:start="51:24" pos:end="51:26">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="53:17" pos:end="53:25">return <expr pos:start="53:24" pos:end="53:24"><literal type="number" pos:start="53:24" pos:end="53:24">0</literal></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <break pos:start="57:13" pos:end="57:18">break;</break>

        <case pos:start="59:9" pos:end="59:17">case <expr pos:start="59:14" pos:end="59:16"><literal type="char" pos:start="59:14" pos:end="59:16">'z'</literal></expr>:</case>

            <expr_stmt pos:start="61:13" pos:end="61:30"><expr pos:start="61:13" pos:end="61:29"><name pos:start="61:13" pos:end="61:22"><name pos:start="61:13" pos:end="61:15">ctx</name><operator pos:start="61:16" pos:end="61:17">-&gt;</operator><name pos:start="61:18" pos:end="61:22">zflag</name></name> <operator pos:start="61:24" pos:end="61:24">=</operator> <name pos:start="61:26" pos:end="61:29">true</name></expr>;</expr_stmt>

            <break pos:start="63:13" pos:end="63:18">break;</break>

        <default pos:start="65:9" pos:end="65:16">default:</default>

            <expr_stmt pos:start="67:13" pos:end="67:24"><expr pos:start="67:13" pos:end="67:23"><call pos:start="67:13" pos:end="67:23"><name pos:start="67:13" pos:end="67:18">g_free</name><argument_list pos:start="67:19" pos:end="67:23">(<argument pos:start="67:20" pos:end="67:22"><expr pos:start="67:20" pos:end="67:22"><name pos:start="67:20" pos:end="67:22">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="69:13" pos:end="69:56">return <expr pos:start="69:20" pos:end="69:55"><call pos:start="69:20" pos:end="69:55"><name pos:start="69:20" pos:end="69:39">qemuio_command_usage</name><argument_list pos:start="69:40" pos:end="69:55">(<argument pos:start="69:41" pos:end="69:54"><expr pos:start="69:41" pos:end="69:54"><operator pos:start="69:41" pos:end="69:41">&amp;</operator><name pos:start="69:42" pos:end="69:54">aio_write_cmd</name></expr></argument>)</argument_list></call></expr>;</return>

        </block_content>}</block></switch>

    </block_content>}</block></while>



    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:26">(<expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:14">optind</name> <operator pos:start="77:16" pos:end="77:16">&gt;</operator> <name pos:start="77:18" pos:end="77:21">argc</name> <operator pos:start="77:23" pos:end="77:23">-</operator> <literal type="number" pos:start="77:25" pos:end="77:25">2</literal></expr>)</condition> <block pos:start="77:28" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:52">

        <expr_stmt pos:start="79:9" pos:end="79:20"><expr pos:start="79:9" pos:end="79:19"><call pos:start="79:9" pos:end="79:19"><name pos:start="79:9" pos:end="79:14">g_free</name><argument_list pos:start="79:15" pos:end="79:19">(<argument pos:start="79:16" pos:end="79:18"><expr pos:start="79:16" pos:end="79:18"><name pos:start="79:16" pos:end="79:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:52">return <expr pos:start="81:16" pos:end="81:51"><call pos:start="81:16" pos:end="81:51"><name pos:start="81:16" pos:end="81:35">qemuio_command_usage</name><argument_list pos:start="81:36" pos:end="81:51">(<argument pos:start="81:37" pos:end="81:50"><expr pos:start="81:37" pos:end="81:50"><operator pos:start="81:37" pos:end="81:37">&amp;</operator><name pos:start="81:38" pos:end="81:50">aio_write_cmd</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="87:5" pos:end="95:5"><if pos:start="87:5" pos:end="95:5">if <condition pos:start="87:8" pos:end="87:41">(<expr pos:start="87:9" pos:end="87:40"><name pos:start="87:9" pos:end="87:18"><name pos:start="87:9" pos:end="87:11">ctx</name><operator pos:start="87:12" pos:end="87:13">-&gt;</operator><name pos:start="87:14" pos:end="87:18">zflag</name></name> <operator pos:start="87:20" pos:end="87:21">&amp;&amp;</operator> <name pos:start="87:23" pos:end="87:28">optind</name> <operator pos:start="87:30" pos:end="87:31">!=</operator> <name pos:start="87:33" pos:end="87:36">argc</name> <operator pos:start="87:38" pos:end="87:38">-</operator> <literal type="number" pos:start="87:40" pos:end="87:40">2</literal></expr>)</condition> <block pos:start="87:43" pos:end="95:5">{<block_content pos:start="89:9" pos:end="93:17">

        <expr_stmt pos:start="89:9" pos:end="89:63"><expr pos:start="89:9" pos:end="89:62"><call pos:start="89:9" pos:end="89:62"><name pos:start="89:9" pos:end="89:14">printf</name><argument_list pos:start="89:15" pos:end="89:62">(<argument pos:start="89:16" pos:end="89:61"><expr pos:start="89:16" pos:end="89:61"><literal type="string" pos:start="89:16" pos:end="89:61">"-z supports only a single length parameter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:20"><expr pos:start="91:9" pos:end="91:19"><call pos:start="91:9" pos:end="91:19"><name pos:start="91:9" pos:end="91:14">g_free</name><argument_list pos:start="91:15" pos:end="91:19">(<argument pos:start="91:16" pos:end="91:18"><expr pos:start="91:16" pos:end="91:18"><name pos:start="91:16" pos:end="91:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:17">return <expr pos:start="93:16" pos:end="93:16"><literal type="number" pos:start="93:16" pos:end="93:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="99:5" pos:end="107:5"><if pos:start="99:5" pos:end="107:5">if <condition pos:start="99:8" pos:end="99:52">(<expr pos:start="99:9" pos:end="99:51"><operator pos:start="99:9" pos:end="99:9">(</operator><name pos:start="99:10" pos:end="99:14">flags</name> <operator pos:start="99:16" pos:end="99:16">&amp;</operator> <name pos:start="99:18" pos:end="99:35">BDRV_REQ_MAY_UNMAP</name><operator pos:start="99:36" pos:end="99:36">)</operator> <operator pos:start="99:38" pos:end="99:39">&amp;&amp;</operator> <operator pos:start="99:41" pos:end="99:41">!</operator><name pos:start="99:42" pos:end="99:51"><name pos:start="99:42" pos:end="99:44">ctx</name><operator pos:start="99:45" pos:end="99:46">-&gt;</operator><name pos:start="99:47" pos:end="99:51">zflag</name></name></expr>)</condition> <block pos:start="99:54" pos:end="107:5">{<block_content pos:start="101:9" pos:end="105:17">

        <expr_stmt pos:start="101:9" pos:end="101:51"><expr pos:start="101:9" pos:end="101:50"><call pos:start="101:9" pos:end="101:50"><name pos:start="101:9" pos:end="101:14">printf</name><argument_list pos:start="101:15" pos:end="101:50">(<argument pos:start="101:16" pos:end="101:49"><expr pos:start="101:16" pos:end="101:49"><literal type="string" pos:start="101:16" pos:end="101:49">"-u requires -z to be specified\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:20"><expr pos:start="103:9" pos:end="103:19"><call pos:start="103:9" pos:end="103:19"><name pos:start="103:9" pos:end="103:14">g_free</name><argument_list pos:start="103:15" pos:end="103:19">(<argument pos:start="103:16" pos:end="103:18"><expr pos:start="103:16" pos:end="103:18"><name pos:start="103:16" pos:end="103:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:17">return <expr pos:start="105:16" pos:end="105:16"><literal type="number" pos:start="105:16" pos:end="105:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="111:5" pos:end="119:5"><if pos:start="111:5" pos:end="119:5">if <condition pos:start="111:8" pos:end="111:33">(<expr pos:start="111:9" pos:end="111:32"><name pos:start="111:9" pos:end="111:18"><name pos:start="111:9" pos:end="111:11">ctx</name><operator pos:start="111:12" pos:end="111:13">-&gt;</operator><name pos:start="111:14" pos:end="111:18">zflag</name></name> <operator pos:start="111:20" pos:end="111:21">&amp;&amp;</operator> <name pos:start="111:23" pos:end="111:32"><name pos:start="111:23" pos:end="111:25">ctx</name><operator pos:start="111:26" pos:end="111:27">-&gt;</operator><name pos:start="111:28" pos:end="111:32">Pflag</name></name></expr>)</condition> <block pos:start="111:35" pos:end="119:5">{<block_content pos:start="113:9" pos:end="117:17">

        <expr_stmt pos:start="113:9" pos:end="113:67"><expr pos:start="113:9" pos:end="113:66"><call pos:start="113:9" pos:end="113:66"><name pos:start="113:9" pos:end="113:14">printf</name><argument_list pos:start="113:15" pos:end="113:66">(<argument pos:start="113:16" pos:end="113:65"><expr pos:start="113:16" pos:end="113:65"><literal type="string" pos:start="113:16" pos:end="113:65">"-z and -P cannot be specified at the same time\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="115:9" pos:end="115:20"><expr pos:start="115:9" pos:end="115:19"><call pos:start="115:9" pos:end="115:19"><name pos:start="115:9" pos:end="115:14">g_free</name><argument_list pos:start="115:15" pos:end="115:19">(<argument pos:start="115:16" pos:end="115:18"><expr pos:start="115:16" pos:end="115:18"><name pos:start="115:16" pos:end="115:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="117:9" pos:end="117:17">return <expr pos:start="117:16" pos:end="117:16"><literal type="number" pos:start="117:16" pos:end="117:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="123:5" pos:end="123:39"><expr pos:start="123:5" pos:end="123:38"><name pos:start="123:5" pos:end="123:15"><name pos:start="123:5" pos:end="123:7">ctx</name><operator pos:start="123:8" pos:end="123:9">-&gt;</operator><name pos:start="123:10" pos:end="123:15">offset</name></name> <operator pos:start="123:17" pos:end="123:17">=</operator> <call pos:start="123:19" pos:end="123:38"><name pos:start="123:19" pos:end="123:24">cvtnum</name><argument_list pos:start="123:25" pos:end="123:38">(<argument pos:start="123:26" pos:end="123:37"><expr pos:start="123:26" pos:end="123:37"><name pos:start="123:26" pos:end="123:37"><name pos:start="123:26" pos:end="123:29">argv</name><index pos:start="123:30" pos:end="123:37">[<expr pos:start="123:31" pos:end="123:36"><name pos:start="123:31" pos:end="123:36">optind</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="125:5" pos:end="133:5"><if pos:start="125:5" pos:end="133:5">if <condition pos:start="125:8" pos:end="125:24">(<expr pos:start="125:9" pos:end="125:23"><name pos:start="125:9" pos:end="125:19"><name pos:start="125:9" pos:end="125:11">ctx</name><operator pos:start="125:12" pos:end="125:13">-&gt;</operator><name pos:start="125:14" pos:end="125:19">offset</name></name> <operator pos:start="125:21" pos:end="125:21">&lt;</operator> <literal type="number" pos:start="125:23" pos:end="125:23">0</literal></expr>)</condition> <block pos:start="125:26" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:17">

        <expr_stmt pos:start="127:9" pos:end="127:52"><expr pos:start="127:9" pos:end="127:51"><call pos:start="127:9" pos:end="127:51"><name pos:start="127:9" pos:end="127:24">print_cvtnum_err</name><argument_list pos:start="127:25" pos:end="127:51">(<argument pos:start="127:26" pos:end="127:36"><expr pos:start="127:26" pos:end="127:36"><name pos:start="127:26" pos:end="127:36"><name pos:start="127:26" pos:end="127:28">ctx</name><operator pos:start="127:29" pos:end="127:30">-&gt;</operator><name pos:start="127:31" pos:end="127:36">offset</name></name></expr></argument>, <argument pos:start="127:39" pos:end="127:50"><expr pos:start="127:39" pos:end="127:50"><name pos:start="127:39" pos:end="127:50"><name pos:start="127:39" pos:end="127:42">argv</name><index pos:start="127:43" pos:end="127:50">[<expr pos:start="127:44" pos:end="127:49"><name pos:start="127:44" pos:end="127:49">optind</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:20"><expr pos:start="129:9" pos:end="129:19"><call pos:start="129:9" pos:end="129:19"><name pos:start="129:9" pos:end="129:14">g_free</name><argument_list pos:start="129:15" pos:end="129:19">(<argument pos:start="129:16" pos:end="129:18"><expr pos:start="129:16" pos:end="129:18"><name pos:start="129:16" pos:end="129:18">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="131:9" pos:end="131:17">return <expr pos:start="131:16" pos:end="131:16"><literal type="number" pos:start="131:16" pos:end="131:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="135:5" pos:end="135:13"><expr pos:start="135:5" pos:end="135:12"><name pos:start="135:5" pos:end="135:10">optind</name><operator pos:start="135:11" pos:end="135:12">++</operator></expr>;</expr_stmt>



    <if_stmt pos:start="139:5" pos:end="193:5"><if pos:start="139:5" pos:end="161:5">if <condition pos:start="139:8" pos:end="139:19">(<expr pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:18"><name pos:start="139:9" pos:end="139:11">ctx</name><operator pos:start="139:12" pos:end="139:13">-&gt;</operator><name pos:start="139:14" pos:end="139:18">zflag</name></name></expr>)</condition> <block pos:start="139:21" pos:end="161:5">{<block_content pos:start="141:9" pos:end="159:34">

        <decl_stmt pos:start="141:9" pos:end="141:45"><decl pos:start="141:9" pos:end="141:44"><type pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:15">int64_t</name></type> <name pos:start="141:17" pos:end="141:21">count</name> <init pos:start="141:23" pos:end="141:44">= <expr pos:start="141:25" pos:end="141:44"><call pos:start="141:25" pos:end="141:44"><name pos:start="141:25" pos:end="141:30">cvtnum</name><argument_list pos:start="141:31" pos:end="141:44">(<argument pos:start="141:32" pos:end="141:43"><expr pos:start="141:32" pos:end="141:43"><name pos:start="141:32" pos:end="141:43"><name pos:start="141:32" pos:end="141:35">argv</name><index pos:start="141:36" pos:end="141:43">[<expr pos:start="141:37" pos:end="141:42"><name pos:start="141:37" pos:end="141:42">optind</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="143:9" pos:end="151:9"><if pos:start="143:9" pos:end="151:9">if <condition pos:start="143:12" pos:end="143:22">(<expr pos:start="143:13" pos:end="143:21"><name pos:start="143:13" pos:end="143:17">count</name> <operator pos:start="143:19" pos:end="143:19">&lt;</operator> <literal type="number" pos:start="143:21" pos:end="143:21">0</literal></expr>)</condition> <block pos:start="143:24" pos:end="151:9">{<block_content pos:start="145:13" pos:end="149:21">

            <expr_stmt pos:start="145:13" pos:end="145:50"><expr pos:start="145:13" pos:end="145:49"><call pos:start="145:13" pos:end="145:49"><name pos:start="145:13" pos:end="145:28">print_cvtnum_err</name><argument_list pos:start="145:29" pos:end="145:49">(<argument pos:start="145:30" pos:end="145:34"><expr pos:start="145:30" pos:end="145:34"><name pos:start="145:30" pos:end="145:34">count</name></expr></argument>, <argument pos:start="145:37" pos:end="145:48"><expr pos:start="145:37" pos:end="145:48"><name pos:start="145:37" pos:end="145:48"><name pos:start="145:37" pos:end="145:40">argv</name><index pos:start="145:41" pos:end="145:48">[<expr pos:start="145:42" pos:end="145:47"><name pos:start="145:42" pos:end="145:47">optind</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="147:13" pos:end="147:24"><expr pos:start="147:13" pos:end="147:23"><call pos:start="147:13" pos:end="147:23"><name pos:start="147:13" pos:end="147:18">g_free</name><argument_list pos:start="147:19" pos:end="147:23">(<argument pos:start="147:20" pos:end="147:22"><expr pos:start="147:20" pos:end="147:22"><name pos:start="147:20" pos:end="147:22">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="149:13" pos:end="149:21">return <expr pos:start="149:20" pos:end="149:20"><literal type="number" pos:start="149:20" pos:end="149:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:22"><name pos:start="155:9" pos:end="155:11">ctx</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:17">qiov</name><operator pos:start="155:18" pos:end="155:18">.</operator><name pos:start="155:19" pos:end="155:22">size</name></name> <operator pos:start="155:24" pos:end="155:24">=</operator> <name pos:start="155:26" pos:end="155:30">count</name></expr>;</expr_stmt>

        <expr_stmt pos:start="157:9" pos:end="159:34"><expr pos:start="157:9" pos:end="159:33"><call pos:start="157:9" pos:end="159:33"><name pos:start="157:9" pos:end="157:28">blk_aio_write_zeroes</name><argument_list pos:start="157:29" pos:end="159:33">(<argument pos:start="157:30" pos:end="157:32"><expr pos:start="157:30" pos:end="157:32"><name pos:start="157:30" pos:end="157:32">blk</name></expr></argument>, <argument pos:start="157:35" pos:end="157:45"><expr pos:start="157:35" pos:end="157:45"><name pos:start="157:35" pos:end="157:45"><name pos:start="157:35" pos:end="157:37">ctx</name><operator pos:start="157:38" pos:end="157:39">-&gt;</operator><name pos:start="157:40" pos:end="157:45">offset</name></name></expr></argument>, <argument pos:start="157:48" pos:end="157:52"><expr pos:start="157:48" pos:end="157:52"><name pos:start="157:48" pos:end="157:52">count</name></expr></argument>, <argument pos:start="157:55" pos:end="157:59"><expr pos:start="157:55" pos:end="157:59"><name pos:start="157:55" pos:end="157:59">flags</name></expr></argument>, <argument pos:start="157:62" pos:end="157:75"><expr pos:start="157:62" pos:end="157:75"><name pos:start="157:62" pos:end="157:75">aio_write_done</name></expr></argument>,

                             <argument pos:start="159:30" pos:end="159:32"><expr pos:start="159:30" pos:end="159:32"><name pos:start="159:30" pos:end="159:32">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="161:7" pos:end="193:5">else <block pos:start="161:12" pos:end="193:5">{<block_content pos:start="163:9" pos:end="191:29">

        <expr_stmt pos:start="163:9" pos:end="163:31"><expr pos:start="163:9" pos:end="163:30"><name pos:start="163:9" pos:end="163:14">nr_iov</name> <operator pos:start="163:16" pos:end="163:16">=</operator> <name pos:start="163:18" pos:end="163:21">argc</name> <operator pos:start="163:23" pos:end="163:23">-</operator> <name pos:start="163:25" pos:end="163:30">optind</name></expr>;</expr_stmt>

        <expr_stmt pos:start="165:9" pos:end="167:41"><expr pos:start="165:9" pos:end="167:40"><name pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:11">ctx</name><operator pos:start="165:12" pos:end="165:13">-&gt;</operator><name pos:start="165:14" pos:end="165:16">buf</name></name> <operator pos:start="165:18" pos:end="165:18">=</operator> <call pos:start="165:20" pos:end="167:40"><name pos:start="165:20" pos:end="165:31">create_iovec</name><argument_list pos:start="165:32" pos:end="167:40">(<argument pos:start="165:33" pos:end="165:35"><expr pos:start="165:33" pos:end="165:35"><name pos:start="165:33" pos:end="165:35">blk</name></expr></argument>, <argument pos:start="165:38" pos:end="165:47"><expr pos:start="165:38" pos:end="165:47"><operator pos:start="165:38" pos:end="165:38">&amp;</operator><name pos:start="165:39" pos:end="165:47"><name pos:start="165:39" pos:end="165:41">ctx</name><operator pos:start="165:42" pos:end="165:43">-&gt;</operator><name pos:start="165:44" pos:end="165:47">qiov</name></name></expr></argument>, <argument pos:start="165:50" pos:end="165:62"><expr pos:start="165:50" pos:end="165:62"><operator pos:start="165:50" pos:end="165:50">&amp;</operator><name pos:start="165:51" pos:end="165:62"><name pos:start="165:51" pos:end="165:54">argv</name><index pos:start="165:55" pos:end="165:62">[<expr pos:start="165:56" pos:end="165:61"><name pos:start="165:56" pos:end="165:61">optind</name></expr>]</index></name></expr></argument>, <argument pos:start="165:65" pos:end="165:70"><expr pos:start="165:65" pos:end="165:70"><name pos:start="165:65" pos:end="165:70">nr_iov</name></expr></argument>,

                                <argument pos:start="167:33" pos:end="167:39"><expr pos:start="167:33" pos:end="167:39"><name pos:start="167:33" pos:end="167:39">pattern</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="169:9" pos:end="177:9"><if pos:start="169:9" pos:end="177:9">if <condition pos:start="169:12" pos:end="169:29">(<expr pos:start="169:13" pos:end="169:28"><name pos:start="169:13" pos:end="169:20"><name pos:start="169:13" pos:end="169:15">ctx</name><operator pos:start="169:16" pos:end="169:17">-&gt;</operator><name pos:start="169:18" pos:end="169:20">buf</name></name> <operator pos:start="169:22" pos:end="169:23">==</operator> <name pos:start="169:25" pos:end="169:28">NULL</name></expr>)</condition> <block pos:start="169:31" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:21">

            <expr_stmt pos:start="171:13" pos:end="171:69"><expr pos:start="171:13" pos:end="171:68"><call pos:start="171:13" pos:end="171:68"><name pos:start="171:13" pos:end="171:30">block_acct_invalid</name><argument_list pos:start="171:31" pos:end="171:68">(<argument pos:start="171:32" pos:end="171:49"><expr pos:start="171:32" pos:end="171:49"><call pos:start="171:32" pos:end="171:49"><name pos:start="171:32" pos:end="171:44">blk_get_stats</name><argument_list pos:start="171:45" pos:end="171:49">(<argument pos:start="171:46" pos:end="171:48"><expr pos:start="171:46" pos:end="171:48"><name pos:start="171:46" pos:end="171:48">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="171:52" pos:end="171:67"><expr pos:start="171:52" pos:end="171:67"><name pos:start="171:52" pos:end="171:67">BLOCK_ACCT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="173:24"><expr pos:start="173:13" pos:end="173:23"><call pos:start="173:13" pos:end="173:23"><name pos:start="173:13" pos:end="173:18">g_free</name><argument_list pos:start="173:19" pos:end="173:23">(<argument pos:start="173:20" pos:end="173:22"><expr pos:start="173:20" pos:end="173:22"><name pos:start="173:20" pos:end="173:22">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="175:13" pos:end="175:21">return <expr pos:start="175:20" pos:end="175:20"><literal type="number" pos:start="175:20" pos:end="175:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:37"><expr pos:start="181:9" pos:end="181:36"><call pos:start="181:9" pos:end="181:36"><name pos:start="181:9" pos:end="181:20">gettimeofday</name><argument_list pos:start="181:21" pos:end="181:36">(<argument pos:start="181:22" pos:end="181:29"><expr pos:start="181:22" pos:end="181:29"><operator pos:start="181:22" pos:end="181:22">&amp;</operator><name pos:start="181:23" pos:end="181:29"><name pos:start="181:23" pos:end="181:25">ctx</name><operator pos:start="181:26" pos:end="181:27">-&gt;</operator><name pos:start="181:28" pos:end="181:29">t1</name></name></expr></argument>, <argument pos:start="181:32" pos:end="181:35"><expr pos:start="181:32" pos:end="181:35"><name pos:start="181:32" pos:end="181:35">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="183:9" pos:end="185:43"><expr pos:start="183:9" pos:end="185:42"><call pos:start="183:9" pos:end="185:42"><name pos:start="183:9" pos:end="183:24">block_acct_start</name><argument_list pos:start="183:25" pos:end="185:42">(<argument pos:start="183:26" pos:end="183:43"><expr pos:start="183:26" pos:end="183:43"><call pos:start="183:26" pos:end="183:43"><name pos:start="183:26" pos:end="183:38">blk_get_stats</name><argument_list pos:start="183:39" pos:end="183:43">(<argument pos:start="183:40" pos:end="183:42"><expr pos:start="183:40" pos:end="183:42"><name pos:start="183:40" pos:end="183:42">blk</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="183:46" pos:end="183:55"><expr pos:start="183:46" pos:end="183:55"><operator pos:start="183:46" pos:end="183:46">&amp;</operator><name pos:start="183:47" pos:end="183:55"><name pos:start="183:47" pos:end="183:49">ctx</name><operator pos:start="183:50" pos:end="183:51">-&gt;</operator><name pos:start="183:52" pos:end="183:55">acct</name></name></expr></argument>, <argument pos:start="183:58" pos:end="183:71"><expr pos:start="183:58" pos:end="183:71"><name pos:start="183:58" pos:end="183:71"><name pos:start="183:58" pos:end="183:60">ctx</name><operator pos:start="183:61" pos:end="183:62">-&gt;</operator><name pos:start="183:63" pos:end="183:66">qiov</name><operator pos:start="183:67" pos:end="183:67">.</operator><name pos:start="183:68" pos:end="183:71">size</name></name></expr></argument>,

                         <argument pos:start="185:26" pos:end="185:41"><expr pos:start="185:26" pos:end="185:41"><name pos:start="185:26" pos:end="185:41">BLOCK_ACCT_WRITE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="189:9" pos:end="191:29"><expr pos:start="189:9" pos:end="191:28"><call pos:start="189:9" pos:end="191:28"><name pos:start="189:9" pos:end="189:23">blk_aio_pwritev</name><argument_list pos:start="189:24" pos:end="191:28">(<argument pos:start="189:25" pos:end="189:27"><expr pos:start="189:25" pos:end="189:27"><name pos:start="189:25" pos:end="189:27">blk</name></expr></argument>, <argument pos:start="189:30" pos:end="189:40"><expr pos:start="189:30" pos:end="189:40"><name pos:start="189:30" pos:end="189:40"><name pos:start="189:30" pos:end="189:32">ctx</name><operator pos:start="189:33" pos:end="189:34">-&gt;</operator><name pos:start="189:35" pos:end="189:40">offset</name></name></expr></argument>, <argument pos:start="189:43" pos:end="189:52"><expr pos:start="189:43" pos:end="189:52"><operator pos:start="189:43" pos:end="189:43">&amp;</operator><name pos:start="189:44" pos:end="189:52"><name pos:start="189:44" pos:end="189:46">ctx</name><operator pos:start="189:47" pos:end="189:48">-&gt;</operator><name pos:start="189:49" pos:end="189:52">qiov</name></name></expr></argument>, <argument pos:start="189:55" pos:end="189:59"><expr pos:start="189:55" pos:end="189:59"><name pos:start="189:55" pos:end="189:59">flags</name></expr></argument>, <argument pos:start="189:62" pos:end="189:75"><expr pos:start="189:62" pos:end="189:75"><name pos:start="189:62" pos:end="189:75">aio_write_done</name></expr></argument>,

                        <argument pos:start="191:25" pos:end="191:27"><expr pos:start="191:25" pos:end="191:27"><name pos:start="191:25" pos:end="191:27">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="195:5" pos:end="195:13">return <expr pos:start="195:12" pos:end="195:12"><literal type="number" pos:start="195:12" pos:end="195:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
