<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18933.c" pos:tabs="8"><function pos:start="1:1" pos:end="95:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:40">libssh_authentication</name><parameter_list pos:start="1:41" pos:end="1:103">(<parameter pos:start="1:42" pos:end="1:62"><decl pos:start="1:42" pos:end="1:62"><type pos:start="1:42" pos:end="1:62"><name pos:start="1:42" pos:end="1:54">LIBSSHContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">libssh</name></decl></parameter>, <parameter pos:start="1:65" pos:end="1:80"><decl pos:start="1:65" pos:end="1:80"><type pos:start="1:65" pos:end="1:80"><specifier pos:start="1:65" pos:end="1:69">const</specifier> <name pos:start="1:71" pos:end="1:74">char</name> <modifier pos:start="1:76" pos:end="1:76">*</modifier></type><name pos:start="1:77" pos:end="1:80">user</name></decl></parameter>, <parameter pos:start="1:83" pos:end="1:102"><decl pos:start="1:83" pos:end="1:102"><type pos:start="1:83" pos:end="1:102"><specifier pos:start="1:83" pos:end="1:87">const</specifier> <name pos:start="1:89" pos:end="1:92">char</name> <modifier pos:start="1:94" pos:end="1:94">*</modifier></type><name pos:start="1:95" pos:end="1:102">password</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="95:1">{<block_content pos:start="5:5" pos:end="93:13">

    <decl_stmt pos:start="5:5" pos:end="5:23"><decl pos:start="5:5" pos:end="5:22"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:18">authorized</name> <init pos:start="5:20" pos:end="5:22">= <expr pos:start="5:22" pos:end="5:22"><literal type="number" pos:start="5:22" pos:end="5:22">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:20">auth_methods</name></decl>;</decl_stmt>



    <if_stmt pos:start="11:5" pos:end="13:65"><if pos:start="11:5" pos:end="13:65">if <condition pos:start="11:8" pos:end="11:13">(<expr pos:start="11:9" pos:end="11:12"><name pos:start="11:9" pos:end="11:12">user</name></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:65"><block_content pos:start="13:9" pos:end="13:65">

        <expr_stmt pos:start="13:9" pos:end="13:65"><expr pos:start="13:9" pos:end="13:64"><call pos:start="13:9" pos:end="13:64"><name pos:start="13:9" pos:end="13:23">ssh_options_set</name><argument_list pos:start="13:24" pos:end="13:64">(<argument pos:start="13:25" pos:end="13:39"><expr pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:39"><name pos:start="13:25" pos:end="13:30">libssh</name><operator pos:start="13:31" pos:end="13:32">-&gt;</operator><name pos:start="13:33" pos:end="13:39">session</name></name></expr></argument>, <argument pos:start="13:42" pos:end="13:57"><expr pos:start="13:42" pos:end="13:57"><name pos:start="13:42" pos:end="13:57">SSH_OPTIONS_USER</name></expr></argument>, <argument pos:start="13:60" pos:end="13:63"><expr pos:start="13:60" pos:end="13:63"><name pos:start="13:60" pos:end="13:63">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="17:5" pos:end="19:17"><if pos:start="17:5" pos:end="19:17">if <condition pos:start="17:8" pos:end="17:69">(<expr pos:start="17:9" pos:end="17:68"><call pos:start="17:9" pos:end="17:48"><name pos:start="17:9" pos:end="17:25">ssh_userauth_none</name><argument_list pos:start="17:26" pos:end="17:48">(<argument pos:start="17:27" pos:end="17:41"><expr pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:41"><name pos:start="17:27" pos:end="17:32">libssh</name><operator pos:start="17:33" pos:end="17:34">-&gt;</operator><name pos:start="17:35" pos:end="17:41">session</name></name></expr></argument>, <argument pos:start="17:44" pos:end="17:47"><expr pos:start="17:44" pos:end="17:47"><name pos:start="17:44" pos:end="17:47">NULL</name></expr></argument>)</argument_list></call> <operator pos:start="17:50" pos:end="17:51">==</operator> <name pos:start="17:53" pos:end="17:68">SSH_AUTH_SUCCESS</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:17"><block_content pos:start="19:9" pos:end="19:17">

        <return pos:start="19:9" pos:end="19:17">return <expr pos:start="19:16" pos:end="19:16"><literal type="number" pos:start="19:16" pos:end="19:16">0</literal></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="23:60"><expr pos:start="23:5" pos:end="23:59"><name pos:start="23:5" pos:end="23:16">auth_methods</name> <operator pos:start="23:18" pos:end="23:18">=</operator> <call pos:start="23:20" pos:end="23:59"><name pos:start="23:20" pos:end="23:36">ssh_userauth_list</name><argument_list pos:start="23:37" pos:end="23:59">(<argument pos:start="23:38" pos:end="23:52"><expr pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:43">libssh</name><operator pos:start="23:44" pos:end="23:45">-&gt;</operator><name pos:start="23:46" pos:end="23:52">session</name></name></expr></argument>, <argument pos:start="23:55" pos:end="23:58"><expr pos:start="23:55" pos:end="23:58"><name pos:start="23:55" pos:end="23:58">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="27:5" pos:end="65:5"><if pos:start="27:5" pos:end="65:5">if <condition pos:start="27:8" pos:end="27:49">(<expr pos:start="27:9" pos:end="27:48"><name pos:start="27:9" pos:end="27:20">auth_methods</name> <operator pos:start="27:22" pos:end="27:22">&amp;</operator> <name pos:start="27:24" pos:end="27:48">SSH_AUTH_METHOD_PUBLICKEY</name></expr>)</condition> <block pos:start="27:51" pos:end="65:5">{<block_content pos:start="29:9" pos:end="63:9">

        <if_stmt pos:start="29:9" pos:end="63:9"><if pos:start="29:9" pos:end="57:9">if <condition pos:start="29:12" pos:end="29:29">(<expr pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:28"><name pos:start="29:13" pos:end="29:18">libssh</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:28">priv_key</name></name></expr>)</condition> <block pos:start="29:31" pos:end="57:9">{<block_content pos:start="31:13" pos:end="55:13">

            <decl_stmt pos:start="31:13" pos:end="31:31"><decl pos:start="31:13" pos:end="31:30"><type pos:start="31:13" pos:end="31:22"><name pos:start="31:13" pos:end="31:22">ssh_string</name></type> <name pos:start="31:24" pos:end="31:30">pub_key</name></decl>;</decl_stmt>

            <decl_stmt pos:start="33:13" pos:end="33:37"><decl pos:start="33:13" pos:end="33:36"><type pos:start="33:13" pos:end="33:27"><name pos:start="33:13" pos:end="33:27">ssh_private_key</name></type> <name pos:start="33:29" pos:end="33:36">priv_key</name></decl>;</decl_stmt>

            <decl_stmt pos:start="35:13" pos:end="35:21"><decl pos:start="35:13" pos:end="35:20"><type pos:start="35:13" pos:end="35:15"><name pos:start="35:13" pos:end="35:15">int</name></type> <name pos:start="35:17" pos:end="35:20">type</name></decl>;</decl_stmt>

            <if_stmt pos:start="37:13" pos:end="55:13"><if pos:start="37:13" pos:end="49:13">if <condition pos:start="37:16" pos:end="37:97">(<expr pos:start="37:17" pos:end="37:96"><operator pos:start="37:17" pos:end="37:17">!</operator><call pos:start="37:18" pos:end="37:96"><name pos:start="37:18" pos:end="37:44">ssh_try_publickey_from_file</name><argument_list pos:start="37:45" pos:end="37:96">(<argument pos:start="37:46" pos:end="37:60"><expr pos:start="37:46" pos:end="37:60"><name pos:start="37:46" pos:end="37:60"><name pos:start="37:46" pos:end="37:51">libssh</name><operator pos:start="37:52" pos:end="37:53">-&gt;</operator><name pos:start="37:54" pos:end="37:60">session</name></name></expr></argument>, <argument pos:start="37:63" pos:end="37:78"><expr pos:start="37:63" pos:end="37:78"><name pos:start="37:63" pos:end="37:78"><name pos:start="37:63" pos:end="37:68">libssh</name><operator pos:start="37:69" pos:end="37:70">-&gt;</operator><name pos:start="37:71" pos:end="37:78">priv_key</name></name></expr></argument>, <argument pos:start="37:81" pos:end="37:88"><expr pos:start="37:81" pos:end="37:88"><operator pos:start="37:81" pos:end="37:81">&amp;</operator><name pos:start="37:82" pos:end="37:88">pub_key</name></expr></argument>, <argument pos:start="37:91" pos:end="37:95"><expr pos:start="37:91" pos:end="37:95"><operator pos:start="37:91" pos:end="37:91">&amp;</operator><name pos:start="37:92" pos:end="37:95">type</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:99" pos:end="49:13">{<block_content pos:start="39:17" pos:end="47:17">

                <expr_stmt pos:start="39:17" pos:end="39:99"><expr pos:start="39:17" pos:end="39:98"><name pos:start="39:17" pos:end="39:24">priv_key</name> <operator pos:start="39:26" pos:end="39:26">=</operator> <call pos:start="39:28" pos:end="39:98"><name pos:start="39:28" pos:end="39:47">privatekey_from_file</name><argument_list pos:start="39:48" pos:end="39:98">(<argument pos:start="39:49" pos:end="39:63"><expr pos:start="39:49" pos:end="39:63"><name pos:start="39:49" pos:end="39:63"><name pos:start="39:49" pos:end="39:54">libssh</name><operator pos:start="39:55" pos:end="39:56">-&gt;</operator><name pos:start="39:57" pos:end="39:63">session</name></name></expr></argument>, <argument pos:start="39:66" pos:end="39:81"><expr pos:start="39:66" pos:end="39:81"><name pos:start="39:66" pos:end="39:81"><name pos:start="39:66" pos:end="39:71">libssh</name><operator pos:start="39:72" pos:end="39:73">-&gt;</operator><name pos:start="39:74" pos:end="39:81">priv_key</name></name></expr></argument>, <argument pos:start="39:84" pos:end="39:87"><expr pos:start="39:84" pos:end="39:87"><name pos:start="39:84" pos:end="39:87">type</name></expr></argument>, <argument pos:start="39:90" pos:end="39:97"><expr pos:start="39:90" pos:end="39:97"><name pos:start="39:90" pos:end="39:97">password</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="41:17" pos:end="47:17"><if pos:start="41:17" pos:end="47:17">if <condition pos:start="41:20" pos:end="41:102">(<expr pos:start="41:21" pos:end="41:101"><call pos:start="41:21" pos:end="41:81"><name pos:start="41:21" pos:end="41:39">ssh_userauth_pubkey</name><argument_list pos:start="41:40" pos:end="41:81">(<argument pos:start="41:41" pos:end="41:55"><expr pos:start="41:41" pos:end="41:55"><name pos:start="41:41" pos:end="41:55"><name pos:start="41:41" pos:end="41:46">libssh</name><operator pos:start="41:47" pos:end="41:48">-&gt;</operator><name pos:start="41:49" pos:end="41:55">session</name></name></expr></argument>, <argument pos:start="41:58" pos:end="41:61"><expr pos:start="41:58" pos:end="41:61"><name pos:start="41:58" pos:end="41:61">NULL</name></expr></argument>, <argument pos:start="41:64" pos:end="41:70"><expr pos:start="41:64" pos:end="41:70"><name pos:start="41:64" pos:end="41:70">pub_key</name></expr></argument>, <argument pos:start="41:73" pos:end="41:80"><expr pos:start="41:73" pos:end="41:80"><name pos:start="41:73" pos:end="41:80">priv_key</name></expr></argument>)</argument_list></call> <operator pos:start="41:83" pos:end="41:84">==</operator> <name pos:start="41:86" pos:end="41:101">SSH_AUTH_SUCCESS</name></expr>)</condition> <block pos:start="41:104" pos:end="47:17">{<block_content pos:start="43:21" pos:end="45:35">

                    <expr_stmt pos:start="43:21" pos:end="43:107"><expr pos:start="43:21" pos:end="43:106"><call pos:start="43:21" pos:end="43:106"><name pos:start="43:21" pos:end="43:26">av_log</name><argument_list pos:start="43:27" pos:end="43:106">(<argument pos:start="43:28" pos:end="43:33"><expr pos:start="43:28" pos:end="43:33"><name pos:start="43:28" pos:end="43:33">libssh</name></expr></argument>, <argument pos:start="43:36" pos:end="43:47"><expr pos:start="43:36" pos:end="43:47"><name pos:start="43:36" pos:end="43:47">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="43:50" pos:end="43:105"><expr pos:start="43:50" pos:end="43:105"><literal type="string" pos:start="43:50" pos:end="43:105">"Authentication successful with selected private key.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="45:21" pos:end="45:35"><expr pos:start="45:21" pos:end="45:34"><name pos:start="45:21" pos:end="45:30">authorized</name> <operator pos:start="45:32" pos:end="45:32">=</operator> <literal type="number" pos:start="45:34" pos:end="45:34">1</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if> <else pos:start="49:15" pos:end="55:13">else <block pos:start="49:20" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:39">

                <expr_stmt pos:start="51:17" pos:end="51:75"><expr pos:start="51:17" pos:end="51:74"><call pos:start="51:17" pos:end="51:74"><name pos:start="51:17" pos:end="51:22">av_log</name><argument_list pos:start="51:23" pos:end="51:74">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><name pos:start="51:24" pos:end="51:29">libssh</name></expr></argument>, <argument pos:start="51:32" pos:end="51:43"><expr pos:start="51:32" pos:end="51:43"><name pos:start="51:32" pos:end="51:43">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="51:46" pos:end="51:73"><expr pos:start="51:46" pos:end="51:73"><literal type="string" pos:start="51:46" pos:end="51:73">"Invalid key is provided.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="53:17" pos:end="53:39">return <expr pos:start="53:24" pos:end="53:38"><call pos:start="53:24" pos:end="53:38"><name pos:start="53:24" pos:end="53:30">AVERROR</name><argument_list pos:start="53:31" pos:end="53:38">(<argument pos:start="53:32" pos:end="53:37"><expr pos:start="53:32" pos:end="53:37"><name pos:start="53:32" pos:end="53:37">EACCES</name></expr></argument>)</argument_list></call></expr>;</return>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="57:11" pos:end="63:9">else if <condition pos:start="57:19" pos:end="57:90">(<expr pos:start="57:20" pos:end="57:89"><call pos:start="57:20" pos:end="57:69"><name pos:start="57:20" pos:end="57:42">ssh_userauth_autopubkey</name><argument_list pos:start="57:43" pos:end="57:69">(<argument pos:start="57:44" pos:end="57:58"><expr pos:start="57:44" pos:end="57:58"><name pos:start="57:44" pos:end="57:58"><name pos:start="57:44" pos:end="57:49">libssh</name><operator pos:start="57:50" pos:end="57:51">-&gt;</operator><name pos:start="57:52" pos:end="57:58">session</name></name></expr></argument>, <argument pos:start="57:61" pos:end="57:68"><expr pos:start="57:61" pos:end="57:68"><name pos:start="57:61" pos:end="57:68">password</name></expr></argument>)</argument_list></call> <operator pos:start="57:71" pos:end="57:72">==</operator> <name pos:start="57:74" pos:end="57:89">SSH_AUTH_SUCCESS</name></expr>)</condition> <block pos:start="57:92" pos:end="63:9">{<block_content pos:start="59:13" pos:end="61:27">

            <expr_stmt pos:start="59:13" pos:end="59:96"><expr pos:start="59:13" pos:end="59:95"><call pos:start="59:13" pos:end="59:95"><name pos:start="59:13" pos:end="59:18">av_log</name><argument_list pos:start="59:19" pos:end="59:95">(<argument pos:start="59:20" pos:end="59:25"><expr pos:start="59:20" pos:end="59:25"><name pos:start="59:20" pos:end="59:25">libssh</name></expr></argument>, <argument pos:start="59:28" pos:end="59:39"><expr pos:start="59:28" pos:end="59:39"><name pos:start="59:28" pos:end="59:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="59:42" pos:end="59:94"><expr pos:start="59:42" pos:end="59:94"><literal type="string" pos:start="59:42" pos:end="59:94">"Authentication successful with auto selected key.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="61:13" pos:end="61:27"><expr pos:start="61:13" pos:end="61:26"><name pos:start="61:13" pos:end="61:22">authorized</name> <operator pos:start="61:24" pos:end="61:24">=</operator> <literal type="number" pos:start="61:26" pos:end="61:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="69:5" pos:end="79:5"><if pos:start="69:5" pos:end="79:5">if <condition pos:start="69:8" pos:end="69:65">(<expr pos:start="69:9" pos:end="69:64"><operator pos:start="69:9" pos:end="69:9">!</operator><name pos:start="69:10" pos:end="69:19">authorized</name> <operator pos:start="69:21" pos:end="69:22">&amp;&amp;</operator> <operator pos:start="69:24" pos:end="69:24">(</operator><name pos:start="69:25" pos:end="69:36">auth_methods</name> <operator pos:start="69:38" pos:end="69:38">&amp;</operator> <name pos:start="69:40" pos:end="69:63">SSH_AUTH_METHOD_PASSWORD</name><operator pos:start="69:64" pos:end="69:64">)</operator></expr>)</condition> <block pos:start="69:67" pos:end="79:5">{<block_content pos:start="71:9" pos:end="77:9">

        <if_stmt pos:start="71:9" pos:end="77:9"><if pos:start="71:9" pos:end="77:9">if <condition pos:start="71:12" pos:end="71:87">(<expr pos:start="71:13" pos:end="71:86"><call pos:start="71:13" pos:end="71:66"><name pos:start="71:13" pos:end="71:33">ssh_userauth_password</name><argument_list pos:start="71:34" pos:end="71:66">(<argument pos:start="71:35" pos:end="71:49"><expr pos:start="71:35" pos:end="71:49"><name pos:start="71:35" pos:end="71:49"><name pos:start="71:35" pos:end="71:40">libssh</name><operator pos:start="71:41" pos:end="71:42">-&gt;</operator><name pos:start="71:43" pos:end="71:49">session</name></name></expr></argument>, <argument pos:start="71:52" pos:end="71:55"><expr pos:start="71:52" pos:end="71:55"><name pos:start="71:52" pos:end="71:55">NULL</name></expr></argument>, <argument pos:start="71:58" pos:end="71:65"><expr pos:start="71:58" pos:end="71:65"><name pos:start="71:58" pos:end="71:65">password</name></expr></argument>)</argument_list></call> <operator pos:start="71:68" pos:end="71:69">==</operator> <name pos:start="71:71" pos:end="71:86">SSH_AUTH_SUCCESS</name></expr>)</condition> <block pos:start="71:89" pos:end="77:9">{<block_content pos:start="73:13" pos:end="75:27">

            <expr_stmt pos:start="73:13" pos:end="73:87"><expr pos:start="73:13" pos:end="73:86"><call pos:start="73:13" pos:end="73:86"><name pos:start="73:13" pos:end="73:18">av_log</name><argument_list pos:start="73:19" pos:end="73:86">(<argument pos:start="73:20" pos:end="73:25"><expr pos:start="73:20" pos:end="73:25"><name pos:start="73:20" pos:end="73:25">libssh</name></expr></argument>, <argument pos:start="73:28" pos:end="73:39"><expr pos:start="73:28" pos:end="73:39"><name pos:start="73:28" pos:end="73:39">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="73:42" pos:end="73:85"><expr pos:start="73:42" pos:end="73:85"><literal type="string" pos:start="73:42" pos:end="73:85">"Authentication successful with password.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="75:13" pos:end="75:27"><expr pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:22">authorized</name> <operator pos:start="75:24" pos:end="75:24">=</operator> <literal type="number" pos:start="75:26" pos:end="75:26">1</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="83:5" pos:end="89:5"><if pos:start="83:5" pos:end="89:5">if <condition pos:start="83:8" pos:end="83:20">(<expr pos:start="83:9" pos:end="83:19"><operator pos:start="83:9" pos:end="83:9">!</operator><name pos:start="83:10" pos:end="83:19">authorized</name></expr>)</condition> <block pos:start="83:22" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:31">

        <expr_stmt pos:start="85:9" pos:end="85:65"><expr pos:start="85:9" pos:end="85:64"><call pos:start="85:9" pos:end="85:64"><name pos:start="85:9" pos:end="85:14">av_log</name><argument_list pos:start="85:15" pos:end="85:64">(<argument pos:start="85:16" pos:end="85:21"><expr pos:start="85:16" pos:end="85:21"><name pos:start="85:16" pos:end="85:21">libssh</name></expr></argument>, <argument pos:start="85:24" pos:end="85:35"><expr pos:start="85:24" pos:end="85:35"><name pos:start="85:24" pos:end="85:35">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="85:38" pos:end="85:63"><expr pos:start="85:38" pos:end="85:63"><literal type="string" pos:start="85:38" pos:end="85:63">"Authentication failed.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="87:9" pos:end="87:31">return <expr pos:start="87:16" pos:end="87:30"><call pos:start="87:16" pos:end="87:30"><name pos:start="87:16" pos:end="87:22">AVERROR</name><argument_list pos:start="87:23" pos:end="87:30">(<argument pos:start="87:24" pos:end="87:29"><expr pos:start="87:24" pos:end="87:29"><name pos:start="87:24" pos:end="87:29">EACCES</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <return pos:start="93:5" pos:end="93:13">return <expr pos:start="93:12" pos:end="93:12"><literal type="number" pos:start="93:12" pos:end="93:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
