<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/6870.c" pos:tabs="8"><function pos:start="1:1" pos:end="127:1"><type pos:start="1:1" pos:end="1:8"><name pos:start="1:1" pos:end="1:6">PCIBus</name> <modifier pos:start="1:8" pos:end="1:8">*</modifier></type><name pos:start="1:9" pos:end="1:21">pci_pmac_init</name><parameter_list pos:start="1:22" pos:end="5:53">(<parameter pos:start="1:23" pos:end="1:35"><decl pos:start="1:23" pos:end="1:35"><type pos:start="1:23" pos:end="1:35"><name pos:start="1:23" pos:end="1:30">qemu_irq</name> <modifier pos:start="1:32" pos:end="1:32">*</modifier></type><name pos:start="1:33" pos:end="1:35">pic</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:53"><decl pos:start="3:23" pos:end="3:53"><type pos:start="3:23" pos:end="3:53"><name pos:start="3:23" pos:end="3:34">MemoryRegion</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:53">address_space_mem</name></decl></parameter>,

                      <parameter pos:start="5:23" pos:end="5:52"><decl pos:start="5:23" pos:end="5:52"><type pos:start="5:23" pos:end="5:52"><name pos:start="5:23" pos:end="5:34">MemoryRegion</name> <modifier pos:start="5:36" pos:end="5:36">*</modifier></type><name pos:start="5:37" pos:end="5:52">address_space_io</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="127:1">{<block_content pos:start="9:5" pos:end="125:18">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:20"><decl pos:start="11:5" pos:end="11:19"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:16">SysBusDevice</name> <modifier pos:start="11:18" pos:end="11:18">*</modifier></type><name pos:start="11:19" pos:end="11:19">s</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:20"><decl pos:start="13:5" pos:end="13:19"><type pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:16">PCIHostState</name> <modifier pos:start="13:18" pos:end="13:18">*</modifier></type><name pos:start="13:19" pos:end="13:19">h</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:17"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:15"><name pos:start="15:5" pos:end="15:13">UNINState</name> <modifier pos:start="15:15" pos:end="15:15">*</modifier></type><name pos:start="15:16" pos:end="15:16">d</name></decl>;</decl_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:45">/* Use values found on a real PowerMac */</comment>

    <comment type="block" pos:start="21:5" pos:end="21:27">/* Uninorth main bus */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:60"><expr pos:start="23:5" pos:end="23:59"><name pos:start="23:5" pos:end="23:7">dev</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:59"><name pos:start="23:11" pos:end="23:21">qdev_create</name><argument_list pos:start="23:22" pos:end="23:59">(<argument pos:start="23:23" pos:end="23:26"><expr pos:start="23:23" pos:end="23:26"><name pos:start="23:23" pos:end="23:26">NULL</name></expr></argument>, <argument pos:start="23:29" pos:end="23:58"><expr pos:start="23:29" pos:end="23:58"><name pos:start="23:29" pos:end="23:58">TYPE_UNI_NORTH_PCI_HOST_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:26"><expr pos:start="25:5" pos:end="25:25"><call pos:start="25:5" pos:end="25:25"><name pos:start="25:5" pos:end="25:20">qdev_init_nofail</name><argument_list pos:start="25:21" pos:end="25:25">(<argument pos:start="25:22" pos:end="25:24"><expr pos:start="25:22" pos:end="25:24"><name pos:start="25:22" pos:end="25:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:28"><expr pos:start="27:5" pos:end="27:27"><name pos:start="27:5" pos:end="27:5">s</name> <operator pos:start="27:7" pos:end="27:7">=</operator> <call pos:start="27:9" pos:end="27:27"><name pos:start="27:9" pos:end="27:22">SYS_BUS_DEVICE</name><argument_list pos:start="27:23" pos:end="27:27">(<argument pos:start="27:24" pos:end="27:26"><expr pos:start="27:24" pos:end="27:26"><name pos:start="27:24" pos:end="27:26">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:27"><expr pos:start="29:5" pos:end="29:26"><name pos:start="29:5" pos:end="29:5">h</name> <operator pos:start="29:7" pos:end="29:7">=</operator> <call pos:start="29:9" pos:end="29:26"><name pos:start="29:9" pos:end="29:23">PCI_HOST_BRIDGE</name><argument_list pos:start="29:24" pos:end="29:26">(<argument pos:start="29:25" pos:end="29:25"><expr pos:start="29:25" pos:end="29:25"><name pos:start="29:25" pos:end="29:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:39"><expr pos:start="31:5" pos:end="31:38"><name pos:start="31:5" pos:end="31:5">d</name> <operator pos:start="31:7" pos:end="31:7">=</operator> <call pos:start="31:9" pos:end="31:38"><name pos:start="31:9" pos:end="31:33">UNI_NORTH_PCI_HOST_BRIDGE</name><argument_list pos:start="31:34" pos:end="31:38">(<argument pos:start="31:35" pos:end="31:37"><expr pos:start="31:35" pos:end="31:37"><name pos:start="31:35" pos:end="31:37">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:76"><expr pos:start="33:5" pos:end="33:75"><call pos:start="33:5" pos:end="33:75"><name pos:start="33:5" pos:end="33:22">memory_region_init</name><argument_list pos:start="33:23" pos:end="33:75">(<argument pos:start="33:24" pos:end="33:35"><expr pos:start="33:24" pos:end="33:35"><operator pos:start="33:24" pos:end="33:24">&amp;</operator><name pos:start="33:25" pos:end="33:35"><name pos:start="33:25" pos:end="33:25">d</name><operator pos:start="33:26" pos:end="33:27">-&gt;</operator><name pos:start="33:28" pos:end="33:35">pci_mmio</name></name></expr></argument>, <argument pos:start="33:38" pos:end="33:46"><expr pos:start="33:38" pos:end="33:46"><call pos:start="33:38" pos:end="33:46"><name pos:start="33:38" pos:end="33:43">OBJECT</name><argument_list pos:start="33:44" pos:end="33:46">(<argument pos:start="33:45" pos:end="33:45"><expr pos:start="33:45" pos:end="33:45"><name pos:start="33:45" pos:end="33:45">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:49" pos:end="33:58"><expr pos:start="33:49" pos:end="33:58"><literal type="string" pos:start="33:49" pos:end="33:58">"pci-mmio"</literal></expr></argument>, <argument pos:start="33:61" pos:end="33:74"><expr pos:start="33:61" pos:end="33:74"><literal type="number" pos:start="33:61" pos:end="33:74">0x100000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:59"><expr pos:start="35:5" pos:end="37:58"><call pos:start="35:5" pos:end="37:58"><name pos:start="35:5" pos:end="35:28">memory_region_init_alias</name><argument_list pos:start="35:29" pos:end="37:58">(<argument pos:start="35:30" pos:end="35:41"><expr pos:start="35:30" pos:end="35:41"><operator pos:start="35:30" pos:end="35:30">&amp;</operator><name pos:start="35:31" pos:end="35:41"><name pos:start="35:31" pos:end="35:31">d</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:41">pci_hole</name></name></expr></argument>, <argument pos:start="35:44" pos:end="35:52"><expr pos:start="35:44" pos:end="35:52"><call pos:start="35:44" pos:end="35:52"><name pos:start="35:44" pos:end="35:49">OBJECT</name><argument_list pos:start="35:50" pos:end="35:52">(<argument pos:start="35:51" pos:end="35:51"><expr pos:start="35:51" pos:end="35:51"><name pos:start="35:51" pos:end="35:51">d</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="35:55" pos:end="35:64"><expr pos:start="35:55" pos:end="35:64"><literal type="string" pos:start="35:55" pos:end="35:64">"pci-hole"</literal></expr></argument>, <argument pos:start="35:67" pos:end="35:78"><expr pos:start="35:67" pos:end="35:78"><operator pos:start="35:67" pos:end="35:67">&amp;</operator><name pos:start="35:68" pos:end="35:78"><name pos:start="35:68" pos:end="35:68">d</name><operator pos:start="35:69" pos:end="35:70">-&gt;</operator><name pos:start="35:71" pos:end="35:78">pci_mmio</name></name></expr></argument>,

                             <argument pos:start="37:30" pos:end="37:42"><expr pos:start="37:30" pos:end="37:42"><literal type="number" pos:start="37:30" pos:end="37:42">0x80000000ULL</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:57"><expr pos:start="37:45" pos:end="37:57"><literal type="number" pos:start="37:45" pos:end="37:57">0x70000000ULL</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:46"><expr pos:start="39:5" pos:end="41:45"><call pos:start="39:5" pos:end="41:45"><name pos:start="39:5" pos:end="39:31">memory_region_add_subregion</name><argument_list pos:start="39:32" pos:end="41:45">(<argument pos:start="39:33" pos:end="39:49"><expr pos:start="39:33" pos:end="39:49"><name pos:start="39:33" pos:end="39:49">address_space_mem</name></expr></argument>, <argument pos:start="39:52" pos:end="39:64"><expr pos:start="39:52" pos:end="39:64"><literal type="number" pos:start="39:52" pos:end="39:64">0x80000000ULL</literal></expr></argument>,

                                <argument pos:start="41:33" pos:end="41:44"><expr pos:start="41:33" pos:end="41:44"><operator pos:start="41:33" pos:end="41:33">&amp;</operator><name pos:start="41:34" pos:end="41:44"><name pos:start="41:34" pos:end="41:34">d</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:44">pci_hole</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="45:5" pos:end="64:0"><expr pos:start="45:5" pos:end="55:64"><name pos:start="45:5" pos:end="45:10"><name pos:start="45:5" pos:end="45:5">h</name><operator pos:start="45:6" pos:end="45:7">-&gt;</operator><name pos:start="45:8" pos:end="45:10">bus</name></name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="55:64"><name pos:start="45:14" pos:end="45:29">pci_register_bus</name><argument_list pos:start="45:30" pos:end="55:64">(<argument pos:start="45:31" pos:end="45:33"><expr pos:start="45:31" pos:end="45:33"><name pos:start="45:31" pos:end="45:33">dev</name></expr></argument>, <argument pos:start="45:36" pos:end="45:40"><expr pos:start="45:36" pos:end="45:40"><literal type="string" pos:start="45:36" pos:end="45:40">"pci"</literal></expr></argument>,

                              <argument pos:start="47:31" pos:end="47:46"><expr pos:start="47:31" pos:end="47:46"><name pos:start="47:31" pos:end="47:46">pci_unin_set_irq</name></expr></argument>, <argument pos:start="47:49" pos:end="47:64"><expr pos:start="47:49" pos:end="47:64"><name pos:start="47:49" pos:end="47:64">pci_unin_map_irq</name></expr></argument>,

                              <argument pos:start="49:31" pos:end="49:33"><expr pos:start="49:31" pos:end="49:33"><name pos:start="49:31" pos:end="49:33">pic</name></expr></argument>,

                              <argument pos:start="51:31" pos:end="51:42"><expr pos:start="51:31" pos:end="51:42"><operator pos:start="51:31" pos:end="51:31">&amp;</operator><name pos:start="51:32" pos:end="51:42"><name pos:start="51:32" pos:end="51:32">d</name><operator pos:start="51:33" pos:end="51:34">-&gt;</operator><name pos:start="51:35" pos:end="51:42">pci_mmio</name></name></expr></argument>,

                              <argument pos:start="53:31" pos:end="53:46"><expr pos:start="53:31" pos:end="53:46"><name pos:start="53:31" pos:end="53:46">address_space_io</name></expr></argument>,

                              <argument pos:start="55:31" pos:end="55:46"><expr pos:start="55:31" pos:end="55:46"><call pos:start="55:31" pos:end="55:46"><name pos:start="55:31" pos:end="55:39">PCI_DEVFN</name><argument_list pos:start="55:40" pos:end="55:46">(<argument pos:start="55:41" pos:end="55:42"><expr pos:start="55:41" pos:end="55:42"><literal type="number" pos:start="55:41" pos:end="55:42">11</literal></expr></argument>, <argument pos:start="55:45" pos:end="55:45"><expr pos:start="55:45" pos:end="55:45"><literal type="number" pos:start="55:45" pos:end="55:45">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="55:49" pos:end="55:49"><expr pos:start="55:49" pos:end="55:49"><literal type="number" pos:start="55:49" pos:end="55:49">4</literal></expr></argument>, <argument pos:start="55:52" pos:end="55:63"><expr pos:start="55:52" pos:end="55:63"><name pos:start="55:52" pos:end="55:63">TYPE_PCI_BUS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="59:1" pos:end="59:5">#<cpp:directive pos:start="59:2" pos:end="59:3">if</cpp:directive> <expr pos:start="59:5" pos:end="59:5"><literal type="number" pos:start="59:5" pos:end="59:5">0</literal></expr></cpp:if>

    pci_create_simple(h-&gt;bus, PCI_DEVFN(11, 0), "uni-north");

<cpp:endif pos:start="63:1" pos:end="63:6">#<cpp:directive pos:start="63:2" pos:end="63:6">endif</cpp:directive></cpp:endif>



    <expr_stmt pos:start="67:5" pos:end="67:38"><expr pos:start="67:5" pos:end="67:37"><call pos:start="67:5" pos:end="67:37"><name pos:start="67:5" pos:end="67:19">sysbus_mmio_map</name><argument_list pos:start="67:20" pos:end="67:37">(<argument pos:start="67:21" pos:end="67:21"><expr pos:start="67:21" pos:end="67:21"><name pos:start="67:21" pos:end="67:21">s</name></expr></argument>, <argument pos:start="67:24" pos:end="67:24"><expr pos:start="67:24" pos:end="67:24"><literal type="number" pos:start="67:24" pos:end="67:24">0</literal></expr></argument>, <argument pos:start="67:27" pos:end="67:36"><expr pos:start="67:27" pos:end="67:36"><literal type="number" pos:start="67:27" pos:end="67:36">0xf2800000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="82:0"><expr pos:start="69:5" pos:end="69:37"><call pos:start="69:5" pos:end="69:37"><name pos:start="69:5" pos:end="69:19">sysbus_mmio_map</name><argument_list pos:start="69:20" pos:end="69:37">(<argument pos:start="69:21" pos:end="69:21"><expr pos:start="69:21" pos:end="69:21"><name pos:start="69:21" pos:end="69:21">s</name></expr></argument>, <argument pos:start="69:24" pos:end="69:24"><expr pos:start="69:24" pos:end="69:24"><literal type="number" pos:start="69:24" pos:end="69:24">1</literal></expr></argument>, <argument pos:start="69:27" pos:end="69:36"><expr pos:start="69:27" pos:end="69:36"><literal type="number" pos:start="69:27" pos:end="69:36">0xf2c00000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:26">/* DEC 21154 bridge */</comment>

<cpp:if pos:start="75:1" pos:end="75:5">#<cpp:directive pos:start="75:2" pos:end="75:3">if</cpp:directive> <expr pos:start="75:5" pos:end="75:5"><literal type="number" pos:start="75:5" pos:end="75:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="77:5" pos:end="77:79">/* XXX: not activated as PPC BIOS doesn't handle multiple buses properly */</comment>

    pci_create_simple(h-&gt;bus, PCI_DEVFN(12, 0), "dec-21154");

<cpp:endif pos:start="81:1" pos:end="81:6">#<cpp:directive pos:start="81:2" pos:end="81:6">endif</cpp:directive></cpp:endif>



    <comment type="block" pos:start="85:5" pos:end="85:26">/* Uninorth AGP bus */</comment>

    <expr_stmt pos:start="87:5" pos:end="87:65"><expr pos:start="87:5" pos:end="87:64"><call pos:start="87:5" pos:end="87:64"><name pos:start="87:5" pos:end="87:21">pci_create_simple</name><argument_list pos:start="87:22" pos:end="87:64">(<argument pos:start="87:23" pos:end="87:28"><expr pos:start="87:23" pos:end="87:28"><name pos:start="87:23" pos:end="87:28"><name pos:start="87:23" pos:end="87:23">h</name><operator pos:start="87:24" pos:end="87:25">-&gt;</operator><name pos:start="87:26" pos:end="87:28">bus</name></name></expr></argument>, <argument pos:start="87:31" pos:end="87:46"><expr pos:start="87:31" pos:end="87:46"><call pos:start="87:31" pos:end="87:46"><name pos:start="87:31" pos:end="87:39">PCI_DEVFN</name><argument_list pos:start="87:40" pos:end="87:46">(<argument pos:start="87:41" pos:end="87:42"><expr pos:start="87:41" pos:end="87:42"><literal type="number" pos:start="87:41" pos:end="87:42">11</literal></expr></argument>, <argument pos:start="87:45" pos:end="87:45"><expr pos:start="87:45" pos:end="87:45"><literal type="number" pos:start="87:45" pos:end="87:45">0</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:49" pos:end="87:63"><expr pos:start="87:49" pos:end="87:63"><literal type="string" pos:start="87:49" pos:end="87:63">"uni-north-agp"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:60"><expr pos:start="89:5" pos:end="89:59"><name pos:start="89:5" pos:end="89:7">dev</name> <operator pos:start="89:9" pos:end="89:9">=</operator> <call pos:start="89:11" pos:end="89:59"><name pos:start="89:11" pos:end="89:21">qdev_create</name><argument_list pos:start="89:22" pos:end="89:59">(<argument pos:start="89:23" pos:end="89:26"><expr pos:start="89:23" pos:end="89:26"><name pos:start="89:23" pos:end="89:26">NULL</name></expr></argument>, <argument pos:start="89:29" pos:end="89:58"><expr pos:start="89:29" pos:end="89:58"><name pos:start="89:29" pos:end="89:58">TYPE_UNI_NORTH_AGP_HOST_BRIDGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:26"><expr pos:start="91:5" pos:end="91:25"><call pos:start="91:5" pos:end="91:25"><name pos:start="91:5" pos:end="91:20">qdev_init_nofail</name><argument_list pos:start="91:21" pos:end="91:25">(<argument pos:start="91:22" pos:end="91:24"><expr pos:start="91:22" pos:end="91:24"><name pos:start="91:22" pos:end="91:24">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="93:5" pos:end="93:28"><expr pos:start="93:5" pos:end="93:27"><name pos:start="93:5" pos:end="93:5">s</name> <operator pos:start="93:7" pos:end="93:7">=</operator> <call pos:start="93:9" pos:end="93:27"><name pos:start="93:9" pos:end="93:22">SYS_BUS_DEVICE</name><argument_list pos:start="93:23" pos:end="93:27">(<argument pos:start="93:24" pos:end="93:26"><expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="95:38"><expr pos:start="95:5" pos:end="95:37"><call pos:start="95:5" pos:end="95:37"><name pos:start="95:5" pos:end="95:19">sysbus_mmio_map</name><argument_list pos:start="95:20" pos:end="95:37">(<argument pos:start="95:21" pos:end="95:21"><expr pos:start="95:21" pos:end="95:21"><name pos:start="95:21" pos:end="95:21">s</name></expr></argument>, <argument pos:start="95:24" pos:end="95:24"><expr pos:start="95:24" pos:end="95:24"><literal type="number" pos:start="95:24" pos:end="95:24">0</literal></expr></argument>, <argument pos:start="95:27" pos:end="95:36"><expr pos:start="95:27" pos:end="95:36"><literal type="number" pos:start="95:27" pos:end="95:36">0xf0800000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="122:0"><expr pos:start="97:5" pos:end="97:37"><call pos:start="97:5" pos:end="97:37"><name pos:start="97:5" pos:end="97:19">sysbus_mmio_map</name><argument_list pos:start="97:20" pos:end="97:37">(<argument pos:start="97:21" pos:end="97:21"><expr pos:start="97:21" pos:end="97:21"><name pos:start="97:21" pos:end="97:21">s</name></expr></argument>, <argument pos:start="97:24" pos:end="97:24"><expr pos:start="97:24" pos:end="97:24"><literal type="number" pos:start="97:24" pos:end="97:24">1</literal></expr></argument>, <argument pos:start="97:27" pos:end="97:36"><expr pos:start="97:27" pos:end="97:36"><literal type="number" pos:start="97:27" pos:end="97:36">0xf0c00000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="101:5" pos:end="101:31">/* Uninorth internal bus */</comment>

<cpp:if pos:start="103:1" pos:end="103:5">#<cpp:directive pos:start="103:2" pos:end="103:3">if</cpp:directive> <expr pos:start="103:5" pos:end="103:5"><literal type="number" pos:start="103:5" pos:end="103:5">0</literal></expr></cpp:if>

    <comment type="block" pos:start="105:5" pos:end="105:33">/* XXX: not needed for now */</comment>

    pci_create_simple(h-&gt;bus, PCI_DEVFN(14, 0),

                      "uni-north-internal-pci");

    dev = qdev_create(NULL, TYPE_UNI_NORTH_INTERNAL_PCI_HOST_BRIDGE);

    qdev_init_nofail(dev);

    s = SYS_BUS_DEVICE(dev);

    sysbus_mmio_map(s, 0, 0xf4800000);

    sysbus_mmio_map(s, 1, 0xf4c00000);

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>



    <return pos:start="125:5" pos:end="125:18">return <expr pos:start="125:12" pos:end="125:17"><name pos:start="125:12" pos:end="125:17"><name pos:start="125:12" pos:end="125:12">h</name><operator pos:start="125:13" pos:end="125:14">-&gt;</operator><name pos:start="125:15" pos:end="125:17">bus</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
