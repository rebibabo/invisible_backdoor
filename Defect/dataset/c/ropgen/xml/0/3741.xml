<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/3741.c" pos:tabs="8"><function pos:start="1:1" pos:end="185:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">decode_b_picture_header</name><parameter_list pos:start="1:35" pos:end="1:49">(<parameter pos:start="1:36" pos:end="1:48"><decl pos:start="1:36" pos:end="1:48"><type pos:start="1:36" pos:end="1:47"><name pos:start="1:36" pos:end="1:45">VC9Context</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">v</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="185:1">{<block_content pos:start="5:5" pos:end="183:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:15">pqindex</name></decl>;</decl_stmt>



    <comment type="block" pos:start="9:5" pos:end="9:66">/* Prolog common to all frametypes should be done in caller */</comment>

    <if_stmt pos:start="11:5" pos:end="19:5"><if pos:start="11:5" pos:end="19:5">if <condition pos:start="11:8" pos:end="11:37">(<expr pos:start="11:9" pos:end="11:36"><name pos:start="11:9" pos:end="11:18"><name pos:start="11:9" pos:end="11:9">v</name><operator pos:start="11:10" pos:end="11:11">-&gt;</operator><name pos:start="11:12" pos:end="11:18">profile</name></name> <operator pos:start="11:20" pos:end="11:21">==</operator> <name pos:start="11:23" pos:end="11:36">PROFILE_SIMPLE</name></expr>)</condition>

    <block pos:start="13:5" pos:end="19:5">{<block_content pos:start="15:9" pos:end="17:28">

        <expr_stmt pos:start="15:9" pos:end="15:78"><expr pos:start="15:9" pos:end="15:77"><call pos:start="15:9" pos:end="15:77"><name pos:start="15:9" pos:end="15:14">av_log</name><argument_list pos:start="15:15" pos:end="15:77">(<argument pos:start="15:16" pos:end="15:16"><expr pos:start="15:16" pos:end="15:16"><name pos:start="15:16" pos:end="15:16">v</name></expr></argument>, <argument pos:start="15:19" pos:end="15:30"><expr pos:start="15:19" pos:end="15:30"><name pos:start="15:19" pos:end="15:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="15:33" pos:end="15:76"><expr pos:start="15:33" pos:end="15:76"><literal type="string" pos:start="15:33" pos:end="15:76">"Found a B frame while in Simple Profile!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="17:9" pos:end="17:28">return <expr pos:start="17:16" pos:end="17:27"><name pos:start="17:16" pos:end="17:27">FRAME_SKIPED</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="23:5" pos:end="25:74"><expr pos:start="23:5" pos:end="25:73"><name pos:start="23:5" pos:end="23:16"><name pos:start="23:5" pos:end="23:5">v</name><operator pos:start="23:6" pos:end="23:7">-&gt;</operator><name pos:start="23:8" pos:end="23:16">bfraction</name></name> <operator pos:start="23:18" pos:end="23:18">=</operator> <name pos:start="23:20" pos:end="25:73"><name pos:start="23:20" pos:end="23:36">vc9_bfraction_lut</name><index pos:start="23:37" pos:end="25:73">[<expr pos:start="23:38" pos:end="25:72"><call pos:start="23:38" pos:end="25:72"><name pos:start="23:38" pos:end="23:45">get_vlc2</name><argument_list pos:start="23:46" pos:end="25:72">(<argument pos:start="23:47" pos:end="23:52"><expr pos:start="23:47" pos:end="23:52"><operator pos:start="23:47" pos:end="23:47">&amp;</operator><name pos:start="23:48" pos:end="23:52"><name pos:start="23:48" pos:end="23:48">v</name><operator pos:start="23:49" pos:end="23:50">-&gt;</operator><name pos:start="23:51" pos:end="23:52">gb</name></name></expr></argument>, <argument pos:start="23:55" pos:end="23:77"><expr pos:start="23:55" pos:end="23:77"><name pos:start="23:55" pos:end="23:77"><name pos:start="23:55" pos:end="23:71">vc9_bfraction_vlc</name><operator pos:start="23:72" pos:end="23:72">.</operator><name pos:start="23:73" pos:end="23:77">table</name></name></expr></argument>,

                                              <argument pos:start="25:47" pos:end="25:68"><expr pos:start="25:47" pos:end="25:68"><name pos:start="25:47" pos:end="25:68">VC9_BFRACTION_VLC_BITS</name></expr></argument>, <argument pos:start="25:71" pos:end="25:71"><expr pos:start="25:71" pos:end="25:71"><literal type="number" pos:start="25:71" pos:end="25:71">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="45:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:26">(<expr pos:start="27:9" pos:end="27:25"><name pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:9">v</name><operator pos:start="27:10" pos:end="27:11">-&gt;</operator><name pos:start="27:12" pos:end="27:20">bfraction</name></name> <operator pos:start="27:22" pos:end="27:22">&lt;</operator> <operator pos:start="27:24" pos:end="27:24">-</operator><literal type="number" pos:start="27:25" pos:end="27:25">1</literal></expr>)</condition>

    <block pos:start="29:5" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:28">

        <expr_stmt pos:start="31:9" pos:end="31:55"><expr pos:start="31:9" pos:end="31:54"><call pos:start="31:9" pos:end="31:54"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:54">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">v</name></expr></argument>, <argument pos:start="31:19" pos:end="31:30"><expr pos:start="31:19" pos:end="31:30"><name pos:start="31:19" pos:end="31:30">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:33" pos:end="31:53"><expr pos:start="31:33" pos:end="31:53"><literal type="string" pos:start="31:33" pos:end="31:53">"Invalid BFRaction\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:28">return <expr pos:start="33:16" pos:end="33:27"><name pos:start="33:16" pos:end="33:27">FRAME_SKIPED</name></expr>;</return>

    </block_content>}</block></if>

    <if type="elseif" pos:start="37:5" pos:end="45:5">else if <condition pos:start="37:13" pos:end="37:27">(<expr pos:start="37:14" pos:end="37:26"><operator pos:start="37:14" pos:end="37:14">!</operator><name pos:start="37:15" pos:end="37:26"><name pos:start="37:15" pos:end="37:15">v</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:26">bfraction</name></name></expr>)</condition>

    <block pos:start="39:5" pos:end="45:5">{<block_content pos:start="43:9" pos:end="43:43">

        <comment type="block" pos:start="41:9" pos:end="41:41">/* We actually have a BI frame */</comment>

        <return pos:start="43:9" pos:end="43:43">return <expr pos:start="43:16" pos:end="43:42"><call pos:start="43:16" pos:end="43:42"><name pos:start="43:16" pos:end="43:39">decode_bi_picture_header</name><argument_list pos:start="43:40" pos:end="43:42">(<argument pos:start="43:41" pos:end="43:41"><expr pos:start="43:41" pos:end="43:41"><name pos:start="43:41" pos:end="43:41">v</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:37">/* Read the quantization stuff */</comment>

    <expr_stmt pos:start="51:5" pos:end="51:34"><expr pos:start="51:5" pos:end="51:33"><name pos:start="51:5" pos:end="51:11">pqindex</name> <operator pos:start="51:13" pos:end="51:13">=</operator> <call pos:start="51:15" pos:end="51:33"><name pos:start="51:15" pos:end="51:22">get_bits</name><argument_list pos:start="51:23" pos:end="51:33">(<argument pos:start="51:24" pos:end="51:29"><expr pos:start="51:24" pos:end="51:29"><operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:29"><name pos:start="51:25" pos:end="51:25">v</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:29">gb</name></name></expr></argument>, <argument pos:start="51:32" pos:end="51:32"><expr pos:start="51:32" pos:end="51:32"><literal type="number" pos:start="51:32" pos:end="51:32">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="63:5"><if pos:start="53:5" pos:end="55:41">if <condition pos:start="53:8" pos:end="53:50">(<expr pos:start="53:9" pos:end="53:49"><name pos:start="53:9" pos:end="53:25"><name pos:start="53:9" pos:end="53:9">v</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:25">quantizer_mode</name></name> <operator pos:start="53:27" pos:end="53:28">==</operator> <name pos:start="53:30" pos:end="53:49">QUANT_FRAME_IMPLICIT</name></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:41"><block_content pos:start="55:9" pos:end="55:41">

        <expr_stmt pos:start="55:9" pos:end="55:41"><expr pos:start="55:9" pos:end="55:40"><name pos:start="55:9" pos:end="55:13"><name pos:start="55:9" pos:end="55:9">v</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:13">pq</name></name> <operator pos:start="55:15" pos:end="55:15">=</operator> <name pos:start="55:17" pos:end="55:40"><name pos:start="55:17" pos:end="55:28">pquant_table</name><index pos:start="55:29" pos:end="55:31">[<expr pos:start="55:30" pos:end="55:30"><literal type="number" pos:start="55:30" pos:end="55:30">0</literal></expr>]</index><index pos:start="55:32" pos:end="55:40">[<expr pos:start="55:33" pos:end="55:39"><name pos:start="55:33" pos:end="55:39">pqindex</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="57:5" pos:end="63:5">else

    <block pos:start="59:5" pos:end="63:5">{<block_content pos:start="61:9" pos:end="61:59">

        <expr_stmt pos:start="61:9" pos:end="61:59"><expr pos:start="61:9" pos:end="61:58"><name pos:start="61:9" pos:end="61:13"><name pos:start="61:9" pos:end="61:9">v</name><operator pos:start="61:10" pos:end="61:11">-&gt;</operator><name pos:start="61:12" pos:end="61:13">pq</name></name> <operator pos:start="61:15" pos:end="61:15">=</operator> <name pos:start="61:17" pos:end="61:58"><name pos:start="61:17" pos:end="61:28">pquant_table</name><index pos:start="61:29" pos:end="61:49">[<expr pos:start="61:30" pos:end="61:48"><name pos:start="61:30" pos:end="61:46"><name pos:start="61:30" pos:end="61:30">v</name><operator pos:start="61:31" pos:end="61:32">-&gt;</operator><name pos:start="61:33" pos:end="61:46">quantizer_mode</name></name><operator pos:start="61:47" pos:end="61:47">-</operator><literal type="number" pos:start="61:48" pos:end="61:48">1</literal></expr>]</index><index pos:start="61:50" pos:end="61:58">[<expr pos:start="61:51" pos:end="61:57"><name pos:start="61:51" pos:end="61:57">pqindex</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="65:5" pos:end="65:53"><if pos:start="65:5" pos:end="65:53">if <condition pos:start="65:8" pos:end="65:20">(<expr pos:start="65:9" pos:end="65:19"><name pos:start="65:9" pos:end="65:15">pqindex</name> <operator pos:start="65:17" pos:end="65:17">&lt;</operator> <literal type="number" pos:start="65:19" pos:end="65:19">9</literal></expr>)</condition><block type="pseudo" pos:start="65:22" pos:end="65:53"><block_content pos:start="65:22" pos:end="65:53"> <expr_stmt pos:start="65:22" pos:end="65:53"><expr pos:start="65:22" pos:end="65:52"><name pos:start="65:22" pos:end="65:30"><name pos:start="65:22" pos:end="65:22">v</name><operator pos:start="65:23" pos:end="65:24">-&gt;</operator><name pos:start="65:25" pos:end="65:30">halfpq</name></name> <operator pos:start="65:32" pos:end="65:32">=</operator> <call pos:start="65:34" pos:end="65:52"><name pos:start="65:34" pos:end="65:41">get_bits</name><argument_list pos:start="65:42" pos:end="65:52">(<argument pos:start="65:43" pos:end="65:48"><expr pos:start="65:43" pos:end="65:48"><operator pos:start="65:43" pos:end="65:43">&amp;</operator><name pos:start="65:44" pos:end="65:48"><name pos:start="65:44" pos:end="65:44">v</name><operator pos:start="65:45" pos:end="65:46">-&gt;</operator><name pos:start="65:47" pos:end="65:48">gb</name></name></expr></argument>, <argument pos:start="65:51" pos:end="65:51"><expr pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="67:5" pos:end="69:44"><if pos:start="67:5" pos:end="69:44">if <condition pos:start="67:8" pos:end="67:50">(<expr pos:start="67:9" pos:end="67:49"><name pos:start="67:9" pos:end="67:25"><name pos:start="67:9" pos:end="67:9">v</name><operator pos:start="67:10" pos:end="67:11">-&gt;</operator><name pos:start="67:12" pos:end="67:25">quantizer_mode</name></name> <operator pos:start="67:27" pos:end="67:28">==</operator> <name pos:start="67:30" pos:end="67:49">QUANT_FRAME_EXPLICIT</name></expr>)</condition><block type="pseudo" pos:start="69:9" pos:end="69:44"><block_content pos:start="69:9" pos:end="69:44">

        <expr_stmt pos:start="69:9" pos:end="69:44"><expr pos:start="69:9" pos:end="69:43"><name pos:start="69:9" pos:end="69:21"><name pos:start="69:9" pos:end="69:9">v</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:21">pquantizer</name></name> <operator pos:start="69:23" pos:end="69:23">=</operator> <call pos:start="69:25" pos:end="69:43"><name pos:start="69:25" pos:end="69:32">get_bits</name><argument_list pos:start="69:33" pos:end="69:43">(<argument pos:start="69:34" pos:end="69:39"><expr pos:start="69:34" pos:end="69:39"><operator pos:start="69:34" pos:end="69:34">&amp;</operator><name pos:start="69:35" pos:end="69:39"><name pos:start="69:35" pos:end="69:35">v</name><operator pos:start="69:36" pos:end="69:37">-&gt;</operator><name pos:start="69:38" pos:end="69:39">gb</name></name></expr></argument>, <argument pos:start="69:42" pos:end="69:42"><expr pos:start="69:42" pos:end="69:42"><literal type="number" pos:start="69:42" pos:end="69:42">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <comment type="block" pos:start="73:5" pos:end="73:31">/* Read the MV type/mode */</comment>

    <if_stmt pos:start="75:5" pos:end="77:46"><if pos:start="75:5" pos:end="77:46">if <condition pos:start="75:8" pos:end="75:28">(<expr pos:start="75:9" pos:end="75:27"><name pos:start="75:9" pos:end="75:22"><name pos:start="75:9" pos:end="75:9">v</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:22">extended_mv</name></name> <operator pos:start="75:24" pos:end="75:25">==</operator> <literal type="number" pos:start="75:27" pos:end="75:27">1</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:46"><block_content pos:start="77:9" pos:end="77:46">

        <expr_stmt pos:start="77:9" pos:end="77:46"><expr pos:start="77:9" pos:end="77:45"><name pos:start="77:9" pos:end="77:18"><name pos:start="77:9" pos:end="77:9">v</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:18">mvrange</name></name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:45"><name pos:start="77:22" pos:end="77:31">get_prefix</name><argument_list pos:start="77:32" pos:end="77:45">(<argument pos:start="77:33" pos:end="77:38"><expr pos:start="77:33" pos:end="77:38"><operator pos:start="77:33" pos:end="77:33">&amp;</operator><name pos:start="77:34" pos:end="77:38"><name pos:start="77:34" pos:end="77:34">v</name><operator pos:start="77:35" pos:end="77:36">-&gt;</operator><name pos:start="77:37" pos:end="77:38">gb</name></name></expr></argument>, <argument pos:start="77:41" pos:end="77:41"><expr pos:start="77:41" pos:end="77:41"><literal type="number" pos:start="77:41" pos:end="77:41">0</literal></expr></argument>, <argument pos:start="77:44" pos:end="77:44"><expr pos:start="77:44" pos:end="77:44"><literal type="number" pos:start="77:44" pos:end="77:44">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:37"><expr pos:start="79:5" pos:end="79:36"><name pos:start="79:5" pos:end="79:14"><name pos:start="79:5" pos:end="79:5">v</name><operator pos:start="79:6" pos:end="79:7">-&gt;</operator><name pos:start="79:8" pos:end="79:14">mv_mode</name></name> <operator pos:start="79:16" pos:end="79:16">=</operator> <call pos:start="79:18" pos:end="79:36"><name pos:start="79:18" pos:end="79:25">get_bits</name><argument_list pos:start="79:26" pos:end="79:36">(<argument pos:start="79:27" pos:end="79:32"><expr pos:start="79:27" pos:end="79:32"><operator pos:start="79:27" pos:end="79:27">&amp;</operator><name pos:start="79:28" pos:end="79:32"><name pos:start="79:28" pos:end="79:28">v</name><operator pos:start="79:29" pos:end="79:30">-&gt;</operator><name pos:start="79:31" pos:end="79:32">gb</name></name></expr></argument>, <argument pos:start="79:35" pos:end="79:35"><expr pos:start="79:35" pos:end="79:35"><literal type="number" pos:start="79:35" pos:end="79:35">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="81:5" pos:end="119:5"><if pos:start="81:5" pos:end="99:5">if <condition pos:start="81:8" pos:end="81:19">(<expr pos:start="81:9" pos:end="81:18"><name pos:start="81:9" pos:end="81:13"><name pos:start="81:9" pos:end="81:9">v</name><operator pos:start="81:10" pos:end="81:11">-&gt;</operator><name pos:start="81:12" pos:end="81:13">pq</name></name> <operator pos:start="81:15" pos:end="81:15">&lt;</operator> <literal type="number" pos:start="81:17" pos:end="81:18">13</literal></expr>)</condition>

    <block pos:start="83:5" pos:end="99:5">{<block_content pos:start="85:9" pos:end="97:9">

        <if_stmt pos:start="85:9" pos:end="97:9"><if pos:start="85:9" pos:end="97:9">if <condition pos:start="85:12" pos:end="85:24">(<expr pos:start="85:13" pos:end="85:23"><operator pos:start="85:13" pos:end="85:13">!</operator><name pos:start="85:14" pos:end="85:23"><name pos:start="85:14" pos:end="85:14">v</name><operator pos:start="85:15" pos:end="85:16">-&gt;</operator><name pos:start="85:17" pos:end="85:23">mv_mode</name></name></expr>)</condition>

        <block pos:start="87:9" pos:end="97:9">{<block_content pos:start="89:13" pos:end="95:76">

            <expr_stmt pos:start="89:13" pos:end="89:45"><expr pos:start="89:13" pos:end="89:44"><name pos:start="89:13" pos:end="89:22"><name pos:start="89:13" pos:end="89:13">v</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:22">mv_mode</name></name> <operator pos:start="89:24" pos:end="89:24">=</operator> <call pos:start="89:26" pos:end="89:44"><name pos:start="89:26" pos:end="89:33">get_bits</name><argument_list pos:start="89:34" pos:end="89:44">(<argument pos:start="89:35" pos:end="89:40"><expr pos:start="89:35" pos:end="89:40"><operator pos:start="89:35" pos:end="89:35">&amp;</operator><name pos:start="89:36" pos:end="89:40"><name pos:start="89:36" pos:end="89:36">v</name><operator pos:start="89:37" pos:end="89:38">-&gt;</operator><name pos:start="89:39" pos:end="89:40">gb</name></name></expr></argument>, <argument pos:start="89:43" pos:end="89:43"><expr pos:start="89:43" pos:end="89:43"><literal type="number" pos:start="89:43" pos:end="89:43">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="91:13" pos:end="95:76"><if pos:start="91:13" pos:end="95:76">if <condition pos:start="91:16" pos:end="91:27">(<expr pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:26"><name pos:start="91:17" pos:end="91:17">v</name><operator pos:start="91:18" pos:end="91:19">-&gt;</operator><name pos:start="91:20" pos:end="91:26">mv_mode</name></name></expr>)</condition><block type="pseudo" pos:start="93:17" pos:end="95:76"><block_content pos:start="93:17" pos:end="95:76">

                <expr_stmt pos:start="93:17" pos:end="95:76"><expr pos:start="93:17" pos:end="95:75"><call pos:start="93:17" pos:end="95:75"><name pos:start="93:17" pos:end="93:22">av_log</name><argument_list pos:start="93:23" pos:end="95:75">(<argument pos:start="93:24" pos:end="93:24"><expr pos:start="93:24" pos:end="93:24"><name pos:start="93:24" pos:end="93:24">v</name></expr></argument>, <argument pos:start="93:27" pos:end="93:38"><expr pos:start="93:27" pos:end="93:38"><name pos:start="93:27" pos:end="93:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="95:24" pos:end="95:62"><expr pos:start="95:24" pos:end="95:62"><literal type="string" pos:start="95:24" pos:end="95:62">"mv_mode for lowquant B frame was %i\n"</literal></expr></argument>, <argument pos:start="95:65" pos:end="95:74"><expr pos:start="95:65" pos:end="95:74"><name pos:start="95:65" pos:end="95:74"><name pos:start="95:65" pos:end="95:65">v</name><operator pos:start="95:66" pos:end="95:67">-&gt;</operator><name pos:start="95:68" pos:end="95:74">mv_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if>

    <else pos:start="101:5" pos:end="119:5">else

    <block pos:start="103:5" pos:end="119:5">{<block_content pos:start="105:9" pos:end="117:34">

        <if_stmt pos:start="105:9" pos:end="115:9"><if pos:start="105:9" pos:end="115:9">if <condition pos:start="105:12" pos:end="105:24">(<expr pos:start="105:13" pos:end="105:23"><operator pos:start="105:13" pos:end="105:13">!</operator><name pos:start="105:14" pos:end="105:23"><name pos:start="105:14" pos:end="105:14">v</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:23">mv_mode</name></name></expr>)</condition>

        <block pos:start="107:9" pos:end="115:9">{<block_content pos:start="109:13" pos:end="113:77">

            <if_stmt pos:start="109:13" pos:end="113:77"><if pos:start="109:13" pos:end="113:77">if <condition pos:start="109:16" pos:end="109:36">(<expr pos:start="109:17" pos:end="109:35"><call pos:start="109:17" pos:end="109:35"><name pos:start="109:17" pos:end="109:24">get_bits</name><argument_list pos:start="109:25" pos:end="109:35">(<argument pos:start="109:26" pos:end="109:31"><expr pos:start="109:26" pos:end="109:31"><operator pos:start="109:26" pos:end="109:26">&amp;</operator><name pos:start="109:27" pos:end="109:31"><name pos:start="109:27" pos:end="109:27">v</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:31">gb</name></name></expr></argument>, <argument pos:start="109:34" pos:end="109:34"><expr pos:start="109:34" pos:end="109:34"><literal type="number" pos:start="109:34" pos:end="109:34">1</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="111:17" pos:end="113:77"><block_content pos:start="111:17" pos:end="113:77">

                <expr_stmt pos:start="111:17" pos:end="113:77"><expr pos:start="111:17" pos:end="113:76"><call pos:start="111:17" pos:end="113:76"><name pos:start="111:17" pos:end="111:22">av_log</name><argument_list pos:start="111:23" pos:end="113:76">(<argument pos:start="111:24" pos:end="111:24"><expr pos:start="111:24" pos:end="111:24"><name pos:start="111:24" pos:end="111:24">v</name></expr></argument>, <argument pos:start="111:27" pos:end="111:38"><expr pos:start="111:27" pos:end="111:38"><name pos:start="111:27" pos:end="111:38">AV_LOG_ERROR</name></expr></argument>,

                       <argument pos:start="113:24" pos:end="113:63"><expr pos:start="113:24" pos:end="113:63"><literal type="string" pos:start="113:24" pos:end="113:63">"mv_mode for highquant B frame was %i\n"</literal></expr></argument>, <argument pos:start="113:66" pos:end="113:75"><expr pos:start="113:66" pos:end="113:75"><name pos:start="113:66" pos:end="113:75"><name pos:start="113:66" pos:end="113:66">v</name><operator pos:start="113:67" pos:end="113:68">-&gt;</operator><name pos:start="113:69" pos:end="113:75">mv_mode</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:34"><expr pos:start="117:9" pos:end="117:33"><name pos:start="117:9" pos:end="117:18"><name pos:start="117:9" pos:end="117:9">v</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:18">mv_mode</name></name> <operator pos:start="117:20" pos:end="117:20">=</operator> <literal type="number" pos:start="117:22" pos:end="117:23">1</literal><operator pos:start="117:23" pos:end="117:23">-</operator><name pos:start="117:24" pos:end="117:33"><name pos:start="117:24" pos:end="117:24">v</name><operator pos:start="117:25" pos:end="117:26">-&gt;</operator><name pos:start="117:27" pos:end="117:33">mv_mode</name></name></expr>;</expr_stmt> <comment type="line" pos:start="117:36" pos:end="117:63">//To match (pq &lt; 13) mapping</comment>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="123:5" pos:end="133:5"><if pos:start="123:5" pos:end="133:5">if <condition pos:start="123:8" pos:end="123:40">(<expr pos:start="123:9" pos:end="123:39"><name pos:start="123:9" pos:end="123:18"><name pos:start="123:9" pos:end="123:9">v</name><operator pos:start="123:10" pos:end="123:11">-&gt;</operator><name pos:start="123:12" pos:end="123:18">mv_mode</name></name> <operator pos:start="123:20" pos:end="123:21">==</operator> <name pos:start="123:23" pos:end="123:39">MV_PMODE_MIXED_MV</name></expr>)</condition>

    <block pos:start="125:5" pos:end="133:5">{<block_content pos:start="127:9" pos:end="131:22">

        <if_stmt pos:start="127:9" pos:end="131:22"><if pos:start="127:9" pos:end="131:22">if <condition pos:start="127:12" pos:end="129:54">(<expr pos:start="127:13" pos:end="129:53"><call pos:start="127:13" pos:end="129:51"><name pos:start="127:13" pos:end="127:29">bitplane_decoding</name><argument_list pos:start="127:30" pos:end="129:51">( <argument pos:start="127:32" pos:end="127:50"><expr pos:start="127:32" pos:end="127:50"><name pos:start="127:32" pos:end="127:50"><name pos:start="127:32" pos:end="127:32">v</name><operator pos:start="127:33" pos:end="127:34">-&gt;</operator><name pos:start="127:35" pos:end="127:50">mv_type_mb_plane</name></name></expr></argument>, <argument pos:start="127:53" pos:end="127:63"><expr pos:start="127:53" pos:end="127:63"><name pos:start="127:53" pos:end="127:63"><name pos:start="127:53" pos:end="127:53">v</name><operator pos:start="127:54" pos:end="127:55">-&gt;</operator><name pos:start="127:56" pos:end="127:63">width_mb</name></name></expr></argument>,

                                   <argument pos:start="129:36" pos:end="129:47"><expr pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:47"><name pos:start="129:36" pos:end="129:36">v</name><operator pos:start="129:37" pos:end="129:38">-&gt;</operator><name pos:start="129:39" pos:end="129:47">height_mb</name></name></expr></argument>, <argument pos:start="129:50" pos:end="129:50"><expr pos:start="129:50" pos:end="129:50"><name pos:start="129:50" pos:end="129:50">v</name></expr></argument>)</argument_list></call><operator pos:start="129:52" pos:end="129:52">&lt;</operator><literal type="number" pos:start="129:53" pos:end="129:53">0</literal></expr>)</condition><block type="pseudo" pos:start="131:13" pos:end="131:22"><block_content pos:start="131:13" pos:end="131:22">

            <return pos:start="131:13" pos:end="131:22">return <expr pos:start="131:20" pos:end="131:21"><operator pos:start="131:20" pos:end="131:20">-</operator><literal type="number" pos:start="131:21" pos:end="131:21">1</literal></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="line" pos:start="137:5" pos:end="137:14">//bitplane</comment>

    <expr_stmt pos:start="139:5" pos:end="139:72"><expr pos:start="139:5" pos:end="139:71"><call pos:start="139:5" pos:end="139:71"><name pos:start="139:5" pos:end="139:21">bitplane_decoding</name><argument_list pos:start="139:22" pos:end="139:71">(<argument pos:start="139:23" pos:end="139:40"><expr pos:start="139:23" pos:end="139:40"><name pos:start="139:23" pos:end="139:40"><name pos:start="139:23" pos:end="139:23">v</name><operator pos:start="139:24" pos:end="139:25">-&gt;</operator><name pos:start="139:26" pos:end="139:40">direct_mb_plane</name></name></expr></argument>, <argument pos:start="139:43" pos:end="139:53"><expr pos:start="139:43" pos:end="139:53"><name pos:start="139:43" pos:end="139:53"><name pos:start="139:43" pos:end="139:43">v</name><operator pos:start="139:44" pos:end="139:45">-&gt;</operator><name pos:start="139:46" pos:end="139:53">width_mb</name></name></expr></argument>, <argument pos:start="139:56" pos:end="139:67"><expr pos:start="139:56" pos:end="139:67"><name pos:start="139:56" pos:end="139:67"><name pos:start="139:56" pos:end="139:56">v</name><operator pos:start="139:57" pos:end="139:58">-&gt;</operator><name pos:start="139:59" pos:end="139:67">height_mb</name></name></expr></argument>, <argument pos:start="139:70" pos:end="139:70"><expr pos:start="139:70" pos:end="139:70"><name pos:start="139:70" pos:end="139:70">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="141:5" pos:end="141:70"><expr pos:start="141:5" pos:end="141:69"><call pos:start="141:5" pos:end="141:69"><name pos:start="141:5" pos:end="141:21">bitplane_decoding</name><argument_list pos:start="141:22" pos:end="141:69">(<argument pos:start="141:23" pos:end="141:38"><expr pos:start="141:23" pos:end="141:38"><name pos:start="141:23" pos:end="141:38"><name pos:start="141:23" pos:end="141:23">v</name><operator pos:start="141:24" pos:end="141:25">-&gt;</operator><name pos:start="141:26" pos:end="141:38">skip_mb_plane</name></name></expr></argument>, <argument pos:start="141:41" pos:end="141:51"><expr pos:start="141:41" pos:end="141:51"><name pos:start="141:41" pos:end="141:51"><name pos:start="141:41" pos:end="141:41">v</name><operator pos:start="141:42" pos:end="141:43">-&gt;</operator><name pos:start="141:44" pos:end="141:51">width_mb</name></name></expr></argument>, <argument pos:start="141:54" pos:end="141:65"><expr pos:start="141:54" pos:end="141:65"><name pos:start="141:54" pos:end="141:65"><name pos:start="141:54" pos:end="141:54">v</name><operator pos:start="141:55" pos:end="141:56">-&gt;</operator><name pos:start="141:57" pos:end="141:65">height_mb</name></name></expr></argument>, <argument pos:start="141:68" pos:end="141:68"><expr pos:start="141:68" pos:end="141:68"><name pos:start="141:68" pos:end="141:68">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="145:5" pos:end="145:55">/* FIXME: what is actually chosen for B frames ? */</comment>

    <expr_stmt pos:start="147:5" pos:end="147:59"><expr pos:start="147:5" pos:end="147:58"><name pos:start="147:5" pos:end="147:18"><name pos:start="147:5" pos:end="147:5">v</name><operator pos:start="147:6" pos:end="147:7">-&gt;</operator><name pos:start="147:8" pos:end="147:18">mv_diff_vlc</name></name> <operator pos:start="147:20" pos:end="147:20">=</operator> <operator pos:start="147:22" pos:end="147:22">&amp;</operator><name pos:start="147:23" pos:end="147:58"><name pos:start="147:23" pos:end="147:37">vc9_mv_diff_vlc</name><index pos:start="147:38" pos:end="147:58">[<expr pos:start="147:39" pos:end="147:57"><call pos:start="147:39" pos:end="147:57"><name pos:start="147:39" pos:end="147:46">get_bits</name><argument_list pos:start="147:47" pos:end="147:57">(<argument pos:start="147:48" pos:end="147:53"><expr pos:start="147:48" pos:end="147:53"><operator pos:start="147:48" pos:end="147:48">&amp;</operator><name pos:start="147:49" pos:end="147:53"><name pos:start="147:49" pos:end="147:49">v</name><operator pos:start="147:50" pos:end="147:51">-&gt;</operator><name pos:start="147:52" pos:end="147:53">gb</name></name></expr></argument>, <argument pos:start="147:56" pos:end="147:56"><expr pos:start="147:56" pos:end="147:56"><literal type="number" pos:start="147:56" pos:end="147:56">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="149:5" pos:end="149:57"><expr pos:start="149:5" pos:end="149:56"><name pos:start="149:5" pos:end="149:16"><name pos:start="149:5" pos:end="149:5">v</name><operator pos:start="149:6" pos:end="149:7">-&gt;</operator><name pos:start="149:8" pos:end="149:16">cbpcy_vlc</name></name> <operator pos:start="149:18" pos:end="149:18">=</operator> <operator pos:start="149:20" pos:end="149:20">&amp;</operator><name pos:start="149:21" pos:end="149:56"><name pos:start="149:21" pos:end="149:35">vc9_cbpcy_p_vlc</name><index pos:start="149:36" pos:end="149:56">[<expr pos:start="149:37" pos:end="149:55"><call pos:start="149:37" pos:end="149:55"><name pos:start="149:37" pos:end="149:44">get_bits</name><argument_list pos:start="149:45" pos:end="149:55">(<argument pos:start="149:46" pos:end="149:51"><expr pos:start="149:46" pos:end="149:51"><operator pos:start="149:46" pos:end="149:46">&amp;</operator><name pos:start="149:47" pos:end="149:51"><name pos:start="149:47" pos:end="149:47">v</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:51">gb</name></name></expr></argument>, <argument pos:start="149:54" pos:end="149:54"><expr pos:start="149:54" pos:end="149:54"><literal type="number" pos:start="149:54" pos:end="149:54">2</literal></expr></argument>)</argument_list></call></expr>]</index></name></expr>;</expr_stmt>

    <if_stmt pos:start="151:5" pos:end="157:5"><if pos:start="151:5" pos:end="157:5">if <condition pos:start="151:8" pos:end="151:18">(<expr pos:start="151:9" pos:end="151:17"><name pos:start="151:9" pos:end="151:17"><name pos:start="151:9" pos:end="151:9">v</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:17">dquant</name></name></expr>)</condition>

    <block pos:start="153:5" pos:end="157:5">{<block_content pos:start="155:9" pos:end="155:31">

        <expr_stmt pos:start="155:9" pos:end="155:31"><expr pos:start="155:9" pos:end="155:30"><call pos:start="155:9" pos:end="155:30"><name pos:start="155:9" pos:end="155:27">vop_dquant_decoding</name><argument_list pos:start="155:28" pos:end="155:30">(<argument pos:start="155:29" pos:end="155:29"><expr pos:start="155:29" pos:end="155:29"><name pos:start="155:29" pos:end="155:29">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="161:5" pos:end="179:5"><if pos:start="161:5" pos:end="179:5">if <condition pos:start="161:8" pos:end="161:23">(<expr pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:9">v</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:22">vstransform</name></name></expr>)</condition>

    <block pos:start="163:5" pos:end="179:5">{<block_content pos:start="165:9" pos:end="177:9">

        <expr_stmt pos:start="165:9" pos:end="165:39"><expr pos:start="165:9" pos:end="165:38"><name pos:start="165:9" pos:end="165:16"><name pos:start="165:9" pos:end="165:9">v</name><operator pos:start="165:10" pos:end="165:11">-&gt;</operator><name pos:start="165:12" pos:end="165:16">ttmbf</name></name> <operator pos:start="165:18" pos:end="165:18">=</operator> <call pos:start="165:20" pos:end="165:38"><name pos:start="165:20" pos:end="165:27">get_bits</name><argument_list pos:start="165:28" pos:end="165:38">(<argument pos:start="165:29" pos:end="165:34"><expr pos:start="165:29" pos:end="165:34"><operator pos:start="165:29" pos:end="165:29">&amp;</operator><name pos:start="165:30" pos:end="165:34"><name pos:start="165:30" pos:end="165:30">v</name><operator pos:start="165:31" pos:end="165:32">-&gt;</operator><name pos:start="165:33" pos:end="165:34">gb</name></name></expr></argument>, <argument pos:start="165:37" pos:end="165:37"><expr pos:start="165:37" pos:end="165:37"><literal type="number" pos:start="165:37" pos:end="165:37">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="167:9" pos:end="177:9"><if pos:start="167:9" pos:end="177:9">if <condition pos:start="167:12" pos:end="167:21">(<expr pos:start="167:13" pos:end="167:20"><name pos:start="167:13" pos:end="167:20"><name pos:start="167:13" pos:end="167:13">v</name><operator pos:start="167:14" pos:end="167:15">-&gt;</operator><name pos:start="167:16" pos:end="167:20">ttmbf</name></name></expr>)</condition>

        <block pos:start="169:9" pos:end="177:9">{<block_content pos:start="171:13" pos:end="175:67">

            <expr_stmt pos:start="171:13" pos:end="171:43"><expr pos:start="171:13" pos:end="171:42"><name pos:start="171:13" pos:end="171:20"><name pos:start="171:13" pos:end="171:13">v</name><operator pos:start="171:14" pos:end="171:15">-&gt;</operator><name pos:start="171:16" pos:end="171:20">ttfrm</name></name> <operator pos:start="171:22" pos:end="171:22">=</operator> <call pos:start="171:24" pos:end="171:42"><name pos:start="171:24" pos:end="171:31">get_bits</name><argument_list pos:start="171:32" pos:end="171:42">(<argument pos:start="171:33" pos:end="171:38"><expr pos:start="171:33" pos:end="171:38"><operator pos:start="171:33" pos:end="171:33">&amp;</operator><name pos:start="171:34" pos:end="171:38"><name pos:start="171:34" pos:end="171:34">v</name><operator pos:start="171:35" pos:end="171:36">-&gt;</operator><name pos:start="171:37" pos:end="171:38">gb</name></name></expr></argument>, <argument pos:start="171:41" pos:end="171:41"><expr pos:start="171:41" pos:end="171:41"><literal type="number" pos:start="171:41" pos:end="171:41">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="173:13" pos:end="175:67"><expr pos:start="173:13" pos:end="175:66"><call pos:start="173:13" pos:end="175:66"><name pos:start="173:13" pos:end="173:18">av_log</name><argument_list pos:start="173:19" pos:end="175:66">(<argument pos:start="173:20" pos:end="173:20"><expr pos:start="173:20" pos:end="173:20"><name pos:start="173:20" pos:end="173:20">v</name></expr></argument>, <argument pos:start="173:23" pos:end="173:33"><expr pos:start="173:23" pos:end="173:33"><name pos:start="173:23" pos:end="173:33">AV_LOG_INFO</name></expr></argument>, <argument pos:start="173:36" pos:end="173:60"><expr pos:start="173:36" pos:end="173:60"><literal type="string" pos:start="173:36" pos:end="173:60">"Transform used: %ix%i\n"</literal></expr></argument>,

                   <argument pos:start="175:20" pos:end="175:41"><expr pos:start="175:20" pos:end="175:41"><ternary pos:start="175:20" pos:end="175:41"><condition pos:start="175:20" pos:end="175:35"><expr pos:start="175:20" pos:end="175:33"><operator pos:start="175:20" pos:end="175:20">(</operator><name pos:start="175:21" pos:end="175:28"><name pos:start="175:21" pos:end="175:21">v</name><operator pos:start="175:22" pos:end="175:23">-&gt;</operator><name pos:start="175:24" pos:end="175:28">ttfrm</name></name> <operator pos:start="175:30" pos:end="175:30">&amp;</operator> <literal type="number" pos:start="175:32" pos:end="175:32">2</literal><operator pos:start="175:33" pos:end="175:33">)</operator></expr> ?</condition><then pos:start="175:37" pos:end="175:37"> <expr pos:start="175:37" pos:end="175:37"><literal type="number" pos:start="175:37" pos:end="175:37">4</literal></expr> </then><else pos:start="175:39" pos:end="175:41">: <expr pos:start="175:41" pos:end="175:41"><literal type="number" pos:start="175:41" pos:end="175:41">8</literal></expr></else></ternary></expr></argument>, <argument pos:start="175:44" pos:end="175:65"><expr pos:start="175:44" pos:end="175:65"><ternary pos:start="175:44" pos:end="175:65"><condition pos:start="175:44" pos:end="175:59"><expr pos:start="175:44" pos:end="175:57"><operator pos:start="175:44" pos:end="175:44">(</operator><name pos:start="175:45" pos:end="175:52"><name pos:start="175:45" pos:end="175:45">v</name><operator pos:start="175:46" pos:end="175:47">-&gt;</operator><name pos:start="175:48" pos:end="175:52">ttfrm</name></name> <operator pos:start="175:54" pos:end="175:54">&amp;</operator> <literal type="number" pos:start="175:56" pos:end="175:56">1</literal><operator pos:start="175:57" pos:end="175:57">)</operator></expr> ?</condition><then pos:start="175:61" pos:end="175:61"> <expr pos:start="175:61" pos:end="175:61"><literal type="number" pos:start="175:61" pos:end="175:61">4</literal></expr> </then><else pos:start="175:63" pos:end="175:65">: <expr pos:start="175:65" pos:end="175:65"><literal type="number" pos:start="175:65" pos:end="175:65">8</literal></expr></else></ternary></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="181:5" pos:end="181:41">/* Epilog should be done in caller */</comment>

    <return pos:start="183:5" pos:end="183:13">return <expr pos:start="183:12" pos:end="183:12"><literal type="number" pos:start="183:12" pos:end="183:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
