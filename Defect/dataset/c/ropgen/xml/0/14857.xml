<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14857.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">pci_e1000_init</name><parameter_list pos:start="1:26" pos:end="1:45">(<parameter pos:start="1:27" pos:end="1:44"><decl pos:start="1:27" pos:end="1:44"><type pos:start="1:27" pos:end="1:37"><name pos:start="1:27" pos:end="1:35">PCIDevice</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:44">pci_dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:13">

    <decl_stmt pos:start="5:5" pos:end="5:56"><decl pos:start="5:5" pos:end="5:55"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">E1000State</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">d</name> <init pos:start="5:19" pos:end="5:55">= <expr pos:start="5:21" pos:end="5:55"><call pos:start="5:21" pos:end="5:55"><name pos:start="5:21" pos:end="5:29">DO_UPCAST</name><argument_list pos:start="5:30" pos:end="5:55">(<argument pos:start="5:31" pos:end="5:40"><expr pos:start="5:31" pos:end="5:40"><name pos:start="5:31" pos:end="5:40">E1000State</name></expr></argument>, <argument pos:start="5:43" pos:end="5:45"><expr pos:start="5:43" pos:end="5:45"><name pos:start="5:43" pos:end="5:45">dev</name></expr></argument>, <argument pos:start="5:48" pos:end="5:54"><expr pos:start="5:48" pos:end="5:54"><name pos:start="5:48" pos:end="5:54">pci_dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:25"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint16_t</name></type> <name pos:start="9:14" pos:end="9:21">checksum</name> <init pos:start="9:23" pos:end="9:25">= <expr pos:start="9:25" pos:end="9:25"><literal type="number" pos:start="9:25" pos:end="9:25">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:21"><decl pos:start="13:5" pos:end="13:20"><type pos:start="13:5" pos:end="13:13"><name pos:start="13:5" pos:end="13:11">uint8_t</name> <modifier pos:start="13:13" pos:end="13:13">*</modifier></type><name pos:start="13:14" pos:end="13:20">macaddr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:29"><expr pos:start="17:5" pos:end="17:28"><name pos:start="17:5" pos:end="17:12">pci_conf</name> <operator pos:start="17:14" pos:end="17:14">=</operator> <name pos:start="17:16" pos:end="17:28"><name pos:start="17:16" pos:end="17:16">d</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:21">dev</name><operator pos:start="17:22" pos:end="17:22">.</operator><name pos:start="17:23" pos:end="17:28">config</name></name></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:60"><expr pos:start="21:5" pos:end="21:59"><call pos:start="21:5" pos:end="21:59"><name pos:start="21:5" pos:end="21:28">pci_config_set_vendor_id</name><argument_list pos:start="21:29" pos:end="21:59">(<argument pos:start="21:30" pos:end="21:37"><expr pos:start="21:30" pos:end="21:37"><name pos:start="21:30" pos:end="21:37">pci_conf</name></expr></argument>, <argument pos:start="21:40" pos:end="21:58"><expr pos:start="21:40" pos:end="21:58"><name pos:start="21:40" pos:end="21:58">PCI_VENDOR_ID_INTEL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:52"><expr pos:start="23:5" pos:end="23:51"><call pos:start="23:5" pos:end="23:51"><name pos:start="23:5" pos:end="23:28">pci_config_set_device_id</name><argument_list pos:start="23:29" pos:end="23:51">(<argument pos:start="23:30" pos:end="23:37"><expr pos:start="23:30" pos:end="23:37"><name pos:start="23:30" pos:end="23:37">pci_conf</name></expr></argument>, <argument pos:start="23:40" pos:end="23:50"><expr pos:start="23:40" pos:end="23:50"><name pos:start="23:40" pos:end="23:50">E1000_DEVID</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><operator pos:start="25:5" pos:end="25:5">*</operator><operator pos:start="25:6" pos:end="25:6">(</operator><name pos:start="25:7" pos:end="25:14">uint16_t</name> <operator pos:start="25:16" pos:end="25:16">*</operator><operator pos:start="25:17" pos:end="25:17">)</operator><operator pos:start="25:18" pos:end="25:18">(</operator><name pos:start="25:19" pos:end="25:26">pci_conf</name><operator pos:start="25:27" pos:end="25:27">+</operator><literal type="number" pos:start="25:28" pos:end="25:31">0x04</literal><operator pos:start="25:32" pos:end="25:32">)</operator> <operator pos:start="25:34" pos:end="25:34">=</operator> <call pos:start="25:36" pos:end="25:54"><name pos:start="25:36" pos:end="25:46">cpu_to_le16</name><argument_list pos:start="25:47" pos:end="25:54">(<argument pos:start="25:48" pos:end="25:53"><expr pos:start="25:48" pos:end="25:53"><literal type="number" pos:start="25:48" pos:end="25:53">0x0407</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:55"><expr pos:start="27:5" pos:end="27:54"><operator pos:start="27:5" pos:end="27:5">*</operator><operator pos:start="27:6" pos:end="27:6">(</operator><name pos:start="27:7" pos:end="27:14">uint16_t</name> <operator pos:start="27:16" pos:end="27:16">*</operator><operator pos:start="27:17" pos:end="27:17">)</operator><operator pos:start="27:18" pos:end="27:18">(</operator><name pos:start="27:19" pos:end="27:26">pci_conf</name><operator pos:start="27:27" pos:end="27:27">+</operator><literal type="number" pos:start="27:28" pos:end="27:31">0x06</literal><operator pos:start="27:32" pos:end="27:32">)</operator> <operator pos:start="27:34" pos:end="27:34">=</operator> <call pos:start="27:36" pos:end="27:54"><name pos:start="27:36" pos:end="27:46">cpu_to_le16</name><argument_list pos:start="27:47" pos:end="27:54">(<argument pos:start="27:48" pos:end="27:53"><expr pos:start="27:48" pos:end="27:53"><literal type="number" pos:start="27:48" pos:end="27:53">0x0010</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:26"><expr pos:start="29:5" pos:end="29:25"><name pos:start="29:5" pos:end="29:18"><name pos:start="29:5" pos:end="29:12">pci_conf</name><index pos:start="29:13" pos:end="29:18">[<expr pos:start="29:14" pos:end="29:17"><literal type="number" pos:start="29:14" pos:end="29:17">0x08</literal></expr>]</index></name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:25">0x03</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:63"><expr pos:start="31:5" pos:end="31:62"><call pos:start="31:5" pos:end="31:62"><name pos:start="31:5" pos:end="31:24">pci_config_set_class</name><argument_list pos:start="31:25" pos:end="31:62">(<argument pos:start="31:26" pos:end="31:33"><expr pos:start="31:26" pos:end="31:33"><name pos:start="31:26" pos:end="31:33">pci_conf</name></expr></argument>, <argument pos:start="31:36" pos:end="31:61"><expr pos:start="31:36" pos:end="31:61"><name pos:start="31:36" pos:end="31:61">PCI_CLASS_NETWORK_ETHERNET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:26"><expr pos:start="33:5" pos:end="33:25"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:12">pci_conf</name><index pos:start="33:13" pos:end="33:18">[<expr pos:start="33:14" pos:end="33:17"><literal type="number" pos:start="33:14" pos:end="33:17">0x0c</literal></expr>]</index></name> <operator pos:start="33:20" pos:end="33:20">=</operator> <literal type="number" pos:start="33:22" pos:end="33:25">0x10</literal></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="37:23"><expr pos:start="37:5" pos:end="37:22"><name pos:start="37:5" pos:end="37:18"><name pos:start="37:5" pos:end="37:12">pci_conf</name><index pos:start="37:13" pos:end="37:18">[<expr pos:start="37:14" pos:end="37:17"><literal type="number" pos:start="37:14" pos:end="37:17">0x3d</literal></expr>]</index></name> <operator pos:start="37:20" pos:end="37:20">=</operator> <literal type="number" pos:start="37:22" pos:end="37:22">1</literal></expr>;</expr_stmt> <comment type="line" pos:start="37:25" pos:end="37:42">// interrupt pin 0</comment>



    <expr_stmt pos:start="41:5" pos:end="43:33"><expr pos:start="41:5" pos:end="43:32"><name pos:start="41:5" pos:end="41:17"><name pos:start="41:5" pos:end="41:5">d</name><operator pos:start="41:6" pos:end="41:7">-&gt;</operator><name pos:start="41:8" pos:end="41:17">mmio_index</name></name> <operator pos:start="41:19" pos:end="41:19">=</operator> <call pos:start="41:21" pos:end="43:32"><name pos:start="41:21" pos:end="41:42">cpu_register_io_memory</name><argument_list pos:start="41:43" pos:end="43:32">(<argument pos:start="41:44" pos:end="41:58"><expr pos:start="41:44" pos:end="41:58"><name pos:start="41:44" pos:end="41:58">e1000_mmio_read</name></expr></argument>,

            <argument pos:start="43:13" pos:end="43:28"><expr pos:start="43:13" pos:end="43:28"><name pos:start="43:13" pos:end="43:28">e1000_mmio_write</name></expr></argument>, <argument pos:start="43:31" pos:end="43:31"><expr pos:start="43:31" pos:end="43:31"><name pos:start="43:31" pos:end="43:31">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="49:66"><expr pos:start="47:5" pos:end="49:65"><call pos:start="47:5" pos:end="49:65"><name pos:start="47:5" pos:end="47:20">pci_register_bar</name><argument_list pos:start="47:21" pos:end="49:65">(<argument pos:start="47:22" pos:end="47:35"><expr pos:start="47:22" pos:end="47:35"><operator pos:start="47:22" pos:end="47:22">(</operator><name pos:start="47:23" pos:end="47:31">PCIDevice</name> <operator pos:start="47:33" pos:end="47:33">*</operator><operator pos:start="47:34" pos:end="47:34">)</operator><name pos:start="47:35" pos:end="47:35">d</name></expr></argument>, <argument pos:start="47:38" pos:end="47:38"><expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">0</literal></expr></argument>, <argument pos:start="47:41" pos:end="47:52"><expr pos:start="47:41" pos:end="47:52"><name pos:start="47:41" pos:end="47:52">PNPMMIO_SIZE</name></expr></argument>,

                           <argument pos:start="49:28" pos:end="49:48"><expr pos:start="49:28" pos:end="49:48"><name pos:start="49:28" pos:end="49:48">PCI_ADDRESS_SPACE_MEM</name></expr></argument>, <argument pos:start="49:51" pos:end="49:64"><expr pos:start="49:51" pos:end="49:64"><name pos:start="49:51" pos:end="49:64">e1000_mmio_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="55:61"><expr pos:start="53:5" pos:end="55:60"><call pos:start="53:5" pos:end="55:60"><name pos:start="53:5" pos:end="53:20">pci_register_bar</name><argument_list pos:start="53:21" pos:end="55:60">(<argument pos:start="53:22" pos:end="53:35"><expr pos:start="53:22" pos:end="53:35"><operator pos:start="53:22" pos:end="53:22">(</operator><name pos:start="53:23" pos:end="53:31">PCIDevice</name> <operator pos:start="53:33" pos:end="53:33">*</operator><operator pos:start="53:34" pos:end="53:34">)</operator><name pos:start="53:35" pos:end="53:35">d</name></expr></argument>, <argument pos:start="53:38" pos:end="53:38"><expr pos:start="53:38" pos:end="53:38"><literal type="number" pos:start="53:38" pos:end="53:38">1</literal></expr></argument>, <argument pos:start="53:41" pos:end="53:51"><expr pos:start="53:41" pos:end="53:51"><name pos:start="53:41" pos:end="53:51">IOPORT_SIZE</name></expr></argument>,

                           <argument pos:start="55:28" pos:end="55:47"><expr pos:start="55:28" pos:end="55:47"><name pos:start="55:28" pos:end="55:47">PCI_ADDRESS_SPACE_IO</name></expr></argument>, <argument pos:start="55:50" pos:end="55:59"><expr pos:start="55:50" pos:end="55:59"><name pos:start="55:50" pos:end="55:59">ioport_map</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="61:38"><expr pos:start="59:5" pos:end="61:37"><call pos:start="59:5" pos:end="61:37"><name pos:start="59:5" pos:end="59:11">memmove</name><argument_list pos:start="59:12" pos:end="61:37">(<argument pos:start="59:13" pos:end="59:26"><expr pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:13">d</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:26">eeprom_data</name></name></expr></argument>, <argument pos:start="59:29" pos:end="59:49"><expr pos:start="59:29" pos:end="59:49"><name pos:start="59:29" pos:end="59:49">e1000_eeprom_template</name></expr></argument>,

        <argument pos:start="61:9" pos:end="61:36"><expr pos:start="61:9" pos:end="61:36"><sizeof pos:start="61:9" pos:end="61:36">sizeof <name pos:start="61:16" pos:end="61:36">e1000_eeprom_template</name></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:52"><expr pos:start="63:5" pos:end="63:51"><call pos:start="63:5" pos:end="63:51"><name pos:start="63:5" pos:end="63:33">qemu_macaddr_default_if_unset</name><argument_list pos:start="63:34" pos:end="63:51">(<argument pos:start="63:35" pos:end="63:50"><expr pos:start="63:35" pos:end="63:50"><operator pos:start="63:35" pos:end="63:35">&amp;</operator><name pos:start="63:36" pos:end="63:50"><name pos:start="63:36" pos:end="63:36">d</name><operator pos:start="63:37" pos:end="63:38">-&gt;</operator><name pos:start="63:39" pos:end="63:42">conf</name><operator pos:start="63:43" pos:end="63:43">.</operator><name pos:start="63:44" pos:end="63:50">macaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:32"><expr pos:start="65:5" pos:end="65:31"><name pos:start="65:5" pos:end="65:11">macaddr</name> <operator pos:start="65:13" pos:end="65:13">=</operator> <name pos:start="65:15" pos:end="65:31"><name pos:start="65:15" pos:end="65:15">d</name><operator pos:start="65:16" pos:end="65:17">-&gt;</operator><name pos:start="65:18" pos:end="65:21">conf</name><operator pos:start="65:22" pos:end="65:22">.</operator><name pos:start="65:23" pos:end="65:29">macaddr</name><operator pos:start="65:30" pos:end="65:30">.</operator><name pos:start="65:31" pos:end="65:31">a</name></name></expr>;</expr_stmt>

    <for pos:start="67:5" pos:end="69:63">for <control pos:start="67:9" pos:end="67:27">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <literal type="number" pos:start="67:21" pos:end="67:21">3</literal></expr>;</condition> <incr pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:24">i</name><operator pos:start="67:25" pos:end="67:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="69:63"><block_content pos:start="69:9" pos:end="69:63">

        <expr_stmt pos:start="69:9" pos:end="69:63"><expr pos:start="69:9" pos:end="69:62"><name pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:9">d</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:22">eeprom_data</name><index pos:start="69:23" pos:end="69:25">[<expr pos:start="69:24" pos:end="69:24"><name pos:start="69:24" pos:end="69:24">i</name></expr>]</index></name> <operator pos:start="69:27" pos:end="69:27">=</operator> <operator pos:start="69:29" pos:end="69:29">(</operator><name pos:start="69:30" pos:end="69:43"><name pos:start="69:30" pos:end="69:36">macaddr</name><index pos:start="69:37" pos:end="69:43">[<expr pos:start="69:38" pos:end="69:42"><literal type="number" pos:start="69:38" pos:end="69:38">2</literal><operator pos:start="69:39" pos:end="69:39">*</operator><name pos:start="69:40" pos:end="69:40">i</name><operator pos:start="69:41" pos:end="69:41">+</operator><literal type="number" pos:start="69:42" pos:end="69:42">1</literal></expr>]</index></name><operator pos:start="69:44" pos:end="69:45">&lt;&lt;</operator><literal type="number" pos:start="69:46" pos:end="69:46">8</literal><operator pos:start="69:47" pos:end="69:47">)</operator> <operator pos:start="69:49" pos:end="69:49">|</operator> <name pos:start="69:51" pos:end="69:62"><name pos:start="69:51" pos:end="69:57">macaddr</name><index pos:start="69:58" pos:end="69:62">[<expr pos:start="69:59" pos:end="69:61"><literal type="number" pos:start="69:59" pos:end="69:59">2</literal><operator pos:start="69:60" pos:end="69:60">*</operator><name pos:start="69:61" pos:end="69:61">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <for pos:start="71:5" pos:end="73:38">for <control pos:start="71:9" pos:end="71:45">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:40"><expr pos:start="71:17" pos:end="71:39"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:39">EEPROM_CHECKSUM_REG</name></expr>;</condition> <incr pos:start="71:42" pos:end="71:44"><expr pos:start="71:42" pos:end="71:44"><name pos:start="71:42" pos:end="71:42">i</name><operator pos:start="71:43" pos:end="71:44">++</operator></expr></incr>)</control><block type="pseudo" pos:start="73:9" pos:end="73:38"><block_content pos:start="73:9" pos:end="73:38">

        <expr_stmt pos:start="73:9" pos:end="73:38"><expr pos:start="73:9" pos:end="73:37"><name pos:start="73:9" pos:end="73:16">checksum</name> <operator pos:start="73:18" pos:end="73:19">+=</operator> <name pos:start="73:21" pos:end="73:37"><name pos:start="73:21" pos:end="73:21">d</name><operator pos:start="73:22" pos:end="73:23">-&gt;</operator><name pos:start="73:24" pos:end="73:34">eeprom_data</name><index pos:start="73:35" pos:end="73:37">[<expr pos:start="73:36" pos:end="73:36"><name pos:start="73:36" pos:end="73:36">i</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></for>

    <expr_stmt pos:start="75:5" pos:end="75:48"><expr pos:start="75:5" pos:end="75:47"><name pos:start="75:5" pos:end="75:12">checksum</name> <operator pos:start="75:14" pos:end="75:14">=</operator> <operator pos:start="75:16" pos:end="75:16">(</operator><name pos:start="75:17" pos:end="75:24">uint16_t</name><operator pos:start="75:25" pos:end="75:25">)</operator> <name pos:start="75:27" pos:end="75:36">EEPROM_SUM</name> <operator pos:start="75:38" pos:end="75:38">-</operator> <name pos:start="75:40" pos:end="75:47">checksum</name></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:51"><expr pos:start="77:5" pos:end="77:50"><name pos:start="77:5" pos:end="77:39"><name pos:start="77:5" pos:end="77:5">d</name><operator pos:start="77:6" pos:end="77:7">-&gt;</operator><name pos:start="77:8" pos:end="77:18">eeprom_data</name><index pos:start="77:19" pos:end="77:39">[<expr pos:start="77:20" pos:end="77:38"><name pos:start="77:20" pos:end="77:38">EEPROM_CHECKSUM_REG</name></expr>]</index></name> <operator pos:start="77:41" pos:end="77:41">=</operator> <name pos:start="77:43" pos:end="77:50">checksum</name></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="89:57"><expr pos:start="81:5" pos:end="89:56"><name pos:start="81:5" pos:end="81:9"><name pos:start="81:5" pos:end="81:5">d</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:9">vc</name></name> <operator pos:start="81:11" pos:end="81:11">=</operator> <call pos:start="81:13" pos:end="89:56"><name pos:start="81:13" pos:end="81:32">qemu_new_vlan_client</name><argument_list pos:start="81:33" pos:end="89:56">(<argument pos:start="81:34" pos:end="81:52"><expr pos:start="81:34" pos:end="81:52"><name pos:start="81:34" pos:end="81:52">NET_CLIENT_TYPE_NIC</name></expr></argument>,

                                 <argument pos:start="83:34" pos:end="83:45"><expr pos:start="83:34" pos:end="83:45"><name pos:start="83:34" pos:end="83:45"><name pos:start="83:34" pos:end="83:34">d</name><operator pos:start="83:35" pos:end="83:36">-&gt;</operator><name pos:start="83:37" pos:end="83:40">conf</name><operator pos:start="83:41" pos:end="83:41">.</operator><name pos:start="83:42" pos:end="83:45">vlan</name></name></expr></argument>, <argument pos:start="83:48" pos:end="83:59"><expr pos:start="83:48" pos:end="83:59"><name pos:start="83:48" pos:end="83:59"><name pos:start="83:48" pos:end="83:48">d</name><operator pos:start="83:49" pos:end="83:50">-&gt;</operator><name pos:start="83:51" pos:end="83:54">conf</name><operator pos:start="83:55" pos:end="83:55">.</operator><name pos:start="83:56" pos:end="83:59">peer</name></name></expr></argument>,

                                 <argument pos:start="85:34" pos:end="85:55"><expr pos:start="85:34" pos:end="85:55"><name pos:start="85:34" pos:end="85:55"><name pos:start="85:34" pos:end="85:34">d</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:39">dev</name><operator pos:start="85:40" pos:end="85:40">.</operator><name pos:start="85:41" pos:end="85:44">qdev</name><operator pos:start="85:45" pos:end="85:45">.</operator><name pos:start="85:46" pos:end="85:49">info</name><operator pos:start="85:50" pos:end="85:51">-&gt;</operator><name pos:start="85:52" pos:end="85:55">name</name></name></expr></argument>, <argument pos:start="85:58" pos:end="85:71"><expr pos:start="85:58" pos:end="85:71"><name pos:start="85:58" pos:end="85:71"><name pos:start="85:58" pos:end="85:58">d</name><operator pos:start="85:59" pos:end="85:60">-&gt;</operator><name pos:start="85:61" pos:end="85:63">dev</name><operator pos:start="85:64" pos:end="85:64">.</operator><name pos:start="85:65" pos:end="85:68">qdev</name><operator pos:start="85:69" pos:end="85:69">.</operator><name pos:start="85:70" pos:end="85:71">id</name></name></expr></argument>,

                                 <argument pos:start="87:34" pos:end="87:50"><expr pos:start="87:34" pos:end="87:50"><name pos:start="87:34" pos:end="87:50">e1000_can_receive</name></expr></argument>, <argument pos:start="87:53" pos:end="87:65"><expr pos:start="87:53" pos:end="87:65"><name pos:start="87:53" pos:end="87:65">e1000_receive</name></expr></argument>, <argument pos:start="87:68" pos:end="87:71"><expr pos:start="87:68" pos:end="87:71"><name pos:start="87:68" pos:end="87:71">NULL</name></expr></argument>,

                                 <argument pos:start="89:34" pos:end="89:37"><expr pos:start="89:34" pos:end="89:37"><name pos:start="89:34" pos:end="89:37">NULL</name></expr></argument>, <argument pos:start="89:40" pos:end="89:52"><expr pos:start="89:40" pos:end="89:52"><name pos:start="89:40" pos:end="89:52">e1000_cleanup</name></expr></argument>, <argument pos:start="89:55" pos:end="89:55"><expr pos:start="89:55" pos:end="89:55"><name pos:start="89:55" pos:end="89:55">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:55"><expr pos:start="91:5" pos:end="91:54"><name pos:start="91:5" pos:end="91:30"><name pos:start="91:5" pos:end="91:5">d</name><operator pos:start="91:6" pos:end="91:7">-&gt;</operator><name pos:start="91:8" pos:end="91:9">vc</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:30">link_status_changed</name></name> <operator pos:start="91:32" pos:end="91:32">=</operator> <name pos:start="91:34" pos:end="91:54">e1000_set_link_status</name></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:45"><expr pos:start="95:5" pos:end="95:44"><call pos:start="95:5" pos:end="95:44"><name pos:start="95:5" pos:end="95:28">qemu_format_nic_info_str</name><argument_list pos:start="95:29" pos:end="95:44">(<argument pos:start="95:30" pos:end="95:34"><expr pos:start="95:30" pos:end="95:34"><name pos:start="95:30" pos:end="95:34"><name pos:start="95:30" pos:end="95:30">d</name><operator pos:start="95:31" pos:end="95:32">-&gt;</operator><name pos:start="95:33" pos:end="95:34">vc</name></name></expr></argument>, <argument pos:start="95:37" pos:end="95:43"><expr pos:start="95:37" pos:end="95:43"><name pos:start="95:37" pos:end="95:43">macaddr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:44"><expr pos:start="99:5" pos:end="99:43"><call pos:start="99:5" pos:end="99:43"><name pos:start="99:5" pos:end="99:20">vmstate_register</name><argument_list pos:start="99:21" pos:end="99:43">(<argument pos:start="99:22" pos:end="99:23"><expr pos:start="99:22" pos:end="99:23"><operator pos:start="99:22" pos:end="99:22">-</operator><literal type="number" pos:start="99:23" pos:end="99:23">1</literal></expr></argument>, <argument pos:start="99:26" pos:end="99:39"><expr pos:start="99:26" pos:end="99:39"><operator pos:start="99:26" pos:end="99:26">&amp;</operator><name pos:start="99:27" pos:end="99:39">vmstate_e1000</name></expr></argument>, <argument pos:start="99:42" pos:end="99:42"><expr pos:start="99:42" pos:end="99:42"><name pos:start="99:42" pos:end="99:42">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="122:0"><expr pos:start="101:5" pos:end="101:18"><call pos:start="101:5" pos:end="101:18"><name pos:start="101:5" pos:end="101:15">e1000_reset</name><argument_list pos:start="101:16" pos:end="101:18">(<argument pos:start="101:17" pos:end="101:17"><expr pos:start="101:17" pos:end="101:17"><name pos:start="101:17" pos:end="101:17">d</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<cpp:if pos:start="105:1" pos:end="105:5">#<cpp:directive pos:start="105:2" pos:end="105:3">if</cpp:directive> <expr pos:start="105:5" pos:end="105:5"><literal type="number" pos:start="105:5" pos:end="105:5">0</literal></expr></cpp:if> <comment type="block" pos:start="105:7" pos:end="105:67">/* rom bev support is broken -&gt; can't load unconditionally */</comment>

    if (!pci_dev-&gt;qdev.hotplugged) {

        static int loaded = 0;

        if (!loaded) {

            rom_add_option("pxe-e1000.bin");

            loaded = 1;

        }

    }

<cpp:endif pos:start="121:1" pos:end="121:6">#<cpp:directive pos:start="121:2" pos:end="121:6">endif</cpp:directive></cpp:endif>

    <return pos:start="123:5" pos:end="123:13">return <expr pos:start="123:12" pos:end="123:12"><literal type="number" pos:start="123:12" pos:end="123:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
