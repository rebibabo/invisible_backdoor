<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/11869.c" pos:tabs="8"><function pos:start="1:1" pos:end="145:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:42">vorbis_parse_setup_hdr_residues</name><parameter_list pos:start="1:43" pos:end="1:62">(<parameter pos:start="1:44" pos:end="1:61"><decl pos:start="1:44" pos:end="1:61"><type pos:start="1:44" pos:end="1:59"><name pos:start="1:44" pos:end="1:57">vorbis_context</name> <modifier pos:start="1:59" pos:end="1:59">*</modifier></type><name pos:start="1:60" pos:end="1:61">vc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="145:1">{<block_content pos:start="5:5" pos:end="143:13">

    <decl_stmt pos:start="5:5" pos:end="5:32"><decl pos:start="5:5" pos:end="5:31"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">GetBitContext</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:21">gb</name> <init pos:start="5:23" pos:end="5:31">= <expr pos:start="5:25" pos:end="5:31"><operator pos:start="5:25" pos:end="5:25">&amp;</operator><name pos:start="5:26" pos:end="5:31"><name pos:start="5:26" pos:end="5:27">vc</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:31">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:25"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:16">uint_fast8_t</name></type> <name pos:start="7:18" pos:end="7:18">i</name></decl>, <decl pos:start="7:21" pos:end="7:21"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:21" pos:end="7:21">j</name></decl>, <decl pos:start="7:24" pos:end="7:24"><type ref="prev" pos:start="7:5" pos:end="7:16"/><name pos:start="7:24" pos:end="7:24">k</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:21"><name pos:start="11:5" pos:end="11:6">vc</name><operator pos:start="11:7" pos:end="11:8">-&gt;</operator><name pos:start="11:9" pos:end="11:21">residue_count</name></name> <operator pos:start="11:23" pos:end="11:23">=</operator> <call pos:start="11:25" pos:end="11:39"><name pos:start="11:25" pos:end="11:32">get_bits</name><argument_list pos:start="11:33" pos:end="11:39">(<argument pos:start="11:34" pos:end="11:35"><expr pos:start="11:34" pos:end="11:35"><name pos:start="11:34" pos:end="11:35">gb</name></expr></argument>, <argument pos:start="11:38" pos:end="11:38"><expr pos:start="11:38" pos:end="11:38"><literal type="number" pos:start="11:38" pos:end="11:38">6</literal></expr></argument>)</argument_list></call><operator pos:start="11:40" pos:end="11:40">+</operator><literal type="number" pos:start="11:41" pos:end="11:41">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:79"><expr pos:start="13:5" pos:end="13:78"><name pos:start="13:5" pos:end="13:16"><name pos:start="13:5" pos:end="13:6">vc</name><operator pos:start="13:7" pos:end="13:8">-&gt;</operator><name pos:start="13:9" pos:end="13:16">residues</name></name>      <operator pos:start="13:23" pos:end="13:23">=</operator> <call pos:start="13:25" pos:end="13:78"><name pos:start="13:25" pos:end="13:34">av_mallocz</name><argument_list pos:start="13:35" pos:end="13:78">(<argument pos:start="13:36" pos:end="13:77"><expr pos:start="13:36" pos:end="13:77"><name pos:start="13:36" pos:end="13:52"><name pos:start="13:36" pos:end="13:37">vc</name><operator pos:start="13:38" pos:end="13:39">-&gt;</operator><name pos:start="13:40" pos:end="13:52">residue_count</name></name> <operator pos:start="13:54" pos:end="13:54">*</operator> <sizeof pos:start="13:56" pos:end="13:77">sizeof<argument_list pos:start="13:62" pos:end="13:77">(<argument pos:start="13:63" pos:end="13:76"><expr pos:start="13:63" pos:end="13:76"><name pos:start="13:63" pos:end="13:76">vorbis_residue</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:62"><expr pos:start="17:5" pos:end="17:61"><call pos:start="17:5" pos:end="17:61"><name pos:start="17:5" pos:end="17:12">AV_DEBUG</name><argument_list pos:start="17:13" pos:end="17:61">(<argument pos:start="17:14" pos:end="17:41"><expr pos:start="17:14" pos:end="17:41"><literal type="string" pos:start="17:14" pos:end="17:41">" There are %d residues. \n"</literal></expr></argument>, <argument pos:start="17:44" pos:end="17:60"><expr pos:start="17:44" pos:end="17:60"><name pos:start="17:44" pos:end="17:60"><name pos:start="17:44" pos:end="17:45">vc</name><operator pos:start="17:46" pos:end="17:47">-&gt;</operator><name pos:start="17:48" pos:end="17:60">residue_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="21:5" pos:end="141:5">for <control pos:start="21:9" pos:end="21:43">(<init pos:start="21:10" pos:end="21:15"><expr pos:start="21:10" pos:end="21:14"><name pos:start="21:10" pos:end="21:10">i</name> <operator pos:start="21:12" pos:end="21:12">=</operator> <literal type="number" pos:start="21:14" pos:end="21:14">0</literal></expr>;</init> <condition pos:start="21:17" pos:end="21:38"><expr pos:start="21:17" pos:end="21:37"><name pos:start="21:17" pos:end="21:17">i</name> <operator pos:start="21:19" pos:end="21:19">&lt;</operator> <name pos:start="21:21" pos:end="21:37"><name pos:start="21:21" pos:end="21:22">vc</name><operator pos:start="21:23" pos:end="21:24">-&gt;</operator><name pos:start="21:25" pos:end="21:37">residue_count</name></name></expr>;</condition> <incr pos:start="21:40" pos:end="21:42"><expr pos:start="21:40" pos:end="21:42"><operator pos:start="21:40" pos:end="21:41">++</operator><name pos:start="21:42" pos:end="21:42">i</name></expr></incr>)</control> <block pos:start="21:45" pos:end="141:5">{<block_content pos:start="23:9" pos:end="139:9">

        <decl_stmt pos:start="23:9" pos:end="23:53"><decl pos:start="23:9" pos:end="23:52"><type pos:start="23:9" pos:end="23:24"><name pos:start="23:9" pos:end="23:22">vorbis_residue</name> <modifier pos:start="23:24" pos:end="23:24">*</modifier></type><name pos:start="23:25" pos:end="23:33">res_setup</name> <init pos:start="23:35" pos:end="23:52">= <expr pos:start="23:37" pos:end="23:52"><operator pos:start="23:37" pos:end="23:37">&amp;</operator><name pos:start="23:38" pos:end="23:52"><name pos:start="23:38" pos:end="23:39">vc</name><operator pos:start="23:40" pos:end="23:41">-&gt;</operator><name pos:start="23:42" pos:end="23:49">residues</name><index pos:start="23:50" pos:end="23:52">[<expr pos:start="23:51" pos:end="23:51"><name pos:start="23:51" pos:end="23:51">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="25:9" pos:end="25:33"><decl pos:start="25:9" pos:end="25:32"><type pos:start="25:9" pos:end="25:20"><name pos:start="25:9" pos:end="25:20">uint_fast8_t</name></type> <name pos:start="25:22" pos:end="25:32"><name pos:start="25:22" pos:end="25:28">cascade</name><index pos:start="25:29" pos:end="25:32">[<expr pos:start="25:30" pos:end="25:31"><literal type="number" pos:start="25:30" pos:end="25:31">64</literal></expr>]</index></name></decl>;</decl_stmt>

        <decl_stmt pos:start="27:9" pos:end="27:31"><decl pos:start="27:9" pos:end="27:30"><type pos:start="27:9" pos:end="27:20"><name pos:start="27:9" pos:end="27:20">uint_fast8_t</name></type> <name pos:start="27:22" pos:end="27:30">high_bits</name></decl>;</decl_stmt>

        <decl_stmt pos:start="29:9" pos:end="29:30"><decl pos:start="29:9" pos:end="29:29"><type pos:start="29:9" pos:end="29:20"><name pos:start="29:9" pos:end="29:20">uint_fast8_t</name></type> <name pos:start="29:22" pos:end="29:29">low_bits</name></decl>;</decl_stmt>



        <expr_stmt pos:start="33:9" pos:end="33:43"><expr pos:start="33:9" pos:end="33:42"><name pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:17">res_setup</name><operator pos:start="33:18" pos:end="33:19">-&gt;</operator><name pos:start="33:20" pos:end="33:23">type</name></name> <operator pos:start="33:25" pos:end="33:25">=</operator> <call pos:start="33:27" pos:end="33:42"><name pos:start="33:27" pos:end="33:34">get_bits</name><argument_list pos:start="33:35" pos:end="33:42">(<argument pos:start="33:36" pos:end="33:37"><expr pos:start="33:36" pos:end="33:37"><name pos:start="33:36" pos:end="33:37">gb</name></expr></argument>, <argument pos:start="33:40" pos:end="33:41"><expr pos:start="33:40" pos:end="33:41"><literal type="number" pos:start="33:40" pos:end="33:41">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="37:9" pos:end="37:64"><expr pos:start="37:9" pos:end="37:63"><call pos:start="37:9" pos:end="37:63"><name pos:start="37:9" pos:end="37:16">AV_DEBUG</name><argument_list pos:start="37:17" pos:end="37:63">(<argument pos:start="37:18" pos:end="37:42"><expr pos:start="37:18" pos:end="37:42"><literal type="string" pos:start="37:18" pos:end="37:42">" %d. residue type %d \n"</literal></expr></argument>, <argument pos:start="37:45" pos:end="37:45"><expr pos:start="37:45" pos:end="37:45"><name pos:start="37:45" pos:end="37:45">i</name></expr></argument>, <argument pos:start="37:48" pos:end="37:62"><expr pos:start="37:48" pos:end="37:62"><name pos:start="37:48" pos:end="37:62"><name pos:start="37:48" pos:end="37:56">res_setup</name><operator pos:start="37:57" pos:end="37:58">-&gt;</operator><name pos:start="37:59" pos:end="37:62">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="41:9" pos:end="41:53"><expr pos:start="41:9" pos:end="41:52"><name pos:start="41:9" pos:end="41:24"><name pos:start="41:9" pos:end="41:17">res_setup</name><operator pos:start="41:18" pos:end="41:19">-&gt;</operator><name pos:start="41:20" pos:end="41:24">begin</name></name>          <operator pos:start="41:35" pos:end="41:35">=</operator> <call pos:start="41:37" pos:end="41:52"><name pos:start="41:37" pos:end="41:44">get_bits</name><argument_list pos:start="41:45" pos:end="41:52">(<argument pos:start="41:46" pos:end="41:47"><expr pos:start="41:46" pos:end="41:47"><name pos:start="41:46" pos:end="41:47">gb</name></expr></argument>, <argument pos:start="41:50" pos:end="41:51"><expr pos:start="41:50" pos:end="41:51"><literal type="number" pos:start="41:50" pos:end="41:51">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:53"><expr pos:start="43:9" pos:end="43:52"><name pos:start="43:9" pos:end="43:22"><name pos:start="43:9" pos:end="43:17">res_setup</name><operator pos:start="43:18" pos:end="43:19">-&gt;</operator><name pos:start="43:20" pos:end="43:22">end</name></name>            <operator pos:start="43:35" pos:end="43:35">=</operator> <call pos:start="43:37" pos:end="43:52"><name pos:start="43:37" pos:end="43:44">get_bits</name><argument_list pos:start="43:45" pos:end="43:52">(<argument pos:start="43:46" pos:end="43:47"><expr pos:start="43:46" pos:end="43:47"><name pos:start="43:46" pos:end="43:47">gb</name></expr></argument>, <argument pos:start="43:50" pos:end="43:51"><expr pos:start="43:50" pos:end="43:51"><literal type="number" pos:start="43:50" pos:end="43:51">24</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:57"><expr pos:start="45:9" pos:end="45:56"><name pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:17">res_setup</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:33">partition_size</name></name> <operator pos:start="45:35" pos:end="45:35">=</operator> <call pos:start="45:37" pos:end="45:52"><name pos:start="45:37" pos:end="45:44">get_bits</name><argument_list pos:start="45:45" pos:end="45:52">(<argument pos:start="45:46" pos:end="45:47"><expr pos:start="45:46" pos:end="45:47"><name pos:start="45:46" pos:end="45:47">gb</name></expr></argument>, <argument pos:start="45:50" pos:end="45:51"><expr pos:start="45:50" pos:end="45:51"><literal type="number" pos:start="45:50" pos:end="45:51">24</literal></expr></argument>)</argument_list></call> <operator pos:start="45:54" pos:end="45:54">+</operator> <literal type="number" pos:start="45:56" pos:end="45:56">1</literal></expr>;</expr_stmt>

        <comment type="block" pos:start="47:9" pos:end="47:61">/* Validations to prevent a buffer overflow later. */</comment>

        <if_stmt pos:start="49:9" pos:end="59:9"><if pos:start="49:9" pos:end="59:9">if <condition pos:start="49:12" pos:end="53:93">(<expr pos:start="49:13" pos:end="53:92"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:21">res_setup</name><operator pos:start="49:22" pos:end="49:23">-&gt;</operator><name pos:start="49:24" pos:end="49:28">begin</name></name><operator pos:start="49:29" pos:end="49:29">&gt;</operator><name pos:start="49:30" pos:end="49:43"><name pos:start="49:30" pos:end="49:38">res_setup</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:43">end</name></name> <operator pos:start="49:45" pos:end="49:46">||</operator>

            <name pos:start="51:13" pos:end="51:26"><name pos:start="51:13" pos:end="51:21">res_setup</name><operator pos:start="51:22" pos:end="51:23">-&gt;</operator><name pos:start="51:24" pos:end="51:26">end</name></name> <operator pos:start="51:28" pos:end="51:28">&gt;</operator> <name pos:start="51:30" pos:end="51:53"><name pos:start="51:30" pos:end="51:31">vc</name><operator pos:start="51:32" pos:end="51:33">-&gt;</operator><name pos:start="51:34" pos:end="51:43">avccontext</name><operator pos:start="51:44" pos:end="51:45">-&gt;</operator><name pos:start="51:46" pos:end="51:53">channels</name></name> <operator pos:start="51:55" pos:end="51:55">*</operator> <name pos:start="51:57" pos:end="51:72"><name pos:start="51:57" pos:end="51:58">vc</name><operator pos:start="51:59" pos:end="51:60">-&gt;</operator><name pos:start="51:61" pos:end="51:69">blocksize</name><index pos:start="51:70" pos:end="51:72">[<expr pos:start="51:71" pos:end="51:71"><literal type="number" pos:start="51:71" pos:end="51:71">1</literal></expr>]</index></name> <operator pos:start="51:74" pos:end="51:74">/</operator> <operator pos:start="51:76" pos:end="51:76">(</operator><ternary pos:start="51:77" pos:end="51:104"><condition pos:start="51:77" pos:end="51:98"><expr pos:start="51:77" pos:end="51:96"><name pos:start="51:77" pos:end="51:91"><name pos:start="51:77" pos:end="51:85">res_setup</name><operator pos:start="51:86" pos:end="51:87">-&gt;</operator><name pos:start="51:88" pos:end="51:91">type</name></name> <operator pos:start="51:93" pos:end="51:94">==</operator> <literal type="number" pos:start="51:96" pos:end="51:96">2</literal></expr> ?</condition><then pos:start="51:100" pos:end="51:100"> <expr pos:start="51:100" pos:end="51:100"><literal type="number" pos:start="51:100" pos:end="51:100">1</literal></expr> </then><else pos:start="51:102" pos:end="51:104">: <expr pos:start="51:104" pos:end="51:104"><literal type="number" pos:start="51:104" pos:end="51:104">2</literal></expr></else></ternary><operator pos:start="51:105" pos:end="51:105">)</operator> <operator pos:start="51:107" pos:end="51:108">||</operator>

            <operator pos:start="53:13" pos:end="53:13">(</operator><name pos:start="53:14" pos:end="53:27"><name pos:start="53:14" pos:end="53:22">res_setup</name><operator pos:start="53:23" pos:end="53:24">-&gt;</operator><name pos:start="53:25" pos:end="53:27">end</name></name><operator pos:start="53:28" pos:end="53:28">-</operator><name pos:start="53:29" pos:end="53:44"><name pos:start="53:29" pos:end="53:37">res_setup</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:44">begin</name></name><operator pos:start="53:45" pos:end="53:45">)</operator> <operator pos:start="53:47" pos:end="53:47">/</operator> <name pos:start="53:49" pos:end="53:73"><name pos:start="53:49" pos:end="53:57">res_setup</name><operator pos:start="53:58" pos:end="53:59">-&gt;</operator><name pos:start="53:60" pos:end="53:73">partition_size</name></name> <operator pos:start="53:75" pos:end="53:75">&gt;</operator> <name pos:start="53:77" pos:end="53:92">V_MAX_PARTITIONS</name></expr>)</condition> <block pos:start="53:95" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:22">

            <expr_stmt pos:start="55:13" pos:end="55:277"><expr pos:start="55:13" pos:end="55:276"><call pos:start="55:13" pos:end="55:276"><name pos:start="55:13" pos:end="55:18">av_log</name><argument_list pos:start="55:19" pos:end="55:276">(<argument pos:start="55:20" pos:end="55:33"><expr pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:33"><name pos:start="55:20" pos:end="55:21">vc</name><operator pos:start="55:22" pos:end="55:23">-&gt;</operator><name pos:start="55:24" pos:end="55:33">avccontext</name></name></expr></argument>, <argument pos:start="55:36" pos:end="55:47"><expr pos:start="55:36" pos:end="55:47"><name pos:start="55:36" pos:end="55:47">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="55:50" pos:end="55:175"><expr pos:start="55:50" pos:end="55:175"><literal type="string" pos:start="55:50" pos:end="55:112">"partition out of bounds: type, begin, end, size, blocksize: %"</literal><name pos:start="55:113" pos:end="55:122">PRIdFAST16</name><literal type="string" pos:start="55:123" pos:end="55:127">", %"</literal><name pos:start="55:128" pos:end="55:137">PRIdFAST32</name><literal type="string" pos:start="55:138" pos:end="55:142">", %"</literal><name pos:start="55:143" pos:end="55:152">PRIdFAST32</name><literal type="string" pos:start="55:153" pos:end="55:161">", %u, %"</literal><name pos:start="55:162" pos:end="55:171">PRIdFAST32</name><literal type="string" pos:start="55:172" pos:end="55:175">"\n"</literal></expr></argument>, <argument pos:start="55:178" pos:end="55:192"><expr pos:start="55:178" pos:end="55:192"><name pos:start="55:178" pos:end="55:192"><name pos:start="55:178" pos:end="55:186">res_setup</name><operator pos:start="55:187" pos:end="55:188">-&gt;</operator><name pos:start="55:189" pos:end="55:192">type</name></name></expr></argument>, <argument pos:start="55:195" pos:end="55:210"><expr pos:start="55:195" pos:end="55:210"><name pos:start="55:195" pos:end="55:210"><name pos:start="55:195" pos:end="55:203">res_setup</name><operator pos:start="55:204" pos:end="55:205">-&gt;</operator><name pos:start="55:206" pos:end="55:210">begin</name></name></expr></argument>, <argument pos:start="55:213" pos:end="55:226"><expr pos:start="55:213" pos:end="55:226"><name pos:start="55:213" pos:end="55:226"><name pos:start="55:213" pos:end="55:221">res_setup</name><operator pos:start="55:222" pos:end="55:223">-&gt;</operator><name pos:start="55:224" pos:end="55:226">end</name></name></expr></argument>, <argument pos:start="55:229" pos:end="55:253"><expr pos:start="55:229" pos:end="55:253"><name pos:start="55:229" pos:end="55:253"><name pos:start="55:229" pos:end="55:237">res_setup</name><operator pos:start="55:238" pos:end="55:239">-&gt;</operator><name pos:start="55:240" pos:end="55:253">partition_size</name></name></expr></argument>, <argument pos:start="55:256" pos:end="55:275"><expr pos:start="55:256" pos:end="55:275"><name pos:start="55:256" pos:end="55:271"><name pos:start="55:256" pos:end="55:257">vc</name><operator pos:start="55:258" pos:end="55:259">-&gt;</operator><name pos:start="55:260" pos:end="55:268">blocksize</name><index pos:start="55:269" pos:end="55:271">[<expr pos:start="55:270" pos:end="55:270"><literal type="number" pos:start="55:270" pos:end="55:270">1</literal></expr>]</index></name> <operator pos:start="55:273" pos:end="55:273">/</operator> <literal type="number" pos:start="55:275" pos:end="55:275">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="57:13" pos:end="57:22">return <expr pos:start="57:20" pos:end="57:21"><operator pos:start="57:20" pos:end="57:20">-</operator><literal type="number" pos:start="57:21" pos:end="57:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="63:9" pos:end="63:57"><expr pos:start="63:9" pos:end="63:56"><name pos:start="63:9" pos:end="63:34"><name pos:start="63:9" pos:end="63:17">res_setup</name><operator pos:start="63:18" pos:end="63:19">-&gt;</operator><name pos:start="63:20" pos:end="63:34">classifications</name></name> <operator pos:start="63:36" pos:end="63:36">=</operator> <call pos:start="63:38" pos:end="63:52"><name pos:start="63:38" pos:end="63:45">get_bits</name><argument_list pos:start="63:46" pos:end="63:52">(<argument pos:start="63:47" pos:end="63:48"><expr pos:start="63:47" pos:end="63:48"><name pos:start="63:47" pos:end="63:48">gb</name></expr></argument>, <argument pos:start="63:51" pos:end="63:51"><expr pos:start="63:51" pos:end="63:51"><literal type="number" pos:start="63:51" pos:end="63:51">6</literal></expr></argument>)</argument_list></call> <operator pos:start="63:54" pos:end="63:54">+</operator> <literal type="number" pos:start="63:56" pos:end="63:56">1</literal></expr>;</expr_stmt>

        <macro pos:start="65:9" pos:end="65:72"><name pos:start="65:9" pos:end="65:27">GET_VALIDATED_INDEX</name><argument_list pos:start="65:28" pos:end="65:72">(<argument pos:start="65:29" pos:end="65:48">res_setup-&gt;classbook</argument>, <argument pos:start="65:51" pos:end="65:51"><literal type="number" pos:start="65:51" pos:end="65:51">8</literal></argument>, <argument pos:start="65:54" pos:end="65:71">vc-&gt;codebook_count</argument>)</argument_list></macro>



        <expr_stmt pos:start="69:9" pos:end="71:76"><expr pos:start="69:9" pos:end="71:75"><name pos:start="69:9" pos:end="69:31"><name pos:start="69:9" pos:end="69:17">res_setup</name><operator pos:start="69:18" pos:end="69:19">-&gt;</operator><name pos:start="69:20" pos:end="69:31">ptns_to_read</name></name> <operator pos:start="69:33" pos:end="69:33">=</operator>

            <operator pos:start="71:13" pos:end="71:13">(</operator><name pos:start="71:14" pos:end="71:27"><name pos:start="71:14" pos:end="71:22">res_setup</name><operator pos:start="71:23" pos:end="71:24">-&gt;</operator><name pos:start="71:25" pos:end="71:27">end</name></name> <operator pos:start="71:29" pos:end="71:29">-</operator> <name pos:start="71:31" pos:end="71:46"><name pos:start="71:31" pos:end="71:39">res_setup</name><operator pos:start="71:40" pos:end="71:41">-&gt;</operator><name pos:start="71:42" pos:end="71:46">begin</name></name><operator pos:start="71:47" pos:end="71:47">)</operator> <operator pos:start="71:49" pos:end="71:49">/</operator> <name pos:start="71:51" pos:end="71:75"><name pos:start="71:51" pos:end="71:59">res_setup</name><operator pos:start="71:60" pos:end="71:61">-&gt;</operator><name pos:start="71:62" pos:end="71:75">partition_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="77:70"><expr pos:start="73:9" pos:end="77:69"><name pos:start="73:9" pos:end="73:27"><name pos:start="73:9" pos:end="73:17">res_setup</name><operator pos:start="73:18" pos:end="73:19">-&gt;</operator><name pos:start="73:20" pos:end="73:27">classifs</name></name> <operator pos:start="73:29" pos:end="73:29">=</operator> <call pos:start="73:31" pos:end="77:69"><name pos:start="73:31" pos:end="73:39">av_malloc</name><argument_list pos:start="73:40" pos:end="77:69">(<argument pos:start="73:41" pos:end="77:68"><expr pos:start="73:41" pos:end="77:68"><name pos:start="73:41" pos:end="73:63"><name pos:start="73:41" pos:end="73:49">res_setup</name><operator pos:start="73:50" pos:end="73:51">-&gt;</operator><name pos:start="73:52" pos:end="73:63">ptns_to_read</name></name> <operator pos:start="73:65" pos:end="73:65">*</operator>

                                        <name pos:start="75:41" pos:end="75:58"><name pos:start="75:41" pos:end="75:42">vc</name><operator pos:start="75:43" pos:end="75:44">-&gt;</operator><name pos:start="75:45" pos:end="75:58">audio_channels</name></name> <operator pos:start="75:60" pos:end="75:60">*</operator>

                                        <sizeof pos:start="77:41" pos:end="77:68">sizeof<argument_list pos:start="77:47" pos:end="77:68">(<argument pos:start="77:48" pos:end="77:67"><expr pos:start="77:48" pos:end="77:67"><operator pos:start="77:48" pos:end="77:48">*</operator><name pos:start="77:49" pos:end="77:67"><name pos:start="77:49" pos:end="77:57">res_setup</name><operator pos:start="77:58" pos:end="77:59">-&gt;</operator><name pos:start="77:60" pos:end="77:67">classifs</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="79:9" pos:end="81:35"><if pos:start="79:9" pos:end="81:35">if <condition pos:start="79:12" pos:end="79:33">(<expr pos:start="79:13" pos:end="79:32"><operator pos:start="79:13" pos:end="79:13">!</operator><name pos:start="79:14" pos:end="79:32"><name pos:start="79:14" pos:end="79:22">res_setup</name><operator pos:start="79:23" pos:end="79:24">-&gt;</operator><name pos:start="79:25" pos:end="79:32">classifs</name></name></expr>)</condition><block type="pseudo" pos:start="81:13" pos:end="81:35"><block_content pos:start="81:13" pos:end="81:35">

            <return pos:start="81:13" pos:end="81:35">return <expr pos:start="81:20" pos:end="81:34"><call pos:start="81:20" pos:end="81:34"><name pos:start="81:20" pos:end="81:26">AVERROR</name><argument_list pos:start="81:27" pos:end="81:34">(<argument pos:start="81:28" pos:end="81:33"><expr pos:start="81:28" pos:end="81:33"><name pos:start="81:28" pos:end="81:33">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



        <expr_stmt pos:start="85:9" pos:end="87:60"><expr pos:start="85:9" pos:end="87:59"><call pos:start="85:9" pos:end="87:59"><name pos:start="85:9" pos:end="85:16">AV_DEBUG</name><argument_list pos:start="85:17" pos:end="87:59">(<argument pos:start="85:18" pos:end="85:80"><expr pos:start="85:18" pos:end="85:80"><literal type="string" pos:start="85:18" pos:end="85:80">"    begin %d end %d part.size %d classif.s %d classbook %d \n"</literal></expr></argument>, <argument pos:start="85:83" pos:end="85:98"><expr pos:start="85:83" pos:end="85:98"><name pos:start="85:83" pos:end="85:98"><name pos:start="85:83" pos:end="85:91">res_setup</name><operator pos:start="85:92" pos:end="85:93">-&gt;</operator><name pos:start="85:94" pos:end="85:98">begin</name></name></expr></argument>, <argument pos:start="85:101" pos:end="85:114"><expr pos:start="85:101" pos:end="85:114"><name pos:start="85:101" pos:end="85:114"><name pos:start="85:101" pos:end="85:109">res_setup</name><operator pos:start="85:110" pos:end="85:111">-&gt;</operator><name pos:start="85:112" pos:end="85:114">end</name></name></expr></argument>, <argument pos:start="85:117" pos:end="85:141"><expr pos:start="85:117" pos:end="85:141"><name pos:start="85:117" pos:end="85:141"><name pos:start="85:117" pos:end="85:125">res_setup</name><operator pos:start="85:126" pos:end="85:127">-&gt;</operator><name pos:start="85:128" pos:end="85:141">partition_size</name></name></expr></argument>,

          <argument pos:start="87:11" pos:end="87:36"><expr pos:start="87:11" pos:end="87:36"><name pos:start="87:11" pos:end="87:36"><name pos:start="87:11" pos:end="87:19">res_setup</name><operator pos:start="87:20" pos:end="87:21">-&gt;</operator><name pos:start="87:22" pos:end="87:36">classifications</name></name></expr></argument>, <argument pos:start="87:39" pos:end="87:58"><expr pos:start="87:39" pos:end="87:58"><name pos:start="87:39" pos:end="87:58"><name pos:start="87:39" pos:end="87:47">res_setup</name><operator pos:start="87:48" pos:end="87:49">-&gt;</operator><name pos:start="87:50" pos:end="87:58">classbook</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <for pos:start="91:9" pos:end="107:9">for <control pos:start="91:13" pos:end="91:56">(<init pos:start="91:14" pos:end="91:19"><expr pos:start="91:14" pos:end="91:18"><name pos:start="91:14" pos:end="91:14">j</name> <operator pos:start="91:16" pos:end="91:16">=</operator> <literal type="number" pos:start="91:18" pos:end="91:18">0</literal></expr>;</init> <condition pos:start="91:21" pos:end="91:51"><expr pos:start="91:21" pos:end="91:50"><name pos:start="91:21" pos:end="91:21">j</name> <operator pos:start="91:23" pos:end="91:23">&lt;</operator> <name pos:start="91:25" pos:end="91:50"><name pos:start="91:25" pos:end="91:33">res_setup</name><operator pos:start="91:34" pos:end="91:35">-&gt;</operator><name pos:start="91:36" pos:end="91:50">classifications</name></name></expr>;</condition> <incr pos:start="91:53" pos:end="91:55"><expr pos:start="91:53" pos:end="91:55"><operator pos:start="91:53" pos:end="91:54">++</operator><name pos:start="91:55" pos:end="91:55">j</name></expr></incr>)</control> <block pos:start="91:58" pos:end="107:9">{<block_content pos:start="93:13" pos:end="105:81">

            <expr_stmt pos:start="93:13" pos:end="93:26"><expr pos:start="93:13" pos:end="93:25"><name pos:start="93:13" pos:end="93:21">high_bits</name> <operator pos:start="93:23" pos:end="93:23">=</operator> <literal type="number" pos:start="93:25" pos:end="93:25">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="95:13" pos:end="95:40"><expr pos:start="95:13" pos:end="95:39"><name pos:start="95:13" pos:end="95:20">low_bits</name>  <operator pos:start="95:23" pos:end="95:23">=</operator> <call pos:start="95:25" pos:end="95:39"><name pos:start="95:25" pos:end="95:32">get_bits</name><argument_list pos:start="95:33" pos:end="95:39">(<argument pos:start="95:34" pos:end="95:35"><expr pos:start="95:34" pos:end="95:35"><name pos:start="95:34" pos:end="95:35">gb</name></expr></argument>, <argument pos:start="95:38" pos:end="95:38"><expr pos:start="95:38" pos:end="95:38"><literal type="number" pos:start="95:38" pos:end="95:38">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="97:13" pos:end="99:44"><if pos:start="97:13" pos:end="99:44">if <condition pos:start="97:16" pos:end="97:30">(<expr pos:start="97:17" pos:end="97:29"><call pos:start="97:17" pos:end="97:29"><name pos:start="97:17" pos:end="97:25">get_bits1</name><argument_list pos:start="97:26" pos:end="97:29">(<argument pos:start="97:27" pos:end="97:28"><expr pos:start="97:27" pos:end="97:28"><name pos:start="97:27" pos:end="97:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="99:17" pos:end="99:44"><block_content pos:start="99:17" pos:end="99:44">

                <expr_stmt pos:start="99:17" pos:end="99:44"><expr pos:start="99:17" pos:end="99:43"><name pos:start="99:17" pos:end="99:25">high_bits</name> <operator pos:start="99:27" pos:end="99:27">=</operator> <call pos:start="99:29" pos:end="99:43"><name pos:start="99:29" pos:end="99:36">get_bits</name><argument_list pos:start="99:37" pos:end="99:43">(<argument pos:start="99:38" pos:end="99:39"><expr pos:start="99:38" pos:end="99:39"><name pos:start="99:38" pos:end="99:39">gb</name></expr></argument>, <argument pos:start="99:42" pos:end="99:42"><expr pos:start="99:42" pos:end="99:42"><literal type="number" pos:start="99:42" pos:end="99:42">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:53"><expr pos:start="101:13" pos:end="101:52"><name pos:start="101:13" pos:end="101:22"><name pos:start="101:13" pos:end="101:19">cascade</name><index pos:start="101:20" pos:end="101:22">[<expr pos:start="101:21" pos:end="101:21"><name pos:start="101:21" pos:end="101:21">j</name></expr>]</index></name> <operator pos:start="101:24" pos:end="101:24">=</operator> <operator pos:start="101:26" pos:end="101:26">(</operator><name pos:start="101:27" pos:end="101:35">high_bits</name> <operator pos:start="101:37" pos:end="101:38">&lt;&lt;</operator> <literal type="number" pos:start="101:40" pos:end="101:40">3</literal><operator pos:start="101:41" pos:end="101:41">)</operator> <operator pos:start="101:43" pos:end="101:43">+</operator> <name pos:start="101:45" pos:end="101:52">low_bits</name></expr>;</expr_stmt>



            <expr_stmt pos:start="105:13" pos:end="105:81"><expr pos:start="105:13" pos:end="105:80"><call pos:start="105:13" pos:end="105:80"><name pos:start="105:13" pos:end="105:20">AV_DEBUG</name><argument_list pos:start="105:21" pos:end="105:80">(<argument pos:start="105:22" pos:end="105:58"><expr pos:start="105:22" pos:end="105:58"><literal type="string" pos:start="105:22" pos:end="105:58">"     %d class casscade depth: %d \n"</literal></expr></argument>, <argument pos:start="105:61" pos:end="105:61"><expr pos:start="105:61" pos:end="105:61"><name pos:start="105:61" pos:end="105:61">j</name></expr></argument>, <argument pos:start="105:64" pos:end="105:79"><expr pos:start="105:64" pos:end="105:79"><call pos:start="105:64" pos:end="105:79"><name pos:start="105:64" pos:end="105:67">ilog</name><argument_list pos:start="105:68" pos:end="105:79">(<argument pos:start="105:69" pos:end="105:78"><expr pos:start="105:69" pos:end="105:78"><name pos:start="105:69" pos:end="105:78"><name pos:start="105:69" pos:end="105:75">cascade</name><index pos:start="105:76" pos:end="105:78">[<expr pos:start="105:77" pos:end="105:77"><name pos:start="105:77" pos:end="105:77">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></for>



        <expr_stmt pos:start="111:9" pos:end="111:31"><expr pos:start="111:9" pos:end="111:30"><name pos:start="111:9" pos:end="111:26"><name pos:start="111:9" pos:end="111:17">res_setup</name><operator pos:start="111:18" pos:end="111:19">-&gt;</operator><name pos:start="111:20" pos:end="111:26">maxpass</name></name> <operator pos:start="111:28" pos:end="111:28">=</operator> <literal type="number" pos:start="111:30" pos:end="111:30">0</literal></expr>;</expr_stmt>

        <for pos:start="113:9" pos:end="139:9">for <control pos:start="113:13" pos:end="113:56">(<init pos:start="113:14" pos:end="113:19"><expr pos:start="113:14" pos:end="113:18"><name pos:start="113:14" pos:end="113:14">j</name> <operator pos:start="113:16" pos:end="113:16">=</operator> <literal type="number" pos:start="113:18" pos:end="113:18">0</literal></expr>;</init> <condition pos:start="113:21" pos:end="113:51"><expr pos:start="113:21" pos:end="113:50"><name pos:start="113:21" pos:end="113:21">j</name> <operator pos:start="113:23" pos:end="113:23">&lt;</operator> <name pos:start="113:25" pos:end="113:50"><name pos:start="113:25" pos:end="113:33">res_setup</name><operator pos:start="113:34" pos:end="113:35">-&gt;</operator><name pos:start="113:36" pos:end="113:50">classifications</name></name></expr>;</condition> <incr pos:start="113:53" pos:end="113:55"><expr pos:start="113:53" pos:end="113:55"><operator pos:start="113:53" pos:end="113:54">++</operator><name pos:start="113:55" pos:end="113:55">j</name></expr></incr>)</control> <block pos:start="113:58" pos:end="139:9">{<block_content pos:start="115:13" pos:end="137:13">

            <for pos:start="115:13" pos:end="137:13">for <control pos:start="115:17" pos:end="115:35">(<init pos:start="115:18" pos:end="115:23"><expr pos:start="115:18" pos:end="115:22"><name pos:start="115:18" pos:end="115:18">k</name> <operator pos:start="115:20" pos:end="115:20">=</operator> <literal type="number" pos:start="115:22" pos:end="115:22">0</literal></expr>;</init> <condition pos:start="115:25" pos:end="115:30"><expr pos:start="115:25" pos:end="115:29"><name pos:start="115:25" pos:end="115:25">k</name> <operator pos:start="115:27" pos:end="115:27">&lt;</operator> <literal type="number" pos:start="115:29" pos:end="115:29">8</literal></expr>;</condition> <incr pos:start="115:32" pos:end="115:34"><expr pos:start="115:32" pos:end="115:34"><operator pos:start="115:32" pos:end="115:33">++</operator><name pos:start="115:34" pos:end="115:34">k</name></expr></incr>)</control> <block pos:start="115:37" pos:end="137:13">{<block_content pos:start="117:17" pos:end="135:17">

                <if_stmt pos:start="117:17" pos:end="135:17"><if pos:start="117:17" pos:end="131:17">if <condition pos:start="117:20" pos:end="117:40">(<expr pos:start="117:21" pos:end="117:39"><name pos:start="117:21" pos:end="117:30"><name pos:start="117:21" pos:end="117:27">cascade</name><index pos:start="117:28" pos:end="117:30">[<expr pos:start="117:29" pos:end="117:29"><name pos:start="117:29" pos:end="117:29">j</name></expr>]</index></name><operator pos:start="117:31" pos:end="117:31">&amp;</operator><operator pos:start="117:32" pos:end="117:32">(</operator><literal type="number" pos:start="117:33" pos:end="117:33">1</literal> <operator pos:start="117:35" pos:end="117:36">&lt;&lt;</operator> <name pos:start="117:38" pos:end="117:38">k</name><operator pos:start="117:39" pos:end="117:39">)</operator></expr>)</condition> <block pos:start="117:42" pos:end="131:17">{<block_content pos:start="119:21" pos:end="129:47">

                    <macro pos:start="119:21" pos:end="119:86"><name pos:start="119:21" pos:end="119:39">GET_VALIDATED_INDEX</name><argument_list pos:start="119:40" pos:end="119:86">(<argument pos:start="119:41" pos:end="119:62">res_setup-&gt;books[j][k]</argument>, <argument pos:start="119:65" pos:end="119:65"><literal type="number" pos:start="119:65" pos:end="119:65">8</literal></argument>, <argument pos:start="119:68" pos:end="119:85">vc-&gt;codebook_count</argument>)</argument_list></macro>



                    <expr_stmt pos:start="123:21" pos:end="123:106"><expr pos:start="123:21" pos:end="123:105"><call pos:start="123:21" pos:end="123:105"><name pos:start="123:21" pos:end="123:28">AV_DEBUG</name><argument_list pos:start="123:29" pos:end="123:105">(<argument pos:start="123:30" pos:end="123:74"><expr pos:start="123:30" pos:end="123:74"><literal type="string" pos:start="123:30" pos:end="123:74">"     %d class casscade depth %d book: %d \n"</literal></expr></argument>, <argument pos:start="123:77" pos:end="123:77"><expr pos:start="123:77" pos:end="123:77"><name pos:start="123:77" pos:end="123:77">j</name></expr></argument>, <argument pos:start="123:80" pos:end="123:80"><expr pos:start="123:80" pos:end="123:80"><name pos:start="123:80" pos:end="123:80">k</name></expr></argument>, <argument pos:start="123:83" pos:end="123:104"><expr pos:start="123:83" pos:end="123:104"><name pos:start="123:83" pos:end="123:104"><name pos:start="123:83" pos:end="123:91">res_setup</name><operator pos:start="123:92" pos:end="123:93">-&gt;</operator><name pos:start="123:94" pos:end="123:98">books</name><index pos:start="123:99" pos:end="123:101">[<expr pos:start="123:100" pos:end="123:100"><name pos:start="123:100" pos:end="123:100">j</name></expr>]</index><index pos:start="123:102" pos:end="123:104">[<expr pos:start="123:103" pos:end="123:103"><name pos:start="123:103" pos:end="123:103">k</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                    <if_stmt pos:start="127:21" pos:end="129:47"><if pos:start="127:21" pos:end="129:47">if <condition pos:start="127:24" pos:end="127:45">(<expr pos:start="127:25" pos:end="127:44"><name pos:start="127:25" pos:end="127:25">k</name><operator pos:start="127:26" pos:end="127:26">&gt;</operator><name pos:start="127:27" pos:end="127:44"><name pos:start="127:27" pos:end="127:35">res_setup</name><operator pos:start="127:36" pos:end="127:37">-&gt;</operator><name pos:start="127:38" pos:end="127:44">maxpass</name></name></expr>)</condition><block type="pseudo" pos:start="129:25" pos:end="129:47"><block_content pos:start="129:25" pos:end="129:47">

                        <expr_stmt pos:start="129:25" pos:end="129:47"><expr pos:start="129:25" pos:end="129:46"><name pos:start="129:25" pos:end="129:42"><name pos:start="129:25" pos:end="129:33">res_setup</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:42">maxpass</name></name> <operator pos:start="129:44" pos:end="129:44">=</operator> <name pos:start="129:46" pos:end="129:46">k</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></if> <else pos:start="131:19" pos:end="135:17">else <block pos:start="131:24" pos:end="135:17">{<block_content pos:start="133:21" pos:end="133:48">

                    <expr_stmt pos:start="133:21" pos:end="133:48"><expr pos:start="133:21" pos:end="133:47"><name pos:start="133:21" pos:end="133:42"><name pos:start="133:21" pos:end="133:29">res_setup</name><operator pos:start="133:30" pos:end="133:31">-&gt;</operator><name pos:start="133:32" pos:end="133:36">books</name><index pos:start="133:37" pos:end="133:39">[<expr pos:start="133:38" pos:end="133:38"><name pos:start="133:38" pos:end="133:38">j</name></expr>]</index><index pos:start="133:40" pos:end="133:42">[<expr pos:start="133:41" pos:end="133:41"><name pos:start="133:41" pos:end="133:41">k</name></expr>]</index></name> <operator pos:start="133:44" pos:end="133:44">=</operator> <operator pos:start="133:46" pos:end="133:46">-</operator><literal type="number" pos:start="133:47" pos:end="133:47">1</literal></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></for>

        </block_content>}</block></for>

    </block_content>}</block></for>

    <return pos:start="143:5" pos:end="143:13">return <expr pos:start="143:12" pos:end="143:12"><literal type="number" pos:start="143:12" pos:end="143:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
