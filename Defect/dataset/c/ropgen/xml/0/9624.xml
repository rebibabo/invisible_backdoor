<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9624.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:31">usbredir_handle_data</name><parameter_list pos:start="1:32" pos:end="1:62">(<parameter pos:start="1:33" pos:end="1:47"><decl pos:start="1:33" pos:end="1:47"><type pos:start="1:33" pos:end="1:47"><name pos:start="1:33" pos:end="1:41">USBDevice</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:47">udev</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:61"><decl pos:start="1:50" pos:end="1:61"><type pos:start="1:50" pos:end="1:61"><name pos:start="1:50" pos:end="1:58">USBPacket</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">p</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:5">

    <decl_stmt pos:start="5:5" pos:end="5:63"><decl pos:start="5:5" pos:end="5:62"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">USBRedirDevice</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:23">dev</name> <init pos:start="5:25" pos:end="5:62">= <expr pos:start="5:27" pos:end="5:62"><call pos:start="5:27" pos:end="5:62"><name pos:start="5:27" pos:end="5:35">DO_UPCAST</name><argument_list pos:start="5:36" pos:end="5:62">(<argument pos:start="5:37" pos:end="5:50"><expr pos:start="5:37" pos:end="5:50"><name pos:start="5:37" pos:end="5:50">USBRedirDevice</name></expr></argument>, <argument pos:start="5:53" pos:end="5:55"><expr pos:start="5:53" pos:end="5:55"><name pos:start="5:53" pos:end="5:55">dev</name></expr></argument>, <argument pos:start="5:58" pos:end="5:61"><expr pos:start="5:58" pos:end="5:61"><name pos:start="5:58" pos:end="5:61">udev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:15"><decl pos:start="7:5" pos:end="7:14"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:11">uint8_t</name></type> <name pos:start="7:13" pos:end="7:14">ep</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:18"><expr pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:6">ep</name> <operator pos:start="11:8" pos:end="11:8">=</operator> <name pos:start="11:10" pos:end="11:17"><name pos:start="11:10" pos:end="11:10">p</name><operator pos:start="11:11" pos:end="11:12">-&gt;</operator><name pos:start="11:13" pos:end="11:17">devep</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:31">(<expr pos:start="13:9" pos:end="13:30"><name pos:start="13:9" pos:end="13:14"><name pos:start="13:9" pos:end="13:9">p</name><operator pos:start="13:10" pos:end="13:11">-&gt;</operator><name pos:start="13:12" pos:end="13:14">pid</name></name> <operator pos:start="13:16" pos:end="13:17">==</operator> <name pos:start="13:19" pos:end="13:30">USB_TOKEN_IN</name></expr>)</condition> <block pos:start="13:33" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:25">

        <expr_stmt pos:start="15:9" pos:end="15:25"><expr pos:start="15:9" pos:end="15:24"><name pos:start="15:9" pos:end="15:10">ep</name> <operator pos:start="15:12" pos:end="15:13">|=</operator> <name pos:start="15:15" pos:end="15:24">USB_DIR_IN</name></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="49:5">switch <condition pos:start="21:12" pos:end="21:41">(<expr pos:start="21:13" pos:end="21:40"><name pos:start="21:13" pos:end="21:35"><name pos:start="21:13" pos:end="21:15">dev</name><operator pos:start="21:16" pos:end="21:17">-&gt;</operator><name pos:start="21:18" pos:end="21:25">endpoint</name><index pos:start="21:26" pos:end="21:35">[<expr pos:start="21:27" pos:end="21:34"><call pos:start="21:27" pos:end="21:34"><name pos:start="21:27" pos:end="21:30">EP2I</name><argument_list pos:start="21:31" pos:end="21:34">(<argument pos:start="21:32" pos:end="21:33"><expr pos:start="21:32" pos:end="21:33"><name pos:start="21:32" pos:end="21:33">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="21:36" pos:end="21:36">.</operator><name pos:start="21:37" pos:end="21:40">type</name></expr>)</condition> <block pos:start="21:43" pos:end="49:5">{<block_content pos:start="23:5" pos:end="47:27">

    <case pos:start="23:5" pos:end="23:35">case <expr pos:start="23:10" pos:end="23:34"><name pos:start="23:10" pos:end="23:34">USB_ENDPOINT_XFER_CONTROL</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:74"><expr pos:start="25:9" pos:end="25:73"><call pos:start="25:9" pos:end="25:73"><name pos:start="25:9" pos:end="25:13">ERROR</name><argument_list pos:start="25:14" pos:end="25:73">(<argument pos:start="25:15" pos:end="25:68"><expr pos:start="25:15" pos:end="25:68"><literal type="string" pos:start="25:15" pos:end="25:68">"handle_data called for control transfer on ep %02X\n"</literal></expr></argument>, <argument pos:start="25:71" pos:end="25:72"><expr pos:start="25:71" pos:end="25:72"><name pos:start="25:71" pos:end="25:72">ep</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="27:9" pos:end="27:27">return <expr pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:26">USB_RET_NAK</name></expr>;</return>

    <case pos:start="29:5" pos:end="29:32">case <expr pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:31">USB_ENDPOINT_XFER_ISOC</name></expr>:</case>

        <return pos:start="31:9" pos:end="31:52">return <expr pos:start="31:16" pos:end="31:51"><call pos:start="31:16" pos:end="31:51"><name pos:start="31:16" pos:end="31:39">usbredir_handle_iso_data</name><argument_list pos:start="31:40" pos:end="31:51">(<argument pos:start="31:41" pos:end="31:43"><expr pos:start="31:41" pos:end="31:43"><name pos:start="31:41" pos:end="31:43">dev</name></expr></argument>, <argument pos:start="31:46" pos:end="31:46"><expr pos:start="31:46" pos:end="31:46"><name pos:start="31:46" pos:end="31:46">p</name></expr></argument>, <argument pos:start="31:49" pos:end="31:50"><expr pos:start="31:49" pos:end="31:50"><name pos:start="31:49" pos:end="31:50">ep</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="33:5" pos:end="33:32">case <expr pos:start="33:10" pos:end="33:31"><name pos:start="33:10" pos:end="33:31">USB_ENDPOINT_XFER_BULK</name></expr>:</case>

        <return pos:start="35:9" pos:end="35:53">return <expr pos:start="35:16" pos:end="35:52"><call pos:start="35:16" pos:end="35:52"><name pos:start="35:16" pos:end="35:40">usbredir_handle_bulk_data</name><argument_list pos:start="35:41" pos:end="35:52">(<argument pos:start="35:42" pos:end="35:44"><expr pos:start="35:42" pos:end="35:44"><name pos:start="35:42" pos:end="35:44">dev</name></expr></argument>, <argument pos:start="35:47" pos:end="35:47"><expr pos:start="35:47" pos:end="35:47"><name pos:start="35:47" pos:end="35:47">p</name></expr></argument>, <argument pos:start="35:50" pos:end="35:51"><expr pos:start="35:50" pos:end="35:51"><name pos:start="35:50" pos:end="35:51">ep</name></expr></argument>)</argument_list></call></expr>;</return>

    <case pos:start="37:5" pos:end="37:31">case <expr pos:start="37:10" pos:end="37:30"><name pos:start="37:10" pos:end="37:30">USB_ENDPOINT_XFER_INT</name></expr>:</case>

        <return pos:start="39:9" pos:end="39:58">return <expr pos:start="39:16" pos:end="39:57"><call pos:start="39:16" pos:end="39:57"><name pos:start="39:16" pos:end="39:45">usbredir_handle_interrupt_data</name><argument_list pos:start="39:46" pos:end="39:57">(<argument pos:start="39:47" pos:end="39:49"><expr pos:start="39:47" pos:end="39:49"><name pos:start="39:47" pos:end="39:49">dev</name></expr></argument>, <argument pos:start="39:52" pos:end="39:52"><expr pos:start="39:52" pos:end="39:52"><name pos:start="39:52" pos:end="39:52">p</name></expr></argument>, <argument pos:start="39:55" pos:end="39:56"><expr pos:start="39:55" pos:end="39:56"><name pos:start="39:55" pos:end="39:56">ep</name></expr></argument>)</argument_list></call></expr>;</return>

    <default pos:start="41:5" pos:end="41:12">default:</default>

        <expr_stmt pos:start="43:9" pos:end="45:44"><expr pos:start="43:9" pos:end="45:43"><call pos:start="43:9" pos:end="45:43"><name pos:start="43:9" pos:end="43:13">ERROR</name><argument_list pos:start="43:14" pos:end="45:43">(<argument pos:start="43:15" pos:end="43:57"><expr pos:start="43:15" pos:end="43:57"><literal type="string" pos:start="43:15" pos:end="43:57">"handle_data ep %02X has unknown type %d\n"</literal></expr></argument>, <argument pos:start="43:60" pos:end="43:61"><expr pos:start="43:60" pos:end="43:61"><name pos:start="43:60" pos:end="43:61">ep</name></expr></argument>,

              <argument pos:start="45:15" pos:end="45:42"><expr pos:start="45:15" pos:end="45:42"><name pos:start="45:15" pos:end="45:37"><name pos:start="45:15" pos:end="45:17">dev</name><operator pos:start="45:18" pos:end="45:19">-&gt;</operator><name pos:start="45:20" pos:end="45:27">endpoint</name><index pos:start="45:28" pos:end="45:37">[<expr pos:start="45:29" pos:end="45:36"><call pos:start="45:29" pos:end="45:36"><name pos:start="45:29" pos:end="45:32">EP2I</name><argument_list pos:start="45:33" pos:end="45:36">(<argument pos:start="45:34" pos:end="45:35"><expr pos:start="45:34" pos:end="45:35"><name pos:start="45:34" pos:end="45:35">ep</name></expr></argument>)</argument_list></call></expr>]</index></name><operator pos:start="45:38" pos:end="45:38">.</operator><name pos:start="45:39" pos:end="45:42">type</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="47:9" pos:end="47:27">return <expr pos:start="47:16" pos:end="47:26"><name pos:start="47:16" pos:end="47:26">USB_RET_NAK</name></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
