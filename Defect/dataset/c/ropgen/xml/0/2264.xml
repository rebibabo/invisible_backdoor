<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2264.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:36">t_gen_mov_preg_TN</name><parameter_list pos:start="1:37" pos:end="1:70">(<parameter pos:start="1:38" pos:end="1:53"><decl pos:start="1:38" pos:end="1:53"><type pos:start="1:38" pos:end="1:53"><name pos:start="1:38" pos:end="1:49">DisasContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">dc</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:60"><decl pos:start="1:56" pos:end="1:60"><type pos:start="1:56" pos:end="1:60"><name pos:start="1:56" pos:end="1:58">int</name></type> <name pos:start="1:60" pos:end="1:60">r</name></decl></parameter>, <parameter pos:start="1:63" pos:end="1:69"><decl pos:start="1:63" pos:end="1:69"><type pos:start="1:63" pos:end="1:69"><name pos:start="1:63" pos:end="1:66">TCGv</name></type> <name pos:start="1:68" pos:end="1:69">tn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:9" pos:end="33:9">

	<if_stmt pos:start="5:9" pos:end="7:66"><if pos:start="5:9" pos:end="7:66">if <condition pos:start="5:12" pos:end="5:28">(<expr pos:start="5:13" pos:end="5:27"><name pos:start="5:13" pos:end="5:24"><name pos:start="5:13" pos:end="5:13">r</name> <argument_list type="generic" pos:start="5:15" pos:end="5:24">&lt; <argument pos:start="5:17" pos:end="5:22"><expr pos:start="5:17" pos:end="5:22"><literal type="number" pos:start="5:17" pos:end="5:17">0</literal> <operator pos:start="5:19" pos:end="5:20">||</operator> <name pos:start="5:22" pos:end="5:22">r</name></expr></argument> &gt;</argument_list></name> <literal type="number" pos:start="5:26" pos:end="5:27">15</literal></expr>)</condition><block type="pseudo" pos:start="7:17" pos:end="7:66"><block_content pos:start="7:17" pos:end="7:66">

		<expr_stmt pos:start="7:17" pos:end="7:66"><expr pos:start="7:17" pos:end="7:65"><call pos:start="7:17" pos:end="7:65"><name pos:start="7:17" pos:end="7:23">fprintf</name><argument_list pos:start="7:24" pos:end="7:65">(<argument pos:start="7:25" pos:end="7:30"><expr pos:start="7:25" pos:end="7:30"><name pos:start="7:25" pos:end="7:30">stderr</name></expr></argument>, <argument pos:start="7:33" pos:end="7:61"><expr pos:start="7:33" pos:end="7:61"><literal type="string" pos:start="7:33" pos:end="7:61">"wrong register write $p%d\n"</literal></expr></argument>, <argument pos:start="7:64" pos:end="7:64"><expr pos:start="7:64" pos:end="7:64"><name pos:start="7:64" pos:end="7:64">r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

	<if_stmt pos:start="9:9" pos:end="33:9"><if pos:start="9:9" pos:end="11:23">if <condition pos:start="9:12" pos:end="9:51">(<expr pos:start="9:13" pos:end="9:50"><name pos:start="9:13" pos:end="9:13">r</name> <operator pos:start="9:15" pos:end="9:16">==</operator> <name pos:start="9:18" pos:end="9:22">PR_BZ</name> <operator pos:start="9:24" pos:end="9:25">||</operator> <name pos:start="9:27" pos:end="9:27">r</name> <operator pos:start="9:29" pos:end="9:30">==</operator> <name pos:start="9:32" pos:end="9:36">PR_WZ</name> <operator pos:start="9:38" pos:end="9:39">||</operator> <name pos:start="9:41" pos:end="9:41">r</name> <operator pos:start="9:43" pos:end="9:44">==</operator> <name pos:start="9:46" pos:end="9:50">PR_DZ</name></expr>)</condition><block type="pseudo" pos:start="11:17" pos:end="11:23"><block_content pos:start="11:17" pos:end="11:23">

		<return pos:start="11:17" pos:end="11:23">return;</return></block_content></block></if>

	<if type="elseif" pos:start="13:9" pos:end="15:50">else if <condition pos:start="13:17" pos:end="13:29">(<expr pos:start="13:18" pos:end="13:28"><name pos:start="13:18" pos:end="13:18">r</name> <operator pos:start="13:20" pos:end="13:21">==</operator> <name pos:start="13:23" pos:end="13:28">PR_SRS</name></expr>)</condition><block type="pseudo" pos:start="15:17" pos:end="15:50"><block_content pos:start="15:17" pos:end="15:50">

		<expr_stmt pos:start="15:17" pos:end="15:50"><expr pos:start="15:17" pos:end="15:49"><call pos:start="15:17" pos:end="15:49"><name pos:start="15:17" pos:end="15:31">tcg_gen_andi_tl</name><argument_list pos:start="15:32" pos:end="15:49">(<argument pos:start="15:33" pos:end="15:41"><expr pos:start="15:33" pos:end="15:41"><name pos:start="15:33" pos:end="15:41"><name pos:start="15:33" pos:end="15:38">cpu_PR</name><index pos:start="15:39" pos:end="15:41">[<expr pos:start="15:40" pos:end="15:40"><name pos:start="15:40" pos:end="15:40">r</name></expr>]</index></name></expr></argument>, <argument pos:start="15:44" pos:end="15:45"><expr pos:start="15:44" pos:end="15:45"><name pos:start="15:44" pos:end="15:45">tn</name></expr></argument>, <argument pos:start="15:48" pos:end="15:48"><expr pos:start="15:48" pos:end="15:48"><literal type="number" pos:start="15:48" pos:end="15:48">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

	<else pos:start="17:9" pos:end="33:9">else <block pos:start="17:14" pos:end="33:9">{<block_content pos:start="19:17" pos:end="31:46">

		<if_stmt pos:start="19:17" pos:end="21:69"><if pos:start="19:17" pos:end="21:69">if <condition pos:start="19:20" pos:end="19:32">(<expr pos:start="19:21" pos:end="19:31"><name pos:start="19:21" pos:end="19:21">r</name> <operator pos:start="19:23" pos:end="19:24">==</operator> <name pos:start="19:26" pos:end="19:31">PR_PID</name></expr>)</condition><block type="pseudo" pos:start="21:25" pos:end="21:69"><block_content pos:start="21:25" pos:end="21:69"> 

			<expr_stmt pos:start="21:25" pos:end="21:69"><expr pos:start="21:25" pos:end="21:68"><call pos:start="21:25" pos:end="21:68"><name pos:start="21:25" pos:end="21:42">tcg_gen_helper_0_1</name><argument_list pos:start="21:43" pos:end="21:68">(<argument pos:start="21:44" pos:end="21:63"><expr pos:start="21:44" pos:end="21:63"><name pos:start="21:44" pos:end="21:63">helper_tlb_flush_pid</name></expr></argument>, <argument pos:start="21:66" pos:end="21:67"><expr pos:start="21:66" pos:end="21:67"><name pos:start="21:66" pos:end="21:67">tn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<if_stmt pos:start="23:17" pos:end="29:49"><if pos:start="23:17" pos:end="25:65">if <condition pos:start="23:20" pos:end="23:57">(<expr pos:start="23:21" pos:end="23:56"><name pos:start="23:21" pos:end="23:32"><name pos:start="23:21" pos:end="23:22">dc</name><operator pos:start="23:23" pos:end="23:24">-&gt;</operator><name pos:start="23:25" pos:end="23:32">tb_flags</name></name> <operator pos:start="23:34" pos:end="23:34">&amp;</operator> <name pos:start="23:36" pos:end="23:41">S_FLAG</name> <operator pos:start="23:43" pos:end="23:44">&amp;&amp;</operator> <name pos:start="23:46" pos:end="23:46">r</name> <operator pos:start="23:48" pos:end="23:49">==</operator> <name pos:start="23:51" pos:end="23:56">PR_SPC</name></expr>)</condition><block type="pseudo" pos:start="25:25" pos:end="25:65"><block_content pos:start="25:25" pos:end="25:65"> 

			<expr_stmt pos:start="25:25" pos:end="25:65"><expr pos:start="25:25" pos:end="25:64"><call pos:start="25:25" pos:end="25:64"><name pos:start="25:25" pos:end="25:42">tcg_gen_helper_0_1</name><argument_list pos:start="25:43" pos:end="25:64">(<argument pos:start="25:44" pos:end="25:59"><expr pos:start="25:44" pos:end="25:59"><name pos:start="25:44" pos:end="25:59">helper_spc_write</name></expr></argument>, <argument pos:start="25:62" pos:end="25:63"><expr pos:start="25:62" pos:end="25:63"><name pos:start="25:62" pos:end="25:63">tn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

		<if type="elseif" pos:start="27:17" pos:end="29:49">else if <condition pos:start="27:25" pos:end="27:37">(<expr pos:start="27:26" pos:end="27:36"><name pos:start="27:26" pos:end="27:26">r</name> <operator pos:start="27:28" pos:end="27:29">==</operator> <name pos:start="27:31" pos:end="27:36">PR_CCS</name></expr>)</condition><block type="pseudo" pos:start="29:25" pos:end="29:49"><block_content pos:start="29:25" pos:end="29:49">

			<expr_stmt pos:start="29:25" pos:end="29:49"><expr pos:start="29:25" pos:end="29:48"><name pos:start="29:25" pos:end="29:44"><name pos:start="29:25" pos:end="29:26">dc</name><operator pos:start="29:27" pos:end="29:28">-&gt;</operator><name pos:start="29:29" pos:end="29:44">cpustate_changed</name></name> <operator pos:start="29:46" pos:end="29:46">=</operator> <literal type="number" pos:start="29:48" pos:end="29:48">1</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

		<expr_stmt pos:start="31:17" pos:end="31:46"><expr pos:start="31:17" pos:end="31:45"><call pos:start="31:17" pos:end="31:45"><name pos:start="31:17" pos:end="31:30">tcg_gen_mov_tl</name><argument_list pos:start="31:31" pos:end="31:45">(<argument pos:start="31:32" pos:end="31:40"><expr pos:start="31:32" pos:end="31:40"><name pos:start="31:32" pos:end="31:40"><name pos:start="31:32" pos:end="31:37">cpu_PR</name><index pos:start="31:38" pos:end="31:40">[<expr pos:start="31:39" pos:end="31:39"><name pos:start="31:39" pos:end="31:39">r</name></expr>]</index></name></expr></argument>, <argument pos:start="31:43" pos:end="31:44"><expr pos:start="31:43" pos:end="31:44"><name pos:start="31:43" pos:end="31:44">tn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
