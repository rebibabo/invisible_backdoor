<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16639.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">tcg_out_tlb_read</name> <parameter_list pos:start="1:30" pos:end="3:67">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:40">TCGContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:51"><decl pos:start="1:46" pos:end="1:51"><type pos:start="1:46" pos:end="1:51"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:51">r0</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:59"><decl pos:start="1:54" pos:end="1:59"><type pos:start="1:54" pos:end="1:59"><name pos:start="1:54" pos:end="1:56">int</name></type> <name pos:start="1:58" pos:end="1:59">r1</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:67"><decl pos:start="1:62" pos:end="1:67"><type pos:start="1:62" pos:end="1:67"><name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:67">r2</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:42"><decl pos:start="3:31" pos:end="3:42"><type pos:start="3:31" pos:end="3:42"><name pos:start="3:31" pos:end="3:33">int</name></type> <name pos:start="3:35" pos:end="3:42">addr_reg</name></decl></parameter>, <parameter pos:start="3:45" pos:end="3:54"><decl pos:start="3:45" pos:end="3:54"><type pos:start="3:45" pos:end="3:54"><name pos:start="3:45" pos:end="3:47">int</name></type> <name pos:start="3:49" pos:end="3:54">s_bits</name></decl></parameter>, <parameter pos:start="3:57" pos:end="3:66"><decl pos:start="3:57" pos:end="3:66"><type pos:start="3:57" pos:end="3:66"><name pos:start="3:57" pos:end="3:59">int</name></type> <name pos:start="3:61" pos:end="3:66">offset</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="91:1">{<block_content pos:start="9:5" pos:end="90:0">

<cpp:ifdef pos:start="7:1" pos:end="7:23">#<cpp:directive pos:start="7:2" pos:end="7:6">ifdef</cpp:directive> <name pos:start="7:8" pos:end="7:23">TARGET_LONG_BITS</name></cpp:ifdef>

    <expr_stmt pos:start="9:5" pos:end="9:55"><expr pos:start="9:5" pos:end="9:54"><call pos:start="9:5" pos:end="9:54"><name pos:start="9:5" pos:end="9:15">tcg_out_rld</name> <argument_list pos:start="9:17" pos:end="9:54">(<argument pos:start="9:18" pos:end="9:18"><expr pos:start="9:18" pos:end="9:18"><name pos:start="9:18" pos:end="9:18">s</name></expr></argument>, <argument pos:start="9:21" pos:end="9:26"><expr pos:start="9:21" pos:end="9:26"><name pos:start="9:21" pos:end="9:26">RLDICL</name></expr></argument>, <argument pos:start="9:29" pos:end="9:36"><expr pos:start="9:29" pos:end="9:36"><name pos:start="9:29" pos:end="9:36">addr_reg</name></expr></argument>, <argument pos:start="9:39" pos:end="9:46"><expr pos:start="9:39" pos:end="9:46"><name pos:start="9:39" pos:end="9:46">addr_reg</name></expr></argument>, <argument pos:start="9:49" pos:end="9:49"><expr pos:start="9:49" pos:end="9:49"><literal type="number" pos:start="9:49" pos:end="9:49">0</literal></expr></argument>, <argument pos:start="9:52" pos:end="9:53"><expr pos:start="9:52" pos:end="9:53"><literal type="number" pos:start="9:52" pos:end="9:53">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="27:10"><expr pos:start="13:5" pos:end="27:9"><call pos:start="13:5" pos:end="27:9"><name pos:start="13:5" pos:end="13:13">tcg_out32</name> <argument_list pos:start="13:15" pos:end="27:9">(<argument pos:start="13:16" pos:end="13:16"><expr pos:start="13:16" pos:end="13:16"><name pos:start="13:16" pos:end="13:16">s</name></expr></argument>, <argument pos:start="13:19" pos:end="25:20"><expr pos:start="13:19" pos:end="25:20"><operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:25">RLWINM</name>

                   <operator pos:start="15:20" pos:end="15:20">|</operator> <call pos:start="15:22" pos:end="15:28"><name pos:start="15:22" pos:end="15:23">RA</name> <argument_list pos:start="15:25" pos:end="15:28">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">r0</name></expr></argument>)</argument_list></call>

                   <operator pos:start="17:20" pos:end="17:20">|</operator> <call pos:start="17:22" pos:end="17:34"><name pos:start="17:22" pos:end="17:23">RS</name> <argument_list pos:start="17:25" pos:end="17:34">(<argument pos:start="17:26" pos:end="17:33"><expr pos:start="17:26" pos:end="17:33"><name pos:start="17:26" pos:end="17:33">addr_reg</name></expr></argument>)</argument_list></call>

                   <operator pos:start="19:20" pos:end="19:20">|</operator> <call pos:start="19:22" pos:end="19:70"><name pos:start="19:22" pos:end="19:23">SH</name> <argument_list pos:start="19:25" pos:end="19:70">(<argument pos:start="19:26" pos:end="19:69"><expr pos:start="19:26" pos:end="19:69"><literal type="number" pos:start="19:26" pos:end="19:29">32</literal> <operator pos:start="19:29" pos:end="19:29">-</operator> <operator pos:start="19:31" pos:end="19:31">(</operator><name pos:start="19:32" pos:end="19:47">TARGET_PAGE_BITS</name> <operator pos:start="19:49" pos:end="19:49">-</operator> <name pos:start="19:51" pos:end="19:68">CPU_TLB_ENTRY_BITS</name><operator pos:start="19:69" pos:end="19:69">)</operator></expr></argument>)</argument_list></call>

                   <operator pos:start="21:20" pos:end="21:20">|</operator> <call pos:start="21:22" pos:end="21:66"><name pos:start="21:22" pos:end="21:23">MB</name> <argument_list pos:start="21:25" pos:end="21:66">(<argument pos:start="21:26" pos:end="21:65"><expr pos:start="21:26" pos:end="21:65"><literal type="number" pos:start="21:26" pos:end="21:29">32</literal> <operator pos:start="21:29" pos:end="21:29">-</operator> <operator pos:start="21:31" pos:end="21:31">(</operator><name pos:start="21:32" pos:end="21:43">CPU_TLB_BITS</name> <operator pos:start="21:45" pos:end="21:45">+</operator> <name pos:start="21:47" pos:end="21:64">CPU_TLB_ENTRY_BITS</name><operator pos:start="21:65" pos:end="21:65">)</operator></expr></argument>)</argument_list></call>

                   <operator pos:start="23:20" pos:end="23:20">|</operator> <call pos:start="23:22" pos:end="23:49"><name pos:start="23:22" pos:end="23:23">ME</name> <argument_list pos:start="23:25" pos:end="23:49">(<argument pos:start="23:26" pos:end="23:48"><expr pos:start="23:26" pos:end="23:48"><literal type="number" pos:start="23:26" pos:end="23:29">31</literal> <operator pos:start="23:29" pos:end="23:29">-</operator> <name pos:start="23:31" pos:end="23:48">CPU_TLB_ENTRY_BITS</name></expr></argument>)</argument_list></call>

                   <operator pos:start="25:20" pos:end="25:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:60"><expr pos:start="29:5" pos:end="29:59"><call pos:start="29:5" pos:end="29:59"><name pos:start="29:5" pos:end="29:13">tcg_out32</name> <argument_list pos:start="29:15" pos:end="29:59">(<argument pos:start="29:16" pos:end="29:16"><expr pos:start="29:16" pos:end="29:16"><name pos:start="29:16" pos:end="29:16">s</name></expr></argument>, <argument pos:start="29:19" pos:end="29:58"><expr pos:start="29:19" pos:end="29:58"><name pos:start="29:19" pos:end="29:21">ADD</name> <operator pos:start="29:23" pos:end="29:23">|</operator> <call pos:start="29:25" pos:end="29:31"><name pos:start="29:25" pos:end="29:26">RT</name> <argument_list pos:start="29:28" pos:end="29:31">(<argument pos:start="29:29" pos:end="29:30"><expr pos:start="29:29" pos:end="29:30"><name pos:start="29:29" pos:end="29:30">r0</name></expr></argument>)</argument_list></call> <operator pos:start="29:33" pos:end="29:33">|</operator> <call pos:start="29:35" pos:end="29:41"><name pos:start="29:35" pos:end="29:36">RA</name> <argument_list pos:start="29:38" pos:end="29:41">(<argument pos:start="29:39" pos:end="29:40"><expr pos:start="29:39" pos:end="29:40"><name pos:start="29:39" pos:end="29:40">r0</name></expr></argument>)</argument_list></call> <operator pos:start="29:43" pos:end="29:43">|</operator> <call pos:start="29:45" pos:end="29:58"><name pos:start="29:45" pos:end="29:46">RB</name> <argument_list pos:start="29:48" pos:end="29:58">(<argument pos:start="29:49" pos:end="29:57"><expr pos:start="29:49" pos:end="29:57"><name pos:start="29:49" pos:end="29:57">TCG_AREG0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:55"><expr pos:start="31:5" pos:end="31:54"><call pos:start="31:5" pos:end="31:54"><name pos:start="31:5" pos:end="31:13">tcg_out32</name> <argument_list pos:start="31:15" pos:end="31:54">(<argument pos:start="31:16" pos:end="31:16"><expr pos:start="31:16" pos:end="31:16"><name pos:start="31:16" pos:end="31:16">s</name></expr></argument>, <argument pos:start="31:19" pos:end="31:53"><expr pos:start="31:19" pos:end="31:53"><operator pos:start="31:19" pos:end="31:19">(</operator><name pos:start="31:20" pos:end="31:23">LWZU</name> <operator pos:start="31:25" pos:end="31:25">|</operator> <call pos:start="31:27" pos:end="31:33"><name pos:start="31:27" pos:end="31:28">RT</name> <argument_list pos:start="31:30" pos:end="31:33">(<argument pos:start="31:31" pos:end="31:32"><expr pos:start="31:31" pos:end="31:32"><name pos:start="31:31" pos:end="31:32">r1</name></expr></argument>)</argument_list></call> <operator pos:start="31:35" pos:end="31:35">|</operator> <call pos:start="31:37" pos:end="31:43"><name pos:start="31:37" pos:end="31:38">RA</name> <argument_list pos:start="31:40" pos:end="31:43">(<argument pos:start="31:41" pos:end="31:42"><expr pos:start="31:41" pos:end="31:42"><name pos:start="31:41" pos:end="31:42">r0</name></expr></argument>)</argument_list></call> <operator pos:start="31:45" pos:end="31:45">|</operator> <name pos:start="31:47" pos:end="31:52">offset</name><operator pos:start="31:53" pos:end="31:53">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="50:0"><expr pos:start="33:5" pos:end="47:9"><call pos:start="33:5" pos:end="47:9"><name pos:start="33:5" pos:end="33:13">tcg_out32</name> <argument_list pos:start="33:15" pos:end="47:9">(<argument pos:start="33:16" pos:end="33:16"><expr pos:start="33:16" pos:end="33:16"><name pos:start="33:16" pos:end="33:16">s</name></expr></argument>, <argument pos:start="33:19" pos:end="45:20"><expr pos:start="33:19" pos:end="45:20"><operator pos:start="33:19" pos:end="33:19">(</operator><name pos:start="33:20" pos:end="33:25">RLWINM</name>

                   <operator pos:start="35:20" pos:end="35:20">|</operator> <call pos:start="35:22" pos:end="35:28"><name pos:start="35:22" pos:end="35:23">RA</name> <argument_list pos:start="35:25" pos:end="35:28">(<argument pos:start="35:26" pos:end="35:27"><expr pos:start="35:26" pos:end="35:27"><name pos:start="35:26" pos:end="35:27">r2</name></expr></argument>)</argument_list></call>

                   <operator pos:start="37:20" pos:end="37:20">|</operator> <call pos:start="37:22" pos:end="37:34"><name pos:start="37:22" pos:end="37:23">RS</name> <argument_list pos:start="37:25" pos:end="37:34">(<argument pos:start="37:26" pos:end="37:33"><expr pos:start="37:26" pos:end="37:33"><name pos:start="37:26" pos:end="37:33">addr_reg</name></expr></argument>)</argument_list></call>

                   <operator pos:start="39:20" pos:end="39:20">|</operator> <call pos:start="39:22" pos:end="39:27"><name pos:start="39:22" pos:end="39:23">SH</name> <argument_list pos:start="39:25" pos:end="39:27">(<argument pos:start="39:26" pos:end="39:26"><expr pos:start="39:26" pos:end="39:26"><literal type="number" pos:start="39:26" pos:end="39:26">0</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="41:20" pos:end="41:20">|</operator> <call pos:start="41:22" pos:end="41:44"><name pos:start="41:22" pos:end="41:23">MB</name> <argument_list pos:start="41:25" pos:end="41:44">(<argument pos:start="41:26" pos:end="41:43"><expr pos:start="41:26" pos:end="41:43"><operator pos:start="41:26" pos:end="41:26">(</operator><literal type="number" pos:start="41:27" pos:end="41:30">32</literal> <operator pos:start="41:30" pos:end="41:30">-</operator> <name pos:start="41:32" pos:end="41:37">s_bits</name><operator pos:start="41:38" pos:end="41:38">)</operator> <operator pos:start="41:40" pos:end="41:40">&amp;</operator> <literal type="number" pos:start="41:42" pos:end="41:43">31</literal></expr></argument>)</argument_list></call>

                   <operator pos:start="43:20" pos:end="43:20">|</operator> <call pos:start="43:22" pos:end="43:47"><name pos:start="43:22" pos:end="43:23">ME</name> <argument_list pos:start="43:25" pos:end="43:47">(<argument pos:start="43:26" pos:end="43:46"><expr pos:start="43:26" pos:end="43:46"><literal type="number" pos:start="43:26" pos:end="43:29">31</literal> <operator pos:start="43:29" pos:end="43:29">-</operator> <name pos:start="43:31" pos:end="43:46">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call>

                   <operator pos:start="45:20" pos:end="45:20">)</operator></expr></argument>

        )</argument_list></call></expr>;</expr_stmt>

<cpp:else pos:start="49:1" pos:end="49:5">#<cpp:directive pos:start="49:2" pos:end="49:5">else</cpp:directive></cpp:else>

    <expr_stmt pos:start="51:5" pos:end="55:36"><expr pos:start="51:5" pos:end="55:35"><call pos:start="51:5" pos:end="55:35"><name pos:start="51:5" pos:end="51:15">tcg_out_rld</name> <argument_list pos:start="51:17" pos:end="55:35">(<argument pos:start="51:18" pos:end="51:18"><expr pos:start="51:18" pos:end="51:18"><name pos:start="51:18" pos:end="51:18">s</name></expr></argument>, <argument pos:start="51:21" pos:end="51:26"><expr pos:start="51:21" pos:end="51:26"><name pos:start="51:21" pos:end="51:26">RLDICL</name></expr></argument>, <argument pos:start="51:29" pos:end="51:30"><expr pos:start="51:29" pos:end="51:30"><name pos:start="51:29" pos:end="51:30">r0</name></expr></argument>, <argument pos:start="51:33" pos:end="51:40"><expr pos:start="51:33" pos:end="51:40"><name pos:start="51:33" pos:end="51:40">addr_reg</name></expr></argument>,

                 <argument pos:start="53:18" pos:end="53:38"><expr pos:start="53:18" pos:end="53:38"><literal type="number" pos:start="53:18" pos:end="53:21">64</literal> <operator pos:start="53:21" pos:end="53:21">-</operator> <name pos:start="53:23" pos:end="53:38">TARGET_PAGE_BITS</name></expr></argument>,

                 <argument pos:start="55:18" pos:end="55:34"><expr pos:start="55:18" pos:end="55:34"><literal type="number" pos:start="55:18" pos:end="55:21">64</literal> <operator pos:start="55:21" pos:end="55:21">-</operator> <name pos:start="55:23" pos:end="55:34">CPU_TLB_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="61:42"><expr pos:start="57:5" pos:end="61:41"><call pos:start="57:5" pos:end="61:41"><name pos:start="57:5" pos:end="57:15">tcg_out_rld</name> <argument_list pos:start="57:17" pos:end="61:41">(<argument pos:start="57:18" pos:end="57:18"><expr pos:start="57:18" pos:end="57:18"><name pos:start="57:18" pos:end="57:18">s</name></expr></argument>, <argument pos:start="57:21" pos:end="57:26"><expr pos:start="57:21" pos:end="57:26"><name pos:start="57:21" pos:end="57:26">RLDICR</name></expr></argument>, <argument pos:start="57:29" pos:end="57:30"><expr pos:start="57:29" pos:end="57:30"><name pos:start="57:29" pos:end="57:30">r0</name></expr></argument>, <argument pos:start="57:33" pos:end="57:34"><expr pos:start="57:33" pos:end="57:34"><name pos:start="57:33" pos:end="57:34">r0</name></expr></argument>,

                 <argument pos:start="59:18" pos:end="59:35"><expr pos:start="59:18" pos:end="59:35"><name pos:start="59:18" pos:end="59:35">CPU_TLB_ENTRY_BITS</name></expr></argument>,

                 <argument pos:start="61:18" pos:end="61:40"><expr pos:start="61:18" pos:end="61:40"><literal type="number" pos:start="61:18" pos:end="61:21">63</literal> <operator pos:start="61:21" pos:end="61:21">-</operator> <name pos:start="61:23" pos:end="61:40">CPU_TLB_ENTRY_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:49"><expr pos:start="65:5" pos:end="65:48"><call pos:start="65:5" pos:end="65:48"><name pos:start="65:5" pos:end="65:13">tcg_out32</name> <argument_list pos:start="65:15" pos:end="65:48">(<argument pos:start="65:16" pos:end="65:16"><expr pos:start="65:16" pos:end="65:16"><name pos:start="65:16" pos:end="65:16">s</name></expr></argument>, <argument pos:start="65:19" pos:end="65:47"><expr pos:start="65:19" pos:end="65:47"><name pos:start="65:19" pos:end="65:21">ADD</name> <operator pos:start="65:23" pos:end="65:23">|</operator> <call pos:start="65:25" pos:end="65:47"><name pos:start="65:25" pos:end="65:27">TAB</name> <argument_list pos:start="65:29" pos:end="65:47">(<argument pos:start="65:30" pos:end="65:31"><expr pos:start="65:30" pos:end="65:31"><name pos:start="65:30" pos:end="65:31">r0</name></expr></argument>, <argument pos:start="65:34" pos:end="65:35"><expr pos:start="65:34" pos:end="65:35"><name pos:start="65:34" pos:end="65:35">r0</name></expr></argument>, <argument pos:start="65:38" pos:end="65:46"><expr pos:start="65:38" pos:end="65:46"><name pos:start="65:38" pos:end="65:46">TCG_AREG0</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:56"><expr pos:start="67:5" pos:end="67:55"><call pos:start="67:5" pos:end="67:55"><name pos:start="67:5" pos:end="67:13">tcg_out32</name> <argument_list pos:start="67:15" pos:end="67:55">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">s</name></expr></argument>, <argument pos:start="67:19" pos:end="67:54"><expr pos:start="67:19" pos:end="67:54"><name pos:start="67:19" pos:end="67:25">LD_ADDR</name> <operator pos:start="67:27" pos:end="67:27">|</operator> <call pos:start="67:29" pos:end="67:35"><name pos:start="67:29" pos:end="67:30">RT</name> <argument_list pos:start="67:32" pos:end="67:35">(<argument pos:start="67:33" pos:end="67:34"><expr pos:start="67:33" pos:end="67:34"><name pos:start="67:33" pos:end="67:34">r1</name></expr></argument>)</argument_list></call> <operator pos:start="67:37" pos:end="67:37">|</operator> <call pos:start="67:39" pos:end="67:45"><name pos:start="67:39" pos:end="67:40">RA</name> <argument_list pos:start="67:42" pos:end="67:45">(<argument pos:start="67:43" pos:end="67:44"><expr pos:start="67:43" pos:end="67:44"><name pos:start="67:43" pos:end="67:44">r0</name></expr></argument>)</argument_list></call> <operator pos:start="67:47" pos:end="67:47">|</operator> <name pos:start="67:49" pos:end="67:54">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="71:5" pos:end="90:0"><if pos:start="71:5" pos:end="75:5">if <condition pos:start="71:8" pos:end="71:16">(<expr pos:start="71:9" pos:end="71:15"><operator pos:start="71:9" pos:end="71:9">!</operator><name pos:start="71:10" pos:end="71:15">s_bits</name></expr>)</condition> <block pos:start="71:18" pos:end="75:5">{<block_content pos:start="73:9" pos:end="73:72">

        <expr_stmt pos:start="73:9" pos:end="73:72"><expr pos:start="73:9" pos:end="73:71"><call pos:start="73:9" pos:end="73:71"><name pos:start="73:9" pos:end="73:19">tcg_out_rld</name> <argument_list pos:start="73:21" pos:end="73:71">(<argument pos:start="73:22" pos:end="73:22"><expr pos:start="73:22" pos:end="73:22"><name pos:start="73:22" pos:end="73:22">s</name></expr></argument>, <argument pos:start="73:25" pos:end="73:30"><expr pos:start="73:25" pos:end="73:30"><name pos:start="73:25" pos:end="73:30">RLDICR</name></expr></argument>, <argument pos:start="73:33" pos:end="73:34"><expr pos:start="73:33" pos:end="73:34"><name pos:start="73:33" pos:end="73:34">r2</name></expr></argument>, <argument pos:start="73:37" pos:end="73:44"><expr pos:start="73:37" pos:end="73:44"><name pos:start="73:37" pos:end="73:44">addr_reg</name></expr></argument>, <argument pos:start="73:47" pos:end="73:47"><expr pos:start="73:47" pos:end="73:47"><literal type="number" pos:start="73:47" pos:end="73:47">0</literal></expr></argument>, <argument pos:start="73:50" pos:end="73:70"><expr pos:start="73:50" pos:end="73:70"><literal type="number" pos:start="73:50" pos:end="73:53">63</literal> <operator pos:start="73:53" pos:end="73:53">-</operator> <name pos:start="73:55" pos:end="73:70">TARGET_PAGE_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if>

    <else pos:start="77:5" pos:end="90:0">else <block pos:start="77:10" pos:end="90:0">{<block_content pos:start="79:9" pos:end="85:61">

        <expr_stmt pos:start="79:9" pos:end="83:48"><expr pos:start="79:9" pos:end="83:47"><call pos:start="79:9" pos:end="83:47"><name pos:start="79:9" pos:end="79:19">tcg_out_rld</name> <argument_list pos:start="79:21" pos:end="83:47">(<argument pos:start="79:22" pos:end="79:22"><expr pos:start="79:22" pos:end="79:22"><name pos:start="79:22" pos:end="79:22">s</name></expr></argument>, <argument pos:start="79:25" pos:end="79:30"><expr pos:start="79:25" pos:end="79:30"><name pos:start="79:25" pos:end="79:30">RLDICL</name></expr></argument>, <argument pos:start="79:33" pos:end="79:34"><expr pos:start="79:33" pos:end="79:34"><name pos:start="79:33" pos:end="79:34">r2</name></expr></argument>, <argument pos:start="79:37" pos:end="79:44"><expr pos:start="79:37" pos:end="79:44"><name pos:start="79:37" pos:end="79:44">addr_reg</name></expr></argument>,

                     <argument pos:start="81:22" pos:end="81:42"><expr pos:start="81:22" pos:end="81:42"><literal type="number" pos:start="81:22" pos:end="81:25">64</literal> <operator pos:start="81:25" pos:end="81:25">-</operator> <name pos:start="81:27" pos:end="81:42">TARGET_PAGE_BITS</name></expr></argument>,

                     <argument pos:start="83:22" pos:end="83:46"><expr pos:start="83:22" pos:end="83:46"><name pos:start="83:22" pos:end="83:37">TARGET_PAGE_BITS</name> <operator pos:start="83:39" pos:end="83:39">-</operator> <name pos:start="83:41" pos:end="83:46">s_bits</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="85:9" pos:end="85:61"><expr pos:start="85:9" pos:end="85:60"><call pos:start="85:9" pos:end="85:60"><name pos:start="85:9" pos:end="85:19">tcg_out_rld</name> <argument_list pos:start="85:21" pos:end="85:60">(<argument pos:start="85:22" pos:end="85:22"><expr pos:start="85:22" pos:end="85:22"><name pos:start="85:22" pos:end="85:22">s</name></expr></argument>, <argument pos:start="85:25" pos:end="85:30"><expr pos:start="85:25" pos:end="85:30"><name pos:start="85:25" pos:end="85:30">RLDICL</name></expr></argument>, <argument pos:start="85:33" pos:end="85:34"><expr pos:start="85:33" pos:end="85:34"><name pos:start="85:33" pos:end="85:34">r2</name></expr></argument>, <argument pos:start="85:37" pos:end="85:38"><expr pos:start="85:37" pos:end="85:38"><name pos:start="85:37" pos:end="85:38">r2</name></expr></argument>, <argument pos:start="85:41" pos:end="85:56"><expr pos:start="85:41" pos:end="85:56"><name pos:start="85:41" pos:end="85:56">TARGET_PAGE_BITS</name></expr></argument>, <argument pos:start="85:59" pos:end="85:59"><expr pos:start="85:59" pos:end="85:59"><literal type="number" pos:start="85:59" pos:end="85:59">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

<cpp:endif pos:start="89:1" pos:end="89:6">#<cpp:directive pos:start="89:2" pos:end="89:6">endif</cpp:directive></cpp:endif>

</block_content>}</block></function>
</unit>
