<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21457.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <specifier pos:start="1:8" pos:end="1:13">inline</specifier> <name pos:start="1:15" pos:end="1:18">void</name></type> <name pos:start="1:20" pos:end="1:31">gen_evmwumia</name><parameter_list pos:start="1:32" pos:end="1:50">(<parameter pos:start="1:33" pos:end="1:49"><decl pos:start="1:33" pos:end="1:49"><type pos:start="1:33" pos:end="1:46"><name pos:start="1:33" pos:end="1:44">DisasContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:49">ctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:27">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">TCGv_i64</name></type> <name pos:start="5:14" pos:end="5:16">tmp</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="15:5"><if pos:start="9:5" pos:end="15:5">if <condition pos:start="9:8" pos:end="9:36">(<expr pos:start="9:9" pos:end="9:35"><call pos:start="9:9" pos:end="9:35"><name pos:start="9:9" pos:end="9:16">unlikely</name><argument_list pos:start="9:17" pos:end="9:35">(<argument pos:start="9:18" pos:end="9:34"><expr pos:start="9:18" pos:end="9:34"><operator pos:start="9:18" pos:end="9:18">!</operator><name pos:start="9:19" pos:end="9:34"><name pos:start="9:19" pos:end="9:21">ctx</name><operator pos:start="9:22" pos:end="9:23">-&gt;</operator><name pos:start="9:24" pos:end="9:34">spe_enabled</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:38" pos:end="15:5">{<block_content pos:start="11:9" pos:end="13:15">

        <expr_stmt pos:start="11:9" pos:end="11:45"><expr pos:start="11:9" pos:end="11:44"><call pos:start="11:9" pos:end="11:44"><name pos:start="11:9" pos:end="11:21">gen_exception</name><argument_list pos:start="11:22" pos:end="11:44">(<argument pos:start="11:23" pos:end="11:25"><expr pos:start="11:23" pos:end="11:25"><name pos:start="11:23" pos:end="11:25">ctx</name></expr></argument>, <argument pos:start="11:28" pos:end="11:43"><expr pos:start="11:28" pos:end="11:43"><name pos:start="11:28" pos:end="11:43">POWERPC_EXCP_APU</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="13:9" pos:end="13:15">return;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:21"><expr pos:start="19:5" pos:end="19:20"><call pos:start="19:5" pos:end="19:20"><name pos:start="19:5" pos:end="19:15">gen_evmwumi</name><argument_list pos:start="19:16" pos:end="19:20">(<argument pos:start="19:17" pos:end="19:19"><expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">ctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>            <comment type="block" pos:start="19:34" pos:end="19:52">/* rD := rA * rB */</comment>



    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:7">tmp</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:28"><name pos:start="23:11" pos:end="23:26">tcg_temp_new_i64</name><argument_list pos:start="23:27" pos:end="23:28">()</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="27:5" pos:end="27:19">/* acc := rD */</comment>

    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><call pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:18">gen_load_gpr64</name><argument_list pos:start="29:19" pos:end="29:40">(<argument pos:start="29:20" pos:end="29:22"><expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">tmp</name></expr></argument>, <argument pos:start="29:25" pos:end="29:39"><expr pos:start="29:25" pos:end="29:39"><call pos:start="29:25" pos:end="29:39"><name pos:start="29:25" pos:end="29:26">rD</name><argument_list pos:start="29:27" pos:end="29:39">(<argument pos:start="29:28" pos:end="29:38"><expr pos:start="29:28" pos:end="29:38"><name pos:start="29:28" pos:end="29:38"><name pos:start="29:28" pos:end="29:30">ctx</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:38">opcode</name></name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:62"><expr pos:start="31:5" pos:end="31:61"><call pos:start="31:5" pos:end="31:61"><name pos:start="31:5" pos:end="31:18">tcg_gen_st_i64</name><argument_list pos:start="31:19" pos:end="31:61">(<argument pos:start="31:20" pos:end="31:22"><expr pos:start="31:20" pos:end="31:22"><name pos:start="31:20" pos:end="31:22">tmp</name></expr></argument>, <argument pos:start="31:25" pos:end="31:31"><expr pos:start="31:25" pos:end="31:31"><name pos:start="31:25" pos:end="31:31">cpu_env</name></expr></argument>, <argument pos:start="31:34" pos:end="31:60"><expr pos:start="31:34" pos:end="31:60"><call pos:start="31:34" pos:end="31:60"><name pos:start="31:34" pos:end="31:41">offsetof</name><argument_list pos:start="31:42" pos:end="31:60">(<argument pos:start="31:43" pos:end="31:50"><expr pos:start="31:43" pos:end="31:50"><name pos:start="31:43" pos:end="31:50">CPUState</name></expr></argument>, <argument pos:start="31:53" pos:end="31:59"><expr pos:start="31:53" pos:end="31:59"><name pos:start="31:53" pos:end="31:59">spe_acc</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:27"><expr pos:start="33:5" pos:end="33:26"><call pos:start="33:5" pos:end="33:26"><name pos:start="33:5" pos:end="33:21">tcg_temp_free_i64</name><argument_list pos:start="33:22" pos:end="33:26">(<argument pos:start="33:23" pos:end="33:25"><expr pos:start="33:23" pos:end="33:25"><name pos:start="33:23" pos:end="33:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
