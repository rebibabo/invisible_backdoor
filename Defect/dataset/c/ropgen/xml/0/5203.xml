<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5203.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">mv88w8618_pit_write</name><parameter_list pos:start="1:32" pos:end="3:62">(<parameter pos:start="1:33" pos:end="1:44"><decl pos:start="1:33" pos:end="1:44"><type pos:start="1:33" pos:end="1:44"><name pos:start="1:33" pos:end="1:36">void</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:44">opaque</name></decl></parameter>, <parameter pos:start="1:47" pos:end="1:71"><decl pos:start="1:47" pos:end="1:71"><type pos:start="1:47" pos:end="1:71"><name pos:start="1:47" pos:end="1:64">target_phys_addr_t</name></type> <name pos:start="1:66" pos:end="1:71">offset</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:46"><decl pos:start="3:33" pos:end="3:46"><type pos:start="3:33" pos:end="3:46"><name pos:start="3:33" pos:end="3:40">uint64_t</name></type> <name pos:start="3:42" pos:end="3:46">value</name></decl></parameter>, <parameter pos:start="3:49" pos:end="3:61"><decl pos:start="3:49" pos:end="3:61"><type pos:start="3:49" pos:end="3:61"><name pos:start="3:49" pos:end="3:56">unsigned</name></type> <name pos:start="3:58" pos:end="3:61">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="77:1">{<block_content pos:start="7:5" pos:end="75:5">

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">mv88w8618_pit_state</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">s</name> <init pos:start="7:28" pos:end="7:35">= <expr pos:start="7:30" pos:end="7:35"><name pos:start="7:30" pos:end="7:35">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:29"><decl pos:start="9:5" pos:end="9:28"><type pos:start="9:5" pos:end="9:27"><name pos:start="9:5" pos:end="9:25">mv88w8618_timer_state</name> <modifier pos:start="9:27" pos:end="9:27">*</modifier></type><name pos:start="9:28" pos:end="9:28">t</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>



    <switch pos:start="15:5" pos:end="75:5">switch <condition pos:start="15:12" pos:end="15:19">(<expr pos:start="15:13" pos:end="15:18"><name pos:start="15:13" pos:end="15:18">offset</name></expr>)</condition> <block pos:start="15:21" pos:end="75:5">{<block_content pos:start="17:5" pos:end="73:14">

    <case pos:start="17:5" pos:end="17:55">case <expr pos:start="17:10" pos:end="17:54"><name pos:start="17:10" pos:end="17:29">MP_PIT_TIMER1_LENGTH</name> <operator pos:start="17:31" pos:end="17:33">...</operator> <name pos:start="17:35" pos:end="17:54">MP_PIT_TIMER4_LENGTH</name></expr>:</case>

        <expr_stmt pos:start="19:9" pos:end="19:35"><expr pos:start="19:9" pos:end="19:34"><name pos:start="19:9" pos:end="19:9">t</name> <operator pos:start="19:11" pos:end="19:11">=</operator> <operator pos:start="19:13" pos:end="19:13">&amp;</operator><name pos:start="19:14" pos:end="19:34"><name pos:start="19:14" pos:end="19:14">s</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:21">timer</name><index pos:start="19:22" pos:end="19:34">[<expr pos:start="19:23" pos:end="19:33"><name pos:start="19:23" pos:end="19:28">offset</name> <operator pos:start="19:30" pos:end="19:31">&gt;&gt;</operator> <literal type="number" pos:start="19:33" pos:end="19:33">2</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:25"><expr pos:start="21:9" pos:end="21:24"><name pos:start="21:9" pos:end="21:16"><name pos:start="21:9" pos:end="21:9">t</name><operator pos:start="21:10" pos:end="21:11">-&gt;</operator><name pos:start="21:12" pos:end="21:16">limit</name></name> <operator pos:start="21:18" pos:end="21:18">=</operator> <name pos:start="21:20" pos:end="21:24">value</name></expr>;</expr_stmt>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="27:9">if <condition pos:start="23:12" pos:end="23:25">(<expr pos:start="23:13" pos:end="23:24"><name pos:start="23:13" pos:end="23:20"><name pos:start="23:13" pos:end="23:13">t</name><operator pos:start="23:14" pos:end="23:15">-&gt;</operator><name pos:start="23:16" pos:end="23:20">limit</name></name> <operator pos:start="23:22" pos:end="23:22">&gt;</operator> <literal type="number" pos:start="23:24" pos:end="23:24">0</literal></expr>)</condition> <block pos:start="23:27" pos:end="27:9">{<block_content pos:start="25:13" pos:end="25:53">

            <expr_stmt pos:start="25:13" pos:end="25:53"><expr pos:start="25:13" pos:end="25:52"><call pos:start="25:13" pos:end="25:52"><name pos:start="25:13" pos:end="25:28">ptimer_set_limit</name><argument_list pos:start="25:29" pos:end="25:52">(<argument pos:start="25:30" pos:end="25:38"><expr pos:start="25:30" pos:end="25:38"><name pos:start="25:30" pos:end="25:38"><name pos:start="25:30" pos:end="25:30">t</name><operator pos:start="25:31" pos:end="25:32">-&gt;</operator><name pos:start="25:33" pos:end="25:38">ptimer</name></name></expr></argument>, <argument pos:start="25:41" pos:end="25:48"><expr pos:start="25:41" pos:end="25:48"><name pos:start="25:41" pos:end="25:48"><name pos:start="25:41" pos:end="25:41">t</name><operator pos:start="25:42" pos:end="25:43">-&gt;</operator><name pos:start="25:44" pos:end="25:48">limit</name></name></expr></argument>, <argument pos:start="25:51" pos:end="25:51"><expr pos:start="25:51" pos:end="25:51"><literal type="number" pos:start="25:51" pos:end="25:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="27:11" pos:end="31:9">else <block pos:start="27:16" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:35">

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><call pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:23">ptimer_stop</name><argument_list pos:start="29:24" pos:end="29:34">(<argument pos:start="29:25" pos:end="29:33"><expr pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:33"><name pos:start="29:25" pos:end="29:25">t</name><operator pos:start="29:26" pos:end="29:27">-&gt;</operator><name pos:start="29:28" pos:end="29:33">ptimer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="33:9" pos:end="33:14">break;</break>



    <case pos:start="37:5" pos:end="37:24">case <expr pos:start="37:10" pos:end="37:23"><name pos:start="37:10" pos:end="37:23">MP_PIT_CONTROL</name></expr>:</case>

        <for pos:start="39:9" pos:end="59:9">for <control pos:start="39:13" pos:end="39:31">(<init pos:start="39:14" pos:end="39:19"><expr pos:start="39:14" pos:end="39:18"><name pos:start="39:14" pos:end="39:14">i</name> <operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</init> <condition pos:start="39:21" pos:end="39:26"><expr pos:start="39:21" pos:end="39:25"><name pos:start="39:21" pos:end="39:21">i</name> <operator pos:start="39:23" pos:end="39:23">&lt;</operator> <literal type="number" pos:start="39:25" pos:end="39:25">4</literal></expr>;</condition> <incr pos:start="39:28" pos:end="39:30"><expr pos:start="39:28" pos:end="39:30"><name pos:start="39:28" pos:end="39:28">i</name><operator pos:start="39:29" pos:end="39:30">++</operator></expr></incr>)</control> <block pos:start="39:33" pos:end="59:9">{<block_content pos:start="41:13" pos:end="57:24">

            <expr_stmt pos:start="41:13" pos:end="41:29"><expr pos:start="41:13" pos:end="41:28"><name pos:start="41:13" pos:end="41:13">t</name> <operator pos:start="41:15" pos:end="41:15">=</operator> <operator pos:start="41:17" pos:end="41:17">&amp;</operator><name pos:start="41:18" pos:end="41:28"><name pos:start="41:18" pos:end="41:18">s</name><operator pos:start="41:19" pos:end="41:20">-&gt;</operator><name pos:start="41:21" pos:end="41:25">timer</name><index pos:start="41:26" pos:end="41:28">[<expr pos:start="41:27" pos:end="41:27"><name pos:start="41:27" pos:end="41:27">i</name></expr>]</index></name></expr>;</expr_stmt>

            <if_stmt pos:start="43:13" pos:end="55:13"><if pos:start="43:13" pos:end="51:13">if <condition pos:start="43:16" pos:end="43:44">(<expr pos:start="43:17" pos:end="43:43"><name pos:start="43:17" pos:end="43:21">value</name> <operator pos:start="43:23" pos:end="43:23">&amp;</operator> <literal type="number" pos:start="43:25" pos:end="43:27">0xf</literal> <operator pos:start="43:29" pos:end="43:30">&amp;&amp;</operator> <name pos:start="43:32" pos:end="43:39"><name pos:start="43:32" pos:end="43:32">t</name><operator pos:start="43:33" pos:end="43:34">-&gt;</operator><name pos:start="43:35" pos:end="43:39">limit</name></name> <operator pos:start="43:41" pos:end="43:41">&gt;</operator> <literal type="number" pos:start="43:43" pos:end="43:43">0</literal></expr>)</condition> <block pos:start="43:46" pos:end="51:13">{<block_content pos:start="45:17" pos:end="49:41">

                <expr_stmt pos:start="45:17" pos:end="45:57"><expr pos:start="45:17" pos:end="45:56"><call pos:start="45:17" pos:end="45:56"><name pos:start="45:17" pos:end="45:32">ptimer_set_limit</name><argument_list pos:start="45:33" pos:end="45:56">(<argument pos:start="45:34" pos:end="45:42"><expr pos:start="45:34" pos:end="45:42"><name pos:start="45:34" pos:end="45:42"><name pos:start="45:34" pos:end="45:34">t</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:42">ptimer</name></name></expr></argument>, <argument pos:start="45:45" pos:end="45:52"><expr pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:52"><name pos:start="45:45" pos:end="45:45">t</name><operator pos:start="45:46" pos:end="45:47">-&gt;</operator><name pos:start="45:48" pos:end="45:52">limit</name></name></expr></argument>, <argument pos:start="45:55" pos:end="45:55"><expr pos:start="45:55" pos:end="45:55"><literal type="number" pos:start="45:55" pos:end="45:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="47:17" pos:end="47:52"><expr pos:start="47:17" pos:end="47:51"><call pos:start="47:17" pos:end="47:51"><name pos:start="47:17" pos:end="47:31">ptimer_set_freq</name><argument_list pos:start="47:32" pos:end="47:51">(<argument pos:start="47:33" pos:end="47:41"><expr pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:41"><name pos:start="47:33" pos:end="47:33">t</name><operator pos:start="47:34" pos:end="47:35">-&gt;</operator><name pos:start="47:36" pos:end="47:41">ptimer</name></name></expr></argument>, <argument pos:start="47:44" pos:end="47:50"><expr pos:start="47:44" pos:end="47:50"><name pos:start="47:44" pos:end="47:50"><name pos:start="47:44" pos:end="47:44">t</name><operator pos:start="47:45" pos:end="47:46">-&gt;</operator><name pos:start="47:47" pos:end="47:50">freq</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="49:17" pos:end="49:41"><expr pos:start="49:17" pos:end="49:40"><call pos:start="49:17" pos:end="49:40"><name pos:start="49:17" pos:end="49:26">ptimer_run</name><argument_list pos:start="49:27" pos:end="49:40">(<argument pos:start="49:28" pos:end="49:36"><expr pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:36"><name pos:start="49:28" pos:end="49:28">t</name><operator pos:start="49:29" pos:end="49:30">-&gt;</operator><name pos:start="49:31" pos:end="49:36">ptimer</name></name></expr></argument>, <argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><literal type="number" pos:start="49:39" pos:end="49:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="51:15" pos:end="55:13">else <block pos:start="51:20" pos:end="55:13">{<block_content pos:start="53:17" pos:end="53:39">

                <expr_stmt pos:start="53:17" pos:end="53:39"><expr pos:start="53:17" pos:end="53:38"><call pos:start="53:17" pos:end="53:38"><name pos:start="53:17" pos:end="53:27">ptimer_stop</name><argument_list pos:start="53:28" pos:end="53:38">(<argument pos:start="53:29" pos:end="53:37"><expr pos:start="53:29" pos:end="53:37"><name pos:start="53:29" pos:end="53:37"><name pos:start="53:29" pos:end="53:29">t</name><operator pos:start="53:30" pos:end="53:31">-&gt;</operator><name pos:start="53:32" pos:end="53:37">ptimer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:24"><expr pos:start="57:13" pos:end="57:23"><name pos:start="57:13" pos:end="57:17">value</name> <operator pos:start="57:19" pos:end="57:21">&gt;&gt;=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">4</literal></expr>;</expr_stmt>

        </block_content>}</block></for>

        <break pos:start="61:9" pos:end="61:14">break;</break>



    <case pos:start="65:5" pos:end="65:24">case <expr pos:start="65:10" pos:end="65:23"><name pos:start="65:10" pos:end="65:23">MP_BOARD_RESET</name></expr>:</case>

        <if_stmt pos:start="67:9" pos:end="71:9"><if pos:start="67:9" pos:end="71:9">if <condition pos:start="67:12" pos:end="67:42">(<expr pos:start="67:13" pos:end="67:41"><name pos:start="67:13" pos:end="67:17">value</name> <operator pos:start="67:19" pos:end="67:20">==</operator> <name pos:start="67:22" pos:end="67:41">MP_BOARD_RESET_MAGIC</name></expr>)</condition> <block pos:start="67:44" pos:end="71:9">{<block_content pos:start="69:13" pos:end="69:40">

            <expr_stmt pos:start="69:13" pos:end="69:40"><expr pos:start="69:13" pos:end="69:39"><call pos:start="69:13" pos:end="69:39"><name pos:start="69:13" pos:end="69:37">qemu_system_reset_request</name><argument_list pos:start="69:38" pos:end="69:39">()</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
