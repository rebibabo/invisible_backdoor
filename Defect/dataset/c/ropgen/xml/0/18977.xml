<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18977.c" pos:tabs="8"><function pos:start="1:1" pos:end="35:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:40">protocol_client_vencrypt_init</name><parameter_list pos:start="1:41" pos:end="1:81">(<parameter pos:start="1:42" pos:end="1:53"><decl pos:start="1:42" pos:end="1:53"><type pos:start="1:42" pos:end="1:53"><name pos:start="1:42" pos:end="1:49">VncState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">vs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:68"><decl pos:start="1:56" pos:end="1:68"><type pos:start="1:56" pos:end="1:68"><name pos:start="1:56" pos:end="1:62">uint8_t</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:68">data</name></decl></parameter>, <parameter pos:start="1:71" pos:end="1:80"><decl pos:start="1:71" pos:end="1:80"><type pos:start="1:71" pos:end="1:80"><name pos:start="1:71" pos:end="1:76">size_t</name></type> <name pos:start="1:78" pos:end="1:80">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="35:1">{<block_content pos:start="5:5" pos:end="33:13">

    <if_stmt pos:start="5:5" pos:end="31:5"><if pos:start="5:5" pos:end="17:5">if <condition pos:start="5:8" pos:end="7:21">(<expr pos:start="5:9" pos:end="7:20"><name pos:start="5:9" pos:end="5:15"><name pos:start="5:9" pos:end="5:12">data</name><index pos:start="5:13" pos:end="5:15">[<expr pos:start="5:14" pos:end="5:14"><literal type="number" pos:start="5:14" pos:end="5:14">0</literal></expr>]</index></name> <operator pos:start="5:17" pos:end="5:18">!=</operator> <literal type="number" pos:start="5:20" pos:end="5:20">0</literal> <operator pos:start="5:22" pos:end="5:23">||</operator>

        <name pos:start="7:9" pos:end="7:15"><name pos:start="7:9" pos:end="7:12">data</name><index pos:start="7:13" pos:end="7:15">[<expr pos:start="7:14" pos:end="7:14"><literal type="number" pos:start="7:14" pos:end="7:14">1</literal></expr>]</index></name> <operator pos:start="7:17" pos:end="7:18">!=</operator> <literal type="number" pos:start="7:20" pos:end="7:20">2</literal></expr>)</condition> <block pos:start="7:23" pos:end="17:5">{<block_content pos:start="9:9" pos:end="15:29">

        <expr_stmt pos:start="9:9" pos:end="9:87"><expr pos:start="9:9" pos:end="9:86"><call pos:start="9:9" pos:end="9:86"><name pos:start="9:9" pos:end="9:17">VNC_DEBUG</name><argument_list pos:start="9:18" pos:end="9:86">(<argument pos:start="9:19" pos:end="9:57"><expr pos:start="9:19" pos:end="9:57"><literal type="string" pos:start="9:19" pos:end="9:57">"Unsupported VeNCrypt protocol %d.%d\n"</literal></expr></argument>, <argument pos:start="9:60" pos:end="9:71"><expr pos:start="9:60" pos:end="9:71"><operator pos:start="9:60" pos:end="9:60">(</operator><name pos:start="9:61" pos:end="9:63">int</name><operator pos:start="9:64" pos:end="9:64">)</operator><name pos:start="9:65" pos:end="9:71"><name pos:start="9:65" pos:end="9:68">data</name><index pos:start="9:69" pos:end="9:71">[<expr pos:start="9:70" pos:end="9:70"><literal type="number" pos:start="9:70" pos:end="9:70">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="9:74" pos:end="9:85"><expr pos:start="9:74" pos:end="9:85"><operator pos:start="9:74" pos:end="9:74">(</operator><name pos:start="9:75" pos:end="9:77">int</name><operator pos:start="9:78" pos:end="9:78">)</operator><name pos:start="9:79" pos:end="9:85"><name pos:start="9:79" pos:end="9:82">data</name><index pos:start="9:83" pos:end="9:85">[<expr pos:start="9:84" pos:end="9:84"><literal type="number" pos:start="9:84" pos:end="9:84">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="11:9" pos:end="11:28"><expr pos:start="11:9" pos:end="11:27"><call pos:start="11:9" pos:end="11:27"><name pos:start="11:9" pos:end="11:20">vnc_write_u8</name><argument_list pos:start="11:21" pos:end="11:27">(<argument pos:start="11:22" pos:end="11:23"><expr pos:start="11:22" pos:end="11:23"><name pos:start="11:22" pos:end="11:23">vs</name></expr></argument>, <argument pos:start="11:26" pos:end="11:26"><expr pos:start="11:26" pos:end="11:26"><literal type="number" pos:start="11:26" pos:end="11:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="11:30" pos:end="11:49">/* Reject version */</comment>

        <expr_stmt pos:start="13:9" pos:end="13:22"><expr pos:start="13:9" pos:end="13:21"><call pos:start="13:9" pos:end="13:21"><name pos:start="13:9" pos:end="13:17">vnc_flush</name><argument_list pos:start="13:18" pos:end="13:21">(<argument pos:start="13:19" pos:end="13:20"><expr pos:start="13:19" pos:end="13:20"><name pos:start="13:19" pos:end="13:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="15:9" pos:end="15:29"><expr pos:start="15:9" pos:end="15:28"><call pos:start="15:9" pos:end="15:28"><name pos:start="15:9" pos:end="15:24">vnc_client_error</name><argument_list pos:start="15:25" pos:end="15:28">(<argument pos:start="15:26" pos:end="15:27"><expr pos:start="15:26" pos:end="15:27"><name pos:start="15:26" pos:end="15:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="31:5">else <block pos:start="17:12" pos:end="31:5">{<block_content pos:start="19:9" pos:end="29:60">

        <expr_stmt pos:start="19:9" pos:end="19:64"><expr pos:start="19:9" pos:end="19:63"><call pos:start="19:9" pos:end="19:63"><name pos:start="19:9" pos:end="19:17">VNC_DEBUG</name><argument_list pos:start="19:18" pos:end="19:63">(<argument pos:start="19:19" pos:end="19:45"><expr pos:start="19:19" pos:end="19:45"><literal type="string" pos:start="19:19" pos:end="19:45">"Sending allowed auth %d\n"</literal></expr></argument>, <argument pos:start="19:48" pos:end="19:62"><expr pos:start="19:48" pos:end="19:62"><name pos:start="19:48" pos:end="19:62"><name pos:start="19:48" pos:end="19:49">vs</name><operator pos:start="19:50" pos:end="19:51">-&gt;</operator><name pos:start="19:52" pos:end="19:53">vd</name><operator pos:start="19:54" pos:end="19:55">-&gt;</operator><name pos:start="19:56" pos:end="19:62">subauth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="21:9" pos:end="21:28"><expr pos:start="21:9" pos:end="21:27"><call pos:start="21:9" pos:end="21:27"><name pos:start="21:9" pos:end="21:20">vnc_write_u8</name><argument_list pos:start="21:21" pos:end="21:27">(<argument pos:start="21:22" pos:end="21:23"><expr pos:start="21:22" pos:end="21:23"><name pos:start="21:22" pos:end="21:23">vs</name></expr></argument>, <argument pos:start="21:26" pos:end="21:26"><expr pos:start="21:26" pos:end="21:26"><literal type="number" pos:start="21:26" pos:end="21:26">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="21:30" pos:end="21:49">/* Accept version */</comment>

        <expr_stmt pos:start="23:9" pos:end="23:28"><expr pos:start="23:9" pos:end="23:27"><call pos:start="23:9" pos:end="23:27"><name pos:start="23:9" pos:end="23:20">vnc_write_u8</name><argument_list pos:start="23:21" pos:end="23:27">(<argument pos:start="23:22" pos:end="23:23"><expr pos:start="23:22" pos:end="23:23"><name pos:start="23:22" pos:end="23:23">vs</name></expr></argument>, <argument pos:start="23:26" pos:end="23:26"><expr pos:start="23:26" pos:end="23:26"><literal type="number" pos:start="23:26" pos:end="23:26">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:30" pos:end="23:54">/* Number of sub-auths */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:43"><expr pos:start="25:9" pos:end="25:42"><call pos:start="25:9" pos:end="25:42"><name pos:start="25:9" pos:end="25:21">vnc_write_u32</name><argument_list pos:start="25:22" pos:end="25:42">(<argument pos:start="25:23" pos:end="25:24"><expr pos:start="25:23" pos:end="25:24"><name pos:start="25:23" pos:end="25:24">vs</name></expr></argument>, <argument pos:start="25:27" pos:end="25:41"><expr pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:28">vs</name><operator pos:start="25:29" pos:end="25:30">-&gt;</operator><name pos:start="25:31" pos:end="25:32">vd</name><operator pos:start="25:33" pos:end="25:34">-&gt;</operator><name pos:start="25:35" pos:end="25:41">subauth</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="25:45" pos:end="25:68">/* The supported auth */</comment>

        <expr_stmt pos:start="27:9" pos:end="27:22"><expr pos:start="27:9" pos:end="27:21"><call pos:start="27:9" pos:end="27:21"><name pos:start="27:9" pos:end="27:17">vnc_flush</name><argument_list pos:start="27:18" pos:end="27:21">(<argument pos:start="27:19" pos:end="27:20"><expr pos:start="27:19" pos:end="27:20"><name pos:start="27:19" pos:end="27:20">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:60"><expr pos:start="29:9" pos:end="29:59"><call pos:start="29:9" pos:end="29:59"><name pos:start="29:9" pos:end="29:21">vnc_read_when</name><argument_list pos:start="29:22" pos:end="29:59">(<argument pos:start="29:23" pos:end="29:24"><expr pos:start="29:23" pos:end="29:24"><name pos:start="29:23" pos:end="29:24">vs</name></expr></argument>, <argument pos:start="29:27" pos:end="29:55"><expr pos:start="29:27" pos:end="29:55"><name pos:start="29:27" pos:end="29:55">protocol_client_vencrypt_auth</name></expr></argument>, <argument pos:start="29:58" pos:end="29:58"><expr pos:start="29:58" pos:end="29:58"><literal type="number" pos:start="29:58" pos:end="29:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <return pos:start="33:5" pos:end="33:13">return <expr pos:start="33:12" pos:end="33:12"><literal type="number" pos:start="33:12" pos:end="33:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
