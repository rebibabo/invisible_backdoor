<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/26696.c" pos:tabs="8"><function pos:start="1:1" pos:end="2049:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">disas_thumb2_insn</name><parameter_list pos:start="1:29" pos:end="1:79">(<parameter pos:start="1:30" pos:end="1:42"><decl pos:start="1:30" pos:end="1:42"><type pos:start="1:30" pos:end="1:42"><name pos:start="1:30" pos:end="1:37">CPUState</name> <modifier pos:start="1:39" pos:end="1:39">*</modifier></type><name pos:start="1:40" pos:end="1:42">env</name></decl></parameter>, <parameter pos:start="1:45" pos:end="1:59"><decl pos:start="1:45" pos:end="1:59"><type pos:start="1:45" pos:end="1:59"><name pos:start="1:45" pos:end="1:56">DisasContext</name> <modifier pos:start="1:58" pos:end="1:58">*</modifier></type><name pos:start="1:59" pos:end="1:59">s</name></decl></parameter>, <parameter pos:start="1:62" pos:end="1:78"><decl pos:start="1:62" pos:end="1:78"><type pos:start="1:62" pos:end="1:78"><name pos:start="1:62" pos:end="1:69">uint16_t</name></type> <name pos:start="1:71" pos:end="1:78">insn_hw1</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="2049:1">{<block_content pos:start="5:5" pos:end="2047:13">

    <decl_stmt pos:start="5:5" pos:end="5:38"><decl pos:start="5:5" pos:end="5:17"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:17">insn</name></decl>, <decl pos:start="5:20" pos:end="5:22"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:20" pos:end="5:22">imm</name></decl>, <decl pos:start="5:25" pos:end="5:29"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:25" pos:end="5:29">shift</name></decl>, <decl pos:start="5:32" pos:end="5:37"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:32" pos:end="5:37">offset</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:28"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">rd</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">rn</name></decl>, <decl pos:start="7:22" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:22" pos:end="7:23">rm</name></decl>, <decl pos:start="7:26" pos:end="7:27"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:26" pos:end="7:27">rs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:13"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:8"><name pos:start="9:5" pos:end="9:8">TCGv</name></type> <name pos:start="9:10" pos:end="9:12">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:14"><decl pos:start="11:5" pos:end="11:13"><type pos:start="11:5" pos:end="11:8"><name pos:start="11:5" pos:end="11:8">TCGv</name></type> <name pos:start="11:10" pos:end="11:13">tmp2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:8"><name pos:start="13:5" pos:end="13:8">TCGv</name></type> <name pos:start="13:10" pos:end="13:13">tmp3</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:14"><decl pos:start="15:5" pos:end="15:13"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">TCGv</name></type> <name pos:start="15:10" pos:end="15:13">addr</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:19"><decl pos:start="17:5" pos:end="17:18"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">TCGv_i64</name></type> <name pos:start="17:14" pos:end="17:18">tmp64</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:11"><decl pos:start="19:5" pos:end="19:10"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:10">op</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:16"><decl pos:start="21:5" pos:end="21:15"><type pos:start="21:5" pos:end="21:7"><name pos:start="21:5" pos:end="21:7">int</name></type> <name pos:start="21:9" pos:end="21:15">shiftop</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:14"><decl pos:start="23:5" pos:end="23:13"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">conds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:17"><decl pos:start="25:5" pos:end="25:16"><type pos:start="25:5" pos:end="25:7"><name pos:start="25:5" pos:end="25:7">int</name></type> <name pos:start="25:9" pos:end="25:16">logic_cc</name></decl>;</decl_stmt>



    <if_stmt pos:start="29:5" pos:end="107:5"><if pos:start="29:5" pos:end="107:5">if <condition pos:start="29:8" pos:end="31:47">(<expr pos:start="29:9" pos:end="31:46"><operator pos:start="29:9" pos:end="29:9">!</operator><operator pos:start="29:10" pos:end="29:10">(</operator><call pos:start="29:11" pos:end="29:46"><name pos:start="29:11" pos:end="29:21">arm_feature</name><argument_list pos:start="29:22" pos:end="29:46">(<argument pos:start="29:23" pos:end="29:25"><expr pos:start="29:23" pos:end="29:25"><name pos:start="29:23" pos:end="29:25">env</name></expr></argument>, <argument pos:start="29:28" pos:end="29:45"><expr pos:start="29:28" pos:end="29:45"><name pos:start="29:28" pos:end="29:45">ARM_FEATURE_THUMB2</name></expr></argument>)</argument_list></call>

          <operator pos:start="31:11" pos:end="31:12">||</operator> <call pos:start="31:14" pos:end="31:45"><name pos:start="31:14" pos:end="31:24">arm_feature</name> <argument_list pos:start="31:26" pos:end="31:45">(<argument pos:start="31:27" pos:end="31:29"><expr pos:start="31:27" pos:end="31:29"><name pos:start="31:27" pos:end="31:29">env</name></expr></argument>, <argument pos:start="31:32" pos:end="31:44"><expr pos:start="31:32" pos:end="31:44"><name pos:start="31:32" pos:end="31:44">ARM_FEATURE_M</name></expr></argument>)</argument_list></call><operator pos:start="31:46" pos:end="31:46">)</operator></expr>)</condition> <block pos:start="31:49" pos:end="107:5">{<block_content pos:start="37:9" pos:end="103:9">

        <comment type="block" pos:start="33:9" pos:end="35:74">/* Thumb-1 cores may need to treat bl and blx as a pair of

           16-bit instructions to get correct prefetch abort behavior.  */</comment>

        <expr_stmt pos:start="37:9" pos:end="37:24"><expr pos:start="37:9" pos:end="37:23"><name pos:start="37:9" pos:end="37:12">insn</name> <operator pos:start="37:14" pos:end="37:14">=</operator> <name pos:start="37:16" pos:end="37:23">insn_hw1</name></expr>;</expr_stmt>

        <if_stmt pos:start="39:9" pos:end="63:9"><if pos:start="39:9" pos:end="63:9">if <condition pos:start="39:12" pos:end="39:36">(<expr pos:start="39:13" pos:end="39:35"><operator pos:start="39:13" pos:end="39:13">(</operator><name pos:start="39:14" pos:end="39:17">insn</name> <operator pos:start="39:19" pos:end="39:19">&amp;</operator> <operator pos:start="39:21" pos:end="39:21">(</operator><literal type="number" pos:start="39:22" pos:end="39:22">1</literal> <operator pos:start="39:24" pos:end="39:25">&lt;&lt;</operator> <literal type="number" pos:start="39:27" pos:end="39:28">12</literal><operator pos:start="39:29" pos:end="39:29">)</operator><operator pos:start="39:30" pos:end="39:30">)</operator> <operator pos:start="39:32" pos:end="39:33">==</operator> <literal type="number" pos:start="39:35" pos:end="39:35">0</literal></expr>)</condition> <block pos:start="39:38" pos:end="63:9">{<block_content pos:start="43:13" pos:end="61:21">

            <comment type="block" pos:start="41:13" pos:end="41:38">/* Second half of blx.  */</comment>

            <expr_stmt pos:start="43:13" pos:end="43:43"><expr pos:start="43:13" pos:end="43:42"><name pos:start="43:13" pos:end="43:18">offset</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <operator pos:start="43:22" pos:end="43:22">(</operator><operator pos:start="43:23" pos:end="43:23">(</operator><name pos:start="43:24" pos:end="43:27">insn</name> <operator pos:start="43:29" pos:end="43:29">&amp;</operator> <literal type="number" pos:start="43:31" pos:end="43:35">0x7ff</literal><operator pos:start="43:36" pos:end="43:36">)</operator> <operator pos:start="43:38" pos:end="43:39">&lt;&lt;</operator> <literal type="number" pos:start="43:41" pos:end="43:41">1</literal><operator pos:start="43:42" pos:end="43:42">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="45:13" pos:end="45:34"><expr pos:start="45:13" pos:end="45:33"><name pos:start="45:13" pos:end="45:15">tmp</name> <operator pos:start="45:17" pos:end="45:17">=</operator> <call pos:start="45:19" pos:end="45:33"><name pos:start="45:19" pos:end="45:26">load_reg</name><argument_list pos:start="45:27" pos:end="45:33">(<argument pos:start="45:28" pos:end="45:28"><expr pos:start="45:28" pos:end="45:28"><name pos:start="45:28" pos:end="45:28">s</name></expr></argument>, <argument pos:start="45:31" pos:end="45:32"><expr pos:start="45:31" pos:end="45:32"><literal type="number" pos:start="45:31" pos:end="45:32">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="47:13" pos:end="47:47"><expr pos:start="47:13" pos:end="47:46"><call pos:start="47:13" pos:end="47:46"><name pos:start="47:13" pos:end="47:28">tcg_gen_addi_i32</name><argument_list pos:start="47:29" pos:end="47:46">(<argument pos:start="47:30" pos:end="47:32"><expr pos:start="47:30" pos:end="47:32"><name pos:start="47:30" pos:end="47:32">tmp</name></expr></argument>, <argument pos:start="47:35" pos:end="47:37"><expr pos:start="47:35" pos:end="47:37"><name pos:start="47:35" pos:end="47:37">tmp</name></expr></argument>, <argument pos:start="47:40" pos:end="47:45"><expr pos:start="47:40" pos:end="47:45"><name pos:start="47:40" pos:end="47:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="49:13" pos:end="49:51"><expr pos:start="49:13" pos:end="49:50"><call pos:start="49:13" pos:end="49:50"><name pos:start="49:13" pos:end="49:28">tcg_gen_andi_i32</name><argument_list pos:start="49:29" pos:end="49:50">(<argument pos:start="49:30" pos:end="49:32"><expr pos:start="49:30" pos:end="49:32"><name pos:start="49:30" pos:end="49:32">tmp</name></expr></argument>, <argument pos:start="49:35" pos:end="49:37"><expr pos:start="49:35" pos:end="49:37"><name pos:start="49:35" pos:end="49:37">tmp</name></expr></argument>, <argument pos:start="49:40" pos:end="49:49"><expr pos:start="49:40" pos:end="49:49"><literal type="number" pos:start="49:40" pos:end="49:49">0xfffffffc</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="53:13" pos:end="53:29"><expr pos:start="53:13" pos:end="53:28"><name pos:start="53:13" pos:end="53:16">tmp2</name> <operator pos:start="53:18" pos:end="53:18">=</operator> <call pos:start="53:20" pos:end="53:28"><name pos:start="53:20" pos:end="53:26">new_tmp</name><argument_list pos:start="53:27" pos:end="53:28">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:46"><expr pos:start="55:13" pos:end="55:45"><call pos:start="55:13" pos:end="55:45"><name pos:start="55:13" pos:end="55:28">tcg_gen_movi_i32</name><argument_list pos:start="55:29" pos:end="55:45">(<argument pos:start="55:30" pos:end="55:33"><expr pos:start="55:30" pos:end="55:33"><name pos:start="55:30" pos:end="55:33">tmp2</name></expr></argument>, <argument pos:start="55:36" pos:end="55:44"><expr pos:start="55:36" pos:end="55:44"><name pos:start="55:36" pos:end="55:40"><name pos:start="55:36" pos:end="55:36">s</name><operator pos:start="55:37" pos:end="55:38">-&gt;</operator><name pos:start="55:39" pos:end="55:40">pc</name></name> <operator pos:start="55:42" pos:end="55:42">|</operator> <literal type="number" pos:start="55:44" pos:end="55:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="57:13" pos:end="57:35"><expr pos:start="57:13" pos:end="57:34"><call pos:start="57:13" pos:end="57:34"><name pos:start="57:13" pos:end="57:21">store_reg</name><argument_list pos:start="57:22" pos:end="57:34">(<argument pos:start="57:23" pos:end="57:23"><expr pos:start="57:23" pos:end="57:23"><name pos:start="57:23" pos:end="57:23">s</name></expr></argument>, <argument pos:start="57:26" pos:end="57:27"><expr pos:start="57:26" pos:end="57:27"><literal type="number" pos:start="57:26" pos:end="57:27">14</literal></expr></argument>, <argument pos:start="57:30" pos:end="57:33"><expr pos:start="57:30" pos:end="57:33"><name pos:start="57:30" pos:end="57:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="59:13" pos:end="59:27"><expr pos:start="59:13" pos:end="59:26"><call pos:start="59:13" pos:end="59:26"><name pos:start="59:13" pos:end="59:18">gen_bx</name><argument_list pos:start="59:19" pos:end="59:26">(<argument pos:start="59:20" pos:end="59:20"><expr pos:start="59:20" pos:end="59:20"><name pos:start="59:20" pos:end="59:20">s</name></expr></argument>, <argument pos:start="59:23" pos:end="59:25"><expr pos:start="59:23" pos:end="59:25"><name pos:start="59:23" pos:end="59:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="61:13" pos:end="61:21">return <expr pos:start="61:20" pos:end="61:20"><literal type="number" pos:start="61:20" pos:end="61:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="65:9" pos:end="87:9"><if pos:start="65:9" pos:end="87:9">if <condition pos:start="65:12" pos:end="65:29">(<expr pos:start="65:13" pos:end="65:28"><name pos:start="65:13" pos:end="65:16">insn</name> <operator pos:start="65:18" pos:end="65:18">&amp;</operator> <operator pos:start="65:20" pos:end="65:20">(</operator><literal type="number" pos:start="65:21" pos:end="65:21">1</literal> <operator pos:start="65:23" pos:end="65:24">&lt;&lt;</operator> <literal type="number" pos:start="65:26" pos:end="65:27">11</literal><operator pos:start="65:28" pos:end="65:28">)</operator></expr>)</condition> <block pos:start="65:31" pos:end="87:9">{<block_content pos:start="69:13" pos:end="85:21">

            <comment type="block" pos:start="67:13" pos:end="67:37">/* Second half of bl.  */</comment>

            <expr_stmt pos:start="69:13" pos:end="69:47"><expr pos:start="69:13" pos:end="69:46"><name pos:start="69:13" pos:end="69:18">offset</name> <operator pos:start="69:20" pos:end="69:20">=</operator> <operator pos:start="69:22" pos:end="69:22">(</operator><operator pos:start="69:23" pos:end="69:23">(</operator><name pos:start="69:24" pos:end="69:27">insn</name> <operator pos:start="69:29" pos:end="69:29">&amp;</operator> <literal type="number" pos:start="69:31" pos:end="69:35">0x7ff</literal><operator pos:start="69:36" pos:end="69:36">)</operator> <operator pos:start="69:38" pos:end="69:39">&lt;&lt;</operator> <literal type="number" pos:start="69:41" pos:end="69:41">1</literal><operator pos:start="69:42" pos:end="69:42">)</operator> <operator pos:start="69:44" pos:end="69:44">|</operator> <literal type="number" pos:start="69:46" pos:end="69:46">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="71:13" pos:end="71:34"><expr pos:start="71:13" pos:end="71:33"><name pos:start="71:13" pos:end="71:15">tmp</name> <operator pos:start="71:17" pos:end="71:17">=</operator> <call pos:start="71:19" pos:end="71:33"><name pos:start="71:19" pos:end="71:26">load_reg</name><argument_list pos:start="71:27" pos:end="71:33">(<argument pos:start="71:28" pos:end="71:28"><expr pos:start="71:28" pos:end="71:28"><name pos:start="71:28" pos:end="71:28">s</name></expr></argument>, <argument pos:start="71:31" pos:end="71:32"><expr pos:start="71:31" pos:end="71:32"><literal type="number" pos:start="71:31" pos:end="71:32">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="73:13" pos:end="73:47"><expr pos:start="73:13" pos:end="73:46"><call pos:start="73:13" pos:end="73:46"><name pos:start="73:13" pos:end="73:28">tcg_gen_addi_i32</name><argument_list pos:start="73:29" pos:end="73:46">(<argument pos:start="73:30" pos:end="73:32"><expr pos:start="73:30" pos:end="73:32"><name pos:start="73:30" pos:end="73:32">tmp</name></expr></argument>, <argument pos:start="73:35" pos:end="73:37"><expr pos:start="73:35" pos:end="73:37"><name pos:start="73:35" pos:end="73:37">tmp</name></expr></argument>, <argument pos:start="73:40" pos:end="73:45"><expr pos:start="73:40" pos:end="73:45"><name pos:start="73:40" pos:end="73:45">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:16">tmp2</name> <operator pos:start="77:18" pos:end="77:18">=</operator> <call pos:start="77:20" pos:end="77:28"><name pos:start="77:20" pos:end="77:26">new_tmp</name><argument_list pos:start="77:27" pos:end="77:28">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="79:13" pos:end="79:46"><expr pos:start="79:13" pos:end="79:45"><call pos:start="79:13" pos:end="79:45"><name pos:start="79:13" pos:end="79:28">tcg_gen_movi_i32</name><argument_list pos:start="79:29" pos:end="79:45">(<argument pos:start="79:30" pos:end="79:33"><expr pos:start="79:30" pos:end="79:33"><name pos:start="79:30" pos:end="79:33">tmp2</name></expr></argument>, <argument pos:start="79:36" pos:end="79:44"><expr pos:start="79:36" pos:end="79:44"><name pos:start="79:36" pos:end="79:40"><name pos:start="79:36" pos:end="79:36">s</name><operator pos:start="79:37" pos:end="79:38">-&gt;</operator><name pos:start="79:39" pos:end="79:40">pc</name></name> <operator pos:start="79:42" pos:end="79:42">|</operator> <literal type="number" pos:start="79:44" pos:end="79:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="81:13" pos:end="81:35"><expr pos:start="81:13" pos:end="81:34"><call pos:start="81:13" pos:end="81:34"><name pos:start="81:13" pos:end="81:21">store_reg</name><argument_list pos:start="81:22" pos:end="81:34">(<argument pos:start="81:23" pos:end="81:23"><expr pos:start="81:23" pos:end="81:23"><name pos:start="81:23" pos:end="81:23">s</name></expr></argument>, <argument pos:start="81:26" pos:end="81:27"><expr pos:start="81:26" pos:end="81:27"><literal type="number" pos:start="81:26" pos:end="81:27">14</literal></expr></argument>, <argument pos:start="81:30" pos:end="81:33"><expr pos:start="81:30" pos:end="81:33"><name pos:start="81:30" pos:end="81:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:27"><expr pos:start="83:13" pos:end="83:26"><call pos:start="83:13" pos:end="83:26"><name pos:start="83:13" pos:end="83:18">gen_bx</name><argument_list pos:start="83:19" pos:end="83:26">(<argument pos:start="83:20" pos:end="83:20"><expr pos:start="83:20" pos:end="83:20"><name pos:start="83:20" pos:end="83:20">s</name></expr></argument>, <argument pos:start="83:23" pos:end="83:25"><expr pos:start="83:23" pos:end="83:25"><name pos:start="83:23" pos:end="83:25">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="85:13" pos:end="85:21">return <expr pos:start="85:20" pos:end="85:20"><literal type="number" pos:start="85:20" pos:end="85:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="89:9" pos:end="103:9"><if pos:start="89:9" pos:end="103:9">if <condition pos:start="89:12" pos:end="89:45">(<expr pos:start="89:13" pos:end="89:44"><operator pos:start="89:13" pos:end="89:13">(</operator><name pos:start="89:14" pos:end="89:18"><name pos:start="89:14" pos:end="89:14">s</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:18">pc</name></name> <operator pos:start="89:20" pos:end="89:20">&amp;</operator> <operator pos:start="89:22" pos:end="89:22">~</operator><name pos:start="89:23" pos:end="89:38">TARGET_PAGE_MASK</name><operator pos:start="89:39" pos:end="89:39">)</operator> <operator pos:start="89:41" pos:end="89:42">==</operator> <literal type="number" pos:start="89:44" pos:end="89:44">0</literal></expr>)</condition> <block pos:start="89:47" pos:end="103:9">{<block_content pos:start="97:13" pos:end="101:21">

            <comment type="block" pos:start="91:13" pos:end="95:34">/* Instruction spans a page boundary.  Implement it as two

               16-bit instructions in case the second half causes an

               prefetch abort.  */</comment>

            <expr_stmt pos:start="97:13" pos:end="97:48"><expr pos:start="97:13" pos:end="97:47"><name pos:start="97:13" pos:end="97:18">offset</name> <operator pos:start="97:20" pos:end="97:20">=</operator> <operator pos:start="97:22" pos:end="97:22">(</operator><operator pos:start="97:23" pos:end="97:23">(</operator><name pos:start="97:24" pos:end="97:30">int32_t</name><operator pos:start="97:31" pos:end="97:31">)</operator><name pos:start="97:32" pos:end="97:35">insn</name> <operator pos:start="97:37" pos:end="97:38">&lt;&lt;</operator> <literal type="number" pos:start="97:40" pos:end="97:41">21</literal><operator pos:start="97:42" pos:end="97:42">)</operator> <operator pos:start="97:44" pos:end="97:45">&gt;&gt;</operator> <literal type="number" pos:start="97:47" pos:end="97:47">9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="99:13" pos:end="99:60"><expr pos:start="99:13" pos:end="99:59"><call pos:start="99:13" pos:end="99:59"><name pos:start="99:13" pos:end="99:28">tcg_gen_movi_i32</name><argument_list pos:start="99:29" pos:end="99:59">(<argument pos:start="99:30" pos:end="99:38"><expr pos:start="99:30" pos:end="99:38"><name pos:start="99:30" pos:end="99:38"><name pos:start="99:30" pos:end="99:34">cpu_R</name><index pos:start="99:35" pos:end="99:38">[<expr pos:start="99:36" pos:end="99:37"><literal type="number" pos:start="99:36" pos:end="99:37">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="99:41" pos:end="99:58"><expr pos:start="99:41" pos:end="99:58"><name pos:start="99:41" pos:end="99:45"><name pos:start="99:41" pos:end="99:41">s</name><operator pos:start="99:42" pos:end="99:43">-&gt;</operator><name pos:start="99:44" pos:end="99:45">pc</name></name> <operator pos:start="99:47" pos:end="99:47">+</operator> <literal type="number" pos:start="99:49" pos:end="99:51">2</literal> <operator pos:start="99:51" pos:end="99:51">+</operator> <name pos:start="99:53" pos:end="99:58">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="101:13" pos:end="101:21">return <expr pos:start="101:20" pos:end="101:20"><literal type="number" pos:start="101:20" pos:end="101:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="105:9" pos:end="105:45">/* Fall through to 32-bit decode.  */</comment>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="111:5" pos:end="111:28"><expr pos:start="111:5" pos:end="111:27"><name pos:start="111:5" pos:end="111:8">insn</name> <operator pos:start="111:10" pos:end="111:10">=</operator> <call pos:start="111:12" pos:end="111:27"><name pos:start="111:12" pos:end="111:20">lduw_code</name><argument_list pos:start="111:21" pos:end="111:27">(<argument pos:start="111:22" pos:end="111:26"><expr pos:start="111:22" pos:end="111:26"><name pos:start="111:22" pos:end="111:26"><name pos:start="111:22" pos:end="111:22">s</name><operator pos:start="111:23" pos:end="111:24">-&gt;</operator><name pos:start="111:25" pos:end="111:26">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="113:5" pos:end="113:15"><expr pos:start="113:5" pos:end="113:14"><name pos:start="113:5" pos:end="113:9"><name pos:start="113:5" pos:end="113:5">s</name><operator pos:start="113:6" pos:end="113:7">-&gt;</operator><name pos:start="113:8" pos:end="113:9">pc</name></name> <operator pos:start="113:11" pos:end="113:12">+=</operator> <literal type="number" pos:start="113:14" pos:end="113:14">2</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:37"><expr pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:8">insn</name> <operator pos:start="115:10" pos:end="115:11">|=</operator> <operator pos:start="115:13" pos:end="115:13">(</operator><name pos:start="115:14" pos:end="115:21">uint32_t</name><operator pos:start="115:22" pos:end="115:22">)</operator><name pos:start="115:23" pos:end="115:30">insn_hw1</name> <operator pos:start="115:32" pos:end="115:33">&lt;&lt;</operator> <literal type="number" pos:start="115:35" pos:end="115:36">16</literal></expr>;</expr_stmt>



    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:42">(<expr pos:start="119:9" pos:end="119:41"><operator pos:start="119:9" pos:end="119:9">(</operator><name pos:start="119:10" pos:end="119:13">insn</name> <operator pos:start="119:15" pos:end="119:15">&amp;</operator> <literal type="number" pos:start="119:17" pos:end="119:26">0xf800e800</literal><operator pos:start="119:27" pos:end="119:27">)</operator> <operator pos:start="119:29" pos:end="119:30">!=</operator> <literal type="number" pos:start="119:32" pos:end="119:41">0xf000e800</literal></expr>)</condition> <block pos:start="119:44" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:18">

        <expr_stmt pos:start="121:9" pos:end="121:18"><expr pos:start="121:9" pos:end="121:17"><call pos:start="121:9" pos:end="121:17"><name pos:start="121:9" pos:end="121:12">ARCH</name><argument_list pos:start="121:13" pos:end="121:17">(<argument pos:start="121:14" pos:end="121:16"><expr pos:start="121:14" pos:end="121:16"><literal type="number" pos:start="121:14" pos:end="121:16">6T2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:28"><expr pos:start="127:5" pos:end="127:27"><name pos:start="127:5" pos:end="127:6">rn</name> <operator pos:start="127:8" pos:end="127:8">=</operator> <operator pos:start="127:10" pos:end="127:10">(</operator><name pos:start="127:11" pos:end="127:14">insn</name> <operator pos:start="127:16" pos:end="127:17">&gt;&gt;</operator> <literal type="number" pos:start="127:19" pos:end="127:20">16</literal><operator pos:start="127:21" pos:end="127:21">)</operator> <operator pos:start="127:23" pos:end="127:23">&amp;</operator> <literal type="number" pos:start="127:25" pos:end="127:27">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="129:28"><expr pos:start="129:5" pos:end="129:27"><name pos:start="129:5" pos:end="129:6">rs</name> <operator pos:start="129:8" pos:end="129:8">=</operator> <operator pos:start="129:10" pos:end="129:10">(</operator><name pos:start="129:11" pos:end="129:14">insn</name> <operator pos:start="129:16" pos:end="129:17">&gt;&gt;</operator> <literal type="number" pos:start="129:19" pos:end="129:20">12</literal><operator pos:start="129:21" pos:end="129:21">)</operator> <operator pos:start="129:23" pos:end="129:23">&amp;</operator> <literal type="number" pos:start="129:25" pos:end="129:27">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="131:5" pos:end="131:27"><expr pos:start="131:5" pos:end="131:26"><name pos:start="131:5" pos:end="131:6">rd</name> <operator pos:start="131:8" pos:end="131:8">=</operator> <operator pos:start="131:10" pos:end="131:10">(</operator><name pos:start="131:11" pos:end="131:14">insn</name> <operator pos:start="131:16" pos:end="131:17">&gt;&gt;</operator> <literal type="number" pos:start="131:19" pos:end="131:19">8</literal><operator pos:start="131:20" pos:end="131:20">)</operator> <operator pos:start="131:22" pos:end="131:22">&amp;</operator> <literal type="number" pos:start="131:24" pos:end="131:26">0xf</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="133:5" pos:end="133:20"><expr pos:start="133:5" pos:end="133:19"><name pos:start="133:5" pos:end="133:6">rm</name> <operator pos:start="133:8" pos:end="133:8">=</operator> <name pos:start="133:10" pos:end="133:13">insn</name> <operator pos:start="133:15" pos:end="133:15">&amp;</operator> <literal type="number" pos:start="133:17" pos:end="133:19">0xf</literal></expr>;</expr_stmt>

    <switch pos:start="135:5" pos:end="2041:5">switch <condition pos:start="135:12" pos:end="135:31">(<expr pos:start="135:13" pos:end="135:30"><operator pos:start="135:13" pos:end="135:13">(</operator><name pos:start="135:14" pos:end="135:17">insn</name> <operator pos:start="135:19" pos:end="135:20">&gt;&gt;</operator> <literal type="number" pos:start="135:22" pos:end="135:23">25</literal><operator pos:start="135:24" pos:end="135:24">)</operator> <operator pos:start="135:26" pos:end="135:26">&amp;</operator> <literal type="number" pos:start="135:28" pos:end="135:30">0xf</literal></expr>)</condition> <block pos:start="135:33" pos:end="2041:5">{<block_content pos:start="137:5" pos:end="2039:24">

    <case pos:start="137:5" pos:end="137:11">case <expr pos:start="137:10" pos:end="137:10"><literal type="number" pos:start="137:10" pos:end="137:10">0</literal></expr>:</case> <case pos:start="137:13" pos:end="137:19">case <expr pos:start="137:18" pos:end="137:18"><literal type="number" pos:start="137:18" pos:end="137:18">1</literal></expr>:</case> <case pos:start="137:21" pos:end="137:27">case <expr pos:start="137:26" pos:end="137:26"><literal type="number" pos:start="137:26" pos:end="137:26">2</literal></expr>:</case> <case pos:start="137:29" pos:end="137:35">case <expr pos:start="137:34" pos:end="137:34"><literal type="number" pos:start="137:34" pos:end="137:34">3</literal></expr>:</case>

        <comment type="block" pos:start="139:9" pos:end="139:57">/* 16-bit instructions.  Should never happen.  */</comment>

        <expr_stmt pos:start="141:9" pos:end="141:16"><expr pos:start="141:9" pos:end="141:15"><call pos:start="141:9" pos:end="141:15"><name pos:start="141:9" pos:end="141:13">abort</name><argument_list pos:start="141:14" pos:end="141:15">()</argument_list></call></expr>;</expr_stmt>

    <case pos:start="143:5" pos:end="143:11">case <expr pos:start="143:10" pos:end="143:10"><literal type="number" pos:start="143:10" pos:end="143:10">4</literal></expr>:</case>

        <if_stmt pos:start="145:9" pos:end="543:9"><if pos:start="145:9" pos:end="327:9">if <condition pos:start="145:12" pos:end="145:29">(<expr pos:start="145:13" pos:end="145:28"><name pos:start="145:13" pos:end="145:16">insn</name> <operator pos:start="145:18" pos:end="145:18">&amp;</operator> <operator pos:start="145:20" pos:end="145:20">(</operator><literal type="number" pos:start="145:21" pos:end="145:21">1</literal> <operator pos:start="145:23" pos:end="145:24">&lt;&lt;</operator> <literal type="number" pos:start="145:26" pos:end="145:27">22</literal><operator pos:start="145:28" pos:end="145:28">)</operator></expr>)</condition> <block pos:start="145:31" pos:end="327:9">{<block_content pos:start="149:13" pos:end="325:13">

            <comment type="block" pos:start="147:13" pos:end="147:50">/* Other load/store, table branch.  */</comment>

            <if_stmt pos:start="149:13" pos:end="325:13"><if pos:start="149:13" pos:end="227:13">if <condition pos:start="149:16" pos:end="149:34">(<expr pos:start="149:17" pos:end="149:33"><name pos:start="149:17" pos:end="149:20">insn</name> <operator pos:start="149:22" pos:end="149:22">&amp;</operator> <literal type="number" pos:start="149:24" pos:end="149:33">0x01200000</literal></expr>)</condition> <block pos:start="149:36" pos:end="227:13">{<block_content pos:start="153:17" pos:end="225:17">

                <comment type="block" pos:start="151:17" pos:end="151:45">/* Load/store doubleword.  */</comment>

                <if_stmt pos:start="153:17" pos:end="163:17"><if pos:start="153:17" pos:end="159:17">if <condition pos:start="153:20" pos:end="153:29">(<expr pos:start="153:21" pos:end="153:28"><name pos:start="153:21" pos:end="153:22">rn</name> <operator pos:start="153:24" pos:end="153:25">==</operator> <literal type="number" pos:start="153:27" pos:end="153:28">15</literal></expr>)</condition> <block pos:start="153:31" pos:end="159:17">{<block_content pos:start="155:21" pos:end="157:55">

                    <expr_stmt pos:start="155:21" pos:end="155:37"><expr pos:start="155:21" pos:end="155:36"><name pos:start="155:21" pos:end="155:24">addr</name> <operator pos:start="155:26" pos:end="155:26">=</operator> <call pos:start="155:28" pos:end="155:36"><name pos:start="155:28" pos:end="155:34">new_tmp</name><argument_list pos:start="155:35" pos:end="155:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="157:21" pos:end="157:55"><expr pos:start="157:21" pos:end="157:54"><call pos:start="157:21" pos:end="157:54"><name pos:start="157:21" pos:end="157:36">tcg_gen_movi_i32</name><argument_list pos:start="157:37" pos:end="157:54">(<argument pos:start="157:38" pos:end="157:41"><expr pos:start="157:38" pos:end="157:41"><name pos:start="157:38" pos:end="157:41">addr</name></expr></argument>, <argument pos:start="157:44" pos:end="157:53"><expr pos:start="157:44" pos:end="157:53"><name pos:start="157:44" pos:end="157:48"><name pos:start="157:44" pos:end="157:44">s</name><operator pos:start="157:45" pos:end="157:46">-&gt;</operator><name pos:start="157:47" pos:end="157:48">pc</name></name> <operator pos:start="157:50" pos:end="157:50">&amp;</operator> <operator pos:start="157:52" pos:end="157:52">~</operator><literal type="number" pos:start="157:53" pos:end="157:53">3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="159:19" pos:end="163:17">else <block pos:start="159:24" pos:end="163:17">{<block_content pos:start="161:21" pos:end="161:43">

                    <expr_stmt pos:start="161:21" pos:end="161:43"><expr pos:start="161:21" pos:end="161:42"><name pos:start="161:21" pos:end="161:24">addr</name> <operator pos:start="161:26" pos:end="161:26">=</operator> <call pos:start="161:28" pos:end="161:42"><name pos:start="161:28" pos:end="161:35">load_reg</name><argument_list pos:start="161:36" pos:end="161:42">(<argument pos:start="161:37" pos:end="161:37"><expr pos:start="161:37" pos:end="161:37"><name pos:start="161:37" pos:end="161:37">s</name></expr></argument>, <argument pos:start="161:40" pos:end="161:41"><expr pos:start="161:40" pos:end="161:41"><name pos:start="161:40" pos:end="161:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:43"><expr pos:start="165:17" pos:end="165:42"><name pos:start="165:17" pos:end="165:22">offset</name> <operator pos:start="165:24" pos:end="165:24">=</operator> <operator pos:start="165:26" pos:end="165:26">(</operator><name pos:start="165:27" pos:end="165:30">insn</name> <operator pos:start="165:32" pos:end="165:32">&amp;</operator> <literal type="number" pos:start="165:34" pos:end="165:37">0xff</literal><operator pos:start="165:38" pos:end="165:38">)</operator> <operator pos:start="165:40" pos:end="165:40">*</operator> <literal type="number" pos:start="165:42" pos:end="165:42">4</literal></expr>;</expr_stmt>

                <if_stmt pos:start="167:17" pos:end="169:37"><if pos:start="167:17" pos:end="169:37">if <condition pos:start="167:20" pos:end="167:44">(<expr pos:start="167:21" pos:end="167:43"><operator pos:start="167:21" pos:end="167:21">(</operator><name pos:start="167:22" pos:end="167:25">insn</name> <operator pos:start="167:27" pos:end="167:27">&amp;</operator> <operator pos:start="167:29" pos:end="167:29">(</operator><literal type="number" pos:start="167:30" pos:end="167:30">1</literal> <operator pos:start="167:32" pos:end="167:33">&lt;&lt;</operator> <literal type="number" pos:start="167:35" pos:end="167:36">23</literal><operator pos:start="167:37" pos:end="167:37">)</operator><operator pos:start="167:38" pos:end="167:38">)</operator> <operator pos:start="167:40" pos:end="167:41">==</operator> <literal type="number" pos:start="167:43" pos:end="167:43">0</literal></expr>)</condition><block type="pseudo" pos:start="169:21" pos:end="169:37"><block_content pos:start="169:21" pos:end="169:37">

                    <expr_stmt pos:start="169:21" pos:end="169:37"><expr pos:start="169:21" pos:end="169:36"><name pos:start="169:21" pos:end="169:26">offset</name> <operator pos:start="169:28" pos:end="169:28">=</operator> <operator pos:start="169:30" pos:end="169:30">-</operator><name pos:start="169:31" pos:end="169:36">offset</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="171:17" pos:end="177:17"><if pos:start="171:17" pos:end="177:17">if <condition pos:start="171:20" pos:end="171:37">(<expr pos:start="171:21" pos:end="171:36"><name pos:start="171:21" pos:end="171:24">insn</name> <operator pos:start="171:26" pos:end="171:26">&amp;</operator> <operator pos:start="171:28" pos:end="171:28">(</operator><literal type="number" pos:start="171:29" pos:end="171:29">1</literal> <operator pos:start="171:31" pos:end="171:32">&lt;&lt;</operator> <literal type="number" pos:start="171:34" pos:end="171:35">24</literal><operator pos:start="171:36" pos:end="171:36">)</operator></expr>)</condition> <block pos:start="171:39" pos:end="177:17">{<block_content pos:start="173:21" pos:end="175:31">

                    <expr_stmt pos:start="173:21" pos:end="173:57"><expr pos:start="173:21" pos:end="173:56"><call pos:start="173:21" pos:end="173:56"><name pos:start="173:21" pos:end="173:36">tcg_gen_addi_i32</name><argument_list pos:start="173:37" pos:end="173:56">(<argument pos:start="173:38" pos:end="173:41"><expr pos:start="173:38" pos:end="173:41"><name pos:start="173:38" pos:end="173:41">addr</name></expr></argument>, <argument pos:start="173:44" pos:end="173:47"><expr pos:start="173:44" pos:end="173:47"><name pos:start="173:44" pos:end="173:47">addr</name></expr></argument>, <argument pos:start="173:50" pos:end="173:55"><expr pos:start="173:50" pos:end="173:55"><name pos:start="173:50" pos:end="173:55">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="175:21" pos:end="175:31"><expr pos:start="175:21" pos:end="175:30"><name pos:start="175:21" pos:end="175:26">offset</name> <operator pos:start="175:28" pos:end="175:28">=</operator> <literal type="number" pos:start="175:30" pos:end="175:30">0</literal></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="179:17" pos:end="207:17"><if pos:start="179:17" pos:end="193:17">if <condition pos:start="179:20" pos:end="179:37">(<expr pos:start="179:21" pos:end="179:36"><name pos:start="179:21" pos:end="179:24">insn</name> <operator pos:start="179:26" pos:end="179:26">&amp;</operator> <operator pos:start="179:28" pos:end="179:28">(</operator><literal type="number" pos:start="179:29" pos:end="179:29">1</literal> <operator pos:start="179:31" pos:end="179:32">&lt;&lt;</operator> <literal type="number" pos:start="179:34" pos:end="179:35">20</literal><operator pos:start="179:36" pos:end="179:36">)</operator></expr>)</condition> <block pos:start="179:39" pos:end="193:17">{<block_content pos:start="183:21" pos:end="191:42">

                    <comment type="block" pos:start="181:21" pos:end="181:30">/* ldrd */</comment>

                    <expr_stmt pos:start="183:21" pos:end="183:53"><expr pos:start="183:21" pos:end="183:52"><name pos:start="183:21" pos:end="183:23">tmp</name> <operator pos:start="183:25" pos:end="183:25">=</operator> <call pos:start="183:27" pos:end="183:52"><name pos:start="183:27" pos:end="183:34">gen_ld32</name><argument_list pos:start="183:35" pos:end="183:52">(<argument pos:start="183:36" pos:end="183:39"><expr pos:start="183:36" pos:end="183:39"><name pos:start="183:36" pos:end="183:39">addr</name></expr></argument>, <argument pos:start="183:42" pos:end="183:51"><expr pos:start="183:42" pos:end="183:51"><call pos:start="183:42" pos:end="183:51"><name pos:start="183:42" pos:end="183:48">IS_USER</name><argument_list pos:start="183:49" pos:end="183:51">(<argument pos:start="183:50" pos:end="183:50"><expr pos:start="183:50" pos:end="183:50"><name pos:start="183:50" pos:end="183:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="185:21" pos:end="185:42"><expr pos:start="185:21" pos:end="185:41"><call pos:start="185:21" pos:end="185:41"><name pos:start="185:21" pos:end="185:29">store_reg</name><argument_list pos:start="185:30" pos:end="185:41">(<argument pos:start="185:31" pos:end="185:31"><expr pos:start="185:31" pos:end="185:31"><name pos:start="185:31" pos:end="185:31">s</name></expr></argument>, <argument pos:start="185:34" pos:end="185:35"><expr pos:start="185:34" pos:end="185:35"><name pos:start="185:34" pos:end="185:35">rs</name></expr></argument>, <argument pos:start="185:38" pos:end="185:40"><expr pos:start="185:38" pos:end="185:40"><name pos:start="185:38" pos:end="185:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="187:21" pos:end="187:52"><expr pos:start="187:21" pos:end="187:51"><call pos:start="187:21" pos:end="187:51"><name pos:start="187:21" pos:end="187:36">tcg_gen_addi_i32</name><argument_list pos:start="187:37" pos:end="187:51">(<argument pos:start="187:38" pos:end="187:41"><expr pos:start="187:38" pos:end="187:41"><name pos:start="187:38" pos:end="187:41">addr</name></expr></argument>, <argument pos:start="187:44" pos:end="187:47"><expr pos:start="187:44" pos:end="187:47"><name pos:start="187:44" pos:end="187:47">addr</name></expr></argument>, <argument pos:start="187:50" pos:end="187:50"><expr pos:start="187:50" pos:end="187:50"><literal type="number" pos:start="187:50" pos:end="187:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="189:21" pos:end="189:53"><expr pos:start="189:21" pos:end="189:52"><name pos:start="189:21" pos:end="189:23">tmp</name> <operator pos:start="189:25" pos:end="189:25">=</operator> <call pos:start="189:27" pos:end="189:52"><name pos:start="189:27" pos:end="189:34">gen_ld32</name><argument_list pos:start="189:35" pos:end="189:52">(<argument pos:start="189:36" pos:end="189:39"><expr pos:start="189:36" pos:end="189:39"><name pos:start="189:36" pos:end="189:39">addr</name></expr></argument>, <argument pos:start="189:42" pos:end="189:51"><expr pos:start="189:42" pos:end="189:51"><call pos:start="189:42" pos:end="189:51"><name pos:start="189:42" pos:end="189:48">IS_USER</name><argument_list pos:start="189:49" pos:end="189:51">(<argument pos:start="189:50" pos:end="189:50"><expr pos:start="189:50" pos:end="189:50"><name pos:start="189:50" pos:end="189:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="191:21" pos:end="191:42"><expr pos:start="191:21" pos:end="191:41"><call pos:start="191:21" pos:end="191:41"><name pos:start="191:21" pos:end="191:29">store_reg</name><argument_list pos:start="191:30" pos:end="191:41">(<argument pos:start="191:31" pos:end="191:31"><expr pos:start="191:31" pos:end="191:31"><name pos:start="191:31" pos:end="191:31">s</name></expr></argument>, <argument pos:start="191:34" pos:end="191:35"><expr pos:start="191:34" pos:end="191:35"><name pos:start="191:34" pos:end="191:35">rd</name></expr></argument>, <argument pos:start="191:38" pos:end="191:40"><expr pos:start="191:38" pos:end="191:40"><name pos:start="191:38" pos:end="191:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="193:19" pos:end="207:17">else <block pos:start="193:24" pos:end="207:17">{<block_content pos:start="197:21" pos:end="205:52">

                    <comment type="block" pos:start="195:21" pos:end="195:30">/* strd */</comment>

                    <expr_stmt pos:start="197:21" pos:end="197:42"><expr pos:start="197:21" pos:end="197:41"><name pos:start="197:21" pos:end="197:23">tmp</name> <operator pos:start="197:25" pos:end="197:25">=</operator> <call pos:start="197:27" pos:end="197:41"><name pos:start="197:27" pos:end="197:34">load_reg</name><argument_list pos:start="197:35" pos:end="197:41">(<argument pos:start="197:36" pos:end="197:36"><expr pos:start="197:36" pos:end="197:36"><name pos:start="197:36" pos:end="197:36">s</name></expr></argument>, <argument pos:start="197:39" pos:end="197:40"><expr pos:start="197:39" pos:end="197:40"><name pos:start="197:39" pos:end="197:40">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="199:21" pos:end="199:52"><expr pos:start="199:21" pos:end="199:51"><call pos:start="199:21" pos:end="199:51"><name pos:start="199:21" pos:end="199:28">gen_st32</name><argument_list pos:start="199:29" pos:end="199:51">(<argument pos:start="199:30" pos:end="199:32"><expr pos:start="199:30" pos:end="199:32"><name pos:start="199:30" pos:end="199:32">tmp</name></expr></argument>, <argument pos:start="199:35" pos:end="199:38"><expr pos:start="199:35" pos:end="199:38"><name pos:start="199:35" pos:end="199:38">addr</name></expr></argument>, <argument pos:start="199:41" pos:end="199:50"><expr pos:start="199:41" pos:end="199:50"><call pos:start="199:41" pos:end="199:50"><name pos:start="199:41" pos:end="199:47">IS_USER</name><argument_list pos:start="199:48" pos:end="199:50">(<argument pos:start="199:49" pos:end="199:49"><expr pos:start="199:49" pos:end="199:49"><name pos:start="199:49" pos:end="199:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="201:21" pos:end="201:52"><expr pos:start="201:21" pos:end="201:51"><call pos:start="201:21" pos:end="201:51"><name pos:start="201:21" pos:end="201:36">tcg_gen_addi_i32</name><argument_list pos:start="201:37" pos:end="201:51">(<argument pos:start="201:38" pos:end="201:41"><expr pos:start="201:38" pos:end="201:41"><name pos:start="201:38" pos:end="201:41">addr</name></expr></argument>, <argument pos:start="201:44" pos:end="201:47"><expr pos:start="201:44" pos:end="201:47"><name pos:start="201:44" pos:end="201:47">addr</name></expr></argument>, <argument pos:start="201:50" pos:end="201:50"><expr pos:start="201:50" pos:end="201:50"><literal type="number" pos:start="201:50" pos:end="201:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="203:21" pos:end="203:42"><expr pos:start="203:21" pos:end="203:41"><name pos:start="203:21" pos:end="203:23">tmp</name> <operator pos:start="203:25" pos:end="203:25">=</operator> <call pos:start="203:27" pos:end="203:41"><name pos:start="203:27" pos:end="203:34">load_reg</name><argument_list pos:start="203:35" pos:end="203:41">(<argument pos:start="203:36" pos:end="203:36"><expr pos:start="203:36" pos:end="203:36"><name pos:start="203:36" pos:end="203:36">s</name></expr></argument>, <argument pos:start="203:39" pos:end="203:40"><expr pos:start="203:39" pos:end="203:40"><name pos:start="203:39" pos:end="203:40">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="205:21" pos:end="205:52"><expr pos:start="205:21" pos:end="205:51"><call pos:start="205:21" pos:end="205:51"><name pos:start="205:21" pos:end="205:28">gen_st32</name><argument_list pos:start="205:29" pos:end="205:51">(<argument pos:start="205:30" pos:end="205:32"><expr pos:start="205:30" pos:end="205:32"><name pos:start="205:30" pos:end="205:32">tmp</name></expr></argument>, <argument pos:start="205:35" pos:end="205:38"><expr pos:start="205:35" pos:end="205:38"><name pos:start="205:35" pos:end="205:38">addr</name></expr></argument>, <argument pos:start="205:41" pos:end="205:50"><expr pos:start="205:41" pos:end="205:50"><call pos:start="205:41" pos:end="205:50"><name pos:start="205:41" pos:end="205:47">IS_USER</name><argument_list pos:start="205:48" pos:end="205:50">(<argument pos:start="205:49" pos:end="205:49"><expr pos:start="205:49" pos:end="205:49"><name pos:start="205:49" pos:end="205:49">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="209:17" pos:end="225:17"><if pos:start="209:17" pos:end="221:17">if <condition pos:start="209:20" pos:end="209:37">(<expr pos:start="209:21" pos:end="209:36"><name pos:start="209:21" pos:end="209:24">insn</name> <operator pos:start="209:26" pos:end="209:26">&amp;</operator> <operator pos:start="209:28" pos:end="209:28">(</operator><literal type="number" pos:start="209:29" pos:end="209:29">1</literal> <operator pos:start="209:31" pos:end="209:32">&lt;&lt;</operator> <literal type="number" pos:start="209:34" pos:end="209:35">21</literal><operator pos:start="209:36" pos:end="209:36">)</operator></expr>)</condition> <block pos:start="209:39" pos:end="221:17">{<block_content pos:start="213:21" pos:end="219:43">

                    <comment type="block" pos:start="211:21" pos:end="211:42">/* Base writeback.  */</comment>

                    <if_stmt pos:start="213:21" pos:end="215:40"><if pos:start="213:21" pos:end="215:40">if <condition pos:start="213:24" pos:end="213:33">(<expr pos:start="213:25" pos:end="213:32"><name pos:start="213:25" pos:end="213:26">rn</name> <operator pos:start="213:28" pos:end="213:29">==</operator> <literal type="number" pos:start="213:31" pos:end="213:32">15</literal></expr>)</condition><block type="pseudo" pos:start="215:25" pos:end="215:40"><block_content pos:start="215:25" pos:end="215:40">

                        <goto pos:start="215:25" pos:end="215:40">goto <name pos:start="215:30" pos:end="215:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="217:21" pos:end="217:61"><expr pos:start="217:21" pos:end="217:60"><call pos:start="217:21" pos:end="217:60"><name pos:start="217:21" pos:end="217:36">tcg_gen_addi_i32</name><argument_list pos:start="217:37" pos:end="217:60">(<argument pos:start="217:38" pos:end="217:41"><expr pos:start="217:38" pos:end="217:41"><name pos:start="217:38" pos:end="217:41">addr</name></expr></argument>, <argument pos:start="217:44" pos:end="217:47"><expr pos:start="217:44" pos:end="217:47"><name pos:start="217:44" pos:end="217:47">addr</name></expr></argument>, <argument pos:start="217:50" pos:end="217:59"><expr pos:start="217:50" pos:end="217:59"><name pos:start="217:50" pos:end="217:55">offset</name> <operator pos:start="217:57" pos:end="217:57">-</operator> <literal type="number" pos:start="217:59" pos:end="217:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="219:21" pos:end="219:43"><expr pos:start="219:21" pos:end="219:42"><call pos:start="219:21" pos:end="219:42"><name pos:start="219:21" pos:end="219:29">store_reg</name><argument_list pos:start="219:30" pos:end="219:42">(<argument pos:start="219:31" pos:end="219:31"><expr pos:start="219:31" pos:end="219:31"><name pos:start="219:31" pos:end="219:31">s</name></expr></argument>, <argument pos:start="219:34" pos:end="219:35"><expr pos:start="219:34" pos:end="219:35"><name pos:start="219:34" pos:end="219:35">rn</name></expr></argument>, <argument pos:start="219:38" pos:end="219:41"><expr pos:start="219:38" pos:end="219:41"><name pos:start="219:38" pos:end="219:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="221:19" pos:end="225:17">else <block pos:start="221:24" pos:end="225:17">{<block_content pos:start="223:21" pos:end="223:35">

                    <expr_stmt pos:start="223:21" pos:end="223:35"><expr pos:start="223:21" pos:end="223:34"><call pos:start="223:21" pos:end="223:34"><name pos:start="223:21" pos:end="223:28">dead_tmp</name><argument_list pos:start="223:29" pos:end="223:34">(<argument pos:start="223:30" pos:end="223:33"><expr pos:start="223:30" pos:end="223:33"><name pos:start="223:30" pos:end="223:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="227:15" pos:end="249:13">else if <condition pos:start="227:23" pos:end="227:47">(<expr pos:start="227:24" pos:end="227:46"><operator pos:start="227:24" pos:end="227:24">(</operator><name pos:start="227:25" pos:end="227:28">insn</name> <operator pos:start="227:30" pos:end="227:30">&amp;</operator> <operator pos:start="227:32" pos:end="227:32">(</operator><literal type="number" pos:start="227:33" pos:end="227:33">1</literal> <operator pos:start="227:35" pos:end="227:36">&lt;&lt;</operator> <literal type="number" pos:start="227:38" pos:end="227:39">23</literal><operator pos:start="227:40" pos:end="227:40">)</operator><operator pos:start="227:41" pos:end="227:41">)</operator> <operator pos:start="227:43" pos:end="227:44">==</operator> <literal type="number" pos:start="227:46" pos:end="227:46">0</literal></expr>)</condition> <block pos:start="227:49" pos:end="249:13">{<block_content pos:start="231:17" pos:end="247:36">

                <comment type="block" pos:start="229:17" pos:end="229:49">/* Load/store exclusive word.  */</comment>

                <expr_stmt pos:start="231:17" pos:end="231:44"><expr pos:start="231:17" pos:end="231:43"><name pos:start="231:17" pos:end="231:20">addr</name> <operator pos:start="231:22" pos:end="231:22">=</operator> <call pos:start="231:24" pos:end="231:43"><name pos:start="231:24" pos:end="231:41">tcg_temp_local_new</name><argument_list pos:start="231:42" pos:end="231:43">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="233:17" pos:end="233:42"><expr pos:start="233:17" pos:end="233:41"><call pos:start="233:17" pos:end="233:41"><name pos:start="233:17" pos:end="233:28">load_reg_var</name><argument_list pos:start="233:29" pos:end="233:41">(<argument pos:start="233:30" pos:end="233:30"><expr pos:start="233:30" pos:end="233:30"><name pos:start="233:30" pos:end="233:30">s</name></expr></argument>, <argument pos:start="233:33" pos:end="233:36"><expr pos:start="233:33" pos:end="233:36"><name pos:start="233:33" pos:end="233:36">addr</name></expr></argument>, <argument pos:start="233:39" pos:end="233:40"><expr pos:start="233:39" pos:end="233:40"><name pos:start="233:39" pos:end="233:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="235:17" pos:end="235:65"><expr pos:start="235:17" pos:end="235:64"><call pos:start="235:17" pos:end="235:64"><name pos:start="235:17" pos:end="235:32">tcg_gen_addi_i32</name><argument_list pos:start="235:33" pos:end="235:64">(<argument pos:start="235:34" pos:end="235:37"><expr pos:start="235:34" pos:end="235:37"><name pos:start="235:34" pos:end="235:37">addr</name></expr></argument>, <argument pos:start="235:40" pos:end="235:43"><expr pos:start="235:40" pos:end="235:43"><name pos:start="235:40" pos:end="235:43">addr</name></expr></argument>, <argument pos:start="235:46" pos:end="235:63"><expr pos:start="235:46" pos:end="235:63"><operator pos:start="235:46" pos:end="235:46">(</operator><name pos:start="235:47" pos:end="235:50">insn</name> <operator pos:start="235:52" pos:end="235:52">&amp;</operator> <literal type="number" pos:start="235:54" pos:end="235:57">0xff</literal><operator pos:start="235:58" pos:end="235:58">)</operator> <operator pos:start="235:60" pos:end="235:61">&lt;&lt;</operator> <literal type="number" pos:start="235:63" pos:end="235:63">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="237:17" pos:end="245:17"><if pos:start="237:17" pos:end="241:17">if <condition pos:start="237:20" pos:end="237:37">(<expr pos:start="237:21" pos:end="237:36"><name pos:start="237:21" pos:end="237:24">insn</name> <operator pos:start="237:26" pos:end="237:26">&amp;</operator> <operator pos:start="237:28" pos:end="237:28">(</operator><literal type="number" pos:start="237:29" pos:end="237:29">1</literal> <operator pos:start="237:31" pos:end="237:32">&lt;&lt;</operator> <literal type="number" pos:start="237:34" pos:end="237:35">20</literal><operator pos:start="237:36" pos:end="237:36">)</operator></expr>)</condition> <block pos:start="237:39" pos:end="241:17">{<block_content pos:start="239:21" pos:end="239:59">

                    <expr_stmt pos:start="239:21" pos:end="239:59"><expr pos:start="239:21" pos:end="239:58"><call pos:start="239:21" pos:end="239:58"><name pos:start="239:21" pos:end="239:38">gen_load_exclusive</name><argument_list pos:start="239:39" pos:end="239:58">(<argument pos:start="239:40" pos:end="239:40"><expr pos:start="239:40" pos:end="239:40"><name pos:start="239:40" pos:end="239:40">s</name></expr></argument>, <argument pos:start="239:43" pos:end="239:44"><expr pos:start="239:43" pos:end="239:44"><name pos:start="239:43" pos:end="239:44">rs</name></expr></argument>, <argument pos:start="239:47" pos:end="239:48"><expr pos:start="239:47" pos:end="239:48"><literal type="number" pos:start="239:47" pos:end="239:48">15</literal></expr></argument>, <argument pos:start="239:51" pos:end="239:54"><expr pos:start="239:51" pos:end="239:54"><name pos:start="239:51" pos:end="239:54">addr</name></expr></argument>, <argument pos:start="239:57" pos:end="239:57"><expr pos:start="239:57" pos:end="239:57"><literal type="number" pos:start="239:57" pos:end="239:57">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="241:19" pos:end="245:17">else <block pos:start="241:24" pos:end="245:17">{<block_content pos:start="243:21" pos:end="243:64">

                    <expr_stmt pos:start="243:21" pos:end="243:64"><expr pos:start="243:21" pos:end="243:63"><call pos:start="243:21" pos:end="243:63"><name pos:start="243:21" pos:end="243:39">gen_store_exclusive</name><argument_list pos:start="243:40" pos:end="243:63">(<argument pos:start="243:41" pos:end="243:41"><expr pos:start="243:41" pos:end="243:41"><name pos:start="243:41" pos:end="243:41">s</name></expr></argument>, <argument pos:start="243:44" pos:end="243:45"><expr pos:start="243:44" pos:end="243:45"><name pos:start="243:44" pos:end="243:45">rd</name></expr></argument>, <argument pos:start="243:48" pos:end="243:49"><expr pos:start="243:48" pos:end="243:49"><name pos:start="243:48" pos:end="243:49">rs</name></expr></argument>, <argument pos:start="243:52" pos:end="243:53"><expr pos:start="243:52" pos:end="243:53"><literal type="number" pos:start="243:52" pos:end="243:53">15</literal></expr></argument>, <argument pos:start="243:56" pos:end="243:59"><expr pos:start="243:56" pos:end="243:59"><name pos:start="243:56" pos:end="243:59">addr</name></expr></argument>, <argument pos:start="243:62" pos:end="243:62"><expr pos:start="243:62" pos:end="243:62"><literal type="number" pos:start="243:62" pos:end="243:62">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="247:17" pos:end="247:36"><expr pos:start="247:17" pos:end="247:35"><call pos:start="247:17" pos:end="247:35"><name pos:start="247:17" pos:end="247:29">tcg_temp_free</name><argument_list pos:start="247:30" pos:end="247:35">(<argument pos:start="247:31" pos:end="247:34"><expr pos:start="247:31" pos:end="247:34"><name pos:start="247:31" pos:end="247:34">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="249:15" pos:end="295:13">else if <condition pos:start="249:23" pos:end="249:46">(<expr pos:start="249:24" pos:end="249:45"><operator pos:start="249:24" pos:end="249:24">(</operator><name pos:start="249:25" pos:end="249:28">insn</name> <operator pos:start="249:30" pos:end="249:30">&amp;</operator> <operator pos:start="249:32" pos:end="249:32">(</operator><literal type="number" pos:start="249:33" pos:end="249:33">1</literal> <operator pos:start="249:35" pos:end="249:36">&lt;&lt;</operator> <literal type="number" pos:start="249:38" pos:end="249:38">6</literal><operator pos:start="249:39" pos:end="249:39">)</operator><operator pos:start="249:40" pos:end="249:40">)</operator> <operator pos:start="249:42" pos:end="249:43">==</operator> <literal type="number" pos:start="249:45" pos:end="249:45">0</literal></expr>)</condition> <block pos:start="249:48" pos:end="295:13">{<block_content pos:start="253:17" pos:end="293:38">

                <comment type="block" pos:start="251:17" pos:end="251:36">/* Table Branch.  */</comment>

                <if_stmt pos:start="253:17" pos:end="263:17"><if pos:start="253:17" pos:end="259:17">if <condition pos:start="253:20" pos:end="253:29">(<expr pos:start="253:21" pos:end="253:28"><name pos:start="253:21" pos:end="253:22">rn</name> <operator pos:start="253:24" pos:end="253:25">==</operator> <literal type="number" pos:start="253:27" pos:end="253:28">15</literal></expr>)</condition> <block pos:start="253:31" pos:end="259:17">{<block_content pos:start="255:21" pos:end="257:50">

                    <expr_stmt pos:start="255:21" pos:end="255:37"><expr pos:start="255:21" pos:end="255:36"><name pos:start="255:21" pos:end="255:24">addr</name> <operator pos:start="255:26" pos:end="255:26">=</operator> <call pos:start="255:28" pos:end="255:36"><name pos:start="255:28" pos:end="255:34">new_tmp</name><argument_list pos:start="255:35" pos:end="255:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="257:21" pos:end="257:50"><expr pos:start="257:21" pos:end="257:49"><call pos:start="257:21" pos:end="257:49"><name pos:start="257:21" pos:end="257:36">tcg_gen_movi_i32</name><argument_list pos:start="257:37" pos:end="257:49">(<argument pos:start="257:38" pos:end="257:41"><expr pos:start="257:38" pos:end="257:41"><name pos:start="257:38" pos:end="257:41">addr</name></expr></argument>, <argument pos:start="257:44" pos:end="257:48"><expr pos:start="257:44" pos:end="257:48"><name pos:start="257:44" pos:end="257:48"><name pos:start="257:44" pos:end="257:44">s</name><operator pos:start="257:45" pos:end="257:46">-&gt;</operator><name pos:start="257:47" pos:end="257:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="259:19" pos:end="263:17">else <block pos:start="259:24" pos:end="263:17">{<block_content pos:start="261:21" pos:end="261:43">

                    <expr_stmt pos:start="261:21" pos:end="261:43"><expr pos:start="261:21" pos:end="261:42"><name pos:start="261:21" pos:end="261:24">addr</name> <operator pos:start="261:26" pos:end="261:26">=</operator> <call pos:start="261:28" pos:end="261:42"><name pos:start="261:28" pos:end="261:35">load_reg</name><argument_list pos:start="261:36" pos:end="261:42">(<argument pos:start="261:37" pos:end="261:37"><expr pos:start="261:37" pos:end="261:37"><name pos:start="261:37" pos:end="261:37">s</name></expr></argument>, <argument pos:start="261:40" pos:end="261:41"><expr pos:start="261:40" pos:end="261:41"><name pos:start="261:40" pos:end="261:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="265:17" pos:end="265:38"><expr pos:start="265:17" pos:end="265:37"><name pos:start="265:17" pos:end="265:19">tmp</name> <operator pos:start="265:21" pos:end="265:21">=</operator> <call pos:start="265:23" pos:end="265:37"><name pos:start="265:23" pos:end="265:30">load_reg</name><argument_list pos:start="265:31" pos:end="265:37">(<argument pos:start="265:32" pos:end="265:32"><expr pos:start="265:32" pos:end="265:32"><name pos:start="265:32" pos:end="265:32">s</name></expr></argument>, <argument pos:start="265:35" pos:end="265:36"><expr pos:start="265:35" pos:end="265:36"><name pos:start="265:35" pos:end="265:36">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="267:17" pos:end="267:49"><expr pos:start="267:17" pos:end="267:48"><call pos:start="267:17" pos:end="267:48"><name pos:start="267:17" pos:end="267:31">tcg_gen_add_i32</name><argument_list pos:start="267:32" pos:end="267:48">(<argument pos:start="267:33" pos:end="267:36"><expr pos:start="267:33" pos:end="267:36"><name pos:start="267:33" pos:end="267:36">addr</name></expr></argument>, <argument pos:start="267:39" pos:end="267:42"><expr pos:start="267:39" pos:end="267:42"><name pos:start="267:39" pos:end="267:42">addr</name></expr></argument>, <argument pos:start="267:45" pos:end="267:47"><expr pos:start="267:45" pos:end="267:47"><name pos:start="267:45" pos:end="267:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="269:17" pos:end="285:17"><if pos:start="269:17" pos:end="279:17">if <condition pos:start="269:20" pos:end="269:36">(<expr pos:start="269:21" pos:end="269:35"><name pos:start="269:21" pos:end="269:24">insn</name> <operator pos:start="269:26" pos:end="269:26">&amp;</operator> <operator pos:start="269:28" pos:end="269:28">(</operator><literal type="number" pos:start="269:29" pos:end="269:29">1</literal> <operator pos:start="269:31" pos:end="269:32">&lt;&lt;</operator> <literal type="number" pos:start="269:34" pos:end="269:34">4</literal><operator pos:start="269:35" pos:end="269:35">)</operator></expr>)</condition> <block pos:start="269:38" pos:end="279:17">{<block_content pos:start="273:21" pos:end="277:54">

                    <comment type="block" pos:start="271:21" pos:end="271:29">/* tbh */</comment>

                    <expr_stmt pos:start="273:21" pos:end="273:53"><expr pos:start="273:21" pos:end="273:52"><call pos:start="273:21" pos:end="273:52"><name pos:start="273:21" pos:end="273:35">tcg_gen_add_i32</name><argument_list pos:start="273:36" pos:end="273:52">(<argument pos:start="273:37" pos:end="273:40"><expr pos:start="273:37" pos:end="273:40"><name pos:start="273:37" pos:end="273:40">addr</name></expr></argument>, <argument pos:start="273:43" pos:end="273:46"><expr pos:start="273:43" pos:end="273:46"><name pos:start="273:43" pos:end="273:46">addr</name></expr></argument>, <argument pos:start="273:49" pos:end="273:51"><expr pos:start="273:49" pos:end="273:51"><name pos:start="273:49" pos:end="273:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="275:21" pos:end="275:34"><expr pos:start="275:21" pos:end="275:33"><call pos:start="275:21" pos:end="275:33"><name pos:start="275:21" pos:end="275:28">dead_tmp</name><argument_list pos:start="275:29" pos:end="275:33">(<argument pos:start="275:30" pos:end="275:32"><expr pos:start="275:30" pos:end="275:32"><name pos:start="275:30" pos:end="275:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="277:21" pos:end="277:54"><expr pos:start="277:21" pos:end="277:53"><name pos:start="277:21" pos:end="277:23">tmp</name> <operator pos:start="277:25" pos:end="277:25">=</operator> <call pos:start="277:27" pos:end="277:53"><name pos:start="277:27" pos:end="277:35">gen_ld16u</name><argument_list pos:start="277:36" pos:end="277:53">(<argument pos:start="277:37" pos:end="277:40"><expr pos:start="277:37" pos:end="277:40"><name pos:start="277:37" pos:end="277:40">addr</name></expr></argument>, <argument pos:start="277:43" pos:end="277:52"><expr pos:start="277:43" pos:end="277:52"><call pos:start="277:43" pos:end="277:52"><name pos:start="277:43" pos:end="277:49">IS_USER</name><argument_list pos:start="277:50" pos:end="277:52">(<argument pos:start="277:51" pos:end="277:51"><expr pos:start="277:51" pos:end="277:51"><name pos:start="277:51" pos:end="277:51">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="279:19" pos:end="285:17">else <block pos:start="279:24" pos:end="285:17">{<block_content pos:start="281:21" pos:end="283:53"> <comment type="block" pos:start="279:26" pos:end="279:34">/* tbb */</comment>

                    <expr_stmt pos:start="281:21" pos:end="281:34"><expr pos:start="281:21" pos:end="281:33"><call pos:start="281:21" pos:end="281:33"><name pos:start="281:21" pos:end="281:28">dead_tmp</name><argument_list pos:start="281:29" pos:end="281:33">(<argument pos:start="281:30" pos:end="281:32"><expr pos:start="281:30" pos:end="281:32"><name pos:start="281:30" pos:end="281:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="283:21" pos:end="283:53"><expr pos:start="283:21" pos:end="283:52"><name pos:start="283:21" pos:end="283:23">tmp</name> <operator pos:start="283:25" pos:end="283:25">=</operator> <call pos:start="283:27" pos:end="283:52"><name pos:start="283:27" pos:end="283:34">gen_ld8u</name><argument_list pos:start="283:35" pos:end="283:52">(<argument pos:start="283:36" pos:end="283:39"><expr pos:start="283:36" pos:end="283:39"><name pos:start="283:36" pos:end="283:39">addr</name></expr></argument>, <argument pos:start="283:42" pos:end="283:51"><expr pos:start="283:42" pos:end="283:51"><call pos:start="283:42" pos:end="283:51"><name pos:start="283:42" pos:end="283:48">IS_USER</name><argument_list pos:start="283:49" pos:end="283:51">(<argument pos:start="283:50" pos:end="283:50"><expr pos:start="283:50" pos:end="283:50"><name pos:start="283:50" pos:end="283:50">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="287:17" pos:end="287:31"><expr pos:start="287:17" pos:end="287:30"><call pos:start="287:17" pos:end="287:30"><name pos:start="287:17" pos:end="287:24">dead_tmp</name><argument_list pos:start="287:25" pos:end="287:30">(<argument pos:start="287:26" pos:end="287:29"><expr pos:start="287:26" pos:end="287:29"><name pos:start="287:26" pos:end="287:29">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="289:17" pos:end="289:46"><expr pos:start="289:17" pos:end="289:45"><call pos:start="289:17" pos:end="289:45"><name pos:start="289:17" pos:end="289:32">tcg_gen_shli_i32</name><argument_list pos:start="289:33" pos:end="289:45">(<argument pos:start="289:34" pos:end="289:36"><expr pos:start="289:34" pos:end="289:36"><name pos:start="289:34" pos:end="289:36">tmp</name></expr></argument>, <argument pos:start="289:39" pos:end="289:41"><expr pos:start="289:39" pos:end="289:41"><name pos:start="289:39" pos:end="289:41">tmp</name></expr></argument>, <argument pos:start="289:44" pos:end="289:44"><expr pos:start="289:44" pos:end="289:44"><literal type="number" pos:start="289:44" pos:end="289:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="291:17" pos:end="291:50"><expr pos:start="291:17" pos:end="291:49"><call pos:start="291:17" pos:end="291:49"><name pos:start="291:17" pos:end="291:32">tcg_gen_addi_i32</name><argument_list pos:start="291:33" pos:end="291:49">(<argument pos:start="291:34" pos:end="291:36"><expr pos:start="291:34" pos:end="291:36"><name pos:start="291:34" pos:end="291:36">tmp</name></expr></argument>, <argument pos:start="291:39" pos:end="291:41"><expr pos:start="291:39" pos:end="291:41"><name pos:start="291:39" pos:end="291:41">tmp</name></expr></argument>, <argument pos:start="291:44" pos:end="291:48"><expr pos:start="291:44" pos:end="291:48"><name pos:start="291:44" pos:end="291:48"><name pos:start="291:44" pos:end="291:44">s</name><operator pos:start="291:45" pos:end="291:46">-&gt;</operator><name pos:start="291:47" pos:end="291:48">pc</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="293:17" pos:end="293:38"><expr pos:start="293:17" pos:end="293:37"><call pos:start="293:17" pos:end="293:37"><name pos:start="293:17" pos:end="293:25">store_reg</name><argument_list pos:start="293:26" pos:end="293:37">(<argument pos:start="293:27" pos:end="293:27"><expr pos:start="293:27" pos:end="293:27"><name pos:start="293:27" pos:end="293:27">s</name></expr></argument>, <argument pos:start="293:30" pos:end="293:31"><expr pos:start="293:30" pos:end="293:31"><literal type="number" pos:start="293:30" pos:end="293:31">15</literal></expr></argument>, <argument pos:start="293:34" pos:end="293:36"><expr pos:start="293:34" pos:end="293:36"><name pos:start="293:34" pos:end="293:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="295:15" pos:end="325:13">else <block pos:start="295:20" pos:end="325:13">{<block_content pos:start="299:17" pos:end="323:36">

                <comment type="block" pos:start="297:17" pos:end="297:69">/* Load/store exclusive byte/halfword/doubleword.  */</comment>

                <expr_stmt pos:start="299:17" pos:end="299:24"><expr pos:start="299:17" pos:end="299:23"><call pos:start="299:17" pos:end="299:23"><name pos:start="299:17" pos:end="299:20">ARCH</name><argument_list pos:start="299:21" pos:end="299:23">(<argument pos:start="299:22" pos:end="299:22"><expr pos:start="299:22" pos:end="299:22"><literal type="number" pos:start="299:22" pos:end="299:22">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="301:17" pos:end="301:39"><expr pos:start="301:17" pos:end="301:38"><name pos:start="301:17" pos:end="301:18">op</name> <operator pos:start="301:20" pos:end="301:20">=</operator> <operator pos:start="301:22" pos:end="301:22">(</operator><name pos:start="301:23" pos:end="301:26">insn</name> <operator pos:start="301:28" pos:end="301:29">&gt;&gt;</operator> <literal type="number" pos:start="301:31" pos:end="301:31">4</literal><operator pos:start="301:32" pos:end="301:32">)</operator> <operator pos:start="301:34" pos:end="301:34">&amp;</operator> <literal type="number" pos:start="301:36" pos:end="301:38">0x3</literal></expr>;</expr_stmt>

                <if_stmt pos:start="303:17" pos:end="307:17"><if pos:start="303:17" pos:end="307:17">if <condition pos:start="303:20" pos:end="303:28">(<expr pos:start="303:21" pos:end="303:27"><name pos:start="303:21" pos:end="303:22">op</name> <operator pos:start="303:24" pos:end="303:25">==</operator> <literal type="number" pos:start="303:27" pos:end="303:27">2</literal></expr>)</condition> <block pos:start="303:30" pos:end="307:17">{<block_content pos:start="305:21" pos:end="305:36">

                    <goto pos:start="305:21" pos:end="305:36">goto <name pos:start="305:26" pos:end="305:35">illegal_op</name>;</goto>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="309:17" pos:end="309:44"><expr pos:start="309:17" pos:end="309:43"><name pos:start="309:17" pos:end="309:20">addr</name> <operator pos:start="309:22" pos:end="309:22">=</operator> <call pos:start="309:24" pos:end="309:43"><name pos:start="309:24" pos:end="309:41">tcg_temp_local_new</name><argument_list pos:start="309:42" pos:end="309:43">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="311:17" pos:end="311:42"><expr pos:start="311:17" pos:end="311:41"><call pos:start="311:17" pos:end="311:41"><name pos:start="311:17" pos:end="311:28">load_reg_var</name><argument_list pos:start="311:29" pos:end="311:41">(<argument pos:start="311:30" pos:end="311:30"><expr pos:start="311:30" pos:end="311:30"><name pos:start="311:30" pos:end="311:30">s</name></expr></argument>, <argument pos:start="311:33" pos:end="311:36"><expr pos:start="311:33" pos:end="311:36"><name pos:start="311:33" pos:end="311:36">addr</name></expr></argument>, <argument pos:start="311:39" pos:end="311:40"><expr pos:start="311:39" pos:end="311:40"><name pos:start="311:39" pos:end="311:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="313:17" pos:end="321:17"><if pos:start="313:17" pos:end="317:17">if <condition pos:start="313:20" pos:end="313:37">(<expr pos:start="313:21" pos:end="313:36"><name pos:start="313:21" pos:end="313:24">insn</name> <operator pos:start="313:26" pos:end="313:26">&amp;</operator> <operator pos:start="313:28" pos:end="313:28">(</operator><literal type="number" pos:start="313:29" pos:end="313:29">1</literal> <operator pos:start="313:31" pos:end="313:32">&lt;&lt;</operator> <literal type="number" pos:start="313:34" pos:end="313:35">20</literal><operator pos:start="313:36" pos:end="313:36">)</operator></expr>)</condition> <block pos:start="313:39" pos:end="317:17">{<block_content pos:start="315:21" pos:end="315:60">

                    <expr_stmt pos:start="315:21" pos:end="315:60"><expr pos:start="315:21" pos:end="315:59"><call pos:start="315:21" pos:end="315:59"><name pos:start="315:21" pos:end="315:38">gen_load_exclusive</name><argument_list pos:start="315:39" pos:end="315:59">(<argument pos:start="315:40" pos:end="315:40"><expr pos:start="315:40" pos:end="315:40"><name pos:start="315:40" pos:end="315:40">s</name></expr></argument>, <argument pos:start="315:43" pos:end="315:44"><expr pos:start="315:43" pos:end="315:44"><name pos:start="315:43" pos:end="315:44">rs</name></expr></argument>, <argument pos:start="315:47" pos:end="315:48"><expr pos:start="315:47" pos:end="315:48"><name pos:start="315:47" pos:end="315:48">rd</name></expr></argument>, <argument pos:start="315:51" pos:end="315:54"><expr pos:start="315:51" pos:end="315:54"><name pos:start="315:51" pos:end="315:54">addr</name></expr></argument>, <argument pos:start="315:57" pos:end="315:58"><expr pos:start="315:57" pos:end="315:58"><name pos:start="315:57" pos:end="315:58">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="317:19" pos:end="321:17">else <block pos:start="317:24" pos:end="321:17">{<block_content pos:start="319:21" pos:end="319:65">

                    <expr_stmt pos:start="319:21" pos:end="319:65"><expr pos:start="319:21" pos:end="319:64"><call pos:start="319:21" pos:end="319:64"><name pos:start="319:21" pos:end="319:39">gen_store_exclusive</name><argument_list pos:start="319:40" pos:end="319:64">(<argument pos:start="319:41" pos:end="319:41"><expr pos:start="319:41" pos:end="319:41"><name pos:start="319:41" pos:end="319:41">s</name></expr></argument>, <argument pos:start="319:44" pos:end="319:45"><expr pos:start="319:44" pos:end="319:45"><name pos:start="319:44" pos:end="319:45">rm</name></expr></argument>, <argument pos:start="319:48" pos:end="319:49"><expr pos:start="319:48" pos:end="319:49"><name pos:start="319:48" pos:end="319:49">rs</name></expr></argument>, <argument pos:start="319:52" pos:end="319:53"><expr pos:start="319:52" pos:end="319:53"><name pos:start="319:52" pos:end="319:53">rd</name></expr></argument>, <argument pos:start="319:56" pos:end="319:59"><expr pos:start="319:56" pos:end="319:59"><name pos:start="319:56" pos:end="319:59">addr</name></expr></argument>, <argument pos:start="319:62" pos:end="319:63"><expr pos:start="319:62" pos:end="319:63"><name pos:start="319:62" pos:end="319:63">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="323:17" pos:end="323:36"><expr pos:start="323:17" pos:end="323:35"><call pos:start="323:17" pos:end="323:35"><name pos:start="323:17" pos:end="323:29">tcg_temp_free</name><argument_list pos:start="323:30" pos:end="323:35">(<argument pos:start="323:31" pos:end="323:34"><expr pos:start="323:31" pos:end="323:34"><name pos:start="323:31" pos:end="323:34">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="327:11" pos:end="543:9">else <block pos:start="327:16" pos:end="543:9">{<block_content pos:start="331:13" pos:end="541:13">

            <comment type="block" pos:start="329:13" pos:end="329:49">/* Load/store multiple, RFE, SRS.  */</comment>

            <if_stmt pos:start="331:13" pos:end="541:13"><if pos:start="331:13" pos:end="455:13">if <condition pos:start="331:16" pos:end="331:57">(<expr pos:start="331:17" pos:end="331:56"><operator pos:start="331:17" pos:end="331:17">(</operator><operator pos:start="331:18" pos:end="331:18">(</operator><name pos:start="331:19" pos:end="331:22">insn</name> <operator pos:start="331:24" pos:end="331:25">&gt;&gt;</operator> <literal type="number" pos:start="331:27" pos:end="331:28">23</literal><operator pos:start="331:29" pos:end="331:29">)</operator> <operator pos:start="331:31" pos:end="331:31">&amp;</operator> <literal type="number" pos:start="331:33" pos:end="331:33">1</literal><operator pos:start="331:34" pos:end="331:34">)</operator> <operator pos:start="331:36" pos:end="331:37">==</operator> <operator pos:start="331:39" pos:end="331:39">(</operator><operator pos:start="331:40" pos:end="331:40">(</operator><name pos:start="331:41" pos:end="331:44">insn</name> <operator pos:start="331:46" pos:end="331:47">&gt;&gt;</operator> <literal type="number" pos:start="331:49" pos:end="331:50">24</literal><operator pos:start="331:51" pos:end="331:51">)</operator> <operator pos:start="331:53" pos:end="331:53">&amp;</operator> <literal type="number" pos:start="331:55" pos:end="331:55">1</literal><operator pos:start="331:56" pos:end="331:56">)</operator></expr>)</condition> <block pos:start="331:59" pos:end="455:13">{<block_content pos:start="335:17" pos:end="453:17">

                <comment type="block" pos:start="333:17" pos:end="333:50">/* Not available in user mode.  */</comment>

                <if_stmt pos:start="335:17" pos:end="337:36"><if pos:start="335:17" pos:end="337:36">if <condition pos:start="335:20" pos:end="335:31">(<expr pos:start="335:21" pos:end="335:30"><call pos:start="335:21" pos:end="335:30"><name pos:start="335:21" pos:end="335:27">IS_USER</name><argument_list pos:start="335:28" pos:end="335:30">(<argument pos:start="335:29" pos:end="335:29"><expr pos:start="335:29" pos:end="335:29"><name pos:start="335:29" pos:end="335:29">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="337:21" pos:end="337:36"><block_content pos:start="337:21" pos:end="337:36">

                    <goto pos:start="337:21" pos:end="337:36">goto <name pos:start="337:26" pos:end="337:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="339:17" pos:end="453:17"><if pos:start="339:17" pos:end="381:17">if <condition pos:start="339:20" pos:end="339:37">(<expr pos:start="339:21" pos:end="339:36"><name pos:start="339:21" pos:end="339:24">insn</name> <operator pos:start="339:26" pos:end="339:26">&amp;</operator> <operator pos:start="339:28" pos:end="339:28">(</operator><literal type="number" pos:start="339:29" pos:end="339:29">1</literal> <operator pos:start="339:31" pos:end="339:32">&lt;&lt;</operator> <literal type="number" pos:start="339:34" pos:end="339:35">20</literal><operator pos:start="339:36" pos:end="339:36">)</operator></expr>)</condition> <block pos:start="339:39" pos:end="381:17">{<block_content pos:start="343:21" pos:end="379:42">

                    <comment type="block" pos:start="341:21" pos:end="341:29">/* rfe */</comment>

                    <expr_stmt pos:start="343:21" pos:end="343:43"><expr pos:start="343:21" pos:end="343:42"><name pos:start="343:21" pos:end="343:24">addr</name> <operator pos:start="343:26" pos:end="343:26">=</operator> <call pos:start="343:28" pos:end="343:42"><name pos:start="343:28" pos:end="343:35">load_reg</name><argument_list pos:start="343:36" pos:end="343:42">(<argument pos:start="343:37" pos:end="343:37"><expr pos:start="343:37" pos:end="343:37"><name pos:start="343:37" pos:end="343:37">s</name></expr></argument>, <argument pos:start="343:40" pos:end="343:41"><expr pos:start="343:40" pos:end="343:41"><name pos:start="343:40" pos:end="343:41">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="345:21" pos:end="347:57"><if pos:start="345:21" pos:end="347:57">if <condition pos:start="345:24" pos:end="345:48">(<expr pos:start="345:25" pos:end="345:47"><operator pos:start="345:25" pos:end="345:25">(</operator><name pos:start="345:26" pos:end="345:29">insn</name> <operator pos:start="345:31" pos:end="345:31">&amp;</operator> <operator pos:start="345:33" pos:end="345:33">(</operator><literal type="number" pos:start="345:34" pos:end="345:34">1</literal> <operator pos:start="345:36" pos:end="345:37">&lt;&lt;</operator> <literal type="number" pos:start="345:39" pos:end="345:40">24</literal><operator pos:start="345:41" pos:end="345:41">)</operator><operator pos:start="345:42" pos:end="345:42">)</operator> <operator pos:start="345:44" pos:end="345:45">==</operator> <literal type="number" pos:start="345:47" pos:end="345:47">0</literal></expr>)</condition><block type="pseudo" pos:start="347:25" pos:end="347:57"><block_content pos:start="347:25" pos:end="347:57">

                        <expr_stmt pos:start="347:25" pos:end="347:57"><expr pos:start="347:25" pos:end="347:56"><call pos:start="347:25" pos:end="347:56"><name pos:start="347:25" pos:end="347:40">tcg_gen_addi_i32</name><argument_list pos:start="347:41" pos:end="347:56">(<argument pos:start="347:42" pos:end="347:45"><expr pos:start="347:42" pos:end="347:45"><name pos:start="347:42" pos:end="347:45">addr</name></expr></argument>, <argument pos:start="347:48" pos:end="347:51"><expr pos:start="347:48" pos:end="347:51"><name pos:start="347:48" pos:end="347:51">addr</name></expr></argument>, <argument pos:start="347:54" pos:end="347:55"><expr pos:start="347:54" pos:end="347:55"><operator pos:start="347:54" pos:end="347:54">-</operator><literal type="number" pos:start="347:55" pos:end="347:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="349:21" pos:end="349:63">/* Load PC into tmp and CPSR into tmp2.  */</comment>

                    <expr_stmt pos:start="351:21" pos:end="351:44"><expr pos:start="351:21" pos:end="351:43"><name pos:start="351:21" pos:end="351:23">tmp</name> <operator pos:start="351:25" pos:end="351:25">=</operator> <call pos:start="351:27" pos:end="351:43"><name pos:start="351:27" pos:end="351:34">gen_ld32</name><argument_list pos:start="351:35" pos:end="351:43">(<argument pos:start="351:36" pos:end="351:39"><expr pos:start="351:36" pos:end="351:39"><name pos:start="351:36" pos:end="351:39">addr</name></expr></argument>, <argument pos:start="351:42" pos:end="351:42"><expr pos:start="351:42" pos:end="351:42"><literal type="number" pos:start="351:42" pos:end="351:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="353:21" pos:end="353:52"><expr pos:start="353:21" pos:end="353:51"><call pos:start="353:21" pos:end="353:51"><name pos:start="353:21" pos:end="353:36">tcg_gen_addi_i32</name><argument_list pos:start="353:37" pos:end="353:51">(<argument pos:start="353:38" pos:end="353:41"><expr pos:start="353:38" pos:end="353:41"><name pos:start="353:38" pos:end="353:41">addr</name></expr></argument>, <argument pos:start="353:44" pos:end="353:47"><expr pos:start="353:44" pos:end="353:47"><name pos:start="353:44" pos:end="353:47">addr</name></expr></argument>, <argument pos:start="353:50" pos:end="353:50"><expr pos:start="353:50" pos:end="353:50"><literal type="number" pos:start="353:50" pos:end="353:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="355:21" pos:end="355:45"><expr pos:start="355:21" pos:end="355:44"><name pos:start="355:21" pos:end="355:24">tmp2</name> <operator pos:start="355:26" pos:end="355:26">=</operator> <call pos:start="355:28" pos:end="355:44"><name pos:start="355:28" pos:end="355:35">gen_ld32</name><argument_list pos:start="355:36" pos:end="355:44">(<argument pos:start="355:37" pos:end="355:40"><expr pos:start="355:37" pos:end="355:40"><name pos:start="355:37" pos:end="355:40">addr</name></expr></argument>, <argument pos:start="355:43" pos:end="355:43"><expr pos:start="355:43" pos:end="355:43"><literal type="number" pos:start="355:43" pos:end="355:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="357:21" pos:end="377:21"><if pos:start="357:21" pos:end="373:21">if <condition pos:start="357:24" pos:end="357:41">(<expr pos:start="357:25" pos:end="357:40"><name pos:start="357:25" pos:end="357:28">insn</name> <operator pos:start="357:30" pos:end="357:30">&amp;</operator> <operator pos:start="357:32" pos:end="357:32">(</operator><literal type="number" pos:start="357:33" pos:end="357:33">1</literal> <operator pos:start="357:35" pos:end="357:36">&lt;&lt;</operator> <literal type="number" pos:start="357:38" pos:end="357:39">21</literal><operator pos:start="357:40" pos:end="357:40">)</operator></expr>)</condition> <block pos:start="357:43" pos:end="373:21">{<block_content pos:start="361:25" pos:end="371:47">

                        <comment type="block" pos:start="359:25" pos:end="359:46">/* Base writeback.  */</comment>

                        <if_stmt pos:start="361:25" pos:end="369:25"><if pos:start="361:25" pos:end="365:25">if <condition pos:start="361:28" pos:end="361:45">(<expr pos:start="361:29" pos:end="361:44"><name pos:start="361:29" pos:end="361:32">insn</name> <operator pos:start="361:34" pos:end="361:34">&amp;</operator> <operator pos:start="361:36" pos:end="361:36">(</operator><literal type="number" pos:start="361:37" pos:end="361:37">1</literal> <operator pos:start="361:39" pos:end="361:40">&lt;&lt;</operator> <literal type="number" pos:start="361:42" pos:end="361:43">24</literal><operator pos:start="361:44" pos:end="361:44">)</operator></expr>)</condition> <block pos:start="361:47" pos:end="365:25">{<block_content pos:start="363:29" pos:end="363:60">

                            <expr_stmt pos:start="363:29" pos:end="363:60"><expr pos:start="363:29" pos:end="363:59"><call pos:start="363:29" pos:end="363:59"><name pos:start="363:29" pos:end="363:44">tcg_gen_addi_i32</name><argument_list pos:start="363:45" pos:end="363:59">(<argument pos:start="363:46" pos:end="363:49"><expr pos:start="363:46" pos:end="363:49"><name pos:start="363:46" pos:end="363:49">addr</name></expr></argument>, <argument pos:start="363:52" pos:end="363:55"><expr pos:start="363:52" pos:end="363:55"><name pos:start="363:52" pos:end="363:55">addr</name></expr></argument>, <argument pos:start="363:58" pos:end="363:58"><expr pos:start="363:58" pos:end="363:58"><literal type="number" pos:start="363:58" pos:end="363:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="365:27" pos:end="369:25">else <block pos:start="365:32" pos:end="369:25">{<block_content pos:start="367:29" pos:end="367:61">

                            <expr_stmt pos:start="367:29" pos:end="367:61"><expr pos:start="367:29" pos:end="367:60"><call pos:start="367:29" pos:end="367:60"><name pos:start="367:29" pos:end="367:44">tcg_gen_addi_i32</name><argument_list pos:start="367:45" pos:end="367:60">(<argument pos:start="367:46" pos:end="367:49"><expr pos:start="367:46" pos:end="367:49"><name pos:start="367:46" pos:end="367:49">addr</name></expr></argument>, <argument pos:start="367:52" pos:end="367:55"><expr pos:start="367:52" pos:end="367:55"><name pos:start="367:52" pos:end="367:55">addr</name></expr></argument>, <argument pos:start="367:58" pos:end="367:59"><expr pos:start="367:58" pos:end="367:59"><operator pos:start="367:58" pos:end="367:58">-</operator><literal type="number" pos:start="367:59" pos:end="367:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="371:25" pos:end="371:47"><expr pos:start="371:25" pos:end="371:46"><call pos:start="371:25" pos:end="371:46"><name pos:start="371:25" pos:end="371:33">store_reg</name><argument_list pos:start="371:34" pos:end="371:46">(<argument pos:start="371:35" pos:end="371:35"><expr pos:start="371:35" pos:end="371:35"><name pos:start="371:35" pos:end="371:35">s</name></expr></argument>, <argument pos:start="371:38" pos:end="371:39"><expr pos:start="371:38" pos:end="371:39"><name pos:start="371:38" pos:end="371:39">rn</name></expr></argument>, <argument pos:start="371:42" pos:end="371:45"><expr pos:start="371:42" pos:end="371:45"><name pos:start="371:42" pos:end="371:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="373:23" pos:end="377:21">else <block pos:start="373:28" pos:end="377:21">{<block_content pos:start="375:25" pos:end="375:39">

                        <expr_stmt pos:start="375:25" pos:end="375:39"><expr pos:start="375:25" pos:end="375:38"><call pos:start="375:25" pos:end="375:38"><name pos:start="375:25" pos:end="375:32">dead_tmp</name><argument_list pos:start="375:33" pos:end="375:38">(<argument pos:start="375:34" pos:end="375:37"><expr pos:start="375:34" pos:end="375:37"><name pos:start="375:34" pos:end="375:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="379:21" pos:end="379:42"><expr pos:start="379:21" pos:end="379:41"><call pos:start="379:21" pos:end="379:41"><name pos:start="379:21" pos:end="379:27">gen_rfe</name><argument_list pos:start="379:28" pos:end="379:41">(<argument pos:start="379:29" pos:end="379:29"><expr pos:start="379:29" pos:end="379:29"><name pos:start="379:29" pos:end="379:29">s</name></expr></argument>, <argument pos:start="379:32" pos:end="379:34"><expr pos:start="379:32" pos:end="379:34"><name pos:start="379:32" pos:end="379:34">tmp</name></expr></argument>, <argument pos:start="379:37" pos:end="379:40"><expr pos:start="379:37" pos:end="379:40"><name pos:start="379:37" pos:end="379:40">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="381:19" pos:end="453:17">else <block pos:start="381:24" pos:end="453:17">{<block_content pos:start="385:21" pos:end="451:21">

                    <comment type="block" pos:start="383:21" pos:end="383:29">/* srs */</comment>

                    <expr_stmt pos:start="385:21" pos:end="385:39"><expr pos:start="385:21" pos:end="385:38"><name pos:start="385:21" pos:end="385:22">op</name> <operator pos:start="385:24" pos:end="385:24">=</operator> <operator pos:start="385:26" pos:end="385:26">(</operator><name pos:start="385:27" pos:end="385:30">insn</name> <operator pos:start="385:32" pos:end="385:32">&amp;</operator> <literal type="number" pos:start="385:34" pos:end="385:37">0x1f</literal><operator pos:start="385:38" pos:end="385:38">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="387:21" pos:end="401:21"><if pos:start="387:21" pos:end="391:21">if <condition pos:start="387:24" pos:end="387:60">(<expr pos:start="387:25" pos:end="387:59"><name pos:start="387:25" pos:end="387:26">op</name> <operator pos:start="387:28" pos:end="387:29">==</operator> <operator pos:start="387:31" pos:end="387:31">(</operator><name pos:start="387:32" pos:end="387:49"><name pos:start="387:32" pos:end="387:34">env</name><operator pos:start="387:35" pos:end="387:36">-&gt;</operator><name pos:start="387:37" pos:end="387:49">uncached_cpsr</name></name> <operator pos:start="387:51" pos:end="387:51">&amp;</operator> <name pos:start="387:53" pos:end="387:58">CPSR_M</name><operator pos:start="387:59" pos:end="387:59">)</operator></expr>)</condition> <block pos:start="387:62" pos:end="391:21">{<block_content pos:start="389:25" pos:end="389:47">

                        <expr_stmt pos:start="389:25" pos:end="389:47"><expr pos:start="389:25" pos:end="389:46"><name pos:start="389:25" pos:end="389:28">addr</name> <operator pos:start="389:30" pos:end="389:30">=</operator> <call pos:start="389:32" pos:end="389:46"><name pos:start="389:32" pos:end="389:39">load_reg</name><argument_list pos:start="389:40" pos:end="389:46">(<argument pos:start="389:41" pos:end="389:41"><expr pos:start="389:41" pos:end="389:41"><name pos:start="389:41" pos:end="389:41">s</name></expr></argument>, <argument pos:start="389:44" pos:end="389:45"><expr pos:start="389:44" pos:end="389:45"><literal type="number" pos:start="389:44" pos:end="389:45">13</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="391:23" pos:end="401:21">else <block pos:start="391:28" pos:end="401:21">{<block_content pos:start="393:25" pos:end="399:47">

                        <expr_stmt pos:start="393:25" pos:end="393:41"><expr pos:start="393:25" pos:end="393:40"><name pos:start="393:25" pos:end="393:28">addr</name> <operator pos:start="393:30" pos:end="393:30">=</operator> <call pos:start="393:32" pos:end="393:40"><name pos:start="393:32" pos:end="393:38">new_tmp</name><argument_list pos:start="393:39" pos:end="393:40">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="395:25" pos:end="395:48"><expr pos:start="395:25" pos:end="395:47"><name pos:start="395:25" pos:end="395:27">tmp</name> <operator pos:start="395:29" pos:end="395:29">=</operator> <call pos:start="395:31" pos:end="395:47"><name pos:start="395:31" pos:end="395:43">tcg_const_i32</name><argument_list pos:start="395:44" pos:end="395:47">(<argument pos:start="395:45" pos:end="395:46"><expr pos:start="395:45" pos:end="395:46"><name pos:start="395:45" pos:end="395:46">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="397:25" pos:end="397:70"><expr pos:start="397:25" pos:end="397:69"><call pos:start="397:25" pos:end="397:69"><name pos:start="397:25" pos:end="397:49">gen_helper_get_r13_banked</name><argument_list pos:start="397:50" pos:end="397:69">(<argument pos:start="397:51" pos:end="397:54"><expr pos:start="397:51" pos:end="397:54"><name pos:start="397:51" pos:end="397:54">addr</name></expr></argument>, <argument pos:start="397:57" pos:end="397:63"><expr pos:start="397:57" pos:end="397:63"><name pos:start="397:57" pos:end="397:63">cpu_env</name></expr></argument>, <argument pos:start="397:66" pos:end="397:68"><expr pos:start="397:66" pos:end="397:68"><name pos:start="397:66" pos:end="397:68">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="399:25" pos:end="399:47"><expr pos:start="399:25" pos:end="399:46"><call pos:start="399:25" pos:end="399:46"><name pos:start="399:25" pos:end="399:41">tcg_temp_free_i32</name><argument_list pos:start="399:42" pos:end="399:46">(<argument pos:start="399:43" pos:end="399:45"><expr pos:start="399:43" pos:end="399:45"><name pos:start="399:43" pos:end="399:45">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <if_stmt pos:start="403:21" pos:end="407:21"><if pos:start="403:21" pos:end="407:21">if <condition pos:start="403:24" pos:end="403:48">(<expr pos:start="403:25" pos:end="403:47"><operator pos:start="403:25" pos:end="403:25">(</operator><name pos:start="403:26" pos:end="403:29">insn</name> <operator pos:start="403:31" pos:end="403:31">&amp;</operator> <operator pos:start="403:33" pos:end="403:33">(</operator><literal type="number" pos:start="403:34" pos:end="403:34">1</literal> <operator pos:start="403:36" pos:end="403:37">&lt;&lt;</operator> <literal type="number" pos:start="403:39" pos:end="403:40">24</literal><operator pos:start="403:41" pos:end="403:41">)</operator><operator pos:start="403:42" pos:end="403:42">)</operator> <operator pos:start="403:44" pos:end="403:45">==</operator> <literal type="number" pos:start="403:47" pos:end="403:47">0</literal></expr>)</condition> <block pos:start="403:50" pos:end="407:21">{<block_content pos:start="405:25" pos:end="405:57">

                        <expr_stmt pos:start="405:25" pos:end="405:57"><expr pos:start="405:25" pos:end="405:56"><call pos:start="405:25" pos:end="405:56"><name pos:start="405:25" pos:end="405:40">tcg_gen_addi_i32</name><argument_list pos:start="405:41" pos:end="405:56">(<argument pos:start="405:42" pos:end="405:45"><expr pos:start="405:42" pos:end="405:45"><name pos:start="405:42" pos:end="405:45">addr</name></expr></argument>, <argument pos:start="405:48" pos:end="405:51"><expr pos:start="405:48" pos:end="405:51"><name pos:start="405:48" pos:end="405:51">addr</name></expr></argument>, <argument pos:start="405:54" pos:end="405:55"><expr pos:start="405:54" pos:end="405:55"><operator pos:start="405:54" pos:end="405:54">-</operator><literal type="number" pos:start="405:55" pos:end="405:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <expr_stmt pos:start="409:21" pos:end="409:42"><expr pos:start="409:21" pos:end="409:41"><name pos:start="409:21" pos:end="409:23">tmp</name> <operator pos:start="409:25" pos:end="409:25">=</operator> <call pos:start="409:27" pos:end="409:41"><name pos:start="409:27" pos:end="409:34">load_reg</name><argument_list pos:start="409:35" pos:end="409:41">(<argument pos:start="409:36" pos:end="409:36"><expr pos:start="409:36" pos:end="409:36"><name pos:start="409:36" pos:end="409:36">s</name></expr></argument>, <argument pos:start="409:39" pos:end="409:40"><expr pos:start="409:39" pos:end="409:40"><literal type="number" pos:start="409:39" pos:end="409:40">14</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="411:21" pos:end="411:43"><expr pos:start="411:21" pos:end="411:42"><call pos:start="411:21" pos:end="411:42"><name pos:start="411:21" pos:end="411:28">gen_st32</name><argument_list pos:start="411:29" pos:end="411:42">(<argument pos:start="411:30" pos:end="411:32"><expr pos:start="411:30" pos:end="411:32"><name pos:start="411:30" pos:end="411:32">tmp</name></expr></argument>, <argument pos:start="411:35" pos:end="411:38"><expr pos:start="411:35" pos:end="411:38"><name pos:start="411:35" pos:end="411:38">addr</name></expr></argument>, <argument pos:start="411:41" pos:end="411:41"><expr pos:start="411:41" pos:end="411:41"><literal type="number" pos:start="411:41" pos:end="411:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="413:21" pos:end="413:52"><expr pos:start="413:21" pos:end="413:51"><call pos:start="413:21" pos:end="413:51"><name pos:start="413:21" pos:end="413:36">tcg_gen_addi_i32</name><argument_list pos:start="413:37" pos:end="413:51">(<argument pos:start="413:38" pos:end="413:41"><expr pos:start="413:38" pos:end="413:41"><name pos:start="413:38" pos:end="413:41">addr</name></expr></argument>, <argument pos:start="413:44" pos:end="413:47"><expr pos:start="413:44" pos:end="413:47"><name pos:start="413:44" pos:end="413:47">addr</name></expr></argument>, <argument pos:start="413:50" pos:end="413:50"><expr pos:start="413:50" pos:end="413:50"><literal type="number" pos:start="413:50" pos:end="413:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="415:21" pos:end="415:36"><expr pos:start="415:21" pos:end="415:35"><name pos:start="415:21" pos:end="415:23">tmp</name> <operator pos:start="415:25" pos:end="415:25">=</operator> <call pos:start="415:27" pos:end="415:35"><name pos:start="415:27" pos:end="415:33">new_tmp</name><argument_list pos:start="415:34" pos:end="415:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="417:21" pos:end="417:46"><expr pos:start="417:21" pos:end="417:45"><call pos:start="417:21" pos:end="417:45"><name pos:start="417:21" pos:end="417:40">gen_helper_cpsr_read</name><argument_list pos:start="417:41" pos:end="417:45">(<argument pos:start="417:42" pos:end="417:44"><expr pos:start="417:42" pos:end="417:44"><name pos:start="417:42" pos:end="417:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="419:21" pos:end="419:43"><expr pos:start="419:21" pos:end="419:42"><call pos:start="419:21" pos:end="419:42"><name pos:start="419:21" pos:end="419:28">gen_st32</name><argument_list pos:start="419:29" pos:end="419:42">(<argument pos:start="419:30" pos:end="419:32"><expr pos:start="419:30" pos:end="419:32"><name pos:start="419:30" pos:end="419:32">tmp</name></expr></argument>, <argument pos:start="419:35" pos:end="419:38"><expr pos:start="419:35" pos:end="419:38"><name pos:start="419:35" pos:end="419:38">addr</name></expr></argument>, <argument pos:start="419:41" pos:end="419:41"><expr pos:start="419:41" pos:end="419:41"><literal type="number" pos:start="419:41" pos:end="419:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="421:21" pos:end="451:21"><if pos:start="421:21" pos:end="447:21">if <condition pos:start="421:24" pos:end="421:41">(<expr pos:start="421:25" pos:end="421:40"><name pos:start="421:25" pos:end="421:28">insn</name> <operator pos:start="421:30" pos:end="421:30">&amp;</operator> <operator pos:start="421:32" pos:end="421:32">(</operator><literal type="number" pos:start="421:33" pos:end="421:33">1</literal> <operator pos:start="421:35" pos:end="421:36">&lt;&lt;</operator> <literal type="number" pos:start="421:38" pos:end="421:39">21</literal><operator pos:start="421:40" pos:end="421:40">)</operator></expr>)</condition> <block pos:start="421:43" pos:end="447:21">{<block_content pos:start="423:25" pos:end="445:25">

                        <if_stmt pos:start="423:25" pos:end="431:25"><if pos:start="423:25" pos:end="427:25">if <condition pos:start="423:28" pos:end="423:52">(<expr pos:start="423:29" pos:end="423:51"><operator pos:start="423:29" pos:end="423:29">(</operator><name pos:start="423:30" pos:end="423:33">insn</name> <operator pos:start="423:35" pos:end="423:35">&amp;</operator> <operator pos:start="423:37" pos:end="423:37">(</operator><literal type="number" pos:start="423:38" pos:end="423:38">1</literal> <operator pos:start="423:40" pos:end="423:41">&lt;&lt;</operator> <literal type="number" pos:start="423:43" pos:end="423:44">24</literal><operator pos:start="423:45" pos:end="423:45">)</operator><operator pos:start="423:46" pos:end="423:46">)</operator> <operator pos:start="423:48" pos:end="423:49">==</operator> <literal type="number" pos:start="423:51" pos:end="423:51">0</literal></expr>)</condition> <block pos:start="423:54" pos:end="427:25">{<block_content pos:start="425:29" pos:end="425:61">

                            <expr_stmt pos:start="425:29" pos:end="425:61"><expr pos:start="425:29" pos:end="425:60"><call pos:start="425:29" pos:end="425:60"><name pos:start="425:29" pos:end="425:44">tcg_gen_addi_i32</name><argument_list pos:start="425:45" pos:end="425:60">(<argument pos:start="425:46" pos:end="425:49"><expr pos:start="425:46" pos:end="425:49"><name pos:start="425:46" pos:end="425:49">addr</name></expr></argument>, <argument pos:start="425:52" pos:end="425:55"><expr pos:start="425:52" pos:end="425:55"><name pos:start="425:52" pos:end="425:55">addr</name></expr></argument>, <argument pos:start="425:58" pos:end="425:59"><expr pos:start="425:58" pos:end="425:59"><operator pos:start="425:58" pos:end="425:58">-</operator><literal type="number" pos:start="425:59" pos:end="425:59">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="427:27" pos:end="431:25">else <block pos:start="427:32" pos:end="431:25">{<block_content pos:start="429:29" pos:end="429:60">

                            <expr_stmt pos:start="429:29" pos:end="429:60"><expr pos:start="429:29" pos:end="429:59"><call pos:start="429:29" pos:end="429:59"><name pos:start="429:29" pos:end="429:44">tcg_gen_addi_i32</name><argument_list pos:start="429:45" pos:end="429:59">(<argument pos:start="429:46" pos:end="429:49"><expr pos:start="429:46" pos:end="429:49"><name pos:start="429:46" pos:end="429:49">addr</name></expr></argument>, <argument pos:start="429:52" pos:end="429:55"><expr pos:start="429:52" pos:end="429:55"><name pos:start="429:52" pos:end="429:55">addr</name></expr></argument>, <argument pos:start="429:58" pos:end="429:58"><expr pos:start="429:58" pos:end="429:58"><literal type="number" pos:start="429:58" pos:end="429:58">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <if_stmt pos:start="433:25" pos:end="445:25"><if pos:start="433:25" pos:end="437:25">if <condition pos:start="433:28" pos:end="433:64">(<expr pos:start="433:29" pos:end="433:63"><name pos:start="433:29" pos:end="433:30">op</name> <operator pos:start="433:32" pos:end="433:33">==</operator> <operator pos:start="433:35" pos:end="433:35">(</operator><name pos:start="433:36" pos:end="433:53"><name pos:start="433:36" pos:end="433:38">env</name><operator pos:start="433:39" pos:end="433:40">-&gt;</operator><name pos:start="433:41" pos:end="433:53">uncached_cpsr</name></name> <operator pos:start="433:55" pos:end="433:55">&amp;</operator> <name pos:start="433:57" pos:end="433:62">CPSR_M</name><operator pos:start="433:63" pos:end="433:63">)</operator></expr>)</condition> <block pos:start="433:66" pos:end="437:25">{<block_content pos:start="435:29" pos:end="435:51">

                            <expr_stmt pos:start="435:29" pos:end="435:51"><expr pos:start="435:29" pos:end="435:50"><call pos:start="435:29" pos:end="435:50"><name pos:start="435:29" pos:end="435:37">store_reg</name><argument_list pos:start="435:38" pos:end="435:50">(<argument pos:start="435:39" pos:end="435:39"><expr pos:start="435:39" pos:end="435:39"><name pos:start="435:39" pos:end="435:39">s</name></expr></argument>, <argument pos:start="435:42" pos:end="435:43"><expr pos:start="435:42" pos:end="435:43"><literal type="number" pos:start="435:42" pos:end="435:43">13</literal></expr></argument>, <argument pos:start="435:46" pos:end="435:49"><expr pos:start="435:46" pos:end="435:49"><name pos:start="435:46" pos:end="435:49">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="437:27" pos:end="445:25">else <block pos:start="437:32" pos:end="445:25">{<block_content pos:start="439:29" pos:end="443:51">

                            <expr_stmt pos:start="439:29" pos:end="439:52"><expr pos:start="439:29" pos:end="439:51"><name pos:start="439:29" pos:end="439:31">tmp</name> <operator pos:start="439:33" pos:end="439:33">=</operator> <call pos:start="439:35" pos:end="439:51"><name pos:start="439:35" pos:end="439:47">tcg_const_i32</name><argument_list pos:start="439:48" pos:end="439:51">(<argument pos:start="439:49" pos:end="439:50"><expr pos:start="439:49" pos:end="439:50"><name pos:start="439:49" pos:end="439:50">op</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="441:29" pos:end="441:74"><expr pos:start="441:29" pos:end="441:73"><call pos:start="441:29" pos:end="441:73"><name pos:start="441:29" pos:end="441:53">gen_helper_set_r13_banked</name><argument_list pos:start="441:54" pos:end="441:73">(<argument pos:start="441:55" pos:end="441:61"><expr pos:start="441:55" pos:end="441:61"><name pos:start="441:55" pos:end="441:61">cpu_env</name></expr></argument>, <argument pos:start="441:64" pos:end="441:66"><expr pos:start="441:64" pos:end="441:66"><name pos:start="441:64" pos:end="441:66">tmp</name></expr></argument>, <argument pos:start="441:69" pos:end="441:72"><expr pos:start="441:69" pos:end="441:72"><name pos:start="441:69" pos:end="441:72">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="443:29" pos:end="443:51"><expr pos:start="443:29" pos:end="443:50"><call pos:start="443:29" pos:end="443:50"><name pos:start="443:29" pos:end="443:45">tcg_temp_free_i32</name><argument_list pos:start="443:46" pos:end="443:50">(<argument pos:start="443:47" pos:end="443:49"><expr pos:start="443:47" pos:end="443:49"><name pos:start="443:47" pos:end="443:49">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="447:23" pos:end="451:21">else <block pos:start="447:28" pos:end="451:21">{<block_content pos:start="449:25" pos:end="449:39">

                        <expr_stmt pos:start="449:25" pos:end="449:39"><expr pos:start="449:25" pos:end="449:38"><call pos:start="449:25" pos:end="449:38"><name pos:start="449:25" pos:end="449:32">dead_tmp</name><argument_list pos:start="449:33" pos:end="449:38">(<argument pos:start="449:34" pos:end="449:37"><expr pos:start="449:34" pos:end="449:37"><name pos:start="449:34" pos:end="449:37">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="455:15" pos:end="541:13">else <block pos:start="455:20" pos:end="541:13">{<block_content pos:start="457:17" pos:end="539:17">

                <decl_stmt pos:start="457:17" pos:end="457:22"><decl pos:start="457:17" pos:end="457:21"><type pos:start="457:17" pos:end="457:19"><name pos:start="457:17" pos:end="457:19">int</name></type> <name pos:start="457:21" pos:end="457:21">i</name></decl>;</decl_stmt>

                <comment type="block" pos:start="459:17" pos:end="459:43">/* Load/store multiple.  */</comment>

                <expr_stmt pos:start="461:17" pos:end="461:39"><expr pos:start="461:17" pos:end="461:38"><name pos:start="461:17" pos:end="461:20">addr</name> <operator pos:start="461:22" pos:end="461:22">=</operator> <call pos:start="461:24" pos:end="461:38"><name pos:start="461:24" pos:end="461:31">load_reg</name><argument_list pos:start="461:32" pos:end="461:38">(<argument pos:start="461:33" pos:end="461:33"><expr pos:start="461:33" pos:end="461:33"><name pos:start="461:33" pos:end="461:33">s</name></expr></argument>, <argument pos:start="461:36" pos:end="461:37"><expr pos:start="461:36" pos:end="461:37"><name pos:start="461:36" pos:end="461:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="463:17" pos:end="463:27"><expr pos:start="463:17" pos:end="463:26"><name pos:start="463:17" pos:end="463:22">offset</name> <operator pos:start="463:24" pos:end="463:24">=</operator> <literal type="number" pos:start="463:26" pos:end="463:26">0</literal></expr>;</expr_stmt>

                <for pos:start="465:17" pos:end="471:17">for <control pos:start="465:21" pos:end="465:40">(<init pos:start="465:22" pos:end="465:27"><expr pos:start="465:22" pos:end="465:26"><name pos:start="465:22" pos:end="465:22">i</name> <operator pos:start="465:24" pos:end="465:24">=</operator> <literal type="number" pos:start="465:26" pos:end="465:26">0</literal></expr>;</init> <condition pos:start="465:29" pos:end="465:35"><expr pos:start="465:29" pos:end="465:34"><name pos:start="465:29" pos:end="465:29">i</name> <operator pos:start="465:31" pos:end="465:31">&lt;</operator> <literal type="number" pos:start="465:33" pos:end="465:34">16</literal></expr>;</condition> <incr pos:start="465:37" pos:end="465:39"><expr pos:start="465:37" pos:end="465:39"><name pos:start="465:37" pos:end="465:37">i</name><operator pos:start="465:38" pos:end="465:39">++</operator></expr></incr>)</control> <block pos:start="465:42" pos:end="471:17">{<block_content pos:start="467:21" pos:end="469:36">

                    <if_stmt pos:start="467:21" pos:end="469:36"><if pos:start="467:21" pos:end="469:36">if <condition pos:start="467:24" pos:end="467:40">(<expr pos:start="467:25" pos:end="467:39"><name pos:start="467:25" pos:end="467:28">insn</name> <operator pos:start="467:30" pos:end="467:30">&amp;</operator> <operator pos:start="467:32" pos:end="467:32">(</operator><literal type="number" pos:start="467:33" pos:end="467:33">1</literal> <operator pos:start="467:35" pos:end="467:36">&lt;&lt;</operator> <name pos:start="467:38" pos:end="467:38">i</name><operator pos:start="467:39" pos:end="467:39">)</operator></expr>)</condition><block type="pseudo" pos:start="469:25" pos:end="469:36"><block_content pos:start="469:25" pos:end="469:36">

                        <expr_stmt pos:start="469:25" pos:end="469:36"><expr pos:start="469:25" pos:end="469:35"><name pos:start="469:25" pos:end="469:30">offset</name> <operator pos:start="469:32" pos:end="469:33">+=</operator> <literal type="number" pos:start="469:35" pos:end="469:35">4</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="473:17" pos:end="477:17"><if pos:start="473:17" pos:end="477:17">if <condition pos:start="473:20" pos:end="473:37">(<expr pos:start="473:21" pos:end="473:36"><name pos:start="473:21" pos:end="473:24">insn</name> <operator pos:start="473:26" pos:end="473:26">&amp;</operator> <operator pos:start="473:28" pos:end="473:28">(</operator><literal type="number" pos:start="473:29" pos:end="473:29">1</literal> <operator pos:start="473:31" pos:end="473:32">&lt;&lt;</operator> <literal type="number" pos:start="473:34" pos:end="473:35">24</literal><operator pos:start="473:36" pos:end="473:36">)</operator></expr>)</condition> <block pos:start="473:39" pos:end="477:17">{<block_content pos:start="475:21" pos:end="475:58">

                    <expr_stmt pos:start="475:21" pos:end="475:58"><expr pos:start="475:21" pos:end="475:57"><call pos:start="475:21" pos:end="475:57"><name pos:start="475:21" pos:end="475:36">tcg_gen_addi_i32</name><argument_list pos:start="475:37" pos:end="475:57">(<argument pos:start="475:38" pos:end="475:41"><expr pos:start="475:38" pos:end="475:41"><name pos:start="475:38" pos:end="475:41">addr</name></expr></argument>, <argument pos:start="475:44" pos:end="475:47"><expr pos:start="475:44" pos:end="475:47"><name pos:start="475:44" pos:end="475:47">addr</name></expr></argument>, <argument pos:start="475:50" pos:end="475:56"><expr pos:start="475:50" pos:end="475:56"><operator pos:start="475:50" pos:end="475:50">-</operator><name pos:start="475:51" pos:end="475:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <for pos:start="481:17" pos:end="515:17">for <control pos:start="481:21" pos:end="481:40">(<init pos:start="481:22" pos:end="481:27"><expr pos:start="481:22" pos:end="481:26"><name pos:start="481:22" pos:end="481:22">i</name> <operator pos:start="481:24" pos:end="481:24">=</operator> <literal type="number" pos:start="481:26" pos:end="481:26">0</literal></expr>;</init> <condition pos:start="481:29" pos:end="481:35"><expr pos:start="481:29" pos:end="481:34"><name pos:start="481:29" pos:end="481:29">i</name> <operator pos:start="481:31" pos:end="481:31">&lt;</operator> <literal type="number" pos:start="481:33" pos:end="481:34">16</literal></expr>;</condition> <incr pos:start="481:37" pos:end="481:39"><expr pos:start="481:37" pos:end="481:39"><name pos:start="481:37" pos:end="481:37">i</name><operator pos:start="481:38" pos:end="481:39">++</operator></expr></incr>)</control> <block pos:start="481:42" pos:end="515:17">{<block_content pos:start="483:21" pos:end="513:52">

                    <if_stmt pos:start="483:21" pos:end="485:33"><if pos:start="483:21" pos:end="485:33">if <condition pos:start="483:24" pos:end="483:47">(<expr pos:start="483:25" pos:end="483:46"><operator pos:start="483:25" pos:end="483:25">(</operator><name pos:start="483:26" pos:end="483:29">insn</name> <operator pos:start="483:31" pos:end="483:31">&amp;</operator> <operator pos:start="483:33" pos:end="483:33">(</operator><literal type="number" pos:start="483:34" pos:end="483:34">1</literal> <operator pos:start="483:36" pos:end="483:37">&lt;&lt;</operator> <name pos:start="483:39" pos:end="483:39">i</name><operator pos:start="483:40" pos:end="483:40">)</operator><operator pos:start="483:41" pos:end="483:41">)</operator> <operator pos:start="483:43" pos:end="483:44">==</operator> <literal type="number" pos:start="483:46" pos:end="483:46">0</literal></expr>)</condition><block type="pseudo" pos:start="485:25" pos:end="485:33"><block_content pos:start="485:25" pos:end="485:33">

                        <continue pos:start="485:25" pos:end="485:33">continue;</continue></block_content></block></if></if_stmt>

                    <if_stmt pos:start="487:21" pos:end="511:21"><if pos:start="487:21" pos:end="503:21">if <condition pos:start="487:24" pos:end="487:41">(<expr pos:start="487:25" pos:end="487:40"><name pos:start="487:25" pos:end="487:28">insn</name> <operator pos:start="487:30" pos:end="487:30">&amp;</operator> <operator pos:start="487:32" pos:end="487:32">(</operator><literal type="number" pos:start="487:33" pos:end="487:33">1</literal> <operator pos:start="487:35" pos:end="487:36">&lt;&lt;</operator> <literal type="number" pos:start="487:38" pos:end="487:39">20</literal><operator pos:start="487:40" pos:end="487:40">)</operator></expr>)</condition> <block pos:start="487:43" pos:end="503:21">{<block_content pos:start="491:25" pos:end="501:25">

                        <comment type="block" pos:start="489:25" pos:end="489:36">/* Load.  */</comment>

                        <expr_stmt pos:start="491:25" pos:end="491:57"><expr pos:start="491:25" pos:end="491:56"><name pos:start="491:25" pos:end="491:27">tmp</name> <operator pos:start="491:29" pos:end="491:29">=</operator> <call pos:start="491:31" pos:end="491:56"><name pos:start="491:31" pos:end="491:38">gen_ld32</name><argument_list pos:start="491:39" pos:end="491:56">(<argument pos:start="491:40" pos:end="491:43"><expr pos:start="491:40" pos:end="491:43"><name pos:start="491:40" pos:end="491:43">addr</name></expr></argument>, <argument pos:start="491:46" pos:end="491:55"><expr pos:start="491:46" pos:end="491:55"><call pos:start="491:46" pos:end="491:55"><name pos:start="491:46" pos:end="491:52">IS_USER</name><argument_list pos:start="491:53" pos:end="491:55">(<argument pos:start="491:54" pos:end="491:54"><expr pos:start="491:54" pos:end="491:54"><name pos:start="491:54" pos:end="491:54">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="493:25" pos:end="501:25"><if pos:start="493:25" pos:end="497:25">if <condition pos:start="493:28" pos:end="493:36">(<expr pos:start="493:29" pos:end="493:35"><name pos:start="493:29" pos:end="493:29">i</name> <operator pos:start="493:31" pos:end="493:32">==</operator> <literal type="number" pos:start="493:34" pos:end="493:35">15</literal></expr>)</condition> <block pos:start="493:38" pos:end="497:25">{<block_content pos:start="495:29" pos:end="495:43">

                            <expr_stmt pos:start="495:29" pos:end="495:43"><expr pos:start="495:29" pos:end="495:42"><call pos:start="495:29" pos:end="495:42"><name pos:start="495:29" pos:end="495:34">gen_bx</name><argument_list pos:start="495:35" pos:end="495:42">(<argument pos:start="495:36" pos:end="495:36"><expr pos:start="495:36" pos:end="495:36"><name pos:start="495:36" pos:end="495:36">s</name></expr></argument>, <argument pos:start="495:39" pos:end="495:41"><expr pos:start="495:39" pos:end="495:41"><name pos:start="495:39" pos:end="495:41">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="497:27" pos:end="501:25">else <block pos:start="497:32" pos:end="501:25">{<block_content pos:start="499:29" pos:end="499:49">

                            <expr_stmt pos:start="499:29" pos:end="499:49"><expr pos:start="499:29" pos:end="499:48"><call pos:start="499:29" pos:end="499:48"><name pos:start="499:29" pos:end="499:37">store_reg</name><argument_list pos:start="499:38" pos:end="499:48">(<argument pos:start="499:39" pos:end="499:39"><expr pos:start="499:39" pos:end="499:39"><name pos:start="499:39" pos:end="499:39">s</name></expr></argument>, <argument pos:start="499:42" pos:end="499:42"><expr pos:start="499:42" pos:end="499:42"><name pos:start="499:42" pos:end="499:42">i</name></expr></argument>, <argument pos:start="499:45" pos:end="499:47"><expr pos:start="499:45" pos:end="499:47"><name pos:start="499:45" pos:end="499:47">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="503:23" pos:end="511:21">else <block pos:start="503:28" pos:end="511:21">{<block_content pos:start="507:25" pos:end="509:56">

                        <comment type="block" pos:start="505:25" pos:end="505:37">/* Store.  */</comment>

                        <expr_stmt pos:start="507:25" pos:end="507:45"><expr pos:start="507:25" pos:end="507:44"><name pos:start="507:25" pos:end="507:27">tmp</name> <operator pos:start="507:29" pos:end="507:29">=</operator> <call pos:start="507:31" pos:end="507:44"><name pos:start="507:31" pos:end="507:38">load_reg</name><argument_list pos:start="507:39" pos:end="507:44">(<argument pos:start="507:40" pos:end="507:40"><expr pos:start="507:40" pos:end="507:40"><name pos:start="507:40" pos:end="507:40">s</name></expr></argument>, <argument pos:start="507:43" pos:end="507:43"><expr pos:start="507:43" pos:end="507:43"><name pos:start="507:43" pos:end="507:43">i</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="509:25" pos:end="509:56"><expr pos:start="509:25" pos:end="509:55"><call pos:start="509:25" pos:end="509:55"><name pos:start="509:25" pos:end="509:32">gen_st32</name><argument_list pos:start="509:33" pos:end="509:55">(<argument pos:start="509:34" pos:end="509:36"><expr pos:start="509:34" pos:end="509:36"><name pos:start="509:34" pos:end="509:36">tmp</name></expr></argument>, <argument pos:start="509:39" pos:end="509:42"><expr pos:start="509:39" pos:end="509:42"><name pos:start="509:39" pos:end="509:42">addr</name></expr></argument>, <argument pos:start="509:45" pos:end="509:54"><expr pos:start="509:45" pos:end="509:54"><call pos:start="509:45" pos:end="509:54"><name pos:start="509:45" pos:end="509:51">IS_USER</name><argument_list pos:start="509:52" pos:end="509:54">(<argument pos:start="509:53" pos:end="509:53"><expr pos:start="509:53" pos:end="509:53"><name pos:start="509:53" pos:end="509:53">s</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="513:21" pos:end="513:52"><expr pos:start="513:21" pos:end="513:51"><call pos:start="513:21" pos:end="513:51"><name pos:start="513:21" pos:end="513:36">tcg_gen_addi_i32</name><argument_list pos:start="513:37" pos:end="513:51">(<argument pos:start="513:38" pos:end="513:41"><expr pos:start="513:38" pos:end="513:41"><name pos:start="513:38" pos:end="513:41">addr</name></expr></argument>, <argument pos:start="513:44" pos:end="513:47"><expr pos:start="513:44" pos:end="513:47"><name pos:start="513:44" pos:end="513:47">addr</name></expr></argument>, <argument pos:start="513:50" pos:end="513:50"><expr pos:start="513:50" pos:end="513:50"><literal type="number" pos:start="513:50" pos:end="513:50">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></for>

                <if_stmt pos:start="517:17" pos:end="539:17"><if pos:start="517:17" pos:end="535:17">if <condition pos:start="517:20" pos:end="517:37">(<expr pos:start="517:21" pos:end="517:36"><name pos:start="517:21" pos:end="517:24">insn</name> <operator pos:start="517:26" pos:end="517:26">&amp;</operator> <operator pos:start="517:28" pos:end="517:28">(</operator><literal type="number" pos:start="517:29" pos:end="517:29">1</literal> <operator pos:start="517:31" pos:end="517:32">&lt;&lt;</operator> <literal type="number" pos:start="517:34" pos:end="517:35">21</literal><operator pos:start="517:36" pos:end="517:36">)</operator></expr>)</condition> <block pos:start="517:39" pos:end="535:17">{<block_content pos:start="521:21" pos:end="533:43">

                    <comment type="block" pos:start="519:21" pos:end="519:51">/* Base register writeback.  */</comment>

                    <if_stmt pos:start="521:21" pos:end="525:21"><if pos:start="521:21" pos:end="525:21">if <condition pos:start="521:24" pos:end="521:41">(<expr pos:start="521:25" pos:end="521:40"><name pos:start="521:25" pos:end="521:28">insn</name> <operator pos:start="521:30" pos:end="521:30">&amp;</operator> <operator pos:start="521:32" pos:end="521:32">(</operator><literal type="number" pos:start="521:33" pos:end="521:33">1</literal> <operator pos:start="521:35" pos:end="521:36">&lt;&lt;</operator> <literal type="number" pos:start="521:38" pos:end="521:39">24</literal><operator pos:start="521:40" pos:end="521:40">)</operator></expr>)</condition> <block pos:start="521:43" pos:end="525:21">{<block_content pos:start="523:25" pos:end="523:62">

                        <expr_stmt pos:start="523:25" pos:end="523:62"><expr pos:start="523:25" pos:end="523:61"><call pos:start="523:25" pos:end="523:61"><name pos:start="523:25" pos:end="523:40">tcg_gen_addi_i32</name><argument_list pos:start="523:41" pos:end="523:61">(<argument pos:start="523:42" pos:end="523:45"><expr pos:start="523:42" pos:end="523:45"><name pos:start="523:42" pos:end="523:45">addr</name></expr></argument>, <argument pos:start="523:48" pos:end="523:51"><expr pos:start="523:48" pos:end="523:51"><name pos:start="523:48" pos:end="523:51">addr</name></expr></argument>, <argument pos:start="523:54" pos:end="523:60"><expr pos:start="523:54" pos:end="523:60"><operator pos:start="523:54" pos:end="523:54">-</operator><name pos:start="523:55" pos:end="523:60">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if></if_stmt>

                    <comment type="block" pos:start="527:21" pos:end="527:75">/* Fault if writeback register is in register list.  */</comment>

                    <if_stmt pos:start="529:21" pos:end="531:40"><if pos:start="529:21" pos:end="531:40">if <condition pos:start="529:24" pos:end="529:41">(<expr pos:start="529:25" pos:end="529:40"><name pos:start="529:25" pos:end="529:28">insn</name> <operator pos:start="529:30" pos:end="529:30">&amp;</operator> <operator pos:start="529:32" pos:end="529:32">(</operator><literal type="number" pos:start="529:33" pos:end="529:33">1</literal> <operator pos:start="529:35" pos:end="529:36">&lt;&lt;</operator> <name pos:start="529:38" pos:end="529:39">rn</name><operator pos:start="529:40" pos:end="529:40">)</operator></expr>)</condition><block type="pseudo" pos:start="531:25" pos:end="531:40"><block_content pos:start="531:25" pos:end="531:40">

                        <goto pos:start="531:25" pos:end="531:40">goto <name pos:start="531:30" pos:end="531:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="533:21" pos:end="533:43"><expr pos:start="533:21" pos:end="533:42"><call pos:start="533:21" pos:end="533:42"><name pos:start="533:21" pos:end="533:29">store_reg</name><argument_list pos:start="533:30" pos:end="533:42">(<argument pos:start="533:31" pos:end="533:31"><expr pos:start="533:31" pos:end="533:31"><name pos:start="533:31" pos:end="533:31">s</name></expr></argument>, <argument pos:start="533:34" pos:end="533:35"><expr pos:start="533:34" pos:end="533:35"><name pos:start="533:34" pos:end="533:35">rn</name></expr></argument>, <argument pos:start="533:38" pos:end="533:41"><expr pos:start="533:38" pos:end="533:41"><name pos:start="533:38" pos:end="533:41">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="535:19" pos:end="539:17">else <block pos:start="535:24" pos:end="539:17">{<block_content pos:start="537:21" pos:end="537:35">

                    <expr_stmt pos:start="537:21" pos:end="537:35"><expr pos:start="537:21" pos:end="537:34"><call pos:start="537:21" pos:end="537:34"><name pos:start="537:21" pos:end="537:28">dead_tmp</name><argument_list pos:start="537:29" pos:end="537:34">(<argument pos:start="537:30" pos:end="537:33"><expr pos:start="537:30" pos:end="537:33"><name pos:start="537:30" pos:end="537:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="545:9" pos:end="545:14">break;</break>

    <case pos:start="547:5" pos:end="547:11">case <expr pos:start="547:10" pos:end="547:10"><literal type="number" pos:start="547:10" pos:end="547:10">5</literal></expr>:</case>



        <expr_stmt pos:start="551:9" pos:end="551:32"><expr pos:start="551:9" pos:end="551:31"><name pos:start="551:9" pos:end="551:10">op</name> <operator pos:start="551:12" pos:end="551:12">=</operator> <operator pos:start="551:14" pos:end="551:14">(</operator><name pos:start="551:15" pos:end="551:18">insn</name> <operator pos:start="551:20" pos:end="551:21">&gt;&gt;</operator> <literal type="number" pos:start="551:23" pos:end="551:24">21</literal><operator pos:start="551:25" pos:end="551:25">)</operator> <operator pos:start="551:27" pos:end="551:27">&amp;</operator> <literal type="number" pos:start="551:29" pos:end="551:31">0xf</literal></expr>;</expr_stmt>

        <if_stmt pos:start="553:9" pos:end="643:9"><if pos:start="553:9" pos:end="597:9">if <condition pos:start="553:12" pos:end="553:20">(<expr pos:start="553:13" pos:end="553:19"><name pos:start="553:13" pos:end="553:14">op</name> <operator pos:start="553:16" pos:end="553:17">==</operator> <literal type="number" pos:start="553:19" pos:end="553:19">6</literal></expr>)</condition> <block pos:start="553:22" pos:end="597:9">{<block_content pos:start="557:13" pos:end="595:34">

            <comment type="block" pos:start="555:13" pos:end="555:33">/* Halfword pack.  */</comment>

            <expr_stmt pos:start="557:13" pos:end="557:34"><expr pos:start="557:13" pos:end="557:33"><name pos:start="557:13" pos:end="557:15">tmp</name> <operator pos:start="557:17" pos:end="557:17">=</operator> <call pos:start="557:19" pos:end="557:33"><name pos:start="557:19" pos:end="557:26">load_reg</name><argument_list pos:start="557:27" pos:end="557:33">(<argument pos:start="557:28" pos:end="557:28"><expr pos:start="557:28" pos:end="557:28"><name pos:start="557:28" pos:end="557:28">s</name></expr></argument>, <argument pos:start="557:31" pos:end="557:32"><expr pos:start="557:31" pos:end="557:32"><name pos:start="557:31" pos:end="557:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="559:13" pos:end="559:35"><expr pos:start="559:13" pos:end="559:34"><name pos:start="559:13" pos:end="559:16">tmp2</name> <operator pos:start="559:18" pos:end="559:18">=</operator> <call pos:start="559:20" pos:end="559:34"><name pos:start="559:20" pos:end="559:27">load_reg</name><argument_list pos:start="559:28" pos:end="559:34">(<argument pos:start="559:29" pos:end="559:29"><expr pos:start="559:29" pos:end="559:29"><name pos:start="559:29" pos:end="559:29">s</name></expr></argument>, <argument pos:start="559:32" pos:end="559:33"><expr pos:start="559:32" pos:end="559:33"><name pos:start="559:32" pos:end="559:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="561:13" pos:end="561:64"><expr pos:start="561:13" pos:end="561:63"><name pos:start="561:13" pos:end="561:17">shift</name> <operator pos:start="561:19" pos:end="561:19">=</operator> <operator pos:start="561:21" pos:end="561:21">(</operator><operator pos:start="561:22" pos:end="561:22">(</operator><name pos:start="561:23" pos:end="561:26">insn</name> <operator pos:start="561:28" pos:end="561:29">&gt;&gt;</operator> <literal type="number" pos:start="561:31" pos:end="561:32">10</literal><operator pos:start="561:33" pos:end="561:33">)</operator> <operator pos:start="561:35" pos:end="561:35">&amp;</operator> <literal type="number" pos:start="561:37" pos:end="561:40">0x1c</literal><operator pos:start="561:41" pos:end="561:41">)</operator> <operator pos:start="561:43" pos:end="561:43">|</operator> <operator pos:start="561:45" pos:end="561:45">(</operator><operator pos:start="561:46" pos:end="561:46">(</operator><name pos:start="561:47" pos:end="561:50">insn</name> <operator pos:start="561:52" pos:end="561:53">&gt;&gt;</operator> <literal type="number" pos:start="561:55" pos:end="561:55">6</literal><operator pos:start="561:56" pos:end="561:56">)</operator> <operator pos:start="561:58" pos:end="561:58">&amp;</operator> <literal type="number" pos:start="561:60" pos:end="561:62">0x3</literal><operator pos:start="561:63" pos:end="561:63">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="563:13" pos:end="589:13"><if pos:start="563:13" pos:end="577:13">if <condition pos:start="563:16" pos:end="563:32">(<expr pos:start="563:17" pos:end="563:31"><name pos:start="563:17" pos:end="563:20">insn</name> <operator pos:start="563:22" pos:end="563:22">&amp;</operator> <operator pos:start="563:24" pos:end="563:24">(</operator><literal type="number" pos:start="563:25" pos:end="563:25">1</literal> <operator pos:start="563:27" pos:end="563:28">&lt;&lt;</operator> <literal type="number" pos:start="563:30" pos:end="563:30">5</literal><operator pos:start="563:31" pos:end="563:31">)</operator></expr>)</condition> <block pos:start="563:34" pos:end="577:13">{<block_content pos:start="567:17" pos:end="575:47">

                <comment type="block" pos:start="565:17" pos:end="565:27">/* pkhtb */</comment>

                <if_stmt pos:start="567:17" pos:end="569:31"><if pos:start="567:17" pos:end="569:31">if <condition pos:start="567:20" pos:end="567:31">(<expr pos:start="567:21" pos:end="567:30"><name pos:start="567:21" pos:end="567:25">shift</name> <operator pos:start="567:27" pos:end="567:28">==</operator> <literal type="number" pos:start="567:30" pos:end="567:30">0</literal></expr>)</condition><block type="pseudo" pos:start="569:21" pos:end="569:31"><block_content pos:start="569:21" pos:end="569:31">

                    <expr_stmt pos:start="569:21" pos:end="569:31"><expr pos:start="569:21" pos:end="569:30"><name pos:start="569:21" pos:end="569:25">shift</name> <operator pos:start="569:27" pos:end="569:27">=</operator> <literal type="number" pos:start="569:29" pos:end="569:30">31</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="571:17" pos:end="571:52"><expr pos:start="571:17" pos:end="571:51"><call pos:start="571:17" pos:end="571:51"><name pos:start="571:17" pos:end="571:32">tcg_gen_sari_i32</name><argument_list pos:start="571:33" pos:end="571:51">(<argument pos:start="571:34" pos:end="571:37"><expr pos:start="571:34" pos:end="571:37"><name pos:start="571:34" pos:end="571:37">tmp2</name></expr></argument>, <argument pos:start="571:40" pos:end="571:43"><expr pos:start="571:40" pos:end="571:43"><name pos:start="571:40" pos:end="571:43">tmp2</name></expr></argument>, <argument pos:start="571:46" pos:end="571:50"><expr pos:start="571:46" pos:end="571:50"><name pos:start="571:46" pos:end="571:50">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="573:17" pos:end="573:55"><expr pos:start="573:17" pos:end="573:54"><call pos:start="573:17" pos:end="573:54"><name pos:start="573:17" pos:end="573:32">tcg_gen_andi_i32</name><argument_list pos:start="573:33" pos:end="573:54">(<argument pos:start="573:34" pos:end="573:36"><expr pos:start="573:34" pos:end="573:36"><name pos:start="573:34" pos:end="573:36">tmp</name></expr></argument>, <argument pos:start="573:39" pos:end="573:41"><expr pos:start="573:39" pos:end="573:41"><name pos:start="573:39" pos:end="573:41">tmp</name></expr></argument>, <argument pos:start="573:44" pos:end="573:53"><expr pos:start="573:44" pos:end="573:53"><literal type="number" pos:start="573:44" pos:end="573:53">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="575:17" pos:end="575:47"><expr pos:start="575:17" pos:end="575:46"><call pos:start="575:17" pos:end="575:46"><name pos:start="575:17" pos:end="575:34">tcg_gen_ext16u_i32</name><argument_list pos:start="575:35" pos:end="575:46">(<argument pos:start="575:36" pos:end="575:39"><expr pos:start="575:36" pos:end="575:39"><name pos:start="575:36" pos:end="575:39">tmp2</name></expr></argument>, <argument pos:start="575:42" pos:end="575:45"><expr pos:start="575:42" pos:end="575:45"><name pos:start="575:42" pos:end="575:45">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="577:15" pos:end="589:13">else <block pos:start="577:20" pos:end="589:13">{<block_content pos:start="581:17" pos:end="587:57">

                <comment type="block" pos:start="579:17" pos:end="579:27">/* pkhbt */</comment>

                <if_stmt pos:start="581:17" pos:end="583:56"><if pos:start="581:17" pos:end="583:56">if <condition pos:start="581:20" pos:end="581:26">(<expr pos:start="581:21" pos:end="581:25"><name pos:start="581:21" pos:end="581:25">shift</name></expr>)</condition><block type="pseudo" pos:start="583:21" pos:end="583:56"><block_content pos:start="583:21" pos:end="583:56">

                    <expr_stmt pos:start="583:21" pos:end="583:56"><expr pos:start="583:21" pos:end="583:55"><call pos:start="583:21" pos:end="583:55"><name pos:start="583:21" pos:end="583:36">tcg_gen_shli_i32</name><argument_list pos:start="583:37" pos:end="583:55">(<argument pos:start="583:38" pos:end="583:41"><expr pos:start="583:38" pos:end="583:41"><name pos:start="583:38" pos:end="583:41">tmp2</name></expr></argument>, <argument pos:start="583:44" pos:end="583:47"><expr pos:start="583:44" pos:end="583:47"><name pos:start="583:44" pos:end="583:47">tmp2</name></expr></argument>, <argument pos:start="583:50" pos:end="583:54"><expr pos:start="583:50" pos:end="583:54"><name pos:start="583:50" pos:end="583:54">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="585:17" pos:end="585:45"><expr pos:start="585:17" pos:end="585:44"><call pos:start="585:17" pos:end="585:44"><name pos:start="585:17" pos:end="585:34">tcg_gen_ext16u_i32</name><argument_list pos:start="585:35" pos:end="585:44">(<argument pos:start="585:36" pos:end="585:38"><expr pos:start="585:36" pos:end="585:38"><name pos:start="585:36" pos:end="585:38">tmp</name></expr></argument>, <argument pos:start="585:41" pos:end="585:43"><expr pos:start="585:41" pos:end="585:43"><name pos:start="585:41" pos:end="585:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="587:17" pos:end="587:57"><expr pos:start="587:17" pos:end="587:56"><call pos:start="587:17" pos:end="587:56"><name pos:start="587:17" pos:end="587:32">tcg_gen_andi_i32</name><argument_list pos:start="587:33" pos:end="587:56">(<argument pos:start="587:34" pos:end="587:37"><expr pos:start="587:34" pos:end="587:37"><name pos:start="587:34" pos:end="587:37">tmp2</name></expr></argument>, <argument pos:start="587:40" pos:end="587:43"><expr pos:start="587:40" pos:end="587:43"><name pos:start="587:40" pos:end="587:43">tmp2</name></expr></argument>, <argument pos:start="587:46" pos:end="587:55"><expr pos:start="587:46" pos:end="587:55"><literal type="number" pos:start="587:46" pos:end="587:55">0xffff0000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="591:13" pos:end="591:43"><expr pos:start="591:13" pos:end="591:42"><call pos:start="591:13" pos:end="591:42"><name pos:start="591:13" pos:end="591:26">tcg_gen_or_i32</name><argument_list pos:start="591:27" pos:end="591:42">(<argument pos:start="591:28" pos:end="591:30"><expr pos:start="591:28" pos:end="591:30"><name pos:start="591:28" pos:end="591:30">tmp</name></expr></argument>, <argument pos:start="591:33" pos:end="591:35"><expr pos:start="591:33" pos:end="591:35"><name pos:start="591:33" pos:end="591:35">tmp</name></expr></argument>, <argument pos:start="591:38" pos:end="591:41"><expr pos:start="591:38" pos:end="591:41"><name pos:start="591:38" pos:end="591:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="593:13" pos:end="593:27"><expr pos:start="593:13" pos:end="593:26"><call pos:start="593:13" pos:end="593:26"><name pos:start="593:13" pos:end="593:20">dead_tmp</name><argument_list pos:start="593:21" pos:end="593:26">(<argument pos:start="593:22" pos:end="593:25"><expr pos:start="593:22" pos:end="593:25"><name pos:start="593:22" pos:end="593:25">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="595:13" pos:end="595:34"><expr pos:start="595:13" pos:end="595:33"><call pos:start="595:13" pos:end="595:33"><name pos:start="595:13" pos:end="595:21">store_reg</name><argument_list pos:start="595:22" pos:end="595:33">(<argument pos:start="595:23" pos:end="595:23"><expr pos:start="595:23" pos:end="595:23"><name pos:start="595:23" pos:end="595:23">s</name></expr></argument>, <argument pos:start="595:26" pos:end="595:27"><expr pos:start="595:26" pos:end="595:27"><name pos:start="595:26" pos:end="595:27">rd</name></expr></argument>, <argument pos:start="595:30" pos:end="595:32"><expr pos:start="595:30" pos:end="595:32"><name pos:start="595:30" pos:end="595:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="597:11" pos:end="643:9">else <block pos:start="597:16" pos:end="643:9">{<block_content pos:start="601:13" pos:end="641:13">

            <comment type="block" pos:start="599:13" pos:end="599:59">/* Data processing register constant shift.  */</comment>

            <if_stmt pos:start="601:13" pos:end="611:13"><if pos:start="601:13" pos:end="607:13">if <condition pos:start="601:16" pos:end="601:25">(<expr pos:start="601:17" pos:end="601:24"><name pos:start="601:17" pos:end="601:18">rn</name> <operator pos:start="601:20" pos:end="601:21">==</operator> <literal type="number" pos:start="601:23" pos:end="601:24">15</literal></expr>)</condition> <block pos:start="601:27" pos:end="607:13">{<block_content pos:start="603:17" pos:end="605:41">

                <expr_stmt pos:start="603:17" pos:end="603:32"><expr pos:start="603:17" pos:end="603:31"><name pos:start="603:17" pos:end="603:19">tmp</name> <operator pos:start="603:21" pos:end="603:21">=</operator> <call pos:start="603:23" pos:end="603:31"><name pos:start="603:23" pos:end="603:29">new_tmp</name><argument_list pos:start="603:30" pos:end="603:31">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="605:17" pos:end="605:41"><expr pos:start="605:17" pos:end="605:40"><call pos:start="605:17" pos:end="605:40"><name pos:start="605:17" pos:end="605:32">tcg_gen_movi_i32</name><argument_list pos:start="605:33" pos:end="605:40">(<argument pos:start="605:34" pos:end="605:36"><expr pos:start="605:34" pos:end="605:36"><name pos:start="605:34" pos:end="605:36">tmp</name></expr></argument>, <argument pos:start="605:39" pos:end="605:39"><expr pos:start="605:39" pos:end="605:39"><literal type="number" pos:start="605:39" pos:end="605:39">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="607:15" pos:end="611:13">else <block pos:start="607:20" pos:end="611:13">{<block_content pos:start="609:17" pos:end="609:38">

                <expr_stmt pos:start="609:17" pos:end="609:38"><expr pos:start="609:17" pos:end="609:37"><name pos:start="609:17" pos:end="609:19">tmp</name> <operator pos:start="609:21" pos:end="609:21">=</operator> <call pos:start="609:23" pos:end="609:37"><name pos:start="609:23" pos:end="609:30">load_reg</name><argument_list pos:start="609:31" pos:end="609:37">(<argument pos:start="609:32" pos:end="609:32"><expr pos:start="609:32" pos:end="609:32"><name pos:start="609:32" pos:end="609:32">s</name></expr></argument>, <argument pos:start="609:35" pos:end="609:36"><expr pos:start="609:35" pos:end="609:36"><name pos:start="609:35" pos:end="609:36">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="613:13" pos:end="613:35"><expr pos:start="613:13" pos:end="613:34"><name pos:start="613:13" pos:end="613:16">tmp2</name> <operator pos:start="613:18" pos:end="613:18">=</operator> <call pos:start="613:20" pos:end="613:34"><name pos:start="613:20" pos:end="613:27">load_reg</name><argument_list pos:start="613:28" pos:end="613:34">(<argument pos:start="613:29" pos:end="613:29"><expr pos:start="613:29" pos:end="613:29"><name pos:start="613:29" pos:end="613:29">s</name></expr></argument>, <argument pos:start="613:32" pos:end="613:33"><expr pos:start="613:32" pos:end="613:33"><name pos:start="613:32" pos:end="613:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="617:13" pos:end="617:38"><expr pos:start="617:13" pos:end="617:37"><name pos:start="617:13" pos:end="617:19">shiftop</name> <operator pos:start="617:21" pos:end="617:21">=</operator> <operator pos:start="617:23" pos:end="617:23">(</operator><name pos:start="617:24" pos:end="617:27">insn</name> <operator pos:start="617:29" pos:end="617:30">&gt;&gt;</operator> <literal type="number" pos:start="617:32" pos:end="617:32">4</literal><operator pos:start="617:33" pos:end="617:33">)</operator> <operator pos:start="617:35" pos:end="617:35">&amp;</operator> <literal type="number" pos:start="617:37" pos:end="617:37">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="619:13" pos:end="619:62"><expr pos:start="619:13" pos:end="619:61"><name pos:start="619:13" pos:end="619:17">shift</name> <operator pos:start="619:19" pos:end="619:19">=</operator> <operator pos:start="619:21" pos:end="619:21">(</operator><operator pos:start="619:22" pos:end="619:22">(</operator><name pos:start="619:23" pos:end="619:26">insn</name> <operator pos:start="619:28" pos:end="619:29">&gt;&gt;</operator> <literal type="number" pos:start="619:31" pos:end="619:31">6</literal><operator pos:start="619:32" pos:end="619:32">)</operator> <operator pos:start="619:34" pos:end="619:34">&amp;</operator> <literal type="number" pos:start="619:36" pos:end="619:36">3</literal><operator pos:start="619:37" pos:end="619:37">)</operator> <operator pos:start="619:39" pos:end="619:39">|</operator> <operator pos:start="619:41" pos:end="619:41">(</operator><operator pos:start="619:42" pos:end="619:42">(</operator><name pos:start="619:43" pos:end="619:46">insn</name> <operator pos:start="619:48" pos:end="619:49">&gt;&gt;</operator> <literal type="number" pos:start="619:51" pos:end="619:52">10</literal><operator pos:start="619:53" pos:end="619:53">)</operator> <operator pos:start="619:55" pos:end="619:55">&amp;</operator> <literal type="number" pos:start="619:57" pos:end="619:60">0x1c</literal><operator pos:start="619:61" pos:end="619:61">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="621:13" pos:end="621:44"><expr pos:start="621:13" pos:end="621:43"><name pos:start="621:13" pos:end="621:17">conds</name> <operator pos:start="621:19" pos:end="621:19">=</operator> <operator pos:start="621:21" pos:end="621:21">(</operator><name pos:start="621:22" pos:end="621:25">insn</name> <operator pos:start="621:27" pos:end="621:27">&amp;</operator> <operator pos:start="621:29" pos:end="621:29">(</operator><literal type="number" pos:start="621:30" pos:end="621:30">1</literal> <operator pos:start="621:32" pos:end="621:33">&lt;&lt;</operator> <literal type="number" pos:start="621:35" pos:end="621:36">20</literal><operator pos:start="621:37" pos:end="621:37">)</operator><operator pos:start="621:38" pos:end="621:38">)</operator> <operator pos:start="621:40" pos:end="621:41">!=</operator> <literal type="number" pos:start="621:43" pos:end="621:43">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="623:13" pos:end="623:54"><expr pos:start="623:13" pos:end="623:53"><name pos:start="623:13" pos:end="623:20">logic_cc</name> <operator pos:start="623:22" pos:end="623:22">=</operator> <operator pos:start="623:24" pos:end="623:24">(</operator><name pos:start="623:25" pos:end="623:29">conds</name> <operator pos:start="623:31" pos:end="623:32">&amp;&amp;</operator> <call pos:start="623:34" pos:end="623:52"><name pos:start="623:34" pos:end="623:48">thumb2_logic_op</name><argument_list pos:start="623:49" pos:end="623:52">(<argument pos:start="623:50" pos:end="623:51"><expr pos:start="623:50" pos:end="623:51"><name pos:start="623:50" pos:end="623:51">op</name></expr></argument>)</argument_list></call><operator pos:start="623:53" pos:end="623:53">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="625:13" pos:end="625:61"><expr pos:start="625:13" pos:end="625:60"><call pos:start="625:13" pos:end="625:60"><name pos:start="625:13" pos:end="625:28">gen_arm_shift_im</name><argument_list pos:start="625:29" pos:end="625:60">(<argument pos:start="625:30" pos:end="625:33"><expr pos:start="625:30" pos:end="625:33"><name pos:start="625:30" pos:end="625:33">tmp2</name></expr></argument>, <argument pos:start="625:36" pos:end="625:42"><expr pos:start="625:36" pos:end="625:42"><name pos:start="625:36" pos:end="625:42">shiftop</name></expr></argument>, <argument pos:start="625:45" pos:end="625:49"><expr pos:start="625:45" pos:end="625:49"><name pos:start="625:45" pos:end="625:49">shift</name></expr></argument>, <argument pos:start="625:52" pos:end="625:59"><expr pos:start="625:52" pos:end="625:59"><name pos:start="625:52" pos:end="625:59">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="627:13" pos:end="629:32"><if pos:start="627:13" pos:end="629:32">if <condition pos:start="627:16" pos:end="627:63">(<expr pos:start="627:17" pos:end="627:62"><call pos:start="627:17" pos:end="627:62"><name pos:start="627:17" pos:end="627:34">gen_thumb2_data_op</name><argument_list pos:start="627:35" pos:end="627:62">(<argument pos:start="627:36" pos:end="627:36"><expr pos:start="627:36" pos:end="627:36"><name pos:start="627:36" pos:end="627:36">s</name></expr></argument>, <argument pos:start="627:39" pos:end="627:40"><expr pos:start="627:39" pos:end="627:40"><name pos:start="627:39" pos:end="627:40">op</name></expr></argument>, <argument pos:start="627:43" pos:end="627:47"><expr pos:start="627:43" pos:end="627:47"><name pos:start="627:43" pos:end="627:47">conds</name></expr></argument>, <argument pos:start="627:50" pos:end="627:50"><expr pos:start="627:50" pos:end="627:50"><literal type="number" pos:start="627:50" pos:end="627:50">0</literal></expr></argument>, <argument pos:start="627:53" pos:end="627:55"><expr pos:start="627:53" pos:end="627:55"><name pos:start="627:53" pos:end="627:55">tmp</name></expr></argument>, <argument pos:start="627:58" pos:end="627:61"><expr pos:start="627:58" pos:end="627:61"><name pos:start="627:58" pos:end="627:61">tmp2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="629:17" pos:end="629:32"><block_content pos:start="629:17" pos:end="629:32">

                <goto pos:start="629:17" pos:end="629:32">goto <name pos:start="629:22" pos:end="629:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="631:13" pos:end="631:27"><expr pos:start="631:13" pos:end="631:26"><call pos:start="631:13" pos:end="631:26"><name pos:start="631:13" pos:end="631:20">dead_tmp</name><argument_list pos:start="631:21" pos:end="631:26">(<argument pos:start="631:22" pos:end="631:25"><expr pos:start="631:22" pos:end="631:25"><name pos:start="631:22" pos:end="631:25">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="633:13" pos:end="641:13"><if pos:start="633:13" pos:end="637:13">if <condition pos:start="633:16" pos:end="633:25">(<expr pos:start="633:17" pos:end="633:24"><name pos:start="633:17" pos:end="633:18">rd</name> <operator pos:start="633:20" pos:end="633:21">!=</operator> <literal type="number" pos:start="633:23" pos:end="633:24">15</literal></expr>)</condition> <block pos:start="633:27" pos:end="637:13">{<block_content pos:start="635:17" pos:end="635:38">

                <expr_stmt pos:start="635:17" pos:end="635:38"><expr pos:start="635:17" pos:end="635:37"><call pos:start="635:17" pos:end="635:37"><name pos:start="635:17" pos:end="635:25">store_reg</name><argument_list pos:start="635:26" pos:end="635:37">(<argument pos:start="635:27" pos:end="635:27"><expr pos:start="635:27" pos:end="635:27"><name pos:start="635:27" pos:end="635:27">s</name></expr></argument>, <argument pos:start="635:30" pos:end="635:31"><expr pos:start="635:30" pos:end="635:31"><name pos:start="635:30" pos:end="635:31">rd</name></expr></argument>, <argument pos:start="635:34" pos:end="635:36"><expr pos:start="635:34" pos:end="635:36"><name pos:start="635:34" pos:end="635:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="637:15" pos:end="641:13">else <block pos:start="637:20" pos:end="641:13">{<block_content pos:start="639:17" pos:end="639:30">

                <expr_stmt pos:start="639:17" pos:end="639:30"><expr pos:start="639:17" pos:end="639:29"><call pos:start="639:17" pos:end="639:29"><name pos:start="639:17" pos:end="639:24">dead_tmp</name><argument_list pos:start="639:25" pos:end="639:29">(<argument pos:start="639:26" pos:end="639:28"><expr pos:start="639:26" pos:end="639:28"><name pos:start="639:26" pos:end="639:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="645:9" pos:end="645:14">break;</break>

    <case pos:start="647:5" pos:end="647:12">case <expr pos:start="647:10" pos:end="647:11"><literal type="number" pos:start="647:10" pos:end="647:11">13</literal></expr>:</case> <comment type="block" pos:start="647:14" pos:end="647:41">/* Misc data processing.  */</comment>

        <expr_stmt pos:start="649:9" pos:end="649:52"><expr pos:start="649:9" pos:end="649:51"><name pos:start="649:9" pos:end="649:10">op</name> <operator pos:start="649:12" pos:end="649:12">=</operator> <operator pos:start="649:14" pos:end="649:14">(</operator><operator pos:start="649:15" pos:end="649:15">(</operator><name pos:start="649:16" pos:end="649:19">insn</name> <operator pos:start="649:21" pos:end="649:22">&gt;&gt;</operator> <literal type="number" pos:start="649:24" pos:end="649:25">22</literal><operator pos:start="649:26" pos:end="649:26">)</operator> <operator pos:start="649:28" pos:end="649:28">&amp;</operator> <literal type="number" pos:start="649:30" pos:end="649:30">6</literal><operator pos:start="649:31" pos:end="649:31">)</operator> <operator pos:start="649:33" pos:end="649:33">|</operator> <operator pos:start="649:35" pos:end="649:35">(</operator><operator pos:start="649:36" pos:end="649:36">(</operator><name pos:start="649:37" pos:end="649:40">insn</name> <operator pos:start="649:42" pos:end="649:43">&gt;&gt;</operator> <literal type="number" pos:start="649:45" pos:end="649:45">7</literal><operator pos:start="649:46" pos:end="649:46">)</operator> <operator pos:start="649:48" pos:end="649:48">&amp;</operator> <literal type="number" pos:start="649:50" pos:end="649:50">1</literal><operator pos:start="649:51" pos:end="649:51">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="651:9" pos:end="653:28"><if pos:start="651:9" pos:end="653:28">if <condition pos:start="651:12" pos:end="651:48">(<expr pos:start="651:13" pos:end="651:47"><name pos:start="651:13" pos:end="651:14">op</name> <operator pos:start="651:16" pos:end="651:16">&lt;</operator> <literal type="number" pos:start="651:18" pos:end="651:18">4</literal> <operator pos:start="651:20" pos:end="651:21">&amp;&amp;</operator> <operator pos:start="651:23" pos:end="651:23">(</operator><name pos:start="651:24" pos:end="651:27">insn</name> <operator pos:start="651:29" pos:end="651:29">&amp;</operator> <literal type="number" pos:start="651:31" pos:end="651:36">0xf000</literal><operator pos:start="651:37" pos:end="651:37">)</operator> <operator pos:start="651:39" pos:end="651:40">!=</operator> <literal type="number" pos:start="651:42" pos:end="651:47">0xf000</literal></expr>)</condition><block type="pseudo" pos:start="653:13" pos:end="653:28"><block_content pos:start="653:13" pos:end="653:28">

            <goto pos:start="653:13" pos:end="653:28">goto <name pos:start="653:18" pos:end="653:27">illegal_op</name>;</goto></block_content></block></if></if_stmt>

        <switch pos:start="655:9" pos:end="1155:9">switch <condition pos:start="655:16" pos:end="655:19">(<expr pos:start="655:17" pos:end="655:18"><name pos:start="655:17" pos:end="655:18">op</name></expr>)</condition> <block pos:start="655:21" pos:end="1155:9">{<block_content pos:start="657:9" pos:end="1153:18">

        <case pos:start="657:9" pos:end="657:15">case <expr pos:start="657:14" pos:end="657:14"><literal type="number" pos:start="657:14" pos:end="657:14">0</literal></expr>:</case> <comment type="block" pos:start="657:17" pos:end="657:49">/* Register controlled shift.  */</comment>

            <expr_stmt pos:start="659:13" pos:end="659:34"><expr pos:start="659:13" pos:end="659:33"><name pos:start="659:13" pos:end="659:15">tmp</name> <operator pos:start="659:17" pos:end="659:17">=</operator> <call pos:start="659:19" pos:end="659:33"><name pos:start="659:19" pos:end="659:26">load_reg</name><argument_list pos:start="659:27" pos:end="659:33">(<argument pos:start="659:28" pos:end="659:28"><expr pos:start="659:28" pos:end="659:28"><name pos:start="659:28" pos:end="659:28">s</name></expr></argument>, <argument pos:start="659:31" pos:end="659:32"><expr pos:start="659:31" pos:end="659:32"><name pos:start="659:31" pos:end="659:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="661:13" pos:end="661:35"><expr pos:start="661:13" pos:end="661:34"><name pos:start="661:13" pos:end="661:16">tmp2</name> <operator pos:start="661:18" pos:end="661:18">=</operator> <call pos:start="661:20" pos:end="661:34"><name pos:start="661:20" pos:end="661:27">load_reg</name><argument_list pos:start="661:28" pos:end="661:34">(<argument pos:start="661:29" pos:end="661:29"><expr pos:start="661:29" pos:end="661:29"><name pos:start="661:29" pos:end="661:29">s</name></expr></argument>, <argument pos:start="661:32" pos:end="661:33"><expr pos:start="661:32" pos:end="661:33"><name pos:start="661:32" pos:end="661:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="663:13" pos:end="665:32"><if pos:start="663:13" pos:end="665:32">if <condition pos:start="663:16" pos:end="663:35">(<expr pos:start="663:17" pos:end="663:34"><operator pos:start="663:17" pos:end="663:17">(</operator><name pos:start="663:18" pos:end="663:21">insn</name> <operator pos:start="663:23" pos:end="663:23">&amp;</operator> <literal type="number" pos:start="663:25" pos:end="663:28">0x70</literal><operator pos:start="663:29" pos:end="663:29">)</operator> <operator pos:start="663:31" pos:end="663:32">!=</operator> <literal type="number" pos:start="663:34" pos:end="663:34">0</literal></expr>)</condition><block type="pseudo" pos:start="665:17" pos:end="665:32"><block_content pos:start="665:17" pos:end="665:32">

                <goto pos:start="665:17" pos:end="665:32">goto <name pos:start="665:22" pos:end="665:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="667:13" pos:end="667:34"><expr pos:start="667:13" pos:end="667:33"><name pos:start="667:13" pos:end="667:14">op</name> <operator pos:start="667:16" pos:end="667:16">=</operator> <operator pos:start="667:18" pos:end="667:18">(</operator><name pos:start="667:19" pos:end="667:22">insn</name> <operator pos:start="667:24" pos:end="667:25">&gt;&gt;</operator> <literal type="number" pos:start="667:27" pos:end="667:28">21</literal><operator pos:start="667:29" pos:end="667:29">)</operator> <operator pos:start="667:31" pos:end="667:31">&amp;</operator> <literal type="number" pos:start="667:33" pos:end="667:33">3</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="669:13" pos:end="669:47"><expr pos:start="669:13" pos:end="669:46"><name pos:start="669:13" pos:end="669:20">logic_cc</name> <operator pos:start="669:22" pos:end="669:22">=</operator> <operator pos:start="669:24" pos:end="669:24">(</operator><name pos:start="669:25" pos:end="669:28">insn</name> <operator pos:start="669:30" pos:end="669:30">&amp;</operator> <operator pos:start="669:32" pos:end="669:32">(</operator><literal type="number" pos:start="669:33" pos:end="669:33">1</literal> <operator pos:start="669:35" pos:end="669:36">&lt;&lt;</operator> <literal type="number" pos:start="669:38" pos:end="669:39">20</literal><operator pos:start="669:40" pos:end="669:40">)</operator><operator pos:start="669:41" pos:end="669:41">)</operator> <operator pos:start="669:43" pos:end="669:44">!=</operator> <literal type="number" pos:start="669:46" pos:end="669:46">0</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="671:13" pos:end="671:55"><expr pos:start="671:13" pos:end="671:54"><call pos:start="671:13" pos:end="671:54"><name pos:start="671:13" pos:end="671:29">gen_arm_shift_reg</name><argument_list pos:start="671:30" pos:end="671:54">(<argument pos:start="671:31" pos:end="671:33"><expr pos:start="671:31" pos:end="671:33"><name pos:start="671:31" pos:end="671:33">tmp</name></expr></argument>, <argument pos:start="671:36" pos:end="671:37"><expr pos:start="671:36" pos:end="671:37"><name pos:start="671:36" pos:end="671:37">op</name></expr></argument>, <argument pos:start="671:40" pos:end="671:43"><expr pos:start="671:40" pos:end="671:43"><name pos:start="671:40" pos:end="671:43">tmp2</name></expr></argument>, <argument pos:start="671:46" pos:end="671:53"><expr pos:start="671:46" pos:end="671:53"><name pos:start="671:46" pos:end="671:53">logic_cc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="673:13" pos:end="675:34"><if pos:start="673:13" pos:end="675:34">if <condition pos:start="673:16" pos:end="673:25">(<expr pos:start="673:17" pos:end="673:24"><name pos:start="673:17" pos:end="673:24">logic_cc</name></expr>)</condition><block type="pseudo" pos:start="675:17" pos:end="675:34"><block_content pos:start="675:17" pos:end="675:34">

                <expr_stmt pos:start="675:17" pos:end="675:34"><expr pos:start="675:17" pos:end="675:33"><call pos:start="675:17" pos:end="675:33"><name pos:start="675:17" pos:end="675:28">gen_logic_CC</name><argument_list pos:start="675:29" pos:end="675:33">(<argument pos:start="675:30" pos:end="675:32"><expr pos:start="675:30" pos:end="675:32"><name pos:start="675:30" pos:end="675:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="677:13" pos:end="677:42"><expr pos:start="677:13" pos:end="677:41"><call pos:start="677:13" pos:end="677:41"><name pos:start="677:13" pos:end="677:24">store_reg_bx</name><argument_list pos:start="677:25" pos:end="677:41">(<argument pos:start="677:26" pos:end="677:28"><expr pos:start="677:26" pos:end="677:28"><name pos:start="677:26" pos:end="677:28">env</name></expr></argument>, <argument pos:start="677:31" pos:end="677:31"><expr pos:start="677:31" pos:end="677:31"><name pos:start="677:31" pos:end="677:31">s</name></expr></argument>, <argument pos:start="677:34" pos:end="677:35"><expr pos:start="677:34" pos:end="677:35"><name pos:start="677:34" pos:end="677:35">rd</name></expr></argument>, <argument pos:start="677:38" pos:end="677:40"><expr pos:start="677:38" pos:end="677:40"><name pos:start="677:38" pos:end="677:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="679:13" pos:end="679:18">break;</break>

        <case pos:start="681:9" pos:end="681:15">case <expr pos:start="681:14" pos:end="681:14"><literal type="number" pos:start="681:14" pos:end="681:14">1</literal></expr>:</case> <comment type="block" pos:start="681:17" pos:end="681:40">/* Sign/zero extend.  */</comment>

            <expr_stmt pos:start="683:13" pos:end="683:34"><expr pos:start="683:13" pos:end="683:33"><name pos:start="683:13" pos:end="683:15">tmp</name> <operator pos:start="683:17" pos:end="683:17">=</operator> <call pos:start="683:19" pos:end="683:33"><name pos:start="683:19" pos:end="683:26">load_reg</name><argument_list pos:start="683:27" pos:end="683:33">(<argument pos:start="683:28" pos:end="683:28"><expr pos:start="683:28" pos:end="683:28"><name pos:start="683:28" pos:end="683:28">s</name></expr></argument>, <argument pos:start="683:31" pos:end="683:32"><expr pos:start="683:31" pos:end="683:32"><name pos:start="683:31" pos:end="683:32">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:36"><expr pos:start="685:13" pos:end="685:35"><name pos:start="685:13" pos:end="685:17">shift</name> <operator pos:start="685:19" pos:end="685:19">=</operator> <operator pos:start="685:21" pos:end="685:21">(</operator><name pos:start="685:22" pos:end="685:25">insn</name> <operator pos:start="685:27" pos:end="685:28">&gt;&gt;</operator> <literal type="number" pos:start="685:30" pos:end="685:30">4</literal><operator pos:start="685:31" pos:end="685:31">)</operator> <operator pos:start="685:33" pos:end="685:33">&amp;</operator> <literal type="number" pos:start="685:35" pos:end="685:35">3</literal></expr>;</expr_stmt>

            <comment type="block" pos:start="687:13" pos:end="689:49">/* ??? In many cases it's not neccessary to do a

               rotate, a shift is sufficient.  */</comment>

            <if_stmt pos:start="691:13" pos:end="693:55"><if pos:start="691:13" pos:end="693:55">if <condition pos:start="691:16" pos:end="691:27">(<expr pos:start="691:17" pos:end="691:26"><name pos:start="691:17" pos:end="691:21">shift</name> <operator pos:start="691:23" pos:end="691:24">!=</operator> <literal type="number" pos:start="691:26" pos:end="691:26">0</literal></expr>)</condition><block type="pseudo" pos:start="693:17" pos:end="693:55"><block_content pos:start="693:17" pos:end="693:55">

                <expr_stmt pos:start="693:17" pos:end="693:55"><expr pos:start="693:17" pos:end="693:54"><call pos:start="693:17" pos:end="693:54"><name pos:start="693:17" pos:end="693:33">tcg_gen_rotri_i32</name><argument_list pos:start="693:34" pos:end="693:54">(<argument pos:start="693:35" pos:end="693:37"><expr pos:start="693:35" pos:end="693:37"><name pos:start="693:35" pos:end="693:37">tmp</name></expr></argument>, <argument pos:start="693:40" pos:end="693:42"><expr pos:start="693:40" pos:end="693:42"><name pos:start="693:40" pos:end="693:42">tmp</name></expr></argument>, <argument pos:start="693:45" pos:end="693:53"><expr pos:start="693:45" pos:end="693:53"><name pos:start="693:45" pos:end="693:49">shift</name> <operator pos:start="693:51" pos:end="693:51">*</operator> <literal type="number" pos:start="693:53" pos:end="693:53">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <expr_stmt pos:start="695:13" pos:end="695:34"><expr pos:start="695:13" pos:end="695:33"><name pos:start="695:13" pos:end="695:14">op</name> <operator pos:start="695:16" pos:end="695:16">=</operator> <operator pos:start="695:18" pos:end="695:18">(</operator><name pos:start="695:19" pos:end="695:22">insn</name> <operator pos:start="695:24" pos:end="695:25">&gt;&gt;</operator> <literal type="number" pos:start="695:27" pos:end="695:28">20</literal><operator pos:start="695:29" pos:end="695:29">)</operator> <operator pos:start="695:31" pos:end="695:31">&amp;</operator> <literal type="number" pos:start="695:33" pos:end="695:33">7</literal></expr>;</expr_stmt>

            <switch pos:start="697:13" pos:end="713:13">switch <condition pos:start="697:20" pos:end="697:23">(<expr pos:start="697:21" pos:end="697:22"><name pos:start="697:21" pos:end="697:22">op</name></expr>)</condition> <block pos:start="697:25" pos:end="713:13">{<block_content pos:start="699:13" pos:end="711:37">

            <case pos:start="699:13" pos:end="699:19">case <expr pos:start="699:18" pos:end="699:18"><literal type="number" pos:start="699:18" pos:end="699:18">0</literal></expr>:</case> <expr_stmt pos:start="699:21" pos:end="699:34"><expr pos:start="699:21" pos:end="699:33"><call pos:start="699:21" pos:end="699:33"><name pos:start="699:21" pos:end="699:28">gen_sxth</name><argument_list pos:start="699:29" pos:end="699:33">(<argument pos:start="699:30" pos:end="699:32"><expr pos:start="699:30" pos:end="699:32"><name pos:start="699:30" pos:end="699:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="699:38" pos:end="699:43">break;</break>

            <case pos:start="701:13" pos:end="701:19">case <expr pos:start="701:18" pos:end="701:18"><literal type="number" pos:start="701:18" pos:end="701:18">1</literal></expr>:</case> <expr_stmt pos:start="701:21" pos:end="701:34"><expr pos:start="701:21" pos:end="701:33"><call pos:start="701:21" pos:end="701:33"><name pos:start="701:21" pos:end="701:28">gen_uxth</name><argument_list pos:start="701:29" pos:end="701:33">(<argument pos:start="701:30" pos:end="701:32"><expr pos:start="701:30" pos:end="701:32"><name pos:start="701:30" pos:end="701:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="701:38" pos:end="701:43">break;</break>

            <case pos:start="703:13" pos:end="703:19">case <expr pos:start="703:18" pos:end="703:18"><literal type="number" pos:start="703:18" pos:end="703:18">2</literal></expr>:</case> <expr_stmt pos:start="703:21" pos:end="703:36"><expr pos:start="703:21" pos:end="703:35"><call pos:start="703:21" pos:end="703:35"><name pos:start="703:21" pos:end="703:30">gen_sxtb16</name><argument_list pos:start="703:31" pos:end="703:35">(<argument pos:start="703:32" pos:end="703:34"><expr pos:start="703:32" pos:end="703:34"><name pos:start="703:32" pos:end="703:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="703:38" pos:end="703:43">break;</break>

            <case pos:start="705:13" pos:end="705:19">case <expr pos:start="705:18" pos:end="705:18"><literal type="number" pos:start="705:18" pos:end="705:18">3</literal></expr>:</case> <expr_stmt pos:start="705:21" pos:end="705:36"><expr pos:start="705:21" pos:end="705:35"><call pos:start="705:21" pos:end="705:35"><name pos:start="705:21" pos:end="705:30">gen_uxtb16</name><argument_list pos:start="705:31" pos:end="705:35">(<argument pos:start="705:32" pos:end="705:34"><expr pos:start="705:32" pos:end="705:34"><name pos:start="705:32" pos:end="705:34">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="705:38" pos:end="705:43">break;</break>

            <case pos:start="707:13" pos:end="707:19">case <expr pos:start="707:18" pos:end="707:18"><literal type="number" pos:start="707:18" pos:end="707:18">4</literal></expr>:</case> <expr_stmt pos:start="707:21" pos:end="707:34"><expr pos:start="707:21" pos:end="707:33"><call pos:start="707:21" pos:end="707:33"><name pos:start="707:21" pos:end="707:28">gen_sxtb</name><argument_list pos:start="707:29" pos:end="707:33">(<argument pos:start="707:30" pos:end="707:32"><expr pos:start="707:30" pos:end="707:32"><name pos:start="707:30" pos:end="707:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="707:38" pos:end="707:43">break;</break>

            <case pos:start="709:13" pos:end="709:19">case <expr pos:start="709:18" pos:end="709:18"><literal type="number" pos:start="709:18" pos:end="709:18">5</literal></expr>:</case> <expr_stmt pos:start="709:21" pos:end="709:34"><expr pos:start="709:21" pos:end="709:33"><call pos:start="709:21" pos:end="709:33"><name pos:start="709:21" pos:end="709:28">gen_uxtb</name><argument_list pos:start="709:29" pos:end="709:33">(<argument pos:start="709:30" pos:end="709:32"><expr pos:start="709:30" pos:end="709:32"><name pos:start="709:30" pos:end="709:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>   <break pos:start="709:38" pos:end="709:43">break;</break>

            <default pos:start="711:13" pos:end="711:20">default:</default> <goto pos:start="711:22" pos:end="711:37">goto <name pos:start="711:27" pos:end="711:36">illegal_op</name>;</goto>

            </block_content>}</block></switch>

            <if_stmt pos:start="715:13" pos:end="731:13"><if pos:start="715:13" pos:end="731:13">if <condition pos:start="715:16" pos:end="715:25">(<expr pos:start="715:17" pos:end="715:24"><name pos:start="715:17" pos:end="715:18">rn</name> <operator pos:start="715:20" pos:end="715:21">!=</operator> <literal type="number" pos:start="715:23" pos:end="715:24">15</literal></expr>)</condition> <block pos:start="715:27" pos:end="731:13">{<block_content pos:start="717:17" pos:end="729:17">

                <expr_stmt pos:start="717:17" pos:end="717:39"><expr pos:start="717:17" pos:end="717:38"><name pos:start="717:17" pos:end="717:20">tmp2</name> <operator pos:start="717:22" pos:end="717:22">=</operator> <call pos:start="717:24" pos:end="717:38"><name pos:start="717:24" pos:end="717:31">load_reg</name><argument_list pos:start="717:32" pos:end="717:38">(<argument pos:start="717:33" pos:end="717:33"><expr pos:start="717:33" pos:end="717:33"><name pos:start="717:33" pos:end="717:33">s</name></expr></argument>, <argument pos:start="717:36" pos:end="717:37"><expr pos:start="717:36" pos:end="717:37"><name pos:start="717:36" pos:end="717:37">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="719:17" pos:end="729:17"><if pos:start="719:17" pos:end="723:17">if <condition pos:start="719:20" pos:end="719:35">(<expr pos:start="719:21" pos:end="719:34"><operator pos:start="719:21" pos:end="719:21">(</operator><name pos:start="719:22" pos:end="719:23">op</name> <operator pos:start="719:25" pos:end="719:26">&gt;&gt;</operator> <literal type="number" pos:start="719:28" pos:end="719:28">1</literal><operator pos:start="719:29" pos:end="719:29">)</operator> <operator pos:start="719:31" pos:end="719:32">==</operator> <literal type="number" pos:start="719:34" pos:end="719:34">1</literal></expr>)</condition> <block pos:start="719:37" pos:end="723:17">{<block_content pos:start="721:21" pos:end="721:41">

                    <expr_stmt pos:start="721:21" pos:end="721:41"><expr pos:start="721:21" pos:end="721:40"><call pos:start="721:21" pos:end="721:40"><name pos:start="721:21" pos:end="721:29">gen_add16</name><argument_list pos:start="721:30" pos:end="721:40">(<argument pos:start="721:31" pos:end="721:33"><expr pos:start="721:31" pos:end="721:33"><name pos:start="721:31" pos:end="721:33">tmp</name></expr></argument>, <argument pos:start="721:36" pos:end="721:39"><expr pos:start="721:36" pos:end="721:39"><name pos:start="721:36" pos:end="721:39">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="723:19" pos:end="729:17">else <block pos:start="723:24" pos:end="729:17">{<block_content pos:start="725:21" pos:end="727:35">

                    <expr_stmt pos:start="725:21" pos:end="725:52"><expr pos:start="725:21" pos:end="725:51"><call pos:start="725:21" pos:end="725:51"><name pos:start="725:21" pos:end="725:35">tcg_gen_add_i32</name><argument_list pos:start="725:36" pos:end="725:51">(<argument pos:start="725:37" pos:end="725:39"><expr pos:start="725:37" pos:end="725:39"><name pos:start="725:37" pos:end="725:39">tmp</name></expr></argument>, <argument pos:start="725:42" pos:end="725:44"><expr pos:start="725:42" pos:end="725:44"><name pos:start="725:42" pos:end="725:44">tmp</name></expr></argument>, <argument pos:start="725:47" pos:end="725:50"><expr pos:start="725:47" pos:end="725:50"><name pos:start="725:47" pos:end="725:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="727:21" pos:end="727:35"><expr pos:start="727:21" pos:end="727:34"><call pos:start="727:21" pos:end="727:34"><name pos:start="727:21" pos:end="727:28">dead_tmp</name><argument_list pos:start="727:29" pos:end="727:34">(<argument pos:start="727:30" pos:end="727:33"><expr pos:start="727:30" pos:end="727:33"><name pos:start="727:30" pos:end="727:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="733:13" pos:end="733:34"><expr pos:start="733:13" pos:end="733:33"><call pos:start="733:13" pos:end="733:33"><name pos:start="733:13" pos:end="733:21">store_reg</name><argument_list pos:start="733:22" pos:end="733:33">(<argument pos:start="733:23" pos:end="733:23"><expr pos:start="733:23" pos:end="733:23"><name pos:start="733:23" pos:end="733:23">s</name></expr></argument>, <argument pos:start="733:26" pos:end="733:27"><expr pos:start="733:26" pos:end="733:27"><name pos:start="733:26" pos:end="733:27">rd</name></expr></argument>, <argument pos:start="733:30" pos:end="733:32"><expr pos:start="733:30" pos:end="733:32"><name pos:start="733:30" pos:end="733:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="735:13" pos:end="735:18">break;</break>

        <case pos:start="737:9" pos:end="737:15">case <expr pos:start="737:14" pos:end="737:14"><literal type="number" pos:start="737:14" pos:end="737:14">2</literal></expr>:</case> <comment type="block" pos:start="737:17" pos:end="737:41">/* SIMD add/subtract.  */</comment>

            <expr_stmt pos:start="739:13" pos:end="739:34"><expr pos:start="739:13" pos:end="739:33"><name pos:start="739:13" pos:end="739:14">op</name> <operator pos:start="739:16" pos:end="739:16">=</operator> <operator pos:start="739:18" pos:end="739:18">(</operator><name pos:start="739:19" pos:end="739:22">insn</name> <operator pos:start="739:24" pos:end="739:25">&gt;&gt;</operator> <literal type="number" pos:start="739:27" pos:end="739:28">20</literal><operator pos:start="739:29" pos:end="739:29">)</operator> <operator pos:start="739:31" pos:end="739:31">&amp;</operator> <literal type="number" pos:start="739:33" pos:end="739:33">7</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="741:13" pos:end="741:36"><expr pos:start="741:13" pos:end="741:35"><name pos:start="741:13" pos:end="741:17">shift</name> <operator pos:start="741:19" pos:end="741:19">=</operator> <operator pos:start="741:21" pos:end="741:21">(</operator><name pos:start="741:22" pos:end="741:25">insn</name> <operator pos:start="741:27" pos:end="741:28">&gt;&gt;</operator> <literal type="number" pos:start="741:30" pos:end="741:30">4</literal><operator pos:start="741:31" pos:end="741:31">)</operator> <operator pos:start="741:33" pos:end="741:33">&amp;</operator> <literal type="number" pos:start="741:35" pos:end="741:35">7</literal></expr>;</expr_stmt>

            <if_stmt pos:start="743:13" pos:end="745:32"><if pos:start="743:13" pos:end="745:32">if <condition pos:start="743:16" pos:end="743:50">(<expr pos:start="743:17" pos:end="743:49"><operator pos:start="743:17" pos:end="743:17">(</operator><name pos:start="743:18" pos:end="743:19">op</name> <operator pos:start="743:21" pos:end="743:21">&amp;</operator> <literal type="number" pos:start="743:23" pos:end="743:23">3</literal><operator pos:start="743:24" pos:end="743:24">)</operator> <operator pos:start="743:26" pos:end="743:27">==</operator> <literal type="number" pos:start="743:29" pos:end="743:29">3</literal> <operator pos:start="743:31" pos:end="743:32">||</operator> <operator pos:start="743:34" pos:end="743:34">(</operator><name pos:start="743:35" pos:end="743:39">shift</name> <operator pos:start="743:41" pos:end="743:41">&amp;</operator> <literal type="number" pos:start="743:43" pos:end="743:43">3</literal><operator pos:start="743:44" pos:end="743:44">)</operator> <operator pos:start="743:46" pos:end="743:47">==</operator> <literal type="number" pos:start="743:49" pos:end="743:49">3</literal></expr>)</condition><block type="pseudo" pos:start="745:17" pos:end="745:32"><block_content pos:start="745:17" pos:end="745:32">

                <goto pos:start="745:17" pos:end="745:32">goto <name pos:start="745:22" pos:end="745:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="747:13" pos:end="747:34"><expr pos:start="747:13" pos:end="747:33"><name pos:start="747:13" pos:end="747:15">tmp</name> <operator pos:start="747:17" pos:end="747:17">=</operator> <call pos:start="747:19" pos:end="747:33"><name pos:start="747:19" pos:end="747:26">load_reg</name><argument_list pos:start="747:27" pos:end="747:33">(<argument pos:start="747:28" pos:end="747:28"><expr pos:start="747:28" pos:end="747:28"><name pos:start="747:28" pos:end="747:28">s</name></expr></argument>, <argument pos:start="747:31" pos:end="747:32"><expr pos:start="747:31" pos:end="747:32"><name pos:start="747:31" pos:end="747:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="749:13" pos:end="749:35"><expr pos:start="749:13" pos:end="749:34"><name pos:start="749:13" pos:end="749:16">tmp2</name> <operator pos:start="749:18" pos:end="749:18">=</operator> <call pos:start="749:20" pos:end="749:34"><name pos:start="749:20" pos:end="749:27">load_reg</name><argument_list pos:start="749:28" pos:end="749:34">(<argument pos:start="749:29" pos:end="749:29"><expr pos:start="749:29" pos:end="749:29"><name pos:start="749:29" pos:end="749:29">s</name></expr></argument>, <argument pos:start="749:32" pos:end="749:33"><expr pos:start="749:32" pos:end="749:33"><name pos:start="749:32" pos:end="749:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="751:13" pos:end="751:61"><expr pos:start="751:13" pos:end="751:60"><call pos:start="751:13" pos:end="751:60"><name pos:start="751:13" pos:end="751:38">gen_thumb2_parallel_addsub</name><argument_list pos:start="751:39" pos:end="751:60">(<argument pos:start="751:40" pos:end="751:41"><expr pos:start="751:40" pos:end="751:41"><name pos:start="751:40" pos:end="751:41">op</name></expr></argument>, <argument pos:start="751:44" pos:end="751:48"><expr pos:start="751:44" pos:end="751:48"><name pos:start="751:44" pos:end="751:48">shift</name></expr></argument>, <argument pos:start="751:51" pos:end="751:53"><expr pos:start="751:51" pos:end="751:53"><name pos:start="751:51" pos:end="751:53">tmp</name></expr></argument>, <argument pos:start="751:56" pos:end="751:59"><expr pos:start="751:56" pos:end="751:59"><name pos:start="751:56" pos:end="751:59">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="753:13" pos:end="753:27"><expr pos:start="753:13" pos:end="753:26"><call pos:start="753:13" pos:end="753:26"><name pos:start="753:13" pos:end="753:20">dead_tmp</name><argument_list pos:start="753:21" pos:end="753:26">(<argument pos:start="753:22" pos:end="753:25"><expr pos:start="753:22" pos:end="753:25"><name pos:start="753:22" pos:end="753:25">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="755:13" pos:end="755:34"><expr pos:start="755:13" pos:end="755:33"><call pos:start="755:13" pos:end="755:33"><name pos:start="755:13" pos:end="755:21">store_reg</name><argument_list pos:start="755:22" pos:end="755:33">(<argument pos:start="755:23" pos:end="755:23"><expr pos:start="755:23" pos:end="755:23"><name pos:start="755:23" pos:end="755:23">s</name></expr></argument>, <argument pos:start="755:26" pos:end="755:27"><expr pos:start="755:26" pos:end="755:27"><name pos:start="755:26" pos:end="755:27">rd</name></expr></argument>, <argument pos:start="755:30" pos:end="755:32"><expr pos:start="755:30" pos:end="755:32"><name pos:start="755:30" pos:end="755:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="757:13" pos:end="757:18">break;</break>

        <case pos:start="759:9" pos:end="759:15">case <expr pos:start="759:14" pos:end="759:14"><literal type="number" pos:start="759:14" pos:end="759:14">3</literal></expr>:</case> <comment type="block" pos:start="759:17" pos:end="759:45">/* Other data processing.  */</comment>

            <expr_stmt pos:start="761:13" pos:end="761:59"><expr pos:start="761:13" pos:end="761:58"><name pos:start="761:13" pos:end="761:14">op</name> <operator pos:start="761:16" pos:end="761:16">=</operator> <operator pos:start="761:18" pos:end="761:18">(</operator><operator pos:start="761:19" pos:end="761:19">(</operator><name pos:start="761:20" pos:end="761:23">insn</name> <operator pos:start="761:25" pos:end="761:26">&gt;&gt;</operator> <literal type="number" pos:start="761:28" pos:end="761:29">17</literal><operator pos:start="761:30" pos:end="761:30">)</operator> <operator pos:start="761:32" pos:end="761:32">&amp;</operator> <literal type="number" pos:start="761:34" pos:end="761:37">0x38</literal><operator pos:start="761:38" pos:end="761:38">)</operator> <operator pos:start="761:40" pos:end="761:40">|</operator> <operator pos:start="761:42" pos:end="761:42">(</operator><operator pos:start="761:43" pos:end="761:43">(</operator><name pos:start="761:44" pos:end="761:47">insn</name> <operator pos:start="761:49" pos:end="761:50">&gt;&gt;</operator> <literal type="number" pos:start="761:52" pos:end="761:52">4</literal><operator pos:start="761:53" pos:end="761:53">)</operator> <operator pos:start="761:55" pos:end="761:55">&amp;</operator> <literal type="number" pos:start="761:57" pos:end="761:57">7</literal><operator pos:start="761:58" pos:end="761:58">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="763:13" pos:end="843:13"><if pos:start="763:13" pos:end="785:13">if <condition pos:start="763:16" pos:end="763:23">(<expr pos:start="763:17" pos:end="763:22"><name pos:start="763:17" pos:end="763:18">op</name> <operator pos:start="763:20" pos:end="763:20">&lt;</operator> <literal type="number" pos:start="763:22" pos:end="763:22">4</literal></expr>)</condition> <block pos:start="763:25" pos:end="785:13">{<block_content pos:start="767:17" pos:end="783:31">

                <comment type="block" pos:start="765:17" pos:end="765:47">/* Saturating add/subtract.  */</comment>

                <expr_stmt pos:start="767:17" pos:end="767:38"><expr pos:start="767:17" pos:end="767:37"><name pos:start="767:17" pos:end="767:19">tmp</name> <operator pos:start="767:21" pos:end="767:21">=</operator> <call pos:start="767:23" pos:end="767:37"><name pos:start="767:23" pos:end="767:30">load_reg</name><argument_list pos:start="767:31" pos:end="767:37">(<argument pos:start="767:32" pos:end="767:32"><expr pos:start="767:32" pos:end="767:32"><name pos:start="767:32" pos:end="767:32">s</name></expr></argument>, <argument pos:start="767:35" pos:end="767:36"><expr pos:start="767:35" pos:end="767:36"><name pos:start="767:35" pos:end="767:36">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="769:17" pos:end="769:39"><expr pos:start="769:17" pos:end="769:38"><name pos:start="769:17" pos:end="769:20">tmp2</name> <operator pos:start="769:22" pos:end="769:22">=</operator> <call pos:start="769:24" pos:end="769:38"><name pos:start="769:24" pos:end="769:31">load_reg</name><argument_list pos:start="769:32" pos:end="769:38">(<argument pos:start="769:33" pos:end="769:33"><expr pos:start="769:33" pos:end="769:33"><name pos:start="769:33" pos:end="769:33">s</name></expr></argument>, <argument pos:start="769:36" pos:end="769:37"><expr pos:start="769:36" pos:end="769:37"><name pos:start="769:36" pos:end="769:37">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="771:17" pos:end="773:57"><if pos:start="771:17" pos:end="773:57">if <condition pos:start="771:20" pos:end="771:27">(<expr pos:start="771:21" pos:end="771:26"><name pos:start="771:21" pos:end="771:22">op</name> <operator pos:start="771:24" pos:end="771:24">&amp;</operator> <literal type="number" pos:start="771:26" pos:end="771:26">1</literal></expr>)</condition><block type="pseudo" pos:start="773:21" pos:end="773:57"><block_content pos:start="773:21" pos:end="773:57">

                    <expr_stmt pos:start="773:21" pos:end="773:57"><expr pos:start="773:21" pos:end="773:56"><call pos:start="773:21" pos:end="773:56"><name pos:start="773:21" pos:end="773:46">gen_helper_double_saturate</name><argument_list pos:start="773:47" pos:end="773:56">(<argument pos:start="773:48" pos:end="773:50"><expr pos:start="773:48" pos:end="773:50"><name pos:start="773:48" pos:end="773:50">tmp</name></expr></argument>, <argument pos:start="773:53" pos:end="773:55"><expr pos:start="773:53" pos:end="773:55"><name pos:start="773:53" pos:end="773:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <if_stmt pos:start="775:17" pos:end="781:60"><if pos:start="775:17" pos:end="777:60">if <condition pos:start="775:20" pos:end="775:27">(<expr pos:start="775:21" pos:end="775:26"><name pos:start="775:21" pos:end="775:22">op</name> <operator pos:start="775:24" pos:end="775:24">&amp;</operator> <literal type="number" pos:start="775:26" pos:end="775:26">2</literal></expr>)</condition><block type="pseudo" pos:start="777:21" pos:end="777:60"><block_content pos:start="777:21" pos:end="777:60">

                    <expr_stmt pos:start="777:21" pos:end="777:60"><expr pos:start="777:21" pos:end="777:59"><call pos:start="777:21" pos:end="777:59"><name pos:start="777:21" pos:end="777:43">gen_helper_sub_saturate</name><argument_list pos:start="777:44" pos:end="777:59">(<argument pos:start="777:45" pos:end="777:47"><expr pos:start="777:45" pos:end="777:47"><name pos:start="777:45" pos:end="777:47">tmp</name></expr></argument>, <argument pos:start="777:50" pos:end="777:53"><expr pos:start="777:50" pos:end="777:53"><name pos:start="777:50" pos:end="777:53">tmp2</name></expr></argument>, <argument pos:start="777:56" pos:end="777:58"><expr pos:start="777:56" pos:end="777:58"><name pos:start="777:56" pos:end="777:58">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="779:17" pos:end="781:60">else<block type="pseudo" pos:start="781:21" pos:end="781:60"><block_content pos:start="781:21" pos:end="781:60">

                    <expr_stmt pos:start="781:21" pos:end="781:60"><expr pos:start="781:21" pos:end="781:59"><call pos:start="781:21" pos:end="781:59"><name pos:start="781:21" pos:end="781:43">gen_helper_add_saturate</name><argument_list pos:start="781:44" pos:end="781:59">(<argument pos:start="781:45" pos:end="781:47"><expr pos:start="781:45" pos:end="781:47"><name pos:start="781:45" pos:end="781:47">tmp</name></expr></argument>, <argument pos:start="781:50" pos:end="781:52"><expr pos:start="781:50" pos:end="781:52"><name pos:start="781:50" pos:end="781:52">tmp</name></expr></argument>, <argument pos:start="781:55" pos:end="781:58"><expr pos:start="781:55" pos:end="781:58"><name pos:start="781:55" pos:end="781:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="783:17" pos:end="783:31"><expr pos:start="783:17" pos:end="783:30"><call pos:start="783:17" pos:end="783:30"><name pos:start="783:17" pos:end="783:24">dead_tmp</name><argument_list pos:start="783:25" pos:end="783:30">(<argument pos:start="783:26" pos:end="783:29"><expr pos:start="783:26" pos:end="783:29"><name pos:start="783:26" pos:end="783:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="785:15" pos:end="843:13">else <block pos:start="785:20" pos:end="843:13">{<block_content pos:start="787:17" pos:end="841:17">

                <expr_stmt pos:start="787:17" pos:end="787:38"><expr pos:start="787:17" pos:end="787:37"><name pos:start="787:17" pos:end="787:19">tmp</name> <operator pos:start="787:21" pos:end="787:21">=</operator> <call pos:start="787:23" pos:end="787:37"><name pos:start="787:23" pos:end="787:30">load_reg</name><argument_list pos:start="787:31" pos:end="787:37">(<argument pos:start="787:32" pos:end="787:32"><expr pos:start="787:32" pos:end="787:32"><name pos:start="787:32" pos:end="787:32">s</name></expr></argument>, <argument pos:start="787:35" pos:end="787:36"><expr pos:start="787:35" pos:end="787:36"><name pos:start="787:35" pos:end="787:36">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <switch pos:start="789:17" pos:end="841:17">switch <condition pos:start="789:24" pos:end="789:27">(<expr pos:start="789:25" pos:end="789:26"><name pos:start="789:25" pos:end="789:26">op</name></expr>)</condition> <block pos:start="789:29" pos:end="841:17">{<block_content pos:start="791:17" pos:end="839:36">

                <case pos:start="791:17" pos:end="791:26">case <expr pos:start="791:22" pos:end="791:25"><literal type="number" pos:start="791:22" pos:end="791:25">0x0a</literal></expr>:</case> <comment type="block" pos:start="791:28" pos:end="791:37">/* rbit */</comment>

                    <expr_stmt pos:start="793:21" pos:end="793:46"><expr pos:start="793:21" pos:end="793:45"><call pos:start="793:21" pos:end="793:45"><name pos:start="793:21" pos:end="793:35">gen_helper_rbit</name><argument_list pos:start="793:36" pos:end="793:45">(<argument pos:start="793:37" pos:end="793:39"><expr pos:start="793:37" pos:end="793:39"><name pos:start="793:37" pos:end="793:39">tmp</name></expr></argument>, <argument pos:start="793:42" pos:end="793:44"><expr pos:start="793:42" pos:end="793:44"><name pos:start="793:42" pos:end="793:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="795:21" pos:end="795:26">break;</break>

                <case pos:start="797:17" pos:end="797:26">case <expr pos:start="797:22" pos:end="797:25"><literal type="number" pos:start="797:22" pos:end="797:25">0x08</literal></expr>:</case> <comment type="block" pos:start="797:28" pos:end="797:36">/* rev */</comment>

                    <expr_stmt pos:start="799:21" pos:end="799:50"><expr pos:start="799:21" pos:end="799:49"><call pos:start="799:21" pos:end="799:49"><name pos:start="799:21" pos:end="799:39">tcg_gen_bswap32_i32</name><argument_list pos:start="799:40" pos:end="799:49">(<argument pos:start="799:41" pos:end="799:43"><expr pos:start="799:41" pos:end="799:43"><name pos:start="799:41" pos:end="799:43">tmp</name></expr></argument>, <argument pos:start="799:46" pos:end="799:48"><expr pos:start="799:46" pos:end="799:48"><name pos:start="799:46" pos:end="799:48">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="801:21" pos:end="801:26">break;</break>

                <case pos:start="803:17" pos:end="803:26">case <expr pos:start="803:22" pos:end="803:25"><literal type="number" pos:start="803:22" pos:end="803:25">0x09</literal></expr>:</case> <comment type="block" pos:start="803:28" pos:end="803:38">/* rev16 */</comment>

                    <expr_stmt pos:start="805:21" pos:end="805:35"><expr pos:start="805:21" pos:end="805:34"><call pos:start="805:21" pos:end="805:34"><name pos:start="805:21" pos:end="805:29">gen_rev16</name><argument_list pos:start="805:30" pos:end="805:34">(<argument pos:start="805:31" pos:end="805:33"><expr pos:start="805:31" pos:end="805:33"><name pos:start="805:31" pos:end="805:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="807:21" pos:end="807:26">break;</break>

                <case pos:start="809:17" pos:end="809:26">case <expr pos:start="809:22" pos:end="809:25"><literal type="number" pos:start="809:22" pos:end="809:25">0x0b</literal></expr>:</case> <comment type="block" pos:start="809:28" pos:end="809:38">/* revsh */</comment>

                    <expr_stmt pos:start="811:21" pos:end="811:35"><expr pos:start="811:21" pos:end="811:34"><call pos:start="811:21" pos:end="811:34"><name pos:start="811:21" pos:end="811:29">gen_revsh</name><argument_list pos:start="811:30" pos:end="811:34">(<argument pos:start="811:31" pos:end="811:33"><expr pos:start="811:31" pos:end="811:33"><name pos:start="811:31" pos:end="811:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="813:21" pos:end="813:26">break;</break>

                <case pos:start="815:17" pos:end="815:26">case <expr pos:start="815:22" pos:end="815:25"><literal type="number" pos:start="815:22" pos:end="815:25">0x10</literal></expr>:</case> <comment type="block" pos:start="815:28" pos:end="815:36">/* sel */</comment>

                    <expr_stmt pos:start="817:21" pos:end="817:43"><expr pos:start="817:21" pos:end="817:42"><name pos:start="817:21" pos:end="817:24">tmp2</name> <operator pos:start="817:26" pos:end="817:26">=</operator> <call pos:start="817:28" pos:end="817:42"><name pos:start="817:28" pos:end="817:35">load_reg</name><argument_list pos:start="817:36" pos:end="817:42">(<argument pos:start="817:37" pos:end="817:37"><expr pos:start="817:37" pos:end="817:37"><name pos:start="817:37" pos:end="817:37">s</name></expr></argument>, <argument pos:start="817:40" pos:end="817:41"><expr pos:start="817:40" pos:end="817:41"><name pos:start="817:40" pos:end="817:41">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="819:21" pos:end="819:37"><expr pos:start="819:21" pos:end="819:36"><name pos:start="819:21" pos:end="819:24">tmp3</name> <operator pos:start="819:26" pos:end="819:26">=</operator> <call pos:start="819:28" pos:end="819:36"><name pos:start="819:28" pos:end="819:34">new_tmp</name><argument_list pos:start="819:35" pos:end="819:36">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="821:21" pos:end="821:74"><expr pos:start="821:21" pos:end="821:73"><call pos:start="821:21" pos:end="821:73"><name pos:start="821:21" pos:end="821:34">tcg_gen_ld_i32</name><argument_list pos:start="821:35" pos:end="821:73">(<argument pos:start="821:36" pos:end="821:39"><expr pos:start="821:36" pos:end="821:39"><name pos:start="821:36" pos:end="821:39">tmp3</name></expr></argument>, <argument pos:start="821:42" pos:end="821:48"><expr pos:start="821:42" pos:end="821:48"><name pos:start="821:42" pos:end="821:48">cpu_env</name></expr></argument>, <argument pos:start="821:51" pos:end="821:72"><expr pos:start="821:51" pos:end="821:72"><call pos:start="821:51" pos:end="821:72"><name pos:start="821:51" pos:end="821:58">offsetof</name><argument_list pos:start="821:59" pos:end="821:72">(<argument pos:start="821:60" pos:end="821:67"><expr pos:start="821:60" pos:end="821:67"><name pos:start="821:60" pos:end="821:67">CPUState</name></expr></argument>, <argument pos:start="821:70" pos:end="821:71"><expr pos:start="821:70" pos:end="821:71"><name pos:start="821:70" pos:end="821:71">GE</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="823:21" pos:end="823:63"><expr pos:start="823:21" pos:end="823:62"><call pos:start="823:21" pos:end="823:62"><name pos:start="823:21" pos:end="823:40">gen_helper_sel_flags</name><argument_list pos:start="823:41" pos:end="823:62">(<argument pos:start="823:42" pos:end="823:44"><expr pos:start="823:42" pos:end="823:44"><name pos:start="823:42" pos:end="823:44">tmp</name></expr></argument>, <argument pos:start="823:47" pos:end="823:50"><expr pos:start="823:47" pos:end="823:50"><name pos:start="823:47" pos:end="823:50">tmp3</name></expr></argument>, <argument pos:start="823:53" pos:end="823:55"><expr pos:start="823:53" pos:end="823:55"><name pos:start="823:53" pos:end="823:55">tmp</name></expr></argument>, <argument pos:start="823:58" pos:end="823:61"><expr pos:start="823:58" pos:end="823:61"><name pos:start="823:58" pos:end="823:61">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="825:21" pos:end="825:35"><expr pos:start="825:21" pos:end="825:34"><call pos:start="825:21" pos:end="825:34"><name pos:start="825:21" pos:end="825:28">dead_tmp</name><argument_list pos:start="825:29" pos:end="825:34">(<argument pos:start="825:30" pos:end="825:33"><expr pos:start="825:30" pos:end="825:33"><name pos:start="825:30" pos:end="825:33">tmp3</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="827:21" pos:end="827:35"><expr pos:start="827:21" pos:end="827:34"><call pos:start="827:21" pos:end="827:34"><name pos:start="827:21" pos:end="827:28">dead_tmp</name><argument_list pos:start="827:29" pos:end="827:34">(<argument pos:start="827:30" pos:end="827:33"><expr pos:start="827:30" pos:end="827:33"><name pos:start="827:30" pos:end="827:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="829:21" pos:end="829:26">break;</break>

                <case pos:start="831:17" pos:end="831:26">case <expr pos:start="831:22" pos:end="831:25"><literal type="number" pos:start="831:22" pos:end="831:25">0x18</literal></expr>:</case> <comment type="block" pos:start="831:28" pos:end="831:36">/* clz */</comment>

                    <expr_stmt pos:start="833:21" pos:end="833:45"><expr pos:start="833:21" pos:end="833:44"><call pos:start="833:21" pos:end="833:44"><name pos:start="833:21" pos:end="833:34">gen_helper_clz</name><argument_list pos:start="833:35" pos:end="833:44">(<argument pos:start="833:36" pos:end="833:38"><expr pos:start="833:36" pos:end="833:38"><name pos:start="833:36" pos:end="833:38">tmp</name></expr></argument>, <argument pos:start="833:41" pos:end="833:43"><expr pos:start="833:41" pos:end="833:43"><name pos:start="833:41" pos:end="833:43">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="835:21" pos:end="835:26">break;</break>

                <default pos:start="837:17" pos:end="837:24">default:</default>

                    <goto pos:start="839:21" pos:end="839:36">goto <name pos:start="839:26" pos:end="839:35">illegal_op</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

            <expr_stmt pos:start="845:13" pos:end="845:34"><expr pos:start="845:13" pos:end="845:33"><call pos:start="845:13" pos:end="845:33"><name pos:start="845:13" pos:end="845:21">store_reg</name><argument_list pos:start="845:22" pos:end="845:33">(<argument pos:start="845:23" pos:end="845:23"><expr pos:start="845:23" pos:end="845:23"><name pos:start="845:23" pos:end="845:23">s</name></expr></argument>, <argument pos:start="845:26" pos:end="845:27"><expr pos:start="845:26" pos:end="845:27"><name pos:start="845:26" pos:end="845:27">rd</name></expr></argument>, <argument pos:start="845:30" pos:end="845:32"><expr pos:start="845:30" pos:end="845:32"><name pos:start="845:30" pos:end="845:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="847:13" pos:end="847:18">break;</break>

        <case pos:start="849:9" pos:end="849:15">case <expr pos:start="849:14" pos:end="849:14"><literal type="number" pos:start="849:14" pos:end="849:14">4</literal></expr>:</case> <case pos:start="849:17" pos:end="849:23">case <expr pos:start="849:22" pos:end="849:22"><literal type="number" pos:start="849:22" pos:end="849:22">5</literal></expr>:</case> <comment type="block" pos:start="849:25" pos:end="849:77">/* 32-bit multiply.  Sum of absolute differences.  */</comment>

            <expr_stmt pos:start="851:13" pos:end="851:35"><expr pos:start="851:13" pos:end="851:34"><name pos:start="851:13" pos:end="851:14">op</name> <operator pos:start="851:16" pos:end="851:16">=</operator> <operator pos:start="851:18" pos:end="851:18">(</operator><name pos:start="851:19" pos:end="851:22">insn</name> <operator pos:start="851:24" pos:end="851:25">&gt;&gt;</operator> <literal type="number" pos:start="851:27" pos:end="851:27">4</literal><operator pos:start="851:28" pos:end="851:28">)</operator> <operator pos:start="851:30" pos:end="851:30">&amp;</operator> <literal type="number" pos:start="851:32" pos:end="851:34">0xf</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="853:13" pos:end="853:34"><expr pos:start="853:13" pos:end="853:33"><name pos:start="853:13" pos:end="853:15">tmp</name> <operator pos:start="853:17" pos:end="853:17">=</operator> <call pos:start="853:19" pos:end="853:33"><name pos:start="853:19" pos:end="853:26">load_reg</name><argument_list pos:start="853:27" pos:end="853:33">(<argument pos:start="853:28" pos:end="853:28"><expr pos:start="853:28" pos:end="853:28"><name pos:start="853:28" pos:end="853:28">s</name></expr></argument>, <argument pos:start="853:31" pos:end="853:32"><expr pos:start="853:31" pos:end="853:32"><name pos:start="853:31" pos:end="853:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="855:13" pos:end="855:35"><expr pos:start="855:13" pos:end="855:34"><name pos:start="855:13" pos:end="855:16">tmp2</name> <operator pos:start="855:18" pos:end="855:18">=</operator> <call pos:start="855:20" pos:end="855:34"><name pos:start="855:20" pos:end="855:27">load_reg</name><argument_list pos:start="855:28" pos:end="855:34">(<argument pos:start="855:29" pos:end="855:29"><expr pos:start="855:29" pos:end="855:29"><name pos:start="855:29" pos:end="855:29">s</name></expr></argument>, <argument pos:start="855:32" pos:end="855:33"><expr pos:start="855:32" pos:end="855:33"><name pos:start="855:32" pos:end="855:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="857:13" pos:end="1027:13">switch <condition pos:start="857:20" pos:end="857:37">(<expr pos:start="857:21" pos:end="857:36"><operator pos:start="857:21" pos:end="857:21">(</operator><name pos:start="857:22" pos:end="857:25">insn</name> <operator pos:start="857:27" pos:end="857:28">&gt;&gt;</operator> <literal type="number" pos:start="857:30" pos:end="857:31">20</literal><operator pos:start="857:32" pos:end="857:32">)</operator> <operator pos:start="857:34" pos:end="857:34">&amp;</operator> <literal type="number" pos:start="857:36" pos:end="857:36">7</literal></expr>)</condition> <block pos:start="857:39" pos:end="1027:13">{<block_content pos:start="859:13" pos:end="1025:22">

            <case pos:start="859:13" pos:end="859:19">case <expr pos:start="859:18" pos:end="859:18"><literal type="number" pos:start="859:18" pos:end="859:18">0</literal></expr>:</case> <comment type="block" pos:start="859:21" pos:end="859:39">/* 32 x 32 -&gt; 32 */</comment>

                <expr_stmt pos:start="861:17" pos:end="861:48"><expr pos:start="861:17" pos:end="861:47"><call pos:start="861:17" pos:end="861:47"><name pos:start="861:17" pos:end="861:31">tcg_gen_mul_i32</name><argument_list pos:start="861:32" pos:end="861:47">(<argument pos:start="861:33" pos:end="861:35"><expr pos:start="861:33" pos:end="861:35"><name pos:start="861:33" pos:end="861:35">tmp</name></expr></argument>, <argument pos:start="861:38" pos:end="861:40"><expr pos:start="861:38" pos:end="861:40"><name pos:start="861:38" pos:end="861:40">tmp</name></expr></argument>, <argument pos:start="861:43" pos:end="861:46"><expr pos:start="861:43" pos:end="861:46"><name pos:start="861:43" pos:end="861:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="863:17" pos:end="863:31"><expr pos:start="863:17" pos:end="863:30"><call pos:start="863:17" pos:end="863:30"><name pos:start="863:17" pos:end="863:24">dead_tmp</name><argument_list pos:start="863:25" pos:end="863:30">(<argument pos:start="863:26" pos:end="863:29"><expr pos:start="863:26" pos:end="863:29"><name pos:start="863:26" pos:end="863:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="865:17" pos:end="879:17"><if pos:start="865:17" pos:end="879:17">if <condition pos:start="865:20" pos:end="865:29">(<expr pos:start="865:21" pos:end="865:28"><name pos:start="865:21" pos:end="865:22">rs</name> <operator pos:start="865:24" pos:end="865:25">!=</operator> <literal type="number" pos:start="865:27" pos:end="865:28">15</literal></expr>)</condition> <block pos:start="865:31" pos:end="879:17">{<block_content pos:start="867:21" pos:end="877:35">

                    <expr_stmt pos:start="867:21" pos:end="867:43"><expr pos:start="867:21" pos:end="867:42"><name pos:start="867:21" pos:end="867:24">tmp2</name> <operator pos:start="867:26" pos:end="867:26">=</operator> <call pos:start="867:28" pos:end="867:42"><name pos:start="867:28" pos:end="867:35">load_reg</name><argument_list pos:start="867:36" pos:end="867:42">(<argument pos:start="867:37" pos:end="867:37"><expr pos:start="867:37" pos:end="867:37"><name pos:start="867:37" pos:end="867:37">s</name></expr></argument>, <argument pos:start="867:40" pos:end="867:41"><expr pos:start="867:40" pos:end="867:41"><name pos:start="867:40" pos:end="867:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="869:21" pos:end="875:56"><if pos:start="869:21" pos:end="871:56">if <condition pos:start="869:24" pos:end="869:27">(<expr pos:start="869:25" pos:end="869:26"><name pos:start="869:25" pos:end="869:26">op</name></expr>)</condition><block type="pseudo" pos:start="871:25" pos:end="871:56"><block_content pos:start="871:25" pos:end="871:56">

                        <expr_stmt pos:start="871:25" pos:end="871:56"><expr pos:start="871:25" pos:end="871:55"><call pos:start="871:25" pos:end="871:55"><name pos:start="871:25" pos:end="871:39">tcg_gen_sub_i32</name><argument_list pos:start="871:40" pos:end="871:55">(<argument pos:start="871:41" pos:end="871:43"><expr pos:start="871:41" pos:end="871:43"><name pos:start="871:41" pos:end="871:43">tmp</name></expr></argument>, <argument pos:start="871:46" pos:end="871:49"><expr pos:start="871:46" pos:end="871:49"><name pos:start="871:46" pos:end="871:49">tmp2</name></expr></argument>, <argument pos:start="871:52" pos:end="871:54"><expr pos:start="871:52" pos:end="871:54"><name pos:start="871:52" pos:end="871:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                    <else pos:start="873:21" pos:end="875:56">else<block type="pseudo" pos:start="875:25" pos:end="875:56"><block_content pos:start="875:25" pos:end="875:56">

                        <expr_stmt pos:start="875:25" pos:end="875:56"><expr pos:start="875:25" pos:end="875:55"><call pos:start="875:25" pos:end="875:55"><name pos:start="875:25" pos:end="875:39">tcg_gen_add_i32</name><argument_list pos:start="875:40" pos:end="875:55">(<argument pos:start="875:41" pos:end="875:43"><expr pos:start="875:41" pos:end="875:43"><name pos:start="875:41" pos:end="875:43">tmp</name></expr></argument>, <argument pos:start="875:46" pos:end="875:48"><expr pos:start="875:46" pos:end="875:48"><name pos:start="875:46" pos:end="875:48">tmp</name></expr></argument>, <argument pos:start="875:51" pos:end="875:54"><expr pos:start="875:51" pos:end="875:54"><name pos:start="875:51" pos:end="875:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                    <expr_stmt pos:start="877:21" pos:end="877:35"><expr pos:start="877:21" pos:end="877:34"><call pos:start="877:21" pos:end="877:34"><name pos:start="877:21" pos:end="877:28">dead_tmp</name><argument_list pos:start="877:29" pos:end="877:34">(<argument pos:start="877:30" pos:end="877:33"><expr pos:start="877:30" pos:end="877:33"><name pos:start="877:30" pos:end="877:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="881:17" pos:end="881:22">break;</break>

            <case pos:start="883:13" pos:end="883:19">case <expr pos:start="883:18" pos:end="883:18"><literal type="number" pos:start="883:18" pos:end="883:18">1</literal></expr>:</case> <comment type="block" pos:start="883:21" pos:end="883:39">/* 16 x 16 -&gt; 32 */</comment>

                <expr_stmt pos:start="885:17" pos:end="885:53"><expr pos:start="885:17" pos:end="885:52"><call pos:start="885:17" pos:end="885:52"><name pos:start="885:17" pos:end="885:25">gen_mulxy</name><argument_list pos:start="885:26" pos:end="885:52">(<argument pos:start="885:27" pos:end="885:29"><expr pos:start="885:27" pos:end="885:29"><name pos:start="885:27" pos:end="885:29">tmp</name></expr></argument>, <argument pos:start="885:32" pos:end="885:35"><expr pos:start="885:32" pos:end="885:35"><name pos:start="885:32" pos:end="885:35">tmp2</name></expr></argument>, <argument pos:start="885:38" pos:end="885:43"><expr pos:start="885:38" pos:end="885:43"><name pos:start="885:38" pos:end="885:39">op</name> <operator pos:start="885:41" pos:end="885:41">&amp;</operator> <literal type="number" pos:start="885:43" pos:end="885:43">2</literal></expr></argument>, <argument pos:start="885:46" pos:end="885:51"><expr pos:start="885:46" pos:end="885:51"><name pos:start="885:46" pos:end="885:47">op</name> <operator pos:start="885:49" pos:end="885:49">&amp;</operator> <literal type="number" pos:start="885:51" pos:end="885:51">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="887:17" pos:end="887:31"><expr pos:start="887:17" pos:end="887:30"><call pos:start="887:17" pos:end="887:30"><name pos:start="887:17" pos:end="887:24">dead_tmp</name><argument_list pos:start="887:25" pos:end="887:30">(<argument pos:start="887:26" pos:end="887:29"><expr pos:start="887:26" pos:end="887:29"><name pos:start="887:26" pos:end="887:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="889:17" pos:end="897:17"><if pos:start="889:17" pos:end="897:17">if <condition pos:start="889:20" pos:end="889:29">(<expr pos:start="889:21" pos:end="889:28"><name pos:start="889:21" pos:end="889:22">rs</name> <operator pos:start="889:24" pos:end="889:25">!=</operator> <literal type="number" pos:start="889:27" pos:end="889:28">15</literal></expr>)</condition> <block pos:start="889:31" pos:end="897:17">{<block_content pos:start="891:21" pos:end="895:35">

                    <expr_stmt pos:start="891:21" pos:end="891:43"><expr pos:start="891:21" pos:end="891:42"><name pos:start="891:21" pos:end="891:24">tmp2</name> <operator pos:start="891:26" pos:end="891:26">=</operator> <call pos:start="891:28" pos:end="891:42"><name pos:start="891:28" pos:end="891:35">load_reg</name><argument_list pos:start="891:36" pos:end="891:42">(<argument pos:start="891:37" pos:end="891:37"><expr pos:start="891:37" pos:end="891:37"><name pos:start="891:37" pos:end="891:37">s</name></expr></argument>, <argument pos:start="891:40" pos:end="891:41"><expr pos:start="891:40" pos:end="891:41"><name pos:start="891:40" pos:end="891:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="893:21" pos:end="893:56"><expr pos:start="893:21" pos:end="893:55"><call pos:start="893:21" pos:end="893:55"><name pos:start="893:21" pos:end="893:39">gen_helper_add_setq</name><argument_list pos:start="893:40" pos:end="893:55">(<argument pos:start="893:41" pos:end="893:43"><expr pos:start="893:41" pos:end="893:43"><name pos:start="893:41" pos:end="893:43">tmp</name></expr></argument>, <argument pos:start="893:46" pos:end="893:48"><expr pos:start="893:46" pos:end="893:48"><name pos:start="893:46" pos:end="893:48">tmp</name></expr></argument>, <argument pos:start="893:51" pos:end="893:54"><expr pos:start="893:51" pos:end="893:54"><name pos:start="893:51" pos:end="893:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="895:21" pos:end="895:35"><expr pos:start="895:21" pos:end="895:34"><call pos:start="895:21" pos:end="895:34"><name pos:start="895:21" pos:end="895:28">dead_tmp</name><argument_list pos:start="895:29" pos:end="895:34">(<argument pos:start="895:30" pos:end="895:33"><expr pos:start="895:30" pos:end="895:33"><name pos:start="895:30" pos:end="895:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="899:17" pos:end="899:22">break;</break>

            <case pos:start="901:13" pos:end="901:19">case <expr pos:start="901:18" pos:end="901:18"><literal type="number" pos:start="901:18" pos:end="901:18">2</literal></expr>:</case> <comment type="block" pos:start="901:21" pos:end="901:45">/* Dual multiply add.  */</comment>

            <case pos:start="903:13" pos:end="903:19">case <expr pos:start="903:18" pos:end="903:18"><literal type="number" pos:start="903:18" pos:end="903:18">4</literal></expr>:</case> <comment type="block" pos:start="903:21" pos:end="903:50">/* Dual multiply subtract.  */</comment>

                <if_stmt pos:start="905:17" pos:end="907:40"><if pos:start="905:17" pos:end="907:40">if <condition pos:start="905:20" pos:end="905:23">(<expr pos:start="905:21" pos:end="905:22"><name pos:start="905:21" pos:end="905:22">op</name></expr>)</condition><block type="pseudo" pos:start="907:21" pos:end="907:40"><block_content pos:start="907:21" pos:end="907:40">

                    <expr_stmt pos:start="907:21" pos:end="907:40"><expr pos:start="907:21" pos:end="907:39"><call pos:start="907:21" pos:end="907:39"><name pos:start="907:21" pos:end="907:33">gen_swap_half</name><argument_list pos:start="907:34" pos:end="907:39">(<argument pos:start="907:35" pos:end="907:38"><expr pos:start="907:35" pos:end="907:38"><name pos:start="907:35" pos:end="907:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="909:17" pos:end="909:41"><expr pos:start="909:17" pos:end="909:40"><call pos:start="909:17" pos:end="909:40"><name pos:start="909:17" pos:end="909:29">gen_smul_dual</name><argument_list pos:start="909:30" pos:end="909:40">(<argument pos:start="909:31" pos:end="909:33"><expr pos:start="909:31" pos:end="909:33"><name pos:start="909:31" pos:end="909:33">tmp</name></expr></argument>, <argument pos:start="909:36" pos:end="909:39"><expr pos:start="909:36" pos:end="909:39"><name pos:start="909:36" pos:end="909:39">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="911:17" pos:end="911:53">/* This addition cannot overflow.  */</comment>

                <if_stmt pos:start="913:17" pos:end="921:17"><if pos:start="913:17" pos:end="917:17">if <condition pos:start="913:20" pos:end="913:37">(<expr pos:start="913:21" pos:end="913:36"><name pos:start="913:21" pos:end="913:24">insn</name> <operator pos:start="913:26" pos:end="913:26">&amp;</operator> <operator pos:start="913:28" pos:end="913:28">(</operator><literal type="number" pos:start="913:29" pos:end="913:29">1</literal> <operator pos:start="913:31" pos:end="913:32">&lt;&lt;</operator> <literal type="number" pos:start="913:34" pos:end="913:35">22</literal><operator pos:start="913:36" pos:end="913:36">)</operator></expr>)</condition> <block pos:start="913:39" pos:end="917:17">{<block_content pos:start="915:21" pos:end="915:52">

                    <expr_stmt pos:start="915:21" pos:end="915:52"><expr pos:start="915:21" pos:end="915:51"><call pos:start="915:21" pos:end="915:51"><name pos:start="915:21" pos:end="915:35">tcg_gen_sub_i32</name><argument_list pos:start="915:36" pos:end="915:51">(<argument pos:start="915:37" pos:end="915:39"><expr pos:start="915:37" pos:end="915:39"><name pos:start="915:37" pos:end="915:39">tmp</name></expr></argument>, <argument pos:start="915:42" pos:end="915:44"><expr pos:start="915:42" pos:end="915:44"><name pos:start="915:42" pos:end="915:44">tmp</name></expr></argument>, <argument pos:start="915:47" pos:end="915:50"><expr pos:start="915:47" pos:end="915:50"><name pos:start="915:47" pos:end="915:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="917:19" pos:end="921:17">else <block pos:start="917:24" pos:end="921:17">{<block_content pos:start="919:21" pos:end="919:52">

                    <expr_stmt pos:start="919:21" pos:end="919:52"><expr pos:start="919:21" pos:end="919:51"><call pos:start="919:21" pos:end="919:51"><name pos:start="919:21" pos:end="919:35">tcg_gen_add_i32</name><argument_list pos:start="919:36" pos:end="919:51">(<argument pos:start="919:37" pos:end="919:39"><expr pos:start="919:37" pos:end="919:39"><name pos:start="919:37" pos:end="919:39">tmp</name></expr></argument>, <argument pos:start="919:42" pos:end="919:44"><expr pos:start="919:42" pos:end="919:44"><name pos:start="919:42" pos:end="919:44">tmp</name></expr></argument>, <argument pos:start="919:47" pos:end="919:50"><expr pos:start="919:47" pos:end="919:50"><name pos:start="919:47" pos:end="919:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="923:17" pos:end="923:31"><expr pos:start="923:17" pos:end="923:30"><call pos:start="923:17" pos:end="923:30"><name pos:start="923:17" pos:end="923:24">dead_tmp</name><argument_list pos:start="923:25" pos:end="923:30">(<argument pos:start="923:26" pos:end="923:29"><expr pos:start="923:26" pos:end="923:29"><name pos:start="923:26" pos:end="923:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="925:17" pos:end="935:19"><if pos:start="925:17" pos:end="935:19">if <condition pos:start="925:20" pos:end="925:29">(<expr pos:start="925:21" pos:end="925:28"><name pos:start="925:21" pos:end="925:22">rs</name> <operator pos:start="925:24" pos:end="925:25">!=</operator> <literal type="number" pos:start="925:27" pos:end="925:28">15</literal></expr>)</condition>

                  <block pos:start="927:19" pos:end="935:19">{<block_content pos:start="929:21" pos:end="933:35">

                    <expr_stmt pos:start="929:21" pos:end="929:43"><expr pos:start="929:21" pos:end="929:42"><name pos:start="929:21" pos:end="929:24">tmp2</name> <operator pos:start="929:26" pos:end="929:26">=</operator> <call pos:start="929:28" pos:end="929:42"><name pos:start="929:28" pos:end="929:35">load_reg</name><argument_list pos:start="929:36" pos:end="929:42">(<argument pos:start="929:37" pos:end="929:37"><expr pos:start="929:37" pos:end="929:37"><name pos:start="929:37" pos:end="929:37">s</name></expr></argument>, <argument pos:start="929:40" pos:end="929:41"><expr pos:start="929:40" pos:end="929:41"><name pos:start="929:40" pos:end="929:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="931:21" pos:end="931:56"><expr pos:start="931:21" pos:end="931:55"><call pos:start="931:21" pos:end="931:55"><name pos:start="931:21" pos:end="931:39">gen_helper_add_setq</name><argument_list pos:start="931:40" pos:end="931:55">(<argument pos:start="931:41" pos:end="931:43"><expr pos:start="931:41" pos:end="931:43"><name pos:start="931:41" pos:end="931:43">tmp</name></expr></argument>, <argument pos:start="931:46" pos:end="931:48"><expr pos:start="931:46" pos:end="931:48"><name pos:start="931:46" pos:end="931:48">tmp</name></expr></argument>, <argument pos:start="931:51" pos:end="931:54"><expr pos:start="931:51" pos:end="931:54"><name pos:start="931:51" pos:end="931:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="933:21" pos:end="933:35"><expr pos:start="933:21" pos:end="933:34"><call pos:start="933:21" pos:end="933:34"><name pos:start="933:21" pos:end="933:28">dead_tmp</name><argument_list pos:start="933:29" pos:end="933:34">(<argument pos:start="933:30" pos:end="933:33"><expr pos:start="933:30" pos:end="933:33"><name pos:start="933:30" pos:end="933:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

                <break pos:start="937:17" pos:end="937:22">break;</break>

            <case pos:start="939:13" pos:end="939:19">case <expr pos:start="939:18" pos:end="939:18"><literal type="number" pos:start="939:18" pos:end="939:18">3</literal></expr>:</case> <comment type="block" pos:start="939:21" pos:end="939:42">/* 32 * 16 -&gt; 32msb */</comment>

                <if_stmt pos:start="941:17" pos:end="947:35"><if pos:start="941:17" pos:end="943:53">if <condition pos:start="941:20" pos:end="941:23">(<expr pos:start="941:21" pos:end="941:22"><name pos:start="941:21" pos:end="941:22">op</name></expr>)</condition><block type="pseudo" pos:start="943:21" pos:end="943:53"><block_content pos:start="943:21" pos:end="943:53">

                    <expr_stmt pos:start="943:21" pos:end="943:53"><expr pos:start="943:21" pos:end="943:52"><call pos:start="943:21" pos:end="943:52"><name pos:start="943:21" pos:end="943:36">tcg_gen_sari_i32</name><argument_list pos:start="943:37" pos:end="943:52">(<argument pos:start="943:38" pos:end="943:41"><expr pos:start="943:38" pos:end="943:41"><name pos:start="943:38" pos:end="943:41">tmp2</name></expr></argument>, <argument pos:start="943:44" pos:end="943:47"><expr pos:start="943:44" pos:end="943:47"><name pos:start="943:44" pos:end="943:47">tmp2</name></expr></argument>, <argument pos:start="943:50" pos:end="943:51"><expr pos:start="943:50" pos:end="943:51"><literal type="number" pos:start="943:50" pos:end="943:51">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="945:17" pos:end="947:35">else<block type="pseudo" pos:start="947:21" pos:end="947:35"><block_content pos:start="947:21" pos:end="947:35">

                    <expr_stmt pos:start="947:21" pos:end="947:35"><expr pos:start="947:21" pos:end="947:34"><call pos:start="947:21" pos:end="947:34"><name pos:start="947:21" pos:end="947:28">gen_sxth</name><argument_list pos:start="947:29" pos:end="947:34">(<argument pos:start="947:30" pos:end="947:33"><expr pos:start="947:30" pos:end="947:33"><name pos:start="947:30" pos:end="947:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="949:17" pos:end="949:52"><expr pos:start="949:17" pos:end="949:51"><name pos:start="949:17" pos:end="949:21">tmp64</name> <operator pos:start="949:23" pos:end="949:23">=</operator> <call pos:start="949:25" pos:end="949:51"><name pos:start="949:25" pos:end="949:40">gen_muls_i64_i32</name><argument_list pos:start="949:41" pos:end="949:51">(<argument pos:start="949:42" pos:end="949:44"><expr pos:start="949:42" pos:end="949:44"><name pos:start="949:42" pos:end="949:44">tmp</name></expr></argument>, <argument pos:start="949:47" pos:end="949:50"><expr pos:start="949:47" pos:end="949:50"><name pos:start="949:47" pos:end="949:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="951:17" pos:end="951:51"><expr pos:start="951:17" pos:end="951:50"><call pos:start="951:17" pos:end="951:50"><name pos:start="951:17" pos:end="951:32">tcg_gen_shri_i64</name><argument_list pos:start="951:33" pos:end="951:50">(<argument pos:start="951:34" pos:end="951:38"><expr pos:start="951:34" pos:end="951:38"><name pos:start="951:34" pos:end="951:38">tmp64</name></expr></argument>, <argument pos:start="951:41" pos:end="951:45"><expr pos:start="951:41" pos:end="951:45"><name pos:start="951:41" pos:end="951:45">tmp64</name></expr></argument>, <argument pos:start="951:48" pos:end="951:49"><expr pos:start="951:48" pos:end="951:49"><literal type="number" pos:start="951:48" pos:end="951:49">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="953:17" pos:end="953:32"><expr pos:start="953:17" pos:end="953:31"><name pos:start="953:17" pos:end="953:19">tmp</name> <operator pos:start="953:21" pos:end="953:21">=</operator> <call pos:start="953:23" pos:end="953:31"><name pos:start="953:23" pos:end="953:29">new_tmp</name><argument_list pos:start="953:30" pos:end="953:31">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="955:17" pos:end="955:50"><expr pos:start="955:17" pos:end="955:49"><call pos:start="955:17" pos:end="955:49"><name pos:start="955:17" pos:end="955:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="955:38" pos:end="955:49">(<argument pos:start="955:39" pos:end="955:41"><expr pos:start="955:39" pos:end="955:41"><name pos:start="955:39" pos:end="955:41">tmp</name></expr></argument>, <argument pos:start="955:44" pos:end="955:48"><expr pos:start="955:44" pos:end="955:48"><name pos:start="955:44" pos:end="955:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="957:17" pos:end="957:41"><expr pos:start="957:17" pos:end="957:40"><call pos:start="957:17" pos:end="957:40"><name pos:start="957:17" pos:end="957:33">tcg_temp_free_i64</name><argument_list pos:start="957:34" pos:end="957:40">(<argument pos:start="957:35" pos:end="957:39"><expr pos:start="957:35" pos:end="957:39"><name pos:start="957:35" pos:end="957:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="959:17" pos:end="969:19"><if pos:start="959:17" pos:end="969:19">if <condition pos:start="959:20" pos:end="959:29">(<expr pos:start="959:21" pos:end="959:28"><name pos:start="959:21" pos:end="959:22">rs</name> <operator pos:start="959:24" pos:end="959:25">!=</operator> <literal type="number" pos:start="959:27" pos:end="959:28">15</literal></expr>)</condition>

                  <block pos:start="961:19" pos:end="969:19">{<block_content pos:start="963:21" pos:end="967:35">

                    <expr_stmt pos:start="963:21" pos:end="963:43"><expr pos:start="963:21" pos:end="963:42"><name pos:start="963:21" pos:end="963:24">tmp2</name> <operator pos:start="963:26" pos:end="963:26">=</operator> <call pos:start="963:28" pos:end="963:42"><name pos:start="963:28" pos:end="963:35">load_reg</name><argument_list pos:start="963:36" pos:end="963:42">(<argument pos:start="963:37" pos:end="963:37"><expr pos:start="963:37" pos:end="963:37"><name pos:start="963:37" pos:end="963:37">s</name></expr></argument>, <argument pos:start="963:40" pos:end="963:41"><expr pos:start="963:40" pos:end="963:41"><name pos:start="963:40" pos:end="963:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="965:21" pos:end="965:56"><expr pos:start="965:21" pos:end="965:55"><call pos:start="965:21" pos:end="965:55"><name pos:start="965:21" pos:end="965:39">gen_helper_add_setq</name><argument_list pos:start="965:40" pos:end="965:55">(<argument pos:start="965:41" pos:end="965:43"><expr pos:start="965:41" pos:end="965:43"><name pos:start="965:41" pos:end="965:43">tmp</name></expr></argument>, <argument pos:start="965:46" pos:end="965:48"><expr pos:start="965:46" pos:end="965:48"><name pos:start="965:46" pos:end="965:48">tmp</name></expr></argument>, <argument pos:start="965:51" pos:end="965:54"><expr pos:start="965:51" pos:end="965:54"><name pos:start="965:51" pos:end="965:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="967:21" pos:end="967:35"><expr pos:start="967:21" pos:end="967:34"><call pos:start="967:21" pos:end="967:34"><name pos:start="967:21" pos:end="967:28">dead_tmp</name><argument_list pos:start="967:29" pos:end="967:34">(<argument pos:start="967:30" pos:end="967:33"><expr pos:start="967:30" pos:end="967:33"><name pos:start="967:30" pos:end="967:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                  </block_content>}</block></if></if_stmt>

                <break pos:start="971:17" pos:end="971:22">break;</break>

            <case pos:start="973:13" pos:end="973:19">case <expr pos:start="973:18" pos:end="973:18"><literal type="number" pos:start="973:18" pos:end="973:18">5</literal></expr>:</case> <case pos:start="973:21" pos:end="973:27">case <expr pos:start="973:26" pos:end="973:26"><literal type="number" pos:start="973:26" pos:end="973:26">6</literal></expr>:</case> <comment type="block" pos:start="973:29" pos:end="973:72">/* 32 * 32 -&gt; 32msb (SMMUL, SMMLA, SMMLS) */</comment>

                <expr_stmt pos:start="975:17" pos:end="975:52"><expr pos:start="975:17" pos:end="975:51"><name pos:start="975:17" pos:end="975:21">tmp64</name> <operator pos:start="975:23" pos:end="975:23">=</operator> <call pos:start="975:25" pos:end="975:51"><name pos:start="975:25" pos:end="975:40">gen_muls_i64_i32</name><argument_list pos:start="975:41" pos:end="975:51">(<argument pos:start="975:42" pos:end="975:44"><expr pos:start="975:42" pos:end="975:44"><name pos:start="975:42" pos:end="975:44">tmp</name></expr></argument>, <argument pos:start="975:47" pos:end="975:50"><expr pos:start="975:47" pos:end="975:50"><name pos:start="975:47" pos:end="975:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="977:17" pos:end="991:17"><if pos:start="977:17" pos:end="991:17">if <condition pos:start="977:20" pos:end="977:29">(<expr pos:start="977:21" pos:end="977:28"><name pos:start="977:21" pos:end="977:22">rs</name> <operator pos:start="977:24" pos:end="977:25">!=</operator> <literal type="number" pos:start="977:27" pos:end="977:28">15</literal></expr>)</condition> <block pos:start="977:31" pos:end="991:17">{<block_content pos:start="979:21" pos:end="989:21">

                    <expr_stmt pos:start="979:21" pos:end="979:42"><expr pos:start="979:21" pos:end="979:41"><name pos:start="979:21" pos:end="979:23">tmp</name> <operator pos:start="979:25" pos:end="979:25">=</operator> <call pos:start="979:27" pos:end="979:41"><name pos:start="979:27" pos:end="979:34">load_reg</name><argument_list pos:start="979:35" pos:end="979:41">(<argument pos:start="979:36" pos:end="979:36"><expr pos:start="979:36" pos:end="979:36"><name pos:start="979:36" pos:end="979:36">s</name></expr></argument>, <argument pos:start="979:39" pos:end="979:40"><expr pos:start="979:39" pos:end="979:40"><name pos:start="979:39" pos:end="979:40">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="981:21" pos:end="989:21"><if pos:start="981:21" pos:end="985:21">if <condition pos:start="981:24" pos:end="981:41">(<expr pos:start="981:25" pos:end="981:40"><name pos:start="981:25" pos:end="981:28">insn</name> <operator pos:start="981:30" pos:end="981:30">&amp;</operator> <operator pos:start="981:32" pos:end="981:32">(</operator><literal type="number" pos:start="981:33" pos:end="981:33">1</literal> <operator pos:start="981:35" pos:end="981:36">&lt;&lt;</operator> <literal type="number" pos:start="981:38" pos:end="981:39">20</literal><operator pos:start="981:40" pos:end="981:40">)</operator></expr>)</condition> <block pos:start="981:43" pos:end="985:21">{<block_content pos:start="983:25" pos:end="983:57">

                        <expr_stmt pos:start="983:25" pos:end="983:57"><expr pos:start="983:25" pos:end="983:56"><name pos:start="983:25" pos:end="983:29">tmp64</name> <operator pos:start="983:31" pos:end="983:31">=</operator> <call pos:start="983:33" pos:end="983:56"><name pos:start="983:33" pos:end="983:44">gen_addq_msw</name><argument_list pos:start="983:45" pos:end="983:56">(<argument pos:start="983:46" pos:end="983:50"><expr pos:start="983:46" pos:end="983:50"><name pos:start="983:46" pos:end="983:50">tmp64</name></expr></argument>, <argument pos:start="983:53" pos:end="983:55"><expr pos:start="983:53" pos:end="983:55"><name pos:start="983:53" pos:end="983:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="985:23" pos:end="989:21">else <block pos:start="985:28" pos:end="989:21">{<block_content pos:start="987:25" pos:end="987:57">

                        <expr_stmt pos:start="987:25" pos:end="987:57"><expr pos:start="987:25" pos:end="987:56"><name pos:start="987:25" pos:end="987:29">tmp64</name> <operator pos:start="987:31" pos:end="987:31">=</operator> <call pos:start="987:33" pos:end="987:56"><name pos:start="987:33" pos:end="987:44">gen_subq_msw</name><argument_list pos:start="987:45" pos:end="987:56">(<argument pos:start="987:46" pos:end="987:50"><expr pos:start="987:46" pos:end="987:50"><name pos:start="987:46" pos:end="987:50">tmp64</name></expr></argument>, <argument pos:start="987:53" pos:end="987:55"><expr pos:start="987:53" pos:end="987:55"><name pos:start="987:53" pos:end="987:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></if></if_stmt>

                <if_stmt pos:start="993:17" pos:end="997:17"><if pos:start="993:17" pos:end="997:17">if <condition pos:start="993:20" pos:end="993:36">(<expr pos:start="993:21" pos:end="993:35"><name pos:start="993:21" pos:end="993:24">insn</name> <operator pos:start="993:26" pos:end="993:26">&amp;</operator> <operator pos:start="993:28" pos:end="993:28">(</operator><literal type="number" pos:start="993:29" pos:end="993:29">1</literal> <operator pos:start="993:31" pos:end="993:32">&lt;&lt;</operator> <literal type="number" pos:start="993:34" pos:end="993:34">4</literal><operator pos:start="993:35" pos:end="993:35">)</operator></expr>)</condition> <block pos:start="993:38" pos:end="997:17">{<block_content pos:start="995:21" pos:end="995:64">

                    <expr_stmt pos:start="995:21" pos:end="995:64"><expr pos:start="995:21" pos:end="995:63"><call pos:start="995:21" pos:end="995:63"><name pos:start="995:21" pos:end="995:36">tcg_gen_addi_i64</name><argument_list pos:start="995:37" pos:end="995:63">(<argument pos:start="995:38" pos:end="995:42"><expr pos:start="995:38" pos:end="995:42"><name pos:start="995:38" pos:end="995:42">tmp64</name></expr></argument>, <argument pos:start="995:45" pos:end="995:49"><expr pos:start="995:45" pos:end="995:49"><name pos:start="995:45" pos:end="995:49">tmp64</name></expr></argument>, <argument pos:start="995:52" pos:end="995:62"><expr pos:start="995:52" pos:end="995:62"><literal type="number" pos:start="995:52" pos:end="995:62">0x80000000u</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="999:17" pos:end="999:51"><expr pos:start="999:17" pos:end="999:50"><call pos:start="999:17" pos:end="999:50"><name pos:start="999:17" pos:end="999:32">tcg_gen_shri_i64</name><argument_list pos:start="999:33" pos:end="999:50">(<argument pos:start="999:34" pos:end="999:38"><expr pos:start="999:34" pos:end="999:38"><name pos:start="999:34" pos:end="999:38">tmp64</name></expr></argument>, <argument pos:start="999:41" pos:end="999:45"><expr pos:start="999:41" pos:end="999:45"><name pos:start="999:41" pos:end="999:45">tmp64</name></expr></argument>, <argument pos:start="999:48" pos:end="999:49"><expr pos:start="999:48" pos:end="999:49"><literal type="number" pos:start="999:48" pos:end="999:49">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1001:17" pos:end="1001:32"><expr pos:start="1001:17" pos:end="1001:31"><name pos:start="1001:17" pos:end="1001:19">tmp</name> <operator pos:start="1001:21" pos:end="1001:21">=</operator> <call pos:start="1001:23" pos:end="1001:31"><name pos:start="1001:23" pos:end="1001:29">new_tmp</name><argument_list pos:start="1001:30" pos:end="1001:31">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1003:17" pos:end="1003:50"><expr pos:start="1003:17" pos:end="1003:49"><call pos:start="1003:17" pos:end="1003:49"><name pos:start="1003:17" pos:end="1003:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="1003:38" pos:end="1003:49">(<argument pos:start="1003:39" pos:end="1003:41"><expr pos:start="1003:39" pos:end="1003:41"><name pos:start="1003:39" pos:end="1003:41">tmp</name></expr></argument>, <argument pos:start="1003:44" pos:end="1003:48"><expr pos:start="1003:44" pos:end="1003:48"><name pos:start="1003:44" pos:end="1003:48">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1005:17" pos:end="1005:41"><expr pos:start="1005:17" pos:end="1005:40"><call pos:start="1005:17" pos:end="1005:40"><name pos:start="1005:17" pos:end="1005:33">tcg_temp_free_i64</name><argument_list pos:start="1005:34" pos:end="1005:40">(<argument pos:start="1005:35" pos:end="1005:39"><expr pos:start="1005:35" pos:end="1005:39"><name pos:start="1005:35" pos:end="1005:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <break pos:start="1007:17" pos:end="1007:22">break;</break>

            <case pos:start="1009:13" pos:end="1009:19">case <expr pos:start="1009:18" pos:end="1009:18"><literal type="number" pos:start="1009:18" pos:end="1009:18">7</literal></expr>:</case> <comment type="block" pos:start="1009:21" pos:end="1009:64">/* Unsigned sum of absolute differences.  */</comment>

                <expr_stmt pos:start="1011:17" pos:end="1011:49"><expr pos:start="1011:17" pos:end="1011:48"><call pos:start="1011:17" pos:end="1011:48"><name pos:start="1011:17" pos:end="1011:32">gen_helper_usad8</name><argument_list pos:start="1011:33" pos:end="1011:48">(<argument pos:start="1011:34" pos:end="1011:36"><expr pos:start="1011:34" pos:end="1011:36"><name pos:start="1011:34" pos:end="1011:36">tmp</name></expr></argument>, <argument pos:start="1011:39" pos:end="1011:41"><expr pos:start="1011:39" pos:end="1011:41"><name pos:start="1011:39" pos:end="1011:41">tmp</name></expr></argument>, <argument pos:start="1011:44" pos:end="1011:47"><expr pos:start="1011:44" pos:end="1011:47"><name pos:start="1011:44" pos:end="1011:47">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1013:17" pos:end="1013:31"><expr pos:start="1013:17" pos:end="1013:30"><call pos:start="1013:17" pos:end="1013:30"><name pos:start="1013:17" pos:end="1013:24">dead_tmp</name><argument_list pos:start="1013:25" pos:end="1013:30">(<argument pos:start="1013:26" pos:end="1013:29"><expr pos:start="1013:26" pos:end="1013:29"><name pos:start="1013:26" pos:end="1013:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1015:17" pos:end="1023:17"><if pos:start="1015:17" pos:end="1023:17">if <condition pos:start="1015:20" pos:end="1015:29">(<expr pos:start="1015:21" pos:end="1015:28"><name pos:start="1015:21" pos:end="1015:22">rs</name> <operator pos:start="1015:24" pos:end="1015:25">!=</operator> <literal type="number" pos:start="1015:27" pos:end="1015:28">15</literal></expr>)</condition> <block pos:start="1015:31" pos:end="1023:17">{<block_content pos:start="1017:21" pos:end="1021:35">

                    <expr_stmt pos:start="1017:21" pos:end="1017:43"><expr pos:start="1017:21" pos:end="1017:42"><name pos:start="1017:21" pos:end="1017:24">tmp2</name> <operator pos:start="1017:26" pos:end="1017:26">=</operator> <call pos:start="1017:28" pos:end="1017:42"><name pos:start="1017:28" pos:end="1017:35">load_reg</name><argument_list pos:start="1017:36" pos:end="1017:42">(<argument pos:start="1017:37" pos:end="1017:37"><expr pos:start="1017:37" pos:end="1017:37"><name pos:start="1017:37" pos:end="1017:37">s</name></expr></argument>, <argument pos:start="1017:40" pos:end="1017:41"><expr pos:start="1017:40" pos:end="1017:41"><name pos:start="1017:40" pos:end="1017:41">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1019:21" pos:end="1019:52"><expr pos:start="1019:21" pos:end="1019:51"><call pos:start="1019:21" pos:end="1019:51"><name pos:start="1019:21" pos:end="1019:35">tcg_gen_add_i32</name><argument_list pos:start="1019:36" pos:end="1019:51">(<argument pos:start="1019:37" pos:end="1019:39"><expr pos:start="1019:37" pos:end="1019:39"><name pos:start="1019:37" pos:end="1019:39">tmp</name></expr></argument>, <argument pos:start="1019:42" pos:end="1019:44"><expr pos:start="1019:42" pos:end="1019:44"><name pos:start="1019:42" pos:end="1019:44">tmp</name></expr></argument>, <argument pos:start="1019:47" pos:end="1019:50"><expr pos:start="1019:47" pos:end="1019:50"><name pos:start="1019:47" pos:end="1019:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1021:21" pos:end="1021:35"><expr pos:start="1021:21" pos:end="1021:34"><call pos:start="1021:21" pos:end="1021:34"><name pos:start="1021:21" pos:end="1021:28">dead_tmp</name><argument_list pos:start="1021:29" pos:end="1021:34">(<argument pos:start="1021:30" pos:end="1021:33"><expr pos:start="1021:30" pos:end="1021:33"><name pos:start="1021:30" pos:end="1021:33">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <break pos:start="1025:17" pos:end="1025:22">break;</break>

            </block_content>}</block></switch>

            <expr_stmt pos:start="1029:13" pos:end="1029:34"><expr pos:start="1029:13" pos:end="1029:33"><call pos:start="1029:13" pos:end="1029:33"><name pos:start="1029:13" pos:end="1029:21">store_reg</name><argument_list pos:start="1029:22" pos:end="1029:33">(<argument pos:start="1029:23" pos:end="1029:23"><expr pos:start="1029:23" pos:end="1029:23"><name pos:start="1029:23" pos:end="1029:23">s</name></expr></argument>, <argument pos:start="1029:26" pos:end="1029:27"><expr pos:start="1029:26" pos:end="1029:27"><name pos:start="1029:26" pos:end="1029:27">rd</name></expr></argument>, <argument pos:start="1029:30" pos:end="1029:32"><expr pos:start="1029:30" pos:end="1029:32"><name pos:start="1029:30" pos:end="1029:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="1031:13" pos:end="1031:18">break;</break>

        <case pos:start="1033:9" pos:end="1033:15">case <expr pos:start="1033:14" pos:end="1033:14"><literal type="number" pos:start="1033:14" pos:end="1033:14">6</literal></expr>:</case> <case pos:start="1033:17" pos:end="1033:23">case <expr pos:start="1033:22" pos:end="1033:22"><literal type="number" pos:start="1033:22" pos:end="1033:22">7</literal></expr>:</case> <comment type="block" pos:start="1033:25" pos:end="1033:55">/* 64-bit multiply, Divide.  */</comment>

            <expr_stmt pos:start="1035:13" pos:end="1035:61"><expr pos:start="1035:13" pos:end="1035:60"><name pos:start="1035:13" pos:end="1035:14">op</name> <operator pos:start="1035:16" pos:end="1035:16">=</operator> <operator pos:start="1035:18" pos:end="1035:18">(</operator><operator pos:start="1035:19" pos:end="1035:19">(</operator><name pos:start="1035:20" pos:end="1035:23">insn</name> <operator pos:start="1035:25" pos:end="1035:26">&gt;&gt;</operator> <literal type="number" pos:start="1035:28" pos:end="1035:28">4</literal><operator pos:start="1035:29" pos:end="1035:29">)</operator> <operator pos:start="1035:31" pos:end="1035:31">&amp;</operator> <literal type="number" pos:start="1035:33" pos:end="1035:35">0xf</literal><operator pos:start="1035:36" pos:end="1035:36">)</operator> <operator pos:start="1035:38" pos:end="1035:38">|</operator> <operator pos:start="1035:40" pos:end="1035:40">(</operator><operator pos:start="1035:41" pos:end="1035:41">(</operator><name pos:start="1035:42" pos:end="1035:45">insn</name> <operator pos:start="1035:47" pos:end="1035:48">&gt;&gt;</operator> <literal type="number" pos:start="1035:50" pos:end="1035:51">16</literal><operator pos:start="1035:52" pos:end="1035:52">)</operator> <operator pos:start="1035:54" pos:end="1035:54">&amp;</operator> <literal type="number" pos:start="1035:56" pos:end="1035:59">0x70</literal><operator pos:start="1035:60" pos:end="1035:60">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="1037:13" pos:end="1037:34"><expr pos:start="1037:13" pos:end="1037:33"><name pos:start="1037:13" pos:end="1037:15">tmp</name> <operator pos:start="1037:17" pos:end="1037:17">=</operator> <call pos:start="1037:19" pos:end="1037:33"><name pos:start="1037:19" pos:end="1037:26">load_reg</name><argument_list pos:start="1037:27" pos:end="1037:33">(<argument pos:start="1037:28" pos:end="1037:28"><expr pos:start="1037:28" pos:end="1037:28"><name pos:start="1037:28" pos:end="1037:28">s</name></expr></argument>, <argument pos:start="1037:31" pos:end="1037:32"><expr pos:start="1037:31" pos:end="1037:32"><name pos:start="1037:31" pos:end="1037:32">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="1039:13" pos:end="1039:35"><expr pos:start="1039:13" pos:end="1039:34"><name pos:start="1039:13" pos:end="1039:16">tmp2</name> <operator pos:start="1039:18" pos:end="1039:18">=</operator> <call pos:start="1039:20" pos:end="1039:34"><name pos:start="1039:20" pos:end="1039:27">load_reg</name><argument_list pos:start="1039:28" pos:end="1039:34">(<argument pos:start="1039:29" pos:end="1039:29"><expr pos:start="1039:29" pos:end="1039:29"><name pos:start="1039:29" pos:end="1039:29">s</name></expr></argument>, <argument pos:start="1039:32" pos:end="1039:33"><expr pos:start="1039:32" pos:end="1039:33"><name pos:start="1039:32" pos:end="1039:33">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1041:13" pos:end="1151:13"><if pos:start="1041:13" pos:end="1061:13">if <condition pos:start="1041:16" pos:end="1041:36">(<expr pos:start="1041:17" pos:end="1041:35"><operator pos:start="1041:17" pos:end="1041:17">(</operator><name pos:start="1041:18" pos:end="1041:19">op</name> <operator pos:start="1041:21" pos:end="1041:21">&amp;</operator> <literal type="number" pos:start="1041:23" pos:end="1041:26">0x50</literal><operator pos:start="1041:27" pos:end="1041:27">)</operator> <operator pos:start="1041:29" pos:end="1041:30">==</operator> <literal type="number" pos:start="1041:32" pos:end="1041:35">0x10</literal></expr>)</condition> <block pos:start="1041:38" pos:end="1061:13">{<block_content pos:start="1045:17" pos:end="1059:38">

                <comment type="block" pos:start="1043:17" pos:end="1043:32">/* sdiv, udiv */</comment>

                <if_stmt pos:start="1045:17" pos:end="1047:36"><if pos:start="1045:17" pos:end="1047:36">if <condition pos:start="1045:20" pos:end="1045:55">(<expr pos:start="1045:21" pos:end="1045:54"><operator pos:start="1045:21" pos:end="1045:21">!</operator><call pos:start="1045:22" pos:end="1045:54"><name pos:start="1045:22" pos:end="1045:32">arm_feature</name><argument_list pos:start="1045:33" pos:end="1045:54">(<argument pos:start="1045:34" pos:end="1045:36"><expr pos:start="1045:34" pos:end="1045:36"><name pos:start="1045:34" pos:end="1045:36">env</name></expr></argument>, <argument pos:start="1045:39" pos:end="1045:53"><expr pos:start="1045:39" pos:end="1045:53"><name pos:start="1045:39" pos:end="1045:53">ARM_FEATURE_DIV</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1047:21" pos:end="1047:36"><block_content pos:start="1047:21" pos:end="1047:36">

                    <goto pos:start="1047:21" pos:end="1047:36">goto <name pos:start="1047:26" pos:end="1047:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                <if_stmt pos:start="1049:17" pos:end="1055:52"><if pos:start="1049:17" pos:end="1051:52">if <condition pos:start="1049:20" pos:end="1049:30">(<expr pos:start="1049:21" pos:end="1049:29"><name pos:start="1049:21" pos:end="1049:22">op</name> <operator pos:start="1049:24" pos:end="1049:24">&amp;</operator> <literal type="number" pos:start="1049:26" pos:end="1049:29">0x20</literal></expr>)</condition><block type="pseudo" pos:start="1051:21" pos:end="1051:52"><block_content pos:start="1051:21" pos:end="1051:52">

                    <expr_stmt pos:start="1051:21" pos:end="1051:52"><expr pos:start="1051:21" pos:end="1051:51"><call pos:start="1051:21" pos:end="1051:51"><name pos:start="1051:21" pos:end="1051:35">gen_helper_udiv</name><argument_list pos:start="1051:36" pos:end="1051:51">(<argument pos:start="1051:37" pos:end="1051:39"><expr pos:start="1051:37" pos:end="1051:39"><name pos:start="1051:37" pos:end="1051:39">tmp</name></expr></argument>, <argument pos:start="1051:42" pos:end="1051:44"><expr pos:start="1051:42" pos:end="1051:44"><name pos:start="1051:42" pos:end="1051:44">tmp</name></expr></argument>, <argument pos:start="1051:47" pos:end="1051:50"><expr pos:start="1051:47" pos:end="1051:50"><name pos:start="1051:47" pos:end="1051:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                <else pos:start="1053:17" pos:end="1055:52">else<block type="pseudo" pos:start="1055:21" pos:end="1055:52"><block_content pos:start="1055:21" pos:end="1055:52">

                    <expr_stmt pos:start="1055:21" pos:end="1055:52"><expr pos:start="1055:21" pos:end="1055:51"><call pos:start="1055:21" pos:end="1055:51"><name pos:start="1055:21" pos:end="1055:35">gen_helper_sdiv</name><argument_list pos:start="1055:36" pos:end="1055:51">(<argument pos:start="1055:37" pos:end="1055:39"><expr pos:start="1055:37" pos:end="1055:39"><name pos:start="1055:37" pos:end="1055:39">tmp</name></expr></argument>, <argument pos:start="1055:42" pos:end="1055:44"><expr pos:start="1055:42" pos:end="1055:44"><name pos:start="1055:42" pos:end="1055:44">tmp</name></expr></argument>, <argument pos:start="1055:47" pos:end="1055:50"><expr pos:start="1055:47" pos:end="1055:50"><name pos:start="1055:47" pos:end="1055:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                <expr_stmt pos:start="1057:17" pos:end="1057:31"><expr pos:start="1057:17" pos:end="1057:30"><call pos:start="1057:17" pos:end="1057:30"><name pos:start="1057:17" pos:end="1057:24">dead_tmp</name><argument_list pos:start="1057:25" pos:end="1057:30">(<argument pos:start="1057:26" pos:end="1057:29"><expr pos:start="1057:26" pos:end="1057:29"><name pos:start="1057:26" pos:end="1057:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1059:17" pos:end="1059:38"><expr pos:start="1059:17" pos:end="1059:37"><call pos:start="1059:17" pos:end="1059:37"><name pos:start="1059:17" pos:end="1059:25">store_reg</name><argument_list pos:start="1059:26" pos:end="1059:37">(<argument pos:start="1059:27" pos:end="1059:27"><expr pos:start="1059:27" pos:end="1059:27"><name pos:start="1059:27" pos:end="1059:27">s</name></expr></argument>, <argument pos:start="1059:30" pos:end="1059:31"><expr pos:start="1059:30" pos:end="1059:31"><name pos:start="1059:30" pos:end="1059:31">rd</name></expr></argument>, <argument pos:start="1059:34" pos:end="1059:36"><expr pos:start="1059:34" pos:end="1059:36"><name pos:start="1059:34" pos:end="1059:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1061:15" pos:end="1097:13">else if <condition pos:start="1061:23" pos:end="1061:41">(<expr pos:start="1061:24" pos:end="1061:40"><operator pos:start="1061:24" pos:end="1061:24">(</operator><name pos:start="1061:25" pos:end="1061:26">op</name> <operator pos:start="1061:28" pos:end="1061:28">&amp;</operator> <literal type="number" pos:start="1061:30" pos:end="1061:32">0xe</literal><operator pos:start="1061:33" pos:end="1061:33">)</operator> <operator pos:start="1061:35" pos:end="1061:36">==</operator> <literal type="number" pos:start="1061:38" pos:end="1061:40">0xc</literal></expr>)</condition> <block pos:start="1061:43" pos:end="1097:13">{<block_content pos:start="1065:17" pos:end="1095:41">

                <comment type="block" pos:start="1063:17" pos:end="1063:53">/* Dual multiply accumulate long.  */</comment>

                <if_stmt pos:start="1065:17" pos:end="1067:40"><if pos:start="1065:17" pos:end="1067:40">if <condition pos:start="1065:20" pos:end="1065:27">(<expr pos:start="1065:21" pos:end="1065:26"><name pos:start="1065:21" pos:end="1065:22">op</name> <operator pos:start="1065:24" pos:end="1065:24">&amp;</operator> <literal type="number" pos:start="1065:26" pos:end="1065:26">1</literal></expr>)</condition><block type="pseudo" pos:start="1067:21" pos:end="1067:40"><block_content pos:start="1067:21" pos:end="1067:40">

                    <expr_stmt pos:start="1067:21" pos:end="1067:40"><expr pos:start="1067:21" pos:end="1067:39"><call pos:start="1067:21" pos:end="1067:39"><name pos:start="1067:21" pos:end="1067:33">gen_swap_half</name><argument_list pos:start="1067:34" pos:end="1067:39">(<argument pos:start="1067:35" pos:end="1067:38"><expr pos:start="1067:35" pos:end="1067:38"><name pos:start="1067:35" pos:end="1067:38">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1069:17" pos:end="1069:41"><expr pos:start="1069:17" pos:end="1069:40"><call pos:start="1069:17" pos:end="1069:40"><name pos:start="1069:17" pos:end="1069:29">gen_smul_dual</name><argument_list pos:start="1069:30" pos:end="1069:40">(<argument pos:start="1069:31" pos:end="1069:33"><expr pos:start="1069:31" pos:end="1069:33"><name pos:start="1069:31" pos:end="1069:33">tmp</name></expr></argument>, <argument pos:start="1069:36" pos:end="1069:39"><expr pos:start="1069:36" pos:end="1069:39"><name pos:start="1069:36" pos:end="1069:39">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="1071:17" pos:end="1079:17"><if pos:start="1071:17" pos:end="1075:17">if <condition pos:start="1071:20" pos:end="1071:30">(<expr pos:start="1071:21" pos:end="1071:29"><name pos:start="1071:21" pos:end="1071:22">op</name> <operator pos:start="1071:24" pos:end="1071:24">&amp;</operator> <literal type="number" pos:start="1071:26" pos:end="1071:29">0x10</literal></expr>)</condition> <block pos:start="1071:32" pos:end="1075:17">{<block_content pos:start="1073:21" pos:end="1073:52">

                    <expr_stmt pos:start="1073:21" pos:end="1073:52"><expr pos:start="1073:21" pos:end="1073:51"><call pos:start="1073:21" pos:end="1073:51"><name pos:start="1073:21" pos:end="1073:35">tcg_gen_sub_i32</name><argument_list pos:start="1073:36" pos:end="1073:51">(<argument pos:start="1073:37" pos:end="1073:39"><expr pos:start="1073:37" pos:end="1073:39"><name pos:start="1073:37" pos:end="1073:39">tmp</name></expr></argument>, <argument pos:start="1073:42" pos:end="1073:44"><expr pos:start="1073:42" pos:end="1073:44"><name pos:start="1073:42" pos:end="1073:44">tmp</name></expr></argument>, <argument pos:start="1073:47" pos:end="1073:50"><expr pos:start="1073:47" pos:end="1073:50"><name pos:start="1073:47" pos:end="1073:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1075:19" pos:end="1079:17">else <block pos:start="1075:24" pos:end="1079:17">{<block_content pos:start="1077:21" pos:end="1077:52">

                    <expr_stmt pos:start="1077:21" pos:end="1077:52"><expr pos:start="1077:21" pos:end="1077:51"><call pos:start="1077:21" pos:end="1077:51"><name pos:start="1077:21" pos:end="1077:35">tcg_gen_add_i32</name><argument_list pos:start="1077:36" pos:end="1077:51">(<argument pos:start="1077:37" pos:end="1077:39"><expr pos:start="1077:37" pos:end="1077:39"><name pos:start="1077:37" pos:end="1077:39">tmp</name></expr></argument>, <argument pos:start="1077:42" pos:end="1077:44"><expr pos:start="1077:42" pos:end="1077:44"><name pos:start="1077:42" pos:end="1077:44">tmp</name></expr></argument>, <argument pos:start="1077:47" pos:end="1077:50"><expr pos:start="1077:47" pos:end="1077:50"><name pos:start="1077:47" pos:end="1077:50">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1081:17" pos:end="1081:31"><expr pos:start="1081:17" pos:end="1081:30"><call pos:start="1081:17" pos:end="1081:30"><name pos:start="1081:17" pos:end="1081:24">dead_tmp</name><argument_list pos:start="1081:25" pos:end="1081:30">(<argument pos:start="1081:26" pos:end="1081:29"><expr pos:start="1081:26" pos:end="1081:29"><name pos:start="1081:26" pos:end="1081:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="1083:17" pos:end="1083:28">/* BUGFIX */</comment>

                <expr_stmt pos:start="1085:17" pos:end="1085:43"><expr pos:start="1085:17" pos:end="1085:42"><name pos:start="1085:17" pos:end="1085:21">tmp64</name> <operator pos:start="1085:23" pos:end="1085:23">=</operator> <call pos:start="1085:25" pos:end="1085:42"><name pos:start="1085:25" pos:end="1085:40">tcg_temp_new_i64</name><argument_list pos:start="1085:41" pos:end="1085:42">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1087:17" pos:end="1087:48"><expr pos:start="1087:17" pos:end="1087:47"><call pos:start="1087:17" pos:end="1087:47"><name pos:start="1087:17" pos:end="1087:35">tcg_gen_ext_i32_i64</name><argument_list pos:start="1087:36" pos:end="1087:47">(<argument pos:start="1087:37" pos:end="1087:41"><expr pos:start="1087:37" pos:end="1087:41"><name pos:start="1087:37" pos:end="1087:41">tmp64</name></expr></argument>, <argument pos:start="1087:44" pos:end="1087:46"><expr pos:start="1087:44" pos:end="1087:46"><name pos:start="1087:44" pos:end="1087:46">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1089:17" pos:end="1089:30"><expr pos:start="1089:17" pos:end="1089:29"><call pos:start="1089:17" pos:end="1089:29"><name pos:start="1089:17" pos:end="1089:24">dead_tmp</name><argument_list pos:start="1089:25" pos:end="1089:29">(<argument pos:start="1089:26" pos:end="1089:28"><expr pos:start="1089:26" pos:end="1089:28"><name pos:start="1089:26" pos:end="1089:28">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1091:17" pos:end="1091:43"><expr pos:start="1091:17" pos:end="1091:42"><call pos:start="1091:17" pos:end="1091:42"><name pos:start="1091:17" pos:end="1091:24">gen_addq</name><argument_list pos:start="1091:25" pos:end="1091:42">(<argument pos:start="1091:26" pos:end="1091:26"><expr pos:start="1091:26" pos:end="1091:26"><name pos:start="1091:26" pos:end="1091:26">s</name></expr></argument>, <argument pos:start="1091:29" pos:end="1091:33"><expr pos:start="1091:29" pos:end="1091:33"><name pos:start="1091:29" pos:end="1091:33">tmp64</name></expr></argument>, <argument pos:start="1091:36" pos:end="1091:37"><expr pos:start="1091:36" pos:end="1091:37"><name pos:start="1091:36" pos:end="1091:37">rs</name></expr></argument>, <argument pos:start="1091:40" pos:end="1091:41"><expr pos:start="1091:40" pos:end="1091:41"><name pos:start="1091:40" pos:end="1091:41">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1093:17" pos:end="1093:49"><expr pos:start="1093:17" pos:end="1093:48"><call pos:start="1093:17" pos:end="1093:48"><name pos:start="1093:17" pos:end="1093:30">gen_storeq_reg</name><argument_list pos:start="1093:31" pos:end="1093:48">(<argument pos:start="1093:32" pos:end="1093:32"><expr pos:start="1093:32" pos:end="1093:32"><name pos:start="1093:32" pos:end="1093:32">s</name></expr></argument>, <argument pos:start="1093:35" pos:end="1093:36"><expr pos:start="1093:35" pos:end="1093:36"><name pos:start="1093:35" pos:end="1093:36">rs</name></expr></argument>, <argument pos:start="1093:39" pos:end="1093:40"><expr pos:start="1093:39" pos:end="1093:40"><name pos:start="1093:39" pos:end="1093:40">rd</name></expr></argument>, <argument pos:start="1093:43" pos:end="1093:47"><expr pos:start="1093:43" pos:end="1093:47"><name pos:start="1093:43" pos:end="1093:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1095:17" pos:end="1095:41"><expr pos:start="1095:17" pos:end="1095:40"><call pos:start="1095:17" pos:end="1095:40"><name pos:start="1095:17" pos:end="1095:33">tcg_temp_free_i64</name><argument_list pos:start="1095:34" pos:end="1095:40">(<argument pos:start="1095:35" pos:end="1095:39"><expr pos:start="1095:35" pos:end="1095:39"><name pos:start="1095:35" pos:end="1095:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1097:15" pos:end="1151:13">else <block pos:start="1097:20" pos:end="1151:13">{<block_content pos:start="1099:17" pos:end="1149:41">

                <if_stmt pos:start="1099:17" pos:end="1129:17"><if pos:start="1099:17" pos:end="1105:17">if <condition pos:start="1099:20" pos:end="1099:30">(<expr pos:start="1099:21" pos:end="1099:29"><name pos:start="1099:21" pos:end="1099:22">op</name> <operator pos:start="1099:24" pos:end="1099:24">&amp;</operator> <literal type="number" pos:start="1099:26" pos:end="1099:29">0x20</literal></expr>)</condition> <block pos:start="1099:32" pos:end="1105:17">{<block_content pos:start="1103:21" pos:end="1103:56">

                    <comment type="block" pos:start="1101:21" pos:end="1101:51">/* Unsigned 64-bit multiply  */</comment>

                    <expr_stmt pos:start="1103:21" pos:end="1103:56"><expr pos:start="1103:21" pos:end="1103:55"><name pos:start="1103:21" pos:end="1103:25">tmp64</name> <operator pos:start="1103:27" pos:end="1103:27">=</operator> <call pos:start="1103:29" pos:end="1103:55"><name pos:start="1103:29" pos:end="1103:44">gen_mulu_i64_i32</name><argument_list pos:start="1103:45" pos:end="1103:55">(<argument pos:start="1103:46" pos:end="1103:48"><expr pos:start="1103:46" pos:end="1103:48"><name pos:start="1103:46" pos:end="1103:48">tmp</name></expr></argument>, <argument pos:start="1103:51" pos:end="1103:54"><expr pos:start="1103:51" pos:end="1103:54"><name pos:start="1103:51" pos:end="1103:54">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1105:19" pos:end="1129:17">else <block pos:start="1105:24" pos:end="1129:17">{<block_content pos:start="1107:21" pos:end="1127:21">

                    <if_stmt pos:start="1107:21" pos:end="1127:21"><if pos:start="1107:21" pos:end="1121:21">if <condition pos:start="1107:24" pos:end="1107:31">(<expr pos:start="1107:25" pos:end="1107:30"><name pos:start="1107:25" pos:end="1107:26">op</name> <operator pos:start="1107:28" pos:end="1107:28">&amp;</operator> <literal type="number" pos:start="1107:30" pos:end="1107:30">8</literal></expr>)</condition> <block pos:start="1107:33" pos:end="1121:21">{<block_content pos:start="1111:25" pos:end="1119:38">

                        <comment type="block" pos:start="1109:25" pos:end="1109:37">/* smlalxy */</comment>

                        <expr_stmt pos:start="1111:25" pos:end="1111:61"><expr pos:start="1111:25" pos:end="1111:60"><call pos:start="1111:25" pos:end="1111:60"><name pos:start="1111:25" pos:end="1111:33">gen_mulxy</name><argument_list pos:start="1111:34" pos:end="1111:60">(<argument pos:start="1111:35" pos:end="1111:37"><expr pos:start="1111:35" pos:end="1111:37"><name pos:start="1111:35" pos:end="1111:37">tmp</name></expr></argument>, <argument pos:start="1111:40" pos:end="1111:43"><expr pos:start="1111:40" pos:end="1111:43"><name pos:start="1111:40" pos:end="1111:43">tmp2</name></expr></argument>, <argument pos:start="1111:46" pos:end="1111:51"><expr pos:start="1111:46" pos:end="1111:51"><name pos:start="1111:46" pos:end="1111:47">op</name> <operator pos:start="1111:49" pos:end="1111:49">&amp;</operator> <literal type="number" pos:start="1111:51" pos:end="1111:51">2</literal></expr></argument>, <argument pos:start="1111:54" pos:end="1111:59"><expr pos:start="1111:54" pos:end="1111:59"><name pos:start="1111:54" pos:end="1111:55">op</name> <operator pos:start="1111:57" pos:end="1111:57">&amp;</operator> <literal type="number" pos:start="1111:59" pos:end="1111:59">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1113:25" pos:end="1113:39"><expr pos:start="1113:25" pos:end="1113:38"><call pos:start="1113:25" pos:end="1113:38"><name pos:start="1113:25" pos:end="1113:32">dead_tmp</name><argument_list pos:start="1113:33" pos:end="1113:38">(<argument pos:start="1113:34" pos:end="1113:37"><expr pos:start="1113:34" pos:end="1113:37"><name pos:start="1113:34" pos:end="1113:37">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1115:25" pos:end="1115:51"><expr pos:start="1115:25" pos:end="1115:50"><name pos:start="1115:25" pos:end="1115:29">tmp64</name> <operator pos:start="1115:31" pos:end="1115:31">=</operator> <call pos:start="1115:33" pos:end="1115:50"><name pos:start="1115:33" pos:end="1115:48">tcg_temp_new_i64</name><argument_list pos:start="1115:49" pos:end="1115:50">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1117:25" pos:end="1117:56"><expr pos:start="1117:25" pos:end="1117:55"><call pos:start="1117:25" pos:end="1117:55"><name pos:start="1117:25" pos:end="1117:43">tcg_gen_ext_i32_i64</name><argument_list pos:start="1117:44" pos:end="1117:55">(<argument pos:start="1117:45" pos:end="1117:49"><expr pos:start="1117:45" pos:end="1117:49"><name pos:start="1117:45" pos:end="1117:49">tmp64</name></expr></argument>, <argument pos:start="1117:52" pos:end="1117:54"><expr pos:start="1117:52" pos:end="1117:54"><name pos:start="1117:52" pos:end="1117:54">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1119:25" pos:end="1119:38"><expr pos:start="1119:25" pos:end="1119:37"><call pos:start="1119:25" pos:end="1119:37"><name pos:start="1119:25" pos:end="1119:32">dead_tmp</name><argument_list pos:start="1119:33" pos:end="1119:37">(<argument pos:start="1119:34" pos:end="1119:36"><expr pos:start="1119:34" pos:end="1119:36"><name pos:start="1119:34" pos:end="1119:36">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1121:23" pos:end="1127:21">else <block pos:start="1121:28" pos:end="1127:21">{<block_content pos:start="1125:25" pos:end="1125:60">

                        <comment type="block" pos:start="1123:25" pos:end="1123:53">/* Signed 64-bit multiply  */</comment>

                        <expr_stmt pos:start="1125:25" pos:end="1125:60"><expr pos:start="1125:25" pos:end="1125:59"><name pos:start="1125:25" pos:end="1125:29">tmp64</name> <operator pos:start="1125:31" pos:end="1125:31">=</operator> <call pos:start="1125:33" pos:end="1125:59"><name pos:start="1125:33" pos:end="1125:48">gen_muls_i64_i32</name><argument_list pos:start="1125:49" pos:end="1125:59">(<argument pos:start="1125:50" pos:end="1125:52"><expr pos:start="1125:50" pos:end="1125:52"><name pos:start="1125:50" pos:end="1125:52">tmp</name></expr></argument>, <argument pos:start="1125:55" pos:end="1125:58"><expr pos:start="1125:55" pos:end="1125:58"><name pos:start="1125:55" pos:end="1125:58">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                </block_content>}</block></else></if_stmt>

                <if_stmt pos:start="1131:17" pos:end="1145:17"><if pos:start="1131:17" pos:end="1139:17">if <condition pos:start="1131:20" pos:end="1131:27">(<expr pos:start="1131:21" pos:end="1131:26"><name pos:start="1131:21" pos:end="1131:22">op</name> <operator pos:start="1131:24" pos:end="1131:24">&amp;</operator> <literal type="number" pos:start="1131:26" pos:end="1131:26">4</literal></expr>)</condition> <block pos:start="1131:29" pos:end="1139:17">{<block_content pos:start="1135:21" pos:end="1137:46">

                    <comment type="block" pos:start="1133:21" pos:end="1133:31">/* umaal */</comment>

                    <expr_stmt pos:start="1135:21" pos:end="1135:46"><expr pos:start="1135:21" pos:end="1135:45"><call pos:start="1135:21" pos:end="1135:45"><name pos:start="1135:21" pos:end="1135:31">gen_addq_lo</name><argument_list pos:start="1135:32" pos:end="1135:45">(<argument pos:start="1135:33" pos:end="1135:33"><expr pos:start="1135:33" pos:end="1135:33"><name pos:start="1135:33" pos:end="1135:33">s</name></expr></argument>, <argument pos:start="1135:36" pos:end="1135:40"><expr pos:start="1135:36" pos:end="1135:40"><name pos:start="1135:36" pos:end="1135:40">tmp64</name></expr></argument>, <argument pos:start="1135:43" pos:end="1135:44"><expr pos:start="1135:43" pos:end="1135:44"><name pos:start="1135:43" pos:end="1135:44">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1137:21" pos:end="1137:46"><expr pos:start="1137:21" pos:end="1137:45"><call pos:start="1137:21" pos:end="1137:45"><name pos:start="1137:21" pos:end="1137:31">gen_addq_lo</name><argument_list pos:start="1137:32" pos:end="1137:45">(<argument pos:start="1137:33" pos:end="1137:33"><expr pos:start="1137:33" pos:end="1137:33"><name pos:start="1137:33" pos:end="1137:33">s</name></expr></argument>, <argument pos:start="1137:36" pos:end="1137:40"><expr pos:start="1137:36" pos:end="1137:40"><name pos:start="1137:36" pos:end="1137:40">tmp64</name></expr></argument>, <argument pos:start="1137:43" pos:end="1137:44"><expr pos:start="1137:43" pos:end="1137:44"><name pos:start="1137:43" pos:end="1137:44">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <if type="elseif" pos:start="1139:19" pos:end="1145:17">else if <condition pos:start="1139:27" pos:end="1139:37">(<expr pos:start="1139:28" pos:end="1139:36"><name pos:start="1139:28" pos:end="1139:29">op</name> <operator pos:start="1139:31" pos:end="1139:31">&amp;</operator> <literal type="number" pos:start="1139:33" pos:end="1139:36">0x40</literal></expr>)</condition> <block pos:start="1139:39" pos:end="1145:17">{<block_content pos:start="1143:21" pos:end="1143:47">

                    <comment type="block" pos:start="1141:21" pos:end="1141:45">/* 64-bit accumulate.  */</comment>

                    <expr_stmt pos:start="1143:21" pos:end="1143:47"><expr pos:start="1143:21" pos:end="1143:46"><call pos:start="1143:21" pos:end="1143:46"><name pos:start="1143:21" pos:end="1143:28">gen_addq</name><argument_list pos:start="1143:29" pos:end="1143:46">(<argument pos:start="1143:30" pos:end="1143:30"><expr pos:start="1143:30" pos:end="1143:30"><name pos:start="1143:30" pos:end="1143:30">s</name></expr></argument>, <argument pos:start="1143:33" pos:end="1143:37"><expr pos:start="1143:33" pos:end="1143:37"><name pos:start="1143:33" pos:end="1143:37">tmp64</name></expr></argument>, <argument pos:start="1143:40" pos:end="1143:41"><expr pos:start="1143:40" pos:end="1143:41"><name pos:start="1143:40" pos:end="1143:41">rs</name></expr></argument>, <argument pos:start="1143:44" pos:end="1143:45"><expr pos:start="1143:44" pos:end="1143:45"><name pos:start="1143:44" pos:end="1143:45">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

                <expr_stmt pos:start="1147:17" pos:end="1147:49"><expr pos:start="1147:17" pos:end="1147:48"><call pos:start="1147:17" pos:end="1147:48"><name pos:start="1147:17" pos:end="1147:30">gen_storeq_reg</name><argument_list pos:start="1147:31" pos:end="1147:48">(<argument pos:start="1147:32" pos:end="1147:32"><expr pos:start="1147:32" pos:end="1147:32"><name pos:start="1147:32" pos:end="1147:32">s</name></expr></argument>, <argument pos:start="1147:35" pos:end="1147:36"><expr pos:start="1147:35" pos:end="1147:36"><name pos:start="1147:35" pos:end="1147:36">rs</name></expr></argument>, <argument pos:start="1147:39" pos:end="1147:40"><expr pos:start="1147:39" pos:end="1147:40"><name pos:start="1147:39" pos:end="1147:40">rd</name></expr></argument>, <argument pos:start="1147:43" pos:end="1147:47"><expr pos:start="1147:43" pos:end="1147:47"><name pos:start="1147:43" pos:end="1147:47">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1149:17" pos:end="1149:41"><expr pos:start="1149:17" pos:end="1149:40"><call pos:start="1149:17" pos:end="1149:40"><name pos:start="1149:17" pos:end="1149:33">tcg_temp_free_i64</name><argument_list pos:start="1149:34" pos:end="1149:40">(<argument pos:start="1149:35" pos:end="1149:39"><expr pos:start="1149:35" pos:end="1149:39"><name pos:start="1149:35" pos:end="1149:39">tmp64</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <break pos:start="1153:13" pos:end="1153:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="1157:9" pos:end="1157:14">break;</break>

    <case pos:start="1159:5" pos:end="1159:11">case <expr pos:start="1159:10" pos:end="1159:10"><literal type="number" pos:start="1159:10" pos:end="1159:10">6</literal></expr>:</case> <case pos:start="1159:13" pos:end="1159:19">case <expr pos:start="1159:18" pos:end="1159:18"><literal type="number" pos:start="1159:18" pos:end="1159:18">7</literal></expr>:</case> <case pos:start="1159:21" pos:end="1159:28">case <expr pos:start="1159:26" pos:end="1159:27"><literal type="number" pos:start="1159:26" pos:end="1159:27">14</literal></expr>:</case> <case pos:start="1159:30" pos:end="1159:37">case <expr pos:start="1159:35" pos:end="1159:36"><literal type="number" pos:start="1159:35" pos:end="1159:36">15</literal></expr>:</case>

        <comment type="block" pos:start="1161:9" pos:end="1161:27">/* Coprocessor.  */</comment>

        <if_stmt pos:start="1163:9" pos:end="1183:9"><if pos:start="1163:9" pos:end="1173:9">if <condition pos:start="1163:12" pos:end="1163:36">(<expr pos:start="1163:13" pos:end="1163:35"><operator pos:start="1163:13" pos:end="1163:13">(</operator><operator pos:start="1163:14" pos:end="1163:14">(</operator><name pos:start="1163:15" pos:end="1163:18">insn</name> <operator pos:start="1163:20" pos:end="1163:21">&gt;&gt;</operator> <literal type="number" pos:start="1163:23" pos:end="1163:24">24</literal><operator pos:start="1163:25" pos:end="1163:25">)</operator> <operator pos:start="1163:27" pos:end="1163:27">&amp;</operator> <literal type="number" pos:start="1163:29" pos:end="1163:29">3</literal><operator pos:start="1163:30" pos:end="1163:30">)</operator> <operator pos:start="1163:32" pos:end="1163:33">==</operator> <literal type="number" pos:start="1163:35" pos:end="1163:35">3</literal></expr>)</condition> <block pos:start="1163:38" pos:end="1173:9">{<block_content pos:start="1167:13" pos:end="1171:32">

            <comment type="block" pos:start="1165:13" pos:end="1165:62">/* Translate into the equivalent ARM encoding.  */</comment>

            <expr_stmt pos:start="1167:13" pos:end="1167:67"><expr pos:start="1167:13" pos:end="1167:66"><name pos:start="1167:13" pos:end="1167:16">insn</name> <operator pos:start="1167:18" pos:end="1167:18">=</operator> <operator pos:start="1167:20" pos:end="1167:20">(</operator><name pos:start="1167:21" pos:end="1167:24">insn</name> <operator pos:start="1167:26" pos:end="1167:26">&amp;</operator> <literal type="number" pos:start="1167:28" pos:end="1167:37">0xe2ffffff</literal><operator pos:start="1167:38" pos:end="1167:38">)</operator> <operator pos:start="1167:40" pos:end="1167:40">|</operator> <operator pos:start="1167:42" pos:end="1167:42">(</operator><operator pos:start="1167:43" pos:end="1167:43">(</operator><name pos:start="1167:44" pos:end="1167:47">insn</name> <operator pos:start="1167:49" pos:end="1167:49">&amp;</operator> <operator pos:start="1167:51" pos:end="1167:51">(</operator><literal type="number" pos:start="1167:52" pos:end="1167:52">1</literal> <operator pos:start="1167:54" pos:end="1167:55">&lt;&lt;</operator> <literal type="number" pos:start="1167:57" pos:end="1167:58">28</literal><operator pos:start="1167:59" pos:end="1167:59">)</operator><operator pos:start="1167:60" pos:end="1167:60">)</operator> <operator pos:start="1167:62" pos:end="1167:63">&gt;&gt;</operator> <literal type="number" pos:start="1167:65" pos:end="1167:65">4</literal><operator pos:start="1167:66" pos:end="1167:66">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="1169:13" pos:end="1171:32"><if pos:start="1169:13" pos:end="1171:32">if <condition pos:start="1169:16" pos:end="1169:51">(<expr pos:start="1169:17" pos:end="1169:50"><call pos:start="1169:17" pos:end="1169:50"><name pos:start="1169:17" pos:end="1169:36">disas_neon_data_insn</name><argument_list pos:start="1169:37" pos:end="1169:50">(<argument pos:start="1169:38" pos:end="1169:40"><expr pos:start="1169:38" pos:end="1169:40"><name pos:start="1169:38" pos:end="1169:40">env</name></expr></argument>, <argument pos:start="1169:43" pos:end="1169:43"><expr pos:start="1169:43" pos:end="1169:43"><name pos:start="1169:43" pos:end="1169:43">s</name></expr></argument>, <argument pos:start="1169:46" pos:end="1169:49"><expr pos:start="1169:46" pos:end="1169:49"><name pos:start="1169:46" pos:end="1169:49">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1171:17" pos:end="1171:32"><block_content pos:start="1171:17" pos:end="1171:32">

                <goto pos:start="1171:17" pos:end="1171:32">goto <name pos:start="1171:22" pos:end="1171:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="1173:11" pos:end="1183:9">else <block pos:start="1173:16" pos:end="1183:9">{<block_content pos:start="1175:13" pos:end="1181:32">

            <if_stmt pos:start="1175:13" pos:end="1177:32"><if pos:start="1175:13" pos:end="1177:32">if <condition pos:start="1175:16" pos:end="1175:33">(<expr pos:start="1175:17" pos:end="1175:32"><name pos:start="1175:17" pos:end="1175:20">insn</name> <operator pos:start="1175:22" pos:end="1175:22">&amp;</operator> <operator pos:start="1175:24" pos:end="1175:24">(</operator><literal type="number" pos:start="1175:25" pos:end="1175:25">1</literal> <operator pos:start="1175:27" pos:end="1175:28">&lt;&lt;</operator> <literal type="number" pos:start="1175:30" pos:end="1175:31">28</literal><operator pos:start="1175:32" pos:end="1175:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1177:17" pos:end="1177:32"><block_content pos:start="1177:17" pos:end="1177:32">

                <goto pos:start="1177:17" pos:end="1177:32">goto <name pos:start="1177:22" pos:end="1177:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <if_stmt pos:start="1179:13" pos:end="1181:32"><if pos:start="1179:13" pos:end="1181:32">if <condition pos:start="1179:16" pos:end="1179:49">(<expr pos:start="1179:17" pos:end="1179:48"><call pos:start="1179:17" pos:end="1179:48"><name pos:start="1179:17" pos:end="1179:33">disas_coproc_insn</name> <argument_list pos:start="1179:35" pos:end="1179:48">(<argument pos:start="1179:36" pos:end="1179:38"><expr pos:start="1179:36" pos:end="1179:38"><name pos:start="1179:36" pos:end="1179:38">env</name></expr></argument>, <argument pos:start="1179:41" pos:end="1179:41"><expr pos:start="1179:41" pos:end="1179:41"><name pos:start="1179:41" pos:end="1179:41">s</name></expr></argument>, <argument pos:start="1179:44" pos:end="1179:47"><expr pos:start="1179:44" pos:end="1179:47"><name pos:start="1179:44" pos:end="1179:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1181:17" pos:end="1181:32"><block_content pos:start="1181:17" pos:end="1181:32">

                <goto pos:start="1181:17" pos:end="1181:32">goto <name pos:start="1181:22" pos:end="1181:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1185:9" pos:end="1185:14">break;</break>

    <case pos:start="1187:5" pos:end="1187:11">case <expr pos:start="1187:10" pos:end="1187:10"><literal type="number" pos:start="1187:10" pos:end="1187:10">8</literal></expr>:</case> <case pos:start="1187:13" pos:end="1187:19">case <expr pos:start="1187:18" pos:end="1187:18"><literal type="number" pos:start="1187:18" pos:end="1187:18">9</literal></expr>:</case> <case pos:start="1187:21" pos:end="1187:28">case <expr pos:start="1187:26" pos:end="1187:27"><literal type="number" pos:start="1187:26" pos:end="1187:27">10</literal></expr>:</case> <case pos:start="1187:30" pos:end="1187:37">case <expr pos:start="1187:35" pos:end="1187:36"><literal type="number" pos:start="1187:35" pos:end="1187:36">11</literal></expr>:</case>

        <if_stmt pos:start="1189:9" pos:end="1813:9"><if pos:start="1189:9" pos:end="1509:9">if <condition pos:start="1189:12" pos:end="1189:29">(<expr pos:start="1189:13" pos:end="1189:28"><name pos:start="1189:13" pos:end="1189:16">insn</name> <operator pos:start="1189:18" pos:end="1189:18">&amp;</operator> <operator pos:start="1189:20" pos:end="1189:20">(</operator><literal type="number" pos:start="1189:21" pos:end="1189:21">1</literal> <operator pos:start="1189:23" pos:end="1189:24">&lt;&lt;</operator> <literal type="number" pos:start="1189:26" pos:end="1189:27">15</literal><operator pos:start="1189:28" pos:end="1189:28">)</operator></expr>)</condition> <block pos:start="1189:31" pos:end="1509:9">{<block_content pos:start="1193:13" pos:end="1507:13">

            <comment type="block" pos:start="1191:13" pos:end="1191:42">/* Branches, misc control.  */</comment>

            <if_stmt pos:start="1193:13" pos:end="1507:13"><if pos:start="1193:13" pos:end="1245:13">if <condition pos:start="1193:16" pos:end="1193:30">(<expr pos:start="1193:17" pos:end="1193:29"><name pos:start="1193:17" pos:end="1193:20">insn</name> <operator pos:start="1193:22" pos:end="1193:22">&amp;</operator> <literal type="number" pos:start="1193:24" pos:end="1193:29">0x5000</literal></expr>)</condition> <block pos:start="1193:32" pos:end="1245:13">{<block_content pos:start="1199:17" pos:end="1243:17">

                <comment type="block" pos:start="1195:17" pos:end="1195:44">/* Unconditional branch.  */</comment>

                <comment type="block" pos:start="1197:17" pos:end="1197:60">/* signextend(hw1[10:0]) -&gt; offset[:12].  */</comment>

                <expr_stmt pos:start="1199:17" pos:end="1199:69"><expr pos:start="1199:17" pos:end="1199:68"><name pos:start="1199:17" pos:end="1199:22">offset</name> <operator pos:start="1199:24" pos:end="1199:24">=</operator> <operator pos:start="1199:26" pos:end="1199:26">(</operator><operator pos:start="1199:27" pos:end="1199:27">(</operator><name pos:start="1199:28" pos:end="1199:34">int32_t</name><operator pos:start="1199:35" pos:end="1199:35">)</operator><name pos:start="1199:36" pos:end="1199:39">insn</name> <operator pos:start="1199:41" pos:end="1199:42">&lt;&lt;</operator> <literal type="number" pos:start="1199:44" pos:end="1199:44">5</literal><operator pos:start="1199:45" pos:end="1199:45">)</operator> <operator pos:start="1199:47" pos:end="1199:48">&gt;&gt;</operator> <literal type="number" pos:start="1199:50" pos:end="1199:50">9</literal> <operator pos:start="1199:52" pos:end="1199:52">&amp;</operator> <operator pos:start="1199:54" pos:end="1199:54">~</operator><operator pos:start="1199:55" pos:end="1199:55">(</operator><name pos:start="1199:56" pos:end="1199:62">int32_t</name><operator pos:start="1199:63" pos:end="1199:63">)</operator><literal type="number" pos:start="1199:64" pos:end="1199:68">0xfff</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1201:17" pos:end="1201:49">/* hw1[10:0] -&gt; offset[11:1].  */</comment>

                <expr_stmt pos:start="1203:17" pos:end="1203:46"><expr pos:start="1203:17" pos:end="1203:45"><name pos:start="1203:17" pos:end="1203:22">offset</name> <operator pos:start="1203:24" pos:end="1203:25">|=</operator> <operator pos:start="1203:27" pos:end="1203:27">(</operator><name pos:start="1203:28" pos:end="1203:31">insn</name> <operator pos:start="1203:33" pos:end="1203:33">&amp;</operator> <literal type="number" pos:start="1203:35" pos:end="1203:39">0x7ff</literal><operator pos:start="1203:40" pos:end="1203:40">)</operator> <operator pos:start="1203:42" pos:end="1203:43">&lt;&lt;</operator> <literal type="number" pos:start="1203:45" pos:end="1203:45">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1205:17" pos:end="1209:44">/* (~hw2[13, 11] ^ offset[24]) -&gt; offset[23,22]

                   offset[24:22] already have the same value because of the

                   sign extension above.  */</comment>

                <expr_stmt pos:start="1211:17" pos:end="1211:54"><expr pos:start="1211:17" pos:end="1211:53"><name pos:start="1211:17" pos:end="1211:22">offset</name> <operator pos:start="1211:24" pos:end="1211:25">^=</operator> <operator pos:start="1211:27" pos:end="1211:27">(</operator><operator pos:start="1211:28" pos:end="1211:28">(</operator><operator pos:start="1211:29" pos:end="1211:29">~</operator><name pos:start="1211:30" pos:end="1211:33">insn</name><operator pos:start="1211:34" pos:end="1211:34">)</operator> <operator pos:start="1211:36" pos:end="1211:36">&amp;</operator> <operator pos:start="1211:38" pos:end="1211:38">(</operator><literal type="number" pos:start="1211:39" pos:end="1211:39">1</literal> <operator pos:start="1211:41" pos:end="1211:42">&lt;&lt;</operator> <literal type="number" pos:start="1211:44" pos:end="1211:45">13</literal><operator pos:start="1211:46" pos:end="1211:46">)</operator><operator pos:start="1211:47" pos:end="1211:47">)</operator> <operator pos:start="1211:49" pos:end="1211:50">&lt;&lt;</operator> <literal type="number" pos:start="1211:52" pos:end="1211:53">10</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1213:17" pos:end="1213:54"><expr pos:start="1213:17" pos:end="1213:53"><name pos:start="1213:17" pos:end="1213:22">offset</name> <operator pos:start="1213:24" pos:end="1213:25">^=</operator> <operator pos:start="1213:27" pos:end="1213:27">(</operator><operator pos:start="1213:28" pos:end="1213:28">(</operator><operator pos:start="1213:29" pos:end="1213:29">~</operator><name pos:start="1213:30" pos:end="1213:33">insn</name><operator pos:start="1213:34" pos:end="1213:34">)</operator> <operator pos:start="1213:36" pos:end="1213:36">&amp;</operator> <operator pos:start="1213:38" pos:end="1213:38">(</operator><literal type="number" pos:start="1213:39" pos:end="1213:39">1</literal> <operator pos:start="1213:41" pos:end="1213:42">&lt;&lt;</operator> <literal type="number" pos:start="1213:44" pos:end="1213:45">11</literal><operator pos:start="1213:46" pos:end="1213:46">)</operator><operator pos:start="1213:47" pos:end="1213:47">)</operator> <operator pos:start="1213:49" pos:end="1213:50">&lt;&lt;</operator> <literal type="number" pos:start="1213:52" pos:end="1213:53">11</literal></expr>;</expr_stmt>



                <if_stmt pos:start="1217:17" pos:end="1223:17"><if pos:start="1217:17" pos:end="1223:17">if <condition pos:start="1217:20" pos:end="1217:37">(<expr pos:start="1217:21" pos:end="1217:36"><name pos:start="1217:21" pos:end="1217:24">insn</name> <operator pos:start="1217:26" pos:end="1217:26">&amp;</operator> <operator pos:start="1217:28" pos:end="1217:28">(</operator><literal type="number" pos:start="1217:29" pos:end="1217:29">1</literal> <operator pos:start="1217:31" pos:end="1217:32">&lt;&lt;</operator> <literal type="number" pos:start="1217:34" pos:end="1217:35">14</literal><operator pos:start="1217:36" pos:end="1217:36">)</operator></expr>)</condition> <block pos:start="1217:39" pos:end="1223:17">{<block_content pos:start="1221:21" pos:end="1221:59">

                    <comment type="block" pos:start="1219:21" pos:end="1219:43">/* Branch and link.  */</comment>

                    <expr_stmt pos:start="1221:21" pos:end="1221:59"><expr pos:start="1221:21" pos:end="1221:58"><call pos:start="1221:21" pos:end="1221:58"><name pos:start="1221:21" pos:end="1221:36">tcg_gen_movi_i32</name><argument_list pos:start="1221:37" pos:end="1221:58">(<argument pos:start="1221:38" pos:end="1221:46"><expr pos:start="1221:38" pos:end="1221:46"><name pos:start="1221:38" pos:end="1221:46"><name pos:start="1221:38" pos:end="1221:42">cpu_R</name><index pos:start="1221:43" pos:end="1221:46">[<expr pos:start="1221:44" pos:end="1221:45"><literal type="number" pos:start="1221:44" pos:end="1221:45">14</literal></expr>]</index></name></expr></argument>, <argument pos:start="1221:49" pos:end="1221:57"><expr pos:start="1221:49" pos:end="1221:57"><name pos:start="1221:49" pos:end="1221:53"><name pos:start="1221:49" pos:end="1221:49">s</name><operator pos:start="1221:50" pos:end="1221:51">-&gt;</operator><name pos:start="1221:52" pos:end="1221:53">pc</name></name> <operator pos:start="1221:55" pos:end="1221:55">|</operator> <literal type="number" pos:start="1221:57" pos:end="1221:57">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>



                <expr_stmt pos:start="1227:17" pos:end="1227:32"><expr pos:start="1227:17" pos:end="1227:31"><name pos:start="1227:17" pos:end="1227:22">offset</name> <operator pos:start="1227:24" pos:end="1227:25">+=</operator> <name pos:start="1227:27" pos:end="1227:31"><name pos:start="1227:27" pos:end="1227:27">s</name><operator pos:start="1227:28" pos:end="1227:29">-&gt;</operator><name pos:start="1227:30" pos:end="1227:31">pc</name></name></expr>;</expr_stmt>

                <if_stmt pos:start="1229:17" pos:end="1243:17"><if pos:start="1229:17" pos:end="1235:17">if <condition pos:start="1229:20" pos:end="1229:37">(<expr pos:start="1229:21" pos:end="1229:36"><name pos:start="1229:21" pos:end="1229:24">insn</name> <operator pos:start="1229:26" pos:end="1229:26">&amp;</operator> <operator pos:start="1229:28" pos:end="1229:28">(</operator><literal type="number" pos:start="1229:29" pos:end="1229:29">1</literal> <operator pos:start="1229:31" pos:end="1229:32">&lt;&lt;</operator> <literal type="number" pos:start="1229:34" pos:end="1229:35">12</literal><operator pos:start="1229:36" pos:end="1229:36">)</operator></expr>)</condition> <block pos:start="1229:39" pos:end="1235:17">{<block_content pos:start="1233:21" pos:end="1233:39">

                    <comment type="block" pos:start="1231:21" pos:end="1231:30">/* b/bl */</comment>

                    <expr_stmt pos:start="1233:21" pos:end="1233:39"><expr pos:start="1233:21" pos:end="1233:38"><call pos:start="1233:21" pos:end="1233:38"><name pos:start="1233:21" pos:end="1233:27">gen_jmp</name><argument_list pos:start="1233:28" pos:end="1233:38">(<argument pos:start="1233:29" pos:end="1233:29"><expr pos:start="1233:29" pos:end="1233:29"><name pos:start="1233:29" pos:end="1233:29">s</name></expr></argument>, <argument pos:start="1233:32" pos:end="1233:37"><expr pos:start="1233:32" pos:end="1233:37"><name pos:start="1233:32" pos:end="1233:37">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1235:19" pos:end="1243:17">else <block pos:start="1235:24" pos:end="1243:17">{<block_content pos:start="1239:21" pos:end="1241:41">

                    <comment type="block" pos:start="1237:21" pos:end="1237:29">/* blx */</comment>

                    <expr_stmt pos:start="1239:21" pos:end="1239:43"><expr pos:start="1239:21" pos:end="1239:42"><name pos:start="1239:21" pos:end="1239:26">offset</name> <operator pos:start="1239:28" pos:end="1239:29">&amp;=</operator> <operator pos:start="1239:31" pos:end="1239:31">~</operator><operator pos:start="1239:32" pos:end="1239:32">(</operator><name pos:start="1239:33" pos:end="1239:40">uint32_t</name><operator pos:start="1239:41" pos:end="1239:41">)</operator><literal type="number" pos:start="1239:42" pos:end="1239:42">2</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1241:21" pos:end="1241:41"><expr pos:start="1241:21" pos:end="1241:40"><call pos:start="1241:21" pos:end="1241:40"><name pos:start="1241:21" pos:end="1241:29">gen_bx_im</name><argument_list pos:start="1241:30" pos:end="1241:40">(<argument pos:start="1241:31" pos:end="1241:31"><expr pos:start="1241:31" pos:end="1241:31"><name pos:start="1241:31" pos:end="1241:31">s</name></expr></argument>, <argument pos:start="1241:34" pos:end="1241:39"><expr pos:start="1241:34" pos:end="1241:39"><name pos:start="1241:34" pos:end="1241:39">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <if type="elseif" pos:start="1245:15" pos:end="1465:13">else if <condition pos:start="1245:23" pos:end="1245:47">(<expr pos:start="1245:24" pos:end="1245:46"><operator pos:start="1245:24" pos:end="1245:24">(</operator><operator pos:start="1245:25" pos:end="1245:25">(</operator><name pos:start="1245:26" pos:end="1245:29">insn</name> <operator pos:start="1245:31" pos:end="1245:32">&gt;&gt;</operator> <literal type="number" pos:start="1245:34" pos:end="1245:35">23</literal><operator pos:start="1245:36" pos:end="1245:36">)</operator> <operator pos:start="1245:38" pos:end="1245:38">&amp;</operator> <literal type="number" pos:start="1245:40" pos:end="1245:40">7</literal><operator pos:start="1245:41" pos:end="1245:41">)</operator> <operator pos:start="1245:43" pos:end="1245:44">==</operator> <literal type="number" pos:start="1245:46" pos:end="1245:46">7</literal></expr>)</condition> <block pos:start="1245:49" pos:end="1465:13">{<block_content pos:start="1249:17" pos:end="1463:17">

                <comment type="block" pos:start="1247:17" pos:end="1247:34">/* Misc control */</comment>

                <if_stmt pos:start="1249:17" pos:end="1251:36"><if pos:start="1249:17" pos:end="1251:36">if <condition pos:start="1249:20" pos:end="1249:37">(<expr pos:start="1249:21" pos:end="1249:36"><name pos:start="1249:21" pos:end="1249:24">insn</name> <operator pos:start="1249:26" pos:end="1249:26">&amp;</operator> <operator pos:start="1249:28" pos:end="1249:28">(</operator><literal type="number" pos:start="1249:29" pos:end="1249:29">1</literal> <operator pos:start="1249:31" pos:end="1249:32">&lt;&lt;</operator> <literal type="number" pos:start="1249:34" pos:end="1249:35">13</literal><operator pos:start="1249:36" pos:end="1249:36">)</operator></expr>)</condition><block type="pseudo" pos:start="1251:21" pos:end="1251:36"><block_content pos:start="1251:21" pos:end="1251:36">

                    <goto pos:start="1251:21" pos:end="1251:36">goto <name pos:start="1251:26" pos:end="1251:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>



                <if_stmt pos:start="1255:17" pos:end="1463:17"><if pos:start="1255:17" pos:end="1261:17">if <condition pos:start="1255:20" pos:end="1255:37">(<expr pos:start="1255:21" pos:end="1255:36"><name pos:start="1255:21" pos:end="1255:24">insn</name> <operator pos:start="1255:26" pos:end="1255:26">&amp;</operator> <operator pos:start="1255:28" pos:end="1255:28">(</operator><literal type="number" pos:start="1255:29" pos:end="1255:29">1</literal> <operator pos:start="1255:31" pos:end="1255:32">&lt;&lt;</operator> <literal type="number" pos:start="1255:34" pos:end="1255:35">26</literal><operator pos:start="1255:36" pos:end="1255:36">)</operator></expr>)</condition> <block pos:start="1255:39" pos:end="1261:17">{<block_content pos:start="1259:21" pos:end="1259:36">

                    <comment type="block" pos:start="1257:21" pos:end="1257:51">/* Secure monitor call (v6Z) */</comment>

                    <goto pos:start="1259:21" pos:end="1259:36">goto <name pos:start="1259:26" pos:end="1259:35">illegal_op</name>;</goto> <comment type="block" pos:start="1259:38" pos:end="1259:60">/* not implemented.  */</comment>

                </block_content>}</block></if> <else pos:start="1261:19" pos:end="1463:17">else <block pos:start="1261:24" pos:end="1463:17">{<block_content pos:start="1263:21" pos:end="1461:21">

                    <expr_stmt pos:start="1263:21" pos:end="1263:42"><expr pos:start="1263:21" pos:end="1263:41"><name pos:start="1263:21" pos:end="1263:22">op</name> <operator pos:start="1263:24" pos:end="1263:24">=</operator> <operator pos:start="1263:26" pos:end="1263:26">(</operator><name pos:start="1263:27" pos:end="1263:30">insn</name> <operator pos:start="1263:32" pos:end="1263:33">&gt;&gt;</operator> <literal type="number" pos:start="1263:35" pos:end="1263:36">20</literal><operator pos:start="1263:37" pos:end="1263:37">)</operator> <operator pos:start="1263:39" pos:end="1263:39">&amp;</operator> <literal type="number" pos:start="1263:41" pos:end="1263:41">7</literal></expr>;</expr_stmt>

                    <switch pos:start="1265:21" pos:end="1461:21">switch <condition pos:start="1265:28" pos:end="1265:31">(<expr pos:start="1265:29" pos:end="1265:30"><name pos:start="1265:29" pos:end="1265:30">op</name></expr>)</condition> <block pos:start="1265:33" pos:end="1461:21">{<block_content pos:start="1267:21" pos:end="1459:30">

                    <case pos:start="1267:21" pos:end="1267:27">case <expr pos:start="1267:26" pos:end="1267:26"><literal type="number" pos:start="1267:26" pos:end="1267:26">0</literal></expr>:</case> <comment type="block" pos:start="1267:29" pos:end="1267:44">/* msr cpsr.  */</comment>

                        <if_stmt pos:start="1269:25" pos:end="1285:25"><if pos:start="1269:25" pos:end="1285:25">if <condition pos:start="1269:28" pos:end="1269:38">(<expr pos:start="1269:29" pos:end="1269:37"><call pos:start="1269:29" pos:end="1269:37"><name pos:start="1269:29" pos:end="1269:32">IS_M</name><argument_list pos:start="1269:33" pos:end="1269:37">(<argument pos:start="1269:34" pos:end="1269:36"><expr pos:start="1269:34" pos:end="1269:36"><name pos:start="1269:34" pos:end="1269:36">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1269:40" pos:end="1285:25">{<block_content pos:start="1271:29" pos:end="1283:34">

                            <expr_stmt pos:start="1271:29" pos:end="1271:50"><expr pos:start="1271:29" pos:end="1271:49"><name pos:start="1271:29" pos:end="1271:31">tmp</name> <operator pos:start="1271:33" pos:end="1271:33">=</operator> <call pos:start="1271:35" pos:end="1271:49"><name pos:start="1271:35" pos:end="1271:42">load_reg</name><argument_list pos:start="1271:43" pos:end="1271:49">(<argument pos:start="1271:44" pos:end="1271:44"><expr pos:start="1271:44" pos:end="1271:44"><name pos:start="1271:44" pos:end="1271:44">s</name></expr></argument>, <argument pos:start="1271:47" pos:end="1271:48"><expr pos:start="1271:47" pos:end="1271:48"><name pos:start="1271:47" pos:end="1271:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1273:29" pos:end="1273:62"><expr pos:start="1273:29" pos:end="1273:61"><name pos:start="1273:29" pos:end="1273:32">addr</name> <operator pos:start="1273:34" pos:end="1273:34">=</operator> <call pos:start="1273:36" pos:end="1273:61"><name pos:start="1273:36" pos:end="1273:48">tcg_const_i32</name><argument_list pos:start="1273:49" pos:end="1273:61">(<argument pos:start="1273:50" pos:end="1273:60"><expr pos:start="1273:50" pos:end="1273:60"><name pos:start="1273:50" pos:end="1273:53">insn</name> <operator pos:start="1273:55" pos:end="1273:55">&amp;</operator> <literal type="number" pos:start="1273:57" pos:end="1273:60">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1275:29" pos:end="1275:67"><expr pos:start="1275:29" pos:end="1275:66"><call pos:start="1275:29" pos:end="1275:66"><name pos:start="1275:29" pos:end="1275:46">gen_helper_v7m_msr</name><argument_list pos:start="1275:47" pos:end="1275:66">(<argument pos:start="1275:48" pos:end="1275:54"><expr pos:start="1275:48" pos:end="1275:54"><name pos:start="1275:48" pos:end="1275:54">cpu_env</name></expr></argument>, <argument pos:start="1275:57" pos:end="1275:60"><expr pos:start="1275:57" pos:end="1275:60"><name pos:start="1275:57" pos:end="1275:60">addr</name></expr></argument>, <argument pos:start="1275:63" pos:end="1275:65"><expr pos:start="1275:63" pos:end="1275:65"><name pos:start="1275:63" pos:end="1275:65">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1277:29" pos:end="1277:52"><expr pos:start="1277:29" pos:end="1277:51"><call pos:start="1277:29" pos:end="1277:51"><name pos:start="1277:29" pos:end="1277:45">tcg_temp_free_i32</name><argument_list pos:start="1277:46" pos:end="1277:51">(<argument pos:start="1277:47" pos:end="1277:50"><expr pos:start="1277:47" pos:end="1277:50"><name pos:start="1277:47" pos:end="1277:50">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1279:29" pos:end="1279:42"><expr pos:start="1279:29" pos:end="1279:41"><call pos:start="1279:29" pos:end="1279:41"><name pos:start="1279:29" pos:end="1279:36">dead_tmp</name><argument_list pos:start="1279:37" pos:end="1279:41">(<argument pos:start="1279:38" pos:end="1279:40"><expr pos:start="1279:38" pos:end="1279:40"><name pos:start="1279:38" pos:end="1279:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1281:29" pos:end="1281:45"><expr pos:start="1281:29" pos:end="1281:44"><call pos:start="1281:29" pos:end="1281:44"><name pos:start="1281:29" pos:end="1281:41">gen_lookup_tb</name><argument_list pos:start="1281:42" pos:end="1281:44">(<argument pos:start="1281:43" pos:end="1281:43"><expr pos:start="1281:43" pos:end="1281:43"><name pos:start="1281:43" pos:end="1281:43">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1283:29" pos:end="1283:34">break;</break>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="1287:25" pos:end="1287:42">/* fall through */</comment>

                    <case pos:start="1289:21" pos:end="1289:27">case <expr pos:start="1289:26" pos:end="1289:26"><literal type="number" pos:start="1289:26" pos:end="1289:26">1</literal></expr>:</case> <comment type="block" pos:start="1289:29" pos:end="1289:44">/* msr spsr.  */</comment>

                        <if_stmt pos:start="1291:25" pos:end="1293:44"><if pos:start="1291:25" pos:end="1293:44">if <condition pos:start="1291:28" pos:end="1291:38">(<expr pos:start="1291:29" pos:end="1291:37"><call pos:start="1291:29" pos:end="1291:37"><name pos:start="1291:29" pos:end="1291:32">IS_M</name><argument_list pos:start="1291:33" pos:end="1291:37">(<argument pos:start="1291:34" pos:end="1291:36"><expr pos:start="1291:34" pos:end="1291:36"><name pos:start="1291:34" pos:end="1291:36">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1293:29" pos:end="1293:44"><block_content pos:start="1293:29" pos:end="1293:44">

                            <goto pos:start="1293:29" pos:end="1293:44">goto <name pos:start="1293:34" pos:end="1293:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1295:25" pos:end="1295:46"><expr pos:start="1295:25" pos:end="1295:45"><name pos:start="1295:25" pos:end="1295:27">tmp</name> <operator pos:start="1295:29" pos:end="1295:29">=</operator> <call pos:start="1295:31" pos:end="1295:45"><name pos:start="1295:31" pos:end="1295:38">load_reg</name><argument_list pos:start="1295:39" pos:end="1295:45">(<argument pos:start="1295:40" pos:end="1295:40"><expr pos:start="1295:40" pos:end="1295:40"><name pos:start="1295:40" pos:end="1295:40">s</name></expr></argument>, <argument pos:start="1295:43" pos:end="1295:44"><expr pos:start="1295:43" pos:end="1295:44"><name pos:start="1295:43" pos:end="1295:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1297:25" pos:end="1303:44"><if pos:start="1297:25" pos:end="1303:44">if <condition pos:start="1297:28" pos:end="1301:44">(<expr pos:start="1297:29" pos:end="1301:43"><call pos:start="1297:29" pos:end="1301:43"><name pos:start="1297:29" pos:end="1297:39">gen_set_psr</name><argument_list pos:start="1297:40" pos:end="1301:43">(<argument pos:start="1297:41" pos:end="1297:41"><expr pos:start="1297:41" pos:end="1297:41"><name pos:start="1297:41" pos:end="1297:41">s</name></expr></argument>,

                              <argument pos:start="1299:31" pos:end="1299:74"><expr pos:start="1299:31" pos:end="1299:74"><call pos:start="1299:31" pos:end="1299:74"><name pos:start="1299:31" pos:end="1299:38">msr_mask</name><argument_list pos:start="1299:39" pos:end="1299:74">(<argument pos:start="1299:40" pos:end="1299:42"><expr pos:start="1299:40" pos:end="1299:42"><name pos:start="1299:40" pos:end="1299:42">env</name></expr></argument>, <argument pos:start="1299:45" pos:end="1299:45"><expr pos:start="1299:45" pos:end="1299:45"><name pos:start="1299:45" pos:end="1299:45">s</name></expr></argument>, <argument pos:start="1299:48" pos:end="1299:64"><expr pos:start="1299:48" pos:end="1299:64"><operator pos:start="1299:48" pos:end="1299:48">(</operator><name pos:start="1299:49" pos:end="1299:52">insn</name> <operator pos:start="1299:54" pos:end="1299:55">&gt;&gt;</operator> <literal type="number" pos:start="1299:57" pos:end="1299:57">8</literal><operator pos:start="1299:58" pos:end="1299:58">)</operator> <operator pos:start="1299:60" pos:end="1299:60">&amp;</operator> <literal type="number" pos:start="1299:62" pos:end="1299:64">0xf</literal></expr></argument>, <argument pos:start="1299:67" pos:end="1299:73"><expr pos:start="1299:67" pos:end="1299:73"><name pos:start="1299:67" pos:end="1299:68">op</name> <operator pos:start="1299:70" pos:end="1299:71">==</operator> <literal type="number" pos:start="1299:73" pos:end="1299:73">1</literal></expr></argument>)</argument_list></call></expr></argument>,

                              <argument pos:start="1301:31" pos:end="1301:37"><expr pos:start="1301:31" pos:end="1301:37"><name pos:start="1301:31" pos:end="1301:32">op</name> <operator pos:start="1301:34" pos:end="1301:35">==</operator> <literal type="number" pos:start="1301:37" pos:end="1301:37">1</literal></expr></argument>, <argument pos:start="1301:40" pos:end="1301:42"><expr pos:start="1301:40" pos:end="1301:42"><name pos:start="1301:40" pos:end="1301:42">tmp</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1303:29" pos:end="1303:44"><block_content pos:start="1303:29" pos:end="1303:44">

                            <goto pos:start="1303:29" pos:end="1303:44">goto <name pos:start="1303:34" pos:end="1303:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <break pos:start="1305:25" pos:end="1305:30">break;</break>

                    <case pos:start="1307:21" pos:end="1307:27">case <expr pos:start="1307:26" pos:end="1307:26"><literal type="number" pos:start="1307:26" pos:end="1307:26">2</literal></expr>:</case> <comment type="block" pos:start="1307:29" pos:end="1307:49">/* cps, nop-hint.  */</comment>

                        <if_stmt pos:start="1309:25" pos:end="1313:25"><if pos:start="1309:25" pos:end="1313:25">if <condition pos:start="1309:28" pos:end="1309:51">(<expr pos:start="1309:29" pos:end="1309:50"><operator pos:start="1309:29" pos:end="1309:29">(</operator><operator pos:start="1309:30" pos:end="1309:30">(</operator><name pos:start="1309:31" pos:end="1309:34">insn</name> <operator pos:start="1309:36" pos:end="1309:37">&gt;&gt;</operator> <literal type="number" pos:start="1309:39" pos:end="1309:39">8</literal><operator pos:start="1309:40" pos:end="1309:40">)</operator> <operator pos:start="1309:42" pos:end="1309:42">&amp;</operator> <literal type="number" pos:start="1309:44" pos:end="1309:44">7</literal><operator pos:start="1309:45" pos:end="1309:45">)</operator> <operator pos:start="1309:47" pos:end="1309:48">==</operator> <literal type="number" pos:start="1309:50" pos:end="1309:50">0</literal></expr>)</condition> <block pos:start="1309:53" pos:end="1313:25">{<block_content pos:start="1311:29" pos:end="1311:57">

                            <expr_stmt pos:start="1311:29" pos:end="1311:57"><expr pos:start="1311:29" pos:end="1311:56"><call pos:start="1311:29" pos:end="1311:56"><name pos:start="1311:29" pos:end="1311:40">gen_nop_hint</name><argument_list pos:start="1311:41" pos:end="1311:56">(<argument pos:start="1311:42" pos:end="1311:42"><expr pos:start="1311:42" pos:end="1311:42"><name pos:start="1311:42" pos:end="1311:42">s</name></expr></argument>, <argument pos:start="1311:45" pos:end="1311:55"><expr pos:start="1311:45" pos:end="1311:55"><name pos:start="1311:45" pos:end="1311:48">insn</name> <operator pos:start="1311:50" pos:end="1311:50">&amp;</operator> <literal type="number" pos:start="1311:52" pos:end="1311:55">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <comment type="block" pos:start="1315:25" pos:end="1315:63">/* Implemented as NOP in user mode.  */</comment>

                        <if_stmt pos:start="1317:25" pos:end="1319:34"><if pos:start="1317:25" pos:end="1319:34">if <condition pos:start="1317:28" pos:end="1317:39">(<expr pos:start="1317:29" pos:end="1317:38"><call pos:start="1317:29" pos:end="1317:38"><name pos:start="1317:29" pos:end="1317:35">IS_USER</name><argument_list pos:start="1317:36" pos:end="1317:38">(<argument pos:start="1317:37" pos:end="1317:37"><expr pos:start="1317:37" pos:end="1317:37"><name pos:start="1317:37" pos:end="1317:37">s</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1319:29" pos:end="1319:34"><block_content pos:start="1319:29" pos:end="1319:34">

                            <break pos:start="1319:29" pos:end="1319:34">break;</break></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1321:25" pos:end="1321:35"><expr pos:start="1321:25" pos:end="1321:34"><name pos:start="1321:25" pos:end="1321:30">offset</name> <operator pos:start="1321:32" pos:end="1321:32">=</operator> <literal type="number" pos:start="1321:34" pos:end="1321:34">0</literal></expr>;</expr_stmt>

                        <expr_stmt pos:start="1323:25" pos:end="1323:32"><expr pos:start="1323:25" pos:end="1323:31"><name pos:start="1323:25" pos:end="1323:27">imm</name> <operator pos:start="1323:29" pos:end="1323:29">=</operator> <literal type="number" pos:start="1323:31" pos:end="1323:31">0</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1325:25" pos:end="1343:25"><if pos:start="1325:25" pos:end="1343:25">if <condition pos:start="1325:28" pos:end="1325:45">(<expr pos:start="1325:29" pos:end="1325:44"><name pos:start="1325:29" pos:end="1325:32">insn</name> <operator pos:start="1325:34" pos:end="1325:34">&amp;</operator> <operator pos:start="1325:36" pos:end="1325:36">(</operator><literal type="number" pos:start="1325:37" pos:end="1325:37">1</literal> <operator pos:start="1325:39" pos:end="1325:40">&lt;&lt;</operator> <literal type="number" pos:start="1325:42" pos:end="1325:43">10</literal><operator pos:start="1325:44" pos:end="1325:44">)</operator></expr>)</condition> <block pos:start="1325:47" pos:end="1343:25">{<block_content pos:start="1327:29" pos:end="1341:63">

                            <if_stmt pos:start="1327:29" pos:end="1329:49"><if pos:start="1327:29" pos:end="1329:49">if <condition pos:start="1327:32" pos:end="1327:48">(<expr pos:start="1327:33" pos:end="1327:47"><name pos:start="1327:33" pos:end="1327:36">insn</name> <operator pos:start="1327:38" pos:end="1327:38">&amp;</operator> <operator pos:start="1327:40" pos:end="1327:40">(</operator><literal type="number" pos:start="1327:41" pos:end="1327:41">1</literal> <operator pos:start="1327:43" pos:end="1327:44">&lt;&lt;</operator> <literal type="number" pos:start="1327:46" pos:end="1327:46">7</literal><operator pos:start="1327:47" pos:end="1327:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1329:33" pos:end="1329:49"><block_content pos:start="1329:33" pos:end="1329:49">

                                <expr_stmt pos:start="1329:33" pos:end="1329:49"><expr pos:start="1329:33" pos:end="1329:48"><name pos:start="1329:33" pos:end="1329:38">offset</name> <operator pos:start="1329:40" pos:end="1329:41">|=</operator> <name pos:start="1329:43" pos:end="1329:48">CPSR_A</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <if_stmt pos:start="1331:29" pos:end="1333:49"><if pos:start="1331:29" pos:end="1333:49">if <condition pos:start="1331:32" pos:end="1331:48">(<expr pos:start="1331:33" pos:end="1331:47"><name pos:start="1331:33" pos:end="1331:36">insn</name> <operator pos:start="1331:38" pos:end="1331:38">&amp;</operator> <operator pos:start="1331:40" pos:end="1331:40">(</operator><literal type="number" pos:start="1331:41" pos:end="1331:41">1</literal> <operator pos:start="1331:43" pos:end="1331:44">&lt;&lt;</operator> <literal type="number" pos:start="1331:46" pos:end="1331:46">6</literal><operator pos:start="1331:47" pos:end="1331:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1333:33" pos:end="1333:49"><block_content pos:start="1333:33" pos:end="1333:49">

                                <expr_stmt pos:start="1333:33" pos:end="1333:49"><expr pos:start="1333:33" pos:end="1333:48"><name pos:start="1333:33" pos:end="1333:38">offset</name> <operator pos:start="1333:40" pos:end="1333:41">|=</operator> <name pos:start="1333:43" pos:end="1333:48">CPSR_I</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <if_stmt pos:start="1335:29" pos:end="1337:49"><if pos:start="1335:29" pos:end="1337:49">if <condition pos:start="1335:32" pos:end="1335:48">(<expr pos:start="1335:33" pos:end="1335:47"><name pos:start="1335:33" pos:end="1335:36">insn</name> <operator pos:start="1335:38" pos:end="1335:38">&amp;</operator> <operator pos:start="1335:40" pos:end="1335:40">(</operator><literal type="number" pos:start="1335:41" pos:end="1335:41">1</literal> <operator pos:start="1335:43" pos:end="1335:44">&lt;&lt;</operator> <literal type="number" pos:start="1335:46" pos:end="1335:46">5</literal><operator pos:start="1335:47" pos:end="1335:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1337:33" pos:end="1337:49"><block_content pos:start="1337:33" pos:end="1337:49">

                                <expr_stmt pos:start="1337:33" pos:end="1337:49"><expr pos:start="1337:33" pos:end="1337:48"><name pos:start="1337:33" pos:end="1337:38">offset</name> <operator pos:start="1337:40" pos:end="1337:41">|=</operator> <name pos:start="1337:43" pos:end="1337:48">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                            <if_stmt pos:start="1339:29" pos:end="1341:63"><if pos:start="1339:29" pos:end="1341:63">if <condition pos:start="1339:32" pos:end="1339:48">(<expr pos:start="1339:33" pos:end="1339:47"><name pos:start="1339:33" pos:end="1339:36">insn</name> <operator pos:start="1339:38" pos:end="1339:38">&amp;</operator> <operator pos:start="1339:40" pos:end="1339:40">(</operator><literal type="number" pos:start="1339:41" pos:end="1339:41">1</literal> <operator pos:start="1339:43" pos:end="1339:44">&lt;&lt;</operator> <literal type="number" pos:start="1339:46" pos:end="1339:46">9</literal><operator pos:start="1339:47" pos:end="1339:47">)</operator></expr>)</condition><block type="pseudo" pos:start="1341:33" pos:end="1341:63"><block_content pos:start="1341:33" pos:end="1341:63">

                                <expr_stmt pos:start="1341:33" pos:end="1341:63"><expr pos:start="1341:33" pos:end="1341:62"><name pos:start="1341:33" pos:end="1341:35">imm</name> <operator pos:start="1341:37" pos:end="1341:37">=</operator> <name pos:start="1341:39" pos:end="1341:44">CPSR_A</name> <operator pos:start="1341:46" pos:end="1341:46">|</operator> <name pos:start="1341:48" pos:end="1341:53">CPSR_I</name> <operator pos:start="1341:55" pos:end="1341:55">|</operator> <name pos:start="1341:57" pos:end="1341:62">CPSR_F</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1345:25" pos:end="1351:25"><if pos:start="1345:25" pos:end="1351:25">if <condition pos:start="1345:28" pos:end="1345:44">(<expr pos:start="1345:29" pos:end="1345:43"><name pos:start="1345:29" pos:end="1345:32">insn</name> <operator pos:start="1345:34" pos:end="1345:34">&amp;</operator> <operator pos:start="1345:36" pos:end="1345:36">(</operator><literal type="number" pos:start="1345:37" pos:end="1345:37">1</literal> <operator pos:start="1345:39" pos:end="1345:40">&lt;&lt;</operator> <literal type="number" pos:start="1345:42" pos:end="1345:42">8</literal><operator pos:start="1345:43" pos:end="1345:43">)</operator></expr>)</condition> <block pos:start="1345:46" pos:end="1351:25">{<block_content pos:start="1347:29" pos:end="1349:49">

                            <expr_stmt pos:start="1347:29" pos:end="1347:43"><expr pos:start="1347:29" pos:end="1347:42"><name pos:start="1347:29" pos:end="1347:34">offset</name> <operator pos:start="1347:36" pos:end="1347:37">|=</operator> <literal type="number" pos:start="1347:39" pos:end="1347:42">0x1f</literal></expr>;</expr_stmt>

                            <expr_stmt pos:start="1349:29" pos:end="1349:49"><expr pos:start="1349:29" pos:end="1349:48"><name pos:start="1349:29" pos:end="1349:31">imm</name> <operator pos:start="1349:33" pos:end="1349:34">|=</operator> <operator pos:start="1349:36" pos:end="1349:36">(</operator><name pos:start="1349:37" pos:end="1349:40">insn</name> <operator pos:start="1349:42" pos:end="1349:42">&amp;</operator> <literal type="number" pos:start="1349:44" pos:end="1349:47">0x1f</literal><operator pos:start="1349:48" pos:end="1349:48">)</operator></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1353:25" pos:end="1357:25"><if pos:start="1353:25" pos:end="1357:25">if <condition pos:start="1353:28" pos:end="1353:35">(<expr pos:start="1353:29" pos:end="1353:34"><name pos:start="1353:29" pos:end="1353:34">offset</name></expr>)</condition> <block pos:start="1353:37" pos:end="1357:25">{<block_content pos:start="1355:29" pos:end="1355:62">

                            <expr_stmt pos:start="1355:29" pos:end="1355:62"><expr pos:start="1355:29" pos:end="1355:61"><call pos:start="1355:29" pos:end="1355:61"><name pos:start="1355:29" pos:end="1355:42">gen_set_psr_im</name><argument_list pos:start="1355:43" pos:end="1355:61">(<argument pos:start="1355:44" pos:end="1355:44"><expr pos:start="1355:44" pos:end="1355:44"><name pos:start="1355:44" pos:end="1355:44">s</name></expr></argument>, <argument pos:start="1355:47" pos:end="1355:52"><expr pos:start="1355:47" pos:end="1355:52"><name pos:start="1355:47" pos:end="1355:52">offset</name></expr></argument>, <argument pos:start="1355:55" pos:end="1355:55"><expr pos:start="1355:55" pos:end="1355:55"><literal type="number" pos:start="1355:55" pos:end="1355:55">0</literal></expr></argument>, <argument pos:start="1355:58" pos:end="1355:60"><expr pos:start="1355:58" pos:end="1355:60"><name pos:start="1355:58" pos:end="1355:60">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <break pos:start="1359:25" pos:end="1359:30">break;</break>

                    <case pos:start="1361:21" pos:end="1361:27">case <expr pos:start="1361:26" pos:end="1361:26"><literal type="number" pos:start="1361:26" pos:end="1361:26">3</literal></expr>:</case> <comment type="block" pos:start="1361:29" pos:end="1361:62">/* Special control operations.  */</comment>

                        <expr_stmt pos:start="1363:25" pos:end="1363:32"><expr pos:start="1363:25" pos:end="1363:31"><call pos:start="1363:25" pos:end="1363:31"><name pos:start="1363:25" pos:end="1363:28">ARCH</name><argument_list pos:start="1363:29" pos:end="1363:31">(<argument pos:start="1363:30" pos:end="1363:30"><expr pos:start="1363:30" pos:end="1363:30"><literal type="number" pos:start="1363:30" pos:end="1363:30">7</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1365:25" pos:end="1365:47"><expr pos:start="1365:25" pos:end="1365:46"><name pos:start="1365:25" pos:end="1365:26">op</name> <operator pos:start="1365:28" pos:end="1365:28">=</operator> <operator pos:start="1365:30" pos:end="1365:30">(</operator><name pos:start="1365:31" pos:end="1365:34">insn</name> <operator pos:start="1365:36" pos:end="1365:37">&gt;&gt;</operator> <literal type="number" pos:start="1365:39" pos:end="1365:39">4</literal><operator pos:start="1365:40" pos:end="1365:40">)</operator> <operator pos:start="1365:42" pos:end="1365:42">&amp;</operator> <literal type="number" pos:start="1365:44" pos:end="1365:46">0xf</literal></expr>;</expr_stmt>

                        <switch pos:start="1367:25" pos:end="1389:25">switch <condition pos:start="1367:32" pos:end="1367:35">(<expr pos:start="1367:33" pos:end="1367:34"><name pos:start="1367:33" pos:end="1367:34">op</name></expr>)</condition> <block pos:start="1367:37" pos:end="1389:25">{<block_content pos:start="1369:25" pos:end="1387:44">

                        <case pos:start="1369:25" pos:end="1369:31">case <expr pos:start="1369:30" pos:end="1369:30"><literal type="number" pos:start="1369:30" pos:end="1369:30">2</literal></expr>:</case> <comment type="block" pos:start="1369:33" pos:end="1369:43">/* clrex */</comment>

                            <expr_stmt pos:start="1371:29" pos:end="1371:41"><expr pos:start="1371:29" pos:end="1371:40"><call pos:start="1371:29" pos:end="1371:40"><name pos:start="1371:29" pos:end="1371:37">gen_clrex</name><argument_list pos:start="1371:38" pos:end="1371:40">(<argument pos:start="1371:39" pos:end="1371:39"><expr pos:start="1371:39" pos:end="1371:39"><name pos:start="1371:39" pos:end="1371:39">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <break pos:start="1373:29" pos:end="1373:34">break;</break>

                        <case pos:start="1375:25" pos:end="1375:31">case <expr pos:start="1375:30" pos:end="1375:30"><literal type="number" pos:start="1375:30" pos:end="1375:30">4</literal></expr>:</case> <comment type="block" pos:start="1375:33" pos:end="1375:41">/* dsb */</comment>

                        <case pos:start="1377:25" pos:end="1377:31">case <expr pos:start="1377:30" pos:end="1377:30"><literal type="number" pos:start="1377:30" pos:end="1377:30">5</literal></expr>:</case> <comment type="block" pos:start="1377:33" pos:end="1377:41">/* dmb */</comment>

                        <case pos:start="1379:25" pos:end="1379:31">case <expr pos:start="1379:30" pos:end="1379:30"><literal type="number" pos:start="1379:30" pos:end="1379:30">6</literal></expr>:</case> <comment type="block" pos:start="1379:33" pos:end="1379:41">/* isb */</comment>

                            <comment type="block" pos:start="1381:29" pos:end="1381:57">/* These execute as NOPs.  */</comment>

                            <break pos:start="1383:29" pos:end="1383:34">break;</break>

                        <default pos:start="1385:25" pos:end="1385:32">default:</default>

                            <goto pos:start="1387:29" pos:end="1387:44">goto <name pos:start="1387:34" pos:end="1387:43">illegal_op</name>;</goto>

                        </block_content>}</block></switch>

                        <break pos:start="1391:25" pos:end="1391:30">break;</break>

                    <case pos:start="1393:21" pos:end="1393:27">case <expr pos:start="1393:26" pos:end="1393:26"><literal type="number" pos:start="1393:26" pos:end="1393:26">4</literal></expr>:</case> <comment type="block" pos:start="1393:29" pos:end="1393:37">/* bxj */</comment>

                        <comment type="block" pos:start="1395:25" pos:end="1395:71">/* Trivial implementation equivalent to bx.  */</comment>

                        <expr_stmt pos:start="1397:25" pos:end="1397:46"><expr pos:start="1397:25" pos:end="1397:45"><name pos:start="1397:25" pos:end="1397:27">tmp</name> <operator pos:start="1397:29" pos:end="1397:29">=</operator> <call pos:start="1397:31" pos:end="1397:45"><name pos:start="1397:31" pos:end="1397:38">load_reg</name><argument_list pos:start="1397:39" pos:end="1397:45">(<argument pos:start="1397:40" pos:end="1397:40"><expr pos:start="1397:40" pos:end="1397:40"><name pos:start="1397:40" pos:end="1397:40">s</name></expr></argument>, <argument pos:start="1397:43" pos:end="1397:44"><expr pos:start="1397:43" pos:end="1397:44"><name pos:start="1397:43" pos:end="1397:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1399:25" pos:end="1399:39"><expr pos:start="1399:25" pos:end="1399:38"><call pos:start="1399:25" pos:end="1399:38"><name pos:start="1399:25" pos:end="1399:30">gen_bx</name><argument_list pos:start="1399:31" pos:end="1399:38">(<argument pos:start="1399:32" pos:end="1399:32"><expr pos:start="1399:32" pos:end="1399:32"><name pos:start="1399:32" pos:end="1399:32">s</name></expr></argument>, <argument pos:start="1399:35" pos:end="1399:37"><expr pos:start="1399:35" pos:end="1399:37"><name pos:start="1399:35" pos:end="1399:37">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1401:25" pos:end="1401:30">break;</break>

                    <case pos:start="1403:21" pos:end="1403:27">case <expr pos:start="1403:26" pos:end="1403:26"><literal type="number" pos:start="1403:26" pos:end="1403:26">5</literal></expr>:</case> <comment type="block" pos:start="1403:29" pos:end="1403:52">/* Exception return.  */</comment>

                        <if_stmt pos:start="1405:25" pos:end="1409:25"><if pos:start="1405:25" pos:end="1409:25">if <condition pos:start="1405:28" pos:end="1405:39">(<expr pos:start="1405:29" pos:end="1405:38"><call pos:start="1405:29" pos:end="1405:38"><name pos:start="1405:29" pos:end="1405:35">IS_USER</name><argument_list pos:start="1405:36" pos:end="1405:38">(<argument pos:start="1405:37" pos:end="1405:37"><expr pos:start="1405:37" pos:end="1405:37"><name pos:start="1405:37" pos:end="1405:37">s</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1405:41" pos:end="1409:25">{<block_content pos:start="1407:29" pos:end="1407:44">

                            <goto pos:start="1407:29" pos:end="1407:44">goto <name pos:start="1407:34" pos:end="1407:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <if_stmt pos:start="1411:25" pos:end="1415:25"><if pos:start="1411:25" pos:end="1415:25">if <condition pos:start="1411:28" pos:end="1411:49">(<expr pos:start="1411:29" pos:end="1411:48"><name pos:start="1411:29" pos:end="1411:30">rn</name> <operator pos:start="1411:32" pos:end="1411:33">!=</operator> <literal type="number" pos:start="1411:35" pos:end="1411:36">14</literal> <operator pos:start="1411:38" pos:end="1411:39">||</operator> <name pos:start="1411:41" pos:end="1411:42">rd</name> <operator pos:start="1411:44" pos:end="1411:45">!=</operator> <literal type="number" pos:start="1411:47" pos:end="1411:48">15</literal></expr>)</condition> <block pos:start="1411:51" pos:end="1415:25">{<block_content pos:start="1413:29" pos:end="1413:44">

                            <goto pos:start="1413:29" pos:end="1413:44">goto <name pos:start="1413:34" pos:end="1413:43">illegal_op</name>;</goto>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1417:25" pos:end="1417:46"><expr pos:start="1417:25" pos:end="1417:45"><name pos:start="1417:25" pos:end="1417:27">tmp</name> <operator pos:start="1417:29" pos:end="1417:29">=</operator> <call pos:start="1417:31" pos:end="1417:45"><name pos:start="1417:31" pos:end="1417:38">load_reg</name><argument_list pos:start="1417:39" pos:end="1417:45">(<argument pos:start="1417:40" pos:end="1417:40"><expr pos:start="1417:40" pos:end="1417:40"><name pos:start="1417:40" pos:end="1417:40">s</name></expr></argument>, <argument pos:start="1417:43" pos:end="1417:44"><expr pos:start="1417:43" pos:end="1417:44"><name pos:start="1417:43" pos:end="1417:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1419:25" pos:end="1419:64"><expr pos:start="1419:25" pos:end="1419:63"><call pos:start="1419:25" pos:end="1419:63"><name pos:start="1419:25" pos:end="1419:40">tcg_gen_subi_i32</name><argument_list pos:start="1419:41" pos:end="1419:63">(<argument pos:start="1419:42" pos:end="1419:44"><expr pos:start="1419:42" pos:end="1419:44"><name pos:start="1419:42" pos:end="1419:44">tmp</name></expr></argument>, <argument pos:start="1419:47" pos:end="1419:49"><expr pos:start="1419:47" pos:end="1419:49"><name pos:start="1419:47" pos:end="1419:49">tmp</name></expr></argument>, <argument pos:start="1419:52" pos:end="1419:62"><expr pos:start="1419:52" pos:end="1419:62"><name pos:start="1419:52" pos:end="1419:55">insn</name> <operator pos:start="1419:57" pos:end="1419:57">&amp;</operator> <literal type="number" pos:start="1419:59" pos:end="1419:62">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1421:25" pos:end="1421:53"><expr pos:start="1421:25" pos:end="1421:52"><call pos:start="1421:25" pos:end="1421:52"><name pos:start="1421:25" pos:end="1421:44">gen_exception_return</name><argument_list pos:start="1421:45" pos:end="1421:52">(<argument pos:start="1421:46" pos:end="1421:46"><expr pos:start="1421:46" pos:end="1421:46"><name pos:start="1421:46" pos:end="1421:46">s</name></expr></argument>, <argument pos:start="1421:49" pos:end="1421:51"><expr pos:start="1421:49" pos:end="1421:51"><name pos:start="1421:49" pos:end="1421:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1423:25" pos:end="1423:30">break;</break>

                    <case pos:start="1425:21" pos:end="1425:27">case <expr pos:start="1425:26" pos:end="1425:26"><literal type="number" pos:start="1425:26" pos:end="1425:26">6</literal></expr>:</case> <comment type="block" pos:start="1425:29" pos:end="1425:44">/* mrs cpsr.  */</comment>

                        <expr_stmt pos:start="1427:25" pos:end="1427:40"><expr pos:start="1427:25" pos:end="1427:39"><name pos:start="1427:25" pos:end="1427:27">tmp</name> <operator pos:start="1427:29" pos:end="1427:29">=</operator> <call pos:start="1427:31" pos:end="1427:39"><name pos:start="1427:31" pos:end="1427:37">new_tmp</name><argument_list pos:start="1427:38" pos:end="1427:39">()</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1429:25" pos:end="1441:25"><if pos:start="1429:25" pos:end="1437:25">if <condition pos:start="1429:28" pos:end="1429:38">(<expr pos:start="1429:29" pos:end="1429:37"><call pos:start="1429:29" pos:end="1429:37"><name pos:start="1429:29" pos:end="1429:32">IS_M</name><argument_list pos:start="1429:33" pos:end="1429:37">(<argument pos:start="1429:34" pos:end="1429:36"><expr pos:start="1429:34" pos:end="1429:36"><name pos:start="1429:34" pos:end="1429:36">env</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="1429:40" pos:end="1437:25">{<block_content pos:start="1431:29" pos:end="1435:52">

                            <expr_stmt pos:start="1431:29" pos:end="1431:62"><expr pos:start="1431:29" pos:end="1431:61"><name pos:start="1431:29" pos:end="1431:32">addr</name> <operator pos:start="1431:34" pos:end="1431:34">=</operator> <call pos:start="1431:36" pos:end="1431:61"><name pos:start="1431:36" pos:end="1431:48">tcg_const_i32</name><argument_list pos:start="1431:49" pos:end="1431:61">(<argument pos:start="1431:50" pos:end="1431:60"><expr pos:start="1431:50" pos:end="1431:60"><name pos:start="1431:50" pos:end="1431:53">insn</name> <operator pos:start="1431:55" pos:end="1431:55">&amp;</operator> <literal type="number" pos:start="1431:57" pos:end="1431:60">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1433:29" pos:end="1433:67"><expr pos:start="1433:29" pos:end="1433:66"><call pos:start="1433:29" pos:end="1433:66"><name pos:start="1433:29" pos:end="1433:46">gen_helper_v7m_mrs</name><argument_list pos:start="1433:47" pos:end="1433:66">(<argument pos:start="1433:48" pos:end="1433:50"><expr pos:start="1433:48" pos:end="1433:50"><name pos:start="1433:48" pos:end="1433:50">tmp</name></expr></argument>, <argument pos:start="1433:53" pos:end="1433:59"><expr pos:start="1433:53" pos:end="1433:59"><name pos:start="1433:53" pos:end="1433:59">cpu_env</name></expr></argument>, <argument pos:start="1433:62" pos:end="1433:65"><expr pos:start="1433:62" pos:end="1433:65"><name pos:start="1433:62" pos:end="1433:65">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1435:29" pos:end="1435:52"><expr pos:start="1435:29" pos:end="1435:51"><call pos:start="1435:29" pos:end="1435:51"><name pos:start="1435:29" pos:end="1435:45">tcg_temp_free_i32</name><argument_list pos:start="1435:46" pos:end="1435:51">(<argument pos:start="1435:47" pos:end="1435:50"><expr pos:start="1435:47" pos:end="1435:50"><name pos:start="1435:47" pos:end="1435:50">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1437:27" pos:end="1441:25">else <block pos:start="1437:32" pos:end="1441:25">{<block_content pos:start="1439:29" pos:end="1439:54">

                            <expr_stmt pos:start="1439:29" pos:end="1439:54"><expr pos:start="1439:29" pos:end="1439:53"><call pos:start="1439:29" pos:end="1439:53"><name pos:start="1439:29" pos:end="1439:48">gen_helper_cpsr_read</name><argument_list pos:start="1439:49" pos:end="1439:53">(<argument pos:start="1439:50" pos:end="1439:52"><expr pos:start="1439:50" pos:end="1439:52"><name pos:start="1439:50" pos:end="1439:52">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1443:25" pos:end="1443:46"><expr pos:start="1443:25" pos:end="1443:45"><call pos:start="1443:25" pos:end="1443:45"><name pos:start="1443:25" pos:end="1443:33">store_reg</name><argument_list pos:start="1443:34" pos:end="1443:45">(<argument pos:start="1443:35" pos:end="1443:35"><expr pos:start="1443:35" pos:end="1443:35"><name pos:start="1443:35" pos:end="1443:35">s</name></expr></argument>, <argument pos:start="1443:38" pos:end="1443:39"><expr pos:start="1443:38" pos:end="1443:39"><name pos:start="1443:38" pos:end="1443:39">rd</name></expr></argument>, <argument pos:start="1443:42" pos:end="1443:44"><expr pos:start="1443:42" pos:end="1443:44"><name pos:start="1443:42" pos:end="1443:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1445:25" pos:end="1445:30">break;</break>

                    <case pos:start="1447:21" pos:end="1447:27">case <expr pos:start="1447:26" pos:end="1447:26"><literal type="number" pos:start="1447:26" pos:end="1447:26">7</literal></expr>:</case> <comment type="block" pos:start="1447:29" pos:end="1447:44">/* mrs spsr.  */</comment>

                        <comment type="block" pos:start="1449:25" pos:end="1449:59">/* Not accessible in user mode.  */</comment>

                        <if_stmt pos:start="1451:25" pos:end="1453:44"><if pos:start="1451:25" pos:end="1453:44">if <condition pos:start="1451:28" pos:end="1451:52">(<expr pos:start="1451:29" pos:end="1451:51"><call pos:start="1451:29" pos:end="1451:38"><name pos:start="1451:29" pos:end="1451:35">IS_USER</name><argument_list pos:start="1451:36" pos:end="1451:38">(<argument pos:start="1451:37" pos:end="1451:37"><expr pos:start="1451:37" pos:end="1451:37"><name pos:start="1451:37" pos:end="1451:37">s</name></expr></argument>)</argument_list></call> <operator pos:start="1451:40" pos:end="1451:41">||</operator> <call pos:start="1451:43" pos:end="1451:51"><name pos:start="1451:43" pos:end="1451:46">IS_M</name><argument_list pos:start="1451:47" pos:end="1451:51">(<argument pos:start="1451:48" pos:end="1451:50"><expr pos:start="1451:48" pos:end="1451:50"><name pos:start="1451:48" pos:end="1451:50">env</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1453:29" pos:end="1453:44"><block_content pos:start="1453:29" pos:end="1453:44">

                            <goto pos:start="1453:29" pos:end="1453:44">goto <name pos:start="1453:34" pos:end="1453:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1455:25" pos:end="1455:51"><expr pos:start="1455:25" pos:end="1455:50"><name pos:start="1455:25" pos:end="1455:27">tmp</name> <operator pos:start="1455:29" pos:end="1455:29">=</operator> <call pos:start="1455:31" pos:end="1455:50"><name pos:start="1455:31" pos:end="1455:44">load_cpu_field</name><argument_list pos:start="1455:45" pos:end="1455:50">(<argument pos:start="1455:46" pos:end="1455:49"><expr pos:start="1455:46" pos:end="1455:49"><name pos:start="1455:46" pos:end="1455:49">spsr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1457:25" pos:end="1457:46"><expr pos:start="1457:25" pos:end="1457:45"><call pos:start="1457:25" pos:end="1457:45"><name pos:start="1457:25" pos:end="1457:33">store_reg</name><argument_list pos:start="1457:34" pos:end="1457:45">(<argument pos:start="1457:35" pos:end="1457:35"><expr pos:start="1457:35" pos:end="1457:35"><name pos:start="1457:35" pos:end="1457:35">s</name></expr></argument>, <argument pos:start="1457:38" pos:end="1457:39"><expr pos:start="1457:38" pos:end="1457:39"><name pos:start="1457:38" pos:end="1457:39">rd</name></expr></argument>, <argument pos:start="1457:42" pos:end="1457:44"><expr pos:start="1457:42" pos:end="1457:44"><name pos:start="1457:42" pos:end="1457:44">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1459:25" pos:end="1459:30">break;</break>

                    </block_content>}</block></switch>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1465:15" pos:end="1507:13">else <block pos:start="1465:20" pos:end="1507:13">{<block_content pos:start="1469:17" pos:end="1505:43">

                <comment type="block" pos:start="1467:17" pos:end="1467:42">/* Conditional branch.  */</comment>

                <expr_stmt pos:start="1469:17" pos:end="1469:40"><expr pos:start="1469:17" pos:end="1469:39"><name pos:start="1469:17" pos:end="1469:18">op</name> <operator pos:start="1469:20" pos:end="1469:20">=</operator> <operator pos:start="1469:22" pos:end="1469:22">(</operator><name pos:start="1469:23" pos:end="1469:26">insn</name> <operator pos:start="1469:28" pos:end="1469:29">&gt;&gt;</operator> <literal type="number" pos:start="1469:31" pos:end="1469:32">22</literal><operator pos:start="1469:33" pos:end="1469:33">)</operator> <operator pos:start="1469:35" pos:end="1469:35">&amp;</operator> <literal type="number" pos:start="1469:37" pos:end="1469:39">0xf</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1471:17" pos:end="1471:71">/* Generate a conditional jump to next instruction.  */</comment>

                <expr_stmt pos:start="1473:17" pos:end="1473:47"><expr pos:start="1473:17" pos:end="1473:46"><name pos:start="1473:17" pos:end="1473:28"><name pos:start="1473:17" pos:end="1473:17">s</name><operator pos:start="1473:18" pos:end="1473:19">-&gt;</operator><name pos:start="1473:20" pos:end="1473:28">condlabel</name></name> <operator pos:start="1473:30" pos:end="1473:30">=</operator> <call pos:start="1473:32" pos:end="1473:46"><name pos:start="1473:32" pos:end="1473:44">gen_new_label</name><argument_list pos:start="1473:45" pos:end="1473:46">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1475:17" pos:end="1475:50"><expr pos:start="1475:17" pos:end="1475:49"><call pos:start="1475:17" pos:end="1475:49"><name pos:start="1475:17" pos:end="1475:27">gen_test_cc</name><argument_list pos:start="1475:28" pos:end="1475:49">(<argument pos:start="1475:29" pos:end="1475:34"><expr pos:start="1475:29" pos:end="1475:34"><name pos:start="1475:29" pos:end="1475:30">op</name> <operator pos:start="1475:32" pos:end="1475:32">^</operator> <literal type="number" pos:start="1475:34" pos:end="1475:34">1</literal></expr></argument>, <argument pos:start="1475:37" pos:end="1475:48"><expr pos:start="1475:37" pos:end="1475:48"><name pos:start="1475:37" pos:end="1475:48"><name pos:start="1475:37" pos:end="1475:37">s</name><operator pos:start="1475:38" pos:end="1475:39">-&gt;</operator><name pos:start="1475:40" pos:end="1475:48">condlabel</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1477:17" pos:end="1477:31"><expr pos:start="1477:17" pos:end="1477:30"><name pos:start="1477:17" pos:end="1477:26"><name pos:start="1477:17" pos:end="1477:17">s</name><operator pos:start="1477:18" pos:end="1477:19">-&gt;</operator><name pos:start="1477:20" pos:end="1477:26">condjmp</name></name> <operator pos:start="1477:28" pos:end="1477:28">=</operator> <literal type="number" pos:start="1477:30" pos:end="1477:30">1</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="1481:17" pos:end="1481:47">/* offset[11:1] = insn[10:0] */</comment>

                <expr_stmt pos:start="1483:17" pos:end="1483:45"><expr pos:start="1483:17" pos:end="1483:44"><name pos:start="1483:17" pos:end="1483:22">offset</name> <operator pos:start="1483:24" pos:end="1483:24">=</operator> <operator pos:start="1483:26" pos:end="1483:26">(</operator><name pos:start="1483:27" pos:end="1483:30">insn</name> <operator pos:start="1483:32" pos:end="1483:32">&amp;</operator> <literal type="number" pos:start="1483:34" pos:end="1483:38">0x7ff</literal><operator pos:start="1483:39" pos:end="1483:39">)</operator> <operator pos:start="1483:41" pos:end="1483:42">&lt;&lt;</operator> <literal type="number" pos:start="1483:44" pos:end="1483:44">1</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1485:17" pos:end="1485:51">/* offset[17:12] = insn[21:16].  */</comment>

                <expr_stmt pos:start="1487:17" pos:end="1487:51"><expr pos:start="1487:17" pos:end="1487:50"><name pos:start="1487:17" pos:end="1487:22">offset</name> <operator pos:start="1487:24" pos:end="1487:25">|=</operator> <operator pos:start="1487:27" pos:end="1487:27">(</operator><name pos:start="1487:28" pos:end="1487:31">insn</name> <operator pos:start="1487:33" pos:end="1487:33">&amp;</operator> <literal type="number" pos:start="1487:35" pos:end="1487:44">0x003f0000</literal><operator pos:start="1487:45" pos:end="1487:45">)</operator> <operator pos:start="1487:47" pos:end="1487:48">&gt;&gt;</operator> <literal type="number" pos:start="1487:50" pos:end="1487:50">4</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1489:17" pos:end="1489:48">/* offset[31:20] = insn[26].  */</comment>

                <expr_stmt pos:start="1491:17" pos:end="1491:70"><expr pos:start="1491:17" pos:end="1491:69"><name pos:start="1491:17" pos:end="1491:22">offset</name> <operator pos:start="1491:24" pos:end="1491:25">|=</operator> <operator pos:start="1491:27" pos:end="1491:27">(</operator><operator pos:start="1491:28" pos:end="1491:28">(</operator><name pos:start="1491:29" pos:end="1491:35">int32_t</name><operator pos:start="1491:36" pos:end="1491:36">)</operator><operator pos:start="1491:37" pos:end="1491:37">(</operator><operator pos:start="1491:38" pos:end="1491:38">(</operator><name pos:start="1491:39" pos:end="1491:42">insn</name> <operator pos:start="1491:44" pos:end="1491:45">&lt;&lt;</operator> <literal type="number" pos:start="1491:47" pos:end="1491:47">5</literal><operator pos:start="1491:48" pos:end="1491:48">)</operator> <operator pos:start="1491:50" pos:end="1491:50">&amp;</operator> <literal type="number" pos:start="1491:52" pos:end="1491:61">0x80000000</literal><operator pos:start="1491:62" pos:end="1491:62">)</operator><operator pos:start="1491:63" pos:end="1491:63">)</operator> <operator pos:start="1491:65" pos:end="1491:66">&gt;&gt;</operator> <literal type="number" pos:start="1491:68" pos:end="1491:69">11</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1493:17" pos:end="1493:45">/* offset[18] = insn[13].  */</comment>

                <expr_stmt pos:start="1495:17" pos:end="1495:50"><expr pos:start="1495:17" pos:end="1495:49"><name pos:start="1495:17" pos:end="1495:22">offset</name> <operator pos:start="1495:24" pos:end="1495:25">|=</operator> <operator pos:start="1495:27" pos:end="1495:27">(</operator><name pos:start="1495:28" pos:end="1495:31">insn</name> <operator pos:start="1495:33" pos:end="1495:33">&amp;</operator> <operator pos:start="1495:35" pos:end="1495:35">(</operator><literal type="number" pos:start="1495:36" pos:end="1495:36">1</literal> <operator pos:start="1495:38" pos:end="1495:39">&lt;&lt;</operator> <literal type="number" pos:start="1495:41" pos:end="1495:42">13</literal><operator pos:start="1495:43" pos:end="1495:43">)</operator><operator pos:start="1495:44" pos:end="1495:44">)</operator> <operator pos:start="1495:46" pos:end="1495:47">&lt;&lt;</operator> <literal type="number" pos:start="1495:49" pos:end="1495:49">5</literal></expr>;</expr_stmt>

                <comment type="block" pos:start="1497:17" pos:end="1497:45">/* offset[19] = insn[11].  */</comment>

                <expr_stmt pos:start="1499:17" pos:end="1499:50"><expr pos:start="1499:17" pos:end="1499:49"><name pos:start="1499:17" pos:end="1499:22">offset</name> <operator pos:start="1499:24" pos:end="1499:25">|=</operator> <operator pos:start="1499:27" pos:end="1499:27">(</operator><name pos:start="1499:28" pos:end="1499:31">insn</name> <operator pos:start="1499:33" pos:end="1499:33">&amp;</operator> <operator pos:start="1499:35" pos:end="1499:35">(</operator><literal type="number" pos:start="1499:36" pos:end="1499:36">1</literal> <operator pos:start="1499:38" pos:end="1499:39">&lt;&lt;</operator> <literal type="number" pos:start="1499:41" pos:end="1499:42">11</literal><operator pos:start="1499:43" pos:end="1499:43">)</operator><operator pos:start="1499:44" pos:end="1499:44">)</operator> <operator pos:start="1499:46" pos:end="1499:47">&lt;&lt;</operator> <literal type="number" pos:start="1499:49" pos:end="1499:49">8</literal></expr>;</expr_stmt>



                <comment type="block" pos:start="1503:17" pos:end="1503:40">/* jump to the offset */</comment>

                <expr_stmt pos:start="1505:17" pos:end="1505:43"><expr pos:start="1505:17" pos:end="1505:42"><call pos:start="1505:17" pos:end="1505:42"><name pos:start="1505:17" pos:end="1505:23">gen_jmp</name><argument_list pos:start="1505:24" pos:end="1505:42">(<argument pos:start="1505:25" pos:end="1505:25"><expr pos:start="1505:25" pos:end="1505:25"><name pos:start="1505:25" pos:end="1505:25">s</name></expr></argument>, <argument pos:start="1505:28" pos:end="1505:41"><expr pos:start="1505:28" pos:end="1505:41"><name pos:start="1505:28" pos:end="1505:32"><name pos:start="1505:28" pos:end="1505:28">s</name><operator pos:start="1505:29" pos:end="1505:30">-&gt;</operator><name pos:start="1505:31" pos:end="1505:32">pc</name></name> <operator pos:start="1505:34" pos:end="1505:34">+</operator> <name pos:start="1505:36" pos:end="1505:41">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="1509:11" pos:end="1813:9">else <block pos:start="1509:16" pos:end="1813:9">{<block_content pos:start="1513:13" pos:end="1811:13">

            <comment type="block" pos:start="1511:13" pos:end="1511:45">/* Data processing immediate.  */</comment>

            <if_stmt pos:start="1513:13" pos:end="1811:13"><if pos:start="1513:13" pos:end="1717:13">if <condition pos:start="1513:16" pos:end="1513:33">(<expr pos:start="1513:17" pos:end="1513:32"><name pos:start="1513:17" pos:end="1513:20">insn</name> <operator pos:start="1513:22" pos:end="1513:22">&amp;</operator> <operator pos:start="1513:24" pos:end="1513:24">(</operator><literal type="number" pos:start="1513:25" pos:end="1513:25">1</literal> <operator pos:start="1513:27" pos:end="1513:28">&lt;&lt;</operator> <literal type="number" pos:start="1513:30" pos:end="1513:31">25</literal><operator pos:start="1513:32" pos:end="1513:32">)</operator></expr>)</condition> <block pos:start="1513:35" pos:end="1717:13">{<block_content pos:start="1515:17" pos:end="1715:17">

                <if_stmt pos:start="1515:17" pos:end="1715:17"><if pos:start="1515:17" pos:end="1645:17">if <condition pos:start="1515:20" pos:end="1515:37">(<expr pos:start="1515:21" pos:end="1515:36"><name pos:start="1515:21" pos:end="1515:24">insn</name> <operator pos:start="1515:26" pos:end="1515:26">&amp;</operator> <operator pos:start="1515:28" pos:end="1515:28">(</operator><literal type="number" pos:start="1515:29" pos:end="1515:29">1</literal> <operator pos:start="1515:31" pos:end="1515:32">&lt;&lt;</operator> <literal type="number" pos:start="1515:34" pos:end="1515:35">24</literal><operator pos:start="1515:36" pos:end="1515:36">)</operator></expr>)</condition> <block pos:start="1515:39" pos:end="1645:17">{<block_content pos:start="1517:21" pos:end="1643:42">

                    <if_stmt pos:start="1517:21" pos:end="1519:40"><if pos:start="1517:21" pos:end="1519:40">if <condition pos:start="1517:24" pos:end="1517:41">(<expr pos:start="1517:25" pos:end="1517:40"><name pos:start="1517:25" pos:end="1517:28">insn</name> <operator pos:start="1517:30" pos:end="1517:30">&amp;</operator> <operator pos:start="1517:32" pos:end="1517:32">(</operator><literal type="number" pos:start="1517:33" pos:end="1517:33">1</literal> <operator pos:start="1517:35" pos:end="1517:36">&lt;&lt;</operator> <literal type="number" pos:start="1517:38" pos:end="1517:39">20</literal><operator pos:start="1517:40" pos:end="1517:40">)</operator></expr>)</condition><block type="pseudo" pos:start="1519:25" pos:end="1519:40"><block_content pos:start="1519:25" pos:end="1519:40">

                        <goto pos:start="1519:25" pos:end="1519:40">goto <name pos:start="1519:30" pos:end="1519:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <comment type="block" pos:start="1521:21" pos:end="1521:45">/* Bitfield/Saturate.  */</comment>

                    <expr_stmt pos:start="1523:21" pos:end="1523:42"><expr pos:start="1523:21" pos:end="1523:41"><name pos:start="1523:21" pos:end="1523:22">op</name> <operator pos:start="1523:24" pos:end="1523:24">=</operator> <operator pos:start="1523:26" pos:end="1523:26">(</operator><name pos:start="1523:27" pos:end="1523:30">insn</name> <operator pos:start="1523:32" pos:end="1523:33">&gt;&gt;</operator> <literal type="number" pos:start="1523:35" pos:end="1523:36">21</literal><operator pos:start="1523:37" pos:end="1523:37">)</operator> <operator pos:start="1523:39" pos:end="1523:39">&amp;</operator> <literal type="number" pos:start="1523:41" pos:end="1523:41">7</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1525:21" pos:end="1525:38"><expr pos:start="1525:21" pos:end="1525:37"><name pos:start="1525:21" pos:end="1525:23">imm</name> <operator pos:start="1525:25" pos:end="1525:25">=</operator> <name pos:start="1525:27" pos:end="1525:30">insn</name> <operator pos:start="1525:32" pos:end="1525:32">&amp;</operator> <literal type="number" pos:start="1525:34" pos:end="1525:37">0x1f</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1527:21" pos:end="1527:70"><expr pos:start="1527:21" pos:end="1527:69"><name pos:start="1527:21" pos:end="1527:25">shift</name> <operator pos:start="1527:27" pos:end="1527:27">=</operator> <operator pos:start="1527:29" pos:end="1527:29">(</operator><operator pos:start="1527:30" pos:end="1527:30">(</operator><name pos:start="1527:31" pos:end="1527:34">insn</name> <operator pos:start="1527:36" pos:end="1527:37">&gt;&gt;</operator> <literal type="number" pos:start="1527:39" pos:end="1527:39">6</literal><operator pos:start="1527:40" pos:end="1527:40">)</operator> <operator pos:start="1527:42" pos:end="1527:42">&amp;</operator> <literal type="number" pos:start="1527:44" pos:end="1527:44">3</literal><operator pos:start="1527:45" pos:end="1527:45">)</operator> <operator pos:start="1527:47" pos:end="1527:47">|</operator> <operator pos:start="1527:49" pos:end="1527:49">(</operator><operator pos:start="1527:50" pos:end="1527:50">(</operator><name pos:start="1527:51" pos:end="1527:54">insn</name> <operator pos:start="1527:56" pos:end="1527:57">&gt;&gt;</operator> <literal type="number" pos:start="1527:59" pos:end="1527:60">10</literal><operator pos:start="1527:61" pos:end="1527:61">)</operator> <operator pos:start="1527:63" pos:end="1527:63">&amp;</operator> <literal type="number" pos:start="1527:65" pos:end="1527:68">0x1c</literal><operator pos:start="1527:69" pos:end="1527:69">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="1529:21" pos:end="1539:21"><if pos:start="1529:21" pos:end="1535:21">if <condition pos:start="1529:24" pos:end="1529:33">(<expr pos:start="1529:25" pos:end="1529:32"><name pos:start="1529:25" pos:end="1529:26">rn</name> <operator pos:start="1529:28" pos:end="1529:29">==</operator> <literal type="number" pos:start="1529:31" pos:end="1529:32">15</literal></expr>)</condition> <block pos:start="1529:35" pos:end="1535:21">{<block_content pos:start="1531:25" pos:end="1533:49">

                        <expr_stmt pos:start="1531:25" pos:end="1531:40"><expr pos:start="1531:25" pos:end="1531:39"><name pos:start="1531:25" pos:end="1531:27">tmp</name> <operator pos:start="1531:29" pos:end="1531:29">=</operator> <call pos:start="1531:31" pos:end="1531:39"><name pos:start="1531:31" pos:end="1531:37">new_tmp</name><argument_list pos:start="1531:38" pos:end="1531:39">()</argument_list></call></expr>;</expr_stmt>

                        <expr_stmt pos:start="1533:25" pos:end="1533:49"><expr pos:start="1533:25" pos:end="1533:48"><call pos:start="1533:25" pos:end="1533:48"><name pos:start="1533:25" pos:end="1533:40">tcg_gen_movi_i32</name><argument_list pos:start="1533:41" pos:end="1533:48">(<argument pos:start="1533:42" pos:end="1533:44"><expr pos:start="1533:42" pos:end="1533:44"><name pos:start="1533:42" pos:end="1533:44">tmp</name></expr></argument>, <argument pos:start="1533:47" pos:end="1533:47"><expr pos:start="1533:47" pos:end="1533:47"><literal type="number" pos:start="1533:47" pos:end="1533:47">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></if> <else pos:start="1535:23" pos:end="1539:21">else <block pos:start="1535:28" pos:end="1539:21">{<block_content pos:start="1537:25" pos:end="1537:46">

                        <expr_stmt pos:start="1537:25" pos:end="1537:46"><expr pos:start="1537:25" pos:end="1537:45"><name pos:start="1537:25" pos:end="1537:27">tmp</name> <operator pos:start="1537:29" pos:end="1537:29">=</operator> <call pos:start="1537:31" pos:end="1537:45"><name pos:start="1537:31" pos:end="1537:38">load_reg</name><argument_list pos:start="1537:39" pos:end="1537:45">(<argument pos:start="1537:40" pos:end="1537:40"><expr pos:start="1537:40" pos:end="1537:40"><name pos:start="1537:40" pos:end="1537:40">s</name></expr></argument>, <argument pos:start="1537:43" pos:end="1537:44"><expr pos:start="1537:43" pos:end="1537:44"><name pos:start="1537:43" pos:end="1537:44">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    </block_content>}</block></else></if_stmt>

                    <switch pos:start="1541:21" pos:end="1641:21">switch <condition pos:start="1541:28" pos:end="1541:31">(<expr pos:start="1541:29" pos:end="1541:30"><name pos:start="1541:29" pos:end="1541:30">op</name></expr>)</condition> <block pos:start="1541:33" pos:end="1641:21">{<block_content pos:start="1543:21" pos:end="1639:30">

                    <case pos:start="1543:21" pos:end="1543:27">case <expr pos:start="1543:26" pos:end="1543:26"><literal type="number" pos:start="1543:26" pos:end="1543:26">2</literal></expr>:</case> <comment type="block" pos:start="1543:29" pos:end="1543:59">/* Signed bitfield extract.  */</comment>

                        <expr_stmt pos:start="1545:25" pos:end="1545:30"><expr pos:start="1545:25" pos:end="1545:29"><name pos:start="1545:25" pos:end="1545:27">imm</name><operator pos:start="1545:28" pos:end="1545:29">++</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="1547:25" pos:end="1549:44"><if pos:start="1547:25" pos:end="1549:44">if <condition pos:start="1547:28" pos:end="1547:45">(<expr pos:start="1547:29" pos:end="1547:44"><name pos:start="1547:29" pos:end="1547:33">shift</name> <operator pos:start="1547:35" pos:end="1547:35">+</operator> <name pos:start="1547:37" pos:end="1547:39">imm</name> <operator pos:start="1547:41" pos:end="1547:41">&gt;</operator> <literal type="number" pos:start="1547:43" pos:end="1547:44">32</literal></expr>)</condition><block type="pseudo" pos:start="1549:29" pos:end="1549:44"><block_content pos:start="1549:29" pos:end="1549:44">

                            <goto pos:start="1549:29" pos:end="1549:44">goto <name pos:start="1549:34" pos:end="1549:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="1551:25" pos:end="1553:54"><if pos:start="1551:25" pos:end="1553:54">if <condition pos:start="1551:28" pos:end="1551:37">(<expr pos:start="1551:29" pos:end="1551:36"><name pos:start="1551:29" pos:end="1551:31">imm</name> <operator pos:start="1551:33" pos:end="1551:33">&lt;</operator> <literal type="number" pos:start="1551:35" pos:end="1551:36">32</literal></expr>)</condition><block type="pseudo" pos:start="1553:29" pos:end="1553:54"><block_content pos:start="1553:29" pos:end="1553:54">

                            <expr_stmt pos:start="1553:29" pos:end="1553:54"><expr pos:start="1553:29" pos:end="1553:53"><call pos:start="1553:29" pos:end="1553:53"><name pos:start="1553:29" pos:end="1553:36">gen_sbfx</name><argument_list pos:start="1553:37" pos:end="1553:53">(<argument pos:start="1553:38" pos:end="1553:40"><expr pos:start="1553:38" pos:end="1553:40"><name pos:start="1553:38" pos:end="1553:40">tmp</name></expr></argument>, <argument pos:start="1553:43" pos:end="1553:47"><expr pos:start="1553:43" pos:end="1553:47"><name pos:start="1553:43" pos:end="1553:47">shift</name></expr></argument>, <argument pos:start="1553:50" pos:end="1553:52"><expr pos:start="1553:50" pos:end="1553:52"><name pos:start="1553:50" pos:end="1553:52">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1555:25" pos:end="1555:30">break;</break>

                    <case pos:start="1557:21" pos:end="1557:27">case <expr pos:start="1557:26" pos:end="1557:26"><literal type="number" pos:start="1557:26" pos:end="1557:26">6</literal></expr>:</case> <comment type="block" pos:start="1557:29" pos:end="1557:61">/* Unsigned bitfield extract.  */</comment>

                        <expr_stmt pos:start="1559:25" pos:end="1559:30"><expr pos:start="1559:25" pos:end="1559:29"><name pos:start="1559:25" pos:end="1559:27">imm</name><operator pos:start="1559:28" pos:end="1559:29">++</operator></expr>;</expr_stmt>

                        <if_stmt pos:start="1561:25" pos:end="1563:44"><if pos:start="1561:25" pos:end="1563:44">if <condition pos:start="1561:28" pos:end="1561:45">(<expr pos:start="1561:29" pos:end="1561:44"><name pos:start="1561:29" pos:end="1561:33">shift</name> <operator pos:start="1561:35" pos:end="1561:35">+</operator> <name pos:start="1561:37" pos:end="1561:39">imm</name> <operator pos:start="1561:41" pos:end="1561:41">&gt;</operator> <literal type="number" pos:start="1561:43" pos:end="1561:44">32</literal></expr>)</condition><block type="pseudo" pos:start="1563:29" pos:end="1563:44"><block_content pos:start="1563:29" pos:end="1563:44">

                            <goto pos:start="1563:29" pos:end="1563:44">goto <name pos:start="1563:34" pos:end="1563:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <if_stmt pos:start="1565:25" pos:end="1567:66"><if pos:start="1565:25" pos:end="1567:66">if <condition pos:start="1565:28" pos:end="1565:37">(<expr pos:start="1565:29" pos:end="1565:36"><name pos:start="1565:29" pos:end="1565:31">imm</name> <operator pos:start="1565:33" pos:end="1565:33">&lt;</operator> <literal type="number" pos:start="1565:35" pos:end="1565:36">32</literal></expr>)</condition><block type="pseudo" pos:start="1567:29" pos:end="1567:66"><block_content pos:start="1567:29" pos:end="1567:66">

                            <expr_stmt pos:start="1567:29" pos:end="1567:66"><expr pos:start="1567:29" pos:end="1567:65"><call pos:start="1567:29" pos:end="1567:65"><name pos:start="1567:29" pos:end="1567:36">gen_ubfx</name><argument_list pos:start="1567:37" pos:end="1567:65">(<argument pos:start="1567:38" pos:end="1567:40"><expr pos:start="1567:38" pos:end="1567:40"><name pos:start="1567:38" pos:end="1567:40">tmp</name></expr></argument>, <argument pos:start="1567:43" pos:end="1567:47"><expr pos:start="1567:43" pos:end="1567:47"><name pos:start="1567:43" pos:end="1567:47">shift</name></expr></argument>, <argument pos:start="1567:50" pos:end="1567:64"><expr pos:start="1567:50" pos:end="1567:64"><operator pos:start="1567:50" pos:end="1567:50">(</operator><literal type="number" pos:start="1567:51" pos:end="1567:52">1u</literal> <operator pos:start="1567:54" pos:end="1567:55">&lt;&lt;</operator> <name pos:start="1567:57" pos:end="1567:59">imm</name><operator pos:start="1567:60" pos:end="1567:60">)</operator> <operator pos:start="1567:62" pos:end="1567:62">-</operator> <literal type="number" pos:start="1567:64" pos:end="1567:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                        <break pos:start="1569:25" pos:end="1569:30">break;</break>

                    <case pos:start="1571:21" pos:end="1571:27">case <expr pos:start="1571:26" pos:end="1571:26"><literal type="number" pos:start="1571:26" pos:end="1571:26">3</literal></expr>:</case> <comment type="block" pos:start="1571:29" pos:end="1571:57">/* Bitfield insert/clear.  */</comment>

                        <if_stmt pos:start="1573:25" pos:end="1575:44"><if pos:start="1573:25" pos:end="1575:44">if <condition pos:start="1573:28" pos:end="1573:40">(<expr pos:start="1573:29" pos:end="1573:39"><name pos:start="1573:29" pos:end="1573:31">imm</name> <operator pos:start="1573:33" pos:end="1573:33">&lt;</operator> <name pos:start="1573:35" pos:end="1573:39">shift</name></expr>)</condition><block type="pseudo" pos:start="1575:29" pos:end="1575:44"><block_content pos:start="1575:29" pos:end="1575:44">

                            <goto pos:start="1575:29" pos:end="1575:44">goto <name pos:start="1575:34" pos:end="1575:43">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                        <expr_stmt pos:start="1577:25" pos:end="1577:46"><expr pos:start="1577:25" pos:end="1577:45"><name pos:start="1577:25" pos:end="1577:27">imm</name> <operator pos:start="1577:29" pos:end="1577:29">=</operator> <name pos:start="1577:31" pos:end="1577:33">imm</name> <operator pos:start="1577:35" pos:end="1577:35">+</operator> <literal type="number" pos:start="1577:37" pos:end="1577:39">1</literal> <operator pos:start="1577:39" pos:end="1577:39">-</operator> <name pos:start="1577:41" pos:end="1577:45">shift</name></expr>;</expr_stmt>

                        <if_stmt pos:start="1579:25" pos:end="1587:25"><if pos:start="1579:25" pos:end="1587:25">if <condition pos:start="1579:28" pos:end="1579:38">(<expr pos:start="1579:29" pos:end="1579:37"><name pos:start="1579:29" pos:end="1579:31">imm</name> <operator pos:start="1579:33" pos:end="1579:34">!=</operator> <literal type="number" pos:start="1579:36" pos:end="1579:37">32</literal></expr>)</condition> <block pos:start="1579:40" pos:end="1587:25">{<block_content pos:start="1581:29" pos:end="1585:43">

                            <expr_stmt pos:start="1581:29" pos:end="1581:51"><expr pos:start="1581:29" pos:end="1581:50"><name pos:start="1581:29" pos:end="1581:32">tmp2</name> <operator pos:start="1581:34" pos:end="1581:34">=</operator> <call pos:start="1581:36" pos:end="1581:50"><name pos:start="1581:36" pos:end="1581:43">load_reg</name><argument_list pos:start="1581:44" pos:end="1581:50">(<argument pos:start="1581:45" pos:end="1581:45"><expr pos:start="1581:45" pos:end="1581:45"><name pos:start="1581:45" pos:end="1581:45">s</name></expr></argument>, <argument pos:start="1581:48" pos:end="1581:49"><expr pos:start="1581:48" pos:end="1581:49"><name pos:start="1581:48" pos:end="1581:49">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1583:29" pos:end="1583:76"><expr pos:start="1583:29" pos:end="1583:75"><call pos:start="1583:29" pos:end="1583:75"><name pos:start="1583:29" pos:end="1583:35">gen_bfi</name><argument_list pos:start="1583:36" pos:end="1583:75">(<argument pos:start="1583:37" pos:end="1583:39"><expr pos:start="1583:37" pos:end="1583:39"><name pos:start="1583:37" pos:end="1583:39">tmp</name></expr></argument>, <argument pos:start="1583:42" pos:end="1583:45"><expr pos:start="1583:42" pos:end="1583:45"><name pos:start="1583:42" pos:end="1583:45">tmp2</name></expr></argument>, <argument pos:start="1583:48" pos:end="1583:50"><expr pos:start="1583:48" pos:end="1583:50"><name pos:start="1583:48" pos:end="1583:50">tmp</name></expr></argument>, <argument pos:start="1583:53" pos:end="1583:57"><expr pos:start="1583:53" pos:end="1583:57"><name pos:start="1583:53" pos:end="1583:57">shift</name></expr></argument>, <argument pos:start="1583:60" pos:end="1583:74"><expr pos:start="1583:60" pos:end="1583:74"><operator pos:start="1583:60" pos:end="1583:60">(</operator><literal type="number" pos:start="1583:61" pos:end="1583:62">1u</literal> <operator pos:start="1583:64" pos:end="1583:65">&lt;&lt;</operator> <name pos:start="1583:67" pos:end="1583:69">imm</name><operator pos:start="1583:70" pos:end="1583:70">)</operator> <operator pos:start="1583:72" pos:end="1583:72">-</operator> <literal type="number" pos:start="1583:74" pos:end="1583:74">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1585:29" pos:end="1585:43"><expr pos:start="1585:29" pos:end="1585:42"><call pos:start="1585:29" pos:end="1585:42"><name pos:start="1585:29" pos:end="1585:36">dead_tmp</name><argument_list pos:start="1585:37" pos:end="1585:42">(<argument pos:start="1585:38" pos:end="1585:41"><expr pos:start="1585:38" pos:end="1585:41"><name pos:start="1585:38" pos:end="1585:41">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if></if_stmt>

                        <break pos:start="1589:25" pos:end="1589:30">break;</break>

                    <case pos:start="1591:21" pos:end="1591:27">case <expr pos:start="1591:26" pos:end="1591:26"><literal type="number" pos:start="1591:26" pos:end="1591:26">7</literal></expr>:</case>

                        <goto pos:start="1593:25" pos:end="1593:40">goto <name pos:start="1593:30" pos:end="1593:39">illegal_op</name>;</goto>

                    <default pos:start="1595:21" pos:end="1595:28">default:</default> <comment type="block" pos:start="1595:30" pos:end="1595:45">/* Saturate.  */</comment>

                        <if_stmt pos:start="1597:25" pos:end="1607:25"><if pos:start="1597:25" pos:end="1607:25">if <condition pos:start="1597:28" pos:end="1597:34">(<expr pos:start="1597:29" pos:end="1597:33"><name pos:start="1597:29" pos:end="1597:33">shift</name></expr>)</condition> <block pos:start="1597:36" pos:end="1607:25">{<block_content pos:start="1599:29" pos:end="1605:66">

                            <if_stmt pos:start="1599:29" pos:end="1605:66"><if pos:start="1599:29" pos:end="1601:66">if <condition pos:start="1599:32" pos:end="1599:39">(<expr pos:start="1599:33" pos:end="1599:38"><name pos:start="1599:33" pos:end="1599:34">op</name> <operator pos:start="1599:36" pos:end="1599:36">&amp;</operator> <literal type="number" pos:start="1599:38" pos:end="1599:38">1</literal></expr>)</condition><block type="pseudo" pos:start="1601:33" pos:end="1601:66"><block_content pos:start="1601:33" pos:end="1601:66">

                                <expr_stmt pos:start="1601:33" pos:end="1601:66"><expr pos:start="1601:33" pos:end="1601:65"><call pos:start="1601:33" pos:end="1601:65"><name pos:start="1601:33" pos:end="1601:48">tcg_gen_sari_i32</name><argument_list pos:start="1601:49" pos:end="1601:65">(<argument pos:start="1601:50" pos:end="1601:52"><expr pos:start="1601:50" pos:end="1601:52"><name pos:start="1601:50" pos:end="1601:52">tmp</name></expr></argument>, <argument pos:start="1601:55" pos:end="1601:57"><expr pos:start="1601:55" pos:end="1601:57"><name pos:start="1601:55" pos:end="1601:57">tmp</name></expr></argument>, <argument pos:start="1601:60" pos:end="1601:64"><expr pos:start="1601:60" pos:end="1601:64"><name pos:start="1601:60" pos:end="1601:64">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1603:29" pos:end="1605:66">else<block type="pseudo" pos:start="1605:33" pos:end="1605:66"><block_content pos:start="1605:33" pos:end="1605:66">

                                <expr_stmt pos:start="1605:33" pos:end="1605:66"><expr pos:start="1605:33" pos:end="1605:65"><call pos:start="1605:33" pos:end="1605:65"><name pos:start="1605:33" pos:end="1605:48">tcg_gen_shli_i32</name><argument_list pos:start="1605:49" pos:end="1605:65">(<argument pos:start="1605:50" pos:end="1605:52"><expr pos:start="1605:50" pos:end="1605:52"><name pos:start="1605:50" pos:end="1605:52">tmp</name></expr></argument>, <argument pos:start="1605:55" pos:end="1605:57"><expr pos:start="1605:55" pos:end="1605:57"><name pos:start="1605:55" pos:end="1605:57">tmp</name></expr></argument>, <argument pos:start="1605:60" pos:end="1605:64"><expr pos:start="1605:60" pos:end="1605:64"><name pos:start="1605:60" pos:end="1605:64">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if></if_stmt>

                        <expr_stmt pos:start="1609:25" pos:end="1609:50"><expr pos:start="1609:25" pos:end="1609:49"><name pos:start="1609:25" pos:end="1609:28">tmp2</name> <operator pos:start="1609:30" pos:end="1609:30">=</operator> <call pos:start="1609:32" pos:end="1609:49"><name pos:start="1609:32" pos:end="1609:44">tcg_const_i32</name><argument_list pos:start="1609:45" pos:end="1609:49">(<argument pos:start="1609:46" pos:end="1609:48"><expr pos:start="1609:46" pos:end="1609:48"><name pos:start="1609:46" pos:end="1609:48">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <if_stmt pos:start="1611:25" pos:end="1635:25"><if pos:start="1611:25" pos:end="1623:25">if <condition pos:start="1611:28" pos:end="1611:35">(<expr pos:start="1611:29" pos:end="1611:34"><name pos:start="1611:29" pos:end="1611:30">op</name> <operator pos:start="1611:32" pos:end="1611:32">&amp;</operator> <literal type="number" pos:start="1611:34" pos:end="1611:34">4</literal></expr>)</condition> <block pos:start="1611:37" pos:end="1623:25">{<block_content pos:start="1615:29" pos:end="1621:64">

                            <comment type="block" pos:start="1613:29" pos:end="1613:44">/* Unsigned.  */</comment>

                            <if_stmt pos:start="1615:29" pos:end="1621:64"><if pos:start="1615:29" pos:end="1617:66">if <condition pos:start="1615:32" pos:end="1615:55">(<expr pos:start="1615:33" pos:end="1615:54"><operator pos:start="1615:33" pos:end="1615:33">(</operator><name pos:start="1615:34" pos:end="1615:35">op</name> <operator pos:start="1615:37" pos:end="1615:37">&amp;</operator> <literal type="number" pos:start="1615:39" pos:end="1615:39">1</literal><operator pos:start="1615:40" pos:end="1615:40">)</operator> <operator pos:start="1615:42" pos:end="1615:43">&amp;&amp;</operator> <name pos:start="1615:45" pos:end="1615:49">shift</name> <operator pos:start="1615:51" pos:end="1615:52">==</operator> <literal type="number" pos:start="1615:54" pos:end="1615:54">0</literal></expr>)</condition><block type="pseudo" pos:start="1617:33" pos:end="1617:66"><block_content pos:start="1617:33" pos:end="1617:66">

                                <expr_stmt pos:start="1617:33" pos:end="1617:66"><expr pos:start="1617:33" pos:end="1617:65"><call pos:start="1617:33" pos:end="1617:65"><name pos:start="1617:33" pos:end="1617:49">gen_helper_usat16</name><argument_list pos:start="1617:50" pos:end="1617:65">(<argument pos:start="1617:51" pos:end="1617:53"><expr pos:start="1617:51" pos:end="1617:53"><name pos:start="1617:51" pos:end="1617:53">tmp</name></expr></argument>, <argument pos:start="1617:56" pos:end="1617:58"><expr pos:start="1617:56" pos:end="1617:58"><name pos:start="1617:56" pos:end="1617:58">tmp</name></expr></argument>, <argument pos:start="1617:61" pos:end="1617:64"><expr pos:start="1617:61" pos:end="1617:64"><name pos:start="1617:61" pos:end="1617:64">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1619:29" pos:end="1621:64">else<block type="pseudo" pos:start="1621:33" pos:end="1621:64"><block_content pos:start="1621:33" pos:end="1621:64">

                                <expr_stmt pos:start="1621:33" pos:end="1621:64"><expr pos:start="1621:33" pos:end="1621:63"><call pos:start="1621:33" pos:end="1621:63"><name pos:start="1621:33" pos:end="1621:47">gen_helper_usat</name><argument_list pos:start="1621:48" pos:end="1621:63">(<argument pos:start="1621:49" pos:end="1621:51"><expr pos:start="1621:49" pos:end="1621:51"><name pos:start="1621:49" pos:end="1621:51">tmp</name></expr></argument>, <argument pos:start="1621:54" pos:end="1621:56"><expr pos:start="1621:54" pos:end="1621:56"><name pos:start="1621:54" pos:end="1621:56">tmp</name></expr></argument>, <argument pos:start="1621:59" pos:end="1621:62"><expr pos:start="1621:59" pos:end="1621:62"><name pos:start="1621:59" pos:end="1621:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></if> <else pos:start="1623:27" pos:end="1635:25">else <block pos:start="1623:32" pos:end="1635:25">{<block_content pos:start="1627:29" pos:end="1633:64">

                            <comment type="block" pos:start="1625:29" pos:end="1625:42">/* Signed.  */</comment>

                            <if_stmt pos:start="1627:29" pos:end="1633:64"><if pos:start="1627:29" pos:end="1629:66">if <condition pos:start="1627:32" pos:end="1627:55">(<expr pos:start="1627:33" pos:end="1627:54"><operator pos:start="1627:33" pos:end="1627:33">(</operator><name pos:start="1627:34" pos:end="1627:35">op</name> <operator pos:start="1627:37" pos:end="1627:37">&amp;</operator> <literal type="number" pos:start="1627:39" pos:end="1627:39">1</literal><operator pos:start="1627:40" pos:end="1627:40">)</operator> <operator pos:start="1627:42" pos:end="1627:43">&amp;&amp;</operator> <name pos:start="1627:45" pos:end="1627:49">shift</name> <operator pos:start="1627:51" pos:end="1627:52">==</operator> <literal type="number" pos:start="1627:54" pos:end="1627:54">0</literal></expr>)</condition><block type="pseudo" pos:start="1629:33" pos:end="1629:66"><block_content pos:start="1629:33" pos:end="1629:66">

                                <expr_stmt pos:start="1629:33" pos:end="1629:66"><expr pos:start="1629:33" pos:end="1629:65"><call pos:start="1629:33" pos:end="1629:65"><name pos:start="1629:33" pos:end="1629:49">gen_helper_ssat16</name><argument_list pos:start="1629:50" pos:end="1629:65">(<argument pos:start="1629:51" pos:end="1629:53"><expr pos:start="1629:51" pos:end="1629:53"><name pos:start="1629:51" pos:end="1629:53">tmp</name></expr></argument>, <argument pos:start="1629:56" pos:end="1629:58"><expr pos:start="1629:56" pos:end="1629:58"><name pos:start="1629:56" pos:end="1629:58">tmp</name></expr></argument>, <argument pos:start="1629:61" pos:end="1629:64"><expr pos:start="1629:61" pos:end="1629:64"><name pos:start="1629:61" pos:end="1629:64">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1631:29" pos:end="1633:64">else<block type="pseudo" pos:start="1633:33" pos:end="1633:64"><block_content pos:start="1633:33" pos:end="1633:64">

                                <expr_stmt pos:start="1633:33" pos:end="1633:64"><expr pos:start="1633:33" pos:end="1633:63"><call pos:start="1633:33" pos:end="1633:63"><name pos:start="1633:33" pos:end="1633:47">gen_helper_ssat</name><argument_list pos:start="1633:48" pos:end="1633:63">(<argument pos:start="1633:49" pos:end="1633:51"><expr pos:start="1633:49" pos:end="1633:51"><name pos:start="1633:49" pos:end="1633:51">tmp</name></expr></argument>, <argument pos:start="1633:54" pos:end="1633:56"><expr pos:start="1633:54" pos:end="1633:56"><name pos:start="1633:54" pos:end="1633:56">tmp</name></expr></argument>, <argument pos:start="1633:59" pos:end="1633:62"><expr pos:start="1633:59" pos:end="1633:62"><name pos:start="1633:59" pos:end="1633:62">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                        <expr_stmt pos:start="1637:25" pos:end="1637:48"><expr pos:start="1637:25" pos:end="1637:47"><call pos:start="1637:25" pos:end="1637:47"><name pos:start="1637:25" pos:end="1637:41">tcg_temp_free_i32</name><argument_list pos:start="1637:42" pos:end="1637:47">(<argument pos:start="1637:43" pos:end="1637:46"><expr pos:start="1637:43" pos:end="1637:46"><name pos:start="1637:43" pos:end="1637:46">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        <break pos:start="1639:25" pos:end="1639:30">break;</break>

                    </block_content>}</block></switch>

                    <expr_stmt pos:start="1643:21" pos:end="1643:42"><expr pos:start="1643:21" pos:end="1643:41"><call pos:start="1643:21" pos:end="1643:41"><name pos:start="1643:21" pos:end="1643:29">store_reg</name><argument_list pos:start="1643:30" pos:end="1643:41">(<argument pos:start="1643:31" pos:end="1643:31"><expr pos:start="1643:31" pos:end="1643:31"><name pos:start="1643:31" pos:end="1643:31">s</name></expr></argument>, <argument pos:start="1643:34" pos:end="1643:35"><expr pos:start="1643:34" pos:end="1643:35"><name pos:start="1643:34" pos:end="1643:35">rd</name></expr></argument>, <argument pos:start="1643:38" pos:end="1643:40"><expr pos:start="1643:38" pos:end="1643:40"><name pos:start="1643:38" pos:end="1643:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1645:19" pos:end="1715:17">else <block pos:start="1645:24" pos:end="1715:17">{<block_content pos:start="1647:21" pos:end="1713:42">

                    <expr_stmt pos:start="1647:21" pos:end="1649:67"><expr pos:start="1647:21" pos:end="1649:66"><name pos:start="1647:21" pos:end="1647:23">imm</name> <operator pos:start="1647:25" pos:end="1647:25">=</operator> <operator pos:start="1647:27" pos:end="1647:27">(</operator><operator pos:start="1647:28" pos:end="1647:28">(</operator><name pos:start="1647:29" pos:end="1647:32">insn</name> <operator pos:start="1647:34" pos:end="1647:34">&amp;</operator> <literal type="number" pos:start="1647:36" pos:end="1647:45">0x04000000</literal><operator pos:start="1647:46" pos:end="1647:46">)</operator> <operator pos:start="1647:48" pos:end="1647:49">&gt;&gt;</operator> <literal type="number" pos:start="1647:51" pos:end="1647:52">15</literal><operator pos:start="1647:53" pos:end="1647:53">)</operator>

                          <operator pos:start="1649:27" pos:end="1649:27">|</operator> <operator pos:start="1649:29" pos:end="1649:29">(</operator><operator pos:start="1649:30" pos:end="1649:30">(</operator><name pos:start="1649:31" pos:end="1649:34">insn</name> <operator pos:start="1649:36" pos:end="1649:36">&amp;</operator> <literal type="number" pos:start="1649:38" pos:end="1649:43">0x7000</literal><operator pos:start="1649:44" pos:end="1649:44">)</operator> <operator pos:start="1649:46" pos:end="1649:47">&gt;&gt;</operator> <literal type="number" pos:start="1649:49" pos:end="1649:49">4</literal><operator pos:start="1649:50" pos:end="1649:50">)</operator> <operator pos:start="1649:52" pos:end="1649:52">|</operator> <operator pos:start="1649:54" pos:end="1649:54">(</operator><name pos:start="1649:55" pos:end="1649:58">insn</name> <operator pos:start="1649:60" pos:end="1649:60">&amp;</operator> <literal type="number" pos:start="1649:62" pos:end="1649:65">0xff</literal><operator pos:start="1649:66" pos:end="1649:66">)</operator></expr>;</expr_stmt>

                    <if_stmt pos:start="1651:21" pos:end="1711:21"><if pos:start="1651:21" pos:end="1677:21">if <condition pos:start="1651:24" pos:end="1651:41">(<expr pos:start="1651:25" pos:end="1651:40"><name pos:start="1651:25" pos:end="1651:28">insn</name> <operator pos:start="1651:30" pos:end="1651:30">&amp;</operator> <operator pos:start="1651:32" pos:end="1651:32">(</operator><literal type="number" pos:start="1651:33" pos:end="1651:33">1</literal> <operator pos:start="1651:35" pos:end="1651:36">&lt;&lt;</operator> <literal type="number" pos:start="1651:38" pos:end="1651:39">22</literal><operator pos:start="1651:40" pos:end="1651:40">)</operator></expr>)</condition> <block pos:start="1651:43" pos:end="1677:21">{<block_content pos:start="1655:25" pos:end="1675:25">

                        <comment type="block" pos:start="1653:25" pos:end="1653:48">/* 16-bit immediate.  */</comment>

                        <expr_stmt pos:start="1655:25" pos:end="1655:52"><expr pos:start="1655:25" pos:end="1655:51"><name pos:start="1655:25" pos:end="1655:27">imm</name> <operator pos:start="1655:29" pos:end="1655:30">|=</operator> <operator pos:start="1655:32" pos:end="1655:32">(</operator><name pos:start="1655:33" pos:end="1655:36">insn</name> <operator pos:start="1655:38" pos:end="1655:39">&gt;&gt;</operator> <literal type="number" pos:start="1655:41" pos:end="1655:41">4</literal><operator pos:start="1655:42" pos:end="1655:42">)</operator> <operator pos:start="1655:44" pos:end="1655:44">&amp;</operator> <literal type="number" pos:start="1655:46" pos:end="1655:51">0xf000</literal></expr>;</expr_stmt>

                        <if_stmt pos:start="1657:25" pos:end="1675:25"><if pos:start="1657:25" pos:end="1667:25">if <condition pos:start="1657:28" pos:end="1657:45">(<expr pos:start="1657:29" pos:end="1657:44"><name pos:start="1657:29" pos:end="1657:32">insn</name> <operator pos:start="1657:34" pos:end="1657:34">&amp;</operator> <operator pos:start="1657:36" pos:end="1657:36">(</operator><literal type="number" pos:start="1657:37" pos:end="1657:37">1</literal> <operator pos:start="1657:39" pos:end="1657:40">&lt;&lt;</operator> <literal type="number" pos:start="1657:42" pos:end="1657:43">23</literal><operator pos:start="1657:44" pos:end="1657:44">)</operator></expr>)</condition> <block pos:start="1657:47" pos:end="1667:25">{<block_content pos:start="1661:29" pos:end="1665:65">

                            <comment type="block" pos:start="1659:29" pos:end="1659:38">/* movt */</comment>

                            <expr_stmt pos:start="1661:29" pos:end="1661:50"><expr pos:start="1661:29" pos:end="1661:49"><name pos:start="1661:29" pos:end="1661:31">tmp</name> <operator pos:start="1661:33" pos:end="1661:33">=</operator> <call pos:start="1661:35" pos:end="1661:49"><name pos:start="1661:35" pos:end="1661:42">load_reg</name><argument_list pos:start="1661:43" pos:end="1661:49">(<argument pos:start="1661:44" pos:end="1661:44"><expr pos:start="1661:44" pos:end="1661:44"><name pos:start="1661:44" pos:end="1661:44">s</name></expr></argument>, <argument pos:start="1661:47" pos:end="1661:48"><expr pos:start="1661:47" pos:end="1661:48"><name pos:start="1661:47" pos:end="1661:48">rd</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1663:29" pos:end="1663:57"><expr pos:start="1663:29" pos:end="1663:56"><call pos:start="1663:29" pos:end="1663:56"><name pos:start="1663:29" pos:end="1663:46">tcg_gen_ext16u_i32</name><argument_list pos:start="1663:47" pos:end="1663:56">(<argument pos:start="1663:48" pos:end="1663:50"><expr pos:start="1663:48" pos:end="1663:50"><name pos:start="1663:48" pos:end="1663:50">tmp</name></expr></argument>, <argument pos:start="1663:53" pos:end="1663:55"><expr pos:start="1663:53" pos:end="1663:55"><name pos:start="1663:53" pos:end="1663:55">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1665:29" pos:end="1665:65"><expr pos:start="1665:29" pos:end="1665:64"><call pos:start="1665:29" pos:end="1665:64"><name pos:start="1665:29" pos:end="1665:43">tcg_gen_ori_i32</name><argument_list pos:start="1665:44" pos:end="1665:64">(<argument pos:start="1665:45" pos:end="1665:47"><expr pos:start="1665:45" pos:end="1665:47"><name pos:start="1665:45" pos:end="1665:47">tmp</name></expr></argument>, <argument pos:start="1665:50" pos:end="1665:52"><expr pos:start="1665:50" pos:end="1665:52"><name pos:start="1665:50" pos:end="1665:52">tmp</name></expr></argument>, <argument pos:start="1665:55" pos:end="1665:63"><expr pos:start="1665:55" pos:end="1665:63"><name pos:start="1665:55" pos:end="1665:57">imm</name> <operator pos:start="1665:59" pos:end="1665:60">&lt;&lt;</operator> <literal type="number" pos:start="1665:62" pos:end="1665:63">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1667:27" pos:end="1675:25">else <block pos:start="1667:32" pos:end="1675:25">{<block_content pos:start="1671:29" pos:end="1673:55">

                            <comment type="block" pos:start="1669:29" pos:end="1669:38">/* movw */</comment>

                            <expr_stmt pos:start="1671:29" pos:end="1671:44"><expr pos:start="1671:29" pos:end="1671:43"><name pos:start="1671:29" pos:end="1671:31">tmp</name> <operator pos:start="1671:33" pos:end="1671:33">=</operator> <call pos:start="1671:35" pos:end="1671:43"><name pos:start="1671:35" pos:end="1671:41">new_tmp</name><argument_list pos:start="1671:42" pos:end="1671:43">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1673:29" pos:end="1673:55"><expr pos:start="1673:29" pos:end="1673:54"><call pos:start="1673:29" pos:end="1673:54"><name pos:start="1673:29" pos:end="1673:44">tcg_gen_movi_i32</name><argument_list pos:start="1673:45" pos:end="1673:54">(<argument pos:start="1673:46" pos:end="1673:48"><expr pos:start="1673:46" pos:end="1673:48"><name pos:start="1673:46" pos:end="1673:48">tmp</name></expr></argument>, <argument pos:start="1673:51" pos:end="1673:53"><expr pos:start="1673:51" pos:end="1673:53"><name pos:start="1673:51" pos:end="1673:53">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></if> <else pos:start="1677:23" pos:end="1711:21">else <block pos:start="1677:28" pos:end="1711:21">{<block_content pos:start="1681:25" pos:end="1709:25">

                        <comment type="block" pos:start="1679:25" pos:end="1679:56">/* Add/sub 12-bit immediate.  */</comment>

                        <if_stmt pos:start="1681:25" pos:end="1709:25"><if pos:start="1681:25" pos:end="1697:25">if <condition pos:start="1681:28" pos:end="1681:37">(<expr pos:start="1681:29" pos:end="1681:36"><name pos:start="1681:29" pos:end="1681:30">rn</name> <operator pos:start="1681:32" pos:end="1681:33">==</operator> <literal type="number" pos:start="1681:35" pos:end="1681:36">15</literal></expr>)</condition> <block pos:start="1681:39" pos:end="1697:25">{<block_content pos:start="1683:29" pos:end="1695:58">

                            <expr_stmt pos:start="1683:29" pos:end="1683:58"><expr pos:start="1683:29" pos:end="1683:57"><name pos:start="1683:29" pos:end="1683:34">offset</name> <operator pos:start="1683:36" pos:end="1683:36">=</operator> <name pos:start="1683:38" pos:end="1683:42"><name pos:start="1683:38" pos:end="1683:38">s</name><operator pos:start="1683:39" pos:end="1683:40">-&gt;</operator><name pos:start="1683:41" pos:end="1683:42">pc</name></name> <operator pos:start="1683:44" pos:end="1683:44">&amp;</operator> <operator pos:start="1683:46" pos:end="1683:46">~</operator><operator pos:start="1683:47" pos:end="1683:47">(</operator><name pos:start="1683:48" pos:end="1683:55">uint32_t</name><operator pos:start="1683:56" pos:end="1683:56">)</operator><literal type="number" pos:start="1683:57" pos:end="1683:57">3</literal></expr>;</expr_stmt>

                            <if_stmt pos:start="1685:29" pos:end="1691:46"><if pos:start="1685:29" pos:end="1687:46">if <condition pos:start="1685:32" pos:end="1685:49">(<expr pos:start="1685:33" pos:end="1685:48"><name pos:start="1685:33" pos:end="1685:36">insn</name> <operator pos:start="1685:38" pos:end="1685:38">&amp;</operator> <operator pos:start="1685:40" pos:end="1685:40">(</operator><literal type="number" pos:start="1685:41" pos:end="1685:41">1</literal> <operator pos:start="1685:43" pos:end="1685:44">&lt;&lt;</operator> <literal type="number" pos:start="1685:46" pos:end="1685:47">23</literal><operator pos:start="1685:48" pos:end="1685:48">)</operator></expr>)</condition><block type="pseudo" pos:start="1687:33" pos:end="1687:46"><block_content pos:start="1687:33" pos:end="1687:46">

                                <expr_stmt pos:start="1687:33" pos:end="1687:46"><expr pos:start="1687:33" pos:end="1687:45"><name pos:start="1687:33" pos:end="1687:38">offset</name> <operator pos:start="1687:40" pos:end="1687:41">-=</operator> <name pos:start="1687:43" pos:end="1687:45">imm</name></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1689:29" pos:end="1691:46">else<block type="pseudo" pos:start="1691:33" pos:end="1691:46"><block_content pos:start="1691:33" pos:end="1691:46">

                                <expr_stmt pos:start="1691:33" pos:end="1691:46"><expr pos:start="1691:33" pos:end="1691:45"><name pos:start="1691:33" pos:end="1691:38">offset</name> <operator pos:start="1691:40" pos:end="1691:41">+=</operator> <name pos:start="1691:43" pos:end="1691:45">imm</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

                            <expr_stmt pos:start="1693:29" pos:end="1693:44"><expr pos:start="1693:29" pos:end="1693:43"><name pos:start="1693:29" pos:end="1693:31">tmp</name> <operator pos:start="1693:33" pos:end="1693:33">=</operator> <call pos:start="1693:35" pos:end="1693:43"><name pos:start="1693:35" pos:end="1693:41">new_tmp</name><argument_list pos:start="1693:42" pos:end="1693:43">()</argument_list></call></expr>;</expr_stmt>

                            <expr_stmt pos:start="1695:29" pos:end="1695:58"><expr pos:start="1695:29" pos:end="1695:57"><call pos:start="1695:29" pos:end="1695:57"><name pos:start="1695:29" pos:end="1695:44">tcg_gen_movi_i32</name><argument_list pos:start="1695:45" pos:end="1695:57">(<argument pos:start="1695:46" pos:end="1695:48"><expr pos:start="1695:46" pos:end="1695:48"><name pos:start="1695:46" pos:end="1695:48">tmp</name></expr></argument>, <argument pos:start="1695:51" pos:end="1695:56"><expr pos:start="1695:51" pos:end="1695:56"><name pos:start="1695:51" pos:end="1695:56">offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                        </block_content>}</block></if> <else pos:start="1697:27" pos:end="1709:25">else <block pos:start="1697:32" pos:end="1709:25">{<block_content pos:start="1699:29" pos:end="1707:64">

                            <expr_stmt pos:start="1699:29" pos:end="1699:50"><expr pos:start="1699:29" pos:end="1699:49"><name pos:start="1699:29" pos:end="1699:31">tmp</name> <operator pos:start="1699:33" pos:end="1699:33">=</operator> <call pos:start="1699:35" pos:end="1699:49"><name pos:start="1699:35" pos:end="1699:42">load_reg</name><argument_list pos:start="1699:43" pos:end="1699:49">(<argument pos:start="1699:44" pos:end="1699:44"><expr pos:start="1699:44" pos:end="1699:44"><name pos:start="1699:44" pos:end="1699:44">s</name></expr></argument>, <argument pos:start="1699:47" pos:end="1699:48"><expr pos:start="1699:47" pos:end="1699:48"><name pos:start="1699:47" pos:end="1699:48">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                            <if_stmt pos:start="1701:29" pos:end="1707:64"><if pos:start="1701:29" pos:end="1703:64">if <condition pos:start="1701:32" pos:end="1701:49">(<expr pos:start="1701:33" pos:end="1701:48"><name pos:start="1701:33" pos:end="1701:36">insn</name> <operator pos:start="1701:38" pos:end="1701:38">&amp;</operator> <operator pos:start="1701:40" pos:end="1701:40">(</operator><literal type="number" pos:start="1701:41" pos:end="1701:41">1</literal> <operator pos:start="1701:43" pos:end="1701:44">&lt;&lt;</operator> <literal type="number" pos:start="1701:46" pos:end="1701:47">23</literal><operator pos:start="1701:48" pos:end="1701:48">)</operator></expr>)</condition><block type="pseudo" pos:start="1703:33" pos:end="1703:64"><block_content pos:start="1703:33" pos:end="1703:64">

                                <expr_stmt pos:start="1703:33" pos:end="1703:64"><expr pos:start="1703:33" pos:end="1703:63"><call pos:start="1703:33" pos:end="1703:63"><name pos:start="1703:33" pos:end="1703:48">tcg_gen_subi_i32</name><argument_list pos:start="1703:49" pos:end="1703:63">(<argument pos:start="1703:50" pos:end="1703:52"><expr pos:start="1703:50" pos:end="1703:52"><name pos:start="1703:50" pos:end="1703:52">tmp</name></expr></argument>, <argument pos:start="1703:55" pos:end="1703:57"><expr pos:start="1703:55" pos:end="1703:57"><name pos:start="1703:55" pos:end="1703:57">tmp</name></expr></argument>, <argument pos:start="1703:60" pos:end="1703:62"><expr pos:start="1703:60" pos:end="1703:62"><name pos:start="1703:60" pos:end="1703:62">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

                            <else pos:start="1705:29" pos:end="1707:64">else<block type="pseudo" pos:start="1707:33" pos:end="1707:64"><block_content pos:start="1707:33" pos:end="1707:64">

                                <expr_stmt pos:start="1707:33" pos:end="1707:64"><expr pos:start="1707:33" pos:end="1707:63"><call pos:start="1707:33" pos:end="1707:63"><name pos:start="1707:33" pos:end="1707:48">tcg_gen_addi_i32</name><argument_list pos:start="1707:49" pos:end="1707:63">(<argument pos:start="1707:50" pos:end="1707:52"><expr pos:start="1707:50" pos:end="1707:52"><name pos:start="1707:50" pos:end="1707:52">tmp</name></expr></argument>, <argument pos:start="1707:55" pos:end="1707:57"><expr pos:start="1707:55" pos:end="1707:57"><name pos:start="1707:55" pos:end="1707:57">tmp</name></expr></argument>, <argument pos:start="1707:60" pos:end="1707:62"><expr pos:start="1707:60" pos:end="1707:62"><name pos:start="1707:60" pos:end="1707:62">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

                        </block_content>}</block></else></if_stmt>

                    </block_content>}</block></else></if_stmt>

                    <expr_stmt pos:start="1713:21" pos:end="1713:42"><expr pos:start="1713:21" pos:end="1713:41"><call pos:start="1713:21" pos:end="1713:41"><name pos:start="1713:21" pos:end="1713:29">store_reg</name><argument_list pos:start="1713:30" pos:end="1713:41">(<argument pos:start="1713:31" pos:end="1713:31"><expr pos:start="1713:31" pos:end="1713:31"><name pos:start="1713:31" pos:end="1713:31">s</name></expr></argument>, <argument pos:start="1713:34" pos:end="1713:35"><expr pos:start="1713:34" pos:end="1713:35"><name pos:start="1713:34" pos:end="1713:35">rd</name></expr></argument>, <argument pos:start="1713:38" pos:end="1713:40"><expr pos:start="1713:38" pos:end="1713:40"><name pos:start="1713:38" pos:end="1713:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></if> <else pos:start="1717:15" pos:end="1811:13">else <block pos:start="1717:20" pos:end="1811:13">{<block_content pos:start="1719:17" pos:end="1809:17">

                <decl_stmt pos:start="1719:17" pos:end="1719:36"><decl pos:start="1719:17" pos:end="1719:35"><type pos:start="1719:17" pos:end="1719:19"><name pos:start="1719:17" pos:end="1719:19">int</name></type> <name pos:start="1719:21" pos:end="1719:31">shifter_out</name> <init pos:start="1719:33" pos:end="1719:35">= <expr pos:start="1719:35" pos:end="1719:35"><literal type="number" pos:start="1719:35" pos:end="1719:35">0</literal></expr></init></decl>;</decl_stmt>

                <comment type="block" pos:start="1721:17" pos:end="1721:49">/* modified 12-bit immediate.  */</comment>

                <expr_stmt pos:start="1723:17" pos:end="1723:78"><expr pos:start="1723:17" pos:end="1723:77"><name pos:start="1723:17" pos:end="1723:21">shift</name> <operator pos:start="1723:23" pos:end="1723:23">=</operator> <operator pos:start="1723:25" pos:end="1723:25">(</operator><operator pos:start="1723:26" pos:end="1723:26">(</operator><name pos:start="1723:27" pos:end="1723:30">insn</name> <operator pos:start="1723:32" pos:end="1723:32">&amp;</operator> <literal type="number" pos:start="1723:34" pos:end="1723:43">0x04000000</literal><operator pos:start="1723:44" pos:end="1723:44">)</operator> <operator pos:start="1723:46" pos:end="1723:47">&gt;&gt;</operator> <literal type="number" pos:start="1723:49" pos:end="1723:50">23</literal><operator pos:start="1723:51" pos:end="1723:51">)</operator> <operator pos:start="1723:53" pos:end="1723:53">|</operator> <operator pos:start="1723:55" pos:end="1723:55">(</operator><operator pos:start="1723:56" pos:end="1723:56">(</operator><name pos:start="1723:57" pos:end="1723:60">insn</name> <operator pos:start="1723:62" pos:end="1723:62">&amp;</operator> <literal type="number" pos:start="1723:64" pos:end="1723:69">0x7000</literal><operator pos:start="1723:70" pos:end="1723:70">)</operator> <operator pos:start="1723:72" pos:end="1723:73">&gt;&gt;</operator> <literal type="number" pos:start="1723:75" pos:end="1723:76">12</literal><operator pos:start="1723:77" pos:end="1723:77">)</operator></expr>;</expr_stmt>

                <expr_stmt pos:start="1725:17" pos:end="1725:36"><expr pos:start="1725:17" pos:end="1725:35"><name pos:start="1725:17" pos:end="1725:19">imm</name> <operator pos:start="1725:21" pos:end="1725:21">=</operator> <operator pos:start="1725:23" pos:end="1725:23">(</operator><name pos:start="1725:24" pos:end="1725:27">insn</name> <operator pos:start="1725:29" pos:end="1725:29">&amp;</operator> <literal type="number" pos:start="1725:31" pos:end="1725:34">0xff</literal><operator pos:start="1725:35" pos:end="1725:35">)</operator></expr>;</expr_stmt>

                <switch pos:start="1727:17" pos:end="1769:17">switch <condition pos:start="1727:24" pos:end="1727:30">(<expr pos:start="1727:25" pos:end="1727:29"><name pos:start="1727:25" pos:end="1727:29">shift</name></expr>)</condition> <block pos:start="1727:32" pos:end="1769:17">{<block_content pos:start="1729:17" pos:end="1767:26">

                <case pos:start="1729:17" pos:end="1729:23">case <expr pos:start="1729:22" pos:end="1729:22"><literal type="number" pos:start="1729:22" pos:end="1729:22">0</literal></expr>:</case> <comment type="block" pos:start="1729:25" pos:end="1729:32">/* XY */</comment>

                    <comment type="block" pos:start="1731:21" pos:end="1731:41">/* Nothing to do.  */</comment>

                    <break pos:start="1733:21" pos:end="1733:26">break;</break>

                <case pos:start="1735:17" pos:end="1735:23">case <expr pos:start="1735:22" pos:end="1735:22"><literal type="number" pos:start="1735:22" pos:end="1735:22">1</literal></expr>:</case> <comment type="block" pos:start="1735:25" pos:end="1735:38">/* 00XY00XY */</comment>

                    <expr_stmt pos:start="1737:21" pos:end="1737:37"><expr pos:start="1737:21" pos:end="1737:36"><name pos:start="1737:21" pos:end="1737:23">imm</name> <operator pos:start="1737:25" pos:end="1737:26">|=</operator> <name pos:start="1737:28" pos:end="1737:30">imm</name> <operator pos:start="1737:32" pos:end="1737:33">&lt;&lt;</operator> <literal type="number" pos:start="1737:35" pos:end="1737:36">16</literal></expr>;</expr_stmt>

                    <break pos:start="1739:21" pos:end="1739:26">break;</break>

                <case pos:start="1741:17" pos:end="1741:23">case <expr pos:start="1741:22" pos:end="1741:22"><literal type="number" pos:start="1741:22" pos:end="1741:22">2</literal></expr>:</case> <comment type="block" pos:start="1741:25" pos:end="1741:38">/* XY00XY00 */</comment>

                    <expr_stmt pos:start="1743:21" pos:end="1743:37"><expr pos:start="1743:21" pos:end="1743:36"><name pos:start="1743:21" pos:end="1743:23">imm</name> <operator pos:start="1743:25" pos:end="1743:26">|=</operator> <name pos:start="1743:28" pos:end="1743:30">imm</name> <operator pos:start="1743:32" pos:end="1743:33">&lt;&lt;</operator> <literal type="number" pos:start="1743:35" pos:end="1743:36">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1745:21" pos:end="1745:30"><expr pos:start="1745:21" pos:end="1745:29"><name pos:start="1745:21" pos:end="1745:23">imm</name> <operator pos:start="1745:25" pos:end="1745:27">&lt;&lt;=</operator> <literal type="number" pos:start="1745:29" pos:end="1745:29">8</literal></expr>;</expr_stmt>

                    <break pos:start="1747:21" pos:end="1747:26">break;</break>

                <case pos:start="1749:17" pos:end="1749:23">case <expr pos:start="1749:22" pos:end="1749:22"><literal type="number" pos:start="1749:22" pos:end="1749:22">3</literal></expr>:</case> <comment type="block" pos:start="1749:25" pos:end="1749:38">/* XYXYXYXY */</comment>

                    <expr_stmt pos:start="1751:21" pos:end="1751:37"><expr pos:start="1751:21" pos:end="1751:36"><name pos:start="1751:21" pos:end="1751:23">imm</name> <operator pos:start="1751:25" pos:end="1751:26">|=</operator> <name pos:start="1751:28" pos:end="1751:30">imm</name> <operator pos:start="1751:32" pos:end="1751:33">&lt;&lt;</operator> <literal type="number" pos:start="1751:35" pos:end="1751:36">16</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1753:21" pos:end="1753:36"><expr pos:start="1753:21" pos:end="1753:35"><name pos:start="1753:21" pos:end="1753:23">imm</name> <operator pos:start="1753:25" pos:end="1753:26">|=</operator> <name pos:start="1753:28" pos:end="1753:30">imm</name> <operator pos:start="1753:32" pos:end="1753:33">&lt;&lt;</operator> <literal type="number" pos:start="1753:35" pos:end="1753:35">8</literal></expr>;</expr_stmt>

                    <break pos:start="1755:21" pos:end="1755:26">break;</break>

                <default pos:start="1757:17" pos:end="1757:24">default:</default> <comment type="block" pos:start="1757:26" pos:end="1757:49">/* Rotated constant.  */</comment>

                    <expr_stmt pos:start="1759:21" pos:end="1759:54"><expr pos:start="1759:21" pos:end="1759:53"><name pos:start="1759:21" pos:end="1759:25">shift</name> <operator pos:start="1759:27" pos:end="1759:27">=</operator> <operator pos:start="1759:29" pos:end="1759:29">(</operator><name pos:start="1759:30" pos:end="1759:34">shift</name> <operator pos:start="1759:36" pos:end="1759:37">&lt;&lt;</operator> <literal type="number" pos:start="1759:39" pos:end="1759:39">1</literal><operator pos:start="1759:40" pos:end="1759:40">)</operator> <operator pos:start="1759:42" pos:end="1759:42">|</operator> <operator pos:start="1759:44" pos:end="1759:44">(</operator><name pos:start="1759:45" pos:end="1759:47">imm</name> <operator pos:start="1759:49" pos:end="1759:50">&gt;&gt;</operator> <literal type="number" pos:start="1759:52" pos:end="1759:52">7</literal><operator pos:start="1759:53" pos:end="1759:53">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1761:21" pos:end="1761:32"><expr pos:start="1761:21" pos:end="1761:31"><name pos:start="1761:21" pos:end="1761:23">imm</name> <operator pos:start="1761:25" pos:end="1761:26">|=</operator> <literal type="number" pos:start="1761:28" pos:end="1761:31">0x80</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1763:21" pos:end="1763:46"><expr pos:start="1763:21" pos:end="1763:45"><name pos:start="1763:21" pos:end="1763:23">imm</name> <operator pos:start="1763:25" pos:end="1763:25">=</operator> <name pos:start="1763:27" pos:end="1763:29">imm</name> <operator pos:start="1763:31" pos:end="1763:32">&lt;&lt;</operator> <operator pos:start="1763:34" pos:end="1763:34">(</operator><literal type="number" pos:start="1763:35" pos:end="1763:38">32</literal> <operator pos:start="1763:38" pos:end="1763:38">-</operator> <name pos:start="1763:40" pos:end="1763:44">shift</name><operator pos:start="1763:45" pos:end="1763:45">)</operator></expr>;</expr_stmt>

                    <expr_stmt pos:start="1765:21" pos:end="1765:36"><expr pos:start="1765:21" pos:end="1765:35"><name pos:start="1765:21" pos:end="1765:31">shifter_out</name> <operator pos:start="1765:33" pos:end="1765:33">=</operator> <literal type="number" pos:start="1765:35" pos:end="1765:35">1</literal></expr>;</expr_stmt>

                    <break pos:start="1767:21" pos:end="1767:26">break;</break>

                </block_content>}</block></switch>

                <expr_stmt pos:start="1771:17" pos:end="1771:33"><expr pos:start="1771:17" pos:end="1771:32"><name pos:start="1771:17" pos:end="1771:20">tmp2</name> <operator pos:start="1771:22" pos:end="1771:22">=</operator> <call pos:start="1771:24" pos:end="1771:32"><name pos:start="1771:24" pos:end="1771:30">new_tmp</name><argument_list pos:start="1771:31" pos:end="1771:32">()</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1773:17" pos:end="1773:44"><expr pos:start="1773:17" pos:end="1773:43"><call pos:start="1773:17" pos:end="1773:43"><name pos:start="1773:17" pos:end="1773:32">tcg_gen_movi_i32</name><argument_list pos:start="1773:33" pos:end="1773:43">(<argument pos:start="1773:34" pos:end="1773:37"><expr pos:start="1773:34" pos:end="1773:37"><name pos:start="1773:34" pos:end="1773:37">tmp2</name></expr></argument>, <argument pos:start="1773:40" pos:end="1773:42"><expr pos:start="1773:40" pos:end="1773:42"><name pos:start="1773:40" pos:end="1773:42">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1775:17" pos:end="1775:40"><expr pos:start="1775:17" pos:end="1775:39"><name pos:start="1775:17" pos:end="1775:18">rn</name> <operator pos:start="1775:20" pos:end="1775:20">=</operator> <operator pos:start="1775:22" pos:end="1775:22">(</operator><name pos:start="1775:23" pos:end="1775:26">insn</name> <operator pos:start="1775:28" pos:end="1775:29">&gt;&gt;</operator> <literal type="number" pos:start="1775:31" pos:end="1775:32">16</literal><operator pos:start="1775:33" pos:end="1775:33">)</operator> <operator pos:start="1775:35" pos:end="1775:35">&amp;</operator> <literal type="number" pos:start="1775:37" pos:end="1775:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1777:17" pos:end="1787:17"><if pos:start="1777:17" pos:end="1783:17">if <condition pos:start="1777:20" pos:end="1777:29">(<expr pos:start="1777:21" pos:end="1777:28"><name pos:start="1777:21" pos:end="1777:22">rn</name> <operator pos:start="1777:24" pos:end="1777:25">==</operator> <literal type="number" pos:start="1777:27" pos:end="1777:28">15</literal></expr>)</condition> <block pos:start="1777:31" pos:end="1783:17">{<block_content pos:start="1779:21" pos:end="1781:45">

                    <expr_stmt pos:start="1779:21" pos:end="1779:36"><expr pos:start="1779:21" pos:end="1779:35"><name pos:start="1779:21" pos:end="1779:23">tmp</name> <operator pos:start="1779:25" pos:end="1779:25">=</operator> <call pos:start="1779:27" pos:end="1779:35"><name pos:start="1779:27" pos:end="1779:33">new_tmp</name><argument_list pos:start="1779:34" pos:end="1779:35">()</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1781:21" pos:end="1781:45"><expr pos:start="1781:21" pos:end="1781:44"><call pos:start="1781:21" pos:end="1781:44"><name pos:start="1781:21" pos:end="1781:36">tcg_gen_movi_i32</name><argument_list pos:start="1781:37" pos:end="1781:44">(<argument pos:start="1781:38" pos:end="1781:40"><expr pos:start="1781:38" pos:end="1781:40"><name pos:start="1781:38" pos:end="1781:40">tmp</name></expr></argument>, <argument pos:start="1781:43" pos:end="1781:43"><expr pos:start="1781:43" pos:end="1781:43"><literal type="number" pos:start="1781:43" pos:end="1781:43">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1783:19" pos:end="1787:17">else <block pos:start="1783:24" pos:end="1787:17">{<block_content pos:start="1785:21" pos:end="1785:42">

                    <expr_stmt pos:start="1785:21" pos:end="1785:42"><expr pos:start="1785:21" pos:end="1785:41"><name pos:start="1785:21" pos:end="1785:23">tmp</name> <operator pos:start="1785:25" pos:end="1785:25">=</operator> <call pos:start="1785:27" pos:end="1785:41"><name pos:start="1785:27" pos:end="1785:34">load_reg</name><argument_list pos:start="1785:35" pos:end="1785:41">(<argument pos:start="1785:36" pos:end="1785:36"><expr pos:start="1785:36" pos:end="1785:36"><name pos:start="1785:36" pos:end="1785:36">s</name></expr></argument>, <argument pos:start="1785:39" pos:end="1785:40"><expr pos:start="1785:39" pos:end="1785:40"><name pos:start="1785:39" pos:end="1785:40">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

                <expr_stmt pos:start="1789:17" pos:end="1789:40"><expr pos:start="1789:17" pos:end="1789:39"><name pos:start="1789:17" pos:end="1789:18">op</name> <operator pos:start="1789:20" pos:end="1789:20">=</operator> <operator pos:start="1789:22" pos:end="1789:22">(</operator><name pos:start="1789:23" pos:end="1789:26">insn</name> <operator pos:start="1789:28" pos:end="1789:29">&gt;&gt;</operator> <literal type="number" pos:start="1789:31" pos:end="1789:32">21</literal><operator pos:start="1789:33" pos:end="1789:33">)</operator> <operator pos:start="1789:35" pos:end="1789:35">&amp;</operator> <literal type="number" pos:start="1789:37" pos:end="1789:39">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1791:17" pos:end="1795:36"><if pos:start="1791:17" pos:end="1795:36">if <condition pos:start="1791:20" pos:end="1793:63">(<expr pos:start="1791:21" pos:end="1793:62"><call pos:start="1791:21" pos:end="1793:62"><name pos:start="1791:21" pos:end="1791:38">gen_thumb2_data_op</name><argument_list pos:start="1791:39" pos:end="1793:62">(<argument pos:start="1791:40" pos:end="1791:40"><expr pos:start="1791:40" pos:end="1791:40"><name pos:start="1791:40" pos:end="1791:40">s</name></expr></argument>, <argument pos:start="1791:43" pos:end="1791:44"><expr pos:start="1791:43" pos:end="1791:44"><name pos:start="1791:43" pos:end="1791:44">op</name></expr></argument>, <argument pos:start="1791:47" pos:end="1791:69"><expr pos:start="1791:47" pos:end="1791:69"><operator pos:start="1791:47" pos:end="1791:47">(</operator><name pos:start="1791:48" pos:end="1791:51">insn</name> <operator pos:start="1791:53" pos:end="1791:53">&amp;</operator> <operator pos:start="1791:55" pos:end="1791:55">(</operator><literal type="number" pos:start="1791:56" pos:end="1791:56">1</literal> <operator pos:start="1791:58" pos:end="1791:59">&lt;&lt;</operator> <literal type="number" pos:start="1791:61" pos:end="1791:62">20</literal><operator pos:start="1791:63" pos:end="1791:63">)</operator><operator pos:start="1791:64" pos:end="1791:64">)</operator> <operator pos:start="1791:66" pos:end="1791:67">!=</operator> <literal type="number" pos:start="1791:69" pos:end="1791:69">0</literal></expr></argument>,

                                       <argument pos:start="1793:40" pos:end="1793:50"><expr pos:start="1793:40" pos:end="1793:50"><name pos:start="1793:40" pos:end="1793:50">shifter_out</name></expr></argument>, <argument pos:start="1793:53" pos:end="1793:55"><expr pos:start="1793:53" pos:end="1793:55"><name pos:start="1793:53" pos:end="1793:55">tmp</name></expr></argument>, <argument pos:start="1793:58" pos:end="1793:61"><expr pos:start="1793:58" pos:end="1793:61"><name pos:start="1793:58" pos:end="1793:61">tmp2</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1795:21" pos:end="1795:36"><block_content pos:start="1795:21" pos:end="1795:36">

                    <goto pos:start="1795:21" pos:end="1795:36">goto <name pos:start="1795:26" pos:end="1795:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                <expr_stmt pos:start="1797:17" pos:end="1797:31"><expr pos:start="1797:17" pos:end="1797:30"><call pos:start="1797:17" pos:end="1797:30"><name pos:start="1797:17" pos:end="1797:24">dead_tmp</name><argument_list pos:start="1797:25" pos:end="1797:30">(<argument pos:start="1797:26" pos:end="1797:29"><expr pos:start="1797:26" pos:end="1797:29"><name pos:start="1797:26" pos:end="1797:29">tmp2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="1799:17" pos:end="1799:39"><expr pos:start="1799:17" pos:end="1799:38"><name pos:start="1799:17" pos:end="1799:18">rd</name> <operator pos:start="1799:20" pos:end="1799:20">=</operator> <operator pos:start="1799:22" pos:end="1799:22">(</operator><name pos:start="1799:23" pos:end="1799:26">insn</name> <operator pos:start="1799:28" pos:end="1799:29">&gt;&gt;</operator> <literal type="number" pos:start="1799:31" pos:end="1799:31">8</literal><operator pos:start="1799:32" pos:end="1799:32">)</operator> <operator pos:start="1799:34" pos:end="1799:34">&amp;</operator> <literal type="number" pos:start="1799:36" pos:end="1799:38">0xf</literal></expr>;</expr_stmt>

                <if_stmt pos:start="1801:17" pos:end="1809:17"><if pos:start="1801:17" pos:end="1805:17">if <condition pos:start="1801:20" pos:end="1801:29">(<expr pos:start="1801:21" pos:end="1801:28"><name pos:start="1801:21" pos:end="1801:22">rd</name> <operator pos:start="1801:24" pos:end="1801:25">!=</operator> <literal type="number" pos:start="1801:27" pos:end="1801:28">15</literal></expr>)</condition> <block pos:start="1801:31" pos:end="1805:17">{<block_content pos:start="1803:21" pos:end="1803:42">

                    <expr_stmt pos:start="1803:21" pos:end="1803:42"><expr pos:start="1803:21" pos:end="1803:41"><call pos:start="1803:21" pos:end="1803:41"><name pos:start="1803:21" pos:end="1803:29">store_reg</name><argument_list pos:start="1803:30" pos:end="1803:41">(<argument pos:start="1803:31" pos:end="1803:31"><expr pos:start="1803:31" pos:end="1803:31"><name pos:start="1803:31" pos:end="1803:31">s</name></expr></argument>, <argument pos:start="1803:34" pos:end="1803:35"><expr pos:start="1803:34" pos:end="1803:35"><name pos:start="1803:34" pos:end="1803:35">rd</name></expr></argument>, <argument pos:start="1803:38" pos:end="1803:40"><expr pos:start="1803:38" pos:end="1803:40"><name pos:start="1803:38" pos:end="1803:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1805:19" pos:end="1809:17">else <block pos:start="1805:24" pos:end="1809:17">{<block_content pos:start="1807:21" pos:end="1807:34">

                    <expr_stmt pos:start="1807:21" pos:end="1807:34"><expr pos:start="1807:21" pos:end="1807:33"><call pos:start="1807:21" pos:end="1807:33"><name pos:start="1807:21" pos:end="1807:28">dead_tmp</name><argument_list pos:start="1807:29" pos:end="1807:33">(<argument pos:start="1807:30" pos:end="1807:32"><expr pos:start="1807:30" pos:end="1807:32"><name pos:start="1807:30" pos:end="1807:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="1815:9" pos:end="1815:14">break;</break>

    <case pos:start="1817:5" pos:end="1817:12">case <expr pos:start="1817:10" pos:end="1817:11"><literal type="number" pos:start="1817:10" pos:end="1817:11">12</literal></expr>:</case> <comment type="block" pos:start="1817:14" pos:end="1817:48">/* Load/store single data item.  */</comment>

        <block pos:start="1819:9" pos:end="2033:9">{<block_content pos:start="1821:9" pos:end="2031:9">

        <decl_stmt pos:start="1821:9" pos:end="1821:24"><decl pos:start="1821:9" pos:end="1821:23"><type pos:start="1821:9" pos:end="1821:11"><name pos:start="1821:9" pos:end="1821:11">int</name></type> <name pos:start="1821:13" pos:end="1821:19">postinc</name> <init pos:start="1821:21" pos:end="1821:23">= <expr pos:start="1821:23" pos:end="1821:23"><literal type="number" pos:start="1821:23" pos:end="1821:23">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1823:9" pos:end="1823:26"><decl pos:start="1823:9" pos:end="1823:25"><type pos:start="1823:9" pos:end="1823:11"><name pos:start="1823:9" pos:end="1823:11">int</name></type> <name pos:start="1823:13" pos:end="1823:21">writeback</name> <init pos:start="1823:23" pos:end="1823:25">= <expr pos:start="1823:25" pos:end="1823:25"><literal type="number" pos:start="1823:25" pos:end="1823:25">0</literal></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="1825:9" pos:end="1825:17"><decl pos:start="1825:9" pos:end="1825:16"><type pos:start="1825:9" pos:end="1825:11"><name pos:start="1825:9" pos:end="1825:11">int</name></type> <name pos:start="1825:13" pos:end="1825:16">user</name></decl>;</decl_stmt>

        <if_stmt pos:start="1827:9" pos:end="1835:9"><if pos:start="1827:9" pos:end="1835:9">if <condition pos:start="1827:12" pos:end="1827:46">(<expr pos:start="1827:13" pos:end="1827:45"><operator pos:start="1827:13" pos:end="1827:13">(</operator><name pos:start="1827:14" pos:end="1827:17">insn</name> <operator pos:start="1827:19" pos:end="1827:19">&amp;</operator> <literal type="number" pos:start="1827:21" pos:end="1827:30">0x01100000</literal><operator pos:start="1827:31" pos:end="1827:31">)</operator> <operator pos:start="1827:33" pos:end="1827:34">==</operator> <literal type="number" pos:start="1827:36" pos:end="1827:45">0x01000000</literal></expr>)</condition> <block pos:start="1827:48" pos:end="1835:9">{<block_content pos:start="1829:13" pos:end="1833:18">

            <if_stmt pos:start="1829:13" pos:end="1831:32"><if pos:start="1829:13" pos:end="1831:32">if <condition pos:start="1829:16" pos:end="1829:49">(<expr pos:start="1829:17" pos:end="1829:48"><call pos:start="1829:17" pos:end="1829:48"><name pos:start="1829:17" pos:end="1829:34">disas_neon_ls_insn</name><argument_list pos:start="1829:35" pos:end="1829:48">(<argument pos:start="1829:36" pos:end="1829:38"><expr pos:start="1829:36" pos:end="1829:38"><name pos:start="1829:36" pos:end="1829:38">env</name></expr></argument>, <argument pos:start="1829:41" pos:end="1829:41"><expr pos:start="1829:41" pos:end="1829:41"><name pos:start="1829:41" pos:end="1829:41">s</name></expr></argument>, <argument pos:start="1829:44" pos:end="1829:47"><expr pos:start="1829:44" pos:end="1829:47"><name pos:start="1829:44" pos:end="1829:47">insn</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="1831:17" pos:end="1831:32"><block_content pos:start="1831:17" pos:end="1831:32">

                <goto pos:start="1831:17" pos:end="1831:32">goto <name pos:start="1831:22" pos:end="1831:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <break pos:start="1833:13" pos:end="1833:18">break;</break>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="1837:9" pos:end="1837:26"><expr pos:start="1837:9" pos:end="1837:25"><name pos:start="1837:9" pos:end="1837:12">user</name> <operator pos:start="1837:14" pos:end="1837:14">=</operator> <call pos:start="1837:16" pos:end="1837:25"><name pos:start="1837:16" pos:end="1837:22">IS_USER</name><argument_list pos:start="1837:23" pos:end="1837:25">(<argument pos:start="1837:24" pos:end="1837:24"><expr pos:start="1837:24" pos:end="1837:24"><name pos:start="1837:24" pos:end="1837:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="1839:9" pos:end="1949:9"><if pos:start="1839:9" pos:end="1859:9">if <condition pos:start="1839:12" pos:end="1839:21">(<expr pos:start="1839:13" pos:end="1839:20"><name pos:start="1839:13" pos:end="1839:14">rn</name> <operator pos:start="1839:16" pos:end="1839:17">==</operator> <literal type="number" pos:start="1839:19" pos:end="1839:20">15</literal></expr>)</condition> <block pos:start="1839:23" pos:end="1859:9">{<block_content pos:start="1841:13" pos:end="1857:40">

            <expr_stmt pos:start="1841:13" pos:end="1841:29"><expr pos:start="1841:13" pos:end="1841:28"><name pos:start="1841:13" pos:end="1841:16">addr</name> <operator pos:start="1841:18" pos:end="1841:18">=</operator> <call pos:start="1841:20" pos:end="1841:28"><name pos:start="1841:20" pos:end="1841:26">new_tmp</name><argument_list pos:start="1841:27" pos:end="1841:28">()</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="1843:13" pos:end="1843:31">/* PC relative.  */</comment>

            <comment type="block" pos:start="1845:13" pos:end="1845:59">/* s-&gt;pc has already been incremented by 4.  */</comment>

            <expr_stmt pos:start="1847:13" pos:end="1847:37"><expr pos:start="1847:13" pos:end="1847:36"><name pos:start="1847:13" pos:end="1847:15">imm</name> <operator pos:start="1847:17" pos:end="1847:17">=</operator> <name pos:start="1847:19" pos:end="1847:23"><name pos:start="1847:19" pos:end="1847:19">s</name><operator pos:start="1847:20" pos:end="1847:21">-&gt;</operator><name pos:start="1847:22" pos:end="1847:23">pc</name></name> <operator pos:start="1847:25" pos:end="1847:25">&amp;</operator> <literal type="number" pos:start="1847:27" pos:end="1847:36">0xfffffffc</literal></expr>;</expr_stmt>

            <if_stmt pos:start="1849:13" pos:end="1855:36"><if pos:start="1849:13" pos:end="1851:36">if <condition pos:start="1849:16" pos:end="1849:33">(<expr pos:start="1849:17" pos:end="1849:32"><name pos:start="1849:17" pos:end="1849:20">insn</name> <operator pos:start="1849:22" pos:end="1849:22">&amp;</operator> <operator pos:start="1849:24" pos:end="1849:24">(</operator><literal type="number" pos:start="1849:25" pos:end="1849:25">1</literal> <operator pos:start="1849:27" pos:end="1849:28">&lt;&lt;</operator> <literal type="number" pos:start="1849:30" pos:end="1849:31">23</literal><operator pos:start="1849:32" pos:end="1849:32">)</operator></expr>)</condition><block type="pseudo" pos:start="1851:17" pos:end="1851:36"><block_content pos:start="1851:17" pos:end="1851:36">

                <expr_stmt pos:start="1851:17" pos:end="1851:36"><expr pos:start="1851:17" pos:end="1851:35"><name pos:start="1851:17" pos:end="1851:19">imm</name> <operator pos:start="1851:21" pos:end="1851:22">+=</operator> <name pos:start="1851:24" pos:end="1851:27">insn</name> <operator pos:start="1851:29" pos:end="1851:29">&amp;</operator> <literal type="number" pos:start="1851:31" pos:end="1851:35">0xfff</literal></expr>;</expr_stmt></block_content></block></if>

            <else pos:start="1853:13" pos:end="1855:36">else<block type="pseudo" pos:start="1855:17" pos:end="1855:36"><block_content pos:start="1855:17" pos:end="1855:36">

                <expr_stmt pos:start="1855:17" pos:end="1855:36"><expr pos:start="1855:17" pos:end="1855:35"><name pos:start="1855:17" pos:end="1855:19">imm</name> <operator pos:start="1855:21" pos:end="1855:22">-=</operator> <name pos:start="1855:24" pos:end="1855:27">insn</name> <operator pos:start="1855:29" pos:end="1855:29">&amp;</operator> <literal type="number" pos:start="1855:31" pos:end="1855:35">0xfff</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>

            <expr_stmt pos:start="1857:13" pos:end="1857:40"><expr pos:start="1857:13" pos:end="1857:39"><call pos:start="1857:13" pos:end="1857:39"><name pos:start="1857:13" pos:end="1857:28">tcg_gen_movi_i32</name><argument_list pos:start="1857:29" pos:end="1857:39">(<argument pos:start="1857:30" pos:end="1857:33"><expr pos:start="1857:30" pos:end="1857:33"><name pos:start="1857:30" pos:end="1857:33">addr</name></expr></argument>, <argument pos:start="1857:36" pos:end="1857:38"><expr pos:start="1857:36" pos:end="1857:38"><name pos:start="1857:36" pos:end="1857:38">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="1859:11" pos:end="1949:9">else <block pos:start="1859:16" pos:end="1949:9">{<block_content pos:start="1861:13" pos:end="1947:13">

            <expr_stmt pos:start="1861:13" pos:end="1861:35"><expr pos:start="1861:13" pos:end="1861:34"><name pos:start="1861:13" pos:end="1861:16">addr</name> <operator pos:start="1861:18" pos:end="1861:18">=</operator> <call pos:start="1861:20" pos:end="1861:34"><name pos:start="1861:20" pos:end="1861:27">load_reg</name><argument_list pos:start="1861:28" pos:end="1861:34">(<argument pos:start="1861:29" pos:end="1861:29"><expr pos:start="1861:29" pos:end="1861:29"><name pos:start="1861:29" pos:end="1861:29">s</name></expr></argument>, <argument pos:start="1861:32" pos:end="1861:33"><expr pos:start="1861:32" pos:end="1861:33"><name pos:start="1861:32" pos:end="1861:33">rn</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="1863:13" pos:end="1947:13"><if pos:start="1863:13" pos:end="1871:13">if <condition pos:start="1863:16" pos:end="1863:33">(<expr pos:start="1863:17" pos:end="1863:32"><name pos:start="1863:17" pos:end="1863:20">insn</name> <operator pos:start="1863:22" pos:end="1863:22">&amp;</operator> <operator pos:start="1863:24" pos:end="1863:24">(</operator><literal type="number" pos:start="1863:25" pos:end="1863:25">1</literal> <operator pos:start="1863:27" pos:end="1863:28">&lt;&lt;</operator> <literal type="number" pos:start="1863:30" pos:end="1863:31">23</literal><operator pos:start="1863:32" pos:end="1863:32">)</operator></expr>)</condition> <block pos:start="1863:35" pos:end="1871:13">{<block_content pos:start="1867:17" pos:end="1869:50">

                <comment type="block" pos:start="1865:17" pos:end="1865:39">/* Positive offset.  */</comment>

                <expr_stmt pos:start="1867:17" pos:end="1867:35"><expr pos:start="1867:17" pos:end="1867:34"><name pos:start="1867:17" pos:end="1867:19">imm</name> <operator pos:start="1867:21" pos:end="1867:21">=</operator> <name pos:start="1867:23" pos:end="1867:26">insn</name> <operator pos:start="1867:28" pos:end="1867:28">&amp;</operator> <literal type="number" pos:start="1867:30" pos:end="1867:34">0xfff</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1869:17" pos:end="1869:50"><expr pos:start="1869:17" pos:end="1869:49"><call pos:start="1869:17" pos:end="1869:49"><name pos:start="1869:17" pos:end="1869:32">tcg_gen_addi_i32</name><argument_list pos:start="1869:33" pos:end="1869:49">(<argument pos:start="1869:34" pos:end="1869:37"><expr pos:start="1869:34" pos:end="1869:37"><name pos:start="1869:34" pos:end="1869:37">addr</name></expr></argument>, <argument pos:start="1869:40" pos:end="1869:43"><expr pos:start="1869:40" pos:end="1869:43"><name pos:start="1869:40" pos:end="1869:43">addr</name></expr></argument>, <argument pos:start="1869:46" pos:end="1869:48"><expr pos:start="1869:46" pos:end="1869:48"><name pos:start="1869:46" pos:end="1869:48">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="1871:15" pos:end="1947:13">else <block pos:start="1871:20" pos:end="1947:13">{<block_content pos:start="1873:17" pos:end="1945:17">

                <expr_stmt pos:start="1873:17" pos:end="1873:37"><expr pos:start="1873:17" pos:end="1873:36"><name pos:start="1873:17" pos:end="1873:18">op</name> <operator pos:start="1873:20" pos:end="1873:20">=</operator> <operator pos:start="1873:22" pos:end="1873:22">(</operator><name pos:start="1873:23" pos:end="1873:26">insn</name> <operator pos:start="1873:28" pos:end="1873:29">&gt;&gt;</operator> <literal type="number" pos:start="1873:31" pos:end="1873:31">8</literal><operator pos:start="1873:32" pos:end="1873:32">)</operator> <operator pos:start="1873:34" pos:end="1873:34">&amp;</operator> <literal type="number" pos:start="1873:36" pos:end="1873:36">7</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="1875:17" pos:end="1875:34"><expr pos:start="1875:17" pos:end="1875:33"><name pos:start="1875:17" pos:end="1875:19">imm</name> <operator pos:start="1875:21" pos:end="1875:21">=</operator> <name pos:start="1875:23" pos:end="1875:26">insn</name> <operator pos:start="1875:28" pos:end="1875:28">&amp;</operator> <literal type="number" pos:start="1875:30" pos:end="1875:33">0xff</literal></expr>;</expr_stmt>

                <switch pos:start="1877:17" pos:end="1945:17">switch <condition pos:start="1877:24" pos:end="1877:27">(<expr pos:start="1877:25" pos:end="1877:26"><name pos:start="1877:25" pos:end="1877:26">op</name></expr>)</condition> <block pos:start="1877:29" pos:end="1945:17">{<block_content pos:start="1879:17" pos:end="1943:36">

                <case pos:start="1879:17" pos:end="1879:23">case <expr pos:start="1879:22" pos:end="1879:22"><literal type="number" pos:start="1879:22" pos:end="1879:22">0</literal></expr>:</case> <case pos:start="1879:25" pos:end="1879:31">case <expr pos:start="1879:30" pos:end="1879:30"><literal type="number" pos:start="1879:30" pos:end="1879:30">8</literal></expr>:</case> <comment type="block" pos:start="1879:33" pos:end="1879:56">/* Shifted Register.  */</comment>

                    <expr_stmt pos:start="1881:21" pos:end="1881:46"><expr pos:start="1881:21" pos:end="1881:45"><name pos:start="1881:21" pos:end="1881:25">shift</name> <operator pos:start="1881:27" pos:end="1881:27">=</operator> <operator pos:start="1881:29" pos:end="1881:29">(</operator><name pos:start="1881:30" pos:end="1881:33">insn</name> <operator pos:start="1881:35" pos:end="1881:36">&gt;&gt;</operator> <literal type="number" pos:start="1881:38" pos:end="1881:38">4</literal><operator pos:start="1881:39" pos:end="1881:39">)</operator> <operator pos:start="1881:41" pos:end="1881:41">&amp;</operator> <literal type="number" pos:start="1881:43" pos:end="1881:45">0xf</literal></expr>;</expr_stmt>

                    <if_stmt pos:start="1883:21" pos:end="1885:40"><if pos:start="1883:21" pos:end="1885:40">if <condition pos:start="1883:24" pos:end="1883:34">(<expr pos:start="1883:25" pos:end="1883:33"><name pos:start="1883:25" pos:end="1883:29">shift</name> <operator pos:start="1883:31" pos:end="1883:31">&gt;</operator> <literal type="number" pos:start="1883:33" pos:end="1883:33">3</literal></expr>)</condition><block type="pseudo" pos:start="1885:25" pos:end="1885:40"><block_content pos:start="1885:25" pos:end="1885:40">

                        <goto pos:start="1885:25" pos:end="1885:40">goto <name pos:start="1885:30" pos:end="1885:39">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1887:21" pos:end="1887:42"><expr pos:start="1887:21" pos:end="1887:41"><name pos:start="1887:21" pos:end="1887:23">tmp</name> <operator pos:start="1887:25" pos:end="1887:25">=</operator> <call pos:start="1887:27" pos:end="1887:41"><name pos:start="1887:27" pos:end="1887:34">load_reg</name><argument_list pos:start="1887:35" pos:end="1887:41">(<argument pos:start="1887:36" pos:end="1887:36"><expr pos:start="1887:36" pos:end="1887:36"><name pos:start="1887:36" pos:end="1887:36">s</name></expr></argument>, <argument pos:start="1887:39" pos:end="1887:40"><expr pos:start="1887:39" pos:end="1887:40"><name pos:start="1887:39" pos:end="1887:40">rm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <if_stmt pos:start="1889:21" pos:end="1891:58"><if pos:start="1889:21" pos:end="1891:58">if <condition pos:start="1889:24" pos:end="1889:30">(<expr pos:start="1889:25" pos:end="1889:29"><name pos:start="1889:25" pos:end="1889:29">shift</name></expr>)</condition><block type="pseudo" pos:start="1891:25" pos:end="1891:58"><block_content pos:start="1891:25" pos:end="1891:58">

                        <expr_stmt pos:start="1891:25" pos:end="1891:58"><expr pos:start="1891:25" pos:end="1891:57"><call pos:start="1891:25" pos:end="1891:57"><name pos:start="1891:25" pos:end="1891:40">tcg_gen_shli_i32</name><argument_list pos:start="1891:41" pos:end="1891:57">(<argument pos:start="1891:42" pos:end="1891:44"><expr pos:start="1891:42" pos:end="1891:44"><name pos:start="1891:42" pos:end="1891:44">tmp</name></expr></argument>, <argument pos:start="1891:47" pos:end="1891:49"><expr pos:start="1891:47" pos:end="1891:49"><name pos:start="1891:47" pos:end="1891:49">tmp</name></expr></argument>, <argument pos:start="1891:52" pos:end="1891:56"><expr pos:start="1891:52" pos:end="1891:56"><name pos:start="1891:52" pos:end="1891:56">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

                    <expr_stmt pos:start="1893:21" pos:end="1893:53"><expr pos:start="1893:21" pos:end="1893:52"><call pos:start="1893:21" pos:end="1893:52"><name pos:start="1893:21" pos:end="1893:35">tcg_gen_add_i32</name><argument_list pos:start="1893:36" pos:end="1893:52">(<argument pos:start="1893:37" pos:end="1893:40"><expr pos:start="1893:37" pos:end="1893:40"><name pos:start="1893:37" pos:end="1893:40">addr</name></expr></argument>, <argument pos:start="1893:43" pos:end="1893:46"><expr pos:start="1893:43" pos:end="1893:46"><name pos:start="1893:43" pos:end="1893:46">addr</name></expr></argument>, <argument pos:start="1893:49" pos:end="1893:51"><expr pos:start="1893:49" pos:end="1893:51"><name pos:start="1893:49" pos:end="1893:51">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1895:21" pos:end="1895:34"><expr pos:start="1895:21" pos:end="1895:33"><call pos:start="1895:21" pos:end="1895:33"><name pos:start="1895:21" pos:end="1895:28">dead_tmp</name><argument_list pos:start="1895:29" pos:end="1895:33">(<argument pos:start="1895:30" pos:end="1895:32"><expr pos:start="1895:30" pos:end="1895:32"><name pos:start="1895:30" pos:end="1895:32">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1897:21" pos:end="1897:26">break;</break>

                <case pos:start="1899:17" pos:end="1899:23">case <expr pos:start="1899:22" pos:end="1899:22"><literal type="number" pos:start="1899:22" pos:end="1899:22">4</literal></expr>:</case> <comment type="block" pos:start="1899:25" pos:end="1899:47">/* Negative offset.  */</comment>

                    <expr_stmt pos:start="1901:21" pos:end="1901:55"><expr pos:start="1901:21" pos:end="1901:54"><call pos:start="1901:21" pos:end="1901:54"><name pos:start="1901:21" pos:end="1901:36">tcg_gen_addi_i32</name><argument_list pos:start="1901:37" pos:end="1901:54">(<argument pos:start="1901:38" pos:end="1901:41"><expr pos:start="1901:38" pos:end="1901:41"><name pos:start="1901:38" pos:end="1901:41">addr</name></expr></argument>, <argument pos:start="1901:44" pos:end="1901:47"><expr pos:start="1901:44" pos:end="1901:47"><name pos:start="1901:44" pos:end="1901:47">addr</name></expr></argument>, <argument pos:start="1901:50" pos:end="1901:53"><expr pos:start="1901:50" pos:end="1901:53"><operator pos:start="1901:50" pos:end="1901:50">-</operator><name pos:start="1901:51" pos:end="1901:53">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <break pos:start="1903:21" pos:end="1903:26">break;</break>

                <case pos:start="1905:17" pos:end="1905:23">case <expr pos:start="1905:22" pos:end="1905:22"><literal type="number" pos:start="1905:22" pos:end="1905:22">6</literal></expr>:</case> <comment type="block" pos:start="1905:25" pos:end="1905:46">/* User privilege.  */</comment>

                    <expr_stmt pos:start="1907:21" pos:end="1907:54"><expr pos:start="1907:21" pos:end="1907:53"><call pos:start="1907:21" pos:end="1907:53"><name pos:start="1907:21" pos:end="1907:36">tcg_gen_addi_i32</name><argument_list pos:start="1907:37" pos:end="1907:53">(<argument pos:start="1907:38" pos:end="1907:41"><expr pos:start="1907:38" pos:end="1907:41"><name pos:start="1907:38" pos:end="1907:41">addr</name></expr></argument>, <argument pos:start="1907:44" pos:end="1907:47"><expr pos:start="1907:44" pos:end="1907:47"><name pos:start="1907:44" pos:end="1907:47">addr</name></expr></argument>, <argument pos:start="1907:50" pos:end="1907:52"><expr pos:start="1907:50" pos:end="1907:52"><name pos:start="1907:50" pos:end="1907:52">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1909:21" pos:end="1909:29"><expr pos:start="1909:21" pos:end="1909:28"><name pos:start="1909:21" pos:end="1909:24">user</name> <operator pos:start="1909:26" pos:end="1909:26">=</operator> <literal type="number" pos:start="1909:28" pos:end="1909:28">1</literal></expr>;</expr_stmt>

                    <break pos:start="1911:21" pos:end="1911:26">break;</break>

                <case pos:start="1913:17" pos:end="1913:23">case <expr pos:start="1913:22" pos:end="1913:22"><literal type="number" pos:start="1913:22" pos:end="1913:22">1</literal></expr>:</case> <comment type="block" pos:start="1913:25" pos:end="1913:46">/* Post-decrement.  */</comment>

                    <expr_stmt pos:start="1915:21" pos:end="1915:31"><expr pos:start="1915:21" pos:end="1915:30"><name pos:start="1915:21" pos:end="1915:23">imm</name> <operator pos:start="1915:25" pos:end="1915:25">=</operator> <operator pos:start="1915:27" pos:end="1915:27">-</operator><name pos:start="1915:28" pos:end="1915:30">imm</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="1917:21" pos:end="1917:40">/* Fall through.  */</comment>

                <case pos:start="1919:17" pos:end="1919:23">case <expr pos:start="1919:22" pos:end="1919:22"><literal type="number" pos:start="1919:22" pos:end="1919:22">3</literal></expr>:</case> <comment type="block" pos:start="1919:25" pos:end="1919:46">/* Post-increment.  */</comment>

                    <expr_stmt pos:start="1921:21" pos:end="1921:32"><expr pos:start="1921:21" pos:end="1921:31"><name pos:start="1921:21" pos:end="1921:27">postinc</name> <operator pos:start="1921:29" pos:end="1921:29">=</operator> <literal type="number" pos:start="1921:31" pos:end="1921:31">1</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="1923:21" pos:end="1923:34"><expr pos:start="1923:21" pos:end="1923:33"><name pos:start="1923:21" pos:end="1923:29">writeback</name> <operator pos:start="1923:31" pos:end="1923:31">=</operator> <literal type="number" pos:start="1923:33" pos:end="1923:33">1</literal></expr>;</expr_stmt>

                    <break pos:start="1925:21" pos:end="1925:26">break;</break>

                <case pos:start="1927:17" pos:end="1927:23">case <expr pos:start="1927:22" pos:end="1927:22"><literal type="number" pos:start="1927:22" pos:end="1927:22">5</literal></expr>:</case> <comment type="block" pos:start="1927:25" pos:end="1927:45">/* Pre-decrement.  */</comment>

                    <expr_stmt pos:start="1929:21" pos:end="1929:31"><expr pos:start="1929:21" pos:end="1929:30"><name pos:start="1929:21" pos:end="1929:23">imm</name> <operator pos:start="1929:25" pos:end="1929:25">=</operator> <operator pos:start="1929:27" pos:end="1929:27">-</operator><name pos:start="1929:28" pos:end="1929:30">imm</name></expr>;</expr_stmt>

                    <comment type="block" pos:start="1931:21" pos:end="1931:40">/* Fall through.  */</comment>

                <case pos:start="1933:17" pos:end="1933:23">case <expr pos:start="1933:22" pos:end="1933:22"><literal type="number" pos:start="1933:22" pos:end="1933:22">7</literal></expr>:</case> <comment type="block" pos:start="1933:25" pos:end="1933:45">/* Pre-increment.  */</comment>

                    <expr_stmt pos:start="1935:21" pos:end="1935:54"><expr pos:start="1935:21" pos:end="1935:53"><call pos:start="1935:21" pos:end="1935:53"><name pos:start="1935:21" pos:end="1935:36">tcg_gen_addi_i32</name><argument_list pos:start="1935:37" pos:end="1935:53">(<argument pos:start="1935:38" pos:end="1935:41"><expr pos:start="1935:38" pos:end="1935:41"><name pos:start="1935:38" pos:end="1935:41">addr</name></expr></argument>, <argument pos:start="1935:44" pos:end="1935:47"><expr pos:start="1935:44" pos:end="1935:47"><name pos:start="1935:44" pos:end="1935:47">addr</name></expr></argument>, <argument pos:start="1935:50" pos:end="1935:52"><expr pos:start="1935:50" pos:end="1935:52"><name pos:start="1935:50" pos:end="1935:52">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                    <expr_stmt pos:start="1937:21" pos:end="1937:34"><expr pos:start="1937:21" pos:end="1937:33"><name pos:start="1937:21" pos:end="1937:29">writeback</name> <operator pos:start="1937:31" pos:end="1937:31">=</operator> <literal type="number" pos:start="1937:33" pos:end="1937:33">1</literal></expr>;</expr_stmt>

                    <break pos:start="1939:21" pos:end="1939:26">break;</break>

                <default pos:start="1941:17" pos:end="1941:24">default:</default>

                    <goto pos:start="1943:21" pos:end="1943:36">goto <name pos:start="1943:26" pos:end="1943:35">illegal_op</name>;</goto>

                </block_content>}</block></switch>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="1951:9" pos:end="1951:53"><expr pos:start="1951:9" pos:end="1951:52"><name pos:start="1951:9" pos:end="1951:10">op</name> <operator pos:start="1951:12" pos:end="1951:12">=</operator> <operator pos:start="1951:14" pos:end="1951:14">(</operator><operator pos:start="1951:15" pos:end="1951:15">(</operator><name pos:start="1951:16" pos:end="1951:19">insn</name> <operator pos:start="1951:21" pos:end="1951:22">&gt;&gt;</operator> <literal type="number" pos:start="1951:24" pos:end="1951:25">21</literal><operator pos:start="1951:26" pos:end="1951:26">)</operator> <operator pos:start="1951:28" pos:end="1951:28">&amp;</operator> <literal type="number" pos:start="1951:30" pos:end="1951:30">3</literal><operator pos:start="1951:31" pos:end="1951:31">)</operator> <operator pos:start="1951:33" pos:end="1951:33">|</operator> <operator pos:start="1951:35" pos:end="1951:35">(</operator><operator pos:start="1951:36" pos:end="1951:36">(</operator><name pos:start="1951:37" pos:end="1951:40">insn</name> <operator pos:start="1951:42" pos:end="1951:43">&gt;&gt;</operator> <literal type="number" pos:start="1951:45" pos:end="1951:46">22</literal><operator pos:start="1951:47" pos:end="1951:47">)</operator> <operator pos:start="1951:49" pos:end="1951:49">&amp;</operator> <literal type="number" pos:start="1951:51" pos:end="1951:51">4</literal><operator pos:start="1951:52" pos:end="1951:52">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="1953:9" pos:end="2017:9"><if pos:start="1953:9" pos:end="1995:9">if <condition pos:start="1953:12" pos:end="1953:29">(<expr pos:start="1953:13" pos:end="1953:28"><name pos:start="1953:13" pos:end="1953:16">insn</name> <operator pos:start="1953:18" pos:end="1953:18">&amp;</operator> <operator pos:start="1953:20" pos:end="1953:20">(</operator><literal type="number" pos:start="1953:21" pos:end="1953:21">1</literal> <operator pos:start="1953:23" pos:end="1953:24">&lt;&lt;</operator> <literal type="number" pos:start="1953:26" pos:end="1953:27">20</literal><operator pos:start="1953:28" pos:end="1953:28">)</operator></expr>)</condition> <block pos:start="1953:31" pos:end="1995:9">{<block_content pos:start="1957:13" pos:end="1993:13">

            <comment type="block" pos:start="1955:13" pos:end="1955:24">/* Load.  */</comment>

            <if_stmt pos:start="1957:13" pos:end="1993:13"><if pos:start="1957:13" pos:end="1965:13">if <condition pos:start="1957:16" pos:end="1957:36">(<expr pos:start="1957:17" pos:end="1957:35"><name pos:start="1957:17" pos:end="1957:18">rs</name> <operator pos:start="1957:20" pos:end="1957:21">==</operator> <literal type="number" pos:start="1957:23" pos:end="1957:24">15</literal> <operator pos:start="1957:26" pos:end="1957:27">&amp;&amp;</operator> <name pos:start="1957:29" pos:end="1957:30">op</name> <operator pos:start="1957:32" pos:end="1957:33">!=</operator> <literal type="number" pos:start="1957:35" pos:end="1957:35">2</literal></expr>)</condition> <block pos:start="1957:38" pos:end="1965:13">{<block_content pos:start="1959:17" pos:end="1961:36">

                <if_stmt pos:start="1959:17" pos:end="1961:36"><if pos:start="1959:17" pos:end="1961:36">if <condition pos:start="1959:20" pos:end="1959:27">(<expr pos:start="1959:21" pos:end="1959:26"><name pos:start="1959:21" pos:end="1959:22">op</name> <operator pos:start="1959:24" pos:end="1959:24">&amp;</operator> <literal type="number" pos:start="1959:26" pos:end="1959:26">2</literal></expr>)</condition><block type="pseudo" pos:start="1961:21" pos:end="1961:36"><block_content pos:start="1961:21" pos:end="1961:36">

                    <goto pos:start="1961:21" pos:end="1961:36">goto <name pos:start="1961:26" pos:end="1961:35">illegal_op</name>;</goto></block_content></block></if></if_stmt>

                <comment type="block" pos:start="1963:17" pos:end="1963:56">/* Memory hint.  Implemented as NOP.  */</comment>

            </block_content>}</block></if> <else pos:start="1965:15" pos:end="1993:13">else <block pos:start="1965:20" pos:end="1993:13">{<block_content pos:start="1967:17" pos:end="1991:17">

                <switch pos:start="1967:17" pos:end="1981:17">switch <condition pos:start="1967:24" pos:end="1967:27">(<expr pos:start="1967:25" pos:end="1967:26"><name pos:start="1967:25" pos:end="1967:26">op</name></expr>)</condition> <block pos:start="1967:29" pos:end="1981:17">{<block_content pos:start="1969:17" pos:end="1979:41">

                <case pos:start="1969:17" pos:end="1969:23">case <expr pos:start="1969:22" pos:end="1969:22"><literal type="number" pos:start="1969:22" pos:end="1969:22">0</literal></expr>:</case> <expr_stmt pos:start="1969:25" pos:end="1969:51"><expr pos:start="1969:25" pos:end="1969:50"><name pos:start="1969:25" pos:end="1969:27">tmp</name> <operator pos:start="1969:29" pos:end="1969:29">=</operator> <call pos:start="1969:31" pos:end="1969:50"><name pos:start="1969:31" pos:end="1969:38">gen_ld8u</name><argument_list pos:start="1969:39" pos:end="1969:50">(<argument pos:start="1969:40" pos:end="1969:43"><expr pos:start="1969:40" pos:end="1969:43"><name pos:start="1969:40" pos:end="1969:43">addr</name></expr></argument>, <argument pos:start="1969:46" pos:end="1969:49"><expr pos:start="1969:46" pos:end="1969:49"><name pos:start="1969:46" pos:end="1969:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="1969:53" pos:end="1969:58">break;</break>

                <case pos:start="1971:17" pos:end="1971:23">case <expr pos:start="1971:22" pos:end="1971:22"><literal type="number" pos:start="1971:22" pos:end="1971:22">4</literal></expr>:</case> <expr_stmt pos:start="1971:25" pos:end="1971:51"><expr pos:start="1971:25" pos:end="1971:50"><name pos:start="1971:25" pos:end="1971:27">tmp</name> <operator pos:start="1971:29" pos:end="1971:29">=</operator> <call pos:start="1971:31" pos:end="1971:50"><name pos:start="1971:31" pos:end="1971:38">gen_ld8s</name><argument_list pos:start="1971:39" pos:end="1971:50">(<argument pos:start="1971:40" pos:end="1971:43"><expr pos:start="1971:40" pos:end="1971:43"><name pos:start="1971:40" pos:end="1971:43">addr</name></expr></argument>, <argument pos:start="1971:46" pos:end="1971:49"><expr pos:start="1971:46" pos:end="1971:49"><name pos:start="1971:46" pos:end="1971:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="1971:53" pos:end="1971:58">break;</break>

                <case pos:start="1973:17" pos:end="1973:23">case <expr pos:start="1973:22" pos:end="1973:22"><literal type="number" pos:start="1973:22" pos:end="1973:22">1</literal></expr>:</case> <expr_stmt pos:start="1973:25" pos:end="1973:52"><expr pos:start="1973:25" pos:end="1973:51"><name pos:start="1973:25" pos:end="1973:27">tmp</name> <operator pos:start="1973:29" pos:end="1973:29">=</operator> <call pos:start="1973:31" pos:end="1973:51"><name pos:start="1973:31" pos:end="1973:39">gen_ld16u</name><argument_list pos:start="1973:40" pos:end="1973:51">(<argument pos:start="1973:41" pos:end="1973:44"><expr pos:start="1973:41" pos:end="1973:44"><name pos:start="1973:41" pos:end="1973:44">addr</name></expr></argument>, <argument pos:start="1973:47" pos:end="1973:50"><expr pos:start="1973:47" pos:end="1973:50"><name pos:start="1973:47" pos:end="1973:50">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="1973:54" pos:end="1973:59">break;</break>

                <case pos:start="1975:17" pos:end="1975:23">case <expr pos:start="1975:22" pos:end="1975:22"><literal type="number" pos:start="1975:22" pos:end="1975:22">5</literal></expr>:</case> <expr_stmt pos:start="1975:25" pos:end="1975:52"><expr pos:start="1975:25" pos:end="1975:51"><name pos:start="1975:25" pos:end="1975:27">tmp</name> <operator pos:start="1975:29" pos:end="1975:29">=</operator> <call pos:start="1975:31" pos:end="1975:51"><name pos:start="1975:31" pos:end="1975:39">gen_ld16s</name><argument_list pos:start="1975:40" pos:end="1975:51">(<argument pos:start="1975:41" pos:end="1975:44"><expr pos:start="1975:41" pos:end="1975:44"><name pos:start="1975:41" pos:end="1975:44">addr</name></expr></argument>, <argument pos:start="1975:47" pos:end="1975:50"><expr pos:start="1975:47" pos:end="1975:50"><name pos:start="1975:47" pos:end="1975:50">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="1975:54" pos:end="1975:59">break;</break>

                <case pos:start="1977:17" pos:end="1977:23">case <expr pos:start="1977:22" pos:end="1977:22"><literal type="number" pos:start="1977:22" pos:end="1977:22">2</literal></expr>:</case> <expr_stmt pos:start="1977:25" pos:end="1977:51"><expr pos:start="1977:25" pos:end="1977:50"><name pos:start="1977:25" pos:end="1977:27">tmp</name> <operator pos:start="1977:29" pos:end="1977:29">=</operator> <call pos:start="1977:31" pos:end="1977:50"><name pos:start="1977:31" pos:end="1977:38">gen_ld32</name><argument_list pos:start="1977:39" pos:end="1977:50">(<argument pos:start="1977:40" pos:end="1977:43"><expr pos:start="1977:40" pos:end="1977:43"><name pos:start="1977:40" pos:end="1977:43">addr</name></expr></argument>, <argument pos:start="1977:46" pos:end="1977:49"><expr pos:start="1977:46" pos:end="1977:49"><name pos:start="1977:46" pos:end="1977:49">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="1977:53" pos:end="1977:58">break;</break>

                <default pos:start="1979:17" pos:end="1979:24">default:</default> <goto pos:start="1979:26" pos:end="1979:41">goto <name pos:start="1979:31" pos:end="1979:40">illegal_op</name>;</goto>

                </block_content>}</block></switch>

                <if_stmt pos:start="1983:17" pos:end="1991:17"><if pos:start="1983:17" pos:end="1987:17">if <condition pos:start="1983:20" pos:end="1983:29">(<expr pos:start="1983:21" pos:end="1983:28"><name pos:start="1983:21" pos:end="1983:22">rs</name> <operator pos:start="1983:24" pos:end="1983:25">==</operator> <literal type="number" pos:start="1983:27" pos:end="1983:28">15</literal></expr>)</condition> <block pos:start="1983:31" pos:end="1987:17">{<block_content pos:start="1985:21" pos:end="1985:35">

                    <expr_stmt pos:start="1985:21" pos:end="1985:35"><expr pos:start="1985:21" pos:end="1985:34"><call pos:start="1985:21" pos:end="1985:34"><name pos:start="1985:21" pos:end="1985:26">gen_bx</name><argument_list pos:start="1985:27" pos:end="1985:34">(<argument pos:start="1985:28" pos:end="1985:28"><expr pos:start="1985:28" pos:end="1985:28"><name pos:start="1985:28" pos:end="1985:28">s</name></expr></argument>, <argument pos:start="1985:31" pos:end="1985:33"><expr pos:start="1985:31" pos:end="1985:33"><name pos:start="1985:31" pos:end="1985:33">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if> <else pos:start="1987:19" pos:end="1991:17">else <block pos:start="1987:24" pos:end="1991:17">{<block_content pos:start="1989:21" pos:end="1989:42">

                    <expr_stmt pos:start="1989:21" pos:end="1989:42"><expr pos:start="1989:21" pos:end="1989:41"><call pos:start="1989:21" pos:end="1989:41"><name pos:start="1989:21" pos:end="1989:29">store_reg</name><argument_list pos:start="1989:30" pos:end="1989:41">(<argument pos:start="1989:31" pos:end="1989:31"><expr pos:start="1989:31" pos:end="1989:31"><name pos:start="1989:31" pos:end="1989:31">s</name></expr></argument>, <argument pos:start="1989:34" pos:end="1989:35"><expr pos:start="1989:34" pos:end="1989:35"><name pos:start="1989:34" pos:end="1989:35">rs</name></expr></argument>, <argument pos:start="1989:38" pos:end="1989:40"><expr pos:start="1989:38" pos:end="1989:40"><name pos:start="1989:38" pos:end="1989:40">tmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></else></if_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="1995:11" pos:end="2017:9">else <block pos:start="1995:16" pos:end="2017:9">{<block_content pos:start="1999:13" pos:end="2015:13">

            <comment type="block" pos:start="1997:13" pos:end="1997:25">/* Store.  */</comment>

            <if_stmt pos:start="1999:13" pos:end="2001:32"><if pos:start="1999:13" pos:end="2001:32">if <condition pos:start="1999:16" pos:end="1999:25">(<expr pos:start="1999:17" pos:end="1999:24"><name pos:start="1999:17" pos:end="1999:18">rs</name> <operator pos:start="1999:20" pos:end="1999:21">==</operator> <literal type="number" pos:start="1999:23" pos:end="1999:24">15</literal></expr>)</condition><block type="pseudo" pos:start="2001:17" pos:end="2001:32"><block_content pos:start="2001:17" pos:end="2001:32">

                <goto pos:start="2001:17" pos:end="2001:32">goto <name pos:start="2001:22" pos:end="2001:31">illegal_op</name>;</goto></block_content></block></if></if_stmt>

            <expr_stmt pos:start="2003:13" pos:end="2003:34"><expr pos:start="2003:13" pos:end="2003:33"><name pos:start="2003:13" pos:end="2003:15">tmp</name> <operator pos:start="2003:17" pos:end="2003:17">=</operator> <call pos:start="2003:19" pos:end="2003:33"><name pos:start="2003:19" pos:end="2003:26">load_reg</name><argument_list pos:start="2003:27" pos:end="2003:33">(<argument pos:start="2003:28" pos:end="2003:28"><expr pos:start="2003:28" pos:end="2003:28"><name pos:start="2003:28" pos:end="2003:28">s</name></expr></argument>, <argument pos:start="2003:31" pos:end="2003:32"><expr pos:start="2003:31" pos:end="2003:32"><name pos:start="2003:31" pos:end="2003:32">rs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <switch pos:start="2005:13" pos:end="2015:13">switch <condition pos:start="2005:20" pos:end="2005:23">(<expr pos:start="2005:21" pos:end="2005:22"><name pos:start="2005:21" pos:end="2005:22">op</name></expr>)</condition> <block pos:start="2005:25" pos:end="2015:13">{<block_content pos:start="2007:13" pos:end="2013:37">

            <case pos:start="2007:13" pos:end="2007:19">case <expr pos:start="2007:18" pos:end="2007:18"><literal type="number" pos:start="2007:18" pos:end="2007:18">0</literal></expr>:</case> <expr_stmt pos:start="2007:21" pos:end="2007:45"><expr pos:start="2007:21" pos:end="2007:44"><call pos:start="2007:21" pos:end="2007:44"><name pos:start="2007:21" pos:end="2007:27">gen_st8</name><argument_list pos:start="2007:28" pos:end="2007:44">(<argument pos:start="2007:29" pos:end="2007:31"><expr pos:start="2007:29" pos:end="2007:31"><name pos:start="2007:29" pos:end="2007:31">tmp</name></expr></argument>, <argument pos:start="2007:34" pos:end="2007:37"><expr pos:start="2007:34" pos:end="2007:37"><name pos:start="2007:34" pos:end="2007:37">addr</name></expr></argument>, <argument pos:start="2007:40" pos:end="2007:43"><expr pos:start="2007:40" pos:end="2007:43"><name pos:start="2007:40" pos:end="2007:43">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="2007:47" pos:end="2007:52">break;</break>

            <case pos:start="2009:13" pos:end="2009:19">case <expr pos:start="2009:18" pos:end="2009:18"><literal type="number" pos:start="2009:18" pos:end="2009:18">1</literal></expr>:</case> <expr_stmt pos:start="2009:21" pos:end="2009:46"><expr pos:start="2009:21" pos:end="2009:45"><call pos:start="2009:21" pos:end="2009:45"><name pos:start="2009:21" pos:end="2009:28">gen_st16</name><argument_list pos:start="2009:29" pos:end="2009:45">(<argument pos:start="2009:30" pos:end="2009:32"><expr pos:start="2009:30" pos:end="2009:32"><name pos:start="2009:30" pos:end="2009:32">tmp</name></expr></argument>, <argument pos:start="2009:35" pos:end="2009:38"><expr pos:start="2009:35" pos:end="2009:38"><name pos:start="2009:35" pos:end="2009:38">addr</name></expr></argument>, <argument pos:start="2009:41" pos:end="2009:44"><expr pos:start="2009:41" pos:end="2009:44"><name pos:start="2009:41" pos:end="2009:44">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="2009:48" pos:end="2009:53">break;</break>

            <case pos:start="2011:13" pos:end="2011:19">case <expr pos:start="2011:18" pos:end="2011:18"><literal type="number" pos:start="2011:18" pos:end="2011:18">2</literal></expr>:</case> <expr_stmt pos:start="2011:21" pos:end="2011:46"><expr pos:start="2011:21" pos:end="2011:45"><call pos:start="2011:21" pos:end="2011:45"><name pos:start="2011:21" pos:end="2011:28">gen_st32</name><argument_list pos:start="2011:29" pos:end="2011:45">(<argument pos:start="2011:30" pos:end="2011:32"><expr pos:start="2011:30" pos:end="2011:32"><name pos:start="2011:30" pos:end="2011:32">tmp</name></expr></argument>, <argument pos:start="2011:35" pos:end="2011:38"><expr pos:start="2011:35" pos:end="2011:38"><name pos:start="2011:35" pos:end="2011:38">addr</name></expr></argument>, <argument pos:start="2011:41" pos:end="2011:44"><expr pos:start="2011:41" pos:end="2011:44"><name pos:start="2011:41" pos:end="2011:44">user</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="2011:48" pos:end="2011:53">break;</break>

            <default pos:start="2013:13" pos:end="2013:20">default:</default> <goto pos:start="2013:22" pos:end="2013:37">goto <name pos:start="2013:27" pos:end="2013:36">illegal_op</name>;</goto>

            </block_content>}</block></switch>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="2019:9" pos:end="2021:46"><if pos:start="2019:9" pos:end="2021:46">if <condition pos:start="2019:12" pos:end="2019:20">(<expr pos:start="2019:13" pos:end="2019:19"><name pos:start="2019:13" pos:end="2019:19">postinc</name></expr>)</condition><block type="pseudo" pos:start="2021:13" pos:end="2021:46"><block_content pos:start="2021:13" pos:end="2021:46">

            <expr_stmt pos:start="2021:13" pos:end="2021:46"><expr pos:start="2021:13" pos:end="2021:45"><call pos:start="2021:13" pos:end="2021:45"><name pos:start="2021:13" pos:end="2021:28">tcg_gen_addi_i32</name><argument_list pos:start="2021:29" pos:end="2021:45">(<argument pos:start="2021:30" pos:end="2021:33"><expr pos:start="2021:30" pos:end="2021:33"><name pos:start="2021:30" pos:end="2021:33">addr</name></expr></argument>, <argument pos:start="2021:36" pos:end="2021:39"><expr pos:start="2021:36" pos:end="2021:39"><name pos:start="2021:36" pos:end="2021:39">addr</name></expr></argument>, <argument pos:start="2021:42" pos:end="2021:44"><expr pos:start="2021:42" pos:end="2021:44"><name pos:start="2021:42" pos:end="2021:44">imm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="2023:9" pos:end="2031:9"><if pos:start="2023:9" pos:end="2027:9">if <condition pos:start="2023:12" pos:end="2023:22">(<expr pos:start="2023:13" pos:end="2023:21"><name pos:start="2023:13" pos:end="2023:21">writeback</name></expr>)</condition> <block pos:start="2023:24" pos:end="2027:9">{<block_content pos:start="2025:13" pos:end="2025:35">

            <expr_stmt pos:start="2025:13" pos:end="2025:35"><expr pos:start="2025:13" pos:end="2025:34"><call pos:start="2025:13" pos:end="2025:34"><name pos:start="2025:13" pos:end="2025:21">store_reg</name><argument_list pos:start="2025:22" pos:end="2025:34">(<argument pos:start="2025:23" pos:end="2025:23"><expr pos:start="2025:23" pos:end="2025:23"><name pos:start="2025:23" pos:end="2025:23">s</name></expr></argument>, <argument pos:start="2025:26" pos:end="2025:27"><expr pos:start="2025:26" pos:end="2025:27"><name pos:start="2025:26" pos:end="2025:27">rn</name></expr></argument>, <argument pos:start="2025:30" pos:end="2025:33"><expr pos:start="2025:30" pos:end="2025:33"><name pos:start="2025:30" pos:end="2025:33">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="2027:11" pos:end="2031:9">else <block pos:start="2027:16" pos:end="2031:9">{<block_content pos:start="2029:13" pos:end="2029:27">

            <expr_stmt pos:start="2029:13" pos:end="2029:27"><expr pos:start="2029:13" pos:end="2029:26"><call pos:start="2029:13" pos:end="2029:26"><name pos:start="2029:13" pos:end="2029:20">dead_tmp</name><argument_list pos:start="2029:21" pos:end="2029:26">(<argument pos:start="2029:22" pos:end="2029:25"><expr pos:start="2029:22" pos:end="2029:25"><name pos:start="2029:22" pos:end="2029:25">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        </block_content>}</block>

        <break pos:start="2035:9" pos:end="2035:14">break;</break>

    <default pos:start="2037:5" pos:end="2037:12">default:</default>

        <goto pos:start="2039:9" pos:end="2039:24">goto <name pos:start="2039:14" pos:end="2039:23">illegal_op</name>;</goto>

    </block_content>}</block></switch>

    <return pos:start="2043:5" pos:end="2043:13">return <expr pos:start="2043:12" pos:end="2043:12"><literal type="number" pos:start="2043:12" pos:end="2043:12">0</literal></expr>;</return>

<label pos:start="2045:1" pos:end="2045:11"><name pos:start="2045:1" pos:end="2045:10">illegal_op</name>:</label>

    <return pos:start="2047:5" pos:end="2047:13">return <expr pos:start="2047:12" pos:end="2047:12"><literal type="number" pos:start="2047:12" pos:end="2047:12">1</literal></expr>;</return>

</block_content>}</block></function>
</unit>
