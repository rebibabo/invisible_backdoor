<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/951.c" pos:tabs="8"><function pos:start="1:1" pos:end="77:1"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:24">pci_read</name><parameter_list pos:start="1:25" pos:end="1:70">(<parameter pos:start="1:26" pos:end="1:37"><decl pos:start="1:26" pos:end="1:37"><type pos:start="1:26" pos:end="1:37"><name pos:start="1:26" pos:end="1:29">void</name> <modifier pos:start="1:31" pos:end="1:31">*</modifier></type><name pos:start="1:32" pos:end="1:37">opaque</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:50"><decl pos:start="1:40" pos:end="1:50"><type pos:start="1:40" pos:end="1:50"><name pos:start="1:40" pos:end="1:45">hwaddr</name></type> <name pos:start="1:47" pos:end="1:50">addr</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:69"><decl pos:start="1:53" pos:end="1:69"><type pos:start="1:53" pos:end="1:69"><name pos:start="1:53" pos:end="1:60">unsigned</name> <name pos:start="1:62" pos:end="1:64">int</name></type> <name pos:start="1:66" pos:end="1:69">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="77:1">{<block_content pos:start="5:5" pos:end="75:15">

    <decl_stmt pos:start="5:5" pos:end="5:31"><decl pos:start="5:5" pos:end="5:30"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AcpiPciHpState</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:21">s</name> <init pos:start="5:23" pos:end="5:30">= <expr pos:start="5:25" pos:end="5:30"><name pos:start="5:25" pos:end="5:30">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:21"><decl pos:start="7:5" pos:end="7:20"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">val</name> <init pos:start="7:18" pos:end="7:20">= <expr pos:start="7:20" pos:end="7:20"><literal type="number" pos:start="7:20" pos:end="7:20">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:32"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">bsel</name> <init pos:start="9:14" pos:end="9:32">= <expr pos:start="9:16" pos:end="9:32"><name pos:start="9:16" pos:end="9:32"><name pos:start="9:16" pos:end="9:16">s</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:32">hotplug_select</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="17:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:54">(<expr pos:start="13:9" pos:end="13:53"><name pos:start="13:9" pos:end="13:26"><name pos:start="13:9" pos:end="13:12">bsel</name> <argument_list type="generic" pos:start="13:14" pos:end="13:26">&lt; <argument pos:start="13:16" pos:end="13:24"><expr pos:start="13:16" pos:end="13:24"><literal type="number" pos:start="13:16" pos:end="13:16">0</literal> <operator pos:start="13:18" pos:end="13:19">||</operator> <name pos:start="13:21" pos:end="13:24">bsel</name></expr></argument> &gt;</argument_list></name> <name pos:start="13:28" pos:end="13:53">ACPI_PCIHP_MAX_HOTPLUG_BUS</name></expr>)</condition> <block pos:start="13:56" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:17">

        <return pos:start="15:9" pos:end="15:17">return <expr pos:start="15:16" pos:end="15:16"><literal type="number" pos:start="15:16" pos:end="15:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="21:5" pos:end="71:5">switch <condition pos:start="21:12" pos:end="21:17">(<expr pos:start="21:13" pos:end="21:16"><name pos:start="21:13" pos:end="21:16">addr</name></expr>)</condition> <block pos:start="21:19" pos:end="71:5">{<block_content pos:start="23:5" pos:end="69:14">

    <case pos:start="23:5" pos:end="23:21">case <expr pos:start="23:10" pos:end="23:20"><name pos:start="23:10" pos:end="23:20">PCI_UP_BASE</name></expr>:</case>

        <expr_stmt pos:start="25:9" pos:end="25:48"><expr pos:start="25:9" pos:end="25:47"><name pos:start="25:9" pos:end="25:11">val</name> <operator pos:start="25:13" pos:end="25:13">=</operator> <name pos:start="25:15" pos:end="25:44"><name pos:start="25:15" pos:end="25:15">s</name><operator pos:start="25:16" pos:end="25:17">-&gt;</operator><name pos:start="25:18" pos:end="25:38">acpi_pcihp_pci_status</name><index pos:start="25:39" pos:end="25:44">[<expr pos:start="25:40" pos:end="25:43"><name pos:start="25:40" pos:end="25:43">bsel</name></expr>]</index></name><operator pos:start="25:45" pos:end="25:45">.</operator><name pos:start="25:46" pos:end="25:47">up</name></expr>;</expr_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:28">(<expr pos:start="27:13" pos:end="27:27"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:27"><name pos:start="27:14" pos:end="27:14">s</name><operator pos:start="27:15" pos:end="27:16">-&gt;</operator><name pos:start="27:17" pos:end="27:27">legacy_piix</name></name></expr>)</condition> <block pos:start="27:30" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:50">

            <expr_stmt pos:start="29:13" pos:end="29:50"><expr pos:start="29:13" pos:end="29:49"><name pos:start="29:13" pos:end="29:42"><name pos:start="29:13" pos:end="29:13">s</name><operator pos:start="29:14" pos:end="29:15">-&gt;</operator><name pos:start="29:16" pos:end="29:36">acpi_pcihp_pci_status</name><index pos:start="29:37" pos:end="29:42">[<expr pos:start="29:38" pos:end="29:41"><name pos:start="29:38" pos:end="29:41">bsel</name></expr>]</index></name><operator pos:start="29:43" pos:end="29:43">.</operator><name pos:start="29:44" pos:end="29:45">up</name> <operator pos:start="29:47" pos:end="29:47">=</operator> <literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><call pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:26">ACPI_PCIHP_DPRINTF</name><argument_list pos:start="33:27" pos:end="33:60">(<argument pos:start="33:28" pos:end="33:54"><expr pos:start="33:28" pos:end="33:54"><literal type="string" pos:start="33:28" pos:end="33:42">"pci_up_read %"</literal> <name pos:start="33:44" pos:end="33:49">PRIu32</name> <literal type="string" pos:start="33:51" pos:end="33:54">"\n"</literal></expr></argument>, <argument pos:start="33:57" pos:end="33:59"><expr pos:start="33:57" pos:end="33:59"><name pos:start="33:57" pos:end="33:59">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="35:9" pos:end="35:14">break;</break>

    <case pos:start="37:5" pos:end="37:23">case <expr pos:start="37:10" pos:end="37:22"><name pos:start="37:10" pos:end="37:22">PCI_DOWN_BASE</name></expr>:</case>

        <expr_stmt pos:start="39:9" pos:end="39:50"><expr pos:start="39:9" pos:end="39:49"><name pos:start="39:9" pos:end="39:11">val</name> <operator pos:start="39:13" pos:end="39:13">=</operator> <name pos:start="39:15" pos:end="39:44"><name pos:start="39:15" pos:end="39:15">s</name><operator pos:start="39:16" pos:end="39:17">-&gt;</operator><name pos:start="39:18" pos:end="39:38">acpi_pcihp_pci_status</name><index pos:start="39:39" pos:end="39:44">[<expr pos:start="39:40" pos:end="39:43"><name pos:start="39:40" pos:end="39:43">bsel</name></expr>]</index></name><operator pos:start="39:45" pos:end="39:45">.</operator><name pos:start="39:46" pos:end="39:49">down</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:63"><expr pos:start="41:9" pos:end="41:62"><call pos:start="41:9" pos:end="41:62"><name pos:start="41:9" pos:end="41:26">ACPI_PCIHP_DPRINTF</name><argument_list pos:start="41:27" pos:end="41:62">(<argument pos:start="41:28" pos:end="41:56"><expr pos:start="41:28" pos:end="41:56"><literal type="string" pos:start="41:28" pos:end="41:44">"pci_down_read %"</literal> <name pos:start="41:46" pos:end="41:51">PRIu32</name> <literal type="string" pos:start="41:53" pos:end="41:56">"\n"</literal></expr></argument>, <argument pos:start="41:59" pos:end="41:61"><expr pos:start="41:59" pos:end="41:61"><name pos:start="41:59" pos:end="41:61">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="43:9" pos:end="43:14">break;</break>

    <case pos:start="45:5" pos:end="45:21">case <expr pos:start="45:10" pos:end="45:20"><name pos:start="45:10" pos:end="45:20">PCI_EJ_BASE</name></expr>:</case>

        <comment type="block" pos:start="47:9" pos:end="47:36">/* No feature defined yet */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:67"><expr pos:start="49:9" pos:end="49:66"><call pos:start="49:9" pos:end="49:66"><name pos:start="49:9" pos:end="49:26">ACPI_PCIHP_DPRINTF</name><argument_list pos:start="49:27" pos:end="49:66">(<argument pos:start="49:28" pos:end="49:60"><expr pos:start="49:28" pos:end="49:60"><literal type="string" pos:start="49:28" pos:end="49:48">"pci_features_read %"</literal> <name pos:start="49:50" pos:end="49:55">PRIu32</name> <literal type="string" pos:start="49:57" pos:end="49:60">"\n"</literal></expr></argument>, <argument pos:start="49:63" pos:end="49:65"><expr pos:start="49:63" pos:end="49:65"><name pos:start="49:63" pos:end="49:65">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="51:9" pos:end="51:14">break;</break>

    <case pos:start="53:5" pos:end="53:22">case <expr pos:start="53:10" pos:end="53:21"><name pos:start="53:10" pos:end="53:21">PCI_RMV_BASE</name></expr>:</case>

        <expr_stmt pos:start="55:9" pos:end="55:60"><expr pos:start="55:9" pos:end="55:59"><name pos:start="55:9" pos:end="55:11">val</name> <operator pos:start="55:13" pos:end="55:13">=</operator> <name pos:start="55:15" pos:end="55:44"><name pos:start="55:15" pos:end="55:15">s</name><operator pos:start="55:16" pos:end="55:17">-&gt;</operator><name pos:start="55:18" pos:end="55:38">acpi_pcihp_pci_status</name><index pos:start="55:39" pos:end="55:44">[<expr pos:start="55:40" pos:end="55:43"><name pos:start="55:40" pos:end="55:43">bsel</name></expr>]</index></name><operator pos:start="55:45" pos:end="55:45">.</operator><name pos:start="55:46" pos:end="55:59">hotplug_enable</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:62"><expr pos:start="57:9" pos:end="57:61"><call pos:start="57:9" pos:end="57:61"><name pos:start="57:9" pos:end="57:26">ACPI_PCIHP_DPRINTF</name><argument_list pos:start="57:27" pos:end="57:61">(<argument pos:start="57:28" pos:end="57:55"><expr pos:start="57:28" pos:end="57:55"><literal type="string" pos:start="57:28" pos:end="57:43">"pci_rmv_read %"</literal> <name pos:start="57:45" pos:end="57:50">PRIu32</name> <literal type="string" pos:start="57:52" pos:end="57:55">"\n"</literal></expr></argument>, <argument pos:start="57:58" pos:end="57:60"><expr pos:start="57:58" pos:end="57:60"><name pos:start="57:58" pos:end="57:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>

    <case pos:start="61:5" pos:end="61:22">case <expr pos:start="61:10" pos:end="61:21"><name pos:start="61:10" pos:end="61:21">PCI_SEL_BASE</name></expr>:</case>

        <expr_stmt pos:start="63:9" pos:end="63:32"><expr pos:start="63:9" pos:end="63:31"><name pos:start="63:9" pos:end="63:11">val</name> <operator pos:start="63:13" pos:end="63:13">=</operator> <name pos:start="63:15" pos:end="63:31"><name pos:start="63:15" pos:end="63:15">s</name><operator pos:start="63:16" pos:end="63:17">-&gt;</operator><name pos:start="63:18" pos:end="63:31">hotplug_select</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:62"><expr pos:start="65:9" pos:end="65:61"><call pos:start="65:9" pos:end="65:61"><name pos:start="65:9" pos:end="65:26">ACPI_PCIHP_DPRINTF</name><argument_list pos:start="65:27" pos:end="65:61">(<argument pos:start="65:28" pos:end="65:55"><expr pos:start="65:28" pos:end="65:55"><literal type="string" pos:start="65:28" pos:end="65:43">"pci_sel_read %"</literal> <name pos:start="65:45" pos:end="65:50">PRIu32</name> <literal type="string" pos:start="65:52" pos:end="65:55">"\n"</literal></expr></argument>, <argument pos:start="65:58" pos:end="65:60"><expr pos:start="65:58" pos:end="65:60"><name pos:start="65:58" pos:end="65:60">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <default pos:start="67:5" pos:end="67:12">default:</default>

        <break pos:start="69:9" pos:end="69:14">break;</break>

    </block_content>}</block></switch>



    <return pos:start="75:5" pos:end="75:15">return <expr pos:start="75:12" pos:end="75:14"><name pos:start="75:12" pos:end="75:14">val</name></expr>;</return>

</block_content>}</block></function>
</unit>
