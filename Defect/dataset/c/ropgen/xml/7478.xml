<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/7478.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">ff_thread_flush</name><parameter_list pos:start="1:21" pos:end="1:43">(<parameter pos:start="1:22" pos:end="1:42"><decl pos:start="1:22" pos:end="1:42"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:35">AVCodecContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:42">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:39">

    <decl_stmt pos:start="5:5" pos:end="5:52"><decl pos:start="5:5" pos:end="5:51"><type pos:start="5:5" pos:end="5:24"><name pos:start="5:5" pos:end="5:22">FrameThreadContext</name> <modifier pos:start="5:24" pos:end="5:24">*</modifier></type><name pos:start="5:25" pos:end="5:28">fctx</name> <init pos:start="5:30" pos:end="5:51">= <expr pos:start="5:32" pos:end="5:51"><name pos:start="5:32" pos:end="5:51"><name pos:start="5:32" pos:end="5:36">avctx</name><operator pos:start="5:37" pos:end="5:38">-&gt;</operator><name pos:start="5:39" pos:end="5:51">thread_opaque</name></name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="9:38"><if pos:start="9:5" pos:end="9:38">if <condition pos:start="9:8" pos:end="9:30">(<expr pos:start="9:9" pos:end="9:29"><operator pos:start="9:9" pos:end="9:9">!</operator><name pos:start="9:10" pos:end="9:29"><name pos:start="9:10" pos:end="9:14">avctx</name><operator pos:start="9:15" pos:end="9:16">-&gt;</operator><name pos:start="9:17" pos:end="9:29">thread_opaque</name></name></expr>)</condition><block type="pseudo" pos:start="9:32" pos:end="9:38"><block_content pos:start="9:32" pos:end="9:38"> <return pos:start="9:32" pos:end="9:38">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:57"><expr pos:start="13:5" pos:end="13:56"><call pos:start="13:5" pos:end="13:56"><name pos:start="13:5" pos:end="13:29">park_frame_worker_threads</name><argument_list pos:start="13:30" pos:end="13:56">(<argument pos:start="13:31" pos:end="13:34"><expr pos:start="13:31" pos:end="13:34"><name pos:start="13:31" pos:end="13:34">fctx</name></expr></argument>, <argument pos:start="13:37" pos:end="13:55"><expr pos:start="13:37" pos:end="13:55"><name pos:start="13:37" pos:end="13:55"><name pos:start="13:37" pos:end="13:41">avctx</name><operator pos:start="13:42" pos:end="13:43">-&gt;</operator><name pos:start="13:44" pos:end="13:55">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="25:5"><if pos:start="15:5" pos:end="25:5">if <condition pos:start="15:8" pos:end="15:26">(<expr pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:25"><name pos:start="15:9" pos:end="15:12">fctx</name><operator pos:start="15:13" pos:end="15:14">-&gt;</operator><name pos:start="15:15" pos:end="15:25">prev_thread</name></name></expr>)</condition> <block pos:start="15:28" pos:end="25:5">{<block_content pos:start="17:9" pos:end="23:56">

        <if_stmt pos:start="17:9" pos:end="19:92"><if pos:start="17:9" pos:end="19:92">if <condition pos:start="17:12" pos:end="17:51">(<expr pos:start="17:13" pos:end="17:50"><name pos:start="17:13" pos:end="17:29"><name pos:start="17:13" pos:end="17:16">fctx</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:29">prev_thread</name></name> <operator pos:start="17:31" pos:end="17:32">!=</operator> <operator pos:start="17:34" pos:end="17:34">&amp;</operator><name pos:start="17:35" pos:end="17:50"><name pos:start="17:35" pos:end="17:38">fctx</name><operator pos:start="17:39" pos:end="17:40">-&gt;</operator><name pos:start="17:41" pos:end="17:47">threads</name><index pos:start="17:48" pos:end="17:50">[<expr pos:start="17:49" pos:end="17:49"><literal type="number" pos:start="17:49" pos:end="17:49">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:92"><block_content pos:start="19:13" pos:end="19:92">

            <expr_stmt pos:start="19:13" pos:end="19:92"><expr pos:start="19:13" pos:end="19:91"><call pos:start="19:13" pos:end="19:91"><name pos:start="19:13" pos:end="19:38">update_context_from_thread</name><argument_list pos:start="19:39" pos:end="19:91">(<argument pos:start="19:40" pos:end="19:61"><expr pos:start="19:40" pos:end="19:61"><name pos:start="19:40" pos:end="19:55"><name pos:start="19:40" pos:end="19:43">fctx</name><operator pos:start="19:44" pos:end="19:45">-&gt;</operator><name pos:start="19:46" pos:end="19:52">threads</name><index pos:start="19:53" pos:end="19:55">[<expr pos:start="19:54" pos:end="19:54"><literal type="number" pos:start="19:54" pos:end="19:54">0</literal></expr>]</index></name><operator pos:start="19:56" pos:end="19:56">.</operator><name pos:start="19:57" pos:end="19:61">avctx</name></expr></argument>, <argument pos:start="19:64" pos:end="19:87"><expr pos:start="19:64" pos:end="19:87"><name pos:start="19:64" pos:end="19:87"><name pos:start="19:64" pos:end="19:67">fctx</name><operator pos:start="19:68" pos:end="19:69">-&gt;</operator><name pos:start="19:70" pos:end="19:80">prev_thread</name><operator pos:start="19:81" pos:end="19:82">-&gt;</operator><name pos:start="19:83" pos:end="19:87">avctx</name></name></expr></argument>, <argument pos:start="19:90" pos:end="19:90"><expr pos:start="19:90" pos:end="19:90"><literal type="number" pos:start="19:90" pos:end="19:90">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="21:9" pos:end="23:56"><if pos:start="21:9" pos:end="23:56">if <condition pos:start="21:12" pos:end="21:32">(<expr pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:31"><name pos:start="21:13" pos:end="21:17">avctx</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:24">codec</name><operator pos:start="21:25" pos:end="21:26">-&gt;</operator><name pos:start="21:27" pos:end="21:31">flush</name></name></expr>)</condition><block type="pseudo" pos:start="23:13" pos:end="23:56"><block_content pos:start="23:13" pos:end="23:56">

            <expr_stmt pos:start="23:13" pos:end="23:56"><expr pos:start="23:13" pos:end="23:55"><call pos:start="23:13" pos:end="23:55"><name pos:start="23:13" pos:end="23:31"><name pos:start="23:13" pos:end="23:17">avctx</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:24">codec</name><operator pos:start="23:25" pos:end="23:26">-&gt;</operator><name pos:start="23:27" pos:end="23:31">flush</name></name><argument_list pos:start="23:32" pos:end="23:55">(<argument pos:start="23:33" pos:end="23:54"><expr pos:start="23:33" pos:end="23:54"><name pos:start="23:33" pos:end="23:48"><name pos:start="23:33" pos:end="23:36">fctx</name><operator pos:start="23:37" pos:end="23:38">-&gt;</operator><name pos:start="23:39" pos:end="23:45">threads</name><index pos:start="23:46" pos:end="23:48">[<expr pos:start="23:47" pos:end="23:47"><literal type="number" pos:start="23:47" pos:end="23:47">0</literal></expr>]</index></name><operator pos:start="23:49" pos:end="23:49">.</operator><name pos:start="23:50" pos:end="23:54">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:50"><expr pos:start="29:5" pos:end="29:49"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:8">fctx</name><operator pos:start="29:9" pos:end="29:10">-&gt;</operator><name pos:start="29:11" pos:end="29:23">next_decoding</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <name pos:start="29:27" pos:end="29:45"><name pos:start="29:27" pos:end="29:30">fctx</name><operator pos:start="29:31" pos:end="29:32">-&gt;</operator><name pos:start="29:33" pos:end="29:45">next_finished</name></name> <operator pos:start="29:47" pos:end="29:47">=</operator> <literal type="number" pos:start="29:49" pos:end="29:49">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:23"><expr pos:start="31:5" pos:end="31:22"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:8">fctx</name><operator pos:start="31:9" pos:end="31:10">-&gt;</operator><name pos:start="31:11" pos:end="31:18">delaying</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:22">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:29"><expr pos:start="33:5" pos:end="33:28"><name pos:start="33:5" pos:end="33:21"><name pos:start="33:5" pos:end="33:8">fctx</name><operator pos:start="33:9" pos:end="33:10">-&gt;</operator><name pos:start="33:11" pos:end="33:21">prev_thread</name></name> <operator pos:start="33:23" pos:end="33:23">=</operator> <name pos:start="33:25" pos:end="33:28">NULL</name></expr>;</expr_stmt>

    <comment type="line" pos:start="35:5" pos:end="35:71">// Make sure decode flush calls with size=0 won't return old frames</comment>

    <for pos:start="37:5" pos:end="39:39">for <control pos:start="37:9" pos:end="37:49">(<init pos:start="37:10" pos:end="37:19"><decl pos:start="37:10" pos:end="37:18"><type pos:start="37:10" pos:end="37:12"><name pos:start="37:10" pos:end="37:12">int</name></type> <name pos:start="37:14" pos:end="37:14">i</name> <init pos:start="37:16" pos:end="37:18">= <expr pos:start="37:18" pos:end="37:18"><literal type="number" pos:start="37:18" pos:end="37:18">0</literal></expr></init></decl>;</init> <condition pos:start="37:21" pos:end="37:44"><expr pos:start="37:21" pos:end="37:43"><name pos:start="37:21" pos:end="37:21">i</name> <operator pos:start="37:23" pos:end="37:23">&lt;</operator> <name pos:start="37:25" pos:end="37:43"><name pos:start="37:25" pos:end="37:29">avctx</name><operator pos:start="37:30" pos:end="37:31">-&gt;</operator><name pos:start="37:32" pos:end="37:43">thread_count</name></name></expr>;</condition> <incr pos:start="37:46" pos:end="37:48"><expr pos:start="37:46" pos:end="37:48"><name pos:start="37:46" pos:end="37:46">i</name><operator pos:start="37:47" pos:end="37:48">++</operator></expr></incr>)</control><block type="pseudo" pos:start="39:9" pos:end="39:39"><block_content pos:start="39:9" pos:end="39:39">

        <expr_stmt pos:start="39:9" pos:end="39:39"><expr pos:start="39:9" pos:end="39:38"><name pos:start="39:9" pos:end="39:24"><name pos:start="39:9" pos:end="39:12">fctx</name><operator pos:start="39:13" pos:end="39:14">-&gt;</operator><name pos:start="39:15" pos:end="39:21">threads</name><index pos:start="39:22" pos:end="39:24">[<expr pos:start="39:23" pos:end="39:23"><name pos:start="39:23" pos:end="39:23">i</name></expr>]</index></name><operator pos:start="39:25" pos:end="39:25">.</operator><name pos:start="39:26" pos:end="39:34">got_frame</name> <operator pos:start="39:36" pos:end="39:36">=</operator> <literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr>;</expr_stmt></block_content></block></for>

</block_content>}</block></function>
</unit>
