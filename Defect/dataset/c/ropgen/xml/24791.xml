<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/24791.c" pos:tabs="8"><function pos:start="1:1" pos:end="48:47"><type pos:start="1:1" pos:end="1:15"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:15">uint64_t</name></type> <name pos:start="1:17" pos:end="1:34">get_cluster_offset</name><parameter_list pos:start="1:35" pos:end="2:61">(<parameter pos:start="1:36" pos:end="1:55"><decl pos:start="1:36" pos:end="1:55"><type pos:start="1:36" pos:end="1:55"><name pos:start="1:36" pos:end="1:51">BlockDriverState</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">bs</name></decl></parameter>,
                                   <parameter pos:start="2:36" pos:end="2:50"><decl pos:start="2:36" pos:end="2:50"><type pos:start="2:36" pos:end="2:50"><name pos:start="2:36" pos:end="2:43">uint64_t</name></type> <name pos:start="2:45" pos:end="2:50">offset</name></decl></parameter>, <parameter pos:start="2:53" pos:end="2:60"><decl pos:start="2:53" pos:end="2:60"><type pos:start="2:53" pos:end="2:60"><name pos:start="2:53" pos:end="2:55">int</name> <modifier pos:start="2:57" pos:end="2:57">*</modifier></type><name pos:start="2:58" pos:end="2:60">num</name></decl></parameter>)</parameter_list>
<block pos:start="3:1" pos:end="48:47">{<block_content pos:start="4:5" pos:end="48:47">
    <decl_stmt pos:start="4:5" pos:end="4:34"><decl pos:start="4:5" pos:end="4:33"><type pos:start="4:5" pos:end="4:19"><name pos:start="4:5" pos:end="4:17">BDRVQcowState</name> <modifier pos:start="4:19" pos:end="4:19">*</modifier></type><name pos:start="4:20" pos:end="4:20">s</name> <init pos:start="4:22" pos:end="4:33">= <expr pos:start="4:24" pos:end="4:33"><name pos:start="4:24" pos:end="4:33"><name pos:start="4:24" pos:end="4:25">bs</name><operator pos:start="4:26" pos:end="4:27">-&gt;</operator><name pos:start="4:28" pos:end="4:33">opaque</name></name></expr></init></decl>;</decl_stmt>
    <decl_stmt pos:start="5:5" pos:end="5:27"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:16">l1_index</name></decl>, <decl pos:start="5:19" pos:end="5:26"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:19" pos:end="5:26">l2_index</name></decl>;</decl_stmt>
    <decl_stmt pos:start="6:5" pos:end="6:50"><decl pos:start="6:5" pos:end="6:22"><type pos:start="6:5" pos:end="6:12"><name pos:start="6:5" pos:end="6:12">uint64_t</name></type> <name pos:start="6:14" pos:end="6:22">l2_offset</name></decl>, <decl pos:start="6:25" pos:end="6:33"><type ref="prev" pos:start="6:5" pos:end="6:12"><modifier pos:start="6:25" pos:end="6:25">*</modifier></type><name pos:start="6:26" pos:end="6:33">l2_table</name></decl>, <decl pos:start="6:36" pos:end="6:49"><type ref="prev" pos:start="6:5" pos:end="6:12"/><name pos:start="6:36" pos:end="6:49">cluster_offset</name></decl>;</decl_stmt>
    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:15">l1_bits</name></decl>, <decl pos:start="7:18" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:18">c</name></decl>;</decl_stmt>
    <decl_stmt pos:start="8:5" pos:end="8:63"><decl pos:start="8:5" pos:end="8:24"><type pos:start="8:5" pos:end="8:7"><name pos:start="8:5" pos:end="8:7">int</name></type> <name pos:start="8:9" pos:end="8:24">index_in_cluster</name></decl>, <decl pos:start="8:27" pos:end="8:38"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:27" pos:end="8:38">nb_available</name></decl>, <decl pos:start="8:41" pos:end="8:49"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:41" pos:end="8:49">nb_needed</name></decl>, <decl pos:start="8:52" pos:end="8:62"><type ref="prev" pos:start="8:5" pos:end="8:7"/><name pos:start="8:52" pos:end="8:62">nb_clusters</name></decl>;</decl_stmt>
    <expr_stmt pos:start="9:5" pos:end="9:64"><expr pos:start="9:5" pos:end="9:63"><name pos:start="9:5" pos:end="9:20">index_in_cluster</name> <operator pos:start="9:22" pos:end="9:22">=</operator> <operator pos:start="9:24" pos:end="9:24">(</operator><name pos:start="9:25" pos:end="9:30">offset</name> <operator pos:start="9:32" pos:end="9:33">&gt;&gt;</operator> <literal type="number" pos:start="9:35" pos:end="9:35">9</literal><operator pos:start="9:36" pos:end="9:36">)</operator> <operator pos:start="9:38" pos:end="9:38">&amp;</operator> <operator pos:start="9:40" pos:end="9:40">(</operator><name pos:start="9:41" pos:end="9:58"><name pos:start="9:41" pos:end="9:41">s</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:58">cluster_sectors</name></name> <operator pos:start="9:60" pos:end="9:60">-</operator> <literal type="number" pos:start="9:62" pos:end="9:62">1</literal><operator pos:start="9:63" pos:end="9:63">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="10:5" pos:end="10:40"><expr pos:start="10:5" pos:end="10:39"><name pos:start="10:5" pos:end="10:13">nb_needed</name> <operator pos:start="10:15" pos:end="10:15">=</operator> <operator pos:start="10:17" pos:end="10:17">*</operator><name pos:start="10:18" pos:end="10:20">num</name> <operator pos:start="10:22" pos:end="10:22">+</operator> <name pos:start="10:24" pos:end="10:39">index_in_cluster</name></expr>;</expr_stmt>
    <expr_stmt pos:start="11:5" pos:end="11:43"><expr pos:start="11:5" pos:end="11:42"><name pos:start="11:5" pos:end="11:11">l1_bits</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <name pos:start="11:15" pos:end="11:24"><name pos:start="11:15" pos:end="11:15">s</name><operator pos:start="11:16" pos:end="11:17">-&gt;</operator><name pos:start="11:18" pos:end="11:24">l2_bits</name></name> <operator pos:start="11:26" pos:end="11:26">+</operator> <name pos:start="11:28" pos:end="11:42"><name pos:start="11:28" pos:end="11:28">s</name><operator pos:start="11:29" pos:end="11:30">-&gt;</operator><name pos:start="11:31" pos:end="11:42">cluster_bits</name></name></expr>;</expr_stmt>
    <comment type="block" pos:start="12:5" pos:end="14:7">/* compute how many bytes there are between the offset and
     * the end of the l1 entry
     */</comment>
    <expr_stmt pos:start="15:5" pos:end="15:68"><expr pos:start="15:5" pos:end="15:67"><name pos:start="15:5" pos:end="15:16">nb_available</name> <operator pos:start="15:18" pos:end="15:18">=</operator> <operator pos:start="15:20" pos:end="15:20">(</operator><literal type="number" pos:start="15:21" pos:end="15:21">1</literal> <operator pos:start="15:23" pos:end="15:24">&lt;&lt;</operator> <name pos:start="15:26" pos:end="15:32">l1_bits</name><operator pos:start="15:33" pos:end="15:33">)</operator> <operator pos:start="15:35" pos:end="15:35">-</operator> <operator pos:start="15:37" pos:end="15:37">(</operator><name pos:start="15:38" pos:end="15:43">offset</name> <operator pos:start="15:45" pos:end="15:45">&amp;</operator> <operator pos:start="15:47" pos:end="15:47">(</operator><operator pos:start="15:48" pos:end="15:48">(</operator><literal type="number" pos:start="15:49" pos:end="15:49">1</literal> <operator pos:start="15:51" pos:end="15:52">&lt;&lt;</operator> <name pos:start="15:54" pos:end="15:60">l1_bits</name><operator pos:start="15:61" pos:end="15:61">)</operator> <operator pos:start="15:63" pos:end="15:63">-</operator> <literal type="number" pos:start="15:65" pos:end="15:65">1</literal><operator pos:start="15:66" pos:end="15:66">)</operator><operator pos:start="15:67" pos:end="15:67">)</operator></expr>;</expr_stmt>
    <comment type="block" pos:start="16:5" pos:end="16:49">/* compute the number of available sectors */</comment>
    <expr_stmt pos:start="17:5" pos:end="17:58"><expr pos:start="17:5" pos:end="17:57"><name pos:start="17:5" pos:end="17:16">nb_available</name> <operator pos:start="17:18" pos:end="17:18">=</operator> <operator pos:start="17:20" pos:end="17:20">(</operator><name pos:start="17:21" pos:end="17:32">nb_available</name> <operator pos:start="17:34" pos:end="17:35">&gt;&gt;</operator> <literal type="number" pos:start="17:37" pos:end="17:37">9</literal><operator pos:start="17:38" pos:end="17:38">)</operator> <operator pos:start="17:40" pos:end="17:40">+</operator> <name pos:start="17:42" pos:end="17:57">index_in_cluster</name></expr>;</expr_stmt>
    <expr_stmt pos:start="18:5" pos:end="18:23"><expr pos:start="18:5" pos:end="18:22"><name pos:start="18:5" pos:end="18:18">cluster_offset</name> <operator pos:start="18:20" pos:end="18:20">=</operator> <literal type="number" pos:start="18:22" pos:end="18:22">0</literal></expr>;</expr_stmt>
    <comment type="block" pos:start="19:5" pos:end="19:48">/* seek the the l2 offset in the l1 table */</comment>
    <expr_stmt pos:start="20:5" pos:end="20:33"><expr pos:start="20:5" pos:end="20:32"><name pos:start="20:5" pos:end="20:12">l1_index</name> <operator pos:start="20:14" pos:end="20:14">=</operator> <name pos:start="20:16" pos:end="20:21">offset</name> <operator pos:start="20:23" pos:end="20:24">&gt;&gt;</operator> <name pos:start="20:26" pos:end="20:32">l1_bits</name></expr>;</expr_stmt>
    <if_stmt pos:start="21:5" pos:end="22:17"><if pos:start="21:5" pos:end="22:17">if <condition pos:start="21:8" pos:end="21:31">(<expr pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:16">l1_index</name> <operator pos:start="21:18" pos:end="21:19">&gt;=</operator> <name pos:start="21:21" pos:end="21:30"><name pos:start="21:21" pos:end="21:21">s</name><operator pos:start="21:22" pos:end="21:23">-&gt;</operator><name pos:start="21:24" pos:end="21:30">l1_size</name></name></expr>)</condition><block type="pseudo" pos:start="22:9" pos:end="22:17"><block_content pos:start="22:9" pos:end="22:17">
        <goto pos:start="22:9" pos:end="22:17">goto <name pos:start="22:14" pos:end="22:16">out</name>;</goto></block_content></block></if></if_stmt>
    <expr_stmt pos:start="23:5" pos:end="23:38"><expr pos:start="23:5" pos:end="23:37"><name pos:start="23:5" pos:end="23:13">l2_offset</name> <operator pos:start="23:15" pos:end="23:15">=</operator> <name pos:start="23:17" pos:end="23:37"><name pos:start="23:17" pos:end="23:17">s</name><operator pos:start="23:18" pos:end="23:19">-&gt;</operator><name pos:start="23:20" pos:end="23:27">l1_table</name><index pos:start="23:28" pos:end="23:37">[<expr pos:start="23:29" pos:end="23:36"><name pos:start="23:29" pos:end="23:36">l1_index</name></expr>]</index></name></expr>;</expr_stmt>
    <comment type="block" pos:start="24:5" pos:end="24:50">/* seek the l2 table of the given l2 offset */</comment>
    <if_stmt pos:start="25:5" pos:end="26:17"><if pos:start="25:5" pos:end="26:17">if <condition pos:start="25:8" pos:end="25:19">(<expr pos:start="25:9" pos:end="25:18"><operator pos:start="25:9" pos:end="25:9">!</operator><name pos:start="25:10" pos:end="25:18">l2_offset</name></expr>)</condition><block type="pseudo" pos:start="26:9" pos:end="26:17"><block_content pos:start="26:9" pos:end="26:17">
        <goto pos:start="26:9" pos:end="26:17">goto <name pos:start="26:14" pos:end="26:16">out</name>;</goto></block_content></block></if></if_stmt>
    <comment type="block" pos:start="27:5" pos:end="27:37">/* load the l2 table in memory */</comment>
    <expr_stmt pos:start="28:5" pos:end="28:36"><expr pos:start="28:5" pos:end="28:35"><name pos:start="28:5" pos:end="28:13">l2_offset</name> <operator pos:start="28:15" pos:end="28:16">&amp;=</operator> <operator pos:start="28:18" pos:end="28:18">~</operator><name pos:start="28:19" pos:end="28:35">QCOW_OFLAG_COPIED</name></expr>;</expr_stmt>
    <expr_stmt pos:start="29:5" pos:end="29:38"><expr pos:start="29:5" pos:end="29:37"><name pos:start="29:5" pos:end="29:12">l2_table</name> <operator pos:start="29:14" pos:end="29:14">=</operator> <call pos:start="29:16" pos:end="29:37"><name pos:start="29:16" pos:end="29:22">l2_load</name><argument_list pos:start="29:23" pos:end="29:37">(<argument pos:start="29:24" pos:end="29:25"><expr pos:start="29:24" pos:end="29:25"><name pos:start="29:24" pos:end="29:25">bs</name></expr></argument>, <argument pos:start="29:28" pos:end="29:36"><expr pos:start="29:28" pos:end="29:36"><name pos:start="29:28" pos:end="29:36">l2_offset</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="30:5" pos:end="31:17"><if pos:start="30:5" pos:end="31:17">if <condition pos:start="30:8" pos:end="30:25">(<expr pos:start="30:9" pos:end="30:24"><name pos:start="30:9" pos:end="30:16">l2_table</name> <operator pos:start="30:18" pos:end="30:19">==</operator> <name pos:start="30:21" pos:end="30:24">NULL</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:17"><block_content pos:start="31:9" pos:end="31:17">
        <return pos:start="31:9" pos:end="31:17">return <expr pos:start="31:16" pos:end="31:16"><literal type="number" pos:start="31:16" pos:end="31:16">0</literal></expr>;</return></block_content></block></if></if_stmt>
    <comment type="block" pos:start="32:5" pos:end="32:59">/* find the cluster offset for the given disk offset */</comment>
    <expr_stmt pos:start="33:5" pos:end="33:62"><expr pos:start="33:5" pos:end="33:61"><name pos:start="33:5" pos:end="33:12">l2_index</name> <operator pos:start="33:14" pos:end="33:14">=</operator> <operator pos:start="33:16" pos:end="33:16">(</operator><name pos:start="33:17" pos:end="33:22">offset</name> <operator pos:start="33:24" pos:end="33:25">&gt;&gt;</operator> <name pos:start="33:27" pos:end="33:41"><name pos:start="33:27" pos:end="33:27">s</name><operator pos:start="33:28" pos:end="33:29">-&gt;</operator><name pos:start="33:30" pos:end="33:41">cluster_bits</name></name><operator pos:start="33:42" pos:end="33:42">)</operator> <operator pos:start="33:44" pos:end="33:44">&amp;</operator> <operator pos:start="33:46" pos:end="33:46">(</operator><name pos:start="33:47" pos:end="33:56"><name pos:start="33:47" pos:end="33:47">s</name><operator pos:start="33:48" pos:end="33:49">-&gt;</operator><name pos:start="33:50" pos:end="33:56">l2_size</name></name> <operator pos:start="33:58" pos:end="33:58">-</operator> <literal type="number" pos:start="33:60" pos:end="33:60">1</literal><operator pos:start="33:61" pos:end="33:61">)</operator></expr>;</expr_stmt>
    <expr_stmt pos:start="34:5" pos:end="34:53"><expr pos:start="34:5" pos:end="34:52"><name pos:start="34:5" pos:end="34:18">cluster_offset</name> <operator pos:start="34:20" pos:end="34:20">=</operator> <call pos:start="34:22" pos:end="34:52"><name pos:start="34:22" pos:end="34:32">be64_to_cpu</name><argument_list pos:start="34:33" pos:end="34:52">(<argument pos:start="34:34" pos:end="34:51"><expr pos:start="34:34" pos:end="34:51"><name pos:start="34:34" pos:end="34:51"><name pos:start="34:34" pos:end="34:41">l2_table</name><index pos:start="34:42" pos:end="34:51">[<expr pos:start="34:43" pos:end="34:50"><name pos:start="34:43" pos:end="34:50">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:15">nb_clusters</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:53"><name pos:start="35:19" pos:end="35:34">size_to_clusters</name><argument_list pos:start="35:35" pos:end="35:53">(<argument pos:start="35:36" pos:end="35:36"><expr pos:start="35:36" pos:end="35:36"><name pos:start="35:36" pos:end="35:36">s</name></expr></argument>, <argument pos:start="35:39" pos:end="35:52"><expr pos:start="35:39" pos:end="35:52"><name pos:start="35:39" pos:end="35:47">nb_needed</name> <operator pos:start="35:49" pos:end="35:50">&lt;&lt;</operator> <literal type="number" pos:start="35:52" pos:end="35:52">9</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    <if_stmt pos:start="36:5" pos:end="48:47"><if pos:start="36:5" pos:end="39:5">if <condition pos:start="36:8" pos:end="36:24">(<expr pos:start="36:9" pos:end="36:23"><operator pos:start="36:9" pos:end="36:9">!</operator><name pos:start="36:10" pos:end="36:23">cluster_offset</name></expr>)</condition> <block pos:start="36:26" pos:end="39:5">{<block_content pos:start="38:9" pos:end="38:77">
        <comment type="block" pos:start="37:9" pos:end="37:39">/* how many empty clusters ? */</comment>
        <expr_stmt pos:start="38:9" pos:end="38:77"><expr pos:start="38:9" pos:end="38:76"><name pos:start="38:9" pos:end="38:9">c</name> <operator pos:start="38:11" pos:end="38:11">=</operator> <call pos:start="38:13" pos:end="38:76"><name pos:start="38:13" pos:end="38:42">count_contiguous_free_clusters</name><argument_list pos:start="38:43" pos:end="38:76">(<argument pos:start="38:44" pos:end="38:54"><expr pos:start="38:44" pos:end="38:54"><name pos:start="38:44" pos:end="38:54">nb_clusters</name></expr></argument>, <argument pos:start="38:57" pos:end="38:75"><expr pos:start="38:57" pos:end="38:75"><operator pos:start="38:57" pos:end="38:57">&amp;</operator><name pos:start="38:58" pos:end="38:75"><name pos:start="38:58" pos:end="38:65">l2_table</name><index pos:start="38:66" pos:end="38:75">[<expr pos:start="38:67" pos:end="38:74"><name pos:start="38:67" pos:end="38:74">l2_index</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
    </block_content>}</block></if> <else pos:start="39:7" pos:end="48:47">else <block pos:start="39:12" pos:end="48:47">{<block_content pos:start="41:9" pos:end="48:47">
        <comment type="block" pos:start="40:9" pos:end="40:43">/* how many allocated clusters ? */</comment>
        <expr_stmt pos:start="41:9" pos:end="42:59"><expr pos:start="41:9" pos:end="42:58"><name pos:start="41:9" pos:end="41:9">c</name> <operator pos:start="41:11" pos:end="41:11">=</operator> <call pos:start="41:13" pos:end="42:58"><name pos:start="41:13" pos:end="41:37">count_contiguous_clusters</name><argument_list pos:start="41:38" pos:end="42:58">(<argument pos:start="41:39" pos:end="41:49"><expr pos:start="41:39" pos:end="41:49"><name pos:start="41:39" pos:end="41:49">nb_clusters</name></expr></argument>, <argument pos:start="41:52" pos:end="41:66"><expr pos:start="41:52" pos:end="41:66"><name pos:start="41:52" pos:end="41:66"><name pos:start="41:52" pos:end="41:52">s</name><operator pos:start="41:53" pos:end="41:54">-&gt;</operator><name pos:start="41:55" pos:end="41:66">cluster_size</name></name></expr></argument>,
                <argument pos:start="42:17" pos:end="42:35"><expr pos:start="42:17" pos:end="42:35"><operator pos:start="42:17" pos:end="42:17">&amp;</operator><name pos:start="42:18" pos:end="42:35"><name pos:start="42:18" pos:end="42:25">l2_table</name><index pos:start="42:26" pos:end="42:35">[<expr pos:start="42:27" pos:end="42:34"><name pos:start="42:27" pos:end="42:34">l2_index</name></expr>]</index></name></expr></argument>, <argument pos:start="42:38" pos:end="42:38"><expr pos:start="42:38" pos:end="42:38"><literal type="number" pos:start="42:38" pos:end="42:38">0</literal></expr></argument>, <argument pos:start="42:41" pos:end="42:57"><expr pos:start="42:41" pos:end="42:57"><name pos:start="42:41" pos:end="42:57">QCOW_OFLAG_COPIED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>
   <expr_stmt pos:start="43:4" pos:end="43:43"><expr pos:start="43:4" pos:end="43:42"><name pos:start="43:4" pos:end="43:15">nb_available</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <operator pos:start="43:19" pos:end="43:19">(</operator><name pos:start="43:20" pos:end="43:20">c</name> <operator pos:start="43:22" pos:end="43:22">*</operator> <name pos:start="43:24" pos:end="43:41"><name pos:start="43:24" pos:end="43:24">s</name><operator pos:start="43:25" pos:end="43:26">-&gt;</operator><name pos:start="43:27" pos:end="43:41">cluster_sectors</name></name><operator pos:start="43:42" pos:end="43:42">)</operator></expr>;</expr_stmt>
<label pos:start="44:1" pos:end="44:4"><name pos:start="44:1" pos:end="44:3">out</name>:</label>
    <if_stmt pos:start="45:5" pos:end="46:33"><if pos:start="45:5" pos:end="46:33">if <condition pos:start="45:8" pos:end="45:33">(<expr pos:start="45:9" pos:end="45:32"><name pos:start="45:9" pos:end="45:20">nb_available</name> <operator pos:start="45:22" pos:end="45:22">&gt;</operator> <name pos:start="45:24" pos:end="45:32">nb_needed</name></expr>)</condition><block type="pseudo" pos:start="46:9" pos:end="46:33"><block_content pos:start="46:9" pos:end="46:33">
        <expr_stmt pos:start="46:9" pos:end="46:33"><expr pos:start="46:9" pos:end="46:32"><name pos:start="46:9" pos:end="46:20">nb_available</name> <operator pos:start="46:22" pos:end="46:22">=</operator> <name pos:start="46:24" pos:end="46:32">nb_needed</name></expr>;</expr_stmt></block_content></block></if></if_stmt>
    <expr_stmt pos:start="47:5" pos:end="47:43"><expr pos:start="47:5" pos:end="47:42"><operator pos:start="47:5" pos:end="47:5">*</operator><name pos:start="47:6" pos:end="47:8">num</name> <operator pos:start="47:10" pos:end="47:10">=</operator> <name pos:start="47:12" pos:end="47:23">nb_available</name> <operator pos:start="47:25" pos:end="47:25">-</operator> <name pos:start="47:27" pos:end="47:42">index_in_cluster</name></expr>;</expr_stmt>
    <return pos:start="48:5" pos:end="48:47">return <expr pos:start="48:12" pos:end="48:46"><name pos:start="48:12" pos:end="48:25">cluster_offset</name> <operator pos:start="48:27" pos:end="48:27">&amp;</operator> <operator pos:start="48:29" pos:end="48:29">~</operator><name pos:start="48:30" pos:end="48:46">QCOW_OFLAG_COPIED</name></expr>;</return></block_content></block></else></if_stmt></block_content></block></function></unit>
