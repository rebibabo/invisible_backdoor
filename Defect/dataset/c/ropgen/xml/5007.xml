<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/5007.c" pos:tabs="8"><function pos:start="1:1" pos:end="461:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:50">avc_loopfilter_luma_intra_edge_hor_msa</name><parameter_list pos:start="1:51" pos:end="7:70">(<parameter pos:start="1:52" pos:end="1:64"><decl pos:start="1:52" pos:end="1:64"><type pos:start="1:52" pos:end="1:64"><name pos:start="1:52" pos:end="1:58">uint8_t</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:64">data</name></decl></parameter>,

                                                   <parameter pos:start="3:52" pos:end="3:67"><decl pos:start="3:52" pos:end="3:67"><type pos:start="3:52" pos:end="3:67"><name pos:start="3:52" pos:end="3:58">uint8_t</name></type> <name pos:start="3:60" pos:end="3:67">alpha_in</name></decl></parameter>,

                                                   <parameter pos:start="5:52" pos:end="5:66"><decl pos:start="5:52" pos:end="5:66"><type pos:start="5:52" pos:end="5:66"><name pos:start="5:52" pos:end="5:58">uint8_t</name></type> <name pos:start="5:60" pos:end="5:66">beta_in</name></decl></parameter>,

                                                   <parameter pos:start="7:52" pos:end="7:69"><decl pos:start="7:52" pos:end="7:69"><type pos:start="7:52" pos:end="7:69"><name pos:start="7:52" pos:end="7:59">uint32_t</name></type> <name pos:start="7:61" pos:end="7:69">img_width</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="461:1">{<block_content pos:start="11:5" pos:end="459:5">

    <decl_stmt pos:start="11:5" pos:end="11:45"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:9"><name pos:start="11:5" pos:end="11:9">v16u8</name></type> <name pos:start="11:11" pos:end="11:20">p2_asub_p0</name></decl>, <decl pos:start="11:23" pos:end="11:32"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:23" pos:end="11:32">q2_asub_q0</name></decl>, <decl pos:start="11:35" pos:end="11:44"><type ref="prev" pos:start="11:5" pos:end="11:9"/><name pos:start="11:35" pos:end="11:44">p0_asub_q0</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:15"><type pos:start="13:5" pos:end="13:9"><name pos:start="13:5" pos:end="13:9">v16u8</name></type> <name pos:start="13:11" pos:end="13:15">alpha</name></decl>, <decl pos:start="13:18" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:9"/><name pos:start="13:18" pos:end="13:21">beta</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:68"><decl pos:start="15:5" pos:end="15:22"><type pos:start="15:5" pos:end="15:9"><name pos:start="15:5" pos:end="15:9">v16u8</name></type> <name pos:start="15:11" pos:end="15:22">is_less_than</name></decl>, <decl pos:start="15:25" pos:end="15:41"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:25" pos:end="15:41">is_less_than_beta</name></decl>, <decl pos:start="15:44" pos:end="15:67"><type ref="prev" pos:start="15:5" pos:end="15:9"/><name pos:start="15:44" pos:end="15:67">negate_is_less_than_beta</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:33"><decl pos:start="17:5" pos:end="17:12"><type pos:start="17:5" pos:end="17:9"><name pos:start="17:5" pos:end="17:9">v16u8</name></type> <name pos:start="17:11" pos:end="17:12">p2</name></decl>, <decl pos:start="17:15" pos:end="17:16"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:15" pos:end="17:16">p1</name></decl>, <decl pos:start="17:19" pos:end="17:20"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:19" pos:end="17:20">p0</name></decl>, <decl pos:start="17:23" pos:end="17:24"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:23" pos:end="17:24">q0</name></decl>, <decl pos:start="17:27" pos:end="17:28"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:27" pos:end="17:28">q1</name></decl>, <decl pos:start="17:31" pos:end="17:32"><type ref="prev" pos:start="17:5" pos:end="17:9"/><name pos:start="17:31" pos:end="17:32">q2</name></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:73"><decl pos:start="19:5" pos:end="19:16"><type pos:start="19:5" pos:end="19:9"><name pos:start="19:5" pos:end="19:9">v16u8</name></type> <name pos:start="19:11" pos:end="19:16">p3_org</name></decl>, <decl pos:start="19:19" pos:end="19:24"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:19" pos:end="19:24">p2_org</name></decl>, <decl pos:start="19:27" pos:end="19:32"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:27" pos:end="19:32">p1_org</name></decl>, <decl pos:start="19:35" pos:end="19:40"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:35" pos:end="19:40">p0_org</name></decl>, <decl pos:start="19:43" pos:end="19:48"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:43" pos:end="19:48">q0_org</name></decl>, <decl pos:start="19:51" pos:end="19:56"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:51" pos:end="19:56">q1_org</name></decl>, <decl pos:start="19:59" pos:end="19:64"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:59" pos:end="19:64">q2_org</name></decl>, <decl pos:start="19:67" pos:end="19:72"><type ref="prev" pos:start="19:5" pos:end="19:9"/><name pos:start="19:67" pos:end="19:72">q3_org</name></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:49"><decl pos:start="21:5" pos:end="21:18"><type pos:start="21:5" pos:end="21:9"><name pos:start="21:5" pos:end="21:9">v8i16</name></type> <name pos:start="21:11" pos:end="21:18">p1_org_r</name></decl>, <decl pos:start="21:21" pos:end="21:28"><type ref="prev" pos:start="21:5" pos:end="21:9"/><name pos:start="21:21" pos:end="21:28">p0_org_r</name></decl>, <decl pos:start="21:31" pos:end="21:38"><type ref="prev" pos:start="21:5" pos:end="21:9"/><name pos:start="21:31" pos:end="21:38">q0_org_r</name></decl>, <decl pos:start="21:41" pos:end="21:48"><type ref="prev" pos:start="21:5" pos:end="21:9"/><name pos:start="21:41" pos:end="21:48">q1_org_r</name></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:49"><decl pos:start="23:5" pos:end="23:18"><type pos:start="23:5" pos:end="23:9"><name pos:start="23:5" pos:end="23:9">v8i16</name></type> <name pos:start="23:11" pos:end="23:18">p1_org_l</name></decl>, <decl pos:start="23:21" pos:end="23:28"><type ref="prev" pos:start="23:5" pos:end="23:9"/><name pos:start="23:21" pos:end="23:28">p0_org_l</name></decl>, <decl pos:start="23:31" pos:end="23:38"><type ref="prev" pos:start="23:5" pos:end="23:9"/><name pos:start="23:31" pos:end="23:38">q0_org_l</name></decl>, <decl pos:start="23:41" pos:end="23:48"><type ref="prev" pos:start="23:5" pos:end="23:9"/><name pos:start="23:41" pos:end="23:48">q1_org_l</name></decl>;</decl_stmt>

    <decl_stmt pos:start="25:5" pos:end="25:23"><decl pos:start="25:5" pos:end="25:22"><type pos:start="25:5" pos:end="25:9"><name pos:start="25:5" pos:end="25:9">v8i16</name></type> <name pos:start="25:11" pos:end="25:14">p2_r</name> <init pos:start="25:16" pos:end="25:22">= <expr pos:start="25:18" pos:end="25:22"><block pos:start="25:18" pos:end="25:22">{ <expr pos:start="25:20" pos:end="25:20"><literal type="number" pos:start="25:20" pos:end="25:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="27:5" pos:end="27:23"><decl pos:start="27:5" pos:end="27:22"><type pos:start="27:5" pos:end="27:9"><name pos:start="27:5" pos:end="27:9">v8i16</name></type> <name pos:start="27:11" pos:end="27:14">p1_r</name> <init pos:start="27:16" pos:end="27:22">= <expr pos:start="27:18" pos:end="27:22"><block pos:start="27:18" pos:end="27:22">{ <expr pos:start="27:20" pos:end="27:20"><literal type="number" pos:start="27:20" pos:end="27:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="29:5" pos:end="29:23"><decl pos:start="29:5" pos:end="29:22"><type pos:start="29:5" pos:end="29:9"><name pos:start="29:5" pos:end="29:9">v8i16</name></type> <name pos:start="29:11" pos:end="29:14">p0_r</name> <init pos:start="29:16" pos:end="29:22">= <expr pos:start="29:18" pos:end="29:22"><block pos:start="29:18" pos:end="29:22">{ <expr pos:start="29:20" pos:end="29:20"><literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="31:5" pos:end="31:23"><decl pos:start="31:5" pos:end="31:22"><type pos:start="31:5" pos:end="31:9"><name pos:start="31:5" pos:end="31:9">v8i16</name></type> <name pos:start="31:11" pos:end="31:14">q0_r</name> <init pos:start="31:16" pos:end="31:22">= <expr pos:start="31:18" pos:end="31:22"><block pos:start="31:18" pos:end="31:22">{ <expr pos:start="31:20" pos:end="31:20"><literal type="number" pos:start="31:20" pos:end="31:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="33:5" pos:end="33:23"><decl pos:start="33:5" pos:end="33:22"><type pos:start="33:5" pos:end="33:9"><name pos:start="33:5" pos:end="33:9">v8i16</name></type> <name pos:start="33:11" pos:end="33:14">q1_r</name> <init pos:start="33:16" pos:end="33:22">= <expr pos:start="33:18" pos:end="33:22"><block pos:start="33:18" pos:end="33:22">{ <expr pos:start="33:20" pos:end="33:20"><literal type="number" pos:start="33:20" pos:end="33:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="35:5" pos:end="35:23"><decl pos:start="35:5" pos:end="35:22"><type pos:start="35:5" pos:end="35:9"><name pos:start="35:5" pos:end="35:9">v8i16</name></type> <name pos:start="35:11" pos:end="35:14">q2_r</name> <init pos:start="35:16" pos:end="35:22">= <expr pos:start="35:18" pos:end="35:22"><block pos:start="35:18" pos:end="35:22">{ <expr pos:start="35:20" pos:end="35:20"><literal type="number" pos:start="35:20" pos:end="35:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="37:5" pos:end="37:23"><decl pos:start="37:5" pos:end="37:22"><type pos:start="37:5" pos:end="37:9"><name pos:start="37:5" pos:end="37:9">v8i16</name></type> <name pos:start="37:11" pos:end="37:14">p2_l</name> <init pos:start="37:16" pos:end="37:22">= <expr pos:start="37:18" pos:end="37:22"><block pos:start="37:18" pos:end="37:22">{ <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="39:5" pos:end="39:23"><decl pos:start="39:5" pos:end="39:22"><type pos:start="39:5" pos:end="39:9"><name pos:start="39:5" pos:end="39:9">v8i16</name></type> <name pos:start="39:11" pos:end="39:14">p1_l</name> <init pos:start="39:16" pos:end="39:22">= <expr pos:start="39:18" pos:end="39:22"><block pos:start="39:18" pos:end="39:22">{ <expr pos:start="39:20" pos:end="39:20"><literal type="number" pos:start="39:20" pos:end="39:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="41:5" pos:end="41:23"><decl pos:start="41:5" pos:end="41:22"><type pos:start="41:5" pos:end="41:9"><name pos:start="41:5" pos:end="41:9">v8i16</name></type> <name pos:start="41:11" pos:end="41:14">p0_l</name> <init pos:start="41:16" pos:end="41:22">= <expr pos:start="41:18" pos:end="41:22"><block pos:start="41:18" pos:end="41:22">{ <expr pos:start="41:20" pos:end="41:20"><literal type="number" pos:start="41:20" pos:end="41:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="43:5" pos:end="43:23"><decl pos:start="43:5" pos:end="43:22"><type pos:start="43:5" pos:end="43:9"><name pos:start="43:5" pos:end="43:9">v8i16</name></type> <name pos:start="43:11" pos:end="43:14">q0_l</name> <init pos:start="43:16" pos:end="43:22">= <expr pos:start="43:18" pos:end="43:22"><block pos:start="43:18" pos:end="43:22">{ <expr pos:start="43:20" pos:end="43:20"><literal type="number" pos:start="43:20" pos:end="43:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="45:5" pos:end="45:23"><decl pos:start="45:5" pos:end="45:22"><type pos:start="45:5" pos:end="45:9"><name pos:start="45:5" pos:end="45:9">v8i16</name></type> <name pos:start="45:11" pos:end="45:14">q1_l</name> <init pos:start="45:16" pos:end="45:22">= <expr pos:start="45:18" pos:end="45:22"><block pos:start="45:18" pos:end="45:22">{ <expr pos:start="45:20" pos:end="45:20"><literal type="number" pos:start="45:20" pos:end="45:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="47:5" pos:end="47:23"><decl pos:start="47:5" pos:end="47:22"><type pos:start="47:5" pos:end="47:9"><name pos:start="47:5" pos:end="47:9">v8i16</name></type> <name pos:start="47:11" pos:end="47:14">q2_l</name> <init pos:start="47:16" pos:end="47:22">= <expr pos:start="47:18" pos:end="47:22"><block pos:start="47:18" pos:end="47:22">{ <expr pos:start="47:20" pos:end="47:20"><literal type="number" pos:start="47:20" pos:end="47:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="49:5" pos:end="49:19"><decl pos:start="49:5" pos:end="49:18"><type pos:start="49:5" pos:end="49:9"><name pos:start="49:5" pos:end="49:9">v16u8</name></type> <name pos:start="49:11" pos:end="49:18">tmp_flag</name></decl>;</decl_stmt>

    <decl_stmt pos:start="51:5" pos:end="51:23"><decl pos:start="51:5" pos:end="51:22"><type pos:start="51:5" pos:end="51:9"><name pos:start="51:5" pos:end="51:9">v16i8</name></type> <name pos:start="51:11" pos:end="51:14">zero</name> <init pos:start="51:16" pos:end="51:22">= <expr pos:start="51:18" pos:end="51:22"><block pos:start="51:18" pos:end="51:22">{ <expr pos:start="51:20" pos:end="51:20"><literal type="number" pos:start="51:20" pos:end="51:20">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="55:5" pos:end="55:43"><expr pos:start="55:5" pos:end="55:42"><name pos:start="55:5" pos:end="55:9">alpha</name> <operator pos:start="55:11" pos:end="55:11">=</operator> <operator pos:start="55:13" pos:end="55:13">(</operator><name pos:start="55:14" pos:end="55:18">v16u8</name><operator pos:start="55:19" pos:end="55:19">)</operator> <call pos:start="55:21" pos:end="55:42"><name pos:start="55:21" pos:end="55:32">__msa_fill_b</name><argument_list pos:start="55:33" pos:end="55:42">(<argument pos:start="55:34" pos:end="55:41"><expr pos:start="55:34" pos:end="55:41"><name pos:start="55:34" pos:end="55:41">alpha_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:41"><expr pos:start="57:5" pos:end="57:40"><name pos:start="57:5" pos:end="57:8">beta</name> <operator pos:start="57:10" pos:end="57:10">=</operator> <operator pos:start="57:12" pos:end="57:12">(</operator><name pos:start="57:13" pos:end="57:17">v16u8</name><operator pos:start="57:18" pos:end="57:18">)</operator> <call pos:start="57:20" pos:end="57:40"><name pos:start="57:20" pos:end="57:31">__msa_fill_b</name><argument_list pos:start="57:32" pos:end="57:40">(<argument pos:start="57:33" pos:end="57:39"><expr pos:start="57:33" pos:end="57:39"><name pos:start="57:33" pos:end="57:39">beta_in</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:46"><expr pos:start="61:5" pos:end="61:45"><name pos:start="61:5" pos:end="61:10">p1_org</name> <operator pos:start="61:12" pos:end="61:12">=</operator> <call pos:start="61:14" pos:end="61:45"><name pos:start="61:14" pos:end="61:20">LOAD_UB</name><argument_list pos:start="61:21" pos:end="61:45">(<argument pos:start="61:22" pos:end="61:44"><expr pos:start="61:22" pos:end="61:44"><name pos:start="61:22" pos:end="61:25">data</name> <operator pos:start="61:27" pos:end="61:27">-</operator> <operator pos:start="61:29" pos:end="61:29">(</operator><name pos:start="61:30" pos:end="61:38">img_width</name> <operator pos:start="61:40" pos:end="61:41">&lt;&lt;</operator> <literal type="number" pos:start="61:43" pos:end="61:43">1</literal><operator pos:start="61:44" pos:end="61:44">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:39"><expr pos:start="63:5" pos:end="63:38"><name pos:start="63:5" pos:end="63:10">p0_org</name> <operator pos:start="63:12" pos:end="63:12">=</operator> <call pos:start="63:14" pos:end="63:38"><name pos:start="63:14" pos:end="63:20">LOAD_UB</name><argument_list pos:start="63:21" pos:end="63:38">(<argument pos:start="63:22" pos:end="63:37"><expr pos:start="63:22" pos:end="63:37"><name pos:start="63:22" pos:end="63:25">data</name> <operator pos:start="63:27" pos:end="63:27">-</operator> <name pos:start="63:29" pos:end="63:37">img_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:27"><expr pos:start="65:5" pos:end="65:26"><name pos:start="65:5" pos:end="65:10">q0_org</name> <operator pos:start="65:12" pos:end="65:12">=</operator> <call pos:start="65:14" pos:end="65:26"><name pos:start="65:14" pos:end="65:20">LOAD_UB</name><argument_list pos:start="65:21" pos:end="65:26">(<argument pos:start="65:22" pos:end="65:25"><expr pos:start="65:22" pos:end="65:25"><name pos:start="65:22" pos:end="65:25">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:39"><expr pos:start="67:5" pos:end="67:38"><name pos:start="67:5" pos:end="67:10">q1_org</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <call pos:start="67:14" pos:end="67:38"><name pos:start="67:14" pos:end="67:20">LOAD_UB</name><argument_list pos:start="67:21" pos:end="67:38">(<argument pos:start="67:22" pos:end="67:37"><expr pos:start="67:22" pos:end="67:37"><name pos:start="67:22" pos:end="67:25">data</name> <operator pos:start="67:27" pos:end="67:27">+</operator> <name pos:start="67:29" pos:end="67:37">img_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <block pos:start="71:5" pos:end="95:5">{<block_content pos:start="73:9" pos:end="93:56">

        <decl_stmt pos:start="73:9" pos:end="73:57"><decl pos:start="73:9" pos:end="73:24"><type pos:start="73:9" pos:end="73:13"><name pos:start="73:9" pos:end="73:13">v16u8</name></type> <name pos:start="73:15" pos:end="73:24">p1_asub_p0</name></decl>, <decl pos:start="73:27" pos:end="73:36"><type ref="prev" pos:start="73:9" pos:end="73:13"/><name pos:start="73:27" pos:end="73:36">q1_asub_q0</name></decl>, <decl pos:start="73:39" pos:end="73:56"><type ref="prev" pos:start="73:9" pos:end="73:13"/><name pos:start="73:39" pos:end="73:56">is_less_than_alpha</name></decl>;</decl_stmt>



        <expr_stmt pos:start="77:9" pos:end="77:52"><expr pos:start="77:9" pos:end="77:51"><name pos:start="77:9" pos:end="77:18">p0_asub_q0</name> <operator pos:start="77:20" pos:end="77:20">=</operator> <call pos:start="77:22" pos:end="77:51"><name pos:start="77:22" pos:end="77:35">__msa_asub_u_b</name><argument_list pos:start="77:36" pos:end="77:51">(<argument pos:start="77:37" pos:end="77:42"><expr pos:start="77:37" pos:end="77:42"><name pos:start="77:37" pos:end="77:42">p0_org</name></expr></argument>, <argument pos:start="77:45" pos:end="77:50"><expr pos:start="77:45" pos:end="77:50"><name pos:start="77:45" pos:end="77:50">q0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:52"><expr pos:start="79:9" pos:end="79:51"><name pos:start="79:9" pos:end="79:18">p1_asub_p0</name> <operator pos:start="79:20" pos:end="79:20">=</operator> <call pos:start="79:22" pos:end="79:51"><name pos:start="79:22" pos:end="79:35">__msa_asub_u_b</name><argument_list pos:start="79:36" pos:end="79:51">(<argument pos:start="79:37" pos:end="79:42"><expr pos:start="79:37" pos:end="79:42"><name pos:start="79:37" pos:end="79:42">p1_org</name></expr></argument>, <argument pos:start="79:45" pos:end="79:50"><expr pos:start="79:45" pos:end="79:50"><name pos:start="79:45" pos:end="79:50">p0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:52"><expr pos:start="81:9" pos:end="81:51"><name pos:start="81:9" pos:end="81:18">q1_asub_q0</name> <operator pos:start="81:20" pos:end="81:20">=</operator> <call pos:start="81:22" pos:end="81:51"><name pos:start="81:22" pos:end="81:35">__msa_asub_u_b</name><argument_list pos:start="81:36" pos:end="81:51">(<argument pos:start="81:37" pos:end="81:42"><expr pos:start="81:37" pos:end="81:42"><name pos:start="81:37" pos:end="81:42">q1_org</name></expr></argument>, <argument pos:start="81:45" pos:end="81:50"><expr pos:start="81:45" pos:end="81:50"><name pos:start="81:45" pos:end="81:50">q0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="85:9" pos:end="85:50"><expr pos:start="85:9" pos:end="85:49"><name pos:start="85:9" pos:end="85:26">is_less_than_alpha</name> <operator pos:start="85:28" pos:end="85:28">=</operator> <operator pos:start="85:30" pos:end="85:30">(</operator><name pos:start="85:31" pos:end="85:40">p0_asub_q0</name> <operator pos:start="85:42" pos:end="85:42">&lt;</operator> <name pos:start="85:44" pos:end="85:48">alpha</name><operator pos:start="85:49" pos:end="85:49">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:48"><expr pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:25">is_less_than_beta</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <operator pos:start="87:29" pos:end="87:29">(</operator><name pos:start="87:30" pos:end="87:39">p1_asub_p0</name> <operator pos:start="87:41" pos:end="87:41">&lt;</operator> <name pos:start="87:43" pos:end="87:46">beta</name><operator pos:start="87:47" pos:end="87:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="89:9" pos:end="89:62"><expr pos:start="89:9" pos:end="89:61"><name pos:start="89:9" pos:end="89:20">is_less_than</name> <operator pos:start="89:22" pos:end="89:22">=</operator> <name pos:start="89:24" pos:end="89:40">is_less_than_beta</name> <operator pos:start="89:42" pos:end="89:42">&amp;</operator> <name pos:start="89:44" pos:end="89:61">is_less_than_alpha</name></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:48"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:25">is_less_than_beta</name> <operator pos:start="91:27" pos:end="91:27">=</operator> <operator pos:start="91:29" pos:end="91:29">(</operator><name pos:start="91:30" pos:end="91:39">q1_asub_q0</name> <operator pos:start="91:41" pos:end="91:41">&lt;</operator> <name pos:start="91:43" pos:end="91:46">beta</name><operator pos:start="91:47" pos:end="91:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:56"><expr pos:start="93:9" pos:end="93:55"><name pos:start="93:9" pos:end="93:20">is_less_than</name> <operator pos:start="93:22" pos:end="93:22">=</operator> <name pos:start="93:24" pos:end="93:40">is_less_than_beta</name> <operator pos:start="93:42" pos:end="93:42">&amp;</operator> <name pos:start="93:44" pos:end="93:55">is_less_than</name></expr>;</expr_stmt>

    </block_content>}</block>



    <if_stmt pos:start="99:5" pos:end="459:5"><if pos:start="99:5" pos:end="459:5">if <condition pos:start="99:8" pos:end="99:39">(<expr pos:start="99:9" pos:end="99:38"><operator pos:start="99:9" pos:end="99:9">!</operator><call pos:start="99:10" pos:end="99:38"><name pos:start="99:10" pos:end="99:24">__msa_test_bz_v</name><argument_list pos:start="99:25" pos:end="99:38">(<argument pos:start="99:26" pos:end="99:37"><expr pos:start="99:26" pos:end="99:37"><name pos:start="99:26" pos:end="99:37">is_less_than</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="99:41" pos:end="459:5">{<block_content pos:start="101:9" pos:end="457:31">

        <expr_stmt pos:start="101:9" pos:end="101:49"><expr pos:start="101:9" pos:end="101:48"><name pos:start="101:9" pos:end="101:14">q2_org</name> <operator pos:start="101:16" pos:end="101:16">=</operator> <call pos:start="101:18" pos:end="101:48"><name pos:start="101:18" pos:end="101:24">LOAD_UB</name><argument_list pos:start="101:25" pos:end="101:48">(<argument pos:start="101:26" pos:end="101:47"><expr pos:start="101:26" pos:end="101:47"><name pos:start="101:26" pos:end="101:29">data</name> <operator pos:start="101:31" pos:end="101:31">+</operator> <operator pos:start="101:33" pos:end="101:33">(</operator><literal type="number" pos:start="101:34" pos:end="101:34">2</literal> <operator pos:start="101:36" pos:end="101:36">*</operator> <name pos:start="101:38" pos:end="101:46">img_width</name><operator pos:start="101:47" pos:end="101:47">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:50"><expr pos:start="103:9" pos:end="103:49"><name pos:start="103:9" pos:end="103:14">p3_org</name> <operator pos:start="103:16" pos:end="103:16">=</operator> <call pos:start="103:18" pos:end="103:49"><name pos:start="103:18" pos:end="103:24">LOAD_UB</name><argument_list pos:start="103:25" pos:end="103:49">(<argument pos:start="103:26" pos:end="103:48"><expr pos:start="103:26" pos:end="103:48"><name pos:start="103:26" pos:end="103:29">data</name> <operator pos:start="103:31" pos:end="103:31">-</operator> <operator pos:start="103:33" pos:end="103:33">(</operator><name pos:start="103:34" pos:end="103:42">img_width</name> <operator pos:start="103:44" pos:end="103:45">&lt;&lt;</operator> <literal type="number" pos:start="103:47" pos:end="103:47">2</literal><operator pos:start="103:48" pos:end="103:48">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="105:9" pos:end="105:49"><expr pos:start="105:9" pos:end="105:48"><name pos:start="105:9" pos:end="105:14">p2_org</name> <operator pos:start="105:16" pos:end="105:16">=</operator> <call pos:start="105:18" pos:end="105:48"><name pos:start="105:18" pos:end="105:24">LOAD_UB</name><argument_list pos:start="105:25" pos:end="105:48">(<argument pos:start="105:26" pos:end="105:47"><expr pos:start="105:26" pos:end="105:47"><name pos:start="105:26" pos:end="105:29">data</name> <operator pos:start="105:31" pos:end="105:31">-</operator> <operator pos:start="105:33" pos:end="105:33">(</operator><literal type="number" pos:start="105:34" pos:end="105:34">3</literal> <operator pos:start="105:36" pos:end="105:36">*</operator> <name pos:start="105:38" pos:end="105:46">img_width</name><operator pos:start="105:47" pos:end="105:47">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="109:9" pos:end="109:62"><expr pos:start="109:9" pos:end="109:61"><name pos:start="109:9" pos:end="109:16">p1_org_r</name> <operator pos:start="109:18" pos:end="109:18">=</operator> <operator pos:start="109:20" pos:end="109:20">(</operator><name pos:start="109:21" pos:end="109:25">v8i16</name><operator pos:start="109:26" pos:end="109:26">)</operator> <call pos:start="109:28" pos:end="109:61"><name pos:start="109:28" pos:end="109:39">__msa_ilvr_b</name><argument_list pos:start="109:40" pos:end="109:61">(<argument pos:start="109:41" pos:end="109:44"><expr pos:start="109:41" pos:end="109:44"><name pos:start="109:41" pos:end="109:44">zero</name></expr></argument>, <argument pos:start="109:47" pos:end="109:60"><expr pos:start="109:47" pos:end="109:60"><operator pos:start="109:47" pos:end="109:47">(</operator><name pos:start="109:48" pos:end="109:52">v16i8</name><operator pos:start="109:53" pos:end="109:53">)</operator> <name pos:start="109:55" pos:end="109:60">p1_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="111:9" pos:end="111:62"><expr pos:start="111:9" pos:end="111:61"><name pos:start="111:9" pos:end="111:16">p0_org_r</name> <operator pos:start="111:18" pos:end="111:18">=</operator> <operator pos:start="111:20" pos:end="111:20">(</operator><name pos:start="111:21" pos:end="111:25">v8i16</name><operator pos:start="111:26" pos:end="111:26">)</operator> <call pos:start="111:28" pos:end="111:61"><name pos:start="111:28" pos:end="111:39">__msa_ilvr_b</name><argument_list pos:start="111:40" pos:end="111:61">(<argument pos:start="111:41" pos:end="111:44"><expr pos:start="111:41" pos:end="111:44"><name pos:start="111:41" pos:end="111:44">zero</name></expr></argument>, <argument pos:start="111:47" pos:end="111:60"><expr pos:start="111:47" pos:end="111:60"><operator pos:start="111:47" pos:end="111:47">(</operator><name pos:start="111:48" pos:end="111:52">v16i8</name><operator pos:start="111:53" pos:end="111:53">)</operator> <name pos:start="111:55" pos:end="111:60">p0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="113:9" pos:end="113:62"><expr pos:start="113:9" pos:end="113:61"><name pos:start="113:9" pos:end="113:16">q0_org_r</name> <operator pos:start="113:18" pos:end="113:18">=</operator> <operator pos:start="113:20" pos:end="113:20">(</operator><name pos:start="113:21" pos:end="113:25">v8i16</name><operator pos:start="113:26" pos:end="113:26">)</operator> <call pos:start="113:28" pos:end="113:61"><name pos:start="113:28" pos:end="113:39">__msa_ilvr_b</name><argument_list pos:start="113:40" pos:end="113:61">(<argument pos:start="113:41" pos:end="113:44"><expr pos:start="113:41" pos:end="113:44"><name pos:start="113:41" pos:end="113:44">zero</name></expr></argument>, <argument pos:start="113:47" pos:end="113:60"><expr pos:start="113:47" pos:end="113:60"><operator pos:start="113:47" pos:end="113:47">(</operator><name pos:start="113:48" pos:end="113:52">v16i8</name><operator pos:start="113:53" pos:end="113:53">)</operator> <name pos:start="113:55" pos:end="113:60">q0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="117:9" pos:end="117:62"><expr pos:start="117:9" pos:end="117:61"><name pos:start="117:9" pos:end="117:16">p1_org_l</name> <operator pos:start="117:18" pos:end="117:18">=</operator> <operator pos:start="117:20" pos:end="117:20">(</operator><name pos:start="117:21" pos:end="117:25">v8i16</name><operator pos:start="117:26" pos:end="117:26">)</operator> <call pos:start="117:28" pos:end="117:61"><name pos:start="117:28" pos:end="117:39">__msa_ilvl_b</name><argument_list pos:start="117:40" pos:end="117:61">(<argument pos:start="117:41" pos:end="117:44"><expr pos:start="117:41" pos:end="117:44"><name pos:start="117:41" pos:end="117:44">zero</name></expr></argument>, <argument pos:start="117:47" pos:end="117:60"><expr pos:start="117:47" pos:end="117:60"><operator pos:start="117:47" pos:end="117:47">(</operator><name pos:start="117:48" pos:end="117:52">v16i8</name><operator pos:start="117:53" pos:end="117:53">)</operator> <name pos:start="117:55" pos:end="117:60">p1_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:62"><expr pos:start="119:9" pos:end="119:61"><name pos:start="119:9" pos:end="119:16">p0_org_l</name> <operator pos:start="119:18" pos:end="119:18">=</operator> <operator pos:start="119:20" pos:end="119:20">(</operator><name pos:start="119:21" pos:end="119:25">v8i16</name><operator pos:start="119:26" pos:end="119:26">)</operator> <call pos:start="119:28" pos:end="119:61"><name pos:start="119:28" pos:end="119:39">__msa_ilvl_b</name><argument_list pos:start="119:40" pos:end="119:61">(<argument pos:start="119:41" pos:end="119:44"><expr pos:start="119:41" pos:end="119:44"><name pos:start="119:41" pos:end="119:44">zero</name></expr></argument>, <argument pos:start="119:47" pos:end="119:60"><expr pos:start="119:47" pos:end="119:60"><operator pos:start="119:47" pos:end="119:47">(</operator><name pos:start="119:48" pos:end="119:52">v16i8</name><operator pos:start="119:53" pos:end="119:53">)</operator> <name pos:start="119:55" pos:end="119:60">p0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="121:9" pos:end="121:62"><expr pos:start="121:9" pos:end="121:61"><name pos:start="121:9" pos:end="121:16">q0_org_l</name> <operator pos:start="121:18" pos:end="121:18">=</operator> <operator pos:start="121:20" pos:end="121:20">(</operator><name pos:start="121:21" pos:end="121:25">v8i16</name><operator pos:start="121:26" pos:end="121:26">)</operator> <call pos:start="121:28" pos:end="121:61"><name pos:start="121:28" pos:end="121:39">__msa_ilvl_b</name><argument_list pos:start="121:40" pos:end="121:61">(<argument pos:start="121:41" pos:end="121:44"><expr pos:start="121:41" pos:end="121:44"><name pos:start="121:41" pos:end="121:44">zero</name></expr></argument>, <argument pos:start="121:47" pos:end="121:60"><expr pos:start="121:47" pos:end="121:60"><operator pos:start="121:47" pos:end="121:47">(</operator><name pos:start="121:48" pos:end="121:52">v16i8</name><operator pos:start="121:53" pos:end="121:53">)</operator> <name pos:start="121:55" pos:end="121:60">q0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="125:9" pos:end="125:30"><expr pos:start="125:9" pos:end="125:29"><name pos:start="125:9" pos:end="125:16">tmp_flag</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <name pos:start="125:20" pos:end="125:24">alpha</name> <operator pos:start="125:26" pos:end="125:27">&gt;&gt;</operator> <literal type="number" pos:start="125:29" pos:end="125:29">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:32"><expr pos:start="127:9" pos:end="127:31"><name pos:start="127:9" pos:end="127:16">tmp_flag</name> <operator pos:start="127:18" pos:end="127:18">=</operator> <name pos:start="127:20" pos:end="127:27">tmp_flag</name> <operator pos:start="127:29" pos:end="127:29">+</operator> <literal type="number" pos:start="127:31" pos:end="127:31">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="129:9" pos:end="129:43"><expr pos:start="129:9" pos:end="129:42"><name pos:start="129:9" pos:end="129:16">tmp_flag</name> <operator pos:start="129:18" pos:end="129:18">=</operator> <operator pos:start="129:20" pos:end="129:20">(</operator><name pos:start="129:21" pos:end="129:30">p0_asub_q0</name> <operator pos:start="129:32" pos:end="129:32">&lt;</operator> <name pos:start="129:34" pos:end="129:41">tmp_flag</name><operator pos:start="129:42" pos:end="129:42">)</operator></expr>;</expr_stmt>



        <expr_stmt pos:start="133:9" pos:end="133:52"><expr pos:start="133:9" pos:end="133:51"><name pos:start="133:9" pos:end="133:18">p2_asub_p0</name> <operator pos:start="133:20" pos:end="133:20">=</operator> <call pos:start="133:22" pos:end="133:51"><name pos:start="133:22" pos:end="133:35">__msa_asub_u_b</name><argument_list pos:start="133:36" pos:end="133:51">(<argument pos:start="133:37" pos:end="133:42"><expr pos:start="133:37" pos:end="133:42"><name pos:start="133:37" pos:end="133:42">p2_org</name></expr></argument>, <argument pos:start="133:45" pos:end="133:50"><expr pos:start="133:45" pos:end="133:50"><name pos:start="133:45" pos:end="133:50">p0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="135:9" pos:end="135:48"><expr pos:start="135:9" pos:end="135:47"><name pos:start="135:9" pos:end="135:25">is_less_than_beta</name> <operator pos:start="135:27" pos:end="135:27">=</operator> <operator pos:start="135:29" pos:end="135:29">(</operator><name pos:start="135:30" pos:end="135:39">p2_asub_p0</name> <operator pos:start="135:41" pos:end="135:41">&lt;</operator> <name pos:start="135:43" pos:end="135:46">beta</name><operator pos:start="135:47" pos:end="135:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="137:9" pos:end="137:57"><expr pos:start="137:9" pos:end="137:56"><name pos:start="137:9" pos:end="137:25">is_less_than_beta</name> <operator pos:start="137:27" pos:end="137:27">=</operator> <name pos:start="137:29" pos:end="137:45">is_less_than_beta</name> <operator pos:start="137:47" pos:end="137:47">&amp;</operator> <name pos:start="137:49" pos:end="137:56">tmp_flag</name></expr>;</expr_stmt>



        <expr_stmt pos:start="141:9" pos:end="141:73"><expr pos:start="141:9" pos:end="141:72"><name pos:start="141:9" pos:end="141:32">negate_is_less_than_beta</name> <operator pos:start="141:34" pos:end="141:34">=</operator> <call pos:start="141:36" pos:end="141:72"><name pos:start="141:36" pos:end="141:47">__msa_xori_b</name><argument_list pos:start="141:48" pos:end="141:72">(<argument pos:start="141:49" pos:end="141:65"><expr pos:start="141:49" pos:end="141:65"><name pos:start="141:49" pos:end="141:65">is_less_than_beta</name></expr></argument>, <argument pos:start="141:68" pos:end="141:71"><expr pos:start="141:68" pos:end="141:71"><literal type="number" pos:start="141:68" pos:end="141:71">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="143:9" pos:end="143:61"><expr pos:start="143:9" pos:end="143:60"><name pos:start="143:9" pos:end="143:25">is_less_than_beta</name> <operator pos:start="143:27" pos:end="143:27">=</operator> <name pos:start="143:29" pos:end="143:45">is_less_than_beta</name> <operator pos:start="143:47" pos:end="143:47">&amp;</operator> <name pos:start="143:49" pos:end="143:60">is_less_than</name></expr>;</expr_stmt>

        <expr_stmt pos:start="145:9" pos:end="145:75"><expr pos:start="145:9" pos:end="145:74"><name pos:start="145:9" pos:end="145:32">negate_is_less_than_beta</name> <operator pos:start="145:34" pos:end="145:34">=</operator> <name pos:start="145:36" pos:end="145:59">negate_is_less_than_beta</name> <operator pos:start="145:61" pos:end="145:61">&amp;</operator> <name pos:start="145:63" pos:end="145:74">is_less_than</name></expr>;</expr_stmt>



        <block pos:start="149:9" pos:end="219:9">{<block_content pos:start="151:13" pos:end="217:13">

            <decl_stmt pos:start="151:13" pos:end="151:59"><decl pos:start="151:13" pos:end="151:37"><type pos:start="151:13" pos:end="151:17"><name pos:start="151:13" pos:end="151:17">v8u16</name></type> <name pos:start="151:19" pos:end="151:37">is_less_than_beta_l</name></decl>, <decl pos:start="151:40" pos:end="151:58"><type ref="prev" pos:start="151:13" pos:end="151:17"/><name pos:start="151:40" pos:end="151:58">is_less_than_beta_r</name></decl>;</decl_stmt>



            <expr_stmt pos:start="155:13" pos:end="155:66"><expr pos:start="155:13" pos:end="155:65"><name pos:start="155:13" pos:end="155:20">q1_org_r</name> <operator pos:start="155:22" pos:end="155:22">=</operator> <operator pos:start="155:24" pos:end="155:24">(</operator><name pos:start="155:25" pos:end="155:29">v8i16</name><operator pos:start="155:30" pos:end="155:30">)</operator> <call pos:start="155:32" pos:end="155:65"><name pos:start="155:32" pos:end="155:43">__msa_ilvr_b</name><argument_list pos:start="155:44" pos:end="155:65">(<argument pos:start="155:45" pos:end="155:48"><expr pos:start="155:45" pos:end="155:48"><name pos:start="155:45" pos:end="155:48">zero</name></expr></argument>, <argument pos:start="155:51" pos:end="155:64"><expr pos:start="155:51" pos:end="155:64"><operator pos:start="155:51" pos:end="155:51">(</operator><name pos:start="155:52" pos:end="155:56">v16i8</name><operator pos:start="155:57" pos:end="155:57">)</operator> <name pos:start="155:59" pos:end="155:64">q1_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="159:13" pos:end="161:73"><expr pos:start="159:13" pos:end="161:72"><name pos:start="159:13" pos:end="159:31">is_less_than_beta_r</name> <operator pos:start="159:33" pos:end="159:33">=</operator>

                <operator pos:start="161:17" pos:end="161:17">(</operator><name pos:start="161:18" pos:end="161:22">v8u16</name><operator pos:start="161:23" pos:end="161:23">)</operator> <call pos:start="161:25" pos:end="161:72"><name pos:start="161:25" pos:end="161:36">__msa_sldi_b</name><argument_list pos:start="161:37" pos:end="161:72">(<argument pos:start="161:38" pos:end="161:62"><expr pos:start="161:38" pos:end="161:62"><operator pos:start="161:38" pos:end="161:38">(</operator><name pos:start="161:39" pos:end="161:43">v16i8</name><operator pos:start="161:44" pos:end="161:44">)</operator> <name pos:start="161:46" pos:end="161:62">is_less_than_beta</name></expr></argument>, <argument pos:start="161:65" pos:end="161:68"><expr pos:start="161:65" pos:end="161:68"><name pos:start="161:65" pos:end="161:68">zero</name></expr></argument>, <argument pos:start="161:71" pos:end="161:71"><expr pos:start="161:71" pos:end="161:71"><literal type="number" pos:start="161:71" pos:end="161:71">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="163:13" pos:end="183:13"><if pos:start="163:13" pos:end="183:13">if <condition pos:start="163:16" pos:end="163:62">(<expr pos:start="163:17" pos:end="163:61"><operator pos:start="163:17" pos:end="163:17">!</operator><call pos:start="163:18" pos:end="163:61"><name pos:start="163:18" pos:end="163:32">__msa_test_bz_v</name><argument_list pos:start="163:33" pos:end="163:61">(<argument pos:start="163:34" pos:end="163:60"><expr pos:start="163:34" pos:end="163:60"><operator pos:start="163:34" pos:end="163:34">(</operator><name pos:start="163:35" pos:end="163:39">v16u8</name><operator pos:start="163:40" pos:end="163:40">)</operator> <name pos:start="163:42" pos:end="163:60">is_less_than_beta_r</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="163:64" pos:end="183:13">{<block_content pos:start="165:17" pos:end="181:67">

                <decl_stmt pos:start="165:17" pos:end="165:31"><decl pos:start="165:17" pos:end="165:30"><type pos:start="165:17" pos:end="165:21"><name pos:start="165:17" pos:end="165:21">v8i16</name></type> <name pos:start="165:23" pos:end="165:30">p3_org_r</name></decl>;</decl_stmt>



                <expr_stmt pos:start="169:17" pos:end="169:70"><expr pos:start="169:17" pos:end="169:69"><name pos:start="169:17" pos:end="169:24">p3_org_r</name> <operator pos:start="169:26" pos:end="169:26">=</operator> <operator pos:start="169:28" pos:end="169:28">(</operator><name pos:start="169:29" pos:end="169:33">v8i16</name><operator pos:start="169:34" pos:end="169:34">)</operator> <call pos:start="169:36" pos:end="169:69"><name pos:start="169:36" pos:end="169:47">__msa_ilvr_b</name><argument_list pos:start="169:48" pos:end="169:69">(<argument pos:start="169:49" pos:end="169:52"><expr pos:start="169:49" pos:end="169:52"><name pos:start="169:49" pos:end="169:52">zero</name></expr></argument>, <argument pos:start="169:55" pos:end="169:68"><expr pos:start="169:55" pos:end="169:68"><operator pos:start="169:55" pos:end="169:55">(</operator><name pos:start="169:56" pos:end="169:60">v16i8</name><operator pos:start="169:61" pos:end="169:61">)</operator> <name pos:start="169:63" pos:end="169:68">p3_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="171:17" pos:end="171:66"><expr pos:start="171:17" pos:end="171:65"><name pos:start="171:17" pos:end="171:20">p2_r</name> <operator pos:start="171:22" pos:end="171:22">=</operator> <operator pos:start="171:24" pos:end="171:24">(</operator><name pos:start="171:25" pos:end="171:29">v8i16</name><operator pos:start="171:30" pos:end="171:30">)</operator> <call pos:start="171:32" pos:end="171:65"><name pos:start="171:32" pos:end="171:43">__msa_ilvr_b</name><argument_list pos:start="171:44" pos:end="171:65">(<argument pos:start="171:45" pos:end="171:48"><expr pos:start="171:45" pos:end="171:48"><name pos:start="171:45" pos:end="171:48">zero</name></expr></argument>, <argument pos:start="171:51" pos:end="171:64"><expr pos:start="171:51" pos:end="171:64"><operator pos:start="171:51" pos:end="171:51">(</operator><name pos:start="171:52" pos:end="171:56">v16i8</name><operator pos:start="171:57" pos:end="171:57">)</operator> <name pos:start="171:59" pos:end="171:64">p2_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="175:17" pos:end="181:67"><expr pos:start="175:17" pos:end="181:66"><call pos:start="175:17" pos:end="181:66"><name pos:start="175:17" pos:end="175:48">AVC_LOOP_FILTER_P0P1P2_OR_Q0Q1Q2</name><argument_list pos:start="175:49" pos:end="181:66">(<argument pos:start="175:50" pos:end="175:57"><expr pos:start="175:50" pos:end="175:57"><name pos:start="175:50" pos:end="175:57">p3_org_r</name></expr></argument>, <argument pos:start="175:60" pos:end="175:67"><expr pos:start="175:60" pos:end="175:67"><name pos:start="175:60" pos:end="175:67">p0_org_r</name></expr></argument>,

                                                 <argument pos:start="177:50" pos:end="177:57"><expr pos:start="177:50" pos:end="177:57"><name pos:start="177:50" pos:end="177:57">q0_org_r</name></expr></argument>, <argument pos:start="177:60" pos:end="177:67"><expr pos:start="177:60" pos:end="177:67"><name pos:start="177:60" pos:end="177:67">p1_org_r</name></expr></argument>,

                                                 <argument pos:start="179:50" pos:end="179:53"><expr pos:start="179:50" pos:end="179:53"><name pos:start="179:50" pos:end="179:53">p2_r</name></expr></argument>, <argument pos:start="179:56" pos:end="179:63"><expr pos:start="179:56" pos:end="179:63"><name pos:start="179:56" pos:end="179:63">q1_org_r</name></expr></argument>,

                                                 <argument pos:start="181:50" pos:end="181:53"><expr pos:start="181:50" pos:end="181:53"><name pos:start="181:50" pos:end="181:53">p0_r</name></expr></argument>, <argument pos:start="181:56" pos:end="181:59"><expr pos:start="181:56" pos:end="181:59"><name pos:start="181:56" pos:end="181:59">p1_r</name></expr></argument>, <argument pos:start="181:62" pos:end="181:65"><expr pos:start="181:62" pos:end="181:65"><name pos:start="181:62" pos:end="181:65">p2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="187:13" pos:end="187:66"><expr pos:start="187:13" pos:end="187:65"><name pos:start="187:13" pos:end="187:20">q1_org_l</name> <operator pos:start="187:22" pos:end="187:22">=</operator> <operator pos:start="187:24" pos:end="187:24">(</operator><name pos:start="187:25" pos:end="187:29">v8i16</name><operator pos:start="187:30" pos:end="187:30">)</operator> <call pos:start="187:32" pos:end="187:65"><name pos:start="187:32" pos:end="187:43">__msa_ilvl_b</name><argument_list pos:start="187:44" pos:end="187:65">(<argument pos:start="187:45" pos:end="187:48"><expr pos:start="187:45" pos:end="187:48"><name pos:start="187:45" pos:end="187:48">zero</name></expr></argument>, <argument pos:start="187:51" pos:end="187:64"><expr pos:start="187:51" pos:end="187:64"><operator pos:start="187:51" pos:end="187:51">(</operator><name pos:start="187:52" pos:end="187:56">v16i8</name><operator pos:start="187:57" pos:end="187:57">)</operator> <name pos:start="187:59" pos:end="187:64">q1_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="191:13" pos:end="193:73"><expr pos:start="191:13" pos:end="193:72"><name pos:start="191:13" pos:end="191:31">is_less_than_beta_l</name> <operator pos:start="191:33" pos:end="191:33">=</operator>

                <operator pos:start="193:17" pos:end="193:17">(</operator><name pos:start="193:18" pos:end="193:22">v8u16</name><operator pos:start="193:23" pos:end="193:23">)</operator> <call pos:start="193:25" pos:end="193:72"><name pos:start="193:25" pos:end="193:36">__msa_sldi_b</name><argument_list pos:start="193:37" pos:end="193:72">(<argument pos:start="193:38" pos:end="193:41"><expr pos:start="193:38" pos:end="193:41"><name pos:start="193:38" pos:end="193:41">zero</name></expr></argument>, <argument pos:start="193:44" pos:end="193:68"><expr pos:start="193:44" pos:end="193:68"><operator pos:start="193:44" pos:end="193:44">(</operator><name pos:start="193:45" pos:end="193:49">v16i8</name><operator pos:start="193:50" pos:end="193:50">)</operator> <name pos:start="193:52" pos:end="193:68">is_less_than_beta</name></expr></argument>, <argument pos:start="193:71" pos:end="193:71"><expr pos:start="193:71" pos:end="193:71"><literal type="number" pos:start="193:71" pos:end="193:71">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <if_stmt pos:start="197:13" pos:end="217:13"><if pos:start="197:13" pos:end="217:13">if <condition pos:start="197:16" pos:end="197:62">(<expr pos:start="197:17" pos:end="197:61"><operator pos:start="197:17" pos:end="197:17">!</operator><call pos:start="197:18" pos:end="197:61"><name pos:start="197:18" pos:end="197:32">__msa_test_bz_v</name><argument_list pos:start="197:33" pos:end="197:61">(<argument pos:start="197:34" pos:end="197:60"><expr pos:start="197:34" pos:end="197:60"><operator pos:start="197:34" pos:end="197:34">(</operator><name pos:start="197:35" pos:end="197:39">v16u8</name><operator pos:start="197:40" pos:end="197:40">)</operator> <name pos:start="197:42" pos:end="197:60">is_less_than_beta_l</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="197:64" pos:end="217:13">{<block_content pos:start="199:17" pos:end="215:67">

                <decl_stmt pos:start="199:17" pos:end="199:31"><decl pos:start="199:17" pos:end="199:30"><type pos:start="199:17" pos:end="199:21"><name pos:start="199:17" pos:end="199:21">v8i16</name></type> <name pos:start="199:23" pos:end="199:30">p3_org_l</name></decl>;</decl_stmt>



                <expr_stmt pos:start="203:17" pos:end="203:70"><expr pos:start="203:17" pos:end="203:69"><name pos:start="203:17" pos:end="203:24">p3_org_l</name> <operator pos:start="203:26" pos:end="203:26">=</operator> <operator pos:start="203:28" pos:end="203:28">(</operator><name pos:start="203:29" pos:end="203:33">v8i16</name><operator pos:start="203:34" pos:end="203:34">)</operator> <call pos:start="203:36" pos:end="203:69"><name pos:start="203:36" pos:end="203:47">__msa_ilvl_b</name><argument_list pos:start="203:48" pos:end="203:69">(<argument pos:start="203:49" pos:end="203:52"><expr pos:start="203:49" pos:end="203:52"><name pos:start="203:49" pos:end="203:52">zero</name></expr></argument>, <argument pos:start="203:55" pos:end="203:68"><expr pos:start="203:55" pos:end="203:68"><operator pos:start="203:55" pos:end="203:55">(</operator><name pos:start="203:56" pos:end="203:60">v16i8</name><operator pos:start="203:61" pos:end="203:61">)</operator> <name pos:start="203:63" pos:end="203:68">p3_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="205:17" pos:end="205:66"><expr pos:start="205:17" pos:end="205:65"><name pos:start="205:17" pos:end="205:20">p2_l</name> <operator pos:start="205:22" pos:end="205:22">=</operator> <operator pos:start="205:24" pos:end="205:24">(</operator><name pos:start="205:25" pos:end="205:29">v8i16</name><operator pos:start="205:30" pos:end="205:30">)</operator> <call pos:start="205:32" pos:end="205:65"><name pos:start="205:32" pos:end="205:43">__msa_ilvl_b</name><argument_list pos:start="205:44" pos:end="205:65">(<argument pos:start="205:45" pos:end="205:48"><expr pos:start="205:45" pos:end="205:48"><name pos:start="205:45" pos:end="205:48">zero</name></expr></argument>, <argument pos:start="205:51" pos:end="205:64"><expr pos:start="205:51" pos:end="205:64"><operator pos:start="205:51" pos:end="205:51">(</operator><name pos:start="205:52" pos:end="205:56">v16i8</name><operator pos:start="205:57" pos:end="205:57">)</operator> <name pos:start="205:59" pos:end="205:64">p2_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="209:17" pos:end="215:67"><expr pos:start="209:17" pos:end="215:66"><call pos:start="209:17" pos:end="215:66"><name pos:start="209:17" pos:end="209:48">AVC_LOOP_FILTER_P0P1P2_OR_Q0Q1Q2</name><argument_list pos:start="209:49" pos:end="215:66">(<argument pos:start="209:50" pos:end="209:57"><expr pos:start="209:50" pos:end="209:57"><name pos:start="209:50" pos:end="209:57">p3_org_l</name></expr></argument>, <argument pos:start="209:60" pos:end="209:67"><expr pos:start="209:60" pos:end="209:67"><name pos:start="209:60" pos:end="209:67">p0_org_l</name></expr></argument>,

                                                 <argument pos:start="211:50" pos:end="211:57"><expr pos:start="211:50" pos:end="211:57"><name pos:start="211:50" pos:end="211:57">q0_org_l</name></expr></argument>, <argument pos:start="211:60" pos:end="211:67"><expr pos:start="211:60" pos:end="211:67"><name pos:start="211:60" pos:end="211:67">p1_org_l</name></expr></argument>,

                                                 <argument pos:start="213:50" pos:end="213:53"><expr pos:start="213:50" pos:end="213:53"><name pos:start="213:50" pos:end="213:53">p2_l</name></expr></argument>, <argument pos:start="213:56" pos:end="213:63"><expr pos:start="213:56" pos:end="213:63"><name pos:start="213:56" pos:end="213:63">q1_org_l</name></expr></argument>,

                                                 <argument pos:start="215:50" pos:end="215:53"><expr pos:start="215:50" pos:end="215:53"><name pos:start="215:50" pos:end="215:53">p0_l</name></expr></argument>, <argument pos:start="215:56" pos:end="215:59"><expr pos:start="215:56" pos:end="215:59"><name pos:start="215:56" pos:end="215:59">p1_l</name></expr></argument>, <argument pos:start="215:62" pos:end="215:65"><expr pos:start="215:62" pos:end="215:65"><name pos:start="215:62" pos:end="215:65">p2_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <comment type="block" pos:start="223:9" pos:end="223:31">/* combine and store */</comment>

        <if_stmt pos:start="225:9" pos:end="247:9"><if pos:start="225:9" pos:end="247:9">if <condition pos:start="225:12" pos:end="225:48">(<expr pos:start="225:13" pos:end="225:47"><operator pos:start="225:13" pos:end="225:13">!</operator><call pos:start="225:14" pos:end="225:47"><name pos:start="225:14" pos:end="225:28">__msa_test_bz_v</name><argument_list pos:start="225:29" pos:end="225:47">(<argument pos:start="225:30" pos:end="225:46"><expr pos:start="225:30" pos:end="225:46"><name pos:start="225:30" pos:end="225:46">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="225:50" pos:end="247:9">{<block_content pos:start="227:13" pos:end="245:53">

            <expr_stmt pos:start="227:13" pos:end="227:67"><expr pos:start="227:13" pos:end="227:66"><name pos:start="227:13" pos:end="227:14">p0</name> <operator pos:start="227:16" pos:end="227:16">=</operator> <operator pos:start="227:18" pos:end="227:18">(</operator><name pos:start="227:19" pos:end="227:23">v16u8</name><operator pos:start="227:24" pos:end="227:24">)</operator> <call pos:start="227:26" pos:end="227:66"><name pos:start="227:26" pos:end="227:38">__msa_pckev_b</name><argument_list pos:start="227:39" pos:end="227:66">(<argument pos:start="227:40" pos:end="227:51"><expr pos:start="227:40" pos:end="227:51"><operator pos:start="227:40" pos:end="227:40">(</operator><name pos:start="227:41" pos:end="227:45">v16i8</name><operator pos:start="227:46" pos:end="227:46">)</operator> <name pos:start="227:48" pos:end="227:51">p0_l</name></expr></argument>, <argument pos:start="227:54" pos:end="227:65"><expr pos:start="227:54" pos:end="227:65"><operator pos:start="227:54" pos:end="227:54">(</operator><name pos:start="227:55" pos:end="227:59">v16i8</name><operator pos:start="227:60" pos:end="227:60">)</operator> <name pos:start="227:62" pos:end="227:65">p0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="229:13" pos:end="229:67"><expr pos:start="229:13" pos:end="229:66"><name pos:start="229:13" pos:end="229:14">p1</name> <operator pos:start="229:16" pos:end="229:16">=</operator> <operator pos:start="229:18" pos:end="229:18">(</operator><name pos:start="229:19" pos:end="229:23">v16u8</name><operator pos:start="229:24" pos:end="229:24">)</operator> <call pos:start="229:26" pos:end="229:66"><name pos:start="229:26" pos:end="229:38">__msa_pckev_b</name><argument_list pos:start="229:39" pos:end="229:66">(<argument pos:start="229:40" pos:end="229:51"><expr pos:start="229:40" pos:end="229:51"><operator pos:start="229:40" pos:end="229:40">(</operator><name pos:start="229:41" pos:end="229:45">v16i8</name><operator pos:start="229:46" pos:end="229:46">)</operator> <name pos:start="229:48" pos:end="229:51">p1_l</name></expr></argument>, <argument pos:start="229:54" pos:end="229:65"><expr pos:start="229:54" pos:end="229:65"><operator pos:start="229:54" pos:end="229:54">(</operator><name pos:start="229:55" pos:end="229:59">v16i8</name><operator pos:start="229:60" pos:end="229:60">)</operator> <name pos:start="229:62" pos:end="229:65">p1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="231:13" pos:end="231:67"><expr pos:start="231:13" pos:end="231:66"><name pos:start="231:13" pos:end="231:14">p2</name> <operator pos:start="231:16" pos:end="231:16">=</operator> <operator pos:start="231:18" pos:end="231:18">(</operator><name pos:start="231:19" pos:end="231:23">v16u8</name><operator pos:start="231:24" pos:end="231:24">)</operator> <call pos:start="231:26" pos:end="231:66"><name pos:start="231:26" pos:end="231:38">__msa_pckev_b</name><argument_list pos:start="231:39" pos:end="231:66">(<argument pos:start="231:40" pos:end="231:51"><expr pos:start="231:40" pos:end="231:51"><operator pos:start="231:40" pos:end="231:40">(</operator><name pos:start="231:41" pos:end="231:45">v16i8</name><operator pos:start="231:46" pos:end="231:46">)</operator> <name pos:start="231:48" pos:end="231:51">p2_l</name></expr></argument>, <argument pos:start="231:54" pos:end="231:65"><expr pos:start="231:54" pos:end="231:65"><operator pos:start="231:54" pos:end="231:54">(</operator><name pos:start="231:55" pos:end="231:59">v16i8</name><operator pos:start="231:60" pos:end="231:60">)</operator> <name pos:start="231:62" pos:end="231:65">p2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="235:13" pos:end="235:65"><expr pos:start="235:13" pos:end="235:64"><name pos:start="235:13" pos:end="235:18">p0_org</name> <operator pos:start="235:20" pos:end="235:20">=</operator> <call pos:start="235:22" pos:end="235:64"><name pos:start="235:22" pos:end="235:33">__msa_bmnz_v</name><argument_list pos:start="235:34" pos:end="235:64">(<argument pos:start="235:35" pos:end="235:40"><expr pos:start="235:35" pos:end="235:40"><name pos:start="235:35" pos:end="235:40">p0_org</name></expr></argument>, <argument pos:start="235:43" pos:end="235:44"><expr pos:start="235:43" pos:end="235:44"><name pos:start="235:43" pos:end="235:44">p0</name></expr></argument>, <argument pos:start="235:47" pos:end="235:63"><expr pos:start="235:47" pos:end="235:63"><name pos:start="235:47" pos:end="235:63">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="237:13" pos:end="237:65"><expr pos:start="237:13" pos:end="237:64"><name pos:start="237:13" pos:end="237:18">p1_org</name> <operator pos:start="237:20" pos:end="237:20">=</operator> <call pos:start="237:22" pos:end="237:64"><name pos:start="237:22" pos:end="237:33">__msa_bmnz_v</name><argument_list pos:start="237:34" pos:end="237:64">(<argument pos:start="237:35" pos:end="237:40"><expr pos:start="237:35" pos:end="237:40"><name pos:start="237:35" pos:end="237:40">p1_org</name></expr></argument>, <argument pos:start="237:43" pos:end="237:44"><expr pos:start="237:43" pos:end="237:44"><name pos:start="237:43" pos:end="237:44">p1</name></expr></argument>, <argument pos:start="237:47" pos:end="237:63"><expr pos:start="237:47" pos:end="237:63"><name pos:start="237:47" pos:end="237:63">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="239:13" pos:end="239:65"><expr pos:start="239:13" pos:end="239:64"><name pos:start="239:13" pos:end="239:18">p2_org</name> <operator pos:start="239:20" pos:end="239:20">=</operator> <call pos:start="239:22" pos:end="239:64"><name pos:start="239:22" pos:end="239:33">__msa_bmnz_v</name><argument_list pos:start="239:34" pos:end="239:64">(<argument pos:start="239:35" pos:end="239:40"><expr pos:start="239:35" pos:end="239:40"><name pos:start="239:35" pos:end="239:40">p2_org</name></expr></argument>, <argument pos:start="239:43" pos:end="239:44"><expr pos:start="239:43" pos:end="239:44"><name pos:start="239:43" pos:end="239:44">p2</name></expr></argument>, <argument pos:start="239:47" pos:end="239:63"><expr pos:start="239:47" pos:end="239:63"><name pos:start="239:47" pos:end="239:63">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="243:13" pos:end="243:53"><expr pos:start="243:13" pos:end="243:52"><call pos:start="243:13" pos:end="243:52"><name pos:start="243:13" pos:end="243:20">STORE_UB</name><argument_list pos:start="243:21" pos:end="243:52">(<argument pos:start="243:22" pos:end="243:27"><expr pos:start="243:22" pos:end="243:27"><name pos:start="243:22" pos:end="243:27">p1_org</name></expr></argument>, <argument pos:start="243:30" pos:end="243:51"><expr pos:start="243:30" pos:end="243:51"><name pos:start="243:30" pos:end="243:33">data</name> <operator pos:start="243:35" pos:end="243:35">-</operator> <operator pos:start="243:37" pos:end="243:37">(</operator><literal type="number" pos:start="243:38" pos:end="243:38">2</literal> <operator pos:start="243:40" pos:end="243:40">*</operator> <name pos:start="243:42" pos:end="243:50">img_width</name><operator pos:start="243:51" pos:end="243:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="245:13" pos:end="245:53"><expr pos:start="245:13" pos:end="245:52"><call pos:start="245:13" pos:end="245:52"><name pos:start="245:13" pos:end="245:20">STORE_UB</name><argument_list pos:start="245:21" pos:end="245:52">(<argument pos:start="245:22" pos:end="245:27"><expr pos:start="245:22" pos:end="245:27"><name pos:start="245:22" pos:end="245:27">p2_org</name></expr></argument>, <argument pos:start="245:30" pos:end="245:51"><expr pos:start="245:30" pos:end="245:51"><name pos:start="245:30" pos:end="245:33">data</name> <operator pos:start="245:35" pos:end="245:35">-</operator> <operator pos:start="245:37" pos:end="245:37">(</operator><literal type="number" pos:start="245:38" pos:end="245:38">3</literal> <operator pos:start="245:40" pos:end="245:40">*</operator> <name pos:start="245:42" pos:end="245:50">img_width</name><operator pos:start="245:51" pos:end="245:51">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <block pos:start="251:9" pos:end="279:9">{<block_content pos:start="253:13" pos:end="277:13">

            <decl_stmt pos:start="253:13" pos:end="253:73"><decl pos:start="253:13" pos:end="253:44"><type pos:start="253:13" pos:end="253:17"><name pos:start="253:13" pos:end="253:17">v8u16</name></type> <name pos:start="253:19" pos:end="253:44">negate_is_less_than_beta_r</name></decl>, <decl pos:start="253:47" pos:end="253:72"><type ref="prev" pos:start="253:13" pos:end="253:17"/><name pos:start="253:47" pos:end="253:72">negate_is_less_than_beta_l</name></decl>;</decl_stmt>



            <expr_stmt pos:start="257:13" pos:end="259:80"><expr pos:start="257:13" pos:end="259:79"><name pos:start="257:13" pos:end="257:38">negate_is_less_than_beta_r</name> <operator pos:start="257:40" pos:end="257:40">=</operator>

                <operator pos:start="259:17" pos:end="259:17">(</operator><name pos:start="259:18" pos:end="259:22">v8u16</name><operator pos:start="259:23" pos:end="259:23">)</operator> <call pos:start="259:25" pos:end="259:79"><name pos:start="259:25" pos:end="259:36">__msa_sldi_b</name><argument_list pos:start="259:37" pos:end="259:79">(<argument pos:start="259:38" pos:end="259:69"><expr pos:start="259:38" pos:end="259:69"><operator pos:start="259:38" pos:end="259:38">(</operator><name pos:start="259:39" pos:end="259:43">v16i8</name><operator pos:start="259:44" pos:end="259:44">)</operator> <name pos:start="259:46" pos:end="259:69">negate_is_less_than_beta</name></expr></argument>, <argument pos:start="259:72" pos:end="259:75"><expr pos:start="259:72" pos:end="259:75"><name pos:start="259:72" pos:end="259:75">zero</name></expr></argument>, <argument pos:start="259:78" pos:end="259:78"><expr pos:start="259:78" pos:end="259:78"><literal type="number" pos:start="259:78" pos:end="259:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="261:13" pos:end="265:13"><if pos:start="261:13" pos:end="265:13">if <condition pos:start="261:16" pos:end="261:69">(<expr pos:start="261:17" pos:end="261:68"><operator pos:start="261:17" pos:end="261:17">!</operator><call pos:start="261:18" pos:end="261:68"><name pos:start="261:18" pos:end="261:32">__msa_test_bz_v</name><argument_list pos:start="261:33" pos:end="261:68">(<argument pos:start="261:34" pos:end="261:67"><expr pos:start="261:34" pos:end="261:67"><operator pos:start="261:34" pos:end="261:34">(</operator><name pos:start="261:35" pos:end="261:39">v16u8</name><operator pos:start="261:40" pos:end="261:40">)</operator> <name pos:start="261:42" pos:end="261:67">negate_is_less_than_beta_r</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="261:71" pos:end="265:13">{<block_content pos:start="263:17" pos:end="263:77">

                <expr_stmt pos:start="263:17" pos:end="263:77"><expr pos:start="263:17" pos:end="263:76"><call pos:start="263:17" pos:end="263:76"><name pos:start="263:17" pos:end="263:40">AVC_LOOP_FILTER_P0_OR_Q0</name><argument_list pos:start="263:41" pos:end="263:76">(<argument pos:start="263:42" pos:end="263:49"><expr pos:start="263:42" pos:end="263:49"><name pos:start="263:42" pos:end="263:49">p0_org_r</name></expr></argument>, <argument pos:start="263:52" pos:end="263:59"><expr pos:start="263:52" pos:end="263:59"><name pos:start="263:52" pos:end="263:59">q1_org_r</name></expr></argument>, <argument pos:start="263:62" pos:end="263:69"><expr pos:start="263:62" pos:end="263:69"><name pos:start="263:62" pos:end="263:69">p1_org_r</name></expr></argument>, <argument pos:start="263:72" pos:end="263:75"><expr pos:start="263:72" pos:end="263:75"><name pos:start="263:72" pos:end="263:75">p0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="269:13" pos:end="271:80"><expr pos:start="269:13" pos:end="271:79"><name pos:start="269:13" pos:end="269:38">negate_is_less_than_beta_l</name> <operator pos:start="269:40" pos:end="269:40">=</operator>

                <operator pos:start="271:17" pos:end="271:17">(</operator><name pos:start="271:18" pos:end="271:22">v8u16</name><operator pos:start="271:23" pos:end="271:23">)</operator> <call pos:start="271:25" pos:end="271:79"><name pos:start="271:25" pos:end="271:36">__msa_sldi_b</name><argument_list pos:start="271:37" pos:end="271:79">(<argument pos:start="271:38" pos:end="271:41"><expr pos:start="271:38" pos:end="271:41"><name pos:start="271:38" pos:end="271:41">zero</name></expr></argument>, <argument pos:start="271:44" pos:end="271:75"><expr pos:start="271:44" pos:end="271:75"><operator pos:start="271:44" pos:end="271:44">(</operator><name pos:start="271:45" pos:end="271:49">v16i8</name><operator pos:start="271:50" pos:end="271:50">)</operator> <name pos:start="271:52" pos:end="271:75">negate_is_less_than_beta</name></expr></argument>, <argument pos:start="271:78" pos:end="271:78"><expr pos:start="271:78" pos:end="271:78"><literal type="number" pos:start="271:78" pos:end="271:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="273:13" pos:end="277:13"><if pos:start="273:13" pos:end="277:13">if <condition pos:start="273:16" pos:end="273:69">(<expr pos:start="273:17" pos:end="273:68"><operator pos:start="273:17" pos:end="273:17">!</operator><call pos:start="273:18" pos:end="273:68"><name pos:start="273:18" pos:end="273:32">__msa_test_bz_v</name><argument_list pos:start="273:33" pos:end="273:68">(<argument pos:start="273:34" pos:end="273:67"><expr pos:start="273:34" pos:end="273:67"><operator pos:start="273:34" pos:end="273:34">(</operator><name pos:start="273:35" pos:end="273:39">v16u8</name><operator pos:start="273:40" pos:end="273:40">)</operator> <name pos:start="273:42" pos:end="273:67">negate_is_less_than_beta_l</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="273:71" pos:end="277:13">{<block_content pos:start="275:17" pos:end="275:77">

                <expr_stmt pos:start="275:17" pos:end="275:77"><expr pos:start="275:17" pos:end="275:76"><call pos:start="275:17" pos:end="275:76"><name pos:start="275:17" pos:end="275:40">AVC_LOOP_FILTER_P0_OR_Q0</name><argument_list pos:start="275:41" pos:end="275:76">(<argument pos:start="275:42" pos:end="275:49"><expr pos:start="275:42" pos:end="275:49"><name pos:start="275:42" pos:end="275:49">p0_org_l</name></expr></argument>, <argument pos:start="275:52" pos:end="275:59"><expr pos:start="275:52" pos:end="275:59"><name pos:start="275:52" pos:end="275:59">q1_org_l</name></expr></argument>, <argument pos:start="275:62" pos:end="275:69"><expr pos:start="275:62" pos:end="275:69"><name pos:start="275:62" pos:end="275:69">p1_org_l</name></expr></argument>, <argument pos:start="275:72" pos:end="275:75"><expr pos:start="275:72" pos:end="275:75"><name pos:start="275:72" pos:end="275:75">p0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <comment type="block" pos:start="283:9" pos:end="283:21">/* combine */</comment>

        <if_stmt pos:start="285:9" pos:end="291:9"><if pos:start="285:9" pos:end="291:9">if <condition pos:start="285:12" pos:end="285:55">(<expr pos:start="285:13" pos:end="285:54"><operator pos:start="285:13" pos:end="285:13">!</operator><call pos:start="285:14" pos:end="285:54"><name pos:start="285:14" pos:end="285:28">__msa_test_bz_v</name><argument_list pos:start="285:29" pos:end="285:54">(<argument pos:start="285:30" pos:end="285:53"><expr pos:start="285:30" pos:end="285:53"><name pos:start="285:30" pos:end="285:53">negate_is_less_than_beta</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="285:57" pos:end="291:9">{<block_content pos:start="287:13" pos:end="289:72">

            <expr_stmt pos:start="287:13" pos:end="287:67"><expr pos:start="287:13" pos:end="287:66"><name pos:start="287:13" pos:end="287:14">p0</name> <operator pos:start="287:16" pos:end="287:16">=</operator> <operator pos:start="287:18" pos:end="287:18">(</operator><name pos:start="287:19" pos:end="287:23">v16u8</name><operator pos:start="287:24" pos:end="287:24">)</operator> <call pos:start="287:26" pos:end="287:66"><name pos:start="287:26" pos:end="287:38">__msa_pckev_b</name><argument_list pos:start="287:39" pos:end="287:66">(<argument pos:start="287:40" pos:end="287:51"><expr pos:start="287:40" pos:end="287:51"><operator pos:start="287:40" pos:end="287:40">(</operator><name pos:start="287:41" pos:end="287:45">v16i8</name><operator pos:start="287:46" pos:end="287:46">)</operator> <name pos:start="287:48" pos:end="287:51">p0_l</name></expr></argument>, <argument pos:start="287:54" pos:end="287:65"><expr pos:start="287:54" pos:end="287:65"><operator pos:start="287:54" pos:end="287:54">(</operator><name pos:start="287:55" pos:end="287:59">v16i8</name><operator pos:start="287:60" pos:end="287:60">)</operator> <name pos:start="287:62" pos:end="287:65">p0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="289:13" pos:end="289:72"><expr pos:start="289:13" pos:end="289:71"><name pos:start="289:13" pos:end="289:18">p0_org</name> <operator pos:start="289:20" pos:end="289:20">=</operator> <call pos:start="289:22" pos:end="289:71"><name pos:start="289:22" pos:end="289:33">__msa_bmnz_v</name><argument_list pos:start="289:34" pos:end="289:71">(<argument pos:start="289:35" pos:end="289:40"><expr pos:start="289:35" pos:end="289:40"><name pos:start="289:35" pos:end="289:40">p0_org</name></expr></argument>, <argument pos:start="289:43" pos:end="289:44"><expr pos:start="289:43" pos:end="289:44"><name pos:start="289:43" pos:end="289:44">p0</name></expr></argument>, <argument pos:start="289:47" pos:end="289:70"><expr pos:start="289:47" pos:end="289:70"><name pos:start="289:47" pos:end="289:70">negate_is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="295:9" pos:end="295:43"><expr pos:start="295:9" pos:end="295:42"><call pos:start="295:9" pos:end="295:42"><name pos:start="295:9" pos:end="295:16">STORE_UB</name><argument_list pos:start="295:17" pos:end="295:42">(<argument pos:start="295:18" pos:end="295:23"><expr pos:start="295:18" pos:end="295:23"><name pos:start="295:18" pos:end="295:23">p0_org</name></expr></argument>, <argument pos:start="295:26" pos:end="295:41"><expr pos:start="295:26" pos:end="295:41"><name pos:start="295:26" pos:end="295:29">data</name> <operator pos:start="295:31" pos:end="295:31">-</operator> <name pos:start="295:33" pos:end="295:41">img_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <comment type="block" pos:start="299:9" pos:end="299:72">/* if (tmpFlag &amp;&amp; (unsigned)ABS(q2-q0) &lt; thresholds-&gt;beta_in) */</comment>



        <expr_stmt pos:start="303:9" pos:end="303:49"><expr pos:start="303:9" pos:end="303:48"><name pos:start="303:9" pos:end="303:14">q3_org</name> <operator pos:start="303:16" pos:end="303:16">=</operator> <call pos:start="303:18" pos:end="303:48"><name pos:start="303:18" pos:end="303:24">LOAD_UB</name><argument_list pos:start="303:25" pos:end="303:48">(<argument pos:start="303:26" pos:end="303:47"><expr pos:start="303:26" pos:end="303:47"><name pos:start="303:26" pos:end="303:29">data</name> <operator pos:start="303:31" pos:end="303:31">+</operator> <operator pos:start="303:33" pos:end="303:33">(</operator><literal type="number" pos:start="303:34" pos:end="303:34">3</literal> <operator pos:start="303:36" pos:end="303:36">*</operator> <name pos:start="303:38" pos:end="303:46">img_width</name><operator pos:start="303:47" pos:end="303:47">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="307:9" pos:end="307:52"><expr pos:start="307:9" pos:end="307:51"><name pos:start="307:9" pos:end="307:18">q2_asub_q0</name> <operator pos:start="307:20" pos:end="307:20">=</operator> <call pos:start="307:22" pos:end="307:51"><name pos:start="307:22" pos:end="307:35">__msa_asub_u_b</name><argument_list pos:start="307:36" pos:end="307:51">(<argument pos:start="307:37" pos:end="307:42"><expr pos:start="307:37" pos:end="307:42"><name pos:start="307:37" pos:end="307:42">q2_org</name></expr></argument>, <argument pos:start="307:45" pos:end="307:50"><expr pos:start="307:45" pos:end="307:50"><name pos:start="307:45" pos:end="307:50">q0_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="309:9" pos:end="309:48"><expr pos:start="309:9" pos:end="309:47"><name pos:start="309:9" pos:end="309:25">is_less_than_beta</name> <operator pos:start="309:27" pos:end="309:27">=</operator> <operator pos:start="309:29" pos:end="309:29">(</operator><name pos:start="309:30" pos:end="309:39">q2_asub_q0</name> <operator pos:start="309:41" pos:end="309:41">&lt;</operator> <name pos:start="309:43" pos:end="309:46">beta</name><operator pos:start="309:47" pos:end="309:47">)</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="311:9" pos:end="311:57"><expr pos:start="311:9" pos:end="311:56"><name pos:start="311:9" pos:end="311:25">is_less_than_beta</name> <operator pos:start="311:27" pos:end="311:27">=</operator> <name pos:start="311:29" pos:end="311:45">is_less_than_beta</name> <operator pos:start="311:47" pos:end="311:47">&amp;</operator> <name pos:start="311:49" pos:end="311:56">tmp_flag</name></expr>;</expr_stmt>

        <expr_stmt pos:start="313:9" pos:end="313:73"><expr pos:start="313:9" pos:end="313:72"><name pos:start="313:9" pos:end="313:32">negate_is_less_than_beta</name> <operator pos:start="313:34" pos:end="313:34">=</operator> <call pos:start="313:36" pos:end="313:72"><name pos:start="313:36" pos:end="313:47">__msa_xori_b</name><argument_list pos:start="313:48" pos:end="313:72">(<argument pos:start="313:49" pos:end="313:65"><expr pos:start="313:49" pos:end="313:65"><name pos:start="313:49" pos:end="313:65">is_less_than_beta</name></expr></argument>, <argument pos:start="313:68" pos:end="313:71"><expr pos:start="313:68" pos:end="313:71"><literal type="number" pos:start="313:68" pos:end="313:71">0xff</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="315:9" pos:end="315:61"><expr pos:start="315:9" pos:end="315:60"><name pos:start="315:9" pos:end="315:25">is_less_than_beta</name> <operator pos:start="315:27" pos:end="315:27">=</operator> <name pos:start="315:29" pos:end="315:45">is_less_than_beta</name> <operator pos:start="315:47" pos:end="315:47">&amp;</operator> <name pos:start="315:49" pos:end="315:60">is_less_than</name></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:75"><expr pos:start="317:9" pos:end="317:74"><name pos:start="317:9" pos:end="317:32">negate_is_less_than_beta</name> <operator pos:start="317:34" pos:end="317:34">=</operator> <name pos:start="317:36" pos:end="317:59">negate_is_less_than_beta</name> <operator pos:start="317:61" pos:end="317:61">&amp;</operator> <name pos:start="317:63" pos:end="317:74">is_less_than</name></expr>;</expr_stmt>



        <block pos:start="321:9" pos:end="381:9">{<block_content pos:start="323:13" pos:end="379:13">

            <decl_stmt pos:start="323:13" pos:end="323:59"><decl pos:start="323:13" pos:end="323:37"><type pos:start="323:13" pos:end="323:17"><name pos:start="323:13" pos:end="323:17">v8u16</name></type> <name pos:start="323:19" pos:end="323:37">is_less_than_beta_l</name></decl>, <decl pos:start="323:40" pos:end="323:58"><type ref="prev" pos:start="323:13" pos:end="323:17"/><name pos:start="323:40" pos:end="323:58">is_less_than_beta_r</name></decl>;</decl_stmt>



            <expr_stmt pos:start="327:13" pos:end="329:73"><expr pos:start="327:13" pos:end="329:72"><name pos:start="327:13" pos:end="327:31">is_less_than_beta_r</name> <operator pos:start="327:33" pos:end="327:33">=</operator>

                <operator pos:start="329:17" pos:end="329:17">(</operator><name pos:start="329:18" pos:end="329:22">v8u16</name><operator pos:start="329:23" pos:end="329:23">)</operator> <call pos:start="329:25" pos:end="329:72"><name pos:start="329:25" pos:end="329:36">__msa_sldi_b</name><argument_list pos:start="329:37" pos:end="329:72">(<argument pos:start="329:38" pos:end="329:62"><expr pos:start="329:38" pos:end="329:62"><operator pos:start="329:38" pos:end="329:38">(</operator><name pos:start="329:39" pos:end="329:43">v16i8</name><operator pos:start="329:44" pos:end="329:44">)</operator> <name pos:start="329:46" pos:end="329:62">is_less_than_beta</name></expr></argument>, <argument pos:start="329:65" pos:end="329:68"><expr pos:start="329:65" pos:end="329:68"><name pos:start="329:65" pos:end="329:68">zero</name></expr></argument>, <argument pos:start="329:71" pos:end="329:71"><expr pos:start="329:71" pos:end="329:71"><literal type="number" pos:start="329:71" pos:end="329:71">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="331:13" pos:end="351:13"><if pos:start="331:13" pos:end="351:13">if <condition pos:start="331:16" pos:end="331:62">(<expr pos:start="331:17" pos:end="331:61"><operator pos:start="331:17" pos:end="331:17">!</operator><call pos:start="331:18" pos:end="331:61"><name pos:start="331:18" pos:end="331:32">__msa_test_bz_v</name><argument_list pos:start="331:33" pos:end="331:61">(<argument pos:start="331:34" pos:end="331:60"><expr pos:start="331:34" pos:end="331:60"><operator pos:start="331:34" pos:end="331:34">(</operator><name pos:start="331:35" pos:end="331:39">v16u8</name><operator pos:start="331:40" pos:end="331:40">)</operator> <name pos:start="331:42" pos:end="331:60">is_less_than_beta_r</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="331:64" pos:end="351:13">{<block_content pos:start="333:17" pos:end="349:67">

                <decl_stmt pos:start="333:17" pos:end="333:31"><decl pos:start="333:17" pos:end="333:30"><type pos:start="333:17" pos:end="333:21"><name pos:start="333:17" pos:end="333:21">v8i16</name></type> <name pos:start="333:23" pos:end="333:30">q3_org_r</name></decl>;</decl_stmt>



                <expr_stmt pos:start="337:17" pos:end="337:70"><expr pos:start="337:17" pos:end="337:69"><name pos:start="337:17" pos:end="337:24">q3_org_r</name> <operator pos:start="337:26" pos:end="337:26">=</operator> <operator pos:start="337:28" pos:end="337:28">(</operator><name pos:start="337:29" pos:end="337:33">v8i16</name><operator pos:start="337:34" pos:end="337:34">)</operator> <call pos:start="337:36" pos:end="337:69"><name pos:start="337:36" pos:end="337:47">__msa_ilvr_b</name><argument_list pos:start="337:48" pos:end="337:69">(<argument pos:start="337:49" pos:end="337:52"><expr pos:start="337:49" pos:end="337:52"><name pos:start="337:49" pos:end="337:52">zero</name></expr></argument>, <argument pos:start="337:55" pos:end="337:68"><expr pos:start="337:55" pos:end="337:68"><operator pos:start="337:55" pos:end="337:55">(</operator><name pos:start="337:56" pos:end="337:60">v16i8</name><operator pos:start="337:61" pos:end="337:61">)</operator> <name pos:start="337:63" pos:end="337:68">q3_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="339:17" pos:end="339:66"><expr pos:start="339:17" pos:end="339:65"><name pos:start="339:17" pos:end="339:20">q2_r</name> <operator pos:start="339:22" pos:end="339:22">=</operator> <operator pos:start="339:24" pos:end="339:24">(</operator><name pos:start="339:25" pos:end="339:29">v8i16</name><operator pos:start="339:30" pos:end="339:30">)</operator> <call pos:start="339:32" pos:end="339:65"><name pos:start="339:32" pos:end="339:43">__msa_ilvr_b</name><argument_list pos:start="339:44" pos:end="339:65">(<argument pos:start="339:45" pos:end="339:48"><expr pos:start="339:45" pos:end="339:48"><name pos:start="339:45" pos:end="339:48">zero</name></expr></argument>, <argument pos:start="339:51" pos:end="339:64"><expr pos:start="339:51" pos:end="339:64"><operator pos:start="339:51" pos:end="339:51">(</operator><name pos:start="339:52" pos:end="339:56">v16i8</name><operator pos:start="339:57" pos:end="339:57">)</operator> <name pos:start="339:59" pos:end="339:64">q2_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="343:17" pos:end="349:67"><expr pos:start="343:17" pos:end="349:66"><call pos:start="343:17" pos:end="349:66"><name pos:start="343:17" pos:end="343:48">AVC_LOOP_FILTER_P0P1P2_OR_Q0Q1Q2</name><argument_list pos:start="343:49" pos:end="349:66">(<argument pos:start="343:50" pos:end="343:57"><expr pos:start="343:50" pos:end="343:57"><name pos:start="343:50" pos:end="343:57">q3_org_r</name></expr></argument>, <argument pos:start="343:60" pos:end="343:67"><expr pos:start="343:60" pos:end="343:67"><name pos:start="343:60" pos:end="343:67">q0_org_r</name></expr></argument>,

                                                 <argument pos:start="345:50" pos:end="345:57"><expr pos:start="345:50" pos:end="345:57"><name pos:start="345:50" pos:end="345:57">p0_org_r</name></expr></argument>, <argument pos:start="345:60" pos:end="345:67"><expr pos:start="345:60" pos:end="345:67"><name pos:start="345:60" pos:end="345:67">q1_org_r</name></expr></argument>,

                                                 <argument pos:start="347:50" pos:end="347:53"><expr pos:start="347:50" pos:end="347:53"><name pos:start="347:50" pos:end="347:53">q2_r</name></expr></argument>, <argument pos:start="347:56" pos:end="347:63"><expr pos:start="347:56" pos:end="347:63"><name pos:start="347:56" pos:end="347:63">p1_org_r</name></expr></argument>,

                                                 <argument pos:start="349:50" pos:end="349:53"><expr pos:start="349:50" pos:end="349:53"><name pos:start="349:50" pos:end="349:53">q0_r</name></expr></argument>, <argument pos:start="349:56" pos:end="349:59"><expr pos:start="349:56" pos:end="349:59"><name pos:start="349:56" pos:end="349:59">q1_r</name></expr></argument>, <argument pos:start="349:62" pos:end="349:65"><expr pos:start="349:62" pos:end="349:65"><name pos:start="349:62" pos:end="349:65">q2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="355:13" pos:end="357:73"><expr pos:start="355:13" pos:end="357:72"><name pos:start="355:13" pos:end="355:31">is_less_than_beta_l</name> <operator pos:start="355:33" pos:end="355:33">=</operator>

                <operator pos:start="357:17" pos:end="357:17">(</operator><name pos:start="357:18" pos:end="357:22">v8u16</name><operator pos:start="357:23" pos:end="357:23">)</operator> <call pos:start="357:25" pos:end="357:72"><name pos:start="357:25" pos:end="357:36">__msa_sldi_b</name><argument_list pos:start="357:37" pos:end="357:72">(<argument pos:start="357:38" pos:end="357:41"><expr pos:start="357:38" pos:end="357:41"><name pos:start="357:38" pos:end="357:41">zero</name></expr></argument>, <argument pos:start="357:44" pos:end="357:68"><expr pos:start="357:44" pos:end="357:68"><operator pos:start="357:44" pos:end="357:44">(</operator><name pos:start="357:45" pos:end="357:49">v16i8</name><operator pos:start="357:50" pos:end="357:50">)</operator> <name pos:start="357:52" pos:end="357:68">is_less_than_beta</name></expr></argument>, <argument pos:start="357:71" pos:end="357:71"><expr pos:start="357:71" pos:end="357:71"><literal type="number" pos:start="357:71" pos:end="357:71">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="359:13" pos:end="379:13"><if pos:start="359:13" pos:end="379:13">if <condition pos:start="359:16" pos:end="359:62">(<expr pos:start="359:17" pos:end="359:61"><operator pos:start="359:17" pos:end="359:17">!</operator><call pos:start="359:18" pos:end="359:61"><name pos:start="359:18" pos:end="359:32">__msa_test_bz_v</name><argument_list pos:start="359:33" pos:end="359:61">(<argument pos:start="359:34" pos:end="359:60"><expr pos:start="359:34" pos:end="359:60"><operator pos:start="359:34" pos:end="359:34">(</operator><name pos:start="359:35" pos:end="359:39">v16u8</name><operator pos:start="359:40" pos:end="359:40">)</operator> <name pos:start="359:42" pos:end="359:60">is_less_than_beta_l</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="359:64" pos:end="379:13">{<block_content pos:start="361:17" pos:end="377:67">

                <decl_stmt pos:start="361:17" pos:end="361:31"><decl pos:start="361:17" pos:end="361:30"><type pos:start="361:17" pos:end="361:21"><name pos:start="361:17" pos:end="361:21">v8i16</name></type> <name pos:start="361:23" pos:end="361:30">q3_org_l</name></decl>;</decl_stmt>



                <expr_stmt pos:start="365:17" pos:end="365:70"><expr pos:start="365:17" pos:end="365:69"><name pos:start="365:17" pos:end="365:24">q3_org_l</name> <operator pos:start="365:26" pos:end="365:26">=</operator> <operator pos:start="365:28" pos:end="365:28">(</operator><name pos:start="365:29" pos:end="365:33">v8i16</name><operator pos:start="365:34" pos:end="365:34">)</operator> <call pos:start="365:36" pos:end="365:69"><name pos:start="365:36" pos:end="365:47">__msa_ilvl_b</name><argument_list pos:start="365:48" pos:end="365:69">(<argument pos:start="365:49" pos:end="365:52"><expr pos:start="365:49" pos:end="365:52"><name pos:start="365:49" pos:end="365:52">zero</name></expr></argument>, <argument pos:start="365:55" pos:end="365:68"><expr pos:start="365:55" pos:end="365:68"><operator pos:start="365:55" pos:end="365:55">(</operator><name pos:start="365:56" pos:end="365:60">v16i8</name><operator pos:start="365:61" pos:end="365:61">)</operator> <name pos:start="365:63" pos:end="365:68">q3_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="367:17" pos:end="367:66"><expr pos:start="367:17" pos:end="367:65"><name pos:start="367:17" pos:end="367:20">q2_l</name> <operator pos:start="367:22" pos:end="367:22">=</operator> <operator pos:start="367:24" pos:end="367:24">(</operator><name pos:start="367:25" pos:end="367:29">v8i16</name><operator pos:start="367:30" pos:end="367:30">)</operator> <call pos:start="367:32" pos:end="367:65"><name pos:start="367:32" pos:end="367:43">__msa_ilvl_b</name><argument_list pos:start="367:44" pos:end="367:65">(<argument pos:start="367:45" pos:end="367:48"><expr pos:start="367:45" pos:end="367:48"><name pos:start="367:45" pos:end="367:48">zero</name></expr></argument>, <argument pos:start="367:51" pos:end="367:64"><expr pos:start="367:51" pos:end="367:64"><operator pos:start="367:51" pos:end="367:51">(</operator><name pos:start="367:52" pos:end="367:56">v16i8</name><operator pos:start="367:57" pos:end="367:57">)</operator> <name pos:start="367:59" pos:end="367:64">q2_org</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



                <expr_stmt pos:start="371:17" pos:end="377:67"><expr pos:start="371:17" pos:end="377:66"><call pos:start="371:17" pos:end="377:66"><name pos:start="371:17" pos:end="371:48">AVC_LOOP_FILTER_P0P1P2_OR_Q0Q1Q2</name><argument_list pos:start="371:49" pos:end="377:66">(<argument pos:start="371:50" pos:end="371:57"><expr pos:start="371:50" pos:end="371:57"><name pos:start="371:50" pos:end="371:57">q3_org_l</name></expr></argument>, <argument pos:start="371:60" pos:end="371:67"><expr pos:start="371:60" pos:end="371:67"><name pos:start="371:60" pos:end="371:67">q0_org_l</name></expr></argument>,

                                                 <argument pos:start="373:50" pos:end="373:57"><expr pos:start="373:50" pos:end="373:57"><name pos:start="373:50" pos:end="373:57">p0_org_l</name></expr></argument>, <argument pos:start="373:60" pos:end="373:67"><expr pos:start="373:60" pos:end="373:67"><name pos:start="373:60" pos:end="373:67">q1_org_l</name></expr></argument>,

                                                 <argument pos:start="375:50" pos:end="375:53"><expr pos:start="375:50" pos:end="375:53"><name pos:start="375:50" pos:end="375:53">q2_l</name></expr></argument>, <argument pos:start="375:56" pos:end="375:63"><expr pos:start="375:56" pos:end="375:63"><name pos:start="375:56" pos:end="375:63">p1_org_l</name></expr></argument>,

                                                 <argument pos:start="377:50" pos:end="377:53"><expr pos:start="377:50" pos:end="377:53"><name pos:start="377:50" pos:end="377:53">q0_l</name></expr></argument>, <argument pos:start="377:56" pos:end="377:59"><expr pos:start="377:56" pos:end="377:59"><name pos:start="377:56" pos:end="377:59">q1_l</name></expr></argument>, <argument pos:start="377:62" pos:end="377:65"><expr pos:start="377:62" pos:end="377:65"><name pos:start="377:62" pos:end="377:65">q2_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <comment type="block" pos:start="385:9" pos:end="385:31">/* combine and store */</comment>

        <if_stmt pos:start="387:9" pos:end="409:9"><if pos:start="387:9" pos:end="409:9">if <condition pos:start="387:12" pos:end="387:48">(<expr pos:start="387:13" pos:end="387:47"><operator pos:start="387:13" pos:end="387:13">!</operator><call pos:start="387:14" pos:end="387:47"><name pos:start="387:14" pos:end="387:28">__msa_test_bz_v</name><argument_list pos:start="387:29" pos:end="387:47">(<argument pos:start="387:30" pos:end="387:46"><expr pos:start="387:30" pos:end="387:46"><name pos:start="387:30" pos:end="387:46">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="387:50" pos:end="409:9">{<block_content pos:start="389:13" pos:end="407:51">

            <expr_stmt pos:start="389:13" pos:end="389:67"><expr pos:start="389:13" pos:end="389:66"><name pos:start="389:13" pos:end="389:14">q0</name> <operator pos:start="389:16" pos:end="389:16">=</operator> <operator pos:start="389:18" pos:end="389:18">(</operator><name pos:start="389:19" pos:end="389:23">v16u8</name><operator pos:start="389:24" pos:end="389:24">)</operator> <call pos:start="389:26" pos:end="389:66"><name pos:start="389:26" pos:end="389:38">__msa_pckev_b</name><argument_list pos:start="389:39" pos:end="389:66">(<argument pos:start="389:40" pos:end="389:51"><expr pos:start="389:40" pos:end="389:51"><operator pos:start="389:40" pos:end="389:40">(</operator><name pos:start="389:41" pos:end="389:45">v16i8</name><operator pos:start="389:46" pos:end="389:46">)</operator> <name pos:start="389:48" pos:end="389:51">q0_l</name></expr></argument>, <argument pos:start="389:54" pos:end="389:65"><expr pos:start="389:54" pos:end="389:65"><operator pos:start="389:54" pos:end="389:54">(</operator><name pos:start="389:55" pos:end="389:59">v16i8</name><operator pos:start="389:60" pos:end="389:60">)</operator> <name pos:start="389:62" pos:end="389:65">q0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="391:13" pos:end="391:67"><expr pos:start="391:13" pos:end="391:66"><name pos:start="391:13" pos:end="391:14">q1</name> <operator pos:start="391:16" pos:end="391:16">=</operator> <operator pos:start="391:18" pos:end="391:18">(</operator><name pos:start="391:19" pos:end="391:23">v16u8</name><operator pos:start="391:24" pos:end="391:24">)</operator> <call pos:start="391:26" pos:end="391:66"><name pos:start="391:26" pos:end="391:38">__msa_pckev_b</name><argument_list pos:start="391:39" pos:end="391:66">(<argument pos:start="391:40" pos:end="391:51"><expr pos:start="391:40" pos:end="391:51"><operator pos:start="391:40" pos:end="391:40">(</operator><name pos:start="391:41" pos:end="391:45">v16i8</name><operator pos:start="391:46" pos:end="391:46">)</operator> <name pos:start="391:48" pos:end="391:51">q1_l</name></expr></argument>, <argument pos:start="391:54" pos:end="391:65"><expr pos:start="391:54" pos:end="391:65"><operator pos:start="391:54" pos:end="391:54">(</operator><name pos:start="391:55" pos:end="391:59">v16i8</name><operator pos:start="391:60" pos:end="391:60">)</operator> <name pos:start="391:62" pos:end="391:65">q1_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="393:13" pos:end="393:67"><expr pos:start="393:13" pos:end="393:66"><name pos:start="393:13" pos:end="393:14">q2</name> <operator pos:start="393:16" pos:end="393:16">=</operator> <operator pos:start="393:18" pos:end="393:18">(</operator><name pos:start="393:19" pos:end="393:23">v16u8</name><operator pos:start="393:24" pos:end="393:24">)</operator> <call pos:start="393:26" pos:end="393:66"><name pos:start="393:26" pos:end="393:38">__msa_pckev_b</name><argument_list pos:start="393:39" pos:end="393:66">(<argument pos:start="393:40" pos:end="393:51"><expr pos:start="393:40" pos:end="393:51"><operator pos:start="393:40" pos:end="393:40">(</operator><name pos:start="393:41" pos:end="393:45">v16i8</name><operator pos:start="393:46" pos:end="393:46">)</operator> <name pos:start="393:48" pos:end="393:51">q2_l</name></expr></argument>, <argument pos:start="393:54" pos:end="393:65"><expr pos:start="393:54" pos:end="393:65"><operator pos:start="393:54" pos:end="393:54">(</operator><name pos:start="393:55" pos:end="393:59">v16i8</name><operator pos:start="393:60" pos:end="393:60">)</operator> <name pos:start="393:62" pos:end="393:65">q2_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="397:13" pos:end="397:65"><expr pos:start="397:13" pos:end="397:64"><name pos:start="397:13" pos:end="397:18">q0_org</name> <operator pos:start="397:20" pos:end="397:20">=</operator> <call pos:start="397:22" pos:end="397:64"><name pos:start="397:22" pos:end="397:33">__msa_bmnz_v</name><argument_list pos:start="397:34" pos:end="397:64">(<argument pos:start="397:35" pos:end="397:40"><expr pos:start="397:35" pos:end="397:40"><name pos:start="397:35" pos:end="397:40">q0_org</name></expr></argument>, <argument pos:start="397:43" pos:end="397:44"><expr pos:start="397:43" pos:end="397:44"><name pos:start="397:43" pos:end="397:44">q0</name></expr></argument>, <argument pos:start="397:47" pos:end="397:63"><expr pos:start="397:47" pos:end="397:63"><name pos:start="397:47" pos:end="397:63">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="399:13" pos:end="399:65"><expr pos:start="399:13" pos:end="399:64"><name pos:start="399:13" pos:end="399:18">q1_org</name> <operator pos:start="399:20" pos:end="399:20">=</operator> <call pos:start="399:22" pos:end="399:64"><name pos:start="399:22" pos:end="399:33">__msa_bmnz_v</name><argument_list pos:start="399:34" pos:end="399:64">(<argument pos:start="399:35" pos:end="399:40"><expr pos:start="399:35" pos:end="399:40"><name pos:start="399:35" pos:end="399:40">q1_org</name></expr></argument>, <argument pos:start="399:43" pos:end="399:44"><expr pos:start="399:43" pos:end="399:44"><name pos:start="399:43" pos:end="399:44">q1</name></expr></argument>, <argument pos:start="399:47" pos:end="399:63"><expr pos:start="399:47" pos:end="399:63"><name pos:start="399:47" pos:end="399:63">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="401:13" pos:end="401:65"><expr pos:start="401:13" pos:end="401:64"><name pos:start="401:13" pos:end="401:18">q2_org</name> <operator pos:start="401:20" pos:end="401:20">=</operator> <call pos:start="401:22" pos:end="401:64"><name pos:start="401:22" pos:end="401:33">__msa_bmnz_v</name><argument_list pos:start="401:34" pos:end="401:64">(<argument pos:start="401:35" pos:end="401:40"><expr pos:start="401:35" pos:end="401:40"><name pos:start="401:35" pos:end="401:40">q2_org</name></expr></argument>, <argument pos:start="401:43" pos:end="401:44"><expr pos:start="401:43" pos:end="401:44"><name pos:start="401:43" pos:end="401:44">q2</name></expr></argument>, <argument pos:start="401:47" pos:end="401:63"><expr pos:start="401:47" pos:end="401:63"><name pos:start="401:47" pos:end="401:63">is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



            <expr_stmt pos:start="405:13" pos:end="405:47"><expr pos:start="405:13" pos:end="405:46"><call pos:start="405:13" pos:end="405:46"><name pos:start="405:13" pos:end="405:20">STORE_UB</name><argument_list pos:start="405:21" pos:end="405:46">(<argument pos:start="405:22" pos:end="405:27"><expr pos:start="405:22" pos:end="405:27"><name pos:start="405:22" pos:end="405:27">q1_org</name></expr></argument>, <argument pos:start="405:30" pos:end="405:45"><expr pos:start="405:30" pos:end="405:45"><name pos:start="405:30" pos:end="405:33">data</name> <operator pos:start="405:35" pos:end="405:35">+</operator> <name pos:start="405:37" pos:end="405:45">img_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="407:13" pos:end="407:51"><expr pos:start="407:13" pos:end="407:50"><call pos:start="407:13" pos:end="407:50"><name pos:start="407:13" pos:end="407:20">STORE_UB</name><argument_list pos:start="407:21" pos:end="407:50">(<argument pos:start="407:22" pos:end="407:27"><expr pos:start="407:22" pos:end="407:27"><name pos:start="407:22" pos:end="407:27">q2_org</name></expr></argument>, <argument pos:start="407:30" pos:end="407:49"><expr pos:start="407:30" pos:end="407:49"><name pos:start="407:30" pos:end="407:33">data</name> <operator pos:start="407:35" pos:end="407:35">+</operator> <literal type="number" pos:start="407:37" pos:end="407:37">2</literal> <operator pos:start="407:39" pos:end="407:39">*</operator> <name pos:start="407:41" pos:end="407:49">img_width</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <block pos:start="413:9" pos:end="441:9">{<block_content pos:start="415:13" pos:end="439:13">

            <decl_stmt pos:start="415:13" pos:end="415:73"><decl pos:start="415:13" pos:end="415:44"><type pos:start="415:13" pos:end="415:17"><name pos:start="415:13" pos:end="415:17">v8u16</name></type> <name pos:start="415:19" pos:end="415:44">negate_is_less_than_beta_r</name></decl>, <decl pos:start="415:47" pos:end="415:72"><type ref="prev" pos:start="415:13" pos:end="415:17"/><name pos:start="415:47" pos:end="415:72">negate_is_less_than_beta_l</name></decl>;</decl_stmt>



            <expr_stmt pos:start="419:13" pos:end="421:80"><expr pos:start="419:13" pos:end="421:79"><name pos:start="419:13" pos:end="419:38">negate_is_less_than_beta_r</name> <operator pos:start="419:40" pos:end="419:40">=</operator>

                <operator pos:start="421:17" pos:end="421:17">(</operator><name pos:start="421:18" pos:end="421:22">v8u16</name><operator pos:start="421:23" pos:end="421:23">)</operator> <call pos:start="421:25" pos:end="421:79"><name pos:start="421:25" pos:end="421:36">__msa_sldi_b</name><argument_list pos:start="421:37" pos:end="421:79">(<argument pos:start="421:38" pos:end="421:69"><expr pos:start="421:38" pos:end="421:69"><operator pos:start="421:38" pos:end="421:38">(</operator><name pos:start="421:39" pos:end="421:43">v16i8</name><operator pos:start="421:44" pos:end="421:44">)</operator> <name pos:start="421:46" pos:end="421:69">negate_is_less_than_beta</name></expr></argument>, <argument pos:start="421:72" pos:end="421:75"><expr pos:start="421:72" pos:end="421:75"><name pos:start="421:72" pos:end="421:75">zero</name></expr></argument>, <argument pos:start="421:78" pos:end="421:78"><expr pos:start="421:78" pos:end="421:78"><literal type="number" pos:start="421:78" pos:end="421:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="423:13" pos:end="427:13"><if pos:start="423:13" pos:end="427:13">if <condition pos:start="423:16" pos:end="423:69">(<expr pos:start="423:17" pos:end="423:68"><operator pos:start="423:17" pos:end="423:17">!</operator><call pos:start="423:18" pos:end="423:68"><name pos:start="423:18" pos:end="423:32">__msa_test_bz_v</name><argument_list pos:start="423:33" pos:end="423:68">(<argument pos:start="423:34" pos:end="423:67"><expr pos:start="423:34" pos:end="423:67"><operator pos:start="423:34" pos:end="423:34">(</operator><name pos:start="423:35" pos:end="423:39">v16u8</name><operator pos:start="423:40" pos:end="423:40">)</operator> <name pos:start="423:42" pos:end="423:67">negate_is_less_than_beta_r</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="423:71" pos:end="427:13">{<block_content pos:start="425:17" pos:end="425:77">

                <expr_stmt pos:start="425:17" pos:end="425:77"><expr pos:start="425:17" pos:end="425:76"><call pos:start="425:17" pos:end="425:76"><name pos:start="425:17" pos:end="425:40">AVC_LOOP_FILTER_P0_OR_Q0</name><argument_list pos:start="425:41" pos:end="425:76">(<argument pos:start="425:42" pos:end="425:49"><expr pos:start="425:42" pos:end="425:49"><name pos:start="425:42" pos:end="425:49">q0_org_r</name></expr></argument>, <argument pos:start="425:52" pos:end="425:59"><expr pos:start="425:52" pos:end="425:59"><name pos:start="425:52" pos:end="425:59">p1_org_r</name></expr></argument>, <argument pos:start="425:62" pos:end="425:69"><expr pos:start="425:62" pos:end="425:69"><name pos:start="425:62" pos:end="425:69">q1_org_r</name></expr></argument>, <argument pos:start="425:72" pos:end="425:75"><expr pos:start="425:72" pos:end="425:75"><name pos:start="425:72" pos:end="425:75">q0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <expr_stmt pos:start="431:13" pos:end="433:80"><expr pos:start="431:13" pos:end="433:79"><name pos:start="431:13" pos:end="431:38">negate_is_less_than_beta_l</name> <operator pos:start="431:40" pos:end="431:40">=</operator>

                <operator pos:start="433:17" pos:end="433:17">(</operator><name pos:start="433:18" pos:end="433:22">v8u16</name><operator pos:start="433:23" pos:end="433:23">)</operator> <call pos:start="433:25" pos:end="433:79"><name pos:start="433:25" pos:end="433:36">__msa_sldi_b</name><argument_list pos:start="433:37" pos:end="433:79">(<argument pos:start="433:38" pos:end="433:41"><expr pos:start="433:38" pos:end="433:41"><name pos:start="433:38" pos:end="433:41">zero</name></expr></argument>, <argument pos:start="433:44" pos:end="433:75"><expr pos:start="433:44" pos:end="433:75"><operator pos:start="433:44" pos:end="433:44">(</operator><name pos:start="433:45" pos:end="433:49">v16i8</name><operator pos:start="433:50" pos:end="433:50">)</operator> <name pos:start="433:52" pos:end="433:75">negate_is_less_than_beta</name></expr></argument>, <argument pos:start="433:78" pos:end="433:78"><expr pos:start="433:78" pos:end="433:78"><literal type="number" pos:start="433:78" pos:end="433:78">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="435:13" pos:end="439:13"><if pos:start="435:13" pos:end="439:13">if <condition pos:start="435:16" pos:end="435:69">(<expr pos:start="435:17" pos:end="435:68"><operator pos:start="435:17" pos:end="435:17">!</operator><call pos:start="435:18" pos:end="435:68"><name pos:start="435:18" pos:end="435:32">__msa_test_bz_v</name><argument_list pos:start="435:33" pos:end="435:68">(<argument pos:start="435:34" pos:end="435:67"><expr pos:start="435:34" pos:end="435:67"><operator pos:start="435:34" pos:end="435:34">(</operator><name pos:start="435:35" pos:end="435:39">v16u8</name><operator pos:start="435:40" pos:end="435:40">)</operator> <name pos:start="435:42" pos:end="435:67">negate_is_less_than_beta_l</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="435:71" pos:end="439:13">{<block_content pos:start="437:17" pos:end="437:77">

                <expr_stmt pos:start="437:17" pos:end="437:77"><expr pos:start="437:17" pos:end="437:76"><call pos:start="437:17" pos:end="437:76"><name pos:start="437:17" pos:end="437:40">AVC_LOOP_FILTER_P0_OR_Q0</name><argument_list pos:start="437:41" pos:end="437:76">(<argument pos:start="437:42" pos:end="437:49"><expr pos:start="437:42" pos:end="437:49"><name pos:start="437:42" pos:end="437:49">q0_org_l</name></expr></argument>, <argument pos:start="437:52" pos:end="437:59"><expr pos:start="437:52" pos:end="437:59"><name pos:start="437:52" pos:end="437:59">p1_org_l</name></expr></argument>, <argument pos:start="437:62" pos:end="437:69"><expr pos:start="437:62" pos:end="437:69"><name pos:start="437:62" pos:end="437:69">q1_org_l</name></expr></argument>, <argument pos:start="437:72" pos:end="437:75"><expr pos:start="437:72" pos:end="437:75"><name pos:start="437:72" pos:end="437:75">q0_l</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block>



        <comment type="block" pos:start="445:9" pos:end="445:21">/* combine */</comment>

        <if_stmt pos:start="447:9" pos:end="453:9"><if pos:start="447:9" pos:end="453:9">if <condition pos:start="447:12" pos:end="447:55">(<expr pos:start="447:13" pos:end="447:54"><operator pos:start="447:13" pos:end="447:13">!</operator><call pos:start="447:14" pos:end="447:54"><name pos:start="447:14" pos:end="447:28">__msa_test_bz_v</name><argument_list pos:start="447:29" pos:end="447:54">(<argument pos:start="447:30" pos:end="447:53"><expr pos:start="447:30" pos:end="447:53"><name pos:start="447:30" pos:end="447:53">negate_is_less_than_beta</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="447:57" pos:end="453:9">{<block_content pos:start="449:13" pos:end="451:72">

            <expr_stmt pos:start="449:13" pos:end="449:67"><expr pos:start="449:13" pos:end="449:66"><name pos:start="449:13" pos:end="449:14">q0</name> <operator pos:start="449:16" pos:end="449:16">=</operator> <operator pos:start="449:18" pos:end="449:18">(</operator><name pos:start="449:19" pos:end="449:23">v16u8</name><operator pos:start="449:24" pos:end="449:24">)</operator> <call pos:start="449:26" pos:end="449:66"><name pos:start="449:26" pos:end="449:38">__msa_pckev_b</name><argument_list pos:start="449:39" pos:end="449:66">(<argument pos:start="449:40" pos:end="449:51"><expr pos:start="449:40" pos:end="449:51"><operator pos:start="449:40" pos:end="449:40">(</operator><name pos:start="449:41" pos:end="449:45">v16i8</name><operator pos:start="449:46" pos:end="449:46">)</operator> <name pos:start="449:48" pos:end="449:51">q0_l</name></expr></argument>, <argument pos:start="449:54" pos:end="449:65"><expr pos:start="449:54" pos:end="449:65"><operator pos:start="449:54" pos:end="449:54">(</operator><name pos:start="449:55" pos:end="449:59">v16i8</name><operator pos:start="449:60" pos:end="449:60">)</operator> <name pos:start="449:62" pos:end="449:65">q0_r</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="451:13" pos:end="451:72"><expr pos:start="451:13" pos:end="451:71"><name pos:start="451:13" pos:end="451:18">q0_org</name> <operator pos:start="451:20" pos:end="451:20">=</operator> <call pos:start="451:22" pos:end="451:71"><name pos:start="451:22" pos:end="451:33">__msa_bmnz_v</name><argument_list pos:start="451:34" pos:end="451:71">(<argument pos:start="451:35" pos:end="451:40"><expr pos:start="451:35" pos:end="451:40"><name pos:start="451:35" pos:end="451:40">q0_org</name></expr></argument>, <argument pos:start="451:43" pos:end="451:44"><expr pos:start="451:43" pos:end="451:44"><name pos:start="451:43" pos:end="451:44">q0</name></expr></argument>, <argument pos:start="451:47" pos:end="451:70"><expr pos:start="451:47" pos:end="451:70"><name pos:start="451:47" pos:end="451:70">negate_is_less_than_beta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="457:9" pos:end="457:31"><expr pos:start="457:9" pos:end="457:30"><call pos:start="457:9" pos:end="457:30"><name pos:start="457:9" pos:end="457:16">STORE_UB</name><argument_list pos:start="457:17" pos:end="457:30">(<argument pos:start="457:18" pos:end="457:23"><expr pos:start="457:18" pos:end="457:23"><name pos:start="457:18" pos:end="457:23">q0_org</name></expr></argument>, <argument pos:start="457:26" pos:end="457:29"><expr pos:start="457:26" pos:end="457:29"><name pos:start="457:26" pos:end="457:29">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
