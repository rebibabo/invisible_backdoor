<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16601.c" pos:tabs="8"><function pos:start="1:1" pos:end="101:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">piix4_pm_realize</name><parameter_list pos:start="1:29" pos:end="1:58">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:38">PCIDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:57"><decl pos:start="1:46" pos:end="1:57"><type pos:start="1:46" pos:end="1:57"><name pos:start="1:46" pos:end="1:50">Error</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier><modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:57">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="101:1">{<block_content pos:start="5:5" pos:end="99:30">

    <decl_stmt pos:start="5:5" pos:end="5:36"><decl pos:start="5:5" pos:end="5:35"><type pos:start="5:5" pos:end="5:18"><name pos:start="5:5" pos:end="5:16">PIIX4PMState</name> <modifier pos:start="5:18" pos:end="5:18">*</modifier></type><name pos:start="5:19" pos:end="5:19">s</name> <init pos:start="5:21" pos:end="5:35">= <expr pos:start="5:23" pos:end="5:35"><call pos:start="5:23" pos:end="5:35"><name pos:start="5:23" pos:end="5:30">PIIX4_PM</name><argument_list pos:start="5:31" pos:end="5:35">(<argument pos:start="5:32" pos:end="5:34"><expr pos:start="5:32" pos:end="5:34"><name pos:start="5:32" pos:end="5:34">dev</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:21">pci_conf</name></decl>;</decl_stmt>



    <expr_stmt pos:start="11:5" pos:end="11:27"><expr pos:start="11:5" pos:end="11:26"><name pos:start="11:5" pos:end="11:12">pci_conf</name> <operator pos:start="11:14" pos:end="11:14">=</operator> <name pos:start="11:16" pos:end="11:26"><name pos:start="11:16" pos:end="11:18">dev</name><operator pos:start="11:19" pos:end="11:20">-&gt;</operator><name pos:start="11:21" pos:end="11:26">config</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="13:5" pos:end="13:26"><expr pos:start="13:5" pos:end="13:25"><name pos:start="13:5" pos:end="13:18"><name pos:start="13:5" pos:end="13:12">pci_conf</name><index pos:start="13:13" pos:end="13:18">[<expr pos:start="13:14" pos:end="13:17"><literal type="number" pos:start="13:14" pos:end="13:17">0x06</literal></expr>]</index></name> <operator pos:start="13:20" pos:end="13:20">=</operator> <literal type="number" pos:start="13:22" pos:end="13:25">0x80</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="15:5" pos:end="15:26"><expr pos:start="15:5" pos:end="15:25"><name pos:start="15:5" pos:end="15:18"><name pos:start="15:5" pos:end="15:12">pci_conf</name><index pos:start="15:13" pos:end="15:18">[<expr pos:start="15:14" pos:end="15:17"><literal type="number" pos:start="15:14" pos:end="15:17">0x07</literal></expr>]</index></name> <operator pos:start="15:20" pos:end="15:20">=</operator> <literal type="number" pos:start="15:22" pos:end="15:25">0x02</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:26"><expr pos:start="17:5" pos:end="17:25"><name pos:start="17:5" pos:end="17:18"><name pos:start="17:5" pos:end="17:12">pci_conf</name><index pos:start="17:13" pos:end="17:18">[<expr pos:start="17:14" pos:end="17:17"><literal type="number" pos:start="17:14" pos:end="17:17">0x09</literal></expr>]</index></name> <operator pos:start="17:20" pos:end="17:20">=</operator> <literal type="number" pos:start="17:22" pos:end="17:25">0x00</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:26"><expr pos:start="19:5" pos:end="19:25"><name pos:start="19:5" pos:end="19:18"><name pos:start="19:5" pos:end="19:12">pci_conf</name><index pos:start="19:13" pos:end="19:18">[<expr pos:start="19:14" pos:end="19:17"><literal type="number" pos:start="19:14" pos:end="19:17">0x3d</literal></expr>]</index></name> <operator pos:start="19:20" pos:end="19:20">=</operator> <literal type="number" pos:start="19:22" pos:end="19:25">0x01</literal></expr>;</expr_stmt> <comment type="line" pos:start="19:28" pos:end="19:45">// interrupt pin 1</comment>



    <comment type="block" pos:start="23:5" pos:end="23:13">/* APM */</comment>

    <expr_stmt pos:start="25:5" pos:end="25:48"><expr pos:start="25:5" pos:end="25:47"><call pos:start="25:5" pos:end="25:47"><name pos:start="25:5" pos:end="25:12">apm_init</name><argument_list pos:start="25:13" pos:end="25:47">(<argument pos:start="25:14" pos:end="25:16"><expr pos:start="25:14" pos:end="25:16"><name pos:start="25:14" pos:end="25:16">dev</name></expr></argument>, <argument pos:start="25:19" pos:end="25:25"><expr pos:start="25:19" pos:end="25:25"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:25"><name pos:start="25:20" pos:end="25:20">s</name><operator pos:start="25:21" pos:end="25:22">-&gt;</operator><name pos:start="25:23" pos:end="25:25">apm</name></name></expr></argument>, <argument pos:start="25:28" pos:end="25:43"><expr pos:start="25:28" pos:end="25:43"><name pos:start="25:28" pos:end="25:43">apm_ctrl_changed</name></expr></argument>, <argument pos:start="25:46" pos:end="25:46"><expr pos:start="25:46" pos:end="25:46"><name pos:start="25:46" pos:end="25:46">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="37:5">if <condition pos:start="29:8" pos:end="29:24">(<expr pos:start="29:9" pos:end="29:23"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:23"><name pos:start="29:10" pos:end="29:10">s</name><operator pos:start="29:11" pos:end="29:12">-&gt;</operator><name pos:start="29:13" pos:end="29:23">smm_enabled</name></name></expr>)</condition> <block pos:start="29:26" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:30">

        <comment type="block" pos:start="31:9" pos:end="33:31">/* Mark SMM as already inited to prevent SMM from running.  KVM does not

         * support SMM mode. */</comment>

        <expr_stmt pos:start="35:9" pos:end="35:30"><expr pos:start="35:9" pos:end="35:29"><name pos:start="35:9" pos:end="35:22"><name pos:start="35:9" pos:end="35:16">pci_conf</name><index pos:start="35:17" pos:end="35:22">[<expr pos:start="35:18" pos:end="35:21"><literal type="number" pos:start="35:18" pos:end="35:21">0x5B</literal></expr>]</index></name> <operator pos:start="35:24" pos:end="35:24">=</operator> <literal type="number" pos:start="35:26" pos:end="35:29">0x02</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="41:5" pos:end="43:18">/* XXX: which specification is used ? The i82731AB has different

       mappings */</comment>

    <expr_stmt pos:start="45:5" pos:end="45:40"><expr pos:start="45:5" pos:end="45:39"><name pos:start="45:5" pos:end="45:18"><name pos:start="45:5" pos:end="45:12">pci_conf</name><index pos:start="45:13" pos:end="45:18">[<expr pos:start="45:14" pos:end="45:17"><literal type="number" pos:start="45:14" pos:end="45:17">0x90</literal></expr>]</index></name> <operator pos:start="45:20" pos:end="45:20">=</operator> <name pos:start="45:22" pos:end="45:35"><name pos:start="45:22" pos:end="45:22">s</name><operator pos:start="45:23" pos:end="45:24">-&gt;</operator><name pos:start="45:25" pos:end="45:35">smb_io_base</name></name> <operator pos:start="45:37" pos:end="45:37">|</operator> <literal type="number" pos:start="45:39" pos:end="45:39">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:41"><expr pos:start="47:5" pos:end="47:40"><name pos:start="47:5" pos:end="47:18"><name pos:start="47:5" pos:end="47:12">pci_conf</name><index pos:start="47:13" pos:end="47:18">[<expr pos:start="47:14" pos:end="47:17"><literal type="number" pos:start="47:14" pos:end="47:17">0x91</literal></expr>]</index></name> <operator pos:start="47:20" pos:end="47:20">=</operator> <name pos:start="47:22" pos:end="47:35"><name pos:start="47:22" pos:end="47:22">s</name><operator pos:start="47:23" pos:end="47:24">-&gt;</operator><name pos:start="47:25" pos:end="47:35">smb_io_base</name></name> <operator pos:start="47:37" pos:end="47:38">&gt;&gt;</operator> <literal type="number" pos:start="47:40" pos:end="47:40">8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:26"><expr pos:start="49:5" pos:end="49:25"><name pos:start="49:5" pos:end="49:18"><name pos:start="49:5" pos:end="49:12">pci_conf</name><index pos:start="49:13" pos:end="49:18">[<expr pos:start="49:14" pos:end="49:17"><literal type="number" pos:start="49:14" pos:end="49:17">0xd2</literal></expr>]</index></name> <operator pos:start="49:20" pos:end="49:20">=</operator> <literal type="number" pos:start="49:22" pos:end="49:25">0x09</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:40"><expr pos:start="51:5" pos:end="51:39"><call pos:start="51:5" pos:end="51:39"><name pos:start="51:5" pos:end="51:17">pm_smbus_init</name><argument_list pos:start="51:18" pos:end="51:39">(<argument pos:start="51:19" pos:end="51:29"><expr pos:start="51:19" pos:end="51:29"><call pos:start="51:19" pos:end="51:29"><name pos:start="51:19" pos:end="51:24">DEVICE</name><argument_list pos:start="51:25" pos:end="51:29">(<argument pos:start="51:26" pos:end="51:28"><expr pos:start="51:26" pos:end="51:28"><name pos:start="51:26" pos:end="51:28">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:32" pos:end="51:38"><expr pos:start="51:32" pos:end="51:38"><operator pos:start="51:32" pos:end="51:32">&amp;</operator><name pos:start="51:33" pos:end="51:38"><name pos:start="51:33" pos:end="51:33">s</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:38">smb</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:62"><expr pos:start="53:5" pos:end="53:61"><call pos:start="53:5" pos:end="53:61"><name pos:start="53:5" pos:end="53:29">memory_region_set_enabled</name><argument_list pos:start="53:30" pos:end="53:61">(<argument pos:start="53:31" pos:end="53:40"><expr pos:start="53:31" pos:end="53:40"><operator pos:start="53:31" pos:end="53:31">&amp;</operator><name pos:start="53:32" pos:end="53:40"><name pos:start="53:32" pos:end="53:32">s</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:37">smb</name><operator pos:start="53:38" pos:end="53:38">.</operator><name pos:start="53:39" pos:end="53:40">io</name></name></expr></argument>, <argument pos:start="53:43" pos:end="53:60"><expr pos:start="53:43" pos:end="53:60"><name pos:start="53:43" pos:end="53:56"><name pos:start="53:43" pos:end="53:50">pci_conf</name><index pos:start="53:51" pos:end="53:56">[<expr pos:start="53:52" pos:end="53:55"><literal type="number" pos:start="53:52" pos:end="53:55">0xd2</literal></expr>]</index></name> <operator pos:start="53:58" pos:end="53:58">&amp;</operator> <literal type="number" pos:start="53:60" pos:end="53:60">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="57:60"><expr pos:start="55:5" pos:end="57:59"><call pos:start="55:5" pos:end="57:59"><name pos:start="55:5" pos:end="55:31">memory_region_add_subregion</name><argument_list pos:start="55:32" pos:end="57:59">(<argument pos:start="55:33" pos:end="55:57"><expr pos:start="55:33" pos:end="55:57"><call pos:start="55:33" pos:end="55:57"><name pos:start="55:33" pos:end="55:52">pci_address_space_io</name><argument_list pos:start="55:53" pos:end="55:57">(<argument pos:start="55:54" pos:end="55:56"><expr pos:start="55:54" pos:end="55:56"><name pos:start="55:54" pos:end="55:56">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="57:33" pos:end="57:46"><expr pos:start="57:33" pos:end="57:46"><name pos:start="57:33" pos:end="57:46"><name pos:start="57:33" pos:end="57:33">s</name><operator pos:start="57:34" pos:end="57:35">-&gt;</operator><name pos:start="57:36" pos:end="57:46">smb_io_base</name></name></expr></argument>, <argument pos:start="57:49" pos:end="57:58"><expr pos:start="57:49" pos:end="57:58"><operator pos:start="57:49" pos:end="57:49">&amp;</operator><name pos:start="57:50" pos:end="57:58"><name pos:start="57:50" pos:end="57:50">s</name><operator pos:start="57:51" pos:end="57:52">-&gt;</operator><name pos:start="57:53" pos:end="57:55">smb</name><operator pos:start="57:56" pos:end="57:56">.</operator><name pos:start="57:57" pos:end="57:58">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="61:5" pos:end="61:58"><expr pos:start="61:5" pos:end="61:57"><call pos:start="61:5" pos:end="61:57"><name pos:start="61:5" pos:end="61:22">memory_region_init</name><argument_list pos:start="61:23" pos:end="61:57">(<argument pos:start="61:24" pos:end="61:29"><expr pos:start="61:24" pos:end="61:29"><operator pos:start="61:24" pos:end="61:24">&amp;</operator><name pos:start="61:25" pos:end="61:29"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:29">io</name></name></expr></argument>, <argument pos:start="61:32" pos:end="61:40"><expr pos:start="61:32" pos:end="61:40"><call pos:start="61:32" pos:end="61:40"><name pos:start="61:32" pos:end="61:37">OBJECT</name><argument_list pos:start="61:38" pos:end="61:40">(<argument pos:start="61:39" pos:end="61:39"><expr pos:start="61:39" pos:end="61:39"><name pos:start="61:39" pos:end="61:39">s</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="61:43" pos:end="61:52"><expr pos:start="61:43" pos:end="61:52"><literal type="string" pos:start="61:43" pos:end="61:52">"piix4-pm"</literal></expr></argument>, <argument pos:start="61:55" pos:end="61:56"><expr pos:start="61:55" pos:end="61:56"><literal type="number" pos:start="61:55" pos:end="61:56">64</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:45"><expr pos:start="63:5" pos:end="63:44"><call pos:start="63:5" pos:end="63:44"><name pos:start="63:5" pos:end="63:29">memory_region_set_enabled</name><argument_list pos:start="63:30" pos:end="63:44">(<argument pos:start="63:31" pos:end="63:36"><expr pos:start="63:31" pos:end="63:36"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:36"><name pos:start="63:32" pos:end="63:32">s</name><operator pos:start="63:33" pos:end="63:34">-&gt;</operator><name pos:start="63:35" pos:end="63:36">io</name></name></expr></argument>, <argument pos:start="63:39" pos:end="63:43"><expr pos:start="63:39" pos:end="63:43"><name pos:start="63:39" pos:end="63:43">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="67:43"><expr pos:start="65:5" pos:end="67:42"><call pos:start="65:5" pos:end="67:42"><name pos:start="65:5" pos:end="65:31">memory_region_add_subregion</name><argument_list pos:start="65:32" pos:end="67:42">(<argument pos:start="65:33" pos:end="65:57"><expr pos:start="65:33" pos:end="65:57"><call pos:start="65:33" pos:end="65:57"><name pos:start="65:33" pos:end="65:52">pci_address_space_io</name><argument_list pos:start="65:53" pos:end="65:57">(<argument pos:start="65:54" pos:end="65:56"><expr pos:start="65:54" pos:end="65:56"><name pos:start="65:54" pos:end="65:56">dev</name></expr></argument>)</argument_list></call></expr></argument>,

                                <argument pos:start="67:33" pos:end="67:33"><expr pos:start="67:33" pos:end="67:33"><literal type="number" pos:start="67:33" pos:end="67:33">0</literal></expr></argument>, <argument pos:start="67:36" pos:end="67:41"><expr pos:start="67:36" pos:end="67:41"><operator pos:start="67:36" pos:end="67:36">&amp;</operator><name pos:start="67:37" pos:end="67:41"><name pos:start="67:37" pos:end="67:37">s</name><operator pos:start="67:38" pos:end="67:39">-&gt;</operator><name pos:start="67:40" pos:end="67:41">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="71:5" pos:end="71:51"><expr pos:start="71:5" pos:end="71:50"><call pos:start="71:5" pos:end="71:50"><name pos:start="71:5" pos:end="71:20">acpi_pm_tmr_init</name><argument_list pos:start="71:21" pos:end="71:50">(<argument pos:start="71:22" pos:end="71:27"><expr pos:start="71:22" pos:end="71:27"><operator pos:start="71:22" pos:end="71:22">&amp;</operator><name pos:start="71:23" pos:end="71:27"><name pos:start="71:23" pos:end="71:23">s</name><operator pos:start="71:24" pos:end="71:25">-&gt;</operator><name pos:start="71:26" pos:end="71:27">ar</name></name></expr></argument>, <argument pos:start="71:30" pos:end="71:41"><expr pos:start="71:30" pos:end="71:41"><name pos:start="71:30" pos:end="71:41">pm_tmr_timer</name></expr></argument>, <argument pos:start="71:44" pos:end="71:49"><expr pos:start="71:44" pos:end="71:49"><operator pos:start="71:44" pos:end="71:44">&amp;</operator><name pos:start="71:45" pos:end="71:49"><name pos:start="71:45" pos:end="71:45">s</name><operator pos:start="71:46" pos:end="71:47">-&gt;</operator><name pos:start="71:48" pos:end="71:49">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:52"><expr pos:start="73:5" pos:end="73:51"><call pos:start="73:5" pos:end="73:51"><name pos:start="73:5" pos:end="73:21">acpi_pm1_evt_init</name><argument_list pos:start="73:22" pos:end="73:51">(<argument pos:start="73:23" pos:end="73:28"><expr pos:start="73:23" pos:end="73:28"><operator pos:start="73:23" pos:end="73:23">&amp;</operator><name pos:start="73:24" pos:end="73:28"><name pos:start="73:24" pos:end="73:24">s</name><operator pos:start="73:25" pos:end="73:26">-&gt;</operator><name pos:start="73:27" pos:end="73:28">ar</name></name></expr></argument>, <argument pos:start="73:31" pos:end="73:42"><expr pos:start="73:31" pos:end="73:42"><name pos:start="73:31" pos:end="73:42">pm_tmr_timer</name></expr></argument>, <argument pos:start="73:45" pos:end="73:50"><expr pos:start="73:45" pos:end="73:50"><operator pos:start="73:45" pos:end="73:45">&amp;</operator><name pos:start="73:46" pos:end="73:50"><name pos:start="73:46" pos:end="73:46">s</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:50">io</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:79"><expr pos:start="75:5" pos:end="75:78"><call pos:start="75:5" pos:end="75:78"><name pos:start="75:5" pos:end="75:21">acpi_pm1_cnt_init</name><argument_list pos:start="75:22" pos:end="75:78">(<argument pos:start="75:23" pos:end="75:28"><expr pos:start="75:23" pos:end="75:28"><operator pos:start="75:23" pos:end="75:23">&amp;</operator><name pos:start="75:24" pos:end="75:28"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:28">ar</name></name></expr></argument>, <argument pos:start="75:31" pos:end="75:36"><expr pos:start="75:31" pos:end="75:36"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:32">s</name><operator pos:start="75:33" pos:end="75:34">-&gt;</operator><name pos:start="75:35" pos:end="75:36">io</name></name></expr></argument>, <argument pos:start="75:39" pos:end="75:51"><expr pos:start="75:39" pos:end="75:51"><name pos:start="75:39" pos:end="75:51"><name pos:start="75:39" pos:end="75:39">s</name><operator pos:start="75:40" pos:end="75:41">-&gt;</operator><name pos:start="75:42" pos:end="75:51">disable_s3</name></name></expr></argument>, <argument pos:start="75:54" pos:end="75:66"><expr pos:start="75:54" pos:end="75:66"><name pos:start="75:54" pos:end="75:66"><name pos:start="75:54" pos:end="75:54">s</name><operator pos:start="75:55" pos:end="75:56">-&gt;</operator><name pos:start="75:57" pos:end="75:66">disable_s4</name></name></expr></argument>, <argument pos:start="75:69" pos:end="75:77"><expr pos:start="75:69" pos:end="75:77"><name pos:start="75:69" pos:end="75:77"><name pos:start="75:69" pos:end="75:69">s</name><operator pos:start="75:70" pos:end="75:71">-&gt;</operator><name pos:start="75:72" pos:end="75:77">s4_val</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="77:35"><expr pos:start="77:5" pos:end="77:34"><call pos:start="77:5" pos:end="77:34"><name pos:start="77:5" pos:end="77:17">acpi_gpe_init</name><argument_list pos:start="77:18" pos:end="77:34">(<argument pos:start="77:19" pos:end="77:24"><expr pos:start="77:19" pos:end="77:24"><operator pos:start="77:19" pos:end="77:19">&amp;</operator><name pos:start="77:20" pos:end="77:24"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:24">ar</name></name></expr></argument>, <argument pos:start="77:27" pos:end="77:33"><expr pos:start="77:27" pos:end="77:33"><name pos:start="77:27" pos:end="77:33">GPE_LEN</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="81:5" pos:end="81:58"><expr pos:start="81:5" pos:end="81:57"><name pos:start="81:5" pos:end="81:32"><name pos:start="81:5" pos:end="81:5">s</name><operator pos:start="81:6" pos:end="81:7">-&gt;</operator><name pos:start="81:8" pos:end="81:25">powerdown_notifier</name><operator pos:start="81:26" pos:end="81:26">.</operator><name pos:start="81:27" pos:end="81:32">notify</name></name> <operator pos:start="81:34" pos:end="81:34">=</operator> <name pos:start="81:36" pos:end="81:57">piix4_pm_powerdown_req</name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:61"><expr pos:start="83:5" pos:end="83:60"><call pos:start="83:5" pos:end="83:60"><name pos:start="83:5" pos:end="83:36">qemu_register_powerdown_notifier</name><argument_list pos:start="83:37" pos:end="83:60">(<argument pos:start="83:38" pos:end="83:59"><expr pos:start="83:38" pos:end="83:59"><operator pos:start="83:38" pos:end="83:38">&amp;</operator><name pos:start="83:39" pos:end="83:59"><name pos:start="83:39" pos:end="83:39">s</name><operator pos:start="83:40" pos:end="83:41">-&gt;</operator><name pos:start="83:42" pos:end="83:59">powerdown_notifier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:53"><expr pos:start="87:5" pos:end="87:52"><name pos:start="87:5" pos:end="87:27"><name pos:start="87:5" pos:end="87:5">s</name><operator pos:start="87:6" pos:end="87:7">-&gt;</operator><name pos:start="87:8" pos:end="87:20">machine_ready</name><operator pos:start="87:21" pos:end="87:21">.</operator><name pos:start="87:22" pos:end="87:27">notify</name></name> <operator pos:start="87:29" pos:end="87:29">=</operator> <name pos:start="87:31" pos:end="87:52">piix4_pm_machine_ready</name></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:59"><expr pos:start="89:5" pos:end="89:58"><call pos:start="89:5" pos:end="89:58"><name pos:start="89:5" pos:end="89:39">qemu_add_machine_init_done_notifier</name><argument_list pos:start="89:40" pos:end="89:58">(<argument pos:start="89:41" pos:end="89:57"><expr pos:start="89:41" pos:end="89:57"><operator pos:start="89:41" pos:end="89:41">&amp;</operator><name pos:start="89:42" pos:end="89:57"><name pos:start="89:42" pos:end="89:42">s</name><operator pos:start="89:43" pos:end="89:44">-&gt;</operator><name pos:start="89:45" pos:end="89:57">machine_ready</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="91:40"><expr pos:start="91:5" pos:end="91:39"><call pos:start="91:5" pos:end="91:39"><name pos:start="91:5" pos:end="91:23">qemu_register_reset</name><argument_list pos:start="91:24" pos:end="91:39">(<argument pos:start="91:25" pos:end="91:35"><expr pos:start="91:25" pos:end="91:35"><name pos:start="91:25" pos:end="91:35">piix4_reset</name></expr></argument>, <argument pos:start="91:38" pos:end="91:38"><expr pos:start="91:38" pos:end="91:38"><name pos:start="91:38" pos:end="91:38">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="95:5" pos:end="95:75"><expr pos:start="95:5" pos:end="95:74"><call pos:start="95:5" pos:end="95:74"><name pos:start="95:5" pos:end="95:34">piix4_acpi_system_hot_add_init</name><argument_list pos:start="95:35" pos:end="95:74">(<argument pos:start="95:36" pos:end="95:60"><expr pos:start="95:36" pos:end="95:60"><call pos:start="95:36" pos:end="95:60"><name pos:start="95:36" pos:end="95:55">pci_address_space_io</name><argument_list pos:start="95:56" pos:end="95:60">(<argument pos:start="95:57" pos:end="95:59"><expr pos:start="95:57" pos:end="95:59"><name pos:start="95:57" pos:end="95:59">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="95:63" pos:end="95:70"><expr pos:start="95:63" pos:end="95:70"><name pos:start="95:63" pos:end="95:70"><name pos:start="95:63" pos:end="95:65">dev</name><operator pos:start="95:66" pos:end="95:67">-&gt;</operator><name pos:start="95:68" pos:end="95:70">bus</name></name></expr></argument>, <argument pos:start="95:73" pos:end="95:73"><expr pos:start="95:73" pos:end="95:73"><name pos:start="95:73" pos:end="95:73">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:30"><expr pos:start="99:5" pos:end="99:29"><call pos:start="99:5" pos:end="99:29"><name pos:start="99:5" pos:end="99:26">piix4_pm_add_propeties</name><argument_list pos:start="99:27" pos:end="99:29">(<argument pos:start="99:28" pos:end="99:28"><expr pos:start="99:28" pos:end="99:28"><name pos:start="99:28" pos:end="99:28">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
