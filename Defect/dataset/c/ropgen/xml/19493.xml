<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19493.c" pos:tabs="8"><function pos:start="1:1" pos:end="49:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_packet</name><parameter_list pos:start="1:23" pos:end="1:76">(<parameter pos:start="1:24" pos:end="1:40"><decl pos:start="1:24" pos:end="1:40"><type pos:start="1:24" pos:end="1:40"><name pos:start="1:24" pos:end="1:36">ByteIOContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:40">pb</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:54"><decl pos:start="1:43" pos:end="1:54"><type pos:start="1:43" pos:end="1:54"><name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">buf</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:75"><decl pos:start="1:57" pos:end="1:75"><type pos:start="1:57" pos:end="1:75"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:75">raw_packet_size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="49:1">{<block_content pos:start="5:5" pos:end="47:13">

    <decl_stmt pos:start="5:5" pos:end="5:18"><decl pos:start="5:5" pos:end="5:12"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">skip</name></decl>, <decl pos:start="5:15" pos:end="5:17"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:17">len</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="45:5">for<control pos:start="9:8" pos:end="9:11">(<init pos:start="9:9" pos:end="9:9">;</init><condition pos:start="9:10" pos:end="9:10">;</condition><incr/>)</control> <block pos:start="9:13" pos:end="45:5">{<block_content pos:start="11:9" pos:end="43:9">

        <expr_stmt pos:start="11:9" pos:end="11:50"><expr pos:start="11:9" pos:end="11:49"><name pos:start="11:9" pos:end="11:11">len</name> <operator pos:start="11:13" pos:end="11:13">=</operator> <call pos:start="11:15" pos:end="11:49"><name pos:start="11:15" pos:end="11:24">get_buffer</name><argument_list pos:start="11:25" pos:end="11:49">(<argument pos:start="11:26" pos:end="11:27"><expr pos:start="11:26" pos:end="11:27"><name pos:start="11:26" pos:end="11:27">pb</name></expr></argument>, <argument pos:start="11:30" pos:end="11:32"><expr pos:start="11:30" pos:end="11:32"><name pos:start="11:30" pos:end="11:32">buf</name></expr></argument>, <argument pos:start="11:35" pos:end="11:48"><expr pos:start="11:35" pos:end="11:48"><name pos:start="11:35" pos:end="11:48">TS_PACKET_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="13:9" pos:end="15:32"><if pos:start="13:9" pos:end="15:32">if <condition pos:start="13:12" pos:end="13:34">(<expr pos:start="13:13" pos:end="13:33"><name pos:start="13:13" pos:end="13:15">len</name> <operator pos:start="13:17" pos:end="13:18">!=</operator> <name pos:start="13:20" pos:end="13:33">TS_PACKET_SIZE</name></expr>)</condition><block type="pseudo" pos:start="15:13" pos:end="15:32"><block_content pos:start="15:13" pos:end="15:32">

            <return pos:start="15:13" pos:end="15:32">return <expr pos:start="15:20" pos:end="15:31"><call pos:start="15:20" pos:end="15:31"><name pos:start="15:20" pos:end="15:26">AVERROR</name><argument_list pos:start="15:27" pos:end="15:31">(<argument pos:start="15:28" pos:end="15:30"><expr pos:start="15:28" pos:end="15:30"><name pos:start="15:28" pos:end="15:30">EIO</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <comment type="block" pos:start="17:9" pos:end="17:36">/* check paquet sync byte */</comment>

        <if_stmt pos:start="19:9" pos:end="43:9"><if pos:start="19:9" pos:end="33:9">if <condition pos:start="19:12" pos:end="19:27">(<expr pos:start="19:13" pos:end="19:26"><name pos:start="19:13" pos:end="19:18"><name pos:start="19:13" pos:end="19:15">buf</name><index pos:start="19:16" pos:end="19:18">[<expr pos:start="19:17" pos:end="19:17"><literal type="number" pos:start="19:17" pos:end="19:17">0</literal></expr>]</index></name> <operator pos:start="19:20" pos:end="19:21">!=</operator> <literal type="number" pos:start="19:23" pos:end="19:26">0x47</literal></expr>)</condition> <block pos:start="19:29" pos:end="33:9">{<block_content pos:start="23:13" pos:end="31:25">

            <comment type="block" pos:start="21:13" pos:end="21:41">/* find a new packet start */</comment>

            <expr_stmt pos:start="23:13" pos:end="23:53"><expr pos:start="23:13" pos:end="23:52"><call pos:start="23:13" pos:end="23:52"><name pos:start="23:13" pos:end="23:21">url_fseek</name><argument_list pos:start="23:22" pos:end="23:52">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">pb</name></expr></argument>, <argument pos:start="23:27" pos:end="23:41"><expr pos:start="23:27" pos:end="23:41"><operator pos:start="23:27" pos:end="23:27">-</operator><name pos:start="23:28" pos:end="23:41">TS_PACKET_SIZE</name></expr></argument>, <argument pos:start="23:44" pos:end="23:51"><expr pos:start="23:44" pos:end="23:51"><name pos:start="23:44" pos:end="23:51">SEEK_CUR</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="25:13" pos:end="31:25"><if pos:start="25:13" pos:end="27:43">if <condition pos:start="25:16" pos:end="25:38">(<expr pos:start="25:17" pos:end="25:37"><call pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:29">mpegts_resync</name><argument_list pos:start="25:30" pos:end="25:33">(<argument pos:start="25:31" pos:end="25:32"><expr pos:start="25:31" pos:end="25:32"><name pos:start="25:31" pos:end="25:32">pb</name></expr></argument>)</argument_list></call> <operator pos:start="25:35" pos:end="25:35">&lt;</operator> <literal type="number" pos:start="25:37" pos:end="25:37">0</literal></expr>)</condition><block type="pseudo" pos:start="27:17" pos:end="27:43"><block_content pos:start="27:17" pos:end="27:43">

                <return pos:start="27:17" pos:end="27:43">return <expr pos:start="27:24" pos:end="27:42"><name pos:start="27:24" pos:end="27:42">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if>

            <else pos:start="29:13" pos:end="31:25">else<block type="pseudo" pos:start="31:17" pos:end="31:25"><block_content pos:start="31:17" pos:end="31:25">

                <continue pos:start="31:17" pos:end="31:25">continue;</continue></block_content></block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="33:11" pos:end="43:9">else <block pos:start="33:16" pos:end="43:9">{<block_content pos:start="35:13" pos:end="41:18">

            <expr_stmt pos:start="35:13" pos:end="35:52"><expr pos:start="35:13" pos:end="35:51"><name pos:start="35:13" pos:end="35:16">skip</name> <operator pos:start="35:18" pos:end="35:18">=</operator> <name pos:start="35:20" pos:end="35:34">raw_packet_size</name> <operator pos:start="35:36" pos:end="35:36">-</operator> <name pos:start="35:38" pos:end="35:51">TS_PACKET_SIZE</name></expr>;</expr_stmt>

            <if_stmt pos:start="37:13" pos:end="39:36"><if pos:start="37:13" pos:end="39:36">if <condition pos:start="37:16" pos:end="37:25">(<expr pos:start="37:17" pos:end="37:24"><name pos:start="37:17" pos:end="37:20">skip</name> <operator pos:start="37:22" pos:end="37:22">&gt;</operator> <literal type="number" pos:start="37:24" pos:end="37:24">0</literal></expr>)</condition><block type="pseudo" pos:start="39:17" pos:end="39:36"><block_content pos:start="39:17" pos:end="39:36">

                <expr_stmt pos:start="39:17" pos:end="39:36"><expr pos:start="39:17" pos:end="39:35"><call pos:start="39:17" pos:end="39:35"><name pos:start="39:17" pos:end="39:25">url_fskip</name><argument_list pos:start="39:26" pos:end="39:35">(<argument pos:start="39:27" pos:end="39:28"><expr pos:start="39:27" pos:end="39:28"><name pos:start="39:27" pos:end="39:28">pb</name></expr></argument>, <argument pos:start="39:31" pos:end="39:34"><expr pos:start="39:31" pos:end="39:34"><name pos:start="39:31" pos:end="39:34">skip</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

            <break pos:start="41:13" pos:end="41:18">break;</break>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <return pos:start="47:5" pos:end="47:13">return <expr pos:start="47:12" pos:end="47:12"><literal type="number" pos:start="47:12" pos:end="47:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
