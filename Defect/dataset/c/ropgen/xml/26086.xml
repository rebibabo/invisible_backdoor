<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26086.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:19">get_riff</name><parameter_list pos:start="1:20" pos:end="1:56">(<parameter pos:start="1:21" pos:end="1:38"><decl pos:start="1:21" pos:end="1:38"><type pos:start="1:21" pos:end="1:38"><name pos:start="1:21" pos:end="1:35">AVFormatContext</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:38">s</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:55"><decl pos:start="1:41" pos:end="1:55"><type pos:start="1:41" pos:end="1:55"><name pos:start="1:41" pos:end="1:51">AVIOContext</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:55">pb</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="47:1">{<block_content pos:start="5:5" pos:end="45:13">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">AVIContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:19">avi</name> <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:8"><name pos:start="7:5" pos:end="7:8">char</name></type> <name pos:start="7:10" pos:end="7:18"><name pos:start="7:10" pos:end="7:15">header</name><index pos:start="7:16" pos:end="7:18">[<expr pos:start="7:17" pos:end="7:17"><literal type="number" pos:start="7:17" pos:end="7:17">8</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:10"><decl pos:start="9:5" pos:end="9:9"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:9">i</name></decl>;</decl_stmt>



    <comment type="block" pos:start="13:5" pos:end="13:27">/* check RIFF header */</comment>

    <expr_stmt pos:start="15:5" pos:end="15:29"><expr pos:start="15:5" pos:end="15:28"><call pos:start="15:5" pos:end="15:28"><name pos:start="15:5" pos:end="15:13">avio_read</name><argument_list pos:start="15:14" pos:end="15:28">(<argument pos:start="15:15" pos:end="15:16"><expr pos:start="15:15" pos:end="15:16"><name pos:start="15:15" pos:end="15:16">pb</name></expr></argument>, <argument pos:start="15:19" pos:end="15:24"><expr pos:start="15:19" pos:end="15:24"><name pos:start="15:19" pos:end="15:24">header</name></expr></argument>, <argument pos:start="15:27" pos:end="15:27"><expr pos:start="15:27" pos:end="15:27"><literal type="number" pos:start="15:27" pos:end="15:27">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:35"><expr pos:start="17:5" pos:end="17:34"><name pos:start="17:5" pos:end="17:17"><name pos:start="17:5" pos:end="17:7">avi</name><operator pos:start="17:8" pos:end="17:9">-&gt;</operator><name pos:start="17:10" pos:end="17:17">riff_end</name></name>  <operator pos:start="17:20" pos:end="17:20">=</operator> <call pos:start="17:22" pos:end="17:34"><name pos:start="17:22" pos:end="17:30">avio_rl32</name><argument_list pos:start="17:31" pos:end="17:34">(<argument pos:start="17:32" pos:end="17:33"><expr pos:start="17:32" pos:end="17:33"><name pos:start="17:32" pos:end="17:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="17:37" pos:end="17:57">/* RIFF chunk size */</comment>

    <expr_stmt pos:start="19:5" pos:end="19:35"><expr pos:start="19:5" pos:end="19:34"><name pos:start="19:5" pos:end="19:17"><name pos:start="19:5" pos:end="19:7">avi</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:17">riff_end</name></name> <operator pos:start="19:19" pos:end="19:20">+=</operator> <call pos:start="19:22" pos:end="19:34"><name pos:start="19:22" pos:end="19:30">avio_tell</name><argument_list pos:start="19:31" pos:end="19:34">(<argument pos:start="19:32" pos:end="19:33"><expr pos:start="19:32" pos:end="19:33"><name pos:start="19:32" pos:end="19:33">pb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="19:37" pos:end="19:56">/* RIFF chunk end */</comment>

    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><call pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:13">avio_read</name><argument_list pos:start="21:14" pos:end="21:32">(<argument pos:start="21:15" pos:end="21:16"><expr pos:start="21:15" pos:end="21:16"><name pos:start="21:15" pos:end="21:16">pb</name></expr></argument>, <argument pos:start="21:19" pos:end="21:28"><expr pos:start="21:19" pos:end="21:28"><name pos:start="21:19" pos:end="21:24">header</name> <operator pos:start="21:26" pos:end="21:26">+</operator> <literal type="number" pos:start="21:28" pos:end="21:28">4</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <for pos:start="25:5" pos:end="29:18">for <control pos:start="25:9" pos:end="25:39">(<init pos:start="25:10" pos:end="25:15"><expr pos:start="25:10" pos:end="25:14"><name pos:start="25:10" pos:end="25:10">i</name> <operator pos:start="25:12" pos:end="25:12">=</operator> <literal type="number" pos:start="25:14" pos:end="25:14">0</literal></expr>;</init> <condition pos:start="25:17" pos:end="25:34"><expr pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:33"><name pos:start="25:17" pos:end="25:27">avi_headers</name><index pos:start="25:28" pos:end="25:30">[<expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">i</name></expr>]</index><index pos:start="25:31" pos:end="25:33">[<expr pos:start="25:32" pos:end="25:32"><literal type="number" pos:start="25:32" pos:end="25:32">0</literal></expr>]</index></name></expr>;</condition> <incr pos:start="25:36" pos:end="25:38"><expr pos:start="25:36" pos:end="25:38"><name pos:start="25:36" pos:end="25:36">i</name><operator pos:start="25:37" pos:end="25:38">++</operator></expr></incr>)</control><block type="pseudo" pos:start="27:9" pos:end="29:18"><block_content pos:start="27:9" pos:end="29:18">

        <if_stmt pos:start="27:9" pos:end="29:18"><if pos:start="27:9" pos:end="29:18">if <condition pos:start="27:12" pos:end="27:47">(<expr pos:start="27:13" pos:end="27:46"><operator pos:start="27:13" pos:end="27:13">!</operator><call pos:start="27:14" pos:end="27:46"><name pos:start="27:14" pos:end="27:19">memcmp</name><argument_list pos:start="27:20" pos:end="27:46">(<argument pos:start="27:21" pos:end="27:26"><expr pos:start="27:21" pos:end="27:26"><name pos:start="27:21" pos:end="27:26">header</name></expr></argument>, <argument pos:start="27:29" pos:end="27:42"><expr pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:42"><name pos:start="27:29" pos:end="27:39">avi_headers</name><index pos:start="27:40" pos:end="27:42">[<expr pos:start="27:41" pos:end="27:41"><name pos:start="27:41" pos:end="27:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="27:45" pos:end="27:45"><expr pos:start="27:45" pos:end="27:45"><literal type="number" pos:start="27:45" pos:end="27:45">8</literal></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:13" pos:end="29:18"><block_content pos:start="29:13" pos:end="29:18">

            <break pos:start="29:13" pos:end="29:18">break;</break></block_content></block></if></if_stmt></block_content></block></for>

    <if_stmt pos:start="31:5" pos:end="33:35"><if pos:start="31:5" pos:end="33:35">if <condition pos:start="31:8" pos:end="31:27">(<expr pos:start="31:9" pos:end="31:26"><operator pos:start="31:9" pos:end="31:9">!</operator><name pos:start="31:10" pos:end="31:26"><name pos:start="31:10" pos:end="31:20">avi_headers</name><index pos:start="31:21" pos:end="31:23">[<expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">i</name></expr>]</index><index pos:start="31:24" pos:end="31:26">[<expr pos:start="31:25" pos:end="31:25"><literal type="number" pos:start="31:25" pos:end="31:25">0</literal></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="33:9" pos:end="33:35"><block_content pos:start="33:9" pos:end="33:35">

        <return pos:start="33:9" pos:end="33:35">return <expr pos:start="33:16" pos:end="33:34"><name pos:start="33:16" pos:end="33:34">AVERROR_INVALIDDATA</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="37:5" pos:end="41:76"><if pos:start="37:5" pos:end="41:76">if <condition pos:start="37:8" pos:end="37:26">(<expr pos:start="37:9" pos:end="37:25"><name pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:14">header</name><index pos:start="37:15" pos:end="37:17">[<expr pos:start="37:16" pos:end="37:16"><literal type="number" pos:start="37:16" pos:end="37:16">7</literal></expr>]</index></name> <operator pos:start="37:19" pos:end="37:20">==</operator> <literal type="number" pos:start="37:22" pos:end="37:25">0x19</literal></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="41:76"><block_content pos:start="39:9" pos:end="41:76">

        <expr_stmt pos:start="39:9" pos:end="41:76"><expr pos:start="39:9" pos:end="41:75"><call pos:start="39:9" pos:end="41:75"><name pos:start="39:9" pos:end="39:14">av_log</name><argument_list pos:start="39:15" pos:end="41:75">(<argument pos:start="39:16" pos:end="39:16"><expr pos:start="39:16" pos:end="39:16"><name pos:start="39:16" pos:end="39:16">s</name></expr></argument>, <argument pos:start="39:19" pos:end="39:29"><expr pos:start="39:19" pos:end="39:29"><name pos:start="39:19" pos:end="39:29">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="41:16" pos:end="41:74"><expr pos:start="41:16" pos:end="41:74"><literal type="string" pos:start="41:16" pos:end="41:74">"This file has been generated by a totally broken muxer.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <return pos:start="45:5" pos:end="45:13">return <expr pos:start="45:12" pos:end="45:12"><literal type="number" pos:start="45:12" pos:end="45:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
