<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16272.c" pos:tabs="8"><function pos:start="1:1" pos:end="99:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">target_setup_frame</name><parameter_list pos:start="1:31" pos:end="5:48">(<parameter pos:start="1:32" pos:end="1:39"><decl pos:start="1:32" pos:end="1:39"><type pos:start="1:32" pos:end="1:39"><name pos:start="1:32" pos:end="1:34">int</name></type> <name pos:start="1:36" pos:end="1:39">usig</name></decl></parameter>, <parameter pos:start="1:42" pos:end="1:68"><decl pos:start="1:42" pos:end="1:68"><type pos:start="1:42" pos:end="1:68"><name pos:start="1:42" pos:end="1:64"><name pos:start="1:42" pos:end="1:47">struct</name> <name pos:start="1:49" pos:end="1:64">target_sigaction</name></name> <modifier pos:start="1:66" pos:end="1:66">*</modifier></type><name pos:start="1:67" pos:end="1:68">ka</name></decl></parameter>,

                               <parameter pos:start="3:32" pos:end="3:53"><decl pos:start="3:32" pos:end="3:53"><type pos:start="3:32" pos:end="3:53"><name pos:start="3:32" pos:end="3:47">target_siginfo_t</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:53">info</name></decl></parameter>, <parameter pos:start="3:56" pos:end="3:75"><decl pos:start="3:56" pos:end="3:75"><type pos:start="3:56" pos:end="3:75"><name pos:start="3:56" pos:end="3:70">target_sigset_t</name> <modifier pos:start="3:72" pos:end="3:72">*</modifier></type><name pos:start="3:73" pos:end="3:75">set</name></decl></parameter>,

                               <parameter pos:start="5:32" pos:end="5:47"><decl pos:start="5:32" pos:end="5:47"><type pos:start="5:32" pos:end="5:47"><name pos:start="5:32" pos:end="5:42">CPUARMState</name> <modifier pos:start="5:44" pos:end="5:44">*</modifier></type><name pos:start="5:45" pos:end="5:47">env</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="99:1">{<block_content pos:start="9:5" pos:end="97:30">

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:29"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:29">target_rt_sigframe</name></name> <modifier pos:start="9:31" pos:end="9:31">*</modifier></type><name pos:start="9:32" pos:end="9:36">frame</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:38"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13">abi_ulong</name></type> <name pos:start="11:15" pos:end="11:24">frame_addr</name></decl>, <decl pos:start="11:27" pos:end="11:37"><type ref="prev" pos:start="11:5" pos:end="11:13"/><name pos:start="11:27" pos:end="11:37">return_addr</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:39"><expr pos:start="15:5" pos:end="15:38"><name pos:start="15:5" pos:end="15:14">frame_addr</name> <operator pos:start="15:16" pos:end="15:16">=</operator> <call pos:start="15:18" pos:end="15:38"><name pos:start="15:18" pos:end="15:29">get_sigframe</name><argument_list pos:start="15:30" pos:end="15:38">(<argument pos:start="15:31" pos:end="15:32"><expr pos:start="15:31" pos:end="15:32"><name pos:start="15:31" pos:end="15:32">ka</name></expr></argument>, <argument pos:start="15:35" pos:end="15:37"><expr pos:start="15:35" pos:end="15:37"><name pos:start="15:35" pos:end="15:37">env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:62">(<expr pos:start="17:9" pos:end="17:61"><operator pos:start="17:9" pos:end="17:9">!</operator><call pos:start="17:10" pos:end="17:61"><name pos:start="17:10" pos:end="17:25">lock_user_struct</name><argument_list pos:start="17:26" pos:end="17:61">(<argument pos:start="17:27" pos:end="17:38"><expr pos:start="17:27" pos:end="17:38"><name pos:start="17:27" pos:end="17:38">VERIFY_WRITE</name></expr></argument>, <argument pos:start="17:41" pos:end="17:45"><expr pos:start="17:41" pos:end="17:45"><name pos:start="17:41" pos:end="17:45">frame</name></expr></argument>, <argument pos:start="17:48" pos:end="17:57"><expr pos:start="17:48" pos:end="17:57"><name pos:start="17:48" pos:end="17:57">frame_addr</name></expr></argument>, <argument pos:start="17:60" pos:end="17:60"><expr pos:start="17:60" pos:end="17:60"><literal type="number" pos:start="17:60" pos:end="17:60">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:64" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:26">

        <goto pos:start="19:9" pos:end="19:26">goto <name pos:start="19:14" pos:end="19:25">give_sigsegv</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:40"><expr pos:start="25:5" pos:end="25:39"><call pos:start="25:5" pos:end="25:39"><name pos:start="25:5" pos:end="25:14">__put_user</name><argument_list pos:start="25:15" pos:end="25:39">(<argument pos:start="25:16" pos:end="25:16"><expr pos:start="25:16" pos:end="25:16"><literal type="number" pos:start="25:16" pos:end="25:16">0</literal></expr></argument>, <argument pos:start="25:19" pos:end="25:38"><expr pos:start="25:19" pos:end="25:38"><operator pos:start="25:19" pos:end="25:19">&amp;</operator><name pos:start="25:20" pos:end="25:38"><name pos:start="25:20" pos:end="25:24">frame</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:28">uc</name><operator pos:start="25:29" pos:end="25:29">.</operator><name pos:start="25:30" pos:end="25:38">tuc_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:39"><expr pos:start="27:5" pos:end="27:38"><call pos:start="27:5" pos:end="27:38"><name pos:start="27:5" pos:end="27:14">__put_user</name><argument_list pos:start="27:15" pos:end="27:38">(<argument pos:start="27:16" pos:end="27:16"><expr pos:start="27:16" pos:end="27:16"><literal type="number" pos:start="27:16" pos:end="27:16">0</literal></expr></argument>, <argument pos:start="27:19" pos:end="27:37"><expr pos:start="27:19" pos:end="27:37"><operator pos:start="27:19" pos:end="27:19">&amp;</operator><name pos:start="27:20" pos:end="27:37"><name pos:start="27:20" pos:end="27:24">frame</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:28">uc</name><operator pos:start="27:29" pos:end="27:29">.</operator><name pos:start="27:30" pos:end="27:37">tuc_link</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="33:50"><expr pos:start="31:5" pos:end="33:49"><call pos:start="31:5" pos:end="33:49"><name pos:start="31:5" pos:end="31:14">__put_user</name><argument_list pos:start="31:15" pos:end="33:49">(<argument pos:start="31:16" pos:end="31:44"><expr pos:start="31:16" pos:end="31:44"><name pos:start="31:16" pos:end="31:44"><name pos:start="31:16" pos:end="31:38">target_sigaltstack_used</name><operator pos:start="31:39" pos:end="31:39">.</operator><name pos:start="31:40" pos:end="31:44">ss_sp</name></name></expr></argument>,

                      <argument pos:start="33:23" pos:end="33:48"><expr pos:start="33:23" pos:end="33:48"><operator pos:start="33:23" pos:end="33:23">&amp;</operator><name pos:start="33:24" pos:end="33:48"><name pos:start="33:24" pos:end="33:28">frame</name><operator pos:start="33:29" pos:end="33:30">-&gt;</operator><name pos:start="33:31" pos:end="33:32">uc</name><operator pos:start="33:33" pos:end="33:33">.</operator><name pos:start="33:34" pos:end="33:42">tuc_stack</name><operator pos:start="33:43" pos:end="33:43">.</operator><name pos:start="33:44" pos:end="33:48">ss_sp</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="37:53"><expr pos:start="35:5" pos:end="37:52"><call pos:start="35:5" pos:end="37:52"><name pos:start="35:5" pos:end="35:14">__put_user</name><argument_list pos:start="35:15" pos:end="37:52">(<argument pos:start="35:16" pos:end="35:43"><expr pos:start="35:16" pos:end="35:43"><call pos:start="35:16" pos:end="35:43"><name pos:start="35:16" pos:end="35:27">sas_ss_flags</name><argument_list pos:start="35:28" pos:end="35:43">(<argument pos:start="35:29" pos:end="35:42"><expr pos:start="35:29" pos:end="35:42"><name pos:start="35:29" pos:end="35:42"><name pos:start="35:29" pos:end="35:31">env</name><operator pos:start="35:32" pos:end="35:33">-&gt;</operator><name pos:start="35:34" pos:end="35:38">xregs</name><index pos:start="35:39" pos:end="35:42">[<expr pos:start="35:40" pos:end="35:41"><literal type="number" pos:start="35:40" pos:end="35:41">31</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr></argument>,

                      <argument pos:start="37:23" pos:end="37:51"><expr pos:start="37:23" pos:end="37:51"><operator pos:start="37:23" pos:end="37:23">&amp;</operator><name pos:start="37:24" pos:end="37:51"><name pos:start="37:24" pos:end="37:28">frame</name><operator pos:start="37:29" pos:end="37:30">-&gt;</operator><name pos:start="37:31" pos:end="37:32">uc</name><operator pos:start="37:33" pos:end="37:33">.</operator><name pos:start="37:34" pos:end="37:42">tuc_stack</name><operator pos:start="37:43" pos:end="37:43">.</operator><name pos:start="37:44" pos:end="37:51">ss_flags</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="41:52"><expr pos:start="39:5" pos:end="41:51"><call pos:start="39:5" pos:end="41:51"><name pos:start="39:5" pos:end="39:14">__put_user</name><argument_list pos:start="39:15" pos:end="41:51">(<argument pos:start="39:16" pos:end="39:46"><expr pos:start="39:16" pos:end="39:46"><name pos:start="39:16" pos:end="39:46"><name pos:start="39:16" pos:end="39:38">target_sigaltstack_used</name><operator pos:start="39:39" pos:end="39:39">.</operator><name pos:start="39:40" pos:end="39:46">ss_size</name></name></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:50"><expr pos:start="41:23" pos:end="41:50"><operator pos:start="41:23" pos:end="41:23">&amp;</operator><name pos:start="41:24" pos:end="41:50"><name pos:start="41:24" pos:end="41:28">frame</name><operator pos:start="41:29" pos:end="41:30">-&gt;</operator><name pos:start="41:31" pos:end="41:32">uc</name><operator pos:start="41:33" pos:end="41:33">.</operator><name pos:start="41:34" pos:end="41:42">tuc_stack</name><operator pos:start="41:43" pos:end="41:43">.</operator><name pos:start="41:44" pos:end="41:50">ss_size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:43"><expr pos:start="43:5" pos:end="43:42"><call pos:start="43:5" pos:end="43:42"><name pos:start="43:5" pos:end="43:25">target_setup_sigframe</name><argument_list pos:start="43:26" pos:end="43:42">(<argument pos:start="43:27" pos:end="43:31"><expr pos:start="43:27" pos:end="43:31"><name pos:start="43:27" pos:end="43:31">frame</name></expr></argument>, <argument pos:start="43:34" pos:end="43:36"><expr pos:start="43:34" pos:end="43:36"><name pos:start="43:34" pos:end="43:36">env</name></expr></argument>, <argument pos:start="43:39" pos:end="43:41"><expr pos:start="43:39" pos:end="43:41"><name pos:start="43:39" pos:end="43:41">set</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="59:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:42">(<expr pos:start="45:9" pos:end="45:41"><name pos:start="45:9" pos:end="45:20"><name pos:start="45:9" pos:end="45:10">ka</name><operator pos:start="45:11" pos:end="45:12">-&gt;</operator><name pos:start="45:13" pos:end="45:20">sa_flags</name></name> <operator pos:start="45:22" pos:end="45:22">&amp;</operator> <name pos:start="45:24" pos:end="45:41">TARGET_SA_RESTORER</name></expr>)</condition> <block pos:start="45:44" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:38">

        <expr_stmt pos:start="47:9" pos:end="47:38"><expr pos:start="47:9" pos:end="47:37"><name pos:start="47:9" pos:end="47:19">return_addr</name> <operator pos:start="47:21" pos:end="47:21">=</operator> <name pos:start="47:23" pos:end="47:37"><name pos:start="47:23" pos:end="47:24">ka</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:37">sa_restorer</name></name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="59:5">else <block pos:start="49:12" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:78">

        <comment type="block" pos:start="51:9" pos:end="51:47">/* mov x8,#__NR_rt_sigreturn; svc #0 */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:49"><expr pos:start="53:9" pos:end="53:48"><call pos:start="53:9" pos:end="53:48"><name pos:start="53:9" pos:end="53:18">__put_user</name><argument_list pos:start="53:19" pos:end="53:48">(<argument pos:start="53:20" pos:end="53:29"><expr pos:start="53:20" pos:end="53:29"><literal type="number" pos:start="53:20" pos:end="53:29">0xd2801168</literal></expr></argument>, <argument pos:start="53:32" pos:end="53:47"><expr pos:start="53:32" pos:end="53:47"><operator pos:start="53:32" pos:end="53:32">&amp;</operator><name pos:start="53:33" pos:end="53:47"><name pos:start="53:33" pos:end="53:37">frame</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:44">tramp</name><index pos:start="53:45" pos:end="53:47">[<expr pos:start="53:46" pos:end="53:46"><literal type="number" pos:start="53:46" pos:end="53:46">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:49"><expr pos:start="55:9" pos:end="55:48"><call pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:18">__put_user</name><argument_list pos:start="55:19" pos:end="55:48">(<argument pos:start="55:20" pos:end="55:29"><expr pos:start="55:20" pos:end="55:29"><literal type="number" pos:start="55:20" pos:end="55:29">0xd4000001</literal></expr></argument>, <argument pos:start="55:32" pos:end="55:47"><expr pos:start="55:32" pos:end="55:47"><operator pos:start="55:32" pos:end="55:32">&amp;</operator><name pos:start="55:33" pos:end="55:47"><name pos:start="55:33" pos:end="55:37">frame</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:44">tramp</name><index pos:start="55:45" pos:end="55:47">[<expr pos:start="55:46" pos:end="55:46"><literal type="number" pos:start="55:46" pos:end="55:46">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:78"><expr pos:start="57:9" pos:end="57:77"><name pos:start="57:9" pos:end="57:19">return_addr</name> <operator pos:start="57:21" pos:end="57:21">=</operator> <name pos:start="57:23" pos:end="57:32">frame_addr</name> <operator pos:start="57:34" pos:end="57:34">+</operator> <call pos:start="57:36" pos:end="57:77"><name pos:start="57:36" pos:end="57:43">offsetof</name><argument_list pos:start="57:44" pos:end="57:77">(<argument pos:start="57:45" pos:end="57:69"><expr pos:start="57:45" pos:end="57:69">struct <name pos:start="57:52" pos:end="57:69">target_rt_sigframe</name></expr></argument>, <argument pos:start="57:72" pos:end="57:76"><expr pos:start="57:72" pos:end="57:76"><name pos:start="57:72" pos:end="57:76">tramp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:25"><expr pos:start="61:5" pos:end="61:24"><name pos:start="61:5" pos:end="61:17"><name pos:start="61:5" pos:end="61:7">env</name><operator pos:start="61:8" pos:end="61:9">-&gt;</operator><name pos:start="61:10" pos:end="61:14">xregs</name><index pos:start="61:15" pos:end="61:17">[<expr pos:start="61:16" pos:end="61:16"><literal type="number" pos:start="61:16" pos:end="61:16">0</literal></expr>]</index></name> <operator pos:start="61:19" pos:end="61:19">=</operator> <name pos:start="61:21" pos:end="61:24">usig</name></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:32"><expr pos:start="63:5" pos:end="63:31"><name pos:start="63:5" pos:end="63:18"><name pos:start="63:5" pos:end="63:7">env</name><operator pos:start="63:8" pos:end="63:9">-&gt;</operator><name pos:start="63:10" pos:end="63:14">xregs</name><index pos:start="63:15" pos:end="63:18">[<expr pos:start="63:16" pos:end="63:17"><literal type="number" pos:start="63:16" pos:end="63:17">31</literal></expr>]</index></name> <operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:31">frame_addr</name></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:78"><expr pos:start="65:5" pos:end="65:77"><name pos:start="65:5" pos:end="65:18"><name pos:start="65:5" pos:end="65:7">env</name><operator pos:start="65:8" pos:end="65:9">-&gt;</operator><name pos:start="65:10" pos:end="65:14">xregs</name><index pos:start="65:15" pos:end="65:18">[<expr pos:start="65:16" pos:end="65:17"><literal type="number" pos:start="65:16" pos:end="65:17">29</literal></expr>]</index></name> <operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:35"><name pos:start="65:22" pos:end="65:24">env</name><operator pos:start="65:25" pos:end="65:26">-&gt;</operator><name pos:start="65:27" pos:end="65:31">xregs</name><index pos:start="65:32" pos:end="65:35">[<expr pos:start="65:33" pos:end="65:34"><literal type="number" pos:start="65:33" pos:end="65:34">31</literal></expr>]</index></name> <operator pos:start="65:37" pos:end="65:37">+</operator> <call pos:start="65:39" pos:end="65:77"><name pos:start="65:39" pos:end="65:46">offsetof</name><argument_list pos:start="65:47" pos:end="65:77">(<argument pos:start="65:48" pos:end="65:72"><expr pos:start="65:48" pos:end="65:72">struct <name pos:start="65:55" pos:end="65:72">target_rt_sigframe</name></expr></argument>, <argument pos:start="65:75" pos:end="65:76"><expr pos:start="65:75" pos:end="65:76"><name pos:start="65:75" pos:end="65:76">fp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:30"><expr pos:start="67:5" pos:end="67:29"><name pos:start="67:5" pos:end="67:11"><name pos:start="67:5" pos:end="67:7">env</name><operator pos:start="67:8" pos:end="67:9">-&gt;</operator><name pos:start="67:10" pos:end="67:11">pc</name></name> <operator pos:start="67:13" pos:end="67:13">=</operator> <name pos:start="67:15" pos:end="67:29"><name pos:start="67:15" pos:end="67:16">ka</name><operator pos:start="67:17" pos:end="67:18">-&gt;</operator><name pos:start="67:19" pos:end="67:29">_sa_handler</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:33"><expr pos:start="69:5" pos:end="69:32"><name pos:start="69:5" pos:end="69:18"><name pos:start="69:5" pos:end="69:7">env</name><operator pos:start="69:8" pos:end="69:9">-&gt;</operator><name pos:start="69:10" pos:end="69:14">xregs</name><index pos:start="69:15" pos:end="69:18">[<expr pos:start="69:16" pos:end="69:17"><literal type="number" pos:start="69:16" pos:end="69:17">30</literal></expr>]</index></name> <operator pos:start="69:20" pos:end="69:20">=</operator> <name pos:start="69:22" pos:end="69:32">return_addr</name></expr>;</expr_stmt>

    <if_stmt pos:start="71:5" pos:end="83:5"><if pos:start="71:5" pos:end="83:5">if <condition pos:start="71:8" pos:end="71:13">(<expr pos:start="71:9" pos:end="71:12"><name pos:start="71:9" pos:end="71:12">info</name></expr>)</condition> <block pos:start="71:15" pos:end="83:5">{<block_content pos:start="73:9" pos:end="81:77">

        <if_stmt pos:start="73:9" pos:end="77:9"><if pos:start="73:9" pos:end="77:9">if <condition pos:start="73:12" pos:end="73:53">(<expr pos:start="73:13" pos:end="73:52"><call pos:start="73:13" pos:end="73:52"><name pos:start="73:13" pos:end="73:32">copy_siginfo_to_user</name><argument_list pos:start="73:33" pos:end="73:52">(<argument pos:start="73:34" pos:end="73:45"><expr pos:start="73:34" pos:end="73:45"><operator pos:start="73:34" pos:end="73:34">&amp;</operator><name pos:start="73:35" pos:end="73:45"><name pos:start="73:35" pos:end="73:39">frame</name><operator pos:start="73:40" pos:end="73:41">-&gt;</operator><name pos:start="73:42" pos:end="73:45">info</name></name></expr></argument>, <argument pos:start="73:48" pos:end="73:51"><expr pos:start="73:48" pos:end="73:51"><name pos:start="73:48" pos:end="73:51">info</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="73:55" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:30">

            <goto pos:start="75:13" pos:end="75:30">goto <name pos:start="75:18" pos:end="75:29">give_sigsegv</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:79"><expr pos:start="79:9" pos:end="79:78"><name pos:start="79:9" pos:end="79:21"><name pos:start="79:9" pos:end="79:11">env</name><operator pos:start="79:12" pos:end="79:13">-&gt;</operator><name pos:start="79:14" pos:end="79:18">xregs</name><index pos:start="79:19" pos:end="79:21">[<expr pos:start="79:20" pos:end="79:20"><literal type="number" pos:start="79:20" pos:end="79:20">1</literal></expr>]</index></name> <operator pos:start="79:23" pos:end="79:23">=</operator> <name pos:start="79:25" pos:end="79:34">frame_addr</name> <operator pos:start="79:36" pos:end="79:36">+</operator> <call pos:start="79:38" pos:end="79:78"><name pos:start="79:38" pos:end="79:45">offsetof</name><argument_list pos:start="79:46" pos:end="79:78">(<argument pos:start="79:47" pos:end="79:71"><expr pos:start="79:47" pos:end="79:71">struct <name pos:start="79:54" pos:end="79:71">target_rt_sigframe</name></expr></argument>, <argument pos:start="79:74" pos:end="79:77"><expr pos:start="79:74" pos:end="79:77"><name pos:start="79:74" pos:end="79:77">info</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:77"><expr pos:start="81:9" pos:end="81:76"><name pos:start="81:9" pos:end="81:21"><name pos:start="81:9" pos:end="81:11">env</name><operator pos:start="81:12" pos:end="81:13">-&gt;</operator><name pos:start="81:14" pos:end="81:18">xregs</name><index pos:start="81:19" pos:end="81:21">[<expr pos:start="81:20" pos:end="81:20"><literal type="number" pos:start="81:20" pos:end="81:20">2</literal></expr>]</index></name> <operator pos:start="81:23" pos:end="81:23">=</operator> <name pos:start="81:25" pos:end="81:34">frame_addr</name> <operator pos:start="81:36" pos:end="81:36">+</operator> <call pos:start="81:38" pos:end="81:76"><name pos:start="81:38" pos:end="81:45">offsetof</name><argument_list pos:start="81:46" pos:end="81:76">(<argument pos:start="81:47" pos:end="81:71"><expr pos:start="81:47" pos:end="81:71">struct <name pos:start="81:54" pos:end="81:71">target_rt_sigframe</name></expr></argument>, <argument pos:start="81:74" pos:end="81:75"><expr pos:start="81:74" pos:end="81:75"><name pos:start="81:74" pos:end="81:75">uc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:45"><expr pos:start="87:5" pos:end="87:44"><call pos:start="87:5" pos:end="87:44"><name pos:start="87:5" pos:end="87:22">unlock_user_struct</name><argument_list pos:start="87:23" pos:end="87:44">(<argument pos:start="87:24" pos:end="87:28"><expr pos:start="87:24" pos:end="87:28"><name pos:start="87:24" pos:end="87:28">frame</name></expr></argument>, <argument pos:start="87:31" pos:end="87:40"><expr pos:start="87:31" pos:end="87:40"><name pos:start="87:31" pos:end="87:40">frame_addr</name></expr></argument>, <argument pos:start="87:43" pos:end="87:43"><expr pos:start="87:43" pos:end="87:43"><literal type="number" pos:start="87:43" pos:end="87:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="89:5" pos:end="89:11">return;</return>



 <label pos:start="93:2" pos:end="93:14"><name pos:start="93:2" pos:end="93:13">give_sigsegv</name>:</label>

    <expr_stmt pos:start="95:5" pos:end="95:45"><expr pos:start="95:5" pos:end="95:44"><call pos:start="95:5" pos:end="95:44"><name pos:start="95:5" pos:end="95:22">unlock_user_struct</name><argument_list pos:start="95:23" pos:end="95:44">(<argument pos:start="95:24" pos:end="95:28"><expr pos:start="95:24" pos:end="95:28"><name pos:start="95:24" pos:end="95:28">frame</name></expr></argument>, <argument pos:start="95:31" pos:end="95:40"><expr pos:start="95:31" pos:end="95:40"><name pos:start="95:31" pos:end="95:40">frame_addr</name></expr></argument>, <argument pos:start="95:43" pos:end="95:43"><expr pos:start="95:43" pos:end="95:43"><literal type="number" pos:start="95:43" pos:end="95:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="97:5" pos:end="97:30"><expr pos:start="97:5" pos:end="97:29"><call pos:start="97:5" pos:end="97:29"><name pos:start="97:5" pos:end="97:13">force_sig</name><argument_list pos:start="97:14" pos:end="97:29">(<argument pos:start="97:15" pos:end="97:28"><expr pos:start="97:15" pos:end="97:28"><name pos:start="97:15" pos:end="97:28">TARGET_SIGSEGV</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
