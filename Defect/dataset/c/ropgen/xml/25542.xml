<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/25542.c" pos:tabs="8"><function pos:start="1:1" pos:end="113:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:25">find_partition</name><parameter_list pos:start="1:26" pos:end="3:53">(<parameter pos:start="1:27" pos:end="1:43"><decl pos:start="1:27" pos:end="1:43"><type pos:start="1:27" pos:end="1:43"><name pos:start="1:27" pos:end="1:38">BlockBackend</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">blk</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:58">partition</name></decl></parameter>,

                          <parameter pos:start="3:27" pos:end="3:39"><decl pos:start="3:27" pos:end="3:39"><type pos:start="3:27" pos:end="3:39"><name pos:start="3:27" pos:end="3:31">off_t</name> <modifier pos:start="3:33" pos:end="3:33">*</modifier></type><name pos:start="3:34" pos:end="3:39">offset</name></decl></parameter>, <parameter pos:start="3:42" pos:end="3:52"><decl pos:start="3:42" pos:end="3:52"><type pos:start="3:42" pos:end="3:52"><name pos:start="3:42" pos:end="3:46">off_t</name> <modifier pos:start="3:48" pos:end="3:48">*</modifier></type><name pos:start="3:49" pos:end="3:52">size</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="113:1">{<block_content pos:start="7:5" pos:end="111:19">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:27"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:27">partition_record</name></name></type> <name pos:start="7:29" pos:end="7:34"><name pos:start="7:29" pos:end="7:31">mbr</name><index pos:start="7:32" pos:end="7:34">[<expr pos:start="7:33" pos:end="7:33"><literal type="number" pos:start="7:33" pos:end="7:33">4</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:22"><decl pos:start="9:5" pos:end="9:21"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:11">uint8_t</name></type> <name pos:start="9:13" pos:end="9:21"><name pos:start="9:13" pos:end="9:16">data</name><index pos:start="9:17" pos:end="9:21">[<expr pos:start="9:18" pos:end="9:20"><literal type="number" pos:start="9:18" pos:end="9:20">512</literal></expr>]</index></name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:19">ext_partnum</name> <init pos:start="13:21" pos:end="13:23">= <expr pos:start="13:23" pos:end="13:23"><literal type="number" pos:start="13:23" pos:end="13:23">4</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:12"><decl pos:start="15:5" pos:end="15:11"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="25:5"><if pos:start="19:5" pos:end="25:5">if <condition pos:start="19:8" pos:end="19:46">(<expr pos:start="19:9" pos:end="19:45"><operator pos:start="19:9" pos:end="19:9">(</operator><name pos:start="19:10" pos:end="19:12">ret</name> <operator pos:start="19:14" pos:end="19:14">=</operator> <call pos:start="19:16" pos:end="19:40"><name pos:start="19:16" pos:end="19:23">blk_read</name><argument_list pos:start="19:24" pos:end="19:40">(<argument pos:start="19:25" pos:end="19:27"><expr pos:start="19:25" pos:end="19:27"><name pos:start="19:25" pos:end="19:27">blk</name></expr></argument>, <argument pos:start="19:30" pos:end="19:30"><expr pos:start="19:30" pos:end="19:30"><literal type="number" pos:start="19:30" pos:end="19:30">0</literal></expr></argument>, <argument pos:start="19:33" pos:end="19:36"><expr pos:start="19:33" pos:end="19:36"><name pos:start="19:33" pos:end="19:36">data</name></expr></argument>, <argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><literal type="number" pos:start="19:39" pos:end="19:39">1</literal></expr></argument>)</argument_list></call><operator pos:start="19:41" pos:end="19:41">)</operator> <operator pos:start="19:43" pos:end="19:43">&lt;</operator> <literal type="number" pos:start="19:45" pos:end="19:45">0</literal></expr>)</condition> <block pos:start="19:48" pos:end="25:5">{<block_content pos:start="21:9" pos:end="23:27">

        <expr_stmt pos:start="21:9" pos:end="21:64"><expr pos:start="21:9" pos:end="21:63"><call pos:start="21:9" pos:end="21:63"><name pos:start="21:9" pos:end="21:20">error_report</name><argument_list pos:start="21:21" pos:end="21:63">(<argument pos:start="21:22" pos:end="21:46"><expr pos:start="21:22" pos:end="21:46"><literal type="string" pos:start="21:22" pos:end="21:46">"error while reading: %s"</literal></expr></argument>, <argument pos:start="21:49" pos:end="21:62"><expr pos:start="21:49" pos:end="21:62"><call pos:start="21:49" pos:end="21:62"><name pos:start="21:49" pos:end="21:56">strerror</name><argument_list pos:start="21:57" pos:end="21:62">(<argument pos:start="21:58" pos:end="21:61"><expr pos:start="21:58" pos:end="21:61"><operator pos:start="21:58" pos:end="21:58">-</operator><name pos:start="21:59" pos:end="21:61">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:27"><expr pos:start="23:9" pos:end="23:26"><call pos:start="23:9" pos:end="23:26"><name pos:start="23:9" pos:end="23:12">exit</name><argument_list pos:start="23:13" pos:end="23:26">(<argument pos:start="23:14" pos:end="23:25"><expr pos:start="23:14" pos:end="23:25"><name pos:start="23:14" pos:end="23:25">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:47">(<expr pos:start="29:9" pos:end="29:46"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:12">data</name><index pos:start="29:13" pos:end="29:17">[<expr pos:start="29:14" pos:end="29:16"><literal type="number" pos:start="29:14" pos:end="29:16">510</literal></expr>]</index></name> <operator pos:start="29:19" pos:end="29:20">!=</operator> <literal type="number" pos:start="29:22" pos:end="29:25">0x55</literal> <operator pos:start="29:27" pos:end="29:28">||</operator> <name pos:start="29:30" pos:end="29:38"><name pos:start="29:30" pos:end="29:33">data</name><index pos:start="29:34" pos:end="29:38">[<expr pos:start="29:35" pos:end="29:37"><literal type="number" pos:start="29:35" pos:end="29:37">511</literal></expr>]</index></name> <operator pos:start="29:40" pos:end="29:41">!=</operator> <literal type="number" pos:start="29:43" pos:end="29:46">0xaa</literal></expr>)</condition> <block pos:start="29:49" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:23">

        <return pos:start="31:9" pos:end="31:23">return <expr pos:start="31:16" pos:end="31:22"><operator pos:start="31:16" pos:end="31:16">-</operator><name pos:start="31:17" pos:end="31:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <for pos:start="37:5" pos:end="107:5">for <control pos:start="37:9" pos:end="37:27">(<init pos:start="37:10" pos:end="37:15"><expr pos:start="37:10" pos:end="37:14"><name pos:start="37:10" pos:end="37:10">i</name> <operator pos:start="37:12" pos:end="37:12">=</operator> <literal type="number" pos:start="37:14" pos:end="37:14">0</literal></expr>;</init> <condition pos:start="37:17" pos:end="37:22"><expr pos:start="37:17" pos:end="37:21"><name pos:start="37:17" pos:end="37:17">i</name> <operator pos:start="37:19" pos:end="37:19">&lt;</operator> <literal type="number" pos:start="37:21" pos:end="37:21">4</literal></expr>;</condition> <incr pos:start="37:24" pos:end="37:26"><expr pos:start="37:24" pos:end="37:26"><name pos:start="37:24" pos:end="37:24">i</name><operator pos:start="37:25" pos:end="37:26">++</operator></expr></incr>)</control> <block pos:start="37:29" pos:end="107:5">{<block_content pos:start="39:9" pos:end="105:9">

        <expr_stmt pos:start="39:9" pos:end="39:53"><expr pos:start="39:9" pos:end="39:52"><call pos:start="39:9" pos:end="39:52"><name pos:start="39:9" pos:end="39:22">read_partition</name><argument_list pos:start="39:23" pos:end="39:52">(<argument pos:start="39:24" pos:end="39:42"><expr pos:start="39:24" pos:end="39:42"><operator pos:start="39:24" pos:end="39:24">&amp;</operator><name pos:start="39:25" pos:end="39:42"><name pos:start="39:25" pos:end="39:28">data</name><index pos:start="39:29" pos:end="39:42">[<expr pos:start="39:30" pos:end="39:41"><literal type="number" pos:start="39:30" pos:end="39:34">446</literal> <operator pos:start="39:34" pos:end="39:34">+</operator> <literal type="number" pos:start="39:36" pos:end="39:37">16</literal> <operator pos:start="39:39" pos:end="39:39">*</operator> <name pos:start="39:41" pos:end="39:41">i</name></expr>]</index></name></expr></argument>, <argument pos:start="39:45" pos:end="39:51"><expr pos:start="39:45" pos:end="39:51"><operator pos:start="39:45" pos:end="39:45">&amp;</operator><name pos:start="39:46" pos:end="39:51"><name pos:start="39:46" pos:end="39:48">mbr</name><index pos:start="39:49" pos:end="39:51">[<expr pos:start="39:50" pos:end="39:50"><name pos:start="39:50" pos:end="39:50">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="43:9" pos:end="47:9"><if pos:start="43:9" pos:end="47:9">if <condition pos:start="43:12" pos:end="43:53">(<expr pos:start="43:13" pos:end="43:52"><operator pos:start="43:13" pos:end="43:13">!</operator><name pos:start="43:14" pos:end="43:19"><name pos:start="43:14" pos:end="43:16">mbr</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><name pos:start="43:18" pos:end="43:18">i</name></expr>]</index></name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:26">system</name> <operator pos:start="43:28" pos:end="43:29">||</operator> <operator pos:start="43:31" pos:end="43:31">!</operator><name pos:start="43:32" pos:end="43:37"><name pos:start="43:32" pos:end="43:34">mbr</name><index pos:start="43:35" pos:end="43:37">[<expr pos:start="43:36" pos:end="43:36"><name pos:start="43:36" pos:end="43:36">i</name></expr>]</index></name><operator pos:start="43:38" pos:end="43:38">.</operator><name pos:start="43:39" pos:end="43:52">nb_sectors_abs</name></expr>)</condition> <block pos:start="43:55" pos:end="47:9">{<block_content pos:start="45:13" pos:end="45:21">

            <continue pos:start="45:13" pos:end="45:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="51:9" pos:end="105:9"><if pos:start="51:9" pos:end="97:9">if <condition pos:start="51:12" pos:end="51:57">(<expr pos:start="51:13" pos:end="51:56"><name pos:start="51:13" pos:end="51:18"><name pos:start="51:13" pos:end="51:15">mbr</name><index pos:start="51:16" pos:end="51:18">[<expr pos:start="51:17" pos:end="51:17"><name pos:start="51:17" pos:end="51:17">i</name></expr>]</index></name><operator pos:start="51:19" pos:end="51:19">.</operator><name pos:start="51:20" pos:end="51:25">system</name> <operator pos:start="51:27" pos:end="51:28">==</operator> <literal type="number" pos:start="51:30" pos:end="51:32">0xF</literal> <operator pos:start="51:34" pos:end="51:35">||</operator> <name pos:start="51:37" pos:end="51:42"><name pos:start="51:37" pos:end="51:39">mbr</name><index pos:start="51:40" pos:end="51:42">[<expr pos:start="51:41" pos:end="51:41"><name pos:start="51:41" pos:end="51:41">i</name></expr>]</index></name><operator pos:start="51:43" pos:end="51:43">.</operator><name pos:start="51:44" pos:end="51:49">system</name> <operator pos:start="51:51" pos:end="51:52">==</operator> <literal type="number" pos:start="51:54" pos:end="51:56">0x5</literal></expr>)</condition> <block pos:start="51:59" pos:end="97:9">{<block_content pos:start="53:13" pos:end="95:29">

            <decl_stmt pos:start="53:13" pos:end="53:43"><decl pos:start="53:13" pos:end="53:42"><type pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:35"><name pos:start="53:13" pos:end="53:18">struct</name> <name pos:start="53:20" pos:end="53:35">partition_record</name></name></type> <name pos:start="53:37" pos:end="53:42"><name pos:start="53:37" pos:end="53:39">ext</name><index pos:start="53:40" pos:end="53:42">[<expr pos:start="53:41" pos:end="53:41"><literal type="number" pos:start="53:41" pos:end="53:41">4</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="55:13" pos:end="55:31"><decl pos:start="55:13" pos:end="55:30"><type pos:start="55:13" pos:end="55:19"><name pos:start="55:13" pos:end="55:19">uint8_t</name></type> <name pos:start="55:21" pos:end="55:30"><name pos:start="55:21" pos:end="55:25">data1</name><index pos:start="55:26" pos:end="55:30">[<expr pos:start="55:27" pos:end="55:29"><literal type="number" pos:start="55:27" pos:end="55:29">512</literal></expr>]</index></name></decl>;</decl_stmt>

            <decl_stmt pos:start="57:13" pos:end="57:18"><decl pos:start="57:13" pos:end="57:17"><type pos:start="57:13" pos:end="57:15"><name pos:start="57:13" pos:end="57:15">int</name></type> <name pos:start="57:17" pos:end="57:17">j</name></decl>;</decl_stmt>



            <if_stmt pos:start="61:13" pos:end="67:13"><if pos:start="61:13" pos:end="67:13">if <condition pos:start="61:16" pos:end="61:77">(<expr pos:start="61:17" pos:end="61:76"><operator pos:start="61:17" pos:end="61:17">(</operator><name pos:start="61:18" pos:end="61:20">ret</name> <operator pos:start="61:22" pos:end="61:22">=</operator> <call pos:start="61:24" pos:end="61:71"><name pos:start="61:24" pos:end="61:31">blk_read</name><argument_list pos:start="61:32" pos:end="61:71">(<argument pos:start="61:33" pos:end="61:35"><expr pos:start="61:33" pos:end="61:35"><name pos:start="61:33" pos:end="61:35">blk</name></expr></argument>, <argument pos:start="61:38" pos:end="61:60"><expr pos:start="61:38" pos:end="61:60"><name pos:start="61:38" pos:end="61:43"><name pos:start="61:38" pos:end="61:40">mbr</name><index pos:start="61:41" pos:end="61:43">[<expr pos:start="61:42" pos:end="61:42"><name pos:start="61:42" pos:end="61:42">i</name></expr>]</index></name><operator pos:start="61:44" pos:end="61:44">.</operator><name pos:start="61:45" pos:end="61:60">start_sector_abs</name></expr></argument>, <argument pos:start="61:63" pos:end="61:67"><expr pos:start="61:63" pos:end="61:67"><name pos:start="61:63" pos:end="61:67">data1</name></expr></argument>, <argument pos:start="61:70" pos:end="61:70"><expr pos:start="61:70" pos:end="61:70"><literal type="number" pos:start="61:70" pos:end="61:70">1</literal></expr></argument>)</argument_list></call><operator pos:start="61:72" pos:end="61:72">)</operator> <operator pos:start="61:74" pos:end="61:74">&lt;</operator> <literal type="number" pos:start="61:76" pos:end="61:76">0</literal></expr>)</condition> <block pos:start="61:79" pos:end="67:13">{<block_content pos:start="63:17" pos:end="65:35">

                <expr_stmt pos:start="63:17" pos:end="63:72"><expr pos:start="63:17" pos:end="63:71"><call pos:start="63:17" pos:end="63:71"><name pos:start="63:17" pos:end="63:28">error_report</name><argument_list pos:start="63:29" pos:end="63:71">(<argument pos:start="63:30" pos:end="63:54"><expr pos:start="63:30" pos:end="63:54"><literal type="string" pos:start="63:30" pos:end="63:54">"error while reading: %s"</literal></expr></argument>, <argument pos:start="63:57" pos:end="63:70"><expr pos:start="63:57" pos:end="63:70"><call pos:start="63:57" pos:end="63:70"><name pos:start="63:57" pos:end="63:64">strerror</name><argument_list pos:start="63:65" pos:end="63:70">(<argument pos:start="63:66" pos:end="63:69"><expr pos:start="63:66" pos:end="63:69"><operator pos:start="63:66" pos:end="63:66">-</operator><name pos:start="63:67" pos:end="63:69">ret</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="65:17" pos:end="65:35"><expr pos:start="65:17" pos:end="65:34"><call pos:start="65:17" pos:end="65:34"><name pos:start="65:17" pos:end="65:20">exit</name><argument_list pos:start="65:21" pos:end="65:34">(<argument pos:start="65:22" pos:end="65:33"><expr pos:start="65:22" pos:end="65:33"><name pos:start="65:22" pos:end="65:33">EXIT_FAILURE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>



            <for pos:start="71:13" pos:end="93:13">for <control pos:start="71:17" pos:end="71:35">(<init pos:start="71:18" pos:end="71:23"><expr pos:start="71:18" pos:end="71:22"><name pos:start="71:18" pos:end="71:18">j</name> <operator pos:start="71:20" pos:end="71:20">=</operator> <literal type="number" pos:start="71:22" pos:end="71:22">0</literal></expr>;</init> <condition pos:start="71:25" pos:end="71:30"><expr pos:start="71:25" pos:end="71:29"><name pos:start="71:25" pos:end="71:25">j</name> <operator pos:start="71:27" pos:end="71:27">&lt;</operator> <literal type="number" pos:start="71:29" pos:end="71:29">4</literal></expr>;</condition> <incr pos:start="71:32" pos:end="71:34"><expr pos:start="71:32" pos:end="71:34"><name pos:start="71:32" pos:end="71:32">j</name><operator pos:start="71:33" pos:end="71:34">++</operator></expr></incr>)</control> <block pos:start="71:37" pos:end="93:13">{<block_content pos:start="73:17" pos:end="91:17">

                <expr_stmt pos:start="73:17" pos:end="73:62"><expr pos:start="73:17" pos:end="73:61"><call pos:start="73:17" pos:end="73:61"><name pos:start="73:17" pos:end="73:30">read_partition</name><argument_list pos:start="73:31" pos:end="73:61">(<argument pos:start="73:32" pos:end="73:51"><expr pos:start="73:32" pos:end="73:51"><operator pos:start="73:32" pos:end="73:32">&amp;</operator><name pos:start="73:33" pos:end="73:51"><name pos:start="73:33" pos:end="73:37">data1</name><index pos:start="73:38" pos:end="73:51">[<expr pos:start="73:39" pos:end="73:50"><literal type="number" pos:start="73:39" pos:end="73:43">446</literal> <operator pos:start="73:43" pos:end="73:43">+</operator> <literal type="number" pos:start="73:45" pos:end="73:46">16</literal> <operator pos:start="73:48" pos:end="73:48">*</operator> <name pos:start="73:50" pos:end="73:50">j</name></expr>]</index></name></expr></argument>, <argument pos:start="73:54" pos:end="73:60"><expr pos:start="73:54" pos:end="73:60"><operator pos:start="73:54" pos:end="73:54">&amp;</operator><name pos:start="73:55" pos:end="73:60"><name pos:start="73:55" pos:end="73:57">ext</name><index pos:start="73:58" pos:end="73:60">[<expr pos:start="73:59" pos:end="73:59"><name pos:start="73:59" pos:end="73:59">j</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <if_stmt pos:start="75:17" pos:end="79:17"><if pos:start="75:17" pos:end="79:17">if <condition pos:start="75:20" pos:end="75:61">(<expr pos:start="75:21" pos:end="75:60"><operator pos:start="75:21" pos:end="75:21">!</operator><name pos:start="75:22" pos:end="75:27"><name pos:start="75:22" pos:end="75:24">ext</name><index pos:start="75:25" pos:end="75:27">[<expr pos:start="75:26" pos:end="75:26"><name pos:start="75:26" pos:end="75:26">j</name></expr>]</index></name><operator pos:start="75:28" pos:end="75:28">.</operator><name pos:start="75:29" pos:end="75:34">system</name> <operator pos:start="75:36" pos:end="75:37">||</operator> <operator pos:start="75:39" pos:end="75:39">!</operator><name pos:start="75:40" pos:end="75:45"><name pos:start="75:40" pos:end="75:42">ext</name><index pos:start="75:43" pos:end="75:45">[<expr pos:start="75:44" pos:end="75:44"><name pos:start="75:44" pos:end="75:44">j</name></expr>]</index></name><operator pos:start="75:46" pos:end="75:46">.</operator><name pos:start="75:47" pos:end="75:60">nb_sectors_abs</name></expr>)</condition> <block pos:start="75:63" pos:end="79:17">{<block_content pos:start="77:21" pos:end="77:29">

                    <continue pos:start="77:21" pos:end="77:29">continue;</continue>

                </block_content>}</block></if></if_stmt>



                <if_stmt pos:start="83:17" pos:end="91:17"><if pos:start="83:17" pos:end="91:17">if <condition pos:start="83:20" pos:end="83:55">(<expr pos:start="83:21" pos:end="83:54"><operator pos:start="83:21" pos:end="83:21">(</operator><name pos:start="83:22" pos:end="83:32">ext_partnum</name> <operator pos:start="83:34" pos:end="83:34">+</operator> <name pos:start="83:36" pos:end="83:36">j</name> <operator pos:start="83:38" pos:end="83:38">+</operator> <literal type="number" pos:start="83:40" pos:end="83:40">1</literal><operator pos:start="83:41" pos:end="83:41">)</operator> <operator pos:start="83:43" pos:end="83:44">==</operator> <name pos:start="83:46" pos:end="83:54">partition</name></expr>)</condition> <block pos:start="83:57" pos:end="91:17">{<block_content pos:start="85:21" pos:end="89:29">

                    <expr_stmt pos:start="85:21" pos:end="85:69"><expr pos:start="85:21" pos:end="85:68"><operator pos:start="85:21" pos:end="85:21">*</operator><name pos:start="85:22" pos:end="85:27">offset</name> <operator pos:start="85:29" pos:end="85:29">=</operator> <operator pos:start="85:31" pos:end="85:31">(</operator><name pos:start="85:32" pos:end="85:39">uint64_t</name><operator pos:start="85:40" pos:end="85:40">)</operator><name pos:start="85:41" pos:end="85:46"><name pos:start="85:41" pos:end="85:43">ext</name><index pos:start="85:44" pos:end="85:46">[<expr pos:start="85:45" pos:end="85:45"><name pos:start="85:45" pos:end="85:45">j</name></expr>]</index></name><operator pos:start="85:47" pos:end="85:47">.</operator><name pos:start="85:48" pos:end="85:63">start_sector_abs</name> <operator pos:start="85:65" pos:end="85:66">&lt;&lt;</operator> <literal type="number" pos:start="85:68" pos:end="85:68">9</literal></expr>;</expr_stmt>

                    <expr_stmt pos:start="87:21" pos:end="87:65"><expr pos:start="87:21" pos:end="87:64"><operator pos:start="87:21" pos:end="87:21">*</operator><name pos:start="87:22" pos:end="87:25">size</name> <operator pos:start="87:27" pos:end="87:27">=</operator> <operator pos:start="87:29" pos:end="87:29">(</operator><name pos:start="87:30" pos:end="87:37">uint64_t</name><operator pos:start="87:38" pos:end="87:38">)</operator><name pos:start="87:39" pos:end="87:44"><name pos:start="87:39" pos:end="87:41">ext</name><index pos:start="87:42" pos:end="87:44">[<expr pos:start="87:43" pos:end="87:43"><name pos:start="87:43" pos:end="87:43">j</name></expr>]</index></name><operator pos:start="87:45" pos:end="87:45">.</operator><name pos:start="87:46" pos:end="87:59">nb_sectors_abs</name> <operator pos:start="87:61" pos:end="87:62">&lt;&lt;</operator> <literal type="number" pos:start="87:64" pos:end="87:64">9</literal></expr>;</expr_stmt>

                    <return pos:start="89:21" pos:end="89:29">return <expr pos:start="89:28" pos:end="89:28"><literal type="number" pos:start="89:28" pos:end="89:28">0</literal></expr>;</return>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="95:13" pos:end="95:29"><expr pos:start="95:13" pos:end="95:28"><name pos:start="95:13" pos:end="95:23">ext_partnum</name> <operator pos:start="95:25" pos:end="95:26">+=</operator> <literal type="number" pos:start="95:28" pos:end="95:28">4</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="97:11" pos:end="105:9">else if <condition pos:start="97:19" pos:end="97:40">(<expr pos:start="97:20" pos:end="97:39"><operator pos:start="97:20" pos:end="97:20">(</operator><name pos:start="97:21" pos:end="97:21">i</name> <operator pos:start="97:23" pos:end="97:23">+</operator> <literal type="number" pos:start="97:25" pos:end="97:25">1</literal><operator pos:start="97:26" pos:end="97:26">)</operator> <operator pos:start="97:28" pos:end="97:29">==</operator> <name pos:start="97:31" pos:end="97:39">partition</name></expr>)</condition> <block pos:start="97:42" pos:end="105:9">{<block_content pos:start="99:13" pos:end="103:21">

            <expr_stmt pos:start="99:13" pos:end="99:61"><expr pos:start="99:13" pos:end="99:60"><operator pos:start="99:13" pos:end="99:13">*</operator><name pos:start="99:14" pos:end="99:19">offset</name> <operator pos:start="99:21" pos:end="99:21">=</operator> <operator pos:start="99:23" pos:end="99:23">(</operator><name pos:start="99:24" pos:end="99:31">uint64_t</name><operator pos:start="99:32" pos:end="99:32">)</operator><name pos:start="99:33" pos:end="99:38"><name pos:start="99:33" pos:end="99:35">mbr</name><index pos:start="99:36" pos:end="99:38">[<expr pos:start="99:37" pos:end="99:37"><name pos:start="99:37" pos:end="99:37">i</name></expr>]</index></name><operator pos:start="99:39" pos:end="99:39">.</operator><name pos:start="99:40" pos:end="99:55">start_sector_abs</name> <operator pos:start="99:57" pos:end="99:58">&lt;&lt;</operator> <literal type="number" pos:start="99:60" pos:end="99:60">9</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="101:13" pos:end="101:57"><expr pos:start="101:13" pos:end="101:56"><operator pos:start="101:13" pos:end="101:13">*</operator><name pos:start="101:14" pos:end="101:17">size</name> <operator pos:start="101:19" pos:end="101:19">=</operator> <operator pos:start="101:21" pos:end="101:21">(</operator><name pos:start="101:22" pos:end="101:29">uint64_t</name><operator pos:start="101:30" pos:end="101:30">)</operator><name pos:start="101:31" pos:end="101:36"><name pos:start="101:31" pos:end="101:33">mbr</name><index pos:start="101:34" pos:end="101:36">[<expr pos:start="101:35" pos:end="101:35"><name pos:start="101:35" pos:end="101:35">i</name></expr>]</index></name><operator pos:start="101:37" pos:end="101:37">.</operator><name pos:start="101:38" pos:end="101:51">nb_sectors_abs</name> <operator pos:start="101:53" pos:end="101:54">&lt;&lt;</operator> <literal type="number" pos:start="101:56" pos:end="101:56">9</literal></expr>;</expr_stmt>

            <return pos:start="103:13" pos:end="103:21">return <expr pos:start="103:20" pos:end="103:20"><literal type="number" pos:start="103:20" pos:end="103:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></for>



    <return pos:start="111:5" pos:end="111:19">return <expr pos:start="111:12" pos:end="111:18"><operator pos:start="111:12" pos:end="111:12">-</operator><name pos:start="111:13" pos:end="111:18">ENOENT</name></expr>;</return>

</block_content>}</block></function>
</unit>
