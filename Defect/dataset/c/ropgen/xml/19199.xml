<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/19199.c" pos:tabs="8"><function pos:start="1:1" pos:end="137:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:30">protocol_client_msg</name><parameter_list pos:start="1:31" pos:end="1:68">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:39">VncState</name> <modifier pos:start="1:41" pos:end="1:41">*</modifier></type><name pos:start="1:42" pos:end="1:43">vs</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">char</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">data</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:67"><decl pos:start="1:58" pos:end="1:67"><type pos:start="1:58" pos:end="1:67"><name pos:start="1:58" pos:end="1:63">size_t</name></type> <name pos:start="1:65" pos:end="1:67">len</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="137:1">{<block_content pos:start="5:5" pos:end="135:13">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:19"><decl pos:start="7:5" pos:end="7:18"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint16_t</name></type> <name pos:start="7:14" pos:end="7:18">limit</name></decl>;</decl_stmt>



    <switch pos:start="11:5" pos:end="129:5">switch <condition pos:start="11:12" pos:end="11:20">(<expr pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:19"><name pos:start="11:13" pos:end="11:16">data</name><index pos:start="11:17" pos:end="11:19">[<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>]</index></name></expr>)</condition> <block pos:start="11:22" pos:end="129:5">{<block_content pos:start="13:5" pos:end="127:14">

    <case pos:start="13:5" pos:end="13:11">case <expr pos:start="13:10" pos:end="13:10"><literal type="number" pos:start="13:10" pos:end="13:10">0</literal></expr>:</case>

	<if_stmt pos:start="15:9" pos:end="17:22"><if pos:start="15:9" pos:end="17:22">if <condition pos:start="15:12" pos:end="15:21">(<expr pos:start="15:13" pos:end="15:20"><name pos:start="15:13" pos:end="15:15">len</name> <operator pos:start="15:17" pos:end="15:18">==</operator> <literal type="number" pos:start="15:20" pos:end="15:20">1</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="17:22"><block_content pos:start="17:13" pos:end="17:22">

	    <return pos:start="17:13" pos:end="17:22">return <expr pos:start="17:20" pos:end="17:21"><literal type="number" pos:start="17:20" pos:end="17:21">20</literal></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="21:9" pos:end="29:63"><expr pos:start="21:9" pos:end="29:62"><call pos:start="21:9" pos:end="29:62"><name pos:start="21:9" pos:end="21:24">set_pixel_format</name><argument_list pos:start="21:25" pos:end="29:62">(<argument pos:start="21:26" pos:end="21:27"><expr pos:start="21:26" pos:end="21:27"><name pos:start="21:26" pos:end="21:27">vs</name></expr></argument>, <argument pos:start="21:30" pos:end="21:45"><expr pos:start="21:30" pos:end="21:45"><call pos:start="21:30" pos:end="21:45"><name pos:start="21:30" pos:end="21:36">read_u8</name><argument_list pos:start="21:37" pos:end="21:45">(<argument pos:start="21:38" pos:end="21:41"><expr pos:start="21:38" pos:end="21:41"><name pos:start="21:38" pos:end="21:41">data</name></expr></argument>, <argument pos:start="21:44" pos:end="21:44"><expr pos:start="21:44" pos:end="21:44"><literal type="number" pos:start="21:44" pos:end="21:44">4</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:48" pos:end="21:63"><expr pos:start="21:48" pos:end="21:63"><call pos:start="21:48" pos:end="21:63"><name pos:start="21:48" pos:end="21:54">read_u8</name><argument_list pos:start="21:55" pos:end="21:63">(<argument pos:start="21:56" pos:end="21:59"><expr pos:start="21:56" pos:end="21:59"><name pos:start="21:56" pos:end="21:59">data</name></expr></argument>, <argument pos:start="21:62" pos:end="21:62"><expr pos:start="21:62" pos:end="21:62"><literal type="number" pos:start="21:62" pos:end="21:62">5</literal></expr></argument>)</argument_list></call></expr></argument>,

			 <argument pos:start="23:26" pos:end="23:41"><expr pos:start="23:26" pos:end="23:41"><call pos:start="23:26" pos:end="23:41"><name pos:start="23:26" pos:end="23:32">read_u8</name><argument_list pos:start="23:33" pos:end="23:41">(<argument pos:start="23:34" pos:end="23:37"><expr pos:start="23:34" pos:end="23:37"><name pos:start="23:34" pos:end="23:37">data</name></expr></argument>, <argument pos:start="23:40" pos:end="23:40"><expr pos:start="23:40" pos:end="23:40"><literal type="number" pos:start="23:40" pos:end="23:40">6</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="23:44" pos:end="23:59"><expr pos:start="23:44" pos:end="23:59"><call pos:start="23:44" pos:end="23:59"><name pos:start="23:44" pos:end="23:50">read_u8</name><argument_list pos:start="23:51" pos:end="23:59">(<argument pos:start="23:52" pos:end="23:55"><expr pos:start="23:52" pos:end="23:55"><name pos:start="23:52" pos:end="23:55">data</name></expr></argument>, <argument pos:start="23:58" pos:end="23:58"><expr pos:start="23:58" pos:end="23:58"><literal type="number" pos:start="23:58" pos:end="23:58">7</literal></expr></argument>)</argument_list></call></expr></argument>,

			 <argument pos:start="25:26" pos:end="25:42"><expr pos:start="25:26" pos:end="25:42"><call pos:start="25:26" pos:end="25:42"><name pos:start="25:26" pos:end="25:33">read_u16</name><argument_list pos:start="25:34" pos:end="25:42">(<argument pos:start="25:35" pos:end="25:38"><expr pos:start="25:35" pos:end="25:38"><name pos:start="25:35" pos:end="25:38">data</name></expr></argument>, <argument pos:start="25:41" pos:end="25:41"><expr pos:start="25:41" pos:end="25:41"><literal type="number" pos:start="25:41" pos:end="25:41">8</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="25:45" pos:end="25:62"><expr pos:start="25:45" pos:end="25:62"><call pos:start="25:45" pos:end="25:62"><name pos:start="25:45" pos:end="25:52">read_u16</name><argument_list pos:start="25:53" pos:end="25:62">(<argument pos:start="25:54" pos:end="25:57"><expr pos:start="25:54" pos:end="25:57"><name pos:start="25:54" pos:end="25:57">data</name></expr></argument>, <argument pos:start="25:60" pos:end="25:61"><expr pos:start="25:60" pos:end="25:61"><literal type="number" pos:start="25:60" pos:end="25:61">10</literal></expr></argument>)</argument_list></call></expr></argument>,

			 <argument pos:start="27:26" pos:end="27:43"><expr pos:start="27:26" pos:end="27:43"><call pos:start="27:26" pos:end="27:43"><name pos:start="27:26" pos:end="27:33">read_u16</name><argument_list pos:start="27:34" pos:end="27:43">(<argument pos:start="27:35" pos:end="27:38"><expr pos:start="27:35" pos:end="27:38"><name pos:start="27:35" pos:end="27:38">data</name></expr></argument>, <argument pos:start="27:41" pos:end="27:42"><expr pos:start="27:41" pos:end="27:42"><literal type="number" pos:start="27:41" pos:end="27:42">12</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="27:46" pos:end="27:62"><expr pos:start="27:46" pos:end="27:62"><call pos:start="27:46" pos:end="27:62"><name pos:start="27:46" pos:end="27:52">read_u8</name><argument_list pos:start="27:53" pos:end="27:62">(<argument pos:start="27:54" pos:end="27:57"><expr pos:start="27:54" pos:end="27:57"><name pos:start="27:54" pos:end="27:57">data</name></expr></argument>, <argument pos:start="27:60" pos:end="27:61"><expr pos:start="27:60" pos:end="27:61"><literal type="number" pos:start="27:60" pos:end="27:61">14</literal></expr></argument>)</argument_list></call></expr></argument>,

			 <argument pos:start="29:26" pos:end="29:42"><expr pos:start="29:26" pos:end="29:42"><call pos:start="29:26" pos:end="29:42"><name pos:start="29:26" pos:end="29:32">read_u8</name><argument_list pos:start="29:33" pos:end="29:42">(<argument pos:start="29:34" pos:end="29:37"><expr pos:start="29:34" pos:end="29:37"><name pos:start="29:34" pos:end="29:37">data</name></expr></argument>, <argument pos:start="29:40" pos:end="29:41"><expr pos:start="29:40" pos:end="29:41"><literal type="number" pos:start="29:40" pos:end="29:41">15</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:45" pos:end="29:61"><expr pos:start="29:45" pos:end="29:61"><call pos:start="29:45" pos:end="29:61"><name pos:start="29:45" pos:end="29:51">read_u8</name><argument_list pos:start="29:52" pos:end="29:61">(<argument pos:start="29:53" pos:end="29:56"><expr pos:start="29:53" pos:end="29:56"><name pos:start="29:53" pos:end="29:56">data</name></expr></argument>, <argument pos:start="29:59" pos:end="29:60"><expr pos:start="29:59" pos:end="29:60"><literal type="number" pos:start="29:59" pos:end="29:60">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="31:9" pos:end="31:14">break;</break>

    <case pos:start="33:5" pos:end="33:11">case <expr pos:start="33:10" pos:end="33:10"><literal type="number" pos:start="33:10" pos:end="33:10">2</literal></expr>:</case>

	<if_stmt pos:start="35:9" pos:end="37:21"><if pos:start="35:9" pos:end="37:21">if <condition pos:start="35:12" pos:end="35:21">(<expr pos:start="35:13" pos:end="35:20"><name pos:start="35:13" pos:end="35:15">len</name> <operator pos:start="35:17" pos:end="35:18">==</operator> <literal type="number" pos:start="35:20" pos:end="35:20">1</literal></expr>)</condition><block type="pseudo" pos:start="37:13" pos:end="37:21"><block_content pos:start="37:13" pos:end="37:21">

	    <return pos:start="37:13" pos:end="37:21">return <expr pos:start="37:20" pos:end="37:20"><literal type="number" pos:start="37:20" pos:end="37:20">4</literal></expr>;</return></block_content></block></if></if_stmt>



	<if_stmt pos:start="41:9" pos:end="43:47"><if pos:start="41:9" pos:end="43:47">if <condition pos:start="41:12" pos:end="41:21">(<expr pos:start="41:13" pos:end="41:20"><name pos:start="41:13" pos:end="41:15">len</name> <operator pos:start="41:17" pos:end="41:18">==</operator> <literal type="number" pos:start="41:20" pos:end="41:20">4</literal></expr>)</condition><block type="pseudo" pos:start="43:13" pos:end="43:47"><block_content pos:start="43:13" pos:end="43:47">

	    <return pos:start="43:13" pos:end="43:47">return <expr pos:start="43:20" pos:end="43:46"><literal type="number" pos:start="43:20" pos:end="43:22">4</literal> <operator pos:start="43:22" pos:end="43:22">+</operator> <operator pos:start="43:24" pos:end="43:24">(</operator><call pos:start="43:25" pos:end="43:41"><name pos:start="43:25" pos:end="43:32">read_u16</name><argument_list pos:start="43:33" pos:end="43:41">(<argument pos:start="43:34" pos:end="43:37"><expr pos:start="43:34" pos:end="43:37"><name pos:start="43:34" pos:end="43:37">data</name></expr></argument>, <argument pos:start="43:40" pos:end="43:40"><expr pos:start="43:40" pos:end="43:40"><literal type="number" pos:start="43:40" pos:end="43:40">2</literal></expr></argument>)</argument_list></call> <operator pos:start="43:43" pos:end="43:43">*</operator> <literal type="number" pos:start="43:45" pos:end="43:45">4</literal><operator pos:start="43:46" pos:end="43:46">)</operator></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="47:9" pos:end="47:34"><expr pos:start="47:9" pos:end="47:33"><name pos:start="47:9" pos:end="47:13">limit</name> <operator pos:start="47:15" pos:end="47:15">=</operator> <call pos:start="47:17" pos:end="47:33"><name pos:start="47:17" pos:end="47:24">read_u16</name><argument_list pos:start="47:25" pos:end="47:33">(<argument pos:start="47:26" pos:end="47:29"><expr pos:start="47:26" pos:end="47:29"><name pos:start="47:26" pos:end="47:29">data</name></expr></argument>, <argument pos:start="47:32" pos:end="47:32"><expr pos:start="47:32" pos:end="47:32"><literal type="number" pos:start="47:32" pos:end="47:32">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<for pos:start="49:9" pos:end="55:9">for <control pos:start="49:13" pos:end="49:35">(<init pos:start="49:14" pos:end="49:19"><expr pos:start="49:14" pos:end="49:18"><name pos:start="49:14" pos:end="49:14">i</name> <operator pos:start="49:16" pos:end="49:16">=</operator> <literal type="number" pos:start="49:18" pos:end="49:18">0</literal></expr>;</init> <condition pos:start="49:21" pos:end="49:30"><expr pos:start="49:21" pos:end="49:29"><name pos:start="49:21" pos:end="49:21">i</name> <operator pos:start="49:23" pos:end="49:23">&lt;</operator> <name pos:start="49:25" pos:end="49:29">limit</name></expr>;</condition> <incr pos:start="49:32" pos:end="49:34"><expr pos:start="49:32" pos:end="49:34"><name pos:start="49:32" pos:end="49:32">i</name><operator pos:start="49:33" pos:end="49:34">++</operator></expr></incr>)</control> <block pos:start="49:37" pos:end="55:9">{<block_content pos:start="51:13" pos:end="53:58">

	    <decl_stmt pos:start="51:13" pos:end="51:54"><decl pos:start="51:13" pos:end="51:53"><type pos:start="51:13" pos:end="51:19"><name pos:start="51:13" pos:end="51:19">int32_t</name></type> <name pos:start="51:21" pos:end="51:23">val</name> <init pos:start="51:25" pos:end="51:53">= <expr pos:start="51:27" pos:end="51:53"><call pos:start="51:27" pos:end="51:53"><name pos:start="51:27" pos:end="51:34">read_s32</name><argument_list pos:start="51:35" pos:end="51:53">(<argument pos:start="51:36" pos:end="51:39"><expr pos:start="51:36" pos:end="51:39"><name pos:start="51:36" pos:end="51:39">data</name></expr></argument>, <argument pos:start="51:42" pos:end="51:52"><expr pos:start="51:42" pos:end="51:52"><literal type="number" pos:start="51:42" pos:end="51:44">4</literal> <operator pos:start="51:44" pos:end="51:44">+</operator> <operator pos:start="51:46" pos:end="51:46">(</operator><name pos:start="51:47" pos:end="51:47">i</name> <operator pos:start="51:49" pos:end="51:49">*</operator> <literal type="number" pos:start="51:51" pos:end="51:51">4</literal><operator pos:start="51:52" pos:end="51:52">)</operator></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

	    <expr_stmt pos:start="53:13" pos:end="53:58"><expr pos:start="53:13" pos:end="53:57"><call pos:start="53:13" pos:end="53:57"><name pos:start="53:13" pos:end="53:18">memcpy</name><argument_list pos:start="53:19" pos:end="53:57">(<argument pos:start="53:20" pos:end="53:37"><expr pos:start="53:20" pos:end="53:37"><name pos:start="53:20" pos:end="53:23">data</name> <operator pos:start="53:25" pos:end="53:25">+</operator> <literal type="number" pos:start="53:27" pos:end="53:29">4</literal> <operator pos:start="53:29" pos:end="53:29">+</operator> <operator pos:start="53:31" pos:end="53:31">(</operator><name pos:start="53:32" pos:end="53:32">i</name> <operator pos:start="53:34" pos:end="53:34">*</operator> <literal type="number" pos:start="53:36" pos:end="53:36">4</literal><operator pos:start="53:37" pos:end="53:37">)</operator></expr></argument>, <argument pos:start="53:40" pos:end="53:43"><expr pos:start="53:40" pos:end="53:43"><operator pos:start="53:40" pos:end="53:40">&amp;</operator><name pos:start="53:41" pos:end="53:43">val</name></expr></argument>, <argument pos:start="53:46" pos:end="53:56"><expr pos:start="53:46" pos:end="53:56"><sizeof pos:start="53:46" pos:end="53:56">sizeof<argument_list pos:start="53:52" pos:end="53:56">(<argument pos:start="53:53" pos:end="53:55"><expr pos:start="53:53" pos:end="53:55"><name pos:start="53:53" pos:end="53:55">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	</block_content>}</block></for>



	<expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><call pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:21">set_encodings</name><argument_list pos:start="59:22" pos:end="59:55">(<argument pos:start="59:23" pos:end="59:24"><expr pos:start="59:23" pos:end="59:24"><name pos:start="59:23" pos:end="59:24">vs</name></expr></argument>, <argument pos:start="59:27" pos:end="59:47"><expr pos:start="59:27" pos:end="59:47"><operator pos:start="59:27" pos:end="59:27">(</operator><name pos:start="59:28" pos:end="59:34">int32_t</name> <operator pos:start="59:36" pos:end="59:36">*</operator><operator pos:start="59:37" pos:end="59:37">)</operator><operator pos:start="59:38" pos:end="59:38">(</operator><name pos:start="59:39" pos:end="59:42">data</name> <operator pos:start="59:44" pos:end="59:44">+</operator> <literal type="number" pos:start="59:46" pos:end="59:46">4</literal><operator pos:start="59:47" pos:end="59:47">)</operator></expr></argument>, <argument pos:start="59:50" pos:end="59:54"><expr pos:start="59:50" pos:end="59:54"><name pos:start="59:50" pos:end="59:54">limit</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="61:9" pos:end="61:14">break;</break>

    <case pos:start="63:5" pos:end="63:11">case <expr pos:start="63:10" pos:end="63:10"><literal type="number" pos:start="63:10" pos:end="63:10">3</literal></expr>:</case>

	<if_stmt pos:start="65:9" pos:end="67:22"><if pos:start="65:9" pos:end="67:22">if <condition pos:start="65:12" pos:end="65:21">(<expr pos:start="65:13" pos:end="65:20"><name pos:start="65:13" pos:end="65:15">len</name> <operator pos:start="65:17" pos:end="65:18">==</operator> <literal type="number" pos:start="65:20" pos:end="65:20">1</literal></expr>)</condition><block type="pseudo" pos:start="67:13" pos:end="67:22"><block_content pos:start="67:13" pos:end="67:22">

	    <return pos:start="67:13" pos:end="67:22">return <expr pos:start="67:20" pos:end="67:21"><literal type="number" pos:start="67:20" pos:end="67:21">10</literal></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="71:9" pos:end="75:73"><expr pos:start="71:9" pos:end="75:72"><call pos:start="71:9" pos:end="75:72"><name pos:start="71:9" pos:end="71:34">framebuffer_update_request</name><argument_list pos:start="71:35" pos:end="75:72">(<argument pos:start="71:36" pos:end="71:37"><expr pos:start="71:36" pos:end="71:37"><name pos:start="71:36" pos:end="71:37">vs</name></expr></argument>,

				   <argument pos:start="73:36" pos:end="73:51"><expr pos:start="73:36" pos:end="73:51"><call pos:start="73:36" pos:end="73:51"><name pos:start="73:36" pos:end="73:42">read_u8</name><argument_list pos:start="73:43" pos:end="73:51">(<argument pos:start="73:44" pos:end="73:47"><expr pos:start="73:44" pos:end="73:47"><name pos:start="73:44" pos:end="73:47">data</name></expr></argument>, <argument pos:start="73:50" pos:end="73:50"><expr pos:start="73:50" pos:end="73:50"><literal type="number" pos:start="73:50" pos:end="73:50">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:54" pos:end="73:70"><expr pos:start="73:54" pos:end="73:70"><call pos:start="73:54" pos:end="73:70"><name pos:start="73:54" pos:end="73:61">read_u16</name><argument_list pos:start="73:62" pos:end="73:70">(<argument pos:start="73:63" pos:end="73:66"><expr pos:start="73:63" pos:end="73:66"><name pos:start="73:63" pos:end="73:66">data</name></expr></argument>, <argument pos:start="73:69" pos:end="73:69"><expr pos:start="73:69" pos:end="73:69"><literal type="number" pos:start="73:69" pos:end="73:69">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="73:73" pos:end="73:89"><expr pos:start="73:73" pos:end="73:89"><call pos:start="73:73" pos:end="73:89"><name pos:start="73:73" pos:end="73:80">read_u16</name><argument_list pos:start="73:81" pos:end="73:89">(<argument pos:start="73:82" pos:end="73:85"><expr pos:start="73:82" pos:end="73:85"><name pos:start="73:82" pos:end="73:85">data</name></expr></argument>, <argument pos:start="73:88" pos:end="73:88"><expr pos:start="73:88" pos:end="73:88"><literal type="number" pos:start="73:88" pos:end="73:88">4</literal></expr></argument>)</argument_list></call></expr></argument>,

				   <argument pos:start="75:36" pos:end="75:52"><expr pos:start="75:36" pos:end="75:52"><call pos:start="75:36" pos:end="75:52"><name pos:start="75:36" pos:end="75:43">read_u16</name><argument_list pos:start="75:44" pos:end="75:52">(<argument pos:start="75:45" pos:end="75:48"><expr pos:start="75:45" pos:end="75:48"><name pos:start="75:45" pos:end="75:48">data</name></expr></argument>, <argument pos:start="75:51" pos:end="75:51"><expr pos:start="75:51" pos:end="75:51"><literal type="number" pos:start="75:51" pos:end="75:51">6</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="75:55" pos:end="75:71"><expr pos:start="75:55" pos:end="75:71"><call pos:start="75:55" pos:end="75:71"><name pos:start="75:55" pos:end="75:62">read_u16</name><argument_list pos:start="75:63" pos:end="75:71">(<argument pos:start="75:64" pos:end="75:67"><expr pos:start="75:64" pos:end="75:67"><name pos:start="75:64" pos:end="75:67">data</name></expr></argument>, <argument pos:start="75:70" pos:end="75:70"><expr pos:start="75:70" pos:end="75:70"><literal type="number" pos:start="75:70" pos:end="75:70">8</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="77:9" pos:end="77:14">break;</break>

    <case pos:start="79:5" pos:end="79:11">case <expr pos:start="79:10" pos:end="79:10"><literal type="number" pos:start="79:10" pos:end="79:10">4</literal></expr>:</case>

	<if_stmt pos:start="81:9" pos:end="83:21"><if pos:start="81:9" pos:end="83:21">if <condition pos:start="81:12" pos:end="81:21">(<expr pos:start="81:13" pos:end="81:20"><name pos:start="81:13" pos:end="81:15">len</name> <operator pos:start="81:17" pos:end="81:18">==</operator> <literal type="number" pos:start="81:20" pos:end="81:20">1</literal></expr>)</condition><block type="pseudo" pos:start="83:13" pos:end="83:21"><block_content pos:start="83:13" pos:end="83:21">

	    <return pos:start="83:13" pos:end="83:21">return <expr pos:start="83:20" pos:end="83:20"><literal type="number" pos:start="83:20" pos:end="83:20">8</literal></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="87:9" pos:end="87:59"><expr pos:start="87:9" pos:end="87:58"><call pos:start="87:9" pos:end="87:58"><name pos:start="87:9" pos:end="87:17">key_event</name><argument_list pos:start="87:18" pos:end="87:58">(<argument pos:start="87:19" pos:end="87:20"><expr pos:start="87:19" pos:end="87:20"><name pos:start="87:19" pos:end="87:20">vs</name></expr></argument>, <argument pos:start="87:23" pos:end="87:38"><expr pos:start="87:23" pos:end="87:38"><call pos:start="87:23" pos:end="87:38"><name pos:start="87:23" pos:end="87:29">read_u8</name><argument_list pos:start="87:30" pos:end="87:38">(<argument pos:start="87:31" pos:end="87:34"><expr pos:start="87:31" pos:end="87:34"><name pos:start="87:31" pos:end="87:34">data</name></expr></argument>, <argument pos:start="87:37" pos:end="87:37"><expr pos:start="87:37" pos:end="87:37"><literal type="number" pos:start="87:37" pos:end="87:37">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="87:41" pos:end="87:57"><expr pos:start="87:41" pos:end="87:57"><call pos:start="87:41" pos:end="87:57"><name pos:start="87:41" pos:end="87:48">read_u32</name><argument_list pos:start="87:49" pos:end="87:57">(<argument pos:start="87:50" pos:end="87:53"><expr pos:start="87:50" pos:end="87:53"><name pos:start="87:50" pos:end="87:53">data</name></expr></argument>, <argument pos:start="87:56" pos:end="87:56"><expr pos:start="87:56" pos:end="87:56"><literal type="number" pos:start="87:56" pos:end="87:56">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:11">case <expr pos:start="91:10" pos:end="91:10"><literal type="number" pos:start="91:10" pos:end="91:10">5</literal></expr>:</case>

	<if_stmt pos:start="93:9" pos:end="95:21"><if pos:start="93:9" pos:end="95:21">if <condition pos:start="93:12" pos:end="93:21">(<expr pos:start="93:13" pos:end="93:20"><name pos:start="93:13" pos:end="93:15">len</name> <operator pos:start="93:17" pos:end="93:18">==</operator> <literal type="number" pos:start="93:20" pos:end="93:20">1</literal></expr>)</condition><block type="pseudo" pos:start="95:13" pos:end="95:21"><block_content pos:start="95:13" pos:end="95:21">

	    <return pos:start="95:13" pos:end="95:21">return <expr pos:start="95:20" pos:end="95:20"><literal type="number" pos:start="95:20" pos:end="95:20">6</literal></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="99:9" pos:end="99:82"><expr pos:start="99:9" pos:end="99:81"><call pos:start="99:9" pos:end="99:81"><name pos:start="99:9" pos:end="99:21">pointer_event</name><argument_list pos:start="99:22" pos:end="99:81">(<argument pos:start="99:23" pos:end="99:24"><expr pos:start="99:23" pos:end="99:24"><name pos:start="99:23" pos:end="99:24">vs</name></expr></argument>, <argument pos:start="99:27" pos:end="99:42"><expr pos:start="99:27" pos:end="99:42"><call pos:start="99:27" pos:end="99:42"><name pos:start="99:27" pos:end="99:33">read_u8</name><argument_list pos:start="99:34" pos:end="99:42">(<argument pos:start="99:35" pos:end="99:38"><expr pos:start="99:35" pos:end="99:38"><name pos:start="99:35" pos:end="99:38">data</name></expr></argument>, <argument pos:start="99:41" pos:end="99:41"><expr pos:start="99:41" pos:end="99:41"><literal type="number" pos:start="99:41" pos:end="99:41">1</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:45" pos:end="99:61"><expr pos:start="99:45" pos:end="99:61"><call pos:start="99:45" pos:end="99:61"><name pos:start="99:45" pos:end="99:52">read_u16</name><argument_list pos:start="99:53" pos:end="99:61">(<argument pos:start="99:54" pos:end="99:57"><expr pos:start="99:54" pos:end="99:57"><name pos:start="99:54" pos:end="99:57">data</name></expr></argument>, <argument pos:start="99:60" pos:end="99:60"><expr pos:start="99:60" pos:end="99:60"><literal type="number" pos:start="99:60" pos:end="99:60">2</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="99:64" pos:end="99:80"><expr pos:start="99:64" pos:end="99:80"><call pos:start="99:64" pos:end="99:80"><name pos:start="99:64" pos:end="99:71">read_u16</name><argument_list pos:start="99:72" pos:end="99:80">(<argument pos:start="99:73" pos:end="99:76"><expr pos:start="99:73" pos:end="99:76"><name pos:start="99:73" pos:end="99:76">data</name></expr></argument>, <argument pos:start="99:79" pos:end="99:79"><expr pos:start="99:79" pos:end="99:79"><literal type="number" pos:start="99:79" pos:end="99:79">4</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="101:9" pos:end="101:14">break;</break>

    <case pos:start="103:5" pos:end="103:11">case <expr pos:start="103:10" pos:end="103:10"><literal type="number" pos:start="103:10" pos:end="103:10">6</literal></expr>:</case>

	<if_stmt pos:start="105:9" pos:end="107:21"><if pos:start="105:9" pos:end="107:21">if <condition pos:start="105:12" pos:end="105:21">(<expr pos:start="105:13" pos:end="105:20"><name pos:start="105:13" pos:end="105:15">len</name> <operator pos:start="105:17" pos:end="105:18">==</operator> <literal type="number" pos:start="105:20" pos:end="105:20">1</literal></expr>)</condition><block type="pseudo" pos:start="107:13" pos:end="107:21"><block_content pos:start="107:13" pos:end="107:21">

	    <return pos:start="107:13" pos:end="107:21">return <expr pos:start="107:20" pos:end="107:20"><literal type="number" pos:start="107:20" pos:end="107:20">8</literal></expr>;</return></block_content></block></if></if_stmt>



	<if_stmt pos:start="111:9" pos:end="113:41"><if pos:start="111:9" pos:end="113:41">if <condition pos:start="111:12" pos:end="111:21">(<expr pos:start="111:13" pos:end="111:20"><name pos:start="111:13" pos:end="111:15">len</name> <operator pos:start="111:17" pos:end="111:18">==</operator> <literal type="number" pos:start="111:20" pos:end="111:20">8</literal></expr>)</condition><block type="pseudo" pos:start="113:13" pos:end="113:41"><block_content pos:start="113:13" pos:end="113:41">

	    <return pos:start="113:13" pos:end="113:41">return <expr pos:start="113:20" pos:end="113:40"><literal type="number" pos:start="113:20" pos:end="113:22">8</literal> <operator pos:start="113:22" pos:end="113:22">+</operator> <call pos:start="113:24" pos:end="113:40"><name pos:start="113:24" pos:end="113:31">read_u32</name><argument_list pos:start="113:32" pos:end="113:40">(<argument pos:start="113:33" pos:end="113:36"><expr pos:start="113:33" pos:end="113:36"><name pos:start="113:33" pos:end="113:36">data</name></expr></argument>, <argument pos:start="113:39" pos:end="113:39"><expr pos:start="113:39" pos:end="113:39"><literal type="number" pos:start="113:39" pos:end="113:39">4</literal></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



	<expr_stmt pos:start="117:9" pos:end="117:57"><expr pos:start="117:9" pos:end="117:56"><call pos:start="117:9" pos:end="117:56"><name pos:start="117:9" pos:end="117:23">client_cut_text</name><argument_list pos:start="117:24" pos:end="117:56">(<argument pos:start="117:25" pos:end="117:26"><expr pos:start="117:25" pos:end="117:26"><name pos:start="117:25" pos:end="117:26">vs</name></expr></argument>, <argument pos:start="117:29" pos:end="117:45"><expr pos:start="117:29" pos:end="117:45"><call pos:start="117:29" pos:end="117:45"><name pos:start="117:29" pos:end="117:36">read_u32</name><argument_list pos:start="117:37" pos:end="117:45">(<argument pos:start="117:38" pos:end="117:41"><expr pos:start="117:38" pos:end="117:41"><name pos:start="117:38" pos:end="117:41">data</name></expr></argument>, <argument pos:start="117:44" pos:end="117:44"><expr pos:start="117:44" pos:end="117:44"><literal type="number" pos:start="117:44" pos:end="117:44">4</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="117:48" pos:end="117:55"><expr pos:start="117:48" pos:end="117:55"><name pos:start="117:48" pos:end="117:51">data</name> <operator pos:start="117:53" pos:end="117:53">+</operator> <literal type="number" pos:start="117:55" pos:end="117:55">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="119:9" pos:end="119:14">break;</break>

    <default pos:start="121:5" pos:end="121:12">default:</default>

	<expr_stmt pos:start="123:9" pos:end="123:37"><expr pos:start="123:9" pos:end="123:36"><call pos:start="123:9" pos:end="123:36"><name pos:start="123:9" pos:end="123:14">printf</name><argument_list pos:start="123:15" pos:end="123:36">(<argument pos:start="123:16" pos:end="123:26"><expr pos:start="123:16" pos:end="123:26"><literal type="string" pos:start="123:16" pos:end="123:26">"Msg: %d\n"</literal></expr></argument>, <argument pos:start="123:29" pos:end="123:35"><expr pos:start="123:29" pos:end="123:35"><name pos:start="123:29" pos:end="123:35"><name pos:start="123:29" pos:end="123:32">data</name><index pos:start="123:33" pos:end="123:35">[<expr pos:start="123:34" pos:end="123:34"><literal type="number" pos:start="123:34" pos:end="123:34">0</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<expr_stmt pos:start="125:9" pos:end="125:29"><expr pos:start="125:9" pos:end="125:28"><call pos:start="125:9" pos:end="125:28"><name pos:start="125:9" pos:end="125:24">vnc_client_error</name><argument_list pos:start="125:25" pos:end="125:28">(<argument pos:start="125:26" pos:end="125:27"><expr pos:start="125:26" pos:end="125:27"><name pos:start="125:26" pos:end="125:27">vs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

	<break pos:start="127:9" pos:end="127:14">break;</break>

    </block_content>}</block></switch>

	

    <expr_stmt pos:start="133:5" pos:end="133:46"><expr pos:start="133:5" pos:end="133:45"><call pos:start="133:5" pos:end="133:45"><name pos:start="133:5" pos:end="133:17">vnc_read_when</name><argument_list pos:start="133:18" pos:end="133:45">(<argument pos:start="133:19" pos:end="133:20"><expr pos:start="133:19" pos:end="133:20"><name pos:start="133:19" pos:end="133:20">vs</name></expr></argument>, <argument pos:start="133:23" pos:end="133:41"><expr pos:start="133:23" pos:end="133:41"><name pos:start="133:23" pos:end="133:41">protocol_client_msg</name></expr></argument>, <argument pos:start="133:44" pos:end="133:44"><expr pos:start="133:44" pos:end="133:44"><literal type="number" pos:start="133:44" pos:end="133:44">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="135:5" pos:end="135:13">return <expr pos:start="135:12" pos:end="135:12"><literal type="number" pos:start="135:12" pos:end="135:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
