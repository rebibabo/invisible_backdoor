<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15345.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:18">dec_sr</name><parameter_list pos:start="1:19" pos:end="1:36">(<parameter pos:start="1:20" pos:end="1:35"><decl pos:start="1:20" pos:end="1:35"><type pos:start="1:20" pos:end="1:33"><name pos:start="1:20" pos:end="1:31">DisasContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:35">dc</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:5">

    <if_stmt pos:start="5:5" pos:end="13:5"><if pos:start="5:5" pos:end="9:5">if <condition pos:start="5:8" pos:end="5:32">(<expr pos:start="5:9" pos:end="5:31"><name pos:start="5:9" pos:end="5:18"><name pos:start="5:9" pos:end="5:10">dc</name><operator pos:start="5:11" pos:end="5:12">-&gt;</operator><name pos:start="5:13" pos:end="5:18">format</name></name> <operator pos:start="5:20" pos:end="5:21">==</operator> <name pos:start="5:23" pos:end="5:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="5:34" pos:end="9:5">{<block_content pos:start="7:9" pos:end="7:64">

        <expr_stmt pos:start="7:9" pos:end="7:64"><expr pos:start="7:9" pos:end="7:63"><call pos:start="7:9" pos:end="7:63"><name pos:start="7:9" pos:end="7:15">LOG_DIS</name><argument_list pos:start="7:16" pos:end="7:63">(<argument pos:start="7:17" pos:end="7:36"><expr pos:start="7:17" pos:end="7:36"><literal type="string" pos:start="7:17" pos:end="7:36">"sri r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="7:39" pos:end="7:44"><expr pos:start="7:39" pos:end="7:44"><name pos:start="7:39" pos:end="7:44"><name pos:start="7:39" pos:end="7:40">dc</name><operator pos:start="7:41" pos:end="7:42">-&gt;</operator><name pos:start="7:43" pos:end="7:44">r1</name></name></expr></argument>, <argument pos:start="7:47" pos:end="7:52"><expr pos:start="7:47" pos:end="7:52"><name pos:start="7:47" pos:end="7:52"><name pos:start="7:47" pos:end="7:48">dc</name><operator pos:start="7:49" pos:end="7:50">-&gt;</operator><name pos:start="7:51" pos:end="7:52">r0</name></name></expr></argument>, <argument pos:start="7:55" pos:end="7:62"><expr pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:62"><name pos:start="7:55" pos:end="7:56">dc</name><operator pos:start="7:57" pos:end="7:58">-&gt;</operator><name pos:start="7:59" pos:end="7:62">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="9:7" pos:end="13:5">else <block pos:start="9:12" pos:end="13:5">{<block_content pos:start="11:9" pos:end="11:62">

        <expr_stmt pos:start="11:9" pos:end="11:62"><expr pos:start="11:9" pos:end="11:61"><call pos:start="11:9" pos:end="11:61"><name pos:start="11:9" pos:end="11:15">LOG_DIS</name><argument_list pos:start="11:16" pos:end="11:61">(<argument pos:start="11:17" pos:end="11:36"><expr pos:start="11:17" pos:end="11:36"><literal type="string" pos:start="11:17" pos:end="11:36">"sr r%d, r%d, r%d\n"</literal></expr></argument>, <argument pos:start="11:39" pos:end="11:44"><expr pos:start="11:39" pos:end="11:44"><name pos:start="11:39" pos:end="11:44"><name pos:start="11:39" pos:end="11:40">dc</name><operator pos:start="11:41" pos:end="11:42">-&gt;</operator><name pos:start="11:43" pos:end="11:44">r2</name></name></expr></argument>, <argument pos:start="11:47" pos:end="11:52"><expr pos:start="11:47" pos:end="11:52"><name pos:start="11:47" pos:end="11:52"><name pos:start="11:47" pos:end="11:48">dc</name><operator pos:start="11:49" pos:end="11:50">-&gt;</operator><name pos:start="11:51" pos:end="11:52">r0</name></name></expr></argument>, <argument pos:start="11:55" pos:end="11:60"><expr pos:start="11:55" pos:end="11:60"><name pos:start="11:55" pos:end="11:60"><name pos:start="11:55" pos:end="11:56">dc</name><operator pos:start="11:57" pos:end="11:58">-&gt;</operator><name pos:start="11:59" pos:end="11:60">r1</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="17:5" pos:end="19:17">/* The real CPU (w/o hardware shifter) only supports right shift by exactly

     * one bit */</comment>

    <if_stmt pos:start="21:5" pos:end="71:5"><if pos:start="21:5" pos:end="37:5">if <condition pos:start="21:8" pos:end="21:32">(<expr pos:start="21:9" pos:end="21:31"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:10">dc</name><operator pos:start="21:11" pos:end="21:12">-&gt;</operator><name pos:start="21:13" pos:end="21:18">format</name></name> <operator pos:start="21:20" pos:end="21:21">==</operator> <name pos:start="21:23" pos:end="21:31">OP_FMT_RI</name></expr>)</condition> <block pos:start="21:34" pos:end="37:5">{<block_content pos:start="23:9" pos:end="35:64">

        <if_stmt pos:start="23:9" pos:end="33:9"><if pos:start="23:9" pos:end="33:9">if <condition pos:start="23:12" pos:end="23:68">(<expr pos:start="23:13" pos:end="23:67"><operator pos:start="23:13" pos:end="23:13">!</operator><operator pos:start="23:14" pos:end="23:14">(</operator><name pos:start="23:15" pos:end="23:26"><name pos:start="23:15" pos:end="23:16">dc</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:26">features</name></name> <operator pos:start="23:28" pos:end="23:28">&amp;</operator> <name pos:start="23:30" pos:end="23:47">LM32_FEATURE_SHIFT</name><operator pos:start="23:48" pos:end="23:48">)</operator> <operator pos:start="23:50" pos:end="23:51">&amp;&amp;</operator> <operator pos:start="23:53" pos:end="23:53">(</operator><name pos:start="23:54" pos:end="23:61"><name pos:start="23:54" pos:end="23:55">dc</name><operator pos:start="23:56" pos:end="23:57">-&gt;</operator><name pos:start="23:58" pos:end="23:61">imm5</name></name> <operator pos:start="23:63" pos:end="23:64">!=</operator> <literal type="number" pos:start="23:66" pos:end="23:66">1</literal><operator pos:start="23:67" pos:end="23:67">)</operator></expr>)</condition> <block pos:start="23:70" pos:end="33:9">{<block_content pos:start="25:13" pos:end="31:19">

            <expr_stmt pos:start="25:13" pos:end="27:59"><expr pos:start="25:13" pos:end="27:58"><call pos:start="25:13" pos:end="27:58"><name pos:start="25:13" pos:end="25:25">qemu_log_mask</name><argument_list pos:start="25:26" pos:end="27:58">(<argument pos:start="25:27" pos:end="25:41"><expr pos:start="25:27" pos:end="25:41"><name pos:start="25:27" pos:end="25:41">LOG_GUEST_ERROR</name></expr></argument>,

                    <argument pos:start="27:21" pos:end="27:57"><expr pos:start="27:21" pos:end="27:57"><literal type="string" pos:start="27:21" pos:end="27:57">"hardware shifter is not available\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:35"><expr pos:start="29:13" pos:end="29:34"><call pos:start="29:13" pos:end="29:34"><name pos:start="29:13" pos:end="29:30">t_gen_illegal_insn</name><argument_list pos:start="29:31" pos:end="29:34">(<argument pos:start="29:32" pos:end="29:33"><expr pos:start="29:32" pos:end="29:33"><name pos:start="29:32" pos:end="29:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="31:13" pos:end="31:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="35:9" pos:end="35:64"><expr pos:start="35:9" pos:end="35:63"><call pos:start="35:9" pos:end="35:63"><name pos:start="35:9" pos:end="35:23">tcg_gen_sari_tl</name><argument_list pos:start="35:24" pos:end="35:63">(<argument pos:start="35:25" pos:end="35:37"><expr pos:start="35:25" pos:end="35:37"><name pos:start="35:25" pos:end="35:37"><name pos:start="35:25" pos:end="35:29">cpu_R</name><index pos:start="35:30" pos:end="35:37">[<expr pos:start="35:31" pos:end="35:36"><name pos:start="35:31" pos:end="35:36"><name pos:start="35:31" pos:end="35:32">dc</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:36">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:40" pos:end="35:52"><expr pos:start="35:40" pos:end="35:52"><name pos:start="35:40" pos:end="35:52"><name pos:start="35:40" pos:end="35:44">cpu_R</name><index pos:start="35:45" pos:end="35:52">[<expr pos:start="35:46" pos:end="35:51"><name pos:start="35:46" pos:end="35:51"><name pos:start="35:46" pos:end="35:47">dc</name><operator pos:start="35:48" pos:end="35:49">-&gt;</operator><name pos:start="35:50" pos:end="35:51">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="35:55" pos:end="35:62"><expr pos:start="35:55" pos:end="35:62"><name pos:start="35:55" pos:end="35:62"><name pos:start="35:55" pos:end="35:56">dc</name><operator pos:start="35:57" pos:end="35:58">-&gt;</operator><name pos:start="35:59" pos:end="35:62">imm5</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="37:7" pos:end="71:5">else <block pos:start="37:12" pos:end="71:5">{<block_content pos:start="39:9" pos:end="69:26">

        <decl_stmt pos:start="39:9" pos:end="39:33"><decl pos:start="39:9" pos:end="39:32"><type pos:start="39:9" pos:end="39:11"><name pos:start="39:9" pos:end="39:11">int</name></type> <name pos:start="39:13" pos:end="39:14">l1</name> <init pos:start="39:16" pos:end="39:32">= <expr pos:start="39:18" pos:end="39:32"><call pos:start="39:18" pos:end="39:32"><name pos:start="39:18" pos:end="39:30">gen_new_label</name><argument_list pos:start="39:31" pos:end="39:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="41:9" pos:end="41:33"><decl pos:start="41:9" pos:end="41:32"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:14">l2</name> <init pos:start="41:16" pos:end="41:32">= <expr pos:start="41:18" pos:end="41:32"><call pos:start="41:18" pos:end="41:32"><name pos:start="41:18" pos:end="41:30">gen_new_label</name><argument_list pos:start="41:31" pos:end="41:32">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="43:9" pos:end="43:39"><decl pos:start="43:9" pos:end="43:38"><type pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:12">TCGv</name></type> <name pos:start="43:14" pos:end="43:15">t0</name> <init pos:start="43:17" pos:end="43:38">= <expr pos:start="43:19" pos:end="43:38"><call pos:start="43:19" pos:end="43:38"><name pos:start="43:19" pos:end="43:36">tcg_temp_local_new</name><argument_list pos:start="43:37" pos:end="43:38">()</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:49"><expr pos:start="45:9" pos:end="45:48"><call pos:start="45:9" pos:end="45:48"><name pos:start="45:9" pos:end="45:23">tcg_gen_andi_tl</name><argument_list pos:start="45:24" pos:end="45:48">(<argument pos:start="45:25" pos:end="45:26"><expr pos:start="45:25" pos:end="45:26"><name pos:start="45:25" pos:end="45:26">t0</name></expr></argument>, <argument pos:start="45:29" pos:end="45:41"><expr pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:41"><name pos:start="45:29" pos:end="45:33">cpu_R</name><index pos:start="45:34" pos:end="45:41">[<expr pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:40"><name pos:start="45:35" pos:end="45:36">dc</name><operator pos:start="45:37" pos:end="45:38">-&gt;</operator><name pos:start="45:39" pos:end="45:40">r1</name></name></expr>]</index></name></expr></argument>, <argument pos:start="45:44" pos:end="45:47"><expr pos:start="45:44" pos:end="45:47"><literal type="number" pos:start="45:44" pos:end="45:47">0x1f</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="49:9" pos:end="57:9"><if pos:start="49:9" pos:end="57:9">if <condition pos:start="49:12" pos:end="49:49">(<expr pos:start="49:13" pos:end="49:48"><operator pos:start="49:13" pos:end="49:13">!</operator><operator pos:start="49:14" pos:end="49:14">(</operator><name pos:start="49:15" pos:end="49:26"><name pos:start="49:15" pos:end="49:16">dc</name><operator pos:start="49:17" pos:end="49:18">-&gt;</operator><name pos:start="49:19" pos:end="49:26">features</name></name> <operator pos:start="49:28" pos:end="49:28">&amp;</operator> <name pos:start="49:30" pos:end="49:47">LM32_FEATURE_SHIFT</name><operator pos:start="49:48" pos:end="49:48">)</operator></expr>)</condition> <block pos:start="49:51" pos:end="57:9">{<block_content pos:start="51:13" pos:end="55:27">

            <expr_stmt pos:start="51:13" pos:end="51:55"><expr pos:start="51:13" pos:end="51:54"><call pos:start="51:13" pos:end="51:54"><name pos:start="51:13" pos:end="51:30">tcg_gen_brcondi_tl</name><argument_list pos:start="51:31" pos:end="51:54">(<argument pos:start="51:32" pos:end="51:42"><expr pos:start="51:32" pos:end="51:42"><name pos:start="51:32" pos:end="51:42">TCG_COND_EQ</name></expr></argument>, <argument pos:start="51:45" pos:end="51:46"><expr pos:start="51:45" pos:end="51:46"><name pos:start="51:45" pos:end="51:46">t0</name></expr></argument>, <argument pos:start="51:49" pos:end="51:49"><expr pos:start="51:49" pos:end="51:49"><literal type="number" pos:start="51:49" pos:end="51:49">1</literal></expr></argument>, <argument pos:start="51:52" pos:end="51:53"><expr pos:start="51:52" pos:end="51:53"><name pos:start="51:52" pos:end="51:53">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:35"><expr pos:start="53:13" pos:end="53:34"><call pos:start="53:13" pos:end="53:34"><name pos:start="53:13" pos:end="53:30">t_gen_illegal_insn</name><argument_list pos:start="53:31" pos:end="53:34">(<argument pos:start="53:32" pos:end="53:33"><expr pos:start="53:32" pos:end="53:33"><name pos:start="53:32" pos:end="53:33">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="55:13" pos:end="55:27"><expr pos:start="55:13" pos:end="55:26"><call pos:start="55:13" pos:end="55:26"><name pos:start="55:13" pos:end="55:22">tcg_gen_br</name><argument_list pos:start="55:23" pos:end="55:26">(<argument pos:start="55:24" pos:end="55:25"><expr pos:start="55:24" pos:end="55:25"><name pos:start="55:24" pos:end="55:25">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="61:9" pos:end="61:26"><expr pos:start="61:9" pos:end="61:25"><call pos:start="61:9" pos:end="61:25"><name pos:start="61:9" pos:end="61:21">gen_set_label</name><argument_list pos:start="61:22" pos:end="61:25">(<argument pos:start="61:23" pos:end="61:24"><expr pos:start="61:23" pos:end="61:24"><name pos:start="61:23" pos:end="61:24">l1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="63:9" pos:end="63:57"><expr pos:start="63:9" pos:end="63:56"><call pos:start="63:9" pos:end="63:56"><name pos:start="63:9" pos:end="63:22">tcg_gen_sar_tl</name><argument_list pos:start="63:23" pos:end="63:56">(<argument pos:start="63:24" pos:end="63:36"><expr pos:start="63:24" pos:end="63:36"><name pos:start="63:24" pos:end="63:36"><name pos:start="63:24" pos:end="63:28">cpu_R</name><index pos:start="63:29" pos:end="63:36">[<expr pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:35"><name pos:start="63:30" pos:end="63:31">dc</name><operator pos:start="63:32" pos:end="63:33">-&gt;</operator><name pos:start="63:34" pos:end="63:35">r2</name></name></expr>]</index></name></expr></argument>, <argument pos:start="63:39" pos:end="63:51"><expr pos:start="63:39" pos:end="63:51"><name pos:start="63:39" pos:end="63:51"><name pos:start="63:39" pos:end="63:43">cpu_R</name><index pos:start="63:44" pos:end="63:51">[<expr pos:start="63:45" pos:end="63:50"><name pos:start="63:45" pos:end="63:50"><name pos:start="63:45" pos:end="63:46">dc</name><operator pos:start="63:47" pos:end="63:48">-&gt;</operator><name pos:start="63:49" pos:end="63:50">r0</name></name></expr>]</index></name></expr></argument>, <argument pos:start="63:54" pos:end="63:55"><expr pos:start="63:54" pos:end="63:55"><name pos:start="63:54" pos:end="63:55">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="65:9" pos:end="65:26"><expr pos:start="65:9" pos:end="65:25"><call pos:start="65:9" pos:end="65:25"><name pos:start="65:9" pos:end="65:21">gen_set_label</name><argument_list pos:start="65:22" pos:end="65:25">(<argument pos:start="65:23" pos:end="65:24"><expr pos:start="65:23" pos:end="65:24"><name pos:start="65:23" pos:end="65:24">l2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="69:9" pos:end="69:26"><expr pos:start="69:9" pos:end="69:25"><call pos:start="69:9" pos:end="69:25"><name pos:start="69:9" pos:end="69:21">tcg_temp_free</name><argument_list pos:start="69:22" pos:end="69:25">(<argument pos:start="69:23" pos:end="69:24"><expr pos:start="69:23" pos:end="69:24"><name pos:start="69:23" pos:end="69:24">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
