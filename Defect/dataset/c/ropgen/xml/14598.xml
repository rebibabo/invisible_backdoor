<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14598.c" pos:tabs="8"><function pos:start="1:1" pos:end="115:1"><type pos:start="1:1" pos:end="1:18"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">av_cold</name> <name pos:start="1:16" pos:end="1:18">int</name></type> <name pos:start="1:20" pos:end="1:39">a64multi_encode_init</name><parameter_list pos:start="1:40" pos:end="1:62">(<parameter pos:start="1:41" pos:end="1:61"><decl pos:start="1:41" pos:end="1:61"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:54">AVCodecContext</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:61">avctx</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="115:1">{<block_content pos:start="5:5" pos:end="113:13">

    <decl_stmt pos:start="5:5" pos:end="5:37"><decl pos:start="5:5" pos:end="5:36"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">A64Context</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">c</name> <init pos:start="5:19" pos:end="5:36">= <expr pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:36"><name pos:start="5:21" pos:end="5:25">avctx</name><operator pos:start="5:26" pos:end="5:27">-&gt;</operator><name pos:start="5:28" pos:end="5:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:10"><decl pos:start="7:5" pos:end="7:9"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:9">a</name></decl>;</decl_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:32"><expr pos:start="9:5" pos:end="9:31"><call pos:start="9:5" pos:end="9:31"><name pos:start="9:5" pos:end="9:15">av_lfg_init</name><argument_list pos:start="9:16" pos:end="9:31">(<argument pos:start="9:17" pos:end="9:27"><expr pos:start="9:17" pos:end="9:27"><operator pos:start="9:17" pos:end="9:17">&amp;</operator><name pos:start="9:18" pos:end="9:27"><name pos:start="9:18" pos:end="9:18">c</name><operator pos:start="9:19" pos:end="9:20">-&gt;</operator><name pos:start="9:21" pos:end="9:27">randctx</name></name></expr></argument>, <argument pos:start="9:30" pos:end="9:30"><expr pos:start="9:30" pos:end="9:30"><literal type="number" pos:start="9:30" pos:end="9:30">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="17:5">if <condition pos:start="13:8" pos:end="13:34">(<expr pos:start="13:9" pos:end="13:33"><name pos:start="13:9" pos:end="13:29"><name pos:start="13:9" pos:end="13:13">avctx</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:29">global_quality</name></name> <operator pos:start="13:31" pos:end="13:31">&lt;</operator> <literal type="number" pos:start="13:33" pos:end="13:33">1</literal></expr>)</condition> <block pos:start="13:36" pos:end="17:5">{<block_content pos:start="15:9" pos:end="15:27">

        <expr_stmt pos:start="15:9" pos:end="15:27"><expr pos:start="15:9" pos:end="15:26"><name pos:start="15:9" pos:end="15:22"><name pos:start="15:9" pos:end="15:9">c</name><operator pos:start="15:10" pos:end="15:11">-&gt;</operator><name pos:start="15:12" pos:end="15:22">mc_lifetime</name></name> <operator pos:start="15:24" pos:end="15:24">=</operator> <literal type="number" pos:start="15:26" pos:end="15:26">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="17:7" pos:end="21:5">else <block pos:start="17:12" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:63">

        <expr_stmt pos:start="19:9" pos:end="19:63"><expr pos:start="19:9" pos:end="19:62"><name pos:start="19:9" pos:end="19:22"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:22">mc_lifetime</name></name> <operator pos:start="19:24" pos:end="19:24">=</operator> <name pos:start="19:26" pos:end="19:46"><name pos:start="19:26" pos:end="19:30">avctx</name><operator pos:start="19:31" pos:end="19:32">-&gt;</operator><name pos:start="19:33" pos:end="19:46">global_quality</name></name> <operator pos:start="19:48" pos:end="19:49">/=</operator> <name pos:start="19:51" pos:end="19:62">FF_QP2LAMBDA</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:88"><expr pos:start="25:5" pos:end="25:87"><call pos:start="25:5" pos:end="25:87"><name pos:start="25:5" pos:end="25:10">av_log</name><argument_list pos:start="25:11" pos:end="25:87">(<argument pos:start="25:12" pos:end="25:16"><expr pos:start="25:12" pos:end="25:16"><name pos:start="25:12" pos:end="25:16">avctx</name></expr></argument>, <argument pos:start="25:19" pos:end="25:29"><expr pos:start="25:19" pos:end="25:29"><name pos:start="25:19" pos:end="25:29">AV_LOG_INFO</name></expr></argument>, <argument pos:start="25:32" pos:end="25:70"><expr pos:start="25:32" pos:end="25:70"><literal type="string" pos:start="25:32" pos:end="25:70">"charset lifetime set to %d frame(s)\n"</literal></expr></argument>, <argument pos:start="25:73" pos:end="25:86"><expr pos:start="25:73" pos:end="25:86"><name pos:start="25:73" pos:end="25:86"><name pos:start="25:73" pos:end="25:73">c</name><operator pos:start="25:74" pos:end="25:75">-&gt;</operator><name pos:start="25:76" pos:end="25:86">mc_lifetime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:28"><expr pos:start="29:5" pos:end="29:27"><name pos:start="29:5" pos:end="29:23"><name pos:start="29:5" pos:end="29:5">c</name><operator pos:start="29:6" pos:end="29:7">-&gt;</operator><name pos:start="29:8" pos:end="29:23">mc_frame_counter</name></name> <operator pos:start="29:25" pos:end="29:25">=</operator> <literal type="number" pos:start="29:27" pos:end="29:27">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:69"><expr pos:start="31:5" pos:end="31:68"><name pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:5">c</name><operator pos:start="31:6" pos:end="31:7">-&gt;</operator><name pos:start="31:8" pos:end="31:18">mc_use_5col</name></name>      <operator pos:start="31:25" pos:end="31:25">=</operator> <name pos:start="31:27" pos:end="31:42"><name pos:start="31:27" pos:end="31:31">avctx</name><operator pos:start="31:32" pos:end="31:33">-&gt;</operator><name pos:start="31:34" pos:end="31:38">codec</name><operator pos:start="31:39" pos:end="31:40">-&gt;</operator><name pos:start="31:41" pos:end="31:42">id</name></name> <operator pos:start="31:44" pos:end="31:45">==</operator> <name pos:start="31:47" pos:end="31:68">AV_CODEC_ID_A64_MULTI5</name></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:45"><expr pos:start="33:5" pos:end="33:44"><name pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:5">c</name><operator pos:start="33:6" pos:end="33:7">-&gt;</operator><name pos:start="33:8" pos:end="33:18">mc_pal_size</name></name>      <operator pos:start="33:25" pos:end="33:25">=</operator> <literal type="number" pos:start="33:27" pos:end="33:29">4</literal> <operator pos:start="33:29" pos:end="33:29">+</operator> <name pos:start="33:31" pos:end="33:44"><name pos:start="33:31" pos:end="33:31">c</name><operator pos:start="33:32" pos:end="33:33">-&gt;</operator><name pos:start="33:34" pos:end="33:44">mc_use_5col</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="37:5" pos:end="37:43">/* precalc luma values for later use */</comment>

    <for pos:start="39:5" pos:end="47:5">for <control pos:start="39:9" pos:end="39:40">(<init pos:start="39:10" pos:end="39:15"><expr pos:start="39:10" pos:end="39:14"><name pos:start="39:10" pos:end="39:10">a</name> <operator pos:start="39:12" pos:end="39:12">=</operator> <literal type="number" pos:start="39:14" pos:end="39:14">0</literal></expr>;</init> <condition pos:start="39:17" pos:end="39:35"><expr pos:start="39:17" pos:end="39:34"><name pos:start="39:17" pos:end="39:17">a</name> <operator pos:start="39:19" pos:end="39:19">&lt;</operator> <name pos:start="39:21" pos:end="39:34"><name pos:start="39:21" pos:end="39:21">c</name><operator pos:start="39:22" pos:end="39:23">-&gt;</operator><name pos:start="39:24" pos:end="39:34">mc_pal_size</name></name></expr>;</condition> <incr pos:start="39:37" pos:end="39:39"><expr pos:start="39:37" pos:end="39:39"><name pos:start="39:37" pos:end="39:37">a</name><operator pos:start="39:38" pos:end="39:39">++</operator></expr></incr>)</control> <block pos:start="39:42" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:63">

        <expr_stmt pos:start="41:9" pos:end="45:63"><expr pos:start="41:9" pos:end="45:62"><name pos:start="41:9" pos:end="41:26"><name pos:start="41:9" pos:end="41:9">c</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:23">mc_luma_vals</name><index pos:start="41:24" pos:end="41:26">[<expr pos:start="41:25" pos:end="41:25"><name pos:start="41:25" pos:end="41:25">a</name></expr>]</index></name><operator pos:start="41:27" pos:end="41:27">=</operator><name pos:start="41:28" pos:end="41:55"><name pos:start="41:28" pos:end="41:38">a64_palette</name><index pos:start="41:39" pos:end="41:52">[<expr pos:start="41:40" pos:end="41:51"><name pos:start="41:40" pos:end="41:51"><name pos:start="41:40" pos:end="41:48">mc_colors</name><index pos:start="41:49" pos:end="41:51">[<expr pos:start="41:50" pos:end="41:50"><name pos:start="41:50" pos:end="41:50">a</name></expr>]</index></name></expr>]</index><index pos:start="41:53" pos:end="41:55">[<expr pos:start="41:54" pos:end="41:54"><literal type="number" pos:start="41:54" pos:end="41:54">0</literal></expr>]</index></name> <operator pos:start="41:57" pos:end="41:57">*</operator> <literal type="number" pos:start="41:59" pos:end="41:64">0.30</literal> <operator pos:start="41:64" pos:end="41:64">+</operator>

                           <name pos:start="43:28" pos:end="43:55"><name pos:start="43:28" pos:end="43:38">a64_palette</name><index pos:start="43:39" pos:end="43:52">[<expr pos:start="43:40" pos:end="43:51"><name pos:start="43:40" pos:end="43:51"><name pos:start="43:40" pos:end="43:48">mc_colors</name><index pos:start="43:49" pos:end="43:51">[<expr pos:start="43:50" pos:end="43:50"><name pos:start="43:50" pos:end="43:50">a</name></expr>]</index></name></expr>]</index><index pos:start="43:53" pos:end="43:55">[<expr pos:start="43:54" pos:end="43:54"><literal type="number" pos:start="43:54" pos:end="43:54">1</literal></expr>]</index></name> <operator pos:start="43:57" pos:end="43:57">*</operator> <literal type="number" pos:start="43:59" pos:end="43:64">0.59</literal> <operator pos:start="43:64" pos:end="43:64">+</operator>

                           <name pos:start="45:28" pos:end="45:55"><name pos:start="45:28" pos:end="45:38">a64_palette</name><index pos:start="45:39" pos:end="45:52">[<expr pos:start="45:40" pos:end="45:51"><name pos:start="45:40" pos:end="45:51"><name pos:start="45:40" pos:end="45:48">mc_colors</name><index pos:start="45:49" pos:end="45:51">[<expr pos:start="45:50" pos:end="45:50"><name pos:start="45:50" pos:end="45:50">a</name></expr>]</index></name></expr>]</index><index pos:start="45:53" pos:end="45:55">[<expr pos:start="45:54" pos:end="45:54"><literal type="number" pos:start="45:54" pos:end="45:54">2</literal></expr>]</index></name> <operator pos:start="45:57" pos:end="45:57">*</operator> <literal type="number" pos:start="45:59" pos:end="45:62">0.11</literal></expr>;</expr_stmt>

    </block_content>}</block></for>



    <if_stmt pos:start="51:5" pos:end="65:5"><if pos:start="51:5" pos:end="65:5">if <condition pos:start="51:8" pos:end="59:84">(<expr pos:start="51:9" pos:end="59:83"><operator pos:start="51:9" pos:end="51:9">!</operator><operator pos:start="51:10" pos:end="51:10">(</operator><name pos:start="51:11" pos:end="51:28"><name pos:start="51:11" pos:end="51:11">c</name><operator pos:start="51:12" pos:end="51:13">-&gt;</operator><name pos:start="51:14" pos:end="51:28">mc_meta_charset</name></name> <operator pos:start="51:30" pos:end="51:30">=</operator> <call pos:start="51:32" pos:end="51:83"><name pos:start="51:32" pos:end="51:46">av_malloc_array</name><argument_list pos:start="51:47" pos:end="51:83">(<argument pos:start="51:48" pos:end="51:61"><expr pos:start="51:48" pos:end="51:61"><name pos:start="51:48" pos:end="51:61"><name pos:start="51:48" pos:end="51:48">c</name><operator pos:start="51:49" pos:end="51:50">-&gt;</operator><name pos:start="51:51" pos:end="51:61">mc_lifetime</name></name></expr></argument>, <argument pos:start="51:64" pos:end="51:82"><expr pos:start="51:64" pos:end="51:82"><literal type="number" pos:start="51:64" pos:end="51:68">32000</literal> <operator pos:start="51:70" pos:end="51:70">*</operator> <sizeof pos:start="51:72" pos:end="51:82">sizeof<argument_list pos:start="51:78" pos:end="51:82">(<argument pos:start="51:79" pos:end="51:81"><expr pos:start="51:79" pos:end="51:81"><name pos:start="51:79" pos:end="51:81">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="51:84" pos:end="51:84">)</operator> <operator pos:start="51:86" pos:end="51:87">||</operator>

       <operator pos:start="53:8" pos:end="53:8">!</operator><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:22"><name pos:start="53:10" pos:end="53:10">c</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:22">mc_best_cb</name></name>       <operator pos:start="53:30" pos:end="53:30">=</operator> <call pos:start="53:32" pos:end="53:74"><name pos:start="53:32" pos:end="53:40">av_malloc</name><argument_list pos:start="53:41" pos:end="53:74">(<argument pos:start="53:42" pos:end="53:73"><expr pos:start="53:42" pos:end="53:73"><name pos:start="53:42" pos:end="53:54">CHARSET_CHARS</name> <operator pos:start="53:56" pos:end="53:56">*</operator> <literal type="number" pos:start="53:58" pos:end="53:59">32</literal> <operator pos:start="53:61" pos:end="53:61">*</operator> <sizeof pos:start="53:63" pos:end="53:73">sizeof<argument_list pos:start="53:69" pos:end="53:73">(<argument pos:start="53:70" pos:end="53:72"><expr pos:start="53:70" pos:end="53:72"><name pos:start="53:70" pos:end="53:72">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="53:75" pos:end="53:75">)</operator>     <operator pos:start="53:81" pos:end="53:82">||</operator>

       <operator pos:start="55:8" pos:end="55:8">!</operator><operator pos:start="55:9" pos:end="55:9">(</operator><name pos:start="55:10" pos:end="55:22"><name pos:start="55:10" pos:end="55:10">c</name><operator pos:start="55:11" pos:end="55:12">-&gt;</operator><name pos:start="55:13" pos:end="55:22">mc_charmap</name></name>       <operator pos:start="55:30" pos:end="55:30">=</operator> <call pos:start="55:32" pos:end="55:83"><name pos:start="55:32" pos:end="55:47">av_mallocz_array</name><argument_list pos:start="55:48" pos:end="55:83">(<argument pos:start="55:49" pos:end="55:62"><expr pos:start="55:49" pos:end="55:62"><name pos:start="55:49" pos:end="55:62"><name pos:start="55:49" pos:end="55:49">c</name><operator pos:start="55:50" pos:end="55:51">-&gt;</operator><name pos:start="55:52" pos:end="55:62">mc_lifetime</name></name></expr></argument>, <argument pos:start="55:65" pos:end="55:82"><expr pos:start="55:65" pos:end="55:82"><literal type="number" pos:start="55:65" pos:end="55:68">1000</literal> <operator pos:start="55:70" pos:end="55:70">*</operator> <sizeof pos:start="55:72" pos:end="55:82">sizeof<argument_list pos:start="55:78" pos:end="55:82">(<argument pos:start="55:79" pos:end="55:81"><expr pos:start="55:79" pos:end="55:81"><name pos:start="55:79" pos:end="55:81">int</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="55:84" pos:end="55:84">)</operator> <operator pos:start="55:86" pos:end="55:87">||</operator>

       <operator pos:start="57:8" pos:end="57:8">!</operator><operator pos:start="57:9" pos:end="57:9">(</operator><name pos:start="57:10" pos:end="57:21"><name pos:start="57:10" pos:end="57:10">c</name><operator pos:start="57:11" pos:end="57:12">-&gt;</operator><name pos:start="57:13" pos:end="57:21">mc_colram</name></name>        <operator pos:start="57:30" pos:end="57:30">=</operator> <call pos:start="57:32" pos:end="57:74"><name pos:start="57:32" pos:end="57:41">av_mallocz</name><argument_list pos:start="57:42" pos:end="57:74">(<argument pos:start="57:43" pos:end="57:73"><expr pos:start="57:43" pos:end="57:73"><name pos:start="57:43" pos:end="57:55">CHARSET_CHARS</name> <operator pos:start="57:57" pos:end="57:57">*</operator> <sizeof pos:start="57:59" pos:end="57:73">sizeof<argument_list pos:start="57:65" pos:end="57:73">(<argument pos:start="57:66" pos:end="57:72"><expr pos:start="57:66" pos:end="57:72"><name pos:start="57:66" pos:end="57:72">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="57:75" pos:end="57:75">)</operator>     <operator pos:start="57:81" pos:end="57:82">||</operator>

       <operator pos:start="59:8" pos:end="59:8">!</operator><operator pos:start="59:9" pos:end="59:9">(</operator><name pos:start="59:10" pos:end="59:22"><name pos:start="59:10" pos:end="59:10">c</name><operator pos:start="59:11" pos:end="59:12">-&gt;</operator><name pos:start="59:13" pos:end="59:22">mc_charset</name></name>       <operator pos:start="59:30" pos:end="59:30">=</operator> <call pos:start="59:32" pos:end="59:82"><name pos:start="59:32" pos:end="59:40">av_malloc</name><argument_list pos:start="59:41" pos:end="59:82">(<argument pos:start="59:42" pos:end="59:81"><expr pos:start="59:42" pos:end="59:81"><literal type="number" pos:start="59:42" pos:end="59:46">0x800</literal> <operator pos:start="59:48" pos:end="59:48">*</operator> <operator pos:start="59:50" pos:end="59:50">(</operator><name pos:start="59:51" pos:end="59:60">INTERLACED</name><operator pos:start="59:61" pos:end="59:61">+</operator><literal type="number" pos:start="59:62" pos:end="59:62">1</literal><operator pos:start="59:63" pos:end="59:63">)</operator> <operator pos:start="59:65" pos:end="59:65">*</operator> <sizeof pos:start="59:67" pos:end="59:81">sizeof<argument_list pos:start="59:73" pos:end="59:81">(<argument pos:start="59:74" pos:end="59:80"><expr pos:start="59:74" pos:end="59:80"><name pos:start="59:74" pos:end="59:80">uint8_t</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="59:83" pos:end="59:83">)</operator></expr>)</condition> <block pos:start="59:86" pos:end="65:5">{<block_content pos:start="61:9" pos:end="63:31">

        <expr_stmt pos:start="61:9" pos:end="61:75"><expr pos:start="61:9" pos:end="61:74"><call pos:start="61:9" pos:end="61:74"><name pos:start="61:9" pos:end="61:14">av_log</name><argument_list pos:start="61:15" pos:end="61:74">(<argument pos:start="61:16" pos:end="61:20"><expr pos:start="61:16" pos:end="61:20"><name pos:start="61:16" pos:end="61:20">avctx</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="61:37" pos:end="61:73"><expr pos:start="61:37" pos:end="61:73"><literal type="string" pos:start="61:37" pos:end="61:73">"Failed to allocate buffer memory.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:31">return <expr pos:start="63:16" pos:end="63:30"><call pos:start="63:16" pos:end="63:30"><name pos:start="63:16" pos:end="63:22">AVERROR</name><argument_list pos:start="63:23" pos:end="63:30">(<argument pos:start="63:24" pos:end="63:29"><expr pos:start="63:24" pos:end="63:29"><name pos:start="63:24" pos:end="63:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="69:5" pos:end="69:26">/* set up extradata */</comment>

    <if_stmt pos:start="71:5" pos:end="77:5"><if pos:start="71:5" pos:end="77:5">if <condition pos:start="71:8" pos:end="71:79">(<expr pos:start="71:9" pos:end="71:78"><operator pos:start="71:9" pos:end="71:9">!</operator><operator pos:start="71:10" pos:end="71:10">(</operator><name pos:start="71:11" pos:end="71:26"><name pos:start="71:11" pos:end="71:15">avctx</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:26">extradata</name></name> <operator pos:start="71:28" pos:end="71:28">=</operator> <call pos:start="71:30" pos:end="71:77"><name pos:start="71:30" pos:end="71:39">av_mallocz</name><argument_list pos:start="71:40" pos:end="71:77">(<argument pos:start="71:41" pos:end="71:76"><expr pos:start="71:41" pos:end="71:76"><literal type="number" pos:start="71:41" pos:end="71:41">8</literal> <operator pos:start="71:43" pos:end="71:43">*</operator> <literal type="number" pos:start="71:45" pos:end="71:47">4</literal> <operator pos:start="71:47" pos:end="71:47">+</operator> <name pos:start="71:49" pos:end="71:76">FF_INPUT_BUFFER_PADDING_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="71:78" pos:end="71:78">)</operator></expr>)</condition> <block pos:start="71:81" pos:end="77:5">{<block_content pos:start="73:9" pos:end="75:31">

        <expr_stmt pos:start="73:9" pos:end="73:82"><expr pos:start="73:9" pos:end="73:81"><call pos:start="73:9" pos:end="73:81"><name pos:start="73:9" pos:end="73:14">av_log</name><argument_list pos:start="73:15" pos:end="73:81">(<argument pos:start="73:16" pos:end="73:20"><expr pos:start="73:16" pos:end="73:20"><name pos:start="73:16" pos:end="73:20">avctx</name></expr></argument>, <argument pos:start="73:23" pos:end="73:34"><expr pos:start="73:23" pos:end="73:34"><name pos:start="73:23" pos:end="73:34">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="73:37" pos:end="73:80"><expr pos:start="73:37" pos:end="73:80"><literal type="string" pos:start="73:37" pos:end="73:80">"Failed to allocate memory for extradata.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="75:9" pos:end="75:31">return <expr pos:start="75:16" pos:end="75:30"><call pos:start="75:16" pos:end="75:30"><name pos:start="75:16" pos:end="75:22">AVERROR</name><argument_list pos:start="75:23" pos:end="75:30">(<argument pos:start="75:24" pos:end="75:29"><expr pos:start="75:24" pos:end="75:29"><name pos:start="75:24" pos:end="75:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:34"><expr pos:start="79:5" pos:end="79:33"><name pos:start="79:5" pos:end="79:25"><name pos:start="79:5" pos:end="79:9">avctx</name><operator pos:start="79:10" pos:end="79:11">-&gt;</operator><name pos:start="79:12" pos:end="79:25">extradata_size</name></name> <operator pos:start="79:27" pos:end="79:27">=</operator> <literal type="number" pos:start="79:29" pos:end="79:29">8</literal> <operator pos:start="79:31" pos:end="79:31">*</operator> <literal type="number" pos:start="79:33" pos:end="79:33">4</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:46"><expr pos:start="81:5" pos:end="81:45"><call pos:start="81:5" pos:end="81:45"><name pos:start="81:5" pos:end="81:11">AV_WB32</name><argument_list pos:start="81:12" pos:end="81:45">(<argument pos:start="81:13" pos:end="81:28"><expr pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:17">avctx</name><operator pos:start="81:18" pos:end="81:19">-&gt;</operator><name pos:start="81:20" pos:end="81:28">extradata</name></name></expr></argument>, <argument pos:start="81:31" pos:end="81:44"><expr pos:start="81:31" pos:end="81:44"><name pos:start="81:31" pos:end="81:44"><name pos:start="81:31" pos:end="81:31">c</name><operator pos:start="81:32" pos:end="81:33">-&gt;</operator><name pos:start="81:34" pos:end="81:44">mc_lifetime</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:47"><expr pos:start="83:5" pos:end="83:46"><call pos:start="83:5" pos:end="83:46"><name pos:start="83:5" pos:end="83:11">AV_WB32</name><argument_list pos:start="83:12" pos:end="83:46">(<argument pos:start="83:13" pos:end="83:33"><expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:28"><name pos:start="83:13" pos:end="83:17">avctx</name><operator pos:start="83:18" pos:end="83:19">-&gt;</operator><name pos:start="83:20" pos:end="83:28">extradata</name></name> <operator pos:start="83:30" pos:end="83:30">+</operator> <literal type="number" pos:start="83:32" pos:end="83:33">16</literal></expr></argument>, <argument pos:start="83:36" pos:end="83:45"><expr pos:start="83:36" pos:end="83:45"><name pos:start="83:36" pos:end="83:45">INTERLACED</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="87:5" pos:end="87:42"><expr pos:start="87:5" pos:end="87:41"><name pos:start="87:5" pos:end="87:22"><name pos:start="87:5" pos:end="87:9">avctx</name><operator pos:start="87:10" pos:end="87:11">-&gt;</operator><name pos:start="87:12" pos:end="87:22">coded_frame</name></name> <operator pos:start="87:24" pos:end="87:24">=</operator> <call pos:start="87:26" pos:end="87:41"><name pos:start="87:26" pos:end="87:39">av_frame_alloc</name><argument_list pos:start="87:40" pos:end="87:41">()</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="89:5" pos:end="95:5"><if pos:start="89:5" pos:end="95:5">if <condition pos:start="89:8" pos:end="89:28">(<expr pos:start="89:9" pos:end="89:27"><operator pos:start="89:9" pos:end="89:9">!</operator><name pos:start="89:10" pos:end="89:27"><name pos:start="89:10" pos:end="89:14">avctx</name><operator pos:start="89:15" pos:end="89:16">-&gt;</operator><name pos:start="89:17" pos:end="89:27">coded_frame</name></name></expr>)</condition> <block pos:start="89:30" pos:end="95:5">{<block_content pos:start="91:9" pos:end="93:31">

        <expr_stmt pos:start="91:9" pos:end="91:38"><expr pos:start="91:9" pos:end="91:37"><call pos:start="91:9" pos:end="91:37"><name pos:start="91:9" pos:end="91:30">a64multi_close_encoder</name><argument_list pos:start="91:31" pos:end="91:37">(<argument pos:start="91:32" pos:end="91:36"><expr pos:start="91:32" pos:end="91:36"><name pos:start="91:32" pos:end="91:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="93:9" pos:end="93:31">return <expr pos:start="93:16" pos:end="93:30"><call pos:start="93:16" pos:end="93:30"><name pos:start="93:16" pos:end="93:22">AVERROR</name><argument_list pos:start="93:23" pos:end="93:30">(<argument pos:start="93:24" pos:end="93:29"><expr pos:start="93:24" pos:end="93:29"><name pos:start="93:24" pos:end="93:29">ENOMEM</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="99:5" pos:end="99:54"><expr pos:start="99:5" pos:end="99:53"><name pos:start="99:5" pos:end="99:33"><name pos:start="99:5" pos:end="99:9">avctx</name><operator pos:start="99:10" pos:end="99:11">-&gt;</operator><name pos:start="99:12" pos:end="99:22">coded_frame</name><operator pos:start="99:23" pos:end="99:24">-&gt;</operator><name pos:start="99:25" pos:end="99:33">pict_type</name></name> <operator pos:start="99:35" pos:end="99:35">=</operator> <name pos:start="99:37" pos:end="99:53">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt>

    <expr_stmt pos:start="101:5" pos:end="101:38"><expr pos:start="101:5" pos:end="101:37"><name pos:start="101:5" pos:end="101:33"><name pos:start="101:5" pos:end="101:9">avctx</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:22">coded_frame</name><operator pos:start="101:23" pos:end="101:24">-&gt;</operator><name pos:start="101:25" pos:end="101:33">key_frame</name></name> <operator pos:start="101:35" pos:end="101:35">=</operator> <literal type="number" pos:start="101:37" pos:end="101:37">1</literal></expr>;</expr_stmt>

    <if_stmt pos:start="103:5" pos:end="105:44"><if pos:start="103:5" pos:end="105:44">if <condition pos:start="103:8" pos:end="103:26">(<expr pos:start="103:9" pos:end="103:25"><operator pos:start="103:9" pos:end="103:9">!</operator><name pos:start="103:10" pos:end="103:25"><name pos:start="103:10" pos:end="103:14">avctx</name><operator pos:start="103:15" pos:end="103:16">-&gt;</operator><name pos:start="103:17" pos:end="103:25">codec_tag</name></name></expr>)</condition><block type="pseudo" pos:start="105:10" pos:end="105:44"><block_content pos:start="105:10" pos:end="105:44">

         <expr_stmt pos:start="105:10" pos:end="105:44"><expr pos:start="105:10" pos:end="105:43"><name pos:start="105:10" pos:end="105:25"><name pos:start="105:10" pos:end="105:14">avctx</name><operator pos:start="105:15" pos:end="105:16">-&gt;</operator><name pos:start="105:17" pos:end="105:25">codec_tag</name></name> <operator pos:start="105:27" pos:end="105:27">=</operator> <call pos:start="105:29" pos:end="105:43"><name pos:start="105:29" pos:end="105:35">AV_RL32</name><argument_list pos:start="105:36" pos:end="105:43">(<argument pos:start="105:37" pos:end="105:42"><expr pos:start="105:37" pos:end="105:42"><literal type="string" pos:start="105:37" pos:end="105:42">"a64m"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="109:5" pos:end="109:33"><expr pos:start="109:5" pos:end="109:32"><name pos:start="109:5" pos:end="109:15"><name pos:start="109:5" pos:end="109:5">c</name><operator pos:start="109:6" pos:end="109:7">-&gt;</operator><name pos:start="109:8" pos:end="109:15">next_pts</name></name> <operator pos:start="109:17" pos:end="109:17">=</operator> <name pos:start="109:19" pos:end="109:32">AV_NOPTS_VALUE</name></expr>;</expr_stmt>



    <return pos:start="113:5" pos:end="113:13">return <expr pos:start="113:12" pos:end="113:12"><literal type="number" pos:start="113:12" pos:end="113:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
