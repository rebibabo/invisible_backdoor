<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/22678.c" pos:tabs="8"><function pos:start="1:1" pos:end="215:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:45">dirac_unpack_prediction_parameters</name><parameter_list pos:start="1:46" pos:end="1:62">(<parameter pos:start="1:47" pos:end="1:61"><decl pos:start="1:47" pos:end="1:61"><type pos:start="1:47" pos:end="1:60"><name pos:start="1:47" pos:end="1:58">DiracContext</name> <modifier pos:start="1:60" pos:end="1:60">*</modifier></type><name pos:start="1:61" pos:end="1:61">s</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="215:1">{<block_content pos:start="5:5" pos:end="213:13">

    <decl_stmt pos:start="5:5" pos:end="5:60"><decl pos:start="5:5" pos:end="5:59"><type pos:start="5:5" pos:end="5:24"><specifier pos:start="5:5" pos:end="5:10">static</specifier> <specifier pos:start="5:12" pos:end="5:16">const</specifier> <name pos:start="5:18" pos:end="5:24">uint8_t</name></type> <name pos:start="5:26" pos:end="5:39"><name pos:start="5:26" pos:end="5:37">default_blen</name><index pos:start="5:38" pos:end="5:39">[]</index></name> <init pos:start="5:41" pos:end="5:59">= <expr pos:start="5:43" pos:end="5:59"><block pos:start="5:43" pos:end="5:59">{ <expr pos:start="5:45" pos:end="5:45"><literal type="number" pos:start="5:45" pos:end="5:45">4</literal></expr>, <expr pos:start="5:48" pos:end="5:49"><literal type="number" pos:start="5:48" pos:end="5:49">12</literal></expr>, <expr pos:start="5:52" pos:end="5:53"><literal type="number" pos:start="5:52" pos:end="5:53">16</literal></expr>, <expr pos:start="5:56" pos:end="5:57"><literal type="number" pos:start="5:56" pos:end="5:57">24</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:60"><decl pos:start="7:5" pos:end="7:59"><type pos:start="7:5" pos:end="7:24"><specifier pos:start="7:5" pos:end="7:10">static</specifier> <specifier pos:start="7:12" pos:end="7:16">const</specifier> <name pos:start="7:18" pos:end="7:24">uint8_t</name></type> <name pos:start="7:26" pos:end="7:39"><name pos:start="7:26" pos:end="7:37">default_bsep</name><index pos:start="7:38" pos:end="7:39">[]</index></name> <init pos:start="7:41" pos:end="7:59">= <expr pos:start="7:43" pos:end="7:59"><block pos:start="7:43" pos:end="7:59">{ <expr pos:start="7:45" pos:end="7:45"><literal type="number" pos:start="7:45" pos:end="7:45">4</literal></expr>,  <expr pos:start="7:49" pos:end="7:49"><literal type="number" pos:start="7:49" pos:end="7:49">8</literal></expr>, <expr pos:start="7:52" pos:end="7:53"><literal type="number" pos:start="7:52" pos:end="7:53">12</literal></expr>, <expr pos:start="7:56" pos:end="7:57"><literal type="number" pos:start="7:56" pos:end="7:57">16</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:19"><name pos:start="11:5" pos:end="11:17">GetBitContext</name> <modifier pos:start="11:19" pos:end="11:19">*</modifier></type><name pos:start="11:20" pos:end="11:21">gb</name> <init pos:start="11:23" pos:end="11:30">= <expr pos:start="11:25" pos:end="11:30"><operator pos:start="11:25" pos:end="11:25">&amp;</operator><name pos:start="11:26" pos:end="11:30"><name pos:start="11:26" pos:end="11:26">s</name><operator pos:start="11:27" pos:end="11:28">-&gt;</operator><name pos:start="11:29" pos:end="11:30">gb</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:22"><decl pos:start="13:5" pos:end="13:16"><type pos:start="13:5" pos:end="13:12"><name pos:start="13:5" pos:end="13:12">unsigned</name></type> <name pos:start="13:14" pos:end="13:16">idx</name></decl>, <decl pos:start="13:19" pos:end="13:21"><type ref="prev" pos:start="13:5" pos:end="13:12"/><name pos:start="13:19" pos:end="13:21">ref</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:23"><expr pos:start="17:5" pos:end="17:22"><call pos:start="17:5" pos:end="17:22"><name pos:start="17:5" pos:end="17:18">align_get_bits</name><argument_list pos:start="17:19" pos:end="17:22">(<argument pos:start="17:20" pos:end="17:21"><expr pos:start="17:20" pos:end="17:21"><name pos:start="17:20" pos:end="17:21">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="19:5" pos:end="19:65">/* [DIRAC_STD] 11.2.2 Block parameters. block_parameters() */</comment>

    <comment type="block" pos:start="21:5" pos:end="21:43">/* Luma and Chroma are equal. 11.2.3 */</comment>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">idx</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:32"><name pos:start="23:11" pos:end="23:28">svq3_get_ue_golomb</name><argument_list pos:start="23:29" pos:end="23:32">(<argument pos:start="23:30" pos:end="23:31"><expr pos:start="23:30" pos:end="23:31"><name pos:start="23:30" pos:end="23:31">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="23:35" pos:end="23:57">/* [DIRAC_STD] index */</comment>



    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">idx</name> <operator pos:start="27:13" pos:end="27:13">&gt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">4</literal></expr>)</condition>

    <block pos:start="29:5" pos:end="35:5">{<block_content pos:start="31:9" pos:end="33:18">

        <expr_stmt pos:start="31:9" pos:end="31:76"><expr pos:start="31:9" pos:end="31:75"><call pos:start="31:9" pos:end="31:75"><name pos:start="31:9" pos:end="31:14">av_log</name><argument_list pos:start="31:15" pos:end="31:75">(<argument pos:start="31:16" pos:end="31:23"><expr pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:23"><name pos:start="31:16" pos:end="31:16">s</name><operator pos:start="31:17" pos:end="31:18">-&gt;</operator><name pos:start="31:19" pos:end="31:23">avctx</name></name></expr></argument>, <argument pos:start="31:26" pos:end="31:37"><expr pos:start="31:26" pos:end="31:37"><name pos:start="31:26" pos:end="31:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="31:40" pos:end="31:74"><expr pos:start="31:40" pos:end="31:74"><literal type="string" pos:start="31:40" pos:end="31:74">"Block prediction index too high\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="33:9" pos:end="33:18">return <expr pos:start="33:16" pos:end="33:17"><operator pos:start="33:16" pos:end="33:16">-</operator><literal type="number" pos:start="33:17" pos:end="33:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="61:5"><if pos:start="39:5" pos:end="49:5">if <condition pos:start="39:8" pos:end="39:17">(<expr pos:start="39:9" pos:end="39:16"><name pos:start="39:9" pos:end="39:11">idx</name> <operator pos:start="39:13" pos:end="39:14">==</operator> <literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>)</condition> <block pos:start="39:19" pos:end="49:5">{<block_content pos:start="41:9" pos:end="47:51">

        <expr_stmt pos:start="41:9" pos:end="41:51"><expr pos:start="41:9" pos:end="41:50"><name pos:start="41:9" pos:end="41:19"><name pos:start="41:9" pos:end="41:9">s</name><operator pos:start="41:10" pos:end="41:11">-&gt;</operator><name pos:start="41:12" pos:end="41:16">plane</name><index pos:start="41:17" pos:end="41:19">[<expr pos:start="41:18" pos:end="41:18"><literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>]</index></name><operator pos:start="41:20" pos:end="41:20">.</operator><name pos:start="41:21" pos:end="41:25">xblen</name> <operator pos:start="41:27" pos:end="41:27">=</operator> <call pos:start="41:29" pos:end="41:50"><name pos:start="41:29" pos:end="41:46">svq3_get_ue_golomb</name><argument_list pos:start="41:47" pos:end="41:50">(<argument pos:start="41:48" pos:end="41:49"><expr pos:start="41:48" pos:end="41:49"><name pos:start="41:48" pos:end="41:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:51"><expr pos:start="43:9" pos:end="43:50"><name pos:start="43:9" pos:end="43:19"><name pos:start="43:9" pos:end="43:9">s</name><operator pos:start="43:10" pos:end="43:11">-&gt;</operator><name pos:start="43:12" pos:end="43:16">plane</name><index pos:start="43:17" pos:end="43:19">[<expr pos:start="43:18" pos:end="43:18"><literal type="number" pos:start="43:18" pos:end="43:18">0</literal></expr>]</index></name><operator pos:start="43:20" pos:end="43:20">.</operator><name pos:start="43:21" pos:end="43:25">yblen</name> <operator pos:start="43:27" pos:end="43:27">=</operator> <call pos:start="43:29" pos:end="43:50"><name pos:start="43:29" pos:end="43:46">svq3_get_ue_golomb</name><argument_list pos:start="43:47" pos:end="43:50">(<argument pos:start="43:48" pos:end="43:49"><expr pos:start="43:48" pos:end="43:49"><name pos:start="43:48" pos:end="43:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:51"><expr pos:start="45:9" pos:end="45:50"><name pos:start="45:9" pos:end="45:19"><name pos:start="45:9" pos:end="45:9">s</name><operator pos:start="45:10" pos:end="45:11">-&gt;</operator><name pos:start="45:12" pos:end="45:16">plane</name><index pos:start="45:17" pos:end="45:19">[<expr pos:start="45:18" pos:end="45:18"><literal type="number" pos:start="45:18" pos:end="45:18">0</literal></expr>]</index></name><operator pos:start="45:20" pos:end="45:20">.</operator><name pos:start="45:21" pos:end="45:25">xbsep</name> <operator pos:start="45:27" pos:end="45:27">=</operator> <call pos:start="45:29" pos:end="45:50"><name pos:start="45:29" pos:end="45:46">svq3_get_ue_golomb</name><argument_list pos:start="45:47" pos:end="45:50">(<argument pos:start="45:48" pos:end="45:49"><expr pos:start="45:48" pos:end="45:49"><name pos:start="45:48" pos:end="45:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:51"><expr pos:start="47:9" pos:end="47:50"><name pos:start="47:9" pos:end="47:19"><name pos:start="47:9" pos:end="47:9">s</name><operator pos:start="47:10" pos:end="47:11">-&gt;</operator><name pos:start="47:12" pos:end="47:16">plane</name><index pos:start="47:17" pos:end="47:19">[<expr pos:start="47:18" pos:end="47:18"><literal type="number" pos:start="47:18" pos:end="47:18">0</literal></expr>]</index></name><operator pos:start="47:20" pos:end="47:20">.</operator><name pos:start="47:21" pos:end="47:25">ybsep</name> <operator pos:start="47:27" pos:end="47:27">=</operator> <call pos:start="47:29" pos:end="47:50"><name pos:start="47:29" pos:end="47:46">svq3_get_ue_golomb</name><argument_list pos:start="47:47" pos:end="47:50">(<argument pos:start="47:48" pos:end="47:49"><expr pos:start="47:48" pos:end="47:49"><name pos:start="47:48" pos:end="47:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="49:7" pos:end="61:5">else <block pos:start="49:12" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:48">

        <comment type="block" pos:start="51:9" pos:end="51:63">/*[DIRAC_STD] preset_block_params(index). Table 11.1 */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:48"><expr pos:start="53:9" pos:end="53:47"><name pos:start="53:9" pos:end="53:19"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:16">plane</name><index pos:start="53:17" pos:end="53:19">[<expr pos:start="53:18" pos:end="53:18"><literal type="number" pos:start="53:18" pos:end="53:18">0</literal></expr>]</index></name><operator pos:start="53:20" pos:end="53:20">.</operator><name pos:start="53:21" pos:end="53:25">xblen</name> <operator pos:start="53:27" pos:end="53:27">=</operator> <name pos:start="53:29" pos:end="53:47"><name pos:start="53:29" pos:end="53:40">default_blen</name><index pos:start="53:41" pos:end="53:47">[<expr pos:start="53:42" pos:end="53:46"><name pos:start="53:42" pos:end="53:44">idx</name><operator pos:start="53:45" pos:end="53:45">-</operator><literal type="number" pos:start="53:46" pos:end="53:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:48"><expr pos:start="55:9" pos:end="55:47"><name pos:start="55:9" pos:end="55:19"><name pos:start="55:9" pos:end="55:9">s</name><operator pos:start="55:10" pos:end="55:11">-&gt;</operator><name pos:start="55:12" pos:end="55:16">plane</name><index pos:start="55:17" pos:end="55:19">[<expr pos:start="55:18" pos:end="55:18"><literal type="number" pos:start="55:18" pos:end="55:18">0</literal></expr>]</index></name><operator pos:start="55:20" pos:end="55:20">.</operator><name pos:start="55:21" pos:end="55:25">yblen</name> <operator pos:start="55:27" pos:end="55:27">=</operator> <name pos:start="55:29" pos:end="55:47"><name pos:start="55:29" pos:end="55:40">default_blen</name><index pos:start="55:41" pos:end="55:47">[<expr pos:start="55:42" pos:end="55:46"><name pos:start="55:42" pos:end="55:44">idx</name><operator pos:start="55:45" pos:end="55:45">-</operator><literal type="number" pos:start="55:46" pos:end="55:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:48"><expr pos:start="57:9" pos:end="57:47"><name pos:start="57:9" pos:end="57:19"><name pos:start="57:9" pos:end="57:9">s</name><operator pos:start="57:10" pos:end="57:11">-&gt;</operator><name pos:start="57:12" pos:end="57:16">plane</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">0</literal></expr>]</index></name><operator pos:start="57:20" pos:end="57:20">.</operator><name pos:start="57:21" pos:end="57:25">xbsep</name> <operator pos:start="57:27" pos:end="57:27">=</operator> <name pos:start="57:29" pos:end="57:47"><name pos:start="57:29" pos:end="57:40">default_bsep</name><index pos:start="57:41" pos:end="57:47">[<expr pos:start="57:42" pos:end="57:46"><name pos:start="57:42" pos:end="57:44">idx</name><operator pos:start="57:45" pos:end="57:45">-</operator><literal type="number" pos:start="57:46" pos:end="57:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:48"><expr pos:start="59:9" pos:end="59:47"><name pos:start="59:9" pos:end="59:19"><name pos:start="59:9" pos:end="59:9">s</name><operator pos:start="59:10" pos:end="59:11">-&gt;</operator><name pos:start="59:12" pos:end="59:16">plane</name><index pos:start="59:17" pos:end="59:19">[<expr pos:start="59:18" pos:end="59:18"><literal type="number" pos:start="59:18" pos:end="59:18">0</literal></expr>]</index></name><operator pos:start="59:20" pos:end="59:20">.</operator><name pos:start="59:21" pos:end="59:25">ybsep</name> <operator pos:start="59:27" pos:end="59:27">=</operator> <name pos:start="59:29" pos:end="59:47"><name pos:start="59:29" pos:end="59:40">default_bsep</name><index pos:start="59:41" pos:end="59:47">[<expr pos:start="59:42" pos:end="59:46"><name pos:start="59:42" pos:end="59:44">idx</name><operator pos:start="59:45" pos:end="59:45">-</operator><literal type="number" pos:start="59:46" pos:end="59:46">1</literal></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <comment type="block" pos:start="63:5" pos:end="65:62">/*[DIRAC_STD] 11.2.4 motion_data_dimensions()

      Calculated in function dirac_unpack_block_motion_data */</comment>



    <if_stmt pos:start="69:5" pos:end="75:5"><if pos:start="69:5" pos:end="75:5">if <condition pos:start="69:8" pos:end="69:91">(<expr pos:start="69:9" pos:end="69:90"><name pos:start="69:9" pos:end="69:19"><name pos:start="69:9" pos:end="69:9">s</name><operator pos:start="69:10" pos:end="69:11">-&gt;</operator><name pos:start="69:12" pos:end="69:16">plane</name><index pos:start="69:17" pos:end="69:19">[<expr pos:start="69:18" pos:end="69:18"><literal type="number" pos:start="69:18" pos:end="69:18">0</literal></expr>]</index></name><operator pos:start="69:20" pos:end="69:20">.</operator><name pos:start="69:21" pos:end="69:25">xbsep</name> <operator pos:start="69:27" pos:end="69:27">&lt;</operator> <name pos:start="69:29" pos:end="69:39"><name pos:start="69:29" pos:end="69:29">s</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:36">plane</name><index pos:start="69:37" pos:end="69:39">[<expr pos:start="69:38" pos:end="69:38"><literal type="number" pos:start="69:38" pos:end="69:38">0</literal></expr>]</index></name><operator pos:start="69:40" pos:end="69:40">.</operator><name pos:start="69:41" pos:end="69:45">xblen</name><operator pos:start="69:46" pos:end="69:46">/</operator><literal type="number" pos:start="69:47" pos:end="69:47">2</literal> <operator pos:start="69:49" pos:end="69:50">||</operator> <name pos:start="69:52" pos:end="69:62"><name pos:start="69:52" pos:end="69:52">s</name><operator pos:start="69:53" pos:end="69:54">-&gt;</operator><name pos:start="69:55" pos:end="69:59">plane</name><index pos:start="69:60" pos:end="69:62">[<expr pos:start="69:61" pos:end="69:61"><literal type="number" pos:start="69:61" pos:end="69:61">0</literal></expr>]</index></name><operator pos:start="69:63" pos:end="69:63">.</operator><name pos:start="69:64" pos:end="69:68">ybsep</name> <operator pos:start="69:70" pos:end="69:70">&lt;</operator> <name pos:start="69:72" pos:end="69:82"><name pos:start="69:72" pos:end="69:72">s</name><operator pos:start="69:73" pos:end="69:74">-&gt;</operator><name pos:start="69:75" pos:end="69:79">plane</name><index pos:start="69:80" pos:end="69:82">[<expr pos:start="69:81" pos:end="69:81"><literal type="number" pos:start="69:81" pos:end="69:81">0</literal></expr>]</index></name><operator pos:start="69:83" pos:end="69:83">.</operator><name pos:start="69:84" pos:end="69:88">yblen</name><operator pos:start="69:89" pos:end="69:89">/</operator><literal type="number" pos:start="69:90" pos:end="69:90">2</literal></expr>)</condition> <block pos:start="69:93" pos:end="75:5">{<block_content pos:start="71:9" pos:end="73:18">

        <expr_stmt pos:start="71:9" pos:end="71:71"><expr pos:start="71:9" pos:end="71:70"><call pos:start="71:9" pos:end="71:70"><name pos:start="71:9" pos:end="71:14">av_log</name><argument_list pos:start="71:15" pos:end="71:70">(<argument pos:start="71:16" pos:end="71:23"><expr pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:23"><name pos:start="71:16" pos:end="71:16">s</name><operator pos:start="71:17" pos:end="71:18">-&gt;</operator><name pos:start="71:19" pos:end="71:23">avctx</name></name></expr></argument>, <argument pos:start="71:26" pos:end="71:37"><expr pos:start="71:26" pos:end="71:37"><name pos:start="71:26" pos:end="71:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="71:40" pos:end="71:69"><expr pos:start="71:40" pos:end="71:69"><literal type="string" pos:start="71:40" pos:end="71:69">"Block separation too small\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="73:9" pos:end="73:18">return <expr pos:start="73:16" pos:end="73:17"><operator pos:start="73:16" pos:end="73:16">-</operator><literal type="number" pos:start="73:17" pos:end="73:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="77:5" pos:end="83:5"><if pos:start="77:5" pos:end="83:5">if <condition pos:start="77:8" pos:end="77:87">(<expr pos:start="77:9" pos:end="77:86"><name pos:start="77:9" pos:end="77:19"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:16">plane</name><index pos:start="77:17" pos:end="77:19">[<expr pos:start="77:18" pos:end="77:18"><literal type="number" pos:start="77:18" pos:end="77:18">0</literal></expr>]</index></name><operator pos:start="77:20" pos:end="77:20">.</operator><name pos:start="77:21" pos:end="77:25">xbsep</name> <operator pos:start="77:27" pos:end="77:27">&gt;</operator> <name pos:start="77:29" pos:end="77:39"><name pos:start="77:29" pos:end="77:29">s</name><operator pos:start="77:30" pos:end="77:31">-&gt;</operator><name pos:start="77:32" pos:end="77:36">plane</name><index pos:start="77:37" pos:end="77:39">[<expr pos:start="77:38" pos:end="77:38"><literal type="number" pos:start="77:38" pos:end="77:38">0</literal></expr>]</index></name><operator pos:start="77:40" pos:end="77:40">.</operator><name pos:start="77:41" pos:end="77:45">xblen</name> <operator pos:start="77:47" pos:end="77:48">||</operator> <name pos:start="77:50" pos:end="77:60"><name pos:start="77:50" pos:end="77:50">s</name><operator pos:start="77:51" pos:end="77:52">-&gt;</operator><name pos:start="77:53" pos:end="77:57">plane</name><index pos:start="77:58" pos:end="77:60">[<expr pos:start="77:59" pos:end="77:59"><literal type="number" pos:start="77:59" pos:end="77:59">0</literal></expr>]</index></name><operator pos:start="77:61" pos:end="77:61">.</operator><name pos:start="77:62" pos:end="77:66">ybsep</name> <operator pos:start="77:68" pos:end="77:68">&gt;</operator> <name pos:start="77:70" pos:end="77:80"><name pos:start="77:70" pos:end="77:70">s</name><operator pos:start="77:71" pos:end="77:72">-&gt;</operator><name pos:start="77:73" pos:end="77:77">plane</name><index pos:start="77:78" pos:end="77:80">[<expr pos:start="77:79" pos:end="77:79"><literal type="number" pos:start="77:79" pos:end="77:79">0</literal></expr>]</index></name><operator pos:start="77:81" pos:end="77:81">.</operator><name pos:start="77:82" pos:end="77:86">yblen</name></expr>)</condition> <block pos:start="77:89" pos:end="83:5">{<block_content pos:start="79:9" pos:end="81:18">

        <expr_stmt pos:start="79:9" pos:end="79:79"><expr pos:start="79:9" pos:end="79:78"><call pos:start="79:9" pos:end="79:78"><name pos:start="79:9" pos:end="79:14">av_log</name><argument_list pos:start="79:15" pos:end="79:78">(<argument pos:start="79:16" pos:end="79:23"><expr pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:23"><name pos:start="79:16" pos:end="79:16">s</name><operator pos:start="79:17" pos:end="79:18">-&gt;</operator><name pos:start="79:19" pos:end="79:23">avctx</name></name></expr></argument>, <argument pos:start="79:26" pos:end="79:37"><expr pos:start="79:26" pos:end="79:37"><name pos:start="79:26" pos:end="79:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="79:40" pos:end="79:77"><expr pos:start="79:40" pos:end="79:77"><literal type="string" pos:start="79:40" pos:end="79:77">"Block seperation greater than size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="81:9" pos:end="81:18">return <expr pos:start="81:16" pos:end="81:17"><operator pos:start="81:16" pos:end="81:16">-</operator><literal type="number" pos:start="81:17" pos:end="81:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="85:5" pos:end="91:5"><if pos:start="85:5" pos:end="91:5">if <condition pos:start="85:8" pos:end="85:68">(<expr pos:start="85:9" pos:end="85:67"><call pos:start="85:9" pos:end="85:51"><name pos:start="85:9" pos:end="85:13">FFMAX</name><argument_list pos:start="85:14" pos:end="85:51">(<argument pos:start="85:15" pos:end="85:31"><expr pos:start="85:15" pos:end="85:31"><name pos:start="85:15" pos:end="85:25"><name pos:start="85:15" pos:end="85:15">s</name><operator pos:start="85:16" pos:end="85:17">-&gt;</operator><name pos:start="85:18" pos:end="85:22">plane</name><index pos:start="85:23" pos:end="85:25">[<expr pos:start="85:24" pos:end="85:24"><literal type="number" pos:start="85:24" pos:end="85:24">0</literal></expr>]</index></name><operator pos:start="85:26" pos:end="85:26">.</operator><name pos:start="85:27" pos:end="85:31">xblen</name></expr></argument>, <argument pos:start="85:34" pos:end="85:50"><expr pos:start="85:34" pos:end="85:50"><name pos:start="85:34" pos:end="85:44"><name pos:start="85:34" pos:end="85:34">s</name><operator pos:start="85:35" pos:end="85:36">-&gt;</operator><name pos:start="85:37" pos:end="85:41">plane</name><index pos:start="85:42" pos:end="85:44">[<expr pos:start="85:43" pos:end="85:43"><literal type="number" pos:start="85:43" pos:end="85:43">0</literal></expr>]</index></name><operator pos:start="85:45" pos:end="85:45">.</operator><name pos:start="85:46" pos:end="85:50">yblen</name></expr></argument>)</argument_list></call> <operator pos:start="85:53" pos:end="85:53">&gt;</operator> <name pos:start="85:55" pos:end="85:67">MAX_BLOCKSIZE</name></expr>)</condition> <block pos:start="85:70" pos:end="91:5">{<block_content pos:start="87:9" pos:end="89:18">

        <expr_stmt pos:start="87:9" pos:end="87:73"><expr pos:start="87:9" pos:end="87:72"><call pos:start="87:9" pos:end="87:72"><name pos:start="87:9" pos:end="87:14">av_log</name><argument_list pos:start="87:15" pos:end="87:72">(<argument pos:start="87:16" pos:end="87:23"><expr pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:23"><name pos:start="87:16" pos:end="87:16">s</name><operator pos:start="87:17" pos:end="87:18">-&gt;</operator><name pos:start="87:19" pos:end="87:23">avctx</name></name></expr></argument>, <argument pos:start="87:26" pos:end="87:37"><expr pos:start="87:26" pos:end="87:37"><name pos:start="87:26" pos:end="87:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="87:40" pos:end="87:71"><expr pos:start="87:40" pos:end="87:71"><literal type="string" pos:start="87:40" pos:end="87:71">"Unsupported large block size\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="89:9" pos:end="89:18">return <expr pos:start="89:16" pos:end="89:17"><operator pos:start="89:16" pos:end="89:16">-</operator><literal type="number" pos:start="89:17" pos:end="89:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="95:5" pos:end="97:37">/*[DIRAC_STD] 11.2.5 Motion vector precision. motion_vector_precision()

      Read motion vector precision */</comment>

    <expr_stmt pos:start="99:5" pos:end="99:45"><expr pos:start="99:5" pos:end="99:44"><name pos:start="99:5" pos:end="99:19"><name pos:start="99:5" pos:end="99:5">s</name><operator pos:start="99:6" pos:end="99:7">-&gt;</operator><name pos:start="99:8" pos:end="99:19">mv_precision</name></name> <operator pos:start="99:21" pos:end="99:21">=</operator> <call pos:start="99:23" pos:end="99:44"><name pos:start="99:23" pos:end="99:40">svq3_get_ue_golomb</name><argument_list pos:start="99:41" pos:end="99:44">(<argument pos:start="99:42" pos:end="99:43"><expr pos:start="99:42" pos:end="99:43"><name pos:start="99:42" pos:end="99:43">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="101:5" pos:end="107:5"><if pos:start="101:5" pos:end="107:5">if <condition pos:start="101:8" pos:end="101:28">(<expr pos:start="101:9" pos:end="101:27"><name pos:start="101:9" pos:end="101:23"><name pos:start="101:9" pos:end="101:9">s</name><operator pos:start="101:10" pos:end="101:11">-&gt;</operator><name pos:start="101:12" pos:end="101:23">mv_precision</name></name> <operator pos:start="101:25" pos:end="101:25">&gt;</operator> <literal type="number" pos:start="101:27" pos:end="101:27">3</literal></expr>)</condition> <block pos:start="101:30" pos:end="107:5">{<block_content pos:start="103:9" pos:end="105:18">

        <expr_stmt pos:start="103:9" pos:end="103:79"><expr pos:start="103:9" pos:end="103:78"><call pos:start="103:9" pos:end="103:78"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="103:78">(<argument pos:start="103:16" pos:end="103:23"><expr pos:start="103:16" pos:end="103:23"><name pos:start="103:16" pos:end="103:23"><name pos:start="103:16" pos:end="103:16">s</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:23">avctx</name></name></expr></argument>, <argument pos:start="103:26" pos:end="103:37"><expr pos:start="103:26" pos:end="103:37"><name pos:start="103:26" pos:end="103:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="103:40" pos:end="103:77"><expr pos:start="103:40" pos:end="103:77"><literal type="string" pos:start="103:40" pos:end="103:77">"MV precision finer than eighth-pel\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="105:9" pos:end="105:18">return <expr pos:start="105:16" pos:end="105:17"><operator pos:start="105:16" pos:end="105:16">-</operator><literal type="number" pos:start="105:17" pos:end="105:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="111:5" pos:end="113:55">/*[DIRAC_STD] 11.2.6 Global motion. global_motion()

      Read the global motion compensation parameters */</comment>

    <expr_stmt pos:start="115:5" pos:end="115:37"><expr pos:start="115:5" pos:end="115:36"><name pos:start="115:5" pos:end="115:20"><name pos:start="115:5" pos:end="115:5">s</name><operator pos:start="115:6" pos:end="115:7">-&gt;</operator><name pos:start="115:8" pos:end="115:20">globalmc_flag</name></name> <operator pos:start="115:22" pos:end="115:22">=</operator> <call pos:start="115:24" pos:end="115:36"><name pos:start="115:24" pos:end="115:32">get_bits1</name><argument_list pos:start="115:33" pos:end="115:36">(<argument pos:start="115:34" pos:end="115:35"><expr pos:start="115:34" pos:end="115:35"><name pos:start="115:34" pos:end="115:35">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="117:5" pos:end="171:5"><if pos:start="117:5" pos:end="171:5">if <condition pos:start="117:8" pos:end="117:25">(<expr pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:24"><name pos:start="117:9" pos:end="117:9">s</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:24">globalmc_flag</name></name></expr>)</condition> <block pos:start="117:27" pos:end="171:5">{<block_content pos:start="119:9" pos:end="169:9">

        <expr_stmt pos:start="119:9" pos:end="119:52"><expr pos:start="119:9" pos:end="119:51"><call pos:start="119:9" pos:end="119:51"><name pos:start="119:9" pos:end="119:14">memset</name><argument_list pos:start="119:15" pos:end="119:51">(<argument pos:start="119:16" pos:end="119:26"><expr pos:start="119:16" pos:end="119:26"><name pos:start="119:16" pos:end="119:26"><name pos:start="119:16" pos:end="119:16">s</name><operator pos:start="119:17" pos:end="119:18">-&gt;</operator><name pos:start="119:19" pos:end="119:26">globalmc</name></name></expr></argument>, <argument pos:start="119:29" pos:end="119:29"><expr pos:start="119:29" pos:end="119:29"><literal type="number" pos:start="119:29" pos:end="119:29">0</literal></expr></argument>, <argument pos:start="119:32" pos:end="119:50"><expr pos:start="119:32" pos:end="119:50"><sizeof pos:start="119:32" pos:end="119:50">sizeof<argument_list pos:start="119:38" pos:end="119:50">(<argument pos:start="119:39" pos:end="119:49"><expr pos:start="119:39" pos:end="119:49"><name pos:start="119:39" pos:end="119:49"><name pos:start="119:39" pos:end="119:39">s</name><operator pos:start="119:40" pos:end="119:41">-&gt;</operator><name pos:start="119:42" pos:end="119:49">globalmc</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <comment type="block" pos:start="121:9" pos:end="121:43">/* [DIRAC_STD] pan_tilt(gparams) */</comment>

        <for pos:start="123:9" pos:end="169:9">for <control pos:start="123:13" pos:end="123:47">(<init pos:start="123:14" pos:end="123:21"><expr pos:start="123:14" pos:end="123:20"><name pos:start="123:14" pos:end="123:16">ref</name> <operator pos:start="123:18" pos:end="123:18">=</operator> <literal type="number" pos:start="123:20" pos:end="123:20">0</literal></expr>;</init> <condition pos:start="123:23" pos:end="123:40"><expr pos:start="123:23" pos:end="123:39"><name pos:start="123:23" pos:end="123:25">ref</name> <operator pos:start="123:27" pos:end="123:27">&lt;</operator> <name pos:start="123:29" pos:end="123:39"><name pos:start="123:29" pos:end="123:29">s</name><operator pos:start="123:30" pos:end="123:31">-&gt;</operator><name pos:start="123:32" pos:end="123:39">num_refs</name></name></expr>;</condition> <incr pos:start="123:42" pos:end="123:46"><expr pos:start="123:42" pos:end="123:46"><name pos:start="123:42" pos:end="123:44">ref</name><operator pos:start="123:45" pos:end="123:46">++</operator></expr></incr>)</control> <block pos:start="123:49" pos:end="169:9">{<block_content pos:start="125:13" pos:end="167:13">

            <if_stmt pos:start="125:13" pos:end="131:13"><if pos:start="125:13" pos:end="131:13">if <condition pos:start="125:16" pos:end="125:30">(<expr pos:start="125:17" pos:end="125:29"><call pos:start="125:17" pos:end="125:29"><name pos:start="125:17" pos:end="125:25">get_bits1</name><argument_list pos:start="125:26" pos:end="125:29">(<argument pos:start="125:27" pos:end="125:28"><expr pos:start="125:27" pos:end="125:28"><name pos:start="125:27" pos:end="125:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="125:32" pos:end="131:13">{<block_content pos:start="127:17" pos:end="129:71">

                <expr_stmt pos:start="127:17" pos:end="127:71"><expr pos:start="127:17" pos:end="127:70"><name pos:start="127:17" pos:end="127:32"><name pos:start="127:17" pos:end="127:17">s</name><operator pos:start="127:18" pos:end="127:19">-&gt;</operator><name pos:start="127:20" pos:end="127:27">globalmc</name><index pos:start="127:28" pos:end="127:32">[<expr pos:start="127:29" pos:end="127:31"><name pos:start="127:29" pos:end="127:31">ref</name></expr>]</index></name><operator pos:start="127:33" pos:end="127:33">.</operator><name pos:start="127:34" pos:end="127:44"><name pos:start="127:34" pos:end="127:41">pan_tilt</name><index pos:start="127:42" pos:end="127:44">[<expr pos:start="127:43" pos:end="127:43"><literal type="number" pos:start="127:43" pos:end="127:43">0</literal></expr>]</index></name> <operator pos:start="127:46" pos:end="127:46">=</operator> <call pos:start="127:48" pos:end="127:70"><name pos:start="127:48" pos:end="127:66">dirac_get_se_golomb</name><argument_list pos:start="127:67" pos:end="127:70">(<argument pos:start="127:68" pos:end="127:69"><expr pos:start="127:68" pos:end="127:69"><name pos:start="127:68" pos:end="127:69">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="129:17" pos:end="129:71"><expr pos:start="129:17" pos:end="129:70"><name pos:start="129:17" pos:end="129:32"><name pos:start="129:17" pos:end="129:17">s</name><operator pos:start="129:18" pos:end="129:19">-&gt;</operator><name pos:start="129:20" pos:end="129:27">globalmc</name><index pos:start="129:28" pos:end="129:32">[<expr pos:start="129:29" pos:end="129:31"><name pos:start="129:29" pos:end="129:31">ref</name></expr>]</index></name><operator pos:start="129:33" pos:end="129:33">.</operator><name pos:start="129:34" pos:end="129:44"><name pos:start="129:34" pos:end="129:41">pan_tilt</name><index pos:start="129:42" pos:end="129:44">[<expr pos:start="129:43" pos:end="129:43"><literal type="number" pos:start="129:43" pos:end="129:43">1</literal></expr>]</index></name> <operator pos:start="129:46" pos:end="129:46">=</operator> <call pos:start="129:48" pos:end="129:70"><name pos:start="129:48" pos:end="129:66">dirac_get_se_golomb</name><argument_list pos:start="129:67" pos:end="129:70">(<argument pos:start="129:68" pos:end="129:69"><expr pos:start="129:68" pos:end="129:69"><name pos:start="129:68" pos:end="129:69">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <comment type="block" pos:start="133:13" pos:end="135:48">/* [DIRAC_STD] zoom_rotate_shear(gparams)

               zoom/rotation/shear parameters */</comment>

            <if_stmt pos:start="137:13" pos:end="155:13"><if pos:start="137:13" pos:end="149:13">if <condition pos:start="137:16" pos:end="137:30">(<expr pos:start="137:17" pos:end="137:29"><call pos:start="137:17" pos:end="137:29"><name pos:start="137:17" pos:end="137:25">get_bits1</name><argument_list pos:start="137:26" pos:end="137:29">(<argument pos:start="137:27" pos:end="137:28"><expr pos:start="137:27" pos:end="137:28"><name pos:start="137:27" pos:end="137:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="137:32" pos:end="149:13">{<block_content pos:start="139:17" pos:end="147:69">

                <expr_stmt pos:start="139:17" pos:end="139:68"><expr pos:start="139:17" pos:end="139:67"><name pos:start="139:17" pos:end="139:32"><name pos:start="139:17" pos:end="139:17">s</name><operator pos:start="139:18" pos:end="139:19">-&gt;</operator><name pos:start="139:20" pos:end="139:27">globalmc</name><index pos:start="139:28" pos:end="139:32">[<expr pos:start="139:29" pos:end="139:31"><name pos:start="139:29" pos:end="139:31">ref</name></expr>]</index></name><operator pos:start="139:33" pos:end="139:33">.</operator><name pos:start="139:34" pos:end="139:40">zrs_exp</name>   <operator pos:start="139:44" pos:end="139:44">=</operator> <call pos:start="139:46" pos:end="139:67"><name pos:start="139:46" pos:end="139:63">svq3_get_ue_golomb</name><argument_list pos:start="139:64" pos:end="139:67">(<argument pos:start="139:65" pos:end="139:66"><expr pos:start="139:65" pos:end="139:66"><name pos:start="139:65" pos:end="139:66">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="141:17" pos:end="141:69"><expr pos:start="141:17" pos:end="141:68"><name pos:start="141:17" pos:end="141:32"><name pos:start="141:17" pos:end="141:17">s</name><operator pos:start="141:18" pos:end="141:19">-&gt;</operator><name pos:start="141:20" pos:end="141:27">globalmc</name><index pos:start="141:28" pos:end="141:32">[<expr pos:start="141:29" pos:end="141:31"><name pos:start="141:29" pos:end="141:31">ref</name></expr>]</index></name><operator pos:start="141:33" pos:end="141:33">.</operator><name pos:start="141:34" pos:end="141:42"><name pos:start="141:34" pos:end="141:36">zrs</name><index pos:start="141:37" pos:end="141:39">[<expr pos:start="141:38" pos:end="141:38"><literal type="number" pos:start="141:38" pos:end="141:38">0</literal></expr>]</index><index pos:start="141:40" pos:end="141:42">[<expr pos:start="141:41" pos:end="141:41"><literal type="number" pos:start="141:41" pos:end="141:41">0</literal></expr>]</index></name> <operator pos:start="141:44" pos:end="141:44">=</operator> <call pos:start="141:46" pos:end="141:68"><name pos:start="141:46" pos:end="141:64">dirac_get_se_golomb</name><argument_list pos:start="141:65" pos:end="141:68">(<argument pos:start="141:66" pos:end="141:67"><expr pos:start="141:66" pos:end="141:67"><name pos:start="141:66" pos:end="141:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="143:17" pos:end="143:69"><expr pos:start="143:17" pos:end="143:68"><name pos:start="143:17" pos:end="143:32"><name pos:start="143:17" pos:end="143:17">s</name><operator pos:start="143:18" pos:end="143:19">-&gt;</operator><name pos:start="143:20" pos:end="143:27">globalmc</name><index pos:start="143:28" pos:end="143:32">[<expr pos:start="143:29" pos:end="143:31"><name pos:start="143:29" pos:end="143:31">ref</name></expr>]</index></name><operator pos:start="143:33" pos:end="143:33">.</operator><name pos:start="143:34" pos:end="143:42"><name pos:start="143:34" pos:end="143:36">zrs</name><index pos:start="143:37" pos:end="143:39">[<expr pos:start="143:38" pos:end="143:38"><literal type="number" pos:start="143:38" pos:end="143:38">0</literal></expr>]</index><index pos:start="143:40" pos:end="143:42">[<expr pos:start="143:41" pos:end="143:41"><literal type="number" pos:start="143:41" pos:end="143:41">1</literal></expr>]</index></name> <operator pos:start="143:44" pos:end="143:44">=</operator> <call pos:start="143:46" pos:end="143:68"><name pos:start="143:46" pos:end="143:64">dirac_get_se_golomb</name><argument_list pos:start="143:65" pos:end="143:68">(<argument pos:start="143:66" pos:end="143:67"><expr pos:start="143:66" pos:end="143:67"><name pos:start="143:66" pos:end="143:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="145:17" pos:end="145:69"><expr pos:start="145:17" pos:end="145:68"><name pos:start="145:17" pos:end="145:32"><name pos:start="145:17" pos:end="145:17">s</name><operator pos:start="145:18" pos:end="145:19">-&gt;</operator><name pos:start="145:20" pos:end="145:27">globalmc</name><index pos:start="145:28" pos:end="145:32">[<expr pos:start="145:29" pos:end="145:31"><name pos:start="145:29" pos:end="145:31">ref</name></expr>]</index></name><operator pos:start="145:33" pos:end="145:33">.</operator><name pos:start="145:34" pos:end="145:42"><name pos:start="145:34" pos:end="145:36">zrs</name><index pos:start="145:37" pos:end="145:39">[<expr pos:start="145:38" pos:end="145:38"><literal type="number" pos:start="145:38" pos:end="145:38">1</literal></expr>]</index><index pos:start="145:40" pos:end="145:42">[<expr pos:start="145:41" pos:end="145:41"><literal type="number" pos:start="145:41" pos:end="145:41">0</literal></expr>]</index></name> <operator pos:start="145:44" pos:end="145:44">=</operator> <call pos:start="145:46" pos:end="145:68"><name pos:start="145:46" pos:end="145:64">dirac_get_se_golomb</name><argument_list pos:start="145:65" pos:end="145:68">(<argument pos:start="145:66" pos:end="145:67"><expr pos:start="145:66" pos:end="145:67"><name pos:start="145:66" pos:end="145:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="147:17" pos:end="147:69"><expr pos:start="147:17" pos:end="147:68"><name pos:start="147:17" pos:end="147:32"><name pos:start="147:17" pos:end="147:17">s</name><operator pos:start="147:18" pos:end="147:19">-&gt;</operator><name pos:start="147:20" pos:end="147:27">globalmc</name><index pos:start="147:28" pos:end="147:32">[<expr pos:start="147:29" pos:end="147:31"><name pos:start="147:29" pos:end="147:31">ref</name></expr>]</index></name><operator pos:start="147:33" pos:end="147:33">.</operator><name pos:start="147:34" pos:end="147:42"><name pos:start="147:34" pos:end="147:36">zrs</name><index pos:start="147:37" pos:end="147:39">[<expr pos:start="147:38" pos:end="147:38"><literal type="number" pos:start="147:38" pos:end="147:38">1</literal></expr>]</index><index pos:start="147:40" pos:end="147:42">[<expr pos:start="147:41" pos:end="147:41"><literal type="number" pos:start="147:41" pos:end="147:41">1</literal></expr>]</index></name> <operator pos:start="147:44" pos:end="147:44">=</operator> <call pos:start="147:46" pos:end="147:68"><name pos:start="147:46" pos:end="147:64">dirac_get_se_golomb</name><argument_list pos:start="147:65" pos:end="147:68">(<argument pos:start="147:66" pos:end="147:67"><expr pos:start="147:66" pos:end="147:67"><name pos:start="147:66" pos:end="147:67">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="149:15" pos:end="155:13">else <block pos:start="149:20" pos:end="155:13">{<block_content pos:start="151:17" pos:end="153:47">

                <expr_stmt pos:start="151:17" pos:end="151:47"><expr pos:start="151:17" pos:end="151:46"><name pos:start="151:17" pos:end="151:32"><name pos:start="151:17" pos:end="151:17">s</name><operator pos:start="151:18" pos:end="151:19">-&gt;</operator><name pos:start="151:20" pos:end="151:27">globalmc</name><index pos:start="151:28" pos:end="151:32">[<expr pos:start="151:29" pos:end="151:31"><name pos:start="151:29" pos:end="151:31">ref</name></expr>]</index></name><operator pos:start="151:33" pos:end="151:33">.</operator><name pos:start="151:34" pos:end="151:42"><name pos:start="151:34" pos:end="151:36">zrs</name><index pos:start="151:37" pos:end="151:39">[<expr pos:start="151:38" pos:end="151:38"><literal type="number" pos:start="151:38" pos:end="151:38">0</literal></expr>]</index><index pos:start="151:40" pos:end="151:42">[<expr pos:start="151:41" pos:end="151:41"><literal type="number" pos:start="151:41" pos:end="151:41">0</literal></expr>]</index></name> <operator pos:start="151:44" pos:end="151:44">=</operator> <literal type="number" pos:start="151:46" pos:end="151:46">1</literal></expr>;</expr_stmt>

                <expr_stmt pos:start="153:17" pos:end="153:47"><expr pos:start="153:17" pos:end="153:46"><name pos:start="153:17" pos:end="153:32"><name pos:start="153:17" pos:end="153:17">s</name><operator pos:start="153:18" pos:end="153:19">-&gt;</operator><name pos:start="153:20" pos:end="153:27">globalmc</name><index pos:start="153:28" pos:end="153:32">[<expr pos:start="153:29" pos:end="153:31"><name pos:start="153:29" pos:end="153:31">ref</name></expr>]</index></name><operator pos:start="153:33" pos:end="153:33">.</operator><name pos:start="153:34" pos:end="153:42"><name pos:start="153:34" pos:end="153:36">zrs</name><index pos:start="153:37" pos:end="153:39">[<expr pos:start="153:38" pos:end="153:38"><literal type="number" pos:start="153:38" pos:end="153:38">1</literal></expr>]</index><index pos:start="153:40" pos:end="153:42">[<expr pos:start="153:41" pos:end="153:41"><literal type="number" pos:start="153:41" pos:end="153:41">1</literal></expr>]</index></name> <operator pos:start="153:44" pos:end="153:44">=</operator> <literal type="number" pos:start="153:46" pos:end="153:46">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

            <comment type="block" pos:start="157:13" pos:end="157:50">/* [DIRAC_STD] perspective(gparams) */</comment>

            <if_stmt pos:start="159:13" pos:end="167:13"><if pos:start="159:13" pos:end="167:13">if <condition pos:start="159:16" pos:end="159:30">(<expr pos:start="159:17" pos:end="159:29"><call pos:start="159:17" pos:end="159:29"><name pos:start="159:17" pos:end="159:25">get_bits1</name><argument_list pos:start="159:26" pos:end="159:29">(<argument pos:start="159:27" pos:end="159:28"><expr pos:start="159:27" pos:end="159:28"><name pos:start="159:27" pos:end="159:28">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="159:32" pos:end="167:13">{<block_content pos:start="161:17" pos:end="165:75">

                <expr_stmt pos:start="161:17" pos:end="161:74"><expr pos:start="161:17" pos:end="161:73"><name pos:start="161:17" pos:end="161:32"><name pos:start="161:17" pos:end="161:17">s</name><operator pos:start="161:18" pos:end="161:19">-&gt;</operator><name pos:start="161:20" pos:end="161:27">globalmc</name><index pos:start="161:28" pos:end="161:32">[<expr pos:start="161:29" pos:end="161:31"><name pos:start="161:29" pos:end="161:31">ref</name></expr>]</index></name><operator pos:start="161:33" pos:end="161:33">.</operator><name pos:start="161:34" pos:end="161:48">perspective_exp</name> <operator pos:start="161:50" pos:end="161:50">=</operator> <call pos:start="161:52" pos:end="161:73"><name pos:start="161:52" pos:end="161:69">svq3_get_ue_golomb</name><argument_list pos:start="161:70" pos:end="161:73">(<argument pos:start="161:71" pos:end="161:72"><expr pos:start="161:71" pos:end="161:72"><name pos:start="161:71" pos:end="161:72">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="163:17" pos:end="163:75"><expr pos:start="163:17" pos:end="163:74"><name pos:start="163:17" pos:end="163:32"><name pos:start="163:17" pos:end="163:17">s</name><operator pos:start="163:18" pos:end="163:19">-&gt;</operator><name pos:start="163:20" pos:end="163:27">globalmc</name><index pos:start="163:28" pos:end="163:32">[<expr pos:start="163:29" pos:end="163:31"><name pos:start="163:29" pos:end="163:31">ref</name></expr>]</index></name><operator pos:start="163:33" pos:end="163:33">.</operator><name pos:start="163:34" pos:end="163:47"><name pos:start="163:34" pos:end="163:44">perspective</name><index pos:start="163:45" pos:end="163:47">[<expr pos:start="163:46" pos:end="163:46"><literal type="number" pos:start="163:46" pos:end="163:46">0</literal></expr>]</index></name>  <operator pos:start="163:50" pos:end="163:50">=</operator> <call pos:start="163:52" pos:end="163:74"><name pos:start="163:52" pos:end="163:70">dirac_get_se_golomb</name><argument_list pos:start="163:71" pos:end="163:74">(<argument pos:start="163:72" pos:end="163:73"><expr pos:start="163:72" pos:end="163:73"><name pos:start="163:72" pos:end="163:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="165:17" pos:end="165:75"><expr pos:start="165:17" pos:end="165:74"><name pos:start="165:17" pos:end="165:32"><name pos:start="165:17" pos:end="165:17">s</name><operator pos:start="165:18" pos:end="165:19">-&gt;</operator><name pos:start="165:20" pos:end="165:27">globalmc</name><index pos:start="165:28" pos:end="165:32">[<expr pos:start="165:29" pos:end="165:31"><name pos:start="165:29" pos:end="165:31">ref</name></expr>]</index></name><operator pos:start="165:33" pos:end="165:33">.</operator><name pos:start="165:34" pos:end="165:47"><name pos:start="165:34" pos:end="165:44">perspective</name><index pos:start="165:45" pos:end="165:47">[<expr pos:start="165:46" pos:end="165:46"><literal type="number" pos:start="165:46" pos:end="165:46">1</literal></expr>]</index></name>  <operator pos:start="165:50" pos:end="165:50">=</operator> <call pos:start="165:52" pos:end="165:74"><name pos:start="165:52" pos:end="165:70">dirac_get_se_golomb</name><argument_list pos:start="165:71" pos:end="165:74">(<argument pos:start="165:72" pos:end="165:73"><expr pos:start="165:72" pos:end="165:73"><name pos:start="165:72" pos:end="165:73">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></for>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="175:5" pos:end="177:53">/*[DIRAC_STD] 11.2.7 Picture prediction mode. prediction_mode()

      Picture prediction mode, not currently used. */</comment>

    <if_stmt pos:start="179:5" pos:end="185:5"><if pos:start="179:5" pos:end="185:5">if <condition pos:start="179:8" pos:end="179:31">(<expr pos:start="179:9" pos:end="179:30"><call pos:start="179:9" pos:end="179:30"><name pos:start="179:9" pos:end="179:26">svq3_get_ue_golomb</name><argument_list pos:start="179:27" pos:end="179:30">(<argument pos:start="179:28" pos:end="179:29"><expr pos:start="179:28" pos:end="179:29"><name pos:start="179:28" pos:end="179:29">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="179:33" pos:end="185:5">{<block_content pos:start="181:9" pos:end="183:18">

        <expr_stmt pos:start="181:9" pos:end="181:76"><expr pos:start="181:9" pos:end="181:75"><call pos:start="181:9" pos:end="181:75"><name pos:start="181:9" pos:end="181:14">av_log</name><argument_list pos:start="181:15" pos:end="181:75">(<argument pos:start="181:16" pos:end="181:23"><expr pos:start="181:16" pos:end="181:23"><name pos:start="181:16" pos:end="181:23"><name pos:start="181:16" pos:end="181:16">s</name><operator pos:start="181:17" pos:end="181:18">-&gt;</operator><name pos:start="181:19" pos:end="181:23">avctx</name></name></expr></argument>, <argument pos:start="181:26" pos:end="181:37"><expr pos:start="181:26" pos:end="181:37"><name pos:start="181:26" pos:end="181:37">AV_LOG_ERROR</name></expr></argument>, <argument pos:start="181:40" pos:end="181:74"><expr pos:start="181:40" pos:end="181:74"><literal type="string" pos:start="181:40" pos:end="181:74">"Unknown picture prediction mode\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="183:9" pos:end="183:18">return <expr pos:start="183:16" pos:end="183:17"><operator pos:start="183:16" pos:end="183:16">-</operator><literal type="number" pos:start="183:17" pos:end="183:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="189:5" pos:end="191:67">/* [DIRAC_STD] 11.2.8 Reference picture weight. reference_picture_weights()

       just data read, weight calculation will be done later on. */</comment>

    <expr_stmt pos:start="193:5" pos:end="193:28"><expr pos:start="193:5" pos:end="193:27"><name pos:start="193:5" pos:end="193:23"><name pos:start="193:5" pos:end="193:5">s</name><operator pos:start="193:6" pos:end="193:7">-&gt;</operator><name pos:start="193:8" pos:end="193:23">weight_log2denom</name></name> <operator pos:start="193:25" pos:end="193:25">=</operator> <literal type="number" pos:start="193:27" pos:end="193:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="195:5" pos:end="195:28"><expr pos:start="195:5" pos:end="195:27"><name pos:start="195:5" pos:end="195:16"><name pos:start="195:5" pos:end="195:5">s</name><operator pos:start="195:6" pos:end="195:7">-&gt;</operator><name pos:start="195:8" pos:end="195:13">weight</name><index pos:start="195:14" pos:end="195:16">[<expr pos:start="195:15" pos:end="195:15"><literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>]</index></name>        <operator pos:start="195:25" pos:end="195:25">=</operator> <literal type="number" pos:start="195:27" pos:end="195:27">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="197:5" pos:end="197:28"><expr pos:start="197:5" pos:end="197:27"><name pos:start="197:5" pos:end="197:16"><name pos:start="197:5" pos:end="197:5">s</name><operator pos:start="197:6" pos:end="197:7">-&gt;</operator><name pos:start="197:8" pos:end="197:13">weight</name><index pos:start="197:14" pos:end="197:16">[<expr pos:start="197:15" pos:end="197:15"><literal type="number" pos:start="197:15" pos:end="197:15">1</literal></expr>]</index></name>        <operator pos:start="197:25" pos:end="197:25">=</operator> <literal type="number" pos:start="197:27" pos:end="197:27">1</literal></expr>;</expr_stmt>



    <if_stmt pos:start="201:5" pos:end="211:5"><if pos:start="201:5" pos:end="211:5">if <condition pos:start="201:8" pos:end="201:22">(<expr pos:start="201:9" pos:end="201:21"><call pos:start="201:9" pos:end="201:21"><name pos:start="201:9" pos:end="201:17">get_bits1</name><argument_list pos:start="201:18" pos:end="201:21">(<argument pos:start="201:19" pos:end="201:20"><expr pos:start="201:19" pos:end="201:20"><name pos:start="201:19" pos:end="201:20">gb</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="201:24" pos:end="211:5">{<block_content pos:start="203:9" pos:end="209:51">

        <expr_stmt pos:start="203:9" pos:end="203:53"><expr pos:start="203:9" pos:end="203:52"><name pos:start="203:9" pos:end="203:27"><name pos:start="203:9" pos:end="203:9">s</name><operator pos:start="203:10" pos:end="203:11">-&gt;</operator><name pos:start="203:12" pos:end="203:27">weight_log2denom</name></name> <operator pos:start="203:29" pos:end="203:29">=</operator> <call pos:start="203:31" pos:end="203:52"><name pos:start="203:31" pos:end="203:48">svq3_get_ue_golomb</name><argument_list pos:start="203:49" pos:end="203:52">(<argument pos:start="203:50" pos:end="203:51"><expr pos:start="203:50" pos:end="203:51"><name pos:start="203:50" pos:end="203:51">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="205:9" pos:end="205:47"><expr pos:start="205:9" pos:end="205:46"><name pos:start="205:9" pos:end="205:20"><name pos:start="205:9" pos:end="205:9">s</name><operator pos:start="205:10" pos:end="205:11">-&gt;</operator><name pos:start="205:12" pos:end="205:17">weight</name><index pos:start="205:18" pos:end="205:20">[<expr pos:start="205:19" pos:end="205:19"><literal type="number" pos:start="205:19" pos:end="205:19">0</literal></expr>]</index></name> <operator pos:start="205:22" pos:end="205:22">=</operator> <call pos:start="205:24" pos:end="205:46"><name pos:start="205:24" pos:end="205:42">dirac_get_se_golomb</name><argument_list pos:start="205:43" pos:end="205:46">(<argument pos:start="205:44" pos:end="205:45"><expr pos:start="205:44" pos:end="205:45"><name pos:start="205:44" pos:end="205:45">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="207:9" pos:end="209:51"><if pos:start="207:9" pos:end="209:51">if <condition pos:start="207:12" pos:end="207:29">(<expr pos:start="207:13" pos:end="207:28"><name pos:start="207:13" pos:end="207:23"><name pos:start="207:13" pos:end="207:13">s</name><operator pos:start="207:14" pos:end="207:15">-&gt;</operator><name pos:start="207:16" pos:end="207:23">num_refs</name></name> <operator pos:start="207:25" pos:end="207:26">==</operator> <literal type="number" pos:start="207:28" pos:end="207:28">2</literal></expr>)</condition><block type="pseudo" pos:start="209:13" pos:end="209:51"><block_content pos:start="209:13" pos:end="209:51">

            <expr_stmt pos:start="209:13" pos:end="209:51"><expr pos:start="209:13" pos:end="209:50"><name pos:start="209:13" pos:end="209:24"><name pos:start="209:13" pos:end="209:13">s</name><operator pos:start="209:14" pos:end="209:15">-&gt;</operator><name pos:start="209:16" pos:end="209:21">weight</name><index pos:start="209:22" pos:end="209:24">[<expr pos:start="209:23" pos:end="209:23"><literal type="number" pos:start="209:23" pos:end="209:23">1</literal></expr>]</index></name> <operator pos:start="209:26" pos:end="209:26">=</operator> <call pos:start="209:28" pos:end="209:50"><name pos:start="209:28" pos:end="209:46">dirac_get_se_golomb</name><argument_list pos:start="209:47" pos:end="209:50">(<argument pos:start="209:48" pos:end="209:49"><expr pos:start="209:48" pos:end="209:49"><name pos:start="209:48" pos:end="209:49">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <return pos:start="213:5" pos:end="213:13">return <expr pos:start="213:12" pos:end="213:12"><literal type="number" pos:start="213:12" pos:end="213:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
