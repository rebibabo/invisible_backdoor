<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/21478.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">pci_device_reset</name><parameter_list pos:start="1:29" pos:end="1:44">(<parameter pos:start="1:30" pos:end="1:43"><decl pos:start="1:30" pos:end="1:43"><type pos:start="1:30" pos:end="1:40"><name pos:start="1:30" pos:end="1:38">PCIDevice</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">dev</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:29">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">r</name></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:23"><expr pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:7">dev</name><operator pos:start="9:8" pos:end="9:9">-&gt;</operator><name pos:start="9:10" pos:end="9:18">irq_state</name></name> <operator pos:start="9:20" pos:end="9:20">=</operator> <literal type="number" pos:start="9:22" pos:end="9:22">0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:31"><expr pos:start="11:5" pos:end="11:30"><call pos:start="11:5" pos:end="11:30"><name pos:start="11:5" pos:end="11:25">pci_update_irq_status</name><argument_list pos:start="11:26" pos:end="11:30">(<argument pos:start="11:27" pos:end="11:29"><expr pos:start="11:27" pos:end="11:29"><name pos:start="11:27" pos:end="11:29">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="13:5" pos:end="13:34">/* Clear all writeable bits */</comment>

    <expr_stmt pos:start="15:5" pos:end="17:73"><expr pos:start="15:5" pos:end="17:72"><call pos:start="15:5" pos:end="17:72"><name pos:start="15:5" pos:end="15:32">pci_word_test_and_clear_mask</name><argument_list pos:start="15:33" pos:end="17:72">(<argument pos:start="15:34" pos:end="15:58"><expr pos:start="15:34" pos:end="15:58"><name pos:start="15:34" pos:end="15:44"><name pos:start="15:34" pos:end="15:36">dev</name><operator pos:start="15:37" pos:end="15:38">-&gt;</operator><name pos:start="15:39" pos:end="15:44">config</name></name> <operator pos:start="15:46" pos:end="15:46">+</operator> <name pos:start="15:48" pos:end="15:58">PCI_COMMAND</name></expr></argument>,

                                 <argument pos:start="17:34" pos:end="17:71"><expr pos:start="17:34" pos:end="17:71"><call pos:start="17:34" pos:end="17:71"><name pos:start="17:34" pos:end="17:45">pci_get_word</name><argument_list pos:start="17:46" pos:end="17:71">(<argument pos:start="17:47" pos:end="17:70"><expr pos:start="17:47" pos:end="17:70"><name pos:start="17:47" pos:end="17:56"><name pos:start="17:47" pos:end="17:49">dev</name><operator pos:start="17:50" pos:end="17:51">-&gt;</operator><name pos:start="17:52" pos:end="17:56">wmask</name></name> <operator pos:start="17:58" pos:end="17:58">+</operator> <name pos:start="17:60" pos:end="17:70">PCI_COMMAND</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:43"><expr pos:start="19:5" pos:end="19:42"><name pos:start="19:5" pos:end="19:36"><name pos:start="19:5" pos:end="19:7">dev</name><operator pos:start="19:8" pos:end="19:9">-&gt;</operator><name pos:start="19:10" pos:end="19:15">config</name><index pos:start="19:16" pos:end="19:36">[<expr pos:start="19:17" pos:end="19:35"><name pos:start="19:17" pos:end="19:35">PCI_CACHE_LINE_SIZE</name></expr>]</index></name> <operator pos:start="19:38" pos:end="19:38">=</operator> <literal type="number" pos:start="19:40" pos:end="19:42">0x0</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:42"><expr pos:start="21:5" pos:end="21:41"><name pos:start="21:5" pos:end="21:35"><name pos:start="21:5" pos:end="21:7">dev</name><operator pos:start="21:8" pos:end="21:9">-&gt;</operator><name pos:start="21:10" pos:end="21:15">config</name><index pos:start="21:16" pos:end="21:35">[<expr pos:start="21:17" pos:end="21:34"><name pos:start="21:17" pos:end="21:34">PCI_INTERRUPT_LINE</name></expr>]</index></name> <operator pos:start="21:37" pos:end="21:37">=</operator> <literal type="number" pos:start="21:39" pos:end="21:41">0x0</literal></expr>;</expr_stmt>

    <for pos:start="23:5" pos:end="47:5">for <control pos:start="23:9" pos:end="23:41">(<init pos:start="23:10" pos:end="23:15"><expr pos:start="23:10" pos:end="23:14"><name pos:start="23:10" pos:end="23:10">r</name> <operator pos:start="23:12" pos:end="23:12">=</operator> <literal type="number" pos:start="23:14" pos:end="23:14">0</literal></expr>;</init> <condition pos:start="23:17" pos:end="23:36"><expr pos:start="23:17" pos:end="23:35"><name pos:start="23:17" pos:end="23:17">r</name> <operator pos:start="23:19" pos:end="23:19">&lt;</operator> <name pos:start="23:21" pos:end="23:35">PCI_NUM_REGIONS</name></expr>;</condition> <incr pos:start="23:38" pos:end="23:40"><expr pos:start="23:38" pos:end="23:40"><operator pos:start="23:38" pos:end="23:39">++</operator><name pos:start="23:40" pos:end="23:40">r</name></expr></incr>)</control> <block pos:start="23:43" pos:end="47:5">{<block_content pos:start="25:9" pos:end="45:9">

        <decl_stmt pos:start="25:9" pos:end="25:50"><decl pos:start="25:9" pos:end="25:49"><type pos:start="25:9" pos:end="25:21"><name pos:start="25:9" pos:end="25:19">PCIIORegion</name> <modifier pos:start="25:21" pos:end="25:21">*</modifier></type><name pos:start="25:22" pos:end="25:27">region</name> <init pos:start="25:29" pos:end="25:49">= <expr pos:start="25:31" pos:end="25:49"><operator pos:start="25:31" pos:end="25:31">&amp;</operator><name pos:start="25:32" pos:end="25:49"><name pos:start="25:32" pos:end="25:34">dev</name><operator pos:start="25:35" pos:end="25:36">-&gt;</operator><name pos:start="25:37" pos:end="25:46">io_regions</name><index pos:start="25:47" pos:end="25:49">[<expr pos:start="25:48" pos:end="25:48"><name pos:start="25:48" pos:end="25:48">r</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="27:9" pos:end="31:9"><if pos:start="27:9" pos:end="31:9">if <condition pos:start="27:12" pos:end="27:26">(<expr pos:start="27:13" pos:end="27:25"><operator pos:start="27:13" pos:end="27:13">!</operator><name pos:start="27:14" pos:end="27:25"><name pos:start="27:14" pos:end="27:19">region</name><operator pos:start="27:20" pos:end="27:21">-&gt;</operator><name pos:start="27:22" pos:end="27:25">size</name></name></expr>)</condition> <block pos:start="27:28" pos:end="31:9">{<block_content pos:start="29:13" pos:end="29:21">

            <continue pos:start="29:13" pos:end="29:21">continue;</continue>

        </block_content>}</block></if></if_stmt>



        <if_stmt pos:start="35:9" pos:end="45:9"><if pos:start="35:9" pos:end="41:9">if <condition pos:start="35:12" pos:end="37:56">(<expr pos:start="35:13" pos:end="37:55"><operator pos:start="35:13" pos:end="35:13">!</operator><operator pos:start="35:14" pos:end="35:14">(</operator><name pos:start="35:15" pos:end="35:26"><name pos:start="35:15" pos:end="35:20">region</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:26">type</name></name> <operator pos:start="35:28" pos:end="35:28">&amp;</operator> <name pos:start="35:30" pos:end="35:54">PCI_BASE_ADDRESS_SPACE_IO</name><operator pos:start="35:55" pos:end="35:55">)</operator> <operator pos:start="35:57" pos:end="35:58">&amp;&amp;</operator>

            <name pos:start="37:13" pos:end="37:24"><name pos:start="37:13" pos:end="37:18">region</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:24">type</name></name> <operator pos:start="37:26" pos:end="37:26">&amp;</operator> <name pos:start="37:28" pos:end="37:55">PCI_BASE_ADDRESS_MEM_TYPE_64</name></expr>)</condition> <block pos:start="37:58" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:70">

            <expr_stmt pos:start="39:13" pos:end="39:70"><expr pos:start="39:13" pos:end="39:69"><call pos:start="39:13" pos:end="39:69"><name pos:start="39:13" pos:end="39:24">pci_set_quad</name><argument_list pos:start="39:25" pos:end="39:69">(<argument pos:start="39:26" pos:end="39:54"><expr pos:start="39:26" pos:end="39:54"><name pos:start="39:26" pos:end="39:36"><name pos:start="39:26" pos:end="39:28">dev</name><operator pos:start="39:29" pos:end="39:30">-&gt;</operator><name pos:start="39:31" pos:end="39:36">config</name></name> <operator pos:start="39:38" pos:end="39:38">+</operator> <call pos:start="39:40" pos:end="39:54"><name pos:start="39:40" pos:end="39:46">pci_bar</name><argument_list pos:start="39:47" pos:end="39:54">(<argument pos:start="39:48" pos:end="39:50"><expr pos:start="39:48" pos:end="39:50"><name pos:start="39:48" pos:end="39:50">dev</name></expr></argument>, <argument pos:start="39:53" pos:end="39:53"><expr pos:start="39:53" pos:end="39:53"><name pos:start="39:53" pos:end="39:53">r</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="39:57" pos:end="39:68"><expr pos:start="39:57" pos:end="39:68"><name pos:start="39:57" pos:end="39:68"><name pos:start="39:57" pos:end="39:62">region</name><operator pos:start="39:63" pos:end="39:64">-&gt;</operator><name pos:start="39:65" pos:end="39:68">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="45:9">else <block pos:start="41:16" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:70">

            <expr_stmt pos:start="43:13" pos:end="43:70"><expr pos:start="43:13" pos:end="43:69"><call pos:start="43:13" pos:end="43:69"><name pos:start="43:13" pos:end="43:24">pci_set_long</name><argument_list pos:start="43:25" pos:end="43:69">(<argument pos:start="43:26" pos:end="43:54"><expr pos:start="43:26" pos:end="43:54"><name pos:start="43:26" pos:end="43:36"><name pos:start="43:26" pos:end="43:28">dev</name><operator pos:start="43:29" pos:end="43:30">-&gt;</operator><name pos:start="43:31" pos:end="43:36">config</name></name> <operator pos:start="43:38" pos:end="43:38">+</operator> <call pos:start="43:40" pos:end="43:54"><name pos:start="43:40" pos:end="43:46">pci_bar</name><argument_list pos:start="43:47" pos:end="43:54">(<argument pos:start="43:48" pos:end="43:50"><expr pos:start="43:48" pos:end="43:50"><name pos:start="43:48" pos:end="43:50">dev</name></expr></argument>, <argument pos:start="43:53" pos:end="43:53"><expr pos:start="43:53" pos:end="43:53"><name pos:start="43:53" pos:end="43:53">r</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="43:57" pos:end="43:68"><expr pos:start="43:57" pos:end="43:68"><name pos:start="43:57" pos:end="43:68"><name pos:start="43:57" pos:end="43:62">region</name><operator pos:start="43:63" pos:end="43:64">-&gt;</operator><name pos:start="43:65" pos:end="43:68">type</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></for>

    <expr_stmt pos:start="49:5" pos:end="49:29"><expr pos:start="49:5" pos:end="49:28"><call pos:start="49:5" pos:end="49:28"><name pos:start="49:5" pos:end="49:23">pci_update_mappings</name><argument_list pos:start="49:24" pos:end="49:28">(<argument pos:start="49:25" pos:end="49:27"><expr pos:start="49:25" pos:end="49:27"><name pos:start="49:25" pos:end="49:27">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
