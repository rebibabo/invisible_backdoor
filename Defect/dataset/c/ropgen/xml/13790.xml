<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/13790.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">vmsvga_init</name><parameter_list pos:start="1:24" pos:end="3:70">(<parameter pos:start="1:25" pos:end="1:40"><decl pos:start="1:25" pos:end="1:40"><type pos:start="1:25" pos:end="1:40"><name pos:start="1:25" pos:end="1:35">DeviceState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dev</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:66"><decl pos:start="1:43" pos:end="1:66"><type pos:start="1:43" pos:end="1:66"><name pos:start="1:43" pos:end="1:63"><name pos:start="1:43" pos:end="1:48">struct</name> <name pos:start="1:50" pos:end="1:63">vmsvga_state_s</name></name> <modifier pos:start="1:65" pos:end="1:65">*</modifier></type><name pos:start="1:66" pos:end="1:66">s</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:51"><decl pos:start="3:25" pos:end="3:51"><type pos:start="3:25" pos:end="3:51"><name pos:start="3:25" pos:end="3:36">MemoryRegion</name> <modifier pos:start="3:38" pos:end="3:38">*</modifier></type><name pos:start="3:39" pos:end="3:51">address_space</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:69"><decl pos:start="3:54" pos:end="3:69"><type pos:start="3:54" pos:end="3:69"><name pos:start="3:54" pos:end="3:65">MemoryRegion</name> <modifier pos:start="3:67" pos:end="3:67">*</modifier></type><name pos:start="3:68" pos:end="3:69">io</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:22">

    <expr_stmt pos:start="7:5" pos:end="7:40"><expr pos:start="7:5" pos:end="7:39"><name pos:start="7:5" pos:end="7:19"><name pos:start="7:5" pos:end="7:5">s</name><operator pos:start="7:6" pos:end="7:7">-&gt;</operator><name pos:start="7:8" pos:end="7:19">scratch_size</name></name> <operator pos:start="7:21" pos:end="7:21">=</operator> <name pos:start="7:23" pos:end="7:39">SVGA_SCRATCH_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="9:5" pos:end="9:47"><expr pos:start="9:5" pos:end="9:46"><name pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:5">s</name><operator pos:start="9:6" pos:end="9:7">-&gt;</operator><name pos:start="9:8" pos:end="9:14">scratch</name></name> <operator pos:start="9:16" pos:end="9:16">=</operator> <call pos:start="9:18" pos:end="9:46"><name pos:start="9:18" pos:end="9:25">g_malloc</name><argument_list pos:start="9:26" pos:end="9:46">(<argument pos:start="9:27" pos:end="9:45"><expr pos:start="9:27" pos:end="9:45"><name pos:start="9:27" pos:end="9:41"><name pos:start="9:27" pos:end="9:27">s</name><operator pos:start="9:28" pos:end="9:29">-&gt;</operator><name pos:start="9:30" pos:end="9:41">scratch_size</name></name> <operator pos:start="9:43" pos:end="9:43">*</operator> <literal type="number" pos:start="9:45" pos:end="9:45">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:62"><expr pos:start="13:5" pos:end="13:61"><name pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:5">s</name><operator pos:start="13:6" pos:end="13:7">-&gt;</operator><name pos:start="13:8" pos:end="13:10">vga</name><operator pos:start="13:11" pos:end="13:11">.</operator><name pos:start="13:12" pos:end="13:14">con</name></name> <operator pos:start="13:16" pos:end="13:16">=</operator> <call pos:start="13:18" pos:end="13:61"><name pos:start="13:18" pos:end="13:37">graphic_console_init</name><argument_list pos:start="13:38" pos:end="13:61">(<argument pos:start="13:39" pos:end="13:41"><expr pos:start="13:39" pos:end="13:41"><name pos:start="13:39" pos:end="13:41">dev</name></expr></argument>, <argument pos:start="13:44" pos:end="13:44"><expr pos:start="13:44" pos:end="13:44"><literal type="number" pos:start="13:44" pos:end="13:44">0</literal></expr></argument>, <argument pos:start="13:47" pos:end="13:57"><expr pos:start="13:47" pos:end="13:57"><operator pos:start="13:47" pos:end="13:47">&amp;</operator><name pos:start="13:48" pos:end="13:57">vmsvga_ops</name></expr></argument>, <argument pos:start="13:60" pos:end="13:60"><expr pos:start="13:60" pos:end="13:60"><name pos:start="13:60" pos:end="13:60">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:34"><expr pos:start="17:5" pos:end="17:33"><name pos:start="17:5" pos:end="17:16"><name pos:start="17:5" pos:end="17:5">s</name><operator pos:start="17:6" pos:end="17:7">-&gt;</operator><name pos:start="17:8" pos:end="17:16">fifo_size</name></name> <operator pos:start="17:18" pos:end="17:18">=</operator> <name pos:start="17:20" pos:end="17:33">SVGA_FIFO_SIZE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="21:41"><expr pos:start="19:5" pos:end="21:40"><call pos:start="19:5" pos:end="21:40"><name pos:start="19:5" pos:end="19:26">memory_region_init_ram</name><argument_list pos:start="19:27" pos:end="21:40">(<argument pos:start="19:28" pos:end="19:39"><expr pos:start="19:28" pos:end="19:39"><operator pos:start="19:28" pos:end="19:28">&amp;</operator><name pos:start="19:29" pos:end="19:39"><name pos:start="19:29" pos:end="19:29">s</name><operator pos:start="19:30" pos:end="19:31">-&gt;</operator><name pos:start="19:32" pos:end="19:39">fifo_ram</name></name></expr></argument>, <argument pos:start="19:42" pos:end="19:45"><expr pos:start="19:42" pos:end="19:45"><name pos:start="19:42" pos:end="19:45">NULL</name></expr></argument>, <argument pos:start="19:48" pos:end="19:60"><expr pos:start="19:48" pos:end="19:60"><literal type="string" pos:start="19:48" pos:end="19:60">"vmsvga.fifo"</literal></expr></argument>, <argument pos:start="19:63" pos:end="19:74"><expr pos:start="19:63" pos:end="19:74"><name pos:start="19:63" pos:end="19:74"><name pos:start="19:63" pos:end="19:63">s</name><operator pos:start="19:64" pos:end="19:65">-&gt;</operator><name pos:start="19:66" pos:end="19:74">fifo_size</name></name></expr></argument>,

                           <argument pos:start="21:28" pos:end="21:39"><expr pos:start="21:28" pos:end="21:39"><operator pos:start="21:28" pos:end="21:28">&amp;</operator><name pos:start="21:29" pos:end="21:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:46"><expr pos:start="23:5" pos:end="23:45"><call pos:start="23:5" pos:end="23:45"><name pos:start="23:5" pos:end="23:31">vmstate_register_ram_global</name><argument_list pos:start="23:32" pos:end="23:45">(<argument pos:start="23:33" pos:end="23:44"><expr pos:start="23:33" pos:end="23:44"><operator pos:start="23:33" pos:end="23:33">&amp;</operator><name pos:start="23:34" pos:end="23:44"><name pos:start="23:34" pos:end="23:34">s</name><operator pos:start="23:35" pos:end="23:36">-&gt;</operator><name pos:start="23:37" pos:end="23:44">fifo_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:58"><expr pos:start="25:5" pos:end="25:57"><name pos:start="25:5" pos:end="25:15"><name pos:start="25:5" pos:end="25:5">s</name><operator pos:start="25:6" pos:end="25:7">-&gt;</operator><name pos:start="25:8" pos:end="25:15">fifo_ptr</name></name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:57"><name pos:start="25:19" pos:end="25:43">memory_region_get_ram_ptr</name><argument_list pos:start="25:44" pos:end="25:57">(<argument pos:start="25:45" pos:end="25:56"><expr pos:start="25:45" pos:end="25:56"><operator pos:start="25:45" pos:end="25:45">&amp;</operator><name pos:start="25:46" pos:end="25:56"><name pos:start="25:46" pos:end="25:46">s</name><operator pos:start="25:47" pos:end="25:48">-&gt;</operator><name pos:start="25:49" pos:end="25:56">fifo_ram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:48"><expr pos:start="29:5" pos:end="29:47"><call pos:start="29:5" pos:end="29:47"><name pos:start="29:5" pos:end="29:19">vga_common_init</name><argument_list pos:start="29:20" pos:end="29:47">(<argument pos:start="29:21" pos:end="29:27"><expr pos:start="29:21" pos:end="29:27"><operator pos:start="29:21" pos:end="29:21">&amp;</operator><name pos:start="29:22" pos:end="29:27"><name pos:start="29:22" pos:end="29:22">s</name><operator pos:start="29:23" pos:end="29:24">-&gt;</operator><name pos:start="29:25" pos:end="29:27">vga</name></name></expr></argument>, <argument pos:start="29:30" pos:end="29:40"><expr pos:start="29:30" pos:end="29:40"><call pos:start="29:30" pos:end="29:40"><name pos:start="29:30" pos:end="29:35">OBJECT</name><argument_list pos:start="29:36" pos:end="29:40">(<argument pos:start="29:37" pos:end="29:39"><expr pos:start="29:37" pos:end="29:39"><name pos:start="29:37" pos:end="29:39">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="29:43" pos:end="29:46"><expr pos:start="29:43" pos:end="29:46"><name pos:start="29:43" pos:end="29:46">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:60"><expr pos:start="31:5" pos:end="31:59"><call pos:start="31:5" pos:end="31:59"><name pos:start="31:5" pos:end="31:12">vga_init</name><argument_list pos:start="31:13" pos:end="31:59">(<argument pos:start="31:14" pos:end="31:20"><expr pos:start="31:14" pos:end="31:20"><operator pos:start="31:14" pos:end="31:14">&amp;</operator><name pos:start="31:15" pos:end="31:20"><name pos:start="31:15" pos:end="31:15">s</name><operator pos:start="31:16" pos:end="31:17">-&gt;</operator><name pos:start="31:18" pos:end="31:20">vga</name></name></expr></argument>, <argument pos:start="31:23" pos:end="31:33"><expr pos:start="31:23" pos:end="31:33"><call pos:start="31:23" pos:end="31:33"><name pos:start="31:23" pos:end="31:28">OBJECT</name><argument_list pos:start="31:29" pos:end="31:33">(<argument pos:start="31:30" pos:end="31:32"><expr pos:start="31:30" pos:end="31:32"><name pos:start="31:30" pos:end="31:32">dev</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="31:36" pos:end="31:48"><expr pos:start="31:36" pos:end="31:48"><name pos:start="31:36" pos:end="31:48">address_space</name></expr></argument>, <argument pos:start="31:51" pos:end="31:52"><expr pos:start="31:51" pos:end="31:52"><name pos:start="31:51" pos:end="31:52">io</name></expr></argument>, <argument pos:start="31:55" pos:end="31:58"><expr pos:start="31:55" pos:end="31:58"><name pos:start="31:55" pos:end="31:58">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:60"><expr pos:start="33:5" pos:end="33:59"><call pos:start="33:5" pos:end="33:59"><name pos:start="33:5" pos:end="33:20">vmstate_register</name><argument_list pos:start="33:21" pos:end="33:59">(<argument pos:start="33:22" pos:end="33:25"><expr pos:start="33:22" pos:end="33:25"><name pos:start="33:22" pos:end="33:25">NULL</name></expr></argument>, <argument pos:start="33:28" pos:end="33:28"><expr pos:start="33:28" pos:end="33:28"><literal type="number" pos:start="33:28" pos:end="33:28">0</literal></expr></argument>, <argument pos:start="33:31" pos:end="33:49"><expr pos:start="33:31" pos:end="33:49"><operator pos:start="33:31" pos:end="33:31">&amp;</operator><name pos:start="33:32" pos:end="33:49">vmstate_vga_common</name></expr></argument>, <argument pos:start="33:52" pos:end="33:58"><expr pos:start="33:52" pos:end="33:58"><operator pos:start="33:52" pos:end="33:52">&amp;</operator><name pos:start="33:53" pos:end="33:58"><name pos:start="33:53" pos:end="33:53">s</name><operator pos:start="33:54" pos:end="33:55">-&gt;</operator><name pos:start="33:56" pos:end="33:58">vga</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:22"><expr pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:16"><name pos:start="35:5" pos:end="35:5">s</name><operator pos:start="35:6" pos:end="35:7">-&gt;</operator><name pos:start="35:8" pos:end="35:16">new_depth</name></name> <operator pos:start="35:18" pos:end="35:18">=</operator> <literal type="number" pos:start="35:20" pos:end="35:21">32</literal></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
