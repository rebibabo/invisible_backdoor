<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/18010.c" pos:tabs="8"><function pos:start="1:1" pos:end="65:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:22">read_config</name><parameter_list pos:start="1:23" pos:end="1:80">(<parameter pos:start="1:24" pos:end="1:43"><decl pos:start="1:24" pos:end="1:43"><type pos:start="1:24" pos:end="1:43"><name pos:start="1:24" pos:end="1:40">BDRVBlkdebugState</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:65"><decl pos:start="1:46" pos:end="1:65"><type pos:start="1:46" pos:end="1:65"><specifier pos:start="1:46" pos:end="1:50">const</specifier> <name pos:start="1:52" pos:end="1:55">char</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:65">filename</name></decl></parameter>, <parameter pos:start="1:68" pos:end="1:79"><decl pos:start="1:68" pos:end="1:79"><type pos:start="1:68" pos:end="1:79"><name pos:start="1:68" pos:end="1:72">Error</name> <modifier pos:start="1:74" pos:end="1:74">*</modifier><modifier pos:start="1:75" pos:end="1:75">*</modifier></type><name pos:start="1:76" pos:end="1:79">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="65:1">{<block_content pos:start="5:5" pos:end="63:15">

    <decl_stmt pos:start="5:5" pos:end="5:12"><decl pos:start="5:5" pos:end="5:11"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:8">FILE</name> <modifier pos:start="5:10" pos:end="5:10">*</modifier></type><name pos:start="5:11" pos:end="5:11">f</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:26"><type pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:24"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:24">add_rule_data</name></name></type> <name pos:start="9:26" pos:end="9:26">d</name></decl>;</decl_stmt>



    <expr_stmt pos:start="13:5" pos:end="13:29"><expr pos:start="13:5" pos:end="13:28"><name pos:start="13:5" pos:end="13:5">f</name> <operator pos:start="13:7" pos:end="13:7">=</operator> <call pos:start="13:9" pos:end="13:28"><name pos:start="13:9" pos:end="13:13">fopen</name><argument_list pos:start="13:14" pos:end="13:28">(<argument pos:start="13:15" pos:end="13:22"><expr pos:start="13:15" pos:end="13:22"><name pos:start="13:15" pos:end="13:22">filename</name></expr></argument>, <argument pos:start="13:25" pos:end="13:27"><expr pos:start="13:25" pos:end="13:27"><literal type="string" pos:start="13:25" pos:end="13:27">"r"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="15:5" pos:end="21:5"><if pos:start="15:5" pos:end="21:5">if <condition pos:start="15:8" pos:end="15:18">(<expr pos:start="15:9" pos:end="15:17"><name pos:start="15:9" pos:end="15:9">f</name> <operator pos:start="15:11" pos:end="15:12">==</operator> <name pos:start="15:14" pos:end="15:17">NULL</name></expr>)</condition> <block pos:start="15:20" pos:end="21:5">{<block_content pos:start="17:9" pos:end="19:22">

        <expr_stmt pos:start="17:9" pos:end="17:77"><expr pos:start="17:9" pos:end="17:76"><call pos:start="17:9" pos:end="17:76"><name pos:start="17:9" pos:end="17:24">error_setg_errno</name><argument_list pos:start="17:25" pos:end="17:76">(<argument pos:start="17:26" pos:end="17:29"><expr pos:start="17:26" pos:end="17:29"><name pos:start="17:26" pos:end="17:29">errp</name></expr></argument>, <argument pos:start="17:32" pos:end="17:36"><expr pos:start="17:32" pos:end="17:36"><name pos:start="17:32" pos:end="17:36">errno</name></expr></argument>, <argument pos:start="17:39" pos:end="17:75"><expr pos:start="17:39" pos:end="17:75"><literal type="string" pos:start="17:39" pos:end="17:75">"Could not read blkdebug config file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:22">return <expr pos:start="19:16" pos:end="19:21"><operator pos:start="19:16" pos:end="19:16">-</operator><name pos:start="19:17" pos:end="19:21">errno</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:56"><expr pos:start="25:5" pos:end="25:55"><name pos:start="25:5" pos:end="25:7">ret</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <call pos:start="25:11" pos:end="25:55"><name pos:start="25:11" pos:end="25:27">qemu_config_parse</name><argument_list pos:start="25:28" pos:end="25:55">(<argument pos:start="25:29" pos:end="25:29"><expr pos:start="25:29" pos:end="25:29"><name pos:start="25:29" pos:end="25:29">f</name></expr></argument>, <argument pos:start="25:32" pos:end="25:44"><expr pos:start="25:32" pos:end="25:44"><name pos:start="25:32" pos:end="25:44">config_groups</name></expr></argument>, <argument pos:start="25:47" pos:end="25:54"><expr pos:start="25:47" pos:end="25:54"><name pos:start="25:47" pos:end="25:54">filename</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition> <block pos:start="27:18" pos:end="35:5">{<block_content pos:start="29:9" pos:end="33:18">

        <expr_stmt pos:start="29:9" pos:end="29:65"><expr pos:start="29:9" pos:end="29:64"><call pos:start="29:9" pos:end="29:64"><name pos:start="29:9" pos:end="29:18">error_setg</name><argument_list pos:start="29:19" pos:end="29:64">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">errp</name></expr></argument>, <argument pos:start="29:26" pos:end="29:63"><expr pos:start="29:26" pos:end="29:63"><literal type="string" pos:start="29:26" pos:end="29:63">"Could not parse blkdebug config file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:22"><expr pos:start="31:9" pos:end="31:21"><name pos:start="31:9" pos:end="31:11">ret</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <operator pos:start="31:15" pos:end="31:15">-</operator><name pos:start="31:16" pos:end="31:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="33:9" pos:end="33:18">goto <name pos:start="33:14" pos:end="33:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="39:5" pos:end="39:12"><expr pos:start="39:5" pos:end="39:11"><name pos:start="39:5" pos:end="39:7"><name pos:start="39:5" pos:end="39:5">d</name><operator pos:start="39:6" pos:end="39:6">.</operator><name pos:start="39:7" pos:end="39:7">s</name></name> <operator pos:start="39:9" pos:end="39:9">=</operator> <name pos:start="39:11" pos:end="39:11">s</name></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:35"><expr pos:start="41:5" pos:end="41:34"><name pos:start="41:5" pos:end="41:12"><name pos:start="41:5" pos:end="41:5">d</name><operator pos:start="41:6" pos:end="41:6">.</operator><name pos:start="41:7" pos:end="41:12">action</name></name> <operator pos:start="41:14" pos:end="41:14">=</operator> <name pos:start="41:16" pos:end="41:34">ACTION_INJECT_ERROR</name></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:59"><expr pos:start="43:5" pos:end="43:58"><call pos:start="43:5" pos:end="43:58"><name pos:start="43:5" pos:end="43:21">qemu_opts_foreach</name><argument_list pos:start="43:22" pos:end="43:58">(<argument pos:start="43:23" pos:end="43:40"><expr pos:start="43:23" pos:end="43:40"><operator pos:start="43:23" pos:end="43:23">&amp;</operator><name pos:start="43:24" pos:end="43:40">inject_error_opts</name></expr></argument>, <argument pos:start="43:43" pos:end="43:50"><expr pos:start="43:43" pos:end="43:50"><name pos:start="43:43" pos:end="43:50">add_rule</name></expr></argument>, <argument pos:start="43:53" pos:end="43:54"><expr pos:start="43:53" pos:end="43:54"><operator pos:start="43:53" pos:end="43:53">&amp;</operator><name pos:start="43:54" pos:end="43:54">d</name></expr></argument>, <argument pos:start="43:57" pos:end="43:57"><expr pos:start="43:57" pos:end="43:57"><literal type="number" pos:start="43:57" pos:end="43:57">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="47:5" pos:end="47:32"><expr pos:start="47:5" pos:end="47:31"><name pos:start="47:5" pos:end="47:12"><name pos:start="47:5" pos:end="47:5">d</name><operator pos:start="47:6" pos:end="47:6">.</operator><name pos:start="47:7" pos:end="47:12">action</name></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <name pos:start="47:16" pos:end="47:31">ACTION_SET_STATE</name></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:56"><expr pos:start="49:5" pos:end="49:55"><call pos:start="49:5" pos:end="49:55"><name pos:start="49:5" pos:end="49:21">qemu_opts_foreach</name><argument_list pos:start="49:22" pos:end="49:55">(<argument pos:start="49:23" pos:end="49:37"><expr pos:start="49:23" pos:end="49:37"><operator pos:start="49:23" pos:end="49:23">&amp;</operator><name pos:start="49:24" pos:end="49:37">set_state_opts</name></expr></argument>, <argument pos:start="49:40" pos:end="49:47"><expr pos:start="49:40" pos:end="49:47"><name pos:start="49:40" pos:end="49:47">add_rule</name></expr></argument>, <argument pos:start="49:50" pos:end="49:51"><expr pos:start="49:50" pos:end="49:51"><operator pos:start="49:50" pos:end="49:50">&amp;</operator><name pos:start="49:51" pos:end="49:51">d</name></expr></argument>, <argument pos:start="49:54" pos:end="49:54"><expr pos:start="49:54" pos:end="49:54"><literal type="number" pos:start="49:54" pos:end="49:54">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="53:5" pos:end="53:12"><expr pos:start="53:5" pos:end="53:11"><name pos:start="53:5" pos:end="53:7">ret</name> <operator pos:start="53:9" pos:end="53:9">=</operator> <literal type="number" pos:start="53:11" pos:end="53:11">0</literal></expr>;</expr_stmt>

<label pos:start="55:1" pos:end="55:5"><name pos:start="55:1" pos:end="55:4">fail</name>:</label>

    <expr_stmt pos:start="57:5" pos:end="57:40"><expr pos:start="57:5" pos:end="57:39"><call pos:start="57:5" pos:end="57:39"><name pos:start="57:5" pos:end="57:19">qemu_opts_reset</name><argument_list pos:start="57:20" pos:end="57:39">(<argument pos:start="57:21" pos:end="57:38"><expr pos:start="57:21" pos:end="57:38"><operator pos:start="57:21" pos:end="57:21">&amp;</operator><name pos:start="57:22" pos:end="57:38">inject_error_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:37"><expr pos:start="59:5" pos:end="59:36"><call pos:start="59:5" pos:end="59:36"><name pos:start="59:5" pos:end="59:19">qemu_opts_reset</name><argument_list pos:start="59:20" pos:end="59:36">(<argument pos:start="59:21" pos:end="59:35"><expr pos:start="59:21" pos:end="59:35"><operator pos:start="59:21" pos:end="59:21">&amp;</operator><name pos:start="59:22" pos:end="59:35">set_state_opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:14"><expr pos:start="61:5" pos:end="61:13"><call pos:start="61:5" pos:end="61:13"><name pos:start="61:5" pos:end="61:10">fclose</name><argument_list pos:start="61:11" pos:end="61:13">(<argument pos:start="61:12" pos:end="61:12"><expr pos:start="61:12" pos:end="61:12"><name pos:start="61:12" pos:end="61:12">f</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="63:5" pos:end="63:15">return <expr pos:start="63:12" pos:end="63:14"><name pos:start="63:12" pos:end="63:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
