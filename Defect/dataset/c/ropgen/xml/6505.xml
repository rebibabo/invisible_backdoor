<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6505.c" pos:tabs="8"><function pos:start="1:1" pos:end="51:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:12">do_srad</name> <parameter_list pos:start="1:14" pos:end="1:19">(<parameter pos:start="1:15" pos:end="1:18"><decl pos:start="1:15" pos:end="1:18"><type pos:start="1:15" pos:end="1:18"><name pos:start="1:15" pos:end="1:18">void</name></type></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="51:1">{<block_content pos:start="5:5" pos:end="49:13">

    <decl_stmt pos:start="5:5" pos:end="5:16"><decl pos:start="5:5" pos:end="5:15"><type pos:start="5:5" pos:end="5:11"><name pos:start="5:5" pos:end="5:11">int64_t</name></type> <name pos:start="5:13" pos:end="5:15">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="9:5" pos:end="47:5"><if pos:start="9:5" pos:end="33:5">if <condition pos:start="9:8" pos:end="9:31">(<expr pos:start="9:9" pos:end="9:30"><call pos:start="9:9" pos:end="9:30"><name pos:start="9:9" pos:end="9:14">likely</name><argument_list pos:start="9:15" pos:end="9:30">(<argument pos:start="9:16" pos:end="9:29"><expr pos:start="9:16" pos:end="9:29"><operator pos:start="9:16" pos:end="9:16">!</operator><operator pos:start="9:17" pos:end="9:17">(</operator><name pos:start="9:18" pos:end="9:19">T1</name> <operator pos:start="9:21" pos:end="9:21">&amp;</operator> <literal type="number" pos:start="9:23" pos:end="9:28">0x40UL</literal><operator pos:start="9:29" pos:end="9:29">)</operator></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="9:33" pos:end="33:5">{<block_content pos:start="11:9" pos:end="31:9">

        <if_stmt pos:start="11:9" pos:end="31:9"><if pos:start="11:9" pos:end="25:9">if <condition pos:start="11:12" pos:end="11:38">(<expr pos:start="11:13" pos:end="11:37"><call pos:start="11:13" pos:end="11:37"><name pos:start="11:13" pos:end="11:18">likely</name><argument_list pos:start="11:19" pos:end="11:37">(<argument pos:start="11:20" pos:end="11:36"><expr pos:start="11:20" pos:end="11:36"><operator pos:start="11:20" pos:end="11:20">(</operator><name pos:start="11:21" pos:end="11:28">uint64_t</name><operator pos:start="11:29" pos:end="11:29">)</operator><name pos:start="11:30" pos:end="11:31">T1</name> <operator pos:start="11:33" pos:end="11:34">!=</operator> <literal type="number" pos:start="11:36" pos:end="11:36">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="11:40" pos:end="25:9">{<block_content pos:start="13:13" pos:end="23:13">

            <expr_stmt pos:start="13:13" pos:end="13:47"><expr pos:start="13:13" pos:end="13:46"><name pos:start="13:13" pos:end="13:15">ret</name> <operator pos:start="13:17" pos:end="13:17">=</operator> <operator pos:start="13:19" pos:end="13:19">(</operator><name pos:start="13:20" pos:end="13:26">int64_t</name><operator pos:start="13:27" pos:end="13:27">)</operator><name pos:start="13:28" pos:end="13:29">T0</name> <operator pos:start="13:31" pos:end="13:32">&gt;&gt;</operator> <operator pos:start="13:34" pos:end="13:34">(</operator><name pos:start="13:35" pos:end="13:36">T1</name> <operator pos:start="13:38" pos:end="13:38">&amp;</operator> <literal type="number" pos:start="13:40" pos:end="13:45">0x3FUL</literal><operator pos:start="13:46" pos:end="13:46">)</operator></expr>;</expr_stmt>

            <if_stmt pos:start="15:13" pos:end="23:13"><if pos:start="15:13" pos:end="19:13">if <condition pos:start="15:16" pos:end="15:73">(<expr pos:start="15:17" pos:end="15:72"><call pos:start="15:17" pos:end="15:72"><name pos:start="15:17" pos:end="15:22">likely</name><argument_list pos:start="15:23" pos:end="15:72">(<argument pos:start="15:24" pos:end="15:71"><expr pos:start="15:24" pos:end="15:71"><name pos:start="15:24" pos:end="15:26">ret</name> <operator pos:start="15:28" pos:end="15:29">&gt;=</operator> <literal type="number" pos:start="15:31" pos:end="15:31">0</literal> <operator pos:start="15:33" pos:end="15:34">||</operator> <operator pos:start="15:36" pos:end="15:36">(</operator><operator pos:start="15:37" pos:end="15:37">(</operator><name pos:start="15:38" pos:end="15:44">int64_t</name><operator pos:start="15:45" pos:end="15:45">)</operator><name pos:start="15:46" pos:end="15:47">T0</name> <operator pos:start="15:49" pos:end="15:49">&amp;</operator> <operator pos:start="15:51" pos:end="15:51">(</operator><operator pos:start="15:52" pos:end="15:52">(</operator><literal type="number" pos:start="15:53" pos:end="15:53">1</literal> <operator pos:start="15:55" pos:end="15:56">&lt;&lt;</operator> <name pos:start="15:58" pos:end="15:59">T1</name><operator pos:start="15:60" pos:end="15:60">)</operator> <operator pos:start="15:62" pos:end="15:62">-</operator> <literal type="number" pos:start="15:64" pos:end="15:64">1</literal><operator pos:start="15:65" pos:end="15:65">)</operator><operator pos:start="15:66" pos:end="15:66">)</operator> <operator pos:start="15:68" pos:end="15:69">==</operator> <literal type="number" pos:start="15:71" pos:end="15:71">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="15:75" pos:end="19:13">{<block_content pos:start="17:17" pos:end="17:27">

                <expr_stmt pos:start="17:17" pos:end="17:27"><expr pos:start="17:17" pos:end="17:26"><name pos:start="17:17" pos:end="17:22">xer_ca</name> <operator pos:start="17:24" pos:end="17:24">=</operator> <literal type="number" pos:start="17:26" pos:end="17:26">0</literal></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="19:15" pos:end="23:13">else <block pos:start="19:20" pos:end="23:13">{<block_content pos:start="21:17" pos:end="21:27">

                <expr_stmt pos:start="21:17" pos:end="21:27"><expr pos:start="21:17" pos:end="21:26"><name pos:start="21:17" pos:end="21:22">xer_ca</name> <operator pos:start="21:24" pos:end="21:24">=</operator> <literal type="number" pos:start="21:26" pos:end="21:26">1</literal></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block></if> <else pos:start="25:11" pos:end="31:9">else <block pos:start="25:16" pos:end="31:9">{<block_content pos:start="27:13" pos:end="29:23">

            <expr_stmt pos:start="27:13" pos:end="27:21"><expr pos:start="27:13" pos:end="27:20"><name pos:start="27:13" pos:end="27:15">ret</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:20">T0</name></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:23"><expr pos:start="29:13" pos:end="29:22"><name pos:start="29:13" pos:end="29:18">xer_ca</name> <operator pos:start="29:20" pos:end="29:20">=</operator> <literal type="number" pos:start="29:22" pos:end="29:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="47:5">else <block pos:start="33:12" pos:end="47:5">{<block_content pos:start="35:9" pos:end="45:9">

        <expr_stmt pos:start="35:9" pos:end="35:42"><expr pos:start="35:9" pos:end="35:41"><name pos:start="35:9" pos:end="35:11">ret</name> <operator pos:start="35:13" pos:end="35:13">=</operator> <operator pos:start="35:15" pos:end="35:15">(</operator><operator pos:start="35:16" pos:end="35:16">-</operator><literal type="number" pos:start="35:17" pos:end="35:17">1</literal><operator pos:start="35:18" pos:end="35:18">)</operator> <operator pos:start="35:20" pos:end="35:20">*</operator> <operator pos:start="35:22" pos:end="35:22">(</operator><operator pos:start="35:23" pos:end="35:23">(</operator><name pos:start="35:24" pos:end="35:31">uint64_t</name><operator pos:start="35:32" pos:end="35:32">)</operator><name pos:start="35:33" pos:end="35:34">T0</name> <operator pos:start="35:36" pos:end="35:37">&gt;&gt;</operator> <literal type="number" pos:start="35:39" pos:end="35:40">63</literal><operator pos:start="35:41" pos:end="35:41">)</operator></expr>;</expr_stmt>

        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="41:9">if <condition pos:start="37:12" pos:end="37:77">(<expr pos:start="37:13" pos:end="37:76"><call pos:start="37:13" pos:end="37:76"><name pos:start="37:13" pos:end="37:18">likely</name><argument_list pos:start="37:19" pos:end="37:76">(<argument pos:start="37:20" pos:end="37:75"><expr pos:start="37:20" pos:end="37:75"><name pos:start="37:20" pos:end="37:22">ret</name> <operator pos:start="37:24" pos:end="37:25">&gt;=</operator> <literal type="number" pos:start="37:27" pos:end="37:27">0</literal> <operator pos:start="37:29" pos:end="37:30">||</operator> <operator pos:start="37:32" pos:end="37:32">(</operator><operator pos:start="37:33" pos:end="37:33">(</operator><name pos:start="37:34" pos:end="37:41">uint64_t</name><operator pos:start="37:42" pos:end="37:42">)</operator><name pos:start="37:43" pos:end="37:44">T0</name> <operator pos:start="37:46" pos:end="37:46">&amp;</operator> <operator pos:start="37:48" pos:end="37:48">~</operator><literal type="number" pos:start="37:49" pos:end="37:69">0x8000000000000000ULL</literal><operator pos:start="37:70" pos:end="37:70">)</operator> <operator pos:start="37:72" pos:end="37:73">==</operator> <literal type="number" pos:start="37:75" pos:end="37:75">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:79" pos:end="41:9">{<block_content pos:start="39:13" pos:end="39:23">

            <expr_stmt pos:start="39:13" pos:end="39:23"><expr pos:start="39:13" pos:end="39:22"><name pos:start="39:13" pos:end="39:18">xer_ca</name> <operator pos:start="39:20" pos:end="39:20">=</operator> <literal type="number" pos:start="39:22" pos:end="39:22">0</literal></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="41:11" pos:end="45:9">else <block pos:start="41:16" pos:end="45:9">{<block_content pos:start="43:13" pos:end="43:23">

            <expr_stmt pos:start="43:13" pos:end="43:23"><expr pos:start="43:13" pos:end="43:22"><name pos:start="43:13" pos:end="43:18">xer_ca</name> <operator pos:start="43:20" pos:end="43:20">=</operator> <literal type="number" pos:start="43:22" pos:end="43:22">1</literal></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

    </block_content>}</block></else></if_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:13"><expr pos:start="49:5" pos:end="49:12"><name pos:start="49:5" pos:end="49:6">T0</name> <operator pos:start="49:8" pos:end="49:8">=</operator> <name pos:start="49:10" pos:end="49:12">ret</name></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
