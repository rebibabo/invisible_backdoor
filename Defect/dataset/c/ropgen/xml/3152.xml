<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3152.c" pos:tabs="8"><function pos:start="1:1" pos:end="57:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:23">local_rename</name><parameter_list pos:start="1:24" pos:end="3:44">(<parameter pos:start="1:25" pos:end="1:38"><decl pos:start="1:25" pos:end="1:38"><type pos:start="1:25" pos:end="1:38"><name pos:start="1:25" pos:end="1:33">FsContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:38">ctx</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:59"><decl pos:start="1:41" pos:end="1:59"><type pos:start="1:41" pos:end="1:59"><specifier pos:start="1:41" pos:end="1:45">const</specifier> <name pos:start="1:47" pos:end="1:50">char</name> <modifier pos:start="1:52" pos:end="1:52">*</modifier></type><name pos:start="1:53" pos:end="1:59">oldpath</name></decl></parameter>,

                        <parameter pos:start="3:25" pos:end="3:43"><decl pos:start="3:25" pos:end="3:43"><type pos:start="3:25" pos:end="3:43"><specifier pos:start="3:25" pos:end="3:29">const</specifier> <name pos:start="3:31" pos:end="3:34">char</name> <modifier pos:start="3:36" pos:end="3:36">*</modifier></type><name pos:start="3:37" pos:end="3:43">newpath</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="57:1">{<block_content pos:start="7:5" pos:end="55:15">

    <decl_stmt pos:start="7:5" pos:end="7:12"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">err</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:27"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:8">char</name> <modifier pos:start="9:10" pos:end="9:10">*</modifier></type><name pos:start="9:11" pos:end="9:16">buffer</name></decl>, <decl pos:start="9:19" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:10"><modifier pos:start="9:19" pos:end="9:19">*</modifier></type><name pos:start="9:20" pos:end="9:26">buffer1</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="41:5"><if pos:start="13:5" pos:end="41:5">if <condition pos:start="13:8" pos:end="13:48">(<expr pos:start="13:9" pos:end="13:47"><name pos:start="13:9" pos:end="13:25"><name pos:start="13:9" pos:end="13:11">ctx</name><operator pos:start="13:12" pos:end="13:13">-&gt;</operator><name pos:start="13:14" pos:end="13:25">export_flags</name></name> <operator pos:start="13:27" pos:end="13:27">&amp;</operator> <name pos:start="13:29" pos:end="13:47">V9FS_SM_MAPPED_FILE</name></expr>)</condition> <block pos:start="13:50" pos:end="41:5">{<block_content pos:start="15:9" pos:end="39:9">

        <expr_stmt pos:start="15:9" pos:end="15:57"><expr pos:start="15:9" pos:end="15:56"><name pos:start="15:9" pos:end="15:11">err</name> <operator pos:start="15:13" pos:end="15:13">=</operator> <call pos:start="15:15" pos:end="15:56"><name pos:start="15:15" pos:end="15:42">local_create_mapped_attr_dir</name><argument_list pos:start="15:43" pos:end="15:56">(<argument pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><name pos:start="15:44" pos:end="15:46">ctx</name></expr></argument>, <argument pos:start="15:49" pos:end="15:55"><expr pos:start="15:49" pos:end="15:55"><name pos:start="15:49" pos:end="15:55">newpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="21:9"><if pos:start="17:9" pos:end="21:9">if <condition pos:start="17:12" pos:end="17:20">(<expr pos:start="17:13" pos:end="17:19"><name pos:start="17:13" pos:end="17:15">err</name> <operator pos:start="17:17" pos:end="17:17">&lt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="21:9">{<block_content pos:start="19:13" pos:end="19:23">

            <return pos:start="19:13" pos:end="19:23">return <expr pos:start="19:20" pos:end="19:22"><name pos:start="19:20" pos:end="19:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <comment type="block" pos:start="23:9" pos:end="23:47">/* rename the .virtfs_metadata files */</comment>

        <expr_stmt pos:start="25:9" pos:end="25:54"><expr pos:start="25:9" pos:end="25:53"><name pos:start="25:9" pos:end="25:14">buffer</name> <operator pos:start="25:16" pos:end="25:16">=</operator> <call pos:start="25:18" pos:end="25:53"><name pos:start="25:18" pos:end="25:39">local_mapped_attr_path</name><argument_list pos:start="25:40" pos:end="25:53">(<argument pos:start="25:41" pos:end="25:43"><expr pos:start="25:41" pos:end="25:43"><name pos:start="25:41" pos:end="25:43">ctx</name></expr></argument>, <argument pos:start="25:46" pos:end="25:52"><expr pos:start="25:46" pos:end="25:52"><name pos:start="25:46" pos:end="25:52">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:55"><expr pos:start="27:9" pos:end="27:54"><name pos:start="27:9" pos:end="27:15">buffer1</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:54"><name pos:start="27:19" pos:end="27:40">local_mapped_attr_path</name><argument_list pos:start="27:41" pos:end="27:54">(<argument pos:start="27:42" pos:end="27:44"><expr pos:start="27:42" pos:end="27:44"><name pos:start="27:42" pos:end="27:44">ctx</name></expr></argument>, <argument pos:start="27:47" pos:end="27:53"><expr pos:start="27:47" pos:end="27:53"><name pos:start="27:47" pos:end="27:53">newpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:38"><expr pos:start="29:9" pos:end="29:37"><name pos:start="29:9" pos:end="29:11">err</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <call pos:start="29:15" pos:end="29:37"><name pos:start="29:15" pos:end="29:20">rename</name><argument_list pos:start="29:21" pos:end="29:37">(<argument pos:start="29:22" pos:end="29:27"><expr pos:start="29:22" pos:end="29:27"><name pos:start="29:22" pos:end="29:27">buffer</name></expr></argument>, <argument pos:start="29:30" pos:end="29:36"><expr pos:start="29:30" pos:end="29:36"><name pos:start="29:30" pos:end="29:36">buffer1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:23"><expr pos:start="31:9" pos:end="31:22"><call pos:start="31:9" pos:end="31:22"><name pos:start="31:9" pos:end="31:14">g_free</name><argument_list pos:start="31:15" pos:end="31:22">(<argument pos:start="31:16" pos:end="31:21"><expr pos:start="31:16" pos:end="31:21"><name pos:start="31:16" pos:end="31:21">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:24"><expr pos:start="33:9" pos:end="33:23"><call pos:start="33:9" pos:end="33:23"><name pos:start="33:9" pos:end="33:14">g_free</name><argument_list pos:start="33:15" pos:end="33:23">(<argument pos:start="33:16" pos:end="33:22"><expr pos:start="33:16" pos:end="33:22"><name pos:start="33:16" pos:end="33:22">buffer1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="39:9"><if pos:start="35:9" pos:end="39:9">if <condition pos:start="35:12" pos:end="35:39">(<expr pos:start="35:13" pos:end="35:38"><name pos:start="35:13" pos:end="35:15">err</name> <operator pos:start="35:17" pos:end="35:17">&lt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal> <operator pos:start="35:21" pos:end="35:22">&amp;&amp;</operator> <name pos:start="35:24" pos:end="35:28">errno</name> <operator pos:start="35:30" pos:end="35:31">!=</operator> <name pos:start="35:33" pos:end="35:38">ENOENT</name></expr>)</condition> <block pos:start="35:41" pos:end="39:9">{<block_content pos:start="37:13" pos:end="37:23">

            <return pos:start="37:13" pos:end="37:23">return <expr pos:start="37:20" pos:end="37:22"><name pos:start="37:20" pos:end="37:22">err</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:10">buffer</name> <operator pos:start="45:12" pos:end="45:12">=</operator> <call pos:start="45:14" pos:end="45:32"><name pos:start="45:14" pos:end="45:18">rpath</name><argument_list pos:start="45:19" pos:end="45:32">(<argument pos:start="45:20" pos:end="45:22"><expr pos:start="45:20" pos:end="45:22"><name pos:start="45:20" pos:end="45:22">ctx</name></expr></argument>, <argument pos:start="45:25" pos:end="45:31"><expr pos:start="45:25" pos:end="45:31"><name pos:start="45:25" pos:end="45:31">oldpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:34"><expr pos:start="47:5" pos:end="47:33"><name pos:start="47:5" pos:end="47:11">buffer1</name> <operator pos:start="47:13" pos:end="47:13">=</operator> <call pos:start="47:15" pos:end="47:33"><name pos:start="47:15" pos:end="47:19">rpath</name><argument_list pos:start="47:20" pos:end="47:33">(<argument pos:start="47:21" pos:end="47:23"><expr pos:start="47:21" pos:end="47:23"><name pos:start="47:21" pos:end="47:23">ctx</name></expr></argument>, <argument pos:start="47:26" pos:end="47:32"><expr pos:start="47:26" pos:end="47:32"><name pos:start="47:26" pos:end="47:32">newpath</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:34"><expr pos:start="49:5" pos:end="49:33"><name pos:start="49:5" pos:end="49:7">err</name> <operator pos:start="49:9" pos:end="49:9">=</operator> <call pos:start="49:11" pos:end="49:33"><name pos:start="49:11" pos:end="49:16">rename</name><argument_list pos:start="49:17" pos:end="49:33">(<argument pos:start="49:18" pos:end="49:23"><expr pos:start="49:18" pos:end="49:23"><name pos:start="49:18" pos:end="49:23">buffer</name></expr></argument>, <argument pos:start="49:26" pos:end="49:32"><expr pos:start="49:26" pos:end="49:32"><name pos:start="49:26" pos:end="49:32">buffer1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><call pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:10">g_free</name><argument_list pos:start="51:11" pos:end="51:18">(<argument pos:start="51:12" pos:end="51:17"><expr pos:start="51:12" pos:end="51:17"><name pos:start="51:12" pos:end="51:17">buffer</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:20"><expr pos:start="53:5" pos:end="53:19"><call pos:start="53:5" pos:end="53:19"><name pos:start="53:5" pos:end="53:10">g_free</name><argument_list pos:start="53:11" pos:end="53:19">(<argument pos:start="53:12" pos:end="53:18"><expr pos:start="53:12" pos:end="53:18"><name pos:start="53:12" pos:end="53:18">buffer1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="55:5" pos:end="55:15">return <expr pos:start="55:12" pos:end="55:14"><name pos:start="55:12" pos:end="55:14">err</name></expr>;</return>

</block_content>}</block></function>
</unit>
