<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20132.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:20">tcp_write</name><parameter_list pos:start="1:21" pos:end="1:65">(<parameter pos:start="1:22" pos:end="1:34"><decl pos:start="1:22" pos:end="1:34"><type pos:start="1:22" pos:end="1:34"><name pos:start="1:22" pos:end="1:31">URLContext</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:34">h</name></decl></parameter>, <parameter pos:start="1:37" pos:end="1:54"><decl pos:start="1:37" pos:end="1:54"><type pos:start="1:37" pos:end="1:54"><specifier pos:start="1:37" pos:end="1:41">const</specifier> <name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:54">buf</name></decl></parameter>, <parameter pos:start="1:57" pos:end="1:64"><decl pos:start="1:57" pos:end="1:64"><type pos:start="1:57" pos:end="1:64"><name pos:start="1:57" pos:end="1:59">int</name></type> <name pos:start="1:61" pos:end="1:64">size</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:24">

    <decl_stmt pos:start="5:5" pos:end="5:33"><decl pos:start="5:5" pos:end="5:32"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">TCPContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:17">s</name> <init pos:start="5:19" pos:end="5:32">= <expr pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:32"><name pos:start="5:21" pos:end="5:21">h</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:32"><decl pos:start="7:5" pos:end="7:11"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:11">ret</name></decl>, <decl pos:start="7:14" pos:end="7:18"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:14" pos:end="7:18">size1</name></decl>, <decl pos:start="7:21" pos:end="7:26"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:21" pos:end="7:26">fd_max</name></decl>, <decl pos:start="7:29" pos:end="7:31"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:29" pos:end="7:31">len</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:16"><decl pos:start="9:5" pos:end="9:15"><type pos:start="9:5" pos:end="9:10"><name pos:start="9:5" pos:end="9:10">fd_set</name></type> <name pos:start="9:12" pos:end="9:15">wfds</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:18">timeval</name></name></type> <name pos:start="11:20" pos:end="11:21">tv</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:17"><expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:9">size1</name> <operator pos:start="15:11" pos:end="15:11">=</operator> <name pos:start="15:13" pos:end="15:16">size</name></expr>;</expr_stmt>

    <while pos:start="17:5" pos:end="65:5">while <condition pos:start="17:11" pos:end="17:20">(<expr pos:start="17:12" pos:end="17:19"><name pos:start="17:12" pos:end="17:15">size</name> <operator pos:start="17:17" pos:end="17:17">&gt;</operator> <literal type="number" pos:start="17:19" pos:end="17:19">0</literal></expr>)</condition> <block pos:start="17:22" pos:end="65:5">{<block_content pos:start="19:9" pos:end="63:9">

        <if_stmt pos:start="19:9" pos:end="21:34"><if pos:start="19:9" pos:end="21:34">if <condition pos:start="19:12" pos:end="19:31">(<expr pos:start="19:13" pos:end="19:30"><call pos:start="19:13" pos:end="19:30"><name pos:start="19:13" pos:end="19:28">url_interrupt_cb</name><argument_list pos:start="19:29" pos:end="19:30">()</argument_list></call></expr>)</condition><block type="pseudo" pos:start="21:13" pos:end="21:34"><block_content pos:start="21:13" pos:end="21:34">

            <return pos:start="21:13" pos:end="21:34">return <expr pos:start="21:20" pos:end="21:33"><call pos:start="21:20" pos:end="21:33"><name pos:start="21:20" pos:end="21:26">AVERROR</name><argument_list pos:start="21:27" pos:end="21:33">(<argument pos:start="21:28" pos:end="21:32"><expr pos:start="21:28" pos:end="21:32"><name pos:start="21:28" pos:end="21:32">EINTR</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="23:9" pos:end="23:23"><expr pos:start="23:9" pos:end="23:22"><name pos:start="23:9" pos:end="23:14">fd_max</name> <operator pos:start="23:16" pos:end="23:16">=</operator> <name pos:start="23:18" pos:end="23:22"><name pos:start="23:18" pos:end="23:18">s</name><operator pos:start="23:19" pos:end="23:20">-&gt;</operator><name pos:start="23:21" pos:end="23:22">fd</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="25:9" pos:end="25:23"><expr pos:start="25:9" pos:end="25:22"><call pos:start="25:9" pos:end="25:22"><name pos:start="25:9" pos:end="25:15">FD_ZERO</name><argument_list pos:start="25:16" pos:end="25:22">(<argument pos:start="25:17" pos:end="25:21"><expr pos:start="25:17" pos:end="25:21"><operator pos:start="25:17" pos:end="25:17">&amp;</operator><name pos:start="25:18" pos:end="25:21">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="27:9" pos:end="27:29"><expr pos:start="27:9" pos:end="27:28"><call pos:start="27:9" pos:end="27:28"><name pos:start="27:9" pos:end="27:14">FD_SET</name><argument_list pos:start="27:15" pos:end="27:28">(<argument pos:start="27:16" pos:end="27:20"><expr pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:20"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:20">fd</name></name></expr></argument>, <argument pos:start="27:23" pos:end="27:27"><expr pos:start="27:23" pos:end="27:27"><operator pos:start="27:23" pos:end="27:23">&amp;</operator><name pos:start="27:24" pos:end="27:27">wfds</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="29:9" pos:end="29:22"><expr pos:start="29:9" pos:end="29:21"><name pos:start="29:9" pos:end="29:17"><name pos:start="29:9" pos:end="29:10">tv</name><operator pos:start="29:11" pos:end="29:11">.</operator><name pos:start="29:12" pos:end="29:17">tv_sec</name></name> <operator pos:start="29:19" pos:end="29:19">=</operator> <literal type="number" pos:start="29:21" pos:end="29:21">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:18"><name pos:start="31:9" pos:end="31:10">tv</name><operator pos:start="31:11" pos:end="31:11">.</operator><name pos:start="31:12" pos:end="31:18">tv_usec</name></name> <operator pos:start="31:20" pos:end="31:20">=</operator> <literal type="number" pos:start="31:22" pos:end="31:24">100</literal> <operator pos:start="31:26" pos:end="31:26">*</operator> <literal type="number" pos:start="31:28" pos:end="31:31">1000</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:57"><expr pos:start="33:9" pos:end="33:56"><name pos:start="33:9" pos:end="33:11">ret</name> <operator pos:start="33:13" pos:end="33:13">=</operator> <call pos:start="33:15" pos:end="33:56"><name pos:start="33:15" pos:end="33:20">select</name><argument_list pos:start="33:21" pos:end="33:56">(<argument pos:start="33:22" pos:end="33:31"><expr pos:start="33:22" pos:end="33:31"><name pos:start="33:22" pos:end="33:27">fd_max</name> <operator pos:start="33:29" pos:end="33:29">+</operator> <literal type="number" pos:start="33:31" pos:end="33:31">1</literal></expr></argument>, <argument pos:start="33:34" pos:end="33:37"><expr pos:start="33:34" pos:end="33:37"><name pos:start="33:34" pos:end="33:37">NULL</name></expr></argument>, <argument pos:start="33:40" pos:end="33:44"><expr pos:start="33:40" pos:end="33:44"><operator pos:start="33:40" pos:end="33:40">&amp;</operator><name pos:start="33:41" pos:end="33:44">wfds</name></expr></argument>, <argument pos:start="33:47" pos:end="33:50"><expr pos:start="33:47" pos:end="33:50"><name pos:start="33:47" pos:end="33:50">NULL</name></expr></argument>, <argument pos:start="33:53" pos:end="33:55"><expr pos:start="33:53" pos:end="33:55"><operator pos:start="33:53" pos:end="33:53">&amp;</operator><name pos:start="33:54" pos:end="33:55">tv</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="35:9" pos:end="63:9"><if pos:start="35:9" pos:end="55:9">if <condition pos:start="35:12" pos:end="35:46">(<expr pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:15">ret</name> <operator pos:start="35:17" pos:end="35:17">&gt;</operator> <literal type="number" pos:start="35:19" pos:end="35:19">0</literal> <operator pos:start="35:21" pos:end="35:22">&amp;&amp;</operator> <call pos:start="35:24" pos:end="35:45"><name pos:start="35:24" pos:end="35:31">FD_ISSET</name><argument_list pos:start="35:32" pos:end="35:45">(<argument pos:start="35:33" pos:end="35:37"><expr pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:37"><name pos:start="35:33" pos:end="35:33">s</name><operator pos:start="35:34" pos:end="35:35">-&gt;</operator><name pos:start="35:36" pos:end="35:37">fd</name></name></expr></argument>, <argument pos:start="35:40" pos:end="35:44"><expr pos:start="35:40" pos:end="35:44"><operator pos:start="35:40" pos:end="35:40">&amp;</operator><name pos:start="35:41" pos:end="35:44">wfds</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:48" pos:end="55:9">{<block_content pos:start="37:13" pos:end="53:23">

            <expr_stmt pos:start="37:13" pos:end="37:44"><expr pos:start="37:13" pos:end="37:43"><name pos:start="37:13" pos:end="37:15">len</name> <operator pos:start="37:17" pos:end="37:17">=</operator> <call pos:start="37:19" pos:end="37:43"><name pos:start="37:19" pos:end="37:22">send</name><argument_list pos:start="37:23" pos:end="37:43">(<argument pos:start="37:24" pos:end="37:28"><expr pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:28"><name pos:start="37:24" pos:end="37:24">s</name><operator pos:start="37:25" pos:end="37:26">-&gt;</operator><name pos:start="37:27" pos:end="37:28">fd</name></name></expr></argument>, <argument pos:start="37:31" pos:end="37:33"><expr pos:start="37:31" pos:end="37:33"><name pos:start="37:31" pos:end="37:33">buf</name></expr></argument>, <argument pos:start="37:36" pos:end="37:39"><expr pos:start="37:36" pos:end="37:39"><name pos:start="37:36" pos:end="37:39">size</name></expr></argument>, <argument pos:start="37:42" pos:end="37:42"><expr pos:start="37:42" pos:end="37:42"><literal type="number" pos:start="37:42" pos:end="37:42">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="49:13"><if pos:start="39:13" pos:end="49:13">if <condition pos:start="39:16" pos:end="39:24">(<expr pos:start="39:17" pos:end="39:23"><name pos:start="39:17" pos:end="39:19">len</name> <operator pos:start="39:21" pos:end="39:21">&lt;</operator> <literal type="number" pos:start="39:23" pos:end="39:23">0</literal></expr>)</condition> <block pos:start="39:26" pos:end="49:13">{<block_content pos:start="41:17" pos:end="47:25">

                <if_stmt pos:start="41:17" pos:end="45:41"><if pos:start="41:17" pos:end="45:41">if <condition pos:start="41:20" pos:end="43:57">(<expr pos:start="41:21" pos:end="43:56"><call pos:start="41:21" pos:end="41:33"><name pos:start="41:21" pos:end="41:31">ff_neterrno</name><argument_list pos:start="41:32" pos:end="41:33">()</argument_list></call> <operator pos:start="41:35" pos:end="41:36">!=</operator> <call pos:start="41:38" pos:end="41:55"><name pos:start="41:38" pos:end="41:48">FF_NETERROR</name><argument_list pos:start="41:49" pos:end="41:55">(<argument pos:start="41:50" pos:end="41:54"><expr pos:start="41:50" pos:end="41:54"><name pos:start="41:50" pos:end="41:54">EINTR</name></expr></argument>)</argument_list></call> <operator pos:start="41:57" pos:end="41:58">&amp;&amp;</operator>

                    <call pos:start="43:21" pos:end="43:33"><name pos:start="43:21" pos:end="43:31">ff_neterrno</name><argument_list pos:start="43:32" pos:end="43:33">()</argument_list></call> <operator pos:start="43:35" pos:end="43:36">!=</operator> <call pos:start="43:38" pos:end="43:56"><name pos:start="43:38" pos:end="43:48">FF_NETERROR</name><argument_list pos:start="43:49" pos:end="43:56">(<argument pos:start="43:50" pos:end="43:55"><expr pos:start="43:50" pos:end="43:55"><name pos:start="43:50" pos:end="43:55">EAGAIN</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="45:21" pos:end="45:41"><block_content pos:start="45:21" pos:end="45:41">

                    <return pos:start="45:21" pos:end="45:41">return <expr pos:start="45:28" pos:end="45:40"><call pos:start="45:28" pos:end="45:40"><name pos:start="45:28" pos:end="45:38">ff_neterrno</name><argument_list pos:start="45:39" pos:end="45:40">()</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

                <continue pos:start="47:17" pos:end="47:25">continue;</continue>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:24"><expr pos:start="51:13" pos:end="51:23"><name pos:start="51:13" pos:end="51:16">size</name> <operator pos:start="51:18" pos:end="51:19">-=</operator> <name pos:start="51:21" pos:end="51:23">len</name></expr>;</expr_stmt>

            <expr_stmt pos:start="53:13" pos:end="53:23"><expr pos:start="53:13" pos:end="53:22"><name pos:start="53:13" pos:end="53:15">buf</name> <operator pos:start="53:17" pos:end="53:18">+=</operator> <name pos:start="53:20" pos:end="53:22">len</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="55:11" pos:end="63:9">else if <condition pos:start="55:19" pos:end="55:27">(<expr pos:start="55:20" pos:end="55:26"><name pos:start="55:20" pos:end="55:22">ret</name> <operator pos:start="55:24" pos:end="55:24">&lt;</operator> <literal type="number" pos:start="55:26" pos:end="55:26">0</literal></expr>)</condition> <block pos:start="55:29" pos:end="63:9">{<block_content pos:start="57:13" pos:end="61:22">

            <if_stmt pos:start="57:13" pos:end="59:25"><if pos:start="57:13" pos:end="59:25">if <condition pos:start="57:16" pos:end="57:52">(<expr pos:start="57:17" pos:end="57:51"><call pos:start="57:17" pos:end="57:29"><name pos:start="57:17" pos:end="57:27">ff_neterrno</name><argument_list pos:start="57:28" pos:end="57:29">()</argument_list></call> <operator pos:start="57:31" pos:end="57:32">==</operator> <call pos:start="57:34" pos:end="57:51"><name pos:start="57:34" pos:end="57:44">FF_NETERROR</name><argument_list pos:start="57:45" pos:end="57:51">(<argument pos:start="57:46" pos:end="57:50"><expr pos:start="57:46" pos:end="57:50"><name pos:start="57:46" pos:end="57:50">EINTR</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="59:17" pos:end="59:25"><block_content pos:start="59:17" pos:end="59:25">

                <continue pos:start="59:17" pos:end="59:25">continue;</continue></block_content></block></if></if_stmt>

            <return pos:start="61:13" pos:end="61:22">return <expr pos:start="61:20" pos:end="61:21"><operator pos:start="61:20" pos:end="61:20">-</operator><literal type="number" pos:start="61:21" pos:end="61:21">1</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></while>

    <return pos:start="67:5" pos:end="67:24">return <expr pos:start="67:12" pos:end="67:23"><name pos:start="67:12" pos:end="67:16">size1</name> <operator pos:start="67:18" pos:end="67:18">-</operator> <name pos:start="67:20" pos:end="67:23">size</name></expr>;</return>

</block_content>}</block></function>
</unit>
