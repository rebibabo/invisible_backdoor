<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/332.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:31"><name pos:start="1:1" pos:end="1:25">test_opts_range_unvisited</name><argument_list pos:start="1:26" pos:end="1:31">(<argument pos:start="1:27" pos:end="1:30">void</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="71:1">{<block_content pos:start="5:5" pos:end="69:24">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:24"><type pos:start="5:5" pos:end="5:13"><name pos:start="5:5" pos:end="5:11">intList</name> <modifier pos:start="5:13" pos:end="5:13">*</modifier></type><name pos:start="5:14" pos:end="5:17">list</name> <init pos:start="5:19" pos:end="5:24">= <expr pos:start="5:21" pos:end="5:24"><name pos:start="5:21" pos:end="5:24">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:18"><decl pos:start="7:5" pos:end="7:17"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">intList</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:17">tail</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">QemuOpts</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:18">opts</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">Visitor</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">v</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="17:41"><expr pos:start="15:5" pos:end="17:40"><name pos:start="15:5" pos:end="15:8">opts</name> <operator pos:start="15:10" pos:end="15:10">=</operator> <call pos:start="15:12" pos:end="17:40"><name pos:start="15:12" pos:end="15:26">qemu_opts_parse</name><argument_list pos:start="15:27" pos:end="17:40">(<argument pos:start="15:28" pos:end="15:52"><expr pos:start="15:28" pos:end="15:52"><call pos:start="15:28" pos:end="15:52"><name pos:start="15:28" pos:end="15:41">qemu_find_opts</name><argument_list pos:start="15:42" pos:end="15:52">(<argument pos:start="15:43" pos:end="15:51"><expr pos:start="15:43" pos:end="15:51"><literal type="string" pos:start="15:43" pos:end="15:51">"userdef"</literal></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="15:55" pos:end="15:65"><expr pos:start="15:55" pos:end="15:65"><literal type="string" pos:start="15:55" pos:end="15:65">"ilist=0-2"</literal></expr></argument>, <argument pos:start="15:68" pos:end="15:72"><expr pos:start="15:68" pos:end="15:72"><name pos:start="15:68" pos:end="15:72">false</name></expr></argument>,

                           <argument pos:start="17:28" pos:end="17:39"><expr pos:start="17:28" pos:end="17:39"><operator pos:start="17:28" pos:end="17:28">&amp;</operator><name pos:start="17:29" pos:end="17:39">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:31"><expr pos:start="21:5" pos:end="21:30"><name pos:start="21:5" pos:end="21:5">v</name> <operator pos:start="21:7" pos:end="21:7">=</operator> <call pos:start="21:9" pos:end="21:30"><name pos:start="21:9" pos:end="21:24">opts_visitor_new</name><argument_list pos:start="21:25" pos:end="21:30">(<argument pos:start="21:26" pos:end="21:29"><expr pos:start="21:26" pos:end="21:29"><name pos:start="21:26" pos:end="21:29">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:55"><expr pos:start="25:5" pos:end="25:54"><call pos:start="25:5" pos:end="25:54"><name pos:start="25:5" pos:end="25:22">visit_start_struct</name><argument_list pos:start="25:23" pos:end="25:54">(<argument pos:start="25:24" pos:end="25:24"><expr pos:start="25:24" pos:end="25:24"><name pos:start="25:24" pos:end="25:24">v</name></expr></argument>, <argument pos:start="25:27" pos:end="25:30"><expr pos:start="25:27" pos:end="25:30"><name pos:start="25:27" pos:end="25:30">NULL</name></expr></argument>, <argument pos:start="25:33" pos:end="25:36"><expr pos:start="25:33" pos:end="25:36"><name pos:start="25:33" pos:end="25:36">NULL</name></expr></argument>, <argument pos:start="25:39" pos:end="25:39"><expr pos:start="25:39" pos:end="25:39"><literal type="number" pos:start="25:39" pos:end="25:39">0</literal></expr></argument>, <argument pos:start="25:42" pos:end="25:53"><expr pos:start="25:42" pos:end="25:53"><operator pos:start="25:42" pos:end="25:42">&amp;</operator><name pos:start="25:43" pos:end="25:53">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="29:5" pos:end="29:75">/* Would be simpler if the visitor genuinely supported virtual walks */</comment>

    <expr_stmt pos:start="31:5" pos:end="33:35"><expr pos:start="31:5" pos:end="33:34"><call pos:start="31:5" pos:end="33:34"><name pos:start="31:5" pos:end="31:20">visit_start_list</name><argument_list pos:start="31:21" pos:end="33:34">(<argument pos:start="31:22" pos:end="31:22"><expr pos:start="31:22" pos:end="31:22"><name pos:start="31:22" pos:end="31:22">v</name></expr></argument>, <argument pos:start="31:25" pos:end="31:31"><expr pos:start="31:25" pos:end="31:31"><literal type="string" pos:start="31:25" pos:end="31:31">"ilist"</literal></expr></argument>, <argument pos:start="31:34" pos:end="31:54"><expr pos:start="31:34" pos:end="31:54"><operator pos:start="31:34" pos:end="31:34">(</operator><name pos:start="31:35" pos:end="31:45">GenericList</name> <operator pos:start="31:47" pos:end="31:47">*</operator><operator pos:start="31:48" pos:end="31:48">*</operator><operator pos:start="31:49" pos:end="31:49">)</operator><operator pos:start="31:50" pos:end="31:50">&amp;</operator><name pos:start="31:51" pos:end="31:54">list</name></expr></argument>, <argument pos:start="31:57" pos:end="31:69"><expr pos:start="31:57" pos:end="31:69"><sizeof pos:start="31:57" pos:end="31:69">sizeof<argument_list pos:start="31:63" pos:end="31:69">(<argument pos:start="31:64" pos:end="31:68"><expr pos:start="31:64" pos:end="31:68"><operator pos:start="31:64" pos:end="31:64">*</operator><name pos:start="31:65" pos:end="31:68">list</name></expr></argument>)</argument_list></sizeof></expr></argument>,

                     <argument pos:start="33:22" pos:end="33:33"><expr pos:start="33:22" pos:end="33:33"><operator pos:start="33:22" pos:end="33:22">&amp;</operator><name pos:start="33:23" pos:end="33:33">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:16"><expr pos:start="35:5" pos:end="35:15"><name pos:start="35:5" pos:end="35:8">tail</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <name pos:start="35:12" pos:end="35:15">list</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:56"><expr pos:start="37:5" pos:end="37:55"><call pos:start="37:5" pos:end="37:55"><name pos:start="37:5" pos:end="37:18">visit_type_int</name><argument_list pos:start="37:19" pos:end="37:55">(<argument pos:start="37:20" pos:end="37:20"><expr pos:start="37:20" pos:end="37:20"><name pos:start="37:20" pos:end="37:20">v</name></expr></argument>, <argument pos:start="37:23" pos:end="37:26"><expr pos:start="37:23" pos:end="37:26"><name pos:start="37:23" pos:end="37:26">NULL</name></expr></argument>, <argument pos:start="37:29" pos:end="37:40"><expr pos:start="37:29" pos:end="37:40"><operator pos:start="37:29" pos:end="37:29">&amp;</operator><name pos:start="37:30" pos:end="37:40"><name pos:start="37:30" pos:end="37:33">tail</name><operator pos:start="37:34" pos:end="37:35">-&gt;</operator><name pos:start="37:36" pos:end="37:40">value</name></name></expr></argument>, <argument pos:start="37:43" pos:end="37:54"><expr pos:start="37:43" pos:end="37:54"><operator pos:start="37:43" pos:end="37:43">&amp;</operator><name pos:start="37:44" pos:end="37:54">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="39:5" pos:end="39:40"><expr pos:start="39:5" pos:end="39:39"><call pos:start="39:5" pos:end="39:39"><name pos:start="39:5" pos:end="39:19">g_assert_cmpint</name><argument_list pos:start="39:20" pos:end="39:39">(<argument pos:start="39:21" pos:end="39:31"><expr pos:start="39:21" pos:end="39:31"><name pos:start="39:21" pos:end="39:31"><name pos:start="39:21" pos:end="39:24">tail</name><operator pos:start="39:25" pos:end="39:26">-&gt;</operator><name pos:start="39:27" pos:end="39:31">value</name></name></expr></argument>, <argument pos:start="39:34" pos:end="39:35"><expr pos:start="39:34" pos:end="39:35"><operator pos:start="39:34" pos:end="39:35">==</operator></expr></argument>, <argument pos:start="39:38" pos:end="39:38"><expr pos:start="39:38" pos:end="39:38"><literal type="number" pos:start="39:38" pos:end="39:38">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:77"><expr pos:start="41:5" pos:end="41:76"><name pos:start="41:5" pos:end="41:8">tail</name> <operator pos:start="41:10" pos:end="41:10">=</operator> <operator pos:start="41:12" pos:end="41:12">(</operator><name pos:start="41:13" pos:end="41:19">intList</name> <operator pos:start="41:21" pos:end="41:21">*</operator><operator pos:start="41:22" pos:end="41:22">)</operator><call pos:start="41:23" pos:end="41:76"><name pos:start="41:23" pos:end="41:37">visit_next_list</name><argument_list pos:start="41:38" pos:end="41:76">(<argument pos:start="41:39" pos:end="41:39"><expr pos:start="41:39" pos:end="41:39"><name pos:start="41:39" pos:end="41:39">v</name></expr></argument>, <argument pos:start="41:42" pos:end="41:60"><expr pos:start="41:42" pos:end="41:60"><operator pos:start="41:42" pos:end="41:42">(</operator><name pos:start="41:43" pos:end="41:53">GenericList</name> <operator pos:start="41:55" pos:end="41:55">*</operator><operator pos:start="41:56" pos:end="41:56">)</operator><name pos:start="41:57" pos:end="41:60">tail</name></expr></argument>, <argument pos:start="41:63" pos:end="41:75"><expr pos:start="41:63" pos:end="41:75"><sizeof pos:start="41:63" pos:end="41:75">sizeof<argument_list pos:start="41:69" pos:end="41:75">(<argument pos:start="41:70" pos:end="41:74"><expr pos:start="41:70" pos:end="41:74"><operator pos:start="41:70" pos:end="41:70">*</operator><name pos:start="41:71" pos:end="41:74">list</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:19"><expr pos:start="43:5" pos:end="43:18"><call pos:start="43:5" pos:end="43:18"><name pos:start="43:5" pos:end="43:12">g_assert</name><argument_list pos:start="43:13" pos:end="43:18">(<argument pos:start="43:14" pos:end="43:17"><expr pos:start="43:14" pos:end="43:17"><name pos:start="43:14" pos:end="43:17">tail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:56"><expr pos:start="45:5" pos:end="45:55"><call pos:start="45:5" pos:end="45:55"><name pos:start="45:5" pos:end="45:18">visit_type_int</name><argument_list pos:start="45:19" pos:end="45:55">(<argument pos:start="45:20" pos:end="45:20"><expr pos:start="45:20" pos:end="45:20"><name pos:start="45:20" pos:end="45:20">v</name></expr></argument>, <argument pos:start="45:23" pos:end="45:26"><expr pos:start="45:23" pos:end="45:26"><name pos:start="45:23" pos:end="45:26">NULL</name></expr></argument>, <argument pos:start="45:29" pos:end="45:40"><expr pos:start="45:29" pos:end="45:40"><operator pos:start="45:29" pos:end="45:29">&amp;</operator><name pos:start="45:30" pos:end="45:40"><name pos:start="45:30" pos:end="45:33">tail</name><operator pos:start="45:34" pos:end="45:35">-&gt;</operator><name pos:start="45:36" pos:end="45:40">value</name></name></expr></argument>, <argument pos:start="45:43" pos:end="45:54"><expr pos:start="45:43" pos:end="45:54"><operator pos:start="45:43" pos:end="45:43">&amp;</operator><name pos:start="45:44" pos:end="45:54">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:40"><expr pos:start="47:5" pos:end="47:39"><call pos:start="47:5" pos:end="47:39"><name pos:start="47:5" pos:end="47:19">g_assert_cmpint</name><argument_list pos:start="47:20" pos:end="47:39">(<argument pos:start="47:21" pos:end="47:31"><expr pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:31"><name pos:start="47:21" pos:end="47:24">tail</name><operator pos:start="47:25" pos:end="47:26">-&gt;</operator><name pos:start="47:27" pos:end="47:31">value</name></name></expr></argument>, <argument pos:start="47:34" pos:end="47:35"><expr pos:start="47:34" pos:end="47:35"><operator pos:start="47:34" pos:end="47:35">==</operator></expr></argument>, <argument pos:start="47:38" pos:end="47:38"><expr pos:start="47:38" pos:end="47:38"><literal type="number" pos:start="47:38" pos:end="47:38">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:77"><expr pos:start="49:5" pos:end="49:76"><name pos:start="49:5" pos:end="49:8">tail</name> <operator pos:start="49:10" pos:end="49:10">=</operator> <operator pos:start="49:12" pos:end="49:12">(</operator><name pos:start="49:13" pos:end="49:19">intList</name> <operator pos:start="49:21" pos:end="49:21">*</operator><operator pos:start="49:22" pos:end="49:22">)</operator><call pos:start="49:23" pos:end="49:76"><name pos:start="49:23" pos:end="49:37">visit_next_list</name><argument_list pos:start="49:38" pos:end="49:76">(<argument pos:start="49:39" pos:end="49:39"><expr pos:start="49:39" pos:end="49:39"><name pos:start="49:39" pos:end="49:39">v</name></expr></argument>, <argument pos:start="49:42" pos:end="49:60"><expr pos:start="49:42" pos:end="49:60"><operator pos:start="49:42" pos:end="49:42">(</operator><name pos:start="49:43" pos:end="49:53">GenericList</name> <operator pos:start="49:55" pos:end="49:55">*</operator><operator pos:start="49:56" pos:end="49:56">)</operator><name pos:start="49:57" pos:end="49:60">tail</name></expr></argument>, <argument pos:start="49:63" pos:end="49:75"><expr pos:start="49:63" pos:end="49:75"><sizeof pos:start="49:63" pos:end="49:75">sizeof<argument_list pos:start="49:69" pos:end="49:75">(<argument pos:start="49:70" pos:end="49:74"><expr pos:start="49:70" pos:end="49:74"><operator pos:start="49:70" pos:end="49:70">*</operator><name pos:start="49:71" pos:end="49:74">list</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:19"><expr pos:start="51:5" pos:end="51:18"><call pos:start="51:5" pos:end="51:18"><name pos:start="51:5" pos:end="51:12">g_assert</name><argument_list pos:start="51:13" pos:end="51:18">(<argument pos:start="51:14" pos:end="51:17"><expr pos:start="51:14" pos:end="51:17"><name pos:start="51:14" pos:end="51:17">tail</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="53:5" pos:end="53:38"><expr pos:start="53:5" pos:end="53:37"><call pos:start="53:5" pos:end="53:37"><name pos:start="53:5" pos:end="53:20">visit_check_list</name><argument_list pos:start="53:21" pos:end="53:37">(<argument pos:start="53:22" pos:end="53:22"><expr pos:start="53:22" pos:end="53:22"><name pos:start="53:22" pos:end="53:22">v</name></expr></argument>, <argument pos:start="53:25" pos:end="53:36"><expr pos:start="53:25" pos:end="53:36"><operator pos:start="53:25" pos:end="53:25">&amp;</operator><name pos:start="53:26" pos:end="53:36">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <comment type="block" pos:start="53:40" pos:end="53:77">/* BUG: unvisited tail not reported */</comment>

    <expr_stmt pos:start="55:5" pos:end="55:38"><expr pos:start="55:5" pos:end="55:37"><call pos:start="55:5" pos:end="55:37"><name pos:start="55:5" pos:end="55:18">visit_end_list</name><argument_list pos:start="55:19" pos:end="55:37">(<argument pos:start="55:20" pos:end="55:20"><expr pos:start="55:20" pos:end="55:20"><name pos:start="55:20" pos:end="55:20">v</name></expr></argument>, <argument pos:start="55:23" pos:end="55:36"><expr pos:start="55:23" pos:end="55:36"><operator pos:start="55:23" pos:end="55:23">(</operator><name pos:start="55:24" pos:end="55:27">void</name> <operator pos:start="55:29" pos:end="55:29">*</operator><operator pos:start="55:30" pos:end="55:30">*</operator><operator pos:start="55:31" pos:end="55:31">)</operator><operator pos:start="55:32" pos:end="55:32">&amp;</operator><name pos:start="55:33" pos:end="55:36">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:40"><expr pos:start="59:5" pos:end="59:39"><call pos:start="59:5" pos:end="59:39"><name pos:start="59:5" pos:end="59:22">visit_check_struct</name><argument_list pos:start="59:23" pos:end="59:39">(<argument pos:start="59:24" pos:end="59:24"><expr pos:start="59:24" pos:end="59:24"><name pos:start="59:24" pos:end="59:24">v</name></expr></argument>, <argument pos:start="59:27" pos:end="59:38"><expr pos:start="59:27" pos:end="59:38"><operator pos:start="59:27" pos:end="59:27">&amp;</operator><name pos:start="59:28" pos:end="59:38">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:30"><expr pos:start="61:5" pos:end="61:29"><call pos:start="61:5" pos:end="61:29"><name pos:start="61:5" pos:end="61:20">visit_end_struct</name><argument_list pos:start="61:21" pos:end="61:29">(<argument pos:start="61:22" pos:end="61:22"><expr pos:start="61:22" pos:end="61:22"><name pos:start="61:22" pos:end="61:22">v</name></expr></argument>, <argument pos:start="61:25" pos:end="61:28"><expr pos:start="61:25" pos:end="61:28"><name pos:start="61:25" pos:end="61:28">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:28"><expr pos:start="65:5" pos:end="65:27"><call pos:start="65:5" pos:end="65:27"><name pos:start="65:5" pos:end="65:21">qapi_free_intList</name><argument_list pos:start="65:22" pos:end="65:27">(<argument pos:start="65:23" pos:end="65:26"><expr pos:start="65:23" pos:end="65:26"><name pos:start="65:23" pos:end="65:26">list</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:18"><expr pos:start="67:5" pos:end="67:17"><call pos:start="67:5" pos:end="67:17"><name pos:start="67:5" pos:end="67:14">visit_free</name><argument_list pos:start="67:15" pos:end="67:17">(<argument pos:start="67:16" pos:end="67:16"><expr pos:start="67:16" pos:end="67:16"><name pos:start="67:16" pos:end="67:16">v</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="69:5" pos:end="69:24"><expr pos:start="69:5" pos:end="69:23"><call pos:start="69:5" pos:end="69:23"><name pos:start="69:5" pos:end="69:17">qemu_opts_del</name><argument_list pos:start="69:18" pos:end="69:23">(<argument pos:start="69:19" pos:end="69:22"><expr pos:start="69:19" pos:end="69:22"><name pos:start="69:19" pos:end="69:22">opts</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block>
</unit>
