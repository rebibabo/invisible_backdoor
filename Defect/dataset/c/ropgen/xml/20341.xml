<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20341.c" pos:tabs="8"><function pos:start="1:1" pos:end="313:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:21">vp78_decode_frame</name><parameter_list pos:start="1:22" pos:end="3:50">(<parameter pos:start="1:23" pos:end="1:43"><decl pos:start="1:23" pos:end="1:43"><type pos:start="1:23" pos:end="1:43"><name pos:start="1:23" pos:end="1:36">AVCodecContext</name> <modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:43">avctx</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:55"><decl pos:start="1:46" pos:end="1:55"><type pos:start="1:46" pos:end="1:55"><name pos:start="1:46" pos:end="1:49">void</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:55">data</name></decl></parameter>, <parameter pos:start="1:58" pos:end="1:71"><decl pos:start="1:58" pos:end="1:71"><type pos:start="1:58" pos:end="1:71"><name pos:start="1:58" pos:end="1:60">int</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:71">got_frame</name></decl></parameter>,

                      <parameter pos:start="3:23" pos:end="3:37"><decl pos:start="3:23" pos:end="3:37"><type pos:start="3:23" pos:end="3:37"><name pos:start="3:23" pos:end="3:30">AVPacket</name> <modifier pos:start="3:32" pos:end="3:32">*</modifier></type><name pos:start="3:33" pos:end="3:37">avpkt</name></decl></parameter>, <parameter pos:start="3:40" pos:end="3:49"><decl pos:start="3:40" pos:end="3:49"><type pos:start="3:40" pos:end="3:49"><name pos:start="3:40" pos:end="3:42">int</name></type> <name pos:start="3:44" pos:end="3:49">is_vp7</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="313:1">{<block_content pos:start="7:5" pos:end="311:15">

    <decl_stmt pos:start="7:5" pos:end="7:37"><decl pos:start="7:5" pos:end="7:36"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">VP8Context</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:17">s</name> <init pos:start="7:19" pos:end="7:36">= <expr pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:36"><name pos:start="7:21" pos:end="7:25">avctx</name><operator pos:start="7:26" pos:end="7:27">-&gt;</operator><name pos:start="7:28" pos:end="7:36">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:11"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:11">ret</name></decl>, <decl pos:start="9:14" pos:end="9:14"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:14" pos:end="9:14">i</name></decl>, <decl pos:start="9:17" pos:end="9:26"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:17" pos:end="9:26">referenced</name></decl>, <decl pos:start="9:29" pos:end="9:36"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:29" pos:end="9:36">num_jobs</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:31"><decl pos:start="11:5" pos:end="11:30"><type pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:18"><name pos:start="11:5" pos:end="11:8">enum</name> <name pos:start="11:10" pos:end="11:18">AVDiscard</name></name></type> <name pos:start="11:20" pos:end="11:30">skip_thresh</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:47"><decl pos:start="13:5" pos:end="13:33"><type pos:start="13:5" pos:end="13:14"><name pos:start="13:5" pos:end="13:12">VP8Frame</name> <modifier pos:start="13:14" pos:end="13:14">*</modifier></type><name pos:start="13:15" pos:end="13:23">av_uninit</name><argument_list pos:start="13:24" pos:end="13:33">(<argument pos:start="13:25" pos:end="13:32"><expr pos:start="13:25" pos:end="13:32"><name pos:start="13:25" pos:end="13:32">curframe</name></expr></argument>)</argument_list></decl>, <decl pos:start="13:36" pos:end="13:46"><type ref="prev" pos:start="13:5" pos:end="13:14"><modifier pos:start="13:36" pos:end="13:36">*</modifier></type><name pos:start="13:37" pos:end="13:46">prev_frame</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="23:67"><if pos:start="17:5" pos:end="19:67">if <condition pos:start="17:8" pos:end="17:15">(<expr pos:start="17:9" pos:end="17:14"><name pos:start="17:9" pos:end="17:14">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:67"><block_content pos:start="19:9" pos:end="19:67">

        <expr_stmt pos:start="19:9" pos:end="19:67"><expr pos:start="19:9" pos:end="19:66"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">=</operator> <call pos:start="19:15" pos:end="19:66"><name pos:start="19:15" pos:end="19:37">vp7_decode_frame_header</name><argument_list pos:start="19:38" pos:end="19:66">(<argument pos:start="19:39" pos:end="19:39"><expr pos:start="19:39" pos:end="19:39"><name pos:start="19:39" pos:end="19:39">s</name></expr></argument>, <argument pos:start="19:42" pos:end="19:52"><expr pos:start="19:42" pos:end="19:52"><name pos:start="19:42" pos:end="19:52"><name pos:start="19:42" pos:end="19:46">avpkt</name><operator pos:start="19:47" pos:end="19:48">-&gt;</operator><name pos:start="19:49" pos:end="19:52">data</name></name></expr></argument>, <argument pos:start="19:55" pos:end="19:65"><expr pos:start="19:55" pos:end="19:65"><name pos:start="19:55" pos:end="19:65"><name pos:start="19:55" pos:end="19:59">avpkt</name><operator pos:start="19:60" pos:end="19:61">-&gt;</operator><name pos:start="19:62" pos:end="19:65">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="21:5" pos:end="23:67">else<block type="pseudo" pos:start="23:9" pos:end="23:67"><block_content pos:start="23:9" pos:end="23:67">

        <expr_stmt pos:start="23:9" pos:end="23:67"><expr pos:start="23:9" pos:end="23:66"><name pos:start="23:9" pos:end="23:11">ret</name> <operator pos:start="23:13" pos:end="23:13">=</operator> <call pos:start="23:15" pos:end="23:66"><name pos:start="23:15" pos:end="23:37">vp8_decode_frame_header</name><argument_list pos:start="23:38" pos:end="23:66">(<argument pos:start="23:39" pos:end="23:39"><expr pos:start="23:39" pos:end="23:39"><name pos:start="23:39" pos:end="23:39">s</name></expr></argument>, <argument pos:start="23:42" pos:end="23:52"><expr pos:start="23:42" pos:end="23:52"><name pos:start="23:42" pos:end="23:52"><name pos:start="23:42" pos:end="23:46">avpkt</name><operator pos:start="23:47" pos:end="23:48">-&gt;</operator><name pos:start="23:49" pos:end="23:52">data</name></name></expr></argument>, <argument pos:start="23:55" pos:end="23:65"><expr pos:start="23:55" pos:end="23:65"><name pos:start="23:55" pos:end="23:65"><name pos:start="23:55" pos:end="23:59">avpkt</name><operator pos:start="23:60" pos:end="23:61">-&gt;</operator><name pos:start="23:62" pos:end="23:65">size</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="27:5" pos:end="29:17"><if pos:start="27:5" pos:end="29:17">if <condition pos:start="27:8" pos:end="27:16">(<expr pos:start="27:9" pos:end="27:15"><name pos:start="27:9" pos:end="27:11">ret</name> <operator pos:start="27:13" pos:end="27:13">&lt;</operator> <literal type="number" pos:start="27:15" pos:end="27:15">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:17"><block_content pos:start="29:9" pos:end="29:17">

        <goto pos:start="29:9" pos:end="29:17">goto <name pos:start="29:14" pos:end="29:16">err</name>;</goto></block_content></block></if></if_stmt>



    <expr_stmt pos:start="33:5" pos:end="33:47"><expr pos:start="33:5" pos:end="33:46"><name pos:start="33:5" pos:end="33:14">prev_frame</name> <operator pos:start="33:16" pos:end="33:16">=</operator> <name pos:start="33:18" pos:end="33:46"><name pos:start="33:18" pos:end="33:18">s</name><operator pos:start="33:19" pos:end="33:20">-&gt;</operator><name pos:start="33:21" pos:end="33:26">framep</name><index pos:start="33:27" pos:end="33:46">[<expr pos:start="33:28" pos:end="33:45"><name pos:start="33:28" pos:end="33:45">VP56_FRAME_CURRENT</name></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="37:5" pos:end="39:56"><expr pos:start="37:5" pos:end="39:55"><name pos:start="37:5" pos:end="37:14">referenced</name> <operator pos:start="37:16" pos:end="37:16">=</operator> <name pos:start="37:18" pos:end="37:31"><name pos:start="37:18" pos:end="37:18">s</name><operator pos:start="37:19" pos:end="37:20">-&gt;</operator><name pos:start="37:21" pos:end="37:31">update_last</name></name> <operator pos:start="37:33" pos:end="37:34">||</operator> <name pos:start="37:36" pos:end="37:51"><name pos:start="37:36" pos:end="37:36">s</name><operator pos:start="37:37" pos:end="37:38">-&gt;</operator><name pos:start="37:39" pos:end="37:51">update_golden</name></name> <operator pos:start="37:53" pos:end="37:54">==</operator> <name pos:start="37:56" pos:end="37:73">VP56_FRAME_CURRENT</name> <operator pos:start="37:75" pos:end="37:76">||</operator>

                 <name pos:start="39:18" pos:end="39:33"><name pos:start="39:18" pos:end="39:18">s</name><operator pos:start="39:19" pos:end="39:20">-&gt;</operator><name pos:start="39:21" pos:end="39:33">update_altref</name></name> <operator pos:start="39:35" pos:end="39:36">==</operator> <name pos:start="39:38" pos:end="39:55">VP56_FRAME_CURRENT</name></expr>;</expr_stmt>



    <expr_stmt pos:start="43:5" pos:end="47:61"><expr pos:start="43:5" pos:end="47:60"><name pos:start="43:5" pos:end="43:15">skip_thresh</name> <operator pos:start="43:17" pos:end="43:17">=</operator> <ternary pos:start="43:19" pos:end="47:60"><condition pos:start="43:19" pos:end="43:31"><expr pos:start="43:19" pos:end="43:29"><operator pos:start="43:19" pos:end="43:19">!</operator><name pos:start="43:20" pos:end="43:29">referenced</name></expr> ?</condition><then pos:start="43:33" pos:end="43:48"> <expr pos:start="43:33" pos:end="43:48"><name pos:start="43:33" pos:end="43:48">AVDISCARD_NONREF</name></expr>

                              </then><else pos:start="45:31" pos:end="47:60">: <expr pos:start="45:33" pos:end="47:60"><ternary pos:start="45:33" pos:end="47:60"><condition pos:start="45:33" pos:end="45:46"><expr pos:start="45:33" pos:end="45:44"><operator pos:start="45:33" pos:end="45:33">!</operator><name pos:start="45:34" pos:end="45:44"><name pos:start="45:34" pos:end="45:34">s</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:44">keyframe</name></name></expr> ?</condition><then pos:start="45:48" pos:end="45:63"> <expr pos:start="45:48" pos:end="45:63"><name pos:start="45:48" pos:end="45:63">AVDISCARD_NONKEY</name></expr>

                                             </then><else pos:start="47:46" pos:end="47:60">: <expr pos:start="47:48" pos:end="47:60"><name pos:start="47:48" pos:end="47:60">AVDISCARD_ALL</name></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:41">(<expr pos:start="51:9" pos:end="51:40"><name pos:start="51:9" pos:end="51:25"><name pos:start="51:9" pos:end="51:13">avctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:25">skip_frame</name></name> <operator pos:start="51:27" pos:end="51:28">&gt;=</operator> <name pos:start="51:30" pos:end="51:40">skip_thresh</name></expr>)</condition> <block pos:start="51:43" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:25">

        <expr_stmt pos:start="53:9" pos:end="53:25"><expr pos:start="53:9" pos:end="53:24"><name pos:start="53:9" pos:end="53:20"><name pos:start="53:9" pos:end="53:9">s</name><operator pos:start="53:10" pos:end="53:11">-&gt;</operator><name pos:start="53:12" pos:end="53:20">invisible</name></name> <operator pos:start="53:22" pos:end="53:22">=</operator> <literal type="number" pos:start="53:24" pos:end="53:24">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="55:9" pos:end="55:76"><expr pos:start="55:9" pos:end="55:75"><call pos:start="55:9" pos:end="55:75"><name pos:start="55:9" pos:end="55:14">memcpy</name><argument_list pos:start="55:15" pos:end="55:75">(<argument pos:start="55:16" pos:end="55:33"><expr pos:start="55:16" pos:end="55:33"><operator pos:start="55:16" pos:end="55:16">&amp;</operator><name pos:start="55:17" pos:end="55:33"><name pos:start="55:17" pos:end="55:17">s</name><operator pos:start="55:18" pos:end="55:19">-&gt;</operator><name pos:start="55:20" pos:end="55:30">next_framep</name><index pos:start="55:31" pos:end="55:33">[<expr pos:start="55:32" pos:end="55:32"><literal type="number" pos:start="55:32" pos:end="55:32">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:36" pos:end="55:48"><expr pos:start="55:36" pos:end="55:48"><operator pos:start="55:36" pos:end="55:36">&amp;</operator><name pos:start="55:37" pos:end="55:48"><name pos:start="55:37" pos:end="55:37">s</name><operator pos:start="55:38" pos:end="55:39">-&gt;</operator><name pos:start="55:40" pos:end="55:45">framep</name><index pos:start="55:46" pos:end="55:48">[<expr pos:start="55:47" pos:end="55:47"><literal type="number" pos:start="55:47" pos:end="55:47">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="55:51" pos:end="55:74"><expr pos:start="55:51" pos:end="55:74"><sizeof pos:start="55:51" pos:end="55:70">sizeof<argument_list pos:start="55:57" pos:end="55:70">(<argument pos:start="55:58" pos:end="55:69"><expr pos:start="55:58" pos:end="55:69"><name pos:start="55:58" pos:end="55:69"><name pos:start="55:58" pos:end="55:58">s</name><operator pos:start="55:59" pos:end="55:60">-&gt;</operator><name pos:start="55:61" pos:end="55:66">framep</name><index pos:start="55:67" pos:end="55:69">[<expr pos:start="55:68" pos:end="55:68"><literal type="number" pos:start="55:68" pos:end="55:68">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="55:72" pos:end="55:72">*</operator> <literal type="number" pos:start="55:74" pos:end="55:74">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="57:9" pos:end="57:25">goto <name pos:start="57:14" pos:end="57:24">skip_decode</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="61:5" pos:end="61:81"><expr pos:start="61:5" pos:end="61:80"><name pos:start="61:5" pos:end="61:21"><name pos:start="61:5" pos:end="61:5">s</name><operator pos:start="61:6" pos:end="61:7">-&gt;</operator><name pos:start="61:8" pos:end="61:21">deblock_filter</name></name> <operator pos:start="61:23" pos:end="61:23">=</operator> <name pos:start="61:25" pos:end="61:39"><name pos:start="61:25" pos:end="61:25">s</name><operator pos:start="61:26" pos:end="61:27">-&gt;</operator><name pos:start="61:28" pos:end="61:33">filter</name><operator pos:start="61:34" pos:end="61:34">.</operator><name pos:start="61:35" pos:end="61:39">level</name></name> <operator pos:start="61:41" pos:end="61:42">&amp;&amp;</operator> <name pos:start="61:44" pos:end="61:66"><name pos:start="61:44" pos:end="61:48">avctx</name><operator pos:start="61:49" pos:end="61:50">-&gt;</operator><name pos:start="61:51" pos:end="61:66">skip_loop_filter</name></name> <operator pos:start="61:68" pos:end="61:68">&lt;</operator> <name pos:start="61:70" pos:end="61:80">skip_thresh</name></expr>;</expr_stmt>



    <comment type="line" pos:start="65:5" pos:end="65:42">// release no longer referenced frames</comment>

    <for pos:start="67:5" pos:end="79:48">for <control pos:start="67:9" pos:end="67:27">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <literal type="number" pos:start="67:21" pos:end="67:21">5</literal></expr>;</condition> <incr pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:24">i</name><operator pos:start="67:25" pos:end="67:26">++</operator></expr></incr>)</control><block type="pseudo" pos:start="69:9" pos:end="79:48"><block_content pos:start="69:9" pos:end="79:48">

        <if_stmt pos:start="69:9" pos:end="79:48"><if pos:start="69:9" pos:end="79:48">if <condition pos:start="69:12" pos:end="77:59">(<expr pos:start="69:13" pos:end="77:58"><name pos:start="69:13" pos:end="69:24"><name pos:start="69:13" pos:end="69:13">s</name><operator pos:start="69:14" pos:end="69:15">-&gt;</operator><name pos:start="69:16" pos:end="69:21">frames</name><index pos:start="69:22" pos:end="69:24">[<expr pos:start="69:23" pos:end="69:23"><name pos:start="69:23" pos:end="69:23">i</name></expr>]</index></name><operator pos:start="69:25" pos:end="69:25">.</operator><name pos:start="69:26" pos:end="69:38"><name pos:start="69:26" pos:end="69:27">tf</name><operator pos:start="69:28" pos:end="69:28">.</operator><name pos:start="69:29" pos:end="69:29">f</name><operator pos:start="69:30" pos:end="69:31">-&gt;</operator><name pos:start="69:32" pos:end="69:35">data</name><index pos:start="69:36" pos:end="69:38">[<expr pos:start="69:37" pos:end="69:37"><literal type="number" pos:start="69:37" pos:end="69:37">0</literal></expr>]</index></name> <operator pos:start="69:40" pos:end="69:41">&amp;&amp;</operator>

            <operator pos:start="71:13" pos:end="71:13">&amp;</operator><name pos:start="71:14" pos:end="71:25"><name pos:start="71:14" pos:end="71:14">s</name><operator pos:start="71:15" pos:end="71:16">-&gt;</operator><name pos:start="71:17" pos:end="71:22">frames</name><index pos:start="71:23" pos:end="71:25">[<expr pos:start="71:24" pos:end="71:24"><name pos:start="71:24" pos:end="71:24">i</name></expr>]</index></name> <operator pos:start="71:27" pos:end="71:28">!=</operator> <name pos:start="71:30" pos:end="71:39">prev_frame</name> <operator pos:start="71:41" pos:end="71:42">&amp;&amp;</operator>

            <operator pos:start="73:13" pos:end="73:13">&amp;</operator><name pos:start="73:14" pos:end="73:25"><name pos:start="73:14" pos:end="73:14">s</name><operator pos:start="73:15" pos:end="73:16">-&gt;</operator><name pos:start="73:17" pos:end="73:22">frames</name><index pos:start="73:23" pos:end="73:25">[<expr pos:start="73:24" pos:end="73:24"><name pos:start="73:24" pos:end="73:24">i</name></expr>]</index></name> <operator pos:start="73:27" pos:end="73:28">!=</operator> <name pos:start="73:30" pos:end="73:59"><name pos:start="73:30" pos:end="73:30">s</name><operator pos:start="73:31" pos:end="73:32">-&gt;</operator><name pos:start="73:33" pos:end="73:38">framep</name><index pos:start="73:39" pos:end="73:59">[<expr pos:start="73:40" pos:end="73:58"><name pos:start="73:40" pos:end="73:58">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="73:61" pos:end="73:62">&amp;&amp;</operator>

            <operator pos:start="75:13" pos:end="75:13">&amp;</operator><name pos:start="75:14" pos:end="75:25"><name pos:start="75:14" pos:end="75:14">s</name><operator pos:start="75:15" pos:end="75:16">-&gt;</operator><name pos:start="75:17" pos:end="75:22">frames</name><index pos:start="75:23" pos:end="75:25">[<expr pos:start="75:24" pos:end="75:24"><name pos:start="75:24" pos:end="75:24">i</name></expr>]</index></name> <operator pos:start="75:27" pos:end="75:28">!=</operator> <name pos:start="75:30" pos:end="75:57"><name pos:start="75:30" pos:end="75:30">s</name><operator pos:start="75:31" pos:end="75:32">-&gt;</operator><name pos:start="75:33" pos:end="75:38">framep</name><index pos:start="75:39" pos:end="75:57">[<expr pos:start="75:40" pos:end="75:56"><name pos:start="75:40" pos:end="75:56">VP56_FRAME_GOLDEN</name></expr>]</index></name>   <operator pos:start="75:61" pos:end="75:62">&amp;&amp;</operator>

            <operator pos:start="77:13" pos:end="77:13">&amp;</operator><name pos:start="77:14" pos:end="77:25"><name pos:start="77:14" pos:end="77:14">s</name><operator pos:start="77:15" pos:end="77:16">-&gt;</operator><name pos:start="77:17" pos:end="77:22">frames</name><index pos:start="77:23" pos:end="77:25">[<expr pos:start="77:24" pos:end="77:24"><name pos:start="77:24" pos:end="77:24">i</name></expr>]</index></name> <operator pos:start="77:27" pos:end="77:28">!=</operator> <name pos:start="77:30" pos:end="77:58"><name pos:start="77:30" pos:end="77:30">s</name><operator pos:start="77:31" pos:end="77:32">-&gt;</operator><name pos:start="77:33" pos:end="77:38">framep</name><index pos:start="77:39" pos:end="77:58">[<expr pos:start="77:40" pos:end="77:57"><name pos:start="77:40" pos:end="77:57">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>)</condition><block type="pseudo" pos:start="79:13" pos:end="79:48"><block_content pos:start="79:13" pos:end="79:48">

            <expr_stmt pos:start="79:13" pos:end="79:48"><expr pos:start="79:13" pos:end="79:47"><call pos:start="79:13" pos:end="79:47"><name pos:start="79:13" pos:end="79:29">vp8_release_frame</name><argument_list pos:start="79:30" pos:end="79:47">(<argument pos:start="79:31" pos:end="79:31"><expr pos:start="79:31" pos:end="79:31"><name pos:start="79:31" pos:end="79:31">s</name></expr></argument>, <argument pos:start="79:34" pos:end="79:46"><expr pos:start="79:34" pos:end="79:46"><operator pos:start="79:34" pos:end="79:34">&amp;</operator><name pos:start="79:35" pos:end="79:46"><name pos:start="79:35" pos:end="79:35">s</name><operator pos:start="79:36" pos:end="79:37">-&gt;</operator><name pos:start="79:38" pos:end="79:43">frames</name><index pos:start="79:44" pos:end="79:46">[<expr pos:start="79:45" pos:end="79:45"><name pos:start="79:45" pos:end="79:45">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt></block_content></block></for>



    <expr_stmt pos:start="83:5" pos:end="83:71"><expr pos:start="83:5" pos:end="83:70"><name pos:start="83:5" pos:end="83:12">curframe</name> <operator pos:start="83:14" pos:end="83:14">=</operator> <name pos:start="83:16" pos:end="83:44"><name pos:start="83:16" pos:end="83:16">s</name><operator pos:start="83:17" pos:end="83:18">-&gt;</operator><name pos:start="83:19" pos:end="83:24">framep</name><index pos:start="83:25" pos:end="83:44">[<expr pos:start="83:26" pos:end="83:43"><name pos:start="83:26" pos:end="83:43">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="83:46" pos:end="83:46">=</operator> <call pos:start="83:48" pos:end="83:70"><name pos:start="83:48" pos:end="83:67">vp8_find_free_buffer</name><argument_list pos:start="83:68" pos:end="83:70">(<argument pos:start="83:69" pos:end="83:69"><expr pos:start="83:69" pos:end="83:69"><name pos:start="83:69" pos:end="83:69">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="87:5" pos:end="89:46"><if pos:start="87:5" pos:end="89:46">if <condition pos:start="87:8" pos:end="87:23">(<expr pos:start="87:9" pos:end="87:22"><operator pos:start="87:9" pos:end="87:9">!</operator><name pos:start="87:10" pos:end="87:22"><name pos:start="87:10" pos:end="87:10">s</name><operator pos:start="87:11" pos:end="87:12">-&gt;</operator><name pos:start="87:13" pos:end="87:22">colorspace</name></name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="89:46"><block_content pos:start="89:9" pos:end="89:46">

        <expr_stmt pos:start="89:9" pos:end="89:46"><expr pos:start="89:9" pos:end="89:45"><name pos:start="89:9" pos:end="89:25"><name pos:start="89:9" pos:end="89:13">avctx</name><operator pos:start="89:14" pos:end="89:15">-&gt;</operator><name pos:start="89:16" pos:end="89:25">colorspace</name></name> <operator pos:start="89:27" pos:end="89:27">=</operator> <name pos:start="89:29" pos:end="89:45">AVCOL_SPC_BT470BG</name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="91:5" pos:end="97:46"><if pos:start="91:5" pos:end="93:46">if <condition pos:start="91:8" pos:end="91:21">(<expr pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:20"><name pos:start="91:9" pos:end="91:9">s</name><operator pos:start="91:10" pos:end="91:11">-&gt;</operator><name pos:start="91:12" pos:end="91:20">fullrange</name></name></expr>)</condition><block type="pseudo" pos:start="93:9" pos:end="93:46"><block_content pos:start="93:9" pos:end="93:46">

        <expr_stmt pos:start="93:9" pos:end="93:46"><expr pos:start="93:9" pos:end="93:45"><name pos:start="93:9" pos:end="93:26"><name pos:start="93:9" pos:end="93:13">avctx</name><operator pos:start="93:14" pos:end="93:15">-&gt;</operator><name pos:start="93:16" pos:end="93:26">color_range</name></name> <operator pos:start="93:28" pos:end="93:28">=</operator> <name pos:start="93:30" pos:end="93:45">AVCOL_RANGE_JPEG</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="95:5" pos:end="97:46">else<block type="pseudo" pos:start="97:9" pos:end="97:46"><block_content pos:start="97:9" pos:end="97:46">

        <expr_stmt pos:start="97:9" pos:end="97:46"><expr pos:start="97:9" pos:end="97:45"><name pos:start="97:9" pos:end="97:26"><name pos:start="97:9" pos:end="97:13">avctx</name><operator pos:start="97:14" pos:end="97:15">-&gt;</operator><name pos:start="97:16" pos:end="97:26">color_range</name></name> <operator pos:start="97:28" pos:end="97:28">=</operator> <name pos:start="97:30" pos:end="97:45">AVCOL_RANGE_MPEG</name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="101:5" pos:end="107:36">/* Given that arithmetic probabilities are updated every frame, it's quite

     * likely that the values we have on a random interframe are complete

     * junk if we didn't start decode on a keyframe. So just don't display

     * anything rather than junk. */</comment>

    <if_stmt pos:start="109:5" pos:end="123:5"><if pos:start="109:5" pos:end="123:5">if <condition pos:start="109:8" pos:end="113:57">(<expr pos:start="109:9" pos:end="113:56"><operator pos:start="109:9" pos:end="109:9">!</operator><name pos:start="109:10" pos:end="109:20"><name pos:start="109:10" pos:end="109:10">s</name><operator pos:start="109:11" pos:end="109:12">-&gt;</operator><name pos:start="109:13" pos:end="109:20">keyframe</name></name> <operator pos:start="109:22" pos:end="109:23">&amp;&amp;</operator> <operator pos:start="109:25" pos:end="109:25">(</operator><operator pos:start="109:26" pos:end="109:26">!</operator><name pos:start="109:27" pos:end="109:56"><name pos:start="109:27" pos:end="109:27">s</name><operator pos:start="109:28" pos:end="109:29">-&gt;</operator><name pos:start="109:30" pos:end="109:35">framep</name><index pos:start="109:36" pos:end="109:56">[<expr pos:start="109:37" pos:end="109:55"><name pos:start="109:37" pos:end="109:55">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="109:58" pos:end="109:59">||</operator>

                         <operator pos:start="111:26" pos:end="111:26">!</operator><name pos:start="111:27" pos:end="111:54"><name pos:start="111:27" pos:end="111:27">s</name><operator pos:start="111:28" pos:end="111:29">-&gt;</operator><name pos:start="111:30" pos:end="111:35">framep</name><index pos:start="111:36" pos:end="111:54">[<expr pos:start="111:37" pos:end="111:53"><name pos:start="111:37" pos:end="111:53">VP56_FRAME_GOLDEN</name></expr>]</index></name>   <operator pos:start="111:58" pos:end="111:59">||</operator>

                         <operator pos:start="113:26" pos:end="113:26">!</operator><name pos:start="113:27" pos:end="113:55"><name pos:start="113:27" pos:end="113:27">s</name><operator pos:start="113:28" pos:end="113:29">-&gt;</operator><name pos:start="113:30" pos:end="113:35">framep</name><index pos:start="113:36" pos:end="113:55">[<expr pos:start="113:37" pos:end="113:54"><name pos:start="113:37" pos:end="113:54">VP56_FRAME_GOLDEN2</name></expr>]</index></name><operator pos:start="113:56" pos:end="113:56">)</operator></expr>)</condition> <block pos:start="113:59" pos:end="123:5">{<block_content pos:start="115:9" pos:end="121:17">

        <expr_stmt pos:start="115:9" pos:end="117:68"><expr pos:start="115:9" pos:end="117:67"><call pos:start="115:9" pos:end="117:67"><name pos:start="115:9" pos:end="115:14">av_log</name><argument_list pos:start="115:15" pos:end="117:67">(<argument pos:start="115:16" pos:end="115:20"><expr pos:start="115:16" pos:end="115:20"><name pos:start="115:16" pos:end="115:20">avctx</name></expr></argument>, <argument pos:start="115:23" pos:end="115:36"><expr pos:start="115:23" pos:end="115:36"><name pos:start="115:23" pos:end="115:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="117:16" pos:end="117:66"><expr pos:start="117:16" pos:end="117:66"><literal type="string" pos:start="117:16" pos:end="117:66">"Discarding interframe without a prior keyframe!\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:34"><expr pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:11">ret</name> <operator pos:start="119:13" pos:end="119:13">=</operator> <name pos:start="119:15" pos:end="119:33">AVERROR_INVALIDDATA</name></expr>;</expr_stmt>

        <goto pos:start="121:9" pos:end="121:17">goto <name pos:start="121:14" pos:end="121:16">err</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="127:5" pos:end="127:44"><expr pos:start="127:5" pos:end="127:43"><name pos:start="127:5" pos:end="127:29"><name pos:start="127:5" pos:end="127:12">curframe</name><operator pos:start="127:13" pos:end="127:14">-&gt;</operator><name pos:start="127:15" pos:end="127:16">tf</name><operator pos:start="127:17" pos:end="127:17">.</operator><name pos:start="127:18" pos:end="127:18">f</name><operator pos:start="127:19" pos:end="127:20">-&gt;</operator><name pos:start="127:21" pos:end="127:29">key_frame</name></name> <operator pos:start="127:31" pos:end="127:31">=</operator> <name pos:start="127:33" pos:end="127:43"><name pos:start="127:33" pos:end="127:33">s</name><operator pos:start="127:34" pos:end="127:35">-&gt;</operator><name pos:start="127:36" pos:end="127:43">keyframe</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="129:5" pos:end="131:64"><expr pos:start="129:5" pos:end="131:63"><name pos:start="129:5" pos:end="129:29"><name pos:start="129:5" pos:end="129:12">curframe</name><operator pos:start="129:13" pos:end="129:14">-&gt;</operator><name pos:start="129:15" pos:end="129:16">tf</name><operator pos:start="129:17" pos:end="129:17">.</operator><name pos:start="129:18" pos:end="129:18">f</name><operator pos:start="129:19" pos:end="129:20">-&gt;</operator><name pos:start="129:21" pos:end="129:29">pict_type</name></name> <operator pos:start="129:31" pos:end="129:31">=</operator> <ternary pos:start="129:33" pos:end="131:63"><condition pos:start="129:33" pos:end="129:45"><expr pos:start="129:33" pos:end="129:43"><name pos:start="129:33" pos:end="129:43"><name pos:start="129:33" pos:end="129:33">s</name><operator pos:start="129:34" pos:end="129:35">-&gt;</operator><name pos:start="129:36" pos:end="129:43">keyframe</name></name></expr> ?</condition><then pos:start="129:47" pos:end="129:63"> <expr pos:start="129:47" pos:end="129:63"><name pos:start="129:47" pos:end="129:63">AV_PICTURE_TYPE_I</name></expr>

                                            </then><else pos:start="131:45" pos:end="131:63">: <expr pos:start="131:47" pos:end="131:63"><name pos:start="131:47" pos:end="131:63">AV_PICTURE_TYPE_P</name></expr></else></ternary></expr>;</expr_stmt>

    <if_stmt pos:start="133:5" pos:end="135:17"><if pos:start="133:5" pos:end="135:17">if <condition pos:start="133:8" pos:end="133:61">(<expr pos:start="133:9" pos:end="133:60"><operator pos:start="133:9" pos:end="133:9">(</operator><name pos:start="133:10" pos:end="133:12">ret</name> <operator pos:start="133:14" pos:end="133:14">=</operator> <call pos:start="133:16" pos:end="133:55"><name pos:start="133:16" pos:end="133:30">vp8_alloc_frame</name><argument_list pos:start="133:31" pos:end="133:55">(<argument pos:start="133:32" pos:end="133:32"><expr pos:start="133:32" pos:end="133:32"><name pos:start="133:32" pos:end="133:32">s</name></expr></argument>, <argument pos:start="133:35" pos:end="133:42"><expr pos:start="133:35" pos:end="133:42"><name pos:start="133:35" pos:end="133:42">curframe</name></expr></argument>, <argument pos:start="133:45" pos:end="133:54"><expr pos:start="133:45" pos:end="133:54"><name pos:start="133:45" pos:end="133:54">referenced</name></expr></argument>)</argument_list></call><operator pos:start="133:56" pos:end="133:56">)</operator> <operator pos:start="133:58" pos:end="133:58">&lt;</operator> <literal type="number" pos:start="133:60" pos:end="133:60">0</literal></expr>)</condition><block type="pseudo" pos:start="135:9" pos:end="135:17"><block_content pos:start="135:9" pos:end="135:17">

        <goto pos:start="135:9" pos:end="135:17">goto <name pos:start="135:14" pos:end="135:16">err</name>;</goto></block_content></block></if></if_stmt>



    <comment type="line" pos:start="139:5" pos:end="139:45">// check if golden and altref are swapped</comment>

    <if_stmt pos:start="141:5" pos:end="147:75"><if pos:start="141:5" pos:end="143:73">if <condition pos:start="141:8" pos:end="141:44">(<expr pos:start="141:9" pos:end="141:43"><name pos:start="141:9" pos:end="141:24"><name pos:start="141:9" pos:end="141:9">s</name><operator pos:start="141:10" pos:end="141:11">-&gt;</operator><name pos:start="141:12" pos:end="141:24">update_altref</name></name> <operator pos:start="141:26" pos:end="141:27">!=</operator> <name pos:start="141:29" pos:end="141:43">VP56_FRAME_NONE</name></expr>)</condition><block type="pseudo" pos:start="143:9" pos:end="143:73"><block_content pos:start="143:9" pos:end="143:73">

        <expr_stmt pos:start="143:9" pos:end="143:73"><expr pos:start="143:9" pos:end="143:72"><name pos:start="143:9" pos:end="143:42"><name pos:start="143:9" pos:end="143:9">s</name><operator pos:start="143:10" pos:end="143:11">-&gt;</operator><name pos:start="143:12" pos:end="143:22">next_framep</name><index pos:start="143:23" pos:end="143:42">[<expr pos:start="143:24" pos:end="143:41"><name pos:start="143:24" pos:end="143:41">VP56_FRAME_GOLDEN2</name></expr>]</index></name> <operator pos:start="143:44" pos:end="143:44">=</operator> <name pos:start="143:46" pos:end="143:72"><name pos:start="143:46" pos:end="143:46">s</name><operator pos:start="143:47" pos:end="143:48">-&gt;</operator><name pos:start="143:49" pos:end="143:54">framep</name><index pos:start="143:55" pos:end="143:72">[<expr pos:start="143:56" pos:end="143:71"><name pos:start="143:56" pos:end="143:71"><name pos:start="143:56" pos:end="143:56">s</name><operator pos:start="143:57" pos:end="143:58">-&gt;</operator><name pos:start="143:59" pos:end="143:71">update_altref</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="145:5" pos:end="147:75">else<block type="pseudo" pos:start="147:9" pos:end="147:75"><block_content pos:start="147:9" pos:end="147:75">

        <expr_stmt pos:start="147:9" pos:end="147:75"><expr pos:start="147:9" pos:end="147:74"><name pos:start="147:9" pos:end="147:42"><name pos:start="147:9" pos:end="147:9">s</name><operator pos:start="147:10" pos:end="147:11">-&gt;</operator><name pos:start="147:12" pos:end="147:22">next_framep</name><index pos:start="147:23" pos:end="147:42">[<expr pos:start="147:24" pos:end="147:41"><name pos:start="147:24" pos:end="147:41">VP56_FRAME_GOLDEN2</name></expr>]</index></name> <operator pos:start="147:44" pos:end="147:44">=</operator> <name pos:start="147:46" pos:end="147:74"><name pos:start="147:46" pos:end="147:46">s</name><operator pos:start="147:47" pos:end="147:48">-&gt;</operator><name pos:start="147:49" pos:end="147:54">framep</name><index pos:start="147:55" pos:end="147:74">[<expr pos:start="147:56" pos:end="147:73"><name pos:start="147:56" pos:end="147:73">VP56_FRAME_GOLDEN2</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="151:5" pos:end="157:73"><if pos:start="151:5" pos:end="153:72">if <condition pos:start="151:8" pos:end="151:44">(<expr pos:start="151:9" pos:end="151:43"><name pos:start="151:9" pos:end="151:24"><name pos:start="151:9" pos:end="151:9">s</name><operator pos:start="151:10" pos:end="151:11">-&gt;</operator><name pos:start="151:12" pos:end="151:24">update_golden</name></name> <operator pos:start="151:26" pos:end="151:27">!=</operator> <name pos:start="151:29" pos:end="151:43">VP56_FRAME_NONE</name></expr>)</condition><block type="pseudo" pos:start="153:9" pos:end="153:72"><block_content pos:start="153:9" pos:end="153:72">

        <expr_stmt pos:start="153:9" pos:end="153:72"><expr pos:start="153:9" pos:end="153:71"><name pos:start="153:9" pos:end="153:41"><name pos:start="153:9" pos:end="153:9">s</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:22">next_framep</name><index pos:start="153:23" pos:end="153:41">[<expr pos:start="153:24" pos:end="153:40"><name pos:start="153:24" pos:end="153:40">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="153:43" pos:end="153:43">=</operator> <name pos:start="153:45" pos:end="153:71"><name pos:start="153:45" pos:end="153:45">s</name><operator pos:start="153:46" pos:end="153:47">-&gt;</operator><name pos:start="153:48" pos:end="153:53">framep</name><index pos:start="153:54" pos:end="153:71">[<expr pos:start="153:55" pos:end="153:70"><name pos:start="153:55" pos:end="153:70"><name pos:start="153:55" pos:end="153:55">s</name><operator pos:start="153:56" pos:end="153:57">-&gt;</operator><name pos:start="153:58" pos:end="153:70">update_golden</name></name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="155:5" pos:end="157:73">else<block type="pseudo" pos:start="157:9" pos:end="157:73"><block_content pos:start="157:9" pos:end="157:73">

        <expr_stmt pos:start="157:9" pos:end="157:73"><expr pos:start="157:9" pos:end="157:72"><name pos:start="157:9" pos:end="157:41"><name pos:start="157:9" pos:end="157:9">s</name><operator pos:start="157:10" pos:end="157:11">-&gt;</operator><name pos:start="157:12" pos:end="157:22">next_framep</name><index pos:start="157:23" pos:end="157:41">[<expr pos:start="157:24" pos:end="157:40"><name pos:start="157:24" pos:end="157:40">VP56_FRAME_GOLDEN</name></expr>]</index></name> <operator pos:start="157:43" pos:end="157:43">=</operator> <name pos:start="157:45" pos:end="157:72"><name pos:start="157:45" pos:end="157:45">s</name><operator pos:start="157:46" pos:end="157:47">-&gt;</operator><name pos:start="157:48" pos:end="157:53">framep</name><index pos:start="157:54" pos:end="157:72">[<expr pos:start="157:55" pos:end="157:71"><name pos:start="157:55" pos:end="157:71">VP56_FRAME_GOLDEN</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <if_stmt pos:start="161:5" pos:end="167:77"><if pos:start="161:5" pos:end="163:55">if <condition pos:start="161:8" pos:end="161:23">(<expr pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:22"><name pos:start="161:9" pos:end="161:9">s</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:22">update_last</name></name></expr>)</condition><block type="pseudo" pos:start="163:9" pos:end="163:55"><block_content pos:start="163:9" pos:end="163:55">

        <expr_stmt pos:start="163:9" pos:end="163:55"><expr pos:start="163:9" pos:end="163:54"><name pos:start="163:9" pos:end="163:43"><name pos:start="163:9" pos:end="163:9">s</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:22">next_framep</name><index pos:start="163:23" pos:end="163:43">[<expr pos:start="163:24" pos:end="163:42"><name pos:start="163:24" pos:end="163:42">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="163:45" pos:end="163:45">=</operator> <name pos:start="163:47" pos:end="163:54">curframe</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="165:5" pos:end="167:77">else<block type="pseudo" pos:start="167:9" pos:end="167:77"><block_content pos:start="167:9" pos:end="167:77">

        <expr_stmt pos:start="167:9" pos:end="167:77"><expr pos:start="167:9" pos:end="167:76"><name pos:start="167:9" pos:end="167:43"><name pos:start="167:9" pos:end="167:9">s</name><operator pos:start="167:10" pos:end="167:11">-&gt;</operator><name pos:start="167:12" pos:end="167:22">next_framep</name><index pos:start="167:23" pos:end="167:43">[<expr pos:start="167:24" pos:end="167:42"><name pos:start="167:24" pos:end="167:42">VP56_FRAME_PREVIOUS</name></expr>]</index></name> <operator pos:start="167:45" pos:end="167:45">=</operator> <name pos:start="167:47" pos:end="167:76"><name pos:start="167:47" pos:end="167:47">s</name><operator pos:start="167:48" pos:end="167:49">-&gt;</operator><name pos:start="167:50" pos:end="167:55">framep</name><index pos:start="167:56" pos:end="167:76">[<expr pos:start="167:57" pos:end="167:75"><name pos:start="167:57" pos:end="167:75">VP56_FRAME_PREVIOUS</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="171:5" pos:end="171:50"><expr pos:start="171:5" pos:end="171:49"><name pos:start="171:5" pos:end="171:38"><name pos:start="171:5" pos:end="171:5">s</name><operator pos:start="171:6" pos:end="171:7">-&gt;</operator><name pos:start="171:8" pos:end="171:18">next_framep</name><index pos:start="171:19" pos:end="171:38">[<expr pos:start="171:20" pos:end="171:37"><name pos:start="171:20" pos:end="171:37">VP56_FRAME_CURRENT</name></expr>]</index></name> <operator pos:start="171:40" pos:end="171:40">=</operator> <name pos:start="171:42" pos:end="171:49">curframe</name></expr>;</expr_stmt>



    <if_stmt pos:start="175:5" pos:end="177:38"><if pos:start="175:5" pos:end="177:38">if <condition pos:start="175:8" pos:end="175:44">(<expr pos:start="175:9" pos:end="175:43"><name pos:start="175:9" pos:end="175:43"><name pos:start="175:9" pos:end="175:13">avctx</name><operator pos:start="175:14" pos:end="175:15">-&gt;</operator><name pos:start="175:16" pos:end="175:20">codec</name><operator pos:start="175:21" pos:end="175:22">-&gt;</operator><name pos:start="175:23" pos:end="175:43">update_thread_context</name></name></expr>)</condition><block type="pseudo" pos:start="177:9" pos:end="177:38"><block_content pos:start="177:9" pos:end="177:38">

        <expr_stmt pos:start="177:9" pos:end="177:38"><expr pos:start="177:9" pos:end="177:37"><call pos:start="177:9" pos:end="177:37"><name pos:start="177:9" pos:end="177:30">ff_thread_finish_setup</name><argument_list pos:start="177:31" pos:end="177:37">(<argument pos:start="177:32" pos:end="177:36"><expr pos:start="177:32" pos:end="177:36"><name pos:start="177:32" pos:end="177:36">avctx</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="181:5" pos:end="181:48"><expr pos:start="181:5" pos:end="181:47"><name pos:start="181:5" pos:end="181:15"><name pos:start="181:5" pos:end="181:5">s</name><operator pos:start="181:6" pos:end="181:7">-&gt;</operator><name pos:start="181:8" pos:end="181:15">linesize</name></name>   <operator pos:start="181:19" pos:end="181:19">=</operator> <name pos:start="181:21" pos:end="181:47"><name pos:start="181:21" pos:end="181:28">curframe</name><operator pos:start="181:29" pos:end="181:30">-&gt;</operator><name pos:start="181:31" pos:end="181:32">tf</name><operator pos:start="181:33" pos:end="181:33">.</operator><name pos:start="181:34" pos:end="181:34">f</name><operator pos:start="181:35" pos:end="181:36">-&gt;</operator><name pos:start="181:37" pos:end="181:44">linesize</name><index pos:start="181:45" pos:end="181:47">[<expr pos:start="181:46" pos:end="181:46"><literal type="number" pos:start="181:46" pos:end="181:46">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="183:5" pos:end="183:48"><expr pos:start="183:5" pos:end="183:47"><name pos:start="183:5" pos:end="183:17"><name pos:start="183:5" pos:end="183:5">s</name><operator pos:start="183:6" pos:end="183:7">-&gt;</operator><name pos:start="183:8" pos:end="183:17">uvlinesize</name></name> <operator pos:start="183:19" pos:end="183:19">=</operator> <name pos:start="183:21" pos:end="183:47"><name pos:start="183:21" pos:end="183:28">curframe</name><operator pos:start="183:29" pos:end="183:30">-&gt;</operator><name pos:start="183:31" pos:end="183:32">tf</name><operator pos:start="183:33" pos:end="183:33">.</operator><name pos:start="183:34" pos:end="183:34">f</name><operator pos:start="183:35" pos:end="183:36">-&gt;</operator><name pos:start="183:37" pos:end="183:44">linesize</name><index pos:start="183:45" pos:end="183:47">[<expr pos:start="183:46" pos:end="183:46"><literal type="number" pos:start="183:46" pos:end="183:46">1</literal></expr>]</index></name></expr>;</expr_stmt>



    <expr_stmt pos:start="187:5" pos:end="187:61"><expr pos:start="187:5" pos:end="187:60"><call pos:start="187:5" pos:end="187:60"><name pos:start="187:5" pos:end="187:10">memset</name><argument_list pos:start="187:11" pos:end="187:60">(<argument pos:start="187:12" pos:end="187:21"><expr pos:start="187:12" pos:end="187:21"><name pos:start="187:12" pos:end="187:21"><name pos:start="187:12" pos:end="187:12">s</name><operator pos:start="187:13" pos:end="187:14">-&gt;</operator><name pos:start="187:15" pos:end="187:21">top_nnz</name></name></expr></argument>, <argument pos:start="187:24" pos:end="187:24"><expr pos:start="187:24" pos:end="187:24"><literal type="number" pos:start="187:24" pos:end="187:24">0</literal></expr></argument>, <argument pos:start="187:27" pos:end="187:59"><expr pos:start="187:27" pos:end="187:59"><name pos:start="187:27" pos:end="187:37"><name pos:start="187:27" pos:end="187:27">s</name><operator pos:start="187:28" pos:end="187:29">-&gt;</operator><name pos:start="187:30" pos:end="187:37">mb_width</name></name> <operator pos:start="187:39" pos:end="187:39">*</operator> <sizeof pos:start="187:41" pos:end="187:59">sizeof<argument_list pos:start="187:47" pos:end="187:59">(<argument pos:start="187:48" pos:end="187:58"><expr pos:start="187:48" pos:end="187:58"><operator pos:start="187:48" pos:end="187:48">*</operator><name pos:start="187:49" pos:end="187:58"><name pos:start="187:49" pos:end="187:49">s</name><operator pos:start="187:50" pos:end="187:51">-&gt;</operator><name pos:start="187:52" pos:end="187:58">top_nnz</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <comment type="block" pos:start="189:5" pos:end="191:33">/* Zero macroblock structures for top/top-left prediction

     * from outside the frame. */</comment>

    <if_stmt pos:start="193:5" pos:end="197:60"><if pos:start="193:5" pos:end="197:60">if <condition pos:start="193:8" pos:end="193:22">(<expr pos:start="193:9" pos:end="193:21"><operator pos:start="193:9" pos:end="193:9">!</operator><name pos:start="193:10" pos:end="193:21"><name pos:start="193:10" pos:end="193:10">s</name><operator pos:start="193:11" pos:end="193:12">-&gt;</operator><name pos:start="193:13" pos:end="193:21">mb_layout</name></name></expr>)</condition><block type="pseudo" pos:start="195:9" pos:end="197:60"><block_content pos:start="195:9" pos:end="197:60">

        <expr_stmt pos:start="195:9" pos:end="197:60"><expr pos:start="195:9" pos:end="197:59"><call pos:start="195:9" pos:end="197:59"><name pos:start="195:9" pos:end="195:14">memset</name><argument_list pos:start="195:15" pos:end="197:59">(<argument pos:start="195:16" pos:end="195:52"><expr pos:start="195:16" pos:end="195:52"><name pos:start="195:16" pos:end="195:29"><name pos:start="195:16" pos:end="195:16">s</name><operator pos:start="195:17" pos:end="195:18">-&gt;</operator><name pos:start="195:19" pos:end="195:29">macroblocks</name></name> <operator pos:start="195:31" pos:end="195:31">+</operator> <name pos:start="195:33" pos:end="195:44"><name pos:start="195:33" pos:end="195:33">s</name><operator pos:start="195:34" pos:end="195:35">-&gt;</operator><name pos:start="195:36" pos:end="195:44">mb_height</name></name> <operator pos:start="195:46" pos:end="195:46">*</operator> <literal type="number" pos:start="195:48" pos:end="195:50">2</literal> <operator pos:start="195:50" pos:end="195:50">-</operator> <literal type="number" pos:start="195:52" pos:end="195:52">1</literal></expr></argument>, <argument pos:start="195:55" pos:end="195:55"><expr pos:start="195:55" pos:end="195:55"><literal type="number" pos:start="195:55" pos:end="195:55">0</literal></expr></argument>,

               <argument pos:start="197:16" pos:end="197:58"><expr pos:start="197:16" pos:end="197:58"><operator pos:start="197:16" pos:end="197:16">(</operator><name pos:start="197:17" pos:end="197:27"><name pos:start="197:17" pos:end="197:17">s</name><operator pos:start="197:18" pos:end="197:19">-&gt;</operator><name pos:start="197:20" pos:end="197:27">mb_width</name></name> <operator pos:start="197:29" pos:end="197:29">+</operator> <literal type="number" pos:start="197:31" pos:end="197:31">1</literal><operator pos:start="197:32" pos:end="197:32">)</operator> <operator pos:start="197:34" pos:end="197:34">*</operator> <sizeof pos:start="197:36" pos:end="197:58">sizeof<argument_list pos:start="197:42" pos:end="197:58">(<argument pos:start="197:43" pos:end="197:57"><expr pos:start="197:43" pos:end="197:57"><operator pos:start="197:43" pos:end="197:43">*</operator><name pos:start="197:44" pos:end="197:57"><name pos:start="197:44" pos:end="197:44">s</name><operator pos:start="197:45" pos:end="197:46">-&gt;</operator><name pos:start="197:47" pos:end="197:57">macroblocks</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <if_stmt pos:start="199:5" pos:end="201:68"><if pos:start="199:5" pos:end="201:68">if <condition pos:start="199:8" pos:end="199:37">(<expr pos:start="199:9" pos:end="199:36"><operator pos:start="199:9" pos:end="199:9">!</operator><name pos:start="199:10" pos:end="199:21"><name pos:start="199:10" pos:end="199:10">s</name><operator pos:start="199:11" pos:end="199:12">-&gt;</operator><name pos:start="199:13" pos:end="199:21">mb_layout</name></name> <operator pos:start="199:23" pos:end="199:24">&amp;&amp;</operator> <name pos:start="199:26" pos:end="199:36"><name pos:start="199:26" pos:end="199:26">s</name><operator pos:start="199:27" pos:end="199:28">-&gt;</operator><name pos:start="199:29" pos:end="199:36">keyframe</name></name></expr>)</condition><block type="pseudo" pos:start="201:9" pos:end="201:68"><block_content pos:start="201:9" pos:end="201:68">

        <expr_stmt pos:start="201:9" pos:end="201:68"><expr pos:start="201:9" pos:end="201:67"><call pos:start="201:9" pos:end="201:67"><name pos:start="201:9" pos:end="201:14">memset</name><argument_list pos:start="201:15" pos:end="201:67">(<argument pos:start="201:16" pos:end="201:40"><expr pos:start="201:16" pos:end="201:40"><name pos:start="201:16" pos:end="201:40"><name pos:start="201:16" pos:end="201:16">s</name><operator pos:start="201:17" pos:end="201:18">-&gt;</operator><name pos:start="201:19" pos:end="201:40">intra4x4_pred_mode_top</name></name></expr></argument>, <argument pos:start="201:43" pos:end="201:49"><expr pos:start="201:43" pos:end="201:49"><name pos:start="201:43" pos:end="201:49">DC_PRED</name></expr></argument>, <argument pos:start="201:52" pos:end="201:66"><expr pos:start="201:52" pos:end="201:66"><name pos:start="201:52" pos:end="201:62"><name pos:start="201:52" pos:end="201:52">s</name><operator pos:start="201:53" pos:end="201:54">-&gt;</operator><name pos:start="201:55" pos:end="201:62">mb_width</name></name> <operator pos:start="201:64" pos:end="201:64">*</operator> <literal type="number" pos:start="201:66" pos:end="201:66">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <expr_stmt pos:start="205:5" pos:end="205:50"><expr pos:start="205:5" pos:end="205:49"><call pos:start="205:5" pos:end="205:49"><name pos:start="205:5" pos:end="205:10">memset</name><argument_list pos:start="205:11" pos:end="205:49">(<argument pos:start="205:12" pos:end="205:23"><expr pos:start="205:12" pos:end="205:23"><name pos:start="205:12" pos:end="205:23"><name pos:start="205:12" pos:end="205:12">s</name><operator pos:start="205:13" pos:end="205:14">-&gt;</operator><name pos:start="205:15" pos:end="205:23">ref_count</name></name></expr></argument>, <argument pos:start="205:26" pos:end="205:26"><expr pos:start="205:26" pos:end="205:26"><literal type="number" pos:start="205:26" pos:end="205:26">0</literal></expr></argument>, <argument pos:start="205:29" pos:end="205:48"><expr pos:start="205:29" pos:end="205:48"><sizeof pos:start="205:29" pos:end="205:48">sizeof<argument_list pos:start="205:35" pos:end="205:48">(<argument pos:start="205:36" pos:end="205:47"><expr pos:start="205:36" pos:end="205:47"><name pos:start="205:36" pos:end="205:47"><name pos:start="205:36" pos:end="205:36">s</name><operator pos:start="205:37" pos:end="205:38">-&gt;</operator><name pos:start="205:39" pos:end="205:47">ref_count</name></name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <if_stmt pos:start="209:5" pos:end="229:5"><if pos:start="209:5" pos:end="229:5">if <condition pos:start="209:8" pos:end="209:26">(<expr pos:start="209:9" pos:end="209:25"><name pos:start="209:9" pos:end="209:20"><name pos:start="209:9" pos:end="209:9">s</name><operator pos:start="209:10" pos:end="209:11">-&gt;</operator><name pos:start="209:12" pos:end="209:20">mb_layout</name></name> <operator pos:start="209:22" pos:end="209:23">==</operator> <literal type="number" pos:start="209:25" pos:end="209:25">1</literal></expr>)</condition> <block pos:start="209:28" pos:end="229:5">{<block_content pos:start="215:9" pos:end="227:64">

        <comment type="line" pos:start="211:9" pos:end="211:70">// Make sure the previous frame has read its segmentation map,</comment>

        <comment type="line" pos:start="213:9" pos:end="213:37">// if we re-use the same map.</comment>

        <if_stmt pos:start="215:9" pos:end="219:60"><if pos:start="215:9" pos:end="219:60">if <condition pos:start="215:12" pos:end="217:40">(<expr pos:start="215:13" pos:end="217:39"><name pos:start="215:13" pos:end="215:22">prev_frame</name> <operator pos:start="215:24" pos:end="215:25">&amp;&amp;</operator> <name pos:start="215:27" pos:end="215:49"><name pos:start="215:27" pos:end="215:27">s</name><operator pos:start="215:28" pos:end="215:29">-&gt;</operator><name pos:start="215:30" pos:end="215:41">segmentation</name><operator pos:start="215:42" pos:end="215:42">.</operator><name pos:start="215:43" pos:end="215:49">enabled</name></name> <operator pos:start="215:51" pos:end="215:52">&amp;&amp;</operator>

            <operator pos:start="217:13" pos:end="217:13">!</operator><name pos:start="217:14" pos:end="217:39"><name pos:start="217:14" pos:end="217:14">s</name><operator pos:start="217:15" pos:end="217:16">-&gt;</operator><name pos:start="217:17" pos:end="217:28">segmentation</name><operator pos:start="217:29" pos:end="217:29">.</operator><name pos:start="217:30" pos:end="217:39">update_map</name></name></expr>)</condition><block type="pseudo" pos:start="219:13" pos:end="219:60"><block_content pos:start="219:13" pos:end="219:60">

            <expr_stmt pos:start="219:13" pos:end="219:60"><expr pos:start="219:13" pos:end="219:59"><call pos:start="219:13" pos:end="219:59"><name pos:start="219:13" pos:end="219:36">ff_thread_await_progress</name><argument_list pos:start="219:37" pos:end="219:59">(<argument pos:start="219:38" pos:end="219:52"><expr pos:start="219:38" pos:end="219:52"><operator pos:start="219:38" pos:end="219:38">&amp;</operator><name pos:start="219:39" pos:end="219:52"><name pos:start="219:39" pos:end="219:48">prev_frame</name><operator pos:start="219:49" pos:end="219:50">-&gt;</operator><name pos:start="219:51" pos:end="219:52">tf</name></name></expr></argument>, <argument pos:start="219:55" pos:end="219:55"><expr pos:start="219:55" pos:end="219:55"><literal type="number" pos:start="219:55" pos:end="219:55">1</literal></expr></argument>, <argument pos:start="219:58" pos:end="219:58"><expr pos:start="219:58" pos:end="219:58"><literal type="number" pos:start="219:58" pos:end="219:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="221:9" pos:end="227:64"><if pos:start="221:9" pos:end="223:64">if <condition pos:start="221:12" pos:end="221:19">(<expr pos:start="221:13" pos:end="221:18"><name pos:start="221:13" pos:end="221:18">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="223:13" pos:end="223:64"><block_content pos:start="223:13" pos:end="223:64">

            <expr_stmt pos:start="223:13" pos:end="223:64"><expr pos:start="223:13" pos:end="223:63"><call pos:start="223:13" pos:end="223:63"><name pos:start="223:13" pos:end="223:34">vp7_decode_mv_mb_modes</name><argument_list pos:start="223:35" pos:end="223:63">(<argument pos:start="223:36" pos:end="223:40"><expr pos:start="223:36" pos:end="223:40"><name pos:start="223:36" pos:end="223:40">avctx</name></expr></argument>, <argument pos:start="223:43" pos:end="223:50"><expr pos:start="223:43" pos:end="223:50"><name pos:start="223:43" pos:end="223:50">curframe</name></expr></argument>, <argument pos:start="223:53" pos:end="223:62"><expr pos:start="223:53" pos:end="223:62"><name pos:start="223:53" pos:end="223:62">prev_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="225:9" pos:end="227:64">else<block type="pseudo" pos:start="227:13" pos:end="227:64"><block_content pos:start="227:13" pos:end="227:64">

            <expr_stmt pos:start="227:13" pos:end="227:64"><expr pos:start="227:13" pos:end="227:63"><call pos:start="227:13" pos:end="227:63"><name pos:start="227:13" pos:end="227:34">vp8_decode_mv_mb_modes</name><argument_list pos:start="227:35" pos:end="227:63">(<argument pos:start="227:36" pos:end="227:40"><expr pos:start="227:36" pos:end="227:40"><name pos:start="227:36" pos:end="227:40">avctx</name></expr></argument>, <argument pos:start="227:43" pos:end="227:50"><expr pos:start="227:43" pos:end="227:50"><name pos:start="227:43" pos:end="227:50">curframe</name></expr></argument>, <argument pos:start="227:53" pos:end="227:62"><expr pos:start="227:53" pos:end="227:62"><name pos:start="227:53" pos:end="227:62">prev_frame</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="233:5" pos:end="239:71"><if pos:start="233:5" pos:end="235:21">if <condition pos:start="233:8" pos:end="233:53">(<expr pos:start="233:9" pos:end="233:52"><name pos:start="233:9" pos:end="233:33"><name pos:start="233:9" pos:end="233:13">avctx</name><operator pos:start="233:14" pos:end="233:15">-&gt;</operator><name pos:start="233:16" pos:end="233:33">active_thread_type</name></name> <operator pos:start="233:35" pos:end="233:36">==</operator> <name pos:start="233:38" pos:end="233:52">FF_THREAD_FRAME</name></expr>)</condition><block type="pseudo" pos:start="235:9" pos:end="235:21"><block_content pos:start="235:9" pos:end="235:21">

        <expr_stmt pos:start="235:9" pos:end="235:21"><expr pos:start="235:9" pos:end="235:20"><name pos:start="235:9" pos:end="235:16">num_jobs</name> <operator pos:start="235:18" pos:end="235:18">=</operator> <literal type="number" pos:start="235:20" pos:end="235:20">1</literal></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="237:5" pos:end="239:71">else<block type="pseudo" pos:start="239:9" pos:end="239:71"><block_content pos:start="239:9" pos:end="239:71">

        <expr_stmt pos:start="239:9" pos:end="239:71"><expr pos:start="239:9" pos:end="239:70"><name pos:start="239:9" pos:end="239:16">num_jobs</name> <operator pos:start="239:18" pos:end="239:18">=</operator> <call pos:start="239:20" pos:end="239:70"><name pos:start="239:20" pos:end="239:24">FFMIN</name><argument_list pos:start="239:25" pos:end="239:70">(<argument pos:start="239:26" pos:end="239:48"><expr pos:start="239:26" pos:end="239:48"><name pos:start="239:26" pos:end="239:48"><name pos:start="239:26" pos:end="239:26">s</name><operator pos:start="239:27" pos:end="239:28">-&gt;</operator><name pos:start="239:29" pos:end="239:48">num_coeff_partitions</name></name></expr></argument>, <argument pos:start="239:51" pos:end="239:69"><expr pos:start="239:51" pos:end="239:69"><name pos:start="239:51" pos:end="239:69"><name pos:start="239:51" pos:end="239:55">avctx</name><operator pos:start="239:56" pos:end="239:57">-&gt;</operator><name pos:start="239:58" pos:end="239:69">thread_count</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    <expr_stmt pos:start="241:5" pos:end="241:29"><expr pos:start="241:5" pos:end="241:28"><name pos:start="241:5" pos:end="241:15"><name pos:start="241:5" pos:end="241:5">s</name><operator pos:start="241:6" pos:end="241:7">-&gt;</operator><name pos:start="241:8" pos:end="241:15">num_jobs</name></name>   <operator pos:start="241:19" pos:end="241:19">=</operator> <name pos:start="241:21" pos:end="241:28">num_jobs</name></expr>;</expr_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:29"><expr pos:start="243:5" pos:end="243:28"><name pos:start="243:5" pos:end="243:15"><name pos:start="243:5" pos:end="243:5">s</name><operator pos:start="243:6" pos:end="243:7">-&gt;</operator><name pos:start="243:8" pos:end="243:15">curframe</name></name>   <operator pos:start="243:19" pos:end="243:19">=</operator> <name pos:start="243:21" pos:end="243:28">curframe</name></expr>;</expr_stmt>

    <expr_stmt pos:start="245:5" pos:end="245:31"><expr pos:start="245:5" pos:end="245:30"><name pos:start="245:5" pos:end="245:17"><name pos:start="245:5" pos:end="245:5">s</name><operator pos:start="245:6" pos:end="245:7">-&gt;</operator><name pos:start="245:8" pos:end="245:17">prev_frame</name></name> <operator pos:start="245:19" pos:end="245:19">=</operator> <name pos:start="245:21" pos:end="245:30">prev_frame</name></expr>;</expr_stmt>

    <expr_stmt pos:start="247:5" pos:end="247:28"><expr pos:start="247:5" pos:end="247:27"><name pos:start="247:5" pos:end="247:15"><name pos:start="247:5" pos:end="247:5">s</name><operator pos:start="247:6" pos:end="247:7">-&gt;</operator><name pos:start="247:8" pos:end="247:13">mv_min</name><operator pos:start="247:14" pos:end="247:14">.</operator><name pos:start="247:15" pos:end="247:15">y</name></name>   <operator pos:start="247:19" pos:end="247:19">=</operator> <operator pos:start="247:21" pos:end="247:21">-</operator><name pos:start="247:22" pos:end="247:27">MARGIN</name></expr>;</expr_stmt>

    <expr_stmt pos:start="249:5" pos:end="249:55"><expr pos:start="249:5" pos:end="249:54"><name pos:start="249:5" pos:end="249:15"><name pos:start="249:5" pos:end="249:5">s</name><operator pos:start="249:6" pos:end="249:7">-&gt;</operator><name pos:start="249:8" pos:end="249:13">mv_max</name><operator pos:start="249:14" pos:end="249:14">.</operator><name pos:start="249:15" pos:end="249:15">y</name></name>   <operator pos:start="249:19" pos:end="249:19">=</operator> <operator pos:start="249:21" pos:end="249:21">(</operator><operator pos:start="249:22" pos:end="249:22">(</operator><name pos:start="249:23" pos:end="249:34"><name pos:start="249:23" pos:end="249:23">s</name><operator pos:start="249:24" pos:end="249:25">-&gt;</operator><name pos:start="249:26" pos:end="249:34">mb_height</name></name> <operator pos:start="249:36" pos:end="249:36">-</operator> <literal type="number" pos:start="249:38" pos:end="249:38">1</literal><operator pos:start="249:39" pos:end="249:39">)</operator> <operator pos:start="249:41" pos:end="249:42">&lt;&lt;</operator> <literal type="number" pos:start="249:44" pos:end="249:44">6</literal><operator pos:start="249:45" pos:end="249:45">)</operator> <operator pos:start="249:47" pos:end="249:47">+</operator> <name pos:start="249:49" pos:end="249:54">MARGIN</name></expr>;</expr_stmt>

    <for pos:start="251:5" pos:end="259:5">for <control pos:start="251:9" pos:end="251:37">(<init pos:start="251:10" pos:end="251:15"><expr pos:start="251:10" pos:end="251:14"><name pos:start="251:10" pos:end="251:10">i</name> <operator pos:start="251:12" pos:end="251:12">=</operator> <literal type="number" pos:start="251:14" pos:end="251:14">0</literal></expr>;</init> <condition pos:start="251:17" pos:end="251:32"><expr pos:start="251:17" pos:end="251:31"><name pos:start="251:17" pos:end="251:17">i</name> <operator pos:start="251:19" pos:end="251:19">&lt;</operator> <name pos:start="251:21" pos:end="251:31">MAX_THREADS</name></expr>;</condition> <incr pos:start="251:34" pos:end="251:36"><expr pos:start="251:34" pos:end="251:36"><name pos:start="251:34" pos:end="251:34">i</name><operator pos:start="251:35" pos:end="251:36">++</operator></expr></incr>)</control> <block pos:start="251:39" pos:end="259:5">{<block_content pos:start="253:9" pos:end="257:47">

        <decl_stmt pos:start="253:9" pos:end="253:47"><decl pos:start="253:9" pos:end="253:46"><type pos:start="253:9" pos:end="253:23"><name pos:start="253:9" pos:end="253:21">VP8ThreadData</name> <modifier pos:start="253:23" pos:end="253:23">*</modifier></type><name pos:start="253:24" pos:end="253:25">td</name> <init pos:start="253:27" pos:end="253:46">= <expr pos:start="253:29" pos:end="253:46"><operator pos:start="253:29" pos:end="253:29">&amp;</operator><name pos:start="253:30" pos:end="253:46"><name pos:start="253:30" pos:end="253:30">s</name><operator pos:start="253:31" pos:end="253:32">-&gt;</operator><name pos:start="253:33" pos:end="253:43">thread_data</name><index pos:start="253:44" pos:end="253:46">[<expr pos:start="253:45" pos:end="253:45"><name pos:start="253:45" pos:end="253:45">i</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="255:9" pos:end="255:43"><expr pos:start="255:9" pos:end="255:42"><call pos:start="255:9" pos:end="255:42"><name pos:start="255:9" pos:end="255:19">atomic_init</name><argument_list pos:start="255:20" pos:end="255:42">(<argument pos:start="255:21" pos:end="255:38"><expr pos:start="255:21" pos:end="255:38"><operator pos:start="255:21" pos:end="255:21">&amp;</operator><name pos:start="255:22" pos:end="255:38"><name pos:start="255:22" pos:end="255:23">td</name><operator pos:start="255:24" pos:end="255:25">-&gt;</operator><name pos:start="255:26" pos:end="255:38">thread_mb_pos</name></name></expr></argument>, <argument pos:start="255:41" pos:end="255:41"><expr pos:start="255:41" pos:end="255:41"><literal type="number" pos:start="255:41" pos:end="255:41">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="257:9" pos:end="257:47"><expr pos:start="257:9" pos:end="257:46"><call pos:start="257:9" pos:end="257:46"><name pos:start="257:9" pos:end="257:19">atomic_init</name><argument_list pos:start="257:20" pos:end="257:46">(<argument pos:start="257:21" pos:end="257:36"><expr pos:start="257:21" pos:end="257:36"><operator pos:start="257:21" pos:end="257:21">&amp;</operator><name pos:start="257:22" pos:end="257:36"><name pos:start="257:22" pos:end="257:23">td</name><operator pos:start="257:24" pos:end="257:25">-&gt;</operator><name pos:start="257:26" pos:end="257:36">wait_mb_pos</name></name></expr></argument>, <argument pos:start="257:39" pos:end="257:45"><expr pos:start="257:39" pos:end="257:45"><name pos:start="257:39" pos:end="257:45">INT_MAX</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <if_stmt pos:start="261:5" pos:end="271:34"><if pos:start="261:5" pos:end="265:34">if <condition pos:start="261:8" pos:end="261:15">(<expr pos:start="261:9" pos:end="261:14"><name pos:start="261:9" pos:end="261:14">is_vp7</name></expr>)</condition><block type="pseudo" pos:start="263:9" pos:end="265:34"><block_content pos:start="263:9" pos:end="265:34">

        <expr_stmt pos:start="263:9" pos:end="265:34"><expr pos:start="263:9" pos:end="265:33"><call pos:start="263:9" pos:end="265:33"><name pos:start="263:9" pos:end="263:23"><name pos:start="263:9" pos:end="263:13">avctx</name><operator pos:start="263:14" pos:end="263:15">-&gt;</operator><name pos:start="263:16" pos:end="263:23">execute2</name></name><argument_list pos:start="263:24" pos:end="265:33">(<argument pos:start="263:25" pos:end="263:29"><expr pos:start="263:25" pos:end="263:29"><name pos:start="263:25" pos:end="263:29">avctx</name></expr></argument>, <argument pos:start="263:32" pos:end="263:55"><expr pos:start="263:32" pos:end="263:55"><name pos:start="263:32" pos:end="263:55">vp7_decode_mb_row_sliced</name></expr></argument>, <argument pos:start="263:58" pos:end="263:71"><expr pos:start="263:58" pos:end="263:71"><name pos:start="263:58" pos:end="263:71"><name pos:start="263:58" pos:end="263:58">s</name><operator pos:start="263:59" pos:end="263:60">-&gt;</operator><name pos:start="263:61" pos:end="263:71">thread_data</name></name></expr></argument>, <argument pos:start="263:74" pos:end="263:77"><expr pos:start="263:74" pos:end="263:77"><name pos:start="263:74" pos:end="263:77">NULL</name></expr></argument>,

                        <argument pos:start="265:25" pos:end="265:32"><expr pos:start="265:25" pos:end="265:32"><name pos:start="265:25" pos:end="265:32">num_jobs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="267:5" pos:end="271:34">else<block type="pseudo" pos:start="269:9" pos:end="271:34"><block_content pos:start="269:9" pos:end="271:34">

        <expr_stmt pos:start="269:9" pos:end="271:34"><expr pos:start="269:9" pos:end="271:33"><call pos:start="269:9" pos:end="271:33"><name pos:start="269:9" pos:end="269:23"><name pos:start="269:9" pos:end="269:13">avctx</name><operator pos:start="269:14" pos:end="269:15">-&gt;</operator><name pos:start="269:16" pos:end="269:23">execute2</name></name><argument_list pos:start="269:24" pos:end="271:33">(<argument pos:start="269:25" pos:end="269:29"><expr pos:start="269:25" pos:end="269:29"><name pos:start="269:25" pos:end="269:29">avctx</name></expr></argument>, <argument pos:start="269:32" pos:end="269:55"><expr pos:start="269:32" pos:end="269:55"><name pos:start="269:32" pos:end="269:55">vp8_decode_mb_row_sliced</name></expr></argument>, <argument pos:start="269:58" pos:end="269:71"><expr pos:start="269:58" pos:end="269:71"><name pos:start="269:58" pos:end="269:71"><name pos:start="269:58" pos:end="269:58">s</name><operator pos:start="269:59" pos:end="269:60">-&gt;</operator><name pos:start="269:61" pos:end="269:71">thread_data</name></name></expr></argument>, <argument pos:start="269:74" pos:end="269:77"><expr pos:start="269:74" pos:end="269:77"><name pos:start="269:74" pos:end="269:77">NULL</name></expr></argument>,

                        <argument pos:start="271:25" pos:end="271:32"><expr pos:start="271:25" pos:end="271:32"><name pos:start="271:25" pos:end="271:32">num_jobs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <expr_stmt pos:start="275:5" pos:end="275:57"><expr pos:start="275:5" pos:end="275:56"><call pos:start="275:5" pos:end="275:56"><name pos:start="275:5" pos:end="275:29">ff_thread_report_progress</name><argument_list pos:start="275:30" pos:end="275:56">(<argument pos:start="275:31" pos:end="275:43"><expr pos:start="275:31" pos:end="275:43"><operator pos:start="275:31" pos:end="275:31">&amp;</operator><name pos:start="275:32" pos:end="275:43"><name pos:start="275:32" pos:end="275:39">curframe</name><operator pos:start="275:40" pos:end="275:41">-&gt;</operator><name pos:start="275:42" pos:end="275:43">tf</name></name></expr></argument>, <argument pos:start="275:46" pos:end="275:52"><expr pos:start="275:46" pos:end="275:52"><name pos:start="275:46" pos:end="275:52">INT_MAX</name></expr></argument>, <argument pos:start="275:55" pos:end="275:55"><expr pos:start="275:55" pos:end="275:55"><literal type="number" pos:start="275:55" pos:end="275:55">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="277:5" pos:end="277:72"><expr pos:start="277:5" pos:end="277:71"><call pos:start="277:5" pos:end="277:71"><name pos:start="277:5" pos:end="277:10">memcpy</name><argument_list pos:start="277:11" pos:end="277:71">(<argument pos:start="277:12" pos:end="277:24"><expr pos:start="277:12" pos:end="277:24"><operator pos:start="277:12" pos:end="277:12">&amp;</operator><name pos:start="277:13" pos:end="277:24"><name pos:start="277:13" pos:end="277:13">s</name><operator pos:start="277:14" pos:end="277:15">-&gt;</operator><name pos:start="277:16" pos:end="277:21">framep</name><index pos:start="277:22" pos:end="277:24">[<expr pos:start="277:23" pos:end="277:23"><literal type="number" pos:start="277:23" pos:end="277:23">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:27" pos:end="277:44"><expr pos:start="277:27" pos:end="277:44"><operator pos:start="277:27" pos:end="277:27">&amp;</operator><name pos:start="277:28" pos:end="277:44"><name pos:start="277:28" pos:end="277:28">s</name><operator pos:start="277:29" pos:end="277:30">-&gt;</operator><name pos:start="277:31" pos:end="277:41">next_framep</name><index pos:start="277:42" pos:end="277:44">[<expr pos:start="277:43" pos:end="277:43"><literal type="number" pos:start="277:43" pos:end="277:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="277:47" pos:end="277:70"><expr pos:start="277:47" pos:end="277:70"><sizeof pos:start="277:47" pos:end="277:66">sizeof<argument_list pos:start="277:53" pos:end="277:66">(<argument pos:start="277:54" pos:end="277:65"><expr pos:start="277:54" pos:end="277:65"><name pos:start="277:54" pos:end="277:65"><name pos:start="277:54" pos:end="277:54">s</name><operator pos:start="277:55" pos:end="277:56">-&gt;</operator><name pos:start="277:57" pos:end="277:62">framep</name><index pos:start="277:63" pos:end="277:65">[<expr pos:start="277:64" pos:end="277:64"><literal type="number" pos:start="277:64" pos:end="277:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="277:68" pos:end="277:68">*</operator> <literal type="number" pos:start="277:70" pos:end="277:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



<label pos:start="281:1" pos:end="281:12"><name pos:start="281:1" pos:end="281:11">skip_decode</name>:</label>

    <comment type="line" pos:start="283:5" pos:end="283:60">// if future frames don't use the updated probabilities,</comment>

    <comment type="line" pos:start="285:5" pos:end="285:40">// reset them to the values we saved</comment>

    <if_stmt pos:start="287:5" pos:end="289:32"><if pos:start="287:5" pos:end="289:32">if <condition pos:start="287:8" pos:end="287:33">(<expr pos:start="287:9" pos:end="287:32"><operator pos:start="287:9" pos:end="287:9">!</operator><name pos:start="287:10" pos:end="287:32"><name pos:start="287:10" pos:end="287:10">s</name><operator pos:start="287:11" pos:end="287:12">-&gt;</operator><name pos:start="287:13" pos:end="287:32">update_probabilities</name></name></expr>)</condition><block type="pseudo" pos:start="289:9" pos:end="289:32"><block_content pos:start="289:9" pos:end="289:32">

        <expr_stmt pos:start="289:9" pos:end="289:32"><expr pos:start="289:9" pos:end="289:31"><name pos:start="289:9" pos:end="289:18"><name pos:start="289:9" pos:end="289:9">s</name><operator pos:start="289:10" pos:end="289:11">-&gt;</operator><name pos:start="289:12" pos:end="289:15">prob</name><index pos:start="289:16" pos:end="289:18">[<expr pos:start="289:17" pos:end="289:17"><literal type="number" pos:start="289:17" pos:end="289:17">0</literal></expr>]</index></name> <operator pos:start="289:20" pos:end="289:20">=</operator> <name pos:start="289:22" pos:end="289:31"><name pos:start="289:22" pos:end="289:22">s</name><operator pos:start="289:23" pos:end="289:24">-&gt;</operator><name pos:start="289:25" pos:end="289:28">prob</name><index pos:start="289:29" pos:end="289:31">[<expr pos:start="289:30" pos:end="289:30"><literal type="number" pos:start="289:30" pos:end="289:30">1</literal></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="293:5" pos:end="301:5"><if pos:start="293:5" pos:end="301:5">if <condition pos:start="293:8" pos:end="293:22">(<expr pos:start="293:9" pos:end="293:21"><operator pos:start="293:9" pos:end="293:9">!</operator><name pos:start="293:10" pos:end="293:21"><name pos:start="293:10" pos:end="293:10">s</name><operator pos:start="293:11" pos:end="293:12">-&gt;</operator><name pos:start="293:13" pos:end="293:21">invisible</name></name></expr>)</condition> <block pos:start="293:24" pos:end="301:5">{<block_content pos:start="295:9" pos:end="299:23">

        <if_stmt pos:start="295:9" pos:end="297:23"><if pos:start="295:9" pos:end="297:23">if <condition pos:start="295:12" pos:end="295:59">(<expr pos:start="295:13" pos:end="295:58"><operator pos:start="295:13" pos:end="295:13">(</operator><name pos:start="295:14" pos:end="295:16">ret</name> <operator pos:start="295:18" pos:end="295:18">=</operator> <call pos:start="295:20" pos:end="295:53"><name pos:start="295:20" pos:end="295:31">av_frame_ref</name><argument_list pos:start="295:32" pos:end="295:53">(<argument pos:start="295:33" pos:end="295:36"><expr pos:start="295:33" pos:end="295:36"><name pos:start="295:33" pos:end="295:36">data</name></expr></argument>, <argument pos:start="295:39" pos:end="295:52"><expr pos:start="295:39" pos:end="295:52"><name pos:start="295:39" pos:end="295:52"><name pos:start="295:39" pos:end="295:46">curframe</name><operator pos:start="295:47" pos:end="295:48">-&gt;</operator><name pos:start="295:49" pos:end="295:50">tf</name><operator pos:start="295:51" pos:end="295:51">.</operator><name pos:start="295:52" pos:end="295:52">f</name></name></expr></argument>)</argument_list></call><operator pos:start="295:54" pos:end="295:54">)</operator> <operator pos:start="295:56" pos:end="295:56">&lt;</operator> <literal type="number" pos:start="295:58" pos:end="295:58">0</literal></expr>)</condition><block type="pseudo" pos:start="297:13" pos:end="297:23"><block_content pos:start="297:13" pos:end="297:23">

            <return pos:start="297:13" pos:end="297:23">return <expr pos:start="297:20" pos:end="297:22"><name pos:start="297:20" pos:end="297:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="299:9" pos:end="299:23"><expr pos:start="299:9" pos:end="299:22"><operator pos:start="299:9" pos:end="299:9">*</operator><name pos:start="299:10" pos:end="299:18">got_frame</name> <operator pos:start="299:20" pos:end="299:20">=</operator> <literal type="number" pos:start="299:22" pos:end="299:22">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="305:5" pos:end="305:23">return <expr pos:start="305:12" pos:end="305:22"><name pos:start="305:12" pos:end="305:22"><name pos:start="305:12" pos:end="305:16">avpkt</name><operator pos:start="305:17" pos:end="305:18">-&gt;</operator><name pos:start="305:19" pos:end="305:22">size</name></name></expr>;</return>

<label pos:start="307:1" pos:end="307:4"><name pos:start="307:1" pos:end="307:3">err</name>:</label>

    <expr_stmt pos:start="309:5" pos:end="309:72"><expr pos:start="309:5" pos:end="309:71"><call pos:start="309:5" pos:end="309:71"><name pos:start="309:5" pos:end="309:10">memcpy</name><argument_list pos:start="309:11" pos:end="309:71">(<argument pos:start="309:12" pos:end="309:29"><expr pos:start="309:12" pos:end="309:29"><operator pos:start="309:12" pos:end="309:12">&amp;</operator><name pos:start="309:13" pos:end="309:29"><name pos:start="309:13" pos:end="309:13">s</name><operator pos:start="309:14" pos:end="309:15">-&gt;</operator><name pos:start="309:16" pos:end="309:26">next_framep</name><index pos:start="309:27" pos:end="309:29">[<expr pos:start="309:28" pos:end="309:28"><literal type="number" pos:start="309:28" pos:end="309:28">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="309:32" pos:end="309:44"><expr pos:start="309:32" pos:end="309:44"><operator pos:start="309:32" pos:end="309:32">&amp;</operator><name pos:start="309:33" pos:end="309:44"><name pos:start="309:33" pos:end="309:33">s</name><operator pos:start="309:34" pos:end="309:35">-&gt;</operator><name pos:start="309:36" pos:end="309:41">framep</name><index pos:start="309:42" pos:end="309:44">[<expr pos:start="309:43" pos:end="309:43"><literal type="number" pos:start="309:43" pos:end="309:43">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="309:47" pos:end="309:70"><expr pos:start="309:47" pos:end="309:70"><sizeof pos:start="309:47" pos:end="309:66">sizeof<argument_list pos:start="309:53" pos:end="309:66">(<argument pos:start="309:54" pos:end="309:65"><expr pos:start="309:54" pos:end="309:65"><name pos:start="309:54" pos:end="309:65"><name pos:start="309:54" pos:end="309:54">s</name><operator pos:start="309:55" pos:end="309:56">-&gt;</operator><name pos:start="309:57" pos:end="309:62">framep</name><index pos:start="309:63" pos:end="309:65">[<expr pos:start="309:64" pos:end="309:64"><literal type="number" pos:start="309:64" pos:end="309:64">0</literal></expr>]</index></name></expr></argument>)</argument_list></sizeof> <operator pos:start="309:68" pos:end="309:68">*</operator> <literal type="number" pos:start="309:70" pos:end="309:70">4</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="311:5" pos:end="311:15">return <expr pos:start="311:12" pos:end="311:14"><name pos:start="311:12" pos:end="311:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
