<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/25781.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:14"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:14">int64_t</name></type> <name pos:start="1:16" pos:end="1:32">allocate_clusters</name><parameter_list pos:start="1:33" pos:end="3:59">(<parameter pos:start="1:34" pos:end="1:53"><decl pos:start="1:34" pos:end="1:53"><type pos:start="1:34" pos:end="1:53"><name pos:start="1:34" pos:end="1:49">BlockDriverState</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type><name pos:start="1:52" pos:end="1:53">bs</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:73"><decl pos:start="1:56" pos:end="1:73"><type pos:start="1:56" pos:end="1:73"><name pos:start="1:56" pos:end="1:62">int64_t</name></type> <name pos:start="1:64" pos:end="1:73">sector_num</name></decl></parameter>,

                                 <parameter pos:start="3:34" pos:end="3:47"><decl pos:start="3:34" pos:end="3:47"><type pos:start="3:34" pos:end="3:47"><name pos:start="3:34" pos:end="3:36">int</name></type> <name pos:start="3:38" pos:end="3:47">nb_sectors</name></decl></parameter>, <parameter pos:start="3:50" pos:end="3:58"><decl pos:start="3:50" pos:end="3:58"><type pos:start="3:50" pos:end="3:58"><name pos:start="3:50" pos:end="3:52">int</name> <modifier pos:start="3:54" pos:end="3:54">*</modifier></type><name pos:start="3:55" pos:end="3:58">pnum</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:53">

    <decl_stmt pos:start="7:5" pos:end="7:39"><decl pos:start="7:5" pos:end="7:38"><type pos:start="7:5" pos:end="7:24"><name pos:start="7:5" pos:end="7:22">BDRVParallelsState</name> <modifier pos:start="7:24" pos:end="7:24">*</modifier></type><name pos:start="7:25" pos:end="7:25">s</name> <init pos:start="7:27" pos:end="7:38">= <expr pos:start="7:29" pos:end="7:38"><name pos:start="7:29" pos:end="7:38"><name pos:start="7:29" pos:end="7:30">bs</name><operator pos:start="7:31" pos:end="7:32">-&gt;</operator><name pos:start="7:33" pos:end="7:38">opaque</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:33"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:16">idx</name></decl>, <decl pos:start="9:19" pos:end="9:29"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:19" pos:end="9:29">to_allocate</name></decl>, <decl pos:start="9:32" pos:end="9:32"><type ref="prev" pos:start="9:5" pos:end="9:12"/><name pos:start="9:32" pos:end="9:32">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name></decl>, <decl pos:start="11:18" pos:end="11:22"><type ref="prev" pos:start="11:5" pos:end="11:11"/><name pos:start="11:18" pos:end="11:22">space</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:56"><expr pos:start="15:5" pos:end="15:55"><name pos:start="15:5" pos:end="15:7">pos</name> <operator pos:start="15:9" pos:end="15:9">=</operator> <call pos:start="15:11" pos:end="15:55"><name pos:start="15:11" pos:end="15:22">block_status</name><argument_list pos:start="15:23" pos:end="15:55">(<argument pos:start="15:24" pos:end="15:24"><expr pos:start="15:24" pos:end="15:24"><name pos:start="15:24" pos:end="15:24">s</name></expr></argument>, <argument pos:start="15:27" pos:end="15:36"><expr pos:start="15:27" pos:end="15:36"><name pos:start="15:27" pos:end="15:36">sector_num</name></expr></argument>, <argument pos:start="15:39" pos:end="15:48"><expr pos:start="15:39" pos:end="15:48"><name pos:start="15:39" pos:end="15:48">nb_sectors</name></expr></argument>, <argument pos:start="15:51" pos:end="15:54"><expr pos:start="15:51" pos:end="15:54"><name pos:start="15:51" pos:end="15:54">pnum</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><name pos:start="17:9" pos:end="17:11">pos</name> <operator pos:start="17:13" pos:end="17:13">&gt;</operator> <literal type="number" pos:start="17:15" pos:end="17:15">0</literal></expr>)</condition> <block pos:start="17:18" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:19">

        <return pos:start="19:9" pos:end="19:19">return <expr pos:start="19:16" pos:end="19:18"><name pos:start="19:16" pos:end="19:18">pos</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="25:5" pos:end="25:33"><expr pos:start="25:5" pos:end="25:32"><name pos:start="25:5" pos:end="25:7">idx</name> <operator pos:start="25:9" pos:end="25:9">=</operator> <name pos:start="25:11" pos:end="25:20">sector_num</name> <operator pos:start="25:22" pos:end="25:22">/</operator> <name pos:start="25:24" pos:end="25:32"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:32">tracks</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="27:5" pos:end="31:5"><if pos:start="27:5" pos:end="31:5">if <condition pos:start="27:8" pos:end="27:27">(<expr pos:start="27:9" pos:end="27:26"><name pos:start="27:9" pos:end="27:11">idx</name> <operator pos:start="27:13" pos:end="27:14">&gt;=</operator> <name pos:start="27:16" pos:end="27:26"><name pos:start="27:16" pos:end="27:16">s</name><operator pos:start="27:17" pos:end="27:18">-&gt;</operator><name pos:start="27:19" pos:end="27:26">bat_size</name></name></expr>)</condition> <block pos:start="27:29" pos:end="31:5">{<block_content pos:start="29:9" pos:end="29:23">

        <return pos:start="29:9" pos:end="29:23">return <expr pos:start="29:16" pos:end="29:22"><operator pos:start="29:16" pos:end="29:16">-</operator><name pos:start="29:17" pos:end="29:22">EINVAL</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:68"><expr pos:start="35:5" pos:end="35:67"><name pos:start="35:5" pos:end="35:15">to_allocate</name> <operator pos:start="35:17" pos:end="35:17">=</operator> <call pos:start="35:19" pos:end="35:61"><name pos:start="35:19" pos:end="35:30">DIV_ROUND_UP</name><argument_list pos:start="35:31" pos:end="35:61">(<argument pos:start="35:32" pos:end="35:49"><expr pos:start="35:32" pos:end="35:49"><name pos:start="35:32" pos:end="35:41">sector_num</name> <operator pos:start="35:43" pos:end="35:43">+</operator> <operator pos:start="35:45" pos:end="35:45">*</operator><name pos:start="35:46" pos:end="35:49">pnum</name></expr></argument>, <argument pos:start="35:52" pos:end="35:60"><expr pos:start="35:52" pos:end="35:60"><name pos:start="35:52" pos:end="35:60"><name pos:start="35:52" pos:end="35:52">s</name><operator pos:start="35:53" pos:end="35:54">-&gt;</operator><name pos:start="35:55" pos:end="35:60">tracks</name></name></expr></argument>)</argument_list></call> <operator pos:start="35:63" pos:end="35:63">-</operator> <name pos:start="35:65" pos:end="35:67">idx</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:36"><expr pos:start="37:5" pos:end="37:35"><name pos:start="37:5" pos:end="37:9">space</name> <operator pos:start="37:11" pos:end="37:11">=</operator> <name pos:start="37:13" pos:end="37:23">to_allocate</name> <operator pos:start="37:25" pos:end="37:25">*</operator> <name pos:start="37:27" pos:end="37:35"><name pos:start="37:27" pos:end="37:27">s</name><operator pos:start="37:28" pos:end="37:29">-&gt;</operator><name pos:start="37:30" pos:end="37:35">tracks</name></name></expr>;</expr_stmt>

    <if_stmt pos:start="39:5" pos:end="67:5"><if pos:start="39:5" pos:end="67:5">if <condition pos:start="39:8" pos:end="39:79">(<expr pos:start="39:9" pos:end="39:78"><name pos:start="39:9" pos:end="39:19"><name pos:start="39:9" pos:end="39:9">s</name><operator pos:start="39:10" pos:end="39:11">-&gt;</operator><name pos:start="39:12" pos:end="39:19">data_end</name></name> <operator pos:start="39:21" pos:end="39:21">+</operator> <name pos:start="39:23" pos:end="39:27">space</name> <operator pos:start="39:29" pos:end="39:29">&gt;</operator> <call pos:start="39:31" pos:end="39:58"><name pos:start="39:31" pos:end="39:44">bdrv_getlength</name><argument_list pos:start="39:45" pos:end="39:58">(<argument pos:start="39:46" pos:end="39:57"><expr pos:start="39:46" pos:end="39:57"><name pos:start="39:46" pos:end="39:57"><name pos:start="39:46" pos:end="39:47">bs</name><operator pos:start="39:48" pos:end="39:49">-&gt;</operator><name pos:start="39:50" pos:end="39:53">file</name><operator pos:start="39:54" pos:end="39:55">-&gt;</operator><name pos:start="39:56" pos:end="39:57">bs</name></name></expr></argument>)</argument_list></call> <operator pos:start="39:60" pos:end="39:61">&gt;&gt;</operator> <name pos:start="39:63" pos:end="39:78">BDRV_SECTOR_BITS</name></expr>)</condition> <block pos:start="39:81" pos:end="67:5">{<block_content pos:start="41:9" pos:end="65:9">

        <decl_stmt pos:start="41:9" pos:end="41:16"><decl pos:start="41:9" pos:end="41:15"><type pos:start="41:9" pos:end="41:11"><name pos:start="41:9" pos:end="41:11">int</name></type> <name pos:start="41:13" pos:end="41:15">ret</name></decl>;</decl_stmt>

        <expr_stmt pos:start="43:9" pos:end="43:34"><expr pos:start="43:9" pos:end="43:33"><name pos:start="43:9" pos:end="43:13">space</name> <operator pos:start="43:15" pos:end="43:16">+=</operator> <name pos:start="43:18" pos:end="43:33"><name pos:start="43:18" pos:end="43:18">s</name><operator pos:start="43:19" pos:end="43:20">-&gt;</operator><name pos:start="43:21" pos:end="43:33">prealloc_size</name></name></expr>;</expr_stmt>

        <if_stmt pos:start="45:9" pos:end="59:9"><if pos:start="45:9" pos:end="53:9">if <condition pos:start="45:12" pos:end="45:60">(<expr pos:start="45:13" pos:end="45:59"><name pos:start="45:13" pos:end="45:28"><name pos:start="45:13" pos:end="45:13">s</name><operator pos:start="45:14" pos:end="45:15">-&gt;</operator><name pos:start="45:16" pos:end="45:28">prealloc_mode</name></name> <operator pos:start="45:30" pos:end="45:31">==</operator> <name pos:start="45:33" pos:end="45:59">PRL_PREALLOC_MODE_FALLOCATE</name></expr>)</condition> <block pos:start="45:62" pos:end="53:9">{<block_content pos:start="47:13" pos:end="51:67">

            <expr_stmt pos:start="47:13" pos:end="51:67"><expr pos:start="47:13" pos:end="51:66"><name pos:start="47:13" pos:end="47:15">ret</name> <operator pos:start="47:17" pos:end="47:17">=</operator> <call pos:start="47:19" pos:end="51:66"><name pos:start="47:19" pos:end="47:36">bdrv_pwrite_zeroes</name><argument_list pos:start="47:37" pos:end="51:66">(<argument pos:start="47:38" pos:end="47:45"><expr pos:start="47:38" pos:end="47:45"><name pos:start="47:38" pos:end="47:45"><name pos:start="47:38" pos:end="47:39">bs</name><operator pos:start="47:40" pos:end="47:41">-&gt;</operator><name pos:start="47:42" pos:end="47:45">file</name></name></expr></argument>,

                                     <argument pos:start="49:38" pos:end="49:68"><expr pos:start="49:38" pos:end="49:68"><name pos:start="49:38" pos:end="49:48"><name pos:start="49:38" pos:end="49:38">s</name><operator pos:start="49:39" pos:end="49:40">-&gt;</operator><name pos:start="49:41" pos:end="49:48">data_end</name></name> <operator pos:start="49:50" pos:end="49:51">&lt;&lt;</operator> <name pos:start="49:53" pos:end="49:68">BDRV_SECTOR_BITS</name></expr></argument>,

                                     <argument pos:start="51:38" pos:end="51:62"><expr pos:start="51:38" pos:end="51:62"><name pos:start="51:38" pos:end="51:42">space</name> <operator pos:start="51:44" pos:end="51:45">&lt;&lt;</operator> <name pos:start="51:47" pos:end="51:62">BDRV_SECTOR_BITS</name></expr></argument>, <argument pos:start="51:65" pos:end="51:65"><expr pos:start="51:65" pos:end="51:65"><literal type="number" pos:start="51:65" pos:end="51:65">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="53:11" pos:end="59:9">else <block pos:start="53:16" pos:end="59:9">{<block_content pos:start="55:13" pos:end="57:75">

            <expr_stmt pos:start="55:13" pos:end="57:75"><expr pos:start="55:13" pos:end="57:74"><name pos:start="55:13" pos:end="55:15">ret</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <call pos:start="55:19" pos:end="57:74"><name pos:start="55:19" pos:end="55:31">bdrv_truncate</name><argument_list pos:start="55:32" pos:end="57:74">(<argument pos:start="55:33" pos:end="55:40"><expr pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:40"><name pos:start="55:33" pos:end="55:34">bs</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:40">file</name></name></expr></argument>,

                                <argument pos:start="57:33" pos:end="57:73"><expr pos:start="57:33" pos:end="57:73"><operator pos:start="57:33" pos:end="57:33">(</operator><name pos:start="57:34" pos:end="57:44"><name pos:start="57:34" pos:end="57:34">s</name><operator pos:start="57:35" pos:end="57:36">-&gt;</operator><name pos:start="57:37" pos:end="57:44">data_end</name></name> <operator pos:start="57:46" pos:end="57:46">+</operator> <name pos:start="57:48" pos:end="57:52">space</name><operator pos:start="57:53" pos:end="57:53">)</operator> <operator pos:start="57:55" pos:end="57:56">&lt;&lt;</operator> <name pos:start="57:58" pos:end="57:73">BDRV_SECTOR_BITS</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <if_stmt pos:start="61:9" pos:end="65:9"><if pos:start="61:9" pos:end="65:9">if <condition pos:start="61:12" pos:end="61:20">(<expr pos:start="61:13" pos:end="61:19"><name pos:start="61:13" pos:end="61:15">ret</name> <operator pos:start="61:17" pos:end="61:17">&lt;</operator> <literal type="number" pos:start="61:19" pos:end="61:19">0</literal></expr>)</condition> <block pos:start="61:22" pos:end="65:9">{<block_content pos:start="63:13" pos:end="63:23">

            <return pos:start="63:13" pos:end="63:23">return <expr pos:start="63:20" pos:end="63:22"><name pos:start="63:20" pos:end="63:22">ret</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <for pos:start="71:5" pos:end="81:5">for <control pos:start="71:9" pos:end="71:37">(<init pos:start="71:10" pos:end="71:15"><expr pos:start="71:10" pos:end="71:14"><name pos:start="71:10" pos:end="71:10">i</name> <operator pos:start="71:12" pos:end="71:12">=</operator> <literal type="number" pos:start="71:14" pos:end="71:14">0</literal></expr>;</init> <condition pos:start="71:17" pos:end="71:32"><expr pos:start="71:17" pos:end="71:31"><name pos:start="71:17" pos:end="71:17">i</name> <operator pos:start="71:19" pos:end="71:19">&lt;</operator> <name pos:start="71:21" pos:end="71:31">to_allocate</name></expr>;</condition> <incr pos:start="71:34" pos:end="71:36"><expr pos:start="71:34" pos:end="71:36"><name pos:start="71:34" pos:end="71:34">i</name><operator pos:start="71:35" pos:end="71:36">++</operator></expr></incr>)</control> <block pos:start="71:39" pos:end="81:5">{<block_content pos:start="73:9" pos:end="79:67">

        <expr_stmt pos:start="73:9" pos:end="73:78"><expr pos:start="73:9" pos:end="73:77"><name pos:start="73:9" pos:end="73:30"><name pos:start="73:9" pos:end="73:9">s</name><operator pos:start="73:10" pos:end="73:11">-&gt;</operator><name pos:start="73:12" pos:end="73:21">bat_bitmap</name><index pos:start="73:22" pos:end="73:30">[<expr pos:start="73:23" pos:end="73:29"><name pos:start="73:23" pos:end="73:25">idx</name> <operator pos:start="73:27" pos:end="73:27">+</operator> <name pos:start="73:29" pos:end="73:29">i</name></expr>]</index></name> <operator pos:start="73:32" pos:end="73:32">=</operator> <call pos:start="73:34" pos:end="73:77"><name pos:start="73:34" pos:end="73:44">cpu_to_le32</name><argument_list pos:start="73:45" pos:end="73:77">(<argument pos:start="73:46" pos:end="73:76"><expr pos:start="73:46" pos:end="73:76"><name pos:start="73:46" pos:end="73:56"><name pos:start="73:46" pos:end="73:46">s</name><operator pos:start="73:47" pos:end="73:48">-&gt;</operator><name pos:start="73:49" pos:end="73:56">data_end</name></name> <operator pos:start="73:58" pos:end="73:58">/</operator> <name pos:start="73:60" pos:end="73:76"><name pos:start="73:60" pos:end="73:60">s</name><operator pos:start="73:61" pos:end="73:62">-&gt;</operator><name pos:start="73:63" pos:end="73:76">off_multiplier</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:33"><expr pos:start="75:9" pos:end="75:32"><name pos:start="75:9" pos:end="75:19"><name pos:start="75:9" pos:end="75:9">s</name><operator pos:start="75:10" pos:end="75:11">-&gt;</operator><name pos:start="75:12" pos:end="75:19">data_end</name></name> <operator pos:start="75:21" pos:end="75:22">+=</operator> <name pos:start="75:24" pos:end="75:32"><name pos:start="75:24" pos:end="75:24">s</name><operator pos:start="75:25" pos:end="75:26">-&gt;</operator><name pos:start="75:27" pos:end="75:32">tracks</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="79:67"><expr pos:start="77:9" pos:end="79:66"><call pos:start="77:9" pos:end="79:66"><name pos:start="77:9" pos:end="77:18">bitmap_set</name><argument_list pos:start="77:19" pos:end="79:66">(<argument pos:start="77:20" pos:end="77:36"><expr pos:start="77:20" pos:end="77:36"><name pos:start="77:20" pos:end="77:36"><name pos:start="77:20" pos:end="77:20">s</name><operator pos:start="77:21" pos:end="77:22">-&gt;</operator><name pos:start="77:23" pos:end="77:36">bat_dirty_bmap</name></name></expr></argument>,

                   <argument pos:start="79:20" pos:end="79:62"><expr pos:start="79:20" pos:end="79:62"><call pos:start="79:20" pos:end="79:41"><name pos:start="79:20" pos:end="79:32">bat_entry_off</name><argument_list pos:start="79:33" pos:end="79:41">(<argument pos:start="79:34" pos:end="79:40"><expr pos:start="79:34" pos:end="79:40"><name pos:start="79:34" pos:end="79:36">idx</name> <operator pos:start="79:38" pos:end="79:38">+</operator> <name pos:start="79:40" pos:end="79:40">i</name></expr></argument>)</argument_list></call> <operator pos:start="79:43" pos:end="79:43">/</operator> <name pos:start="79:45" pos:end="79:62"><name pos:start="79:45" pos:end="79:45">s</name><operator pos:start="79:46" pos:end="79:47">-&gt;</operator><name pos:start="79:48" pos:end="79:62">bat_dirty_block</name></name></expr></argument>, <argument pos:start="79:65" pos:end="79:65"><expr pos:start="79:65" pos:end="79:65"><literal type="number" pos:start="79:65" pos:end="79:65">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>



    <return pos:start="85:5" pos:end="85:53">return <expr pos:start="85:12" pos:end="85:52"><call pos:start="85:12" pos:end="85:27"><name pos:start="85:12" pos:end="85:19">bat2sect</name><argument_list pos:start="85:20" pos:end="85:27">(<argument pos:start="85:21" pos:end="85:21"><expr pos:start="85:21" pos:end="85:21"><name pos:start="85:21" pos:end="85:21">s</name></expr></argument>, <argument pos:start="85:24" pos:end="85:26"><expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">idx</name></expr></argument>)</argument_list></call> <operator pos:start="85:29" pos:end="85:29">+</operator> <name pos:start="85:31" pos:end="85:40">sector_num</name> <operator pos:start="85:42" pos:end="85:42">%</operator> <name pos:start="85:44" pos:end="85:52"><name pos:start="85:44" pos:end="85:44">s</name><operator pos:start="85:45" pos:end="85:46">-&gt;</operator><name pos:start="85:47" pos:end="85:52">tracks</name></name></expr>;</return>

</block_content>}</block></function>
</unit>
