<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/9536.c" pos:tabs="8"><function pos:start="1:1" pos:end="37:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:29">qemu_acl_party_is_allowed</name><parameter_list pos:start="1:30" pos:end="3:48">(<parameter pos:start="1:31" pos:end="1:43"><decl pos:start="1:31" pos:end="1:43"><type pos:start="1:31" pos:end="1:43"><name pos:start="1:31" pos:end="1:38">qemu_acl</name> <modifier pos:start="1:40" pos:end="1:40">*</modifier></type><name pos:start="1:41" pos:end="1:43">acl</name></decl></parameter>,

                              <parameter pos:start="3:31" pos:end="3:47"><decl pos:start="3:31" pos:end="3:47"><type pos:start="3:31" pos:end="3:47"><specifier pos:start="3:31" pos:end="3:35">const</specifier> <name pos:start="3:37" pos:end="3:40">char</name> <modifier pos:start="3:42" pos:end="3:42">*</modifier></type><name pos:start="3:43" pos:end="3:47">party</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="37:1">{<block_content pos:start="7:5" pos:end="35:36">

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:18">qemu_acl_entry</name> <modifier pos:start="7:20" pos:end="7:20">*</modifier></type><name pos:start="7:21" pos:end="7:25">entry</name></decl>;</decl_stmt>



    <macro pos:start="11:5" pos:end="11:45"><name pos:start="11:5" pos:end="11:17">TAILQ_FOREACH</name><argument_list pos:start="11:18" pos:end="11:45">(<argument pos:start="11:19" pos:end="11:23">entry</argument>, <argument pos:start="11:26" pos:end="11:38">&amp;acl-&gt;entries</argument>, <argument pos:start="11:41" pos:end="11:44">next</argument>)</argument_list></macro> <block pos:start="11:47" pos:end="31:5">{<block_content pos:start="15:9" pos:end="30:0">

<cpp:ifdef pos:start="13:1" pos:end="13:21">#<cpp:directive pos:start="13:2" pos:end="13:6">ifdef</cpp:directive> <name pos:start="13:8" pos:end="13:21">CONFIG_FNMATCH</name></cpp:ifdef>

        <if_stmt pos:start="15:9" pos:end="20:0"><if pos:start="15:9" pos:end="20:0">if <condition pos:start="15:12" pos:end="15:49">(<expr pos:start="15:13" pos:end="15:48"><call pos:start="15:13" pos:end="15:43"><name pos:start="15:13" pos:end="15:19">fnmatch</name><argument_list pos:start="15:20" pos:end="15:43">(<argument pos:start="15:21" pos:end="15:32"><expr pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:32"><name pos:start="15:21" pos:end="15:25">entry</name><operator pos:start="15:26" pos:end="15:27">-&gt;</operator><name pos:start="15:28" pos:end="15:32">match</name></name></expr></argument>, <argument pos:start="15:35" pos:end="15:39"><expr pos:start="15:35" pos:end="15:39"><name pos:start="15:35" pos:end="15:39">party</name></expr></argument>, <argument pos:start="15:42" pos:end="15:42"><expr pos:start="15:42" pos:end="15:42"><literal type="number" pos:start="15:42" pos:end="15:42">0</literal></expr></argument>)</argument_list></call> <operator pos:start="15:45" pos:end="15:46">==</operator> <literal type="number" pos:start="15:48" pos:end="15:48">0</literal></expr>)</condition><block type="pseudo" pos:start="17:13" pos:end="20:0"><block_content pos:start="17:13" pos:end="20:0">

            <return pos:start="17:13" pos:end="20:0">return <expr pos:start="17:20" pos:end="17:38"><ternary pos:start="17:20" pos:end="17:38"><condition pos:start="17:20" pos:end="17:32"><expr pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:30"><name pos:start="17:20" pos:end="17:24">entry</name><operator pos:start="17:25" pos:end="17:26">-&gt;</operator><name pos:start="17:27" pos:end="17:30">deny</name></name></expr> ?</condition><then pos:start="17:34" pos:end="17:34"> <expr pos:start="17:34" pos:end="17:34"><literal type="number" pos:start="17:34" pos:end="17:34">0</literal></expr> </then><else pos:start="17:36" pos:end="17:38">: <expr pos:start="17:38" pos:end="17:38"><literal type="number" pos:start="17:38" pos:end="17:38">1</literal></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>

<cpp:else pos:start="19:1" pos:end="19:5">#<cpp:directive pos:start="19:2" pos:end="19:5">else</cpp:directive></cpp:else>

        <comment type="block" pos:start="21:9" pos:end="23:43">/* No fnmatch, so fallback to exact string matching

         * instead of allowing wildcards */</comment>

        <if_stmt pos:start="25:9" pos:end="30:0"><if pos:start="25:9" pos:end="30:0">if <condition pos:start="25:12" pos:end="25:45">(<expr pos:start="25:13" pos:end="25:44"><call pos:start="25:13" pos:end="25:39"><name pos:start="25:13" pos:end="25:18">strcmp</name><argument_list pos:start="25:19" pos:end="25:39">(<argument pos:start="25:20" pos:end="25:31"><expr pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:31"><name pos:start="25:20" pos:end="25:24">entry</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:31">match</name></name></expr></argument>, <argument pos:start="25:34" pos:end="25:38"><expr pos:start="25:34" pos:end="25:38"><name pos:start="25:34" pos:end="25:38">party</name></expr></argument>)</argument_list></call> <operator pos:start="25:41" pos:end="25:42">==</operator> <literal type="number" pos:start="25:44" pos:end="25:44">0</literal></expr>)</condition><block type="pseudo" pos:start="27:13" pos:end="30:0"><block_content pos:start="27:13" pos:end="30:0">

            <return pos:start="27:13" pos:end="30:0">return <expr pos:start="27:20" pos:end="27:38"><ternary pos:start="27:20" pos:end="27:38"><condition pos:start="27:20" pos:end="27:32"><expr pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:30"><name pos:start="27:20" pos:end="27:24">entry</name><operator pos:start="27:25" pos:end="27:26">-&gt;</operator><name pos:start="27:27" pos:end="27:30">deny</name></name></expr> ?</condition><then pos:start="27:34" pos:end="27:34"> <expr pos:start="27:34" pos:end="27:34"><literal type="number" pos:start="27:34" pos:end="27:34">0</literal></expr> </then><else pos:start="27:36" pos:end="27:38">: <expr pos:start="27:38" pos:end="27:38"><literal type="number" pos:start="27:38" pos:end="27:38">1</literal></expr></else></ternary></expr>;</return></block_content></block></if></if_stmt>

<cpp:endif pos:start="29:1" pos:end="29:6">#<cpp:directive pos:start="29:2" pos:end="29:6">endif</cpp:directive></cpp:endif>

    </block_content>}</block>



    <return pos:start="35:5" pos:end="35:36">return <expr pos:start="35:12" pos:end="35:35"><ternary pos:start="35:12" pos:end="35:35"><condition pos:start="35:12" pos:end="35:29"><expr pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:27"><name pos:start="35:12" pos:end="35:14">acl</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:27">defaultDeny</name></name></expr> ?</condition><then pos:start="35:31" pos:end="35:31"> <expr pos:start="35:31" pos:end="35:31"><literal type="number" pos:start="35:31" pos:end="35:31">0</literal></expr> </then><else pos:start="35:33" pos:end="35:35">: <expr pos:start="35:35" pos:end="35:35"><literal type="number" pos:start="35:35" pos:end="35:35">1</literal></expr></else></ternary></expr>;</return>

</block_content>}</block></function>
</unit>
