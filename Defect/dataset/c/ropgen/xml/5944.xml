<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5944.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:34"><name pos:start="1:1" pos:end="1:9">type_init</name><argument_list pos:start="1:10" pos:end="1:34">(<argument pos:start="1:11" pos:end="1:33">parallel_register_types</argument>)</argument_list></macro>



<function pos:start="5:1" pos:end="37:1"><type pos:start="5:1" pos:end="5:11"><specifier pos:start="5:1" pos:end="5:6">static</specifier> <name pos:start="5:8" pos:end="5:11">bool</name></type> <name pos:start="5:13" pos:end="5:25">parallel_init</name><parameter_list pos:start="5:26" pos:end="5:71">(<parameter pos:start="5:27" pos:end="5:37"><decl pos:start="5:27" pos:end="5:37"><type pos:start="5:27" pos:end="5:37"><name pos:start="5:27" pos:end="5:32">ISABus</name> <modifier pos:start="5:34" pos:end="5:34">*</modifier></type><name pos:start="5:35" pos:end="5:37">bus</name></decl></parameter>, <parameter pos:start="5:40" pos:end="5:48"><decl pos:start="5:40" pos:end="5:48"><type pos:start="5:40" pos:end="5:48"><name pos:start="5:40" pos:end="5:42">int</name></type> <name pos:start="5:44" pos:end="5:48">index</name></decl></parameter>, <parameter pos:start="5:51" pos:end="5:70"><decl pos:start="5:51" pos:end="5:70"><type pos:start="5:51" pos:end="5:70"><name pos:start="5:51" pos:end="5:65">CharDriverState</name> <modifier pos:start="5:67" pos:end="5:67">*</modifier></type><name pos:start="5:68" pos:end="5:70">chr</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="37:1">{<block_content pos:start="9:5" pos:end="35:16">

    <decl_stmt pos:start="9:5" pos:end="9:21"><decl pos:start="9:5" pos:end="9:20"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:15">DeviceState</name> <modifier pos:start="9:17" pos:end="9:17">*</modifier></type><name pos:start="9:18" pos:end="9:20">dev</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:22"><decl pos:start="11:5" pos:end="11:21"><type pos:start="11:5" pos:end="11:15"><name pos:start="11:5" pos:end="11:13">ISADevice</name> <modifier pos:start="11:15" pos:end="11:15">*</modifier></type><name pos:start="11:16" pos:end="11:21">isadev</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:49"><expr pos:start="15:5" pos:end="15:48"><name pos:start="15:5" pos:end="15:10">isadev</name> <operator pos:start="15:12" pos:end="15:12">=</operator> <call pos:start="15:14" pos:end="15:48"><name pos:start="15:14" pos:end="15:27">isa_try_create</name><argument_list pos:start="15:28" pos:end="15:48">(<argument pos:start="15:29" pos:end="15:31"><expr pos:start="15:29" pos:end="15:31"><name pos:start="15:29" pos:end="15:31">bus</name></expr></argument>, <argument pos:start="15:34" pos:end="15:47"><expr pos:start="15:34" pos:end="15:47"><literal type="string" pos:start="15:34" pos:end="15:47">"isa-parallel"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="17:5" pos:end="21:5"><if pos:start="17:5" pos:end="21:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:15">isadev</name></expr>)</condition> <block pos:start="17:18" pos:end="21:5">{<block_content pos:start="19:9" pos:end="19:21">

        <return pos:start="19:9" pos:end="19:21">return <expr pos:start="19:16" pos:end="19:20"><name pos:start="19:16" pos:end="19:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:25"><expr pos:start="23:5" pos:end="23:24"><name pos:start="23:5" pos:end="23:7">dev</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:24"><name pos:start="23:11" pos:end="23:16">DEVICE</name><argument_list pos:start="23:17" pos:end="23:24">(<argument pos:start="23:18" pos:end="23:23"><expr pos:start="23:18" pos:end="23:23"><name pos:start="23:18" pos:end="23:23">isadev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:46"><expr pos:start="25:5" pos:end="25:45"><call pos:start="25:5" pos:end="25:45"><name pos:start="25:5" pos:end="25:24">qdev_prop_set_uint32</name><argument_list pos:start="25:25" pos:end="25:45">(<argument pos:start="25:26" pos:end="25:28"><expr pos:start="25:26" pos:end="25:28"><name pos:start="25:26" pos:end="25:28">dev</name></expr></argument>, <argument pos:start="25:31" pos:end="25:37"><expr pos:start="25:31" pos:end="25:37"><literal type="string" pos:start="25:31" pos:end="25:37">"index"</literal></expr></argument>, <argument pos:start="25:40" pos:end="25:44"><expr pos:start="25:40" pos:end="25:44"><name pos:start="25:40" pos:end="25:44">index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:43"><expr pos:start="27:5" pos:end="27:42"><call pos:start="27:5" pos:end="27:42"><name pos:start="27:5" pos:end="27:21">qdev_prop_set_chr</name><argument_list pos:start="27:22" pos:end="27:42">(<argument pos:start="27:23" pos:end="27:25"><expr pos:start="27:23" pos:end="27:25"><name pos:start="27:23" pos:end="27:25">dev</name></expr></argument>, <argument pos:start="27:28" pos:end="27:36"><expr pos:start="27:28" pos:end="27:36"><literal type="string" pos:start="27:28" pos:end="27:36">"chardev"</literal></expr></argument>, <argument pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:41">chr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:27">(<expr pos:start="29:9" pos:end="29:26"><call pos:start="29:9" pos:end="29:22"><name pos:start="29:9" pos:end="29:17">qdev_init</name><argument_list pos:start="29:18" pos:end="29:22">(<argument pos:start="29:19" pos:end="29:21"><expr pos:start="29:19" pos:end="29:21"><name pos:start="29:19" pos:end="29:21">dev</name></expr></argument>)</argument_list></call> <operator pos:start="29:24" pos:end="29:24">&lt;</operator> <literal type="number" pos:start="29:26" pos:end="29:26">0</literal></expr>)</condition> <block pos:start="29:29" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:21">

        <return pos:start="31:9" pos:end="31:21">return <expr pos:start="31:16" pos:end="31:20"><name pos:start="31:16" pos:end="31:20">false</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <return pos:start="35:5" pos:end="35:16">return <expr pos:start="35:12" pos:end="35:15"><name pos:start="35:12" pos:end="35:15">true</name></expr>;</return>

</block_content>}</block></function>
</unit>
