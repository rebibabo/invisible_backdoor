<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11198.c" pos:tabs="8"><function pos:start="1:1" pos:end="201:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:27">ff_xface_generate_face</name><parameter_list pos:start="1:28" pos:end="1:62">(<parameter pos:start="1:29" pos:end="1:40"><decl pos:start="1:29" pos:end="1:40"><type pos:start="1:29" pos:end="1:40"><name pos:start="1:29" pos:end="1:35">uint8_t</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:40">dst</name></decl></parameter>, <parameter pos:start="1:43" pos:end="1:61"><decl pos:start="1:43" pos:end="1:61"><type pos:start="1:43" pos:end="1:61"><name pos:start="1:43" pos:end="1:49">uint8_t</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier> <specifier pos:start="1:53" pos:end="1:57">const</specifier></type> <name pos:start="1:59" pos:end="1:61">src</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="201:1">{<block_content pos:start="5:5" pos:end="199:5">

    <decl_stmt pos:start="5:5" pos:end="5:25"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">h</name></decl>, <decl pos:start="5:12" pos:end="5:12"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:12" pos:end="5:12">i</name></decl>, <decl pos:start="5:15" pos:end="5:15"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:15" pos:end="5:15">j</name></decl>, <decl pos:start="5:18" pos:end="5:18"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:18" pos:end="5:18">k</name></decl>, <decl pos:start="5:21" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:21" pos:end="5:21">l</name></decl>, <decl pos:start="5:24" pos:end="5:24"><type ref="prev" pos:start="5:5" pos:end="5:7"/><name pos:start="5:24" pos:end="5:24">m</name></decl>;</decl_stmt>



    <for pos:start="9:5" pos:end="199:5">for <control pos:start="9:9" pos:end="9:38">(<init pos:start="9:10" pos:end="9:15"><expr pos:start="9:10" pos:end="9:14"><name pos:start="9:10" pos:end="9:10">j</name> <operator pos:start="9:12" pos:end="9:12">=</operator> <literal type="number" pos:start="9:14" pos:end="9:14">0</literal></expr>;</init> <condition pos:start="9:17" pos:end="9:33"><expr pos:start="9:17" pos:end="9:32"><name pos:start="9:17" pos:end="9:17">j</name> <operator pos:start="9:19" pos:end="9:19">&lt;</operator> <name pos:start="9:21" pos:end="9:32">XFACE_HEIGHT</name></expr>;</condition> <incr pos:start="9:35" pos:end="9:37"><expr pos:start="9:35" pos:end="9:37"><name pos:start="9:35" pos:end="9:35">j</name><operator pos:start="9:36" pos:end="9:37">++</operator></expr></incr>)</control> <block pos:start="9:40" pos:end="199:5">{<block_content pos:start="11:9" pos:end="197:9">

        <for pos:start="11:9" pos:end="197:9">for <control pos:start="11:13" pos:end="11:41">(<init pos:start="11:14" pos:end="11:19"><expr pos:start="11:14" pos:end="11:18"><name pos:start="11:14" pos:end="11:14">i</name> <operator pos:start="11:16" pos:end="11:16">=</operator> <literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>;</init> <condition pos:start="11:21" pos:end="11:36"><expr pos:start="11:21" pos:end="11:35"><name pos:start="11:21" pos:end="11:21">i</name> <operator pos:start="11:23" pos:end="11:23">&lt;</operator> <name pos:start="11:25" pos:end="11:35">XFACE_WIDTH</name></expr>;</condition> <incr pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:38">i</name><operator pos:start="11:39" pos:end="11:40">++</operator></expr></incr>)</control> <block pos:start="11:43" pos:end="197:9">{<block_content pos:start="13:13" pos:end="195:13">

            <expr_stmt pos:start="13:13" pos:end="13:36"><expr pos:start="13:13" pos:end="13:35"><name pos:start="13:13" pos:end="13:13">h</name> <operator pos:start="13:15" pos:end="13:15">=</operator> <name pos:start="13:17" pos:end="13:17">i</name> <operator pos:start="13:19" pos:end="13:19">+</operator> <name pos:start="13:21" pos:end="13:21">j</name> <operator pos:start="13:23" pos:end="13:23">*</operator> <name pos:start="13:25" pos:end="13:35">XFACE_WIDTH</name></expr>;</expr_stmt>

            <expr_stmt pos:start="15:13" pos:end="15:18"><expr pos:start="15:13" pos:end="15:17"><name pos:start="15:13" pos:end="15:13">k</name> <operator pos:start="15:15" pos:end="15:15">=</operator> <literal type="number" pos:start="15:17" pos:end="15:17">0</literal></expr>;</expr_stmt>



            <comment type="block" pos:start="19:13" pos:end="57:15">/*

               Compute k, encoding the bits *before* the current one, contained in the

               image buffer. That is, given the grid:



                l      i

                |      |

                v      v

               +--+--+--+--+--+

          m -&gt; | 1| 2| 3| 4| 5|

               +--+--+--+--+--+

               | 6| 7| 8| 9|10|

               +--+--+--+--+--+

          j -&gt; |11|12| *|  |  |

               +--+--+--+--+--+



               the value k for the pixel marked as "*" will contain the bit encoding of

               the values in the matrix marked from "1" to "12". In case the pixel is

               near the border of the grid, the number of values contained within the

               grid will be lesser than 12.

             */</comment>



            <for pos:start="61:13" pos:end="120:0">for <control pos:start="61:17" pos:end="61:44">(<init pos:start="61:18" pos:end="61:27"><expr pos:start="61:18" pos:end="61:26"><name pos:start="61:18" pos:end="61:18">l</name> <operator pos:start="61:20" pos:end="61:20">=</operator> <name pos:start="61:22" pos:end="61:22">i</name> <operator pos:start="61:24" pos:end="61:24">-</operator> <literal type="number" pos:start="61:26" pos:end="61:26">2</literal></expr>;</init> <condition pos:start="61:29" pos:end="61:39"><expr pos:start="61:29" pos:end="61:38"><name pos:start="61:29" pos:end="61:29">l</name> <operator pos:start="61:31" pos:end="61:32">&lt;=</operator> <name pos:start="61:34" pos:end="61:34">i</name> <operator pos:start="61:36" pos:end="61:36">+</operator> <literal type="number" pos:start="61:38" pos:end="61:38">2</literal></expr>;</condition> <incr pos:start="61:41" pos:end="61:43"><expr pos:start="61:41" pos:end="61:43"><name pos:start="61:41" pos:end="61:41">l</name><operator pos:start="61:42" pos:end="61:43">++</operator></expr></incr>)</control> <block pos:start="61:46" pos:end="120:0">{<block_content pos:start="63:17" pos:end="73:17">

                <for pos:start="63:17" pos:end="73:17">for <control pos:start="63:21" pos:end="63:44">(<init pos:start="63:22" pos:end="63:31"><expr pos:start="63:22" pos:end="63:30"><name pos:start="63:22" pos:end="63:22">m</name> <operator pos:start="63:24" pos:end="63:24">=</operator> <name pos:start="63:26" pos:end="63:26">j</name> <operator pos:start="63:28" pos:end="63:28">-</operator> <literal type="number" pos:start="63:30" pos:end="63:30">2</literal></expr>;</init> <condition pos:start="63:33" pos:end="63:39"><expr pos:start="63:33" pos:end="63:38"><name pos:start="63:33" pos:end="63:33">m</name> <operator pos:start="63:35" pos:end="63:36">&lt;=</operator> <name pos:start="63:38" pos:end="63:38">j</name></expr>;</condition> <incr pos:start="63:41" pos:end="63:43"><expr pos:start="63:41" pos:end="63:43"><name pos:start="63:41" pos:end="63:41">m</name><operator pos:start="63:42" pos:end="63:43">++</operator></expr></incr>)</control> <block pos:start="63:46" pos:end="73:17">{<block_content pos:start="65:21" pos:end="71:59">

                    <if_stmt pos:start="65:21" pos:end="67:33"><if pos:start="65:21" pos:end="67:33">if <condition pos:start="65:24" pos:end="65:41">(<expr pos:start="65:25" pos:end="65:40"><name pos:start="65:25" pos:end="65:25">l</name> <operator pos:start="65:27" pos:end="65:28">&gt;=</operator> <name pos:start="65:30" pos:end="65:30">i</name> <operator pos:start="65:32" pos:end="65:33">&amp;&amp;</operator> <name pos:start="65:35" pos:end="65:35">m</name> <operator pos:start="65:37" pos:end="65:38">==</operator> <name pos:start="65:40" pos:end="65:40">j</name></expr>)</condition><block type="pseudo" pos:start="67:25" pos:end="67:33"><block_content pos:start="67:25" pos:end="67:33">

                        <continue pos:start="67:25" pos:end="67:33">continue;</continue></block_content></block></if></if_stmt>

                    <if_stmt pos:start="69:21" pos:end="71:59"><if pos:start="69:21" pos:end="71:59">if <condition pos:start="69:24" pos:end="69:59">(<expr pos:start="69:25" pos:end="69:58"><name pos:start="69:25" pos:end="69:25">l</name> <operator pos:start="69:27" pos:end="69:27">&gt;</operator> <literal type="number" pos:start="69:29" pos:end="69:29">0</literal> <operator pos:start="69:31" pos:end="69:32">&amp;&amp;</operator> <name pos:start="69:34" pos:end="69:34">l</name> <operator pos:start="69:36" pos:end="69:37">&lt;=</operator> <name pos:start="69:39" pos:end="69:49">XFACE_WIDTH</name> <operator pos:start="69:51" pos:end="69:52">&amp;&amp;</operator> <name pos:start="69:54" pos:end="69:54">m</name> <operator pos:start="69:56" pos:end="69:56">&gt;</operator> <literal type="number" pos:start="69:58" pos:end="69:58">0</literal></expr>)</condition><block type="pseudo" pos:start="71:25" pos:end="71:59"><block_content pos:start="71:25" pos:end="71:59">

                        <expr_stmt pos:start="71:25" pos:end="71:59"><expr pos:start="71:25" pos:end="71:58"><name pos:start="71:25" pos:end="71:25">k</name> <operator pos:start="71:27" pos:end="71:27">=</operator> <literal type="number" pos:start="71:29" pos:end="71:29">2</literal><operator pos:start="71:30" pos:end="71:30">*</operator><name pos:start="71:31" pos:end="71:31">k</name> <operator pos:start="71:33" pos:end="71:33">+</operator> <name pos:start="71:35" pos:end="71:58"><name pos:start="71:35" pos:end="71:37">src</name><index pos:start="71:38" pos:end="71:58">[<expr pos:start="71:39" pos:end="71:57"><name pos:start="71:39" pos:end="71:39">l</name> <operator pos:start="71:41" pos:end="71:41">+</operator> <name pos:start="71:43" pos:end="71:43">m</name> <operator pos:start="71:45" pos:end="71:45">*</operator> <name pos:start="71:47" pos:end="71:57">XFACE_WIDTH</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

                </block_content>}</block></for>

            </block_content>}</block></for>



            <comment type="block" pos:start="79:13" pos:end="115:14">/*

              Use the guess for the given position and the computed value of k.



              The following table shows the number of digits in k, depending on

              the position of the pixel, and shows the corresponding guess table

              to use:



                 i=1  i=2  i=3       i=w-1 i=w

               +----+----+----+ ... +----+----+

           j=1 |  0 |  1 |  2 |     |  2 |  2 |

               |g22 |g12 |g02 |     |g42 |g32 |

               +----+----+----+ ... +----+----+

           j=2 |  3 |  5 |  7 |     |  6 |  5 |

               |g21 |g11 |g01 |     |g41 |g31 |

               +----+----+----+ ... +----+----+

           j=3 |  5 |  9 | 12 |     | 10 |  8 |

               |g20 |g10 |g00 |     |g40 |g30 |

               +----+----+----+ ... +----+----+

            */</comment>



<cpp:define pos:start="119:1" pos:end="119:55">#<cpp:directive pos:start="119:2" pos:end="119:7">define</cpp:directive> <cpp:macro pos:start="119:9" pos:end="119:18"><name pos:start="119:9" pos:end="119:11">GEN</name><parameter_list pos:start="119:12" pos:end="119:18">(<parameter pos:start="119:13" pos:end="119:17"><type pos:start="119:13" pos:end="119:17"><name pos:start="119:13" pos:end="119:17">table</name></type></parameter>)</parameter_list></cpp:macro> <cpp:value pos:start="119:20" pos:end="119:55">dst[h] ^= (table[k&gt;&gt;3]&gt;&gt;(7-(k&amp;7)))&amp;1</cpp:value></cpp:define>



            <switch pos:start="123:13" pos:end="195:13">switch <condition pos:start="123:20" pos:end="123:22">(<expr pos:start="123:21" pos:end="123:21"><name pos:start="123:21" pos:end="123:21">i</name></expr>)</condition> <block pos:start="123:24" pos:end="195:13">{<block_content pos:start="125:13" pos:end="193:22">

            <case pos:start="125:13" pos:end="125:19">case <expr pos:start="125:18" pos:end="125:18"><literal type="number" pos:start="125:18" pos:end="125:18">1</literal></expr>:</case>

                <switch pos:start="127:17" pos:end="135:17">switch <condition pos:start="127:24" pos:end="127:26">(<expr pos:start="127:25" pos:end="127:25"><name pos:start="127:25" pos:end="127:25">j</name></expr>)</condition> <block pos:start="127:28" pos:end="135:17">{<block_content pos:start="129:17" pos:end="133:42">

                <case pos:start="129:17" pos:end="129:23">case <expr pos:start="129:22" pos:end="129:22"><literal type="number" pos:start="129:22" pos:end="129:22">1</literal></expr>:</case>  <expr_stmt pos:start="129:26" pos:end="129:35"><expr pos:start="129:26" pos:end="129:34"><call pos:start="129:26" pos:end="129:34"><name pos:start="129:26" pos:end="129:28">GEN</name><argument_list pos:start="129:29" pos:end="129:34">(<argument pos:start="129:30" pos:end="129:33"><expr pos:start="129:30" pos:end="129:33"><name pos:start="129:30" pos:end="129:33">g_22</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="129:37" pos:end="129:42">break;</break>

                <case pos:start="131:17" pos:end="131:23">case <expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">2</literal></expr>:</case>  <expr_stmt pos:start="131:26" pos:end="131:35"><expr pos:start="131:26" pos:end="131:34"><call pos:start="131:26" pos:end="131:34"><name pos:start="131:26" pos:end="131:28">GEN</name><argument_list pos:start="131:29" pos:end="131:34">(<argument pos:start="131:30" pos:end="131:33"><expr pos:start="131:30" pos:end="131:33"><name pos:start="131:30" pos:end="131:33">g_21</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="131:37" pos:end="131:42">break;</break>

                <default pos:start="133:17" pos:end="133:24">default:</default> <expr_stmt pos:start="133:26" pos:end="133:35"><expr pos:start="133:26" pos:end="133:34"><call pos:start="133:26" pos:end="133:34"><name pos:start="133:26" pos:end="133:28">GEN</name><argument_list pos:start="133:29" pos:end="133:34">(<argument pos:start="133:30" pos:end="133:33"><expr pos:start="133:30" pos:end="133:33"><name pos:start="133:30" pos:end="133:33">g_20</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="133:37" pos:end="133:42">break;</break>

                </block_content>}</block></switch>

                <break pos:start="137:17" pos:end="137:22">break;</break>

            <case pos:start="139:13" pos:end="139:19">case <expr pos:start="139:18" pos:end="139:18"><literal type="number" pos:start="139:18" pos:end="139:18">2</literal></expr>:</case>

                <switch pos:start="141:17" pos:end="149:17">switch <condition pos:start="141:24" pos:end="141:26">(<expr pos:start="141:25" pos:end="141:25"><name pos:start="141:25" pos:end="141:25">j</name></expr>)</condition> <block pos:start="141:28" pos:end="149:17">{<block_content pos:start="143:17" pos:end="147:42">

                <case pos:start="143:17" pos:end="143:23">case <expr pos:start="143:22" pos:end="143:22"><literal type="number" pos:start="143:22" pos:end="143:22">1</literal></expr>:</case>  <expr_stmt pos:start="143:26" pos:end="143:35"><expr pos:start="143:26" pos:end="143:34"><call pos:start="143:26" pos:end="143:34"><name pos:start="143:26" pos:end="143:28">GEN</name><argument_list pos:start="143:29" pos:end="143:34">(<argument pos:start="143:30" pos:end="143:33"><expr pos:start="143:30" pos:end="143:33"><name pos:start="143:30" pos:end="143:33">g_12</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="143:37" pos:end="143:42">break;</break>

                <case pos:start="145:17" pos:end="145:23">case <expr pos:start="145:22" pos:end="145:22"><literal type="number" pos:start="145:22" pos:end="145:22">2</literal></expr>:</case>  <expr_stmt pos:start="145:26" pos:end="145:35"><expr pos:start="145:26" pos:end="145:34"><call pos:start="145:26" pos:end="145:34"><name pos:start="145:26" pos:end="145:28">GEN</name><argument_list pos:start="145:29" pos:end="145:34">(<argument pos:start="145:30" pos:end="145:33"><expr pos:start="145:30" pos:end="145:33"><name pos:start="145:30" pos:end="145:33">g_11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="145:37" pos:end="145:42">break;</break>

                <default pos:start="147:17" pos:end="147:24">default:</default> <expr_stmt pos:start="147:26" pos:end="147:35"><expr pos:start="147:26" pos:end="147:34"><call pos:start="147:26" pos:end="147:34"><name pos:start="147:26" pos:end="147:28">GEN</name><argument_list pos:start="147:29" pos:end="147:34">(<argument pos:start="147:30" pos:end="147:33"><expr pos:start="147:30" pos:end="147:33"><name pos:start="147:30" pos:end="147:33">g_10</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="147:37" pos:end="147:42">break;</break>

                </block_content>}</block></switch>

                <break pos:start="151:17" pos:end="151:22">break;</break>

            <case pos:start="153:13" pos:end="153:33">case <expr pos:start="153:18" pos:end="153:32"><name pos:start="153:18" pos:end="153:28">XFACE_WIDTH</name> <operator pos:start="153:30" pos:end="153:30">-</operator> <literal type="number" pos:start="153:32" pos:end="153:32">1</literal></expr>:</case>

                <switch pos:start="155:17" pos:end="163:17">switch <condition pos:start="155:24" pos:end="155:26">(<expr pos:start="155:25" pos:end="155:25"><name pos:start="155:25" pos:end="155:25">j</name></expr>)</condition> <block pos:start="155:28" pos:end="163:17">{<block_content pos:start="157:17" pos:end="161:42">

                <case pos:start="157:17" pos:end="157:23">case <expr pos:start="157:22" pos:end="157:22"><literal type="number" pos:start="157:22" pos:end="157:22">1</literal></expr>:</case>  <expr_stmt pos:start="157:26" pos:end="157:35"><expr pos:start="157:26" pos:end="157:34"><call pos:start="157:26" pos:end="157:34"><name pos:start="157:26" pos:end="157:28">GEN</name><argument_list pos:start="157:29" pos:end="157:34">(<argument pos:start="157:30" pos:end="157:33"><expr pos:start="157:30" pos:end="157:33"><name pos:start="157:30" pos:end="157:33">g_42</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="157:37" pos:end="157:42">break;</break>

                <case pos:start="159:17" pos:end="159:23">case <expr pos:start="159:22" pos:end="159:22"><literal type="number" pos:start="159:22" pos:end="159:22">2</literal></expr>:</case>  <expr_stmt pos:start="159:26" pos:end="159:35"><expr pos:start="159:26" pos:end="159:34"><call pos:start="159:26" pos:end="159:34"><name pos:start="159:26" pos:end="159:28">GEN</name><argument_list pos:start="159:29" pos:end="159:34">(<argument pos:start="159:30" pos:end="159:33"><expr pos:start="159:30" pos:end="159:33"><name pos:start="159:30" pos:end="159:33">g_41</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="159:37" pos:end="159:42">break;</break>

                <default pos:start="161:17" pos:end="161:24">default:</default> <expr_stmt pos:start="161:26" pos:end="161:35"><expr pos:start="161:26" pos:end="161:34"><call pos:start="161:26" pos:end="161:34"><name pos:start="161:26" pos:end="161:28">GEN</name><argument_list pos:start="161:29" pos:end="161:34">(<argument pos:start="161:30" pos:end="161:33"><expr pos:start="161:30" pos:end="161:33"><name pos:start="161:30" pos:end="161:33">g_40</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="161:37" pos:end="161:42">break;</break>

                </block_content>}</block></switch>

                <break pos:start="165:17" pos:end="165:22">break;</break>

            <case pos:start="167:13" pos:end="167:29">case <expr pos:start="167:18" pos:end="167:28"><name pos:start="167:18" pos:end="167:28">XFACE_WIDTH</name></expr>:</case>

                <switch pos:start="169:17" pos:end="177:17">switch <condition pos:start="169:24" pos:end="169:26">(<expr pos:start="169:25" pos:end="169:25"><name pos:start="169:25" pos:end="169:25">j</name></expr>)</condition> <block pos:start="169:28" pos:end="177:17">{<block_content pos:start="171:17" pos:end="175:42">

                <case pos:start="171:17" pos:end="171:23">case <expr pos:start="171:22" pos:end="171:22"><literal type="number" pos:start="171:22" pos:end="171:22">1</literal></expr>:</case>  <expr_stmt pos:start="171:26" pos:end="171:35"><expr pos:start="171:26" pos:end="171:34"><call pos:start="171:26" pos:end="171:34"><name pos:start="171:26" pos:end="171:28">GEN</name><argument_list pos:start="171:29" pos:end="171:34">(<argument pos:start="171:30" pos:end="171:33"><expr pos:start="171:30" pos:end="171:33"><name pos:start="171:30" pos:end="171:33">g_32</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="171:37" pos:end="171:42">break;</break>

                <case pos:start="173:17" pos:end="173:23">case <expr pos:start="173:22" pos:end="173:22"><literal type="number" pos:start="173:22" pos:end="173:22">2</literal></expr>:</case>  <expr_stmt pos:start="173:26" pos:end="173:35"><expr pos:start="173:26" pos:end="173:34"><call pos:start="173:26" pos:end="173:34"><name pos:start="173:26" pos:end="173:28">GEN</name><argument_list pos:start="173:29" pos:end="173:34">(<argument pos:start="173:30" pos:end="173:33"><expr pos:start="173:30" pos:end="173:33"><name pos:start="173:30" pos:end="173:33">g_31</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="173:37" pos:end="173:42">break;</break>

                <default pos:start="175:17" pos:end="175:24">default:</default> <expr_stmt pos:start="175:26" pos:end="175:35"><expr pos:start="175:26" pos:end="175:34"><call pos:start="175:26" pos:end="175:34"><name pos:start="175:26" pos:end="175:28">GEN</name><argument_list pos:start="175:29" pos:end="175:34">(<argument pos:start="175:30" pos:end="175:33"><expr pos:start="175:30" pos:end="175:33"><name pos:start="175:30" pos:end="175:33">g_30</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="175:37" pos:end="175:42">break;</break>

                </block_content>}</block></switch>

                <break pos:start="179:17" pos:end="179:22">break;</break>

            <default pos:start="181:13" pos:end="181:20">default:</default>

                <switch pos:start="183:17" pos:end="191:17">switch <condition pos:start="183:24" pos:end="183:26">(<expr pos:start="183:25" pos:end="183:25"><name pos:start="183:25" pos:end="183:25">j</name></expr>)</condition> <block pos:start="183:28" pos:end="191:17">{<block_content pos:start="185:17" pos:end="189:42">

                <case pos:start="185:17" pos:end="185:23">case <expr pos:start="185:22" pos:end="185:22"><literal type="number" pos:start="185:22" pos:end="185:22">1</literal></expr>:</case>  <expr_stmt pos:start="185:26" pos:end="185:35"><expr pos:start="185:26" pos:end="185:34"><call pos:start="185:26" pos:end="185:34"><name pos:start="185:26" pos:end="185:28">GEN</name><argument_list pos:start="185:29" pos:end="185:34">(<argument pos:start="185:30" pos:end="185:33"><expr pos:start="185:30" pos:end="185:33"><name pos:start="185:30" pos:end="185:33">g_02</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="185:37" pos:end="185:42">break;</break>

                <case pos:start="187:17" pos:end="187:23">case <expr pos:start="187:22" pos:end="187:22"><literal type="number" pos:start="187:22" pos:end="187:22">2</literal></expr>:</case>  <expr_stmt pos:start="187:26" pos:end="187:35"><expr pos:start="187:26" pos:end="187:34"><call pos:start="187:26" pos:end="187:34"><name pos:start="187:26" pos:end="187:28">GEN</name><argument_list pos:start="187:29" pos:end="187:34">(<argument pos:start="187:30" pos:end="187:33"><expr pos:start="187:30" pos:end="187:33"><name pos:start="187:30" pos:end="187:33">g_01</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="187:37" pos:end="187:42">break;</break>

                <default pos:start="189:17" pos:end="189:24">default:</default> <expr_stmt pos:start="189:26" pos:end="189:35"><expr pos:start="189:26" pos:end="189:34"><call pos:start="189:26" pos:end="189:34"><name pos:start="189:26" pos:end="189:28">GEN</name><argument_list pos:start="189:29" pos:end="189:34">(<argument pos:start="189:30" pos:end="189:33"><expr pos:start="189:30" pos:end="189:33"><name pos:start="189:30" pos:end="189:33">g_00</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <break pos:start="189:37" pos:end="189:42">break;</break>

                </block_content>}</block></switch>

                <break pos:start="193:17" pos:end="193:22">break;</break>

            </block_content>}</block></switch>

        </block_content>}</block></for>

    </block_content>}</block></for>

</block_content>}</block></function>
</unit>
