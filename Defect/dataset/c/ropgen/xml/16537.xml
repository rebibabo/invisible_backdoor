<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16537.c" pos:tabs="8"><function pos:start="1:1" pos:end="61:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:31">l2cap_channel_close</name><parameter_list pos:start="1:32" pos:end="3:40">(<parameter pos:start="1:33" pos:end="1:62"><decl pos:start="1:33" pos:end="1:62"><type pos:start="1:33" pos:end="1:62"><name pos:start="1:33" pos:end="1:55"><name pos:start="1:33" pos:end="1:38">struct</name> <name pos:start="1:40" pos:end="1:55">l2cap_instance_s</name></name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:62">l2cap</name></decl></parameter>,

                <parameter pos:start="3:17" pos:end="3:23"><decl pos:start="3:17" pos:end="3:23"><type pos:start="3:17" pos:end="3:23"><name pos:start="3:17" pos:end="3:19">int</name></type> <name pos:start="3:21" pos:end="3:23">cid</name></decl></parameter>, <parameter pos:start="3:26" pos:end="3:39"><decl pos:start="3:26" pos:end="3:39"><type pos:start="3:26" pos:end="3:39"><name pos:start="3:26" pos:end="3:28">int</name></type> <name pos:start="3:30" pos:end="3:39">source_cid</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="61:1">{<block_content pos:start="7:5" pos:end="59:57">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23"><name pos:start="7:5" pos:end="7:10">struct</name> <name pos:start="7:12" pos:end="7:23">l2cap_chan_s</name></name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:27">ch</name> <init pos:start="7:29" pos:end="7:34">= <expr pos:start="7:31" pos:end="7:34"><name pos:start="7:31" pos:end="7:34">NULL</name></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="15:51">/* According to Volume 3, section 6.1.1, pg 1048 of BT Core V2.0, a

     * connection in CLOSED state still responds with a L2CAP_DisconnectRsp

     * message on an L2CAP_DisconnectReq event.  */</comment>

    <if_stmt pos:start="17:5" pos:end="25:5"><if pos:start="17:5" pos:end="25:5">if <condition pos:start="17:8" pos:end="17:40">(<expr pos:start="17:9" pos:end="17:39"><call pos:start="17:9" pos:end="17:39"><name pos:start="17:9" pos:end="17:16">unlikely</name><argument_list pos:start="17:17" pos:end="17:39">(<argument pos:start="17:18" pos:end="17:38"><expr pos:start="17:18" pos:end="17:38"><name pos:start="17:18" pos:end="17:20">cid</name> <operator pos:start="17:22" pos:end="17:22">&lt;</operator> <name pos:start="17:24" pos:end="17:38">L2CAP_CID_ALLOC</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="17:42" pos:end="25:5">{<block_content pos:start="19:9" pos:end="23:15">

        <expr_stmt pos:start="19:9" pos:end="21:41"><expr pos:start="19:9" pos:end="21:40"><call pos:start="19:9" pos:end="21:40"><name pos:start="19:9" pos:end="19:32">l2cap_command_reject_cid</name><argument_list pos:start="19:33" pos:end="21:40">(<argument pos:start="19:34" pos:end="19:38"><expr pos:start="19:34" pos:end="19:38"><name pos:start="19:34" pos:end="19:38">l2cap</name></expr></argument>, <argument pos:start="19:41" pos:end="19:54"><expr pos:start="19:41" pos:end="19:54"><name pos:start="19:41" pos:end="19:54"><name pos:start="19:41" pos:end="19:45">l2cap</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:54">last_id</name></name></expr></argument>, <argument pos:start="19:57" pos:end="19:75"><expr pos:start="19:57" pos:end="19:75"><name pos:start="19:57" pos:end="19:75">L2CAP_REJ_CID_INVAL</name></expr></argument>,

                        <argument pos:start="21:25" pos:end="21:27"><expr pos:start="21:25" pos:end="21:27"><name pos:start="21:25" pos:end="21:27">cid</name></expr></argument>, <argument pos:start="21:30" pos:end="21:39"><expr pos:start="21:30" pos:end="21:39"><name pos:start="21:30" pos:end="21:39">source_cid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="23:9" pos:end="23:15">return;</return>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="27:5" pos:end="29:29"><if pos:start="27:5" pos:end="29:29">if <condition pos:start="27:8" pos:end="27:62">(<expr pos:start="27:9" pos:end="27:61"><call pos:start="27:9" pos:end="27:61"><name pos:start="27:9" pos:end="27:14">likely</name><argument_list pos:start="27:15" pos:end="27:61">(<argument pos:start="27:16" pos:end="27:60"><expr pos:start="27:16" pos:end="27:60"><name pos:start="27:16" pos:end="27:18">cid</name> <operator pos:start="27:20" pos:end="27:21">&gt;=</operator> <name pos:start="27:23" pos:end="27:37">L2CAP_CID_ALLOC</name> <operator pos:start="27:39" pos:end="27:40">&amp;&amp;</operator> <name pos:start="27:42" pos:end="27:44">cid</name> <operator pos:start="27:46" pos:end="27:46">&lt;</operator> <name pos:start="27:48" pos:end="27:60">L2CAP_CID_MAX</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:29"><block_content pos:start="29:9" pos:end="29:29">

        <expr_stmt pos:start="29:9" pos:end="29:29"><expr pos:start="29:9" pos:end="29:28"><name pos:start="29:9" pos:end="29:10">ch</name> <operator pos:start="29:12" pos:end="29:12">=</operator> <name pos:start="29:14" pos:end="29:28"><name pos:start="29:14" pos:end="29:18">l2cap</name><operator pos:start="29:19" pos:end="29:20">-&gt;</operator><name pos:start="29:21" pos:end="29:23">cid</name><index pos:start="29:24" pos:end="29:28">[<expr pos:start="29:25" pos:end="29:27"><name pos:start="29:25" pos:end="29:27">cid</name></expr>]</index></name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="55:5"><if pos:start="33:5" pos:end="55:5">if <condition pos:start="33:8" pos:end="33:19">(<expr pos:start="33:9" pos:end="33:18"><call pos:start="33:9" pos:end="33:18"><name pos:start="33:9" pos:end="33:14">likely</name><argument_list pos:start="33:15" pos:end="33:18">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">ch</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="33:21" pos:end="55:5">{<block_content pos:start="35:9" pos:end="53:19">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:41">(<expr pos:start="35:13" pos:end="35:40"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:14">ch</name><operator pos:start="35:15" pos:end="35:16">-&gt;</operator><name pos:start="35:17" pos:end="35:26">remote_cid</name></name> <operator pos:start="35:28" pos:end="35:29">!=</operator> <name pos:start="35:31" pos:end="35:40">source_cid</name></expr>)</condition> <block pos:start="35:43" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:19">

            <expr_stmt pos:start="37:13" pos:end="39:74"><expr pos:start="37:13" pos:end="39:73"><call pos:start="37:13" pos:end="39:73"><name pos:start="37:13" pos:end="37:19">fprintf</name><argument_list pos:start="37:20" pos:end="39:73">(<argument pos:start="37:21" pos:end="37:26"><expr pos:start="37:21" pos:end="37:26"><name pos:start="37:21" pos:end="37:26">stderr</name></expr></argument>, <argument pos:start="37:29" pos:end="39:50"><expr pos:start="37:29" pos:end="39:50"><literal type="string" pos:start="37:29" pos:end="37:76">"%s: Ignoring a Disconnection Request with the "</literal>

                            <literal type="string" pos:start="39:29" pos:end="39:50">"invalid SCID %04x.\n"</literal></expr></argument>, <argument pos:start="39:53" pos:end="39:60"><expr pos:start="39:53" pos:end="39:60"><name pos:start="39:53" pos:end="39:60">__func__</name></expr></argument>, <argument pos:start="39:63" pos:end="39:72"><expr pos:start="39:63" pos:end="39:72"><name pos:start="39:63" pos:end="39:72">source_cid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:19">return;</return>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="47:9" pos:end="47:31"><expr pos:start="47:9" pos:end="47:30"><name pos:start="47:9" pos:end="47:23"><name pos:start="47:9" pos:end="47:13">l2cap</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:18">cid</name><index pos:start="47:19" pos:end="47:23">[<expr pos:start="47:20" pos:end="47:22"><name pos:start="47:20" pos:end="47:22">cid</name></expr>]</index></name> <operator pos:start="47:25" pos:end="47:25">=</operator> <name pos:start="47:27" pos:end="47:30">NULL</name></expr>;</expr_stmt>



        <expr_stmt pos:start="51:9" pos:end="51:44"><expr pos:start="51:9" pos:end="51:43"><call pos:start="51:9" pos:end="51:43"><name pos:start="51:9" pos:end="51:24"><name pos:start="51:9" pos:end="51:10">ch</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:18">params</name><operator pos:start="51:19" pos:end="51:19">.</operator><name pos:start="51:20" pos:end="51:24">close</name></name><argument_list pos:start="51:25" pos:end="51:43">(<argument pos:start="51:26" pos:end="51:42"><expr pos:start="51:26" pos:end="51:42"><name pos:start="51:26" pos:end="51:42"><name pos:start="51:26" pos:end="51:27">ch</name><operator pos:start="51:28" pos:end="51:29">-&gt;</operator><name pos:start="51:30" pos:end="51:35">params</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:42">opaque</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="53:9" pos:end="53:19"><expr pos:start="53:9" pos:end="53:18"><call pos:start="53:9" pos:end="53:18"><name pos:start="53:9" pos:end="53:14">g_free</name><argument_list pos:start="53:15" pos:end="53:18">(<argument pos:start="53:16" pos:end="53:17"><expr pos:start="53:16" pos:end="53:17"><name pos:start="53:16" pos:end="53:17">ch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="59:5" pos:end="59:57"><expr pos:start="59:5" pos:end="59:56"><call pos:start="59:5" pos:end="59:56"><name pos:start="59:5" pos:end="59:32">l2cap_disconnection_response</name><argument_list pos:start="59:33" pos:end="59:56">(<argument pos:start="59:34" pos:end="59:38"><expr pos:start="59:34" pos:end="59:38"><name pos:start="59:34" pos:end="59:38">l2cap</name></expr></argument>, <argument pos:start="59:41" pos:end="59:43"><expr pos:start="59:41" pos:end="59:43"><name pos:start="59:41" pos:end="59:43">cid</name></expr></argument>, <argument pos:start="59:46" pos:end="59:55"><expr pos:start="59:46" pos:end="59:55"><name pos:start="59:46" pos:end="59:55">source_cid</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
