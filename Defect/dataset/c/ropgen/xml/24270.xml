<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/24270.c" pos:tabs="8"><function pos:start="1:1" pos:end="39:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:34">mpeg4_decode_gop_header</name><parameter_list pos:start="1:35" pos:end="1:73">(<parameter pos:start="1:36" pos:end="1:53"><decl pos:start="1:36" pos:end="1:53"><type pos:start="1:36" pos:end="1:53"><name pos:start="1:36" pos:end="1:49">MpegEncContext</name> <modifier pos:start="1:51" pos:end="1:51">*</modifier></type> <name pos:start="1:53" pos:end="1:53">s</name></decl></parameter>, <parameter pos:start="1:56" pos:end="1:72"><decl pos:start="1:56" pos:end="1:72"><type pos:start="1:56" pos:end="1:72"><name pos:start="1:56" pos:end="1:68">GetBitContext</name> <modifier pos:start="1:70" pos:end="1:70">*</modifier></type><name pos:start="1:71" pos:end="1:72">gb</name></decl></parameter>)</parameter_list><block pos:start="1:74" pos:end="39:1">{<block_content pos:start="3:5" pos:end="37:13">

    <decl_stmt pos:start="3:5" pos:end="3:32"><decl pos:start="3:5" pos:end="3:13"><type pos:start="3:5" pos:end="3:7"><name pos:start="3:5" pos:end="3:7">int</name></type> <name pos:start="3:9" pos:end="3:13">hours</name></decl>, <decl pos:start="3:16" pos:end="3:22"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:16" pos:end="3:22">minutes</name></decl>, <decl pos:start="3:25" pos:end="3:31"><type ref="prev" pos:start="3:5" pos:end="3:7"/><name pos:start="3:25" pos:end="3:31">seconds</name></decl>;</decl_stmt>



    <if_stmt pos:start="7:5" pos:end="13:5"><if pos:start="7:5" pos:end="13:5">if<condition pos:start="7:7" pos:end="7:26">(<expr pos:start="7:8" pos:end="7:25"><operator pos:start="7:8" pos:end="7:8">!</operator><call pos:start="7:9" pos:end="7:25"><name pos:start="7:9" pos:end="7:17">show_bits</name><argument_list pos:start="7:18" pos:end="7:25">(<argument pos:start="7:19" pos:end="7:20"><expr pos:start="7:19" pos:end="7:20"><name pos:start="7:19" pos:end="7:20">gb</name></expr></argument>, <argument pos:start="7:23" pos:end="7:24"><expr pos:start="7:23" pos:end="7:24"><literal type="number" pos:start="7:23" pos:end="7:24">18</literal></expr></argument>)</argument_list></call></expr>)</condition><block pos:start="7:27" pos:end="13:5">{<block_content pos:start="9:9" pos:end="11:18">

        <expr_stmt pos:start="9:9" pos:end="9:65"><expr pos:start="9:9" pos:end="9:64"><call pos:start="9:9" pos:end="9:64"><name pos:start="9:9" pos:end="9:14">av_log</name><argument_list pos:start="9:15" pos:end="9:64">(<argument pos:start="9:16" pos:end="9:23"><expr pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:23"><name pos:start="9:16" pos:end="9:16">s</name><operator pos:start="9:17" pos:end="9:18">-&gt;</operator><name pos:start="9:19" pos:end="9:23">avctx</name></name></expr></argument>, <argument pos:start="9:26" pos:end="9:39"><expr pos:start="9:26" pos:end="9:39"><name pos:start="9:26" pos:end="9:39">AV_LOG_WARNING</name></expr></argument>, <argument pos:start="9:42" pos:end="9:63"><expr pos:start="9:42" pos:end="9:63"><literal type="string" pos:start="9:42" pos:end="9:63">"GOP header invalid\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="11:9" pos:end="11:18">return <expr pos:start="11:16" pos:end="11:17"><operator pos:start="11:16" pos:end="11:16">-</operator><literal type="number" pos:start="11:17" pos:end="11:17">1</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:27"><expr pos:start="17:5" pos:end="17:26"><name pos:start="17:5" pos:end="17:9">hours</name><operator pos:start="17:10" pos:end="17:10">=</operator> <call pos:start="17:12" pos:end="17:26"><name pos:start="17:12" pos:end="17:19">get_bits</name><argument_list pos:start="17:20" pos:end="17:26">(<argument pos:start="17:21" pos:end="17:22"><expr pos:start="17:21" pos:end="17:22"><name pos:start="17:21" pos:end="17:22">gb</name></expr></argument>, <argument pos:start="17:25" pos:end="17:25"><expr pos:start="17:25" pos:end="17:25"><literal type="number" pos:start="17:25" pos:end="17:25">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:29"><expr pos:start="19:5" pos:end="19:28"><name pos:start="19:5" pos:end="19:11">minutes</name><operator pos:start="19:12" pos:end="19:12">=</operator> <call pos:start="19:14" pos:end="19:28"><name pos:start="19:14" pos:end="19:21">get_bits</name><argument_list pos:start="19:22" pos:end="19:28">(<argument pos:start="19:23" pos:end="19:24"><expr pos:start="19:23" pos:end="19:24"><name pos:start="19:23" pos:end="19:24">gb</name></expr></argument>, <argument pos:start="19:27" pos:end="19:27"><expr pos:start="19:27" pos:end="19:27"><literal type="number" pos:start="19:27" pos:end="19:27">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:19"><expr pos:start="21:5" pos:end="21:18"><call pos:start="21:5" pos:end="21:18"><name pos:start="21:5" pos:end="21:14">skip_bits1</name><argument_list pos:start="21:15" pos:end="21:18">(<argument pos:start="21:16" pos:end="21:17"><expr pos:start="21:16" pos:end="21:17"><name pos:start="21:16" pos:end="21:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:29"><expr pos:start="23:5" pos:end="23:28"><name pos:start="23:5" pos:end="23:11">seconds</name><operator pos:start="23:12" pos:end="23:12">=</operator> <call pos:start="23:14" pos:end="23:28"><name pos:start="23:14" pos:end="23:21">get_bits</name><argument_list pos:start="23:22" pos:end="23:28">(<argument pos:start="23:23" pos:end="23:24"><expr pos:start="23:23" pos:end="23:24"><name pos:start="23:23" pos:end="23:24">gb</name></expr></argument>, <argument pos:start="23:27" pos:end="23:27"><expr pos:start="23:27" pos:end="23:27"><literal type="number" pos:start="23:27" pos:end="23:27">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="27:5" pos:end="27:52"><expr pos:start="27:5" pos:end="27:51"><name pos:start="27:5" pos:end="27:16"><name pos:start="27:5" pos:end="27:5">s</name><operator pos:start="27:6" pos:end="27:7">-&gt;</operator><name pos:start="27:8" pos:end="27:16">time_base</name></name><operator pos:start="27:17" pos:end="27:17">=</operator> <name pos:start="27:19" pos:end="27:25">seconds</name> <operator pos:start="27:27" pos:end="27:27">+</operator> <literal type="number" pos:start="27:29" pos:end="27:30">60</literal><operator pos:start="27:31" pos:end="27:31">*</operator><operator pos:start="27:32" pos:end="27:32">(</operator><name pos:start="27:33" pos:end="27:39">minutes</name> <operator pos:start="27:41" pos:end="27:41">+</operator> <literal type="number" pos:start="27:43" pos:end="27:44">60</literal><operator pos:start="27:45" pos:end="27:45">*</operator><name pos:start="27:46" pos:end="27:50">hours</name><operator pos:start="27:51" pos:end="27:51">)</operator></expr>;</expr_stmt>



    <expr_stmt pos:start="31:5" pos:end="31:19"><expr pos:start="31:5" pos:end="31:18"><call pos:start="31:5" pos:end="31:18"><name pos:start="31:5" pos:end="31:14">skip_bits1</name><argument_list pos:start="31:15" pos:end="31:18">(<argument pos:start="31:16" pos:end="31:17"><expr pos:start="31:16" pos:end="31:17"><name pos:start="31:16" pos:end="31:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="33:5" pos:end="33:19"><expr pos:start="33:5" pos:end="33:18"><call pos:start="33:5" pos:end="33:18"><name pos:start="33:5" pos:end="33:14">skip_bits1</name><argument_list pos:start="33:15" pos:end="33:18">(<argument pos:start="33:16" pos:end="33:17"><expr pos:start="33:16" pos:end="33:17"><name pos:start="33:16" pos:end="33:17">gb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <return pos:start="37:5" pos:end="37:13">return <expr pos:start="37:12" pos:end="37:12"><literal type="number" pos:start="37:12" pos:end="37:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
