<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/26447.c" pos:tabs="8"><function pos:start="1:1" pos:end="36:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:28">MPV_common_init_altivec</name><parameter_list pos:start="1:29" pos:end="1:47">(<parameter pos:start="1:30" pos:end="1:46"><decl pos:start="1:30" pos:end="1:46"><type pos:start="1:30" pos:end="1:45"><name pos:start="1:30" pos:end="1:43">MpegEncContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:46">s</name></decl></parameter>)</parameter_list>
<block pos:start="2:1" pos:end="36:1">{<block_content pos:start="3:5" pos:end="35:5">
    <if_stmt pos:start="3:5" pos:end="12:5"><if pos:start="3:5" pos:end="12:5">if <condition pos:start="3:8" pos:end="3:28">(<expr pos:start="3:9" pos:end="3:27"><name pos:start="3:9" pos:end="3:24"><name pos:start="3:9" pos:end="3:9">s</name><operator pos:start="3:10" pos:end="3:11">-&gt;</operator><name pos:start="3:12" pos:end="3:16">avctx</name><operator pos:start="3:17" pos:end="3:18">-&gt;</operator><name pos:start="3:19" pos:end="3:24">lowres</name></name><operator pos:start="3:25" pos:end="3:26">==</operator><literal type="number" pos:start="3:27" pos:end="3:27">0</literal></expr>)</condition>
    <block pos:start="4:5" pos:end="12:5">{<block_content pos:start="5:9" pos:end="11:9">
        <if_stmt pos:start="5:9" pos:end="11:9"><if pos:start="5:9" pos:end="11:9">if <condition pos:start="5:12" pos:end="6:57">(<expr pos:start="5:13" pos:end="6:56"><operator pos:start="5:13" pos:end="5:13">(</operator><name pos:start="5:14" pos:end="5:32"><name pos:start="5:14" pos:end="5:14">s</name><operator pos:start="5:15" pos:end="5:16">-&gt;</operator><name pos:start="5:17" pos:end="5:21">avctx</name><operator pos:start="5:22" pos:end="5:23">-&gt;</operator><name pos:start="5:24" pos:end="5:32">idct_algo</name></name> <operator pos:start="5:34" pos:end="5:35">==</operator> <name pos:start="5:37" pos:end="5:48">FF_IDCT_AUTO</name><operator pos:start="5:49" pos:end="5:49">)</operator> <operator pos:start="5:51" pos:end="5:52">||</operator>
                <operator pos:start="6:17" pos:end="6:17">(</operator><name pos:start="6:18" pos:end="6:36"><name pos:start="6:18" pos:end="6:18">s</name><operator pos:start="6:19" pos:end="6:20">-&gt;</operator><name pos:start="6:21" pos:end="6:25">avctx</name><operator pos:start="6:26" pos:end="6:27">-&gt;</operator><name pos:start="6:28" pos:end="6:36">idct_algo</name></name> <operator pos:start="6:38" pos:end="6:39">==</operator> <name pos:start="6:41" pos:end="6:55">FF_IDCT_ALTIVEC</name><operator pos:start="6:56" pos:end="6:56">)</operator></expr>)</condition>
        <block pos:start="7:9" pos:end="11:9">{<block_content pos:start="8:13" pos:end="10:66">
            <expr_stmt pos:start="8:13" pos:end="8:47"><expr pos:start="8:13" pos:end="8:46"><name pos:start="8:13" pos:end="8:27"><name pos:start="8:13" pos:end="8:13">s</name><operator pos:start="8:14" pos:end="8:15">-&gt;</operator><name pos:start="8:16" pos:end="8:18">dsp</name><operator pos:start="8:19" pos:end="8:19">.</operator><name pos:start="8:20" pos:end="8:27">idct_put</name></name> <operator pos:start="8:29" pos:end="8:29">=</operator> <name pos:start="8:31" pos:end="8:46">idct_put_altivec</name></expr>;</expr_stmt>
            <expr_stmt pos:start="9:13" pos:end="9:47"><expr pos:start="9:13" pos:end="9:46"><name pos:start="9:13" pos:end="9:27"><name pos:start="9:13" pos:end="9:13">s</name><operator pos:start="9:14" pos:end="9:15">-&gt;</operator><name pos:start="9:16" pos:end="9:18">dsp</name><operator pos:start="9:19" pos:end="9:19">.</operator><name pos:start="9:20" pos:end="9:27">idct_add</name></name> <operator pos:start="9:29" pos:end="9:29">=</operator> <name pos:start="9:31" pos:end="9:46">idct_add_altivec</name></expr>;</expr_stmt>
            <expr_stmt pos:start="10:13" pos:end="10:66"><expr pos:start="10:13" pos:end="10:65"><name pos:start="10:13" pos:end="10:40"><name pos:start="10:13" pos:end="10:13">s</name><operator pos:start="10:14" pos:end="10:15">-&gt;</operator><name pos:start="10:16" pos:end="10:18">dsp</name><operator pos:start="10:19" pos:end="10:19">.</operator><name pos:start="10:20" pos:end="10:40">idct_permutation_type</name></name> <operator pos:start="10:42" pos:end="10:42">=</operator> <name pos:start="10:44" pos:end="10:65">FF_TRANSPOSE_IDCT_PERM</name></expr>;</expr_stmt>
        </block_content>}</block></if></if_stmt>
    </block_content>}</block></if></if_stmt>
    <comment type="line" pos:start="13:5" pos:end="13:66">// Test to make sure that the dct required alignments are met.</comment>
    <if_stmt pos:start="14:5" pos:end="20:5"><if pos:start="14:5" pos:end="20:5">if <condition pos:start="14:8" pos:end="15:50">(<expr pos:start="14:9" pos:end="15:49"><operator pos:start="14:9" pos:end="14:9">(</operator><operator pos:start="14:10" pos:end="14:10">(</operator><operator pos:start="14:11" pos:end="14:11">(</operator><name pos:start="14:12" pos:end="14:15">long</name><operator pos:start="14:16" pos:end="14:16">)</operator><operator pos:start="14:17" pos:end="14:17">(</operator><name pos:start="14:18" pos:end="14:34"><name pos:start="14:18" pos:end="14:18">s</name><operator pos:start="14:19" pos:end="14:20">-&gt;</operator><name pos:start="14:21" pos:end="14:34">q_intra_matrix</name></name><operator pos:start="14:35" pos:end="14:35">)</operator> <operator pos:start="14:37" pos:end="14:37">&amp;</operator> <literal type="number" pos:start="14:39" pos:end="14:42">0x0f</literal><operator pos:start="14:43" pos:end="14:43">)</operator> <operator pos:start="14:45" pos:end="14:46">!=</operator> <literal type="number" pos:start="14:48" pos:end="14:48">0</literal><operator pos:start="14:49" pos:end="14:49">)</operator> <operator pos:start="14:51" pos:end="14:52">||</operator>
        <operator pos:start="15:9" pos:end="15:9">(</operator><operator pos:start="15:10" pos:end="15:10">(</operator><operator pos:start="15:11" pos:end="15:11">(</operator><name pos:start="15:12" pos:end="15:15">long</name><operator pos:start="15:16" pos:end="15:16">)</operator><operator pos:start="15:17" pos:end="15:17">(</operator><name pos:start="15:18" pos:end="15:34"><name pos:start="15:18" pos:end="15:18">s</name><operator pos:start="15:19" pos:end="15:20">-&gt;</operator><name pos:start="15:21" pos:end="15:34">q_inter_matrix</name></name><operator pos:start="15:35" pos:end="15:35">)</operator> <operator pos:start="15:37" pos:end="15:37">&amp;</operator> <literal type="number" pos:start="15:39" pos:end="15:42">0x0f</literal><operator pos:start="15:43" pos:end="15:43">)</operator> <operator pos:start="15:45" pos:end="15:46">!=</operator> <literal type="number" pos:start="15:48" pos:end="15:48">0</literal><operator pos:start="15:49" pos:end="15:49">)</operator></expr>)</condition>
    <block pos:start="16:5" pos:end="20:5">{<block_content pos:start="17:9" pos:end="19:15">
        <expr_stmt pos:start="17:9" pos:end="18:75"><expr pos:start="17:9" pos:end="18:74"><call pos:start="17:9" pos:end="18:74"><name pos:start="17:9" pos:end="17:14">av_log</name><argument_list pos:start="17:15" pos:end="18:74">(<argument pos:start="17:16" pos:end="17:23"><expr pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:23"><name pos:start="17:16" pos:end="17:16">s</name><operator pos:start="17:17" pos:end="17:18">-&gt;</operator><name pos:start="17:19" pos:end="17:23">avctx</name></name></expr></argument>, <argument pos:start="17:26" pos:end="17:36"><expr pos:start="17:26" pos:end="17:36"><name pos:start="17:26" pos:end="17:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="17:39" pos:end="18:73"><expr pos:start="17:39" pos:end="18:73"><literal type="string" pos:start="17:39" pos:end="17:96">"Internal Error: q-matrix blocks must be 16-byte aligned "</literal>
                <literal type="string" pos:start="18:17" pos:end="18:73">"to use AltiVec DCT. Reverting to non-AltiVec version.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="19:9" pos:end="19:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="21:5" pos:end="26:5"><if pos:start="21:5" pos:end="26:5">if <condition pos:start="21:8" pos:end="21:57">(<expr pos:start="21:9" pos:end="21:56"><operator pos:start="21:9" pos:end="21:9">(</operator><operator pos:start="21:10" pos:end="21:10">(</operator><name pos:start="21:11" pos:end="21:14">long</name><operator pos:start="21:15" pos:end="21:15">)</operator><operator pos:start="21:16" pos:end="21:16">(</operator><name pos:start="21:17" pos:end="21:42"><name pos:start="21:17" pos:end="21:17">s</name><operator pos:start="21:18" pos:end="21:19">-&gt;</operator><name pos:start="21:20" pos:end="21:34">intra_scantable</name><operator pos:start="21:35" pos:end="21:35">.</operator><name pos:start="21:36" pos:end="21:42">inverse</name></name><operator pos:start="21:43" pos:end="21:43">)</operator> <operator pos:start="21:45" pos:end="21:45">&amp;</operator> <literal type="number" pos:start="21:47" pos:end="21:50">0x0f</literal><operator pos:start="21:51" pos:end="21:51">)</operator> <operator pos:start="21:53" pos:end="21:54">!=</operator> <literal type="number" pos:start="21:56" pos:end="21:56">0</literal></expr>)</condition>
    <block pos:start="22:5" pos:end="26:5">{<block_content pos:start="23:9" pos:end="25:15">
        <expr_stmt pos:start="23:9" pos:end="24:75"><expr pos:start="23:9" pos:end="24:74"><call pos:start="23:9" pos:end="24:74"><name pos:start="23:9" pos:end="23:14">av_log</name><argument_list pos:start="23:15" pos:end="24:74">(<argument pos:start="23:16" pos:end="23:23"><expr pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:23"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:23">avctx</name></name></expr></argument>, <argument pos:start="23:26" pos:end="23:36"><expr pos:start="23:26" pos:end="23:36"><name pos:start="23:26" pos:end="23:36">AV_LOG_INFO</name></expr></argument>, <argument pos:start="23:39" pos:end="24:73"><expr pos:start="23:39" pos:end="24:73"><literal type="string" pos:start="23:39" pos:end="23:98">"Internal Error: scan table blocks must be 16-byte aligned "</literal>
                <literal type="string" pos:start="24:17" pos:end="24:73">"to use AltiVec DCT. Reverting to non-AltiVec version.\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>
        <return pos:start="25:9" pos:end="25:15">return;</return>
    </block_content>}</block></if></if_stmt>
    <if_stmt pos:start="27:5" pos:end="35:5"><if pos:start="27:5" pos:end="35:5">if <condition pos:start="27:8" pos:end="28:51">(<expr pos:start="27:9" pos:end="28:50"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:27"><name pos:start="27:10" pos:end="27:10">s</name><operator pos:start="27:11" pos:end="27:12">-&gt;</operator><name pos:start="27:13" pos:end="27:17">avctx</name><operator pos:start="27:18" pos:end="27:19">-&gt;</operator><name pos:start="27:20" pos:end="27:27">dct_algo</name></name> <operator pos:start="27:29" pos:end="27:30">==</operator> <name pos:start="27:32" pos:end="27:42">FF_DCT_AUTO</name><operator pos:start="27:43" pos:end="27:43">)</operator> <operator pos:start="27:45" pos:end="27:46">||</operator>
            <operator pos:start="28:13" pos:end="28:13">(</operator><name pos:start="28:14" pos:end="28:31"><name pos:start="28:14" pos:end="28:14">s</name><operator pos:start="28:15" pos:end="28:16">-&gt;</operator><name pos:start="28:17" pos:end="28:21">avctx</name><operator pos:start="28:22" pos:end="28:23">-&gt;</operator><name pos:start="28:24" pos:end="28:31">dct_algo</name></name> <operator pos:start="28:33" pos:end="28:34">==</operator> <name pos:start="28:36" pos:end="28:49">FF_DCT_ALTIVEC</name><operator pos:start="28:50" pos:end="28:50">)</operator></expr>)</condition>
    <block pos:start="29:5" pos:end="35:5">{<block_content pos:start="33:9" pos:end="34:67">
<cpp:if pos:start="30:1" pos:end="30:5">#<cpp:directive pos:start="30:2" pos:end="30:3">if</cpp:directive> <expr pos:start="30:5" pos:end="30:5"><literal type="number" pos:start="30:5" pos:end="30:5">0</literal></expr></cpp:if> <comment type="block" pos:start="30:7" pos:end="30:59">/* seems to cause trouble under some circumstances */</comment>
        s-&gt;dct_quantize = dct_quantize_altivec;
<cpp:endif pos:start="32:1" pos:end="32:6">#<cpp:directive pos:start="32:2" pos:end="32:6">endif</cpp:directive></cpp:endif>
        <expr_stmt pos:start="33:9" pos:end="33:67"><expr pos:start="33:9" pos:end="33:66"><name pos:start="33:9" pos:end="33:36"><name pos:start="33:9" pos:end="33:9">s</name><operator pos:start="33:10" pos:end="33:11">-&gt;</operator><name pos:start="33:12" pos:end="33:36">dct_unquantize_h263_intra</name></name> <operator pos:start="33:38" pos:end="33:38">=</operator> <name pos:start="33:40" pos:end="33:66">dct_unquantize_h263_altivec</name></expr>;</expr_stmt>
        <expr_stmt pos:start="34:9" pos:end="34:67"><expr pos:start="34:9" pos:end="34:66"><name pos:start="34:9" pos:end="34:36"><name pos:start="34:9" pos:end="34:9">s</name><operator pos:start="34:10" pos:end="34:11">-&gt;</operator><name pos:start="34:12" pos:end="34:36">dct_unquantize_h263_inter</name></name> <operator pos:start="34:38" pos:end="34:38">=</operator> <name pos:start="34:40" pos:end="34:66">dct_unquantize_h263_altivec</name></expr>;</expr_stmt>
    </block_content>}</block></if></if_stmt>
</block_content>}</block></function></unit>
