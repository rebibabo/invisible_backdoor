<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14949.c" pos:tabs="8"><function pos:start="1:1" pos:end="47:1"><type pos:start="1:1" pos:end="1:13"><name pos:start="1:1" pos:end="1:8">unsigned</name> <name pos:start="1:10" pos:end="1:13">long</name></type> <name pos:start="1:15" pos:end="1:31">av_adler32_update</name><parameter_list pos:start="1:32" pos:end="3:49">(<parameter pos:start="1:33" pos:end="1:51"><decl pos:start="1:33" pos:end="1:51"><type pos:start="1:33" pos:end="1:51"><name pos:start="1:33" pos:end="1:40">unsigned</name> <name pos:start="1:42" pos:end="1:45">long</name></type> <name pos:start="1:47" pos:end="1:51">adler</name></decl></parameter>, <parameter pos:start="1:54" pos:end="1:72"><decl pos:start="1:54" pos:end="1:72"><type pos:start="1:54" pos:end="1:72"><specifier pos:start="1:54" pos:end="1:58">const</specifier> <name pos:start="1:60" pos:end="1:66">uint8_t</name> <modifier pos:start="1:68" pos:end="1:68">*</modifier></type> <name pos:start="1:70" pos:end="1:72">buf</name></decl></parameter>,

                                <parameter pos:start="3:33" pos:end="3:48"><decl pos:start="3:33" pos:end="3:48"><type pos:start="3:33" pos:end="3:48"><name pos:start="3:33" pos:end="3:40">unsigned</name> <name pos:start="3:42" pos:end="3:44">int</name></type> <name pos:start="3:46" pos:end="3:48">len</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="47:1">{<block_content pos:start="7:5" pos:end="45:27">

    <decl_stmt pos:start="7:5" pos:end="7:38"><decl pos:start="7:5" pos:end="7:37"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:12">unsigned</name> <name pos:start="7:14" pos:end="7:17">long</name></type> <name pos:start="7:19" pos:end="7:20">s1</name> <init pos:start="7:22" pos:end="7:37">= <expr pos:start="7:24" pos:end="7:37"><name pos:start="7:24" pos:end="7:28">adler</name> <operator pos:start="7:30" pos:end="7:30">&amp;</operator> <literal type="number" pos:start="7:32" pos:end="7:37">0xffff</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:35"><decl pos:start="9:5" pos:end="9:34"><type pos:start="9:5" pos:end="9:17"><name pos:start="9:5" pos:end="9:12">unsigned</name> <name pos:start="9:14" pos:end="9:17">long</name></type> <name pos:start="9:19" pos:end="9:20">s2</name> <init pos:start="9:22" pos:end="9:34">= <expr pos:start="9:24" pos:end="9:34"><name pos:start="9:24" pos:end="9:28">adler</name> <operator pos:start="9:30" pos:end="9:31">&gt;&gt;</operator> <literal type="number" pos:start="9:33" pos:end="9:34">16</literal></expr></init></decl>;</decl_stmt>



    <while pos:start="13:5" pos:end="43:5">while <condition pos:start="13:11" pos:end="13:19">(<expr pos:start="13:12" pos:end="13:18"><name pos:start="13:12" pos:end="13:14">len</name> <operator pos:start="13:16" pos:end="13:16">&gt;</operator> <literal type="number" pos:start="13:18" pos:end="13:18">0</literal></expr>)</condition> <block pos:start="13:21" pos:end="43:5">{<block_content pos:start="17:9" pos:end="41:19">

<cpp:if pos:start="15:1" pos:end="15:16">#<cpp:directive pos:start="15:2" pos:end="15:3">if</cpp:directive> <expr pos:start="15:5" pos:end="15:16"><name pos:start="15:5" pos:end="15:16">CONFIG_SMALL</name></expr></cpp:if>

        <while pos:start="17:9" pos:end="26:0">while <condition pos:start="17:15" pos:end="17:43">(<expr pos:start="17:16" pos:end="17:42"><name pos:start="17:16" pos:end="17:18">len</name> <operator pos:start="17:20" pos:end="17:20">&gt;</operator> <literal type="number" pos:start="17:22" pos:end="17:22">4</literal>  <operator pos:start="17:25" pos:end="17:26">&amp;&amp;</operator> <name pos:start="17:28" pos:end="17:29">s2</name> <operator pos:start="17:31" pos:end="17:31">&lt;</operator> <operator pos:start="17:33" pos:end="17:33">(</operator><literal type="number" pos:start="17:34" pos:end="17:35">1U</literal> <operator pos:start="17:37" pos:end="17:38">&lt;&lt;</operator> <literal type="number" pos:start="17:40" pos:end="17:41">31</literal><operator pos:start="17:42" pos:end="17:42">)</operator></expr>)</condition> <block pos:start="17:45" pos:end="26:0">{<block_content pos:start="19:13" pos:end="21:21">

            <expr_stmt pos:start="19:13" pos:end="19:21"><expr pos:start="19:13" pos:end="19:20"><call pos:start="19:13" pos:end="19:20"><name pos:start="19:13" pos:end="19:15">DO4</name><argument_list pos:start="19:16" pos:end="19:20">(<argument pos:start="19:17" pos:end="19:19"><expr pos:start="19:17" pos:end="19:19"><name pos:start="19:17" pos:end="19:19">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="21:13" pos:end="21:21"><expr pos:start="21:13" pos:end="21:20"><name pos:start="21:13" pos:end="21:15">len</name> <operator pos:start="21:17" pos:end="21:18">-=</operator> <literal type="number" pos:start="21:20" pos:end="21:20">4</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

<cpp:else pos:start="25:1" pos:end="25:5">#<cpp:directive pos:start="25:2" pos:end="25:5">else</cpp:directive></cpp:else>

        <while pos:start="27:9" pos:end="36:0">while <condition pos:start="27:15" pos:end="27:43">(<expr pos:start="27:16" pos:end="27:42"><name pos:start="27:16" pos:end="27:18">len</name> <operator pos:start="27:20" pos:end="27:20">&gt;</operator> <literal type="number" pos:start="27:22" pos:end="27:23">16</literal> <operator pos:start="27:25" pos:end="27:26">&amp;&amp;</operator> <name pos:start="27:28" pos:end="27:29">s2</name> <operator pos:start="27:31" pos:end="27:31">&lt;</operator> <operator pos:start="27:33" pos:end="27:33">(</operator><literal type="number" pos:start="27:34" pos:end="27:35">1U</literal> <operator pos:start="27:37" pos:end="27:38">&lt;&lt;</operator> <literal type="number" pos:start="27:40" pos:end="27:41">31</literal><operator pos:start="27:42" pos:end="27:42">)</operator></expr>)</condition> <block pos:start="27:45" pos:end="36:0">{<block_content pos:start="29:13" pos:end="31:22">

            <expr_stmt pos:start="29:13" pos:end="29:22"><expr pos:start="29:13" pos:end="29:21"><call pos:start="29:13" pos:end="29:21"><name pos:start="29:13" pos:end="29:16">DO16</name><argument_list pos:start="29:17" pos:end="29:21">(<argument pos:start="29:18" pos:end="29:20"><expr pos:start="29:18" pos:end="29:20"><name pos:start="29:18" pos:end="29:20">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:22"><expr pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:15">len</name> <operator pos:start="31:17" pos:end="31:18">-=</operator> <literal type="number" pos:start="31:20" pos:end="31:21">16</literal></expr>;</expr_stmt>

        </block_content>}</block></while>

<cpp:endif pos:start="35:1" pos:end="35:6">#<cpp:directive pos:start="35:2" pos:end="35:6">endif</cpp:directive></cpp:endif>

        <expr_stmt pos:start="37:9" pos:end="37:17"><expr pos:start="37:9" pos:end="37:16"><call pos:start="37:9" pos:end="37:16"><name pos:start="37:9" pos:end="37:11">DO1</name><argument_list pos:start="37:12" pos:end="37:16">(<argument pos:start="37:13" pos:end="37:15"><expr pos:start="37:13" pos:end="37:15"><name pos:start="37:13" pos:end="37:15">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt> <expr_stmt pos:start="37:19" pos:end="37:24"><expr pos:start="37:19" pos:end="37:23"><name pos:start="37:19" pos:end="37:21">len</name><operator pos:start="37:22" pos:end="37:23">--</operator></expr>;</expr_stmt>

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><name pos:start="39:9" pos:end="39:10">s1</name> <operator pos:start="39:12" pos:end="39:13">%=</operator> <name pos:start="39:15" pos:end="39:18">BASE</name></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><name pos:start="41:9" pos:end="41:10">s2</name> <operator pos:start="41:12" pos:end="41:13">%=</operator> <name pos:start="41:15" pos:end="41:18">BASE</name></expr>;</expr_stmt>

    </block_content>}</block></while>

    <return pos:start="45:5" pos:end="45:27">return <expr pos:start="45:12" pos:end="45:26"><operator pos:start="45:12" pos:end="45:12">(</operator><name pos:start="45:13" pos:end="45:14">s2</name> <operator pos:start="45:16" pos:end="45:17">&lt;&lt;</operator> <literal type="number" pos:start="45:19" pos:end="45:20">16</literal><operator pos:start="45:21" pos:end="45:21">)</operator> <operator pos:start="45:23" pos:end="45:23">|</operator> <name pos:start="45:25" pos:end="45:26">s1</name></expr>;</return>

</block_content>}</block></function>
</unit>
