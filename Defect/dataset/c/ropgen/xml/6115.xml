<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6115.c" pos:tabs="8"><function pos:start="1:1" pos:end="247:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:18">bdrv_file_open</name><parameter_list pos:start="1:19" pos:end="5:32">(<parameter pos:start="1:20" pos:end="1:41"><decl pos:start="1:20" pos:end="1:41"><type pos:start="1:20" pos:end="1:41"><name pos:start="1:20" pos:end="1:35">BlockDriverState</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier><modifier pos:start="1:38" pos:end="1:38">*</modifier></type><name pos:start="1:39" pos:end="1:41">pbs</name></decl></parameter>, <parameter pos:start="1:44" pos:end="1:63"><decl pos:start="1:44" pos:end="1:63"><type pos:start="1:44" pos:end="1:63"><specifier pos:start="1:44" pos:end="1:48">const</specifier> <name pos:start="1:50" pos:end="1:53">char</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier></type><name pos:start="1:56" pos:end="1:63">filename</name></decl></parameter>,

                   <parameter pos:start="3:20" pos:end="3:40"><decl pos:start="3:20" pos:end="3:40"><type pos:start="3:20" pos:end="3:40"><specifier pos:start="3:20" pos:end="3:24">const</specifier> <name pos:start="3:26" pos:end="3:29">char</name> <modifier pos:start="3:31" pos:end="3:31">*</modifier></type><name pos:start="3:32" pos:end="3:40">reference</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:56"><decl pos:start="3:43" pos:end="3:56"><type pos:start="3:43" pos:end="3:56"><name pos:start="3:43" pos:end="3:47">QDict</name> <modifier pos:start="3:49" pos:end="3:49">*</modifier></type><name pos:start="3:50" pos:end="3:56">options</name></decl></parameter>, <parameter pos:start="3:59" pos:end="3:67"><decl pos:start="3:59" pos:end="3:67"><type pos:start="3:59" pos:end="3:67"><name pos:start="3:59" pos:end="3:61">int</name></type> <name pos:start="3:63" pos:end="3:67">flags</name></decl></parameter>,

                   <parameter pos:start="5:20" pos:end="5:31"><decl pos:start="5:20" pos:end="5:31"><type pos:start="5:20" pos:end="5:31"><name pos:start="5:20" pos:end="5:24">Error</name> <modifier pos:start="5:26" pos:end="5:26">*</modifier><modifier pos:start="5:27" pos:end="5:27">*</modifier></type><name pos:start="5:28" pos:end="5:31">errp</name></decl></parameter>)</parameter_list>

<block pos:start="7:1" pos:end="247:1">{<block_content pos:start="9:5" pos:end="245:15">

    <decl_stmt pos:start="9:5" pos:end="9:32"><decl pos:start="9:5" pos:end="9:31"><type pos:start="9:5" pos:end="9:22"><name pos:start="9:5" pos:end="9:20">BlockDriverState</name> <modifier pos:start="9:22" pos:end="9:22">*</modifier></type><name pos:start="9:23" pos:end="9:24">bs</name> <init pos:start="9:26" pos:end="9:31">= <expr pos:start="9:28" pos:end="9:31"><name pos:start="9:28" pos:end="9:31">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:21"><decl pos:start="11:5" pos:end="11:20"><type pos:start="11:5" pos:end="11:17"><name pos:start="11:5" pos:end="11:15">BlockDriver</name> <modifier pos:start="11:17" pos:end="11:17">*</modifier></type><name pos:start="11:18" pos:end="11:20">drv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:24"><decl pos:start="13:5" pos:end="13:23"><type pos:start="13:5" pos:end="13:16"><specifier pos:start="13:5" pos:end="13:9">const</specifier> <name pos:start="13:11" pos:end="13:14">char</name> <modifier pos:start="13:16" pos:end="13:16">*</modifier></type><name pos:start="13:17" pos:end="13:23">drvname</name></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:39"><decl pos:start="15:5" pos:end="15:38"><type pos:start="15:5" pos:end="15:8"><name pos:start="15:5" pos:end="15:8">bool</name></type> <name pos:start="15:10" pos:end="15:30">allow_protocol_prefix</name> <init pos:start="15:32" pos:end="15:38">= <expr pos:start="15:34" pos:end="15:38"><name pos:start="15:34" pos:end="15:38">false</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:28"><decl pos:start="17:5" pos:end="17:27"><type pos:start="17:5" pos:end="17:11"><name pos:start="17:5" pos:end="17:9">Error</name> <modifier pos:start="17:11" pos:end="17:11">*</modifier></type><name pos:start="17:12" pos:end="17:20">local_err</name> <init pos:start="17:22" pos:end="17:27">= <expr pos:start="17:24" pos:end="17:27"><name pos:start="17:24" pos:end="17:27">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:12"><decl pos:start="19:5" pos:end="19:11"><type pos:start="19:5" pos:end="19:7"><name pos:start="19:5" pos:end="19:7">int</name></type> <name pos:start="19:9" pos:end="19:11">ret</name></decl>;</decl_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:44">/* NULL means an empty set of options */</comment>

    <if_stmt pos:start="25:5" pos:end="29:5"><if pos:start="25:5" pos:end="29:5">if <condition pos:start="25:8" pos:end="25:24">(<expr pos:start="25:9" pos:end="25:23"><name pos:start="25:9" pos:end="25:15">options</name> <operator pos:start="25:17" pos:end="25:18">==</operator> <name pos:start="25:20" pos:end="25:23">NULL</name></expr>)</condition> <block pos:start="25:26" pos:end="29:5">{<block_content pos:start="27:9" pos:end="27:30">

        <expr_stmt pos:start="27:9" pos:end="27:30"><expr pos:start="27:9" pos:end="27:29"><name pos:start="27:9" pos:end="27:15">options</name> <operator pos:start="27:17" pos:end="27:17">=</operator> <call pos:start="27:19" pos:end="27:29"><name pos:start="27:19" pos:end="27:27">qdict_new</name><argument_list pos:start="27:28" pos:end="27:29">()</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="33:5" pos:end="65:5"><if pos:start="33:5" pos:end="65:5">if <condition pos:start="33:8" pos:end="33:18">(<expr pos:start="33:9" pos:end="33:17"><name pos:start="33:9" pos:end="33:17">reference</name></expr>)</condition> <block pos:start="33:20" pos:end="65:5">{<block_content pos:start="35:9" pos:end="63:17">

        <if_stmt pos:start="35:9" pos:end="43:9"><if pos:start="35:9" pos:end="43:9">if <condition pos:start="35:12" pos:end="35:44">(<expr pos:start="35:13" pos:end="35:43"><name pos:start="35:13" pos:end="35:20">filename</name> <operator pos:start="35:22" pos:end="35:23">||</operator> <call pos:start="35:25" pos:end="35:43"><name pos:start="35:25" pos:end="35:34">qdict_size</name><argument_list pos:start="35:35" pos:end="35:43">(<argument pos:start="35:36" pos:end="35:42"><expr pos:start="35:36" pos:end="35:42"><name pos:start="35:36" pos:end="35:42">options</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="35:46" pos:end="43:9">{<block_content pos:start="37:13" pos:end="41:27">

            <expr_stmt pos:start="37:13" pos:end="39:63"><expr pos:start="37:13" pos:end="39:62"><call pos:start="37:13" pos:end="39:62"><name pos:start="37:13" pos:end="37:22">error_setg</name><argument_list pos:start="37:23" pos:end="39:62">(<argument pos:start="37:24" pos:end="37:27"><expr pos:start="37:24" pos:end="37:27"><name pos:start="37:24" pos:end="37:27">errp</name></expr></argument>, <argument pos:start="37:30" pos:end="39:61"><expr pos:start="37:30" pos:end="39:61"><literal type="string" pos:start="37:30" pos:end="37:78">"Cannot reference an existing block device with "</literal>

                       <literal type="string" pos:start="39:24" pos:end="39:61">"additional options or a new filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="41:13" pos:end="41:27">return <expr pos:start="41:20" pos:end="41:26"><operator pos:start="41:20" pos:end="41:20">-</operator><name pos:start="41:21" pos:end="41:26">EINVAL</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="45:9" pos:end="45:25"><expr pos:start="45:9" pos:end="45:24"><call pos:start="45:9" pos:end="45:24"><name pos:start="45:9" pos:end="45:15">QDECREF</name><argument_list pos:start="45:16" pos:end="45:24">(<argument pos:start="45:17" pos:end="45:23"><expr pos:start="45:17" pos:end="45:23"><name pos:start="45:17" pos:end="45:23">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:34"><expr pos:start="49:9" pos:end="49:33"><name pos:start="49:9" pos:end="49:10">bs</name> <operator pos:start="49:12" pos:end="49:12">=</operator> <call pos:start="49:14" pos:end="49:33"><name pos:start="49:14" pos:end="49:22">bdrv_find</name><argument_list pos:start="49:23" pos:end="49:33">(<argument pos:start="49:24" pos:end="49:32"><expr pos:start="49:24" pos:end="49:32"><name pos:start="49:24" pos:end="49:32">reference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="57:9"><if pos:start="51:9" pos:end="57:9">if <condition pos:start="51:12" pos:end="51:16">(<expr pos:start="51:13" pos:end="51:15"><operator pos:start="51:13" pos:end="51:13">!</operator><name pos:start="51:14" pos:end="51:15">bs</name></expr>)</condition> <block pos:start="51:18" pos:end="57:9">{<block_content pos:start="53:13" pos:end="55:27">

            <expr_stmt pos:start="53:13" pos:end="53:73"><expr pos:start="53:13" pos:end="53:72"><call pos:start="53:13" pos:end="53:72"><name pos:start="53:13" pos:end="53:22">error_setg</name><argument_list pos:start="53:23" pos:end="53:72">(<argument pos:start="53:24" pos:end="53:27"><expr pos:start="53:24" pos:end="53:27"><name pos:start="53:24" pos:end="53:27">errp</name></expr></argument>, <argument pos:start="53:30" pos:end="53:60"><expr pos:start="53:30" pos:end="53:60"><literal type="string" pos:start="53:30" pos:end="53:60">"Cannot find block device '%s'"</literal></expr></argument>, <argument pos:start="53:63" pos:end="53:71"><expr pos:start="53:63" pos:end="53:71"><name pos:start="53:63" pos:end="53:71">reference</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="55:13" pos:end="55:27">return <expr pos:start="55:20" pos:end="55:26"><operator pos:start="55:20" pos:end="55:20">-</operator><name pos:start="55:21" pos:end="55:26">ENODEV</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="59:9" pos:end="59:21"><expr pos:start="59:9" pos:end="59:20"><call pos:start="59:9" pos:end="59:20"><name pos:start="59:9" pos:end="59:16">bdrv_ref</name><argument_list pos:start="59:17" pos:end="59:20">(<argument pos:start="59:18" pos:end="59:19"><expr pos:start="59:18" pos:end="59:19"><name pos:start="59:18" pos:end="59:19">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:18"><expr pos:start="61:9" pos:end="61:17"><operator pos:start="61:9" pos:end="61:9">*</operator><name pos:start="61:10" pos:end="61:12">pbs</name> <operator pos:start="61:14" pos:end="61:14">=</operator> <name pos:start="61:16" pos:end="61:17">bs</name></expr>;</expr_stmt>

        <return pos:start="63:9" pos:end="63:17">return <expr pos:start="63:16" pos:end="63:16"><literal type="number" pos:start="63:16" pos:end="63:16">0</literal></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="69:5" pos:end="69:22"><expr pos:start="69:5" pos:end="69:21"><name pos:start="69:5" pos:end="69:6">bs</name> <operator pos:start="69:8" pos:end="69:8">=</operator> <call pos:start="69:10" pos:end="69:21"><name pos:start="69:10" pos:end="69:17">bdrv_new</name><argument_list pos:start="69:18" pos:end="69:21">(<argument pos:start="69:19" pos:end="69:20"><expr pos:start="69:19" pos:end="69:20"><literal type="string" pos:start="69:19" pos:end="69:20">""</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="71:5" pos:end="71:26"><expr pos:start="71:5" pos:end="71:25"><name pos:start="71:5" pos:end="71:15"><name pos:start="71:5" pos:end="71:6">bs</name><operator pos:start="71:7" pos:end="71:8">-&gt;</operator><name pos:start="71:9" pos:end="71:15">options</name></name> <operator pos:start="71:17" pos:end="71:17">=</operator> <name pos:start="71:19" pos:end="71:25">options</name></expr>;</expr_stmt>

    <expr_stmt pos:start="73:5" pos:end="73:43"><expr pos:start="73:5" pos:end="73:42"><name pos:start="73:5" pos:end="73:11">options</name> <operator pos:start="73:13" pos:end="73:13">=</operator> <call pos:start="73:15" pos:end="73:42"><name pos:start="73:15" pos:end="73:33">qdict_clone_shallow</name><argument_list pos:start="73:34" pos:end="73:42">(<argument pos:start="73:35" pos:end="73:41"><expr pos:start="73:35" pos:end="73:41"><name pos:start="73:35" pos:end="73:41">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="77:5" pos:end="77:65">/* Fetch the file name from the options QDict if necessary */</comment>

    <if_stmt pos:start="79:5" pos:end="99:5"><if pos:start="79:5" pos:end="83:5">if <condition pos:start="79:8" pos:end="79:18">(<expr pos:start="79:9" pos:end="79:17"><operator pos:start="79:9" pos:end="79:9">!</operator><name pos:start="79:10" pos:end="79:17">filename</name></expr>)</condition> <block pos:start="79:20" pos:end="83:5">{<block_content pos:start="81:9" pos:end="81:58">

        <expr_stmt pos:start="81:9" pos:end="81:58"><expr pos:start="81:9" pos:end="81:57"><name pos:start="81:9" pos:end="81:16">filename</name> <operator pos:start="81:18" pos:end="81:18">=</operator> <call pos:start="81:20" pos:end="81:57"><name pos:start="81:20" pos:end="81:36">qdict_get_try_str</name><argument_list pos:start="81:37" pos:end="81:57">(<argument pos:start="81:38" pos:end="81:44"><expr pos:start="81:38" pos:end="81:44"><name pos:start="81:38" pos:end="81:44">options</name></expr></argument>, <argument pos:start="81:47" pos:end="81:56"><expr pos:start="81:47" pos:end="81:56"><literal type="string" pos:start="81:47" pos:end="81:56">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="83:7" pos:end="89:5">else if <condition pos:start="83:15" pos:end="83:62">(<expr pos:start="83:16" pos:end="83:61"><name pos:start="83:16" pos:end="83:23">filename</name> <operator pos:start="83:25" pos:end="83:26">&amp;&amp;</operator> <operator pos:start="83:28" pos:end="83:28">!</operator><call pos:start="83:29" pos:end="83:61"><name pos:start="83:29" pos:end="83:40">qdict_haskey</name><argument_list pos:start="83:41" pos:end="83:61">(<argument pos:start="83:42" pos:end="83:48"><expr pos:start="83:42" pos:end="83:48"><name pos:start="83:42" pos:end="83:48">options</name></expr></argument>, <argument pos:start="83:51" pos:end="83:60"><expr pos:start="83:51" pos:end="83:60"><literal type="string" pos:start="83:51" pos:end="83:60">"filename"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="83:64" pos:end="89:5">{<block_content pos:start="85:9" pos:end="87:37">

        <expr_stmt pos:start="85:9" pos:end="85:67"><expr pos:start="85:9" pos:end="85:66"><call pos:start="85:9" pos:end="85:66"><name pos:start="85:9" pos:end="85:17">qdict_put</name><argument_list pos:start="85:18" pos:end="85:66">(<argument pos:start="85:19" pos:end="85:25"><expr pos:start="85:19" pos:end="85:25"><name pos:start="85:19" pos:end="85:25">options</name></expr></argument>, <argument pos:start="85:28" pos:end="85:37"><expr pos:start="85:28" pos:end="85:37"><literal type="string" pos:start="85:28" pos:end="85:37">"filename"</literal></expr></argument>, <argument pos:start="85:40" pos:end="85:65"><expr pos:start="85:40" pos:end="85:65"><call pos:start="85:40" pos:end="85:65"><name pos:start="85:40" pos:end="85:55">qstring_from_str</name><argument_list pos:start="85:56" pos:end="85:65">(<argument pos:start="85:57" pos:end="85:64"><expr pos:start="85:57" pos:end="85:64"><name pos:start="85:57" pos:end="85:64">filename</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:37"><expr pos:start="87:9" pos:end="87:36"><name pos:start="87:9" pos:end="87:29">allow_protocol_prefix</name> <operator pos:start="87:31" pos:end="87:31">=</operator> <name pos:start="87:33" pos:end="87:36">true</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="89:7" pos:end="99:5">else <block pos:start="89:12" pos:end="99:5">{<block_content pos:start="91:9" pos:end="97:18">

        <expr_stmt pos:start="91:9" pos:end="93:32"><expr pos:start="91:9" pos:end="93:31"><call pos:start="91:9" pos:end="93:31"><name pos:start="91:9" pos:end="91:18">error_setg</name><argument_list pos:start="91:19" pos:end="93:31">(<argument pos:start="91:20" pos:end="91:23"><expr pos:start="91:20" pos:end="91:23"><name pos:start="91:20" pos:end="91:23">errp</name></expr></argument>, <argument pos:start="91:26" pos:end="93:30"><expr pos:start="91:26" pos:end="93:30"><literal type="string" pos:start="91:26" pos:end="91:78">"Can't specify 'file' and 'filename' options at the "</literal>

                   <literal type="string" pos:start="93:20" pos:end="93:30">"same time"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:22"><expr pos:start="95:9" pos:end="95:21"><name pos:start="95:9" pos:end="95:11">ret</name> <operator pos:start="95:13" pos:end="95:13">=</operator> <operator pos:start="95:15" pos:end="95:15">-</operator><name pos:start="95:16" pos:end="95:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="97:9" pos:end="97:18">goto <name pos:start="97:14" pos:end="97:17">fail</name>;</goto>

    </block_content>}</block></else></if_stmt>



    <comment type="block" pos:start="103:5" pos:end="103:37">/* Find the right block driver */</comment>

    <expr_stmt pos:start="105:5" pos:end="105:51"><expr pos:start="105:5" pos:end="105:50"><name pos:start="105:5" pos:end="105:11">drvname</name> <operator pos:start="105:13" pos:end="105:13">=</operator> <call pos:start="105:15" pos:end="105:50"><name pos:start="105:15" pos:end="105:31">qdict_get_try_str</name><argument_list pos:start="105:32" pos:end="105:50">(<argument pos:start="105:33" pos:end="105:39"><expr pos:start="105:33" pos:end="105:39"><name pos:start="105:33" pos:end="105:39">options</name></expr></argument>, <argument pos:start="105:42" pos:end="105:49"><expr pos:start="105:42" pos:end="105:49"><literal type="string" pos:start="105:42" pos:end="105:49">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="107:5" pos:end="135:5"><if pos:start="107:5" pos:end="119:5">if <condition pos:start="107:8" pos:end="107:16">(<expr pos:start="107:9" pos:end="107:15"><name pos:start="107:9" pos:end="107:15">drvname</name></expr>)</condition> <block pos:start="107:18" pos:end="119:5">{<block_content pos:start="109:9" pos:end="117:37">

        <expr_stmt pos:start="109:9" pos:end="109:40"><expr pos:start="109:9" pos:end="109:39"><name pos:start="109:9" pos:end="109:11">drv</name> <operator pos:start="109:13" pos:end="109:13">=</operator> <call pos:start="109:15" pos:end="109:39"><name pos:start="109:15" pos:end="109:30">bdrv_find_format</name><argument_list pos:start="109:31" pos:end="109:39">(<argument pos:start="109:32" pos:end="109:38"><expr pos:start="109:32" pos:end="109:38"><name pos:start="109:32" pos:end="109:38">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="111:9" pos:end="115:9"><if pos:start="111:9" pos:end="115:9">if <condition pos:start="111:12" pos:end="111:17">(<expr pos:start="111:13" pos:end="111:16"><operator pos:start="111:13" pos:end="111:13">!</operator><name pos:start="111:14" pos:end="111:16">drv</name></expr>)</condition> <block pos:start="111:19" pos:end="115:9">{<block_content pos:start="113:13" pos:end="113:61">

            <expr_stmt pos:start="113:13" pos:end="113:61"><expr pos:start="113:13" pos:end="113:60"><call pos:start="113:13" pos:end="113:60"><name pos:start="113:13" pos:end="113:22">error_setg</name><argument_list pos:start="113:23" pos:end="113:60">(<argument pos:start="113:24" pos:end="113:27"><expr pos:start="113:24" pos:end="113:27"><name pos:start="113:24" pos:end="113:27">errp</name></expr></argument>, <argument pos:start="113:30" pos:end="113:50"><expr pos:start="113:30" pos:end="113:50"><literal type="string" pos:start="113:30" pos:end="113:50">"Unknown driver '%s'"</literal></expr></argument>, <argument pos:start="113:53" pos:end="113:59"><expr pos:start="113:53" pos:end="113:59"><name pos:start="113:53" pos:end="113:59">drvname</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:37"><expr pos:start="117:9" pos:end="117:36"><call pos:start="117:9" pos:end="117:36"><name pos:start="117:9" pos:end="117:17">qdict_del</name><argument_list pos:start="117:18" pos:end="117:36">(<argument pos:start="117:19" pos:end="117:25"><expr pos:start="117:19" pos:end="117:25"><name pos:start="117:19" pos:end="117:25">options</name></expr></argument>, <argument pos:start="117:28" pos:end="117:35"><expr pos:start="117:28" pos:end="117:35"><literal type="string" pos:start="117:28" pos:end="117:35">"driver"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="119:7" pos:end="129:5">else if <condition pos:start="119:15" pos:end="119:24">(<expr pos:start="119:16" pos:end="119:23"><name pos:start="119:16" pos:end="119:23">filename</name></expr>)</condition> <block pos:start="119:26" pos:end="129:5">{<block_content pos:start="121:9" pos:end="127:9">

        <expr_stmt pos:start="121:9" pos:end="121:66"><expr pos:start="121:9" pos:end="121:65"><name pos:start="121:9" pos:end="121:11">drv</name> <operator pos:start="121:13" pos:end="121:13">=</operator> <call pos:start="121:15" pos:end="121:65"><name pos:start="121:15" pos:end="121:32">bdrv_find_protocol</name><argument_list pos:start="121:33" pos:end="121:65">(<argument pos:start="121:34" pos:end="121:41"><expr pos:start="121:34" pos:end="121:41"><name pos:start="121:34" pos:end="121:41">filename</name></expr></argument>, <argument pos:start="121:44" pos:end="121:64"><expr pos:start="121:44" pos:end="121:64"><name pos:start="121:44" pos:end="121:64">allow_protocol_prefix</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="123:9" pos:end="127:9"><if pos:start="123:9" pos:end="127:9">if <condition pos:start="123:12" pos:end="123:17">(<expr pos:start="123:13" pos:end="123:16"><operator pos:start="123:13" pos:end="123:13">!</operator><name pos:start="123:14" pos:end="123:16">drv</name></expr>)</condition> <block pos:start="123:19" pos:end="127:9">{<block_content pos:start="125:13" pos:end="125:49">

            <expr_stmt pos:start="125:13" pos:end="125:49"><expr pos:start="125:13" pos:end="125:48"><call pos:start="125:13" pos:end="125:48"><name pos:start="125:13" pos:end="125:22">error_setg</name><argument_list pos:start="125:23" pos:end="125:48">(<argument pos:start="125:24" pos:end="125:27"><expr pos:start="125:24" pos:end="125:27"><name pos:start="125:24" pos:end="125:27">errp</name></expr></argument>, <argument pos:start="125:30" pos:end="125:47"><expr pos:start="125:30" pos:end="125:47"><literal type="string" pos:start="125:30" pos:end="125:47">"Unknown protocol"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if> <else pos:start="129:7" pos:end="135:5">else <block pos:start="129:12" pos:end="135:5">{<block_content pos:start="131:9" pos:end="133:19">

        <expr_stmt pos:start="131:9" pos:end="131:63"><expr pos:start="131:9" pos:end="131:62"><call pos:start="131:9" pos:end="131:62"><name pos:start="131:9" pos:end="131:18">error_setg</name><argument_list pos:start="131:19" pos:end="131:62">(<argument pos:start="131:20" pos:end="131:23"><expr pos:start="131:20" pos:end="131:23"><name pos:start="131:20" pos:end="131:23">errp</name></expr></argument>, <argument pos:start="131:26" pos:end="131:61"><expr pos:start="131:26" pos:end="131:61"><literal type="string" pos:start="131:26" pos:end="131:61">"Must specify either driver or file"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="133:9" pos:end="133:19"><expr pos:start="133:9" pos:end="133:18"><name pos:start="133:9" pos:end="133:11">drv</name> <operator pos:start="133:13" pos:end="133:13">=</operator> <name pos:start="133:15" pos:end="133:18">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="139:5" pos:end="147:5"><if pos:start="139:5" pos:end="147:5">if <condition pos:start="139:8" pos:end="139:13">(<expr pos:start="139:9" pos:end="139:12"><operator pos:start="139:9" pos:end="139:9">!</operator><name pos:start="139:10" pos:end="139:12">drv</name></expr>)</condition> <block pos:start="139:15" pos:end="147:5">{<block_content pos:start="143:9" pos:end="145:18">

        <comment type="block" pos:start="141:9" pos:end="141:39">/* errp has been set already */</comment>

        <expr_stmt pos:start="143:9" pos:end="143:22"><expr pos:start="143:9" pos:end="143:21"><name pos:start="143:9" pos:end="143:11">ret</name> <operator pos:start="143:13" pos:end="143:13">=</operator> <operator pos:start="143:15" pos:end="143:15">-</operator><name pos:start="143:16" pos:end="143:21">ENOENT</name></expr>;</expr_stmt>

        <goto pos:start="145:9" pos:end="145:18">goto <name pos:start="145:14" pos:end="145:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="151:5" pos:end="151:40">/* Parse the filename and open it */</comment>

    <if_stmt pos:start="153:5" pos:end="179:5"><if pos:start="153:5" pos:end="169:5">if <condition pos:start="153:8" pos:end="153:45">(<expr pos:start="153:9" pos:end="153:44"><name pos:start="153:9" pos:end="153:32"><name pos:start="153:9" pos:end="153:11">drv</name><operator pos:start="153:12" pos:end="153:13">-&gt;</operator><name pos:start="153:14" pos:end="153:32">bdrv_parse_filename</name></name> <operator pos:start="153:34" pos:end="153:35">&amp;&amp;</operator> <name pos:start="153:37" pos:end="153:44">filename</name></expr>)</condition> <block pos:start="153:47" pos:end="169:5">{<block_content pos:start="155:9" pos:end="167:39">

        <expr_stmt pos:start="155:9" pos:end="155:64"><expr pos:start="155:9" pos:end="155:63"><call pos:start="155:9" pos:end="155:63"><name pos:start="155:9" pos:end="155:32"><name pos:start="155:9" pos:end="155:11">drv</name><operator pos:start="155:12" pos:end="155:13">-&gt;</operator><name pos:start="155:14" pos:end="155:32">bdrv_parse_filename</name></name><argument_list pos:start="155:33" pos:end="155:63">(<argument pos:start="155:34" pos:end="155:41"><expr pos:start="155:34" pos:end="155:41"><name pos:start="155:34" pos:end="155:41">filename</name></expr></argument>, <argument pos:start="155:44" pos:end="155:50"><expr pos:start="155:44" pos:end="155:50"><name pos:start="155:44" pos:end="155:50">options</name></expr></argument>, <argument pos:start="155:53" pos:end="155:62"><expr pos:start="155:53" pos:end="155:62"><operator pos:start="155:53" pos:end="155:53">&amp;</operator><name pos:start="155:54" pos:end="155:62">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="157:9" pos:end="165:9"><if pos:start="157:9" pos:end="165:9">if <condition pos:start="157:12" pos:end="157:37">(<expr pos:start="157:13" pos:end="157:36"><call pos:start="157:13" pos:end="157:36"><name pos:start="157:13" pos:end="157:24">error_is_set</name><argument_list pos:start="157:25" pos:end="157:36">(<argument pos:start="157:26" pos:end="157:35"><expr pos:start="157:26" pos:end="157:35"><operator pos:start="157:26" pos:end="157:26">&amp;</operator><name pos:start="157:27" pos:end="157:35">local_err</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="157:39" pos:end="165:9">{<block_content pos:start="159:13" pos:end="163:22">

            <expr_stmt pos:start="159:13" pos:end="159:45"><expr pos:start="159:13" pos:end="159:44"><call pos:start="159:13" pos:end="159:44"><name pos:start="159:13" pos:end="159:27">error_propagate</name><argument_list pos:start="159:28" pos:end="159:44">(<argument pos:start="159:29" pos:end="159:32"><expr pos:start="159:29" pos:end="159:32"><name pos:start="159:29" pos:end="159:32">errp</name></expr></argument>, <argument pos:start="159:35" pos:end="159:43"><expr pos:start="159:35" pos:end="159:43"><name pos:start="159:35" pos:end="159:43">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:26"><expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:15">ret</name> <operator pos:start="161:17" pos:end="161:17">=</operator> <operator pos:start="161:19" pos:end="161:19">-</operator><name pos:start="161:20" pos:end="161:25">EINVAL</name></expr>;</expr_stmt>

            <goto pos:start="163:13" pos:end="163:22">goto <name pos:start="163:18" pos:end="163:21">fail</name>;</goto>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="167:9" pos:end="167:39"><expr pos:start="167:9" pos:end="167:38"><call pos:start="167:9" pos:end="167:38"><name pos:start="167:9" pos:end="167:17">qdict_del</name><argument_list pos:start="167:18" pos:end="167:38">(<argument pos:start="167:19" pos:end="167:25"><expr pos:start="167:19" pos:end="167:25"><name pos:start="167:19" pos:end="167:25">options</name></expr></argument>, <argument pos:start="167:28" pos:end="167:37"><expr pos:start="167:28" pos:end="167:37"><literal type="string" pos:start="167:28" pos:end="167:37">"filename"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <if type="elseif" pos:start="169:7" pos:end="179:5">else if <condition pos:start="169:15" pos:end="169:53">(<expr pos:start="169:16" pos:end="169:52"><name pos:start="169:16" pos:end="169:39"><name pos:start="169:16" pos:end="169:18">drv</name><operator pos:start="169:19" pos:end="169:20">-&gt;</operator><name pos:start="169:21" pos:end="169:39">bdrv_needs_filename</name></name> <operator pos:start="169:41" pos:end="169:42">&amp;&amp;</operator> <operator pos:start="169:44" pos:end="169:44">!</operator><name pos:start="169:45" pos:end="169:52">filename</name></expr>)</condition> <block pos:start="169:55" pos:end="179:5">{<block_content pos:start="171:9" pos:end="177:18">

        <expr_stmt pos:start="171:9" pos:end="173:37"><expr pos:start="171:9" pos:end="173:36"><call pos:start="171:9" pos:end="173:36"><name pos:start="171:9" pos:end="171:18">error_setg</name><argument_list pos:start="171:19" pos:end="173:36">(<argument pos:start="171:20" pos:end="171:23"><expr pos:start="171:20" pos:end="171:23"><name pos:start="171:20" pos:end="171:23">errp</name></expr></argument>, <argument pos:start="171:26" pos:end="171:69"><expr pos:start="171:26" pos:end="171:69"><literal type="string" pos:start="171:26" pos:end="171:69">"The '%s' block driver requires a file name"</literal></expr></argument>,

                   <argument pos:start="173:20" pos:end="173:35"><expr pos:start="173:20" pos:end="173:35"><name pos:start="173:20" pos:end="173:35"><name pos:start="173:20" pos:end="173:22">drv</name><operator pos:start="173:23" pos:end="173:24">-&gt;</operator><name pos:start="173:25" pos:end="173:35">format_name</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="175:9" pos:end="175:22"><expr pos:start="175:9" pos:end="175:21"><name pos:start="175:9" pos:end="175:11">ret</name> <operator pos:start="175:13" pos:end="175:13">=</operator> <operator pos:start="175:15" pos:end="175:15">-</operator><name pos:start="175:16" pos:end="175:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="177:9" pos:end="177:18">goto <name pos:start="177:14" pos:end="177:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="183:5" pos:end="193:5"><if pos:start="183:5" pos:end="189:5">if <condition pos:start="183:8" pos:end="183:29">(<expr pos:start="183:9" pos:end="183:28"><operator pos:start="183:9" pos:end="183:9">!</operator><name pos:start="183:10" pos:end="183:28"><name pos:start="183:10" pos:end="183:12">drv</name><operator pos:start="183:13" pos:end="183:14">-&gt;</operator><name pos:start="183:15" pos:end="183:28">bdrv_file_open</name></name></expr>)</condition> <block pos:start="183:31" pos:end="189:5">{<block_content pos:start="185:9" pos:end="187:23">

        <expr_stmt pos:start="185:9" pos:end="185:71"><expr pos:start="185:9" pos:end="185:70"><name pos:start="185:9" pos:end="185:11">ret</name> <operator pos:start="185:13" pos:end="185:13">=</operator> <call pos:start="185:15" pos:end="185:70"><name pos:start="185:15" pos:end="185:23">bdrv_open</name><argument_list pos:start="185:24" pos:end="185:70">(<argument pos:start="185:25" pos:end="185:26"><expr pos:start="185:25" pos:end="185:26"><name pos:start="185:25" pos:end="185:26">bs</name></expr></argument>, <argument pos:start="185:29" pos:end="185:36"><expr pos:start="185:29" pos:end="185:36"><name pos:start="185:29" pos:end="185:36">filename</name></expr></argument>, <argument pos:start="185:39" pos:end="185:45"><expr pos:start="185:39" pos:end="185:45"><name pos:start="185:39" pos:end="185:45">options</name></expr></argument>, <argument pos:start="185:48" pos:end="185:52"><expr pos:start="185:48" pos:end="185:52"><name pos:start="185:48" pos:end="185:52">flags</name></expr></argument>, <argument pos:start="185:55" pos:end="185:57"><expr pos:start="185:55" pos:end="185:57"><name pos:start="185:55" pos:end="185:57">drv</name></expr></argument>, <argument pos:start="185:60" pos:end="185:69"><expr pos:start="185:60" pos:end="185:69"><operator pos:start="185:60" pos:end="185:60">&amp;</operator><name pos:start="185:61" pos:end="185:69">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="187:9" pos:end="187:23"><expr pos:start="187:9" pos:end="187:22"><name pos:start="187:9" pos:end="187:15">options</name> <operator pos:start="187:17" pos:end="187:17">=</operator> <name pos:start="187:19" pos:end="187:22">NULL</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="189:7" pos:end="193:5">else <block pos:start="189:12" pos:end="193:5">{<block_content pos:start="191:9" pos:end="191:74">

        <expr_stmt pos:start="191:9" pos:end="191:74"><expr pos:start="191:9" pos:end="191:73"><name pos:start="191:9" pos:end="191:11">ret</name> <operator pos:start="191:13" pos:end="191:13">=</operator> <call pos:start="191:15" pos:end="191:73"><name pos:start="191:15" pos:end="191:30">bdrv_open_common</name><argument_list pos:start="191:31" pos:end="191:73">(<argument pos:start="191:32" pos:end="191:33"><expr pos:start="191:32" pos:end="191:33"><name pos:start="191:32" pos:end="191:33">bs</name></expr></argument>, <argument pos:start="191:36" pos:end="191:39"><expr pos:start="191:36" pos:end="191:39"><name pos:start="191:36" pos:end="191:39">NULL</name></expr></argument>, <argument pos:start="191:42" pos:end="191:48"><expr pos:start="191:42" pos:end="191:48"><name pos:start="191:42" pos:end="191:48">options</name></expr></argument>, <argument pos:start="191:51" pos:end="191:55"><expr pos:start="191:51" pos:end="191:55"><name pos:start="191:51" pos:end="191:55">flags</name></expr></argument>, <argument pos:start="191:58" pos:end="191:60"><expr pos:start="191:58" pos:end="191:60"><name pos:start="191:58" pos:end="191:60">drv</name></expr></argument>, <argument pos:start="191:63" pos:end="191:72"><expr pos:start="191:63" pos:end="191:72"><operator pos:start="191:63" pos:end="191:63">&amp;</operator><name pos:start="191:64" pos:end="191:72">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="195:5" pos:end="201:5"><if pos:start="195:5" pos:end="201:5">if <condition pos:start="195:8" pos:end="195:16">(<expr pos:start="195:9" pos:end="195:15"><name pos:start="195:9" pos:end="195:11">ret</name> <operator pos:start="195:13" pos:end="195:13">&lt;</operator> <literal type="number" pos:start="195:15" pos:end="195:15">0</literal></expr>)</condition> <block pos:start="195:18" pos:end="201:5">{<block_content pos:start="197:9" pos:end="199:18">

        <expr_stmt pos:start="197:9" pos:end="197:41"><expr pos:start="197:9" pos:end="197:40"><call pos:start="197:9" pos:end="197:40"><name pos:start="197:9" pos:end="197:23">error_propagate</name><argument_list pos:start="197:24" pos:end="197:40">(<argument pos:start="197:25" pos:end="197:28"><expr pos:start="197:25" pos:end="197:28"><name pos:start="197:25" pos:end="197:28">errp</name></expr></argument>, <argument pos:start="197:31" pos:end="197:39"><expr pos:start="197:31" pos:end="197:39"><name pos:start="197:31" pos:end="197:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <goto pos:start="199:9" pos:end="199:18">goto <name pos:start="199:14" pos:end="199:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="205:5" pos:end="205:48">/* Check if any unknown options were used */</comment>

    <if_stmt pos:start="207:5" pos:end="219:5"><if pos:start="207:5" pos:end="219:5">if <condition pos:start="207:8" pos:end="207:46">(<expr pos:start="207:9" pos:end="207:45"><name pos:start="207:9" pos:end="207:15">options</name> <operator pos:start="207:17" pos:end="207:18">&amp;&amp;</operator> <operator pos:start="207:20" pos:end="207:20">(</operator><call pos:start="207:21" pos:end="207:39"><name pos:start="207:21" pos:end="207:30">qdict_size</name><argument_list pos:start="207:31" pos:end="207:39">(<argument pos:start="207:32" pos:end="207:38"><expr pos:start="207:32" pos:end="207:38"><name pos:start="207:32" pos:end="207:38">options</name></expr></argument>)</argument_list></call> <operator pos:start="207:41" pos:end="207:42">!=</operator> <literal type="number" pos:start="207:44" pos:end="207:44">0</literal><operator pos:start="207:45" pos:end="207:45">)</operator></expr>)</condition> <block pos:start="207:48" pos:end="219:5">{<block_content pos:start="209:9" pos:end="217:18">

        <decl_stmt pos:start="209:9" pos:end="209:55"><decl pos:start="209:9" pos:end="209:54"><type pos:start="209:9" pos:end="209:26"><specifier pos:start="209:9" pos:end="209:13">const</specifier> <name pos:start="209:15" pos:end="209:24">QDictEntry</name> <modifier pos:start="209:26" pos:end="209:26">*</modifier></type><name pos:start="209:27" pos:end="209:31">entry</name> <init pos:start="209:33" pos:end="209:54">= <expr pos:start="209:35" pos:end="209:54"><call pos:start="209:35" pos:end="209:54"><name pos:start="209:35" pos:end="209:45">qdict_first</name><argument_list pos:start="209:46" pos:end="209:54">(<argument pos:start="209:47" pos:end="209:53"><expr pos:start="209:47" pos:end="209:53"><name pos:start="209:47" pos:end="209:53">options</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <expr_stmt pos:start="211:9" pos:end="213:49"><expr pos:start="211:9" pos:end="213:48"><call pos:start="211:9" pos:end="213:48"><name pos:start="211:9" pos:end="211:18">error_setg</name><argument_list pos:start="211:19" pos:end="213:48">(<argument pos:start="211:20" pos:end="211:23"><expr pos:start="211:20" pos:end="211:23"><name pos:start="211:20" pos:end="211:23">errp</name></expr></argument>, <argument pos:start="211:26" pos:end="211:78"><expr pos:start="211:26" pos:end="211:78"><literal type="string" pos:start="211:26" pos:end="211:78">"Block protocol '%s' doesn't support the option '%s'"</literal></expr></argument>,

                   <argument pos:start="213:20" pos:end="213:35"><expr pos:start="213:20" pos:end="213:35"><name pos:start="213:20" pos:end="213:35"><name pos:start="213:20" pos:end="213:22">drv</name><operator pos:start="213:23" pos:end="213:24">-&gt;</operator><name pos:start="213:25" pos:end="213:35">format_name</name></name></expr></argument>, <argument pos:start="213:38" pos:end="213:47"><expr pos:start="213:38" pos:end="213:47"><name pos:start="213:38" pos:end="213:47"><name pos:start="213:38" pos:end="213:42">entry</name><operator pos:start="213:43" pos:end="213:44">-&gt;</operator><name pos:start="213:45" pos:end="213:47">key</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="215:9" pos:end="215:22"><expr pos:start="215:9" pos:end="215:21"><name pos:start="215:9" pos:end="215:11">ret</name> <operator pos:start="215:13" pos:end="215:13">=</operator> <operator pos:start="215:15" pos:end="215:15">-</operator><name pos:start="215:16" pos:end="215:21">EINVAL</name></expr>;</expr_stmt>

        <goto pos:start="217:9" pos:end="217:18">goto <name pos:start="217:14" pos:end="217:17">fail</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="221:5" pos:end="221:21"><expr pos:start="221:5" pos:end="221:20"><call pos:start="221:5" pos:end="221:20"><name pos:start="221:5" pos:end="221:11">QDECREF</name><argument_list pos:start="221:12" pos:end="221:20">(<argument pos:start="221:13" pos:end="221:19"><expr pos:start="221:13" pos:end="221:19"><name pos:start="221:13" pos:end="221:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="225:5" pos:end="225:21"><expr pos:start="225:5" pos:end="225:20"><name pos:start="225:5" pos:end="225:16"><name pos:start="225:5" pos:end="225:6">bs</name><operator pos:start="225:7" pos:end="225:8">-&gt;</operator><name pos:start="225:9" pos:end="225:16">growable</name></name> <operator pos:start="225:18" pos:end="225:18">=</operator> <literal type="number" pos:start="225:20" pos:end="225:20">1</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="227:5" pos:end="227:14"><expr pos:start="227:5" pos:end="227:13"><operator pos:start="227:5" pos:end="227:5">*</operator><name pos:start="227:6" pos:end="227:8">pbs</name> <operator pos:start="227:10" pos:end="227:10">=</operator> <name pos:start="227:12" pos:end="227:13">bs</name></expr>;</expr_stmt>

    <return pos:start="229:5" pos:end="229:13">return <expr pos:start="229:12" pos:end="229:12"><literal type="number" pos:start="229:12" pos:end="229:12">0</literal></expr>;</return>



<label pos:start="233:1" pos:end="233:5"><name pos:start="233:1" pos:end="233:4">fail</name>:</label>

    <expr_stmt pos:start="235:5" pos:end="235:21"><expr pos:start="235:5" pos:end="235:20"><call pos:start="235:5" pos:end="235:20"><name pos:start="235:5" pos:end="235:11">QDECREF</name><argument_list pos:start="235:12" pos:end="235:20">(<argument pos:start="235:13" pos:end="235:19"><expr pos:start="235:13" pos:end="235:19"><name pos:start="235:13" pos:end="235:19">options</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="237:5" pos:end="241:5"><if pos:start="237:5" pos:end="241:5">if <condition pos:start="237:8" pos:end="237:17">(<expr pos:start="237:9" pos:end="237:16"><operator pos:start="237:9" pos:end="237:9">!</operator><name pos:start="237:10" pos:end="237:16"><name pos:start="237:10" pos:end="237:11">bs</name><operator pos:start="237:12" pos:end="237:13">-&gt;</operator><name pos:start="237:14" pos:end="237:16">drv</name></name></expr>)</condition> <block pos:start="237:19" pos:end="241:5">{<block_content pos:start="239:9" pos:end="239:29">

        <expr_stmt pos:start="239:9" pos:end="239:29"><expr pos:start="239:9" pos:end="239:28"><call pos:start="239:9" pos:end="239:28"><name pos:start="239:9" pos:end="239:15">QDECREF</name><argument_list pos:start="239:16" pos:end="239:28">(<argument pos:start="239:17" pos:end="239:27"><expr pos:start="239:17" pos:end="239:27"><name pos:start="239:17" pos:end="239:27"><name pos:start="239:17" pos:end="239:18">bs</name><operator pos:start="239:19" pos:end="239:20">-&gt;</operator><name pos:start="239:21" pos:end="239:27">options</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="243:5" pos:end="243:19"><expr pos:start="243:5" pos:end="243:18"><call pos:start="243:5" pos:end="243:18"><name pos:start="243:5" pos:end="243:14">bdrv_unref</name><argument_list pos:start="243:15" pos:end="243:18">(<argument pos:start="243:16" pos:end="243:17"><expr pos:start="243:16" pos:end="243:17"><name pos:start="243:16" pos:end="243:17">bs</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="245:5" pos:end="245:15">return <expr pos:start="245:12" pos:end="245:14"><name pos:start="245:12" pos:end="245:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
