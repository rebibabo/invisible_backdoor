<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/20669.c" pos:tabs="8"><function pos:start="1:1" pos:end="241:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:28">xvid_encode_frame</name><parameter_list pos:start="1:29" pos:end="3:69">(<parameter pos:start="1:30" pos:end="1:50"><decl pos:start="1:30" pos:end="1:50"><type pos:start="1:30" pos:end="1:50"><name pos:start="1:30" pos:end="1:43">AVCodecContext</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier></type><name pos:start="1:46" pos:end="1:50">avctx</name></decl></parameter>, <parameter pos:start="1:53" pos:end="1:65"><decl pos:start="1:53" pos:end="1:65"><type pos:start="1:53" pos:end="1:65"><name pos:start="1:53" pos:end="1:60">AVPacket</name> <modifier pos:start="1:62" pos:end="1:62">*</modifier></type><name pos:start="1:63" pos:end="1:65">pkt</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:51"><decl pos:start="3:30" pos:end="3:51"><type pos:start="3:30" pos:end="3:51"><specifier pos:start="3:30" pos:end="3:34">const</specifier> <name pos:start="3:36" pos:end="3:42">AVFrame</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:51">picture</name></decl></parameter>, <parameter pos:start="3:54" pos:end="3:68"><decl pos:start="3:54" pos:end="3:68"><type pos:start="3:54" pos:end="3:68"><name pos:start="3:54" pos:end="3:56">int</name> <modifier pos:start="3:58" pos:end="3:58">*</modifier></type><name pos:start="3:59" pos:end="3:68">got_packet</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="241:1">{<block_content pos:start="7:5" pos:end="239:5">

    <decl_stmt pos:start="7:5" pos:end="7:48"><decl pos:start="7:5" pos:end="7:12"><type pos:start="7:5" pos:end="7:7"><name pos:start="7:5" pos:end="7:7">int</name></type> <name pos:start="7:9" pos:end="7:12">xerr</name></decl>, <decl pos:start="7:15" pos:end="7:15"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:15" pos:end="7:15">i</name></decl>, <decl pos:start="7:18" pos:end="7:20"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:18" pos:end="7:20">ret</name></decl>, <decl pos:start="7:23" pos:end="7:47"><type ref="prev" pos:start="7:5" pos:end="7:7"/><name pos:start="7:23" pos:end="7:33">user_packet</name> <init pos:start="7:35" pos:end="7:47">= <expr pos:start="7:37" pos:end="7:47"><operator pos:start="7:37" pos:end="7:37">!</operator><operator pos:start="7:38" pos:end="7:38">!</operator><name pos:start="7:39" pos:end="7:47"><name pos:start="7:39" pos:end="7:41">pkt</name><operator pos:start="7:42" pos:end="7:43">-&gt;</operator><name pos:start="7:44" pos:end="7:47">data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:46"><decl pos:start="9:5" pos:end="9:45"><type pos:start="9:5" pos:end="9:25"><name pos:start="9:5" pos:end="9:23"><name pos:start="9:5" pos:end="9:10">struct</name> <name pos:start="9:12" pos:end="9:23">xvid_context</name></name> <modifier pos:start="9:25" pos:end="9:25">*</modifier></type><name pos:start="9:26" pos:end="9:26">x</name> <init pos:start="9:28" pos:end="9:45">= <expr pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:45"><name pos:start="9:30" pos:end="9:34">avctx</name><operator pos:start="9:35" pos:end="9:36">-&gt;</operator><name pos:start="9:37" pos:end="9:45">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:48"><decl pos:start="11:5" pos:end="11:47"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">AVFrame</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name>             <init pos:start="11:28" pos:end="11:47">= <expr pos:start="11:30" pos:end="11:47"><name pos:start="11:30" pos:end="11:47"><name pos:start="11:30" pos:end="11:34">avctx</name><operator pos:start="11:35" pos:end="11:36">-&gt;</operator><name pos:start="11:37" pos:end="11:47">coded_frame</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:46"><decl pos:start="13:5" pos:end="13:45"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:16">mb_width</name>  <init pos:start="13:19" pos:end="13:45">= <expr pos:start="13:21" pos:end="13:45"><operator pos:start="13:21" pos:end="13:21">(</operator><name pos:start="13:22" pos:end="13:33"><name pos:start="13:22" pos:end="13:26">avctx</name><operator pos:start="13:27" pos:end="13:28">-&gt;</operator><name pos:start="13:29" pos:end="13:33">width</name></name>  <operator pos:start="13:36" pos:end="13:36">+</operator> <literal type="number" pos:start="13:38" pos:end="13:39">15</literal><operator pos:start="13:40" pos:end="13:40">)</operator> <operator pos:start="13:42" pos:end="13:42">/</operator> <literal type="number" pos:start="13:44" pos:end="13:45">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:46"><decl pos:start="15:5" pos:end="15:45"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:17">mb_height</name> <init pos:start="15:19" pos:end="15:45">= <expr pos:start="15:21" pos:end="15:45"><operator pos:start="15:21" pos:end="15:21">(</operator><name pos:start="15:22" pos:end="15:34"><name pos:start="15:22" pos:end="15:26">avctx</name><operator pos:start="15:27" pos:end="15:28">-&gt;</operator><name pos:start="15:29" pos:end="15:34">height</name></name> <operator pos:start="15:36" pos:end="15:36">+</operator> <literal type="number" pos:start="15:38" pos:end="15:39">15</literal><operator pos:start="15:40" pos:end="15:40">)</operator> <operator pos:start="15:42" pos:end="15:42">/</operator> <literal type="number" pos:start="15:44" pos:end="15:45">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:14"><decl pos:start="17:5" pos:end="17:13"><type pos:start="17:5" pos:end="17:10"><name pos:start="17:5" pos:end="17:8">char</name> <modifier pos:start="17:10" pos:end="17:10">*</modifier></type><name pos:start="17:11" pos:end="17:13">tmp</name></decl>;</decl_stmt>



    <decl_stmt pos:start="21:5" pos:end="21:44"><decl pos:start="21:5" pos:end="21:43"><type pos:start="21:5" pos:end="21:20"><name pos:start="21:5" pos:end="21:20">xvid_enc_frame_t</name></type> <name pos:start="21:22" pos:end="21:35">xvid_enc_frame</name> <init pos:start="21:37" pos:end="21:43">= <expr pos:start="21:39" pos:end="21:43"><block pos:start="21:39" pos:end="21:43">{ <expr pos:start="21:41" pos:end="21:41"><literal type="number" pos:start="21:41" pos:end="21:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="23:5" pos:end="23:44"><decl pos:start="23:5" pos:end="23:43"><type pos:start="23:5" pos:end="23:20"><name pos:start="23:5" pos:end="23:20">xvid_enc_stats_t</name></type> <name pos:start="23:22" pos:end="23:35">xvid_enc_stats</name> <init pos:start="23:37" pos:end="23:43">= <expr pos:start="23:39" pos:end="23:43"><block pos:start="23:39" pos:end="23:43">{ <expr pos:start="23:41" pos:end="23:41"><literal type="number" pos:start="23:41" pos:end="23:41">0</literal></expr> }</block></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="27:5" pos:end="29:19"><if pos:start="27:5" pos:end="29:19">if <condition pos:start="27:8" pos:end="27:103">(<expr pos:start="27:9" pos:end="27:102"><operator pos:start="27:9" pos:end="27:9">(</operator><name pos:start="27:10" pos:end="27:12">ret</name> <operator pos:start="27:14" pos:end="27:14">=</operator> <call pos:start="27:16" pos:end="27:97"><name pos:start="27:16" pos:end="27:31">ff_alloc_packet2</name><argument_list pos:start="27:32" pos:end="27:97">(<argument pos:start="27:33" pos:end="27:37"><expr pos:start="27:33" pos:end="27:37"><name pos:start="27:33" pos:end="27:37">avctx</name></expr></argument>, <argument pos:start="27:40" pos:end="27:42"><expr pos:start="27:40" pos:end="27:42"><name pos:start="27:40" pos:end="27:42">pkt</name></expr></argument>, <argument pos:start="27:45" pos:end="27:96"><expr pos:start="27:45" pos:end="27:96"><name pos:start="27:45" pos:end="27:52">mb_width</name><operator pos:start="27:53" pos:end="27:53">*</operator><name pos:start="27:54" pos:end="27:62">mb_height</name><operator pos:start="27:63" pos:end="27:63">*</operator><name pos:start="27:64" pos:end="27:75">MAX_MB_BYTES</name> <operator pos:start="27:77" pos:end="27:77">+</operator> <name pos:start="27:79" pos:end="27:96">FF_MIN_BUFFER_SIZE</name></expr></argument>)</argument_list></call><operator pos:start="27:98" pos:end="27:98">)</operator> <operator pos:start="27:100" pos:end="27:100">&lt;</operator> <literal type="number" pos:start="27:102" pos:end="27:102">0</literal></expr>)</condition><block type="pseudo" pos:start="29:9" pos:end="29:19"><block_content pos:start="29:9" pos:end="29:19">

        <return pos:start="29:9" pos:end="29:19">return <expr pos:start="29:16" pos:end="29:18"><name pos:start="29:16" pos:end="29:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="33:5" pos:end="33:36">/* Start setting up the frame */</comment>

    <expr_stmt pos:start="35:5" pos:end="35:42"><expr pos:start="35:5" pos:end="35:41"><name pos:start="35:5" pos:end="35:26"><name pos:start="35:5" pos:end="35:18">xvid_enc_frame</name><operator pos:start="35:19" pos:end="35:19">.</operator><name pos:start="35:20" pos:end="35:26">version</name></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <name pos:start="35:30" pos:end="35:41">XVID_VERSION</name></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="37:42"><expr pos:start="37:5" pos:end="37:41"><name pos:start="37:5" pos:end="37:26"><name pos:start="37:5" pos:end="37:18">xvid_enc_stats</name><operator pos:start="37:19" pos:end="37:19">.</operator><name pos:start="37:20" pos:end="37:26">version</name></name> <operator pos:start="37:28" pos:end="37:28">=</operator> <name pos:start="37:30" pos:end="37:41">XVID_VERSION</name></expr>;</expr_stmt>



    <comment type="block" pos:start="41:5" pos:end="41:47">/* Let Xvid know where to put the frame. */</comment>

    <expr_stmt pos:start="43:5" pos:end="43:41"><expr pos:start="43:5" pos:end="43:40"><name pos:start="43:5" pos:end="43:28"><name pos:start="43:5" pos:end="43:18">xvid_enc_frame</name><operator pos:start="43:19" pos:end="43:19">.</operator><name pos:start="43:20" pos:end="43:28">bitstream</name></name> <operator pos:start="43:30" pos:end="43:30">=</operator> <name pos:start="43:32" pos:end="43:40"><name pos:start="43:32" pos:end="43:34">pkt</name><operator pos:start="43:35" pos:end="43:36">-&gt;</operator><name pos:start="43:37" pos:end="43:40">data</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:41"><expr pos:start="45:5" pos:end="45:40"><name pos:start="45:5" pos:end="45:25"><name pos:start="45:5" pos:end="45:18">xvid_enc_frame</name><operator pos:start="45:19" pos:end="45:19">.</operator><name pos:start="45:20" pos:end="45:25">length</name></name>    <operator pos:start="45:30" pos:end="45:30">=</operator> <name pos:start="45:32" pos:end="45:40"><name pos:start="45:32" pos:end="45:34">pkt</name><operator pos:start="45:35" pos:end="45:36">-&gt;</operator><name pos:start="45:37" pos:end="45:40">size</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="49:5" pos:end="49:39">/* Initialize input image fields */</comment>

    <if_stmt pos:start="51:5" pos:end="59:5"><if pos:start="51:5" pos:end="59:5">if <condition pos:start="51:8" pos:end="51:45">(<expr pos:start="51:9" pos:end="51:44"><name pos:start="51:9" pos:end="51:22"><name pos:start="51:9" pos:end="51:13">avctx</name><operator pos:start="51:14" pos:end="51:15">-&gt;</operator><name pos:start="51:16" pos:end="51:22">pix_fmt</name></name> <operator pos:start="51:24" pos:end="51:25">!=</operator> <name pos:start="51:27" pos:end="51:44">AV_PIX_FMT_YUV420P</name></expr>)</condition> <block pos:start="51:47" pos:end="59:5">{<block_content pos:start="53:9" pos:end="57:31">

        <expr_stmt pos:start="53:9" pos:end="55:69"><expr pos:start="53:9" pos:end="55:68"><call pos:start="53:9" pos:end="55:68"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="55:68">(<argument pos:start="53:16" pos:end="53:20"><expr pos:start="53:16" pos:end="53:20"><name pos:start="53:16" pos:end="53:20">avctx</name></expr></argument>, <argument pos:start="53:23" pos:end="53:34"><expr pos:start="53:23" pos:end="53:34"><name pos:start="53:23" pos:end="53:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:67"><expr pos:start="55:16" pos:end="55:67"><literal type="string" pos:start="55:16" pos:end="55:67">"Xvid: Color spaces other than 420P not supported\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="57:9" pos:end="57:31">return <expr pos:start="57:16" pos:end="57:30"><call pos:start="57:16" pos:end="57:30"><name pos:start="57:16" pos:end="57:22">AVERROR</name><argument_list pos:start="57:23" pos:end="57:30">(<argument pos:start="57:24" pos:end="57:29"><expr pos:start="57:24" pos:end="57:29"><name pos:start="57:24" pos:end="57:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <expr_stmt pos:start="63:5" pos:end="63:47"><expr pos:start="63:5" pos:end="63:46"><name pos:start="63:5" pos:end="63:28"><name pos:start="63:5" pos:end="63:18">xvid_enc_frame</name><operator pos:start="63:19" pos:end="63:19">.</operator><name pos:start="63:20" pos:end="63:24">input</name><operator pos:start="63:25" pos:end="63:25">.</operator><name pos:start="63:26" pos:end="63:28">csp</name></name> <operator pos:start="63:30" pos:end="63:30">=</operator> <name pos:start="63:32" pos:end="63:46">XVID_CSP_PLANAR</name></expr>;</expr_stmt> <comment type="block" pos:start="63:49" pos:end="63:61">/* YUV420P */</comment>



    <for pos:start="67:5" pos:end="73:5">for <control pos:start="67:9" pos:end="67:27">(<init pos:start="67:10" pos:end="67:15"><expr pos:start="67:10" pos:end="67:14"><name pos:start="67:10" pos:end="67:10">i</name> <operator pos:start="67:12" pos:end="67:12">=</operator> <literal type="number" pos:start="67:14" pos:end="67:14">0</literal></expr>;</init> <condition pos:start="67:17" pos:end="67:22"><expr pos:start="67:17" pos:end="67:21"><name pos:start="67:17" pos:end="67:17">i</name> <operator pos:start="67:19" pos:end="67:19">&lt;</operator> <literal type="number" pos:start="67:21" pos:end="67:21">4</literal></expr>;</condition> <incr pos:start="67:24" pos:end="67:26"><expr pos:start="67:24" pos:end="67:26"><name pos:start="67:24" pos:end="67:24">i</name><operator pos:start="67:25" pos:end="67:26">++</operator></expr></incr>)</control> <block pos:start="67:29" pos:end="73:5">{<block_content pos:start="69:9" pos:end="71:62">

        <expr_stmt pos:start="69:9" pos:end="69:58"><expr pos:start="69:9" pos:end="69:57"><name pos:start="69:9" pos:end="69:37"><name pos:start="69:9" pos:end="69:22">xvid_enc_frame</name><operator pos:start="69:23" pos:end="69:23">.</operator><name pos:start="69:24" pos:end="69:28">input</name><operator pos:start="69:29" pos:end="69:29">.</operator><name pos:start="69:30" pos:end="69:34">plane</name><index pos:start="69:35" pos:end="69:37">[<expr pos:start="69:36" pos:end="69:36"><name pos:start="69:36" pos:end="69:36">i</name></expr>]</index></name>  <operator pos:start="69:40" pos:end="69:40">=</operator> <name pos:start="69:42" pos:end="69:57"><name pos:start="69:42" pos:end="69:48">picture</name><operator pos:start="69:49" pos:end="69:50">-&gt;</operator><name pos:start="69:51" pos:end="69:54">data</name><index pos:start="69:55" pos:end="69:57">[<expr pos:start="69:56" pos:end="69:56"><name pos:start="69:56" pos:end="69:56">i</name></expr>]</index></name></expr>;</expr_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:62"><expr pos:start="71:9" pos:end="71:61"><name pos:start="71:9" pos:end="71:38"><name pos:start="71:9" pos:end="71:22">xvid_enc_frame</name><operator pos:start="71:23" pos:end="71:23">.</operator><name pos:start="71:24" pos:end="71:28">input</name><operator pos:start="71:29" pos:end="71:29">.</operator><name pos:start="71:30" pos:end="71:35">stride</name><index pos:start="71:36" pos:end="71:38">[<expr pos:start="71:37" pos:end="71:37"><name pos:start="71:37" pos:end="71:37">i</name></expr>]</index></name> <operator pos:start="71:40" pos:end="71:40">=</operator> <name pos:start="71:42" pos:end="71:61"><name pos:start="71:42" pos:end="71:48">picture</name><operator pos:start="71:49" pos:end="71:50">-&gt;</operator><name pos:start="71:51" pos:end="71:58">linesize</name><index pos:start="71:59" pos:end="71:61">[<expr pos:start="71:60" pos:end="71:60"><name pos:start="71:60" pos:end="71:60">i</name></expr>]</index></name></expr>;</expr_stmt>

    </block_content>}</block></for>



    <comment type="block" pos:start="77:5" pos:end="77:23">/* Encoder Flags */</comment>

    <expr_stmt pos:start="79:5" pos:end="79:44"><expr pos:start="79:5" pos:end="79:43"><name pos:start="79:5" pos:end="79:28"><name pos:start="79:5" pos:end="79:18">xvid_enc_frame</name><operator pos:start="79:19" pos:end="79:19">.</operator><name pos:start="79:20" pos:end="79:28">vop_flags</name></name> <operator pos:start="79:30" pos:end="79:30">=</operator> <name pos:start="79:32" pos:end="79:43"><name pos:start="79:32" pos:end="79:32">x</name><operator pos:start="79:33" pos:end="79:34">-&gt;</operator><name pos:start="79:35" pos:end="79:43">vop_flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:44"><expr pos:start="81:5" pos:end="81:43"><name pos:start="81:5" pos:end="81:28"><name pos:start="81:5" pos:end="81:18">xvid_enc_frame</name><operator pos:start="81:19" pos:end="81:19">.</operator><name pos:start="81:20" pos:end="81:28">vol_flags</name></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <name pos:start="81:32" pos:end="81:43"><name pos:start="81:32" pos:end="81:32">x</name><operator pos:start="81:33" pos:end="81:34">-&gt;</operator><name pos:start="81:35" pos:end="81:43">vol_flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="83:5" pos:end="83:43"><expr pos:start="83:5" pos:end="83:42"><name pos:start="83:5" pos:end="83:25"><name pos:start="83:5" pos:end="83:18">xvid_enc_frame</name><operator pos:start="83:19" pos:end="83:19">.</operator><name pos:start="83:20" pos:end="83:25">motion</name></name>    <operator pos:start="83:30" pos:end="83:30">=</operator> <name pos:start="83:32" pos:end="83:42"><name pos:start="83:32" pos:end="83:32">x</name><operator pos:start="83:33" pos:end="83:34">-&gt;</operator><name pos:start="83:35" pos:end="83:42">me_flags</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="85:5" pos:end="93:65"><expr pos:start="85:5" pos:end="93:64"><name pos:start="85:5" pos:end="85:23"><name pos:start="85:5" pos:end="85:18">xvid_enc_frame</name><operator pos:start="85:19" pos:end="85:19">.</operator><name pos:start="85:20" pos:end="85:23">type</name></name>      <operator pos:start="85:30" pos:end="85:30">=</operator>

        <ternary pos:start="87:9" pos:end="93:64"><condition pos:start="87:9" pos:end="87:49"><expr pos:start="87:9" pos:end="87:47"><name pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:15">picture</name><operator pos:start="87:16" pos:end="87:17">-&gt;</operator><name pos:start="87:18" pos:end="87:26">pict_type</name></name> <operator pos:start="87:28" pos:end="87:29">==</operator> <name pos:start="87:31" pos:end="87:47">AV_PICTURE_TYPE_I</name></expr> ?</condition><then pos:start="87:51" pos:end="87:64"> <expr pos:start="87:51" pos:end="87:64"><name pos:start="87:51" pos:end="87:64">XVID_TYPE_IVOP</name></expr> </then><else pos:start="87:66" pos:end="93:64">:

        <expr pos:start="89:9" pos:end="93:64"><ternary pos:start="89:9" pos:end="93:64"><condition pos:start="89:9" pos:end="89:49"><expr pos:start="89:9" pos:end="89:47"><name pos:start="89:9" pos:end="89:26"><name pos:start="89:9" pos:end="89:15">picture</name><operator pos:start="89:16" pos:end="89:17">-&gt;</operator><name pos:start="89:18" pos:end="89:26">pict_type</name></name> <operator pos:start="89:28" pos:end="89:29">==</operator> <name pos:start="89:31" pos:end="89:47">AV_PICTURE_TYPE_P</name></expr> ?</condition><then pos:start="89:51" pos:end="89:64"> <expr pos:start="89:51" pos:end="89:64"><name pos:start="89:51" pos:end="89:64">XVID_TYPE_PVOP</name></expr> </then><else pos:start="89:66" pos:end="93:64">:

        <expr pos:start="91:9" pos:end="93:64"><ternary pos:start="91:9" pos:end="93:64"><condition pos:start="91:9" pos:end="91:49"><expr pos:start="91:9" pos:end="91:47"><name pos:start="91:9" pos:end="91:26"><name pos:start="91:9" pos:end="91:15">picture</name><operator pos:start="91:16" pos:end="91:17">-&gt;</operator><name pos:start="91:18" pos:end="91:26">pict_type</name></name> <operator pos:start="91:28" pos:end="91:29">==</operator> <name pos:start="91:31" pos:end="91:47">AV_PICTURE_TYPE_B</name></expr> ?</condition><then pos:start="91:51" pos:end="91:64"> <expr pos:start="91:51" pos:end="91:64"><name pos:start="91:51" pos:end="91:64">XVID_TYPE_BVOP</name></expr> </then><else pos:start="91:66" pos:end="93:64">:

                                                  <expr pos:start="93:51" pos:end="93:64"><name pos:start="93:51" pos:end="93:64">XVID_TYPE_AUTO</name></expr></else></ternary></expr></else></ternary></expr></else></ternary></expr>;</expr_stmt>



    <comment type="block" pos:start="97:5" pos:end="97:36">/* Pixel aspect ratio setting */</comment>

    <if_stmt pos:start="99:5" pos:end="113:5"><if pos:start="99:5" pos:end="113:5">if <condition pos:start="99:8" pos:end="101:83">(<expr pos:start="99:9" pos:end="101:82"><name pos:start="99:9" pos:end="99:38"><name pos:start="99:9" pos:end="99:13">avctx</name><operator pos:start="99:14" pos:end="99:15">-&gt;</operator><name pos:start="99:16" pos:end="99:34">sample_aspect_ratio</name><operator pos:start="99:35" pos:end="99:35">.</operator><name pos:start="99:36" pos:end="99:38">num</name></name> <operator pos:start="99:40" pos:end="99:40">&lt;</operator> <literal type="number" pos:start="99:42" pos:end="99:42">0</literal> <operator pos:start="99:44" pos:end="99:45">||</operator> <name pos:start="99:47" pos:end="99:76"><name pos:start="99:47" pos:end="99:51">avctx</name><operator pos:start="99:52" pos:end="99:53">-&gt;</operator><name pos:start="99:54" pos:end="99:72">sample_aspect_ratio</name><operator pos:start="99:73" pos:end="99:73">.</operator><name pos:start="99:74" pos:end="99:76">num</name></name> <operator pos:start="99:78" pos:end="99:78">&gt;</operator> <literal type="number" pos:start="99:80" pos:end="99:82">255</literal> <operator pos:start="99:84" pos:end="99:85">||</operator>

        <name pos:start="101:9" pos:end="101:38"><name pos:start="101:9" pos:end="101:13">avctx</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:34">sample_aspect_ratio</name><operator pos:start="101:35" pos:end="101:35">.</operator><name pos:start="101:36" pos:end="101:38">den</name></name> <operator pos:start="101:40" pos:end="101:40">&lt;</operator> <literal type="number" pos:start="101:42" pos:end="101:42">0</literal> <operator pos:start="101:44" pos:end="101:45">||</operator> <name pos:start="101:47" pos:end="101:76"><name pos:start="101:47" pos:end="101:51">avctx</name><operator pos:start="101:52" pos:end="101:53">-&gt;</operator><name pos:start="101:54" pos:end="101:72">sample_aspect_ratio</name><operator pos:start="101:73" pos:end="101:73">.</operator><name pos:start="101:74" pos:end="101:76">den</name></name> <operator pos:start="101:78" pos:end="101:78">&gt;</operator> <literal type="number" pos:start="101:80" pos:end="101:82">255</literal></expr>)</condition> <block pos:start="101:85" pos:end="113:5">{<block_content pos:start="103:9" pos:end="111:89">

        <expr_stmt pos:start="103:9" pos:end="107:79"><expr pos:start="103:9" pos:end="107:78"><call pos:start="103:9" pos:end="107:78"><name pos:start="103:9" pos:end="103:14">av_log</name><argument_list pos:start="103:15" pos:end="107:78">(<argument pos:start="103:16" pos:end="103:20"><expr pos:start="103:16" pos:end="103:20"><name pos:start="103:16" pos:end="103:20">avctx</name></expr></argument>, <argument pos:start="103:23" pos:end="103:36"><expr pos:start="103:23" pos:end="103:36"><name pos:start="103:23" pos:end="103:36">AV_LOG_WARNING</name></expr></argument>,

               <argument pos:start="105:16" pos:end="105:78"><expr pos:start="105:16" pos:end="105:78"><literal type="string" pos:start="105:16" pos:end="105:78">"Invalid pixel aspect ratio %i/%i, limit is 255/255 reducing\n"</literal></expr></argument>,

               <argument pos:start="107:16" pos:end="107:45"><expr pos:start="107:16" pos:end="107:45"><name pos:start="107:16" pos:end="107:45"><name pos:start="107:16" pos:end="107:20">avctx</name><operator pos:start="107:21" pos:end="107:22">-&gt;</operator><name pos:start="107:23" pos:end="107:41">sample_aspect_ratio</name><operator pos:start="107:42" pos:end="107:42">.</operator><name pos:start="107:43" pos:end="107:45">num</name></name></expr></argument>, <argument pos:start="107:48" pos:end="107:77"><expr pos:start="107:48" pos:end="107:77"><name pos:start="107:48" pos:end="107:77"><name pos:start="107:48" pos:end="107:52">avctx</name><operator pos:start="107:53" pos:end="107:54">-&gt;</operator><name pos:start="107:55" pos:end="107:73">sample_aspect_ratio</name><operator pos:start="107:74" pos:end="107:74">.</operator><name pos:start="107:75" pos:end="107:77">den</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="109:9" pos:end="111:89"><expr pos:start="109:9" pos:end="111:88"><call pos:start="109:9" pos:end="111:88"><name pos:start="109:9" pos:end="109:17">av_reduce</name><argument_list pos:start="109:18" pos:end="111:88">(<argument pos:start="109:19" pos:end="109:49"><expr pos:start="109:19" pos:end="109:49"><operator pos:start="109:19" pos:end="109:19">&amp;</operator><name pos:start="109:20" pos:end="109:49"><name pos:start="109:20" pos:end="109:24">avctx</name><operator pos:start="109:25" pos:end="109:26">-&gt;</operator><name pos:start="109:27" pos:end="109:45">sample_aspect_ratio</name><operator pos:start="109:46" pos:end="109:46">.</operator><name pos:start="109:47" pos:end="109:49">num</name></name></expr></argument>, <argument pos:start="109:52" pos:end="109:82"><expr pos:start="109:52" pos:end="109:82"><operator pos:start="109:52" pos:end="109:52">&amp;</operator><name pos:start="109:53" pos:end="109:82"><name pos:start="109:53" pos:end="109:57">avctx</name><operator pos:start="109:58" pos:end="109:59">-&gt;</operator><name pos:start="109:60" pos:end="109:78">sample_aspect_ratio</name><operator pos:start="109:79" pos:end="109:79">.</operator><name pos:start="109:80" pos:end="109:82">den</name></name></expr></argument>,

                   <argument pos:start="111:20" pos:end="111:49"><expr pos:start="111:20" pos:end="111:49"><name pos:start="111:20" pos:end="111:49"><name pos:start="111:20" pos:end="111:24">avctx</name><operator pos:start="111:25" pos:end="111:26">-&gt;</operator><name pos:start="111:27" pos:end="111:45">sample_aspect_ratio</name><operator pos:start="111:46" pos:end="111:46">.</operator><name pos:start="111:47" pos:end="111:49">num</name></name></expr></argument>,  <argument pos:start="111:53" pos:end="111:82"><expr pos:start="111:53" pos:end="111:82"><name pos:start="111:53" pos:end="111:82"><name pos:start="111:53" pos:end="111:57">avctx</name><operator pos:start="111:58" pos:end="111:59">-&gt;</operator><name pos:start="111:60" pos:end="111:78">sample_aspect_ratio</name><operator pos:start="111:79" pos:end="111:79">.</operator><name pos:start="111:80" pos:end="111:82">den</name></name></expr></argument>, <argument pos:start="111:85" pos:end="111:87"><expr pos:start="111:85" pos:end="111:87"><literal type="number" pos:start="111:85" pos:end="111:87">255</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="115:5" pos:end="115:45"><expr pos:start="115:5" pos:end="115:44"><name pos:start="115:5" pos:end="115:22"><name pos:start="115:5" pos:end="115:18">xvid_enc_frame</name><operator pos:start="115:19" pos:end="115:19">.</operator><name pos:start="115:20" pos:end="115:22">par</name></name>        <operator pos:start="115:31" pos:end="115:31">=</operator> <name pos:start="115:33" pos:end="115:44">XVID_PAR_EXT</name></expr>;</expr_stmt>

    <expr_stmt pos:start="117:5" pos:end="117:63"><expr pos:start="117:5" pos:end="117:62"><name pos:start="117:5" pos:end="117:28"><name pos:start="117:5" pos:end="117:18">xvid_enc_frame</name><operator pos:start="117:19" pos:end="117:19">.</operator><name pos:start="117:20" pos:end="117:28">par_width</name></name>  <operator pos:start="117:31" pos:end="117:31">=</operator> <name pos:start="117:33" pos:end="117:62"><name pos:start="117:33" pos:end="117:37">avctx</name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:58">sample_aspect_ratio</name><operator pos:start="117:59" pos:end="117:59">.</operator><name pos:start="117:60" pos:end="117:62">num</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="119:5" pos:end="119:63"><expr pos:start="119:5" pos:end="119:62"><name pos:start="119:5" pos:end="119:29"><name pos:start="119:5" pos:end="119:18">xvid_enc_frame</name><operator pos:start="119:19" pos:end="119:19">.</operator><name pos:start="119:20" pos:end="119:29">par_height</name></name> <operator pos:start="119:31" pos:end="119:31">=</operator> <name pos:start="119:33" pos:end="119:62"><name pos:start="119:33" pos:end="119:37">avctx</name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:58">sample_aspect_ratio</name><operator pos:start="119:59" pos:end="119:59">.</operator><name pos:start="119:60" pos:end="119:62">den</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="123:5" pos:end="123:23">/* Quant Setting */</comment>

    <if_stmt pos:start="125:5" pos:end="131:33"><if pos:start="125:5" pos:end="127:63">if <condition pos:start="125:8" pos:end="125:18">(<expr pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:17"><name pos:start="125:9" pos:end="125:9">x</name><operator pos:start="125:10" pos:end="125:11">-&gt;</operator><name pos:start="125:12" pos:end="125:17">qscale</name></name></expr>)</condition><block type="pseudo" pos:start="127:9" pos:end="127:63"><block_content pos:start="127:9" pos:end="127:63">

        <expr_stmt pos:start="127:9" pos:end="127:63"><expr pos:start="127:9" pos:end="127:62"><name pos:start="127:9" pos:end="127:28"><name pos:start="127:9" pos:end="127:22">xvid_enc_frame</name><operator pos:start="127:23" pos:end="127:23">.</operator><name pos:start="127:24" pos:end="127:28">quant</name></name> <operator pos:start="127:30" pos:end="127:30">=</operator> <name pos:start="127:32" pos:end="127:47"><name pos:start="127:32" pos:end="127:38">picture</name><operator pos:start="127:39" pos:end="127:40">-&gt;</operator><name pos:start="127:41" pos:end="127:47">quality</name></name> <operator pos:start="127:49" pos:end="127:49">/</operator> <name pos:start="127:51" pos:end="127:62">FF_QP2LAMBDA</name></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="129:5" pos:end="131:33">else<block type="pseudo" pos:start="131:9" pos:end="131:33"><block_content pos:start="131:9" pos:end="131:33">

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:28"><name pos:start="131:9" pos:end="131:22">xvid_enc_frame</name><operator pos:start="131:23" pos:end="131:23">.</operator><name pos:start="131:24" pos:end="131:28">quant</name></name> <operator pos:start="131:30" pos:end="131:30">=</operator> <literal type="number" pos:start="131:32" pos:end="131:32">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



    <comment type="block" pos:start="135:5" pos:end="135:18">/* Matrices */</comment>

    <expr_stmt pos:start="137:5" pos:end="137:56"><expr pos:start="137:5" pos:end="137:55"><name pos:start="137:5" pos:end="137:37"><name pos:start="137:5" pos:end="137:18">xvid_enc_frame</name><operator pos:start="137:19" pos:end="137:19">.</operator><name pos:start="137:20" pos:end="137:37">quant_intra_matrix</name></name> <operator pos:start="137:39" pos:end="137:39">=</operator> <name pos:start="137:41" pos:end="137:55"><name pos:start="137:41" pos:end="137:41">x</name><operator pos:start="137:42" pos:end="137:43">-&gt;</operator><name pos:start="137:44" pos:end="137:55">intra_matrix</name></name></expr>;</expr_stmt>

    <expr_stmt pos:start="139:5" pos:end="139:56"><expr pos:start="139:5" pos:end="139:55"><name pos:start="139:5" pos:end="139:37"><name pos:start="139:5" pos:end="139:18">xvid_enc_frame</name><operator pos:start="139:19" pos:end="139:19">.</operator><name pos:start="139:20" pos:end="139:37">quant_inter_matrix</name></name> <operator pos:start="139:39" pos:end="139:39">=</operator> <name pos:start="139:41" pos:end="139:55"><name pos:start="139:41" pos:end="139:41">x</name><operator pos:start="139:42" pos:end="139:43">-&gt;</operator><name pos:start="139:44" pos:end="139:55">inter_matrix</name></name></expr>;</expr_stmt>



    <comment type="block" pos:start="143:5" pos:end="143:16">/* Encode */</comment>

    <expr_stmt pos:start="145:5" pos:end="147:57"><expr pos:start="145:5" pos:end="147:56"><name pos:start="145:5" pos:end="145:8">xerr</name> <operator pos:start="145:10" pos:end="145:10">=</operator> <call pos:start="145:12" pos:end="147:56"><name pos:start="145:12" pos:end="145:22">xvid_encore</name><argument_list pos:start="145:23" pos:end="147:56">(<argument pos:start="145:24" pos:end="145:40"><expr pos:start="145:24" pos:end="145:40"><name pos:start="145:24" pos:end="145:40"><name pos:start="145:24" pos:end="145:24">x</name><operator pos:start="145:25" pos:end="145:26">-&gt;</operator><name pos:start="145:27" pos:end="145:40">encoder_handle</name></name></expr></argument>, <argument pos:start="145:43" pos:end="145:57"><expr pos:start="145:43" pos:end="145:57"><name pos:start="145:43" pos:end="145:57">XVID_ENC_ENCODE</name></expr></argument>,

                       <argument pos:start="147:24" pos:end="147:38"><expr pos:start="147:24" pos:end="147:38"><operator pos:start="147:24" pos:end="147:24">&amp;</operator><name pos:start="147:25" pos:end="147:38">xvid_enc_frame</name></expr></argument>, <argument pos:start="147:41" pos:end="147:55"><expr pos:start="147:41" pos:end="147:55"><operator pos:start="147:41" pos:end="147:41">&amp;</operator><name pos:start="147:42" pos:end="147:55">xvid_enc_stats</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="151:5" pos:end="151:38">/* Two-pass log buffer swapping */</comment>

    <expr_stmt pos:start="153:5" pos:end="153:28"><expr pos:start="153:5" pos:end="153:27"><name pos:start="153:5" pos:end="153:20"><name pos:start="153:5" pos:end="153:9">avctx</name><operator pos:start="153:10" pos:end="153:11">-&gt;</operator><name pos:start="153:12" pos:end="153:20">stats_out</name></name> <operator pos:start="153:22" pos:end="153:22">=</operator> <name pos:start="153:24" pos:end="153:27">NULL</name></expr>;</expr_stmt>

    <if_stmt pos:start="155:5" pos:end="171:5"><if pos:start="155:5" pos:end="171:5">if <condition pos:start="155:8" pos:end="155:25">(<expr pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:24"><name pos:start="155:9" pos:end="155:9">x</name><operator pos:start="155:10" pos:end="155:11">-&gt;</operator><name pos:start="155:12" pos:end="155:24">twopassbuffer</name></name></expr>)</condition> <block pos:start="155:27" pos:end="171:5">{<block_content pos:start="157:9" pos:end="169:9">

        <expr_stmt pos:start="157:9" pos:end="157:52"><expr pos:start="157:9" pos:end="157:51"><name pos:start="157:9" pos:end="157:11">tmp</name>                  <operator pos:start="157:30" pos:end="157:30">=</operator> <name pos:start="157:32" pos:end="157:51"><name pos:start="157:32" pos:end="157:32">x</name><operator pos:start="157:33" pos:end="157:34">-&gt;</operator><name pos:start="157:35" pos:end="157:51">old_twopassbuffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="159:9" pos:end="159:48"><expr pos:start="159:9" pos:end="159:47"><name pos:start="159:9" pos:end="159:28"><name pos:start="159:9" pos:end="159:9">x</name><operator pos:start="159:10" pos:end="159:11">-&gt;</operator><name pos:start="159:12" pos:end="159:28">old_twopassbuffer</name></name> <operator pos:start="159:30" pos:end="159:30">=</operator> <name pos:start="159:32" pos:end="159:47"><name pos:start="159:32" pos:end="159:32">x</name><operator pos:start="159:33" pos:end="159:34">-&gt;</operator><name pos:start="159:35" pos:end="159:47">twopassbuffer</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="161:9" pos:end="161:35"><expr pos:start="161:9" pos:end="161:34"><name pos:start="161:9" pos:end="161:24"><name pos:start="161:9" pos:end="161:9">x</name><operator pos:start="161:10" pos:end="161:11">-&gt;</operator><name pos:start="161:12" pos:end="161:24">twopassbuffer</name></name>     <operator pos:start="161:30" pos:end="161:30">=</operator> <name pos:start="161:32" pos:end="161:34">tmp</name></expr>;</expr_stmt>

        <expr_stmt pos:start="163:9" pos:end="163:33"><expr pos:start="163:9" pos:end="163:32"><name pos:start="163:9" pos:end="163:27"><name pos:start="163:9" pos:end="163:9">x</name><operator pos:start="163:10" pos:end="163:11">-&gt;</operator><name pos:start="163:12" pos:end="163:24">twopassbuffer</name><index pos:start="163:25" pos:end="163:27">[<expr pos:start="163:26" pos:end="163:26"><literal type="number" pos:start="163:26" pos:end="163:26">0</literal></expr>]</index></name>  <operator pos:start="163:30" pos:end="163:30">=</operator> <literal type="number" pos:start="163:32" pos:end="163:32">0</literal></expr>;</expr_stmt>

        <if_stmt pos:start="165:9" pos:end="169:9"><if pos:start="165:9" pos:end="169:9">if <condition pos:start="165:12" pos:end="165:41">(<expr pos:start="165:13" pos:end="165:40"><name pos:start="165:13" pos:end="165:35"><name pos:start="165:13" pos:end="165:13">x</name><operator pos:start="165:14" pos:end="165:15">-&gt;</operator><name pos:start="165:16" pos:end="165:32">old_twopassbuffer</name><index pos:start="165:33" pos:end="165:35">[<expr pos:start="165:34" pos:end="165:34"><literal type="number" pos:start="165:34" pos:end="165:34">0</literal></expr>]</index></name> <operator pos:start="165:37" pos:end="165:38">!=</operator> <literal type="number" pos:start="165:40" pos:end="165:40">0</literal></expr>)</condition> <block pos:start="165:43" pos:end="169:9">{<block_content pos:start="167:13" pos:end="167:52">

            <expr_stmt pos:start="167:13" pos:end="167:52"><expr pos:start="167:13" pos:end="167:51"><name pos:start="167:13" pos:end="167:28"><name pos:start="167:13" pos:end="167:17">avctx</name><operator pos:start="167:18" pos:end="167:19">-&gt;</operator><name pos:start="167:20" pos:end="167:28">stats_out</name></name> <operator pos:start="167:30" pos:end="167:30">=</operator> <name pos:start="167:32" pos:end="167:51"><name pos:start="167:32" pos:end="167:32">x</name><operator pos:start="167:33" pos:end="167:34">-&gt;</operator><name pos:start="167:35" pos:end="167:51">old_twopassbuffer</name></name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="175:5" pos:end="239:5"><if pos:start="175:5" pos:end="223:5">if <condition pos:start="175:8" pos:end="175:17">(<expr pos:start="175:9" pos:end="175:16"><name pos:start="175:9" pos:end="175:12">xerr</name> <operator pos:start="175:14" pos:end="175:14">&gt;</operator> <literal type="number" pos:start="175:16" pos:end="175:16">0</literal></expr>)</condition> <block pos:start="175:19" pos:end="223:5">{<block_content pos:start="177:9" pos:end="221:17">

        <expr_stmt pos:start="177:9" pos:end="177:24"><expr pos:start="177:9" pos:end="177:23"><operator pos:start="177:9" pos:end="177:9">*</operator><name pos:start="177:10" pos:end="177:19">got_packet</name> <operator pos:start="177:21" pos:end="177:21">=</operator> <literal type="number" pos:start="177:23" pos:end="177:23">1</literal></expr>;</expr_stmt>



        <expr_stmt pos:start="181:9" pos:end="181:57"><expr pos:start="181:9" pos:end="181:56"><name pos:start="181:9" pos:end="181:18"><name pos:start="181:9" pos:end="181:9">p</name><operator pos:start="181:10" pos:end="181:11">-&gt;</operator><name pos:start="181:12" pos:end="181:18">quality</name></name> <operator pos:start="181:20" pos:end="181:20">=</operator> <name pos:start="181:22" pos:end="181:41"><name pos:start="181:22" pos:end="181:35">xvid_enc_stats</name><operator pos:start="181:36" pos:end="181:36">.</operator><name pos:start="181:37" pos:end="181:41">quant</name></name> <operator pos:start="181:43" pos:end="181:43">*</operator> <name pos:start="181:45" pos:end="181:56">FF_QP2LAMBDA</name></expr>;</expr_stmt>

        <if_stmt pos:start="183:9" pos:end="197:45"><if pos:start="183:9" pos:end="185:45">if <condition pos:start="183:12" pos:end="183:50">(<expr pos:start="183:13" pos:end="183:49"><name pos:start="183:13" pos:end="183:31"><name pos:start="183:13" pos:end="183:26">xvid_enc_stats</name><operator pos:start="183:27" pos:end="183:27">.</operator><name pos:start="183:28" pos:end="183:31">type</name></name> <operator pos:start="183:33" pos:end="183:34">==</operator> <name pos:start="183:36" pos:end="183:49">XVID_TYPE_PVOP</name></expr>)</condition><block type="pseudo" pos:start="185:13" pos:end="185:45"><block_content pos:start="185:13" pos:end="185:45">

            <expr_stmt pos:start="185:13" pos:end="185:45"><expr pos:start="185:13" pos:end="185:44"><name pos:start="185:13" pos:end="185:24"><name pos:start="185:13" pos:end="185:13">p</name><operator pos:start="185:14" pos:end="185:15">-&gt;</operator><name pos:start="185:16" pos:end="185:24">pict_type</name></name> <operator pos:start="185:26" pos:end="185:26">=</operator> <name pos:start="185:28" pos:end="185:44">AV_PICTURE_TYPE_P</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="187:9" pos:end="189:45">else if <condition pos:start="187:17" pos:end="187:55">(<expr pos:start="187:18" pos:end="187:54"><name pos:start="187:18" pos:end="187:36"><name pos:start="187:18" pos:end="187:31">xvid_enc_stats</name><operator pos:start="187:32" pos:end="187:32">.</operator><name pos:start="187:33" pos:end="187:36">type</name></name> <operator pos:start="187:38" pos:end="187:39">==</operator> <name pos:start="187:41" pos:end="187:54">XVID_TYPE_BVOP</name></expr>)</condition><block type="pseudo" pos:start="189:13" pos:end="189:45"><block_content pos:start="189:13" pos:end="189:45">

            <expr_stmt pos:start="189:13" pos:end="189:45"><expr pos:start="189:13" pos:end="189:44"><name pos:start="189:13" pos:end="189:24"><name pos:start="189:13" pos:end="189:13">p</name><operator pos:start="189:14" pos:end="189:15">-&gt;</operator><name pos:start="189:16" pos:end="189:24">pict_type</name></name> <operator pos:start="189:26" pos:end="189:26">=</operator> <name pos:start="189:28" pos:end="189:44">AV_PICTURE_TYPE_B</name></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="191:9" pos:end="193:45">else if <condition pos:start="191:17" pos:end="191:55">(<expr pos:start="191:18" pos:end="191:54"><name pos:start="191:18" pos:end="191:36"><name pos:start="191:18" pos:end="191:31">xvid_enc_stats</name><operator pos:start="191:32" pos:end="191:32">.</operator><name pos:start="191:33" pos:end="191:36">type</name></name> <operator pos:start="191:38" pos:end="191:39">==</operator> <name pos:start="191:41" pos:end="191:54">XVID_TYPE_SVOP</name></expr>)</condition><block type="pseudo" pos:start="193:13" pos:end="193:45"><block_content pos:start="193:13" pos:end="193:45">

            <expr_stmt pos:start="193:13" pos:end="193:45"><expr pos:start="193:13" pos:end="193:44"><name pos:start="193:13" pos:end="193:24"><name pos:start="193:13" pos:end="193:13">p</name><operator pos:start="193:14" pos:end="193:15">-&gt;</operator><name pos:start="193:16" pos:end="193:24">pict_type</name></name> <operator pos:start="193:26" pos:end="193:26">=</operator> <name pos:start="193:28" pos:end="193:44">AV_PICTURE_TYPE_S</name></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="195:9" pos:end="197:45">else<block type="pseudo" pos:start="197:13" pos:end="197:45"><block_content pos:start="197:13" pos:end="197:45">

            <expr_stmt pos:start="197:13" pos:end="197:45"><expr pos:start="197:13" pos:end="197:44"><name pos:start="197:13" pos:end="197:24"><name pos:start="197:13" pos:end="197:13">p</name><operator pos:start="197:14" pos:end="197:15">-&gt;</operator><name pos:start="197:16" pos:end="197:24">pict_type</name></name> <operator pos:start="197:26" pos:end="197:26">=</operator> <name pos:start="197:28" pos:end="197:44">AV_PICTURE_TYPE_I</name></expr>;</expr_stmt></block_content></block></else></if_stmt>

        <if_stmt pos:start="199:9" pos:end="213:29"><if pos:start="199:9" pos:end="211:9">if <condition pos:start="199:12" pos:end="199:53">(<expr pos:start="199:13" pos:end="199:52"><name pos:start="199:13" pos:end="199:36"><name pos:start="199:13" pos:end="199:26">xvid_enc_frame</name><operator pos:start="199:27" pos:end="199:27">.</operator><name pos:start="199:28" pos:end="199:36">out_flags</name></name> <operator pos:start="199:38" pos:end="199:38">&amp;</operator> <name pos:start="199:40" pos:end="199:52">XVID_KEYFRAME</name></expr>)</condition> <block pos:start="199:55" pos:end="211:9">{<block_content pos:start="201:13" pos:end="209:75">

            <expr_stmt pos:start="201:13" pos:end="201:29"><expr pos:start="201:13" pos:end="201:28"><name pos:start="201:13" pos:end="201:24"><name pos:start="201:13" pos:end="201:13">p</name><operator pos:start="201:14" pos:end="201:15">-&gt;</operator><name pos:start="201:16" pos:end="201:24">key_frame</name></name> <operator pos:start="201:26" pos:end="201:26">=</operator> <literal type="number" pos:start="201:28" pos:end="201:28">1</literal></expr>;</expr_stmt>

            <expr_stmt pos:start="203:13" pos:end="203:43"><expr pos:start="203:13" pos:end="203:42"><name pos:start="203:13" pos:end="203:22"><name pos:start="203:13" pos:end="203:15">pkt</name><operator pos:start="203:16" pos:end="203:17">-&gt;</operator><name pos:start="203:18" pos:end="203:22">flags</name></name>  <operator pos:start="203:25" pos:end="203:26">|=</operator> <name pos:start="203:28" pos:end="203:42">AV_PKT_FLAG_KEY</name></expr>;</expr_stmt>

            <if_stmt pos:start="205:13" pos:end="209:75"><if pos:start="205:13" pos:end="209:75">if <condition pos:start="205:16" pos:end="205:36">(<expr pos:start="205:17" pos:end="205:35"><name pos:start="205:17" pos:end="205:35"><name pos:start="205:17" pos:end="205:17">x</name><operator pos:start="205:18" pos:end="205:19">-&gt;</operator><name pos:start="205:20" pos:end="205:35">quicktime_format</name></name></expr>)</condition><block type="pseudo" pos:start="207:17" pos:end="209:75"><block_content pos:start="207:17" pos:end="209:75">

                <return pos:start="207:17" pos:end="209:75">return <expr pos:start="207:24" pos:end="209:74"><call pos:start="207:24" pos:end="209:74"><name pos:start="207:24" pos:end="207:44">xvid_strip_vol_header</name><argument_list pos:start="207:45" pos:end="209:74">(<argument pos:start="207:46" pos:end="207:50"><expr pos:start="207:46" pos:end="207:50"><name pos:start="207:46" pos:end="207:50">avctx</name></expr></argument>, <argument pos:start="207:53" pos:end="207:55"><expr pos:start="207:53" pos:end="207:55"><name pos:start="207:53" pos:end="207:55">pkt</name></expr></argument>,

                                             <argument pos:start="209:46" pos:end="209:67"><expr pos:start="209:46" pos:end="209:67"><name pos:start="209:46" pos:end="209:67"><name pos:start="209:46" pos:end="209:59">xvid_enc_stats</name><operator pos:start="209:60" pos:end="209:60">.</operator><name pos:start="209:61" pos:end="209:67">hlength</name></name></expr></argument>, <argument pos:start="209:70" pos:end="209:73"><expr pos:start="209:70" pos:end="209:73"><name pos:start="209:70" pos:end="209:73">xerr</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="211:11" pos:end="213:29">else<block type="pseudo" pos:start="213:13" pos:end="213:29"><block_content pos:start="213:13" pos:end="213:29">

            <expr_stmt pos:start="213:13" pos:end="213:29"><expr pos:start="213:13" pos:end="213:28"><name pos:start="213:13" pos:end="213:24"><name pos:start="213:13" pos:end="213:13">p</name><operator pos:start="213:14" pos:end="213:15">-&gt;</operator><name pos:start="213:16" pos:end="213:24">key_frame</name></name> <operator pos:start="213:26" pos:end="213:26">=</operator> <literal type="number" pos:start="213:28" pos:end="213:28">0</literal></expr>;</expr_stmt></block_content></block></else></if_stmt>



        <expr_stmt pos:start="217:9" pos:end="217:25"><expr pos:start="217:9" pos:end="217:24"><name pos:start="217:9" pos:end="217:17"><name pos:start="217:9" pos:end="217:11">pkt</name><operator pos:start="217:12" pos:end="217:13">-&gt;</operator><name pos:start="217:14" pos:end="217:17">size</name></name> <operator pos:start="217:19" pos:end="217:19">=</operator> <name pos:start="217:21" pos:end="217:24">xerr</name></expr>;</expr_stmt>



        <return pos:start="221:9" pos:end="221:17">return <expr pos:start="221:16" pos:end="221:16"><literal type="number" pos:start="221:16" pos:end="221:16">0</literal></expr>;</return>

    </block_content>}</block></if> <else pos:start="223:7" pos:end="239:5">else <block pos:start="223:12" pos:end="239:5">{<block_content pos:start="225:9" pos:end="237:32">

        <if_stmt pos:start="225:9" pos:end="227:32"><if pos:start="225:9" pos:end="227:32">if <condition pos:start="225:12" pos:end="225:25">(<expr pos:start="225:13" pos:end="225:24"><operator pos:start="225:13" pos:end="225:13">!</operator><name pos:start="225:14" pos:end="225:24">user_packet</name></expr>)</condition><block type="pseudo" pos:start="227:13" pos:end="227:32"><block_content pos:start="227:13" pos:end="227:32">

            <expr_stmt pos:start="227:13" pos:end="227:32"><expr pos:start="227:13" pos:end="227:31"><call pos:start="227:13" pos:end="227:31"><name pos:start="227:13" pos:end="227:26">av_free_packet</name><argument_list pos:start="227:27" pos:end="227:31">(<argument pos:start="227:28" pos:end="227:30"><expr pos:start="227:28" pos:end="227:30"><name pos:start="227:28" pos:end="227:30">pkt</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="229:9" pos:end="231:21"><if pos:start="229:9" pos:end="231:21">if <condition pos:start="229:12" pos:end="229:18">(<expr pos:start="229:13" pos:end="229:17"><operator pos:start="229:13" pos:end="229:13">!</operator><name pos:start="229:14" pos:end="229:17">xerr</name></expr>)</condition><block type="pseudo" pos:start="231:13" pos:end="231:21"><block_content pos:start="231:13" pos:end="231:21">

            <return pos:start="231:13" pos:end="231:21">return <expr pos:start="231:20" pos:end="231:20"><literal type="number" pos:start="231:20" pos:end="231:20">0</literal></expr>;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="233:9" pos:end="235:60"><expr pos:start="233:9" pos:end="235:59"><call pos:start="233:9" pos:end="235:59"><name pos:start="233:9" pos:end="233:14">av_log</name><argument_list pos:start="233:15" pos:end="235:59">(<argument pos:start="233:16" pos:end="233:20"><expr pos:start="233:16" pos:end="233:20"><name pos:start="233:16" pos:end="233:20">avctx</name></expr></argument>, <argument pos:start="233:23" pos:end="233:34"><expr pos:start="233:23" pos:end="233:34"><name pos:start="233:23" pos:end="233:34">AV_LOG_ERROR</name></expr></argument>,

               <argument pos:start="235:16" pos:end="235:52"><expr pos:start="235:16" pos:end="235:52"><literal type="string" pos:start="235:16" pos:end="235:52">"Xvid: Encoding Error Occurred: %i\n"</literal></expr></argument>, <argument pos:start="235:55" pos:end="235:58"><expr pos:start="235:55" pos:end="235:58"><name pos:start="235:55" pos:end="235:58">xerr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="237:9" pos:end="237:32">return <expr pos:start="237:16" pos:end="237:31"><name pos:start="237:16" pos:end="237:31">AVERROR_EXTERNAL</name></expr>;</return>

    </block_content>}</block></else></if_stmt>

</block_content>}</block></function>
</unit>
