<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/6629.c" pos:tabs="8"><function pos:start="1:1" pos:end="41:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:28">get_private_data</name><parameter_list pos:start="1:29" pos:end="1:46">(<parameter pos:start="1:30" pos:end="1:45"><decl pos:start="1:30" pos:end="1:45"><type pos:start="1:30" pos:end="1:43"><name pos:start="1:30" pos:end="1:41">OutputStream</name> <modifier pos:start="1:43" pos:end="1:43">*</modifier></type><name pos:start="1:44" pos:end="1:45">os</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="41:1">{<block_content pos:start="5:5" pos:end="39:21">

    <decl_stmt pos:start="5:5" pos:end="5:55"><decl pos:start="5:5" pos:end="5:54"><type pos:start="5:5" pos:end="5:20"><name pos:start="5:5" pos:end="5:18">AVCodecContext</name> <modifier pos:start="5:20" pos:end="5:20">*</modifier></type><name pos:start="5:21" pos:end="5:25">codec</name> <init pos:start="5:27" pos:end="5:54">= <expr pos:start="5:29" pos:end="5:54"><name pos:start="5:29" pos:end="5:47"><name pos:start="5:29" pos:end="5:30">os</name><operator pos:start="5:31" pos:end="5:32">-&gt;</operator><name pos:start="5:33" pos:end="5:35">ctx</name><operator pos:start="5:36" pos:end="5:37">-&gt;</operator><name pos:start="5:38" pos:end="5:44">streams</name><index pos:start="5:45" pos:end="5:47">[<expr pos:start="5:46" pos:end="5:46"><literal type="number" pos:start="5:46" pos:end="5:46">0</literal></expr>]</index></name><operator pos:start="5:48" pos:end="5:49">-&gt;</operator><name pos:start="5:50" pos:end="5:54">codec</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:13"><name pos:start="7:5" pos:end="7:11">uint8_t</name> <modifier pos:start="7:13" pos:end="7:13">*</modifier></type><name pos:start="7:14" pos:end="7:16">ptr</name> <init pos:start="7:18" pos:end="7:35">= <expr pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:35"><name pos:start="7:20" pos:end="7:24">codec</name><operator pos:start="7:25" pos:end="7:26">-&gt;</operator><name pos:start="7:27" pos:end="7:35">extradata</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:37"><decl pos:start="9:5" pos:end="9:36"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">size</name> <init pos:start="9:14" pos:end="9:36">= <expr pos:start="9:16" pos:end="9:36"><name pos:start="9:16" pos:end="9:36"><name pos:start="9:16" pos:end="9:20">codec</name><operator pos:start="9:21" pos:end="9:22">-&gt;</operator><name pos:start="9:23" pos:end="9:36">extradata_size</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:10"><decl pos:start="11:5" pos:end="11:9"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:9">i</name></decl>;</decl_stmt>

    <if_stmt pos:start="13:5" pos:end="21:5"><if pos:start="13:5" pos:end="21:5">if <condition pos:start="13:8" pos:end="13:44">(<expr pos:start="13:9" pos:end="13:43"><name pos:start="13:9" pos:end="13:23"><name pos:start="13:9" pos:end="13:13">codec</name><operator pos:start="13:14" pos:end="13:15">-&gt;</operator><name pos:start="13:16" pos:end="13:23">codec_id</name></name> <operator pos:start="13:25" pos:end="13:26">==</operator> <name pos:start="13:28" pos:end="13:43">AV_CODEC_ID_H264</name></expr>)</condition> <block pos:start="13:46" pos:end="21:5">{<block_content pos:start="15:9" pos:end="19:35">

        <expr_stmt pos:start="15:9" pos:end="15:56"><expr pos:start="15:9" pos:end="15:55"><call pos:start="15:9" pos:end="15:55"><name pos:start="15:9" pos:end="15:37">ff_avc_write_annexb_extradata</name><argument_list pos:start="15:38" pos:end="15:55">(<argument pos:start="15:39" pos:end="15:41"><expr pos:start="15:39" pos:end="15:41"><name pos:start="15:39" pos:end="15:41">ptr</name></expr></argument>, <argument pos:start="15:44" pos:end="15:47"><expr pos:start="15:44" pos:end="15:47"><operator pos:start="15:44" pos:end="15:44">&amp;</operator><name pos:start="15:45" pos:end="15:47">ptr</name></expr></argument>, <argument pos:start="15:50" pos:end="15:54"><expr pos:start="15:50" pos:end="15:54"><operator pos:start="15:50" pos:end="15:50">&amp;</operator><name pos:start="15:51" pos:end="15:54">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="17:9" pos:end="19:35"><if pos:start="17:9" pos:end="19:35">if <condition pos:start="17:12" pos:end="17:17">(<expr pos:start="17:13" pos:end="17:16"><operator pos:start="17:13" pos:end="17:13">!</operator><name pos:start="17:14" pos:end="17:16">ptr</name></expr>)</condition><block type="pseudo" pos:start="19:13" pos:end="19:35"><block_content pos:start="19:13" pos:end="19:35">

            <expr_stmt pos:start="19:13" pos:end="19:35"><expr pos:start="19:13" pos:end="19:34"><name pos:start="19:13" pos:end="19:15">ptr</name> <operator pos:start="19:17" pos:end="19:17">=</operator> <name pos:start="19:19" pos:end="19:34"><name pos:start="19:19" pos:end="19:23">codec</name><operator pos:start="19:24" pos:end="19:25">-&gt;</operator><name pos:start="19:26" pos:end="19:34">extradata</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="23:5" pos:end="25:15"><if pos:start="23:5" pos:end="25:15">if <condition pos:start="23:8" pos:end="23:13">(<expr pos:start="23:9" pos:end="23:12"><operator pos:start="23:9" pos:end="23:9">!</operator><name pos:start="23:10" pos:end="23:12">ptr</name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:15"><block_content pos:start="25:9" pos:end="25:15">

        <return pos:start="25:9" pos:end="25:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:45"><expr pos:start="27:5" pos:end="27:44"><name pos:start="27:5" pos:end="27:19"><name pos:start="27:5" pos:end="27:6">os</name><operator pos:start="27:7" pos:end="27:8">-&gt;</operator><name pos:start="27:9" pos:end="27:19">private_str</name></name> <operator pos:start="27:21" pos:end="27:21">=</operator> <call pos:start="27:23" pos:end="27:44"><name pos:start="27:23" pos:end="27:32">av_mallocz</name><argument_list pos:start="27:33" pos:end="27:44">(<argument pos:start="27:34" pos:end="27:43"><expr pos:start="27:34" pos:end="27:43"><literal type="number" pos:start="27:34" pos:end="27:34">2</literal><operator pos:start="27:35" pos:end="27:35">*</operator><name pos:start="27:36" pos:end="27:39">size</name> <operator pos:start="27:41" pos:end="27:41">+</operator> <literal type="number" pos:start="27:43" pos:end="27:43">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:25">(<expr pos:start="29:9" pos:end="29:24"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:24"><name pos:start="29:10" pos:end="29:11">os</name><operator pos:start="29:12" pos:end="29:13">-&gt;</operator><name pos:start="29:14" pos:end="29:24">private_str</name></name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15">

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>

    <for pos:start="33:5" pos:end="35:59">for <control pos:start="33:9" pos:end="33:30">(<init pos:start="33:10" pos:end="33:15"><expr pos:start="33:10" pos:end="33:14"><name pos:start="33:10" pos:end="33:10">i</name> <operator pos:start="33:12" pos:end="33:12">=</operator> <literal type="number" pos:start="33:14" pos:end="33:14">0</literal></expr>;</init> <condition pos:start="33:17" pos:end="33:25"><expr pos:start="33:17" pos:end="33:24"><name pos:start="33:17" pos:end="33:17">i</name> <operator pos:start="33:19" pos:end="33:19">&lt;</operator> <name pos:start="33:21" pos:end="33:24">size</name></expr>;</condition> <incr pos:start="33:27" pos:end="33:29"><expr pos:start="33:27" pos:end="33:29"><name pos:start="33:27" pos:end="33:27">i</name><operator pos:start="33:28" pos:end="33:29">++</operator></expr></incr>)</control><block type="pseudo" pos:start="35:9" pos:end="35:59"><block_content pos:start="35:9" pos:end="35:59">

        <expr_stmt pos:start="35:9" pos:end="35:59"><expr pos:start="35:9" pos:end="35:58"><call pos:start="35:9" pos:end="35:58"><name pos:start="35:9" pos:end="35:16">snprintf</name><argument_list pos:start="35:17" pos:end="35:58">(<argument pos:start="35:18" pos:end="35:38"><expr pos:start="35:18" pos:end="35:38"><operator pos:start="35:18" pos:end="35:18">&amp;</operator><name pos:start="35:19" pos:end="35:38"><name pos:start="35:19" pos:end="35:20">os</name><operator pos:start="35:21" pos:end="35:22">-&gt;</operator><name pos:start="35:23" pos:end="35:33">private_str</name><index pos:start="35:34" pos:end="35:38">[<expr pos:start="35:35" pos:end="35:37"><literal type="number" pos:start="35:35" pos:end="35:35">2</literal><operator pos:start="35:36" pos:end="35:36">*</operator><name pos:start="35:37" pos:end="35:37">i</name></expr>]</index></name></expr></argument>, <argument pos:start="35:41" pos:end="35:41"><expr pos:start="35:41" pos:end="35:41"><literal type="number" pos:start="35:41" pos:end="35:41">3</literal></expr></argument>, <argument pos:start="35:44" pos:end="35:49"><expr pos:start="35:44" pos:end="35:49"><literal type="string" pos:start="35:44" pos:end="35:49">"%02x"</literal></expr></argument>, <argument pos:start="35:52" pos:end="35:57"><expr pos:start="35:52" pos:end="35:57"><name pos:start="35:52" pos:end="35:57"><name pos:start="35:52" pos:end="35:54">ptr</name><index pos:start="35:55" pos:end="35:57">[<expr pos:start="35:56" pos:end="35:56"><name pos:start="35:56" pos:end="35:56">i</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></for>

    <if_stmt pos:start="37:5" pos:end="39:21"><if pos:start="37:5" pos:end="39:21">if <condition pos:start="37:8" pos:end="37:32">(<expr pos:start="37:9" pos:end="37:31"><name pos:start="37:9" pos:end="37:11">ptr</name> <operator pos:start="37:13" pos:end="37:14">!=</operator> <name pos:start="37:16" pos:end="37:31"><name pos:start="37:16" pos:end="37:20">codec</name><operator pos:start="37:21" pos:end="37:22">-&gt;</operator><name pos:start="37:23" pos:end="37:31">extradata</name></name></expr>)</condition><block type="pseudo" pos:start="39:9" pos:end="39:21"><block_content pos:start="39:9" pos:end="39:21">

        <expr_stmt pos:start="39:9" pos:end="39:21"><expr pos:start="39:9" pos:end="39:20"><call pos:start="39:9" pos:end="39:20"><name pos:start="39:9" pos:end="39:15">av_free</name><argument_list pos:start="39:16" pos:end="39:20">(<argument pos:start="39:17" pos:end="39:19"><expr pos:start="39:17" pos:end="39:19"><name pos:start="39:17" pos:end="39:19">ptr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

</block_content>}</block></function>
</unit>
