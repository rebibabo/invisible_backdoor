<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/14935.c" pos:tabs="8"><function pos:start="1:1" pos:end="111:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:29">epzs_motion_search</name><parameter_list pos:start="1:30" pos:end="7:91">(<parameter pos:start="1:31" pos:end="1:48"><decl pos:start="1:31" pos:end="1:48"><type pos:start="1:31" pos:end="1:48"><name pos:start="1:31" pos:end="1:44">MpegEncContext</name> <modifier pos:start="1:46" pos:end="1:46">*</modifier></type> <name pos:start="1:48" pos:end="1:48">s</name></decl></parameter>,

                             <parameter pos:start="3:30" pos:end="3:40"><decl pos:start="3:30" pos:end="3:40"><type pos:start="3:30" pos:end="3:40"><name pos:start="3:30" pos:end="3:32">int</name> <modifier pos:start="3:34" pos:end="3:34">*</modifier></type><name pos:start="3:35" pos:end="3:40">mx_ptr</name></decl></parameter>, <parameter pos:start="3:43" pos:end="3:53"><decl pos:start="3:43" pos:end="3:53"><type pos:start="3:43" pos:end="3:53"><name pos:start="3:43" pos:end="3:45">int</name> <modifier pos:start="3:47" pos:end="3:47">*</modifier></type><name pos:start="3:48" pos:end="3:53">my_ptr</name></decl></parameter>,

                             <parameter pos:start="5:30" pos:end="5:40"><decl pos:start="5:30" pos:end="5:40"><type pos:start="5:30" pos:end="5:34"><name pos:start="5:30" pos:end="5:32">int</name></type> <name pos:start="5:34" pos:end="5:40"><name pos:start="5:34" pos:end="5:34">P</name><index pos:start="5:35" pos:end="5:37">[<expr pos:start="5:36" pos:end="5:36"><literal type="number" pos:start="5:36" pos:end="5:36">5</literal></expr>]</index><index pos:start="5:38" pos:end="5:40">[<expr pos:start="5:39" pos:end="5:39"><literal type="number" pos:start="5:39" pos:end="5:39">2</literal></expr>]</index></name></decl></parameter>, <parameter pos:start="5:43" pos:end="5:52"><decl pos:start="5:43" pos:end="5:52"><type pos:start="5:43" pos:end="5:52"><name pos:start="5:43" pos:end="5:45">int</name></type> <name pos:start="5:47" pos:end="5:52">pred_x</name></decl></parameter>, <parameter pos:start="5:55" pos:end="5:64"><decl pos:start="5:55" pos:end="5:64"><type pos:start="5:55" pos:end="5:64"><name pos:start="5:55" pos:end="5:57">int</name></type> <name pos:start="5:59" pos:end="5:64">pred_y</name></decl></parameter>,

                             <parameter pos:start="7:30" pos:end="7:37"><decl pos:start="7:30" pos:end="7:37"><type pos:start="7:30" pos:end="7:37"><name pos:start="7:30" pos:end="7:32">int</name></type> <name pos:start="7:34" pos:end="7:37">xmin</name></decl></parameter>, <parameter pos:start="7:40" pos:end="7:47"><decl pos:start="7:40" pos:end="7:47"><type pos:start="7:40" pos:end="7:47"><name pos:start="7:40" pos:end="7:42">int</name></type> <name pos:start="7:44" pos:end="7:47">ymin</name></decl></parameter>, <parameter pos:start="7:50" pos:end="7:57"><decl pos:start="7:50" pos:end="7:57"><type pos:start="7:50" pos:end="7:57"><name pos:start="7:50" pos:end="7:52">int</name></type> <name pos:start="7:54" pos:end="7:57">xmax</name></decl></parameter>, <parameter pos:start="7:60" pos:end="7:67"><decl pos:start="7:60" pos:end="7:67"><type pos:start="7:60" pos:end="7:67"><name pos:start="7:60" pos:end="7:62">int</name></type> <name pos:start="7:64" pos:end="7:67">ymax</name></decl></parameter>, <parameter pos:start="7:70" pos:end="7:90"><decl pos:start="7:70" pos:end="7:90"><type pos:start="7:70" pos:end="7:90"><name pos:start="7:70" pos:end="7:76">uint8_t</name> <modifier pos:start="7:78" pos:end="7:78">*</modifier></type> <name pos:start="7:80" pos:end="7:90">ref_picture</name></decl></parameter>)</parameter_list>

<block pos:start="9:1" pos:end="111:1">{<block_content pos:start="11:5" pos:end="109:16">

    <decl_stmt pos:start="11:5" pos:end="11:23"><decl pos:start="11:5" pos:end="11:22"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:15"><name pos:start="11:9" pos:end="11:12">best</name><index pos:start="11:13" pos:end="11:15">[<expr pos:start="11:14" pos:end="11:14"><literal type="number" pos:start="11:14" pos:end="11:14">2</literal></expr>]</index></name><init pos:start="11:16" pos:end="11:22">=<expr pos:start="11:17" pos:end="11:22"><block pos:start="11:17" pos:end="11:22">{<expr pos:start="11:18" pos:end="11:18"><literal type="number" pos:start="11:18" pos:end="11:18">0</literal></expr>, <expr pos:start="11:21" pos:end="11:21"><literal type="number" pos:start="11:21" pos:end="11:21">0</literal></expr>}</block></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:16"><decl pos:start="13:5" pos:end="13:9"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:9">d</name></decl>, <decl pos:start="13:12" pos:end="13:15"><type ref="prev" pos:start="13:5" pos:end="13:7"/><name pos:start="13:12" pos:end="13:15">dmin</name></decl>;</decl_stmt> 

    <decl_stmt pos:start="15:5" pos:end="15:29"><decl pos:start="15:5" pos:end="15:18"><type pos:start="15:5" pos:end="15:11"><name pos:start="15:5" pos:end="15:9">UINT8</name> <modifier pos:start="15:11" pos:end="15:11">*</modifier></type><name pos:start="15:12" pos:end="15:18">new_pic</name></decl>, <decl pos:start="15:21" pos:end="15:28"><type ref="prev" pos:start="15:5" pos:end="15:11"><modifier pos:start="15:21" pos:end="15:21">*</modifier></type><name pos:start="15:22" pos:end="15:28">old_pic</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:38"><decl pos:start="17:5" pos:end="17:37"><type pos:start="17:5" pos:end="17:13"><specifier pos:start="17:5" pos:end="17:9">const</specifier> <name pos:start="17:11" pos:end="17:13">int</name></type> <name pos:start="17:15" pos:end="17:24">pic_stride</name><init pos:start="17:25" pos:end="17:37">= <expr pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:37"><name pos:start="17:27" pos:end="17:27">s</name><operator pos:start="17:28" pos:end="17:29">-&gt;</operator><name pos:start="17:30" pos:end="17:37">linesize</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="19:5" pos:end="19:56"><decl pos:start="19:5" pos:end="19:55"><type pos:start="19:5" pos:end="19:13"><specifier pos:start="19:5" pos:end="19:9">const</specifier> <name pos:start="19:11" pos:end="19:13">int</name></type> <name pos:start="19:15" pos:end="19:20">pic_xy</name><init pos:start="19:21" pos:end="19:55">= <expr pos:start="19:23" pos:end="19:55"><operator pos:start="19:23" pos:end="19:23">(</operator><name pos:start="19:24" pos:end="19:30"><name pos:start="19:24" pos:end="19:24">s</name><operator pos:start="19:25" pos:end="19:26">-&gt;</operator><name pos:start="19:27" pos:end="19:30">mb_y</name></name><operator pos:start="19:31" pos:end="19:31">*</operator><name pos:start="19:32" pos:end="19:41">pic_stride</name> <operator pos:start="19:43" pos:end="19:43">+</operator> <name pos:start="19:45" pos:end="19:51"><name pos:start="19:45" pos:end="19:45">s</name><operator pos:start="19:46" pos:end="19:47">-&gt;</operator><name pos:start="19:48" pos:end="19:51">mb_x</name></name><operator pos:start="19:52" pos:end="19:52">)</operator><operator pos:start="19:53" pos:end="19:53">*</operator><literal type="number" pos:start="19:54" pos:end="19:55">16</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="21:5" pos:end="21:58"><decl pos:start="21:5" pos:end="21:57"><type pos:start="21:5" pos:end="21:12"><name pos:start="21:5" pos:end="21:10">UINT16</name> <modifier pos:start="21:12" pos:end="21:12">*</modifier></type><name pos:start="21:13" pos:end="21:22">mv_penalty</name><init pos:start="21:23" pos:end="21:57">= <expr pos:start="21:25" pos:end="21:57"><name pos:start="21:25" pos:end="21:48"><name pos:start="21:25" pos:end="21:25">s</name><operator pos:start="21:26" pos:end="21:27">-&gt;</operator><name pos:start="21:28" pos:end="21:37">mv_penalty</name><index pos:start="21:38" pos:end="21:48">[<expr pos:start="21:39" pos:end="21:47"><name pos:start="21:39" pos:end="21:47"><name pos:start="21:39" pos:end="21:39">s</name><operator pos:start="21:40" pos:end="21:41">-&gt;</operator><name pos:start="21:42" pos:end="21:47">f_code</name></name></expr>]</index></name> <operator pos:start="21:50" pos:end="21:50">+</operator> <name pos:start="21:52" pos:end="21:57">MAX_MV</name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="21:60" pos:end="21:86">// f_code of the prev frame</comment>

    <decl_stmt pos:start="23:5" pos:end="23:25"><decl pos:start="23:5" pos:end="23:24"><type pos:start="23:5" pos:end="23:7"><name pos:start="23:5" pos:end="23:7">int</name></type> <name pos:start="23:9" pos:end="23:13">quant</name><init pos:start="23:14" pos:end="23:24">= <expr pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:24"><name pos:start="23:16" pos:end="23:16">s</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:24">qscale</name></name></expr></init></decl>;</decl_stmt> <comment type="line" pos:start="23:27" pos:end="23:53">// qscale of the prev frame</comment>

    <decl_stmt pos:start="25:5" pos:end="25:41"><decl pos:start="25:5" pos:end="25:40"><type pos:start="25:5" pos:end="25:13"><specifier pos:start="25:5" pos:end="25:9">const</specifier> <name pos:start="25:11" pos:end="25:13">int</name></type> <name pos:start="25:15" pos:end="25:19">shift</name><init pos:start="25:20" pos:end="25:40">= <expr pos:start="25:22" pos:end="25:40"><literal type="number" pos:start="25:22" pos:end="25:23">1</literal><operator pos:start="25:23" pos:end="25:23">+</operator><name pos:start="25:24" pos:end="25:40"><name pos:start="25:24" pos:end="25:24">s</name><operator pos:start="25:25" pos:end="25:26">-&gt;</operator><name pos:start="25:27" pos:end="25:40">quarter_sample</name></name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="29:5" pos:end="29:41"><expr pos:start="29:5" pos:end="29:40"><name pos:start="29:5" pos:end="29:11">new_pic</name> <operator pos:start="29:13" pos:end="29:13">=</operator> <name pos:start="29:15" pos:end="29:31"><name pos:start="29:15" pos:end="29:15">s</name><operator pos:start="29:16" pos:end="29:17">-&gt;</operator><name pos:start="29:18" pos:end="29:28">new_picture</name><index pos:start="29:29" pos:end="29:31">[<expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">0</literal></expr>]</index></name> <operator pos:start="29:33" pos:end="29:33">+</operator> <name pos:start="29:35" pos:end="29:40">pic_xy</name></expr>;</expr_stmt>

    <expr_stmt pos:start="31:5" pos:end="31:35"><expr pos:start="31:5" pos:end="31:34"><name pos:start="31:5" pos:end="31:11">old_pic</name> <operator pos:start="31:13" pos:end="31:13">=</operator> <name pos:start="31:15" pos:end="31:25">ref_picture</name> <operator pos:start="31:27" pos:end="31:27">+</operator> <name pos:start="31:29" pos:end="31:34">pic_xy</name></expr>;</expr_stmt>

   

    <expr_stmt pos:start="35:5" pos:end="35:54"><expr pos:start="35:5" pos:end="35:53"><name pos:start="35:5" pos:end="35:8">dmin</name> <operator pos:start="35:10" pos:end="35:10">=</operator> <call pos:start="35:12" pos:end="35:53"><name pos:start="35:12" pos:end="35:23">pix_abs16x16</name><argument_list pos:start="35:24" pos:end="35:53">(<argument pos:start="35:25" pos:end="35:31"><expr pos:start="35:25" pos:end="35:31"><name pos:start="35:25" pos:end="35:31">new_pic</name></expr></argument>, <argument pos:start="35:34" pos:end="35:40"><expr pos:start="35:34" pos:end="35:40"><name pos:start="35:34" pos:end="35:40">old_pic</name></expr></argument>, <argument pos:start="35:43" pos:end="35:52"><expr pos:start="35:43" pos:end="35:52"><name pos:start="35:43" pos:end="35:52">pic_stride</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="47:5"><if pos:start="37:5" pos:end="47:5">if<condition pos:start="37:7" pos:end="37:24">(<expr pos:start="37:8" pos:end="37:23"><name pos:start="37:8" pos:end="37:11">dmin</name><operator pos:start="37:12" pos:end="37:12">&lt;</operator><name pos:start="37:13" pos:end="37:23">Z_THRESHOLD</name></expr>)</condition><block pos:start="37:25" pos:end="47:5">{<block_content pos:start="39:9" pos:end="45:20">

        <expr_stmt pos:start="39:9" pos:end="39:19"><expr pos:start="39:9" pos:end="39:18"><operator pos:start="39:9" pos:end="39:9">*</operator><name pos:start="39:10" pos:end="39:15">mx_ptr</name><operator pos:start="39:16" pos:end="39:16">=</operator> <literal type="number" pos:start="39:18" pos:end="39:18">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="41:9" pos:end="41:19"><expr pos:start="41:9" pos:end="41:18"><operator pos:start="41:9" pos:end="41:9">*</operator><name pos:start="41:10" pos:end="41:15">my_ptr</name><operator pos:start="41:16" pos:end="41:16">=</operator> <literal type="number" pos:start="41:18" pos:end="41:18">0</literal></expr>;</expr_stmt>

<comment type="line" pos:start="43:1" pos:end="43:14">//printf("Z");</comment>

        <return pos:start="45:9" pos:end="45:20">return <expr pos:start="45:16" pos:end="45:19"><name pos:start="45:16" pos:end="45:19">dmin</name></expr>;</return>

    </block_content>}</block></if></if_stmt>



    <comment type="block" pos:start="51:5" pos:end="51:20">/* first line */</comment>

    <if_stmt pos:start="53:5" pos:end="79:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:67">(<expr pos:start="53:9" pos:end="53:66"><operator pos:start="53:9" pos:end="53:9">(</operator><name pos:start="53:10" pos:end="53:16"><name pos:start="53:10" pos:end="53:10">s</name><operator pos:start="53:11" pos:end="53:12">-&gt;</operator><name pos:start="53:13" pos:end="53:16">mb_y</name></name> <operator pos:start="53:18" pos:end="53:19">==</operator> <literal type="number" pos:start="53:21" pos:end="53:21">0</literal> <operator pos:start="53:23" pos:end="53:24">||</operator> <name pos:start="53:26" pos:end="53:44"><name pos:start="53:26" pos:end="53:26">s</name><operator pos:start="53:27" pos:end="53:28">-&gt;</operator><name pos:start="53:29" pos:end="53:44">first_slice_line</name></name> <operator pos:start="53:46" pos:end="53:47">||</operator> <name pos:start="53:49" pos:end="53:65"><name pos:start="53:49" pos:end="53:49">s</name><operator pos:start="53:50" pos:end="53:51">-&gt;</operator><name pos:start="53:52" pos:end="53:65">first_gob_line</name></name><operator pos:start="53:66" pos:end="53:66">)</operator></expr>)</condition> <block pos:start="53:69" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:48">

        <macro pos:start="55:9" pos:end="55:48"><name pos:start="55:9" pos:end="55:16">CHECK_MV</name><argument_list pos:start="55:17" pos:end="55:48">(<argument pos:start="55:18" pos:end="55:31">P[<literal type="number" pos:start="55:20" pos:end="55:20">1</literal>][<literal type="number" pos:start="55:23" pos:end="55:23">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="55:34" pos:end="55:47">P[<literal type="number" pos:start="55:36" pos:end="55:36">1</literal>][<literal type="number" pos:start="55:39" pos:end="55:39">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

    </block_content>}</block></if><else pos:start="57:6" pos:end="79:5">else<block pos:start="57:10" pos:end="79:5">{<block_content pos:start="59:9" pos:end="77:48">

        <macro pos:start="59:9" pos:end="59:48"><name pos:start="59:9" pos:end="59:16">CHECK_MV</name><argument_list pos:start="59:17" pos:end="59:48">(<argument pos:start="59:18" pos:end="59:31">P[<literal type="number" pos:start="59:20" pos:end="59:20">4</literal>][<literal type="number" pos:start="59:23" pos:end="59:23">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="59:34" pos:end="59:47">P[<literal type="number" pos:start="59:36" pos:end="59:36">4</literal>][<literal type="number" pos:start="59:39" pos:end="59:39">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <if_stmt pos:start="61:9" pos:end="71:9"><if pos:start="61:9" pos:end="71:9">if<condition pos:start="61:11" pos:end="61:28">(<expr pos:start="61:12" pos:end="61:27"><name pos:start="61:12" pos:end="61:15">dmin</name><operator pos:start="61:16" pos:end="61:16">&lt;</operator><name pos:start="61:17" pos:end="61:27">Z_THRESHOLD</name></expr>)</condition><block pos:start="61:29" pos:end="71:9">{<block_content pos:start="63:13" pos:end="69:24">

            <expr_stmt pos:start="63:13" pos:end="63:36"><expr pos:start="63:13" pos:end="63:35"><operator pos:start="63:13" pos:end="63:13">*</operator><name pos:start="63:14" pos:end="63:19">mx_ptr</name><operator pos:start="63:20" pos:end="63:20">=</operator> <name pos:start="63:22" pos:end="63:28"><name pos:start="63:22" pos:end="63:22">P</name><index pos:start="63:23" pos:end="63:25">[<expr pos:start="63:24" pos:end="63:24"><literal type="number" pos:start="63:24" pos:end="63:24">4</literal></expr>]</index><index pos:start="63:26" pos:end="63:28">[<expr pos:start="63:27" pos:end="63:27"><literal type="number" pos:start="63:27" pos:end="63:27">0</literal></expr>]</index></name><operator pos:start="63:29" pos:end="63:30">&gt;&gt;</operator><name pos:start="63:31" pos:end="63:35">shift</name></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:36"><expr pos:start="65:13" pos:end="65:35"><operator pos:start="65:13" pos:end="65:13">*</operator><name pos:start="65:14" pos:end="65:19">my_ptr</name><operator pos:start="65:20" pos:end="65:20">=</operator> <name pos:start="65:22" pos:end="65:28"><name pos:start="65:22" pos:end="65:22">P</name><index pos:start="65:23" pos:end="65:25">[<expr pos:start="65:24" pos:end="65:24"><literal type="number" pos:start="65:24" pos:end="65:24">4</literal></expr>]</index><index pos:start="65:26" pos:end="65:28">[<expr pos:start="65:27" pos:end="65:27"><literal type="number" pos:start="65:27" pos:end="65:27">1</literal></expr>]</index></name><operator pos:start="65:29" pos:end="65:30">&gt;&gt;</operator><name pos:start="65:31" pos:end="65:35">shift</name></expr>;</expr_stmt>

<comment type="line" pos:start="67:1" pos:end="67:16">//printf("M\n");</comment>

            <return pos:start="69:13" pos:end="69:24">return <expr pos:start="69:20" pos:end="69:23"><name pos:start="69:20" pos:end="69:23">dmin</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <macro pos:start="73:9" pos:end="73:48"><name pos:start="73:9" pos:end="73:16">CHECK_MV</name><argument_list pos:start="73:17" pos:end="73:48">(<argument pos:start="73:18" pos:end="73:31">P[<literal type="number" pos:start="73:20" pos:end="73:20">1</literal>][<literal type="number" pos:start="73:23" pos:end="73:23">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="73:34" pos:end="73:47">P[<literal type="number" pos:start="73:36" pos:end="73:36">1</literal>][<literal type="number" pos:start="73:39" pos:end="73:39">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <macro pos:start="75:9" pos:end="75:48"><name pos:start="75:9" pos:end="75:16">CHECK_MV</name><argument_list pos:start="75:17" pos:end="75:48">(<argument pos:start="75:18" pos:end="75:31">P[<literal type="number" pos:start="75:20" pos:end="75:20">2</literal>][<literal type="number" pos:start="75:23" pos:end="75:23">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="75:34" pos:end="75:47">P[<literal type="number" pos:start="75:36" pos:end="75:36">2</literal>][<literal type="number" pos:start="75:39" pos:end="75:39">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

        <macro pos:start="77:9" pos:end="77:48"><name pos:start="77:9" pos:end="77:16">CHECK_MV</name><argument_list pos:start="77:17" pos:end="77:48">(<argument pos:start="77:18" pos:end="77:31">P[<literal type="number" pos:start="77:20" pos:end="77:20">3</literal>][<literal type="number" pos:start="77:23" pos:end="77:23">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="77:34" pos:end="77:47">P[<literal type="number" pos:start="77:36" pos:end="77:36">3</literal>][<literal type="number" pos:start="77:39" pos:end="77:39">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>

    </block_content>}</block></else></if_stmt>

    <macro pos:start="81:5" pos:end="81:44"><name pos:start="81:5" pos:end="81:12">CHECK_MV</name><argument_list pos:start="81:13" pos:end="81:44">(<argument pos:start="81:14" pos:end="81:27">P[<literal type="number" pos:start="81:16" pos:end="81:16">0</literal>][<literal type="number" pos:start="81:19" pos:end="81:19">0</literal>]&gt;&gt;shift</argument>, <argument pos:start="81:30" pos:end="81:43">P[<literal type="number" pos:start="81:32" pos:end="81:32">0</literal>][<literal type="number" pos:start="81:35" pos:end="81:35">1</literal>]&gt;&gt;shift</argument>)</argument_list></macro>



<comment type="line" pos:start="85:1" pos:end="85:30">//check(best[0],best[1],0, b0)</comment>

    <if_stmt pos:start="87:5" pos:end="97:101"><if pos:start="87:5" pos:end="91:101">if<condition pos:start="87:7" pos:end="87:29">(<expr pos:start="87:8" pos:end="87:28"><name pos:start="87:8" pos:end="87:19"><name pos:start="87:8" pos:end="87:8">s</name><operator pos:start="87:9" pos:end="87:10">-&gt;</operator><name pos:start="87:11" pos:end="87:19">me_method</name></name><operator pos:start="87:20" pos:end="87:21">==</operator><name pos:start="87:22" pos:end="87:28">ME_EPZS</name></expr>)</condition><block type="pseudo" pos:start="89:9" pos:end="91:101"><block_content pos:start="89:9" pos:end="91:101">

        <expr_stmt pos:start="89:9" pos:end="91:101"><expr pos:start="89:9" pos:end="91:100"><name pos:start="89:9" pos:end="89:12">dmin</name><operator pos:start="89:13" pos:end="89:13">=</operator> <call pos:start="89:15" pos:end="91:100"><name pos:start="89:15" pos:end="89:34">small_diamond_search</name><argument_list pos:start="89:35" pos:end="91:100">(<argument pos:start="89:36" pos:end="89:36"><expr pos:start="89:36" pos:end="89:36"><name pos:start="89:36" pos:end="89:36">s</name></expr></argument>, <argument pos:start="89:39" pos:end="89:42"><expr pos:start="89:39" pos:end="89:42"><name pos:start="89:39" pos:end="89:42">best</name></expr></argument>, <argument pos:start="89:45" pos:end="89:48"><expr pos:start="89:45" pos:end="89:48"><name pos:start="89:45" pos:end="89:48">dmin</name></expr></argument>, <argument pos:start="89:51" pos:end="89:57"><expr pos:start="89:51" pos:end="89:57"><name pos:start="89:51" pos:end="89:57">new_pic</name></expr></argument>, <argument pos:start="89:60" pos:end="89:66"><expr pos:start="89:60" pos:end="89:66"><name pos:start="89:60" pos:end="89:66">old_pic</name></expr></argument>, <argument pos:start="89:69" pos:end="89:78"><expr pos:start="89:69" pos:end="89:78"><name pos:start="89:69" pos:end="89:78">pic_stride</name></expr></argument>, 

                                   <argument pos:start="91:36" pos:end="91:41"><expr pos:start="91:36" pos:end="91:41"><name pos:start="91:36" pos:end="91:41">pred_x</name></expr></argument>, <argument pos:start="91:44" pos:end="91:49"><expr pos:start="91:44" pos:end="91:49"><name pos:start="91:44" pos:end="91:49">pred_y</name></expr></argument>, <argument pos:start="91:52" pos:end="91:61"><expr pos:start="91:52" pos:end="91:61"><name pos:start="91:52" pos:end="91:61">mv_penalty</name></expr></argument>, <argument pos:start="91:64" pos:end="91:68"><expr pos:start="91:64" pos:end="91:68"><name pos:start="91:64" pos:end="91:68">quant</name></expr></argument>, <argument pos:start="91:71" pos:end="91:74"><expr pos:start="91:71" pos:end="91:74"><name pos:start="91:71" pos:end="91:74">xmin</name></expr></argument>, <argument pos:start="91:77" pos:end="91:80"><expr pos:start="91:77" pos:end="91:80"><name pos:start="91:77" pos:end="91:80">ymin</name></expr></argument>, <argument pos:start="91:83" pos:end="91:86"><expr pos:start="91:83" pos:end="91:86"><name pos:start="91:83" pos:end="91:86">xmax</name></expr></argument>, <argument pos:start="91:89" pos:end="91:92"><expr pos:start="91:89" pos:end="91:92"><name pos:start="91:89" pos:end="91:92">ymax</name></expr></argument>, <argument pos:start="91:95" pos:end="91:99"><expr pos:start="91:95" pos:end="91:99"><name pos:start="91:95" pos:end="91:99">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

    <else pos:start="93:5" pos:end="97:101">else<block type="pseudo" pos:start="95:9" pos:end="97:101"><block_content pos:start="95:9" pos:end="97:101">

        <expr_stmt pos:start="95:9" pos:end="97:101"><expr pos:start="95:9" pos:end="97:100"><name pos:start="95:9" pos:end="95:12">dmin</name><operator pos:start="95:13" pos:end="95:13">=</operator>         <call pos:start="95:23" pos:end="97:100"><name pos:start="95:23" pos:end="95:34">snake_search</name><argument_list pos:start="95:35" pos:end="97:100">(<argument pos:start="95:36" pos:end="95:36"><expr pos:start="95:36" pos:end="95:36"><name pos:start="95:36" pos:end="95:36">s</name></expr></argument>, <argument pos:start="95:39" pos:end="95:42"><expr pos:start="95:39" pos:end="95:42"><name pos:start="95:39" pos:end="95:42">best</name></expr></argument>, <argument pos:start="95:45" pos:end="95:48"><expr pos:start="95:45" pos:end="95:48"><name pos:start="95:45" pos:end="95:48">dmin</name></expr></argument>, <argument pos:start="95:51" pos:end="95:57"><expr pos:start="95:51" pos:end="95:57"><name pos:start="95:51" pos:end="95:57">new_pic</name></expr></argument>, <argument pos:start="95:60" pos:end="95:66"><expr pos:start="95:60" pos:end="95:66"><name pos:start="95:60" pos:end="95:66">old_pic</name></expr></argument>, <argument pos:start="95:69" pos:end="95:78"><expr pos:start="95:69" pos:end="95:78"><name pos:start="95:69" pos:end="95:78">pic_stride</name></expr></argument>, 

                                   <argument pos:start="97:36" pos:end="97:41"><expr pos:start="97:36" pos:end="97:41"><name pos:start="97:36" pos:end="97:41">pred_x</name></expr></argument>, <argument pos:start="97:44" pos:end="97:49"><expr pos:start="97:44" pos:end="97:49"><name pos:start="97:44" pos:end="97:49">pred_y</name></expr></argument>, <argument pos:start="97:52" pos:end="97:61"><expr pos:start="97:52" pos:end="97:61"><name pos:start="97:52" pos:end="97:61">mv_penalty</name></expr></argument>, <argument pos:start="97:64" pos:end="97:68"><expr pos:start="97:64" pos:end="97:68"><name pos:start="97:64" pos:end="97:68">quant</name></expr></argument>, <argument pos:start="97:71" pos:end="97:74"><expr pos:start="97:71" pos:end="97:74"><name pos:start="97:71" pos:end="97:74">xmin</name></expr></argument>, <argument pos:start="97:77" pos:end="97:80"><expr pos:start="97:77" pos:end="97:80"><name pos:start="97:77" pos:end="97:80">ymin</name></expr></argument>, <argument pos:start="97:83" pos:end="97:86"><expr pos:start="97:83" pos:end="97:86"><name pos:start="97:83" pos:end="97:86">xmax</name></expr></argument>, <argument pos:start="97:89" pos:end="97:92"><expr pos:start="97:89" pos:end="97:92"><name pos:start="97:89" pos:end="97:92">ymax</name></expr></argument>, <argument pos:start="97:95" pos:end="97:99"><expr pos:start="97:95" pos:end="97:99"><name pos:start="97:95" pos:end="97:99">shift</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

<comment type="line" pos:start="99:1" pos:end="99:30">//check(best[0],best[1],0, b1)</comment>

    <expr_stmt pos:start="101:5" pos:end="101:21"><expr pos:start="101:5" pos:end="101:20"><operator pos:start="101:5" pos:end="101:5">*</operator><name pos:start="101:6" pos:end="101:11">mx_ptr</name><operator pos:start="101:12" pos:end="101:12">=</operator> <name pos:start="101:14" pos:end="101:20"><name pos:start="101:14" pos:end="101:17">best</name><index pos:start="101:18" pos:end="101:20">[<expr pos:start="101:19" pos:end="101:19"><literal type="number" pos:start="101:19" pos:end="101:19">0</literal></expr>]</index></name></expr>;</expr_stmt>

    <expr_stmt pos:start="103:5" pos:end="103:21"><expr pos:start="103:5" pos:end="103:20"><operator pos:start="103:5" pos:end="103:5">*</operator><name pos:start="103:6" pos:end="103:11">my_ptr</name><operator pos:start="103:12" pos:end="103:12">=</operator> <name pos:start="103:14" pos:end="103:20"><name pos:start="103:14" pos:end="103:17">best</name><index pos:start="103:18" pos:end="103:20">[<expr pos:start="103:19" pos:end="103:19"><literal type="number" pos:start="103:19" pos:end="103:19">1</literal></expr>]</index></name></expr>;</expr_stmt>    



<comment type="line" pos:start="107:1" pos:end="107:52">//    printf("%d %d %d \n", best[0], best[1], dmin);</comment>

    <return pos:start="109:5" pos:end="109:16">return <expr pos:start="109:12" pos:end="109:15"><name pos:start="109:12" pos:end="109:15">dmin</name></expr>;</return>

</block_content>}</block></function>
</unit>
