<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/5917.c" pos:tabs="8"><function pos:start="1:1" pos:end="91:1"><type pos:start="1:1" pos:end="1:4"><name pos:start="1:1" pos:end="1:4">void</name></type> <name pos:start="1:6" pos:end="1:20">helper_ldda_asi</name><parameter_list pos:start="1:21" pos:end="1:56">(<parameter pos:start="1:22" pos:end="1:38"><decl pos:start="1:22" pos:end="1:38"><type pos:start="1:22" pos:end="1:38"><name pos:start="1:22" pos:end="1:33">target_ulong</name></type> <name pos:start="1:35" pos:end="1:38">addr</name></decl></parameter>, <parameter pos:start="1:41" pos:end="1:47"><decl pos:start="1:41" pos:end="1:47"><type pos:start="1:41" pos:end="1:47"><name pos:start="1:41" pos:end="1:43">int</name></type> <name pos:start="1:45" pos:end="1:47">asi</name></decl></parameter>, <parameter pos:start="1:50" pos:end="1:55"><decl pos:start="1:50" pos:end="1:55"><type pos:start="1:50" pos:end="1:55"><name pos:start="1:50" pos:end="1:52">int</name></type> <name pos:start="1:54" pos:end="1:55">rd</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="91:1">{<block_content pos:start="5:5" pos:end="89:5">

    <if_stmt pos:start="5:5" pos:end="13:37"><if pos:start="5:5" pos:end="13:37">if <condition pos:start="5:8" pos:end="11:42">(<expr pos:start="5:9" pos:end="11:41"><operator pos:start="5:9" pos:end="5:9">(</operator><name pos:start="5:10" pos:end="5:12">asi</name> <operator pos:start="5:14" pos:end="5:14">&lt;</operator> <literal type="number" pos:start="5:16" pos:end="5:19">0x80</literal> <operator pos:start="5:21" pos:end="5:22">&amp;&amp;</operator> <operator pos:start="5:24" pos:end="5:24">(</operator><name pos:start="5:25" pos:end="5:35"><name pos:start="5:25" pos:end="5:27">env</name><operator pos:start="5:28" pos:end="5:29">-&gt;</operator><name pos:start="5:30" pos:end="5:35">pstate</name></name> <operator pos:start="5:37" pos:end="5:37">&amp;</operator> <name pos:start="5:39" pos:end="5:45">PS_PRIV</name><operator pos:start="5:46" pos:end="5:46">)</operator> <operator pos:start="5:48" pos:end="5:49">==</operator> <literal type="number" pos:start="5:51" pos:end="5:51">0</literal><operator pos:start="5:52" pos:end="5:52">)</operator>

        <operator pos:start="7:9" pos:end="7:10">||</operator> <operator pos:start="7:12" pos:end="7:12">(</operator><operator pos:start="7:13" pos:end="7:13">(</operator><name pos:start="7:14" pos:end="7:31"><name pos:start="7:14" pos:end="7:16">env</name><operator pos:start="7:17" pos:end="7:18">-&gt;</operator><name pos:start="7:19" pos:end="7:21">def</name><operator pos:start="7:22" pos:end="7:23">-&gt;</operator><name pos:start="7:24" pos:end="7:31">features</name></name> <operator pos:start="7:33" pos:end="7:33">&amp;</operator> <name pos:start="7:35" pos:end="7:50">CPU_FEATURE_HYPV</name><operator pos:start="7:51" pos:end="7:51">)</operator>

            <operator pos:start="9:13" pos:end="9:14">&amp;&amp;</operator> <name pos:start="9:16" pos:end="9:18">asi</name> <operator pos:start="9:20" pos:end="9:21">&gt;=</operator> <literal type="number" pos:start="9:23" pos:end="9:26">0x30</literal> <operator pos:start="9:28" pos:end="9:29">&amp;&amp;</operator> <name pos:start="9:31" pos:end="9:33">asi</name> <operator pos:start="9:35" pos:end="9:35">&lt;</operator> <literal type="number" pos:start="9:37" pos:end="9:40">0x80</literal>

            <operator pos:start="11:13" pos:end="11:14">&amp;&amp;</operator> <operator pos:start="11:16" pos:end="11:16">!</operator><operator pos:start="11:17" pos:end="11:17">(</operator><name pos:start="11:18" pos:end="11:29"><name pos:start="11:18" pos:end="11:20">env</name><operator pos:start="11:21" pos:end="11:22">-&gt;</operator><name pos:start="11:23" pos:end="11:29">hpstate</name></name> <operator pos:start="11:31" pos:end="11:31">&amp;</operator> <name pos:start="11:33" pos:end="11:39">HS_PRIV</name><operator pos:start="11:40" pos:end="11:40">)</operator><operator pos:start="11:41" pos:end="11:41">)</operator></expr>)</condition><block type="pseudo" pos:start="13:9" pos:end="13:37"><block_content pos:start="13:9" pos:end="13:37">

        <expr_stmt pos:start="13:9" pos:end="13:37"><expr pos:start="13:9" pos:end="13:36"><call pos:start="13:9" pos:end="13:36"><name pos:start="13:9" pos:end="13:23">raise_exception</name><argument_list pos:start="13:24" pos:end="13:36">(<argument pos:start="13:25" pos:end="13:35"><expr pos:start="13:25" pos:end="13:35"><name pos:start="13:25" pos:end="13:35">TT_PRIV_ACT</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <switch pos:start="17:5" pos:end="89:5">switch <condition pos:start="17:12" pos:end="17:16">(<expr pos:start="17:13" pos:end="17:15"><name pos:start="17:13" pos:end="17:15">asi</name></expr>)</condition> <block pos:start="17:18" pos:end="89:5">{<block_content pos:start="19:5" pos:end="87:14">

    <case pos:start="19:5" pos:end="19:14">case <expr pos:start="19:10" pos:end="19:13"><literal type="number" pos:start="19:10" pos:end="19:13">0x24</literal></expr>:</case> <comment type="line" pos:start="19:16" pos:end="19:49">// Nucleus quad LDD 128 bit atomic</comment>

    <case pos:start="21:5" pos:end="21:14">case <expr pos:start="21:10" pos:end="21:13"><literal type="number" pos:start="21:10" pos:end="21:13">0x2c</literal></expr>:</case> <comment type="line" pos:start="21:16" pos:end="21:52">// Nucleus quad LDD 128 bit atomic LE</comment>

        <expr_stmt pos:start="23:9" pos:end="23:38"><expr pos:start="23:9" pos:end="23:37"><call pos:start="23:9" pos:end="23:37"><name pos:start="23:9" pos:end="23:26">helper_check_align</name><argument_list pos:start="23:27" pos:end="23:37">(<argument pos:start="23:28" pos:end="23:31"><expr pos:start="23:28" pos:end="23:31"><name pos:start="23:28" pos:end="23:31">addr</name></expr></argument>, <argument pos:start="23:34" pos:end="23:36"><expr pos:start="23:34" pos:end="23:36"><literal type="number" pos:start="23:34" pos:end="23:36">0xf</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="25:9" pos:end="61:9"><if pos:start="25:9" pos:end="33:9">if <condition pos:start="25:12" pos:end="25:20">(<expr pos:start="25:13" pos:end="25:19"><name pos:start="25:13" pos:end="25:14">rd</name> <operator pos:start="25:16" pos:end="25:17">==</operator> <literal type="number" pos:start="25:19" pos:end="25:19">0</literal></expr>)</condition> <block pos:start="25:22" pos:end="33:9">{<block_content pos:start="27:13" pos:end="31:41">

            <expr_stmt pos:start="27:13" pos:end="27:49"><expr pos:start="27:13" pos:end="27:48"><name pos:start="27:13" pos:end="27:25"><name pos:start="27:13" pos:end="27:15">env</name><operator pos:start="27:16" pos:end="27:17">-&gt;</operator><name pos:start="27:18" pos:end="27:22">gregs</name><index pos:start="27:23" pos:end="27:25">[<expr pos:start="27:24" pos:end="27:24"><literal type="number" pos:start="27:24" pos:end="27:24">1</literal></expr>]</index></name> <operator pos:start="27:27" pos:end="27:27">=</operator> <call pos:start="27:29" pos:end="27:48"><name pos:start="27:29" pos:end="27:38">ldq_kernel</name><argument_list pos:start="27:39" pos:end="27:48">(<argument pos:start="27:40" pos:end="27:47"><expr pos:start="27:40" pos:end="27:47"><name pos:start="27:40" pos:end="27:43">addr</name> <operator pos:start="27:45" pos:end="27:45">+</operator> <literal type="number" pos:start="27:47" pos:end="27:47">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="29:13" pos:end="31:41"><if pos:start="29:13" pos:end="31:41">if <condition pos:start="29:16" pos:end="29:28">(<expr pos:start="29:17" pos:end="29:27"><name pos:start="29:17" pos:end="29:19">asi</name> <operator pos:start="29:21" pos:end="29:22">==</operator> <literal type="number" pos:start="29:24" pos:end="29:27">0x2c</literal></expr>)</condition><block type="pseudo" pos:start="31:17" pos:end="31:41"><block_content pos:start="31:17" pos:end="31:41">

                <expr_stmt pos:start="31:17" pos:end="31:41"><expr pos:start="31:17" pos:end="31:40"><call pos:start="31:17" pos:end="31:40"><name pos:start="31:17" pos:end="31:24">bswap64s</name><argument_list pos:start="31:25" pos:end="31:40">(<argument pos:start="31:26" pos:end="31:39"><expr pos:start="31:26" pos:end="31:39"><operator pos:start="31:26" pos:end="31:26">&amp;</operator><name pos:start="31:27" pos:end="31:39"><name pos:start="31:27" pos:end="31:29">env</name><operator pos:start="31:30" pos:end="31:31">-&gt;</operator><name pos:start="31:32" pos:end="31:36">gregs</name><index pos:start="31:37" pos:end="31:39">[<expr pos:start="31:38" pos:end="31:38"><literal type="number" pos:start="31:38" pos:end="31:38">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="47:9">else if <condition pos:start="33:19" pos:end="33:26">(<expr pos:start="33:20" pos:end="33:25"><name pos:start="33:20" pos:end="33:21">rd</name> <operator pos:start="33:23" pos:end="33:23">&lt;</operator> <literal type="number" pos:start="33:25" pos:end="33:25">8</literal></expr>)</condition> <block pos:start="33:28" pos:end="47:9">{<block_content pos:start="35:13" pos:end="45:13">

            <expr_stmt pos:start="35:13" pos:end="35:46"><expr pos:start="35:13" pos:end="35:45"><name pos:start="35:13" pos:end="35:26"><name pos:start="35:13" pos:end="35:15">env</name><operator pos:start="35:16" pos:end="35:17">-&gt;</operator><name pos:start="35:18" pos:end="35:22">gregs</name><index pos:start="35:23" pos:end="35:26">[<expr pos:start="35:24" pos:end="35:25"><name pos:start="35:24" pos:end="35:25">rd</name></expr>]</index></name> <operator pos:start="35:28" pos:end="35:28">=</operator> <call pos:start="35:30" pos:end="35:45"><name pos:start="35:30" pos:end="35:39">ldq_kernel</name><argument_list pos:start="35:40" pos:end="35:45">(<argument pos:start="35:41" pos:end="35:44"><expr pos:start="35:41" pos:end="35:44"><name pos:start="35:41" pos:end="35:44">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="37:13" pos:end="37:54"><expr pos:start="37:13" pos:end="37:53"><name pos:start="37:13" pos:end="37:30"><name pos:start="37:13" pos:end="37:15">env</name><operator pos:start="37:16" pos:end="37:17">-&gt;</operator><name pos:start="37:18" pos:end="37:22">gregs</name><index pos:start="37:23" pos:end="37:30">[<expr pos:start="37:24" pos:end="37:29"><name pos:start="37:24" pos:end="37:25">rd</name> <operator pos:start="37:27" pos:end="37:27">+</operator> <literal type="number" pos:start="37:29" pos:end="37:29">1</literal></expr>]</index></name> <operator pos:start="37:32" pos:end="37:32">=</operator> <call pos:start="37:34" pos:end="37:53"><name pos:start="37:34" pos:end="37:43">ldq_kernel</name><argument_list pos:start="37:44" pos:end="37:53">(<argument pos:start="37:45" pos:end="37:52"><expr pos:start="37:45" pos:end="37:52"><name pos:start="37:45" pos:end="37:48">addr</name> <operator pos:start="37:50" pos:end="37:50">+</operator> <literal type="number" pos:start="37:52" pos:end="37:52">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="39:13" pos:end="45:13"><if pos:start="39:13" pos:end="45:13">if <condition pos:start="39:16" pos:end="39:28">(<expr pos:start="39:17" pos:end="39:27"><name pos:start="39:17" pos:end="39:19">asi</name> <operator pos:start="39:21" pos:end="39:22">==</operator> <literal type="number" pos:start="39:24" pos:end="39:27">0x2c</literal></expr>)</condition> <block pos:start="39:30" pos:end="45:13">{<block_content pos:start="41:17" pos:end="43:46">

                <expr_stmt pos:start="41:17" pos:end="41:42"><expr pos:start="41:17" pos:end="41:41"><call pos:start="41:17" pos:end="41:41"><name pos:start="41:17" pos:end="41:24">bswap64s</name><argument_list pos:start="41:25" pos:end="41:41">(<argument pos:start="41:26" pos:end="41:40"><expr pos:start="41:26" pos:end="41:40"><operator pos:start="41:26" pos:end="41:26">&amp;</operator><name pos:start="41:27" pos:end="41:40"><name pos:start="41:27" pos:end="41:29">env</name><operator pos:start="41:30" pos:end="41:31">-&gt;</operator><name pos:start="41:32" pos:end="41:36">gregs</name><index pos:start="41:37" pos:end="41:40">[<expr pos:start="41:38" pos:end="41:39"><name pos:start="41:38" pos:end="41:39">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="43:17" pos:end="43:46"><expr pos:start="43:17" pos:end="43:45"><call pos:start="43:17" pos:end="43:45"><name pos:start="43:17" pos:end="43:24">bswap64s</name><argument_list pos:start="43:25" pos:end="43:45">(<argument pos:start="43:26" pos:end="43:44"><expr pos:start="43:26" pos:end="43:44"><operator pos:start="43:26" pos:end="43:26">&amp;</operator><name pos:start="43:27" pos:end="43:44"><name pos:start="43:27" pos:end="43:29">env</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:36">gregs</name><index pos:start="43:37" pos:end="43:44">[<expr pos:start="43:38" pos:end="43:43"><name pos:start="43:38" pos:end="43:39">rd</name> <operator pos:start="43:41" pos:end="43:41">+</operator> <literal type="number" pos:start="43:43" pos:end="43:43">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></if> <else pos:start="47:11" pos:end="61:9">else <block pos:start="47:16" pos:end="61:9">{<block_content pos:start="49:13" pos:end="59:13">

            <expr_stmt pos:start="49:13" pos:end="49:48"><expr pos:start="49:13" pos:end="49:47"><name pos:start="49:13" pos:end="49:28"><name pos:start="49:13" pos:end="49:15">env</name><operator pos:start="49:16" pos:end="49:17">-&gt;</operator><name pos:start="49:18" pos:end="49:24">regwptr</name><index pos:start="49:25" pos:end="49:28">[<expr pos:start="49:26" pos:end="49:27"><name pos:start="49:26" pos:end="49:27">rd</name></expr>]</index></name> <operator pos:start="49:30" pos:end="49:30">=</operator> <call pos:start="49:32" pos:end="49:47"><name pos:start="49:32" pos:end="49:41">ldq_kernel</name><argument_list pos:start="49:42" pos:end="49:47">(<argument pos:start="49:43" pos:end="49:46"><expr pos:start="49:43" pos:end="49:46"><name pos:start="49:43" pos:end="49:46">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="51:13" pos:end="51:56"><expr pos:start="51:13" pos:end="51:55"><name pos:start="51:13" pos:end="51:32"><name pos:start="51:13" pos:end="51:15">env</name><operator pos:start="51:16" pos:end="51:17">-&gt;</operator><name pos:start="51:18" pos:end="51:24">regwptr</name><index pos:start="51:25" pos:end="51:32">[<expr pos:start="51:26" pos:end="51:31"><name pos:start="51:26" pos:end="51:27">rd</name> <operator pos:start="51:29" pos:end="51:29">+</operator> <literal type="number" pos:start="51:31" pos:end="51:31">1</literal></expr>]</index></name> <operator pos:start="51:34" pos:end="51:34">=</operator> <call pos:start="51:36" pos:end="51:55"><name pos:start="51:36" pos:end="51:45">ldq_kernel</name><argument_list pos:start="51:46" pos:end="51:55">(<argument pos:start="51:47" pos:end="51:54"><expr pos:start="51:47" pos:end="51:54"><name pos:start="51:47" pos:end="51:50">addr</name> <operator pos:start="51:52" pos:end="51:52">+</operator> <literal type="number" pos:start="51:54" pos:end="51:54">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="53:13" pos:end="59:13"><if pos:start="53:13" pos:end="59:13">if <condition pos:start="53:16" pos:end="53:28">(<expr pos:start="53:17" pos:end="53:27"><name pos:start="53:17" pos:end="53:19">asi</name> <operator pos:start="53:21" pos:end="53:22">==</operator> <literal type="number" pos:start="53:24" pos:end="53:27">0x2c</literal></expr>)</condition> <block pos:start="53:30" pos:end="59:13">{<block_content pos:start="55:17" pos:end="57:48">

                <expr_stmt pos:start="55:17" pos:end="55:44"><expr pos:start="55:17" pos:end="55:43"><call pos:start="55:17" pos:end="55:43"><name pos:start="55:17" pos:end="55:24">bswap64s</name><argument_list pos:start="55:25" pos:end="55:43">(<argument pos:start="55:26" pos:end="55:42"><expr pos:start="55:26" pos:end="55:42"><operator pos:start="55:26" pos:end="55:26">&amp;</operator><name pos:start="55:27" pos:end="55:42"><name pos:start="55:27" pos:end="55:29">env</name><operator pos:start="55:30" pos:end="55:31">-&gt;</operator><name pos:start="55:32" pos:end="55:38">regwptr</name><index pos:start="55:39" pos:end="55:42">[<expr pos:start="55:40" pos:end="55:41"><name pos:start="55:40" pos:end="55:41">rd</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="57:17" pos:end="57:48"><expr pos:start="57:17" pos:end="57:47"><call pos:start="57:17" pos:end="57:47"><name pos:start="57:17" pos:end="57:24">bswap64s</name><argument_list pos:start="57:25" pos:end="57:47">(<argument pos:start="57:26" pos:end="57:46"><expr pos:start="57:26" pos:end="57:46"><operator pos:start="57:26" pos:end="57:26">&amp;</operator><name pos:start="57:27" pos:end="57:46"><name pos:start="57:27" pos:end="57:29">env</name><operator pos:start="57:30" pos:end="57:31">-&gt;</operator><name pos:start="57:32" pos:end="57:38">regwptr</name><index pos:start="57:39" pos:end="57:46">[<expr pos:start="57:40" pos:end="57:45"><name pos:start="57:40" pos:end="57:41">rd</name> <operator pos:start="57:43" pos:end="57:43">+</operator> <literal type="number" pos:start="57:45" pos:end="57:45">1</literal></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="63:9" pos:end="63:14">break;</break>

    <default pos:start="65:5" pos:end="65:12">default:</default>

        <expr_stmt pos:start="67:9" pos:end="67:38"><expr pos:start="67:9" pos:end="67:37"><call pos:start="67:9" pos:end="67:37"><name pos:start="67:9" pos:end="67:26">helper_check_align</name><argument_list pos:start="67:27" pos:end="67:37">(<argument pos:start="67:28" pos:end="67:31"><expr pos:start="67:28" pos:end="67:31"><name pos:start="67:28" pos:end="67:31">addr</name></expr></argument>, <argument pos:start="67:34" pos:end="67:36"><expr pos:start="67:34" pos:end="67:36"><literal type="number" pos:start="67:34" pos:end="67:36">0x3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="69:9" pos:end="85:9"><if pos:start="69:9" pos:end="71:63">if <condition pos:start="69:12" pos:end="69:20">(<expr pos:start="69:13" pos:end="69:19"><name pos:start="69:13" pos:end="69:14">rd</name> <operator pos:start="69:16" pos:end="69:17">==</operator> <literal type="number" pos:start="69:19" pos:end="69:19">0</literal></expr>)</condition><block type="pseudo" pos:start="71:13" pos:end="71:63"><block_content pos:start="71:13" pos:end="71:63">

            <expr_stmt pos:start="71:13" pos:end="71:63"><expr pos:start="71:13" pos:end="71:62"><name pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:15">env</name><operator pos:start="71:16" pos:end="71:17">-&gt;</operator><name pos:start="71:18" pos:end="71:22">gregs</name><index pos:start="71:23" pos:end="71:25">[<expr pos:start="71:24" pos:end="71:24"><literal type="number" pos:start="71:24" pos:end="71:24">1</literal></expr>]</index></name> <operator pos:start="71:27" pos:end="71:27">=</operator> <call pos:start="71:29" pos:end="71:62"><name pos:start="71:29" pos:end="71:41">helper_ld_asi</name><argument_list pos:start="71:42" pos:end="71:62">(<argument pos:start="71:43" pos:end="71:50"><expr pos:start="71:43" pos:end="71:50"><name pos:start="71:43" pos:end="71:46">addr</name> <operator pos:start="71:48" pos:end="71:48">+</operator> <literal type="number" pos:start="71:50" pos:end="71:50">4</literal></expr></argument>, <argument pos:start="71:53" pos:end="71:55"><expr pos:start="71:53" pos:end="71:55"><name pos:start="71:53" pos:end="71:55">asi</name></expr></argument>, <argument pos:start="71:58" pos:end="71:58"><expr pos:start="71:58" pos:end="71:58"><literal type="number" pos:start="71:58" pos:end="71:58">4</literal></expr></argument>, <argument pos:start="71:61" pos:end="71:61"><expr pos:start="71:61" pos:end="71:61"><literal type="number" pos:start="71:61" pos:end="71:61">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <if type="elseif" pos:start="73:9" pos:end="79:9">else if <condition pos:start="73:17" pos:end="73:24">(<expr pos:start="73:18" pos:end="73:23"><name pos:start="73:18" pos:end="73:19">rd</name> <operator pos:start="73:21" pos:end="73:21">&lt;</operator> <literal type="number" pos:start="73:23" pos:end="73:23">8</literal></expr>)</condition> <block pos:start="73:26" pos:end="79:9">{<block_content pos:start="75:13" pos:end="77:68">

            <expr_stmt pos:start="75:13" pos:end="75:60"><expr pos:start="75:13" pos:end="75:59"><name pos:start="75:13" pos:end="75:26"><name pos:start="75:13" pos:end="75:15">env</name><operator pos:start="75:16" pos:end="75:17">-&gt;</operator><name pos:start="75:18" pos:end="75:22">gregs</name><index pos:start="75:23" pos:end="75:26">[<expr pos:start="75:24" pos:end="75:25"><name pos:start="75:24" pos:end="75:25">rd</name></expr>]</index></name> <operator pos:start="75:28" pos:end="75:28">=</operator> <call pos:start="75:30" pos:end="75:59"><name pos:start="75:30" pos:end="75:42">helper_ld_asi</name><argument_list pos:start="75:43" pos:end="75:59">(<argument pos:start="75:44" pos:end="75:47"><expr pos:start="75:44" pos:end="75:47"><name pos:start="75:44" pos:end="75:47">addr</name></expr></argument>, <argument pos:start="75:50" pos:end="75:52"><expr pos:start="75:50" pos:end="75:52"><name pos:start="75:50" pos:end="75:52">asi</name></expr></argument>, <argument pos:start="75:55" pos:end="75:55"><expr pos:start="75:55" pos:end="75:55"><literal type="number" pos:start="75:55" pos:end="75:55">4</literal></expr></argument>, <argument pos:start="75:58" pos:end="75:58"><expr pos:start="75:58" pos:end="75:58"><literal type="number" pos:start="75:58" pos:end="75:58">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="77:13" pos:end="77:68"><expr pos:start="77:13" pos:end="77:67"><name pos:start="77:13" pos:end="77:30"><name pos:start="77:13" pos:end="77:15">env</name><operator pos:start="77:16" pos:end="77:17">-&gt;</operator><name pos:start="77:18" pos:end="77:22">gregs</name><index pos:start="77:23" pos:end="77:30">[<expr pos:start="77:24" pos:end="77:29"><name pos:start="77:24" pos:end="77:25">rd</name> <operator pos:start="77:27" pos:end="77:27">+</operator> <literal type="number" pos:start="77:29" pos:end="77:29">1</literal></expr>]</index></name> <operator pos:start="77:32" pos:end="77:32">=</operator> <call pos:start="77:34" pos:end="77:67"><name pos:start="77:34" pos:end="77:46">helper_ld_asi</name><argument_list pos:start="77:47" pos:end="77:67">(<argument pos:start="77:48" pos:end="77:55"><expr pos:start="77:48" pos:end="77:55"><name pos:start="77:48" pos:end="77:51">addr</name> <operator pos:start="77:53" pos:end="77:53">+</operator> <literal type="number" pos:start="77:55" pos:end="77:55">4</literal></expr></argument>, <argument pos:start="77:58" pos:end="77:60"><expr pos:start="77:58" pos:end="77:60"><name pos:start="77:58" pos:end="77:60">asi</name></expr></argument>, <argument pos:start="77:63" pos:end="77:63"><expr pos:start="77:63" pos:end="77:63"><literal type="number" pos:start="77:63" pos:end="77:63">4</literal></expr></argument>, <argument pos:start="77:66" pos:end="77:66"><expr pos:start="77:66" pos:end="77:66"><literal type="number" pos:start="77:66" pos:end="77:66">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="79:11" pos:end="85:9">else <block pos:start="79:16" pos:end="85:9">{<block_content pos:start="81:13" pos:end="83:70">

            <expr_stmt pos:start="81:13" pos:end="81:62"><expr pos:start="81:13" pos:end="81:61"><name pos:start="81:13" pos:end="81:28"><name pos:start="81:13" pos:end="81:15">env</name><operator pos:start="81:16" pos:end="81:17">-&gt;</operator><name pos:start="81:18" pos:end="81:24">regwptr</name><index pos:start="81:25" pos:end="81:28">[<expr pos:start="81:26" pos:end="81:27"><name pos:start="81:26" pos:end="81:27">rd</name></expr>]</index></name> <operator pos:start="81:30" pos:end="81:30">=</operator> <call pos:start="81:32" pos:end="81:61"><name pos:start="81:32" pos:end="81:44">helper_ld_asi</name><argument_list pos:start="81:45" pos:end="81:61">(<argument pos:start="81:46" pos:end="81:49"><expr pos:start="81:46" pos:end="81:49"><name pos:start="81:46" pos:end="81:49">addr</name></expr></argument>, <argument pos:start="81:52" pos:end="81:54"><expr pos:start="81:52" pos:end="81:54"><name pos:start="81:52" pos:end="81:54">asi</name></expr></argument>, <argument pos:start="81:57" pos:end="81:57"><expr pos:start="81:57" pos:end="81:57"><literal type="number" pos:start="81:57" pos:end="81:57">4</literal></expr></argument>, <argument pos:start="81:60" pos:end="81:60"><expr pos:start="81:60" pos:end="81:60"><literal type="number" pos:start="81:60" pos:end="81:60">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="83:13" pos:end="83:70"><expr pos:start="83:13" pos:end="83:69"><name pos:start="83:13" pos:end="83:32"><name pos:start="83:13" pos:end="83:15">env</name><operator pos:start="83:16" pos:end="83:17">-&gt;</operator><name pos:start="83:18" pos:end="83:24">regwptr</name><index pos:start="83:25" pos:end="83:32">[<expr pos:start="83:26" pos:end="83:31"><name pos:start="83:26" pos:end="83:27">rd</name> <operator pos:start="83:29" pos:end="83:29">+</operator> <literal type="number" pos:start="83:31" pos:end="83:31">1</literal></expr>]</index></name> <operator pos:start="83:34" pos:end="83:34">=</operator> <call pos:start="83:36" pos:end="83:69"><name pos:start="83:36" pos:end="83:48">helper_ld_asi</name><argument_list pos:start="83:49" pos:end="83:69">(<argument pos:start="83:50" pos:end="83:57"><expr pos:start="83:50" pos:end="83:57"><name pos:start="83:50" pos:end="83:53">addr</name> <operator pos:start="83:55" pos:end="83:55">+</operator> <literal type="number" pos:start="83:57" pos:end="83:57">4</literal></expr></argument>, <argument pos:start="83:60" pos:end="83:62"><expr pos:start="83:60" pos:end="83:62"><name pos:start="83:60" pos:end="83:62">asi</name></expr></argument>, <argument pos:start="83:65" pos:end="83:65"><expr pos:start="83:65" pos:end="83:65"><literal type="number" pos:start="83:65" pos:end="83:65">4</literal></expr></argument>, <argument pos:start="83:68" pos:end="83:68"><expr pos:start="83:68" pos:end="83:68"><literal type="number" pos:start="83:68" pos:end="83:68">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="87:9" pos:end="87:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
