<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/11493.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:39">scsi_disk_emulate_mode_sense</name><parameter_list pos:start="1:40" pos:end="1:74">(<parameter pos:start="1:41" pos:end="1:56"><decl pos:start="1:41" pos:end="1:56"><type pos:start="1:41" pos:end="1:56"><name pos:start="1:41" pos:end="1:51">SCSIRequest</name> <modifier pos:start="1:53" pos:end="1:53">*</modifier></type><name pos:start="1:54" pos:end="1:56">req</name></decl></parameter>, <parameter pos:start="1:59" pos:end="1:73"><decl pos:start="1:59" pos:end="1:73"><type pos:start="1:59" pos:end="1:73"><name pos:start="1:59" pos:end="1:65">uint8_t</name> <modifier pos:start="1:67" pos:end="1:67">*</modifier></type><name pos:start="1:68" pos:end="1:73">outbuf</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:18">

    <decl_stmt pos:start="5:5" pos:end="5:64"><decl pos:start="5:5" pos:end="5:63"><type pos:start="5:5" pos:end="5:19"><name pos:start="5:5" pos:end="5:17">SCSIDiskState</name> <modifier pos:start="5:19" pos:end="5:19">*</modifier></type><name pos:start="5:20" pos:end="5:20">s</name> <init pos:start="5:22" pos:end="5:63">= <expr pos:start="5:24" pos:end="5:63"><call pos:start="5:24" pos:end="5:63"><name pos:start="5:24" pos:end="5:32">DO_UPCAST</name><argument_list pos:start="5:33" pos:end="5:63">(<argument pos:start="5:34" pos:end="5:46"><expr pos:start="5:34" pos:end="5:46"><name pos:start="5:34" pos:end="5:46">SCSIDiskState</name></expr></argument>, <argument pos:start="5:49" pos:end="5:52"><expr pos:start="5:49" pos:end="5:52"><name pos:start="5:49" pos:end="5:52">qdev</name></expr></argument>, <argument pos:start="5:55" pos:end="5:62"><expr pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:62"><name pos:start="5:55" pos:end="5:57">req</name><operator pos:start="5:58" pos:end="5:59">-&gt;</operator><name pos:start="5:60" pos:end="5:62">dev</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint64_t</name></type> <name pos:start="7:14" pos:end="7:23">nb_sectors</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:26"><decl pos:start="9:5" pos:end="9:12"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:12">page</name></decl>, <decl pos:start="9:15" pos:end="9:17"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:15" pos:end="9:17">dbd</name></decl>, <decl pos:start="9:20" pos:end="9:25"><type ref="prev" pos:start="9:5" pos:end="9:7"/><name pos:start="9:20" pos:end="9:25">buflen</name></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:15"><decl pos:start="11:5" pos:end="11:14"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:11">uint8_t</name> <modifier pos:start="11:13" pos:end="11:13">*</modifier></type><name pos:start="11:14" pos:end="11:14">p</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:31"><decl pos:start="13:5" pos:end="13:30"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">uint8_t</name></type> <name pos:start="13:13" pos:end="13:30">dev_specific_param</name></decl>;</decl_stmt>



    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:7">dbd</name> <operator pos:start="17:9" pos:end="17:9">=</operator> <name pos:start="17:11" pos:end="17:25"><name pos:start="17:11" pos:end="17:13">req</name><operator pos:start="17:14" pos:end="17:15">-&gt;</operator><name pos:start="17:16" pos:end="17:18">cmd</name><operator pos:start="17:19" pos:end="17:19">.</operator><name pos:start="17:20" pos:end="17:22">buf</name><index pos:start="17:23" pos:end="17:25">[<expr pos:start="17:24" pos:end="17:24"><literal type="number" pos:start="17:24" pos:end="17:24">1</literal></expr>]</index></name>  <operator pos:start="17:28" pos:end="17:28">&amp;</operator> <literal type="number" pos:start="17:30" pos:end="17:32">0x8</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:34"><expr pos:start="19:5" pos:end="19:33"><name pos:start="19:5" pos:end="19:8">page</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <name pos:start="19:12" pos:end="19:26"><name pos:start="19:12" pos:end="19:14">req</name><operator pos:start="19:15" pos:end="19:16">-&gt;</operator><name pos:start="19:17" pos:end="19:19">cmd</name><operator pos:start="19:20" pos:end="19:20">.</operator><name pos:start="19:21" pos:end="19:23">buf</name><index pos:start="19:24" pos:end="19:26">[<expr pos:start="19:25" pos:end="19:25"><literal type="number" pos:start="19:25" pos:end="19:25">2</literal></expr>]</index></name> <operator pos:start="19:28" pos:end="19:28">&amp;</operator> <literal type="number" pos:start="19:30" pos:end="19:33">0x3f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="21:5" pos:end="21:68"><expr pos:start="21:5" pos:end="21:67"><call pos:start="21:5" pos:end="21:67"><name pos:start="21:5" pos:end="21:11">DPRINTF</name><argument_list pos:start="21:12" pos:end="21:67">(<argument pos:start="21:13" pos:end="21:45"><expr pos:start="21:13" pos:end="21:45"><literal type="string" pos:start="21:13" pos:end="21:45">"Mode Sense (page %d, len %zd)\n"</literal></expr></argument>, <argument pos:start="21:48" pos:end="21:51"><expr pos:start="21:48" pos:end="21:51"><name pos:start="21:48" pos:end="21:51">page</name></expr></argument>, <argument pos:start="21:54" pos:end="21:66"><expr pos:start="21:54" pos:end="21:66"><name pos:start="21:54" pos:end="21:66"><name pos:start="21:54" pos:end="21:56">req</name><operator pos:start="21:57" pos:end="21:58">-&gt;</operator><name pos:start="21:59" pos:end="21:61">cmd</name><operator pos:start="21:62" pos:end="21:62">.</operator><name pos:start="21:63" pos:end="21:66">xfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:37"><expr pos:start="23:5" pos:end="23:36"><call pos:start="23:5" pos:end="23:36"><name pos:start="23:5" pos:end="23:10">memset</name><argument_list pos:start="23:11" pos:end="23:36">(<argument pos:start="23:12" pos:end="23:17"><expr pos:start="23:12" pos:end="23:17"><name pos:start="23:12" pos:end="23:17">outbuf</name></expr></argument>, <argument pos:start="23:20" pos:end="23:20"><expr pos:start="23:20" pos:end="23:20"><literal type="number" pos:start="23:20" pos:end="23:20">0</literal></expr></argument>, <argument pos:start="23:23" pos:end="23:35"><expr pos:start="23:23" pos:end="23:35"><name pos:start="23:23" pos:end="23:35"><name pos:start="23:23" pos:end="23:25">req</name><operator pos:start="23:26" pos:end="23:27">-&gt;</operator><name pos:start="23:28" pos:end="23:30">cmd</name><operator pos:start="23:31" pos:end="23:31">.</operator><name pos:start="23:32" pos:end="23:35">xfer</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:15"><expr pos:start="25:5" pos:end="25:14"><name pos:start="25:5" pos:end="25:5">p</name> <operator pos:start="25:7" pos:end="25:7">=</operator> <name pos:start="25:9" pos:end="25:14">outbuf</name></expr>;</expr_stmt>



    <if_stmt pos:start="29:5" pos:end="37:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:33">(<expr pos:start="29:9" pos:end="29:32"><call pos:start="29:9" pos:end="29:32"><name pos:start="29:9" pos:end="29:25">bdrv_is_read_only</name><argument_list pos:start="29:26" pos:end="29:32">(<argument pos:start="29:27" pos:end="29:31"><expr pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:31"><name pos:start="29:27" pos:end="29:27">s</name><operator pos:start="29:28" pos:end="29:29">-&gt;</operator><name pos:start="29:30" pos:end="29:31">bs</name></name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="29:35" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:34">

        <expr_stmt pos:start="31:9" pos:end="31:34"><expr pos:start="31:9" pos:end="31:33"><name pos:start="31:9" pos:end="31:26">dev_specific_param</name> <operator pos:start="31:28" pos:end="31:28">=</operator> <literal type="number" pos:start="31:30" pos:end="31:33">0x80</literal></expr>;</expr_stmt> <comment type="block" pos:start="31:36" pos:end="31:51">/* Readonly.  */</comment>

    </block_content>}</block></if> <else pos:start="33:7" pos:end="37:5">else <block pos:start="33:12" pos:end="37:5">{<block_content pos:start="35:9" pos:end="35:34">

        <expr_stmt pos:start="35:9" pos:end="35:34"><expr pos:start="35:9" pos:end="35:33"><name pos:start="35:9" pos:end="35:26">dev_specific_param</name> <operator pos:start="35:28" pos:end="35:28">=</operator> <literal type="number" pos:start="35:30" pos:end="35:33">0x00</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="41:5" pos:end="61:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:38">(<expr pos:start="41:9" pos:end="41:37"><name pos:start="41:9" pos:end="41:23"><name pos:start="41:9" pos:end="41:11">req</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">cmd</name><operator pos:start="41:17" pos:end="41:17">.</operator><name pos:start="41:18" pos:end="41:20">buf</name><index pos:start="41:21" pos:end="41:23">[<expr pos:start="41:22" pos:end="41:22"><literal type="number" pos:start="41:22" pos:end="41:22">0</literal></expr>]</index></name> <operator pos:start="41:25" pos:end="41:26">==</operator> <name pos:start="41:28" pos:end="41:37">MODE_SENSE</name></expr>)</condition> <block pos:start="41:40" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:15">

        <expr_stmt pos:start="43:9" pos:end="43:17"><expr pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:12"><name pos:start="43:9" pos:end="43:9">p</name><index pos:start="43:10" pos:end="43:12">[<expr pos:start="43:11" pos:end="43:11"><literal type="number" pos:start="43:11" pos:end="43:11">1</literal></expr>]</index></name> <operator pos:start="43:14" pos:end="43:14">=</operator> <literal type="number" pos:start="43:16" pos:end="43:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="43:19" pos:end="43:44">/* Default media type.  */</comment>

        <expr_stmt pos:start="45:9" pos:end="45:34"><expr pos:start="45:9" pos:end="45:33"><name pos:start="45:9" pos:end="45:12"><name pos:start="45:9" pos:end="45:9">p</name><index pos:start="45:10" pos:end="45:12">[<expr pos:start="45:11" pos:end="45:11"><literal type="number" pos:start="45:11" pos:end="45:11">2</literal></expr>]</index></name> <operator pos:start="45:14" pos:end="45:14">=</operator> <name pos:start="45:16" pos:end="45:33">dev_specific_param</name></expr>;</expr_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:17"><expr pos:start="47:9" pos:end="47:16"><name pos:start="47:9" pos:end="47:12"><name pos:start="47:9" pos:end="47:9">p</name><index pos:start="47:10" pos:end="47:12">[<expr pos:start="47:11" pos:end="47:11"><literal type="number" pos:start="47:11" pos:end="47:11">3</literal></expr>]</index></name> <operator pos:start="47:14" pos:end="47:14">=</operator> <literal type="number" pos:start="47:16" pos:end="47:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="47:19" pos:end="47:49">/* Block descriptor length.  */</comment>

        <expr_stmt pos:start="49:9" pos:end="49:15"><expr pos:start="49:9" pos:end="49:14"><name pos:start="49:9" pos:end="49:9">p</name> <operator pos:start="49:11" pos:end="49:12">+=</operator> <literal type="number" pos:start="49:14" pos:end="49:14">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="61:5">else <block pos:start="51:12" pos:end="61:5">{<block_content pos:start="53:9" pos:end="59:15"> <comment type="block" pos:start="51:14" pos:end="51:32">/* MODE_SENSE_10 */</comment>

        <expr_stmt pos:start="53:9" pos:end="53:17"><expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:12"><name pos:start="53:9" pos:end="53:9">p</name><index pos:start="53:10" pos:end="53:12">[<expr pos:start="53:11" pos:end="53:11"><literal type="number" pos:start="53:11" pos:end="53:11">2</literal></expr>]</index></name> <operator pos:start="53:14" pos:end="53:14">=</operator> <literal type="number" pos:start="53:16" pos:end="53:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="53:19" pos:end="53:44">/* Default media type.  */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:34"><expr pos:start="55:9" pos:end="55:33"><name pos:start="55:9" pos:end="55:12"><name pos:start="55:9" pos:end="55:9">p</name><index pos:start="55:10" pos:end="55:12">[<expr pos:start="55:11" pos:end="55:11"><literal type="number" pos:start="55:11" pos:end="55:11">3</literal></expr>]</index></name> <operator pos:start="55:14" pos:end="55:14">=</operator> <name pos:start="55:16" pos:end="55:33">dev_specific_param</name></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:24"><expr pos:start="57:9" pos:end="57:23"><name pos:start="57:9" pos:end="57:12"><name pos:start="57:9" pos:end="57:9">p</name><index pos:start="57:10" pos:end="57:12">[<expr pos:start="57:11" pos:end="57:11"><literal type="number" pos:start="57:11" pos:end="57:11">6</literal></expr>]</index></name> <operator pos:start="57:14" pos:end="57:14">=</operator> <name pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:16">p</name><index pos:start="57:17" pos:end="57:19">[<expr pos:start="57:18" pos:end="57:18"><literal type="number" pos:start="57:18" pos:end="57:18">7</literal></expr>]</index></name> <operator pos:start="57:21" pos:end="57:21">=</operator> <literal type="number" pos:start="57:23" pos:end="57:23">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="57:26" pos:end="57:56">/* Block descriptor length.  */</comment>

        <expr_stmt pos:start="59:9" pos:end="59:15"><expr pos:start="59:9" pos:end="59:14"><name pos:start="59:9" pos:end="59:9">p</name> <operator pos:start="59:11" pos:end="59:12">+=</operator> <literal type="number" pos:start="59:14" pos:end="59:14">8</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



    <expr_stmt pos:start="65:5" pos:end="65:42"><expr pos:start="65:5" pos:end="65:41"><call pos:start="65:5" pos:end="65:41"><name pos:start="65:5" pos:end="65:21">bdrv_get_geometry</name><argument_list pos:start="65:22" pos:end="65:41">(<argument pos:start="65:23" pos:end="65:27"><expr pos:start="65:23" pos:end="65:27"><name pos:start="65:23" pos:end="65:27"><name pos:start="65:23" pos:end="65:23">s</name><operator pos:start="65:24" pos:end="65:25">-&gt;</operator><name pos:start="65:26" pos:end="65:27">bs</name></name></expr></argument>, <argument pos:start="65:30" pos:end="65:40"><expr pos:start="65:30" pos:end="65:40"><operator pos:start="65:30" pos:end="65:30">&amp;</operator><name pos:start="65:31" pos:end="65:40">nb_sectors</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="67:5" pos:end="105:5"><if pos:start="67:5" pos:end="105:5">if <condition pos:start="67:8" pos:end="67:28">(<expr pos:start="67:9" pos:end="67:27"><operator pos:start="67:9" pos:end="67:9">(</operator><operator pos:start="67:10" pos:end="67:10">~</operator><name pos:start="67:11" pos:end="67:13">dbd</name><operator pos:start="67:14" pos:end="67:14">)</operator> <operator pos:start="67:16" pos:end="67:16">&amp;</operator> <name pos:start="67:18" pos:end="67:27">nb_sectors</name></expr>)</condition> <block pos:start="67:30" pos:end="105:5">{<block_content pos:start="69:9" pos:end="103:15">

        <if_stmt pos:start="69:9" pos:end="77:9"><if pos:start="69:9" pos:end="73:9">if <condition pos:start="69:12" pos:end="69:42">(<expr pos:start="69:13" pos:end="69:41"><name pos:start="69:13" pos:end="69:27"><name pos:start="69:13" pos:end="69:15">req</name><operator pos:start="69:16" pos:end="69:17">-&gt;</operator><name pos:start="69:18" pos:end="69:20">cmd</name><operator pos:start="69:21" pos:end="69:21">.</operator><name pos:start="69:22" pos:end="69:24">buf</name><index pos:start="69:25" pos:end="69:27">[<expr pos:start="69:26" pos:end="69:26"><literal type="number" pos:start="69:26" pos:end="69:26">0</literal></expr>]</index></name> <operator pos:start="69:29" pos:end="69:30">==</operator> <name pos:start="69:32" pos:end="69:41">MODE_SENSE</name></expr>)</condition> <block pos:start="69:44" pos:end="73:9">{<block_content pos:start="71:13" pos:end="71:26">

            <expr_stmt pos:start="71:13" pos:end="71:26"><expr pos:start="71:13" pos:end="71:25"><name pos:start="71:13" pos:end="71:21"><name pos:start="71:13" pos:end="71:18">outbuf</name><index pos:start="71:19" pos:end="71:21">[<expr pos:start="71:20" pos:end="71:20"><literal type="number" pos:start="71:20" pos:end="71:20">3</literal></expr>]</index></name> <operator pos:start="71:23" pos:end="71:23">=</operator> <literal type="number" pos:start="71:25" pos:end="71:25">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="71:28" pos:end="71:57">/* Block descriptor length  */</comment>

        </block_content>}</block></if> <else pos:start="73:11" pos:end="77:9">else <block pos:start="73:16" pos:end="77:9">{<block_content pos:start="75:13" pos:end="75:26"> <comment type="block" pos:start="73:18" pos:end="73:36">/* MODE_SENSE_10 */</comment>

            <expr_stmt pos:start="75:13" pos:end="75:26"><expr pos:start="75:13" pos:end="75:25"><name pos:start="75:13" pos:end="75:21"><name pos:start="75:13" pos:end="75:18">outbuf</name><index pos:start="75:19" pos:end="75:21">[<expr pos:start="75:20" pos:end="75:20"><literal type="number" pos:start="75:20" pos:end="75:20">7</literal></expr>]</index></name> <operator pos:start="75:23" pos:end="75:23">=</operator> <literal type="number" pos:start="75:25" pos:end="75:25">8</literal></expr>;</expr_stmt> <comment type="block" pos:start="75:28" pos:end="75:57">/* Block descriptor length  */</comment>

        </block_content>}</block></else></if_stmt>

        <expr_stmt pos:start="79:9" pos:end="79:38"><expr pos:start="79:9" pos:end="79:37"><name pos:start="79:9" pos:end="79:18">nb_sectors</name> <operator pos:start="79:20" pos:end="79:21">/=</operator> <name pos:start="79:23" pos:end="79:37"><name pos:start="79:23" pos:end="79:23">s</name><operator pos:start="79:24" pos:end="79:25">-&gt;</operator><name pos:start="79:26" pos:end="79:37">cluster_size</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="81:9" pos:end="81:21"><expr pos:start="81:9" pos:end="81:20"><name pos:start="81:9" pos:end="81:18">nb_sectors</name><operator pos:start="81:19" pos:end="81:20">--</operator></expr>;</expr_stmt>

        <if_stmt pos:start="83:9" pos:end="85:34"><if pos:start="83:9" pos:end="85:34">if <condition pos:start="83:12" pos:end="83:34">(<expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:22">nb_sectors</name> <operator pos:start="83:24" pos:end="83:24">&gt;</operator> <literal type="number" pos:start="83:26" pos:end="83:33">0xffffff</literal></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:34"><block_content pos:start="85:13" pos:end="85:34">

            <expr_stmt pos:start="85:13" pos:end="85:34"><expr pos:start="85:13" pos:end="85:33"><name pos:start="85:13" pos:end="85:22">nb_sectors</name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:33">0xffffff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:17"><expr pos:start="87:9" pos:end="87:16"><name pos:start="87:9" pos:end="87:12"><name pos:start="87:9" pos:end="87:9">p</name><index pos:start="87:10" pos:end="87:12">[<expr pos:start="87:11" pos:end="87:11"><literal type="number" pos:start="87:11" pos:end="87:11">0</literal></expr>]</index></name> <operator pos:start="87:14" pos:end="87:14">=</operator> <literal type="number" pos:start="87:16" pos:end="87:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="87:19" pos:end="87:42">/* media density code */</comment>

        <expr_stmt pos:start="89:9" pos:end="89:41"><expr pos:start="89:9" pos:end="89:40"><name pos:start="89:9" pos:end="89:12"><name pos:start="89:9" pos:end="89:9">p</name><index pos:start="89:10" pos:end="89:12">[<expr pos:start="89:11" pos:end="89:11"><literal type="number" pos:start="89:11" pos:end="89:11">1</literal></expr>]</index></name> <operator pos:start="89:14" pos:end="89:14">=</operator> <operator pos:start="89:16" pos:end="89:16">(</operator><name pos:start="89:17" pos:end="89:26">nb_sectors</name> <operator pos:start="89:28" pos:end="89:29">&gt;&gt;</operator> <literal type="number" pos:start="89:31" pos:end="89:32">16</literal><operator pos:start="89:33" pos:end="89:33">)</operator> <operator pos:start="89:35" pos:end="89:35">&amp;</operator> <literal type="number" pos:start="89:37" pos:end="89:40">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="91:9" pos:end="91:40"><expr pos:start="91:9" pos:end="91:39"><name pos:start="91:9" pos:end="91:12"><name pos:start="91:9" pos:end="91:9">p</name><index pos:start="91:10" pos:end="91:12">[<expr pos:start="91:11" pos:end="91:11"><literal type="number" pos:start="91:11" pos:end="91:11">2</literal></expr>]</index></name> <operator pos:start="91:14" pos:end="91:14">=</operator> <operator pos:start="91:16" pos:end="91:16">(</operator><name pos:start="91:17" pos:end="91:26">nb_sectors</name> <operator pos:start="91:28" pos:end="91:29">&gt;&gt;</operator> <literal type="number" pos:start="91:31" pos:end="91:31">8</literal><operator pos:start="91:32" pos:end="91:32">)</operator> <operator pos:start="91:34" pos:end="91:34">&amp;</operator> <literal type="number" pos:start="91:36" pos:end="91:39">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="93:9" pos:end="93:33"><expr pos:start="93:9" pos:end="93:32"><name pos:start="93:9" pos:end="93:12"><name pos:start="93:9" pos:end="93:9">p</name><index pos:start="93:10" pos:end="93:12">[<expr pos:start="93:11" pos:end="93:11"><literal type="number" pos:start="93:11" pos:end="93:11">3</literal></expr>]</index></name> <operator pos:start="93:14" pos:end="93:14">=</operator> <name pos:start="93:16" pos:end="93:25">nb_sectors</name> <operator pos:start="93:27" pos:end="93:27">&amp;</operator> <literal type="number" pos:start="93:29" pos:end="93:32">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:17"><expr pos:start="95:9" pos:end="95:16"><name pos:start="95:9" pos:end="95:12"><name pos:start="95:9" pos:end="95:9">p</name><index pos:start="95:10" pos:end="95:12">[<expr pos:start="95:11" pos:end="95:11"><literal type="number" pos:start="95:11" pos:end="95:11">4</literal></expr>]</index></name> <operator pos:start="95:14" pos:end="95:14">=</operator> <literal type="number" pos:start="95:16" pos:end="95:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="95:19" pos:end="95:32">/* reserved */</comment>

        <expr_stmt pos:start="97:9" pos:end="97:17"><expr pos:start="97:9" pos:end="97:16"><name pos:start="97:9" pos:end="97:12"><name pos:start="97:9" pos:end="97:9">p</name><index pos:start="97:10" pos:end="97:12">[<expr pos:start="97:11" pos:end="97:11"><literal type="number" pos:start="97:11" pos:end="97:11">5</literal></expr>]</index></name> <operator pos:start="97:14" pos:end="97:14">=</operator> <literal type="number" pos:start="97:16" pos:end="97:16">0</literal></expr>;</expr_stmt> <comment type="block" pos:start="97:19" pos:end="97:62">/* bytes 5-7 are the sector size in bytes */</comment>

        <expr_stmt pos:start="99:9" pos:end="99:35"><expr pos:start="99:9" pos:end="99:34"><name pos:start="99:9" pos:end="99:12"><name pos:start="99:9" pos:end="99:9">p</name><index pos:start="99:10" pos:end="99:12">[<expr pos:start="99:11" pos:end="99:11"><literal type="number" pos:start="99:11" pos:end="99:11">6</literal></expr>]</index></name> <operator pos:start="99:14" pos:end="99:14">=</operator> <name pos:start="99:16" pos:end="99:30"><name pos:start="99:16" pos:end="99:16">s</name><operator pos:start="99:17" pos:end="99:18">-&gt;</operator><name pos:start="99:19" pos:end="99:30">cluster_size</name></name> <operator pos:start="99:32" pos:end="99:32">*</operator> <literal type="number" pos:start="99:34" pos:end="99:34">2</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="101:9" pos:end="101:17"><expr pos:start="101:9" pos:end="101:16"><name pos:start="101:9" pos:end="101:12"><name pos:start="101:9" pos:end="101:9">p</name><index pos:start="101:10" pos:end="101:12">[<expr pos:start="101:11" pos:end="101:11"><literal type="number" pos:start="101:11" pos:end="101:11">7</literal></expr>]</index></name> <operator pos:start="101:14" pos:end="101:14">=</operator> <literal type="number" pos:start="101:16" pos:end="101:16">0</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="103:9" pos:end="103:15"><expr pos:start="103:9" pos:end="103:14"><name pos:start="103:9" pos:end="103:9">p</name> <operator pos:start="103:11" pos:end="103:12">+=</operator> <literal type="number" pos:start="103:14" pos:end="103:14">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <switch pos:start="109:5" pos:end="131:5">switch <condition pos:start="109:12" pos:end="109:17">(<expr pos:start="109:13" pos:end="109:16"><name pos:start="109:13" pos:end="109:16">page</name></expr>)</condition> <block pos:start="109:19" pos:end="131:5">{<block_content pos:start="111:5" pos:end="129:14">

    <case pos:start="111:5" pos:end="111:14">case <expr pos:start="111:10" pos:end="111:13"><literal type="number" pos:start="111:10" pos:end="111:13">0x04</literal></expr>:</case>

    <case pos:start="113:5" pos:end="113:14">case <expr pos:start="113:10" pos:end="113:13"><literal type="number" pos:start="113:10" pos:end="113:13">0x05</literal></expr>:</case>

    <case pos:start="115:5" pos:end="115:14">case <expr pos:start="115:10" pos:end="115:13"><literal type="number" pos:start="115:10" pos:end="115:13">0x08</literal></expr>:</case>

    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x2a</literal></expr>:</case>

        <expr_stmt pos:start="119:9" pos:end="119:43"><expr pos:start="119:9" pos:end="119:42"><name pos:start="119:9" pos:end="119:9">p</name> <operator pos:start="119:11" pos:end="119:12">+=</operator> <call pos:start="119:14" pos:end="119:42"><name pos:start="119:14" pos:end="119:28">mode_sense_page</name><argument_list pos:start="119:29" pos:end="119:42">(<argument pos:start="119:30" pos:end="119:32"><expr pos:start="119:30" pos:end="119:32"><name pos:start="119:30" pos:end="119:32">req</name></expr></argument>, <argument pos:start="119:35" pos:end="119:38"><expr pos:start="119:35" pos:end="119:38"><name pos:start="119:35" pos:end="119:38">page</name></expr></argument>, <argument pos:start="119:41" pos:end="119:41"><expr pos:start="119:41" pos:end="119:41"><name pos:start="119:41" pos:end="119:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="121:9" pos:end="121:14">break;</break>

    <case pos:start="123:5" pos:end="123:14">case <expr pos:start="123:10" pos:end="123:13"><literal type="number" pos:start="123:10" pos:end="123:13">0x3f</literal></expr>:</case>

        <expr_stmt pos:start="125:9" pos:end="125:43"><expr pos:start="125:9" pos:end="125:42"><name pos:start="125:9" pos:end="125:9">p</name> <operator pos:start="125:11" pos:end="125:12">+=</operator> <call pos:start="125:14" pos:end="125:42"><name pos:start="125:14" pos:end="125:28">mode_sense_page</name><argument_list pos:start="125:29" pos:end="125:42">(<argument pos:start="125:30" pos:end="125:32"><expr pos:start="125:30" pos:end="125:32"><name pos:start="125:30" pos:end="125:32">req</name></expr></argument>, <argument pos:start="125:35" pos:end="125:38"><expr pos:start="125:35" pos:end="125:38"><literal type="number" pos:start="125:35" pos:end="125:38">0x08</literal></expr></argument>, <argument pos:start="125:41" pos:end="125:41"><expr pos:start="125:41" pos:end="125:41"><name pos:start="125:41" pos:end="125:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="127:9" pos:end="127:43"><expr pos:start="127:9" pos:end="127:42"><name pos:start="127:9" pos:end="127:9">p</name> <operator pos:start="127:11" pos:end="127:12">+=</operator> <call pos:start="127:14" pos:end="127:42"><name pos:start="127:14" pos:end="127:28">mode_sense_page</name><argument_list pos:start="127:29" pos:end="127:42">(<argument pos:start="127:30" pos:end="127:32"><expr pos:start="127:30" pos:end="127:32"><name pos:start="127:30" pos:end="127:32">req</name></expr></argument>, <argument pos:start="127:35" pos:end="127:38"><expr pos:start="127:35" pos:end="127:38"><literal type="number" pos:start="127:35" pos:end="127:38">0x2a</literal></expr></argument>, <argument pos:start="127:41" pos:end="127:41"><expr pos:start="127:41" pos:end="127:41"><name pos:start="127:41" pos:end="127:41">p</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="129:9" pos:end="129:14">break;</break>

    </block_content>}</block></switch>



    <expr_stmt pos:start="135:5" pos:end="135:24"><expr pos:start="135:5" pos:end="135:23"><name pos:start="135:5" pos:end="135:10">buflen</name> <operator pos:start="135:12" pos:end="135:12">=</operator> <name pos:start="135:14" pos:end="135:14">p</name> <operator pos:start="135:16" pos:end="135:16">-</operator> <name pos:start="135:18" pos:end="135:23">outbuf</name></expr>;</expr_stmt>

    <comment type="block" pos:start="137:5" pos:end="145:7">/*

     * The mode data length field specifies the length in bytes of the

     * following data that is available to be transferred. The mode data

     * length does not include itself.

     */</comment>

    <if_stmt pos:start="147:5" pos:end="157:5"><if pos:start="147:5" pos:end="151:5">if <condition pos:start="147:8" pos:end="147:38">(<expr pos:start="147:9" pos:end="147:37"><name pos:start="147:9" pos:end="147:23"><name pos:start="147:9" pos:end="147:11">req</name><operator pos:start="147:12" pos:end="147:13">-&gt;</operator><name pos:start="147:14" pos:end="147:16">cmd</name><operator pos:start="147:17" pos:end="147:17">.</operator><name pos:start="147:18" pos:end="147:20">buf</name><index pos:start="147:21" pos:end="147:23">[<expr pos:start="147:22" pos:end="147:22"><literal type="number" pos:start="147:22" pos:end="147:22">0</literal></expr>]</index></name> <operator pos:start="147:25" pos:end="147:26">==</operator> <name pos:start="147:28" pos:end="147:37">MODE_SENSE</name></expr>)</condition> <block pos:start="147:40" pos:end="151:5">{<block_content pos:start="149:9" pos:end="149:31">

        <expr_stmt pos:start="149:9" pos:end="149:31"><expr pos:start="149:9" pos:end="149:30"><name pos:start="149:9" pos:end="149:17"><name pos:start="149:9" pos:end="149:14">outbuf</name><index pos:start="149:15" pos:end="149:17">[<expr pos:start="149:16" pos:end="149:16"><literal type="number" pos:start="149:16" pos:end="149:16">0</literal></expr>]</index></name> <operator pos:start="149:19" pos:end="149:19">=</operator> <name pos:start="149:21" pos:end="149:26">buflen</name> <operator pos:start="149:28" pos:end="149:28">-</operator> <literal type="number" pos:start="149:30" pos:end="149:30">1</literal></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="151:7" pos:end="157:5">else <block pos:start="151:12" pos:end="157:5">{<block_content pos:start="153:9" pos:end="155:40"> <comment type="block" pos:start="151:14" pos:end="151:32">/* MODE_SENSE_10 */</comment>

        <expr_stmt pos:start="153:9" pos:end="153:47"><expr pos:start="153:9" pos:end="153:46"><name pos:start="153:9" pos:end="153:17"><name pos:start="153:9" pos:end="153:14">outbuf</name><index pos:start="153:15" pos:end="153:17">[<expr pos:start="153:16" pos:end="153:16"><literal type="number" pos:start="153:16" pos:end="153:16">0</literal></expr>]</index></name> <operator pos:start="153:19" pos:end="153:19">=</operator> <operator pos:start="153:21" pos:end="153:21">(</operator><operator pos:start="153:22" pos:end="153:22">(</operator><name pos:start="153:23" pos:end="153:28">buflen</name> <operator pos:start="153:30" pos:end="153:30">-</operator> <literal type="number" pos:start="153:32" pos:end="153:32">2</literal><operator pos:start="153:33" pos:end="153:33">)</operator> <operator pos:start="153:35" pos:end="153:36">&gt;&gt;</operator> <literal type="number" pos:start="153:38" pos:end="153:38">8</literal><operator pos:start="153:39" pos:end="153:39">)</operator> <operator pos:start="153:41" pos:end="153:41">&amp;</operator> <literal type="number" pos:start="153:43" pos:end="153:46">0xff</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="155:9" pos:end="155:40"><expr pos:start="155:9" pos:end="155:39"><name pos:start="155:9" pos:end="155:17"><name pos:start="155:9" pos:end="155:14">outbuf</name><index pos:start="155:15" pos:end="155:17">[<expr pos:start="155:16" pos:end="155:16"><literal type="number" pos:start="155:16" pos:end="155:16">1</literal></expr>]</index></name> <operator pos:start="155:19" pos:end="155:19">=</operator> <operator pos:start="155:21" pos:end="155:21">(</operator><name pos:start="155:22" pos:end="155:27">buflen</name> <operator pos:start="155:29" pos:end="155:29">-</operator> <literal type="number" pos:start="155:31" pos:end="155:31">2</literal><operator pos:start="155:32" pos:end="155:32">)</operator> <operator pos:start="155:34" pos:end="155:34">&amp;</operator> <literal type="number" pos:start="155:36" pos:end="155:39">0xff</literal></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>

    <if_stmt pos:start="159:5" pos:end="161:31"><if pos:start="159:5" pos:end="161:31">if <condition pos:start="159:8" pos:end="159:31">(<expr pos:start="159:9" pos:end="159:30"><name pos:start="159:9" pos:end="159:14">buflen</name> <operator pos:start="159:16" pos:end="159:16">&gt;</operator> <name pos:start="159:18" pos:end="159:30"><name pos:start="159:18" pos:end="159:20">req</name><operator pos:start="159:21" pos:end="159:22">-&gt;</operator><name pos:start="159:23" pos:end="159:25">cmd</name><operator pos:start="159:26" pos:end="159:26">.</operator><name pos:start="159:27" pos:end="159:30">xfer</name></name></expr>)</condition><block type="pseudo" pos:start="161:9" pos:end="161:31"><block_content pos:start="161:9" pos:end="161:31">

        <expr_stmt pos:start="161:9" pos:end="161:31"><expr pos:start="161:9" pos:end="161:30"><name pos:start="161:9" pos:end="161:14">buflen</name> <operator pos:start="161:16" pos:end="161:16">=</operator> <name pos:start="161:18" pos:end="161:30"><name pos:start="161:18" pos:end="161:20">req</name><operator pos:start="161:21" pos:end="161:22">-&gt;</operator><name pos:start="161:23" pos:end="161:25">cmd</name><operator pos:start="161:26" pos:end="161:26">.</operator><name pos:start="161:27" pos:end="161:30">xfer</name></name></expr>;</expr_stmt></block_content></block></if></if_stmt>

    <return pos:start="163:5" pos:end="163:18">return <expr pos:start="163:12" pos:end="163:17"><name pos:start="163:12" pos:end="163:17">buflen</name></expr>;</return>

</block_content>}</block></function>
</unit>
