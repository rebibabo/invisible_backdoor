<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/3704.c" pos:tabs="8"><macro pos:start="1:1" pos:end="1:56"><name pos:start="1:1" pos:end="1:14">e1000e_io_read</name><argument_list pos:start="1:15" pos:end="1:56">(<argument pos:start="1:16" pos:end="1:27">void *opaque</argument>, <argument pos:start="1:30" pos:end="1:40">hwaddr addr</argument>, <argument pos:start="1:43" pos:end="1:55">unsigned size</argument>)</argument_list></macro>

<block pos:start="3:1" pos:end="43:1">{<block_content pos:start="5:5" pos:end="41:5">

    <decl_stmt pos:start="5:5" pos:end="5:28"><decl pos:start="5:5" pos:end="5:27"><type pos:start="5:5" pos:end="5:17"><name pos:start="5:5" pos:end="5:15">E1000EState</name> <modifier pos:start="5:17" pos:end="5:17">*</modifier></type><name pos:start="5:18" pos:end="5:18">s</name> <init pos:start="5:20" pos:end="5:27">= <expr pos:start="5:22" pos:end="5:27"><name pos:start="5:22" pos:end="5:27">opaque</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:17"><decl pos:start="7:5" pos:end="7:16"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:16">idx</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:17"><decl pos:start="9:5" pos:end="9:16"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint64_t</name></type> <name pos:start="9:14" pos:end="9:16">val</name></decl>;</decl_stmt>



    <switch pos:start="13:5" pos:end="41:5">switch <condition pos:start="13:12" pos:end="13:17">(<expr pos:start="13:13" pos:end="13:16"><name pos:start="13:13" pos:end="13:16">addr</name></expr>)</condition> <block pos:start="13:19" pos:end="41:5">{<block_content pos:start="15:5" pos:end="39:17">

    <case pos:start="15:5" pos:end="15:22">case <expr pos:start="15:10" pos:end="15:21"><name pos:start="15:10" pos:end="15:21">E1000_IOADDR</name></expr>:</case>

        <expr_stmt pos:start="17:9" pos:end="17:45"><expr pos:start="17:9" pos:end="17:44"><call pos:start="17:9" pos:end="17:44"><name pos:start="17:9" pos:end="17:33">trace_e1000e_io_read_addr</name><argument_list pos:start="17:34" pos:end="17:44">(<argument pos:start="17:35" pos:end="17:43"><expr pos:start="17:35" pos:end="17:43"><name pos:start="17:35" pos:end="17:43"><name pos:start="17:35" pos:end="17:35">s</name><operator pos:start="17:36" pos:end="17:37">-&gt;</operator><name pos:start="17:38" pos:end="17:43">ioaddr</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="19:9" pos:end="19:25">return <expr pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:24"><name pos:start="19:16" pos:end="19:16">s</name><operator pos:start="19:17" pos:end="19:18">-&gt;</operator><name pos:start="19:19" pos:end="19:24">ioaddr</name></name></expr>;</return>

    <case pos:start="21:5" pos:end="21:22">case <expr pos:start="21:10" pos:end="21:21"><name pos:start="21:10" pos:end="21:21">E1000_IODATA</name></expr>:</case>

        <if_stmt pos:start="23:9" pos:end="31:9"><if pos:start="23:9" pos:end="31:9">if <condition pos:start="23:12" pos:end="23:45">(<expr pos:start="23:13" pos:end="23:44"><call pos:start="23:13" pos:end="23:44"><name pos:start="23:13" pos:end="23:35">e1000e_io_get_reg_index</name><argument_list pos:start="23:36" pos:end="23:44">(<argument pos:start="23:37" pos:end="23:37"><expr pos:start="23:37" pos:end="23:37"><name pos:start="23:37" pos:end="23:37">s</name></expr></argument>, <argument pos:start="23:40" pos:end="23:43"><expr pos:start="23:40" pos:end="23:43"><operator pos:start="23:40" pos:end="23:40">&amp;</operator><name pos:start="23:41" pos:end="23:43">idx</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="23:47" pos:end="31:9">{<block_content pos:start="25:13" pos:end="29:23">

            <expr_stmt pos:start="25:13" pos:end="25:63"><expr pos:start="25:13" pos:end="25:62"><name pos:start="25:13" pos:end="25:15">val</name> <operator pos:start="25:17" pos:end="25:17">=</operator> <call pos:start="25:19" pos:end="25:62"><name pos:start="25:19" pos:end="25:34">e1000e_core_read</name><argument_list pos:start="25:35" pos:end="25:62">(<argument pos:start="25:36" pos:end="25:43"><expr pos:start="25:36" pos:end="25:43"><operator pos:start="25:36" pos:end="25:36">&amp;</operator><name pos:start="25:37" pos:end="25:43"><name pos:start="25:37" pos:end="25:37">s</name><operator pos:start="25:38" pos:end="25:39">-&gt;</operator><name pos:start="25:40" pos:end="25:43">core</name></name></expr></argument>, <argument pos:start="25:46" pos:end="25:48"><expr pos:start="25:46" pos:end="25:48"><name pos:start="25:46" pos:end="25:48">idx</name></expr></argument>, <argument pos:start="25:51" pos:end="25:61"><expr pos:start="25:51" pos:end="25:61"><sizeof pos:start="25:51" pos:end="25:61">sizeof<argument_list pos:start="25:57" pos:end="25:61">(<argument pos:start="25:58" pos:end="25:60"><expr pos:start="25:58" pos:end="25:60"><name pos:start="25:58" pos:end="25:60">val</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="27:13" pos:end="27:48"><expr pos:start="27:13" pos:end="27:47"><call pos:start="27:13" pos:end="27:47"><name pos:start="27:13" pos:end="27:37">trace_e1000e_io_read_data</name><argument_list pos:start="27:38" pos:end="27:47">(<argument pos:start="27:39" pos:end="27:41"><expr pos:start="27:39" pos:end="27:41"><name pos:start="27:39" pos:end="27:41">idx</name></expr></argument>, <argument pos:start="27:44" pos:end="27:46"><expr pos:start="27:44" pos:end="27:46"><name pos:start="27:44" pos:end="27:46">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="29:13" pos:end="29:23">return <expr pos:start="29:20" pos:end="29:22"><name pos:start="29:20" pos:end="29:22">val</name></expr>;</return>

        </block_content>}</block></if></if_stmt>

        <return pos:start="33:9" pos:end="33:17">return <expr pos:start="33:16" pos:end="33:16"><literal type="number" pos:start="33:16" pos:end="33:16">0</literal></expr>;</return>

    <default pos:start="35:5" pos:end="35:12">default:</default>

        <expr_stmt pos:start="37:9" pos:end="37:47"><expr pos:start="37:9" pos:end="37:46"><call pos:start="37:9" pos:end="37:46"><name pos:start="37:9" pos:end="37:40">trace_e1000e_wrn_io_read_unknown</name><argument_list pos:start="37:41" pos:end="37:46">(<argument pos:start="37:42" pos:end="37:45"><expr pos:start="37:42" pos:end="37:45"><name pos:start="37:42" pos:end="37:45">addr</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <return pos:start="39:9" pos:end="39:17">return <expr pos:start="39:16" pos:end="39:16"><literal type="number" pos:start="39:16" pos:end="39:16">0</literal></expr>;</return>

    </block_content>}</block></switch>

</block_content>}</block>
</unit>
