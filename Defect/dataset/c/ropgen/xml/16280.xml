<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:cpp="http://www.srcML.org/srcML/cpp" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/16280.c" pos:tabs="8"><function pos:start="1:1" pos:end="705:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:20">dec_misc</name><parameter_list pos:start="1:21" pos:end="1:53">(<parameter pos:start="1:22" pos:end="1:37"><decl pos:start="1:22" pos:end="1:37"><type pos:start="1:22" pos:end="1:37"><name pos:start="1:22" pos:end="1:33">DisasContext</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:37">dc</name></decl></parameter>, <parameter pos:start="1:40" pos:end="1:52"><decl pos:start="1:40" pos:end="1:52"><type pos:start="1:40" pos:end="1:52"><name pos:start="1:40" pos:end="1:47">uint32_t</name></type> <name pos:start="1:49" pos:end="1:52">insn</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="705:1">{<block_content pos:start="5:5" pos:end="703:5">

    <decl_stmt pos:start="5:5" pos:end="5:22"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:12"><name pos:start="5:5" pos:end="5:12">uint32_t</name></type> <name pos:start="5:14" pos:end="5:16">op0</name></decl>, <decl pos:start="5:19" pos:end="5:21"><type ref="prev" pos:start="5:5" pos:end="5:12"/><name pos:start="5:19" pos:end="5:21">op1</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="10:0"><decl pos:start="7:5" pos:end="7:15"><type pos:start="7:5" pos:end="7:12"><name pos:start="7:5" pos:end="7:12">uint32_t</name></type> <name pos:start="7:14" pos:end="7:15">ra</name></decl>, <decl pos:start="7:18" pos:end="7:19"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:18" pos:end="7:19">rb</name></decl>, <decl pos:start="7:22" pos:end="7:23"><type ref="prev" pos:start="7:5" pos:end="7:12"/><name pos:start="7:22" pos:end="7:23">rd</name></decl>;</decl_stmt>

<cpp:ifdef pos:start="9:1" pos:end="9:21">#<cpp:directive pos:start="9:2" pos:end="9:6">ifdef</cpp:directive> <name pos:start="9:8" pos:end="9:21">OPENRISC_DISAS</name></cpp:ifdef>

    <decl_stmt pos:start="11:5" pos:end="14:0"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:12"><name pos:start="11:5" pos:end="11:12">uint32_t</name></type> <name pos:start="11:14" pos:end="11:15">L6</name></decl>, <decl pos:start="11:18" pos:end="11:19"><type ref="prev" pos:start="11:5" pos:end="11:12"/><name pos:start="11:18" pos:end="11:19">K5</name></decl>;</decl_stmt>

<cpp:endif pos:start="13:1" pos:end="13:6">#<cpp:directive pos:start="13:2" pos:end="13:6">endif</cpp:directive></cpp:endif>

    <decl_stmt pos:start="15:5" pos:end="15:36"><decl pos:start="15:5" pos:end="15:16"><type pos:start="15:5" pos:end="15:12"><name pos:start="15:5" pos:end="15:12">uint32_t</name></type> <name pos:start="15:14" pos:end="15:16">I16</name></decl>, <decl pos:start="15:19" pos:end="15:20"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:19" pos:end="15:20">I5</name></decl>, <decl pos:start="15:23" pos:end="15:25"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:23" pos:end="15:25">I11</name></decl>, <decl pos:start="15:28" pos:end="15:30"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:28" pos:end="15:30">N26</name></decl>, <decl pos:start="15:33" pos:end="15:35"><type ref="prev" pos:start="15:5" pos:end="15:12"/><name pos:start="15:33" pos:end="15:35">tmp</name></decl>;</decl_stmt>

    <decl_stmt pos:start="17:5" pos:end="17:17"><decl pos:start="17:5" pos:end="17:16"><type pos:start="17:5" pos:end="17:12"><name pos:start="17:5" pos:end="17:12">TCGMemOp</name></type> <name pos:start="17:14" pos:end="17:16">mop</name></decl>;</decl_stmt>



    <expr_stmt pos:start="21:5" pos:end="21:33"><expr pos:start="21:5" pos:end="21:32"><name pos:start="21:5" pos:end="21:7">op0</name> <operator pos:start="21:9" pos:end="21:9">=</operator> <call pos:start="21:11" pos:end="21:32"><name pos:start="21:11" pos:end="21:19">extract32</name><argument_list pos:start="21:20" pos:end="21:32">(<argument pos:start="21:21" pos:end="21:24"><expr pos:start="21:21" pos:end="21:24"><name pos:start="21:21" pos:end="21:24">insn</name></expr></argument>, <argument pos:start="21:27" pos:end="21:28"><expr pos:start="21:27" pos:end="21:28"><literal type="number" pos:start="21:27" pos:end="21:28">26</literal></expr></argument>, <argument pos:start="21:31" pos:end="21:31"><expr pos:start="21:31" pos:end="21:31"><literal type="number" pos:start="21:31" pos:end="21:31">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="23:5" pos:end="23:33"><expr pos:start="23:5" pos:end="23:32"><name pos:start="23:5" pos:end="23:7">op1</name> <operator pos:start="23:9" pos:end="23:9">=</operator> <call pos:start="23:11" pos:end="23:32"><name pos:start="23:11" pos:end="23:19">extract32</name><argument_list pos:start="23:20" pos:end="23:32">(<argument pos:start="23:21" pos:end="23:24"><expr pos:start="23:21" pos:end="23:24"><name pos:start="23:21" pos:end="23:24">insn</name></expr></argument>, <argument pos:start="23:27" pos:end="23:28"><expr pos:start="23:27" pos:end="23:28"><literal type="number" pos:start="23:27" pos:end="23:28">24</literal></expr></argument>, <argument pos:start="23:31" pos:end="23:31"><expr pos:start="23:31" pos:end="23:31"><literal type="number" pos:start="23:31" pos:end="23:31">2</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:32"><expr pos:start="25:5" pos:end="25:31"><name pos:start="25:5" pos:end="25:6">ra</name> <operator pos:start="25:8" pos:end="25:8">=</operator> <call pos:start="25:10" pos:end="25:31"><name pos:start="25:10" pos:end="25:18">extract32</name><argument_list pos:start="25:19" pos:end="25:31">(<argument pos:start="25:20" pos:end="25:23"><expr pos:start="25:20" pos:end="25:23"><name pos:start="25:20" pos:end="25:23">insn</name></expr></argument>, <argument pos:start="25:26" pos:end="25:27"><expr pos:start="25:26" pos:end="25:27"><literal type="number" pos:start="25:26" pos:end="25:27">16</literal></expr></argument>, <argument pos:start="25:30" pos:end="25:30"><expr pos:start="25:30" pos:end="25:30"><literal type="number" pos:start="25:30" pos:end="25:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:32"><expr pos:start="27:5" pos:end="27:31"><name pos:start="27:5" pos:end="27:6">rb</name> <operator pos:start="27:8" pos:end="27:8">=</operator> <call pos:start="27:10" pos:end="27:31"><name pos:start="27:10" pos:end="27:18">extract32</name><argument_list pos:start="27:19" pos:end="27:31">(<argument pos:start="27:20" pos:end="27:23"><expr pos:start="27:20" pos:end="27:23"><name pos:start="27:20" pos:end="27:23">insn</name></expr></argument>, <argument pos:start="27:26" pos:end="27:27"><expr pos:start="27:26" pos:end="27:27"><literal type="number" pos:start="27:26" pos:end="27:27">11</literal></expr></argument>, <argument pos:start="27:30" pos:end="27:30"><expr pos:start="27:30" pos:end="27:30"><literal type="number" pos:start="27:30" pos:end="27:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="32:0"><expr pos:start="29:5" pos:end="29:31"><name pos:start="29:5" pos:end="29:6">rd</name> <operator pos:start="29:8" pos:end="29:8">=</operator> <call pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:18">extract32</name><argument_list pos:start="29:19" pos:end="29:31">(<argument pos:start="29:20" pos:end="29:23"><expr pos:start="29:20" pos:end="29:23"><name pos:start="29:20" pos:end="29:23">insn</name></expr></argument>, <argument pos:start="29:26" pos:end="29:27"><expr pos:start="29:26" pos:end="29:27"><literal type="number" pos:start="29:26" pos:end="29:27">21</literal></expr></argument>, <argument pos:start="29:30" pos:end="29:30"><expr pos:start="29:30" pos:end="29:30"><literal type="number" pos:start="29:30" pos:end="29:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:ifdef pos:start="31:1" pos:end="31:21">#<cpp:directive pos:start="31:2" pos:end="31:6">ifdef</cpp:directive> <name pos:start="31:8" pos:end="31:21">OPENRISC_DISAS</name></cpp:ifdef>

    <expr_stmt pos:start="33:5" pos:end="33:31"><expr pos:start="33:5" pos:end="33:30"><name pos:start="33:5" pos:end="33:6">L6</name> <operator pos:start="33:8" pos:end="33:8">=</operator> <call pos:start="33:10" pos:end="33:30"><name pos:start="33:10" pos:end="33:18">extract32</name><argument_list pos:start="33:19" pos:end="33:30">(<argument pos:start="33:20" pos:end="33:23"><expr pos:start="33:20" pos:end="33:23"><name pos:start="33:20" pos:end="33:23">insn</name></expr></argument>, <argument pos:start="33:26" pos:end="33:26"><expr pos:start="33:26" pos:end="33:26"><literal type="number" pos:start="33:26" pos:end="33:26">5</literal></expr></argument>, <argument pos:start="33:29" pos:end="33:29"><expr pos:start="33:29" pos:end="33:29"><literal type="number" pos:start="33:29" pos:end="33:29">6</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="35:5" pos:end="38:0"><expr pos:start="35:5" pos:end="35:30"><name pos:start="35:5" pos:end="35:6">K5</name> <operator pos:start="35:8" pos:end="35:8">=</operator> <call pos:start="35:10" pos:end="35:30"><name pos:start="35:10" pos:end="35:18">extract32</name><argument_list pos:start="35:19" pos:end="35:30">(<argument pos:start="35:20" pos:end="35:23"><expr pos:start="35:20" pos:end="35:23"><name pos:start="35:20" pos:end="35:23">insn</name></expr></argument>, <argument pos:start="35:26" pos:end="35:26"><expr pos:start="35:26" pos:end="35:26"><literal type="number" pos:start="35:26" pos:end="35:26">0</literal></expr></argument>, <argument pos:start="35:29" pos:end="35:29"><expr pos:start="35:29" pos:end="35:29"><literal type="number" pos:start="35:29" pos:end="35:29">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="37:1" pos:end="37:6">#<cpp:directive pos:start="37:2" pos:end="37:6">endif</cpp:directive></cpp:endif>

    <expr_stmt pos:start="39:5" pos:end="39:33"><expr pos:start="39:5" pos:end="39:32"><name pos:start="39:5" pos:end="39:7">I16</name> <operator pos:start="39:9" pos:end="39:9">=</operator> <call pos:start="39:11" pos:end="39:32"><name pos:start="39:11" pos:end="39:19">extract32</name><argument_list pos:start="39:20" pos:end="39:32">(<argument pos:start="39:21" pos:end="39:24"><expr pos:start="39:21" pos:end="39:24"><name pos:start="39:21" pos:end="39:24">insn</name></expr></argument>, <argument pos:start="39:27" pos:end="39:27"><expr pos:start="39:27" pos:end="39:27"><literal type="number" pos:start="39:27" pos:end="39:27">0</literal></expr></argument>, <argument pos:start="39:30" pos:end="39:31"><expr pos:start="39:30" pos:end="39:31"><literal type="number" pos:start="39:30" pos:end="39:31">16</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:32"><expr pos:start="41:5" pos:end="41:31"><name pos:start="41:5" pos:end="41:6">I5</name> <operator pos:start="41:8" pos:end="41:8">=</operator> <call pos:start="41:10" pos:end="41:31"><name pos:start="41:10" pos:end="41:18">extract32</name><argument_list pos:start="41:19" pos:end="41:31">(<argument pos:start="41:20" pos:end="41:23"><expr pos:start="41:20" pos:end="41:23"><name pos:start="41:20" pos:end="41:23">insn</name></expr></argument>, <argument pos:start="41:26" pos:end="41:27"><expr pos:start="41:26" pos:end="41:27"><literal type="number" pos:start="41:26" pos:end="41:27">21</literal></expr></argument>, <argument pos:start="41:30" pos:end="41:30"><expr pos:start="41:30" pos:end="41:30"><literal type="number" pos:start="41:30" pos:end="41:30">5</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:33"><expr pos:start="43:5" pos:end="43:32"><name pos:start="43:5" pos:end="43:7">I11</name> <operator pos:start="43:9" pos:end="43:9">=</operator> <call pos:start="43:11" pos:end="43:32"><name pos:start="43:11" pos:end="43:19">extract32</name><argument_list pos:start="43:20" pos:end="43:32">(<argument pos:start="43:21" pos:end="43:24"><expr pos:start="43:21" pos:end="43:24"><name pos:start="43:21" pos:end="43:24">insn</name></expr></argument>, <argument pos:start="43:27" pos:end="43:27"><expr pos:start="43:27" pos:end="43:27"><literal type="number" pos:start="43:27" pos:end="43:27">0</literal></expr></argument>, <argument pos:start="43:30" pos:end="43:31"><expr pos:start="43:30" pos:end="43:31"><literal type="number" pos:start="43:30" pos:end="43:31">11</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="45:5" pos:end="45:33"><expr pos:start="45:5" pos:end="45:32"><name pos:start="45:5" pos:end="45:7">N26</name> <operator pos:start="45:9" pos:end="45:9">=</operator> <call pos:start="45:11" pos:end="45:32"><name pos:start="45:11" pos:end="45:19">extract32</name><argument_list pos:start="45:20" pos:end="45:32">(<argument pos:start="45:21" pos:end="45:24"><expr pos:start="45:21" pos:end="45:24"><name pos:start="45:21" pos:end="45:24">insn</name></expr></argument>, <argument pos:start="45:27" pos:end="45:27"><expr pos:start="45:27" pos:end="45:27"><literal type="number" pos:start="45:27" pos:end="45:27">0</literal></expr></argument>, <argument pos:start="45:30" pos:end="45:31"><expr pos:start="45:30" pos:end="45:31"><literal type="number" pos:start="45:30" pos:end="45:31">26</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="47:5" pos:end="47:25"><expr pos:start="47:5" pos:end="47:24"><name pos:start="47:5" pos:end="47:7">tmp</name> <operator pos:start="47:9" pos:end="47:9">=</operator> <operator pos:start="47:11" pos:end="47:11">(</operator><name pos:start="47:12" pos:end="47:13">I5</name><operator pos:start="47:14" pos:end="47:15">&lt;&lt;</operator><literal type="number" pos:start="47:16" pos:end="47:17">11</literal><operator pos:start="47:18" pos:end="47:18">)</operator> <operator pos:start="47:20" pos:end="47:20">+</operator> <name pos:start="47:22" pos:end="47:24">I11</name></expr>;</expr_stmt>



    <switch pos:start="51:5" pos:end="703:5">switch <condition pos:start="51:12" pos:end="51:16">(<expr pos:start="51:13" pos:end="51:15"><name pos:start="51:13" pos:end="51:15">op0</name></expr>)</condition> <block pos:start="51:18" pos:end="703:5">{<block_content pos:start="53:5" pos:end="701:14">

    <case pos:start="53:5" pos:end="53:14">case <expr pos:start="53:10" pos:end="53:13"><literal type="number" pos:start="53:10" pos:end="53:13">0x00</literal></expr>:</case>    <comment type="block" pos:start="53:19" pos:end="53:27">/* l.j */</comment>

        <expr_stmt pos:start="55:9" pos:end="55:33"><expr pos:start="55:9" pos:end="55:32"><call pos:start="55:9" pos:end="55:32"><name pos:start="55:9" pos:end="55:15">LOG_DIS</name><argument_list pos:start="55:16" pos:end="55:32">(<argument pos:start="55:17" pos:end="55:26"><expr pos:start="55:17" pos:end="55:26"><literal type="string" pos:start="55:17" pos:end="55:26">"l.j %d\n"</literal></expr></argument>, <argument pos:start="55:29" pos:end="55:31"><expr pos:start="55:29" pos:end="55:31"><name pos:start="55:29" pos:end="55:31">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="57:9" pos:end="57:34"><expr pos:start="57:9" pos:end="57:33"><call pos:start="57:9" pos:end="57:33"><name pos:start="57:9" pos:end="57:16">gen_jump</name><argument_list pos:start="57:17" pos:end="57:33">(<argument pos:start="57:18" pos:end="57:19"><expr pos:start="57:18" pos:end="57:19"><name pos:start="57:18" pos:end="57:19">dc</name></expr></argument>, <argument pos:start="57:22" pos:end="57:24"><expr pos:start="57:22" pos:end="57:24"><name pos:start="57:22" pos:end="57:24">N26</name></expr></argument>, <argument pos:start="57:27" pos:end="57:27"><expr pos:start="57:27" pos:end="57:27"><literal type="number" pos:start="57:27" pos:end="57:27">0</literal></expr></argument>, <argument pos:start="57:30" pos:end="57:32"><expr pos:start="57:30" pos:end="57:32"><name pos:start="57:30" pos:end="57:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="59:9" pos:end="59:14">break;</break>



    <case pos:start="63:5" pos:end="63:14">case <expr pos:start="63:10" pos:end="63:13"><literal type="number" pos:start="63:10" pos:end="63:13">0x01</literal></expr>:</case>    <comment type="block" pos:start="63:19" pos:end="63:29">/* l.jal */</comment>

        <expr_stmt pos:start="65:9" pos:end="65:35"><expr pos:start="65:9" pos:end="65:34"><call pos:start="65:9" pos:end="65:34"><name pos:start="65:9" pos:end="65:15">LOG_DIS</name><argument_list pos:start="65:16" pos:end="65:34">(<argument pos:start="65:17" pos:end="65:28"><expr pos:start="65:17" pos:end="65:28"><literal type="string" pos:start="65:17" pos:end="65:28">"l.jal %d\n"</literal></expr></argument>, <argument pos:start="65:31" pos:end="65:33"><expr pos:start="65:31" pos:end="65:33"><name pos:start="65:31" pos:end="65:33">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="67:9" pos:end="67:34"><expr pos:start="67:9" pos:end="67:33"><call pos:start="67:9" pos:end="67:33"><name pos:start="67:9" pos:end="67:16">gen_jump</name><argument_list pos:start="67:17" pos:end="67:33">(<argument pos:start="67:18" pos:end="67:19"><expr pos:start="67:18" pos:end="67:19"><name pos:start="67:18" pos:end="67:19">dc</name></expr></argument>, <argument pos:start="67:22" pos:end="67:24"><expr pos:start="67:22" pos:end="67:24"><name pos:start="67:22" pos:end="67:24">N26</name></expr></argument>, <argument pos:start="67:27" pos:end="67:27"><expr pos:start="67:27" pos:end="67:27"><literal type="number" pos:start="67:27" pos:end="67:27">0</literal></expr></argument>, <argument pos:start="67:30" pos:end="67:32"><expr pos:start="67:30" pos:end="67:32"><name pos:start="67:30" pos:end="67:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="69:9" pos:end="69:14">break;</break>



    <case pos:start="73:5" pos:end="73:14">case <expr pos:start="73:10" pos:end="73:13"><literal type="number" pos:start="73:10" pos:end="73:13">0x03</literal></expr>:</case>    <comment type="block" pos:start="73:19" pos:end="73:29">/* l.bnf */</comment>

        <expr_stmt pos:start="75:9" pos:end="75:35"><expr pos:start="75:9" pos:end="75:34"><call pos:start="75:9" pos:end="75:34"><name pos:start="75:9" pos:end="75:15">LOG_DIS</name><argument_list pos:start="75:16" pos:end="75:34">(<argument pos:start="75:17" pos:end="75:28"><expr pos:start="75:17" pos:end="75:28"><literal type="string" pos:start="75:17" pos:end="75:28">"l.bnf %d\n"</literal></expr></argument>, <argument pos:start="75:31" pos:end="75:33"><expr pos:start="75:31" pos:end="75:33"><name pos:start="75:31" pos:end="75:33">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:34"><expr pos:start="77:9" pos:end="77:33"><call pos:start="77:9" pos:end="77:33"><name pos:start="77:9" pos:end="77:16">gen_jump</name><argument_list pos:start="77:17" pos:end="77:33">(<argument pos:start="77:18" pos:end="77:19"><expr pos:start="77:18" pos:end="77:19"><name pos:start="77:18" pos:end="77:19">dc</name></expr></argument>, <argument pos:start="77:22" pos:end="77:24"><expr pos:start="77:22" pos:end="77:24"><name pos:start="77:22" pos:end="77:24">N26</name></expr></argument>, <argument pos:start="77:27" pos:end="77:27"><expr pos:start="77:27" pos:end="77:27"><literal type="number" pos:start="77:27" pos:end="77:27">0</literal></expr></argument>, <argument pos:start="77:30" pos:end="77:32"><expr pos:start="77:30" pos:end="77:32"><name pos:start="77:30" pos:end="77:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="79:9" pos:end="79:14">break;</break>



    <case pos:start="83:5" pos:end="83:14">case <expr pos:start="83:10" pos:end="83:13"><literal type="number" pos:start="83:10" pos:end="83:13">0x04</literal></expr>:</case>    <comment type="block" pos:start="83:19" pos:end="83:28">/* l.bf */</comment>

        <expr_stmt pos:start="85:9" pos:end="85:34"><expr pos:start="85:9" pos:end="85:33"><call pos:start="85:9" pos:end="85:33"><name pos:start="85:9" pos:end="85:15">LOG_DIS</name><argument_list pos:start="85:16" pos:end="85:33">(<argument pos:start="85:17" pos:end="85:27"><expr pos:start="85:17" pos:end="85:27"><literal type="string" pos:start="85:17" pos:end="85:27">"l.bf %d\n"</literal></expr></argument>, <argument pos:start="85:30" pos:end="85:32"><expr pos:start="85:30" pos:end="85:32"><name pos:start="85:30" pos:end="85:32">N26</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:34"><expr pos:start="87:9" pos:end="87:33"><call pos:start="87:9" pos:end="87:33"><name pos:start="87:9" pos:end="87:16">gen_jump</name><argument_list pos:start="87:17" pos:end="87:33">(<argument pos:start="87:18" pos:end="87:19"><expr pos:start="87:18" pos:end="87:19"><name pos:start="87:18" pos:end="87:19">dc</name></expr></argument>, <argument pos:start="87:22" pos:end="87:24"><expr pos:start="87:22" pos:end="87:24"><name pos:start="87:22" pos:end="87:24">N26</name></expr></argument>, <argument pos:start="87:27" pos:end="87:27"><expr pos:start="87:27" pos:end="87:27"><literal type="number" pos:start="87:27" pos:end="87:27">0</literal></expr></argument>, <argument pos:start="87:30" pos:end="87:32"><expr pos:start="87:30" pos:end="87:32"><name pos:start="87:30" pos:end="87:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>



    <case pos:start="93:5" pos:end="93:14">case <expr pos:start="93:10" pos:end="93:13"><literal type="number" pos:start="93:10" pos:end="93:13">0x05</literal></expr>:</case>

        <switch pos:start="95:9" pos:end="111:9">switch <condition pos:start="95:16" pos:end="95:20">(<expr pos:start="95:17" pos:end="95:19"><name pos:start="95:17" pos:end="95:19">op1</name></expr>)</condition> <block pos:start="95:22" pos:end="111:9">{<block_content pos:start="97:9" pos:end="109:18">

        <case pos:start="97:9" pos:end="97:18">case <expr pos:start="97:14" pos:end="97:17"><literal type="number" pos:start="97:14" pos:end="97:17">0x01</literal></expr>:</case>    <comment type="block" pos:start="97:23" pos:end="97:33">/* l.nop */</comment>

            <expr_stmt pos:start="99:13" pos:end="99:39"><expr pos:start="99:13" pos:end="99:38"><call pos:start="99:13" pos:end="99:38"><name pos:start="99:13" pos:end="99:19">LOG_DIS</name><argument_list pos:start="99:20" pos:end="99:38">(<argument pos:start="99:21" pos:end="99:32"><expr pos:start="99:21" pos:end="99:32"><literal type="string" pos:start="99:21" pos:end="99:32">"l.nop %d\n"</literal></expr></argument>, <argument pos:start="99:35" pos:end="99:37"><expr pos:start="99:35" pos:end="99:37"><name pos:start="99:35" pos:end="99:37">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="101:13" pos:end="101:18">break;</break>



        <default pos:start="105:9" pos:end="105:16">default:</default>

            <expr_stmt pos:start="107:13" pos:end="107:38"><expr pos:start="107:13" pos:end="107:37"><call pos:start="107:13" pos:end="107:37"><name pos:start="107:13" pos:end="107:33">gen_illegal_exception</name><argument_list pos:start="107:34" pos:end="107:37">(<argument pos:start="107:35" pos:end="107:36"><expr pos:start="107:35" pos:end="107:36"><name pos:start="107:35" pos:end="107:36">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <break pos:start="109:13" pos:end="109:18">break;</break>

        </block_content>}</block></switch>

        <break pos:start="113:9" pos:end="113:14">break;</break>



    <case pos:start="117:5" pos:end="117:14">case <expr pos:start="117:10" pos:end="117:13"><literal type="number" pos:start="117:10" pos:end="117:13">0x11</literal></expr>:</case>    <comment type="block" pos:start="117:19" pos:end="117:28">/* l.jr */</comment>

        <expr_stmt pos:start="119:9" pos:end="119:34"><expr pos:start="119:9" pos:end="119:33"><call pos:start="119:9" pos:end="119:33"><name pos:start="119:9" pos:end="119:15">LOG_DIS</name><argument_list pos:start="119:16" pos:end="119:33">(<argument pos:start="119:17" pos:end="119:28"><expr pos:start="119:17" pos:end="119:28"><literal type="string" pos:start="119:17" pos:end="119:28">"l.jr r%d\n"</literal></expr></argument>, <argument pos:start="119:31" pos:end="119:32"><expr pos:start="119:31" pos:end="119:32"><name pos:start="119:31" pos:end="119:32">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <expr_stmt pos:start="121:10" pos:end="121:34"><expr pos:start="121:10" pos:end="121:33"><call pos:start="121:10" pos:end="121:33"><name pos:start="121:10" pos:end="121:17">gen_jump</name><argument_list pos:start="121:18" pos:end="121:33">(<argument pos:start="121:19" pos:end="121:20"><expr pos:start="121:19" pos:end="121:20"><name pos:start="121:19" pos:end="121:20">dc</name></expr></argument>, <argument pos:start="121:23" pos:end="121:23"><expr pos:start="121:23" pos:end="121:23"><literal type="number" pos:start="121:23" pos:end="121:23">0</literal></expr></argument>, <argument pos:start="121:26" pos:end="121:27"><expr pos:start="121:26" pos:end="121:27"><name pos:start="121:26" pos:end="121:27">rb</name></expr></argument>, <argument pos:start="121:30" pos:end="121:32"><expr pos:start="121:30" pos:end="121:32"><name pos:start="121:30" pos:end="121:32">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

         <break pos:start="123:10" pos:end="123:15">break;</break>



    <case pos:start="127:5" pos:end="127:14">case <expr pos:start="127:10" pos:end="127:13"><literal type="number" pos:start="127:10" pos:end="127:13">0x12</literal></expr>:</case>    <comment type="block" pos:start="127:19" pos:end="127:30">/* l.jalr */</comment>

        <expr_stmt pos:start="129:9" pos:end="129:36"><expr pos:start="129:9" pos:end="129:35"><call pos:start="129:9" pos:end="129:35"><name pos:start="129:9" pos:end="129:15">LOG_DIS</name><argument_list pos:start="129:16" pos:end="129:35">(<argument pos:start="129:17" pos:end="129:30"><expr pos:start="129:17" pos:end="129:30"><literal type="string" pos:start="129:17" pos:end="129:30">"l.jalr r%d\n"</literal></expr></argument>, <argument pos:start="129:33" pos:end="129:34"><expr pos:start="129:33" pos:end="129:34"><name pos:start="129:33" pos:end="129:34">rb</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="131:9" pos:end="131:33"><expr pos:start="131:9" pos:end="131:32"><call pos:start="131:9" pos:end="131:32"><name pos:start="131:9" pos:end="131:16">gen_jump</name><argument_list pos:start="131:17" pos:end="131:32">(<argument pos:start="131:18" pos:end="131:19"><expr pos:start="131:18" pos:end="131:19"><name pos:start="131:18" pos:end="131:19">dc</name></expr></argument>, <argument pos:start="131:22" pos:end="131:22"><expr pos:start="131:22" pos:end="131:22"><literal type="number" pos:start="131:22" pos:end="131:22">0</literal></expr></argument>, <argument pos:start="131:25" pos:end="131:26"><expr pos:start="131:25" pos:end="131:26"><name pos:start="131:25" pos:end="131:26">rb</name></expr></argument>, <argument pos:start="131:29" pos:end="131:31"><expr pos:start="131:29" pos:end="131:31"><name pos:start="131:29" pos:end="131:31">op0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="133:9" pos:end="133:14">break;</break>



    <case pos:start="137:5" pos:end="137:14">case <expr pos:start="137:10" pos:end="137:13"><literal type="number" pos:start="137:10" pos:end="137:13">0x13</literal></expr>:</case>    <comment type="block" pos:start="137:19" pos:end="137:30">/* l.maci */</comment>

        <expr_stmt pos:start="139:9" pos:end="139:53"><expr pos:start="139:9" pos:end="139:52"><call pos:start="139:9" pos:end="139:52"><name pos:start="139:9" pos:end="139:15">LOG_DIS</name><argument_list pos:start="139:16" pos:end="139:52">(<argument pos:start="139:17" pos:end="139:38"><expr pos:start="139:17" pos:end="139:38"><literal type="string" pos:start="139:17" pos:end="139:38">"l.maci %d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="139:41" pos:end="139:42"><expr pos:start="139:41" pos:end="139:42"><name pos:start="139:41" pos:end="139:42">I5</name></expr></argument>, <argument pos:start="139:45" pos:end="139:46"><expr pos:start="139:45" pos:end="139:46"><name pos:start="139:45" pos:end="139:46">ra</name></expr></argument>, <argument pos:start="139:49" pos:end="139:51"><expr pos:start="139:49" pos:end="139:51"><name pos:start="139:49" pos:end="139:51">I11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="141:9" pos:end="173:9">{<block_content pos:start="143:13" pos:end="171:34">

            <decl_stmt pos:start="143:13" pos:end="143:45"><decl pos:start="143:13" pos:end="143:44"><type pos:start="143:13" pos:end="143:20"><name pos:start="143:13" pos:end="143:20">TCGv_i64</name></type> <name pos:start="143:22" pos:end="143:23">t1</name> <init pos:start="143:25" pos:end="143:44">= <expr pos:start="143:27" pos:end="143:44"><call pos:start="143:27" pos:end="143:44"><name pos:start="143:27" pos:end="143:42">tcg_temp_new_i64</name><argument_list pos:start="143:43" pos:end="143:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="145:13" pos:end="145:45"><decl pos:start="145:13" pos:end="145:44"><type pos:start="145:13" pos:end="145:20"><name pos:start="145:13" pos:end="145:20">TCGv_i64</name></type> <name pos:start="145:22" pos:end="145:23">t2</name> <init pos:start="145:25" pos:end="145:44">= <expr pos:start="145:27" pos:end="145:44"><call pos:start="145:27" pos:end="145:44"><name pos:start="145:27" pos:end="145:42">tcg_temp_new_i64</name><argument_list pos:start="145:43" pos:end="145:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="147:13" pos:end="147:46"><decl pos:start="147:13" pos:end="147:45"><type pos:start="147:13" pos:end="147:20"><name pos:start="147:13" pos:end="147:20">TCGv_i32</name></type> <name pos:start="147:22" pos:end="147:24">dst</name> <init pos:start="147:26" pos:end="147:45">= <expr pos:start="147:28" pos:end="147:45"><call pos:start="147:28" pos:end="147:45"><name pos:start="147:28" pos:end="147:43">tcg_temp_new_i32</name><argument_list pos:start="147:44" pos:end="147:45">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="149:13" pos:end="149:42"><decl pos:start="149:13" pos:end="149:41"><type pos:start="149:13" pos:end="149:16"><name pos:start="149:13" pos:end="149:16">TCGv</name></type> <name pos:start="149:18" pos:end="149:21">ttmp</name> <init pos:start="149:23" pos:end="149:41">= <expr pos:start="149:25" pos:end="149:41"><call pos:start="149:25" pos:end="149:41"><name pos:start="149:25" pos:end="149:36">tcg_const_tl</name><argument_list pos:start="149:37" pos:end="149:41">(<argument pos:start="149:38" pos:end="149:40"><expr pos:start="149:38" pos:end="149:40"><name pos:start="149:38" pos:end="149:40">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="151:13" pos:end="151:49"><expr pos:start="151:13" pos:end="151:48"><call pos:start="151:13" pos:end="151:48"><name pos:start="151:13" pos:end="151:26">tcg_gen_mul_tl</name><argument_list pos:start="151:27" pos:end="151:48">(<argument pos:start="151:28" pos:end="151:30"><expr pos:start="151:28" pos:end="151:30"><name pos:start="151:28" pos:end="151:30">dst</name></expr></argument>, <argument pos:start="151:33" pos:end="151:41"><expr pos:start="151:33" pos:end="151:41"><name pos:start="151:33" pos:end="151:41"><name pos:start="151:33" pos:end="151:37">cpu_R</name><index pos:start="151:38" pos:end="151:41">[<expr pos:start="151:39" pos:end="151:40"><name pos:start="151:39" pos:end="151:40">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="151:44" pos:end="151:47"><expr pos:start="151:44" pos:end="151:47"><name pos:start="151:44" pos:end="151:47">ttmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:41"><expr pos:start="153:13" pos:end="153:40"><call pos:start="153:13" pos:end="153:40"><name pos:start="153:13" pos:end="153:31">tcg_gen_ext_i32_i64</name><argument_list pos:start="153:32" pos:end="153:40">(<argument pos:start="153:33" pos:end="153:34"><expr pos:start="153:33" pos:end="153:34"><name pos:start="153:33" pos:end="153:34">t1</name></expr></argument>, <argument pos:start="153:37" pos:end="153:39"><expr pos:start="153:37" pos:end="153:39"><name pos:start="153:37" pos:end="153:39">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="155:13" pos:end="155:53"><expr pos:start="155:13" pos:end="155:52"><call pos:start="155:13" pos:end="155:52"><name pos:start="155:13" pos:end="155:34">tcg_gen_concat_i32_i64</name><argument_list pos:start="155:35" pos:end="155:52">(<argument pos:start="155:36" pos:end="155:37"><expr pos:start="155:36" pos:end="155:37"><name pos:start="155:36" pos:end="155:37">t2</name></expr></argument>, <argument pos:start="155:40" pos:end="155:44"><expr pos:start="155:40" pos:end="155:44"><name pos:start="155:40" pos:end="155:44">maclo</name></expr></argument>, <argument pos:start="155:47" pos:end="155:51"><expr pos:start="155:47" pos:end="155:51"><name pos:start="155:47" pos:end="155:51">machi</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="157:13" pos:end="157:40"><expr pos:start="157:13" pos:end="157:39"><call pos:start="157:13" pos:end="157:39"><name pos:start="157:13" pos:end="157:27">tcg_gen_add_i64</name><argument_list pos:start="157:28" pos:end="157:39">(<argument pos:start="157:29" pos:end="157:30"><expr pos:start="157:29" pos:end="157:30"><name pos:start="157:29" pos:end="157:30">t2</name></expr></argument>, <argument pos:start="157:33" pos:end="157:34"><expr pos:start="157:33" pos:end="157:34"><name pos:start="157:33" pos:end="157:34">t2</name></expr></argument>, <argument pos:start="157:37" pos:end="157:38"><expr pos:start="157:37" pos:end="157:38"><name pos:start="157:37" pos:end="157:38">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="159:13" pos:end="159:45"><expr pos:start="159:13" pos:end="159:44"><call pos:start="159:13" pos:end="159:44"><name pos:start="159:13" pos:end="159:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="159:34" pos:end="159:44">(<argument pos:start="159:35" pos:end="159:39"><expr pos:start="159:35" pos:end="159:39"><name pos:start="159:35" pos:end="159:39">maclo</name></expr></argument>, <argument pos:start="159:42" pos:end="159:43"><expr pos:start="159:42" pos:end="159:43"><name pos:start="159:42" pos:end="159:43">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="161:13" pos:end="161:41"><expr pos:start="161:13" pos:end="161:40"><call pos:start="161:13" pos:end="161:40"><name pos:start="161:13" pos:end="161:28">tcg_gen_shri_i64</name><argument_list pos:start="161:29" pos:end="161:40">(<argument pos:start="161:30" pos:end="161:31"><expr pos:start="161:30" pos:end="161:31"><name pos:start="161:30" pos:end="161:31">t2</name></expr></argument>, <argument pos:start="161:34" pos:end="161:35"><expr pos:start="161:34" pos:end="161:35"><name pos:start="161:34" pos:end="161:35">t2</name></expr></argument>, <argument pos:start="161:38" pos:end="161:39"><expr pos:start="161:38" pos:end="161:39"><literal type="number" pos:start="161:38" pos:end="161:39">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="163:13" pos:end="163:45"><expr pos:start="163:13" pos:end="163:44"><call pos:start="163:13" pos:end="163:44"><name pos:start="163:13" pos:end="163:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="163:34" pos:end="163:44">(<argument pos:start="163:35" pos:end="163:39"><expr pos:start="163:35" pos:end="163:39"><name pos:start="163:35" pos:end="163:39">machi</name></expr></argument>, <argument pos:start="163:42" pos:end="163:43"><expr pos:start="163:42" pos:end="163:43"><name pos:start="163:42" pos:end="163:43">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="165:13" pos:end="165:35"><expr pos:start="165:13" pos:end="165:34"><call pos:start="165:13" pos:end="165:34"><name pos:start="165:13" pos:end="165:29">tcg_temp_free_i32</name><argument_list pos:start="165:30" pos:end="165:34">(<argument pos:start="165:31" pos:end="165:33"><expr pos:start="165:31" pos:end="165:33"><name pos:start="165:31" pos:end="165:33">dst</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="167:13" pos:end="167:32"><expr pos:start="167:13" pos:end="167:31"><call pos:start="167:13" pos:end="167:31"><name pos:start="167:13" pos:end="167:25">tcg_temp_free</name><argument_list pos:start="167:26" pos:end="167:31">(<argument pos:start="167:27" pos:end="167:30"><expr pos:start="167:27" pos:end="167:30"><name pos:start="167:27" pos:end="167:30">ttmp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="169:13" pos:end="169:34"><expr pos:start="169:13" pos:end="169:33"><call pos:start="169:13" pos:end="169:33"><name pos:start="169:13" pos:end="169:29">tcg_temp_free_i64</name><argument_list pos:start="169:30" pos:end="169:33">(<argument pos:start="169:31" pos:end="169:32"><expr pos:start="169:31" pos:end="169:32"><name pos:start="169:31" pos:end="169:32">t1</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="171:13" pos:end="171:34"><expr pos:start="171:13" pos:end="171:33"><call pos:start="171:13" pos:end="171:33"><name pos:start="171:13" pos:end="171:29">tcg_temp_free_i64</name><argument_list pos:start="171:30" pos:end="171:33">(<argument pos:start="171:31" pos:end="171:32"><expr pos:start="171:31" pos:end="171:32"><name pos:start="171:31" pos:end="171:32">t2</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="175:9" pos:end="175:14">break;</break>



    <case pos:start="179:5" pos:end="179:14">case <expr pos:start="179:10" pos:end="179:13"><literal type="number" pos:start="179:10" pos:end="179:13">0x09</literal></expr>:</case>    <comment type="block" pos:start="179:19" pos:end="179:29">/* l.rfe */</comment>

        <expr_stmt pos:start="181:9" pos:end="181:27"><expr pos:start="181:9" pos:end="181:26"><call pos:start="181:9" pos:end="181:26"><name pos:start="181:9" pos:end="181:15">LOG_DIS</name><argument_list pos:start="181:16" pos:end="181:26">(<argument pos:start="181:17" pos:end="181:25"><expr pos:start="181:17" pos:end="181:25"><literal type="string" pos:start="181:17" pos:end="181:25">"l.rfe\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="183:9" pos:end="205:9">{<block_content pos:start="187:13" pos:end="204:0">

<cpp:if pos:start="185:1" pos:end="185:29">#<cpp:directive pos:start="185:2" pos:end="185:3">if</cpp:directive> <expr pos:start="185:5" pos:end="185:29"><call pos:start="185:5" pos:end="185:29"><name pos:start="185:5" pos:end="185:11">defined</name><argument_list pos:start="185:12" pos:end="185:29">(<argument pos:start="185:13" pos:end="185:28"><expr pos:start="185:13" pos:end="185:28"><name pos:start="185:13" pos:end="185:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <return pos:start="187:13" pos:end="190:0">return;</return>

<cpp:else pos:start="189:1" pos:end="189:5">#<cpp:directive pos:start="189:2" pos:end="189:5">else</cpp:directive></cpp:else>

            <if_stmt pos:start="191:13" pos:end="197:13"><if pos:start="191:13" pos:end="197:13">if <condition pos:start="191:16" pos:end="191:44">(<expr pos:start="191:17" pos:end="191:43"><name pos:start="191:17" pos:end="191:27"><name pos:start="191:17" pos:end="191:18">dc</name><operator pos:start="191:19" pos:end="191:20">-&gt;</operator><name pos:start="191:21" pos:end="191:27">mem_idx</name></name> <operator pos:start="191:29" pos:end="191:30">==</operator> <name pos:start="191:32" pos:end="191:43">MMU_USER_IDX</name></expr>)</condition> <block pos:start="191:46" pos:end="197:13">{<block_content pos:start="193:17" pos:end="195:23">

                <expr_stmt pos:start="193:17" pos:end="193:42"><expr pos:start="193:17" pos:end="193:41"><call pos:start="193:17" pos:end="193:41"><name pos:start="193:17" pos:end="193:37">gen_illegal_exception</name><argument_list pos:start="193:38" pos:end="193:41">(<argument pos:start="193:39" pos:end="193:40"><expr pos:start="193:39" pos:end="193:40"><name pos:start="193:39" pos:end="193:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="195:17" pos:end="195:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="199:13" pos:end="199:36"><expr pos:start="199:13" pos:end="199:35"><call pos:start="199:13" pos:end="199:35"><name pos:start="199:13" pos:end="199:26">gen_helper_rfe</name><argument_list pos:start="199:27" pos:end="199:35">(<argument pos:start="199:28" pos:end="199:34"><expr pos:start="199:28" pos:end="199:34"><name pos:start="199:28" pos:end="199:34">cpu_env</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="201:13" pos:end="204:0"><expr pos:start="201:13" pos:end="201:37"><name pos:start="201:13" pos:end="201:22"><name pos:start="201:13" pos:end="201:14">dc</name><operator pos:start="201:15" pos:end="201:16">-&gt;</operator><name pos:start="201:17" pos:end="201:22">is_jmp</name></name> <operator pos:start="201:24" pos:end="201:24">=</operator> <name pos:start="201:26" pos:end="201:37">DISAS_UPDATE</name></expr>;</expr_stmt>

<cpp:endif pos:start="203:1" pos:end="203:6">#<cpp:directive pos:start="203:2" pos:end="203:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="207:9" pos:end="207:14">break;</break>



    <case pos:start="211:5" pos:end="211:14">case <expr pos:start="211:10" pos:end="211:13"><literal type="number" pos:start="211:10" pos:end="211:13">0x1c</literal></expr>:</case>    <comment type="block" pos:start="211:19" pos:end="211:31">/* l.cust1 */</comment>

        <expr_stmt pos:start="213:9" pos:end="213:29"><expr pos:start="213:9" pos:end="213:28"><call pos:start="213:9" pos:end="213:28"><name pos:start="213:9" pos:end="213:15">LOG_DIS</name><argument_list pos:start="213:16" pos:end="213:28">(<argument pos:start="213:17" pos:end="213:27"><expr pos:start="213:17" pos:end="213:27"><literal type="string" pos:start="213:17" pos:end="213:27">"l.cust1\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="215:9" pos:end="215:14">break;</break>



    <case pos:start="219:5" pos:end="219:14">case <expr pos:start="219:10" pos:end="219:13"><literal type="number" pos:start="219:10" pos:end="219:13">0x1d</literal></expr>:</case>    <comment type="block" pos:start="219:19" pos:end="219:31">/* l.cust2 */</comment>

        <expr_stmt pos:start="221:9" pos:end="221:29"><expr pos:start="221:9" pos:end="221:28"><call pos:start="221:9" pos:end="221:28"><name pos:start="221:9" pos:end="221:15">LOG_DIS</name><argument_list pos:start="221:16" pos:end="221:28">(<argument pos:start="221:17" pos:end="221:27"><expr pos:start="221:17" pos:end="221:27"><literal type="string" pos:start="221:17" pos:end="221:27">"l.cust2\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="223:9" pos:end="223:14">break;</break>



    <case pos:start="227:5" pos:end="227:14">case <expr pos:start="227:10" pos:end="227:13"><literal type="number" pos:start="227:10" pos:end="227:13">0x1e</literal></expr>:</case>    <comment type="block" pos:start="227:19" pos:end="227:31">/* l.cust3 */</comment>

        <expr_stmt pos:start="229:9" pos:end="229:29"><expr pos:start="229:9" pos:end="229:28"><call pos:start="229:9" pos:end="229:28"><name pos:start="229:9" pos:end="229:15">LOG_DIS</name><argument_list pos:start="229:16" pos:end="229:28">(<argument pos:start="229:17" pos:end="229:27"><expr pos:start="229:17" pos:end="229:27"><literal type="string" pos:start="229:17" pos:end="229:27">"l.cust3\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="231:9" pos:end="231:14">break;</break>



    <case pos:start="235:5" pos:end="235:14">case <expr pos:start="235:10" pos:end="235:13"><literal type="number" pos:start="235:10" pos:end="235:13">0x1f</literal></expr>:</case>    <comment type="block" pos:start="235:19" pos:end="235:31">/* l.cust4 */</comment>

        <expr_stmt pos:start="237:9" pos:end="237:29"><expr pos:start="237:9" pos:end="237:28"><call pos:start="237:9" pos:end="237:28"><name pos:start="237:9" pos:end="237:15">LOG_DIS</name><argument_list pos:start="237:16" pos:end="237:28">(<argument pos:start="237:17" pos:end="237:27"><expr pos:start="237:17" pos:end="237:27"><literal type="string" pos:start="237:17" pos:end="237:27">"l.cust4\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="239:9" pos:end="239:14">break;</break>



    <case pos:start="243:5" pos:end="243:14">case <expr pos:start="243:10" pos:end="243:13"><literal type="number" pos:start="243:10" pos:end="243:13">0x3c</literal></expr>:</case>    <comment type="block" pos:start="243:19" pos:end="243:31">/* l.cust5 */</comment>

        <expr_stmt pos:start="245:9" pos:end="245:71"><expr pos:start="245:9" pos:end="245:70"><call pos:start="245:9" pos:end="245:70"><name pos:start="245:9" pos:end="245:15">LOG_DIS</name><argument_list pos:start="245:16" pos:end="245:70">(<argument pos:start="245:17" pos:end="245:49"><expr pos:start="245:17" pos:end="245:49"><literal type="string" pos:start="245:17" pos:end="245:49">"l.cust5 r%d, r%d, r%d, %d, %d\n"</literal></expr></argument>, <argument pos:start="245:52" pos:end="245:53"><expr pos:start="245:52" pos:end="245:53"><name pos:start="245:52" pos:end="245:53">rd</name></expr></argument>, <argument pos:start="245:56" pos:end="245:57"><expr pos:start="245:56" pos:end="245:57"><name pos:start="245:56" pos:end="245:57">ra</name></expr></argument>, <argument pos:start="245:60" pos:end="245:61"><expr pos:start="245:60" pos:end="245:61"><name pos:start="245:60" pos:end="245:61">rb</name></expr></argument>, <argument pos:start="245:64" pos:end="245:65"><expr pos:start="245:64" pos:end="245:65"><name pos:start="245:64" pos:end="245:65">L6</name></expr></argument>, <argument pos:start="245:68" pos:end="245:69"><expr pos:start="245:68" pos:end="245:69"><name pos:start="245:68" pos:end="245:69">K5</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="247:9" pos:end="247:14">break;</break>



    <case pos:start="251:5" pos:end="251:14">case <expr pos:start="251:10" pos:end="251:13"><literal type="number" pos:start="251:10" pos:end="251:13">0x3d</literal></expr>:</case>    <comment type="block" pos:start="251:19" pos:end="251:31">/* l.cust6 */</comment>

        <expr_stmt pos:start="253:9" pos:end="253:29"><expr pos:start="253:9" pos:end="253:28"><call pos:start="253:9" pos:end="253:28"><name pos:start="253:9" pos:end="253:15">LOG_DIS</name><argument_list pos:start="253:16" pos:end="253:28">(<argument pos:start="253:17" pos:end="253:27"><expr pos:start="253:17" pos:end="253:27"><literal type="string" pos:start="253:17" pos:end="253:27">"l.cust6\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="255:9" pos:end="255:14">break;</break>



    <case pos:start="259:5" pos:end="259:14">case <expr pos:start="259:10" pos:end="259:13"><literal type="number" pos:start="259:10" pos:end="259:13">0x3e</literal></expr>:</case>    <comment type="block" pos:start="259:19" pos:end="259:31">/* l.cust7 */</comment>

        <expr_stmt pos:start="261:9" pos:end="261:29"><expr pos:start="261:9" pos:end="261:28"><call pos:start="261:9" pos:end="261:28"><name pos:start="261:9" pos:end="261:15">LOG_DIS</name><argument_list pos:start="261:16" pos:end="261:28">(<argument pos:start="261:17" pos:end="261:27"><expr pos:start="261:17" pos:end="261:27"><literal type="string" pos:start="261:17" pos:end="261:27">"l.cust7\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="263:9" pos:end="263:14">break;</break>



    <case pos:start="267:5" pos:end="267:14">case <expr pos:start="267:10" pos:end="267:13"><literal type="number" pos:start="267:10" pos:end="267:13">0x3f</literal></expr>:</case>    <comment type="block" pos:start="267:19" pos:end="267:31">/* l.cust8 */</comment>

        <expr_stmt pos:start="269:9" pos:end="269:29"><expr pos:start="269:9" pos:end="269:28"><call pos:start="269:9" pos:end="269:28"><name pos:start="269:9" pos:end="269:15">LOG_DIS</name><argument_list pos:start="269:16" pos:end="269:28">(<argument pos:start="269:17" pos:end="269:27"><expr pos:start="269:17" pos:end="269:27"><literal type="string" pos:start="269:17" pos:end="269:27">"l.cust8\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="271:9" pos:end="271:14">break;</break>



<comment type="block" pos:start="275:1" pos:end="275:47">/* not used yet, open it when we need or64.  */</comment>

<comment type="block" pos:start="277:1" pos:end="289:8">/*#ifdef TARGET_OPENRISC64

    case 0x20:     l.ld

        LOG_DIS("l.ld r%d, r%d, %d\n", rd, ra, I16);

        check_ob64s(dc);

        mop = MO_TEQ;

        goto do_load;

#endif*/</comment>



    <case pos:start="293:5" pos:end="293:14">case <expr pos:start="293:10" pos:end="293:13"><literal type="number" pos:start="293:10" pos:end="293:13">0x21</literal></expr>:</case>    <comment type="block" pos:start="293:19" pos:end="293:29">/* l.lwz */</comment>

        <expr_stmt pos:start="295:9" pos:end="295:53"><expr pos:start="295:9" pos:end="295:52"><call pos:start="295:9" pos:end="295:52"><name pos:start="295:9" pos:end="295:15">LOG_DIS</name><argument_list pos:start="295:16" pos:end="295:52">(<argument pos:start="295:17" pos:end="295:38"><expr pos:start="295:17" pos:end="295:38"><literal type="string" pos:start="295:17" pos:end="295:38">"l.lwz r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="295:41" pos:end="295:42"><expr pos:start="295:41" pos:end="295:42"><name pos:start="295:41" pos:end="295:42">rd</name></expr></argument>, <argument pos:start="295:45" pos:end="295:46"><expr pos:start="295:45" pos:end="295:46"><name pos:start="295:45" pos:end="295:46">ra</name></expr></argument>, <argument pos:start="295:49" pos:end="295:51"><expr pos:start="295:49" pos:end="295:51"><name pos:start="295:49" pos:end="295:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="297:9" pos:end="297:22"><expr pos:start="297:9" pos:end="297:21"><name pos:start="297:9" pos:end="297:11">mop</name> <operator pos:start="297:13" pos:end="297:13">=</operator> <name pos:start="297:15" pos:end="297:21">MO_TEUL</name></expr>;</expr_stmt>

        <goto pos:start="299:9" pos:end="299:21">goto <name pos:start="299:14" pos:end="299:20">do_load</name>;</goto>



    <case pos:start="303:5" pos:end="303:14">case <expr pos:start="303:10" pos:end="303:13"><literal type="number" pos:start="303:10" pos:end="303:13">0x22</literal></expr>:</case>    <comment type="block" pos:start="303:19" pos:end="303:29">/* l.lws */</comment>

        <expr_stmt pos:start="305:9" pos:end="305:53"><expr pos:start="305:9" pos:end="305:52"><call pos:start="305:9" pos:end="305:52"><name pos:start="305:9" pos:end="305:15">LOG_DIS</name><argument_list pos:start="305:16" pos:end="305:52">(<argument pos:start="305:17" pos:end="305:38"><expr pos:start="305:17" pos:end="305:38"><literal type="string" pos:start="305:17" pos:end="305:38">"l.lws r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="305:41" pos:end="305:42"><expr pos:start="305:41" pos:end="305:42"><name pos:start="305:41" pos:end="305:42">rd</name></expr></argument>, <argument pos:start="305:45" pos:end="305:46"><expr pos:start="305:45" pos:end="305:46"><name pos:start="305:45" pos:end="305:46">ra</name></expr></argument>, <argument pos:start="305:49" pos:end="305:51"><expr pos:start="305:49" pos:end="305:51"><name pos:start="305:49" pos:end="305:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="307:9" pos:end="307:22"><expr pos:start="307:9" pos:end="307:21"><name pos:start="307:9" pos:end="307:11">mop</name> <operator pos:start="307:13" pos:end="307:13">=</operator> <name pos:start="307:15" pos:end="307:21">MO_TESL</name></expr>;</expr_stmt>

        <goto pos:start="309:9" pos:end="309:21">goto <name pos:start="309:14" pos:end="309:20">do_load</name>;</goto>



    <case pos:start="313:5" pos:end="313:14">case <expr pos:start="313:10" pos:end="313:13"><literal type="number" pos:start="313:10" pos:end="313:13">0x23</literal></expr>:</case>    <comment type="block" pos:start="313:19" pos:end="313:29">/* l.lbz */</comment>

        <expr_stmt pos:start="315:9" pos:end="315:53"><expr pos:start="315:9" pos:end="315:52"><call pos:start="315:9" pos:end="315:52"><name pos:start="315:9" pos:end="315:15">LOG_DIS</name><argument_list pos:start="315:16" pos:end="315:52">(<argument pos:start="315:17" pos:end="315:38"><expr pos:start="315:17" pos:end="315:38"><literal type="string" pos:start="315:17" pos:end="315:38">"l.lbz r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="315:41" pos:end="315:42"><expr pos:start="315:41" pos:end="315:42"><name pos:start="315:41" pos:end="315:42">rd</name></expr></argument>, <argument pos:start="315:45" pos:end="315:46"><expr pos:start="315:45" pos:end="315:46"><name pos:start="315:45" pos:end="315:46">ra</name></expr></argument>, <argument pos:start="315:49" pos:end="315:51"><expr pos:start="315:49" pos:end="315:51"><name pos:start="315:49" pos:end="315:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="317:9" pos:end="317:20"><expr pos:start="317:9" pos:end="317:19"><name pos:start="317:9" pos:end="317:11">mop</name> <operator pos:start="317:13" pos:end="317:13">=</operator> <name pos:start="317:15" pos:end="317:19">MO_UB</name></expr>;</expr_stmt>

        <goto pos:start="319:9" pos:end="319:21">goto <name pos:start="319:14" pos:end="319:20">do_load</name>;</goto>



    <case pos:start="323:5" pos:end="323:14">case <expr pos:start="323:10" pos:end="323:13"><literal type="number" pos:start="323:10" pos:end="323:13">0x24</literal></expr>:</case>    <comment type="block" pos:start="323:19" pos:end="323:29">/* l.lbs */</comment>

        <expr_stmt pos:start="325:9" pos:end="325:53"><expr pos:start="325:9" pos:end="325:52"><call pos:start="325:9" pos:end="325:52"><name pos:start="325:9" pos:end="325:15">LOG_DIS</name><argument_list pos:start="325:16" pos:end="325:52">(<argument pos:start="325:17" pos:end="325:38"><expr pos:start="325:17" pos:end="325:38"><literal type="string" pos:start="325:17" pos:end="325:38">"l.lbs r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="325:41" pos:end="325:42"><expr pos:start="325:41" pos:end="325:42"><name pos:start="325:41" pos:end="325:42">rd</name></expr></argument>, <argument pos:start="325:45" pos:end="325:46"><expr pos:start="325:45" pos:end="325:46"><name pos:start="325:45" pos:end="325:46">ra</name></expr></argument>, <argument pos:start="325:49" pos:end="325:51"><expr pos:start="325:49" pos:end="325:51"><name pos:start="325:49" pos:end="325:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="327:9" pos:end="327:20"><expr pos:start="327:9" pos:end="327:19"><name pos:start="327:9" pos:end="327:11">mop</name> <operator pos:start="327:13" pos:end="327:13">=</operator> <name pos:start="327:15" pos:end="327:19">MO_SB</name></expr>;</expr_stmt>

        <goto pos:start="329:9" pos:end="329:21">goto <name pos:start="329:14" pos:end="329:20">do_load</name>;</goto>



    <case pos:start="333:5" pos:end="333:14">case <expr pos:start="333:10" pos:end="333:13"><literal type="number" pos:start="333:10" pos:end="333:13">0x25</literal></expr>:</case>    <comment type="block" pos:start="333:19" pos:end="333:29">/* l.lhz */</comment>

        <expr_stmt pos:start="335:9" pos:end="335:53"><expr pos:start="335:9" pos:end="335:52"><call pos:start="335:9" pos:end="335:52"><name pos:start="335:9" pos:end="335:15">LOG_DIS</name><argument_list pos:start="335:16" pos:end="335:52">(<argument pos:start="335:17" pos:end="335:38"><expr pos:start="335:17" pos:end="335:38"><literal type="string" pos:start="335:17" pos:end="335:38">"l.lhz r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="335:41" pos:end="335:42"><expr pos:start="335:41" pos:end="335:42"><name pos:start="335:41" pos:end="335:42">rd</name></expr></argument>, <argument pos:start="335:45" pos:end="335:46"><expr pos:start="335:45" pos:end="335:46"><name pos:start="335:45" pos:end="335:46">ra</name></expr></argument>, <argument pos:start="335:49" pos:end="335:51"><expr pos:start="335:49" pos:end="335:51"><name pos:start="335:49" pos:end="335:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="337:9" pos:end="337:22"><expr pos:start="337:9" pos:end="337:21"><name pos:start="337:9" pos:end="337:11">mop</name> <operator pos:start="337:13" pos:end="337:13">=</operator> <name pos:start="337:15" pos:end="337:21">MO_TEUW</name></expr>;</expr_stmt>

        <goto pos:start="339:9" pos:end="339:21">goto <name pos:start="339:14" pos:end="339:20">do_load</name>;</goto>



    <case pos:start="343:5" pos:end="343:14">case <expr pos:start="343:10" pos:end="343:13"><literal type="number" pos:start="343:10" pos:end="343:13">0x26</literal></expr>:</case>    <comment type="block" pos:start="343:19" pos:end="343:29">/* l.lhs */</comment>

        <expr_stmt pos:start="345:9" pos:end="345:53"><expr pos:start="345:9" pos:end="345:52"><call pos:start="345:9" pos:end="345:52"><name pos:start="345:9" pos:end="345:15">LOG_DIS</name><argument_list pos:start="345:16" pos:end="345:52">(<argument pos:start="345:17" pos:end="345:38"><expr pos:start="345:17" pos:end="345:38"><literal type="string" pos:start="345:17" pos:end="345:38">"l.lhs r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="345:41" pos:end="345:42"><expr pos:start="345:41" pos:end="345:42"><name pos:start="345:41" pos:end="345:42">rd</name></expr></argument>, <argument pos:start="345:45" pos:end="345:46"><expr pos:start="345:45" pos:end="345:46"><name pos:start="345:45" pos:end="345:46">ra</name></expr></argument>, <argument pos:start="345:49" pos:end="345:51"><expr pos:start="345:49" pos:end="345:51"><name pos:start="345:49" pos:end="345:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="347:9" pos:end="347:22"><expr pos:start="347:9" pos:end="347:21"><name pos:start="347:9" pos:end="347:11">mop</name> <operator pos:start="347:13" pos:end="347:13">=</operator> <name pos:start="347:15" pos:end="347:21">MO_TESW</name></expr>;</expr_stmt>

        <goto pos:start="349:9" pos:end="349:21">goto <name pos:start="349:14" pos:end="349:20">do_load</name>;</goto>



    <label pos:start="353:5" pos:end="353:12"><name pos:start="353:5" pos:end="353:11">do_load</name>:</label>

        <block pos:start="355:9" pos:end="365:9">{<block_content pos:start="357:13" pos:end="363:30">

            <decl_stmt pos:start="357:13" pos:end="357:37"><decl pos:start="357:13" pos:end="357:36"><type pos:start="357:13" pos:end="357:16"><name pos:start="357:13" pos:end="357:16">TCGv</name></type> <name pos:start="357:18" pos:end="357:19">t0</name> <init pos:start="357:21" pos:end="357:36">= <expr pos:start="357:23" pos:end="357:36"><call pos:start="357:23" pos:end="357:36"><name pos:start="357:23" pos:end="357:34">tcg_temp_new</name><argument_list pos:start="357:35" pos:end="357:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="359:13" pos:end="359:65"><expr pos:start="359:13" pos:end="359:64"><call pos:start="359:13" pos:end="359:64"><name pos:start="359:13" pos:end="359:27">tcg_gen_addi_tl</name><argument_list pos:start="359:28" pos:end="359:64">(<argument pos:start="359:29" pos:end="359:30"><expr pos:start="359:29" pos:end="359:30"><name pos:start="359:29" pos:end="359:30">t0</name></expr></argument>, <argument pos:start="359:33" pos:end="359:41"><expr pos:start="359:33" pos:end="359:41"><name pos:start="359:33" pos:end="359:41"><name pos:start="359:33" pos:end="359:37">cpu_R</name><index pos:start="359:38" pos:end="359:41">[<expr pos:start="359:39" pos:end="359:40"><name pos:start="359:39" pos:end="359:40">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="359:44" pos:end="359:63"><expr pos:start="359:44" pos:end="359:63"><call pos:start="359:44" pos:end="359:63"><name pos:start="359:44" pos:end="359:54">sign_extend</name><argument_list pos:start="359:55" pos:end="359:63">(<argument pos:start="359:56" pos:end="359:58"><expr pos:start="359:56" pos:end="359:58"><name pos:start="359:56" pos:end="359:58">I16</name></expr></argument>, <argument pos:start="359:61" pos:end="359:62"><expr pos:start="359:61" pos:end="359:62"><literal type="number" pos:start="359:61" pos:end="359:62">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="361:13" pos:end="361:64"><expr pos:start="361:13" pos:end="361:63"><call pos:start="361:13" pos:end="361:63"><name pos:start="361:13" pos:end="361:30">tcg_gen_qemu_ld_tl</name><argument_list pos:start="361:31" pos:end="361:63">(<argument pos:start="361:32" pos:end="361:40"><expr pos:start="361:32" pos:end="361:40"><name pos:start="361:32" pos:end="361:40"><name pos:start="361:32" pos:end="361:36">cpu_R</name><index pos:start="361:37" pos:end="361:40">[<expr pos:start="361:38" pos:end="361:39"><name pos:start="361:38" pos:end="361:39">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="361:43" pos:end="361:44"><expr pos:start="361:43" pos:end="361:44"><name pos:start="361:43" pos:end="361:44">t0</name></expr></argument>, <argument pos:start="361:47" pos:end="361:57"><expr pos:start="361:47" pos:end="361:57"><name pos:start="361:47" pos:end="361:57"><name pos:start="361:47" pos:end="361:48">dc</name><operator pos:start="361:49" pos:end="361:50">-&gt;</operator><name pos:start="361:51" pos:end="361:57">mem_idx</name></name></expr></argument>, <argument pos:start="361:60" pos:end="361:62"><expr pos:start="361:60" pos:end="361:62"><name pos:start="361:60" pos:end="361:62">mop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="363:13" pos:end="363:30"><expr pos:start="363:13" pos:end="363:29"><call pos:start="363:13" pos:end="363:29"><name pos:start="363:13" pos:end="363:25">tcg_temp_free</name><argument_list pos:start="363:26" pos:end="363:29">(<argument pos:start="363:27" pos:end="363:28"><expr pos:start="363:27" pos:end="363:28"><name pos:start="363:27" pos:end="363:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="367:9" pos:end="367:14">break;</break>



    <case pos:start="371:5" pos:end="371:14">case <expr pos:start="371:10" pos:end="371:13"><literal type="number" pos:start="371:10" pos:end="371:13">0x27</literal></expr>:</case>    <comment type="block" pos:start="371:19" pos:end="371:30">/* l.addi */</comment>

        <expr_stmt pos:start="373:9" pos:end="373:54"><expr pos:start="373:9" pos:end="373:53"><call pos:start="373:9" pos:end="373:53"><name pos:start="373:9" pos:end="373:15">LOG_DIS</name><argument_list pos:start="373:16" pos:end="373:53">(<argument pos:start="373:17" pos:end="373:39"><expr pos:start="373:17" pos:end="373:39"><literal type="string" pos:start="373:17" pos:end="373:39">"l.addi r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="373:42" pos:end="373:43"><expr pos:start="373:42" pos:end="373:43"><name pos:start="373:42" pos:end="373:43">rd</name></expr></argument>, <argument pos:start="373:46" pos:end="373:47"><expr pos:start="373:46" pos:end="373:47"><name pos:start="373:46" pos:end="373:47">ra</name></expr></argument>, <argument pos:start="373:50" pos:end="373:52"><expr pos:start="373:50" pos:end="373:52"><name pos:start="373:50" pos:end="373:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="375:9" pos:end="431:9">{<block_content pos:start="377:13" pos:end="429:13">

            <if_stmt pos:start="377:13" pos:end="429:13"><if pos:start="377:13" pos:end="381:13">if <condition pos:start="377:16" pos:end="377:25">(<expr pos:start="377:17" pos:end="377:24"><name pos:start="377:17" pos:end="377:19">I16</name> <operator pos:start="377:21" pos:end="377:22">==</operator> <literal type="number" pos:start="377:24" pos:end="377:24">0</literal></expr>)</condition> <block pos:start="377:27" pos:end="381:13">{<block_content pos:start="379:17" pos:end="379:53">

                <expr_stmt pos:start="379:17" pos:end="379:53"><expr pos:start="379:17" pos:end="379:52"><call pos:start="379:17" pos:end="379:52"><name pos:start="379:17" pos:end="379:30">tcg_gen_mov_tl</name><argument_list pos:start="379:31" pos:end="379:52">(<argument pos:start="379:32" pos:end="379:40"><expr pos:start="379:32" pos:end="379:40"><name pos:start="379:32" pos:end="379:40"><name pos:start="379:32" pos:end="379:36">cpu_R</name><index pos:start="379:37" pos:end="379:40">[<expr pos:start="379:38" pos:end="379:39"><name pos:start="379:38" pos:end="379:39">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="379:43" pos:end="379:51"><expr pos:start="379:43" pos:end="379:51"><name pos:start="379:43" pos:end="379:51"><name pos:start="379:43" pos:end="379:47">cpu_R</name><index pos:start="379:48" pos:end="379:51">[<expr pos:start="379:49" pos:end="379:50"><name pos:start="379:49" pos:end="379:50">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></if> <else pos:start="381:15" pos:end="429:13">else <block pos:start="381:20" pos:end="429:13">{<block_content pos:start="383:17" pos:end="427:42">

                <decl_stmt pos:start="383:17" pos:end="383:42"><decl pos:start="383:17" pos:end="383:41"><type pos:start="383:17" pos:end="383:19"><name pos:start="383:17" pos:end="383:19">int</name></type> <name pos:start="383:21" pos:end="383:23">lab</name> <init pos:start="383:25" pos:end="383:41">= <expr pos:start="383:27" pos:end="383:41"><call pos:start="383:27" pos:end="383:41"><name pos:start="383:27" pos:end="383:39">gen_new_label</name><argument_list pos:start="383:40" pos:end="383:41">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="385:17" pos:end="385:49"><decl pos:start="385:17" pos:end="385:48"><type pos:start="385:17" pos:end="385:24"><name pos:start="385:17" pos:end="385:24">TCGv_i64</name></type> <name pos:start="385:26" pos:end="385:27">ta</name> <init pos:start="385:29" pos:end="385:48">= <expr pos:start="385:31" pos:end="385:48"><call pos:start="385:31" pos:end="385:48"><name pos:start="385:31" pos:end="385:46">tcg_temp_new_i64</name><argument_list pos:start="385:47" pos:end="385:48">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="387:17" pos:end="387:55"><decl pos:start="387:17" pos:end="387:54"><type pos:start="387:17" pos:end="387:24"><name pos:start="387:17" pos:end="387:24">TCGv_i64</name></type> <name pos:start="387:26" pos:end="387:27">td</name> <init pos:start="387:29" pos:end="387:54">= <expr pos:start="387:31" pos:end="387:54"><call pos:start="387:31" pos:end="387:54"><name pos:start="387:31" pos:end="387:52">tcg_temp_local_new_i64</name><argument_list pos:start="387:53" pos:end="387:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="389:17" pos:end="389:56"><decl pos:start="389:17" pos:end="389:55"><type pos:start="389:17" pos:end="389:24"><name pos:start="389:17" pos:end="389:24">TCGv_i32</name></type> <name pos:start="389:26" pos:end="389:28">res</name> <init pos:start="389:30" pos:end="389:55">= <expr pos:start="389:32" pos:end="389:55"><call pos:start="389:32" pos:end="389:55"><name pos:start="389:32" pos:end="389:53">tcg_temp_local_new_i32</name><argument_list pos:start="389:54" pos:end="389:55">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <decl_stmt pos:start="391:17" pos:end="391:59"><decl pos:start="391:17" pos:end="391:58"><type pos:start="391:17" pos:end="391:24"><name pos:start="391:17" pos:end="391:24">TCGv_i32</name></type> <name pos:start="391:26" pos:end="391:31">sr_ove</name> <init pos:start="391:33" pos:end="391:58">= <expr pos:start="391:35" pos:end="391:58"><call pos:start="391:35" pos:end="391:58"><name pos:start="391:35" pos:end="391:56">tcg_temp_local_new_i32</name><argument_list pos:start="391:57" pos:end="391:58">()</argument_list></call></expr></init></decl>;</decl_stmt>

                <expr_stmt pos:start="393:17" pos:end="393:52"><expr pos:start="393:17" pos:end="393:51"><call pos:start="393:17" pos:end="393:51"><name pos:start="393:17" pos:end="393:36">tcg_gen_extu_i32_i64</name><argument_list pos:start="393:37" pos:end="393:51">(<argument pos:start="393:38" pos:end="393:39"><expr pos:start="393:38" pos:end="393:39"><name pos:start="393:38" pos:end="393:39">ta</name></expr></argument>, <argument pos:start="393:42" pos:end="393:50"><expr pos:start="393:42" pos:end="393:50"><name pos:start="393:42" pos:end="393:50"><name pos:start="393:42" pos:end="393:46">cpu_R</name><index pos:start="393:47" pos:end="393:50">[<expr pos:start="393:48" pos:end="393:49"><name pos:start="393:48" pos:end="393:49">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="395:17" pos:end="395:63"><expr pos:start="395:17" pos:end="395:62"><call pos:start="395:17" pos:end="395:62"><name pos:start="395:17" pos:end="395:32">tcg_gen_addi_i64</name><argument_list pos:start="395:33" pos:end="395:62">(<argument pos:start="395:34" pos:end="395:35"><expr pos:start="395:34" pos:end="395:35"><name pos:start="395:34" pos:end="395:35">td</name></expr></argument>, <argument pos:start="395:38" pos:end="395:39"><expr pos:start="395:38" pos:end="395:39"><name pos:start="395:38" pos:end="395:39">ta</name></expr></argument>, <argument pos:start="395:42" pos:end="395:61"><expr pos:start="395:42" pos:end="395:61"><call pos:start="395:42" pos:end="395:61"><name pos:start="395:42" pos:end="395:52">sign_extend</name><argument_list pos:start="395:53" pos:end="395:61">(<argument pos:start="395:54" pos:end="395:56"><expr pos:start="395:54" pos:end="395:56"><name pos:start="395:54" pos:end="395:56">I16</name></expr></argument>, <argument pos:start="395:59" pos:end="395:60"><expr pos:start="395:59" pos:end="395:60"><literal type="number" pos:start="395:59" pos:end="395:60">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="397:17" pos:end="397:47"><expr pos:start="397:17" pos:end="397:46"><call pos:start="397:17" pos:end="397:46"><name pos:start="397:17" pos:end="397:37">tcg_gen_trunc_i64_i32</name><argument_list pos:start="397:38" pos:end="397:46">(<argument pos:start="397:39" pos:end="397:41"><expr pos:start="397:39" pos:end="397:41"><name pos:start="397:39" pos:end="397:41">res</name></expr></argument>, <argument pos:start="397:44" pos:end="397:45"><expr pos:start="397:44" pos:end="397:45"><name pos:start="397:44" pos:end="397:45">td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="399:17" pos:end="399:45"><expr pos:start="399:17" pos:end="399:44"><call pos:start="399:17" pos:end="399:44"><name pos:start="399:17" pos:end="399:32">tcg_gen_shri_i64</name><argument_list pos:start="399:33" pos:end="399:44">(<argument pos:start="399:34" pos:end="399:35"><expr pos:start="399:34" pos:end="399:35"><name pos:start="399:34" pos:end="399:35">td</name></expr></argument>, <argument pos:start="399:38" pos:end="399:39"><expr pos:start="399:38" pos:end="399:39"><name pos:start="399:38" pos:end="399:39">td</name></expr></argument>, <argument pos:start="399:42" pos:end="399:43"><expr pos:start="399:42" pos:end="399:43"><literal type="number" pos:start="399:42" pos:end="399:43">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="401:17" pos:end="401:46"><expr pos:start="401:17" pos:end="401:45"><call pos:start="401:17" pos:end="401:45"><name pos:start="401:17" pos:end="401:32">tcg_gen_andi_i64</name><argument_list pos:start="401:33" pos:end="401:45">(<argument pos:start="401:34" pos:end="401:35"><expr pos:start="401:34" pos:end="401:35"><name pos:start="401:34" pos:end="401:35">td</name></expr></argument>, <argument pos:start="401:38" pos:end="401:39"><expr pos:start="401:38" pos:end="401:39"><name pos:start="401:38" pos:end="401:39">td</name></expr></argument>, <argument pos:start="401:42" pos:end="401:44"><expr pos:start="401:42" pos:end="401:44"><literal type="number" pos:start="401:42" pos:end="401:44">0x3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <comment type="block" pos:start="403:17" pos:end="403:52">/* Jump to lab when no overflow.  */</comment>

                <expr_stmt pos:start="405:17" pos:end="405:63"><expr pos:start="405:17" pos:end="405:62"><call pos:start="405:17" pos:end="405:62"><name pos:start="405:17" pos:end="405:35">tcg_gen_brcondi_i64</name><argument_list pos:start="405:36" pos:end="405:62">(<argument pos:start="405:37" pos:end="405:47"><expr pos:start="405:37" pos:end="405:47"><name pos:start="405:37" pos:end="405:47">TCG_COND_EQ</name></expr></argument>, <argument pos:start="405:50" pos:end="405:51"><expr pos:start="405:50" pos:end="405:51"><name pos:start="405:50" pos:end="405:51">td</name></expr></argument>, <argument pos:start="405:54" pos:end="405:56"><expr pos:start="405:54" pos:end="405:56"><literal type="number" pos:start="405:54" pos:end="405:56">0x0</literal></expr></argument>, <argument pos:start="405:59" pos:end="405:61"><expr pos:start="405:59" pos:end="405:61"><name pos:start="405:59" pos:end="405:61">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="407:17" pos:end="407:63"><expr pos:start="407:17" pos:end="407:62"><call pos:start="407:17" pos:end="407:62"><name pos:start="407:17" pos:end="407:35">tcg_gen_brcondi_i64</name><argument_list pos:start="407:36" pos:end="407:62">(<argument pos:start="407:37" pos:end="407:47"><expr pos:start="407:37" pos:end="407:47"><name pos:start="407:37" pos:end="407:47">TCG_COND_EQ</name></expr></argument>, <argument pos:start="407:50" pos:end="407:51"><expr pos:start="407:50" pos:end="407:51"><name pos:start="407:50" pos:end="407:51">td</name></expr></argument>, <argument pos:start="407:54" pos:end="407:56"><expr pos:start="407:54" pos:end="407:56"><literal type="number" pos:start="407:54" pos:end="407:56">0x3</literal></expr></argument>, <argument pos:start="407:59" pos:end="407:61"><expr pos:start="407:59" pos:end="407:61"><name pos:start="407:59" pos:end="407:61">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="409:17" pos:end="409:65"><expr pos:start="409:17" pos:end="409:64"><call pos:start="409:17" pos:end="409:64"><name pos:start="409:17" pos:end="409:31">tcg_gen_ori_i32</name><argument_list pos:start="409:32" pos:end="409:64">(<argument pos:start="409:33" pos:end="409:38"><expr pos:start="409:33" pos:end="409:38"><name pos:start="409:33" pos:end="409:38">cpu_sr</name></expr></argument>, <argument pos:start="409:41" pos:end="409:46"><expr pos:start="409:41" pos:end="409:46"><name pos:start="409:41" pos:end="409:46">cpu_sr</name></expr></argument>, <argument pos:start="409:49" pos:end="409:63"><expr pos:start="409:49" pos:end="409:63"><operator pos:start="409:49" pos:end="409:49">(</operator><name pos:start="409:50" pos:end="409:54">SR_OV</name> <operator pos:start="409:56" pos:end="409:56">|</operator> <name pos:start="409:58" pos:end="409:62">SR_CY</name><operator pos:start="409:63" pos:end="409:63">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="411:17" pos:end="411:57"><expr pos:start="411:17" pos:end="411:56"><call pos:start="411:17" pos:end="411:56"><name pos:start="411:17" pos:end="411:32">tcg_gen_andi_i32</name><argument_list pos:start="411:33" pos:end="411:56">(<argument pos:start="411:34" pos:end="411:39"><expr pos:start="411:34" pos:end="411:39"><name pos:start="411:34" pos:end="411:39">sr_ove</name></expr></argument>, <argument pos:start="411:42" pos:end="411:47"><expr pos:start="411:42" pos:end="411:47"><name pos:start="411:42" pos:end="411:47">cpu_sr</name></expr></argument>, <argument pos:start="411:50" pos:end="411:55"><expr pos:start="411:50" pos:end="411:55"><name pos:start="411:50" pos:end="411:55">SR_OVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="413:17" pos:end="413:70"><expr pos:start="413:17" pos:end="413:69"><call pos:start="413:17" pos:end="413:69"><name pos:start="413:17" pos:end="413:35">tcg_gen_brcondi_i32</name><argument_list pos:start="413:36" pos:end="413:69">(<argument pos:start="413:37" pos:end="413:47"><expr pos:start="413:37" pos:end="413:47"><name pos:start="413:37" pos:end="413:47">TCG_COND_NE</name></expr></argument>, <argument pos:start="413:50" pos:end="413:55"><expr pos:start="413:50" pos:end="413:55"><name pos:start="413:50" pos:end="413:55">sr_ove</name></expr></argument>, <argument pos:start="413:58" pos:end="413:63"><expr pos:start="413:58" pos:end="413:63"><name pos:start="413:58" pos:end="413:63">SR_OVE</name></expr></argument>, <argument pos:start="413:66" pos:end="413:68"><expr pos:start="413:66" pos:end="413:68"><name pos:start="413:66" pos:end="413:68">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="415:17" pos:end="415:46"><expr pos:start="415:17" pos:end="415:45"><call pos:start="415:17" pos:end="415:45"><name pos:start="415:17" pos:end="415:29">gen_exception</name><argument_list pos:start="415:30" pos:end="415:45">(<argument pos:start="415:31" pos:end="415:32"><expr pos:start="415:31" pos:end="415:32"><name pos:start="415:31" pos:end="415:32">dc</name></expr></argument>, <argument pos:start="415:35" pos:end="415:44"><expr pos:start="415:35" pos:end="415:44"><name pos:start="415:35" pos:end="415:44">EXCP_RANGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="417:17" pos:end="417:35"><expr pos:start="417:17" pos:end="417:34"><call pos:start="417:17" pos:end="417:34"><name pos:start="417:17" pos:end="417:29">gen_set_label</name><argument_list pos:start="417:30" pos:end="417:34">(<argument pos:start="417:31" pos:end="417:33"><expr pos:start="417:31" pos:end="417:33"><name pos:start="417:31" pos:end="417:33">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="419:17" pos:end="419:48"><expr pos:start="419:17" pos:end="419:47"><call pos:start="419:17" pos:end="419:47"><name pos:start="419:17" pos:end="419:31">tcg_gen_mov_i32</name><argument_list pos:start="419:32" pos:end="419:47">(<argument pos:start="419:33" pos:end="419:41"><expr pos:start="419:33" pos:end="419:41"><name pos:start="419:33" pos:end="419:41"><name pos:start="419:33" pos:end="419:37">cpu_R</name><index pos:start="419:38" pos:end="419:41">[<expr pos:start="419:39" pos:end="419:40"><name pos:start="419:39" pos:end="419:40">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="419:44" pos:end="419:46"><expr pos:start="419:44" pos:end="419:46"><name pos:start="419:44" pos:end="419:46">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="421:17" pos:end="421:38"><expr pos:start="421:17" pos:end="421:37"><call pos:start="421:17" pos:end="421:37"><name pos:start="421:17" pos:end="421:33">tcg_temp_free_i64</name><argument_list pos:start="421:34" pos:end="421:37">(<argument pos:start="421:35" pos:end="421:36"><expr pos:start="421:35" pos:end="421:36"><name pos:start="421:35" pos:end="421:36">ta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="423:17" pos:end="423:38"><expr pos:start="423:17" pos:end="423:37"><call pos:start="423:17" pos:end="423:37"><name pos:start="423:17" pos:end="423:33">tcg_temp_free_i64</name><argument_list pos:start="423:34" pos:end="423:37">(<argument pos:start="423:35" pos:end="423:36"><expr pos:start="423:35" pos:end="423:36"><name pos:start="423:35" pos:end="423:36">td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="425:17" pos:end="425:39"><expr pos:start="425:17" pos:end="425:38"><call pos:start="425:17" pos:end="425:38"><name pos:start="425:17" pos:end="425:33">tcg_temp_free_i32</name><argument_list pos:start="425:34" pos:end="425:38">(<argument pos:start="425:35" pos:end="425:37"><expr pos:start="425:35" pos:end="425:37"><name pos:start="425:35" pos:end="425:37">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <expr_stmt pos:start="427:17" pos:end="427:42"><expr pos:start="427:17" pos:end="427:41"><call pos:start="427:17" pos:end="427:41"><name pos:start="427:17" pos:end="427:33">tcg_temp_free_i32</name><argument_list pos:start="427:34" pos:end="427:41">(<argument pos:start="427:35" pos:end="427:40"><expr pos:start="427:35" pos:end="427:40"><name pos:start="427:35" pos:end="427:40">sr_ove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></else></if_stmt>

        </block_content>}</block>

        <break pos:start="433:9" pos:end="433:14">break;</break>



    <case pos:start="437:5" pos:end="437:14">case <expr pos:start="437:10" pos:end="437:13"><literal type="number" pos:start="437:10" pos:end="437:13">0x28</literal></expr>:</case>    <comment type="block" pos:start="437:19" pos:end="437:31">/* l.addic */</comment>

        <expr_stmt pos:start="439:9" pos:end="439:55"><expr pos:start="439:9" pos:end="439:54"><call pos:start="439:9" pos:end="439:54"><name pos:start="439:9" pos:end="439:15">LOG_DIS</name><argument_list pos:start="439:16" pos:end="439:54">(<argument pos:start="439:17" pos:end="439:40"><expr pos:start="439:17" pos:end="439:40"><literal type="string" pos:start="439:17" pos:end="439:40">"l.addic r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="439:43" pos:end="439:44"><expr pos:start="439:43" pos:end="439:44"><name pos:start="439:43" pos:end="439:44">rd</name></expr></argument>, <argument pos:start="439:47" pos:end="439:48"><expr pos:start="439:47" pos:end="439:48"><name pos:start="439:47" pos:end="439:48">ra</name></expr></argument>, <argument pos:start="439:51" pos:end="439:53"><expr pos:start="439:51" pos:end="439:53"><name pos:start="439:51" pos:end="439:53">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="441:9" pos:end="505:9">{<block_content pos:start="443:13" pos:end="503:38">

            <decl_stmt pos:start="443:13" pos:end="443:38"><decl pos:start="443:13" pos:end="443:37"><type pos:start="443:13" pos:end="443:15"><name pos:start="443:13" pos:end="443:15">int</name></type> <name pos:start="443:17" pos:end="443:19">lab</name> <init pos:start="443:21" pos:end="443:37">= <expr pos:start="443:23" pos:end="443:37"><call pos:start="443:23" pos:end="443:37"><name pos:start="443:23" pos:end="443:35">gen_new_label</name><argument_list pos:start="443:36" pos:end="443:37">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="445:13" pos:end="445:45"><decl pos:start="445:13" pos:end="445:44"><type pos:start="445:13" pos:end="445:20"><name pos:start="445:13" pos:end="445:20">TCGv_i64</name></type> <name pos:start="445:22" pos:end="445:23">ta</name> <init pos:start="445:25" pos:end="445:44">= <expr pos:start="445:27" pos:end="445:44"><call pos:start="445:27" pos:end="445:44"><name pos:start="445:27" pos:end="445:42">tcg_temp_new_i64</name><argument_list pos:start="445:43" pos:end="445:44">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="447:13" pos:end="447:51"><decl pos:start="447:13" pos:end="447:50"><type pos:start="447:13" pos:end="447:20"><name pos:start="447:13" pos:end="447:20">TCGv_i64</name></type> <name pos:start="447:22" pos:end="447:23">td</name> <init pos:start="447:25" pos:end="447:50">= <expr pos:start="447:27" pos:end="447:50"><call pos:start="447:27" pos:end="447:50"><name pos:start="447:27" pos:end="447:48">tcg_temp_local_new_i64</name><argument_list pos:start="447:49" pos:end="447:50">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="449:13" pos:end="449:52"><decl pos:start="449:13" pos:end="449:51"><type pos:start="449:13" pos:end="449:20"><name pos:start="449:13" pos:end="449:20">TCGv_i64</name></type> <name pos:start="449:22" pos:end="449:24">tcy</name> <init pos:start="449:26" pos:end="449:51">= <expr pos:start="449:28" pos:end="449:51"><call pos:start="449:28" pos:end="449:51"><name pos:start="449:28" pos:end="449:49">tcg_temp_local_new_i64</name><argument_list pos:start="449:50" pos:end="449:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="451:13" pos:end="451:52"><decl pos:start="451:13" pos:end="451:51"><type pos:start="451:13" pos:end="451:20"><name pos:start="451:13" pos:end="451:20">TCGv_i32</name></type> <name pos:start="451:22" pos:end="451:24">res</name> <init pos:start="451:26" pos:end="451:51">= <expr pos:start="451:28" pos:end="451:51"><call pos:start="451:28" pos:end="451:51"><name pos:start="451:28" pos:end="451:49">tcg_temp_local_new_i32</name><argument_list pos:start="451:50" pos:end="451:51">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="453:13" pos:end="453:54"><decl pos:start="453:13" pos:end="453:53"><type pos:start="453:13" pos:end="453:20"><name pos:start="453:13" pos:end="453:20">TCGv_i32</name></type> <name pos:start="453:22" pos:end="453:26">sr_cy</name> <init pos:start="453:28" pos:end="453:53">= <expr pos:start="453:30" pos:end="453:53"><call pos:start="453:30" pos:end="453:53"><name pos:start="453:30" pos:end="453:51">tcg_temp_local_new_i32</name><argument_list pos:start="453:52" pos:end="453:53">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <decl_stmt pos:start="455:13" pos:end="455:55"><decl pos:start="455:13" pos:end="455:54"><type pos:start="455:13" pos:end="455:20"><name pos:start="455:13" pos:end="455:20">TCGv_i32</name></type> <name pos:start="455:22" pos:end="455:27">sr_ove</name> <init pos:start="455:29" pos:end="455:54">= <expr pos:start="455:31" pos:end="455:54"><call pos:start="455:31" pos:end="455:54"><name pos:start="455:31" pos:end="455:52">tcg_temp_local_new_i32</name><argument_list pos:start="455:53" pos:end="455:54">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="457:13" pos:end="457:48"><expr pos:start="457:13" pos:end="457:47"><call pos:start="457:13" pos:end="457:47"><name pos:start="457:13" pos:end="457:32">tcg_gen_extu_i32_i64</name><argument_list pos:start="457:33" pos:end="457:47">(<argument pos:start="457:34" pos:end="457:35"><expr pos:start="457:34" pos:end="457:35"><name pos:start="457:34" pos:end="457:35">ta</name></expr></argument>, <argument pos:start="457:38" pos:end="457:46"><expr pos:start="457:38" pos:end="457:46"><name pos:start="457:38" pos:end="457:46"><name pos:start="457:38" pos:end="457:42">cpu_R</name><index pos:start="457:43" pos:end="457:46">[<expr pos:start="457:44" pos:end="457:45"><name pos:start="457:44" pos:end="457:45">ra</name></expr>]</index></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="459:13" pos:end="459:51"><expr pos:start="459:13" pos:end="459:50"><call pos:start="459:13" pos:end="459:50"><name pos:start="459:13" pos:end="459:28">tcg_gen_andi_i32</name><argument_list pos:start="459:29" pos:end="459:50">(<argument pos:start="459:30" pos:end="459:34"><expr pos:start="459:30" pos:end="459:34"><name pos:start="459:30" pos:end="459:34">sr_cy</name></expr></argument>, <argument pos:start="459:37" pos:end="459:42"><expr pos:start="459:37" pos:end="459:42"><name pos:start="459:37" pos:end="459:42">cpu_sr</name></expr></argument>, <argument pos:start="459:45" pos:end="459:49"><expr pos:start="459:45" pos:end="459:49"><name pos:start="459:45" pos:end="459:49">SR_CY</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="461:13" pos:end="461:47"><expr pos:start="461:13" pos:end="461:46"><call pos:start="461:13" pos:end="461:46"><name pos:start="461:13" pos:end="461:28">tcg_gen_shri_i32</name><argument_list pos:start="461:29" pos:end="461:46">(<argument pos:start="461:30" pos:end="461:34"><expr pos:start="461:30" pos:end="461:34"><name pos:start="461:30" pos:end="461:34">sr_cy</name></expr></argument>, <argument pos:start="461:37" pos:end="461:41"><expr pos:start="461:37" pos:end="461:41"><name pos:start="461:37" pos:end="461:41">sr_cy</name></expr></argument>, <argument pos:start="461:44" pos:end="461:45"><expr pos:start="461:44" pos:end="461:45"><literal type="number" pos:start="461:44" pos:end="461:45">10</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="463:13" pos:end="463:45"><expr pos:start="463:13" pos:end="463:44"><call pos:start="463:13" pos:end="463:44"><name pos:start="463:13" pos:end="463:32">tcg_gen_extu_i32_i64</name><argument_list pos:start="463:33" pos:end="463:44">(<argument pos:start="463:34" pos:end="463:36"><expr pos:start="463:34" pos:end="463:36"><name pos:start="463:34" pos:end="463:36">tcy</name></expr></argument>, <argument pos:start="463:39" pos:end="463:43"><expr pos:start="463:39" pos:end="463:43"><name pos:start="463:39" pos:end="463:43">sr_cy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="465:13" pos:end="465:59"><expr pos:start="465:13" pos:end="465:58"><call pos:start="465:13" pos:end="465:58"><name pos:start="465:13" pos:end="465:28">tcg_gen_addi_i64</name><argument_list pos:start="465:29" pos:end="465:58">(<argument pos:start="465:30" pos:end="465:31"><expr pos:start="465:30" pos:end="465:31"><name pos:start="465:30" pos:end="465:31">td</name></expr></argument>, <argument pos:start="465:34" pos:end="465:35"><expr pos:start="465:34" pos:end="465:35"><name pos:start="465:34" pos:end="465:35">ta</name></expr></argument>, <argument pos:start="465:38" pos:end="465:57"><expr pos:start="465:38" pos:end="465:57"><call pos:start="465:38" pos:end="465:57"><name pos:start="465:38" pos:end="465:48">sign_extend</name><argument_list pos:start="465:49" pos:end="465:57">(<argument pos:start="465:50" pos:end="465:52"><expr pos:start="465:50" pos:end="465:52"><name pos:start="465:50" pos:end="465:52">I16</name></expr></argument>, <argument pos:start="465:55" pos:end="465:56"><expr pos:start="465:55" pos:end="465:56"><literal type="number" pos:start="465:55" pos:end="465:56">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="467:13" pos:end="467:41"><expr pos:start="467:13" pos:end="467:40"><call pos:start="467:13" pos:end="467:40"><name pos:start="467:13" pos:end="467:27">tcg_gen_add_i64</name><argument_list pos:start="467:28" pos:end="467:40">(<argument pos:start="467:29" pos:end="467:30"><expr pos:start="467:29" pos:end="467:30"><name pos:start="467:29" pos:end="467:30">td</name></expr></argument>, <argument pos:start="467:33" pos:end="467:34"><expr pos:start="467:33" pos:end="467:34"><name pos:start="467:33" pos:end="467:34">td</name></expr></argument>, <argument pos:start="467:37" pos:end="467:39"><expr pos:start="467:37" pos:end="467:39"><name pos:start="467:37" pos:end="467:39">tcy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="469:13" pos:end="469:43"><expr pos:start="469:13" pos:end="469:42"><call pos:start="469:13" pos:end="469:42"><name pos:start="469:13" pos:end="469:33">tcg_gen_trunc_i64_i32</name><argument_list pos:start="469:34" pos:end="469:42">(<argument pos:start="469:35" pos:end="469:37"><expr pos:start="469:35" pos:end="469:37"><name pos:start="469:35" pos:end="469:37">res</name></expr></argument>, <argument pos:start="469:40" pos:end="469:41"><expr pos:start="469:40" pos:end="469:41"><name pos:start="469:40" pos:end="469:41">td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="471:13" pos:end="471:41"><expr pos:start="471:13" pos:end="471:40"><call pos:start="471:13" pos:end="471:40"><name pos:start="471:13" pos:end="471:28">tcg_gen_shri_i64</name><argument_list pos:start="471:29" pos:end="471:40">(<argument pos:start="471:30" pos:end="471:31"><expr pos:start="471:30" pos:end="471:31"><name pos:start="471:30" pos:end="471:31">td</name></expr></argument>, <argument pos:start="471:34" pos:end="471:35"><expr pos:start="471:34" pos:end="471:35"><name pos:start="471:34" pos:end="471:35">td</name></expr></argument>, <argument pos:start="471:38" pos:end="471:39"><expr pos:start="471:38" pos:end="471:39"><literal type="number" pos:start="471:38" pos:end="471:39">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="473:13" pos:end="473:42"><expr pos:start="473:13" pos:end="473:41"><call pos:start="473:13" pos:end="473:41"><name pos:start="473:13" pos:end="473:28">tcg_gen_andi_i64</name><argument_list pos:start="473:29" pos:end="473:41">(<argument pos:start="473:30" pos:end="473:31"><expr pos:start="473:30" pos:end="473:31"><name pos:start="473:30" pos:end="473:31">td</name></expr></argument>, <argument pos:start="473:34" pos:end="473:35"><expr pos:start="473:34" pos:end="473:35"><name pos:start="473:34" pos:end="473:35">td</name></expr></argument>, <argument pos:start="473:38" pos:end="473:40"><expr pos:start="473:38" pos:end="473:40"><literal type="number" pos:start="473:38" pos:end="473:40">0x3</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <comment type="block" pos:start="475:13" pos:end="475:48">/* Jump to lab when no overflow.  */</comment>

            <expr_stmt pos:start="477:13" pos:end="477:59"><expr pos:start="477:13" pos:end="477:58"><call pos:start="477:13" pos:end="477:58"><name pos:start="477:13" pos:end="477:31">tcg_gen_brcondi_i64</name><argument_list pos:start="477:32" pos:end="477:58">(<argument pos:start="477:33" pos:end="477:43"><expr pos:start="477:33" pos:end="477:43"><name pos:start="477:33" pos:end="477:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="477:46" pos:end="477:47"><expr pos:start="477:46" pos:end="477:47"><name pos:start="477:46" pos:end="477:47">td</name></expr></argument>, <argument pos:start="477:50" pos:end="477:52"><expr pos:start="477:50" pos:end="477:52"><literal type="number" pos:start="477:50" pos:end="477:52">0x0</literal></expr></argument>, <argument pos:start="477:55" pos:end="477:57"><expr pos:start="477:55" pos:end="477:57"><name pos:start="477:55" pos:end="477:57">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="479:13" pos:end="479:59"><expr pos:start="479:13" pos:end="479:58"><call pos:start="479:13" pos:end="479:58"><name pos:start="479:13" pos:end="479:31">tcg_gen_brcondi_i64</name><argument_list pos:start="479:32" pos:end="479:58">(<argument pos:start="479:33" pos:end="479:43"><expr pos:start="479:33" pos:end="479:43"><name pos:start="479:33" pos:end="479:43">TCG_COND_EQ</name></expr></argument>, <argument pos:start="479:46" pos:end="479:47"><expr pos:start="479:46" pos:end="479:47"><name pos:start="479:46" pos:end="479:47">td</name></expr></argument>, <argument pos:start="479:50" pos:end="479:52"><expr pos:start="479:50" pos:end="479:52"><literal type="number" pos:start="479:50" pos:end="479:52">0x3</literal></expr></argument>, <argument pos:start="479:55" pos:end="479:57"><expr pos:start="479:55" pos:end="479:57"><name pos:start="479:55" pos:end="479:57">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="481:13" pos:end="481:61"><expr pos:start="481:13" pos:end="481:60"><call pos:start="481:13" pos:end="481:60"><name pos:start="481:13" pos:end="481:27">tcg_gen_ori_i32</name><argument_list pos:start="481:28" pos:end="481:60">(<argument pos:start="481:29" pos:end="481:34"><expr pos:start="481:29" pos:end="481:34"><name pos:start="481:29" pos:end="481:34">cpu_sr</name></expr></argument>, <argument pos:start="481:37" pos:end="481:42"><expr pos:start="481:37" pos:end="481:42"><name pos:start="481:37" pos:end="481:42">cpu_sr</name></expr></argument>, <argument pos:start="481:45" pos:end="481:59"><expr pos:start="481:45" pos:end="481:59"><operator pos:start="481:45" pos:end="481:45">(</operator><name pos:start="481:46" pos:end="481:50">SR_OV</name> <operator pos:start="481:52" pos:end="481:52">|</operator> <name pos:start="481:54" pos:end="481:58">SR_CY</name><operator pos:start="481:59" pos:end="481:59">)</operator></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="483:13" pos:end="483:53"><expr pos:start="483:13" pos:end="483:52"><call pos:start="483:13" pos:end="483:52"><name pos:start="483:13" pos:end="483:28">tcg_gen_andi_i32</name><argument_list pos:start="483:29" pos:end="483:52">(<argument pos:start="483:30" pos:end="483:35"><expr pos:start="483:30" pos:end="483:35"><name pos:start="483:30" pos:end="483:35">sr_ove</name></expr></argument>, <argument pos:start="483:38" pos:end="483:43"><expr pos:start="483:38" pos:end="483:43"><name pos:start="483:38" pos:end="483:43">cpu_sr</name></expr></argument>, <argument pos:start="483:46" pos:end="483:51"><expr pos:start="483:46" pos:end="483:51"><name pos:start="483:46" pos:end="483:51">SR_OVE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="485:13" pos:end="485:66"><expr pos:start="485:13" pos:end="485:65"><call pos:start="485:13" pos:end="485:65"><name pos:start="485:13" pos:end="485:31">tcg_gen_brcondi_i32</name><argument_list pos:start="485:32" pos:end="485:65">(<argument pos:start="485:33" pos:end="485:43"><expr pos:start="485:33" pos:end="485:43"><name pos:start="485:33" pos:end="485:43">TCG_COND_NE</name></expr></argument>, <argument pos:start="485:46" pos:end="485:51"><expr pos:start="485:46" pos:end="485:51"><name pos:start="485:46" pos:end="485:51">sr_ove</name></expr></argument>, <argument pos:start="485:54" pos:end="485:59"><expr pos:start="485:54" pos:end="485:59"><name pos:start="485:54" pos:end="485:59">SR_OVE</name></expr></argument>, <argument pos:start="485:62" pos:end="485:64"><expr pos:start="485:62" pos:end="485:64"><name pos:start="485:62" pos:end="485:64">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="487:13" pos:end="487:42"><expr pos:start="487:13" pos:end="487:41"><call pos:start="487:13" pos:end="487:41"><name pos:start="487:13" pos:end="487:25">gen_exception</name><argument_list pos:start="487:26" pos:end="487:41">(<argument pos:start="487:27" pos:end="487:28"><expr pos:start="487:27" pos:end="487:28"><name pos:start="487:27" pos:end="487:28">dc</name></expr></argument>, <argument pos:start="487:31" pos:end="487:40"><expr pos:start="487:31" pos:end="487:40"><name pos:start="487:31" pos:end="487:40">EXCP_RANGE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="489:13" pos:end="489:31"><expr pos:start="489:13" pos:end="489:30"><call pos:start="489:13" pos:end="489:30"><name pos:start="489:13" pos:end="489:25">gen_set_label</name><argument_list pos:start="489:26" pos:end="489:30">(<argument pos:start="489:27" pos:end="489:29"><expr pos:start="489:27" pos:end="489:29"><name pos:start="489:27" pos:end="489:29">lab</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="491:13" pos:end="491:44"><expr pos:start="491:13" pos:end="491:43"><call pos:start="491:13" pos:end="491:43"><name pos:start="491:13" pos:end="491:27">tcg_gen_mov_i32</name><argument_list pos:start="491:28" pos:end="491:43">(<argument pos:start="491:29" pos:end="491:37"><expr pos:start="491:29" pos:end="491:37"><name pos:start="491:29" pos:end="491:37"><name pos:start="491:29" pos:end="491:33">cpu_R</name><index pos:start="491:34" pos:end="491:37">[<expr pos:start="491:35" pos:end="491:36"><name pos:start="491:35" pos:end="491:36">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="491:40" pos:end="491:42"><expr pos:start="491:40" pos:end="491:42"><name pos:start="491:40" pos:end="491:42">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="493:13" pos:end="493:34"><expr pos:start="493:13" pos:end="493:33"><call pos:start="493:13" pos:end="493:33"><name pos:start="493:13" pos:end="493:29">tcg_temp_free_i64</name><argument_list pos:start="493:30" pos:end="493:33">(<argument pos:start="493:31" pos:end="493:32"><expr pos:start="493:31" pos:end="493:32"><name pos:start="493:31" pos:end="493:32">ta</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="495:13" pos:end="495:34"><expr pos:start="495:13" pos:end="495:33"><call pos:start="495:13" pos:end="495:33"><name pos:start="495:13" pos:end="495:29">tcg_temp_free_i64</name><argument_list pos:start="495:30" pos:end="495:33">(<argument pos:start="495:31" pos:end="495:32"><expr pos:start="495:31" pos:end="495:32"><name pos:start="495:31" pos:end="495:32">td</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="497:13" pos:end="497:35"><expr pos:start="497:13" pos:end="497:34"><call pos:start="497:13" pos:end="497:34"><name pos:start="497:13" pos:end="497:29">tcg_temp_free_i64</name><argument_list pos:start="497:30" pos:end="497:34">(<argument pos:start="497:31" pos:end="497:33"><expr pos:start="497:31" pos:end="497:33"><name pos:start="497:31" pos:end="497:33">tcy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="499:13" pos:end="499:35"><expr pos:start="499:13" pos:end="499:34"><call pos:start="499:13" pos:end="499:34"><name pos:start="499:13" pos:end="499:29">tcg_temp_free_i32</name><argument_list pos:start="499:30" pos:end="499:34">(<argument pos:start="499:31" pos:end="499:33"><expr pos:start="499:31" pos:end="499:33"><name pos:start="499:31" pos:end="499:33">res</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="501:13" pos:end="501:37"><expr pos:start="501:13" pos:end="501:36"><call pos:start="501:13" pos:end="501:36"><name pos:start="501:13" pos:end="501:29">tcg_temp_free_i32</name><argument_list pos:start="501:30" pos:end="501:36">(<argument pos:start="501:31" pos:end="501:35"><expr pos:start="501:31" pos:end="501:35"><name pos:start="501:31" pos:end="501:35">sr_cy</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="503:13" pos:end="503:38"><expr pos:start="503:13" pos:end="503:37"><call pos:start="503:13" pos:end="503:37"><name pos:start="503:13" pos:end="503:29">tcg_temp_free_i32</name><argument_list pos:start="503:30" pos:end="503:37">(<argument pos:start="503:31" pos:end="503:36"><expr pos:start="503:31" pos:end="503:36"><name pos:start="503:31" pos:end="503:36">sr_ove</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="507:9" pos:end="507:14">break;</break>



    <case pos:start="511:5" pos:end="511:14">case <expr pos:start="511:10" pos:end="511:13"><literal type="number" pos:start="511:10" pos:end="511:13">0x29</literal></expr>:</case>    <comment type="block" pos:start="511:19" pos:end="511:30">/* l.andi */</comment>

        <expr_stmt pos:start="513:9" pos:end="513:54"><expr pos:start="513:9" pos:end="513:53"><call pos:start="513:9" pos:end="513:53"><name pos:start="513:9" pos:end="513:15">LOG_DIS</name><argument_list pos:start="513:16" pos:end="513:53">(<argument pos:start="513:17" pos:end="513:39"><expr pos:start="513:17" pos:end="513:39"><literal type="string" pos:start="513:17" pos:end="513:39">"l.andi r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="513:42" pos:end="513:43"><expr pos:start="513:42" pos:end="513:43"><name pos:start="513:42" pos:end="513:43">rd</name></expr></argument>, <argument pos:start="513:46" pos:end="513:47"><expr pos:start="513:46" pos:end="513:47"><name pos:start="513:46" pos:end="513:47">ra</name></expr></argument>, <argument pos:start="513:50" pos:end="513:52"><expr pos:start="513:50" pos:end="513:52"><name pos:start="513:50" pos:end="513:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="515:9" pos:end="515:68"><expr pos:start="515:9" pos:end="515:67"><call pos:start="515:9" pos:end="515:67"><name pos:start="515:9" pos:end="515:23">tcg_gen_andi_tl</name><argument_list pos:start="515:24" pos:end="515:67">(<argument pos:start="515:25" pos:end="515:33"><expr pos:start="515:25" pos:end="515:33"><name pos:start="515:25" pos:end="515:33"><name pos:start="515:25" pos:end="515:29">cpu_R</name><index pos:start="515:30" pos:end="515:33">[<expr pos:start="515:31" pos:end="515:32"><name pos:start="515:31" pos:end="515:32">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="515:36" pos:end="515:44"><expr pos:start="515:36" pos:end="515:44"><name pos:start="515:36" pos:end="515:44"><name pos:start="515:36" pos:end="515:40">cpu_R</name><index pos:start="515:41" pos:end="515:44">[<expr pos:start="515:42" pos:end="515:43"><name pos:start="515:42" pos:end="515:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="515:47" pos:end="515:66"><expr pos:start="515:47" pos:end="515:66"><call pos:start="515:47" pos:end="515:66"><name pos:start="515:47" pos:end="515:57">zero_extend</name><argument_list pos:start="515:58" pos:end="515:66">(<argument pos:start="515:59" pos:end="515:61"><expr pos:start="515:59" pos:end="515:61"><name pos:start="515:59" pos:end="515:61">I16</name></expr></argument>, <argument pos:start="515:64" pos:end="515:65"><expr pos:start="515:64" pos:end="515:65"><literal type="number" pos:start="515:64" pos:end="515:65">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="517:9" pos:end="517:14">break;</break>



    <case pos:start="521:5" pos:end="521:14">case <expr pos:start="521:10" pos:end="521:13"><literal type="number" pos:start="521:10" pos:end="521:13">0x2a</literal></expr>:</case>    <comment type="block" pos:start="521:19" pos:end="521:29">/* l.ori */</comment>

        <expr_stmt pos:start="523:9" pos:end="523:53"><expr pos:start="523:9" pos:end="523:52"><call pos:start="523:9" pos:end="523:52"><name pos:start="523:9" pos:end="523:15">LOG_DIS</name><argument_list pos:start="523:16" pos:end="523:52">(<argument pos:start="523:17" pos:end="523:38"><expr pos:start="523:17" pos:end="523:38"><literal type="string" pos:start="523:17" pos:end="523:38">"l.ori r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="523:41" pos:end="523:42"><expr pos:start="523:41" pos:end="523:42"><name pos:start="523:41" pos:end="523:42">rd</name></expr></argument>, <argument pos:start="523:45" pos:end="523:46"><expr pos:start="523:45" pos:end="523:46"><name pos:start="523:45" pos:end="523:46">ra</name></expr></argument>, <argument pos:start="523:49" pos:end="523:51"><expr pos:start="523:49" pos:end="523:51"><name pos:start="523:49" pos:end="523:51">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="525:9" pos:end="525:67"><expr pos:start="525:9" pos:end="525:66"><call pos:start="525:9" pos:end="525:66"><name pos:start="525:9" pos:end="525:22">tcg_gen_ori_tl</name><argument_list pos:start="525:23" pos:end="525:66">(<argument pos:start="525:24" pos:end="525:32"><expr pos:start="525:24" pos:end="525:32"><name pos:start="525:24" pos:end="525:32"><name pos:start="525:24" pos:end="525:28">cpu_R</name><index pos:start="525:29" pos:end="525:32">[<expr pos:start="525:30" pos:end="525:31"><name pos:start="525:30" pos:end="525:31">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="525:35" pos:end="525:43"><expr pos:start="525:35" pos:end="525:43"><name pos:start="525:35" pos:end="525:43"><name pos:start="525:35" pos:end="525:39">cpu_R</name><index pos:start="525:40" pos:end="525:43">[<expr pos:start="525:41" pos:end="525:42"><name pos:start="525:41" pos:end="525:42">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="525:46" pos:end="525:65"><expr pos:start="525:46" pos:end="525:65"><call pos:start="525:46" pos:end="525:65"><name pos:start="525:46" pos:end="525:56">zero_extend</name><argument_list pos:start="525:57" pos:end="525:65">(<argument pos:start="525:58" pos:end="525:60"><expr pos:start="525:58" pos:end="525:60"><name pos:start="525:58" pos:end="525:60">I16</name></expr></argument>, <argument pos:start="525:63" pos:end="525:64"><expr pos:start="525:63" pos:end="525:64"><literal type="number" pos:start="525:63" pos:end="525:64">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="527:9" pos:end="527:14">break;</break>



    <case pos:start="531:5" pos:end="531:14">case <expr pos:start="531:10" pos:end="531:13"><literal type="number" pos:start="531:10" pos:end="531:13">0x2b</literal></expr>:</case>    <comment type="block" pos:start="531:19" pos:end="531:30">/* l.xori */</comment>

        <expr_stmt pos:start="533:9" pos:end="533:54"><expr pos:start="533:9" pos:end="533:53"><call pos:start="533:9" pos:end="533:53"><name pos:start="533:9" pos:end="533:15">LOG_DIS</name><argument_list pos:start="533:16" pos:end="533:53">(<argument pos:start="533:17" pos:end="533:39"><expr pos:start="533:17" pos:end="533:39"><literal type="string" pos:start="533:17" pos:end="533:39">"l.xori r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="533:42" pos:end="533:43"><expr pos:start="533:42" pos:end="533:43"><name pos:start="533:42" pos:end="533:43">rd</name></expr></argument>, <argument pos:start="533:46" pos:end="533:47"><expr pos:start="533:46" pos:end="533:47"><name pos:start="533:46" pos:end="533:47">ra</name></expr></argument>, <argument pos:start="533:50" pos:end="533:52"><expr pos:start="533:50" pos:end="533:52"><name pos:start="533:50" pos:end="533:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="535:9" pos:end="535:68"><expr pos:start="535:9" pos:end="535:67"><call pos:start="535:9" pos:end="535:67"><name pos:start="535:9" pos:end="535:23">tcg_gen_xori_tl</name><argument_list pos:start="535:24" pos:end="535:67">(<argument pos:start="535:25" pos:end="535:33"><expr pos:start="535:25" pos:end="535:33"><name pos:start="535:25" pos:end="535:33"><name pos:start="535:25" pos:end="535:29">cpu_R</name><index pos:start="535:30" pos:end="535:33">[<expr pos:start="535:31" pos:end="535:32"><name pos:start="535:31" pos:end="535:32">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="535:36" pos:end="535:44"><expr pos:start="535:36" pos:end="535:44"><name pos:start="535:36" pos:end="535:44"><name pos:start="535:36" pos:end="535:40">cpu_R</name><index pos:start="535:41" pos:end="535:44">[<expr pos:start="535:42" pos:end="535:43"><name pos:start="535:42" pos:end="535:43">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="535:47" pos:end="535:66"><expr pos:start="535:47" pos:end="535:66"><call pos:start="535:47" pos:end="535:66"><name pos:start="535:47" pos:end="535:57">sign_extend</name><argument_list pos:start="535:58" pos:end="535:66">(<argument pos:start="535:59" pos:end="535:61"><expr pos:start="535:59" pos:end="535:61"><name pos:start="535:59" pos:end="535:61">I16</name></expr></argument>, <argument pos:start="535:64" pos:end="535:65"><expr pos:start="535:64" pos:end="535:65"><literal type="number" pos:start="535:64" pos:end="535:65">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="537:9" pos:end="537:14">break;</break>



    <case pos:start="541:5" pos:end="541:14">case <expr pos:start="541:10" pos:end="541:13"><literal type="number" pos:start="541:10" pos:end="541:13">0x2c</literal></expr>:</case>    <comment type="block" pos:start="541:19" pos:end="541:30">/* l.muli */</comment>

        <expr_stmt pos:start="543:9" pos:end="543:54"><expr pos:start="543:9" pos:end="543:53"><call pos:start="543:9" pos:end="543:53"><name pos:start="543:9" pos:end="543:15">LOG_DIS</name><argument_list pos:start="543:16" pos:end="543:53">(<argument pos:start="543:17" pos:end="543:39"><expr pos:start="543:17" pos:end="543:39"><literal type="string" pos:start="543:17" pos:end="543:39">"l.muli r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="543:42" pos:end="543:43"><expr pos:start="543:42" pos:end="543:43"><name pos:start="543:42" pos:end="543:43">rd</name></expr></argument>, <argument pos:start="543:46" pos:end="543:47"><expr pos:start="543:46" pos:end="543:47"><name pos:start="543:46" pos:end="543:47">ra</name></expr></argument>, <argument pos:start="543:50" pos:end="543:52"><expr pos:start="543:50" pos:end="543:52"><name pos:start="543:50" pos:end="543:52">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="545:9" pos:end="557:9"><if pos:start="545:9" pos:end="553:9">if <condition pos:start="545:12" pos:end="545:32">(<expr pos:start="545:13" pos:end="545:31"><name pos:start="545:13" pos:end="545:14">ra</name> <operator pos:start="545:16" pos:end="545:17">!=</operator> <literal type="number" pos:start="545:19" pos:end="545:19">0</literal> <operator pos:start="545:21" pos:end="545:22">&amp;&amp;</operator> <name pos:start="545:24" pos:end="545:26">I16</name> <operator pos:start="545:28" pos:end="545:29">!=</operator> <literal type="number" pos:start="545:31" pos:end="545:31">0</literal></expr>)</condition> <block pos:start="545:34" pos:end="553:9">{<block_content pos:start="547:13" pos:end="551:34">

            <decl_stmt pos:start="547:13" pos:end="547:45"><decl pos:start="547:13" pos:end="547:44"><type pos:start="547:13" pos:end="547:20"><name pos:start="547:13" pos:end="547:20">TCGv_i32</name></type> <name pos:start="547:22" pos:end="547:23">im</name> <init pos:start="547:25" pos:end="547:44">= <expr pos:start="547:27" pos:end="547:44"><call pos:start="547:27" pos:end="547:44"><name pos:start="547:27" pos:end="547:39">tcg_const_i32</name><argument_list pos:start="547:40" pos:end="547:44">(<argument pos:start="547:41" pos:end="547:43"><expr pos:start="547:41" pos:end="547:43"><name pos:start="547:41" pos:end="547:43">I16</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="549:13" pos:end="549:64"><expr pos:start="549:13" pos:end="549:63"><call pos:start="549:13" pos:end="549:63"><name pos:start="549:13" pos:end="549:28">gen_helper_mul32</name><argument_list pos:start="549:29" pos:end="549:63">(<argument pos:start="549:30" pos:end="549:38"><expr pos:start="549:30" pos:end="549:38"><name pos:start="549:30" pos:end="549:38"><name pos:start="549:30" pos:end="549:34">cpu_R</name><index pos:start="549:35" pos:end="549:38">[<expr pos:start="549:36" pos:end="549:37"><name pos:start="549:36" pos:end="549:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="549:41" pos:end="549:47"><expr pos:start="549:41" pos:end="549:47"><name pos:start="549:41" pos:end="549:47">cpu_env</name></expr></argument>, <argument pos:start="549:50" pos:end="549:58"><expr pos:start="549:50" pos:end="549:58"><name pos:start="549:50" pos:end="549:58"><name pos:start="549:50" pos:end="549:54">cpu_R</name><index pos:start="549:55" pos:end="549:58">[<expr pos:start="549:56" pos:end="549:57"><name pos:start="549:56" pos:end="549:57">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="549:61" pos:end="549:62"><expr pos:start="549:61" pos:end="549:62"><name pos:start="549:61" pos:end="549:62">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="551:13" pos:end="551:34"><expr pos:start="551:13" pos:end="551:33"><call pos:start="551:13" pos:end="551:33"><name pos:start="551:13" pos:end="551:29">tcg_temp_free_i32</name><argument_list pos:start="551:30" pos:end="551:33">(<argument pos:start="551:31" pos:end="551:32"><expr pos:start="551:31" pos:end="551:32"><name pos:start="551:31" pos:end="551:32">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if> <else pos:start="553:11" pos:end="557:9">else <block pos:start="553:16" pos:end="557:9">{<block_content pos:start="555:13" pos:end="555:44">

            <expr_stmt pos:start="555:13" pos:end="555:44"><expr pos:start="555:13" pos:end="555:43"><call pos:start="555:13" pos:end="555:43"><name pos:start="555:13" pos:end="555:27">tcg_gen_movi_tl</name><argument_list pos:start="555:28" pos:end="555:43">(<argument pos:start="555:29" pos:end="555:37"><expr pos:start="555:29" pos:end="555:37"><name pos:start="555:29" pos:end="555:37"><name pos:start="555:29" pos:end="555:33">cpu_R</name><index pos:start="555:34" pos:end="555:37">[<expr pos:start="555:35" pos:end="555:36"><name pos:start="555:35" pos:end="555:36">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="555:40" pos:end="555:42"><expr pos:start="555:40" pos:end="555:42"><literal type="number" pos:start="555:40" pos:end="555:42">0x0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></else></if_stmt>

        <break pos:start="559:9" pos:end="559:14">break;</break>



    <case pos:start="563:5" pos:end="563:14">case <expr pos:start="563:10" pos:end="563:13"><literal type="number" pos:start="563:10" pos:end="563:13">0x2d</literal></expr>:</case>    <comment type="block" pos:start="563:19" pos:end="563:31">/* l.mfspr */</comment>

        <expr_stmt pos:start="565:9" pos:end="565:55"><expr pos:start="565:9" pos:end="565:54"><call pos:start="565:9" pos:end="565:54"><name pos:start="565:9" pos:end="565:15">LOG_DIS</name><argument_list pos:start="565:16" pos:end="565:54">(<argument pos:start="565:17" pos:end="565:40"><expr pos:start="565:17" pos:end="565:40"><literal type="string" pos:start="565:17" pos:end="565:40">"l.mfspr r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="565:43" pos:end="565:44"><expr pos:start="565:43" pos:end="565:44"><name pos:start="565:43" pos:end="565:44">rd</name></expr></argument>, <argument pos:start="565:47" pos:end="565:48"><expr pos:start="565:47" pos:end="565:48"><name pos:start="565:47" pos:end="565:48">ra</name></expr></argument>, <argument pos:start="565:51" pos:end="565:53"><expr pos:start="565:51" pos:end="565:53"><name pos:start="565:51" pos:end="565:53">I16</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="567:9" pos:end="591:9">{<block_content pos:start="571:13" pos:end="590:0">

<cpp:if pos:start="569:1" pos:end="569:29">#<cpp:directive pos:start="569:2" pos:end="569:3">if</cpp:directive> <expr pos:start="569:5" pos:end="569:29"><call pos:start="569:5" pos:end="569:29"><name pos:start="569:5" pos:end="569:11">defined</name><argument_list pos:start="569:12" pos:end="569:29">(<argument pos:start="569:13" pos:end="569:28"><expr pos:start="569:13" pos:end="569:28"><name pos:start="569:13" pos:end="569:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <return pos:start="571:13" pos:end="574:0">return;</return>

<cpp:else pos:start="573:1" pos:end="573:5">#<cpp:directive pos:start="573:2" pos:end="573:5">else</cpp:directive></cpp:else>

            <decl_stmt pos:start="575:13" pos:end="575:45"><decl pos:start="575:13" pos:end="575:44"><type pos:start="575:13" pos:end="575:20"><name pos:start="575:13" pos:end="575:20">TCGv_i32</name></type> <name pos:start="575:22" pos:end="575:23">ti</name> <init pos:start="575:25" pos:end="575:44">= <expr pos:start="575:27" pos:end="575:44"><call pos:start="575:27" pos:end="575:44"><name pos:start="575:27" pos:end="575:39">tcg_const_i32</name><argument_list pos:start="575:40" pos:end="575:44">(<argument pos:start="575:41" pos:end="575:43"><expr pos:start="575:41" pos:end="575:43"><name pos:start="575:41" pos:end="575:43">I16</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="577:13" pos:end="583:13"><if pos:start="577:13" pos:end="583:13">if <condition pos:start="577:16" pos:end="577:44">(<expr pos:start="577:17" pos:end="577:43"><name pos:start="577:17" pos:end="577:27"><name pos:start="577:17" pos:end="577:18">dc</name><operator pos:start="577:19" pos:end="577:20">-&gt;</operator><name pos:start="577:21" pos:end="577:27">mem_idx</name></name> <operator pos:start="577:29" pos:end="577:30">==</operator> <name pos:start="577:32" pos:end="577:43">MMU_USER_IDX</name></expr>)</condition> <block pos:start="577:46" pos:end="583:13">{<block_content pos:start="579:17" pos:end="581:23">

                <expr_stmt pos:start="579:17" pos:end="579:42"><expr pos:start="579:17" pos:end="579:41"><call pos:start="579:17" pos:end="579:41"><name pos:start="579:17" pos:end="579:37">gen_illegal_exception</name><argument_list pos:start="579:38" pos:end="579:41">(<argument pos:start="579:39" pos:end="579:40"><expr pos:start="579:39" pos:end="579:40"><name pos:start="579:39" pos:end="579:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="581:17" pos:end="581:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="585:13" pos:end="585:75"><expr pos:start="585:13" pos:end="585:74"><call pos:start="585:13" pos:end="585:74"><name pos:start="585:13" pos:end="585:28">gen_helper_mfspr</name><argument_list pos:start="585:29" pos:end="585:74">(<argument pos:start="585:30" pos:end="585:38"><expr pos:start="585:30" pos:end="585:38"><name pos:start="585:30" pos:end="585:38"><name pos:start="585:30" pos:end="585:34">cpu_R</name><index pos:start="585:35" pos:end="585:38">[<expr pos:start="585:36" pos:end="585:37"><name pos:start="585:36" pos:end="585:37">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="585:41" pos:end="585:47"><expr pos:start="585:41" pos:end="585:47"><name pos:start="585:41" pos:end="585:47">cpu_env</name></expr></argument>, <argument pos:start="585:50" pos:end="585:58"><expr pos:start="585:50" pos:end="585:58"><name pos:start="585:50" pos:end="585:58"><name pos:start="585:50" pos:end="585:54">cpu_R</name><index pos:start="585:55" pos:end="585:58">[<expr pos:start="585:56" pos:end="585:57"><name pos:start="585:56" pos:end="585:57">rd</name></expr>]</index></name></expr></argument>, <argument pos:start="585:61" pos:end="585:69"><expr pos:start="585:61" pos:end="585:69"><name pos:start="585:61" pos:end="585:69"><name pos:start="585:61" pos:end="585:65">cpu_R</name><index pos:start="585:66" pos:end="585:69">[<expr pos:start="585:67" pos:end="585:68"><name pos:start="585:67" pos:end="585:68">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="585:72" pos:end="585:73"><expr pos:start="585:72" pos:end="585:73"><name pos:start="585:72" pos:end="585:73">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="587:13" pos:end="590:0"><expr pos:start="587:13" pos:end="587:33"><call pos:start="587:13" pos:end="587:33"><name pos:start="587:13" pos:end="587:29">tcg_temp_free_i32</name><argument_list pos:start="587:30" pos:end="587:33">(<argument pos:start="587:31" pos:end="587:32"><expr pos:start="587:31" pos:end="587:32"><name pos:start="587:31" pos:end="587:32">ti</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="589:1" pos:end="589:6">#<cpp:directive pos:start="589:2" pos:end="589:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="593:9" pos:end="593:14">break;</break>



    <case pos:start="597:5" pos:end="597:14">case <expr pos:start="597:10" pos:end="597:13"><literal type="number" pos:start="597:10" pos:end="597:13">0x30</literal></expr>:</case>    <comment type="block" pos:start="597:19" pos:end="597:31">/* l.mtspr */</comment>

        <expr_stmt pos:start="599:9" pos:end="599:63"><expr pos:start="599:9" pos:end="599:62"><call pos:start="599:9" pos:end="599:62"><name pos:start="599:9" pos:end="599:15">LOG_DIS</name><argument_list pos:start="599:16" pos:end="599:62">(<argument pos:start="599:17" pos:end="599:44"><expr pos:start="599:17" pos:end="599:44"><literal type="string" pos:start="599:17" pos:end="599:44">"l.mtspr %d, r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="599:47" pos:end="599:48"><expr pos:start="599:47" pos:end="599:48"><name pos:start="599:47" pos:end="599:48">I5</name></expr></argument>, <argument pos:start="599:51" pos:end="599:52"><expr pos:start="599:51" pos:end="599:52"><name pos:start="599:51" pos:end="599:52">ra</name></expr></argument>, <argument pos:start="599:55" pos:end="599:56"><expr pos:start="599:55" pos:end="599:56"><name pos:start="599:55" pos:end="599:56">rb</name></expr></argument>, <argument pos:start="599:59" pos:end="599:61"><expr pos:start="599:59" pos:end="599:61"><name pos:start="599:59" pos:end="599:61">I11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <block pos:start="601:9" pos:end="625:9">{<block_content pos:start="605:13" pos:end="624:0">

<cpp:if pos:start="603:1" pos:end="603:29">#<cpp:directive pos:start="603:2" pos:end="603:3">if</cpp:directive> <expr pos:start="603:5" pos:end="603:29"><call pos:start="603:5" pos:end="603:29"><name pos:start="603:5" pos:end="603:11">defined</name><argument_list pos:start="603:12" pos:end="603:29">(<argument pos:start="603:13" pos:end="603:28"><expr pos:start="603:13" pos:end="603:28"><name pos:start="603:13" pos:end="603:28">CONFIG_USER_ONLY</name></expr></argument>)</argument_list></call></expr></cpp:if>

            <return pos:start="605:13" pos:end="608:0">return;</return>

<cpp:else pos:start="607:1" pos:end="607:5">#<cpp:directive pos:start="607:2" pos:end="607:5">else</cpp:directive></cpp:else>

            <decl_stmt pos:start="609:13" pos:end="609:45"><decl pos:start="609:13" pos:end="609:44"><type pos:start="609:13" pos:end="609:20"><name pos:start="609:13" pos:end="609:20">TCGv_i32</name></type> <name pos:start="609:22" pos:end="609:23">im</name> <init pos:start="609:25" pos:end="609:44">= <expr pos:start="609:27" pos:end="609:44"><call pos:start="609:27" pos:end="609:44"><name pos:start="609:27" pos:end="609:39">tcg_const_i32</name><argument_list pos:start="609:40" pos:end="609:44">(<argument pos:start="609:41" pos:end="609:43"><expr pos:start="609:41" pos:end="609:43"><name pos:start="609:41" pos:end="609:43">tmp</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

            <if_stmt pos:start="611:13" pos:end="617:13"><if pos:start="611:13" pos:end="617:13">if <condition pos:start="611:16" pos:end="611:44">(<expr pos:start="611:17" pos:end="611:43"><name pos:start="611:17" pos:end="611:27"><name pos:start="611:17" pos:end="611:18">dc</name><operator pos:start="611:19" pos:end="611:20">-&gt;</operator><name pos:start="611:21" pos:end="611:27">mem_idx</name></name> <operator pos:start="611:29" pos:end="611:30">==</operator> <name pos:start="611:32" pos:end="611:43">MMU_USER_IDX</name></expr>)</condition> <block pos:start="611:46" pos:end="617:13">{<block_content pos:start="613:17" pos:end="615:23">

                <expr_stmt pos:start="613:17" pos:end="613:42"><expr pos:start="613:17" pos:end="613:41"><call pos:start="613:17" pos:end="613:41"><name pos:start="613:17" pos:end="613:37">gen_illegal_exception</name><argument_list pos:start="613:38" pos:end="613:41">(<argument pos:start="613:39" pos:end="613:40"><expr pos:start="613:39" pos:end="613:40"><name pos:start="613:39" pos:end="613:40">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                <return pos:start="615:17" pos:end="615:23">return;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="619:13" pos:end="619:64"><expr pos:start="619:13" pos:end="619:63"><call pos:start="619:13" pos:end="619:63"><name pos:start="619:13" pos:end="619:28">gen_helper_mtspr</name><argument_list pos:start="619:29" pos:end="619:63">(<argument pos:start="619:30" pos:end="619:36"><expr pos:start="619:30" pos:end="619:36"><name pos:start="619:30" pos:end="619:36">cpu_env</name></expr></argument>, <argument pos:start="619:39" pos:end="619:47"><expr pos:start="619:39" pos:end="619:47"><name pos:start="619:39" pos:end="619:47"><name pos:start="619:39" pos:end="619:43">cpu_R</name><index pos:start="619:44" pos:end="619:47">[<expr pos:start="619:45" pos:end="619:46"><name pos:start="619:45" pos:end="619:46">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="619:50" pos:end="619:58"><expr pos:start="619:50" pos:end="619:58"><name pos:start="619:50" pos:end="619:58"><name pos:start="619:50" pos:end="619:54">cpu_R</name><index pos:start="619:55" pos:end="619:58">[<expr pos:start="619:56" pos:end="619:57"><name pos:start="619:56" pos:end="619:57">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="619:61" pos:end="619:62"><expr pos:start="619:61" pos:end="619:62"><name pos:start="619:61" pos:end="619:62">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="621:13" pos:end="624:0"><expr pos:start="621:13" pos:end="621:33"><call pos:start="621:13" pos:end="621:33"><name pos:start="621:13" pos:end="621:29">tcg_temp_free_i32</name><argument_list pos:start="621:30" pos:end="621:33">(<argument pos:start="621:31" pos:end="621:32"><expr pos:start="621:31" pos:end="621:32"><name pos:start="621:31" pos:end="621:32">im</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<cpp:endif pos:start="623:1" pos:end="623:6">#<cpp:directive pos:start="623:2" pos:end="623:6">endif</cpp:directive></cpp:endif>

        </block_content>}</block>

        <break pos:start="627:9" pos:end="627:14">break;</break>



<comment type="block" pos:start="631:1" pos:end="631:47">/* not used yet, open it when we need or64.  */</comment>

<comment type="block" pos:start="633:1" pos:end="645:8">/*#ifdef TARGET_OPENRISC64

    case 0x34:     l.sd

        LOG_DIS("l.sd %d, r%d, r%d, %d\n", I5, ra, rb, I11);

        check_ob64s(dc);

        mop = MO_TEQ;

        goto do_store;

#endif*/</comment>



    <case pos:start="649:5" pos:end="649:14">case <expr pos:start="649:10" pos:end="649:13"><literal type="number" pos:start="649:10" pos:end="649:13">0x35</literal></expr>:</case>    <comment type="block" pos:start="649:19" pos:end="649:28">/* l.sw */</comment>

        <expr_stmt pos:start="651:9" pos:end="651:60"><expr pos:start="651:9" pos:end="651:59"><call pos:start="651:9" pos:end="651:59"><name pos:start="651:9" pos:end="651:15">LOG_DIS</name><argument_list pos:start="651:16" pos:end="651:59">(<argument pos:start="651:17" pos:end="651:41"><expr pos:start="651:17" pos:end="651:41"><literal type="string" pos:start="651:17" pos:end="651:41">"l.sw %d, r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="651:44" pos:end="651:45"><expr pos:start="651:44" pos:end="651:45"><name pos:start="651:44" pos:end="651:45">I5</name></expr></argument>, <argument pos:start="651:48" pos:end="651:49"><expr pos:start="651:48" pos:end="651:49"><name pos:start="651:48" pos:end="651:49">ra</name></expr></argument>, <argument pos:start="651:52" pos:end="651:53"><expr pos:start="651:52" pos:end="651:53"><name pos:start="651:52" pos:end="651:53">rb</name></expr></argument>, <argument pos:start="651:56" pos:end="651:58"><expr pos:start="651:56" pos:end="651:58"><name pos:start="651:56" pos:end="651:58">I11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="653:9" pos:end="653:22"><expr pos:start="653:9" pos:end="653:21"><name pos:start="653:9" pos:end="653:11">mop</name> <operator pos:start="653:13" pos:end="653:13">=</operator> <name pos:start="653:15" pos:end="653:21">MO_TEUL</name></expr>;</expr_stmt>

        <goto pos:start="655:9" pos:end="655:22">goto <name pos:start="655:14" pos:end="655:21">do_store</name>;</goto>



    <case pos:start="659:5" pos:end="659:14">case <expr pos:start="659:10" pos:end="659:13"><literal type="number" pos:start="659:10" pos:end="659:13">0x36</literal></expr>:</case>    <comment type="block" pos:start="659:19" pos:end="659:28">/* l.sb */</comment>

        <expr_stmt pos:start="661:9" pos:end="661:60"><expr pos:start="661:9" pos:end="661:59"><call pos:start="661:9" pos:end="661:59"><name pos:start="661:9" pos:end="661:15">LOG_DIS</name><argument_list pos:start="661:16" pos:end="661:59">(<argument pos:start="661:17" pos:end="661:41"><expr pos:start="661:17" pos:end="661:41"><literal type="string" pos:start="661:17" pos:end="661:41">"l.sb %d, r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="661:44" pos:end="661:45"><expr pos:start="661:44" pos:end="661:45"><name pos:start="661:44" pos:end="661:45">I5</name></expr></argument>, <argument pos:start="661:48" pos:end="661:49"><expr pos:start="661:48" pos:end="661:49"><name pos:start="661:48" pos:end="661:49">ra</name></expr></argument>, <argument pos:start="661:52" pos:end="661:53"><expr pos:start="661:52" pos:end="661:53"><name pos:start="661:52" pos:end="661:53">rb</name></expr></argument>, <argument pos:start="661:56" pos:end="661:58"><expr pos:start="661:56" pos:end="661:58"><name pos:start="661:56" pos:end="661:58">I11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="663:9" pos:end="663:20"><expr pos:start="663:9" pos:end="663:19"><name pos:start="663:9" pos:end="663:11">mop</name> <operator pos:start="663:13" pos:end="663:13">=</operator> <name pos:start="663:15" pos:end="663:19">MO_UB</name></expr>;</expr_stmt>

        <goto pos:start="665:9" pos:end="665:22">goto <name pos:start="665:14" pos:end="665:21">do_store</name>;</goto>



    <case pos:start="669:5" pos:end="669:14">case <expr pos:start="669:10" pos:end="669:13"><literal type="number" pos:start="669:10" pos:end="669:13">0x37</literal></expr>:</case>    <comment type="block" pos:start="669:19" pos:end="669:28">/* l.sh */</comment>

        <expr_stmt pos:start="671:9" pos:end="671:60"><expr pos:start="671:9" pos:end="671:59"><call pos:start="671:9" pos:end="671:59"><name pos:start="671:9" pos:end="671:15">LOG_DIS</name><argument_list pos:start="671:16" pos:end="671:59">(<argument pos:start="671:17" pos:end="671:41"><expr pos:start="671:17" pos:end="671:41"><literal type="string" pos:start="671:17" pos:end="671:41">"l.sh %d, r%d, r%d, %d\n"</literal></expr></argument>, <argument pos:start="671:44" pos:end="671:45"><expr pos:start="671:44" pos:end="671:45"><name pos:start="671:44" pos:end="671:45">I5</name></expr></argument>, <argument pos:start="671:48" pos:end="671:49"><expr pos:start="671:48" pos:end="671:49"><name pos:start="671:48" pos:end="671:49">ra</name></expr></argument>, <argument pos:start="671:52" pos:end="671:53"><expr pos:start="671:52" pos:end="671:53"><name pos:start="671:52" pos:end="671:53">rb</name></expr></argument>, <argument pos:start="671:56" pos:end="671:58"><expr pos:start="671:56" pos:end="671:58"><name pos:start="671:56" pos:end="671:58">I11</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="673:9" pos:end="673:22"><expr pos:start="673:9" pos:end="673:21"><name pos:start="673:9" pos:end="673:11">mop</name> <operator pos:start="673:13" pos:end="673:13">=</operator> <name pos:start="673:15" pos:end="673:21">MO_TEUW</name></expr>;</expr_stmt>

        <goto pos:start="675:9" pos:end="675:22">goto <name pos:start="675:14" pos:end="675:21">do_store</name>;</goto>



    <label pos:start="679:5" pos:end="679:13"><name pos:start="679:5" pos:end="679:12">do_store</name>:</label>

        <block pos:start="681:9" pos:end="691:9">{<block_content pos:start="683:13" pos:end="689:30">

            <decl_stmt pos:start="683:13" pos:end="683:37"><decl pos:start="683:13" pos:end="683:36"><type pos:start="683:13" pos:end="683:16"><name pos:start="683:13" pos:end="683:16">TCGv</name></type> <name pos:start="683:18" pos:end="683:19">t0</name> <init pos:start="683:21" pos:end="683:36">= <expr pos:start="683:23" pos:end="683:36"><call pos:start="683:23" pos:end="683:36"><name pos:start="683:23" pos:end="683:34">tcg_temp_new</name><argument_list pos:start="683:35" pos:end="683:36">()</argument_list></call></expr></init></decl>;</decl_stmt>

            <expr_stmt pos:start="685:13" pos:end="685:65"><expr pos:start="685:13" pos:end="685:64"><call pos:start="685:13" pos:end="685:64"><name pos:start="685:13" pos:end="685:27">tcg_gen_addi_tl</name><argument_list pos:start="685:28" pos:end="685:64">(<argument pos:start="685:29" pos:end="685:30"><expr pos:start="685:29" pos:end="685:30"><name pos:start="685:29" pos:end="685:30">t0</name></expr></argument>, <argument pos:start="685:33" pos:end="685:41"><expr pos:start="685:33" pos:end="685:41"><name pos:start="685:33" pos:end="685:41"><name pos:start="685:33" pos:end="685:37">cpu_R</name><index pos:start="685:38" pos:end="685:41">[<expr pos:start="685:39" pos:end="685:40"><name pos:start="685:39" pos:end="685:40">ra</name></expr>]</index></name></expr></argument>, <argument pos:start="685:44" pos:end="685:63"><expr pos:start="685:44" pos:end="685:63"><call pos:start="685:44" pos:end="685:63"><name pos:start="685:44" pos:end="685:54">sign_extend</name><argument_list pos:start="685:55" pos:end="685:63">(<argument pos:start="685:56" pos:end="685:58"><expr pos:start="685:56" pos:end="685:58"><name pos:start="685:56" pos:end="685:58">tmp</name></expr></argument>, <argument pos:start="685:61" pos:end="685:62"><expr pos:start="685:61" pos:end="685:62"><literal type="number" pos:start="685:61" pos:end="685:62">16</literal></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="687:13" pos:end="687:64"><expr pos:start="687:13" pos:end="687:63"><call pos:start="687:13" pos:end="687:63"><name pos:start="687:13" pos:end="687:30">tcg_gen_qemu_st_tl</name><argument_list pos:start="687:31" pos:end="687:63">(<argument pos:start="687:32" pos:end="687:40"><expr pos:start="687:32" pos:end="687:40"><name pos:start="687:32" pos:end="687:40"><name pos:start="687:32" pos:end="687:36">cpu_R</name><index pos:start="687:37" pos:end="687:40">[<expr pos:start="687:38" pos:end="687:39"><name pos:start="687:38" pos:end="687:39">rb</name></expr>]</index></name></expr></argument>, <argument pos:start="687:43" pos:end="687:44"><expr pos:start="687:43" pos:end="687:44"><name pos:start="687:43" pos:end="687:44">t0</name></expr></argument>, <argument pos:start="687:47" pos:end="687:57"><expr pos:start="687:47" pos:end="687:57"><name pos:start="687:47" pos:end="687:57"><name pos:start="687:47" pos:end="687:48">dc</name><operator pos:start="687:49" pos:end="687:50">-&gt;</operator><name pos:start="687:51" pos:end="687:57">mem_idx</name></name></expr></argument>, <argument pos:start="687:60" pos:end="687:62"><expr pos:start="687:60" pos:end="687:62"><name pos:start="687:60" pos:end="687:62">mop</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="689:13" pos:end="689:30"><expr pos:start="689:13" pos:end="689:29"><call pos:start="689:13" pos:end="689:29"><name pos:start="689:13" pos:end="689:25">tcg_temp_free</name><argument_list pos:start="689:26" pos:end="689:29">(<argument pos:start="689:27" pos:end="689:28"><expr pos:start="689:27" pos:end="689:28"><name pos:start="689:27" pos:end="689:28">t0</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="693:9" pos:end="693:14">break;</break>



    <default pos:start="697:5" pos:end="697:12">default:</default>

        <expr_stmt pos:start="699:9" pos:end="699:34"><expr pos:start="699:9" pos:end="699:33"><call pos:start="699:9" pos:end="699:33"><name pos:start="699:9" pos:end="699:29">gen_illegal_exception</name><argument_list pos:start="699:30" pos:end="699:33">(<argument pos:start="699:31" pos:end="699:32"><expr pos:start="699:31" pos:end="699:32"><name pos:start="699:31" pos:end="699:32">dc</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="701:9" pos:end="701:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
