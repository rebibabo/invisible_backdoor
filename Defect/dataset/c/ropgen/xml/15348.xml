<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/15348.c" pos:tabs="8"><function pos:start="1:1" pos:end="87:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:24">rtc_get_date</name><parameter_list pos:start="1:25" pos:end="3:56">(<parameter pos:start="1:26" pos:end="1:36"><decl pos:start="1:26" pos:end="1:36"><type pos:start="1:26" pos:end="1:36"><name pos:start="1:26" pos:end="1:31">Object</name> <modifier pos:start="1:33" pos:end="1:33">*</modifier></type><name pos:start="1:34" pos:end="1:36">obj</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:48"><decl pos:start="1:39" pos:end="1:48"><type pos:start="1:39" pos:end="1:48"><name pos:start="1:39" pos:end="1:45">Visitor</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:48">v</name></decl></parameter>, <parameter pos:start="1:51" pos:end="1:62"><decl pos:start="1:51" pos:end="1:62"><type pos:start="1:51" pos:end="1:62"><name pos:start="1:51" pos:end="1:54">void</name> <modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:62">opaque</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:41"><decl pos:start="3:26" pos:end="3:41"><type pos:start="3:26" pos:end="3:41"><specifier pos:start="3:26" pos:end="3:30">const</specifier> <name pos:start="3:32" pos:end="3:35">char</name> <modifier pos:start="3:37" pos:end="3:37">*</modifier></type><name pos:start="3:38" pos:end="3:41">name</name></decl></parameter>, <parameter pos:start="3:44" pos:end="3:55"><decl pos:start="3:44" pos:end="3:55"><type pos:start="3:44" pos:end="3:55"><name pos:start="3:44" pos:end="3:48">Error</name> <modifier pos:start="3:50" pos:end="3:50">*</modifier><modifier pos:start="3:51" pos:end="3:51">*</modifier></type><name pos:start="3:52" pos:end="3:55">errp</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="87:1">{<block_content pos:start="7:5" pos:end="85:31">

    <decl_stmt pos:start="7:5" pos:end="7:22"><decl pos:start="7:5" pos:end="7:21"><type pos:start="7:5" pos:end="7:11"><name pos:start="7:5" pos:end="7:9">Error</name> <modifier pos:start="7:11" pos:end="7:11">*</modifier></type><name pos:start="7:12" pos:end="7:14">err</name> <init pos:start="7:16" pos:end="7:21">= <expr pos:start="7:18" pos:end="7:21"><name pos:start="7:18" pos:end="7:21">NULL</name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:36"><decl pos:start="9:5" pos:end="9:35"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">RTCState</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:15">s</name> <init pos:start="9:17" pos:end="9:35">= <expr pos:start="9:19" pos:end="9:35"><call pos:start="9:19" pos:end="9:35"><name pos:start="9:19" pos:end="9:30">MC146818_RTC</name><argument_list pos:start="9:31" pos:end="9:35">(<argument pos:start="9:32" pos:end="9:34"><expr pos:start="9:32" pos:end="9:34"><name pos:start="9:32" pos:end="9:34">obj</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:25"><decl pos:start="11:5" pos:end="11:24"><type pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:13"><name pos:start="11:5" pos:end="11:10">struct</name> <name pos:start="11:12" pos:end="11:13">tm</name></name></type> <name pos:start="11:15" pos:end="11:24">current_tm</name></decl>;</decl_stmt>



    <expr_stmt pos:start="15:5" pos:end="15:23"><expr pos:start="15:5" pos:end="15:22"><call pos:start="15:5" pos:end="15:22"><name pos:start="15:5" pos:end="15:19">rtc_update_time</name><argument_list pos:start="15:20" pos:end="15:22">(<argument pos:start="15:21" pos:end="15:21"><expr pos:start="15:21" pos:end="15:21"><name pos:start="15:21" pos:end="15:21">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="17:5" pos:end="17:33"><expr pos:start="17:5" pos:end="17:32"><call pos:start="17:5" pos:end="17:32"><name pos:start="17:5" pos:end="17:16">rtc_get_time</name><argument_list pos:start="17:17" pos:end="17:32">(<argument pos:start="17:18" pos:end="17:18"><expr pos:start="17:18" pos:end="17:18"><name pos:start="17:18" pos:end="17:18">s</name></expr></argument>, <argument pos:start="17:21" pos:end="17:31"><expr pos:start="17:21" pos:end="17:31"><operator pos:start="17:21" pos:end="17:21">&amp;</operator><name pos:start="17:22" pos:end="17:31">current_tm</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="19:5" pos:end="19:60"><expr pos:start="19:5" pos:end="19:59"><call pos:start="19:5" pos:end="19:59"><name pos:start="19:5" pos:end="19:22">visit_start_struct</name><argument_list pos:start="19:23" pos:end="19:59">(<argument pos:start="19:24" pos:end="19:24"><expr pos:start="19:24" pos:end="19:24"><name pos:start="19:24" pos:end="19:24">v</name></expr></argument>, <argument pos:start="19:27" pos:end="19:30"><expr pos:start="19:27" pos:end="19:30"><name pos:start="19:27" pos:end="19:30">NULL</name></expr></argument>, <argument pos:start="19:33" pos:end="19:43"><expr pos:start="19:33" pos:end="19:43"><literal type="string" pos:start="19:33" pos:end="19:43">"struct tm"</literal></expr></argument>, <argument pos:start="19:46" pos:end="19:49"><expr pos:start="19:46" pos:end="19:49"><name pos:start="19:46" pos:end="19:49">name</name></expr></argument>, <argument pos:start="19:52" pos:end="19:52"><expr pos:start="19:52" pos:end="19:52"><literal type="number" pos:start="19:52" pos:end="19:52">0</literal></expr></argument>, <argument pos:start="19:55" pos:end="19:58"><expr pos:start="19:55" pos:end="19:58"><operator pos:start="19:55" pos:end="19:55">&amp;</operator><name pos:start="19:56" pos:end="19:58">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="25:5"><if pos:start="21:5" pos:end="25:5">if <condition pos:start="21:8" pos:end="21:12">(<expr pos:start="21:9" pos:end="21:11"><name pos:start="21:9" pos:end="21:11">err</name></expr>)</condition> <block pos:start="21:14" pos:end="25:5">{<block_content pos:start="23:9" pos:end="23:17">

        <goto pos:start="23:9" pos:end="23:17">goto <name pos:start="23:14" pos:end="23:16">out</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:62"><expr pos:start="27:5" pos:end="27:61"><call pos:start="27:5" pos:end="27:61"><name pos:start="27:5" pos:end="27:20">visit_type_int32</name><argument_list pos:start="27:21" pos:end="27:61">(<argument pos:start="27:22" pos:end="27:22"><expr pos:start="27:22" pos:end="27:22"><name pos:start="27:22" pos:end="27:22">v</name></expr></argument>, <argument pos:start="27:25" pos:end="27:43"><expr pos:start="27:25" pos:end="27:43"><operator pos:start="27:25" pos:end="27:25">&amp;</operator><name pos:start="27:26" pos:end="27:43"><name pos:start="27:26" pos:end="27:35">current_tm</name><operator pos:start="27:36" pos:end="27:36">.</operator><name pos:start="27:37" pos:end="27:43">tm_year</name></name></expr></argument>, <argument pos:start="27:46" pos:end="27:54"><expr pos:start="27:46" pos:end="27:54"><literal type="string" pos:start="27:46" pos:end="27:54">"tm_year"</literal></expr></argument>, <argument pos:start="27:57" pos:end="27:60"><expr pos:start="27:57" pos:end="27:60"><operator pos:start="27:57" pos:end="27:57">&amp;</operator><name pos:start="27:58" pos:end="27:60">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="33:5"><if pos:start="29:5" pos:end="33:5">if <condition pos:start="29:8" pos:end="29:12">(<expr pos:start="29:9" pos:end="29:11"><name pos:start="29:9" pos:end="29:11">err</name></expr>)</condition> <block pos:start="29:14" pos:end="33:5">{<block_content pos:start="31:9" pos:end="31:21">

        <goto pos:start="31:9" pos:end="31:21">goto <name pos:start="31:14" pos:end="31:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="35:5" pos:end="35:60"><expr pos:start="35:5" pos:end="35:59"><call pos:start="35:5" pos:end="35:59"><name pos:start="35:5" pos:end="35:20">visit_type_int32</name><argument_list pos:start="35:21" pos:end="35:59">(<argument pos:start="35:22" pos:end="35:22"><expr pos:start="35:22" pos:end="35:22"><name pos:start="35:22" pos:end="35:22">v</name></expr></argument>, <argument pos:start="35:25" pos:end="35:42"><expr pos:start="35:25" pos:end="35:42"><operator pos:start="35:25" pos:end="35:25">&amp;</operator><name pos:start="35:26" pos:end="35:42"><name pos:start="35:26" pos:end="35:35">current_tm</name><operator pos:start="35:36" pos:end="35:36">.</operator><name pos:start="35:37" pos:end="35:42">tm_mon</name></name></expr></argument>, <argument pos:start="35:45" pos:end="35:52"><expr pos:start="35:45" pos:end="35:52"><literal type="string" pos:start="35:45" pos:end="35:52">"tm_mon"</literal></expr></argument>, <argument pos:start="35:55" pos:end="35:58"><expr pos:start="35:55" pos:end="35:58"><operator pos:start="35:55" pos:end="35:55">&amp;</operator><name pos:start="35:56" pos:end="35:58">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="37:5" pos:end="41:5"><if pos:start="37:5" pos:end="41:5">if <condition pos:start="37:8" pos:end="37:12">(<expr pos:start="37:9" pos:end="37:11"><name pos:start="37:9" pos:end="37:11">err</name></expr>)</condition> <block pos:start="37:14" pos:end="41:5">{<block_content pos:start="39:9" pos:end="39:21">

        <goto pos:start="39:9" pos:end="39:21">goto <name pos:start="39:14" pos:end="39:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="43:5" pos:end="43:62"><expr pos:start="43:5" pos:end="43:61"><call pos:start="43:5" pos:end="43:61"><name pos:start="43:5" pos:end="43:20">visit_type_int32</name><argument_list pos:start="43:21" pos:end="43:61">(<argument pos:start="43:22" pos:end="43:22"><expr pos:start="43:22" pos:end="43:22"><name pos:start="43:22" pos:end="43:22">v</name></expr></argument>, <argument pos:start="43:25" pos:end="43:43"><expr pos:start="43:25" pos:end="43:43"><operator pos:start="43:25" pos:end="43:25">&amp;</operator><name pos:start="43:26" pos:end="43:43"><name pos:start="43:26" pos:end="43:35">current_tm</name><operator pos:start="43:36" pos:end="43:36">.</operator><name pos:start="43:37" pos:end="43:43">tm_mday</name></name></expr></argument>, <argument pos:start="43:46" pos:end="43:54"><expr pos:start="43:46" pos:end="43:54"><literal type="string" pos:start="43:46" pos:end="43:54">"tm_mday"</literal></expr></argument>, <argument pos:start="43:57" pos:end="43:60"><expr pos:start="43:57" pos:end="43:60"><operator pos:start="43:57" pos:end="43:57">&amp;</operator><name pos:start="43:58" pos:end="43:60">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="45:5" pos:end="49:5"><if pos:start="45:5" pos:end="49:5">if <condition pos:start="45:8" pos:end="45:12">(<expr pos:start="45:9" pos:end="45:11"><name pos:start="45:9" pos:end="45:11">err</name></expr>)</condition> <block pos:start="45:14" pos:end="49:5">{<block_content pos:start="47:9" pos:end="47:21">

        <goto pos:start="47:9" pos:end="47:21">goto <name pos:start="47:14" pos:end="47:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="51:5" pos:end="51:62"><expr pos:start="51:5" pos:end="51:61"><call pos:start="51:5" pos:end="51:61"><name pos:start="51:5" pos:end="51:20">visit_type_int32</name><argument_list pos:start="51:21" pos:end="51:61">(<argument pos:start="51:22" pos:end="51:22"><expr pos:start="51:22" pos:end="51:22"><name pos:start="51:22" pos:end="51:22">v</name></expr></argument>, <argument pos:start="51:25" pos:end="51:43"><expr pos:start="51:25" pos:end="51:43"><operator pos:start="51:25" pos:end="51:25">&amp;</operator><name pos:start="51:26" pos:end="51:43"><name pos:start="51:26" pos:end="51:35">current_tm</name><operator pos:start="51:36" pos:end="51:36">.</operator><name pos:start="51:37" pos:end="51:43">tm_hour</name></name></expr></argument>, <argument pos:start="51:46" pos:end="51:54"><expr pos:start="51:46" pos:end="51:54"><literal type="string" pos:start="51:46" pos:end="51:54">"tm_hour"</literal></expr></argument>, <argument pos:start="51:57" pos:end="51:60"><expr pos:start="51:57" pos:end="51:60"><operator pos:start="51:57" pos:end="51:57">&amp;</operator><name pos:start="51:58" pos:end="51:60">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="53:5" pos:end="57:5"><if pos:start="53:5" pos:end="57:5">if <condition pos:start="53:8" pos:end="53:12">(<expr pos:start="53:9" pos:end="53:11"><name pos:start="53:9" pos:end="53:11">err</name></expr>)</condition> <block pos:start="53:14" pos:end="57:5">{<block_content pos:start="55:9" pos:end="55:21">

        <goto pos:start="55:9" pos:end="55:21">goto <name pos:start="55:14" pos:end="55:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="59:5" pos:end="59:60"><expr pos:start="59:5" pos:end="59:59"><call pos:start="59:5" pos:end="59:59"><name pos:start="59:5" pos:end="59:20">visit_type_int32</name><argument_list pos:start="59:21" pos:end="59:59">(<argument pos:start="59:22" pos:end="59:22"><expr pos:start="59:22" pos:end="59:22"><name pos:start="59:22" pos:end="59:22">v</name></expr></argument>, <argument pos:start="59:25" pos:end="59:42"><expr pos:start="59:25" pos:end="59:42"><operator pos:start="59:25" pos:end="59:25">&amp;</operator><name pos:start="59:26" pos:end="59:42"><name pos:start="59:26" pos:end="59:35">current_tm</name><operator pos:start="59:36" pos:end="59:36">.</operator><name pos:start="59:37" pos:end="59:42">tm_min</name></name></expr></argument>, <argument pos:start="59:45" pos:end="59:52"><expr pos:start="59:45" pos:end="59:52"><literal type="string" pos:start="59:45" pos:end="59:52">"tm_min"</literal></expr></argument>, <argument pos:start="59:55" pos:end="59:58"><expr pos:start="59:55" pos:end="59:58"><operator pos:start="59:55" pos:end="59:55">&amp;</operator><name pos:start="59:56" pos:end="59:58">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="61:5" pos:end="65:5"><if pos:start="61:5" pos:end="65:5">if <condition pos:start="61:8" pos:end="61:12">(<expr pos:start="61:9" pos:end="61:11"><name pos:start="61:9" pos:end="61:11">err</name></expr>)</condition> <block pos:start="61:14" pos:end="65:5">{<block_content pos:start="63:9" pos:end="63:21">

        <goto pos:start="63:9" pos:end="63:21">goto <name pos:start="63:14" pos:end="63:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="67:5" pos:end="67:60"><expr pos:start="67:5" pos:end="67:59"><call pos:start="67:5" pos:end="67:59"><name pos:start="67:5" pos:end="67:20">visit_type_int32</name><argument_list pos:start="67:21" pos:end="67:59">(<argument pos:start="67:22" pos:end="67:22"><expr pos:start="67:22" pos:end="67:22"><name pos:start="67:22" pos:end="67:22">v</name></expr></argument>, <argument pos:start="67:25" pos:end="67:42"><expr pos:start="67:25" pos:end="67:42"><operator pos:start="67:25" pos:end="67:25">&amp;</operator><name pos:start="67:26" pos:end="67:42"><name pos:start="67:26" pos:end="67:35">current_tm</name><operator pos:start="67:36" pos:end="67:36">.</operator><name pos:start="67:37" pos:end="67:42">tm_sec</name></name></expr></argument>, <argument pos:start="67:45" pos:end="67:52"><expr pos:start="67:45" pos:end="67:52"><literal type="string" pos:start="67:45" pos:end="67:52">"tm_sec"</literal></expr></argument>, <argument pos:start="67:55" pos:end="67:58"><expr pos:start="67:55" pos:end="67:58"><operator pos:start="67:55" pos:end="67:55">&amp;</operator><name pos:start="67:56" pos:end="67:58">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="69:5" pos:end="73:5"><if pos:start="69:5" pos:end="73:5">if <condition pos:start="69:8" pos:end="69:12">(<expr pos:start="69:9" pos:end="69:11"><name pos:start="69:9" pos:end="69:11">err</name></expr>)</condition> <block pos:start="69:14" pos:end="73:5">{<block_content pos:start="71:9" pos:end="71:21">

        <goto pos:start="71:9" pos:end="71:21">goto <name pos:start="71:14" pos:end="71:20">out_end</name>;</goto>

    </block_content>}</block></if></if_stmt>

<label pos:start="75:1" pos:end="75:8"><name pos:start="75:1" pos:end="75:7">out_end</name>:</label>

    <expr_stmt pos:start="77:5" pos:end="77:31"><expr pos:start="77:5" pos:end="77:30"><call pos:start="77:5" pos:end="77:30"><name pos:start="77:5" pos:end="77:19">error_propagate</name><argument_list pos:start="77:20" pos:end="77:30">(<argument pos:start="77:21" pos:end="77:24"><expr pos:start="77:21" pos:end="77:24"><name pos:start="77:21" pos:end="77:24">errp</name></expr></argument>, <argument pos:start="77:27" pos:end="77:29"><expr pos:start="77:27" pos:end="77:29"><name pos:start="77:27" pos:end="77:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:15"><expr pos:start="79:5" pos:end="79:14"><name pos:start="79:5" pos:end="79:7">err</name> <operator pos:start="79:9" pos:end="79:9">=</operator> <name pos:start="79:11" pos:end="79:14">NULL</name></expr>;</expr_stmt>

    <expr_stmt pos:start="81:5" pos:end="81:30"><expr pos:start="81:5" pos:end="81:29"><call pos:start="81:5" pos:end="81:29"><name pos:start="81:5" pos:end="81:20">visit_end_struct</name><argument_list pos:start="81:21" pos:end="81:29">(<argument pos:start="81:22" pos:end="81:22"><expr pos:start="81:22" pos:end="81:22"><name pos:start="81:22" pos:end="81:22">v</name></expr></argument>, <argument pos:start="81:25" pos:end="81:28"><expr pos:start="81:25" pos:end="81:28"><name pos:start="81:25" pos:end="81:28">errp</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

<label pos:start="83:1" pos:end="83:4"><name pos:start="83:1" pos:end="83:3">out</name>:</label>

    <expr_stmt pos:start="85:5" pos:end="85:31"><expr pos:start="85:5" pos:end="85:30"><call pos:start="85:5" pos:end="85:30"><name pos:start="85:5" pos:end="85:19">error_propagate</name><argument_list pos:start="85:20" pos:end="85:30">(<argument pos:start="85:21" pos:end="85:24"><expr pos:start="85:21" pos:end="85:24"><name pos:start="85:21" pos:end="85:24">errp</name></expr></argument>, <argument pos:start="85:27" pos:end="85:29"><expr pos:start="85:27" pos:end="85:29"><name pos:start="85:27" pos:end="85:29">err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

</block_content>}</block></function>
</unit>
