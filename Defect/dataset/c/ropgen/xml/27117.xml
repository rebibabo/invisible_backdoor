<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27117.c" pos:tabs="8"><function pos:start="1:1" pos:end="73:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:26">oma_read_packet</name><parameter_list pos:start="1:27" pos:end="1:61">(<parameter pos:start="1:28" pos:end="1:45"><decl pos:start="1:28" pos:end="1:45"><type pos:start="1:28" pos:end="1:45"><name pos:start="1:28" pos:end="1:42">AVFormatContext</name> <modifier pos:start="1:44" pos:end="1:44">*</modifier></type><name pos:start="1:45" pos:end="1:45">s</name></decl></parameter>, <parameter pos:start="1:48" pos:end="1:60"><decl pos:start="1:48" pos:end="1:60"><type pos:start="1:48" pos:end="1:60"><name pos:start="1:48" pos:end="1:55">AVPacket</name> <modifier pos:start="1:57" pos:end="1:57">*</modifier></type><name pos:start="1:58" pos:end="1:60">pkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="73:1">{<block_content pos:start="5:5" pos:end="71:15">

    <decl_stmt pos:start="5:5" pos:end="5:35"><decl pos:start="5:5" pos:end="5:34"><type pos:start="5:5" pos:end="5:16"><name pos:start="5:5" pos:end="5:14">OMAContext</name> <modifier pos:start="5:16" pos:end="5:16">*</modifier></type><name pos:start="5:17" pos:end="5:18">oc</name>  <init pos:start="5:21" pos:end="5:34">= <expr pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:34"><name pos:start="5:23" pos:end="5:23">s</name><operator pos:start="5:24" pos:end="5:25">-&gt;</operator><name pos:start="5:26" pos:end="5:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:36"><decl pos:start="7:5" pos:end="7:35"><type pos:start="7:5" pos:end="7:14"><name pos:start="7:5" pos:end="7:12">AVStream</name> <modifier pos:start="7:14" pos:end="7:14">*</modifier></type><name pos:start="7:15" pos:end="7:16">st</name>    <init pos:start="7:21" pos:end="7:35">= <expr pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:35"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:32">streams</name><index pos:start="7:33" pos:end="7:35">[<expr pos:start="7:34" pos:end="7:34"><literal type="number" pos:start="7:34" pos:end="7:34">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:45"><decl pos:start="9:5" pos:end="9:44"><type pos:start="9:5" pos:end="9:7"><name pos:start="9:5" pos:end="9:7">int</name></type> <name pos:start="9:9" pos:end="9:19">packet_size</name> <init pos:start="9:21" pos:end="9:44">= <expr pos:start="9:23" pos:end="9:44"><name pos:start="9:23" pos:end="9:44"><name pos:start="9:23" pos:end="9:24">st</name><operator pos:start="9:25" pos:end="9:26">-&gt;</operator><name pos:start="9:27" pos:end="9:31">codec</name><operator pos:start="9:32" pos:end="9:33">-&gt;</operator><name pos:start="9:34" pos:end="9:44">block_align</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:47"><decl pos:start="11:5" pos:end="11:46"><type pos:start="11:5" pos:end="11:7"><name pos:start="11:5" pos:end="11:7">int</name></type> <name pos:start="11:9" pos:end="11:17">byte_rate</name>   <init pos:start="11:21" pos:end="11:46">= <expr pos:start="11:23" pos:end="11:46"><name pos:start="11:23" pos:end="11:41"><name pos:start="11:23" pos:end="11:24">st</name><operator pos:start="11:25" pos:end="11:26">-&gt;</operator><name pos:start="11:27" pos:end="11:31">codec</name><operator pos:start="11:32" pos:end="11:33">-&gt;</operator><name pos:start="11:34" pos:end="11:41">bit_rate</name></name> <operator pos:start="11:43" pos:end="11:44">&gt;&gt;</operator> <literal type="number" pos:start="11:46" pos:end="11:46">3</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:39"><decl pos:start="13:5" pos:end="13:38"><type pos:start="13:5" pos:end="13:11"><name pos:start="13:5" pos:end="13:11">int64_t</name></type> <name pos:start="13:13" pos:end="13:15">pos</name>     <init pos:start="13:21" pos:end="13:38">= <expr pos:start="13:23" pos:end="13:38"><call pos:start="13:23" pos:end="13:38"><name pos:start="13:23" pos:end="13:31">avio_tell</name><argument_list pos:start="13:32" pos:end="13:38">(<argument pos:start="13:33" pos:end="13:37"><expr pos:start="13:33" pos:end="13:37"><name pos:start="13:33" pos:end="13:37"><name pos:start="13:33" pos:end="13:33">s</name><operator pos:start="13:34" pos:end="13:35">-&gt;</operator><name pos:start="13:36" pos:end="13:37">pb</name></name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="15:5" pos:end="15:61"><decl pos:start="15:5" pos:end="15:60"><type pos:start="15:5" pos:end="15:7"><name pos:start="15:5" pos:end="15:7">int</name></type> <name pos:start="15:9" pos:end="15:11">ret</name>         <init pos:start="15:21" pos:end="15:60">= <expr pos:start="15:23" pos:end="15:60"><call pos:start="15:23" pos:end="15:60"><name pos:start="15:23" pos:end="15:35">av_get_packet</name><argument_list pos:start="15:36" pos:end="15:60">(<argument pos:start="15:37" pos:end="15:41"><expr pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:41"><name pos:start="15:37" pos:end="15:37">s</name><operator pos:start="15:38" pos:end="15:39">-&gt;</operator><name pos:start="15:40" pos:end="15:41">pb</name></name></expr></argument>, <argument pos:start="15:44" pos:end="15:46"><expr pos:start="15:44" pos:end="15:46"><name pos:start="15:44" pos:end="15:46">pkt</name></expr></argument>, <argument pos:start="15:49" pos:end="15:59"><expr pos:start="15:49" pos:end="15:59"><name pos:start="15:49" pos:end="15:59">packet_size</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="19:5" pos:end="21:42"><if pos:start="19:5" pos:end="21:42">if <condition pos:start="19:8" pos:end="19:26">(<expr pos:start="19:9" pos:end="19:25"><name pos:start="19:9" pos:end="19:11">ret</name> <operator pos:start="19:13" pos:end="19:13">&lt;</operator> <name pos:start="19:15" pos:end="19:25">packet_size</name></expr>)</condition><block type="pseudo" pos:start="21:9" pos:end="21:42"><block_content pos:start="21:9" pos:end="21:42">

        <expr_stmt pos:start="21:9" pos:end="21:42"><expr pos:start="21:9" pos:end="21:41"><name pos:start="21:9" pos:end="21:18"><name pos:start="21:9" pos:end="21:11">pkt</name><operator pos:start="21:12" pos:end="21:13">-&gt;</operator><name pos:start="21:14" pos:end="21:18">flags</name></name> <operator pos:start="21:20" pos:end="21:21">|=</operator> <name pos:start="21:23" pos:end="21:41">AV_PKT_FLAG_CORRUPT</name></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="25:5" pos:end="27:19"><if pos:start="25:5" pos:end="27:19">if <condition pos:start="25:8" pos:end="25:16">(<expr pos:start="25:9" pos:end="25:15"><name pos:start="25:9" pos:end="25:11">ret</name> <operator pos:start="25:13" pos:end="25:13">&lt;</operator> <literal type="number" pos:start="25:15" pos:end="25:15">0</literal></expr>)</condition><block type="pseudo" pos:start="27:9" pos:end="27:19"><block_content pos:start="27:9" pos:end="27:19">

        <return pos:start="27:9" pos:end="27:19">return <expr pos:start="27:16" pos:end="27:18"><name pos:start="27:16" pos:end="27:18">ret</name></expr>;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="29:5" pos:end="31:27"><if pos:start="29:5" pos:end="31:27">if <condition pos:start="29:8" pos:end="29:13">(<expr pos:start="29:9" pos:end="29:12"><operator pos:start="29:9" pos:end="29:9">!</operator><name pos:start="29:10" pos:end="29:12">ret</name></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:27"><block_content pos:start="31:9" pos:end="31:27">

        <return pos:start="31:9" pos:end="31:27">return <expr pos:start="31:16" pos:end="31:26"><name pos:start="31:16" pos:end="31:26">AVERROR_EOF</name></expr>;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="35:5" pos:end="35:26"><expr pos:start="35:5" pos:end="35:25"><name pos:start="35:5" pos:end="35:21"><name pos:start="35:5" pos:end="35:7">pkt</name><operator pos:start="35:8" pos:end="35:9">-&gt;</operator><name pos:start="35:10" pos:end="35:21">stream_index</name></name> <operator pos:start="35:23" pos:end="35:23">=</operator> <literal type="number" pos:start="35:25" pos:end="35:25">0</literal></expr>;</expr_stmt>



    <if_stmt pos:start="39:5" pos:end="47:5"><if pos:start="39:5" pos:end="47:5">if <condition pos:start="39:8" pos:end="39:16">(<expr pos:start="39:9" pos:end="39:15"><name pos:start="39:9" pos:end="39:11">pos</name> <operator pos:start="39:13" pos:end="39:13">&gt;</operator> <literal type="number" pos:start="39:15" pos:end="39:15">0</literal></expr>)</condition> <block pos:start="39:18" pos:end="47:5">{<block_content pos:start="41:9" pos:end="45:70">

        <expr_stmt pos:start="41:9" pos:end="45:70"><expr pos:start="41:9" pos:end="45:69"><name pos:start="41:9" pos:end="41:16"><name pos:start="41:9" pos:end="41:11">pkt</name><operator pos:start="41:12" pos:end="41:13">-&gt;</operator><name pos:start="41:14" pos:end="41:16">pts</name></name> <operator pos:start="41:18" pos:end="41:18">=</operator>

        <name pos:start="43:9" pos:end="43:16"><name pos:start="43:9" pos:end="43:11">pkt</name><operator pos:start="43:12" pos:end="43:13">-&gt;</operator><name pos:start="43:14" pos:end="43:16">dts</name></name> <operator pos:start="43:18" pos:end="43:18">=</operator> <call pos:start="43:20" pos:end="45:69"><name pos:start="43:20" pos:end="43:29">av_rescale</name><argument_list pos:start="43:30" pos:end="45:69">(<argument pos:start="43:31" pos:end="43:33"><expr pos:start="43:31" pos:end="43:33"><name pos:start="43:31" pos:end="43:33">pos</name></expr></argument>, <argument pos:start="43:36" pos:end="43:52"><expr pos:start="43:36" pos:end="43:52"><name pos:start="43:36" pos:end="43:52"><name pos:start="43:36" pos:end="43:37">st</name><operator pos:start="43:38" pos:end="43:39">-&gt;</operator><name pos:start="43:40" pos:end="43:48">time_base</name><operator pos:start="43:49" pos:end="43:49">.</operator><name pos:start="43:50" pos:end="43:52">den</name></name></expr></argument>,

                              <argument pos:start="45:31" pos:end="45:68"><expr pos:start="45:31" pos:end="45:68"><name pos:start="45:31" pos:end="45:39">byte_rate</name> <operator pos:start="45:41" pos:end="45:41">*</operator> <operator pos:start="45:43" pos:end="45:43">(</operator><name pos:start="45:44" pos:end="45:50">int64_t</name><operator pos:start="45:51" pos:end="45:51">)</operator><name pos:start="45:52" pos:end="45:68"><name pos:start="45:52" pos:end="45:53">st</name><operator pos:start="45:54" pos:end="45:55">-&gt;</operator><name pos:start="45:56" pos:end="45:64">time_base</name><operator pos:start="45:65" pos:end="45:65">.</operator><name pos:start="45:66" pos:end="45:68">num</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="51:5" pos:end="67:5"><if pos:start="51:5" pos:end="67:5">if <condition pos:start="51:8" pos:end="51:22">(<expr pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:21"><name pos:start="51:9" pos:end="51:10">oc</name><operator pos:start="51:11" pos:end="51:12">-&gt;</operator><name pos:start="51:13" pos:end="51:21">encrypted</name></name></expr>)</condition> <block pos:start="51:24" pos:end="67:5">{<block_content pos:start="57:9" pos:end="65:33">

        <comment type="block" pos:start="53:9" pos:end="55:40">/* previous unencrypted block saved in IV for

         * the next packet (CBC mode) */</comment>

        <if_stmt pos:start="57:9" pos:end="65:33"><if pos:start="57:9" pos:end="61:56">if <condition pos:start="57:12" pos:end="57:31">(<expr pos:start="57:13" pos:end="57:30"><name pos:start="57:13" pos:end="57:15">ret</name> <operator pos:start="57:17" pos:end="57:18">==</operator> <name pos:start="57:20" pos:end="57:30">packet_size</name></expr>)</condition><block type="pseudo" pos:start="59:13" pos:end="61:56"><block_content pos:start="59:13" pos:end="61:56">

            <expr_stmt pos:start="59:13" pos:end="61:56"><expr pos:start="59:13" pos:end="61:55"><call pos:start="59:13" pos:end="61:55"><name pos:start="59:13" pos:end="59:24">av_des_crypt</name><argument_list pos:start="59:25" pos:end="61:55">(<argument pos:start="59:26" pos:end="59:36"><expr pos:start="59:26" pos:end="59:36"><operator pos:start="59:26" pos:end="59:26">&amp;</operator><name pos:start="59:27" pos:end="59:36"><name pos:start="59:27" pos:end="59:28">oc</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:36">av_des</name></name></expr></argument>, <argument pos:start="59:39" pos:end="59:47"><expr pos:start="59:39" pos:end="59:47"><name pos:start="59:39" pos:end="59:47"><name pos:start="59:39" pos:end="59:41">pkt</name><operator pos:start="59:42" pos:end="59:43">-&gt;</operator><name pos:start="59:44" pos:end="59:47">data</name></name></expr></argument>, <argument pos:start="59:50" pos:end="59:58"><expr pos:start="59:50" pos:end="59:58"><name pos:start="59:50" pos:end="59:58"><name pos:start="59:50" pos:end="59:52">pkt</name><operator pos:start="59:53" pos:end="59:54">-&gt;</operator><name pos:start="59:55" pos:end="59:58">data</name></name></expr></argument>,

                         <argument pos:start="61:26" pos:end="61:43"><expr pos:start="61:26" pos:end="61:43"><operator pos:start="61:26" pos:end="61:26">(</operator><name pos:start="61:27" pos:end="61:37">packet_size</name> <operator pos:start="61:39" pos:end="61:40">&gt;&gt;</operator> <literal type="number" pos:start="61:42" pos:end="61:42">3</literal><operator pos:start="61:43" pos:end="61:43">)</operator></expr></argument>, <argument pos:start="61:46" pos:end="61:51"><expr pos:start="61:46" pos:end="61:51"><name pos:start="61:46" pos:end="61:51"><name pos:start="61:46" pos:end="61:47">oc</name><operator pos:start="61:48" pos:end="61:49">-&gt;</operator><name pos:start="61:50" pos:end="61:51">iv</name></name></expr></argument>, <argument pos:start="61:54" pos:end="61:54"><expr pos:start="61:54" pos:end="61:54"><literal type="number" pos:start="61:54" pos:end="61:54">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if>

        <else pos:start="63:9" pos:end="65:33">else<block type="pseudo" pos:start="65:13" pos:end="65:33"><block_content pos:start="65:13" pos:end="65:33">

            <expr_stmt pos:start="65:13" pos:end="65:33"><expr pos:start="65:13" pos:end="65:32"><call pos:start="65:13" pos:end="65:32"><name pos:start="65:13" pos:end="65:18">memset</name><argument_list pos:start="65:19" pos:end="65:32">(<argument pos:start="65:20" pos:end="65:25"><expr pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:25"><name pos:start="65:20" pos:end="65:21">oc</name><operator pos:start="65:22" pos:end="65:23">-&gt;</operator><name pos:start="65:24" pos:end="65:25">iv</name></name></expr></argument>, <argument pos:start="65:28" pos:end="65:28"><expr pos:start="65:28" pos:end="65:28"><literal type="number" pos:start="65:28" pos:end="65:28">0</literal></expr></argument>, <argument pos:start="65:31" pos:end="65:31"><expr pos:start="65:31" pos:end="65:31"><literal type="number" pos:start="65:31" pos:end="65:31">8</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></else></if_stmt>

    </block_content>}</block></if></if_stmt>



    <return pos:start="71:5" pos:end="71:15">return <expr pos:start="71:12" pos:end="71:14"><name pos:start="71:12" pos:end="71:14">ret</name></expr>;</return>

</block_content>}</block></function>
</unit>
