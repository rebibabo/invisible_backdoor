<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/14633.c" pos:tabs="8"><function pos:start="1:1" pos:end="69:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:29">acquire_privilege</name><parameter_list pos:start="1:30" pos:end="1:61">(<parameter pos:start="1:31" pos:end="1:46"><decl pos:start="1:31" pos:end="1:46"><type pos:start="1:31" pos:end="1:46"><specifier pos:start="1:31" pos:end="1:35">const</specifier> <name pos:start="1:37" pos:end="1:40">char</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:46">name</name></decl></parameter>, <parameter pos:start="1:49" pos:end="1:60"><decl pos:start="1:49" pos:end="1:60"><type pos:start="1:49" pos:end="1:60"><name pos:start="1:49" pos:end="1:53">Error</name> <modifier pos:start="1:55" pos:end="1:55">*</modifier><modifier pos:start="1:56" pos:end="1:56">*</modifier></type><name pos:start="1:57" pos:end="1:60">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="69:1">{<block_content pos:start="5:5" pos:end="67:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:10"><name pos:start="5:5" pos:end="5:10">HANDLE</name></type> <name pos:start="5:12" pos:end="5:16">token</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:26"><decl pos:start="7:5" pos:end="7:25"><type pos:start="7:5" pos:end="7:20"><name pos:start="7:5" pos:end="7:20">TOKEN_PRIVILEGES</name></type> <name pos:start="7:22" pos:end="7:25">priv</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:28"><decl pos:start="9:5" pos:end="9:27"><type pos:start="9:5" pos:end="9:11"><name pos:start="9:5" pos:end="9:9">Error</name> <modifier pos:start="9:11" pos:end="9:11">*</modifier></type><name pos:start="9:12" pos:end="9:20">local_err</name> <init pos:start="9:22" pos:end="9:27">= <expr pos:start="9:24" pos:end="9:27"><name pos:start="9:24" pos:end="9:27">NULL</name></expr></init></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="57:5"><if pos:start="13:5" pos:end="51:5">if <condition pos:start="13:8" pos:end="15:53">(<expr pos:start="13:9" pos:end="15:52"><call pos:start="13:9" pos:end="15:52"><name pos:start="13:9" pos:end="13:24">OpenProcessToken</name><argument_list pos:start="13:25" pos:end="15:52">(<argument pos:start="13:26" pos:end="13:44"><expr pos:start="13:26" pos:end="13:44"><call pos:start="13:26" pos:end="13:44"><name pos:start="13:26" pos:end="13:42">GetCurrentProcess</name><argument_list pos:start="13:43" pos:end="13:44">()</argument_list></call></expr></argument>,

        <argument pos:start="15:9" pos:end="15:43"><expr pos:start="15:9" pos:end="15:43"><name pos:start="15:9" pos:end="15:31">TOKEN_ADJUST_PRIVILEGES</name><operator pos:start="15:32" pos:end="15:32">|</operator><name pos:start="15:33" pos:end="15:43">TOKEN_QUERY</name></expr></argument>, <argument pos:start="15:46" pos:end="15:51"><expr pos:start="15:46" pos:end="15:51"><operator pos:start="15:46" pos:end="15:46">&amp;</operator><name pos:start="15:47" pos:end="15:51">token</name></expr></argument>)</argument_list></call></expr>)</condition>

    <block pos:start="17:5" pos:end="51:5">{<block_content pos:start="19:9" pos:end="49:27">

        <if_stmt pos:start="19:9" pos:end="27:9"><if pos:start="19:9" pos:end="27:9">if <condition pos:start="19:12" pos:end="19:72">(<expr pos:start="19:13" pos:end="19:71"><operator pos:start="19:13" pos:end="19:13">!</operator><call pos:start="19:14" pos:end="19:71"><name pos:start="19:14" pos:end="19:33">LookupPrivilegeValue</name><argument_list pos:start="19:34" pos:end="19:71">(<argument pos:start="19:35" pos:end="19:38"><expr pos:start="19:35" pos:end="19:38"><name pos:start="19:35" pos:end="19:38">NULL</name></expr></argument>, <argument pos:start="19:41" pos:end="19:44"><expr pos:start="19:41" pos:end="19:44"><name pos:start="19:41" pos:end="19:44">name</name></expr></argument>, <argument pos:start="19:47" pos:end="19:70"><expr pos:start="19:47" pos:end="19:70"><operator pos:start="19:47" pos:end="19:47">&amp;</operator><name pos:start="19:48" pos:end="19:65"><name pos:start="19:48" pos:end="19:51">priv</name><operator pos:start="19:52" pos:end="19:52">.</operator><name pos:start="19:53" pos:end="19:62">Privileges</name><index pos:start="19:63" pos:end="19:65">[<expr pos:start="19:64" pos:end="19:64"><literal type="number" pos:start="19:64" pos:end="19:64">0</literal></expr>]</index></name><operator pos:start="19:66" pos:end="19:66">.</operator><name pos:start="19:67" pos:end="19:70">Luid</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="19:74" pos:end="27:9">{<block_content pos:start="21:13" pos:end="25:21">

            <expr_stmt pos:start="21:13" pos:end="23:57"><expr pos:start="21:13" pos:end="23:56"><call pos:start="21:13" pos:end="23:56"><name pos:start="21:13" pos:end="21:21">error_set</name><argument_list pos:start="21:22" pos:end="23:56">(<argument pos:start="21:23" pos:end="21:32"><expr pos:start="21:23" pos:end="21:32"><operator pos:start="21:23" pos:end="21:23">&amp;</operator><name pos:start="21:24" pos:end="21:32">local_err</name></expr></argument>, <argument pos:start="21:35" pos:end="21:57"><expr pos:start="21:35" pos:end="21:57"><name pos:start="21:35" pos:end="21:57">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                      <argument pos:start="23:23" pos:end="23:55"><expr pos:start="23:23" pos:end="23:55"><literal type="string" pos:start="23:23" pos:end="23:55">"no luid for requested privilege"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="25:13" pos:end="25:21">goto <name pos:start="25:18" pos:end="25:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="31:9" pos:end="31:32"><expr pos:start="31:9" pos:end="31:31"><name pos:start="31:9" pos:end="31:27"><name pos:start="31:9" pos:end="31:12">priv</name><operator pos:start="31:13" pos:end="31:13">.</operator><name pos:start="31:14" pos:end="31:27">PrivilegeCount</name></name> <operator pos:start="31:29" pos:end="31:29">=</operator> <literal type="number" pos:start="31:31" pos:end="31:31">1</literal></expr>;</expr_stmt>

        <expr_stmt pos:start="33:9" pos:end="33:61"><expr pos:start="33:9" pos:end="33:60"><name pos:start="33:9" pos:end="33:26"><name pos:start="33:9" pos:end="33:12">priv</name><operator pos:start="33:13" pos:end="33:13">.</operator><name pos:start="33:14" pos:end="33:23">Privileges</name><index pos:start="33:24" pos:end="33:26">[<expr pos:start="33:25" pos:end="33:25"><literal type="number" pos:start="33:25" pos:end="33:25">0</literal></expr>]</index></name><operator pos:start="33:27" pos:end="33:27">.</operator><name pos:start="33:28" pos:end="33:37">Attributes</name> <operator pos:start="33:39" pos:end="33:39">=</operator> <name pos:start="33:41" pos:end="33:60">SE_PRIVILEGE_ENABLED</name></expr>;</expr_stmt>



        <if_stmt pos:start="37:9" pos:end="45:9"><if pos:start="37:9" pos:end="45:9">if <condition pos:start="37:12" pos:end="37:68">(<expr pos:start="37:13" pos:end="37:67"><operator pos:start="37:13" pos:end="37:13">!</operator><call pos:start="37:14" pos:end="37:67"><name pos:start="37:14" pos:end="37:34">AdjustTokenPrivileges</name><argument_list pos:start="37:35" pos:end="37:67">(<argument pos:start="37:36" pos:end="37:40"><expr pos:start="37:36" pos:end="37:40"><name pos:start="37:36" pos:end="37:40">token</name></expr></argument>, <argument pos:start="37:43" pos:end="37:47"><expr pos:start="37:43" pos:end="37:47"><name pos:start="37:43" pos:end="37:47">FALSE</name></expr></argument>, <argument pos:start="37:50" pos:end="37:54"><expr pos:start="37:50" pos:end="37:54"><operator pos:start="37:50" pos:end="37:50">&amp;</operator><name pos:start="37:51" pos:end="37:54">priv</name></expr></argument>, <argument pos:start="37:57" pos:end="37:57"><expr pos:start="37:57" pos:end="37:57"><literal type="number" pos:start="37:57" pos:end="37:57">0</literal></expr></argument>, <argument pos:start="37:60" pos:end="37:63"><expr pos:start="37:60" pos:end="37:63"><name pos:start="37:60" pos:end="37:63">NULL</name></expr></argument>, <argument pos:start="37:66" pos:end="37:66"><expr pos:start="37:66" pos:end="37:66"><literal type="number" pos:start="37:66" pos:end="37:66">0</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="37:70" pos:end="45:9">{<block_content pos:start="39:13" pos:end="43:21">

            <expr_stmt pos:start="39:13" pos:end="41:63"><expr pos:start="39:13" pos:end="41:62"><call pos:start="39:13" pos:end="41:62"><name pos:start="39:13" pos:end="39:21">error_set</name><argument_list pos:start="39:22" pos:end="41:62">(<argument pos:start="39:23" pos:end="39:32"><expr pos:start="39:23" pos:end="39:32"><operator pos:start="39:23" pos:end="39:23">&amp;</operator><name pos:start="39:24" pos:end="39:32">local_err</name></expr></argument>, <argument pos:start="39:35" pos:end="39:57"><expr pos:start="39:35" pos:end="39:57"><name pos:start="39:35" pos:end="39:57">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                      <argument pos:start="41:23" pos:end="41:61"><expr pos:start="41:23" pos:end="41:61"><literal type="string" pos:start="41:23" pos:end="41:61">"unable to acquire requested privilege"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <goto pos:start="43:13" pos:end="43:21">goto <name pos:start="43:18" pos:end="43:20">out</name>;</goto>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="49:9" pos:end="49:27"><expr pos:start="49:9" pos:end="49:26"><call pos:start="49:9" pos:end="49:26"><name pos:start="49:9" pos:end="49:19">CloseHandle</name><argument_list pos:start="49:20" pos:end="49:26">(<argument pos:start="49:21" pos:end="49:25"><expr pos:start="49:21" pos:end="49:25"><name pos:start="49:21" pos:end="49:25">token</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="51:7" pos:end="57:5">else <block pos:start="51:12" pos:end="57:5">{<block_content pos:start="53:9" pos:end="55:52">

        <expr_stmt pos:start="53:9" pos:end="55:52"><expr pos:start="53:9" pos:end="55:51"><call pos:start="53:9" pos:end="55:51"><name pos:start="53:9" pos:end="53:17">error_set</name><argument_list pos:start="53:18" pos:end="55:51">(<argument pos:start="53:19" pos:end="53:28"><expr pos:start="53:19" pos:end="53:28"><operator pos:start="53:19" pos:end="53:19">&amp;</operator><name pos:start="53:20" pos:end="53:28">local_err</name></expr></argument>, <argument pos:start="53:31" pos:end="53:53"><expr pos:start="53:31" pos:end="53:53"><name pos:start="53:31" pos:end="53:53">QERR_QGA_COMMAND_FAILED</name></expr></argument>,

                  <argument pos:start="55:19" pos:end="55:50"><expr pos:start="55:19" pos:end="55:50"><literal type="string" pos:start="55:19" pos:end="55:50">"failed to open privilege token"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></else></if_stmt>



<label pos:start="61:1" pos:end="61:4"><name pos:start="61:1" pos:end="61:3">out</name>:</label>

    <if_stmt pos:start="63:5" pos:end="67:5"><if pos:start="63:5" pos:end="67:5">if <condition pos:start="63:8" pos:end="63:18">(<expr pos:start="63:9" pos:end="63:17"><name pos:start="63:9" pos:end="63:17">local_err</name></expr>)</condition> <block pos:start="63:20" pos:end="67:5">{<block_content pos:start="65:9" pos:end="65:41">

        <expr_stmt pos:start="65:9" pos:end="65:41"><expr pos:start="65:9" pos:end="65:40"><call pos:start="65:9" pos:end="65:40"><name pos:start="65:9" pos:end="65:23">error_propagate</name><argument_list pos:start="65:24" pos:end="65:40">(<argument pos:start="65:25" pos:end="65:28"><expr pos:start="65:25" pos:end="65:28"><name pos:start="65:25" pos:end="65:28">errp</name></expr></argument>, <argument pos:start="65:31" pos:end="65:39"><expr pos:start="65:31" pos:end="65:39"><name pos:start="65:31" pos:end="65:39">local_err</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
