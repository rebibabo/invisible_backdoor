<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/2065.c" pos:tabs="8"><function pos:start="1:1" pos:end="125:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:23">mch_realize</name><parameter_list pos:start="1:24" pos:end="1:51">(<parameter pos:start="1:25" pos:end="1:36"><decl pos:start="1:25" pos:end="1:36"><type pos:start="1:25" pos:end="1:36"><name pos:start="1:25" pos:end="1:33">PCIDevice</name> <modifier pos:start="1:35" pos:end="1:35">*</modifier></type><name pos:start="1:36" pos:end="1:36">d</name></decl></parameter>, <parameter pos:start="1:39" pos:end="1:50"><decl pos:start="1:39" pos:end="1:50"><type pos:start="1:39" pos:end="1:50"><name pos:start="1:39" pos:end="1:43">Error</name> <modifier pos:start="1:45" pos:end="1:45">*</modifier><modifier pos:start="1:46" pos:end="1:46">*</modifier></type><name pos:start="1:47" pos:end="1:50">errp</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="125:1">{<block_content pos:start="5:5" pos:end="123:5">

    <decl_stmt pos:start="5:5" pos:end="5:10"><decl pos:start="5:5" pos:end="5:9"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:9">i</name></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:41"><decl pos:start="7:5" pos:end="7:40"><type pos:start="7:5" pos:end="7:17"><name pos:start="7:5" pos:end="7:15">MCHPCIState</name> <modifier pos:start="7:17" pos:end="7:17">*</modifier></type><name pos:start="7:18" pos:end="7:20">mch</name> <init pos:start="7:22" pos:end="7:40">= <expr pos:start="7:24" pos:end="7:40"><call pos:start="7:24" pos:end="7:40"><name pos:start="7:24" pos:end="7:37">MCH_PCI_DEVICE</name><argument_list pos:start="7:38" pos:end="7:40">(<argument pos:start="7:39" pos:end="7:39"><expr pos:start="7:39" pos:end="7:39"><name pos:start="7:39" pos:end="7:39">d</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



    <comment type="block" pos:start="11:5" pos:end="11:34">/* setup pci memory mapping */</comment>

    <expr_stmt pos:start="13:5" pos:end="15:51"><expr pos:start="13:5" pos:end="15:50"><call pos:start="13:5" pos:end="15:50"><name pos:start="13:5" pos:end="13:26">pc_pci_as_mapping_init</name><argument_list pos:start="13:27" pos:end="15:50">(<argument pos:start="13:28" pos:end="13:38"><expr pos:start="13:28" pos:end="13:38"><call pos:start="13:28" pos:end="13:38"><name pos:start="13:28" pos:end="13:33">OBJECT</name><argument_list pos:start="13:34" pos:end="13:38">(<argument pos:start="13:35" pos:end="13:37"><expr pos:start="13:35" pos:end="13:37"><name pos:start="13:35" pos:end="13:37">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="13:41" pos:end="13:58"><expr pos:start="13:41" pos:end="13:58"><name pos:start="13:41" pos:end="13:58"><name pos:start="13:41" pos:end="13:43">mch</name><operator pos:start="13:44" pos:end="13:45">-&gt;</operator><name pos:start="13:46" pos:end="13:58">system_memory</name></name></expr></argument>,

                           <argument pos:start="15:28" pos:end="15:49"><expr pos:start="15:28" pos:end="15:49"><name pos:start="15:28" pos:end="15:49"><name pos:start="15:28" pos:end="15:30">mch</name><operator pos:start="15:31" pos:end="15:32">-&gt;</operator><name pos:start="15:33" pos:end="15:49">pci_address_space</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="19:5" pos:end="19:46">/* if *disabled* show SMRAM to all CPUs */</comment>

    <expr_stmt pos:start="21:5" pos:end="23:71"><expr pos:start="21:5" pos:end="23:70"><call pos:start="21:5" pos:end="23:70"><name pos:start="21:5" pos:end="21:28">memory_region_init_alias</name><argument_list pos:start="21:29" pos:end="23:70">(<argument pos:start="21:30" pos:end="21:47"><expr pos:start="21:30" pos:end="21:47"><operator pos:start="21:30" pos:end="21:30">&amp;</operator><name pos:start="21:31" pos:end="21:47"><name pos:start="21:31" pos:end="21:33">mch</name><operator pos:start="21:34" pos:end="21:35">-&gt;</operator><name pos:start="21:36" pos:end="21:47">smram_region</name></name></expr></argument>, <argument pos:start="21:50" pos:end="21:60"><expr pos:start="21:50" pos:end="21:60"><call pos:start="21:50" pos:end="21:60"><name pos:start="21:50" pos:end="21:55">OBJECT</name><argument_list pos:start="21:56" pos:end="21:60">(<argument pos:start="21:57" pos:end="21:59"><expr pos:start="21:57" pos:end="21:59"><name pos:start="21:57" pos:end="21:59">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="21:63" pos:end="21:76"><expr pos:start="21:63" pos:end="21:76"><literal type="string" pos:start="21:63" pos:end="21:76">"smram-region"</literal></expr></argument>,

                             <argument pos:start="23:30" pos:end="23:51"><expr pos:start="23:30" pos:end="23:51"><name pos:start="23:30" pos:end="23:51"><name pos:start="23:30" pos:end="23:32">mch</name><operator pos:start="23:33" pos:end="23:34">-&gt;</operator><name pos:start="23:35" pos:end="23:51">pci_address_space</name></name></expr></argument>, <argument pos:start="23:54" pos:end="23:60"><expr pos:start="23:54" pos:end="23:60"><literal type="number" pos:start="23:54" pos:end="23:60">0xa0000</literal></expr></argument>, <argument pos:start="23:63" pos:end="23:69"><expr pos:start="23:63" pos:end="23:69"><literal type="number" pos:start="23:63" pos:end="23:69">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="25:5" pos:end="27:63"><expr pos:start="25:5" pos:end="27:62"><call pos:start="25:5" pos:end="27:62"><name pos:start="25:5" pos:end="25:39">memory_region_add_subregion_overlap</name><argument_list pos:start="25:40" pos:end="27:62">(<argument pos:start="25:41" pos:end="25:58"><expr pos:start="25:41" pos:end="25:58"><name pos:start="25:41" pos:end="25:58"><name pos:start="25:41" pos:end="25:43">mch</name><operator pos:start="25:44" pos:end="25:45">-&gt;</operator><name pos:start="25:46" pos:end="25:58">system_memory</name></name></expr></argument>, <argument pos:start="25:61" pos:end="25:67"><expr pos:start="25:61" pos:end="25:67"><literal type="number" pos:start="25:61" pos:end="25:67">0xa0000</literal></expr></argument>,

                                        <argument pos:start="27:41" pos:end="27:58"><expr pos:start="27:41" pos:end="27:58"><operator pos:start="27:41" pos:end="27:41">&amp;</operator><name pos:start="27:42" pos:end="27:58"><name pos:start="27:42" pos:end="27:44">mch</name><operator pos:start="27:45" pos:end="27:46">-&gt;</operator><name pos:start="27:47" pos:end="27:58">smram_region</name></name></expr></argument>, <argument pos:start="27:61" pos:end="27:61"><expr pos:start="27:61" pos:end="27:61"><literal type="number" pos:start="27:61" pos:end="27:61">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="29:5" pos:end="29:56"><expr pos:start="29:5" pos:end="29:55"><call pos:start="29:5" pos:end="29:55"><name pos:start="29:5" pos:end="29:29">memory_region_set_enabled</name><argument_list pos:start="29:30" pos:end="29:55">(<argument pos:start="29:31" pos:end="29:48"><expr pos:start="29:31" pos:end="29:48"><operator pos:start="29:31" pos:end="29:31">&amp;</operator><name pos:start="29:32" pos:end="29:48"><name pos:start="29:32" pos:end="29:34">mch</name><operator pos:start="29:35" pos:end="29:36">-&gt;</operator><name pos:start="29:37" pos:end="29:48">smram_region</name></name></expr></argument>, <argument pos:start="29:51" pos:end="29:54"><expr pos:start="29:51" pos:end="29:54"><name pos:start="29:51" pos:end="29:54">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="33:5" pos:end="35:64"><expr pos:start="33:5" pos:end="35:63"><call pos:start="33:5" pos:end="35:63"><name pos:start="33:5" pos:end="33:28">memory_region_init_alias</name><argument_list pos:start="33:29" pos:end="35:63">(<argument pos:start="33:30" pos:end="33:50"><expr pos:start="33:30" pos:end="33:50"><operator pos:start="33:30" pos:end="33:30">&amp;</operator><name pos:start="33:31" pos:end="33:50"><name pos:start="33:31" pos:end="33:33">mch</name><operator pos:start="33:34" pos:end="33:35">-&gt;</operator><name pos:start="33:36" pos:end="33:50">open_high_smram</name></name></expr></argument>, <argument pos:start="33:53" pos:end="33:63"><expr pos:start="33:53" pos:end="33:63"><call pos:start="33:53" pos:end="33:63"><name pos:start="33:53" pos:end="33:58">OBJECT</name><argument_list pos:start="33:59" pos:end="33:63">(<argument pos:start="33:60" pos:end="33:62"><expr pos:start="33:60" pos:end="33:62"><name pos:start="33:60" pos:end="33:62">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="33:66" pos:end="33:82"><expr pos:start="33:66" pos:end="33:82"><literal type="string" pos:start="33:66" pos:end="33:82">"smram-open-high"</literal></expr></argument>,

                             <argument pos:start="35:30" pos:end="35:44"><expr pos:start="35:30" pos:end="35:44"><name pos:start="35:30" pos:end="35:44"><name pos:start="35:30" pos:end="35:32">mch</name><operator pos:start="35:33" pos:end="35:34">-&gt;</operator><name pos:start="35:35" pos:end="35:44">ram_memory</name></name></expr></argument>, <argument pos:start="35:47" pos:end="35:53"><expr pos:start="35:47" pos:end="35:53"><literal type="number" pos:start="35:47" pos:end="35:53">0xa0000</literal></expr></argument>, <argument pos:start="35:56" pos:end="35:62"><expr pos:start="35:56" pos:end="35:62"><literal type="number" pos:start="35:56" pos:end="35:62">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="37:5" pos:end="39:66"><expr pos:start="37:5" pos:end="39:65"><call pos:start="37:5" pos:end="39:65"><name pos:start="37:5" pos:end="37:39">memory_region_add_subregion_overlap</name><argument_list pos:start="37:40" pos:end="39:65">(<argument pos:start="37:41" pos:end="37:58"><expr pos:start="37:41" pos:end="37:58"><name pos:start="37:41" pos:end="37:58"><name pos:start="37:41" pos:end="37:43">mch</name><operator pos:start="37:44" pos:end="37:45">-&gt;</operator><name pos:start="37:46" pos:end="37:58">system_memory</name></name></expr></argument>, <argument pos:start="37:61" pos:end="37:70"><expr pos:start="37:61" pos:end="37:70"><literal type="number" pos:start="37:61" pos:end="37:70">0xfeda0000</literal></expr></argument>,

                                        <argument pos:start="39:41" pos:end="39:61"><expr pos:start="39:41" pos:end="39:61"><operator pos:start="39:41" pos:end="39:41">&amp;</operator><name pos:start="39:42" pos:end="39:61"><name pos:start="39:42" pos:end="39:44">mch</name><operator pos:start="39:45" pos:end="39:46">-&gt;</operator><name pos:start="39:47" pos:end="39:61">open_high_smram</name></name></expr></argument>, <argument pos:start="39:64" pos:end="39:64"><expr pos:start="39:64" pos:end="39:64"><literal type="number" pos:start="39:64" pos:end="39:64">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="41:5" pos:end="41:60"><expr pos:start="41:5" pos:end="41:59"><call pos:start="41:5" pos:end="41:59"><name pos:start="41:5" pos:end="41:29">memory_region_set_enabled</name><argument_list pos:start="41:30" pos:end="41:59">(<argument pos:start="41:31" pos:end="41:51"><expr pos:start="41:31" pos:end="41:51"><operator pos:start="41:31" pos:end="41:31">&amp;</operator><name pos:start="41:32" pos:end="41:51"><name pos:start="41:32" pos:end="41:34">mch</name><operator pos:start="41:35" pos:end="41:36">-&gt;</operator><name pos:start="41:37" pos:end="41:51">open_high_smram</name></name></expr></argument>, <argument pos:start="41:54" pos:end="41:58"><expr pos:start="41:54" pos:end="41:58"><name pos:start="41:54" pos:end="41:58">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <comment type="block" pos:start="45:5" pos:end="45:36">/* smram, as seen by SMM CPUs */</comment>

    <expr_stmt pos:start="47:5" pos:end="47:70"><expr pos:start="47:5" pos:end="47:69"><call pos:start="47:5" pos:end="47:69"><name pos:start="47:5" pos:end="47:22">memory_region_init</name><argument_list pos:start="47:23" pos:end="47:69">(<argument pos:start="47:24" pos:end="47:34"><expr pos:start="47:24" pos:end="47:34"><operator pos:start="47:24" pos:end="47:24">&amp;</operator><name pos:start="47:25" pos:end="47:34"><name pos:start="47:25" pos:end="47:27">mch</name><operator pos:start="47:28" pos:end="47:29">-&gt;</operator><name pos:start="47:30" pos:end="47:34">smram</name></name></expr></argument>, <argument pos:start="47:37" pos:end="47:47"><expr pos:start="47:37" pos:end="47:47"><call pos:start="47:37" pos:end="47:47"><name pos:start="47:37" pos:end="47:42">OBJECT</name><argument_list pos:start="47:43" pos:end="47:47">(<argument pos:start="47:44" pos:end="47:46"><expr pos:start="47:44" pos:end="47:46"><name pos:start="47:44" pos:end="47:46">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="47:50" pos:end="47:56"><expr pos:start="47:50" pos:end="47:56"><literal type="string" pos:start="47:50" pos:end="47:56">"smram"</literal></expr></argument>, <argument pos:start="47:59" pos:end="47:68"><expr pos:start="47:59" pos:end="47:68"><literal type="number" pos:start="47:59" pos:end="47:62">1ull</literal> <operator pos:start="47:64" pos:end="47:65">&lt;&lt;</operator> <literal type="number" pos:start="47:67" pos:end="47:68">32</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="49:5" pos:end="49:49"><expr pos:start="49:5" pos:end="49:48"><call pos:start="49:5" pos:end="49:48"><name pos:start="49:5" pos:end="49:29">memory_region_set_enabled</name><argument_list pos:start="49:30" pos:end="49:48">(<argument pos:start="49:31" pos:end="49:41"><expr pos:start="49:31" pos:end="49:41"><operator pos:start="49:31" pos:end="49:31">&amp;</operator><name pos:start="49:32" pos:end="49:41"><name pos:start="49:32" pos:end="49:34">mch</name><operator pos:start="49:35" pos:end="49:36">-&gt;</operator><name pos:start="49:37" pos:end="49:41">smram</name></name></expr></argument>, <argument pos:start="49:44" pos:end="49:47"><expr pos:start="49:44" pos:end="49:47"><name pos:start="49:44" pos:end="49:47">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="51:5" pos:end="53:64"><expr pos:start="51:5" pos:end="53:63"><call pos:start="51:5" pos:end="53:63"><name pos:start="51:5" pos:end="51:28">memory_region_init_alias</name><argument_list pos:start="51:29" pos:end="53:63">(<argument pos:start="51:30" pos:end="51:44"><expr pos:start="51:30" pos:end="51:44"><operator pos:start="51:30" pos:end="51:30">&amp;</operator><name pos:start="51:31" pos:end="51:44"><name pos:start="51:31" pos:end="51:33">mch</name><operator pos:start="51:34" pos:end="51:35">-&gt;</operator><name pos:start="51:36" pos:end="51:44">low_smram</name></name></expr></argument>, <argument pos:start="51:47" pos:end="51:57"><expr pos:start="51:47" pos:end="51:57"><call pos:start="51:47" pos:end="51:57"><name pos:start="51:47" pos:end="51:52">OBJECT</name><argument_list pos:start="51:53" pos:end="51:57">(<argument pos:start="51:54" pos:end="51:56"><expr pos:start="51:54" pos:end="51:56"><name pos:start="51:54" pos:end="51:56">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="51:60" pos:end="51:70"><expr pos:start="51:60" pos:end="51:70"><literal type="string" pos:start="51:60" pos:end="51:70">"smram-low"</literal></expr></argument>,

                             <argument pos:start="53:30" pos:end="53:44"><expr pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:44"><name pos:start="53:30" pos:end="53:32">mch</name><operator pos:start="53:33" pos:end="53:34">-&gt;</operator><name pos:start="53:35" pos:end="53:44">ram_memory</name></name></expr></argument>, <argument pos:start="53:47" pos:end="53:53"><expr pos:start="53:47" pos:end="53:53"><literal type="number" pos:start="53:47" pos:end="53:53">0xa0000</literal></expr></argument>, <argument pos:start="53:56" pos:end="53:62"><expr pos:start="53:56" pos:end="53:62"><literal type="number" pos:start="53:56" pos:end="53:62">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="55:5" pos:end="55:53"><expr pos:start="55:5" pos:end="55:52"><call pos:start="55:5" pos:end="55:52"><name pos:start="55:5" pos:end="55:29">memory_region_set_enabled</name><argument_list pos:start="55:30" pos:end="55:52">(<argument pos:start="55:31" pos:end="55:45"><expr pos:start="55:31" pos:end="55:45"><operator pos:start="55:31" pos:end="55:31">&amp;</operator><name pos:start="55:32" pos:end="55:45"><name pos:start="55:32" pos:end="55:34">mch</name><operator pos:start="55:35" pos:end="55:36">-&gt;</operator><name pos:start="55:37" pos:end="55:45">low_smram</name></name></expr></argument>, <argument pos:start="55:48" pos:end="55:51"><expr pos:start="55:48" pos:end="55:51"><name pos:start="55:48" pos:end="55:51">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="57:5" pos:end="57:71"><expr pos:start="57:5" pos:end="57:70"><call pos:start="57:5" pos:end="57:70"><name pos:start="57:5" pos:end="57:31">memory_region_add_subregion</name><argument_list pos:start="57:32" pos:end="57:70">(<argument pos:start="57:33" pos:end="57:43"><expr pos:start="57:33" pos:end="57:43"><operator pos:start="57:33" pos:end="57:33">&amp;</operator><name pos:start="57:34" pos:end="57:43"><name pos:start="57:34" pos:end="57:36">mch</name><operator pos:start="57:37" pos:end="57:38">-&gt;</operator><name pos:start="57:39" pos:end="57:43">smram</name></name></expr></argument>, <argument pos:start="57:46" pos:end="57:52"><expr pos:start="57:46" pos:end="57:52"><literal type="number" pos:start="57:46" pos:end="57:52">0xa0000</literal></expr></argument>, <argument pos:start="57:55" pos:end="57:69"><expr pos:start="57:55" pos:end="57:69"><operator pos:start="57:55" pos:end="57:55">&amp;</operator><name pos:start="57:56" pos:end="57:69"><name pos:start="57:56" pos:end="57:58">mch</name><operator pos:start="57:59" pos:end="57:60">-&gt;</operator><name pos:start="57:61" pos:end="57:69">low_smram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="59:5" pos:end="61:64"><expr pos:start="59:5" pos:end="61:63"><call pos:start="59:5" pos:end="61:63"><name pos:start="59:5" pos:end="59:28">memory_region_init_alias</name><argument_list pos:start="59:29" pos:end="61:63">(<argument pos:start="59:30" pos:end="59:45"><expr pos:start="59:30" pos:end="59:45"><operator pos:start="59:30" pos:end="59:30">&amp;</operator><name pos:start="59:31" pos:end="59:45"><name pos:start="59:31" pos:end="59:33">mch</name><operator pos:start="59:34" pos:end="59:35">-&gt;</operator><name pos:start="59:36" pos:end="59:45">high_smram</name></name></expr></argument>, <argument pos:start="59:48" pos:end="59:58"><expr pos:start="59:48" pos:end="59:58"><call pos:start="59:48" pos:end="59:58"><name pos:start="59:48" pos:end="59:53">OBJECT</name><argument_list pos:start="59:54" pos:end="59:58">(<argument pos:start="59:55" pos:end="59:57"><expr pos:start="59:55" pos:end="59:57"><name pos:start="59:55" pos:end="59:57">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="59:61" pos:end="59:72"><expr pos:start="59:61" pos:end="59:72"><literal type="string" pos:start="59:61" pos:end="59:72">"smram-high"</literal></expr></argument>,

                             <argument pos:start="61:30" pos:end="61:44"><expr pos:start="61:30" pos:end="61:44"><name pos:start="61:30" pos:end="61:44"><name pos:start="61:30" pos:end="61:32">mch</name><operator pos:start="61:33" pos:end="61:34">-&gt;</operator><name pos:start="61:35" pos:end="61:44">ram_memory</name></name></expr></argument>, <argument pos:start="61:47" pos:end="61:53"><expr pos:start="61:47" pos:end="61:53"><literal type="number" pos:start="61:47" pos:end="61:53">0xa0000</literal></expr></argument>, <argument pos:start="61:56" pos:end="61:62"><expr pos:start="61:56" pos:end="61:62"><literal type="number" pos:start="61:56" pos:end="61:62">0x20000</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="63:5" pos:end="63:54"><expr pos:start="63:5" pos:end="63:53"><call pos:start="63:5" pos:end="63:53"><name pos:start="63:5" pos:end="63:29">memory_region_set_enabled</name><argument_list pos:start="63:30" pos:end="63:53">(<argument pos:start="63:31" pos:end="63:46"><expr pos:start="63:31" pos:end="63:46"><operator pos:start="63:31" pos:end="63:31">&amp;</operator><name pos:start="63:32" pos:end="63:46"><name pos:start="63:32" pos:end="63:34">mch</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:46">high_smram</name></name></expr></argument>, <argument pos:start="63:49" pos:end="63:52"><expr pos:start="63:49" pos:end="63:52"><name pos:start="63:49" pos:end="63:52">true</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="65:5" pos:end="65:75"><expr pos:start="65:5" pos:end="65:74"><call pos:start="65:5" pos:end="65:74"><name pos:start="65:5" pos:end="65:31">memory_region_add_subregion</name><argument_list pos:start="65:32" pos:end="65:74">(<argument pos:start="65:33" pos:end="65:43"><expr pos:start="65:33" pos:end="65:43"><operator pos:start="65:33" pos:end="65:33">&amp;</operator><name pos:start="65:34" pos:end="65:43"><name pos:start="65:34" pos:end="65:36">mch</name><operator pos:start="65:37" pos:end="65:38">-&gt;</operator><name pos:start="65:39" pos:end="65:43">smram</name></name></expr></argument>, <argument pos:start="65:46" pos:end="65:55"><expr pos:start="65:46" pos:end="65:55"><literal type="number" pos:start="65:46" pos:end="65:55">0xfeda0000</literal></expr></argument>, <argument pos:start="65:58" pos:end="65:73"><expr pos:start="65:58" pos:end="65:73"><operator pos:start="65:58" pos:end="65:58">&amp;</operator><name pos:start="65:59" pos:end="65:73"><name pos:start="65:59" pos:end="65:61">mch</name><operator pos:start="65:62" pos:end="65:63">-&gt;</operator><name pos:start="65:64" pos:end="65:73">high_smram</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="69:5" pos:end="73:47"><expr pos:start="69:5" pos:end="73:46"><call pos:start="69:5" pos:end="73:46"><name pos:start="69:5" pos:end="69:25">memory_region_init_io</name><argument_list pos:start="69:26" pos:end="73:46">(<argument pos:start="69:27" pos:end="69:46"><expr pos:start="69:27" pos:end="69:46"><operator pos:start="69:27" pos:end="69:27">&amp;</operator><name pos:start="69:28" pos:end="69:46"><name pos:start="69:28" pos:end="69:30">mch</name><operator pos:start="69:31" pos:end="69:32">-&gt;</operator><name pos:start="69:33" pos:end="69:46">tseg_blackhole</name></name></expr></argument>, <argument pos:start="69:49" pos:end="69:59"><expr pos:start="69:49" pos:end="69:59"><call pos:start="69:49" pos:end="69:59"><name pos:start="69:49" pos:end="69:54">OBJECT</name><argument_list pos:start="69:55" pos:end="69:59">(<argument pos:start="69:56" pos:end="69:58"><expr pos:start="69:56" pos:end="69:58"><name pos:start="69:56" pos:end="69:58">mch</name></expr></argument>)</argument_list></call></expr></argument>,

                          <argument pos:start="71:27" pos:end="71:45"><expr pos:start="71:27" pos:end="71:45"><operator pos:start="71:27" pos:end="71:27">&amp;</operator><name pos:start="71:28" pos:end="71:45">tseg_blackhole_ops</name></expr></argument>, <argument pos:start="71:48" pos:end="71:51"><expr pos:start="71:48" pos:end="71:51"><name pos:start="71:48" pos:end="71:51">NULL</name></expr></argument>,

                          <argument pos:start="73:27" pos:end="73:42"><expr pos:start="73:27" pos:end="73:42"><literal type="string" pos:start="73:27" pos:end="73:42">"tseg-blackhole"</literal></expr></argument>, <argument pos:start="73:45" pos:end="73:45"><expr pos:start="73:45" pos:end="73:45"><literal type="number" pos:start="73:45" pos:end="73:45">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="75:5" pos:end="75:59"><expr pos:start="75:5" pos:end="75:58"><call pos:start="75:5" pos:end="75:58"><name pos:start="75:5" pos:end="75:29">memory_region_set_enabled</name><argument_list pos:start="75:30" pos:end="75:58">(<argument pos:start="75:31" pos:end="75:50"><expr pos:start="75:31" pos:end="75:50"><operator pos:start="75:31" pos:end="75:31">&amp;</operator><name pos:start="75:32" pos:end="75:50"><name pos:start="75:32" pos:end="75:34">mch</name><operator pos:start="75:35" pos:end="75:36">-&gt;</operator><name pos:start="75:37" pos:end="75:50">tseg_blackhole</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:57"><expr pos:start="75:53" pos:end="75:57"><name pos:start="75:53" pos:end="75:57">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="77:5" pos:end="81:65"><expr pos:start="77:5" pos:end="81:64"><call pos:start="77:5" pos:end="81:64"><name pos:start="77:5" pos:end="77:39">memory_region_add_subregion_overlap</name><argument_list pos:start="77:40" pos:end="81:64">(<argument pos:start="77:41" pos:end="77:58"><expr pos:start="77:41" pos:end="77:58"><name pos:start="77:41" pos:end="77:58"><name pos:start="77:41" pos:end="77:43">mch</name><operator pos:start="77:44" pos:end="77:45">-&gt;</operator><name pos:start="77:46" pos:end="77:58">system_memory</name></name></expr></argument>,

                                        <argument pos:start="79:41" pos:end="79:62"><expr pos:start="79:41" pos:end="79:62"><name pos:start="79:41" pos:end="79:62"><name pos:start="79:41" pos:end="79:43">mch</name><operator pos:start="79:44" pos:end="79:45">-&gt;</operator><name pos:start="79:46" pos:end="79:62">below_4g_mem_size</name></name></expr></argument>,

                                        <argument pos:start="81:41" pos:end="81:60"><expr pos:start="81:41" pos:end="81:60"><operator pos:start="81:41" pos:end="81:41">&amp;</operator><name pos:start="81:42" pos:end="81:60"><name pos:start="81:42" pos:end="81:44">mch</name><operator pos:start="81:45" pos:end="81:46">-&gt;</operator><name pos:start="81:47" pos:end="81:60">tseg_blackhole</name></name></expr></argument>, <argument pos:start="81:63" pos:end="81:63"><expr pos:start="81:63" pos:end="81:63"><literal type="number" pos:start="81:63" pos:end="81:63">1</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="85:5" pos:end="87:73"><expr pos:start="85:5" pos:end="87:72"><call pos:start="85:5" pos:end="87:72"><name pos:start="85:5" pos:end="85:28">memory_region_init_alias</name><argument_list pos:start="85:29" pos:end="87:72">(<argument pos:start="85:30" pos:end="85:46"><expr pos:start="85:30" pos:end="85:46"><operator pos:start="85:30" pos:end="85:30">&amp;</operator><name pos:start="85:31" pos:end="85:46"><name pos:start="85:31" pos:end="85:33">mch</name><operator pos:start="85:34" pos:end="85:35">-&gt;</operator><name pos:start="85:36" pos:end="85:46">tseg_window</name></name></expr></argument>, <argument pos:start="85:49" pos:end="85:59"><expr pos:start="85:49" pos:end="85:59"><call pos:start="85:49" pos:end="85:59"><name pos:start="85:49" pos:end="85:54">OBJECT</name><argument_list pos:start="85:55" pos:end="85:59">(<argument pos:start="85:56" pos:end="85:58"><expr pos:start="85:56" pos:end="85:58"><name pos:start="85:56" pos:end="85:58">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="85:62" pos:end="85:74"><expr pos:start="85:62" pos:end="85:74"><literal type="string" pos:start="85:62" pos:end="85:74">"tseg-window"</literal></expr></argument>,

                             <argument pos:start="87:30" pos:end="87:44"><expr pos:start="87:30" pos:end="87:44"><name pos:start="87:30" pos:end="87:44"><name pos:start="87:30" pos:end="87:32">mch</name><operator pos:start="87:33" pos:end="87:34">-&gt;</operator><name pos:start="87:35" pos:end="87:44">ram_memory</name></name></expr></argument>, <argument pos:start="87:47" pos:end="87:68"><expr pos:start="87:47" pos:end="87:68"><name pos:start="87:47" pos:end="87:68"><name pos:start="87:47" pos:end="87:49">mch</name><operator pos:start="87:50" pos:end="87:51">-&gt;</operator><name pos:start="87:52" pos:end="87:68">below_4g_mem_size</name></name></expr></argument>, <argument pos:start="87:71" pos:end="87:71"><expr pos:start="87:71" pos:end="87:71"><literal type="number" pos:start="87:71" pos:end="87:71">0</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="89:5" pos:end="89:56"><expr pos:start="89:5" pos:end="89:55"><call pos:start="89:5" pos:end="89:55"><name pos:start="89:5" pos:end="89:29">memory_region_set_enabled</name><argument_list pos:start="89:30" pos:end="89:55">(<argument pos:start="89:31" pos:end="89:47"><expr pos:start="89:31" pos:end="89:47"><operator pos:start="89:31" pos:end="89:31">&amp;</operator><name pos:start="89:32" pos:end="89:47"><name pos:start="89:32" pos:end="89:34">mch</name><operator pos:start="89:35" pos:end="89:36">-&gt;</operator><name pos:start="89:37" pos:end="89:47">tseg_window</name></name></expr></argument>, <argument pos:start="89:50" pos:end="89:54"><expr pos:start="89:50" pos:end="89:54"><name pos:start="89:50" pos:end="89:54">false</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="91:5" pos:end="93:51"><expr pos:start="91:5" pos:end="93:50"><call pos:start="91:5" pos:end="93:50"><name pos:start="91:5" pos:end="91:31">memory_region_add_subregion</name><argument_list pos:start="91:32" pos:end="93:50">(<argument pos:start="91:33" pos:end="91:43"><expr pos:start="91:33" pos:end="91:43"><operator pos:start="91:33" pos:end="91:33">&amp;</operator><name pos:start="91:34" pos:end="91:43"><name pos:start="91:34" pos:end="91:36">mch</name><operator pos:start="91:37" pos:end="91:38">-&gt;</operator><name pos:start="91:39" pos:end="91:43">smram</name></name></expr></argument>, <argument pos:start="91:46" pos:end="91:67"><expr pos:start="91:46" pos:end="91:67"><name pos:start="91:46" pos:end="91:67"><name pos:start="91:46" pos:end="91:48">mch</name><operator pos:start="91:49" pos:end="91:50">-&gt;</operator><name pos:start="91:51" pos:end="91:67">below_4g_mem_size</name></name></expr></argument>,

                                <argument pos:start="93:33" pos:end="93:49"><expr pos:start="93:33" pos:end="93:49"><operator pos:start="93:33" pos:end="93:33">&amp;</operator><name pos:start="93:34" pos:end="93:49"><name pos:start="93:34" pos:end="93:36">mch</name><operator pos:start="93:37" pos:end="93:38">-&gt;</operator><name pos:start="93:39" pos:end="93:49">tseg_window</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="95:5" pos:end="97:70"><expr pos:start="95:5" pos:end="97:69"><call pos:start="95:5" pos:end="97:69"><name pos:start="95:5" pos:end="95:34">object_property_add_const_link</name><argument_list pos:start="95:35" pos:end="97:69">(<argument pos:start="95:36" pos:end="95:53"><expr pos:start="95:36" pos:end="95:53"><call pos:start="95:36" pos:end="95:53"><name pos:start="95:36" pos:end="95:51">qdev_get_machine</name><argument_list pos:start="95:52" pos:end="95:53">()</argument_list></call></expr></argument>, <argument pos:start="95:56" pos:end="95:62"><expr pos:start="95:56" pos:end="95:62"><literal type="string" pos:start="95:56" pos:end="95:62">"smram"</literal></expr></argument>,

                                   <argument pos:start="97:36" pos:end="97:54"><expr pos:start="97:36" pos:end="97:54"><call pos:start="97:36" pos:end="97:54"><name pos:start="97:36" pos:end="97:41">OBJECT</name><argument_list pos:start="97:42" pos:end="97:54">(<argument pos:start="97:43" pos:end="97:53"><expr pos:start="97:43" pos:end="97:53"><operator pos:start="97:43" pos:end="97:43">&amp;</operator><name pos:start="97:44" pos:end="97:53"><name pos:start="97:44" pos:end="97:46">mch</name><operator pos:start="97:47" pos:end="97:48">-&gt;</operator><name pos:start="97:49" pos:end="97:53">smram</name></name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="97:57" pos:end="97:68"><expr pos:start="97:57" pos:end="97:68"><operator pos:start="97:57" pos:end="97:57">&amp;</operator><name pos:start="97:58" pos:end="97:68">error_abort</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <expr_stmt pos:start="101:5" pos:end="105:43"><expr pos:start="101:5" pos:end="105:42"><call pos:start="101:5" pos:end="105:42"><name pos:start="101:5" pos:end="101:12">init_pam</name><argument_list pos:start="101:13" pos:end="105:42">(<argument pos:start="101:14" pos:end="101:24"><expr pos:start="101:14" pos:end="101:24"><call pos:start="101:14" pos:end="101:24"><name pos:start="101:14" pos:end="101:19">DEVICE</name><argument_list pos:start="101:20" pos:end="101:24">(<argument pos:start="101:21" pos:end="101:23"><expr pos:start="101:21" pos:end="101:23"><name pos:start="101:21" pos:end="101:23">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="101:27" pos:end="101:41"><expr pos:start="101:27" pos:end="101:41"><name pos:start="101:27" pos:end="101:41"><name pos:start="101:27" pos:end="101:29">mch</name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:41">ram_memory</name></name></expr></argument>, <argument pos:start="101:44" pos:end="101:61"><expr pos:start="101:44" pos:end="101:61"><name pos:start="101:44" pos:end="101:61"><name pos:start="101:44" pos:end="101:46">mch</name><operator pos:start="101:47" pos:end="101:48">-&gt;</operator><name pos:start="101:49" pos:end="101:61">system_memory</name></name></expr></argument>,

             <argument pos:start="103:14" pos:end="103:35"><expr pos:start="103:14" pos:end="103:35"><name pos:start="103:14" pos:end="103:35"><name pos:start="103:14" pos:end="103:16">mch</name><operator pos:start="103:17" pos:end="103:18">-&gt;</operator><name pos:start="103:19" pos:end="103:35">pci_address_space</name></name></expr></argument>, <argument pos:start="103:38" pos:end="103:57"><expr pos:start="103:38" pos:end="103:57"><operator pos:start="103:38" pos:end="103:38">&amp;</operator><name pos:start="103:39" pos:end="103:57"><name pos:start="103:39" pos:end="103:41">mch</name><operator pos:start="103:42" pos:end="103:43">-&gt;</operator><name pos:start="103:44" pos:end="103:54">pam_regions</name><index pos:start="103:55" pos:end="103:57">[<expr pos:start="103:56" pos:end="103:56"><literal type="number" pos:start="103:56" pos:end="103:56">0</literal></expr>]</index></name></expr></argument>,

             <argument pos:start="105:14" pos:end="105:26"><expr pos:start="105:14" pos:end="105:26"><name pos:start="105:14" pos:end="105:26">PAM_BIOS_BASE</name></expr></argument>, <argument pos:start="105:29" pos:end="105:41"><expr pos:start="105:29" pos:end="105:41"><name pos:start="105:29" pos:end="105:41">PAM_BIOS_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <for pos:start="107:5" pos:end="115:5">for <control pos:start="107:9" pos:end="107:28">(<init pos:start="107:10" pos:end="107:15"><expr pos:start="107:10" pos:end="107:14"><name pos:start="107:10" pos:end="107:10">i</name> <operator pos:start="107:12" pos:end="107:12">=</operator> <literal type="number" pos:start="107:14" pos:end="107:14">0</literal></expr>;</init> <condition pos:start="107:17" pos:end="107:23"><expr pos:start="107:17" pos:end="107:22"><name pos:start="107:17" pos:end="107:17">i</name> <operator pos:start="107:19" pos:end="107:19">&lt;</operator> <literal type="number" pos:start="107:21" pos:end="107:22">12</literal></expr>;</condition> <incr pos:start="107:25" pos:end="107:27"><expr pos:start="107:25" pos:end="107:27"><operator pos:start="107:25" pos:end="107:26">++</operator><name pos:start="107:27" pos:end="107:27">i</name></expr></incr>)</control> <block pos:start="107:30" pos:end="115:5">{<block_content pos:start="109:9" pos:end="113:70">

        <expr_stmt pos:start="109:9" pos:end="113:70"><expr pos:start="109:9" pos:end="113:69"><call pos:start="109:9" pos:end="113:69"><name pos:start="109:9" pos:end="109:16">init_pam</name><argument_list pos:start="109:17" pos:end="113:69">(<argument pos:start="109:18" pos:end="109:28"><expr pos:start="109:18" pos:end="109:28"><call pos:start="109:18" pos:end="109:28"><name pos:start="109:18" pos:end="109:23">DEVICE</name><argument_list pos:start="109:24" pos:end="109:28">(<argument pos:start="109:25" pos:end="109:27"><expr pos:start="109:25" pos:end="109:27"><name pos:start="109:25" pos:end="109:27">mch</name></expr></argument>)</argument_list></call></expr></argument>, <argument pos:start="109:31" pos:end="109:45"><expr pos:start="109:31" pos:end="109:45"><name pos:start="109:31" pos:end="109:45"><name pos:start="109:31" pos:end="109:33">mch</name><operator pos:start="109:34" pos:end="109:35">-&gt;</operator><name pos:start="109:36" pos:end="109:45">ram_memory</name></name></expr></argument>, <argument pos:start="109:48" pos:end="109:65"><expr pos:start="109:48" pos:end="109:65"><name pos:start="109:48" pos:end="109:65"><name pos:start="109:48" pos:end="109:50">mch</name><operator pos:start="109:51" pos:end="109:52">-&gt;</operator><name pos:start="109:53" pos:end="109:65">system_memory</name></name></expr></argument>,

                 <argument pos:start="111:18" pos:end="111:39"><expr pos:start="111:18" pos:end="111:39"><name pos:start="111:18" pos:end="111:39"><name pos:start="111:18" pos:end="111:20">mch</name><operator pos:start="111:21" pos:end="111:22">-&gt;</operator><name pos:start="111:23" pos:end="111:39">pci_address_space</name></name></expr></argument>, <argument pos:start="111:42" pos:end="111:63"><expr pos:start="111:42" pos:end="111:63"><operator pos:start="111:42" pos:end="111:42">&amp;</operator><name pos:start="111:43" pos:end="111:63"><name pos:start="111:43" pos:end="111:45">mch</name><operator pos:start="111:46" pos:end="111:47">-&gt;</operator><name pos:start="111:48" pos:end="111:58">pam_regions</name><index pos:start="111:59" pos:end="111:63">[<expr pos:start="111:60" pos:end="111:62"><name pos:start="111:60" pos:end="111:60">i</name><operator pos:start="111:61" pos:end="111:61">+</operator><literal type="number" pos:start="111:62" pos:end="111:62">1</literal></expr>]</index></name></expr></argument>,

                 <argument pos:start="113:18" pos:end="113:52"><expr pos:start="113:18" pos:end="113:52"><name pos:start="113:18" pos:end="113:31">PAM_EXPAN_BASE</name> <operator pos:start="113:33" pos:end="113:33">+</operator> <name pos:start="113:35" pos:end="113:35">i</name> <operator pos:start="113:37" pos:end="113:37">*</operator> <name pos:start="113:39" pos:end="113:52">PAM_EXPAN_SIZE</name></expr></argument>, <argument pos:start="113:55" pos:end="113:68"><expr pos:start="113:55" pos:end="113:68"><name pos:start="113:55" pos:end="113:68">PAM_EXPAN_SIZE</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></for>

    <comment type="block" pos:start="117:5" pos:end="117:28">/* Intel IOMMU (VT-d) */</comment>

    <if_stmt pos:start="119:5" pos:end="123:5"><if pos:start="119:5" pos:end="123:5">if <condition pos:start="119:8" pos:end="119:39">(<expr pos:start="119:9" pos:end="119:38"><call pos:start="119:9" pos:end="119:38"><name pos:start="119:9" pos:end="119:21">machine_iommu</name><argument_list pos:start="119:22" pos:end="119:38">(<argument pos:start="119:23" pos:end="119:37"><expr pos:start="119:23" pos:end="119:37"><name pos:start="119:23" pos:end="119:37">current_machine</name></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="119:41" pos:end="123:5">{<block_content pos:start="121:9" pos:end="121:27">

        <expr_stmt pos:start="121:9" pos:end="121:27"><expr pos:start="121:9" pos:end="121:26"><call pos:start="121:9" pos:end="121:26"><name pos:start="121:9" pos:end="121:21">mch_init_dmar</name><argument_list pos:start="121:22" pos:end="121:26">(<argument pos:start="121:23" pos:end="121:25"><expr pos:start="121:23" pos:end="121:25"><name pos:start="121:23" pos:end="121:25">mch</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
