<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/20595.c" pos:tabs="8"><function pos:start="1:1" pos:end="81:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">apply_param_change</name><parameter_list pos:start="1:31" pos:end="1:70">(<parameter pos:start="1:32" pos:end="1:52"><decl pos:start="1:32" pos:end="1:52"><type pos:start="1:32" pos:end="1:52"><name pos:start="1:32" pos:end="1:45">AVCodecContext</name> <modifier pos:start="1:47" pos:end="1:47">*</modifier></type><name pos:start="1:48" pos:end="1:52">avctx</name></decl></parameter>, <parameter pos:start="1:55" pos:end="1:69"><decl pos:start="1:55" pos:end="1:69"><type pos:start="1:55" pos:end="1:69"><name pos:start="1:55" pos:end="1:62">AVPacket</name> <modifier pos:start="1:64" pos:end="1:64">*</modifier></type><name pos:start="1:65" pos:end="1:69">avpkt</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="81:1">{<block_content pos:start="5:5" pos:end="79:5">

    <decl_stmt pos:start="5:5" pos:end="5:17"><decl pos:start="5:5" pos:end="5:16"><type pos:start="5:5" pos:end="5:7"><name pos:start="5:5" pos:end="5:7">int</name></type> <name pos:start="5:9" pos:end="5:12">size</name> <init pos:start="5:14" pos:end="5:16">= <expr pos:start="5:16" pos:end="5:16"><literal type="number" pos:start="5:16" pos:end="5:16">0</literal></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="7:5" pos:end="7:24"><decl pos:start="7:5" pos:end="7:23"><type pos:start="7:5" pos:end="7:19"><specifier pos:start="7:5" pos:end="7:9">const</specifier> <name pos:start="7:11" pos:end="7:17">uint8_t</name> <modifier pos:start="7:19" pos:end="7:19">*</modifier></type><name pos:start="7:20" pos:end="7:23">data</name></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:19"><decl pos:start="9:5" pos:end="9:18"><type pos:start="9:5" pos:end="9:12"><name pos:start="9:5" pos:end="9:12">uint32_t</name></type> <name pos:start="9:14" pos:end="9:18">flags</name></decl>;</decl_stmt>



    <if_stmt pos:start="13:5" pos:end="15:15"><if pos:start="13:5" pos:end="15:15">if <condition pos:start="13:8" pos:end="13:63">(<expr pos:start="13:9" pos:end="13:62"><operator pos:start="13:9" pos:end="13:9">!</operator><operator pos:start="13:10" pos:end="13:10">(</operator><name pos:start="13:11" pos:end="13:36"><name pos:start="13:11" pos:end="13:15">avctx</name><operator pos:start="13:16" pos:end="13:17">-&gt;</operator><name pos:start="13:18" pos:end="13:22">codec</name><operator pos:start="13:23" pos:end="13:24">-&gt;</operator><name pos:start="13:25" pos:end="13:36">capabilities</name></name> <operator pos:start="13:38" pos:end="13:38">&amp;</operator> <name pos:start="13:40" pos:end="13:61">CODEC_CAP_PARAM_CHANGE</name><operator pos:start="13:62" pos:end="13:62">)</operator></expr>)</condition><block type="pseudo" pos:start="15:9" pos:end="15:15"><block_content pos:start="15:9" pos:end="15:15">

        <return pos:start="15:9" pos:end="15:15">return;</return></block_content></block></if></if_stmt>



    <expr_stmt pos:start="19:5" pos:end="19:75"><expr pos:start="19:5" pos:end="19:74"><name pos:start="19:5" pos:end="19:8">data</name> <operator pos:start="19:10" pos:end="19:10">=</operator> <call pos:start="19:12" pos:end="19:74"><name pos:start="19:12" pos:end="19:34">av_packet_get_side_data</name><argument_list pos:start="19:35" pos:end="19:74">(<argument pos:start="19:36" pos:end="19:40"><expr pos:start="19:36" pos:end="19:40"><name pos:start="19:36" pos:end="19:40">avpkt</name></expr></argument>, <argument pos:start="19:43" pos:end="19:66"><expr pos:start="19:43" pos:end="19:66"><name pos:start="19:43" pos:end="19:66">AV_PKT_DATA_PARAM_CHANGE</name></expr></argument>, <argument pos:start="19:69" pos:end="19:73"><expr pos:start="19:69" pos:end="19:73"><operator pos:start="19:69" pos:end="19:69">&amp;</operator><name pos:start="19:70" pos:end="19:73">size</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <if_stmt pos:start="21:5" pos:end="23:15"><if pos:start="21:5" pos:end="23:15">if <condition pos:start="21:8" pos:end="21:26">(<expr pos:start="21:9" pos:end="21:25"><operator pos:start="21:9" pos:end="21:9">!</operator><name pos:start="21:10" pos:end="21:13">data</name> <operator pos:start="21:15" pos:end="21:16">||</operator> <name pos:start="21:18" pos:end="21:21">size</name> <operator pos:start="21:23" pos:end="21:23">&lt;</operator> <literal type="number" pos:start="21:25" pos:end="21:25">4</literal></expr>)</condition><block type="pseudo" pos:start="23:9" pos:end="23:15"><block_content pos:start="23:9" pos:end="23:15">

        <return pos:start="23:9" pos:end="23:15">return;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="25:5" pos:end="25:39"><expr pos:start="25:5" pos:end="25:38"><name pos:start="25:5" pos:end="25:9">flags</name> <operator pos:start="25:11" pos:end="25:11">=</operator> <call pos:start="25:13" pos:end="25:38"><name pos:start="25:13" pos:end="25:31">bytestream_get_le32</name><argument_list pos:start="25:32" pos:end="25:38">(<argument pos:start="25:33" pos:end="25:37"><expr pos:start="25:33" pos:end="25:37"><operator pos:start="25:33" pos:end="25:33">&amp;</operator><name pos:start="25:34" pos:end="25:37">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="27:5" pos:end="27:14"><expr pos:start="27:5" pos:end="27:13"><name pos:start="27:5" pos:end="27:8">size</name> <operator pos:start="27:10" pos:end="27:11">-=</operator> <literal type="number" pos:start="27:13" pos:end="27:13">4</literal></expr>;</expr_stmt>

    <if_stmt pos:start="29:5" pos:end="31:15"><if pos:start="29:5" pos:end="31:15">if <condition pos:start="29:8" pos:end="29:17">(<expr pos:start="29:9" pos:end="29:16"><name pos:start="29:9" pos:end="29:12">size</name> <operator pos:start="29:14" pos:end="29:14">&lt;</operator> <literal type="number" pos:start="29:16" pos:end="29:16">4</literal></expr>)</condition><block type="pseudo" pos:start="31:9" pos:end="31:15"><block_content pos:start="31:9" pos:end="31:15"> <comment type="block" pos:start="29:19" pos:end="29:55">/* Required for any of the changes */</comment>

        <return pos:start="31:9" pos:end="31:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="33:5" pos:end="39:5"><if pos:start="33:5" pos:end="39:5">if <condition pos:start="33:8" pos:end="33:56">(<expr pos:start="33:9" pos:end="33:55"><name pos:start="33:9" pos:end="33:13">flags</name> <operator pos:start="33:15" pos:end="33:15">&amp;</operator> <name pos:start="33:17" pos:end="33:55">AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_COUNT</name></expr>)</condition> <block pos:start="33:58" pos:end="39:5">{<block_content pos:start="35:9" pos:end="37:18">

        <expr_stmt pos:start="35:9" pos:end="35:53"><expr pos:start="35:9" pos:end="35:52"><name pos:start="35:9" pos:end="35:23"><name pos:start="35:9" pos:end="35:13">avctx</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:23">channels</name></name> <operator pos:start="35:25" pos:end="35:25">=</operator> <call pos:start="35:27" pos:end="35:52"><name pos:start="35:27" pos:end="35:45">bytestream_get_le32</name><argument_list pos:start="35:46" pos:end="35:52">(<argument pos:start="35:47" pos:end="35:51"><expr pos:start="35:47" pos:end="35:51"><operator pos:start="35:47" pos:end="35:47">&amp;</operator><name pos:start="35:48" pos:end="35:51">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="37:9" pos:end="37:18"><expr pos:start="37:9" pos:end="37:17"><name pos:start="37:9" pos:end="37:12">size</name> <operator pos:start="37:14" pos:end="37:15">-=</operator> <literal type="number" pos:start="37:17" pos:end="37:17">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="41:5" pos:end="51:5"><if pos:start="41:5" pos:end="51:5">if <condition pos:start="41:8" pos:end="41:57">(<expr pos:start="41:9" pos:end="41:56"><name pos:start="41:9" pos:end="41:13">flags</name> <operator pos:start="41:15" pos:end="41:15">&amp;</operator> <name pos:start="41:17" pos:end="41:56">AV_SIDE_DATA_PARAM_CHANGE_CHANNEL_LAYOUT</name></expr>)</condition> <block pos:start="41:59" pos:end="51:5">{<block_content pos:start="43:9" pos:end="49:18">

        <if_stmt pos:start="43:9" pos:end="45:19"><if pos:start="43:9" pos:end="45:19">if <condition pos:start="43:12" pos:end="43:21">(<expr pos:start="43:13" pos:end="43:20"><name pos:start="43:13" pos:end="43:16">size</name> <operator pos:start="43:18" pos:end="43:18">&lt;</operator> <literal type="number" pos:start="43:20" pos:end="43:20">8</literal></expr>)</condition><block type="pseudo" pos:start="45:13" pos:end="45:19"><block_content pos:start="45:13" pos:end="45:19">

            <return pos:start="45:13" pos:end="45:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="47:9" pos:end="47:59"><expr pos:start="47:9" pos:end="47:58"><name pos:start="47:9" pos:end="47:29"><name pos:start="47:9" pos:end="47:13">avctx</name><operator pos:start="47:14" pos:end="47:15">-&gt;</operator><name pos:start="47:16" pos:end="47:29">channel_layout</name></name> <operator pos:start="47:31" pos:end="47:31">=</operator> <call pos:start="47:33" pos:end="47:58"><name pos:start="47:33" pos:end="47:51">bytestream_get_le64</name><argument_list pos:start="47:52" pos:end="47:58">(<argument pos:start="47:53" pos:end="47:57"><expr pos:start="47:53" pos:end="47:57"><operator pos:start="47:53" pos:end="47:53">&amp;</operator><name pos:start="47:54" pos:end="47:57">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="49:9" pos:end="49:18"><expr pos:start="49:9" pos:end="49:17"><name pos:start="49:9" pos:end="49:12">size</name> <operator pos:start="49:14" pos:end="49:15">-=</operator> <literal type="number" pos:start="49:17" pos:end="49:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="53:5" pos:end="55:15"><if pos:start="53:5" pos:end="55:15">if <condition pos:start="53:8" pos:end="53:17">(<expr pos:start="53:9" pos:end="53:16"><name pos:start="53:9" pos:end="53:12">size</name> <operator pos:start="53:14" pos:end="53:14">&lt;</operator> <literal type="number" pos:start="53:16" pos:end="53:16">4</literal></expr>)</condition><block type="pseudo" pos:start="55:9" pos:end="55:15"><block_content pos:start="55:9" pos:end="55:15">

        <return pos:start="55:9" pos:end="55:15">return;</return></block_content></block></if></if_stmt>

    <if_stmt pos:start="57:5" pos:end="63:5"><if pos:start="57:5" pos:end="63:5">if <condition pos:start="57:8" pos:end="57:54">(<expr pos:start="57:9" pos:end="57:53"><name pos:start="57:9" pos:end="57:13">flags</name> <operator pos:start="57:15" pos:end="57:15">&amp;</operator> <name pos:start="57:17" pos:end="57:53">AV_SIDE_DATA_PARAM_CHANGE_SAMPLE_RATE</name></expr>)</condition> <block pos:start="57:56" pos:end="63:5">{<block_content pos:start="59:9" pos:end="61:18">

        <expr_stmt pos:start="59:9" pos:end="59:56"><expr pos:start="59:9" pos:end="59:55"><name pos:start="59:9" pos:end="59:26"><name pos:start="59:9" pos:end="59:13">avctx</name><operator pos:start="59:14" pos:end="59:15">-&gt;</operator><name pos:start="59:16" pos:end="59:26">sample_rate</name></name> <operator pos:start="59:28" pos:end="59:28">=</operator> <call pos:start="59:30" pos:end="59:55"><name pos:start="59:30" pos:end="59:48">bytestream_get_le32</name><argument_list pos:start="59:49" pos:end="59:55">(<argument pos:start="59:50" pos:end="59:54"><expr pos:start="59:50" pos:end="59:54"><operator pos:start="59:50" pos:end="59:50">&amp;</operator><name pos:start="59:51" pos:end="59:54">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="61:9" pos:end="61:18"><expr pos:start="61:9" pos:end="61:17"><name pos:start="61:9" pos:end="61:12">size</name> <operator pos:start="61:14" pos:end="61:15">-=</operator> <literal type="number" pos:start="61:17" pos:end="61:17">4</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

    <if_stmt pos:start="65:5" pos:end="79:5"><if pos:start="65:5" pos:end="79:5">if <condition pos:start="65:8" pos:end="65:53">(<expr pos:start="65:9" pos:end="65:52"><name pos:start="65:9" pos:end="65:13">flags</name> <operator pos:start="65:15" pos:end="65:15">&amp;</operator> <name pos:start="65:17" pos:end="65:52">AV_SIDE_DATA_PARAM_CHANGE_DIMENSIONS</name></expr>)</condition> <block pos:start="65:55" pos:end="79:5">{<block_content pos:start="67:9" pos:end="77:18">

        <if_stmt pos:start="67:9" pos:end="69:19"><if pos:start="67:9" pos:end="69:19">if <condition pos:start="67:12" pos:end="67:21">(<expr pos:start="67:13" pos:end="67:20"><name pos:start="67:13" pos:end="67:16">size</name> <operator pos:start="67:18" pos:end="67:18">&lt;</operator> <literal type="number" pos:start="67:20" pos:end="67:20">8</literal></expr>)</condition><block type="pseudo" pos:start="69:13" pos:end="69:19"><block_content pos:start="69:13" pos:end="69:19">

            <return pos:start="69:13" pos:end="69:19">return;</return></block_content></block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:51"><expr pos:start="71:9" pos:end="71:50"><name pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:13">avctx</name><operator pos:start="71:14" pos:end="71:15">-&gt;</operator><name pos:start="71:16" pos:end="71:20">width</name></name>  <operator pos:start="71:23" pos:end="71:23">=</operator> <call pos:start="71:25" pos:end="71:50"><name pos:start="71:25" pos:end="71:43">bytestream_get_le32</name><argument_list pos:start="71:44" pos:end="71:50">(<argument pos:start="71:45" pos:end="71:49"><expr pos:start="71:45" pos:end="71:49"><operator pos:start="71:45" pos:end="71:45">&amp;</operator><name pos:start="71:46" pos:end="71:49">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="73:9" pos:end="73:51"><expr pos:start="73:9" pos:end="73:50"><name pos:start="73:9" pos:end="73:21"><name pos:start="73:9" pos:end="73:13">avctx</name><operator pos:start="73:14" pos:end="73:15">-&gt;</operator><name pos:start="73:16" pos:end="73:21">height</name></name> <operator pos:start="73:23" pos:end="73:23">=</operator> <call pos:start="73:25" pos:end="73:50"><name pos:start="73:25" pos:end="73:43">bytestream_get_le32</name><argument_list pos:start="73:44" pos:end="73:50">(<argument pos:start="73:45" pos:end="73:49"><expr pos:start="73:45" pos:end="73:49"><operator pos:start="73:45" pos:end="73:45">&amp;</operator><name pos:start="73:46" pos:end="73:49">data</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="75:9" pos:end="75:67"><expr pos:start="75:9" pos:end="75:66"><call pos:start="75:9" pos:end="75:66"><name pos:start="75:9" pos:end="75:30">avcodec_set_dimensions</name><argument_list pos:start="75:31" pos:end="75:66">(<argument pos:start="75:32" pos:end="75:36"><expr pos:start="75:32" pos:end="75:36"><name pos:start="75:32" pos:end="75:36">avctx</name></expr></argument>, <argument pos:start="75:39" pos:end="75:50"><expr pos:start="75:39" pos:end="75:50"><name pos:start="75:39" pos:end="75:50"><name pos:start="75:39" pos:end="75:43">avctx</name><operator pos:start="75:44" pos:end="75:45">-&gt;</operator><name pos:start="75:46" pos:end="75:50">width</name></name></expr></argument>, <argument pos:start="75:53" pos:end="75:65"><expr pos:start="75:53" pos:end="75:65"><name pos:start="75:53" pos:end="75:65"><name pos:start="75:53" pos:end="75:57">avctx</name><operator pos:start="75:58" pos:end="75:59">-&gt;</operator><name pos:start="75:60" pos:end="75:65">height</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <expr_stmt pos:start="77:9" pos:end="77:18"><expr pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:12">size</name> <operator pos:start="77:14" pos:end="77:15">-=</operator> <literal type="number" pos:start="77:17" pos:end="77:17">8</literal></expr>;</expr_stmt>

    </block_content>}</block></if></if_stmt>

</block_content>}</block></function>
</unit>
