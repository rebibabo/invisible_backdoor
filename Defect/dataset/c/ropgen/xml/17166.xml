<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/0/17166.c" pos:tabs="8"><function pos:start="1:1" pos:end="175:1"><type pos:start="1:1" pos:end="1:3"><name pos:start="1:1" pos:end="1:3">int</name></type> <name pos:start="1:5" pos:end="1:24">av_buffersrc_add_ref</name><parameter_list pos:start="1:25" pos:end="3:62">(<parameter pos:start="1:26" pos:end="1:55"><decl pos:start="1:26" pos:end="1:55"><type pos:start="1:26" pos:end="1:55"><name pos:start="1:26" pos:end="1:40">AVFilterContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:55">buffer_filter</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:50"><decl pos:start="3:26" pos:end="3:50"><type pos:start="3:26" pos:end="3:50"><name pos:start="3:26" pos:end="3:42">AVFilterBufferRef</name> <modifier pos:start="3:44" pos:end="3:44">*</modifier></type><name pos:start="3:45" pos:end="3:50">picref</name></decl></parameter>, <parameter pos:start="3:53" pos:end="3:61"><decl pos:start="3:53" pos:end="3:61"><type pos:start="3:53" pos:end="3:61"><name pos:start="3:53" pos:end="3:55">int</name></type> <name pos:start="3:57" pos:end="3:61">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="175:1">{<block_content pos:start="7:5" pos:end="173:13">

    <decl_stmt pos:start="7:5" pos:end="7:49"><decl pos:start="7:5" pos:end="7:48"><type pos:start="7:5" pos:end="7:25"><name pos:start="7:5" pos:end="7:23">BufferSourceContext</name> <modifier pos:start="7:25" pos:end="7:25">*</modifier></type><name pos:start="7:26" pos:end="7:26">c</name> <init pos:start="7:28" pos:end="7:48">= <expr pos:start="7:30" pos:end="7:48"><name pos:start="7:30" pos:end="7:48"><name pos:start="7:30" pos:end="7:42">buffer_filter</name><operator pos:start="7:43" pos:end="7:44">-&gt;</operator><name pos:start="7:45" pos:end="7:48">priv</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:54"><decl pos:start="9:5" pos:end="9:53"><type pos:start="9:5" pos:end="9:18"><name pos:start="9:5" pos:end="9:16">AVFilterLink</name> <modifier pos:start="9:18" pos:end="9:18">*</modifier></type><name pos:start="9:19" pos:end="9:25">outlink</name> <init pos:start="9:27" pos:end="9:53">= <expr pos:start="9:29" pos:end="9:53"><name pos:start="9:29" pos:end="9:53"><name pos:start="9:29" pos:end="9:41">buffer_filter</name><operator pos:start="9:42" pos:end="9:43">-&gt;</operator><name pos:start="9:44" pos:end="9:50">outputs</name><index pos:start="9:51" pos:end="9:53">[<expr pos:start="9:52" pos:end="9:52"><literal type="number" pos:start="9:52" pos:end="9:52">0</literal></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:27"><decl pos:start="11:5" pos:end="11:26"><type pos:start="11:5" pos:end="11:23"><name pos:start="11:5" pos:end="11:21">AVFilterBufferRef</name> <modifier pos:start="11:23" pos:end="11:23">*</modifier></type><name pos:start="11:24" pos:end="11:26">buf</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:12"><decl pos:start="13:5" pos:end="13:11"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:11">ret</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="25:31"><if pos:start="17:5" pos:end="23:5">if <condition pos:start="17:8" pos:end="17:16">(<expr pos:start="17:9" pos:end="17:15"><operator pos:start="17:9" pos:end="17:9">!</operator><name pos:start="17:10" pos:end="17:15">picref</name></expr>)</condition> <block pos:start="17:18" pos:end="23:5">{<block_content pos:start="19:9" pos:end="21:17">

        <expr_stmt pos:start="19:9" pos:end="19:19"><expr pos:start="19:9" pos:end="19:18"><name pos:start="19:9" pos:end="19:14"><name pos:start="19:9" pos:end="19:9">c</name><operator pos:start="19:10" pos:end="19:11">-&gt;</operator><name pos:start="19:12" pos:end="19:14">eof</name></name> <operator pos:start="19:16" pos:end="19:16">=</operator> <literal type="number" pos:start="19:18" pos:end="19:18">1</literal></expr>;</expr_stmt>

        <return pos:start="21:9" pos:end="21:17">return <expr pos:start="21:16" pos:end="21:16"><literal type="number" pos:start="21:16" pos:end="21:16">0</literal></expr>;</return>

    </block_content>}</block></if> <if type="elseif" pos:start="23:7" pos:end="25:31">else if <condition pos:start="23:15" pos:end="23:22">(<expr pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:21"><name pos:start="23:16" pos:end="23:16">c</name><operator pos:start="23:17" pos:end="23:18">-&gt;</operator><name pos:start="23:19" pos:end="23:21">eof</name></name></expr>)</condition><block type="pseudo" pos:start="25:9" pos:end="25:31"><block_content pos:start="25:9" pos:end="25:31">

        <return pos:start="25:9" pos:end="25:31">return <expr pos:start="25:16" pos:end="25:30"><call pos:start="25:16" pos:end="25:30"><name pos:start="25:16" pos:end="25:22">AVERROR</name><argument_list pos:start="25:23" pos:end="25:30">(<argument pos:start="25:24" pos:end="25:29"><expr pos:start="25:24" pos:end="25:29"><name pos:start="25:24" pos:end="25:29">EINVAL</name></expr></argument>)</argument_list></call></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="29:5" pos:end="35:19"><if pos:start="29:5" pos:end="35:19">if <condition pos:start="29:8" pos:end="33:59">(<expr pos:start="29:9" pos:end="33:58"><operator pos:start="29:9" pos:end="29:9">!</operator><call pos:start="29:10" pos:end="29:31"><name pos:start="29:10" pos:end="29:22">av_fifo_space</name><argument_list pos:start="29:23" pos:end="29:31">(<argument pos:start="29:24" pos:end="29:30"><expr pos:start="29:24" pos:end="29:30"><name pos:start="29:24" pos:end="29:30"><name pos:start="29:24" pos:end="29:24">c</name><operator pos:start="29:25" pos:end="29:26">-&gt;</operator><name pos:start="29:27" pos:end="29:30">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="29:33" pos:end="29:34">&amp;&amp;</operator>

        <operator pos:start="31:9" pos:end="31:9">(</operator><name pos:start="31:10" pos:end="31:12">ret</name> <operator pos:start="31:14" pos:end="31:14">=</operator> <call pos:start="31:16" pos:end="33:53"><name pos:start="31:16" pos:end="31:31">av_fifo_realloc2</name><argument_list pos:start="31:32" pos:end="33:53">(<argument pos:start="31:33" pos:end="31:39"><expr pos:start="31:33" pos:end="31:39"><name pos:start="31:33" pos:end="31:39"><name pos:start="31:33" pos:end="31:33">c</name><operator pos:start="31:34" pos:end="31:35">-&gt;</operator><name pos:start="31:36" pos:end="31:39">fifo</name></name></expr></argument>, <argument pos:start="31:42" pos:end="33:52"><expr pos:start="31:42" pos:end="33:52"><call pos:start="31:42" pos:end="31:62"><name pos:start="31:42" pos:end="31:53">av_fifo_size</name><argument_list pos:start="31:54" pos:end="31:62">(<argument pos:start="31:55" pos:end="31:61"><expr pos:start="31:55" pos:end="31:61"><name pos:start="31:55" pos:end="31:61"><name pos:start="31:55" pos:end="31:55">c</name><operator pos:start="31:56" pos:end="31:57">-&gt;</operator><name pos:start="31:58" pos:end="31:61">fifo</name></name></expr></argument>)</argument_list></call> <operator pos:start="31:64" pos:end="31:64">+</operator>

                                         <sizeof pos:start="33:42" pos:end="33:52">sizeof<argument_list pos:start="33:48" pos:end="33:52">(<argument pos:start="33:49" pos:end="33:51"><expr pos:start="33:49" pos:end="33:51"><name pos:start="33:49" pos:end="33:51">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>)</argument_list></call><operator pos:start="33:54" pos:end="33:54">)</operator> <operator pos:start="33:56" pos:end="33:56">&lt;</operator> <literal type="number" pos:start="33:58" pos:end="33:58">0</literal></expr>)</condition><block type="pseudo" pos:start="35:9" pos:end="35:19"><block_content pos:start="35:9" pos:end="35:19">

        <return pos:start="35:9" pos:end="35:19">return <expr pos:start="35:16" pos:end="35:18"><name pos:start="35:16" pos:end="35:18">ret</name></expr>;</return></block_content></block></if></if_stmt>



    <if_stmt pos:start="39:5" pos:end="131:5"><if pos:start="39:5" pos:end="131:5">if <condition pos:start="39:8" pos:end="39:53">(<expr pos:start="39:9" pos:end="39:52"><operator pos:start="39:9" pos:end="39:9">!</operator><operator pos:start="39:10" pos:end="39:10">(</operator><name pos:start="39:11" pos:end="39:15">flags</name> <operator pos:start="39:17" pos:end="39:17">&amp;</operator> <name pos:start="39:19" pos:end="39:51">AV_BUFFERSRC_FLAG_NO_CHECK_FORMAT</name><operator pos:start="39:52" pos:end="39:52">)</operator></expr>)</condition> <block pos:start="39:55" pos:end="131:5">{<block_content pos:start="43:5" pos:end="129:5">

        <comment type="block" pos:start="41:9" pos:end="41:27">/* TODO reindent */</comment>

    <if_stmt pos:start="43:5" pos:end="129:5"><if pos:start="43:5" pos:end="129:5">if <condition pos:start="43:8" pos:end="43:93">(<expr pos:start="43:9" pos:end="43:92"><name pos:start="43:9" pos:end="43:24"><name pos:start="43:9" pos:end="43:14">picref</name><operator pos:start="43:15" pos:end="43:16">-&gt;</operator><name pos:start="43:17" pos:end="43:21">video</name><operator pos:start="43:22" pos:end="43:23">-&gt;</operator><name pos:start="43:24" pos:end="43:24">w</name></name> <operator pos:start="43:26" pos:end="43:27">!=</operator> <name pos:start="43:29" pos:end="43:32"><name pos:start="43:29" pos:end="43:29">c</name><operator pos:start="43:30" pos:end="43:31">-&gt;</operator><name pos:start="43:32" pos:end="43:32">w</name></name> <operator pos:start="43:34" pos:end="43:35">||</operator> <name pos:start="43:37" pos:end="43:52"><name pos:start="43:37" pos:end="43:42">picref</name><operator pos:start="43:43" pos:end="43:44">-&gt;</operator><name pos:start="43:45" pos:end="43:49">video</name><operator pos:start="43:50" pos:end="43:51">-&gt;</operator><name pos:start="43:52" pos:end="43:52">h</name></name> <operator pos:start="43:54" pos:end="43:55">!=</operator> <name pos:start="43:57" pos:end="43:60"><name pos:start="43:57" pos:end="43:57">c</name><operator pos:start="43:58" pos:end="43:59">-&gt;</operator><name pos:start="43:60" pos:end="43:60">h</name></name> <operator pos:start="43:62" pos:end="43:63">||</operator> <name pos:start="43:65" pos:end="43:78"><name pos:start="43:65" pos:end="43:70">picref</name><operator pos:start="43:71" pos:end="43:72">-&gt;</operator><name pos:start="43:73" pos:end="43:78">format</name></name> <operator pos:start="43:80" pos:end="43:81">!=</operator> <name pos:start="43:83" pos:end="43:92"><name pos:start="43:83" pos:end="43:83">c</name><operator pos:start="43:84" pos:end="43:85">-&gt;</operator><name pos:start="43:86" pos:end="43:92">pix_fmt</name></name></expr>)</condition> <block pos:start="43:95" pos:end="129:5">{<block_content pos:start="45:9" pos:end="127:23">

        <decl_stmt pos:start="45:9" pos:end="45:64"><decl pos:start="45:9" pos:end="45:63"><type pos:start="45:9" pos:end="45:25"><name pos:start="45:9" pos:end="45:23">AVFilterContext</name> <modifier pos:start="45:25" pos:end="45:25">*</modifier></type><name pos:start="45:26" pos:end="45:30">scale</name> <init pos:start="45:32" pos:end="45:63">= <expr pos:start="45:34" pos:end="45:63"><name pos:start="45:34" pos:end="45:58"><name pos:start="45:34" pos:end="45:46">buffer_filter</name><operator pos:start="45:47" pos:end="45:48">-&gt;</operator><name pos:start="45:49" pos:end="45:55">outputs</name><index pos:start="45:56" pos:end="45:58">[<expr pos:start="45:57" pos:end="45:57"><literal type="number" pos:start="45:57" pos:end="45:57">0</literal></expr>]</index></name><operator pos:start="45:59" pos:end="45:60">-&gt;</operator><name pos:start="45:61" pos:end="45:63">dst</name></expr></init></decl>;</decl_stmt>

        <decl_stmt pos:start="47:9" pos:end="47:27"><decl pos:start="47:9" pos:end="47:26"><type pos:start="47:9" pos:end="47:22"><name pos:start="47:9" pos:end="47:20">AVFilterLink</name> <modifier pos:start="47:22" pos:end="47:22">*</modifier></type><name pos:start="47:23" pos:end="47:26">link</name></decl>;</decl_stmt>

        <decl_stmt pos:start="49:9" pos:end="49:31"><decl pos:start="49:9" pos:end="49:30"><type pos:start="49:9" pos:end="49:12"><name pos:start="49:9" pos:end="49:12">char</name></type> <name pos:start="49:14" pos:end="49:30"><name pos:start="49:14" pos:end="49:24">scale_param</name><index pos:start="49:25" pos:end="49:30">[<expr pos:start="49:26" pos:end="49:29"><literal type="number" pos:start="49:26" pos:end="49:29">1024</literal></expr>]</index></name></decl>;</decl_stmt>



        <expr_stmt pos:start="53:9" pos:end="59:96"><expr pos:start="53:9" pos:end="59:95"><call pos:start="53:9" pos:end="59:95"><name pos:start="53:9" pos:end="53:14">av_log</name><argument_list pos:start="53:15" pos:end="59:95">(<argument pos:start="53:16" pos:end="53:28"><expr pos:start="53:16" pos:end="53:28"><name pos:start="53:16" pos:end="53:28">buffer_filter</name></expr></argument>, <argument pos:start="53:31" pos:end="53:41"><expr pos:start="53:31" pos:end="53:41"><name pos:start="53:31" pos:end="53:41">AV_LOG_INFO</name></expr></argument>,

               <argument pos:start="55:16" pos:end="55:89"><expr pos:start="55:16" pos:end="55:89"><literal type="string" pos:start="55:16" pos:end="55:89">"Buffer video input changed from size:%dx%d fmt:%s to size:%dx%d fmt:%s\n"</literal></expr></argument>,

               <argument pos:start="57:16" pos:end="57:19"><expr pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:19"><name pos:start="57:16" pos:end="57:16">c</name><operator pos:start="57:17" pos:end="57:18">-&gt;</operator><name pos:start="57:19" pos:end="57:19">w</name></name></expr></argument>, <argument pos:start="57:22" pos:end="57:25"><expr pos:start="57:22" pos:end="57:25"><name pos:start="57:22" pos:end="57:25"><name pos:start="57:22" pos:end="57:22">c</name><operator pos:start="57:23" pos:end="57:24">-&gt;</operator><name pos:start="57:25" pos:end="57:25">h</name></name></expr></argument>, <argument pos:start="57:28" pos:end="57:66"><expr pos:start="57:28" pos:end="57:66"><name pos:start="57:28" pos:end="57:61"><name pos:start="57:28" pos:end="57:49">av_pix_fmt_descriptors</name><index pos:start="57:50" pos:end="57:61">[<expr pos:start="57:51" pos:end="57:60"><name pos:start="57:51" pos:end="57:60"><name pos:start="57:51" pos:end="57:51">c</name><operator pos:start="57:52" pos:end="57:53">-&gt;</operator><name pos:start="57:54" pos:end="57:60">pix_fmt</name></name></expr>]</index></name><operator pos:start="57:62" pos:end="57:62">.</operator><name pos:start="57:63" pos:end="57:66">name</name></expr></argument>,

               <argument pos:start="59:16" pos:end="59:31"><expr pos:start="59:16" pos:end="59:31"><name pos:start="59:16" pos:end="59:31"><name pos:start="59:16" pos:end="59:21">picref</name><operator pos:start="59:22" pos:end="59:23">-&gt;</operator><name pos:start="59:24" pos:end="59:28">video</name><operator pos:start="59:29" pos:end="59:30">-&gt;</operator><name pos:start="59:31" pos:end="59:31">w</name></name></expr></argument>, <argument pos:start="59:34" pos:end="59:49"><expr pos:start="59:34" pos:end="59:49"><name pos:start="59:34" pos:end="59:49"><name pos:start="59:34" pos:end="59:39">picref</name><operator pos:start="59:40" pos:end="59:41">-&gt;</operator><name pos:start="59:42" pos:end="59:46">video</name><operator pos:start="59:47" pos:end="59:48">-&gt;</operator><name pos:start="59:49" pos:end="59:49">h</name></name></expr></argument>, <argument pos:start="59:52" pos:end="59:94"><expr pos:start="59:52" pos:end="59:94"><name pos:start="59:52" pos:end="59:89"><name pos:start="59:52" pos:end="59:73">av_pix_fmt_descriptors</name><index pos:start="59:74" pos:end="59:89">[<expr pos:start="59:75" pos:end="59:88"><name pos:start="59:75" pos:end="59:88"><name pos:start="59:75" pos:end="59:80">picref</name><operator pos:start="59:81" pos:end="59:82">-&gt;</operator><name pos:start="59:83" pos:end="59:88">format</name></name></expr>]</index></name><operator pos:start="59:90" pos:end="59:90">.</operator><name pos:start="59:91" pos:end="59:94">name</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



        <if_stmt pos:start="63:9" pos:end="111:9"><if pos:start="63:9" pos:end="103:9">if <condition pos:start="63:12" pos:end="63:59">(<expr pos:start="63:13" pos:end="63:58"><operator pos:start="63:13" pos:end="63:13">!</operator><name pos:start="63:14" pos:end="63:18">scale</name> <operator pos:start="63:20" pos:end="63:21">||</operator> <call pos:start="63:23" pos:end="63:58"><name pos:start="63:23" pos:end="63:28">strcmp</name><argument_list pos:start="63:29" pos:end="63:58">(<argument pos:start="63:30" pos:end="63:48"><expr pos:start="63:30" pos:end="63:48"><name pos:start="63:30" pos:end="63:48"><name pos:start="63:30" pos:end="63:34">scale</name><operator pos:start="63:35" pos:end="63:36">-&gt;</operator><name pos:start="63:37" pos:end="63:42">filter</name><operator pos:start="63:43" pos:end="63:44">-&gt;</operator><name pos:start="63:45" pos:end="63:48">name</name></name></expr></argument>, <argument pos:start="63:51" pos:end="63:57"><expr pos:start="63:51" pos:end="63:57"><literal type="string" pos:start="63:51" pos:end="63:57">"scale"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="63:61" pos:end="103:9">{<block_content pos:start="65:13" pos:end="101:50">

            <decl_stmt pos:start="65:13" pos:end="65:56"><decl pos:start="65:13" pos:end="65:55"><type pos:start="65:13" pos:end="65:22"><name pos:start="65:13" pos:end="65:20">AVFilter</name> <modifier pos:start="65:22" pos:end="65:22">*</modifier></type><name pos:start="65:23" pos:end="65:23">f</name> <init pos:start="65:25" pos:end="65:55">= <expr pos:start="65:27" pos:end="65:55"><call pos:start="65:27" pos:end="65:55"><name pos:start="65:27" pos:end="65:46">avfilter_get_by_name</name><argument_list pos:start="65:47" pos:end="65:55">(<argument pos:start="65:48" pos:end="65:54"><expr pos:start="65:48" pos:end="65:54"><literal type="string" pos:start="65:48" pos:end="65:54">"scale"</literal></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>



            <expr_stmt pos:start="69:13" pos:end="69:76"><expr pos:start="69:13" pos:end="69:75"><call pos:start="69:13" pos:end="69:75"><name pos:start="69:13" pos:end="69:18">av_log</name><argument_list pos:start="69:19" pos:end="69:75">(<argument pos:start="69:20" pos:end="69:32"><expr pos:start="69:20" pos:end="69:32"><name pos:start="69:20" pos:end="69:32">buffer_filter</name></expr></argument>, <argument pos:start="69:35" pos:end="69:45"><expr pos:start="69:35" pos:end="69:45"><name pos:start="69:35" pos:end="69:45">AV_LOG_INFO</name></expr></argument>, <argument pos:start="69:48" pos:end="69:74"><expr pos:start="69:48" pos:end="69:74"><literal type="string" pos:start="69:48" pos:end="69:74">"Inserting scaler filter\n"</literal></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="71:13" pos:end="73:27"><if pos:start="71:13" pos:end="73:27">if <condition pos:start="71:16" pos:end="71:72">(<expr pos:start="71:17" pos:end="71:71"><operator pos:start="71:17" pos:end="71:17">(</operator><name pos:start="71:18" pos:end="71:20">ret</name> <operator pos:start="71:22" pos:end="71:22">=</operator> <call pos:start="71:24" pos:end="71:66"><name pos:start="71:24" pos:end="71:36">avfilter_open</name><argument_list pos:start="71:37" pos:end="71:66">(<argument pos:start="71:38" pos:end="71:43"><expr pos:start="71:38" pos:end="71:43"><operator pos:start="71:38" pos:end="71:38">&amp;</operator><name pos:start="71:39" pos:end="71:43">scale</name></expr></argument>, <argument pos:start="71:46" pos:end="71:46"><expr pos:start="71:46" pos:end="71:46"><name pos:start="71:46" pos:end="71:46">f</name></expr></argument>, <argument pos:start="71:49" pos:end="71:65"><expr pos:start="71:49" pos:end="71:65"><literal type="string" pos:start="71:49" pos:end="71:65">"Input equalizer"</literal></expr></argument>)</argument_list></call><operator pos:start="71:67" pos:end="71:67">)</operator> <operator pos:start="71:69" pos:end="71:69">&lt;</operator> <literal type="number" pos:start="71:71" pos:end="71:71">0</literal></expr>)</condition><block type="pseudo" pos:start="73:17" pos:end="73:27"><block_content pos:start="73:17" pos:end="73:27">

                <return pos:start="73:17" pos:end="73:27">return <expr pos:start="73:24" pos:end="73:26"><name pos:start="73:24" pos:end="73:26">ret</name></expr>;</return></block_content></block></if></if_stmt>



            <expr_stmt pos:start="77:13" pos:end="77:29"><expr pos:start="77:13" pos:end="77:28"><name pos:start="77:13" pos:end="77:20"><name pos:start="77:13" pos:end="77:13">c</name><operator pos:start="77:14" pos:end="77:15">-&gt;</operator><name pos:start="77:16" pos:end="77:20">scale</name></name> <operator pos:start="77:22" pos:end="77:22">=</operator> <name pos:start="77:24" pos:end="77:28">scale</name></expr>;</expr_stmt>



            <expr_stmt pos:start="81:13" pos:end="81:95"><expr pos:start="81:13" pos:end="81:94"><call pos:start="81:13" pos:end="81:94"><name pos:start="81:13" pos:end="81:20">snprintf</name><argument_list pos:start="81:21" pos:end="81:94">(<argument pos:start="81:22" pos:end="81:32"><expr pos:start="81:22" pos:end="81:32"><name pos:start="81:22" pos:end="81:32">scale_param</name></expr></argument>, <argument pos:start="81:35" pos:end="81:55"><expr pos:start="81:35" pos:end="81:55"><sizeof pos:start="81:35" pos:end="81:53">sizeof<argument_list pos:start="81:41" pos:end="81:53">(<argument pos:start="81:42" pos:end="81:52"><expr pos:start="81:42" pos:end="81:52"><name pos:start="81:42" pos:end="81:52">scale_param</name></expr></argument>)</argument_list></sizeof><operator pos:start="81:54" pos:end="81:54">-</operator><literal type="number" pos:start="81:55" pos:end="81:55">1</literal></expr></argument>, <argument pos:start="81:58" pos:end="81:67"><expr pos:start="81:58" pos:end="81:67"><literal type="string" pos:start="81:58" pos:end="81:67">"%d:%d:%s"</literal></expr></argument>, <argument pos:start="81:70" pos:end="81:73"><expr pos:start="81:70" pos:end="81:73"><name pos:start="81:70" pos:end="81:73"><name pos:start="81:70" pos:end="81:70">c</name><operator pos:start="81:71" pos:end="81:72">-&gt;</operator><name pos:start="81:73" pos:end="81:73">w</name></name></expr></argument>, <argument pos:start="81:76" pos:end="81:79"><expr pos:start="81:76" pos:end="81:79"><name pos:start="81:76" pos:end="81:79"><name pos:start="81:76" pos:end="81:76">c</name><operator pos:start="81:77" pos:end="81:78">-&gt;</operator><name pos:start="81:79" pos:end="81:79">h</name></name></expr></argument>, <argument pos:start="81:82" pos:end="81:93"><expr pos:start="81:82" pos:end="81:93"><name pos:start="81:82" pos:end="81:93"><name pos:start="81:82" pos:end="81:82">c</name><operator pos:start="81:83" pos:end="81:84">-&gt;</operator><name pos:start="81:85" pos:end="81:93">sws_param</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <if_stmt pos:start="83:13" pos:end="87:13"><if pos:start="83:13" pos:end="87:13">if <condition pos:start="83:16" pos:end="83:75">(<expr pos:start="83:17" pos:end="83:74"><operator pos:start="83:17" pos:end="83:17">(</operator><name pos:start="83:18" pos:end="83:20">ret</name> <operator pos:start="83:22" pos:end="83:22">=</operator> <call pos:start="83:24" pos:end="83:69"><name pos:start="83:24" pos:end="83:43">avfilter_init_filter</name><argument_list pos:start="83:44" pos:end="83:69">(<argument pos:start="83:45" pos:end="83:49"><expr pos:start="83:45" pos:end="83:49"><name pos:start="83:45" pos:end="83:49">scale</name></expr></argument>, <argument pos:start="83:52" pos:end="83:62"><expr pos:start="83:52" pos:end="83:62"><name pos:start="83:52" pos:end="83:62">scale_param</name></expr></argument>, <argument pos:start="83:65" pos:end="83:68"><expr pos:start="83:65" pos:end="83:68"><name pos:start="83:65" pos:end="83:68">NULL</name></expr></argument>)</argument_list></call><operator pos:start="83:70" pos:end="83:70">)</operator> <operator pos:start="83:72" pos:end="83:72">&lt;</operator> <literal type="number" pos:start="83:74" pos:end="83:74">0</literal></expr>)</condition> <block pos:start="83:77" pos:end="87:13">{<block_content pos:start="85:17" pos:end="85:27">

                <return pos:start="85:17" pos:end="85:27">return <expr pos:start="85:24" pos:end="85:26"><name pos:start="85:24" pos:end="85:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>



            <if_stmt pos:start="91:13" pos:end="95:13"><if pos:start="91:13" pos:end="95:13">if <condition pos:start="91:16" pos:end="91:91">(<expr pos:start="91:17" pos:end="91:90"><operator pos:start="91:17" pos:end="91:17">(</operator><name pos:start="91:18" pos:end="91:20">ret</name> <operator pos:start="91:22" pos:end="91:22">=</operator> <call pos:start="91:24" pos:end="91:85"><name pos:start="91:24" pos:end="91:45">avfilter_insert_filter</name><argument_list pos:start="91:46" pos:end="91:85">(<argument pos:start="91:47" pos:end="91:71"><expr pos:start="91:47" pos:end="91:71"><name pos:start="91:47" pos:end="91:71"><name pos:start="91:47" pos:end="91:59">buffer_filter</name><operator pos:start="91:60" pos:end="91:61">-&gt;</operator><name pos:start="91:62" pos:end="91:68">outputs</name><index pos:start="91:69" pos:end="91:71">[<expr pos:start="91:70" pos:end="91:70"><literal type="number" pos:start="91:70" pos:end="91:70">0</literal></expr>]</index></name></expr></argument>, <argument pos:start="91:74" pos:end="91:78"><expr pos:start="91:74" pos:end="91:78"><name pos:start="91:74" pos:end="91:78">scale</name></expr></argument>, <argument pos:start="91:81" pos:end="91:81"><expr pos:start="91:81" pos:end="91:81"><literal type="number" pos:start="91:81" pos:end="91:81">0</literal></expr></argument>, <argument pos:start="91:84" pos:end="91:84"><expr pos:start="91:84" pos:end="91:84"><literal type="number" pos:start="91:84" pos:end="91:84">0</literal></expr></argument>)</argument_list></call><operator pos:start="91:86" pos:end="91:86">)</operator> <operator pos:start="91:88" pos:end="91:88">&lt;</operator> <literal type="number" pos:start="91:90" pos:end="91:90">0</literal></expr>)</condition> <block pos:start="91:93" pos:end="95:13">{<block_content pos:start="93:17" pos:end="93:27">

                <return pos:start="93:17" pos:end="93:27">return <expr pos:start="93:24" pos:end="93:26"><name pos:start="93:24" pos:end="93:26">ret</name></expr>;</return>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="97:13" pos:end="97:71"><expr pos:start="97:13" pos:end="97:70"><name pos:start="97:13" pos:end="97:29"><name pos:start="97:13" pos:end="97:17">scale</name><operator pos:start="97:18" pos:end="97:19">-&gt;</operator><name pos:start="97:20" pos:end="97:26">outputs</name><index pos:start="97:27" pos:end="97:29">[<expr pos:start="97:28" pos:end="97:28"><literal type="number" pos:start="97:28" pos:end="97:28">0</literal></expr>]</index></name><operator pos:start="97:30" pos:end="97:31">-&gt;</operator><name pos:start="97:32" pos:end="97:40">time_base</name> <operator pos:start="97:42" pos:end="97:42">=</operator> <name pos:start="97:44" pos:end="97:59"><name pos:start="97:44" pos:end="97:48">scale</name><operator pos:start="97:49" pos:end="97:50">-&gt;</operator><name pos:start="97:51" pos:end="97:56">inputs</name><index pos:start="97:57" pos:end="97:59">[<expr pos:start="97:58" pos:end="97:58"><literal type="number" pos:start="97:58" pos:end="97:58">0</literal></expr>]</index></name><operator pos:start="97:60" pos:end="97:61">-&gt;</operator><name pos:start="97:62" pos:end="97:70">time_base</name></expr>;</expr_stmt>



            <expr_stmt pos:start="101:13" pos:end="101:50"><expr pos:start="101:13" pos:end="101:49"><name pos:start="101:13" pos:end="101:29"><name pos:start="101:13" pos:end="101:17">scale</name><operator pos:start="101:18" pos:end="101:19">-&gt;</operator><name pos:start="101:20" pos:end="101:26">outputs</name><index pos:start="101:27" pos:end="101:29">[<expr pos:start="101:28" pos:end="101:28"><literal type="number" pos:start="101:28" pos:end="101:28">0</literal></expr>]</index></name><operator pos:start="101:30" pos:end="101:31">-&gt;</operator><name pos:start="101:32" pos:end="101:37">format</name><operator pos:start="101:38" pos:end="101:38">=</operator> <name pos:start="101:40" pos:end="101:49"><name pos:start="101:40" pos:end="101:40">c</name><operator pos:start="101:41" pos:end="101:42">-&gt;</operator><name pos:start="101:43" pos:end="101:49">pix_fmt</name></name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="103:11" pos:end="111:9">else if <condition pos:start="103:19" pos:end="103:57">(<expr pos:start="103:20" pos:end="103:56"><operator pos:start="103:20" pos:end="103:20">!</operator><call pos:start="103:21" pos:end="103:56"><name pos:start="103:21" pos:end="103:26">strcmp</name><argument_list pos:start="103:27" pos:end="103:56">(<argument pos:start="103:28" pos:end="103:46"><expr pos:start="103:28" pos:end="103:46"><name pos:start="103:28" pos:end="103:46"><name pos:start="103:28" pos:end="103:32">scale</name><operator pos:start="103:33" pos:end="103:34">-&gt;</operator><name pos:start="103:35" pos:end="103:40">filter</name><operator pos:start="103:41" pos:end="103:42">-&gt;</operator><name pos:start="103:43" pos:end="103:46">name</name></name></expr></argument>, <argument pos:start="103:49" pos:end="103:55"><expr pos:start="103:49" pos:end="103:55"><literal type="string" pos:start="103:49" pos:end="103:55">"scale"</literal></expr></argument>)</argument_list></call></expr>)</condition> <block pos:start="103:59" pos:end="111:9">{<block_content pos:start="105:13" pos:end="109:58">

            <expr_stmt pos:start="105:13" pos:end="107:79"><expr pos:start="105:13" pos:end="107:78"><call pos:start="105:13" pos:end="107:78"><name pos:start="105:13" pos:end="105:20">snprintf</name><argument_list pos:start="105:21" pos:end="107:78">(<argument pos:start="105:22" pos:end="105:32"><expr pos:start="105:22" pos:end="105:32"><name pos:start="105:22" pos:end="105:32">scale_param</name></expr></argument>, <argument pos:start="105:35" pos:end="105:55"><expr pos:start="105:35" pos:end="105:55"><sizeof pos:start="105:35" pos:end="105:53">sizeof<argument_list pos:start="105:41" pos:end="105:53">(<argument pos:start="105:42" pos:end="105:52"><expr pos:start="105:42" pos:end="105:52"><name pos:start="105:42" pos:end="105:52">scale_param</name></expr></argument>)</argument_list></sizeof><operator pos:start="105:54" pos:end="105:54">-</operator><literal type="number" pos:start="105:55" pos:end="105:55">1</literal></expr></argument>, <argument pos:start="105:58" pos:end="105:67"><expr pos:start="105:58" pos:end="105:67"><literal type="string" pos:start="105:58" pos:end="105:67">"%d:%d:%s"</literal></expr></argument>,

                     <argument pos:start="107:22" pos:end="107:41"><expr pos:start="107:22" pos:end="107:41"><name pos:start="107:22" pos:end="107:38"><name pos:start="107:22" pos:end="107:26">scale</name><operator pos:start="107:27" pos:end="107:28">-&gt;</operator><name pos:start="107:29" pos:end="107:35">outputs</name><index pos:start="107:36" pos:end="107:38">[<expr pos:start="107:37" pos:end="107:37"><literal type="number" pos:start="107:37" pos:end="107:37">0</literal></expr>]</index></name><operator pos:start="107:39" pos:end="107:40">-&gt;</operator><name pos:start="107:41" pos:end="107:41">w</name></expr></argument>, <argument pos:start="107:44" pos:end="107:63"><expr pos:start="107:44" pos:end="107:63"><name pos:start="107:44" pos:end="107:60"><name pos:start="107:44" pos:end="107:48">scale</name><operator pos:start="107:49" pos:end="107:50">-&gt;</operator><name pos:start="107:51" pos:end="107:57">outputs</name><index pos:start="107:58" pos:end="107:60">[<expr pos:start="107:59" pos:end="107:59"><literal type="number" pos:start="107:59" pos:end="107:59">0</literal></expr>]</index></name><operator pos:start="107:61" pos:end="107:62">-&gt;</operator><name pos:start="107:63" pos:end="107:63">h</name></expr></argument>, <argument pos:start="107:66" pos:end="107:77"><expr pos:start="107:66" pos:end="107:77"><name pos:start="107:66" pos:end="107:77"><name pos:start="107:66" pos:end="107:66">c</name><operator pos:start="107:67" pos:end="107:68">-&gt;</operator><name pos:start="107:69" pos:end="107:77">sws_param</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="109:13" pos:end="109:58"><expr pos:start="109:13" pos:end="109:57"><call pos:start="109:13" pos:end="109:57"><name pos:start="109:13" pos:end="109:31"><name pos:start="109:13" pos:end="109:17">scale</name><operator pos:start="109:18" pos:end="109:19">-&gt;</operator><name pos:start="109:20" pos:end="109:25">filter</name><operator pos:start="109:26" pos:end="109:27">-&gt;</operator><name pos:start="109:28" pos:end="109:31">init</name></name><argument_list pos:start="109:32" pos:end="109:57">(<argument pos:start="109:33" pos:end="109:37"><expr pos:start="109:33" pos:end="109:37"><name pos:start="109:33" pos:end="109:37">scale</name></expr></argument>, <argument pos:start="109:40" pos:end="109:50"><expr pos:start="109:40" pos:end="109:50"><name pos:start="109:40" pos:end="109:50">scale_param</name></expr></argument>, <argument pos:start="109:53" pos:end="109:56"><expr pos:start="109:53" pos:end="109:56"><name pos:start="109:53" pos:end="109:56">NULL</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>



        <expr_stmt pos:start="115:9" pos:end="115:63"><expr pos:start="115:9" pos:end="115:62"><name pos:start="115:9" pos:end="115:18"><name pos:start="115:9" pos:end="115:9">c</name><operator pos:start="115:10" pos:end="115:11">-&gt;</operator><name pos:start="115:12" pos:end="115:18">pix_fmt</name></name> <operator pos:start="115:20" pos:end="115:20">=</operator> <name pos:start="115:22" pos:end="115:37"><name pos:start="115:22" pos:end="115:26">scale</name><operator pos:start="115:27" pos:end="115:28">-&gt;</operator><name pos:start="115:29" pos:end="115:34">inputs</name><index pos:start="115:35" pos:end="115:37">[<expr pos:start="115:36" pos:end="115:36"><literal type="number" pos:start="115:36" pos:end="115:36">0</literal></expr>]</index></name><operator pos:start="115:38" pos:end="115:39">-&gt;</operator><name pos:start="115:40" pos:end="115:45">format</name> <operator pos:start="115:47" pos:end="115:47">=</operator> <name pos:start="115:49" pos:end="115:62"><name pos:start="115:49" pos:end="115:54">picref</name><operator pos:start="115:55" pos:end="115:56">-&gt;</operator><name pos:start="115:57" pos:end="115:62">format</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="117:9" pos:end="117:65"><expr pos:start="117:9" pos:end="117:64"><name pos:start="117:9" pos:end="117:12"><name pos:start="117:9" pos:end="117:9">c</name><operator pos:start="117:10" pos:end="117:11">-&gt;</operator><name pos:start="117:12" pos:end="117:12">w</name></name>       <operator pos:start="117:20" pos:end="117:20">=</operator> <name pos:start="117:22" pos:end="117:37"><name pos:start="117:22" pos:end="117:26">scale</name><operator pos:start="117:27" pos:end="117:28">-&gt;</operator><name pos:start="117:29" pos:end="117:34">inputs</name><index pos:start="117:35" pos:end="117:37">[<expr pos:start="117:36" pos:end="117:36"><literal type="number" pos:start="117:36" pos:end="117:36">0</literal></expr>]</index></name><operator pos:start="117:38" pos:end="117:39">-&gt;</operator><name pos:start="117:40" pos:end="117:40">w</name>      <operator pos:start="117:47" pos:end="117:47">=</operator> <name pos:start="117:49" pos:end="117:64"><name pos:start="117:49" pos:end="117:54">picref</name><operator pos:start="117:55" pos:end="117:56">-&gt;</operator><name pos:start="117:57" pos:end="117:61">video</name><operator pos:start="117:62" pos:end="117:63">-&gt;</operator><name pos:start="117:64" pos:end="117:64">w</name></name></expr>;</expr_stmt>

        <expr_stmt pos:start="119:9" pos:end="119:65"><expr pos:start="119:9" pos:end="119:64"><name pos:start="119:9" pos:end="119:12"><name pos:start="119:9" pos:end="119:9">c</name><operator pos:start="119:10" pos:end="119:11">-&gt;</operator><name pos:start="119:12" pos:end="119:12">h</name></name>       <operator pos:start="119:20" pos:end="119:20">=</operator> <name pos:start="119:22" pos:end="119:37"><name pos:start="119:22" pos:end="119:26">scale</name><operator pos:start="119:27" pos:end="119:28">-&gt;</operator><name pos:start="119:29" pos:end="119:34">inputs</name><index pos:start="119:35" pos:end="119:37">[<expr pos:start="119:36" pos:end="119:36"><literal type="number" pos:start="119:36" pos:end="119:36">0</literal></expr>]</index></name><operator pos:start="119:38" pos:end="119:39">-&gt;</operator><name pos:start="119:40" pos:end="119:40">h</name>      <operator pos:start="119:47" pos:end="119:47">=</operator> <name pos:start="119:49" pos:end="119:64"><name pos:start="119:49" pos:end="119:54">picref</name><operator pos:start="119:55" pos:end="119:56">-&gt;</operator><name pos:start="119:57" pos:end="119:61">video</name><operator pos:start="119:62" pos:end="119:63">-&gt;</operator><name pos:start="119:64" pos:end="119:64">h</name></name></expr>;</expr_stmt>



        <expr_stmt pos:start="123:9" pos:end="123:33"><expr pos:start="123:9" pos:end="123:32"><name pos:start="123:9" pos:end="123:12">link</name> <operator pos:start="123:14" pos:end="123:14">=</operator> <name pos:start="123:16" pos:end="123:32"><name pos:start="123:16" pos:end="123:20">scale</name><operator pos:start="123:21" pos:end="123:22">-&gt;</operator><name pos:start="123:23" pos:end="123:29">outputs</name><index pos:start="123:30" pos:end="123:32">[<expr pos:start="123:31" pos:end="123:31"><literal type="number" pos:start="123:31" pos:end="123:31">0</literal></expr>]</index></name></expr>;</expr_stmt>

        <if_stmt pos:start="125:9" pos:end="127:23"><if pos:start="125:9" pos:end="127:23">if <condition pos:start="125:12" pos:end="125:58">(<expr pos:start="125:13" pos:end="125:57"><operator pos:start="125:13" pos:end="125:13">(</operator><name pos:start="125:14" pos:end="125:16">ret</name> <operator pos:start="125:18" pos:end="125:18">=</operator>  <call pos:start="125:21" pos:end="125:52"><name pos:start="125:21" pos:end="125:46"><name pos:start="125:21" pos:end="125:24">link</name><operator pos:start="125:25" pos:end="125:26">-&gt;</operator><name pos:start="125:27" pos:end="125:32">srcpad</name><operator pos:start="125:33" pos:end="125:34">-&gt;</operator><name pos:start="125:35" pos:end="125:46">config_props</name></name><argument_list pos:start="125:47" pos:end="125:52">(<argument pos:start="125:48" pos:end="125:51"><expr pos:start="125:48" pos:end="125:51"><name pos:start="125:48" pos:end="125:51">link</name></expr></argument>)</argument_list></call><operator pos:start="125:53" pos:end="125:53">)</operator> <operator pos:start="125:55" pos:end="125:55">&lt;</operator> <literal type="number" pos:start="125:57" pos:end="125:57">0</literal></expr>)</condition><block type="pseudo" pos:start="127:13" pos:end="127:23"><block_content pos:start="127:13" pos:end="127:23">

            <return pos:start="127:13" pos:end="127:23">return <expr pos:start="127:20" pos:end="127:22"><name pos:start="127:20" pos:end="127:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="135:5" pos:end="155:5"><if pos:start="135:5" pos:end="139:5">if <condition pos:start="135:8" pos:end="135:42">(<expr pos:start="135:9" pos:end="135:41"><name pos:start="135:9" pos:end="135:13">flags</name> <operator pos:start="135:15" pos:end="135:15">&amp;</operator> <name pos:start="135:17" pos:end="135:41">AV_BUFFERSRC_FLAG_NO_COPY</name></expr>)</condition> <block pos:start="135:44" pos:end="139:5">{<block_content pos:start="137:9" pos:end="137:21">

        <expr_stmt pos:start="137:9" pos:end="137:21"><expr pos:start="137:9" pos:end="137:20"><name pos:start="137:9" pos:end="137:11">buf</name> <operator pos:start="137:13" pos:end="137:13">=</operator> <name pos:start="137:15" pos:end="137:20">picref</name></expr>;</expr_stmt>

    </block_content>}</block></if> <else pos:start="139:7" pos:end="155:5">else <block pos:start="139:12" pos:end="155:5">{<block_content pos:start="141:5" pos:end="151:48">

    <expr_stmt pos:start="141:5" pos:end="143:72"><expr pos:start="141:5" pos:end="143:71"><name pos:start="141:5" pos:end="141:7">buf</name> <operator pos:start="141:9" pos:end="141:9">=</operator> <call pos:start="141:11" pos:end="143:71"><name pos:start="141:11" pos:end="141:35">avfilter_get_video_buffer</name><argument_list pos:start="141:36" pos:end="143:71">(<argument pos:start="141:37" pos:end="141:43"><expr pos:start="141:37" pos:end="141:43"><name pos:start="141:37" pos:end="141:43">outlink</name></expr></argument>, <argument pos:start="141:46" pos:end="141:58"><expr pos:start="141:46" pos:end="141:58"><name pos:start="141:46" pos:end="141:58">AV_PERM_WRITE</name></expr></argument>,

                                    <argument pos:start="143:37" pos:end="143:52"><expr pos:start="143:37" pos:end="143:52"><name pos:start="143:37" pos:end="143:52"><name pos:start="143:37" pos:end="143:42">picref</name><operator pos:start="143:43" pos:end="143:44">-&gt;</operator><name pos:start="143:45" pos:end="143:49">video</name><operator pos:start="143:50" pos:end="143:51">-&gt;</operator><name pos:start="143:52" pos:end="143:52">w</name></name></expr></argument>, <argument pos:start="143:55" pos:end="143:70"><expr pos:start="143:55" pos:end="143:70"><name pos:start="143:55" pos:end="143:70"><name pos:start="143:55" pos:end="143:60">picref</name><operator pos:start="143:61" pos:end="143:62">-&gt;</operator><name pos:start="143:63" pos:end="143:67">video</name><operator pos:start="143:68" pos:end="143:69">-&gt;</operator><name pos:start="143:70" pos:end="143:70">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="145:5" pos:end="149:70"><expr pos:start="145:5" pos:end="149:69"><call pos:start="145:5" pos:end="149:69"><name pos:start="145:5" pos:end="145:17">av_image_copy</name><argument_list pos:start="145:18" pos:end="149:69">(<argument pos:start="145:19" pos:end="145:27"><expr pos:start="145:19" pos:end="145:27"><name pos:start="145:19" pos:end="145:27"><name pos:start="145:19" pos:end="145:21">buf</name><operator pos:start="145:22" pos:end="145:23">-&gt;</operator><name pos:start="145:24" pos:end="145:27">data</name></name></expr></argument>, <argument pos:start="145:30" pos:end="145:42"><expr pos:start="145:30" pos:end="145:42"><name pos:start="145:30" pos:end="145:42"><name pos:start="145:30" pos:end="145:32">buf</name><operator pos:start="145:33" pos:end="145:34">-&gt;</operator><name pos:start="145:35" pos:end="145:42">linesize</name></name></expr></argument>,

                  <argument pos:start="147:19" pos:end="147:37"><expr pos:start="147:19" pos:end="147:37"><operator pos:start="147:19" pos:end="147:19">(</operator><name pos:start="147:20" pos:end="147:23">void</name><operator pos:start="147:24" pos:end="147:24">*</operator><operator pos:start="147:25" pos:end="147:25">)</operator><name pos:start="147:26" pos:end="147:37"><name pos:start="147:26" pos:end="147:31">picref</name><operator pos:start="147:32" pos:end="147:33">-&gt;</operator><name pos:start="147:34" pos:end="147:37">data</name></name></expr></argument>, <argument pos:start="147:40" pos:end="147:55"><expr pos:start="147:40" pos:end="147:55"><name pos:start="147:40" pos:end="147:55"><name pos:start="147:40" pos:end="147:45">picref</name><operator pos:start="147:46" pos:end="147:47">-&gt;</operator><name pos:start="147:48" pos:end="147:55">linesize</name></name></expr></argument>,

                  <argument pos:start="149:19" pos:end="149:32"><expr pos:start="149:19" pos:end="149:32"><name pos:start="149:19" pos:end="149:32"><name pos:start="149:19" pos:end="149:24">picref</name><operator pos:start="149:25" pos:end="149:26">-&gt;</operator><name pos:start="149:27" pos:end="149:32">format</name></name></expr></argument>, <argument pos:start="149:35" pos:end="149:50"><expr pos:start="149:35" pos:end="149:50"><name pos:start="149:35" pos:end="149:50"><name pos:start="149:35" pos:end="149:40">picref</name><operator pos:start="149:41" pos:end="149:42">-&gt;</operator><name pos:start="149:43" pos:end="149:47">video</name><operator pos:start="149:48" pos:end="149:49">-&gt;</operator><name pos:start="149:50" pos:end="149:50">w</name></name></expr></argument>, <argument pos:start="149:53" pos:end="149:68"><expr pos:start="149:53" pos:end="149:68"><name pos:start="149:53" pos:end="149:68"><name pos:start="149:53" pos:end="149:58">picref</name><operator pos:start="149:59" pos:end="149:60">-&gt;</operator><name pos:start="149:61" pos:end="149:65">video</name><operator pos:start="149:66" pos:end="149:67">-&gt;</operator><name pos:start="149:68" pos:end="149:68">h</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <expr_stmt pos:start="151:5" pos:end="151:48"><expr pos:start="151:5" pos:end="151:47"><call pos:start="151:5" pos:end="151:47"><name pos:start="151:5" pos:end="151:34">avfilter_copy_buffer_ref_props</name><argument_list pos:start="151:35" pos:end="151:47">(<argument pos:start="151:36" pos:end="151:38"><expr pos:start="151:36" pos:end="151:38"><name pos:start="151:36" pos:end="151:38">buf</name></expr></argument>, <argument pos:start="151:41" pos:end="151:46"><expr pos:start="151:41" pos:end="151:46"><name pos:start="151:41" pos:end="151:46">picref</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    </block_content>}</block></else></if_stmt>



    <if_stmt pos:start="159:5" pos:end="167:5"><if pos:start="159:5" pos:end="167:5">if <condition pos:start="159:8" pos:end="159:76">(<expr pos:start="159:9" pos:end="159:75"><operator pos:start="159:9" pos:end="159:9">(</operator><name pos:start="159:10" pos:end="159:12">ret</name> <operator pos:start="159:14" pos:end="159:14">=</operator> <call pos:start="159:16" pos:end="159:70"><name pos:start="159:16" pos:end="159:36">av_fifo_generic_write</name><argument_list pos:start="159:37" pos:end="159:70">(<argument pos:start="159:38" pos:end="159:44"><expr pos:start="159:38" pos:end="159:44"><name pos:start="159:38" pos:end="159:44"><name pos:start="159:38" pos:end="159:38">c</name><operator pos:start="159:39" pos:end="159:40">-&gt;</operator><name pos:start="159:41" pos:end="159:44">fifo</name></name></expr></argument>, <argument pos:start="159:47" pos:end="159:50"><expr pos:start="159:47" pos:end="159:50"><operator pos:start="159:47" pos:end="159:47">&amp;</operator><name pos:start="159:48" pos:end="159:50">buf</name></expr></argument>, <argument pos:start="159:53" pos:end="159:63"><expr pos:start="159:53" pos:end="159:63"><sizeof pos:start="159:53" pos:end="159:63">sizeof<argument_list pos:start="159:59" pos:end="159:63">(<argument pos:start="159:60" pos:end="159:62"><expr pos:start="159:60" pos:end="159:62"><name pos:start="159:60" pos:end="159:62">buf</name></expr></argument>)</argument_list></sizeof></expr></argument>, <argument pos:start="159:66" pos:end="159:69"><expr pos:start="159:66" pos:end="159:69"><name pos:start="159:66" pos:end="159:69">NULL</name></expr></argument>)</argument_list></call><operator pos:start="159:71" pos:end="159:71">)</operator> <operator pos:start="159:73" pos:end="159:73">&lt;</operator> <literal type="number" pos:start="159:75" pos:end="159:75">0</literal></expr>)</condition> <block pos:start="159:78" pos:end="167:5">{<block_content pos:start="161:9" pos:end="165:19">

        <if_stmt pos:start="161:9" pos:end="163:39"><if pos:start="161:9" pos:end="163:39">if <condition pos:start="161:12" pos:end="161:26">(<expr pos:start="161:13" pos:end="161:25"><name pos:start="161:13" pos:end="161:15">buf</name> <operator pos:start="161:17" pos:end="161:18">!=</operator> <name pos:start="161:20" pos:end="161:25">picref</name></expr>)</condition><block type="pseudo" pos:start="163:13" pos:end="163:39"><block_content pos:start="163:13" pos:end="163:39">

            <expr_stmt pos:start="163:13" pos:end="163:39"><expr pos:start="163:13" pos:end="163:38"><call pos:start="163:13" pos:end="163:38"><name pos:start="163:13" pos:end="163:33">avfilter_unref_buffer</name><argument_list pos:start="163:34" pos:end="163:38">(<argument pos:start="163:35" pos:end="163:37"><expr pos:start="163:35" pos:end="163:37"><name pos:start="163:35" pos:end="163:37">buf</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <return pos:start="165:9" pos:end="165:19">return <expr pos:start="165:16" pos:end="165:18"><name pos:start="165:16" pos:end="165:18">ret</name></expr>;</return>

    </block_content>}</block></if></if_stmt>

    <expr_stmt pos:start="169:5" pos:end="169:30"><expr pos:start="169:5" pos:end="169:29"><name pos:start="169:5" pos:end="169:25"><name pos:start="169:5" pos:end="169:5">c</name><operator pos:start="169:6" pos:end="169:7">-&gt;</operator><name pos:start="169:8" pos:end="169:25">nb_failed_requests</name></name> <operator pos:start="169:27" pos:end="169:27">=</operator> <literal type="number" pos:start="169:29" pos:end="169:29">0</literal></expr>;</expr_stmt>



    <return pos:start="173:5" pos:end="173:13">return <expr pos:start="173:12" pos:end="173:12"><literal type="number" pos:start="173:12" pos:end="173:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
