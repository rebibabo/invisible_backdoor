<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/21835.c" pos:tabs="8"><function pos:start="1:1" pos:end="165:1"><type pos:start="1:1" pos:end="1:11"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:11">void</name></type> <name pos:start="1:13" pos:end="1:30">uhci_ioport_writew</name><parameter_list pos:start="1:31" pos:end="1:73">(<parameter pos:start="1:32" pos:end="1:43"><decl pos:start="1:32" pos:end="1:43"><type pos:start="1:32" pos:end="1:43"><name pos:start="1:32" pos:end="1:35">void</name> <modifier pos:start="1:37" pos:end="1:37">*</modifier></type><name pos:start="1:38" pos:end="1:43">opaque</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:58"><decl pos:start="1:46" pos:end="1:58"><type pos:start="1:46" pos:end="1:58"><name pos:start="1:46" pos:end="1:53">uint32_t</name></type> <name pos:start="1:55" pos:end="1:58">addr</name></decl></parameter>, <parameter pos:start="1:61" pos:end="1:72"><decl pos:start="1:61" pos:end="1:72"><type pos:start="1:61" pos:end="1:72"><name pos:start="1:61" pos:end="1:68">uint32_t</name></type> <name pos:start="1:70" pos:end="1:72">val</name></decl></parameter>)</parameter_list>

<block pos:start="3:1" pos:end="165:1">{<block_content pos:start="5:5" pos:end="163:5">

    <decl_stmt pos:start="5:5" pos:end="5:26"><decl pos:start="5:5" pos:end="5:25"><type pos:start="5:5" pos:end="5:15"><name pos:start="5:5" pos:end="5:13">UHCIState</name> <modifier pos:start="5:15" pos:end="5:15">*</modifier></type><name pos:start="5:16" pos:end="5:16">s</name> <init pos:start="5:18" pos:end="5:25">= <expr pos:start="5:20" pos:end="5:25"><name pos:start="5:20" pos:end="5:25">opaque</name></expr></init></decl>;</decl_stmt>



    <expr_stmt pos:start="9:5" pos:end="9:17"><expr pos:start="9:5" pos:end="9:16"><name pos:start="9:5" pos:end="9:8">addr</name> <operator pos:start="9:10" pos:end="9:11">&amp;=</operator> <literal type="number" pos:start="9:13" pos:end="9:16">0x1f</literal></expr>;</expr_stmt>

    <expr_stmt pos:start="11:5" pos:end="11:42"><expr pos:start="11:5" pos:end="11:41"><call pos:start="11:5" pos:end="11:41"><name pos:start="11:5" pos:end="11:30">trace_usb_uhci_mmio_writew</name><argument_list pos:start="11:31" pos:end="11:41">(<argument pos:start="11:32" pos:end="11:35"><expr pos:start="11:32" pos:end="11:35"><name pos:start="11:32" pos:end="11:35">addr</name></expr></argument>, <argument pos:start="11:38" pos:end="11:40"><expr pos:start="11:38" pos:end="11:40"><name pos:start="11:38" pos:end="11:40">val</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>



    <switch pos:start="15:5" pos:end="163:5">switch<condition pos:start="15:11" pos:end="15:16">(<expr pos:start="15:12" pos:end="15:15"><name pos:start="15:12" pos:end="15:15">addr</name></expr>)</condition> <block pos:start="15:18" pos:end="163:5">{<block_content pos:start="17:5" pos:end="161:14">

    <case pos:start="17:5" pos:end="17:14">case <expr pos:start="17:10" pos:end="17:13"><literal type="number" pos:start="17:10" pos:end="17:13">0x00</literal></expr>:</case>

        <if_stmt pos:start="19:9" pos:end="37:9"><if pos:start="19:9" pos:end="33:9">if <condition pos:start="19:12" pos:end="19:59">(<expr pos:start="19:13" pos:end="19:58"><operator pos:start="19:13" pos:end="19:13">(</operator><name pos:start="19:14" pos:end="19:16">val</name> <operator pos:start="19:18" pos:end="19:18">&amp;</operator> <name pos:start="19:20" pos:end="19:30">UHCI_CMD_RS</name><operator pos:start="19:31" pos:end="19:31">)</operator> <operator pos:start="19:33" pos:end="19:34">&amp;&amp;</operator> <operator pos:start="19:36" pos:end="19:36">!</operator><operator pos:start="19:37" pos:end="19:37">(</operator><name pos:start="19:38" pos:end="19:43"><name pos:start="19:38" pos:end="19:38">s</name><operator pos:start="19:39" pos:end="19:40">-&gt;</operator><name pos:start="19:41" pos:end="19:43">cmd</name></name> <operator pos:start="19:45" pos:end="19:45">&amp;</operator> <name pos:start="19:47" pos:end="19:57">UHCI_CMD_RS</name><operator pos:start="19:58" pos:end="19:58">)</operator></expr>)</condition> <block pos:start="19:61" pos:end="33:9">{<block_content pos:start="23:13" pos:end="31:44">

            <comment type="block" pos:start="21:13" pos:end="21:40">/* start frame processing */</comment>

            <expr_stmt pos:start="23:13" pos:end="23:44"><expr pos:start="23:13" pos:end="23:43"><call pos:start="23:13" pos:end="23:43"><name pos:start="23:13" pos:end="23:41">trace_usb_uhci_schedule_start</name><argument_list pos:start="23:42" pos:end="23:43">()</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="25:13" pos:end="27:57"><expr pos:start="25:13" pos:end="27:56"><name pos:start="25:13" pos:end="25:26"><name pos:start="25:13" pos:end="25:13">s</name><operator pos:start="25:14" pos:end="25:15">-&gt;</operator><name pos:start="25:16" pos:end="25:26">expire_time</name></name> <operator pos:start="25:28" pos:end="25:28">=</operator> <call pos:start="25:30" pos:end="25:56"><name pos:start="25:30" pos:end="25:46">qemu_get_clock_ns</name><argument_list pos:start="25:47" pos:end="25:56">(<argument pos:start="25:48" pos:end="25:55"><expr pos:start="25:48" pos:end="25:55"><name pos:start="25:48" pos:end="25:55">vm_clock</name></expr></argument>)</argument_list></call> <operator pos:start="25:58" pos:end="25:58">+</operator>

                <operator pos:start="27:17" pos:end="27:17">(</operator><call pos:start="27:18" pos:end="27:36"><name pos:start="27:18" pos:end="27:34">get_ticks_per_sec</name><argument_list pos:start="27:35" pos:end="27:36">()</argument_list></call> <operator pos:start="27:38" pos:end="27:38">/</operator> <name pos:start="27:40" pos:end="27:55">FRAME_TIMER_FREQ</name><operator pos:start="27:56" pos:end="27:56">)</operator></expr>;</expr_stmt>

            <expr_stmt pos:start="29:13" pos:end="29:72"><expr pos:start="29:13" pos:end="29:71"><call pos:start="29:13" pos:end="29:71"><name pos:start="29:13" pos:end="29:26">qemu_mod_timer</name><argument_list pos:start="29:27" pos:end="29:71">(<argument pos:start="29:28" pos:end="29:41"><expr pos:start="29:28" pos:end="29:41"><name pos:start="29:28" pos:end="29:41"><name pos:start="29:28" pos:end="29:28">s</name><operator pos:start="29:29" pos:end="29:30">-&gt;</operator><name pos:start="29:31" pos:end="29:41">frame_timer</name></name></expr></argument>, <argument pos:start="29:44" pos:end="29:70"><expr pos:start="29:44" pos:end="29:70"><call pos:start="29:44" pos:end="29:70"><name pos:start="29:44" pos:end="29:60">qemu_get_clock_ns</name><argument_list pos:start="29:61" pos:end="29:70">(<argument pos:start="29:62" pos:end="29:69"><expr pos:start="29:62" pos:end="29:69"><name pos:start="29:62" pos:end="29:69">vm_clock</name></expr></argument>)</argument_list></call></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="31:13" pos:end="31:44"><expr pos:start="31:13" pos:end="31:43"><name pos:start="31:13" pos:end="31:21"><name pos:start="31:13" pos:end="31:13">s</name><operator pos:start="31:14" pos:end="31:15">-&gt;</operator><name pos:start="31:16" pos:end="31:21">status</name></name> <operator pos:start="31:23" pos:end="31:24">&amp;=</operator> <operator pos:start="31:26" pos:end="31:26">~</operator><name pos:start="31:27" pos:end="31:43">UHCI_STS_HCHALTED</name></expr>;</expr_stmt>

        </block_content>}</block></if> <if type="elseif" pos:start="33:11" pos:end="37:9">else if <condition pos:start="33:19" pos:end="33:40">(<expr pos:start="33:20" pos:end="33:39"><operator pos:start="33:20" pos:end="33:20">!</operator><operator pos:start="33:21" pos:end="33:21">(</operator><name pos:start="33:22" pos:end="33:24">val</name> <operator pos:start="33:26" pos:end="33:26">&amp;</operator> <name pos:start="33:28" pos:end="33:38">UHCI_CMD_RS</name><operator pos:start="33:39" pos:end="33:39">)</operator></expr>)</condition> <block pos:start="33:42" pos:end="37:9">{<block_content pos:start="35:13" pos:end="35:43">

            <expr_stmt pos:start="35:13" pos:end="35:43"><expr pos:start="35:13" pos:end="35:42"><name pos:start="35:13" pos:end="35:21"><name pos:start="35:13" pos:end="35:13">s</name><operator pos:start="35:14" pos:end="35:15">-&gt;</operator><name pos:start="35:16" pos:end="35:21">status</name></name> <operator pos:start="35:23" pos:end="35:24">|=</operator> <name pos:start="35:26" pos:end="35:42">UHCI_STS_HCHALTED</name></expr>;</expr_stmt>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="39:9" pos:end="61:9"><if pos:start="39:9" pos:end="61:9">if <condition pos:start="39:12" pos:end="39:34">(<expr pos:start="39:13" pos:end="39:33"><name pos:start="39:13" pos:end="39:15">val</name> <operator pos:start="39:17" pos:end="39:17">&amp;</operator> <name pos:start="39:19" pos:end="39:33">UHCI_CMD_GRESET</name></expr>)</condition> <block pos:start="39:36" pos:end="61:9">{<block_content pos:start="41:13" pos:end="59:19">

            <decl_stmt pos:start="41:13" pos:end="41:27"><decl pos:start="41:13" pos:end="41:26"><type pos:start="41:13" pos:end="41:22"><name pos:start="41:13" pos:end="41:20">UHCIPort</name> <modifier pos:start="41:22" pos:end="41:22">*</modifier></type><name pos:start="41:23" pos:end="41:26">port</name></decl>;</decl_stmt>

            <decl_stmt pos:start="43:13" pos:end="43:18"><decl pos:start="43:13" pos:end="43:17"><type pos:start="43:13" pos:end="43:15"><name pos:start="43:13" pos:end="43:15">int</name></type> <name pos:start="43:17" pos:end="43:17">i</name></decl>;</decl_stmt>



            <comment type="block" pos:start="47:13" pos:end="47:43">/* send reset on the USB bus */</comment>

            <for pos:start="49:13" pos:end="55:13">for<control pos:start="49:16" pos:end="49:41">(<init pos:start="49:17" pos:end="49:22"><expr pos:start="49:17" pos:end="49:21"><name pos:start="49:17" pos:end="49:17">i</name> <operator pos:start="49:19" pos:end="49:19">=</operator> <literal type="number" pos:start="49:21" pos:end="49:21">0</literal></expr>;</init> <condition pos:start="49:24" pos:end="49:36"><expr pos:start="49:24" pos:end="49:35"><name pos:start="49:24" pos:end="49:24">i</name> <operator pos:start="49:26" pos:end="49:26">&lt;</operator> <name pos:start="49:28" pos:end="49:35">NB_PORTS</name></expr>;</condition> <incr pos:start="49:38" pos:end="49:40"><expr pos:start="49:38" pos:end="49:40"><name pos:start="49:38" pos:end="49:38">i</name><operator pos:start="49:39" pos:end="49:40">++</operator></expr></incr>)</control> <block pos:start="49:43" pos:end="55:13">{<block_content pos:start="51:17" pos:end="53:49">

                <expr_stmt pos:start="51:17" pos:end="51:36"><expr pos:start="51:17" pos:end="51:35"><name pos:start="51:17" pos:end="51:20">port</name> <operator pos:start="51:22" pos:end="51:22">=</operator> <operator pos:start="51:24" pos:end="51:24">&amp;</operator><name pos:start="51:25" pos:end="51:35"><name pos:start="51:25" pos:end="51:25">s</name><operator pos:start="51:26" pos:end="51:27">-&gt;</operator><name pos:start="51:28" pos:end="51:32">ports</name><index pos:start="51:33" pos:end="51:35">[<expr pos:start="51:34" pos:end="51:34"><name pos:start="51:34" pos:end="51:34">i</name></expr>]</index></name></expr>;</expr_stmt>

                <expr_stmt pos:start="53:17" pos:end="53:49"><expr pos:start="53:17" pos:end="53:48"><call pos:start="53:17" pos:end="53:48"><name pos:start="53:17" pos:end="53:32">usb_device_reset</name><argument_list pos:start="53:33" pos:end="53:48">(<argument pos:start="53:34" pos:end="53:47"><expr pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:47"><name pos:start="53:34" pos:end="53:37">port</name><operator pos:start="53:38" pos:end="53:39">-&gt;</operator><name pos:start="53:40" pos:end="53:43">port</name><operator pos:start="53:44" pos:end="53:44">.</operator><name pos:start="53:45" pos:end="53:47">dev</name></name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            </block_content>}</block></for>

            <expr_stmt pos:start="57:13" pos:end="57:26"><expr pos:start="57:13" pos:end="57:25"><call pos:start="57:13" pos:end="57:25"><name pos:start="57:13" pos:end="57:22">uhci_reset</name><argument_list pos:start="57:23" pos:end="57:25">(<argument pos:start="57:24" pos:end="57:24"><expr pos:start="57:24" pos:end="57:24"><name pos:start="57:24" pos:end="57:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="59:13" pos:end="59:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <if_stmt pos:start="63:9" pos:end="69:9"><if pos:start="63:9" pos:end="69:9">if <condition pos:start="63:12" pos:end="63:35">(<expr pos:start="63:13" pos:end="63:34"><name pos:start="63:13" pos:end="63:15">val</name> <operator pos:start="63:17" pos:end="63:17">&amp;</operator> <name pos:start="63:19" pos:end="63:34">UHCI_CMD_HCRESET</name></expr>)</condition> <block pos:start="63:37" pos:end="69:9">{<block_content pos:start="65:13" pos:end="67:19">

            <expr_stmt pos:start="65:13" pos:end="65:26"><expr pos:start="65:13" pos:end="65:25"><call pos:start="65:13" pos:end="65:25"><name pos:start="65:13" pos:end="65:22">uhci_reset</name><argument_list pos:start="65:23" pos:end="65:25">(<argument pos:start="65:24" pos:end="65:24"><expr pos:start="65:24" pos:end="65:24"><name pos:start="65:24" pos:end="65:24">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:19">return;</return>

        </block_content>}</block></if></if_stmt>

        <expr_stmt pos:start="71:9" pos:end="71:21"><expr pos:start="71:9" pos:end="71:20"><name pos:start="71:9" pos:end="71:14"><name pos:start="71:9" pos:end="71:9">s</name><operator pos:start="71:10" pos:end="71:11">-&gt;</operator><name pos:start="71:12" pos:end="71:14">cmd</name></name> <operator pos:start="71:16" pos:end="71:16">=</operator> <name pos:start="71:18" pos:end="71:20">val</name></expr>;</expr_stmt>

        <break pos:start="73:9" pos:end="73:14">break;</break>

    <case pos:start="75:5" pos:end="75:14">case <expr pos:start="75:10" pos:end="75:13"><literal type="number" pos:start="75:10" pos:end="75:13">0x02</literal></expr>:</case>

        <expr_stmt pos:start="77:9" pos:end="77:26"><expr pos:start="77:9" pos:end="77:25"><name pos:start="77:9" pos:end="77:17"><name pos:start="77:9" pos:end="77:9">s</name><operator pos:start="77:10" pos:end="77:11">-&gt;</operator><name pos:start="77:12" pos:end="77:17">status</name></name> <operator pos:start="77:19" pos:end="77:20">&amp;=</operator> <operator pos:start="77:22" pos:end="77:22">~</operator><name pos:start="77:23" pos:end="77:25">val</name></expr>;</expr_stmt>

        <comment type="block" pos:start="79:9" pos:end="81:57">/* XXX: the chip spec is not coherent, so we add a hidden

           register to distinguish between IOC and SPD */</comment>

        <if_stmt pos:start="83:9" pos:end="85:27"><if pos:start="83:9" pos:end="85:27">if <condition pos:start="83:12" pos:end="83:34">(<expr pos:start="83:13" pos:end="83:33"><name pos:start="83:13" pos:end="83:15">val</name> <operator pos:start="83:17" pos:end="83:17">&amp;</operator> <name pos:start="83:19" pos:end="83:33">UHCI_STS_USBINT</name></expr>)</condition><block type="pseudo" pos:start="85:13" pos:end="85:27"><block_content pos:start="85:13" pos:end="85:27">

            <expr_stmt pos:start="85:13" pos:end="85:27"><expr pos:start="85:13" pos:end="85:26"><name pos:start="85:13" pos:end="85:22"><name pos:start="85:13" pos:end="85:13">s</name><operator pos:start="85:14" pos:end="85:15">-&gt;</operator><name pos:start="85:16" pos:end="85:22">status2</name></name> <operator pos:start="85:24" pos:end="85:24">=</operator> <literal type="number" pos:start="85:26" pos:end="85:26">0</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <expr_stmt pos:start="87:9" pos:end="87:27"><expr pos:start="87:9" pos:end="87:26"><call pos:start="87:9" pos:end="87:26"><name pos:start="87:9" pos:end="87:23">uhci_update_irq</name><argument_list pos:start="87:24" pos:end="87:26">(<argument pos:start="87:25" pos:end="87:25"><expr pos:start="87:25" pos:end="87:25"><name pos:start="87:25" pos:end="87:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="89:9" pos:end="89:14">break;</break>

    <case pos:start="91:5" pos:end="91:14">case <expr pos:start="91:10" pos:end="91:13"><literal type="number" pos:start="91:10" pos:end="91:13">0x04</literal></expr>:</case>

        <expr_stmt pos:start="93:9" pos:end="93:22"><expr pos:start="93:9" pos:end="93:21"><name pos:start="93:9" pos:end="93:15"><name pos:start="93:9" pos:end="93:9">s</name><operator pos:start="93:10" pos:end="93:11">-&gt;</operator><name pos:start="93:12" pos:end="93:15">intr</name></name> <operator pos:start="93:17" pos:end="93:17">=</operator> <name pos:start="93:19" pos:end="93:21">val</name></expr>;</expr_stmt>

        <expr_stmt pos:start="95:9" pos:end="95:27"><expr pos:start="95:9" pos:end="95:26"><call pos:start="95:9" pos:end="95:26"><name pos:start="95:9" pos:end="95:23">uhci_update_irq</name><argument_list pos:start="95:24" pos:end="95:26">(<argument pos:start="95:25" pos:end="95:25"><expr pos:start="95:25" pos:end="95:25"><name pos:start="95:25" pos:end="95:25">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <break pos:start="97:9" pos:end="97:14">break;</break>

    <case pos:start="99:5" pos:end="99:14">case <expr pos:start="99:10" pos:end="99:13"><literal type="number" pos:start="99:10" pos:end="99:13">0x06</literal></expr>:</case>

        <if_stmt pos:start="101:9" pos:end="103:35"><if pos:start="101:9" pos:end="103:35">if <condition pos:start="101:12" pos:end="101:42">(<expr pos:start="101:13" pos:end="101:41"><name pos:start="101:13" pos:end="101:21"><name pos:start="101:13" pos:end="101:13">s</name><operator pos:start="101:14" pos:end="101:15">-&gt;</operator><name pos:start="101:16" pos:end="101:21">status</name></name> <operator pos:start="101:23" pos:end="101:23">&amp;</operator> <name pos:start="101:25" pos:end="101:41">UHCI_STS_HCHALTED</name></expr>)</condition><block type="pseudo" pos:start="103:13" pos:end="103:35"><block_content pos:start="103:13" pos:end="103:35">

            <expr_stmt pos:start="103:13" pos:end="103:35"><expr pos:start="103:13" pos:end="103:34"><name pos:start="103:13" pos:end="103:20"><name pos:start="103:13" pos:end="103:13">s</name><operator pos:start="103:14" pos:end="103:15">-&gt;</operator><name pos:start="103:16" pos:end="103:20">frnum</name></name> <operator pos:start="103:22" pos:end="103:22">=</operator> <name pos:start="103:24" pos:end="103:26">val</name> <operator pos:start="103:28" pos:end="103:28">&amp;</operator> <literal type="number" pos:start="103:30" pos:end="103:34">0x7ff</literal></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <break pos:start="105:9" pos:end="105:14">break;</break>

    <case pos:start="107:5" pos:end="107:23">case <expr pos:start="107:10" pos:end="107:22"><literal type="number" pos:start="107:10" pos:end="107:13">0x10</literal> <operator pos:start="107:15" pos:end="107:17">...</operator> <literal type="number" pos:start="107:19" pos:end="107:22">0x1f</literal></expr>:</case>

        <block pos:start="109:9" pos:end="159:9">{<block_content pos:start="111:13" pos:end="157:57">

            <decl_stmt pos:start="111:13" pos:end="111:27"><decl pos:start="111:13" pos:end="111:26"><type pos:start="111:13" pos:end="111:22"><name pos:start="111:13" pos:end="111:20">UHCIPort</name> <modifier pos:start="111:22" pos:end="111:22">*</modifier></type><name pos:start="111:23" pos:end="111:26">port</name></decl>;</decl_stmt>

            <decl_stmt pos:start="113:13" pos:end="113:27"><decl pos:start="113:13" pos:end="113:26"><type pos:start="113:13" pos:end="113:23"><name pos:start="113:13" pos:end="113:21">USBDevice</name> <modifier pos:start="113:23" pos:end="113:23">*</modifier></type><name pos:start="113:24" pos:end="113:26">dev</name></decl>;</decl_stmt>

            <decl_stmt pos:start="115:13" pos:end="115:18"><decl pos:start="115:13" pos:end="115:17"><type pos:start="115:13" pos:end="115:15"><name pos:start="115:13" pos:end="115:15">int</name></type> <name pos:start="115:17" pos:end="115:17">n</name></decl>;</decl_stmt>



            <expr_stmt pos:start="119:13" pos:end="119:32"><expr pos:start="119:13" pos:end="119:31"><name pos:start="119:13" pos:end="119:13">n</name> <operator pos:start="119:15" pos:end="119:15">=</operator> <operator pos:start="119:17" pos:end="119:17">(</operator><name pos:start="119:18" pos:end="119:21">addr</name> <operator pos:start="119:23" pos:end="119:24">&gt;&gt;</operator> <literal type="number" pos:start="119:26" pos:end="119:26">1</literal><operator pos:start="119:27" pos:end="119:27">)</operator> <operator pos:start="119:29" pos:end="119:29">&amp;</operator> <literal type="number" pos:start="119:31" pos:end="119:31">7</literal></expr>;</expr_stmt>

            <if_stmt pos:start="121:13" pos:end="123:23"><if pos:start="121:13" pos:end="123:23">if <condition pos:start="121:16" pos:end="121:30">(<expr pos:start="121:17" pos:end="121:29"><name pos:start="121:17" pos:end="121:17">n</name> <operator pos:start="121:19" pos:end="121:20">&gt;=</operator> <name pos:start="121:22" pos:end="121:29">NB_PORTS</name></expr>)</condition><block type="pseudo" pos:start="123:17" pos:end="123:23"><block_content pos:start="123:17" pos:end="123:23">

                <return pos:start="123:17" pos:end="123:23">return;</return></block_content></block></if></if_stmt>

            <expr_stmt pos:start="125:13" pos:end="125:32"><expr pos:start="125:13" pos:end="125:31"><name pos:start="125:13" pos:end="125:16">port</name> <operator pos:start="125:18" pos:end="125:18">=</operator> <operator pos:start="125:20" pos:end="125:20">&amp;</operator><name pos:start="125:21" pos:end="125:31"><name pos:start="125:21" pos:end="125:21">s</name><operator pos:start="125:22" pos:end="125:23">-&gt;</operator><name pos:start="125:24" pos:end="125:28">ports</name><index pos:start="125:29" pos:end="125:31">[<expr pos:start="125:30" pos:end="125:30"><name pos:start="125:30" pos:end="125:30">n</name></expr>]</index></name></expr>;</expr_stmt>

            <expr_stmt pos:start="127:13" pos:end="127:33"><expr pos:start="127:13" pos:end="127:32"><name pos:start="127:13" pos:end="127:15">dev</name> <operator pos:start="127:17" pos:end="127:17">=</operator> <name pos:start="127:19" pos:end="127:32"><name pos:start="127:19" pos:end="127:22">port</name><operator pos:start="127:23" pos:end="127:24">-&gt;</operator><name pos:start="127:25" pos:end="127:28">port</name><operator pos:start="127:29" pos:end="127:29">.</operator><name pos:start="127:30" pos:end="127:32">dev</name></name></expr>;</expr_stmt>

            <if_stmt pos:start="129:13" pos:end="141:13"><if pos:start="129:13" pos:end="141:13">if <condition pos:start="129:16" pos:end="129:37">(<expr pos:start="129:17" pos:end="129:36"><name pos:start="129:17" pos:end="129:19">dev</name> <operator pos:start="129:21" pos:end="129:22">&amp;&amp;</operator> <name pos:start="129:24" pos:end="129:36"><name pos:start="129:24" pos:end="129:26">dev</name><operator pos:start="129:27" pos:end="129:28">-&gt;</operator><name pos:start="129:29" pos:end="129:36">attached</name></name></expr>)</condition> <block pos:start="129:39" pos:end="141:13">{<block_content pos:start="133:17" pos:end="139:17">

                <comment type="block" pos:start="131:17" pos:end="131:32">/* port reset */</comment>

                <if_stmt pos:start="133:17" pos:end="139:17"><if pos:start="133:17" pos:end="139:17">if <condition pos:start="133:20" pos:end="135:54">( <expr pos:start="133:22" pos:end="135:52"><operator pos:start="133:22" pos:end="133:22">(</operator><name pos:start="133:23" pos:end="133:25">val</name> <operator pos:start="133:27" pos:end="133:27">&amp;</operator> <name pos:start="133:29" pos:end="133:43">UHCI_PORT_RESET</name><operator pos:start="133:44" pos:end="133:44">)</operator> <operator pos:start="133:46" pos:end="133:47">&amp;&amp;</operator>

                     <operator pos:start="135:22" pos:end="135:22">!</operator><operator pos:start="135:23" pos:end="135:23">(</operator><name pos:start="135:24" pos:end="135:33"><name pos:start="135:24" pos:end="135:27">port</name><operator pos:start="135:28" pos:end="135:29">-&gt;</operator><name pos:start="135:30" pos:end="135:33">ctrl</name></name> <operator pos:start="135:35" pos:end="135:35">&amp;</operator> <name pos:start="135:37" pos:end="135:51">UHCI_PORT_RESET</name><operator pos:start="135:52" pos:end="135:52">)</operator></expr> )</condition> <block pos:start="135:56" pos:end="139:17">{<block_content pos:start="137:21" pos:end="137:42">

                    <expr_stmt pos:start="137:21" pos:end="137:42"><expr pos:start="137:21" pos:end="137:41"><call pos:start="137:21" pos:end="137:41"><name pos:start="137:21" pos:end="137:36">usb_device_reset</name><argument_list pos:start="137:37" pos:end="137:41">(<argument pos:start="137:38" pos:end="137:40"><expr pos:start="137:38" pos:end="137:40"><name pos:start="137:38" pos:end="137:40">dev</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

                </block_content>}</block></if></if_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="143:13" pos:end="143:46"><expr pos:start="143:13" pos:end="143:45"><name pos:start="143:13" pos:end="143:22"><name pos:start="143:13" pos:end="143:16">port</name><operator pos:start="143:17" pos:end="143:18">-&gt;</operator><name pos:start="143:19" pos:end="143:22">ctrl</name></name> <operator pos:start="143:24" pos:end="143:25">&amp;=</operator> <name pos:start="143:27" pos:end="143:45">UHCI_PORT_READ_ONLY</name></expr>;</expr_stmt>

            <comment type="block" pos:start="145:13" pos:end="145:66">/* enabled may only be set if a device is connected */</comment>

            <if_stmt pos:start="147:13" pos:end="151:13"><if pos:start="147:13" pos:end="151:13">if <condition pos:start="147:16" pos:end="147:46">(<expr pos:start="147:17" pos:end="147:45"><operator pos:start="147:17" pos:end="147:17">!</operator><operator pos:start="147:18" pos:end="147:18">(</operator><name pos:start="147:19" pos:end="147:28"><name pos:start="147:19" pos:end="147:22">port</name><operator pos:start="147:23" pos:end="147:24">-&gt;</operator><name pos:start="147:25" pos:end="147:28">ctrl</name></name> <operator pos:start="147:30" pos:end="147:30">&amp;</operator> <name pos:start="147:32" pos:end="147:44">UHCI_PORT_CCS</name><operator pos:start="147:45" pos:end="147:45">)</operator></expr>)</condition> <block pos:start="147:48" pos:end="151:13">{<block_content pos:start="149:17" pos:end="149:37">

                <expr_stmt pos:start="149:17" pos:end="149:37"><expr pos:start="149:17" pos:end="149:36"><name pos:start="149:17" pos:end="149:19">val</name> <operator pos:start="149:21" pos:end="149:22">&amp;=</operator> <operator pos:start="149:24" pos:end="149:24">~</operator><name pos:start="149:25" pos:end="149:36">UHCI_PORT_EN</name></expr>;</expr_stmt>

            </block_content>}</block></if></if_stmt>

            <expr_stmt pos:start="153:13" pos:end="153:55"><expr pos:start="153:13" pos:end="153:54"><name pos:start="153:13" pos:end="153:22"><name pos:start="153:13" pos:end="153:16">port</name><operator pos:start="153:17" pos:end="153:18">-&gt;</operator><name pos:start="153:19" pos:end="153:22">ctrl</name></name> <operator pos:start="153:24" pos:end="153:25">|=</operator> <operator pos:start="153:27" pos:end="153:27">(</operator><name pos:start="153:28" pos:end="153:30">val</name> <operator pos:start="153:32" pos:end="153:32">&amp;</operator> <operator pos:start="153:34" pos:end="153:34">~</operator><name pos:start="153:35" pos:end="153:53">UHCI_PORT_READ_ONLY</name><operator pos:start="153:54" pos:end="153:54">)</operator></expr>;</expr_stmt>

            <comment type="block" pos:start="155:13" pos:end="155:67">/* some bits are reset when a '1' is written to them */</comment>

            <expr_stmt pos:start="157:13" pos:end="157:57"><expr pos:start="157:13" pos:end="157:56"><name pos:start="157:13" pos:end="157:22"><name pos:start="157:13" pos:end="157:16">port</name><operator pos:start="157:17" pos:end="157:18">-&gt;</operator><name pos:start="157:19" pos:end="157:22">ctrl</name></name> <operator pos:start="157:24" pos:end="157:25">&amp;=</operator> <operator pos:start="157:27" pos:end="157:27">~</operator><operator pos:start="157:28" pos:end="157:28">(</operator><name pos:start="157:29" pos:end="157:31">val</name> <operator pos:start="157:33" pos:end="157:33">&amp;</operator> <name pos:start="157:35" pos:end="157:55">UHCI_PORT_WRITE_CLEAR</name><operator pos:start="157:56" pos:end="157:56">)</operator></expr>;</expr_stmt>

        </block_content>}</block>

        <break pos:start="161:9" pos:end="161:14">break;</break>

    </block_content>}</block></switch>

</block_content>}</block></function>
</unit>
