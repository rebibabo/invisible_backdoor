<?xml version="1.0" encoding="UTF-8" standalone="yes"?>
<unit xmlns="http://www.srcML.org/srcML/src" xmlns:pos="http://www.srcML.org/srcML/position" revision="1.0.0" language="C" filename="dataset/ropgen/aug/1/27028.c" pos:tabs="8"><function pos:start="1:1" pos:end="83:1"><type pos:start="1:1" pos:end="1:10"><specifier pos:start="1:1" pos:end="1:6">static</specifier> <name pos:start="1:8" pos:end="1:10">int</name></type> <name pos:start="1:12" pos:end="1:24">asf_read_seek</name><parameter_list pos:start="1:25" pos:end="3:48">(<parameter pos:start="1:26" pos:end="1:43"><decl pos:start="1:26" pos:end="1:43"><type pos:start="1:26" pos:end="1:43"><name pos:start="1:26" pos:end="1:40">AVFormatContext</name> <modifier pos:start="1:42" pos:end="1:42">*</modifier></type><name pos:start="1:43" pos:end="1:43">s</name></decl></parameter>, <parameter pos:start="1:46" pos:end="1:61"><decl pos:start="1:46" pos:end="1:61"><type pos:start="1:46" pos:end="1:61"><name pos:start="1:46" pos:end="1:48">int</name></type> <name pos:start="1:50" pos:end="1:61">stream_index</name></decl></parameter>,

                         <parameter pos:start="3:26" pos:end="3:36"><decl pos:start="3:26" pos:end="3:36"><type pos:start="3:26" pos:end="3:36"><name pos:start="3:26" pos:end="3:32">int64_t</name></type> <name pos:start="3:34" pos:end="3:36">pts</name></decl></parameter>, <parameter pos:start="3:39" pos:end="3:47"><decl pos:start="3:39" pos:end="3:47"><type pos:start="3:39" pos:end="3:47"><name pos:start="3:39" pos:end="3:41">int</name></type> <name pos:start="3:43" pos:end="3:47">flags</name></decl></parameter>)</parameter_list>

<block pos:start="5:1" pos:end="83:1">{<block_content pos:start="7:5" pos:end="81:13">

    <decl_stmt pos:start="7:5" pos:end="7:35"><decl pos:start="7:5" pos:end="7:34"><type pos:start="7:5" pos:end="7:16"><name pos:start="7:5" pos:end="7:14">ASFContext</name> <modifier pos:start="7:16" pos:end="7:16">*</modifier></type><name pos:start="7:17" pos:end="7:19">asf</name> <init pos:start="7:21" pos:end="7:34">= <expr pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:34"><name pos:start="7:23" pos:end="7:23">s</name><operator pos:start="7:24" pos:end="7:25">-&gt;</operator><name pos:start="7:26" pos:end="7:34">priv_data</name></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="9:5" pos:end="9:47"><decl pos:start="9:5" pos:end="9:46"><type pos:start="9:5" pos:end="9:14"><name pos:start="9:5" pos:end="9:12">AVStream</name> <modifier pos:start="9:14" pos:end="9:14">*</modifier></type><name pos:start="9:15" pos:end="9:16">st</name>    <init pos:start="9:21" pos:end="9:46">= <expr pos:start="9:23" pos:end="9:46"><name pos:start="9:23" pos:end="9:46"><name pos:start="9:23" pos:end="9:23">s</name><operator pos:start="9:24" pos:end="9:25">-&gt;</operator><name pos:start="9:26" pos:end="9:32">streams</name><index pos:start="9:33" pos:end="9:46">[<expr pos:start="9:34" pos:end="9:45"><name pos:start="9:34" pos:end="9:45">stream_index</name></expr>]</index></name></expr></init></decl>;</decl_stmt>

    <decl_stmt pos:start="11:5" pos:end="11:16"><decl pos:start="11:5" pos:end="11:15"><type pos:start="11:5" pos:end="11:11"><name pos:start="11:5" pos:end="11:11">int64_t</name></type> <name pos:start="11:13" pos:end="11:15">pos</name></decl>;</decl_stmt>

    <decl_stmt pos:start="13:5" pos:end="13:14"><decl pos:start="13:5" pos:end="13:13"><type pos:start="13:5" pos:end="13:7"><name pos:start="13:5" pos:end="13:7">int</name></type> <name pos:start="13:9" pos:end="13:13">index</name></decl>;</decl_stmt>



    <if_stmt pos:start="17:5" pos:end="19:18"><if pos:start="17:5" pos:end="19:18">if <condition pos:start="17:8" pos:end="17:28">(<expr pos:start="17:9" pos:end="17:27"><name pos:start="17:9" pos:end="17:22"><name pos:start="17:9" pos:end="17:9">s</name><operator pos:start="17:10" pos:end="17:11">-&gt;</operator><name pos:start="17:12" pos:end="17:22">packet_size</name></name> <operator pos:start="17:24" pos:end="17:25">&lt;=</operator> <literal type="number" pos:start="17:27" pos:end="17:27">0</literal></expr>)</condition><block type="pseudo" pos:start="19:9" pos:end="19:18"><block_content pos:start="19:9" pos:end="19:18">

        <return pos:start="19:9" pos:end="19:18">return <expr pos:start="19:16" pos:end="19:17"><operator pos:start="19:16" pos:end="19:16">-</operator><literal type="number" pos:start="19:17" pos:end="19:17">1</literal></expr>;</return></block_content></block></if></if_stmt>



    <comment type="block" pos:start="23:5" pos:end="23:57">/* Try using the protocol's read_seek if available */</comment>

    <if_stmt pos:start="25:5" pos:end="37:5"><if pos:start="25:5" pos:end="37:5">if <condition pos:start="25:8" pos:end="25:14">(<expr pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:13"><name pos:start="25:9" pos:end="25:9">s</name><operator pos:start="25:10" pos:end="25:11">-&gt;</operator><name pos:start="25:12" pos:end="25:13">pb</name></name></expr>)</condition> <block pos:start="25:16" pos:end="37:5">{<block_content pos:start="27:9" pos:end="35:23">

        <decl_stmt pos:start="27:9" pos:end="27:66"><decl pos:start="27:9" pos:end="27:65"><type pos:start="27:9" pos:end="27:11"><name pos:start="27:9" pos:end="27:11">int</name></type> <name pos:start="27:13" pos:end="27:15">ret</name> <init pos:start="27:17" pos:end="27:65">= <expr pos:start="27:19" pos:end="27:65"><call pos:start="27:19" pos:end="27:65"><name pos:start="27:19" pos:end="27:32">avio_seek_time</name><argument_list pos:start="27:33" pos:end="27:65">(<argument pos:start="27:34" pos:end="27:38"><expr pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:38"><name pos:start="27:34" pos:end="27:34">s</name><operator pos:start="27:35" pos:end="27:36">-&gt;</operator><name pos:start="27:37" pos:end="27:38">pb</name></name></expr></argument>, <argument pos:start="27:41" pos:end="27:52"><expr pos:start="27:41" pos:end="27:52"><name pos:start="27:41" pos:end="27:52">stream_index</name></expr></argument>, <argument pos:start="27:55" pos:end="27:57"><expr pos:start="27:55" pos:end="27:57"><name pos:start="27:55" pos:end="27:57">pts</name></expr></argument>, <argument pos:start="27:60" pos:end="27:64"><expr pos:start="27:60" pos:end="27:64"><name pos:start="27:60" pos:end="27:64">flags</name></expr></argument>)</argument_list></call></expr></init></decl>;</decl_stmt>

        <if_stmt pos:start="29:9" pos:end="31:32"><if pos:start="29:9" pos:end="31:32">if <condition pos:start="29:12" pos:end="29:21">(<expr pos:start="29:13" pos:end="29:20"><name pos:start="29:13" pos:end="29:15">ret</name> <operator pos:start="29:17" pos:end="29:18">&gt;=</operator> <literal type="number" pos:start="29:20" pos:end="29:20">0</literal></expr>)</condition><block type="pseudo" pos:start="31:13" pos:end="31:32"><block_content pos:start="31:13" pos:end="31:32">

            <expr_stmt pos:start="31:13" pos:end="31:32"><expr pos:start="31:13" pos:end="31:31"><call pos:start="31:13" pos:end="31:31"><name pos:start="31:13" pos:end="31:28">asf_reset_header</name><argument_list pos:start="31:29" pos:end="31:31">(<argument pos:start="31:30" pos:end="31:30"><expr pos:start="31:30" pos:end="31:30"><name pos:start="31:30" pos:end="31:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>

        <if_stmt pos:start="33:9" pos:end="35:23"><if pos:start="33:9" pos:end="35:23">if <condition pos:start="33:12" pos:end="33:35">(<expr pos:start="33:13" pos:end="33:34"><name pos:start="33:13" pos:end="33:15">ret</name> <operator pos:start="33:17" pos:end="33:18">!=</operator> <call pos:start="33:20" pos:end="33:34"><name pos:start="33:20" pos:end="33:26">AVERROR</name><argument_list pos:start="33:27" pos:end="33:34">(<argument pos:start="33:28" pos:end="33:33"><expr pos:start="33:28" pos:end="33:33"><name pos:start="33:28" pos:end="33:33">ENOSYS</name></expr></argument>)</argument_list></call></expr>)</condition><block type="pseudo" pos:start="35:13" pos:end="35:23"><block_content pos:start="35:13" pos:end="35:23">

            <return pos:start="35:13" pos:end="35:23">return <expr pos:start="35:20" pos:end="35:22"><name pos:start="35:20" pos:end="35:22">ret</name></expr>;</return></block_content></block></if></if_stmt>

    </block_content>}</block></if></if_stmt>



    <if_stmt pos:start="41:5" pos:end="43:48"><if pos:start="41:5" pos:end="43:48">if <condition pos:start="41:8" pos:end="41:25">(<expr pos:start="41:9" pos:end="41:24"><operator pos:start="41:9" pos:end="41:9">!</operator><name pos:start="41:10" pos:end="41:24"><name pos:start="41:10" pos:end="41:12">asf</name><operator pos:start="41:13" pos:end="41:14">-&gt;</operator><name pos:start="41:15" pos:end="41:24">index_read</name></name></expr>)</condition><block type="pseudo" pos:start="43:9" pos:end="43:48"><block_content pos:start="43:9" pos:end="43:48">

        <expr_stmt pos:start="43:9" pos:end="43:48"><expr pos:start="43:9" pos:end="43:47"><call pos:start="43:9" pos:end="43:47"><name pos:start="43:9" pos:end="43:30">asf_build_simple_index</name><argument_list pos:start="43:31" pos:end="43:47">(<argument pos:start="43:32" pos:end="43:32"><expr pos:start="43:32" pos:end="43:32"><name pos:start="43:32" pos:end="43:32">s</name></expr></argument>, <argument pos:start="43:35" pos:end="43:46"><expr pos:start="43:35" pos:end="43:46"><name pos:start="43:35" pos:end="43:46">stream_index</name></expr></argument>)</argument_list></call></expr>;</expr_stmt></block_content></block></if></if_stmt>



    <if_stmt pos:start="47:5" pos:end="71:5"><if pos:start="47:5" pos:end="71:5">if <condition pos:start="47:8" pos:end="47:47">(<expr pos:start="47:9" pos:end="47:46"><operator pos:start="47:9" pos:end="47:9">(</operator><name pos:start="47:10" pos:end="47:24"><name pos:start="47:10" pos:end="47:12">asf</name><operator pos:start="47:13" pos:end="47:14">-&gt;</operator><name pos:start="47:15" pos:end="47:24">index_read</name></name> <operator pos:start="47:26" pos:end="47:27">&amp;&amp;</operator> <name pos:start="47:29" pos:end="47:45"><name pos:start="47:29" pos:end="47:30">st</name><operator pos:start="47:31" pos:end="47:32">-&gt;</operator><name pos:start="47:33" pos:end="47:45">index_entries</name></name><operator pos:start="47:46" pos:end="47:46">)</operator></expr>)</condition> <block pos:start="47:49" pos:end="71:5">{<block_content pos:start="49:9" pos:end="69:9">

        <expr_stmt pos:start="49:9" pos:end="49:58"><expr pos:start="49:9" pos:end="49:57"><name pos:start="49:9" pos:end="49:13">index</name> <operator pos:start="49:15" pos:end="49:15">=</operator> <call pos:start="49:17" pos:end="49:57"><name pos:start="49:17" pos:end="49:41">av_index_search_timestamp</name><argument_list pos:start="49:42" pos:end="49:57">(<argument pos:start="49:43" pos:end="49:44"><expr pos:start="49:43" pos:end="49:44"><name pos:start="49:43" pos:end="49:44">st</name></expr></argument>, <argument pos:start="49:47" pos:end="49:49"><expr pos:start="49:47" pos:end="49:49"><name pos:start="49:47" pos:end="49:49">pts</name></expr></argument>, <argument pos:start="49:52" pos:end="49:56"><expr pos:start="49:52" pos:end="49:56"><name pos:start="49:52" pos:end="49:56">flags</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

        <if_stmt pos:start="51:9" pos:end="69:9"><if pos:start="51:9" pos:end="69:9">if <condition pos:start="51:12" pos:end="51:23">(<expr pos:start="51:13" pos:end="51:22"><name pos:start="51:13" pos:end="51:17">index</name> <operator pos:start="51:19" pos:end="51:20">&gt;=</operator> <literal type="number" pos:start="51:22" pos:end="51:22">0</literal></expr>)</condition> <block pos:start="51:25" pos:end="69:9">{<block_content pos:start="55:13" pos:end="67:21">

            <comment type="block" pos:start="53:13" pos:end="53:35">/* find the position */</comment>

            <expr_stmt pos:start="55:13" pos:end="55:47"><expr pos:start="55:13" pos:end="55:46"><name pos:start="55:13" pos:end="55:15">pos</name> <operator pos:start="55:17" pos:end="55:17">=</operator> <name pos:start="55:19" pos:end="55:42"><name pos:start="55:19" pos:end="55:20">st</name><operator pos:start="55:21" pos:end="55:22">-&gt;</operator><name pos:start="55:23" pos:end="55:35">index_entries</name><index pos:start="55:36" pos:end="55:42">[<expr pos:start="55:37" pos:end="55:41"><name pos:start="55:37" pos:end="55:41">index</name></expr>]</index></name><operator pos:start="55:43" pos:end="55:43">.</operator><name pos:start="55:44" pos:end="55:46">pos</name></expr>;</expr_stmt>



            <comment type="block" pos:start="59:13" pos:end="59:29">/* do the seek */</comment>

            <expr_stmt pos:start="61:13" pos:end="61:64"><expr pos:start="61:13" pos:end="61:63"><call pos:start="61:13" pos:end="61:63"><name pos:start="61:13" pos:end="61:18">av_log</name><argument_list pos:start="61:19" pos:end="61:63">(<argument pos:start="61:20" pos:end="61:20"><expr pos:start="61:20" pos:end="61:20"><name pos:start="61:20" pos:end="61:20">s</name></expr></argument>, <argument pos:start="61:23" pos:end="61:34"><expr pos:start="61:23" pos:end="61:34"><name pos:start="61:23" pos:end="61:34">AV_LOG_DEBUG</name></expr></argument>, <argument pos:start="61:37" pos:end="61:57"><expr pos:start="61:37" pos:end="61:57"><literal type="string" pos:start="61:37" pos:end="61:47">"SEEKTO: %"</literal><name pos:start="61:48" pos:end="61:53">PRId64</name><literal type="string" pos:start="61:54" pos:end="61:57">"\n"</literal></expr></argument>, <argument pos:start="61:60" pos:end="61:62"><expr pos:start="61:60" pos:end="61:62"><name pos:start="61:60" pos:end="61:62">pos</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="63:13" pos:end="63:44"><expr pos:start="63:13" pos:end="63:43"><call pos:start="63:13" pos:end="63:43"><name pos:start="63:13" pos:end="63:21">avio_seek</name><argument_list pos:start="63:22" pos:end="63:43">(<argument pos:start="63:23" pos:end="63:27"><expr pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:27"><name pos:start="63:23" pos:end="63:23">s</name><operator pos:start="63:24" pos:end="63:25">-&gt;</operator><name pos:start="63:26" pos:end="63:27">pb</name></name></expr></argument>, <argument pos:start="63:30" pos:end="63:32"><expr pos:start="63:30" pos:end="63:32"><name pos:start="63:30" pos:end="63:32">pos</name></expr></argument>, <argument pos:start="63:35" pos:end="63:42"><expr pos:start="63:35" pos:end="63:42"><name pos:start="63:35" pos:end="63:42">SEEK_SET</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <expr_stmt pos:start="65:13" pos:end="65:32"><expr pos:start="65:13" pos:end="65:31"><call pos:start="65:13" pos:end="65:31"><name pos:start="65:13" pos:end="65:28">asf_reset_header</name><argument_list pos:start="65:29" pos:end="65:31">(<argument pos:start="65:30" pos:end="65:30"><expr pos:start="65:30" pos:end="65:30"><name pos:start="65:30" pos:end="65:30">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

            <return pos:start="67:13" pos:end="67:21">return <expr pos:start="67:20" pos:end="67:20"><literal type="number" pos:start="67:20" pos:end="67:20">0</literal></expr>;</return>

        </block_content>}</block></if></if_stmt>

    </block_content>}</block></if></if_stmt>

    <comment type="block" pos:start="73:5" pos:end="73:45">/* no index or seeking by index failed */</comment>

    <if_stmt pos:start="75:5" pos:end="77:18"><if pos:start="75:5" pos:end="77:18">if <condition pos:start="75:8" pos:end="75:62">(<expr pos:start="75:9" pos:end="75:61"><call pos:start="75:9" pos:end="75:57"><name pos:start="75:9" pos:end="75:28">ff_seek_frame_binary</name><argument_list pos:start="75:29" pos:end="75:57">(<argument pos:start="75:30" pos:end="75:30"><expr pos:start="75:30" pos:end="75:30"><name pos:start="75:30" pos:end="75:30">s</name></expr></argument>, <argument pos:start="75:33" pos:end="75:44"><expr pos:start="75:33" pos:end="75:44"><name pos:start="75:33" pos:end="75:44">stream_index</name></expr></argument>, <argument pos:start="75:47" pos:end="75:49"><expr pos:start="75:47" pos:end="75:49"><name pos:start="75:47" pos:end="75:49">pts</name></expr></argument>, <argument pos:start="75:52" pos:end="75:56"><expr pos:start="75:52" pos:end="75:56"><name pos:start="75:52" pos:end="75:56">flags</name></expr></argument>)</argument_list></call> <operator pos:start="75:59" pos:end="75:59">&lt;</operator> <literal type="number" pos:start="75:61" pos:end="75:61">0</literal></expr>)</condition><block type="pseudo" pos:start="77:9" pos:end="77:18"><block_content pos:start="77:9" pos:end="77:18">

        <return pos:start="77:9" pos:end="77:18">return <expr pos:start="77:16" pos:end="77:17"><operator pos:start="77:16" pos:end="77:16">-</operator><literal type="number" pos:start="77:17" pos:end="77:17">1</literal></expr>;</return></block_content></block></if></if_stmt>

    <expr_stmt pos:start="79:5" pos:end="79:24"><expr pos:start="79:5" pos:end="79:23"><call pos:start="79:5" pos:end="79:23"><name pos:start="79:5" pos:end="79:20">asf_reset_header</name><argument_list pos:start="79:21" pos:end="79:23">(<argument pos:start="79:22" pos:end="79:22"><expr pos:start="79:22" pos:end="79:22"><name pos:start="79:22" pos:end="79:22">s</name></expr></argument>)</argument_list></call></expr>;</expr_stmt>

    <return pos:start="81:5" pos:end="81:13">return <expr pos:start="81:12" pos:end="81:12"><literal type="number" pos:start="81:12" pos:end="81:12">0</literal></expr>;</return>

</block_content>}</block></function>
</unit>
